{
  "schema":{
    "fields":[
      {
        "name":"index",
        "type":"integer"
      },
      {
        "name":"vuln_id",
        "type":"string"
      },
      {
        "name":"cwe_id",
        "type":"string"
      },
      {
        "name":"score",
        "type":"number"
      },
      {
        "name":"chain",
        "type":"string"
      },
      {
        "name":"dataset",
        "type":"string"
      },
      {
        "name":"summary",
        "type":"string"
      },
      {
        "name":"published_date",
        "type":"string"
      },
      {
        "name":"chain_len",
        "type":"integer"
      },
      {
        "name":"project",
        "type":"string"
      },
      {
        "name":"commit_href",
        "type":"string"
      },
      {
        "name":"commit_sha",
        "type":"string"
      },
      {
        "name":"patch",
        "type":"string"
      },
      {
        "name":"chain_ord",
        "type":"string"
      },
      {
        "name":"before_first_fix_commit",
        "type":"string"
      },
      {
        "name":"last_fix_commit",
        "type":"string"
      },
      {
        "name":"chain_ord_pos",
        "type":"number"
      },
      {
        "name":"commit_datetime",
        "type":"string"
      },
      {
        "name":"message",
        "type":"string"
      },
      {
        "name":"author",
        "type":"string"
      },
      {
        "name":"comments",
        "type":"string"
      },
      {
        "name":"stats",
        "type":"string"
      },
      {
        "name":"files",
        "type":"string"
      },
      {
        "name":"message_norm",
        "type":"string"
      },
      {
        "name":"language",
        "type":"string"
      },
      {
        "name":"entities",
        "type":"string"
      },
      {
        "name":"classification_level_1",
        "type":"string"
      },
      {
        "name":"classification_level_2",
        "type":"string"
      },
      {
        "name":"list_files",
        "type":"string"
      },
      {
        "name":"num_files",
        "type":"number"
      },
      {
        "name":"patch_content",
        "type":"string"
      },
      {
        "name":"code_diff",
        "type":"string"
      }
    ],
    "primaryKey":[
      "index"
    ],
    "pandas_version":"1.4.0"
  },
  "data":[
    {
      "index":0,
      "vuln_id":"GHSA-3872-f48p-pxqj",
      "cwe_id":"{'CWE-88', 'CWE-77'}",
      "score":8.8,
      "chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/d83672a3e7415da1490334e2c9431e5da1966842', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8'}",
      "dataset":"osv",
      "summary":"Improper Neutralization of Special Elements used in a Command ('Command Injection') in Weblate ### Impact\nWeblate didn't correctly sanitize some arguments passed to Git and Mercurial, which allowed changing their behavior in an unintended way.\n\n### Patches\n\nThe issues were fixed in the 4.11.1 release. The following commits are addressing it:\n\n* 35d59f1f040541c358cece0a8d4a63183ca919b8\n* d83672a3e7415da1490334e2c9431e5da1966842\n\n### Workarounds\n\nInstances in which untrusted users cannot create new components are not affected.\n\n### References\n* [SNYK-PYTHON-WEBLATE-2414088](https:\/\/security.snyk.io\/vuln\/SNYK-PYTHON-WEBLATE-2414088)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)",
      "published_date":"2022-03-04",
      "chain_len":2,
      "project":"https:\/\/github.com\/WeblateOrg\/weblate",
      "commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8",
      "commit_sha":"35d59f1f040541c358cece0a8d4a63183ca919b8",
      "patch":"MULTI",
      "chain_ord":"['35d59f1f040541c358cece0a8d4a63183ca919b8', 'd83672a3e7415da1490334e2c9431e5da1966842']",
      "before_first_fix_commit":"{'9a5a09781e5a19ab9a24878afb08c9fcafb21ca7'}",
      "last_fix_commit":"d83672a3e7415da1490334e2c9431e5da1966842",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/03\/2022, 07:25:01",
      "message":"vcs: Improve mercurial parameters handling\n\nMake sure that all user provided input is handled as expected.",
      "author":"Michal \u010ciha\u0159",
      "comments":null,
      "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
      "files":"{'weblate\/vcs\/mercurial.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/35d59f1f040541c358cece0a8d4a63183ca919b8\/weblate%2Fvcs%2Fmercurial.py', 'patch': '@@ -70,7 +70,7 @@ def check_config(self):\\n     @classmethod\\n     def _clone(cls, source: str, target: str, branch: str):\\n         \"\"\"Clone repository.\"\"\"\\n-        cls._popen([\"clone\", \"--branch\", branch, source, target])\\n+        cls._popen([\"clone\", f\"--branch={branch}\", \"--\", source, target])\\n \\n     def get_config(self, path):\\n         \"\"\"Read entry from configuration.\"\"\"\\n@@ -323,7 +323,7 @@ def on_branch(self, branch):\\n     def configure_branch(self, branch):\\n         \"\"\"Configure repository branch.\"\"\"\\n         if not self.on_branch(branch):\\n-            self.execute([\"update\", branch])\\n+            self.execute([\"update\", \"--\", branch])\\n         self.branch = branch\\n \\n     def describe(self):\\n@@ -343,7 +343,7 @@ def describe(self):\\n     def push(self, branch):\\n         \"\"\"Push given branch to remote repository.\"\"\"\\n         try:\\n-            self.execute([\"push\", \"-b\", self.branch])\\n+            self.execute([\"push\", f\"--branch={self.branch}\"])\\n         except RepositoryException as error:\\n             if error.retcode == 1:\\n                 # No changes found\\n@@ -363,7 +363,7 @@ def cleanup(self):\\n \\n     def update_remote(self):\\n         \"\"\"Update remote repository.\"\"\"\\n-        self.execute([\"pull\", \"--branch\", self.branch])\\n+        self.execute([\"pull\", f\"--branch={self.branch}\"])\\n         self.clean_revision_cache()\\n \\n     def parse_changed_files(self, lines: List[str]) -> Iterator[str]:'}}",
      "message_norm":"vcs: improve mercurial parameters handling\n\nmake sure that all user provided input is handled as expected.",
      "language":"en",
      "entities":"[('improve', 'ACTION', ''), ('user provided input', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['weblate\/vcs\/mercurial.py'])",
      "num_files":1.0,
      "patch_content":"From 35d59f1f040541c358cece0a8d4a63183ca919b8 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>\nDate: Thu, 3 Mar 2022 08:25:01 +0100\nSubject: [PATCH] vcs: Improve mercurial parameters handling\n\nMake sure that all user provided input is handled as expected.\n---\n weblate\/vcs\/mercurial.py | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/weblate\/vcs\/mercurial.py b\/weblate\/vcs\/mercurial.py\nindex 0399c1b0bae2..1131c1abd1e5 100644\n--- a\/weblate\/vcs\/mercurial.py\n+++ b\/weblate\/vcs\/mercurial.py\n@@ -70,7 +70,7 @@ def check_config(self):\n     @classmethod\n     def _clone(cls, source: str, target: str, branch: str):\n         \"\"\"Clone repository.\"\"\"\n-        cls._popen([\"clone\", \"--branch\", branch, source, target])\n+        cls._popen([\"clone\", f\"--branch={branch}\", \"--\", source, target])\n \n     def get_config(self, path):\n         \"\"\"Read entry from configuration.\"\"\"\n@@ -323,7 +323,7 @@ def on_branch(self, branch):\n     def configure_branch(self, branch):\n         \"\"\"Configure repository branch.\"\"\"\n         if not self.on_branch(branch):\n-            self.execute([\"update\", branch])\n+            self.execute([\"update\", \"--\", branch])\n         self.branch = branch\n \n     def describe(self):\n@@ -343,7 +343,7 @@ def describe(self):\n     def push(self, branch):\n         \"\"\"Push given branch to remote repository.\"\"\"\n         try:\n-            self.execute([\"push\", \"-b\", self.branch])\n+            self.execute([\"push\", f\"--branch={self.branch}\"])\n         except RepositoryException as error:\n             if error.retcode == 1:\n                 # No changes found\n@@ -363,7 +363,7 @@ def cleanup(self):\n \n     def update_remote(self):\n         \"\"\"Update remote repository.\"\"\"\n-        self.execute([\"pull\", \"--branch\", self.branch])\n+        self.execute([\"pull\", f\"--branch={self.branch}\"])\n         self.clean_revision_cache()\n \n     def parse_changed_files(self, lines: List[str]) -> Iterator[str]:",
      "code_diff":"@@ -70,7 +70,7 @@ def check_config(self):\n     @classmethod\n     def _clone(cls, source: str, target: str, branch: str):\n         \"\"\"Clone repository.\"\"\"\n-        cls._popen([\"clone\", \"--branch\", branch, source, target])\n+        cls._popen([\"clone\", f\"--branch={branch}\", \"--\", source, target])\n \n     def get_config(self, path):\n         \"\"\"Read entry from configuration.\"\"\"\n@@ -323,7 +323,7 @@ def on_branch(self, branch):\n     def configure_branch(self, branch):\n         \"\"\"Configure repository branch.\"\"\"\n         if not self.on_branch(branch):\n-            self.execute([\"update\", branch])\n+            self.execute([\"update\", \"--\", branch])\n         self.branch = branch\n \n     def describe(self):\n@@ -343,7 +343,7 @@ def describe(self):\n     def push(self, branch):\n         \"\"\"Push given branch to remote repository.\"\"\"\n         try:\n-            self.execute([\"push\", \"-b\", self.branch])\n+            self.execute([\"push\", f\"--branch={self.branch}\"])\n         except RepositoryException as error:\n             if error.retcode == 1:\n                 # No changes found\n@@ -363,7 +363,7 @@ def cleanup(self):\n \n     def update_remote(self):\n         \"\"\"Update remote repository.\"\"\"\n-        self.execute([\"pull\", \"--branch\", self.branch])\n+        self.execute([\"pull\", f\"--branch={self.branch}\"])\n         self.clean_revision_cache()\n \n     def parse_changed_files(self, lines: List[str]) -> Iterator[str]:"
    }
  ]
}