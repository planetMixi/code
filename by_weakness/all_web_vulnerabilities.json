{
  "schema":{
    "fields":[
      {
        "name":"index",
        "type":"integer"
      },
      {
        "name":"vuln_id",
        "type":"string"
      },
      {
        "name":"cwe_id",
        "type":"string"
      },
      {
        "name":"score",
        "type":"number"
      },
      {
        "name":"chain",
        "type":"string"
      },
      {
        "name":"dataset",
        "type":"string"
      },
      {
        "name":"summary",
        "type":"string"
      },
      {
        "name":"published_date",
        "type":"string"
      },
      {
        "name":"chain_len",
        "type":"integer"
      },
      {
        "name":"project",
        "type":"string"
      },
      {
        "name":"commit_href",
        "type":"string"
      },
      {
        "name":"commit_sha",
        "type":"string"
      },
      {
        "name":"patch",
        "type":"string"
      },
      {
        "name":"chain_ord",
        "type":"string"
      },
      {
        "name":"before_first_fix_commit",
        "type":"string"
      },
      {
        "name":"last_fix_commit",
        "type":"string"
      },
      {
        "name":"chain_ord_pos",
        "type":"number"
      },
      {
        "name":"commit_datetime",
        "type":"string"
      },
      {
        "name":"message",
        "type":"string"
      },
      {
        "name":"author",
        "type":"string"
      },
      {
        "name":"comments",
        "type":"string"
      },
      {
        "name":"stats",
        "type":"string"
      },
      {
        "name":"files",
        "type":"string"
      },
      {
        "name":"message_norm",
        "type":"string"
      },
      {
        "name":"language",
        "type":"string"
      },
      {
        "name":"entities",
        "type":"string"
      },
      {
        "name":"classification_level_1",
        "type":"string"
      },
      {
        "name":"classification_level_2",
        "type":"string"
      },
      {
        "name":"list_files",
        "type":"string"
      },
      {
        "name":"num_files",
        "type":"number"
      },
      {
        "name":"patch_content",
        "type":"string"
      },
      {
        "name":"code_diff",
        "type":"string"
      }
    ],
    "primaryKey":[
      "index"
    ],
    "pandas_version":"1.4.0"
  },
  "data":[
    {
      "index":0,
      "vuln_id":"GHSA-2xw8-j43j-5vxp",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/elgg\/elgg\/commit\/c30b17bf75256ed3fcc84e2083147cc3951423d0'}",
      "dataset":"osv",
      "summary":"elgg is vulnerable to Cross-site Scripting elgg is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "published_date":"2022-01-06",
      "chain_len":1,
      "project":"https:\/\/github.com\/elgg\/elgg",
      "commit_href":"https:\/\/github.com\/elgg\/elgg\/commit\/c30b17bf75256ed3fcc84e2083147cc3951423d0",
      "commit_sha":"c30b17bf75256ed3fcc84e2083147cc3951423d0",
      "patch":"SINGLE",
      "chain_ord":"['c30b17bf75256ed3fcc84e2083147cc3951423d0']",
      "before_first_fix_commit":"{'ea72485b6a08f30f452b8e5425310f2b3546050c'}",
      "last_fix_commit":"c30b17bf75256ed3fcc84e2083147cc3951423d0",
      "chain_ord_pos":1.0,
      "commit_datetime":"12\/06\/2021, 14:39:10",
      "message":"fix(reported_content): sanitize report URLs",
      "author":"Jer\u00f4me Bakker",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'mod\/reportedcontent\/actions\/reportedcontent\/add.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Elgg\/Elgg\/raw\/c30b17bf75256ed3fcc84e2083147cc3951423d0\/mod%2Freportedcontent%2Factions%2Freportedcontent%2Fadd.php', 'patch': '@@ -18,7 +18,7 @@\\n $report = new ElggReportedContent();\\n $report->owner_guid = elgg_get_logged_in_user_guid();\\n $report->title = $title;\\n-$report->address = $address;\\n+$report->address = elgg_normalize_site_url($address);\\n $report->description = $description;\\n $report->access_id = $access;'}}",
      "message_norm":"fix(reported_content): sanitize report urls",
      "language":"ro",
      "entities":"[('fix(reported_content', 'ACTION', ''), ('sanitize', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['mod\/reportedcontent\/actions\/reportedcontent\/add.php'])",
      "num_files":1.0,
      "patch_content":"From c30b17bf75256ed3fcc84e2083147cc3951423d0 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Jer=C3=B4me=20Bakker?= <jeabakker@coldtrick.com>\nDate: Mon, 6 Dec 2021 15:39:10 +0100\nSubject: [PATCH] fix(reported_content): sanitize report URLs\n\n---\n mod\/reportedcontent\/actions\/reportedcontent\/add.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/mod\/reportedcontent\/actions\/reportedcontent\/add.php b\/mod\/reportedcontent\/actions\/reportedcontent\/add.php\nindex f45a500eb52..dff05fb6fec 100644\n--- a\/mod\/reportedcontent\/actions\/reportedcontent\/add.php\n+++ b\/mod\/reportedcontent\/actions\/reportedcontent\/add.php\n@@ -18,7 +18,7 @@\n $report = new ElggReportedContent();\n $report->owner_guid = elgg_get_logged_in_user_guid();\n $report->title = $title;\n-$report->address = $address;\n+$report->address = elgg_normalize_site_url($address);\n $report->description = $description;\n $report->access_id = $access;",
      "code_diff":"@@ -18,7 +18,7 @@\n $report = new ElggReportedContent();\n $report->owner_guid = elgg_get_logged_in_user_guid();\n $report->title = $title;\n-$report->address = $address;\n+$report->address = elgg_normalize_site_url($address);\n $report->description = $description;\n $report->access_id = $access;"
    },
    {
      "index":1,
      "vuln_id":"GHSA-pjpc-87mp-4332",
      "cwe_id":"{'CWE-79'}",
      "score":9.6,
      "chain":"{'https:\/\/github.com\/mautic\/mautic\/commit\/462eb596027fd949efbf9ac5cb2b376805e9d246'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting vulnerability in Mautic's tracking pixel functionality ### Impact\n\nMautic allows you to track open rates by using tracking pixels. \nThe tracking information is stored together with extra metadata of the tracking request.\n\nThe output isn't sufficiently filtered when showing the metadata of the tracking information, which may lead to a vulnerable situation.\n\n### Patches\n\nPlease upgrade to 4.3.0\n\n### Workarounds\nNone.\n\n### References\n* Internally tracked under MST-38\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@mautic.org](mailto:security@mautic.org)",
      "published_date":"2022-05-25",
      "chain_len":1,
      "project":"https:\/\/github.com\/mautic\/mautic",
      "commit_href":"https:\/\/github.com\/mautic\/mautic\/commit\/462eb596027fd949efbf9ac5cb2b376805e9d246",
      "commit_sha":"462eb596027fd949efbf9ac5cb2b376805e9d246",
      "patch":"SINGLE",
      "chain_ord":"['462eb596027fd949efbf9ac5cb2b376805e9d246']",
      "before_first_fix_commit":"{'d1518c24e45515d710d4e488bc33a14027b64194'}",
      "last_fix_commit":"462eb596027fd949efbf9ac5cb2b376805e9d246",
      "chain_ord_pos":1.0,
      "commit_datetime":"05\/23\/2022, 11:55:13",
      "message":"Merge pull request from GHSA-pjpc-87mp-4332\n\n* sanitise user agent before displaying\n\n* Update app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php\n\nCo-authored-by: John Linhart <admin@escope.cz>\n\n* removed obsolete use statement\n\nCo-authored-by: John Linhart <admin@escope.cz>",
      "author":"mollux",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
      "files":"{'app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mautic\/mautic\/raw\/462eb596027fd949efbf9ac5cb2b376805e9d246\/app%2Fbundles%2FEmailBundle%2FViews%2FSubscribedEvents%2FTimeline%2Findex.html.php', 'patch': \"@@ -8,6 +8,7 @@\\n  *\\n  * @license     GNU\/GPLv3 http:\/\/www.gnu.org\/licenses\/gpl-3.0.html\\n  *\/\\n+\\n if ($item = ((isset($event['extra'])) ? $event['extra']['stat'] : false)): ?>\\n     <p>\\n         <?php if (!empty($item['isFailed'])) : ?>\\n@@ -63,7 +64,7 @@\\n             endif;\\n             ?>\\n             <?php if ($counter > 1): ?><hr\/><?php endif; ?>\\n-            <strong><?php echo $view['date']->toText($detail['datetime'], 'UTC'); ?><\/strong><br\/><?php echo $detail['useragent']; ?>\\n+            <strong><?php echo $view['date']->toText($detail['datetime'], 'UTC'); ?><\/strong><br\/><?php echo $view->escape($detail['useragent']); ?>\\n             <?php ++$counter; ?>\\n         <?php endforeach; ?>\\n         <?php\"}}",
      "message_norm":"merge pull request from ghsa-pjpc-87mp-4332\n\n* sanitise user agent before displaying\n\n* update app\/bundles\/emailbundle\/views\/subscribedevents\/timeline\/index.html.php\n\nco-authored-by: john linhart <admin@escope.cz>\n\n* removed obsolete use statement\n\nco-authored-by: john linhart <admin@escope.cz>",
      "language":"en",
      "entities":"[('ghsa-pjpc-87mp-4332', 'VULNID', 'GHSA'), ('sanitise', 'SECWORD', ''), ('update', 'ACTION', ''), ('admin@escope.cz', 'SECWORD', ''), ('removed', 'ACTION', ''), ('admin@escope.cz', 'EMAIL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php'])",
      "num_files":1.0,
      "patch_content":"From 462eb596027fd949efbf9ac5cb2b376805e9d246 Mon Sep 17 00:00:00 2001\nFrom: mollux <mattias.michaux@dropsolid.com>\nDate: Mon, 23 May 2022 13:55:13 +0200\nSubject: [PATCH] Merge pull request from GHSA-pjpc-87mp-4332\n\n* sanitise user agent before displaying\n\n* Update app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php\n\nCo-authored-by: John Linhart <admin@escope.cz>\n\n* removed obsolete use statement\n\nCo-authored-by: John Linhart <admin@escope.cz>\n---\n ...\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php b\/app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php\nindex a7613b3bc89..d74a1d91384 100755\n--- a\/app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php\n+++ b\/app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php\n@@ -8,6 +8,7 @@\n  *\n  * @license     GNU\/GPLv3 http:\/\/www.gnu.org\/licenses\/gpl-3.0.html\n  *\/\n+\n if ($item = ((isset($event['extra'])) ? $event['extra']['stat'] : false)): ?>\n     <p>\n         <?php if (!empty($item['isFailed'])) : ?>\n@@ -63,7 +64,7 @@\n             endif;\n             ?>\n             <?php if ($counter > 1): ?><hr\/><?php endif; ?>\n-            <strong><?php echo $view['date']->toText($detail['datetime'], 'UTC'); ?><\/strong><br\/><?php echo $detail['useragent']; ?>\n+            <strong><?php echo $view['date']->toText($detail['datetime'], 'UTC'); ?><\/strong><br\/><?php echo $view->escape($detail['useragent']); ?>\n             <?php ++$counter; ?>\n         <?php endforeach; ?>\n         <?php",
      "code_diff":"@@ -8,6 +8,7 @@\n  *\n  * @license     GNU\/GPLv3 http:\/\/www.gnu.org\/licenses\/gpl-3.0.html\n  *\/\n+\n if ($item = ((isset($event['extra'])) ? $event['extra']['stat'] : false)): ?>\n     <p>\n         <?php if (!empty($item['isFailed'])) : ?>\n@@ -63,7 +64,7 @@\n             endif;\n             ?>\n             <?php if ($counter > 1): ?><hr\/><?php endif; ?>\n-            <strong><?php echo $view['date']->toText($detail['datetime'], 'UTC'); ?><\/strong><br\/><?php echo $detail['useragent']; ?>\n+            <strong><?php echo $view['date']->toText($detail['datetime'], 'UTC'); ?><\/strong><br\/><?php echo $view->escape($detail['useragent']); ?>\n             <?php ++$counter; ?>\n         <?php endforeach; ?>\n         <?php"
    },
    {
      "index":2,
      "vuln_id":"GHSA-5x33-h32w-6vr2",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/e8632a4ad0b4da3763cbbe5949594aa449b483bb'}",
      "dataset":"osv",
      "summary":"Cross site-scripting (XSS) moodle The filter in the tag manager required extra sanitizing to prevent a reflected XSS risk. This affects 3.9 to 3.9.1, 3.8 to 3.8.4, 3.7 to 3.7.7, 3.5 to 3.5.13 and earlier unsupported versions. Fixed in 3.9.2, 3.8.5, 3.7.8 and 3.5.14.",
      "published_date":"2021-03-29",
      "chain_len":1,
      "project":"https:\/\/github.com\/moodle\/moodle",
      "commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/e8632a4ad0b4da3763cbbe5949594aa449b483bb",
      "commit_sha":"e8632a4ad0b4da3763cbbe5949594aa449b483bb",
      "patch":"SINGLE",
      "chain_ord":"['e8632a4ad0b4da3763cbbe5949594aa449b483bb']",
      "before_first_fix_commit":"{'630078eb4a189a17378ea6cf19be989da2114c1c'}",
      "last_fix_commit":"e8632a4ad0b4da3763cbbe5949594aa449b483bb",
      "chain_ord_pos":1.0,
      "commit_datetime":"08\/04\/2020, 10:04:27",
      "message":"MDL-69340 tag: Correct the filter input HTML in the tag manager",
      "author":"Michael Hawkins",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'tag\/manage.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/e8632a4ad0b4da3763cbbe5949594aa449b483bb\/tag%2Fmanage.php', 'patch': '@@ -211,7 +211,7 @@\\n print(\\'<div class=\"tag-management-form generalbox\"><label class=\"accesshide\" for=\"id_tagfilter\">\\'. get_string(\\'search\\') .\\'<\/label>\\'.\\n     \\'<input type=\"hidden\" name=\"tc\" value=\"\\'.$tagcollid.\\'\" \/>\\'.\\n     \\'<input type=\"hidden\" name=\"perpage\" value=\"\\'.$perpage.\\'\" \/>\\'.\\n-    \\'<input id=\"id_tagfilter\" name=\"filter\" type=\"text\" value=\\' . s($filter) . \\'>\\'.\\n+    \\'<input id=\"id_tagfilter\" name=\"filter\" type=\"text\" value=\"\\' . s($filter) . \\'\">\\'.\\n     \\'<input value=\"\\'. s(get_string(\\'search\\')) .\\'\" type=\"submit\" class=\"btn btn-secondary\"> \\'.\\n     ($filter !== \\'\\' ? html_writer::link(new moodle_url($PAGE->url, array(\\'filter\\' => null)),\\n         get_string(\\'resetfilter\\', \\'tag\\'), array(\\'class\\' => \\'resetfilterlink\\')) : \\'\\').'}}",
      "message_norm":"mdl-69340 tag: correct the filter input html in the tag manager",
      "language":"en",
      "entities":null,
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['tag\/manage.php'])",
      "num_files":1.0,
      "patch_content":"From e8632a4ad0b4da3763cbbe5949594aa449b483bb Mon Sep 17 00:00:00 2001\nFrom: Michael Hawkins <michaelh@moodle.com>\nDate: Tue, 4 Aug 2020 18:04:27 +0800\nSubject: [PATCH] MDL-69340 tag: Correct the filter input HTML in the tag\n manager\n\n---\n tag\/manage.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/tag\/manage.php b\/tag\/manage.php\nindex 3f757628c6f9e..b2d35df0e3e04 100644\n--- a\/tag\/manage.php\n+++ b\/tag\/manage.php\n@@ -211,7 +211,7 @@\n print('<div class=\"tag-management-form generalbox\"><label class=\"accesshide\" for=\"id_tagfilter\">'. get_string('search') .'<\/label>'.\n     '<input type=\"hidden\" name=\"tc\" value=\"'.$tagcollid.'\" \/>'.\n     '<input type=\"hidden\" name=\"perpage\" value=\"'.$perpage.'\" \/>'.\n-    '<input id=\"id_tagfilter\" name=\"filter\" type=\"text\" value=' . s($filter) . '>'.\n+    '<input id=\"id_tagfilter\" name=\"filter\" type=\"text\" value=\"' . s($filter) . '\">'.\n     '<input value=\"'. s(get_string('search')) .'\" type=\"submit\" class=\"btn btn-secondary\"> '.\n     ($filter !== '' ? html_writer::link(new moodle_url($PAGE->url, array('filter' => null)),\n         get_string('resetfilter', 'tag'), array('class' => 'resetfilterlink')) : '').",
      "code_diff":"@@ -211,7 +211,7 @@\n print('<div class=\"tag-management-form generalbox\"><label class=\"accesshide\" for=\"id_tagfilter\">'. get_string('search') .'<\/label>'.\n     '<input type=\"hidden\" name=\"tc\" value=\"'.$tagcollid.'\" \/>'.\n     '<input type=\"hidden\" name=\"perpage\" value=\"'.$perpage.'\" \/>'.\n-    '<input id=\"id_tagfilter\" name=\"filter\" type=\"text\" value=' . s($filter) . '>'.\n+    '<input id=\"id_tagfilter\" name=\"filter\" type=\"text\" value=\"' . s($filter) . '\">'.\n     '<input value=\"'. s(get_string('search')) .'\" type=\"submit\" class=\"btn btn-secondary\"> '.\n     ($filter !== '' ? html_writer::link(new moodle_url($PAGE->url, array('filter' => null)),\n         get_string('resetfilter', 'tag'), array('class' => 'resetfilterlink')) : '')."
    },
    {
      "index":3,
      "vuln_id":"GHSA-5f38-9jw2-6r6h",
      "cwe_id":"{'CWE-79', 'CWE-843'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/rooseveltframework\/teddy\/commit\/64c556717b4879bf8d4c30067cf6e70d899a3dc0'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in teddy Teddy is a readable and easy to learn templating language. This affects the package teddy before 0.5.9. A type confusion vulnerability can be used to bypass input sanitization when the model content is an array (instead of a string).",
      "published_date":"2021-10-12",
      "chain_len":1,
      "project":"https:\/\/github.com\/rooseveltframework\/teddy",
      "commit_href":"https:\/\/github.com\/rooseveltframework\/teddy\/commit\/64c556717b4879bf8d4c30067cf6e70d899a3dc0",
      "commit_sha":"64c556717b4879bf8d4c30067cf6e70d899a3dc0",
      "patch":"SINGLE",
      "chain_ord":"['64c556717b4879bf8d4c30067cf6e70d899a3dc0']",
      "before_first_fix_commit":"{'90387d97c7a8f458a08dd3b72a4b0574000af5f8', 'fea0b218069ff00f86f2b24f2fd08be01cd6b8c1'}",
      "last_fix_commit":"64c556717b4879bf8d4c30067cf6e70d899a3dc0",
      "chain_ord_pos":1.0,
      "commit_datetime":"10\/07\/2021, 01:27:38",
      "message":"Merge pull request #518 from kethinov\/refactor-escape-entities\n\nrefactor escape entities for better type checking",
      "author":"Eric Newport",
      "comments":null,
      "stats":"{'additions': 15, 'deletions': 4, 'total': 19}",
      "files":"{'utils.js': {'additions': 15, 'deletions': 4, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rooseveltframework\/teddy\/raw\/64c556717b4879bf8d4c30067cf6e70d899a3dc0\/utils.js', 'patch': \"@@ -96,10 +96,21 @@ function escapeEntities (value) {\\n   let i\\n   let j\\n \\n-  if (value === undefined || typeof value === 'boolean' || typeof value === 'object') { \/\/ Cannot escape on these values\\n-    return value\\n-  } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\\n-    return `${value}`\\n+  if (typeof value === 'object') { \/\/ Cannot escape on this value\\n+    if (!value) {\\n+      return false \/\/ it is falsey to return false\\n+    } else if (Array.isArray(value)) {\\n+      if (value.length === 0) {\\n+        return false \/\/ empty arrays are falsey\\n+      } else {\\n+        return '[Array]' \/\/ print that it is an array with content in it, but do not print the contents\\n+      }\\n+    }\\n+    return '[Object]' \/\/ just print that it is an object, do not print the contents\\n+  } else if (value === undefined) { \/\/ Cannot escape on this value\\n+    return false \/\/ undefined is falsey\\n+  } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\\n+    return value \/\/ if it's already a boolean or a number just return it\\n   } else {\\n     \/\/ Loop through value to find HTML entities\\n     for (i = 0; i < value.length; i++) {\"}}",
      "message_norm":"merge pull request #518 from kethinov\/refactor-escape-entities\n\nrefactor escape entities for better type checking",
      "language":"en",
      "entities":"[('#518', 'ISSUE', ''), ('escape', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['utils.js'])",
      "num_files":1.0,
      "patch_content":"From f51225de37295e73306281246eed808bb9867288 Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Mon, 4 Oct 2021 13:32:14 -0400\nSubject: [PATCH 1\/5] refactor escape entities for better type checking\n\n---\n utils.js | 11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex d8803272..7a2c3972 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -96,8 +96,15 @@ function escapeEntities (value) {\n   let i\n   let j\n \n-  if (value === undefined || typeof value === 'boolean' || typeof value === 'object') { \/\/ Cannot escape on these values\n-    return value\n+  if (typeof value === 'object') { \/\/ Cannot escape on this value\n+    if (Array.isArray(value) && value.length === 0) {\n+      return false \/\/ empty arrays are falsey\n+    }\n+    return true \/\/ assumed to be truthy if something is in it\n+  } else if (value === undefined) { \/\/ Cannot escape on this value\n+    return false \/\/ undefined is falsey\n+  } else if (typeof value === 'boolean') { \/\/ Cannot escape on this value\n+    return value \/\/ it's already a boolean so just return the boolean\n   } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\n     return `${value}`\n   } else {\n\nFrom 11c082c83d05ab1b359e8a51ef475604b149e742 Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Tue, 5 Oct 2021 13:37:33 -0400\nSubject: [PATCH 2\/5] remove unnecessary abstraction\n\n---\n utils.js | 6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex 7a2c3972..605c1f5b 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -103,10 +103,8 @@ function escapeEntities (value) {\n     return true \/\/ assumed to be truthy if something is in it\n   } else if (value === undefined) { \/\/ Cannot escape on this value\n     return false \/\/ undefined is falsey\n-  } else if (typeof value === 'boolean') { \/\/ Cannot escape on this value\n-    return value \/\/ it's already a boolean so just return the boolean\n-  } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\n-    return `${value}`\n+  } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\n+    return value \/\/ if it's already a boolean or a number just return it\n   } else {\n     \/\/ Loop through value to find HTML entities\n     for (i = 0; i < value.length; i++) {\n\nFrom 370c9abf6a15ed517d65e9a55cabc36911bbcd95 Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Tue, 5 Oct 2021 13:49:13 -0400\nSubject: [PATCH 3\/5] refactor to make output more clear\n\n---\n utils.js | 10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex 605c1f5b..00cb6761 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -97,10 +97,14 @@ function escapeEntities (value) {\n   let j\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n-    if (Array.isArray(value) && value.length === 0) {\n-      return false \/\/ empty arrays are falsey\n+    if (Array.isArray(value)) {\n+      if (value.length === 0) {\n+        return false \/\/ empty arrays are falsey\n+      } else {\n+        return '[Array]' \/\/ print that it is an array with content in it, but do not print the contents\n+      }\n     }\n-    return true \/\/ assumed to be truthy if something is in it\n+    return '[Object]' \/\/ just print that it is an object, do not print the contents\n   } else if (value === undefined) { \/\/ Cannot escape on this value\n     return false \/\/ undefined is falsey\n   } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\n\nFrom 1b09ea8280875fdc1333a7a372774fcd90161a1f Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Tue, 5 Oct 2021 13:55:10 -0400\nSubject: [PATCH 4\/5] catch all falsey values\n\n---\n utils.js | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex 00cb6761..08188707 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -97,7 +97,9 @@ function escapeEntities (value) {\n   let j\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n-    if (Array.isArray(value)) {\n+    if (!value) {\n+      return false \/\/ it is otherwise falsey\n+    } else if (Array.isArray(value)) {\n       if (value.length === 0) {\n         return false \/\/ empty arrays are falsey\n       } else {\n\nFrom fea0b218069ff00f86f2b24f2fd08be01cd6b8c1 Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Tue, 5 Oct 2021 13:56:04 -0400\nSubject: [PATCH 5\/5] clarify comment\n\n---\n utils.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex 08188707..b81be34d 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -98,7 +98,7 @@ function escapeEntities (value) {\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n     if (!value) {\n-      return false \/\/ it is otherwise falsey\n+      return false \/\/ it is falsey to return false\n     } else if (Array.isArray(value)) {\n       if (value.length === 0) {\n         return false \/\/ empty arrays are falsey",
      "code_diff":"@@ -96,8 +96,15 @@ function escapeEntities (value) {\n   let i\n   let j\n \n-  if (value === undefined || typeof value === 'boolean' || typeof value === 'object') { \/\/ Cannot escape on these values\n-    return value\n+  if (typeof value === 'object') { \/\/ Cannot escape on this value\n+    if (Array.isArray(value) && value.length === 0) {\n+      return false \/\/ empty arrays are falsey\n+    }\n+    return true \/\/ assumed to be truthy if something is in it\n+  } else if (value === undefined) { \/\/ Cannot escape on this value\n+    return false \/\/ undefined is falsey\n+  } else if (typeof value === 'boolean') { \/\/ Cannot escape on this value\n+    return value \/\/ it's already a boolean so just return the boolean\n   } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\n     return `${value}`\n   } else {\n\nFrom: Eric Newport <kethinov@gmail.com>\n\n utils.js | 6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\n@@ -103,10 +103,8 @@ function escapeEntities (value) {\n     return true \/\/ assumed to be truthy if something is in it\n   } else if (value === undefined) { \/\/ Cannot escape on this value\n     return false \/\/ undefined is falsey\n-  } else if (typeof value === 'boolean') { \/\/ Cannot escape on this value\n-    return value \/\/ it's already a boolean so just return the boolean\n-  } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\n-    return `${value}`\n+  } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\n+    return value \/\/ if it's already a boolean or a number just return it\n   } else {\n     \/\/ Loop through value to find HTML entities\n     for (i = 0; i < value.length; i++) {\n\nFrom: Eric Newport <kethinov@gmail.com>\n\n utils.js | 10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\n@@ -97,10 +97,14 @@ function escapeEntities (value) {\n   let j\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n-    if (Array.isArray(value) && value.length === 0) {\n-      return false \/\/ empty arrays are falsey\n+    if (Array.isArray(value)) {\n+      if (value.length === 0) {\n+        return false \/\/ empty arrays are falsey\n+      } else {\n+        return '[Array]' \/\/ print that it is an array with content in it, but do not print the contents\n+      }\n     }\n-    return true \/\/ assumed to be truthy if something is in it\n+    return '[Object]' \/\/ just print that it is an object, do not print the contents\n   } else if (value === undefined) { \/\/ Cannot escape on this value\n     return false \/\/ undefined is falsey\n   } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\n\nFrom: Eric Newport <kethinov@gmail.com>\n\n utils.js | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\n@@ -97,7 +97,9 @@ function escapeEntities (value) {\n   let j\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n-    if (Array.isArray(value)) {\n+    if (!value) {\n+      return false \/\/ it is otherwise falsey\n+    } else if (Array.isArray(value)) {\n       if (value.length === 0) {\n         return false \/\/ empty arrays are falsey\n       } else {\n\nFrom: Eric Newport <kethinov@gmail.com>\n\n utils.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n@@ -98,7 +98,7 @@ function escapeEntities (value) {\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n     if (!value) {\n-      return false \/\/ it is otherwise falsey\n+      return false \/\/ it is falsey to return false\n     } else if (Array.isArray(value)) {\n       if (value.length === 0) {\n         return false \/\/ empty arrays are falsey"
    },
    {
      "index":4,
      "vuln_id":"GHSA-hf4q-52x6-4p57",
      "cwe_id":"{'CWE-79'}",
      "score":4.8,
      "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/d9bae9df873c2d2a13a2eb08d512019d49ebca68'}",
      "dataset":"osv",
      "summary":"Unrestricted file upload leads to stored cross-site scripting in Microweber Microweber prior to version 1.2.12 allows unrestricted file upload, which could lead to stored cross-site scripting.",
      "published_date":"2022-03-11",
      "chain_len":1,
      "project":"https:\/\/github.com\/microweber\/microweber",
      "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/d9bae9df873c2d2a13a2eb08d512019d49ebca68",
      "commit_sha":"d9bae9df873c2d2a13a2eb08d512019d49ebca68",
      "patch":"SINGLE",
      "chain_ord":"['d9bae9df873c2d2a13a2eb08d512019d49ebca68']",
      "before_first_fix_commit":"{'8902c415144823c48b056f881aa00ceb1f5d350f'}",
      "last_fix_commit":"d9bae9df873c2d2a13a2eb08d512019d49ebca68",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/09\/2022, 14:55:02",
      "message":"update",
      "author":"Peter Ivanov",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
      "files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/d9bae9df873c2d2a13a2eb08d512019d49ebca68\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -591,6 +591,7 @@ function get_dangerous_files_extentions()\\n             'py',\\n             'alfa',\\n             'asp',\\n+            'aspx',\\n             'htaccess',\\n             'exe',\\n             'msi',\"}}",
      "message_norm":"update",
      "language":"ro",
      "entities":"[('update', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])",
      "num_files":1.0,
      "patch_content":"From d9bae9df873c2d2a13a2eb08d512019d49ebca68 Mon Sep 17 00:00:00 2001\nFrom: Peter Ivanov <peter@microweber.com>\nDate: Wed, 9 Mar 2022 16:55:02 +0200\nSubject: [PATCH] update\n\n---\n src\/MicroweberPackages\/Utils\/System\/Files.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/src\/MicroweberPackages\/Utils\/System\/Files.php b\/src\/MicroweberPackages\/Utils\/System\/Files.php\nindex 5e3ff8bfffd..220d42fdf0a 100644\n--- a\/src\/MicroweberPackages\/Utils\/System\/Files.php\n+++ b\/src\/MicroweberPackages\/Utils\/System\/Files.php\n@@ -591,6 +591,7 @@ function get_dangerous_files_extentions()\n             'py',\n             'alfa',\n             'asp',\n+            'aspx',\n             'htaccess',\n             'exe',\n             'msi',",
      "code_diff":"@@ -591,6 +591,7 @@ function get_dangerous_files_extentions()\n             'py',\n             'alfa',\n             'asp',\n+            'aspx',\n             'htaccess',\n             'exe',\n             'msi',"
    },
    {
      "index":5,
      "vuln_id":"GHSA-grw5-g9h2-wpg8",
      "cwe_id":"{'CWE-79'}",
      "score":6.8,
      "chain":"{'https:\/\/github.com\/wenzhixin\/bootstrap-table\/commit\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in bootstrap-table Bootstrap Tables XSS vulnerability with Table Export plug-in when exportOptions: htmlContent is true in GitHub repository wenzhixin\/bootstrap-table prior to 1.20.2. Disclosing session cookies, disclosing secure session data, exfiltrating data to third-parties.",
      "published_date":"2022-05-17",
      "chain_len":1,
      "project":"https:\/\/github.com\/wenzhixin\/bootstrap-table",
      "commit_href":"https:\/\/github.com\/wenzhixin\/bootstrap-table\/commit\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9",
      "commit_sha":"b4a1e5dd332be652e0bc376fd9256886cf4bbde9",
      "patch":"SINGLE",
      "chain_ord":"['b4a1e5dd332be652e0bc376fd9256886cf4bbde9']",
      "before_first_fix_commit":"{'55d3760df3d226ac1150d7ddcbfd0ff6bd1c53c2'}",
      "last_fix_commit":"b4a1e5dd332be652e0bc376fd9256886cf4bbde9",
      "chain_ord_pos":1.0,
      "commit_datetime":"05\/10\/2022, 02:59:07",
      "message":"Fixed XSS vulnerability bug by onCellHtmlData",
      "author":"zhixin",
      "comments":null,
      "stats":"{'additions': 4, 'deletions': 16, 'total': 20}",
      "files":"{'src\/extensions\/export\/bootstrap-table-export.js': {'additions': 4, 'deletions': 16, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/wenzhixin\/bootstrap-table\/raw\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9\/src%2Fextensions%2Fexport%2Fbootstrap-table-export.js', 'patch': \"@@ -23,15 +23,7 @@ $.extend($.fn.bootstrapTable.defaults, {\\n   showExport: false,\\n   exportDataType: 'basic', \/\/ basic, all, selected\\n   exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'excel'],\\n-  exportOptions: {\\n-    onCellHtmlData (cell, rowIndex, colIndex, htmlData) {\\n-      if (cell.is('th')) {\\n-        return cell.find('.th-inner').text()\\n-      }\\n-\\n-      return htmlData\\n-    }\\n-  },\\n+  exportOptions: {},\\n   exportFooter: false\\n })\\n \\n@@ -162,13 +154,9 @@ $.BootstrapTable = class extends $.BootstrapTable {\\n     $exportButtons.click(e => {\\n       e.preventDefault()\\n \\n-      const type = $(e.currentTarget).data('type')\\n-      const exportOptions = {\\n-        type,\\n-        escape: false\\n-      }\\n-\\n-      this.exportTable(exportOptions)\\n+      this.exportTable({\\n+        type: $(e.currentTarget).data('type')\\n+      })\\n     })\\n     this.handleToolbar()\\n   }\"}}",
      "message_norm":"fixed xss vulnerability bug by oncellhtmldata",
      "language":"en",
      "entities":"[('fixed', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('bug', 'FLAW', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/extensions\/export\/bootstrap-table-export.js'])",
      "num_files":1.0,
      "patch_content":"From b4a1e5dd332be652e0bc376fd9256886cf4bbde9 Mon Sep 17 00:00:00 2001\nFrom: zhixin <wenzhixin2010@gmail.com>\nDate: Tue, 10 May 2022 10:59:07 +0800\nSubject: [PATCH] Fixed XSS vulnerability bug by onCellHtmlData\n\n---\n ...\/export\/bootstrap-table-export.js          | 20 ++++---------------\n 1 file changed, 4 insertions(+), 16 deletions(-)\n\ndiff --git a\/src\/extensions\/export\/bootstrap-table-export.js b\/src\/extensions\/export\/bootstrap-table-export.js\nindex 55dcd3bc09..fe6ee5a6c9 100644\n--- a\/src\/extensions\/export\/bootstrap-table-export.js\n+++ b\/src\/extensions\/export\/bootstrap-table-export.js\n@@ -23,15 +23,7 @@ $.extend($.fn.bootstrapTable.defaults, {\n   showExport: false,\n   exportDataType: 'basic', \/\/ basic, all, selected\n   exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'excel'],\n-  exportOptions: {\n-    onCellHtmlData (cell, rowIndex, colIndex, htmlData) {\n-      if (cell.is('th')) {\n-        return cell.find('.th-inner').text()\n-      }\n-\n-      return htmlData\n-    }\n-  },\n+  exportOptions: {},\n   exportFooter: false\n })\n \n@@ -162,13 +154,9 @@ $.BootstrapTable = class extends $.BootstrapTable {\n     $exportButtons.click(e => {\n       e.preventDefault()\n \n-      const type = $(e.currentTarget).data('type')\n-      const exportOptions = {\n-        type,\n-        escape: false\n-      }\n-\n-      this.exportTable(exportOptions)\n+      this.exportTable({\n+        type: $(e.currentTarget).data('type')\n+      })\n     })\n     this.handleToolbar()\n   }",
      "code_diff":"@@ -23,15 +23,7 @@ $.extend($.fn.bootstrapTable.defaults, {\n   showExport: false,\n   exportDataType: 'basic', \/\/ basic, all, selected\n   exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'excel'],\n-  exportOptions: {\n-    onCellHtmlData (cell, rowIndex, colIndex, htmlData) {\n-      if (cell.is('th')) {\n-        return cell.find('.th-inner').text()\n-      }\n-\n-      return htmlData\n-    }\n-  },\n+  exportOptions: {},\n   exportFooter: false\n })\n \n@@ -162,13 +154,9 @@ $.BootstrapTable = class extends $.BootstrapTable {\n     $exportButtons.click(e => {\n       e.preventDefault()\n \n-      const type = $(e.currentTarget).data('type')\n-      const exportOptions = {\n-        type,\n-        escape: false\n-      }\n-\n-      this.exportTable(exportOptions)\n+      this.exportTable({\n+        type: $(e.currentTarget).data('type')\n+      })\n     })\n     this.handleToolbar()\n   }"
    },
    {
      "index":6,
      "vuln_id":"GHSA-4952-p58q-6crx",
      "cwe_id":"{'CWE-87', 'CWE-79', 'CWE-75'}",
      "score":7.4,
      "chain":"{'https:\/\/github.com\/jupyterlab\/jupyterlab\/commit\/504825938c0abfa2fb8ff8d529308830a5ae42ed'}",
      "dataset":"osv",
      "summary":"JupyterLab: XSS due to lack of sanitization of the action attribute of an html <form> ### Impact\n\nUntrusted notebook can execute code on load. This is a remote code execution, but requires user action to open a notebook.\n\n### Patches\n\nPatched in the following versions: 3.1.4, 3.0.17, 2.3.2, 2.2.10, 1.2.21.\n\n### References\n\n[OWASP Page on Restricting Form Submissions](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list security@ipython.org.\n\nCredit: Guillaume Jeanne from Google",
      "published_date":"2021-08-23",
      "chain_len":1,
      "project":"https:\/\/github.com\/jupyterlab\/jupyterlab",
      "commit_href":"https:\/\/github.com\/jupyterlab\/jupyterlab\/commit\/504825938c0abfa2fb8ff8d529308830a5ae42ed",
      "commit_sha":"504825938c0abfa2fb8ff8d529308830a5ae42ed",
      "patch":"SINGLE",
      "chain_ord":"['504825938c0abfa2fb8ff8d529308830a5ae42ed']",
      "before_first_fix_commit":"{'ccb65656e3ed9c47d3e6fedbcff2405885d0bcaa'}",
      "last_fix_commit":"504825938c0abfa2fb8ff8d529308830a5ae42ed",
      "chain_ord_pos":1.0,
      "commit_datetime":"08\/05\/2021, 16:42:03",
      "message":"Merge pull request from GHSA-4952-p58q-6crx\n\nRemove `form` tags' `action` attribute during sanitizing.\n\nCo-authored-by: Afshin Taylor Darian <git@darian.af>",
      "author":"Steven Silvester",
      "comments":null,
      "stats":"{'additions': 0, 'deletions': 1, 'total': 1}",
      "files":"{'packages\/apputils\/src\/sanitizer.ts': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterlab\/jupyterlab\/raw\/504825938c0abfa2fb8ff8d529308830a5ae42ed\/packages%2Fapputils%2Fsrc%2Fsanitizer.ts', 'patch': \"@@ -624,7 +624,6 @@ export class Sanitizer implements ISanitizer {\\n       font: ['color', 'face', 'size'],\\n       form: [\\n         'accept',\\n-        'action',\\n         'autocomplete',\\n         'enctype',\\n         'method',\"}}",
      "message_norm":"merge pull request from ghsa-4952-p58q-6crx\n\nremove `form` tags' `action` attribute during sanitizing.\n\nco-authored-by: afshin taylor darian <git@darian.af>",
      "language":"en",
      "entities":"[('ghsa-4952-p58q-6crx', 'VULNID', 'GHSA'), ('remove', 'ACTION', ''), ('sanitizing', 'SECWORD', ''), ('git@darian.af', 'EMAIL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['packages\/apputils\/src\/sanitizer.ts'])",
      "num_files":1.0,
      "patch_content":"From 504825938c0abfa2fb8ff8d529308830a5ae42ed Mon Sep 17 00:00:00 2001\nFrom: Steven Silvester <ssilvester@apple.com>\nDate: Thu, 5 Aug 2021 11:42:03 -0500\nSubject: [PATCH] Merge pull request from GHSA-4952-p58q-6crx\n\nRemove `form` tags' `action` attribute during sanitizing.\n\nCo-authored-by: Afshin Taylor Darian <git@darian.af>\n---\n packages\/apputils\/src\/sanitizer.ts | 1 -\n 1 file changed, 1 deletion(-)\n\ndiff --git a\/packages\/apputils\/src\/sanitizer.ts b\/packages\/apputils\/src\/sanitizer.ts\nindex b281cc4172d6..897f215229f0 100644\n--- a\/packages\/apputils\/src\/sanitizer.ts\n+++ b\/packages\/apputils\/src\/sanitizer.ts\n@@ -624,7 +624,6 @@ export class Sanitizer implements ISanitizer {\n       font: ['color', 'face', 'size'],\n       form: [\n         'accept',\n-        'action',\n         'autocomplete',\n         'enctype',\n         'method',",
      "code_diff":"@@ -624,7 +624,6 @@ export class Sanitizer implements ISanitizer {\n       font: ['color', 'face', 'size'],\n       form: [\n         'accept',\n-        'action',\n         'autocomplete',\n         'enctype',\n         'method',"
    },
    {
      "index":7,
      "vuln_id":"GHSA-jf9v-q8vh-3fmc",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/icecoder\/ICEcoder\/commit\/21d6ae0f2a3fce7d076ae430d48f5df56bd0f256'}",
      "dataset":"osv",
      "summary":"Cross-site scripting in ICEcoder In ICEcoder 8.0 allows, a reflected XSS vulnerability was identified in the multipe-results.php page due to insufficient sanitization of the _GET['replace'] variable. As a result, arbitrary Javascript code can get executed.",
      "published_date":"2021-09-09",
      "chain_len":1,
      "project":"https:\/\/github.com\/icecoder\/ICEcoder",
      "commit_href":"https:\/\/github.com\/icecoder\/ICEcoder\/commit\/21d6ae0f2a3fce7d076ae430d48f5df56bd0f256",
      "commit_sha":"21d6ae0f2a3fce7d076ae430d48f5df56bd0f256",
      "patch":"SINGLE",
      "chain_ord":"['21d6ae0f2a3fce7d076ae430d48f5df56bd0f256']",
      "before_first_fix_commit":"{'54e4aff163d29edb13fe885219f82fca258c7e99'}",
      "last_fix_commit":"21d6ae0f2a3fce7d076ae430d48f5df56bd0f256",
      "chain_ord_pos":1.0,
      "commit_datetime":"06\/25\/2021, 20:22:25",
      "message":"XSS and usage fixes on multiple-results.php",
      "author":"mattpass",
      "comments":null,
      "stats":"{'additions': 15, 'deletions': 12, 'total': 27}",
      "files":"{'lib\/multiple-results.php': {'additions': 15, 'deletions': 12, 'changes': 27, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/icecoder\/ICEcoder\/raw\/21d6ae0f2a3fce7d076ae430d48f5df56bd0f256\/lib%2Fmultiple-results.php', 'patch': '@@ -1,4 +1,5 @@\\n <?php\\n+\/\/ TODO: The whole file needs a refactor and comments!\\n include \"headers.php\";\\n include \"settings.php\";\\n $t = $text[\\'multiple-results\\'];\\n@@ -101,16 +102,18 @@\\n             if (\\n                 \/\/ TODO: Find in filenames not working with regex, see all instances of findText and $findText below\\n                 true === haveMatch && -1 < targetURL.indexOf(\\'_perms\\')) {\\n-                if (-1 < userTarget.indexOf(\"selected\")) {\\n-                    for (let j = 0; j < parent.ICEcoder.selectedFiles.length; j++) {\\n-                        \/\/ TODO: This whole file needs comments - what does the below do?!\\n+                    if (-1 < userTarget.indexOf(\"selected\")) {\\n+                        for (let j = 0; j < parent.ICEcoder.selectedFiles.length; j++) {\\n                         if (\\n-                            0 === targetURL.replace(\/\\\\\/\/g, \"|\").indexOf(parent.ICEcoder.selectedFiles[j].replace(\/\\\\\/\/g, \"|\").replace(\/_perms\/g, \"\"))\\n+                            \/\/ If the pipe delimited targetURL starts with this pipe delimited, non _perms elem selectedFile\\n+                            0 === targetURL.replace(\/\\\\\/\/g, \"|\").indexOf(parent.ICEcoder.selectedFiles[j].replace(\/\\\\\/\/g, \"|\").replace(\/_perms\/g, \"\").toLowerCase())\\n                             && (\\n-                            targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\") === parent.ICEcoder.selectedFiles[j].replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\")\\n+                            \/\/ If the slash delimited, non _perms elem matches the slasj delimited, non _perms elem\\n+                            targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\") === parent.ICEcoder.selectedFiles[j].replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").toLowerCase()\\n                             ||\\n+                            \/\/ Path length for targetURL is greater than path length for this selectedFile and targetURL char at selectedFiles length ends with a slash\\n                             (targetURL.replace(\/\\\\|\/g, \"\/\").split(\"\/\").length > parent.ICEcoder.selectedFiles[j].replace(\/\\\\|\/g, \"\/\").split(\"\/\").length && \"\/\" === targetURL.charAt(parent.ICEcoder.selectedFiles[j].length)))) {\\n-                            foundInSelected = true;\\n+                                foundInSelected = true;\\n                         }\\n                     }\\n                 }\\n@@ -124,8 +127,8 @@\\n                     \/\/ TODO: get this line working\\n                     resultsDisplay +=\\n                         targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php\\n-                            echo str_replace(\"\/\", \"\\\\\/\",strtolower($findText)); ?>\/g, \"<b>\" +\\n-                            findText.toLowerCase() + \"<\/b>\");\\n+                            echo str_replace(\"\/\", \"\\\\\/\",strtolower(preg_quote($findText))); ?>\/g, \"<b>\" +\\n+                            parent.ICEcoder.xssClean(findText).toLowerCase() + \"<\/b>\");\\n                         resultsDisplay += \\'<\/a><br>\\';\\n                     <?php if (false === isset($_GET[\\'replace\\'])) { ?>\\n                     resultsDisplay += \\'<div id=\"foundCount\\' + i +\\'\">\\' + spansArray[i].innerHTML + \\'<\/div>\\';\\n@@ -134,8 +137,8 @@\\n                     resultsDisplay +=\\n                         \\'<div id=\"foundCount\\' + i + \\'\">\\' + spansArray[i].innerHTML +\\n                         \\', <?php echo $t[\\'rename to\\'];?> \\' +\\n-                        targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php echo str_replace(\"\/\", \"\\\\\/\",strtolower($findText)); ?>\/g,\"<b><?php\\n-                            if (isset($_GET[\\'replace\\'])) {echo $_GET[\\'replace\\'];};\\n+                        targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php echo str_replace(\"\/\", \"\\\\\/\",strtolower(preg_quote($findText))); ?>\/g,\"<b><?php\\n+                            if (isset($_GET[\\'replace\\'])) {echo str_replace(\"&amp;\", \"&\", xssClean($_GET[\\'replace\\'], \\'script\\'));};\\n                         ?><\/b>\")+\\'<\/div>\\';\\n                         <?php\\n                         ;};\\n@@ -253,7 +256,7 @@ function phpGrep($q, $path, $base) {\\n \\n     const replaceInFileSingle = function(fileRef) {\\n         \/\/ TODO: findText in this line\\n-        parent.ICEcoder.replaceInFile(fileRef, true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), \\'<?php if (isset($_GET[\\'replace\\'])) {echo $_GET[\\'replace\\'];}; ?>\\');\\n+        parent.ICEcoder.replaceInFile(fileRef, true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), \\'<?php if (isset($_GET[\\'replace\\'])) {echo xssClean($_GET[\\'replace\\'], \\'script\\');}; ?>\\');\\n     };\\n \\n     const replaceInFilesAll = function() {\\n@@ -267,7 +270,7 @@ function phpGrep($q, $path, $base) {\\n         fileRef = spansArray[arrayRef].id.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\");\\n         const rExp = new RegExp(true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), \"gi\");\\n         \/\/ TODO: get this working\\n-        newName = spansArray[arrayRef].id.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(rExp, \"<?php if (isset($_GET[\\'replace\\'])) {echo $_GET[\\'replace\\'];}; ?>\");\\n+        newName = spansArray[arrayRef].id.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(rExp, \"<?php if (isset($_GET[\\'replace\\'])) {echo xssClean($_GET[\\'replace\\'], \\'script\\');}; ?>\");\\n         parent.ICEcoder.renameFile(fileRef,newName);\\n     };'}}",
      "message_norm":"xss and usage fixes on multiple-results.php",
      "language":"en",
      "entities":"[('xss', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['lib\/multiple-results.php'])",
      "num_files":1.0,
      "patch_content":"From 21d6ae0f2a3fce7d076ae430d48f5df56bd0f256 Mon Sep 17 00:00:00 2001\nFrom: mattpass <matt@helical-levity.com>\nDate: Fri, 25 Jun 2021 21:22:25 +0100\nSubject: [PATCH] XSS and usage fixes on multiple-results.php\n\n---\n lib\/multiple-results.php | 27 +++++++++++++++------------\n 1 file changed, 15 insertions(+), 12 deletions(-)\n\ndiff --git a\/lib\/multiple-results.php b\/lib\/multiple-results.php\nindex 9e15f00c..00fe5829 100644\n--- a\/lib\/multiple-results.php\n+++ b\/lib\/multiple-results.php\n@@ -1,4 +1,5 @@\n <?php\n+\/\/ TODO: The whole file needs a refactor and comments!\n include \"headers.php\";\n include \"settings.php\";\n $t = $text['multiple-results'];\n@@ -101,16 +102,18 @@\n             if (\n                 \/\/ TODO: Find in filenames not working with regex, see all instances of findText and $findText below\n                 true === haveMatch && -1 < targetURL.indexOf('_perms')) {\n-                if (-1 < userTarget.indexOf(\"selected\")) {\n-                    for (let j = 0; j < parent.ICEcoder.selectedFiles.length; j++) {\n-                        \/\/ TODO: This whole file needs comments - what does the below do?!\n+                    if (-1 < userTarget.indexOf(\"selected\")) {\n+                        for (let j = 0; j < parent.ICEcoder.selectedFiles.length; j++) {\n                         if (\n-                            0 === targetURL.replace(\/\\\/\/g, \"|\").indexOf(parent.ICEcoder.selectedFiles[j].replace(\/\\\/\/g, \"|\").replace(\/_perms\/g, \"\"))\n+                            \/\/ If the pipe delimited targetURL starts with this pipe delimited, non _perms elem selectedFile\n+                            0 === targetURL.replace(\/\\\/\/g, \"|\").indexOf(parent.ICEcoder.selectedFiles[j].replace(\/\\\/\/g, \"|\").replace(\/_perms\/g, \"\").toLowerCase())\n                             && (\n-                            targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\") === parent.ICEcoder.selectedFiles[j].replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\")\n+                            \/\/ If the slash delimited, non _perms elem matches the slasj delimited, non _perms elem\n+                            targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\") === parent.ICEcoder.selectedFiles[j].replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").toLowerCase()\n                             ||\n+                            \/\/ Path length for targetURL is greater than path length for this selectedFile and targetURL char at selectedFiles length ends with a slash\n                             (targetURL.replace(\/\\|\/g, \"\/\").split(\"\/\").length > parent.ICEcoder.selectedFiles[j].replace(\/\\|\/g, \"\/\").split(\"\/\").length && \"\/\" === targetURL.charAt(parent.ICEcoder.selectedFiles[j].length)))) {\n-                            foundInSelected = true;\n+                                foundInSelected = true;\n                         }\n                     }\n                 }\n@@ -124,8 +127,8 @@\n                     \/\/ TODO: get this line working\n                     resultsDisplay +=\n                         targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php\n-                            echo str_replace(\"\/\", \"\\\/\",strtolower($findText)); ?>\/g, \"<b>\" +\n-                            findText.toLowerCase() + \"<\/b>\");\n+                            echo str_replace(\"\/\", \"\\\/\",strtolower(preg_quote($findText))); ?>\/g, \"<b>\" +\n+                            parent.ICEcoder.xssClean(findText).toLowerCase() + \"<\/b>\");\n                         resultsDisplay += '<\/a><br>';\n                     <?php if (false === isset($_GET['replace'])) { ?>\n                     resultsDisplay += '<div id=\"foundCount' + i +'\">' + spansArray[i].innerHTML + '<\/div>';\n@@ -134,8 +137,8 @@\n                     resultsDisplay +=\n                         '<div id=\"foundCount' + i + '\">' + spansArray[i].innerHTML +\n                         ', <?php echo $t['rename to'];?> ' +\n-                        targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php echo str_replace(\"\/\", \"\\\/\",strtolower($findText)); ?>\/g,\"<b><?php\n-                            if (isset($_GET['replace'])) {echo $_GET['replace'];};\n+                        targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php echo str_replace(\"\/\", \"\\\/\",strtolower(preg_quote($findText))); ?>\/g,\"<b><?php\n+                            if (isset($_GET['replace'])) {echo str_replace(\"&amp;\", \"&\", xssClean($_GET['replace'], 'script'));};\n                         ?><\/b>\")+'<\/div>';\n                         <?php\n                         ;};\n@@ -253,7 +256,7 @@ function phpGrep($q, $path, $base) {\n \n     const replaceInFileSingle = function(fileRef) {\n         \/\/ TODO: findText in this line\n-        parent.ICEcoder.replaceInFile(fileRef, true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), '<?php if (isset($_GET['replace'])) {echo $_GET['replace'];}; ?>');\n+        parent.ICEcoder.replaceInFile(fileRef, true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), '<?php if (isset($_GET['replace'])) {echo xssClean($_GET['replace'], 'script');}; ?>');\n     };\n \n     const replaceInFilesAll = function() {\n@@ -267,7 +270,7 @@ function phpGrep($q, $path, $base) {\n         fileRef = spansArray[arrayRef].id.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\");\n         const rExp = new RegExp(true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), \"gi\");\n         \/\/ TODO: get this working\n-        newName = spansArray[arrayRef].id.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(rExp, \"<?php if (isset($_GET['replace'])) {echo $_GET['replace'];}; ?>\");\n+        newName = spansArray[arrayRef].id.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(rExp, \"<?php if (isset($_GET['replace'])) {echo xssClean($_GET['replace'], 'script');}; ?>\");\n         parent.ICEcoder.renameFile(fileRef,newName);\n     };",
      "code_diff":"@@ -1,4 +1,5 @@\n <?php\n+\/\/ TODO: The whole file needs a refactor and comments!\n include \"headers.php\";\n include \"settings.php\";\n $t = $text['multiple-results'];\n@@ -101,16 +102,18 @@\n             if (\n                 \/\/ TODO: Find in filenames not working with regex, see all instances of findText and $findText below\n                 true === haveMatch && -1 < targetURL.indexOf('_perms')) {\n-                if (-1 < userTarget.indexOf(\"selected\")) {\n-                    for (let j = 0; j < parent.ICEcoder.selectedFiles.length; j++) {\n-                        \/\/ TODO: This whole file needs comments - what does the below do?!\n+                    if (-1 < userTarget.indexOf(\"selected\")) {\n+                        for (let j = 0; j < parent.ICEcoder.selectedFiles.length; j++) {\n                         if (\n-                            0 === targetURL.replace(\/\\\/\/g, \"|\").indexOf(parent.ICEcoder.selectedFiles[j].replace(\/\\\/\/g, \"|\").replace(\/_perms\/g, \"\"))\n+                            \/\/ If the pipe delimited targetURL starts with this pipe delimited, non _perms elem selectedFile\n+                            0 === targetURL.replace(\/\\\/\/g, \"|\").indexOf(parent.ICEcoder.selectedFiles[j].replace(\/\\\/\/g, \"|\").replace(\/_perms\/g, \"\").toLowerCase())\n                             && (\n-                            targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\") === parent.ICEcoder.selectedFiles[j].replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\")\n+                            \/\/ If the slash delimited, non _perms elem matches the slasj delimited, non _perms elem\n+                            targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\") === parent.ICEcoder.selectedFiles[j].replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").toLowerCase()\n                             ||\n+                            \/\/ Path length for targetURL is greater than path length for this selectedFile and targetURL char at selectedFiles length ends with a slash\n                             (targetURL.replace(\/\\|\/g, \"\/\").split(\"\/\").length > parent.ICEcoder.selectedFiles[j].replace(\/\\|\/g, \"\/\").split(\"\/\").length && \"\/\" === targetURL.charAt(parent.ICEcoder.selectedFiles[j].length)))) {\n-                            foundInSelected = true;\n+                                foundInSelected = true;\n                         }\n                     }\n                 }\n@@ -124,8 +127,8 @@\n                     \/\/ TODO: get this line working\n                     resultsDisplay +=\n                         targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php\n-                            echo str_replace(\"\/\", \"\\\/\",strtolower($findText)); ?>\/g, \"<b>\" +\n-                            findText.toLowerCase() + \"<\/b>\");\n+                            echo str_replace(\"\/\", \"\\\/\",strtolower(preg_quote($findText))); ?>\/g, \"<b>\" +\n+                            parent.ICEcoder.xssClean(findText).toLowerCase() + \"<\/b>\");\n                         resultsDisplay += '<\/a><br>';\n                     <?php if (false === isset($_GET['replace'])) { ?>\n                     resultsDisplay += '<div id=\"foundCount' + i +'\">' + spansArray[i].innerHTML + '<\/div>';\n@@ -134,8 +137,8 @@\n                     resultsDisplay +=\n                         '<div id=\"foundCount' + i + '\">' + spansArray[i].innerHTML +\n                         ', <?php echo $t['rename to'];?> ' +\n-                        targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php echo str_replace(\"\/\", \"\\\/\",strtolower($findText)); ?>\/g,\"<b><?php\n-                            if (isset($_GET['replace'])) {echo $_GET['replace'];};\n+                        targetURL.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php echo str_replace(\"\/\", \"\\\/\",strtolower(preg_quote($findText))); ?>\/g,\"<b><?php\n+                            if (isset($_GET['replace'])) {echo str_replace(\"&amp;\", \"&\", xssClean($_GET['replace'], 'script'));};\n                         ?><\/b>\")+'<\/div>';\n                         <?php\n                         ;};\n@@ -253,7 +256,7 @@ function phpGrep($q, $path, $base) {\n \n     const replaceInFileSingle = function(fileRef) {\n         \/\/ TODO: findText in this line\n-        parent.ICEcoder.replaceInFile(fileRef, true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), '<?php if (isset($_GET['replace'])) {echo $_GET['replace'];}; ?>');\n+        parent.ICEcoder.replaceInFile(fileRef, true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), '<?php if (isset($_GET['replace'])) {echo xssClean($_GET['replace'], 'script');}; ?>');\n     };\n \n     const replaceInFilesAll = function() {\n@@ -267,7 +270,7 @@ function phpGrep($q, $path, $base) {\n         fileRef = spansArray[arrayRef].id.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\");\n         const rExp = new RegExp(true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), \"gi\");\n         \/\/ TODO: get this working\n-        newName = spansArray[arrayRef].id.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(rExp, \"<?php if (isset($_GET['replace'])) {echo $_GET['replace'];}; ?>\");\n+        newName = spansArray[arrayRef].id.replace(\/\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(rExp, \"<?php if (isset($_GET['replace'])) {echo xssClean($_GET['replace'], 'script');}; ?>\");\n         parent.ICEcoder.renameFile(fileRef,newName);\n     };"
    },
    {
      "index":8,
      "vuln_id":"GHSA-f7q6-xxph-mfm8",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/3ae96b9d41c117aafa45873ad10077d4b873a3cb'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in Pimcore Pimcore prior to version 10.2.10 contains a cross-site scripting vulnerability.",
      "published_date":"2022-01-27",
      "chain_len":1,
      "project":"https:\/\/github.com\/pimcore\/pimcore",
      "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/3ae96b9d41c117aafa45873ad10077d4b873a3cb",
      "commit_sha":"3ae96b9d41c117aafa45873ad10077d4b873a3cb",
      "patch":"SINGLE",
      "chain_ord":"['3ae96b9d41c117aafa45873ad10077d4b873a3cb']",
      "before_first_fix_commit":"{'fbb2badbb05ec80e4f6f15b52fb2f58cbbf379c4'}",
      "last_fix_commit":"3ae96b9d41c117aafa45873ad10077d4b873a3cb",
      "chain_ord_pos":1.0,
      "commit_datetime":"01\/25\/2022, 11:20:25",
      "message":"disallow html entity names on import - follow up to #11217",
      "author":"Divesh",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
      "files":"{'models\/DataObject\/ClassDefinition\/Service.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/3ae96b9d41c117aafa45873ad10077d4b873a3cb\/models%2FDataObject%2FClassDefinition%2FService.php', 'patch': \"@@ -315,11 +315,11 @@ public static function generateLayoutTreeFromArray($array, $throwException = fal\\n     {\\n         if (is_array($array) && count($array) > 0) {\\n             if ($name = $array['name'] ?? false) {\\n-                $sanitizedName = htmlentities($name);\\n-                if ($sanitizedName !== $name) {\\n+                if (preg_match('\/<.+?>\/', $name)) {\\n                     throw new \\\\Exception('not a valid name:' . htmlentities($name));\\n                 }\\n             }\\n+\\n             \/** @var LoaderInterface $loader *\/\\n             $loader = \\\\Pimcore::getContainer()->get('pimcore.implementation_loader.object.' . $array['datatype']);\"}}",
      "message_norm":"disallow html entity names on import - follow up to #11217",
      "language":"en",
      "entities":"[('#11217', 'ISSUE', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['models\/DataObject\/ClassDefinition\/Service.php'])",
      "num_files":1.0,
      "patch_content":"From 3ae96b9d41c117aafa45873ad10077d4b873a3cb Mon Sep 17 00:00:00 2001\nFrom: Divesh <divesh.pahuja@pimcore.com>\nDate: Tue, 25 Jan 2022 12:20:25 +0100\nSubject: [PATCH] disallow html entity names on import - follow up to #11217\n\n---\n models\/DataObject\/ClassDefinition\/Service.php | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/models\/DataObject\/ClassDefinition\/Service.php b\/models\/DataObject\/ClassDefinition\/Service.php\nindex 46ba9941366..4208f1e09f8 100644\n--- a\/models\/DataObject\/ClassDefinition\/Service.php\n+++ b\/models\/DataObject\/ClassDefinition\/Service.php\n@@ -315,11 +315,11 @@ public static function generateLayoutTreeFromArray($array, $throwException = fal\n     {\n         if (is_array($array) && count($array) > 0) {\n             if ($name = $array['name'] ?? false) {\n-                $sanitizedName = htmlentities($name);\n-                if ($sanitizedName !== $name) {\n+                if (preg_match('\/<.+?>\/', $name)) {\n                     throw new \\Exception('not a valid name:' . htmlentities($name));\n                 }\n             }\n+\n             \/** @var LoaderInterface $loader *\/\n             $loader = \\Pimcore::getContainer()->get('pimcore.implementation_loader.object.' . $array['datatype']);",
      "code_diff":"@@ -315,11 +315,11 @@ public static function generateLayoutTreeFromArray($array, $throwException = fal\n     {\n         if (is_array($array) && count($array) > 0) {\n             if ($name = $array['name'] ?? false) {\n-                $sanitizedName = htmlentities($name);\n-                if ($sanitizedName !== $name) {\n+                if (preg_match('\/<.+?>\/', $name)) {\n                     throw new \\Exception('not a valid name:' . htmlentities($name));\n                 }\n             }\n+\n             \/** @var LoaderInterface $loader *\/\n             $loader = \\Pimcore::getContainer()->get('pimcore.implementation_loader.object.' . $array['datatype']);"
    },
    {
      "index":9,
      "vuln_id":"GHSA-qr82-2c78-4m8h",
      "cwe_id":"{'CWE-824'}",
      "score":7.8,
      "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/532f5c5a547126c634fefd43bbad1dc6417678ac'}",
      "dataset":"osv",
      "summary":"Reference binding to nullptr in map operations ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.Map*` and `tf.raw_ops.OrderedMap*` operations:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.MapPeek(\n  key=tf.constant([8],dtype=tf.int64),\n  indices=[],\n  dtypes=[tf.int32],\n  capacity=8,\n  memory_limit=128)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/map_stage_op.cc#L222-L248) has a check in place to ensure that `indices` is in ascending order, but does not check that `indices` is not empty.\n    \n### Patches\nWe have patched the issue in GitHub commit [532f5c5a547126c634fefd43bbad1dc6417678ac](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/532f5c5a547126c634fefd43bbad1dc6417678ac).\n                       \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date":"2021-08-25",
      "chain_len":1,
      "project":"https:\/\/github.com\/tensorflow\/tensorflow",
      "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/532f5c5a547126c634fefd43bbad1dc6417678ac",
      "commit_sha":"532f5c5a547126c634fefd43bbad1dc6417678ac",
      "patch":"SINGLE",
      "chain_ord":"['532f5c5a547126c634fefd43bbad1dc6417678ac']",
      "before_first_fix_commit":"{'a4e138660270e7599793fa438cd7b2fc2ce215a6'}",
      "last_fix_commit":"532f5c5a547126c634fefd43bbad1dc6417678ac",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/30\/2021, 05:24:39",
      "message":"Prevent nullptr deref in validation of indexes in map ops.\n\nPiperOrigin-RevId: 387738023\nChange-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27",
      "author":"Mihai Maruseac",
      "comments":null,
      "stats":"{'additions': 9, 'deletions': 6, 'total': 15}",
      "files":"{'tensorflow\/core\/kernels\/map_stage_op.cc': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/532f5c5a547126c634fefd43bbad1dc6417678ac\/tensorflow%2Fcore%2Fkernels%2Fmap_stage_op.cc', 'patch': '@@ -210,25 +210,28 @@ class StagingMap : public ResourceBase {\\n                                    const OptionalTuple& tuple)\\n       TF_EXCLUSIVE_LOCKS_REQUIRED(mu_) {\\n     if (tuple[index].has_value()) {\\n-      return Status(errors::InvalidArgument(\\n+      return errors::InvalidArgument(\\n           \"The tensor for index \\'\", index, \"\\' for key \\'\", key.scalar<int64>()(),\\n-          \"\\' was already initialized \\'\", dtypes_.size(), \"\\'.\"));\\n+          \"\\' was already initialized \\'\", dtypes_.size(), \"\\'.\");\\n     }\\n \\n     return Status::OK();\\n   }\\n \\n   \/\/ Check that the indices are strictly ordered\\n   Status check_index_ordering(const Tensor& indices) {\\n+    if (indices.NumElements() == 0) {\\n+      return errors::InvalidArgument(\"Indices are empty\");\\n+    }\\n+\\n     auto findices = indices.flat<int>();\\n \\n     for (std::size_t i = 0; i < findices.dimension(0) - 1; ++i) {\\n       if (findices(i) < findices(i + 1)) {\\n         continue;\\n       }\\n \\n-      return Status(\\n-          errors::InvalidArgument(\"Indices are not strictly ordered\"));\\n+      return errors::InvalidArgument(\"Indices are not strictly ordered\");\\n     }\\n \\n     return Status::OK();\\n@@ -238,10 +241,10 @@ class StagingMap : public ResourceBase {\\n   Status check_memory_limit(std::size_t bytes)\\n       TF_EXCLUSIVE_LOCKS_REQUIRED(mu_) {\\n     if (has_memory_limit() && bytes > memory_limit_) {\\n-      return Status(errors::ResourceExhausted(\\n+      return errors::ResourceExhausted(\\n           \"Attempted to insert tensors with combined size of \\'\", bytes,\\n           \"\\' bytes into Staging Area with a memory limit of \\'\", memory_limit_,\\n-          \"\\'.\"));\\n+          \"\\'.\");\\n     }\\n \\n     return Status::OK();'}}",
      "message_norm":"prevent nullptr deref in validation of indexes in map ops.\n\npiperorigin-revid: 387738023\nchange-id: i83d18d36a7b82ffd2a40b5124a4e5b4c72238f27",
      "language":"en",
      "entities":"[('prevent', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('387738023', 'SHA', 'generic_sha')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['tensorflow\/core\/kernels\/map_stage_op.cc'])",
      "num_files":1.0,
      "patch_content":"From 532f5c5a547126c634fefd43bbad1dc6417678ac Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Thu, 29 Jul 2021 22:24:39 -0700\nSubject: [PATCH] Prevent nullptr deref in validation of indexes in map ops.\n\nPiperOrigin-RevId: 387738023\nChange-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27\n---\n tensorflow\/core\/kernels\/map_stage_op.cc | 15 +++++++++------\n 1 file changed, 9 insertions(+), 6 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/map_stage_op.cc b\/tensorflow\/core\/kernels\/map_stage_op.cc\nindex 9411792762baab..1a2f5a8fa2247d 100644\n--- a\/tensorflow\/core\/kernels\/map_stage_op.cc\n+++ b\/tensorflow\/core\/kernels\/map_stage_op.cc\n@@ -210,9 +210,9 @@ class StagingMap : public ResourceBase {\n                                    const OptionalTuple& tuple)\n       TF_EXCLUSIVE_LOCKS_REQUIRED(mu_) {\n     if (tuple[index].has_value()) {\n-      return Status(errors::InvalidArgument(\n+      return errors::InvalidArgument(\n           \"The tensor for index '\", index, \"' for key '\", key.scalar<int64>()(),\n-          \"' was already initialized '\", dtypes_.size(), \"'.\"));\n+          \"' was already initialized '\", dtypes_.size(), \"'.\");\n     }\n \n     return Status::OK();\n@@ -220,6 +220,10 @@ class StagingMap : public ResourceBase {\n \n   \/\/ Check that the indices are strictly ordered\n   Status check_index_ordering(const Tensor& indices) {\n+    if (indices.NumElements() == 0) {\n+      return errors::InvalidArgument(\"Indices are empty\");\n+    }\n+\n     auto findices = indices.flat<int>();\n \n     for (std::size_t i = 0; i < findices.dimension(0) - 1; ++i) {\n@@ -227,8 +231,7 @@ class StagingMap : public ResourceBase {\n         continue;\n       }\n \n-      return Status(\n-          errors::InvalidArgument(\"Indices are not strictly ordered\"));\n+      return errors::InvalidArgument(\"Indices are not strictly ordered\");\n     }\n \n     return Status::OK();\n@@ -238,10 +241,10 @@ class StagingMap : public ResourceBase {\n   Status check_memory_limit(std::size_t bytes)\n       TF_EXCLUSIVE_LOCKS_REQUIRED(mu_) {\n     if (has_memory_limit() && bytes > memory_limit_) {\n-      return Status(errors::ResourceExhausted(\n+      return errors::ResourceExhausted(\n           \"Attempted to insert tensors with combined size of '\", bytes,\n           \"' bytes into Staging Area with a memory limit of '\", memory_limit_,\n-          \"'.\"));\n+          \"'.\");\n     }\n \n     return Status::OK();",
      "code_diff":"@@ -210,9 +210,9 @@ class StagingMap : public ResourceBase {\n                                    const OptionalTuple& tuple)\n       TF_EXCLUSIVE_LOCKS_REQUIRED(mu_) {\n     if (tuple[index].has_value()) {\n-      return Status(errors::InvalidArgument(\n+      return errors::InvalidArgument(\n           \"The tensor for index '\", index, \"' for key '\", key.scalar<int64>()(),\n-          \"' was already initialized '\", dtypes_.size(), \"'.\"));\n+          \"' was already initialized '\", dtypes_.size(), \"'.\");\n     }\n \n     return Status::OK();\n@@ -220,6 +220,10 @@ class StagingMap : public ResourceBase {\n \n   \/\/ Check that the indices are strictly ordered\n   Status check_index_ordering(const Tensor& indices) {\n+    if (indices.NumElements() == 0) {\n+      return errors::InvalidArgument(\"Indices are empty\");\n+    }\n+\n     auto findices = indices.flat<int>();\n \n     for (std::size_t i = 0; i < findices.dimension(0) - 1; ++i) {\n@@ -227,8 +231,7 @@ class StagingMap : public ResourceBase {\n         continue;\n       }\n \n-      return Status(\n-          errors::InvalidArgument(\"Indices are not strictly ordered\"));\n+      return errors::InvalidArgument(\"Indices are not strictly ordered\");\n     }\n \n     return Status::OK();\n@@ -238,10 +241,10 @@ class StagingMap : public ResourceBase {\n   Status check_memory_limit(std::size_t bytes)\n       TF_EXCLUSIVE_LOCKS_REQUIRED(mu_) {\n     if (has_memory_limit() && bytes > memory_limit_) {\n-      return Status(errors::ResourceExhausted(\n+      return errors::ResourceExhausted(\n           \"Attempted to insert tensors with combined size of '\", bytes,\n           \"' bytes into Staging Area with a memory limit of '\", memory_limit_,\n-          \"'.\"));\n+          \"'.\");\n     }\n \n     return Status::OK();"
    },
    {
      "index":10,
      "vuln_id":"GHSA-4f99-p9c2-3j8x",
      "cwe_id":"{'CWE-125', 'CWE-824'}",
      "score":7.8,
      "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae'}",
      "dataset":"osv",
      "summary":"Undefined behavior via `nullptr` reference binding in sparse matrix multiplication ### Impact\nThe [code for sparse matrix multiplication](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/sparse_matmul_op.cc#L954-L1086) is vulnerable to undefined behavior via binding a reference to `nullptr`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.SparseMatMul(\n  a=[[1.0,1.0,1.0]],\n  b=[[],[],[]],\n  transpose_a=False,\n  transpose_b=False,\n  a_is_sparse=False, \n  b_is_sparse=True)\n```\n\nThis occurs whenever the dimensions of `a` or `b` are 0 or less. In the case on one of these is 0, an empty output tensor should be allocated (to conserve the invariant that output tensors are always allocated when the operation is successful) but nothing should be written to it (that is, we should return early from the kernel implementation). Otherwise, attempts to write to this empty tensor would result in heap OOB access.\n\n### Patches\nWe have patched the issue in GitHub commit [e6cf28c72ba2eb949ca950d834dd6d66bb01cfae](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date":"2021-11-10",
      "chain_len":1,
      "project":"https:\/\/github.com\/tensorflow\/tensorflow",
      "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae",
      "commit_sha":"e6cf28c72ba2eb949ca950d834dd6d66bb01cfae",
      "patch":"SINGLE",
      "chain_ord":"['e6cf28c72ba2eb949ca950d834dd6d66bb01cfae']",
      "before_first_fix_commit":"{'d4fdd7830befb1f3aed8b4d1681471531856ae77'}",
      "last_fix_commit":"e6cf28c72ba2eb949ca950d834dd6d66bb01cfae",
      "chain_ord_pos":1.0,
      "commit_datetime":"10\/06\/2021, 04:54:15",
      "message":"Validate that matrix dimension sizes in SparseMatMul are positive.\n\nPiperOrigin-RevId: 401149683\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d",
      "author":"Penporn Koanantakool",
      "comments":null,
      "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
      "files":"{'tensorflow\/core\/kernels\/sparse_matmul_op.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae\/tensorflow%2Fcore%2Fkernels%2Fsparse_matmul_op.cc', 'patch': '@@ -32,6 +32,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/kernels\/fill_functor.h\"\\n #include \"tensorflow\/core\/lib\/core\/blocking_counter.h\"\\n #include \"tensorflow\/core\/lib\/core\/threadpool.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #include \"tensorflow\/core\/platform\/logging.h\"\\n #include \"tensorflow\/core\/platform\/macros.h\"\\n #include \"tensorflow\/core\/platform\/mutex.h\"\\n@@ -980,9 +981,18 @@ class SparseMatMulOp : public OpKernel {\\n                 errors::InvalidArgument(\\n                     \"Matrix size incompatible: a: \", a.shape().DebugString(),\\n                     \", b: \", b.shape().DebugString()));\\n+    OP_REQUIRES(ctx, m >= 0 && n >= 0 && k >= 0,\\n+                errors::InvalidArgument(\\n+                    \"Matrix dimensions cannot be negative: a: \",\\n+                    a.shape().DebugString(), \", b: \", b.shape().DebugString()));\\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, TensorShape({m, n}), &output));\\n \\n+    \/\/ Return early if at least one of the output dimension size is 0.\\n+    if (m == 0 || n == 0) {\\n+      return;\\n+    }\\n+\\n     if (k == 0) {\\n       \/\/ If the inner dimension k in the matrix multiplication is zero, we fill\\n       \/\/ the output with zeros.'}}",
      "message_norm":"validate that matrix dimension sizes in sparsematmul are positive.\n\npiperorigin-revid: 401149683\nchange-id: ib33eafc561a39c8741ece80b2edce6d4aae9a57d",
      "language":"en",
      "entities":"[('validate', 'ACTION', ''), ('401149683', 'SHA', 'generic_sha')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_matmul_op.cc'])",
      "num_files":1.0,
      "patch_content":"From e6cf28c72ba2eb949ca950d834dd6d66bb01cfae Mon Sep 17 00:00:00 2001\nFrom: Penporn Koanantakool <penporn@google.com>\nDate: Tue, 5 Oct 2021 21:54:15 -0700\nSubject: [PATCH] Validate that matrix dimension sizes in SparseMatMul are\n positive.\n\nPiperOrigin-RevId: 401149683\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d\n---\n tensorflow\/core\/kernels\/sparse_matmul_op.cc | 10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/sparse_matmul_op.cc b\/tensorflow\/core\/kernels\/sparse_matmul_op.cc\nindex a02afafa33e3ad..6bf9dfa3d8bb75 100644\n--- a\/tensorflow\/core\/kernels\/sparse_matmul_op.cc\n+++ b\/tensorflow\/core\/kernels\/sparse_matmul_op.cc\n@@ -32,6 +32,7 @@ limitations under the License.\n #include \"tensorflow\/core\/kernels\/fill_functor.h\"\n #include \"tensorflow\/core\/lib\/core\/blocking_counter.h\"\n #include \"tensorflow\/core\/lib\/core\/threadpool.h\"\n+#include \"tensorflow\/core\/platform\/errors.h\"\n #include \"tensorflow\/core\/platform\/logging.h\"\n #include \"tensorflow\/core\/platform\/macros.h\"\n #include \"tensorflow\/core\/platform\/mutex.h\"\n@@ -980,9 +981,18 @@ class SparseMatMulOp : public OpKernel {\n                 errors::InvalidArgument(\n                     \"Matrix size incompatible: a: \", a.shape().DebugString(),\n                     \", b: \", b.shape().DebugString()));\n+    OP_REQUIRES(ctx, m >= 0 && n >= 0 && k >= 0,\n+                errors::InvalidArgument(\n+                    \"Matrix dimensions cannot be negative: a: \",\n+                    a.shape().DebugString(), \", b: \", b.shape().DebugString()));\n     Tensor* output = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, TensorShape({m, n}), &output));\n \n+    \/\/ Return early if at least one of the output dimension size is 0.\n+    if (m == 0 || n == 0) {\n+      return;\n+    }\n+\n     if (k == 0) {\n       \/\/ If the inner dimension k in the matrix multiplication is zero, we fill\n       \/\/ the output with zeros.",
      "code_diff":"@@ -32,6 +32,7 @@ limitations under the License.\n #include \"tensorflow\/core\/kernels\/fill_functor.h\"\n #include \"tensorflow\/core\/lib\/core\/blocking_counter.h\"\n #include \"tensorflow\/core\/lib\/core\/threadpool.h\"\n+#include \"tensorflow\/core\/platform\/errors.h\"\n #include \"tensorflow\/core\/platform\/logging.h\"\n #include \"tensorflow\/core\/platform\/macros.h\"\n #include \"tensorflow\/core\/platform\/mutex.h\"\n@@ -980,9 +981,18 @@ class SparseMatMulOp : public OpKernel {\n                 errors::InvalidArgument(\n                     \"Matrix size incompatible: a: \", a.shape().DebugString(),\n                     \", b: \", b.shape().DebugString()));\n+    OP_REQUIRES(ctx, m >= 0 && n >= 0 && k >= 0,\n+                errors::InvalidArgument(\n+                    \"Matrix dimensions cannot be negative: a: \",\n+                    a.shape().DebugString(), \", b: \", b.shape().DebugString()));\n     Tensor* output = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, TensorShape({m, n}), &output));\n \n+    \/\/ Return early if at least one of the output dimension size is 0.\n+    if (m == 0 || n == 0) {\n+      return;\n+    }\n+\n     if (k == 0) {\n       \/\/ If the inner dimension k in the matrix multiplication is zero, we fill\n       \/\/ the output with zeros."
    },
    {
      "index":11,
      "vuln_id":"GHSA-5rqg-jm4f-cqx7",
      "cwe_id":"{'CWE-835'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75', 'https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd', 'https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26'}",
      "dataset":"osv",
      "summary":"Infinite loop causing Denial of Service in colors colors is a library for including colored text in node.js consoles. Between 07 and 09 January 2022, colors versions 1.4.1, 1.4.2, and 1.4.44-liberty-2 were published including malicious code that caused a Denial of Service due to an infinite loop. Software dependent on these versions experienced the printing of randomized characters to console and an infinite loop resulting in unbound system resource consumption.\n\nUsers of colors relying on these specific versions should downgrade to version 1.4.0.",
      "published_date":"2022-01-10",
      "chain_len":3,
      "project":"https:\/\/github.com\/Marak\/colors.js",
      "commit_href":"https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75",
      "commit_sha":"5d2d242f656103ac38086d6b26433a09f1c38c75",
      "patch":"MULTI",
      "chain_ord":"['137c6dae3339e97f4bbc838c221803c363b0a9fd', '5d2d242f656103ac38086d6b26433a09f1c38c75', '6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26']",
      "before_first_fix_commit":"{'5d2d242f656103ac38086d6b26433a09f1c38c75'}",
      "last_fix_commit":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26",
      "chain_ord_pos":2.0,
      "commit_datetime":"01\/08\/2022, 04:21:02",
      "message":"Fix bug",
      "author":"Marak",
      "comments":"{'com_1': {'author': 'bacloud22', 'datetime': '01\/08\/2022, 07:00:53', 'body': 'oops, now it works \ud83e\udd23'}, 'com_2': {'author': 'AuroPick', 'datetime': '01\/10\/2022, 01:19:13', 'body': 'delete this shit'}, 'com_3': {'author': 'KeZengOo', 'datetime': '01\/10\/2022, 02:21:07', 'body': 'Amazing\uff01'}, 'com_4': {'author': 'summic', 'datetime': '01\/10\/2022, 02:48:32', 'body': 'Disgusting!'}, 'com_5': {'author': 'zhang354455288', 'datetime': '01\/10\/2022, 06:50:25', 'body': 'niubi laotie'}, 'com_6': {'author': 'yyg1219', 'datetime': '01\/10\/2022, 07:10:16', 'body': 'niua niua'}, 'com_7': {'author': 'zhangwenwen12138', 'datetime': '01\/10\/2022, 08:10:05', 'body': '\u94c1\u5b50\uff0c\u4f60\u600e\u4e48\u4e86'}, 'com_8': {'author': 'vaecebyZ', 'datetime': '01\/10\/2022, 09:31:36', 'body': \"While we sympathize with you, you're doing a disservice to other developers.\ud83d\ude28\"}, 'com_9': {'author': 'chen-fac', 'datetime': '01\/10\/2022, 09:37:07', 'body': '\u524d\u6392\u51fa\u552e\u82b1\u751f\u74dc\u5b50'}, 'com_10': {'author': 'DragonCat1', 'datetime': '01\/10\/2022, 09:52:22', 'body': '\u5e7f\u544a\u4f4d\u62db\u79df'}, 'com_11': {'author': 'evanchen0629', 'datetime': '01\/10\/2022, 09:53:53', 'body': '\u524d\u9762\u7684\u540c\u5fd7\u628a\u811a\u6536\u4e00\u6536'}, 'com_12': {'author': 'wokalek', 'datetime': '01\/10\/2022, 09:58:35', 'body': 'Starege'}, 'com_13': {'author': 'brolnickij', 'datetime': '01\/10\/2022, 10:17:54', 'body': 'nice trolling :D'}, 'com_14': {'author': 'withsalt', 'datetime': '01\/10\/2022, 10:26:09', 'body': 'nice code!'}, 'com_15': {'author': 'Ansen', 'datetime': '01\/10\/2022, 10:29:24', 'body': 'six six six'}, 'com_16': {'author': 'SheltonZhu', 'datetime': '01\/10\/2022, 10:39:39', 'body': 'brilliant !!!!!'}, 'com_17': {'author': 'mxj1337', 'datetime': '01\/10\/2022, 11:00:51', 'body': 'LIKE'}, 'com_18': {'author': 'WeirdConstructor', 'datetime': '01\/10\/2022, 12:33:35', 'body': 'Obviously this bugfix is missing a regression test! ;-)'}, 'com_19': {'author': 'wuzhidexiaolang', 'datetime': '01\/10\/2022, 14:28:13', 'body': 'nice'}, 'com_20': {'author': 'manudevcode', 'datetime': '01\/10\/2022, 16:02:59', 'body': \"Lol, when your intentional error, doesn't work xD\"}, 'com_21': {'author': 'LuciusChen', 'datetime': '01\/10\/2022, 16:18:08', 'body': '\u725b\u903c\u554a'}, 'com_22': {'author': 'golangboy', 'datetime': '01\/10\/2022, 17:01:00', 'body': '\u524d\u7aef\u5708\u771f\u70ed\u95f9'}, 'com_23': {'author': 'prietales', 'datetime': '01\/10\/2022, 17:53:17', 'body': 'let am should be const.'}, 'com_24': {'author': 'xinx1n', 'datetime': '01\/11\/2022, 02:20:44', 'body': '\u82df\u5229\u56fd\u5bb6\u751f\u6b7b\u4ee5'}, 'com_25': {'author': 'paoqi1997', 'datetime': '01\/11\/2022, 02:20:59', 'body': '12, 3456'}, 'com_26': {'author': 'manudevcode', 'datetime': '01\/11\/2022, 03:31:54', 'body': '> 12, 3456\\r\\n\\r\\nLa tuya por si las dudas xD'}, 'com_27': {'author': '949nb', 'datetime': '01\/11\/2022, 06:47:08', 'body': 'nice code!'}, 'com_28': {'author': 'npljy', 'datetime': '01\/11\/2022, 08:20:14', 'body': \"If you want to make money from open source, then don't open source\"}, 'com_29': {'author': 'machinebitezz', 'datetime': '01\/11\/2022, 14:24:03', 'body': 'Power to you tbh'}, 'com_30': {'author': 'ethnh', 'datetime': '01\/11\/2022, 16:19:27', 'body': '\ud83d\udd34\ud83d\udfe0\ud83d\udfe1\ud83d\udfe2\ud83d\udd35\ud83d\udfe3\ud83d\udfe4\u26ab\u26aa nice colors'}, 'com_31': {'author': 'zhushiqiang', 'datetime': '01\/12\/2022, 01:47:25', 'body': '666'}, 'com_32': {'author': 'zhushiqiang', 'datetime': '01\/12\/2022, 13:39:52', 'body': '\u8fd9\u662f\u6765\u81eaQQ\u90ae\u7bb1\u7684\u5047\u671f\u81ea\u52a8\u56de\u590d\u90ae\u4ef6\u3002\\n\\xa0\\n\u60a8\u597d\uff0c\u6211\u6700\u8fd1\u6b63\u5728\u4f11\u5047\u4e2d\uff0c\u65e0\u6cd5\u4eb2\u81ea\u56de\u590d\u60a8\u7684\u90ae\u4ef6\u3002\u6211\u5c06\u5728\u5047\u671f\u7ed3\u675f\u540e\uff0c\u5c3d\u5feb\u7ed9\u60a8\u56de\u590d\u3002'}, 'com_33': {'author': 'joaodematejr', 'datetime': '01\/13\/2022, 02:30:37', 'body': '@brunoibias'}, 'com_34': {'author': 'Rusnura', 'datetime': '01\/13\/2022, 03:18:05', 'body': 'Hello World!'}, 'com_35': {'author': 'a6513375', 'datetime': '01\/13\/2022, 13:39:17', 'body': '> \\r\\n\\r\\n\u6211\u8d85'}, 'com_36': {'author': 'zbeanbean', 'datetime': '01\/14\/2022, 06:26:34', 'body': 'wondeful'}, 'com_37': {'author': 'PalmDevs', 'datetime': '01\/19\/2022, 09:58:13', 'body': 'Reject `let`, `const`. Return to `var`. \ud83d\ude0f'}, 'com_38': {'author': 'TechStudent10', 'datetime': '01\/19\/2022, 12:10:56', 'body': 'What bug are you fixing exactly?'}, 'com_39': {'author': 'frankhasen', 'datetime': '01\/19\/2022, 14:07:04', 'body': '> What bug are you fixing exactly?\\r\\n\\r\\nfixing capitalizm bro'}, 'com_40': {'author': 'TechStudent10', 'datetime': '01\/19\/2022, 14:48:09', 'body': '> > What bug are you fixing exactly?\\r\\n> \\r\\n> fixing capitalizm bro\\r\\n\\r\\ntrue i guess.'}, 'com_41': {'author': 'joerez', 'datetime': '01\/20\/2022, 21:33:57', 'body': 'put me in the screencap'}, 'com_42': {'author': 'aaj', 'datetime': '01\/20\/2022, 21:38:03', 'body': 'witnessed'}, 'com_43': {'author': 'yasath', 'datetime': '01\/28\/2022, 14:20:12', 'body': 'so real bestie'}, 'com_44': {'author': 'N1ark', 'datetime': '01\/28\/2022, 14:21:12', 'body': 'we stan'}}",
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'lib\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Marak\/colors.js\/raw\/5d2d242f656103ac38086d6b26433a09f1c38c75\/lib%2Findex.js', 'patch': \"@@ -15,7 +15,7 @@ require('.\/extendStringPrototype')();\\n \/* remove this line after testing *\/\\n let am = require('..\/lib\/custom\/american');\\n am();\\n-for (let i = 666; i < Infinity; i++;) {\\n+for (let i = 666; i < Infinity; i++) {\\n   if (i % 333) {\\n     \/\/ console.log('testing'.zalgo.rainbow)\\n   }\"}}",
      "message_norm":"fix bug",
      "language":"en",
      "entities":"[('fix', 'ACTION', ''), ('bug', 'FLAW', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['lib\/index.js'])",
      "num_files":1.0,
      "patch_content":"From 5d2d242f656103ac38086d6b26433a09f1c38c75 Mon Sep 17 00:00:00 2001\nFrom: Marak <marak.squires@gmail.com>\nDate: Fri, 7 Jan 2022 23:21:02 -0500\nSubject: [PATCH] Fix bug\n\n---\n lib\/index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lib\/index.js b\/lib\/index.js\nindex 5cdde14..2808f7f 100644\n--- a\/lib\/index.js\n+++ b\/lib\/index.js\n@@ -15,7 +15,7 @@ require('.\/extendStringPrototype')();\n \/* remove this line after testing *\/\n let am = require('..\/lib\/custom\/american');\n am();\n-for (let i = 666; i < Infinity; i++;) {\n+for (let i = 666; i < Infinity; i++) {\n   if (i % 333) {\n     \/\/ console.log('testing'.zalgo.rainbow)\n   }",
      "code_diff":"@@ -15,7 +15,7 @@ require('.\/extendStringPrototype')();\n \/* remove this line after testing *\/\n let am = require('..\/lib\/custom\/american');\n am();\n-for (let i = 666; i < Infinity; i++;) {\n+for (let i = 666; i < Infinity; i++) {\n   if (i % 333) {\n     \/\/ console.log('testing'.zalgo.rainbow)\n   }"
    },
    {
      "index":12,
      "vuln_id":"GHSA-gfh2-7jg5-653p",
      "cwe_id":"{'CWE-835'}",
      "score":4.0,
      "chain":"{'https:\/\/github.com\/appc\/docker2aci\/pull\/204\/commits\/54331ec7020e102935c31096f336d31f6400064f'}",
      "dataset":"osv",
      "summary":"Denial of Service in docker2aci docker2aci <= 0.12.3 has an infinite loop when handling local images with cyclic dependency chain.",
      "published_date":"2022-02-15",
      "chain_len":1,
      "project":"https:\/\/github.com\/appc\/docker2aci",
      "commit_href":"https:\/\/github.com\/appc\/docker2aci\/pull\/204\/commits\/54331ec7020e102935c31096f336d31f6400064f",
      "commit_sha":"54331ec7020e102935c31096f336d31f6400064f",
      "patch":"SINGLE",
      "chain_ord":"['54331ec7020e102935c31096f336d31f6400064f']",
      "before_first_fix_commit":"{'8a4173c3067a557fba64a03c6efac613dfbba6ac'}",
      "last_fix_commit":"54331ec7020e102935c31096f336d31f6400064f",
      "chain_ord_pos":1.0,
      "commit_datetime":"10\/10\/2016, 13:23:55",
      "message":"backend\/file: fix an infinite loop in deps walking (CVE-2016-8579)\n\nThis commit fixes a possible infinite loop while traversing\nthe dependency ancestry of a malformed local image file.\n\nThis has been assigned CVE-2016-8579:\nhttps:\/\/github.com\/appc\/docker2aci\/issues\/203#issuecomment-253494006",
      "author":"Luca Bruno",
      "comments":null,
      "stats":"{'additions': 11, 'deletions': 0, 'total': 11}",
      "files":"{'lib\/internal\/backend\/file\/file.go': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/appc\/docker2aci\/raw\/54331ec7020e102935c31096f336d31f6400064f\/lib%2Finternal%2Fbackend%2Ffile%2Ffile.go', 'patch': '@@ -279,14 +279,24 @@ func extractEmbeddedLayer(file *os.File, layerID string, outputPath string) (*os\\n \\treturn layerFile, nil\\n }\\n \\n+\/\/ getAncestry computes an image ancestry, returning an ordered list\\n+\/\/ of dependencies starting from the topmost image to the base.\\n+\/\/ It checks for dependency loops via duplicate detection in the image\\n+\/\/ chain and errors out in such cases.\\n func getAncestry(file *os.File, imgID string) ([]string, error) {\\n \\tvar ancestry []string\\n+\\tdeps := make(map[string]bool)\\n \\n \\tcurImgID := imgID\\n \\n \\tvar err error\\n \\tfor curImgID != \"\" {\\n+\\t\\tif deps[curImgID] {\\n+\\t\\t\\treturn nil, fmt.Errorf(\"dependency loop detected at image %q\", curImgID)\\n+\\t\\t}\\n+\\t\\tdeps[curImgID] = true\\n \\t\\tancestry = append(ancestry, curImgID)\\n+\\t\\tlog.Debug(fmt.Sprintf(\"Getting ancestry for layer %q\", curImgID))\\n \\t\\tcurImgID, err = getParent(file, curImgID)\\n \\t\\tif err != nil {\\n \\t\\t\\treturn nil, err\\n@@ -328,5 +338,6 @@ func getParent(file *os.File, imgID string) (string, error) {\\n \\t\\treturn \"\", err\\n \\t}\\n \\n+\\tlog.Debug(fmt.Sprintf(\"Layer %q depends on layer %q\", imgID, parent))\\n \\treturn parent, nil\\n }'}}",
      "message_norm":"backend\/file: fix an infinite loop in deps walking (cve-2016-8579)\n\nthis commit fixes a possible infinite loop while traversing\nthe dependency ancestry of a malformed local image file.\n\nthis has been assigned cve-2016-8579:\nhttps:\/\/github.com\/appc\/docker2aci\/issues\/203#issuecomment-253494006",
      "language":"en",
      "entities":"[('fix', 'ACTION', ''), ('infinite loop', 'SECWORD', ''), ('cve-2016-8579', 'VULNID', 'CVE'), ('fixes', 'ACTION', ''), ('infinite loop', 'SECWORD', ''), ('cve-2016-8579', 'VULNID', 'CVE'), ('https:\/\/github.com\/appc\/docker2aci\/issues\/203#issuecomment-253494006', 'URL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['lib\/internal\/backend\/file\/file.go'])",
      "num_files":1.0,
      "patch_content":"From 54331ec7020e102935c31096f336d31f6400064f Mon Sep 17 00:00:00 2001\nFrom: Luca Bruno <lucab@debian.org>\nDate: Mon, 10 Oct 2016 13:23:55 +0000\nSubject: [PATCH] backend\/file: fix an infinite loop in deps walking\n (CVE-2016-8579)\n\nThis commit fixes a possible infinite loop while traversing\nthe dependency ancestry of a malformed local image file.\n\nThis has been assigned CVE-2016-8579:\nhttps:\/\/github.com\/appc\/docker2aci\/issues\/203#issuecomment-253494006\n---\n lib\/internal\/backend\/file\/file.go | 11 +++++++++++\n 1 file changed, 11 insertions(+)\n\ndiff --git a\/lib\/internal\/backend\/file\/file.go b\/lib\/internal\/backend\/file\/file.go\nindex a83402df..d89cc937 100644\n--- a\/lib\/internal\/backend\/file\/file.go\n+++ b\/lib\/internal\/backend\/file\/file.go\n@@ -279,14 +279,24 @@ func extractEmbeddedLayer(file *os.File, layerID string, outputPath string) (*os\n \treturn layerFile, nil\n }\n \n+\/\/ getAncestry computes an image ancestry, returning an ordered list\n+\/\/ of dependencies starting from the topmost image to the base.\n+\/\/ It checks for dependency loops via duplicate detection in the image\n+\/\/ chain and errors out in such cases.\n func getAncestry(file *os.File, imgID string) ([]string, error) {\n \tvar ancestry []string\n+\tdeps := make(map[string]bool)\n \n \tcurImgID := imgID\n \n \tvar err error\n \tfor curImgID != \"\" {\n+\t\tif deps[curImgID] {\n+\t\t\treturn nil, fmt.Errorf(\"dependency loop detected at image %q\", curImgID)\n+\t\t}\n+\t\tdeps[curImgID] = true\n \t\tancestry = append(ancestry, curImgID)\n+\t\tlog.Debug(fmt.Sprintf(\"Getting ancestry for layer %q\", curImgID))\n \t\tcurImgID, err = getParent(file, curImgID)\n \t\tif err != nil {\n \t\t\treturn nil, err\n@@ -328,5 +338,6 @@ func getParent(file *os.File, imgID string) (string, error) {\n \t\treturn \"\", err\n \t}\n \n+\tlog.Debug(fmt.Sprintf(\"Layer %q depends on layer %q\", imgID, parent))\n \treturn parent, nil\n }",
      "code_diff":"@@ -279,14 +279,24 @@ func extractEmbeddedLayer(file *os.File, layerID string, outputPath string) (*os\n \treturn layerFile, nil\n }\n \n+\/\/ getAncestry computes an image ancestry, returning an ordered list\n+\/\/ of dependencies starting from the topmost image to the base.\n+\/\/ It checks for dependency loops via duplicate detection in the image\n+\/\/ chain and errors out in such cases.\n func getAncestry(file *os.File, imgID string) ([]string, error) {\n \tvar ancestry []string\n+\tdeps := make(map[string]bool)\n \n \tcurImgID := imgID\n \n \tvar err error\n \tfor curImgID != \"\" {\n+\t\tif deps[curImgID] {\n+\t\t\treturn nil, fmt.Errorf(\"dependency loop detected at image %q\", curImgID)\n+\t\t}\n+\t\tdeps[curImgID] = true\n \t\tancestry = append(ancestry, curImgID)\n+\t\tlog.Debug(fmt.Sprintf(\"Getting ancestry for layer %q\", curImgID))\n \t\tcurImgID, err = getParent(file, curImgID)\n \t\tif err != nil {\n \t\t\treturn nil, err\n@@ -328,5 +338,6 @@ func getParent(file *os.File, imgID string) (string, error) {\n \t\treturn \"\", err\n \t}\n \n+\tlog.Debug(fmt.Sprintf(\"Layer %q depends on layer %q\", imgID, parent))\n \treturn parent, nil\n }"
    },
    {
      "index":13,
      "vuln_id":"GHSA-5f38-9jw2-6r6h",
      "cwe_id":"{'CWE-79', 'CWE-843'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/rooseveltframework\/teddy\/commit\/64c556717b4879bf8d4c30067cf6e70d899a3dc0'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in teddy Teddy is a readable and easy to learn templating language. This affects the package teddy before 0.5.9. A type confusion vulnerability can be used to bypass input sanitization when the model content is an array (instead of a string).",
      "published_date":"2021-10-12",
      "chain_len":1,
      "project":"https:\/\/github.com\/rooseveltframework\/teddy",
      "commit_href":"https:\/\/github.com\/rooseveltframework\/teddy\/commit\/64c556717b4879bf8d4c30067cf6e70d899a3dc0",
      "commit_sha":"64c556717b4879bf8d4c30067cf6e70d899a3dc0",
      "patch":"SINGLE",
      "chain_ord":"['64c556717b4879bf8d4c30067cf6e70d899a3dc0']",
      "before_first_fix_commit":"{'90387d97c7a8f458a08dd3b72a4b0574000af5f8', 'fea0b218069ff00f86f2b24f2fd08be01cd6b8c1'}",
      "last_fix_commit":"64c556717b4879bf8d4c30067cf6e70d899a3dc0",
      "chain_ord_pos":1.0,
      "commit_datetime":"10\/07\/2021, 01:27:38",
      "message":"Merge pull request #518 from kethinov\/refactor-escape-entities\n\nrefactor escape entities for better type checking",
      "author":"Eric Newport",
      "comments":null,
      "stats":"{'additions': 15, 'deletions': 4, 'total': 19}",
      "files":"{'utils.js': {'additions': 15, 'deletions': 4, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rooseveltframework\/teddy\/raw\/64c556717b4879bf8d4c30067cf6e70d899a3dc0\/utils.js', 'patch': \"@@ -96,10 +96,21 @@ function escapeEntities (value) {\\n   let i\\n   let j\\n \\n-  if (value === undefined || typeof value === 'boolean' || typeof value === 'object') { \/\/ Cannot escape on these values\\n-    return value\\n-  } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\\n-    return `${value}`\\n+  if (typeof value === 'object') { \/\/ Cannot escape on this value\\n+    if (!value) {\\n+      return false \/\/ it is falsey to return false\\n+    } else if (Array.isArray(value)) {\\n+      if (value.length === 0) {\\n+        return false \/\/ empty arrays are falsey\\n+      } else {\\n+        return '[Array]' \/\/ print that it is an array with content in it, but do not print the contents\\n+      }\\n+    }\\n+    return '[Object]' \/\/ just print that it is an object, do not print the contents\\n+  } else if (value === undefined) { \/\/ Cannot escape on this value\\n+    return false \/\/ undefined is falsey\\n+  } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\\n+    return value \/\/ if it's already a boolean or a number just return it\\n   } else {\\n     \/\/ Loop through value to find HTML entities\\n     for (i = 0; i < value.length; i++) {\"}}",
      "message_norm":"merge pull request #518 from kethinov\/refactor-escape-entities\n\nrefactor escape entities for better type checking",
      "language":"en",
      "entities":"[('#518', 'ISSUE', ''), ('escape', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['utils.js'])",
      "num_files":1.0,
      "patch_content":"From f51225de37295e73306281246eed808bb9867288 Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Mon, 4 Oct 2021 13:32:14 -0400\nSubject: [PATCH 1\/5] refactor escape entities for better type checking\n\n---\n utils.js | 11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex d8803272..7a2c3972 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -96,8 +96,15 @@ function escapeEntities (value) {\n   let i\n   let j\n \n-  if (value === undefined || typeof value === 'boolean' || typeof value === 'object') { \/\/ Cannot escape on these values\n-    return value\n+  if (typeof value === 'object') { \/\/ Cannot escape on this value\n+    if (Array.isArray(value) && value.length === 0) {\n+      return false \/\/ empty arrays are falsey\n+    }\n+    return true \/\/ assumed to be truthy if something is in it\n+  } else if (value === undefined) { \/\/ Cannot escape on this value\n+    return false \/\/ undefined is falsey\n+  } else if (typeof value === 'boolean') { \/\/ Cannot escape on this value\n+    return value \/\/ it's already a boolean so just return the boolean\n   } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\n     return `${value}`\n   } else {\n\nFrom 11c082c83d05ab1b359e8a51ef475604b149e742 Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Tue, 5 Oct 2021 13:37:33 -0400\nSubject: [PATCH 2\/5] remove unnecessary abstraction\n\n---\n utils.js | 6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex 7a2c3972..605c1f5b 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -103,10 +103,8 @@ function escapeEntities (value) {\n     return true \/\/ assumed to be truthy if something is in it\n   } else if (value === undefined) { \/\/ Cannot escape on this value\n     return false \/\/ undefined is falsey\n-  } else if (typeof value === 'boolean') { \/\/ Cannot escape on this value\n-    return value \/\/ it's already a boolean so just return the boolean\n-  } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\n-    return `${value}`\n+  } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\n+    return value \/\/ if it's already a boolean or a number just return it\n   } else {\n     \/\/ Loop through value to find HTML entities\n     for (i = 0; i < value.length; i++) {\n\nFrom 370c9abf6a15ed517d65e9a55cabc36911bbcd95 Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Tue, 5 Oct 2021 13:49:13 -0400\nSubject: [PATCH 3\/5] refactor to make output more clear\n\n---\n utils.js | 10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex 605c1f5b..00cb6761 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -97,10 +97,14 @@ function escapeEntities (value) {\n   let j\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n-    if (Array.isArray(value) && value.length === 0) {\n-      return false \/\/ empty arrays are falsey\n+    if (Array.isArray(value)) {\n+      if (value.length === 0) {\n+        return false \/\/ empty arrays are falsey\n+      } else {\n+        return '[Array]' \/\/ print that it is an array with content in it, but do not print the contents\n+      }\n     }\n-    return true \/\/ assumed to be truthy if something is in it\n+    return '[Object]' \/\/ just print that it is an object, do not print the contents\n   } else if (value === undefined) { \/\/ Cannot escape on this value\n     return false \/\/ undefined is falsey\n   } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\n\nFrom 1b09ea8280875fdc1333a7a372774fcd90161a1f Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Tue, 5 Oct 2021 13:55:10 -0400\nSubject: [PATCH 4\/5] catch all falsey values\n\n---\n utils.js | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex 00cb6761..08188707 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -97,7 +97,9 @@ function escapeEntities (value) {\n   let j\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n-    if (Array.isArray(value)) {\n+    if (!value) {\n+      return false \/\/ it is otherwise falsey\n+    } else if (Array.isArray(value)) {\n       if (value.length === 0) {\n         return false \/\/ empty arrays are falsey\n       } else {\n\nFrom fea0b218069ff00f86f2b24f2fd08be01cd6b8c1 Mon Sep 17 00:00:00 2001\nFrom: Eric Newport <kethinov@gmail.com>\nDate: Tue, 5 Oct 2021 13:56:04 -0400\nSubject: [PATCH 5\/5] clarify comment\n\n---\n utils.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/utils.js b\/utils.js\nindex 08188707..b81be34d 100644\n--- a\/utils.js\n+++ b\/utils.js\n@@ -98,7 +98,7 @@ function escapeEntities (value) {\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n     if (!value) {\n-      return false \/\/ it is otherwise falsey\n+      return false \/\/ it is falsey to return false\n     } else if (Array.isArray(value)) {\n       if (value.length === 0) {\n         return false \/\/ empty arrays are falsey",
      "code_diff":"@@ -96,8 +96,15 @@ function escapeEntities (value) {\n   let i\n   let j\n \n-  if (value === undefined || typeof value === 'boolean' || typeof value === 'object') { \/\/ Cannot escape on these values\n-    return value\n+  if (typeof value === 'object') { \/\/ Cannot escape on this value\n+    if (Array.isArray(value) && value.length === 0) {\n+      return false \/\/ empty arrays are falsey\n+    }\n+    return true \/\/ assumed to be truthy if something is in it\n+  } else if (value === undefined) { \/\/ Cannot escape on this value\n+    return false \/\/ undefined is falsey\n+  } else if (typeof value === 'boolean') { \/\/ Cannot escape on this value\n+    return value \/\/ it's already a boolean so just return the boolean\n   } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\n     return `${value}`\n   } else {\n\nFrom: Eric Newport <kethinov@gmail.com>\n\n utils.js | 6 ++----\n 1 file changed, 2 insertions(+), 4 deletions(-)\n\n@@ -103,10 +103,8 @@ function escapeEntities (value) {\n     return true \/\/ assumed to be truthy if something is in it\n   } else if (value === undefined) { \/\/ Cannot escape on this value\n     return false \/\/ undefined is falsey\n-  } else if (typeof value === 'boolean') { \/\/ Cannot escape on this value\n-    return value \/\/ it's already a boolean so just return the boolean\n-  } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\n-    return `${value}`\n+  } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\n+    return value \/\/ if it's already a boolean or a number just return it\n   } else {\n     \/\/ Loop through value to find HTML entities\n     for (i = 0; i < value.length; i++) {\n\nFrom: Eric Newport <kethinov@gmail.com>\n\n utils.js | 10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\n@@ -97,10 +97,14 @@ function escapeEntities (value) {\n   let j\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n-    if (Array.isArray(value) && value.length === 0) {\n-      return false \/\/ empty arrays are falsey\n+    if (Array.isArray(value)) {\n+      if (value.length === 0) {\n+        return false \/\/ empty arrays are falsey\n+      } else {\n+        return '[Array]' \/\/ print that it is an array with content in it, but do not print the contents\n+      }\n     }\n-    return true \/\/ assumed to be truthy if something is in it\n+    return '[Object]' \/\/ just print that it is an object, do not print the contents\n   } else if (value === undefined) { \/\/ Cannot escape on this value\n     return false \/\/ undefined is falsey\n   } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\n\nFrom: Eric Newport <kethinov@gmail.com>\n\n utils.js | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\n@@ -97,7 +97,9 @@ function escapeEntities (value) {\n   let j\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n-    if (Array.isArray(value)) {\n+    if (!value) {\n+      return false \/\/ it is otherwise falsey\n+    } else if (Array.isArray(value)) {\n       if (value.length === 0) {\n         return false \/\/ empty arrays are falsey\n       } else {\n\nFrom: Eric Newport <kethinov@gmail.com>\n\n utils.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n@@ -98,7 +98,7 @@ function escapeEntities (value) {\n \n   if (typeof value === 'object') { \/\/ Cannot escape on this value\n     if (!value) {\n-      return false \/\/ it is otherwise falsey\n+      return false \/\/ it is falsey to return false\n     } else if (Array.isArray(value)) {\n       if (value.length === 0) {\n         return false \/\/ empty arrays are falsey"
    },
    {
      "index":14,
      "vuln_id":"GHSA-f4rr-5m7v-wxcw",
      "cwe_id":"{'CWE-843'}",
      "score":5.5,
      "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1'}",
      "dataset":"osv",
      "summary":"Type confusion leading to `CHECK`-failure based denial of service in TensorFlow ### Impact\nThe [macros that TensorFlow uses for writing assertions (e.g., `CHECK_LT`, `CHECK_GT`, etc.)](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/platform\/default\/logging.h) have an incorrect logic when comparing `size_t` and `int` values. Due to type conversion rules, several of the macros would trigger incorrectly.\n\n### Patches\nWe have patched the issue in GitHub commit [b917181c29b50cb83399ba41f4d938dc369109a1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1) (merging GitHub PR [#55730](https:\/\/github.com\/tensorflow\/tensorflow\/pull\/55730)).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/55530).",
      "published_date":"2022-05-24",
      "chain_len":1,
      "project":"https:\/\/github.com\/tensorflow\/tensorflow",
      "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1",
      "commit_sha":"b917181c29b50cb83399ba41f4d938dc369109a1",
      "patch":"SINGLE",
      "chain_ord":"['b917181c29b50cb83399ba41f4d938dc369109a1']",
      "before_first_fix_commit":"{'cce6f6484e967a0be4df8702c8ac36d021542455', 'd73521b7603f10e3029a2f1cd5067ca985738fc8'}",
      "last_fix_commit":"b917181c29b50cb83399ba41f4d938dc369109a1",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/28\/2022, 21:41:18",
      "message":"Merge pull request #55730 from graphcore:awf\/issue-55530\n\nPiperOrigin-RevId: 445252025",
      "author":"TensorFlower Gardener",
      "comments":null,
      "stats":"{'additions': 73, 'deletions': 28, 'total': 101}",
      "files":"{'tensorflow\/core\/platform\/default\/logging.h': {'additions': 73, 'deletions': 28, 'changes': 101, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b917181c29b50cb83399ba41f4d938dc369109a1\/tensorflow%2Fcore%2Fplatform%2Fdefault%2Flogging.h', 'patch': '@@ -85,7 +85,7 @@ class LogMessage : public std::basic_ostringstream<char> {\\n \/\/ that the ternary VLOG() implementation is balanced, type wise.\\n struct Voidifier {\\n   template <typename T>\\n-  void operator&(const T&)const {}\\n+  void operator&(const T&) const {}\\n };\\n \\n \/\/ LogMessageFatal ensures the process will exit in failure after\\n@@ -348,11 +348,13 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\\n }\\n \\n \/\/ Helper functions for CHECK_OP macro.\\n-\/\/ The (int, int) specialization works around the issue that the compiler\\n+\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\\n+\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\\n+\/\/ This happens if, for example, those are used as token names in a\\n+\/\/ yacc grammar.\\n+\/\/ The (int, int) overload works around the issue that the compiler\\n \/\/ will not instantiate the template version of the function on values of\\n \/\/ unnamed enum type - see comment below.\\n-\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\\n-\/\/ comparison errors while still being thorough with the comparison.\\n #define TF_DEFINE_CHECK_OP_IMPL(name, op)                                 \\\\\\n   template <typename T1, typename T2>                                     \\\\\\n   inline string* name##Impl(const T1& v1, const T2& v2,                   \\\\\\n@@ -364,34 +366,77 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\\n   }                                                                       \\\\\\n   inline string* name##Impl(int v1, int v2, const char* exprtext) {       \\\\\\n     return name##Impl<int, int>(v1, v2, exprtext);                        \\\\\\n-  }                                                                       \\\\\\n-  inline string* name##Impl(const size_t v1, const int v2,                \\\\\\n-                            const char* exprtext) {                       \\\\\\n-    if (TF_PREDICT_FALSE(v2 < 0)) {                                       \\\\\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\\\\n-    }                                                                     \\\\\\n-    return name##Impl<size_t, size_t>(v1, v2, exprtext);                  \\\\\\n-  }                                                                       \\\\\\n-  inline string* name##Impl(const int v1, const size_t v2,                \\\\\\n-                            const char* exprtext) {                       \\\\\\n-    if (TF_PREDICT_FALSE(v2 >= std::numeric_limits<int>::max())) {        \\\\\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\\\\n-    }                                                                     \\\\\\n-    const size_t uval = (size_t)((unsigned)v2);                           \\\\\\n-    return name##Impl<size_t, size_t>(v1, uval, exprtext);                \\\\\\n   }\\n \\n-\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\\n-\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\\n-\/\/ This happens if, for example, those are used as token names in a\\n-\/\/ yacc grammar.\\n-TF_DEFINE_CHECK_OP_IMPL(Check_EQ,\\n-                        ==)  \/\/ Compilation error with CHECK_EQ(NULL, x)?\\n-TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)  \/\/ Use CHECK(x == NULL) instead.\\n+\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\\n+\/\/ comparison errors while still being thorough with the comparison.\\n+\\n+TF_DEFINE_CHECK_OP_IMPL(Check_EQ, ==)\\n+\/\/ Compilation error with CHECK_EQ(NULL, x)?\\n+\/\/ Use CHECK(x == NULL) instead.\\n+\\n+inline string* Check_EQImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (TF_PREDICT_FALSE(v1 < 0))\\n+    ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+\\n+  return Check_EQImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_EQImpl(size_t v1, int v2, const char* exprtext) {\\n+  return Check_EQImpl(v2, v1, exprtext);\\n+}\\n+\\n+TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)\\n+\\n+inline string* Check_NEImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 < 0) return NULL;\\n+\\n+  return Check_NEImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_NEImpl(size_t v1, int v2, const char* exprtext) {\\n+  return Check_NEImpl(v2, v1, exprtext);\\n+}\\n+\\n TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)\\n+\\n+inline string* Check_LEImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 <= 0) return NULL;\\n+\\n+  return Check_LEImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_LEImpl(size_t v1, int v2, const char* exprtext) {\\n+  if (TF_PREDICT_FALSE(v2 < 0))\\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+  return Check_LEImpl(v1, size_t(v2), exprtext);\\n+}\\n+\\n TF_DEFINE_CHECK_OP_IMPL(Check_LT, <)\\n-TF_DEFINE_CHECK_OP_IMPL(Check_GE, >=)\\n-TF_DEFINE_CHECK_OP_IMPL(Check_GT, >)\\n+\\n+inline string* Check_LTImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 < 0) return NULL;\\n+\\n+  return Check_LTImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_LTImpl(size_t v1, int v2, const char* exprtext) {\\n+  if (v2 < 0)\\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+  return Check_LTImpl(v1, size_t(v2), exprtext);\\n+}\\n+\\n+\/\/ Implement GE,GT in terms of LE,LT\\n+template <typename T1, typename T2>\\n+inline string* Check_GEImpl(const T1& v1, const T2& v2, const char* exprtext) {\\n+  return Check_LEImpl(v2, v1, exprtext);\\n+}\\n+\\n+template <typename T1, typename T2>\\n+inline string* Check_GTImpl(const T1& v1, const T2& v2, const char* exprtext) {\\n+  return Check_LTImpl(v2, v1, exprtext);\\n+}\\n+\\n #undef TF_DEFINE_CHECK_OP_IMPL\\n \\n \/\/ In optimized mode, use CheckOpString to hint to compiler that'}}",
      "message_norm":"merge pull request #55730 from graphcore:awf\/issue-55530\n\npiperorigin-revid: 445252025",
      "language":"en",
      "entities":"[('#55730', 'ISSUE', ''), ('445252025', 'SHA', 'generic_sha')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['tensorflow\/core\/platform\/default\/logging.h'])",
      "num_files":1.0,
      "patch_content":"From a3aada9b20f48f36f4484f8da3df290d3ee3a5da Mon Sep 17 00:00:00 2001\nFrom: Andrew Fitzgibbon <awf@graphcore.ai>\nDate: Mon, 25 Apr 2022 14:40:21 +0100\nSubject: [PATCH 1\/3] Fixe size_t vs int logic in CHECK_OP\n\n---\n tensorflow\/core\/platform\/default\/logging.h | 114 +++++++++++++++------\n 1 file changed, 85 insertions(+), 29 deletions(-)\n\ndiff --git a\/tensorflow\/core\/platform\/default\/logging.h b\/tensorflow\/core\/platform\/default\/logging.h\nindex 86e7da1d9669b2..95f55ca187399d 100644\n--- a\/tensorflow\/core\/platform\/default\/logging.h\n+++ b\/tensorflow\/core\/platform\/default\/logging.h\n@@ -348,12 +348,14 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\n }\n \n \/\/ Helper functions for CHECK_OP macro.\n-\/\/ The (int, int) specialization works around the issue that the compiler\n+\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\n+\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\n+\/\/ This happens if, for example, those are used as token names in a\n+\/\/ yacc grammar.\n+\/\/ The (int, int) overload works around the issue that the compiler\n \/\/ will not instantiate the template version of the function on values of\n \/\/ unnamed enum type - see comment below.\n-\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\n-\/\/ comparison errors while still being thorough with the comparison.\n-#define TF_DEFINE_CHECK_OP_IMPL(name, op)                                 \\\n+#define TF_DEFINE_CHECK_OP_IMPL(name, op)                            \\\n   template <typename T1, typename T2>                                     \\\n   inline string* name##Impl(const T1& v1, const T2& v2,                   \\\n                             const char* exprtext) {                       \\\n@@ -364,34 +366,88 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\n   }                                                                       \\\n   inline string* name##Impl(int v1, int v2, const char* exprtext) {       \\\n     return name##Impl<int, int>(v1, v2, exprtext);                        \\\n-  }                                                                       \\\n-  inline string* name##Impl(const size_t v1, const int v2,                \\\n-                            const char* exprtext) {                       \\\n-    if (TF_PREDICT_FALSE(v2 < 0)) {                                       \\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\n-    }                                                                     \\\n-    return name##Impl<size_t, size_t>(v1, v2, exprtext);                  \\\n-  }                                                                       \\\n-  inline string* name##Impl(const int v1, const size_t v2,                \\\n-                            const char* exprtext) {                       \\\n-    if (TF_PREDICT_FALSE(v2 >= std::numeric_limits<int>::max())) {        \\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\n-    }                                                                     \\\n-    const size_t uval = (size_t)((unsigned)v2);                           \\\n-    return name##Impl<size_t, size_t>(v1, uval, exprtext);                \\\n-  }\n+  }                                                                       \n+\n+\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\n+\/\/ comparison errors while still being thorough with the comparison.\n+\n+TF_DEFINE_CHECK_OP_IMPL(Check_EQ, ==)\n+\/\/ Compilation error with CHECK_EQ(NULL, x)?\n+\/\/ Use CHECK(x == NULL) instead.\n+\n+inline string* Check_EQImpl(int v1, size_t v2,\n+                            const char* exprtext) {\n+  if (TF_PREDICT_FALSE(v1 < 0))\n+    ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n+\n+  return Check_EQImpl(size_t(v1), v2, exprtext);\n+}\n+\n+inline string* Check_EQImpl(size_t v1, int v2,\n+                            const char* exprtext) {\n+  return Check_EQImpl(v2, v1, exprtext);\n+}\n+\n+TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)\n+\n+inline string* Check_NEImpl(int v1, size_t v2,\n+                            const char* exprtext) {\n+  if (v1 < 0)\n+    return NULL; \n+    \n+  return Check_NEImpl(size_t(v1), v2, exprtext);\n+}\n+\n+inline string* Check_NEImpl(size_t v1, int v2,\n+                            const char* exprtext) {\n+  return Check_NEImpl(v2, v1, exprtext);\n+}\n \n-\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\n-\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\n-\/\/ This happens if, for example, those are used as token names in a\n-\/\/ yacc grammar.\n-TF_DEFINE_CHECK_OP_IMPL(Check_EQ,\n-                        ==)  \/\/ Compilation error with CHECK_EQ(NULL, x)?\n-TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)  \/\/ Use CHECK(x == NULL) instead.\n TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)\n+\n+inline string* Check_LEImpl(int v1, size_t v2,\n+                            const char* exprtext) {\n+  if (v1 <= 0)\n+    return NULL;\n+\n+  return Check_LEImpl(size_t(v1), v2, exprtext);\n+}\n+\n+inline string* Check_LEImpl(size_t v1, int v2,\n+                            const char* exprtext) {\n+  if (TF_PREDICT_FALSE(v2 < 0))\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n+  return Check_LEImpl(v1, size_t(v2), exprtext);\n+}\n+\n TF_DEFINE_CHECK_OP_IMPL(Check_LT, <)\n-TF_DEFINE_CHECK_OP_IMPL(Check_GE, >=)\n-TF_DEFINE_CHECK_OP_IMPL(Check_GT, >)\n+\n+inline string* Check_LTImpl(int v1, size_t v2,\n+                            const char* exprtext) {\n+  if (v1 < 0)\n+    return NULL;\n+\n+  return Check_LTImpl(size_t(v1), v2, exprtext);\n+}\n+\n+inline string* Check_LTImpl(size_t v1, int v2,\n+                            const char* exprtext) {\n+  if (v2 < 0)\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n+  return Check_LTImpl(v1, size_t(v2), exprtext);\n+}\n+\n+\/\/ Implement GE,GT in terms of LE,LT\n+template <typename T1, typename T2>\n+inline string* Check_GEImpl(const T1& v1, const T2& v2, const char* exprtext) {\n+  return Check_LEImpl(v2, v1, exprtext);\n+}\n+\n+template <typename T1, typename T2>\n+inline string* Check_GTImpl(const T1& v1, const T2& v2, const char* exprtext) {\n+  return Check_LTImpl(v2, v1, exprtext);\n+}\n+\n #undef TF_DEFINE_CHECK_OP_IMPL\n \n \/\/ In optimized mode, use CheckOpString to hint to compiler that\n\nFrom f564d1feb7b56349e30028cd26690e651f7f0558 Mon Sep 17 00:00:00 2001\nFrom: Andrew Fitzgibbon <awf@graphcore.ai>\nDate: Mon, 25 Apr 2022 17:50:23 +0100\nSubject: [PATCH 2\/3] clang-format\n\n---\n tensorflow\/core\/platform\/default\/logging.h | 39 ++++++++--------------\n 1 file changed, 14 insertions(+), 25 deletions(-)\n\ndiff --git a\/tensorflow\/core\/platform\/default\/logging.h b\/tensorflow\/core\/platform\/default\/logging.h\nindex 95f55ca187399d..8666a8d4ace254 100644\n--- a\/tensorflow\/core\/platform\/default\/logging.h\n+++ b\/tensorflow\/core\/platform\/default\/logging.h\n@@ -355,7 +355,7 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\n \/\/ The (int, int) overload works around the issue that the compiler\n \/\/ will not instantiate the template version of the function on values of\n \/\/ unnamed enum type - see comment below.\n-#define TF_DEFINE_CHECK_OP_IMPL(name, op)                            \\\n+#define TF_DEFINE_CHECK_OP_IMPL(name, op)                                 \\\n   template <typename T1, typename T2>                                     \\\n   inline string* name##Impl(const T1& v1, const T2& v2,                   \\\n                             const char* exprtext) {                       \\\n@@ -366,7 +366,7 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\n   }                                                                       \\\n   inline string* name##Impl(int v1, int v2, const char* exprtext) {       \\\n     return name##Impl<int, int>(v1, v2, exprtext);                        \\\n-  }                                                                       \n+  }\n \n \/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\n \/\/ comparison errors while still being thorough with the comparison.\n@@ -375,46 +375,38 @@ TF_DEFINE_CHECK_OP_IMPL(Check_EQ, ==)\n \/\/ Compilation error with CHECK_EQ(NULL, x)?\n \/\/ Use CHECK(x == NULL) instead.\n \n-inline string* Check_EQImpl(int v1, size_t v2,\n-                            const char* exprtext) {\n+inline string* Check_EQImpl(int v1, size_t v2, const char* exprtext) {\n   if (TF_PREDICT_FALSE(v1 < 0))\n     ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n \n   return Check_EQImpl(size_t(v1), v2, exprtext);\n }\n \n-inline string* Check_EQImpl(size_t v1, int v2,\n-                            const char* exprtext) {\n+inline string* Check_EQImpl(size_t v1, int v2, const char* exprtext) {\n   return Check_EQImpl(v2, v1, exprtext);\n }\n \n TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)\n \n-inline string* Check_NEImpl(int v1, size_t v2,\n-                            const char* exprtext) {\n-  if (v1 < 0)\n-    return NULL; \n-    \n+inline string* Check_NEImpl(int v1, size_t v2, const char* exprtext) {\n+  if (v1 < 0) return NULL;\n+\n   return Check_NEImpl(size_t(v1), v2, exprtext);\n }\n \n-inline string* Check_NEImpl(size_t v1, int v2,\n-                            const char* exprtext) {\n+inline string* Check_NEImpl(size_t v1, int v2, const char* exprtext) {\n   return Check_NEImpl(v2, v1, exprtext);\n }\n \n TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)\n \n-inline string* Check_LEImpl(int v1, size_t v2,\n-                            const char* exprtext) {\n-  if (v1 <= 0)\n-    return NULL;\n+inline string* Check_LEImpl(int v1, size_t v2, const char* exprtext) {\n+  if (v1 <= 0) return NULL;\n \n   return Check_LEImpl(size_t(v1), v2, exprtext);\n }\n \n-inline string* Check_LEImpl(size_t v1, int v2,\n-                            const char* exprtext) {\n+inline string* Check_LEImpl(size_t v1, int v2, const char* exprtext) {\n   if (TF_PREDICT_FALSE(v2 < 0))\n     return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n   return Check_LEImpl(v1, size_t(v2), exprtext);\n@@ -422,16 +414,13 @@ inline string* Check_LEImpl(size_t v1, int v2,\n \n TF_DEFINE_CHECK_OP_IMPL(Check_LT, <)\n \n-inline string* Check_LTImpl(int v1, size_t v2,\n-                            const char* exprtext) {\n-  if (v1 < 0)\n-    return NULL;\n+inline string* Check_LTImpl(int v1, size_t v2, const char* exprtext) {\n+  if (v1 < 0) return NULL;\n \n   return Check_LTImpl(size_t(v1), v2, exprtext);\n }\n \n-inline string* Check_LTImpl(size_t v1, int v2,\n-                            const char* exprtext) {\n+inline string* Check_LTImpl(size_t v1, int v2, const char* exprtext) {\n   if (v2 < 0)\n     return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n   return Check_LTImpl(v1, size_t(v2), exprtext);\n\nFrom d73521b7603f10e3029a2f1cd5067ca985738fc8 Mon Sep 17 00:00:00 2001\nFrom: Andrew Fitzgibbon <awf@graphcore.ai>\nDate: Tue, 26 Apr 2022 08:30:22 +0100\nSubject: [PATCH 3\/3] Clang format version mismatch\n\n---\n tensorflow\/core\/platform\/default\/logging.h | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/platform\/default\/logging.h b\/tensorflow\/core\/platform\/default\/logging.h\nindex 8666a8d4ace254..dfee3a62c47028 100644\n--- a\/tensorflow\/core\/platform\/default\/logging.h\n+++ b\/tensorflow\/core\/platform\/default\/logging.h\n@@ -85,7 +85,7 @@ class LogMessage : public std::basic_ostringstream<char> {\n \/\/ that the ternary VLOG() implementation is balanced, type wise.\n struct Voidifier {\n   template <typename T>\n-  void operator&(const T&)const {}\n+  void operator&(const T&) const {}\n };\n \n \/\/ LogMessageFatal ensures the process will exit in failure after",
      "code_diff":"@@ -348,12 +348,14 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\n }\n \n \/\/ Helper functions for CHECK_OP macro.\n-\/\/ The (int, int) specialization works around the issue that the compiler\n+\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\n+\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\n+\/\/ This happens if, for example, those are used as token names in a\n+\/\/ yacc grammar.\n+\/\/ The (int, int) overload works around the issue that the compiler\n \/\/ will not instantiate the template version of the function on values of\n \/\/ unnamed enum type - see comment below.\n-\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\n-\/\/ comparison errors while still being thorough with the comparison.\n-#define TF_DEFINE_CHECK_OP_IMPL(name, op)                                 \\\n+#define TF_DEFINE_CHECK_OP_IMPL(name, op)                            \\\n   template <typename T1, typename T2>                                     \\\n   inline string* name##Impl(const T1& v1, const T2& v2,                   \\\n                             const char* exprtext) {                       \\\n@@ -364,34 +366,88 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\n   }                                                                       \\\n   inline string* name##Impl(int v1, int v2, const char* exprtext) {       \\\n     return name##Impl<int, int>(v1, v2, exprtext);                        \\\n-  }                                                                       \\\n-  inline string* name##Impl(const size_t v1, const int v2,                \\\n-                            const char* exprtext) {                       \\\n-    if (TF_PREDICT_FALSE(v2 < 0)) {                                       \\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\n-    }                                                                     \\\n-    return name##Impl<size_t, size_t>(v1, v2, exprtext);                  \\\n-  }                                                                       \\\n-  inline string* name##Impl(const int v1, const size_t v2,                \\\n-                            const char* exprtext) {                       \\\n-    if (TF_PREDICT_FALSE(v2 >= std::numeric_limits<int>::max())) {        \\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\n-    }                                                                     \\\n-    const size_t uval = (size_t)((unsigned)v2);                           \\\n-    return name##Impl<size_t, size_t>(v1, uval, exprtext);                \\\n-  }\n+  }                                                                       \n+\n+\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\n+\/\/ comparison errors while still being thorough with the comparison.\n+\n+TF_DEFINE_CHECK_OP_IMPL(Check_EQ, ==)\n+\/\/ Compilation error with CHECK_EQ(NULL, x)?\n+\/\/ Use CHECK(x == NULL) instead.\n+\n+inline string* Check_EQImpl(int v1, size_t v2,\n+                            const char* exprtext) {\n+  if (TF_PREDICT_FALSE(v1 < 0))\n+    ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n+\n+  return Check_EQImpl(size_t(v1), v2, exprtext);\n+}\n+\n+inline string* Check_EQImpl(size_t v1, int v2,\n+                            const char* exprtext) {\n+  return Check_EQImpl(v2, v1, exprtext);\n+}\n+\n+TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)\n+\n+inline string* Check_NEImpl(int v1, size_t v2,\n+                            const char* exprtext) {\n+  if (v1 < 0)\n+    return NULL; \n+    \n+  return Check_NEImpl(size_t(v1), v2, exprtext);\n+}\n+\n+inline string* Check_NEImpl(size_t v1, int v2,\n+                            const char* exprtext) {\n+  return Check_NEImpl(v2, v1, exprtext);\n+}\n \n-\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\n-\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\n-\/\/ This happens if, for example, those are used as token names in a\n-\/\/ yacc grammar.\n-TF_DEFINE_CHECK_OP_IMPL(Check_EQ,\n-                        ==)  \/\/ Compilation error with CHECK_EQ(NULL, x)?\n-TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)  \/\/ Use CHECK(x == NULL) instead.\n TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)\n+\n+inline string* Check_LEImpl(int v1, size_t v2,\n+                            const char* exprtext) {\n+  if (v1 <= 0)\n+    return NULL;\n+\n+  return Check_LEImpl(size_t(v1), v2, exprtext);\n+}\n+\n+inline string* Check_LEImpl(size_t v1, int v2,\n+                            const char* exprtext) {\n+  if (TF_PREDICT_FALSE(v2 < 0))\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n+  return Check_LEImpl(v1, size_t(v2), exprtext);\n+}\n+\n TF_DEFINE_CHECK_OP_IMPL(Check_LT, <)\n-TF_DEFINE_CHECK_OP_IMPL(Check_GE, >=)\n-TF_DEFINE_CHECK_OP_IMPL(Check_GT, >)\n+\n+inline string* Check_LTImpl(int v1, size_t v2,\n+                            const char* exprtext) {\n+  if (v1 < 0)\n+    return NULL;\n+\n+  return Check_LTImpl(size_t(v1), v2, exprtext);\n+}\n+\n+inline string* Check_LTImpl(size_t v1, int v2,\n+                            const char* exprtext) {\n+  if (v2 < 0)\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n+  return Check_LTImpl(v1, size_t(v2), exprtext);\n+}\n+\n+\/\/ Implement GE,GT in terms of LE,LT\n+template <typename T1, typename T2>\n+inline string* Check_GEImpl(const T1& v1, const T2& v2, const char* exprtext) {\n+  return Check_LEImpl(v2, v1, exprtext);\n+}\n+\n+template <typename T1, typename T2>\n+inline string* Check_GTImpl(const T1& v1, const T2& v2, const char* exprtext) {\n+  return Check_LTImpl(v2, v1, exprtext);\n+}\n+\n #undef TF_DEFINE_CHECK_OP_IMPL\n \n \/\/ In optimized mode, use CheckOpString to hint to compiler that\n\nFrom: Andrew Fitzgibbon <awf@graphcore.ai>\n\n tensorflow\/core\/platform\/default\/logging.h | 39 ++++++++--------------\n 1 file changed, 14 insertions(+), 25 deletions(-)\n\n@@ -355,7 +355,7 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\n \/\/ The (int, int) overload works around the issue that the compiler\n \/\/ will not instantiate the template version of the function on values of\n \/\/ unnamed enum type - see comment below.\n-#define TF_DEFINE_CHECK_OP_IMPL(name, op)                            \\\n+#define TF_DEFINE_CHECK_OP_IMPL(name, op)                                 \\\n   template <typename T1, typename T2>                                     \\\n   inline string* name##Impl(const T1& v1, const T2& v2,                   \\\n                             const char* exprtext) {                       \\\n@@ -366,7 +366,7 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\n   }                                                                       \\\n   inline string* name##Impl(int v1, int v2, const char* exprtext) {       \\\n     return name##Impl<int, int>(v1, v2, exprtext);                        \\\n-  }                                                                       \n+  }\n \n \/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\n \/\/ comparison errors while still being thorough with the comparison.\n@@ -375,46 +375,38 @@ TF_DEFINE_CHECK_OP_IMPL(Check_EQ, ==)\n \/\/ Compilation error with CHECK_EQ(NULL, x)?\n \/\/ Use CHECK(x == NULL) instead.\n \n-inline string* Check_EQImpl(int v1, size_t v2,\n-                            const char* exprtext) {\n+inline string* Check_EQImpl(int v1, size_t v2, const char* exprtext) {\n   if (TF_PREDICT_FALSE(v1 < 0))\n     ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n \n   return Check_EQImpl(size_t(v1), v2, exprtext);\n }\n \n-inline string* Check_EQImpl(size_t v1, int v2,\n-                            const char* exprtext) {\n+inline string* Check_EQImpl(size_t v1, int v2, const char* exprtext) {\n   return Check_EQImpl(v2, v1, exprtext);\n }\n \n TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)\n \n-inline string* Check_NEImpl(int v1, size_t v2,\n-                            const char* exprtext) {\n-  if (v1 < 0)\n-    return NULL; \n-    \n+inline string* Check_NEImpl(int v1, size_t v2, const char* exprtext) {\n+  if (v1 < 0) return NULL;\n+\n   return Check_NEImpl(size_t(v1), v2, exprtext);\n }\n \n-inline string* Check_NEImpl(size_t v1, int v2,\n-                            const char* exprtext) {\n+inline string* Check_NEImpl(size_t v1, int v2, const char* exprtext) {\n   return Check_NEImpl(v2, v1, exprtext);\n }\n \n TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)\n \n-inline string* Check_LEImpl(int v1, size_t v2,\n-                            const char* exprtext) {\n-  if (v1 <= 0)\n-    return NULL;\n+inline string* Check_LEImpl(int v1, size_t v2, const char* exprtext) {\n+  if (v1 <= 0) return NULL;\n \n   return Check_LEImpl(size_t(v1), v2, exprtext);\n }\n \n-inline string* Check_LEImpl(size_t v1, int v2,\n-                            const char* exprtext) {\n+inline string* Check_LEImpl(size_t v1, int v2, const char* exprtext) {\n   if (TF_PREDICT_FALSE(v2 < 0))\n     return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n   return Check_LEImpl(v1, size_t(v2), exprtext);\n@@ -422,16 +414,13 @@ inline string* Check_LEImpl(size_t v1, int v2,\n \n TF_DEFINE_CHECK_OP_IMPL(Check_LT, <)\n \n-inline string* Check_LTImpl(int v1, size_t v2,\n-                            const char* exprtext) {\n-  if (v1 < 0)\n-    return NULL;\n+inline string* Check_LTImpl(int v1, size_t v2, const char* exprtext) {\n+  if (v1 < 0) return NULL;\n \n   return Check_LTImpl(size_t(v1), v2, exprtext);\n }\n \n-inline string* Check_LTImpl(size_t v1, int v2,\n-                            const char* exprtext) {\n+inline string* Check_LTImpl(size_t v1, int v2, const char* exprtext) {\n   if (v2 < 0)\n     return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\n   return Check_LTImpl(v1, size_t(v2), exprtext);\n\nFrom: Andrew Fitzgibbon <awf@graphcore.ai>\n\n tensorflow\/core\/platform\/default\/logging.h | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n@@ -85,7 +85,7 @@ class LogMessage : public std::basic_ostringstream<char> {\n \/\/ that the ternary VLOG() implementation is balanced, type wise.\n struct Voidifier {\n   template <typename T>\n-  void operator&(const T&)const {}\n+  void operator&(const T&) const {}\n };\n \n \/\/ LogMessageFatal ensures the process will exit in failure after"
    },
    {
      "index":15,
      "vuln_id":"GHSA-4jqc-8m5r-9rpr",
      "cwe_id":"{'CWE-1321', 'CWE-843'}",
      "score":7.3,
      "chain":"{'https:\/\/github.com\/jonschlinkert\/set-value\/commit\/7cf8073bb06bf0c15e08475f9f952823b4576452'}",
      "dataset":"osv",
      "summary":"Prototype Pollution in set-value This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
      "published_date":"2021-09-13",
      "chain_len":1,
      "project":"https:\/\/github.com\/jonschlinkert\/set-value",
      "commit_href":"https:\/\/github.com\/jonschlinkert\/set-value\/commit\/7cf8073bb06bf0c15e08475f9f952823b4576452",
      "commit_sha":"7cf8073bb06bf0c15e08475f9f952823b4576452",
      "patch":"SINGLE",
      "chain_ord":"['7cf8073bb06bf0c15e08475f9f952823b4576452']",
      "before_first_fix_commit":"{'17ac6b7baa01f328a41987e02c73b71b5b82bc3a'}",
      "last_fix_commit":"7cf8073bb06bf0c15e08475f9f952823b4576452",
      "chain_ord_pos":1.0,
      "commit_datetime":"09\/12\/2021, 07:36:46",
      "message":"4.0.1\n\nFixes https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33 thanks to @ready-research.",
      "author":"Jon Schlinkert",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
      "files":"{'package.json': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/set-value\/raw\/7cf8073bb06bf0c15e08475f9f952823b4576452\/package.json', 'patch': '@@ -1,6 +1,6 @@\\n {\\n   \"name\": \"set-value\",\\n-  \"version\": \"4.0.0\",\\n+  \"version\": \"4.0.1\",\\n   \"description\": \"Set nested properties on an object using dot notation.\",\\n   \"license\": \"MIT\",\\n   \"repository\": \"jonschlinkert\/set-value\",\\n@@ -122,4 +122,4 @@\\n       \"update\"\\n     ]\\n   }\\n-}\\n\\\\ No newline at end of file\\n+}'}}",
      "message_norm":"4.0.1\n\nfixes https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33 thanks to @ready-research.",
      "language":"en",
      "entities":"[('4.0.1', 'VERSION', ''), ('https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33', 'URL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['package.json'])",
      "num_files":1.0,
      "patch_content":"From 7cf8073bb06bf0c15e08475f9f952823b4576452 Mon Sep 17 00:00:00 2001\nFrom: Jon Schlinkert <github@sellside.com>\nDate: Sun, 12 Sep 2021 03:36:46 -0400\nSubject: [PATCH] 4.0.1\n\nFixes https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33 thanks to @ready-research.\n---\n package.json | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/package.json b\/package.json\nindex a9b264e..3865c1f 100644\n--- a\/package.json\n+++ b\/package.json\n@@ -1,6 +1,6 @@\n {\n   \"name\": \"set-value\",\n-  \"version\": \"4.0.0\",\n+  \"version\": \"4.0.1\",\n   \"description\": \"Set nested properties on an object using dot notation.\",\n   \"license\": \"MIT\",\n   \"repository\": \"jonschlinkert\/set-value\",\n@@ -122,4 +122,4 @@\n       \"update\"\n     ]\n   }\n-}\n\\ No newline at end of file\n+}",
      "code_diff":"@@ -1,6 +1,6 @@\n {\n   \"name\": \"set-value\",\n-  \"version\": \"4.0.0\",\n+  \"version\": \"4.0.1\",\n   \"description\": \"Set nested properties on an object using dot notation.\",\n   \"license\": \"MIT\",\n   \"repository\": \"jonschlinkert\/set-value\",\n@@ -122,4 +122,4 @@\n       \"update\"\n     ]\n   }\n-}\n\\ No newline at end of file\n+}"
    },
    {
      "index":16,
      "vuln_id":"GHSA-9vwf-54m9-gc4f",
      "cwe_id":"{'CWE-862', 'CWE-284'}",
      "score":4.3,
      "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/1699c09758e56f740437674a8d6ba36443399f24'}",
      "dataset":"osv",
      "summary":"snipe-it is vulnerable to Improper Access Control snipe-it prior to version 5.3.4 is vulnerable to Improper Access Control. Regular users with `DENY` set to all models permissions can still view model information via the \/models\/{id}\/clone endpoint due to no authorize('view') permission being set.",
      "published_date":"2021-12-16",
      "chain_len":1,
      "project":"https:\/\/github.com\/snipe\/snipe-it",
      "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/1699c09758e56f740437674a8d6ba36443399f24",
      "commit_sha":"1699c09758e56f740437674a8d6ba36443399f24",
      "patch":"SINGLE",
      "chain_ord":"['1699c09758e56f740437674a8d6ba36443399f24']",
      "before_first_fix_commit":"{'918e7c8dae4d41935f534901a582ea8488bbf603'}",
      "last_fix_commit":"1699c09758e56f740437674a8d6ba36443399f24",
      "chain_ord_pos":1.0,
      "commit_datetime":"12\/09\/2021, 13:42:18",
      "message":"Update AssetModelsController.php",
      "author":"Haxatron",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'app\/Http\/Controllers\/AssetModelsController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/1699c09758e56f740437674a8d6ba36443399f24\/app%2FHttp%2FControllers%2FAssetModelsController.php', 'patch': \"@@ -269,7 +269,7 @@ public function show($modelId = null)\\n     *\/\\n     public function getClone($modelId = null)\\n     {\\n-        $this->authorize('view', AssetModel::class);\\n+        $this->authorize('create', AssetModel::class);\\n         \/\/ Check if the model exists\\n         if (is_null($model_to_clone = AssetModel::find($modelId))) {\\n             return redirect()->route('models.index')->with('error', trans('admin\/models\/message.does_not_exist'));\"}}",
      "message_norm":"update assetmodelscontroller.php",
      "language":"it",
      "entities":"[('update', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['app\/Http\/Controllers\/AssetModelsController.php'])",
      "num_files":1.0,
      "patch_content":"From 1699c09758e56f740437674a8d6ba36443399f24 Mon Sep 17 00:00:00 2001\nFrom: Haxatron <76475453+Haxatron@users.noreply.github.com>\nDate: Thu, 9 Dec 2021 21:42:18 +0800\nSubject: [PATCH] Update AssetModelsController.php\n\n---\n app\/Http\/Controllers\/AssetModelsController.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/app\/Http\/Controllers\/AssetModelsController.php b\/app\/Http\/Controllers\/AssetModelsController.php\nindex 05fd8257d064..8d57346079b0 100755\n--- a\/app\/Http\/Controllers\/AssetModelsController.php\n+++ b\/app\/Http\/Controllers\/AssetModelsController.php\n@@ -269,7 +269,7 @@ public function show($modelId = null)\n     *\/\n     public function getClone($modelId = null)\n     {\n-        $this->authorize('view', AssetModel::class);\n+        $this->authorize('create', AssetModel::class);\n         \/\/ Check if the model exists\n         if (is_null($model_to_clone = AssetModel::find($modelId))) {\n             return redirect()->route('models.index')->with('error', trans('admin\/models\/message.does_not_exist'));",
      "code_diff":"@@ -269,7 +269,7 @@ public function show($modelId = null)\n     *\/\n     public function getClone($modelId = null)\n     {\n-        $this->authorize('view', AssetModel::class);\n+        $this->authorize('create', AssetModel::class);\n         \/\/ Check if the model exists\n         if (is_null($model_to_clone = AssetModel::find($modelId))) {\n             return redirect()->route('models.index')->with('error', trans('admin\/models\/message.does_not_exist'));"
    },
    {
      "index":17,
      "vuln_id":"GHSA-67j9-c52g-w2q9",
      "cwe_id":"{'CWE-863'}",
      "score":4.9,
      "chain":"{'https:\/\/github.com\/spiral-project\/ihatemoney\/commit\/8d77cf5d5646e1d2d8ded13f0660638f57e98471'}",
      "dataset":"osv",
      "summary":"Authorization Bypass in I hate money ### Impact\nAn authenticated member of one project can modify and delete members of another project, without knowledge of this other project's private code. This can be further exploited to access all bills of another project without knowledge of this other project's private code.\n\nWith the default configuration, anybody is allowed to create a new project. An attacker can create a new project and then use it to become authenticated and exploit this flaw. As such, the exposure is similar to an unauthenticated attack, because it is trivial to become authenticated.\n\n### Patches\n```diff\n ihatemoney\/models.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/ihatemoney\/models.py b\/ihatemoney\/models.py\nindex fe7b519..5691c75 100644\n--- a\/ihatemoney\/models.py\n+++ b\/ihatemoney\/models.py\n@@ -380,7 +380,7 @@ class Person(db.Model):\n         def get_by_name(self, name, project):\n             return (\n                 Person.query.filter(Person.name == name)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )\n \n@@ -389,7 +389,7 @@ class Person(db.Model):\n                 project = g.project\n             return (\n                 Person.query.filter(Person.id == id)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )\n \n```\n\n### Workarounds\n\nTo limit the impact, it is possible to disable public project creation by setting `ALLOW_PUBLIC_PROJECT_CREATION = False` in the configuration (see [documentation](https:\/\/ihatemoney.readthedocs.io\/en\/latest\/configuration.html)). Existing users will still be able to exploit the flaw, but this will prevent an external attacker from creating a new project.\n\n### For more information\n\n`Person.query.get()` and `Person.query.get_by_name()` were mistakenly running a database join on the Project table without constraining the result.\n\nAs a result, `Person.query.get(42, \"projectfoo\")` would return the Person with id=42, even if it is not associated to the project \"projectfoo\".  The only condition is that \"projectfoo\" must exist.\n\nThis flaw can be exploited in several places:\n\n1) API: PUT requests to `\/api\/projects\/<project>\/members\/<personID>` will succeed even though `<personID>` is not a member of `<project>`.\n\n   This allows an authenticated attacker to alter the state of a member (name, weight, activated) in any project.  In addition, the altered member will no longer be associated with its original project but will be associated to the attacker project instead, breaking many features of IHateMoney.  For instance, bills referencing the altered member will no longer be visible in the original project.\n\n   This causes an additional information disclosure and loss of integrity on bills: the attacker will now be able to see, edit and delete bills belonging to the altered member, because IHateMoney now believes that these bills are associated to the attacker project through the altered member.\n\n   For instance, assume that `Person(id=42)` is a member of project \"targetProject\", and that the attacker has access to another project \"attackerProject\" with the private code \"attackerPassword\".  The attacker can modify `Person(id=42)` with this command:\n\n     $ curl -X PUT -d \"name=Pwn3d&activated=1\" --basic -u attackerProject:attackerPassword http:\/\/$SERVER\/api\/projects\/attackerProject\/members\/42\n\n   The attacker can now see, edit and delete bills paid by `Person(id=42)` by simply browsing to http:\/\/$SERVER\/attackerProject\/\n\n2) Editing a member through the web interface at `\/<project>\/members\/<personID>\/edit` will succeed even though `<personID>` is not a member of `<project>`.\n\n   This is very similar to the PUT exploit.  Reusing the same example, the attacker needs to login to its \"attackerProject\" project with the private code \"attackerPassword\".  It can then alter the state of `Person(id=42)` by accessing the edit form at the following URL:\n\n     http:\/\/$SERVER\/attackerProject\/members\/42\/edit\n\n   Again, as a result of the alteration, the altered member will become associated to the project \"attackerProject\", resulting in the same information disclosure and loss of integrity on bills.\n\n3) API: DELETE requests to `\/api\/projects\/<project>\/members\/<personID>` will similarly allow to delete the member `<personID>` even if it belongs to a different project than `<project>`.\n\n     $ curl -X DELETE --basic -u attackerProject:attackerPassword http:\/\/$SERVER\/api\/projects\/attackerProject\/members\/42\n\n   The impact is less serious than with PUT, because DELETE only deactivates a member (it does not really delete it).\n\nAll these exploits require authentication: an attacker needs to know a valid project name and its associated \"private code\".  Once this requirement is fullfilled, the attacker can exploit this flaw to alter the state of members in any other project, without needing to know the target project name or its private code.\n\n`Person.query.get_by_name()` suffers from the same issue as `Person.query.get()`.  It has an additional issue: if multiple Person objects with the same name exist (this is possible if they are associated to different projects), `get_by_name()` will crash with `MultipleResultsFound` because of the call to `one()`.\n\nHowever, since `Person.query.get_by_name()` is currently not used anywhere in IHateMoney, the bug affecting this function has no impact and is not exploitable.",
      "published_date":"2020-07-27",
      "chain_len":1,
      "project":"https:\/\/github.com\/spiral-project\/ihatemoney",
      "commit_href":"https:\/\/github.com\/spiral-project\/ihatemoney\/commit\/8d77cf5d5646e1d2d8ded13f0660638f57e98471",
      "commit_sha":"8d77cf5d5646e1d2d8ded13f0660638f57e98471",
      "patch":"SINGLE",
      "chain_ord":"['8d77cf5d5646e1d2d8ded13f0660638f57e98471']",
      "before_first_fix_commit":"{'040d76af83411fb58ab400dc4eac909191a3e5fa'}",
      "last_fix_commit":"8d77cf5d5646e1d2d8ded13f0660638f57e98471",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/17\/2020, 15:43:33",
      "message":"Fix unauthorized access and modification of project data (CVE-2020-15120)\n\nAn authenticated member of one project can modify and delete members of\nanother project, without knowledge of this other project's private\ncode. This can be further exploited to access all bills of another project\nwithout knowledge of this other project's private code.\n\nWith the default configuration, anybody is allowed to create a new\nproject. An attacker can create a new project and then use it to become\nauthenticated and exploit this flaw. As such, the exposure is similar to\nan unauthenticated attack, because it is trivial to become authenticated.\n\nThis issue was caused by a wrong database queries in PersonQuery.\n\nFor more details, see https:\/\/github.com\/spiral-project\/ihatemoney\/security\/advisories\/GHSA-67j9-c52g-w2q9",
      "author":"Baptiste Jonglez",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
      "files":"{'ihatemoney\/models.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spiral-project\/ihatemoney\/raw\/8d77cf5d5646e1d2d8ded13f0660638f57e98471\/ihatemoney%2Fmodels.py', 'patch': '@@ -380,7 +380,7 @@ class PersonQuery(BaseQuery):\\n         def get_by_name(self, name, project):\\n             return (\\n                 Person.query.filter(Person.name == name)\\n-                .filter(Project.id == project.id)\\n+                .filter(Person.project_id == project.id)\\n                 .one()\\n             )\\n \\n@@ -389,7 +389,7 @@ def get(self, id, project=None):\\n                 project = g.project\\n             return (\\n                 Person.query.filter(Person.id == id)\\n-                .filter(Project.id == project.id)\\n+                .filter(Person.project_id == project.id)\\n                 .one()\\n             )'}}",
      "message_norm":"fix unauthorized access and modification of project data (cve-2020-15120)\n\nan authenticated member of one project can modify and delete members of\nanother project, without knowledge of this other project's private\ncode. this can be further exploited to access all bills of another project\nwithout knowledge of this other project's private code.\n\nwith the default configuration, anybody is allowed to create a new\nproject. an attacker can create a new project and then use it to become\nauthenticated and exploit this flaw. as such, the exposure is similar to\nan unauthenticated attack, because it is trivial to become authenticated.\n\nthis issue was caused by a wrong database queries in personquery.\n\nfor more details, see https:\/\/github.com\/spiral-project\/ihatemoney\/security\/advisories\/ghsa-67j9-c52g-w2q9",
      "language":"en",
      "entities":"[('fix', 'ACTION', ''), ('cve-2020-15120', 'VULNID', 'CVE'), ('exploited', 'SECWORD', ''), ('attacker', 'FLAW', ''), ('exploit', 'SECWORD', ''), ('flaw', 'FLAW', ''), ('unauthenticated', 'SECWORD', ''), ('attack', 'FLAW', ''), ('issue', 'FLAW', ''), ('https:\/\/github.com\/spiral-project\/ihatemoney\/security\/advisories\/ghsa-67j9-c52g-w2q9', 'URL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['ihatemoney\/models.py'])",
      "num_files":1.0,
      "patch_content":"From 8d77cf5d5646e1d2d8ded13f0660638f57e98471 Mon Sep 17 00:00:00 2001\nFrom: Baptiste Jonglez <git@bitsofnetworks.org>\nDate: Fri, 17 Jul 2020 17:43:33 +0200\nSubject: [PATCH] Fix unauthorized access and modification of project data\n (CVE-2020-15120)\n\nAn authenticated member of one project can modify and delete members of\nanother project, without knowledge of this other project's private\ncode. This can be further exploited to access all bills of another project\nwithout knowledge of this other project's private code.\n\nWith the default configuration, anybody is allowed to create a new\nproject. An attacker can create a new project and then use it to become\nauthenticated and exploit this flaw. As such, the exposure is similar to\nan unauthenticated attack, because it is trivial to become authenticated.\n\nThis issue was caused by a wrong database queries in PersonQuery.\n\nFor more details, see https:\/\/github.com\/spiral-project\/ihatemoney\/security\/advisories\/GHSA-67j9-c52g-w2q9\n---\n ihatemoney\/models.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/ihatemoney\/models.py b\/ihatemoney\/models.py\nindex fe7b5196d..5691c75ed 100644\n--- a\/ihatemoney\/models.py\n+++ b\/ihatemoney\/models.py\n@@ -380,7 +380,7 @@ class PersonQuery(BaseQuery):\n         def get_by_name(self, name, project):\n             return (\n                 Person.query.filter(Person.name == name)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )\n \n@@ -389,7 +389,7 @@ def get(self, id, project=None):\n                 project = g.project\n             return (\n                 Person.query.filter(Person.id == id)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )",
      "code_diff":"@@ -380,7 +380,7 @@ class PersonQuery(BaseQuery):\n         def get_by_name(self, name, project):\n             return (\n                 Person.query.filter(Person.name == name)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )\n \n@@ -389,7 +389,7 @@ def get(self, id, project=None):\n                 project = g.project\n             return (\n                 Person.query.filter(Person.id == id)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )"
    },
    {
      "index":18,
      "vuln_id":"GHSA-xr38-w74q-r8jv",
      "cwe_id":"{'CWE-862', 'CWE-863'}",
      "score":6.4,
      "chain":"{'https:\/\/github.com\/inveniosoftware\/invenio-drafts-resources\/commit\/039b0cff1ad4b952000f4d8c3a93f347108b6626'}",
      "dataset":"osv",
      "summary":"Permissions not properly checked in Invenio-Drafts-Resources ### Impact\n\nInvenio-Drafts-Resources does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. *cannot* change a record from restricted to public.\n\n### Details\n\nThe service's ``publish()`` method contains the following permission check:\n\n```python\ndef publish(..):\n    self.require_permission(identity, \"publish\")\n```\nHowever, the record should have been passed into the permission check so that the need generators have access to e.g. the record owner.\n\n```python\ndef publish(..):\n    self.require_permission(identity, \"publish\", record=record)\n```\nThe bug is activated in Invenio-RDM-Records which has a need generator called ``RecordOwners()``, which when no record is passed in defaults to allow any authenticated user:\n\n```python\nclass RecordOwners(Generator):\n    def needs(self, record=None, **kwargs):\n        if record is None:\n            return [authenticated_user]\n    # ...\n```\n\n### Patches\n\nThe problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6+, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.\n\nYou can verify the version installed of Invenio-Drafts-Resources via PIP:\n\n```console\ncd ~\/src\/my-site\npipenv run pip freeze | grep invenio-drafts-resources\n```\n\n### References\n\n- [Security policy](https:\/\/invenio.readthedocs.io\/en\/latest\/community\/security-policy.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Chat with us on Discord: https:\/\/discord.gg\/8qatqBC",
      "published_date":"2021-12-06",
      "chain_len":1,
      "project":"https:\/\/github.com\/inveniosoftware\/invenio-drafts-resources",
      "commit_href":"https:\/\/github.com\/inveniosoftware\/invenio-drafts-resources\/commit\/039b0cff1ad4b952000f4d8c3a93f347108b6626",
      "commit_sha":"039b0cff1ad4b952000f4d8c3a93f347108b6626",
      "patch":"SINGLE",
      "chain_ord":"['039b0cff1ad4b952000f4d8c3a93f347108b6626']",
      "before_first_fix_commit":"{'998ede99c377c84f11fe22c07c20f90c88c463dc'}",
      "last_fix_commit":"039b0cff1ad4b952000f4d8c3a93f347108b6626",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/24\/2021, 14:32:41",
      "message":"security: fix missing permission check of publish\n\n* Invenio-Drafts-Resources does not properly check permissions when a\n  record is published. The vulnerability is exploitable in a default\n  installation of InvenioRDM. An authenticated a user is able via REST\n  API calls to publish draft records of other users if they know the\n  record identifier and the draft validates (e.g. all require fields\n  filled out). An attacker is not able to modify the data in the record,\n  and thus e.g. cannot change a record from restricted to public.",
      "author":"Lars Holm Nielsen",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 2, 'total': 3}",
      "files":"{'invenio_drafts_resources\/services\/records\/service.py': {'additions': 1, 'deletions': 2, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/inveniosoftware\/invenio-drafts-resources\/raw\/039b0cff1ad4b952000f4d8c3a93f347108b6626\/invenio_drafts_resources%2Fservices%2Frecords%2Fservice.py', 'patch': '@@ -267,10 +267,9 @@ def publish(self, id_, identity, uow=None):\\n               into records)\\n             - Create or update associated (published) record with data\\n         \"\"\"\\n-        self.require_permission(identity, \"publish\")\\n-\\n         # Get the draft\\n         draft = self.draft_cls.pid.resolve(id_, registered_only=False)\\n+        self.require_permission(identity, \"publish\", record=draft)\\n \\n         # Validate the draft strictly - since a draft can be saved with errors\\n         # we do a strict validation here to make sure only valid drafts can be'}}",
      "message_norm":"security: fix missing permission check of publish\n\n* invenio-drafts-resources does not properly check permissions when a\n  record is published. the vulnerability is exploitable in a default\n  installation of inveniordm. an authenticated a user is able via rest\n  api calls to publish draft records of other users if they know the\n  record identifier and the draft validates (e.g. all require fields\n  filled out). an attacker is not able to modify the data in the record,\n  and thus e.g. cannot change a record from restricted to public.",
      "language":"en",
      "entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('permission', 'SECWORD', ''), ('permissions', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('exploitable', 'SECWORD', ''), ('validates', 'ACTION', ''), ('attacker', 'FLAW', ''), ('change', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['invenio_drafts_resources\/services\/records\/service.py'])",
      "num_files":1.0,
      "patch_content":"From 039b0cff1ad4b952000f4d8c3a93f347108b6626 Mon Sep 17 00:00:00 2001\nFrom: Lars Holm Nielsen <lars.holm.nielsen@cern.ch>\nDate: Wed, 24 Nov 2021 15:32:41 +0100\nSubject: [PATCH] security: fix missing permission check of publish\n\n* Invenio-Drafts-Resources does not properly check permissions when a\n  record is published. The vulnerability is exploitable in a default\n  installation of InvenioRDM. An authenticated a user is able via REST\n  API calls to publish draft records of other users if they know the\n  record identifier and the draft validates (e.g. all require fields\n  filled out). An attacker is not able to modify the data in the record,\n  and thus e.g. cannot change a record from restricted to public.\n---\n invenio_drafts_resources\/services\/records\/service.py | 3 +--\n 1 file changed, 1 insertion(+), 2 deletions(-)\n\ndiff --git a\/invenio_drafts_resources\/services\/records\/service.py b\/invenio_drafts_resources\/services\/records\/service.py\nindex 20e367dc..c9ee5dfa 100644\n--- a\/invenio_drafts_resources\/services\/records\/service.py\n+++ b\/invenio_drafts_resources\/services\/records\/service.py\n@@ -267,10 +267,9 @@ def publish(self, id_, identity, uow=None):\n               into records)\n             - Create or update associated (published) record with data\n         \"\"\"\n-        self.require_permission(identity, \"publish\")\n-\n         # Get the draft\n         draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n+        self.require_permission(identity, \"publish\", record=draft)\n \n         # Validate the draft strictly - since a draft can be saved with errors\n         # we do a strict validation here to make sure only valid drafts can be",
      "code_diff":"@@ -267,10 +267,9 @@ def publish(self, id_, identity, uow=None):\n               into records)\n             - Create or update associated (published) record with data\n         \"\"\"\n-        self.require_permission(identity, \"publish\")\n-\n         # Get the draft\n         draft = self.draft_cls.pid.resolve(id_, registered_only=False)\n+        self.require_permission(identity, \"publish\", record=draft)\n \n         # Validate the draft strictly - since a draft can be saved with errors\n         # we do a strict validation here to make sure only valid drafts can be"
    },
    {
      "index":19,
      "vuln_id":"GHSA-73rp-q4rx-5grc",
      "cwe_id":"{'CWE-284', 'CWE-863'}",
      "score":8.8,
      "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/c162dfffb9bfd264d232aaaf5bb3daee16a3cb38'}",
      "dataset":"osv",
      "summary":"Incorrect Authorization in microweber Users Account Pre-Takeover or Users Account Takeover. in GitHub repository microweber\/microweber prior to 1.2.15. Victim Account Take Over. Since, there is no email confirmation, an attacker can easily create an account in the application using the Victim\u2019s Email. This allows an attacker to gain pre-authentication to the victim\u2019s account. Further, due to the lack of proper validation of email coming from Social Login and failing to check if an account already exists, the victim will not identify if an account is already existing. Hence, the attacker\u2019s persistence will remain. An attacker would be able to see all the activities performed by the victim user impacting the confidentiality and attempt to modify\/corrupt the data impacting the integrity and availability factor. This attack becomes more interesting when an attacker can register an account from an employee\u2019s email address. Assuming the organization uses G-Suite, it is much more impactful to hijack into an employee\u2019s account.",
      "published_date":"2022-05-10",
      "chain_len":1,
      "project":"https:\/\/github.com\/microweber\/microweber",
      "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/c162dfffb9bfd264d232aaaf5bb3daee16a3cb38",
      "commit_sha":"c162dfffb9bfd264d232aaaf5bb3daee16a3cb38",
      "patch":"SINGLE",
      "chain_ord":"['c162dfffb9bfd264d232aaaf5bb3daee16a3cb38']",
      "before_first_fix_commit":"{'12c0316b3bde8ff6a6adc5d2a05f6409b03c9556'}",
      "last_fix_commit":"c162dfffb9bfd264d232aaaf5bb3daee16a3cb38",
      "chain_ord_pos":1.0,
      "commit_datetime":"05\/09\/2022, 12:54:29",
      "message":"Update index.blade.php",
      "author":"Bozhidar Slaveykov",
      "comments":null,
      "stats":"{'additions': 4, 'deletions': 2, 'total': 6}",
      "files":"{'src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/c162dfffb9bfd264d232aaaf5bb3daee16a3cb38\/src%2FMicroweberPackages%2FShop%2Fresources%2Fviews%2Findex.blade.php', 'patch': '@@ -46,9 +46,11 @@\\n                         <div class=\"d-flex\">\\n                             <p class=\"col-6 mb-0\">\\n                                 @if($product->hasSpecialPrice())\\n-                                    <span class=\"price-old\"><?php print currency_format($product->specialPrice); ?><\/span>\\n+                                    <span class=\"price-old\"><?php print currency_format($product->price); ?><\/span>\\n+                                    <span class=\"money\"><?php print currency_format($product->specialPrice); ?><\/span>\\n+                                @else\\n+                                    <span class=\"money\"><?php print currency_format($product->price); ?><\/span>\\n                                 @endif\\n-                                <span class=\"money\"><?php print currency_format($product->price); ?><\/span>\\n                             <\/p>\\n \\n                             <a class=\"col-6 text-end text-right align-self-center\" href=\"{{content_link($product->id)}}\"> View<\/a>'}}",
      "message_norm":"update index.blade.php",
      "language":"sv",
      "entities":"[('update', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php'])",
      "num_files":1.0,
      "patch_content":"From c162dfffb9bfd264d232aaaf5bb3daee16a3cb38 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Mon, 9 May 2022 15:54:29 +0300\nSubject: [PATCH] Update index.blade.php\n\n---\n src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php | 6 ++++--\n 1 file changed, 4 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php b\/src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php\nindex bfdeb89dacd..d7a0036ecdc 100644\n--- a\/src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php\n+++ b\/src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php\n@@ -46,9 +46,11 @@\n                         <div class=\"d-flex\">\n                             <p class=\"col-6 mb-0\">\n                                 @if($product->hasSpecialPrice())\n-                                    <span class=\"price-old\"><?php print currency_format($product->specialPrice); ?><\/span>\n+                                    <span class=\"price-old\"><?php print currency_format($product->price); ?><\/span>\n+                                    <span class=\"money\"><?php print currency_format($product->specialPrice); ?><\/span>\n+                                @else\n+                                    <span class=\"money\"><?php print currency_format($product->price); ?><\/span>\n                                 @endif\n-                                <span class=\"money\"><?php print currency_format($product->price); ?><\/span>\n                             <\/p>\n \n                             <a class=\"col-6 text-end text-right align-self-center\" href=\"{{content_link($product->id)}}\"> View<\/a>",
      "code_diff":"@@ -46,9 +46,11 @@\n                         <div class=\"d-flex\">\n                             <p class=\"col-6 mb-0\">\n                                 @if($product->hasSpecialPrice())\n-                                    <span class=\"price-old\"><?php print currency_format($product->specialPrice); ?><\/span>\n+                                    <span class=\"price-old\"><?php print currency_format($product->price); ?><\/span>\n+                                    <span class=\"money\"><?php print currency_format($product->specialPrice); ?><\/span>\n+                                @else\n+                                    <span class=\"money\"><?php print currency_format($product->price); ?><\/span>\n                                 @endif\n-                                <span class=\"money\"><?php print currency_format($product->price); ?><\/span>\n                             <\/p>\n \n                             <a class=\"col-6 text-end text-right align-self-center\" href=\"{{content_link($product->id)}}\"> View<\/a>"
    },
    {
      "index":20,
      "vuln_id":"GHSA-65f3-3278-7m65",
      "cwe_id":"{'CWE-285', 'CWE-863'}",
      "score":8.2,
      "chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/64102be2c90e1b47dbdd379873ba76c80d4b0e78'}",
      "dataset":"osv",
      "summary":"Improper Authorization in Gogs ### Impact\n\nExpired PAM accounts and accounts with expired passwords are continued to be seen as valid. Installations use PAM as authentication sources are affected.\n\n### Patches\n\nExpired PAM accounts and accounts with expired passwords are no longer being seen as valid. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.\n\n### Workarounds\n\nIn addition to marking PAM accounts as expired, also disable\/lock them. Running `usermod -L <username>` will add an exclamation mark to the password hash and would result in wrong passwords responses when trying to login. \n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https:\/\/github.com\/gogs\/gogs\/issues\/6810.",
      "published_date":"2022-03-12",
      "chain_len":1,
      "project":"https:\/\/github.com\/gogs\/gogs",
      "commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/64102be2c90e1b47dbdd379873ba76c80d4b0e78",
      "commit_sha":"64102be2c90e1b47dbdd379873ba76c80d4b0e78",
      "patch":"SINGLE",
      "chain_ord":"['64102be2c90e1b47dbdd379873ba76c80d4b0e78']",
      "before_first_fix_commit":"{'91f2cde5e95f146bfe4765e837e7282df6c7cabb'}",
      "last_fix_commit":"64102be2c90e1b47dbdd379873ba76c80d4b0e78",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/08\/2022, 12:02:01",
      "message":"security: fix improper PAM authorization handling (#6819)\n\nCo-authored-by: Joe Chen <jc@unknwon.io>\n# Conflicts:\n#\tCHANGELOG.md\n#\tinternal\/auth\/pam\/pam.go",
      "author":"ysf",
      "comments":null,
      "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
      "files":"{'internal\/auth\/pam\/pam.go': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/64102be2c90e1b47dbdd379873ba76c80d4b0e78\/internal%2Fauth%2Fpam%2Fpam.go', 'patch': '@@ -27,9 +27,9 @@ func PAMAuth(serviceName, userName, passwd string) error {\\n \\t\\treturn err\\n \\t}\\n \\n-\\tif err = t.Authenticate(0); err != nil {\\n+\\terr = t.Authenticate(0)\\n+\\tif err != nil {\\n \\t\\treturn err\\n \\t}\\n-\\n-\\treturn nil\\n+\\treturn t.AcctMgmt(0)\\n }'}}",
      "message_norm":"security: fix improper pam authorization handling (#6819)\n\nco-authored-by: joe chen <jc@unknwon.io>\n# conflicts:\n#\tchangelog.md\n#\tinternal\/auth\/pam\/pam.go",
      "language":"en",
      "entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('#6819', 'ISSUE', ''), ('jc@unknwon.io', 'EMAIL', ''), ('auth', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['internal\/auth\/pam\/pam.go'])",
      "num_files":1.0,
      "patch_content":"From 64102be2c90e1b47dbdd379873ba76c80d4b0e78 Mon Sep 17 00:00:00 2001\nFrom: ysf <34326+ysf@users.noreply.github.com>\nDate: Tue, 8 Mar 2022 13:02:01 +0100\nSubject: [PATCH] security: fix improper PAM authorization handling (#6819)\n\nCo-authored-by: Joe Chen <jc@unknwon.io>\n# Conflicts:\n#\tCHANGELOG.md\n#\tinternal\/auth\/pam\/pam.go\n---\n internal\/auth\/pam\/pam.go | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a\/internal\/auth\/pam\/pam.go b\/internal\/auth\/pam\/pam.go\nindex 7f326d42f55..95f44b4f82e 100644\n--- a\/internal\/auth\/pam\/pam.go\n+++ b\/internal\/auth\/pam\/pam.go\n@@ -27,9 +27,9 @@ func PAMAuth(serviceName, userName, passwd string) error {\n \t\treturn err\n \t}\n \n-\tif err = t.Authenticate(0); err != nil {\n+\terr = t.Authenticate(0)\n+\tif err != nil {\n \t\treturn err\n \t}\n-\n-\treturn nil\n+\treturn t.AcctMgmt(0)\n }",
      "code_diff":"@@ -27,9 +27,9 @@ func PAMAuth(serviceName, userName, passwd string) error {\n \t\treturn err\n \t}\n \n-\tif err = t.Authenticate(0); err != nil {\n+\terr = t.Authenticate(0)\n+\tif err != nil {\n \t\treturn err\n \t}\n-\n-\treturn nil\n+\treturn t.AcctMgmt(0)\n }"
    },
    {
      "index":21,
      "vuln_id":"GHSA-4952-p58q-6crx",
      "cwe_id":"{'CWE-87', 'CWE-79', 'CWE-75'}",
      "score":7.4,
      "chain":"{'https:\/\/github.com\/jupyterlab\/jupyterlab\/commit\/504825938c0abfa2fb8ff8d529308830a5ae42ed'}",
      "dataset":"osv",
      "summary":"JupyterLab: XSS due to lack of sanitization of the action attribute of an html <form> ### Impact\n\nUntrusted notebook can execute code on load. This is a remote code execution, but requires user action to open a notebook.\n\n### Patches\n\nPatched in the following versions: 3.1.4, 3.0.17, 2.3.2, 2.2.10, 1.2.21.\n\n### References\n\n[OWASP Page on Restricting Form Submissions](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list security@ipython.org.\n\nCredit: Guillaume Jeanne from Google",
      "published_date":"2021-08-23",
      "chain_len":1,
      "project":"https:\/\/github.com\/jupyterlab\/jupyterlab",
      "commit_href":"https:\/\/github.com\/jupyterlab\/jupyterlab\/commit\/504825938c0abfa2fb8ff8d529308830a5ae42ed",
      "commit_sha":"504825938c0abfa2fb8ff8d529308830a5ae42ed",
      "patch":"SINGLE",
      "chain_ord":"['504825938c0abfa2fb8ff8d529308830a5ae42ed']",
      "before_first_fix_commit":"{'ccb65656e3ed9c47d3e6fedbcff2405885d0bcaa'}",
      "last_fix_commit":"504825938c0abfa2fb8ff8d529308830a5ae42ed",
      "chain_ord_pos":1.0,
      "commit_datetime":"08\/05\/2021, 16:42:03",
      "message":"Merge pull request from GHSA-4952-p58q-6crx\n\nRemove `form` tags' `action` attribute during sanitizing.\n\nCo-authored-by: Afshin Taylor Darian <git@darian.af>",
      "author":"Steven Silvester",
      "comments":null,
      "stats":"{'additions': 0, 'deletions': 1, 'total': 1}",
      "files":"{'packages\/apputils\/src\/sanitizer.ts': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterlab\/jupyterlab\/raw\/504825938c0abfa2fb8ff8d529308830a5ae42ed\/packages%2Fapputils%2Fsrc%2Fsanitizer.ts', 'patch': \"@@ -624,7 +624,6 @@ export class Sanitizer implements ISanitizer {\\n       font: ['color', 'face', 'size'],\\n       form: [\\n         'accept',\\n-        'action',\\n         'autocomplete',\\n         'enctype',\\n         'method',\"}}",
      "message_norm":"merge pull request from ghsa-4952-p58q-6crx\n\nremove `form` tags' `action` attribute during sanitizing.\n\nco-authored-by: afshin taylor darian <git@darian.af>",
      "language":"en",
      "entities":"[('ghsa-4952-p58q-6crx', 'VULNID', 'GHSA'), ('remove', 'ACTION', ''), ('sanitizing', 'SECWORD', ''), ('git@darian.af', 'EMAIL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['packages\/apputils\/src\/sanitizer.ts'])",
      "num_files":1.0,
      "patch_content":"From 504825938c0abfa2fb8ff8d529308830a5ae42ed Mon Sep 17 00:00:00 2001\nFrom: Steven Silvester <ssilvester@apple.com>\nDate: Thu, 5 Aug 2021 11:42:03 -0500\nSubject: [PATCH] Merge pull request from GHSA-4952-p58q-6crx\n\nRemove `form` tags' `action` attribute during sanitizing.\n\nCo-authored-by: Afshin Taylor Darian <git@darian.af>\n---\n packages\/apputils\/src\/sanitizer.ts | 1 -\n 1 file changed, 1 deletion(-)\n\ndiff --git a\/packages\/apputils\/src\/sanitizer.ts b\/packages\/apputils\/src\/sanitizer.ts\nindex b281cc4172d6..897f215229f0 100644\n--- a\/packages\/apputils\/src\/sanitizer.ts\n+++ b\/packages\/apputils\/src\/sanitizer.ts\n@@ -624,7 +624,6 @@ export class Sanitizer implements ISanitizer {\n       font: ['color', 'face', 'size'],\n       form: [\n         'accept',\n-        'action',\n         'autocomplete',\n         'enctype',\n         'method',",
      "code_diff":"@@ -624,7 +624,6 @@ export class Sanitizer implements ISanitizer {\n       font: ['color', 'face', 'size'],\n       form: [\n         'accept',\n-        'action',\n         'autocomplete',\n         'enctype',\n         'method',"
    },
    {
      "index":22,
      "vuln_id":"GHSA-wcm2-9c89-wmfm",
      "cwe_id":"{'CWE-79'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/jquery\/jquery-ui\/commit\/7e9060c109b928769a664dbcc2c17bd21231b6f3'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in jquery-ui Cross-site scripting (XSS) vulnerability in jquery.ui.dialog.js in the Dialog widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title option.",
      "published_date":"2017-10-24",
      "chain_len":1,
      "project":"https:\/\/github.com\/jquery\/jquery-ui",
      "commit_href":"https:\/\/github.com\/jquery\/jquery-ui\/commit\/7e9060c109b928769a664dbcc2c17bd21231b6f3",
      "commit_sha":"7e9060c109b928769a664dbcc2c17bd21231b6f3",
      "patch":"SINGLE",
      "chain_ord":"['7e9060c109b928769a664dbcc2c17bd21231b6f3']",
      "before_first_fix_commit":"{'60486ac632a0a1bbbb0c7449fe17bccfae11af80'}",
      "last_fix_commit":"7e9060c109b928769a664dbcc2c17bd21231b6f3",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/26\/2012, 09:14:36",
      "message":"Dialog: Extract setting the title into a _title method, use .text() to prevent XSS. Fixes #6016 - Dialog: Title XSS Vulnerability.",
      "author":"J\u00f6rn Zaefferer",
      "comments":null,
      "stats":"{'additions': 9, 'deletions': 4, 'total': 13}",
      "files":"{'ui\/jquery.ui.dialog.js': {'additions': 9, 'deletions': 4, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery\/jquery-ui\/raw\/7e9060c109b928769a664dbcc2c17bd21231b6f3\/ui%2Fjquery.ui.dialog.js', 'patch': '@@ -352,14 +352,21 @@ $.widget(\"ui.dialog\", {\\n \\t\\tuiDialogTitle = $( \"<span>\" )\\n \\t\\t\\t.uniqueId()\\n \\t\\t\\t.addClass( \"ui-dialog-title\" )\\n-\\t\\t\\t.html( this.options.title || \"&#160;\" )\\n \\t\\t\\t.prependTo( this.uiDialogTitlebar );\\n+\\t\\tthis._title( uiDialogTitle );\\n \\n \\t\\tthis.uiDialog.attr({\\n \\t\\t\\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\\n \\t\\t});\\n \\t},\\n \\n+\\t_title: function( title ) {\\n+\\t\\tif ( !this.options.title ) {\\n+\\t\\t\\ttitle.html( \"&#160;\" );\\n+\\t\\t}\\n+\\t\\ttitle.text( this.options.title );\\n+\\t},\\n+\\n \\t_createButtonPane: function() {\\n \\t\\tvar uiDialogButtonPane = ( this.uiDialogButtonPane = $( \"<div>\" ) )\\n \\t\\t\\t.addClass( \"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\" );\\n@@ -600,9 +607,7 @@ $.widget(\"ui.dialog\", {\\n \\t\\t}\\n \\n \\t\\tif ( key === \"title\" ) {\\n-\\t\\t\\t\/\/ convert whatever was passed in to a string, for html() to not throw up\\n-\\t\\t\\t$( \".ui-dialog-title\", this.uiDialogTitlebar )\\n-\\t\\t\\t\\t.html( \"\" + ( value || \"&#160;\" ) );\\n+\\t\\t\\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\\n \\t\\t}\\n \\t},'}}",
      "message_norm":"dialog: extract setting the title into a _title method, use .text() to prevent xss. fixes #6016 - dialog: title xss vulnerability.",
      "language":"en",
      "entities":"[('prevent', 'ACTION', ''), ('xss', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#6016', 'ISSUE', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['ui\/jquery.ui.dialog.js'])",
      "num_files":1.0,
      "patch_content":"From 7e9060c109b928769a664dbcc2c17bd21231b6f3 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?J=C3=B6rn=20Zaefferer?= <joern.zaefferer@gmail.com>\nDate: Mon, 26 Nov 2012 10:14:36 +0100\nSubject: [PATCH] Dialog: Extract setting the title into a _title method, use\n .text() to prevent XSS. Fixes #6016 - Dialog: Title XSS Vulnerability.\n\n---\n ui\/jquery.ui.dialog.js | 13 +++++++++----\n 1 file changed, 9 insertions(+), 4 deletions(-)\n\ndiff --git a\/ui\/jquery.ui.dialog.js b\/ui\/jquery.ui.dialog.js\nindex 5eb3e2aca82..808d31d5b2b 100644\n--- a\/ui\/jquery.ui.dialog.js\n+++ b\/ui\/jquery.ui.dialog.js\n@@ -352,14 +352,21 @@ $.widget(\"ui.dialog\", {\n \t\tuiDialogTitle = $( \"<span>\" )\n \t\t\t.uniqueId()\n \t\t\t.addClass( \"ui-dialog-title\" )\n-\t\t\t.html( this.options.title || \"&#160;\" )\n \t\t\t.prependTo( this.uiDialogTitlebar );\n+\t\tthis._title( uiDialogTitle );\n \n \t\tthis.uiDialog.attr({\n \t\t\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\n \t\t});\n \t},\n \n+\t_title: function( title ) {\n+\t\tif ( !this.options.title ) {\n+\t\t\ttitle.html( \"&#160;\" );\n+\t\t}\n+\t\ttitle.text( this.options.title );\n+\t},\n+\n \t_createButtonPane: function() {\n \t\tvar uiDialogButtonPane = ( this.uiDialogButtonPane = $( \"<div>\" ) )\n \t\t\t.addClass( \"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\" );\n@@ -600,9 +607,7 @@ $.widget(\"ui.dialog\", {\n \t\t}\n \n \t\tif ( key === \"title\" ) {\n-\t\t\t\/\/ convert whatever was passed in to a string, for html() to not throw up\n-\t\t\t$( \".ui-dialog-title\", this.uiDialogTitlebar )\n-\t\t\t\t.html( \"\" + ( value || \"&#160;\" ) );\n+\t\t\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\n \t\t}\n \t},",
      "code_diff":"@@ -352,14 +352,21 @@ $.widget(\"ui.dialog\", {\n \t\tuiDialogTitle = $( \"<span>\" )\n \t\t\t.uniqueId()\n \t\t\t.addClass( \"ui-dialog-title\" )\n-\t\t\t.html( this.options.title || \"&#160;\" )\n \t\t\t.prependTo( this.uiDialogTitlebar );\n+\t\tthis._title( uiDialogTitle );\n \n \t\tthis.uiDialog.attr({\n \t\t\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\n \t\t});\n \t},\n \n+\t_title: function( title ) {\n+\t\tif ( !this.options.title ) {\n+\t\t\ttitle.html( \"&#160;\" );\n+\t\t}\n+\t\ttitle.text( this.options.title );\n+\t},\n+\n \t_createButtonPane: function() {\n \t\tvar uiDialogButtonPane = ( this.uiDialogButtonPane = $( \"<div>\" ) )\n \t\t\t.addClass( \"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\" );\n@@ -600,9 +607,7 @@ $.widget(\"ui.dialog\", {\n \t\t}\n \n \t\tif ( key === \"title\" ) {\n-\t\t\t\/\/ convert whatever was passed in to a string, for html() to not throw up\n-\t\t\t$( \".ui-dialog-title\", this.uiDialogTitlebar )\n-\t\t\t\t.html( \"\" + ( value || \"&#160;\" ) );\n+\t\t\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\n \t\t}\n \t},"
    },
    {
      "index":23,
      "vuln_id":"GHSA-q26w-wjj2-22vv",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/laurent22\/joplin\/commit\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13'}",
      "dataset":"osv",
      "summary":"Cross-site scripting in Joplin Joplin allows XSS via a LINK element in a note.",
      "published_date":"2021-05-10",
      "chain_len":1,
      "project":"https:\/\/github.com\/laurent22\/joplin",
      "commit_href":"https:\/\/github.com\/laurent22\/joplin\/commit\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13",
      "commit_sha":"fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13",
      "patch":"SINGLE",
      "chain_ord":"['fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13']",
      "before_first_fix_commit":"{'4a184721e4e4aa00a39d508cdc1a3ae660d3610e'}",
      "last_fix_commit":"fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13",
      "chain_ord_pos":1.0,
      "commit_datetime":"10\/29\/2020, 16:19:56",
      "message":"All: Security: Remove \"link\" and \"meta\" tags from notes to prevent XSS",
      "author":"Laurent Cozic",
      "comments":null,
      "stats":"{'additions': 10, 'deletions': 5, 'total': 15}",
      "files":"{'ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js': {'additions': 10, 'deletions': 5, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/laurent22\/joplin\/raw\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13\/ReactNativeClient%2Flib%2Fjoplin-renderer%2FhtmlUtils.js', 'patch': '@@ -87,11 +87,16 @@ class HtmlUtils {\\n \\t\\t\\treturn tagStack[tagStack.length - 1];\\n \\t\\t};\\n \\n-\\t\\t\/\/ The BASE tag allows changing the base URL from which files are loaded, and\\n-\\t\\t\/\/ that can break several plugins, such as Katex (which needs to load CSS\\n-\\t\\t\/\/ files using a relative URL). For that reason it is disabled.\\n-\\t\\t\/\/ More info: https:\/\/github.com\/laurent22\/joplin\/issues\/3021\\n-\\t\\tconst disallowedTags = [\\'script\\', \\'iframe\\', \\'frameset\\', \\'frame\\', \\'object\\', \\'base\\', \\'embed\\'];\\n+\\t\\t\/\/ The BASE tag allows changing the base URL from which files are\\n+\\t\\t\/\/ loaded, and that can break several plugins, such as Katex (which\\n+\\t\\t\/\/ needs to load CSS files using a relative URL). For that reason\\n+\\t\\t\/\/ it is disabled. More info:\\n+\\t\\t\/\/ https:\/\/github.com\/laurent22\/joplin\/issues\/3021\\n+\\t\\t\/\/\\n+\\t\\t\/\/ \"link\" can be used to escape the parser and inject JavaScript.\\n+\\t\\t\/\/ Adding \"meta\" too for the same reason as it shouldn\\'t be used in\\n+\\t\\t\/\/ notes anyway.\\n+\\t\\tconst disallowedTags = [\\'script\\', \\'iframe\\', \\'frameset\\', \\'frame\\', \\'object\\', \\'base\\', \\'embed\\', \\'link\\', \\'meta\\'];\\n \\n \\t\\tconst parser = new htmlparser2.Parser({'}}",
      "message_norm":"all: security: remove \"link\" and \"meta\" tags from notes to prevent xss",
      "language":"en",
      "entities":"[('security', 'SECWORD', ''), ('remove', 'ACTION', ''), ('prevent', 'ACTION', ''), ('xss', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js'])",
      "num_files":1.0,
      "patch_content":"From fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13 Mon Sep 17 00:00:00 2001\nFrom: Laurent Cozic <laurent@cozic.net>\nDate: Thu, 29 Oct 2020 16:19:56 +0000\nSubject: [PATCH] All: Security: Remove \"link\" and \"meta\" tags from notes to\n prevent XSS\n\n---\n ...\/lib\/joplin-renderer\/htmlUtils.js              | 15 ++++++++++-----\n 1 file changed, 10 insertions(+), 5 deletions(-)\n\ndiff --git a\/ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js b\/ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js\nindex f9af4d97886..a9581f70aae 100644\n--- a\/ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js\n+++ b\/ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js\n@@ -87,11 +87,16 @@ class HtmlUtils {\n \t\t\treturn tagStack[tagStack.length - 1];\n \t\t};\n \n-\t\t\/\/ The BASE tag allows changing the base URL from which files are loaded, and\n-\t\t\/\/ that can break several plugins, such as Katex (which needs to load CSS\n-\t\t\/\/ files using a relative URL). For that reason it is disabled.\n-\t\t\/\/ More info: https:\/\/github.com\/laurent22\/joplin\/issues\/3021\n-\t\tconst disallowedTags = ['script', 'iframe', 'frameset', 'frame', 'object', 'base', 'embed'];\n+\t\t\/\/ The BASE tag allows changing the base URL from which files are\n+\t\t\/\/ loaded, and that can break several plugins, such as Katex (which\n+\t\t\/\/ needs to load CSS files using a relative URL). For that reason\n+\t\t\/\/ it is disabled. More info:\n+\t\t\/\/ https:\/\/github.com\/laurent22\/joplin\/issues\/3021\n+\t\t\/\/\n+\t\t\/\/ \"link\" can be used to escape the parser and inject JavaScript.\n+\t\t\/\/ Adding \"meta\" too for the same reason as it shouldn't be used in\n+\t\t\/\/ notes anyway.\n+\t\tconst disallowedTags = ['script', 'iframe', 'frameset', 'frame', 'object', 'base', 'embed', 'link', 'meta'];\n \n \t\tconst parser = new htmlparser2.Parser({",
      "code_diff":"@@ -87,11 +87,16 @@ class HtmlUtils {\n \t\t\treturn tagStack[tagStack.length - 1];\n \t\t};\n \n-\t\t\/\/ The BASE tag allows changing the base URL from which files are loaded, and\n-\t\t\/\/ that can break several plugins, such as Katex (which needs to load CSS\n-\t\t\/\/ files using a relative URL). For that reason it is disabled.\n-\t\t\/\/ More info: https:\/\/github.com\/laurent22\/joplin\/issues\/3021\n-\t\tconst disallowedTags = ['script', 'iframe', 'frameset', 'frame', 'object', 'base', 'embed'];\n+\t\t\/\/ The BASE tag allows changing the base URL from which files are\n+\t\t\/\/ loaded, and that can break several plugins, such as Katex (which\n+\t\t\/\/ needs to load CSS files using a relative URL). For that reason\n+\t\t\/\/ it is disabled. More info:\n+\t\t\/\/ https:\/\/github.com\/laurent22\/joplin\/issues\/3021\n+\t\t\/\/\n+\t\t\/\/ \"link\" can be used to escape the parser and inject JavaScript.\n+\t\t\/\/ Adding \"meta\" too for the same reason as it shouldn't be used in\n+\t\t\/\/ notes anyway.\n+\t\tconst disallowedTags = ['script', 'iframe', 'frameset', 'frame', 'object', 'base', 'embed', 'link', 'meta'];\n \n \t\tconst parser = new htmlparser2.Parser({"
    },
    {
      "index":24,
      "vuln_id":"GHSA-4p8f-mmfj-r45g",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/fatfreecrm\/fat_free_crm\/commit\/6d60bc8ed010c4eda05d6645c64849f415f68d65'}",
      "dataset":"osv",
      "summary":"Cross-site scripting in fat_free_crm Fat Free CRM before 0.18.1 has XSS in the tags_helper in app\/helpers\/tags_helper.rb.",
      "published_date":"2019-08-21",
      "chain_len":1,
      "project":"https:\/\/github.com\/fatfreecrm\/fat_free_crm",
      "commit_href":"https:\/\/github.com\/fatfreecrm\/fat_free_crm\/commit\/6d60bc8ed010c4eda05d6645c64849f415f68d65",
      "commit_sha":"6d60bc8ed010c4eda05d6645c64849f415f68d65",
      "patch":"SINGLE",
      "chain_ord":"['6d60bc8ed010c4eda05d6645c64849f415f68d65']",
      "before_first_fix_commit":"{'557fe238a65ca94ce21e3940724ab96e55e1b27d'}",
      "last_fix_commit":"6d60bc8ed010c4eda05d6645c64849f415f68d65",
      "chain_ord_pos":1.0,
      "commit_datetime":"10\/26\/2018, 23:55:55",
      "message":"Context-sensitive XSS bugfix.",
      "author":"Antonin Steinhauser",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'app\/helpers\/tags_helper.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fatfreecrm\/fat_free_crm\/raw\/6d60bc8ed010c4eda05d6645c64849f415f68d65\/app%2Fhelpers%2Ftags_helper.rb', 'patch': '@@ -17,7 +17,7 @@ def tags_for_index(model)\\n       elsif !query.include?(hashtag)\\n         query += \" #{hashtag}\"\\n       end\\n-      out << link_to_function(tag, \"crm.search_tagged(\\'#{query}\\', \\'#{model.class.to_s.tableize}\\')\", title: tag)\\n+      out << link_to_function(tag, \"crm.search_tagged(\\'#{escape_javascript(query)}\\', \\'#{model.class.to_s.tableize}\\')\", title: tag)\\n     end\\n   end'}}",
      "message_norm":"context-sensitive xss bugfix.",
      "language":"fr",
      "entities":"[('sensitive', 'SECWORD', ''), ('xss', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['app\/helpers\/tags_helper.rb'])",
      "num_files":1.0,
      "patch_content":"From 6d60bc8ed010c4eda05d6645c64849f415f68d65 Mon Sep 17 00:00:00 2001\nFrom: Antonin Steinhauser <steinhauser@d3s.mff.cuni.cz>\nDate: Fri, 26 Oct 2018 16:55:55 -0700\nSubject: [PATCH] Context-sensitive XSS bugfix.\n\n---\n app\/helpers\/tags_helper.rb | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/app\/helpers\/tags_helper.rb b\/app\/helpers\/tags_helper.rb\nindex 266060c6ea..397977682f 100755\n--- a\/app\/helpers\/tags_helper.rb\n+++ b\/app\/helpers\/tags_helper.rb\n@@ -17,7 +17,7 @@ def tags_for_index(model)\n       elsif !query.include?(hashtag)\n         query += \" #{hashtag}\"\n       end\n-      out << link_to_function(tag, \"crm.search_tagged('#{query}', '#{model.class.to_s.tableize}')\", title: tag)\n+      out << link_to_function(tag, \"crm.search_tagged('#{escape_javascript(query)}', '#{model.class.to_s.tableize}')\", title: tag)\n     end\n   end",
      "code_diff":"@@ -17,7 +17,7 @@ def tags_for_index(model)\n       elsif !query.include?(hashtag)\n         query += \" #{hashtag}\"\n       end\n-      out << link_to_function(tag, \"crm.search_tagged('#{query}', '#{model.class.to_s.tableize}')\", title: tag)\n+      out << link_to_function(tag, \"crm.search_tagged('#{escape_javascript(query)}', '#{model.class.to_s.tableize}')\", title: tag)\n     end\n   end"
    },
    {
      "index":25,
      "vuln_id":"GHSA-cx2r-mf6x-55rx",
      "cwe_id":"{'CWE-79'}",
      "score":4.1,
      "chain":"{'https:\/\/github.com\/PrestaShop\/ps_linklist\/commit\/83e6e0bdda2287f4d6e64127cb90c41d26b5ad82'}",
      "dataset":"osv",
      "summary":"Stored XSS with custom URLs in PrestaShop module ps_linklist ### Impact\nStored XSS when using custom URLs.\n\n### Patches\nThe problem is fixed in 3.1.0\n\n### References\n[Cross-site Scripting (XSS) - Stored (CWE-79)](https:\/\/cwe.mitre.org\/data\/definitions\/79.html)",
      "published_date":"2021-10-12",
      "chain_len":1,
      "project":"https:\/\/github.com\/PrestaShop\/ps_linklist",
      "commit_href":"https:\/\/github.com\/PrestaShop\/ps_linklist\/commit\/83e6e0bdda2287f4d6e64127cb90c41d26b5ad82",
      "commit_sha":"83e6e0bdda2287f4d6e64127cb90c41d26b5ad82",
      "patch":"SINGLE",
      "chain_ord":"['83e6e0bdda2287f4d6e64127cb90c41d26b5ad82']",
      "before_first_fix_commit":"{'b90005c2cfed949ab564228b277a728e0a62a876', '632e61961553a5cdd4c12ad7218e914455dbaa6b'}",
      "last_fix_commit":"83e6e0bdda2287f4d6e64127cb90c41d26b5ad82",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/15\/2020, 14:16:34",
      "message":"Merge pull request from GHSA-cx2r-mf6x-55rx\n\nThe custom url field must be a valid url",
      "author":"GoT",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
      "files":"{'src\/Form\/Type\/CustomUrlType.php': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/ps_linklist\/raw\/83e6e0bdda2287f4d6e64127cb90c41d26b5ad82\/src%2FForm%2FType%2FCustomUrlType.php', 'patch': \"@@ -29,6 +29,7 @@\\n use PrestaShopBundle\\\\Form\\\\Admin\\\\Type\\\\TranslatorAwareType;\\n use Symfony\\\\Component\\\\Form\\\\Extension\\\\Core\\\\Type\\\\TextType;\\n use Symfony\\\\Component\\\\Form\\\\FormBuilderInterface;\\n+use Symfony\\\\Component\\\\Validator\\\\Constraints as Assert;\\n \\n class CustomUrlType extends TranslatorAwareType\\n {\\n@@ -45,6 +46,7 @@ public function buildForm(FormBuilderInterface $builder, array $options)\\n             ->add('url', TextType::class, [\\n                 'label' => $this->trans('URL', 'Modules.Linklist.Admin'),\\n                 'required' => true,\\n+                'constraints' => [new Assert\\\\Url()],\\n             ])\\n         ;\\n     }\"}}",
      "message_norm":"merge pull request from ghsa-cx2r-mf6x-55rx\n\nthe custom url field must be a valid url",
      "language":"en",
      "entities":"[('ghsa-cx2r-mf6x-55rx', 'VULNID', 'GHSA')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/Form\/Type\/CustomUrlType.php'])",
      "num_files":1.0,
      "patch_content":"From 632e61961553a5cdd4c12ad7218e914455dbaa6b Mon Sep 17 00:00:00 2001\nFrom: Pierre RAMBAUD <pierre.rambaud86@gmail.com>\nDate: Wed, 18 Mar 2020 12:13:09 +0100\nSubject: [PATCH] Check that the url is a real url accepting only http & https\n\n---\n src\/Form\/Type\/CustomUrlType.php | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/src\/Form\/Type\/CustomUrlType.php b\/src\/Form\/Type\/CustomUrlType.php\nindex da78efe4..943f38fb 100644\n--- a\/src\/Form\/Type\/CustomUrlType.php\n+++ b\/src\/Form\/Type\/CustomUrlType.php\n@@ -29,6 +29,7 @@\n use PrestaShopBundle\\Form\\Admin\\Type\\TranslatorAwareType;\n use Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\n use Symfony\\Component\\Form\\FormBuilderInterface;\n+use Symfony\\Component\\Validator\\Constraints as Assert;\n \n class CustomUrlType extends TranslatorAwareType\n {\n@@ -45,6 +46,7 @@ public function buildForm(FormBuilderInterface $builder, array $options)\n             ->add('url', TextType::class, [\n                 'label' => $this->trans('URL', 'Modules.Linklist.Admin'),\n                 'required' => true,\n+                'constraints' => [new Assert\\Url()],\n             ])\n         ;\n     }",
      "code_diff":"@@ -29,6 +29,7 @@\n use PrestaShopBundle\\Form\\Admin\\Type\\TranslatorAwareType;\n use Symfony\\Component\\Form\\Extension\\Core\\Type\\TextType;\n use Symfony\\Component\\Form\\FormBuilderInterface;\n+use Symfony\\Component\\Validator\\Constraints as Assert;\n \n class CustomUrlType extends TranslatorAwareType\n {\n@@ -45,6 +46,7 @@ public function buildForm(FormBuilderInterface $builder, array $options)\n             ->add('url', TextType::class, [\n                 'label' => $this->trans('URL', 'Modules.Linklist.Admin'),\n                 'required' => true,\n+                'constraints' => [new Assert\\Url()],\n             ])\n         ;\n     }"
    },
    {
      "index":26,
      "vuln_id":"GHSA-5qjq-69w6-fg57",
      "cwe_id":"{'CWE-79'}",
      "score":10.0,
      "chain":"{'https:\/\/github.com\/flarum\/core\/commit\/440bed81b8019dff00642c8f493b4909d505a28a'}",
      "dataset":"osv",
      "summary":"XSS vulnerability with translator Flarum's translation system allowed for string inputs to be converted into HTML DOM nodes when rendered. This change was made after v0.1.0-beta.16 (our last beta before v1.0.0) and was not noticed or documented.\n\nThis allowed for any user to type malicious HTML markup within certain user input fields and have this execute on client browsers. The example which led to the discovery of this vulnerability was in the forum search box. Entering faux-malicious HTML markup, such as <script>alert('test')<\/script> resulted in an alert box appearing on the forum. This attack could also be modified to perform AJAX requests on behalf of a user, possibly deleting discussions, modifying their settings or profile, or even modifying settings on the Admin panel if the attack was targetted towards a privileged user.\n\n### Impact\n\nAll Flarum communities that run flarum v1.0.0 or v1.0.1 are impacted.\n\n### Patches\n\nThe vulnerability has been fixed and published as flarum\/core v1.0.2. All communities running Flarum v1.0 have to upgrade as soon as possible to v1.0.2 using:\n\n```\ncomposer update --prefer-dist --no-dev -a -W\n```\n\nYou can then confirm you run the latest version using:\n\n```\ncomposer show flarum\/core\n```\n\n### Workarounds\n\n__None.__\n\n### For more information\n\nFor any questions or comments on this vulnerability please visit https:\/\/discuss.flarum.org\/d\/27558.\n\nFor support questions create a discussion at https:\/\/discuss.flarum.org\/t\/support.\n\nA reminder that if you ever become aware of a security issue in Flarum, please report it to us privately by emailing security@flarum.org, and we will address it promptly.",
      "published_date":"2021-06-07",
      "chain_len":1,
      "project":"https:\/\/github.com\/flarum\/core",
      "commit_href":"https:\/\/github.com\/flarum\/core\/commit\/440bed81b8019dff00642c8f493b4909d505a28a",
      "commit_sha":"440bed81b8019dff00642c8f493b4909d505a28a",
      "patch":"SINGLE",
      "chain_ord":"['440bed81b8019dff00642c8f493b4909d505a28a']",
      "before_first_fix_commit":"{'eeb8fe1443b98f5f622ca52b4a02732f62d1aa77'}",
      "last_fix_commit":"440bed81b8019dff00642c8f493b4909d505a28a",
      "chain_ord_pos":1.0,
      "commit_datetime":"06\/06\/2021, 01:41:48",
      "message":"Fix XSS vulnerability",
      "author":"David Wheatley",
      "comments":"{'com_1': {'author': 'davwheat', 'datetime': '06\/07\/2021, 20:53:34', 'body': 'The details about this vulnerability have now been made public.\\r\\n\\r\\nFor more information, please see: https:\/\/discuss.flarum.org\/d\/27558-critical-security-update-to-flarum-core-v102'}}",
      "stats":"{'additions': 12, 'deletions': 1, 'total': 13}",
      "files":"{'js\/src\/common\/Translator.tsx': {'additions': 12, 'deletions': 1, 'changes': 13, 'status': 'renamed', 'raw_url': 'https:\/\/github.com\/flarum\/framework\/raw\/440bed81b8019dff00642c8f493b4909d505a28a\/js%2Fsrc%2Fcommon%2FTranslator.tsx', 'patch': \"@@ -48,12 +48,23 @@ export default class Translator {\\n     \/\/ future there should be a hook here to inspect the user and change the\\n     \/\/ translation key. This will allow a gender property to determine which\\n     \/\/ translation key is used.\\n+\\n     if ('user' in parameters) {\\n       const user = extract(parameters, 'user');\\n \\n       if (!parameters.username) parameters.username = username(user);\\n     }\\n-    return parameters;\\n+\\n+    const escapedParameters: TranslatorParameters = {};\\n+\\n+    for (const param in parameters) {\\n+      const paramValue = parameters[param];\\n+\\n+      if (typeof paramValue === 'string') escapedParameters[param] = <>{parameters[param]}<\/>;\\n+      else escapedParameters[param] = parameters[param];\\n+    }\\n+\\n+    return escapedParameters;\\n   }\\n \\n   trans(id: string, parameters: TranslatorParameters = {}) {\"}}",
      "message_norm":"fix xss vulnerability",
      "language":"ca",
      "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['js\/src\/common\/Translator.tsx'])",
      "num_files":1.0,
      "patch_content":"From 440bed81b8019dff00642c8f493b4909d505a28a Mon Sep 17 00:00:00 2001\nFrom: David Wheatley <hi@davwheat.dev>\nDate: Sun, 6 Jun 2021 02:41:48 +0100\nSubject: [PATCH] Fix XSS vulnerability\n\n---\n js\/src\/common\/{Translator.ts => Translator.tsx} | 13 ++++++++++++-\n 1 file changed, 12 insertions(+), 1 deletion(-)\n rename js\/src\/common\/{Translator.ts => Translator.tsx} (86%)\n\ndiff --git a\/js\/src\/common\/Translator.ts b\/js\/src\/common\/Translator.tsx\nsimilarity index 86%\nrename from js\/src\/common\/Translator.ts\nrename to js\/src\/common\/Translator.tsx\nindex 51b9c95a6e..2d2036ff3f 100644\n--- a\/js\/src\/common\/Translator.ts\n+++ b\/js\/src\/common\/Translator.tsx\n@@ -48,12 +48,23 @@ export default class Translator {\n     \/\/ future there should be a hook here to inspect the user and change the\n     \/\/ translation key. This will allow a gender property to determine which\n     \/\/ translation key is used.\n+\n     if ('user' in parameters) {\n       const user = extract(parameters, 'user');\n \n       if (!parameters.username) parameters.username = username(user);\n     }\n-    return parameters;\n+\n+    const escapedParameters: TranslatorParameters = {};\n+\n+    for (const param in parameters) {\n+      const paramValue = parameters[param];\n+\n+      if (typeof paramValue === 'string') escapedParameters[param] = <>{parameters[param]}<\/>;\n+      else escapedParameters[param] = parameters[param];\n+    }\n+\n+    return escapedParameters;\n   }\n \n   trans(id: string, parameters: TranslatorParameters = {}) {",
      "code_diff":"similarity index 86%\nrename from js\/src\/common\/Translator.ts\nrename to js\/src\/common\/Translator.tsx\n@@ -48,12 +48,23 @@ export default class Translator {\n     \/\/ future there should be a hook here to inspect the user and change the\n     \/\/ translation key. This will allow a gender property to determine which\n     \/\/ translation key is used.\n+\n     if ('user' in parameters) {\n       const user = extract(parameters, 'user');\n \n       if (!parameters.username) parameters.username = username(user);\n     }\n-    return parameters;\n+\n+    const escapedParameters: TranslatorParameters = {};\n+\n+    for (const param in parameters) {\n+      const paramValue = parameters[param];\n+\n+      if (typeof paramValue === 'string') escapedParameters[param] = <>{parameters[param]}<\/>;\n+      else escapedParameters[param] = parameters[param];\n+    }\n+\n+    return escapedParameters;\n   }\n \n   trans(id: string, parameters: TranslatorParameters = {}) {"
    },
    {
      "index":27,
      "vuln_id":"GHSA-3374-7h99-xr85",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/6ec6171206a7507a39695edc8bbd1b97ef1041c6'}",
      "dataset":"osv",
      "summary":"Cross-site scripting in forkcms Fork CMS Content Management System v5.8.0 was discovered to contain a cross-site scripting (XSS) vulnerability in the `Displayname` field when using the `Add`, `Edit` or `Register' functions. This vulnerability allows attackers to execute arbitrary web scripts or HTML.",
      "published_date":"2021-10-25",
      "chain_len":1,
      "project":"https:\/\/github.com\/forkcms\/forkcms",
      "commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/6ec6171206a7507a39695edc8bbd1b97ef1041c6",
      "commit_sha":"6ec6171206a7507a39695edc8bbd1b97ef1041c6",
      "patch":"SINGLE",
      "chain_ord":"['6ec6171206a7507a39695edc8bbd1b97ef1041c6']",
      "before_first_fix_commit":"{'f439d630c2f46a85b251488cd7073068a66fae5c'}",
      "last_fix_commit":"6ec6171206a7507a39695edc8bbd1b97ef1041c6",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/17\/2020, 10:44:12",
      "message":"Fix xss in profiles display name",
      "author":"Jelmer Prins",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
      "files":"{'src\/Backend\/Modules\/Profiles\/Actions\/Index.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/6ec6171206a7507a39695edc8bbd1b97ef1041c6\/src%2FBackend%2FModules%2FProfiles%2FActions%2FIndex.php', 'patch': \"@@ -128,6 +128,7 @@ private function loadDataGrid(): void\\n             'registered_on',\\n             true\\n         );\\n+        $this->dgProfiles->setColumnFunction('htmlspecialchars', ['[display_name]'], 'display_name');\\n \\n         \/\/ add the mass action controls\\n         $this->dgProfiles->setMassActionCheckboxes('check', '[id]');\"}}",
      "message_norm":"fix xss in profiles display name",
      "language":"en",
      "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/Backend\/Modules\/Profiles\/Actions\/Index.php'])",
      "num_files":1.0,
      "patch_content":"From 6ec6171206a7507a39695edc8bbd1b97ef1041c6 Mon Sep 17 00:00:00 2001\nFrom: Jelmer Prins <jelmer@sumocoders.be>\nDate: Fri, 17 Apr 2020 12:44:12 +0200\nSubject: [PATCH] Fix xss in profiles display name\n\n---\n src\/Backend\/Modules\/Profiles\/Actions\/Index.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/src\/Backend\/Modules\/Profiles\/Actions\/Index.php b\/src\/Backend\/Modules\/Profiles\/Actions\/Index.php\nindex b6047acfb0..87f87f2344 100644\n--- a\/src\/Backend\/Modules\/Profiles\/Actions\/Index.php\n+++ b\/src\/Backend\/Modules\/Profiles\/Actions\/Index.php\n@@ -128,6 +128,7 @@ private function loadDataGrid(): void\n             'registered_on',\n             true\n         );\n+        $this->dgProfiles->setColumnFunction('htmlspecialchars', ['[display_name]'], 'display_name');\n \n         \/\/ add the mass action controls\n         $this->dgProfiles->setMassActionCheckboxes('check', '[id]');",
      "code_diff":"@@ -128,6 +128,7 @@ private function loadDataGrid(): void\n             'registered_on',\n             true\n         );\n+        $this->dgProfiles->setColumnFunction('htmlspecialchars', ['[display_name]'], 'display_name');\n \n         \/\/ add the mass action controls\n         $this->dgProfiles->setMassActionCheckboxes('check', '[id]');"
    },
    {
      "index":28,
      "vuln_id":"GHSA-qqxp-xp9v-vvx6",
      "cwe_id":"{'CWE-79'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/jquery\/jquery-ui\/commit\/f2854408cce7e4b7fc6bf8676761904af9c96bde', 'https:\/\/github.com\/jquery\/jquery-ui\/commit\/5fee6fd5000072ff32f2d65b6451f39af9e0e39e'}",
      "dataset":"osv",
      "summary":"Moderate severity vulnerability that affects jquery-ui Cross-site scripting (XSS) vulnerability in the default content option in jquery.ui.tooltip.js in the Tooltip widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title attribute, which is not properly handled in the autocomplete combo box demo.",
      "published_date":"2017-10-24",
      "chain_len":2,
      "project":"https:\/\/github.com\/jquery\/jquery-ui",
      "commit_href":"https:\/\/github.com\/jquery\/jquery-ui\/commit\/5fee6fd5000072ff32f2d65b6451f39af9e0e39e",
      "commit_sha":"5fee6fd5000072ff32f2d65b6451f39af9e0e39e",
      "patch":"MULTI",
      "chain_ord":"['5fee6fd5000072ff32f2d65b6451f39af9e0e39e', 'f2854408cce7e4b7fc6bf8676761904af9c96bde']",
      "before_first_fix_commit":"{'5fee6fd5000072ff32f2d65b6451f39af9e0e39e'}",
      "last_fix_commit":"f2854408cce7e4b7fc6bf8676761904af9c96bde",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/27\/2012, 15:52:19",
      "message":"Autocomplete demo: Combobox: Encode search term inside tooltips. Fixes #8859 - Autocomplete: XSS in combobox demo.",
      "author":"Scott Gonz\u00e1lez",
      "comments":"{'com_1': {'author': 'jzaefferer', 'datetime': '11\/27\/2012, 16:05:23', 'body': \"Doesn't this just hide the underlying tooltip vulnerability? If so, tooltip would have to use `.text()` instead of `.html()`, and make it sane to override that.\"}, 'com_2': {'author': 'scottgonzalez', 'datetime': '11\/27\/2012, 16:13:04', 'body': \"hmm...yeah, tooltip should handle this in the default `content` option. Good catch, I'll fix that.\"}, 'com_3': {'author': 'scottgonzalez', 'datetime': '11\/27\/2012, 16:22:17', 'body': 'Fixed in f2854408cce7e4b7fc6bf8676761904af9c96bde.'}}",
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'demos\/autocomplete\/combobox.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery\/jquery-ui\/raw\/5fee6fd5000072ff32f2d65b6451f39af9e0e39e\/demos%2Fautocomplete%2Fcombobox.html', 'patch': '@@ -61,7 +61,7 @@\\n \\t\\t\\t\\t\\t\\t\/\/ remove invalid value, as it didn\\'t match anything\\n \\t\\t\\t\\t\\t\\t$( element )\\n \\t\\t\\t\\t\\t\\t\\t.val( \"\" )\\n-\\t\\t\\t\\t\\t\\t\\t.attr( \"title\", value + \" didn\\'t match any item\" )\\n+\\t\\t\\t\\t\\t\\t\\t.attr( \"title\", $( \"<a>\" ).text( value ).html() + \" didn\\'t match any item\" )\\n \\t\\t\\t\\t\\t\\t\\t.tooltip( \"open\" );\\n \\t\\t\\t\\t\\t\\tselect.val( \"\" );\\n \\t\\t\\t\\t\\t\\tsetTimeout(function() {'}}",
      "message_norm":"autocomplete demo: combobox: encode search term inside tooltips. fixes #8859 - autocomplete: xss in combobox demo.",
      "language":"pt",
      "entities":"[('encode', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#8859', 'ISSUE', ''), ('xss', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['demos\/autocomplete\/combobox.html'])",
      "num_files":1.0,
      "patch_content":"From 5fee6fd5000072ff32f2d65b6451f39af9e0e39e Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Scott=20Gonz=C3=A1lez?= <scott.gonzalez@gmail.com>\nDate: Tue, 27 Nov 2012 10:52:19 -0500\nSubject: [PATCH] Autocomplete demo: Combobox: Encode search term inside\n tooltips. Fixes #8859 - Autocomplete: XSS in combobox demo.\n\n---\n demos\/autocomplete\/combobox.html | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/demos\/autocomplete\/combobox.html b\/demos\/autocomplete\/combobox.html\nindex 6229d47b216..8c6f59fc198 100644\n--- a\/demos\/autocomplete\/combobox.html\n+++ b\/demos\/autocomplete\/combobox.html\n@@ -61,7 +61,7 @@\n \t\t\t\t\t\t\/\/ remove invalid value, as it didn't match anything\n \t\t\t\t\t\t$( element )\n \t\t\t\t\t\t\t.val( \"\" )\n-\t\t\t\t\t\t\t.attr( \"title\", value + \" didn't match any item\" )\n+\t\t\t\t\t\t\t.attr( \"title\", $( \"<a>\" ).text( value ).html() + \" didn't match any item\" )\n \t\t\t\t\t\t\t.tooltip( \"open\" );\n \t\t\t\t\t\tselect.val( \"\" );\n \t\t\t\t\t\tsetTimeout(function() {",
      "code_diff":"@@ -61,7 +61,7 @@\n \t\t\t\t\t\t\/\/ remove invalid value, as it didn't match anything\n \t\t\t\t\t\t$( element )\n \t\t\t\t\t\t\t.val( \"\" )\n-\t\t\t\t\t\t\t.attr( \"title\", value + \" didn't match any item\" )\n+\t\t\t\t\t\t\t.attr( \"title\", $( \"<a>\" ).text( value ).html() + \" didn't match any item\" )\n \t\t\t\t\t\t\t.tooltip( \"open\" );\n \t\t\t\t\t\tselect.val( \"\" );\n \t\t\t\t\t\tsetTimeout(function() {"
    },
    {
      "index":29,
      "vuln_id":"GHSA-q7q9-w24q-cpgh",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/apache\/ambari\/pull\/3040\/commits\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting (XSS) in Apache Ambari Views A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
      "published_date":"2022-01-06",
      "chain_len":1,
      "project":"https:\/\/github.com\/apache\/ambari",
      "commit_href":"https:\/\/github.com\/apache\/ambari\/pull\/3040\/commits\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
      "commit_sha":"a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
      "patch":"SINGLE",
      "chain_ord":"['a9cfdb9dcce63a3494c07c81ebb2cf8da218a210']",
      "before_first_fix_commit":"{'9e9ddf752f36aa9340d6dfdc23ecccfcd646fc53'}",
      "last_fix_commit":"a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/01\/2019, 11:43:05",
      "message":"AMBARI-25329. Ambari breadcrumbs xss vulnerability",
      "author":"Alex Antonenko",
      "comments":null,
      "stats":"{'additions': 12, 'deletions': 2, 'total': 14}",
      "files":"{'ambari-web\/app\/views\/common\/breadcrumbs_view.js': {'additions': 12, 'deletions': 2, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/ambari\/raw\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210\/ambari-web%2Fapp%2Fviews%2Fcommon%2Fbreadcrumbs_view.js', 'patch': \"@@ -149,8 +149,16 @@ App.BreadcrumbItem = Em.Object.extend({\\n   createLabel() {\\n     let label = this.get('label');\\n     let labelBindingPath = this.get('labelBindingPath');\\n+    let formattedLabel;\\n+\\n+    if (labelBindingPath) {\\n+      formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));\\n+    } else{\\n+      formattedLabel = label;\\n+    }\\n+\\n+\\n \\n-    let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;\\n     this.set('formattedLabel', this.labelPostFormat(formattedLabel));\\n   },\\n \\n@@ -216,7 +224,9 @@ App.BreadcrumbsView = Em.View.extend({\\n       }\\n       currentState = currentState.get('parentState');\\n     }\\n-    items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());\\n+    items.reverse();\\n+    items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));\\n+    items = items.map(item => App.BreadcrumbItem.extend(item).create());\\n     if (items.length) {\\n       items.get('lastObject').setProperties({\\n         disabled: true,\"}}",
      "message_norm":"ambari-25329. ambari breadcrumbs xss vulnerability",
      "language":"ca",
      "entities":"[('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['ambari-web\/app\/views\/common\/breadcrumbs_view.js'])",
      "num_files":1.0,
      "patch_content":"From a9cfdb9dcce63a3494c07c81ebb2cf8da218a210 Mon Sep 17 00:00:00 2001\nFrom: Alex Antonenko <aantonenko@hortonworks.com>\nDate: Mon, 1 Jul 2019 14:43:05 +0300\nSubject: [PATCH] AMBARI-25329. Ambari breadcrumbs xss vulnerability\n\n---\n ambari-web\/app\/views\/common\/breadcrumbs_view.js | 14 ++++++++++++--\n 1 file changed, 12 insertions(+), 2 deletions(-)\n\ndiff --git a\/ambari-web\/app\/views\/common\/breadcrumbs_view.js b\/ambari-web\/app\/views\/common\/breadcrumbs_view.js\nindex ec6e6a64efb..31190c5faf2 100644\n--- a\/ambari-web\/app\/views\/common\/breadcrumbs_view.js\n+++ b\/ambari-web\/app\/views\/common\/breadcrumbs_view.js\n@@ -149,8 +149,16 @@ App.BreadcrumbItem = Em.Object.extend({\n   createLabel() {\n     let label = this.get('label');\n     let labelBindingPath = this.get('labelBindingPath');\n+    let formattedLabel;\n+\n+    if (labelBindingPath) {\n+      formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));\n+    } else{\n+      formattedLabel = label;\n+    }\n+\n+\n \n-    let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;\n     this.set('formattedLabel', this.labelPostFormat(formattedLabel));\n   },\n \n@@ -216,7 +224,9 @@ App.BreadcrumbsView = Em.View.extend({\n       }\n       currentState = currentState.get('parentState');\n     }\n-    items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());\n+    items.reverse();\n+    items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));\n+    items = items.map(item => App.BreadcrumbItem.extend(item).create());\n     if (items.length) {\n       items.get('lastObject').setProperties({\n         disabled: true,",
      "code_diff":"@@ -149,8 +149,16 @@ App.BreadcrumbItem = Em.Object.extend({\n   createLabel() {\n     let label = this.get('label');\n     let labelBindingPath = this.get('labelBindingPath');\n+    let formattedLabel;\n+\n+    if (labelBindingPath) {\n+      formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));\n+    } else{\n+      formattedLabel = label;\n+    }\n+\n+\n \n-    let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;\n     this.set('formattedLabel', this.labelPostFormat(formattedLabel));\n   },\n \n@@ -216,7 +224,9 @@ App.BreadcrumbsView = Em.View.extend({\n       }\n       currentState = currentState.get('parentState');\n     }\n-    items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());\n+    items.reverse();\n+    items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));\n+    items = items.map(item => App.BreadcrumbItem.extend(item).create());\n     if (items.length) {\n       items.get('lastObject').setProperties({\n         disabled: true,"
    },
    {
      "index":30,
      "vuln_id":"GHSA-vcfc-9wcp-j623",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/a0e0d7de20f5d1712f1793f925496def4383c610'}",
      "dataset":"osv",
      "summary":"Cross site scripting attack in ServiceStack Framework ServiceStack ServiceStack Framework 4.5.14 is affected by: Cross Site Scripting (XSS). The impact is: JavaScrpit is reflected in the server response, hence executed by the browser. The component is: the query used in the GET request is prone. The attack vector is: Since there is no server-side validation and If Browser encoding is bypassed, the victim is affected when opening a crafted URL. The fixed version is: 5.2.0.",
      "published_date":"2022-05-24",
      "chain_len":1,
      "project":"https:\/\/github.com\/ServiceStack\/ServiceStack",
      "commit_href":"https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/a0e0d7de20f5d1712f1793f925496def4383c610",
      "commit_sha":"a0e0d7de20f5d1712f1793f925496def4383c610",
      "patch":"SINGLE",
      "chain_ord":"['a0e0d7de20f5d1712f1793f925496def4383c610']",
      "before_first_fix_commit":"{'2c6fbe4554014ead15b7b188bb748b655b30807c'}",
      "last_fix_commit":"a0e0d7de20f5d1712f1793f925496def4383c610",
      "chain_ord_pos":1.0,
      "commit_datetime":"08\/17\/2018, 15:05:59",
      "message":"HtmlEncode Raw URL in HtmlFormat snapshot",
      "author":"Demis Bellot",
      "comments":null,
      "stats":"{'additions': 3, 'deletions': 2, 'total': 5}",
      "files":"{'src\/ServiceStack\/Formats\/HtmlFormat.cs': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ServiceStack\/ServiceStack\/raw\/a0e0d7de20f5d1712f1793f925496def4383c610\/src%2FServiceStack%2FFormats%2FHtmlFormat.cs', 'patch': '@@ -90,12 +90,13 @@ public async Task SerializeToStreamAsync(IRequest req, object response, Stream o\\n             {\\n                 \/\/ Serialize then escape any potential script tags to avoid XSS when displaying as HTML\\n                 var json = JsonDataContractSerializer.Instance.SerializeToString(dto) ?? \"null\";\\n-                json = json.Replace(\"<\", \"&lt;\").Replace(\">\", \"&gt;\");\\n+                json = json.HtmlEncode();\\n \\n                 var url = req.ResolveAbsoluteUrl()\\n                     .Replace(\"format=html\", \"\")\\n                     .Replace(\"format=shtm\", \"\")\\n-                    .TrimEnd(\\'?\\', \\'&\\');\\n+                    .TrimEnd(\\'?\\', \\'&\\')\\n+                    .HtmlEncode();\\n \\n                 url += url.Contains(\"?\") ? \"&\" : \"?\";'}}",
      "message_norm":"htmlencode raw url in htmlformat snapshot",
      "language":"en",
      "entities":"[('htmlencode', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/ServiceStack\/Formats\/HtmlFormat.cs'])",
      "num_files":1.0,
      "patch_content":"From a0e0d7de20f5d1712f1793f925496def4383c610 Mon Sep 17 00:00:00 2001\nFrom: Demis Bellot <demis.bellot@gmail.com>\nDate: Fri, 17 Aug 2018 11:05:59 -0400\nSubject: [PATCH] HtmlEncode Raw URL in HtmlFormat snapshot\n\n---\n src\/ServiceStack\/Formats\/HtmlFormat.cs | 5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/ServiceStack\/Formats\/HtmlFormat.cs b\/src\/ServiceStack\/Formats\/HtmlFormat.cs\nindex e62df99e576..482955e38fc 100644\n--- a\/src\/ServiceStack\/Formats\/HtmlFormat.cs\n+++ b\/src\/ServiceStack\/Formats\/HtmlFormat.cs\n@@ -90,12 +90,13 @@ public async Task SerializeToStreamAsync(IRequest req, object response, Stream o\n             {\n                 \/\/ Serialize then escape any potential script tags to avoid XSS when displaying as HTML\n                 var json = JsonDataContractSerializer.Instance.SerializeToString(dto) ?? \"null\";\n-                json = json.Replace(\"<\", \"&lt;\").Replace(\">\", \"&gt;\");\n+                json = json.HtmlEncode();\n \n                 var url = req.ResolveAbsoluteUrl()\n                     .Replace(\"format=html\", \"\")\n                     .Replace(\"format=shtm\", \"\")\n-                    .TrimEnd('?', '&');\n+                    .TrimEnd('?', '&')\n+                    .HtmlEncode();\n \n                 url += url.Contains(\"?\") ? \"&\" : \"?\";",
      "code_diff":"@@ -90,12 +90,13 @@ public async Task SerializeToStreamAsync(IRequest req, object response, Stream o\n             {\n                 \/\/ Serialize then escape any potential script tags to avoid XSS when displaying as HTML\n                 var json = JsonDataContractSerializer.Instance.SerializeToString(dto) ?? \"null\";\n-                json = json.Replace(\"<\", \"&lt;\").Replace(\">\", \"&gt;\");\n+                json = json.HtmlEncode();\n \n                 var url = req.ResolveAbsoluteUrl()\n                     .Replace(\"format=html\", \"\")\n                     .Replace(\"format=shtm\", \"\")\n-                    .TrimEnd('?', '&');\n+                    .TrimEnd('?', '&')\n+                    .HtmlEncode();\n \n                 url += url.Contains(\"?\") ? \"&\" : \"?\";"
    },
    {
      "index":31,
      "vuln_id":"GHSA-whv6-rj84-2vh2",
      "cwe_id":"{'CWE-79'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections\/commit\/8ec1fca214f003538cec4137792ede928f25f583'}",
      "dataset":"osv",
      "summary":"Cross-Site Scripting in nextcloud-vue-collections Versions of `nextcloud-vue-collections` prior to 0.4.2 are vulnerable to Cross-Site Scripting (XSS).  The `v-tooltip` component has an insecure `defaultHTML` configuration that allows arbitrary JavaScript to be injected in the tooltip of a collection item. This allows attackers to execute arbitrary code in a victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 0.4.2 or later.",
      "published_date":"2020-09-04",
      "chain_len":1,
      "project":"https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections",
      "commit_href":"https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections\/commit\/8ec1fca214f003538cec4137792ede928f25f583",
      "commit_sha":"8ec1fca214f003538cec4137792ede928f25f583",
      "patch":"SINGLE",
      "chain_ord":"['8ec1fca214f003538cec4137792ede928f25f583']",
      "before_first_fix_commit":"{'1d55cc3b462bc344de6cfbe45d590d0c2f99fc1a'}",
      "last_fix_commit":"8ec1fca214f003538cec4137792ede928f25f583",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/29\/2019, 13:41:42",
      "message":"Force defaultHtml setting of v-tooltip to be disabled\n\nSigned-off-by: Julius H\u00e4rtl <jus@bitgrid.net>",
      "author":"Julius H\u00e4rtl",
      "comments":null,
      "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
      "files":"{'src\/components\/CollectionListItem.vue': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nextcloud\/nextcloud-vue-collections\/raw\/8ec1fca214f003538cec4137792ede928f25f583\/src%2Fcomponents%2FCollectionListItem.vue', 'patch': \"@@ -60,6 +60,9 @@ import Action from 'nextcloud-vue\/dist\/Components\/Action'\\n import Avatar from 'nextcloud-vue\/dist\/Components\/Avatar'\\n import Tooltip from 'nextcloud-vue\/dist\/Directives\/Tooltip'\\n \\n+Tooltip.options.defaultHtml = false\\n+\\n+\\n export default {\\n \\tname: 'CollectionListItem',\\n \\tcomponents: {\"}}",
      "message_norm":"force defaulthtml setting of v-tooltip to be disabled\n\nsigned-off-by: julius h\u00e4rtl <jus@bitgrid.net>",
      "language":"en",
      "entities":"[('jus@bitgrid.net', 'EMAIL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/components\/CollectionListItem.vue'])",
      "num_files":1.0,
      "patch_content":"From 8ec1fca214f003538cec4137792ede928f25f583 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Julius=20H=C3=A4rtl?= <jus@bitgrid.net>\nDate: Mon, 29 Jul 2019 15:41:42 +0200\nSubject: [PATCH] Force defaultHtml setting of v-tooltip to be disabled\nMIME-Version: 1.0\nContent-Type: text\/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\nSigned-off-by: Julius H\u00e4rtl <jus@bitgrid.net>\n---\n src\/components\/CollectionListItem.vue | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/src\/components\/CollectionListItem.vue b\/src\/components\/CollectionListItem.vue\nindex 146e1742..21de93cd 100644\n--- a\/src\/components\/CollectionListItem.vue\n+++ b\/src\/components\/CollectionListItem.vue\n@@ -60,6 +60,9 @@ import Action from 'nextcloud-vue\/dist\/Components\/Action'\n import Avatar from 'nextcloud-vue\/dist\/Components\/Avatar'\n import Tooltip from 'nextcloud-vue\/dist\/Directives\/Tooltip'\n \n+Tooltip.options.defaultHtml = false\n+\n+\n export default {\n \tname: 'CollectionListItem',\n \tcomponents: {",
      "code_diff":"@@ -60,6 +60,9 @@ import Action from 'nextcloud-vue\/dist\/Components\/Action'\n import Avatar from 'nextcloud-vue\/dist\/Components\/Avatar'\n import Tooltip from 'nextcloud-vue\/dist\/Directives\/Tooltip'\n \n+Tooltip.options.defaultHtml = false\n+\n+\n export default {\n \tname: 'CollectionListItem',\n \tcomponents: {"
    },
    {
      "index":32,
      "vuln_id":"GHSA-xw79-hhv6-578c",
      "cwe_id":"{'CWE-79'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/zeit\/serve-handler\/commit\/65b4d4183a31a8076c78c40118acb0ca1b64f620'}",
      "dataset":"osv",
      "summary":"Cross-Site Scripting in serve Versions of `serve` prior to 10.0.2 are vulnerable to Cross-Site Scripting (XSS). The package does not encode output, allowing attackers to execute arbitrary JavaScript in the victim's browser if user-supplied input is rendered.\n\n\n## Recommendation\n\nUpgrade to version 10.0.2 or later.",
      "published_date":"2020-09-11",
      "chain_len":1,
      "project":"https:\/\/github.com\/zeit\/serve-handler",
      "commit_href":"https:\/\/github.com\/zeit\/serve-handler\/commit\/65b4d4183a31a8076c78c40118acb0ca1b64f620",
      "commit_sha":"65b4d4183a31a8076c78c40118acb0ca1b64f620",
      "patch":"SINGLE",
      "chain_ord":"['65b4d4183a31a8076c78c40118acb0ca1b64f620']",
      "before_first_fix_commit":"{'2b3be81a46e09fc5f8bc2c69a5311d439dac74af'}",
      "last_fix_commit":"65b4d4183a31a8076c78c40118acb0ca1b64f620",
      "chain_ord_pos":1.0,
      "commit_datetime":"09\/24\/2018, 17:05:10",
      "message":"Interpolate template variables correctly (#64)",
      "author":"Leo Lamprecht",
      "comments":null,
      "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
      "files":"{'src\/directory.jst': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/vercel\/serve-handler\/raw\/65b4d4183a31a8076c78c40118acb0ca1b64f620\/src%2Fdirectory.jst', 'patch': '@@ -4,7 +4,7 @@\\n     <meta charset=\"utf-8\">\\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n \\n-    <title>Files within {{=it.directory}}<\/title>\\n+    <title>Files within {{!it.directory}}<\/title>\\n \\n \\t<style>\\n \\t\\tbody {\\n@@ -187,7 +187,7 @@\\n           <i>Index of&nbsp;<\/i>\\n \\n           {{~it.paths :value:index}}\\n-            <a href=\"\/{{=value.url}}\">{{=value.name}}<\/a>\\n+            <a href=\"\/{{!value.url}}\">{{!value.name}}<\/a>\\n           {{~}}\\n         <\/h1>\\n \\n@@ -197,9 +197,9 @@\\n       <ul id=\"files\">\\n         {{~it.files :value:index}}\\n           <li>\\n-            <a href=\"{{=value.relative}}\" title=\"{{=value.title}}\" class=\"{{=value.ext}}\">{{=value.base}}<\/a>\\n+            <a href=\"{{!value.relative}}\" title=\"{{!value.title}}\" class=\"{{!value.ext}}\">{{!value.base}}<\/a>\\n \\t\\t\\t{{? value.size}}\\n-\\t\\t\\t\\t<i>{{=value.size}}<\/i>\\n+\\t\\t\\t\\t<i>{{!value.size}}<\/i>\\n \\t\\t\\t{{?}}\\n           <\/li>\\n         {{~}}'}}",
      "message_norm":"interpolate template variables correctly (#64)",
      "language":"en",
      "entities":"[('#64', 'ISSUE', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/directory.jst'])",
      "num_files":1.0,
      "patch_content":"From 65b4d4183a31a8076c78c40118acb0ca1b64f620 Mon Sep 17 00:00:00 2001\nFrom: Leo Lamprecht <mindrun@icloud.com>\nDate: Mon, 24 Sep 2018 19:05:10 +0200\nSubject: [PATCH] Interpolate template variables correctly (#64)\n\n---\n src\/directory.jst | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/src\/directory.jst b\/src\/directory.jst\nindex 31c25ec..aa3021a 100644\n--- a\/src\/directory.jst\n+++ b\/src\/directory.jst\n@@ -4,7 +4,7 @@\n     <meta charset=\"utf-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n \n-    <title>Files within {{=it.directory}}<\/title>\n+    <title>Files within {{!it.directory}}<\/title>\n \n \t<style>\n \t\tbody {\n@@ -187,7 +187,7 @@\n           <i>Index of&nbsp;<\/i>\n \n           {{~it.paths :value:index}}\n-            <a href=\"\/{{=value.url}}\">{{=value.name}}<\/a>\n+            <a href=\"\/{{!value.url}}\">{{!value.name}}<\/a>\n           {{~}}\n         <\/h1>\n \n@@ -197,9 +197,9 @@\n       <ul id=\"files\">\n         {{~it.files :value:index}}\n           <li>\n-            <a href=\"{{=value.relative}}\" title=\"{{=value.title}}\" class=\"{{=value.ext}}\">{{=value.base}}<\/a>\n+            <a href=\"{{!value.relative}}\" title=\"{{!value.title}}\" class=\"{{!value.ext}}\">{{!value.base}}<\/a>\n \t\t\t{{? value.size}}\n-\t\t\t\t<i>{{=value.size}}<\/i>\n+\t\t\t\t<i>{{!value.size}}<\/i>\n \t\t\t{{?}}\n           <\/li>\n         {{~}}",
      "code_diff":"@@ -4,7 +4,7 @@\n     <meta charset=\"utf-8\">\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n \n-    <title>Files within {{=it.directory}}<\/title>\n+    <title>Files within {{!it.directory}}<\/title>\n \n \t<style>\n \t\tbody {\n@@ -187,7 +187,7 @@\n           <i>Index of&nbsp;<\/i>\n \n           {{~it.paths :value:index}}\n-            <a href=\"\/{{=value.url}}\">{{=value.name}}<\/a>\n+            <a href=\"\/{{!value.url}}\">{{!value.name}}<\/a>\n           {{~}}\n         <\/h1>\n \n@@ -197,9 +197,9 @@\n       <ul id=\"files\">\n         {{~it.files :value:index}}\n           <li>\n-            <a href=\"{{=value.relative}}\" title=\"{{=value.title}}\" class=\"{{=value.ext}}\">{{=value.base}}<\/a>\n+            <a href=\"{{!value.relative}}\" title=\"{{!value.title}}\" class=\"{{!value.ext}}\">{{!value.base}}<\/a>\n \t\t\t{{? value.size}}\n-\t\t\t\t<i>{{=value.size}}<\/i>\n+\t\t\t\t<i>{{!value.size}}<\/i>\n \t\t\t{{?}}\n           <\/li>\n         {{~}}"
    },
    {
      "index":33,
      "vuln_id":"GHSA-5pg2-qg87-vmj7",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/9ebbb4dd35da74025ab6965f722829a7f8f86566'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in microweber Cross-site Scripting (XSS) - Stored in GitHub repository microweber\/microweber prior to 1.2.19.",
      "published_date":"2022-07-02",
      "chain_len":1,
      "project":"https:\/\/github.com\/microweber\/microweber",
      "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/9ebbb4dd35da74025ab6965f722829a7f8f86566",
      "commit_sha":"9ebbb4dd35da74025ab6965f722829a7f8f86566",
      "patch":"SINGLE",
      "chain_ord":"['9ebbb4dd35da74025ab6965f722829a7f8f86566']",
      "before_first_fix_commit":"{'c2991b3a44896320a834a4b611257db587129645'}",
      "last_fix_commit":"9ebbb4dd35da74025ab6965f722829a7f8f86566",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/01\/2022, 08:07:47",
      "message":"update",
      "author":"Peter Ivanov",
      "comments":null,
      "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
      "files":"{'src\/MicroweberPackages\/App\/functions\/plupload.php': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/9ebbb4dd35da74025ab6965f722829a7f8f86566\/src%2FMicroweberPackages%2FApp%2Ffunctions%2Fplupload.php', 'patch': \"@@ -336,9 +336,12 @@\\n \/\/ Make sure the fileName is unique but only if chunking is disabled\\n if ($chunks < 2 && file_exists($targetDir . DIRECTORY_SEPARATOR . $fileName)) {\\n     $ext = strrpos($fileName, '.');\\n+\\n     $fileName_a = substr($fileName, 0, $ext);\\n     $fileName_b = substr($fileName, $ext);\\n \\n+    $fileName_b = strtolower($fileName_b);\\n+\\n     $count = 1;\\n     while (file_exists($targetDir . DIRECTORY_SEPARATOR . $fileName_a . '_' . $count . $fileName_b)) {\\n         ++$count;\\n@@ -500,7 +503,7 @@\\n \\n     if (is_file($filePath) and !$chunks || $chunk == $chunks - 1) {\\n         $ext = get_file_extension($filePath);\\n-\\n+        $ext = strtolower($ext);\\n         if (function_exists('finfo_open') and function_exists('finfo_file')) {\\n             $finfo = finfo_open(FILEINFO_MIME_TYPE); \/\/ return mime type ala mimetype extension\\n             $mime = @finfo_file($finfo, $filePath);\"}}",
      "message_norm":"update",
      "language":"ro",
      "entities":"[('update', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/MicroweberPackages\/App\/functions\/plupload.php'])",
      "num_files":1.0,
      "patch_content":"From 9ebbb4dd35da74025ab6965f722829a7f8f86566 Mon Sep 17 00:00:00 2001\nFrom: Peter Ivanov <peter@microweber.com>\nDate: Fri, 1 Jul 2022 11:07:47 +0300\nSubject: [PATCH] update\n\n---\n src\/MicroweberPackages\/App\/functions\/plupload.php | 5 ++++-\n 1 file changed, 4 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/MicroweberPackages\/App\/functions\/plupload.php b\/src\/MicroweberPackages\/App\/functions\/plupload.php\nindex 3b6e31707cb..244980968ce 100644\n--- a\/src\/MicroweberPackages\/App\/functions\/plupload.php\n+++ b\/src\/MicroweberPackages\/App\/functions\/plupload.php\n@@ -336,9 +336,12 @@\n \/\/ Make sure the fileName is unique but only if chunking is disabled\n if ($chunks < 2 && file_exists($targetDir . DIRECTORY_SEPARATOR . $fileName)) {\n     $ext = strrpos($fileName, '.');\n+\n     $fileName_a = substr($fileName, 0, $ext);\n     $fileName_b = substr($fileName, $ext);\n \n+    $fileName_b = strtolower($fileName_b);\n+\n     $count = 1;\n     while (file_exists($targetDir . DIRECTORY_SEPARATOR . $fileName_a . '_' . $count . $fileName_b)) {\n         ++$count;\n@@ -500,7 +503,7 @@\n \n     if (is_file($filePath) and !$chunks || $chunk == $chunks - 1) {\n         $ext = get_file_extension($filePath);\n-\n+        $ext = strtolower($ext);\n         if (function_exists('finfo_open') and function_exists('finfo_file')) {\n             $finfo = finfo_open(FILEINFO_MIME_TYPE); \/\/ return mime type ala mimetype extension\n             $mime = @finfo_file($finfo, $filePath);",
      "code_diff":"@@ -336,9 +336,12 @@\n \/\/ Make sure the fileName is unique but only if chunking is disabled\n if ($chunks < 2 && file_exists($targetDir . DIRECTORY_SEPARATOR . $fileName)) {\n     $ext = strrpos($fileName, '.');\n+\n     $fileName_a = substr($fileName, 0, $ext);\n     $fileName_b = substr($fileName, $ext);\n \n+    $fileName_b = strtolower($fileName_b);\n+\n     $count = 1;\n     while (file_exists($targetDir . DIRECTORY_SEPARATOR . $fileName_a . '_' . $count . $fileName_b)) {\n         ++$count;\n@@ -500,7 +503,7 @@\n \n     if (is_file($filePath) and !$chunks || $chunk == $chunks - 1) {\n         $ext = get_file_extension($filePath);\n-\n+        $ext = strtolower($ext);\n         if (function_exists('finfo_open') and function_exists('finfo_file')) {\n             $finfo = finfo_open(FILEINFO_MIME_TYPE); \/\/ return mime type ala mimetype extension\n             $mime = @finfo_file($finfo, $filePath);"
    },
    {
      "index":34,
      "vuln_id":"GHSA-5vr6-hm68-5j9p",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/librenms\/librenms\/pull\/13554\/commits\/4f231a0f49b6c953d506913364ffd7fb3a660630'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in LibreNMS LibreNMS 21.11.0 is affected by is affected by a Cross Site Scripting (XSS) vulnerability in includes\/html\/forms\/poller-groups.inc.php.",
      "published_date":"2021-12-03",
      "chain_len":1,
      "project":"https:\/\/github.com\/librenms\/librenms",
      "commit_href":"https:\/\/github.com\/librenms\/librenms\/pull\/13554\/commits\/4f231a0f49b6c953d506913364ffd7fb3a660630",
      "commit_sha":"4f231a0f49b6c953d506913364ffd7fb3a660630",
      "patch":"SINGLE",
      "chain_ord":"['4f231a0f49b6c953d506913364ffd7fb3a660630']",
      "before_first_fix_commit":"{'fff7b45a7599f8f13a55250dc5f2b957f3394194'}",
      "last_fix_commit":"4f231a0f49b6c953d506913364ffd7fb3a660630",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/22\/2021, 22:31:45",
      "message":"fix XSS vulnerability in poller-groups.inc.php",
      "author":"AL-KASSAR",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'includes\/html\/forms\/poller-groups.inc.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/4f231a0f49b6c953d506913364ffd7fb3a660630\/includes%2Fhtml%2Fforms%2Fpoller-groups.inc.php', 'patch': '@@ -44,5 +44,5 @@\\n if (! empty($ok)) {\\n     exit(\"$ok\");\\n } else {\\n-    exit(\"ERROR: $error\");\\n+    exit(\"ERROR: \".htmlspecialchars($error));;\\n }'}}",
      "message_norm":"fix xss vulnerability in poller-groups.inc.php",
      "language":"en",
      "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['includes\/html\/forms\/poller-groups.inc.php'])",
      "num_files":1.0,
      "patch_content":"From 4f231a0f49b6c953d506913364ffd7fb3a660630 Mon Sep 17 00:00:00 2001\nFrom: AL-KASSAR <feras.al-kassar@sap.com>\nDate: Mon, 22 Nov 2021 23:31:45 +0100\nSubject: [PATCH] fix XSS vulnerability in poller-groups.inc.php\n\n---\n includes\/html\/forms\/poller-groups.inc.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/includes\/html\/forms\/poller-groups.inc.php b\/includes\/html\/forms\/poller-groups.inc.php\nindex f7bec45bef2f..82b12b239a80 100644\n--- a\/includes\/html\/forms\/poller-groups.inc.php\n+++ b\/includes\/html\/forms\/poller-groups.inc.php\n@@ -44,5 +44,5 @@\n if (! empty($ok)) {\n     exit(\"$ok\");\n } else {\n-    exit(\"ERROR: $error\");\n+    exit(\"ERROR: \".htmlspecialchars($error));;\n }",
      "code_diff":"@@ -44,5 +44,5 @@\n if (! empty($ok)) {\n     exit(\"$ok\");\n } else {\n-    exit(\"ERROR: $error\");\n+    exit(\"ERROR: \".htmlspecialchars($error));;\n }"
    },
    {
      "index":35,
      "vuln_id":"GHSA-5q5w-mqp6-g2gh",
      "cwe_id":"{'CWE-434', 'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/jsdecena\/laracom\/commit\/256026193ce994dc4c1365e02f414d8a0cd77ae8'}",
      "dataset":"osv",
      "summary":"Unrestricted Upload of File with Dangerous Type in jsdecena\/laracom jsdecena\/laracom prior to version 2.0.9 is vulnerable to Unrestricted Upload of File with Dangerous Type.",
      "published_date":"2022-02-06",
      "chain_len":1,
      "project":"https:\/\/github.com\/jsdecena\/laracom",
      "commit_href":"https:\/\/github.com\/jsdecena\/laracom\/commit\/256026193ce994dc4c1365e02f414d8a0cd77ae8",
      "commit_sha":"256026193ce994dc4c1365e02f414d8a0cd77ae8",
      "patch":"SINGLE",
      "chain_ord":"['256026193ce994dc4c1365e02f414d8a0cd77ae8']",
      "before_first_fix_commit":"{'8ef50622cb9c696d79a7a6b37e9b43266da6545d'}",
      "last_fix_commit":"256026193ce994dc4c1365e02f414d8a0cd77ae8",
      "chain_ord_pos":1.0,
      "commit_datetime":"02\/01\/2022, 22:16:55",
      "message":"Fix vulnerability report from hunter.dev",
      "author":"Roland Jeffrey Decena",
      "comments":null,
      "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
      "files":"{'project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jsdecena\/laracom\/raw\/256026193ce994dc4c1365e02f414d8a0cd77ae8\/project%2Fapp%2FShop%2FProducts%2FRequests%2FUpdateProductRequest.php', 'patch': \"@@ -20,7 +20,9 @@ public function rules()\\n             'quantity' => ['required', 'integer', 'min:0'],\\n             'price' => ['required', 'numeric', 'min:0'],\\n             'sale_price' => ['nullable', 'numeric'],\\n-            'weight' => ['nullable', 'numeric', 'min:0']\\n+            'weight' => ['nullable', 'numeric', 'min:0'],\\n+            'image' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\\n+            'cover' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\\n         ];\\n     }\\n }\"}}",
      "message_norm":"fix vulnerability report from hunter.dev",
      "language":"en",
      "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php'])",
      "num_files":1.0,
      "patch_content":"From 256026193ce994dc4c1365e02f414d8a0cd77ae8 Mon Sep 17 00:00:00 2001\nFrom: Roland Jeffrey Decena <jeff.decena@publictrust.co.nz>\nDate: Wed, 2 Feb 2022 11:16:55 +1300\nSubject: [PATCH] Fix vulnerability report from hunter.dev\n\n---\n project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a\/project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php b\/project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php\nindex 2ef53f04c..15278341c 100644\n--- a\/project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php\n+++ b\/project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php\n@@ -20,7 +20,9 @@ public function rules()\n             'quantity' => ['required', 'integer', 'min:0'],\n             'price' => ['required', 'numeric', 'min:0'],\n             'sale_price' => ['nullable', 'numeric'],\n-            'weight' => ['nullable', 'numeric', 'min:0']\n+            'weight' => ['nullable', 'numeric', 'min:0'],\n+            'image' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\n+            'cover' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\n         ];\n     }\n }",
      "code_diff":"@@ -20,7 +20,9 @@ public function rules()\n             'quantity' => ['required', 'integer', 'min:0'],\n             'price' => ['required', 'numeric', 'min:0'],\n             'sale_price' => ['nullable', 'numeric'],\n-            'weight' => ['nullable', 'numeric', 'min:0']\n+            'weight' => ['nullable', 'numeric', 'min:0'],\n+            'image' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\n+            'cover' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\n         ];\n     }\n }"
    },
    {
      "index":36,
      "vuln_id":"GHSA-vpwq-6cp4-ffqc",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/ba45d19e1d77a7eea866dab30eff5da552694891'}",
      "dataset":"osv",
      "summary":"Stored Cross-site Scripting in ShowDoc ShowDoc prior to version 2.10.4 is vulnerable to stored cross-site scripting viva `axd` and `cshtml` file upload.",
      "published_date":"2022-03-16",
      "chain_len":1,
      "project":"https:\/\/github.com\/star7th\/showdoc",
      "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/ba45d19e1d77a7eea866dab30eff5da552694891",
      "commit_sha":"ba45d19e1d77a7eea866dab30eff5da552694891",
      "patch":"SINGLE",
      "chain_ord":"['ba45d19e1d77a7eea866dab30eff5da552694891']",
      "before_first_fix_commit":"{'4e6b321c0d63ee7c4480409c7a68ae116096c4bc'}",
      "last_fix_commit":"ba45d19e1d77a7eea866dab30eff5da552694891",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/14\/2022, 02:52:48",
      "message":"bug",
      "author":"star7th",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
      "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/ba45d19e1d77a7eea866dab30eff5da552694891\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -309,6 +309,8 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".aspx\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xsd\")\\n \\t\\t\\t|| $isDangerStr($filename , \".asa\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".cshtml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".axd\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
      "message_norm":"bug",
      "language":"id",
      "entities":"[('bug', 'FLAW', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
      "num_files":1.0,
      "patch_content":"From ba45d19e1d77a7eea866dab30eff5da552694891 Mon Sep 17 00:00:00 2001\nFrom: star7th <xing7th@gmail.com>\nDate: Mon, 14 Mar 2022 10:52:48 +0800\nSubject: [PATCH] bug\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex 3a41ecd99..b518b9b57 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -309,6 +309,8 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".aspx\")\n \t\t\t|| $isDangerStr($filename , \".xsd\")\n \t\t\t|| $isDangerStr($filename , \".asa\")\n+\t\t\t|| $isDangerStr($filename , \".cshtml\")\n+\t\t\t|| $isDangerStr($filename , \".axd\")\n \t\t) {\n \t\t\treturn true;\n \t\t}",
      "code_diff":"@@ -309,6 +309,8 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".aspx\")\n \t\t\t|| $isDangerStr($filename , \".xsd\")\n \t\t\t|| $isDangerStr($filename , \".asa\")\n+\t\t\t|| $isDangerStr($filename , \".cshtml\")\n+\t\t\t|| $isDangerStr($filename , \".axd\")\n \t\t) {\n \t\t\treturn true;\n \t\t}"
    },
    {
      "index":37,
      "vuln_id":"GHSA-cwv3-863g-39vx",
      "cwe_id":"{'CWE-835', 'CWE-674'}",
      "score":7.3,
      "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c6173f5fe66cdbab74f4f869311fe6aae2ba35f4', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743'}",
      "dataset":"osv",
      "summary":"Stack overflow due to looping TFLite subgraph ### Impact\nTFlite graphs must not have loops between nodes. However, this condition was not checked and an attacker could craft models that would result in infinite loop during evaluation. In certain cases, the infinite loop would be replaced by stack overflow due to too many recursive calls.\n\nFor example, the [`While` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/106d8f4fb89335a2c52d7c895b7a7485465ca8d9\/tensorflow\/lite\/kernels\/while.cc) could be tricked into a scneario where both the body and the loop subgraphs are the same. Evaluating one of the subgraphs means calling the `Eval` function for the other and this quickly exhaust all stack space.\n    \n### Patches \nWe have patched the issue in GitHub commit [9c1dc920d8ffb4893d6c9d27d1f039607b326743](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743) (for the `While` operator) and in GitHub commit [c6173f5fe66cdbab74f4f869311fe6aae2ba35f4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c6173f5fe66cdbab74f4f869311fe6aae2ba35f4) (in general).\n    \nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date":"2021-05-21",
      "chain_len":2,
      "project":"https:\/\/github.com\/tensorflow\/tensorflow",
      "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743",
      "commit_sha":"9c1dc920d8ffb4893d6c9d27d1f039607b326743",
      "patch":"MULTI",
      "chain_ord":"['9c1dc920d8ffb4893d6c9d27d1f039607b326743', 'c6173f5fe66cdbab74f4f869311fe6aae2ba35f4']",
      "before_first_fix_commit":"{'46b80bd2a8943d5976dc83bd5c0322c0023255a7'}",
      "last_fix_commit":"c6173f5fe66cdbab74f4f869311fe6aae2ba35f4",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/28\/2021, 00:47:46",
      "message":"Prevent infinite loop\/stack overflow in TFLite `while` op.\n\nPiperOrigin-RevId: 370800333\nChange-Id: I6a2e4ff849da339545c449db2af7e11ce6ff02c3",
      "author":"Mihai Maruseac",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
      "files":"{'tensorflow\/lite\/kernels\/while.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9c1dc920d8ffb4893d6c9d27d1f039607b326743\/tensorflow%2Flite%2Fkernels%2Fwhile.cc', 'patch': '@@ -138,6 +138,8 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   auto* subgraphs = this_subgraph->GetSubgraphs();\\n   TF_LITE_ENSURE(context, op_data->cond_subgraph_index < subgraphs->size());\\n   TF_LITE_ENSURE(context, op_data->body_subgraph_index < subgraphs->size());\\n+  TF_LITE_ENSURE(context,\\n+                 op_data->cond_subgraph_index != op_data->body_subgraph_index);\\n \\n   Subgraph* cond_subgraph = (*subgraphs)[op_data->cond_subgraph_index].get();\\n   Subgraph* body_subgraph = (*subgraphs)[op_data->body_subgraph_index].get();'}}",
      "message_norm":"prevent infinite loop\/stack overflow in tflite `while` op.\n\npiperorigin-revid: 370800333\nchange-id: i6a2e4ff849da339545c449db2af7e11ce6ff02c3",
      "language":"en",
      "entities":"[('prevent', 'ACTION', ''), ('infinite loop', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('370800333', 'SHA', 'generic_sha')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['tensorflow\/lite\/kernels\/while.cc'])",
      "num_files":1.0,
      "patch_content":"From 9c1dc920d8ffb4893d6c9d27d1f039607b326743 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 27 Apr 2021 17:47:46 -0700\nSubject: [PATCH] Prevent infinite loop\/stack overflow in TFLite `while` op.\n\nPiperOrigin-RevId: 370800333\nChange-Id: I6a2e4ff849da339545c449db2af7e11ce6ff02c3\n---\n tensorflow\/lite\/kernels\/while.cc | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/while.cc b\/tensorflow\/lite\/kernels\/while.cc\nindex e05959fe2a6825..74ab81c2a95993 100644\n--- a\/tensorflow\/lite\/kernels\/while.cc\n+++ b\/tensorflow\/lite\/kernels\/while.cc\n@@ -138,6 +138,8 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   auto* subgraphs = this_subgraph->GetSubgraphs();\n   TF_LITE_ENSURE(context, op_data->cond_subgraph_index < subgraphs->size());\n   TF_LITE_ENSURE(context, op_data->body_subgraph_index < subgraphs->size());\n+  TF_LITE_ENSURE(context,\n+                 op_data->cond_subgraph_index != op_data->body_subgraph_index);\n \n   Subgraph* cond_subgraph = (*subgraphs)[op_data->cond_subgraph_index].get();\n   Subgraph* body_subgraph = (*subgraphs)[op_data->body_subgraph_index].get();",
      "code_diff":"@@ -138,6 +138,8 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n   auto* subgraphs = this_subgraph->GetSubgraphs();\n   TF_LITE_ENSURE(context, op_data->cond_subgraph_index < subgraphs->size());\n   TF_LITE_ENSURE(context, op_data->body_subgraph_index < subgraphs->size());\n+  TF_LITE_ENSURE(context,\n+                 op_data->cond_subgraph_index != op_data->body_subgraph_index);\n \n   Subgraph* cond_subgraph = (*subgraphs)[op_data->cond_subgraph_index].get();\n   Subgraph* body_subgraph = (*subgraphs)[op_data->body_subgraph_index].get();"
    },
    {
      "index":38,
      "vuln_id":"GHSA-p2vw-f87c-q597",
      "cwe_id":"{'CWE-863'}",
      "score":6.5,
      "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c'}",
      "dataset":"osv",
      "summary":"Improper Access Control in snipe\/snipe-it Improper Access Control in GitHub repository snipe\/snipe-it prior to 5.4.4.",
      "published_date":"2022-04-29",
      "chain_len":1,
      "project":"https:\/\/github.com\/snipe\/snipe-it",
      "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c",
      "commit_sha":"2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c",
      "patch":"SINGLE",
      "chain_ord":"['2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c']",
      "before_first_fix_commit":"{'126bb486b5146975f562d51b8f75dd2e30bee74d'}",
      "last_fix_commit":"2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/28\/2022, 14:45:37",
      "message":"Added access gate to the requested assets index\n\nSigned-off-by: snipe <snipe@snipe.net>",
      "author":"snipe",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
      "files":"{'app\/Http\/Controllers\/Assets\/AssetsController.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c\/app%2FHttp%2FControllers%2FAssets%2FAssetsController.php', 'patch': \"@@ -861,6 +861,7 @@ public function auditStore(Request $request, $id)\\n \\n     public function getRequestedIndex($user_id = null)\\n     {\\n+        $this->authorize('index', Asset::class);\\n         $requestedItems = CheckoutRequest::with('user', 'requestedItem')->whereNull('canceled_at')->with('user', 'requestedItem');\\n \\n         if ($user_id) {\"}}",
      "message_norm":"added access gate to the requested assets index\n\nsigned-off-by: snipe <snipe@snipe.net>",
      "language":"en",
      "entities":"[('added', 'ACTION', ''), ('snipe@snipe.net', 'EMAIL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['app\/Http\/Controllers\/Assets\/AssetsController.php'])",
      "num_files":1.0,
      "patch_content":"From 2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c Mon Sep 17 00:00:00 2001\nFrom: snipe <snipe@snipe.net>\nDate: Thu, 28 Apr 2022 15:45:37 +0100\nSubject: [PATCH] Added access gate to the requested assets index\n\nSigned-off-by: snipe <snipe@snipe.net>\n---\n app\/Http\/Controllers\/Assets\/AssetsController.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/app\/Http\/Controllers\/Assets\/AssetsController.php b\/app\/Http\/Controllers\/Assets\/AssetsController.php\nindex 069664a7f68c..d0f90f9fa8fa 100755\n--- a\/app\/Http\/Controllers\/Assets\/AssetsController.php\n+++ b\/app\/Http\/Controllers\/Assets\/AssetsController.php\n@@ -861,6 +861,7 @@ public function auditStore(Request $request, $id)\n \n     public function getRequestedIndex($user_id = null)\n     {\n+        $this->authorize('index', Asset::class);\n         $requestedItems = CheckoutRequest::with('user', 'requestedItem')->whereNull('canceled_at')->with('user', 'requestedItem');\n \n         if ($user_id) {",
      "code_diff":"@@ -861,6 +861,7 @@ public function auditStore(Request $request, $id)\n \n     public function getRequestedIndex($user_id = null)\n     {\n+        $this->authorize('index', Asset::class);\n         $requestedItems = CheckoutRequest::with('user', 'requestedItem')->whereNull('canceled_at')->with('user', 'requestedItem');\n \n         if ($user_id) {"
    },
    {
      "index":39,
      "vuln_id":"GHSA-j6p2-cx3w-6jcp",
      "cwe_id":"{'CWE-79'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/jashkenas\/backbone\/commit\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93'}",
      "dataset":"osv",
      "summary":"Cross-Site Scripting in backbone Affected versions of `backbone` are vulnerable to cross-site scripting when users are allowed to supply input to the `Model#Escape` function, and the output is then written to the DOM. \n\nThe vulnerability occurs as a result of the regular expression used to encode metacharacters failing to take HTML Entities such as `&#60;` into account.\n\n\n## Recommendation\n\nUpdate to version 0.5.0 or later.",
      "published_date":"2019-02-18",
      "chain_len":1,
      "project":"https:\/\/github.com\/jashkenas\/backbone",
      "commit_href":"https:\/\/github.com\/jashkenas\/backbone\/commit\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
      "commit_sha":"0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
      "patch":"SINGLE",
      "chain_ord":"['0cdc525961d3fa98e810ffae6bcc8e3838e36d93']",
      "before_first_fix_commit":"{'7216d993502da2e312fc53f4e8edc8b534c25042'}",
      "last_fix_commit":"0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/01\/2011, 21:12:24",
      "message":"Fixed escapeHTML function\nto skip not only &***;, but also &#***; and &x***;",
      "author":"Dmitry Baranovskiy",
      "comments":"{'com_1': {'author': 'alanhogan', 'datetime': '03\/06\/2011, 02:31:15', 'body': 'What are your thoughts on escaping single quotes?\\n\\nUsing single quotes around attribute values is less common than double quotes, but is certainly done:\\n\\n```\\n<p id=\\'foo\\'>\u2026<\/p>\\n```\\n\\nThis can lead to XSS just as unescaped double-quotes can:\\n\\n```\\nvar attack = \" \\' onmouseover=\\'alert(1);\\' foo=\\' \";\\nvar html = \"<p data-user-input=\\'\"+escapeHTML(attack)+\"\\'>Foo<\/p>\";\\ndocument.write(html);\\n```\\n\\nIMO, single quotes really ought to be escaped, as well.'}, 'com_2': {'author': 'alanhogan', 'datetime': '03\/06\/2011, 02:37:31', 'body': 'Demo of attack on jsfiddle: http:\/\/jsfiddle.net\/wEzNJ\/'}}",
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'backbone.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jashkenas\/backbone\/raw\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93\/backbone.js', 'patch': '@@ -1079,7 +1079,7 @@\\n \\n   \/\/ Helper function to escape a string for HTML rendering.\\n   var escapeHTML = function(string) {\\n-    return string.replace(\/&(?!\\\\w+;)\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n+    return string.replace(\/&(?!\\\\w+;|#\\\\d+;|#x[\\\\da-f]+;)\/gi, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n   };\\n \\n }).call(this);'}}",
      "message_norm":"fixed escapehtml function\nto skip not only &***;, but also &#***; and &x***;",
      "language":"en",
      "entities":"[('fixed', 'ACTION', ''), ('escapehtml', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['backbone.js'])",
      "num_files":1.0,
      "patch_content":"From 0cdc525961d3fa98e810ffae6bcc8e3838e36d93 Mon Sep 17 00:00:00 2001\nFrom: Dmitry Baranovskiy <Dmitry@Baranovskiy.com>\nDate: Wed, 2 Mar 2011 08:12:24 +1100\nSubject: [PATCH] Fixed escapeHTML function to skip not only &***;, but also\n &#***; and &x***;\n\n---\n backbone.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/backbone.js b\/backbone.js\nindex 98ba0ddc0..47e85aeb8 100644\n--- a\/backbone.js\n+++ b\/backbone.js\n@@ -1079,7 +1079,7 @@\n \n   \/\/ Helper function to escape a string for HTML rendering.\n   var escapeHTML = function(string) {\n-    return string.replace(\/&(?!\\w+;)\/g, '&amp;').replace(\/<\/g, '&lt;').replace(\/>\/g, '&gt;').replace(\/\"\/g, '&quot;');\n+    return string.replace(\/&(?!\\w+;|#\\d+;|#x[\\da-f]+;)\/gi, '&amp;').replace(\/<\/g, '&lt;').replace(\/>\/g, '&gt;').replace(\/\"\/g, '&quot;');\n   };\n \n }).call(this);",
      "code_diff":"@@ -1079,7 +1079,7 @@\n \n   \/\/ Helper function to escape a string for HTML rendering.\n   var escapeHTML = function(string) {\n-    return string.replace(\/&(?!\\w+;)\/g, '&amp;').replace(\/<\/g, '&lt;').replace(\/>\/g, '&gt;').replace(\/\"\/g, '&quot;');\n+    return string.replace(\/&(?!\\w+;|#\\d+;|#x[\\da-f]+;)\/gi, '&amp;').replace(\/<\/g, '&lt;').replace(\/>\/g, '&gt;').replace(\/\"\/g, '&quot;');\n   };\n \n }).call(this);"
    },
    {
      "index":40,
      "vuln_id":"GHSA-h4mx-xv96-2jgm",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/TYPO3\/typo3\/commit\/da611775f92102d7602713003f4c79606c8a445d'}",
      "dataset":"osv",
      "summary":"Cross-Site Scripting in TYPO3's Frontend Login Mailer > ### Meta\n> * CVSS: `CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N\/E:F\/RL:O\/RC:C` (4.9)\n\n### Problem\nUser submitted content was used without being properly encoded in HTML emails sent to users. The actually affected components were mail clients used to view those messages.\n\n### Solution\nUpdate to TYPO3 versions 9.5.35 ELTS, 10.4.29, 11.5.11 that fix the problem described above.\n\n### Credits\nThanks to Christian Seifert who reported this issue and to TYPO3 framework merger Andreas Fernandez who fixed the issue.\n\n### References\n* [TYPO3-CORE-SA-2022-004](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2022-004)",
      "published_date":"2022-06-17",
      "chain_len":1,
      "project":"https:\/\/github.com\/TYPO3\/typo3",
      "commit_href":"https:\/\/github.com\/TYPO3\/typo3\/commit\/da611775f92102d7602713003f4c79606c8a445d",
      "commit_sha":"da611775f92102d7602713003f4c79606c8a445d",
      "patch":"SINGLE",
      "chain_ord":"['da611775f92102d7602713003f4c79606c8a445d']",
      "before_first_fix_commit":"{'6f2554dc4ea0b670fd5599c54fd788d4db96c4a0'}",
      "last_fix_commit":"da611775f92102d7602713003f4c79606c8a445d",
      "chain_ord_pos":1.0,
      "commit_datetime":"06\/14\/2022, 07:18:04",
      "message":"[SECURITY] Avoid HTML injection in password recovery mail\n\nThe `receiverName` variable used in the password recovery mail of the\nExtbase felogin plugin was susceptible to HTML injection due to\nmissing sanitization. The variable is now passed thru the\n`f:format.htmlspecialchars` ViewHelper.\n\nResolves: #96559\nReleases: main, 11.5, 10.4\nChange-Id: I60e23c161f7f2fcc87b8870345b10a4c31d7b8db\nSecurity-Bulletin: TYPO3-CORE-SA-2022-004\nSecurity-References: CVE-2022-31049\nReviewed-on: https:\/\/review.typo3.org\/c\/Packages\/TYPO3.CMS\/+\/74904\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
      "author":"Andreas Fernandez",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'typo3\/sysext\/felogin\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TYPO3\/typo3\/raw\/da611775f92102d7602713003f4c79606c8a445d\/typo3%2Fsysext%2Ffelogin%2FResources%2FPrivate%2FEmail%2FTemplates%2FPasswordRecovery.html', 'patch': '@@ -9,7 +9,7 @@\\n         {f:translate(\\n         key: \\'forgot_validate_reset_password_html\\',\\n         extensionName: \\'felogin\\',\\n-        arguments: \\'{ 0: receiverName, 1: recoveryLink, 2: validUntil }\\'\\n+        arguments: \\'{ 0: \"{receiverName -> f:format.htmlspecialchars()}\", 1: recoveryLink, 2: validUntil }\\'\\n         ) -> f:format.html()}\\n     <\/f:spaceless>\\n <\/f:section>'}}",
      "message_norm":"[security] avoid html injection in password recovery mail\n\nthe `receivername` variable used in the password recovery mail of the\nextbase felogin plugin was susceptible to html injection due to\nmissing sanitization. the variable is now passed thru the\n`f:format.htmlspecialchars` viewhelper.\n\nresolves: #96559\nreleases: main, 11.5, 10.4\nchange-id: i60e23c161f7f2fcc87b8870345b10a4c31d7b8db\nsecurity-bulletin: typo3-core-sa-2022-004\nsecurity-references: cve-2022-31049\nreviewed-on: https:\/\/review.typo3.org\/c\/packages\/typo3.cms\/+\/74904\ntested-by: oliver hader <oliver.hader@typo3.org>\nreviewed-by: oliver hader <oliver.hader@typo3.org>",
      "language":"en",
      "entities":"[('security', 'SECWORD', ''), ('injection', 'SECWORD', ''), ('password', 'SECWORD', ''), ('password', 'SECWORD', ''), ('injection', 'SECWORD', ''), ('sanitization', 'SECWORD', ''), ('format.htmlspecialchars', 'SECWORD', ''), ('#96559', 'ISSUE', ''), ('security', 'SECWORD', ''), ('security', 'SECWORD', ''), ('cve-2022-31049', 'VULNID', 'CVE'), ('https:\/\/review.typo3.org\/c\/packages\/typo3.cms\/+\/74904', 'URL', ''), ('oliver.hader@typo3.org', 'EMAIL', ''), ('oliver.hader@typo3.org', 'EMAIL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['typo3\/sysext\/felogin\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html'])",
      "num_files":1.0,
      "patch_content":"From da611775f92102d7602713003f4c79606c8a445d Mon Sep 17 00:00:00 2001\nFrom: Andreas Fernandez <a.fernandez@scripting-base.de>\nDate: Tue, 14 Jun 2022 09:18:04 +0200\nSubject: [PATCH] [SECURITY] Avoid HTML injection in password recovery mail\n\nThe `receiverName` variable used in the password recovery mail of the\nExtbase felogin plugin was susceptible to HTML injection due to\nmissing sanitization. The variable is now passed thru the\n`f:format.htmlspecialchars` ViewHelper.\n\nResolves: #96559\nReleases: main, 11.5, 10.4\nChange-Id: I60e23c161f7f2fcc87b8870345b10a4c31d7b8db\nSecurity-Bulletin: TYPO3-CORE-SA-2022-004\nSecurity-References: CVE-2022-31049\nReviewed-on: https:\/\/review.typo3.org\/c\/Packages\/TYPO3.CMS\/+\/74904\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>\n---\n ...\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html     | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/typo3\/sysext\/felogin\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html b\/typo3\/sysext\/felogin\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html\nindex b6eb95d7f04c..9ce5344654b4 100644\n--- a\/typo3\/sysext\/felogin\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html\n+++ b\/typo3\/sysext\/felogin\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html\n@@ -9,7 +9,7 @@\n         {f:translate(\n         key: 'forgot_validate_reset_password_html',\n         extensionName: 'felogin',\n-        arguments: '{ 0: receiverName, 1: recoveryLink, 2: validUntil }'\n+        arguments: '{ 0: \"{receiverName -> f:format.htmlspecialchars()}\", 1: recoveryLink, 2: validUntil }'\n         ) -> f:format.html()}\n     <\/f:spaceless>\n <\/f:section>",
      "code_diff":"@@ -9,7 +9,7 @@\n         {f:translate(\n         key: 'forgot_validate_reset_password_html',\n         extensionName: 'felogin',\n-        arguments: '{ 0: receiverName, 1: recoveryLink, 2: validUntil }'\n+        arguments: '{ 0: \"{receiverName -> f:format.htmlspecialchars()}\", 1: recoveryLink, 2: validUntil }'\n         ) -> f:format.html()}\n     <\/f:spaceless>\n <\/f:section>"
    },
    {
      "index":41,
      "vuln_id":"GHSA-wx69-rvg3-x7fc",
      "cwe_id":"{'CWE-79'}",
      "score":9.0,
      "chain":"{'https:\/\/github.com\/NodeBB\/NodeBB\/commit\/1783f918bc19568f421473824461ff2ed7755e4c'}",
      "dataset":"osv",
      "summary":"XSS via prototype pollution in NodeBB  ### Impact\nA prototype pollution vulnerability in the uploader module allowed a malicious user to inject arbitrary data (i.e. javascript) into the DOM, theoretically allowing for an account takeover when used in conjunction with a path traversal vulnerability disclosed at the same time as this report.\n\n### Patches\nThe vulnerability has been patched as of v1.18.5.\n\n### Workarounds\nCherry-pick commit hash 1783f918bc19568f421473824461ff2ed7755e4c to receive this patch in lieu of a full upgrade.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@nodebb.org](mailto:security@nodebb.org)",
      "published_date":"2021-11-30",
      "chain_len":1,
      "project":"https:\/\/github.com\/NodeBB\/NodeBB",
      "commit_href":"https:\/\/github.com\/NodeBB\/NodeBB\/commit\/1783f918bc19568f421473824461ff2ed7755e4c",
      "commit_sha":"1783f918bc19568f421473824461ff2ed7755e4c",
      "patch":"SINGLE",
      "chain_ord":"['1783f918bc19568f421473824461ff2ed7755e4c']",
      "before_first_fix_commit":"{'c8b2fc46dc698db687379106b3f01c71b80f495f'}",
      "last_fix_commit":"1783f918bc19568f421473824461ff2ed7755e4c",
      "chain_ord_pos":1.0,
      "commit_datetime":"10\/25\/2021, 17:17:33",
      "message":"fix: guard against prototype pollution",
      "author":"Bar\u0131\u015f Soner U\u015fakl\u0131",
      "comments":null,
      "stats":"{'additions': 3, 'deletions': 2, 'total': 5}",
      "files":"{'src\/socket.io\/uploads.js': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NodeBB\/NodeBB\/raw\/1783f918bc19568f421473824461ff2ed7755e4c\/src%2Fsocket.io%2Fuploads.js', 'patch': \"@@ -15,11 +15,12 @@ uploads.upload = async function (socket, data) {\\n \\t\\t'user.updateCover': socketUser.updateCover,\\n \\t\\t'groups.cover.update': socketGroup.cover.update,\\n \\t};\\n-\\tif (!socket.uid || !data || !data.chunk || !data.params || !data.params.method || !methodToFunc[data.params.method]) {\\n+\\tif (!socket.uid || !data || !data.chunk ||\\n+\\t\\t!data.params || !data.params.method || !methodToFunc.hasOwnProperty(data.params.method)) {\\n \\t\\tthrow new Error('[[error:invalid-data]]');\\n \\t}\\n \\n-\\tinProgress[socket.id] = inProgress[socket.id] || {};\\n+\\tinProgress[socket.id] = inProgress[socket.id] || Object.create(null);\\n \\tconst socketUploads = inProgress[socket.id];\\n \\tconst { method } = data.params;\"}}",
      "message_norm":"fix: guard against prototype pollution",
      "language":"en",
      "entities":"[('prototype pollution', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/socket.io\/uploads.js'])",
      "num_files":1.0,
      "patch_content":"From 1783f918bc19568f421473824461ff2ed7755e4c Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Bar=C4=B1=C5=9F=20Soner=20U=C5=9Fakl=C4=B1?=\n <barisusakli@gmail.com>\nDate: Mon, 25 Oct 2021 13:17:33 -0400\nSubject: [PATCH] fix: guard against prototype pollution\n\n---\n src\/socket.io\/uploads.js | 5 +++--\n 1 file changed, 3 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/socket.io\/uploads.js b\/src\/socket.io\/uploads.js\nindex c3fd025e0da5..66b7266b0124 100644\n--- a\/src\/socket.io\/uploads.js\n+++ b\/src\/socket.io\/uploads.js\n@@ -15,11 +15,12 @@ uploads.upload = async function (socket, data) {\n \t\t'user.updateCover': socketUser.updateCover,\n \t\t'groups.cover.update': socketGroup.cover.update,\n \t};\n-\tif (!socket.uid || !data || !data.chunk || !data.params || !data.params.method || !methodToFunc[data.params.method]) {\n+\tif (!socket.uid || !data || !data.chunk ||\n+\t\t!data.params || !data.params.method || !methodToFunc.hasOwnProperty(data.params.method)) {\n \t\tthrow new Error('[[error:invalid-data]]');\n \t}\n \n-\tinProgress[socket.id] = inProgress[socket.id] || {};\n+\tinProgress[socket.id] = inProgress[socket.id] || Object.create(null);\n \tconst socketUploads = inProgress[socket.id];\n \tconst { method } = data.params;",
      "code_diff":"@@ -15,11 +15,12 @@ uploads.upload = async function (socket, data) {\n \t\t'user.updateCover': socketUser.updateCover,\n \t\t'groups.cover.update': socketGroup.cover.update,\n \t};\n-\tif (!socket.uid || !data || !data.chunk || !data.params || !data.params.method || !methodToFunc[data.params.method]) {\n+\tif (!socket.uid || !data || !data.chunk ||\n+\t\t!data.params || !data.params.method || !methodToFunc.hasOwnProperty(data.params.method)) {\n \t\tthrow new Error('[[error:invalid-data]]');\n \t}\n \n-\tinProgress[socket.id] = inProgress[socket.id] || {};\n+\tinProgress[socket.id] = inProgress[socket.id] || Object.create(null);\n \tconst socketUploads = inProgress[socket.id];\n \tconst { method } = data.params;"
    },
    {
      "index":42,
      "vuln_id":"GHSA-95hx-62rh-gg96",
      "cwe_id":"{'CWE-79'}",
      "score":8.0,
      "chain":"{'https:\/\/github.com\/PrestaShop\/contactform\/commit\/ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09'}",
      "dataset":"osv",
      "summary":"Potential XSS injection In PrestaShop contactform ### Impact\nAn attacker is able to inject javascript while using the contact form. \n\n### Patches\nThe problem is fixed in v4.3.0\n\n### References\n[Cross-site Scripting (XSS) - Stored (CWE-79)](https:\/\/cwe.mitre.org\/data\/definitions\/79.html)",
      "published_date":"2020-09-15",
      "chain_len":1,
      "project":"https:\/\/github.com\/PrestaShop\/contactform",
      "commit_href":"https:\/\/github.com\/PrestaShop\/contactform\/commit\/ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09",
      "commit_sha":"ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09",
      "patch":"SINGLE",
      "chain_ord":"['ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09']",
      "before_first_fix_commit":"{'a883e56240357b4aaaf594ade573bb596e518078', 'aa3c77923734854bb7168f30db43544e42638202'}",
      "last_fix_commit":"ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09",
      "chain_ord_pos":1.0,
      "commit_datetime":"09\/15\/2020, 08:03:00",
      "message":"Merge pull request from GHSA-95hx-62rh-gg96\n\nDo not unescape form message data",
      "author":"GoT",
      "comments":null,
      "stats":"{'additions': 9, 'deletions': 8, 'total': 17}",
      "files":"{'contactform.php': {'additions': 9, 'deletions': 8, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/contactform\/raw\/ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09\/contactform.php', 'patch': \"@@ -317,7 +317,7 @@ public function getWidgetVariables($hookName = null, array $configuration = [])\\n             }\\n         }\\n         $this->contact['contacts'] = $this->getTemplateVarContact();\\n-        $this->contact['message'] = html_entity_decode(Tools::getValue('message'));\\n+        $this->contact['message'] = Tools::getValue('message');\\n         $this->contact['allow_file_upload'] = (bool) Configuration::get('PS_CUSTOMER_SERVICE_FILE_UPLOAD');\\n \\n         if (!(bool)Configuration::isCatalogMode()) {\\n@@ -388,9 +388,10 @@ public function getTemplateVarOrders()\\n     {\\n         $orders = [];\\n \\n-        if (!isset($this->customer_thread['id_order'])\\n+        if (empty($this->customer_thread['id_order'])\\n             && isset($this->context->customer)\\n-            && $this->context->customer->isLogged()) {\\n+            && $this->context->customer->isLogged()\\n+        ) {\\n             $customer_orders = Order::getCustomerOrders($this->context->customer->id);\\n \\n             foreach ($customer_orders as $customer_order) {\\n@@ -401,7 +402,7 @@ public function getTemplateVarOrders()\\n                     $orders[$customer_order['id_order']]['products'] = $myOrder->getProducts();\\n                 }\\n             }\\n-        } elseif (isset($this->customer_thread['id_order']) && (int)$this->customer_thread['id_order'] > 0) {\\n+        } elseif (isset($this->customer_thread['id_order']) && (int) $this->customer_thread['id_order'] > 0) {\\n             $myOrder = new Order($this->customer_thread['id_order']);\\n \\n             if (Validate::isLoadedObject($myOrder)) {\\n@@ -411,13 +412,13 @@ public function getTemplateVarOrders()\\n             }\\n         }\\n \\n-        if (isset($this->customer_thread['id_product'])) {\\n+        if (!empty($this->customer_thread['id_product'])) {\\n             $id_order = isset($this->customer_thread['id_order']) ?\\n-                      (int)$this->customer_thread['id_order'] :\\n+                      (int) $this->customer_thread['id_order'] :\\n                       0;\\n \\n             $orders[$id_order]['products'][(int)$this->customer_thread['id_product']] = $this->context->controller->objectPresenter->present(\\n-                new Product((int)$this->customer_thread['id_product'])\\n+                new Product((int) $this->customer_thread['id_product'])\\n             );\\n         }\\n \\n@@ -586,7 +587,7 @@ public function sendMessage()\\n                     '{lastname}' => '',\\n                     '{order_name}' => '-',\\n                     '{attached_file}' => '-',\\n-                    '{message}' => Tools::nl2br(Tools::stripslashes($message)),\\n+                    '{message}' => Tools::nl2br(Tools::htmlentitiesUTF8(Tools::stripslashes($message))),\\n                     '{email}' =>  $from,\\n                     '{product_name}' => '',\\n                 ];\"}}",
      "message_norm":"merge pull request from ghsa-95hx-62rh-gg96\n\ndo not unescape form message data",
      "language":"fr",
      "entities":"[('ghsa-95hx-62rh-gg96', 'VULNID', 'GHSA'), ('unescape', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['contactform.php'])",
      "num_files":1.0,
      "patch_content":"From aa3c77923734854bb7168f30db43544e42638202 Mon Sep 17 00:00:00 2001\nFrom: Pierre RAMBAUD <pierre.rambaud86@gmail.com>\nDate: Mon, 10 Aug 2020 17:09:40 +0200\nSubject: [PATCH] Do not unescape form message data\n\n---\n contactform.php | 17 +++++++++--------\n 1 file changed, 9 insertions(+), 8 deletions(-)\n\ndiff --git a\/contactform.php b\/contactform.php\nindex 0f94633..3135a3f 100644\n--- a\/contactform.php\n+++ b\/contactform.php\n@@ -317,7 +317,7 @@ public function getWidgetVariables($hookName = null, array $configuration = [])\n             }\n         }\n         $this->contact['contacts'] = $this->getTemplateVarContact();\n-        $this->contact['message'] = html_entity_decode(Tools::getValue('message'));\n+        $this->contact['message'] = Tools::getValue('message');\n         $this->contact['allow_file_upload'] = (bool) Configuration::get('PS_CUSTOMER_SERVICE_FILE_UPLOAD');\n \n         if (!(bool)Configuration::isCatalogMode()) {\n@@ -388,9 +388,10 @@ public function getTemplateVarOrders()\n     {\n         $orders = [];\n \n-        if (!isset($this->customer_thread['id_order'])\n+        if (empty($this->customer_thread['id_order'])\n             && isset($this->context->customer)\n-            && $this->context->customer->isLogged()) {\n+            && $this->context->customer->isLogged()\n+        ) {\n             $customer_orders = Order::getCustomerOrders($this->context->customer->id);\n \n             foreach ($customer_orders as $customer_order) {\n@@ -401,7 +402,7 @@ public function getTemplateVarOrders()\n                     $orders[$customer_order['id_order']]['products'] = $myOrder->getProducts();\n                 }\n             }\n-        } elseif (isset($this->customer_thread['id_order']) && (int)$this->customer_thread['id_order'] > 0) {\n+        } elseif (isset($this->customer_thread['id_order']) && (int) $this->customer_thread['id_order'] > 0) {\n             $myOrder = new Order($this->customer_thread['id_order']);\n \n             if (Validate::isLoadedObject($myOrder)) {\n@@ -411,13 +412,13 @@ public function getTemplateVarOrders()\n             }\n         }\n \n-        if (isset($this->customer_thread['id_product'])) {\n+        if (!empty($this->customer_thread['id_product'])) {\n             $id_order = isset($this->customer_thread['id_order']) ?\n-                      (int)$this->customer_thread['id_order'] :\n+                      (int) $this->customer_thread['id_order'] :\n                       0;\n \n             $orders[$id_order]['products'][(int)$this->customer_thread['id_product']] = $this->context->controller->objectPresenter->present(\n-                new Product((int)$this->customer_thread['id_product'])\n+                new Product((int) $this->customer_thread['id_product'])\n             );\n         }\n \n@@ -584,7 +585,7 @@ public function sendMessage()\n                 $var_list = [\n                     '{order_name}' => '-',\n                     '{attached_file}' => '-',\n-                    '{message}' => Tools::nl2br(Tools::stripslashes($message)),\n+                    '{message}' => Tools::nl2br(Tools::htmlentitiesUTF8(Tools::stripslashes($message))),\n                     '{email}' =>  $from,\n                     '{product_name}' => '',\n                 ];",
      "code_diff":"@@ -317,7 +317,7 @@ public function getWidgetVariables($hookName = null, array $configuration = [])\n             }\n         }\n         $this->contact['contacts'] = $this->getTemplateVarContact();\n-        $this->contact['message'] = html_entity_decode(Tools::getValue('message'));\n+        $this->contact['message'] = Tools::getValue('message');\n         $this->contact['allow_file_upload'] = (bool) Configuration::get('PS_CUSTOMER_SERVICE_FILE_UPLOAD');\n \n         if (!(bool)Configuration::isCatalogMode()) {\n@@ -388,9 +388,10 @@ public function getTemplateVarOrders()\n     {\n         $orders = [];\n \n-        if (!isset($this->customer_thread['id_order'])\n+        if (empty($this->customer_thread['id_order'])\n             && isset($this->context->customer)\n-            && $this->context->customer->isLogged()) {\n+            && $this->context->customer->isLogged()\n+        ) {\n             $customer_orders = Order::getCustomerOrders($this->context->customer->id);\n \n             foreach ($customer_orders as $customer_order) {\n@@ -401,7 +402,7 @@ public function getTemplateVarOrders()\n                     $orders[$customer_order['id_order']]['products'] = $myOrder->getProducts();\n                 }\n             }\n-        } elseif (isset($this->customer_thread['id_order']) && (int)$this->customer_thread['id_order'] > 0) {\n+        } elseif (isset($this->customer_thread['id_order']) && (int) $this->customer_thread['id_order'] > 0) {\n             $myOrder = new Order($this->customer_thread['id_order']);\n \n             if (Validate::isLoadedObject($myOrder)) {\n@@ -411,13 +412,13 @@ public function getTemplateVarOrders()\n             }\n         }\n \n-        if (isset($this->customer_thread['id_product'])) {\n+        if (!empty($this->customer_thread['id_product'])) {\n             $id_order = isset($this->customer_thread['id_order']) ?\n-                      (int)$this->customer_thread['id_order'] :\n+                      (int) $this->customer_thread['id_order'] :\n                       0;\n \n             $orders[$id_order]['products'][(int)$this->customer_thread['id_product']] = $this->context->controller->objectPresenter->present(\n-                new Product((int)$this->customer_thread['id_product'])\n+                new Product((int) $this->customer_thread['id_product'])\n             );\n         }\n \n@@ -584,7 +585,7 @@ public function sendMessage()\n                 $var_list = [\n                     '{order_name}' => '-',\n                     '{attached_file}' => '-',\n-                    '{message}' => Tools::nl2br(Tools::stripslashes($message)),\n+                    '{message}' => Tools::nl2br(Tools::htmlentitiesUTF8(Tools::stripslashes($message))),\n                     '{email}' =>  $from,\n                     '{product_name}' => '',\n                 ];"
    },
    {
      "index":43,
      "vuln_id":"GHSA-82j4-vr25-x394",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/78522520892d4e29cc94148c6ec84a204a607b73'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
      "published_date":"2022-03-15",
      "chain_len":1,
      "project":"https:\/\/github.com\/star7th\/showdoc",
      "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/78522520892d4e29cc94148c6ec84a204a607b73",
      "commit_sha":"78522520892d4e29cc94148c6ec84a204a607b73",
      "patch":"SINGLE",
      "chain_ord":"['78522520892d4e29cc94148c6ec84a204a607b73']",
      "before_first_fix_commit":"{'52d1d902084387bec22a64e6027f100e939733c8', '830c89a4c2c5fd0dd491422bf8e97b4eb5713f55'}",
      "last_fix_commit":"78522520892d4e29cc94148c6ec84a204a607b73",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/13\/2022, 10:39:59",
      "message":"Merge pull request #1629 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
      "author":"star7th",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
      "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/78522520892d4e29cc94148c6ec84a204a607b73\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -304,6 +304,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".aspx\")\\t\\t\\t\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
      "message_norm":"merge pull request #1629 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
      "language":"en",
      "entities":"[('#1629', 'ISSUE', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
      "num_files":1.0,
      "patch_content":"From 52d1d902084387bec22a64e6027f100e939733c8 Mon Sep 17 00:00:00 2001\nFrom: Ajaysen R <40132420+ajaysenr@users.noreply.github.com>\nDate: Sun, 13 Mar 2022 09:55:17 +0000\nSubject: [PATCH] Update AttachmentModel.class.php\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex 3dac201f4..ee9fd9f9c 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -304,6 +304,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \"%\")\n \t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t\t|| $isDangerStr($filename , \".xxhtml\")\n+\t\t\t|| $isDangerStr($filename , \".aspx\")\t\t\t\n \t\t) {\n \t\t\treturn true;\n \t\t}",
      "code_diff":"@@ -304,6 +304,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \"%\")\n \t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t\t|| $isDangerStr($filename , \".xxhtml\")\n+\t\t\t|| $isDangerStr($filename , \".aspx\")\t\t\t\n \t\t) {\n \t\t\treturn true;\n \t\t}"
    },
    {
      "index":44,
      "vuln_id":"GHSA-m52x-29pq-w3vv",
      "cwe_id":"{'CWE-79'}",
      "score":4.8,
      "chain":"{'https:\/\/github.com\/mpetroff\/pannellum\/commit\/cc2f3d99953de59db908e0c6efd1c2c17f7c6914'}",
      "dataset":"osv",
      "summary":"Pannellum Cross-Site Scripting due to data not being sanitized for URIs or vbscript Versions of `pannellum` prior to 2.5.6 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize URLs for data URIs, which may allow attackers to execute arbitrary code in a victim's browser. \n\n\n## Recommendation\n\nUpgrade to version 2.5.6 or later.",
      "published_date":"2019-11-22",
      "chain_len":1,
      "project":"https:\/\/github.com\/mpetroff\/pannellum",
      "commit_href":"https:\/\/github.com\/mpetroff\/pannellum\/commit\/cc2f3d99953de59db908e0c6efd1c2c17f7c6914",
      "commit_sha":"cc2f3d99953de59db908e0c6efd1c2c17f7c6914",
      "patch":"SINGLE",
      "chain_ord":"['cc2f3d99953de59db908e0c6efd1c2c17f7c6914']",
      "before_first_fix_commit":"{'40111b237e763821437f501c94d8511022274dc3', 'f42e80facb41bb97321a0e2056d9ef5a4779e627'}",
      "last_fix_commit":"cc2f3d99953de59db908e0c6efd1c2c17f7c6914",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/22\/2019, 01:35:45",
      "message":"Merge pull request from GHSA-m52x-29pq-w3vv\n\nFix potential XSS vulnerability",
      "author":"Matthew Petroff",
      "comments":null,
      "stats":"{'additions': 13, 'deletions': 6, 'total': 19}",
      "files":"{'src\/js\/pannellum.js': {'additions': 13, 'deletions': 6, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mpetroff\/pannellum\/raw\/cc2f3d99953de59db908e0c6efd1c2c17f7c6914\/src%2Fjs%2Fpannellum.js', 'patch': \"@@ -1719,7 +1719,7 @@ function createHotSpot(hs) {\\n         if (config.basePath && !absoluteURL(imgp))\\n             imgp = config.basePath + imgp;\\n         a = document.createElement('a');\\n-        a.href = sanitizeURL(hs.URL ? hs.URL : imgp);\\n+        a.href = sanitizeURL(hs.URL ? hs.URL : imgp, true);\\n         a.target = '_blank';\\n         span.appendChild(a);\\n         var image = document.createElement('img');\\n@@ -1731,7 +1731,7 @@ function createHotSpot(hs) {\\n         span.style.maxWidth = 'initial';\\n     } else if (hs.URL) {\\n         a = document.createElement('a');\\n-        a.href = sanitizeURL(hs.URL);\\n+        a.href = sanitizeURL(hs.URL, true);\\n         if (hs.attributes) {\\n             for (var key in hs.attributes) {\\n                 a.setAttribute(key, hs.attributes[key]);\\n@@ -2005,7 +2005,7 @@ function processOptions(isPreview) {\\n                 var authorText = escapeHTML(config[key]);\\n                 if (config.authorURL) {\\n                     var authorLink = document.createElement('a');\\n-                    authorLink.href = sanitizeURL(config['authorURL']);\\n+                    authorLink.href = sanitizeURL(config['authorURL'], true);\\n                     authorLink.target = '_blank';\\n                     authorLink.innerHTML = escapeHTML(config[key]);\\n                     authorText = authorLink.outerHTML;\\n@@ -2016,7 +2016,7 @@ function processOptions(isPreview) {\\n             \\n             case 'fallback':\\n                 var link = document.createElement('a');\\n-                link.href = sanitizeURL(config[key]);\\n+                link.href = sanitizeURL(config[key], true);\\n                 link.target = '_blank';\\n                 link.textContent = 'Click here to view this panorama in an alternative viewer.';\\n                 var message = document.createElement('p');\\n@@ -2378,10 +2378,17 @@ function escapeHTML(s) {\\n  * The URL cannot be of protocol 'javascript'.\\n  * @private\\n  * @param {string} url - URL to sanitize\\n+ * @param {boolean} href - True if URL is for link (blocks data URIs)\\n  * @returns {string} Sanitized URL\\n  *\/\\n-function sanitizeURL(url) {\\n-    if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\\n+function sanitizeURL(url, href) {\\n+    if (url.trim().toLowerCase().indexOf('javascript:') === 0 ||\\n+        url.trim().toLowerCase().indexOf('vbscript:') === 0) {\\n+        console.log('Script URL removed.');\\n+        return 'about:blank';\\n+    }\\n+    if (href && url.trim().toLowerCase().indexOf('data:') === 0) {\\n+        console.log('Data URI removed from link.');\\n         return 'about:blank';\\n     }\\n     return url;\"}}",
      "message_norm":"merge pull request from ghsa-m52x-29pq-w3vv\n\nfix potential xss vulnerability",
      "language":"ca",
      "entities":"[('ghsa-m52x-29pq-w3vv', 'VULNID', 'GHSA'), ('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/js\/pannellum.js'])",
      "num_files":1.0,
      "patch_content":"From 40111b237e763821437f501c94d8511022274dc3 Mon Sep 17 00:00:00 2001\nFrom: Matthew Petroff <matthew@mpetroff.net>\nDate: Fri, 15 Nov 2019 11:03:49 -0500\nSubject: [PATCH] Fix potential XSS vulnerability.\n\n---\n src\/js\/pannellum.js | 19 +++++++++++++------\n 1 file changed, 13 insertions(+), 6 deletions(-)\n\ndiff --git a\/src\/js\/pannellum.js b\/src\/js\/pannellum.js\nindex 5f29c0f7..f295dfd2 100644\n--- a\/src\/js\/pannellum.js\n+++ b\/src\/js\/pannellum.js\n@@ -1726,7 +1726,7 @@ function createHotSpot(hs) {\n         if (config.basePath && !absoluteURL(imgp))\n             imgp = config.basePath + imgp;\n         a = document.createElement('a');\n-        a.href = sanitizeURL(hs.URL ? hs.URL : imgp);\n+        a.href = sanitizeURL(hs.URL ? hs.URL : imgp, true);\n         a.target = '_blank';\n         span.appendChild(a);\n         var image = document.createElement('img');\n@@ -1738,7 +1738,7 @@ function createHotSpot(hs) {\n         span.style.maxWidth = 'initial';\n     } else if (hs.URL) {\n         a = document.createElement('a');\n-        a.href = sanitizeURL(hs.URL);\n+        a.href = sanitizeURL(hs.URL, true);\n         if (hs.attributes) {\n             for (var key in hs.attributes) {\n                 a.setAttribute(key, hs.attributes[key]);\n@@ -2012,7 +2012,7 @@ function processOptions(isPreview) {\n                 var authorText = escapeHTML(config[key]);\n                 if (config.authorURL) {\n                     var authorLink = document.createElement('a');\n-                    authorLink.href = sanitizeURL(config['authorURL']);\n+                    authorLink.href = sanitizeURL(config['authorURL'], true);\n                     authorLink.target = '_blank';\n                     authorLink.innerHTML = escapeHTML(config[key]);\n                     authorText = authorLink.outerHTML;\n@@ -2023,7 +2023,7 @@ function processOptions(isPreview) {\n             \n             case 'fallback':\n                 var link = document.createElement('a');\n-                link.href = sanitizeURL(config[key]);\n+                link.href = sanitizeURL(config[key], true);\n                 link.target = '_blank';\n                 link.textContent = 'Click here to view this panorama in an alternative viewer.';\n                 var message = document.createElement('p');\n@@ -2389,10 +2389,17 @@ function escapeHTML(s) {\n  * The URL cannot be of protocol 'javascript'.\n  * @private\n  * @param {string} url - URL to sanitize\n+ * @param {boolean} href - True if URL is for link (blocks data URIs)\n  * @returns {string} Sanitized URL\n  *\/\n-function sanitizeURL(url) {\n-    if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n+function sanitizeURL(url, href) {\n+    if (url.trim().toLowerCase().indexOf('javascript:') === 0 ||\n+        url.trim().toLowerCase().indexOf('vbscript:') === 0) {\n+        console.log('Script URL removed.');\n+        return 'about:blank';\n+    }\n+    if (href && url.trim().toLowerCase().indexOf('data:') === 0) {\n+        console.log('Data URI removed from link.');\n         return 'about:blank';\n     }\n     return url;",
      "code_diff":"@@ -1726,7 +1726,7 @@ function createHotSpot(hs) {\n         if (config.basePath && !absoluteURL(imgp))\n             imgp = config.basePath + imgp;\n         a = document.createElement('a');\n-        a.href = sanitizeURL(hs.URL ? hs.URL : imgp);\n+        a.href = sanitizeURL(hs.URL ? hs.URL : imgp, true);\n         a.target = '_blank';\n         span.appendChild(a);\n         var image = document.createElement('img');\n@@ -1738,7 +1738,7 @@ function createHotSpot(hs) {\n         span.style.maxWidth = 'initial';\n     } else if (hs.URL) {\n         a = document.createElement('a');\n-        a.href = sanitizeURL(hs.URL);\n+        a.href = sanitizeURL(hs.URL, true);\n         if (hs.attributes) {\n             for (var key in hs.attributes) {\n                 a.setAttribute(key, hs.attributes[key]);\n@@ -2012,7 +2012,7 @@ function processOptions(isPreview) {\n                 var authorText = escapeHTML(config[key]);\n                 if (config.authorURL) {\n                     var authorLink = document.createElement('a');\n-                    authorLink.href = sanitizeURL(config['authorURL']);\n+                    authorLink.href = sanitizeURL(config['authorURL'], true);\n                     authorLink.target = '_blank';\n                     authorLink.innerHTML = escapeHTML(config[key]);\n                     authorText = authorLink.outerHTML;\n@@ -2023,7 +2023,7 @@ function processOptions(isPreview) {\n             \n             case 'fallback':\n                 var link = document.createElement('a');\n-                link.href = sanitizeURL(config[key]);\n+                link.href = sanitizeURL(config[key], true);\n                 link.target = '_blank';\n                 link.textContent = 'Click here to view this panorama in an alternative viewer.';\n                 var message = document.createElement('p');\n@@ -2389,10 +2389,17 @@ function escapeHTML(s) {\n  * The URL cannot be of protocol 'javascript'.\n  * @private\n  * @param {string} url - URL to sanitize\n+ * @param {boolean} href - True if URL is for link (blocks data URIs)\n  * @returns {string} Sanitized URL\n  *\/\n-function sanitizeURL(url) {\n-    if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\n+function sanitizeURL(url, href) {\n+    if (url.trim().toLowerCase().indexOf('javascript:') === 0 ||\n+        url.trim().toLowerCase().indexOf('vbscript:') === 0) {\n+        console.log('Script URL removed.');\n+        return 'about:blank';\n+    }\n+    if (href && url.trim().toLowerCase().indexOf('data:') === 0) {\n+        console.log('Data URI removed from link.');\n         return 'about:blank';\n     }\n     return url;"
    },
    {
      "index":45,
      "vuln_id":"GHSA-xg72-6c83-ghh4",
      "cwe_id":"{'CWE-79'}",
      "score":4.8,
      "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/d35e691e72d358430abc8e99f5ba9eb374423b9f'}",
      "dataset":"osv",
      "summary":"Microweber Stored Cross-site Scripting before v1.2.20 Microwerber prior to version 1.2.20 is vulnerable to stored Cross-site Scripting (XSS).",
      "published_date":"2022-07-23",
      "chain_len":1,
      "project":"https:\/\/github.com\/microweber\/microweber",
      "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/d35e691e72d358430abc8e99f5ba9eb374423b9f",
      "commit_sha":"d35e691e72d358430abc8e99f5ba9eb374423b9f",
      "patch":"SINGLE",
      "chain_ord":"['d35e691e72d358430abc8e99f5ba9eb374423b9f']",
      "before_first_fix_commit":"{'b39736f1191589e89eb4e54f5f6f05b6349626e3'}",
      "last_fix_commit":"d35e691e72d358430abc8e99f5ba9eb374423b9f",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/08\/2022, 13:41:01",
      "message":"update",
      "author":"Peter Ivanov",
      "comments":null,
      "stats":"{'additions': 12, 'deletions': 4, 'total': 16}",
      "files":"{'src\/MicroweberPackages\/App\/functions\/plupload.php': {'additions': 12, 'deletions': 4, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/d35e691e72d358430abc8e99f5ba9eb374423b9f\/src%2FMicroweberPackages%2FApp%2Ffunctions%2Fplupload.php', 'patch': \"@@ -563,17 +563,25 @@\\n                 }\\n \\n             } else if ($ext === 'svg') {\\n-\\n+                $valid = false;\\n                 if (is_file($filePath)) {\\n                     $sanitizer = new \\\\enshrined\\\\svgSanitize\\\\Sanitizer();\\n                     \/\/ Load the dirty svg\\n                     $dirtySVG = file_get_contents($filePath);\\n                      \/\/ Pass it to the sanitizer and get it back clean\\n-                    $cleanSVG = $sanitizer->sanitize($dirtySVG);\\n-                    file_put_contents($filePath, $cleanSVG);\\n+                    try {\\n+                        $cleanSVG = $sanitizer->sanitize($dirtySVG);\\n+                        $valid = true;\\n+                    } catch (\\\\Exception $e) {\\n+                        $valid = false;\\n+                    }\\n+\\n+                    if ($valid) {\\n+                        file_put_contents($filePath, $cleanSVG);\\n+                    }\\n \\n                 }\\n-               $valid = true;\\n+\\n \\n             } else {\\n                 $valid = false;\"}}",
      "message_norm":"update",
      "language":"ro",
      "entities":"[('update', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/MicroweberPackages\/App\/functions\/plupload.php'])",
      "num_files":1.0,
      "patch_content":"From d35e691e72d358430abc8e99f5ba9eb374423b9f Mon Sep 17 00:00:00 2001\nFrom: Peter Ivanov <peter@microweber.com>\nDate: Fri, 8 Jul 2022 16:41:01 +0300\nSubject: [PATCH] update\n\n---\n ...\/App\/functions\/plupload.php                   | 16 ++++++++++++----\n 1 file changed, 12 insertions(+), 4 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/App\/functions\/plupload.php b\/src\/MicroweberPackages\/App\/functions\/plupload.php\nindex 244980968ce..5890b2ae9ff 100644\n--- a\/src\/MicroweberPackages\/App\/functions\/plupload.php\n+++ b\/src\/MicroweberPackages\/App\/functions\/plupload.php\n@@ -563,17 +563,25 @@\n                 }\n \n             } else if ($ext === 'svg') {\n-\n+                $valid = false;\n                 if (is_file($filePath)) {\n                     $sanitizer = new \\enshrined\\svgSanitize\\Sanitizer();\n                     \/\/ Load the dirty svg\n                     $dirtySVG = file_get_contents($filePath);\n                      \/\/ Pass it to the sanitizer and get it back clean\n-                    $cleanSVG = $sanitizer->sanitize($dirtySVG);\n-                    file_put_contents($filePath, $cleanSVG);\n+                    try {\n+                        $cleanSVG = $sanitizer->sanitize($dirtySVG);\n+                        $valid = true;\n+                    } catch (\\Exception $e) {\n+                        $valid = false;\n+                    }\n+\n+                    if ($valid) {\n+                        file_put_contents($filePath, $cleanSVG);\n+                    }\n \n                 }\n-               $valid = true;\n+\n \n             } else {\n                 $valid = false;",
      "code_diff":"@@ -563,17 +563,25 @@\n                 }\n \n             } else if ($ext === 'svg') {\n-\n+                $valid = false;\n                 if (is_file($filePath)) {\n                     $sanitizer = new \\enshrined\\svgSanitize\\Sanitizer();\n                     \/\/ Load the dirty svg\n                     $dirtySVG = file_get_contents($filePath);\n                      \/\/ Pass it to the sanitizer and get it back clean\n-                    $cleanSVG = $sanitizer->sanitize($dirtySVG);\n-                    file_put_contents($filePath, $cleanSVG);\n+                    try {\n+                        $cleanSVG = $sanitizer->sanitize($dirtySVG);\n+                        $valid = true;\n+                    } catch (\\Exception $e) {\n+                        $valid = false;\n+                    }\n+\n+                    if ($valid) {\n+                        file_put_contents($filePath, $cleanSVG);\n+                    }\n \n                 }\n-               $valid = true;\n+\n \n             } else {\n                 $valid = false;"
    },
    {
      "index":46,
      "vuln_id":"GHSA-hc72-vj3g-5g2g",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/SeriaWei\/ZKEACMS\/commit\/833c5460dc5c6152092f6ad54b8b832870a59903'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in ZKEACMS A cross-site scripting (XSS) vulnerability in \/navigation\/create?ParentID=%23 of ZKEACMS v3.5.2 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the ParentID parameter.",
      "published_date":"2022-05-26",
      "chain_len":1,
      "project":"https:\/\/github.com\/SeriaWei\/ZKEACMS",
      "commit_href":"https:\/\/github.com\/SeriaWei\/ZKEACMS\/commit\/833c5460dc5c6152092f6ad54b8b832870a59903",
      "commit_sha":"833c5460dc5c6152092f6ad54b8b832870a59903",
      "patch":"SINGLE",
      "chain_ord":"['833c5460dc5c6152092f6ad54b8b832870a59903']",
      "before_first_fix_commit":"{'53109ba58bbeac75074583ec261732772ed1ecc5'}",
      "last_fix_commit":"833c5460dc5c6152092f6ad54b8b832870a59903",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/14\/2022, 14:55:34",
      "message":"Sanitize Html\n\n#457",
      "author":"wayne",
      "comments":null,
      "stats":"{'additions': 36, 'deletions': 1, 'total': 37}",
      "files":"{'src\/ZKEACMS\/Common\/Service\/NavigationService.cs': {'additions': 36, 'deletions': 1, 'changes': 37, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SeriaWei\/ZKEACMS\/raw\/833c5460dc5c6152092f6ad54b8b832870a59903\/src%2FZKEACMS%2FCommon%2FService%2FNavigationService.cs', 'patch': '@@ -11,13 +11,16 @@\\n using ZKEACMS.Common.Models;\\n using Easy;\\n using Microsoft.EntityFrameworkCore;\\n+using ZKEACMS.Safety;\\n \\n namespace ZKEACMS.Common.Service\\n {\\n     public class NavigationService : ServiceBase<NavigationEntity, CMSDbContext>, INavigationService\\n     {\\n-        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext) : base(applicationContext, dbContext)\\n+        private readonly IHtmlSanitizer _htmlSanitizer;\\n+        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext, IHtmlSanitizer htmlSanitizer) : base(applicationContext, dbContext)\\n         {\\n+            _htmlSanitizer = htmlSanitizer;\\n         }\\n         public override DbSet<NavigationEntity> CurrentDbSet => DbContext.Navigation;\\n         public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\\n@@ -27,8 +30,34 @@ public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\\n                 item.ParentId = \"#\";\\n             }\\n             item.ID = Guid.NewGuid().ToString(\"N\");\\n+            Santize(item);\\n             return base.Add(item);\\n         }\\n+\\n+        public override ServiceResult<NavigationEntity> AddRange(params NavigationEntity[] items)\\n+        {\\n+            foreach (var item in items)\\n+            {\\n+                Santize(item);\\n+            }\\n+            return base.AddRange(items);\\n+        }\\n+\\n+        public override ServiceResult<NavigationEntity> Update(NavigationEntity item)\\n+        {\\n+            Santize(item);\\n+            return base.Update(item);\\n+        }\\n+\\n+        public override ServiceResult<NavigationEntity> UpdateRange(params NavigationEntity[] items)\\n+        {\\n+            foreach (var item in items)\\n+            {\\n+                Santize(item);\\n+            }\\n+            return base.UpdateRange(items);\\n+        }\\n+\\n         public override void Remove(NavigationEntity item)\\n         {\\n             Remove(m => m.ParentId == item.ID);\\n@@ -73,5 +102,11 @@ public void Move(string id, string parentId, int position, int oldPosition)\\n             }\\n             Update(nav);\\n         }\\n+\\n+        private void Santize(NavigationEntity item)\\n+        {\\n+            item.Title = _htmlSanitizer.Sanitize(item.Title);\\n+            item.Html = _htmlSanitizer.Sanitize(item.Html);\\n+        }\\n     }\\n }\\n\\\\ No newline at end of file'}}",
      "message_norm":"sanitize html\n\n#457",
      "language":"sq",
      "entities":"[('sanitize', 'SECWORD', ''), ('#457', 'ISSUE', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/ZKEACMS\/Common\/Service\/NavigationService.cs'])",
      "num_files":1.0,
      "patch_content":"From 833c5460dc5c6152092f6ad54b8b832870a59903 Mon Sep 17 00:00:00 2001\nFrom: wayne <seriawei@outlook.com>\nDate: Thu, 14 Apr 2022 22:55:34 +0800\nSubject: [PATCH] Sanitize Html\n\n#457\n---\n ...\/Common\/Service\/NavigationService.cs       | 37 ++++++++++++++++++-\n 1 file changed, 36 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/ZKEACMS\/Common\/Service\/NavigationService.cs b\/src\/ZKEACMS\/Common\/Service\/NavigationService.cs\nindex c6fafc72..66ed8921 100644\n--- a\/src\/ZKEACMS\/Common\/Service\/NavigationService.cs\n+++ b\/src\/ZKEACMS\/Common\/Service\/NavigationService.cs\n@@ -11,13 +11,16 @@\n using ZKEACMS.Common.Models;\n using Easy;\n using Microsoft.EntityFrameworkCore;\n+using ZKEACMS.Safety;\n \n namespace ZKEACMS.Common.Service\n {\n     public class NavigationService : ServiceBase<NavigationEntity, CMSDbContext>, INavigationService\n     {\n-        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext) : base(applicationContext, dbContext)\n+        private readonly IHtmlSanitizer _htmlSanitizer;\n+        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext, IHtmlSanitizer htmlSanitizer) : base(applicationContext, dbContext)\n         {\n+            _htmlSanitizer = htmlSanitizer;\n         }\n         public override DbSet<NavigationEntity> CurrentDbSet => DbContext.Navigation;\n         public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\n@@ -27,8 +30,34 @@ public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\n                 item.ParentId = \"#\";\n             }\n             item.ID = Guid.NewGuid().ToString(\"N\");\n+            Santize(item);\n             return base.Add(item);\n         }\n+\n+        public override ServiceResult<NavigationEntity> AddRange(params NavigationEntity[] items)\n+        {\n+            foreach (var item in items)\n+            {\n+                Santize(item);\n+            }\n+            return base.AddRange(items);\n+        }\n+\n+        public override ServiceResult<NavigationEntity> Update(NavigationEntity item)\n+        {\n+            Santize(item);\n+            return base.Update(item);\n+        }\n+\n+        public override ServiceResult<NavigationEntity> UpdateRange(params NavigationEntity[] items)\n+        {\n+            foreach (var item in items)\n+            {\n+                Santize(item);\n+            }\n+            return base.UpdateRange(items);\n+        }\n+\n         public override void Remove(NavigationEntity item)\n         {\n             Remove(m => m.ParentId == item.ID);\n@@ -73,5 +102,11 @@ public void Move(string id, string parentId, int position, int oldPosition)\n             }\n             Update(nav);\n         }\n+\n+        private void Santize(NavigationEntity item)\n+        {\n+            item.Title = _htmlSanitizer.Sanitize(item.Title);\n+            item.Html = _htmlSanitizer.Sanitize(item.Html);\n+        }\n     }\n }\n\\ No newline at end of file",
      "code_diff":"@@ -11,13 +11,16 @@\n using ZKEACMS.Common.Models;\n using Easy;\n using Microsoft.EntityFrameworkCore;\n+using ZKEACMS.Safety;\n \n namespace ZKEACMS.Common.Service\n {\n     public class NavigationService : ServiceBase<NavigationEntity, CMSDbContext>, INavigationService\n     {\n-        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext) : base(applicationContext, dbContext)\n+        private readonly IHtmlSanitizer _htmlSanitizer;\n+        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext, IHtmlSanitizer htmlSanitizer) : base(applicationContext, dbContext)\n         {\n+            _htmlSanitizer = htmlSanitizer;\n         }\n         public override DbSet<NavigationEntity> CurrentDbSet => DbContext.Navigation;\n         public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\n@@ -27,8 +30,34 @@ public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\n                 item.ParentId = \"#\";\n             }\n             item.ID = Guid.NewGuid().ToString(\"N\");\n+            Santize(item);\n             return base.Add(item);\n         }\n+\n+        public override ServiceResult<NavigationEntity> AddRange(params NavigationEntity[] items)\n+        {\n+            foreach (var item in items)\n+            {\n+                Santize(item);\n+            }\n+            return base.AddRange(items);\n+        }\n+\n+        public override ServiceResult<NavigationEntity> Update(NavigationEntity item)\n+        {\n+            Santize(item);\n+            return base.Update(item);\n+        }\n+\n+        public override ServiceResult<NavigationEntity> UpdateRange(params NavigationEntity[] items)\n+        {\n+            foreach (var item in items)\n+            {\n+                Santize(item);\n+            }\n+            return base.UpdateRange(items);\n+        }\n+\n         public override void Remove(NavigationEntity item)\n         {\n             Remove(m => m.ParentId == item.ID);\n@@ -73,5 +102,11 @@ public void Move(string id, string parentId, int position, int oldPosition)\n             }\n             Update(nav);\n         }\n+\n+        private void Santize(NavigationEntity item)\n+        {\n+            item.Title = _htmlSanitizer.Sanitize(item.Title);\n+            item.Html = _htmlSanitizer.Sanitize(item.Html);\n+        }\n     }\n }\n\\ No newline at end of file"
    },
    {
      "index":47,
      "vuln_id":"GHSA-8xqr-4cpm-wx7g",
      "cwe_id":"{'CWE-79'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/tanem\/react-svg\/pull\/57\/commits\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb'}",
      "dataset":"osv",
      "summary":"Cross-Site Scripting in react-svg Versions of `react-svg` before 2.2.18 are vulnerable to cross-site scripting (xss). This is due to the fact that scripts found in SVG files are run by default.\n\n\n## Recommendation\n\nUpdate to version 2.2.18 or later.",
      "published_date":"2019-05-31",
      "chain_len":1,
      "project":"https:\/\/github.com\/tanem\/react-svg",
      "commit_href":"https:\/\/github.com\/tanem\/react-svg\/pull\/57\/commits\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb",
      "commit_sha":"ec7de5d678f53a085cee1348cb1aa069c9fc42fb",
      "patch":"SINGLE",
      "chain_ord":"['ec7de5d678f53a085cee1348cb1aa069c9fc42fb']",
      "before_first_fix_commit":"{'9fa13da92cc4c44a10b6e2aced023d3199e8c6bb'}",
      "last_fix_commit":"ec7de5d678f53a085cee1348cb1aa069c9fc42fb",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/21\/2018, 18:37:51",
      "message":"Changed default evalScripts prop to match documentation.",
      "author":"Ron Perris",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'src\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tanem\/react-svg\/raw\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb\/src%2Findex.js', 'patch': \"@@ -10,7 +10,7 @@ export default class ReactSVG extends React.Component {\\n   static defaultProps = {\\n     callback: () => {},\\n     className: null,\\n-    evalScripts: 'once',\\n+    evalScripts: 'never',\\n     style: {},\\n     wrapperClassName: null\\n   }\"}}",
      "message_norm":"changed default evalscripts prop to match documentation.",
      "language":"en",
      "entities":"[('changed', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/index.js'])",
      "num_files":1.0,
      "patch_content":"From ec7de5d678f53a085cee1348cb1aa069c9fc42fb Mon Sep 17 00:00:00 2001\nFrom: Ron Perris <ronperris@gmail.com>\nDate: Sat, 21 Apr 2018 11:37:51 -0700\nSubject: [PATCH] Changed default evalScripts prop to match documentation.\n\n---\n src\/index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/index.js b\/src\/index.js\nindex ce4742173..9f04da8bc 100644\n--- a\/src\/index.js\n+++ b\/src\/index.js\n@@ -10,7 +10,7 @@ export default class ReactSVG extends React.Component {\n   static defaultProps = {\n     callback: () => {},\n     className: null,\n-    evalScripts: 'once',\n+    evalScripts: 'never',\n     style: {},\n     wrapperClassName: null\n   }",
      "code_diff":"@@ -10,7 +10,7 @@ export default class ReactSVG extends React.Component {\n   static defaultProps = {\n     callback: () => {},\n     className: null,\n-    evalScripts: 'once',\n+    evalScripts: 'never',\n     style: {},\n     wrapperClassName: null\n   }"
    },
    {
      "index":48,
      "vuln_id":"GHSA-h3gg-7wx2-cq3h",
      "cwe_id":"{'CWE-79'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/flarum\/sticky\/commit\/7ebd30462bd405c4c0570b93a6d48710e6c3db19'}",
      "dataset":"osv",
      "summary":"XSS in Flarum Sticky extension ### Impact\nA change in release beta 14 of the Sticky extension caused the plain text content of the first post of a pinned discussion to be injected as HTML on the discussion list. The issue was discovered following an internal audit.\n\nAny HTML would be injected through Mithril's `m.trust()` helper. This resulted in an HTML injection where `<script>` tags would not be executed. However it was possible to run javascript from other HTML attributes, enabling a cross-site scripting (XSS) attack to be performed.\n\nSince the exploit only happens with the first post of a pinned discussion, an attacker would need the ability to pin their own discussion, or be able to edit a discussion that was previously pinned.\n\nOn forums where all pinned posts are authored by your staff, you can be relatively certain the vulnerability has not been exploited.\n\nForums where some user-created discussions were pinned can look at the first post edit date to find whether the vulnerability might have been exploited. Because Flarum doesn't store the post content history, you cannot be certain if a malicious edit was reverted.\n\n### Patches\nThe fix will be available in version v0.1.0-beta.16 with Flarum beta 16. The fix has already been back-ported to Flarum beta 15 as version v0.1.0-beta.15.1 of the Sticky extension.\n\n### Workarounds\nForum administrators can disable the Sticky extension until they are able to apply the update. The vulnerability cannot be exploited while the extension is disabled.\n\n### References\n\n- [Release announcement](https:\/\/discuss.flarum.org\/d\/26042-security-update-to-flarum-sticky-010-beta151)\n- [Pull Request](https:\/\/github.com\/flarum\/sticky\/pull\/24)\n\n### For more information\nIf you have any questions or comments about this advisory, please start a new discussion on our [support forum](https:\/\/discuss.flarum.org\/t\/support).\n\nIf you discover a security vulnerability within Flarum, please send an e-mail to [security@flarum.org](mailto:security@flarum.org). All security vulnerabilities will be promptly addressed. More details can be found in our [security policy](https:\/\/github.com\/flarum\/core\/security\/policy).",
      "published_date":"2021-01-29",
      "chain_len":1,
      "project":"https:\/\/github.com\/flarum\/sticky",
      "commit_href":"https:\/\/github.com\/flarum\/sticky\/commit\/7ebd30462bd405c4c0570b93a6d48710e6c3db19",
      "commit_sha":"7ebd30462bd405c4c0570b93a6d48710e6c3db19",
      "patch":"SINGLE",
      "chain_ord":"['7ebd30462bd405c4c0570b93a6d48710e6c3db19']",
      "before_first_fix_commit":"{'62a74d25ab3f84f69d1c4b5920080963788a8360'}",
      "last_fix_commit":"7ebd30462bd405c4c0570b93a6d48710e6c3db19",
      "chain_ord_pos":1.0,
      "commit_datetime":"01\/22\/2021, 18:53:11",
      "message":"Fix evaluation of post content by m.trust() (#24)",
      "author":"Sami Mazouz",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
      "files":"{'js\/src\/forum\/addStickyExcerpt.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/flarum\/sticky\/raw\/7ebd30462bd405c4c0570b93a6d48710e6c3db19\/js%2Fsrc%2Fforum%2FaddStickyExcerpt.js', 'patch': \"@@ -21,7 +21,8 @@ export default function addStickyControl() {\\n       if (firstPost) {\\n         const excerpt = truncate(firstPost.contentPlain(), 175);\\n \\n-        items.add('excerpt', m.trust(excerpt), -100);\\n+        \/\/ Wrapping in <div> because ItemList entries need to be vnodes\\n+        items.add('excerpt', <div>{excerpt}<\/div>, -100);\\n       }\\n     }\\n   });\"}}",
      "message_norm":"fix evaluation of post content by m.trust() (#24)",
      "language":"en",
      "entities":"[('fix', 'ACTION', ''), ('#24', 'ISSUE', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['js\/src\/forum\/addStickyExcerpt.js'])",
      "num_files":1.0,
      "patch_content":"From 7ebd30462bd405c4c0570b93a6d48710e6c3db19 Mon Sep 17 00:00:00 2001\nFrom: Sami Mazouz <sychocouldy@gmail.com>\nDate: Fri, 22 Jan 2021 19:53:11 +0100\nSubject: [PATCH] Fix evaluation of post content by m.trust() (#24)\n\n---\n js\/src\/forum\/addStickyExcerpt.js | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/js\/src\/forum\/addStickyExcerpt.js b\/js\/src\/forum\/addStickyExcerpt.js\nindex 817e626..05e6954 100644\n--- a\/js\/src\/forum\/addStickyExcerpt.js\n+++ b\/js\/src\/forum\/addStickyExcerpt.js\n@@ -21,7 +21,8 @@ export default function addStickyControl() {\n       if (firstPost) {\n         const excerpt = truncate(firstPost.contentPlain(), 175);\n \n-        items.add('excerpt', m.trust(excerpt), -100);\n+        \/\/ Wrapping in <div> because ItemList entries need to be vnodes\n+        items.add('excerpt', <div>{excerpt}<\/div>, -100);\n       }\n     }\n   });",
      "code_diff":"@@ -21,7 +21,8 @@ export default function addStickyControl() {\n       if (firstPost) {\n         const excerpt = truncate(firstPost.contentPlain(), 175);\n \n-        items.add('excerpt', m.trust(excerpt), -100);\n+        \/\/ Wrapping in <div> because ItemList entries need to be vnodes\n+        items.add('excerpt', <div>{excerpt}<\/div>, -100);\n       }\n     }\n   });"
    },
    {
      "index":49,
      "vuln_id":"GHSA-h6wm-mr85-4h9g",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/neorazorx\/facturascripts\/commit\/73a6595ca85984d65f656c6356fabb23d1936c54'}",
      "dataset":"osv",
      "summary":"Cross site scripting in facturascripts A Cross-site Scripting (XSS) vulnerability exists in the fsNick parameter in facturascripts prior to version 2022.06",
      "published_date":"2022-06-14",
      "chain_len":1,
      "project":"https:\/\/github.com\/neorazorx\/facturascripts",
      "commit_href":"https:\/\/github.com\/neorazorx\/facturascripts\/commit\/73a6595ca85984d65f656c6356fabb23d1936c54",
      "commit_sha":"73a6595ca85984d65f656c6356fabb23d1936c54",
      "patch":"SINGLE",
      "chain_ord":"['73a6595ca85984d65f656c6356fabb23d1936c54']",
      "before_first_fix_commit":"{'298eb4b1a94c5898fde5a21e412955fc77a3ef93'}",
      "last_fix_commit":"73a6595ca85984d65f656c6356fabb23d1936c54",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/28\/2022, 09:29:31",
      "message":"Sanitized username when showing user not found message.\n------\nSaneado nombre de usuario al mostrar el mensaje de usuario no encontrado.",
      "author":"Carlos Garcia Gomez",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'Core\/App\/AppController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NeoRazorX\/facturascripts\/raw\/73a6595ca85984d65f656c6356fabb23d1936c54\/Core%2FApp%2FAppController.php', 'patch': \"@@ -287,7 +287,7 @@ private function userAuth()\\n         }\\n \\n         $this->ipWarning();\\n-        ToolBox::i18nLog()->warning('login-user-not-found', ['%nick%' => $nick]);\\n+        ToolBox::i18nLog()->warning('login-user-not-found', ['%nick%' => htmlspecialchars($nick)]);\\n         return false;\\n     }\"}}",
      "message_norm":"sanitized username when showing user not found message.\n------\nsaneado nombre de usuario al mostrar el mensaje de usuario no encontrado.",
      "language":"en",
      "entities":"[('sanitized', 'SECWORD', ''), ('found', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['Core\/App\/AppController.php'])",
      "num_files":1.0,
      "patch_content":"From 73a6595ca85984d65f656c6356fabb23d1936c54 Mon Sep 17 00:00:00 2001\nFrom: Carlos Garcia Gomez <neorazorx@gmail.com>\nDate: Thu, 28 Apr 2022 11:29:31 +0200\nSubject: [PATCH] Sanitized username when showing user not found message.\n ------ Saneado nombre de usuario al mostrar el mensaje de usuario no\n encontrado.\n\n---\n Core\/App\/AppController.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/Core\/App\/AppController.php b\/Core\/App\/AppController.php\nindex 83c42b7241..0dd563c518 100644\n--- a\/Core\/App\/AppController.php\n+++ b\/Core\/App\/AppController.php\n@@ -287,7 +287,7 @@ private function userAuth()\n         }\n \n         $this->ipWarning();\n-        ToolBox::i18nLog()->warning('login-user-not-found', ['%nick%' => $nick]);\n+        ToolBox::i18nLog()->warning('login-user-not-found', ['%nick%' => htmlspecialchars($nick)]);\n         return false;\n     }",
      "code_diff":"@@ -287,7 +287,7 @@ private function userAuth()\n         }\n \n         $this->ipWarning();\n-        ToolBox::i18nLog()->warning('login-user-not-found', ['%nick%' => $nick]);\n+        ToolBox::i18nLog()->warning('login-user-not-found', ['%nick%' => htmlspecialchars($nick)]);\n         return false;\n     }"
    },
    {
      "index":50,
      "vuln_id":"GHSA-pxpf-v376-7xx5",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/yairEO\/tagify\/commit\/198c0451fad188390390395ccfc84ab371def4c7'}",
      "dataset":"osv",
      "summary":"tagify can pass a malicious placeholder to initiate the cross-site scripting (XSS) payload This affects the package @yaireo\/tagify before 4.9.8. The package is used for rendering UI components inside the input or text fields, and an attacker can pass a malicious placeholder value to it to fire the cross-site scripting (XSS) payload.",
      "published_date":"2022-04-30",
      "chain_len":1,
      "project":"https:\/\/github.com\/yairEO\/tagify",
      "commit_href":"https:\/\/github.com\/yairEO\/tagify\/commit\/198c0451fad188390390395ccfc84ab371def4c7",
      "commit_sha":"198c0451fad188390390395ccfc84ab371def4c7",
      "patch":"SINGLE",
      "chain_ord":"['198c0451fad188390390395ccfc84ab371def4c7']",
      "before_first_fix_commit":"{'93f729c6d1bf45666a1dc21d5cae3aefe1b18043'}",
      "last_fix_commit":"198c0451fad188390390395ccfc84ab371def4c7",
      "chain_ord_pos":1.0,
      "commit_datetime":"02\/17\/2022, 08:16:09",
      "message":"fixes #989 - fix XSS",
      "author":"Yair Even Or",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'src\/tagify.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/yairEO\/tagify\/raw\/198c0451fad188390390395ccfc84ab371def4c7\/src%2Ftagify.js', 'patch': '@@ -101,7 +101,7 @@ Tagify.prototype = {\\n \\n         _s.disabled = input.hasAttribute(\\'disabled\\')\\n         _s.readonly = _s.readonly || input.hasAttribute(\\'readonly\\')\\n-        _s.placeholder = input.getAttribute(\\'placeholder\\') || _s.placeholder || \"\"\\n+        _s.placeholder = escapeHTML(input.getAttribute(\\'placeholder\\') || _s.placeholder || \"\")\\n         _s.required = input.hasAttribute(\\'required\\')\\n \\n         for( let name in _s.classNames )'}}",
      "message_norm":"fixes #989 - fix xss",
      "language":"ca",
      "entities":"[('fixes', 'ACTION', ''), ('#989', 'ISSUE', ''), ('xss', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/tagify.js'])",
      "num_files":1.0,
      "patch_content":"From 198c0451fad188390390395ccfc84ab371def4c7 Mon Sep 17 00:00:00 2001\nFrom: Yair Even Or <Yair.Even-Or@amdocs.com>\nDate: Thu, 17 Feb 2022 10:16:09 +0200\nSubject: [PATCH] fixes #989 - fix XSS\n\n---\n src\/tagify.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/tagify.js b\/src\/tagify.js\nindex 2929ae27..63d5d93f 100644\n--- a\/src\/tagify.js\n+++ b\/src\/tagify.js\n@@ -101,7 +101,7 @@ Tagify.prototype = {\n \n         _s.disabled = input.hasAttribute('disabled')\n         _s.readonly = _s.readonly || input.hasAttribute('readonly')\n-        _s.placeholder = input.getAttribute('placeholder') || _s.placeholder || \"\"\n+        _s.placeholder = escapeHTML(input.getAttribute('placeholder') || _s.placeholder || \"\")\n         _s.required = input.hasAttribute('required')\n \n         for( let name in _s.classNames )",
      "code_diff":"@@ -101,7 +101,7 @@ Tagify.prototype = {\n \n         _s.disabled = input.hasAttribute('disabled')\n         _s.readonly = _s.readonly || input.hasAttribute('readonly')\n-        _s.placeholder = input.getAttribute('placeholder') || _s.placeholder || \"\"\n+        _s.placeholder = escapeHTML(input.getAttribute('placeholder') || _s.placeholder || \"\")\n         _s.required = input.hasAttribute('required')\n \n         for( let name in _s.classNames )"
    },
    {
      "index":51,
      "vuln_id":"GHSA-6hjc-m38h-7jhh",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/4e46b792ce973ac0c652fb330055f41aca1981c8', 'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in SEOmatic plugin A cross-site scripting (XSS) vulnerability in the SEOmatic plugin 3.4.10 for Craft CMS 3 allows remote attackers to inject arbitrary web script via a GET to \/index.php?action=seomatic\/file\/seo-file-link with url parameter containing the base64 encoded URL of a malicious web page \/ file and fileName parameter containing an arbitrary filename with the intended content-type to be rendered in the user's browser as the extension.",
      "published_date":"2022-06-13",
      "chain_len":2,
      "project":"https:\/\/github.com\/nystudio107\/craft-seomatic",
      "commit_href":"https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/4e46b792ce973ac0c652fb330055f41aca1981c8",
      "commit_sha":"4e46b792ce973ac0c652fb330055f41aca1981c8",
      "patch":"MULTI",
      "chain_ord":"['5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873', '4e46b792ce973ac0c652fb330055f41aca1981c8']",
      "before_first_fix_commit":"{'8c0dc48d026fd076cd0a8fae917bdadc8d67cfa6'}",
      "last_fix_commit":"4e46b792ce973ac0c652fb330055f41aca1981c8",
      "chain_ord_pos":2.0,
      "commit_datetime":"09\/24\/2021, 15:01:54",
      "message":"Disallow SVGs",
      "author":"Andrew Welch",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'src\/controllers\/FileController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nystudio107\/craft-seomatic\/raw\/4e46b792ce973ac0c652fb330055f41aca1981c8\/src%2Fcontrollers%2FFileController.php', 'patch': \"@@ -96,7 +96,7 @@ public function actionSeoFileLink($url, $robots = '', $canonical = '', $inline =\\n             if (($ext = pathinfo($fileName, PATHINFO_EXTENSION)) !== '') {\\n                 $ext = strtolower($ext);\\n             }\\n-            if ($ext === '' || !in_array($ext, $allowedExtensions, true)) {\\n+            if ($ext === '' || $ext === 'svg' || !in_array($ext, $allowedExtensions, true)) {\\n                 throw new ServerErrorHttpException(Craft::t('seomatic', 'File format not allowed.'));\\n             }\\n             \/\/ Send the file as a stream, so it can exist anywhere\"}}",
      "message_norm":"disallow svgs",
      "language":"it",
      "entities":null,
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/controllers\/FileController.php'])",
      "num_files":1.0,
      "patch_content":"From 4e46b792ce973ac0c652fb330055f41aca1981c8 Mon Sep 17 00:00:00 2001\nFrom: Andrew Welch <andrew@keluli.local>\nDate: Fri, 24 Sep 2021 11:01:54 -0400\nSubject: [PATCH] Disallow SVGs\n\n---\n src\/controllers\/FileController.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/controllers\/FileController.php b\/src\/controllers\/FileController.php\nindex 33d7f0582..43315dfa6 100644\n--- a\/src\/controllers\/FileController.php\n+++ b\/src\/controllers\/FileController.php\n@@ -96,7 +96,7 @@ public function actionSeoFileLink($url, $robots = '', $canonical = '', $inline =\n             if (($ext = pathinfo($fileName, PATHINFO_EXTENSION)) !== '') {\n                 $ext = strtolower($ext);\n             }\n-            if ($ext === '' || !in_array($ext, $allowedExtensions, true)) {\n+            if ($ext === '' || $ext === 'svg' || !in_array($ext, $allowedExtensions, true)) {\n                 throw new ServerErrorHttpException(Craft::t('seomatic', 'File format not allowed.'));\n             }\n             \/\/ Send the file as a stream, so it can exist anywhere",
      "code_diff":"@@ -96,7 +96,7 @@ public function actionSeoFileLink($url, $robots = '', $canonical = '', $inline =\n             if (($ext = pathinfo($fileName, PATHINFO_EXTENSION)) !== '') {\n                 $ext = strtolower($ext);\n             }\n-            if ($ext === '' || !in_array($ext, $allowedExtensions, true)) {\n+            if ($ext === '' || $ext === 'svg' || !in_array($ext, $allowedExtensions, true)) {\n                 throw new ServerErrorHttpException(Craft::t('seomatic', 'File format not allowed.'));\n             }\n             \/\/ Send the file as a stream, so it can exist anywhere"
    },
    {
      "index":52,
      "vuln_id":"GHSA-9g3v-j3cr-6fc6",
      "cwe_id":"{'CWE-79'}",
      "score":6.8,
      "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in snipe-it snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "published_date":"2021-10-21",
      "chain_len":1,
      "project":"https:\/\/github.com\/snipe\/snipe-it",
      "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
      "commit_sha":"bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
      "patch":"SINGLE",
      "chain_ord":"['bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c']",
      "before_first_fix_commit":"{'5d94b99035317cd23059c7af91ff5f38177f5968'}",
      "last_fix_commit":"bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
      "chain_ord_pos":1.0,
      "commit_datetime":"10\/15\/2021, 16:50:52",
      "message":"Fixes possible XSS on all-file-types export\n\nSigned-off-by: snipe <snipe@snipe.net>",
      "author":"snipe",
      "comments":null,
      "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
      "files":"{'resources\/views\/partials\/bootstrap-table.blade.php': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c\/resources%2Fviews%2Fpartials%2Fbootstrap-table.blade.php', 'patch': '@@ -75,6 +75,10 @@ classes: \\'table table-responsive table-no-bordered\\',\\n                 export: \\'fa-download\\',\\n                 clearSearch: \\'fa-times\\'\\n             },\\n+            exportOptions: {\\n+                htmlContent: true,\\n+            },\\n+\\n             exportTypes: [\\'csv\\', \\'excel\\', \\'doc\\', \\'txt\\',\\'json\\', \\'xml\\', \\'pdf\\'],\\n             onLoadSuccess: function () {\\n                 $(\\'[data-toggle=\"tooltip\"]\\').tooltip(); \/\/ Needed to attach tooltips after ajax call'}}",
      "message_norm":"fixes possible xss on all-file-types export\n\nsigned-off-by: snipe <snipe@snipe.net>",
      "language":"en",
      "entities":"[('xss', 'SECWORD', ''), ('snipe@snipe.net', 'EMAIL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['resources\/views\/partials\/bootstrap-table.blade.php'])",
      "num_files":1.0,
      "patch_content":"From bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c Mon Sep 17 00:00:00 2001\nFrom: snipe <snipe@snipe.net>\nDate: Fri, 15 Oct 2021 11:50:52 -0500\nSubject: [PATCH] Fixes possible XSS on all-file-types export\n\nSigned-off-by: snipe <snipe@snipe.net>\n---\n resources\/views\/partials\/bootstrap-table.blade.php | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/resources\/views\/partials\/bootstrap-table.blade.php b\/resources\/views\/partials\/bootstrap-table.blade.php\nindex 7ad14bf9059f..130bc9c2d3e1 100644\n--- a\/resources\/views\/partials\/bootstrap-table.blade.php\n+++ b\/resources\/views\/partials\/bootstrap-table.blade.php\n@@ -75,6 +75,10 @@ classes: 'table table-responsive table-no-bordered',\n                 export: 'fa-download',\n                 clearSearch: 'fa-times'\n             },\n+            exportOptions: {\n+                htmlContent: true,\n+            },\n+\n             exportTypes: ['csv', 'excel', 'doc', 'txt','json', 'xml', 'pdf'],\n             onLoadSuccess: function () {\n                 $('[data-toggle=\"tooltip\"]').tooltip(); \/\/ Needed to attach tooltips after ajax call",
      "code_diff":"@@ -75,6 +75,10 @@ classes: 'table table-responsive table-no-bordered',\n                 export: 'fa-download',\n                 clearSearch: 'fa-times'\n             },\n+            exportOptions: {\n+                htmlContent: true,\n+            },\n+\n             exportTypes: ['csv', 'excel', 'doc', 'txt','json', 'xml', 'pdf'],\n             onLoadSuccess: function () {\n                 $('[data-toggle=\"tooltip\"]').tooltip(); \/\/ Needed to attach tooltips after ajax call"
    },
    {
      "index":53,
      "vuln_id":"GHSA-6qcc-whgp-pjj2",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/8ab06bfbb5a05a1b190731d9c7476ec45f5ee878'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in Pimcore Pimcore version 10.3.2 and prior is vulnerable to stored cross-site scripting. A patch is available and anticipated to be part of version 10.3.3.",
      "published_date":"2022-03-05",
      "chain_len":1,
      "project":"https:\/\/github.com\/pimcore\/pimcore",
      "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/8ab06bfbb5a05a1b190731d9c7476ec45f5ee878",
      "commit_sha":"8ab06bfbb5a05a1b190731d9c7476ec45f5ee878",
      "patch":"SINGLE",
      "chain_ord":"['8ab06bfbb5a05a1b190731d9c7476ec45f5ee878']",
      "before_first_fix_commit":"{'cef6fb5a9f385f77b9a1af508ecc45a147476458'}",
      "last_fix_commit":"8ab06bfbb5a05a1b190731d9c7476ec45f5ee878",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/02\/2022, 19:06:51",
      "message":"escaping fields in SERP preview",
      "author":"JiaJia Ji",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
      "files":"{'bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/8ab06bfbb5a05a1b190731d9c7476ec45f5ee878\/bundles%2FAdminBundle%2FResources%2Fpublic%2Fjs%2Fpimcore%2Fdocument%2Fpages%2Fsettings.js', 'patch': '@@ -79,8 +79,8 @@ pimcore.document.pages.settings = Class.create(pimcore.document.settings_abstrac\\n             var updateSerpPreview = function () {\\n \\n                 var metaPanel = this.layout.getComponent(\"metaDataPanel\");\\n-                var title = metaPanel.getComponent(\"title\").getValue();\\n-                var description = metaPanel.getComponent(\"description\").getValue();\\n+                var title = htmlspecialchars(metaPanel.getComponent(\"title\").getValue());\\n+                var description = htmlspecialchars(metaPanel.getComponent(\"description\").getValue());\\n \\n                 var truncate = function( text, n ){\\n                     if (text.length <= n) { return text; }'}}",
      "message_norm":"escaping fields in serp preview",
      "language":"en",
      "entities":"[('escaping', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js'])",
      "num_files":1.0,
      "patch_content":"From 8ab06bfbb5a05a1b190731d9c7476ec45f5ee878 Mon Sep 17 00:00:00 2001\nFrom: JiaJia Ji <kingjia90@gmail.com>\nDate: Wed, 2 Mar 2022 20:06:51 +0100\nSubject: [PATCH] escaping fields in SERP preview\n\n---\n ...\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js    | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js b\/bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js\nindex f14c6d28513..3737778b115 100644\n--- a\/bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js\n+++ b\/bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js\n@@ -79,8 +79,8 @@ pimcore.document.pages.settings = Class.create(pimcore.document.settings_abstrac\n             var updateSerpPreview = function () {\n \n                 var metaPanel = this.layout.getComponent(\"metaDataPanel\");\n-                var title = metaPanel.getComponent(\"title\").getValue();\n-                var description = metaPanel.getComponent(\"description\").getValue();\n+                var title = htmlspecialchars(metaPanel.getComponent(\"title\").getValue());\n+                var description = htmlspecialchars(metaPanel.getComponent(\"description\").getValue());\n \n                 var truncate = function( text, n ){\n                     if (text.length <= n) { return text; }",
      "code_diff":"@@ -79,8 +79,8 @@ pimcore.document.pages.settings = Class.create(pimcore.document.settings_abstrac\n             var updateSerpPreview = function () {\n \n                 var metaPanel = this.layout.getComponent(\"metaDataPanel\");\n-                var title = metaPanel.getComponent(\"title\").getValue();\n-                var description = metaPanel.getComponent(\"description\").getValue();\n+                var title = htmlspecialchars(metaPanel.getComponent(\"title\").getValue());\n+                var description = htmlspecialchars(metaPanel.getComponent(\"description\").getValue());\n \n                 var truncate = function( text, n ){\n                     if (text.length <= n) { return text; }"
    },
    {
      "index":54,
      "vuln_id":"GHSA-4fc4-4p5g-6w89",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/ckeditor\/ckeditor4\/commit\/d158413449692d920a778503502dcb22881bc949'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in CKEditor4 ### Affected packages\nThe vulnerability has been discovered in the core HTML processing module and may affect all plugins used by CKEditor 4.\n\n### Impact\nA potential vulnerability has been discovered in CKEditor 4 HTML processing core module. The vulnerability allowed to inject malformed HTML bypassing content sanitization, which could result in executing JavaScript code. It affects all users using the CKEditor 4 at version < 4.18.0.\n\n### Patches\nThe problem has been recognized and patched. The fix will be available in version 4.18.0.\n\n### For more information\nEmail us at security@cksource.com if you have any questions or comments about this advisory.\n\n### Acknowledgements\nThe CKEditor 4 team would like to thank GHSL team member Kevin Backhouse ([@kevinbackhouse](https:\/\/github.com\/kevinbackhouse)) for recognizing and reporting this vulnerability.",
      "published_date":"2022-03-16",
      "chain_len":1,
      "project":"https:\/\/github.com\/ckeditor\/ckeditor4",
      "commit_href":"https:\/\/github.com\/ckeditor\/ckeditor4\/commit\/d158413449692d920a778503502dcb22881bc949",
      "commit_sha":"d158413449692d920a778503502dcb22881bc949",
      "patch":"SINGLE",
      "chain_ord":"['d158413449692d920a778503502dcb22881bc949']",
      "before_first_fix_commit":"{'8cff1e5aee3d766068792a374ba6b54a5cb92e2d'}",
      "last_fix_commit":"d158413449692d920a778503502dcb22881bc949",
      "chain_ord_pos":1.0,
      "commit_datetime":"02\/08\/2022, 16:35:34",
      "message":"Code refactoring.",
      "author":"Tomasz Jakut",
      "comments":null,
      "stats":"{'additions': 26, 'deletions': 14, 'total': 40}",
      "files":"{'core\/htmldataprocessor.js': {'additions': 26, 'deletions': 14, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ckeditor\/ckeditor4\/raw\/d158413449692d920a778503502dcb22881bc949\/core%2Fhtmldataprocessor.js', 'patch': '@@ -50,17 +50,18 @@\\n \\t\\thtmlFilter.addRules( createBogusAndFillerRules( editor, \\'html\\' ), { applyToAll: true } );\\n \\n \\t\\teditor.on( \\'toHtml\\', function( evt ) {\\n-\\t\\t\\tvar evtData = evt.data,\\n+\\t\\t\\tvar randomNumber = generateRandomNumber(),\\n+\\t\\t\\t\\tevtData = evt.data,\\n \\t\\t\\t\\tdata = evtData.dataValue,\\n \\t\\t\\t\\tfixBodyTag;\\n \\n \\t\\t\\t\/\/ Before we start protecting markup, make sure there are no externally injected\\n \\t\\t\\t\/\/ protection keywords.\\n-\\t\\t\\tdata = removeReservedKeywords( data );\\n+\\t\\t\\tdata = removeReservedKeywords( data, randomNumber );\\n \\n \\t\\t\\t\/\/ The source data is already HTML, but we need to clean\\n \\t\\t\\t\/\/ it up and apply the filter.\\n-\\t\\t\\tdata = protectSource( data, editor );\\n+\\t\\t\\tdata = protectSource( data, editor, randomNumber );\\n \\n \\t\\t\\t\/\/ Protect content of textareas. (https:\/\/dev.ckeditor.com\/ticket\/9995)\\n \\t\\t\\t\/\/ Do this before protecting attributes to avoid breaking:\\n@@ -70,7 +71,7 @@\\n \\t\\t\\t\/\/ Before anything, we must protect the URL attributes as the\\n \\t\\t\\t\/\/ browser may changing them when setting the innerHTML later in\\n \\t\\t\\t\/\/ the code.\\n-\\t\\t\\tdata = protectAttributes( data );\\n+\\t\\t\\tdata = protectAttributes( data, randomNumber );\\n \\n \\t\\t\\t\/\/ Protect elements than can\\'t be set inside a DIV. E.g. IE removes\\n \\t\\t\\t\/\/ style tags from innerHTML. (https:\/\/dev.ckeditor.com\/ticket\/3710)\\n@@ -90,7 +91,7 @@\\n \\n \\t\\t\\t\/\/ There are attributes which may execute JavaScript code inside fixBin.\\n \\t\\t\\t\/\/ Encode them greedily. They will be unprotected right after getting HTML from fixBin. (https:\/\/dev.ckeditor.com\/ticket\/10)\\n-\\t\\t\\tdata = protectInsecureAttributes( data );\\n+\\t\\t\\tdata = protectInsecureAttributes( data, randomNumber );\\n \\n \\t\\t\\tvar fixBin = evtData.context || editor.editable().getName(),\\n \\t\\t\\t\\tisPre;\\n@@ -110,7 +111,7 @@\\n \\t\\t\\tdata = el.getHtml().substr( 1 );\\n \\n \\t\\t\\t\/\/ Restore shortly protected attribute names.\\n-\\t\\t\\tdata = data.replace( new RegExp( \\'data-cke-\\' + CKEDITOR.rnd + \\'-\\', \\'ig\\' ), \\'\\' );\\n+\\t\\t\\tdata = data.replace( new RegExp( \\'data-cke-\\' + randomNumber + \\'-\\', \\'ig\\' ), \\'\\' );\\n \\n \\t\\t\\tisPre && ( data = data.replace( \/^<pre>|<\\\\\/pre>$\/gi, \\'\\' ) );\\n \\n@@ -838,13 +839,13 @@\\n \\n \\tvar protectSelfClosingRegex = \/<cke:(param|embed)([^>]*?)\\\\\/?>(?!\\\\s*<\\\\\/cke:\\\\1)\/gi;\\n \\n-\\tfunction protectAttributes( html ) {\\n+\\tfunction protectAttributes( html, randomNumber ) {\\n \\t\\treturn html.replace( protectElementRegex, function( element, tag, attributes ) {\\n \\t\\t\\treturn \\'<\\' + tag + attributes.replace( protectAttributeRegex, function( fullAttr, attrName ) {\\n \\t\\t\\t\\t\/\/ Avoid corrupting the inline event attributes (https:\/\/dev.ckeditor.com\/ticket\/7243).\\n \\t\\t\\t\\t\/\/ We should not rewrite the existed protected attributes, e.g. clipboard content from editor. (https:\/\/dev.ckeditor.com\/ticket\/5218)\\n \\t\\t\\t\\tif ( protectAttributeNameRegex.test( attrName ) && attributes.indexOf( \\'data-cke-saved-\\' + attrName ) == -1 )\\n-\\t\\t\\t\\t\\treturn \\' data-cke-saved-\\' + fullAttr + \\' data-cke-\\' + CKEDITOR.rnd + \\'-\\' + fullAttr;\\n+\\t\\t\\t\\t\\treturn \\' data-cke-saved-\\' + fullAttr + \\' data-cke-\\' + randomNumber + \\'-\\' + fullAttr;\\n \\n \\t\\t\\t\\treturn fullAttr;\\n \\t\\t\\t} ) + \\'>\\';\\n@@ -897,8 +898,8 @@\\n \\t\/\/ * opening tags - e.g. `<onfoo`,\\n \\t\/\/ * closing tags - e.g. <\/onfoo> (tested in \"false positive 1\"),\\n \\t\/\/ * part of other attribute - e.g. `data-onfoo` or `fonfoo`.\\n-\\tfunction protectInsecureAttributes( html ) {\\n-\\t\\treturn html.replace( \/([^a-z0-9<\\\\-])(on\\\\w{3,})(?!>)\/gi, \\'$1data-cke-\\' + CKEDITOR.rnd + \\'-$2\\' );\\n+\\tfunction protectInsecureAttributes( html, randomNumber ) {\\n+\\t\\treturn html.replace( \/([^a-z0-9<\\\\-])(on\\\\w{3,})(?!>)\/gi, \\'$1data-cke-\\' + randomNumber + \\'-$2\\' );\\n \\t}\\n \\n \\tfunction unprotectRealComments( html ) {\\n@@ -917,11 +918,11 @@\\n \\t\\t} );\\n \\t}\\n \\n-\\tfunction protectSource( data, editor ) {\\n+\\tfunction protectSource( data, editor, randomNumber ) {\\n \\t\\tvar protectedHtml = [],\\n \\t\\t\\tprotectRegexes = editor.config.protectedSource,\\n \\t\\t\\tstore = editor._.dataStore || ( editor._.dataStore = { id: 1 } ),\\n-\\t\\t\\ttempRegex = \/<\\\\!--\\\\{cke_temp(comment)?\\\\}(\\\\d*?)-->\/g;\\n+\\t\\t\\ttempRegex = new RegExp(\\'<\\\\\\\\!--\\\\\\\\{cke_temp_\\' + randomNumber + \\'(comment)?\\\\\\\\}(\\\\\\\\d*?)-->\\', \\'g\\' );\\n \\n \\t\\tvar regexes = [\\n \\t\\t\\t\/\/ Script tags will also be forced to be protected, otherwise\\n@@ -940,7 +941,7 @@\\n \\t\\t\/\/ Note that we use a different tag for comments, as we need to\\n \\t\\t\/\/ transform them when applying filters.\\n \\t\\tdata = data.replace( ( \/<!--[\\\\s\\\\S]*?-->\/g ), function( match ) {\\n-\\t\\t\\treturn \\'<!--{cke_tempcomment}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n+\\t\\t\\treturn \\'<!--{cke_temp_\\' + randomNumber + \\'comment}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n \\t\\t} );\\n \\n \\t\\tfor ( var i = 0; i < regexes.length; i++ ) {\\n@@ -951,7 +952,8 @@\\n \\t\\t\\t\\t} );\\n \\n \\t\\t\\t\\t\/\/ Avoid protecting over protected, e.g. \/\\\\{.*?\\\\}\/\\n-\\t\\t\\t\\treturn ( \/cke_temp(comment)?\/ ).test( match ) ? match : \\'<!--{cke_temp}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n+\\t\\t\\t\\treturn ( tempRegex ).test( match ) ? match : \\'<!--{cke_temp_\\' + randomNumber + \\'}\\' +\\n+\\t\\t\\t\\t\\t( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n \\t\\t\\t} );\\n \\t\\t}\\n \\t\\tdata = data.replace( tempRegex, function( $, isComment, id ) {\\n@@ -1107,6 +1109,16 @@\\n \\t\\t\\t};\\n \\t\\t}\\n \\t} )();\\n+\\n+\\tfunction generateRandomNumber() {\\n+\\t\\tvar cryptoApi = window.crypto || window.msCrypto;\\n+\\n+\\t\\tif ( cryptoApi ) {\\n+\\t\\t\\treturn cryptoApi.getRandomValues( new Uint32Array( 1 ) )[ 0 ];\\n+\\t\\t}\\n+\\n+\\t\\treturn Math.floor( Math.random() *  9000000000 + 1000000000 );\\n+\\t}\\n } )();\\n \\n \/**'}}",
      "message_norm":"code refactoring.",
      "language":"en",
      "entities":null,
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['core\/htmldataprocessor.js'])",
      "num_files":1.0,
      "patch_content":"From d158413449692d920a778503502dcb22881bc949 Mon Sep 17 00:00:00 2001\nFrom: Tomasz Jakut <vepomoc@gmail.com>\nDate: Tue, 8 Feb 2022 17:35:34 +0100\nSubject: [PATCH] Code refactoring.\n\n---\n core\/htmldataprocessor.js | 40 +++++++++++++++++++++++++--------------\n 1 file changed, 26 insertions(+), 14 deletions(-)\n\ndiff --git a\/core\/htmldataprocessor.js b\/core\/htmldataprocessor.js\nindex a57e4b53d60..9c969631609 100644\n--- a\/core\/htmldataprocessor.js\n+++ b\/core\/htmldataprocessor.js\n@@ -50,17 +50,18 @@\n \t\thtmlFilter.addRules( createBogusAndFillerRules( editor, 'html' ), { applyToAll: true } );\n \n \t\teditor.on( 'toHtml', function( evt ) {\n-\t\t\tvar evtData = evt.data,\n+\t\t\tvar randomNumber = generateRandomNumber(),\n+\t\t\t\tevtData = evt.data,\n \t\t\t\tdata = evtData.dataValue,\n \t\t\t\tfixBodyTag;\n \n \t\t\t\/\/ Before we start protecting markup, make sure there are no externally injected\n \t\t\t\/\/ protection keywords.\n-\t\t\tdata = removeReservedKeywords( data );\n+\t\t\tdata = removeReservedKeywords( data, randomNumber );\n \n \t\t\t\/\/ The source data is already HTML, but we need to clean\n \t\t\t\/\/ it up and apply the filter.\n-\t\t\tdata = protectSource( data, editor );\n+\t\t\tdata = protectSource( data, editor, randomNumber );\n \n \t\t\t\/\/ Protect content of textareas. (https:\/\/dev.ckeditor.com\/ticket\/9995)\n \t\t\t\/\/ Do this before protecting attributes to avoid breaking:\n@@ -70,7 +71,7 @@\n \t\t\t\/\/ Before anything, we must protect the URL attributes as the\n \t\t\t\/\/ browser may changing them when setting the innerHTML later in\n \t\t\t\/\/ the code.\n-\t\t\tdata = protectAttributes( data );\n+\t\t\tdata = protectAttributes( data, randomNumber );\n \n \t\t\t\/\/ Protect elements than can't be set inside a DIV. E.g. IE removes\n \t\t\t\/\/ style tags from innerHTML. (https:\/\/dev.ckeditor.com\/ticket\/3710)\n@@ -90,7 +91,7 @@\n \n \t\t\t\/\/ There are attributes which may execute JavaScript code inside fixBin.\n \t\t\t\/\/ Encode them greedily. They will be unprotected right after getting HTML from fixBin. (https:\/\/dev.ckeditor.com\/ticket\/10)\n-\t\t\tdata = protectInsecureAttributes( data );\n+\t\t\tdata = protectInsecureAttributes( data, randomNumber );\n \n \t\t\tvar fixBin = evtData.context || editor.editable().getName(),\n \t\t\t\tisPre;\n@@ -110,7 +111,7 @@\n \t\t\tdata = el.getHtml().substr( 1 );\n \n \t\t\t\/\/ Restore shortly protected attribute names.\n-\t\t\tdata = data.replace( new RegExp( 'data-cke-' + CKEDITOR.rnd + '-', 'ig' ), '' );\n+\t\t\tdata = data.replace( new RegExp( 'data-cke-' + randomNumber + '-', 'ig' ), '' );\n \n \t\t\tisPre && ( data = data.replace( \/^<pre>|<\\\/pre>$\/gi, '' ) );\n \n@@ -838,13 +839,13 @@\n \n \tvar protectSelfClosingRegex = \/<cke:(param|embed)([^>]*?)\\\/?>(?!\\s*<\\\/cke:\\1)\/gi;\n \n-\tfunction protectAttributes( html ) {\n+\tfunction protectAttributes( html, randomNumber ) {\n \t\treturn html.replace( protectElementRegex, function( element, tag, attributes ) {\n \t\t\treturn '<' + tag + attributes.replace( protectAttributeRegex, function( fullAttr, attrName ) {\n \t\t\t\t\/\/ Avoid corrupting the inline event attributes (https:\/\/dev.ckeditor.com\/ticket\/7243).\n \t\t\t\t\/\/ We should not rewrite the existed protected attributes, e.g. clipboard content from editor. (https:\/\/dev.ckeditor.com\/ticket\/5218)\n \t\t\t\tif ( protectAttributeNameRegex.test( attrName ) && attributes.indexOf( 'data-cke-saved-' + attrName ) == -1 )\n-\t\t\t\t\treturn ' data-cke-saved-' + fullAttr + ' data-cke-' + CKEDITOR.rnd + '-' + fullAttr;\n+\t\t\t\t\treturn ' data-cke-saved-' + fullAttr + ' data-cke-' + randomNumber + '-' + fullAttr;\n \n \t\t\t\treturn fullAttr;\n \t\t\t} ) + '>';\n@@ -897,8 +898,8 @@\n \t\/\/ * opening tags - e.g. `<onfoo`,\n \t\/\/ * closing tags - e.g. <\/onfoo> (tested in \"false positive 1\"),\n \t\/\/ * part of other attribute - e.g. `data-onfoo` or `fonfoo`.\n-\tfunction protectInsecureAttributes( html ) {\n-\t\treturn html.replace( \/([^a-z0-9<\\-])(on\\w{3,})(?!>)\/gi, '$1data-cke-' + CKEDITOR.rnd + '-$2' );\n+\tfunction protectInsecureAttributes( html, randomNumber ) {\n+\t\treturn html.replace( \/([^a-z0-9<\\-])(on\\w{3,})(?!>)\/gi, '$1data-cke-' + randomNumber + '-$2' );\n \t}\n \n \tfunction unprotectRealComments( html ) {\n@@ -917,11 +918,11 @@\n \t\t} );\n \t}\n \n-\tfunction protectSource( data, editor ) {\n+\tfunction protectSource( data, editor, randomNumber ) {\n \t\tvar protectedHtml = [],\n \t\t\tprotectRegexes = editor.config.protectedSource,\n \t\t\tstore = editor._.dataStore || ( editor._.dataStore = { id: 1 } ),\n-\t\t\ttempRegex = \/<\\!--\\{cke_temp(comment)?\\}(\\d*?)-->\/g;\n+\t\t\ttempRegex = new RegExp('<\\\\!--\\\\{cke_temp_' + randomNumber + '(comment)?\\\\}(\\\\d*?)-->', 'g' );\n \n \t\tvar regexes = [\n \t\t\t\/\/ Script tags will also be forced to be protected, otherwise\n@@ -940,7 +941,7 @@\n \t\t\/\/ Note that we use a different tag for comments, as we need to\n \t\t\/\/ transform them when applying filters.\n \t\tdata = data.replace( ( \/<!--[\\s\\S]*?-->\/g ), function( match ) {\n-\t\t\treturn '<!--{cke_tempcomment}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n+\t\t\treturn '<!--{cke_temp_' + randomNumber + 'comment}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n \t\t} );\n \n \t\tfor ( var i = 0; i < regexes.length; i++ ) {\n@@ -951,7 +952,8 @@\n \t\t\t\t} );\n \n \t\t\t\t\/\/ Avoid protecting over protected, e.g. \/\\{.*?\\}\/\n-\t\t\t\treturn ( \/cke_temp(comment)?\/ ).test( match ) ? match : '<!--{cke_temp}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n+\t\t\t\treturn ( tempRegex ).test( match ) ? match : '<!--{cke_temp_' + randomNumber + '}' +\n+\t\t\t\t\t( protectedHtml.push( match ) - 1 ) + '-->';\n \t\t\t} );\n \t\t}\n \t\tdata = data.replace( tempRegex, function( $, isComment, id ) {\n@@ -1107,6 +1109,16 @@\n \t\t\t};\n \t\t}\n \t} )();\n+\n+\tfunction generateRandomNumber() {\n+\t\tvar cryptoApi = window.crypto || window.msCrypto;\n+\n+\t\tif ( cryptoApi ) {\n+\t\t\treturn cryptoApi.getRandomValues( new Uint32Array( 1 ) )[ 0 ];\n+\t\t}\n+\n+\t\treturn Math.floor( Math.random() *  9000000000 + 1000000000 );\n+\t}\n } )();\n \n \/**",
      "code_diff":"@@ -50,17 +50,18 @@\n \t\thtmlFilter.addRules( createBogusAndFillerRules( editor, 'html' ), { applyToAll: true } );\n \n \t\teditor.on( 'toHtml', function( evt ) {\n-\t\t\tvar evtData = evt.data,\n+\t\t\tvar randomNumber = generateRandomNumber(),\n+\t\t\t\tevtData = evt.data,\n \t\t\t\tdata = evtData.dataValue,\n \t\t\t\tfixBodyTag;\n \n \t\t\t\/\/ Before we start protecting markup, make sure there are no externally injected\n \t\t\t\/\/ protection keywords.\n-\t\t\tdata = removeReservedKeywords( data );\n+\t\t\tdata = removeReservedKeywords( data, randomNumber );\n \n \t\t\t\/\/ The source data is already HTML, but we need to clean\n \t\t\t\/\/ it up and apply the filter.\n-\t\t\tdata = protectSource( data, editor );\n+\t\t\tdata = protectSource( data, editor, randomNumber );\n \n \t\t\t\/\/ Protect content of textareas. (https:\/\/dev.ckeditor.com\/ticket\/9995)\n \t\t\t\/\/ Do this before protecting attributes to avoid breaking:\n@@ -70,7 +71,7 @@\n \t\t\t\/\/ Before anything, we must protect the URL attributes as the\n \t\t\t\/\/ browser may changing them when setting the innerHTML later in\n \t\t\t\/\/ the code.\n-\t\t\tdata = protectAttributes( data );\n+\t\t\tdata = protectAttributes( data, randomNumber );\n \n \t\t\t\/\/ Protect elements than can't be set inside a DIV. E.g. IE removes\n \t\t\t\/\/ style tags from innerHTML. (https:\/\/dev.ckeditor.com\/ticket\/3710)\n@@ -90,7 +91,7 @@\n \n \t\t\t\/\/ There are attributes which may execute JavaScript code inside fixBin.\n \t\t\t\/\/ Encode them greedily. They will be unprotected right after getting HTML from fixBin. (https:\/\/dev.ckeditor.com\/ticket\/10)\n-\t\t\tdata = protectInsecureAttributes( data );\n+\t\t\tdata = protectInsecureAttributes( data, randomNumber );\n \n \t\t\tvar fixBin = evtData.context || editor.editable().getName(),\n \t\t\t\tisPre;\n@@ -110,7 +111,7 @@\n \t\t\tdata = el.getHtml().substr( 1 );\n \n \t\t\t\/\/ Restore shortly protected attribute names.\n-\t\t\tdata = data.replace( new RegExp( 'data-cke-' + CKEDITOR.rnd + '-', 'ig' ), '' );\n+\t\t\tdata = data.replace( new RegExp( 'data-cke-' + randomNumber + '-', 'ig' ), '' );\n \n \t\t\tisPre && ( data = data.replace( \/^<pre>|<\\\/pre>$\/gi, '' ) );\n \n@@ -838,13 +839,13 @@\n \n \tvar protectSelfClosingRegex = \/<cke:(param|embed)([^>]*?)\\\/?>(?!\\s*<\\\/cke:\\1)\/gi;\n \n-\tfunction protectAttributes( html ) {\n+\tfunction protectAttributes( html, randomNumber ) {\n \t\treturn html.replace( protectElementRegex, function( element, tag, attributes ) {\n \t\t\treturn '<' + tag + attributes.replace( protectAttributeRegex, function( fullAttr, attrName ) {\n \t\t\t\t\/\/ Avoid corrupting the inline event attributes (https:\/\/dev.ckeditor.com\/ticket\/7243).\n \t\t\t\t\/\/ We should not rewrite the existed protected attributes, e.g. clipboard content from editor. (https:\/\/dev.ckeditor.com\/ticket\/5218)\n \t\t\t\tif ( protectAttributeNameRegex.test( attrName ) && attributes.indexOf( 'data-cke-saved-' + attrName ) == -1 )\n-\t\t\t\t\treturn ' data-cke-saved-' + fullAttr + ' data-cke-' + CKEDITOR.rnd + '-' + fullAttr;\n+\t\t\t\t\treturn ' data-cke-saved-' + fullAttr + ' data-cke-' + randomNumber + '-' + fullAttr;\n \n \t\t\t\treturn fullAttr;\n \t\t\t} ) + '>';\n@@ -897,8 +898,8 @@\n \t\/\/ * opening tags - e.g. `<onfoo`,\n \t\/\/ * closing tags - e.g. <\/onfoo> (tested in \"false positive 1\"),\n \t\/\/ * part of other attribute - e.g. `data-onfoo` or `fonfoo`.\n-\tfunction protectInsecureAttributes( html ) {\n-\t\treturn html.replace( \/([^a-z0-9<\\-])(on\\w{3,})(?!>)\/gi, '$1data-cke-' + CKEDITOR.rnd + '-$2' );\n+\tfunction protectInsecureAttributes( html, randomNumber ) {\n+\t\treturn html.replace( \/([^a-z0-9<\\-])(on\\w{3,})(?!>)\/gi, '$1data-cke-' + randomNumber + '-$2' );\n \t}\n \n \tfunction unprotectRealComments( html ) {\n@@ -917,11 +918,11 @@\n \t\t} );\n \t}\n \n-\tfunction protectSource( data, editor ) {\n+\tfunction protectSource( data, editor, randomNumber ) {\n \t\tvar protectedHtml = [],\n \t\t\tprotectRegexes = editor.config.protectedSource,\n \t\t\tstore = editor._.dataStore || ( editor._.dataStore = { id: 1 } ),\n-\t\t\ttempRegex = \/<\\!--\\{cke_temp(comment)?\\}(\\d*?)-->\/g;\n+\t\t\ttempRegex = new RegExp('<\\\\!--\\\\{cke_temp_' + randomNumber + '(comment)?\\\\}(\\\\d*?)-->', 'g' );\n \n \t\tvar regexes = [\n \t\t\t\/\/ Script tags will also be forced to be protected, otherwise\n@@ -940,7 +941,7 @@\n \t\t\/\/ Note that we use a different tag for comments, as we need to\n \t\t\/\/ transform them when applying filters.\n \t\tdata = data.replace( ( \/<!--[\\s\\S]*?-->\/g ), function( match ) {\n-\t\t\treturn '<!--{cke_tempcomment}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n+\t\t\treturn '<!--{cke_temp_' + randomNumber + 'comment}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n \t\t} );\n \n \t\tfor ( var i = 0; i < regexes.length; i++ ) {\n@@ -951,7 +952,8 @@\n \t\t\t\t} );\n \n \t\t\t\t\/\/ Avoid protecting over protected, e.g. \/\\{.*?\\}\/\n-\t\t\t\treturn ( \/cke_temp(comment)?\/ ).test( match ) ? match : '<!--{cke_temp}' + ( protectedHtml.push( match ) - 1 ) + '-->';\n+\t\t\t\treturn ( tempRegex ).test( match ) ? match : '<!--{cke_temp_' + randomNumber + '}' +\n+\t\t\t\t\t( protectedHtml.push( match ) - 1 ) + '-->';\n \t\t\t} );\n \t\t}\n \t\tdata = data.replace( tempRegex, function( $, isComment, id ) {\n@@ -1107,6 +1109,16 @@\n \t\t\t};\n \t\t}\n \t} )();\n+\n+\tfunction generateRandomNumber() {\n+\t\tvar cryptoApi = window.crypto || window.msCrypto;\n+\n+\t\tif ( cryptoApi ) {\n+\t\t\treturn cryptoApi.getRandomValues( new Uint32Array( 1 ) )[ 0 ];\n+\t\t}\n+\n+\t\treturn Math.floor( Math.random() *  9000000000 + 1000000000 );\n+\t}\n } )();\n \n \/**"
    },
    {
      "index":55,
      "vuln_id":"GHSA-fp76-f299-v3hj",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/neorazorx\/facturascripts\/commit\/1d1edb40b40016d7fd2893b410b98569d7facca1'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in FacturaScripts Cross-site Scripting (XSS) - Stored in GitHub repository neorazorx\/facturascripts prior to 2022.06.",
      "published_date":"2022-06-14",
      "chain_len":1,
      "project":"https:\/\/github.com\/neorazorx\/facturascripts",
      "commit_href":"https:\/\/github.com\/neorazorx\/facturascripts\/commit\/1d1edb40b40016d7fd2893b410b98569d7facca1",
      "commit_sha":"1d1edb40b40016d7fd2893b410b98569d7facca1",
      "patch":"SINGLE",
      "chain_ord":"['1d1edb40b40016d7fd2893b410b98569d7facca1']",
      "before_first_fix_commit":"{'73a6595ca85984d65f656c6356fabb23d1936c54'}",
      "last_fix_commit":"1d1edb40b40016d7fd2893b410b98569d7facca1",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/28\/2022, 09:55:32",
      "message":"Force to download SVG files to prevent security problems.\n------\nForzamos a descargar los archivos SVG para evitar problemas de seguridad.",
      "author":"Carlos Garcia Gomez",
      "comments":null,
      "stats":"{'additions': 19, 'deletions': 10, 'total': 29}",
      "files":"{'Core\/App\/AppRouter.php': {'additions': 19, 'deletions': 10, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NeoRazorX\/facturascripts\/raw\/1d1edb40b40016d7fd2893b410b98569d7facca1\/Core%2FApp%2FAppRouter.php', 'patch': '@@ -127,8 +127,7 @@ public function getFile(): bool\\n         $allowedFolders = [\\'node_modules\\', \\'vendor\\', \\'Dinamic\\', \\'Core\\', \\'Plugins\\', \\'MyFiles\/Public\\'];\\n         foreach ($allowedFolders as $folder) {\\n             if (\\'\/\\' . $folder === substr($uri, 0, 1 + strlen($folder))) {\\n-                header(\\'Content-Type: \\' . $this->getMime($filePath));\\n-                readfile($filePath);\\n+                $this->download($filePath);\\n                 return true;\\n             }\\n         }\\n@@ -137,14 +136,7 @@ public function getFile(): bool\\n         $token = filter_input(INPUT_GET, \\'myft\\');\\n         $fixedFilePath = substr(urldecode($uri), 1);\\n         if (\\'\/MyFiles\/\\' === substr($uri, 0, 9) && $token && MyFilesToken::validate($fixedFilePath, $token)) {\\n-            header(\\'Content-Type: \\' . $this->getMime($filePath));\\n-\\n-            \/\/ disable the buffer if enabled\\n-            if (ob_get_contents()) {\\n-                ob_end_flush();\\n-            }\\n-\\n-            readfile($filePath);\\n+            $this->download($filePath);\\n             return true;\\n         }\\n \\n@@ -205,6 +197,23 @@ private function deploy()\\n         }\\n     }\\n \\n+    private function download(string $filePath)\\n+    {\\n+        header(\\'Content-Type: \\' . $this->getMime($filePath));\\n+\\n+        \/\/ disable the buffer if enabled\\n+        if (ob_get_contents()) {\\n+            ob_end_flush();\\n+        }\\n+\\n+        \/\/ force to download svg files to prevent XSS attacks\\n+        if (strpos($filePath, \\'.svg\\') !== false) {\\n+            header(\\'Content-Disposition: attachment; filename=\"\\' . basename($filePath) . \\'\"\\');\\n+        }\\n+\\n+        readfile($filePath);\\n+    }\\n+\\n     \/**\\n      * Return the mime type from given file.\\n      *'}}",
      "message_norm":"force to download svg files to prevent security problems.\n------\nforzamos a descargar los archivos svg para evitar problemas de seguridad.",
      "language":"es",
      "entities":"[('prevent', 'ACTION', ''), ('security', 'SECWORD', ''), ('problems', 'FLAW', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['Core\/App\/AppRouter.php'])",
      "num_files":1.0,
      "patch_content":"From 1d1edb40b40016d7fd2893b410b98569d7facca1 Mon Sep 17 00:00:00 2001\nFrom: Carlos Garcia Gomez <neorazorx@gmail.com>\nDate: Thu, 28 Apr 2022 11:55:32 +0200\nSubject: [PATCH] Force to download SVG files to prevent security problems.\n ------ Forzamos a descargar los archivos SVG para evitar problemas de\n seguridad.\n\n---\n Core\/App\/AppRouter.php | 29 +++++++++++++++++++----------\n 1 file changed, 19 insertions(+), 10 deletions(-)\n\ndiff --git a\/Core\/App\/AppRouter.php b\/Core\/App\/AppRouter.php\nindex 1eed63f833..1de2d09bc9 100644\n--- a\/Core\/App\/AppRouter.php\n+++ b\/Core\/App\/AppRouter.php\n@@ -127,8 +127,7 @@ public function getFile(): bool\n         $allowedFolders = ['node_modules', 'vendor', 'Dinamic', 'Core', 'Plugins', 'MyFiles\/Public'];\n         foreach ($allowedFolders as $folder) {\n             if ('\/' . $folder === substr($uri, 0, 1 + strlen($folder))) {\n-                header('Content-Type: ' . $this->getMime($filePath));\n-                readfile($filePath);\n+                $this->download($filePath);\n                 return true;\n             }\n         }\n@@ -137,14 +136,7 @@ public function getFile(): bool\n         $token = filter_input(INPUT_GET, 'myft');\n         $fixedFilePath = substr(urldecode($uri), 1);\n         if ('\/MyFiles\/' === substr($uri, 0, 9) && $token && MyFilesToken::validate($fixedFilePath, $token)) {\n-            header('Content-Type: ' . $this->getMime($filePath));\n-\n-            \/\/ disable the buffer if enabled\n-            if (ob_get_contents()) {\n-                ob_end_flush();\n-            }\n-\n-            readfile($filePath);\n+            $this->download($filePath);\n             return true;\n         }\n \n@@ -205,6 +197,23 @@ private function deploy()\n         }\n     }\n \n+    private function download(string $filePath)\n+    {\n+        header('Content-Type: ' . $this->getMime($filePath));\n+\n+        \/\/ disable the buffer if enabled\n+        if (ob_get_contents()) {\n+            ob_end_flush();\n+        }\n+\n+        \/\/ force to download svg files to prevent XSS attacks\n+        if (strpos($filePath, '.svg') !== false) {\n+            header('Content-Disposition: attachment; filename=\"' . basename($filePath) . '\"');\n+        }\n+\n+        readfile($filePath);\n+    }\n+\n     \/**\n      * Return the mime type from given file.\n      *",
      "code_diff":"@@ -127,8 +127,7 @@ public function getFile(): bool\n         $allowedFolders = ['node_modules', 'vendor', 'Dinamic', 'Core', 'Plugins', 'MyFiles\/Public'];\n         foreach ($allowedFolders as $folder) {\n             if ('\/' . $folder === substr($uri, 0, 1 + strlen($folder))) {\n-                header('Content-Type: ' . $this->getMime($filePath));\n-                readfile($filePath);\n+                $this->download($filePath);\n                 return true;\n             }\n         }\n@@ -137,14 +136,7 @@ public function getFile(): bool\n         $token = filter_input(INPUT_GET, 'myft');\n         $fixedFilePath = substr(urldecode($uri), 1);\n         if ('\/MyFiles\/' === substr($uri, 0, 9) && $token && MyFilesToken::validate($fixedFilePath, $token)) {\n-            header('Content-Type: ' . $this->getMime($filePath));\n-\n-            \/\/ disable the buffer if enabled\n-            if (ob_get_contents()) {\n-                ob_end_flush();\n-            }\n-\n-            readfile($filePath);\n+            $this->download($filePath);\n             return true;\n         }\n \n@@ -205,6 +197,23 @@ private function deploy()\n         }\n     }\n \n+    private function download(string $filePath)\n+    {\n+        header('Content-Type: ' . $this->getMime($filePath));\n+\n+        \/\/ disable the buffer if enabled\n+        if (ob_get_contents()) {\n+            ob_end_flush();\n+        }\n+\n+        \/\/ force to download svg files to prevent XSS attacks\n+        if (strpos($filePath, '.svg') !== false) {\n+            header('Content-Disposition: attachment; filename=\"' . basename($filePath) . '\"');\n+        }\n+\n+        readfile($filePath);\n+    }\n+\n     \/**\n      * Return the mime type from given file.\n      *"
    },
    {
      "index":56,
      "vuln_id":"GHSA-mxvc-fwgx-j778",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/benbusby\/whoogle-search\/commit\/abc30d7da3b5c67be7ce84d4699f327442d44606'}",
      "dataset":"osv",
      "summary":"Whoogle Search Cross-site Scripting via string parameter The package whoogle-search before 0.7.2 is vulnerable to Cross-site Scripting (XSS) via the query string parameter q. In the case where it does not contain the http string, it is used to build the error_message that is then rendered in the error.html template, using the [flask.render_template](https:\/\/flask.palletsprojects.com\/en\/2.1.x\/api\/flask.render_template) function. However, the error_message is rendered using the [| safe filter](https:\/\/jinja.palletsprojects.com\/en\/3.1.x\/templates\/working-with-automatic-escaping), meaning the user input is not escaped.",
      "published_date":"2022-07-15",
      "chain_len":1,
      "project":"https:\/\/github.com\/benbusby\/whoogle-search",
      "commit_href":"https:\/\/github.com\/benbusby\/whoogle-search\/commit\/abc30d7da3b5c67be7ce84d4699f327442d44606",
      "commit_sha":"abc30d7da3b5c67be7ce84d4699f327442d44606",
      "patch":"SINGLE",
      "chain_ord":"['abc30d7da3b5c67be7ce84d4699f327442d44606']",
      "before_first_fix_commit":"{'d62ceb84239ee0df677851f46eb885c40e98211f'}",
      "last_fix_commit":"abc30d7da3b5c67be7ce84d4699f327442d44606",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/26\/2022, 15:28:05",
      "message":"Render error message w\/o `safe` filter\n\nThe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an XSS\nvulnerability.",
      "author":"Ben Busby",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'app\/templates\/error.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/benbusby\/whoogle-search\/raw\/abc30d7da3b5c67be7ce84d4699f327442d44606\/app%2Ftemplates%2Ferror.html', 'patch': '@@ -16,7 +16,7 @@\\n <div>\\n     <h1>Error<\/h1>\\n     <p>\\n-        {{ error_message|safe }}\\n+        {{ error_message }}\\n     <\/p>\\n     <hr>\\n     <p>'}}",
      "message_norm":"render error message w\/o `safe` filter\n\nthe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an xss\nvulnerability.",
      "language":"en",
      "entities":"[('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('error', 'FLAW', ''), ('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['app\/templates\/error.html'])",
      "num_files":1.0,
      "patch_content":"From abc30d7da3b5c67be7ce84d4699f327442d44606 Mon Sep 17 00:00:00 2001\nFrom: Ben Busby <contact@benbusby.com>\nDate: Tue, 26 Apr 2022 09:28:05 -0600\nSubject: [PATCH] Render error message w\/o `safe` filter\n\nThe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an XSS\nvulnerability.\n---\n app\/templates\/error.html | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/app\/templates\/error.html b\/app\/templates\/error.html\nindex 58f7f4271e..708f74911c 100644\n--- a\/app\/templates\/error.html\n+++ b\/app\/templates\/error.html\n@@ -16,7 +16,7 @@\n <div>\n     <h1>Error<\/h1>\n     <p>\n-        {{ error_message|safe }}\n+        {{ error_message }}\n     <\/p>\n     <hr>\n     <p>",
      "code_diff":"@@ -16,7 +16,7 @@\n <div>\n     <h1>Error<\/h1>\n     <p>\n-        {{ error_message|safe }}\n+        {{ error_message }}\n     <\/p>\n     <hr>\n     <p>"
    },
    {
      "index":57,
      "vuln_id":"GHSA-c65v-p733-9796",
      "cwe_id":"{'CWE-79'}",
      "score":8.0,
      "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in snipe\/snipe-it snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
      "published_date":"2021-11-23",
      "chain_len":1,
      "project":"https:\/\/github.com\/snipe\/snipe-it",
      "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e",
      "commit_sha":"7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e",
      "patch":"SINGLE",
      "chain_ord":"['7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e']",
      "before_first_fix_commit":"{'e75a5f13ecb77a53d93d67c23e9f1b3580fe8092', 'f7b483358ff114b56c753ee9c2964059a55a3bd2'}",
      "last_fix_commit":"7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/16\/2021, 04:33:51",
      "message":"Merge pull request #10315 from snipe\/fixes\/escape_custom_fields_in_api_response\n\nEscape custom field values in API response",
      "author":"snipe",
      "comments":null,
      "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
      "files":"{'app\/Http\/Transformers\/AssetsTransformer.php': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e\/app%2FHttp%2FTransformers%2FAssetsTransformer.php', 'patch': \"@@ -93,15 +93,15 @@ public function transformAsset(Asset $asset)\\n                     $value = (Gate::allows('superadmin')) ? $decrypted : strtoupper(trans('admin\/custom_fields\/general.encrypted'));\\n \\n                     $fields_array[$field->name] = [\\n-                            'field' => $field->convertUnicodeDbSlug(),\\n-                            'value' => $value,\\n+                            'field' => e($field->convertUnicodeDbSlug()),\\n+                            'value' => e($value),\\n                             'field_format' => $field->format,\\n                         ];\\n \\n                 } else {\\n                     $fields_array[$field->name] = [\\n-                        'field' => $field->convertUnicodeDbSlug(),\\n-                        'value' => $asset->{$field->convertUnicodeDbSlug()},\\n+                        'field' => e($field->convertUnicodeDbSlug()),\\n+                        'value' => e($asset->{$field->convertUnicodeDbSlug()}),\\n                         'field_format' => $field->format,\\n                     ];\\n \\n@@ -134,7 +134,7 @@ public function transformAsset(Asset $asset)\\n                         \\n                             'id' => $component->id,\\n                             'pivot_id' => $component->pivot->id,\\n-                            'name' => $component->name,\\n+                            'name' => e($component->name),\\n                             'qty' => $component->pivot->assigned_qty,\\n                             'price_cost' => $component->purchase_cost,\\n                             'purchase_total' => $component->purchase_cost * $component->pivot->assigned_qty,\"}}",
      "message_norm":"merge pull request #10315 from snipe\/fixes\/escape_custom_fields_in_api_response\n\nescape custom field values in api response",
      "language":"ca",
      "entities":"[('#10315', 'ISSUE', ''), ('escape_custom_fields_in_api_response', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['app\/Http\/Transformers\/AssetsTransformer.php'])",
      "num_files":1.0,
      "patch_content":"From f7b483358ff114b56c753ee9c2964059a55a3bd2 Mon Sep 17 00:00:00 2001\nFrom: snipe <snipe@snipe.net>\nDate: Mon, 15 Nov 2021 20:32:59 -0800\nSubject: [PATCH] Escape custom field values in API response\n\nSigned-off-by: snipe <snipe@snipe.net>\n---\n app\/Http\/Transformers\/AssetsTransformer.php | 10 +++++-----\n 1 file changed, 5 insertions(+), 5 deletions(-)\n\ndiff --git a\/app\/Http\/Transformers\/AssetsTransformer.php b\/app\/Http\/Transformers\/AssetsTransformer.php\nindex c323241cf01b..0da314002f54 100644\n--- a\/app\/Http\/Transformers\/AssetsTransformer.php\n+++ b\/app\/Http\/Transformers\/AssetsTransformer.php\n@@ -93,15 +93,15 @@ public function transformAsset(Asset $asset)\n                     $value = (Gate::allows('superadmin')) ? $decrypted : strtoupper(trans('admin\/custom_fields\/general.encrypted'));\n \n                     $fields_array[$field->name] = [\n-                            'field' => $field->convertUnicodeDbSlug(),\n-                            'value' => $value,\n+                            'field' => e($field->convertUnicodeDbSlug()),\n+                            'value' => e($value),\n                             'field_format' => $field->format,\n                         ];\n \n                 } else {\n                     $fields_array[$field->name] = [\n-                        'field' => $field->convertUnicodeDbSlug(),\n-                        'value' => $asset->{$field->convertUnicodeDbSlug()},\n+                        'field' => e($field->convertUnicodeDbSlug()),\n+                        'value' => e($asset->{$field->convertUnicodeDbSlug()}),\n                         'field_format' => $field->format,\n                     ];\n \n@@ -134,7 +134,7 @@ public function transformAsset(Asset $asset)\n                         \n                             'id' => $component->id,\n                             'pivot_id' => $component->pivot->id,\n-                            'name' => $component->name,\n+                            'name' => e($component->name),\n                             'qty' => $component->pivot->assigned_qty,\n                             'price_cost' => $component->purchase_cost,\n                             'purchase_total' => $component->purchase_cost * $component->pivot->assigned_qty,",
      "code_diff":"@@ -93,15 +93,15 @@ public function transformAsset(Asset $asset)\n                     $value = (Gate::allows('superadmin')) ? $decrypted : strtoupper(trans('admin\/custom_fields\/general.encrypted'));\n \n                     $fields_array[$field->name] = [\n-                            'field' => $field->convertUnicodeDbSlug(),\n-                            'value' => $value,\n+                            'field' => e($field->convertUnicodeDbSlug()),\n+                            'value' => e($value),\n                             'field_format' => $field->format,\n                         ];\n \n                 } else {\n                     $fields_array[$field->name] = [\n-                        'field' => $field->convertUnicodeDbSlug(),\n-                        'value' => $asset->{$field->convertUnicodeDbSlug()},\n+                        'field' => e($field->convertUnicodeDbSlug()),\n+                        'value' => e($asset->{$field->convertUnicodeDbSlug()}),\n                         'field_format' => $field->format,\n                     ];\n \n@@ -134,7 +134,7 @@ public function transformAsset(Asset $asset)\n                         \n                             'id' => $component->id,\n                             'pivot_id' => $component->pivot->id,\n-                            'name' => $component->name,\n+                            'name' => e($component->name),\n                             'qty' => $component->pivot->assigned_qty,\n                             'price_cost' => $component->purchase_cost,\n                             'purchase_total' => $component->purchase_cost * $component->pivot->assigned_qty,"
    },
    {
      "index":58,
      "vuln_id":"GHSA-m8rp-q82r-c5mf",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/b64ef574b82dbf89a908e1569d790c7012d1ccd7'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in microweber Cross-site Scripting (XSS) - Stored in Packagist microweber\/microweber prior to 1.2.11.",
      "published_date":"2022-01-21",
      "chain_len":1,
      "project":"https:\/\/github.com\/microweber\/microweber",
      "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/b64ef574b82dbf89a908e1569d790c7012d1ccd7",
      "commit_sha":"b64ef574b82dbf89a908e1569d790c7012d1ccd7",
      "patch":"SINGLE",
      "chain_ord":"['b64ef574b82dbf89a908e1569d790c7012d1ccd7']",
      "before_first_fix_commit":"{'e17f3e94289b2dac7187e8039e1a3429779e273c'}",
      "last_fix_commit":"b64ef574b82dbf89a908e1569d790c7012d1ccd7",
      "chain_ord_pos":1.0,
      "commit_datetime":"01\/19\/2022, 09:56:21",
      "message":"xss on contact form fix",
      "author":"Bozhidar Slaveykov",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 3, 'total': 5}",
      "files":"{'userfiles\/modules\/admin\/notifications\/notif_form_entry.php': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/b64ef574b82dbf89a908e1569d790c7012d1ccd7\/userfiles%2Fmodules%2Fadmin%2Fnotifications%2Fnotif_form_entry.php', 'patch': '@@ -91,7 +91,6 @@\\n             <hr class=\"thin\" \/>\\n             <div class=\"row\">\\n \\n-\\n                 <?php\\n                 $iformVr=0;\\n                 foreach ($form_values_formated as $form_values_row) {\\n@@ -106,12 +105,12 @@\\n                             <?php if (!is_array($val1)){ ?>\\n                                 <div>\\n                                     <small class=\"text-muted\"><?php echo str_replace(\\'_\\', \\' \\', $key); ?>:<\/small>\\n-                                    <p><?php print $val1; ?><\/p>\\n+                                    <p><?php print htmlentities($val1); ?><\/p>\\n                                 <\/div>\\n                             <?php } else { ?>\\n                                 <small class=\"text-muted\"><?php echo str_replace(\\'_\\', \\' \\', $key); ?>:<\/small>\\n                                 <?php foreach ($val1 as $val1_1){ ?>\\n-                                    <p><?php print $val1_1 . \\'<br \/>\\'; ?><\/p>\\n+                                    <p><?php print htmlentities($val1_1) . \\'<br \/>\\'; ?><\/p>\\n                                 <?php }?>\\n                             <?php } ?>\\n                         <?php } ?>'}}",
      "message_norm":"xss on contact form fix",
      "language":"en",
      "entities":"[('xss', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['userfiles\/modules\/admin\/notifications\/notif_form_entry.php'])",
      "num_files":1.0,
      "patch_content":"From b64ef574b82dbf89a908e1569d790c7012d1ccd7 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Wed, 19 Jan 2022 11:56:21 +0200\nSubject: [PATCH] xss on contact form fix\n\n---\n userfiles\/modules\/admin\/notifications\/notif_form_entry.php | 5 ++---\n 1 file changed, 2 insertions(+), 3 deletions(-)\n\ndiff --git a\/userfiles\/modules\/admin\/notifications\/notif_form_entry.php b\/userfiles\/modules\/admin\/notifications\/notif_form_entry.php\nindex 586de353b63..dc92f12cbbc 100644\n--- a\/userfiles\/modules\/admin\/notifications\/notif_form_entry.php\n+++ b\/userfiles\/modules\/admin\/notifications\/notif_form_entry.php\n@@ -91,7 +91,6 @@\n             <hr class=\"thin\" \/>\n             <div class=\"row\">\n \n-\n                 <?php\n                 $iformVr=0;\n                 foreach ($form_values_formated as $form_values_row) {\n@@ -106,12 +105,12 @@\n                             <?php if (!is_array($val1)){ ?>\n                                 <div>\n                                     <small class=\"text-muted\"><?php echo str_replace('_', ' ', $key); ?>:<\/small>\n-                                    <p><?php print $val1; ?><\/p>\n+                                    <p><?php print htmlentities($val1); ?><\/p>\n                                 <\/div>\n                             <?php } else { ?>\n                                 <small class=\"text-muted\"><?php echo str_replace('_', ' ', $key); ?>:<\/small>\n                                 <?php foreach ($val1 as $val1_1){ ?>\n-                                    <p><?php print $val1_1 . '<br \/>'; ?><\/p>\n+                                    <p><?php print htmlentities($val1_1) . '<br \/>'; ?><\/p>\n                                 <?php }?>\n                             <?php } ?>\n                         <?php } ?>",
      "code_diff":"@@ -91,7 +91,6 @@\n             <hr class=\"thin\" \/>\n             <div class=\"row\">\n \n-\n                 <?php\n                 $iformVr=0;\n                 foreach ($form_values_formated as $form_values_row) {\n@@ -106,12 +105,12 @@\n                             <?php if (!is_array($val1)){ ?>\n                                 <div>\n                                     <small class=\"text-muted\"><?php echo str_replace('_', ' ', $key); ?>:<\/small>\n-                                    <p><?php print $val1; ?><\/p>\n+                                    <p><?php print htmlentities($val1); ?><\/p>\n                                 <\/div>\n                             <?php } else { ?>\n                                 <small class=\"text-muted\"><?php echo str_replace('_', ' ', $key); ?>:<\/small>\n                                 <?php foreach ($val1 as $val1_1){ ?>\n-                                    <p><?php print $val1_1 . '<br \/>'; ?><\/p>\n+                                    <p><?php print htmlentities($val1_1) . '<br \/>'; ?><\/p>\n                                 <?php }?>\n                             <?php } ?>\n                         <?php } ?>"
    },
    {
      "index":59,
      "vuln_id":"GHSA-v768-w7m9-2vmm",
      "cwe_id":"{'CWE-824'}",
      "score":7.8,
      "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/578e634b4f1c1c684d4b4294f9e5281b2133b3ed'}",
      "dataset":"osv",
      "summary":"Reference binding to nullptr in shape inference ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.SparseFillEmptyRows`:\n\n```python\nimport tensorflow as tf\n  \ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.SparseFillEmptyRows(\n  indices = tf.constant([], shape=[0, 0], dtype=tf.int64),\n  values = tf.constant([], shape=[0], dtype=tf.int64),\n  dense_shape = tf.constant([], shape=[0], dtype=tf.int64),\n  default_value = 0)\n```\n  \nThe shape inference [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/ops\/sparse_ops.cc#L608-L634) does not validate that the input arguments are not empty tensors.\n\n### Patches \nWe have patched the issue in GitHub commit [578e634b4f1c1c684d4b4294f9e5281b2133b3ed](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/578e634b4f1c1c684d4b4294f9e5281b2133b3ed).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security",
      "published_date":"2021-08-25",
      "chain_len":1,
      "project":"https:\/\/github.com\/tensorflow\/tensorflow",
      "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/578e634b4f1c1c684d4b4294f9e5281b2133b3ed",
      "commit_sha":"578e634b4f1c1c684d4b4294f9e5281b2133b3ed",
      "patch":"SINGLE",
      "chain_ord":"['578e634b4f1c1c684d4b4294f9e5281b2133b3ed']",
      "before_first_fix_commit":"{'d7de67733925de196ec8863a33445b73f9562d1d'}",
      "last_fix_commit":"578e634b4f1c1c684d4b4294f9e5281b2133b3ed",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/30\/2021, 05:24:08",
      "message":"Prevent a segfault in shape inference due to bad inputs.\n\nPiperOrigin-RevId: 387737970\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9",
      "author":"Mihai Maruseac",
      "comments":null,
      "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
      "files":"{'tensorflow\/core\/ops\/sparse_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/578e634b4f1c1c684d4b4294f9e5281b2133b3ed\/tensorflow%2Fcore%2Fops%2Fsparse_ops.cc', 'patch': '@@ -16,6 +16,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/common_shape_fns.h\"\\n #include \"tensorflow\/core\/framework\/op.h\"\\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n \\n namespace tensorflow {\\n \\n@@ -619,6 +620,8 @@ REGISTER_OP(\"SparseFillEmptyRows\")\\n       DimensionHandle unused_dim;\\n       TF_RETURN_IF_ERROR(c->Merge(c->Dim(input_indices, 1),\\n                                   c->Dim(input_shape, 0), &unused_dim));\\n+      if (c->Value(c->NumElements(input_shape)) == 0)\\n+        return errors::InvalidArgument(\"dense_shape must not be empty\");\\n       ShapeHandle output_indices =\\n           c->Matrix(InferenceContext::kUnknownDim, c->NumElements(input_shape));\\n       ShapeHandle output_values = c->Vector(InferenceContext::kUnknownDim);'}}",
      "message_norm":"prevent a segfault in shape inference due to bad inputs.\n\npiperorigin-revid: 387737970\nchange-id: ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9",
      "language":"en",
      "entities":"[('prevent', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('387737970', 'SHA', 'generic_sha')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['tensorflow\/core\/ops\/sparse_ops.cc'])",
      "num_files":1.0,
      "patch_content":"From 578e634b4f1c1c684d4b4294f9e5281b2133b3ed Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Thu, 29 Jul 2021 22:24:08 -0700\nSubject: [PATCH] Prevent a segfault in shape inference due to bad inputs.\n\nPiperOrigin-RevId: 387737970\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9\n---\n tensorflow\/core\/ops\/sparse_ops.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/core\/ops\/sparse_ops.cc b\/tensorflow\/core\/ops\/sparse_ops.cc\nindex 906cef1f5ecafe..b1e40e66af8929 100644\n--- a\/tensorflow\/core\/ops\/sparse_ops.cc\n+++ b\/tensorflow\/core\/ops\/sparse_ops.cc\n@@ -16,6 +16,7 @@ limitations under the License.\n #include \"tensorflow\/core\/framework\/common_shape_fns.h\"\n #include \"tensorflow\/core\/framework\/op.h\"\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\n+#include \"tensorflow\/core\/platform\/errors.h\"\n \n namespace tensorflow {\n \n@@ -619,6 +620,8 @@ REGISTER_OP(\"SparseFillEmptyRows\")\n       DimensionHandle unused_dim;\n       TF_RETURN_IF_ERROR(c->Merge(c->Dim(input_indices, 1),\n                                   c->Dim(input_shape, 0), &unused_dim));\n+      if (c->Value(c->NumElements(input_shape)) == 0)\n+        return errors::InvalidArgument(\"dense_shape must not be empty\");\n       ShapeHandle output_indices =\n           c->Matrix(InferenceContext::kUnknownDim, c->NumElements(input_shape));\n       ShapeHandle output_values = c->Vector(InferenceContext::kUnknownDim);",
      "code_diff":"@@ -16,6 +16,7 @@ limitations under the License.\n #include \"tensorflow\/core\/framework\/common_shape_fns.h\"\n #include \"tensorflow\/core\/framework\/op.h\"\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\n+#include \"tensorflow\/core\/platform\/errors.h\"\n \n namespace tensorflow {\n \n@@ -619,6 +620,8 @@ REGISTER_OP(\"SparseFillEmptyRows\")\n       DimensionHandle unused_dim;\n       TF_RETURN_IF_ERROR(c->Merge(c->Dim(input_indices, 1),\n                                   c->Dim(input_shape, 0), &unused_dim));\n+      if (c->Value(c->NumElements(input_shape)) == 0)\n+        return errors::InvalidArgument(\"dense_shape must not be empty\");\n       ShapeHandle output_indices =\n           c->Matrix(InferenceContext::kUnknownDim, c->NumElements(input_shape));\n       ShapeHandle output_values = c->Vector(InferenceContext::kUnknownDim);"
    },
    {
      "index":60,
      "vuln_id":"GHSA-x2p8-rgfm-qw3v",
      "cwe_id":"{'CWE-863'}",
      "score":9.8,
      "chain":"{'https:\/\/github.com\/stanfordnlp\/CoreNLP\/commit\/5ee097dbede547023e88f60ed3f430ff09398b87'}",
      "dataset":"osv",
      "summary":"Access Control vulnerability within CoreNLP An Incorrect Access Control vulnerability exists in CoreNLP 4.3.2 via the classifier in NERServlet.java (lines 158 and 159).",
      "published_date":"2022-02-25",
      "chain_len":1,
      "project":"https:\/\/github.com\/stanfordnlp\/CoreNLP",
      "commit_href":"https:\/\/github.com\/stanfordnlp\/CoreNLP\/commit\/5ee097dbede547023e88f60ed3f430ff09398b87",
      "commit_sha":"5ee097dbede547023e88f60ed3f430ff09398b87",
      "patch":"SINGLE",
      "chain_ord":"['5ee097dbede547023e88f60ed3f430ff09398b87']",
      "before_first_fix_commit":"{'85e305bf63b3954e6266801175579a8b81769709'}",
      "last_fix_commit":"5ee097dbede547023e88f60ed3f430ff09398b87",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/26\/2021, 22:07:33",
      "message":"Address issue #1222: verify that classifier and outputFormat are valid values before returning them in headers.  Should sanitize malicious output",
      "author":"John Bauer",
      "comments":null,
      "stats":"{'additions': 15, 'deletions': 7, 'total': 22}",
      "files":"{'src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java': {'additions': 15, 'deletions': 7, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/stanfordnlp\/CoreNLP\/raw\/5ee097dbede547023e88f60ed3f430ff09398b87\/src%2Fedu%2Fstanford%2Fnlp%2Fie%2Fner%2Fwebapp%2FNERServlet.java', 'patch': '@@ -63,9 +63,9 @@ public void init() throws ServletException {\\n       log(classifier);\\n     }\\n \\n-    ners = Generics.newHashMap();\\n+    ners = new HashMap<>();\\n     for (String classifier : classifiers) {\\n-      CRFClassifier model = null;\\n+      CRFClassifier<CoreMap> model = null;\\n       String filename = \"\/WEB-INF\/data\/models\/\" + classifier;\\n       InputStream is = getServletConfig().getServletContext().getResourceAsStream(filename);\\n \\n@@ -154,15 +154,23 @@ private void addResults(HttpServletRequest request,\\n       classifier = this.defaultClassifier;\\n     }\\n \\n-    response.addHeader(\"classifier\", classifier);\\n-    response.addHeader(\"outputFormat\", outputFormat);\\n-    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\\n+    CRFClassifier<CoreMap> nerModel = ners.get(classifier);\\n+    \/\/ check that we weren\\'t asked for a classifier that doesn\\'t exist\\n+    if (nerModel == null) {\\n+      out.print(StringEscapeUtils.escapeHtml4(\"Unknown model \" + classifier));\\n+      return;\\n+    }\\n \\n     if (outputFormat.equals(\"highlighted\")) {\\n-      outputHighlighting(out, ners.get(classifier), input);\\n+      outputHighlighting(out, nerModel, input);\\n     } else {\\n-      out.print(StringEscapeUtils.escapeHtml4(ners.get(classifier).classifyToString(input, outputFormat, preserveSpacing)));\\n+      out.print(StringEscapeUtils.escapeHtml4(nerModel.classifyToString(input, outputFormat, preserveSpacing)));\\n     }\\n+\\n+    response.addHeader(\"classifier\", classifier);\\n+    \/\/ a non-existent outputFormat would have just thrown an exception\\n+    response.addHeader(\"outputFormat\", outputFormat);\\n+    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\\n   }\\n \\n   private static void outputHighlighting(PrintWriter out,'}}",
      "message_norm":"address issue #1222: verify that classifier and outputformat are valid values before returning them in headers.  should sanitize malicious output",
      "language":"en",
      "entities":"[('issue', 'FLAW', ''), ('#1222', 'ISSUE', ''), ('verify', 'ACTION', ''), ('sanitize', 'SECWORD', ''), ('malicious', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java'])",
      "num_files":1.0,
      "patch_content":"From 5ee097dbede547023e88f60ed3f430ff09398b87 Mon Sep 17 00:00:00 2001\nFrom: John Bauer <horatio@gmail.com>\nDate: Fri, 26 Nov 2021 14:07:33 -0800\nSubject: [PATCH] Address issue #1222: verify that classifier and outputFormat\n are valid values before returning them in headers.  Should sanitize malicious\n output\n\n---\n ...\/nlp\/ie\/ner\/webapp\/NERServlet.java         | 22 +++++++++++++------\n 1 file changed, 15 insertions(+), 7 deletions(-)\n\ndiff --git a\/src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java b\/src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java\nindex 4236f14ea2..f67edb4103 100644\n--- a\/src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java\n+++ b\/src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java\n@@ -63,9 +63,9 @@ public void init() throws ServletException {\n       log(classifier);\n     }\n \n-    ners = Generics.newHashMap();\n+    ners = new HashMap<>();\n     for (String classifier : classifiers) {\n-      CRFClassifier model = null;\n+      CRFClassifier<CoreMap> model = null;\n       String filename = \"\/WEB-INF\/data\/models\/\" + classifier;\n       InputStream is = getServletConfig().getServletContext().getResourceAsStream(filename);\n \n@@ -154,15 +154,23 @@ private void addResults(HttpServletRequest request,\n       classifier = this.defaultClassifier;\n     }\n \n-    response.addHeader(\"classifier\", classifier);\n-    response.addHeader(\"outputFormat\", outputFormat);\n-    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\n+    CRFClassifier<CoreMap> nerModel = ners.get(classifier);\n+    \/\/ check that we weren't asked for a classifier that doesn't exist\n+    if (nerModel == null) {\n+      out.print(StringEscapeUtils.escapeHtml4(\"Unknown model \" + classifier));\n+      return;\n+    }\n \n     if (outputFormat.equals(\"highlighted\")) {\n-      outputHighlighting(out, ners.get(classifier), input);\n+      outputHighlighting(out, nerModel, input);\n     } else {\n-      out.print(StringEscapeUtils.escapeHtml4(ners.get(classifier).classifyToString(input, outputFormat, preserveSpacing)));\n+      out.print(StringEscapeUtils.escapeHtml4(nerModel.classifyToString(input, outputFormat, preserveSpacing)));\n     }\n+\n+    response.addHeader(\"classifier\", classifier);\n+    \/\/ a non-existent outputFormat would have just thrown an exception\n+    response.addHeader(\"outputFormat\", outputFormat);\n+    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\n   }\n \n   private static void outputHighlighting(PrintWriter out,",
      "code_diff":"@@ -63,9 +63,9 @@ public void init() throws ServletException {\n       log(classifier);\n     }\n \n-    ners = Generics.newHashMap();\n+    ners = new HashMap<>();\n     for (String classifier : classifiers) {\n-      CRFClassifier model = null;\n+      CRFClassifier<CoreMap> model = null;\n       String filename = \"\/WEB-INF\/data\/models\/\" + classifier;\n       InputStream is = getServletConfig().getServletContext().getResourceAsStream(filename);\n \n@@ -154,15 +154,23 @@ private void addResults(HttpServletRequest request,\n       classifier = this.defaultClassifier;\n     }\n \n-    response.addHeader(\"classifier\", classifier);\n-    response.addHeader(\"outputFormat\", outputFormat);\n-    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\n+    CRFClassifier<CoreMap> nerModel = ners.get(classifier);\n+    \/\/ check that we weren't asked for a classifier that doesn't exist\n+    if (nerModel == null) {\n+      out.print(StringEscapeUtils.escapeHtml4(\"Unknown model \" + classifier));\n+      return;\n+    }\n \n     if (outputFormat.equals(\"highlighted\")) {\n-      outputHighlighting(out, ners.get(classifier), input);\n+      outputHighlighting(out, nerModel, input);\n     } else {\n-      out.print(StringEscapeUtils.escapeHtml4(ners.get(classifier).classifyToString(input, outputFormat, preserveSpacing)));\n+      out.print(StringEscapeUtils.escapeHtml4(nerModel.classifyToString(input, outputFormat, preserveSpacing)));\n     }\n+\n+    response.addHeader(\"classifier\", classifier);\n+    \/\/ a non-existent outputFormat would have just thrown an exception\n+    response.addHeader(\"outputFormat\", outputFormat);\n+    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\n   }\n \n   private static void outputHighlighting(PrintWriter out,"
    },
    {
      "index":61,
      "vuln_id":"GHSA-3872-f48p-pxqj",
      "cwe_id":"{'CWE-88', 'CWE-77'}",
      "score":8.8,
      "chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/d83672a3e7415da1490334e2c9431e5da1966842', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8'}",
      "dataset":"osv",
      "summary":"Improper Neutralization of Special Elements used in a Command ('Command Injection') in Weblate ### Impact\nWeblate didn't correctly sanitize some arguments passed to Git and Mercurial, which allowed changing their behavior in an unintended way.\n\n### Patches\n\nThe issues were fixed in the 4.11.1 release. The following commits are addressing it:\n\n* 35d59f1f040541c358cece0a8d4a63183ca919b8\n* d83672a3e7415da1490334e2c9431e5da1966842\n\n### Workarounds\n\nInstances in which untrusted users cannot create new components are not affected.\n\n### References\n* [SNYK-PYTHON-WEBLATE-2414088](https:\/\/security.snyk.io\/vuln\/SNYK-PYTHON-WEBLATE-2414088)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)",
      "published_date":"2022-03-04",
      "chain_len":2,
      "project":"https:\/\/github.com\/WeblateOrg\/weblate",
      "commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8",
      "commit_sha":"35d59f1f040541c358cece0a8d4a63183ca919b8",
      "patch":"MULTI",
      "chain_ord":"['35d59f1f040541c358cece0a8d4a63183ca919b8', 'd83672a3e7415da1490334e2c9431e5da1966842']",
      "before_first_fix_commit":"{'9a5a09781e5a19ab9a24878afb08c9fcafb21ca7'}",
      "last_fix_commit":"d83672a3e7415da1490334e2c9431e5da1966842",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/03\/2022, 07:25:01",
      "message":"vcs: Improve mercurial parameters handling\n\nMake sure that all user provided input is handled as expected.",
      "author":"Michal \u010ciha\u0159",
      "comments":null,
      "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
      "files":"{'weblate\/vcs\/mercurial.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/35d59f1f040541c358cece0a8d4a63183ca919b8\/weblate%2Fvcs%2Fmercurial.py', 'patch': '@@ -70,7 +70,7 @@ def check_config(self):\\n     @classmethod\\n     def _clone(cls, source: str, target: str, branch: str):\\n         \"\"\"Clone repository.\"\"\"\\n-        cls._popen([\"clone\", \"--branch\", branch, source, target])\\n+        cls._popen([\"clone\", f\"--branch={branch}\", \"--\", source, target])\\n \\n     def get_config(self, path):\\n         \"\"\"Read entry from configuration.\"\"\"\\n@@ -323,7 +323,7 @@ def on_branch(self, branch):\\n     def configure_branch(self, branch):\\n         \"\"\"Configure repository branch.\"\"\"\\n         if not self.on_branch(branch):\\n-            self.execute([\"update\", branch])\\n+            self.execute([\"update\", \"--\", branch])\\n         self.branch = branch\\n \\n     def describe(self):\\n@@ -343,7 +343,7 @@ def describe(self):\\n     def push(self, branch):\\n         \"\"\"Push given branch to remote repository.\"\"\"\\n         try:\\n-            self.execute([\"push\", \"-b\", self.branch])\\n+            self.execute([\"push\", f\"--branch={self.branch}\"])\\n         except RepositoryException as error:\\n             if error.retcode == 1:\\n                 # No changes found\\n@@ -363,7 +363,7 @@ def cleanup(self):\\n \\n     def update_remote(self):\\n         \"\"\"Update remote repository.\"\"\"\\n-        self.execute([\"pull\", \"--branch\", self.branch])\\n+        self.execute([\"pull\", f\"--branch={self.branch}\"])\\n         self.clean_revision_cache()\\n \\n     def parse_changed_files(self, lines: List[str]) -> Iterator[str]:'}}",
      "message_norm":"vcs: improve mercurial parameters handling\n\nmake sure that all user provided input is handled as expected.",
      "language":"en",
      "entities":"[('improve', 'ACTION', ''), ('user provided input', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['weblate\/vcs\/mercurial.py'])",
      "num_files":1.0,
      "patch_content":"From 35d59f1f040541c358cece0a8d4a63183ca919b8 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>\nDate: Thu, 3 Mar 2022 08:25:01 +0100\nSubject: [PATCH] vcs: Improve mercurial parameters handling\n\nMake sure that all user provided input is handled as expected.\n---\n weblate\/vcs\/mercurial.py | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/weblate\/vcs\/mercurial.py b\/weblate\/vcs\/mercurial.py\nindex 0399c1b0bae2..1131c1abd1e5 100644\n--- a\/weblate\/vcs\/mercurial.py\n+++ b\/weblate\/vcs\/mercurial.py\n@@ -70,7 +70,7 @@ def check_config(self):\n     @classmethod\n     def _clone(cls, source: str, target: str, branch: str):\n         \"\"\"Clone repository.\"\"\"\n-        cls._popen([\"clone\", \"--branch\", branch, source, target])\n+        cls._popen([\"clone\", f\"--branch={branch}\", \"--\", source, target])\n \n     def get_config(self, path):\n         \"\"\"Read entry from configuration.\"\"\"\n@@ -323,7 +323,7 @@ def on_branch(self, branch):\n     def configure_branch(self, branch):\n         \"\"\"Configure repository branch.\"\"\"\n         if not self.on_branch(branch):\n-            self.execute([\"update\", branch])\n+            self.execute([\"update\", \"--\", branch])\n         self.branch = branch\n \n     def describe(self):\n@@ -343,7 +343,7 @@ def describe(self):\n     def push(self, branch):\n         \"\"\"Push given branch to remote repository.\"\"\"\n         try:\n-            self.execute([\"push\", \"-b\", self.branch])\n+            self.execute([\"push\", f\"--branch={self.branch}\"])\n         except RepositoryException as error:\n             if error.retcode == 1:\n                 # No changes found\n@@ -363,7 +363,7 @@ def cleanup(self):\n \n     def update_remote(self):\n         \"\"\"Update remote repository.\"\"\"\n-        self.execute([\"pull\", \"--branch\", self.branch])\n+        self.execute([\"pull\", f\"--branch={self.branch}\"])\n         self.clean_revision_cache()\n \n     def parse_changed_files(self, lines: List[str]) -> Iterator[str]:",
      "code_diff":"@@ -70,7 +70,7 @@ def check_config(self):\n     @classmethod\n     def _clone(cls, source: str, target: str, branch: str):\n         \"\"\"Clone repository.\"\"\"\n-        cls._popen([\"clone\", \"--branch\", branch, source, target])\n+        cls._popen([\"clone\", f\"--branch={branch}\", \"--\", source, target])\n \n     def get_config(self, path):\n         \"\"\"Read entry from configuration.\"\"\"\n@@ -323,7 +323,7 @@ def on_branch(self, branch):\n     def configure_branch(self, branch):\n         \"\"\"Configure repository branch.\"\"\"\n         if not self.on_branch(branch):\n-            self.execute([\"update\", branch])\n+            self.execute([\"update\", \"--\", branch])\n         self.branch = branch\n \n     def describe(self):\n@@ -343,7 +343,7 @@ def describe(self):\n     def push(self, branch):\n         \"\"\"Push given branch to remote repository.\"\"\"\n         try:\n-            self.execute([\"push\", \"-b\", self.branch])\n+            self.execute([\"push\", f\"--branch={self.branch}\"])\n         except RepositoryException as error:\n             if error.retcode == 1:\n                 # No changes found\n@@ -363,7 +363,7 @@ def cleanup(self):\n \n     def update_remote(self):\n         \"\"\"Update remote repository.\"\"\"\n-        self.execute([\"pull\", \"--branch\", self.branch])\n+        self.execute([\"pull\", f\"--branch={self.branch}\"])\n         self.clean_revision_cache()\n \n     def parse_changed_files(self, lines: List[str]) -> Iterator[str]:"
    },
    {
      "index":62,
      "vuln_id":"GHSA-3j58-p785-f27x",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/fc7e1a026735b93f0e0047700d08c44954fce9ce'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in microweber There is a reflected cross sitem scripting attack in microweber via url parameters.",
      "published_date":"2022-01-28",
      "chain_len":1,
      "project":"https:\/\/github.com\/microweber\/microweber",
      "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/fc7e1a026735b93f0e0047700d08c44954fce9ce",
      "commit_sha":"fc7e1a026735b93f0e0047700d08c44954fce9ce",
      "patch":"SINGLE",
      "chain_ord":"['fc7e1a026735b93f0e0047700d08c44954fce9ce']",
      "before_first_fix_commit":"{'6e9fcaa043b4211ef21a494f9892dd19ba8a572c'}",
      "last_fix_commit":"fc7e1a026735b93f0e0047700d08c44954fce9ce",
      "chain_ord_pos":1.0,
      "commit_datetime":"01\/19\/2022, 10:33:18",
      "message":"fix xss on module api call in value parameters",
      "author":"Bozhidar Slaveykov",
      "comments":null,
      "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
      "files":"{'src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/fc7e1a026735b93f0e0047700d08c44954fce9ce\/src%2FMicroweberPackages%2FApp%2FHttp%2FControllers%2FApiController.php', 'patch': \"@@ -17,9 +17,6 @@\\n class ApiController  extends FrontendController\\n {\\n \\n-\\n-\\n-\\n     public function api_html()\\n     {\\n         if (!defined('MW_API_HTML_OUTPUT')) {\\n@@ -609,12 +606,14 @@ public function module()\\n \\n         $request_data = array_merge($_GET, $_POST);\\n \\n-\\n         \/\/ sanitize attributes\\n         if($request_data){\\n             $request_data_new = [];\\n             $antixss = new AntiXSS();\\n             foreach ($request_data as $k=>$v){\\n+\\n+                $v = $antixss->xss_clean($v);\\n+\\n                 if(is_string($k)){\\n                     $k = $antixss->xss_clean($k);\\n                     if($k){\\n@@ -623,6 +622,7 @@ public function module()\\n                 } else {\\n                     $request_data_new[$k] = $v;\\n                 }\\n+                \\n             }\\n             $request_data = $request_data_new;\\n         }\"}}",
      "message_norm":"fix xss on module api call in value parameters",
      "language":"ca",
      "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php'])",
      "num_files":1.0,
      "patch_content":"From fc7e1a026735b93f0e0047700d08c44954fce9ce Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Wed, 19 Jan 2022 12:33:18 +0200\nSubject: [PATCH] fix xss on module api call in value parameters\n\n---\n ...\/App\/Http\/Controllers\/ApiController.php                | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php b\/src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php\nindex 7973615d77b..6d628263d5b 100644\n--- a\/src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php\n+++ b\/src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php\n@@ -17,9 +17,6 @@\n class ApiController  extends FrontendController\n {\n \n-\n-\n-\n     public function api_html()\n     {\n         if (!defined('MW_API_HTML_OUTPUT')) {\n@@ -609,12 +606,14 @@ public function module()\n \n         $request_data = array_merge($_GET, $_POST);\n \n-\n         \/\/ sanitize attributes\n         if($request_data){\n             $request_data_new = [];\n             $antixss = new AntiXSS();\n             foreach ($request_data as $k=>$v){\n+\n+                $v = $antixss->xss_clean($v);\n+\n                 if(is_string($k)){\n                     $k = $antixss->xss_clean($k);\n                     if($k){\n@@ -623,6 +622,7 @@ public function module()\n                 } else {\n                     $request_data_new[$k] = $v;\n                 }\n+                \n             }\n             $request_data = $request_data_new;\n         }",
      "code_diff":"@@ -17,9 +17,6 @@\n class ApiController  extends FrontendController\n {\n \n-\n-\n-\n     public function api_html()\n     {\n         if (!defined('MW_API_HTML_OUTPUT')) {\n@@ -609,12 +606,14 @@ public function module()\n \n         $request_data = array_merge($_GET, $_POST);\n \n-\n         \/\/ sanitize attributes\n         if($request_data){\n             $request_data_new = [];\n             $antixss = new AntiXSS();\n             foreach ($request_data as $k=>$v){\n+\n+                $v = $antixss->xss_clean($v);\n+\n                 if(is_string($k)){\n                     $k = $antixss->xss_clean($k);\n                     if($k){\n@@ -623,6 +622,7 @@ public function module()\n                 } else {\n                     $request_data_new[$k] = $v;\n                 }\n+                \n             }\n             $request_data = $request_data_new;\n         }"
    },
    {
      "index":63,
      "vuln_id":"GHSA-7c82-mp33-r854",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767'}",
      "dataset":"osv",
      "summary":"Cross-site scripting in bootstrap-select bootstrap-select before 1.13.6 allows Cross-Site Scripting (XSS). It does not escape title values in OPTION elements. This may allow attackers to execute arbitrary JavaScript in a victim's browser.",
      "published_date":"2021-05-07",
      "chain_len":1,
      "project":"https:\/\/github.com\/snapappointments\/bootstrap-select",
      "commit_href":"https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767",
      "commit_sha":"ab6e068748040cf3cda5859f6349b382402b8767",
      "patch":"SINGLE",
      "chain_ord":"['ab6e068748040cf3cda5859f6349b382402b8767']",
      "before_first_fix_commit":"{'bbd306de22fbcede9016cf7e335fd8ce34d6629d'}",
      "last_fix_commit":"ab6e068748040cf3cda5859f6349b382402b8767",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/07\/2019, 23:05:50",
      "message":"add sanitize option for data-content (#2199)",
      "author":"Casey Holzer",
      "comments":null,
      "stats":"{'additions': 167, 'deletions': 6, 'total': 173}",
      "files":"{'js\/bootstrap-select.js': {'additions': 167, 'deletions': 6, 'changes': 173, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snapappointments\/bootstrap-select\/raw\/ab6e068748040cf3cda5859f6349b382402b8767\/js%2Fbootstrap-select.js', 'patch': \"@@ -1,6 +1,128 @@\\n (function ($) {\\n   'use strict';\\n \\n+  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\\n+\\n+  var uriAttrs = [\\n+    'background',\\n+    'cite',\\n+    'href',\\n+    'itemtype',\\n+    'longdesc',\\n+    'poster',\\n+    'src',\\n+    'xlink:href'\\n+  ];\\n+\\n+  var ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\\\w-]*$\/i;\\n+\\n+  var DefaultWhitelist = {\\n+    \/\/ Global attributes allowed on any supplied element below.\\n+    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],\\n+    a: ['target', 'href', 'title', 'rel'],\\n+    area: [],\\n+    b: [],\\n+    br: [],\\n+    col: [],\\n+    code: [],\\n+    div: [],\\n+    em: [],\\n+    hr: [],\\n+    h1: [],\\n+    h2: [],\\n+    h3: [],\\n+    h4: [],\\n+    h5: [],\\n+    h6: [],\\n+    i: [],\\n+    img: ['src', 'alt', 'title', 'width', 'height'],\\n+    li: [],\\n+    ol: [],\\n+    p: [],\\n+    pre: [],\\n+    s: [],\\n+    small: [],\\n+    span: [],\\n+    sub: [],\\n+    sup: [],\\n+    strong: [],\\n+    u: [],\\n+    ul: []\\n+  }\\n+\\n+  \/**\\n+   * A pattern that recognizes a commonly useful subset of URLs that are safe.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi;\\n+\\n+  \/**\\n+   * A pattern that matches safe data URLs. Only matches image, video and audio types.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var DATA_URL_PATTERN = \/^data:(?:image\\\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\\\/(?:mpeg|mp4|ogg|webm)|audio\\\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i;\\n+\\n+  function allowedAttribute (attr, allowedAttributeList) {\\n+    var attrName = attr.nodeName.toLowerCase()\\n+\\n+    if ($.inArray(attrName, allowedAttributeList) !== -1) {\\n+      if ($.inArray(attrName, uriAttrs) !== -1) {\\n+        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\\n+      }\\n+\\n+      return true\\n+    }\\n+\\n+    var regExp = $(allowedAttributeList).filter(function (index, value) {\\n+      return value instanceof RegExp\\n+    })\\n+\\n+    \/\/ Check if a regular expression validates the attribute.\\n+    for (var i = 0, l = regExp.length; i < l; i++) {\\n+      if (attrName.match(regExp[i])) {\\n+        return true\\n+      }\\n+    }\\n+\\n+    return false\\n+  }\\n+\\n+  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {\\n+    if (sanitizeFn && typeof sanitizeFn === 'function') {\\n+      return sanitizeFn(unsafeElements);\\n+    }\\n+\\n+    var whitelistKeys = Object.keys(whiteList);\\n+\\n+    for (var i = 0, len = unsafeElements.length; i < len; i++) {\\n+      var elements = unsafeElements[i].querySelectorAll('*');\\n+\\n+      for (var j = 0, len2 = elements.length; j < len2; j++) {\\n+        var el = elements[j];\\n+        var elName = el.nodeName.toLowerCase();\\n+\\n+        if (whitelistKeys.indexOf(elName) === -1) {\\n+          el.parentNode.removeChild(el);\\n+\\n+          continue;\\n+        }\\n+\\n+        var attributeList = [].slice.call(el.attributes);\\n+        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\\n+\\n+        for (var k = 0, len3 = attributeList.length; k < len3; k++) {\\n+          var attr = attributeList[k];\\n+\\n+          if (!allowedAttribute(attr, whitelistedAttributes)) {\\n+            el.removeAttribute(attr.nodeName);\\n+          }\\n+        }\\n+      }\\n+    }\\n+  }\\n+\\n   \/\/ Polyfill for browsers with no classList support\\n   \/\/ Remove in v2\\n   if (!('classList' in document.createElement('_'))) {\\n@@ -745,7 +867,10 @@\\n     dropdownAlignRight: false,\\n     windowPadding: 0,\\n     virtualScroll: 600,\\n-    display: false\\n+    display: false,\\n+    sanitize: true,\\n+    sanitizeFn: null,\\n+    whiteList: DefaultWhitelist\\n   };\\n \\n   if (version.major === '4') {\\n@@ -1100,13 +1225,35 @@\\n                 emptyMenu = menuInner.firstChild.cloneNode(false),\\n                 marginTop,\\n                 marginBottom,\\n-                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements;\\n+                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements,\\n+                toSanitize = [];\\n \\n             \/\/ replace the existing UL with an empty one - this is faster than $.empty()\\n             menuInner.replaceChild(emptyMenu, menuInner.firstChild);\\n \\n             for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {\\n-              menuFragment.appendChild(elements[i]);\\n+              var element = elements[i],\\n+                  elText,\\n+                  elementData;\\n+\\n+              if (that.options.sanitize) {\\n+                elText = element.lastChild;\\n+\\n+                if (elText) {\\n+                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0].data;\\n+\\n+                  if (elementData && elementData.content && !elementData.sanitized) {\\n+                    toSanitize.push(elText);\\n+                    elementData.sanitized = true;\\n+                  }\\n+                }\\n+              }\\n+\\n+              menuFragment.appendChild(element);\\n+            }\\n+\\n+            if (that.options.sanitize && toSanitize.length) {\\n+              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);\\n             }\\n \\n             if (isVirtual === true) {\\n@@ -1469,7 +1616,8 @@\\n           multipleSeparator = document.createTextNode(this.options.multipleSeparator),\\n           titleFragment = elementTemplates.fragment.cloneNode(false),\\n           showCount,\\n-          countMax;\\n+          countMax,\\n+          hasContent = false;\\n \\n       this.togglePlaceholder();\\n \\n@@ -1506,6 +1654,7 @@\\n                 titleOptions.text = option.title;\\n               } else if (thisData.content && that.options.showContent) {\\n                 titleOptions.optionContent = thisData.content.toString();\\n+                hasContent = true;\\n               } else {\\n                 if (that.options.showIcon) {\\n                   titleOptions.optionIcon = thisData.icon;\\n@@ -1554,6 +1703,10 @@\\n       \/\/ strip all HTML tags and trim the result, then unescape any escaped tags\\n       this.$button[0].title = titleFragment.textContent.replace(\/<[^>]*>?\/g, '').trim();\\n \\n+      if (this.options.sanitize && hasContent) {\\n+        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);\\n+      }\\n+\\n       buttonInner.innerHTML = '';\\n       buttonInner.appendChild(titleFragment);\\n \\n@@ -2833,8 +2986,16 @@\\n             options = typeof _option == 'object' && _option;\\n \\n         if (!data) {\\n-          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\\n-          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\\n+          var dataAttributes = $this.data();\\n+\\n+          for (var dataAttr in dataAttributes) {\\n+            if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\\n+              delete dataAttributes[dataAttr];\\n+            }\\n+          }\\n+\\n+          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);\\n+          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);\\n           $this.data('selectpicker', (data = new Selectpicker(this, config)));\\n         } else if (options) {\\n           for (var i in options) {\"}}",
      "message_norm":"add sanitize option for data-content (#2199)",
      "language":"it",
      "entities":"[('add', 'ACTION', ''), ('sanitize', 'SECWORD', ''), ('#2199', 'ISSUE', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['js\/bootstrap-select.js'])",
      "num_files":1.0,
      "patch_content":"From ab6e068748040cf3cda5859f6349b382402b8767 Mon Sep 17 00:00:00 2001\nFrom: Casey Holzer <caseyh@snapappointments.com>\nDate: Thu, 7 Mar 2019 16:05:50 -0700\nSubject: [PATCH] add sanitize option for data-content (#2199)\n\n---\n js\/bootstrap-select.js | 173 +++++++++++++++++++++++++++++++++++++++--\n 1 file changed, 167 insertions(+), 6 deletions(-)\n\ndiff --git a\/js\/bootstrap-select.js b\/js\/bootstrap-select.js\nindex 78d09f4ab..aca9fc454 100644\n--- a\/js\/bootstrap-select.js\n+++ b\/js\/bootstrap-select.js\n@@ -1,6 +1,128 @@\n (function ($) {\n   'use strict';\n \n+  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\n+\n+  var uriAttrs = [\n+    'background',\n+    'cite',\n+    'href',\n+    'itemtype',\n+    'longdesc',\n+    'poster',\n+    'src',\n+    'xlink:href'\n+  ];\n+\n+  var ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\w-]*$\/i;\n+\n+  var DefaultWhitelist = {\n+    \/\/ Global attributes allowed on any supplied element below.\n+    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],\n+    a: ['target', 'href', 'title', 'rel'],\n+    area: [],\n+    b: [],\n+    br: [],\n+    col: [],\n+    code: [],\n+    div: [],\n+    em: [],\n+    hr: [],\n+    h1: [],\n+    h2: [],\n+    h3: [],\n+    h4: [],\n+    h5: [],\n+    h6: [],\n+    i: [],\n+    img: ['src', 'alt', 'title', 'width', 'height'],\n+    li: [],\n+    ol: [],\n+    p: [],\n+    pre: [],\n+    s: [],\n+    small: [],\n+    span: [],\n+    sub: [],\n+    sup: [],\n+    strong: [],\n+    u: [],\n+    ul: []\n+  }\n+\n+  \/**\n+   * A pattern that recognizes a commonly useful subset of URLs that are safe.\n+   *\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\n+   *\/\n+  var SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi;\n+\n+  \/**\n+   * A pattern that matches safe data URLs. Only matches image, video and audio types.\n+   *\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\n+   *\/\n+  var DATA_URL_PATTERN = \/^data:(?:image\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\/(?:mpeg|mp4|ogg|webm)|audio\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i;\n+\n+  function allowedAttribute (attr, allowedAttributeList) {\n+    var attrName = attr.nodeName.toLowerCase()\n+\n+    if ($.inArray(attrName, allowedAttributeList) !== -1) {\n+      if ($.inArray(attrName, uriAttrs) !== -1) {\n+        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\n+      }\n+\n+      return true\n+    }\n+\n+    var regExp = $(allowedAttributeList).filter(function (index, value) {\n+      return value instanceof RegExp\n+    })\n+\n+    \/\/ Check if a regular expression validates the attribute.\n+    for (var i = 0, l = regExp.length; i < l; i++) {\n+      if (attrName.match(regExp[i])) {\n+        return true\n+      }\n+    }\n+\n+    return false\n+  }\n+\n+  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {\n+    if (sanitizeFn && typeof sanitizeFn === 'function') {\n+      return sanitizeFn(unsafeElements);\n+    }\n+\n+    var whitelistKeys = Object.keys(whiteList);\n+\n+    for (var i = 0, len = unsafeElements.length; i < len; i++) {\n+      var elements = unsafeElements[i].querySelectorAll('*');\n+\n+      for (var j = 0, len2 = elements.length; j < len2; j++) {\n+        var el = elements[j];\n+        var elName = el.nodeName.toLowerCase();\n+\n+        if (whitelistKeys.indexOf(elName) === -1) {\n+          el.parentNode.removeChild(el);\n+\n+          continue;\n+        }\n+\n+        var attributeList = [].slice.call(el.attributes);\n+        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\n+\n+        for (var k = 0, len3 = attributeList.length; k < len3; k++) {\n+          var attr = attributeList[k];\n+\n+          if (!allowedAttribute(attr, whitelistedAttributes)) {\n+            el.removeAttribute(attr.nodeName);\n+          }\n+        }\n+      }\n+    }\n+  }\n+\n   \/\/ Polyfill for browsers with no classList support\n   \/\/ Remove in v2\n   if (!('classList' in document.createElement('_'))) {\n@@ -745,7 +867,10 @@\n     dropdownAlignRight: false,\n     windowPadding: 0,\n     virtualScroll: 600,\n-    display: false\n+    display: false,\n+    sanitize: true,\n+    sanitizeFn: null,\n+    whiteList: DefaultWhitelist\n   };\n \n   if (version.major === '4') {\n@@ -1100,13 +1225,35 @@\n                 emptyMenu = menuInner.firstChild.cloneNode(false),\n                 marginTop,\n                 marginBottom,\n-                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements;\n+                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements,\n+                toSanitize = [];\n \n             \/\/ replace the existing UL with an empty one - this is faster than $.empty()\n             menuInner.replaceChild(emptyMenu, menuInner.firstChild);\n \n             for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {\n-              menuFragment.appendChild(elements[i]);\n+              var element = elements[i],\n+                  elText,\n+                  elementData;\n+\n+              if (that.options.sanitize) {\n+                elText = element.lastChild;\n+\n+                if (elText) {\n+                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0].data;\n+\n+                  if (elementData && elementData.content && !elementData.sanitized) {\n+                    toSanitize.push(elText);\n+                    elementData.sanitized = true;\n+                  }\n+                }\n+              }\n+\n+              menuFragment.appendChild(element);\n+            }\n+\n+            if (that.options.sanitize && toSanitize.length) {\n+              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);\n             }\n \n             if (isVirtual === true) {\n@@ -1469,7 +1616,8 @@\n           multipleSeparator = document.createTextNode(this.options.multipleSeparator),\n           titleFragment = elementTemplates.fragment.cloneNode(false),\n           showCount,\n-          countMax;\n+          countMax,\n+          hasContent = false;\n \n       this.togglePlaceholder();\n \n@@ -1506,6 +1654,7 @@\n                 titleOptions.text = option.title;\n               } else if (thisData.content && that.options.showContent) {\n                 titleOptions.optionContent = thisData.content.toString();\n+                hasContent = true;\n               } else {\n                 if (that.options.showIcon) {\n                   titleOptions.optionIcon = thisData.icon;\n@@ -1554,6 +1703,10 @@\n       \/\/ strip all HTML tags and trim the result, then unescape any escaped tags\n       this.$button[0].title = titleFragment.textContent.replace(\/<[^>]*>?\/g, '').trim();\n \n+      if (this.options.sanitize && hasContent) {\n+        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);\n+      }\n+\n       buttonInner.innerHTML = '';\n       buttonInner.appendChild(titleFragment);\n \n@@ -2833,8 +2986,16 @@\n             options = typeof _option == 'object' && _option;\n \n         if (!data) {\n-          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\n-          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\n+          var dataAttributes = $this.data();\n+\n+          for (var dataAttr in dataAttributes) {\n+            if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\n+              delete dataAttributes[dataAttr];\n+            }\n+          }\n+\n+          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);\n+          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);\n           $this.data('selectpicker', (data = new Selectpicker(this, config)));\n         } else if (options) {\n           for (var i in options) {",
      "code_diff":"@@ -1,6 +1,128 @@\n (function ($) {\n   'use strict';\n \n+  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\n+\n+  var uriAttrs = [\n+    'background',\n+    'cite',\n+    'href',\n+    'itemtype',\n+    'longdesc',\n+    'poster',\n+    'src',\n+    'xlink:href'\n+  ];\n+\n+  var ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\w-]*$\/i;\n+\n+  var DefaultWhitelist = {\n+    \/\/ Global attributes allowed on any supplied element below.\n+    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],\n+    a: ['target', 'href', 'title', 'rel'],\n+    area: [],\n+    b: [],\n+    br: [],\n+    col: [],\n+    code: [],\n+    div: [],\n+    em: [],\n+    hr: [],\n+    h1: [],\n+    h2: [],\n+    h3: [],\n+    h4: [],\n+    h5: [],\n+    h6: [],\n+    i: [],\n+    img: ['src', 'alt', 'title', 'width', 'height'],\n+    li: [],\n+    ol: [],\n+    p: [],\n+    pre: [],\n+    s: [],\n+    small: [],\n+    span: [],\n+    sub: [],\n+    sup: [],\n+    strong: [],\n+    u: [],\n+    ul: []\n+  }\n+\n+  \/**\n+   * A pattern that recognizes a commonly useful subset of URLs that are safe.\n+   *\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\n+   *\/\n+  var SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi;\n+\n+  \/**\n+   * A pattern that matches safe data URLs. Only matches image, video and audio types.\n+   *\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\n+   *\/\n+  var DATA_URL_PATTERN = \/^data:(?:image\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\/(?:mpeg|mp4|ogg|webm)|audio\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i;\n+\n+  function allowedAttribute (attr, allowedAttributeList) {\n+    var attrName = attr.nodeName.toLowerCase()\n+\n+    if ($.inArray(attrName, allowedAttributeList) !== -1) {\n+      if ($.inArray(attrName, uriAttrs) !== -1) {\n+        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\n+      }\n+\n+      return true\n+    }\n+\n+    var regExp = $(allowedAttributeList).filter(function (index, value) {\n+      return value instanceof RegExp\n+    })\n+\n+    \/\/ Check if a regular expression validates the attribute.\n+    for (var i = 0, l = regExp.length; i < l; i++) {\n+      if (attrName.match(regExp[i])) {\n+        return true\n+      }\n+    }\n+\n+    return false\n+  }\n+\n+  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {\n+    if (sanitizeFn && typeof sanitizeFn === 'function') {\n+      return sanitizeFn(unsafeElements);\n+    }\n+\n+    var whitelistKeys = Object.keys(whiteList);\n+\n+    for (var i = 0, len = unsafeElements.length; i < len; i++) {\n+      var elements = unsafeElements[i].querySelectorAll('*');\n+\n+      for (var j = 0, len2 = elements.length; j < len2; j++) {\n+        var el = elements[j];\n+        var elName = el.nodeName.toLowerCase();\n+\n+        if (whitelistKeys.indexOf(elName) === -1) {\n+          el.parentNode.removeChild(el);\n+\n+          continue;\n+        }\n+\n+        var attributeList = [].slice.call(el.attributes);\n+        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\n+\n+        for (var k = 0, len3 = attributeList.length; k < len3; k++) {\n+          var attr = attributeList[k];\n+\n+          if (!allowedAttribute(attr, whitelistedAttributes)) {\n+            el.removeAttribute(attr.nodeName);\n+          }\n+        }\n+      }\n+    }\n+  }\n+\n   \/\/ Polyfill for browsers with no classList support\n   \/\/ Remove in v2\n   if (!('classList' in document.createElement('_'))) {\n@@ -745,7 +867,10 @@\n     dropdownAlignRight: false,\n     windowPadding: 0,\n     virtualScroll: 600,\n-    display: false\n+    display: false,\n+    sanitize: true,\n+    sanitizeFn: null,\n+    whiteList: DefaultWhitelist\n   };\n \n   if (version.major === '4') {\n@@ -1100,13 +1225,35 @@\n                 emptyMenu = menuInner.firstChild.cloneNode(false),\n                 marginTop,\n                 marginBottom,\n-                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements;\n+                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements,\n+                toSanitize = [];\n \n             \/\/ replace the existing UL with an empty one - this is faster than $.empty()\n             menuInner.replaceChild(emptyMenu, menuInner.firstChild);\n \n             for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {\n-              menuFragment.appendChild(elements[i]);\n+              var element = elements[i],\n+                  elText,\n+                  elementData;\n+\n+              if (that.options.sanitize) {\n+                elText = element.lastChild;\n+\n+                if (elText) {\n+                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0].data;\n+\n+                  if (elementData && elementData.content && !elementData.sanitized) {\n+                    toSanitize.push(elText);\n+                    elementData.sanitized = true;\n+                  }\n+                }\n+              }\n+\n+              menuFragment.appendChild(element);\n+            }\n+\n+            if (that.options.sanitize && toSanitize.length) {\n+              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);\n             }\n \n             if (isVirtual === true) {\n@@ -1469,7 +1616,8 @@\n           multipleSeparator = document.createTextNode(this.options.multipleSeparator),\n           titleFragment = elementTemplates.fragment.cloneNode(false),\n           showCount,\n-          countMax;\n+          countMax,\n+          hasContent = false;\n \n       this.togglePlaceholder();\n \n@@ -1506,6 +1654,7 @@\n                 titleOptions.text = option.title;\n               } else if (thisData.content && that.options.showContent) {\n                 titleOptions.optionContent = thisData.content.toString();\n+                hasContent = true;\n               } else {\n                 if (that.options.showIcon) {\n                   titleOptions.optionIcon = thisData.icon;\n@@ -1554,6 +1703,10 @@\n       \/\/ strip all HTML tags and trim the result, then unescape any escaped tags\n       this.$button[0].title = titleFragment.textContent.replace(\/<[^>]*>?\/g, '').trim();\n \n+      if (this.options.sanitize && hasContent) {\n+        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);\n+      }\n+\n       buttonInner.innerHTML = '';\n       buttonInner.appendChild(titleFragment);\n \n@@ -2833,8 +2986,16 @@\n             options = typeof _option == 'object' && _option;\n \n         if (!data) {\n-          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\n-          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\n+          var dataAttributes = $this.data();\n+\n+          for (var dataAttr in dataAttributes) {\n+            if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\n+              delete dataAttributes[dataAttr];\n+            }\n+          }\n+\n+          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);\n+          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);\n           $this.data('selectpicker', (data = new Selectpicker(this, config)));\n         } else if (options) {\n           for (var i in options) {"
    },
    {
      "index":64,
      "vuln_id":"GHSA-x7r7-wmj8-vv5g",
      "cwe_id":"{'CWE-79'}",
      "score":7.5,
      "chain":"{'https:\/\/github.com\/octoprint\/octoprint\/commit\/8087528e4a7ddd15c7d95ff662deb5ef7de90045'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in OctoPrint Cross-site Scripting (XSS) - DOM in GitHub repository octoprint\/octoprint prior to 1.8.0. The login endpoint allows for javascript injection which may lead to account takeover in a phishing scenario.",
      "published_date":"2022-05-19",
      "chain_len":1,
      "project":"https:\/\/github.com\/octoprint\/octoprint",
      "commit_href":"https:\/\/github.com\/octoprint\/octoprint\/commit\/8087528e4a7ddd15c7d95ff662deb5ef7de90045",
      "commit_sha":"8087528e4a7ddd15c7d95ff662deb5ef7de90045",
      "patch":"SINGLE",
      "chain_ord":"['8087528e4a7ddd15c7d95ff662deb5ef7de90045']",
      "before_first_fix_commit":"{'700034d028ff3518b563a7b4ba4dacc920142d07'}",
      "last_fix_commit":"8087528e4a7ddd15c7d95ff662deb5ef7de90045",
      "chain_ord_pos":1.0,
      "commit_datetime":"05\/11\/2022, 11:02:52",
      "message":"\ud83d\udd12\ufe0f Sanitize and validate login redirect\n\nFixes an XSS and an open redirect issue.",
      "author":"Gina H\u00e4u\u00dfge",
      "comments":null,
      "stats":"{'additions': 11, 'deletions': 1, 'total': 12}",
      "files":"{'src\/octoprint\/server\/views.py': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OctoPrint\/OctoPrint\/raw\/8087528e4a7ddd15c7d95ff662deb5ef7de90045\/src%2Foctoprint%2Fserver%2Fviews.py', 'patch': '@@ -8,6 +8,7 @@\\n import os\\n import re\\n from collections import defaultdict\\n+from urllib.parse import urlparse\\n \\n from flask import (\\n     Response,\\n@@ -170,7 +171,16 @@ def _add_additional_assets(hook):\\n def login():\\n     from flask_login import current_user\\n \\n-    redirect_url = request.args.get(\"redirect\", request.script_root + url_for(\"index\"))\\n+    default_redirect_url = request.script_root + url_for(\"index\")\\n+    redirect_url = request.args.get(\"redirect\", default_redirect_url)\\n+\\n+    parsed = urlparse(redirect_url)  # check if redirect url is valid\\n+    if parsed.scheme != \"\" or parsed.netloc != \"\":\\n+        _logger.warning(\\n+            f\"Got an invalid redirect URL with the login attempt, misconfiguration or attack attempt: {redirect_url}\"\\n+        )\\n+        redirect_url = default_redirect_url\\n+\\n     permissions = sorted(\\n         filter(\\n             lambda x: x is not None and isinstance(x, OctoPrintPermission),'}}",
      "message_norm":"\ud83d\udd12\ufe0f sanitize and validate login redirect\n\nfixes an xss and an open redirect issue.",
      "language":"en",
      "entities":"[('sanitize', 'SECWORD', ''), ('validate', 'ACTION', ''), ('login', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('xss', 'SECWORD', ''), ('open redirect', 'SECWORD', ''), ('issue', 'FLAW', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/octoprint\/server\/views.py'])",
      "num_files":1.0,
      "patch_content":"From 8087528e4a7ddd15c7d95ff662deb5ef7de90045 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Gina=20H=C3=A4u=C3=9Fge?= <gina@octoprint.org>\nDate: Wed, 11 May 2022 13:02:52 +0200\nSubject: [PATCH] =?UTF-8?q?=F0=9F=94=92=EF=B8=8F=20Sanitize=20and=20valida?=\n =?UTF-8?q?te=20login=20redirect?=\nMIME-Version: 1.0\nContent-Type: text\/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\nFixes an XSS and an open redirect issue.\n---\n src\/octoprint\/server\/views.py | 12 +++++++++++-\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/octoprint\/server\/views.py b\/src\/octoprint\/server\/views.py\nindex 235e15f011..d1db66b267 100644\n--- a\/src\/octoprint\/server\/views.py\n+++ b\/src\/octoprint\/server\/views.py\n@@ -8,6 +8,7 @@\n import os\n import re\n from collections import defaultdict\n+from urllib.parse import urlparse\n \n from flask import (\n     Response,\n@@ -170,7 +171,16 @@ def _add_additional_assets(hook):\n def login():\n     from flask_login import current_user\n \n-    redirect_url = request.args.get(\"redirect\", request.script_root + url_for(\"index\"))\n+    default_redirect_url = request.script_root + url_for(\"index\")\n+    redirect_url = request.args.get(\"redirect\", default_redirect_url)\n+\n+    parsed = urlparse(redirect_url)  # check if redirect url is valid\n+    if parsed.scheme != \"\" or parsed.netloc != \"\":\n+        _logger.warning(\n+            f\"Got an invalid redirect URL with the login attempt, misconfiguration or attack attempt: {redirect_url}\"\n+        )\n+        redirect_url = default_redirect_url\n+\n     permissions = sorted(\n         filter(\n             lambda x: x is not None and isinstance(x, OctoPrintPermission),",
      "code_diff":"@@ -8,6 +8,7 @@\n import os\n import re\n from collections import defaultdict\n+from urllib.parse import urlparse\n \n from flask import (\n     Response,\n@@ -170,7 +171,16 @@ def _add_additional_assets(hook):\n def login():\n     from flask_login import current_user\n \n-    redirect_url = request.args.get(\"redirect\", request.script_root + url_for(\"index\"))\n+    default_redirect_url = request.script_root + url_for(\"index\")\n+    redirect_url = request.args.get(\"redirect\", default_redirect_url)\n+\n+    parsed = urlparse(redirect_url)  # check if redirect url is valid\n+    if parsed.scheme != \"\" or parsed.netloc != \"\":\n+        _logger.warning(\n+            f\"Got an invalid redirect URL with the login attempt, misconfiguration or attack attempt: {redirect_url}\"\n+        )\n+        redirect_url = default_redirect_url\n+\n     permissions = sorted(\n         filter(\n             lambda x: x is not None and isinstance(x, OctoPrintPermission),"
    },
    {
      "index":65,
      "vuln_id":"GHSA-2cqg-q7jm-j35c",
      "cwe_id":"{'CWE-79'}",
      "score":3.9,
      "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/9ed1442bd124710f4178992cc4eca5236c7396b9'}",
      "dataset":"osv",
      "summary":"snipe-it is vulnerable to Cross-site Scripting snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').",
      "published_date":"2021-11-15",
      "chain_len":1,
      "project":"https:\/\/github.com\/snipe\/snipe-it",
      "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/9ed1442bd124710f4178992cc4eca5236c7396b9",
      "commit_sha":"9ed1442bd124710f4178992cc4eca5236c7396b9",
      "patch":"SINGLE",
      "chain_ord":"['9ed1442bd124710f4178992cc4eca5236c7396b9']",
      "before_first_fix_commit":"{'edf98cb7951a922cdef7505e1efd115f92d1afd9', '3ea209a507fbcc992e0a9152e2074709e8459b47'}",
      "last_fix_commit":"9ed1442bd124710f4178992cc4eca5236c7396b9",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/09\/2021, 04:32:02",
      "message":"Merge pull request #10286 from uberbrady\/fix_bulk_audit_xss\n\nEscape asset_tag attribute at controller level for bulk checkout",
      "author":"snipe",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'app\/Http\/Controllers\/Api\/AssetsController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/9ed1442bd124710f4178992cc4eca5236c7396b9\/app%2FHttp%2FControllers%2FApi%2FAssetsController.php', 'patch': \"@@ -910,7 +910,7 @@ public function audit(Request $request) {\\n             }\\n         }\\n \\n-        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.$request->input('asset_tag').' not found'));\\n+        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.e($request->input('asset_tag')).' not found'));\"}}",
      "message_norm":"merge pull request #10286 from uberbrady\/fix_bulk_audit_xss\n\nescape asset_tag attribute at controller level for bulk checkout",
      "language":"en",
      "entities":"[('#10286', 'ISSUE', ''), ('fix_bulk_audit_xss', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['app\/Http\/Controllers\/Api\/AssetsController.php'])",
      "num_files":1.0,
      "patch_content":"From 3ea209a507fbcc992e0a9152e2074709e8459b47 Mon Sep 17 00:00:00 2001\nFrom: Brady Wetherington <bwetherington@grokability.com>\nDate: Mon, 8 Nov 2021 20:27:43 -0800\nSubject: [PATCH] Escape asset_tag attribute at controller level for\n consumption in bulk checkout\n\n---\n app\/Http\/Controllers\/Api\/AssetsController.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/app\/Http\/Controllers\/Api\/AssetsController.php b\/app\/Http\/Controllers\/Api\/AssetsController.php\nindex db1b1404ecd0..a9362188c186 100644\n--- a\/app\/Http\/Controllers\/Api\/AssetsController.php\n+++ b\/app\/Http\/Controllers\/Api\/AssetsController.php\n@@ -910,7 +910,7 @@ public function audit(Request $request) {\n             }\n         }\n \n-        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.$request->input('asset_tag').' not found'));\n+        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.e($request->input('asset_tag')).' not found'));",
      "code_diff":"@@ -910,7 +910,7 @@ public function audit(Request $request) {\n             }\n         }\n \n-        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.$request->input('asset_tag').' not found'));\n+        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.e($request->input('asset_tag')).' not found'));"
    },
    {
      "index":66,
      "vuln_id":"GHSA-mg5h-9rhq-4cqx",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/42c0d9813df3035728b36116a6ce9116e6fa8ed3'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting through file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
      "published_date":"2022-03-15",
      "chain_len":1,
      "project":"https:\/\/github.com\/star7th\/showdoc",
      "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/42c0d9813df3035728b36116a6ce9116e6fa8ed3",
      "commit_sha":"42c0d9813df3035728b36116a6ce9116e6fa8ed3",
      "patch":"SINGLE",
      "chain_ord":"['42c0d9813df3035728b36116a6ce9116e6fa8ed3']",
      "before_first_fix_commit":"{'818d7fe731f452acccacf731ce47ec27ad68049c'}",
      "last_fix_commit":"42c0d9813df3035728b36116a6ce9116e6fa8ed3",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/13\/2022, 02:27:22",
      "message":"file upload bug",
      "author":"star7th",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
      "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/42c0d9813df3035728b36116a6ce9116e6fa8ed3\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -300,6 +300,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t $isDangerStr($filename , \".php\")\\n \\t\\t\\t|| $isDangerStr($filename , \".svg\")\\n \\t\\t\\t|| $isDangerStr($filename , \".htm\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".shtm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t) {'}}",
      "message_norm":"file upload bug",
      "language":"ro",
      "entities":"[('bug', 'FLAW', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
      "num_files":1.0,
      "patch_content":"From 42c0d9813df3035728b36116a6ce9116e6fa8ed3 Mon Sep 17 00:00:00 2001\nFrom: star7th <xing7th@gmail.com>\nDate: Sun, 13 Mar 2022 10:27:22 +0800\nSubject: [PATCH] file upload bug\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex d84898984..32fb24799 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -300,6 +300,7 @@ public function isDangerFilename($filename){\n \t\t\t $isDangerStr($filename , \".php\")\n \t\t\t|| $isDangerStr($filename , \".svg\")\n \t\t\t|| $isDangerStr($filename , \".htm\")\n+\t\t\t|| $isDangerStr($filename , \".shtm\")\n \t\t\t|| $isDangerStr($filename , \"%\")\n \t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t) {",
      "code_diff":"@@ -300,6 +300,7 @@ public function isDangerFilename($filename){\n \t\t\t $isDangerStr($filename , \".php\")\n \t\t\t|| $isDangerStr($filename , \".svg\")\n \t\t\t|| $isDangerStr($filename , \".htm\")\n+\t\t\t|| $isDangerStr($filename , \".shtm\")\n \t\t\t|| $isDangerStr($filename , \"%\")\n \t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t) {"
    },
    {
      "index":67,
      "vuln_id":"GHSA-x92h-wmg2-6hp7",
      "cwe_id":"{'CWE-89', 'CWE-79'}",
      "score":9.8,
      "chain":"{'https:\/\/github.com\/symfony\/symfony\/commit\/944e60f083c3bffbc6a0b5112db127a10a66a8ec'}",
      "dataset":"osv",
      "summary":"Invalid HTTP method overrides allow possible XSS or other attacks in Symfony In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, HTTP Methods provided as verbs or using the override header may be treated as trusted input, but they are not validated, possibly causing SQL injection or XSS. This is related to symfony\/http-foundation.",
      "published_date":"2019-12-02",
      "chain_len":1,
      "project":"https:\/\/github.com\/symfony\/symfony",
      "commit_href":"https:\/\/github.com\/symfony\/symfony\/commit\/944e60f083c3bffbc6a0b5112db127a10a66a8ec",
      "commit_sha":"944e60f083c3bffbc6a0b5112db127a10a66a8ec",
      "patch":"SINGLE",
      "chain_ord":"['944e60f083c3bffbc6a0b5112db127a10a66a8ec']",
      "before_first_fix_commit":"{'b7bdf2ce435b0aeb8edb8349f0456f7ca3d21035'}",
      "last_fix_commit":"944e60f083c3bffbc6a0b5112db127a10a66a8ec",
      "chain_ord_pos":1.0,
      "commit_datetime":"04\/02\/2019, 16:28:16",
      "message":"[HttpFoundation] reject invalid method override",
      "author":"Nicolas Grekas",
      "comments":"{'com_1': {'author': 'jirayutza1', 'datetime': '12\/04\/2019, 20:11:46', 'body': '944e60f'}}",
      "stats":"{'additions': 29, 'deletions': 14, 'total': 43}",
      "files":"{'src\/Symfony\/Component\/HttpFoundation\/Request.php': {'additions': 29, 'deletions': 14, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/symfony\/symfony\/raw\/944e60f083c3bffbc6a0b5112db127a10a66a8ec\/src%2FSymfony%2FComponent%2FHttpFoundation%2FRequest.php', 'patch': '@@ -1346,22 +1346,37 @@ public function setMethod($method)\\n      *\/\\n     public function getMethod()\\n     {\\n-        if (null === $this->method) {\\n-            $this->method = strtoupper($this->server->get(\\'REQUEST_METHOD\\', \\'GET\\'));\\n-\\n-            if (\\'POST\\' === $this->method) {\\n-                if ($method = $this->headers->get(\\'X-HTTP-METHOD-OVERRIDE\\')) {\\n-                    $this->method = strtoupper($method);\\n-                } elseif (self::$httpMethodParameterOverride) {\\n-                    $method = $this->request->get(\\'_method\\', $this->query->get(\\'_method\\', \\'POST\\'));\\n-                    if (\\\\is_string($method)) {\\n-                        $this->method = strtoupper($method);\\n-                    }\\n-                }\\n-            }\\n+        if (null !== $this->method) {\\n+            return $this->method;\\n+        }\\n+\\n+        $this->method = strtoupper($this->server->get(\\'REQUEST_METHOD\\', \\'GET\\'));\\n+\\n+        if (\\'POST\\' !== $this->method) {\\n+            return $this->method;\\n+        }\\n+\\n+        $method = $this->headers->get(\\'X-HTTP-METHOD-OVERRIDE\\');\\n+\\n+        if (!$method && self::$httpMethodParameterOverride) {\\n+            $method = $this->request->get(\\'_method\\', $this->query->get(\\'_method\\', \\'POST\\'));\\n+        }\\n+\\n+        if (!\\\\is_string($method)) {\\n+            return $this->method;\\n+        }\\n+\\n+        $method = strtoupper($method);\\n+\\n+        if (\\\\in_array($method, [\\'GET\\', \\'HEAD\\', \\'POST\\', \\'PUT\\', \\'DELETE\\', \\'CONNECT\\', \\'OPTIONS\\', \\'PATCH\\', \\'PURGE\\', \\'TRACE\\'], true)) {\\n+            return $this->method = $method;\\n+        }\\n+\\n+        if (!preg_match(\\'\/^[A-Z]++$\/D\\', $method)) {\\n+            throw new SuspiciousOperationException(sprintf(\\'Invalid method override \"%s\".\\', $method));\\n         }\\n \\n-        return $this->method;\\n+        return $this->method = $method;\\n     }\\n \\n     \/**'}}",
      "message_norm":"[httpfoundation] reject invalid method override",
      "language":"en",
      "entities":null,
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/Symfony\/Component\/HttpFoundation\/Request.php'])",
      "num_files":1.0,
      "patch_content":"From 944e60f083c3bffbc6a0b5112db127a10a66a8ec Mon Sep 17 00:00:00 2001\nFrom: Nicolas Grekas <nicolas.grekas@gmail.com>\nDate: Tue, 2 Apr 2019 18:28:16 +0200\nSubject: [PATCH] [HttpFoundation] reject invalid method override\n\n---\n ...\/Component\/HttpFoundation\/Request.php      | 43 +++++++++++++------\n 1 file changed, 29 insertions(+), 14 deletions(-)\n\ndiff --git a\/src\/Symfony\/Component\/HttpFoundation\/Request.php b\/src\/Symfony\/Component\/HttpFoundation\/Request.php\nindex fe1a33a597a3e..ae3f51b1724fc 100644\n--- a\/src\/Symfony\/Component\/HttpFoundation\/Request.php\n+++ b\/src\/Symfony\/Component\/HttpFoundation\/Request.php\n@@ -1346,22 +1346,37 @@ public function setMethod($method)\n      *\/\n     public function getMethod()\n     {\n-        if (null === $this->method) {\n-            $this->method = strtoupper($this->server->get('REQUEST_METHOD', 'GET'));\n-\n-            if ('POST' === $this->method) {\n-                if ($method = $this->headers->get('X-HTTP-METHOD-OVERRIDE')) {\n-                    $this->method = strtoupper($method);\n-                } elseif (self::$httpMethodParameterOverride) {\n-                    $method = $this->request->get('_method', $this->query->get('_method', 'POST'));\n-                    if (\\is_string($method)) {\n-                        $this->method = strtoupper($method);\n-                    }\n-                }\n-            }\n+        if (null !== $this->method) {\n+            return $this->method;\n+        }\n+\n+        $this->method = strtoupper($this->server->get('REQUEST_METHOD', 'GET'));\n+\n+        if ('POST' !== $this->method) {\n+            return $this->method;\n+        }\n+\n+        $method = $this->headers->get('X-HTTP-METHOD-OVERRIDE');\n+\n+        if (!$method && self::$httpMethodParameterOverride) {\n+            $method = $this->request->get('_method', $this->query->get('_method', 'POST'));\n+        }\n+\n+        if (!\\is_string($method)) {\n+            return $this->method;\n+        }\n+\n+        $method = strtoupper($method);\n+\n+        if (\\in_array($method, ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'CONNECT', 'OPTIONS', 'PATCH', 'PURGE', 'TRACE'], true)) {\n+            return $this->method = $method;\n+        }\n+\n+        if (!preg_match('\/^[A-Z]++$\/D', $method)) {\n+            throw new SuspiciousOperationException(sprintf('Invalid method override \"%s\".', $method));\n         }\n \n-        return $this->method;\n+        return $this->method = $method;\n     }\n \n     \/**",
      "code_diff":"@@ -1346,22 +1346,37 @@ public function setMethod($method)\n      *\/\n     public function getMethod()\n     {\n-        if (null === $this->method) {\n-            $this->method = strtoupper($this->server->get('REQUEST_METHOD', 'GET'));\n-\n-            if ('POST' === $this->method) {\n-                if ($method = $this->headers->get('X-HTTP-METHOD-OVERRIDE')) {\n-                    $this->method = strtoupper($method);\n-                } elseif (self::$httpMethodParameterOverride) {\n-                    $method = $this->request->get('_method', $this->query->get('_method', 'POST'));\n-                    if (\\is_string($method)) {\n-                        $this->method = strtoupper($method);\n-                    }\n-                }\n-            }\n+        if (null !== $this->method) {\n+            return $this->method;\n+        }\n+\n+        $this->method = strtoupper($this->server->get('REQUEST_METHOD', 'GET'));\n+\n+        if ('POST' !== $this->method) {\n+            return $this->method;\n+        }\n+\n+        $method = $this->headers->get('X-HTTP-METHOD-OVERRIDE');\n+\n+        if (!$method && self::$httpMethodParameterOverride) {\n+            $method = $this->request->get('_method', $this->query->get('_method', 'POST'));\n+        }\n+\n+        if (!\\is_string($method)) {\n+            return $this->method;\n+        }\n+\n+        $method = strtoupper($method);\n+\n+        if (\\in_array($method, ['GET', 'HEAD', 'POST', 'PUT', 'DELETE', 'CONNECT', 'OPTIONS', 'PATCH', 'PURGE', 'TRACE'], true)) {\n+            return $this->method = $method;\n+        }\n+\n+        if (!preg_match('\/^[A-Z]++$\/D', $method)) {\n+            throw new SuspiciousOperationException(sprintf('Invalid method override \"%s\".', $method));\n         }\n \n-        return $this->method;\n+        return $this->method = $method;\n     }\n \n     \/**"
    },
    {
      "index":68,
      "vuln_id":"GHSA-54qq-9chj-rxhv",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in LiveHelperChat LiveHelperChat prior to version 3.93 contains a cross-site scripting vulnerability.",
      "published_date":"2022-01-29",
      "chain_len":1,
      "project":"https:\/\/github.com\/livehelperchat\/livehelperchat",
      "commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
      "commit_sha":"8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
      "patch":"SINGLE",
      "chain_ord":"['8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb']",
      "before_first_fix_commit":"{'d7b85466c217b3750eaccc8703ce54ba8785c4d3'}",
      "last_fix_commit":"8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
      "chain_ord_pos":1.0,
      "commit_datetime":"01\/27\/2022, 20:08:18",
      "message":"Escape in user box",
      "author":"Remigijus Kiminas",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb\/lhc_web%2Fdesign%2Fdefaulttheme%2Ftpl%2Fpagelayouts%2Fparts%2Fuser_box.tpl.php', 'patch': '@@ -12,7 +12,7 @@\\n \\n ?>\\n <li class=\"nav-item dropleft\">\\n-    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),\\' \\',htmlspecialchars($UserData->surname)?><\/a>\\n+    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" ng-non-bindable><?php echo htmlspecialchars($UserData->name),\\' \\',htmlspecialchars($UserData->surname)?><\/a>\\n     <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\\n \\n         <div class=\"row\">'}}",
      "message_norm":"escape in user box",
      "language":"en",
      "entities":"[('escape', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php'])",
      "num_files":1.0,
      "patch_content":"From 8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb Mon Sep 17 00:00:00 2001\nFrom: Remigijus Kiminas <remdex@gmail.com>\nDate: Thu, 27 Jan 2022 15:08:18 -0500\nSubject: [PATCH] Escape in user box\n\n---\n ...\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php  | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php b\/lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php\nindex 9e5ea86a27..2c1b42a521 100644\n--- a\/lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php\n+++ b\/lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php\n@@ -12,7 +12,7 @@\n \n ?>\n <li class=\"nav-item dropleft\">\n-    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),' ',htmlspecialchars($UserData->surname)?><\/a>\n+    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" ng-non-bindable><?php echo htmlspecialchars($UserData->name),' ',htmlspecialchars($UserData->surname)?><\/a>\n     <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\n \n         <div class=\"row\">",
      "code_diff":"@@ -12,7 +12,7 @@\n \n ?>\n <li class=\"nav-item dropleft\">\n-    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),' ',htmlspecialchars($UserData->surname)?><\/a>\n+    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" ng-non-bindable><?php echo htmlspecialchars($UserData->name),' ',htmlspecialchars($UserData->surname)?><\/a>\n     <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\n \n         <div class=\"row\">"
    },
    {
      "index":69,
      "vuln_id":"GHSA-mrvj-7q4f-5p42",
      "cwe_id":"{'CWE-79'}",
      "score":0.0,
      "chain":"{'https:\/\/github.com\/ezsystems\/ezpublish-kernel\/commit\/29fecd2afe86f763510f10c02f14962d028f311b'}",
      "dataset":"osv",
      "summary":"Cross-site scripting in eZ Platform Kernel ### Impact\nIn file upload it is possible by certain means to upload files like .html and .js. These may contain XSS exploits which will be run when links to them are accessed by victims.\n\n### Patches\nThe fix consists simply of adding common types of scriptable file types to the configuration of the already existing filetype blacklist feature. See \"Patched versions\". As such, this can also be done manually, without installing the patched versions. This may be relevant if you are currently running a considerably older version of the kernel package and don't want to upgrade it at this time. Please see the settting \"ezsettings.default.io.file_storage.file_type_blacklist\" at:\nhttps:\/\/github.com\/ezsystems\/ezplatform-kernel\/blob\/master\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml#L109\n\n### Important note\nYou should adapt this setting to your needs. Do not add file types to the blacklist that you actually need to be able to upload. For instance, if you need your editors to be able to upload SVG files, then don't blacklist that. Instead, you could e.g. use an approval workflow for such content.",
      "published_date":"2021-03-19",
      "chain_len":1,
      "project":"https:\/\/github.com\/ezsystems\/ezpublish-kernel",
      "commit_href":"https:\/\/github.com\/ezsystems\/ezpublish-kernel\/commit\/29fecd2afe86f763510f10c02f14962d028f311b",
      "commit_sha":"29fecd2afe86f763510f10c02f14962d028f311b",
      "patch":"SINGLE",
      "chain_ord":"['29fecd2afe86f763510f10c02f14962d028f311b']",
      "before_first_fix_commit":"{'4a538dbfd28fecd404f11fa0816b69a5a9e93a16'}",
      "last_fix_commit":"29fecd2afe86f763510f10c02f14962d028f311b",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/17\/2021, 15:03:30",
      "message":"Merge pull request from GHSA-mrvj-7q4f-5p42\n\nCo-authored-by: Gunnstein Lye <gunnstein.lye@ibexa.co>",
      "author":"Gunnstein Lye",
      "comments":null,
      "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
      "files":"{'eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ezsystems\/ezpublish-kernel\/raw\/29fecd2afe86f763510f10c02f14962d028f311b\/eZ%2FBundle%2FEzPublishCoreBundle%2FResources%2Fconfig%2Fdefault_settings.yml', 'patch': '@@ -89,6 +89,16 @@ parameters:\\n         - pht\\n         - phtml\\n         - pgif\\n+        - hta\\n+        - htm\\n+        - html\\n+        - xhtm\\n+        - xhtml\\n+        - jar\\n+        - js\\n+        - jse\\n+        - svg\\n+        - swf\\n \\n     # Content settings\\n     ezsettings.default.content.view_cache: true         # Whether to use content view cache or not (Etag\/Last-Modified based)'}}",
      "message_norm":"merge pull request from ghsa-mrvj-7q4f-5p42\n\nco-authored-by: gunnstein lye <gunnstein.lye@ibexa.co>",
      "language":"en",
      "entities":"[('ghsa-mrvj-7q4f-5p42', 'VULNID', 'GHSA'), ('gunnstein.lye@ibexa.co', 'EMAIL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml'])",
      "num_files":1.0,
      "patch_content":"From 29fecd2afe86f763510f10c02f14962d028f311b Mon Sep 17 00:00:00 2001\nFrom: Gunnstein Lye <gunnstein.lye@ez.no>\nDate: Wed, 17 Mar 2021 16:03:30 +0100\nSubject: [PATCH] Merge pull request from GHSA-mrvj-7q4f-5p42\n\nCo-authored-by: Gunnstein Lye <gunnstein.lye@ibexa.co>\n---\n ...\/Resources\/config\/default_settings.yml              | 10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ndiff --git a\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml b\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml\nindex 42e5c2ee251..bdd60ec7012 100644\n--- a\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml\n+++ b\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml\n@@ -89,6 +89,16 @@ parameters:\n         - pht\n         - phtml\n         - pgif\n+        - hta\n+        - htm\n+        - html\n+        - xhtm\n+        - xhtml\n+        - jar\n+        - js\n+        - jse\n+        - svg\n+        - swf\n \n     # Content settings\n     ezsettings.default.content.view_cache: true         # Whether to use content view cache or not (Etag\/Last-Modified based)",
      "code_diff":"@@ -89,6 +89,16 @@ parameters:\n         - pht\n         - phtml\n         - pgif\n+        - hta\n+        - htm\n+        - html\n+        - xhtm\n+        - xhtml\n+        - jar\n+        - js\n+        - jse\n+        - svg\n+        - swf\n \n     # Content settings\n     ezsettings.default.content.view_cache: true         # Whether to use content view cache or not (Etag\/Last-Modified based)"
    },
    {
      "index":70,
      "vuln_id":"GHSA-jq4v-f5q6-mjqq",
      "cwe_id":"{'CWE-79'}",
      "score":6.1,
      "chain":"{'https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270', 'https:\/\/github.com\/lxml\/lxml\/commit\/a5f9cb52079dc57477c460dbe6ba0f775e14a999', 'https:\/\/github.com\/lxml\/lxml\/commit\/2d01a1ba8984e0483ce6619b972832377f208a0d'}",
      "dataset":"osv",
      "summary":"lxml before 4.6.3 vulnerable to Cross-Site Scripting  An XSS vulnerability was discovered in the python `lxml` clean module versions before 4.6.3. When disabling `the safe_attrs_only` and `forms` arguments, the `Cleaner` class does not remove the `formaction` attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in `lxml` 4.6.3.",
      "published_date":"2021-03-22",
      "chain_len":3,
      "project":"https:\/\/github.com\/lxml\/lxml",
      "commit_href":"https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270",
      "commit_sha":"10ec1b4e9f93713513a3264ed6158af22492f270",
      "patch":"MULTI",
      "chain_ord":"['10ec1b4e9f93713513a3264ed6158af22492f270', '2d01a1ba8984e0483ce6619b972832377f208a0d', 'a5f9cb52079dc57477c460dbe6ba0f775e14a999']",
      "before_first_fix_commit":"{'2d01a1ba8984e0483ce6619b972832377f208a0d'}",
      "last_fix_commit":"a5f9cb52079dc57477c460dbe6ba0f775e14a999",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/20\/2021, 06:49:25",
      "message":"Add formaction attribute to defs.link_attrs",
      "author":"Kevin Chung",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
      "files":"{'src\/lxml\/html\/defs.py': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lxml\/lxml\/raw\/10ec1b4e9f93713513a3264ed6158af22492f270\/src%2Flxml%2Fhtml%2Fdefs.py', 'patch': \"@@ -23,6 +23,8 @@\\n     'usemap',\\n     # Not standard:\\n     'dynsrc', 'lowsrc',\\n+    # HTML5 formaction\\n+    'formaction'\\n     ])\\n \\n # Not in the HTML 4 spec:\"}}",
      "message_norm":"add formaction attribute to defs.link_attrs",
      "language":"en",
      "entities":"[('add', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/lxml\/html\/defs.py'])",
      "num_files":1.0,
      "patch_content":"From 10ec1b4e9f93713513a3264ed6158af22492f270 Mon Sep 17 00:00:00 2001\nFrom: Kevin Chung <kchung@nyu.edu>\nDate: Sat, 20 Mar 2021 02:49:25 -0400\nSubject: [PATCH] Add formaction attribute to defs.link_attrs\n\n---\n src\/lxml\/html\/defs.py | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/src\/lxml\/html\/defs.py b\/src\/lxml\/html\/defs.py\nindex 1b3a75b36..2058ea330 100644\n--- a\/src\/lxml\/html\/defs.py\n+++ b\/src\/lxml\/html\/defs.py\n@@ -23,6 +23,8 @@\n     'usemap',\n     # Not standard:\n     'dynsrc', 'lowsrc',\n+    # HTML5 formaction\n+    'formaction'\n     ])\n \n # Not in the HTML 4 spec:",
      "code_diff":"@@ -23,6 +23,8 @@\n     'usemap',\n     # Not standard:\n     'dynsrc', 'lowsrc',\n+    # HTML5 formaction\n+    'formaction'\n     ])\n \n # Not in the HTML 4 spec:"
    },
    {
      "index":71,
      "vuln_id":"GHSA-8x44-pwr2-rgc6",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/832c34aeb9f21f213295a0c28377132df996352a'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in pimcore Pimcore settings module is vulnerable to stored cross site scripting",
      "published_date":"2022-01-28",
      "chain_len":1,
      "project":"https:\/\/github.com\/pimcore\/pimcore",
      "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/832c34aeb9f21f213295a0c28377132df996352a",
      "commit_sha":"832c34aeb9f21f213295a0c28377132df996352a",
      "patch":"SINGLE",
      "chain_ord":"['832c34aeb9f21f213295a0c28377132df996352a']",
      "before_first_fix_commit":"{'e94591dd8f5006452667a04c93e4422b05234eea'}",
      "last_fix_commit":"832c34aeb9f21f213295a0c28377132df996352a",
      "chain_ord_pos":1.0,
      "commit_datetime":"01\/26\/2022, 13:08:27",
      "message":"added escape function to the icon field",
      "author":"Jia Jia Ji",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
      "files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/832c34aeb9f21f213295a0c28377132df996352a\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassController.php', 'patch': \"@@ -119,7 +119,7 @@ public function getTreeAction(Request $request)\\n                 'id' => $class->getId(),\\n                 'text' => $text,\\n                 'leaf' => true,\\n-                'icon' => $class->getIcon() ? $class->getIcon() : $defaultIcon,\\n+                'icon' => $class->getIcon() ? htmlspecialchars($class->getIcon()) : $defaultIcon,\\n                 'cls' => 'pimcore_class_icon',\\n                 'propertyVisibility' => $class->getPropertyVisibility(),\\n                 'enableGridLocking' => $class->isEnableGridLocking(),\"}}",
      "message_norm":"added escape function to the icon field",
      "language":"en",
      "entities":"[('added', 'ACTION', ''), ('escape', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php'])",
      "num_files":1.0,
      "patch_content":"From 832c34aeb9f21f213295a0c28377132df996352a Mon Sep 17 00:00:00 2001\nFrom: Jia Jia Ji <kingjia90@gmail.com>\nDate: Wed, 26 Jan 2022 14:08:27 +0100\nSubject: [PATCH] added escape function to the icon field\n\n---\n ...\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php b\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php\nindex 84582a8c58f..93339ef2069 100644\n--- a\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php\n+++ b\/bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php\n@@ -119,7 +119,7 @@ public function getTreeAction(Request $request)\n                 'id' => $class->getId(),\n                 'text' => $text,\n                 'leaf' => true,\n-                'icon' => $class->getIcon() ? $class->getIcon() : $defaultIcon,\n+                'icon' => $class->getIcon() ? htmlspecialchars($class->getIcon()) : $defaultIcon,\n                 'cls' => 'pimcore_class_icon',\n                 'propertyVisibility' => $class->getPropertyVisibility(),\n                 'enableGridLocking' => $class->isEnableGridLocking(),",
      "code_diff":"@@ -119,7 +119,7 @@ public function getTreeAction(Request $request)\n                 'id' => $class->getId(),\n                 'text' => $text,\n                 'leaf' => true,\n-                'icon' => $class->getIcon() ? $class->getIcon() : $defaultIcon,\n+                'icon' => $class->getIcon() ? htmlspecialchars($class->getIcon()) : $defaultIcon,\n                 'cls' => 'pimcore_class_icon',\n                 'propertyVisibility' => $class->getPropertyVisibility(),\n                 'enableGridLocking' => $class->isEnableGridLocking(),"
    },
    {
      "index":72,
      "vuln_id":"GHSA-3j9m-hcv9-rpj8",
      "cwe_id":"{'CWE-79'}",
      "score":6.9,
      "chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88', 'https:\/\/github.com\/grafana\/grafana\/commit\/31b78d51c693d828720a5b285107a50e6024c912'}",
      "dataset":"osv",
      "summary":"XSS vulnerability allowing arbitrary JavaScript execution Today we are releasing Grafana 8.2.3. This patch release includes an important security fix for an issue that affects all Grafana versions from 8.0.0-beta1.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched and an audit did not find any usage of this attack vector. [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n## CVE-2021-41174 XSS vulnerability on unauthenticated pages\n\n### Summary\n\nCVSS Score: 6.9 Medium\nCVSS:[CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L](https:\/\/www.first.org\/cvss\/calculator\/3.0#CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L)\n\nWe received a security report to security@grafana.com on 2021-10-21 about a vulnerability in Grafana regarding the XSS vulnerability.\n\nIt was later identified as affecting Grafana versions from 8.0.0-beta1 to 8.2.2. [CVE-2021-41174](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2021-41174) has been assigned to this vulnerability.\n\n### Impact\n\nIf an attacker is able to convince a victim to visit a URL referencing a vulnerable page, arbitrary JavaScript content may be executed within the context of the victim's browser.\n\nThe user visiting the malicious link must be unauthenticated and the link must be for a page that contains the login button in the menu bar.\n\nThere are two ways an unauthenticated user can open a page in Grafana that contains the login button:\n- Anonymous authentication is enabled. This means all pages in Grafana would be open for the attack.\n- The link is to an unauthenticated page. The following pages are vulnerable:\n  - `\/dashboard-solo\/snapshot\/*`\n  - `\/dashboard\/snapshot\/*`\n  - `\/invite\/:code`\n\nThe url has to be crafted to exploit AngularJS rendering and contain the interpolation binding for AngularJS expressions. AngularJS uses double curly braces for interpolation binding: {{ }} \n\nAn example of an expression would be: `{{constructor.constructor(\u2018alert(1)\u2019)()}}`. This can be included in the link URL like this: \n\nhttps:\/\/play.grafana.org\/dashboard\/snapshot\/%7B%7Bconstructor.constructor('alert(1)')()%7D%7D?orgId=1\n\nWhen the user follows the link and the page renders, the login button will contain the original link with a query parameter to force a redirect to the login page. The URL is not validated and the AngularJS rendering engine will execute the JavaScript expression contained in the URL.\n\n### Attack audit\n\nWe can not guarantee that the below will identify all attacks, so if you find something using the audit process described below, you should consider doing a full assessment.\n\n#### Through reverse proxy\/load balancer logs\n\nTo determine if your Grafana installation has been exploited for this vulnerability, search through your reverse proxy\/load balancer access logs for instances where the path contains `{{` followed by something that would invoke JavaScript code. For example, this could be code that attempts to show a fake login page or to steal browser or session data. The [OWASP cheat sheet](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/XSS_Filter_Evasion_Cheat_Sheet.html) has several examples of XSS attacks.\n\n#### Through the Grafana Enterprise audit feature\n\nIf you enabled \u201cLog web requests\u201d in your configuration with `router_logging = true`, look for requests where `path` contains `{{` followed by something that would invoke JavaScript code.\n\n### Patched versions\n\nRelease 8.2.3:\n\n- [Download Grafana 8.2.3](https:\/\/grafana.com\/grafana\/download\/8.2.3)\n- [Release notes](https:\/\/grafana.com\/docs\/grafana\/latest\/release-notes\/release-notes-8-2-3\/)\n\n### Solutions and mitigations\n\nDownload and install the appropriate patch for your version of Grafana.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched, and [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n### Workaround\n\nIf for some reason you cannot upgrade, you can use a reverse proxy or similar to block access to block the literal string `{{` in the path.\n\nExample of an Nginx rule to block the literal string `{{`:\n\n```\nlocation ~ \\{\\{ {\n    deny all;\n}\n```\n### Timeline and postmortem\n\nHere is a detailed timeline starting from when we originally learned of the issue. All times in UTC. \n\n* 2021-10-21 23:13: Security researcher sends the initial report about an XSS vulnerability.\n* 2021-10-21 23:13: Confirmed to be reproducible in at least versions 8.0.5 and 8.2.2.\n* 2021-10-22 02:02 MEDIUM severity declared.\n* 2021-10-22 09:22: it is discovered that Grafana instances with anonymous auth turned on are vulnerable. This includes https:\/\/play.grafana.org\/ .\n* 2021-10-22 09:50: Anonymous access disabled for all instances on Grafana Cloud as a mitigation measure.\n* 2021-10-22 11:15: Workaround deployed on Grafana Cloud that blocks malicious requests.\n* 2021-10-22 12:35: Enabled anonymous access for instances on Grafana Cloud. \n* 2021-10-22 12:51: All instances protected by the workaround. From this point forward, Grafana Cloud is no longer affected.\n* 2021-10-22 14:05 Grafana Cloud instances updated with a fix.\n* 2021-10-22 19:23 :Determination that no weekend work is needed as the issue is of MEDIUM severity and the root cause has been identified.\n* 2021-10-25 14:13: Audit of Grafana Cloud concluded, no evidence of exploitation.\n* 2021-10-27 12:00: Grafana Enterprise images released to customers under embargo.\n* 2021-11-03 12:00: Public release.\n\n## Reporting security issues\n\nIf you think you have found a security vulnerability, please send a report to [security@grafana.com](mailto:security@grafana.com). This address can be used for all of\nGrafana Labs' open source and commercial products (including but not limited to Grafana, Tempo, Loki, k6, Tanka, and  Grafana Cloud, Grafana Enterprise, and grafana.com). We only accept vulnerability reports at this address. We would prefer that you encrypt your message to us using our PGP key. The key fingerprint is:\n\nF988 7BEA 027A 049F AE8E  5CAA D125 8932 BE24 C5CA\n\nThe key is available from [ keyserver.ubuntu.com]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?op=get&fingerprint=on&search=0xD1258932BE24C5CA) by searching for [security@grafana]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?search=security@grafana&fingerprint=on&op=index).\n\n## Security announcements\n\nThere is a Security [category](https:\/\/grafana.com\/tags\/security\/) on the Grafana blog where we will post a summary, remediation, and mitigation details for any patch containing security fixes and you can subscribe to updates from our [Security Announcements RSS feed](https:\/\/grafana.com\/tags\/security\/index.xml).",
      "published_date":"2021-11-08",
      "chain_len":3,
      "project":"https:\/\/github.com\/grafana\/grafana",
      "commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88",
      "commit_sha":"fb85ed691290d211a5baa44d9a641ab137f0de88",
      "patch":"MULTI",
      "chain_ord":"['31b78d51c693d828720a5b285107a50e6024c912', '3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'fb85ed691290d211a5baa44d9a641ab137f0de88']",
      "before_first_fix_commit":"{'3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'a3dc30546fce2e437d858c140f1ff307a04365d6'}",
      "last_fix_commit":"fb85ed691290d211a5baa44d9a641ab137f0de88",
      "chain_ord_pos":3.0,
      "commit_datetime":"10\/25\/2021, 07:45:05",
      "message":"Merge pull request #147 from grafana\/axelav\/sanitized-nav-links-8-2-3\n\nSanitized NavBar children links to remove angular interpolation v8.2.3",
      "author":"Oscar Kilhed",
      "comments":null,
      "stats":"{'additions': 5, 'deletions': 3, 'total': 8}",
      "files":"{'public\/app\/core\/components\/NavBar\/DropdownChild.tsx': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/fb85ed691290d211a5baa44d9a641ab137f0de88\/public%2Fapp%2Fcore%2Fcomponents%2FNavBar%2FDropdownChild.tsx', 'patch': '@@ -1,6 +1,6 @@\\n import React from \\'react\\';\\n import { css } from \\'@emotion\/css\\';\\n-import { GrafanaTheme2 } from \\'@grafana\/data\\';\\n+import { GrafanaTheme2, textUtil } from \\'@grafana\/data\\';\\n import { Icon, IconName, Link, useTheme2 } from \\'@grafana\/ui\\';\\n \\n export interface Props {\\n@@ -29,13 +29,15 @@ const DropdownChild = ({ isDivider = false, icon, onClick, target, text, url }:\\n     <\/button>\\n   );\\n   if (url) {\\n+    const sanitizedUrl = textUtil.sanitizeAngularInterpolation(url);\\n+\\n     element =\\n       !target && url.startsWith(\\'\/\\') ? (\\n-        <Link className={styles.element} onClick={onClick} href={url}>\\n+        <Link className={styles.element} onClick={onClick} href={sanitizedUrl}>\\n           {linkContent}\\n         <\/Link>\\n       ) : (\\n-        <a className={styles.element} href={url} target={target} rel=\"noopener\" onClick={onClick}>\\n+        <a className={styles.element} href={sanitizedUrl} target={target} rel=\"noopener\" onClick={onClick}>\\n           {linkContent}\\n         <\/a>\\n       );'}}",
      "message_norm":"merge pull request #147 from grafana\/axelav\/sanitized-nav-links-8-2-3\n\nsanitized navbar children links to remove angular interpolation v8.2.3",
      "language":"en",
      "entities":"[('#147', 'ISSUE', ''), ('sanitized', 'SECWORD', ''), ('sanitized', 'SECWORD', ''), ('remove', 'ACTION', ''), ('v8.2.3', 'VERSION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['public\/app\/core\/components\/NavBar\/DropdownChild.tsx'])",
      "num_files":1.0,
      "patch_content":"From a3dc30546fce2e437d858c140f1ff307a04365d6 Mon Sep 17 00:00:00 2001\nFrom: Alexandra Vargas <alexa1866@gmail.com>\nDate: Fri, 22 Oct 2021 17:40:31 +0200\nSubject: [PATCH] NavBar: Add sanitize to children items\n\n---\n public\/app\/core\/components\/NavBar\/DropdownChild.tsx | 8 +++++---\n 1 file changed, 5 insertions(+), 3 deletions(-)\n\ndiff --git a\/public\/app\/core\/components\/NavBar\/DropdownChild.tsx b\/public\/app\/core\/components\/NavBar\/DropdownChild.tsx\nindex 6badadb67d7e..22c2516a9b1b 100644\n--- a\/public\/app\/core\/components\/NavBar\/DropdownChild.tsx\n+++ b\/public\/app\/core\/components\/NavBar\/DropdownChild.tsx\n@@ -1,6 +1,6 @@\n import React from 'react';\n import { css } from '@emotion\/css';\n-import { GrafanaTheme2 } from '@grafana\/data';\n+import { GrafanaTheme2, textUtil } from '@grafana\/data';\n import { Icon, IconName, Link, useTheme2 } from '@grafana\/ui';\n \n export interface Props {\n@@ -29,13 +29,15 @@ const DropdownChild = ({ isDivider = false, icon, onClick, target, text, url }:\n     <\/button>\n   );\n   if (url) {\n+    const sanitizedUrl = textUtil.sanitizeAngularInterpolation(url);\n+\n     element =\n       !target && url.startsWith('\/') ? (\n-        <Link className={styles.element} onClick={onClick} href={url}>\n+        <Link className={styles.element} onClick={onClick} href={sanitizedUrl}>\n           {linkContent}\n         <\/Link>\n       ) : (\n-        <a className={styles.element} href={url} target={target} rel=\"noopener\" onClick={onClick}>\n+        <a className={styles.element} href={sanitizedUrl} target={target} rel=\"noopener\" onClick={onClick}>\n           {linkContent}\n         <\/a>\n       );",
      "code_diff":"@@ -1,6 +1,6 @@\n import React from 'react';\n import { css } from '@emotion\/css';\n-import { GrafanaTheme2 } from '@grafana\/data';\n+import { GrafanaTheme2, textUtil } from '@grafana\/data';\n import { Icon, IconName, Link, useTheme2 } from '@grafana\/ui';\n \n export interface Props {\n@@ -29,13 +29,15 @@ const DropdownChild = ({ isDivider = false, icon, onClick, target, text, url }:\n     <\/button>\n   );\n   if (url) {\n+    const sanitizedUrl = textUtil.sanitizeAngularInterpolation(url);\n+\n     element =\n       !target && url.startsWith('\/') ? (\n-        <Link className={styles.element} onClick={onClick} href={url}>\n+        <Link className={styles.element} onClick={onClick} href={sanitizedUrl}>\n           {linkContent}\n         <\/Link>\n       ) : (\n-        <a className={styles.element} href={url} target={target} rel=\"noopener\" onClick={onClick}>\n+        <a className={styles.element} href={sanitizedUrl} target={target} rel=\"noopener\" onClick={onClick}>\n           {linkContent}\n         <\/a>\n       );"
    },
    {
      "index":73,
      "vuln_id":"GHSA-wg4r-q74r-p7c8",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
      "published_date":"2022-03-15",
      "chain_len":1,
      "project":"https:\/\/github.com\/star7th\/showdoc",
      "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
      "commit_sha":"4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
      "patch":"SINGLE",
      "chain_ord":"['4b6e6603c714aab1de346c5f5cb0bbb4c871be1f']",
      "before_first_fix_commit":"{'d4363f73fb50193c9701982b59642696edf834a1', '61a23da1925119454d8477e9cf884b6cba93364c'}",
      "last_fix_commit":"4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/13\/2022, 12:16:25",
      "message":"Merge pull request #1630 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
      "author":"star7th",
      "comments":null,
      "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
      "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -305,6 +305,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".asp\")\\t\\t\\t\\n+\\t\\t\\t|| $isDangerStr($filename , \".xsl\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
      "message_norm":"merge pull request #1630 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
      "language":"en",
      "entities":"[('#1630', 'ISSUE', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
      "num_files":1.0,
      "patch_content":"From 61a23da1925119454d8477e9cf884b6cba93364c Mon Sep 17 00:00:00 2001\nFrom: Ajaysen R <40132420+ajaysenr@users.noreply.github.com>\nDate: Sun, 13 Mar 2022 12:01:44 +0000\nSubject: [PATCH] Update AttachmentModel.class.php\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex 8a17a6c3c..3f33fde76 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -305,6 +305,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t\t|| $isDangerStr($filename , \".xxhtml\")\n \t\t\t|| $isDangerStr($filename , \".asp\")\t\t\t\n+\t\t\t|| $isDangerStr($filename , \".xsl\")\n \t\t) {\n \t\t\treturn true;\n \t\t}",
      "code_diff":"@@ -305,6 +305,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".xml\")\n \t\t\t|| $isDangerStr($filename , \".xxhtml\")\n \t\t\t|| $isDangerStr($filename , \".asp\")\t\t\t\n+\t\t\t|| $isDangerStr($filename , \".xsl\")\n \t\t) {\n \t\t\treturn true;\n \t\t}"
    },
    {
      "index":74,
      "vuln_id":"GHSA-4p92-fv6v-fhfj",
      "cwe_id":"{'CWE-79'}",
      "score":5.4,
      "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/15e519a86e4b24526abaf9e6dc81cb1af86843a5'}",
      "dataset":"osv",
      "summary":"Cross-site Scripting in microweber Microweber prior to 1.2.11 is vulnerable to reflected cross-site scripting.",
      "published_date":"2022-02-27",
      "chain_len":1,
      "project":"https:\/\/github.com\/microweber\/microweber",
      "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/15e519a86e4b24526abaf9e6dc81cb1af86843a5",
      "commit_sha":"15e519a86e4b24526abaf9e6dc81cb1af86843a5",
      "patch":"SINGLE",
      "chain_ord":"['15e519a86e4b24526abaf9e6dc81cb1af86843a5']",
      "before_first_fix_commit":"{'c897d0dc159849763a813184d9b75b966c6360bf'}",
      "last_fix_commit":"15e519a86e4b24526abaf9e6dc81cb1af86843a5",
      "chain_ord_pos":1.0,
      "commit_datetime":"02\/25\/2022, 10:57:48",
      "message":"update",
      "author":"Peter Ivanov",
      "comments":null,
      "stats":"{'additions': 0, 'deletions': 0, 'total': 0}",
      "files":"{'.github\/workflows\/templates.yml': {'additions': 0, 'deletions': 0, 'changes': 0, 'status': 'renamed', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/15e519a86e4b24526abaf9e6dc81cb1af86843a5\/.github%2Fworkflows%2Ftemplates.yml', 'patch': None}}",
      "message_norm":"update",
      "language":"ro",
      "entities":"[('update', 'ACTION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['.github\/workflows\/templates.yml'])",
      "num_files":1.0,
      "patch_content":"From 15e519a86e4b24526abaf9e6dc81cb1af86843a5 Mon Sep 17 00:00:00 2001\nFrom: Peter Ivanov <peter@microweber.com>\nDate: Fri, 25 Feb 2022 12:57:48 +0200\nSubject: [PATCH] update\n\n---\n .github\/workflows\/{templates.yml.backup => templates.yml} | 0\n 1 file changed, 0 insertions(+), 0 deletions(-)\n rename .github\/workflows\/{templates.yml.backup => templates.yml} (100%)\n\ndiff --git a\/.github\/workflows\/templates.yml.backup b\/.github\/workflows\/templates.yml\nsimilarity index 100%\nrename from .github\/workflows\/templates.yml.backup\nrename to .github\/workflows\/templates.yml",
      "code_diff":"similarity index 100%\nrename from .github\/workflows\/templates.yml.backup\nrename to .github\/workflows\/templates.yml"
    },
    {
      "index":75,
      "vuln_id":"GHSA-5xwc-mrhx-5g3m",
      "cwe_id":"{'CWE-824'}",
      "score":7.1,
      "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09'}",
      "dataset":"osv",
      "summary":"Reference binding to nullptr in `MatrixDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagV3(\n  diagonal=[1,0],\n  k=[],\n  num_rows=[1,2,3],\n  num_cols=[4,5],\n  padding_value=[],\n  align='RIGHT_RIGHT')\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong:\n\n```cc\n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f2a673bd34f0d64b8e40a551ac78989d16daad09](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date":"2021-08-25",
      "chain_len":1,
      "project":"https:\/\/github.com\/tensorflow\/tensorflow",
      "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09",
      "commit_sha":"f2a673bd34f0d64b8e40a551ac78989d16daad09",
      "patch":"SINGLE",
      "chain_ord":"['f2a673bd34f0d64b8e40a551ac78989d16daad09']",
      "before_first_fix_commit":"{'ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}",
      "last_fix_commit":"f2a673bd34f0d64b8e40a551ac78989d16daad09",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/31\/2021, 02:00:00",
      "message":"Add missing validation to `matrix_diag_op.cc`\n\nPiperOrigin-RevId: 387923533\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0",
      "author":"Mihai Maruseac",
      "comments":null,
      "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
      "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f2a673bd34f0d64b8e40a551ac78989d16daad09\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_diag_op.cc', 'patch': '@@ -73,6 +73,9 @@ class MatrixDiagPartOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {\\n@@ -179,6 +182,9 @@ class MatrixDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}",
      "message_norm":"add missing validation to `matrix_diag_op.cc`\n\npiperorigin-revid: 387923533\nchange-id: idfffeb328d5f9c6748d992d28a56d6e9e45103a0",
      "language":"en",
      "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('387923533', 'SHA', 'generic_sha')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc'])",
      "num_files":1.0,
      "patch_content":"From f2a673bd34f0d64b8e40a551ac78989d16daad09 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 30 Jul 2021 19:00:00 -0700\nSubject: [PATCH] Add missing validation to `matrix_diag_op.cc`\n\nPiperOrigin-RevId: 387923533\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0\n---\n tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc b\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc\nindex 2fd361e715b9b1..b61dbe96a5d6a5 100644\n--- a\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc\n+++ b\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc\n@@ -73,6 +73,9 @@ class MatrixDiagPartOp : public OpKernel {\n                   errors::InvalidArgument(\n                       \"diag_index must be a scalar or vector, received shape: \",\n                       diag_index.shape().DebugString()));\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\n+                  errors::InvalidArgument(\n+                      \"Expected diag_index to have at least 1 element\"));\n       lower_diag_index = diag_index.flat<int32>()(0);\n       upper_diag_index = lower_diag_index;\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {\n@@ -179,6 +182,9 @@ class MatrixDiagOp : public OpKernel {\n                   errors::InvalidArgument(\n                       \"diag_index must be a scalar or vector, received shape: \",\n                       diag_index.shape().DebugString()));\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\n+                  errors::InvalidArgument(\n+                      \"Expected diag_index to have at least 1 element\"));\n       lower_diag_index = diag_index.flat<int32>()(0);\n       upper_diag_index = lower_diag_index;\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {",
      "code_diff":"@@ -73,6 +73,9 @@ class MatrixDiagPartOp : public OpKernel {\n                   errors::InvalidArgument(\n                       \"diag_index must be a scalar or vector, received shape: \",\n                       diag_index.shape().DebugString()));\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\n+                  errors::InvalidArgument(\n+                      \"Expected diag_index to have at least 1 element\"));\n       lower_diag_index = diag_index.flat<int32>()(0);\n       upper_diag_index = lower_diag_index;\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {\n@@ -179,6 +182,9 @@ class MatrixDiagOp : public OpKernel {\n                   errors::InvalidArgument(\n                       \"diag_index must be a scalar or vector, received shape: \",\n                       diag_index.shape().DebugString()));\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\n+                  errors::InvalidArgument(\n+                      \"Expected diag_index to have at least 1 element\"));\n       lower_diag_index = diag_index.flat<int32>()(0);\n       upper_diag_index = lower_diag_index;\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {"
    },
    {
      "index":76,
      "vuln_id":"GHSA-w4xf-2pqw-5mq7",
      "cwe_id":"{'CWE-824'}",
      "score":7.8,
      "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612'}",
      "dataset":"osv",
      "summary":"Reference binding to nullptr in `RaggedTensorToVariant` ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToVariant`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToVariant(\n  rt_nested_splits=[],\n  rt_dense_values=[1,2,3],\n  batched_input=True)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc#L129) has an incomplete validation of the splits values, missing the case when the argument would be empty.\n\n### Patches\nWe have patched the issue in GitHub commit [be7a4de6adfbd303ce08be4332554dff70362612](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
      "published_date":"2021-08-25",
      "chain_len":1,
      "project":"https:\/\/github.com\/tensorflow\/tensorflow",
      "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612",
      "commit_sha":"be7a4de6adfbd303ce08be4332554dff70362612",
      "patch":"SINGLE",
      "chain_ord":"['be7a4de6adfbd303ce08be4332554dff70362612']",
      "before_first_fix_commit":"{'ffbdacfce0c9c8f627d0ce89d9d4db8fd0a7cfd1'}",
      "last_fix_commit":"be7a4de6adfbd303ce08be4332554dff70362612",
      "chain_ord_pos":1.0,
      "commit_datetime":"07\/29\/2021, 21:05:34",
      "message":"Ensure non-empty rt_nested_splits in tf.raw_ops.RaggedTensorToVariant\n\nPiperOrigin-RevId: 387664237\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3",
      "author":"Laura Pak",
      "comments":null,
      "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
      "files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/be7a4de6adfbd303ce08be4332554dff70362612\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_variant_op.cc', 'patch': '@@ -157,6 +157,12 @@ class RaggedTensorToVariantOp : public OpKernel {\\n       return;\\n     }\\n \\n+    \/\/ Checked here instead of at input in case batched_input_ is false\\n+    OP_REQUIRES(context, ragged_nested_splits_len > 0,\\n+                errors::InvalidArgument(\\n+                    \"rt_nested_splits must be a list of one or more, but \"\\n+                    \"received rt_nested_splits of length 0.\"));\\n+\\n     \/\/ Unbatch the Ragged Tensor and encode the components.\\n     std::vector<RaggedTensorVariant> unbatched_ragged_input;\\n     auto batched_splits_top_vec ='}}",
      "message_norm":"ensure non-empty rt_nested_splits in tf.raw_ops.raggedtensortovariant\n\npiperorigin-revid: 387664237\nchange-id: ia1700c34b5610873d63561abc86e23b46ead93b3",
      "language":"en",
      "entities":"[('ensure', 'ACTION', ''), ('387664237', 'SHA', 'generic_sha')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc'])",
      "num_files":1.0,
      "patch_content":"From be7a4de6adfbd303ce08be4332554dff70362612 Mon Sep 17 00:00:00 2001\nFrom: Laura Pak <lpak@google.com>\nDate: Thu, 29 Jul 2021 14:05:34 -0700\nSubject: [PATCH] Ensure non-empty rt_nested_splits in\n tf.raw_ops.RaggedTensorToVariant\n\nPiperOrigin-RevId: 387664237\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3\n---\n tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc b\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc\nindex 687289cd38077a..ab86863e3a987f 100644\n--- a\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc\n+++ b\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc\n@@ -157,6 +157,12 @@ class RaggedTensorToVariantOp : public OpKernel {\n       return;\n     }\n \n+    \/\/ Checked here instead of at input in case batched_input_ is false\n+    OP_REQUIRES(context, ragged_nested_splits_len > 0,\n+                errors::InvalidArgument(\n+                    \"rt_nested_splits must be a list of one or more, but \"\n+                    \"received rt_nested_splits of length 0.\"));\n+\n     \/\/ Unbatch the Ragged Tensor and encode the components.\n     std::vector<RaggedTensorVariant> unbatched_ragged_input;\n     auto batched_splits_top_vec =",
      "code_diff":"@@ -157,6 +157,12 @@ class RaggedTensorToVariantOp : public OpKernel {\n       return;\n     }\n \n+    \/\/ Checked here instead of at input in case batched_input_ is false\n+    OP_REQUIRES(context, ragged_nested_splits_len > 0,\n+                errors::InvalidArgument(\n+                    \"rt_nested_splits must be a list of one or more, but \"\n+                    \"received rt_nested_splits of length 0.\"));\n+\n     \/\/ Unbatch the Ragged Tensor and encode the components.\n     std::vector<RaggedTensorVariant> unbatched_ragged_input;\n     auto batched_splits_top_vec ="
    },
    {
      "index":77,
      "vuln_id":"GHSA-p92x-r36w-9395",
      "cwe_id":"{'CWE-843'}",
      "score":5.6,
      "chain":"{'https:\/\/github.com\/aheckmann\/mpath\/commit\/89402d2880d4ea3518480a8c9847c541f2d824fc'}",
      "dataset":"osv",
      "summary":"Type confusion in mpath This affects the package mpath before 0.8.4. A type confusion vulnerability can lead to a bypass of CVE-2018-16490. In particular, the condition ignoreProperties.indexOf(parts[i]) !== -1 returns -1 if parts[i] is ['__proto__']. This is because the method that has been called if the input is an array is Array.prototype.indexOf() and not String.prototype.indexOf(). They behave differently depending on the type of the input.",
      "published_date":"2021-09-02",
      "chain_len":1,
      "project":"https:\/\/github.com\/aheckmann\/mpath",
      "commit_href":"https:\/\/github.com\/aheckmann\/mpath\/commit\/89402d2880d4ea3518480a8c9847c541f2d824fc",
      "commit_sha":"89402d2880d4ea3518480a8c9847c541f2d824fc",
      "patch":"SINGLE",
      "chain_ord":"['89402d2880d4ea3518480a8c9847c541f2d824fc']",
      "before_first_fix_commit":"{'03c4efef8b25425476c1e0d7b6a0fb5adc18c0f9'}",
      "last_fix_commit":"89402d2880d4ea3518480a8c9847c541f2d824fc",
      "chain_ord_pos":1.0,
      "commit_datetime":"09\/01\/2021, 15:12:24",
      "message":"fix: throw error if `parts` contains an element that isn't a string or number\n\nFix #13",
      "author":"Valeri Karpov",
      "comments":null,
      "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
      "files":"{'lib\/index.js': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongoosejs\/mpath\/raw\/89402d2880d4ea3518480a8c9847c541f2d824fc\/lib%2Findex.js', 'patch': \"@@ -64,6 +64,9 @@ exports.get = function(path, o, special, map) {\\n \\n   for (var i = 0; i < parts.length; ++i) {\\n     part = parts[i];\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n \\n     if (Array.isArray(obj) && !\/^\\\\d+$\/.test(part)) {\\n       \/\/ reading a property from the array items\\n@@ -112,6 +115,9 @@ exports.has = function(path, o) {\\n   var len = parts.length;\\n   var cur = o;\\n   for (var i = 0; i < len; ++i) {\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\\n       return false;\\n     }\\n@@ -143,6 +149,9 @@ exports.unset = function(path, o) {\\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\\n       return false;\\n     }\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     \/\/ Disallow any updates to __proto__ or special properties.\\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\\n       return false;\\n@@ -193,6 +202,9 @@ exports.set = function(path, val, o, special, map, _copying) {\\n   if (null == o) return;\\n \\n   for (var i = 0; i < parts.length; ++i) {\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     \/\/ Silently ignore any updates to `__proto__`, these are potentially\\n     \/\/ dangerous if using mpath with unsanitized data.\\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\"}}",
      "message_norm":"fix: throw error if `parts` contains an element that isn't a string or number\n\nfix #13",
      "language":"en",
      "entities":"[('error', 'FLAW', ''), ('fix', 'ACTION', ''), ('#13', 'ISSUE', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['lib\/index.js'])",
      "num_files":1.0,
      "patch_content":"From 89402d2880d4ea3518480a8c9847c541f2d824fc Mon Sep 17 00:00:00 2001\nFrom: Valeri Karpov <val@karpov.io>\nDate: Wed, 1 Sep 2021 11:12:24 -0400\nSubject: [PATCH] fix: throw error if `parts` contains an element that isn't a\n string or number\n\nFix #13\n---\n lib\/index.js | 12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ndiff --git a\/lib\/index.js b\/lib\/index.js\nindex 338bf9b..c9e7e5f 100644\n--- a\/lib\/index.js\n+++ b\/lib\/index.js\n@@ -64,6 +64,9 @@ exports.get = function(path, o, special, map) {\n \n   for (var i = 0; i < parts.length; ++i) {\n     part = parts[i];\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\n+    }\n \n     if (Array.isArray(obj) && !\/^\\d+$\/.test(part)) {\n       \/\/ reading a property from the array items\n@@ -112,6 +115,9 @@ exports.has = function(path, o) {\n   var len = parts.length;\n   var cur = o;\n   for (var i = 0; i < len; ++i) {\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n       return false;\n     }\n@@ -143,6 +149,9 @@ exports.unset = function(path, o) {\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n       return false;\n     }\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     \/\/ Disallow any updates to __proto__ or special properties.\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\n       return false;\n@@ -193,6 +202,9 @@ exports.set = function(path, val, o, special, map, _copying) {\n   if (null == o) return;\n \n   for (var i = 0; i < parts.length; ++i) {\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     \/\/ Silently ignore any updates to `__proto__`, these are potentially\n     \/\/ dangerous if using mpath with unsanitized data.\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {",
      "code_diff":"@@ -64,6 +64,9 @@ exports.get = function(path, o, special, map) {\n \n   for (var i = 0; i < parts.length; ++i) {\n     part = parts[i];\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\n+    }\n \n     if (Array.isArray(obj) && !\/^\\d+$\/.test(part)) {\n       \/\/ reading a property from the array items\n@@ -112,6 +115,9 @@ exports.has = function(path, o) {\n   var len = parts.length;\n   var cur = o;\n   for (var i = 0; i < len; ++i) {\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n       return false;\n     }\n@@ -143,6 +149,9 @@ exports.unset = function(path, o) {\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\n       return false;\n     }\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     \/\/ Disallow any updates to __proto__ or special properties.\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\n       return false;\n@@ -193,6 +202,9 @@ exports.set = function(path, val, o, special, map, _copying) {\n   if (null == o) return;\n \n   for (var i = 0; i < parts.length; ++i) {\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\n+      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\n+    }\n     \/\/ Silently ignore any updates to `__proto__`, these are potentially\n     \/\/ dangerous if using mpath with unsanitized data.\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {"
    },
    {
      "index":78,
      "vuln_id":"GHSA-6jv7-28mv-qp9c",
      "cwe_id":"{'CWE-862'}",
      "score":4.3,
      "chain":"{'https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/commit\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc'}",
      "dataset":"osv",
      "summary":"Missing permission check in Jenkins autonomiq Plugin A missing permission check in Jenkins autonomiq Plugin 1.15 and earlier allows attackers with Overall\/Read permission to connect to an attacker-specified URL using attacker-specified credentials.",
      "published_date":"2022-02-16",
      "chain_len":1,
      "project":"https:\/\/github.com\/jenkinsci\/autonomiq-plugin",
      "commit_href":"https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/commit\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
      "commit_sha":"e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
      "patch":"SINGLE",
      "chain_ord":"['e06b1ff67664a90819c9561bbc12f4c6e593d1dc']",
      "before_first_fix_commit":"{'abfbe8a84d54ec7708c8ef073d56b128baffb1f5'}",
      "last_fix_commit":"e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
      "chain_ord_pos":1.0,
      "commit_datetime":"02\/09\/2022, 07:16:27",
      "message":"added permission and csrf protection",
      "author":"jameeluddin",
      "comments":null,
      "stats":"{'additions': 17, 'deletions': 0, 'total': 17}",
      "files":"{'src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java': {'additions': 17, 'deletions': 0, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/raw\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc\/src%2Fmain%2Fjava%2Fio%2Fjenkins%2Fplugins%2Fautonomiq%2FAutonomiqBuilder.java', 'patch': '@@ -653,6 +653,7 @@ public String getDisplayName() {\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n                                                @QueryParameter String login,\\n                                                @QueryParameter Secret password,\\n@@ -661,6 +662,8 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n                                                @QueryParameter String proxyUser,\\n                                                @QueryParameter Secret proxyPassword,\\n                                                @QueryParameter Boolean httpProxy) {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             \/\/ make sure other fields have been filled in\\n             if (aiqUrl.length() > 0 && login.length() > 0 && Secret.toString(password).length() > 0) {\\n@@ -681,7 +684,10 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillPlatformTestCasesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\\n \\n@@ -690,7 +696,10 @@ public ListBoxModel doFillPlatformTestCasesItems() {\\n             return new ListBoxModel(options);\\n         }\\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillPlatformTestSuitesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\\n \\n@@ -701,7 +710,10 @@ public ListBoxModel doFillPlatformTestSuitesItems() {\\n \\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillBrowserTestCasesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Chrome\", \"Firefox\"};\\n \\n@@ -710,7 +722,9 @@ public ListBoxModel doFillBrowserTestCasesItems() {\\n             return new ListBoxModel(options);\\n         }\\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillBrowserTestSuitesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n \\n             String[] values = {\"Chrome\", \"Firefox\"};\\n \\n@@ -720,7 +734,10 @@ public ListBoxModel doFillBrowserTestSuitesItems() {\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillExecutionModeItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"serial\", \"parallel\"};'}}",
      "message_norm":"added permission and csrf protection",
      "language":"en",
      "entities":"[('added', 'ACTION', ''), ('permission', 'SECWORD', ''), ('csrf', 'SECWORD', ''), ('protection', 'SECWORD', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java'])",
      "num_files":1.0,
      "patch_content":"From e06b1ff67664a90819c9561bbc12f4c6e593d1dc Mon Sep 17 00:00:00 2001\nFrom: jameeluddin <jameeluddin30@gmail.com>\nDate: Wed, 9 Feb 2022 12:46:27 +0530\nSubject: [PATCH] added permission and csrf protection\n\n---\n ...\/plugins\/autonomiq\/AutonomiqBuilder.java     | 17 +++++++++++++++++\n 1 file changed, 17 insertions(+)\n\ndiff --git a\/src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java b\/src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java\nindex 5ff9b91..2fa4ade 100644\n--- a\/src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java\n+++ b\/src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java\n@@ -653,6 +653,7 @@ public String getDisplayName() {\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n                                                @QueryParameter String login,\n                                                @QueryParameter Secret password,\n@@ -661,6 +662,8 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n                                                @QueryParameter String proxyUser,\n                                                @QueryParameter Secret proxyPassword,\n                                                @QueryParameter Boolean httpProxy) {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             \/\/ make sure other fields have been filled in\n             if (aiqUrl.length() > 0 && login.length() > 0 && Secret.toString(password).length() > 0) {\n@@ -681,7 +684,10 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillPlatformTestCasesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\n \n@@ -690,7 +696,10 @@ public ListBoxModel doFillPlatformTestCasesItems() {\n             return new ListBoxModel(options);\n         }\n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillPlatformTestSuitesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\n \n@@ -701,7 +710,10 @@ public ListBoxModel doFillPlatformTestSuitesItems() {\n \n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillBrowserTestCasesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Chrome\", \"Firefox\"};\n \n@@ -710,7 +722,9 @@ public ListBoxModel doFillBrowserTestCasesItems() {\n             return new ListBoxModel(options);\n         }\n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillBrowserTestSuitesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n \n             String[] values = {\"Chrome\", \"Firefox\"};\n \n@@ -720,7 +734,10 @@ public ListBoxModel doFillBrowserTestSuitesItems() {\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillExecutionModeItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"serial\", \"parallel\"};",
      "code_diff":"@@ -653,6 +653,7 @@ public String getDisplayName() {\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n                                                @QueryParameter String login,\n                                                @QueryParameter Secret password,\n@@ -661,6 +662,8 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n                                                @QueryParameter String proxyUser,\n                                                @QueryParameter Secret proxyPassword,\n                                                @QueryParameter Boolean httpProxy) {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             \/\/ make sure other fields have been filled in\n             if (aiqUrl.length() > 0 && login.length() > 0 && Secret.toString(password).length() > 0) {\n@@ -681,7 +684,10 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillPlatformTestCasesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\n \n@@ -690,7 +696,10 @@ public ListBoxModel doFillPlatformTestCasesItems() {\n             return new ListBoxModel(options);\n         }\n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillPlatformTestSuitesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\n \n@@ -701,7 +710,10 @@ public ListBoxModel doFillPlatformTestSuitesItems() {\n \n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillBrowserTestCasesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"Chrome\", \"Firefox\"};\n \n@@ -710,7 +722,9 @@ public ListBoxModel doFillBrowserTestCasesItems() {\n             return new ListBoxModel(options);\n         }\n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillBrowserTestSuitesItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n \n             String[] values = {\"Chrome\", \"Firefox\"};\n \n@@ -720,7 +734,10 @@ public ListBoxModel doFillBrowserTestSuitesItems() {\n         }\n \n         @SuppressWarnings(\"unused\")\n+        @POST\n         public ListBoxModel doFillExecutionModeItems() {\n+        \tJenkins.get().checkPermission(Jenkins.ADMINISTER);\n+\n \n             String[] values = {\"serial\", \"parallel\"};"
    },
    {
      "index":79,
      "vuln_id":"GHSA-r6cm-wg48-rh2r",
      "cwe_id":"{'CWE-359', 'CWE-863'}",
      "score":9.1,
      "chain":"{'https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466'}",
      "dataset":"osv",
      "summary":"Exposure of Private Personal Information to an Unauthorized Actor in alextselegidis\/easyappointments The software is a booking management system that has a public form to place bookings, and a private area for the calendar and management of services, users, settings, etc. There is a backend API that allows data manipulation, including listing the appointments for a specific time range. This happens on this endpoint: \/index.php\/backend_api\/ajax_get_calendar_events Unfortunately, there is no authentication \/ permissions-check on that endpoint, the only required parameters in a POST request are \"startDate\", \"endDate\" and \"csrfToken\". Because the csrfToken can be obtained by any unauthenticated user just visiting the public form (and is valid for the backend as well), any attacker can query the backend API and obtain all sorts of private information about the appointment, in JSON format.",
      "published_date":"2022-03-10",
      "chain_len":1,
      "project":"https:\/\/github.com\/alextselegidis\/easyappointments",
      "commit_href":"https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
      "commit_sha":"44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
      "patch":"SINGLE",
      "chain_ord":"['44af526a6fc5e898bc1e0132b2af9eb3a9b2c466']",
      "before_first_fix_commit":"{'13e81c80b17dfe207b2bdddb395a1345217f2548'}",
      "last_fix_commit":"44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
      "chain_ord_pos":1.0,
      "commit_datetime":"03\/08\/2022, 17:27:15",
      "message":"Release v1.4.3",
      "author":"Alex Tselegidis",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
      "files":"{'application\/config\/config.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alextselegidis\/easyappointments\/raw\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466\/application%2Fconfig%2Fconfig.php', 'patch': \"@@ -8,7 +8,7 @@\\n | Declare some of the global config values of Easy!Appointments.\\n |\\n *\/\\n-$config['version'] = '1.4.3-beta.1'; \/\/ This must be changed manually.\\n+$config['version'] = '1.4.3'; \/\/ This must be changed manually.\\n $config['release_label'] = ''; \/\/ Leave empty for no title or add Alpha, Beta etc ...\\n $config['debug'] = Config::DEBUG_MODE;\\n \\n@@ -314,7 +314,7 @@\\n | new release.\\n |\\n *\/\\n-$config['cache_busting_token'] = '8UC842';\\n+$config['cache_busting_token'] = '6398SW';\\n \\n \/*\\n |--------------------------------------------------------------------------\"}}",
      "message_norm":"release v1.4.3",
      "language":"sl",
      "entities":"[('v1.4.3', 'VERSION', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['application\/config\/config.php'])",
      "num_files":1.0,
      "patch_content":"From 44af526a6fc5e898bc1e0132b2af9eb3a9b2c466 Mon Sep 17 00:00:00 2001\nFrom: Alex Tselegidis <alextselegidis@gmail.com>\nDate: Tue, 8 Mar 2022 18:27:15 +0100\nSubject: [PATCH] Release v1.4.3\n\n---\n application\/config\/config.php | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/application\/config\/config.php b\/application\/config\/config.php\nindex 4c06eb6abb..6efb9d8016 100644\n--- a\/application\/config\/config.php\n+++ b\/application\/config\/config.php\n@@ -8,7 +8,7 @@\n | Declare some of the global config values of Easy!Appointments.\n |\n *\/\n-$config['version'] = '1.4.3-beta.1'; \/\/ This must be changed manually.\n+$config['version'] = '1.4.3'; \/\/ This must be changed manually.\n $config['release_label'] = ''; \/\/ Leave empty for no title or add Alpha, Beta etc ...\n $config['debug'] = Config::DEBUG_MODE;\n \n@@ -314,7 +314,7 @@\n | new release.\n |\n *\/\n-$config['cache_busting_token'] = '8UC842';\n+$config['cache_busting_token'] = '6398SW';\n \n \/*\n |--------------------------------------------------------------------------",
      "code_diff":"@@ -8,7 +8,7 @@\n | Declare some of the global config values of Easy!Appointments.\n |\n *\/\n-$config['version'] = '1.4.3-beta.1'; \/\/ This must be changed manually.\n+$config['version'] = '1.4.3'; \/\/ This must be changed manually.\n $config['release_label'] = ''; \/\/ Leave empty for no title or add Alpha, Beta etc ...\n $config['debug'] = Config::DEBUG_MODE;\n \n@@ -314,7 +314,7 @@\n | new release.\n |\n *\/\n-$config['cache_busting_token'] = '8UC842';\n+$config['cache_busting_token'] = '6398SW';\n \n \/*\n |--------------------------------------------------------------------------"
    },
    {
      "index":80,
      "vuln_id":"GHSA-r89v-cgv7-3jhx",
      "cwe_id":"{'CWE-862'}",
      "score":5.2,
      "chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7'}",
      "dataset":"osv",
      "summary":"Bypass of fix for CVE-2020-15247, Twig sandbox escape ### Impact\nA bypass of CVE-2020-15247 (fixed in 1.0.469 and 1.1.0) was discovered that has the same impact as CVE-2020-15247:\n\nAn authenticated backend user with the `cms.manage_pages`, `cms.manage_layouts`, or `cms.manage_partials` permissions who would **normally** not be permitted to provide PHP code to be executed by the CMS due to `cms.enableSafeMode` being enabled is able to write specific Twig code to escape the Twig sandbox and execute arbitrary PHP.\n\nThis is not a problem for anyone that trusts their users with those permissions to normally write & manage PHP within the CMS by not having `cms.enableSafeMode` enabled, but would be a problem for anyone relying on `cms.enableSafeMode` to ensure that users with those permissions in production do not have access to write & execute arbitrary PHP.\n\n### Patches\nIssue has been patched in Build 470 (v1.0.470) and v1.1.1.\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7 to your installation manually if unable to upgrade to Build 470 or v1.1.1.\n\n### References\nReported by [ka1n4t](https:\/\/github.com\/ka1n4t)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1108\" alt=\"Screen Shot 2020-10-10 at 1 21 13 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/95663316-7de28b80-0afb-11eb-999d-a6526cf78709.png\">",
      "published_date":"2020-11-23",
      "chain_len":1,
      "project":"https:\/\/github.com\/octobercms\/october",
      "commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7",
      "commit_sha":"d34fb8ab51108495a9a651b841202d935f4e12f7",
      "patch":"SINGLE",
      "chain_ord":"['d34fb8ab51108495a9a651b841202d935f4e12f7']",
      "before_first_fix_commit":"{'16e0bd4d094264fd00d0af86180bde4e0c73b4be'}",
      "last_fix_commit":"d34fb8ab51108495a9a651b841202d935f4e12f7",
      "chain_ord_pos":1.0,
      "commit_datetime":"11\/13\/2020, 09:48:27",
      "message":"Improve Twig security policy\n\nFollow up to https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca. Thanks to @ka1n4t for the additional review.",
      "author":"Luke Towers",
      "comments":null,
      "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
      "files":"{'modules\/system\/twig\/SecurityPolicy.php': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/d34fb8ab51108495a9a651b841202d935f4e12f7\/modules%2Fsystem%2Ftwig%2FSecurityPolicy.php', 'patch': \"@@ -20,6 +20,8 @@ final class SecurityPolicy implements SecurityPolicyInterface\\n     protected $blockedMethods = [\\n         'addDynamicMethod',\\n         'addDynamicProperty',\\n+        'bindEvent',\\n+        'bindEventOnce',\\n     ];\\n \\n     \/**\"}}",
      "message_norm":"improve twig security policy\n\nfollow up to https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca. thanks to @ka1n4t for the additional review.",
      "language":"en",
      "entities":"[('improve', 'ACTION', ''), ('security', 'SECWORD', ''), ('https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca', 'URL', '')]",
      "classification_level_1":null,
      "classification_level_2":null,
      "list_files":"dict_keys(['modules\/system\/twig\/SecurityPolicy.php'])",
      "num_files":1.0,
      "patch_content":"From d34fb8ab51108495a9a651b841202d935f4e12f7 Mon Sep 17 00:00:00 2001\nFrom: Luke Towers <github@luketowers.ca>\nDate: Fri, 13 Nov 2020 03:48:27 -0600\nSubject: [PATCH] Improve Twig security policy\n\nFollow up to https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca. Thanks to @ka1n4t for the additional review.\n---\n modules\/system\/twig\/SecurityPolicy.php | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/modules\/system\/twig\/SecurityPolicy.php b\/modules\/system\/twig\/SecurityPolicy.php\nindex bcbc7a1501..aacd39ba63 100644\n--- a\/modules\/system\/twig\/SecurityPolicy.php\n+++ b\/modules\/system\/twig\/SecurityPolicy.php\n@@ -20,6 +20,8 @@ final class SecurityPolicy implements SecurityPolicyInterface\n     protected $blockedMethods = [\n         'addDynamicMethod',\n         'addDynamicProperty',\n+        'bindEvent',\n+        'bindEventOnce',\n     ];\n \n     \/**",
      "code_diff":"@@ -20,6 +20,8 @@ final class SecurityPolicy implements SecurityPolicyInterface\n     protected $blockedMethods = [\n         'addDynamicMethod',\n         'addDynamicProperty',\n+        'bindEvent',\n+        'bindEventOnce',\n     ];\n \n     \/**"
    }
  ]
}