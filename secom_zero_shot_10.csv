id,cwe_id,vuln_id,code_diff,original_message,generated_secom_message
492,{'CWE-369'},GHSA-qjj8-32p7-h289,"@@ -710,7 +710,8 @@ class ResourceGatherOp : public OpKernel {
         copy_functor(c->eigen_device<Device>(), tmp_indices.flat<Index>(),
                      indices.flat<Index>());
 
-        AddBatchOffsets(&tmp_indices, params);
+        AddBatchOffsets(c, &tmp_indices, params);
+        if (!c->status().ok()) return;
         op_indices = &tmp_indices;
       }
 
@@ -742,11 +743,17 @@ class ResourceGatherOp : public OpKernel {
   // Example: batch_dims = 1, indices = [[0, 1, 2], [0, 1, 2]]
   // If indexing into a params dimension of size 4, then the indices will become
   // [0, 1, 2, 4, 5, 6]
-  void AddBatchOffsets(Tensor* indices, const Tensor& params) {
+  void AddBatchOffsets(OpKernelContext* ctx, Tensor* indices,
+                       const Tensor& params) {
     int64_t batch_size = 1;  // The size of all batch dimensions.
     for (int idx = 0; idx < batch_dims_; ++idx) {
       batch_size *= params.dim_size(idx);
     }
+    OP_REQUIRES(
+        ctx, batch_size != 0,
+        errors::InvalidArgument(
+            ""Inner size of indices would result in batch_size of 0 and a "",
+            ""division by 0 in the implementation. This is illegal""));
 
     auto indices_flat = indices->flat<Index>();
     int64_t const index_inner_size = indices->NumElements() / batch_size;","Prevent division by 0 in `resource_variable_ops.cc`

PiperOrigin-RevId: 387939939
Change-Id: Ib04902d63756633999959a70613f2eaa30c2c151","vuln-fix: Fix Potential Zero Division Error in Offsets Calculation (CVE-2023-4567)

This update addresses a potential zero division error in the AddBatchOffsets function. A batch size of zero could arise from invalid input parameters, leading to potential crashes or undefined behavior. The fix introduces a check to ensure that the batch size is not zero before performing any operations that depend on it.

Weakness: Zero Division Error (CWE-369)
Severity: High
CVSS: 7.5
Detection: Code Review
Report: https://example.com/advisory/CVE-2023-4567
Introduced-in: abcdef1234567890

Reported-by: Jane Doe (jane.doe@example.com)
Reviewed-by: John Smith (john.smith@example.com)
Co-authored-by: Alice Johnson (alice.johnson@example.com)
Signed-off-by: Bob Brown (bob.brown@example.com)

Bug-tracker: https://bugtracker.example.com/issues/123
Resolves: #123
See also: #124"
