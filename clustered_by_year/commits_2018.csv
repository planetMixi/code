vuln_id,code_diff
CVE-2018-7260,"From d2886a3e8745e8845633ae8a0054b5ee4d8babd5 Mon Sep 17 00:00:00 2001
From: Madhura Jayaratne <madhura.cj@gmail.com>
Date: Thu, 8 Feb 2018 00:05:57 +1100
Subject: [PATCH] Fix XSS vulnerability in central columns feature

Signed-off-by: Madhura Jayaratne <madhura.cj@gmail.com>
---
 ChangeLog              | 1 +
 db_central_columns.php | 4 +++-
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/ChangeLog b/ChangeLog
index 3463cc969b49..41e359620f54 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -5,6 +5,7 @@ phpMyAdmin - ChangeLog
 - issue #13914 Fixed resetting default setting values.
 - issue #13758 Fixed fallback value for collation connection.
 - issue #13938 Fixed error handling in PHP 7.2
+- issue        [security] Fix XSS in Central Columns Feature, See PMASA-2018-01
 
 4.7.7 (2017-12-23)
 - issue #13865 Fixed displaying of formatted numeric values for some locales
diff --git a/db_central_columns.php b/db_central_columns.php
index 321b4e9b8261..c3f9e7891b4c 100644
--- a/db_central_columns.php
+++ b/db_central_columns.php
@@ -90,7 +90,9 @@
     parse_str($_POST['col_name'], $col_name);
     $tmp_msg = PMA_deleteColumnsFromList($col_name['selected_fld'], false);
 }
-if (isset($_REQUEST['total_rows']) && $_REQUEST['total_rows']) {
+if (!empty($_REQUEST['total_rows'])
+    && PMA_isValid($_REQUEST['total_rows'], 'integer')
+) {
     $total_rows = $_REQUEST['total_rows'];
 } else {
     $total_rows = PMA_getCentralColumnsCount($db);"
CVE-2018-20761,"From 35ab4475a7df9b2a4bcab235e379c0c3ec543658 Mon Sep 17 00:00:00 2001
From: Aurelien David <aurelien.david@telecom-paristech.fr>
Date: Fri, 11 Jan 2019 11:32:54 +0100
Subject: [PATCH] fix some overflows due to strcpy

fixes #1184, #1186, #1187 among other things
---
 applications/mp4box/fileimport.c  | 20 +++++++++++++++++++
 applications/mp4client/main.c     | 33 +++++++++++++++++++++++++++----
 modules/ffmpeg_in/ffmpeg_demux.c  |  7 +++++--
 src/scene_manager/scene_manager.c |  4 ++++
 4 files changed, 58 insertions(+), 6 deletions(-)

diff --git a/applications/mp4box/fileimport.c b/applications/mp4box/fileimport.c
index a1bc80b9d2..d3c878a854 100644
--- a/applications/mp4box/fileimport.c
+++ b/applications/mp4box/fileimport.c
@@ -2356,17 +2356,33 @@ GF_Err cat_multiple_files(GF_ISOFile *dest, char *fileName, u32 import_flags, Do
 	cat_enum.align_timelines = align_timelines;
 	cat_enum.allow_add_in_command = allow_add_in_command;
 
+	if (strlen(fileName) >= sizeof(cat_enum.szPath)) {
+		GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (""File name %s is too long.\n"", fileName));
+		return GF_NOT_SUPPORTED;
+	}
 	strcpy(cat_enum.szPath, fileName);
 	sep = strrchr(cat_enum.szPath, GF_PATH_SEPARATOR);
 	if (!sep) sep = strrchr(cat_enum.szPath, '/');
 	if (!sep) {
 		strcpy(cat_enum.szPath, ""."");
+		if (strlen(fileName) >= sizeof(cat_enum.szRad1)) {
+			GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (""File name %s is too long.\n"", fileName));
+			return GF_NOT_SUPPORTED;
+		}
 		strcpy(cat_enum.szRad1, fileName);
 	} else {
+		if (strlen(sep + 1) >= sizeof(cat_enum.szRad1)) {
+			GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (""File name %s is too long.\n"", (sep + 1)));
+			return GF_NOT_SUPPORTED;
+		}
 		strcpy(cat_enum.szRad1, sep+1);
 		sep[0] = 0;
 	}
 	sep = strchr(cat_enum.szRad1, '*');
+	if (strlen(sep + 1) >= sizeof(cat_enum.szRad2)) {
+		GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (""File name %s is too long.\n"", (sep + 1)));
+		return GF_NOT_SUPPORTED;
+	}
 	strcpy(cat_enum.szRad2, sep+1);
 	sep[0] = 0;
 	sep = strchr(cat_enum.szRad2, '%');
@@ -2374,6 +2390,10 @@ GF_Err cat_multiple_files(GF_ISOFile *dest, char *fileName, u32 import_flags, Do
 	if (!sep) sep = strchr(cat_enum.szRad2, ':');
 	strcpy(cat_enum.szOpt, """");
 	if (sep) {
+		if (strlen(sep) >= sizeof(cat_enum.szOpt)) {
+			GF_LOG(GF_LOG_ERROR, GF_LOG_CONTAINER, (""Invalid option: %s.\n"", sep));
+			return GF_NOT_SUPPORTED;
+		}
 		strcpy(cat_enum.szOpt, sep);
 		sep[0] = 0;
 	}
diff --git a/applications/mp4client/main.c b/applications/mp4client/main.c
index bda694d276..46404ff985 100644
--- a/applications/mp4client/main.c
+++ b/applications/mp4client/main.c
@@ -910,7 +910,8 @@ Bool GPAC_EventProc(void *ptr, GF_Event *evt)
 		break;
 	case GF_EVENT_NAVIGATE:
 		if (gf_term_is_supported_url(term, evt->navigate.to_url, 1, no_mime_check)) {
-			strcpy(the_url, evt->navigate.to_url);
+			strncpy(the_url, evt->navigate.to_url, sizeof(the_url)-1);
+			the_url[sizeof(the_url) - 1] = 0;
 			fprintf(stderr, ""Navigating to URL %s\n"", the_url);
 			gf_term_navigate_to(term, evt->navigate.to_url);
 			return 1;
@@ -1099,6 +1100,11 @@ void set_cfg_option(char *opt_string)
 	}
 	{
 		const size_t sepIdx = sep - opt_string;
+		if (sepIdx >= sizeof(szSec)) {
+			fprintf(stderr, ""Badly formatted option %s - Section name is too long\n"", opt_string);
+			return;
+		}
+
 		strncpy(szSec, opt_string, sepIdx);
 		szSec[sepIdx] = 0;
 	}
@@ -1110,8 +1116,16 @@ void set_cfg_option(char *opt_string)
 	}
 	{
 		const size_t sepIdx = sep2 - sep;
+		if (sepIdx >= sizeof(szKey)) {
+			fprintf(stderr, ""Badly formatted option %s - key name is too long\n"", opt_string);
+			return;
+		}
 		strncpy(szKey, sep, sepIdx);
 		szKey[sepIdx] = 0;
+		if (strlen(sep2 + 1) >= sizeof(szVal)) {
+			fprintf(stderr, ""Badly formatted option %s - value is too long\n"", opt_string);
+			return;
+		}
 		strcpy(szVal, sep2+1);
 	}
 
@@ -1680,7 +1694,14 @@ int mp4client_main(int argc, char **argv)
 	else if (!gui_mode && url_arg) {
 		char *ext;
 
-		strcpy(the_url, url_arg);
+		if (strlen(url_arg) >= sizeof(the_url)) {
+			fprintf(stderr, ""Input url %s is too long, truncating to %d chars.\n"", url_arg, (int)(sizeof(the_url) - 1));
+			strncpy(the_url, url_arg, sizeof(the_url)-1);
+			the_url[sizeof(the_url) - 1] = 0;
+		}
+		else {
+			strcpy(the_url, url_arg);
+		}
 		ext = strrchr(the_url, '.');
 		if (ext && (!stricmp(ext, "".m3u"") || !stricmp(ext, "".pls""))) {
 			GF_Err e = GF_OK;
@@ -1692,7 +1713,10 @@ int mp4client_main(int argc, char **argv)
 				GF_DownloadSession *sess = gf_dm_sess_new(term->downloader, the_url, GF_NETIO_SESSION_NOT_THREADED, NULL, NULL, &e);
 				if (sess) {
 					e = gf_dm_sess_process(sess);
-					if (!e) strcpy(the_url, gf_dm_sess_get_cache_name(sess));
+					if (!e) {
+						strncpy(the_url, gf_dm_sess_get_cache_name(sess), sizeof(the_url) - 1);
+						the_url[sizeof(the_cfg) - 1] = 0;
+					}
 					gf_dm_sess_del(sess);
 				}
 			}
@@ -1715,7 +1739,8 @@ int mp4client_main(int argc, char **argv)
 		fprintf(stderr, ""Hit 'h' for help\n\n"");
 		str = gf_cfg_get_key(cfg_file, ""General"", ""StartupFile"");
 		if (str) {
-			strcpy(the_url, ""MP4Client ""GPAC_FULL_VERSION);
+			strncpy(the_url, ""MP4Client ""GPAC_FULL_VERSION , sizeof(the_url)-1);
+			the_url[sizeof(the_url) - 1] = 0;
 			gf_term_connect(term, str);
 			startup_file = 1;
 			is_connected = 1;
diff --git a/modules/ffmpeg_in/ffmpeg_demux.c b/modules/ffmpeg_in/ffmpeg_demux.c
index 7acdae38ad..fbd61af9f2 100644
--- a/modules/ffmpeg_in/ffmpeg_demux.c
+++ b/modules/ffmpeg_in/ffmpeg_demux.c
@@ -227,7 +227,7 @@ static Bool FFD_CanHandleURL(GF_InputService *plug, const char *url)
 	AVFormatContext *ctx;
 	AVOutputFormat *fmt_out;
 	Bool ret = GF_FALSE;
-	char *ext, szName[1000], szExt[20];
+	char *ext, szName[1024], szExt[20];
 	const char *szExtList;
 	FFDemux *ffd;
 	if (!plug || !url)
@@ -243,6 +243,9 @@ static Bool FFD_CanHandleURL(GF_InputService *plug, const char *url)
 
 	ffd = (FFDemux*)plug->priv;
 
+	if (strlen(url) >= sizeof(szName))
+		return GF_FALSE;
+
 	strcpy(szName, url);
 	ext = strrchr(szName, '#');
 	if (ext) ext[0] = 0;
@@ -252,7 +255,7 @@ static Bool FFD_CanHandleURL(GF_InputService *plug, const char *url)
 	ext = strrchr(szName, '.');
 	if (ext && strlen(ext) > 19) ext = NULL;
 
-	if (ext && strlen(ext) > 1) {
+	if (ext && strlen(ext) > 1 && strlen(ext) <= sizeof(szExt)) {
 		strcpy(szExt, &ext[1]);
 		strlwr(szExt);
 #ifndef FFMPEG_DEMUX_ENABLE_MPEG2TS
diff --git a/src/scene_manager/scene_manager.c b/src/scene_manager/scene_manager.c
index ed44b0a9f3..0b21a400db 100644
--- a/src/scene_manager/scene_manager.c
+++ b/src/scene_manager/scene_manager.c
@@ -646,6 +646,10 @@ GF_Err gf_sm_load_init(GF_SceneLoader *load)
 				ext[0] = '.';
 				ext = anext;
 			}
+			if (strlen(ext) < 2 || strlen(ext) > sizeof(szExt)) {
+				GF_LOG(GF_LOG_ERROR, GF_LOG_SCENE, (""[Scene Manager] invalid extension in file name %s\n"", load->fileName));
+				return GF_NOT_SUPPORTED;
+			}
 			strcpy(szExt, &ext[1]);
 			strlwr(szExt);
 			if (strstr(szExt, ""bt"")) load->type = GF_SM_LOAD_BT;"
CVE-2018-7889,"From aeb5b036a0bf657951756688b3c72bd68b6e4a7d Mon Sep 17 00:00:00 2001
From: Kovid Goyal <kovid@kovidgoyal.net>
Date: Wed, 7 Mar 2018 10:05:56 +0530
Subject: [PATCH] E-book viewer: Change the file format used to import/export
 bookmarks to use JSON. This prevents malicious bookmarks files from causing
 code execution.

Also more work on the EM page for the server.
---
 src/calibre/gui2/viewer/bookmarkmanager.py | 18 ++---
 src/calibre/srv/code.py                    |  4 +-
 src/pyj/book_list/edit_metadata.pyj        | 80 ++++++++++++++++++++--
 3 files changed, 87 insertions(+), 15 deletions(-)

diff --git a/src/calibre/gui2/viewer/bookmarkmanager.py b/src/calibre/gui2/viewer/bookmarkmanager.py
index 1a1c60dc6696..708976d619f7 100644
--- a/src/calibre/gui2/viewer/bookmarkmanager.py
+++ b/src/calibre/gui2/viewer/bookmarkmanager.py
@@ -6,7 +6,7 @@
 __license__ = 'GPL v3'
 __copyright__ = '2013, Kovid Goyal <kovid at kovidgoyal.net>'
 
-import cPickle
+import json
 
 from PyQt5.Qt import (
     Qt, QListWidget, QListWidgetItem, QItemSelectionModel, QAction,
@@ -186,10 +186,10 @@ def pos_key(b):
         self.edited.emit(bm)
 
     def bm_to_item(self, bm):
-        return bytearray(cPickle.dumps(bm, -1))
+        return bm.copy()
 
     def item_to_bm(self, item):
-        return cPickle.loads(bytes(item.data(Qt.UserRole)))
+        return item.data(Qt.UserRole).copy()
 
     def get_bookmarks(self):
         return list(self)
@@ -197,21 +197,21 @@ def get_bookmarks(self):
     def export_bookmarks(self):
         filename = choose_save_file(
             self, 'export-viewer-bookmarks', _('Export bookmarks'),
-            filters=[(_('Saved bookmarks'), ['pickle'])], all_files=False, initial_filename='bookmarks.pickle')
+            filters=[(_('Saved bookmarks'), ['calibre-bookmarks'])], all_files=False, initial_filename='bookmarks.calibre-bookmarks')
         if filename:
-            with open(filename, 'wb') as fileobj:
-                cPickle.dump(self.get_bookmarks(), fileobj, -1)
+            with lopen(filename, 'wb') as fileobj:
+                fileobj.write(json.dumps(self.get_bookmarks(), indent=True))
 
     def import_bookmarks(self):
         files = choose_files(self, 'export-viewer-bookmarks', _('Import bookmarks'),
-            filters=[(_('Saved bookmarks'), ['pickle'])], all_files=False, select_only_single_file=True)
+            filters=[(_('Saved bookmarks'), ['calibre-bookmarks'])], all_files=False, select_only_single_file=True)
         if not files:
             return
         filename = files[0]
 
         imported = None
-        with open(filename, 'rb') as fileobj:
-            imported = cPickle.load(fileobj)
+        with lopen(filename, 'rb') as fileobj:
+            imported = json.load(fileobj)
 
         if imported is not None:
             bad = False
diff --git a/src/calibre/srv/code.py b/src/calibre/srv/code.py
index 4e585e24d1b4..96b29fec05e3 100644
--- a/src/calibre/srv/code.py
+++ b/src/calibre/srv/code.py
@@ -26,7 +26,7 @@
 from calibre.srv.routes import endpoint, json
 from calibre.srv.utils import get_library_data, get_use_roman
 from calibre.utils.config import prefs, tweaks
-from calibre.utils.icu import sort_key
+from calibre.utils.icu import sort_key, numeric_sort_key
 from calibre.utils.localization import get_lang
 from calibre.utils.search_query_parser import ParseException
 
@@ -393,4 +393,4 @@ def field_names(ctx, rd, field):
     Optional: ?library_id=<default library>
     '''
     db, library_id = get_library_data(ctx, rd)[:2]
-    return tuple(db.all_field_names(field))
+    return tuple(sorted(db.all_field_names(field), key=numeric_sort_key))
diff --git a/src/pyj/book_list/edit_metadata.pyj b/src/pyj/book_list/edit_metadata.pyj
index 99498731b7c4..d4987d21a9fe 100644
--- a/src/pyj/book_list/edit_metadata.pyj
+++ b/src/pyj/book_list/edit_metadata.pyj
@@ -15,6 +15,7 @@ from book_list.library_data import (
     loaded_book_ids, set_book_metadata
 )
 from book_list.router import back
+from book_list.theme import get_color
 from book_list.top_bar import create_top_bar, set_title
 from book_list.ui import set_panel_handler, show_panel
 from date import format_date
@@ -39,6 +40,11 @@ add_extra_css(def():
     style += build_rule(sel + 'table.metadata td', padding_bottom='0.5ex', padding_top='0.5ex', cursor='pointer')
     style += build_rule(sel + 'table.metadata tr:hover', color='red')
     style += build_rule(sel + 'table.metadata tr:active', transform='scale(1.5)')
+
+    style += build_rule(sel + '.completions', display='flex', flex_wrap='wrap', align_items='center')
+    style += build_rule(sel + '.completions > div', margin='0.5ex 0.5rem', margin_left='0', padding='0.5ex 0.5rem', border='solid 1px currentColor', border_radius='1ex', cursor='pointer')
+    style += build_rule(sel + '.completions > div:active', transform='scale(1.5)')
+    style += build_rule(sel + '.completions > div:hover', background=get_color('window-foreground'), color=get_color('window-background'))
     return style
 )
 
@@ -114,21 +120,83 @@ def simple_line_edit(container_id, book_id, field, fm, div, mi):
         return x
 
 
+def add_completion(container_id, name):
+    pass
+
+
+def show_completions(container_id, div, field, prefix, names):
+    clear(div)
+    completions = E.div(class_='completions')
+    div.appendChild(completions)
+    for i, name in enumerate(names):
+        completions.appendChild(E.div(name, onclick=add_completion.bind(None, container_id, name)))
+        if i >= 50:
+            break
+
+
+def update_completions(container_id, ok, field, names):
+    c = document.getElementById(container_id)
+    if not c:
+        return
+    d = c.querySelector('div[data-ctype=""edit""]')
+    if not d or d.style.display is not 'block':
+        return
+    div = d.lastChild
+    clear(div)
+    if not ok:
+        err = E.div()
+        safe_set_inner_html(err, names)
+        div.appendChild(E.div(
+            _('Failed to download items for completion, with error:'), err
+        ))
+        return
+    val = d.querySelector('input').value or ''
+    val = value_to_json(val)
+    if jstype(val) is 'string':
+        prefix = val
+    else:
+        prefix = val[-1] if val.length else ''
+    if prefix is update_completions.prefix:
+        return
+    pl = prefix.toLowerCase().strip()
+    if pl:
+        if pl.startswith(update_completions.prefix.toLowerCase()):
+            matching_names = [x for x in update_completions.names if x.toLowerCase().startswith(pl)]
+        else:
+            matching_names = [x for x in names if x.toLowerCase().startswith(pl)]
+    else:
+        matching_names = []
+    update_completions.prefix = prefix
+    update_completions.names = matching_names
+    show_completions(container_id, div, field, prefix, matching_names)
+
+
+update_completions.ui_to_list = None
+update_completions.list_to_ui = None
+update_completions.names = v'[]'
+update_completions.prefix = ''
+
+
+def line_edit_updated(container_id, field):
+    field_names_for(field, update_completions.bind(None, container_id))
+
+
 def multiple_line_edit(list_to_ui, ui_to_list, container_id, book_id, field, fm, div, mi):
     nonlocal value_to_json
+    update_completions.ui_to_list = ui_to_list
+    update_completions.list_to_ui = list_to_ui
     name = fm.name or field
-    le = E.input(type='text', name=name.replace('#', '_c_'), autocomplete=True)
+    le = E.input(type='text', name=name.replace('#', '_c_'), autocomplete=True, oninput=line_edit_updated.bind(None, container_id, field))
     le.value = (resolved_metadata(mi, field) or v'[]').join(list_to_ui)
     form = create_form(le, line_edit_get_value, container_id, book_id, field)
     div.appendChild(E.div(style='margin: 0.5ex 1rem', _(
         'Edit the ""{0}"" below. Multiple items can be separated by {1}.').format(name, list_to_ui.strip())))
     div.appendChild(E.div(style='margin: 0.5ex 1rem', form))
-    div.appendChild(E.div(style='margin: 0.5ex 1rem'))
+    div.appendChild(E.div(E.span(_('Loading all {}...').format(name)), style='margin: 0.5ex 1rem'))
     le.focus(), le.select()
     value_to_json = def(x):
         return [a.strip() for a in x.split(ui_to_list) if a.strip()]
-    div.lastChild.appendChild(E.span(_('Loading all {}...').format(name)))
-    field_names_for(field, print)
+    field_names_for(field, update_completions.bind(None, container_id))
 
 
 def edit_field(container_id, book_id, field):
@@ -142,6 +210,10 @@ def edit_field(container_id, book_id, field):
     d.style.display = 'block'
     d.previousSibling.style.display = 'none'
     clear(d)
+    update_completions.ui_to_list = None
+    update_completions.list_to_ui = None
+    update_completions.names = v'[]'
+    update_completions.prefix = ''
     if field is 'authors':
         multiple_line_edit(' & ', '&', container_id, book_id, field, fm, d, mi)
     else:"
CVE-2018-14353,"From 65d64a5b60a4a3883f2cd799d92c6091d8854f23 Mon Sep 17 00:00:00 2001
From: JerikoOne <jeriko.one@gmx.us>
Date: Sat, 7 Jul 2018 16:20:56 -0500
Subject: [PATCH] Check for int underflow in imap_quote_string

---
 imap/util.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/imap/util.c b/imap/util.c
index 58224fc3872..57802b254da 100644
--- a/imap/util.c
+++ b/imap/util.c
@@ -821,9 +821,9 @@ void imap_quote_string(char *dest, size_t dlen, const char *src, bool quote_back
   {
     if (strchr(quote, *s))
     {
-      dlen -= 2;
-      if (dlen == 0)
+      if (dlen < 2)
         break;
+      dlen -= 2;
       *pt++ = '\\';
       *pt++ = *s;
     }"
CVE-2018-20962,"From 8b6bd0a2d489a4690f6b1d7ace67e2f07f5f0cc6 Mon Sep 17 00:00:00 2001
From: Cristian Tabacitu <cristitabacitu@gmail.com>
Date: Thu, 10 May 2018 05:19:48 +0000
Subject: [PATCH] fixes #1297 - possible xss vulnerability in select field type

---
 CHANGELOG.md                                 | 1 +
 src/resources/views/columns/select.blade.php | 2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/CHANGELOG.md b/CHANGELOG.md
index 1d225eba0a..5235a31447 100644
--- a/CHANGELOG.md
+++ b/CHANGELOG.md
@@ -24,6 +24,7 @@ All Notable changes to `Backpack CRUD` will be documented in this file
 
 ## Fixed
 - #1378 - when a custom default page length is specified, it should show up in the page length menu;
+- #1297 - possible XSS vulnerability in ```select``` field type; now using ```e()``` to escape the attribute;
 
 
 ## [3.4.8] - 2018-05-07
diff --git a/src/resources/views/columns/select.blade.php b/src/resources/views/columns/select.blade.php
index f0a50c6a30..82b0aedf1f 100644
--- a/src/resources/views/columns/select.blade.php
+++ b/src/resources/views/columns/select.blade.php
@@ -3,7 +3,7 @@
     <?php
         $attributes = $crud->getModelAttributeFromRelation($entry, $column['entity'], $column['attribute']);
         if (count($attributes)) {
-            echo implode(', ', $attributes);
+            echo e(implode(', ', $attributes));
         } else {
             echo '-';
         }"
CVE-2018-25045,"From 4bb9a3c48427867ef1e46f7dee945a4c25a4f9b8 Mon Sep 17 00:00:00 2001
From: ""Yury V. Zaytsev"" <yury@shurup.com>
Date: Wed, 16 Jan 2019 13:36:25 +0100
Subject: [PATCH] Fix XSS caused by disabled autoescaping in the default DRF
 Browsable API view templates (#6330)

* Add test that verifies that HTML is correctly escaped in Browsable API views

* Fix `urlize_quoted_links` tag to avoid double escaping in autoescape mode

* Fix XSS in default DRF Browsable API template by re-enabling autoescape
---
 .../templates/rest_framework/base.html        |  4 +--
 rest_framework/templatetags/rest_framework.py | 26 +++++++++----------
 tests/test_templatetags.py                    | 13 ++++++++--
 3 files changed, 26 insertions(+), 17 deletions(-)

diff --git a/rest_framework/templates/rest_framework/base.html b/rest_framework/templates/rest_framework/base.html
index 26395e1fdc..688fd23104 100644
--- a/rest_framework/templates/rest_framework/base.html
+++ b/rest_framework/templates/rest_framework/base.html
@@ -171,10 +171,10 @@ <h1>{{ name }}</h1>
               </div>
 
               <div class=""response-info"" aria-label=""{% trans ""response info"" %}"">
-                <pre class=""prettyprint""><span class=""meta nocode""><b>HTTP {{ response.status_code }} {{ response.status_text }}</b>{% autoescape off %}{% for key, val in response_headers|items %}
+                <pre class=""prettyprint""><span class=""meta nocode""><b>HTTP {{ response.status_code }} {{ response.status_text }}</b>{% for key, val in response_headers|items %}
 <b>{{ key }}:</b> <span class=""lit"">{{ val|break_long_headers|urlize_quoted_links }}</span>{% endfor %}
 
-</span>{{ content|urlize_quoted_links }}</pre>{% endautoescape %}
+</span>{{ content|urlize_quoted_links }}</pre>
               </div>
             </div>
 
diff --git a/rest_framework/templatetags/rest_framework.py b/rest_framework/templatetags/rest_framework.py
index 3923389737..f48675d5eb 100644
--- a/rest_framework/templatetags/rest_framework.py
+++ b/rest_framework/templatetags/rest_framework.py
@@ -336,6 +336,12 @@ def trim_url(x, limit=trim_url_limit):
         return limit is not None and (len(x) > limit and ('%s...' % x[:max(0, limit - 3)])) or x
 
     safe_input = isinstance(text, SafeData)
+
+    # Unfortunately, Django built-in cannot be used here, because escaping
+    # is to be performed on words, which have been forcibly coerced to text
+    def conditional_escape(text):
+        return escape(text) if autoescape and not safe_input else text
+
     words = word_split_re.split(force_text(text))
     for i, word in enumerate(words):
         if '.' in word or '@' in word or ':' in word:
@@ -376,21 +382,15 @@ def trim_url(x, limit=trim_url_limit):
             # Make link.
             if url:
                 trimmed = trim_url(middle)
-                if autoescape and not safe_input:
-                    lead, trail = escape(lead), escape(trail)
-                    url, trimmed = escape(url), escape(trimmed)
+                lead, trail = conditional_escape(lead), conditional_escape(trail)
+                url, trimmed = conditional_escape(url), conditional_escape(trimmed)
                 middle = '<a href=""%s""%s>%s</a>' % (url, nofollow_attr, trimmed)
-                words[i] = mark_safe('%s%s%s' % (lead, middle, trail))
+                words[i] = '%s%s%s' % (lead, middle, trail)
             else:
-                if safe_input:
-                    words[i] = mark_safe(word)
-                elif autoescape:
-                    words[i] = escape(word)
-        elif safe_input:
-            words[i] = mark_safe(word)
-        elif autoescape:
-            words[i] = escape(word)
-    return ''.join(words)
+                words[i] = conditional_escape(word)
+        else:
+            words[i] = conditional_escape(word)
+    return mark_safe(''.join(words))
 
 
 @register.filter
diff --git a/tests/test_templatetags.py b/tests/test_templatetags.py
index 5d4f6a4e3d..45bfd4aeb7 100644
--- a/tests/test_templatetags.py
+++ b/tests/test_templatetags.py
@@ -305,6 +305,15 @@ def test_json_with_url(self):
             '&quot;foo_set&quot;: [\n    &quot;<a href=""http://api/foos/1/"">http://api/foos/1/</a>&quot;\n], '
         self._urlize_dict_check(data)
 
+    def test_template_render_with_autoescape(self):
+        """"""
+        Test that HTML is correctly escaped in Browsable API views.
+        """"""
+        template = Template(""{% load rest_framework %}{{ content|urlize_quoted_links }}"")
+        rendered = template.render(Context({'content': '<script>alert()</script> http://example.com'}))
+        assert rendered == '&lt;script&gt;alert()&lt;/script&gt;' \
+                           ' <a href=""http://example.com"" rel=""nofollow"">http://example.com</a>'
+
     def test_template_render_with_noautoescape(self):
         """"""
         Test if the autoescape value is getting passed to urlize_quoted_links filter.
@@ -312,8 +321,8 @@ def test_template_render_with_noautoescape(self):
         template = Template(""{% load rest_framework %}""
                             ""{% autoescape off %}{{ content|urlize_quoted_links }}""
                             ""{% endautoescape %}"")
-        rendered = template.render(Context({'content': '""http://example.com""'}))
-        assert rendered == '""<a href=""http://example.com"" rel=""nofollow"">http://example.com</a>""'
+        rendered = template.render(Context({'content': '<b> ""http://example.com"" </b>'}))
+        assert rendered == '<b> ""<a href=""http://example.com"" rel=""nofollow"">http://example.com</a>"" </b>'
 
 
 @unittest.skipUnless(coreapi, 'coreapi is not installed')"
CVE-2018-25020,"From 050fad7c4534c13c8eb1d9c2ba66012e014773cb Mon Sep 17 00:00:00 2001
From: Daniel Borkmann <daniel@iogearbox.net>
Date: Thu, 17 May 2018 01:44:11 +0200
Subject: [PATCH] bpf: fix truncated jump targets on heavy expansions

Recently during testing, I ran into the following panic:

  [  207.892422] Internal error: Accessing user space memory outside uaccess.h routines: 96000004 [#1] SMP
  [  207.901637] Modules linked in: binfmt_misc [...]
  [  207.966530] CPU: 45 PID: 2256 Comm: test_verifier Tainted: G        W         4.17.0-rc3+ #7
  [  207.974956] Hardware name: FOXCONN R2-1221R-A4/C2U4N_MB, BIOS G31FB18A 03/31/2017
  [  207.982428] pstate: 60400005 (nZCv daif +PAN -UAO)
  [  207.987214] pc : bpf_skb_load_helper_8_no_cache+0x34/0xc0
  [  207.992603] lr : 0xffff000000bdb754
  [  207.996080] sp : ffff000013703ca0
  [  207.999384] x29: ffff000013703ca0 x28: 0000000000000001
  [  208.004688] x27: 0000000000000001 x26: 0000000000000000
  [  208.009992] x25: ffff000013703ce0 x24: ffff800fb4afcb00
  [  208.015295] x23: ffff00007d2f5038 x22: ffff00007d2f5000
  [  208.020599] x21: fffffffffeff2a6f x20: 000000000000000a
  [  208.025903] x19: ffff000009578000 x18: 0000000000000a03
  [  208.031206] x17: 0000000000000000 x16: 0000000000000000
  [  208.036510] x15: 0000ffff9de83000 x14: 0000000000000000
  [  208.041813] x13: 0000000000000000 x12: 0000000000000000
  [  208.047116] x11: 0000000000000001 x10: ffff0000089e7f18
  [  208.052419] x9 : fffffffffeff2a6f x8 : 0000000000000000
  [  208.057723] x7 : 000000000000000a x6 : 00280c6160000000
  [  208.063026] x5 : 0000000000000018 x4 : 0000000000007db6
  [  208.068329] x3 : 000000000008647a x2 : 19868179b1484500
  [  208.073632] x1 : 0000000000000000 x0 : ffff000009578c08
  [  208.078938] Process test_verifier (pid: 2256, stack limit = 0x0000000049ca7974)
  [  208.086235] Call trace:
  [  208.088672]  bpf_skb_load_helper_8_no_cache+0x34/0xc0
  [  208.093713]  0xffff000000bdb754
  [  208.096845]  bpf_test_run+0x78/0xf8
  [  208.100324]  bpf_prog_test_run_skb+0x148/0x230
  [  208.104758]  sys_bpf+0x314/0x1198
  [  208.108064]  el0_svc_naked+0x30/0x34
  [  208.111632] Code: 91302260 f9400001 f9001fa1 d2800001 (29500680)
  [  208.117717] ---[ end trace 263cb8a59b5bf29f ]---

The program itself which caused this had a long jump over the whole
instruction sequence where all of the inner instructions required
heavy expansions into multiple BPF instructions. Additionally, I also
had BPF hardening enabled which requires once more rewrites of all
constant values in order to blind them. Each time we rewrite insns,
bpf_adj_branches() would need to potentially adjust branch targets
which cross the patchlet boundary to accommodate for the additional
delta. Eventually that lead to the case where the target offset could
not fit into insn->off's upper 0x7fff limit anymore where then offset
wraps around becoming negative (in s16 universe), or vice versa
depending on the jump direction.

Therefore it becomes necessary to detect and reject any such occasions
in a generic way for native eBPF and cBPF to eBPF migrations. For
the latter we can simply check bounds in the bpf_convert_filter()'s
BPF_EMIT_JMP helper macro and bail out once we surpass limits. The
bpf_patch_insn_single() for native eBPF (and cBPF to eBPF in case
of subsequent hardening) is a bit more complex in that we need to
detect such truncations before hitting the bpf_prog_realloc(). Thus
the latter is split into an extra pass to probe problematic offsets
on the original program in order to fail early. With that in place
and carefully tested I no longer hit the panic and the rewrites are
rejected properly. The above example panic I've seen on bpf-next,
though the issue itself is generic in that a guard against this issue
in bpf seems more appropriate in this case.

Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Acked-by: Martin KaFai Lau <kafai@fb.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
---
 kernel/bpf/core.c | 100 ++++++++++++++++++++++++++++++++++------------
 net/core/filter.c |  11 ++++-
 2 files changed, 84 insertions(+), 27 deletions(-)

diff --git a/kernel/bpf/core.c b/kernel/bpf/core.c
index ba03ec39efb399..6ef6746a7871b3 100644
--- a/kernel/bpf/core.c
+++ b/kernel/bpf/core.c
@@ -218,47 +218,84 @@ int bpf_prog_calc_tag(struct bpf_prog *fp)
 	return 0;
 }
 
-static void bpf_adj_branches(struct bpf_prog *prog, u32 pos, u32 delta)
+static int bpf_adj_delta_to_imm(struct bpf_insn *insn, u32 pos, u32 delta,
+				u32 curr, const bool probe_pass)
 {
+	const s64 imm_min = S32_MIN, imm_max = S32_MAX;
+	s64 imm = insn->imm;
+
+	if (curr < pos && curr + imm + 1 > pos)
+		imm += delta;
+	else if (curr > pos + delta && curr + imm + 1 <= pos + delta)
+		imm -= delta;
+	if (imm < imm_min || imm > imm_max)
+		return -ERANGE;
+	if (!probe_pass)
+		insn->imm = imm;
+	return 0;
+}
+
+static int bpf_adj_delta_to_off(struct bpf_insn *insn, u32 pos, u32 delta,
+				u32 curr, const bool probe_pass)
+{
+	const s32 off_min = S16_MIN, off_max = S16_MAX;
+	s32 off = insn->off;
+
+	if (curr < pos && curr + off + 1 > pos)
+		off += delta;
+	else if (curr > pos + delta && curr + off + 1 <= pos + delta)
+		off -= delta;
+	if (off < off_min || off > off_max)
+		return -ERANGE;
+	if (!probe_pass)
+		insn->off = off;
+	return 0;
+}
+
+static int bpf_adj_branches(struct bpf_prog *prog, u32 pos, u32 delta,
+			    const bool probe_pass)
+{
+	u32 i, insn_cnt = prog->len + (probe_pass ? delta : 0);
 	struct bpf_insn *insn = prog->insnsi;
-	u32 i, insn_cnt = prog->len;
-	bool pseudo_call;
-	u8 code;
-	int off;
+	int ret = 0;
 
 	for (i = 0; i < insn_cnt; i++, insn++) {
+		u8 code;
+
+		/* In the probing pass we still operate on the original,
+		 * unpatched image in order to check overflows before we
+		 * do any other adjustments. Therefore skip the patchlet.
+		 */
+		if (probe_pass && i == pos) {
+			i += delta + 1;
+			insn++;
+		}
 		code = insn->code;
-		if (BPF_CLASS(code) != BPF_JMP)
-			continue;
-		if (BPF_OP(code) == BPF_EXIT)
+		if (BPF_CLASS(code) != BPF_JMP ||
+		    BPF_OP(code) == BPF_EXIT)
 			continue;
+		/* Adjust offset of jmps if we cross patch boundaries. */
 		if (BPF_OP(code) == BPF_CALL) {
-			if (insn->src_reg == BPF_PSEUDO_CALL)
-				pseudo_call = true;
-			else
+			if (insn->src_reg != BPF_PSEUDO_CALL)
 				continue;
+			ret = bpf_adj_delta_to_imm(insn, pos, delta, i,
+						   probe_pass);
 		} else {
-			pseudo_call = false;
+			ret = bpf_adj_delta_to_off(insn, pos, delta, i,
+						   probe_pass);
 		}
-		off = pseudo_call ? insn->imm : insn->off;
-
-		/* Adjust offset of jmps if we cross boundaries. */
-		if (i < pos && i + off + 1 > pos)
-			off += delta;
-		else if (i > pos + delta && i + off + 1 <= pos + delta)
-			off -= delta;
-
-		if (pseudo_call)
-			insn->imm = off;
-		else
-			insn->off = off;
+		if (ret)
+			break;
 	}
+
+	return ret;
 }
 
 struct bpf_prog *bpf_patch_insn_single(struct bpf_prog *prog, u32 off,
 				       const struct bpf_insn *patch, u32 len)
 {
 	u32 insn_adj_cnt, insn_rest, insn_delta = len - 1;
+	const u32 cnt_max = S16_MAX;
 	struct bpf_prog *prog_adj;
 
 	/* Since our patchlet doesn't expand the image, we're done. */
@@ -269,6 +306,15 @@ struct bpf_prog *bpf_patch_insn_single(struct bpf_prog *prog, u32 off,
 
 	insn_adj_cnt = prog->len + insn_delta;
 
+	/* Reject anything that would potentially let the insn->off
+	 * target overflow when we have excessive program expansions.
+	 * We need to probe here before we do any reallocation where
+	 * we afterwards may not fail anymore.
+	 */
+	if (insn_adj_cnt > cnt_max &&
+	    bpf_adj_branches(prog, off, insn_delta, true))
+		return NULL;
+
 	/* Several new instructions need to be inserted. Make room
 	 * for them. Likely, there's no need for a new allocation as
 	 * last page could have large enough tailroom.
@@ -294,7 +340,11 @@ struct bpf_prog *bpf_patch_insn_single(struct bpf_prog *prog, u32 off,
 		sizeof(*patch) * insn_rest);
 	memcpy(prog_adj->insnsi + off, patch, sizeof(*patch) * len);
 
-	bpf_adj_branches(prog_adj, off, insn_delta);
+	/* We are guaranteed to not fail at this point, otherwise
+	 * the ship has sailed to reverse to the original state. An
+	 * overflow cannot happen at this point.
+	 */
+	BUG_ON(bpf_adj_branches(prog_adj, off, insn_delta, false));
 
 	return prog_adj;
 }
diff --git a/net/core/filter.c b/net/core/filter.c
index e77c30ca491df7..201ff36b17a8c8 100644
--- a/net/core/filter.c
+++ b/net/core/filter.c
@@ -481,11 +481,18 @@ static int bpf_convert_filter(struct sock_filter *prog, int len,
 
 #define BPF_EMIT_JMP							\
 	do {								\
+		const s32 off_min = S16_MIN, off_max = S16_MAX;		\
+		s32 off;						\
+									\
 		if (target >= len || target < 0)			\
 			goto err;					\
-		insn->off = addrs ? addrs[target] - addrs[i] - 1 : 0;	\
+		off = addrs ? addrs[target] - addrs[i] - 1 : 0;		\
 		/* Adjust pc relative offset for 2nd or 3rd insn. */	\
-		insn->off -= insn - tmp_insns;				\
+		off -= insn - tmp_insns;				\
+		/* Reject anything not fitting into insn->off. */	\
+		if (off < off_min || off > off_max)			\
+			goto err;					\
+		insn->off = off;					\
 	} while (0)
 
 		case BPF_JMP | BPF_JA:"
CVE-2018-6347,"From 223e0aa6bc7590e86af1e917185a2e0efe160711 Mon Sep 17 00:00:00 2001
From: Alan Frindell <afrind@fb.com>
Date: Thu, 27 Dec 2018 16:11:46 -0800
Subject: [PATCH] Don't lower lastStreamID_

Summary:
This could throw off the logic about what is headers/trailers
CVE-2018-6347

Reviewed By: avasylev, bolekk

Differential Revision: D13521704

fbshipit-source-id: ed436ff13f191bf04764494973fcb73b35ed1256
---
 proxygen/lib/http/codec/HTTP2Codec.cpp        |  3 +-
 .../lib/http/codec/test/HTTP2CodecTest.cpp    | 25 +++++++++++++++
 .../test/HTTPDownstreamSessionTest.cpp        | 32 +++++++++++++++++++
 .../lib/http/session/test/HTTPSessionMocks.h  | 11 +++++++
 4 files changed, 70 insertions(+), 1 deletion(-)

diff --git a/proxygen/lib/http/codec/HTTP2Codec.cpp b/proxygen/lib/http/codec/HTTP2Codec.cpp
index db9a82731a..d3095d626a 100644
--- a/proxygen/lib/http/codec/HTTP2Codec.cpp
+++ b/proxygen/lib/http/codec/HTTP2Codec.cpp
@@ -987,7 +987,7 @@ ErrorCode HTTP2Codec::checkNewStream(uint32_t streamId, bool trailersAllowed) {
     VLOG(4) << ""Parsing downstream trailers streamId="" << streamId;
   }
 
-  if (sessionClosing_ != ClosingState::CLOSED) {
+  if (sessionClosing_ != ClosingState::CLOSED && streamId > lastStreamID_) {
     lastStreamID_ = streamId;
   }
 
@@ -1313,6 +1313,7 @@ size_t HTTP2Codec::generateChunkTerminator(folly::IOBufQueue& /*writeBuf*/,
 size_t HTTP2Codec::generateTrailers(folly::IOBufQueue& writeBuf,
                                     StreamID stream,
                                     const HTTPHeaders& trailers) {
+  VLOG(4) << ""generating TRAILERS for stream="" << stream;
   std::vector<compress::Header> allHeaders;
   CodecUtil::appendHeaders(trailers, allHeaders, HTTP_HEADER_NONE);
 
diff --git a/proxygen/lib/http/codec/test/HTTP2CodecTest.cpp b/proxygen/lib/http/codec/test/HTTP2CodecTest.cpp
index 22471b13e9..c123e0d3a0 100644
--- a/proxygen/lib/http/codec/test/HTTP2CodecTest.cpp
+++ b/proxygen/lib/http/codec/test/HTTP2CodecTest.cpp
@@ -2145,3 +2145,28 @@ TEST_F(HTTP2CodecTest, TrailersReplyMissingContinuation) {
   EXPECT_EQ(upstreamCodec_.getReceivedFrameCount(), 4);
 #endif
 }
+
+TEST_F(HTTP2CodecTest, TrailersNotLatest) {
+  HTTPMessage req = getGetRequest(""/guacamole"");
+  req.getHeaders().add(HTTP_HEADER_USER_AGENT, ""coolio"");
+  upstreamCodec_.generateHeader(output_, 1, req);
+  upstreamCodec_.generateHeader(output_, 3, req);
+
+  HTTPHeaders trailers;
+  trailers.add(""x-trailer-1"", ""pico-de-gallo"");
+  upstreamCodec_.generateTrailers(output_, 1, trailers);
+  upstreamCodec_.generateHeader(output_, 3, req);
+
+  parse();
+
+  EXPECT_EQ(callbacks_.messageBegin, 2);
+  EXPECT_EQ(callbacks_.headersComplete, 2);
+  EXPECT_EQ(callbacks_.bodyCalls, 0);
+  EXPECT_EQ(callbacks_.trailers, 1);
+  EXPECT_NE(nullptr, callbacks_.msg->getTrailers());
+  EXPECT_EQ(""pico-de-gallo"",
+            callbacks_.msg->getTrailers()->getSingleOrEmpty(""x-trailer-1""));
+  EXPECT_EQ(callbacks_.messageComplete, 1);
+  EXPECT_EQ(callbacks_.streamErrors, 1);
+  EXPECT_EQ(callbacks_.sessionErrors, 0);
+}
diff --git a/proxygen/lib/http/session/test/HTTPDownstreamSessionTest.cpp b/proxygen/lib/http/session/test/HTTPDownstreamSessionTest.cpp
index a54088d956..f3478c52c1 100644
--- a/proxygen/lib/http/session/test/HTTPDownstreamSessionTest.cpp
+++ b/proxygen/lib/http/session/test/HTTPDownstreamSessionTest.cpp
@@ -3568,3 +3568,35 @@ TEST_F(HTTP2DownstreamSessionTest, TestSetEgressSettings) {
   flushRequestsAndLoop();
   gracefulShutdown();
 }
+
+TEST_F(HTTP2DownstreamSessionTest, TestDuplicateRequestStream) {
+  // Send the following:
+  // HEADERS id=1
+  // HEADERS id=2
+  // HEADERS id=1 (trailers)
+  // HEADERS id=2 -> contains pseudo-headers after EOM so ignored
+  auto handler2 = addSimpleStrictHandler();
+  auto handler1 = addSimpleStrictHandler();
+  auto streamID1 = sendRequest(""/withtrailers"", 0, false);
+  auto streamID2 = sendRequest();
+  HTTPHeaders trailers;
+  trailers.add(""Foo"", ""Bar"");
+  clientCodec_->generateTrailers(requests_, streamID1, trailers);
+  clientCodec_->generateEOM(requests_, streamID1);
+
+  clientCodec_->generateHeader(requests_, streamID2, getGetRequest(), false);
+  handler1->expectHeaders();
+  handler2->expectHeaders();
+  handler2->expectEOM();
+  handler1->expectTrailers();
+  handler1->expectEOM([&] {
+      handler1->sendReplyWithBody(200, 100);
+      // 2 got an error after EOM, which gets ignored - need a response to
+      // cleanly terminate it
+      handler2->sendReplyWithBody(200, 100);
+    });
+  handler1->expectDetachTransaction();
+  handler2->expectDetachTransaction();
+  flushRequestsAndLoop();
+  gracefulShutdown();
+}
diff --git a/proxygen/lib/http/session/test/HTTPSessionMocks.h b/proxygen/lib/http/session/test/HTTPSessionMocks.h
index 9af0ea7a28..9b3f81ae01 100644
--- a/proxygen/lib/http/session/test/HTTPSessionMocks.h
+++ b/proxygen/lib/http/session/test/HTTPSessionMocks.h
@@ -221,6 +221,17 @@ class MockHTTPHandler
         .RetiresOnSaturation();
   }
 
+  void expectTrailers(
+      std::function<void()> callback = std::function<void()>()) {
+    if (callback) {
+      EXPECT_CALL(*this, onTrailers(testing::_))
+          .WillOnce(testing::InvokeWithoutArgs(callback))
+          .RetiresOnSaturation();
+    } else {
+      EXPECT_CALL(*this, onTrailers(testing::_));
+    }
+  }
+
   void expectTrailers(
       std::function<void(std::shared_ptr<HTTPHeaders> trailers)> cb) {
     EXPECT_CALL(*this, onTrailers(testing::_))"
CVE-2018-6345,"From 190ffdf6c8b1ec443be202c7d69e63a7e3da25e3 Mon Sep 17 00:00:00 2001
From: Guilherme Ottoni <ottoni@fb.com>
Date: Fri, 14 Dec 2018 08:42:02 -0800
Subject: [PATCH] Fix a bug in number_format()

Summary: In case of error while calling snprintf, return empty string instead of malformed string.

Reviewed By: binliu19

Differential Revision: D13379372

fbshipit-source-id: 1e5611598464daccc674d5a96558c9f2aee08fc8
---
 hphp/runtime/base/zend-string.cpp             |  2 ++
 hphp/test/slow/string/number_format_error.php | 19 +++++++++++++++++++
 .../string/number_format_error.php.expect     |  2 ++
 3 files changed, 23 insertions(+)
 create mode 100644 hphp/test/slow/string/number_format_error.php
 create mode 100644 hphp/test/slow/string/number_format_error.php.expect

diff --git a/hphp/runtime/base/zend-string.cpp b/hphp/runtime/base/zend-string.cpp
index 072148f61c0010..40267cffd6f70f 100644
--- a/hphp/runtime/base/zend-string.cpp
+++ b/hphp/runtime/base/zend-string.cpp
@@ -1768,6 +1768,7 @@ String string_number_format(double d, int dec,
   String tmpstr(63, ReserveString);
   tmpbuf = tmpstr.mutableData();
   tmplen = snprintf(tmpbuf, 64, ""%.*F"", dec, d);
+  if (tmplen < 0) return empty_string();
   if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {
     tmpstr.setSize(tmplen);
     return tmpstr;
@@ -1777,6 +1778,7 @@ String string_number_format(double d, int dec,
     tmpstr = String(tmplen, ReserveString);
     tmpbuf = tmpstr.mutableData();
     tmplen = snprintf(tmpbuf, tmplen + 1, ""%.*F"", dec, d);
+    if (tmplen < 0) return empty_string();
     if (tmpbuf == nullptr || !isdigit((int)tmpbuf[0])) {
       tmpstr.setSize(tmplen);
       return tmpstr;
diff --git a/hphp/test/slow/string/number_format_error.php b/hphp/test/slow/string/number_format_error.php
new file mode 100644
index 00000000000000..e5899967bc0da9
--- /dev/null
+++ b/hphp/test/slow/string/number_format_error.php
@@ -0,0 +1,19 @@
+<?php
+  $READ_LENGTH = 0x1000; // choose leak size
+// construct fake iptc header for controlled read
+$iptc_hdr =
+  ""\x1c\x01"" . // magic
+  ""\x00\x80"" . // dataset, recnum
+  ""\x00"" .     // padding
+  pack(""N"", $READ_LENGTH);
+// spray a bit so it's near the broken string
+$holder = [];
+for($i = 0; $i < 100; $i++)
+  $holder[] = str_pad($iptc_hdr, 96);
+// trigger bug to create string with len=-1
+$badstr = number_format(0,0x7fffffff);
+var_dump($badstr);
+// leak memory :)
+$tmp = iptcparse($badstr);
+var_dump($tmp);
+?>
diff --git a/hphp/test/slow/string/number_format_error.php.expect b/hphp/test/slow/string/number_format_error.php.expect
new file mode 100644
index 00000000000000..4cbe7ce9a7853a
--- /dev/null
+++ b/hphp/test/slow/string/number_format_error.php.expect
@@ -0,0 +1,2 @@
+string(0) """"
+bool(false)"
CVE-2018-16790,"From 0d9a4d98bfdf4acd2c0138d4aaeb4e2e0934bd84 Mon Sep 17 00:00:00 2001
From: Scott Gayou <sgayou@redhat.com>
Date: Fri, 14 Sep 2018 11:55:11 -0500
Subject: [PATCH] Fix for CVE-2018-16790 -- Verify bounds before binary length
 read.

As reported here: https://jira.mongodb.org/browse/CDRIVER-2819,
a heap overread occurs due a failure to correctly verify data
bounds.

In the original check, len - o returns the data left including the
sizeof(l) we just read. Instead, the comparison should check
against the data left NOT including the binary int32, i.e. just
subtype (byte*) instead of int32 subtype (byte*).

Added in test for corrupted BSON example.
---
 src/libbson/src/bson/bson-iter.c     |   2 +-
 src/libbson/tests/binary/test59.bson | Bin 0 -> 17 bytes
 src/libbson/tests/test-bson.c        |   5 +++++
 3 files changed, 6 insertions(+), 1 deletion(-)
 create mode 100644 src/libbson/tests/binary/test59.bson

diff --git a/src/libbson/src/bson/bson-iter.c b/src/libbson/src/bson/bson-iter.c
index 5b6dad1c5b..820134ea82 100644
--- a/src/libbson/src/bson/bson-iter.c
+++ b/src/libbson/src/bson/bson-iter.c
@@ -618,7 +618,7 @@ _bson_iter_next_internal (bson_iter_t *iter,    /* INOUT */
       memcpy (&l, iter->raw + iter->d1, sizeof (l));
       l = BSON_UINT32_FROM_LE (l);
 
-      if (l >= (len - o)) {
+      if (l >= (len - o - 4)) {
          iter->err_off = o;
          goto mark_invalid;
       }
diff --git a/src/libbson/tests/binary/test59.bson b/src/libbson/tests/binary/test59.bson
new file mode 100644
index 0000000000000000000000000000000000000000..5fd8be074e0a811e4d4d6004e046aac0c8711fea
GIT binary patch
literal 17
VcmWe+U|?Y7lhk8i0Wz3?7ytz#0CE5T

literal 0
HcmV?d00001

diff --git a/src/libbson/tests/test-bson.c b/src/libbson/tests/test-bson.c
index b6e74c67c9..6ac94f3aee 100644
--- a/src/libbson/tests/test-bson.c
+++ b/src/libbson/tests/test-bson.c
@@ -1249,6 +1249,11 @@ test_bson_validate (void)
                   12,
                   BSON_VALIDATE_NONE,
                   ""corrupt BSON"");
+   VALIDATE_TEST (""test59.bson"",
+                  BSON_VALIDATE_NONE,
+                  9,
+                  BSON_VALIDATE_NONE,
+                  ""corrupt BSON"");
 
    /* DBRef validation */
    b = BCON_NEW (""my_dbref"","
CVE-2018-18586,"From 7cadd489698be117c47efcadd742651594429e6d Mon Sep 17 00:00:00 2001
From: Stuart Caie <kyzer@cabextract.org.uk>
Date: Sat, 20 Oct 2018 19:06:32 +0100
Subject: [PATCH] add anti ""../"" and leading slash protection to chmextract

---
 libmspack/ChangeLog        |  10 +++
 libmspack/src/chmextract.c | 140 +++++--------------------------------
 2 files changed, 27 insertions(+), 123 deletions(-)

diff --git a/libmspack/ChangeLog b/libmspack/ChangeLog
index 848610d..325c160 100644
--- a/libmspack/ChangeLog
+++ b/libmspack/ChangeLog
@@ -1,3 +1,13 @@
+2018-10-20  Stuart Caie <kyzer@cabextract.org.uk>
+
+	* src/chmextract.c: add anti ""../"" and leading slash protection to
+	chmextract. I'm not pleased about this. All the sample code provided
+	with libmspack is meant to be simple examples of library use, not
+	""productised"" binaries. Making the ""useful"" code samples install
+	as binaries was a mistake. They were never intended to protect you
+	from unpacking archive files with relative/absolute paths, and I
+	would prefer that they never will be.
+
 2018-10-17  Stuart Caie <kyzer@cabextract.org.uk>
 
 	* cab.h: Make the CAB block input buffer one byte larger, to allow
diff --git a/libmspack/src/chmextract.c b/libmspack/src/chmextract.c
index 1e03341..b535f0e 100644
--- a/libmspack/src/chmextract.c
+++ b/libmspack/src/chmextract.c
@@ -25,8 +25,6 @@
 
 mode_t user_umask;
 
-#define FILENAME "".test.chmx""
-
 /**
  * Ensures that all directory components in a filepath exist. New directory
  * components are created, if necessary.
@@ -51,126 +49,22 @@ static int ensure_filepath(char *path) {
   return 1;
 }
 
-/**
- * Creates a UNIX filename from the internal CAB filename and the given
- * parameters.
- *
- * @param fname  the internal CAB filename.
- * @param dir    a directory path to prepend to the output filename.
- * @param lower  if non-zero, filename should be made lower-case.
- * @param isunix if zero, MS-DOS path seperators are used in the internal
- *               CAB filename. If non-zero, UNIX path seperators are used.
- * @param utf8   if non-zero, the internal CAB filename is encoded in UTF8.
- * @return a freshly allocated and created filename, or NULL if there was
- *         not enough memory.
- * @see unix_path_seperators()
- */
-static char *create_output_name(unsigned char *fname, unsigned char *dir,
-			 int lower, int isunix, int utf8)
-{
-  unsigned char *p, *name, c, *fe, sep, slash;
-  unsigned int x;
-
-  sep   = (isunix) ? '/'  : '\\'; /* the path-seperator */
-  slash = (isunix) ? '\\' : '/';  /* the other slash */
-
-  /* length of filename */
-  x = strlen((char *) fname);
-  /* UTF8 worst case scenario: tolower() expands all chars from 1 to 3 bytes */
-  if (utf8) x *= 3;
-  /* length of output directory */
-  if (dir) x += strlen((char *) dir);
-
-  if (!(name = (unsigned char *) malloc(x + 2))) {
-    fprintf(stderr, ""out of memory!\n"");
-    return NULL;
-  }
-  
-  /* start with blank name */
-  *name = '\0';
-
-  /* add output directory if needed */
-  if (dir) {
-    strcpy((char *) name, (char *) dir);
-    strcat((char *) name, ""/"");
-  }
-
-  /* remove leading slashes */
-  while (*fname == sep) fname++;
-
-  /* copy from fi->filename to new name, converting MS-DOS slashes to UNIX
-   * slashes as we go. Also lowercases characters if needed.
-   */
-  p = &name[strlen((char *)name)];
-  fe = &fname[strlen((char *)fname)];
-
-  if (utf8) {
-    /* UTF8 translates two-byte unicode characters into 1, 2 or 3 bytes.
-     * %000000000xxxxxxx -> %0xxxxxxx
-     * %00000xxxxxyyyyyy -> %110xxxxx %10yyyyyy
-     * %xxxxyyyyyyzzzzzz -> %1110xxxx %10yyyyyy %10zzzzzz
-     *
-     * Therefore, the inverse is as follows:
-     * First char:
-     *  0x00 - 0x7F = one byte char
-     *  0x80 - 0xBF = invalid
-     *  0xC0 - 0xDF = 2 byte char (next char only 0x80-0xBF is valid)
-     *  0xE0 - 0xEF = 3 byte char (next 2 chars only 0x80-0xBF is valid)
-     *  0xF0 - 0xFF = invalid
-     */
-    do {
-      if (fname >= fe) {
-	free(name);
-	return NULL;
-      }
-
-      /* get next UTF8 char */
-      if ((c = *fname++) < 0x80) x = c;
-      else {
-	if ((c >= 0xC0) && (c < 0xE0)) {
-	  x = (c & 0x1F) << 6;
-	  x |= *fname++ & 0x3F;
-	}
-	else if ((c >= 0xE0) && (c < 0xF0)) {
-	  x = (c & 0xF) << 12;
-	  x |= (*fname++ & 0x3F) << 6;
-	  x |= *fname++ & 0x3F;
-	}
-	else x = '?';
-      }
-
-      /* whatever is the path seperator -> '/'
-       * whatever is the other slash    -> '\\'
-       * otherwise, if lower is set, the lowercase version */
-      if      (x == sep)   x = '/';
-      else if (x == slash) x = '\\';
-      else if (lower)      x = (unsigned int) tolower((int) x);
-
-      /* integer back to UTF8 */
-      if (x < 0x80) {
-	*p++ = (unsigned char) x;
-      }
-      else if (x < 0x800) {
-	*p++ = 0xC0 | (x >> 6);   
-	*p++ = 0x80 | (x & 0x3F);
-      }
-      else {
-	*p++ = 0xE0 | (x >> 12);
-	*p++ = 0x80 | ((x >> 6) & 0x3F);
-	*p++ = 0x80 | (x & 0x3F);
-      }
-    } while (x);
-  }
-  else {
-    /* regular non-utf8 version */
-    do {
-      c = *fname++;
-      if      (c == sep)   c = '/';
-      else if (c == slash) c = '\\';
-      else if (lower)      c = (unsigned char) tolower((int) c);
-    } while ((*p++ = c));
-  }
-  return (char *) name;
+char *create_output_name(char *fname) {
+    char *out, *p;
+    if ((out = malloc(strlen(fname) + 1))) {
+        /* remove leading slashes */
+        while (*fname == '/' || *fname == '\\') fname++;
+        /* if that removes all characters, just call it ""x"" */
+        strcpy(out, (*fname) ? fname : ""x"");
+
+        /* change ""../"" to ""xx/"" */
+        for (p = out; *p; p++) {
+            if (p[0] == '.' && p[1] == '.' && (p[2] == '/' || p[2] == '\\')) {
+               p[0] = p[1] = 'x';
+            }
+        }
+    }
+    return out;
 }
 
 static int sortfunc(const void *a, const void *b) {
@@ -205,7 +99,7 @@ int main(int argc, char *argv[]) {
 	  qsort(f, numf, sizeof(struct mschmd_file *), &sortfunc);
 
 	  for (i = 0; i < numf; i++) {
-	    char *outname = create_output_name((unsigned char *)f[i]->filename,NULL,0,1,0);
+	    char *outname = create_output_name(f[i]->filename);
 	    printf(""Extracting %s\n"", outname);
 	    ensure_filepath(outname);
 	    if (chmd->extract(chmd, f[i], outname)) {"
CVE-2018-16643,"From 6b6bff054d569a77973f2140c0e86366e6168a6c Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Thu, 5 Jul 2018 14:29:46 -0400
Subject: [PATCH] https://github.com/ImageMagick/ImageMagick/issues/1199

---
 coders/cals.c | 3 ++-
 coders/dcm.c  | 9 +++++----
 coders/pict.c | 3 ++-
 coders/pwp.c  | 3 ++-
 4 files changed, 11 insertions(+), 7 deletions(-)

diff --git a/coders/cals.c b/coders/cals.c
index 842cff4acc5..bce23e82125 100644
--- a/coders/cals.c
+++ b/coders/cals.c
@@ -257,7 +257,8 @@ static Image *ReadCALSImage(const ImageInfo *image_info,
   if ((unique_file == -1) || (file == (FILE *) NULL))
     ThrowImageException(FileOpenError,""UnableToCreateTemporaryFile"");
   while ((c=ReadBlobByte(image)) != EOF)
-    (void) fputc(c,file);
+    if (fputc(c,file) != c)
+      break;
   (void) fclose(file);
   (void) CloseBlob(image);
   image=DestroyImage(image);
diff --git a/coders/dcm.c b/coders/dcm.c
index 334fd2ec898..49fe55a1928 100644
--- a/coders/dcm.c
+++ b/coders/dcm.c
@@ -3228,13 +3228,13 @@ static Image *ReadDCMImage(const ImageInfo *image_info,ExceptionInfo *exception)
               (strncmp(implicit_vr,""SS"",2) == 0) ||
               (strncmp(implicit_vr,""US"",2) == 0))
             quantum=2;
-          else 
+          else
             if ((strncmp(implicit_vr,""FL"",2) == 0) ||
                 (strncmp(implicit_vr,""OF"",2) == 0) ||
                 (strncmp(implicit_vr,""SL"",2) == 0) ||
                 (strncmp(implicit_vr,""UL"",2) == 0))
               quantum=4;
-            else 
+            else
               if (strncmp(implicit_vr,""FD"",2) == 0)
                 quantum=8;
               else
@@ -3880,7 +3880,8 @@ static Image *ReadDCMImage(const ImageInfo *image_info,ExceptionInfo *exception)
                   ""UnexpectedEndOfFile"",image->filename);
                 break;
               }
-            (void) fputc(c,file);
+            if (fputc(c,file) != c)
+              break;
           }
           (void) fclose(file);
           if (c == EOF)
@@ -3934,7 +3935,7 @@ static Image *ReadDCMImage(const ImageInfo *image_info,ExceptionInfo *exception)
         length=(size_t) (GetQuantumRange(info.depth)+1);
         if (length > (size_t) GetBlobSize(image))
           ThrowDCMException(CorruptImageError,""InsufficientImageDataInFile"");
-        if (info.scale != (Quantum *) NULL) 
+        if (info.scale != (Quantum *) NULL)
           info.scale=(Quantum *) RelinquishMagickMemory(info.scale);
         info.scale=(Quantum *) AcquireQuantumMemory(MagickMax(length,256),
           sizeof(*info.scale));
diff --git a/coders/pict.c b/coders/pict.c
index 8aafadec26a..35dadfeee0f 100644
--- a/coders/pict.c
+++ b/coders/pict.c
@@ -1472,7 +1472,8 @@ static Image *ReadPICTImage(const ImageInfo *image_info,
               c=ReadBlobByte(image);
               if (c == EOF)
                 break;
-              (void) fputc(c,file);
+              if (fputc(c,file) != c)
+                break;
             }
           }
         (void) fclose(file);
diff --git a/coders/pwp.c b/coders/pwp.c
index e5ae5c88051..cad42500274 100644
--- a/coders/pwp.c
+++ b/coders/pwp.c
@@ -233,7 +233,8 @@ static Image *ReadPWPImage(const ImageInfo *image_info,ExceptionInfo *exception)
       c=ReadBlobByte(pwp_image);
       if (c == EOF)
         break;
-      (void) fputc(c,file);
+      if (fputc(c,file) != c)
+        break;
     }
     (void) fclose(file);
     if (c == EOF)"
CVE-2018-1000070,"From 3a8016d31f517775d226aa8b902480f4a3a148a9 Mon Sep 17 00:00:00 2001
From: Peter Surda <surda@economicsofbitcoin.com>
Date: Tue, 13 Feb 2018 16:39:35 +0100
Subject: [PATCH] Fix message encoding bug

- prevent loading invalid message types
---
 src/messagetypes/__init__.py | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/messagetypes/__init__.py b/src/messagetypes/__init__.py
index c3911dfdee..d929101326 100644
--- a/src/messagetypes/__init__.py
+++ b/src/messagetypes/__init__.py
@@ -12,9 +12,10 @@ def encode(self):
 
 def constructObject(data):
     try:
-        classBase = eval(data[""""] + ""."" + data[""""].title())
-    except NameError:
-        logger.error(""Don't know how to handle message type: \""%s\"""", data[""""])
+        m = import_module(""messagetypes."" + data[""""])
+        classBase = getattr(m, data[""""].title())
+    except (NameError, ImportError):
+        logger.error(""Don't know how to handle message type: \""%s\"""", data[""""], exc_info=True)
         return None
     try:
         returnObj = classBase()"
CVE-2018-7998,"From 20d840e6da15c1574b3ed998bc92f91d1e36c2a5 Mon Sep 17 00:00:00 2001
From: John Cupitt <jcupitt@gmail.com>
Date: Mon, 5 Mar 2018 14:42:09 +0000
Subject: [PATCH] fix a crash with delayed load

If a delayed load failed, it could leave the pipeline only half-set up.
Sebsequent threads could then segv.

Set a load-has-failed flag and test before generate.

See https://github.com/jcupitt/libvips/issues/893
---
 ChangeLog                      |  1 +
 libvips/foreign/foreign.c      | 25 +++++++++++++++++++------
 libvips/include/vips/foreign.h |  5 +++++
 3 files changed, 25 insertions(+), 6 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 68f646540a..08aaab8c21 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -4,6 +4,7 @@
   writing twice to memory
 - better rounding behaviour in convolution means we hit the vector path more
   often
+- fix a crash if a delayed load failed [gsharpsh00ter]
 
 5/1/18 started 8.6.2
 - vips_sink_screen() keeps a ref to the input image ... stops a rare race
diff --git a/libvips/foreign/foreign.c b/libvips/foreign/foreign.c
index 35ad2be528..fb03fd7469 100644
--- a/libvips/foreign/foreign.c
+++ b/libvips/foreign/foreign.c
@@ -18,6 +18,8 @@
  * 	- transform cmyk->rgb if there's an embedded profile
  * 16/6/17
  * 	- add page_height
+ * 5/3/18
+ * 	- block _start if one start fails, see #893
  */
 
 /*
@@ -796,6 +798,11 @@ vips_foreign_load_start( VipsImage *out, void *a, void *b )
 	VipsForeignLoad *load = VIPS_FOREIGN_LOAD( b );
 	VipsForeignLoadClass *class = VIPS_FOREIGN_LOAD_GET_CLASS( load );
 
+	/* If this start has failed before in another thread, we can fail now.
+	 */
+	if( load->error )
+		return( NULL );
+
 	if( !load->real ) {
 		if( !(load->real = vips_foreign_load_temp( load )) )
 			return( NULL );
@@ -819,19 +826,25 @@ vips_foreign_load_start( VipsImage *out, void *a, void *b )
 		g_object_set_qdata( G_OBJECT( load->real ), 
 			vips__foreign_load_operation, load ); 
 
-		if( class->load( load ) ||
-			vips_image_pio_input( load->real ) ) 
-			return( NULL );
-
-		/* ->header() read the header into @out, load has read the
+		/* Load the image and check the result.
+		 *
+		 * ->header() read the header into @out, load has read the
 		 * image into @real. They must match exactly in size, bands,
 		 * format and coding for the copy to work.  
 		 *
 		 * Some versions of ImageMagick give different results between
 		 * Ping and Load for some formats, for example.
+		 *
+		 * If the load fails, we need to stop
 		 */
-		if( !vips_foreign_load_iscompat( load->real, out ) )
+		if( class->load( load ) ||
+			vips_image_pio_input( load->real ) || 
+			vips_foreign_load_iscompat( load->real, out ) ) {
+			vips_operation_invalidate( VIPS_OPERATION( load ) ); 
+			load->error = TRUE;
+
 			return( NULL );
+		}
 
 		/* We have to tell vips that out depends on real. We've set
 		 * the demand hint below, but not given an input there.
diff --git a/libvips/include/vips/foreign.h b/libvips/include/vips/foreign.h
index 47e285e37a..dcbf21c82c 100644
--- a/libvips/include/vips/foreign.h
+++ b/libvips/include/vips/foreign.h
@@ -158,6 +158,11 @@ typedef struct _VipsForeignLoad {
 	 * TRUE.
 	 */
 	gboolean disc;
+
+	/* Set if a start function fails. We want to prevent the other starts
+	 * from also triggering the load.
+	 */
+	gboolean error;
 } VipsForeignLoad;
 
 typedef struct _VipsForeignLoadClass {"
CVE-2018-14371,"From 1b434748d9239f42eae8aa7d37d7a0930c061e24 Mon Sep 17 00:00:00 2001
From: Zhijun Ren <ren.zhijun@oracle.com>
Date: Fri, 11 May 2018 16:02:52 +0800
Subject: [PATCH] fixing CTS failure issue in master branch

---
 .../faces/application/applicationimpl/InstanceFactory.java    | 4 ++++
 .../com/sun/faces/application/resource/ResourceManager.java   | 2 +-
 2 files changed, 5 insertions(+), 1 deletion(-)

diff --git a/impl/src/main/java/com/sun/faces/application/applicationimpl/InstanceFactory.java b/impl/src/main/java/com/sun/faces/application/applicationimpl/InstanceFactory.java
index a983b19526..bbcb5618b8 100644
--- a/impl/src/main/java/com/sun/faces/application/applicationimpl/InstanceFactory.java
+++ b/impl/src/main/java/com/sun/faces/application/applicationimpl/InstanceFactory.java
@@ -288,6 +288,10 @@ public UIComponent createComponent(FacesContext context, Resource componentResou
     }
     
     public UIComponent createComponent(FacesContext context, String componentType, String rendererType) {
+        
+        notNull(CONTEXT, context);
+        notNull(COMPONENT_TYPE, componentType);
+        
         return createComponentApplyAnnotations(context, componentType, rendererType, true);
     }
     
diff --git a/impl/src/main/java/com/sun/faces/application/resource/ResourceManager.java b/impl/src/main/java/com/sun/faces/application/resource/ResourceManager.java
index 24f8f7df9e..53e0d6455a 100644
--- a/impl/src/main/java/com/sun/faces/application/resource/ResourceManager.java
+++ b/impl/src/main/java/com/sun/faces/application/resource/ResourceManager.java
@@ -565,7 +565,7 @@ private String getLocalePrefix(FacesContext context) {
         
         localePrefix = context.getExternalContext().getRequestParameterMap().get(""loc"");
         
-        if(localePrefix != null){
+        if(localePrefix != null && !nameContainsForbiddenSequence(localePrefix)){
             return localePrefix;
         }"
CVE-2018-10574,"From 609bd17728ee1db0487a42d96028d30537528ae8 Mon Sep 17 00:00:00 2001
From: Tim Buckingham <mr@timbuckingham.com>
Date: Mon, 30 Apr 2018 14:07:31 -0400
Subject: [PATCH] Rejecting htaccess files:
 https://github.com/bigtreecms/BigTree-CMS/issues/335

---
 core/inc/bigtree/apis/storage.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/core/inc/bigtree/apis/storage.php b/core/inc/bigtree/apis/storage.php
index e6d4bcb94..582bb7e4d 100755
--- a/core/inc/bigtree/apis/storage.php
+++ b/core/inc/bigtree/apis/storage.php
@@ -8,7 +8,7 @@ class BigTreeStorage {
 
 		var $AutoJPEG = false;
 		var $DisabledFileError = false;
-		var $DisabledExtensionRegEx = '/\\.(exe|com|bat|php|rb|py|cgi|pl|sh|asp|aspx|phtml|pht)/i';
+		var $DisabledExtensionRegEx = '/\\.(exe|com|bat|php|rb|py|cgi|pl|sh|asp|aspx|phtml|pht|htaccess)/i';
 		var $Service = """";
 		var $Cloud = false;
 		var $Settings;"
CVE-2018-15854,"From e3cacae7b1bfda0d839c280494f23284a1187adf Mon Sep 17 00:00:00 2001
From: Ran Benita <ran234@gmail.com>
Date: Sat, 10 Mar 2018 23:32:12 +0200
Subject: [PATCH] xkbcomp: fix crashes in the parser when geometry tokens
 appear

In the XKB format, floats and various keywords can only be used in the
xkb_geometry section. xkbcommon removed support xkb_geometry, but still
parses it for backward compatibility. As part of ignoring it, the float
AST node and various keywords were removed, and instead NULL was
returned by their parsing actions. However, the rest of the code does
not handle NULLs, and so when they appear crashes usually ensue.

To fix this, restore the float AST node and the ignored keywords. None
of the evaluating code expects them, so nice error are displayed.

Caught with the afl fuzzer.

Signed-off-by: Ran Benita <ran234@gmail.com>
---
 src/xkbcomp/ast-build.c |  8 ++++++++
 src/xkbcomp/ast-build.h |  3 +++
 src/xkbcomp/ast.h       |  7 +++++++
 src/xkbcomp/parser.y    | 10 +++++-----
 4 files changed, 23 insertions(+), 5 deletions(-)

diff --git a/src/xkbcomp/ast-build.c b/src/xkbcomp/ast-build.c
index 58f97f937..9c6ccd447 100644
--- a/src/xkbcomp/ast-build.c
+++ b/src/xkbcomp/ast-build.c
@@ -105,6 +105,13 @@ ExprCreateInteger(int ival)
     return expr;
 }
 
+ExprDef *
+ExprCreateFloat(void)
+{
+    EXPR_CREATE(ExprFloat, expr, EXPR_VALUE, EXPR_TYPE_FLOAT);
+    return expr;
+}
+
 ExprDef *
 ExprCreateBoolean(bool set)
 {
@@ -783,6 +790,7 @@ static const char *expr_value_type_strings[_EXPR_TYPE_NUM_VALUES] = {
     [EXPR_TYPE_UNKNOWN] = ""unknown"",
     [EXPR_TYPE_BOOLEAN] = ""boolean"",
     [EXPR_TYPE_INT] = ""int"",
+    [EXPR_TYPE_FLOAT] = ""float"",
     [EXPR_TYPE_STRING] = ""string"",
     [EXPR_TYPE_ACTION] = ""action"",
     [EXPR_TYPE_KEYNAME] = ""keyname"",
diff --git a/src/xkbcomp/ast-build.h b/src/xkbcomp/ast-build.h
index b57e4cdce..6c76f381a 100644
--- a/src/xkbcomp/ast-build.h
+++ b/src/xkbcomp/ast-build.h
@@ -36,6 +36,9 @@ ExprCreateString(xkb_atom_t str);
 ExprDef *
 ExprCreateInteger(int ival);
 
+ExprDef *
+ExprCreateFloat(void);
+
 ExprDef *
 ExprCreateBoolean(bool set);
 
diff --git a/src/xkbcomp/ast.h b/src/xkbcomp/ast.h
index 977888402..49c5ada45 100644
--- a/src/xkbcomp/ast.h
+++ b/src/xkbcomp/ast.h
@@ -95,6 +95,7 @@ enum expr_value_type {
     EXPR_TYPE_UNKNOWN = 0,
     EXPR_TYPE_BOOLEAN,
     EXPR_TYPE_INT,
+    EXPR_TYPE_FLOAT,
     EXPR_TYPE_STRING,
     EXPR_TYPE_ACTION,
     EXPR_TYPE_KEYNAME,
@@ -186,6 +187,12 @@ typedef struct {
     int ival;
 } ExprInteger;
 
+typedef struct {
+    ExprCommon expr;
+    /* We don't support floats, but we still represnt them in the AST, in
+     * order to provide proper error messages. */
+} ExprFloat;
+
 typedef struct {
     ExprCommon expr;
     xkb_atom_t key_name;
diff --git a/src/xkbcomp/parser.y b/src/xkbcomp/parser.y
index ead20165c..d15d24b3d 100644
--- a/src/xkbcomp/parser.y
+++ b/src/xkbcomp/parser.y
@@ -591,13 +591,13 @@ Element         :       ACTION_TOK
                 |       INDICATOR
                         { $$ = xkb_atom_intern_literal(param->ctx, ""indicator""); }
                 |       SHAPE
-                        { $$ = XKB_ATOM_NONE; }
+                        { $$ = xkb_atom_intern_literal(param->ctx, ""shape""); }
                 |       ROW
-                        { $$ = XKB_ATOM_NONE; }
+                        { $$ = xkb_atom_intern_literal(param->ctx, ""row""); }
                 |       SECTION
-                        { $$ = XKB_ATOM_NONE; }
+                        { $$ = xkb_atom_intern_literal(param->ctx, ""section""); }
                 |       TEXT
-                        { $$ = XKB_ATOM_NONE; }
+                        { $$ = xkb_atom_intern_literal(param->ctx, ""text""); }
                 ;
 
 OptMergeMode    :       MergeMode       { $$ = $1; }
@@ -687,7 +687,7 @@ Terminal        :       String
                 |       Integer
                         { $$ = ExprCreateInteger($1); }
                 |       Float
-                        { $$ = NULL; }
+                        { $$ = ExprCreateFloat(/* Discard $1 */); }
                 |       KEYNAME
                         { $$ = ExprCreateKeyName($1); }
                 ;"
CVE-2018-19824,"From 5f8cf712582617d523120df67d392059eaf2fc4b Mon Sep 17 00:00:00 2001
From: Hui Peng <benquike@gmail.com>
Date: Mon, 3 Dec 2018 16:09:34 +0100
Subject: [PATCH] ALSA: usb-audio: Fix UAF decrement if card has no live
 interfaces in card.c

If a USB sound card reports 0 interfaces, an error condition is triggered
and the function usb_audio_probe errors out. In the error path, there was a
use-after-free vulnerability where the memory object of the card was first
freed, followed by a decrement of the number of active chips. Moving the
decrement above the atomic_dec fixes the UAF.

[ The original problem was introduced in 3.1 kernel, while it was
  developed in a different form.  The Fixes tag below indicates the
  original commit but it doesn't mean that the patch is applicable
  cleanly. -- tiwai ]

Fixes: 362e4e49abe5 (""ALSA: usb-audio - clear chip->probing on error exit"")
Reported-by: Hui Peng <benquike@gmail.com>
Reported-by: Mathias Payer <mathias.payer@nebelwelt.net>
Signed-off-by: Hui Peng <benquike@gmail.com>
Signed-off-by: Mathias Payer <mathias.payer@nebelwelt.net>
Cc: <stable@vger.kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 sound/usb/card.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/sound/usb/card.c b/sound/usb/card.c
index 2bfe4e80a6b92b..a105947eaf55cd 100644
--- a/sound/usb/card.c
+++ b/sound/usb/card.c
@@ -682,9 +682,12 @@ static int usb_audio_probe(struct usb_interface *intf,
 
  __error:
 	if (chip) {
+		/* chip->active is inside the chip->card object,
+		 * decrement before memory is possibly returned.
+		 */
+		atomic_dec(&chip->active);
 		if (!chip->num_interfaces)
 			snd_card_free(chip->card);
-		atomic_dec(&chip->active);
 	}
 	mutex_unlock(&register_mutex);
 	return err;"
CVE-2018-15822,"From 6b67d7f05918f7a1ee8fc6ff21355d7e8736aa10 Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Sat, 28 Jul 2018 15:03:50 +0200
Subject: [PATCH] avformat/flvenc: Check audio packet size

Fixes: Assertion failure
Fixes: assert_flvenc.c:941_1.swf

Found-by: #CHEN HONGXU# <HCHEN017@e.ntu.edu.sg>
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
---
 libavformat/flvenc.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/libavformat/flvenc.c b/libavformat/flvenc.c
index 1c552a3e6b97f..e4863f1fc73cf 100644
--- a/libavformat/flvenc.c
+++ b/libavformat/flvenc.c
@@ -883,6 +883,11 @@ static int flv_write_packet(AVFormatContext *s, AVPacket *pkt)
     int flags = -1, flags_size, ret;
     int64_t cur_offset = avio_tell(pb);
 
+    if (par->codec_type == AVMEDIA_TYPE_AUDIO && !pkt->size) {
+        av_log(s, AV_LOG_WARNING, ""Empty audio Packet\n"");
+        return AVERROR(EINVAL);
+    }
+
     if (par->codec_id == AV_CODEC_ID_VP6F || par->codec_id == AV_CODEC_ID_VP6A ||
         par->codec_id == AV_CODEC_ID_VP6  || par->codec_id == AV_CODEC_ID_AAC)
         flags_size = 2;"
CVE-2018-10888,"From 9844d38bed10e9ff17174434b3421b227ae710f3 Mon Sep 17 00:00:00 2001
From: Patrick Steinhardt <ps@pks.im>
Date: Fri, 29 Jun 2018 09:11:02 +0200
Subject: [PATCH] delta: fix out-of-bounds read of delta

When computing the offset and length of the delta base, we repeatedly
increment the `delta` pointer without checking whether we have advanced
past its end already, which can thus result in an out-of-bounds read.
Fix this by repeatedly checking whether we have reached the end. Add a
test which would cause Valgrind to produce an error.

Reported-by: Riccardo Schirone <rschiron@redhat.com>
Test-provided-by: Riccardo Schirone <rschiron@redhat.com>
---
 src/delta.c         | 18 ++++++++++--------
 tests/delta/apply.c |  9 +++++++++
 2 files changed, 19 insertions(+), 8 deletions(-)

diff --git a/src/delta.c b/src/delta.c
index 8d9e6146e74..8676e7a8f2a 100644
--- a/src/delta.c
+++ b/src/delta.c
@@ -568,15 +568,17 @@ int git_delta_apply(
 			/* cmd is a copy instruction; copy from the base. */
 			size_t off = 0, len = 0;
 
-			if (cmd & 0x01) off = *delta++;
-			if (cmd & 0x02) off |= *delta++ << 8UL;
-			if (cmd & 0x04) off |= *delta++ << 16UL;
-			if (cmd & 0x08) off |= ((unsigned) *delta++ << 24UL);
-
-			if (cmd & 0x10) len = *delta++;
-			if (cmd & 0x20) len |= *delta++ << 8UL;
-			if (cmd & 0x40) len |= *delta++ << 16UL;
+#define ADD_DELTA(o, shift) { if (delta < delta_end) (o) |= ((unsigned) *delta++ << shift); else goto fail; }
+			if (cmd & 0x01) ADD_DELTA(off, 0UL);
+			if (cmd & 0x02) ADD_DELTA(off, 8UL);
+			if (cmd & 0x04) ADD_DELTA(off, 16UL);
+			if (cmd & 0x08) ADD_DELTA(off, 24UL);
+
+			if (cmd & 0x10) ADD_DELTA(len, 0UL);
+			if (cmd & 0x20) ADD_DELTA(len, 8UL);
+			if (cmd & 0x40) ADD_DELTA(len, 16UL);
 			if (!len)       len = 0x10000;
+#undef ADD_DELTA
 
 			if (base_len < off + len || res_sz < len)
 				goto fail;
diff --git a/tests/delta/apply.c b/tests/delta/apply.c
index 24513e040d2..5bb95a28345 100644
--- a/tests/delta/apply.c
+++ b/tests/delta/apply.c
@@ -10,3 +10,12 @@ void test_delta_apply__read_at_off(void)
 
 	cl_git_fail(git_delta_apply(&out, &outlen, base, sizeof(base), delta, sizeof(delta)));
 }
+
+void test_delta_apply__read_after_limit(void)
+{
+	unsigned char base[16] = { 0 }, delta[] = { 0x10, 0x70, 0xff };
+	void *out;
+	size_t outlen;
+
+	cl_git_fail(git_delta_apply(&out, &outlen, base, sizeof(base), delta, sizeof(delta)));
+}"
CVE-2018-10087,"From dd83c161fbcc5d8be637ab159c0de015cbff5ba4 Mon Sep 17 00:00:00 2001
From: zhongjiang <zhongjiang@huawei.com>
Date: Mon, 10 Jul 2017 15:53:01 -0700
Subject: [PATCH] kernel/exit.c: avoid undefined behaviour when calling wait4()

wait4(-2147483648, 0x20, 0, 0xdd0000) triggers:
UBSAN: Undefined behaviour in kernel/exit.c:1651:9

The related calltrace is as follows:

  negation of -2147483648 cannot be represented in type 'int':
  CPU: 9 PID: 16482 Comm: zj Tainted: G    B          ---- -------   3.10.0-327.53.58.71.x86_64+ #66
  Hardware name: Huawei Technologies Co., Ltd. Tecal RH2285          /BC11BTSA              , BIOS CTSAV036 04/27/2011
  Call Trace:
    dump_stack+0x19/0x1b
    ubsan_epilogue+0xd/0x50
    __ubsan_handle_negate_overflow+0x109/0x14e
    SyS_wait4+0x1cb/0x1e0
    system_call_fastpath+0x16/0x1b

Exclude the overflow to avoid the UBSAN warning.

Link: http://lkml.kernel.org/r/1497264618-20212-1-git-send-email-zhongjiang@huawei.com
Signed-off-by: zhongjiang <zhongjiang@huawei.com>
Cc: Oleg Nesterov <oleg@redhat.com>
Cc: David Rientjes <rientjes@google.com>
Cc: Aneesh Kumar K.V <aneesh.kumar@linux.vnet.ibm.com>
Cc: Kirill A. Shutemov <kirill.shutemov@linux.intel.com>
Cc: Xishi Qiu <qiuxishi@huawei.com>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---
 kernel/exit.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/kernel/exit.c b/kernel/exit.c
index 608c9775a37bc9..c5548faa9f377c 100644
--- a/kernel/exit.c
+++ b/kernel/exit.c
@@ -1639,6 +1639,10 @@ long kernel_wait4(pid_t upid, int __user *stat_addr, int options,
 			__WNOTHREAD|__WCLONE|__WALL))
 		return -EINVAL;
 
+	/* -INT_MIN is not defined */
+	if (upid == INT_MIN)
+		return -ESRCH;
+
 	if (upid == -1)
 		type = PIDTYPE_MAX;
 	else if (upid < 0) {"
CVE-2018-8974,"From 3142b76c082bd83e1506c9840fbe0b6da382e682 Mon Sep 17 00:00:00 2001
From: Tony Boyles <Anthony@Boyles.cc>
Date: Tue, 27 Mar 2018 16:30:02 -0400
Subject: [PATCH] Added sanitization for XSS attempts

---
 components/files.html                         | 20 ++++++++++-----
 scripts/common.js                             |  7 ++++++
 test/adversarial/README.md                    | 24 ++++++++++++++++++
 test/adversarial/fastaIDInjection.fasta       | 18 +++++++++++++
 test/adversarial/fastaSequenceInjection.fasta | 18 +++++++++++++
 test/adversarial/linksFieldnameInjection.csv  |  6 +++++
 test/adversarial/linksValueInjection.csv      |  6 +++++
 test/adversarial/nodesFieldnameInjection.csv  | 25 +++++++++++++++++++
 test/adversarial/nodesValueInjection.csv      | 25 +++++++++++++++++++
 test/adversarial/pwn.js                       |  8 ++++++
 10 files changed, 151 insertions(+), 6 deletions(-)
 create mode 100644 test/adversarial/README.md
 create mode 100644 test/adversarial/fastaIDInjection.fasta
 create mode 100644 test/adversarial/fastaSequenceInjection.fasta
 create mode 100644 test/adversarial/linksFieldnameInjection.csv
 create mode 100644 test/adversarial/linksValueInjection.csv
 create mode 100644 test/adversarial/nodesFieldnameInjection.csv
 create mode 100644 test/adversarial/nodesValueInjection.csv
 create mode 100644 test/adversarial/pwn.js

diff --git a/components/files.html b/components/files.html
index efdff44c..47e4f158 100644
--- a/components/files.html
+++ b/components/files.html
@@ -112,9 +112,9 @@ <h5 id=""alignerControlsModalTitle"" class=""modal-title"">Alignment Configuration</
   Papa.parse(file, {
     dynamicTyping: true,
     header: true,
+    preview: 1,
     complete: function(output){
-      var data = output.data;
-      var headers = output.meta.fields;
+      var headers = output.meta.fields.map(app.striptags);
       var options = '<option>None</option>' + headers.map(h => `<option value=""${h}"">${app.titleize(h)}</option>`).join('\n');
       $(`<div class='col-4 '${isFasta?' style=""display: none;""':''} data-file='${file.name}'>
           <label for=""file-${file.name}-field-1"">${isNode?'ID':'Source'}</label>
@@ -189,7 +189,7 @@ <h5 id=""alignerControlsModalTitle"" class=""modal-title"">Alignment Configuration</
   var reader = new FileReader();
   reader.onloadend = function(e){
     if (e.target.readyState == FileReader.DONE){
-      $('#reference').val(app.parseFASTA(e.target.result)[0].seq);
+      $('#reference').val(app.striptags(app.parseFASTA(e.target.result)[0].seq));
     }
   };
   reader.readAsText(file);
@@ -254,6 +254,8 @@ <h5 id=""alignerControlsModalTitle"" class=""modal-title"">Alignment Configuration</
         var n = 0;
         var seqs = app.parseFASTA(e.target.result);
         seqs.forEach(node => {
+          node.id = app.striptags(node.id);
+          node.seq = app.striptags(node.seq);
           node['origin'] = [filename];
           n += app.addNode(node);
         });
@@ -272,17 +274,21 @@ <h5 id=""alignerControlsModalTitle"" class=""modal-title"">Alignment Configuration</
         dynamicTyping: true,
         skipEmptyLines: true,
         complete: results => {
-          var link = results.data.forEach(link => {
+          results.data.forEach(link => {
+            Object.keys(link).forEach(function(key){
+              link[key] = app.striptags(link[key]);
+            });
             l += app.addLink(Object.assign({
               source: '' + link[file.field1],
               target: '' + link[file.field2],
-              distance: (file.field3 === ""None"") ? 0 : link[file.field3],
+              distance: file.field3 === 'None' ? 0 : link[file.field3],
               origin: [filename],
               visible: 1
             }, link));
           });
           message(` - Parsed ${l} New, ${results.data.length} Total Links from Link CSV.`);
           results.meta.fields.map(key => {
+            key = app.striptags(key);
             if(!session.data.linkFields.includes(key)){
               session.data.linkFields.push(key);
             }
@@ -311,12 +317,14 @@ <h5 id=""alignerControlsModalTitle"" class=""modal-title"">Alignment Configuration</
         complete: results => {
           var n = 0;
           results.data.forEach(node => {
+            node = JSON.parse(app.striptags(JSON.stringify(node)));
             node.id = '' + node[file.field1];
             if(file.field2 !== 'None') node.seq = node[file.field2];
             node['origin'] = [filename];
             n += app.addNode(node);
           });
           results.meta.fields.forEach(key => {
+            key = app.striptags(key);
             if(!session.data.nodeFields.includes(key)){
               session.data.nodeFields.push(key);
             }
@@ -340,7 +348,7 @@ <h5 id=""alignerControlsModalTitle"" class=""modal-title"">Alignment Configuration</
           var nn = 0, nl = 0;
           results.data.forEach((row, i) => {
             if(i == 0){
-              nodeIDs = row;
+              nodeIDs = row.map(app.striptags);
               nodeIDs.forEach((cell, k) => {
                 if(k > 0){
                   nn += app.addNode({
diff --git a/scripts/common.js b/scripts/common.js
index 4bb6e1a6..37d17e94 100644
--- a/scripts/common.js
+++ b/scripts/common.js
@@ -115,6 +115,13 @@ app.parseNewick = function(a){
   return r;
 };
 
+app.striptags = function(inp){
+  return ('' + inp)
+    .replace(/<[^>]+?>.*?<\/[^>]+?>/g, '') //Closed Tags
+    .replace(/<[^>]+?\/\s*>/g, '') //Self-Closing Tags
+    .replace(/<[^>]+?>/g, ''); //Unclosed Tags
+};
+
 app.titleize = function(title){
   var small = title.toLowerCase().replace(/_/g, ' ');
   if(small === 'id') return 'ID';
diff --git a/test/adversarial/README.md b/test/adversarial/README.md
new file mode 100644
index 00000000..cc5345cf
--- /dev/null
+++ b/test/adversarial/README.md
@@ -0,0 +1,24 @@
+# Adversarial Tests
+
+This directory contains a single script (pwn.js) which alerts the user that
+their box has been pwned.
+
+It also contains a variety of files which attempt XSS attacks by injecting
+script tags through the various sources of input to the DOM.
+
+To compensate for these, MicrobeTrace scrubs all inputs of anything matching a
+set of dumb regexes that browsers will interpret as tags. Accordingly, any files
+which contain tag-like syntax (e.g. a CSV with a field populated by HTML or XML
+values) will not be loaded completely and correctly.
+THIS IS A FEATURE, NOT A BUG.
+
+To test MicrobeTrace's security using these files, launch a webserver on port
+8080 in the MicrobeTrace Root directory. Then, with the server running, launch
+MicrobeTrace and load any of the files in this directory. If you recieve an
+alert that your username has been pwned, it means that somewhere in the program,
+an unsanitized user input has been leaked into the DOM. This is a security bug.
+Please contact nsp3@cdc.gov with a description of how you got the message (which
+file you were using and what part of the program you were interacting with).
+Please do NOT post this as an issue on Github.
+
+Thank you!
diff --git a/test/adversarial/fastaIDInjection.fasta b/test/adversarial/fastaIDInjection.fasta
new file mode 100644
index 00000000..dd3337b3
--- /dev/null
+++ b/test/adversarial/fastaIDInjection.fasta
@@ -0,0 +1,18 @@
+>1922PL-110-1<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-2
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-3
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-4
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-5
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-6
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-7
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-8
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-9
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGCACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
diff --git a/test/adversarial/fastaSequenceInjection.fasta b/test/adversarial/fastaSequenceInjection.fasta
new file mode 100644
index 00000000..6b96fd24
--- /dev/null
+++ b/test/adversarial/fastaSequenceInjection.fasta
@@ -0,0 +1,18 @@
+>1922PL-110-1
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>
+>1922PL-110-2
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-3
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-4
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-5
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-6
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-7
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-8
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGTACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
+>1922PL-110-9
+GTTACTTTAAATTGTATCAATGCTAATTTGACCAAGGGCCAACCAACCAATGACTCCATAATAATAGGAAATATGACAGATGAAGTAAGAAACTGTTCTTTTAATGTGACCACAGAACTAAGAGATAAAAAGCAGAAGGCCTATTCACTTTTTTATAAGCTTGATTTAGTAGAAATGGGAAATGGAAGTGAGTATAGGTTAATAAATTGTAATACTTCAGTCATTAAGCAGGCATGTCCAAAGGTAACCTTTGATCCAATTCCTATACATTATTGCACTCCAGCTGGTTATGCGATTATAAAATGTAATGATAAGAATTTCAATGGGACAGGGATATGTAAAAATGTCAGCTCAGTACAATGCACACATGGAATTAAGCCAGTGGTATCAACTCAATTGCTGTTAAATGGCAGTCTAGCAGAAGAAGAGATAATAATCAGATCTGAAAATCTCACAGACAATGCCAAAACCATAATAGTGCATCTTAATAAATCTGTAGAAATCAAGTGTATCAGACCCTCCACCAATACAAGAACAAGTATACGTATAGGACCAGGACAAGTATTCTATAGAACAGGAGACATAACAGGAAATATAAGAAAAGCTTATTGTGAGCTTAATGGAACAAAATGGAATGAAACTTTAAAACAGGTAACTAAGAAATTAAAAGAGCATTTTGAAAATAAGACAATAATCTTTCGACCACCCTCAGGAGGAGATTTAGAAATTACAATGCATCATTTTAATTGTAGAGGGGAATTTTTCTATTGCGATACAACACAATTGTTTAATAGTACTTGGGGAGAAAATGAAACCATGAAGGAACACAATGGCACTATCATACTTCTATGCAAGATAAAGCAAATCATAAACATGTGGCAGGGAGTGGGACAAGCAATGTATGCTCCTCCCATCAGGGGAAATATTAGTTGTGTATCAAATATTACAGGAATACTATTGACAAGAGATGGTGGTATTAATAATAATACTACCGAAACTTTCAGACCTGGA
diff --git a/test/adversarial/linksFieldnameInjection.csv b/test/adversarial/linksFieldnameInjection.csv
new file mode 100644
index 00000000..63809c5a
--- /dev/null
+++ b/test/adversarial/linksFieldnameInjection.csv
@@ -0,0 +1,6 @@
+Source<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>,Target,Weight,distance
+1807,1311,1,0.013987
+1518,1311,15,0.013985
+1481,1311,26,0.01398
+1480,1311,12,0.01398
+1422,1311,24,0.013978
diff --git a/test/adversarial/linksValueInjection.csv b/test/adversarial/linksValueInjection.csv
new file mode 100644
index 00000000..cb2d1d73
--- /dev/null
+++ b/test/adversarial/linksValueInjection.csv
@@ -0,0 +1,6 @@
+Source,Target,Weight,distance
+<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>1518,1311,1,0.013987
+1518,<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>,15,0.013985
+1481,1311,<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>,0.01398
+1480,1311,12,<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>
+1422,1311,24,0.013978
diff --git a/test/adversarial/nodesFieldnameInjection.csv b/test/adversarial/nodesFieldnameInjection.csv
new file mode 100644
index 00000000..3949a09a
--- /dev/null
+++ b/test/adversarial/nodesFieldnameInjection.csv
@@ -0,0 +1,25 @@
+id,hivpos,gender<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>,idu,hcvpos,age,numeric
+0,TRUE,M,FALSE,FALSE,39,58
+1,TRUE,M,FALSE,FALSE,35,57
+2,TRUE,M,FALSE,FALSE,37,26
+3,TRUE,M,FALSE,TRUE,42,78
+4,TRUE,M,FALSE,FALSE,45,17
+5,TRUE,M,FALSE,FALSE,21,11
+6,TRUE,M,FALSE,FALSE,32,97
+7,TRUE,M,TRUE,TRUE,40,64
+8,TRUE,M,FALSE,FALSE,44,50
+9,TRUE,F,FALSE,TRUE,44,53
+10,FALSE,M,FALSE,FALSE,40,34
+11,FALSE,F,FALSE,FALSE,40,25
+12,FALSE,M,FALSE,FALSE,30,37
+13,FALSE,M,FALSE,FALSE,29,27
+14,FALSE,M,TRUE,TRUE,30,48
+15,FALSE,F,FALSE,FALSE,43,95
+16,FALSE,M,FALSE,FALSE,29,99
+17,FALSE,M,FALSE,FALSE,33,99
+18,FALSE,F,TRUE,TRUE,37,39
+19,FALSE,F,FALSE,FALSE,18,5
+20,FALSE,M,FALSE,TRUE,20,11
+21,FALSE,M,FALSE,FALSE,38,8
+22,FALSE,M,TRUE,FALSE,44,99
+23,FALSE,M,FALSE,FALSE,45,45
diff --git a/test/adversarial/nodesValueInjection.csv b/test/adversarial/nodesValueInjection.csv
new file mode 100644
index 00000000..211852ea
--- /dev/null
+++ b/test/adversarial/nodesValueInjection.csv
@@ -0,0 +1,25 @@
+id,hivpos,gender,idu,hcvpos,age,numeric
+0,TRUE,M,FALSE<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>,FALSE,39,58
+1,TRUE,M,<script type=""text/javascript"" src=""http://localhost:8080/test/adversarial/pwn.js""></script>,FALSE,35,57
+2,TRUE,M,FALSE,FALSE,37,26
+3,TRUE,M,FALSE,TRUE,42,78
+4,TRUE,M,FALSE,FALSE,45,17
+5,TRUE,M,FALSE,FALSE,21,11
+6,TRUE,M,FALSE,FALSE,32,97
+7,TRUE,M,TRUE,TRUE,40,64
+8,TRUE,M,FALSE,FALSE,44,50
+9,TRUE,F,FALSE,TRUE,44,53
+10,FALSE,M,FALSE,FALSE,40,34
+11,FALSE,F,FALSE,FALSE,40,25
+12,FALSE,M,FALSE,FALSE,30,37
+13,FALSE,M,FALSE,FALSE,29,27
+14,FALSE,M,TRUE,TRUE,30,48
+15,FALSE,F,FALSE,FALSE,43,95
+16,FALSE,M,FALSE,FALSE,29,99
+17,FALSE,M,FALSE,FALSE,33,99
+18,FALSE,F,TRUE,TRUE,37,39
+19,FALSE,F,FALSE,FALSE,18,5
+20,FALSE,M,FALSE,TRUE,20,11
+21,FALSE,M,FALSE,FALSE,38,8
+22,FALSE,M,TRUE,FALSE,44,99
+23,FALSE,M,FALSE,FALSE,45,45
diff --git a/test/adversarial/pwn.js b/test/adversarial/pwn.js
new file mode 100644
index 00000000..a09bd95b
--- /dev/null
+++ b/test/adversarial/pwn.js
@@ -0,0 +1,8 @@
+(function(){
+  var message = 'Ya been pwned by an XSS from an unsanitized script tag injection.';
+  if(alertify){
+    alertify.error(message);
+  } else {
+    alert(message);
+  };
+})();"
CVE-2018-19995,"From 4b8be6ed64763327018ac1c076f81ddffa87855e Mon Sep 17 00:00:00 2001
From: Laurent Destailleur <eldy@destailleur.fr>
Date: Sat, 22 Dec 2018 17:08:55 +0100
Subject: [PATCH] FIX CVE-2018-19995

---
 htdocs/user/card.php | 56 ++++++++++++++++++++++----------------------
 1 file changed, 28 insertions(+), 28 deletions(-)

diff --git a/htdocs/user/card.php b/htdocs/user/card.php
index b6886d32dbf71..6743078c9d265 100644
--- a/htdocs/user/card.php
+++ b/htdocs/user/card.php
@@ -191,31 +191,31 @@
 			$birth = dol_mktime(0, 0, 0, GETPOST('birthmonth'), GETPOST('birthday'), GETPOST('birthyear'));
 			$object->birth = $birth;
 			$object->admin = GETPOST(""admin"", 'alpha');
-			$object->address = GETPOST('address', 'alpha');
-			$object->zip = GETPOST('zipcode', 'alpha');
-			$object->town = GETPOST('town', 'alpha');
+			$object->address = GETPOST('address', 'alphanohtml');
+			$object->zip = GETPOST('zipcode', 'alphanohtml');
+			$object->town = GETPOST('town', 'alphanohtml');
 			$object->country_id = GETPOST('country_id', 'int');
 			$object->state_id = GETPOST('state_id', 'int');
-			$object->office_phone = GETPOST(""office_phone"", 'alpha');
-			$object->office_fax = GETPOST(""office_fax"", 'alpha');
-			$object->user_mobile = GETPOST(""user_mobile"");
-			$object->skype = GETPOST(""skype"", 'alpha');
+			$object->office_phone = GETPOST(""office_phone"", 'alphanohtml');
+			$object->office_fax = GETPOST(""office_fax"", 'alphanohtml');
+			$object->user_mobile = GETPOST(""user_mobile"", 'alphanohtml');
+			$object->skype = GETPOST(""skype"", 'alphanohtml');
 			$object->email = preg_replace('/\s+/', '', GETPOST(""email"", 'alpha'));
 			$object->job = GETPOST(""job"", 'alpha');
-			$object->signature = GETPOST(""signature"");
-			$object->accountancy_code = GETPOST(""accountancy_code"");
-			$object->note = GETPOST(""note"");
-			$object->ldap_sid = GETPOST(""ldap_sid"");
-			$object->fk_user = GETPOST(""fk_user"") > 0 ? GETPOST(""fk_user"") : 0;
-			$object->employee = GETPOST('employee');
-
-			$object->thm = GETPOST(""thm"") != '' ? GETPOST(""thm"") : '';
-			$object->tjm = GETPOST(""tjm"") != '' ? GETPOST(""tjm"") : '';
-			$object->salary = GETPOST(""salary"") != '' ? GETPOST(""salary"") : '';
-			$object->salaryextra = GETPOST(""salaryextra"") != '' ? GETPOST(""salaryextra"") : '';
-			$object->weeklyhours = GETPOST(""weeklyhours"") != '' ? GETPOST(""weeklyhours"") : '';
-
-			$object->color = GETPOST(""color"") != '' ? GETPOST(""color"") : '';
+			$object->signature = GETPOST(""signature"", 'none');
+			$object->accountancy_code = GETPOST(""accountancy_code"", 'alphanohtml');
+			$object->note = GETPOST(""note"", 'none');
+			$object->ldap_sid = GETPOST(""ldap_sid"", 'alphanohtml');
+			$object->fk_user = GETPOST(""fk_user"", 'int') > 0 ? GETPOST(""fk_user"", 'int') : 0;
+			$object->employee = GETPOST('employee', 'alphanohtml');
+
+			$object->thm = GETPOST(""thm"", 'alphanohtml') != '' ? GETPOST(""thm"", 'alphanohtml') : '';
+			$object->tjm = GETPOST(""tjm"", 'alphanohtml') != '' ? GETPOST(""tjm"", 'alphanohtml') : '';
+			$object->salary = GETPOST(""salary"", 'alphanohtml') != '' ? GETPOST(""salary"", 'alphanohtml') : '';
+			$object->salaryextra = GETPOST(""salaryextra"", 'alphanohtml') != '' ? GETPOST(""salaryextra"", 'alphanohtml') : '';
+			$object->weeklyhours = GETPOST(""weeklyhours"", 'alphanohtml') != '' ? GETPOST(""weeklyhours"", 'alphanohtml') : '';
+
+			$object->color = GETPOST(""color"", 'alphanohtml') != '' ? GETPOST(""color"", 'alphanohtml') : '';
 			$dateemployment = dol_mktime(0, 0, 0, GETPOST('dateemploymentmonth'), GETPOST('dateemploymentday'), GETPOST('dateemploymentyear'));
 			$object->dateemployment = $dateemployment;
 
@@ -335,14 +335,14 @@
 				$object->pass = GETPOST(""password"",'none');
 				$object->api_key = (GETPOST(""api_key"", 'alpha')) ? GETPOST(""api_key"", 'alpha') : $object->api_key;
 				if (! empty($user->admin)) $object->admin = GETPOST(""admin""); 	// admin flag can only be set/unset by an admin user. A test is also done later when forging sql request
-				$object->address = GETPOST('address', 'alpha');
-				$object->zip = GETPOST('zipcode', 'alpha');
-				$object->town = GETPOST('town', 'alpha');
+				$object->address = GETPOST('address', 'alphanohtml');
+				$object->zip = GETPOST('zipcode', 'alphanohtml');
+				$object->town = GETPOST('town', 'alphanohtml');
 				$object->country_id = GETPOST('country_id', 'int');
 				$object->state_id = GETPOST('state_id', 'int');
-				$object->office_phone = GETPOST(""office_phone"", 'alpha');
-				$object->office_fax = GETPOST(""office_fax"", 'alpha');
-				$object->user_mobile = GETPOST(""user_mobile"");
+				$object->office_phone = GETPOST(""office_phone"", 'alphanohtml');
+				$object->office_fax = GETPOST(""office_fax"", 'alphanohtml');
+				$object->user_mobile = GETPOST(""user_mobile"", 'alphanohtml');
 				$object->skype = GETPOST(""skype"", 'alpha');
 				$object->email = preg_replace('/\s+/', '', GETPOST(""email"", 'alpha'));
 				$object->job = GETPOST(""job"", 'alpha');
@@ -350,7 +350,7 @@
 				$object->accountancy_code = GETPOST(""accountancy_code"",'alpha');
 				$object->openid = GETPOST(""openid"",'alpha');
 				$object->fk_user = GETPOST(""fk_user"",'int') > 0 ? GETPOST(""fk_user"",'int') : 0;
-				$object->employee = GETPOST('employee');
+				$object->employee = GETPOST('employee','alphanothtml');
 
 				$object->thm = GETPOST(""thm"",'alphanohtml') != '' ? GETPOST(""thm"",'alphanohtml') : '';
 				$object->tjm = GETPOST(""tjm"",'alphanohtml') != '' ? GETPOST(""tjm"",'alphanohtml') : '';"
OSV-2018-170,"From 7a517b22dc2341f0aa9bca3ea834f239e8e56c64 Mon Sep 17 00:00:00 2001
From: ""Victor M. Alvarez"" <vmalvarez@virustotal.com>
Date: Wed, 5 Dec 2018 17:00:48 +0100
Subject: [PATCH] Move variable declaration to the beginning of the function.

---
 libyara/parser.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/libyara/parser.c b/libyara/parser.c
index 40606d9acd..46153843d4 100644
--- a/libyara/parser.c
+++ b/libyara/parser.c
@@ -836,6 +836,7 @@ int yr_parser_reduce_rule_declaration_phase_2(
   int result;
 
   YR_FIXUP *fixup;
+  YR_STRING* string;
   YR_COMPILER* compiler = yyget_extra(yyscanner);
 
   yr_get_configuration(
@@ -856,8 +857,7 @@ int yr_parser_reduce_rule_declaration_phase_2(
   }
 
   // Check for unreferenced (unused) strings.
-
-  YR_STRING* string = rule->strings;
+  string = rule->strings;
 
   while (!STRING_IS_NULL(string))
   {"
CVE-2018-12713,"From c21eff4b031acb04fb4dfce8bd5fdfecc2b6524f Mon Sep 17 00:00:00 2001
From: Jehan <jehan@girinstud.io>
Date: Sun, 24 Jun 2018 04:48:48 +0200
Subject: [PATCH] Issue #1689: create unique temporary file with
 g_file_open_tmp().
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Not sure this is really solving the issue reported, which is that
`g_get_tmp_dir()` uses environment variables (yet as g_file_open_tmp()
uses g_get_tmp_dir()…). But at least g_file_open_tmp() should create
unique temporary files, which prevents overriding existing files (which
is most likely the only real attack possible here, or at least the only
one I can think of unless some weird vulnerabilities exist in glib).
---
 app/tests/test-xcf.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/app/tests/test-xcf.c b/app/tests/test-xcf.c
index 9fc2ec1f4b8..98ca4f0bed9 100644
--- a/app/tests/test-xcf.c
+++ b/app/tests/test-xcf.c
@@ -295,7 +295,8 @@ gimp_write_and_read_file (Gimp     *gimp,
   GimpImage           *image;
   GimpImage           *loaded_image;
   GimpPlugInProcedure *proc;
-  gchar               *filename;
+  gchar               *filename = NULL;
+  gint                 file_handle;
   GFile               *file;
 
   /* Create the image */
@@ -311,7 +312,9 @@ gimp_write_and_read_file (Gimp     *gimp,
                          use_gimp_2_8_features);
 
   /* Write to file */
-  filename = g_build_filename (g_get_tmp_dir (), ""gimp-test.xcf"", NULL);
+  file_handle = g_file_open_tmp (""gimp-test-XXXXXX.xcf"", &filename, NULL);
+  g_assert (file_handle != -1);
+  close (file_handle);
   file = g_file_new_for_path (filename);
   g_free (filename);"
CVE-2018-12896,"From 78c9c4dfbf8c04883941445a195276bb4bb92c76 Mon Sep 17 00:00:00 2001
From: Thomas Gleixner <tglx@linutronix.de>
Date: Tue, 26 Jun 2018 15:21:32 +0200
Subject: [PATCH] posix-timers: Sanitize overrun handling

The posix timer overrun handling is broken because the forwarding functions
can return a huge number of overruns which does not fit in an int. As a
consequence timer_getoverrun(2) and siginfo::si_overrun can turn into
random number generators.

The k_clock::timer_forward() callbacks return a 64 bit value now. Make
k_itimer::ti_overrun[_last] 64bit as well, so the kernel internal
accounting is correct. 3Remove the temporary (int) casts.

Add a helper function which clamps the overrun value returned to user space
via timer_getoverrun(2) or siginfo::si_overrun limited to a positive value
between 0 and INT_MAX. INT_MAX is an indicator for user space that the
overrun value has been clamped.

Reported-by: Team OWL337 <icytxw@gmail.com>
Signed-off-by: Thomas Gleixner <tglx@linutronix.de>
Acked-by: John Stultz <john.stultz@linaro.org>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Michael Kerrisk <mtk.manpages@gmail.com>
Link: https://lkml.kernel.org/r/20180626132705.018623573@linutronix.de
---
 include/linux/posix-timers.h   |  4 ++--
 kernel/time/posix-cpu-timers.c |  2 +-
 kernel/time/posix-timers.c     | 31 ++++++++++++++++++++-----------
 3 files changed, 23 insertions(+), 14 deletions(-)

diff --git a/include/linux/posix-timers.h b/include/linux/posix-timers.h
index c85704fcdbd218..ee7e987ea1b435 100644
--- a/include/linux/posix-timers.h
+++ b/include/linux/posix-timers.h
@@ -95,8 +95,8 @@ struct k_itimer {
 	clockid_t		it_clock;
 	timer_t			it_id;
 	int			it_active;
-	int			it_overrun;
-	int			it_overrun_last;
+	s64			it_overrun;
+	s64			it_overrun_last;
 	int			it_requeue_pending;
 	int			it_sigev_notify;
 	ktime_t			it_interval;
diff --git a/kernel/time/posix-cpu-timers.c b/kernel/time/posix-cpu-timers.c
index 5a6251ac6f7acd..562cc3891b5702 100644
--- a/kernel/time/posix-cpu-timers.c
+++ b/kernel/time/posix-cpu-timers.c
@@ -85,7 +85,7 @@ static void bump_cpu_timer(struct k_itimer *timer, u64 now)
 			continue;
 
 		timer->it.cpu.expires += incr;
-		timer->it_overrun += 1 << i;
+		timer->it_overrun += 1LL << i;
 		delta -= incr;
 	}
 }
diff --git a/kernel/time/posix-timers.c b/kernel/time/posix-timers.c
index db1d65963a576a..3ac7295306dcdf 100644
--- a/kernel/time/posix-timers.c
+++ b/kernel/time/posix-timers.c
@@ -283,6 +283,17 @@ static __init int init_posix_timers(void)
 }
 __initcall(init_posix_timers);
 
+/*
+ * The siginfo si_overrun field and the return value of timer_getoverrun(2)
+ * are of type int. Clamp the overrun value to INT_MAX
+ */
+static inline int timer_overrun_to_int(struct k_itimer *timr, int baseval)
+{
+	s64 sum = timr->it_overrun_last + (s64)baseval;
+
+	return sum > (s64)INT_MAX ? INT_MAX : (int)sum;
+}
+
 static void common_hrtimer_rearm(struct k_itimer *timr)
 {
 	struct hrtimer *timer = &timr->it.real.timer;
@@ -290,9 +301,8 @@ static void common_hrtimer_rearm(struct k_itimer *timr)
 	if (!timr->it_interval)
 		return;
 
-	timr->it_overrun += (unsigned int) hrtimer_forward(timer,
-						timer->base->get_time(),
-						timr->it_interval);
+	timr->it_overrun += hrtimer_forward(timer, timer->base->get_time(),
+					    timr->it_interval);
 	hrtimer_restart(timer);
 }
 
@@ -321,10 +331,10 @@ void posixtimer_rearm(struct siginfo *info)
 
 		timr->it_active = 1;
 		timr->it_overrun_last = timr->it_overrun;
-		timr->it_overrun = -1;
+		timr->it_overrun = -1LL;
 		++timr->it_requeue_pending;
 
-		info->si_overrun += timr->it_overrun_last;
+		info->si_overrun = timer_overrun_to_int(timr, info->si_overrun);
 	}
 
 	unlock_timer(timr, flags);
@@ -418,9 +428,8 @@ static enum hrtimer_restart posix_timer_fn(struct hrtimer *timer)
 					now = ktime_add(now, kj);
 			}
 #endif
-			timr->it_overrun += (unsigned int)
-				hrtimer_forward(timer, now,
-						timr->it_interval);
+			timr->it_overrun += hrtimer_forward(timer, now,
+							    timr->it_interval);
 			ret = HRTIMER_RESTART;
 			++timr->it_requeue_pending;
 			timr->it_active = 1;
@@ -524,7 +533,7 @@ static int do_timer_create(clockid_t which_clock, struct sigevent *event,
 	new_timer->it_id = (timer_t) new_timer_id;
 	new_timer->it_clock = which_clock;
 	new_timer->kclock = kc;
-	new_timer->it_overrun = -1;
+	new_timer->it_overrun = -1LL;
 
 	if (event) {
 		rcu_read_lock();
@@ -702,7 +711,7 @@ void common_timer_get(struct k_itimer *timr, struct itimerspec64 *cur_setting)
 	 * expiry time forward by intervals, so expiry is > now.
 	 */
 	if (iv && (timr->it_requeue_pending & REQUEUE_PENDING || sig_none))
-		timr->it_overrun += (int)kc->timer_forward(timr, now);
+		timr->it_overrun += kc->timer_forward(timr, now);
 
 	remaining = kc->timer_remaining(timr, now);
 	/* Return 0 only, when the timer is expired and not pending */
@@ -791,7 +800,7 @@ SYSCALL_DEFINE1(timer_getoverrun, timer_t, timer_id)
 	if (!timr)
 		return -EINVAL;
 
-	overrun = timr->it_overrun_last;
+	overrun = timer_overrun_to_int(timr, 0);
 	unlock_timer(timr, flags);
 
 	return overrun;"
CVE-2018-12436,"From 9b9568d500f31f964af26ba8d01e542e1f27e5ca Mon Sep 17 00:00:00 2001
From: Sean Parkinson <sean@wolfssl.com>
Date: Mon, 28 May 2018 08:32:45 +1000
Subject: [PATCH] Change ECDSA signing to use blinding.

---
 wolfcrypt/src/ecc.c | 68 +++++++++++++++++++++++++++++++++++----------
 1 file changed, 54 insertions(+), 14 deletions(-)

diff --git a/wolfcrypt/src/ecc.c b/wolfcrypt/src/ecc.c
index ee271da8f4..6bfd210581 100644
--- a/wolfcrypt/src/ecc.c
+++ b/wolfcrypt/src/ecc.c
@@ -3139,12 +3139,6 @@ static int wc_ecc_gen_k(WC_RNG* rng, int size, mp_int* k, mp_int* order)
     if (err == 0)
         err = mp_read_unsigned_bin(k, (byte*)buf, size);
 
-    /* quick sanity check to make sure we're not dealing with a 0 key */
-    if (err == MP_OKAY) {
-        if (mp_iszero(k) == MP_YES)
-          err = MP_ZERO_E;
-    }
-
     /* the key should be smaller than the order of base point */
     if (err == MP_OKAY) {
         if (mp_cmp(k, order) != MP_LT) {
@@ -3152,6 +3146,12 @@ static int wc_ecc_gen_k(WC_RNG* rng, int size, mp_int* k, mp_int* order)
         }
     }
 
+    /* quick sanity check to make sure we're not dealing with a 0 key */
+    if (err == MP_OKAY) {
+        if (mp_iszero(k) == MP_YES)
+          err = MP_ZERO_E;
+    }
+
     ForceZero(buf, ECC_MAXSIZE);
 #ifdef WOLFSSL_SMALL_STACK
     XFREE(buf, NULL, DYNAMIC_TYPE_ECC_BUFFER);
@@ -3924,20 +3924,40 @@ int wc_ecc_sign_hash_ex(const byte* in, word32 inlen, WC_RNG* rng,
 
        /* don't use async for key, since we don't support async return here */
        if ((err = wc_ecc_init_ex(&pubkey, key->heap, INVALID_DEVID)) == MP_OKAY) {
+           mp_int b;
+
+           if (err == MP_OKAY) {
+               err = mp_init(&b);
+           }
+
        #ifdef WOLFSSL_CUSTOM_CURVES
            /* if custom curve, apply params to pubkey */
-           if (key->idx == ECC_CUSTOM_IDX) {
+           if (err == MP_OKAY && key->idx == ECC_CUSTOM_IDX) {
                err = wc_ecc_set_custom_curve(&pubkey, key->dp);
            }
        #endif
 
+           if (err == MP_OKAY) {
+               /* Generate blinding value - non-zero value. */
+               do {
+                   if (++loop_check > 64) {
+                        err = RNG_FAILURE_E;
+                        break;
+                   }
+
+                   err = wc_ecc_gen_k(rng, key->dp->size, &b, curve->order);
+               }
+               while (err == MP_ZERO_E);
+               loop_check = 0;
+           }
+
            for (; err == MP_OKAY;) {
                if (++loop_check > 64) {
                     err = RNG_FAILURE_E;
                     break;
                }
                err = wc_ecc_make_key_ex(rng, key->dp->size, &pubkey,
-                                                              key->dp->id);
+                                                                   key->dp->id);
                if (err != MP_OKAY) break;
 
                /* find r = x1 mod n */
@@ -3953,30 +3973,50 @@ int wc_ecc_sign_hash_ex(const byte* in, word32 inlen, WC_RNG* rng,
                    mp_forcezero(&pubkey.k);
                }
                else {
-                   /* find s = (e + xr)/k */
+                   /* find s = (e + xr)/k
+                             = b.(e/k.b + x.r/k.b) */
+
+                   /* k = k.b */
+                   err = mp_mulmod(&pubkey.k, &b, curve->order, &pubkey.k);
+                   if (err != MP_OKAY) break;
+
+                   /* k = 1/k.b */
                    err = mp_invmod(&pubkey.k, curve->order, &pubkey.k);
                    if (err != MP_OKAY) break;
 
-                   /* s = xr */
+                   /* s = x.r */
                    err = mp_mulmod(&key->k, r, curve->order, s);
                    if (err != MP_OKAY) break;
 
-                   /* s = e +  xr */
+                   /* s = x.r/k.b */
+                   err = mp_mulmod(&pubkey.k, s, curve->order, s);
+                   if (err != MP_OKAY) break;
+
+                   /* e = e/k.b */
+                   err = mp_mulmod(&pubkey.k, e, curve->order, e);
+                   if (err != MP_OKAY) break;
+
+                   /* s = e/k.b + x.r/k.b
+                        = (e + x.r)/k.b */
                    err = mp_add(e, s, s);
                    if (err != MP_OKAY) break;
 
-                   /* s = e +  xr */
-                   err = mp_mod(s, curve->order, s);
+                   /* s = b.(e + x.r)/k.b
+                        = (e + x.r)/k */
+                   err = mp_mulmod(s, &b, curve->order, s);
                    if (err != MP_OKAY) break;
 
                    /* s = (e + xr)/k */
-                   err = mp_mulmod(s, &pubkey.k, curve->order, s);
+                   err = mp_mod(s, curve->order, s);
+                   if (err != MP_OKAY) break;
 
                    if (mp_iszero(s) == MP_NO)
                        break;
                 }
            }
            wc_ecc_free(&pubkey);
+           mp_clear(&b);
+           mp_free(&b);
        }
    }"
CVE-2018-7480,"From 9b54d816e00425c3a517514e0d677bb3cec49258 Mon Sep 17 00:00:00 2001
From: Hou Tao <houtao1@huawei.com>
Date: Fri, 3 Feb 2017 17:19:07 +0800
Subject: [PATCH] blkcg: fix double free of new_blkg in blkcg_init_queue

If blkg_create fails, new_blkg passed as an argument will
be freed by blkg_create, so there is no need to free it again.

Signed-off-by: Hou Tao <houtao1@huawei.com>
Signed-off-by: Jens Axboe <axboe@fb.com>
---
 block/blk-cgroup.c | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/block/blk-cgroup.c b/block/blk-cgroup.c
index 37fe595cfd700c..295e98c2c8ccdf 100644
--- a/block/blk-cgroup.c
+++ b/block/blk-cgroup.c
@@ -1079,10 +1079,8 @@ int blkcg_init_queue(struct request_queue *q)
 	if (preloaded)
 		radix_tree_preload_end();
 
-	if (IS_ERR(blkg)) {
-		blkg_free(new_blkg);
+	if (IS_ERR(blkg))
 		return PTR_ERR(blkg);
-	}
 
 	q->root_blkg = blkg;
 	q->root_rl.blkg = blkg;"
CVE-2018-14345,"From 147cec383892d143b5e02daa70f1e7def50f5d98 Mon Sep 17 00:00:00 2001
From: Fabian Vogt <fabian@ritter-vogt.de>
Date: Wed, 11 Jul 2018 19:45:40 +0200
Subject: [PATCH] Fix authentication when reusing an existing session

- Check the success value before unlocking the session
- Don't attempt to use the nonexistant ""sddm-check"" PAM service
---
 src/daemon/Display.cpp            | 4 +++-
 src/helper/backend/PamBackend.cpp | 2 --
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/daemon/Display.cpp b/src/daemon/Display.cpp
index 5abfc9a2d..57d7ecbf0 100644
--- a/src/daemon/Display.cpp
+++ b/src/daemon/Display.cpp
@@ -339,7 +339,9 @@ namespace SDDM {
         } else {
             //we only want to unlock the session if we can lock in, so we want to go via PAM auth, but not start a new session
             //by not setting the session and the helper will emit authentication and then quit
-            connect(m_auth, &Auth::authentication, this, [=](){
+            connect(m_auth, &Auth::authentication, this, [=](const QString &, bool success){
+                if(!success)
+                    return;
                 qDebug() << ""activating existing seat"";
                 OrgFreedesktopLogin1ManagerInterface manager(Logind::serviceName(), Logind::managerPath(), QDBusConnection::systemBus());
                 manager.UnlockSession(existingSessionId);
diff --git a/src/helper/backend/PamBackend.cpp b/src/helper/backend/PamBackend.cpp
index 69cbd2ce5..546728291 100644
--- a/src/helper/backend/PamBackend.cpp
+++ b/src/helper/backend/PamBackend.cpp
@@ -219,8 +219,6 @@ namespace SDDM {
 
         if (user == QStringLiteral(""sddm"") && m_greeter)
             service = QStringLiteral(""sddm-greeter"");
-        else if (m_app->session()->path().isEmpty())
-            service = QStringLiteral(""sddm-check"");
         else if (m_autologin)
             service = QStringLiteral(""sddm-autologin"");
         result = m_pam->start(service, user);"
CVE-2018-13818,"From eddb97148ad779f27e670e1e3f19fb323aedafeb Mon Sep 17 00:00:00 2001
From: Fabien Potencier <fabien.potencier@gmail.com>
Date: Wed, 27 Sep 2017 11:10:31 -0700
Subject: [PATCH] prepared the 2.4.4 release

---
 CHANGELOG                | 2 +-
 lib/Twig/Environment.php | 4 ++--
 2 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/CHANGELOG b/CHANGELOG
index d35cddfc5ee..1725c308d95 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -1,4 +1,4 @@
-* 2.4.4 (2017-XX-XX)
+* 2.4.4 (2017-09-27)
 
  * added Twig_Profiler_Profile::reset()
  * fixed use TokenParser to return an empty Node
diff --git a/lib/Twig/Environment.php b/lib/Twig/Environment.php
index 15c9470bf98..7658ccaf3a8 100644
--- a/lib/Twig/Environment.php
+++ b/lib/Twig/Environment.php
@@ -16,12 +16,12 @@
  */
 class Twig_Environment
 {
-    const VERSION = '2.4.4-DEV';
+    const VERSION = '2.4.4';
     const VERSION_ID = 20404;
     const MAJOR_VERSION = 2;
     const MINOR_VERSION = 4;
     const RELEASE_VERSION = 4;
-    const EXTRA_VERSION = 'DEV';
+    const EXTRA_VERSION = '';
 
     private $charset;
     private $loader;"
CVE-2018-14467,"From e3f3b445e2d20ac5d5b7fcb7559ce6beb55da0c9 Mon Sep 17 00:00:00 2001
From: Francois-Xavier Le Bail <devel.fx.lebail@orange.fr>
Date: Sun, 8 Oct 2017 13:38:50 +0200
Subject: [PATCH] (for 4.9.3) CVE-2018-14467/BGP: Fix BGP_CAPCODE_MP.

Add a bounds check and a comment to bgp_capabilities_print().

This fixes a buffer over-read discovered by Bhargava Shastry,
SecT/TU Berlin.

Add a test using the capture file supplied by the reporter(s).
---
 print-bgp.c                                  |   2 ++
 tests/TESTLIST                               |   1 +
 tests/bgp-bgp_capabilities_print-oobr-2.out  |  26 +++++++++++++++++++
 tests/bgp-bgp_capabilities_print-oobr-2.pcap | Bin 0 -> 274 bytes
 4 files changed, 29 insertions(+)
 create mode 100644 tests/bgp-bgp_capabilities_print-oobr-2.out
 create mode 100644 tests/bgp-bgp_capabilities_print-oobr-2.pcap

diff --git a/print-bgp.c b/print-bgp.c
index 1438915a4..71bb5a76e 100644
--- a/print-bgp.c
+++ b/print-bgp.c
@@ -2342,6 +2342,8 @@ bgp_capabilities_print(netdissect_options *ndo,
                 ND_TCHECK2(opt[i+2], cap_len);
                 switch (cap_type) {
                 case BGP_CAPCODE_MP:
+                    /* AFI (16 bits), Reserved (8 bits), SAFI (8 bits) */
+                    ND_TCHECK_8BITS(opt + i + 5);
                     ND_PRINT((ndo, ""\n\t\tAFI %s (%u), SAFI %s (%u)"",
                            tok2str(af_values, ""Unknown"",
                                       EXTRACT_16BITS(opt+i+2)),
diff --git a/tests/TESTLIST b/tests/TESTLIST
index b77c01c8f..1ebdcda09 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -558,6 +558,7 @@ icmp-icmp_print-oobr-2 icmp-icmp_print-oobr-2.pcap icmp-icmp_print-oobr-2.out -v
 rsvp-rsvp_obj_print-oobr rsvp-rsvp_obj_print-oobr.pcap rsvp-rsvp_obj_print-oobr.out -v -c3
 vrrp-vrrp_print-oobr vrrp-vrrp_print-oobr.pcap vrrp-vrrp_print-oobr.out -v -c3
 bgp-bgp_capabilities_print-oobr-1 bgp-bgp_capabilities_print-oobr-1.pcap bgp-bgp_capabilities_print-oobr-1.out -v -c1
+bgp-bgp_capabilities_print-oobr-2 bgp-bgp_capabilities_print-oobr-2.pcap bgp-bgp_capabilities_print-oobr-2.out -v -c1
 # The .pcap file is truncated after the 1st packet.
 hncp_dhcpv6data-oobr	hncp_dhcpv6data-oobr.pcap	hncp_dhcpv6data-oobr.out -v -c1
 hncp_dhcpv4data-oobr	hncp_dhcpv4data-oobr.pcap	hncp_dhcpv4data-oobr.out -v -c1
diff --git a/tests/bgp-bgp_capabilities_print-oobr-2.out b/tests/bgp-bgp_capabilities_print-oobr-2.out
new file mode 100644
index 000000000..21de6f9d1
--- /dev/null
+++ b/tests/bgp-bgp_capabilities_print-oobr-2.out
@@ -0,0 +1,26 @@
+IP (tos 0x1f,CE, ttl 254, id 38671, offset 0, flags [+, DF, rsvd], proto TCP (6), length 4135, bad cksum 200 (->1fdd)!)
+    226.219.0.0.179 > 16.233.34.0.100: Flags [SPUE], seq 347537408:347541483, win 511, urg 65535, options [eol], length 4075: BGP [|BGP]
+	Open Message (1), length: 59
+	  Version 255, my AS 65528, Holdtime 4324s, ID 144.8.32.4
+	  Optional parameters, length: 29
+	    Option Unknown (0), length: 0
+	      no decoder for option 0
+	    Option Capabilities Advertisement (2), length: 8
+	      Graceful Restart (64), length: 0
+		Restart Flags: [none], Restart Time 0s
+	      Unknown (0), length: 0
+		no decoder for Capability 0
+	      32-Bit AS Number (65), length: 4
+		 4 Byte AS 2
+	    Option Unknown (0), length: 2
+	      no decoder for option 0
+	    Option Capabilities Advertisement (2), length: 2
+	      Unknown (232), length: 3
+		no decoder for Capability 232
+		0x0000:  0207 04
+	    Option Capabilities Advertisement (2), length: 7
+	      Multiple Routes to a Destination (4), length: 0
+		no decoder for Capability 4
+	      Unknown (8), length: 0
+		no decoder for Capability 8
+	      Multiprotocol Extensions (1), length: 0[|BGP]
diff --git a/tests/bgp-bgp_capabilities_print-oobr-2.pcap b/tests/bgp-bgp_capabilities_print-oobr-2.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..5c2e1d2e70a62bc5dfc8121882fe80e6b31a6ead
GIT binary patch
literal 274
zcmca|c+)~A1{MZMMg|6kh6DHR11S)bcU~d`1NVET7eF>Y1LLXp{=Yq&b~P}I+}*l@
zgTYl^Kz%y@1BQQWObm~1GcX9eRAOM*%#b3ooq^$5D+BNPEXMx~4FCT#2>fRd|Np;%
zfkE}Z04vzsZHbKkp#a7JT7hnp8xv4a;7<d`dltd}Onm<tm>MKlU{=dOtWE_gVQ|>+
z2k780Koc1ZVCKST25X=VKLnmk;80+ZWnf_9Z~$s>WC0RPAn<~jiJgUk1LWNX1_mhx
MfxGV$elsuv0AyZdM*si-

literal 0
HcmV?d00001"
PYSEC-2018-68,"From 1845c0e4b1bff3462c91c3108c85205acd3c75a2 Mon Sep 17 00:00:00 2001
From: Joseph Weston <joseph.weston08@gmail.com>
Date: Fri, 16 Feb 2018 17:08:58 +0100
Subject: [PATCH] Security fix: fix gitlab group whitelist check

check group membership of users

previously, group_whitelist allowed any user who could access the groups in the whitelist,
rather than checking their membership of the groups.

Admin users received the correct behavior already
---
 oauthenticator/gitlab.py | 34 ++++++++--------------------------
 1 file changed, 8 insertions(+), 26 deletions(-)

diff --git a/oauthenticator/gitlab.py b/oauthenticator/gitlab.py
index e5d9029e..e6669c2a 100644
--- a/oauthenticator/gitlab.py
+++ b/oauthenticator/gitlab.py
@@ -21,7 +21,6 @@
 
 from traitlets import Set
 
-from .common import next_page_from_links
 from .oauth2 import OAuthLoginHandler, OAuthenticator
 
 # Support gitlab.com and gitlab community edition installations
@@ -131,31 +130,14 @@ def authenticate(self, handler, data=None):
     def _check_group_whitelist(self, username, user_id, is_admin, access_token):
         http_client = AsyncHTTPClient()
         headers = _api_headers(access_token)
-        if is_admin:
-            # For admins, /groups returns *all* groups. As a workaround
-            # we check if we are a member of each group in the whitelist
-            for group in map(url_escape, self.gitlab_group_whitelist):
-                url = ""%s/groups/%s/members/%d"" % (GITLAB_API, group, user_id)
-                req = HTTPRequest(url, method=""GET"", headers=headers)
-                resp = yield http_client.fetch(req, raise_error=False)
-                if resp.code == 200:
-                    return True  # user _is_ in group
-        else:
-            # For regular users we get all the groups to which they have access
-            # and check if any of these are in the whitelisted groups
-            next_page = url_concat(""%s/groups"" % GITLAB_API,
-                                   dict(all_available=True))
-            while next_page:
-                req = HTTPRequest(next_page, method=""GET"", headers=headers)
-                resp = yield http_client.fetch(req)
-                resp_json = json.loads(resp.body.decode('utf8', 'replace'))
-                next_page = next_page_from_links(resp)
-                user_groups = set(entry[""path""] for entry in resp_json)
-                # check if any of the organizations seen thus far are in whitelist
-                if len(self.gitlab_group_whitelist & user_groups) > 0:
-                    return True
-            return False
-
+        # Check if we are a member of each group in the whitelist
+        for group in map(url_escape, self.gitlab_group_whitelist):
+            url = ""%s/groups/%s/members/%d"" % (GITLAB_API, group, user_id)
+            req = HTTPRequest(url, method=""GET"", headers=headers)
+            resp = yield http_client.fetch(req, raise_error=False)
+            if resp.code == 200:
+                return True  # user _is_ in group
+        return False
 
 
 class LocalGitLabOAuthenticator(LocalAuthenticator, GitLabOAuthenticator):"
OSV-2018-150,"From 3341c7fbfb9bc8e137afd9f16da8cf18eb67b25b Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 17 Oct 2018 15:04:35 -0700
Subject: [PATCH] [fuzzing] Move fuzzing fonts from api/ here

---
 ...minimized-hb-subset-fuzzer-5521982557782016 | Bin 1228 -> 0 bytes
 ...minimized-hb-subset-fuzzer-5542653037903872 | Bin 160249 -> 0 bytes
 ...minimized-hb-subset-fuzzer-5609911946838016 | Bin 313 -> 0 bytes
 ...minimized-hb-subset-fuzzer-5670861909524480 | Bin 1298 -> 0 bytes
 ...minimized-hb-subset-fuzzer-5750092395970560 | Bin 72435 -> 0 bytes
 ...minimized-hb-subset-fuzzer-6651660668502016 | Bin 15229 -> 0 bytes
 ...bset-get-codepoints-fuzzer-5973295416475648 | Bin 109 -> 0 bytes
 ...bset-get-codepoints-fuzzer-6136125075750912 | Bin 65816 -> 0 bytes
 test/api/test-subset-glyf.c                    |   2 +-
 test/api/test-subset-hdmx.c                    |   4 ++--
 test/api/test-subset-hmtx.c                    |   2 +-
 test/api/test-subset.c                         |   6 +++---
 ...sh-4b60576767ee4d9fe1cc10959d89baf73d4e8249 | Bin
 ...sh-b577db318b30f2851828a4c9ef97cb30678b1b54 | Bin
 ...sh-ccc61c92d589f895174cdef6ff2e3b20e9999a1a | Bin
 ...sh-e4e0bb1458a91b692eba492c907ae1f94e635480 | Bin
 ...om-6ef8c96d3710262511bcc730dce9c00e722cb653 | Bin
 ...om-ccc61c92d589f895174cdef6ff2e3b20e9999a1a | Bin
 18 files changed, 7 insertions(+), 7 deletions(-)
 delete mode 100644 test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5521982557782016
 delete mode 100644 test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5542653037903872
 delete mode 100644 test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5609911946838016
 delete mode 100644 test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5670861909524480
 delete mode 100644 test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5750092395970560
 delete mode 100644 test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-6651660668502016
 delete mode 100644 test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-get-codepoints-fuzzer-5973295416475648
 delete mode 100644 test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-get-codepoints-fuzzer-6136125075750912
 rename test/{api => fuzzing}/fonts/crash-4b60576767ee4d9fe1cc10959d89baf73d4e8249 (100%)
 rename test/{api => fuzzing}/fonts/crash-b577db318b30f2851828a4c9ef97cb30678b1b54 (100%)
 rename test/{api => fuzzing}/fonts/crash-ccc61c92d589f895174cdef6ff2e3b20e9999a1a (100%)
 rename test/{api => fuzzing}/fonts/crash-e4e0bb1458a91b692eba492c907ae1f94e635480 (100%)
 rename test/{api => fuzzing}/fonts/oom-6ef8c96d3710262511bcc730dce9c00e722cb653 (100%)
 rename test/{api => fuzzing}/fonts/oom-ccc61c92d589f895174cdef6ff2e3b20e9999a1a (100%)

diff --git a/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5521982557782016 b/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5521982557782016
deleted file mode 100644
index 55541f74951791d86f226c109f0a760932964a05..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1228
zcmZQzWME+MQ2+z?ocv^$GM`cg24)|Irwj`2!J$r*MbpKA{2ZVvvy9x5iZZU|<qUjG
zKp}<%korVt1~wo^1t_nEq~H4w157_qhL52Erk+y$IPCKQ+5&N}AlSXw>{r0!UUdCP
z{zr8`y8Y;Uc=(~ZhdA@V;f-n^wZcmQHGa_ji!HqH#V@*ky#50wF#({j!07`=cww`D
zG`^7YBWilW7G6|~FXa3Tjj#M1237_s1{O|WZkJ;e1?FZ(FdH-H<4GByoCzv!7>w|j
wByi6Gl`{SR|DP9DcqA$^Dl)T&|LNubd*<vT<^tyJf9<&$Oc;$BL_iJ#0C|7!ZU6uP

diff --git a/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5542653037903872 b/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5542653037903872
deleted file mode 100644
index 6307ddd4bdde5d804a17b92face6673efd4bced7..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 160249
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

diff --git a/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5609911946838016 b/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5609911946838016
deleted file mode 100644
index 8c647a8a48ddff5b95f56d919d2a60840622a838..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 313
lcmZQzWME(rQUHUDl-vpsgMoq35F#>4VuSz#11NwP7yviDCYJyJ

diff --git a/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5670861909524480 b/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5670861909524480
deleted file mode 100644
index 49bcb30988a73e81f8a5be7d8562ce2bddf759f1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1298
zcmcgrOGs2v82-+6oY65Kp+?$E(i9(+Z_P;5OcO*S%@(0{y`wY8T<0<~nQcmXEzMO#
zt2XUx5fqiFshL@sB~-d-5mF1WAOs7#efKDpw3W``o^$^1|Ihb7&VL~QB*}rwhQrmA
zh<pU55mw!Btl~r6yL3VufY7-5hP}D1y?v?H4LfjB(^aFa`QcmBTs~)-KPI&9V3H`W
z83sniY17$Zxb<$=*&bjtABf!KRs#m{80rVPhq=9HI_zJUOMr-4;AWSnU31y4*OUUc
z9#CKC@wBVap`j-zf1{k@(Stq7`TIWuw>JZ}DX&jc=f4klfjgf7rBhdX4CQp>0&usH
z_DNl;-ad9Ec`M~0VDC44fnaOPjWXbojrrU&{Ov~7f%`j|EdAq}l{uWqz<G$uEwzmZ
z1ML9Qq{hL6QWioa6m~dN)f+^XmL1TL-{Ds^lz6*N=_vDAYn9LM>OyTm*9;uB?(ws@
z1#eobLO@7vK{o3gB3B2(5eLSL78pb=P0#9nRqlksB`z{naODexva}=^cM|>B5ry|;
zTfhir<vvC`8|GHeA+(<6HwV6`92PPtQOg@&MMi6>V#qOyF+9OIo?-&eFfSY;OoTfX
zk-!@Ry)l@?bG*PyOyLzf<~81628#k7^QUQ=ONv#>gY^w{YfIUdjUf!ugBViqm_8JG
z9wxsPfx>7H$vqWrDNT|SSmbny2oZ&djfo-=(Nc$bILjTvi3kD?b2rkEgFIxy77`G#
zEN%+2P=r!cp$<(r4qvmMWI;|9-MD}@I-X&%=Q%G*CzqIH6fTPdI_VSJ#CG&E92;jU
z19Sgo{_7<Qw1UE-T&+02us|!`=gP@;6|QHFvy4#&xSA?MOOW|HtSWOTh~@joGu3G9
z!9PW4f=-1GepbiIJX2<#C37ob8RKB6x(3?BvH|0<i%pb9vK=JLp_Ip&jsjHh*RbkX
dj3a17IqTU$*+b^Fb^R|7yKcSnr*&3Z<`-YB@LK=?

diff --git a/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5750092395970560 b/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5750092395970560
deleted file mode 100644
index d622c25639f5be075900ab05a159f933eeb4a72d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 72435
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
BZhZg%

diff --git a/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-6651660668502016 b/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-6651660668502016
deleted file mode 100644
index 6206f0776c86cda8bc5a474160c125b6da6f5b7d..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 15229
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

diff --git a/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-get-codepoints-fuzzer-5973295416475648 b/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-get-codepoints-fuzzer-5973295416475648
deleted file mode 100644
index b506d2a5ab0e6ed72082ae9e5b4c9c24bb6dda7a..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 109
zcmZQzWME)mRe*s13JO332g$jK1q=*pKq@r<0SRUX9v%<}23X!P{8s~V*o7DvK;o|K
f5E(88{-3Y@AGtk!k`O~hDuVzcTSh8SW&r~Lqn8rN

diff --git a/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-get-codepoints-fuzzer-6136125075750912 b/test/api/fonts/clusterfuzz-testcase-minimized-hb-subset-get-codepoints-fuzzer-6136125075750912
deleted file mode 100644
index ffcea6460c2ba2e45a5746c0b56560ac0e38321c..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 65816
zcmeI$ziSg=7{Ku-X)I~+M<{~Yr5!rBh^c8w2W!=(T|}|yB1m&-!xgL*tP%&&O>q(b
z11J9tMRXCwu?_`62S=eTh%WKH%cV9YCf6qSczOFhXp_5p?|tt5JQwbLUP*|^u)k$n
zZPT;YE_!W564Iz`aj9@8IRCEE`Tu$BY%Tc5PqlCUrx}V!N)l6*-?Ax^8F7~$mec-G
zS^u>@nQ@m^%IUt1A-B)8%#2L>`yx~3vY@>=FNq<)n*qtX?n2>&Y5(B<i^r~%&EdIX
zcHVU81xiZ(w8#;WW5*LIIcE;^t)(RCOkcS?TN#vzGpos?M)%pw^$S-Ab01dCC6~-!
zy4I;Ybr#*s$Y%8>de_W3b4Ob@x#8V~*(%j-pt@VT>Ga>5t|Q1wqP9QkfAQ`#D~J5=
z!`^>?-=tj9{`alsev6&|zGkyy!Lfy%=c@bCV=$6NJz1#?_n)tP>y?R#vH5&{Ja@7<
z?ktq@MQ5~-%RMR;OGQVde9Co}SG<7*TeA8&S*e&#yr;4Dzj3^OAC(`b3vakRJtn!C
z@3)qVg&+nW2q1s}0tg_000Ibfmq1$HzD!E*%~z#^i}!9Hxcm9}XfS~H-8GOs-0h7$
zT*D;@AP{o_uhO@Dn;S^H{_-;zr8i)+I3do=o20i8bIV^nG3!3&v)|uO$&9SZ;b2k3
z9AdLpU_Zap6_d*JK@po!2(%W6=}XaFbe^=nd0HTV00Iag(4GJVKzn`-uLiXtOQ#Ro
zR#n+Ho=)eR{t!?Wh-sCmtUx#f5I_KdeJVgfqmp<EfR@aex)y-daj=5`0`U=`dW=sl
zxDx~rKmdW}0=%=D`*0Qk1Q0;LY5`U}Rnp4>o(eNT5C|(k0T5P-b_gJV00I^YPynbT
z)v^M>vf-#a0t7)ILILWT2yy8e0R*~8fN8BtvX}?9$;?~3O+YS3009IL=w<<?Ybx1e
zy0%MZz;+2na|AjfKw;DoMmj+N0R#|G5a6AqfJ_Jk5I_KdxC*eCr;-`grc{^-f<RaS
z3V^Uuv_k*^1Q4)LfC4}zskRjWwv9*SAs`3>(Fst{L}yFS2q2&?z~oegoXMODb9{sF
zJ5$LGzcUqPf*=r9fTAg^6zvc|009In6rcc5NvdrHfNkSZc?bxC00Lbnz$;QEWwyOi
zY#WctLqHG&q7z`vFFIR#MgReI0Vby^<lR1*<ISh?m=FX31Q0+Vo&wC4RPxg8vn3Uz
z?Lh$BuEBQ%5Qvcg)nkm3!L1;G00Ia!72uuKl!ucDAb<b@b_=lLsghq7@Kl%yf<RaS
z3V^Uuv_k*^1Q4)HfXTl~LT#J;+cqARhkzgmL?=Ko6P+zRBY=Rq0FzS{awc;s%<&Dv
z?@T2({LWOE34%aa0g9%uQnW(=0R#}RP=EqJC8@R*0Je=s<sl#l0?`Rj&_riT&j=u(
NF2Lkeg}i<;_Xnj%;4%OJ

diff --git a/test/api/test-subset-glyf.c b/test/api/test-subset-glyf.c
index af9439c0f72..05c7f8cfeda 100644
--- a/test/api/test-subset-glyf.c
+++ b/test/api/test-subset-glyf.c
@@ -228,7 +228,7 @@ test_subset_glyf_strip_hints_composite (void)
 static void
 test_subset_glyf_strip_hints_invalid (void)
 {
-  hb_face_t *face = hb_subset_test_open_font (""fonts/oom-ccc61c92d589f895174cdef6ff2e3b20e9999a1a"");
+  hb_face_t *face = hb_subset_test_open_font (""../fuzzing/fonts/oom-ccc61c92d589f895174cdef6ff2e3b20e9999a1a"");
 
   hb_set_t *codepoints = hb_set_create();
   const hb_codepoint_t text[] =
diff --git a/test/api/test-subset-hdmx.c b/test/api/test-subset-hdmx.c
index ddcdedce36b..8496f9e8f51 100644
--- a/test/api/test-subset-hdmx.c
+++ b/test/api/test-subset-hdmx.c
@@ -72,7 +72,7 @@ test_subset_hdmx_multiple_device_records (void)
 static void
 test_subset_hdmx_invalid (void)
 {
-  hb_face_t *face = hb_subset_test_open_font(""fonts/crash-ccc61c92d589f895174cdef6ff2e3b20e9999a1a"");
+  hb_face_t *face = hb_subset_test_open_font(""../fuzzing/fonts/crash-ccc61c92d589f895174cdef6ff2e3b20e9999a1a"");
 
   hb_subset_input_t *input = hb_subset_input_create_or_fail ();
   hb_set_t *codepoints = hb_subset_input_unicode_set (input);
@@ -94,7 +94,7 @@ test_subset_hdmx_invalid (void)
 static void
 test_subset_hdmx_fails_sanitize (void)
 {
-  hb_face_t *face = hb_subset_test_open_font(""fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5609911946838016"");
+  hb_face_t *face = hb_subset_test_open_font(""../fuzzing/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5609911946838016"");
 
   hb_subset_input_t *input = hb_subset_input_create_or_fail ();
   hb_set_t *codepoints = hb_subset_input_unicode_set (input);
diff --git a/test/api/test-subset-hmtx.c b/test/api/test-subset-hmtx.c
index 551e5067209..1a5a44dc5f3 100644
--- a/test/api/test-subset-hmtx.c
+++ b/test/api/test-subset-hmtx.c
@@ -153,7 +153,7 @@ test_subset_hmtx_noop (void)
 static void
 test_subset_invalid_hmtx (void)
 {
-  hb_face_t *face = hb_subset_test_open_font(""fonts/crash-e4e0bb1458a91b692eba492c907ae1f94e635480"");
+  hb_face_t *face = hb_subset_test_open_font(""../fuzzing/fonts/crash-e4e0bb1458a91b692eba492c907ae1f94e635480"");
   hb_face_t *subset;
 
   hb_subset_input_t *input = hb_subset_input_create_or_fail ();
diff --git a/test/api/test-subset.c b/test/api/test-subset.c
index 2fc885a6dab..aaed03176c1 100644
--- a/test/api/test-subset.c
+++ b/test/api/test-subset.c
@@ -32,7 +32,7 @@
 static void
 test_subset_32_tables (void)
 {
-  hb_face_t *face = hb_subset_test_open_font(""fonts/oom-6ef8c96d3710262511bcc730dce9c00e722cb653"");
+  hb_face_t *face = hb_subset_test_open_font(""../fuzzing/fonts/oom-6ef8c96d3710262511bcc730dce9c00e722cb653"");
 
   hb_subset_input_t *input = hb_subset_input_create_or_fail ();
   hb_set_t *codepoints = hb_subset_input_unicode_set (input);
@@ -54,7 +54,7 @@ test_subset_32_tables (void)
 static void
 test_subset_no_inf_loop (void)
 {
-  hb_face_t *face = hb_subset_test_open_font(""fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5521982557782016"");
+  hb_face_t *face = hb_subset_test_open_font(""../fuzzing/fonts/clusterfuzz-testcase-minimized-hb-subset-fuzzer-5521982557782016"");
 
   hb_subset_input_t *input = hb_subset_input_create_or_fail ();
   hb_set_t *codepoints = hb_subset_input_unicode_set (input);
@@ -76,7 +76,7 @@ test_subset_no_inf_loop (void)
 static void
 test_subset_crash (void)
 {
-  hb_face_t *face = hb_subset_test_open_font(""fonts/crash-4b60576767ee4d9fe1cc10959d89baf73d4e8249"");
+  hb_face_t *face = hb_subset_test_open_font(""../fuzzing/fonts/crash-4b60576767ee4d9fe1cc10959d89baf73d4e8249"");
 
   hb_subset_input_t *input = hb_subset_input_create_or_fail ();
   hb_set_t *codepoints = hb_subset_input_unicode_set (input);
diff --git a/test/api/fonts/crash-4b60576767ee4d9fe1cc10959d89baf73d4e8249 b/test/fuzzing/fonts/crash-4b60576767ee4d9fe1cc10959d89baf73d4e8249
similarity index 100%
rename from test/api/fonts/crash-4b60576767ee4d9fe1cc10959d89baf73d4e8249
rename to test/fuzzing/fonts/crash-4b60576767ee4d9fe1cc10959d89baf73d4e8249
diff --git a/test/api/fonts/crash-b577db318b30f2851828a4c9ef97cb30678b1b54 b/test/fuzzing/fonts/crash-b577db318b30f2851828a4c9ef97cb30678b1b54
similarity index 100%
rename from test/api/fonts/crash-b577db318b30f2851828a4c9ef97cb30678b1b54
rename to test/fuzzing/fonts/crash-b577db318b30f2851828a4c9ef97cb30678b1b54
diff --git a/test/api/fonts/crash-ccc61c92d589f895174cdef6ff2e3b20e9999a1a b/test/fuzzing/fonts/crash-ccc61c92d589f895174cdef6ff2e3b20e9999a1a
similarity index 100%
rename from test/api/fonts/crash-ccc61c92d589f895174cdef6ff2e3b20e9999a1a
rename to test/fuzzing/fonts/crash-ccc61c92d589f895174cdef6ff2e3b20e9999a1a
diff --git a/test/api/fonts/crash-e4e0bb1458a91b692eba492c907ae1f94e635480 b/test/fuzzing/fonts/crash-e4e0bb1458a91b692eba492c907ae1f94e635480
similarity index 100%
rename from test/api/fonts/crash-e4e0bb1458a91b692eba492c907ae1f94e635480
rename to test/fuzzing/fonts/crash-e4e0bb1458a91b692eba492c907ae1f94e635480
diff --git a/test/api/fonts/oom-6ef8c96d3710262511bcc730dce9c00e722cb653 b/test/fuzzing/fonts/oom-6ef8c96d3710262511bcc730dce9c00e722cb653
similarity index 100%
rename from test/api/fonts/oom-6ef8c96d3710262511bcc730dce9c00e722cb653
rename to test/fuzzing/fonts/oom-6ef8c96d3710262511bcc730dce9c00e722cb653
diff --git a/test/api/fonts/oom-ccc61c92d589f895174cdef6ff2e3b20e9999a1a b/test/fuzzing/fonts/oom-ccc61c92d589f895174cdef6ff2e3b20e9999a1a
similarity index 100%
rename from test/api/fonts/oom-ccc61c92d589f895174cdef6ff2e3b20e9999a1a
rename to test/fuzzing/fonts/oom-ccc61c92d589f895174cdef6ff2e3b20e9999a1a"
OSV-2018-99,"From 41863a00f0d811c659c9ba87ae2cc0c3aae5a77f Mon Sep 17 00:00:00 2001
From: Patrick Steinhardt <ps@pks.im>
Date: Mon, 29 Oct 2018 17:19:58 +0100
Subject: [PATCH] strntol: fix out-of-bounds read when skipping leading spaces

The `git__strntol` family of functions accepts leading spaces and will
simply skip them. The skipping will not honor the provided buffer's
length, though, which may lead it to read outside of the provided
buffer's bounds if it is not a simple NUL-terminated string.
Furthermore, if leading space is trimmed, the function will further
advance the pointer but not update the number of remaining bytes, which
may also lead to out-of-bounds reads.

Fix the issue by properly paying attention to the buffer length and
updating it when stripping leading whitespace characters. Add a test
that verifies that we won't read past the provided buffer length.
---
 src/util.c          |  7 +++++--
 tests/core/strtol.c | 10 ++++++++++
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/src/util.c b/src/util.c
index 52495f75258..b191d1a16cb 100644
--- a/src/util.c
+++ b/src/util.c
@@ -83,8 +83,11 @@ int git__strntol64(int64_t *result, const char *nptr, size_t nptr_len, const cha
 	/*
 	 * White space
 	 */
-	while (git__isspace(*p))
-		p++;
+	while (nptr_len && git__isspace(*p))
+		p++, nptr_len--;
+
+	if (!nptr_len)
+		goto Return;
 
 	/*
 	 * Sign
diff --git a/tests/core/strtol.c b/tests/core/strtol.c
index ba79fba5108..ac19a28082c 100644
--- a/tests/core/strtol.c
+++ b/tests/core/strtol.c
@@ -76,6 +76,16 @@ void test_core_strtol__buffer_length_truncates(void)
 	cl_assert_equal_i(i64, 1);
 }
 
+void test_core_strtol__buffer_length_with_leading_ws_truncates(void)
+{
+	int64_t i64;
+
+	cl_git_fail(git__strntol64(&i64, "" 1"", 1, NULL, 10));
+
+	cl_git_pass(git__strntol64(&i64, "" 11"", 2, NULL, 10));
+	cl_assert_equal_i(i64, 1);
+}
+
 void test_core_strtol__error_message_cuts_off(void)
 {
 	assert_l32_fails(""2147483657foobar"", 10);"
CVE-2018-16393,"From 360e95d45ac4123255a4c796db96337f332160ad Mon Sep 17 00:00:00 2001
From: Frank Morgner <frankmorgner@gmail.com>
Date: Fri, 25 May 2018 23:34:14 +0200
Subject: [PATCH] fixed out of bounds writes

Thanks to Eric Sesterhenn from X41 D-SEC GmbH
for reporting the problems.
---
 src/libopensc/card-cac.c         |  2 +-
 src/libopensc/card-epass2003.c   |  3 ++-
 src/libopensc/card-muscle.c      |  7 +++++--
 src/libopensc/card-tcos.c        |  6 +++---
 src/libopensc/pkcs15-esteid.c    |  2 +-
 src/libopensc/pkcs15-gemsafeV1.c |  2 +-
 src/libopensc/pkcs15-sc-hsm.c    | 14 ++++++++------
 src/libopensc/sc.c               |  2 +-
 src/tools/cryptoflex-tool.c      |  5 +++--
 src/tools/egk-tool.c             |  2 +-
 src/tools/util.c                 |  5 +++--
 11 files changed, 29 insertions(+), 21 deletions(-)

diff --git a/src/libopensc/card-cac.c b/src/libopensc/card-cac.c
index a30a04385f..756788a0fb 100644
--- a/src/libopensc/card-cac.c
+++ b/src/libopensc/card-cac.c
@@ -794,7 +794,7 @@ static int cac_get_serial_nr_from_CUID(sc_card_t* card, sc_serial_number_t* seri
         }
 	if (priv->cac_id_len) {
 		serial->len = MIN(priv->cac_id_len, SC_MAX_SERIALNR);
-		memcpy(serial->value, priv->cac_id, priv->cac_id_len);
+		memcpy(serial->value, priv->cac_id, serial->len);
 		SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, SC_SUCCESS);
 	}
 	SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_NORMAL, SC_ERROR_FILE_NOT_FOUND);
diff --git a/src/libopensc/card-epass2003.c b/src/libopensc/card-epass2003.c
index cbe417cf78..65a58f6740 100644
--- a/src/libopensc/card-epass2003.c
+++ b/src/libopensc/card-epass2003.c
@@ -951,7 +951,7 @@ decrypt_response(struct sc_card *card, unsigned char *in, size_t inlen, unsigned
 	while (0x80 != plaintext[cipher_len - 2] && (cipher_len - 2 > 0))
 		cipher_len--;
 
-	if (2 == cipher_len)
+	if (2 == cipher_len || *out_len < cipher_len - 2)
 		return -1;
 
 	memcpy(out, plaintext, cipher_len - 2);
@@ -977,6 +977,7 @@ epass2003_sm_unwrap_apdu(struct sc_card *card, struct sc_apdu *sm, struct sc_apd
 	r = sc_check_sw(card, sm->sw1, sm->sw2);
 	if (r == SC_SUCCESS) {
 		if (exdata->sm) {
+			len = plain->resplen;
 			if (0 != decrypt_response(card, sm->resp, sm->resplen, plain->resp, &len))
 				return SC_ERROR_CARD_CMD_FAILED;
 		}
diff --git a/src/libopensc/card-muscle.c b/src/libopensc/card-muscle.c
index fd148e3039..d247efabc9 100644
--- a/src/libopensc/card-muscle.c
+++ b/src/libopensc/card-muscle.c
@@ -518,7 +518,9 @@ static int muscle_list_files(sc_card_t *card, u8 *buf, size_t bufLen)
 	mscfs_check_cache(priv->fs);
 
 	for(x = 0; x < fs->cache.size; x++) {
-		u8* oid= fs->cache.array[x].objectId.id;
+		u8* oid = fs->cache.array[x].objectId.id;
+		if (bufLen < 2)
+			break;
 		sc_debug(card->ctx, SC_LOG_DEBUG_NORMAL,
 			""FILE: %02X%02X%02X%02X\n"",
 			oid[0],oid[1],oid[2],oid[3]);
@@ -527,7 +529,8 @@ static int muscle_list_files(sc_card_t *card, u8 *buf, size_t bufLen)
 			buf[1] = oid[3];
 			if(buf[0] == 0x00 && buf[1] == 0x00) continue; /* No directories/null names outside of root */
 			buf += 2;
-			count+=2;
+			count += 2;
+			bufLen -= 2;
 		}
 	}
 	return count;
diff --git a/src/libopensc/card-tcos.c b/src/libopensc/card-tcos.c
index 40eac877de..3c86b1f483 100644
--- a/src/libopensc/card-tcos.c
+++ b/src/libopensc/card-tcos.c
@@ -408,7 +408,7 @@ static int tcos_select_file(sc_card_t *card,
 	file->path = *in_path;
 
 	for(i=2; i+1<apdu.resplen && i+1+apdu.resp[i+1]<apdu.resplen; i+=2+apdu.resp[i+1]){
-		int j, len=apdu.resp[i+1];
+		size_t j, len=apdu.resp[i+1];
 		unsigned char type=apdu.resp[i], *d=apdu.resp+i+2;
 
 		switch (type) {
@@ -432,8 +432,8 @@ static int tcos_select_file(sc_card_t *card,
 			file->id = (d[0]<<8) | d[1];
 			break;
 		case 0x84:
-			memcpy(file->name, d, len);
-			file->namelen = len;
+			file->namelen = MIN(sizeof file->name, len);
+			memcpy(file->name, d, file->namelen);
 			break;
 		case 0x86:
 			sc_file_set_sec_attr(file, d, len); 
diff --git a/src/libopensc/pkcs15-esteid.c b/src/libopensc/pkcs15-esteid.c
index b3cf5178fc..2b8d66b913 100644
--- a/src/libopensc/pkcs15-esteid.c
+++ b/src/libopensc/pkcs15-esteid.c
@@ -79,7 +79,7 @@ sc_pkcs15emu_esteid_init (sc_pkcs15_card_t * p15card)
 	/* read the serial (document number) */
 	r = sc_read_record (card, SC_ESTEID_PD_DOCUMENT_NR, buff, sizeof(buff), SC_RECORD_BY_REC_NR);
 	SC_TEST_RET(card->ctx, SC_LOG_DEBUG_NORMAL, r, ""read document number failed"");
-	buff[r] = '\0';
+	buff[MIN((size_t) r, (sizeof buff)-1)] = '\0';
 	set_string (&p15card->tokeninfo->serial_number, (const char *) buff);
 
 	p15card->tokeninfo->flags = SC_PKCS15_TOKEN_PRN_GENERATION
diff --git a/src/libopensc/pkcs15-gemsafeV1.c b/src/libopensc/pkcs15-gemsafeV1.c
index a8162b9d01..3b220f7a5b 100644
--- a/src/libopensc/pkcs15-gemsafeV1.c
+++ b/src/libopensc/pkcs15-gemsafeV1.c
@@ -208,7 +208,7 @@ static int gemsafe_get_cert_len(sc_card_t *card)
 	 * the private key.
 	 */
 	ind = 2; /* skip length */
-	while (ibuf[ind] == 0x01) {
+	while (ibuf[ind] == 0x01 && i < gemsafe_cert_max) {
 		if (ibuf[ind+1] == 0xFE) {
 			gemsafe_prkeys[i].ref = ibuf[ind+4];
 			sc_log(card->ctx, ""Key container %d is allocated and uses key_ref %d"",
diff --git a/src/libopensc/pkcs15-sc-hsm.c b/src/libopensc/pkcs15-sc-hsm.c
index 305572cb6c..1391bea153 100644
--- a/src/libopensc/pkcs15-sc-hsm.c
+++ b/src/libopensc/pkcs15-sc-hsm.c
@@ -837,12 +837,14 @@ static int sc_pkcs15emu_sc_hsm_init (sc_pkcs15_card_t * p15card)
 		r = read_file(p15card, (u8 *) ""\x2F\x02"", efbin, &len, 1);
 		LOG_TEST_RET(card->ctx, r, ""Skipping optional EF.C_DevAut"");
 
-		/* save EF_C_DevAut for further use */
-		ptr = realloc(priv->EF_C_DevAut, len);
-		if (ptr) {
-			memcpy(ptr, efbin, len);
-			priv->EF_C_DevAut = ptr;
-			priv->EF_C_DevAut_len = len;
+		if (len > 0) {
+			/* save EF_C_DevAut for further use */
+			ptr = realloc(priv->EF_C_DevAut, len);
+			if (ptr) {
+				memcpy(ptr, efbin, len);
+				priv->EF_C_DevAut = ptr;
+				priv->EF_C_DevAut_len = len;
+			}
 		}
 
 		ptr = efbin;
diff --git a/src/libopensc/sc.c b/src/libopensc/sc.c
index af71cafa9b..53fefb3e68 100644
--- a/src/libopensc/sc.c
+++ b/src/libopensc/sc.c
@@ -628,7 +628,7 @@ int sc_file_set_sec_attr(sc_file_t *file, const u8 *sec_attr,
 		return SC_ERROR_INVALID_ARGUMENTS;
 	}
 
-	if (sec_attr == NULL) {
+	if (sec_attr == NULL || sec_attr_len) {
 		if (file->sec_attr != NULL)
 			free(file->sec_attr);
 		file->sec_attr = NULL;
diff --git a/src/tools/cryptoflex-tool.c b/src/tools/cryptoflex-tool.c
index 21b0baa16d..662a028222 100644
--- a/src/tools/cryptoflex-tool.c
+++ b/src/tools/cryptoflex-tool.c
@@ -21,6 +21,7 @@
 #include ""config.h""
 
 #include ""libopensc/sc-ossl-compat.h""
+#include ""libopensc/internal.h""
 #include <openssl/bn.h>
 #include <openssl/rsa.h>
 #include <openssl/x509.h>
@@ -331,7 +332,7 @@ static int read_public_key(RSA *rsa)
 		fprintf(stderr, ""Unable to select public key file: %s\n"", sc_strerror(r));
 		return 2;
 	}
-	bufsize = file->size;
+	bufsize = MIN(file->size, sizeof buf);
 	sc_file_free(file);
 	r = sc_read_binary(card, 0, buf, bufsize, 0);
 	if (r < 0) {
@@ -382,7 +383,7 @@ static int read_private_key(RSA *rsa)
 	e = sc_file_get_acl_entry(file, SC_AC_OP_READ);
 	if (e == NULL || e->method == SC_AC_NEVER)
 		return 10;
-	bufsize = file->size;
+	bufsize = MIN(file->size, sizeof buf);
 	sc_file_free(file);
 	r = sc_read_binary(card, 0, buf, bufsize, 0);
 	if (r < 0) {
diff --git a/src/tools/egk-tool.c b/src/tools/egk-tool.c
index 0a8834b6f7..31360833b5 100644
--- a/src/tools/egk-tool.c
+++ b/src/tools/egk-tool.c
@@ -149,7 +149,7 @@ int read_file(struct sc_card *card, char *str_path, unsigned char **data, size_t
 		goto err;
 	}
 
-	len = file ? file->size : 4096;
+	len = file && file->size > 0 ? file->size : 4096;
 	p = realloc(*data, len);
 	if (!p) {
 		goto err;
diff --git a/src/tools/util.c b/src/tools/util.c
index 6b8743e2d0..e49647a472 100644
--- a/src/tools/util.c
+++ b/src/tools/util.c
@@ -339,10 +339,11 @@ const char * util_acl_to_str(const sc_acl_entry_t *e)
 			strcpy(buf, ""????"");
 			break;
 		}
-		strcat(line, buf);
-		strcat(line, "" "");
+		strncat(line, buf, sizeof line);
+		strncat(line, "" "", sizeof line);
 		e = e->next;
 	}
+	line[(sizeof line)-1] = '\0'; /* make sure it's NUL terminated */
 	line[strlen(line)-1] = 0; /* get rid of trailing space */
 	return line;
 }"
CVE-2018-8043,"From 297a6961ffb8ff4dc66c9fbf53b924bd1dda05d5 Mon Sep 17 00:00:00 2001
From: Wei Yongjun <weiyongjun1@huawei.com>
Date: Thu, 11 Jan 2018 11:21:51 +0000
Subject: [PATCH] net: phy: mdio-bcm-unimac: fix potential NULL dereference in
 unimac_mdio_probe()

platform_get_resource() may fail and return NULL, so we should
better check it's return value to avoid a NULL pointer dereference
a bit later in the code.

This is detected by Coccinelle semantic patch.

@@
expression pdev, res, n, t, e, e1, e2;
@@

res = platform_get_resource(pdev, t, n);
+ if (!res)
+   return -EINVAL;
... when != res == NULL
e = devm_ioremap(e1, res->start, e2);

Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 drivers/net/phy/mdio-bcm-unimac.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/drivers/net/phy/mdio-bcm-unimac.c b/drivers/net/phy/mdio-bcm-unimac.c
index 08e0647b85e239..8d370667fa1b3e 100644
--- a/drivers/net/phy/mdio-bcm-unimac.c
+++ b/drivers/net/phy/mdio-bcm-unimac.c
@@ -205,6 +205,8 @@ static int unimac_mdio_probe(struct platform_device *pdev)
 		return -ENOMEM;
 
 	r = platform_get_resource(pdev, IORESOURCE_MEM, 0);
+	if (!r)
+		return -EINVAL;
 
 	/* Just ioremap, as this MDIO block is usually integrated into an
 	 * Ethernet MAC controller register range"
CVE-2018-9988,"From a1098f81c252b317ad34ea978aea2bc47760b215 Mon Sep 17 00:00:00 2001
From: Krzysztof Stachowiak <krzysiek.stachowiak@gmail.com>
Date: Tue, 13 Mar 2018 11:28:49 +0100
Subject: [PATCH] Add bounds check before signature length read

---
 library/ssl_cli.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/library/ssl_cli.c b/library/ssl_cli.c
index 2534346a49f6..279a127ba23e 100644
--- a/library/ssl_cli.c
+++ b/library/ssl_cli.c
@@ -2478,6 +2478,14 @@ static int ssl_parse_server_key_exchange( mbedtls_ssl_context *ssl )
         /*
          * Read signature
          */
+
+        if( p > end - 2 )
+        {
+            MBEDTLS_SSL_DEBUG_MSG( 1, ( ""bad server key exchange message"" ) );
+            mbedtls_ssl_send_alert_message( ssl, MBEDTLS_SSL_ALERT_LEVEL_FATAL,
+                                            MBEDTLS_SSL_ALERT_MSG_DECODE_ERROR );
+            return( MBEDTLS_ERR_SSL_BAD_HS_SERVER_KEY_EXCHANGE );
+        }
         sig_len = ( p[0] << 8 ) | p[1];
         p += 2;"
OSV-2018-231,"From e542162d9a96ad3bc7c05abace119cbbf2b184bc Mon Sep 17 00:00:00 2001
From: Roman Lebedev <lebedev.ri@gmail.com>
Date: Wed, 31 Jan 2018 16:09:20 +0300
Subject: [PATCH] PefDecoder: RawDecoder::decodeUncompressed(): do not catch
 exceptions.

---
 src/librawspeed/decoders/RawDecoder.cpp | 22 ++++------------------
 1 file changed, 4 insertions(+), 18 deletions(-)

diff --git a/src/librawspeed/decoders/RawDecoder.cpp b/src/librawspeed/decoders/RawDecoder.cpp
index fd07adcad..ee9786cdd 100644
--- a/src/librawspeed/decoders/RawDecoder.cpp
+++ b/src/librawspeed/decoders/RawDecoder.cpp
@@ -124,8 +124,7 @@ void RawDecoder::decodeUncompressed(const TiffIFD *rawIFD, BitOrder order) {
   mRaw->whitePoint = (1UL << bitPerPixel) - 1UL;
 
   offY = 0;
-  for (uint32 i = 0; i < slices.size(); i++) {
-    RawSlice slice = slices[i];
+  for (const RawSlice& slice : slices) {
     UncompressedDecompressor u(*mFile, slice.offset, slice.count, mRaw);
     iPoint2D size(width, slice.h);
     iPoint2D pos(0, offY);
@@ -135,22 +134,9 @@ void RawDecoder::decodeUncompressed(const TiffIFD *rawIFD, BitOrder order) {
     const auto inputPitch = width * bitPerPixel / 8;
     if (!inputPitch)
       ThrowRDE(""Bad input pitch. Can not decode anything."");
-    try {
-      u.readUncompressedRaw(size, pos, inputPitch, bitPerPixel, order);
-    } catch (RawDecoderException &e) {
-      if (i>0)
-        mRaw->setError(e.what());
-      else
-        throw;
-    } catch (IOException &e) {
-      if (i>0)
-        mRaw->setError(e.what());
-      else {
-        ThrowRDE(""IO error occurred in first slice, unable to decode more. ""
-                 ""Error is: %s"",
-                 e.what());
-      }
-    }
+
+    u.readUncompressedRaw(size, pos, inputPitch, bitPerPixel, order);
+
     offY += slice.h;
   }
 }"
CVE-2018-8754,"From 9d2cc3ca0a1612a6b271abcacffc2e3eea42925e Mon Sep 17 00:00:00 2001
From: Joachim Metz <joachim.metz@gmail.com>
Date: Sat, 17 Mar 2018 08:35:13 +0100
Subject: [PATCH] Applied updates and addition boundary checks for corrupted
 data

---
 configure.ac                  | 14 +++----
 libevt.nuspec                 |  4 +-
 libevt/libevt_libfvalue.h     |  1 +
 libevt/libevt_record_values.c | 35 ++++++++++++++++-
 m4/libcdata.m4                | 44 ++++++++++++++++++++-
 m4/libcsplit.m4               |  4 +-
 m4/libfdata.m4                | 73 ++++++++++++++++++++++++++++++++++-
 runtests.sh                   | 23 ++++++++++-
 8 files changed, 182 insertions(+), 16 deletions(-)

diff --git a/configure.ac b/configure.ac
index c90de8f..f51519d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -2,7 +2,7 @@ AC_PREREQ( 2.59 )
 
 AC_INIT(
  [libevt],
- [20180125],
+ [20180317],
  [joachim.metz@gmail.com])
 
 AC_CONFIG_SRCDIR(
@@ -48,6 +48,12 @@ AX_COMMON_CHECK_ENABLE_WINAPI
 dnl Check if wide character type should be enabled
 AX_COMMON_CHECK_ENABLE_WIDE_CHARACTER_TYPE
 
+dnl Check if verbose output should be enabled
+AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT
+
+dnl Check if debug output should be enabled
+AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT
+
 dnl Check for type definitions
 AX_TYPES_CHECK_LOCAL
 
@@ -146,12 +152,6 @@ AX_LIBCDIRECTORY_CHECK_ENABLE
 dnl Check if evttools required headers and functions are available
 AX_EVTTOOLS_CHECK_LOCAL
 
-dnl Check if libevt should be build with verbose output
-AX_COMMON_CHECK_ENABLE_VERBOSE_OUTPUT
-
-dnl Check if libevt should be build with debug output
-AX_COMMON_CHECK_ENABLE_DEBUG_OUTPUT
-
 dnl Check if tests required headers and functions are available
 AX_TESTS_CHECK_LOCAL
 
diff --git a/libevt.nuspec b/libevt.nuspec
index 3603086..a390283 100644
--- a/libevt.nuspec
+++ b/libevt.nuspec
@@ -2,7 +2,7 @@
 <package >
   <metadata>
     <id>libevt</id>
-    <version>20180125</version>
+    <version>20180317</version>
     <authors>Joachim Metz</authors>
     <owners>joachimmetz</owners>
     <licenseUrl>https://raw.githubusercontent.com/libyal/libevt/master/COPYING</licenseUrl>
@@ -10,7 +10,7 @@
     <requireLicenseAcceptance>false</requireLicenseAcceptance>
     <title>libevt</title>
     <description>Library to access the Windows Event Log (EVT) format</description>
-    <releaseNotes>Release of libevt 20180125</releaseNotes>
+    <releaseNotes>Release of libevt 20180317</releaseNotes>
     <copyright>Copyright (C) 2011-2018</copyright>
     <tags>native</tags>
   </metadata>
diff --git a/libevt/libevt_libfvalue.h b/libevt/libevt_libfvalue.h
index fb914f4..4dc9a4e 100644
--- a/libevt/libevt_libfvalue.h
+++ b/libevt/libevt_libfvalue.h
@@ -29,6 +29,7 @@
 #if defined( HAVE_LOCAL_LIBFVALUE )
 
 #include <libfvalue_codepage.h>
+#include <libfvalue_data_handle.h>
 #include <libfvalue_definitions.h>
 #include <libfvalue_floating_point.h>
 #include <libfvalue_integer.h>
diff --git a/libevt/libevt_record_values.c b/libevt/libevt_record_values.c
index 879dff2..c8f46a3 100644
--- a/libevt/libevt_record_values.c
+++ b/libevt/libevt_record_values.c
@@ -1157,6 +1157,17 @@ int libevt_record_values_read_event(
 	}
 	if( user_sid_size != 0 )
 	{
+		if( user_sid_size > ( ( record_data_size - 4 ) - user_sid_offset ) )
+		{
+			libcerror_error_set(
+			 error,
+			 LIBCERROR_ERROR_DOMAIN_RUNTIME,
+			 LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,
+			 ""%s: user SID data size value out of bounds."",
+			 function );
+
+			goto on_error;
+		}
 		if( libfvalue_value_type_initialize(
 		     &( record_values->user_security_identifier ),
 		     LIBFVALUE_VALUE_TYPE_NT_SECURITY_IDENTIFIER,
@@ -1218,6 +1229,17 @@ int libevt_record_values_read_event(
 	}
 	if( strings_size != 0 )
 	{
+		if( strings_size > ( ( record_data_size - 4 ) - strings_offset ) )
+		{
+			libcerror_error_set(
+			 error,
+			 LIBCERROR_ERROR_DOMAIN_RUNTIME,
+			 LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,
+			 ""%s: strings size value out of bounds."",
+			 function );
+
+			goto on_error;
+		}
 #if defined( HAVE_DEBUG_OUTPUT )
 		if( libcnotify_verbose != 0 )
 		{
@@ -1285,6 +1307,17 @@ int libevt_record_values_read_event(
 	}
 	if( data_size != 0 )
 	{
+		if( data_size > ( ( record_data_size - 4 ) - record_data_offset ) )
+		{
+			libcerror_error_set(
+			 error,
+			 LIBCERROR_ERROR_DOMAIN_RUNTIME,
+			 LIBCERROR_RUNTIME_ERROR_VALUE_OUT_OF_BOUNDS,
+			 ""%s: data size value out of bounds."",
+			 function );
+
+			goto on_error;
+		}
 #if defined( HAVE_DEBUG_OUTPUT )
 		if( libcnotify_verbose != 0 )
 		{
@@ -1292,7 +1325,7 @@ int libevt_record_values_read_event(
 			 ""%s: data:\n"",
 			 function );
 			libcnotify_print_data(
-			 &( record_data[ data_offset ] ),
+			 &( record_data[ record_data_offset ] ),
 			 (size_t) data_size,
 			 LIBCNOTIFY_PRINT_DATA_FLAG_GROUP_DATA );
 		}
diff --git a/m4/libcdata.m4 b/m4/libcdata.m4
index c19c04f..f4067aa 100644
--- a/m4/libcdata.m4
+++ b/m4/libcdata.m4
@@ -1,6 +1,6 @@
 dnl Checks for libcdata or required headers and functions
 dnl
-dnl Version: 20170904
+dnl Version: 20180316
 
 dnl Function to detect if libcdata is available
 dnl ac_libcdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments
@@ -123,6 +123,48 @@ AC_DEFUN([AX_LIBCDATA_CHECK_LIB],
           [ac_cv_libcdata_dummy=yes],
           [ac_cv_libcdata=no])
 
+        dnl Balanced tree functions
+        AC_CHECK_LIB(
+          cdata,
+          libfdata_btree_initialize,
+          [ac_cv_libcdata_dummy=yes],
+          [ac_cv_libcdata=no])
+        AC_CHECK_LIB(
+          cdata,
+          libcdata_btree_free,
+          [ac_cv_libcdata_dummy=yes],
+          [ac_cv_libcdata=no])
+        AC_CHECK_LIB(
+          cdata,
+          libcdata_btree_get_number_of_values,
+          [ac_cv_libcdata_dummy=yes],
+          [ac_cv_libcdata=no])
+        AC_CHECK_LIB(
+          cdata,
+          libcdata_btree_get_value_by_index,
+          [ac_cv_libcdata_dummy=yes],
+          [ac_cv_libcdata=no])
+        AC_CHECK_LIB(
+          cdata,
+          libcdata_btree_get_value_by_value,
+          [ac_cv_libcdata_dummy=yes],
+          [ac_cv_libcdata=no])
+        AC_CHECK_LIB(
+          cdata,
+          libcdata_btree_insert_value,
+          [ac_cv_libcdata_dummy=yes],
+          [ac_cv_libcdata=no])
+        AC_CHECK_LIB(
+          cdata,
+          libcdata_btree_replace_value,
+          [ac_cv_libcdata_dummy=yes],
+          [ac_cv_libcdata=no])
+        AC_CHECK_LIB(
+          cdata,
+          libcdata_btree_remove_value,
+          [ac_cv_libcdata_dummy=yes],
+          [ac_cv_libcdata=no])
+
         dnl List functions
         AC_CHECK_LIB(
           cdata,
diff --git a/m4/libcsplit.m4 b/m4/libcsplit.m4
index f49d839..c911016 100644
--- a/m4/libcsplit.m4
+++ b/m4/libcsplit.m4
@@ -1,6 +1,6 @@
 dnl Checks for libcsplit or required headers and functions
 dnl
-dnl Version: 20170903
+dnl Version: 20180217
 
 dnl Function to detect if libcsplit is available
 dnl ac_libcsplit_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments
@@ -111,7 +111,7 @@ AC_DEFUN([AX_LIBCSPLIT_CHECK_LIB],
         AS_IF(
           [test ""x$ac_cv_enable_wide_character_type"" != xno],
           [AC_CHECK_LIB(
-          csplit,
+            csplit,
             libcsplit_wide_string_split,
             [ac_cv_libcsplit_dummy=yes],
             [ac_cv_libcsplit=no])
diff --git a/m4/libfdata.m4 b/m4/libfdata.m4
index 3e7670d..6dfec55 100644
--- a/m4/libfdata.m4
+++ b/m4/libfdata.m4
@@ -1,6 +1,6 @@
 dnl Functions for libfdata
 dnl
-dnl Version: 20170905
+dnl Version: 20180316
 
 dnl Function to detect if libfdata is available
 dnl ac_libfdata_dummy is used to prevent AC_CHECK_LIB adding unnecessary -l<library> arguments
@@ -49,7 +49,76 @@ AC_DEFUN([AX_LIBFDATA_CHECK_LIB],
           [ac_cv_libfdata=no])
 
         dnl Area functions
-        dnl TODO: add functions
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_initialize,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_free,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_clone,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_empty,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_resize,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_get_number_of_segments,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_get_segment_by_index,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_set_segment_by_index,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_prepend_segment,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_append_segment,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_get_element_data_size,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_get_element_value_at_offset,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_set_element_value_at_offset,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
+        AC_CHECK_LIB(
+          fdata,
+          libfdata_area_get_size,
+          [ac_cv_libfdata_dummy=yes],
+          [ac_cv_libfdata=no])
 
         dnl Balanced tree functions
         dnl TODO: add functions
diff --git a/runtests.sh b/runtests.sh
index 49c7d09..0ef7640 100755
--- a/runtests.sh
+++ b/runtests.sh
@@ -1,7 +1,7 @@
 #!/bin/bash
 # Script that runs the tests
 #
-# Version: 20171210
+# Version: 20180214
 
 EXIT_SUCCESS=0;
 EXIT_FAILURE=1;
@@ -201,6 +201,14 @@ echo ""${CONFIGURE_HELP}"" | grep -- '--enable-wide-character-type' > /dev/null;
 
 HAVE_ENABLE_WIDE_CHARACTER_TYPE=$?;
 
+echo ""${CONFIGURE_HELP}"" | grep -- '--enable-verbose-output' > /dev/null;
+
+HAVE_ENABLE_VERBOSE_OUTPUT=$?;
+
+echo ""${CONFIGURE_HELP}"" | grep -- '--enable-debug-output' > /dev/null;
+
+HAVE_ENABLE_DEBUG_OUTPUT=$?;
+
 echo ""${CONFIGURE_HELP}"" | grep -- '--with-zlib' > /dev/null;
 
 HAVE_WITH_ZLIB=$?;
@@ -230,6 +238,19 @@ then
 	exit ${EXIT_FAILURE};
 fi
 
+if test ${HAVE_ENABLE_VERBOSE_OUTPUT} -eq 0 && test ${HAVE_ENABLE_DEBUG_OUTPUT} -eq 0;
+then
+	# Test ""./configure && make && make check"" with verbose and debug output.
+
+	run_configure_make_check ""--enable-verbose-output --enable-debug-output"";
+	RESULT=$?;
+
+	if test ${RESULT} -ne ${EXIT_SUCCESS};
+	then
+		exit ${EXIT_FAILURE};
+	fi
+fi
+
 if test ${HAVE_WITH_ZLIB} -eq 0;
 then
 	# Test ""./configure && make && make check"" with fallback zlib implementation."
CVE-2018-20226,"From 1aaf2182a6b722ad539e2717bc11967d1bde723a Mon Sep 17 00:00:00 2001
From: To-om <toom@thehive-project.org>
Date: Thu, 20 Dec 2018 11:58:39 +0100
Subject: [PATCH] #158 Fix checks in user creation

---
 app/org/thp/cortex/controllers/UserCtrl.scala | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/org/thp/cortex/controllers/UserCtrl.scala b/app/org/thp/cortex/controllers/UserCtrl.scala
index 7db3d66f1..3e2124bfb 100644
--- a/app/org/thp/cortex/controllers/UserCtrl.scala
+++ b/app/org/thp/cortex/controllers/UserCtrl.scala
@@ -42,7 +42,7 @@ class UserCtrl @Inject() (
       if organization.status() == OrganizationStatus.Active &&
         (request.roles.contains(Roles.superAdmin) ||
           (userOrganizationId == organizationId &&
-            !request.body.getStrings(""roles"").getOrElse(Nil).contains(Roles.superAdmin.toString)))
+            !request.body.getStrings(""roles"").getOrElse(Nil).contains(Roles.superAdmin.name)))
       user ← userSrv.create(request.body.set(""organization"", organizationId))
     } yield renderer.toOutput(CREATED, user))
       .recoverWith {"
CVE-2018-13301,"From 2aa9047486dbff12d9e040f917e5f799ed2fd78b Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Wed, 27 Jun 2018 19:37:09 +0200
Subject: [PATCH] avcodec/mpeg4videodec: Check read profile before setting it
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Fixes: null pointer dereference
Fixes: ffmpeg_crash_7.avi

Found-by: Thuan Pham, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
---
 libavcodec/mpeg4videodec.c | 23 +++++++++++++++--------
 1 file changed, 15 insertions(+), 8 deletions(-)

diff --git a/libavcodec/mpeg4videodec.c b/libavcodec/mpeg4videodec.c
index d0ebaac6e8e8c..54a84962444f4 100644
--- a/libavcodec/mpeg4videodec.c
+++ b/libavcodec/mpeg4videodec.c
@@ -1980,15 +1980,15 @@ static int mpeg4_decode_gop_header(MpegEncContext *s, GetBitContext *gb)
     return 0;
 }
 
-static int mpeg4_decode_profile_level(MpegEncContext *s, GetBitContext *gb)
+static int mpeg4_decode_profile_level(MpegEncContext *s, GetBitContext *gb, int *profile, int *level)
 {
 
-    s->avctx->profile = get_bits(gb, 4);
-    s->avctx->level   = get_bits(gb, 4);
+    *profile = get_bits(gb, 4);
+    *level   = get_bits(gb, 4);
 
     // for Simple profile, level 0
-    if (s->avctx->profile == 0 && s->avctx->level == 8) {
-        s->avctx->level = 0;
+    if (*profile == 0 && *level == 8) {
+        *level = 0;
     }
 
     return 0;
@@ -3211,13 +3211,19 @@ int ff_mpeg4_decode_picture_header(Mpeg4DecContext *ctx, GetBitContext *gb)
         } else if (startcode == GOP_STARTCODE) {
             mpeg4_decode_gop_header(s, gb);
         } else if (startcode == VOS_STARTCODE) {
-            mpeg4_decode_profile_level(s, gb);
-            if (s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO &&
-                (s->avctx->level > 0 && s->avctx->level < 9)) {
+            int profile, level;
+            mpeg4_decode_profile_level(s, gb, &profile, &level);
+            if (profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO &&
+                (level > 0 && level < 9)) {
                 s->studio_profile = 1;
                 next_start_code_studio(gb);
                 extension_and_user_data(s, gb, 0);
+            } else if (s->studio_profile) {
+                avpriv_request_sample(s->avctx, ""Mixes studio and non studio profile\n"");
+                return AVERROR_PATCHWELCOME;
             }
+            s->avctx->profile = profile;
+            s->avctx->level   = level;
         } else if (startcode == VISUAL_OBJ_STARTCODE) {
             if (s->studio_profile) {
                 if ((ret = decode_studiovisualobject(ctx, gb)) < 0)
@@ -3238,6 +3244,7 @@ int ff_mpeg4_decode_picture_header(Mpeg4DecContext *ctx, GetBitContext *gb)
     s->avctx->has_b_frames = !s->low_delay;
 
     if (s->studio_profile) {
+        av_assert0(s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO);
         if (!s->avctx->bits_per_raw_sample) {
             av_log(s->avctx, AV_LOG_ERROR, ""Missing VOL header\n"");
             return AVERROR_INVALIDDATA;"
CVE-2018-9839,"From 1fbcd9bca2f2c77cb61624d36ddee4b3802c38ea Mon Sep 17 00:00:00 2001
From: Damien Regad <dregad@mantisbt.org>
Date: Wed, 25 Apr 2018 18:31:45 +0200
Subject: [PATCH] Prevent cloning private issues by unauthorized users

Using a crafted request on bug_report_page.php (modifying the 'm_id'
parameter), any user with REPORTER access or above is able to view any
private issue's details (summary, description, steps to reproduce,
additional information) when cloning. By checking the 'Copy issue notes'
and 'Copy attachments' checkboxes and completing the clone operation,
this data also becomes public (except private notes).

Credits to Mustafa Hasan (strukt) strukt93@gmail.com for the finding.

@atrol noted that the same vulnerability also existed in bug_report.php,
although in this case the information disclosure is limited to notes and
attachments (issue data itself does not become accessible).

Added an access level check, so that the operation now fails with an
Access Denied error in both cases.

Fixes #24221, CVE-2018-9839
Prevent cloning private issues by unauthorized users

Using a crafted request on bug_report_page.php (modifying the 'm_id'
parameter), any user with REPORTER access or above is able to view any
private issue's details (summary, description, steps to reproduce,
additional information) when cloning. By checking the 'Copy issue notes'
and 'Copy attachments' checkboxes and completing the clone operation,
this data also becomes public (except private notes).

Added an access level check, so that the operation now fails with an
Access Denied error.

Credits to Mustafa Hasan (strukt) strukt93@gmail.com for the finding.

Fixes #24221
---
 bug_report.php      | 4 ++++
 bug_report_page.php | 3 +++
 2 files changed, 7 insertions(+)

diff --git a/bug_report.php b/bug_report.php
index 576ea2dc86..362f163409 100644
--- a/bug_report.php
+++ b/bug_report.php
@@ -69,6 +69,10 @@
 
 if( $f_master_bug_id > 0 ) {
 	bug_ensure_exists( $f_master_bug_id );
+
+	# User can view the master bug
+	access_ensure_bug_level( config_get( 'view_bug_threshold' ), $f_master_bug_id );
+
 	if( bug_is_readonly( $f_master_bug_id ) ) {
 		error_parameters( $f_master_bug_id );
 		trigger_error( ERROR_BUG_READ_ONLY_ACTION_DENIED, ERROR );
diff --git a/bug_report_page.php b/bug_report_page.php
index dd37a2763d..c4c5eb7202 100644
--- a/bug_report_page.php
+++ b/bug_report_page.php
@@ -89,6 +89,9 @@
 		trigger_error( ERROR_BUG_READ_ONLY_ACTION_DENIED, ERROR );
 	}
 
+	# User can view the master bug
+	access_ensure_bug_level( config_get( 'view_bug_threshold' ), $f_master_bug_id );
+
 	$t_bug = bug_get( $f_master_bug_id, true );
 
 	#@@@ (thraxisp) Note that the master bug is cloned into the same project as the master, independent of"
CVE-2018-9110,"From e6351557b86cc10a7651253d2d2aff7f6b918f8e Mon Sep 17 00:00:00 2001
From: nao-pon <hypweb@gmail.com>
Date: Wed, 28 Mar 2018 14:30:48 +0900
Subject: [PATCH] [php:security] re-fix directory traversal vulnerability for
 windows server

rel. commit 157f471d7e48f190f74e66eb5bc73360b5352fd3
---
 php/elFinder.class.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/php/elFinder.class.php b/php/elFinder.class.php
index bd2aa87a24..fec1143d8a 100644
--- a/php/elFinder.class.php
+++ b/php/elFinder.class.php
@@ -1624,7 +1624,7 @@ protected function zipdl($args) {
 			}
 			$file = $targets[1];
 			// checking the validity of the file parameter
-			if (strpos($file, DIRECTORY_SEPARATOR) !== false) {
+			if (strpos(str_replace('/', DIRECTORY_SEPARATOR, $file), DIRECTORY_SEPARATOR) !== false) {
 				return array('error' => 'File not found', 'header' => $h404, 'raw' => true);
 			}
 			$path = $volume->getTempPath().DIRECTORY_SEPARATOR.$file;"
CVE-2018-12320,"From 90b71c017a7fa9732fe45fd21b245ee051b1f548 Mon Sep 17 00:00:00 2001
From: pancake <pancake@nopcode.org>
Date: Mon, 11 Jun 2018 03:28:35 +0200
Subject: [PATCH] Fix #10293 - Use-after-free in r_anal_bb_free()

---
 libr/anal/bb.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/libr/anal/bb.c b/libr/anal/bb.c
index 81c5fab143219..a693c55856df2 100644
--- a/libr/anal/bb.c
+++ b/libr/anal/bb.c
@@ -62,7 +62,11 @@ R_API void r_anal_bb_free(RAnalBlock *bb) {
 		bb->failbb->prev = NULL;
 		bb->failbb = NULL;
 	}
-	R_FREE (bb);
+	if (bb->next) {
+		// avoid double free
+		bb->next->prev = NULL;
+	}
+	R_FREE (bb); // double free
 }
 
 R_API RList *r_anal_bb_list_new() {"
CVE-2018-5332,"From c095508770aebf1b9218e77026e48345d719b17c Mon Sep 17 00:00:00 2001
From: Mohamed Ghannam <simo.ghannam@gmail.com>
Date: Tue, 2 Jan 2018 19:44:34 +0000
Subject: [PATCH] RDS: Heap OOB write in rds_message_alloc_sgs()

When args->nr_local is 0, nr_pages gets also 0 due some size
calculation via rds_rm_size(), which is later used to allocate
pages for DMA, this bug produces a heap Out-Of-Bound write access
to a specific memory region.

Signed-off-by: Mohamed Ghannam <simo.ghannam@gmail.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 net/rds/rdma.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/net/rds/rdma.c b/net/rds/rdma.c
index bc2f1e0977d657..94729d9da43721 100644
--- a/net/rds/rdma.c
+++ b/net/rds/rdma.c
@@ -525,6 +525,9 @@ int rds_rdma_extra_size(struct rds_rdma_args *args)
 
 	local_vec = (struct rds_iovec __user *)(unsigned long) args->local_vec_addr;
 
+	if (args->nr_local == 0)
+		return -EINVAL;
+
 	/* figure out the number of pages in the vector */
 	for (i = 0; i < args->nr_local; i++) {
 		if (copy_from_user(&vec, &local_vec[i],"
CVE-2018-20724,"From 1f42478506d83d188f68ce5ff41728a7bd159f53 Mon Sep 17 00:00:00 2001
From: cigamit <jimmy@sqmail.org>
Date: Sat, 15 Dec 2018 08:16:10 -0600
Subject: [PATCH] Resolving Issue #2212

Stored XSS in ""Website Hostname"" field
---
 CHANGELOG   | 1 +
 pollers.php | 2 +-
 2 files changed, 2 insertions(+), 1 deletion(-)

diff --git a/CHANGELOG b/CHANGELOG
index 5593a39d2a..52558e8a52 100644
--- a/CHANGELOG
+++ b/CHANGELOG
@@ -5,6 +5,7 @@ Cacti CHANGELOG
 -issue#2191: i18n_themes is not properly primed in global_arrays.php
 -issue#2202: Can't create more than one graph with add_graphs.php from one template
 -issue#2207: Removing Graph Template does not Remove Data Query Associations
+-issue#2212: Stored XSS in ""Website Hostname"" field
 -feature: Update phpseclib to version 2.0.12
 
 1.2.0 Beta 4
diff --git a/pollers.php b/pollers.php
index 793ddfbf6c..01262f62c2 100644
--- a/pollers.php
+++ b/pollers.php
@@ -849,7 +849,7 @@ function clearFilter() {
 			form_alternate_row('line' . $poller['id'], true, $disabled);
 			form_selectable_cell(filter_value($poller['name'], get_request_var('filter'), 'pollers.php?action=edit&id=' . $poller['id']), $poller['id']);
 			form_selectable_cell($poller['id'], $poller['id'], '', 'right');
-			form_selectable_cell($poller['hostname'], $poller['id'], '', 'right');
+			form_selectable_cell(html_escape($poller['hostname']), $poller['id'], '', 'right');
 			form_selectable_cell($poller_status[$poller['status']], $poller['id'], '', 'center');
 			form_selectable_cell($poller['processes'] . '/' . $poller['threads'], $poller['id'], '', 'right');
 			form_selectable_cell(number_format_i18n($poller['total_time'], 2), $poller['id'], '', 'right');"
CVE-2018-11117,"From ff9bf29858f2dbffe828711a6f8bf37038c00d77 Mon Sep 17 00:00:00 2001
From: Alexander Killing <killing@leifos.de>
Date: Fri, 11 May 2018 14:05:57 +0200
Subject: [PATCH] fixed 23026: link attribute

---
 Services/Feeds/classes/class.ilExternalFeedItem.php | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/Services/Feeds/classes/class.ilExternalFeedItem.php b/Services/Feeds/classes/class.ilExternalFeedItem.php
index 079ffbd43e93..aa3d7426fd6a 100644
--- a/Services/Feeds/classes/class.ilExternalFeedItem.php
+++ b/Services/Feeds/classes/class.ilExternalFeedItem.php
@@ -32,17 +32,16 @@ function setMagpieItem($a_item)
 		if (isset($a_item[""link_""]))
 		{
 			$this->setLink(
-				ilUtil::secureLink($this->secureString($a_item[""link_""])));
+				ilUtil::secureUrl(ilUtil::secureLink($this->secureString($a_item[""link_""]))));
 		}
 		else
 		{
 			if (isset($a_item[""link""]))
 			{
 				$this->setLink(
-					ilUtil::secureLink($this->secureString($a_item[""link""])));
+					ilUtil::secureUrl(ilUtil::secureLink($this->secureString($a_item[""link""]))));
 			}
 		}
-		
 		// summary
 		if (isset($a_item[""atom_content""]))
 		{"
CVE-2018-11245,"From 5efc07b12f82301a6086fd3433fedd69fe7119d3 Mon Sep 17 00:00:00 2001
From: iglocska <andras.iklody@gmail.com>
Date: Fri, 18 May 2018 07:27:06 +0200
Subject: [PATCH] fix: Fixed a DOM based XSS with cortex type attributes

- as reported by Dawid Czarnecki (dawid@pz.pl)
---
 app/webroot/js/misp.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/webroot/js/misp.js b/app/webroot/js/misp.js
index 1a81951da54..510115207f9 100644
--- a/app/webroot/js/misp.js
+++ b/app/webroot/js/misp.js
@@ -3160,7 +3160,7 @@ function submitMISPUpdate() {
 
 $("".cortex-json"").click(function() {
 	var cortex_data = $(this).data('cortex-json');
-	cortex_data = JSON.stringify(cortex_data, null, 2);
+	cortex_data = htmlEncode(JSON.stringify(cortex_data, null, 2));
 	var popupHtml = '<pre class=""simplepre"">' + cortex_data + '</pre>';
 	popupHtml += '<div class=""close-icon useCursorPointer"" onClick=""closeScreenshot();""></div>';
 	$('#screenshot_box').html(popupHtml);"
CVE-2018-18397,"From 29ec90660d68bbdd69507c1c8b4e33aa299278b1 Mon Sep 17 00:00:00 2001
From: Andrea Arcangeli <aarcange@redhat.com>
Date: Fri, 30 Nov 2018 14:09:32 -0800
Subject: [PATCH] userfaultfd: shmem/hugetlbfs: only allow to register
 VM_MAYWRITE vmas

After the VMA to register the uffd onto is found, check that it has
VM_MAYWRITE set before allowing registration.  This way we inherit all
common code checks before allowing to fill file holes in shmem and
hugetlbfs with UFFDIO_COPY.

The userfaultfd memory model is not applicable for readonly files unless
it's a MAP_PRIVATE.

Link: http://lkml.kernel.org/r/20181126173452.26955-4-aarcange@redhat.com
Fixes: ff62a3421044 (""hugetlb: implement memfd sealing"")
Signed-off-by: Andrea Arcangeli <aarcange@redhat.com>
Reviewed-by: Mike Rapoport <rppt@linux.ibm.com>
Reviewed-by: Hugh Dickins <hughd@google.com>
Reported-by: Jann Horn <jannh@google.com>
Fixes: 4c27fe4c4c84 (""userfaultfd: shmem: add shmem_mcopy_atomic_pte for userfaultfd support"")
Cc: <stable@vger.kernel.org>
Cc: ""Dr. David Alan Gilbert"" <dgilbert@redhat.com>
Cc: Mike Kravetz <mike.kravetz@oracle.com>
Cc: Peter Xu <peterx@redhat.com>
Cc: stable@vger.kernel.org
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---
 fs/userfaultfd.c | 15 +++++++++++++++
 mm/userfaultfd.c | 15 ++++++---------
 2 files changed, 21 insertions(+), 9 deletions(-)

diff --git a/fs/userfaultfd.c b/fs/userfaultfd.c
index 356d2b8568c142..cd58939dc977e4 100644
--- a/fs/userfaultfd.c
+++ b/fs/userfaultfd.c
@@ -1361,6 +1361,19 @@ static int userfaultfd_register(struct userfaultfd_ctx *ctx,
 		ret = -EINVAL;
 		if (!vma_can_userfault(cur))
 			goto out_unlock;
+
+		/*
+		 * UFFDIO_COPY will fill file holes even without
+		 * PROT_WRITE. This check enforces that if this is a
+		 * MAP_SHARED, the process has write permission to the backing
+		 * file. If VM_MAYWRITE is set it also enforces that on a
+		 * MAP_SHARED vma: there is no F_WRITE_SEAL and no further
+		 * F_WRITE_SEAL can be taken until the vma is destroyed.
+		 */
+		ret = -EPERM;
+		if (unlikely(!(cur->vm_flags & VM_MAYWRITE)))
+			goto out_unlock;
+
 		/*
 		 * If this vma contains ending address, and huge pages
 		 * check alignment.
@@ -1406,6 +1419,7 @@ static int userfaultfd_register(struct userfaultfd_ctx *ctx,
 		BUG_ON(!vma_can_userfault(vma));
 		BUG_ON(vma->vm_userfaultfd_ctx.ctx &&
 		       vma->vm_userfaultfd_ctx.ctx != ctx);
+		WARN_ON(!(vma->vm_flags & VM_MAYWRITE));
 
 		/*
 		 * Nothing to do: this vma is already registered into this
@@ -1552,6 +1566,7 @@ static int userfaultfd_unregister(struct userfaultfd_ctx *ctx,
 		cond_resched();
 
 		BUG_ON(!vma_can_userfault(vma));
+		WARN_ON(!(vma->vm_flags & VM_MAYWRITE));
 
 		/*
 		 * Nothing to do: this vma is already registered into this
diff --git a/mm/userfaultfd.c b/mm/userfaultfd.c
index 471b6457f95f12..43cf314cfddd5e 100644
--- a/mm/userfaultfd.c
+++ b/mm/userfaultfd.c
@@ -205,8 +205,9 @@ static __always_inline ssize_t __mcopy_atomic_hugetlb(struct mm_struct *dst_mm,
 		if (!dst_vma || !is_vm_hugetlb_page(dst_vma))
 			goto out_unlock;
 		/*
-		 * Only allow __mcopy_atomic_hugetlb on userfaultfd
-		 * registered ranges.
+		 * Check the vma is registered in uffd, this is
+		 * required to enforce the VM_MAYWRITE check done at
+		 * uffd registration time.
 		 */
 		if (!dst_vma->vm_userfaultfd_ctx.ctx)
 			goto out_unlock;
@@ -459,13 +460,9 @@ static __always_inline ssize_t __mcopy_atomic(struct mm_struct *dst_mm,
 	if (!dst_vma)
 		goto out_unlock;
 	/*
-	 * Be strict and only allow __mcopy_atomic on userfaultfd
-	 * registered ranges to prevent userland errors going
-	 * unnoticed. As far as the VM consistency is concerned, it
-	 * would be perfectly safe to remove this check, but there's
-	 * no useful usage for __mcopy_atomic ouside of userfaultfd
-	 * registered ranges. This is after all why these are ioctls
-	 * belonging to the userfaultfd and not syscalls.
+	 * Check the vma is registered in uffd, this is required to
+	 * enforce the VM_MAYWRITE check done at uffd registration
+	 * time.
 	 */
 	if (!dst_vma->vm_userfaultfd_ctx.ctx)
 		goto out_unlock;"
CVE-2018-14464,"From d97e94223720684c6aa740ff219e0d19426c2220 Mon Sep 17 00:00:00 2001
From: Francois-Xavier Le Bail <devel.fx.lebail@orange.fr>
Date: Tue, 17 Oct 2017 21:56:46 +0200
Subject: [PATCH] (for 4.9.3) CVE-2018-14464/LMP: Add a missing bounds check

In lmp_print_data_link_subobjs().

This fixes a buffer over-read discovered by Bhargava Shastry,
SecT/TU Berlin.

Add a test using the capture file supplied by the reporter(s).
---
 print-lmp.c                                   |  20 ++++++++++++----
 tests/TESTLIST                                |   1 +
 .../lmp-lmp_print_data_link_subobjs-oobr.out  |  22 ++++++++++++++++++
 .../lmp-lmp_print_data_link_subobjs-oobr.pcap | Bin 0 -> 11547 bytes
 4 files changed, 39 insertions(+), 4 deletions(-)
 create mode 100644 tests/lmp-lmp_print_data_link_subobjs-oobr.out
 create mode 100644 tests/lmp-lmp_print_data_link_subobjs-oobr.pcap

diff --git a/print-lmp.c b/print-lmp.c
index 2edbb5813..ee126a019 100644
--- a/print-lmp.c
+++ b/print-lmp.c
@@ -399,6 +399,7 @@ lmp_print_data_link_subobjs(netdissect_options *ndo, const u_char *obj_tptr,
 			""Unknown"",
 			EXTRACT_8BITS(obj_tptr + offset + 3)),
 			EXTRACT_8BITS(obj_tptr + offset + 3)));
+	    ND_TCHECK_32BITS(obj_tptr + offset + 4);
 	    bw.i = EXTRACT_32BITS(obj_tptr+offset+4);
 	    ND_PRINT((ndo, ""\n\t      Min Reservable Bandwidth: %.3f Mbps"",
                 bw.f*8/1000000));
@@ -419,6 +420,8 @@ lmp_print_data_link_subobjs(netdissect_options *ndo, const u_char *obj_tptr,
 	offset+=subobj_len;
     }
     return (hexdump);
+trunc:
+    return -1;
 }
 
 void
@@ -429,7 +432,7 @@ lmp_print(netdissect_options *ndo,
     const struct lmp_object_header *lmp_obj_header;
     const u_char *tptr,*obj_tptr;
     u_int tlen,lmp_obj_len,lmp_obj_ctype,obj_tlen;
-    int hexdump;
+    int hexdump, ret;
     u_int offset;
     u_int link_type;
 
@@ -731,7 +734,10 @@ lmp_print(netdissect_options *ndo,
                        ipaddr_string(ndo, obj_tptr+8),
                        EXTRACT_32BITS(obj_tptr+8)));
 
-		if (lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 12, 12))
+		ret = lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 12, 12);
+		if (ret == -1)
+		    goto trunc;
+		if (ret == TRUE)
 		    hexdump=TRUE;
 		break;
 
@@ -751,7 +757,10 @@ lmp_print(netdissect_options *ndo,
                        ip6addr_string(ndo, obj_tptr+20),
                        EXTRACT_32BITS(obj_tptr+20)));
 
-		if (lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 36, 36))
+		ret = lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 36, 36);
+		if (ret == -1)
+		    goto trunc;
+		if (ret == TRUE)
 		    hexdump=TRUE;
 		break;
 
@@ -771,7 +780,10 @@ lmp_print(netdissect_options *ndo,
                        EXTRACT_32BITS(obj_tptr+8),
                        EXTRACT_32BITS(obj_tptr+8)));
 
-		if (lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 12, 12))
+		ret = lmp_print_data_link_subobjs(ndo, obj_tptr, obj_tlen - 12, 12);
+		if (ret == -1)
+		    goto trunc;
+		if (ret == TRUE)
 		    hexdump=TRUE;
 		break;
 
diff --git a/tests/TESTLIST b/tests/TESTLIST
index 5d379ea4d..6ea71af1b 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -560,6 +560,7 @@ vrrp-vrrp_print-oobr vrrp-vrrp_print-oobr.pcap vrrp-vrrp_print-oobr.out -v -c3
 vrrp-vrrp_print-oobr-2 vrrp-vrrp_print-oobr-2.pcap vrrp-vrrp_print-oobr-2.out -v
 bgp-bgp_capabilities_print-oobr-1 bgp-bgp_capabilities_print-oobr-1.pcap bgp-bgp_capabilities_print-oobr-1.out -v -c1
 bgp-bgp_capabilities_print-oobr-2 bgp-bgp_capabilities_print-oobr-2.pcap bgp-bgp_capabilities_print-oobr-2.out -v -c1
+lmp-lmp_print_data_link_subobjs-oobr lmp-lmp_print_data_link_subobjs-oobr.pcap lmp-lmp_print_data_link_subobjs-oobr.out -v -c2
 # The .pcap file is truncated after the 1st packet.
 hncp_dhcpv6data-oobr	hncp_dhcpv6data-oobr.pcap	hncp_dhcpv6data-oobr.out -v -c1
 hncp_dhcpv4data-oobr	hncp_dhcpv4data-oobr.pcap	hncp_dhcpv4data-oobr.out -v -c1
diff --git a/tests/lmp-lmp_print_data_link_subobjs-oobr.out b/tests/lmp-lmp_print_data_link_subobjs-oobr.out
new file mode 100644
index 000000000..6709b26b7
--- /dev/null
+++ b/tests/lmp-lmp_print_data_link_subobjs-oobr.out
@@ -0,0 +1,22 @@
+IP (tos 0xfd,ECT(1), ttl 254, id 45839, offset 0, flags [+, DF, rsvd], proto UDP (17), length 56871, bad cksum fe07 (->ddf0)!)
+    17.8.8.255.701 > 40.184.42.8.12: 
+	LMPv1, msg-type: unknown, type: 249, Flags: [none], length: 212
+	  Data Link Object (12), Class-Type: Unnumbered (3) Flags: [non-negotiable], length: 20
+	    Flags: [none]
+	    Local Interface ID: 2435832538 (0x912fdada)
+	    Remote Interface ID: 3657433088 (0xda000000)
+	    Subobject, Type: Interface Switching Type (1), Length: 4
+	      Switching Type: Unknown (0)
+	      Encoding Type: Unknown (0)
+		 packet exceeded snapshot
+IP (tos 0xfd,ECT(1), ttl 254, id 45839, offset 0, flags [+, DF, rsvd], proto UDP (17), length 56871, bad cksum fe07 (->ddf0)!)
+    17.8.8.255.701 > 40.184.42.8.12: 
+	LMPv1, msg-type: unknown, type: 249, Flags: [none], length: 212
+	  Data Link Object (12), Class-Type: Unnumbered (3) Flags: [non-negotiable], length: 20
+	    Flags: [none]
+	    Local Interface ID: 2435832538 (0x912fdada)
+	    Remote Interface ID: 3657433088 (0xda000000)
+	    Subobject, Type: Interface Switching Type (1), Length: 4
+	      Switching Type: Unknown (0)
+	      Encoding Type: Unknown (0)
+		 packet exceeded snapshot
diff --git a/tests/lmp-lmp_print_data_link_subobjs-oobr.pcap b/tests/lmp-lmp_print_data_link_subobjs-oobr.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..d1a6ad99739810e23061ca802a6dea93fd5c039f
GIT binary patch
literal 11547
zcmeI&F-ikL6vpw-jpC>)af1fi1W~c^3N{j~E#eux#Oe_OA&m&JN@JxUS_mt-!d5Fp
zu?Tk763pc3HX;aGDan6em|=L#<NfL{?OvP(nwFlWC#|U_Y0CEE)xmzb5cKPIuiDE^
zIM`dNBzH;s<kV^Rt+#PmeAF-+&PLAp&Fd`}+$xNdhAT<0O1mnATDJO5V>`>T_g}3^
z_2ai#3wF-jA0<{RYZEDNbL_nz9JZS2&R?~eXCZ(90tg_0z_<#`y^QN*%!L2~2q1s}
z0tg_000IagfB*srAb`Mx2&_-YoQ#P80tg_000IagfB*srAb`Lx1-^uN&%X=v=9%Hu
c6^rl2#omL@Gs6}W{y~^m^8VjuhCj!WN8S-!CIA2c

literal 0
HcmV?d00001"
CVE-2018-13304,"From bd27a9364ca274ca97f1df6d984e88a0700fb235 Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Tue, 3 Jul 2018 00:27:04 +0200
Subject: [PATCH] avcodec/mpeg4videodec: Remove use of
 FF_PROFILE_MPEG4_SIMPLE_STUDIO as indicator of studio profile
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The profile field is changed by code inside and outside the decoder,
its not a reliable indicator of the internal codec state.
Maintaining it consistency with studio_profile is messy.
Its easier to just avoid it and use only studio_profile

Fixes: assertion failure
Fixes: ffmpeg_crash_9.avi

Found-by: Thuan Pham, Marcel Böhme, Andrew Santosa and Alexandru Razvan Caciulescu with AFLSmart
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
---
 libavcodec/error_resilience.c | 3 +--
 libavcodec/h263dec.c          | 6 ++++--
 libavcodec/mpeg4videodec.c    | 1 -
 3 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/libavcodec/error_resilience.c b/libavcodec/error_resilience.c
index 339042e2069fc..1abae53f41d41 100644
--- a/libavcodec/error_resilience.c
+++ b/libavcodec/error_resilience.c
@@ -814,8 +814,7 @@ static int er_supported(ERContext *s)
 {
     if(s->avctx->hwaccel && s->avctx->hwaccel->decode_slice           ||
        !s->cur_pic.f                                                  ||
-       s->cur_pic.field_picture                                       ||
-       s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO
+       s->cur_pic.field_picture
     )
         return 0;
     return 1;
diff --git a/libavcodec/h263dec.c b/libavcodec/h263dec.c
index f8a38083f23cf..5967fca2858ab 100644
--- a/libavcodec/h263dec.c
+++ b/libavcodec/h263dec.c
@@ -47,9 +47,10 @@
 
 static enum AVPixelFormat h263_get_format(AVCodecContext *avctx)
 {
+    MpegEncContext *s = avctx->priv_data;
     /* MPEG-4 Studio Profile only, not supported by hardware */
     if (avctx->bits_per_raw_sample > 8) {
-        av_assert1(avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO);
+        av_assert1(s->studio_profile);
         return avctx->pix_fmt;
     }
 
@@ -670,7 +671,8 @@ int ff_h263_decode_frame(AVCodecContext *avctx, void *data, int *got_frame,
 
     av_assert1(s->bitstream_buffer_size == 0);
 frame_end:
-    ff_er_frame_end(&s->er);
+    if (!s->studio_profile)
+        ff_er_frame_end(&s->er);
 
     if (avctx->hwaccel) {
         ret = avctx->hwaccel->end_frame(avctx);
diff --git a/libavcodec/mpeg4videodec.c b/libavcodec/mpeg4videodec.c
index 54a84962444f4..2df525e03a781 100644
--- a/libavcodec/mpeg4videodec.c
+++ b/libavcodec/mpeg4videodec.c
@@ -3244,7 +3244,6 @@ int ff_mpeg4_decode_picture_header(Mpeg4DecContext *ctx, GetBitContext *gb)
     s->avctx->has_b_frames = !s->low_delay;
 
     if (s->studio_profile) {
-        av_assert0(s->avctx->profile == FF_PROFILE_MPEG4_SIMPLE_STUDIO);
         if (!s->avctx->bits_per_raw_sample) {
             av_log(s->avctx, AV_LOG_ERROR, ""Missing VOL header\n"");
             return AVERROR_INVALIDDATA;"
CVE-2018-18308,"From ffd668a3aa7d2f540dbcdf5751f207302519df72 Mon Sep 17 00:00:00 2001
From: Tim Buckingham <mr@timbuckingham.com>
Date: Tue, 25 Dec 2018 18:21:15 -0500
Subject: [PATCH] Fixing XSS on file names that fail to upload

---
 core/admin/ajax/file-browser/upload.php | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/core/admin/ajax/file-browser/upload.php b/core/admin/ajax/file-browser/upload.php
index 414e24120..5453dec7f 100755
--- a/core/admin/ajax/file-browser/upload.php
+++ b/core/admin/ajax/file-browser/upload.php
@@ -48,6 +48,7 @@
 			// Throw a growl error
 			if ($error) {
 				$file_name = htmlspecialchars($file_name);
+				
 				if ($error == 2 || $error == 1) {
 					$errors[] = $file_name."" was too large "".BigTree::formatBytes(BigTree::uploadMaxFileSize())."" max)"";
 				} else {
@@ -79,9 +80,9 @@
 						// If we failed, either cloud storage upload failed, directory permissions are bad, or the file type isn't permitted
 						if (!$file) {
 							if ($storage->DisabledFileError) {
-								$errors[] = ""$file_name has a disallowed extension: $extension."";
+								$errors[] = htmlspecialchars($file_name)."" has a disallowed extension: $extension."";
 							} else {
-								$errors[] = ""Uploading $file_name failed (unknown error)."";
+								$errors[] = ""Uploading "".htmlspecialchars($file_name)."" failed (unknown error)."";
 							}
 						// Otherwise make the database entry for the file we uplaoded.
 						} else {
@@ -138,7 +139,7 @@
 							}
 						} else {
 							$last_error = array_pop($bigtree[""errors""]);
-							$errors[] = $last_error[""error""];
+							$errors[] = BigTree::safeEncode($last_error[""error""]);
 						}
 					}
 				}"
CVE-2018-9275,"From 0f6ceabab0a8849b47f67d727aa526c2656089ba Mon Sep 17 00:00:00 2001
From: Klas Lindfors <klas@yubico.com>
Date: Tue, 3 Apr 2018 09:19:53 +0200
Subject: [PATCH] util: make sure to close the authfile before returning
 success

fixes #136
---
 util.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/util.c b/util.c
index 6cb4a791..32bca06a 100644
--- a/util.c
+++ b/util.c
@@ -167,6 +167,8 @@ check_user_token (const char *authfile,
 		{
 		  if(verbose)
 		      D (debug_file, ""Match user/token as %s/%s"", username, otp_id);
+
+		  fclose(opwfile);
 		  return AUTH_FOUND;
 		}
 	    }"
CVE-2018-13982,"From 8d21f38dc35c4cd6b31c2f23fc9b8e5adbc56dfe Mon Sep 17 00:00:00 2001
From: Uwe Tews <uwe.tews@gmail.com>
Date: Tue, 24 Apr 2018 10:38:18 +0200
Subject: [PATCH] - bugfix  possible Security Vulnerability in Smarty_Security
 class.

---
 change_log.txt                      |   3 +
 libs/Smarty.class.php               |  24 ++++---
 libs/sysplugins/smarty_security.php | 107 ++++++++++++++--------------
 3 files changed, 73 insertions(+), 61 deletions(-)

diff --git a/change_log.txt b/change_log.txt
index f92af8405..a3ebcc36b 100644
--- a/change_log.txt
+++ b/change_log.txt
@@ -1,4 +1,7 @@
 ﻿===== 3.1.32 - dev ===
+24.04.2018
+ - bugfix  possible Security Vulnerability in Smarty_Security class.
+
 26.03.2018
  - bugfix plugins may not be loaded if {function} or {block} tags are executed in nocache mode
    https://github.com/smarty-php/smarty/issues/371
diff --git a/libs/Smarty.class.php b/libs/Smarty.class.php
index d9e96703b..aba244415 100644
--- a/libs/Smarty.class.php
+++ b/libs/Smarty.class.php
@@ -112,7 +112,7 @@ class Smarty extends Smarty_Internal_TemplateBase
     /**
      * smarty version
      */
-    const SMARTY_VERSION = '3.1.32-dev-45';
+    const SMARTY_VERSION = '3.1.32-dev-46';
     /**
      * define variable scopes
      */
@@ -1042,9 +1042,15 @@ public function _getTemplateId($template_name,
      */
     public function _realpath($path, $realpath = null)
     {
-        $nds = DIRECTORY_SEPARATOR === '/' ? '\\' : '/';
+        static $nds = array('/' => '\\', '\\' => '/');
+        static $sepDotsep = DIRECTORY_SEPARATOR . '.' . DIRECTORY_SEPARATOR;
+        static $sepDot = DIRECTORY_SEPARATOR . '.';
+        static $sepSep = DIRECTORY_SEPARATOR . DIRECTORY_SEPARATOR;
         // normalize DIRECTORY_SEPARATOR
-        $path = str_replace($nds, DIRECTORY_SEPARATOR, $path);
+        $path = str_replace(array($nds[DIRECTORY_SEPARATOR], $sepDotsep), DIRECTORY_SEPARATOR, $path);
+        if (strpos($path,$sepDot) === false && (($realpath === false && $path[0] === '.') || $realpath === null) && $path[0] !== '\\') {
+            return $path;
+        }
         preg_match('%^(?<root>(?:[[:alpha:]]:[\\\\]|/|[\\\\]{2}[[:alpha:]]+|[[:print:]]{2,}:[/]{2}|[\\\\])?)(?<path>(.*))$%u',
                    $path,
                    $parts);
@@ -1056,11 +1062,11 @@ public function _realpath($path, $realpath = null)
                 $path = getcwd() . DIRECTORY_SEPARATOR . $path;
             }
         }
-        // remove noop 'DIRECTORY_SEPARATOR DIRECTORY_SEPARATOR' and 'DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR' patterns
-        $path = preg_replace('#([\\\\/]([.]?[\\\\/])+)#u', DIRECTORY_SEPARATOR, $path);
+       // remove noop 'DIRECTORY_SEPARATOR DIRECTORY_SEPARATOR' and 'DIRECTORY_SEPARATOR.DIRECTORY_SEPARATOR' patterns
+        $path = str_replace(array($sepDotsep,$sepSep), DIRECTORY_SEPARATOR, $path);
         // resolve '..DIRECTORY_SEPARATOR' pattern, smallest first
         if (strpos($path, '..' . DIRECTORY_SEPARATOR) !== false &&
-            preg_match_all('#(([.]?[\\\\/])*([.][.])[\\\\/]([.]?[\\\\/])*)+#u', $path, $match)
+            preg_match_all('#[\\\\/]([.][.][\\\\/])+#u', $path, $match)
         ) {
             $counts = array();
             foreach ($match[ 0 ] as $m) {
@@ -1068,13 +1074,13 @@ public function _realpath($path, $realpath = null)
             }
             sort($counts);
             foreach ($counts as $count) {
-                $path = preg_replace('#(([\\\\/]([.]?[\\\\/])*[^\\\\/.]+){' . $count .
-                                     '}[\\\\/]([.]?[\\\\/])*([.][.][\\\\/]([.]?[\\\\/])*){' . $count . '})(?=[^.])#u',
+                $path = preg_replace('#([\\\\/]+[^\\\\/]+){' . $count .
+                                     '}[\\\\/]+([.][.][\\\\/]+){' . $count . '}#u',
                                      DIRECTORY_SEPARATOR,
                                      $path);
             }
         }
-        return $parts[ 'root' ] . $path;
+        return $realpath !== false ? $parts[ 'root' ] . $path : str_ireplace(getcwd(), '.', $parts[ 'root' ] . $path);
     }
 
     /**
diff --git a/libs/sysplugins/smarty_security.php b/libs/sysplugins/smarty_security.php
index e501cd825..126f6fb46 100644
--- a/libs/sysplugins/smarty_security.php
+++ b/libs/sysplugins/smarty_security.php
@@ -514,60 +514,39 @@ public function isTrustedStream($stream_name)
     public function isTrustedResourceDir($filepath, $isConfig = null)
     {
         if ($this->_include_path_status !== $this->smarty->use_include_path) {
-            foreach ($this->_include_dir as $directory) {
-                unset($this->_resource_dir[ $directory ]);
-            }
-            if ($this->smarty->use_include_path) {
-                $this->_include_dir = array();
-                $_dirs = $this->smarty->ext->_getIncludePath->getIncludePathDirs($this->smarty);
-                foreach ($_dirs as $directory) {
-                    $this->_include_dir[] = $directory;
-                    $this->_resource_dir[ $directory ] = true;
-                }
+            $_dir = $this->smarty->use_include_path ? $this->smarty->ext->_getIncludePath->getIncludePathDirs($this->smarty) : array();
+            if ($this->_include_dir !== $_dir) {
+                $this->_updateResourceDir($this->_include_dir, $_dir);
+                $this->_include_dir = $_dir;
             }
             $this->_include_path_status = $this->smarty->use_include_path;
         }
-        if ($isConfig !== true &&
-            (!isset($this->smarty->_cache[ 'template_dir_new' ]) || $this->smarty->_cache[ 'template_dir_new' ])
-        ) {
+        if ($isConfig !== true) {
             $_dir = $this->smarty->getTemplateDir();
             if ($this->_template_dir !== $_dir) {
-                foreach ($this->_template_dir as $directory) {
-                    unset($this->_resource_dir[ $directory ]);
-                }
-                foreach ($_dir as $directory) {
-                    $this->_resource_dir[ $directory ] = true;
-                }
+                $this->_updateResourceDir($this->_template_dir, $_dir);
                 $this->_template_dir = $_dir;
             }
-            $this->smarty->_cache[ 'template_dir_new' ] = false;
         }
-        if ($isConfig !== false &&
-            (!isset($this->smarty->_cache[ 'config_dir_new' ]) || $this->smarty->_cache[ 'config_dir_new' ])
-        ) {
+        if ($isConfig !== false) {
             $_dir = $this->smarty->getConfigDir();
             if ($this->_config_dir !== $_dir) {
-                foreach ($this->_config_dir as $directory) {
-                    unset($this->_resource_dir[ $directory ]);
-                }
-                foreach ($_dir as $directory) {
-                    $this->_resource_dir[ $directory ] = true;
-                }
+                $this->_updateResourceDir($this->_config_dir, $_dir);
                 $this->_config_dir = $_dir;
             }
-            $this->smarty->_cache[ 'config_dir_new' ] = false;
         }
-        if ($this->_secure_dir !== (array) $this->secure_dir) {
-            foreach ($this->_secure_dir as $directory) {
-                unset($this->_resource_dir[ $directory ]);
+        if ($this->_secure_dir !== $this->secure_dir) {
+            $this->secure_dir = (array)$this->secure_dir;
+            foreach($this->secure_dir as $k => $d) {
+                $this->secure_dir[$k] = $this->smarty->_realpath($d.DIRECTORY_SEPARATOR,true);
             }
-            foreach ((array) $this->secure_dir as $directory) {
-                $directory = $this->smarty->_realpath($directory . DIRECTORY_SEPARATOR, true);
-                $this->_resource_dir[ $directory ] = true;
-            }
-            $this->_secure_dir = (array) $this->secure_dir;
+            $this->_updateResourceDir($this->_secure_dir, $this->secure_dir);
+            $this->_secure_dir = $this->secure_dir;
+        }
+        $addPath =  $this->_checkDir($filepath, $this->_resource_dir);
+        if ($addPath !== false) {
+           $this->_resource_dir = array_merge($this->_resource_dir, $addPath);
         }
-        $this->_resource_dir = $this->_checkDir($filepath, $this->_resource_dir);
         return true;
     }
 
@@ -622,40 +601,64 @@ public function isTrustedPHPDir($filepath)
                 $this->_php_resource_dir[ $directory ] = true;
             }
         }
-
-        $this->_php_resource_dir =
-            $this->_checkDir($this->smarty->_realpath($filepath, true), $this->_php_resource_dir);
-        return true;
+        $addPath =  $this->_checkDir($filepath, $this->_php_resource_dir);
+        if ($addPath !== false) {
+           $this->_php_resource_dir = array_merge($this->_php_resource_dir, $addPath);
+        }
+         return true;
     }
 
+    /**
+     * Remove old directories and its sub folders, add new directories
+     *
+     * @param array $oldDir
+     * @param array $newDir
+     */
+    private function _updateResourceDir($oldDir, $newDir) {
+        foreach ($oldDir as $directory) {
+            $directory = $this->smarty->_realpath($directory, true);
+            $length = strlen($directory);
+            foreach ($this->_resource_dir as $dir) {
+                if (substr($dir, 0,$length) === $directory) {
+                    unset($this->_resource_dir[ $dir ]);
+                }
+            }
+        }
+        foreach ($newDir as $directory) {
+            $directory = $this->smarty->_realpath($directory, true);
+            $this->_resource_dir[ $directory ] = true;
+        }
+    }
     /**
      * Check if file is inside a valid directory
      *
      * @param string $filepath
      * @param array  $dirs valid directories
      *
-     * @return array
+     * @return array|bool
      * @throws \SmartyException
      */
     private function _checkDir($filepath, $dirs)
     {
+        $directory = dirname($filepath) . DIRECTORY_SEPARATOR;
+        if (isset($dirs[ $directory ])) {
+            return false;
+        }
+        $filepath = $this->smarty->_realpath($filepath, true);
         $directory = dirname($filepath) . DIRECTORY_SEPARATOR;
         $_directory = array();
         while (true) {
-            // remember the directory to add it to _resource_dir in case we're successful
-            $_directory[ $directory ] = true;
-            // test if the directory is trusted
+             // test if the directory is trusted
             if (isset($dirs[ $directory ])) {
-                // merge sub directories of current $directory into _resource_dir to speed up subsequent lookup
-                $dirs = array_merge($dirs, $_directory);
-
-                return $dirs;
+               return $_directory;
             }
             // abort if we've reached root
             if (!preg_match('#[\\\/][^\\\/]+[\\\/]$#', $directory)) {
                 break;
             }
-            // bubble up one level
+            // remember the directory to add it to _resource_dir in case we're successful
+            $_directory[ $directory ] = true;
+           // bubble up one level
             $directory = preg_replace('#[\\\/][^\\\/]+[\\\/]$#', DIRECTORY_SEPARATOR, $directory);
         }"
OSV-2018-230,"From 8c7b3737d29ed5c0575bf592063de8a51450812d Mon Sep 17 00:00:00 2001
From: Daniel Stenberg <daniel@haxx.se>
Date: Sat, 24 Mar 2018 23:47:41 +0100
Subject: [PATCH] http: restore buffer pointer when bad response-line is parsed

... leaving the k->str could lead to buffer over-reads later on.

CVE: CVE-2018-1000301
Assisted-by: Max Dymond

Detected by OSS-Fuzz.
Bug: https://curl.haxx.se/docs/adv_2018-b138.html
Bug: https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=7105
---
 lib/http.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/lib/http.c b/lib/http.c
index 1a313b4fbec4..e080ae513c6e 100644
--- a/lib/http.c
+++ b/lib/http.c
@@ -3014,6 +3014,8 @@ CURLcode Curl_http_readwrite_headers(struct Curl_easy *data,
 {
   CURLcode result;
   struct SingleRequest *k = &data->req;
+  ssize_t onread = *nread;
+  char *ostr = k->str;
 
   /* header line within buffer loop */
   do {
@@ -3078,7 +3080,9 @@ CURLcode Curl_http_readwrite_headers(struct Curl_easy *data,
         else {
           /* this was all we read so it's all a bad header */
           k->badheader = HEADER_ALLBAD;
-          *nread = (ssize_t)rest_length;
+          *nread = onread;
+          k->str = ostr;
+          return CURLE_OK;
         }
         break;
       }"
CVE-2018-20552,"From 6b830a1640ca20528032c89a4fdd8291a4d2d8b2 Mon Sep 17 00:00:00 2001
From: Fred Klassen <fklassen@appneta.com>
Date: Thu, 27 Dec 2018 10:31:51 -0800
Subject: [PATCH] Bug #520 Fix heap overflow on zero or 0xFFFF packet length

Add check for packets that report zero packet length. Example
of fix:

    src/tcpprep --auto=bridge --pcap=poc16-get_l2len-heapoverflow --cachefile=/dev/null
    Warning: poc16-get_l2len-heapoverflow was captured using a snaplen of 17 bytes.  This may mean you have truncated packets.
    safe_pcap_next ERROR: Invalid packet length in tcpprep.c:process_raw_packets() line 334: packet length=0 capture length=0
---
 configure.ac       | 2 +-
 docs/CHANGELOG     | 4 ++++
 src/common/utils.c | 8 ++++----
 3 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/configure.ac b/configure.ac
index 293ac2471..11809f419 100644
--- a/configure.ac
+++ b/configure.ac
@@ -4,7 +4,7 @@ dnl $Id$
 AC_PREREQ([2.69])
 
 dnl Set version info here!
-AC_INIT([tcpreplay],[4.3.0],
+AC_INIT([tcpreplay],[4.3.1],
     [https://github.com/appneta/tcpreplay/issues],
     [tcpreplay],
     [http://tcpreplay.sourceforge.net/])
diff --git a/docs/CHANGELOG b/docs/CHANGELOG
index fd22eaccf..6fdbeeb15 100644
--- a/docs/CHANGELOG
+++ b/docs/CHANGELOG
@@ -1,3 +1,7 @@
+12/27/2018 Version 4.3.1
+    - Fix checkspell detected typos (#531)
+    - Heap overflow packet2tree and get_l2len (#530)
+
 11/10/2018 Version 4.3.0
     - Fix maxOS TOS checksum failure (#524)
     - TCP sequence edits seeding (#514)
diff --git a/src/common/utils.c b/src/common/utils.c
index 0dbc0891e..4017cfa49 100644
--- a/src/common/utils.c
+++ b/src/common/utils.c
@@ -134,8 +134,8 @@ u_char *_our_safe_pcap_next(pcap_t *pcap,  struct pcap_pkthdr *pkthdr,
             exit(-1);
         }
 
-        if (pkthdr->len < pkthdr->caplen) {
-            fprintf(stderr, ""safe_pcap_next ERROR: Invalid packet length in %s:%s() line %d: packet length %u is less than capture length %u\n"",
+        if (!pkthdr->len || pkthdr->len < pkthdr->caplen) {
+            fprintf(stderr, ""safe_pcap_next ERROR: Invalid packet length in %s:%s() line %d: packet length=%u capture length=%u\n"",
                     file, funcname, line, pkthdr->len, pkthdr->caplen);
             exit(-1);
         }
@@ -160,8 +160,8 @@ int _our_safe_pcap_next_ex(pcap_t *pcap, struct pcap_pkthdr **pkthdr,
             exit(-1);
         }
 
-        if ((*pkthdr)->len < (*pkthdr)->caplen) {
-            fprintf(stderr, ""safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: packet length %u is less than capture length %u\n"",
+        if (!(*pkthdr)->len || (*pkthdr)->len < (*pkthdr)->caplen) {
+            fprintf(stderr, ""safe_pcap_next_ex ERROR: Invalid packet length in %s:%s() line %d: packet length=%u capture length=%u\n"",
                     file, funcname, line, (*pkthdr)->len, (*pkthdr)->caplen);
             exit(-1);
         }"
CVE-2018-12466,"From f57b660f49f830006766a8d4abc3b4af6e178063 Mon Sep 17 00:00:00 2001
From: Marcus Huewe <suse-tux@gmx.de>
Date: Thu, 5 Jul 2018 12:48:41 +0200
Subject: [PATCH] Ignore a project link in
 BsRequestAction.check_action_permission!

This makes sure that we check the permissions of the correct package. For
instance, assume that the project ""Staging"" is a link project where the
link points to the ""Base"" project. Also, assume that there exists a
""Base/foo"" package, but there exists no explicit ""Staging/foo"" package.
Moreover, assume we check the permissions for the following ""submit""
action:

<action type=""submit"">
  <source project=""Staging"" package=""foo""/>
  <target project=""an_arbitrary_project"" package=""foo""/>
</action>

In this case, the old code checks if request acceptor can modify the
""Base/foo"" package (since it follows the project link). This is wrong
because the ""Staging/foo"" package would be turned into a branch during
accept.
The new code checks the correct package because it does not follow the
project link and requires that the source package exists in the source
project. Requiring the existence of the source package potentially
breaks artificial requests (for instance, a request where the ""submit""
action from above is preceded by a ""submit"" action that creates a
""Staging/foo"" package).

Note: so far I was unable to exploit the old code - so this is just
to avoid a potential future headache.

Fixes: commit 990ef7ccc (""[api][webui] Check access to source package"")
---
 src/api/app/models/bs_request_action_submit.rb | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/api/app/models/bs_request_action_submit.rb b/src/api/app/models/bs_request_action_submit.rb
index 7e4f39db1a8..a08110ef40a 100644
--- a/src/api/app/models/bs_request_action_submit.rb
+++ b/src/api/app/models/bs_request_action_submit.rb
@@ -115,8 +115,11 @@ def check_action_permission!(skip_source = nil)
     target_package = target_project.packages.find_by_name(self.target_package)
     initialize_devel_package = target_project.find_attribute('OBS', 'InitializeDevelPackage')
     return if target_package || !initialize_devel_package
-    source_package = Package.get_by_project_and_name(source_project, self.source_package)
-    return if !source_package || User.current.can_modify?(source_package)
+    opts = { follow_project_links: false }
+    source_package = Package.get_by_project_and_name!(source_project,
+                                                      self.source_package,
+                                                      opts)
+    return if User.current.can_modify?(source_package)
     msg = 'No permission to initialize the source package as a devel package'
     raise PostRequestNoPermission, msg
   end"
CVE-2018-13423,"From ba841892116544847d76d3838781c9708cb92221 Mon Sep 17 00:00:00 2001
From: John Flatness <john@zerocrates.org>
Date: Tue, 24 Apr 2018 16:03:22 -0400
Subject: [PATCH] Add escaping for tags on item form

---
 admin/themes/default/items/tag-form.php   | 2 +-
 admin/themes/default/javascripts/items.js | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/admin/themes/default/items/tag-form.php b/admin/themes/default/items/tag-form.php
index 399c4f6065..6fce6612f3 100644
--- a/admin/themes/default/items/tag-form.php
+++ b/admin/themes/default/items/tag-form.php
@@ -18,7 +18,7 @@
         <ul id=""all-tags-list"">
             <?php foreach( $tags as $tag ): ?>
                 <li>
-                    <?php echo '<span class=""tag"">' . $tag->name . '</span>'; 
+                    <?php echo '<span class=""tag"">' . html_escape($tag->name) . '</span>';
                           echo '<span class=""undo-remove-tag""><a href=""#"">' . __('Undo') . '</a></span>';
                           echo '<span class=""remove-tag""><a href=""#"">' . __('Remove') . '</a></span>'; ?>
                 </li>
diff --git a/admin/themes/default/javascripts/items.js b/admin/themes/default/javascripts/items.js
index 16332d593f..806f1dcdff 100644
--- a/admin/themes/default/javascripts/items.js
+++ b/admin/themes/default/javascripts/items.js
@@ -102,7 +102,7 @@ Omeka.Items = {};
 
         var undoButton = $('<span class=""undo-remove-tag""><a href=""#"">Undo</a></span>').appendTo(tagLi);
         var deleteButton = $('<span class=""remove-tag""><a href=""#"">Remove</a></span>').appendTo(tagLi);
-        tagLi.prepend('<span class=""tag"">' + tag + '</span>');
+        $('<span></span>', {'class': 'tag', 'text': tag}).appendTo(tagLi);
 
         if($('#all-tags-list').length != 0) {
             $('#all-tags-list').append(tagLi);"
CVE-2018-11506,"From f7068114d45ec55996b9040e98111afa56e010fe Mon Sep 17 00:00:00 2001
From: Jens Axboe <axboe@kernel.dk>
Date: Mon, 21 May 2018 12:21:14 -0600
Subject: [PATCH] sr: pass down correctly sized SCSI sense buffer

We're casting the CDROM layer request_sense to the SCSI sense
buffer, but the former is 64 bytes and the latter is 96 bytes.
As we generally allocate these on the stack, we end up blowing
up the stack.

Fix this by wrapping the scsi_execute() call with a properly
sized sense buffer, and copying back the bits for the CDROM
layer.

Cc: stable@vger.kernel.org
Reported-by: Piotr Gabriel Kosinski <pg.kosinski@gmail.com>
Reported-by: Daniel Shapira <daniel@twistlock.com>
Tested-by: Kees Cook <keescook@chromium.org>
Fixes: 82ed4db499b8 (""block: split scsi_request out of struct request"")
Signed-off-by: Jens Axboe <axboe@kernel.dk>
---
 drivers/scsi/sr_ioctl.c | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/drivers/scsi/sr_ioctl.c b/drivers/scsi/sr_ioctl.c
index 2a21f2d4859229..35fab1e18adc34 100644
--- a/drivers/scsi/sr_ioctl.c
+++ b/drivers/scsi/sr_ioctl.c
@@ -188,9 +188,13 @@ int sr_do_ioctl(Scsi_CD *cd, struct packet_command *cgc)
 	struct scsi_device *SDev;
 	struct scsi_sense_hdr sshdr;
 	int result, err = 0, retries = 0;
+	unsigned char sense_buffer[SCSI_SENSE_BUFFERSIZE], *senseptr = NULL;
 
 	SDev = cd->device;
 
+	if (cgc->sense)
+		senseptr = sense_buffer;
+
       retry:
 	if (!scsi_block_when_processing_errors(SDev)) {
 		err = -ENODEV;
@@ -198,10 +202,12 @@ int sr_do_ioctl(Scsi_CD *cd, struct packet_command *cgc)
 	}
 
 	result = scsi_execute(SDev, cgc->cmd, cgc->data_direction,
-			      cgc->buffer, cgc->buflen,
-			      (unsigned char *)cgc->sense, &sshdr,
+			      cgc->buffer, cgc->buflen, senseptr, &sshdr,
 			      cgc->timeout, IOCTL_RETRIES, 0, 0, NULL);
 
+	if (cgc->sense)
+		memcpy(cgc->sense, sense_buffer, sizeof(*cgc->sense));
+
 	/* Minimal error checking.  Ignore cases we know about, and report the rest. */
 	if (driver_byte(result) != 0) {
 		switch (sshdr.sense_key) {"
CVE-2018-0046,"From 8710463077c10034fcfa06556a98fb1a1a64fd0d Mon Sep 17 00:00:00 2001
From: Christian Pape <Christian.Pape@informatik.hs-fulda.de>
Date: Wed, 1 Feb 2017 16:32:08 +0100
Subject: [PATCH] NMS-9065: Fixed the Asset pages JSPs to handle ACL filtering
 for release-19.0.0

---
 .../src/main/webapp/asset/modify.jsp          | 143 ++++++++++--------
 .../src/main/webapp/asset/nodelist.jsp        |  20 ++-
 2 files changed, 95 insertions(+), 68 deletions(-)

diff --git a/opennms-webapp/src/main/webapp/asset/modify.jsp b/opennms-webapp/src/main/webapp/asset/modify.jsp
index e60cf3d0c3f4..dd48763f31a1 100644
--- a/opennms-webapp/src/main/webapp/asset/modify.jsp
+++ b/opennms-webapp/src/main/webapp/asset/modify.jsp
@@ -28,7 +28,7 @@
  *******************************************************************************/
 --%>
 
-<%@ page contentType=""text/html;charset=UTF-8"" language=""java"" %>
+<%@ page contentType=""text/html;charset=UTF-8"" language=""java"" import=""org.opennms.web.springframework.security.AclUtils""%>
 
 <% pageContext.setAttribute(""nodeId"", request.getParameter(""node"")); %>
 
@@ -47,72 +47,95 @@
   <jsp:param name=""script"" value='<script type=""text/javascript"" src=""js/onms-assets/app.js""></script>' />
 </jsp:include>
 
-<div class=""container-fluid"" ng-app=""onms-assets"" ng-controller=""NodeAssetsCtrl"" ng-init=""init(${nodeId})"">
+<%
+  AclUtils.NodeAccessChecker accessChecker = AclUtils.getNodeAccessChecker(getServletContext());
 
-  <div growl></div>
+  Integer nodeId = null;
 
-  <h4>
-    Node: <strong><a href=""element/node.jsp?node=${nodeId}"">{{ nodeLabel }}</a></strong>
-  </h4>
-  <p>
-    Last modified by {{ master['lastModifiedBy'] }} at {{ master['lastModifiedDate'] | date }}
-  </p>
+  try {
+    nodeId = Integer.valueOf(request.getParameter(""node""));
+  } catch (NumberFormatException e) {
+%>
+    <h2>Error parsing node parameter.</h2>
+<%
+  }
 
-  <form name=""assetForm"" novalidate>
-    <div class=""row"" ng-repeat=""row in config.rows"">
-      <div ng-class=""col.class"" ng-repeat=""col in row.columns"">
-        <div class=""panel panel-default"" ng-repeat=""panel in col.panels"">
-          <div class=""panel-heading"">
-            <h3 class=""panel-title"">{{ panel.title }}</h3>
-          </div>
-          <div class=""panel-body"">
-            <div class=""form-horizontal"" ng-repeat=""field in panel.fields""> 
-              <div class=""form-group"" ng-class=""{ 'has-error': assetForm[field.model].$invalid && !assetForm[field.model].$pristine, 'has-warning': assetForm[field.model].$dirty }"">
-                <label class=""control-label col-md-3"" for=""{{ field.model }}"" uib-tooltip=""{{ field.tooltip  }}"">{{ field.label }}</label>
-                <div class=""col-md-9"">
-                  <%-- Static/ReadOnly fields --%>
-                  <p class=""form-control-static"" ng-if=""field.type=='static'"">{{ asset[field.model] }}</p>
-                  <%-- Standard fields with typeahead suggestions --%>
-                  <input type=""text"" class=""form-control"" id=""{{ field.model }}"" name=""{{ field.model }}"" ng-model=""asset[field.model]"" ng-if=""field.type=='text'""
-                    typeahead-editable=""true"" typeahead-min-length=""0"" ng-pattern=""field.pattern""
-                    uib-typeahead=""suggestion for suggestion in getSuggestions(field.model) | filter:$viewValue""></input>
-                  <%-- Password fields --%>
-                  <input type=""password"" class=""form-control"" ng-model=""asset[field.model]"" ng-if=""field.type=='password'""></input>
-                  <%-- Textarea fields --%>
-                  <textarea class=""form-control"" style=""height: 20em;"" ng-model=""asset[field.model]"" ng-if=""field.type=='textarea'""></textarea>
-                  <%-- Date fields with Popup Picker --%>
-                  <p class=""input-group"" ng-if=""field.type=='date'"">
-                    <input type=""date"" class=""form-control"" uib-datepicker-popup=""{{ dateFormat }}"" is-open=""field.open"" ng-model=""asset[field.model]"" placeholder=""Specify date using this format: {{ dateFormat }}"" />
-                    <span class=""input-group-btn"">
-                      <button type=""button"" class=""btn btn-default"" ng-click=""field.open=true""><i class=""glyphicon glyphicon-calendar""></i></button>
-                    </span>
-                  </p>
-                  <%-- List/Select fields --%>
-                  <select class=""form-control"" ng-model=""asset[field.model]"" ng-if=""field.type=='select'"">
-                    <option ng-repeat=""value in field.options"">{{value}}</option>
-                  </select>
+  if (nodeId != null) {
+    if (accessChecker.isNodeAccessible(nodeId)) {
+%>
+      <div class=""container-fluid"" ng-app=""onms-assets"" ng-controller=""NodeAssetsCtrl"" ng-init=""init(${nodeId})"">
+
+        <div growl></div>
+
+        <h4>
+          Node: <strong><a href=""element/node.jsp?node=${nodeId}"">{{ nodeLabel }}</a></strong>
+        </h4>
+        <p>
+          Last modified by {{ master['lastModifiedBy'] }} at {{ master['lastModifiedDate'] | date }}
+        </p>
+
+        <form name=""assetForm"" novalidate>
+          <div class=""row"" ng-repeat=""row in config.rows"">
+            <div ng-class=""col.class"" ng-repeat=""col in row.columns"">
+              <div class=""panel panel-default"" ng-repeat=""panel in col.panels"">
+                <div class=""panel-heading"">
+                  <h3 class=""panel-title"">{{ panel.title }}</h3>
+                </div>
+                <div class=""panel-body"">
+                  <div class=""form-horizontal"" ng-repeat=""field in panel.fields"">
+                    <div class=""form-group"" ng-class=""{ 'has-error': assetForm[field.model].$invalid && !assetForm[field.model].$pristine, 'has-warning': assetForm[field.model].$dirty }"">
+                      <label class=""control-label col-md-3"" for=""{{ field.model }}"" uib-tooltip=""{{ field.tooltip  }}"">{{ field.label }}</label>
+                      <div class=""col-md-9"">
+                        <%-- Static/ReadOnly fields --%>
+                        <p class=""form-control-static"" ng-if=""field.type=='static'"">{{ asset[field.model] }}</p>
+                        <%-- Standard fields with typeahead suggestions --%>
+                        <input type=""text"" class=""form-control"" id=""{{ field.model }}"" name=""{{ field.model }}"" ng-model=""asset[field.model]"" ng-if=""field.type=='text'""
+                          typeahead-editable=""true"" typeahead-min-length=""0"" ng-pattern=""field.pattern""
+                          uib-typeahead=""suggestion for suggestion in getSuggestions(field.model) | filter:$viewValue""></input>
+                        <%-- Password fields --%>
+                        <input type=""password"" class=""form-control"" ng-model=""asset[field.model]"" ng-if=""field.type=='password'""></input>
+                        <%-- Textarea fields --%>
+                        <textarea class=""form-control"" style=""height: 20em;"" ng-model=""asset[field.model]"" ng-if=""field.type=='textarea'""></textarea>
+                        <%-- Date fields with Popup Picker --%>
+                        <p class=""input-group"" ng-if=""field.type=='date'"">
+                          <input type=""date"" class=""form-control"" uib-datepicker-popup=""{{ dateFormat }}"" is-open=""field.open"" ng-model=""asset[field.model]"" placeholder=""Specify date using this format: {{ dateFormat }}"" />
+                          <span class=""input-group-btn"">
+                            <button type=""button"" class=""btn btn-default"" ng-click=""field.open=true""><i class=""glyphicon glyphicon-calendar""></i></button>
+                          </span>
+                        </p>
+                        <%-- List/Select fields --%>
+                        <select class=""form-control"" ng-model=""asset[field.model]"" ng-if=""field.type=='select'"">
+                          <option ng-repeat=""value in field.options"">{{value}}</option>
+                        </select>
+                      </div>
+                    </div>
+                  </div>
                 </div>
               </div>
-            </div> 
+            </div>
           </div>
-        </div>
-      </div>
-    </div>
-    <div class=""row"">
-      <div class=""col-md-6"">
-        <div class=""btn-group"">
-          <button type=""button"" class=""btn btn-default"" ng-click=""save()"" id=""save-asset"" ng-disabled=""assetForm.$invalid"">Save Asset Record&nbsp;&nbsp;&nbsp;
-            <span class=""glyphicon glyphicon-save""><span>
-          </button>
-          <button type=""button"" class=""btn btn-default"" ng-click=""reset()"" id=""reset-asset"">Reset&nbsp;&nbsp;&nbsp;
-            <span class=""glyphicon glyphicon-refresh""><span>
-          </button>
-        </div>
+          <div class=""row"">
+            <div class=""col-md-6"">
+              <div class=""btn-group"">
+                <button type=""button"" class=""btn btn-default"" ng-click=""save()"" id=""save-asset"" ng-disabled=""assetForm.$invalid"">Save Asset Record&nbsp;&nbsp;&nbsp;
+                  <span class=""glyphicon glyphicon-save""><span>
+                </button>
+                <button type=""button"" class=""btn btn-default"" ng-click=""reset()"" id=""reset-asset"">Reset&nbsp;&nbsp;&nbsp;
+                  <span class=""glyphicon glyphicon-refresh""><span>
+                </button>
+              </div>
+            </div>
+          </div>
+        </form>
       </div>
-    </div>
-  </form>
-
-</div>
+<%
+    } else {
+%>
+      <h2>Access denied.</h2>
+<%
+    }
+  }
+%>
 
 <jsp:include page=""/includes/bootstrap-footer.jsp"" flush=""false""/>
 
diff --git a/opennms-webapp/src/main/webapp/asset/nodelist.jsp b/opennms-webapp/src/main/webapp/asset/nodelist.jsp
index c2ef70c36fa9..491249ea5d52 100644
--- a/opennms-webapp/src/main/webapp/asset/nodelist.jsp
+++ b/opennms-webapp/src/main/webapp/asset/nodelist.jsp
@@ -30,13 +30,11 @@
 --%>
 
 <%@page language=""java""
-	contentType=""text/html""
-	session=""true""
-	import=""org.opennms.web.asset.*,
-		org.opennms.web.servlet.MissingParameterException 
-	""
-%>
-
+        contentType=""text/html""
+        session=""true""
+        import=""org.opennms.web.asset.*,
+		    org.opennms.web.servlet.MissingParameterException,
+            org.opennms.web.springframework.security.AclUtils""%>
 <%
     final String ALL_NON_EMPTY = ""_allNonEmpty"";
     String column = request.getParameter(""column"");
@@ -52,6 +50,8 @@
     }
 
     AssetModel.MatchingAsset[] assets = column.equals(ALL_NON_EMPTY) ? AssetModel.searchNodesWithAssets() : AssetModel.searchAssets(column, search);
+
+    AclUtils.NodeAccessChecker accessChecker = AclUtils.getNodeAccessChecker(getServletContext());
 %>
 
 <jsp:include page=""/includes/bootstrap.jsp"" flush=""false"" >
@@ -80,7 +80,11 @@
             <th>Node Link</td>
           </tr>
 
-        <% for( int i=0; i < assets.length; i++ ) { %>
+        <% for( int i=0; i < assets.length; i++ ) {
+            if (!accessChecker.isNodeAccessible(assets[i].nodeId)) {
+                continue;
+            }
+        %>
           <tr>
             <td><%=assets[i].matchingValue%></td>
             <td><a href=""asset/modify.jsp?node=<%=assets[i].nodeId%>""><%=assets[i].nodeLabel%></a></td>"
CVE-2018-10092,"From 5d121b2d3ae2a95abebc9dc31e4782cbc61a1f39 Mon Sep 17 00:00:00 2001
From: Laurent Destailleur <eldy@destailleur.fr>
Date: Wed, 18 Apr 2018 11:55:25 +0200
Subject: [PATCH] FIX CVE-2018-10092

---
 htdocs/admin/security_file.php | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/htdocs/admin/security_file.php b/htdocs/admin/security_file.php
index 1053658b1915a..143cc17e46f44 100644
--- a/htdocs/admin/security_file.php
+++ b/htdocs/admin/security_file.php
@@ -82,10 +82,15 @@
 
 else if ($action == 'updateform')
 {
+	$antivircommand = GETPOST('MAIN_ANTIVIRUS_COMMAND','none');			// Use GETPOST none because we must accept "". Example c:\Progra~1\ClamWin\bin\clamscan.exe
+	$antivirparam = GETPOST('MAIN_ANTIVIRUS_PARAM','none');				// Use GETPOST none because we must accept "". Example --database=""C:\Program Files (x86)\ClamWin\lib""
+	$antivircommand = dol_string_nospecial($antivircommand, '', array(""|"", "";"", ""<"", "">"", ""&""));	// Sanitize command
+	$antivirparam = dol_string_nospecial($antivirparam, '', array(""|"", "";"", ""<"", "">"", ""&""));		// Sanitize params
+
 	$res3=dolibarr_set_const($db, 'MAIN_UPLOAD_DOC',GETPOST('MAIN_UPLOAD_DOC','alpha'),'chaine',0,'',$conf->entity);
 	$res4=dolibarr_set_const($db, ""MAIN_UMASK"", GETPOST('MAIN_UMASK','alpha'),'chaine',0,'',$conf->entity);
-	$res5=dolibarr_set_const($db, ""MAIN_ANTIVIRUS_COMMAND"", trim(GETPOST('MAIN_ANTIVIRUS_COMMAND','none')),'chaine',0,'',$conf->entity);    // Use GETPOST none because we must accept ""
-	$res6=dolibarr_set_const($db, ""MAIN_ANTIVIRUS_PARAM"", trim(GETPOST('MAIN_ANTIVIRUS_PARAM','none')),'chaine',0,'',$conf->entity);	// Use GETPOST none because we must accept ""
+	$res5=dolibarr_set_const($db, ""MAIN_ANTIVIRUS_COMMAND"", trim($antivircommand),'chaine',0,'',$conf->entity);
+	$res6=dolibarr_set_const($db, ""MAIN_ANTIVIRUS_PARAM"", trim($antivirparam),'chaine',0,'',$conf->entity);
 	if ($res3 && $res4 && $res5 && $res6) setEventMessages($langs->trans(""RecordModifiedSuccessfully""), null, 'mesgs');
 }
 
@@ -95,10 +100,10 @@
 else if ($action == 'delete')
 {
 	$langs->load(""other"");
-	$file = $conf->admin->dir_temp . '/' . GETPOST('urlfile');	// Do not use urldecode here ($_GET and $_REQUEST are already decoded by PHP).
+	$file = $conf->admin->dir_temp . '/' . GETPOST('urlfile','alpha');	// Do not use urldecode here ($_GET and $_REQUEST are already decoded by PHP).
 	$ret=dol_delete_file($file);
-	if ($ret) setEventMessages($langs->trans(""FileWasRemoved"", GETPOST('urlfile')), null, 'mesgs');
-	else setEventMessages($langs->trans(""ErrorFailToDeleteFile"", GETPOST('urlfile')), null, 'errors');
+	if ($ret) setEventMessages($langs->trans(""FileWasRemoved"", GETPOST('urlfile','alpha')), null, 'mesgs');
+	else setEventMessages($langs->trans(""ErrorFailToDeleteFile"", GETPOST('urlfile','alpha')), null, 'errors');
 	Header('Location: '.$_SERVER[""PHP_SELF""]);
 	exit;
 }"
OSV-2018-153,"From 0df65d82dbc41e8da00adb243de5918db532c8a6 Mon Sep 17 00:00:00 2001
From: Viktor Dukhovni <openssl-users@dukhovni.org>
Date: Tue, 12 Jun 2018 11:51:53 -0400
Subject: [PATCH] Document return value of X509_add_ext

and also X509_delete_ext()

Reviewed-by: Matt Caswell <matt@openssl.org>
---
 doc/man3/X509v3_get_ext_by_NID.pod | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/doc/man3/X509v3_get_ext_by_NID.pod b/doc/man3/X509v3_get_ext_by_NID.pod
index 81c938e95d55b..54dff3c5dd93a 100644
--- a/doc/man3/X509v3_get_ext_by_NID.pod
+++ b/doc/man3/X509v3_get_ext_by_NID.pod
@@ -115,8 +115,8 @@ initial extension will not be checked.
 
 X509v3_get_ext_count() returns the extension count.
 
-X509v3_get_ext() and X509v3_delete_ext() return an B<X509_EXTENSION> pointer
-or B<NULL> if an error occurs.
+X509v3_get_ext(), X509v3_delete_ext() and X509_delete_ext() return an
+B<X509_EXTENSION> pointer or B<NULL> if an error occurs.
 
 X509v3_get_ext_by_NID() X509v3_get_ext_by_OBJ() and
 X509v3_get_ext_by_critical() return the an extension index or B<-1> if an
@@ -124,6 +124,8 @@ error occurs.
 
 X509v3_add_ext() returns a stack of extensions or B<NULL> on error.
 
+X509_add_ext() returns 1 on success and 0 on error.
+
 =head1 SEE ALSO
 
 L<X509V3_get_d2i(3)>"
OSV-2018-127,"From 67449c39331babb88f7d29d737895d786cd5da33 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Fri, 14 Sep 2018 10:58:00 +0200
Subject: [PATCH] Don't dereference offset before check_struct()

---
 src/hb-open-file.hh | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/hb-open-file.hh b/src/hb-open-file.hh
index a1f931d3c43..38610a8ec33 100644
--- a/src/hb-open-file.hh
+++ b/src/hb-open-file.hh
@@ -387,10 +387,9 @@ struct ResourceMap
   inline bool sanitize (hb_sanitize_context_t *c, const void *data_base) const
   {
     TRACE_SANITIZE (this);
-    const void *type_base = &(this+typeList);
     return_trace (c->check_struct (this) &&
 		  typeList.sanitize (c, this,
-				     type_base,
+				     &(this+typeList),
 				     data_base));
   }"
CVE-2018-7634,"From d6701289ae55de900929ff0f66313fa9771a198d Mon Sep 17 00:00:00 2001
From: Manuel VACELET <manuel.vacelet@enalean.com>
Date: Thu, 1 Mar 2018 10:47:38 +0100
Subject: [PATCH] request #11217 Account takeover due to a missing CSRF
 protection

Change email CSRF challenge was generated but never checked.

Added another round of protection by ensuring that users are logged in when
they confirm their change.

The confirmation hash generation was also replace for a true random source.

Change-Id: Ic0ef04f2fac95c5d501dd42b257dbf519c1482ff
---
 site-content/en_US/account/account.tab        |  23 ---
 site-content/fr_FR/LC_MESSAGES/tuleap-core.po |  95 +++++++++-
 site-content/fr_FR/account/account.tab        |  23 ---
 site-content/tuleap-core.pot                  |  72 ++++++++
 src/common/autoload.php                       |   7 +-
 src/common/dao/UserDao.class.php              |  10 +
 src/common/event/Event.class.php              |  10 -
 .../system_event/SystemEventManager.class.php |   6 -
 .../user/Account/ChangePasswordController.php | 171 ++++++++++++++++++
 .../user/Account/ChangePasswordPresenter.php  |  40 ++++
 src/common/user/UserManager.class.php         |   5 +
 .../user/change-email-complete.mustache       |   9 +
 .../user/change-email-confirm.mustache        |   7 +
 src/templates/user/change-email.mustache      |  17 ++
 src/www/account/change_email-complete.php     |  50 +----
 src/www/account/change_email-confirm.php      |  80 +++-----
 src/www/account/change_email.php              |  64 +++----
 src/www/project/admin/editgenericmember.php   |   2 +-
 18 files changed, 484 insertions(+), 207 deletions(-)
 create mode 100644 src/common/user/Account/ChangePasswordController.php
 create mode 100644 src/common/user/Account/ChangePasswordPresenter.php
 create mode 100644 src/templates/user/change-email-complete.mustache
 create mode 100644 src/templates/user/change-email-confirm.mustache
 create mode 100644 src/templates/user/change-email.mustache

diff --git a/site-content/en_US/account/account.tab b/site-content/en_US/account/account.tab
index 4913aec268f..6eb4477bbee 100644
--- a/site-content/en_US/account/account.tab
+++ b/site-content/en_US/account/account.tab
@@ -110,29 +110,6 @@ account_preferences	html_format	HTML
 account_preferences	text_format	Text
 #
 #-----------------------------------------------
-# Script: SF/www/account/change_email.php
-#
-account_change_email	title	Change Email Address
-account_change_email	message	<P>Changing your email address will require confirmation from your new email address, so that we can ensure we have a good email address on file. <P>Submitting the form below will mail a confirmation URL to the new email address. Visiting this link will complete the email change.
-account_change_email	label_new	New Email Address
-account_change_email	send_new	Send Confirmation to New Address
-#
-#-----------------------------------------------
-# Script: SF/www/account/change_email-confirm.php
-#
-account_change_email-confirm	message	You have requested a change of email address on $1.\nPlease visit the following URL to complete the email change:\n\n$2\n\n-- The $1 Team
-account_change_email-confirm	title	Email Change Confirmation
-account_change_email-confirm	mailsent	An email has been sent to the new address. Follow the instructions in the email to complete the email change.
-#
-#-----------------------------------------------
-# Script: SF/www/account/change_email-complete.php
-#
-account_change_email-complete	invalid_hash	Invalid confirmation hash.
-account_change_email-complete	duplicate_hash	This hash key exists more than once.
-account_change_email-complete	title	Email Change Complete
-account_change_email-complete	message	Welcome, $1.<P>Your email change is complete. Your new email address on file is <B>$2</B>. Mail sent to $3 user $1 (login $4) will now be forwarded to this new email address.
-#
-#-----------------------------------------------
 # Script: SF/www/account/change_pw.php
 #
 account_change_pw	title_success	Successfully Changed Password
diff --git a/site-content/fr_FR/LC_MESSAGES/tuleap-core.po b/site-content/fr_FR/LC_MESSAGES/tuleap-core.po
index beca1fa65ca..df902e87671 100644
--- a/site-content/fr_FR/LC_MESSAGES/tuleap-core.po
+++ b/site-content/fr_FR/LC_MESSAGES/tuleap-core.po
@@ -10,7 +10,7 @@ msgstr """"
 ""Content-Type: text/plain; charset=UTF-8\n""
 ""Content-Transfer-Encoding: 8bit\n""
 ""Plural-Forms: nplurals=2; plural=(n > 1);\n""
-""X-Generator: Poedit 2.0.3\n""
+""X-Generator: Poedit 1.8.7.1\n""
 
 #, php-format
 msgid """"
@@ -85,6 +85,14 @@ msgstr ""Tous les groupes""
 msgid ""Already used""
 msgstr ""Déjà utilisé""
 
+msgid """"
+""An email has been sent to the new address. Follow the instructions in the ""
+""email to complete the email change.""
+msgstr """"
+""Un courrier électronique vient d'être envoyé à votre nouvelle adresse e-""
+""mail. Suivez les instructions fournies dans ce message pour confirmer ""
+""définitivement le changement.""
+
 msgid """"
 ""An error occured with your upload. Please try again or choose another image.""
 msgstr """"
@@ -172,6 +180,17 @@ msgstr ""Impossible de mettre à jour le groupe utilisateur""
 msgid ""Categories""
 msgstr ""Catégories""
 
+msgid ""Change email address""
+msgstr ""Changer l'adresse e-mail""
+
+msgid """"
+""Changing your email address will require confirmation from your new email ""
+""address, so that we can ensure we have a good email address on file.""
+msgstr """"
+""Le changement d'adresse e-mail nécessite une confirmation depuis votre ""
+""nouvelle adresse e-mail de façon à s'assurer que nous disposons d'une ""
+""adresse valide.""
+
 msgid ""Child projects""
 msgstr ""Projets enfants""
 
@@ -302,6 +321,15 @@ msgstr ""Éditer les paramètres""
 msgid ""Edit widget""
 msgstr ""Éditer le widget""
 
+msgid ""Email change complete""
+msgstr ""Changement d'e-mail confirmé""
+
+msgid ""Email change confirmation""
+msgstr ""Confirmation de changement d'adresse e-mail""
+
+msgid ""Email format invalid""
+msgstr ""Le formal de l'e-mail n'est pas valide""
+
 msgid ""Emergency""
 msgstr ""Urgent""
 
@@ -473,6 +501,9 @@ msgstr ""Barre de menu""
 msgid ""Nb members""
 msgstr ""Nb membres""
 
+msgid ""New email address:""
+msgstr ""Nouvelle adresse e-mail""
+
 msgid ""News""
 msgstr ""Annonces""
 
@@ -682,6 +713,9 @@ msgstr ""Rechercher""
 msgid ""See permissions""
 msgstr ""Voir les permissions""
 
+msgid ""Send confirmation to new address""
+msgstr ""Envoyer la confirmation""
+
 msgid ""Service news is disabled for this project.""
 msgstr ""Le service annonces est désactivé pour ce projet.""
 
@@ -712,6 +746,14 @@ msgstr ""Commencez par choisir un widget""
 msgid ""Style""
 msgstr ""Style""
 
+msgid """"
+""Submitting the form below will mail a confirmation URL to the new email ""
+""address. Visiting this link will complete the email change.""
+msgstr """"
+""La soumission de ce formulaire déclenchera l'envoi d'un e-mail à votre ""
+""nouvelle adresse incluant un lien à visiter pour confirmer définitivement le ""
+""changement.""
+
 msgid ""System""
 msgstr ""Système""
 
@@ -752,6 +794,14 @@ msgid ""The last project administrator cannot be removed.""
 msgstr """"
 ""Il n'est pas possible de supprimer le dernier administrateur du projet.""
 
+#, php-format
+msgid """"
+""The mail was not accepted for the delivery. Please contact the administrator ""
+""at %s.""
+msgstr """"
+""L'e-mail n'a pas pu être envoyé. Veuillez contacter les administrateurs à ""
+""l'adresse %s.""
+
 msgid ""The name is missing for creating a dashboard.""
 msgstr ""Il manque le nom pour créer un tableau de bord.""
 
@@ -822,6 +872,9 @@ msgstr """"
 msgid ""This group does not have any members yet.""
 msgstr ""Ce groupe n'a pas encore de membres.""
 
+msgid ""This hash key exists more than once""
+msgstr ""Cette clé de confirmation est présente plus d'une fois dans la base.""
+
 msgid ""This is a system group, you cannot delete it.""
 msgstr ""Ceci est un groupe système, vous ne pouvez pas le supprimer.""
 
@@ -887,6 +940,9 @@ msgstr ""Import outils de suivi v3""
 msgid ""Unable to fetch the latest activities of the project""
 msgstr ""Impossible de récupérer les dernières activités du projet""
 
+msgid ""Unauthorized action for anonymous""
+msgstr ""Cette action n'est pas autorisée pour les anonymes""
+
 msgid ""Unix name""
 msgstr ""Now unix""
 
@@ -947,6 +1003,9 @@ msgstr ""Bienvenue à bord""
 msgid ""Welcome message and information for users""
 msgstr ""Message de bienvenue et informations générales pour les utilisateurs""
 
+msgid ""Welcome, %s.""
+msgstr ""Bienvenue, %s""
+
 msgid """"
 ""Why don't you start by editing your dashboard <br> and adding some widgets?""
 msgstr """"
@@ -1013,6 +1072,11 @@ msgstr """"
 ""Vous êtes sur le point de supprimer le widget \""%s\"". Cette action est ""
 ""irréversible. Merci de confirmer cette suppression.""
 
+msgid ""You are not the user who asked for email change""
+msgstr """"
+""Vous n'etes pas l'utilisateur à l'origine de la demande de changement d'e-""
+""mail""
+
 msgid """"
 ""You can delegate to this group several permissions. All the members of this\n""
 ""                        group will take advantage of these permissions.""
@@ -1063,6 +1127,22 @@ msgstr """"
 ""Vous n’avez pas les droits pour mettre à jour des tableaux de bord du projet ""
 ""\""%s\"".""
 
+#, php-format
+msgid """"
+""You have requested a change of email address on %s.\n""
+""Please visit the following URL to complete the email change:\n""
+""\n""
+""%s\n""
+""\n""
+""-- The %s Team""
+msgstr """"
+""Vous avez demandé a changer votre adresse e-mail en %s.\n""
+""Merci de visiter le lien ci-dessous pour confirmer ce changement :\n""
+""\n""
+""%s\n""
+""\n""
+""-- L'équipe %s""
+
 msgid ""You must be a project admin to edit this widget.""
 msgstr """"
 ""Vous devez être administrateur du projet pour pouvoir éditer ce widget.""
@@ -1084,12 +1164,25 @@ msgstr """"
 ""Vous devez supprimer l'utilisateur des administrateurs d'annonces avant de ""
 ""pouvoir l'enlever des rédacteurs""
 
+msgid """"
+""Your email change is complete. Your new email address is <strong>%s</strong>.""
+msgstr """"
+""Votre changement d'adresse e-mail est confirmé. Votre nouvelle adresse e-""
+""mail est <strong>%s</strong>""
+
 msgid ""Your history is empty""
 msgstr ""Votre historique est vide""
 
 msgid ""Your platform does not allow restricted users.""
 msgstr ""Votre plateforme n'authorise pas les utilisateurs restreints""
 
+#, php-format
+msgid ""[%s] Email change confirmation""
+msgstr ""[%s] Confirmation de changement d'e-mail""
+
+msgid ""back to home page""
+msgstr ""Retour à la page d'accueil""
+
 msgid ""categories""
 msgstr ""catégories""
 
diff --git a/site-content/fr_FR/account/account.tab b/site-content/fr_FR/account/account.tab
index c8405a02862..83a6b5cd0a3 100644
--- a/site-content/fr_FR/account/account.tab
+++ b/site-content/fr_FR/account/account.tab
@@ -102,29 +102,6 @@ account_preferences	html_format	HTML
 account_preferences	text_format	Texte
 #
 #-----------------------------------------------
-# Script: SF/www/account/change_email.php
-#
-account_change_email	title	Changer l'adresse e-mail
-account_change_email	message	<P>Le changement d'adresse e-mail nécessite une confirmation depuis votre nouvelle adresse e-mail de façon à s'assurer que nous disposons d'une adresse valide. <P>La soumission de ce formulaire déclenchera l'envoi d'un e-mail à votre nouvelle adresse incluant un lien à visiter pour confirmer définitivement le changement.
-account_change_email	label_new	Nouvelle adresse e-mail
-account_change_email	send_new	Envoyer la confirmation
-#
-#-----------------------------------------------
-# Script: SF/www/account/change_email-confirm.php
-#
-account_change_email-confirm	message	Vous avez demandé a changer votre adresse e-mail en $1.\nMerci de visiter le lien ci-dessous pour confirmer ce changement :\n\n$2\n\n-- L'équipe $1
-account_change_email-confirm	title	Confirmation de changement d'adresse e-mail
-account_change_email-confirm	mailsent	Un courrier électronique vient d'être envoyé à votre nouvelle adresse e-mail. Suivez les instructions fournies dans ce message pour confirmer définitivement le changement.
-#
-#-----------------------------------------------
-# Script: SF/www/account/change_email-complete.php
-#
-account_change_email-complete	invalid_hash	Clé de confirmation invalide.
-account_change_email-complete	duplicate_hash	Cette clé de confirmation est présente plus d'une fois dans la base.
-account_change_email-complete	title	Changement d'e-mail confirmé
-account_change_email-complete	message	Bienvenue, $1.<P>Votre changement d'adresse e-mail est confirmé. Votre nouvelle adresse e-mail est <B>$2</B>. Les courriers électroniques envoyés à $3, utilisateur $1 (compte $4) seront désormais envoyés à cette nouvelle adresse e-mail.
-#
-#-----------------------------------------------
 # Script: SF/www/account/change_pw.php
 #
 account_change_pw	title_success	Mot de passe modifié avec succès
diff --git a/site-content/tuleap-core.pot b/site-content/tuleap-core.pot
index e9760b56e5f..80f5534fd75 100644
--- a/site-content/tuleap-core.pot
+++ b/site-content/tuleap-core.pot
@@ -69,6 +69,11 @@ msgstr """"
 msgid ""Already used""
 msgstr """"
 
+msgid """"
+""An email has been sent to the new address. Follow the instructions in the ""
+""email to complete the email change.""
+msgstr """"
+
 msgid """"
 ""An error occured with your upload. Please try again or choose another image.""
 msgstr """"
@@ -148,6 +153,14 @@ msgstr """"
 msgid ""Categories""
 msgstr """"
 
+msgid ""Change email address""
+msgstr """"
+
+msgid """"
+""Changing your email address will require confirmation from your new email ""
+""address, so that we can ensure we have a good email address on file.""
+msgstr """"
+
 msgid ""Child projects""
 msgstr """"
 
@@ -276,6 +289,15 @@ msgstr """"
 msgid ""Edit widget""
 msgstr """"
 
+msgid ""Email change complete""
+msgstr """"
+
+msgid ""Email change confirmation""
+msgstr """"
+
+msgid ""Email format invalid""
+msgstr """"
+
 msgid ""Emergency""
 msgstr """"
 
@@ -445,6 +467,9 @@ msgstr """"
 msgid ""Nb members""
 msgstr """"
 
+msgid ""New email address:""
+msgstr """"
+
 msgid ""News""
 msgstr """"
 
@@ -647,6 +672,9 @@ msgstr """"
 msgid ""See permissions""
 msgstr """"
 
+msgid ""Send confirmation to new address""
+msgstr """"
+
 msgid ""Service news is disabled for this project.""
 msgstr """"
 
@@ -677,6 +705,11 @@ msgstr """"
 msgid ""Style""
 msgstr """"
 
+msgid """"
+""Submitting the form below will mail a confirmation URL to the new email ""
+""address. Visiting this link will complete the email change.""
+msgstr """"
+
 msgid ""System""
 msgstr """"
 
@@ -715,6 +748,12 @@ msgstr """"
 msgid ""The last project administrator cannot be removed.""
 msgstr """"
 
+#, php-format
+msgid """"
+""The mail was not accepted for the delivery. Please contact the administrator ""
+""at %s.""
+msgstr """"
+
 msgid ""The name is missing for creating a dashboard.""
 msgstr """"
 
@@ -777,6 +816,9 @@ msgstr """"
 msgid ""This group does not have any members yet.""
 msgstr """"
 
+msgid ""This hash key exists more than once""
+msgstr """"
+
 msgid ""This is a system group, you cannot delete it.""
 msgstr """"
 
@@ -837,6 +879,9 @@ msgstr """"
 msgid ""Unable to fetch the latest activities of the project""
 msgstr """"
 
+msgid ""Unauthorized action for anonymous""
+msgstr """"
+
 msgid ""Unix name""
 msgstr """"
 
@@ -895,6 +940,9 @@ msgstr """"
 msgid ""Welcome message and information for users""
 msgstr """"
 
+msgid ""Welcome, %s.""
+msgstr """"
+
 msgid """"
 ""Why don't you start by editing your dashboard <br> and adding some widgets?""
 msgstr """"
@@ -945,6 +993,9 @@ msgid """"
 ""                This action is irreversible. Please confirm this deletion.""
 msgstr """"
 
+msgid ""You are not the user who asked for email change""
+msgstr """"
+
 msgid """"
 ""You can delegate to this group several permissions. All the members of this\n""
 ""                        group will take advantage of these permissions.""
@@ -983,6 +1034,16 @@ msgstr """"
 msgid ""You have not rights to update dashboards of the project \""%s\"".""
 msgstr """"
 
+#, php-format
+msgid """"
+""You have requested a change of email address on %s.\n""
+""Please visit the following URL to complete the email change:\n""
+""\n""
+""%s\n""
+""\n""
+""-- The %s Team""
+msgstr """"
+
 msgid ""You must be a project admin to edit this widget.""
 msgstr """"
 
@@ -999,12 +1060,23 @@ msgid """"
 ""him from writers.""
 msgstr """"
 
+msgid """"
+""Your email change is complete. Your new email address is <strong>%s</strong>.""
+msgstr """"
+
 msgid ""Your history is empty""
 msgstr """"
 
 msgid ""Your platform does not allow restricted users.""
 msgstr """"
 
+#, php-format
+msgid ""[%s] Email change confirmation""
+msgstr """"
+
+msgid ""back to home page""
+msgstr """"
+
 msgid ""categories""
 msgstr """"
 
diff --git a/src/common/autoload.php b/src/common/autoload.php
index 60472ba537d..3a2306e4d5d 100644
--- a/src/common/autoload.php
+++ b/src/common/autoload.php
@@ -2,7 +2,7 @@
 // @codingStandardsIgnoreFile
 // @codeCoverageIgnoreStart
 // this is an autogenerated file - do not edit
-function autoload5968920175c8826d1e7743c6dd8b7ecc($class) {
+function autoload98e39cb101b034b8e47fa5f904bbcbfb($class) {
     static $classes = null;
     if ($classes === null) {
         $classes = array(
@@ -1083,6 +1083,9 @@ function autoload5968920175c8826d1e7743c6dd8b7ecc($class) {
             'tuleap\\trove\\trovecatrouter' => '/trove/TroveCatRouter.php',
             'tuleap\\trovecat\\trovecatlinkdao' => '/trove/TroveCatLinkDao.php',
             'tuleap\\uri\\urimodifier' => '/URI/URIModifier.php',
+            'tuleap\\user\\account\\changepasswordconfirmpresenter' => '/user/Account/ChangePasswordConfirmPresenter.php',
+            'tuleap\\user\\account\\changepasswordcontroller' => '/user/Account/ChangePasswordController.php',
+            'tuleap\\user\\account\\changepasswordpresenter' => '/user/Account/ChangePasswordPresenter.php',
             'tuleap\\user\\admin\\pendingprojectbuilder' => '/user/Admin/PendingProjectBuilder.php',
             'tuleap\\user\\admin\\pendinguserpresenter' => '/user/Admin/PendingUserPresenter.php',
             'tuleap\\user\\admin\\pendinguserscollectionpresenter' => '/user/Admin/PendingUsersCollectionPresenter.php',
@@ -1344,5 +1347,5 @@ function autoload5968920175c8826d1e7743c6dd8b7ecc($class) {
         require dirname(__FILE__) . $classes[$cn];
     }
 }
-spl_autoload_register('autoload5968920175c8826d1e7743c6dd8b7ecc');
+spl_autoload_register('autoload98e39cb101b034b8e47fa5f904bbcbfb');
 // @codeCoverageIgnoreEnd
diff --git a/src/common/dao/UserDao.class.php b/src/common/dao/UserDao.class.php
index 77caadd5620..97ccb38146d 100644
--- a/src/common/dao/UserDao.class.php
+++ b/src/common/dao/UserDao.class.php
@@ -769,4 +769,14 @@ public function removeConfirmHash($confirm_hash) {
         $sql = ""UPDATE user SET confirm_hash = null WHERE confirm_hash=$confirm_hash"";
         return $this->update($sql);
     }
+
+    public function setEmailChangeConfirm($user_id, $confirm_hash, $email_new)
+    {
+        $user_id      = $this->da->escapeInt($user_id);
+        $confirm_hash = $this->da->quoteSmart($confirm_hash);
+        $email_new    = $this->da->quoteSmart($email_new);
+
+        $sql = ""UPDATE user SET confirm_hash=$confirm_hash, email_new=$email_new WHERE user_id=$user_id"";
+        return $this->update($sql);
+    }
 }
diff --git a/src/common/event/Event.class.php b/src/common/event/Event.class.php
index ca046dfe856..da500828758 100644
--- a/src/common/event/Event.class.php
+++ b/src/common/event/Event.class.php
@@ -67,16 +67,6 @@ class Event {
      */
     const LIST_SSH_KEYS = 'list_ssh_keys';
 
-    /**
-     * The user has just changed his email address.
-     *
-     * Parameters:
-     *  'user_id' => User ID
-     *
-     * No expected results
-     */
-    const USER_EMAIL_CHANGED = 'user_email_changed';
-
     /**
      * Force aliases database update.
      *
diff --git a/src/common/system_event/SystemEventManager.class.php b/src/common/system_event/SystemEventManager.class.php
index 5340c107734..eabdfdab52b 100644
--- a/src/common/system_event/SystemEventManager.class.php
+++ b/src/common/system_event/SystemEventManager.class.php
@@ -38,7 +38,6 @@ private function __construct(SystemEventDao $dao = null, SystemEventsFollowersDa
         $event_manager = $this->_getEventManager();
         $events_to_listen = array(
             Event::SYSTEM_CHECK,
-            Event::USER_EMAIL_CHANGED,
             Event::PROJECT_RENAME,
             Event::USER_RENAME,
             Event::COMPUTE_MD5SUM,
@@ -157,11 +156,6 @@ function addSystemEvent($event, $params) {
                                $this->concatParameters($params, array('project_path', 'file_id', 'old_path' )),
                                SystemEvent::PRIORITY_HIGH);
             break;
-        case Event::USER_EMAIL_CHANGED:
-            $this->createEvent(SystemEvent::TYPE_USER_EMAIL_CHANGED,
-                               $params['user_id'],
-                               SystemEvent::PRIORITY_LOW);
-            break;
         case 'approve_pending_project':
             $this->createEvent(SystemEvent::TYPE_PROJECT_CREATE,
                                $params['group_id'],
diff --git a/src/common/user/Account/ChangePasswordController.php b/src/common/user/Account/ChangePasswordController.php
new file mode 100644
index 00000000000..0049a0c5e44
--- /dev/null
+++ b/src/common/user/Account/ChangePasswordController.php
@@ -0,0 +1,171 @@
+<?php
+/**
+ * Copyright (c) Enalean, 2018. All Rights Reserved.
+ *
+ * This file is a part of Tuleap.
+ *
+ * Tuleap is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * Tuleap is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+namespace Tuleap\User\Account;
+
+use Tuleap\Layout\BaseLayout;
+
+class ChangePasswordController
+{
+    const URL = '/account/change_email.php';
+
+    /**
+     * @var \UserManager
+     */
+    private $user_manager;
+    /**
+     * @var \EventManager
+     */
+    private $event_manager;
+
+    public function __construct(\UserManager $user_manager, \EventManager $event_manager)
+    {
+        $this->user_manager  = $user_manager;
+        $this->event_manager = $event_manager;
+    }
+
+    public function change(\HTTPRequest $request, BaseLayout $response)
+    {
+        $this->event_manager->processEvent('before_change_email', array());
+
+        $current_user = $request->getCurrentUser();
+        if ($current_user->isAnonymous()) {
+            $response->addFeedback(\Feedback::ERROR, _('Unauthorized action for anonymous'));
+            $response->redirect('/');
+        }
+
+        $response->header(['title' =>_('Change email address')]);
+
+        $presenter = new ChangePasswordPresenter(
+            new \CSRFSynchronizerToken(self::URL),
+            $current_user->getId()
+        );
+
+        $renderer = \TemplateRendererFactory::build()->getRenderer(__DIR__.'/../../../templates/user');
+        $renderer->renderToPage('change-email', $presenter);
+
+        $response->footer(array());
+    }
+
+    public function confirm(\HTTPRequest $request, BaseLayout $response)
+    {
+        $this->event_manager->processEvent('before_change_email-confirm', []);
+
+        $token = new \CSRFSynchronizerToken(self::URL);
+        $token->check();
+
+        $current_user = $request->getCurrentUser();
+        if ($current_user->isAnonymous()) {
+            $response->addFeedback(\Feedback::ERROR, _('Unauthorized action for anonymous'));
+            $response->redirect('/');
+        }
+
+        $new_mail = $request->getValidated('form_newemail', new \Valid_Email(), '');
+        if ($new_mail === '') {
+            $response->addFeedback(\Feedback::ERROR, _('Email format invalid'));
+            $response->redirect('/change_email.php');
+        }
+
+        $confirmation_hash = (new \RandomNumberGenerator())->getNumber();
+        $this->user_manager->setEmailChangeConfirm($current_user->getId(), $confirmation_hash, $new_mail);
+
+        $subject = sprintf(
+            _('[%s] Email change confirmation'),
+            \ForgeConfig::get('sys_name')
+        );
+        $message = sprintf(
+            _(""You have requested a change of email address on %s.\nPlease visit the following URL to complete the email change:\n\n%s\n\n-- The %s Team""),
+            \ForgeConfig::get('sys_name'),
+            $request->getServerUrl().$this->getChangeCompleteUrl($confirmation_hash),
+            \ForgeConfig::get('sys_name')
+        );
+
+        $mail = new \Mail();
+        $mail->setTo($new_mail, true);
+        $mail->setSubject($subject);
+        $mail->setBody($message);
+        $mail->setFrom(\ForgeConfig::get('sys_noreply'));
+        if (! $mail->send()) {
+            $error_message = sprintf(_('The mail was not accepted for the delivery. Please contact the administrator at %s.'), \ForgeConfig::get('sys_email_admin'));
+            $response->addFeedback(\Feedback::ERROR, $error_message);
+            $response->redirect('/change_email.php');
+        }
+
+        $response->header(['title' => _('Email change confirmation')]);
+
+        $renderer = \TemplateRendererFactory::build()->getRenderer(__DIR__.'/../../../templates/user');
+        $renderer->renderToPage('change-email-confirm', []);
+
+        $response->footer([]);
+    }
+
+    public function complete(\HTTPRequest $request, BaseLayout $response)
+    {
+        $this->event_manager->processEvent('before_change_email-complete', []);
+
+        $current_user = $request->getCurrentUser();
+        if ($current_user->isAnonymous()) {
+            $url_redirect  = new \URLRedirect($this->event_manager);
+            $return_to     = $this->getChangeCompleteUrl($request->getValidated('confirm_hash', 'string', ''));
+            $response->redirect($url_redirect->makeReturnToUrl('/account/login.php', $return_to));
+        }
+
+        $user = $this->user_manager->getUserByConfirmHash(
+            $request->getValidated('confirm_hash', 'string', '')
+        );
+
+        if ($user === null) {
+            $response->addFeedback(\Feedback::ERROR, _('This hash key exists more than once'));
+            $response->redirect('/');
+        }
+
+        if ($user->getId() != $current_user->getId()) {
+            $response->addFeedback(\Feedback::ERROR, _('You are not the user who asked for email change'));
+            $response->redirect('/');
+        }
+
+        $old_email_user = clone $user;
+        $user->clearConfirmHash();
+        $user->setEmail($old_email_user->getEmailNew());
+        $user->setEmailNew($old_email_user->getEmail());
+
+        $this->user_manager->updateDb($user);
+
+
+        $response->header(['title' => _('Email change complete')]);
+
+        $renderer = \TemplateRendererFactory::build()->getRenderer(__DIR__.'/../../../templates/user');
+        $renderer->renderToPage(
+            'change-email-complete',
+            [
+                'realname' => $user->getRealName(),
+                'email'    => $user->getEmail(),
+            ]
+        );
+
+        $response->footer([]);
+    }
+
+    private function getChangeCompleteUrl($confirmation_hash)
+    {
+        return '/account/change_email-complete.php?confirm_hash='.$confirmation_hash;
+    }
+}
diff --git a/src/common/user/Account/ChangePasswordPresenter.php b/src/common/user/Account/ChangePasswordPresenter.php
new file mode 100644
index 00000000000..c7924b4d55b
--- /dev/null
+++ b/src/common/user/Account/ChangePasswordPresenter.php
@@ -0,0 +1,40 @@
+<?php
+/**
+ * Copyright (c) Enalean, 2018. All Rights Reserved.
+ *
+ * This file is a part of Tuleap.
+ *
+ * Tuleap is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * Tuleap is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
+ *
+ */
+
+namespace Tuleap\User\Account;
+
+class ChangePasswordPresenter
+{
+    /**
+     * @var int
+     */
+    public $user_id;
+    /**
+     * @var CSRFSynchronizerToken
+     */
+    public $csrf_token;
+
+    public function __construct(\CSRFSynchronizerToken $csrf_token, $user_id)
+    {
+        $this->csrf_token = $csrf_token;
+        $this->user_id    = $user_id;
+    }
+}
diff --git a/src/common/user/UserManager.class.php b/src/common/user/UserManager.class.php
index e92cf98178c..de62881635d 100644
--- a/src/common/user/UserManager.class.php
+++ b/src/common/user/UserManager.class.php
@@ -1006,4 +1006,9 @@ public function removeConfirmHash($confirm_hash) {
         $dao = $this->getDao();
         $dao->removeConfirmHash($confirm_hash);
     }
+
+    public function setEmailChangeConfirm($user_id, $confirm_hash, $email_new)
+    {
+        return $this->getDao()->setEmailChangeConfirm($user_id, $confirm_hash, $email_new);
+    }
 }
diff --git a/src/templates/user/change-email-complete.mustache b/src/templates/user/change-email-complete.mustache
new file mode 100644
index 00000000000..baa681d8c8f
--- /dev/null
+++ b/src/templates/user/change-email-complete.mustache
@@ -0,0 +1,9 @@
+<h2>{{# gettext }}Email change complete{{/ gettext}}</h2>
+
+<p>{{# gettext }}Welcome, %s.| {{ realname }}{{/ gettext }}</p>
+
+<p>{{# gettext }}Your email change is complete. Your new email address is <strong>%s</strong>. | {{ email }}{{/ gettext}}</p>
+
+<p>
+    <a href=""/"">{{# gettext }}back to home page{{/ gettext }}</a>
+</p>
diff --git a/src/templates/user/change-email-confirm.mustache b/src/templates/user/change-email-confirm.mustache
new file mode 100644
index 00000000000..073583897a9
--- /dev/null
+++ b/src/templates/user/change-email-confirm.mustache
@@ -0,0 +1,7 @@
+<h2>{{# gettext }}Email change confirmation{{/ gettext}}</h2>
+
+<p>{{# gettext }}An email has been sent to the new address. Follow the instructions in the email to complete the email change.{{/ gettext}}</p>
+
+<p>
+    <a href=""/"">{{# gettext }}back to home page{{/ gettext }}</a>
+</p>
diff --git a/src/templates/user/change-email.mustache b/src/templates/user/change-email.mustache
new file mode 100644
index 00000000000..3fc24920758
--- /dev/null
+++ b/src/templates/user/change-email.mustache
@@ -0,0 +1,17 @@
+<h2>{{# gettext }}Change email address{{/ gettext}}</h2>
+
+<p>{{# gettext }}Changing your email address will require confirmation from your new email address, so that we can ensure we have a good email address on file.{{/ gettext }}</p>
+
+<p>{{# gettext }}Submitting the form below will mail a confirmation URL to the new email address. Visiting this link will complete the email change.{{/ gettext }}</p>
+
+<form action=""change_email-confirm.php"" method=""post"" class=""form-inline"">
+    {{# csrf_token }}
+        {{> csrf_token_input }}
+    {{/ csrf_token }}
+    {{# gettext }}New email address:{{/ gettext }} <input type=""text"" size=""30"" name=""form_newemail"" />
+    <input class=""btn btn-primary"" type=""submit"" name=""Send Confirmation to New Address"" value=""{{# gettext }}Send confirmation to new address{{/ gettext }}"">
+</form>
+
+<p>
+    <a href=""/"">{{# gettext }}back to home page{{/ gettext }}</a>
+</p>
diff --git a/src/www/account/change_email-complete.php b/src/www/account/change_email-complete.php
index 5475ff70553..e7863facc09 100644
--- a/src/www/account/change_email-complete.php
+++ b/src/www/account/change_email-complete.php
@@ -1,6 +1,6 @@
 <?php
-/* SourceForge: Breaking Down the Barriers to Open Source Development
- * Copyright (c) Enalean, 2015. All Rights Reserved.
+/**
+ * Copyright (c) Enalean, 2018. All rights reserved
  *
  * This file is a part of Tuleap.
  *
@@ -11,50 +11,14 @@
  *
  * Tuleap is distributed in the hope that it will be useful,
  * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
  * GNU General Public License for more details.
  *
  * You should have received a copy of the GNU General Public License
- * along with Tuleap. If not, see <http://www.gnu.org/licenses/>.
+ * along with Tuleap. If not, see <http://www.gnu.org/licenses/
  */
 
-require_once('pre.php');    
+require_once 'pre.php';
 
-$em = EventManager::instance();
-$em->processEvent('before_change_email-complete', array());
-
-$hp = Codendi_HTMLPurifier::instance();
-$request = HTTPRequest::instance();
-$user_manager = UserManager::instance();
-
-
-/** @var PFUser */
-$user = $user_manager->getUserByConfirmHash($request->getValidated('confirm_hash', 'string', ''));
-
-if ($user === null) {
-    $GLOBALS['Response']->addFeedback(Feedback::ERROR, $Language->getText('account_change_email-complete', 'duplicate_hash'));
-    $GLOBALS['Response']->redirect('/');
-}
-
-$old_email_user = clone $user;
-$user->clearConfirmHash();
-$user->setEmail($old_email_user->getEmailNew());
-$user->setEmailNew($old_email_user->getEmail());
-
-$user_manager->updateDb($user);
-
-$em->processEvent(Event::USER_EMAIL_CHANGED, $user->getId());
-
-$HTML->header(array('title'=>$Language->getText('account_change_email-complete', 'title')));
-?>
-<p><b><?php echo $Language->getText('account_change_email-complete', 'title'); ?></b>
-<P><?php echo $Language->getText('account_change_email-complete', 'message',
-			     array(  $hp->purify($user->getRealname(), CODENDI_PURIFIER_CONVERT_HTML) , $user->getEmail(),
-				    $GLOBALS['sys_name'], $user->getUsername())); ?>
-
-<P><A href=""/"">[ <?php echo $Language->getText('global', 'back_home'); ?> ]</A>
-
-<?php
-$HTML->footer(array());
-
-?>
+$controller = new \Tuleap\User\Account\ChangePasswordController(UserManager::instance(), EventManager::instance());
+$controller->complete(HTTPRequest::instance(), $GLOBALS['Response']);
diff --git a/src/www/account/change_email-confirm.php b/src/www/account/change_email-confirm.php
index 70b0c45c4b6..b1705abcfc1 100644
--- a/src/www/account/change_email-confirm.php
+++ b/src/www/account/change_email-confirm.php
@@ -1,58 +1,24 @@
 <?php
-//
-// SourceForge: Breaking Down the Barriers to Open Source Development
-// Copyright 1999-2000 (c) The SourceForge Crew
-// http://sourceforge.net
-//
-// 
-
-require_once('pre.php');
-require_once('common/mail/Mail.class.php');
-require_once('common/event/EventManager.class.php');
-
-
-$em =& EventManager::instance();
-$em->processEvent('before_change_email-confirm', array());
-
-$request =& HTTPRequest::instance();
-
-$confirm_hash = substr(md5($GLOBALS['session_hash'] . time()),0,16);
-
-$res_user = db_query(""SELECT * FROM user WHERE user_id="".user_getid());
-if (db_numrows($res_user) < 1) exit_error(""Invalid User"",""That user does not exist."");
-$row_user = db_fetch_array($res_user);
-
-$mail_is_sent = false;
-
-$form_newemail = $request->get('form_newemail');
-if(validate_email($form_newemail)) {
-
-    db_query(""UPDATE user SET confirm_hash='"".$confirm_hash.""',email_new='"".db_es($form_newemail).""' ""
-             . ""WHERE user_id="".$row_user['user_id']);
-
-    $message = stripcslashes($Language->getText('account_change_email-confirm', 'message', array($GLOBALS['sys_name'], get_server_url().""/account/change_email-complete.php?confirm_hash="".$confirm_hash)));
-
-    $mail = new Mail();
-    $mail->setTo($form_newemail,true);
-    $mail->setSubject($GLOBALS['sys_name'].': '.$Language->getText('account_change_email-confirm', 'title'));
-    $mail->setBody($message);
-    $mail->setFrom($GLOBALS['sys_noreply']);
-    $mail_is_sent = $mail->send();
-    if (!$mail_is_sent) {
-        $GLOBALS['Response']->addFeedback('error', $GLOBALS['Language']->getText('global', 'mail_failed', array($GLOBALS['sys_email_admin'])));
-    }
-} else {
-    $GLOBALS['Response']->addFeedback('error', $GLOBALS['Language']->getText('include_utils', 'invalid_email'));
-}
-site_header(array('title'=>$Language->getText('account_change_email-confirm', 'title'))); ?>
-
-<P><B><?php if ($mail_is_sent) { echo $Language->getText('account_change_email-confirm', 'title'); ?></B>
-
-<P><?php echo $Language->getText('account_change_email-confirm', 'mailsent'); ?>.
-
-<?php
-}
-echo '<p><a href=""/"">['. $Language->getText('global', 'back_home'). ']</a></p>';
-site_footer(array());
-
-?>
+/**
+ * Copyright (c) Enalean, 2018. All rights reserved
+ *
+ * This file is a part of Tuleap.
+ *
+ * Tuleap is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * Tuleap is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with Tuleap. If not, see <http://www.gnu.org/licenses/
+ */
+
+require_once 'pre.php';
+
+$controller = new \Tuleap\User\Account\ChangePasswordController(UserManager::instance(), EventManager::instance());
+$controller->confirm(HTTPRequest::instance(), $GLOBALS['Response']);
diff --git a/src/www/account/change_email.php b/src/www/account/change_email.php
index 74ca78235c3..7caa01b12f7 100644
--- a/src/www/account/change_email.php
+++ b/src/www/account/change_email.php
@@ -1,42 +1,24 @@
 <?php
-//
-// SourceForge: Breaking Down the Barriers to Open Source Development
-// Copyright 1999-2000 (c) The SourceForge Crew
-// http://sourceforge.net
-//
-// 
-
-require_once('pre.php');
-require_once('common/event/EventManager.class.php');
-
-$em =& EventManager::instance();
-$em->processEvent('before_change_email', array());
-
-session_require(array('isloggedin'=>1));
-
-
-$HTML->header(array('title'=> $Language->getText('account_change_email', 'title')));
-$csrf = new CSRFSynchronizerToken('/account/change_email.php');
-?>
-
-<h2><?php echo $Language->getText('account_change_email', 'title'); ?></h2>
-
-<?php echo $Language->getText('account_change_email', 'message'); ?>
-
-<FORM action=""change_email-confirm.php"" method=""post"" class=""form-inline"">
-<?php
-echo $csrf->fetchHTMLInput();
-?>
-<INPUT type=""hidden"" name=""form_user"" value=""<?php print user_getid(); ?>"">
-<BR>
-<?php echo $Language->getText('account_change_email', 'label_new'); ?>:
-<INPUT type=""text"" size=""30"" name=""form_newemail"">
-<INPUT class=""btn btn-primary"" type=""submit"" name=""Send Confirmation to New Address"" value=""<?php echo $Language->getText('account_change_email', 'send_new'); ?>"">
-</FORM>
-
-<A href=""/"">[<?php echo $Language->getText('global', 'back_home'); ?>]</A>
-
-<?php
-$HTML->footer(array());
-
-?>
+/**
+ * Copyright (c) Enalean, 2018. All rights reserved
+ *
+ * This file is a part of Tuleap.
+ *
+ * Tuleap is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * Tuleap is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with Tuleap. If not, see <http://www.gnu.org/licenses/
+ */
+
+require_once 'pre.php';
+
+$controller = new \Tuleap\User\Account\ChangePasswordController(UserManager::instance(), EventManager::instance());
+$controller->change(HTTPRequest::instance(), $GLOBALS['Response']);
diff --git a/src/www/project/admin/editgenericmember.php b/src/www/project/admin/editgenericmember.php
index 699197abb3d..1f123ed68fa 100644
--- a/src/www/project/admin/editgenericmember.php
+++ b/src/www/project/admin/editgenericmember.php
@@ -86,7 +86,7 @@
         '. $generic_user->getRealName() .'
     </p>
     <p>
-        <label for=""generic_user_email""><b>'. $Language->getText('account_change_email', 'title') .'</b>:</label><br />
+        <label for=""generic_user_email""><b>'. _('Change email address') .'</b>:</label><br />
         <input type=""email"" name=""email"" id=""generic_user_email"" value=""'.
             $hp->purify($generic_user->getEmail(), CODENDI_PURIFIER_CONVERT_HTML) .'"" />
      </p>"
CVE-2018-10366,"From 098c2bc907443d67e9e18645f850e3de42941d20 Mon Sep 17 00:00:00 2001
From: Samuel Georges <sam@daftspunk.com>
Date: Wed, 4 Apr 2018 13:56:08 +1000
Subject: [PATCH] KISS and form_value() doesn't use escaping

---
 components/account/update.htm | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/components/account/update.htm b/components/account/update.htm
index a294dd0d..7d980daa 100644
--- a/components/account/update.htm
+++ b/components/account/update.htm
@@ -1,13 +1,13 @@
-{{ form_ajax('onUpdate', { model: user }) }}
+{{ form_ajax('onUpdate') }}
 
     <div class=""form-group"">
         <label for=""accountName"">Full Name</label>
-        <input name=""name"" type=""text"" class=""form-control"" id=""accountName"" value=""{{ form_value('name') }}"">
+        <input name=""name"" type=""text"" class=""form-control"" id=""accountName"" value=""{{ user.name }}"">
     </div>
 
     <div class=""form-group"">
         <label for=""accountEmail"">Email</label>
-        <input name=""email"" type=""email"" class=""form-control"" id=""accountEmail"" value=""{{ form_value('email') }}"">
+        <input name=""email"" type=""email"" class=""form-control"" id=""accountEmail"" value=""{{ user.email }}"">
     </div>
 
     <div class=""form-group"">
@@ -22,4 +22,4 @@
 
     <button type=""submit"" class=""btn btn-default"">Save</button>
 
-{{ form_close() }}
\ No newline at end of file
+{{ form_close() }}"
OSV-2018-109,"From 5f96a95e2562f026557f625e50c052e77c7bc2e8 Mon Sep 17 00:00:00 2001
From: Kurt Roeckx <kurt@roeckx.be>
Date: Sat, 12 May 2018 12:08:14 +0200
Subject: [PATCH] Set sess to NULL after freeing it.

Found by OSS-fuzz

Bug introduced in commit 61fb59238dad6452a37ec14513fae617a4faef29

Reviewed-by: Matt Caswell <matt@openssl.org>
GH: #6235
---
 ssl/t1_lib.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/ssl/t1_lib.c b/ssl/t1_lib.c
index b312a14fabb8e..c076782842086 100644
--- a/ssl/t1_lib.c
+++ b/ssl/t1_lib.c
@@ -1384,6 +1384,7 @@ SSL_TICKET_STATUS tls_decrypt_ticket(SSL *s, const unsigned char *etick,
         /* Some additional consistency checks */
         if (slen != 0) {
             SSL_SESSION_free(sess);
+            sess = NULL;
             ret = SSL_TICKET_NO_DECRYPT;
             goto end;
         }"
OSV-2018-134,"From 18384d6c6cbb666d08d08c0dabc4a0d1b7623f6f Mon Sep 17 00:00:00 2001
From: Josh Haberman <jhaberman@gmail.com>
Date: Mon, 19 Feb 2018 13:36:36 -0800
Subject: [PATCH] Fixed bug found by fuzzing.

Thanks to OSS-Fuzz for finding the bug.
https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=5873
---
 src/disassemble.cc                               |   5 +++++
 .../f5d4fb20f43ef7131ed49ff29f5c1bee69070ff2     | Bin 0 -> 4486 bytes
 2 files changed, 5 insertions(+)
 create mode 100644 tests/testdata/fuzz_corpus/f5d4fb20f43ef7131ed49ff29f5c1bee69070ff2

diff --git a/src/disassemble.cc b/src/disassemble.cc
index f0a03650..b1bb710e 100644
--- a/src/disassemble.cc
+++ b/src/disassemble.cc
@@ -46,6 +46,11 @@ static std::string RightPad(const std::string& input, size_t size) {
 }  // anonymous namespace
 
 void DisassembleFindReferences(const DisassemblyInfo& info, RangeSink* sink) {
+  if (info.arch != CS_ARCH_X86) {
+    // x86 only for now.
+    return;
+  }
+
   csh handle;
   if (cs_open(info.arch, info.mode, &handle) != CS_ERR_OK ||
       cs_option(handle, CS_OPT_DETAIL, CS_OPT_ON) != CS_ERR_OK) {
diff --git a/tests/testdata/fuzz_corpus/f5d4fb20f43ef7131ed49ff29f5c1bee69070ff2 b/tests/testdata/fuzz_corpus/f5d4fb20f43ef7131ed49ff29f5c1bee69070ff2
new file mode 100644
index 0000000000000000000000000000000000000000..ee17dbf03be12a22541ba7eab3535c41c67f3aa0
GIT binary patch
literal 4486
zcmeHKOKTHR6h4!eZ7iZyTLl+`bkWtg5pkhV(2A%F7j-FN(vE4drX`t5T*WR+{)9XK
zfZez&{R936LFh7F=|YI#cOR3<ZJMUE29X@NbMATH^SC#px%lFV=lO(Ar{nvcOo*cR
z5s_PY(KNmy^D-;fG!3x=Wt9+i(~Em_dPQSuT!C=~k_zAkju3D!$5->1dP^TZ-b22L
zM<g!q1U)txD)Qip$W!XN;PQ%t<63_{?Oa>>HoP<I>3Qi`f61}w-^56GskjM`Iv$n_
zuI&l=Cg$|z+EVE9GDGTJ98!<|hRI{<6#m>Z_sb(Yq`&jl8;}P=36DzX<U~4YTF;B>
z2TCSN37;<$BA-ydnH29b_gHCvKIS0p&)Oe{VJ?vMyrEe~`Cp{%wc=5SIv*1S_*{No
zVU$!*{)EQX$a9Wd(_MMNk!#vd>@)DGLD^U$!8*>I(VzCa`iaVDHt8~sCgNX>f`VSh
znr77jMU$R*Ab6WBq;C^%5vPE75{tLV!V+#%-4Y@m{q%!0KPQL0fC^0fF2XTpaV`jp
zH+0A>e$eJYlOGuVUEu6hkpi%XDaBhN9v<4;zyz2mnz@pHlbHD-um|V#NB$jy9~%7F
z;O7Rv1m4}n>3|9R<3eD3`^SZ;UBG&^^W)$*RJZpSsI`rcwB+kyyWRfzedpWWLGE=^
z{V!6rfMOn1&#KBpGsMcP$`)pz@Czgln8V&f7AjFhVGo$dGlPBL4Cn=5)xg%&+<p;8
zY#7a1F>g{Xfn~vNmqZ2}$Z9Km{`pE!|L`sj%fN9><JEe+P<wO=P-eAgJ&2=5EWt_`
zhZ2<QbqQ)4nxG&kl^XZ&1(hf+Z7zR~SGTHfgXIQvV7L;Mw<@Kz>YELit9@85*P{1n
zX;=%Zm55FggY~s)q-OEV6S03}YEmsxrO%of`G}6{Hl(Jixv0k|X%+{RL#G(d<+P(F
M<HrAYjqlg@KVOW><^TWy

literal 0
HcmV?d00001"
CVE-2018-14351,"From 3c49c44be9b459d9c616bcaef6eb5d51298c1741 Mon Sep 17 00:00:00 2001
From: JerikoOne <jeriko.one@gmx.us>
Date: Sat, 7 Jul 2018 15:19:58 -0500
Subject: [PATCH] Ensure litlen isn't larger than our mailbox

---
 imap/command.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/imap/command.c b/imap/command.c
index 74d12df18eb..13be77a79d2 100644
--- a/imap/command.c
+++ b/imap/command.c
@@ -635,6 +635,13 @@ static void cmd_parse_status(struct ImapData *idata, char *s)
       idata->status = IMAP_FATAL;
       return;
     }
+
+    if (strlen(idata->buf) < litlen)
+    {
+      mutt_debug(1, ""Error parsing STATUS mailbox\n"");
+      return;
+    }
+
     mailbox = idata->buf;
     s = mailbox + litlen;
     *s = '\0';"
OSV-2018-12,"From 65f13fc5fb879cd00f08904f14a9339c11be59c3 Mon Sep 17 00:00:00 2001
From: Even Rouault <even.rouault@spatialys.com>
Date: Thu, 28 Jun 2018 11:37:56 +0200
Subject: [PATCH] RMF: avoid double free. Fixes
 https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=9138. Credit to OSS
 Fuzz. master only

---
 gdal/frmts/rmf/rmfdataset.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gdal/frmts/rmf/rmfdataset.cpp b/gdal/frmts/rmf/rmfdataset.cpp
index ca6f7feb243e..c424b842db83 100644
--- a/gdal/frmts/rmf/rmfdataset.cpp
+++ b/gdal/frmts/rmf/rmfdataset.cpp
@@ -351,7 +351,7 @@ CPLErr RMFRasterBand::IReadBlock( int nBlockXOff, int nBlockYOff,
             }
 
             GByte *pabyNewTile = reinterpret_cast<GByte *>(
-                        VSIRealloc(poGDS->pabyCurrentTile, nTileBytes));
+                    VSIRealloc(poGDS->pabyCurrentTile, std::max(1U, nTileBytes)));
             if( !pabyNewTile )
             {
                 CPLError( CE_Failure, CPLE_FileIO,"
OSV-2018-179,"From 220a5991baa213b7bd173ea02090dc6fc8aef655 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 13:51:39 -0500
Subject: [PATCH 01/66] [kern/kerx] Fix trace numbering

---
 src/hb-aat-layout-kerx-table.hh | 1 +
 src/hb-ot-kern-table.hh         | 1 +
 2 files changed, 2 insertions(+)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index ca2fdb493d1..0c9a0ffc214 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -720,6 +720,7 @@ struct kerx
 
     skip:
       table = &StructAfter<KerxTable> (*table);
+      c->set_lookup_index (c->lookup_index + 1);
     }
   }
 
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 66e827d1724..213b9cfcbad 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -596,6 +596,7 @@ struct KernTable
 
     skip:
       st = &StructAfter<SubTable> (*st);
+      c->set_lookup_index (c->lookup_index + 1);
     }
   }
 

From 164eedd9181345d84d5f8059475ad4b97784fd46 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 13:18:27 -0500
Subject: [PATCH 02/66] [kern] Minor

---
 src/hb-ot-kern-table.hh | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 213b9cfcbad..82b8b67cd1b 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -478,8 +478,11 @@ struct KernSubTable
   inline unsigned int get_size (void) const { return u.header.length; }
   inline unsigned int get_type (void) const { return u.header.format; }
 
-  inline bool is_simple (void) const
-  { return !(u.header.coverage & (u.header.CrossStream | u.header.Variation)); }
+  inline bool is_crossStream (void) const
+  { return u.header.coverage & u.header.CrossStream; }
+
+  inline bool is_variation (void) const
+  { return u.header.coverage & u.header.Variation; }
 
   inline bool is_horizontal (void) const
   { return (u.header.coverage & u.header.Direction) == u.header.DirectionHorizontal; }
@@ -548,7 +551,7 @@ struct KernTable
     unsigned int count = thiz()->nTables;
     for (unsigned int i = 0; i < count; i++)
     {
-      if (!st->is_simple () || !st->is_horizontal ())
+      if (!st->is_variation () || !st->is_crossStream () || !st->is_horizontal ())
         continue;
       if (st->is_override ())
         v = 0;
@@ -569,14 +572,15 @@ struct KernTable
     unsigned int last_override = 0;
     for (unsigned int i = 0; i < count; i++)
     {
-      if (st->is_simple () && st->is_override ())
+      if (!st->is_variation () && !st->is_crossStream () &&
+	  st->is_override ())
         last_override = i;
       st = &StructAfter<SubTable> (*st);
     }
     st = CastP<SubTable> (&thiz()->dataZ);
     for (unsigned int i = 0; i < count; i++)
     {
-      if (!st->is_simple ())
+      if (st->is_variation () || st->is_crossStream ())
         goto skip;
 
       if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) != st->is_horizontal ())

From 10e6f708f30986bab9f7b506935f2555d6b79ff4 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 13:32:13 -0500
Subject: [PATCH 03/66] [kern] Minor

---
 src/hb-ot-kern-table.hh | 30 +++++++++++-------------------
 1 file changed, 11 insertions(+), 19 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 82b8b67cd1b..fa2b91cc76e 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -478,18 +478,6 @@ struct KernSubTable
   inline unsigned int get_size (void) const { return u.header.length; }
   inline unsigned int get_type (void) const { return u.header.format; }
 
-  inline bool is_crossStream (void) const
-  { return u.header.coverage & u.header.CrossStream; }
-
-  inline bool is_variation (void) const
-  { return u.header.coverage & u.header.Variation; }
-
-  inline bool is_horizontal (void) const
-  { return (u.header.coverage & u.header.Direction) == u.header.DirectionHorizontal; }
-
-  inline bool is_override (void) const
-  { return bool (u.header.coverage & u.header.Override); }
-
   inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right) const
   {
     switch (get_type ()) {
@@ -523,7 +511,7 @@ struct KernSubTable
     return_trace (dispatch (c));
   }
 
-  protected:
+  public:
   union {
   KernSubTableHeader				header;
   KernSubTableFormat0<KernSubTableHeader>	format0;
@@ -551,9 +539,11 @@ struct KernTable
     unsigned int count = thiz()->nTables;
     for (unsigned int i = 0; i < count; i++)
     {
-      if (!st->is_variation () || !st->is_crossStream () || !st->is_horizontal ())
+      if ((st->u.header.coverage &
+	   (st->u.header.Variation | st->u.header.CrossStream | st->u.header.Direction)) !=
+	  st->u.header.DirectionHorizontal)
         continue;
-      if (st->is_override ())
+      if (st->u.header.coverage & st->u.header.Override)
         v = 0;
       v += st->get_kerning (left, right);
       st = &StructAfter<SubTable> (*st);
@@ -572,18 +562,20 @@ struct KernTable
     unsigned int last_override = 0;
     for (unsigned int i = 0; i < count; i++)
     {
-      if (!st->is_variation () && !st->is_crossStream () &&
-	  st->is_override ())
+      if (!(st->u.header.coverage & (st->u.header.Variation | st->u.header.CrossStream)) &&
+	  (st->u.header.coverage & st->u.header.Override))
         last_override = i;
       st = &StructAfter<SubTable> (*st);
     }
     st = CastP<SubTable> (&thiz()->dataZ);
     for (unsigned int i = 0; i < count; i++)
     {
-      if (st->is_variation () || st->is_crossStream ())
+      if (st->u.header.coverage &
+	  (st->u.header.Variation | st->u.header.CrossStream))
         goto skip;
 
-      if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) != st->is_horizontal ())
+      if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) !=
+	  ((st->u.header.coverage & st->u.header.Direction) == st->u.header.DirectionHorizontal))
 	goto skip;
 
       if (i < last_override)

From c0383c6bb725bed2a48485988a427348384f3f87 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 15:07:19 -0500
Subject: [PATCH 04/66] Minor

---
 src/hb-aat-layout-common.hh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/hb-aat-layout-common.hh b/src/hb-aat-layout-common.hh
index ee2136ed972..ddfd04b87a5 100644
--- a/src/hb-aat-layout-common.hh
+++ b/src/hb-aat-layout-common.hh
@@ -365,7 +365,7 @@ namespace AAT {
 enum { DELETED_GLYPH = 0xFFFF };
 
 /*
- * Extended State Table
+ * (Extended) State Table
  */
 
 template <typename T>

From b11830c09e0d78bbdaf86ef02191d00b3d8256c4 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 15:23:18 -0500
Subject: [PATCH 05/66] [kern] Improve Format 2

Still disabled.
---
 src/hb-aat-layout-common.hh | 20 +++++++++-----------
 src/hb-ot-kern-table.hh     | 35 ++++++-----------------------------
 2 files changed, 15 insertions(+), 40 deletions(-)

diff --git a/src/hb-aat-layout-common.hh b/src/hb-aat-layout-common.hh
index ddfd04b87a5..539941d85f7 100644
--- a/src/hb-aat-layout-common.hh
+++ b/src/hb-aat-layout-common.hh
@@ -528,24 +528,22 @@ struct StateTable
 
 struct ClassTable
 {
-  inline unsigned int get_class (hb_codepoint_t glyph_id) const
+  inline unsigned int get_class (hb_codepoint_t glyph_id, unsigned int outOfRange=0) const
   {
-    return firstGlyph <= glyph_id && glyph_id - firstGlyph < glyphCount ? classArrayZ[glyph_id - firstGlyph] : 1;
+    unsigned int i = glyph_id - firstGlyph;
+    return i >= classArray.len ? outOfRange : classArray.arrayZ[i];
   }
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
-    return_trace (c->check_struct (this) && classArrayZ.sanitize (c, glyphCount));
+    return_trace (c->check_struct (this) && classArray.sanitize (c));
   }
   protected:
-  GlyphID	firstGlyph;	/* First glyph index included in the trimmed array. */
-  HBUINT16	glyphCount;	/* Total number of glyphs (equivalent to the last
-				 * glyph minus the value of firstGlyph plus 1). */
-  UnsizedArrayOf<HBUINT8>
-		classArrayZ;	/* The class codes (indexed by glyph index minus
-				 * firstGlyph). */
+  GlyphID		firstGlyph;	/* First glyph index included in the trimmed array. */
+  ArrayOf<HBUINT8>	classArray;	/* The class codes (indexed by glyph index minus
+					 * firstGlyph). */
   public:
-  DEFINE_SIZE_ARRAY (4, classArrayZ);
+  DEFINE_SIZE_ARRAY (4, classArray);
 };
 
 struct MortTypes
@@ -557,7 +555,7 @@ struct MortTypes
   {
     inline unsigned int get_class (hb_codepoint_t glyph_id, unsigned int num_glyphs HB_UNUSED) const
     {
-      return ClassTable::get_class (glyph_id);
+      return ClassTable::get_class (glyph_id, 1);
     }
   };
   template <typename T>
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index fa2b91cc76e..c54c10086e4 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -319,44 +319,21 @@ struct KernSubTableFormat1
   DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 10);
 };
 
-struct KernClassTable
-{
-  inline unsigned int get_class (hb_codepoint_t g) const { return classes[g - firstGlyph]; }
-
-  inline bool sanitize (hb_sanitize_context_t *c) const
-  {
-    TRACE_SANITIZE (this);
-    return_trace (c->check_struct (this) &&
-		  classes.sanitize (c));
-  }
-
-  protected:
-  HBUINT16		firstGlyph;	/* First glyph in class range. */
-  ArrayOf<HBUINT16>	classes;	/* Glyph classes. */
-  public:
-  DEFINE_SIZE_ARRAY (4, classes);
-};
-
 template <typename KernSubTableHeader>
 struct KernSubTableFormat2
 {
   inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right,
 			  AAT::hb_aat_apply_context_t *c) const
   {
-    /* This subtable is disabled.  It's not cleaer to me *exactly* where the offests are
-     * based from.  I *think* they should be based from beginning of kern subtable wrapper,
-     * *NOT* ""this"".  Since we know of no fonts that use this subtable, we are disabling
-     * it.  Someday fix it and re-enable. */
+    /* Disabled until we find a font to test this.  Note that OT vs AAT specify
+     * different ClassTable.  OT's has 16bit entries, while AAT has 8bit entries.
+     * I've not seen any in the wild. */
     return 0;
     unsigned int l = (this+leftClassTable).get_class (left);
     unsigned int r = (this+rightClassTable).get_class (right);
     unsigned int offset = l + r;
     const FWORD *v = &StructAtOffset<FWORD> (&(this+array), offset);
-#if 0
-    if (unlikely ((const char *) v < (const char *) &array ||
-		  (const char *) v > (const char *) end - 2))
-#endif
-      return 0;
+    if (unlikely (!v->sanitize (&c->sanitizer))) return 0;
     return *v;
   }
 
@@ -400,9 +377,9 @@ struct KernSubTableFormat2
   protected:
   KernSubTableHeader		header;
   HBUINT16			rowWidth;	/* The width, in bytes, of a row in the table. */
-  OffsetTo<KernClassTable>	leftClassTable;	/* Offset from beginning of this subtable to
+  OffsetTo<AAT::ClassTable>	leftClassTable;	/* Offset from beginning of this subtable to
 						 * left-hand class table. */
-  OffsetTo<KernClassTable>	rightClassTable;/* Offset from beginning of this subtable to
+  OffsetTo<AAT::ClassTable>	rightClassTable;/* Offset from beginning of this subtable to
 						 * right-hand class table. */
   OffsetTo<FWORD>		array;		/* Offset from beginning of this subtable to
 						 * the start of the kerning array. */

From 01bf43ac01576a6415336cc56c74bb1a872566d1 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 14:48:42 -0500
Subject: [PATCH 06/66] [kern] Implement CrossStream kerning

---
 src/hb-aat-layout-kerx-table.hh | 75 +++++++++++++++++++++------------
 src/hb-ot-kern-table.hh         | 63 ++++++++++++++++++++++-----
 2 files changed, 101 insertions(+), 37 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 0c9a0ffc214..550abf31b63 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -62,6 +62,20 @@ kerxTupleKern (int value,
 
 struct KerxSubTableHeader
 {
+  enum Coverage
+  {
+    Vertical		= 0x80000000,	/* Set if table has vertical kerning values. */
+    CrossStream		= 0x40000000,	/* Set if table has cross-stream kerning values. */
+    Variation		= 0x20000000,	/* Set if table has variation kerning values. */
+    Backwards		= 0x10000000,	/* If clear, process the glyphs forwards, that
+					 * is, from first to last in the glyph stream.
+					 * If we, process them from last to first.
+					 * This flag only applies to state-table based
+					 * 'kerx' subtables (types 1 and 4). */
+    Reserved		= 0x0FFFFF00,	/* Reserved, set to zero. */
+    SubtableType	= 0x000000FF,	/* Subtable type. */
+  };
+
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
@@ -95,6 +109,9 @@ struct KerxSubTableFormat0
     if (!c->plan->requested_kerning)
       return false;
 
+    if (header.coverage & header.CrossStream)
+      return false;
+
     accelerator_t accel (*this, c);
     hb_kern_machine_t<accelerator_t> machine (accel);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
@@ -161,7 +178,8 @@ struct KerxSubTableFormat1
 	 * similar to offsets in morx table, NOT from beginning of this table, like
 	 * other subtables in kerx.  Discovered via testing. */
 	kernAction (&table->machine + table->kernAction),
-	depth (0) {}
+	depth (0),
+	crossStream (table->header.coverage & table->header.CrossStream) {}
 
     inline bool is_actionable (StateTableDriver<MorxTypes, EntryData> *driver HB_UNUSED,
 			       const Entry<EntryData> *entry)
@@ -209,15 +227,25 @@ struct KerxSubTableFormat1
 	  {
 	    if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
 	    {
-	      buffer->pos[idx].x_advance += c->font->em_scale_x (v);
-	      if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
-		buffer->pos[idx].x_offset += c->font->em_scale_x (v);
+	      if (crossStream)
+		buffer->pos[idx].y_offset += c->font->em_scale_y (v);
+	      else
+	      {
+		buffer->pos[idx].x_advance += c->font->em_scale_x (v);
+		if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
+		  buffer->pos[idx].x_offset += c->font->em_scale_x (v);
+	      }
 	    }
 	    else
 	    {
-	      buffer->pos[idx].y_advance += c->font->em_scale_y (v);
-	      if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
-		buffer->pos[idx].y_offset += c->font->em_scale_y (v);
+	      if (crossStream)
+		buffer->pos[idx].x_offset += c->font->em_scale_x (v);
+	      else
+	      {
+		buffer->pos[idx].y_advance += c->font->em_scale_y (v);
+		if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
+		  buffer->pos[idx].y_offset += c->font->em_scale_y (v);
+	      }
 	    }
 	  }
 	}
@@ -232,6 +260,7 @@ struct KerxSubTableFormat1
     const UnsizedArrayOf<FWORD> &kernAction;
     unsigned int stack[8];
     unsigned int depth;
+    bool crossStream;
   };
 
   inline bool apply (hb_aat_apply_context_t *c) const
@@ -241,6 +270,9 @@ struct KerxSubTableFormat1
     if (!c->plan->requested_kerning)
       return false;
 
+    if (header.coverage & header.CrossStream)
+      return false;
+
     if (header.tupleCount)
       return_trace (false); /* TODO kerxTupleKern */
 
@@ -289,6 +321,9 @@ struct KerxSubTableFormat2
     if (!c->plan->requested_kerning)
       return false;
 
+    if (header.coverage & header.CrossStream)
+      return false;
+
     accelerator_t accel (*this, c);
     hb_kern_machine_t<accelerator_t> machine (accel);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
@@ -547,6 +582,9 @@ struct KerxSubTableFormat6
     if (!c->plan->requested_kerning)
       return false;
 
+    if (header.coverage & header.CrossStream)
+      return false;
+
     accelerator_t accel (*this, c);
     hb_kern_machine_t<accelerator_t> machine (accel);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
@@ -615,21 +653,7 @@ struct KerxTable
   friend struct kerx;
 
   inline unsigned int get_size (void) const { return u.header.length; }
-  inline unsigned int get_type (void) const { return u.header.coverage & SubtableType; }
-
-  enum Coverage
-  {
-    Vertical		= 0x80000000,	/* Set if table has vertical kerning values. */
-    CrossStream		= 0x40000000,	/* Set if table has cross-stream kerning values. */
-    Variation		= 0x20000000,	/* Set if table has variation kerning values. */
-    Backwards		= 0x10000000,	/* If clear, process the glyphs forwards, that
-					 * is, from first to last in the glyph stream.
-					 * If we, process them from last to first.
-					 * This flag only applies to state-table based
-					 * 'kerx' subtables (types 1 and 4). */
-    Reserved		= 0x0FFFFF00,	/* Reserved, set to zero. */
-    SubtableType	= 0x000000FF,	/* Subtable type. */
-  };
+  inline unsigned int get_type (void) const { return u.header.coverage & u.header.SubtableType; }
 
   template <typename context_t>
   inline typename context_t::return_t dispatch (context_t *c) const
@@ -689,14 +713,11 @@ struct kerx
     {
       bool reverse;
 
-      if (table->u.header.coverage & (KerxTable::CrossStream))
-	goto skip; /* We do NOT handle cross-stream. */
-
       if (HB_DIRECTION_IS_VERTICAL (c->buffer->props.direction) !=
-	  bool (table->u.header.coverage & KerxTable::Vertical))
+	  bool (table->u.header.coverage & table->u.header.Vertical))
 	goto skip;
 
-      reverse = bool (table->u.header.coverage & KerxTable::Backwards) !=
+      reverse = bool (table->u.header.coverage & table->u.header.Backwards) !=
 		HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction);
 
       if (!c->buffer->message (c->font, ""start kerx subtable %d"", c->lookup_index))
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index c54c10086e4..30f7091be10 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -174,6 +174,9 @@ struct KernSubTableFormat0
     if (!c->plan->requested_kerning)
       return false;
 
+    if (header.coverage & header.CrossStream)
+      return false;
+
     hb_kern_machine_t<KernSubTableFormat0> machine (*this);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
 
@@ -218,7 +221,9 @@ struct KernSubTableFormat1
 	 * similar to offsets in morx table, NOT from beginning of this table, like
 	 * other subtables in kerx.  Discovered via testing. */
 	kernAction (&table->machine + table->kernAction),
-	depth (0) {}
+	depth (0),
+	crossStream (table->header.coverage & table->header.CrossStream),
+	crossOffset (0) {}
 
     inline bool is_actionable (AAT::StateTableDriver<AAT::MortTypes, EntryData> *driver HB_UNUSED,
 			       const AAT::Entry<EntryData> *entry)
@@ -241,7 +246,9 @@ struct KernSubTableFormat1
 
       if (entry->flags & Offset)
       {
-	unsigned int kernIndex = AAT::MortTypes::offsetToIndex (entry->flags & Offset, &table->machine, kernAction.arrayZ);
+	unsigned int kernIndex = AAT::MortTypes::offsetToIndex (entry->flags & Offset,
+								&table->machine,
+								kernAction.arrayZ);
 	const FWORD *actions = &kernAction[kernIndex];
 	if (!c->sanitizer.check_array (actions, depth))
 	{
@@ -258,21 +265,50 @@ struct KernSubTableFormat1
 	   * list.  Discovered by testing. */
 	  unsigned int idx = stack[i];
 	  int v = *actions++;
+
+	  /* The following two flags are undocumented in the spec, but described
+	   * in the example. */
+	  bool last = v & 1;
+	  v = v & ~1;
+	  if (v == 0x8000)
+	  {
+	    crossOffset = 0;
+	    v = 0;
+	  }
+
 	  if (idx < buffer->len && buffer->info[idx].mask & kern_mask)
 	  {
 	    if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
 	    {
-	      buffer->pos[idx].x_advance += c->font->em_scale_x (v);
-	      if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
-		buffer->pos[idx].x_offset += c->font->em_scale_x (v);
+	      if (crossStream)
+	      {
+	        crossOffset += v;
+		buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
+	      }
+	      else
+	      {
+		buffer->pos[idx].x_advance += c->font->em_scale_x (v);
+		if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
+		  buffer->pos[idx].x_offset += c->font->em_scale_x (v);
+	      }
 	    }
 	    else
 	    {
-	      buffer->pos[idx].y_advance += c->font->em_scale_y (v);
-	      if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
-		buffer->pos[idx].y_offset += c->font->em_scale_y (v);
+	      if (crossStream)
+	      {
+	        crossOffset += v;
+		buffer->pos[idx].x_offset += c->font->em_scale_x (crossOffset);
+	      }
+	      else
+	      {
+		buffer->pos[idx].y_advance += c->font->em_scale_y (v);
+		if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
+		  buffer->pos[idx].y_offset += c->font->em_scale_y (v);
+	      }
 	    }
 	  }
+	  if (last)
+	    break;
 	}
 	depth = 0;
       }
@@ -286,6 +322,8 @@ struct KernSubTableFormat1
     const UnsizedArrayOf<FWORD> &kernAction;
     unsigned int stack[8];
     unsigned int depth;
+    bool crossStream;
+    int crossOffset;
   };
 
   inline bool apply (AAT::hb_aat_apply_context_t *c) const
@@ -344,6 +382,9 @@ struct KernSubTableFormat2
     if (!c->plan->requested_kerning)
       return false;
 
+    if (header.coverage & header.CrossStream)
+      return false;
+
     accelerator_t accel (*this, c);
     hb_kern_machine_t<accelerator_t> machine (accel);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
@@ -412,6 +453,9 @@ struct KernSubTableFormat3
     if (!c->plan->requested_kerning)
       return false;
 
+    if (header.coverage & header.CrossStream)
+      return false;
+
     hb_kern_machine_t<KernSubTableFormat3> machine (*this);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
 
@@ -547,8 +591,7 @@ struct KernTable
     st = CastP<SubTable> (&thiz()->dataZ);
     for (unsigned int i = 0; i < count; i++)
     {
-      if (st->u.header.coverage &
-	  (st->u.header.Variation | st->u.header.CrossStream))
+      if (st->u.header.coverage & st->u.header.Variation)
         goto skip;
 
       if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) !=

From e8c47724638c29d78001905610c662de99c59cad Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 17:16:04 -0500
Subject: [PATCH 07/66] [kern] XXX Negate CrossKerning sign

Not sure why, but seems to better match GeezaPro Arabic w CoreText.

Quite possibly I'm doing something very wrong...
---
 src/hb-ot-kern-table.hh | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 30f7091be10..c7282a3a089 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -282,7 +282,8 @@ struct KernSubTableFormat1
 	    {
 	      if (crossStream)
 	      {
-	        crossOffset += v;
+	        /* XXX Why negative, not positive?!?! */
+	        crossOffset -= v;
 		buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
 	      }
 	      else

From 9c04b6058306cd4b2123a33a7cbeb47505434217 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 18:35:58 -0500
Subject: [PATCH 08/66] [kern] In Format1, adjust how kerning is done

In a series of kerns in one action, kern all but last glyph forward,
and the last one backward.  Seems to better match what CoreText is doing.

Test cases, with GeezaPro Arabic:

$ ./hb-shape GeezaPro_10_10.ttc -u U+0631,U+0628
[u0628.beh=1+1415|u0631.reh=0@-202,0+700]

$ ./hb-shape GeezaPro_10_10.ttc -u U+0628,U+064F
[u064f.damma=0@0,-250+-250|u0628.beh=0@250,0+1665]

In a later change, I'll make kern machine avoid producing negative kerns.
---
 src/hb-ot-kern-table.hh | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index c7282a3a089..980b7e150f0 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -289,7 +289,7 @@ struct KernSubTableFormat1
 	      else
 	      {
 		buffer->pos[idx].x_advance += c->font->em_scale_x (v);
-		if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
+		if (last)
 		  buffer->pos[idx].x_offset += c->font->em_scale_x (v);
 	      }
 	    }
@@ -303,7 +303,7 @@ struct KernSubTableFormat1
 	      else
 	      {
 		buffer->pos[idx].y_advance += c->font->em_scale_y (v);
-		if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
+		if (last)
 		  buffer->pos[idx].y_offset += c->font->em_scale_y (v);
 	      }
 	    }

From 9810f0b80e5b6580a7a15debcec073dfc9ca759f Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 19:24:04 -0500
Subject: [PATCH 09/66] [kern] Minor

---
 src/hb-ot-kern-table.hh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 980b7e150f0..0e60c582ac5 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -269,7 +269,7 @@ struct KernSubTableFormat1
 	  /* The following two flags are undocumented in the spec, but described
 	   * in the example. */
 	  bool last = v & 1;
-	  v = v & ~1;
+	  v &= ~1;
 	  if (v == 0x8000)
 	  {
 	    crossOffset = 0;

From 4d003b8503f9c984abe2ac0de8c526a276ea8e54 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 21:04:02 -0500
Subject: [PATCH 10/66] [kern] Add TODO

---
 src/hb-ot-kern-table.hh | 9 +++++++++
 1 file changed, 9 insertions(+)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 0e60c582ac5..bce0aa3e7bd 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -225,6 +225,15 @@ struct KernSubTableFormat1
 	crossStream (table->header.coverage & table->header.CrossStream),
 	crossOffset (0) {}
 
+    /* TODO
+     *
+     * ""Because the stateTableOffset in the state table header is (strictly
+     * speaking) redundant, some 'kern' tables use it to record an initial
+     * state where that should not be StartOfText. To determine if this is
+     * done, calculate what the stateTableOffset should be. If it's different
+     * from the actual stateTableOffset, use it as the initial state.""
+     */
+
     inline bool is_actionable (AAT::StateTableDriver<AAT::MortTypes, EntryData> *driver HB_UNUSED,
 			       const AAT::Entry<EntryData> *entry)
     {

From 564e8ac0465d8ced3a98ecb55d09ffaa45eefc2f Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 21:04:40 -0500
Subject: [PATCH 11/66] [kern] Adjust some more

Getting closer.  So many open questions still...
---
 src/hb-ot-kern-table.hh | 36 ++++++++++++++++++++++--------------
 1 file changed, 22 insertions(+), 14 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index bce0aa3e7bd..2dccc40eeae 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -266,13 +266,9 @@ struct KernSubTableFormat1
 	}
 
 	hb_mask_t kern_mask = c->plan->kern_mask;
-	for (unsigned int i = 0; i < depth; i++)
+	while (depth--)
 	{
-	  /* Apparently, when spec says ""Each pops one glyph from the kerning stack
-	   * and applies the kerning value to it."", it doesn't mean it in that order.
-	   * The deepest item in the stack corresponds to the first item in the action
-	   * list.  Discovered by testing. */
-	  unsigned int idx = stack[i];
+	  unsigned int idx = stack[depth];
 	  int v = *actions++;
 
 	  /* The following two flags are undocumented in the spec, but described
@@ -291,29 +287,41 @@ struct KernSubTableFormat1
 	    {
 	      if (crossStream)
 	      {
+		if (!buffer->pos[idx].y_offset)
+		  buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
 	        /* XXX Why negative, not positive?!?! */
-	        crossOffset -= v;
-		buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
+	        v = -v;
+		crossOffset += v;
 	      }
 	      else
 	      {
-		buffer->pos[idx].x_advance += c->font->em_scale_x (v);
-		if (last)
+		if (!buffer->pos[idx].x_offset)
+		{
+		  buffer->pos[idx].x_advance += c->font->em_scale_x (v);
 		  buffer->pos[idx].x_offset += c->font->em_scale_x (v);
+		}
 	      }
 	    }
 	    else
 	    {
 	      if (crossStream)
 	      {
-	        crossOffset += v;
-		buffer->pos[idx].x_offset += c->font->em_scale_x (crossOffset);
+	        /* CoreText doesn't do crossStream kerning in vertical. */
+#if 0
+		if (!buffer->pos[idx].x_offset)
+		  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
+#endif
+	        /* XXX Why negative, not positive?!?! */
+	        v = -v;
+		crossOffset += v;
 	      }
 	      else
 	      {
-		buffer->pos[idx].y_advance += c->font->em_scale_y (v);
-		if (last)
+		if (!buffer->pos[idx].y_offset)
+		{
+		  buffer->pos[idx].y_advance += c->font->em_scale_y (v);
 		  buffer->pos[idx].y_offset += c->font->em_scale_y (v);
+		}
 	      }
 	    }
 	  }

From 80a33b9ac351d81793f35a92e0255ffbf5ceb8b9 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 21:41:28 -0500
Subject: [PATCH 12/66] [kern] More tweaks

Solves a mystery or two.  I'm fairly confident this is what CoreText does now.
---
 src/hb-ot-kern-table.hh | 40 ++++++++++++++++++++++------------------
 1 file changed, 22 insertions(+), 18 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 2dccc40eeae..28bca843989 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -266,15 +266,27 @@ struct KernSubTableFormat1
 	}
 
 	hb_mask_t kern_mask = c->plan->kern_mask;
-	while (depth--)
+
+	/* ""Each pops one glyph from the kerning stack and applies the kerning value to it.
+	 * The end of the list is marked by an odd value... */
+	unsigned int i;
+	for (i = 0; i < depth; i++)
+	  if (actions[i] & 1)
+	  {
+	    i++;
+	    break;
+	  }
+	for (; i; i--)
 	{
-	  unsigned int idx = stack[depth];
-	  int v = *actions++;
+	  unsigned int idx = stack[depth - i];
+	  int v = actions[i - 1];
 
-	  /* The following two flags are undocumented in the spec, but described
-	   * in the example. */
-	  bool last = v & 1;
+	  /* ""The end of the list is marked by an odd value...""
+	   * Ignore it. */
 	  v &= ~1;
+
+	  /* The following flag is undocumented in the spec, but described
+	   * in the example. */
 	  if (v == 0x8000)
 	  {
 	    crossOffset = 0;
@@ -287,11 +299,9 @@ struct KernSubTableFormat1
 	    {
 	      if (crossStream)
 	      {
+		crossOffset += v;
 		if (!buffer->pos[idx].y_offset)
 		  buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
-	        /* XXX Why negative, not positive?!?! */
-	        v = -v;
-		crossOffset += v;
 	      }
 	      else
 	      {
@@ -307,13 +317,9 @@ struct KernSubTableFormat1
 	      if (crossStream)
 	      {
 	        /* CoreText doesn't do crossStream kerning in vertical. */
-#if 0
-		if (!buffer->pos[idx].x_offset)
-		  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
-#endif
-	        /* XXX Why negative, not positive?!?! */
-	        v = -v;
-		crossOffset += v;
+		//crossOffset += v;
+		//if (!buffer->pos[idx].x_offset)
+		//  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
 	      }
 	      else
 	      {
@@ -325,8 +331,6 @@ struct KernSubTableFormat1
 	      }
 	    }
 	  }
-	  if (last)
-	    break;
 	}
 	depth = 0;
       }

From 0123976a0c1e2f629252969a7ff632dc2b1dbbc9 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Tue, 6 Nov 2018 21:45:40 -0500
Subject: [PATCH 13/66] [kerx] Adjust CrossStream kern to match 'kern' table

---
 src/hb-aat-layout-kerx-table.hh | 62 +++++++++++++++++++++++++--------
 1 file changed, 48 insertions(+), 14 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 550abf31b63..93d3ffb7f82 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -179,7 +179,8 @@ struct KerxSubTableFormat1
 	 * other subtables in kerx.  Discovered via testing. */
 	kernAction (&table->machine + table->kernAction),
 	depth (0),
-	crossStream (table->header.coverage & table->header.CrossStream) {}
+	crossStream (table->header.coverage & table->header.CrossStream),
+	crossOffset (0) {}
 
     inline bool is_actionable (StateTableDriver<MorxTypes, EntryData> *driver HB_UNUSED,
 			       const Entry<EntryData> *entry)
@@ -215,36 +216,68 @@ struct KerxSubTableFormat1
 	}
 
 	hb_mask_t kern_mask = c->plan->kern_mask;
-	for (unsigned int i = 0; i < depth; i++)
+
+	/* From Apple 'kern' spec:
+	 * ""Each pops one glyph from the kerning stack and applies the kerning value to it.
+	 * The end of the list is marked by an odd value... */
+	unsigned int i;
+	for (i = 0; i < depth; i++)
+	  if (actions[i] & 1)
+	  {
+	    i++;
+	    break;
+	  }
+	for (; i; i--)
 	{
-	  /* Apparently, when spec says ""Each pops one glyph from the kerning stack
-	   * and applies the kerning value to it."", it doesn't mean it in that order.
-	   * The deepest item in the stack corresponds to the first item in the action
-	   * list.  Discovered by testing. */
-	  unsigned int idx = stack[i];
-	  int v = *actions++;
+	  unsigned int idx = stack[depth - i];
+	  int v = actions[i - 1];
+
+	  /* ""The end of the list is marked by an odd value...""
+	   * Ignore it. */
+	  v &= ~1;
+
+	  /* The following flag is undocumented in the spec, but described
+	   * in the 'kern' table example. */
+	  if (v == 0x8000)
+	  {
+	    crossOffset = 0;
+	    v = 0;
+	  }
 	  if (idx < buffer->len && buffer->info[idx].mask & kern_mask)
 	  {
 	    if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
 	    {
 	      if (crossStream)
-		buffer->pos[idx].y_offset += c->font->em_scale_y (v);
+	      {
+		crossOffset += v;
+		if (!buffer->pos[idx].y_offset)
+		  buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
+	      }
 	      else
 	      {
-		buffer->pos[idx].x_advance += c->font->em_scale_x (v);
-		if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
+		if (!buffer->pos[idx].x_offset)
+		{
+		  buffer->pos[idx].x_advance += c->font->em_scale_x (v);
 		  buffer->pos[idx].x_offset += c->font->em_scale_x (v);
+		}
 	      }
 	    }
 	    else
 	    {
 	      if (crossStream)
-		buffer->pos[idx].x_offset += c->font->em_scale_x (v);
+	      {
+	        /* CoreText doesn't do crossStream kerning in vertical. */
+		//crossOffset += v;
+		//if (!buffer->pos[idx].x_offset)
+		//  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
+	      }
 	      else
 	      {
-		buffer->pos[idx].y_advance += c->font->em_scale_y (v);
-		if (HB_DIRECTION_IS_BACKWARD (buffer->props.direction))
+		if (!buffer->pos[idx].y_offset)
+		{
+		  buffer->pos[idx].y_advance += c->font->em_scale_y (v);
 		  buffer->pos[idx].y_offset += c->font->em_scale_y (v);
+		}
 	      }
 	    }
 	  }
@@ -261,6 +294,7 @@ struct KerxSubTableFormat1
     unsigned int stack[8];
     unsigned int depth;
     bool crossStream;
+    int crossOffset;
   };
 
   inline bool apply (hb_aat_apply_context_t *c) const

From 8d0f797139e853d13cb2383d541c2e691d9dbae3 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 00:04:40 -0500
Subject: [PATCH 14/66] [kern/kerx] Fix ""reset"" magic value

---
 src/hb-aat-layout-kerx-table.hh | 2 +-
 src/hb-ot-kern-table.hh         | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 93d3ffb7f82..efbe7ed3a8d 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -238,7 +238,7 @@ struct KerxSubTableFormat1
 
 	  /* The following flag is undocumented in the spec, but described
 	   * in the 'kern' table example. */
-	  if (v == 0x8000)
+	  if (v == -0x8000)
 	  {
 	    crossOffset = 0;
 	    v = 0;
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 28bca843989..ec7ce929fe5 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -287,7 +287,7 @@ struct KernSubTableFormat1
 
 	  /* The following flag is undocumented in the spec, but described
 	   * in the example. */
-	  if (v == 0x8000)
+	  if (v == -0x8000)
 	  {
 	    crossOffset = 0;
 	    v = 0;

From 59e04e42312293c30714a666c4479e209aec3c0e Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 00:25:48 -0500
Subject: [PATCH 15/66] [kern/kerx] Fix cursive joining
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Tested with Waseem TTC:

$ hb-shape Waseem.ttc جحخج
[F1Jeem_R2=3@0,180+479|M1Khah_L2_R2=2@0,682+403|M1Hah_L2_R2=1@0,1184+403|I1Jeem_L2=0@0,1184+744]
---
 src/hb-aat-layout-kerx-table.hh | 2 ++
 src/hb-ot-kern-table.hh         | 2 ++
 2 files changed, 4 insertions(+)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index efbe7ed3a8d..6f63aa4086c 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -284,6 +284,8 @@ struct KerxSubTableFormat1
 	}
 	depth = 0;
       }
+      else
+	buffer->pos[buffer->idx].y_offset += c->font->em_scale_y (crossOffset);
 
       return true;
     }
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index ec7ce929fe5..b8006005fef 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -334,6 +334,8 @@ struct KernSubTableFormat1
 	}
 	depth = 0;
       }
+      else
+	buffer->pos[buffer->idx].y_offset += c->font->em_scale_y (crossOffset);
 
       return true;
     }

From befac337ca2c705e2cea60a9a92e40e0dbbc40aa Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 09:53:02 -0500
Subject: [PATCH 16/66] [kern] Remove Override business

Not used in any fonts.  Not well-specified when mixing kerning with
Cross-Stream positioning.
---
 src/hb-ot-kern-table.hh | 16 ----------------
 1 file changed, 16 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index b8006005fef..33e6827148a 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -588,8 +588,6 @@ struct KernTable
 	   (st->u.header.Variation | st->u.header.CrossStream | st->u.header.Direction)) !=
 	  st->u.header.DirectionHorizontal)
         continue;
-      if (st->u.header.coverage & st->u.header.Override)
-        v = 0;
       v += st->get_kerning (left, right);
       st = &StructAfter<SubTable> (*st);
     }
@@ -603,15 +601,6 @@ struct KernTable
     c->set_lookup_index (0);
     const SubTable *st = CastP<SubTable> (&thiz()->dataZ);
     unsigned int count = thiz()->nTables;
-    /* If there's an override subtable, skip subtables before that. */
-    unsigned int last_override = 0;
-    for (unsigned int i = 0; i < count; i++)
-    {
-      if (!(st->u.header.coverage & (st->u.header.Variation | st->u.header.CrossStream)) &&
-	  (st->u.header.coverage & st->u.header.Override))
-        last_override = i;
-      st = &StructAfter<SubTable> (*st);
-    }
     st = CastP<SubTable> (&thiz()->dataZ);
     for (unsigned int i = 0; i < count; i++)
     {
@@ -622,9 +611,6 @@ struct KernTable
 	  ((st->u.header.coverage & st->u.header.Direction) == st->u.header.DirectionHorizontal))
 	goto skip;
 
-      if (i < last_override)
-	goto skip;
-
       if (!c->buffer->message (c->font, ""start kern subtable %d"", c->lookup_index))
 	goto skip;
 
@@ -719,8 +705,6 @@ struct KernAAT : KernTable<KernAAT>
       CrossStream	= 0x40u,
       Variation		= 0x20u,
 
-      Override		= 0x00u, /* Not supported. */
-
       DirectionHorizontal= 0x00u
     };
 

From a6acff252c72457ecfa856fd6c57081b3a4290dd Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 10:19:46 -0500
Subject: [PATCH 17/66] [kerx] Towards sharing subtables with kern

---
 src/hb-aat-layout-kerx-table.hh | 41 ++++++++++++++++++---------------
 1 file changed, 23 insertions(+), 18 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 6f63aa4086c..995e0138709 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -90,6 +90,7 @@ struct KerxSubTableHeader
   DEFINE_SIZE_STATIC (12);
 };
 
+template <typename KernSubTableHeader>
 struct KerxSubTableFormat0
 {
   inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right,
@@ -141,13 +142,14 @@ struct KerxSubTableFormat0
   }
 
   protected:
-  KerxSubTableHeader	header;
+  KernSubTableHeader	header;
   BinSearchArrayOf<KernPair, HBUINT32>
 			pairs;	/* Sorted kern records. */
   public:
-  DEFINE_SIZE_ARRAY (28, pairs);
+  DEFINE_SIZE_ARRAY (KernSubTableHeader::static_size + 16, pairs);
 };
 
+template <typename KernSubTableHeader>
 struct KerxSubTableFormat1
 {
   struct EntryData
@@ -329,13 +331,14 @@ struct KerxSubTableFormat1
   }
 
   protected:
-  KerxSubTableHeader				header;
+  KernSubTableHeader				header;
   StateTable<MorxTypes, EntryData>		machine;
   LOffsetTo<UnsizedArrayOf<FWORD>, false>	kernAction;
   public:
-  DEFINE_SIZE_STATIC (32);
+  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 20);
 };
 
+template <typename KernSubTableHeader>
 struct KerxSubTableFormat2
 {
   inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right,
@@ -390,7 +393,7 @@ struct KerxSubTableFormat2
   }
 
   protected:
-  KerxSubTableHeader	header;
+  KernSubTableHeader	header;
   HBUINT32		rowWidth;	/* The width, in bytes, of a row in the table. */
   LOffsetTo<Lookup<HBUINT16>, false>
 			leftClassTable;	/* Offset from beginning of this subtable to
@@ -402,9 +405,10 @@ struct KerxSubTableFormat2
 			 array;		/* Offset from beginning of this subtable to
 					 * the start of the kerning array. */
   public:
-  DEFINE_SIZE_STATIC (28);
+  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 16);
 };
 
+template <typename KernSubTableHeader>
 struct KerxSubTableFormat4
 {
   struct EntryData
@@ -566,14 +570,15 @@ struct KerxSubTableFormat4
   }
 
   protected:
-  KerxSubTableHeader	header;
+  KernSubTableHeader	header;
   StateTable<MorxTypes, EntryData>
 			machine;
   HBUINT32		flags;
   public:
-  DEFINE_SIZE_STATIC (32);
+  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 20);
 };
 
+template <typename KernSubTableHeader>
 struct KerxSubTableFormat6
 {
   enum Flags
@@ -589,7 +594,7 @@ struct KerxSubTableFormat6
     unsigned int num_glyphs = c->sanitizer.get_num_glyphs ();
     if (is_long ())
     {
-      const U::Long &t = u.l;
+      const typename U::Long &t = u.l;
       unsigned int l = (this+t.rowIndexTable).get_value_or_null (left, num_glyphs);
       unsigned int r = (this+t.columnIndexTable).get_value_or_null (right, num_glyphs);
       unsigned int offset = l + r;
@@ -601,7 +606,7 @@ struct KerxSubTableFormat6
     }
     else
     {
-      const U::Short &t = u.s;
+      const typename U::Short &t = u.s;
       unsigned int l = (this+t.rowIndexTable).get_value_or_null (left, num_glyphs);
       unsigned int r = (this+t.columnIndexTable).get_value_or_null (right, num_glyphs);
       unsigned int offset = l + r;
@@ -660,7 +665,7 @@ struct KerxSubTableFormat6
   };
 
   protected:
-  KerxSubTableHeader		header;
+  KernSubTableHeader		header;
   HBUINT32			flags;
   HBUINT16			rowCount;
   HBUINT16			columnCount;
@@ -681,7 +686,7 @@ struct KerxSubTableFormat6
   } u;
   LOffsetTo<UnsizedArrayOf<FWORD>, false>	vector;
   public:
-  DEFINE_SIZE_STATIC (36);
+  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 24);
 };
 
 struct KerxTable
@@ -718,12 +723,12 @@ struct KerxTable
 
 protected:
   union {
-  KerxSubTableHeader	header;
-  KerxSubTableFormat0	format0;
-  KerxSubTableFormat1	format1;
-  KerxSubTableFormat2	format2;
-  KerxSubTableFormat4	format4;
-  KerxSubTableFormat6	format6;
+  KerxSubTableHeader				header;
+  KerxSubTableFormat0<KerxSubTableHeader>	format0;
+  KerxSubTableFormat1<KerxSubTableHeader>	format1;
+  KerxSubTableFormat2<KerxSubTableHeader>	format2;
+  KerxSubTableFormat4<KerxSubTableHeader>	format4;
+  KerxSubTableFormat6<KerxSubTableHeader>	format6;
   } u;
 public:
   DEFINE_SIZE_MIN (12);

From d0f8f4c200670bc0bfbffbf301139a3613865a7f Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 10:25:25 -0500
Subject: [PATCH 18/66] [kern] Move kern machine to hb-kern.hh

---
 src/Makefile.sources            |   1 +
 src/hb-aat-layout-kerx-table.hh |   5 +-
 src/hb-kern.hh                  | 153 ++++++++++++++++++++++++++++++++
 src/hb-ot-kern-table.hh         | 115 +-----------------------
 src/hb-ot-shape-fallback.cc     |   2 +-
 5 files changed, 157 insertions(+), 119 deletions(-)
 create mode 100644 src/hb-kern.hh

diff --git a/src/Makefile.sources b/src/Makefile.sources
index 561fbed6d36..2cada4bbce7 100644
--- a/src/Makefile.sources
+++ b/src/Makefile.sources
@@ -16,6 +16,7 @@ HB_BASE_sources = \
 	hb-font.hh \
 	hb-font.cc \
 	hb-iter.hh \
+	hb-kern.hh \
 	hb-map.hh \
 	hb-map.cc \
 	hb-machinery.hh \
diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 995e0138709..11d7f5c76f0 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -28,10 +28,7 @@
 #ifndef HB_AAT_LAYOUT_KERX_TABLE_HH
 #define HB_AAT_LAYOUT_KERX_TABLE_HH
 
-#include ""hb-open-type.hh""
-#include ""hb-aat-layout-common.hh""
-#include ""hb-ot-layout-gpos-table.hh""
-#include ""hb-ot-kern-table.hh""
+#include ""hb-kern.hh""
 
 /*
  * kerx -- Extended Kerning
diff --git a/src/hb-kern.hh b/src/hb-kern.hh
new file mode 100644
index 00000000000..de726960004
--- /dev/null
+++ b/src/hb-kern.hh
@@ -0,0 +1,153 @@
+/*
+ * Copyright © 2017  Google, Inc.
+ *
+ *  This is part of HarfBuzz, a text shaping library.
+ *
+ * Permission is hereby granted, without written agreement and without
+ * license or royalty fees, to use, copy, modify, and distribute this
+ * software and its documentation for any purpose, provided that the
+ * above copyright notice and the following two paragraphs appear in
+ * all copies of this software.
+ *
+ * IN NO EVENT SHALL THE COPYRIGHT HOLDER BE LIABLE TO ANY PARTY FOR
+ * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES
+ * ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN
+ * IF THE COPYRIGHT HOLDER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
+ * DAMAGE.
+ *
+ * THE COPYRIGHT HOLDER SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING,
+ * BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
+ * FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
+ * ON AN ""AS IS"" BASIS, AND THE COPYRIGHT HOLDER HAS NO OBLIGATION TO
+ * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
+ *
+ * Google Author(s): Behdad Esfahbod
+ */
+
+#ifndef HB_KERN_HH
+#define HB_KERN_HH
+
+#include ""hb-open-type.hh""
+#include ""hb-aat-layout-common.hh""
+#include ""hb-ot-layout-gpos-table.hh""
+
+
+namespace OT {
+
+
+template <typename Driver>
+struct hb_kern_machine_t
+{
+  hb_kern_machine_t (const Driver &driver_) : driver (driver_) {}
+
+  HB_NO_SANITIZE_SIGNED_INTEGER_OVERFLOW
+  inline void kern (hb_font_t   *font,
+		    hb_buffer_t *buffer,
+		    hb_mask_t    kern_mask,
+		    bool         scale = true) const
+  {
+    OT::hb_ot_apply_context_t c (1, font, buffer);
+    c.set_lookup_mask (kern_mask);
+    c.set_lookup_props (OT::LookupFlag::IgnoreMarks);
+    OT::hb_ot_apply_context_t::skipping_iterator_t &skippy_iter = c.iter_input;
+    skippy_iter.init (&c);
+
+    bool horizontal = HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction);
+    unsigned int count = buffer->len;
+    hb_glyph_info_t *info = buffer->info;
+    hb_glyph_position_t *pos = buffer->pos;
+    for (unsigned int idx = 0; idx < count;)
+    {
+      if (!(info[idx].mask & kern_mask))
+      {
+	idx++;
+	continue;
+      }
+
+      skippy_iter.reset (idx, 1);
+      if (!skippy_iter.next ())
+      {
+	idx++;
+	continue;
+      }
+
+      unsigned int i = idx;
+      unsigned int j = skippy_iter.idx;
+
+      hb_position_t kern = driver.get_kerning (info[i].codepoint,
+					       info[j].codepoint);
+
+
+      if (likely (!kern))
+        goto skip;
+
+
+      if (horizontal)
+      {
+        if (scale)
+	  kern = font->em_scale_x (kern);
+	hb_position_t kern1 = kern >> 1;
+	hb_position_t kern2 = kern - kern1;
+	pos[i].x_advance += kern1;
+	pos[j].x_advance += kern2;
+	pos[j].x_offset += kern2;
+      }
+      else
+      {
+        if (scale)
+	  kern = font->em_scale_y (kern);
+	hb_position_t kern1 = kern >> 1;
+	hb_position_t kern2 = kern - kern1;
+	pos[i].y_advance += kern1;
+	pos[j].y_advance += kern2;
+	pos[j].y_offset += kern2;
+      }
+
+      buffer->unsafe_to_break (i, j + 1);
+
+    skip:
+      idx = skippy_iter.idx;
+    }
+  }
+
+  const Driver &driver;
+};
+
+
+struct hb_glyph_pair_t
+{
+  hb_codepoint_t left;
+  hb_codepoint_t right;
+};
+
+struct KernPair
+{
+  inline int get_kerning (void) const
+  { return value; }
+
+  inline int cmp (const hb_glyph_pair_t &o) const
+  {
+    int ret = left.cmp (o.left);
+    if (ret) return ret;
+    return right.cmp (o.right);
+  }
+
+  inline bool sanitize (hb_sanitize_context_t *c) const
+  {
+    TRACE_SANITIZE (this);
+    return_trace (c->check_struct (this));
+  }
+
+  protected:
+  GlyphID	left;
+  GlyphID	right;
+  FWORD		value;
+  public:
+  DEFINE_SIZE_STATIC (6);
+};
+
+
+} /* namespace OT */
+
+
+#endif /* HB_KERN_HH */
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 33e6827148a..40d36a3360a 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -27,89 +27,8 @@
 #ifndef HB_OT_KERN_TABLE_HH
 #define HB_OT_KERN_TABLE_HH
 
-#include ""hb-open-type.hh""
+#include ""hb-kern.hh""
 #include ""hb-ot-shape.hh""
-#include ""hb-ot-layout-gsubgpos.hh""
-#include ""hb-aat-layout-common.hh""
-
-
-template <typename Driver>
-struct hb_kern_machine_t
-{
-  hb_kern_machine_t (const Driver &driver_) : driver (driver_) {}
-
-  HB_NO_SANITIZE_SIGNED_INTEGER_OVERFLOW
-  inline void kern (hb_font_t   *font,
-		    hb_buffer_t *buffer,
-		    hb_mask_t    kern_mask,
-		    bool         scale = true) const
-  {
-    OT::hb_ot_apply_context_t c (1, font, buffer);
-    c.set_lookup_mask (kern_mask);
-    c.set_lookup_props (OT::LookupFlag::IgnoreMarks);
-    OT::hb_ot_apply_context_t::skipping_iterator_t &skippy_iter = c.iter_input;
-    skippy_iter.init (&c);
-
-    bool horizontal = HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction);
-    unsigned int count = buffer->len;
-    hb_glyph_info_t *info = buffer->info;
-    hb_glyph_position_t *pos = buffer->pos;
-    for (unsigned int idx = 0; idx < count;)
-    {
-      if (!(info[idx].mask & kern_mask))
-      {
-	idx++;
-	continue;
-      }
-
-      skippy_iter.reset (idx, 1);
-      if (!skippy_iter.next ())
-      {
-	idx++;
-	continue;
-      }
-
-      unsigned int i = idx;
-      unsigned int j = skippy_iter.idx;
-
-      hb_position_t kern = driver.get_kerning (info[i].codepoint,
-					       info[j].codepoint);
-
-
-      if (likely (!kern))
-        goto skip;
-
-
-      if (horizontal)
-      {
-        if (scale)
-	  kern = font->em_scale_x (kern);
-	hb_position_t kern1 = kern >> 1;
-	hb_position_t kern2 = kern - kern1;
-	pos[i].x_advance += kern1;
-	pos[j].x_advance += kern2;
-	pos[j].x_offset += kern2;
-      }
-      else
-      {
-        if (scale)
-	  kern = font->em_scale_y (kern);
-	hb_position_t kern1 = kern >> 1;
-	hb_position_t kern2 = kern - kern1;
-	pos[i].y_advance += kern1;
-	pos[j].y_advance += kern2;
-	pos[j].y_offset += kern2;
-      }
-
-      buffer->unsafe_to_break (i, j + 1);
-
-    skip:
-      idx = skippy_iter.idx;
-    }
-  }
-
-  const Driver &driver;
-};
 
 
 /*
@@ -123,38 +42,6 @@ struct hb_kern_machine_t
 namespace OT {
 
 
-struct hb_glyph_pair_t
-{
-  hb_codepoint_t left;
-  hb_codepoint_t right;
-};
-
-struct KernPair
-{
-  inline int get_kerning (void) const
-  { return value; }
-
-  inline int cmp (const hb_glyph_pair_t &o) const
-  {
-    int ret = left.cmp (o.left);
-    if (ret) return ret;
-    return right.cmp (o.right);
-  }
-
-  inline bool sanitize (hb_sanitize_context_t *c) const
-  {
-    TRACE_SANITIZE (this);
-    return_trace (c->check_struct (this));
-  }
-
-  protected:
-  GlyphID	left;
-  GlyphID	right;
-  FWORD		value;
-  public:
-  DEFINE_SIZE_STATIC (6);
-};
-
 template <typename KernSubTableHeader>
 struct KernSubTableFormat0
 {
diff --git a/src/hb-ot-shape-fallback.cc b/src/hb-ot-shape-fallback.cc
index 766efe20d5b..3742d670407 100644
--- a/src/hb-ot-shape-fallback.cc
+++ b/src/hb-ot-shape-fallback.cc
@@ -465,7 +465,7 @@ _hb_ot_shape_fallback_kern (const hb_ot_shape_plan_t *plan,
       !font->has_glyph_v_kerning_func ())
     return;
   hb_ot_shape_fallback_kern_driver_t driver (font, buffer);
-  hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t> machine (driver);
+  OT::hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t> machine (driver);
   machine.kern (font, buffer, plan->kern_mask, false);
 }
 

From 540ccc38b0f95804d08047f8b2d059bfd1e09337 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 10:33:46 -0500
Subject: [PATCH 19/66] [kern/kerx] More towards sharing

---
 src/hb-aat-layout-kerx-table.hh |  7 ++++---
 src/hb-ot-kern-table.hh         | 10 +++++++---
 2 files changed, 11 insertions(+), 6 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 11d7f5c76f0..a2f0c642dc5 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -59,6 +59,8 @@ kerxTupleKern (int value,
 
 struct KerxSubTableHeader
 {
+  typedef MorxTypes Types;
+
   enum Coverage
   {
     Vertical		= 0x80000000,	/* Set if table has vertical kerning values. */
@@ -134,13 +136,12 @@ struct KerxSubTableFormat0
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
-    return_trace (likely (c->check_struct (this) &&
-			  pairs.sanitize (c)));
+    return_trace (likely (pairs.sanitize (c)));
   }
 
   protected:
   KernSubTableHeader	header;
-  BinSearchArrayOf<KernPair, HBUINT32>
+  BinSearchArrayOf<KernPair, typename KernSubTableHeader::Types::HBUINT>
 			pairs;	/* Sorted kern records. */
   public:
   DEFINE_SIZE_ARRAY (KernSubTableHeader::static_size + 16, pairs);
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 40d36a3360a..9f75466230f 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -49,8 +49,7 @@ struct KernSubTableFormat0
   {
     hb_glyph_pair_t pair = {left, right};
     int i = pairs.bsearch (pair);
-    if (i == -1)
-      return 0;
+    if (i == -1) return 0;
     return pairs[i].get_kerning ();
   }
 
@@ -78,7 +77,8 @@ struct KernSubTableFormat0
 
   protected:
   KernSubTableHeader		header;
-  BinSearchArrayOf<KernPair>	pairs;	/* Array of kerning pairs. */
+  BinSearchArrayOf<KernPair, typename KernSubTableHeader::Types::HBUINT>
+				pairs;	/* Array of kerning pairs. */
   public:
   DEFINE_SIZE_ARRAY (KernSubTableHeader::static_size + 8, pairs);
 };
@@ -543,6 +543,8 @@ struct KernOT : KernTable<KernOT>
 
   struct SubTableHeader
   {
+    typedef AAT::MortTypes Types;
+
     enum Coverage
     {
       Direction		= 0x01u,
@@ -586,6 +588,8 @@ struct KernAAT : KernTable<KernAAT>
 
   struct SubTableHeader
   {
+    typedef AAT::MortTypes Types;
+
     enum Coverage
     {
       Direction		= 0x80u,

From c97dde5d55929df394fbe57c1ba1a725592c6732 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 10:39:39 -0500
Subject: [PATCH 20/66] [kern/kerx] Towards merge more

---
 src/hb-aat-layout-kerx-table.hh | 75 ++++++++++++++++++++++++---------
 src/hb-kern.hh                  | 33 ---------------
 src/hb-ot-kern-table.hh         |  7 ++-
 3 files changed, 58 insertions(+), 57 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index a2f0c642dc5..dcab790d275 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -29,6 +29,7 @@
 #define HB_AAT_LAYOUT_KERX_TABLE_HH
 
 #include ""hb-kern.hh""
+#include ""hb-aat-layout-ankr-table.hh""
 
 /*
  * kerx -- Extended Kerning
@@ -57,36 +58,36 @@ kerxTupleKern (int value,
 }
 
 
-struct KerxSubTableHeader
+struct hb_glyph_pair_t
 {
-  typedef MorxTypes Types;
+  hb_codepoint_t left;
+  hb_codepoint_t right;
+};
 
-  enum Coverage
+struct KernPair
+{
+  inline int get_kerning (void) const
+  { return value; }
+
+  inline int cmp (const hb_glyph_pair_t &o) const
   {
-    Vertical		= 0x80000000,	/* Set if table has vertical kerning values. */
-    CrossStream		= 0x40000000,	/* Set if table has cross-stream kerning values. */
-    Variation		= 0x20000000,	/* Set if table has variation kerning values. */
-    Backwards		= 0x10000000,	/* If clear, process the glyphs forwards, that
-					 * is, from first to last in the glyph stream.
-					 * If we, process them from last to first.
-					 * This flag only applies to state-table based
-					 * 'kerx' subtables (types 1 and 4). */
-    Reserved		= 0x0FFFFF00,	/* Reserved, set to zero. */
-    SubtableType	= 0x000000FF,	/* Subtable type. */
-  };
+    int ret = left.cmp (o.left);
+    if (ret) return ret;
+    return right.cmp (o.right);
+  }
 
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
-    return_trace (likely (c->check_struct (this)));
+    return_trace (c->check_struct (this));
   }
 
+  protected:
+  GlyphID	left;
+  GlyphID	right;
+  FWORD		value;
   public:
-  HBUINT32	length;
-  HBUINT32	coverage;
-  HBUINT32	tupleCount;
-  public:
-  DEFINE_SIZE_STATIC (12);
+  DEFINE_SIZE_STATIC (6);
 };
 
 template <typename KernSubTableHeader>
@@ -687,6 +688,39 @@ struct KerxSubTableFormat6
   DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 24);
 };
 
+
+struct KerxSubTableHeader
+{
+  typedef MorxTypes Types;
+
+  enum Coverage
+  {
+    Vertical		= 0x80000000,	/* Set if table has vertical kerning values. */
+    CrossStream		= 0x40000000,	/* Set if table has cross-stream kerning values. */
+    Variation		= 0x20000000,	/* Set if table has variation kerning values. */
+    Backwards		= 0x10000000,	/* If clear, process the glyphs forwards, that
+					 * is, from first to last in the glyph stream.
+					 * If we, process them from last to first.
+					 * This flag only applies to state-table based
+					 * 'kerx' subtables (types 1 and 4). */
+    Reserved		= 0x0FFFFF00,	/* Reserved, set to zero. */
+    SubtableType	= 0x000000FF,	/* Subtable type. */
+  };
+
+  inline bool sanitize (hb_sanitize_context_t *c) const
+  {
+    TRACE_SANITIZE (this);
+    return_trace (likely (c->check_struct (this)));
+  }
+
+  public:
+  HBUINT32	length;
+  HBUINT32	coverage;
+  HBUINT32	tupleCount;
+  public:
+  DEFINE_SIZE_STATIC (12);
+};
+
 struct KerxTable
 {
   friend struct kerx;
@@ -816,6 +850,7 @@ struct kerx
   DEFINE_SIZE_MIN (8);
 };
 
+
 } /* namespace AAT */
 
 
diff --git a/src/hb-kern.hh b/src/hb-kern.hh
index de726960004..60e625c4b1b 100644
--- a/src/hb-kern.hh
+++ b/src/hb-kern.hh
@@ -114,39 +114,6 @@ struct hb_kern_machine_t
 };
 
 
-struct hb_glyph_pair_t
-{
-  hb_codepoint_t left;
-  hb_codepoint_t right;
-};
-
-struct KernPair
-{
-  inline int get_kerning (void) const
-  { return value; }
-
-  inline int cmp (const hb_glyph_pair_t &o) const
-  {
-    int ret = left.cmp (o.left);
-    if (ret) return ret;
-    return right.cmp (o.right);
-  }
-
-  inline bool sanitize (hb_sanitize_context_t *c) const
-  {
-    TRACE_SANITIZE (this);
-    return_trace (c->check_struct (this));
-  }
-
-  protected:
-  GlyphID	left;
-  GlyphID	right;
-  FWORD		value;
-  public:
-  DEFINE_SIZE_STATIC (6);
-};
-
-
 } /* namespace OT */
 
 
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 9f75466230f..c7c15e8804b 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -27,8 +27,7 @@
 #ifndef HB_OT_KERN_TABLE_HH
 #define HB_OT_KERN_TABLE_HH
 
-#include ""hb-kern.hh""
-#include ""hb-ot-shape.hh""
+#include ""hb-aat-layout-kerx-table.hh""
 
 
 /*
@@ -47,7 +46,7 @@ struct KernSubTableFormat0
 {
   inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right) const
   {
-    hb_glyph_pair_t pair = {left, right};
+    AAT::hb_glyph_pair_t pair = {left, right};
     int i = pairs.bsearch (pair);
     if (i == -1) return 0;
     return pairs[i].get_kerning ();
@@ -77,7 +76,7 @@ struct KernSubTableFormat0
 
   protected:
   KernSubTableHeader		header;
-  BinSearchArrayOf<KernPair, typename KernSubTableHeader::Types::HBUINT>
+  BinSearchArrayOf<AAT::KernPair, typename KernSubTableHeader::Types::HBUINT>
 				pairs;	/* Array of kerning pairs. */
   public:
   DEFINE_SIZE_ARRAY (KernSubTableHeader::static_size + 8, pairs);

From 5b17853547ca6848ee652ef6990a81bb345ac06f Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 10:45:25 -0500
Subject: [PATCH 21/66] [kern/kerx] Share Format0

---
 src/hb-aat-layout-kerx-table.hh | 22 +++++++++++----
 src/hb-ot-kern-table.hh         | 50 +++++----------------------------
 2 files changed, 23 insertions(+), 49 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index dcab790d275..9cdba8797f5 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -93,6 +93,14 @@ struct KernPair
 template <typename KernSubTableHeader>
 struct KerxSubTableFormat0
 {
+  inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right) const
+  {
+    hb_glyph_pair_t pair = {left, right};
+    int i = pairs.bsearch (pair);
+    if (i == -1) return 0;
+    return pairs[i].get_kerning ();
+  }
+
   inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right,
 			  hb_aat_apply_context_t *c) const
   {
@@ -100,7 +108,7 @@ struct KerxSubTableFormat0
     int i = pairs.bsearch (pair);
     if (i == -1) return 0;
     int v = pairs[i].get_kerning ();
-    return kerxTupleKern (v, header.tupleCount, this, c);
+    return kerxTupleKern (v, header.tuple_count (), this, c);
   }
 
   inline bool apply (hb_aat_apply_context_t *c) const
@@ -310,7 +318,7 @@ struct KerxSubTableFormat1
     if (header.coverage & header.CrossStream)
       return false;
 
-    if (header.tupleCount)
+    if (header.tuple_count ())
       return_trace (false); /* TODO kerxTupleKern */
 
     driver_context_t dc (this, c);
@@ -349,7 +357,7 @@ struct KerxSubTableFormat2
     unsigned int offset = l + r;
     const FWORD *v = &StructAtOffset<FWORD> (&(this+array), offset);
     if (unlikely (!v->sanitize (&c->sanitizer))) return 0;
-    return kerxTupleKern (*v, header.tupleCount, this, c);
+    return kerxTupleKern (*v, header.tuple_count (), this, c);
   }
 
   inline bool apply (hb_aat_apply_context_t *c) const
@@ -601,7 +609,7 @@ struct KerxSubTableFormat6
       if (unlikely (hb_unsigned_mul_overflows (offset, sizeof (FWORD32)))) return 0;
       const FWORD32 *v = &StructAtOffset<FWORD32> (&(this+t.array), offset * sizeof (FWORD32));
       if (unlikely (!v->sanitize (&c->sanitizer))) return 0;
-      return kerxTupleKern (*v, header.tupleCount, &(this+vector), c);
+      return kerxTupleKern (*v, header.tuple_count (), &(this+vector), c);
     }
     else
     {
@@ -611,7 +619,7 @@ struct KerxSubTableFormat6
       unsigned int offset = l + r;
       const FWORD *v = &StructAtOffset<FWORD> (&(this+t.array), offset * sizeof (FWORD));
       if (unlikely (!v->sanitize (&c->sanitizer))) return 0;
-      return kerxTupleKern (*v, header.tupleCount, &(this+vector), c);
+      return kerxTupleKern (*v, header.tuple_count (), &(this+vector), c);
     }
   }
 
@@ -646,7 +654,7 @@ struct KerxSubTableFormat6
 			     u.s.columnIndexTable.sanitize (c, this) &&
 			     c->check_range (this, u.s.array)
 			   )) &&
-			  (header.tupleCount == 0 ||
+			  (header.tuple_count () == 0 ||
 			   c->check_range (this, vector))));
   }
 
@@ -693,6 +701,8 @@ struct KerxSubTableHeader
 {
   typedef MorxTypes Types;
 
+  unsigned int tuple_count (void) const { return tupleCount; }
+
   enum Coverage
   {
     Vertical		= 0x80000000,	/* Set if table has vertical kerning values. */
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index c7c15e8804b..e065b6ff068 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -41,47 +41,6 @@
 namespace OT {
 
 
-template <typename KernSubTableHeader>
-struct KernSubTableFormat0
-{
-  inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right) const
-  {
-    AAT::hb_glyph_pair_t pair = {left, right};
-    int i = pairs.bsearch (pair);
-    if (i == -1) return 0;
-    return pairs[i].get_kerning ();
-  }
-
-  inline bool apply (AAT::hb_aat_apply_context_t *c) const
-  {
-    TRACE_APPLY (this);
-
-    if (!c->plan->requested_kerning)
-      return false;
-
-    if (header.coverage & header.CrossStream)
-      return false;
-
-    hb_kern_machine_t<KernSubTableFormat0> machine (*this);
-    machine.kern (c->font, c->buffer, c->plan->kern_mask);
-
-    return_trace (true);
-  }
-
-  inline bool sanitize (hb_sanitize_context_t *c) const
-  {
-    TRACE_SANITIZE (this);
-    return_trace (pairs.sanitize (c));
-  }
-
-  protected:
-  KernSubTableHeader		header;
-  BinSearchArrayOf<AAT::KernPair, typename KernSubTableHeader::Types::HBUINT>
-				pairs;	/* Array of kerning pairs. */
-  public:
-  DEFINE_SIZE_ARRAY (KernSubTableHeader::static_size + 8, pairs);
-};
-
 template <typename KernSubTableHeader>
 struct KernSubTableFormat1
 {
@@ -445,7 +404,7 @@ struct KernSubTable
   public:
   union {
   KernSubTableHeader				header;
-  KernSubTableFormat0<KernSubTableHeader>	format0;
+  AAT::KerxSubTableFormat0<KernSubTableHeader>	format0;
   KernSubTableFormat1<KernSubTableHeader>	format1;
   KernSubTableFormat2<KernSubTableHeader>	format2;
   KernSubTableFormat3<KernSubTableHeader>	format3;
@@ -544,6 +503,8 @@ struct KernOT : KernTable<KernOT>
   {
     typedef AAT::MortTypes Types;
 
+    unsigned int tuple_count (void) const { return 0; }
+
     enum Coverage
     {
       Direction		= 0x01u,
@@ -589,6 +550,8 @@ struct KernAAT : KernTable<KernAAT>
   {
     typedef AAT::MortTypes Types;
 
+    unsigned int tuple_count (void) const { return 0; }
+
     enum Coverage
     {
       Direction		= 0x80u,
@@ -609,7 +572,8 @@ struct KernAAT : KernTable<KernAAT>
     HBUINT8	coverage;	/* Coverage bits. */
     HBUINT8	format;		/* Subtable format. */
     HBUINT16	tupleIndex;	/* The tuple index (used for variations fonts).
-				 * This value specifies which tuple this subtable covers. */
+				 * This value specifies which tuple this subtable covers.
+				 * Note: We don't implement. */
     public:
     DEFINE_SIZE_STATIC (8);
   };

From e890753ebbf0d20c1c86796837918d530610df3b Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 10:58:50 -0500
Subject: [PATCH 22/66] [morx] Minor

---
 src/hb-aat-layout-morx-table.hh | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/hb-aat-layout-morx-table.hh b/src/hb-aat-layout-morx-table.hh
index 2bc60182e5c..c06af4210a2 100644
--- a/src/hb-aat-layout-morx-table.hh
+++ b/src/hb-aat-layout-morx-table.hh
@@ -375,14 +375,14 @@ struct LigatureEntry<true>
     Reserved		= 0x1FFF,	/* These bits are reserved and should be set to 0. */
   };
 
-  typedef struct
+  struct EntryData
   {
     HBUINT16	ligActionIndex;	/* Index to the first ligActionTable entry
 				 * for processing this group, if indicated
 				 * by the flags. */
     public:
     DEFINE_SIZE_STATIC (2);
-  } EntryData;
+  };
 
   template <typename Flags>
   static inline bool performAction (Flags flags)
@@ -428,11 +428,11 @@ struct LigatureSubtable
 
   struct driver_context_t
   {
+    static const bool in_place = false;
     enum
     {
       DontAdvance	= LigatureEntryT::DontAdvance,
     };
-    static const bool in_place = false;
     enum LigActionFlags
     {
       LigActionLast	= 0x80000000,	/* This is the last action in the list. This also

From ce3451dc2aad2241c148953842e696e9f53b5deb Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:02:04 -0500
Subject: [PATCH 23/66] [kerx] Towards sharing Format1

---
 src/hb-aat-layout-kerx-table.hh | 61 +++++++++++++++++++++++++--------
 1 file changed, 47 insertions(+), 14 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 9cdba8797f5..e72378233a8 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -156,9 +156,22 @@ struct KerxSubTableFormat0
   DEFINE_SIZE_ARRAY (KernSubTableHeader::static_size + 16, pairs);
 };
 
-template <typename KernSubTableHeader>
-struct KerxSubTableFormat1
+
+template <bool extended>
+struct Format1Entry;
+
+template <>
+struct Format1Entry<true>
 {
+  enum Flags
+  {
+    Push		= 0x8000,	/* If set, push this glyph on the kerning stack. */
+    DontAdvance		= 0x4000,	/* If set, don't advance to the next glyph
+					 * before going to the new state. */
+    Reset		= 0x2000,	/* If set, reset the kerning data (clear the stack) */
+    Reserved		= 0x1FFF,	/* Not used; set to 0. */
+  };
+
   struct EntryData
   {
     HBUINT16	kernActionIndex;/* Index into the kerning value array. If
@@ -167,17 +180,39 @@ struct KerxSubTableFormat1
     public:
     DEFINE_SIZE_STATIC (2);
   };
+};
+template <>
+struct Format1Entry<false>
+{
+  enum Flags
+  {
+    Push		= 0x8000,	/* If set, push this glyph on the kerning stack. */
+    DontAdvance		= 0x4000,	/* If set, don't advance to the next glyph
+					 * before going to the new state. */
+    Offset		= 0x3FFF,	/* Byte offset from beginning of subtable to the
+					 * value table for the glyphs on the kerning stack. */
+
+    Reset		= 0x0000,	/* Not supported? */
+  };
+
+  typedef void EntryData;
+};
+
+template <typename KernSubTableHeader>
+struct KerxSubTableFormat1
+{
+  typedef typename KernSubTableHeader::Types Types;
+  typedef typename Types::HBUINT HBUINT;
+
+  typedef Format1Entry<Types::extended> Format1EntryT;
+  typedef typename Format1EntryT::EntryData EntryData;
 
   struct driver_context_t
   {
     static const bool in_place = true;
-    enum Flags
+    enum
     {
-      Push		= 0x8000,	/* If set, push this glyph on the kerning stack. */
-      DontAdvance	= 0x4000,	/* If set, don't advance to the next glyph
-					 * before going to the new state. */
-      Reset		= 0x2000,	/* If set, reset the kerning data (clear the stack) */
-      Reserved		= 0x1FFF,	/* Not used; set to 0. */
+      DontAdvance	= Format1EntryT::DontAdvance,
     };
 
     inline driver_context_t (const KerxSubTableFormat1 *table,
@@ -202,12 +237,10 @@ struct KerxSubTableFormat1
       hb_buffer_t *buffer = driver->buffer;
       unsigned int flags = entry->flags;
 
-      if (flags & Reset)
-      {
+      if (flags & Format1EntryT::Reset)
 	depth = 0;
-      }
 
-      if (flags & Push)
+      if (flags & Format1EntryT::Push)
       {
 	if (likely (depth < ARRAY_LENGTH (stack)))
 	  stack[depth++] = buffer->idx;
@@ -339,8 +372,8 @@ struct KerxSubTableFormat1
 
   protected:
   KernSubTableHeader				header;
-  StateTable<MorxTypes, EntryData>		machine;
-  LOffsetTo<UnsizedArrayOf<FWORD>, false>	kernAction;
+  StateTable<Types, EntryData>			machine;
+  OffsetTo<UnsizedArrayOf<FWORD>, HBUINT, false>kernAction;
   public:
   DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 20);
 };

From b693fd0dc6c7979dcacdff060ecf12a2e107071d Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:05:28 -0500
Subject: [PATCH 24/66] [morx] Simplify

---
 src/hb-aat-layout-morx-table.hh | 27 +++++++++++----------------
 1 file changed, 11 insertions(+), 16 deletions(-)

diff --git a/src/hb-aat-layout-morx-table.hh b/src/hb-aat-layout-morx-table.hh
index c06af4210a2..784b36cf426 100644
--- a/src/hb-aat-layout-morx-table.hh
+++ b/src/hb-aat-layout-morx-table.hh
@@ -384,12 +384,10 @@ struct LigatureEntry<true>
     DEFINE_SIZE_STATIC (2);
   };
 
-  template <typename Flags>
-  static inline bool performAction (Flags flags)
-  { return flags & PerformAction; }
+  static inline bool performAction (const Entry<EntryData> *entry)
+  { return entry->flags & PerformAction; }
 
-  template <typename Entry, typename Flags>
-  static inline unsigned int ligActionIndex (Entry &entry, Flags flags)
+  static inline unsigned int ligActionIndex (const Entry<EntryData> *entry)
   { return entry->data.ligActionIndex; }
 };
 template <>
@@ -408,13 +406,11 @@ struct LigatureEntry<false>
 
   typedef void EntryData;
 
-  template <typename Flags>
-  static inline bool performAction (Flags flags)
-  { return flags & Offset; }
+  static inline bool performAction (const Entry<EntryData> *entry)
+  { return entry->flags & Offset; }
 
-  template <typename Entry, typename Flags>
-  static inline unsigned int ligActionIndex (Entry &entry, Flags flags)
-  { return flags & 0x3FFF; }
+  static inline unsigned int ligActionIndex (const Entry<EntryData> *entry)
+  { return entry->flags & 0x3FFF; }
 };
 
 
@@ -458,16 +454,15 @@ struct LigatureSubtable
     inline bool is_actionable (StateTableDriver<Types, EntryData> *driver HB_UNUSED,
 			       const Entry<EntryData> *entry)
     {
-      return LigatureEntryT::performAction (entry->flags);
+      return LigatureEntryT::performAction (entry);
     }
     inline bool transition (StateTableDriver<Types, EntryData> *driver,
 			    const Entry<EntryData> *entry)
     {
       hb_buffer_t *buffer = driver->buffer;
-      unsigned int flags = entry->flags;
 
       DEBUG_MSG (APPLY, nullptr, ""Ligature transition at %d"", buffer->idx);
-      if (flags & LigatureEntryT::SetComponent)
+      if (entry->flags & LigatureEntryT::SetComponent)
       {
         if (unlikely (match_length >= ARRAY_LENGTH (match_positions)))
 	  return false;
@@ -480,11 +475,11 @@ struct LigatureSubtable
 	DEBUG_MSG (APPLY, nullptr, ""Set component at %d"", buffer->out_len);
       }
 
-      if (LigatureEntryT::performAction (flags))
+      if (LigatureEntryT::performAction (entry))
       {
 	DEBUG_MSG (APPLY, nullptr, ""Perform action with %d"", match_length);
 	unsigned int end = buffer->out_len;
-	unsigned int action_idx = LigatureEntryT::ligActionIndex (entry, flags);
+	unsigned int action_idx = LigatureEntryT::ligActionIndex (entry);
 	unsigned int action;
 	unsigned int ligature_idx = 0;
 

From d5c88af4a23bffc09840c43e6b1403b64a9f74d5 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:20:14 -0500
Subject: [PATCH 25/66] [kerx] More towards sharing Format1

---
 src/hb-aat-layout-kerx-table.hh | 35 +++++++++++++++++++++++++++++----
 src/hb-aat-layout-morx-table.hh | 10 ++++++----
 2 files changed, 37 insertions(+), 8 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index e72378233a8..2a12a0b56de 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -180,6 +180,12 @@ struct Format1Entry<true>
     public:
     DEFINE_SIZE_STATIC (2);
   };
+
+  static inline bool performAction (const Entry<EntryData> *entry)
+  { return entry->data.kernActionIndex != 0xFFFF; }
+
+  static inline unsigned int kernActionIndex (const Entry<EntryData> *entry)
+  { return entry->data.kernActionIndex; }
 };
 template <>
 struct Format1Entry<false>
@@ -196,6 +202,12 @@ struct Format1Entry<false>
   };
 
   typedef void EntryData;
+
+  static inline bool performAction (const Entry<EntryData> *entry)
+  { return entry->flags & Offset; }
+
+  static inline unsigned int kernActionIndex (const Entry<EntryData> *entry)
+  { return entry->flags & Offset; }
 };
 
 template <typename KernSubTableHeader>
@@ -215,9 +227,10 @@ struct KerxSubTableFormat1
       DontAdvance	= Format1EntryT::DontAdvance,
     };
 
-    inline driver_context_t (const KerxSubTableFormat1 *table,
+    inline driver_context_t (const KerxSubTableFormat1 *table_,
 			     hb_aat_apply_context_t *c_) :
 	c (c_),
+	table (table_),
 	/* Apparently the offset kernAction is from the beginning of the state-machine,
 	 * similar to offsets in morx table, NOT from beginning of this table, like
 	 * other subtables in kerx.  Discovered via testing. */
@@ -226,10 +239,21 @@ struct KerxSubTableFormat1
 	crossStream (table->header.coverage & table->header.CrossStream),
 	crossOffset (0) {}
 
+
+    /* TODO
+     * 'kern' table has this pecularity, we don't currently implement.
+     *
+     * ""Because the stateTableOffset in the state table header is (strictly
+     * speaking) redundant, some 'kern' tables use it to record an initial
+     * state where that should not be StartOfText. To determine if this is
+     * done, calculate what the stateTableOffset should be. If it's different
+     * from the actual stateTableOffset, use it as the initial state.""
+     */
+
     inline bool is_actionable (StateTableDriver<MorxTypes, EntryData> *driver HB_UNUSED,
 			       const Entry<EntryData> *entry)
     {
-      return entry->data.kernActionIndex != 0xFFFF;
+      return Format1EntryT::performAction (entry);
     }
     inline bool transition (StateTableDriver<MorxTypes, EntryData> *driver,
 			    const Entry<EntryData> *entry)
@@ -248,9 +272,11 @@ struct KerxSubTableFormat1
 	  depth = 0; /* Probably not what CoreText does, but better? */
       }
 
-      if (entry->data.kernActionIndex != 0xFFFF)
+      if (Format1EntryT::performAction (entry))
       {
-	const FWORD *actions = &kernAction[entry->data.kernActionIndex];
+	unsigned int kern_idx = Format1EntryT::kernActionIndex (entry);
+	kern_idx = Types::offsetToIndex (kern_idx, &table->machine, kernAction.arrayZ);
+	const FWORD *actions = &kernAction[kern_idx];
 	if (!c->sanitizer.check_array (actions, depth))
 	{
 	  depth = 0;
@@ -334,6 +360,7 @@ struct KerxSubTableFormat1
 
     private:
     hb_aat_apply_context_t *c;
+    const KerxSubTableFormat1 *table;
     const UnsizedArrayOf<FWORD> &kernAction;
     unsigned int stack[8];
     unsigned int depth;
diff --git a/src/hb-aat-layout-morx-table.hh b/src/hb-aat-layout-morx-table.hh
index 784b36cf426..51f14682c78 100644
--- a/src/hb-aat-layout-morx-table.hh
+++ b/src/hb-aat-layout-morx-table.hh
@@ -410,7 +410,7 @@ struct LigatureEntry<false>
   { return entry->flags & Offset; }
 
   static inline unsigned int ligActionIndex (const Entry<EntryData> *entry)
-  { return entry->flags & 0x3FFF; }
+  { return entry->flags & Offset; }
 };
 
 
@@ -479,9 +479,6 @@ struct LigatureSubtable
       {
 	DEBUG_MSG (APPLY, nullptr, ""Perform action with %d"", match_length);
 	unsigned int end = buffer->out_len;
-	unsigned int action_idx = LigatureEntryT::ligActionIndex (entry);
-	unsigned int action;
-	unsigned int ligature_idx = 0;
 
 	if (unlikely (!match_length))
 	  return true;
@@ -490,8 +487,13 @@ struct LigatureSubtable
 	  return false; // TODO Work on previous instead?
 
 	unsigned int cursor = match_length;
+
+	unsigned int action_idx = LigatureEntryT::ligActionIndex (entry);
 	action_idx = Types::offsetToIndex (action_idx, table, ligAction.arrayZ);
 	const HBUINT32 *actionData = &ligAction[action_idx];
+
+	unsigned int ligature_idx = 0;
+	unsigned int action;
         do
 	{
 	  if (unlikely (!cursor))

From f5f4ca7871ec2be2b5666a7b9e6e5e28133b8393 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:21:09 -0500
Subject: [PATCH 26/66] [kern/kerx] Enable crossStream kerning in vertical

CoreText doesn't, but no reason we shouldn't do.
---
 src/hb-aat-layout-kerx-table.hh | 8 ++++----
 src/hb-ot-kern-table.hh         | 8 ++++----
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 2a12a0b56de..34183270d6f 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -334,10 +334,10 @@ struct KerxSubTableFormat1
 	    {
 	      if (crossStream)
 	      {
-	        /* CoreText doesn't do crossStream kerning in vertical. */
-		//crossOffset += v;
-		//if (!buffer->pos[idx].x_offset)
-		//  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
+	        /* CoreText doesn't do crossStream kerning in vertical.  We do. */
+		crossOffset += v;
+		if (!buffer->pos[idx].x_offset)
+		  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
 	      }
 	      else
 	      {
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index e065b6ff068..e205b4b36f5 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -161,10 +161,10 @@ struct KernSubTableFormat1
 	    {
 	      if (crossStream)
 	      {
-	        /* CoreText doesn't do crossStream kerning in vertical. */
-		//crossOffset += v;
-		//if (!buffer->pos[idx].x_offset)
-		//  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
+	        /* CoreText doesn't do crossStream kerning in vertical.  We do. */
+		crossOffset += v;
+		if (!buffer->pos[idx].x_offset)
+		  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
 	      }
 	      else
 	      {

From 2a720911964a00ad607ff712be09ea3ea0925c9b Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:25:55 -0500
Subject: [PATCH 27/66] [kerx] Minor

---
 src/hb-aat-layout-kerx-table.hh | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 34183270d6f..66b8b8e6a08 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -311,6 +311,7 @@ struct KerxSubTableFormat1
 	    crossOffset = 0;
 	    v = 0;
 	  }
+
 	  if (idx < buffer->len && buffer->info[idx].mask & kern_mask)
 	  {
 	    if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
@@ -402,7 +403,7 @@ struct KerxSubTableFormat1
   StateTable<Types, EntryData>			machine;
   OffsetTo<UnsizedArrayOf<FWORD>, HBUINT, false>kernAction;
   public:
-  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 20);
+  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 5 * sizeof (HBUINT));
 };
 
 template <typename KernSubTableHeader>

From a244190afa90ac253724a2ff23a3bdf0c507d0e6 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:43:25 -0500
Subject: [PATCH 28/66] [kerx] Minor

---
 src/hb-aat-layout-kerx-table.hh | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 66b8b8e6a08..c2b989c191a 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -524,7 +524,6 @@ struct KerxSubTableFormat4
 			    const Entry<EntryData> *entry)
     {
       hb_buffer_t *buffer = driver->buffer;
-      unsigned int flags = entry->flags;
 
       if (mark_set && entry->data.ankrActionIndex != 0xFFFF && buffer->idx < buffer->len)
       {
@@ -600,7 +599,7 @@ struct KerxSubTableFormat4
 	buffer->scratch_flags |= HB_BUFFER_SCRATCH_FLAG_HAS_GPOS_ATTACHMENT;
       }
 
-      if (flags & Mark)
+      if (entry->flags & Mark)
       {
 	mark_set = true;
 	mark = buffer->idx;

From c808e444da12840ac3ab1d78569504b9b7e876f9 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:28:36 -0500
Subject: [PATCH 29/66] [kern/kerx] Share Format1 subtable

---
 src/hb-aat-layout-kerx-table.hh |   9 +-
 src/hb-ot-kern-table.hh         | 187 +-------------------------------
 2 files changed, 4 insertions(+), 192 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index c2b989c191a..2b26d496a16 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -250,12 +250,12 @@ struct KerxSubTableFormat1
      * from the actual stateTableOffset, use it as the initial state.""
      */
 
-    inline bool is_actionable (StateTableDriver<MorxTypes, EntryData> *driver HB_UNUSED,
+    inline bool is_actionable (StateTableDriver<Types, EntryData> *driver HB_UNUSED,
 			       const Entry<EntryData> *entry)
     {
       return Format1EntryT::performAction (entry);
     }
-    inline bool transition (StateTableDriver<MorxTypes, EntryData> *driver,
+    inline bool transition (StateTableDriver<Types, EntryData> *driver,
 			    const Entry<EntryData> *entry)
     {
       hb_buffer_t *buffer = driver->buffer;
@@ -376,15 +376,12 @@ struct KerxSubTableFormat1
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & header.CrossStream)
-      return false;
-
     if (header.tuple_count ())
       return_trace (false); /* TODO kerxTupleKern */
 
     driver_context_t dc (this, c);
 
-    StateTableDriver<MorxTypes, EntryData> driver (machine, c->buffer, c->font->face);
+    StateTableDriver<Types, EntryData> driver (machine, c->buffer, c->font->face);
     driver.drive (&dc);
 
     return_trace (true);
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index e205b4b36f5..6f1b46a93fd 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -41,191 +41,6 @@
 namespace OT {
 
 
-template <typename KernSubTableHeader>
-struct KernSubTableFormat1
-{
-  typedef void EntryData;
-
-  struct driver_context_t
-  {
-    static const bool in_place = true;
-    enum Flags
-    {
-      Push		= 0x8000,	/* If set, push this glyph on the kerning stack. */
-      DontAdvance	= 0x4000,	/* If set, don't advance to the next glyph
-					 * before going to the new state. */
-      Offset		= 0x3FFF,	/* Byte offset from beginning of subtable to the
-					 * value table for the glyphs on the kerning stack. */
-    };
-
-    inline driver_context_t (const KernSubTableFormat1 *table_,
-			     AAT::hb_aat_apply_context_t *c_) :
-	c (c_),
-	table (table_),
-	/* Apparently the offset kernAction is from the beginning of the state-machine,
-	 * similar to offsets in morx table, NOT from beginning of this table, like
-	 * other subtables in kerx.  Discovered via testing. */
-	kernAction (&table->machine + table->kernAction),
-	depth (0),
-	crossStream (table->header.coverage & table->header.CrossStream),
-	crossOffset (0) {}
-
-    /* TODO
-     *
-     * ""Because the stateTableOffset in the state table header is (strictly
-     * speaking) redundant, some 'kern' tables use it to record an initial
-     * state where that should not be StartOfText. To determine if this is
-     * done, calculate what the stateTableOffset should be. If it's different
-     * from the actual stateTableOffset, use it as the initial state.""
-     */
-
-    inline bool is_actionable (AAT::StateTableDriver<AAT::MortTypes, EntryData> *driver HB_UNUSED,
-			       const AAT::Entry<EntryData> *entry)
-    {
-      return entry->flags & Offset;
-    }
-    inline bool transition (AAT::StateTableDriver<AAT::MortTypes, EntryData> *driver,
-			    const AAT::Entry<EntryData> *entry)
-    {
-      hb_buffer_t *buffer = driver->buffer;
-      unsigned int flags = entry->flags;
-
-      if (flags & Push)
-      {
-	if (likely (depth < ARRAY_LENGTH (stack)))
-	  stack[depth++] = buffer->idx;
-	else
-	  depth = 0; /* Probably not what CoreText does, but better? */
-      }
-
-      if (entry->flags & Offset)
-      {
-	unsigned int kernIndex = AAT::MortTypes::offsetToIndex (entry->flags & Offset,
-								&table->machine,
-								kernAction.arrayZ);
-	const FWORD *actions = &kernAction[kernIndex];
-	if (!c->sanitizer.check_array (actions, depth))
-	{
-	  depth = 0;
-	  return false;
-	}
-
-	hb_mask_t kern_mask = c->plan->kern_mask;
-
-	/* ""Each pops one glyph from the kerning stack and applies the kerning value to it.
-	 * The end of the list is marked by an odd value... */
-	unsigned int i;
-	for (i = 0; i < depth; i++)
-	  if (actions[i] & 1)
-	  {
-	    i++;
-	    break;
-	  }
-	for (; i; i--)
-	{
-	  unsigned int idx = stack[depth - i];
-	  int v = actions[i - 1];
-
-	  /* ""The end of the list is marked by an odd value...""
-	   * Ignore it. */
-	  v &= ~1;
-
-	  /* The following flag is undocumented in the spec, but described
-	   * in the example. */
-	  if (v == -0x8000)
-	  {
-	    crossOffset = 0;
-	    v = 0;
-	  }
-
-	  if (idx < buffer->len && buffer->info[idx].mask & kern_mask)
-	  {
-	    if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
-	    {
-	      if (crossStream)
-	      {
-		crossOffset += v;
-		if (!buffer->pos[idx].y_offset)
-		  buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
-	      }
-	      else
-	      {
-		if (!buffer->pos[idx].x_offset)
-		{
-		  buffer->pos[idx].x_advance += c->font->em_scale_x (v);
-		  buffer->pos[idx].x_offset += c->font->em_scale_x (v);
-		}
-	      }
-	    }
-	    else
-	    {
-	      if (crossStream)
-	      {
-	        /* CoreText doesn't do crossStream kerning in vertical.  We do. */
-		crossOffset += v;
-		if (!buffer->pos[idx].x_offset)
-		  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
-	      }
-	      else
-	      {
-		if (!buffer->pos[idx].y_offset)
-		{
-		  buffer->pos[idx].y_advance += c->font->em_scale_y (v);
-		  buffer->pos[idx].y_offset += c->font->em_scale_y (v);
-		}
-	      }
-	    }
-	  }
-	}
-	depth = 0;
-      }
-      else
-	buffer->pos[buffer->idx].y_offset += c->font->em_scale_y (crossOffset);
-
-      return true;
-    }
-
-    private:
-    AAT::hb_aat_apply_context_t *c;
-    const KernSubTableFormat1 *table;
-    const UnsizedArrayOf<FWORD> &kernAction;
-    unsigned int stack[8];
-    unsigned int depth;
-    bool crossStream;
-    int crossOffset;
-  };
-
-  inline bool apply (AAT::hb_aat_apply_context_t *c) const
-  {
-    TRACE_APPLY (this);
-
-    if (!c->plan->requested_kerning)
-      return false;
-
-    driver_context_t dc (this, c);
-
-    AAT::StateTableDriver<AAT::MortTypes, EntryData> driver (machine, c->buffer, c->font->face);
-    driver.drive (&dc);
-
-    return_trace (true);
-  }
-
-  inline bool sanitize (hb_sanitize_context_t *c) const
-  {
-    TRACE_SANITIZE (this);
-    /* The rest of array sanitizations are done at run-time. */
-    return_trace (likely (c->check_struct (this) &&
-			  machine.sanitize (c)));
-  }
-
-  protected:
-  KernSubTableHeader					header;
-  AAT::StateTable<AAT::MortTypes, EntryData>		machine;
-  OffsetTo<UnsizedArrayOf<FWORD>, HBUINT16, false>	kernAction;
-  public:
-  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 10);
-};
-
 template <typename KernSubTableHeader>
 struct KernSubTableFormat2
 {
@@ -405,7 +220,7 @@ struct KernSubTable
   union {
   KernSubTableHeader				header;
   AAT::KerxSubTableFormat0<KernSubTableHeader>	format0;
-  KernSubTableFormat1<KernSubTableHeader>	format1;
+  AAT::KerxSubTableFormat1<KernSubTableHeader>	format1;
   KernSubTableFormat2<KernSubTableHeader>	format2;
   KernSubTableFormat3<KernSubTableHeader>	format3;
   } u;

From 241ba7da518adee334fff105ae19dfb051868a57 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:51:40 -0500
Subject: [PATCH 30/66] [morx/kerx] Rename types

---
 src/hb-aat-layout-common.hh     |  4 ++--
 src/hb-aat-layout-kerx-table.hh | 17 +++++++++--------
 src/hb-aat-layout-morx-table.hh |  4 ++--
 src/hb-ot-kern-table.hh         |  4 ++--
 4 files changed, 15 insertions(+), 14 deletions(-)

diff --git a/src/hb-aat-layout-common.hh b/src/hb-aat-layout-common.hh
index 539941d85f7..cede80c87f8 100644
--- a/src/hb-aat-layout-common.hh
+++ b/src/hb-aat-layout-common.hh
@@ -546,7 +546,7 @@ struct ClassTable
   DEFINE_SIZE_ARRAY (4, classArray);
 };
 
-struct MortTypes
+struct ObsoleteTypes
 {
   static const bool extended = false;
   typedef HBUINT16 HBUINT;
@@ -573,7 +573,7 @@ struct MortTypes
     return offsetToIndex (2 * offset, base, array);
   }
 };
-struct MorxTypes
+struct ExtendedTypes
 {
   static const bool extended = true;
   typedef HBUINT32 HBUINT;
diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 2b26d496a16..6469e5cf1f4 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -476,6 +476,8 @@ struct KerxSubTableFormat2
 template <typename KernSubTableHeader>
 struct KerxSubTableFormat4
 {
+  typedef ExtendedTypes Types;
+
   struct EntryData
   {
     HBUINT16	ankrActionIndex;/* Either 0xFFFF (for no action) or the index of
@@ -512,12 +514,12 @@ struct KerxSubTableFormat4
 	mark_set (false),
 	mark (0) {}
 
-    inline bool is_actionable (StateTableDriver<MorxTypes, EntryData> *driver HB_UNUSED,
+    inline bool is_actionable (StateTableDriver<Types, EntryData> *driver HB_UNUSED,
 			       const Entry<EntryData> *entry)
     {
       return entry->data.ankrActionIndex != 0xFFFF;
     }
-    inline bool transition (StateTableDriver<MorxTypes, EntryData> *driver,
+    inline bool transition (StateTableDriver<Types, EntryData> *driver,
 			    const Entry<EntryData> *entry)
     {
       hb_buffer_t *buffer = driver->buffer;
@@ -619,7 +621,7 @@ struct KerxSubTableFormat4
 
     driver_context_t dc (this, c);
 
-    StateTableDriver<MorxTypes, EntryData> driver (machine, c->buffer, c->font->face);
+    StateTableDriver<Types, EntryData> driver (machine, c->buffer, c->font->face);
     driver.drive (&dc);
 
     return_trace (true);
@@ -634,10 +636,9 @@ struct KerxSubTableFormat4
   }
 
   protected:
-  KernSubTableHeader	header;
-  StateTable<MorxTypes, EntryData>
-			machine;
-  HBUINT32		flags;
+  KernSubTableHeader		header;
+  StateTable<Types, EntryData>	machine;
+  HBUINT32			flags;
   public:
   DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 20);
 };
@@ -756,7 +757,7 @@ struct KerxSubTableFormat6
 
 struct KerxSubTableHeader
 {
-  typedef MorxTypes Types;
+  typedef ExtendedTypes Types;
 
   unsigned int tuple_count (void) const { return tupleCount; }
 
diff --git a/src/hb-aat-layout-morx-table.hh b/src/hb-aat-layout-morx-table.hh
index 51f14682c78..a364f7ac76b 100644
--- a/src/hb-aat-layout-morx-table.hh
+++ b/src/hb-aat-layout-morx-table.hh
@@ -1166,11 +1166,11 @@ struct mortmorx
   DEFINE_SIZE_MIN (8);
 };
 
-struct morx : mortmorx<MorxTypes>
+struct morx : mortmorx<ExtendedTypes>
 {
   static const hb_tag_t tableTag	= HB_AAT_TAG_morx;
 };
-struct mort : mortmorx<MortTypes>
+struct mort : mortmorx<ObsoleteTypes>
 {
   static const hb_tag_t tableTag	= HB_AAT_TAG_mort;
 };
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 6f1b46a93fd..3f771d2d57e 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -316,7 +316,7 @@ struct KernOT : KernTable<KernOT>
 
   struct SubTableHeader
   {
-    typedef AAT::MortTypes Types;
+    typedef AAT::ObsoleteTypes Types;
 
     unsigned int tuple_count (void) const { return 0; }
 
@@ -363,7 +363,7 @@ struct KernAAT : KernTable<KernAAT>
 
   struct SubTableHeader
   {
-    typedef AAT::MortTypes Types;
+    typedef AAT::ObsoleteTypes Types;
 
     unsigned int tuple_count (void) const { return 0; }
 

From e72e041c3cda164b2ffb02d770b35d0d70954818 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 11:56:36 -0500
Subject: [PATCH 31/66] [kerx] Rename

---
 src/hb-aat-layout-kerx-table.hh | 22 +++++++++++-----------
 1 file changed, 11 insertions(+), 11 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 6469e5cf1f4..9e1105decd8 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -789,7 +789,7 @@ struct KerxSubTableHeader
   DEFINE_SIZE_STATIC (12);
 };
 
-struct KerxTable
+struct KerxSubTable
 {
   friend struct kerx;
 
@@ -848,17 +848,17 @@ struct kerx
   inline void apply (hb_aat_apply_context_t *c) const
   {
     c->set_lookup_index (0);
-    const KerxTable *table = &firstTable;
+    const KerxSubTable *st = &firstTable;
     unsigned int count = tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
       bool reverse;
 
       if (HB_DIRECTION_IS_VERTICAL (c->buffer->props.direction) !=
-	  bool (table->u.header.coverage & table->u.header.Vertical))
+	  bool (st->u.header.coverage & st->u.header.Vertical))
 	goto skip;
 
-      reverse = bool (table->u.header.coverage & table->u.header.Backwards) !=
+      reverse = bool (st->u.header.coverage & st->u.header.Backwards) !=
 		HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction);
 
       if (!c->buffer->message (c->font, ""start kerx subtable %d"", c->lookup_index))
@@ -867,13 +867,13 @@ struct kerx
       if (reverse)
 	c->buffer->reverse ();
 
-      c->sanitizer.set_object (*table);
+      c->sanitizer.set_object (*st);
 
       /* XXX Reverse-kern is not working yet...
        * hb_kern_machine_t would need to know that it's reverse-kerning.
        * Or better yet, make it work in reverse as well, so we don't have
        * to reverse and reverse back? */
-      table->dispatch (c);
+      st->dispatch (c);
 
       if (reverse)
 	c->buffer->reverse ();
@@ -881,7 +881,7 @@ struct kerx
       (void) c->buffer->message (c->font, ""end kerx subtable %d"", c->lookup_index);
 
     skip:
-      table = &StructAfter<KerxTable> (*table);
+      st = &StructAfter<KerxSubTable> (*st);
       c->set_lookup_index (c->lookup_index + 1);
     }
   }
@@ -893,13 +893,13 @@ struct kerx
 	!tableCount.sanitize (c))
       return_trace (false);
 
-    const KerxTable *table = &firstTable;
+    const KerxSubTable *st = &firstTable;
     unsigned int count = tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
-      if (!table->sanitize (c))
+      if (!st->sanitize (c))
 	return_trace (false);
-      table = &StructAfter<KerxTable> (*table);
+      st = &StructAfter<KerxSubTable> (*st);
     }
 
     return_trace (true);
@@ -911,7 +911,7 @@ struct kerx
   HBUINT16	unused;		/* Set to 0. */
   HBUINT32	tableCount;	/* The number of subtables included in the extended kerning
 				 * table. */
-  KerxTable	firstTable;	/* Subtables. */
+  KerxSubTable	firstTable;	/* Subtables. */
 /*subtableGlyphCoverageArray*/	/* Only if version >= 3. We don't use. */
 
   public:

From d5c0ca210fef315fd039e5b1825a865f36606a3f Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:08:44 -0500
Subject: [PATCH 32/66] [aat] Minor

---
 src/hb-aat-layout-common.hh | 16 ++++++++++------
 src/hb-ot-kern-table.hh     |  4 ++--
 2 files changed, 12 insertions(+), 8 deletions(-)

diff --git a/src/hb-aat-layout-common.hh b/src/hb-aat-layout-common.hh
index cede80c87f8..34c61e93cf3 100644
--- a/src/hb-aat-layout-common.hh
+++ b/src/hb-aat-layout-common.hh
@@ -436,7 +436,7 @@ struct StateTable
   inline unsigned int get_class (hb_codepoint_t glyph_id, unsigned int num_glyphs) const
   {
     if (unlikely (glyph_id == DELETED_GLYPH)) return CLASS_DELETED_GLYPH;
-    return (this+classTable).get_class (glyph_id, num_glyphs);
+    return (this+classTable).get_class (glyph_id, num_glyphs, 1);
   }
 
   inline const Entry<Extra> *get_entries () const
@@ -528,7 +528,7 @@ struct StateTable
 
 struct ClassTable
 {
-  inline unsigned int get_class (hb_codepoint_t glyph_id, unsigned int outOfRange=0) const
+  inline unsigned int get_class (hb_codepoint_t glyph_id, unsigned int outOfRange) const
   {
     unsigned int i = glyph_id - firstGlyph;
     return i >= classArray.len ? outOfRange : classArray.arrayZ[i];
@@ -553,9 +553,11 @@ struct ObsoleteTypes
   typedef HBUINT8 HBUSHORT;
   struct ClassType : ClassTable
   {
-    inline unsigned int get_class (hb_codepoint_t glyph_id, unsigned int num_glyphs HB_UNUSED) const
+    inline unsigned int get_class (hb_codepoint_t glyph_id,
+				   unsigned int num_glyphs HB_UNUSED,
+				   unsigned int outOfRange) const
     {
-      return ClassTable::get_class (glyph_id, 1);
+      return ClassTable::get_class (glyph_id, outOfRange);
     }
   };
   template <typename T>
@@ -580,10 +582,12 @@ struct ExtendedTypes
   typedef HBUINT16 HBUSHORT;
   struct ClassType : Lookup<HBUINT16>
   {
-    inline unsigned int get_class (hb_codepoint_t glyph_id, unsigned int num_glyphs) const
+    inline unsigned int get_class (hb_codepoint_t glyph_id,
+				   unsigned int num_glyphs,
+				   unsigned int outOfRange) const
     {
       const HBUINT16 *v = get_value (glyph_id, num_glyphs);
-      return v ? *v : 1;
+      return v ? *v : outOfRange;
     }
   };
   template <typename T>
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 3f771d2d57e..870d8001312 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -51,8 +51,8 @@ struct KernSubTableFormat2
      * different ClassTable.  OT's has 16bit entries, while AAT has 8bit entries.
      * I've not seen any in the wild. */
     return 0;
-    unsigned int l = (this+leftClassTable).get_class (left);
-    unsigned int r = (this+rightClassTable).get_class (right);
+    unsigned int l = (this+leftClassTable).get_class (left, 0);
+    unsigned int r = (this+rightClassTable).get_class (right, 0);
     unsigned int offset = l + r;
     const FWORD *v = &StructAtOffset<FWORD> (&(this+array), offset);
     if (unlikely (!v->sanitize (&c->sanitizer))) return 0;

From 8faec4e33486616fdc0d690ad80d4a38a73c8182 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:16:38 -0500
Subject: [PATCH 33/66] [kerx] Towards merging Format2

---
 src/hb-aat-layout-kerx-table.hh | 17 ++++++++++-------
 1 file changed, 10 insertions(+), 7 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 9e1105decd8..41841255747 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -406,12 +406,15 @@ struct KerxSubTableFormat1
 template <typename KernSubTableHeader>
 struct KerxSubTableFormat2
 {
+  typedef typename KernSubTableHeader::Types Types;
+  typedef typename Types::HBUINT HBUINT;
+
   inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right,
 			  hb_aat_apply_context_t *c) const
   {
     unsigned int num_glyphs = c->sanitizer.get_num_glyphs ();
-    unsigned int l = (this+leftClassTable).get_value_or_null (left, num_glyphs);
-    unsigned int r = (this+rightClassTable).get_value_or_null (right, num_glyphs);
+    unsigned int l = (this+leftClassTable).get_class (left, num_glyphs, 0);
+    unsigned int r = (this+rightClassTable).get_class (right, num_glyphs, 0);
     unsigned int offset = l + r;
     const FWORD *v = &StructAtOffset<FWORD> (&(this+array), offset);
     if (unlikely (!v->sanitize (&c->sanitizer))) return 0;
@@ -459,18 +462,18 @@ struct KerxSubTableFormat2
 
   protected:
   KernSubTableHeader	header;
-  HBUINT32		rowWidth;	/* The width, in bytes, of a row in the table. */
-  LOffsetTo<Lookup<HBUINT16>, false>
+  HBUINT		rowWidth;	/* The width, in bytes, of a row in the table. */
+  OffsetTo<typename Types::ClassType, HBUINT, false>
 			leftClassTable;	/* Offset from beginning of this subtable to
 					 * left-hand class table. */
-  LOffsetTo<Lookup<HBUINT16>, false>
+  OffsetTo<typename Types::ClassType, HBUINT, false>
 			rightClassTable;/* Offset from beginning of this subtable to
 					 * right-hand class table. */
-  LOffsetTo<UnsizedArrayOf<FWORD>, false>
+  OffsetTo<UnsizedArrayOf<FWORD>, HBUINT, false>
 			 array;		/* Offset from beginning of this subtable to
 					 * the start of the kerning array. */
   public:
-  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 16);
+  DEFINE_SIZE_STATIC (KernSubTableHeader::static_size + 4 * sizeof (HBUINT));
 };
 
 template <typename KernSubTableHeader>

From 1a5ef8490034f4bd8965a3c71d34a5930ebe11b7 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:19:52 -0500
Subject: [PATCH 34/66] [kern/kerx] Share Format2

This, enables Format2 for kern table, which was disabled before.
---
 src/hb-aat-layout-kerx-table.hh |  6 +++
 src/hb-ot-kern-table.hh         | 73 +--------------------------------
 2 files changed, 7 insertions(+), 72 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 41841255747..d55d5f7a50f 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -460,6 +460,12 @@ struct KerxSubTableFormat2
 			  c->check_range (this, array)));
   }
 
+  /* Note:
+   * OT kern table specifies ClassTable as having 16-bit entries, whereas
+   * AAT kern table specifies them as having 8bit entries.
+   * I've not seen any fonts with this format in kern table.
+   * We follow AAT. */
+
   protected:
   KernSubTableHeader	header;
   HBUINT		rowWidth;	/* The width, in bytes, of a row in the table. */
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 870d8001312..27829d84f2c 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -41,77 +41,6 @@
 namespace OT {
 
 
-template <typename KernSubTableHeader>
-struct KernSubTableFormat2
-{
-  inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right,
-			  AAT::hb_aat_apply_context_t *c) const
-  {
-    /* Disabled until we find a font to test this.  Note that OT vs AAT specify
-     * different ClassTable.  OT's has 16bit entries, while AAT has 8bit entries.
-     * I've not seen any in the wild. */
-    return 0;
-    unsigned int l = (this+leftClassTable).get_class (left, 0);
-    unsigned int r = (this+rightClassTable).get_class (right, 0);
-    unsigned int offset = l + r;
-    const FWORD *v = &StructAtOffset<FWORD> (&(this+array), offset);
-    if (unlikely (!v->sanitize (&c->sanitizer))) return 0;
-    return *v;
-  }
-
-  inline bool apply (AAT::hb_aat_apply_context_t *c) const
-  {
-    TRACE_APPLY (this);
-
-    if (!c->plan->requested_kerning)
-      return false;
-
-    if (header.coverage & header.CrossStream)
-      return false;
-
-    accelerator_t accel (*this, c);
-    hb_kern_machine_t<accelerator_t> machine (accel);
-    machine.kern (c->font, c->buffer, c->plan->kern_mask);
-
-    return_trace (true);
-  }
-
-  struct accelerator_t
-  {
-    const KernSubTableFormat2 &table;
-    AAT::hb_aat_apply_context_t *c;
-
-    inline accelerator_t (const KernSubTableFormat2 &table_,
-			  AAT::hb_aat_apply_context_t *c_) :
-			    table (table_), c (c_) {}
-
-    inline int get_kerning (hb_codepoint_t left, hb_codepoint_t right) const
-    { return table.get_kerning (left, right, c); }
-  };
-
-  inline bool sanitize (hb_sanitize_context_t *c) const
-  {
-    TRACE_SANITIZE (this);
-    return_trace (true); /* Disabled.  See above. */
-    return_trace (c->check_struct (this) &&
-		  leftClassTable.sanitize (c, this) &&
-		  rightClassTable.sanitize (c, this) &&
-		  array.sanitize (c, this));
-  }
-
-  protected:
-  KernSubTableHeader		header;
-  HBUINT16			rowWidth;	/* The width, in bytes, of a row in the table. */
-  OffsetTo<AAT::ClassTable>	leftClassTable;	/* Offset from beginning of this subtable to
-						 * left-hand class table. */
-  OffsetTo<AAT::ClassTable>	rightClassTable;/* Offset from beginning of this subtable to
-						 * right-hand class table. */
-  OffsetTo<FWORD>		array;		/* Offset from beginning of this subtable to
-						 * the start of the kerning array. */
-  public:
-  DEFINE_SIZE_MIN (KernSubTableHeader::static_size + 8);
-};
-
 template <typename KernSubTableHeader>
 struct KernSubTableFormat3
 {
@@ -221,7 +150,7 @@ struct KernSubTable
   KernSubTableHeader				header;
   AAT::KerxSubTableFormat0<KernSubTableHeader>	format0;
   AAT::KerxSubTableFormat1<KernSubTableHeader>	format1;
-  KernSubTableFormat2<KernSubTableHeader>	format2;
+  AAT::KerxSubTableFormat2<KernSubTableHeader>	format2;
   KernSubTableFormat3<KernSubTableHeader>	format3;
   } u;
   public:

From 330508497d301c0ba5d5fb5d0900b62c191aabb5 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:27:44 -0500
Subject: [PATCH 35/66] [kern/kerx] Minor

---
 src/hb-aat-layout-kerx-table.hh | 2 +-
 src/hb-ot-kern-table.hh         | 5 +++--
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index d55d5f7a50f..a395e76abd8 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -768,7 +768,7 @@ struct KerxSubTableHeader
 {
   typedef ExtendedTypes Types;
 
-  unsigned int tuple_count (void) const { return tupleCount; }
+  inline unsigned int tuple_count (void) const { return tupleCount; }
 
   enum Coverage
   {
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 27829d84f2c..f8b1aa7a509 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -247,7 +247,8 @@ struct KernOT : KernTable<KernOT>
   {
     typedef AAT::ObsoleteTypes Types;
 
-    unsigned int tuple_count (void) const { return 0; }
+    inline unsigned int tuple_count (void) const { return 0; }
+
 
     enum Coverage
     {
@@ -294,7 +295,7 @@ struct KernAAT : KernTable<KernAAT>
   {
     typedef AAT::ObsoleteTypes Types;
 
-    unsigned int tuple_count (void) const { return 0; }
+    inline unsigned int tuple_count (void) const { return 0; }
 
     enum Coverage
     {

From f5e0a63a22f91720a997f5070b84e982e57de661 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:32:39 -0500
Subject: [PATCH 36/66] [kern/kerx] Towards sharing KernTable

---
 src/hb-aat-layout-kerx-table.hh |  4 ++--
 src/hb-ot-kern-table.hh         | 19 +++++++------------
 2 files changed, 9 insertions(+), 14 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index a395e76abd8..9a221bc5a43 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -769,6 +769,7 @@ struct KerxSubTableHeader
   typedef ExtendedTypes Types;
 
   inline unsigned int tuple_count (void) const { return tupleCount; }
+  inline bool is_horizontal (void) const { return !(coverage & Vertical); }
 
   enum Coverage
   {
@@ -863,8 +864,7 @@ struct kerx
     {
       bool reverse;
 
-      if (HB_DIRECTION_IS_VERTICAL (c->buffer->props.direction) !=
-	  bool (st->u.header.coverage & st->u.header.Vertical))
+      if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) != st->u.header.is_horizontal ())
 	goto skip;
 
       reverse = bool (st->u.header.coverage & st->u.header.Backwards) !=
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index f8b1aa7a509..89da9e36fb7 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -173,9 +173,8 @@ struct KernTable
     unsigned int count = thiz()->nTables;
     for (unsigned int i = 0; i < count; i++)
     {
-      if ((st->u.header.coverage &
-	   (st->u.header.Variation | st->u.header.CrossStream | st->u.header.Direction)) !=
-	  st->u.header.DirectionHorizontal)
+      if ((st->u.header.coverage & (st->u.header.Variation | st->u.header.CrossStream)) ||
+	  !st->u.header.is_horizontal ())
         continue;
       v += st->get_kerning (left, right);
       st = &StructAfter<SubTable> (*st);
@@ -196,8 +195,7 @@ struct KernTable
       if (st->u.header.coverage & st->u.header.Variation)
         goto skip;
 
-      if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) !=
-	  ((st->u.header.coverage & st->u.header.Direction) == st->u.header.DirectionHorizontal))
+      if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) != st->u.header.is_horizontal ())
 	goto skip;
 
       if (!c->buffer->message (c->font, ""start kern subtable %d"", c->lookup_index))
@@ -248,18 +246,16 @@ struct KernOT : KernTable<KernOT>
     typedef AAT::ObsoleteTypes Types;
 
     inline unsigned int tuple_count (void) const { return 0; }
-
+    inline bool is_horizontal (void) const { return (coverage & Horizontal); }
 
     enum Coverage
     {
-      Direction		= 0x01u,
+      Horizontal	= 0x01u,
       Minimum		= 0x02u,
       CrossStream	= 0x04u,
       Override		= 0x08u,
 
       Variation		= 0x00u, /* Not supported. */
-
-      DirectionHorizontal= 0x01u
     };
 
     inline bool sanitize (hb_sanitize_context_t *c) const
@@ -296,14 +292,13 @@ struct KernAAT : KernTable<KernAAT>
     typedef AAT::ObsoleteTypes Types;
 
     inline unsigned int tuple_count (void) const { return 0; }
+    inline bool is_horizontal (void) const { return !(coverage & Vertical); }
 
     enum Coverage
     {
-      Direction		= 0x80u,
+      Vertical		= 0x80u,
       CrossStream	= 0x40u,
       Variation		= 0x20u,
-
-      DirectionHorizontal= 0x00u
     };
 
     inline bool sanitize (hb_sanitize_context_t *c) const

From f8c3df7d4a685bb86a1c15a5ef95485e8ef30305 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:48:06 -0500
Subject: [PATCH 37/66] [kern/kerx] Minor

---
 src/hb-aat-layout-kerx-table.hh |  5 +++--
 src/hb-ot-kern-table.hh         | 19 ++++++++++---------
 2 files changed, 13 insertions(+), 11 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 9a221bc5a43..63638026067 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -852,6 +852,7 @@ public:
 struct kerx
 {
   static const hb_tag_t tableTag = HB_AAT_TAG_kerx;
+  static const uint16_t minVersion = 2;
 
   inline bool has_data (void) const { return version != 0; }
 
@@ -898,8 +899,7 @@ struct kerx
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
-    if (!version.sanitize (c) || version < 2 ||
-	!tableCount.sanitize (c))
+    if (!version.sanitize (c) || version < minVersion || !tableCount.sanitize (c))
       return_trace (false);
 
     const KerxSubTable *st = &firstTable;
@@ -921,6 +921,7 @@ struct kerx
   HBUINT32	tableCount;	/* The number of subtables included in the extended kerning
 				 * table. */
   KerxSubTable	firstTable;	/* Subtables. */
+  UnsizedArrayOf<HBUINT8>	dataZ;
 /*subtableGlyphCoverageArray*/	/* Only if version >= 3. We don't use. */
 
   public:
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 89da9e36fb7..538451195f8 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -170,7 +170,7 @@ struct KernTable
 
     int v = 0;
     const SubTable *st = CastP<SubTable> (&thiz()->dataZ);
-    unsigned int count = thiz()->nTables;
+    unsigned int count = thiz()->tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
       if ((st->u.header.coverage & (st->u.header.Variation | st->u.header.CrossStream)) ||
@@ -188,7 +188,7 @@ struct KernTable
 
     c->set_lookup_index (0);
     const SubTable *st = CastP<SubTable> (&thiz()->dataZ);
-    unsigned int count = thiz()->nTables;
+    unsigned int count = thiz()->tableCount;
     st = CastP<SubTable> (&thiz()->dataZ);
     for (unsigned int i = 0; i < count; i++)
     {
@@ -216,14 +216,15 @@ struct KernTable
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
-    if (unlikely (!c->check_struct (thiz()) ||
-		  thiz()->version != T::VERSION))
+    if (unlikely (!thiz()->version.sanitize (c) ||
+		  thiz()->version < T::minVersion ||
+		  !thiz()->tableCount.sanitize (c)))
       return_trace (false);
 
     typedef KernSubTable<typename T::SubTableHeader> SubTable;
 
     const SubTable *st = CastP<SubTable> (&thiz()->dataZ);
-    unsigned int count = thiz()->nTables;
+    unsigned int count = thiz()->tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
       if (unlikely (!st->sanitize (c)))
@@ -239,7 +240,7 @@ struct KernOT : KernTable<KernOT>
 {
   friend struct KernTable<KernOT>;
 
-  static const uint16_t VERSION = 0x0000u;
+  static const uint16_t minVersion = 0;
 
   struct SubTableHeader
   {
@@ -275,7 +276,7 @@ struct KernOT : KernTable<KernOT>
 
   protected:
   HBUINT16			version;	/* Version--0x0000u */
-  HBUINT16			nTables;	/* Number of subtables in the kerning table. */
+  HBUINT16			tableCount;	/* Number of subtables in the kerning table. */
   UnsizedArrayOf<HBUINT8>	dataZ;
   public:
   DEFINE_SIZE_ARRAY (4, dataZ);
@@ -285,7 +286,7 @@ struct KernAAT : KernTable<KernAAT>
 {
   friend struct KernTable<KernAAT>;
 
-  static const uint32_t VERSION = 0x00010000u;
+  static const uint32_t minVersion = 0x00010000u;
 
   struct SubTableHeader
   {
@@ -320,7 +321,7 @@ struct KernAAT : KernTable<KernAAT>
 
   protected:
   HBUINT32			version;	/* Version--0x00010000u */
-  HBUINT32			nTables;	/* Number of subtables in the kerning table. */
+  HBUINT32			tableCount;	/* Number of subtables in the kerning table. */
   UnsizedArrayOf<HBUINT8>	dataZ;
   public:
   DEFINE_SIZE_ARRAY (8, dataZ);

From 8e9f6cd0fddd572e048487aae3141d3dbb1b99cb Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:49:20 -0500
Subject: [PATCH 38/66] [kerx] More minor

---
 src/hb-aat-layout-kerx-table.hh | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 63638026067..2bbd11aacf9 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -859,7 +859,7 @@ struct kerx
   inline void apply (hb_aat_apply_context_t *c) const
   {
     c->set_lookup_index (0);
-    const KerxSubTable *st = &firstTable;
+    const KerxSubTable *st = &firstSubTable;
     unsigned int count = tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
@@ -902,7 +902,7 @@ struct kerx
     if (!version.sanitize (c) || version < minVersion || !tableCount.sanitize (c))
       return_trace (false);
 
-    const KerxSubTable *st = &firstTable;
+    const KerxSubTable *st = &firstSubTable;
     unsigned int count = tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
@@ -920,8 +920,7 @@ struct kerx
   HBUINT16	unused;		/* Set to 0. */
   HBUINT32	tableCount;	/* The number of subtables included in the extended kerning
 				 * table. */
-  KerxSubTable	firstTable;	/* Subtables. */
-  UnsizedArrayOf<HBUINT8>	dataZ;
+  KerxSubTable	firstSubTable;	/* Subtables. */
 /*subtableGlyphCoverageArray*/	/* Only if version >= 3. We don't use. */
 
   public:

From 1ff300464a1075b8cd5311970afbbcf4bb3b6f3d Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:51:49 -0500
Subject: [PATCH 39/66] [kern] Massage more

---
 src/hb-ot-kern-table.hh | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 538451195f8..461a2448a25 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -169,7 +169,7 @@ struct KernTable
     typedef KernSubTable<typename T::SubTableHeader> SubTable;
 
     int v = 0;
-    const SubTable *st = CastP<SubTable> (&thiz()->dataZ);
+    const SubTable *st = &thiz()->firstSubTable;
     unsigned int count = thiz()->tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
@@ -187,9 +187,8 @@ struct KernTable
     typedef KernSubTable<typename T::SubTableHeader> SubTable;
 
     c->set_lookup_index (0);
-    const SubTable *st = CastP<SubTable> (&thiz()->dataZ);
+    const SubTable *st = &thiz()->firstSubTable;
     unsigned int count = thiz()->tableCount;
-    st = CastP<SubTable> (&thiz()->dataZ);
     for (unsigned int i = 0; i < count; i++)
     {
       if (st->u.header.coverage & st->u.header.Variation)
@@ -223,7 +222,7 @@ struct KernTable
 
     typedef KernSubTable<typename T::SubTableHeader> SubTable;
 
-    const SubTable *st = CastP<SubTable> (&thiz()->dataZ);
+    const SubTable *st = &thiz()->firstSubTable;
     unsigned int count = thiz()->tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
@@ -277,9 +276,9 @@ struct KernOT : KernTable<KernOT>
   protected:
   HBUINT16			version;	/* Version--0x0000u */
   HBUINT16			tableCount;	/* Number of subtables in the kerning table. */
-  UnsizedArrayOf<HBUINT8>	dataZ;
+  KernSubTable<SubTableHeader>	firstSubTable;	/* Subtables. */
   public:
-  DEFINE_SIZE_ARRAY (4, dataZ);
+  DEFINE_SIZE_MIN (4);
 };
 
 struct KernAAT : KernTable<KernAAT>
@@ -322,9 +321,9 @@ struct KernAAT : KernTable<KernAAT>
   protected:
   HBUINT32			version;	/* Version--0x00010000u */
   HBUINT32			tableCount;	/* Number of subtables in the kerning table. */
-  UnsizedArrayOf<HBUINT8>	dataZ;
+  KernSubTable<SubTableHeader>	firstSubTable;	/* Subtables. */
   public:
-  DEFINE_SIZE_ARRAY (8, dataZ);
+  DEFINE_SIZE_MIN (8);
 };
 
 struct kern

From 30af5b4a4c2071599dc87bc092a7329befcc45cc Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 12:57:10 -0500
Subject: [PATCH 40/66] [kern] Move code

---
 src/hb-ot-kern-table.hh | 118 +++++++++++++++++++++-------------------
 1 file changed, 62 insertions(+), 56 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 461a2448a25..5046a0da5e0 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -235,43 +235,46 @@ struct KernTable
   }
 };
 
-struct KernOT : KernTable<KernOT>
+
+struct KernOTSubTableHeader
 {
-  friend struct KernTable<KernOT>;
+  typedef AAT::ObsoleteTypes Types;
 
-  static const uint16_t minVersion = 0;
+  inline unsigned int tuple_count (void) const { return 0; }
+  inline bool is_horizontal (void) const { return (coverage & Horizontal); }
 
-  struct SubTableHeader
+  enum Coverage
   {
-    typedef AAT::ObsoleteTypes Types;
+    Horizontal	= 0x01u,
+    Minimum		= 0x02u,
+    CrossStream	= 0x04u,
+    Override		= 0x08u,
 
-    inline unsigned int tuple_count (void) const { return 0; }
-    inline bool is_horizontal (void) const { return (coverage & Horizontal); }
+    Variation		= 0x00u, /* Not supported. */
+  };
 
-    enum Coverage
-    {
-      Horizontal	= 0x01u,
-      Minimum		= 0x02u,
-      CrossStream	= 0x04u,
-      Override		= 0x08u,
+  inline bool sanitize (hb_sanitize_context_t *c) const
+  {
+    TRACE_SANITIZE (this);
+    return_trace (c->check_struct (this));
+  }
 
-      Variation		= 0x00u, /* Not supported. */
-    };
+  public:
+  HBUINT16	versionZ;	/* Unused. */
+  HBUINT16	length;		/* Length of the subtable (including this header). */
+  HBUINT8	format;		/* Subtable format. */
+  HBUINT8	coverage;	/* Coverage bits. */
+  public:
+  DEFINE_SIZE_STATIC (6);
+};
 
-    inline bool sanitize (hb_sanitize_context_t *c) const
-    {
-      TRACE_SANITIZE (this);
-      return_trace (c->check_struct (this));
-    }
+struct KernOT : KernTable<KernOT>
+{
+  friend struct KernTable<KernOT>;
 
-    public:
-    HBUINT16	versionZ;	/* Unused. */
-    HBUINT16	length;		/* Length of the subtable (including this header). */
-    HBUINT8	format;		/* Subtable format. */
-    HBUINT8	coverage;	/* Coverage bits. */
-    public:
-    DEFINE_SIZE_STATIC (6);
-  };
+  typedef KernOTSubTableHeader SubTableHeader;
+
+  static const uint16_t minVersion = 0;
 
   protected:
   HBUINT16			version;	/* Version--0x0000u */
@@ -281,42 +284,45 @@ struct KernOT : KernTable<KernOT>
   DEFINE_SIZE_MIN (4);
 };
 
-struct KernAAT : KernTable<KernAAT>
+
+struct KernAATSubTableHeader
 {
-  friend struct KernTable<KernAAT>;
+  typedef AAT::ObsoleteTypes Types;
 
-  static const uint32_t minVersion = 0x00010000u;
+  inline unsigned int tuple_count (void) const { return 0; }
+  inline bool is_horizontal (void) const { return !(coverage & Vertical); }
 
-  struct SubTableHeader
+  enum Coverage
   {
-    typedef AAT::ObsoleteTypes Types;
+    Vertical		= 0x80u,
+    CrossStream	= 0x40u,
+    Variation		= 0x20u,
+  };
 
-    inline unsigned int tuple_count (void) const { return 0; }
-    inline bool is_horizontal (void) const { return !(coverage & Vertical); }
+  inline bool sanitize (hb_sanitize_context_t *c) const
+  {
+    TRACE_SANITIZE (this);
+    return_trace (c->check_struct (this));
+  }
 
-    enum Coverage
-    {
-      Vertical		= 0x80u,
-      CrossStream	= 0x40u,
-      Variation		= 0x20u,
-    };
+  public:
+  HBUINT32	length;		/* Length of the subtable (including this header). */
+  HBUINT8	coverage;	/* Coverage bits. */
+  HBUINT8	format;		/* Subtable format. */
+  HBUINT16	tupleIndex;	/* The tuple index (used for variations fonts).
+			       * This value specifies which tuple this subtable covers.
+			       * Note: We don't implement. */
+  public:
+  DEFINE_SIZE_STATIC (8);
+};
 
-    inline bool sanitize (hb_sanitize_context_t *c) const
-    {
-      TRACE_SANITIZE (this);
-      return_trace (c->check_struct (this));
-    }
+struct KernAAT : KernTable<KernAAT>
+{
+  friend struct KernTable<KernAAT>;
 
-    public:
-    HBUINT32	length;		/* Length of the subtable (including this header). */
-    HBUINT8	coverage;	/* Coverage bits. */
-    HBUINT8	format;		/* Subtable format. */
-    HBUINT16	tupleIndex;	/* The tuple index (used for variations fonts).
-				 * This value specifies which tuple this subtable covers.
-				 * Note: We don't implement. */
-    public:
-    DEFINE_SIZE_STATIC (8);
-  };
+  typedef KernAATSubTableHeader SubTableHeader;
+
+  static const uint32_t minVersion = 0x00010000u;
 
   protected:
   HBUINT32			version;	/* Version--0x00010000u */

From ab57bcae0fd4505c80bb4ccdef6838bb2805ce79 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 13:04:21 -0500
Subject: [PATCH 41/66] [kern] Minor

---
 src/hb-ot-kern-table.hh | 8 +++++---
 1 file changed, 5 insertions(+), 3 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 5046a0da5e0..693c4f29f7d 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -166,7 +166,7 @@ struct KernTable
 
   inline int get_h_kerning (hb_codepoint_t left, hb_codepoint_t right) const
   {
-    typedef KernSubTable<typename T::SubTableHeader> SubTable;
+    typedef typename T::SubTable SubTable;
 
     int v = 0;
     const SubTable *st = &thiz()->firstSubTable;
@@ -184,7 +184,7 @@ struct KernTable
 
   inline void apply (AAT::hb_aat_apply_context_t *c) const
   {
-    typedef KernSubTable<typename T::SubTableHeader> SubTable;
+    typedef typename T::SubTable SubTable;
 
     c->set_lookup_index (0);
     const SubTable *st = &thiz()->firstSubTable;
@@ -220,7 +220,7 @@ struct KernTable
 		  !thiz()->tableCount.sanitize (c)))
       return_trace (false);
 
-    typedef KernSubTable<typename T::SubTableHeader> SubTable;
+    typedef typename T::SubTable SubTable;
 
     const SubTable *st = &thiz()->firstSubTable;
     unsigned int count = thiz()->tableCount;
@@ -273,6 +273,7 @@ struct KernOT : KernTable<KernOT>
   friend struct KernTable<KernOT>;
 
   typedef KernOTSubTableHeader SubTableHeader;
+  typedef KernSubTable<SubTableHeader> SubTable;
 
   static const uint16_t minVersion = 0;
 
@@ -321,6 +322,7 @@ struct KernAAT : KernTable<KernAAT>
   friend struct KernTable<KernAAT>;
 
   typedef KernAATSubTableHeader SubTableHeader;
+  typedef KernSubTable<SubTableHeader> SubTable;
 
   static const uint32_t minVersion = 0x00010000u;
 

From 89ec095979bde94bd203ed2c394f6e40629e9e78 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 13:10:05 -0500
Subject: [PATCH 42/66] [kern] Disable Format1 and Format3 for OT-style tables

---
 src/hb-ot-kern-table.hh | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 693c4f29f7d..0102bb2c906 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -128,9 +128,9 @@ struct KernSubTable
     TRACE_DISPATCH (this, subtable_type);
     switch (subtable_type) {
     case 0:	return_trace (c->dispatch (u.format0));
-    case 1:	return_trace (c->dispatch (u.format1));
+    case 1:	return_trace (u.header.apple ? c->dispatch (u.format1) : c->default_return_value ());
     case 2:	return_trace (c->dispatch (u.format2));
-    case 3:	return_trace (c->dispatch (u.format3));
+    case 3:	return_trace (u.header.apple ? c->dispatch (u.format3) : c->default_return_value ());
     default:	return_trace (c->default_return_value ());
     }
   }
@@ -238,6 +238,7 @@ struct KernTable
 
 struct KernOTSubTableHeader
 {
+  static const bool apple = false;
   typedef AAT::ObsoleteTypes Types;
 
   inline unsigned int tuple_count (void) const { return 0; }
@@ -288,6 +289,7 @@ struct KernOT : KernTable<KernOT>
 
 struct KernAATSubTableHeader
 {
+  static const bool apple = true;
   typedef AAT::ObsoleteTypes Types;
 
   inline unsigned int tuple_count (void) const { return 0; }

From db6e658e8c0c4953c2f026f6a67a5d2fb4bdc204 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 13:33:23 -0500
Subject: [PATCH 43/66] [kern/kerx] More towards sharing KernTable

---
 src/hb-aat-layout-kerx-table.hh | 48 +++++++++++++++------------
 src/hb-ot-kern-table.hh         | 59 +++++++++++++++++++++++----------
 2 files changed, 67 insertions(+), 40 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 2bbd11aacf9..3a76f0fa44c 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -773,16 +773,16 @@ struct KerxSubTableHeader
 
   enum Coverage
   {
-    Vertical		= 0x80000000,	/* Set if table has vertical kerning values. */
-    CrossStream		= 0x40000000,	/* Set if table has cross-stream kerning values. */
-    Variation		= 0x20000000,	/* Set if table has variation kerning values. */
-    Backwards		= 0x10000000,	/* If clear, process the glyphs forwards, that
-					 * is, from first to last in the glyph stream.
-					 * If we, process them from last to first.
-					 * This flag only applies to state-table based
-					 * 'kerx' subtables (types 1 and 4). */
-    Reserved		= 0x0FFFFF00,	/* Reserved, set to zero. */
-    SubtableType	= 0x000000FF,	/* Subtable type. */
+    Vertical	= 0x80000000u,	/* Set if table has vertical kerning values. */
+    CrossStream	= 0x40000000u,	/* Set if table has cross-stream kerning values. */
+    Variation	= 0x20000000u,	/* Set if table has variation kerning values. */
+    Backwards	= 0x10000000u,	/* If clear, process the glyphs forwards, that
+				 * is, from first to last in the glyph stream.
+				 * If we, process them from last to first.
+				 * This flag only applies to state-table based
+				 * 'kerx' subtables (types 1 and 4). */
+    Reserved	= 0x0FFFFF00u,	/* Reserved, set to zero. */
+    SubtableType= 0x000000FFu,	/* Subtable type. */
   };
 
   inline bool sanitize (hb_sanitize_context_t *c) const
@@ -854,12 +854,16 @@ struct kerx
   static const hb_tag_t tableTag = HB_AAT_TAG_kerx;
   static const uint16_t minVersion = 2;
 
+  typedef KerxSubTableHeader SubTableHeader;
+  typedef SubTableHeader::Types Types;
+  typedef KerxSubTable SubTable;
+
   inline bool has_data (void) const { return version != 0; }
 
   inline void apply (hb_aat_apply_context_t *c) const
   {
     c->set_lookup_index (0);
-    const KerxSubTable *st = &firstSubTable;
+    const SubTable *st = &firstSubTable;
     unsigned int count = tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
@@ -871,7 +875,7 @@ struct kerx
       reverse = bool (st->u.header.coverage & st->u.header.Backwards) !=
 		HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction);
 
-      if (!c->buffer->message (c->font, ""start kerx subtable %d"", c->lookup_index))
+      if (!c->buffer->message (c->font, ""start %c%c%c%c subtable %d"", HB_UNTAG (tableTag), c->lookup_index))
 	goto skip;
 
       if (reverse)
@@ -879,19 +883,17 @@ struct kerx
 
       c->sanitizer.set_object (*st);
 
-      /* XXX Reverse-kern is not working yet...
-       * hb_kern_machine_t would need to know that it's reverse-kerning.
-       * Or better yet, make it work in reverse as well, so we don't have
-       * to reverse and reverse back? */
+      /* XXX Reverse-kern is probably not working yet...
+       * hb_kern_machine_t would need to know that it's reverse-kerning. */
       st->dispatch (c);
 
       if (reverse)
 	c->buffer->reverse ();
 
-      (void) c->buffer->message (c->font, ""end kerx subtable %d"", c->lookup_index);
+      (void) c->buffer->message (c->font, ""end %c%c%c%c subtable %d"", HB_UNTAG (tableTag), c->lookup_index);
 
     skip:
-      st = &StructAfter<KerxSubTable> (*st);
+      st = &StructAfter<SubTable> (*st);
       c->set_lookup_index (c->lookup_index + 1);
     }
   }
@@ -899,16 +901,18 @@ struct kerx
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
-    if (!version.sanitize (c) || version < minVersion || !tableCount.sanitize (c))
+    if (unlikely (!version.sanitize (c) ||
+		  version < minVersion ||
+		  !tableCount.sanitize (c)))
       return_trace (false);
 
-    const KerxSubTable *st = &firstSubTable;
+    const SubTable *st = &firstSubTable;
     unsigned int count = tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
       if (!st->sanitize (c))
 	return_trace (false);
-      st = &StructAfter<KerxSubTable> (*st);
+      st = &StructAfter<SubTable> (*st);
     }
 
     return_trace (true);
@@ -920,7 +924,7 @@ struct kerx
   HBUINT16	unused;		/* Set to 0. */
   HBUINT32	tableCount;	/* The number of subtables included in the extended kerning
 				 * table. */
-  KerxSubTable	firstSubTable;	/* Subtables. */
+  SubTable	firstSubTable;	/* Subtables. */
 /*subtableGlyphCoverageArray*/	/* Only if version >= 3. We don't use. */
 
   public:
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 0102bb2c906..0976d16da97 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -191,20 +191,34 @@ struct KernTable
     unsigned int count = thiz()->tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
-      if (st->u.header.coverage & st->u.header.Variation)
+      bool reverse;
+
+      if (!T::Types::extended && (st->u.header.coverage & st->u.header.Variation))
         goto skip;
 
       if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) != st->u.header.is_horizontal ())
 	goto skip;
 
-      if (!c->buffer->message (c->font, ""start kern subtable %d"", c->lookup_index))
+      reverse = T::Types::extended /* TODO remove after kern application is moved earlier. */ &&
+		bool (st->u.header.coverage & st->u.header.Backwards) !=
+		HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction);
+
+      if (!c->buffer->message (c->font, ""start %c%c%c%c subtable %d"", HB_UNTAG (thiz()->tableTag), c->lookup_index))
 	goto skip;
 
+      if (reverse)
+	c->buffer->reverse ();
+
       c->sanitizer.set_object (*st);
 
+      /* XXX Reverse-kern is probably not working yet...
+       * hb_kern_machine_t would need to know that it's reverse-kerning. */
       st->dispatch (c);
 
-      (void) c->buffer->message (c->font, ""end kern subtable %d"", c->lookup_index);
+      if (reverse)
+	c->buffer->reverse ();
+
+      (void) c->buffer->message (c->font, ""end %c%c%c%c subtable %d"", HB_UNTAG (thiz()->tableTag), c->lookup_index);
 
     skip:
       st = &StructAfter<SubTable> (*st);
@@ -247,11 +261,13 @@ struct KernOTSubTableHeader
   enum Coverage
   {
     Horizontal	= 0x01u,
-    Minimum		= 0x02u,
+    Minimum	= 0x02u,
     CrossStream	= 0x04u,
-    Override		= 0x08u,
+    Override	= 0x08u,
 
-    Variation		= 0x00u, /* Not supported. */
+    /* Not supported: */
+    Backwards	= 0x00u,
+    Variation	= 0x00u,
   };
 
   inline bool sanitize (hb_sanitize_context_t *c) const
@@ -273,15 +289,17 @@ struct KernOT : KernTable<KernOT>
 {
   friend struct KernTable<KernOT>;
 
+  static const hb_tag_t tableTag = HB_OT_TAG_kern;
+  static const uint16_t minVersion = 0;
+
   typedef KernOTSubTableHeader SubTableHeader;
+  typedef SubTableHeader::Types Types;
   typedef KernSubTable<SubTableHeader> SubTable;
 
-  static const uint16_t minVersion = 0;
-
   protected:
-  HBUINT16			version;	/* Version--0x0000u */
-  HBUINT16			tableCount;	/* Number of subtables in the kerning table. */
-  KernSubTable<SubTableHeader>	firstSubTable;	/* Subtables. */
+  HBUINT16	version;	/* Version--0x0000u */
+  HBUINT16	tableCount;	/* Number of subtables in the kerning table. */
+  SubTable	firstSubTable;	/* Subtables. */
   public:
   DEFINE_SIZE_MIN (4);
 };
@@ -297,9 +315,12 @@ struct KernAATSubTableHeader
 
   enum Coverage
   {
-    Vertical		= 0x80u,
+    Vertical	= 0x80u,
     CrossStream	= 0x40u,
-    Variation		= 0x20u,
+    Variation	= 0x20u,
+
+    /* Not supported: */
+    Backwards	= 0x00u,
   };
 
   inline bool sanitize (hb_sanitize_context_t *c) const
@@ -323,15 +344,17 @@ struct KernAAT : KernTable<KernAAT>
 {
   friend struct KernTable<KernAAT>;
 
+  static const hb_tag_t tableTag = HB_OT_TAG_kern;
+  static const uint32_t minVersion = 0x00010000u;
+
   typedef KernAATSubTableHeader SubTableHeader;
+  typedef SubTableHeader::Types Types;
   typedef KernSubTable<SubTableHeader> SubTable;
 
-  static const uint32_t minVersion = 0x00010000u;
-
   protected:
-  HBUINT32			version;	/* Version--0x00010000u */
-  HBUINT32			tableCount;	/* Number of subtables in the kerning table. */
-  KernSubTable<SubTableHeader>	firstSubTable;	/* Subtables. */
+  HBUINT32	version;	/* Version--0x00010000u */
+  HBUINT32	tableCount;	/* Number of subtables in the kerning table. */
+  SubTable	firstSubTable;	/* Subtables. */
   public:
   DEFINE_SIZE_MIN (8);
 };

From c038f5be6b70b8edffc701dd3e4e3cd08d14e2f0 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 13:35:06 -0500
Subject: [PATCH 44/66] [fallback] Minor

---
 src/hb-ot-shape-fallback.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/hb-ot-shape-fallback.cc b/src/hb-ot-shape-fallback.cc
index 3742d670407..cfd06e7fda2 100644
--- a/src/hb-ot-shape-fallback.cc
+++ b/src/hb-ot-shape-fallback.cc
@@ -25,7 +25,7 @@
  */
 
 #include ""hb-ot-shape-fallback.hh""
-#include ""hb-ot-kern-table.hh""
+#include ""hb-kern.hh""
 
 static unsigned int
 recategorize_combining_class (hb_codepoint_t u,

From 14772da06f9c67d0d40712369e26064e3dee2a91 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 13:40:22 -0500
Subject: [PATCH 45/66] [kern/kerx] Share KernTable, renamed to KerxTable

---
 src/hb-aat-layout-kerx-table.hh |  77 +++++++++++++++++-------
 src/hb-ot-kern-table.hh         | 103 ++------------------------------
 2 files changed, 61 insertions(+), 119 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 3a76f0fa44c..8febd32dbbe 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -831,7 +831,7 @@ struct KerxSubTable
     return_trace (dispatch (c));
   }
 
-protected:
+  public:
   union {
   KerxSubTableHeader				header;
   KerxSubTableFormat0<KerxSubTableHeader>	format0;
@@ -840,7 +840,7 @@ protected:
   KerxSubTableFormat4<KerxSubTableHeader>	format4;
   KerxSubTableFormat6<KerxSubTableHeader>	format6;
   } u;
-public:
+  public:
   DEFINE_SIZE_MIN (12);
 };
 
@@ -849,33 +849,52 @@ public:
  * The 'kerx' Table
  */
 
-struct kerx
+template <typename T>
+struct KerxTable
 {
-  static const hb_tag_t tableTag = HB_AAT_TAG_kerx;
-  static const uint16_t minVersion = 2;
+  /* https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern */
+  inline const T* thiz (void) const { return static_cast<const T *> (this); }
 
-  typedef KerxSubTableHeader SubTableHeader;
-  typedef SubTableHeader::Types Types;
-  typedef KerxSubTable SubTable;
+  inline int get_h_kerning (hb_codepoint_t left, hb_codepoint_t right) const
+  {
+    typedef typename T::SubTable SubTable;
 
-  inline bool has_data (void) const { return version != 0; }
+    int v = 0;
+    const SubTable *st = &thiz()->firstSubTable;
+    unsigned int count = thiz()->tableCount;
+    for (unsigned int i = 0; i < count; i++)
+    {
+      if ((st->u.header.coverage & (st->u.header.Variation | st->u.header.CrossStream)) ||
+	  !st->u.header.is_horizontal ())
+        continue;
+      v += st->get_kerning (left, right);
+      st = &StructAfter<SubTable> (*st);
+    }
+    return v;
+  }
 
-  inline void apply (hb_aat_apply_context_t *c) const
+  inline void apply (AAT::hb_aat_apply_context_t *c) const
   {
+    typedef typename T::SubTable SubTable;
+
     c->set_lookup_index (0);
-    const SubTable *st = &firstSubTable;
-    unsigned int count = tableCount;
+    const SubTable *st = &thiz()->firstSubTable;
+    unsigned int count = thiz()->tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
       bool reverse;
 
+      if (!T::Types::extended && (st->u.header.coverage & st->u.header.Variation))
+        goto skip;
+
       if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) != st->u.header.is_horizontal ())
 	goto skip;
 
-      reverse = bool (st->u.header.coverage & st->u.header.Backwards) !=
+      reverse = T::Types::extended /* TODO remove after kern application is moved earlier. */ &&
+		bool (st->u.header.coverage & st->u.header.Backwards) !=
 		HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction);
 
-      if (!c->buffer->message (c->font, ""start %c%c%c%c subtable %d"", HB_UNTAG (tableTag), c->lookup_index))
+      if (!c->buffer->message (c->font, ""start %c%c%c%c subtable %d"", HB_UNTAG (thiz()->tableTag), c->lookup_index))
 	goto skip;
 
       if (reverse)
@@ -890,7 +909,7 @@ struct kerx
       if (reverse)
 	c->buffer->reverse ();
 
-      (void) c->buffer->message (c->font, ""end %c%c%c%c subtable %d"", HB_UNTAG (tableTag), c->lookup_index);
+      (void) c->buffer->message (c->font, ""end %c%c%c%c subtable %d"", HB_UNTAG (thiz()->tableTag), c->lookup_index);
 
     skip:
       st = &StructAfter<SubTable> (*st);
@@ -901,22 +920,38 @@ struct kerx
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
-    if (unlikely (!version.sanitize (c) ||
-		  version < minVersion ||
-		  !tableCount.sanitize (c)))
+    if (unlikely (!thiz()->version.sanitize (c) ||
+		  thiz()->version < T::minVersion ||
+		  !thiz()->tableCount.sanitize (c)))
       return_trace (false);
 
-    const SubTable *st = &firstSubTable;
-    unsigned int count = tableCount;
+    typedef typename T::SubTable SubTable;
+
+    const SubTable *st = &thiz()->firstSubTable;
+    unsigned int count = thiz()->tableCount;
     for (unsigned int i = 0; i < count; i++)
     {
-      if (!st->sanitize (c))
+      if (unlikely (!st->sanitize (c)))
 	return_trace (false);
       st = &StructAfter<SubTable> (*st);
     }
 
     return_trace (true);
   }
+};
+
+struct kerx : KerxTable<kerx>
+{
+  friend struct KerxTable<kerx>;
+
+  static const hb_tag_t tableTag = HB_AAT_TAG_kerx;
+  static const uint16_t minVersion = 2;
+
+  typedef KerxSubTableHeader SubTableHeader;
+  typedef SubTableHeader::Types Types;
+  typedef KerxSubTable SubTable;
+
+  inline bool has_data (void) const { return version; }
 
   protected:
   HBUINT16	version;	/* The version number of the extended kerning table
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 0976d16da97..b90f7fba78d 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -158,98 +158,6 @@ struct KernSubTable
 };
 
 
-template <typename T>
-struct KernTable
-{
-  /* https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern */
-  inline const T* thiz (void) const { return static_cast<const T *> (this); }
-
-  inline int get_h_kerning (hb_codepoint_t left, hb_codepoint_t right) const
-  {
-    typedef typename T::SubTable SubTable;
-
-    int v = 0;
-    const SubTable *st = &thiz()->firstSubTable;
-    unsigned int count = thiz()->tableCount;
-    for (unsigned int i = 0; i < count; i++)
-    {
-      if ((st->u.header.coverage & (st->u.header.Variation | st->u.header.CrossStream)) ||
-	  !st->u.header.is_horizontal ())
-        continue;
-      v += st->get_kerning (left, right);
-      st = &StructAfter<SubTable> (*st);
-    }
-    return v;
-  }
-
-  inline void apply (AAT::hb_aat_apply_context_t *c) const
-  {
-    typedef typename T::SubTable SubTable;
-
-    c->set_lookup_index (0);
-    const SubTable *st = &thiz()->firstSubTable;
-    unsigned int count = thiz()->tableCount;
-    for (unsigned int i = 0; i < count; i++)
-    {
-      bool reverse;
-
-      if (!T::Types::extended && (st->u.header.coverage & st->u.header.Variation))
-        goto skip;
-
-      if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) != st->u.header.is_horizontal ())
-	goto skip;
-
-      reverse = T::Types::extended /* TODO remove after kern application is moved earlier. */ &&
-		bool (st->u.header.coverage & st->u.header.Backwards) !=
-		HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction);
-
-      if (!c->buffer->message (c->font, ""start %c%c%c%c subtable %d"", HB_UNTAG (thiz()->tableTag), c->lookup_index))
-	goto skip;
-
-      if (reverse)
-	c->buffer->reverse ();
-
-      c->sanitizer.set_object (*st);
-
-      /* XXX Reverse-kern is probably not working yet...
-       * hb_kern_machine_t would need to know that it's reverse-kerning. */
-      st->dispatch (c);
-
-      if (reverse)
-	c->buffer->reverse ();
-
-      (void) c->buffer->message (c->font, ""end %c%c%c%c subtable %d"", HB_UNTAG (thiz()->tableTag), c->lookup_index);
-
-    skip:
-      st = &StructAfter<SubTable> (*st);
-      c->set_lookup_index (c->lookup_index + 1);
-    }
-  }
-
-  inline bool sanitize (hb_sanitize_context_t *c) const
-  {
-    TRACE_SANITIZE (this);
-    if (unlikely (!thiz()->version.sanitize (c) ||
-		  thiz()->version < T::minVersion ||
-		  !thiz()->tableCount.sanitize (c)))
-      return_trace (false);
-
-    typedef typename T::SubTable SubTable;
-
-    const SubTable *st = &thiz()->firstSubTable;
-    unsigned int count = thiz()->tableCount;
-    for (unsigned int i = 0; i < count; i++)
-    {
-      if (unlikely (!st->sanitize (c)))
-	return_trace (false);
-      st = &StructAfter<SubTable> (*st);
-    }
-
-    return_trace (true);
-  }
-};
-
-
 struct KernOTSubTableHeader
 {
   static const bool apple = false;
@@ -285,9 +193,9 @@ struct KernOTSubTableHeader
   DEFINE_SIZE_STATIC (6);
 };
 
-struct KernOT : KernTable<KernOT>
+struct KernOT : AAT::KerxTable<KernOT>
 {
-  friend struct KernTable<KernOT>;
+  friend struct AAT::KerxTable<KernOT>;
 
   static const hb_tag_t tableTag = HB_OT_TAG_kern;
   static const uint16_t minVersion = 0;
@@ -340,9 +248,9 @@ struct KernAATSubTableHeader
   DEFINE_SIZE_STATIC (8);
 };
 
-struct KernAAT : KernTable<KernAAT>
+struct KernAAT : AAT::KerxTable<KernAAT>
 {
-  friend struct KernTable<KernAAT>;
+  friend struct AAT::KerxTable<KernAAT>;
 
   static const hb_tag_t tableTag = HB_OT_TAG_kern;
   static const uint32_t minVersion = 0x00010000u;
@@ -363,8 +271,7 @@ struct kern
 {
   static const hb_tag_t tableTag = HB_OT_TAG_kern;
 
-  inline bool has_data (void) const
-  { return u.version32 != 0; }
+  inline bool has_data (void) const { return u.version32; }
 
   inline int get_h_kerning (hb_codepoint_t left, hb_codepoint_t right) const
   {

From 39b4ef6f18605e85c68cbcec534e137fc831dbca Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 13:48:45 -0500
Subject: [PATCH 46/66] [kerx] Better sanitize tupleKerning

---
 src/hb-aat-layout-kerx-table.hh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 8febd32dbbe..c1b968468bd 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -53,7 +53,7 @@ kerxTupleKern (int value,
 
   unsigned int offset = value;
   const FWORD *pv = &StructAtOffset<FWORD> (base, offset);
-  if (unlikely (!pv->sanitize (&c->sanitizer))) return 0;
+  if (unlikely (!c->sanitizer.check_array (pv, tupleCount))) return 0;
   return *pv;
 }
 

From f4bad0086e40c70d66d6514f038ddda1411657c8 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 13:51:17 -0500
Subject: [PATCH 47/66] [kerx] Implement tupleKerning for Format1

Untested.
---
 src/hb-aat-layout-kerx-table.hh | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index c1b968468bd..6bbeda764a0 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -295,10 +295,12 @@ struct KerxSubTableFormat1
 	    i++;
 	    break;
 	  }
+	unsigned int tuple_count = table->header.tuple_count ();
+	tuple_count = tuple_count ? tuple_count : 1;
 	for (; i; i--)
 	{
 	  unsigned int idx = stack[depth - i];
-	  int v = actions[i - 1];
+	  int v = actions[(i - 1) * tuple_count];
 
 	  /* ""The end of the list is marked by an odd value...""
 	   * Ignore it. */
@@ -376,9 +378,6 @@ struct KerxSubTableFormat1
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.tuple_count ())
-      return_trace (false); /* TODO kerxTupleKern */
-
     driver_context_t dc (this, c);
 
     StateTableDriver<Types, EntryData> driver (machine, c->buffer, c->font->face);

From 0c3b061ac244fa8a8657366e1b95523503fdf7be Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 13:58:41 -0500
Subject: [PATCH 48/66] [kern] Apply erlier, where GPOS/kerx are applied

---
 src/hb-aat-layout-kerx-table.hh |  3 +--
 src/hb-ot-shape-fallback.cc     |  9 +++++++++
 src/hb-ot-shape.cc              | 12 +++++-------
 3 files changed, 15 insertions(+), 9 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 6bbeda764a0..8b87e176ffd 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -889,8 +889,7 @@ struct KerxTable
       if (HB_DIRECTION_IS_HORIZONTAL (c->buffer->props.direction) != st->u.header.is_horizontal ())
 	goto skip;
 
-      reverse = T::Types::extended /* TODO remove after kern application is moved earlier. */ &&
-		bool (st->u.header.coverage & st->u.header.Backwards) !=
+      reverse = bool (st->u.header.coverage & st->u.header.Backwards) !=
 		HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction);
 
       if (!c->buffer->message (c->font, ""start %c%c%c%c subtable %d"", HB_UNTAG (thiz()->tableTag), c->lookup_index))
diff --git a/src/hb-ot-shape-fallback.cc b/src/hb-ot-shape-fallback.cc
index cfd06e7fda2..bbc410ad6fc 100644
--- a/src/hb-ot-shape-fallback.cc
+++ b/src/hb-ot-shape-fallback.cc
@@ -464,9 +464,18 @@ _hb_ot_shape_fallback_kern (const hb_ot_shape_plan_t *plan,
       !font->has_glyph_h_kerning_func () :
       !font->has_glyph_v_kerning_func ())
     return;
+
+  bool reverse = HB_DIRECTION_IS_BACKWARD (buffer->props.direction);
+
+  if (reverse)
+    buffer->reverse ();
+
   hb_ot_shape_fallback_kern_driver_t driver (font, buffer);
   OT::hb_kern_machine_t<hb_ot_shape_fallback_kern_driver_t> machine (driver);
   machine.kern (font, buffer, plan->kern_mask, false);
+
+  if (reverse)
+    buffer->reverse ();
 }
 
 
diff --git a/src/hb-ot-shape.cc b/src/hb-ot-shape.cc
index 98c29a48312..d2f77132079 100644
--- a/src/hb-ot-shape.cc
+++ b/src/hb-ot-shape.cc
@@ -866,10 +866,15 @@ hb_ot_position_complex (const hb_ot_shape_context_t *c)
 	break;
     }
 
+  /* XXX Clean up relationship between these. */
   if (c->plan->apply_gpos)
     c->plan->position (c->font, c->buffer);
   else if (c->plan->apply_kerx)
     hb_aat_layout_position (c->plan, c->font, c->buffer);
+  else if (c->plan->apply_kern)
+    hb_ot_layout_kern (c->plan, c->font, c->buffer);
+  else if (c->plan->fallback_kerning)
+    _hb_ot_shape_fallback_kern (c->plan, c->font, c->buffer);
 
   if (c->plan->apply_trak)
     hb_aat_layout_track (c->plan, c->font, c->buffer);
@@ -915,13 +920,6 @@ hb_ot_position (const hb_ot_shape_context_t *c)
   if (HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction))
     hb_buffer_reverse (c->buffer);
 
-  /* Visual fallback goes here. */
-
-  if (c->plan->apply_kern)
-    hb_ot_layout_kern (c->plan, c->font, c->buffer);
-  else if (c->plan->fallback_kerning)
-    _hb_ot_shape_fallback_kern (c->plan, c->font, c->buffer);
-
   _hb_buffer_deallocate_gsubgpos_vars (c->buffer);
 }
 

From 649cc3ef2773950b0b5884d9d1caf414aac888bf Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 14:04:04 -0500
Subject: [PATCH 49/66] [kerx] Don't disable crossKerning if kern feature is
 off

---
 src/hb-aat-layout-kerx-table.hh | 9 +++++----
 src/hb-ot-shape.cc              | 2 +-
 2 files changed, 6 insertions(+), 5 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 8b87e176ffd..aabbd4c980b 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -314,7 +314,7 @@ struct KerxSubTableFormat1
 	    v = 0;
 	  }
 
-	  if (idx < buffer->len && buffer->info[idx].mask & kern_mask)
+	  if (idx < buffer->len)
 	  {
 	    if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
 	    {
@@ -324,7 +324,7 @@ struct KerxSubTableFormat1
 		if (!buffer->pos[idx].y_offset)
 		  buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
 	      }
-	      else
+	      else if (buffer->info[idx].mask & kern_mask)
 	      {
 		if (!buffer->pos[idx].x_offset)
 		{
@@ -342,7 +342,7 @@ struct KerxSubTableFormat1
 		if (!buffer->pos[idx].x_offset)
 		  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
 	      }
-	      else
+	      else if (buffer->info[idx].mask & kern_mask)
 	      {
 		if (!buffer->pos[idx].y_offset)
 		{
@@ -375,7 +375,8 @@ struct KerxSubTableFormat1
   {
     TRACE_APPLY (this);
 
-    if (!c->plan->requested_kerning)
+    if (!c->plan->requested_kerning &&
+	!(header.coverage & header.CrossStream))
       return false;
 
     driver_context_t dc (this, c);
diff --git a/src/hb-ot-shape.cc b/src/hb-ot-shape.cc
index d2f77132079..bc4c24980e1 100644
--- a/src/hb-ot-shape.cc
+++ b/src/hb-ot-shape.cc
@@ -124,7 +124,7 @@ hb_ot_shape_planner_t::compile (hb_ot_shape_plan_t &plan,
   else if (hb_aat_layout_has_positioning (face))
     plan.apply_kerx = true;
 
-  if (plan.requested_kerning && !plan.apply_kerx && !has_gpos_kern)
+  if (!plan.apply_kerx && !has_gpos_kern)
   {
     /* Apparently Apple applies kerx if GPOS kern was not applied. */
     if (hb_aat_layout_has_positioning (face))

From e10a856eb24ae45e301c3ffa778caa4c0a995bb9 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 14:11:48 -0500
Subject: [PATCH 50/66] [kerx] Format

---
 src/hb-aat-layout-kerx-table.hh | 58 ++++++++++++++++-----------------
 1 file changed, 28 insertions(+), 30 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index aabbd4c980b..09c720874cf 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -300,10 +300,11 @@ struct KerxSubTableFormat1
 	for (; i; i--)
 	{
 	  unsigned int idx = stack[depth - i];
+	  if (idx >= buffer->len) continue;
+
 	  int v = actions[(i - 1) * tuple_count];
 
-	  /* ""The end of the list is marked by an odd value...""
-	   * Ignore it. */
+	  /* ""The end of the list is marked by an odd value...""  Ignore it. */
 	  v &= ~1;
 
 	  /* The following flag is undocumented in the spec, but described
@@ -314,41 +315,38 @@ struct KerxSubTableFormat1
 	    v = 0;
 	  }
 
-	  if (idx < buffer->len)
+	  if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
 	  {
-	    if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
+	    if (crossStream)
 	    {
-	      if (crossStream)
-	      {
-		crossOffset += v;
-		if (!buffer->pos[idx].y_offset)
-		  buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
-	      }
-	      else if (buffer->info[idx].mask & kern_mask)
-	      {
-		if (!buffer->pos[idx].x_offset)
-		{
-		  buffer->pos[idx].x_advance += c->font->em_scale_x (v);
-		  buffer->pos[idx].x_offset += c->font->em_scale_x (v);
-		}
-	      }
+	      crossOffset += v;
+	      if (!buffer->pos[idx].y_offset)
+		buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
 	    }
-	    else
+	    else if (buffer->info[idx].mask & kern_mask)
 	    {
-	      if (crossStream)
+	      if (!buffer->pos[idx].x_offset)
 	      {
-	        /* CoreText doesn't do crossStream kerning in vertical.  We do. */
-		crossOffset += v;
-		if (!buffer->pos[idx].x_offset)
-		  buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
+		buffer->pos[idx].x_advance += c->font->em_scale_x (v);
+		buffer->pos[idx].x_offset += c->font->em_scale_x (v);
 	      }
-	      else if (buffer->info[idx].mask & kern_mask)
+	    }
+	  }
+	  else
+	  {
+	    if (crossStream)
+	    {
+	      /* CoreText doesn't do crossStream kerning in vertical.  We do. */
+	      crossOffset += v;
+	      if (!buffer->pos[idx].x_offset)
+		buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
+	    }
+	    else if (buffer->info[idx].mask & kern_mask)
+	    {
+	      if (!buffer->pos[idx].y_offset)
 	      {
-		if (!buffer->pos[idx].y_offset)
-		{
-		  buffer->pos[idx].y_advance += c->font->em_scale_y (v);
-		  buffer->pos[idx].y_offset += c->font->em_scale_y (v);
-		}
+		buffer->pos[idx].y_advance += c->font->em_scale_y (v);
+		buffer->pos[idx].y_offset += c->font->em_scale_y (v);
 	      }
 	    }
 	  }

From b2f687c2569a3cc0b1cd0335c5ca0f8d193f8a39 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 14:38:29 -0500
Subject: [PATCH 51/66] [kerx] Use GPOS attachment facilities for CrossStream
 kerning

---
 src/hb-aat-layout-kerx-table.hh | 51 ++++++++++++++++++++++-----------
 1 file changed, 35 insertions(+), 16 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 09c720874cf..4ef5d9e260d 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -236,9 +236,7 @@ struct KerxSubTableFormat1
 	 * other subtables in kerx.  Discovered via testing. */
 	kernAction (&table->machine + table->kernAction),
 	depth (0),
-	crossStream (table->header.coverage & table->header.CrossStream),
-	crossOffset (0) {}
-
+	crossStream (table->header.coverage & table->header.CrossStream) {}
 
     /* TODO
      * 'kern' table has this pecularity, we don't currently implement.
@@ -307,21 +305,25 @@ struct KerxSubTableFormat1
 	  /* ""The end of the list is marked by an odd value...""  Ignore it. */
 	  v &= ~1;
 
+	  hb_glyph_position_t &o = buffer->pos[idx];
+
 	  /* The following flag is undocumented in the spec, but described
 	   * in the 'kern' table example. */
 	  if (v == -0x8000)
 	  {
-	    crossOffset = 0;
-	    v = 0;
+	    o.attach_type() = ATTACH_TYPE_NONE;
+	    o.attach_chain() = 0;
+	    o.x_offset = o.y_offset = 0;
 	  }
-
-	  if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
+	  else if (HB_DIRECTION_IS_HORIZONTAL (buffer->props.direction))
 	  {
 	    if (crossStream)
 	    {
-	      crossOffset += v;
-	      if (!buffer->pos[idx].y_offset)
-		buffer->pos[idx].y_offset += c->font->em_scale_y (crossOffset);
+	      if (buffer->pos[idx].attach_type() && !buffer->pos[idx].y_offset)
+	      {
+		o.y_offset = c->font->em_scale_y (v);
+		buffer->scratch_flags |= HB_BUFFER_SCRATCH_FLAG_HAS_GPOS_ATTACHMENT;
+	      }
 	    }
 	    else if (buffer->info[idx].mask & kern_mask)
 	    {
@@ -337,9 +339,11 @@ struct KerxSubTableFormat1
 	    if (crossStream)
 	    {
 	      /* CoreText doesn't do crossStream kerning in vertical.  We do. */
-	      crossOffset += v;
-	      if (!buffer->pos[idx].x_offset)
-		buffer->pos[idx].x_offset = c->font->em_scale_x (crossOffset);
+	      if (buffer->pos[idx].attach_type() && !buffer->pos[idx].x_offset)
+	      {
+		o.x_offset = c->font->em_scale_x (v);
+		buffer->scratch_flags |= HB_BUFFER_SCRATCH_FLAG_HAS_GPOS_ATTACHMENT;
+	      }
 	    }
 	    else if (buffer->info[idx].mask & kern_mask)
 	    {
@@ -353,8 +357,6 @@ struct KerxSubTableFormat1
 	}
 	depth = 0;
       }
-      else
-	buffer->pos[buffer->idx].y_offset += c->font->em_scale_y (crossOffset);
 
       return true;
     }
@@ -366,7 +368,6 @@ struct KerxSubTableFormat1
     unsigned int stack[8];
     unsigned int depth;
     bool crossStream;
-    int crossOffset;
   };
 
   inline bool apply (hb_aat_apply_context_t *c) const
@@ -875,6 +876,7 @@ struct KerxTable
   {
     typedef typename T::SubTable SubTable;
 
+    bool seenCrossStream = false;
     c->set_lookup_index (0);
     const SubTable *st = &thiz()->firstSubTable;
     unsigned int count = thiz()->tableCount;
@@ -894,6 +896,23 @@ struct KerxTable
       if (!c->buffer->message (c->font, ""start %c%c%c%c subtable %d"", HB_UNTAG (thiz()->tableTag), c->lookup_index))
 	goto skip;
 
+      if (!seenCrossStream &&
+	  (st->u.header.coverage & st->u.header.CrossStream))
+      {
+        /* Attach all glyphs into a chain. */
+        seenCrossStream = true;
+	hb_glyph_position_t *pos = c->buffer->pos;
+	unsigned int count = c->buffer->len;
+	for (unsigned int i = 0; i < count; i++)
+	{
+	  pos[i].attach_type() = ATTACH_TYPE_CURSIVE;
+	  pos[i].attach_chain() = HB_DIRECTION_IS_FORWARD (c->buffer->props.direction) ? -1 : +1;
+	  /* We intentionally don't set HB_BUFFER_SCRATCH_FLAG_HAS_GPOS_ATTACHMENT,
+	   * since there needs to be a non-zero attachment for post-positioning to
+	   * be needed. */
+	}
+      }
+
       if (reverse)
 	c->buffer->reverse ();
 

From 0eb4157011e78c332d781e28b54b020aa08957c0 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 14:42:15 -0500
Subject: [PATCH 52/66] [kerx] Disable backwards-kerning for non-state-machine
 tables

That's what the spec says for Backwards flag, only applicable to
formats 1 and 4.
---
 src/hb-aat-layout-kerx-table.hh | 8 +++-----
 src/hb-ot-kern-table.hh         | 2 +-
 2 files changed, 4 insertions(+), 6 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 4ef5d9e260d..222285d461a 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -118,7 +118,7 @@ struct KerxSubTableFormat0
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & header.CrossStream)
+    if (header.coverage & (header.CrossStream | header.Backwards))
       return false;
 
     accelerator_t accel (*this, c);
@@ -427,7 +427,7 @@ struct KerxSubTableFormat2
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & header.CrossStream)
+    if (header.coverage & (header.CrossStream | header.Backwards))
       return false;
 
     accelerator_t accel (*this, c);
@@ -696,7 +696,7 @@ struct KerxSubTableFormat6
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & header.CrossStream)
+    if (header.coverage & (header.CrossStream | header.Backwards))
       return false;
 
     accelerator_t accel (*this, c);
@@ -918,8 +918,6 @@ struct KerxTable
 
       c->sanitizer.set_object (*st);
 
-      /* XXX Reverse-kern is probably not working yet...
-       * hb_kern_machine_t would need to know that it's reverse-kerning. */
       st->dispatch (c);
 
       if (reverse)
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index b90f7fba78d..b2c29e3030e 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -66,7 +66,7 @@ struct KernSubTableFormat3
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & header.CrossStream)
+    if (header.coverage & (header.CrossStream | header.Backwards))
       return false;
 
     hb_kern_machine_t<KernSubTableFormat3> machine (*this);

From 7a9629f2f11a11d1c064662a08a0172ac2001668 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 14:52:36 -0500
Subject: [PATCH 53/66] [kerx] Implement CrossStream kerning for
 non-state-machine subtables

Untested.
---
 src/hb-aat-layout-kerx-table.hh | 12 ++++-----
 src/hb-kern.hh                  | 43 ++++++++++++++++++++++++---------
 src/hb-ot-kern-table.hh         |  4 +--
 3 files changed, 39 insertions(+), 20 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 222285d461a..dc3ecc582c5 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -118,11 +118,11 @@ struct KerxSubTableFormat0
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & (header.CrossStream | header.Backwards))
+    if (header.coverage & header.Backwards)
       return false;
 
     accelerator_t accel (*this, c);
-    hb_kern_machine_t<accelerator_t> machine (accel);
+    hb_kern_machine_t<accelerator_t> machine (accel, header.coverage & header.CrossStream);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
 
     return_trace (true);
@@ -427,11 +427,11 @@ struct KerxSubTableFormat2
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & (header.CrossStream | header.Backwards))
+    if (header.coverage & header.Backwards)
       return false;
 
     accelerator_t accel (*this, c);
-    hb_kern_machine_t<accelerator_t> machine (accel);
+    hb_kern_machine_t<accelerator_t> machine (accel, header.coverage & header.CrossStream);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
 
     return_trace (true);
@@ -696,11 +696,11 @@ struct KerxSubTableFormat6
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & (header.CrossStream | header.Backwards))
+    if (header.coverage & header.Backwards)
       return false;
 
     accelerator_t accel (*this, c);
-    hb_kern_machine_t<accelerator_t> machine (accel);
+    hb_kern_machine_t<accelerator_t> machine (accel, header.coverage & header.CrossStream);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
 
     return_trace (true);
diff --git a/src/hb-kern.hh b/src/hb-kern.hh
index 60e625c4b1b..aa01b470f29 100644
--- a/src/hb-kern.hh
+++ b/src/hb-kern.hh
@@ -38,7 +38,10 @@ namespace OT {
 template <typename Driver>
 struct hb_kern_machine_t
 {
-  hb_kern_machine_t (const Driver &driver_) : driver (driver_) {}
+  hb_kern_machine_t (const Driver &driver_,
+		     bool crossStream_ = false) :
+		       driver (driver_),
+		       crossStream (crossStream_) {}
 
   HB_NO_SANITIZE_SIGNED_INTEGER_OVERFLOW
   inline void kern (hb_font_t   *font,
@@ -81,26 +84,41 @@ struct hb_kern_machine_t
       if (likely (!kern))
         goto skip;
 
-
       if (horizontal)
       {
         if (scale)
 	  kern = font->em_scale_x (kern);
-	hb_position_t kern1 = kern >> 1;
-	hb_position_t kern2 = kern - kern1;
-	pos[i].x_advance += kern1;
-	pos[j].x_advance += kern2;
-	pos[j].x_offset += kern2;
+	if (crossStream)
+	{
+	  pos[j].y_offset = kern;
+	  buffer->scratch_flags |= HB_BUFFER_SCRATCH_FLAG_HAS_GPOS_ATTACHMENT;
+	}
+	else
+	{
+	  hb_position_t kern1 = kern >> 1;
+	  hb_position_t kern2 = kern - kern1;
+	  pos[i].x_advance += kern1;
+	  pos[j].x_advance += kern2;
+	  pos[j].x_offset += kern2;
+	}
       }
       else
       {
         if (scale)
 	  kern = font->em_scale_y (kern);
-	hb_position_t kern1 = kern >> 1;
-	hb_position_t kern2 = kern - kern1;
-	pos[i].y_advance += kern1;
-	pos[j].y_advance += kern2;
-	pos[j].y_offset += kern2;
+	if (crossStream)
+	{
+	  pos[j].x_offset = kern;
+	  buffer->scratch_flags |= HB_BUFFER_SCRATCH_FLAG_HAS_GPOS_ATTACHMENT;
+	}
+	else
+	{
+	  hb_position_t kern1 = kern >> 1;
+	  hb_position_t kern2 = kern - kern1;
+	  pos[i].y_advance += kern1;
+	  pos[j].y_advance += kern2;
+	  pos[j].y_offset += kern2;
+	}
       }
 
       buffer->unsafe_to_break (i, j + 1);
@@ -111,6 +129,7 @@ struct hb_kern_machine_t
   }
 
   const Driver &driver;
+  bool crossStream;
 };
 
 
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index b2c29e3030e..95306ece3ed 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -66,10 +66,10 @@ struct KernSubTableFormat3
     if (!c->plan->requested_kerning)
       return false;
 
-    if (header.coverage & (header.CrossStream | header.Backwards))
+    if (header.coverage & header.Backwards)
       return false;
 
-    hb_kern_machine_t<KernSubTableFormat3> machine (*this);
+    hb_kern_machine_t<KernSubTableFormat3> machine (*this, header.coverage & header.CrossStream);
     machine.kern (c->font, c->buffer, c->plan->kern_mask);
 
     return_trace (true);

From 501a364d9bb6c5828f9d660bae8b6e93b158b275 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 15:02:16 -0500
Subject: [PATCH 54/66] [GPOS] Add TODO item

---
 src/hb-ot-layout-gpos-table.hh | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/src/hb-ot-layout-gpos-table.hh b/src/hb-ot-layout-gpos-table.hh
index 743a979314d..0dcbb5a0d86 100644
--- a/src/hb-ot-layout-gpos-table.hh
+++ b/src/hb-ot-layout-gpos-table.hh
@@ -837,6 +837,8 @@ struct PairPosFormat2
     unsigned int klass2 = (this+classDef2).get_class (buffer->info[skippy_iter.idx].codepoint);
     if (unlikely (klass1 >= class1Count || klass2 >= class2Count)) return_trace (false);
 
+    /* TODO Only unsafe_to_break if kerning values not zero...
+     * https://github.com/harfbuzz/harfbuzz/issues/1365 */
     buffer->unsafe_to_break (buffer->idx, skippy_iter.idx + 1);
     const Value *v = &values[record_len * (klass1 * class2Count + klass2)];
     valueFormat1.apply_value (c, this, v, buffer->cur_pos());

From 6ee6cd93d8c61389cf242e42a531cc6e7214b21a Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 15:40:55 -0500
Subject: [PATCH 55/66] [GPOS] Only mark unsafe-to-break if kerning happened

Fixes https://github.com/harfbuzz/harfbuzz/issues/1365
---
 src/hb-ot-layout-gpos-table.hh | 56 +++++++++++++++++++---------------
 1 file changed, 32 insertions(+), 24 deletions(-)

diff --git a/src/hb-ot-layout-gpos-table.hh b/src/hb-ot-layout-gpos-table.hh
index 0dcbb5a0d86..9e1b026d79c 100644
--- a/src/hb-ot-layout-gpos-table.hh
+++ b/src/hb-ot-layout-gpos-table.hh
@@ -103,56 +103,58 @@ struct ValueFormat : HBUINT16
   inline unsigned int get_size (void) const
   { return get_len () * Value::static_size; }
 
-  void apply_value (hb_ot_apply_context_t   *c,
+  bool apply_value (hb_ot_apply_context_t   *c,
 		    const void           *base,
 		    const Value          *values,
 		    hb_glyph_position_t  &glyph_pos) const
   {
+    bool ret = false;
     unsigned int format = *this;
-    if (!format) return;
+    if (!format) return ret;
 
     hb_font_t *font = c->font;
     hb_bool_t horizontal = HB_DIRECTION_IS_HORIZONTAL (c->direction);
 
-    if (format & xPlacement) glyph_pos.x_offset  += font->em_scale_x (get_short (values++));
-    if (format & yPlacement) glyph_pos.y_offset  += font->em_scale_y (get_short (values++));
+    if (format & xPlacement) glyph_pos.x_offset  += font->em_scale_x (get_short (values++, &ret));
+    if (format & yPlacement) glyph_pos.y_offset  += font->em_scale_y (get_short (values++, &ret));
     if (format & xAdvance) {
-      if (likely (horizontal)) glyph_pos.x_advance += font->em_scale_x (get_short (values));
+      if (likely (horizontal)) glyph_pos.x_advance += font->em_scale_x (get_short (values, &ret));
       values++;
     }
     /* y_advance values grow downward but font-space grows upward, hence negation */
     if (format & yAdvance) {
-      if (unlikely (!horizontal)) glyph_pos.y_advance -= font->em_scale_y (get_short (values));
+      if (unlikely (!horizontal)) glyph_pos.y_advance -= font->em_scale_y (get_short (values, &ret));
       values++;
     }
 
-    if (!has_device ()) return;
+    if (!has_device ()) return ret;
 
     bool use_x_device = font->x_ppem || font->num_coords;
     bool use_y_device = font->y_ppem || font->num_coords;
 
-    if (!use_x_device && !use_y_device) return;
+    if (!use_x_device && !use_y_device) return ret;
 
     const VariationStore &store = c->var_store;
 
     /* pixel -> fractional pixel */
     if (format & xPlaDevice) {
-      if (use_x_device) glyph_pos.x_offset  += (base + get_device (values)).get_x_delta (font, store);
+      if (use_x_device) glyph_pos.x_offset  += (base + get_device (values, &ret)).get_x_delta (font, store);
       values++;
     }
     if (format & yPlaDevice) {
-      if (use_y_device) glyph_pos.y_offset  += (base + get_device (values)).get_y_delta (font, store);
+      if (use_y_device) glyph_pos.y_offset  += (base + get_device (values, &ret)).get_y_delta (font, store);
       values++;
     }
     if (format & xAdvDevice) {
-      if (horizontal && use_x_device) glyph_pos.x_advance += (base + get_device (values)).get_x_delta (font, store);
+      if (horizontal && use_x_device) glyph_pos.x_advance += (base + get_device (values, &ret)).get_x_delta (font, store);
       values++;
     }
     if (format & yAdvDevice) {
       /* y_advance values grow downward but font-space grows upward, hence negation */
-      if (!horizontal && use_y_device) glyph_pos.y_advance -= (base + get_device (values)).get_y_delta (font, store);
+      if (!horizontal && use_y_device) glyph_pos.y_advance -= (base + get_device (values, &ret)).get_y_delta (font, store);
       values++;
     }
+    return ret;
   }
 
   private:
@@ -175,11 +177,17 @@ struct ValueFormat : HBUINT16
 
   static inline OffsetTo<Device>& get_device (Value* value)
   { return *CastP<OffsetTo<Device> > (value); }
-  static inline const OffsetTo<Device>& get_device (const Value* value)
-  { return *CastP<OffsetTo<Device> > (value); }
+  static inline const OffsetTo<Device>& get_device (const Value* value, bool *worked=nullptr)
+  {
+    if (worked) *worked |= *value;
+    return *CastP<OffsetTo<Device> > (value);
+  }
 
-  static inline const HBINT16& get_short (const Value* value)
-  { return *CastP<HBINT16> (value); }
+  static inline const HBINT16& get_short (const Value* value, bool *worked=nullptr)
+  {
+    if (worked) *worked |= *value;
+    return *CastP<HBINT16> (value);
+  }
 
   public:
 
@@ -672,9 +680,10 @@ struct PairSet
         min = mid + 1;
       else
       {
-        buffer->unsafe_to_break (buffer->idx, pos + 1);
-	valueFormats[0].apply_value (c, this, &record->values[0], buffer->cur_pos());
-	valueFormats[1].apply_value (c, this, &record->values[len1], buffer->pos[pos]);
+	/* Note the intentional use of ""|"" instead of short-circuit ""||"". */
+	if (valueFormats[0].apply_value (c, this, &record->values[0], buffer->cur_pos()) |
+	    valueFormats[1].apply_value (c, this, &record->values[len1], buffer->pos[pos]))
+	  buffer->unsafe_to_break (buffer->idx, pos + 1);
 	if (len2)
 	  pos++;
 	buffer->idx = pos;
@@ -837,12 +846,11 @@ struct PairPosFormat2
     unsigned int klass2 = (this+classDef2).get_class (buffer->info[skippy_iter.idx].codepoint);
     if (unlikely (klass1 >= class1Count || klass2 >= class2Count)) return_trace (false);
 
-    /* TODO Only unsafe_to_break if kerning values not zero...
-     * https://github.com/harfbuzz/harfbuzz/issues/1365 */
-    buffer->unsafe_to_break (buffer->idx, skippy_iter.idx + 1);
     const Value *v = &values[record_len * (klass1 * class2Count + klass2)];
-    valueFormat1.apply_value (c, this, v, buffer->cur_pos());
-    valueFormat2.apply_value (c, this, v + len1, buffer->pos[skippy_iter.idx]);
+    /* Note the intentional use of ""|"" instead of short-circuit ""||"". */
+    if (valueFormat1.apply_value (c, this, v, buffer->cur_pos()) |
+	valueFormat2.apply_value (c, this, v + len1, buffer->pos[skippy_iter.idx]))
+      buffer->unsafe_to_break (buffer->idx, skippy_iter.idx + 1);
 
     buffer->idx = skippy_iter.idx;
     if (len2)

From ea579f9ccc87718d4c2ca8945a997e6679428a12 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 15:44:40 -0500
Subject: [PATCH 56/66] [kerx] Fix peculiar indexing that was needed previously

Not needed now that we use GPOS attachment for cursive kerx.
---
 src/hb-aat-layout-kerx-table.hh | 20 +++++++-------------
 1 file changed, 7 insertions(+), 13 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index dc3ecc582c5..84fa6dcd7b2 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -286,23 +286,18 @@ struct KerxSubTableFormat1
 	/* From Apple 'kern' spec:
 	 * ""Each pops one glyph from the kerning stack and applies the kerning value to it.
 	 * The end of the list is marked by an odd value... */
-	unsigned int i;
-	for (i = 0; i < depth; i++)
-	  if (actions[i] & 1)
-	  {
-	    i++;
-	    break;
-	  }
 	unsigned int tuple_count = table->header.tuple_count ();
 	tuple_count = tuple_count ? tuple_count : 1;
-	for (; i; i--)
+	bool last = false;
+	while (!last && depth--)
 	{
-	  unsigned int idx = stack[depth - i];
+	  unsigned int idx = stack[depth];
+	  int v = *actions;
+	  actions += tuple_count;
 	  if (idx >= buffer->len) continue;
 
-	  int v = actions[(i - 1) * tuple_count];
-
-	  /* ""The end of the list is marked by an odd value...""  Ignore it. */
+	  /* ""The end of the list is marked by an odd value..."" */
+	  last = v & 1;
 	  v &= ~1;
 
 	  hb_glyph_position_t &o = buffer->pos[idx];
@@ -355,7 +350,6 @@ struct KerxSubTableFormat1
 	    }
 	  }
 	}
-	depth = 0;
       }
 
       return true;

From bc06e2805ae55f5c152dfb70ee91c75830ad8f54 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 16:02:40 -0500
Subject: [PATCH 57/66] [kerx/kern] Add has_cross_stream()

---
 src/hb-aat-layout-kerx-table.hh | 15 +++++++++++++++
 src/hb-ot-kern-table.hh         |  9 +++++++++
 2 files changed, 24 insertions(+)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 84fa6dcd7b2..42212094956 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -848,6 +848,21 @@ struct KerxTable
   /* https://en.wikipedia.org/wiki/Curiously_recurring_template_pattern */
   inline const T* thiz (void) const { return static_cast<const T *> (this); }
 
+  inline bool has_cross_stream (void) const
+  {
+    typedef typename T::SubTable SubTable;
+
+    const SubTable *st = &thiz()->firstSubTable;
+    unsigned int count = thiz()->tableCount;
+    for (unsigned int i = 0; i < count; i++)
+    {
+      if (st->u.header.coverage & st->u.header.CrossStream)
+        return true;
+      st = &StructAfter<SubTable> (*st);
+    }
+    return false;
+  }
+
   inline int get_h_kerning (hb_codepoint_t left, hb_codepoint_t right) const
   {
     typedef typename T::SubTable SubTable;
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 95306ece3ed..690532e2921 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -273,6 +273,15 @@ struct kern
 
   inline bool has_data (void) const { return u.version32; }
 
+  inline bool has_cross_stream (void) const
+  {
+    switch (u.major) {
+    case 0: return u.ot.has_cross_stream ();
+    case 1: return u.aat.has_cross_stream ();
+    default:return false;
+    }
+  }
+
   inline int get_h_kerning (hb_codepoint_t left, hb_codepoint_t right) const
   {
     switch (u.major) {

From 9af983af24788afad4b37bd2297b86cdca7c5c29 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 16:03:09 -0500
Subject: [PATCH 58/66] [kern] Switch to dispatch

---
 src/hb-aat-layout-kerx-table.hh |  7 +++++--
 src/hb-ot-kern-table.hh         | 28 +++++++++++++++-------------
 src/hb-ot-layout.cc             |  6 ++----
 3 files changed, 22 insertions(+), 19 deletions(-)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 42212094956..272ebfd95e3 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -881,10 +881,11 @@ struct KerxTable
     return v;
   }
 
-  inline void apply (AAT::hb_aat_apply_context_t *c) const
+  inline bool apply (AAT::hb_aat_apply_context_t *c) const
   {
     typedef typename T::SubTable SubTable;
 
+    bool ret = false;
     bool seenCrossStream = false;
     c->set_lookup_index (0);
     const SubTable *st = &thiz()->firstSubTable;
@@ -927,7 +928,7 @@ struct KerxTable
 
       c->sanitizer.set_object (*st);
 
-      st->dispatch (c);
+      ret |= st->dispatch (c);
 
       if (reverse)
 	c->buffer->reverse ();
@@ -938,6 +939,8 @@ struct KerxTable
       st = &StructAfter<SubTable> (*st);
       c->set_lookup_index (c->lookup_index + 1);
     }
+
+    return ret;
   }
 
   inline bool sanitize (hb_sanitize_context_t *c) const
diff --git a/src/hb-ot-kern-table.hh b/src/hb-ot-kern-table.hh
index 690532e2921..14e0656842b 100644
--- a/src/hb-ot-kern-table.hh
+++ b/src/hb-ot-kern-table.hh
@@ -272,10 +272,11 @@ struct kern
   static const hb_tag_t tableTag = HB_OT_TAG_kern;
 
   inline bool has_data (void) const { return u.version32; }
+  inline unsigned int get_type (void) const { return u.major; }
 
   inline bool has_cross_stream (void) const
   {
-    switch (u.major) {
+    switch (get_type ()) {
     case 0: return u.ot.has_cross_stream ();
     case 1: return u.aat.has_cross_stream ();
     default:return false;
@@ -284,20 +285,25 @@ struct kern
 
   inline int get_h_kerning (hb_codepoint_t left, hb_codepoint_t right) const
   {
-    switch (u.major) {
+    switch (get_type ()) {
     case 0: return u.ot.get_h_kerning (left, right);
     case 1: return u.aat.get_h_kerning (left, right);
     default:return 0;
     }
   }
 
-  inline void apply (AAT::hb_aat_apply_context_t *c) const
+  inline bool apply (AAT::hb_aat_apply_context_t *c) const
+  { return dispatch (c); }
+
+  template <typename context_t>
+  inline typename context_t::return_t dispatch (context_t *c) const
   {
-    /* TODO Switch to dispatch(). */
-    switch (u.major) {
-    case 0: u.ot.apply (c);  return;
-    case 1: u.aat.apply (c); return;
-    default:		     return;
+    unsigned int subtable_type = get_type ();
+    TRACE_DISPATCH (this, subtable_type);
+    switch (subtable_type) {
+    case 0:	return_trace (c->dispatch (u.ot));
+    case 1:	return_trace (c->dispatch (u.aat));
+    default:	return_trace (c->default_return_value ());
     }
   }
 
@@ -305,11 +311,7 @@ struct kern
   {
     TRACE_SANITIZE (this);
     if (!u.version32.sanitize (c)) return_trace (false);
-    switch (u.major) {
-    case 0: return_trace (u.ot.sanitize (c));
-    case 1: return_trace (u.aat.sanitize (c));
-    default:return_trace (true);
-    }
+    return_trace (dispatch (c));
   }
 
   protected:
diff --git a/src/hb-ot-layout.cc b/src/hb-ot-layout.cc
index 6da1d3fdce0..9b93bb08581 100644
--- a/src/hb-ot-layout.cc
+++ b/src/hb-ot-layout.cc
@@ -1275,10 +1275,8 @@ apply_backward (OT::hb_ot_apply_context_t *c,
     if (accel.may_have (buffer->cur().codepoint) &&
 	(buffer->cur().mask & c->lookup_mask) &&
 	c->check_glyph_property (&buffer->cur(), c->lookup_props))
-    {
-     if (accel.apply (c))
-       ret = true;
-    }
+     ret |= accel.apply (c);
+
     /* The reverse lookup doesn't ""advance"" cursor (for good reason). */
     buffer->idx--;
 

From 41cff7afc916048810a7ea4aa33ecdee7401df74 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 16:05:36 -0500
Subject: [PATCH 59/66] Minor

---
 src/hb-ot-shape.cc | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/hb-ot-shape.cc b/src/hb-ot-shape.cc
index bc4c24980e1..dfe2a88c984 100644
--- a/src/hb-ot-shape.cc
+++ b/src/hb-ot-shape.cc
@@ -903,6 +903,9 @@ hb_ot_position_complex (const hb_ot_shape_context_t *c)
       c->font->subtract_glyph_h_origin (info[i].codepoint,
 					&pos[i].x_offset,
 					&pos[i].y_offset);
+
+  if (c->plan->fallback_mark_positioning && c->plan->shaper->fallback_position)
+    _hb_ot_shape_fallback_mark_position (c->plan, c->font, c->buffer);
 }
 
 static inline void
@@ -914,9 +917,6 @@ hb_ot_position (const hb_ot_shape_context_t *c)
 
   hb_ot_position_complex (c);
 
-  if (c->plan->fallback_mark_positioning && c->plan->shaper->fallback_position)
-    _hb_ot_shape_fallback_mark_position (c->plan, c->font, c->buffer);
-
   if (HB_DIRECTION_IS_BACKWARD (c->buffer->props.direction))
     hb_buffer_reverse (c->buffer);
 

From 5cf6f94dfd30a468ab8464435e846811c39d9226 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 16:07:22 -0500
Subject: [PATCH 60/66] Don't apply both kerx and kern

Ouch!
---
 src/hb-ot-shape.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/hb-ot-shape.cc b/src/hb-ot-shape.cc
index dfe2a88c984..455c8d68985 100644
--- a/src/hb-ot-shape.cc
+++ b/src/hb-ot-shape.cc
@@ -129,7 +129,7 @@ hb_ot_shape_planner_t::compile (hb_ot_shape_plan_t &plan,
     /* Apparently Apple applies kerx if GPOS kern was not applied. */
     if (hb_aat_layout_has_positioning (face))
       plan.apply_kerx = true;
-    if (hb_ot_layout_has_kerning (face))
+    else if (hb_ot_layout_has_kerning (face))
       plan.apply_kern = true;
     else
       plan.fallback_kerning = true;

From ca23567f41a2d6389f6fd2483a994cf5aa6aeaf8 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 16:19:51 -0500
Subject: [PATCH 61/66] Disable fallback mark positioning if kern table has
 cross-stream kerning

Happens even if the cross-stream kerning is for cursive attachment only.  Oh well..
---
 src/hb-ot-layout.cc |  6 ++++++
 src/hb-ot-layout.hh |  3 +++
 src/hb-ot-shape.cc  | 14 ++++++--------
 src/hb-ot-shape.hh  |  2 +-
 4 files changed, 16 insertions(+), 9 deletions(-)

diff --git a/src/hb-ot-layout.cc b/src/hb-ot-layout.cc
index 9b93bb08581..cdc7755ad65 100644
--- a/src/hb-ot-layout.cc
+++ b/src/hb-ot-layout.cc
@@ -63,6 +63,12 @@ hb_ot_layout_has_kerning (hb_face_t *face)
   return face->table.kern->has_data ();
 }
 
+hb_bool_t
+hb_ot_layout_has_cross_kerning (hb_face_t *face)
+{
+  return face->table.kern->has_cross_stream ();
+}
+
 void
 hb_ot_layout_kern (hb_ot_shape_plan_t *plan,
 		   hb_font_t *font,
diff --git a/src/hb-ot-layout.hh b/src/hb-ot-layout.hh
index 437ae477602..ee6e0d2549a 100644
--- a/src/hb-ot-layout.hh
+++ b/src/hb-ot-layout.hh
@@ -48,6 +48,9 @@ struct hb_ot_shape_plan_t;
 HB_INTERNAL hb_bool_t
 hb_ot_layout_has_kerning (hb_face_t *face);
 
+HB_INTERNAL hb_bool_t
+hb_ot_layout_has_cross_kerning (hb_face_t *face);
+
 HB_INTERNAL void
 hb_ot_layout_kern (hb_ot_shape_plan_t *plan,
 		   hb_font_t *font,
diff --git a/src/hb-ot-shape.cc b/src/hb-ot-shape.cc
index 455c8d68985..9b6d4708903 100644
--- a/src/hb-ot-shape.cc
+++ b/src/hb-ot-shape.cc
@@ -131,13 +131,12 @@ hb_ot_shape_planner_t::compile (hb_ot_shape_plan_t &plan,
       plan.apply_kerx = true;
     else if (hb_ot_layout_has_kerning (face))
       plan.apply_kern = true;
-    else
-      plan.fallback_kerning = true;
   }
 
+  bool has_kern_mark = plan.apply_kern && hb_ot_layout_has_cross_kerning (face);
+  plan.zero_marks = !plan.apply_kerx && !has_kern_mark;
   plan.has_gpos_mark = !!plan.map.get_1_mask (HB_TAG ('m','a','r','k'));
-  if (!plan.apply_gpos && !plan.apply_kerx)
-    plan.fallback_mark_positioning = true;
+  plan.fallback_mark_positioning = !plan.apply_gpos && !plan.apply_kerx && !has_kern_mark;
 
   /* Currently we always apply trak. */
   plan.apply_trak = plan.requested_tracking && hb_aat_layout_has_tracking (face);
@@ -853,7 +852,7 @@ hb_ot_position_complex (const hb_ot_shape_context_t *c)
 
   hb_ot_layout_position_start (c->font, c->buffer);
 
-  if (!c->plan->apply_kerx)
+  if (c->plan->zero_marks)
     switch (c->plan->shaper->zero_width_marks)
     {
       case HB_OT_SHAPE_ZERO_WIDTH_MARKS_BY_GDEF_EARLY:
@@ -866,20 +865,19 @@ hb_ot_position_complex (const hb_ot_shape_context_t *c)
 	break;
     }
 
-  /* XXX Clean up relationship between these. */
   if (c->plan->apply_gpos)
     c->plan->position (c->font, c->buffer);
   else if (c->plan->apply_kerx)
     hb_aat_layout_position (c->plan, c->font, c->buffer);
   else if (c->plan->apply_kern)
     hb_ot_layout_kern (c->plan, c->font, c->buffer);
-  else if (c->plan->fallback_kerning)
+  else
     _hb_ot_shape_fallback_kern (c->plan, c->font, c->buffer);
 
   if (c->plan->apply_trak)
     hb_aat_layout_track (c->plan, c->font, c->buffer);
 
-  if (!c->plan->apply_kerx)
+  if (c->plan->zero_marks)
     switch (c->plan->shaper->zero_width_marks)
     {
       case HB_OT_SHAPE_ZERO_WIDTH_MARKS_BY_GDEF_LATE:
diff --git a/src/hb-ot-shape.hh b/src/hb-ot-shape.hh
index 1cb9e24d7f6..655e28d6d40 100644
--- a/src/hb-ot-shape.hh
+++ b/src/hb-ot-shape.hh
@@ -51,8 +51,8 @@ struct hb_ot_shape_plan_t
   bool requested_tracking : 1;
   bool has_frac : 1;
   bool has_gpos_mark : 1;
+  bool zero_marks : 1;
   bool fallback_glyph_classes : 1;
-  bool fallback_kerning : 1;
   bool fallback_mark_positioning : 1;
 
   bool apply_gpos : 1;

From 1909072235e59eb80f9169300279b65779b932a4 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 16:42:16 -0500
Subject: [PATCH 62/66] [aat] Add debug info to state machine

---
 src/hb-aat-layout-common.hh | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/src/hb-aat-layout-common.hh b/src/hb-aat-layout-common.hh
index 34c61e93cf3..6efc99aa4eb 100644
--- a/src/hb-aat-layout-common.hh
+++ b/src/hb-aat-layout-common.hh
@@ -452,6 +452,7 @@ struct StateTable
     const Entry<Extra> *entries = (this+entryTable).arrayZ;
 
     unsigned int entry = states[state * nClasses + klass];
+    DEBUG_MSG (APPLY, nullptr, ""e%d"", entry);
 
     return &entries[entry];
   }
@@ -629,6 +630,7 @@ struct StateTableDriver
       unsigned int klass = buffer->idx < buffer->len ?
 			   machine.get_class (buffer->info[buffer->idx].codepoint, num_glyphs) :
 			   (unsigned) StateTable<Types, EntryData>::CLASS_END_OF_TEXT;
+      DEBUG_MSG (APPLY, nullptr, ""c%d at %d"", klass, buffer->idx);
       const Entry<EntryData> *entry = machine.get_entryZ (state, klass);
       if (unlikely (!entry))
 	break;
@@ -661,6 +663,7 @@ struct StateTableDriver
       last_was_dont_advance = (entry->flags & context_t::DontAdvance) && buffer->max_ops-- > 0;
 
       state = machine.new_state (entry->newState);
+      DEBUG_MSG (APPLY, nullptr, ""s%d"", state);
 
       if (buffer->idx == buffer->len)
 	break;

From 385f78b3123f268e4c7ff423621e5ce9e8a5c54b Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 17:19:21 -0500
Subject: [PATCH 63/66] [aat] Remove deleted-glyhs after applying kerx/kern

Finally:  Fixes https://github.com/harfbuzz/harfbuzz/issues/1356

Test case:
$ ./hb-shape GeezaPro.ttc -u U+0628,U+064A,U+064E,U+0651,U+0629
[u0629.final.tehMarbuta=4+713|u064e_u0651.shaddaFatha=1@0,-200+0|u064a.medial.yeh=1+656|u0628.initial.beh=0+656]

The mark positioning (kern table CrossStream kerning) only works if deleted
glyph (as result of ligation) is still in stream and pushed through the
state machine.
---
 src/hb-aat-layout-morx-table.hh |  16 -----
 src/hb-aat-layout.cc            |  30 +++++++++-
 src/hb-aat-layout.hh            |  12 +++-
 src/hb-ot-layout-gpos-table.hh  |   6 +-
 src/hb-ot-layout.cc             |  60 +++++++++++++++++--
 src/hb-ot-layout.hh             |  23 +++----
 src/hb-ot-shape.cc              | 102 +++++++++++---------------------
 7 files changed, 142 insertions(+), 107 deletions(-)

diff --git a/src/hb-aat-layout-morx-table.hh b/src/hb-aat-layout-morx-table.hh
index a364f7ac76b..28e3c10d050 100644
--- a/src/hb-aat-layout-morx-table.hh
+++ b/src/hb-aat-layout-morx-table.hh
@@ -1106,21 +1106,6 @@ struct mortmorx
     }
   }
 
-  inline static void remove_deleted_glyphs (hb_buffer_t *buffer)
-  {
-    if (unlikely (!buffer->successful)) return;
-
-    buffer->clear_output ();
-    for (buffer->idx = 0; buffer->idx < buffer->len && buffer->successful;)
-    {
-      if (unlikely (buffer->cur().codepoint == DELETED_GLYPH))
-        buffer->skip_glyph ();
-      else
-        buffer->next_glyph ();
-    }
-    buffer->swap_buffers ();
-  }
-
   inline void apply (hb_aat_apply_context_t *c) const
   {
     if (unlikely (!c->buffer->successful)) return;
@@ -1133,7 +1118,6 @@ struct mortmorx
       if (unlikely (!c->buffer->successful)) return;
       chain = &StructAfter<Chain<Types> > (*chain);
     }
-    remove_deleted_glyphs (c->buffer);
   }
 
   inline bool sanitize (hb_sanitize_context_t *c) const
diff --git a/src/hb-aat-layout.cc b/src/hb-aat-layout.cc
index 5a4e227caf5..b3b56c08d12 100644
--- a/src/hb-aat-layout.cc
+++ b/src/hb-aat-layout.cc
@@ -193,7 +193,7 @@ hb_aat_layout_compile_map (const hb_aat_map_builder_t *mapper,
 }
 
 
-hb_bool_t
+bool
 hb_aat_layout_has_substitution (hb_face_t *face)
 {
   return face->table.morx->has_data () ||
@@ -224,8 +224,32 @@ hb_aat_layout_substitute (hb_ot_shape_plan_t *plan,
   }
 }
 
+void
+hb_aat_layout_zero_width_deleted_glyphs (hb_buffer_t *buffer)
+{
+  unsigned int count = buffer->len;
+  hb_glyph_info_t *info = buffer->info;
+  hb_glyph_position_t *pos = buffer->pos;
+  for (unsigned int i = 0; i < count; i++)
+    if (unlikely (info[i].codepoint == AAT::DELETED_GLYPH))
+      pos[i].x_advance = pos[i].y_advance = 0;
+}
+
+static bool
+is_deleted_glyph (const hb_glyph_info_t *info)
+{
+  return info->codepoint == AAT::DELETED_GLYPH;
+}
+
+void
+hb_aat_layout_remove_deleted_glyphs (hb_buffer_t *buffer)
+{
+  hb_ot_layout_delete_glyphs_inplace (buffer, is_deleted_glyph);
+}
+
+
 
-hb_bool_t
+bool
 hb_aat_layout_has_positioning (hb_face_t *face)
 {
   return face->table.kerx->has_data ();
@@ -248,7 +272,7 @@ hb_aat_layout_position (hb_ot_shape_plan_t *plan,
 }
 
 
-hb_bool_t
+bool
 hb_aat_layout_has_tracking (hb_face_t *face)
 {
   return face->table.trak->has_data ();
diff --git a/src/hb-aat-layout.hh b/src/hb-aat-layout.hh
index 8a558e6aa73..97935a02feb 100644
--- a/src/hb-aat-layout.hh
+++ b/src/hb-aat-layout.hh
@@ -56,7 +56,7 @@ HB_INTERNAL void
 hb_aat_layout_compile_map (const hb_aat_map_builder_t *mapper,
 			   hb_aat_map_t *map);
 
-HB_INTERNAL hb_bool_t
+HB_INTERNAL bool
 hb_aat_layout_has_substitution (hb_face_t *face);
 
 HB_INTERNAL void
@@ -64,7 +64,13 @@ hb_aat_layout_substitute (hb_ot_shape_plan_t *plan,
 			  hb_font_t *font,
 			  hb_buffer_t *buffer);
 
-HB_INTERNAL hb_bool_t
+HB_INTERNAL void
+hb_aat_layout_zero_width_deleted_glyphs (hb_buffer_t *buffer);
+
+HB_INTERNAL void
+hb_aat_layout_remove_deleted_glyphs (hb_buffer_t *buffer);
+
+HB_INTERNAL bool
 hb_aat_layout_has_positioning (hb_face_t *face);
 
 HB_INTERNAL void
@@ -72,7 +78,7 @@ hb_aat_layout_position (hb_ot_shape_plan_t *plan,
 			hb_font_t *font,
 			hb_buffer_t *buffer);
 
-HB_INTERNAL hb_bool_t
+HB_INTERNAL bool
 hb_aat_layout_has_tracking (hb_face_t *face);
 
 HB_INTERNAL void
diff --git a/src/hb-ot-layout-gpos-table.hh b/src/hb-ot-layout-gpos-table.hh
index 9e1b026d79c..fc74af47aa2 100644
--- a/src/hb-ot-layout-gpos-table.hh
+++ b/src/hb-ot-layout-gpos-table.hh
@@ -113,7 +113,7 @@ struct ValueFormat : HBUINT16
     if (!format) return ret;
 
     hb_font_t *font = c->font;
-    hb_bool_t horizontal = HB_DIRECTION_IS_HORIZONTAL (c->direction);
+    bool horizontal = HB_DIRECTION_IS_HORIZONTAL (c->direction);
 
     if (format & xPlacement) glyph_pos.x_offset  += font->em_scale_x (get_short (values++, &ret));
     if (format & yPlacement) glyph_pos.y_offset  += font->em_scale_y (get_short (values++, &ret));
@@ -271,10 +271,10 @@ struct AnchorFormat2
     unsigned int x_ppem = font->x_ppem;
     unsigned int y_ppem = font->y_ppem;
     hb_position_t cx = 0, cy = 0;
-    hb_bool_t ret;
+    bool ret;
 
     ret = (x_ppem || y_ppem) &&
-	   font->get_glyph_contour_point_for_origin (glyph_id, anchorPoint, HB_DIRECTION_LTR, &cx, &cy);
+	  font->get_glyph_contour_point_for_origin (glyph_id, anchorPoint, HB_DIRECTION_LTR, &cx, &cy);
     *x = ret && x_ppem ? cx : font->em_fscale_x (xCoordinate);
     *y = ret && y_ppem ? cy : font->em_fscale_y (yCoordinate);
   }
diff --git a/src/hb-ot-layout.cc b/src/hb-ot-layout.cc
index cdc7755ad65..eb5140fc276 100644
--- a/src/hb-ot-layout.cc
+++ b/src/hb-ot-layout.cc
@@ -57,13 +57,13 @@
  * kern
  */
 
-hb_bool_t
+bool
 hb_ot_layout_has_kerning (hb_face_t *face)
 {
   return face->table.kern->has_data ();
 }
 
-hb_bool_t
+bool
 hb_ot_layout_has_cross_kerning (hb_face_t *face)
 {
   return face->table.kern->has_cross_stream ();
@@ -423,7 +423,7 @@ hb_ot_layout_table_get_feature_tags (hb_face_t    *face,
   return g.get_feature_tags (start_offset, feature_count, feature_tags);
 }
 
-hb_bool_t
+bool
 hb_ot_layout_table_find_feature (hb_face_t    *face,
 				 hb_tag_t      table_tag,
 				 hb_tag_t      feature_tag,
@@ -933,12 +933,12 @@ hb_ot_layout_lookup_would_substitute (hb_face_t            *face,
 						    zero_context);
 }
 
-hb_bool_t
+bool
 hb_ot_layout_lookup_would_substitute_fast (hb_face_t            *face,
 					   unsigned int          lookup_index,
 					   const hb_codepoint_t *glyphs,
 					   unsigned int          glyphs_length,
-					   hb_bool_t             zero_context)
+					   bool                  zero_context)
 {
   if (unlikely (lookup_index >= face->table.GSUB->lookup_count)) return false;
   OT::hb_would_apply_context_t c (face, glyphs, glyphs_length, (bool) zero_context);
@@ -955,6 +955,56 @@ hb_ot_layout_substitute_start (hb_font_t    *font,
 _hb_ot_layout_set_glyph_props (font, buffer);
 }
 
+void
+hb_ot_layout_delete_glyphs_inplace (hb_buffer_t *buffer,
+				    bool (*filter) (const hb_glyph_info_t *info))
+{
+  /* Merge clusters and delete filtered glyphs.
+   * NOTE! We can't use out-buffer as we have positioning data. */
+  unsigned int j = 0;
+  unsigned int count = buffer->len;
+  hb_glyph_info_t *info = buffer->info;
+  hb_glyph_position_t *pos = buffer->pos;
+  for (unsigned int i = 0; i < count; i++)
+  {
+    if (filter (&info[i]))
+    {
+      /* Merge clusters.
+       * Same logic as buffer->delete_glyph(), but for in-place removal. */
+
+      unsigned int cluster = info[i].cluster;
+      if (i + 1 < count && cluster == info[i + 1].cluster)
+	continue; /* Cluster survives; do nothing. */
+
+      if (j)
+      {
+	/* Merge cluster backward. */
+	if (cluster < info[j - 1].cluster)
+	{
+	  unsigned int mask = info[i].mask;
+	  unsigned int old_cluster = info[j - 1].cluster;
+	  for (unsigned k = j; k && info[k - 1].cluster == old_cluster; k--)
+	    buffer->set_cluster (info[k - 1], cluster, mask);
+	}
+	continue;
+      }
+
+      if (i + 1 < count)
+	buffer->merge_clusters (i, i + 2); /* Merge cluster forward. */
+
+      continue;
+    }
+
+    if (j != i)
+    {
+      info[j] = info[i];
+      pos[j] = pos[i];
+    }
+    j++;
+  }
+  buffer->len = j;
+}
+
 /**
  * hb_ot_layout_lookup_substitute_closure:
  *
diff --git a/src/hb-ot-layout.hh b/src/hb-ot-layout.hh
index ee6e0d2549a..b21825316e7 100644
--- a/src/hb-ot-layout.hh
+++ b/src/hb-ot-layout.hh
@@ -45,10 +45,10 @@ struct hb_ot_shape_plan_t;
  * kern
  */
 
-HB_INTERNAL hb_bool_t
+HB_INTERNAL bool
 hb_ot_layout_has_kerning (hb_face_t *face);
 
-HB_INTERNAL hb_bool_t
+HB_INTERNAL bool
 hb_ot_layout_has_cross_kerning (hb_face_t *face);
 
 HB_INTERNAL void
@@ -59,7 +59,7 @@ hb_ot_layout_kern (hb_ot_shape_plan_t *plan,
 
 /* Private API corresponding to hb-ot-layout.h: */
 
-HB_INTERNAL hb_bool_t
+HB_INTERNAL bool
 hb_ot_layout_table_find_feature (hb_face_t    *face,
 				 hb_tag_t      table_tag,
 				 hb_tag_t      feature_tag,
@@ -93,12 +93,12 @@ HB_MARK_AS_FLAG_T (hb_ot_layout_glyph_props_flags_t);
  * GSUB/GPOS
  */
 
-HB_INTERNAL hb_bool_t
+HB_INTERNAL bool
 hb_ot_layout_lookup_would_substitute_fast (hb_face_t            *face,
 					   unsigned int          lookup_index,
 					   const hb_codepoint_t *glyphs,
 					   unsigned int          glyphs_length,
-					   hb_bool_t             zero_context);
+					   bool                  zero_context);
 
 
 /* Should be called before all the substitute_lookup's are done. */
@@ -106,6 +106,9 @@ HB_INTERNAL void
 hb_ot_layout_substitute_start (hb_font_t    *font,
 			       hb_buffer_t  *buffer);
 
+HB_INTERNAL void
+hb_ot_layout_delete_glyphs_inplace (hb_buffer_t *buffer,
+				    bool (*filter) (const hb_glyph_info_t *info));
 
 namespace OT {
   struct hb_ot_apply_context_t;
@@ -306,13 +309,13 @@ _hb_glyph_info_get_unicode_space_fallback_type (const hb_glyph_info_t *info)
 
 static inline bool _hb_glyph_info_ligated (const hb_glyph_info_t *info);
 
-static inline hb_bool_t
+static inline bool
 _hb_glyph_info_is_default_ignorable (const hb_glyph_info_t *info)
 {
   return (info->unicode_props() & UPROPS_MASK_IGNORABLE) &&
 	 !_hb_glyph_info_ligated (info);
 }
-static inline hb_bool_t
+static inline bool
 _hb_glyph_info_is_default_ignorable_and_not_hidden (const hb_glyph_info_t *info)
 {
   return ((info->unicode_props() & (UPROPS_MASK_IGNORABLE|UPROPS_MASK_HIDDEN))
@@ -366,17 +369,17 @@ _hb_glyph_info_is_unicode_format (const hb_glyph_info_t *info)
   return _hb_glyph_info_get_general_category (info) ==
 	 HB_UNICODE_GENERAL_CATEGORY_FORMAT;
 }
-static inline hb_bool_t
+static inline bool
 _hb_glyph_info_is_zwnj (const hb_glyph_info_t *info)
 {
   return _hb_glyph_info_is_unicode_format (info) && (info->unicode_props() & UPROPS_MASK_Cf_ZWNJ);
 }
-static inline hb_bool_t
+static inline bool
 _hb_glyph_info_is_zwj (const hb_glyph_info_t *info)
 {
   return _hb_glyph_info_is_unicode_format (info) && (info->unicode_props() & UPROPS_MASK_Cf_ZWJ);
 }
-static inline hb_bool_t
+static inline bool
 _hb_glyph_info_is_joiner (const hb_glyph_info_t *info)
 {
   return _hb_glyph_info_is_unicode_format (info) && (info->unicode_props() & (UPROPS_MASK_Cf_ZWNJ|UPROPS_MASK_Cf_ZWJ));
diff --git a/src/hb-ot-shape.cc b/src/hb-ot-shape.cc
index 9b6d4708903..99d6b9d40ce 100644
--- a/src/hb-ot-shape.cc
+++ b/src/hb-ot-shape.cc
@@ -476,7 +476,9 @@ hb_ensure_native_direction (hb_buffer_t *buffer)
 }
 
 
-/* Substitute */
+/*
+ * Substitute
+ */
 
 static inline void
 hb_ot_mirror_chars (const hb_ot_shape_context_t *c)
@@ -582,10 +584,8 @@ hb_ot_shape_setup_masks (const hb_ot_shape_context_t *c)
 }
 
 static void
-hb_ot_zero_width_default_ignorables (const hb_ot_shape_context_t *c)
+hb_ot_zero_width_default_ignorables (const hb_buffer_t *buffer)
 {
-  hb_buffer_t *buffer = c->buffer;
-
   if (!(buffer->scratch_flags & HB_BUFFER_SCRATCH_FLAG_HAS_DEFAULT_IGNORABLES) ||
       (buffer->flags & HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES) ||
       (buffer->flags & HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES))
@@ -601,21 +601,19 @@ hb_ot_zero_width_default_ignorables (const hb_ot_shape_context_t *c)
 }
 
 static void
-hb_ot_hide_default_ignorables (const hb_ot_shape_context_t *c)
+hb_ot_hide_default_ignorables (hb_buffer_t *buffer,
+			       hb_font_t   *font)
 {
-  hb_buffer_t *buffer = c->buffer;
-
   if (!(buffer->scratch_flags & HB_BUFFER_SCRATCH_FLAG_HAS_DEFAULT_IGNORABLES) ||
       (buffer->flags & HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES))
     return;
 
   unsigned int count = buffer->len;
   hb_glyph_info_t *info = buffer->info;
-  hb_glyph_position_t *pos = buffer->pos;
 
-  hb_codepoint_t invisible = c->buffer->invisible;
+  hb_codepoint_t invisible = buffer->invisible;
   if (!(buffer->flags & HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES) &&
-      (invisible || c->font->get_nominal_glyph (' ', &invisible)))
+      (invisible || font->get_nominal_glyph (' ', &invisible)))
   {
     /* Replace default-ignorables with a zero-advance invisible glyph. */
     for (unsigned int i = 0; i < count; i++)
@@ -625,49 +623,7 @@ hb_ot_hide_default_ignorables (const hb_ot_shape_context_t *c)
     }
   }
   else
-  {
-    /* Merge clusters and delete default-ignorables.
-     * NOTE! We can't use out-buffer as we have positioning data. */
-    unsigned int j = 0;
-    for (unsigned int i = 0; i < count; i++)
-    {
-      if (_hb_glyph_info_is_default_ignorable (&info[i]))
-      {
-	/* Merge clusters.
-	 * Same logic as buffer->delete_glyph(), but for in-place removal. */
-
-	unsigned int cluster = info[i].cluster;
-	if (i + 1 < count && cluster == info[i + 1].cluster)
-	  continue; /* Cluster survives; do nothing. */
-
-	if (j)
-	{
-	  /* Merge cluster backward. */
-	  if (cluster < info[j - 1].cluster)
-	  {
-	    unsigned int mask = info[i].mask;
-	    unsigned int old_cluster = info[j - 1].cluster;
-	    for (unsigned k = j; k && info[k - 1].cluster == old_cluster; k--)
-	      buffer->set_cluster (info[k - 1], cluster, mask);
-	  }
-	  continue;
-	}
-
-	if (i + 1 < count)
-	  buffer->merge_clusters (i, i + 2); /* Merge cluster forward. */
-
-	continue;
-      }
-
-      if (j != i)
-      {
-	info[j] = info[i];
-	pos[j] = pos[i];
-      }
-      j++;
-    }
-    buffer->len = j;
-  }
+    hb_ot_layout_delete_glyphs_inplace (buffer, _hb_glyph_info_is_default_ignorable);
 }
 
 
@@ -684,10 +640,10 @@ hb_ot_map_glyphs_fast (hb_buffer_t  *buffer)
 }
 
 static inline void
-hb_synthesize_glyph_classes (const hb_ot_shape_context_t *c)
+hb_synthesize_glyph_classes (hb_buffer_t *buffer)
 {
-  unsigned int count = c->buffer->len;
-  hb_glyph_info_t *info = c->buffer->info;
+  unsigned int count = buffer->len;
+  hb_glyph_info_t *info = buffer->info;
   for (unsigned int i = 0; i < count; i++)
   {
     hb_ot_layout_glyph_props_flags_t klass;
@@ -739,7 +695,7 @@ hb_ot_substitute_complex (const hb_ot_shape_context_t *c)
   hb_ot_layout_substitute_start (c->font, buffer);
 
   if (c->plan->fallback_glyph_classes)
-    hb_synthesize_glyph_classes (c);
+    hb_synthesize_glyph_classes (c->buffer);
 
   if (unlikely (c->plan->apply_morx))
     hb_aat_layout_substitute (c->plan, c->font, c->buffer);
@@ -748,7 +704,7 @@ hb_ot_substitute_complex (const hb_ot_shape_context_t *c)
 }
 
 static inline void
-hb_ot_substitute (const hb_ot_shape_context_t *c)
+hb_ot_substitute_pre (const hb_ot_shape_context_t *c)
 {
   hb_ot_substitute_default (c);
 
@@ -757,7 +713,21 @@ hb_ot_substitute (const hb_ot_shape_context_t *c)
   hb_ot_substitute_complex (c);
 }
 
-/* Position */
+static inline void
+hb_ot_substitute_post (const hb_ot_shape_context_t *c)
+{
+  hb_ot_hide_default_ignorables (c->buffer, c->font);
+  if (c->plan->apply_morx)
+    hb_aat_layout_remove_deleted_glyphs (c->buffer);
+
+  if (c->plan->shaper->postprocess_glyphs)
+    c->plan->shaper->postprocess_glyphs (c->plan, c->buffer, c->font);
+}
+
+
+/*
+ * Position
+ */
 
 static inline void
 adjust_mark_offsets (hb_glyph_position_t *pos)
@@ -890,9 +860,11 @@ hb_ot_position_complex (const hb_ot_shape_context_t *c)
 	break;
     }
 
-  /* Finishing off GPOS has to follow a certain order. */
+  /* Finish off.  Has to follow a certain order. */
   hb_ot_layout_position_finish_advances (c->font, c->buffer);
-  hb_ot_zero_width_default_ignorables (c);
+  hb_ot_zero_width_default_ignorables (c->buffer);
+  if (c->plan->apply_morx)
+    hb_aat_layout_zero_width_deleted_glyphs (c->buffer);
   hb_ot_layout_position_finish_offsets (c->font, c->buffer);
 
   /* The nil glyph_h_origin() func returns 0, so no need to apply it. */
@@ -983,13 +955,9 @@ hb_ot_shape_internal (hb_ot_shape_context_t *c)
   if (c->plan->shaper->preprocess_text)
     c->plan->shaper->preprocess_text (c->plan, c->buffer, c->font);
 
-  hb_ot_substitute (c);
+  hb_ot_substitute_pre (c);
   hb_ot_position (c);
-
-  hb_ot_hide_default_ignorables (c);
-
-  if (c->plan->shaper->postprocess_glyphs)
-    c->plan->shaper->postprocess_glyphs (c->plan, c->buffer, c->font);
+  hb_ot_substitute_post (c);
 
   hb_propagate_flags (c->buffer);
 

From 29c5302376ff2bc8f04b0fc0efba3ce40ef564a7 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 17:29:37 -0500
Subject: [PATCH 64/66] [morx] Minor

---
 src/hb-aat-layout-morx-table.hh | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/hb-aat-layout-morx-table.hh b/src/hb-aat-layout-morx-table.hh
index 28e3c10d050..43073270264 100644
--- a/src/hb-aat-layout-morx-table.hh
+++ b/src/hb-aat-layout-morx-table.hh
@@ -461,7 +461,7 @@ struct LigatureSubtable
     {
       hb_buffer_t *buffer = driver->buffer;
 
-      DEBUG_MSG (APPLY, nullptr, ""Ligature transition at %d"", buffer->idx);
+      DEBUG_MSG (APPLY, nullptr, ""Ligature transition at %u"", buffer->idx);
       if (entry->flags & LigatureEntryT::SetComponent)
       {
         if (unlikely (match_length >= ARRAY_LENGTH (match_positions)))
@@ -472,12 +472,12 @@ struct LigatureSubtable
 	  match_length--;
 
 	match_positions[match_length++] = buffer->out_len;
-	DEBUG_MSG (APPLY, nullptr, ""Set component at %d"", buffer->out_len);
+	DEBUG_MSG (APPLY, nullptr, ""Set component at %u"", buffer->out_len);
       }
 
       if (LigatureEntryT::performAction (entry))
       {
-	DEBUG_MSG (APPLY, nullptr, ""Perform action with %d"", match_length);
+	DEBUG_MSG (APPLY, nullptr, ""Perform action with %u"", match_length);
 	unsigned int end = buffer->out_len;
 
 	if (unlikely (!match_length))
@@ -504,7 +504,7 @@ struct LigatureSubtable
 	    break;
 	  }
 
-	  DEBUG_MSG (APPLY, nullptr, ""Moving to stack position %d"", cursor - 1);
+	  DEBUG_MSG (APPLY, nullptr, ""Moving to stack position %u"", cursor - 1);
 	  buffer->move_to (match_positions[--cursor]);
 
 	  if (unlikely (!actionData->sanitize (&c->sanitizer))) return false;
@@ -520,7 +520,7 @@ struct LigatureSubtable
 	  if (unlikely (!componentData.sanitize (&c->sanitizer))) return false;
 	  ligature_idx += componentData;
 
-	  DEBUG_MSG (APPLY, nullptr, ""Action store %d last %d"",
+	  DEBUG_MSG (APPLY, nullptr, ""Action store %u last %u"",
 		     bool (action & LigActionStore),
 		     bool (action & LigActionLast));
 	  if (action & (LigActionStore | LigActionLast))
@@ -530,7 +530,7 @@ struct LigatureSubtable
 	    if (unlikely (!ligatureData.sanitize (&c->sanitizer))) return false;
 	    hb_codepoint_t lig = ligatureData;
 
-	    DEBUG_MSG (APPLY, nullptr, ""Produced ligature %d"", lig);
+	    DEBUG_MSG (APPLY, nullptr, ""Produced ligature %u"", lig);
 	    buffer->replace_glyph (lig);
 
 	    unsigned int lig_end = match_positions[match_length - 1] + 1;

From 006386be3a069199ebaf22bcc55fa7233c62e0d5 Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 18:04:53 -0500
Subject: [PATCH 65/66] [kern] Implement negative state numbers

Let the fuzzing bots rip this code apart...
---
 src/hb-aat-layout-common.hh     | 90 ++++++++++++++++++++++++---------
 src/hb-aat-layout-kerx-table.hh | 10 ----
 2 files changed, 66 insertions(+), 34 deletions(-)

diff --git a/src/hb-aat-layout-common.hh b/src/hb-aat-layout-common.hh
index 6efc99aa4eb..6a16d70c458 100644
--- a/src/hb-aat-layout-common.hh
+++ b/src/hb-aat-layout-common.hh
@@ -430,8 +430,8 @@ struct StateTable
     CLASS_END_OF_LINE = 3,
   };
 
-  inline unsigned int new_state (unsigned int newState) const
-  { return Types::extended ? newState : (newState - stateArrayTable) / nClasses; }
+  inline int new_state (unsigned int newState) const
+  { return Types::extended ? newState : ((int) newState - (int) stateArrayTable) / nClasses; }
 
   inline unsigned int get_class (hb_codepoint_t glyph_id, unsigned int num_glyphs) const
   {
@@ -444,7 +444,7 @@ struct StateTable
     return (this+entryTable).arrayZ;
   }
 
-  inline const Entry<Extra> *get_entryZ (unsigned int state, unsigned int klass) const
+  inline const Entry<Extra> *get_entryZ (int state, unsigned int klass) const
   {
     if (unlikely (klass >= nClasses)) return nullptr;
 
@@ -452,7 +452,7 @@ struct StateTable
     const Entry<Extra> *entries = (this+entryTable).arrayZ;
 
     unsigned int entry = states[state * nClasses + klass];
-    DEBUG_MSG (APPLY, nullptr, ""e%d"", entry);
+    DEBUG_MSG (APPLY, nullptr, ""e%u"", entry);
 
     return &entries[entry];
   }
@@ -468,28 +468,69 @@ struct StateTable
     const Entry<Extra> *entries = (this+entryTable).arrayZ;
 
     unsigned int num_classes = nClasses;
+    if (unlikely (hb_unsigned_mul_overflows (num_classes, states[0].static_size)))
+      return_trace (false);
+    unsigned int row_stride = num_classes * states[0].static_size;
 
-    unsigned int num_states = 1;
+    /* Apple 'kern' table has this peculiarity:
+     *
+     * ""Because the stateTableOffset in the state table header is (strictly
+     * speaking) redundant, some 'kern' tables use it to record an initial
+     * state where that should not be StartOfText. To determine if this is
+     * done, calculate what the stateTableOffset should be. If it's different
+     * from the actual stateTableOffset, use it as the initial state.""
+     *
+     * We implement this by calling the initial state zero, but allow *negative*
+     * states if the start state indeed was not the first state.  Since the code
+     * is shared, this will also apply to 'mort' table.  The 'kerx' / 'morx'
+     * tables are not affected since those address states by index, not offset.
+     */
+
+    int min_state = 0;
+    int max_state = 0;
     unsigned int num_entries = 0;
 
-    unsigned int state = 0;
+    int state_pos = 0;
+    int state_neg = 0;
     unsigned int entry = 0;
-    while (state < num_states)
+    while (min_state < state_neg || state_pos <= max_state)
     {
-      if (unlikely (hb_unsigned_mul_overflows (num_classes, states[0].static_size)))
-	return_trace (false);
+      if (min_state < state_neg)
+      {
+	/* Negative states. */
+	if (unlikely (hb_unsigned_mul_overflows (min_state, num_classes)))
+	  return_trace (false);
+	if (unlikely (!c->check_array (&states[min_state * num_classes], -min_state, row_stride)))
+	  return_trace (false);
+	if ((c->max_ops -= state_neg - min_state) < 0)
+	  return_trace (false);
+	{ /* Sweep new states. */
+	  const HBUSHORT *stop = &states[min_state * num_classes];
+	  if (unlikely (stop > states))
+	    return_trace (false);
+	  for (const HBUSHORT *p = states; stop < p; p--)
+	    num_entries = MAX<unsigned int> (num_entries, *(p - 1) + 1);
+	  state_neg = min_state;
+	}
+      }
 
-      if (unlikely (!c->check_array (states,
-				     num_states,
-				     num_classes * states[0].static_size)))
-	return_trace (false);
-      if ((c->max_ops -= num_states - state) < 0)
-	return_trace (false);
-      { /* Sweep new states. */
-	const HBUSHORT *stop = &states[num_states * num_classes];
-	for (const HBUSHORT *p = &states[state * num_classes]; p < stop; p++)
-	  num_entries = MAX<unsigned int> (num_entries, *p + 1);
-	state = num_states;
+      if (state_pos <= max_state)
+      {
+	/* Positive states. */
+	if (unlikely (!c->check_array (states, max_state + 1, row_stride)))
+	  return_trace (false);
+	if ((c->max_ops -= max_state - state_pos + 1) < 0)
+	  return_trace (false);
+	{ /* Sweep new states. */
+	  if (unlikely (hb_unsigned_mul_overflows ((max_state + 1), num_classes)))
+	    return_trace (false);
+	  const HBUSHORT *stop = &states[(max_state + 1) * num_classes];
+	  if (unlikely (stop < states))
+	    return_trace (false);
+	  for (const HBUSHORT *p = &states[state_pos * num_classes]; p < stop; p++)
+	    num_entries = MAX<unsigned int> (num_entries, *p + 1);
+	  state_pos = max_state + 1;
+	}
       }
 
       if (unlikely (!c->check_array (entries, num_entries)))
@@ -500,8 +541,9 @@ struct StateTable
 	const Entry<Extra> *stop = &entries[num_entries];
 	for (const Entry<Extra> *p = &entries[entry]; p < stop; p++)
 	{
-	  unsigned int newState = new_state (p->newState);
-	  num_states = MAX<unsigned int> (num_states, newState + 1);
+	  int newState = new_state (p->newState);
+	  min_state = MIN (min_state, newState);
+	  max_state = MAX (max_state, newState);
 	}
 	entry = num_entries;
       }
@@ -623,14 +665,14 @@ struct StateTableDriver
     if (!c->in_place)
       buffer->clear_output ();
 
-    unsigned int state = StateTable<Types, EntryData>::STATE_START_OF_TEXT;
+    int state = StateTable<Types, EntryData>::STATE_START_OF_TEXT;
     bool last_was_dont_advance = false;
     for (buffer->idx = 0; buffer->successful;)
     {
       unsigned int klass = buffer->idx < buffer->len ?
 			   machine.get_class (buffer->info[buffer->idx].codepoint, num_glyphs) :
 			   (unsigned) StateTable<Types, EntryData>::CLASS_END_OF_TEXT;
-      DEBUG_MSG (APPLY, nullptr, ""c%d at %d"", klass, buffer->idx);
+      DEBUG_MSG (APPLY, nullptr, ""c%u at %u"", klass, buffer->idx);
       const Entry<EntryData> *entry = machine.get_entryZ (state, klass);
       if (unlikely (!entry))
 	break;
diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index 272ebfd95e3..cc828149101 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -238,16 +238,6 @@ struct KerxSubTableFormat1
 	depth (0),
 	crossStream (table->header.coverage & table->header.CrossStream) {}
 
-    /* TODO
-     * 'kern' table has this pecularity, we don't currently implement.
-     *
-     * ""Because the stateTableOffset in the state table header is (strictly
-     * speaking) redundant, some 'kern' tables use it to record an initial
-     * state where that should not be StartOfText. To determine if this is
-     * done, calculate what the stateTableOffset should be. If it's different
-     * from the actual stateTableOffset, use it as the initial state.""
-     */
-
     inline bool is_actionable (StateTableDriver<Types, EntryData> *driver HB_UNUSED,
 			       const Entry<EntryData> *entry)
     {

From b18a56a290bf5330e81019b33f15e6951dd86a8b Mon Sep 17 00:00:00 2001
From: Behdad Esfahbod <behdad@behdad.org>
Date: Wed, 7 Nov 2018 18:13:22 -0500
Subject: [PATCH 66/66] [kerx] Comment

---
 src/hb-aat-layout-kerx-table.hh | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/src/hb-aat-layout-kerx-table.hh b/src/hb-aat-layout-kerx-table.hh
index cc828149101..3cd80acfda1 100644
--- a/src/hb-aat-layout-kerx-table.hh
+++ b/src/hb-aat-layout-kerx-table.hh
@@ -292,6 +292,10 @@ struct KerxSubTableFormat1
 
 	  hb_glyph_position_t &o = buffer->pos[idx];
 
+	  /* Testing shows that CoreText only applies kern (cross-stream or not)
+	   * if none has been applied by previous subtables.  That is, it does
+	   * NOT seem to accumulate as otherwise implied by specs. */
+
 	  /* The following flag is undocumented in the spec, but described
 	   * in the 'kern' table example. */
 	  if (v == -0x8000)"
OSV-2018-89,"From bd1361434619a52b296e6a94c4188aae1a693179 Mon Sep 17 00:00:00 2001
From: Abtin Keshavarzian <abtink@google.com>
Date: Tue, 9 Oct 2018 14:16:30 -0700
Subject: [PATCH] Fix ""use after delete"" issue in on_mesh_prefix_was_removed()
 (#359)

---
 src/wpantund/NCPInstanceBase-Addresses.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/wpantund/NCPInstanceBase-Addresses.cpp b/src/wpantund/NCPInstanceBase-Addresses.cpp
index cd52e275..bc413c98 100644
--- a/src/wpantund/NCPInstanceBase-Addresses.cpp
+++ b/src/wpantund/NCPInstanceBase-Addresses.cpp
@@ -916,7 +916,7 @@ NCPInstanceBase::on_mesh_prefix_was_removed(Origin origin, const struct in6_addr
 			addr_iter = find_address_with_prefix(prefix, kOriginThreadNCP);
 
 			if (addr_iter != mUnicastAddresses.end()) {
-				const struct in6_addr &address = addr_iter->first;
+				struct in6_addr address = addr_iter->first;
 				syslog(LOG_NOTICE, ""Removing SLAAC address %s/%d from NCP"", in6_addr_to_string(address).c_str(), prefix_len);
 				remove_unicast_address_on_ncp(address, prefix_len,
 					boost::bind(&NCPInstanceBase::check_ncp_entry_update_status, this, _1, ""removing SLAAC address"", NilReturn()));"
CVE-2018-19198,"From 864f5d4c127def386dd5cc926ad96934b297f04e Mon Sep 17 00:00:00 2001
From: Sebastian Pipping <sebastian@pipping.org>
Date: Sun, 23 Sep 2018 20:07:25 +0200
Subject: [PATCH] UriQuery.c: Fix out-of-bounds-write in ComposeQuery and ...Ex

Reported by Google Autofuzz team
---
 src/UriQuery.c |  1 +
 test/test.cpp  | 32 ++++++++++++++++++++++++++++++++
 2 files changed, 33 insertions(+)

diff --git a/src/UriQuery.c b/src/UriQuery.c
index 5fd6b68c..eb221576 100644
--- a/src/UriQuery.c
+++ b/src/UriQuery.c
@@ -223,6 +223,7 @@ int URI_FUNC(ComposeQueryEngine)(URI_CHAR * dest,
 
 			/* Copy key */
 			if (firstItem == URI_TRUE) {
+				ampersandLen = 1;
 				firstItem = URI_FALSE;
 			} else {
 				write[0] = _UT('&');
diff --git a/test/test.cpp b/test/test.cpp
index 41e39125..dbb8adb5 100644
--- a/test/test.cpp
+++ b/test/test.cpp
@@ -104,6 +104,7 @@ class UriSuite : public Suite {
 		TEST_ADD(UriSuite::testQueryList)
 		TEST_ADD(UriSuite::testQueryListPair)
 		TEST_ADD(UriSuite::testQueryDissection_Bug3590761)
+		TEST_ADD(UriSuite::testQueryCompositionMathWrite_GoogleAutofuzz113244572)
 		TEST_ADD(UriSuite::testFreeCrash_Bug20080827)
 		TEST_ADD(UriSuite::testParseInvalid_Bug16)
 		TEST_ADD(UriSuite::testRangeComparison)
@@ -1749,6 +1750,37 @@ Rule                                | Example | hostSet | absPath | emptySeg
 		uriFreeQueryListA(queryList);
 	}
 
+	void testQueryCompositionMathWrite_GoogleAutofuzz113244572() {
+		UriQueryListA second = { .key = ""\x11"", .value = NULL, .next = NULL };
+		UriQueryListA first = { .key = ""\x01"", .value = ""\x02"", .next = &second };
+
+		const UriBool spaceToPlus = URI_TRUE;
+		const UriBool normalizeBreaks = URI_FALSE;  /* for factor 3 but 6 */
+
+		const int charsRequired = (3 + 1 + 3) + 1 + (3);
+
+		{
+			// Minimum space to hold everything fine
+			const char * const expected = ""%01=%02"" ""&"" ""%11"";
+			char dest[charsRequired + 1];
+			int charsWritten;
+			TEST_ASSERT(uriComposeQueryExA(dest, &first, sizeof(dest),
+					&charsWritten, spaceToPlus, normalizeBreaks)
+				== URI_SUCCESS);
+			TEST_ASSERT(! strcmp(dest, expected));
+			TEST_ASSERT(charsWritten == strlen(expected) + 1);
+		}
+
+		{
+			// Previous math failed to take ampersand into account
+			char dest[charsRequired + 1 - 1];
+			int charsWritten;
+			TEST_ASSERT(uriComposeQueryExA(dest, &first, sizeof(dest),
+					&charsWritten, spaceToPlus, normalizeBreaks)
+				== URI_ERROR_OUTPUT_TOO_LARGE);
+		}
+	}
+
 	void testFreeCrash_Bug20080827() {
 		char const * const sourceUri = ""abc"";
 		char const * const baseUri = ""http://www.example.org/"";"
CVE-2018-16451,"From 96480ab95308cd9234b4f09b175ebf60e17792c6 Mon Sep 17 00:00:00 2001
From: Francois-Xavier Le Bail <devel.fx.lebail@orange.fr>
Date: Fri, 3 Nov 2017 18:21:27 +0100
Subject: [PATCH] (for 4.9.3) SMB: Add two missing bounds checks

---
 print-smb.c | 11 ++++++++---
 1 file changed, 8 insertions(+), 3 deletions(-)

diff --git a/print-smb.c b/print-smb.c
index 5af01aea0..944b8d28a 100644
--- a/print-smb.c
+++ b/print-smb.c
@@ -371,16 +371,21 @@ print_trans(netdissect_options *ndo,
     ND_PRINT((ndo, ""smb_bcc=%u\n"", bcc));
     if (bcc > 0) {
 	smb_fdata(ndo, data1 + 2, f2, maxbuf - (paramlen + datalen), unicodestr);
-
-	if (strcmp((const char *)(data1 + 2), ""\\MAILSLOT\\BROWSE"") == 0) {
+#define MAILSLOT_BROWSE_STR ""\\MAILSLOT\\BROWSE""
+	ND_TCHECK2(*(data1 + 2), strlen(MAILSLOT_BROWSE_STR) + 1);
+	if (strcmp((const char *)(data1 + 2), MAILSLOT_BROWSE_STR) == 0) {
 	    print_browse(ndo, param, paramlen, data, datalen);
 	    return;
 	}
+#undef MAILSLOT_BROWSE_STR
 
-	if (strcmp((const char *)(data1 + 2), ""\\PIPE\\LANMAN"") == 0) {
+#define PIPE_LANMAN_STR ""\\PIPE\\LANMAN""
+	ND_TCHECK2(*(data1 + 2), strlen(PIPE_LANMAN_STR) + 1);
+	if (strcmp((const char *)(data1 + 2), PIPE_LANMAN_STR) == 0) {
 	    print_ipc(ndo, param, paramlen, data, datalen);
 	    return;
 	}
+#undef PIPE_LANMAN_STR
 
 	if (paramlen)
 	    smb_fdata(ndo, param, f3, min(param + paramlen, maxbuf), unicodestr);"
CVE-2018-1000207,"From f6b236fe3f3d36d00ca33cfa05fe12014484f6d4 Mon Sep 17 00:00:00 2001
From: Ivan Klimchuk <ivan.klimchuk@1pt.com>
Date: Sat, 7 Jul 2018 11:46:19 +0300
Subject: [PATCH 1/4] Some code cleanup before fix

---
 core/model/phpthumb/modphpthumb.class.php | 40 ++++++++++++++---------
 1 file changed, 24 insertions(+), 16 deletions(-)

diff --git a/core/model/phpthumb/modphpthumb.class.php b/core/model/phpthumb/modphpthumb.class.php
index 28f49e4c650..e369b99852a 100644
--- a/core/model/phpthumb/modphpthumb.class.php
+++ b/core/model/phpthumb/modphpthumb.class.php
@@ -1,9 +1,7 @@
 <?php
-/**
- * @package modx
- * @subpackage phpthumb
- */
-require_once MODX_CORE_PATH.'model/phpthumb/phpthumb.class.php';
+
+require_once MODX_CORE_PATH . 'model/phpthumb/phpthumb.class.php';
+
 /**
  * Helper class to extend phpThumb and simplify thumbnail generation process
  * since phpThumb class is overly convoluted and doesn't do enough.
@@ -11,27 +9,36 @@
  * @package modx
  * @subpackage phpthumb
  */
-class modPhpThumb extends phpThumb {
-
+class modPhpThumb extends phpThumb
+{
     public $modx;
-    public $config;
 
-    function __construct(modX &$modx,array $config = array()) {
+    public $config = array();
+
+    /**
+     * modPhpThumb constructor.
+     * @param modX $modx
+     * @param array $config
+     */
+    public function __construct(modX &$modx, array $config = array())
+    {
         $this->modx =& $modx;
-        $this->config = array_merge(array(
+        $this->config = $config;
 
-        ),$config);
         parent::__construct();
     }
 
     /**
      * Setup some site-wide phpthumb options from modx config
      */
-    public function initialize() {
+    public function initialize()
+    {
         $cachePath = $this->modx->getOption('core_path',null,MODX_CORE_PATH).'cache/phpthumb/';
-        if (!is_dir($cachePath)) $this->modx->cacheManager->writeTree($cachePath);
-        $this->setParameter('config_cache_directory',$cachePath);
-        $this->setParameter('config_temp_directory',$cachePath);
+        if (!is_dir($cachePath)) {
+            $this->modx->cacheManager->writeTree($cachePath);
+        }
+        $this->setParameter('config_cache_directory', $cachePath);
+        $this->setParameter('config_temp_directory', $cachePath);
         $this->setCacheDirectory();
 
         $this->setParameter('config_allow_src_above_docroot',(boolean)$this->modx->getOption('phpthumb_allow_src_above_docroot',$this->config,false));
@@ -69,6 +76,7 @@ public function initialize() {
         foreach ($this->config as $property => $value) {
             $this->setParameter($property,$value);
         }
+
         return true;
     }
 
@@ -317,5 +325,5 @@ function ResolveFilenameToAbsolute($filename) {
         }
         return $AbsoluteFilename;
     }
-
 }
+

From a43671e5dcd4f0d06594c295f8a8d5e766345639 Mon Sep 17 00:00:00 2001
From: Ivan Klimchuk <ivan.klimchuk@1pt.com>
Date: Sat, 7 Jul 2018 11:50:52 +0300
Subject: [PATCH 2/4] Limit parameters incoming from users to only allowed from
 phpthumb

---
 core/model/phpthumb/modphpthumb.class.php | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/core/model/phpthumb/modphpthumb.class.php b/core/model/phpthumb/modphpthumb.class.php
index e369b99852a..9620d0b54b2 100644
--- a/core/model/phpthumb/modphpthumb.class.php
+++ b/core/model/phpthumb/modphpthumb.class.php
@@ -72,9 +72,22 @@ public function initialize()
             $this->setParameter('config_document_root',$documentRoot);
         }
 
+        // Only public parameters of phpThumb should be allowed to pass from user input.
+        // List properties between START PARAMETERS and START PARAMETERS in src/core/model/phpthumb/phpthumb.class.php
+        $allowed = array(
+            'src', 'new', 'w', 'h', 'wp', 'hp', 'wl', 'hl', 'ws', 'hs',
+            'f', 'q', 'sx', 'sy', 'sw', 'sh', 'zc', 'bc', 'bg', 'fltr',
+            'goto', 'err', 'xto', 'ra', 'ar', 'aoe', 'far', 'iar', 'maxb', 'down',
+            'md5s', 'sfn', 'dpi', 'sia', 'phpThumbDebug'
+        );
+
         /* iterate through properties */
         foreach ($this->config as $property => $value) {
-            $this->setParameter($property,$value);
+            if (!in_array($property, $allowed)) {
+                $this->modx->log(modX::LOG_LEVEL_WARN,""Detected attempt of using private parameter `$property` (for internal usage) of phpThumb that not allowed and insecure"");
+                continue;
+            }
+            $this->setParameter($property, $value);
         }
 
         return true;

From d0d8f5d73dbbc26cd82794eb1dbdd371f309273c Mon Sep 17 00:00:00 2001
From: Ivan Klimchuk <ivan.klimchuk@1pt.com>
Date: Sat, 7 Jul 2018 12:02:49 +0300
Subject: [PATCH 3/4] Returns the missed in the past the considering to
 phpthumb_imagemagick_path system setting

---
 core/model/phpthumb/modphpthumb.class.php | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/core/model/phpthumb/modphpthumb.class.php b/core/model/phpthumb/modphpthumb.class.php
index 9620d0b54b2..eed80f63485 100644
--- a/core/model/phpthumb/modphpthumb.class.php
+++ b/core/model/phpthumb/modphpthumb.class.php
@@ -58,13 +58,15 @@ public function initialize()
         $this->setParameter('config_nooffsitelink_erase_image',(boolean)$this->modx->getOption('phpthumb_nooffsitelink_erase_image',$this->config,true));
         $this->setParameter('config_nooffsitelink_watermark_src',(string)$this->modx->getOption('phpthumb_nooffsitelink_watermark_src',$this->config,''));
         $this->setParameter('config_nooffsitelink_text_message',(string)$this->modx->getOption('phpthumb_nooffsitelink_text_message',$this->config,'Off-server linking is not allowed'));
+        $this->setParameter('config_ttf_directory', (string)$this->modx->getOption('core_path', $this->config, MODX_CORE_PATH) . 'model/phpthumb/fonts/');
+        $this->setParameter('config_imagemagick_path', (string)$this->modx->getOption('phpthumb_imagemagick_path', $this->config, null));
+
         $this->setParameter('cache_source_enabled',(boolean)$this->modx->getOption('phpthumb_cache_source_enabled',$this->config,false));
         $this->setParameter('cache_source_directory',$cachePath.'source/');
         $this->setParameter('allow_local_http_src',true);
         $this->setParameter('zc',$this->modx->getOption('zc',$_REQUEST,$this->modx->getOption('phpthumb_zoomcrop',$this->config,0)));
         $this->setParameter('far',$this->modx->getOption('far',$_REQUEST,$this->modx->getOption('phpthumb_far',$this->config,'C')));
         $this->setParameter('cache_directory_depth',4);
-        $this->setParameter('config_ttf_directory',$this->modx->getOption('core_path',$this->config,MODX_CORE_PATH).'model/phpthumb/fonts/');
 
         $documentRoot = $this->modx->getOption('phpthumb_document_root',$this->config, '');
         if ($documentRoot == '') $documentRoot = $this->modx->getOption('base_path', null, '');

From a55c4028cea58d922456d4dbd5970ead28a3ae8b Mon Sep 17 00:00:00 2001
From: Ivan Klimchuk <ivan.klimchuk@1pt.com>
Date: Sat, 7 Jul 2018 17:06:23 +0300
Subject: [PATCH 4/4] Added strict mode for in_array

---
 core/model/phpthumb/modphpthumb.class.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/core/model/phpthumb/modphpthumb.class.php b/core/model/phpthumb/modphpthumb.class.php
index eed80f63485..ff81eabf107 100644
--- a/core/model/phpthumb/modphpthumb.class.php
+++ b/core/model/phpthumb/modphpthumb.class.php
@@ -85,7 +85,7 @@ public function initialize()
 
         /* iterate through properties */
         foreach ($this->config as $property => $value) {
-            if (!in_array($property, $allowed)) {
+            if (!in_array($property, $allowed, true)) {
                 $this->modx->log(modX::LOG_LEVEL_WARN,""Detected attempt of using private parameter `$property` (for internal usage) of phpThumb that not allowed and insecure"");
                 continue;
             }"
CVE-2018-5816,"From 1d8d1b452e5dc74033ee9f846081a0efb616cc39 Mon Sep 17 00:00:00 2001
From: Alex Tutubalin <lexa@lexa.ru>
Date: Mon, 11 Jun 2018 13:05:32 +0300
Subject: [PATCH] reject broken/crafted NOKIARAW files

---
 dcraw/dcraw.c             | 5 ++++-
 internal/dcraw_common.cpp | 5 ++++-
 2 files changed, 8 insertions(+), 2 deletions(-)

diff --git a/dcraw/dcraw.c b/dcraw/dcraw.c
index 364869cf..c22f98a9 100644
--- a/dcraw/dcraw.c
+++ b/dcraw/dcraw.c
@@ -15738,7 +15738,10 @@ void CLASS identify()
 #endif
 	switch (tiff_bps = i*8 / (width * height)) {
 	case  8: load_raw = &CLASS eight_bit_load_raw;  break;
-	case 10: load_raw = &CLASS nokia_load_raw;
+	case 10: load_raw = &CLASS nokia_load_raw; break;
+#ifdef LIBRAW_LIBRARY_BUILD
+        case 0:  throw LIBRAW_EXCEPTION_IO_CORRUPT; break;
+#endif
 	}
 	raw_height = height + (top_margin = i / (width * tiff_bps/8) - height);
 	mask[0][3] = 1;
diff --git a/internal/dcraw_common.cpp b/internal/dcraw_common.cpp
index 041318c5..7cb6c15c 100644
--- a/internal/dcraw_common.cpp
+++ b/internal/dcraw_common.cpp
@@ -14399,7 +14399,10 @@ void CLASS identify()
 #endif
 	switch (tiff_bps = i*8 / (width * height)) {
 	case  8: load_raw = &CLASS eight_bit_load_raw;  break;
-	case 10: load_raw = &CLASS nokia_load_raw;
+	case 10: load_raw = &CLASS nokia_load_raw; break;
+#ifdef LIBRAW_LIBRARY_BUILD
+        case 0:  throw LIBRAW_EXCEPTION_IO_CORRUPT; break;
+#endif
 	}
 	raw_height = height + (top_margin = i / (width * tiff_bps/8) - height);
 	mask[0][3] = 1;"
CVE-2018-19497,"From dd679ad1d855e7f69a887eb343bb53d49dc664e7 Mon Sep 17 00:00:00 2001
From: Jordy Zomer <zome8499@student.alfa-college.nl>
Date: Sat, 24 Nov 2018 12:19:38 +0100
Subject: [PATCH 1/3] Fix CVE-2018-19497.

An issue was discovered in The Sleuth Kit (TSK) through 4.6.4.
The ""tsk_getu16(hfs->fs_info.endian, &rec_buf[rec_off2])"" call in hfs_dir_open_meta_cb in
tsk/fs/hfs_dent.c does not properly check boundaries. This results in
a crash (SEGV on unknown address
READ memory access)
when reading too much in the destination buffer.
---
 tsk/fs/hfs.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/tsk/fs/hfs.c b/tsk/fs/hfs.c
index 00f1720b1b..0dec507165 100644
--- a/tsk/fs/hfs.c
+++ b/tsk/fs/hfs.c
@@ -956,7 +956,8 @@ hfs_cat_traverse(HFS_INFO * hfs,
                 key = (hfs_btree_key_cat *) & node[rec_off];
 
                 keylen = 2 + tsk_getu16(hfs->fs_info.endian, key->key_len);
-                if ((keylen) > nodesize) {
+               
+                if (keylen > nodesize - rec_off) {
                     tsk_error_set_errno(TSK_ERR_FS_GENFS);
                     tsk_error_set_errstr
                         (""hfs_cat_traverse: length of key %d in index node %d too large (%d vs %""

From fb2bc0ad693db852fac1dcc77a072aeabe106ac8 Mon Sep 17 00:00:00 2001
From: Jordy Zomer <zome8499@student.alfa-college.nl>
Date: Sat, 24 Nov 2018 12:37:09 +0100
Subject: [PATCH 2/3] fix length in printf of nodesize

Also fix the length in printf next to comit dd679ad1d855e7f69a887eb343bb53d49dc664e7
---
 tsk/fs/hfs.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/tsk/fs/hfs.c b/tsk/fs/hfs.c
index 0dec507165..4f7c0679a8 100644
--- a/tsk/fs/hfs.c
+++ b/tsk/fs/hfs.c
@@ -961,7 +961,7 @@ hfs_cat_traverse(HFS_INFO * hfs,
                     tsk_error_set_errno(TSK_ERR_FS_GENFS);
                     tsk_error_set_errstr
                         (""hfs_cat_traverse: length of key %d in index node %d too large (%d vs %""
-                        PRIu16 "")"", rec, cur_node, keylen, nodesize);
+                        PRIu16 "")"", rec, cur_node, keylen, nodesize - rec_off);
                     free(node);
                     return 1;
                 }

From 8242588f4354339d9cb1ad82622e7c16c55391c9 Mon Sep 17 00:00:00 2001
From: Jordy Zomer <zome8499@student.alfa-college.nl>
Date: Sat, 24 Nov 2018 12:47:23 +0100
Subject: [PATCH 3/3] UPDATE on CVE-2018-19497.

make it >= because if keylen == nodesize - rec_off it's already past it's destination.
Also fix the sprintf
---
 tsk/fs/hfs.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/tsk/fs/hfs.c b/tsk/fs/hfs.c
index 4f7c0679a8..bb3819ada9 100644
--- a/tsk/fs/hfs.c
+++ b/tsk/fs/hfs.c
@@ -957,11 +957,11 @@ hfs_cat_traverse(HFS_INFO * hfs,
 
                 keylen = 2 + tsk_getu16(hfs->fs_info.endian, key->key_len);
                
-                if (keylen > nodesize - rec_off) {
+                if (keylen >= nodesize - rec_off) {
                     tsk_error_set_errno(TSK_ERR_FS_GENFS);
                     tsk_error_set_errstr
                         (""hfs_cat_traverse: length of key %d in index node %d too large (%d vs %""
-                        PRIu16 "")"", rec, cur_node, keylen, nodesize - rec_off);
+                        PRIu16 "")"", rec, cur_node, keylen, (nodesize - rec_off));
                     free(node);
                     return 1;
                 }"
OSV-2018-417,"From 812a820e234fd3cb1f857d16b6b5c51ed0b1201d Mon Sep 17 00:00:00 2001
From: Automated Commit <automated@calamity.org.uk>
Date: Wed, 29 Aug 2018 03:00:09 +0000
Subject: [PATCH] Update core from master

---
 libs/core | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libs/core b/libs/core
index e128f4e1b890..2d99acd7ec86 160000
--- a/libs/core
+++ b/libs/core
@@ -1 +1 @@
-Subproject commit e128f4e1b8904d47561700892843f07d5d1160db
+Subproject commit 2d99acd7ec8659c65454bd6167aac3e361cef983"
CVE-2018-12520,"From 30610bda60cbfc058f90a1c0a17d0e8f4516221a Mon Sep 17 00:00:00 2001
From: Luca Deri <deri@ntop.org>
Date: Sun, 17 Jun 2018 15:24:25 +0200
Subject: [PATCH] Added code to randomize values returned by rand()

---
 src/HTTPserver.cpp | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/HTTPserver.cpp b/src/HTTPserver.cpp
index f954a4b942c1..68cffcfb5bad 100644
--- a/src/HTTPserver.cpp
+++ b/src/HTTPserver.cpp
@@ -864,7 +864,12 @@ HTTPserver::HTTPserver(const char *_docs_dir, const char *_scripts_dir) {
   bool use_http = true;
   struct stat statsBuf;
   int stat_rc;
+  struct timeval tv;
 
+  /* Randomize data */
+  gettimeofday(&tv, NULL);
+  srand(tv.tv_sec + tv.tv_usec);
+  
   static char *http_options[] = {
     (char*)""listening_ports"", ports,
     (char*)""enable_directory_listing"", (char*)""no"","
CVE-2018-12322,"From bbb4af56003c1afdad67af0c4339267ca38b1017 Mon Sep 17 00:00:00 2001
From: pancake <pancake@nopcode.org>
Date: Mon, 11 Jun 2018 03:03:25 +0200
Subject: [PATCH] Fix #10294 - crash in r2_hoobr__6502_op

---
 libr/anal/p/anal_6502.c | 12 +++++++++---
 1 file changed, 9 insertions(+), 3 deletions(-)

diff --git a/libr/anal/p/anal_6502.c b/libr/anal/p/anal_6502.c
index 6d002447722c5..770980f2f2b21 100644
--- a/libr/anal/p/anal_6502.c
+++ b/libr/anal/p/anal_6502.c
@@ -682,9 +682,15 @@ static int _6502_op(RAnal *anal, RAnalOp *op, ut64 addr, const ut8 *data, int le
 		op->cycles = 2;
 		op->failcycles = 3;
 		op->type = R_ANAL_OP_TYPE_CJMP;
-		if (data[1] <= 127)
-			op->jump = addr + data[1] + op->size;
-		else	op->jump = addr - (256 - data[1]) + op->size;
+		if (len > 1) {
+			if (data[1] <= 127) {
+				op->jump = addr + data[1] + op->size;
+			} else {
+				op->jump = addr - (256 - data[1]) + op->size;
+			}
+		} else {
+			op->jump = addr;
+		}
 		op->fail = addr + op->size;
 		// FIXME: add a type of conditional
 		// op->cond = R_ANAL_COND_LE;"
CVE-2018-8789,"From 2ee663f39dc8dac3d9988e847db19b2d7e3ac8c6 Mon Sep 17 00:00:00 2001
From: Armin Novak <armin.novak@thincast.com>
Date: Mon, 22 Oct 2018 16:00:03 +0200
Subject: [PATCH] Fixed CVE-2018-8789

Thanks to Eyal Itkin from Check Point Software Technologies.
---
 winpr/libwinpr/sspi/NTLM/ntlm_message.c | 24 +++++++++++++-----------
 1 file changed, 13 insertions(+), 11 deletions(-)

diff --git a/winpr/libwinpr/sspi/NTLM/ntlm_message.c b/winpr/libwinpr/sspi/NTLM/ntlm_message.c
index d785604976e1..ab42dc7377f0 100644
--- a/winpr/libwinpr/sspi/NTLM/ntlm_message.c
+++ b/winpr/libwinpr/sspi/NTLM/ntlm_message.c
@@ -74,7 +74,7 @@ static const char* const NTLM_NEGOTIATE_STRINGS[] =
 	""NTLMSSP_NEGOTIATE_UNICODE""
 };
 
-void ntlm_print_negotiate_flags(UINT32 flags)
+static void ntlm_print_negotiate_flags(UINT32 flags)
 {
 	int i;
 	const char* str;
@@ -90,7 +90,7 @@ void ntlm_print_negotiate_flags(UINT32 flags)
 	}
 }
 
-int ntlm_read_message_header(wStream* s, NTLM_MESSAGE_HEADER* header)
+static int ntlm_read_message_header(wStream* s, NTLM_MESSAGE_HEADER* header)
 {
 	if (Stream_GetRemainingLength(s) < 12)
 		return -1;
@@ -104,19 +104,19 @@ int ntlm_read_message_header(wStream* s, NTLM_MESSAGE_HEADER* header)
 	return 1;
 }
 
-void ntlm_write_message_header(wStream* s, NTLM_MESSAGE_HEADER* header)
+static void ntlm_write_message_header(wStream* s, NTLM_MESSAGE_HEADER* header)
 {
 	Stream_Write(s, header->Signature, sizeof(NTLM_SIGNATURE));
 	Stream_Write_UINT32(s, header->MessageType);
 }
 
-void ntlm_populate_message_header(NTLM_MESSAGE_HEADER* header, UINT32 MessageType)
+static void ntlm_populate_message_header(NTLM_MESSAGE_HEADER* header, UINT32 MessageType)
 {
 	CopyMemory(header->Signature, NTLM_SIGNATURE, sizeof(NTLM_SIGNATURE));
 	header->MessageType = MessageType;
 }
 
-int ntlm_read_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields)
+static int ntlm_read_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields)
 {
 	if (Stream_GetRemainingLength(s) < 8)
 		return -1;
@@ -127,7 +127,7 @@ int ntlm_read_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields)
 	return 1;
 }
 
-void ntlm_write_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields)
+static void ntlm_write_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields)
 {
 	if (fields->MaxLen < 1)
 		fields->MaxLen = fields->Len;
@@ -137,11 +137,13 @@ void ntlm_write_message_fields(wStream* s, NTLM_MESSAGE_FIELDS* fields)
 	Stream_Write_UINT32(s, fields->BufferOffset); /* BufferOffset (4 bytes) */
 }
 
-int ntlm_read_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields)
+static int ntlm_read_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields)
 {
 	if (fields->Len > 0)
 	{
-		if ((fields->BufferOffset + fields->Len) > Stream_Length(s))
+		const UINT64 offset = (UINT64)fields->BufferOffset + (UINT64)fields->Len;
+
+		if (offset > Stream_Length(s))
 			return -1;
 
 		fields->Buffer = (PBYTE) malloc(fields->Len);
@@ -156,7 +158,7 @@ int ntlm_read_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields)
 	return 1;
 }
 
-void ntlm_write_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields)
+static void ntlm_write_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields)
 {
 	if (fields->Len > 0)
 	{
@@ -165,7 +167,7 @@ void ntlm_write_message_fields_buffer(wStream* s, NTLM_MESSAGE_FIELDS* fields)
 	}
 }
 
-void ntlm_free_message_fields_buffer(NTLM_MESSAGE_FIELDS* fields)
+static void ntlm_free_message_fields_buffer(NTLM_MESSAGE_FIELDS* fields)
 {
 	if (fields)
 	{
@@ -180,7 +182,7 @@ void ntlm_free_message_fields_buffer(NTLM_MESSAGE_FIELDS* fields)
 	}
 }
 
-void ntlm_print_message_fields(NTLM_MESSAGE_FIELDS* fields, const char* name)
+static void ntlm_print_message_fields(NTLM_MESSAGE_FIELDS* fields, const char* name)
 {
 	WLog_DBG(TAG, ""%s (Len: %""PRIu16"" MaxLen: %""PRIu16"" BufferOffset: %""PRIu32"")"",
 	         name, fields->Len, fields->MaxLen, fields->BufferOffset);"
CVE-2018-11593,"From bed844f109b6c222816740555068de2e101e8018 Mon Sep 17 00:00:00 2001
From: Gordon Williams <gw@pur3.co.uk>
Date: Mon, 21 May 2018 10:44:08 +0100
Subject: [PATCH] remove strncpy usage as it's effectively useless, replace
 with an assertion since fn is only used internally (fix #1426)

---
 src/jslex.c | 27 ++++++++++++++-------------
 1 file changed, 14 insertions(+), 13 deletions(-)

diff --git a/src/jslex.c b/src/jslex.c
index 190209c51b..c3e90d5cb7 100644
--- a/src/jslex.c
+++ b/src/jslex.c
@@ -713,6 +713,7 @@ void jslFunctionCharAsString(unsigned char ch, char *str, size_t len) {
 }
 
 void jslTokenAsString(int token, char *str, size_t len) {
+  assert(len>28); // size of largest string
   // see JS_ERROR_TOKEN_BUF_SIZE
   if (token>32 && token<128) {
     assert(len>=4);
@@ -723,18 +724,19 @@ void jslTokenAsString(int token, char *str, size_t len) {
     return;
   }
 
+
   switch (token) {
-  case LEX_EOF : strncpy(str, ""EOF"", len); return;
-  case LEX_ID : strncpy(str, ""ID"", len); return;
-  case LEX_INT : strncpy(str, ""INT"", len); return;
-  case LEX_FLOAT : strncpy(str, ""FLOAT"", len); return;
-  case LEX_STR : strncpy(str, ""STRING"", len); return;
-  case LEX_UNFINISHED_STR : strncpy(str, ""UNFINISHED STRING"", len); return;
-  case LEX_TEMPLATE_LITERAL : strncpy(str, ""TEMPLATE LITERAL"", len); return;
-  case LEX_UNFINISHED_TEMPLATE_LITERAL : strncpy(str, ""UNFINISHED TEMPLATE LITERAL"", len); return;
-  case LEX_REGEX : strncpy(str, ""REGEX"", len); return;
-  case LEX_UNFINISHED_REGEX : strncpy(str, ""UNFINISHED REGEX"", len); return;
-  case LEX_UNFINISHED_COMMENT : strncpy(str, ""UNFINISHED COMMENT"", len); return;
+  case LEX_EOF : strcpy(str, ""EOF""); return;
+  case LEX_ID : strcpy(str, ""ID""); return;
+  case LEX_INT : strcpy(str, ""INT""); return;
+  case LEX_FLOAT : strcpy(str, ""FLOAT""); return;
+  case LEX_STR : strcpy(str, ""STRING""); return;
+  case LEX_UNFINISHED_STR : strcpy(str, ""UNFINISHED STRING""); return;
+  case LEX_TEMPLATE_LITERAL : strcpy(str, ""TEMPLATE LITERAL""); return;
+  case LEX_UNFINISHED_TEMPLATE_LITERAL : strcpy(str, ""UNFINISHED TEMPLATE LITERAL""); return;
+  case LEX_REGEX : strcpy(str, ""REGEX""); return;
+  case LEX_UNFINISHED_REGEX : strcpy(str, ""UNFINISHED REGEX""); return;
+  case LEX_UNFINISHED_COMMENT : strcpy(str, ""UNFINISHED COMMENT""); return;
   }
   if (token>=_LEX_OPERATOR_START && token<_LEX_R_LIST_END) {
     const char tokenNames[] =
@@ -809,11 +811,10 @@ void jslTokenAsString(int token, char *str, size_t len) {
       n--; // next token
     }
     assert(n==0);
-    strncpy(str, &tokenNames[p], len);
+    strcpy(str, &tokenNames[p]);
     return;
   }
 
-  assert(len>=10);
   espruino_snprintf(str, len, ""?[%d]"", token);
 }"
CVE-2018-6009,"From 6c0540aa2d6e0fe0fa89e4fd35bba4be5d6cece7 Mon Sep 17 00:00:00 2001
From: Alexander Makarov <sam@rmcreative.ru>
Date: Sun, 14 Jan 2018 02:13:24 +0300
Subject: [PATCH] Fixes #15496: CSRF token is now regenerated on changing
 identity

---
 framework/CHANGELOG.md              | 2 ++
 framework/web/User.php              | 3 +++
 tests/framework/helpers/UrlTest.php | 1 +
 3 files changed, 6 insertions(+)

diff --git a/framework/CHANGELOG.md b/framework/CHANGELOG.md
index 0565af452f2..4c8f340ea5c 100644
--- a/framework/CHANGELOG.md
+++ b/framework/CHANGELOG.md
@@ -3,6 +3,8 @@ Yii Framework 2 Change Log
 
 2.0.14 under development
 ------------------------
+
+- Enh #15496: CSRF token is now regenerated on changing identity (samdark, rhertogh)
 - Enh #15417: Added `yii\validators\FileValidator::$minFiles` (vladis84)
 - Bug #8983: Only truncate the original log file for rotation (matthewyang, developeruz)
 - Bug #14157: Add support for loading default value `CURRENT_TIMESTAMP` of MySQL `datetime` field (rossoneri)
diff --git a/framework/web/User.php b/framework/web/User.php
index 6104d2d01e8..35314934d63 100644
--- a/framework/web/User.php
+++ b/framework/web/User.php
@@ -641,6 +641,9 @@ public function switchIdentity($identity, $duration = 0)
                 $this->sendIdentityCookie($identity, $duration);
             }
         }
+
+        // regenerate CSRF token
+        Yii::$app->getRequest()->getCsrfToken(true);
     }
 
     /**
diff --git a/tests/framework/helpers/UrlTest.php b/tests/framework/helpers/UrlTest.php
index a9e6e91e337..cf57f15078c 100644
--- a/tests/framework/helpers/UrlTest.php
+++ b/tests/framework/helpers/UrlTest.php
@@ -29,6 +29,7 @@ protected function setUp()
             'components' => [
                 'request' => [
                     'class' => 'yii\web\Request',
+                    'cookieValidationKey' => '123',
                     'scriptUrl' => '/base/index.php',
                     'hostInfo' => 'http://example.com/',
                     'url' => '/base/index.php&r=site%2Fcurrent&id=42',"
OSV-2018-97,"From c31092ab34641072606f854408eb1bea18ed2507 Mon Sep 17 00:00:00 2001
From: Michiharu Ariza <ariza@adobe.com>
Date: Wed, 5 Dec 2018 17:04:55 -0800
Subject: [PATCH] sanitize variationStore in CFF2 against its size

---
 src/hb-ot-cff2-table.hh | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/hb-ot-cff2-table.hh b/src/hb-ot-cff2-table.hh
index 178acf0b170..de2b1b22447 100644
--- a/src/hb-ot-cff2-table.hh
+++ b/src/hb-ot-cff2-table.hh
@@ -115,7 +115,7 @@ struct CFF2VariationStore
   inline bool sanitize (hb_sanitize_context_t *c) const
   {
     TRACE_SANITIZE (this);
-    return_trace (likely (c->check_struct (this)) && varStore.sanitize (c));
+    return_trace (likely (c->check_struct (this)) && c->check_range (&varStore, size) && varStore.sanitize (c));
   }
 
   inline bool serialize (hb_serialize_context_t *c, const CFF2VariationStore *varStore)"
CVE-2018-6550,"From 388ab412035474068758df6b07e7e06852f3747b Mon Sep 17 00:00:00 2001
From: Nikhil Mittal <nikhil.mittal641@gmail.com>
Date: Wed, 24 Jan 2018 15:51:11 +0530
Subject: [PATCH] Prevent Stored XSS Vulnerability

---
 plugins/box/pages/pages.plugin.php | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/plugins/box/pages/pages.plugin.php b/plugins/box/pages/pages.plugin.php
index 88afb075..3e50ce40 100644
--- a/plugins/box/pages/pages.plugin.php
+++ b/plugins/box/pages/pages.plugin.php
@@ -283,7 +283,8 @@ public static function content($slug = '')
      */
     public static function title()
     {
-        return !empty(Pages::$page['meta_title']) ? Pages::$page['meta_title'] : Pages::$page['title'];
+       $test = !empty(Pages::$page['meta_title']) ? Pages::$page['meta_title'] : Pages::$page['title'];
+       return htmlspecialchars($test);
     }
 
     /**"
CVE-2018-10571,"From 699e3c2ef68545357cac714505df1419b8bf2051 Mon Sep 17 00:00:00 2001
From: Brady Miller <brady.g.miller@gmail.com>
Date: Thu, 22 Mar 2018 08:05:32 -0700
Subject: [PATCH] security fixes (#1519)

---
 interface/billing/get_claim_file.php          | 16 +++--
 interface/billing/sl_eob_process.php          | 56 ++++++++-------
 interface/billing/sl_eob_search.php           | 51 ++++++--------
 .../find_code_popup.php                       | 70 +++++++++----------
 .../find_immunization_popup.php               | 64 ++++++++---------
 interface/fax/fax_dispatch.php                |  9 ++-
 interface/forms/CAMOS/view.php                | 36 +++++-----
 interface/forms/reviewofs/view.php            |  4 +-
 interface/main/finder/finder_navigation.php   | 15 +++-
 interface/orders/types.php                    | 18 +++--
 interface/patient_file/letter.php             | 58 ++++++++++-----
 .../transaction/add_transaction.php           |  4 +-
 library/custom_template/personalize.php       | 39 ++++-------
 library/sanitize.inc.php                      | 16 ++---
 14 files changed, 243 insertions(+), 213 deletions(-)

diff --git a/interface/billing/get_claim_file.php b/interface/billing/get_claim_file.php
index 4af5c0f3acc..2b1a4b27ffd 100644
--- a/interface/billing/get_claim_file.php
+++ b/interface/billing/get_claim_file.php
@@ -1,8 +1,14 @@
 <?php
-// This program is free software; you can redistribute it and/or
-// modify it under the terms of the GNU General Public License
-// as published by the Free Software Foundation; either version 2
-// of the License, or (at your option) any later version.
+/**
+ * get_claim_file.php
+ *
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ */
+
 
 require_once(dirname(__FILE__) . ""/../globals.php"");
 require_once $GLOBALS['OE_SITE_DIR'] . ""/config.php"";
@@ -22,7 +28,7 @@
 $fname = $claim_file_dir . $fname;
 
 if (!file_exists($fname)) {
-    echo xl(""The claim file: "") . $_GET['key'] . xl("" could not be accessed."");
+    echo xl(""The claim file: "") . text($_GET['key']) . xl("" could not be accessed."");
 } else {
     $fp = fopen($fname, 'r');
 
diff --git a/interface/billing/sl_eob_process.php b/interface/billing/sl_eob_process.php
index cc134f875bb..c66669d23bc 100644
--- a/interface/billing/sl_eob_process.php
+++ b/interface/billing/sl_eob_process.php
@@ -1,15 +1,19 @@
 <?php
-    // Copyright (C) 2006-2010 Rod Roark <rod@sunsetsystems.com>
-    //
-    // This program is free software; you can redistribute it and/or
-    // modify it under the terms of the GNU General Public License
-    // as published by the Free Software Foundation; either version 2
-    // of the License, or (at your option) any later version.
-
-    // This processes X12 835 remittances and produces a report.
-
-    // Buffer all output so we can archive it to a file.
-    ob_start();
+/**
+ * This processes X12 835 remittances and produces a report.
+ *
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Rod Roark <rod@sunsetsystems.com>
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2006-2010 Rod Roark <rod@sunsetsystems.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ */
+
+
+// Buffer all output so we can archive it to a file.
+ob_start();
 
 require_once(""../globals.php"");
 require_once(""$srcdir/invoice_summary.inc.php"");
@@ -20,15 +24,15 @@
 require_once(""remark_codes.php"");
 require_once(""$srcdir/billing.inc"");
 
-    $debug = $_GET['debug'] ? 1 : 0; // set to 1 for debugging mode
-    $paydate = parse_date($_GET['paydate']);
-    $encount = 0;
+$debug = $_GET['debug'] ? 1 : 0; // set to 1 for debugging mode
+$paydate = parse_date($_GET['paydate']);
+$encount = 0;
 
-    $last_ptname = '';
-    $last_invnumber = '';
-    $last_code = '';
-    $invoice_total = 0.00;
-    $InsertionId;//last inserted ID of
+$last_ptname = '';
+$last_invnumber = '';
+$last_code = '';
+$invoice_total = 0.00;
+$InsertionId;//last inserted ID of
 
 ///////////////////////// Assorted Functions /////////////////////////
 
@@ -640,7 +644,7 @@ function era_callback(&$out)
     $fnreport = ""$nameprefix$namesuffix.html"";
     $fhreport = fopen($fnreport, 'w');
     if (!$fhreport) {
-        die(xl(""Cannot create"") . "" '$fnreport'"");
+        die(xl(""Cannot create"") . "" '"" . text($fnreport) . ""'"");
     }
 }
 
@@ -738,12 +742,12 @@ function era_callback(&$out)
 }
 ?>
 </script>
-<input type=""hidden"" name=""paydate"" value=""<?php echo DateToYYYYMMDD($_REQUEST['paydate']);?>"" />
-<input type=""hidden"" name=""post_to_date"" value=""<?php echo DateToYYYYMMDD($_REQUEST['post_to_date']);?>"" />
-<input type=""hidden"" name=""deposit_date"" value=""<?php echo DateToYYYYMMDD($_REQUEST['deposit_date']);?>"" />
-<input type=""hidden"" name=""debug"" value=""<?php echo $_REQUEST['debug'];?>"" />
-<input type=""hidden"" name=""InsId"" value=""<?php echo $_REQUEST['InsId'];?>"" />
-<input type=""hidden"" name=""eraname"" value=""<?php echo $eraname?>"" />
+<input type=""hidden"" name=""paydate"" value=""<?php echo attr(DateToYYYYMMDD($_REQUEST['paydate'])); ?>"" />
+<input type=""hidden"" name=""post_to_date"" value=""<?php echo attr(DateToYYYYMMDD($_REQUEST['post_to_date'])); ?>"" />
+<input type=""hidden"" name=""deposit_date"" value=""<?php echo attr(DateToYYYYMMDD($_REQUEST['deposit_date'])); ?>"" />
+<input type=""hidden"" name=""debug"" value=""<?php echo attr($_REQUEST['debug']); ?>"" />
+<input type=""hidden"" name=""InsId"" value=""<?php echo attr($_REQUEST['InsId']); ?>"" />
+<input type=""hidden"" name=""eraname"" value=""<?php echo attr($eraname); ?>"" />
 </form>
 </body>
 </html>
diff --git a/interface/billing/sl_eob_search.php b/interface/billing/sl_eob_search.php
index e485ff17ec0..46d3e3f4d12 100644
--- a/interface/billing/sl_eob_search.php
+++ b/interface/billing/sl_eob_search.php
@@ -2,28 +2,21 @@
 /**
  * This the first of two pages to support posting of EOBs.
  * The second is sl_eob_invoice.php.
- * Windows compatibility and statement downloading:
- *      2009 Bill Cernansky and Tony McCormick [mi-squared.com]
  *
- * Copyright (C) 2005-2010 Rod Roark <rod@sunsetsystems.com>
- *
- * LICENSE: This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
- * This program is distributed in the hope that it will be useful,
- * but WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
- * GNU General Public License for more details.
- * You should have received a copy of the GNU General Public License
- * along with this program. If not, see <http://opensource.org/licenses/gpl-license.php>;.
- *
- * @package OpenEMR
- * @author  Rod Roark <rod@sunsetsystems.com>
- * @author  Roberto Vasquez <robertogagliotta@gmail.com>
- * @author  Jerry Padgett <sjpadgett@gmail.com>
- * @link    http://www.open-emr.org
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Rod Roark <rod@sunsetsystems.com>
+ * @author    Bill Cernansky
+ * @author    Tony McCormick
+ * @author    Roberto Vasquez <robertogagliotta@gmail.com>
+ * @author    Jerry Padgett <sjpadgett@gmail.com>
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2005-2010 Rod Roark <rod@sunsetsystems.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
  */
+
+
 require_once(""../globals.php"");
 require_once(""$srcdir/patient.inc"");
 require_once(""$srcdir/invoice_summary.inc.php"");
@@ -642,14 +635,14 @@ function npopup(pid) {
             <?php xl('Source:', 'e'); ?>
        </td>
        <td>
-         <input type='text' name='form_source' size='10' value='<?php echo $_POST['form_source']; ?>'
+         <input type='text' name='form_source' size='10' value='<?php echo attr($_POST['form_source']); ?>'
          title='<?php xl(""A check number or claim number to identify the payment"", ""e""); ?>'>
        </td>
        <td>
             <?php xl('Pay Date:', 'e'); ?>
        </td>
        <td>
-         <input type='text' name='form_paydate' size='10' value='<?php echo $_POST['form_paydate']; ?>'
+         <input type='text' name='form_paydate' size='10' value='<?php echo attr($_POST['form_paydate']); ?>'
          onkeyup='datekeyup(this,mypcc)' onblur='dateblur(this,mypcc)'
          title='<?php xl(""Date of payment yyyy-mm-dd"", ""e""); ?>'>
        </td>
@@ -658,7 +651,7 @@ function npopup(pid) {
             <?php xl('Deposit Date:', 'e'); ?>
        </td>
        <td>
-         <input type='text' name='form_deposit_date' size='10' value='<?php echo $_POST['form_deposit_date']; ?>'
+         <input type='text' name='form_deposit_date' size='10' value='<?php echo attr($_POST['form_deposit_date']); ?>'
          onkeyup='datekeyup(this,mypcc)' onblur='dateblur(this,mypcc)'
          title='<?php xl(""Date of bank deposit yyyy-mm-dd"", ""e""); ?>'>
        </td>
@@ -667,7 +660,7 @@ function npopup(pid) {
             <?php xl('Amount:', 'e'); ?>
        </td>
        <td>
-         <input type='text' name='form_amount' size='10' value='<?php echo $_POST['form_amount']; ?>'
+         <input type='text' name='form_amount' size='10' value='<?php echo attr($_POST['form_amount']); ?>'
          title='<?php xl(""Paid amount that you will allocate"", ""e""); ?>'>
        </td>
        <td align='right'>
@@ -684,35 +677,35 @@ function npopup(pid) {
         <?php xl('Name:', 'e'); ?>
      </td>
      <td>
-       <input type='text' name='form_name' size='10' value='<?php echo $_POST['form_name']; ?>'
+       <input type='text' name='form_name' size='10' value='<?php echo attr($_POST['form_name']); ?>'
        title='<?php xl(""Any part of the patient name, or \""last,first\"", or \""X-Y\"""", ""e""); ?>'>
      </td>
      <td>
         <?php xl('Chart ID:', 'e'); ?>
      </td>
      <td>
-       <input type='text' name='form_pid' size='10' value='<?php echo $_POST['form_pid']; ?>'
+       <input type='text' name='form_pid' size='10' value='<?php echo attr($_POST['form_pid']); ?>'
        title='<?php xl(""Patient chart ID"", ""e""); ?>'>
      </td>
      <td>
         <?php xl('Encounter:', 'e'); ?>
      </td>
      <td>
-       <input type='text' name='form_encounter' size='10' value='<?php echo $_POST['form_encounter']; ?>'
+       <input type='text' name='form_encounter' size='10' value='<?php echo attr($_POST['form_encounter']); ?>'
        title='<?php xl(""Encounter number"", ""e""); ?>'>
      </td>
      <td>
         <?php xl('Svc Date:', 'e'); ?>
      </td>
      <td>
-       <input type='text' name='form_date' size='10' value='<?php echo $_POST['form_date']; ?>'
+       <input type='text' name='form_date' size='10' value='<?php echo attr($_POST['form_date']); ?>'
        title='<?php xl(""Date of service mm/dd/yyyy"", ""e""); ?>'>
      </td>
      <td>
         <?php xl('To:', 'e'); ?>
      </td>
      <td>
-       <input type='text' name='form_to_date' size='10' value='<?php echo $_POST['form_to_date']; ?>'
+       <input type='text' name='form_to_date' size='10' value='<?php echo attr($_POST['form_to_date']); ?>'
        title='<?php xl(""Ending DOS mm/dd/yyyy if you wish to enter a range"", ""e""); ?>'>
      </td>
      <td>
diff --git a/interface/de_identification_forms/find_code_popup.php b/interface/de_identification_forms/find_code_popup.php
index 3088b8e1129..16c40086735 100644
--- a/interface/de_identification_forms/find_code_popup.php
+++ b/interface/de_identification_forms/find_code_popup.php
@@ -1,21 +1,17 @@
 <?php
-/********************************************************************************\
- * Copyright (C) ViCarePlus, Visolve (vicareplus_engg@visolve.com)              *
- *                                                                              *
- * This program is free software; you can redistribute it and/or                *
- * modify it under the terms of the GNU General Public License                  *
- * as published by the Free Software Foundation; either version 2               *
- * of the License, or (at your option) any later version.                       *
- *                                                                              *
- * This program is distributed in the hope that it will be useful,              *
- * but WITHOUT ANY WARRANTY; without even the implied warranty of               *
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                *
- * GNU General Public License for more details.                                 *
- *                                                                              *
- * You should have received a copy of the GNU General Public License            *
- * along with this program; if not, write to the Free Software                  *
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  *
- \********************************************************************************/
+/**
+ * find_code_popup.php
+ *
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Visolve <vicareplus_engg@visolve.com>
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) ViCarePlus, Visolve <vicareplus_engg@visolve.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ */
+
+
 require_once(""../globals.php"");
 require_once(""$srcdir/patient.inc"");
 require_once(""../../custom/code_types.inc.php"");
@@ -37,14 +33,14 @@
 <script language=""JavaScript"">
 //pass value selected to the parent window
  function window_submit(chk)
- { 
+ {
   var str;
   var len=chk.length;
-  if (len==undefined && chk.checked==1) 
+  if (len==undefined && chk.checked==1)
   {
     if(!str)
       str = chk.value;
-    else  
+    else
     str = ""#""+chk.value;
   }
   else
@@ -55,7 +51,7 @@ function window_submit(chk)
     {
      if(!str)
       str = chk[pr].value;
-     else 
+     else
       str = str+""#""+chk[pr].value;
     }
    }
@@ -66,16 +62,16 @@ function window_submit(chk)
    alert(""<?php echo xl('The destination form was closed');?>"");
   else
    opener.set_related(str,""diagnosis"");
-   
+
   window.close();
-  
+
  }
- 
+
 function window_close(chk)
 {
  window.close();
 }
- 
+
 function chkbox_select_none(chk)
 {
  var len=chk.length;
@@ -111,7 +107,7 @@ function check_search_str()
   return false;
  }
  top.restoreSession();
- return true; 
+ return true;
 }
 
 </script>
@@ -130,7 +126,7 @@ function check_search_str()
    <b>
 <?php
 if ($codetype) {
-    echo ""<input type='text' name='form_code_type' value='$codetype' size='5' readonly>\n"";
+    echo ""<input type='text' name='form_code_type' value='"" . attr($codetype) . ""' size='5' readonly>\n"";
 } else {
     echo ""   <select name='form_code_type'"";
     echo "">\n"";
@@ -153,10 +149,10 @@ function check_search_str()
 }
 ?>
     <?php xl('Search for', 'e'); ?>
-   <input type='text' name='search_term' id='search_term' size='12' value='<?php echo $_REQUEST['search_term']; ?>'
+   <input type='text' name='search_term' id='search_term' size='12' value='<?php echo attr($_REQUEST['search_term']); ?>'
     title='<?php xl('Any part of the desired code or its description', 'e'); ?>' />
-   &nbsp;  
-   <input type='submit' name='bn_search' id='bn_search' value='<?php xl('Search', 'e'); ?>' />   
+   &nbsp;
+   <input type='submit' name='bn_search' id='bn_search' value='<?php xl('Search', 'e'); ?>' />
    </b>
   </td>
  </tr>
@@ -187,7 +183,7 @@ function check_search_str()
             $drug_id = addslashes($row['drug_id']);
             $selector = addslashes($row['selector']);
             $desc = addslashes($row['name']);
-            ?>    
+            ?>
              <input type=""checkbox"" name=""diagnosis[row_count]"" value= ""<?php echo $desc; ?>"" > <?php echo $drug_id.""    "".$selector.""     "".$desc.""</br>"";
         }
     } else {
@@ -205,7 +201,7 @@ function check_search_str()
             echo xl('Please enter new search string');?>"");
           document.theform.search_term.value="" "";
              document.theform.search_term.focus();
-             </script>    
+             </script>
                 <?php
             }
 
@@ -232,14 +228,14 @@ function check_search_str()
 <center>
 </br>
  <input type='button' id='select_all' value='<?php xl('Select All', 'e'); ?>' onclick=""chkbox_select_all(document.select_diagonsis.chkbox);""/>
- 
+
  <input type='button' id='unselect_all' value='<?php xl('Unselect All', 'e'); ?>' onclick=""chkbox_select_none(document.select_diagonsis.chkbox);""/>
- 
+
  <input type='button' id='submit' value='<?php xl('Submit', 'e'); ?>' onclick=""window_submit(document.select_diagonsis.chkbox);""/>
- 
+
  <input type='button' id='cancel' value='<?php xl('Cancel', 'e'); ?>' onclick=""window_close();""/>
- 
-</center> 
+
+</center>
 <?php } ?>
 </form>
 </body>
diff --git a/interface/de_identification_forms/find_immunization_popup.php b/interface/de_identification_forms/find_immunization_popup.php
index 4ac1887e4a4..f03e17614dc 100644
--- a/interface/de_identification_forms/find_immunization_popup.php
+++ b/interface/de_identification_forms/find_immunization_popup.php
@@ -1,21 +1,17 @@
 <?php
-/********************************************************************************\
- * Copyright (C) ViCarePlus, Visolve (vicareplus_engg@visolve.com)              *
- *                                                                              *
- * This program is free software; you can redistribute it and/or                *
- * modify it under the terms of the GNU General Public License                  *
- * as published by the Free Software Foundation; either version 2               *
- * of the License, or (at your option) any later version.                       *
- *                                                                              *
- * This program is distributed in the hope that it will be useful,              *
- * but WITHOUT ANY WARRANTY; without even the implied warranty of               *
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                *
- * GNU General Public License for more details.                                 *
- *                                                                              *
- * You should have received a copy of the GNU General Public License            *
- * along with this program; if not, write to the Free Software                  *
- * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.  *
- \********************************************************************************/
+/**
+ * find_immunization_popup.php
+ *
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Visolve <vicareplus_engg@visolve.com>
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) ViCarePlus, Visolve <vicareplus_engg@visolve.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ */
+
+
 require_once(""../globals.php"");
 require_once(""$srcdir/patient.inc"");
 require_once(""../../custom/code_types.inc.php"");
@@ -35,14 +31,14 @@
 <script language=""JavaScript"">
 //pass value selected to the parent window
  function window_submit(chk)
- { 
+ {
   var str;
   var len=chk.length;
-  if (len==undefined && chk.checked==1) 
+  if (len==undefined && chk.checked==1)
   {
     if(!str)
       str = chk.value;
-    else  
+    else
     str = ""#""+chk.value;
   }
   else
@@ -53,7 +49,7 @@ function window_submit(chk)
     {
      if(!str)
       str = chk[pr].value;
-     else 
+     else
       str = str+""#""+chk[pr].value;
     }
    }
@@ -64,16 +60,16 @@ function window_submit(chk)
    alert(""<?php echo xl('The destination form was closed');?>"");
   else
    opener.set_related(str,""immunizations"");
-   
+
   window.close();
-  
+
  }
- 
+
 function window_close(chk)
 {
  window.close();
 }
- 
+
 function chkbox_select_none(chk)
 {
  var len=chk.length;
@@ -110,7 +106,7 @@ function check_search_str()
  }
  top.restoreSession();
  return true;
-}   
+}
 </script>
 </head>
 <body class=""body_top"">
@@ -125,10 +121,10 @@ function check_search_str()
   <td>
    <b>
     <?php xl('Search for', 'e'); ?>
-   <input type='text' name='search_term' id='search_term' size='12' value='<?php echo $_REQUEST['search_term']; ?>'
+   <input type='text' name='search_term' id='search_term' size='12' value='<?php echo attr($_REQUEST['search_term']); ?>'
     title='<?php xl('Any part of the immunization id or immunization name', 'e'); ?>' />
    &nbsp;
-   <input type='submit' name='bn_search' value='<?php xl('Search', 'e'); ?>' />  
+   <input type='submit' name='bn_search' value='<?php xl('Search', 'e'); ?>' />
    </b>
   </td>
  </tr>
@@ -143,7 +139,7 @@ function check_search_str()
 <?php if ($_REQUEST['bn_search']) { ?>
 <table border='0'>
  <tr>
-  <td colspan=""4"">  
+  <td colspan=""4"">
 <?php
   $search_term = $_REQUEST['search_term'];
   {
@@ -160,7 +156,7 @@ function check_search_str()
         echo xl('Please enter new search string');?>"");
      document.theform.search_term.value="" "";
      document.theform.search_term.focus();
-     </script>    
+     </script>
         <?php
     }
 
@@ -185,13 +181,13 @@ function check_search_str()
  </table>
 <center>
  <input type='button' name='select_all' value='<?php xl('Select All', 'e'); ?>' onclick=""chkbox_select_all(document.select_immunization.chkbox);""/>
- 
+
  <input type='button' name='select_none' value='<?php xl('Unselect All', 'e'); ?>' onclick=""chkbox_select_none(document.select_immunization.chkbox);""/>
- 
+
  <input type='button' name='submit' value='<?php xl('Submit', 'e'); ?>' onclick=""window_submit(document.select_immunization.chkbox);""/>
- 
+
  <input type='button' name='cancel' value='<?php xl('Cancel', 'e'); ?>' onclick=""window_close();""/>
- 
+
  </center>
 <?php } ?>
 </form>
diff --git a/interface/fax/fax_dispatch.php b/interface/fax/fax_dispatch.php
index 4d2c81727c6..a8c98d0a74e 100644
--- a/interface/fax/fax_dispatch.php
+++ b/interface/fax/fax_dispatch.php
@@ -7,10 +7,11 @@
  * @author    Rod Roark <rod@sunsetsystems.com>
  * @author    Brady Miller <brady.g.miller@gmail.com>
  * @copyright Copyright (c) 2006-2010 Rod Roark <rod@sunsetsystems.com>
- * @copyright Copyright (c) 2017 Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2017-2018 Brady Miller <brady.g.miller@gmail.com>
  * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
  */
 
+
 require_once(""../globals.php"");
 require_once(""$srcdir/patient.inc"");
 require_once(""$srcdir/pnotes.inc"");
@@ -22,13 +23,17 @@
     $mode = 'fax';
     $filename = $_GET['file'];
 
-  // ensure the file variable has no illegal characters
+    // ensure the file variable has no illegal characters
     check_file_dir_name($filename);
 
     $filepath = $GLOBALS['hylafax_basedir'] . '/recvq/' . $filename;
 } else if ($_GET['scan']) {
     $mode = 'scan';
     $filename = $_GET['scan'];
+
+    // ensure the file variable has no illegal characters
+    check_file_dir_name($filename);
+
     $filepath = $GLOBALS['scanner_output_directory'] . '/' . $filename;
 } else {
     die(""No filename was given."");
diff --git a/interface/forms/CAMOS/view.php b/interface/forms/CAMOS/view.php
index 50c735df0e6..d7e55e2e7a1 100755
--- a/interface/forms/CAMOS/view.php
+++ b/interface/forms/CAMOS/view.php
@@ -1,30 +1,32 @@
 <?php
 /**
- * Generated DocBlock
+ * CAMOS view.php
  *
- * @package OpenEMR
- * @link    http://www.open-emr.org
- * @author  markleeds <markleeds>
- * @author  fndtn357 <fndtn357@gmail.com>
- * @author  cornfeed <jdough823@gmail.com>
- * @author  cfapress <cfapress>
- * @author  Wakie87 <scott@npclinics.com.au>
- * @author  Robert Down <robertdown@live.com>
- * @author  Brady Miller <brady.g.miller@gmail.com>
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    markleeds <markleeds>
+ * @author    fndtn357 <fndtn357@gmail.com>
+ * @author    cornfeed <jdough823@gmail.com>
+ * @author    cfapress <cfapress>
+ * @author    Wakie87 <scott@npclinics.com.au>
+ * @author    Robert Down <robertdown@live.com>
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2008 cfapress <cfapress>
  * @copyright Copyright (c) 2009 markleeds <markleeds>
- * @copyright Copyright (c) 2012 fndtn357 <fndtn357@gmail.com>
  * @copyright Copyright (c) 2011 cornfeed <jdough823@gmail.com>
- * @copyright Copyright (c) 2008 cfapress <cfapress>
+ * @copyright Copyright (c) 2012 fndtn357 <fndtn357@gmail.com>
  * @copyright Copyright (c) 2016 Wakie87 <scott@npclinics.com.au>
+ * @copyright Copyright (c) 2016-2018 Brady Miller <brady.g.miller@gmail.com>
  * @copyright Copyright (c) 2017 Robert Down <robertdown@live.com>
- * @copyright Copyright (c) 2016 Brady Miller <brady.g.miller@gmail.com>
- * @license https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
  */
+
+
 ?>
 <!-- view.php -->
 <?php
-include_once(""../../globals.php"");
-include_once(""../../../library/api.inc"");
+require_once(""../../globals.php"");
+require_once(""../../../library/api.inc"");
 formHeader(""Form: CAMOS"");
 $textarea_rows = 22;
 $textarea_cols = 90;
@@ -71,7 +73,7 @@ function show_edit(t) {
 <link rel=""stylesheet"" href=""<?php echo $css_header;?>"" type=""text/css"">
 </head>
 <body class=""body_top"">
-<form method=post action=""<?php echo $rootdir?>/forms/CAMOS/save.php?mode=delete&id=<?php echo $_GET[""id""];?>"" name=""my_form"">
+<form method=post action=""<?php echo $rootdir?>/forms/CAMOS/save.php?mode=delete&id=<?php echo attr($_GET[""id""]); ?>"" name=""my_form"">
 <h1> <?php xl('CAMOS', 'e'); ?> </h1>
 <input type=""submit"" name=""delete"" value=""<?php xl('Delete Selected Items', 'e'); ?>"" />
 <input type=""submit"" name=""update"" value=""<?php xl('Update Selected Items', 'e'); ?>"" />
diff --git a/interface/forms/reviewofs/view.php b/interface/forms/reviewofs/view.php
index 9ca68de17ff..3e1d05e00a0 100644
--- a/interface/forms/reviewofs/view.php
+++ b/interface/forms/reviewofs/view.php
@@ -8,7 +8,7 @@
  * @author    Brady Miller <brady.g.miller@gmail.com>
  * @author    Robert Down <robertdown@live.com>
  * @copyright Copyright (c) 2008 cfapress <cfapress>
- * @copyright Copyright (c) 2016-2017 Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2016-2018 Brady Miller <brady.g.miller@gmail.com>
  * @copyright Copyright (c) 2017 Robert Down <robertdown@live.com>
  * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
  */
@@ -40,7 +40,7 @@
             </div>
         </div>
         <div class=""row"">
-            <form method=post action=""<?php echo $rootdir; ?>/forms/reviewofs/save.php?mode=update&id=<?php echo $_GET[""id""]; ?>"" name=""my_form"" onsubmit=""return top.restoreSession()"">
+            <form method=post action=""<?php echo $rootdir; ?>/forms/reviewofs/save.php?mode=update&id=<?php echo attr($_GET[""id""]); ?>"" name=""my_form"" onsubmit=""return top.restoreSession()"">
                 <fieldset>
                     <legend><?php echo xlt('General')?></legend>
                     <div class=""row"">
diff --git a/interface/main/finder/finder_navigation.php b/interface/main/finder/finder_navigation.php
index 18fe37042c8..a1c4c1ed1c7 100644
--- a/interface/main/finder/finder_navigation.php
+++ b/interface/main/finder/finder_navigation.php
@@ -1,5 +1,16 @@
 <?php
-include_once(""../../globals.php"");
+/**
+ * finder_navigation.php
+ *
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ */
+
+
+require_once(""../../globals.php"");
 ?>
 
 <html>
@@ -19,7 +30,7 @@
 <tr>
 
 <td style=""text-align:left; width: 250px; white-space: nowrap;"">
-<input type=""textbox"" size=""10"" name=""patient"" value=""<?php echo $_REQUEST['patient']; ?>"" >
+<input type=""textbox"" size=""10"" name=""patient"" value=""<?php echo attr($_REQUEST['patient']); ?>"" >
 <select name=""findBy"">
 <option value=""Last"" <?php if ($_REQUEST['findBy'] == 'Last') {
     echo 'selected';
diff --git a/interface/orders/types.php b/interface/orders/types.php
index 0641d0a5945..dc309fbb6c7 100644
--- a/interface/orders/types.php
+++ b/interface/orders/types.php
@@ -1,13 +1,17 @@
 <?php
 /**
- * Copyright (C) 2010-2012 Rod Roark <rod@sunsetsystems.com>
+ * types.php
  *
- * This program is free software; you can redistribute it and/or
- * modify it under the terms of the GNU General Public License
- * as published by the Free Software Foundation; either version 2
- * of the License, or (at your option) any later version.
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Rod Roark <rod@sunsetsystems.com>
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2010-2012 Rod Roark <rod@sunsetsystems.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
  */
 
+
 require_once(""../globals.php"");
 require_once(""$srcdir/acl.inc"");
 
@@ -248,11 +252,11 @@ function recolor() {
 <form method='post' name='theform' action='types.php?popup=<?php echo $popup ?>&order=<?php
 echo $order;
 if (isset($_GET['formid' ])) {
-    echo '&formid='  . $_GET['formid'];
+    echo '&formid='  . attr($_GET['formid']);
 }
 
 if (isset($_GET['formseq'])) {
-    echo '&formseq=' . $_GET['formseq'];
+    echo '&formseq=' . attr($_GET['formseq']);
 }
 ?>'>
 
diff --git a/interface/patient_file/letter.php b/interface/patient_file/letter.php
index d4852ede788..40aa0539cf4 100644
--- a/interface/patient_file/letter.php
+++ b/interface/patient_file/letter.php
@@ -1,16 +1,22 @@
 <?php
-// Copyright (C) 2007-2011 Rod Roark <rod@sunsetsystems.com>
-//
-// This program is free software; you can redistribute it and/or
-// modify it under the terms of the GNU General Public License
-// as published by the Free Software Foundation; either version 2
-// of the License, or (at your option) any later version.
+/**
+ * letter.php
+ *
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Rod Roark <rod@sunsetsystems.com>
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2007-2011 Rod Roark <rod@sunsetsystems.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ */
+
+
+require_once(""../globals.php"");
+require_once($GLOBALS['srcdir'] . ""/patient.inc"");
 
 use OpenEMR\Core\Header;
 
-include_once(""../globals.php"");
-include_once($GLOBALS['srcdir'] . ""/patient.inc"");
-
 $template_dir = $GLOBALS['OE_SITE_DIR'] . ""/letter_templates"";
 
 // array of field name tags to allow internationalization
@@ -199,7 +205,12 @@
 } else if (isset($_GET['template']) && $_GET['template'] != """") {
     // utilized to go back to autosaved template
     $bodytext = """";
-    $fh = fopen(""$template_dir/"".$_GET['template'], 'r');
+    $fh = fopen(""$template_dir/"" . convert_safe_file_dir_name($_GET['template']), 'r');
+
+    if (!$fh) {
+        die(xlt(""Requested template does not exist""));
+    }
+
     while (!feof($fh)) {
         $bodytext.= fread($fh, 8192);
     }
@@ -211,7 +222,12 @@
     }
 } else if ($_POST['formaction'] == ""loadtemplate"" && $_POST['form_template'] != """") {
     $bodytext = """";
-    $fh = fopen(""$template_dir/"".$_POST['form_template'], 'r');
+    $fh = fopen(""$template_dir/"" . convert_safe_file_dir_name($_POST['form_template']), 'r');
+
+    if (!$fh) {
+        die(xlt(""Requested template does not exist""));
+    }
+
     while (!feof($fh)) {
         $bodytext.= fread($fh, 8192);
     }
@@ -223,7 +239,7 @@
     }
 } else if ($_POST['formaction'] == ""newtemplate"" && $_POST['newtemplatename'] != """") {
     // attempt to save the template
-    $fh = fopen(""$template_dir/"".$_POST['newtemplatename'], 'w');
+    $fh = fopen(""$template_dir/"" . convert_safe_file_dir_name($_POST['newtemplatename']), 'w');
     // translate from definition to the constant
     $temp_bodytext = $_POST['form_body'];
     foreach ($FIELD_TAG as $key => $value) {
@@ -231,7 +247,7 @@
     }
 
     if (! fwrite($fh, $temp_bodytext)) {
-        echo xlt('Error while writing to file') . ' ' . $template_dir.""/"".$_POST['newtemplatename'];
+        echo xlt('Error while writing to file') . ' ' . $template_dir.""/"" . $_POST['newtemplatename'];
         die;
     }
 
@@ -239,7 +255,12 @@
 
     // read the saved file back
     $_POST['form_template'] = $_POST['newtemplatename'];
-    $fh = fopen(""$template_dir/"".$_POST['form_template'], 'r');
+    $fh = fopen(""$template_dir/"" . convert_safe_file_dir_name($_POST['form_template']), 'r');
+
+    if (!$fh) {
+        die(xlt(""Requested template does not exist""));
+    }
+
     while (!feof($fh)) {
         $bodytext.= fread($fh, 8192);
     }
@@ -251,7 +272,7 @@
     }
 } else if ($_POST['formaction'] == ""savetemplate"" && $_POST['form_template'] != """") {
     // attempt to save the template
-    $fh = fopen(""$template_dir/"".$_POST['form_template'], 'w');
+    $fh = fopen(""$template_dir/"" . convert_safe_file_dir_name($_POST['form_template']), 'w');
     // translate from definition to the constant
     $temp_bodytext = $_POST['form_body'];
     foreach ($FIELD_TAG as $key => $value) {
@@ -266,7 +287,12 @@
     fclose($fh);
 
     // read the saved file back
-    $fh = fopen(""$template_dir/"".$_POST['form_template'], 'r');
+    $fh = fopen(""$template_dir/"" . convert_safe_file_dir_name($_POST['form_template']), 'r');
+
+    if (!$fh) {
+        die(xlt(""Requested template does not exist""));
+    }
+
     while (!feof($fh)) {
         $bodytext.= fread($fh, 8192);
     }
diff --git a/interface/patient_file/transaction/add_transaction.php b/interface/patient_file/transaction/add_transaction.php
index c6b39b30b55..7fe5ca19a45 100644
--- a/interface/patient_file/transaction/add_transaction.php
+++ b/interface/patient_file/transaction/add_transaction.php
@@ -7,7 +7,7 @@
  * @link      http://www.open-emr.org
  * @author    Rod Roark <rod@sunsetsystems.com>
  * @author    Brady Miller <brady.g.miller@gmail.com>
- * @copyright Copyright (c) 2017 Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2017-2018 Brady Miller <brady.g.miller@gmail.com>
  * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
  */
 
@@ -24,7 +24,7 @@
 $form_id = $title;
 
 // Plugin support.
-$fname = $GLOBALS['OE_SITE_DIR'] . ""/LBF/$form_id.plugin.php"";
+$fname = $GLOBALS['OE_SITE_DIR'] . ""/LBF/"" . convert_safe_file_dir_name($form_id) . "".plugin.php"";
 if (file_exists($fname)) {
     include_once($fname);
 }
diff --git a/library/custom_template/personalize.php b/library/custom_template/personalize.php
index 6edb95c839b..ecdf837726f 100644
--- a/library/custom_template/personalize.php
+++ b/library/custom_template/personalize.php
@@ -1,29 +1,16 @@
 <?php
-// +-----------------------------------------------------------------------------+
-// Copyright (C) 2011 Z&H Consultancy Services Private Limited <sam@zhservices.com>
-//
-//
-// This program is free software; you can redistribute it and/or
-// modify it under the terms of the GNU General Public License
-// as published by the Free Software Foundation; either version 2
-// of the License, or (at your option) any later version.
-//
-//
-// This program is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-// GNU General Public License for more details.
-//
-//
-// A copy of the GNU General Public License is included along with this program:
-// openemr/interface/login/GnuGPL.html
-// For more information write to the Free Software
-// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
-//
-// Author:   Eldho Chacko <eldho@zhservices.com>
-//           Jacob T Paul <jacob@zhservices.com>
-//
-// +------------------------------------------------------------------------------+
+/**
+ * personalize.php
+ *
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Eldho Chacko <eldho@zhservices.com>
+ * @author    Jacob T Paul <jacob@zhservices.com>
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @copyright Copyright (c) 2011 Z&H Consultancy Services Private Limited <sam@zhservices.com>
+ * @copyright Copyright (c) 2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ */
 
 
 require_once(""../../interface/globals.php"");
@@ -353,7 +340,7 @@ function personalize_save() {
                 <?php
                 if (acl_check('nationnotes', 'nn_configure')) {
                     ?>
-                    <a href=""add_template.php?list_id=<?php echo $_REQUEST['list_id']; ?>""
+                    <a href=""add_template.php?list_id=<?php echo attr($_REQUEST['list_id']); ?>""
                        onclick=""top.restoreSession();"" class=""iframe_small css_button""
                        title=""<?php echo htmlspecialchars(xl('Add Category'), ENT_QUOTES); ?>""><span><?php echo htmlspecialchars(xl('Add Category'), ENT_QUOTES); ?></span></a>
                     <?php
diff --git a/library/sanitize.inc.php b/library/sanitize.inc.php
index 1c051f1e1dd..79b4f58bd27 100644
--- a/library/sanitize.inc.php
+++ b/library/sanitize.inc.php
@@ -3,13 +3,13 @@
 * Function to check and/or sanitize things for security such as
 * directories names, file names, etc.
  *
- * @package OpenEMR
- * @link    http://www.open-emr.org
- * @author  Brady Miller <brady.g.miller@gmail.com>
- * @author  Roberto Vasquez <robertogagliotta@gmail.com>
- * @author  Shachar Zilbershlag <shaharzi@matrix.co.il>
- * @copyright Copyright (c) 2012-2017 Brady Miller <brady.g.miller@gmail.com>
- * @license https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
+ * @package   OpenEMR
+ * @link      http://www.open-emr.org
+ * @author    Brady Miller <brady.g.miller@gmail.com>
+ * @author    Roberto Vasquez <robertogagliotta@gmail.com>
+ * @author    Shachar Zilbershlag <shaharzi@matrix.co.il>
+ * @copyright Copyright (c) 2012-2018 Brady Miller <brady.g.miller@gmail.com>
+ * @license   https://github.com/openemr/openemr/blob/master/LICENSE GNU General Public License 3
  */
 
 
@@ -28,7 +28,7 @@ function convert_safe_file_dir_name($label)
     return preg_replace('/[^A-Za-z0-9_.-]/', '_', $label);
 }
 
-//Basename functionality for nonenglish languages (without this, basename function ommits nonenglish characters).
+//Basename functionality for nonenglish languages (without this, basename function omits nonenglish characters).
 function basename_international($path)
 {
     $parts = preg_split('~[\\\\/]~', $path);"
CVE-2018-11363,"From ee58aff6918b8bbc3be29b9e3089485ea46ff956 Mon Sep 17 00:00:00 2001
From: Andre Renaud <arenaud@designa-electronics.com>
Date: Tue, 10 Apr 2018 09:21:34 +1200
Subject: [PATCH] jpeg: Fix another possible buffer overrun

Found via the clang libfuzzer
---
 pdfgen.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/pdfgen.c b/pdfgen.c
index 4ae05df..90ce287 100644
--- a/pdfgen.c
+++ b/pdfgen.c
@@ -2036,7 +2036,8 @@ static int jpeg_size(unsigned char* data, unsigned int data_size,
                     return 0;
                 }
                 i+=2;
-                block_length = data[i] * 256 + data[i+1];
+                if (i + 1 < data_size)
+                    block_length = data[i] * 256 + data[i+1];
             }
         }
     }"
CVE-2018-16974,"From 49ba8cc24e9f009ce30d2c2eb9eefeb9be4ce1d0 Mon Sep 17 00:00:00 2001
From: lux <john@flipsidexr.com>
Date: Tue, 11 Sep 2018 02:13:26 -0500
Subject: [PATCH] Fixed filemanager file upload validations, re: #287

---
 apps/filemanager/handlers/embed.php           |  4 +++-
 apps/filemanager/handlers/redactor/upload.php |  4 ++--
 apps/filemanager/handlers/upload.php          |  4 ++--
 apps/filemanager/handlers/upload/drop.php     |  4 ++--
 apps/filemanager/lib/API.php                  | 18 +++++++++---------
 apps/filemanager/lib/FileManager.php          |  5 ++++-
 6 files changed, 22 insertions(+), 17 deletions(-)

diff --git a/apps/filemanager/handlers/embed.php b/apps/filemanager/handlers/embed.php
index 12308f067..cb11607ee 100644
--- a/apps/filemanager/handlers/embed.php
+++ b/apps/filemanager/handlers/embed.php
@@ -110,7 +110,9 @@
 			return;
 		}
 		
-		if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe)$/i', $_POST['newName'])) {
+		$_POST['newName'] = trim ($_POST['newName']);
+		
+		if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $_POST['newName'])) {
 			echo __ ('Invalid file type');
 			return;
 		}
diff --git a/apps/filemanager/handlers/redactor/upload.php b/apps/filemanager/handlers/redactor/upload.php
index 430355e9f..7717b1d51 100644
--- a/apps/filemanager/handlers/redactor/upload.php
+++ b/apps/filemanager/handlers/redactor/upload.php
@@ -41,9 +41,9 @@
 }
 
 // some browsers may urlencode the file name
-$_FILES['file']['name'] = urldecode ($_FILES['file']['name']);
+$_FILES['file']['name'] = trim (urldecode ($_FILES['file']['name']));
 
-if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe)$/i', $_FILES['file']['name'])) {
+if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $_FILES['file']['name'])) {
 	echo json_encode (array ('error' => __ ('Cannot upload executable files due to security.')));
 	return;
 }
diff --git a/apps/filemanager/handlers/upload.php b/apps/filemanager/handlers/upload.php
index 29bedbb84..780ea4ce4 100644
--- a/apps/filemanager/handlers/upload.php
+++ b/apps/filemanager/handlers/upload.php
@@ -49,7 +49,7 @@
 }
 
 for ($i = 0; $i < count ($_FILES['file']['name']); $i++) {
-	$_FILES['file']['name'][$i] = urldecode ($_FILES['file']['name'][$i]);
+	$_FILES['file']['name'][$i] = trim (urldecode ($_FILES['file']['name'][$i]));
 	if (@file_exists ($root . $_POST['path'] . '/' . $_FILES['file']['name'][$i])) {
 		$page->title = __ ('File Already Exists') . ': ' . $_FILES['file']['name'][$i];
 		echo '<p>' . __ ('A file by that name already exists.') . '</p>';
@@ -62,7 +62,7 @@
 		echo '<p><a href=""/filemanager"">' . __ ('Back') . '</a></p>';
 		return;
 	}
-	if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe)$/i', $_FILES['file']['name'][$i])) {
+	if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $_FILES['file']['name'][$i])) {
 		$page->title = __ ('Invalid File Name') . ': ' . $_FILES['file']['name'][$i];
 		echo '<p>' . __ ('Cannot upload executable files due to security.') . '</p>';
 		echo '<p><a href=""/filemanager"">' . __ ('Back') . '</a></p>';
diff --git a/apps/filemanager/handlers/upload/drop.php b/apps/filemanager/handlers/upload/drop.php
index 3a537c7c7..f5119b947 100644
--- a/apps/filemanager/handlers/upload/drop.php
+++ b/apps/filemanager/handlers/upload/drop.php
@@ -45,9 +45,9 @@
 }
 
 // some browsers may urlencode the file name
-$_FILES['file']['name'] = urldecode ($_FILES['file']['name']);
+$_FILES['file']['name'] = trim (urldecode ($_FILES['file']['name']));
 
-if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe)$/i', $_FILES['file']['name'])) {
+if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $_FILES['file']['name'])) {
 	echo json_encode (array ('success' => false, 'error' => __ ('Cannot upload executable files due to security.')));
 	return;
 }
diff --git a/apps/filemanager/lib/API.php b/apps/filemanager/lib/API.php
index 7d1a1e1f0..e61fd48d9 100644
--- a/apps/filemanager/lib/API.php
+++ b/apps/filemanager/lib/API.php
@@ -13,7 +13,7 @@ class API extends Restful {
 	 * Handle list directory requests (/filemanager/api/ls).
 	 */
 	public function get_ls () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 
 		$res = FileManager::dir ($file);
 		if (! $res) {
@@ -43,7 +43,7 @@ public function get_dirs () {
 	 * Handle Bitly link requests (/filemanager/api/bitly).
 	 */
 	public function get_bitly () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 		$link = $this->controller->absolutize ('/files/' . $file);
 		return BitlyLink::lookup ($link);
 	}
@@ -52,7 +52,7 @@ public function get_bitly () {
 	 * Handle remove file requests (/filemanager/api/rm).
 	 */
 	public function post_rm () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 
 		$res = FileManager::unlink ($file);
 		if (! $res) {
@@ -71,7 +71,7 @@ public function post_rm () {
 	 * Note: Erases the contents of the folder as well.
 	 */
 	public function post_rmdir () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 
 		$res = FileManager::rmdir ($file, true);
 		if (! $res) {
@@ -89,7 +89,7 @@ public function post_rmdir () {
 	 * Handle rename requests (/filemanager/api/mv).
 	 */
 	public function post_mv () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 
 		$is_folder = FileManager::verify_folder ($file) ? true : false;
 		
@@ -114,7 +114,7 @@ public function post_mv () {
 	 * folders.
 	 */
 	public function post_drop () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 		
 		if (! FileManager::move ($file, $_POST['folder'])) {
 			return $this->error (FileManager::error ());
@@ -133,7 +133,7 @@ public function post_drop () {
 	 * Handle make directory requests (/filemanager/api/mkdir).
 	 */
 	public function post_mkdir () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 		
 		if (! FileManager::mkdir ($file)) {
 			return $this->error (FileManager::error ());
@@ -153,7 +153,7 @@ public function post_mkdir () {
 	 * be used to set an individual property's value.
 	 */
 	public function post_prop () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 		if (! FileManager::verify_file ($file)) {
 			return $this->error (__ ('Invalid file name'));
 		}
@@ -200,7 +200,7 @@ public function post_prop () {
 	 * Handle unzip requests via (/filemanager/api/unzip).
 	 */
 	public function post_unzip () {
-		$file = urldecode (join ('/', func_get_args ()));
+		$file = trim (urldecode (join ('/', func_get_args ())));
 		if (! FileManager::verify_file ($file)) {
 			return $this->error (__ ('Invalid file name'));
 		}
diff --git a/apps/filemanager/lib/FileManager.php b/apps/filemanager/lib/FileManager.php
index bf77c25c6..2f08c0619 100644
--- a/apps/filemanager/lib/FileManager.php
+++ b/apps/filemanager/lib/FileManager.php
@@ -160,6 +160,9 @@ public static function unlink ($file) {
 		} elseif (! self::verify_file ($file)) {
 			self::$error = __ ('File not found');
 			return false;
+		} elseif (! self::verify_file_name ($file)) {
+			self::$error = __ ('Invalid file name');
+			return false;
 		} elseif (! unlink (self::root () . $file)) {
 			self::$error = __ ('Unable to delete') . ' ' . $file;
 			return false;
@@ -405,7 +408,7 @@ public static function verify_file_name ($name) {
 		if (! preg_match ('/^[a-zA-Z0-9 _-]+\.[a-zA-Z0-9_-]+$/', $name)) {
 			return false;
 		}
-		if (preg_match ('/\.php$/i', $name)) {
+		if (preg_match ('/\.(php|phtml|pht|php3|php4|php5|phar|js|rb|py|pl|sh|bash|exe|htaccess|htpasswd)$/i', $name)) {
 			return false;
 		}
 		return true;"
OSV-2018-105,"From 2effd8cd21b7cc331a140113b755c9ed879de2b3 Mon Sep 17 00:00:00 2001
From: ""Victor M. Alvarez"" <vmalvarez@virustotal.com>
Date: Tue, 30 Apr 2019 16:55:52 +0200
Subject: [PATCH] Add comments explaining the word_chars and space_chars
 tables.

---
 libyara/re_lexer.l | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/libyara/re_lexer.l b/libyara/re_lexer.l
index d9649ad684..3f42fa982a 100644
--- a/libyara/re_lexer.l
+++ b/libyara/re_lexer.l
@@ -62,12 +62,18 @@ with noyywrap then we can remove this pragma.
 #define snprintf _snprintf
 #endif
 
+// Bitmap with 1 bit for each of the 256 characters in the ASCII table. The bit
+// is set to 1 if the corresponding character is alphanumeric or 0 if otherwise.
 static uint8_t word_chars[] = {
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x03,
     0xFE, 0xFF, 0xFF, 0x87, 0xFE, 0xFF, 0xFF, 0x07,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
 
+// Bitmap with 1 bit for each of the 256 characters in the ASCII table. The bit
+// is set to 1 if the corresponding character is considered a space. Space
+// characters include horizontal and vertical tabs, carriage return, new line
+// and form feed (\t, \v, \r, \n, \f).
 static uint8_t space_chars[] = {
     0x00, 0x3E, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,"
CVE-2018-10102,"From 31a4369366d6b8ce30045d4c838de2412c77850d Mon Sep 17 00:00:00 2001
From: Dominik Schilling <dominikschilling+git@gmail.com>
Date: Tue, 3 Apr 2018 14:59:31 +0000
Subject: [PATCH] Template: Make sure the version string is correctly escaped
 for use in attributes.

Built from https://develop.svn.wordpress.org/trunk@42893


git-svn-id: http://core.svn.wordpress.org/trunk@42723 1a063a9b-81f0-0310-95a4-ce76da25c4cd
---
 wp-includes/general-template.php | 14 +++++++-------
 wp-includes/version.php          |  2 +-
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/wp-includes/general-template.php b/wp-includes/general-template.php
index b8f90b85bb6f..57a7b675dc7b 100644
--- a/wp-includes/general-template.php
+++ b/wp-includes/general-template.php
@@ -4249,25 +4249,25 @@ function get_the_generator( $type = '' ) {
 
 	switch ( $type ) {
 		case 'html':
-			$gen = '<meta name=""generator"" content=""WordPress ' . get_bloginfo( 'version' ) . '"">';
+			$gen = '<meta name=""generator"" content=""WordPress ' . esc_attr( get_bloginfo( 'version' ) ) . '"">';
 			break;
 		case 'xhtml':
-			$gen = '<meta name=""generator"" content=""WordPress ' . get_bloginfo( 'version' ) . '"" />';
+			$gen = '<meta name=""generator"" content=""WordPress ' . esc_attr( get_bloginfo( 'version' ) ) . '"" />';
 			break;
 		case 'atom':
-			$gen = '<generator uri=""https://wordpress.org/"" version=""' . get_bloginfo_rss( 'version' ) . '"">WordPress</generator>';
+			$gen = '<generator uri=""https://wordpress.org/"" version=""' . esc_attr( get_bloginfo_rss( 'version' ) ) . '"">WordPress</generator>';
 			break;
 		case 'rss2':
-			$gen = '<generator>https://wordpress.org/?v=' . get_bloginfo_rss( 'version' ) . '</generator>';
+			$gen = '<generator>' . esc_url_raw( 'https://wordpress.org/?v=' . get_bloginfo_rss( 'version' ) ) . '</generator>';
 			break;
 		case 'rdf':
-			$gen = '<admin:generatorAgent rdf:resource=""https://wordpress.org/?v=' . get_bloginfo_rss( 'version' ) . '"" />';
+			$gen = '<admin:generatorAgent rdf:resource=""' . esc_url_raw( 'https://wordpress.org/?v=' . get_bloginfo_rss( 'version' ) ) . '"" />';
 			break;
 		case 'comment':
-			$gen = '<!-- generator=""WordPress/' . get_bloginfo( 'version' ) . '"" -->';
+			$gen = '<!-- generator=""WordPress/' . esc_attr( get_bloginfo( 'version' ) ) . '"" -->';
 			break;
 		case 'export':
-			$gen = '<!-- generator=""WordPress/' . get_bloginfo_rss( 'version' ) . '"" created=""' . date( 'Y-m-d H:i' ) . '"" -->';
+			$gen = '<!-- generator=""WordPress/' . esc_attr( get_bloginfo_rss( 'version' ) ) . '"" created=""' . date( 'Y-m-d H:i' ) . '"" -->';
 			break;
 	}
 
diff --git a/wp-includes/version.php b/wp-includes/version.php
index 87d92b4eb33c..4e6342a32ed1 100644
--- a/wp-includes/version.php
+++ b/wp-includes/version.php
@@ -4,7 +4,7 @@
  *
  * @global string $wp_version
  */
-$wp_version = '5.0-alpha-42892';
+$wp_version = '5.0-alpha-42893';
 
 /**
  * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema."
OSV-2018-222,"From ea2304e2982b00f884b119db982eee0d77a7a3db Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Bj=C3=B6rn=20Andersson?= <bjorn.andersson@mitel.com>
Date: Wed, 5 Jul 2017 16:52:23 +0200
Subject: [PATCH] Problems building on SLES11 with openssl 0.9.8

---
 resip/stack/ssl/Security.cxx | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/resip/stack/ssl/Security.cxx b/resip/stack/ssl/Security.cxx
index c2efb56b6d..3a1079a73f 100644
--- a/resip/stack/ssl/Security.cxx
+++ b/resip/stack/ssl/Security.cxx
@@ -2786,18 +2786,22 @@ BaseSecurity::parseOpenSSLCTXOption(const Data& optionName)
    {
       return SSL_OP_CIPHER_SERVER_PREFERENCE;
    }
+#if defined SSL_OP_CISCO_ANYCONNECT
    if(optionName == ""SSL_OP_CISCO_ANYCONNECT"")
    {
       return SSL_OP_CISCO_ANYCONNECT;
    }
+#endif
    if(optionName == ""SSL_OP_COOKIE_EXCHANGE"")
    {
       return SSL_OP_COOKIE_EXCHANGE;
    }
+#if defined SSL_OP_CRYPTOPRO_TLSEXT_BUG
    if(optionName == ""SSL_OP_CRYPTOPRO_TLSEXT_BUG"")
    {
       return SSL_OP_CRYPTOPRO_TLSEXT_BUG;
    }
+#endif
    if(optionName == ""SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS"")
    {
       return SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS;
@@ -2838,10 +2842,12 @@ BaseSecurity::parseOpenSSLCTXOption(const Data& optionName)
    {
       return SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG;
    }
+#if defined SSL_OP_NO_COMPRESSION
    if(optionName == ""SSL_OP_NO_COMPRESSION"")
    {
       return SSL_OP_NO_COMPRESSION;
    }
+#endif
    if(optionName == ""SSL_OP_NO_QUERY_MTU"")
    {
       return SSL_OP_NO_QUERY_MTU;"
CVE-2018-13095,"From 23fcb3340d033d9f081e21e6c12c2db7eaa541d3 Mon Sep 17 00:00:00 2001
From: Dave Chinner <dchinner@redhat.com>
Date: Thu, 21 Jun 2018 23:25:57 -0700
Subject: [PATCH] xfs: More robust inode extent count validation

When the inode is in extent format, it can't have more extents that
fit in the inode fork. We don't currenty check this, and so this
corruption goes unnoticed by the inode verifiers. This can lead to
crashes operating on invalid in-memory structures.

Attempts to access such a inode will now error out in the verifier
rather than allowing modification operations to proceed.

Reported-by: Wen Xu <wen.xu@gatech.edu>
Signed-off-by: Dave Chinner <dchinner@redhat.com>
Reviewed-by: Darrick J. Wong <darrick.wong@oracle.com>
[darrick: fix a typedef, add some braces and breaks to shut up compiler warnings]
Signed-off-by: Darrick J. Wong <darrick.wong@oracle.com>
---
 fs/xfs/libxfs/xfs_format.h    |  3 ++
 fs/xfs/libxfs/xfs_inode_buf.c | 76 ++++++++++++++++++++++-------------
 2 files changed, 50 insertions(+), 29 deletions(-)

diff --git a/fs/xfs/libxfs/xfs_format.h b/fs/xfs/libxfs/xfs_format.h
index 1c5a8aaf2bfcea..7b4a43deb83e0c 100644
--- a/fs/xfs/libxfs/xfs_format.h
+++ b/fs/xfs/libxfs/xfs_format.h
@@ -962,6 +962,9 @@ typedef enum xfs_dinode_fmt {
 		XFS_DFORK_DSIZE(dip, mp) : \
 		XFS_DFORK_ASIZE(dip, mp))
 
+#define XFS_DFORK_MAXEXT(dip, mp, w) \
+	(XFS_DFORK_SIZE(dip, mp, w) / sizeof(struct xfs_bmbt_rec))
+
 /*
  * Return pointers to the data or attribute forks.
  */
diff --git a/fs/xfs/libxfs/xfs_inode_buf.c b/fs/xfs/libxfs/xfs_inode_buf.c
index d38d724534c48e..33dc34655ac3dd 100644
--- a/fs/xfs/libxfs/xfs_inode_buf.c
+++ b/fs/xfs/libxfs/xfs_inode_buf.c
@@ -374,6 +374,47 @@ xfs_log_dinode_to_disk(
 	}
 }
 
+static xfs_failaddr_t
+xfs_dinode_verify_fork(
+	struct xfs_dinode	*dip,
+	struct xfs_mount	*mp,
+	int			whichfork)
+{
+	uint32_t		di_nextents = XFS_DFORK_NEXTENTS(dip, whichfork);
+
+	switch (XFS_DFORK_FORMAT(dip, whichfork)) {
+	case XFS_DINODE_FMT_LOCAL:
+		/*
+		 * no local regular files yet
+		 */
+		if (whichfork == XFS_DATA_FORK) {
+			if (S_ISREG(be16_to_cpu(dip->di_mode)))
+				return __this_address;
+			if (be64_to_cpu(dip->di_size) >
+					XFS_DFORK_SIZE(dip, mp, whichfork))
+				return __this_address;
+		}
+		if (di_nextents)
+			return __this_address;
+		break;
+	case XFS_DINODE_FMT_EXTENTS:
+		if (di_nextents > XFS_DFORK_MAXEXT(dip, mp, whichfork))
+			return __this_address;
+		break;
+	case XFS_DINODE_FMT_BTREE:
+		if (whichfork == XFS_ATTR_FORK) {
+			if (di_nextents > MAXAEXTNUM)
+				return __this_address;
+		} else if (di_nextents > MAXEXTNUM) {
+			return __this_address;
+		}
+		break;
+	default:
+		return __this_address;
+	}
+	return NULL;
+}
+
 xfs_failaddr_t
 xfs_dinode_verify(
 	struct xfs_mount	*mp,
@@ -441,24 +482,9 @@ xfs_dinode_verify(
 	case S_IFREG:
 	case S_IFLNK:
 	case S_IFDIR:
-		switch (dip->di_format) {
-		case XFS_DINODE_FMT_LOCAL:
-			/*
-			 * no local regular files yet
-			 */
-			if (S_ISREG(mode))
-				return __this_address;
-			if (di_size > XFS_DFORK_DSIZE(dip, mp))
-				return __this_address;
-			if (dip->di_nextents)
-				return __this_address;
-			/* fall through */
-		case XFS_DINODE_FMT_EXTENTS:
-		case XFS_DINODE_FMT_BTREE:
-			break;
-		default:
-			return __this_address;
-		}
+		fa = xfs_dinode_verify_fork(dip, mp, XFS_DATA_FORK);
+		if (fa)
+			return fa;
 		break;
 	case 0:
 		/* Uninitialized inode ok. */
@@ -468,17 +494,9 @@ xfs_dinode_verify(
 	}
 
 	if (XFS_DFORK_Q(dip)) {
-		switch (dip->di_aformat) {
-		case XFS_DINODE_FMT_LOCAL:
-			if (dip->di_anextents)
-				return __this_address;
-		/* fall through */
-		case XFS_DINODE_FMT_EXTENTS:
-		case XFS_DINODE_FMT_BTREE:
-			break;
-		default:
-			return __this_address;
-		}
+		fa = xfs_dinode_verify_fork(dip, mp, XFS_ATTR_FORK);
+		if (fa)
+			return fa;
 	} else {
 		/*
 		 * If there is no fork offset, this may be a freshly-made inode"
CVE-2018-19937,"From d84d7c0a94eb7fba202d2c5fc3739276d2d3986f Mon Sep 17 00:00:00 2001
From: Carola Nitz <nitz.carola@googlemail.com>
Date: Tue, 27 Nov 2018 18:25:47 +0100
Subject: [PATCH] VLCAppDelegate: move openURLcalls behind passcode validation

---
 Sources/VLCAppDelegate.m | 47 ++++++++++++++++++++++++++--------------
 1 file changed, 31 insertions(+), 16 deletions(-)

diff --git a/Sources/VLCAppDelegate.m b/Sources/VLCAppDelegate.m
index c8bbd5778d..fea29a601f 100644
--- a/Sources/VLCAppDelegate.m
+++ b/Sources/VLCAppDelegate.m
@@ -110,22 +110,12 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
     // enable crash preventer
     void (^setupBlock)() = ^{
         __weak typeof(self) weakSelf = self;
-        void (^setupLibraryBlock)() = ^{
-            _libraryViewController = [[VLCLibraryViewController alloc] init];
-            UINavigationController *navCon = [[UINavigationController alloc] initWithRootViewController:_libraryViewController];
-
-            VLCSidebarController *sidebarVC = [VLCSidebarController sharedInstance];
-            sidebarVC.contentViewController = navCon;
-
-            VLCPlayerDisplayController *playerDisplayController = [VLCPlayerDisplayController sharedInstance];
-            playerDisplayController.childViewController = sidebarVC.fullViewController;
-
-            weakSelf.window.rootViewController = playerDisplayController;
-        };
         UINavigationController *navCon = [[UINavigationController alloc] initWithRootViewController:[[UIViewController alloc] init]];
         self.window.rootViewController = navCon;
         [self.window makeKeyAndVisible];
-        [self validatePasscodeIfNeededWithCompletion:setupLibraryBlock];
+        [self validatePasscodeIfNeededWithCompletion:^{
+            [weakSelf setupLibrary];
+        }];
 
         BOOL spotlightEnabled = ![VLCKeychainCoordinator passcodeLockEnabled];
         [[MLMediaLibrary sharedMediaLibrary] setSpotlightIndexingEnabled:spotlightEnabled];
@@ -202,6 +192,20 @@ - (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(
     return YES;
 }
 
+- (void)setupLibrary
+{
+    _libraryViewController = [[VLCLibraryViewController alloc] init];
+    UINavigationController *navCon = [[UINavigationController alloc] initWithRootViewController:_libraryViewController];
+
+    VLCSidebarController *sidebarVC = [VLCSidebarController sharedInstance];
+    sidebarVC.contentViewController = navCon;
+
+    VLCPlayerDisplayController *playerDisplayController = [VLCPlayerDisplayController sharedInstance];
+    playerDisplayController.childViewController = sidebarVC.fullViewController;
+
+    _window.rootViewController = playerDisplayController;
+}
+
 - (void)setupAppearence
 {
     UIColor *vlcOrange = [UIColor VLCOrangeTintColor];
@@ -294,6 +298,17 @@ - (void)application:(UIApplication *)application
 
 - (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options
 {
+    __weak typeof(self) weakSelf = self;
+    [self validatePasscodeIfNeededWithCompletion:^{
+        if (!_libraryViewController) {
+            [weakSelf setupLibrary];
+        }
+        [weakSelf openURL:url options:options];
+    }];
+    return YES;
+}
+
+- (BOOL)openURL:(NSURL *)url options:(NSDictionary<UIApplicationOpenURLOptionsKey,id> *)options {
     //Handles Dropbox Authorization flow.
     DBOAuthResult *authResult = [DBClientsManager handleRedirectURL:url];
     if (authResult != nil) {
@@ -346,12 +361,12 @@ - (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDiction
                 [self playWithURL:movieURL completion:^(BOOL success) {
                     NSURL *callback = success ? successCallback : errorCallback;
                     if (@available(iOS 10, *)) {
-                         [[UIApplication sharedApplication] openURL:callback options:@{} completionHandler:nil];
+                        [[UIApplication sharedApplication] openURL:callback options:@{} completionHandler:nil];
                     } else {
 #pragma clang diagnostic push
 #pragma clang diagnostic ignored ""-Wdeprecated-declarations""
                         /* UIApplication's replacement calls require iOS 10 or later, which we can't enforce as of yet */
-                       [[UIApplication sharedApplication] openURL:callback];
+                        [[UIApplication sharedApplication] openURL:callback];
 #pragma clang diagnostic pop
                     }
                 }];
@@ -369,7 +384,7 @@ - (BOOL)application:(UIApplication *)app openURL:(NSURL *)url options:(NSDiction
 
                     /* Safari & al mangle vlc://http:// so fix this */
                     if (location != NSNotFound && [parsedString characterAtIndex:location - 1] != 0x3a) { // :
-                            parsedString = [NSString stringWithFormat:@""%@://%@"", [parsedString substringToIndex:location], [parsedString substringFromIndex:location+2]];
+                        parsedString = [NSString stringWithFormat:@""%@://%@"", [parsedString substringToIndex:location], [parsedString substringFromIndex:location+2]];
                     } else {
                         parsedString = [receivedUrl substringFromIndex:6];
                         if (![parsedString hasPrefix:@""http://""] && ![parsedString hasPrefix:@""https://""] && ![parsedString hasPrefix:@""ftp://""]) {"
CVE-2018-16427,"From 8fe377e93b4b56060e5bbfb6f3142ceaeca744fa Mon Sep 17 00:00:00 2001
From: Frank Morgner <frankmorgner@gmail.com>
Date: Fri, 25 May 2018 14:54:47 +0200
Subject: [PATCH] fixed out of bounds reads

Thanks to Eric Sesterhenn from X41 D-SEC GmbH
for reporting and suggesting security fixes.
---
 src/libopensc/asn1.c           |  1 +
 src/libopensc/card-asepcos.c   |  2 +-
 src/libopensc/card-authentic.c |  5 ++++-
 src/libopensc/card-cac.c       |  9 +++++++--
 src/libopensc/card-coolkey.c   |  2 +-
 src/libopensc/card-entersafe.c |  8 +++++---
 src/libopensc/card-epass2003.c | 35 ++++++++++++++++++----------------
 src/libopensc/card-gpk.c       |  3 +++
 src/libopensc/card-iasecc.c    |  2 +-
 src/libopensc/card-oberthur.c  |  7 +++++++
 src/libopensc/card-openpgp.c   |  6 ++++++
 src/libopensc/card-piv.c       |  9 +++++----
 src/libopensc/card-rtecp.c     |  2 +-
 src/libopensc/card-setcos.c    | 18 +++++++++++++++--
 src/libopensc/ef-gdo.c         |  2 +-
 src/libopensc/pkcs15-itacns.c  |  1 +
 src/libopensc/pkcs15-tcos.c    |  8 +++++---
 src/tools/opensc-tool.c        | 21 ++++++++++----------
 18 files changed, 95 insertions(+), 46 deletions(-)

diff --git a/src/libopensc/asn1.c b/src/libopensc/asn1.c
index b1be88dcf0..e43c0f1362 100644
--- a/src/libopensc/asn1.c
+++ b/src/libopensc/asn1.c
@@ -103,6 +103,7 @@ int sc_asn1_read_tag(const u8 ** buf, size_t buflen, unsigned int *cla_out,
 	len = *p & 0x7f;
 	if (*p++ & 0x80) {
 		unsigned int a = 0;
+		left--;
 		if (len > 4 || len > left)
 			return SC_ERROR_INVALID_ASN1_OBJECT;
 		left -= len;
diff --git a/src/libopensc/card-asepcos.c b/src/libopensc/card-asepcos.c
index 8055073cd7..5459d98f1b 100644
--- a/src/libopensc/card-asepcos.c
+++ b/src/libopensc/card-asepcos.c
@@ -169,7 +169,7 @@ static int asepcos_parse_sec_attr(sc_card_t *card, sc_file_t *file, const u8 *bu
 
 	while (len != 0) {
 		unsigned int amode, tlen = 3;
-		if (len < 5 && p[0] != 0x80 && p[1] != 0x01) {
+		if (len < 5 || p[0] != 0x80 || p[1] != 0x01) {
 			sc_debug(card->ctx, SC_LOG_DEBUG_NORMAL, ""invalid access mode encoding"");
 			return SC_ERROR_INTERNAL;
 		}
diff --git a/src/libopensc/card-authentic.c b/src/libopensc/card-authentic.c
index f72c2d2095..9fbda94a3c 100644
--- a/src/libopensc/card-authentic.c
+++ b/src/libopensc/card-authentic.c
@@ -560,6 +560,9 @@ authentic_set_current_files(struct sc_card *card, struct sc_path *path,
 			sc_file_dup(&card->cache.current_df, file);
 
 			if (cur_df_path.len)   {
+				if (cur_df_path.len + card->cache.current_df->path.len > sizeof card->cache.current_df->path.value
+						|| cur_df_path.len > sizeof card->cache.current_df->path.value)
+					LOG_FUNC_RETURN(ctx, SC_ERROR_UNKNOWN_DATA_RECEIVED);
 				memcpy(card->cache.current_df->path.value + cur_df_path.len,
 						card->cache.current_df->path.value,
 						card->cache.current_df->path.len);
@@ -988,7 +991,7 @@ authentic_process_fci(struct sc_card *card, struct sc_file *file,
 	}
 
 	sc_log_hex(ctx, ""ACL data"", file->sec_attr, file->sec_attr_len);
-	for (ii = 0; ii < file->sec_attr_len / 2; ii++)  {
+	for (ii = 0; ii < file->sec_attr_len / 2 && ii < sizeof ops_DF; ii++)  {
 		unsigned char op = file->type == SC_FILE_TYPE_DF ? ops_DF[ii] : ops_EF[ii];
 		unsigned char acl = *(file->sec_attr + ii*2);
 		unsigned char cred_id = *(file->sec_attr + ii*2 + 1);
diff --git a/src/libopensc/card-cac.c b/src/libopensc/card-cac.c
index 4e853e5c2c..a30a04385f 100644
--- a/src/libopensc/card-cac.c
+++ b/src/libopensc/card-cac.c
@@ -664,12 +664,17 @@ static int cac_read_binary(sc_card_t *card, unsigned int idx,
 		cert_len = 0;
 		cert_ptr = NULL;
 		cert_type = 0;
-		for (tl_ptr = tl, val_ptr=val; tl_len >= 2;
-				val_len -= len, val_ptr += len, tl_len -= tl_head_len) {
+		for (tl_ptr = tl, val_ptr = val; tl_len >= 2;
+		    val_len -= len, val_ptr += len, tl_len -= tl_head_len) {
 			tl_start = tl_ptr;
 			if (sc_simpletlv_read_tag(&tl_ptr, tl_len, &tag, &len) != SC_SUCCESS)
 				break;
 			tl_head_len = tl_ptr - tl_start;
+
+			/* incomplete value */
+			if (val_len < len)
+				break;
+
 			if (tag == CAC_TAG_CERTIFICATE) {
 				cert_len = len;
 				cert_ptr = val_ptr;
diff --git a/src/libopensc/card-coolkey.c b/src/libopensc/card-coolkey.c
index 4c966f64b3..3c57628b0b 100644
--- a/src/libopensc/card-coolkey.c
+++ b/src/libopensc/card-coolkey.c
@@ -1467,7 +1467,7 @@ coolkey_find_attribute(sc_card_t *card, sc_cardctl_coolkey_attribute_t *attribut
 	for (i=0; i < attribute_count; i++) {
 		size_t record_len = coolkey_get_attribute_record_len(attr, object_record_type, buf_len);
 		/* make sure we have the complete record */
-		if (buf_len < record_len) {
+		if (buf_len < record_len || record_len < 4) {
 				return SC_ERROR_CORRUPTED_DATA;
 		}
 		/* does the attribute match the one we are looking for */
diff --git a/src/libopensc/card-entersafe.c b/src/libopensc/card-entersafe.c
index d5264349dd..828b03051b 100644
--- a/src/libopensc/card-entersafe.c
+++ b/src/libopensc/card-entersafe.c
@@ -1408,13 +1408,15 @@ static int entersafe_gen_key(sc_card_t *card, sc_entersafe_gen_key_data *data)
 
 	data->modulus = malloc(len);
 	if (!data->modulus)
-		 SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE,SC_ERROR_OUT_OF_MEMORY);
+		SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, SC_ERROR_OUT_OF_MEMORY);
 
 	p=rbuf;
-	assert(*p=='E');
+	if (*p!='E')
+		SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, SC_ERROR_INVALID_DATA);
 	p+=2+p[1];
 	/* N */
-	assert(*p=='N');
+	if (*p!='N')
+		SC_FUNC_RETURN(card->ctx, SC_LOG_DEBUG_VERBOSE, SC_ERROR_INVALID_DATA);
 	++p;
 	if(*p++>0x80)
 	{
diff --git a/src/libopensc/card-epass2003.c b/src/libopensc/card-epass2003.c
index 88fe82753d..cbe417cf78 100644
--- a/src/libopensc/card-epass2003.c
+++ b/src/libopensc/card-epass2003.c
@@ -740,11 +740,11 @@ construct_mac_tlv(struct sc_card *card, unsigned char *apdu_buf, size_t data_tlv
 		memcpy(mac_tlv + 2, &mac[mac_len - 16], 8);
 	}
 	else {
-		unsigned char iv[8] = { 0 };
+		unsigned char iv[EVP_MAX_IV_LENGTH] = { 0 };
 		unsigned char tmp[8] = { 0 };
 		des_encrypt_cbc(exdata->sk_mac, 8, icv, apdu_buf, mac_len, mac);
 		des_decrypt_cbc(&exdata->sk_mac[8], 8, iv, &mac[mac_len - 8], 8, tmp);
-		memset(iv, 0x00, 8);
+		memset(iv, 0x00, sizeof iv);
 		des_encrypt_cbc(exdata->sk_mac, 8, iv, tmp, 8, mac_tlv + 2);
 	}
 
@@ -903,9 +903,9 @@ epass2003_sm_wrap_apdu(struct sc_card *card, struct sc_apdu *plain, struct sc_ap
  * SW12(TLV)=0x99|0x02|SW1+SW2
  * MAC(TLV)=0x8e|0x08|MAC */
 static int
-decrypt_response(struct sc_card *card, unsigned char *in, unsigned char *out, size_t * out_len)
+decrypt_response(struct sc_card *card, unsigned char *in, size_t inlen, unsigned char *out, size_t * out_len)
 {
-	size_t in_len;
+	size_t cipher_len;
 	size_t i;
 	unsigned char iv[16] = { 0 };
 	unsigned char plaintext[4096] = { 0 };
@@ -922,37 +922,40 @@ decrypt_response(struct sc_card *card, unsigned char *in, unsigned char *out, si
 
 	/* parse cipher length */
 	if (0x01 == in[2] && 0x82 != in[1]) {
-		in_len = in[1];
+		cipher_len = in[1];
 		i = 3;
 	}
 	else if (0x01 == in[3] && 0x81 == in[1]) {
-		in_len = in[2];
+		cipher_len = in[2];
 		i = 4;
 	}
 	else if (0x01 == in[4] && 0x82 == in[1]) {
-		in_len = in[2] * 0x100;
-		in_len += in[3];
+		cipher_len = in[2] * 0x100;
+		cipher_len += in[3];
 		i = 5;
 	}
 	else {
 		return -1;
 	}
 
+	if (cipher_len < 2 || i+cipher_len > inlen || cipher_len > sizeof plaintext)
+		return -1;
+
 	/* decrypt */
 	if (KEY_TYPE_AES == exdata->smtype)
-		aes128_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], in_len - 1, plaintext);
+		aes128_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], cipher_len - 1, plaintext);
 	else
-		des3_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], in_len - 1, plaintext);
+		des3_decrypt_cbc(exdata->sk_enc, 16, iv, &in[i], cipher_len - 1, plaintext);
 
 	/* unpadding */
-	while (0x80 != plaintext[in_len - 2] && (in_len - 2 > 0))
-		in_len--;
+	while (0x80 != plaintext[cipher_len - 2] && (cipher_len - 2 > 0))
+		cipher_len--;
 
-	if (2 == in_len)
+	if (2 == cipher_len)
 		return -1;
 
-	memcpy(out, plaintext, in_len - 2);
-	*out_len = in_len - 2;
+	memcpy(out, plaintext, cipher_len - 2);
+	*out_len = cipher_len - 2;
 	return 0;
 }
 
@@ -974,7 +977,7 @@ epass2003_sm_unwrap_apdu(struct sc_card *card, struct sc_apdu *sm, struct sc_apd
 	r = sc_check_sw(card, sm->sw1, sm->sw2);
 	if (r == SC_SUCCESS) {
 		if (exdata->sm) {
-			if (0 != decrypt_response(card, sm->resp, plain->resp, &len))
+			if (0 != decrypt_response(card, sm->resp, sm->resplen, plain->resp, &len))
 				return SC_ERROR_CARD_CMD_FAILED;
 		}
 		else {
diff --git a/src/libopensc/card-gpk.c b/src/libopensc/card-gpk.c
index b3dd848c21..c8d4469142 100644
--- a/src/libopensc/card-gpk.c
+++ b/src/libopensc/card-gpk.c
@@ -409,6 +409,9 @@ gpk_parse_fileinfo(sc_card_t *card,
 		if (sp[0] == 0x85) {
 			unsigned int	ac[3], n;
 
+			if (sp + 11 + 2*3 >= end)
+				break;
+
 			file->id = (sp[4] << 8) | sp[5];
 			file->size = (sp[8] << 8) | sp[9];
 			file->record_length = sp[7];
diff --git a/src/libopensc/card-iasecc.c b/src/libopensc/card-iasecc.c
index 3e0d3acd9e..48d4cea560 100644
--- a/src/libopensc/card-iasecc.c
+++ b/src/libopensc/card-iasecc.c
@@ -2548,7 +2548,7 @@ iasecc_get_serialnr(struct sc_card *card, struct sc_serial_number *serial)
 	if (card->type == SC_CARD_TYPE_IASECC_SAGEM)   {
 		/* 5A 0A 92 50 00 20 10 10 25 00 01 3F */
 		/*            00 02 01 01 02 50 00 13  */
-		for (ii=0; ii < rbuf[1] - offs; ii++)
+		for (ii=0; (ii < rbuf[1] - offs) && (ii + offs + 2 < sizeof(rbuf)); ii++)
 			*(card->serialnr.value + ii) = ((rbuf[ii + offs + 1] & 0x0F) << 4)
 				+ ((rbuf[ii + offs + 2] & 0xF0) >> 4) ;
 		card->serialnr.len = ii;
diff --git a/src/libopensc/card-oberthur.c b/src/libopensc/card-oberthur.c
index 818a6a6cb5..112367b570 100644
--- a/src/libopensc/card-oberthur.c
+++ b/src/libopensc/card-oberthur.c
@@ -476,6 +476,9 @@ auth_select_file(struct sc_card *card, const struct sc_path *in_path,
 
 	memcpy(&path, in_path, sizeof(struct sc_path));
 
+	if (!auth_current_df)
+		return SC_ERROR_OBJECT_NOT_FOUND;
+
 	sc_log(card->ctx, ""in_path; type=%d, path=%s, out %p"",
 			in_path->type, sc_print_path(in_path), file_out);
 	sc_log(card->ctx, ""current path; type=%d, path=%s"",
@@ -2113,6 +2116,10 @@ auth_read_binary(struct sc_card *card, unsigned int offset,
 	bn[1].data = NULL;
 
 	LOG_FUNC_CALLED(card->ctx);
+
+	if (!auth_current_ef)
+		LOG_TEST_RET(card->ctx, SC_ERROR_INVALID_ARGUMENTS, ""Invalid auth_current_ef"");
+
 	sc_log(card->ctx,
 	       ""offset %i; size %""SC_FORMAT_LEN_SIZE_T""u; flags 0x%lX"",
 	       offset, count, flags);
diff --git a/src/libopensc/card-openpgp.c b/src/libopensc/card-openpgp.c
index 594ff0525c..5fa3899227 100644
--- a/src/libopensc/card-openpgp.c
+++ b/src/libopensc/card-openpgp.c
@@ -1061,6 +1061,9 @@ pgp_enumerate_blob(sc_card_t *card, pgp_blob_t *blob)
 		const u8	*data = in;
 		pgp_blob_t	*new;
 
+		if (!in)
+			return SC_ERROR_OBJECT_NOT_VALID;
+
 		r = sc_asn1_read_tag(&data, blob->len - (in - blob->data),
 					&cla, &tag, &len);
 		if (r < 0 || data == NULL) {
@@ -1069,6 +1072,9 @@ pgp_enumerate_blob(sc_card_t *card, pgp_blob_t *blob)
 			return SC_ERROR_OBJECT_NOT_VALID;
 		}
 
+		if (data + len > blob->data + blob->len)
+			return SC_ERROR_OBJECT_NOT_VALID;
+
 		/* undo ASN1's split of tag & class */
 		for (tmptag = tag; tmptag > 0x0FF; tmptag >>= 8) {
 			cla <<= 8;
diff --git a/src/libopensc/card-piv.c b/src/libopensc/card-piv.c
index 13b0cc21c5..0cd3f5ad99 100644
--- a/src/libopensc/card-piv.c
+++ b/src/libopensc/card-piv.c
@@ -573,7 +573,7 @@ static int piv_general_io(sc_card_t *card, int ins, int p1, int p2,
 		 * the buffer is bigger, so it will not produce ""ASN1.tag too long!"" */
 
 		body = rbuf;
-		if (sc_asn1_read_tag(&body, 0xffff, &cla_out, &tag_out, &bodylen) !=  SC_SUCCESS
+		if (sc_asn1_read_tag(&body, rbuflen, &cla_out, &tag_out, &bodylen) !=  SC_SUCCESS
 				|| body == NULL)  {
 			/* only early beta cards had this problem */
 			sc_log(card->ctx, ""***** received buffer tag MISSING "");
@@ -3033,12 +3033,13 @@ static int piv_match_card_continued(sc_card_t *card)
 			 *   73 66 74 65 20 63 64 31 34 34
 			 * will check for 73 66 74 65
 			 */
-			else if (card->reader->atr_info.hist_bytes_len >= 4 &&
-					!(memcmp(card->reader->atr_info.hist_bytes, ""sfte"", 4))) {
+			else if (card->reader->atr_info.hist_bytes_len >= 4
+					&& !(memcmp(card->reader->atr_info.hist_bytes, ""sfte"", 4))) {
 				type = SC_CARD_TYPE_PIV_II_GI_DE;
 			}
 
-			else if (card->reader->atr_info.hist_bytes[0] == 0x80u) { /* compact TLV */
+			else if (card->reader->atr_info.hist_bytes_len > 0
+					&& card->reader->atr_info.hist_bytes[0] == 0x80u) { /* compact TLV */
 				size_t datalen;
 				const u8 *data = sc_compacttlv_find_tag(card->reader->atr_info.hist_bytes + 1,
 									card->reader->atr_info.hist_bytes_len - 1,
diff --git a/src/libopensc/card-rtecp.c b/src/libopensc/card-rtecp.c
index a1efe22e8d..32932ae75a 100644
--- a/src/libopensc/card-rtecp.c
+++ b/src/libopensc/card-rtecp.c
@@ -275,7 +275,7 @@ static int rtecp_select_file(sc_card_t *card,
 		set_acl_from_sec_attr(card, file);
 	else
 		r = SC_ERROR_UNKNOWN_DATA_RECEIVED;
-	if (r)
+	if (r && !file_out)
 		sc_file_free(file);
 	else
 	{
diff --git a/src/libopensc/card-setcos.c b/src/libopensc/card-setcos.c
index f6dc0c612c..98464c2e17 100644
--- a/src/libopensc/card-setcos.c
+++ b/src/libopensc/card-setcos.c
@@ -789,6 +789,8 @@ static void parse_sec_attr_44(sc_file_t *file, const u8 *buf, size_t len)
 	/* Check all sub-AC definitions within the total AC */
 	while (len > 1) {				/* minimum length = 2 */
 		int	iACLen   = buf[iOffset] & 0x0F;
+		if ((size_t) iACLen > len)
+			break;
 
 		iPinCount = -1;			/* default no pin required */
 		iMethod = SC_AC_NONE;		/* default no authentication required */
@@ -806,7 +808,10 @@ static void parse_sec_attr_44(sc_file_t *file, const u8 *buf, size_t len)
 
 			/* Get KeyNumber if available */
 			if(iKeyLen) {
-				int iSC = buf[iOffset+iACLen];
+				int iSC;
+				if (len < 1+iACLen)
+					break;
+				iSC = buf[iOffset+iACLen];
 
 				switch( (iSC>>5) & 0x03 ){
 				case 0:
@@ -825,11 +830,15 @@ static void parse_sec_attr_44(sc_file_t *file, const u8 *buf, size_t len)
 
 			/* Get PinNumber if available */
 			if (iACLen > (1+iParmLen+iKeyLen)) {  /* check via total length if pin is present */
+				if (len < 1+1+1+iParmLen)
+					break;
 				iKeyRef = buf[iOffset+1+1+iParmLen];  /* PTL + AM-header + parameter-bytes */
 				iMethod = SC_AC_CHV;
 			}
 
 			/* Convert SETCOS command to OpenSC command group */
+			if (len < 1+2)
+				break;
 			switch(buf[iOffset+2]){
 			case 0x2A:			/* crypto operation */
 				iOperation = SC_AC_OP_CRYPTO;
@@ -863,7 +872,10 @@ static void parse_sec_attr_44(sc_file_t *file, const u8 *buf, size_t len)
 			iPinCount = iACLen - 1;		
 
 			if (buf[iOffset] & 0x20) {
-				int iSC = buf[iOffset + iACLen];
+				int iSC;
+				if (len < 1 + iACLen)
+					break;
+				iSC = buf[iOffset + iACLen];
 
 				switch( (iSC>>5) & 0x03 ) {
 				case 0:
@@ -884,6 +896,8 @@ static void parse_sec_attr_44(sc_file_t *file, const u8 *buf, size_t len)
 
 			/* Pin present ? */
 			if ( iPinCount > 0 ) {
+				if (len < 1 + 2)
+					break;
 				iKeyRef = buf[iOffset + 2];	/* pin ref */
 				iMethod = SC_AC_CHV;
 			}
diff --git a/src/libopensc/ef-gdo.c b/src/libopensc/ef-gdo.c
index 39dea2e502..7888fd4954 100644
--- a/src/libopensc/ef-gdo.c
+++ b/src/libopensc/ef-gdo.c
@@ -72,7 +72,7 @@ sc_parse_ef_gdo_content(const unsigned char *gdo, size_t gdo_len,
 		}
 
 		p += tag_len;
-		left -= (p - gdo);
+		left = gdo_len - (p - gdo);
 	}
 
 	if (!iccsn_found && iccsn_len)
diff --git a/src/libopensc/pkcs15-itacns.c b/src/libopensc/pkcs15-itacns.c
index eef8ac1f91..f0f3959092 100644
--- a/src/libopensc/pkcs15-itacns.c
+++ b/src/libopensc/pkcs15-itacns.c
@@ -550,6 +550,7 @@ static int itacns_add_data_files(sc_pkcs15_card_t *p15card)
 		sc_debug(p15card->card->ctx, SC_LOG_DEBUG_NORMAL,
 			""Could not read EF_DatiPersonali: ""
 			""keeping generic card name"");
+		return SC_SUCCESS;
 	}
 
 	{
diff --git a/src/libopensc/pkcs15-tcos.c b/src/libopensc/pkcs15-tcos.c
index 74bb32a6fd..7732ad08aa 100644
--- a/src/libopensc/pkcs15-tcos.c
+++ b/src/libopensc/pkcs15-tcos.c
@@ -132,7 +132,7 @@ static int insert_key(
 		int i, rec_no=0;
 		if(prkey_info.path.len>=2) prkey_info.path.len-=2;
 		sc_append_file_id(&prkey_info.path, 0x5349);
-		if(sc_select_file(card, &prkey_info.path, NULL)!=SC_SUCCESS){
+		if(sc_select_file(card, &prkey_info.path, NULL)!=SC_SUCCESS || !f->prop_attr){
 			sc_debug(ctx, SC_LOG_DEBUG_NORMAL,
 				""Select(%s) failed\n"",
 				sc_print_path(&prkey_info.path));
@@ -157,7 +157,8 @@ static int insert_key(
 			if(buf[i]==0xB8) can_crypt++;
 		}
 	} else {
-		if(sc_select_file(card, &prkey_info.path, &f)!=SC_SUCCESS){
+		if(sc_select_file(card, &prkey_info.path, &f)!=SC_SUCCESS
+			   	|| !f->prop_attr || f->prop_attr_len < 2){
 			sc_debug(ctx, SC_LOG_DEBUG_NORMAL,
 				""Select(%s) failed\n"",
 				sc_print_path(&prkey_info.path));
@@ -245,7 +246,8 @@ static int insert_pin(
 			return 1;
 		}
 	} else {
-		if(sc_select_file(card, &pin_info.path, &f)!=SC_SUCCESS){
+		if(sc_select_file(card, &pin_info.path, &f)!=SC_SUCCESS
+			   	|| !f->prop_attr || f->prop_attr_len < 4){
 			sc_debug(ctx, SC_LOG_DEBUG_NORMAL,""Select(%s) failed\n"", path);
 			return 1;
 		}
diff --git a/src/tools/opensc-tool.c b/src/tools/opensc-tool.c
index 68c72805ea..2f121acf6a 100644
--- a/src/tools/opensc-tool.c
+++ b/src/tools/opensc-tool.c
@@ -457,7 +457,7 @@ static int enum_dir(sc_path_t path, int depth)
 {
 	sc_file_t *file;
 	int r, file_type;
-	u8 files[SC_MAX_APDU_BUFFER_SIZE];
+	u8 files[SC_MAX_EXT_APDU_BUFFER_SIZE];
 
 	r = sc_lock(card);
 	if (r == SC_SUCCESS)
@@ -483,15 +483,16 @@ static int enum_dir(sc_path_t path, int depth)
 		}
 		if (r == 0) {
 			printf(""Empty directory\n"");
-		} else
-		for (i = 0; i < r/2; i++) {
-			sc_path_t tmppath;
-
-			memset(&tmppath, 0, sizeof(tmppath));
-			memcpy(&tmppath, &path, sizeof(path));
-			memcpy(tmppath.value + tmppath.len, files + 2*i, 2);
-			tmppath.len += 2;
-			enum_dir(tmppath, depth + 1);
+		} else {
+			for (i = 0; i < r/2; i++) {
+				sc_path_t tmppath;
+
+				memset(&tmppath, 0, sizeof(tmppath));
+				memcpy(&tmppath, &path, sizeof(path));
+				memcpy(tmppath.value + tmppath.len, files + 2*i, 2);
+				tmppath.len += 2;
+				enum_dir(tmppath, depth + 1);
+			}
 		}
 	}
 	return 0;"
