vuln_id,code_diff
CVE-2017-8065,"From 3b30460c5b0ed762be75a004e924ec3f8711e032 Mon Sep 17 00:00:00 2001
From: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Date: Mon, 27 Feb 2017 15:30:56 +0000
Subject: [PATCH] crypto: ccm - move cbcmac input off the stack

Commit f15f05b0a5de (""crypto: ccm - switch to separate cbcmac driver"")
refactored the CCM driver to allow separate implementations of the
underlying MAC to be provided by a platform. However, in doing so, it
moved some data from the linear region to the stack, which violates the
SG constraints when the stack is virtually mapped.

So move idata/odata back to the request ctx struct, of which we can
reasonably expect that it has been allocated using kmalloc() et al.

Reported-by: Johannes Berg <johannes@sipsolutions.net>
Fixes: f15f05b0a5de (""crypto: ccm - switch to separate cbcmac driver"")
Signed-off-by: Ard Biesheuvel <ard.biesheuvel@linaro.org>
Tested-by: Johannes Berg <johannes@sipsolutions.net>
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
---
 crypto/ccm.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/crypto/ccm.c b/crypto/ccm.c
index 442848807a52b1..1ce37ae0ce565a 100644
--- a/crypto/ccm.c
+++ b/crypto/ccm.c
@@ -45,6 +45,7 @@ struct crypto_rfc4309_req_ctx {
 
 struct crypto_ccm_req_priv_ctx {
 	u8 odata[16];
+	u8 idata[16];
 	u8 auth_tag[16];
 	u32 flags;
 	struct scatterlist src[3];
@@ -183,8 +184,8 @@ static int crypto_ccm_auth(struct aead_request *req, struct scatterlist *plain,
 	AHASH_REQUEST_ON_STACK(ahreq, ctx->mac);
 	unsigned int assoclen = req->assoclen;
 	struct scatterlist sg[3];
-	u8 odata[16];
-	u8 idata[16];
+	u8 *odata = pctx->odata;
+	u8 *idata = pctx->idata;
 	int ilen, err;
 
 	/* format control data for input */"
CVE-2017-9201,"From dc49c807926b96e503bd7c0dec35119eecd6c6fe Mon Sep 17 00:00:00 2001
From: Jason Summers <jason1@pobox.com>
Date: Mon, 15 May 2017 13:27:08 -0400
Subject: [PATCH] Double-check that the input image's density is valid

Fixes a bug that could result in division by zero, at least for a JPEG
source image.
Fixes issues #19, #20
---
 src/imagew-api.c | 19 +++++++++++++------
 1 file changed, 13 insertions(+), 6 deletions(-)

diff --git a/src/imagew-api.c b/src/imagew-api.c
index 3953731..80531ab 100644
--- a/src/imagew-api.c
+++ b/src/imagew-api.c
@@ -483,13 +483,20 @@ IW_IMPL(int) iw_get_input_density(struct iw_context *ctx,
 {
 	*px = 1.0;
 	*py = 1.0;
-	*pcode = ctx->img1.density_code;
-	if(ctx->img1.density_code!=IW_DENSITY_UNKNOWN) {
-		*px = ctx->img1.density_x;
-		*py = ctx->img1.density_y;
-		return 1;
+	*pcode = IW_DENSITY_UNKNOWN;
+
+	if(ctx->img1.density_code==IW_DENSITY_UNKNOWN) {
+		return 0;
 	}
-	return 0;
+	if(!iw_is_valid_density(ctx->img1.density_x, ctx->img1.density_y,
+		ctx->img1.density_code))
+	{
+		return 0;
+	}
+	*px = ctx->img1.density_x;
+	*py = ctx->img1.density_y;
+	*pcode = ctx->img1.density_code;
+	return 1;
 }
 
 IW_IMPL(void) iw_set_output_density(struct iw_context *ctx,"
CVE-2017-16994,"From 373c4557d2aa362702c4c2d41288fb1e54990b7c Mon Sep 17 00:00:00 2001
From: Jann Horn <jannh@google.com>
Date: Tue, 14 Nov 2017 01:03:44 +0100
Subject: [PATCH] mm/pagewalk.c: report holes in hugetlb ranges

This matters at least for the mincore syscall, which will otherwise copy
uninitialized memory from the page allocator to userspace.  It is
probably also a correctness error for /proc/$pid/pagemap, but I haven't
tested that.

Removing the `walk->hugetlb_entry` condition in walk_hugetlb_range() has
no effect because the caller already checks for that.

This only reports holes in hugetlb ranges to callers who have specified
a hugetlb_entry callback.

This issue was found using an AFL-based fuzzer.

v2:
 - don't crash on ->pte_hole==NULL (Andrew Morton)
 - add Cc stable (Andrew Morton)

Fixes: 1e25a271c8ac (""mincore: apply page table walker on do_mincore()"")
Signed-off-by: Jann Horn <jannh@google.com>
Cc: <stable@vger.kernel.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---
 mm/pagewalk.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/mm/pagewalk.c b/mm/pagewalk.c
index 8bd4afa83cb89f..23a3e415ac2ce5 100644
--- a/mm/pagewalk.c
+++ b/mm/pagewalk.c
@@ -188,8 +188,12 @@ static int walk_hugetlb_range(unsigned long addr, unsigned long end,
 	do {
 		next = hugetlb_entry_end(h, addr, end);
 		pte = huge_pte_offset(walk->mm, addr & hmask, sz);
-		if (pte && walk->hugetlb_entry)
+
+		if (pte)
 			err = walk->hugetlb_entry(pte, hmask, addr, next, walk);
+		else if (walk->pte_hole)
+			err = walk->pte_hole(addr, next, walk);
+
 		if (err)
 			break;
 	} while (addr = next, addr != end);"
CVE-2017-18174,"From 8dca4a41f1ad65043a78c2338d9725f859c8d2c3 Mon Sep 17 00:00:00 2001
From: Wei Yongjun <weiyongjun1@huawei.com>
Date: Tue, 17 Jan 2017 15:55:32 +0000
Subject: [PATCH] pinctrl/amd: Drop pinctrl_unregister for devm_ registered
 device

It's not necessary to unregister pin controller device registered
with devm_pinctrl_register() and using pinctrl_unregister() leads
to a double free.

Fixes: 3bfd44306c65 (""pinctrl: amd: Add support for additional GPIO"")
Signed-off-by: Wei Yongjun <weiyongjun1@huawei.com>
Signed-off-by: Linus Walleij <linus.walleij@linaro.org>
---
 drivers/pinctrl/pinctrl-amd.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/drivers/pinctrl/pinctrl-amd.c b/drivers/pinctrl/pinctrl-amd.c
index 1ee107f147d04f..6b75bd2b71db38 100644
--- a/drivers/pinctrl/pinctrl-amd.c
+++ b/drivers/pinctrl/pinctrl-amd.c
@@ -836,7 +836,6 @@ static int amd_gpio_remove(struct platform_device *pdev)
 	gpio_dev = platform_get_drvdata(pdev);
 
 	gpiochip_remove(&gpio_dev->gc);
-	pinctrl_unregister(gpio_dev->pctrl);
 
 	return 0;
 }"
CVE-2017-12990,"From c2ef693866beae071a24b45c49f9674af1df4028 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Mon, 6 Feb 2017 14:33:50 -0800
Subject: [PATCH] CVE-2017-12990/Fix printing of ISAKMPv1 Notification payload
 data.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The closest thing to a specification for the contents of the payload
data is draft-ietf-ipsec-notifymsg-04, and nothing in there says that it
is ever a complete ISAKMP message, so don't dissect types we don't have
specific code for as a complete ISAKMP message.

While we're at it, fix a comment, and clean up printing of V1 Nonce,
V2 Authentication payloads, and v2 Notice payloads.

This fixes an infinite loop discovered by Forcepoint's security
researchers Otto Airamo & Antti LevomÃ¤ki.

Add a test using the capture file supplied by the reporter(s).
---
 print-isakmp.c               | 112 +++++++++++++++++++----------------
 tests/TESTLIST               |   1 +
 tests/isakmp-no-none-np.out  |  78 ++++++++++++++++++++++++
 tests/isakmp-no-none-np.pcap | Bin 0 -> 2344 bytes
 4 files changed, 139 insertions(+), 52 deletions(-)
 create mode 100644 tests/isakmp-no-none-np.out
 create mode 100644 tests/isakmp-no-none-np.pcap

diff --git a/print-isakmp.c b/print-isakmp.c
index 2fa15b861..9de9b75d2 100644
--- a/print-isakmp.c
+++ b/print-isakmp.c
@@ -428,7 +428,7 @@ struct notify_messages {
 	char     *msg;
 };
 
-/* 3.8 Notification Payload */
+/* 3.8 Authentication Payload */
 struct ikev2_auth {
 	struct isakmp_gen h;
 	uint8_t  auth_method;  /* Protocol-ID */
@@ -1590,15 +1590,20 @@ ikev1_nonce_print(netdissect_options *ndo, u_char tpay _U_,
 
 	ND_TCHECK(*ext);
 	UNALIGNED_MEMCPY(&e, ext, sizeof(e));
-	ND_PRINT((ndo,"" n len=%d"", ntohs(e.len) - 4));
-	if (2 < ndo->ndo_vflag && 4 < ntohs(e.len)) {
-		ND_PRINT((ndo,"" ""));
-		if (!rawprint(ndo, (const uint8_t *)(ext + 1), ntohs(e.len) - 4))
-			goto trunc;
-	} else if (1 < ndo->ndo_vflag && 4 < ntohs(e.len)) {
-		ND_PRINT((ndo,"" ""));
-		if (!ike_show_somedata(ndo, (const u_char *)(const uint8_t *)(ext + 1), ep))
-			goto trunc;
+	/*
+	 * Our caller has ensured that the length is >= 4.
+	 */
+	ND_PRINT((ndo,"" n len=%u"", ntohs(e.len) - 4));
+	if (ntohs(e.len) > 4) {
+		if (ndo->ndo_vflag > 2) {
+			ND_PRINT((ndo, "" ""));
+			if (!rawprint(ndo, (const uint8_t *)(ext + 1), ntohs(e.len) - 4))
+				goto trunc;
+		} else if (ndo->ndo_vflag > 1) {
+			ND_PRINT((ndo, "" ""));
+			if (!ike_show_somedata(ndo, (const u_char *)(ext + 1), ep))
+				goto trunc;
+		}
 	}
 	return (const u_char *)ext + ntohs(e.len);
 trunc:
@@ -1609,8 +1614,8 @@ ikev1_nonce_print(netdissect_options *ndo, u_char tpay _U_,
 static const u_char *
 ikev1_n_print(netdissect_options *ndo, u_char tpay _U_,
 	      const struct isakmp_gen *ext, u_int item_len,
-	      const u_char *ep, uint32_t phase, uint32_t doi0 _U_,
-	      uint32_t proto0 _U_, int depth)
+	      const u_char *ep, uint32_t phase _U_, uint32_t doi0 _U_,
+	      uint32_t proto0 _U_, int depth _U_)
 {
 	const struct ikev1_pl_n *p;
 	struct ikev1_pl_n n;
@@ -1712,35 +1717,41 @@ ikev1_n_print(netdissect_options *ndo, u_char tpay _U_,
 	ep2 = (const u_char *)p + item_len;
 
 	if (cp < ep) {
-		ND_PRINT((ndo,"" orig=(""));
 		switch (ntohs(n.type)) {
 		case IPSECDOI_NTYPE_RESPONDER_LIFETIME:
 		    {
 			const struct attrmap *map = oakley_t_map;
 			size_t nmap = sizeof(oakley_t_map)/sizeof(oakley_t_map[0]);
+			ND_PRINT((ndo,"" attrs=(""));
 			while (cp < ep && cp < ep2) {
 				cp = ikev1_attrmap_print(ndo, cp,
 					(ep < ep2) ? ep : ep2, map, nmap);
 			}
+			ND_PRINT((ndo,"")""));
 			break;
 		    }
 		case IPSECDOI_NTYPE_REPLAY_STATUS:
+			ND_PRINT((ndo,"" status=(""));
 			ND_PRINT((ndo,""replay detection %sabled"",
 				  EXTRACT_32BITS(cp) ? ""en"" : ""dis""));
-			break;
-		case ISAKMP_NTYPE_NO_PROPOSAL_CHOSEN:
-			if (ikev1_sub_print(ndo, ISAKMP_NPTYPE_SA,
-					    (const struct isakmp_gen *)cp, ep, phase, doi, proto,
-					    depth) == NULL)
-				return NULL;
+			ND_PRINT((ndo,"")""));
 			break;
 		default:
-			/* NULL is dummy */
-			isakmp_print(ndo, cp,
-				     item_len - sizeof(*p) - n.spi_size,
-				     NULL);
+			/*
+			 * XXX - fill in more types here; see, for example,
+			 * draft-ietf-ipsec-notifymsg-04.
+			 */
+			if (ndo->ndo_vflag > 3) {
+				ND_PRINT((ndo,"" data=(""));
+				if (!rawprint(ndo, (const uint8_t *)(cp), ep - cp))
+					goto trunc;
+				ND_PRINT((ndo,"")""));
+			} else {
+				if (!ike_show_somedata(ndo, cp, ep))
+					goto trunc;
+			}
+			break;
 		}
-		ND_PRINT((ndo,"")""));
 	}
 	return (const u_char *)ext + item_len;
 trunc:
@@ -2264,16 +2275,21 @@ ikev2_auth_print(netdissect_options *ndo, u_char tpay,
 	ikev2_pay_print(ndo, NPSTR(tpay), a.h.critical);
 	len = ntohs(a.h.len);
 
-	ND_PRINT((ndo,"" len=%d method=%s"", len-4,
+	/*
+	 * Our caller has ensured that the length is >= 4.
+	 */
+	ND_PRINT((ndo,"" len=%u method=%s"", len-4,
 		  STR_OR_ID(a.auth_method, v2_auth)));
-
-	if (1 < ndo->ndo_vflag && 4 < len) {
-		ND_PRINT((ndo,"" authdata=(""));
-		if (!rawprint(ndo, (const uint8_t *)authdata, len - sizeof(a)))
-			goto trunc;
-		ND_PRINT((ndo,"") ""));
-	} else if(ndo->ndo_vflag && 4 < len) {
-		if(!ike_show_somedata(ndo, authdata, ep)) goto trunc;
+	if (len > 4) {
+		if (ndo->ndo_vflag > 1) {
+			ND_PRINT((ndo, "" authdata=(""));
+			if (!rawprint(ndo, (const uint8_t *)authdata, len - sizeof(a)))
+				goto trunc;
+			ND_PRINT((ndo, "") ""));
+		} else if (ndo->ndo_vflag) {
+			if (!ike_show_somedata(ndo, authdata, ep))
+				goto trunc;
+		}
 	}
 
 	return (const u_char *)ext + len;
@@ -2322,7 +2338,7 @@ ikev2_n_print(netdissect_options *ndo, u_char tpay _U_,
 	const struct ikev2_n *p;
 	struct ikev2_n n;
 	const u_char *cp;
-	u_char showspi, showdata, showsomedata;
+	u_char showspi, showsomedata;
 	const char *notify_name;
 	uint32_t type;
 
@@ -2332,7 +2348,6 @@ ikev2_n_print(netdissect_options *ndo, u_char tpay _U_,
 	ikev2_pay_print(ndo, NPSTR(ISAKMP_NPTYPE_N), n.h.critical);
 
 	showspi = 1;
-	showdata = 0;
 	showsomedata=0;
 	notify_name=NULL;
 
@@ -2446,7 +2461,6 @@ ikev2_n_print(netdissect_options *ndo, u_char tpay _U_,
 		notify_name = ""cookie"";
 		showspi = 1;
 		showsomedata= 1;
-		showdata= 0;
 		break;
 
 	case IV2_NOTIFY_USE_TRANSPORT_MODE:
@@ -2499,19 +2513,17 @@ ikev2_n_print(netdissect_options *ndo, u_char tpay _U_,
 
 	cp = (const u_char *)(p + 1) + n.spi_size;
 
-	if(3 < ndo->ndo_vflag) {
-		showdata = 1;
-	}
-
-	if ((showdata || (showsomedata && ep-cp < 30)) && cp < ep) {
-		ND_PRINT((ndo,"" data=(""));
-		if (!rawprint(ndo, (const uint8_t *)(cp), ep - cp))
-			goto trunc;
-
-		ND_PRINT((ndo,"")""));
+	if (cp < ep) {
+		if (ndo->ndo_vflag > 3 || (showsomedata && ep-cp < 30)) {
+			ND_PRINT((ndo,"" data=(""));
+			if (!rawprint(ndo, (const uint8_t *)(cp), ep - cp))
+				goto trunc;
 
-	} else if(showsomedata && cp < ep) {
-		if(!ike_show_somedata(ndo, cp, ep)) goto trunc;
+			ND_PRINT((ndo,"")""));
+		} else if (showsomedata) {
+			if (!ike_show_somedata(ndo, cp, ep))
+				goto trunc;
+		}
 	}
 
 	return (const u_char *)ext + item_len;
@@ -3091,7 +3103,3 @@ isakmp_rfc3948_print(netdissect_options *ndo,
  * c-basic-offset: 8
  * End:
  */
-
-
-
-
diff --git a/tests/TESTLIST b/tests/TESTLIST
index 1e1624013..ed5b82aa3 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -465,6 +465,7 @@ tok2str-oobr-2		tok2str-oobr-2.pcap		tok2str-oobr-2.out	-vvv -e
 eigrp-tlv-oobr		eigrp-tlv-oobr.pcap		eigrp-tlv-oobr.out	-vvv -e
 zephyr-oobr		zephyr-oobr.pcap		zephyr-oobr.out		-vvv -e
 bgp-as-path-oobr	bgp-as-path-oobr.pcap		bgp-as-path-oobr.out	-vvv -e
+isakmp-no-none-np	isakmp-no-none-np.pcap		isakmp-no-none-np.out	-vvv -e
 
 # RTP tests
 # fuzzed pcap
diff --git a/tests/isakmp-no-none-np.out b/tests/isakmp-no-none-np.out
new file mode 100644
index 000000000..eb91c804a
--- /dev/null
+++ b/tests/isakmp-no-none-np.out
@@ -0,0 +1,78 @@
+00:0c:29:86:c8:36 > 00:1a:4b:6a:ce:fe, ethertype IPv4 (0x0800), length 2228: (tos 0x0, ttl 128, id 28793, offset 0, flags [none], proto UDP (17), length 2214)
+    192.168.1.25.500 > 192.168.1.10.500: [udp sum ok] isakmp 1.0 msgid 5f724dc6 cookie 0000000000000000->0000000000000000: phase 2/others ? inf:
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=000000000b1005005f724dc600000054 data=(0b00001c000000010110...0100000700000000000000000000000000000000))
+    (n: doi=ipsec proto=isakmp type=INVALID-MAJOR-VERSION spi=0000000000000000000000000010ba00 data=(00ff1d00020082001101...0100000700000000000000000000000000000000)) [|n] (len mismatch: isakmp 84/ip 2186)
diff --git a/tests/isakmp-no-none-np.pcap b/tests/isakmp-no-none-np.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..fd388d617e4f2937fdb1214bdcce59c8c159a90c
GIT binary patch
literal 2344
zcmd<$<>fMAU|{gI(UxKa(*L1=g@KpBH6^noIk7;&NY6me2q*^vAhjTM3Q+q0e+C9l
zpa>g~4+0863}Rp501`-G3y=@O3{u`%=l(J9Xttd&<6v-Q;8<2r$-vMcXcu*01*0So
zb1{Bl{K7Gb{}YmCFq2z=l_9>!_ZW~9!p*=S1Ed)l1sGUClB05?;WC;gM)SjHSuk2g
r0@J`~{V-ZL5^NWM$_g+L*ad9%$TBc7G%*M=0^2t1FbNn9YRdosru*ln

literal 0
HcmV?d00001"
PYSEC-2017-30,"From b49d0d4b5ca5c6f31f03e2caf97cef1088eeed81 Mon Sep 17 00:00:00 2001
From: Colton Myers <colton.myers@gmail.com>
Date: Wed, 25 Mar 2015 14:29:26 -0600
Subject: [PATCH] Create randomized logfile name in windows for chef.py

---
 salt/modules/chef.py | 15 ++++++++++-----
 1 file changed, 10 insertions(+), 5 deletions(-)

diff --git a/salt/modules/chef.py b/salt/modules/chef.py
index 36eb6ff72de5..9c6d928fc3b9 100644
--- a/salt/modules/chef.py
+++ b/salt/modules/chef.py
@@ -6,6 +6,7 @@
 # Import Python libs
 import logging
 import os
+import tempfile
 
 # Import Salt libs
 import salt.utils
@@ -24,12 +25,16 @@ def __virtual__():
 
 
 def _default_logfile(exe_name):
-
+    '''
+    Retrieve the logfile name
+    '''
     if salt.utils.is_windows():
-        logfile = salt.utils.path_join(
-            os.environ['TMP'],
-            '{0}.log'.format(exe_name)
-        )
+        logfile_tmp = tempfile.NamedTemporaryFile(dir=os.environ['TMP'],
+                                                  prefix=exe_name,
+                                                  suffix='.log',
+                                                  delete=False)
+        logfile = logfile_tmp.name
+        logfile_tmp.close()
     else:
         logfile = salt.utils.path_join(
             '/var/log',"
CVE-2017-17854,"From bb7f0f989ca7de1153bd128a40a71709e339fa03 Mon Sep 17 00:00:00 2001
From: Alexei Starovoitov <ast@kernel.org>
Date: Mon, 18 Dec 2017 20:12:00 -0800
Subject: [PATCH] bpf: fix integer overflows

There were various issues related to the limited size of integers used in
the verifier:
 - `off + size` overflow in __check_map_access()
 - `off + reg->off` overflow in check_mem_access()
 - `off + reg->var_off.value` overflow or 32-bit truncation of
   `reg->var_off.value` in check_mem_access()
 - 32-bit truncation in check_stack_boundary()

Make sure that any integer math cannot overflow by not allowing
pointer math with large values.

Also reduce the scope of ""scalar op scalar"" tracking.

Fixes: f1174f77b50c (""bpf/verifier: rework value tracking"")
Reported-by: Jann Horn <jannh@google.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
---
 include/linux/bpf_verifier.h |  4 +--
 kernel/bpf/verifier.c        | 48 ++++++++++++++++++++++++++++++++++++
 2 files changed, 50 insertions(+), 2 deletions(-)

diff --git a/include/linux/bpf_verifier.h b/include/linux/bpf_verifier.h
index c561b986bab0eb..1632bb13ad8aed 100644
--- a/include/linux/bpf_verifier.h
+++ b/include/linux/bpf_verifier.h
@@ -15,11 +15,11 @@
  * In practice this is far bigger than any realistic pointer offset; this limit
  * ensures that umax_value + (int)off + (int)size cannot overflow a u64.
  */
-#define BPF_MAX_VAR_OFF	(1ULL << 31)
+#define BPF_MAX_VAR_OFF	(1 << 29)
 /* Maximum variable size permitted for ARG_CONST_SIZE[_OR_ZERO].  This ensures
  * that converting umax_value to int cannot overflow.
  */
-#define BPF_MAX_VAR_SIZ	INT_MAX
+#define BPF_MAX_VAR_SIZ	(1 << 29)
 
 /* Liveness marks, used for registers and spilled-regs (in stack slots).
  * Read marks propagate upwards until they find a write mark; they record that
diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index 982bd9ec721ae5..86dfe6b5c2436c 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -1819,6 +1819,41 @@ static bool signed_sub_overflows(s64 a, s64 b)
 	return res > a;
 }
 
+static bool check_reg_sane_offset(struct bpf_verifier_env *env,
+				  const struct bpf_reg_state *reg,
+				  enum bpf_reg_type type)
+{
+	bool known = tnum_is_const(reg->var_off);
+	s64 val = reg->var_off.value;
+	s64 smin = reg->smin_value;
+
+	if (known && (val >= BPF_MAX_VAR_OFF || val <= -BPF_MAX_VAR_OFF)) {
+		verbose(env, ""math between %s pointer and %lld is not allowed\n"",
+			reg_type_str[type], val);
+		return false;
+	}
+
+	if (reg->off >= BPF_MAX_VAR_OFF || reg->off <= -BPF_MAX_VAR_OFF) {
+		verbose(env, ""%s pointer offset %d is not allowed\n"",
+			reg_type_str[type], reg->off);
+		return false;
+	}
+
+	if (smin == S64_MIN) {
+		verbose(env, ""math between %s pointer and register with unbounded min value is not allowed\n"",
+			reg_type_str[type]);
+		return false;
+	}
+
+	if (smin >= BPF_MAX_VAR_OFF || smin <= -BPF_MAX_VAR_OFF) {
+		verbose(env, ""value %lld makes %s pointer be out of bounds\n"",
+			smin, reg_type_str[type]);
+		return false;
+	}
+
+	return true;
+}
+
 /* Handles arithmetic on a pointer and a scalar: computes new min/max and var_off.
  * Caller should also handle BPF_MOV case separately.
  * If we return -EACCES, caller may want to try again treating pointer as a
@@ -1887,6 +1922,10 @@ static int adjust_ptr_min_max_vals(struct bpf_verifier_env *env,
 	dst_reg->type = ptr_reg->type;
 	dst_reg->id = ptr_reg->id;
 
+	if (!check_reg_sane_offset(env, off_reg, ptr_reg->type) ||
+	    !check_reg_sane_offset(env, ptr_reg, ptr_reg->type))
+		return -EINVAL;
+
 	switch (opcode) {
 	case BPF_ADD:
 		/* We can take a fixed offset as long as it doesn't overflow
@@ -2017,6 +2056,9 @@ static int adjust_ptr_min_max_vals(struct bpf_verifier_env *env,
 		return -EACCES;
 	}
 
+	if (!check_reg_sane_offset(env, dst_reg, ptr_reg->type))
+		return -EINVAL;
+
 	__update_reg_bounds(dst_reg);
 	__reg_deduce_bounds(dst_reg);
 	__reg_bound_offset(dst_reg);
@@ -2046,6 +2088,12 @@ static int adjust_scalar_min_max_vals(struct bpf_verifier_env *env,
 	src_known = tnum_is_const(src_reg.var_off);
 	dst_known = tnum_is_const(dst_reg->var_off);
 
+	if (!src_known &&
+	    opcode != BPF_ADD && opcode != BPF_SUB && opcode != BPF_AND) {
+		__mark_reg_unknown(dst_reg);
+		return 0;
+	}
+
 	switch (opcode) {
 	case BPF_ADD:
 		if (signed_add_overflows(dst_reg->smin_value, smin_val) ||"
CVE-2017-1000491,"From e8a65b0f81eb04903eedd29500d7e1bedf249eab Mon Sep 17 00:00:00 2001
From: rhysd <lin90162@yahoo.co.jp>
Date: Wed, 29 Nov 2017 01:34:37 +0900
Subject: [PATCH] improve marked renderer

---
 package.json                 |   3 +-
 renderer/markdown-preview.ts |   5 +-
 renderer/marked.d.ts         | 166 -----------------------------------
 renderer/tsconfig.json       |   1 -
 4 files changed, 6 insertions(+), 169 deletions(-)
 delete mode 100644 renderer/marked.d.ts

diff --git a/package.json b/package.json
index 733f8da9..a489bf58 100644
--- a/package.json
+++ b/package.json
@@ -51,9 +51,10 @@
     ""@types/empower"": ""^1.2.30"",
     ""@types/es6-promise"": ""0.0.33"",
     ""@types/he"": ""^0.5.29"",
-    ""@types/highlight.js"": ""^9.12.1"",
+    ""@types/highlight.js"": ""^9.12.2"",
     ""@types/js-yaml"": ""^3.9.1"",
     ""@types/katex"": ""0.5.0"",
+    ""@types/marked"": ""^0.3.0"",
     ""@types/mocha"": ""^2.2.44"",
     ""@types/mousetrap"": ""^1.5.34"",
     ""@types/node"": ""8.0.53"",
diff --git a/renderer/markdown-preview.ts b/renderer/markdown-preview.ts
index 48a86769..55569dc4 100644
--- a/renderer/markdown-preview.ts
+++ b/renderer/markdown-preview.ts
@@ -41,9 +41,12 @@ marked.setOptions({
         }
     },
 
+    // @ts-ignore: emoji is a dedicated method added by my fork
     emoji(name: string) {
         return emoji_replacer.replaceOne(name);
     },
+
+    sanitize: 1,
 });
 
 const REGEX_CHECKED_LISTITEM = /^\[x]\s+/;
@@ -51,7 +54,7 @@ const REGEX_UNCHECKED_LISTITEM = /^\[ ]\s+/;
 
 class MarkdownRenderer {
     public outline: Heading[];
-    private renderer: MarkedRenderer;
+    private renderer: marked.Renderer;
     private link_id: number;
     private tooltips: string;
 
diff --git a/renderer/marked.d.ts b/renderer/marked.d.ts
deleted file mode 100644
index 2ebf0e7e..00000000
--- a/renderer/marked.d.ts
+++ /dev/null
@@ -1,166 +0,0 @@
-// Generated by typings
-// Source: https://raw.githubusercontent.com/DefinitelyTyped/DefinitelyTyped/9cfdb11648f823b889287c770254b85b78a7a4a4/marked/marked.d.ts
-interface MarkedStatic {
-    Renderer: {
-        new(): MarkedRenderer;
-    };
-
-    Parser: {
-        new(options: MarkedOptions): MarkedParser;
-    };
-
-    /**
-     * Compiles markdown to HTML.
-     *
-     * @param src String of markdown source to be compiled
-     * @param callback Function called when the markdownString has been fully parsed when using async highlighting
-     * @return String of compiled HTML
-     */
-    (src: string, callback: (...args: any[]) => void): string;
-
-    /**
-     * Compiles markdown to HTML.
-     *
-     * @param src String of markdown source to be compiled
-     * @param options Hash of options
-     * @param callback Function called when the markdownString has been fully parsed when using async highlighting
-     * @return String of compiled HTML
-     */
-    (src: string, options?: MarkedOptions, callback?: (...args: any[]) => void): string;
-
-    /**
-     * @param src String of markdown source to be compiled
-     * @param options Hash of options
-     */
-    lexer(src: string, options?: MarkedOptions): any[];
-
-    /**
-     * Compiles markdown to HTML.
-     *
-     * @param src String of markdown source to be compiled
-     * @param callback Function called when the markdownString has been fully parsed when using async highlighting
-     * @return String of compiled HTML
-     */
-    parse(src: string, callback: (...args: any[]) => void): string;
-
-    /**
-     * Compiles markdown to HTML.
-     *
-     * @param src String of markdown source to be compiled
-     * @param options Hash of options
-     * @param callback Function called when the markdownString has been fully parsed when using async highlighting
-     * @return String of compiled HTML
-     */
-    parse(src: string, options?: MarkedOptions, callback?: (...args: any[]) => void): string;
-
-    /**
-     * @param options Hash of options
-     */
-    parser(src: any[], options?: MarkedOptions): string;
-
-    /**
-     * Sets the default options.
-     *
-     * @param options Hash of options
-     */
-    setOptions(options: MarkedOptions): MarkedStatic;
-}
-
-interface MarkedRenderer {
-    code(code: string, language: string): string;
-    blockquote(quote: string): string;
-    html(html: string): string;
-    heading(text: string, level: number, raw: string): string;
-    hr(): string;
-    list(body: string, ordered: boolean): string;
-    listitem(text: string): string;
-    paragraph(text: string): string;
-    table(header: string, body: string): string;
-    tablerow(content: string): string;
-    tablecell(content: string, flags: {
-        header: boolean,
-        align: string
-    }): string;
-    strong(text: string): string;
-    em(text: string): string;
-    codespan(code: string): string;
-    br(): string;
-    del(text: string): string;
-    link(href: string, title: string, text: string): string;
-    image(href: string, title: string, text: string): string;
-    text(text: string): string;
-}
-
-interface MarkedParser {
-    parse(source: any[]): string;
-}
-
-interface MarkedOptions {
-    /**
-     * Type: object Default: new Renderer()
-     *
-     * An object containing functions to render tokens to HTML.
-     */
-    renderer?: MarkedRenderer;
-
-    /**
-     * Enable GitHub flavored markdown.
-     */
-    gfm?: boolean;
-
-    /**
-     * Enable GFM tables. This option requires the gfm option to be true.
-     */
-    tables?: boolean;
-
-    /**
-     * Enable GFM line breaks. This option requires the gfm option to be true.
-     */
-    breaks?: boolean;
-
-    /**
-     * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.
-     */
-    pedantic?: boolean;
-
-    /**
-     * Sanitize the output. Ignore any HTML that has been input.
-     */
-    sanitize?: boolean;
-
-    /**
-     * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.
-     */
-    smartLists?: boolean;
-
-    /**
-     * Shows an HTML error message when rendering fails.
-     */
-    silent?: boolean;
-
-    /**
-     * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.
-     */
-    highlight?: (code: string, lang: string, callback?: (...args: any[]) => void) => string;
-
-    /**
-     * Set the prefix for code block classes.
-     */
-    langPrefix?: string;
-
-    /**
-     * Use 'smart' typograhic punctuation for things like quotes and dashes.
-     */
-    smartypants?: boolean;
-
-    /**
-     * Forked 'emoji' inline images
-     */
-    emoji?: (name: string) => string;
-}
-
-declare module 'marked' {
-    const marked: MarkedStatic;
-    export = marked;
-}
-
diff --git a/renderer/tsconfig.json b/renderer/tsconfig.json
index 647bd351..db757105 100644
--- a/renderer/tsconfig.json
+++ b/renderer/tsconfig.json
@@ -18,7 +18,6 @@
     ""index.ts"",
     ""keyboard.ts"",
     ""lib.d.ts"",
-    ""marked.d.ts"",
     ""lint-message.ts"",
     ""lint-panel.ts"",
     ""markdown-preview.ts"","
CVE-2017-14727,"From f105c6f0b56fb5687b2d2aedf37cb1d1b434d556 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?S=C3=A9bastien=20Helleu?= <flashcode@flashtux.org>
Date: Sat, 23 Sep 2017 09:36:09 +0200
Subject: [PATCH] logger: call strftime before replacing buffer local variables

---
 ChangeLog.adoc              |  7 +++
 src/plugins/logger/logger.c | 88 ++++++++++++++++++-------------------
 2 files changed, 51 insertions(+), 44 deletions(-)

diff --git a/ChangeLog.adoc b/ChangeLog.adoc
index 02dfe22e595..8ef88fd64cf 100644
--- a/ChangeLog.adoc
+++ b/ChangeLog.adoc
@@ -15,6 +15,13 @@ https://weechat.org/files/releasenotes/ReleaseNotes-devel.html[release notes]
 (file _ReleaseNotes.adoc_ in sources).
 
 
+[[v1.9.1]]
+== Version 1.9.1 (under dev)
+
+Bug fixes::
+
+  * logger: call strftime before replacing buffer local variables
+
 [[v1.9]]
 == Version 1.9 (2017-06-25)
 
diff --git a/src/plugins/logger/logger.c b/src/plugins/logger/logger.c
index 1abc3efc706..347f1d5a610 100644
--- a/src/plugins/logger/logger.c
+++ b/src/plugins/logger/logger.c
@@ -295,71 +295,71 @@ logger_get_mask_for_buffer (struct t_gui_buffer *buffer)
 char *
 logger_get_mask_expanded (struct t_gui_buffer *buffer, const char *mask)
 {
-    char *mask2, *mask_decoded, *mask_decoded2, *mask_decoded3, *mask_decoded4;
-    char *mask_decoded5;
+    char *mask2, *mask3, *mask4, *mask5, *mask6, *mask7;
     const char *dir_separator;
     int length;
     time_t seconds;
     struct tm *date_tmp;
 
     mask2 = NULL;
-    mask_decoded = NULL;
-    mask_decoded2 = NULL;
-    mask_decoded3 = NULL;
-    mask_decoded4 = NULL;
-    mask_decoded5 = NULL;
+    mask3 = NULL;
+    mask4 = NULL;
+    mask5 = NULL;
+    mask6 = NULL;
+    mask7 = NULL;
 
     dir_separator = weechat_info_get (""dir_separator"", """");
     if (!dir_separator)
         return NULL;
 
+    /* replace date/time specifiers in mask */
+    length = strlen (mask) + 256 + 1;
+    mask2 = malloc (length);
+    if (!mask2)
+        goto end;
+    seconds = time (NULL);
+    date_tmp = localtime (&seconds);
+    mask2[0] = '\0';
+    if (strftime (mask2, length - 1, mask, date_tmp) == 0)
+        mask2[0] = '\0';
+
     /*
      * we first replace directory separator (commonly '/') by \01 because
      * buffer mask can contain this char, and will be replaced by replacement
      * char ('_' by default)
      */
-    mask2 = weechat_string_replace (mask, dir_separator, ""\01"");
-    if (!mask2)
+    mask3 = weechat_string_replace (mask2, dir_separator, ""\01"");
+    if (!mask3)
         goto end;
 
-    mask_decoded = weechat_buffer_string_replace_local_var (buffer, mask2);
-    if (!mask_decoded)
+    mask4 = weechat_buffer_string_replace_local_var (buffer, mask3);
+    if (!mask4)
         goto end;
 
-    mask_decoded2 = weechat_string_replace (mask_decoded,
-                                            dir_separator,
-                                            weechat_config_string (logger_config_file_replacement_char));
-    if (!mask_decoded2)
+    mask5 = weechat_string_replace (mask4,
+                                    dir_separator,
+                                    weechat_config_string (logger_config_file_replacement_char));
+    if (!mask5)
         goto end;
 
 #ifdef __CYGWIN__
-    mask_decoded3 = weechat_string_replace (mask_decoded2, ""\\"",
-                                            weechat_config_string (logger_config_file_replacement_char));
+    mask6 = weechat_string_replace (mask5, ""\\"",
+                                    weechat_config_string (logger_config_file_replacement_char));
 #else
-    mask_decoded3 = strdup (mask_decoded2);
+    mask6 = strdup (mask5);
 #endif /* __CYGWIN__ */
-    if (!mask_decoded3)
+    if (!mask6)
         goto end;
 
     /* restore directory separator */
-    mask_decoded4 = weechat_string_replace (mask_decoded3,
-                                            ""\01"", dir_separator);
-    if (!mask_decoded4)
-        goto end;
-
-    /* replace date/time specifiers in mask */
-    length = strlen (mask_decoded4) + 256 + 1;
-    mask_decoded5 = malloc (length);
-    if (!mask_decoded5)
+    mask7 = weechat_string_replace (mask6,
+                                    ""\01"", dir_separator);
+    if (!mask7)
         goto end;
-    seconds = time (NULL);
-    date_tmp = localtime (&seconds);
-    mask_decoded5[0] = '\0';
-    strftime (mask_decoded5, length - 1, mask_decoded4, date_tmp);
 
     /* convert to lower case? */
     if (weechat_config_boolean (logger_config_file_name_lower_case))
-        weechat_string_tolower (mask_decoded5);
+        weechat_string_tolower (mask7);
 
     if (weechat_logger_plugin->debug)
     {
@@ -368,22 +368,22 @@ logger_get_mask_expanded (struct t_gui_buffer *buffer, const char *mask)
                                   ""decoded mask = \""%s\"""",
                                   LOGGER_PLUGIN_NAME,
                                   weechat_buffer_get_string (buffer, ""name""),
-                                  mask, mask_decoded5);
+                                  mask, mask7);
     }
 
 end:
     if (mask2)
         free (mask2);
-    if (mask_decoded)
-        free (mask_decoded);
-    if (mask_decoded2)
-        free (mask_decoded2);
-    if (mask_decoded3)
-        free (mask_decoded3);
-    if (mask_decoded4)
-        free (mask_decoded4);
-
-    return mask_decoded5;
+    if (mask3)
+        free (mask3);
+    if (mask4)
+        free (mask4);
+    if (mask5)
+        free (mask5);
+    if (mask6)
+        free (mask6);
+
+    return mask7;
 }
 
 /*"
CVE-2017-1000065,"From b2db1e24d0e52b961b5c3b3329b6ee717cac53a2 Mon Sep 17 00:00:00 2001
From: votdev <votdev@gmx.de>
Date: Fri, 17 Mar 2017 11:26:15 +0100
Subject: [PATCH] Improve foreign content handling.

---
 deb/openmediavault-clamav/debian/changelog    |  6 ++++
 deb/openmediavault-clamav/debian/control      |  2 +-
 .../omv/module/admin/service/clamav/Jobs.js   |  2 ++
 .../debian/changelog                          |  6 ++++
 deb/openmediavault-iscsitarget/debian/control |  2 +-
 .../admin/service/iscsitarget/Targets.js      |  8 +++++
 deb/openmediavault-netatalk/debian/changelog  |  6 ++++
 deb/openmediavault-netatalk/debian/control    |  2 +-
 .../js/omv/module/admin/service/afp/Shares.js |  2 ++
 deb/openmediavault-route/debian/changelog     |  6 ++++
 deb/openmediavault-route/debian/control       |  2 +-
 .../omv/module/admin/system/network/Route.js  |  3 ++
 deb/openmediavault-usbbackup/debian/changelog |  6 ++++
 deb/openmediavault-usbbackup/debian/control   |  2 +-
 .../module/admin/service/usbbackup/Jobs.js    |  3 ++
 deb/openmediavault/debian/changelog           |  6 ++++
 .../openmediavault/js/omv/grid/column/Text.js | 35 +++++++++++++++++++
 .../omv/module/admin/privilege/group/Group.js |  3 ++
 .../privilege/sharedfolder/SharedFolder.js    |  4 +++
 .../omv/module/admin/privilege/user/User.js   |  4 +++
 .../js/omv/module/admin/service/ftp/Shares.js |  2 ++
 .../js/omv/module/admin/service/nfs/Shares.js |  3 ++
 .../js/omv/module/admin/service/rsync/Jobs.js |  3 ++
 .../module/admin/service/rsyncd/Modules.js    |  4 +++
 .../js/omv/module/admin/service/smb/Shares.js |  2 ++
 .../admin/storage/smart/ScheduledJobs.js      |  5 +++
 .../module/admin/system/certificate/Ssh.js    |  1 +
 .../module/admin/system/certificate/Ssl.js    |  2 ++
 .../js/omv/module/admin/system/cron/Cron.js   |  3 ++
 .../module/admin/system/network/Firewall.js   |  2 ++
 .../module/admin/system/network/Interfaces.js |  1 +
 .../system/powermanagement/ScheduledJobs.js   |  1 +
 .../js/omv/window/MessageBox.js               |  5 ++-
 .../js/omv/workspace/grid/Panel.js            |  1 +
 34 files changed, 137 insertions(+), 8 deletions(-)
 create mode 100644 deb/openmediavault/var/www/openmediavault/js/omv/grid/column/Text.js

diff --git a/deb/openmediavault-clamav/debian/changelog b/deb/openmediavault-clamav/debian/changelog
index 8fdd59c5e2a..7f6d5f9007b 100644
--- a/deb/openmediavault-clamav/debian/changelog
+++ b/deb/openmediavault-clamav/debian/changelog
@@ -1,3 +1,9 @@
+openmediavault-clamav (3.2.11) stable; urgency=low
+
+  * Various improvements.
+
+ -- Volker Theile <volker.theile@openmediavault.org>  Fri, 17 Mar 2017 11:08:11 +0100
+
 openmediavault-clamav (3.2.10) stable; urgency=low
 
   * Various improvements.
diff --git a/deb/openmediavault-clamav/debian/control b/deb/openmediavault-clamav/debian/control
index f779e8b9c45..65859f843ef 100644
--- a/deb/openmediavault-clamav/debian/control
+++ b/deb/openmediavault-clamav/debian/control
@@ -9,7 +9,7 @@ Homepage: http://www.openmediavault.org
 
 Package: openmediavault-clamav
 Architecture: all
-Depends: openmediavault (>= 3.0.60), clamav-daemon, clamav-freshclam,
+Depends: openmediavault (>= 3.0.67), clamav-daemon, clamav-freshclam,
  clamdscan, init-system-helpers
 Priority: optional
 Description: OpenMediaVault ClamAV plugin
diff --git a/deb/openmediavault-clamav/var/www/openmediavault/js/omv/module/admin/service/clamav/Jobs.js b/deb/openmediavault-clamav/var/www/openmediavault/js/omv/module/admin/service/clamav/Jobs.js
index 43d717b0b29..1e4f7205fa6 100644
--- a/deb/openmediavault-clamav/var/www/openmediavault/js/omv/module/admin/service/clamav/Jobs.js
+++ b/deb/openmediavault-clamav/var/www/openmediavault/js/omv/module/admin/service/clamav/Jobs.js
@@ -271,6 +271,7 @@ Ext.define(""OMV.module.admin.service.clamav.Jobs"", {
 		resizable: false,
 		iconCls:  Ext.baseCSSPrefix + ""grid-cell-booleaniconcolumn-switch""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Shared folder""),
 		sortable: true,
 		dataIndex: ""sharedfoldername"",
@@ -329,6 +330,7 @@ Ext.define(""OMV.module.admin.service.clamav.Jobs"", {
 		stateId: ""dayofweek"",
 		renderer: OMV.util.Format.arrayRenderer(Date.mapDayOfWeek)
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault-iscsitarget/debian/changelog b/deb/openmediavault-iscsitarget/debian/changelog
index 4729d5287f5..c672f352784 100644
--- a/deb/openmediavault-iscsitarget/debian/changelog
+++ b/deb/openmediavault-iscsitarget/debian/changelog
@@ -1,3 +1,9 @@
+openmediavault-iscsitarget (3.1.6) stable; urgency=low
+
+  * Various improvements.
+
+ -- Volker Theile <volker.theile@openmediavault.org>  Fri, 17 Mar 2017 11:11:10 +0100
+
 openmediavault-iscsitarget (3.1.5) stable; urgency=low
 
   * Fix first installation bug.
diff --git a/deb/openmediavault-iscsitarget/debian/control b/deb/openmediavault-iscsitarget/debian/control
index a5ae5c6e714..f581da4d785 100644
--- a/deb/openmediavault-iscsitarget/debian/control
+++ b/deb/openmediavault-iscsitarget/debian/control
@@ -9,7 +9,7 @@ Homepage: http://www.openmediavault.org
 
 Package: openmediavault-iscsitarget
 Architecture: all
-Depends: openmediavault (>= 3.0.60), iscsitarget, iscsitarget-dkms,
+Depends: openmediavault (>= 3.0.67), iscsitarget, iscsitarget-dkms,
  linux-headers-amd64 | linux-headers-armel | linux-headers-armhf |
  linux-headers-i386 | linux-headers-mips | linux-headers-mipsel |
  linux-headers-powerpc | linux-headers-ppc64el | linux-headers-s390 |
diff --git a/deb/openmediavault-iscsitarget/var/www/openmediavault/js/omv/module/admin/service/iscsitarget/Targets.js b/deb/openmediavault-iscsitarget/var/www/openmediavault/js/omv/module/admin/service/iscsitarget/Targets.js
index 206ff69be87..59bdedd410f 100644
--- a/deb/openmediavault-iscsitarget/var/www/openmediavault/js/omv/module/admin/service/iscsitarget/Targets.js
+++ b/deb/openmediavault-iscsitarget/var/www/openmediavault/js/omv/module/admin/service/iscsitarget/Targets.js
@@ -438,21 +438,25 @@ Ext.define(""OMV.module.admin.service.iscsitarget.target.LUNs"", {
 	stateful: true,
 	stateId: ""3107db90-c1e9-11e0-90c8-00221568ca88"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Id""),
 		sortable: true,
 		dataIndex: ""id"",
 		stateId: ""id""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Device""),
 		sortable: true,
 		dataIndex: ""devicefile"",
 		stateId: ""devicefile""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""SCSI Id.""),
 		sortable: true,
 		dataIndex: ""scsiid"",
 		stateId: ""scsiid""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""SCSI serial no.""),
 		sortable: true,
 		dataIndex: ""scsisn"",
@@ -635,21 +639,25 @@ Ext.define(""OMV.module.admin.service.iscsitarget.target.Targets"", {
 	stateful: true,
 	stateId: ""15e18b72-c1e9-11e0-a91c-00221568ca88"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""IQN""),
 		sortable: true,
 		dataIndex: ""iqn"",
 		stateId: ""iqn""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Alias""),
 		sortable: true,
 		dataIndex: ""alias"",
 		stateId: ""alias""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Max. connections""),
 		sortable: true,
 		dataIndex: ""maxconnections"",
 		stateId: ""maxconnections""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault-netatalk/debian/changelog b/deb/openmediavault-netatalk/debian/changelog
index 27402587edb..a7f9446f94a 100755
--- a/deb/openmediavault-netatalk/debian/changelog
+++ b/deb/openmediavault-netatalk/debian/changelog
@@ -1,3 +1,9 @@
+openmediavault-netatalk (3.2.8) stable; urgency=low
+
+  * Various improvements.
+
+ -- Volker Theile <volker.theile@openmediavault.org>  Fri, 17 Mar 2017 11:13:02 +0100
+
 openmediavault-netatalk (3.2.7) stable; urgency=low
 
   * Fix first installation bug.
diff --git a/deb/openmediavault-netatalk/debian/control b/deb/openmediavault-netatalk/debian/control
index 895552c6bad..2015011ac4a 100644
--- a/deb/openmediavault-netatalk/debian/control
+++ b/deb/openmediavault-netatalk/debian/control
@@ -9,7 +9,7 @@ Homepage: http://www.openmediavault.org
 
 Package: openmediavault-netatalk
 Architecture: all
-Depends: openmediavault (>= 3.0.60), netatalk (>= 3.1.9)
+Depends: openmediavault (>= 3.0.67), netatalk (>= 3.1.9)
 Priority: optional
 Description: OpenMediaVault netatalk (AppleTalk Protocol Suite) plugin
  Netatalk is an implementation of the AppleTalk Protocol Suite.
diff --git a/deb/openmediavault-netatalk/var/www/openmediavault/js/omv/module/admin/service/afp/Shares.js b/deb/openmediavault-netatalk/var/www/openmediavault/js/omv/module/admin/service/afp/Shares.js
index bcd925c6f31..dcfb0995a87 100644
--- a/deb/openmediavault-netatalk/var/www/openmediavault/js/omv/module/admin/service/afp/Shares.js
+++ b/deb/openmediavault-netatalk/var/www/openmediavault/js/omv/module/admin/service/afp/Shares.js
@@ -211,11 +211,13 @@ Ext.define(""OMV.module.admin.service.afp.Shares"", {
 		resizable: false,
 		iconCls:  Ext.baseCSSPrefix + ""grid-cell-booleaniconcolumn-switch""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Shared folder""),
 		sortable: true,
 		dataIndex: ""sharedfoldername"",
 		stateId: ""sharedfoldername""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault-route/debian/changelog b/deb/openmediavault-route/debian/changelog
index 742f4d33e2a..073d478ebe9 100644
--- a/deb/openmediavault-route/debian/changelog
+++ b/deb/openmediavault-route/debian/changelog
@@ -1,3 +1,9 @@
+openmediavault-route (3.1.4) stable; urgency=low
+
+  * Various improvements.
+
+ -- Volker Theile <volker.theile@openmediavault.org>  Fri, 17 Mar 2017 11:14:57 +0100
+
 openmediavault-route (3.1.3) stable; urgency=low
 
   * Fix first installation bug.
diff --git a/deb/openmediavault-route/debian/control b/deb/openmediavault-route/debian/control
index b982d8f05bb..cdea06011f9 100644
--- a/deb/openmediavault-route/debian/control
+++ b/deb/openmediavault-route/debian/control
@@ -9,7 +9,7 @@ Homepage: http://www.openmediavault.org
 
 Package: openmediavault-route
 Architecture: all
-Depends: openmediavault (>= 3.0.60)
+Depends: openmediavault (>= 3.0.67)
 Priority: optional
 Description: OpenMediaVault IP routing table plugin
  Adds the ability to manipulate the IP routing table via WebGUI.
diff --git a/deb/openmediavault-route/var/www/openmediavault/js/omv/module/admin/system/network/Route.js b/deb/openmediavault-route/var/www/openmediavault/js/omv/module/admin/system/network/Route.js
index de4085cdd0a..591f13a8a9a 100644
--- a/deb/openmediavault-route/var/www/openmediavault/js/omv/module/admin/system/network/Route.js
+++ b/deb/openmediavault-route/var/www/openmediavault/js/omv/module/admin/system/network/Route.js
@@ -112,16 +112,19 @@ Ext.define(""OMV.module.admin.system.network.route.Routes"", {
 	stateful: true,
 	stateId: ""a6faec48-f389-11e1-8b67-00221568ca88"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Network""),
 		sortable: true,
 		dataIndex: ""network"",
 		stateId: ""network""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Gateway""),
 		sortable: true,
 		dataIndex: ""gateway"",
 		stateId: ""gateway""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault-usbbackup/debian/changelog b/deb/openmediavault-usbbackup/debian/changelog
index aa62de13aa6..2db04559b59 100644
--- a/deb/openmediavault-usbbackup/debian/changelog
+++ b/deb/openmediavault-usbbackup/debian/changelog
@@ -1,3 +1,9 @@
+openmediavault-usbbackup (3.2.16) stable; urgency=low
+
+  * Various improvements.
+
+ -- Volker Theile <volker.theile@openmediavault.org>  Fri, 17 Mar 2017 11:16:18 +0100
+
 openmediavault-usbbackup (3.2.15) stable; urgency=low
 
   * Various improvements.
diff --git a/deb/openmediavault-usbbackup/debian/control b/deb/openmediavault-usbbackup/debian/control
index 0b988e74105..99280659066 100644
--- a/deb/openmediavault-usbbackup/debian/control
+++ b/deb/openmediavault-usbbackup/debian/control
@@ -9,7 +9,7 @@ Homepage: http://www.openmediavault.org
 
 Package: openmediavault-usbbackup
 Architecture: all
-Depends: rsync, openmediavault (>= 3.0.65)
+Depends: rsync, openmediavault (>= 3.0.67)
 Priority: optional
 Description: OpenMediaVault USB/eSATA backup plugin
  Automatically synchronise a shared folder to an USB/eSATA device and vice
diff --git a/deb/openmediavault-usbbackup/var/www/openmediavault/js/omv/module/admin/service/usbbackup/Jobs.js b/deb/openmediavault-usbbackup/var/www/openmediavault/js/omv/module/admin/service/usbbackup/Jobs.js
index 57734097928..8574e09a9e5 100644
--- a/deb/openmediavault-usbbackup/var/www/openmediavault/js/omv/module/admin/service/usbbackup/Jobs.js
+++ b/deb/openmediavault-usbbackup/var/www/openmediavault/js/omv/module/admin/service/usbbackup/Jobs.js
@@ -286,16 +286,19 @@ Ext.define(""OMV.module.admin.service.usbbackup.Jobs"", {
 		resizable: false,
 		iconCls:  Ext.baseCSSPrefix + ""grid-cell-booleaniconcolumn-switch""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Shared folder""),
 		sortable: true,
 		dataIndex: ""sharedfoldername"",
 		stateId: ""sharedfoldername""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""External storage device""),
 		sortable: true,
 		dataIndex: ""devicefile"",
 		stateId: ""devicefile""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/debian/changelog b/deb/openmediavault/debian/changelog
index 2613213d84b..dc733c3bf1b 100644
--- a/deb/openmediavault/debian/changelog
+++ b/deb/openmediavault/debian/changelog
@@ -1,3 +1,9 @@
+openmediavault (3.0.67) stable; urgency=low
+
+  * Improve foreign content handling.
+
+ -- Volker Theile <volker.theile@openmediavault.org>  Fri, 17 Mar 2017 09:59:46 +0100
+
 openmediavault (3.0.66) stable; urgency=low
 
   * Update locales.
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/grid/column/Text.js b/deb/openmediavault/var/www/openmediavault/js/omv/grid/column/Text.js
new file mode 100644
index 00000000000..d4386fdc6e6
--- /dev/null
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/grid/column/Text.js
@@ -0,0 +1,35 @@
+/**
+ * This file is part of OpenMediaVault.
+ *
+ * @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
+ * @author    Volker Theile <volker.theile@openmediavault.org>
+ * @copyright Copyright (c) 2009-2017 Volker Theile
+ *
+ * OpenMediaVault is free software: you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation, either version 3 of the License, or
+ * any later version.
+ *
+ * OpenMediaVault is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with OpenMediaVault. If not, see <http://www.gnu.org/licenses/>.
+ */
+// require(""js/omv/util/Format.js"")
+
+/**
+ * @ingroup webgui
+ * @class OMV.grid.column.Text
+ * @derived Ext.grid.column.Column
+ */
+Ext.define(""OMV.grid.column.Text"", {
+	extend: ""Ext.grid.column.Column"",
+	alias: [ ""widget.textcolumn"" ],
+
+	defaultRenderer: function(value) {
+		return Ext.util.Format.htmlEncode(value);
+	}
+});
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/group/Group.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/group/Group.js
index bed11580a94..77ddae813a7 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/group/Group.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/group/Group.js
@@ -113,6 +113,7 @@ Ext.define(""OMV.module.admin.privilege.group.group.Members"", {
 		})
 	}],
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Name""),
 		sortable: true,
 		dataIndex: ""name"",
@@ -390,11 +391,13 @@ Ext.define(""OMV.module.admin.privilege.group.Groups"", {
 	stateful: true,
 	stateId: ""d7c66fd9-2ef5-4107-9a6f-562dcdc2643a"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Name""),
 		sortable: true,
 		dataIndex: ""name"",
 		stateId: ""name""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/sharedfolder/SharedFolder.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/sharedfolder/SharedFolder.js
index e10786ddc3d..c3c7920af58 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/sharedfolder/SharedFolder.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/sharedfolder/SharedFolder.js
@@ -636,6 +636,7 @@ Ext.define(""OMV.module.admin.privilege.sharedfolder.SharedFolders"", {
 	stateful: true,
 	stateId: ""9ab0d7f9-73e0-4815-8960-84157d4b85e5"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Name""),
 		sortable: true,
 		dataIndex: ""name"",
@@ -647,17 +648,20 @@ Ext.define(""OMV.module.admin.privilege.sharedfolder.SharedFolders"", {
 		dataIndex: ""device"",
 		stateId: ""device""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Relative Path""),
 		sortable: true,
 		dataIndex: ""reldirpath"",
 		stateId: ""reldirpath""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Absolute Path""),
 		sortable: true,
 		hidden: true,
 		dataIndex: ""absdirpath"",
 		stateId: ""absdirpath""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/user/User.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/user/User.js
index f85383b88fc..f7b6831455e 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/user/User.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/privilege/user/User.js
@@ -191,6 +191,7 @@ Ext.define(""OMV.module.admin.privilege.user.user.Groups"", {
 		})
 	}],
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Name""),
 		sortable: true,
 		dataIndex: ""name"",
@@ -590,16 +591,19 @@ Ext.define(""OMV.module.admin.privilege.user.Users"", {
 	stateful: true,
 	stateId: ""98d6fe31-8e12-407b-82f2-7e0acf4006c1"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Name""),
 		sortable: true,
 		dataIndex: ""name"",
 		stateId: ""name""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Email""),
 		sortable: true,
 		dataIndex: ""email"",
 		stateId: ""email""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/ftp/Shares.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/ftp/Shares.js
index e40cadeb1f3..d1f57fc522d 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/ftp/Shares.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/ftp/Shares.js
@@ -126,11 +126,13 @@ Ext.define(""OMV.module.admin.service.ftp.Shares"", {
 		resizable: false,
 		iconCls:  Ext.baseCSSPrefix + ""grid-cell-booleaniconcolumn-switch""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Shared folder""),
 		sortable: true,
 		dataIndex: ""sharedfoldername"",
 		stateId: ""sharedfoldername""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/nfs/Shares.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/nfs/Shares.js
index e42fd83ee61..1e306dd75bd 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/nfs/Shares.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/nfs/Shares.js
@@ -129,11 +129,13 @@ Ext.define(""OMV.module.admin.service.nfs.Shares"", {
 	stateful: true,
 	stateId: ""4da5f715-4381-4c6b-8c83-ab23d284d0e3"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Shared folder""),
 		sortable: true,
 		dataIndex: ""sharedfoldername"",
 		stateId: ""sharedfoldername""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Client""),
 		sortable: true,
 		dataIndex: ""client"",
@@ -152,6 +154,7 @@ Ext.define(""OMV.module.admin.service.nfs.Shares"", {
 			return value;
 		}
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/rsync/Jobs.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/rsync/Jobs.js
index a07f66207cd..dc18ade1b8c 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/rsync/Jobs.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/rsync/Jobs.js
@@ -628,16 +628,19 @@ Ext.define(""OMV.module.admin.service.rsync.Jobs"", {
 			""remote"": _(""Remote"")
 		}
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Source""),
 		sortable: true,
 		dataIndex: ""srcname"",
 		stateId: ""srcname""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Destination""),
 		sortable: true,
 		dataIndex: ""destname"",
 		stateId: ""destname""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/rsyncd/Modules.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/rsyncd/Modules.js
index 57910c78a0c..16cb8dd07f2 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/rsyncd/Modules.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/rsyncd/Modules.js
@@ -290,6 +290,7 @@ Ext.define(""OMV.module.admin.service.rsyncd.module.AuthUsers"", {
 	stateful: true,
 	stateId: ""42a21c5a-3dc5-11e1-9f73-af7c01c6821f"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Name""),
 		sortable: true,
 		dataIndex: ""name"",
@@ -462,16 +463,19 @@ Ext.define(""OMV.module.admin.service.rsyncd.Modules"", {
 		resizable: false,
 		iconCls:  Ext.baseCSSPrefix + ""grid-cell-booleaniconcolumn-switch""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Shared folder""),
 		sortable: true,
 		dataIndex: ""sharedfoldername"",
 		stateId: ""sharedfoldername""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Name""),
 		sortable: true,
 		dataIndex: ""name"",
 		stateId: ""name""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/smb/Shares.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/smb/Shares.js
index 801719855c7..674f9631533 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/smb/Shares.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/service/smb/Shares.js
@@ -327,11 +327,13 @@ Ext.define(""OMV.module.admin.service.smb.Shares"", {
 		resizable: false,
 		iconCls:  Ext.baseCSSPrefix + ""grid-cell-booleaniconcolumn-switch""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Shared folder""),
 		sortable: true,
 		dataIndex: ""sharedfoldername"",
 		stateId: ""sharedfoldername""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/storage/smart/ScheduledJobs.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/storage/smart/ScheduledJobs.js
index 821dc03aa6d..a069616aa91 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/storage/smart/ScheduledJobs.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/storage/smart/ScheduledJobs.js
@@ -268,29 +268,34 @@ Ext.define(""OMV.module.admin.storage.smart.schedule.Jobs"", {
 			""O"": _(""Offline immediate test"")
 		}
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Hour""),
 		sortable: true,
 		dataIndex: ""hour"",
 		stateId: ""hour""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Day of month""),
 		sortable: true,
 		dataIndex: ""dayofmonth"",
 		stateId: ""dayofmonth"",
 		renderer: OMV.util.Format.arrayRenderer(Date.mapDayOfMonth2Digits)
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Month""),
 		sortable: true,
 		dataIndex: ""month"",
 		stateId: ""month"",
 		renderer: OMV.util.Format.arrayRenderer(Date.mapMonth2Digits)
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Day of week""),
 		sortable: true,
 		dataIndex: ""dayofweek"",
 		stateId: ""dayofweek"",
 		renderer: OMV.util.Format.arrayRenderer(Date.mapDayOfWeek)
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/certificate/Ssh.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/certificate/Ssh.js
index c4e53a81ec1..3bccde8998f 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/certificate/Ssh.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/certificate/Ssh.js
@@ -122,6 +122,7 @@ Ext.define(""OMV.module.admin.system.certificate.ssh.Certificates"", {
 	stateful: true,
 	stateId: ""bdd0b2ca-1016-11e5-be00-0002b3a176b4"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/certificate/Ssl.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/certificate/Ssl.js
index 541813a7db9..6dc19387e3b 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/certificate/Ssl.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/certificate/Ssl.js
@@ -538,6 +538,7 @@ Ext.define(""OMV.module.admin.system.certificate.ssl.Certificates"", {
 	stateful: true,
 	stateId: ""af67e357-d388-4b92-a6d1-076f834c1a0f"",
 	columns: [{
+		xtype: ""textcolumn"",
 		text: _(""Name""),
 		sortable: true,
 		dataIndex: ""name"",
@@ -549,6 +550,7 @@ Ext.define(""OMV.module.admin.system.certificate.ssl.Certificates"", {
 		dataIndex: ""validto"",
 		stateId: ""validto""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/cron/Cron.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/cron/Cron.js
index 7e2202a061f..b750d2eb0d3 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/cron/Cron.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/cron/Cron.js
@@ -308,16 +308,19 @@ Ext.define(""OMV.module.admin.system.cron.Jobs"", {
 		sortable: true,
 		stateId: ""scheduling""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""User""),
 		sortable: true,
 		dataIndex: ""username"",
 		stateId: ""username""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Command""),
 		sortable: true,
 		dataIndex: ""command"",
 		stateId: ""command""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/network/Firewall.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/network/Firewall.js
index d5fbe0652c8..bc389dde610 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/network/Firewall.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/network/Firewall.js
@@ -290,11 +290,13 @@ Ext.define(""OMV.module.admin.system.network.firewall.Rules"", {
 			""!icmpv6"": _(""Not ICMPv6"")
 		}
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Extra options""),
 		sortable: false,
 		dataIndex: ""extraoptions"",
 		stateId: ""extraoptions""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: false,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/network/Interfaces.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/network/Interfaces.js
index 51686c8aea2..6d25d7055c7 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/network/Interfaces.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/network/Interfaces.js
@@ -971,6 +971,7 @@ Ext.define(""OMV.module.admin.system.network.interface.Interfaces"", {
 		stateId: ""wol"",
 		width: 45
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		hidden: true,
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/powermanagement/ScheduledJobs.js b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/powermanagement/ScheduledJobs.js
index 2ce7c092fed..018e8da8cf0 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/powermanagement/ScheduledJobs.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/module/admin/system/powermanagement/ScheduledJobs.js
@@ -308,6 +308,7 @@ Ext.define(""OMV.module.admin.system.powermanagement.schedule.Jobs"", {
 		sortable: true,
 		stateId: ""scheduling""
 	},{
+		xtype: ""textcolumn"",
 		text: _(""Comment""),
 		sortable: true,
 		dataIndex: ""comment"",
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/window/MessageBox.js b/deb/openmediavault/var/www/openmediavault/js/omv/window/MessageBox.js
index c4b2dbb2e79..89413e0912f 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/window/MessageBox.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/window/MessageBox.js
@@ -165,8 +165,7 @@ Ext.define(""OMV.window.MessageBox"", {
 						text += _(""Error #"") + error.code + "":\n"";
 					if(!Ext.isEmpty(error.trace))
 						text += error.trace;
-					details.update(OMV.util.Format.whitespace(
-					  Ext.util.Format.htmlDecode(text), ""pre""));
+					details.update(OMV.util.Format.whitespace(text), ""pre"");
 					if(details.isVisible()) {
 						details.hide();
 						c.setText(_(""Show details""));
@@ -201,7 +200,7 @@ Ext.define(""OMV.window.MessageBox"", {
 						cls: me.baseCls + ""-text"",
 						html: (Ext.isEmpty(error.message) ?
 						  _(""An error has occured"") :
-						  Ext.util.Format.htmlDecode(error.message))
+						  Ext.util.Format.htmlEncode(error.message))
 					}]
 				}]
 			}, details = Ext.create(""Ext.panel.Panel"", {
diff --git a/deb/openmediavault/var/www/openmediavault/js/omv/workspace/grid/Panel.js b/deb/openmediavault/var/www/openmediavault/js/omv/workspace/grid/Panel.js
index aaf638202f8..a8f84173937 100644
--- a/deb/openmediavault/var/www/openmediavault/js/omv/workspace/grid/Panel.js
+++ b/deb/openmediavault/var/www/openmediavault/js/omv/workspace/grid/Panel.js
@@ -30,6 +30,7 @@
 // require(""js/omv/grid/column/UnixTimestamp.js"")
 // require(""js/omv/grid/column/WhiteSpace.js"")
 // require(""js/omv/grid/column/Map.js"")
+// require(""js/omv/grid/column/Text.js"")
 // require(""js/omv/grid/column/ToolTip.js"")
 // require(""js/omv/grid/column/NumberRange.js"")
 // require(""js/omv/window/MessageBox.js"")"
CVE-2017-9142,"From f0232a2a45dfd003c1faf6079497895df3ab0ee1 Mon Sep 17 00:00:00 2001
From: Dirk Lemstra <dirk@git.imagemagick.org>
Date: Mon, 15 May 2017 21:18:13 +0200
Subject: [PATCH] Fixed incorrect call to WriteBlob reported in #490.

---
 coders/png.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/coders/png.c b/coders/png.c
index c194d08585c..cfd68440066 100644
--- a/coders/png.c
+++ b/coders/png.c
@@ -4782,10 +4782,11 @@ static Image *ReadOneJNGImage(MngInfo *mng_info,
           (void) LogMagickEvent(CoderEvent,GetMagickModule(),
             ""    Copying JDAT chunk data to color_blob."");
 
-        (void) WriteBlob(color_image,length,chunk);
-
         if (length != 0)
-          chunk=(unsigned char *) RelinquishMagickMemory(chunk);
+          {
+            (void) WriteBlob(color_image,length,chunk);
+            chunk=(unsigned char *) RelinquishMagickMemory(chunk);
+          }
 
         continue;
       }"
OSV-2017-100,"From 637fc8446edb8444c7a66918f109f2fa552ff987 Mon Sep 17 00:00:00 2001
From: Varun Khaneja <ca.aawc@yahoo.com>
Date: Tue, 21 Nov 2017 11:35:34 -0800
Subject: [PATCH] Do not suppress warnings

---
 makefile | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/makefile b/makefile
index f70755f..4f46c2a 100644
--- a/makefile
+++ b/makefile
@@ -3,7 +3,7 @@
 
 # Linux using GCC
 CXX=c++
-CXXFLAGS=-O2 -Wno-logical-op-parentheses -Wno-switch -Wno-dangling-else
+CXXFLAGS=-O2
 LIBFLAGS=-fPIC
 DEFINES=-D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE -DRAR_SMP
 STRIP=strip"
CVE-2017-9995,"From 7ac5067146613997bb38442cb022d7f41321a706 Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Thu, 11 May 2017 15:29:31 +0200
Subject: [PATCH] avcodec/scpr: Check y in first line loop in decompress_i()

Fixes: out of array access
Fixes: 1478/clusterfuzz-testcase-minimized-5285486908145664

Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpeg
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
---
 libavcodec/scpr.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/libavcodec/scpr.c b/libavcodec/scpr.c
index ba1f65f2e9b88..b87c047ab6591 100644
--- a/libavcodec/scpr.c
+++ b/libavcodec/scpr.c
@@ -331,6 +331,9 @@ static int decompress_i(AVCodecContext *avctx, uint32_t *dst, int linesize)
         clr = (b << 16) + (g << 8) + r;
         k += run;
         while (run-- > 0) {
+            if (y >= avctx->height)
+                return AVERROR_INVALIDDATA;
+
             dst[y * linesize + x] = clr;
             lx = x;
             ly = y;"
CVE-2017-0152,"From 9da019424601325a6e95e6be0fa03d7d21d0b517 Mon Sep 17 00:00:00 2001
From: Aneesh Divakarakurup <aneeshd@microsoft.com>
Date: Wed, 8 Mar 2017 16:58:06 -0800
Subject: [PATCH] [CVE-2017-0152] MSFT: 10592731 : Issue with Function name
 capturing in param scope

In a function expression with name, where the name is captured in one
of the param scope functions, if there is a function or var declaration
with the same name as the function expression name we were marking the
function expression name as shadowed. In non-eval case this causes
issue because the name symbol won't get added to the body. This change is to
fix it in such a way if the name is captured in the param scope then we
split the param and body scope such that the name symbol is added to the
param scope not body scope.
---
 lib/Parser/Parse.cpp                     | 13 +++++++++++++
 lib/Runtime/ByteCode/ByteCodeEmitter.cpp |  5 ++++-
 test/es6/default-splitscope.js           | 16 ++++++++++++++++
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/lib/Parser/Parse.cpp b/lib/Parser/Parse.cpp
index 683a8fdf433..7bf964c093b 100644
--- a/lib/Parser/Parse.cpp
+++ b/lib/Parser/Parse.cpp
@@ -5198,6 +5198,19 @@ bool Parser::ParseFncDeclHelper(ParseNodePtr pnodeFnc, LPCOLESTR pNameHint, usho
                         paramScope->SetCannotMergeWithBodyScope();
                     }
                 }
+                if (paramScope->GetCanMergeWithBodyScope() && !fDeclaration && pnodeFnc->sxFnc.pnodeName != nullptr)
+                {
+                    Symbol* funcSym = pnodeFnc->sxFnc.pnodeName->sxVar.sym;
+                    if (funcSym->GetPid()->GetTopRef()->GetFuncScopeId() > pnodeFnc->sxFnc.functionId)
+                    {
+                        // This is a function expression with name captured in the param scope. In non-eval, non-split cases the function
+                        // name symbol is added to the body scope to make it accessible in the body. But if there is a function or var
+                        // declaration with the same name in the body then adding to the body will fail. So in this case we have to add
+                        // the name symbol to the param scope by splitting it.
+                        paramScope->SetCannotMergeWithBodyScope();
+                    }
+                }
+
             }
         }
 
diff --git a/lib/Runtime/ByteCode/ByteCodeEmitter.cpp b/lib/Runtime/ByteCode/ByteCodeEmitter.cpp
index 673b6c61935..665dbe7b15e 100644
--- a/lib/Runtime/ByteCode/ByteCodeEmitter.cpp
+++ b/lib/Runtime/ByteCode/ByteCodeEmitter.cpp
@@ -3319,6 +3319,7 @@ void ByteCodeGenerator::EmitOneFunction(ParseNode *pnode)
         {
             // Emit bytecode to copy the initial values from param names to their corresponding body bindings.
             // We have to do this after the rest param is marked as false for need declaration.
+            Symbol* funcSym = funcInfo->root->sxFnc.GetFuncSymbol();
             paramScope->ForEachSymbol([&](Symbol* param) {
                 Symbol* varSym = funcInfo->GetBodyScope()->FindLocalSymbol(param->GetName());
                 Assert(varSym || pnode->sxFnc.pnodeName->sxVar.sym == param);
@@ -3327,7 +3328,9 @@ void ByteCodeGenerator::EmitOneFunction(ParseNode *pnode)
                 {
                     // Do not copy the arguments to the body if it is not used
                 }
-                else if (varSym && varSym->GetSymbolType() == STVariable && (varSym->IsInSlot(funcInfo) || varSym->GetLocation() != Js::Constants::NoRegister))
+                else if ((funcSym == nullptr || funcSym != param)    // Do not copy the symbol over to body as the function expression symbol
+                                                                     // is expected to stay inside the function expression scope
+                    && (varSym && varSym->GetSymbolType() == STVariable && (varSym->IsInSlot(funcInfo) || varSym->GetLocation() != Js::Constants::NoRegister)))
                 {
                     // Simulating EmitPropLoad here. We can't directly call the method as we have to use the param scope specifically.
                     // Walking the scope chain is not possible at this time.
diff --git a/test/es6/default-splitscope.js b/test/es6/default-splitscope.js
index 0a5da26a816..021ebce8df8 100644
--- a/test/es6/default-splitscope.js
+++ b/test/es6/default-splitscope.js
@@ -159,6 +159,22 @@ var tests = [
             return a;
         }
         assert.areEqual(10, f11()(), ""Recursive call to the function from the body scope returns the right value when eval is there in the body"");
+
+        function f13() {
+            var a = function jnvgfg(sfgnmj = function ccunlk() { jnvgfg(undefined, 1); }, b) {
+                if (b) {
+                    assert.areEqual(undefined, jnvgfg, ""This refers to the instance in the body and the value of the function expression is not copied over"");
+                }
+                var jnvgfg = 10;
+                if (!b) {
+                    sfgnmj();
+                    return 100;
+                }
+            };
+            assert.areEqual(100, a(), ""After the recursion the right value is returned by the split scoped function"");
+        };
+        f13();
+
     } 
  }, 
  {"
CVE-2017-17053,"From ccd5b3235180eef3cfec337df1c8554ab151b5cc Mon Sep 17 00:00:00 2001
From: Eric Biggers <ebiggers@google.com>
Date: Thu, 24 Aug 2017 10:50:29 -0700
Subject: [PATCH] x86/mm: Fix use-after-free of ldt_struct

The following commit:

  39a0526fb3f7 (""x86/mm: Factor out LDT init from context init"")

renamed init_new_context() to init_new_context_ldt() and added a new
init_new_context() which calls init_new_context_ldt().  However, the
error code of init_new_context_ldt() was ignored.  Consequently, if a
memory allocation in alloc_ldt_struct() failed during a fork(), the
->context.ldt of the new task remained the same as that of the old task
(due to the memcpy() in dup_mm()).  ldt_struct's are not intended to be
shared, so a use-after-free occurred after one task exited.

Fix the bug by making init_new_context() pass through the error code of
init_new_context_ldt().

This bug was found by syzkaller, which encountered the following splat:

    BUG: KASAN: use-after-free in free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116
    Read of size 4 at addr ffff88006d2cb7c8 by task kworker/u9:0/3710

    CPU: 1 PID: 3710 Comm: kworker/u9:0 Not tainted 4.13.0-rc4-next-20170811 #2
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    Call Trace:
     __dump_stack lib/dump_stack.c:16 [inline]
     dump_stack+0x194/0x257 lib/dump_stack.c:52
     print_address_description+0x73/0x250 mm/kasan/report.c:252
     kasan_report_error mm/kasan/report.c:351 [inline]
     kasan_report+0x24e/0x340 mm/kasan/report.c:409
     __asan_report_load4_noabort+0x14/0x20 mm/kasan/report.c:429
     free_ldt_struct.part.2+0x10a/0x150 arch/x86/kernel/ldt.c:116
     free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]
     destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171
     destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]
     __mmdrop+0xe9/0x530 kernel/fork.c:889
     mmdrop include/linux/sched/mm.h:42 [inline]
     exec_mmap fs/exec.c:1061 [inline]
     flush_old_exec+0x173c/0x1ff0 fs/exec.c:1291
     load_elf_binary+0x81f/0x4ba0 fs/binfmt_elf.c:855
     search_binary_handler+0x142/0x6b0 fs/exec.c:1652
     exec_binprm fs/exec.c:1694 [inline]
     do_execveat_common.isra.33+0x1746/0x22e0 fs/exec.c:1816
     do_execve+0x31/0x40 fs/exec.c:1860
     call_usermodehelper_exec_async+0x457/0x8f0 kernel/umh.c:100
     ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431

    Allocated by task 3700:
     save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59
     save_stack+0x43/0xd0 mm/kasan/kasan.c:447
     set_track mm/kasan/kasan.c:459 [inline]
     kasan_kmalloc+0xad/0xe0 mm/kasan/kasan.c:551
     kmem_cache_alloc_trace+0x136/0x750 mm/slab.c:3627
     kmalloc include/linux/slab.h:493 [inline]
     alloc_ldt_struct+0x52/0x140 arch/x86/kernel/ldt.c:67
     write_ldt+0x7b7/0xab0 arch/x86/kernel/ldt.c:277
     sys_modify_ldt+0x1ef/0x240 arch/x86/kernel/ldt.c:307
     entry_SYSCALL_64_fastpath+0x1f/0xbe

    Freed by task 3700:
     save_stack_trace+0x16/0x20 arch/x86/kernel/stacktrace.c:59
     save_stack+0x43/0xd0 mm/kasan/kasan.c:447
     set_track mm/kasan/kasan.c:459 [inline]
     kasan_slab_free+0x71/0xc0 mm/kasan/kasan.c:524
     __cache_free mm/slab.c:3503 [inline]
     kfree+0xca/0x250 mm/slab.c:3820
     free_ldt_struct.part.2+0xdd/0x150 arch/x86/kernel/ldt.c:121
     free_ldt_struct arch/x86/kernel/ldt.c:173 [inline]
     destroy_context_ldt+0x60/0x80 arch/x86/kernel/ldt.c:171
     destroy_context arch/x86/include/asm/mmu_context.h:157 [inline]
     __mmdrop+0xe9/0x530 kernel/fork.c:889
     mmdrop include/linux/sched/mm.h:42 [inline]
     __mmput kernel/fork.c:916 [inline]
     mmput+0x541/0x6e0 kernel/fork.c:927
     copy_process.part.36+0x22e1/0x4af0 kernel/fork.c:1931
     copy_process kernel/fork.c:1546 [inline]
     _do_fork+0x1ef/0xfb0 kernel/fork.c:2025
     SYSC_clone kernel/fork.c:2135 [inline]
     SyS_clone+0x37/0x50 kernel/fork.c:2129
     do_syscall_64+0x26c/0x8c0 arch/x86/entry/common.c:287
     return_from_SYSCALL_64+0x0/0x7a

Here is a C reproducer:

    #include <asm/ldt.h>
    #include <pthread.h>
    #include <signal.h>
    #include <stdlib.h>
    #include <sys/syscall.h>
    #include <sys/wait.h>
    #include <unistd.h>

    static void *fork_thread(void *_arg)
    {
        fork();
    }

    int main(void)
    {
        struct user_desc desc = { .entry_number = 8191 };

        syscall(__NR_modify_ldt, 1, &desc, sizeof(desc));

        for (;;) {
            if (fork() == 0) {
                pthread_t t;

                srand(getpid());
                pthread_create(&t, NULL, fork_thread, NULL);
                usleep(rand() % 10000);
                syscall(__NR_exit_group, 0);
            }
            wait(NULL);
        }
    }

Note: the reproducer takes advantage of the fact that alloc_ldt_struct()
may use vmalloc() to allocate a large ->entries array, and after
commit:

  5d17a73a2ebe (""vmalloc: back off when the current task is killed"")

it is possible for userspace to fail a task's vmalloc() by
sending a fatal signal, e.g. via exit_group().  It would be more
difficult to reproduce this bug on kernels without that commit.

This bug only affected kernels with CONFIG_MODIFY_LDT_SYSCALL=y.

Signed-off-by: Eric Biggers <ebiggers@google.com>
Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
Cc: <stable@vger.kernel.org> [v4.6+]
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Andy Lutomirski <luto@amacapital.net>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Brian Gerst <brgerst@gmail.com>
Cc: Christoph Hellwig <hch@lst.de>
Cc: Denys Vlasenko <dvlasenk@redhat.com>
Cc: Dmitry Vyukov <dvyukov@google.com>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Michal Hocko <mhocko@suse.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Rik van Riel <riel@redhat.com>
Cc: Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: linux-mm@kvack.org
Fixes: 39a0526fb3f7 (""x86/mm: Factor out LDT init from context init"")
Link: http://lkml.kernel.org/r/20170824175029.76040-1-ebiggers3@gmail.com
Signed-off-by: Ingo Molnar <mingo@kernel.org>
---
 arch/x86/include/asm/mmu_context.h | 4 +---
 1 file changed, 1 insertion(+), 3 deletions(-)

diff --git a/arch/x86/include/asm/mmu_context.h b/arch/x86/include/asm/mmu_context.h
index 265c907d7d4c9b..7a234be7e29846 100644
--- a/arch/x86/include/asm/mmu_context.h
+++ b/arch/x86/include/asm/mmu_context.h
@@ -140,9 +140,7 @@ static inline int init_new_context(struct task_struct *tsk,
 		mm->context.execute_only_pkey = -1;
 	}
 	#endif
-	init_new_context_ldt(tsk, mm);
-
-	return 0;
+	return init_new_context_ldt(tsk, mm);
 }
 static inline void destroy_context(struct mm_struct *mm)
 {"
CVE-2017-7854,"From d2632f6483a3ceb5d8e0a5fb11142c51c43978b4 Mon Sep 17 00:00:00 2001
From: pancake <pancake@nopcode.org>
Date: Thu, 13 Apr 2017 15:31:24 +0200
Subject: [PATCH] Fix crash in fuzzed wasm r2_hoobr_consume_init_expr

---
 libr/bin/format/wasm/wasm.c | 65 +++++++++++++++----------------------
 1 file changed, 27 insertions(+), 38 deletions(-)

diff --git a/libr/bin/format/wasm/wasm.c b/libr/bin/format/wasm/wasm.c
index a950737fc8a62..4df4802ed2dbd 100644
--- a/libr/bin/format/wasm/wasm.c
+++ b/libr/bin/format/wasm/wasm.c
@@ -67,11 +67,12 @@ static size_t consume_str (ut8 *buf, ut8 *max, size_t sz, char *out, ut32 *offse
 	if (offset) *offset += sz;
 	return sz;
 }
+
 static size_t consume_init_expr (ut8 *buf, ut8 *max, ut8 eoc, void *out, ut32 *offset) {
 	ut32 i = 0;
 	while (buf + i < max && buf[i] != eoc) {
 		// TODO: calc the expresion with the bytcode (ESIL?)
-		i += 1;
+		i++;
 	}
 	if (buf[i] != eoc) {
 		return 0;
@@ -448,43 +449,40 @@ static RList *r_bin_wasm_get_code_entries (RBinWasmObj *bin, RBinWasmSection *se
 }
 
 static RList *r_bin_wasm_get_data_entries (RBinWasmObj *bin, RBinWasmSection *sec) {
-
 	RList *ret = NULL;
 	RBinWasmDataEntry *ptr = NULL;
+	ut32 len =  sec->payload_len;
 
 	if (!(ret = r_list_newf ((RListFree)free))) {
 		return NULL;
 	}
 
 	ut8* buf = bin->buf->buf + (ut32)sec->payload_data;
-	ut32 len =  sec->payload_len;
+	int buflen = bin->buf->length - (ut32)sec->payload_data;
 	ut32 count = sec->count;
 	ut32 i = 0, r = 0;
 	size_t n = 0;
 
-	while (i < len && r < count) {
-
+	while (i < len && len < buflen && r < count) {
 		if (!(ptr = R_NEW0 (RBinWasmDataEntry))) {
 			return ret;
 		}
-
 		if (!(consume_u32 (buf + i, buf + len, &ptr->index, &i))) {
-			free (ptr);
-			return ret;
+			goto beach;
+		}
+		if (i + 4 >= buflen) {
+			goto beach;
 		}
-
 		if (!(n = consume_init_expr (buf + i, buf + len, R_BIN_WASM_END_OF_CODE, NULL, &i))) {
-			free (ptr);
-			return ret;
+			goto beach;
 		}
-
 		ptr->offset.len = n;
-
 		if (!(consume_u32 (buf + i, buf + len, &ptr->size, &i))) {	
-			free (ptr);
-			return ret;
+			goto beach;
+		}
+		if (i + 4 >= buflen) {
+			goto beach;
 		}
-
 		ptr->data = sec->payload_data + i;
 
 		r_list_append (ret, ptr);
@@ -492,7 +490,9 @@ static RList *r_bin_wasm_get_data_entries (RBinWasmObj *bin, RBinWasmSection *se
 		r += 1;
 
 	}
-
+	return ret;
+beach:
+	free (ptr);
 	return ret;
 }
 
@@ -593,16 +593,13 @@ static RList *r_bin_wasm_get_table_entries (RBinWasmObj *bin, RBinWasmSection *s
 static RList *r_bin_wasm_get_global_entries (RBinWasmObj *bin, RBinWasmSection *sec) {
 	RList *ret = NULL;
 	RBinWasmGlobalEntry *ptr = NULL;
-	int buflen = bin->buf->length;
-	if (sec->payload_data + 32 > buflen) {
-		return NULL;
-	}
 
 	if (!(ret = r_list_newf ((RListFree)free))) {
 		return NULL;
 	}
 
 	ut8* buf = bin->buf->buf + (ut32)sec->payload_data;
+	int buflen = bin->buf->length - (ut32)sec->payload_data;
 	ut32 len =  sec->payload_len;
 	ut32 count = sec->count;
 	ut32 i = 0, r = 0;
@@ -631,7 +628,6 @@ static RList *r_bin_wasm_get_global_entries (RBinWasmObj *bin, RBinWasmSection *
 }
 
 static RList *r_bin_wasm_get_element_entries (RBinWasmObj *bin, RBinWasmSection *sec) {
-
 	RList *ret = NULL;
 	RBinWasmElementEntry *ptr = NULL;
 
@@ -640,33 +636,26 @@ static RList *r_bin_wasm_get_element_entries (RBinWasmObj *bin, RBinWasmSection
 	}
 
 	ut8* buf = bin->buf->buf + (ut32)sec->payload_data;
+	int buflen = bin->buf->length - (ut32)sec->payload_data;
 	ut32 len =  sec->payload_len;
 	ut32 count = sec->count;
 	ut32 i = 0, r = 0;
 
-	while (i < len && r < count) {
-
+	while (i < len && len < buflen && r < count) {
 		if (!(ptr = R_NEW0 (RBinWasmElementEntry))) {
 			return ret;
 		}
-
 		if (!(consume_u32 (buf + i, buf + len, &ptr->index, &i))) {
-			free (ptr);
-			return ret;
+			goto beach;
 		}
-
 		if (!(consume_init_expr (buf + i, buf + len, R_BIN_WASM_END_OF_CODE, NULL, &i))) {
-			free (ptr);
-			return ret;
+			goto beach;
 		}
-
 		if (!(consume_u32 (buf + i, buf + len, &ptr->num_elem, &i))) {
-			free (ptr);
-			return ret;
+			goto beach;
 		}
-
 		ut32 j = 0;
-		while (i < len && j < ptr->num_elem	) {
+		while (i < len && j < ptr->num_elem) {
 			// TODO: allocate space and fill entry
 			ut32 e;
 			if (!(consume_u32 (buf + i, buf + len, &e, &i))) {
@@ -674,13 +663,13 @@ static RList *r_bin_wasm_get_element_entries (RBinWasmObj *bin, RBinWasmSection
 				return ret;
 			}
 		}
-
 		r_list_append (ret, ptr);
 
 		r += 1;
-
 	}
-
+	return ret;
+beach:
+	free (ptr);
 	return ret;
 }"
CVE-2017-5553,"From ce5b36e44b714b18b0bcd34c6db0187b8d13bab8 Mon Sep 17 00:00:00 2001
From: yurabakhtin <yurybakh@gmail.com>
Date: Thu, 19 Jan 2017 10:24:29 +0300
Subject: [PATCH] Ignore wrong urls on markdown plugin

---
 plugins/markdown_plugin/_parsedown.inc.php | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/plugins/markdown_plugin/_parsedown.inc.php b/plugins/markdown_plugin/_parsedown.inc.php
index 9ab2f281d9b..7aea9f00655 100644
--- a/plugins/markdown_plugin/_parsedown.inc.php
+++ b/plugins/markdown_plugin/_parsedown.inc.php
@@ -29,6 +29,7 @@
 	9. Don't apply <p> around list and already existing paragraph tags
 	10. Don't convert HTML entities inside <code> html tags because the ""Escape code"" plugin does this
 	11. Fix the missed empty lines in code blocks which are started and ended with ```
+	12. Ignore wrong URLs for links and images; Allow only which begin with http://, https:// or /
 */
 
 class Parsedown
@@ -100,7 +101,7 @@ function parse($text)
 
 		# Extracts link references.
 
-		if (preg_match_all('/^[ ]{0,3}\[(.+)\][ ]?:[ ]*\n?[ ]*(.+)$/m', $text, $matches, PREG_SET_ORDER))
+		if (preg_match_all('/^[ ]{0,3}\[(.+)\][ ]?:[ ]*\n?[ ]*((https?:\/\/|\/).+)$/m', $text, $matches, PREG_SET_ORDER))
 		{
 			foreach ($matches as $matches)
 			{
@@ -589,7 +590,7 @@ private function parse_inline_elements($text)
 			if( strpos($text, '](') !== FALSE ) # inline
 			{
 				$text = str_replace( '&quot;', '""', $text ); // revert from html entity
-				if( preg_match_all( '/(!?)(\[((?:[^][]+|(?2))*)\])\(([^""]*?)( ""([^""]+)"")?\)/', $text, $matches, PREG_SET_ORDER ) )
+				if( preg_match_all( '/(!?)(\[((?:[^][]+|(?2))*)\])\((https?:\/\/|\/)([^""]*?)( ""([^""]+)"")?\)/', $text, $matches, PREG_SET_ORDER ) )
 				{
 					foreach ($matches as $matches)
 					{
@@ -597,7 +598,7 @@ private function parse_inline_elements($text)
 						{
 							if( $this->parse_images )
 							{ // Parse images only if it is enabled
-								$element = '<img src=""'.$matches[4].'"" alt=""'.$matches[3].'""'.( ! empty( $matches[6] ) ? ' title=""'.$matches[6].'""' : '' ).'>';
+								$element = '<img src=""'.$matches[4].$matches[5].'"" alt=""'.$matches[3].'""'.( ! empty( $matches[7] ) ? ' title=""'.$matches[7].'""' : '' ).'>';
 							}
 						}
 						else
@@ -605,7 +606,7 @@ private function parse_inline_elements($text)
 							if( $this->parse_links )
 							{ // Parse links only if it is enabled
 								$element_text = $this->parse_inline_elements($matches[3]);
-								$element = '<a href=""'.$matches[4].'""'.( ! empty( $matches[6] ) ? ' title=""'.$matches[6].'""' : '' ).'>'.$element_text.'</a>';
+								$element = '<a href=""'.$matches[4].$matches[5].'""'.( ! empty( $matches[7] ) ? ' title=""'.$matches[7].'""' : '' ).'>'.$element_text.'</a>';
 							}
 						}"
OSV-2017-8,"From 0b664ba968437715819bfe4c7ada5679d16ebbc3 Mon Sep 17 00:00:00 2001
From: Daniel Stenberg <daniel@haxx.se>
Date: Fri, 10 Nov 2017 08:52:45 +0100
Subject: [PATCH] wildcardmatch: fix heap buffer overflow in setcharset

The code would previous read beyond the end of the pattern string if the
match pattern ends with an open bracket when the default pattern
matching function is used.

Detected by OSS-Fuzz:
https://bugs.chromium.org/p/oss-fuzz/issues/detail?id=4161

CVE-2017-8817

Bug: https://curl.haxx.se/docs/adv_2017-ae72.html
---
 lib/curl_fnmatch.c      |  9 +++----
 tests/data/Makefile.inc |  2 +-
 tests/data/test1163     | 52 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 56 insertions(+), 7 deletions(-)
 create mode 100644 tests/data/test1163

diff --git a/lib/curl_fnmatch.c b/lib/curl_fnmatch.c
index da83393b4906..8a1e106c4565 100644
--- a/lib/curl_fnmatch.c
+++ b/lib/curl_fnmatch.c
@@ -133,6 +133,9 @@ static int setcharset(unsigned char **p, unsigned char *charset)
   unsigned char c;
   for(;;) {
     c = **p;
+    if(!c)
+      return SETCHARSET_FAIL;
+
     switch(state) {
     case CURLFNM_SCHS_DEFAULT:
       if(ISALNUM(c)) { /* ASCII value */
@@ -196,9 +199,6 @@ static int setcharset(unsigned char **p, unsigned char *charset)
         else
           return SETCHARSET_FAIL;
       }
-      else if(c == '\0') {
-        return SETCHARSET_FAIL;
-      }
       else {
         charset[c] = 1;
         (*p)++;
@@ -274,9 +274,6 @@ static int setcharset(unsigned char **p, unsigned char *charset)
       else if(c == ']') {
         return SETCHARSET_OK;
       }
-      else if(c == '\0') {
-        return SETCHARSET_FAIL;
-      }
       else if(ISPRINT(c)) {
         charset[c] = 1;
         (*p)++;
diff --git a/tests/data/Makefile.inc b/tests/data/Makefile.inc
index 2a2ca508a84c..8383d4c64d5c 100644
--- a/tests/data/Makefile.inc
+++ b/tests/data/Makefile.inc
@@ -125,7 +125,7 @@ test1136 test1137 test1138 test1139 test1140 test1141 test1142 test1143 \
 test1144 test1145 test1146 test1147 test1148 test1149 test1150 test1151 \
 test1152 test1153 \
 \
-test1160 test1161 test1162 \
+test1160 test1161 test1162 test1163 \
 test1200 test1201 test1202 test1203 test1204 test1205 test1206 test1207 \
 test1208 test1209 test1210 test1211 test1212 test1213 test1214 test1215 \
 test1216 test1217 test1218 test1219 \
diff --git a/tests/data/test1163 b/tests/data/test1163
new file mode 100644
index 000000000000..a109b511bcc7
--- /dev/null
+++ b/tests/data/test1163
@@ -0,0 +1,52 @@
+<testcase>
+<info>
+<keywords>
+FTP
+RETR
+LIST
+wildcardmatch
+ftplistparser
+flaky
+</keywords>
+</info>
+
+#
+# Server-side
+<reply>
+<data>
+</data>
+</reply>
+
+# Client-side
+<client>
+<server>
+ftp
+</server>
+<tool>
+lib576
+</tool>
+<name>
+FTP wildcard with pattern ending with an open-bracket
+</name>
+<command>
+""ftp://%HOSTIP:%FTPPORT/fully_simulated/DOS/*[][""
+</command>
+</client>
+<verify>
+<protocol>
+USER anonymous
+PASS ftp@example.com
+PWD
+CWD fully_simulated
+CWD DOS
+EPSV
+TYPE A
+LIST
+QUIT
+</protocol>
+# 78 == CURLE_REMOTE_FILE_NOT_FOUND
+<errorcode>
+78
+</errorcode>
+</verify>
+</testcase>"
CVE-2017-6886,"From d7c3d2cb460be10a3ea7b32e9443a83c243b2251 Mon Sep 17 00:00:00 2001
From: Alex Tutubalin <lexa@lexa.ru>
Date: Sat, 4 Mar 2017 21:27:39 +0300
Subject: [PATCH] Secunia SA75000 advisory: several buffer overruns

---
 dcraw/dcraw.c             | 12 ++++++++++--
 internal/dcraw_common.cpp | 12 ++++++++++--
 2 files changed, 20 insertions(+), 4 deletions(-)

diff --git a/dcraw/dcraw.c b/dcraw/dcraw.c
index b6fc378a..4c44a2a0 100644
--- a/dcraw/dcraw.c
+++ b/dcraw/dcraw.c
@@ -12870,6 +12870,10 @@ int CLASS parse_tiff_ifd(int base)
         load_raw = &CLASS sony_arw_load_raw;
         data_offset = get4() + base;
         ifd++;
+#ifdef LIBRAW_LIBRARY_BUILD
+	if (ifd >= sizeof tiff_ifd / sizeof tiff_ifd[0])
+	  throw LIBRAW_EXCEPTION_IO_CORRUPT;
+#endif    
         break;
       }
 #ifdef LIBRAW_LIBRARY_BUILD
@@ -13177,7 +13181,7 @@ int CLASS parse_tiff_ifd(int base)
       break;
     case 50454: /* Sinar tag */
     case 50455:
-      if (len > 2560000 || !(cbuf = (char *)malloc(len)))
+      if (len < 1 || len > 2560000 || !(cbuf = (char *)malloc(len)))
         break;
 #ifndef LIBRAW_LIBRARY_BUILD
       fread(cbuf, 1, len, ifp);
@@ -14795,7 +14799,11 @@ int CLASS parse_jpeg(int offset)
     }
     order = get2();
     hlen = get4();
-    if (get4() == 0x48454150) /* ""HEAP"" */
+    if (get4() == 0x48454150
+#ifdef LIBRAW_LIBRARY_BUILD
+	&& (save+hlen) >= 0 && (save+hlen)<=ifp->size()
+#endif
+	) /* ""HEAP"" */
     {
 #ifdef LIBRAW_LIBRARY_BUILD
       imgdata.lens.makernotes.CameraMount = LIBRAW_MOUNT_FixedLens;
diff --git a/internal/dcraw_common.cpp b/internal/dcraw_common.cpp
index 44802e04..8edf5359 100644
--- a/internal/dcraw_common.cpp
+++ b/internal/dcraw_common.cpp
@@ -11542,6 +11542,10 @@ int CLASS parse_tiff_ifd(int base)
         load_raw = &CLASS sony_arw_load_raw;
         data_offset = get4() + base;
         ifd++;
+#ifdef LIBRAW_LIBRARY_BUILD
+	if (ifd >= sizeof tiff_ifd / sizeof tiff_ifd[0])
+	  throw LIBRAW_EXCEPTION_IO_CORRUPT;
+#endif    
         break;
       }
 #ifdef LIBRAW_LIBRARY_BUILD
@@ -11849,7 +11853,7 @@ int CLASS parse_tiff_ifd(int base)
       break;
     case 50454: /* Sinar tag */
     case 50455:
-      if (len > 2560000 || !(cbuf = (char *)malloc(len)))
+      if (len < 1 || len > 2560000 || !(cbuf = (char *)malloc(len)))
         break;
 #ifndef LIBRAW_LIBRARY_BUILD
       fread(cbuf, 1, len, ifp);
@@ -13467,7 +13471,11 @@ int CLASS parse_jpeg(int offset)
     }
     order = get2();
     hlen = get4();
-    if (get4() == 0x48454150) /* ""HEAP"" */
+    if (get4() == 0x48454150
+#ifdef LIBRAW_LIBRARY_BUILD
+	&& (save+hlen) >= 0 && (save+hlen)<=ifp->size()
+#endif
+	) /* ""HEAP"" */
     {
 #ifdef LIBRAW_LIBRARY_BUILD
       imgdata.lens.makernotes.CameraMount = LIBRAW_MOUNT_FixedLens;"
CVE-2017-6952,"From 6fe86eef621b9849f51a5e1e5d73258a93440403 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Quang=20Nguy=E1=BB=85n?=
 <quangnh89@users.noreply.github.com>
Date: Mon, 13 Mar 2017 22:34:48 +0700
Subject: [PATCH] provide a validity check to prevent against Integer overflow
 conditions (#870)

* provide a validity check to prevent against Integer overflow conditions

* fix some style issues.
---
 windows/winkernel_mm.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/windows/winkernel_mm.c b/windows/winkernel_mm.c
index c127da3ac4..ecdc1ca2d6 100644
--- a/windows/winkernel_mm.c
+++ b/windows/winkernel_mm.c
@@ -3,6 +3,7 @@
 
 #include ""winkernel_mm.h""
 #include <ntddk.h>
+#include <Ntintsafe.h>
 
 // A pool tag for memory allocation
 static const ULONG CS_WINKERNEL_POOL_TAG = 'kwsC';
@@ -33,8 +34,16 @@ void * CAPSTONE_API cs_winkernel_malloc(size_t size)
 
 	// FP; a use of NonPagedPool is required for Windows 7 support
 #pragma prefast(suppress : 30030)		// Allocating executable POOL_TYPE memory
-	CS_WINKERNEL_MEMBLOCK *block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(
-			NonPagedPool, size + sizeof(CS_WINKERNEL_MEMBLOCK), CS_WINKERNEL_POOL_TAG);
+	size_t number_of_bytes = 0;
+	CS_WINKERNEL_MEMBLOCK *block = NULL;
+	// A specially crafted size value can trigger the overflow.
+	// If the sum in a value that overflows or underflows the capacity of the type,
+	// the function returns NULL.
+	if (!NT_SUCCESS(RtlSizeTAdd(size, sizeof(CS_WINKERNEL_MEMBLOCK), &number_of_bytes))) {
+		return NULL;
+	}
+	block = (CS_WINKERNEL_MEMBLOCK *)ExAllocatePoolWithTag(
+			NonPagedPool, number_of_bytes, CS_WINKERNEL_POOL_TAG);
 	if (!block) {
 		return NULL;
 	}"
CVE-2017-14981,"From 9292360c8b3898d0990983269f110cef21729090 Mon Sep 17 00:00:00 2001
From: Greg Gay <gregrgay@gmail.com>
Date: Sun, 1 Oct 2017 10:12:48 -0400
Subject: [PATCH] 5815 added htmlspecialchars to filter URL var before going to
 the db.

---
 mods/_standard/rss_feeds/edit_feed.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/mods/_standard/rss_feeds/edit_feed.php b/mods/_standard/rss_feeds/edit_feed.php
index 550a4ea7e..4abac11ed 100644
--- a/mods/_standard/rss_feeds/edit_feed.php
+++ b/mods/_standard/rss_feeds/edit_feed.php
@@ -38,7 +38,7 @@
 	}
 
 	if (!$msg->containsErrors()) {
-		$_GET['url'] = $addslashes($_GET['url']);
+        $_GET['url'] = htmlspecialchars(strip_tags($_GET['url']), ENT_QUOTES);
 
 		$sql	= ""REPLACE INTO %sfeeds VALUES(%d, '%s')"";
 		$result = queryDB($sql, array(TABLE_PREFIX, $feed_id, $_GET['url']));"
CVE-2017-1000369,"From 65e061b76867a9ea7aeeb535341b790b90ae6c21 Mon Sep 17 00:00:00 2001
From: ""Heiko Schlittermann (HS12-RIPE)"" <hs@schlittermann.de>
Date: Wed, 31 May 2017 23:08:56 +0200
Subject: [PATCH] Cleanup (prevent repeated use of -p/-oMr to avoid mem leak)

---
 doc/doc-docbook/spec.xfpt |  3 ++-
 src/src/exim.c            | 19 +++++++++++++++++--
 2 files changed, 19 insertions(+), 3 deletions(-)

diff --git a/doc/doc-docbook/spec.xfpt b/doc/doc-docbook/spec.xfpt
index 06373ccde8..7816bc26d3 100644
--- a/doc/doc-docbook/spec.xfpt
+++ b/doc/doc-docbook/spec.xfpt
@@ -4274,7 +4274,7 @@ or &%-bs%& is used. For &%-bh%&, the protocol is forced to one of the standard
 SMTP protocol names (see the description of &$received_protocol$& in section
 &<<SECTexpvar>>&). For &%-bs%&, the protocol is always &""local-""& followed by
 one of those same names. For &%-bS%& (batched SMTP) however, the protocol can
-be set by &%-oMr%&.
+be set by &%-oMr%&. Repeated use of this option is not supported.
 
 .vitem &%-oMs%&&~<&'host&~name'&>
 .oindex ""&%-oMs%&""
@@ -4374,6 +4374,7 @@ host name and its colon can be omitted when only the protocol is to be set.
 Note the Exim already has two private options, &%-pd%& and &%-ps%&, that refer
 to embedded Perl. It is therefore impossible to set a protocol value of &`d`&
 or &`s`& using this option (but that does not seem a real limitation).
+Repeated use of this option is not supported.
 
 .vitem &%-q%&
 .oindex ""&%-q%&""
diff --git a/src/src/exim.c b/src/src/exim.c
index 67583e5842..88e119778c 100644
--- a/src/src/exim.c
+++ b/src/src/exim.c
@@ -3106,7 +3106,14 @@ for (i = 1; i < argc; i++)
 
       /* -oMr: Received protocol */
 
-      else if (Ustrcmp(argrest, ""Mr"") == 0) received_protocol = argv[++i];
+      else if (Ustrcmp(argrest, ""Mr"") == 0)
+
+        if (received_protocol)
+          {
+          fprintf(stderr, ""received_protocol is set already\n"");
+          exit(EXIT_FAILURE);
+          }
+        else received_protocol = argv[++i];
 
       /* -oMs: Set sender host name */
 
@@ -3202,7 +3209,15 @@ for (i = 1; i < argc; i++)
 
     if (*argrest != 0)
       {
-      uschar *hn = Ustrchr(argrest, ':');
+      uschar *hn;
+
+      if (received_protocol)
+        {
+        fprintf(stderr, ""received_protocol is set already\n"");
+        exit(EXIT_FAILURE);
+        }
+
+      hn = Ustrchr(argrest, ':');
       if (hn == NULL)
         {
         received_protocol = argrest;"
PYSEC-2017-21,"From 1b76cefb92081efa1e88cd8f330253f857028bd2 Mon Sep 17 00:00:00 2001
From: James Page <james.page@ubuntu.com>
Date: Tue, 31 Jan 2017 11:23:06 +0000
Subject: [PATCH] Ensure LXD veth host device is named correctly

LXD uses a veth pair to plumb the LXD instance into the bridge
providing access to neutron networking.

In later nova-lxd versions, the host_name parameter is set based
on the neutron configured name for the host part of the pair,
ensuring that neutron iptables firewall rules are correctly
applied to instances.

Update the mitaka version of the driver to populate the LXD
network device configuration to ensure that any firewall
rules are correctly applied.

(also dropped version from setup.cfg, as pbr will automatically
generate the version based on git tags, so its really surplus
to requirements).

Change-Id: Ic5b9ad6944a1ac45cd1983d038431252ff738985
Closes-Bug: 1656847
---
 nova_lxd/nova/virt/lxd/config.py | 8 ++++++--
 setup.cfg                        | 1 -
 2 files changed, 6 insertions(+), 3 deletions(-)

diff --git a/nova_lxd/nova/virt/lxd/config.py b/nova_lxd/nova/virt/lxd/config.py
index 0f311c0..5a2b884 100644
--- a/nova_lxd/nova/virt/lxd/config.py
+++ b/nova_lxd/nova/virt/lxd/config.py
@@ -224,11 +224,15 @@ def create_network(self, instance_name, instance, network_info):
 
             for vifaddr in network_info:
                 cfg = self.vif_driver.get_config(instance, vifaddr)
-                network_devices[str(cfg['bridge'])] = \
+                key = str(cfg['bridge'])
+                network_devices[key] = \
                     {'nictype': 'bridged',
                      'hwaddr': str(cfg['mac_address']),
-                     'parent': str(cfg['bridge']),
+                     'parent': key,
                      'type': 'nic'}
+                host_device = self.vif_driver.get_vif_devname(vifaddr)
+                if host_device:
+                    network_devices[key]['host_name'] = host_device
                 return network_devices
         except Exception as ex:
             with excutils.save_and_reraise_exception():
diff --git a/setup.cfg b/setup.cfg
index 45feda3..23ba223 100644
--- a/setup.cfg
+++ b/setup.cfg
@@ -3,7 +3,6 @@ name = nova-lxd
 summary = native lxd driver for openstack
 description-file =
     README.md
-version = 13.2.0
 author = OpenStack
 author-email = openstack-dev@lists.openstack.org
 home-page = http://www.openstack.org/"
CVE-2017-6346,"From d199fab63c11998a602205f7ee7ff7c05c97164b Mon Sep 17 00:00:00 2001
From: Eric Dumazet <edumazet@google.com>
Date: Tue, 14 Feb 2017 09:03:51 -0800
Subject: [PATCH] packet: fix races in fanout_add()

Multiple threads can call fanout_add() at the same time.

We need to grab fanout_mutex earlier to avoid races that could
lead to one thread freeing po->rollover that was set by another thread.

Do the same in fanout_release(), for peace of mind, and to help us
finding lockdep issues earlier.

Fixes: dc99f600698d (""packet: Add fanout support."")
Fixes: 0648ab70afe6 (""packet: rollover prepare: per-socket state"")
Signed-off-by: Eric Dumazet <edumazet@google.com>
Cc: Willem de Bruijn <willemb@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 net/packet/af_packet.c | 55 +++++++++++++++++++++++-------------------
 1 file changed, 30 insertions(+), 25 deletions(-)

diff --git a/net/packet/af_packet.c b/net/packet/af_packet.c
index d56ee46b11fc95..0f03f6a53b4ddb 100644
--- a/net/packet/af_packet.c
+++ b/net/packet/af_packet.c
@@ -1619,6 +1619,7 @@ static void fanout_release_data(struct packet_fanout *f)
 
 static int fanout_add(struct sock *sk, u16 id, u16 type_flags)
 {
+	struct packet_rollover *rollover = NULL;
 	struct packet_sock *po = pkt_sk(sk);
 	struct packet_fanout *f, *match;
 	u8 type = type_flags & 0xff;
@@ -1641,23 +1642,28 @@ static int fanout_add(struct sock *sk, u16 id, u16 type_flags)
 		return -EINVAL;
 	}
 
+	mutex_lock(&fanout_mutex);
+
+	err = -EINVAL;
 	if (!po->running)
-		return -EINVAL;
+		goto out;
 
+	err = -EALREADY;
 	if (po->fanout)
-		return -EALREADY;
+		goto out;
 
 	if (type == PACKET_FANOUT_ROLLOVER ||
 	    (type_flags & PACKET_FANOUT_FLAG_ROLLOVER)) {
-		po->rollover = kzalloc(sizeof(*po->rollover), GFP_KERNEL);
-		if (!po->rollover)
-			return -ENOMEM;
-		atomic_long_set(&po->rollover->num, 0);
-		atomic_long_set(&po->rollover->num_huge, 0);
-		atomic_long_set(&po->rollover->num_failed, 0);
+		err = -ENOMEM;
+		rollover = kzalloc(sizeof(*rollover), GFP_KERNEL);
+		if (!rollover)
+			goto out;
+		atomic_long_set(&rollover->num, 0);
+		atomic_long_set(&rollover->num_huge, 0);
+		atomic_long_set(&rollover->num_failed, 0);
+		po->rollover = rollover;
 	}
 
-	mutex_lock(&fanout_mutex);
 	match = NULL;
 	list_for_each_entry(f, &fanout_list, list) {
 		if (f->id == id &&
@@ -1704,11 +1710,11 @@ static int fanout_add(struct sock *sk, u16 id, u16 type_flags)
 		}
 	}
 out:
-	mutex_unlock(&fanout_mutex);
-	if (err) {
-		kfree(po->rollover);
+	if (err && rollover) {
+		kfree(rollover);
 		po->rollover = NULL;
 	}
+	mutex_unlock(&fanout_mutex);
 	return err;
 }
 
@@ -1717,23 +1723,22 @@ static void fanout_release(struct sock *sk)
 	struct packet_sock *po = pkt_sk(sk);
 	struct packet_fanout *f;
 
-	f = po->fanout;
-	if (!f)
-		return;
-
 	mutex_lock(&fanout_mutex);
-	po->fanout = NULL;
+	f = po->fanout;
+	if (f) {
+		po->fanout = NULL;
+
+		if (atomic_dec_and_test(&f->sk_ref)) {
+			list_del(&f->list);
+			dev_remove_pack(&f->prot_hook);
+			fanout_release_data(f);
+			kfree(f);
+		}
 
-	if (atomic_dec_and_test(&f->sk_ref)) {
-		list_del(&f->list);
-		dev_remove_pack(&f->prot_hook);
-		fanout_release_data(f);
-		kfree(f);
+		if (po->rollover)
+			kfree_rcu(po->rollover, rcu);
 	}
 	mutex_unlock(&fanout_mutex);
-
-	if (po->rollover)
-		kfree_rcu(po->rollover, rcu);
 }
 
 static bool packet_extra_vlan_len_allowed(const struct net_device *dev,"
CVE-2017-14608,"From d13e8f6d1e987b7491182040a188c16a395f1d21 Mon Sep 17 00:00:00 2001
From: Alex Tutubalin <lexa@lexa.ru>
Date: Wed, 13 Sep 2017 09:31:01 +0300
Subject: [PATCH] CVE-2017-1438 credits; fix for Kodak 65000 out of bounds
 access

---
 Changelog.txt             |  6 +++++-
 dcraw/dcraw.c             | 11 +++++++++--
 internal/dcraw_common.cpp | 11 +++++++++--
 3 files changed, 23 insertions(+), 5 deletions(-)

diff --git a/Changelog.txt b/Changelog.txt
index 95bdc952..9b247882 100755
--- a/Changelog.txt
+++ b/Changelog.txt
@@ -1,5 +1,9 @@
+2017-09-13  Alex Tutubalin <lexa@lexa.ru>
+ * Fixed possible out of bound access in Kodak 6500 loader
+
 2017-09-12  Alex Tutubalin <lexa@lexa.ru>
- * Fix for possible heap overrun in Canon makernotes parser
+ * CVE-2017-14348: Fix for possible heap overrun in Canon makernotes parser
+   Credit: Henri Salo from Nixu Corporation
  * LibRaw 0.18.4
 
 2017-09-09  Alex Tutubalin <lexa@lexa.ru>
diff --git a/dcraw/dcraw.c b/dcraw/dcraw.c
index c4fa7896..60d87218 100644
--- a/dcraw/dcraw.c
+++ b/dcraw/dcraw.c
@@ -3528,8 +3528,15 @@ void CLASS kodak_65000_load_raw()
       len = MIN (256, width-col);
       ret = kodak_65000_decode (buf, len);
       for (i=0; i < len; i++)
-	if ((RAW(row,col+i) =	curve[ret ? buf[i] :
-		(pred[i & 1] += buf[i])]) >> 12) derror();
+      {
+	int idx = ret ? buf[i] : (pred[i & 1] += buf[i]);
+	if(idx >=0 && idx <= 0xffff)
+	 {
+	   if ((RAW(row,col+i) = curve[idx]) >> 12) derror();
+         }
+	 else
+	   derror();
+      }
     }
   }
 }
diff --git a/internal/dcraw_common.cpp b/internal/dcraw_common.cpp
index 18bcdbcb..8fb2b073 100644
--- a/internal/dcraw_common.cpp
+++ b/internal/dcraw_common.cpp
@@ -3240,8 +3240,15 @@ void CLASS kodak_65000_load_raw()
       len = MIN (256, width-col);
       ret = kodak_65000_decode (buf, len);
       for (i=0; i < len; i++)
-	if ((RAW(row,col+i) =	curve[ret ? buf[i] :
-		(pred[i & 1] += buf[i])]) >> 12) derror();
+      {
+	int idx = ret ? buf[i] : (pred[i & 1] += buf[i]);
+	if(idx >=0 && idx <= 0xffff)
+	 {
+	   if ((RAW(row,col+i) = curve[idx]) >> 12) derror();
+         }
+	 else
+	   derror();
+      }
     }
   }
 }"
CVE-2017-18202,"From 687cb0884a714ff484d038e9190edc874edcf146 Mon Sep 17 00:00:00 2001
From: Wang Nan <wangnan0@huawei.com>
Date: Wed, 29 Nov 2017 16:09:58 -0800
Subject: [PATCH] mm, oom_reaper: gather each vma to prevent leaking TLB entry

tlb_gather_mmu(&tlb, mm, 0, -1) means gathering the whole virtual memory
space.  In this case, tlb->fullmm is true.  Some archs like arm64
doesn't flush TLB when tlb->fullmm is true:

  commit 5a7862e83000 (""arm64: tlbflush: avoid flushing when fullmm == 1"").

Which causes leaking of tlb entries.

Will clarifies his patch:
 ""Basically, we tag each address space with an ASID (PCID on x86) which
  is resident in the TLB. This means we can elide TLB invalidation when
  pulling down a full mm because we won't ever assign that ASID to
  another mm without doing TLB invalidation elsewhere (which actually
  just nukes the whole TLB).

  I think that means that we could potentially not fault on a kernel
  uaccess, because we could hit in the TLB""

There could be a window between complete_signal() sending IPI to other
cores and all threads sharing this mm are really kicked off from cores.
In this window, the oom reaper may calls tlb_flush_mmu_tlbonly() to
flush TLB then frees pages.  However, due to the above problem, the TLB
entries are not really flushed on arm64.  Other threads are possible to
access these pages through TLB entries.  Moreover, a copy_to_user() can
also write to these pages without generating page fault, causes
use-after-free bugs.

This patch gathers each vma instead of gathering full vm space.  In this
case tlb->fullmm is not true.  The behavior of oom reaper become similar
to munmapping before do_exit, which should be safe for all archs.

Link: http://lkml.kernel.org/r/20171107095453.179940-1-wangnan0@huawei.com
Fixes: aac453635549 (""mm, oom: introduce oom reaper"")
Signed-off-by: Wang Nan <wangnan0@huawei.com>
Acked-by: Michal Hocko <mhocko@suse.com>
Acked-by: David Rientjes <rientjes@google.com>
Cc: Minchan Kim <minchan@kernel.org>
Cc: Will Deacon <will.deacon@arm.com>
Cc: Bob Liu <liubo95@huawei.com>
Cc: Ingo Molnar <mingo@kernel.org>
Cc: Roman Gushchin <guro@fb.com>
Cc: Konstantin Khlebnikov <khlebnikov@yandex-team.ru>
Cc: Andrea Arcangeli <aarcange@redhat.com>
Cc: <stable@vger.kernel.org>
Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---
 mm/oom_kill.c | 7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

diff --git a/mm/oom_kill.c b/mm/oom_kill.c
index c86fbd1b590ecd..c957be32b27a9e 100644
--- a/mm/oom_kill.c
+++ b/mm/oom_kill.c
@@ -550,7 +550,6 @@ static bool __oom_reap_task_mm(struct task_struct *tsk, struct mm_struct *mm)
 	 */
 	set_bit(MMF_UNSTABLE, &mm->flags);
 
-	tlb_gather_mmu(&tlb, mm, 0, -1);
 	for (vma = mm->mmap ; vma; vma = vma->vm_next) {
 		if (!can_madv_dontneed_vma(vma))
 			continue;
@@ -565,11 +564,13 @@ static bool __oom_reap_task_mm(struct task_struct *tsk, struct mm_struct *mm)
 		 * we do not want to block exit_mmap by keeping mm ref
 		 * count elevated without a good reason.
 		 */
-		if (vma_is_anonymous(vma) || !(vma->vm_flags & VM_SHARED))
+		if (vma_is_anonymous(vma) || !(vma->vm_flags & VM_SHARED)) {
+			tlb_gather_mmu(&tlb, mm, vma->vm_start, vma->vm_end);
 			unmap_page_range(&tlb, vma, vma->vm_start, vma->vm_end,
 					 NULL);
+			tlb_finish_mmu(&tlb, vma->vm_start, vma->vm_end);
+		}
 	}
-	tlb_finish_mmu(&tlb, 0, -1);
 	pr_info(""oom_reaper: reaped process %d (%s), now anon-rss:%lukB, file-rss:%lukB, shmem-rss:%lukB\n"",
 			task_pid_nr(tsk), tsk->comm,
 			K(get_mm_counter(mm, MM_ANONPAGES)),"
CVE-2017-8063,"From 3f190e3aec212fc8c61e202c51400afa7384d4bc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20Br=C3=BCns?= <stefan.bruens@rwth-aachen.de>
Date: Sun, 5 Feb 2017 12:57:59 -0200
Subject: [PATCH] [media] cxusb: Use a dma capable buffer also for reading
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Commit 17ce039b4e54 (""[media] cxusb: don't do DMA on stack"")
added a kmalloc'ed bounce buffer for writes, but missed to do the same
for reads. As the read only happens after the write is finished, we can
reuse the same buffer.

As dvb_usb_generic_rw handles a read length of 0 by itself, avoid calling
it using the dvb_usb_generic_read wrapper function.

Signed-off-by: Stefan BrÃ¼ns <stefan.bruens@rwth-aachen.de>
Signed-off-by: Mauro Carvalho Chehab <mchehab@s-opensource.com>
---
 drivers/media/usb/dvb-usb/cxusb.c | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/media/usb/dvb-usb/cxusb.c b/drivers/media/usb/dvb-usb/cxusb.c
index 5d7b4eaa6a3c93..51620e02292f58 100644
--- a/drivers/media/usb/dvb-usb/cxusb.c
+++ b/drivers/media/usb/dvb-usb/cxusb.c
@@ -59,23 +59,24 @@ static int cxusb_ctrl_msg(struct dvb_usb_device *d,
 			  u8 cmd, u8 *wbuf, int wlen, u8 *rbuf, int rlen)
 {
 	struct cxusb_state *st = d->priv;
-	int ret, wo;
+	int ret;
 
 	if (1 + wlen > MAX_XFER_SIZE) {
 		warn(""i2c wr: len=%d is too big!\n"", wlen);
 		return -EOPNOTSUPP;
 	}
 
-	wo = (rbuf == NULL || rlen == 0); /* write-only */
+	if (rlen > MAX_XFER_SIZE) {
+		warn(""i2c rd: len=%d is too big!\n"", rlen);
+		return -EOPNOTSUPP;
+	}
 
 	mutex_lock(&d->data_mutex);
 	st->data[0] = cmd;
 	memcpy(&st->data[1], wbuf, wlen);
-	if (wo)
-		ret = dvb_usb_generic_write(d, st->data, 1 + wlen);
-	else
-		ret = dvb_usb_generic_rw(d, st->data, 1 + wlen,
-					 rbuf, rlen, 0);
+	ret = dvb_usb_generic_rw(d, st->data, 1 + wlen, st->data, rlen, 0);
+	if (!ret && rbuf && rlen)
+		memcpy(rbuf, st->data, rlen);
 
 	mutex_unlock(&d->data_mutex);
 	return ret;"
OSV-2017-53,"From a6e470331854df14d754d7732eba902b8acd17e5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim=20R=C3=BChsen?= <tim.ruehsen@gmx.de>
Date: Thu, 13 Jul 2017 15:40:58 +0200
Subject: [PATCH] Fix oss-fuzz issue #2600 (buffer overflow in libicu code)

Added a reproducer corpus and fixed the broken libicu code.
The buffer overflow could be triggered by psl_load(), psl_load_fp(),
psl_is_public_suffix(), psl_is_public_suffix2(), psl_unregistrable_domain(),
and psl_registrable_domain().
---
 ...erfuzz-testcase-minimized-5165632150568960 |  1 +
 src/psl.c                                     | 67 ++++++++++++++-----
 2 files changed, 50 insertions(+), 18 deletions(-)
 create mode 100644 fuzz/libpsl_icu_load_fuzzer.repro/clusterfuzz-testcase-minimized-5165632150568960

diff --git a/fuzz/libpsl_icu_load_fuzzer.repro/clusterfuzz-testcase-minimized-5165632150568960 b/fuzz/libpsl_icu_load_fuzzer.repro/clusterfuzz-testcase-minimized-5165632150568960
new file mode 100644
index 00000000..5058c0a3
--- /dev/null
+++ b/fuzz/libpsl_icu_load_fuzzer.repro/clusterfuzz-testcase-minimized-5165632150568960
@@ -0,0 +1 @@
+Ã¼.
\ No newline at end of file
diff --git a/src/psl.c b/src/psl.c
index c35f9200..351ac009 100644
--- a/src/psl.c
+++ b/src/psl.c
@@ -678,27 +678,58 @@ static int _psl_idna_toASCII(_psl_idna_t *idna _UNUSED, const char *utf8, char *
 #if defined(WITH_LIBICU)
 	/* IDNA2008 UTS#46 punycode conversion */
 	if (idna) {
-		char lookupname[128] = """";
+		char lookupname_buf[128] = """", *lookupname = lookupname_buf;
 		UErrorCode status = 0;
 		UIDNAInfo info = UIDNA_INFO_INITIALIZER;
-		UChar utf16_dst[128], utf16_src[128];
-		int32_t utf16_src_length;
+		UChar utf16_dst[128], utf16_src_buf[128];
+		UChar *utf16_src = utf16_src_buf;
+		int32_t utf16_src_length, bytes_written;
+		int32_t utf16_dst_length;
 
-		u_strFromUTF8(utf16_src, countof(utf16_src), &utf16_src_length, utf8, -1, &status);
-		if (U_SUCCESS(status)) {
-			int32_t dst_length = uidna_nameToASCII((UIDNA *)idna, utf16_src, utf16_src_length, utf16_dst, countof(utf16_dst), &info, &status);
-			if (U_SUCCESS(status)) {
-				u_strToUTF8(lookupname, sizeof(lookupname), NULL, utf16_dst, dst_length, &status);
-				if (U_SUCCESS(status)) {
-					if (ascii)
-						if ((*ascii = strdup(lookupname)))
-							ret = 0;
-				} /* else
-					fprintf(stderr, ""Failed to convert UTF-16 to UTF-8 (status %d)\n"", status); */
-			} /* else
-				fprintf(stderr, ""Failed to convert to ASCII (status %d)\n"", status); */
-		} /* else
-			fprintf(stderr, ""Failed to convert UTF-8 to UTF-16 (status %d)\n"", status); */
+		u_strFromUTF8(utf16_src, countof(utf16_src_buf), &utf16_src_length, utf8, -1, &status);
+		if (!U_SUCCESS(status)) goto cleanup; /* UTF-8 to UTF-16 conversion failed */
+
+		if (utf16_src_length >= countof(utf16_src_buf)) {
+			utf16_src = malloc((utf16_src_length + 1) * sizeof(UChar));
+			if (!utf16_src) goto cleanup;
+
+			u_strFromUTF8(utf16_src, utf16_src_length, NULL, utf8, -1, &status);
+			if (!U_SUCCESS(status)) goto cleanup; /* UTF-8 to UTF-16 conversion failed */
+
+			utf16_src[utf16_src_length] = 0; /* u_strFromUTF8() doesn't 0-terminate if dest is filled up */
+		}
+
+		utf16_dst_length = uidna_nameToASCII((UIDNA *)idna, utf16_src, utf16_src_length, utf16_dst, countof(utf16_dst), &info, &status);
+		if (!U_SUCCESS(status)) goto cleanup; /* to ASCII conversion failed */
+
+		u_strToUTF8(lookupname, sizeof(lookupname_buf), &bytes_written, utf16_dst, utf16_dst_length, &status);
+		if (!U_SUCCESS(status)) goto cleanup; /* UTF-16 to UTF-8 conversion failed */
+
+		if (bytes_written >= sizeof(lookupname_buf)) {
+			lookupname = malloc(bytes_written + 1);
+			if (!lookupname) goto cleanup;
+
+			u_strToUTF8(lookupname, bytes_written, NULL, utf16_dst, utf16_dst_length, &status);
+			if (!U_SUCCESS(status)) goto cleanup; /* UTF-16 to UTF-8 conversion failed */
+
+			lookupname[bytes_written] = 0; /* u_strToUTF8() doesn't 0-terminate if dest is filled up */
+		} else {
+			if (!(lookupname = strdup(lookupname)))
+				goto cleanup;
+		}
+
+		if (ascii) {
+			*ascii = lookupname;
+			lookupname = NULL;
+		}
+
+		ret = 0;
+
+cleanup:
+		if (lookupname != lookupname_buf)
+			free(lookupname);
+		if (utf16_src != utf16_src_buf)
+			free(utf16_src);
 	}
 #elif defined(WITH_LIBIDN2)
 #if IDN2_VERSION_NUMBER >= 0x00140000"
CVE-2017-14174,"From f68a98a9d385838a1c73ec960a14102949940a64 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Thu, 31 Aug 2017 10:27:46 -0400
Subject: [PATCH] https://github.com/ImageMagick/ImageMagick/issues/714

---
 coders/psd.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/coders/psd.c b/coders/psd.c
index 88227678ef0..6c026d2b144 100644
--- a/coders/psd.c
+++ b/coders/psd.c
@@ -1688,6 +1688,12 @@ static MagickBooleanType ReadPSDLayersInternal(Image *image,
                 {
                   size_t blend_source=ReadBlobLong(image);
                   size_t blend_dest=ReadBlobLong(image);
+                  if (EOFBlob(image) != MagickFalse)
+                    {
+                      layer_info=DestroyLayerInfo(layer_info,number_layers);
+                      ThrowBinaryException(CorruptImageError,
+                        ""InsufficientImageDataInFile"",image->filename);
+                    }
                   if (image->debug != MagickFalse)
                     (void) LogMagickEvent(CoderEvent,GetMagickModule(),
                       ""        source(%x), dest(%x)"",(unsigned int)"
CVE-2017-18249,"From 30a61ddf8117c26ac5b295e1233eaa9629a94ca3 Mon Sep 17 00:00:00 2001
From: Chao Yu <yuchao0@huawei.com>
Date: Wed, 22 Mar 2017 14:45:05 +0800
Subject: [PATCH] f2fs: fix race condition in between free nid
 allocator/initializer

In below concurrent case, allocated nid can be loaded into free nid cache
and be allocated again.

Thread A				Thread B
- f2fs_create
 - f2fs_new_inode
  - alloc_nid
   - __insert_nid_to_list(ALLOC_NID_LIST)
					- f2fs_balance_fs_bg
					 - build_free_nids
					  - __build_free_nids
					   - scan_nat_page
					    - add_free_nid
					     - __lookup_nat_cache
 - f2fs_add_link
  - init_inode_metadata
   - new_inode_page
    - new_node_page
     - set_node_addr
 - alloc_nid_done
  - __remove_nid_from_list(ALLOC_NID_LIST)
					     - __insert_nid_to_list(FREE_NID_LIST)

This patch makes nat cache lookup and free nid list operation being atomical
to avoid this race condition.

Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
Signed-off-by: Chao Yu <yuchao0@huawei.com>
Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
---
 fs/f2fs/node.c | 63 +++++++++++++++++++++++++++++++++++---------------
 1 file changed, 45 insertions(+), 18 deletions(-)

diff --git a/fs/f2fs/node.c b/fs/f2fs/node.c
index b52c9c0a47ab3e..29dc996b573c7e 100644
--- a/fs/f2fs/node.c
+++ b/fs/f2fs/node.c
@@ -1761,40 +1761,67 @@ static void __remove_nid_from_list(struct f2fs_sb_info *sbi,
 static bool add_free_nid(struct f2fs_sb_info *sbi, nid_t nid, bool build)
 {
 	struct f2fs_nm_info *nm_i = NM_I(sbi);
-	struct free_nid *i;
+	struct free_nid *i, *e;
 	struct nat_entry *ne;
-	int err;
+	int err = -EINVAL;
+	bool ret = false;
 
 	/* 0 nid should not be used */
 	if (unlikely(nid == 0))
 		return false;
 
-	if (build) {
-		/* do not add allocated nids */
-		ne = __lookup_nat_cache(nm_i, nid);
-		if (ne && (!get_nat_flag(ne, IS_CHECKPOINTED) ||
-				nat_get_blkaddr(ne) != NULL_ADDR))
-			return false;
-	}
-
 	i = f2fs_kmem_cache_alloc(free_nid_slab, GFP_NOFS);
 	i->nid = nid;
 	i->state = NID_NEW;
 
-	if (radix_tree_preload(GFP_NOFS)) {
-		kmem_cache_free(free_nid_slab, i);
-		return true;
-	}
+	if (radix_tree_preload(GFP_NOFS))
+		goto err;
 
 	spin_lock(&nm_i->nid_list_lock);
+
+	if (build) {
+		/*
+		 *   Thread A             Thread B
+		 *  - f2fs_create
+		 *   - f2fs_new_inode
+		 *    - alloc_nid
+		 *     - __insert_nid_to_list(ALLOC_NID_LIST)
+		 *                     - f2fs_balance_fs_bg
+		 *                      - build_free_nids
+		 *                       - __build_free_nids
+		 *                        - scan_nat_page
+		 *                         - add_free_nid
+		 *                          - __lookup_nat_cache
+		 *  - f2fs_add_link
+		 *   - init_inode_metadata
+		 *    - new_inode_page
+		 *     - new_node_page
+		 *      - set_node_addr
+		 *  - alloc_nid_done
+		 *   - __remove_nid_from_list(ALLOC_NID_LIST)
+		 *                         - __insert_nid_to_list(FREE_NID_LIST)
+		 */
+		ne = __lookup_nat_cache(nm_i, nid);
+		if (ne && (!get_nat_flag(ne, IS_CHECKPOINTED) ||
+				nat_get_blkaddr(ne) != NULL_ADDR))
+			goto err_out;
+
+		e = __lookup_free_nid_list(nm_i, nid);
+		if (e) {
+			if (e->state == NID_NEW)
+				ret = true;
+			goto err_out;
+		}
+	}
+	ret = true;
 	err = __insert_nid_to_list(sbi, i, FREE_NID_LIST, true);
+err_out:
 	spin_unlock(&nm_i->nid_list_lock);
 	radix_tree_preload_end();
-	if (err) {
+err:
+	if (err)
 		kmem_cache_free(free_nid_slab, i);
-		return true;
-	}
-	return true;
+	return ret;
 }
 
 static void remove_free_nid(struct f2fs_sb_info *sbi, nid_t nid)"
CVE-2017-7472,"From c9f838d104fed6f2f61d68164712e3204bf5271b Mon Sep 17 00:00:00 2001
From: Eric Biggers <ebiggers@google.com>
Date: Tue, 18 Apr 2017 15:31:09 +0100
Subject: [PATCH] KEYS: fix keyctl_set_reqkey_keyring() to not leak thread
 keyrings

This fixes CVE-2017-7472.

Running the following program as an unprivileged user exhausts kernel
memory by leaking thread keyrings:

	#include <keyutils.h>

	int main()
	{
		for (;;)
			keyctl_set_reqkey_keyring(KEY_REQKEY_DEFL_THREAD_KEYRING);
	}

Fix it by only creating a new thread keyring if there wasn't one before.
To make things more consistent, make install_thread_keyring_to_cred()
and install_process_keyring_to_cred() both return 0 if the corresponding
keyring is already present.

Fixes: d84f4f992cbd (""CRED: Inaugurate COW credentials"")
Cc: stable@vger.kernel.org # 2.6.29+
Signed-off-by: Eric Biggers <ebiggers@google.com>
Signed-off-by: David Howells <dhowells@redhat.com>
---
 security/keys/keyctl.c       | 11 ++++-----
 security/keys/process_keys.c | 44 ++++++++++++++++++++++--------------
 2 files changed, 31 insertions(+), 24 deletions(-)

diff --git a/security/keys/keyctl.c b/security/keys/keyctl.c
index ab082a2e8fdda1..4ad3212adebe8b 100644
--- a/security/keys/keyctl.c
+++ b/security/keys/keyctl.c
@@ -1258,8 +1258,8 @@ long keyctl_reject_key(key_serial_t id, unsigned timeout, unsigned error,
  * Read or set the default keyring in which request_key() will cache keys and
  * return the old setting.
  *
- * If a process keyring is specified then this will be created if it doesn't
- * yet exist.  The old setting will be returned if successful.
+ * If a thread or process keyring is specified then it will be created if it
+ * doesn't yet exist.  The old setting will be returned if successful.
  */
 long keyctl_set_reqkey_keyring(int reqkey_defl)
 {
@@ -1284,11 +1284,8 @@ long keyctl_set_reqkey_keyring(int reqkey_defl)
 
 	case KEY_REQKEY_DEFL_PROCESS_KEYRING:
 		ret = install_process_keyring_to_cred(new);
-		if (ret < 0) {
-			if (ret != -EEXIST)
-				goto error;
-			ret = 0;
-		}
+		if (ret < 0)
+			goto error;
 		goto set;
 
 	case KEY_REQKEY_DEFL_DEFAULT:
diff --git a/security/keys/process_keys.c b/security/keys/process_keys.c
index b6fdd22205b169..9139b18fc863eb 100644
--- a/security/keys/process_keys.c
+++ b/security/keys/process_keys.c
@@ -128,13 +128,18 @@ int install_user_keyrings(void)
 }
 
 /*
- * Install a fresh thread keyring directly to new credentials.  This keyring is
- * allowed to overrun the quota.
+ * Install a thread keyring to the given credentials struct if it didn't have
+ * one already.  This is allowed to overrun the quota.
+ *
+ * Return: 0 if a thread keyring is now present; -errno on failure.
  */
 int install_thread_keyring_to_cred(struct cred *new)
 {
 	struct key *keyring;
 
+	if (new->thread_keyring)
+		return 0;
+
 	keyring = keyring_alloc(""_tid"", new->uid, new->gid, new,
 				KEY_POS_ALL | KEY_USR_VIEW,
 				KEY_ALLOC_QUOTA_OVERRUN,
@@ -147,7 +152,9 @@ int install_thread_keyring_to_cred(struct cred *new)
 }
 
 /*
- * Install a fresh thread keyring, discarding the old one.
+ * Install a thread keyring to the current task if it didn't have one already.
+ *
+ * Return: 0 if a thread keyring is now present; -errno on failure.
  */
 static int install_thread_keyring(void)
 {
@@ -158,8 +165,6 @@ static int install_thread_keyring(void)
 	if (!new)
 		return -ENOMEM;
 
-	BUG_ON(new->thread_keyring);
-
 	ret = install_thread_keyring_to_cred(new);
 	if (ret < 0) {
 		abort_creds(new);
@@ -170,17 +175,17 @@ static int install_thread_keyring(void)
 }
 
 /*
- * Install a process keyring directly to a credentials struct.
+ * Install a process keyring to the given credentials struct if it didn't have
+ * one already.  This is allowed to overrun the quota.
  *
- * Returns -EEXIST if there was already a process keyring, 0 if one installed,
- * and other value on any other error
+ * Return: 0 if a process keyring is now present; -errno on failure.
  */
 int install_process_keyring_to_cred(struct cred *new)
 {
 	struct key *keyring;
 
 	if (new->process_keyring)
-		return -EEXIST;
+		return 0;
 
 	keyring = keyring_alloc(""_pid"", new->uid, new->gid, new,
 				KEY_POS_ALL | KEY_USR_VIEW,
@@ -194,11 +199,9 @@ int install_process_keyring_to_cred(struct cred *new)
 }
 
 /*
- * Make sure a process keyring is installed for the current process.  The
- * existing process keyring is not replaced.
+ * Install a process keyring to the current task if it didn't have one already.
  *
- * Returns 0 if there is a process keyring by the end of this function, some
- * error otherwise.
+ * Return: 0 if a process keyring is now present; -errno on failure.
  */
 static int install_process_keyring(void)
 {
@@ -212,14 +215,18 @@ static int install_process_keyring(void)
 	ret = install_process_keyring_to_cred(new);
 	if (ret < 0) {
 		abort_creds(new);
-		return ret != -EEXIST ? ret : 0;
+		return ret;
 	}
 
 	return commit_creds(new);
 }
 
 /*
- * Install a session keyring directly to a credentials struct.
+ * Install the given keyring as the session keyring of the given credentials
+ * struct, replacing the existing one if any.  If the given keyring is NULL,
+ * then install a new anonymous session keyring.
+ *
+ * Return: 0 on success; -errno on failure.
  */
 int install_session_keyring_to_cred(struct cred *cred, struct key *keyring)
 {
@@ -254,8 +261,11 @@ int install_session_keyring_to_cred(struct cred *cred, struct key *keyring)
 }
 
 /*
- * Install a session keyring, discarding the old one.  If a keyring is not
- * supplied, an empty one is invented.
+ * Install the given keyring as the session keyring of the current task,
+ * replacing the existing one if any.  If the given keyring is NULL, then
+ * install a new anonymous session keyring.
+ *
+ * Return: 0 on success; -errno on failure.
  */
 static int install_session_keyring(struct key *keyring)
 {"
CVE-2017-10663,"From 15d3042a937c13f5d9244241c7a9c8416ff6e82a Mon Sep 17 00:00:00 2001
From: Jin Qian <jinqian@google.com>
Date: Mon, 15 May 2017 10:45:08 -0700
Subject: [PATCH] f2fs: sanity check checkpoint segno and blkoff

Make sure segno and blkoff read from raw image are valid.

Cc: stable@vger.kernel.org
Signed-off-by: Jin Qian <jinqian@google.com>
[Jaegeuk Kim: adjust minor coding style]
Signed-off-by: Jaegeuk Kim <jaegeuk@kernel.org>
---
 fs/f2fs/super.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/fs/f2fs/super.c b/fs/f2fs/super.c
index 83355ec4a92cde..397b1e816b3696 100644
--- a/fs/f2fs/super.c
+++ b/fs/f2fs/super.c
@@ -1521,6 +1521,8 @@ int sanity_check_ckpt(struct f2fs_sb_info *sbi)
 	struct f2fs_super_block *raw_super = F2FS_RAW_SUPER(sbi);
 	struct f2fs_checkpoint *ckpt = F2FS_CKPT(sbi);
 	unsigned int ovp_segments, reserved_segments;
+	unsigned int main_segs, blocks_per_seg;
+	int i;
 
 	total = le32_to_cpu(raw_super->segment_count);
 	fsmeta = le32_to_cpu(raw_super->segment_count_ckpt);
@@ -1542,6 +1544,20 @@ int sanity_check_ckpt(struct f2fs_sb_info *sbi)
 		return 1;
 	}
 
+	main_segs = le32_to_cpu(raw_super->segment_count_main);
+	blocks_per_seg = sbi->blocks_per_seg;
+
+	for (i = 0; i < NR_CURSEG_NODE_TYPE; i++) {
+		if (le32_to_cpu(ckpt->cur_node_segno[i]) >= main_segs ||
+			le16_to_cpu(ckpt->cur_node_blkoff[i]) >= blocks_per_seg)
+			return 1;
+	}
+	for (i = 0; i < NR_CURSEG_DATA_TYPE; i++) {
+		if (le32_to_cpu(ckpt->cur_data_segno[i]) >= main_segs ||
+			le16_to_cpu(ckpt->cur_data_blkoff[i]) >= blocks_per_seg)
+			return 1;
+	}
+
 	if (unlikely(f2fs_cp_error(sbi))) {
 		f2fs_msg(sbi->sb, KERN_ERR, ""A bug case: need to run fsck"");
 		return 1;"
CVE-2017-7500,"From c815822c8bdb138066ff58c624ae83e3a12ebfa9 Mon Sep 17 00:00:00 2001
From: Panu Matilainen <pmatilai@redhat.com>
Date: Wed, 27 Sep 2017 13:45:17 +0300
Subject: [PATCH] Make verification match the new restricted directory symlink
 behavior

Only follow directory symlinks owned by target directory owner or root
during verification to match the behavior of fsmVerify() in the new
CVE-2017-7500 world order.

The code is klunkier than it should and the logic should use common code
with fsmVerify() instead of duplicating it here, but that needs more
changes than is comfortable to backport so starting with this.

Also worth noting that the previous ""follow the link"" logic from
commit 3ccd774255b8215733e0bdfdf5a683da9dd10923 was not quite right,
it'd fail with RPMVERIFY_LSTATFAIL on a broken symlink when it should've
ran verification on the symlink itself. This behavior is fixed here too.

Finally, once again fakechroot gets in the way and forces the related
verify testcase to be changed to be able to create a valid link. Reuse
the replacement testcase for the purpose and add another case for
verifying an invalid link.
---
 lib/verify.c       | 15 ++++++++++---
 tests/rpmverify.at | 56 ++++++++++++++++++++++++++++++++++++++--------
 2 files changed, 59 insertions(+), 12 deletions(-)

diff --git a/lib/verify.c b/lib/verify.c
index 0eac812ae3..62eec08617 100644
--- a/lib/verify.c
+++ b/lib/verify.c
@@ -94,9 +94,18 @@ rpmVerifyAttrs rpmfilesVerify(rpmfiles fi, int ix, rpmVerifyAttrs omitMask)
     }
 
     /* If we expected a directory but got a symlink to one, follow the link */
-    if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode) && stat(fn, &sb) != 0) {
-	vfy |= RPMVERIFY_LSTATFAIL;
-	goto exit;
+    if (S_ISDIR(fmode) && S_ISLNK(sb.st_mode)) {
+	struct stat dsb;
+	/* ...if it actually points to a directory  */
+	if (stat(fn, &dsb) == 0 && S_ISDIR(dsb.st_mode)) {
+	    uid_t fuid;
+	    /* ...and is by a legit user, to match fsmVerify() behavior */
+	    if (sb.st_uid == 0 ||
+			(rpmugUid(rpmfilesFUser(fi, ix), &fuid) == 0 &&
+			 sb.st_uid == fuid)) {
+		sb = dsb; /* struct assignment */
+	    }
+	}
     }
 
     /* Links have no mode, other types have no linkto */
diff --git a/tests/rpmverify.at b/tests/rpmverify.at
index 8e29382592..c5530de69c 100644
--- a/tests/rpmverify.at
+++ b/tests/rpmverify.at
@@ -69,18 +69,56 @@ AT_KEYWORDS([verify])
 AT_CHECK([
 RPMDB_CLEAR
 RPMDB_INIT
+tf=""${RPMTEST}""/opt/foo
+rm -rf ""${RPMTEST}""/opt/*
+rm -rf ""${TOPDIR}""
 
-runroot rpm -U --nodeps --noscripts --ignorearch --ignoreos \
-	/data/RPMS/hello-1.0-1.i386.rpm
-mv ""${RPMTEST}""/usr/share/doc/hello-1.0 ""${RPMTEST}""/usr/share/doc/hello-1.0.orig
-ln -s hello-1.0.orig ""${RPMTEST}""/usr/share/doc/hello-1.0
-runroot rpm -Vva --nodeps --nouser --nogroup
-rm -rf ""${RPMTEST}""/usr/share/doc/
+runroot rpmbuild --quiet -bb \
+        --define ""ver 1.0"" \
+        --define ""filetype datadir"" \
+        --define ""filedata README1"" \
+        --define ""user $(id -u -n)"" \
+          /data/SPECS/replacetest.spec
+
+runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm
+mv ""${RPMTEST}""/opt/foo ""${RPMTEST}""/opt/was
+ln -s was ""${RPMTEST}""/opt/foo
+runroot rpm -Vv replacetest
 ],
 [0],
-[.........    /usr/local/bin/hello
-.........    /usr/share/doc/hello-1.0
-.........  d /usr/share/doc/hello-1.0/FAQ
+[.........    /opt/foo
+.........    /opt/foo/README1
+.........    /opt/goo
+.........    /opt/zoo
+],
+[])
+AT_CLEANUP
+
+AT_SETUP([directory replaced with an invalid directory symlink])
+AT_KEYWORDS([verify])
+AT_CHECK([
+RPMDB_CLEAR
+RPMDB_INIT
+tf=""${RPMTEST}""/opt/foo
+rm -rf ""${RPMTEST}""/opt/*
+rm -rf ""${TOPDIR}""
+
+runroot rpmbuild --quiet -bb \
+        --define ""ver 1.0"" \
+        --define ""filetype datadir"" \
+        --define ""filedata README1"" \
+          /data/SPECS/replacetest.spec
+
+runroot rpm -U /build/RPMS/noarch/replacetest-1.0-1.noarch.rpm
+mv ""${RPMTEST}""/opt/foo ""${RPMTEST}""/opt/was
+ln -s was ""${RPMTEST}""/opt/foo
+runroot rpm -Vv --nouser --nogroup replacetest
+],
+[1],
+[....L....    /opt/foo
+.........    /opt/foo/README1
+.........    /opt/goo
+.........    /opt/zoo
 ],
 [])
 AT_CLEANUP"
CVE-2017-16931,"From e26630548e7d138d2c560844c43820b6767251e3 Mon Sep 17 00:00:00 2001
From: Nick Wellnhofer <wellnhofer@aevum.de>
Date: Mon, 5 Jun 2017 15:37:17 +0200
Subject: [PATCH] Fix handling of parameter-entity references
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

There were two bugs where parameter-entity references could lead to an
unexpected change of the input buffer in xmlParseNameComplex and
xmlDictLookup being called with an invalid pointer.

Percent sign in DTD Names
=========================

The NEXTL macro used to call xmlParserHandlePEReference. When parsing
""complex"" names inside the DTD, this could result in entity expansion
which created a new input buffer. The fix is to simply remove the call
to xmlParserHandlePEReference from the NEXTL macro. This is safe because
no users of the macro require expansion of parameter entities.

- xmlParseNameComplex
- xmlParseNCNameComplex
- xmlParseNmtoken

The percent sign is not allowed in names, which are grammatical tokens.

- xmlParseEntityValue

Parameter-entity references in entity values are expanded but this
happens in a separate step in this function.

- xmlParseSystemLiteral

Parameter-entity references are ignored in the system literal.

- xmlParseAttValueComplex
- xmlParseCharDataComplex
- xmlParseCommentComplex
- xmlParsePI
- xmlParseCDSect

Parameter-entity references are ignored outside the DTD.

- xmlLoadEntityContent

This function is only called from xmlStringLenDecodeEntities and
entities are replaced in a separate step immediately after the function
call.

This bug could also be triggered with an internal subset and double
entity expansion.

This fixes bug 766956 initially reported by Wei Lei and independently by
Chromium's ClusterFuzz, Hanno BÃ¶ck, and Marco Grassi. Thanks to everyone
involved.

xmlParseNameComplex with XML_PARSE_OLD10
========================================

When parsing Names inside an expanded parameter entity with the
XML_PARSE_OLD10 option, xmlParseNameComplex would call xmlGROW via the
GROW macro if the input buffer was exhausted. At the end of the
parameter entity's replacement text, this function would then call
xmlPopInput which invalidated the input buffer.

There should be no need to invoke GROW in this situation because the
buffer is grown periodically every XML_PARSER_CHUNK_SIZE characters and,
at least for UTF-8, in xmlCurrentChar. This also matches the code path
executed when XML_PARSE_OLD10 is not set.

This fixes bugs 781205 (CVE-2017-9049) and 781361 (CVE-2017-9050).
Thanks to Marcel BÃ¶hme and Thuan Pham for the report.

Additional hardening
====================

A separate check was added in xmlParseNameComplex to validate the
buffer size.
---
 Makefile.am                     | 18 ++++++++++++++++++
 parser.c                        | 18 ++++++++++--------
 result/errors10/781205.xml      |  0
 result/errors10/781205.xml.err  | 21 +++++++++++++++++++++
 result/errors10/781361.xml      |  0
 result/errors10/781361.xml.err  | 13 +++++++++++++
 result/valid/766956.xml         |  0
 result/valid/766956.xml.err     |  9 +++++++++
 result/valid/766956.xml.err.rdr | 10 ++++++++++
 runtest.c                       |  3 +++
 test/errors10/781205.xml        |  3 +++
 test/errors10/781361.xml        |  3 +++
 test/valid/766956.xml           |  2 ++
 test/valid/dtds/766956.dtd      |  2 ++
 14 files changed, 94 insertions(+), 8 deletions(-)
 create mode 100644 result/errors10/781205.xml
 create mode 100644 result/errors10/781205.xml.err
 create mode 100644 result/errors10/781361.xml
 create mode 100644 result/errors10/781361.xml.err
 create mode 100644 result/valid/766956.xml
 create mode 100644 result/valid/766956.xml.err
 create mode 100644 result/valid/766956.xml.err.rdr
 create mode 100644 test/errors10/781205.xml
 create mode 100644 test/errors10/781361.xml
 create mode 100644 test/valid/766956.xml
 create mode 100644 test/valid/dtds/766956.dtd

diff --git a/Makefile.am b/Makefile.am
index 6fc8ffa92..10e716a54 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -427,6 +427,24 @@ Errtests : xmllint$(EXEEXT)
 	      if [ -n ""$$log"" ] ; then echo $$name result ; echo ""$$log"" ; fi ; \
 	      rm result.$$name error.$$name ; \
 	  fi ; fi ; done)
+	@echo ""## Error cases regression tests (old 1.0)""
+	-@(for i in $(srcdir)/test/errors10/*.xml ; do \
+	  name=`basename $$i`; \
+	  if [ ! -d $$i ] ; then \
+	  if [ ! -f $(srcdir)/result/errors10/$$name ] ; then \
+	      echo New test file $$name ; \
+	      $(CHECKER) $(top_builddir)/xmllint --oldxml10 $$i \
+	         2> $(srcdir)/result/errors10/$$name.err \
+		 > $(srcdir)/result/errors10/$$name ; \
+	      grep ""MORY ALLO"" .memdump  | grep -v ""MEMORY ALLOCATED : 0""; \
+	  else \
+	      log=`$(CHECKER) $(top_builddir)/xmllint --oldxml10 $$i 2> error.$$name > result.$$name ; \
+	      grep ""MORY ALLO"" .memdump  | grep -v ""MEMORY ALLOCATED : 0""; \
+	      diff $(srcdir)/result/errors10/$$name result.$$name ; \
+	      diff $(srcdir)/result/errors10/$$name.err error.$$name` ; \
+	      if [ -n ""$$log"" ] ; then echo $$name result ; echo ""$$log"" ; fi ; \
+	      rm result.$$name error.$$name ; \
+	  fi ; fi ; done)
 	@echo ""## Error cases stream regression tests""
 	-@(for i in $(srcdir)/test/errors/*.xml ; do \
 	  name=`basename $$i`; \
diff --git a/parser.c b/parser.c
index df2efa55f..a175ac4e2 100644
--- a/parser.c
+++ b/parser.c
@@ -2121,7 +2121,6 @@ static void xmlGROW (xmlParserCtxtPtr ctxt) {
 	ctxt->input->line++; ctxt->input->col = 1;			\
     } else ctxt->input->col++;						\
     ctxt->input->cur += l;				\
-    if (*ctxt->input->cur == '%') xmlParserHandlePEReference(ctxt);	\
   } while (0)
 
 #define CUR_CHAR(l) xmlCurrentChar(ctxt, &l)
@@ -3412,13 +3411,6 @@ xmlParseNameComplex(xmlParserCtxtPtr ctxt) {
 	    len += l;
 	    NEXTL(l);
 	    c = CUR_CHAR(l);
-	    if (c == 0) {
-		count = 0;
-		GROW;
-                if (ctxt->instate == XML_PARSER_EOF)
-                    return(NULL);
-		c = CUR_CHAR(l);
-	    }
 	}
     }
     if ((len > XML_MAX_NAME_LENGTH) &&
@@ -3426,6 +3418,16 @@ xmlParseNameComplex(xmlParserCtxtPtr ctxt) {
         xmlFatalErr(ctxt, XML_ERR_NAME_TOO_LONG, ""Name"");
         return(NULL);
     }
+    if (ctxt->input->cur - ctxt->input->base < len) {
+        /*
+         * There were a couple of bugs where PERefs lead to to a change
+         * of the buffer. Check the buffer size to avoid passing an invalid
+         * pointer to xmlDictLookup.
+         */
+        xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR,
+                    ""unexpected change of input buffer"");
+        return (NULL);
+    }
     if ((*ctxt->input->cur == '\n') && (ctxt->input->cur[-1] == '\r'))
         return(xmlDictLookup(ctxt->dict, ctxt->input->cur - (len + 1), len));
     return(xmlDictLookup(ctxt->dict, ctxt->input->cur - len, len));
diff --git a/result/errors10/781205.xml b/result/errors10/781205.xml
new file mode 100644
index 000000000..e69de29bb
diff --git a/result/errors10/781205.xml.err b/result/errors10/781205.xml.err
new file mode 100644
index 000000000..da15c3f75
--- /dev/null
+++ b/result/errors10/781205.xml.err
@@ -0,0 +1,21 @@
+Entity: line 1: parser error : internal error: xmlParseInternalSubset: error detected in Markup declaration
+
+ %a; 
+    ^
+Entity: line 1: 
+<:0000
+^
+Entity: line 1: parser error : DOCTYPE improperly terminated
+ %a; 
+    ^
+Entity: line 1: 
+<:0000
+^
+namespace error : Failed to parse QName ':0000'
+ %a; 
+    ^
+<:0000
+      ^
+./test/errors10/781205.xml:4: parser error : Couldn't find end of Start Tag :0000 line 1
+
+^
diff --git a/result/errors10/781361.xml b/result/errors10/781361.xml
new file mode 100644
index 000000000..e69de29bb
diff --git a/result/errors10/781361.xml.err b/result/errors10/781361.xml.err
new file mode 100644
index 000000000..655f41a29
--- /dev/null
+++ b/result/errors10/781361.xml.err
@@ -0,0 +1,13 @@
+./test/errors10/781361.xml:4: parser error : xmlParseElementDecl: 'EMPTY', 'ANY' or '(' expected
+
+^
+./test/errors10/781361.xml:4: parser error : internal error: xmlParseInternalSubset: error detected in Markup declaration
+
+
+^
+./test/errors10/781361.xml:4: parser error : DOCTYPE improperly terminated
+
+^
+./test/errors10/781361.xml:4: parser error : Start tag expected, '<' not found
+
+^
diff --git a/result/valid/766956.xml b/result/valid/766956.xml
new file mode 100644
index 000000000..e69de29bb
diff --git a/result/valid/766956.xml.err b/result/valid/766956.xml.err
new file mode 100644
index 000000000..34b1dae6d
--- /dev/null
+++ b/result/valid/766956.xml.err
@@ -0,0 +1,9 @@
+test/valid/dtds/766956.dtd:2: parser error : PEReference: expecting ';'
+%Ã¤%ent;
+   ^
+Entity: line 1: parser error : Content error in the external subset
+ %ent; 
+      ^
+Entity: line 1: 
+value
+^
diff --git a/result/valid/766956.xml.err.rdr b/result/valid/766956.xml.err.rdr
new file mode 100644
index 000000000..77603462b
--- /dev/null
+++ b/result/valid/766956.xml.err.rdr
@@ -0,0 +1,10 @@
+test/valid/dtds/766956.dtd:2: parser error : PEReference: expecting ';'
+%Ã¤%ent;
+   ^
+Entity: line 1: parser error : Content error in the external subset
+ %ent; 
+      ^
+Entity: line 1: 
+value
+^
+./test/valid/766956.xml : failed to parse
diff --git a/runtest.c b/runtest.c
index b2ce693b0..378b38e35 100644
--- a/runtest.c
+++ b/runtest.c
@@ -4214,6 +4214,9 @@ testDesc testDescriptions[] = {
     { ""Error cases regression tests"",
       errParseTest, ""./test/errors/*.xml"", ""result/errors/"", """", "".err"",
       0 },
+    { ""Error cases regression tests (old 1.0)"",
+      errParseTest, ""./test/errors10/*.xml"", ""result/errors10/"", """", "".err"",
+      XML_PARSE_OLD10 },
 #ifdef LIBXML_READER_ENABLED
     { ""Error cases stream regression tests"",
       streamParseTest, ""./test/errors/*.xml"", ""result/errors/"", NULL, "".str"",
diff --git a/test/errors10/781205.xml b/test/errors10/781205.xml
new file mode 100644
index 000000000..d9e9e8395
--- /dev/null
+++ b/test/errors10/781205.xml
@@ -0,0 +1,3 @@
+<!DOCTYPE D [
+  <!ENTITY % a ""<:0000"">
+  %a;
diff --git a/test/errors10/781361.xml b/test/errors10/781361.xml
new file mode 100644
index 000000000..67476bcbe
--- /dev/null
+++ b/test/errors10/781361.xml
@@ -0,0 +1,3 @@
+<!DOCTYPE doc [
+  <!ENTITY % elem ""<!ELEMENT e0000000000"">
+  %elem;
diff --git a/test/valid/766956.xml b/test/valid/766956.xml
new file mode 100644
index 000000000..19a95a0ee
--- /dev/null
+++ b/test/valid/766956.xml
@@ -0,0 +1,2 @@
+<!DOCTYPE test SYSTEM ""dtds/766956.dtd"">
+<test/>
diff --git a/test/valid/dtds/766956.dtd b/test/valid/dtds/766956.dtd
new file mode 100644
index 000000000..dddde68bc
--- /dev/null
+++ b/test/valid/dtds/766956.dtd
@@ -0,0 +1,2 @@
+<!ENTITY % ent ""value"">
+%Ã¤%ent;"
CVE-2017-11664,"From ad6d7cf88d6673167ca1f517248af9409a9f1be1 Mon Sep 17 00:00:00 2001
From: sezero <sezero@users.sourceforge.net>
Date: Wed, 2 Aug 2017 17:55:10 +0300
Subject: [PATCH] Fix bug #175:

CVE-2017-11661, CVE-2017-11662, CVE-2017-11663, CVE-2017-11664:
Add a new size parameter to _WM_SetupMidiEvent() so that it
knows where to stop reading, and adjust its clients properly.
---
 include/internal_midi.h |  2 +-
 src/f_hmi.c             | 40 +++++++++++++++++---
 src/f_hmp.c             | 15 +++++++-
 src/f_midi.c            | 55 ++++++++++++++++++---------
 src/f_mus.c             |  5 ++-
 src/f_xmidi.c           |  2 +-
 src/internal_midi.c     | 83 ++++++++++++++++++++++++++++++++++++-----
 7 files changed, 162 insertions(+), 40 deletions(-)

diff --git a/include/internal_midi.h b/include/internal_midi.h
index afe63197..4e1782e0 100644
--- a/include/internal_midi.h
+++ b/include/internal_midi.h
@@ -191,7 +191,7 @@ extern int _WM_midi_setup_divisions(struct _mdi *mdi, uint32_t divisions);
 
 extern struct _mdi * _WM_initMDI(void);
 extern void _WM_freeMDI(struct _mdi *mdi);
-extern uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t running_event);
+extern uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event);
 extern void _WM_ResetToStart(struct _mdi *mdi);
 extern void _WM_do_pan_adjust(struct _mdi *mdi, uint8_t ch);
 extern void _WM_do_note_off_extra(struct _note *nte);
diff --git a/src/f_hmi.c b/src/f_hmi.c
index 1a8808b2..21d9363e 100644
--- a/src/f_hmi.c
+++ b/src/f_hmi.c
@@ -42,10 +42,10 @@ struct _mdi *
 _WM_ParseNewHmi(uint8_t *hmi_data, uint32_t hmi_size) {
     uint32_t hmi_tmp = 0;
     uint8_t *hmi_base = hmi_data;
+    uint32_t data_siz;
     uint16_t hmi_bpm = 0;
     uint16_t hmi_division = 0;
 
-//  uint32_t hmi_duration_secs = 0;
     uint32_t hmi_track_cnt = 0;
     uint32_t *hmi_track_offset = NULL;
     uint32_t i = 0;
@@ -74,8 +74,6 @@ _WM_ParseNewHmi(uint8_t *hmi_data, uint32_t hmi_size) {
         uint8_t channel;
     } *note;
 
-    //FIXME: This needs to be used for sanity check.
-    UNUSED(hmi_size);
 
     if (memcmp(hmi_data, ""HMI-MIDISONG061595"", 18)) {
         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, NULL, 0);
@@ -216,6 +214,11 @@ _WM_ParseNewHmi(uint8_t *hmi_data, uint32_t hmi_size) {
             do {
                 hmi_data = hmi_base + hmi_track_offset[i];
                 hmi_delta[i] = 0;
+                if (hmi_track_offset[i] >= hmi_size) {
+                    _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, ""file too short"", 0);
+                    goto _hmi_end;
+                }
+                data_siz = hmi_size - hmi_track_offset[i];
 
                 if (hmi_data[0] == 0xfe) {
                     // HMI only event of some sort.
@@ -223,14 +226,23 @@ _WM_ParseNewHmi(uint8_t *hmi_data, uint32_t hmi_size) {
                         hmi_tmp = (hmi_data[4] + 5);
                         hmi_data += hmi_tmp;
                         hmi_track_offset[i] += hmi_tmp;
+                        hmi_tmp += 4;
                     } else if (hmi_data[1] == 0x15) {
                         hmi_data += 4;
                         hmi_track_offset[i] += 4;
+                        hmi_tmp = 8;
+                    } else {
+                        hmi_tmp = 4;
                     }
                     hmi_data += 4;
                     hmi_track_offset[i] += 4;
+                    if (hmi_tmp > data_siz) {
+                        _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, ""file too short"", 0);
+                        goto _hmi_end;
+                    }
+                    data_siz -= hmi_tmp;
                 } else {
-                    if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,hmi_running_event[i])) == 0) {
+                    if ((setup_ret = _WM_SetupMidiEvent(hmi_mdi,hmi_data,data_siz,hmi_running_event[i])) == 0) {
                         goto _hmi_end;
                     }
                     if ((hmi_data[0] == 0xff) && (hmi_data[1] == 0x2f) && (hmi_data[2] == 0x00)) {
@@ -269,17 +281,25 @@ _WM_ParseNewHmi(uint8_t *hmi_data, uint32_t hmi_size) {
 
                         hmi_data += setup_ret;
                         hmi_track_offset[i] += setup_ret;
+                        data_siz -= setup_ret;
 
                         note[hmi_tmp].length = 0;
-                        if (*hmi_data > 0x7f) {
+                        if (data_siz && *hmi_data > 0x7f) {
                             do {
+                                if (!data_siz) break;
                                 note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);
                                 hmi_data++;
+                                data_siz--;
                                 hmi_track_offset[i]++;
                             } while (*hmi_data > 0x7F);
                         }
+                        if (!data_siz) {
+                            _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, ""file too short"", 0);
+                            goto _hmi_end;
+                        }
                         note[hmi_tmp].length = (note[hmi_tmp].length << 7) | (*hmi_data & 0x7F);
                         hmi_data++;
+                        data_siz--;
                         hmi_track_offset[i]++;
 
                         if (note[hmi_tmp].length) {
@@ -293,20 +313,28 @@ _WM_ParseNewHmi(uint8_t *hmi_data, uint32_t hmi_size) {
                     } else {
                         hmi_data += setup_ret;
                         hmi_track_offset[i] += setup_ret;
+                        data_siz -= setup_ret;
                     }
                 }
 
                 // get track delta
                 // hmi_delta[i] = 0; // set at start of loop
-                if (*hmi_data > 0x7f) {
+                if (data_siz && *hmi_data > 0x7f) {
                     do {
+                        if (!data_siz) break;
                         hmi_delta[i] = (hmi_delta[i] << 7) | (*hmi_data & 0x7F);
                         hmi_data++;
+                        data_siz--;
                         hmi_track_offset[i]++;
                     } while (*hmi_data > 0x7F);
                 }
+                if (!data_siz) {
+                    _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMI, ""file too short"", 0);
+                    goto _hmi_end;
+                }
                 hmi_delta[i] = (hmi_delta[i] << 7) | (*hmi_data & 0x7F);
                 hmi_data++;
+                data_siz--;
                 hmi_track_offset[i]++;
             } while (!hmi_delta[i]);
             if ((!smallest_delta) || (smallest_delta > hmi_delta[i])) {
diff --git a/src/f_hmp.c b/src/f_hmp.c
index 565d1fec..f0c64e41 100644
--- a/src/f_hmp.c
+++ b/src/f_hmp.c
@@ -235,6 +235,7 @@ _WM_ParseNewHmp(uint8_t *hmp_data, uint32_t hmp_size) {
 
         // goto start of next chunk
         hmp_data = hmp_chunk[i] + chunk_length[i];
+        chunk_length[i] -= chunk_ofs[i];
         hmp_chunk[i] += chunk_ofs[i]++;
         chunk_end[i] = 0;
     }
@@ -273,10 +274,11 @@ _WM_ParseNewHmp(uint8_t *hmp_data, uint32_t hmp_size) {
                     // Reserved for loop markers
                     // TODO: still deciding what to do about these
                     hmp_chunk[i] += 3;
+                    chunk_length[i] -= 3;
                 } else {
                     uint32_t setup_ret = 0;
 
-                    if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], 0)) == 0) {
+                    if ((setup_ret = _WM_SetupMidiEvent(hmp_mdi, hmp_chunk[i], chunk_length[i], 0)) == 0) {
                         goto _hmp_end;
                     }
 
@@ -284,6 +286,7 @@ _WM_ParseNewHmp(uint8_t *hmp_data, uint32_t hmp_size) {
                         /* End of Chunk */
                         end_of_chunks++;
                         chunk_end[i] = 1;
+                        chunk_length[i] -= 3;
                         hmp_chunk[i] += 3;
                         goto NEXT_CHUNK;
                     } else if ((hmp_chunk[i][0] == 0xff) && (hmp_chunk[i][1] == 0x51) && (hmp_chunk[i][2] == 0x03)) {
@@ -296,18 +299,26 @@ _WM_ParseNewHmp(uint8_t *hmp_data, uint32_t hmp_size) {
                         fprintf(stderr,""DEBUG: Tempo change %f\r\n"", tempo_f);
                     }
                     hmp_chunk[i] += setup_ret;
+                    chunk_length[i] -= setup_ret;
                 }
                 var_len_shift = 0;
                 chunk_delta[i] = 0;
-                if (*hmp_chunk[i] < 0x80) {
+                if (chunk_length[i] && *hmp_chunk[i] < 0x80) {
                     do {
+                        if (! chunk_length[i]) break;
                         chunk_delta[i] = chunk_delta[i] + ((*hmp_chunk[i] & 0x7F) << var_len_shift);
                         var_len_shift += 7;
                         hmp_chunk[i]++;
+                        chunk_length[i]--;
                     } while (*hmp_chunk[i] < 0x80);
                 }
+                if (! chunk_length[i]) {
+                    _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_NOT_HMP, ""file too short"", 0);
+                    goto _hmp_end;
+                }
                 chunk_delta[i] = chunk_delta[i] + ((*hmp_chunk[i] & 0x7F) << var_len_shift);
                 hmp_chunk[i]++;
+                chunk_length[i]--;
             } while (!chunk_delta[i]);
 
             if ((!smallest_delta) || (smallest_delta > chunk_delta[i])) {
diff --git a/src/f_midi.c b/src/f_midi.c
index 6b52932e..c8f278b4 100644
--- a/src/f_midi.c
+++ b/src/f_midi.c
@@ -43,8 +43,8 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
 
     uint32_t tmp_val;
     uint32_t midi_type;
-    uint32_t track_size;
     uint8_t **tracks;
+    uint32_t *track_size;
     uint32_t end_of_tracks = 0;
     uint32_t no_tracks;
     uint32_t i;
@@ -56,15 +56,11 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
     float sample_count_f = 0.0;
     float sample_remainder = 0.0;
     uint8_t *sysex_store = NULL;
-//  uint32_t sysex_store_len = 0;
 
     uint32_t *track_delta;
     uint8_t *track_end;
     uint32_t smallest_delta = 0;
     uint32_t subtract_delta = 0;
-//  uint32_t tmp_length = 0;
-//  uint8_t current_event = 0;
-//  uint8_t current_event_ch = 0;
     uint8_t *running_event;
     uint32_t setup_ret = 0;
 
@@ -151,6 +147,7 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
     _WM_midi_setup_divisions(mdi,divisions);
 
     tracks = malloc(sizeof(uint8_t *) * no_tracks);
+    track_size = malloc(sizeof(uint32_t) * no_tracks);
     track_delta = malloc(sizeof(uint32_t) * no_tracks);
     track_end = malloc(sizeof(uint8_t) * no_tracks);
     running_event = malloc(sizeof(uint8_t) * no_tracks);
@@ -168,28 +165,30 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
         midi_data += 4;
         midi_size -= 4;
 
-        track_size = *midi_data++ << 24;
-        track_size |= *midi_data++ << 16;
-        track_size |= *midi_data++ << 8;
-        track_size |= *midi_data++;
+        /* track size */
+        tmp_val = *midi_data++ << 24;
+        tmp_val |= *midi_data++ << 16;
+        tmp_val |= *midi_data++ << 8;
+        tmp_val |= *midi_data++;
         midi_size -= 4;
-        if (midi_size < track_size) {
+        if (midi_size < tmp_val) {
             _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, ""(too short)"", 0);
             goto _end;
         }
-        if (track_size < 3) {
+        if (tmp_val < 3) {
             _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, ""(bad track size)"", 0);
             goto _end;
         }
-        if ((midi_data[track_size - 3] != 0xFF)
-                || (midi_data[track_size - 2] != 0x2F)
-                || (midi_data[track_size - 1] != 0x00)) {
+        if ((midi_data[tmp_val - 3] != 0xFF)
+                || (midi_data[tmp_val - 2] != 0x2F)
+                || (midi_data[tmp_val - 1] != 0x00)) {
             _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, ""(missing EOT)"", 0);
             goto _end;
         }
         tracks[i] = midi_data;
-        midi_data += track_size;
-        midi_size -= track_size;
+        track_size[i] = tmp_val;
+        midi_data += tmp_val;
+        midi_size -= tmp_val;
         track_end[i] = 0;
         running_event[i] = 0;
         track_delta[i] = 0;
@@ -197,9 +196,11 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
         while (*tracks[i] > 0x7F) {
             track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);
             tracks[i]++;
+            track_size[i]--;
         }
         track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);
         tracks[i]++;
+        track_size[i]--;
 
         if (midi_type == 1 ) {
             if (track_delta[i] < smallest_delta) {
@@ -243,7 +244,7 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
                     }
                 }
                 do {
-                    setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], running_event[i]);
+                    setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], track_size[i], running_event[i]);
                     if (setup_ret == 0) {
                         goto _end;
                     }
@@ -259,6 +260,7 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
                             end_of_tracks++;
                             track_end[i] = 1;
                             tracks[i] += 3;
+                            track_size[i] -= 3;
                             goto NEXT_TRACK;
                         } else if ((tracks[i][0] == 0xff) && (tracks[i][1] == 0x51) && (tracks[i][2] == 0x03)) {
                             /* Tempo */
@@ -270,15 +272,23 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
                         }
                     }
                     tracks[i] += setup_ret;
+                    track_size[i] -= setup_ret;
 
                     if (*tracks[i] > 0x7f) {
                         do {
+                            if (!track_size[i]) break;
                             track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);
                             tracks[i]++;
+                            track_size[i]--;
                         } while (*tracks[i] > 0x7f);
                     }
+                    if (!track_size[i]) {
+                        _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, ""(too short)"", 0);
+                        goto _end;
+                    }
                     track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);
                     tracks[i]++;
+                    track_size[i]--;
                 } while (!track_delta[i]);
                 if ((!smallest_delta) || (smallest_delta > track_delta[i])) {
                     smallest_delta = track_delta[i];
@@ -304,7 +314,7 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
         for (i = 0; i < no_tracks; i++) {
             running_event[i] = 0;
             do {
-                setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], running_event[i]);
+                setup_ret = _WM_SetupMidiEvent(mdi, tracks[i], track_size[i], running_event[i]);
                 if (setup_ret == 0) {
                     goto _end;
                 }
@@ -329,16 +339,24 @@ _WM_ParseNewMidi(uint8_t *midi_data, uint32_t midi_size) {
                     }
                 }
                 tracks[i] += setup_ret;
+                track_size[i] -= setup_ret;
 
                 track_delta[i] = 0;
                 if (*tracks[i] > 0x7f) {
                     do {
+                        if (!track_size[i]) break;
                         track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);
                         tracks[i]++;
+                        track_size[i]--;
                     } while (*tracks[i] > 0x7f);
                 }
+                if (!track_size[i]) {
+                    _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, ""(too short)"", 0);
+                    goto _end;
+                }
                 track_delta[i] = (track_delta[i] << 7) + (*tracks[i] & 0x7F);
                 tracks[i]++;
+                track_size[i]--;
 
                 sample_count_f = (((float) track_delta[i] * samples_per_delta_f)
                                   + sample_remainder);
@@ -372,6 +390,7 @@ _end:   free(sysex_store);
     free(track_delta);
     free(running_event);
     free(tracks);
+    free(track_size);
     if (mdi->reverb) return (mdi);
     _WM_freeMDI(mdi);
     return (NULL);
diff --git a/src/f_mus.c b/src/f_mus.c
index 23baed52..b606150b 100644
--- a/src/f_mus.c
+++ b/src/f_mus.c
@@ -61,7 +61,8 @@ _WM_ParseNewMus(uint8_t *mus_data, uint32_t mus_size) {
     float tempo_f = 0.0;
     uint16_t mus_freq = 0;
     float samples_per_tick_f = 0.0;
-    uint8_t mus_event[] = { 0, 0, 0, 0 };
+#define MUS_SZ 4
+    uint8_t mus_event[MUS_SZ] = { 0, 0, 0, 0 };
     uint8_t mus_event_size = 0;
     uint8_t mus_prev_vol[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
     uint32_t setup_ret = 0;
@@ -314,7 +315,7 @@ _WM_ParseNewMus(uint8_t *mus_data, uint32_t mus_size) {
                 break;
         }
 
-        setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, 0);
+        setup_ret = _WM_SetupMidiEvent(mus_mdi, (uint8_t *)mus_event, MUS_SZ, 0);
         if (setup_ret == 0) {
             goto _mus_end;
         }
diff --git a/src/f_xmidi.c b/src/f_xmidi.c
index 62c71315..fb3c6d18 100644
--- a/src/f_xmidi.c
+++ b/src/f_xmidi.c
@@ -267,7 +267,7 @@ struct _mdi *_WM_ParseNewXmi(uint8_t *xmi_data, uint32_t xmi_size) {
                             setup_ret = 6;
                             goto _XMI_Next_Event;
                         }
-                        if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data,0)) == 0) {
+                        if ((setup_ret = _WM_SetupMidiEvent(xmi_mdi,xmi_data, xmi_size, 0)) == 0) {
                             goto _xmi_end;
                         }
 
diff --git a/src/internal_midi.c b/src/internal_midi.c
index cb7301d2..5f86e055 100644
--- a/src/internal_midi.c
+++ b/src/internal_midi.c
@@ -1962,7 +1962,7 @@ void _WM_freeMDI(struct _mdi *mdi) {
     free(mdi);
 }
 
-uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t running_event) {
+uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint32_t siz, uint8_t running_event) {
     /*
      Only add standard MIDI and Sysex events in here.
      Non-standard events need to be handled by calling function
@@ -1978,10 +1978,13 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
     uint8_t data_2 = 0;
     char *text = NULL;
 
+    if (!siz) goto shortbuf;
+
     if (event_data[0] >= 0x80) {
         command = *event_data & 0xf0;
         channel = *event_data++ & 0x0f;
         ret_cnt++;
+        if (--siz == 0) goto shortbuf;
     } else {
         command = running_event & 0xf0;
         channel = running_event & 0x0f;
@@ -1990,6 +1993,7 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
     switch(command) {
         case 0x80:
         _SETUP_NOTEOFF:
+            if (siz < 2) goto shortbuf;
             data_1 = *event_data++;
             data_2 = *event_data++;
             _WM_midi_setup_noteoff(mdi, channel, data_1, data_2);
@@ -1997,18 +2001,21 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
             break;
         case 0x90:
             if (event_data[1] == 0) goto _SETUP_NOTEOFF; /* A velocity of 0 in a note on is actually a note off */
+            if (siz < 2) goto shortbuf;
             data_1 = *event_data++;
             data_2 = *event_data++;
             midi_setup_noteon(mdi, channel, data_1, data_2);
             ret_cnt += 2;
             break;
         case 0xa0:
+            if (siz < 2) goto shortbuf;
             data_1 = *event_data++;
             data_2 = *event_data++;
             midi_setup_aftertouch(mdi, channel, data_1, data_2);
             ret_cnt += 2;
             break;
         case 0xb0:
+            if (siz < 2) goto shortbuf;
             data_1 = *event_data++;
             data_2 = *event_data++;
             midi_setup_control(mdi, channel, data_1, data_2);
@@ -2025,6 +2032,7 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
             ret_cnt++;
             break;
         case 0xe0:
+            if (siz < 2) goto shortbuf;
             data_1 = *event_data++;
             data_2 = *event_data++;
             midi_setup_pitch(mdi, channel, ((data_2 << 7) | (data_1 & 0x7f)));
@@ -2041,6 +2049,7 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                      Sequence Number
                      We only setting this up here for WM_Event2Midi function
                      */
+                    if (siz < 4) goto shortbuf;
                     midi_setup_sequenceno(mdi, ((event_data[2] << 8) + event_data[3]));
                     ret_cnt += 4;
                 } else if (event_data[0] == 0x01) {
@@ -2048,16 +2057,21 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                     /* Get Length */
                     event_data++;
                     ret_cnt++;
-                    if (*event_data > 0x7f) {
+                    if (--siz && *event_data > 0x7f) {
                         do {
+                            if (!siz) break;
                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                             event_data++;
+                            siz--;
                             ret_cnt++;
                         } while (*event_data > 0x7f);
                     }
+                    if (!siz) goto shortbuf;
                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                     event_data++;
                     ret_cnt++;
+                    if (--siz < tmp_length) goto shortbuf;
+                    if (!tmp_length) break; /* bad file? */
 
                     text = malloc(tmp_length + 1);
                     memcpy(text, event_data, tmp_length);
@@ -2071,16 +2085,21 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                     /* Get Length */
                     event_data++;
                     ret_cnt++;
-                    if (*event_data > 0x7f) {
+                    if (--siz && *event_data > 0x7f) {
                         do {
+                            if (!siz) break;
                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                             event_data++;
+                            siz--;
                             ret_cnt++;
                         } while (*event_data > 0x7f);
                     }
+                    if (!siz) goto shortbuf;
                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                     event_data++;
                     ret_cnt++;
+                    if (--siz < tmp_length) goto shortbuf;
+                    if (!tmp_length) break; /* bad file? */
 
                     /* Copy copyright info in the getinfo struct */
                     if (mdi->extra_info.copyright) {
@@ -2107,16 +2126,21 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                     /* Get Length */
                     event_data++;
                     ret_cnt++;
-                    if (*event_data > 0x7f) {
+                    if (--siz && *event_data > 0x7f) {
                         do {
+                            if (!siz) break;
                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                             event_data++;
+                            siz--;
                             ret_cnt++;
                         } while (*event_data > 0x7f);
                     }
+                    if (!siz) goto shortbuf;
                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                     event_data++;
                     ret_cnt++;
+                    if (--siz < tmp_length) goto shortbuf;
+                    if (!tmp_length) break; /* bad file? */
 
                     text = malloc(tmp_length + 1);
                     memcpy(text, event_data, tmp_length);
@@ -2130,16 +2154,21 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                     /* Get Length */
                     event_data++;
                     ret_cnt++;
-                    if (*event_data > 0x7f) {
+                    if (--siz && *event_data > 0x7f) {
                         do {
+                            if (!siz) break;
                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                             event_data++;
+                            siz--;
                             ret_cnt++;
                         } while (*event_data > 0x7f);
                     }
+                    if (!siz) goto shortbuf;
                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                     event_data++;
                     ret_cnt++;
+                    if (--siz < tmp_length) goto shortbuf;
+                    if (!tmp_length) break; /* bad file? */
 
                     text = malloc(tmp_length + 1);
                     memcpy(text, event_data, tmp_length);
@@ -2153,16 +2182,21 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                     /* Get Length */
                     event_data++;
                     ret_cnt++;
-                    if (*event_data > 0x7f) {
+                    if (--siz && *event_data > 0x7f) {
                         do {
+                            if (!siz) break;
                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                             event_data++;
+                            siz--;
                             ret_cnt++;
                         } while (*event_data > 0x7f);
                     }
+                    if (!siz) goto shortbuf;
                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                     event_data++;
                     ret_cnt++;
+                    if (--siz < tmp_length) goto shortbuf;
+                    if (!tmp_length) break; /* bad file? */
 
                     text = malloc(tmp_length + 1);
                     memcpy(text, event_data, tmp_length);
@@ -2176,16 +2210,21 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                     /* Get Length */
                     event_data++;
                     ret_cnt++;
-                    if (*event_data > 0x7f) {
+                    if (--siz && *event_data > 0x7f) {
                         do {
+                            if (!siz) break;
                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                             event_data++;
+                            siz--;
                             ret_cnt++;
                         } while (*event_data > 0x7f);
                     }
+                    if (!siz) goto shortbuf;
                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                     event_data++;
                     ret_cnt++;
+                    if (--siz < tmp_length) goto shortbuf;
+                    if (!tmp_length) break; /* bad file? */
 
                     text = malloc(tmp_length + 1);
                     memcpy(text, event_data, tmp_length);
@@ -2199,16 +2238,21 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                     /* Get Length */
                     event_data++;
                     ret_cnt++;
-                    if (*event_data > 0x7f) {
+                    if (--siz && *event_data > 0x7f) {
                         do {
+                            if (!siz) break;
                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                             event_data++;
+                            siz--;
                             ret_cnt++;
                         } while (*event_data > 0x7f);
                     }
+                    if (!siz) goto shortbuf;
                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                     event_data++;
                     ret_cnt++;
+                    if (--siz < tmp_length) goto shortbuf;
+                    if (!tmp_length) break; /* bad file? */
 
                     text = malloc(tmp_length + 1);
                     memcpy(text, event_data, tmp_length);
@@ -2222,6 +2266,7 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                      Channel Prefix
                      We only setting this up here for WM_Event2Midi function
                      */
+                    if (siz < 3) goto shortbuf;
                     midi_setup_channelprefix(mdi, event_data[2]);
                     ret_cnt += 3;
                 } else if ((event_data[0] == 0x21) && (event_data[1] == 0x01)) {
@@ -2229,6 +2274,7 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                      Port Prefix
                      We only setting this up here for WM_Event2Midi function
                      */
+                    if (siz < 3) goto shortbuf;
                     midi_setup_portprefix(mdi, event_data[2]);
                     ret_cnt += 3;
                 } else if ((event_data[0] == 0x2F) && (event_data[1] == 0x00)) {
@@ -2237,6 +2283,7 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                      Deal with this inside calling function
                      We only setting this up here for _WM_Event2Midi function
                      */
+                    if (siz < 2) goto shortbuf;
                     _WM_midi_setup_endoftrack(mdi);
                     ret_cnt += 2;
                 } else if ((event_data[0] == 0x51) && (event_data[1] == 0x03)) {
@@ -2245,9 +2292,11 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                      Deal with this inside calling function.
                      We only setting this up here for _WM_Event2Midi function
                      */
+                    if (siz < 5) goto shortbuf;
                     _WM_midi_setup_tempo(mdi, ((event_data[2] << 16) + (event_data[3] << 8) + event_data[4]));
                     ret_cnt += 5;
                 } else if ((event_data[0] == 0x54) && (event_data[1] == 0x05)) {
+                    if (siz < 7) goto shortbuf;
                     /*
                      SMPTE Offset
                      We only setting this up here for WM_Event2Midi function
@@ -2265,6 +2314,7 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                      Time Signature
                      We only setting this up here for WM_Event2Midi function
                      */
+                    if (siz < 6) goto shortbuf;
                     midi_setup_timesignature(mdi, ((event_data[2] << 24) + (event_data[3] << 16) + (event_data[4] << 8) + event_data[5]));
                     ret_cnt += 6;
                 } else if ((event_data[0] == 0x59) && (event_data[1] == 0x02)) {
@@ -2272,6 +2322,7 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                      Key Signature
                      We only setting this up here for WM_Event2Midi function
                      */
+                    if (siz < 4) goto shortbuf;
                     midi_setup_keysignature(mdi, ((event_data[2] << 8) + event_data[3]));
                     ret_cnt += 4;
                 } else {
@@ -2280,16 +2331,20 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
                      */
                     event_data++;
                     ret_cnt++;
-                    if (*event_data > 0x7f) {
+                    if (--siz && *event_data > 0x7f) {
                         do {
+                            if (!siz) break;
                             tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                             event_data++;
+                            siz--;
                             ret_cnt++;
                         } while (*event_data > 0x7f);
                     }
+                    if (!siz) goto shortbuf;
                     tmp_length = (tmp_length << 7) + (*event_data & 0x7f);
                     ret_cnt++;
                     ret_cnt += tmp_length;
+                    if (--siz < tmp_length) goto shortbuf;
                 }
 
             } else if ((channel == 0) || (channel == 7)) {
@@ -2301,15 +2356,19 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
 
                 if (*event_data > 0x7f) {
                     do {
+                        if (!siz) break;
                         sysex_len = (sysex_len << 7) + (*event_data & 0x7F);
                         event_data++;
+                        siz--;
                         ret_cnt++;
                     } while (*event_data > 0x7f);
                 }
+                if (!siz) goto shortbuf;
                 sysex_len = (sysex_len << 7) + (*event_data & 0x7F);
                 event_data++;
-                if (!sysex_len) break;
                 ret_cnt++;
+                if (--siz < sysex_len) goto shortbuf;
+                if (!sysex_len) break; /* bad file? */
 
                 sysex_store = malloc(sizeof(uint8_t) * sysex_len);
                 memcpy(sysex_store, event_data, sysex_len);
@@ -2381,5 +2440,9 @@ uint32_t _WM_SetupMidiEvent(struct _mdi *mdi, uint8_t * event_data, uint8_t runn
     if (ret_cnt == 0)
         _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, ""(missing event)"", 0);
     return ret_cnt;
+
+shortbuf:
+    _WM_GLOBAL_ERROR(__FUNCTION__, __LINE__, WM_ERR_CORUPT, ""(input too short)"", 0);
+    return 0;
 }"
CVE-2017-13687,"From 866c60236c41cea1e1654c8a071897292f64be49 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Wed, 8 Feb 2017 10:54:27 -0800
Subject: [PATCH] CVE-2017-13687/CHDLC: Add a test.

This is for the fix made a few commits before, which had no tests.

Add a test using the capture file supplied by Kamil Frankowicz.
---
 tests/TESTLIST               |   1 +
 tests/hoobr_chdlc_print.out  |  26 ++++++++++++++++++++++++++
 tests/hoobr_chdlc_print.pcap | Bin 0 -> 2016 bytes
 3 files changed, 27 insertions(+)
 create mode 100644 tests/hoobr_chdlc_print.out
 create mode 100644 tests/hoobr_chdlc_print.pcap

diff --git a/tests/TESTLIST b/tests/TESTLIST
index 7b841e991..ec627cb82 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -455,6 +455,7 @@ hoobr_juniper		hoobr_juniper.pcap		hoobr_juniper.out
 hoobr_juniper2		hoobr_juniper2.pcap		hoobr_juniper2.out
 hoobr_juniper3		hoobr_juniper3.pcap		hoobr_juniper3.out
 hoobr_parse_field	hoobr_parse_field.pcap		hoobr_parse_field.out
+hoobr_chdlc_print	hoobr_chdlc_print.pcap		hoobr_chdlc_print.out
 
 # bad packets from Wilfried Kirsch
 slip-bad-direction	slip-bad-direction.pcap		slip-bad-direction.out	-ve
diff --git a/tests/hoobr_chdlc_print.out b/tests/hoobr_chdlc_print.out
new file mode 100644
index 000000000..5701077db
--- /dev/null
+++ b/tests/hoobr_chdlc_print.out
@@ -0,0 +1,26 @@
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+unknown CHDLC protocol (0x3030)
+[|chdlc]
diff --git a/tests/hoobr_chdlc_print.pcap b/tests/hoobr_chdlc_print.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..ffc75a4b214033df32874a86dfd75243e9a44d6b
GIT binary patch
literal 2016
zcmca|c+)~A1{MYbC}3e=V8~#Aa}6ATe3%?HXbB?Cqqe<+-8^E$#e$K#@j;C^9g1d9
nJ3SB^f7G^ju$wnr!e!JSl;v`2r_+%Z9|jDta{u2yQepxCYMyQ3

literal 0
HcmV?d00001"
CVE-2017-6307,"From 1a17af1ed0c791aec44dbdc9eab91218cc1e335a Mon Sep 17 00:00:00 2001
From: Eric Sesterhenn <eric.sesterhenn@x41-dsec.de>
Date: Sun, 19 Feb 2017 19:47:22 +0100
Subject: [PATCH] Use asserts on lengths to prevent invalid reads/writes.

---
 src/mapi_attr.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/src/mapi_attr.c b/src/mapi_attr.c
index d85e149..08a8eff 100644
--- a/src/mapi_attr.c
+++ b/src/mapi_attr.c
@@ -174,6 +174,7 @@ mapi_attr_read (size_t len, unsigned char *buf)
     uint32 i,j;
     assert(len > 4);
     uint32 num_properties = GETINT32(buf+idx);
+    assert((num_properties+1) != 0);
     MAPI_Attr** attrs = CHECKED_XMALLOC (MAPI_Attr*, (num_properties + 1));
 
     idx += 4;
@@ -212,6 +213,7 @@ mapi_attr_read (size_t len, unsigned char *buf)
 		    /* read the data into a buffer */
 		    a->names[i].data 
 			= CHECKED_XMALLOC(unsigned char, a->names[i].len);
+		    assert((idx+(a->names[i].len*2)) <= len);
 		    for (j = 0; j < (a->names[i].len >> 1); j++)
 			a->names[i].data[j] = (buf+idx)[j*2];
 
@@ -308,8 +310,11 @@ mapi_attr_read (size_t len, unsigned char *buf)
 	    case szMAPI_BINARY:
 		CHECKINT32(idx, len); v->len = GETINT32(buf+idx); idx += 4;
 
+		assert(v->len + idx <= len);
+
 		if (a->type == szMAPI_UNICODE_STRING)
 		{
+		    assert(v->len != 0);
 		    v->data.buf = (unsigned char*)unicode_to_utf8(v->len, buf+idx);
 		}
 		else"
CVE-2017-6594,"From b1e699103f08d6a0ca46a122193c9da65f6cf837 Mon Sep 17 00:00:00 2001
From: Viktor Dukhovni <viktor@twosigma.com>
Date: Wed, 10 Aug 2016 23:31:14 +0000
Subject: [PATCH] Fix transit path validation CVE-2017-6594

Commit f469fc6 (2010-10-02) inadvertently caused the previous hop realm
to not be added to the transit path of issued tickets.  This may, in
some cases, enable bypass of capath policy in Heimdal versions 1.5
through 7.2.

Note, this may break sites that rely on the bug.  With the bug some
incomplete [capaths] worked, that should not have.  These may now break
authentication in some cross-realm configurations.
---
 NEWS                   | 14 ++++++++++++++
 kdc/krb5tgs.c          | 12 ++++++++++--
 tests/kdc/check-kdc.in | 17 +++++++++++++++++
 tests/kdc/krb5.conf.in |  4 ++++
 4 files changed, 45 insertions(+), 2 deletions(-)

diff --git a/NEWS b/NEWS
index ccc06ffc87..79efe803a7 100644
--- a/NEWS
+++ b/NEWS
@@ -1,3 +1,17 @@
+Release Notes - Heimdal - Version Heimdal 7.3
+
+ Security
+
+ - Fix transit path validation.  Commit f469fc6 (2010-10-02) inadvertently
+   caused the previous hop realm to not be added to the transit path
+   of issued tickets.  This may, in some cases, enable bypass of capath
+   policy in Heimdal versions 1.5 through 7.2.
+
+   Note, this may break sites that rely on the bug.  With the bug some
+   incomplete [capaths] worked, that should not have.  These may now break
+   authentication in some cross-realm configurations.
+   (CVE-2017-6594)
+
 Release Notes - Heimdal - Version Heimdal 7.2
 
  Bug fixes
diff --git a/kdc/krb5tgs.c b/kdc/krb5tgs.c
index 6048b9c556..98503812f3 100644
--- a/kdc/krb5tgs.c
+++ b/kdc/krb5tgs.c
@@ -655,8 +655,12 @@ fix_transited_encoding(krb5_context context,
 		  ""Decoding transited encoding"");
 	return ret;
     }
+
+    /*
+     * If the realm of the presented tgt is neither the client nor the server
+     * realm, it is a transit realm and must be added to transited set.
+     */
     if(strcmp(client_realm, tgt_realm) && strcmp(server_realm, tgt_realm)) {
-	/* not us, so add the previous realm to transited set */
 	if (num_realms + 1 > UINT_MAX/sizeof(*realms)) {
 	    ret = ERANGE;
 	    goto free_realms;
@@ -737,6 +741,7 @@ tgs_make_reply(krb5_context context,
 	       const char *server_name,
 	       hdb_entry_ex *client,
 	       krb5_principal client_principal,
+               const char *tgt_realm,
 	       hdb_entry_ex *krbtgt,
 	       krb5_enctype krbtgt_etype,
 	       krb5_principals spp,
@@ -798,7 +803,7 @@ tgs_make_reply(krb5_context context,
 				 &tgt->transited, &et,
 				 krb5_principal_get_realm(context, client_principal),
 				 krb5_principal_get_realm(context, server->entry.principal),
-				 krb5_principal_get_realm(context, krbtgt->entry.principal));
+				 tgt_realm);
     if(ret)
 	goto out;
 
@@ -1519,6 +1524,8 @@ tgs_build_reply(krb5_context context,
     krb5_keyblock sessionkey;
     krb5_kvno kvno;
     krb5_data rspac;
+    const char *tgt_realm = /* Realm of TGT issuer */
+        krb5_principal_get_realm(context, krbtgt->entry.principal);
     const char *our_realm = /* Realm of this KDC */
         krb5_principal_get_comp_string(context, krbtgt->entry.principal, 1);
     char **capath = NULL;
@@ -2324,6 +2331,7 @@ tgs_build_reply(krb5_context context,
 			 spn,
 			 client,
 			 cp,
+                         tgt_realm,
 			 krbtgt_out,
 			 tkey_sign->key.keytype,
 			 spp,
diff --git a/tests/kdc/check-kdc.in b/tests/kdc/check-kdc.in
index 962d5468a5..b9174e4db7 100644
--- a/tests/kdc/check-kdc.in
+++ b/tests/kdc/check-kdc.in
@@ -53,6 +53,7 @@ R4=TEST4.H5L.SE
 R5=SOME-REALM5.FR
 R6=SOME-REALM6.US
 R7=SOME-REALM7.UK
+R8=SOME-REALM8.UK
 
 H1=H1.$R
 H2=H2.$R
@@ -148,6 +149,12 @@ ${kadmin} \
     --realm-max-renewable-life=1month \
     ${R7} || exit 1
 
+${kadmin} \
+    init \
+    --realm-max-ticket-life=1day \
+    --realm-max-renewable-life=1month \
+    ${R8} || exit 1
+
 ${kadmin} \
     init \
     --realm-max-ticket-life=1day \
@@ -191,6 +198,7 @@ ${kadmin} add -p foo --use-defaults foo@${R4} || exit 1
 ${kadmin5} add -p foo --use-defaults foo@${R5} || exit 1
 ${kadmin} add -p foo --use-defaults foo@${R6} || exit 1
 ${kadmin} add -p foo --use-defaults foo@${R7} || exit 1
+${kadmin} add -p foo --use-defaults foo@${R8} || exit 1
 ${kadmin} add -p foo --use-defaults foo@${H1} || exit 1
 ${kadmin} add -p foo --use-defaults foo/host.${h1}@${H1} || exit 1
 ${kadmin} add -p foo --use-defaults foo@${H2} || exit 1
@@ -249,6 +257,9 @@ ${kadmin} add -p cross2 --use-defaults krbtgt/${R5}@${R6} || exit 1
 ${kadmin} add -p cross1 --use-defaults krbtgt/${R7}@${R6} || exit 1
 ${kadmin} add -p cross2 --use-defaults krbtgt/${R6}@${R7} || exit 1
 
+${kadmin} add -p cross1 --use-defaults krbtgt/${R8}@${R6} || exit 1
+${kadmin} add -p cross2 --use-defaults krbtgt/${R6}@${R8} || exit 1
+
 ${kadmin} add -p cross1 --use-defaults krbtgt/${H1}@${R} || exit 1
 ${kadmin} add -p cross2 --use-defaults krbtgt/${R}@${H1} || exit 1
 
@@ -284,6 +295,7 @@ ${kadmin} check ${R4} || exit 1
 ${kadmin5} check ${R5} || exit 1
 ${kadmin} check ${R6} || exit 1
 ${kadmin} check ${R7} || exit 1
+${kadmin} check ${R8} || exit 1
 ${kadmin} check ${H1} || exit 1
 ${kadmin} check ${H2} || exit 1
 ${kadmin} check ${H3} || exit 1
@@ -388,6 +400,8 @@ echo ""Getting x-realm tickets with capaths for $R -> $R6""
 ${kgetcred} foo@${R6} || { ec=1 ; eval ""${testfailed}""; }
 echo ""Getting x-realm tickets with capaths for $R -> $R7""
 ${kgetcred} foo@${R7} || { ec=1 ; eval ""${testfailed}""; }
+echo ""Should not get x-realm tickets with capaths for $R -> $R8""
+${kgetcred} foo@${R8} && { ec=1 ; eval ""${testfailed}""; }
 ${kdestroy}
 
 echo ""Testing capaths logic (reverse order)""
@@ -418,10 +432,13 @@ ${kinit} --password-file=${objdir}/foopassword \
 
 echo ""Getting x-realm tickets with hierarchical referrals for $H3 -> $H1""
 ${kgetcred} --hostbased --canonicalize foo host.${h1} || { ec=1 ; eval ""${testfailed}""; }
+fgrep ""cross-realm ${H3} -> ${H1} via [${H2}, ${R}]"" messages.log > /dev/null || { ec=1 ; eval ""${testfailed}""; }
 echo ""Getting x-realm tickets with hierarchical referrals for $H3 -> $R""
 ${kgetcred} --hostbased --canonicalize foo host.${r} || { ec=1 ; eval ""${testfailed}""; }
+fgrep ""cross-realm ${H3} -> ${R} via [${H2}]"" messages.log > /dev/null || { ec=1 ; eval ""${testfailed}""; }
 echo ""Getting x-realm tickets with hierarchical referrals for $H3 -> $H2""
 ${kgetcred} --hostbased --canonicalize foo host.${h2} || { ec=1 ; eval ""${testfailed}""; }
+fgrep ""cross-realm ${H3} -> ${H2}"" messages.log > /dev/null || { ec=1 ; eval ""${testfailed}""; }
 ${kdestroy}
 
 echo ""Testing multi-hop [capaths] referral logic""
diff --git a/tests/kdc/krb5.conf.in b/tests/kdc/krb5.conf.in
index cc2dedb2d5..849e773d06 100644
--- a/tests/kdc/krb5.conf.in
+++ b/tests/kdc/krb5.conf.in
@@ -40,6 +40,9 @@
 	SOME-REALM7.UK = {
 		kdc = localhost:@port@
 	}
+	SOME-REALM8.UK = {
+		kdc = localhost:@port@
+	}
 	TEST-HTTP.H5L.SE = {
 		kdc = http/localhost:@port@
 	}
@@ -147,6 +150,7 @@
 		SOME-REALM6.US = SOME-REALM5.FR
 		SOME-REALM7.UK = SOME-REALM6.US
 		SOME-REALM7.UK = SOME-REALM5.FR
+		SOME-REALM8.UK = SOME-REALM6.US
 	}
         H4.H2.TEST.H5L.SE = {
                 H1.TEST.H5L.SE = H3.H2.TEST.H5L.SE"
CVE-2017-1000380,"From ba3021b2c79b2fa9114f92790a99deb27a65b728 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Fri, 2 Jun 2017 17:26:56 +0200
Subject: [PATCH] ALSA: timer: Fix missing queue indices reset at
 SNDRV_TIMER_IOCTL_SELECT

snd_timer_user_tselect() reallocates the queue buffer dynamically, but
it forgot to reset its indices.  Since the read may happen
concurrently with ioctl and snd_timer_user_tselect() allocates the
buffer via kmalloc(), this may lead to the leak of uninitialized
kernel-space data, as spotted via KMSAN:

  BUG: KMSAN: use of unitialized memory in snd_timer_user_read+0x6c4/0xa10
  CPU: 0 PID: 1037 Comm: probe Not tainted 4.11.0-rc5+ #2739
  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
  Call Trace:
   __dump_stack lib/dump_stack.c:16
   dump_stack+0x143/0x1b0 lib/dump_stack.c:52
   kmsan_report+0x12a/0x180 mm/kmsan/kmsan.c:1007
   kmsan_check_memory+0xc2/0x140 mm/kmsan/kmsan.c:1086
   copy_to_user ./arch/x86/include/asm/uaccess.h:725
   snd_timer_user_read+0x6c4/0xa10 sound/core/timer.c:2004
   do_loop_readv_writev fs/read_write.c:716
   __do_readv_writev+0x94c/0x1380 fs/read_write.c:864
   do_readv_writev fs/read_write.c:894
   vfs_readv fs/read_write.c:908
   do_readv+0x52a/0x5d0 fs/read_write.c:934
   SYSC_readv+0xb6/0xd0 fs/read_write.c:1021
   SyS_readv+0x87/0xb0 fs/read_write.c:1018

This patch adds the missing reset of queue indices.  Together with the
previous fix for the ioctl/read race, we cover the whole problem.

Reported-by: Alexander Potapenko <glider@google.com>
Tested-by: Alexander Potapenko <glider@google.com>
Cc: <stable@vger.kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 sound/core/timer.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/sound/core/timer.c b/sound/core/timer.c
index 1118bd8e2d3c27..cd67d1c12cf1ca 100644
--- a/sound/core/timer.c
+++ b/sound/core/timer.c
@@ -1618,6 +1618,7 @@ static int snd_timer_user_tselect(struct file *file,
 	if (err < 0)
 		goto __err;
 
+	tu->qhead = tu->qtail = tu->qused = 0;
 	kfree(tu->queue);
 	tu->queue = NULL;
 	kfree(tu->tqueue);"
CVE-2017-16244,"From 4a6e0e1e0e2c3facebc17e0db38c5b4d4cb05bd0 Mon Sep 17 00:00:00 2001
From: Samuel Georges <sam@daftspunk.com>
Date: Mon, 30 Oct 2017 08:59:19 +1100
Subject: [PATCH] Implement CSRF token by default Implement CSRF protection on
 CMS for postback handling

---
 config/cms.php                     |  2 +-
 modules/cms/classes/Controller.php | 29 +++++++++++++++++++++++++++++
 2 files changed, 30 insertions(+), 1 deletion(-)

diff --git a/config/cms.php b/config/cms.php
index e6f7c32b9e..5c35ca4f37 100644
--- a/config/cms.php
+++ b/config/cms.php
@@ -332,7 +332,7 @@
     |
     */
 
-    'enableCsrfProtection' => false,
+    'enableCsrfProtection' => true,
 
     /*
     |--------------------------------------------------------------------------
diff --git a/modules/cms/classes/Controller.php b/modules/cms/classes/Controller.php
index b2b7852c61..971da3f414 100644
--- a/modules/cms/classes/Controller.php
+++ b/modules/cms/classes/Controller.php
@@ -337,6 +337,7 @@ public function runPage($page, $useAjax = true)
         if (
             $useAjax &&
             ($handler = post('_handler')) &&
+            ($this->verifyCsrfToken()) &&
             ($handlerResponse = $this->runAjaxHandler($handler)) &&
             $handlerResponse !== true
         ) {
@@ -1355,4 +1356,32 @@ protected function setComponentPropertiesFromParams($component, $parameters = []
             }
         }
     }
+
+    //
+    // Security
+    //
+
+    /**
+     * Checks the request data / headers for a valid CSRF token.
+     * Returns false if a valid token is not found. Override this
+     * method to disable the check.
+     * @return bool
+     */
+    protected function verifyCsrfToken()
+    {
+        if (!Config::get('cms.enableCsrfProtection')) {
+            return true;
+        }
+
+        if (in_array(Request::method(), ['HEAD', 'GET', 'OPTIONS'])) {
+            return true;
+        }
+
+        $token = Request::input('_token') ?: Request::header('X-CSRF-TOKEN');
+
+        return hash_equals(
+            Session::token(),
+            $token
+        );
+    }
 }"
CVE-2017-1001000,"From e357195ce303017d517aff944644a7a1232926f7 Mon Sep 17 00:00:00 2001
From: Joe Hoyle <joehoyle@gmail.com>
Date: Thu, 26 Jan 2017 13:39:41 +0000
Subject: [PATCH] REST API: Unify object access handling for simplicity.

Rather than repeating ourselves, unifying the access into a single method keeps everything tidy. While we're at it, add in additional schema handling for common parameters.

See #38792.
Built from https://develop.svn.wordpress.org/trunk@39954


git-svn-id: http://core.svn.wordpress.org/trunk@39891 1a063a9b-81f0-0310-95a4-ce76da25c4cd
---
 wp-includes/rest-api.php                      |  10 +-
 .../class-wp-rest-comments-controller.php     | 101 ++++++++++-------
 ...class-wp-rest-post-statuses-controller.php |   6 +
 .../class-wp-rest-post-types-controller.php   |   6 +
 .../class-wp-rest-posts-controller.php        |  86 ++++++++++----
 .../class-wp-rest-revisions-controller.php    | 107 ++++++++++++++----
 .../class-wp-rest-taxonomies-controller.php   |   6 +
 .../class-wp-rest-terms-controller.php        |  92 +++++++++------
 .../class-wp-rest-users-controller.php        |  86 +++++++++-----
 wp-includes/version.php                       |   2 +-
 10 files changed, 353 insertions(+), 149 deletions(-)

diff --git a/wp-includes/rest-api.php b/wp-includes/rest-api.php
index 980f4c72a37c..4f9e7e607fe5 100644
--- a/wp-includes/rest-api.php
+++ b/wp-includes/rest-api.php
@@ -46,6 +46,13 @@ function register_rest_route( $namespace, $route, $args = array(), $override = f
 		return false;
 	}
 
+	if ( isset( $args['args'] ) ) {
+		$common_args = $args['args'];
+		unset( $args['args'] );
+	} else {
+		$common_args = array();
+	}
+
 	if ( isset( $args['callback'] ) ) {
 		// Upgrade a single set to multiple.
 		$args = array( $args );
@@ -57,12 +64,13 @@ function register_rest_route( $namespace, $route, $args = array(), $override = f
 		'args'            => array(),
 	);
 	foreach ( $args as $key => &$arg_group ) {
-		if ( ! is_numeric( $arg_group ) ) {
+		if ( ! is_numeric( $key ) ) {
 			// Route option, skip here.
 			continue;
 		}
 
 		$arg_group = array_merge( $defaults, $arg_group );
+		$arg_group['args'] = array_merge( $common_args, $arg_group['args'] );
 	}
 
 	$full_route = '/' . trim( $namespace, '/' ) . '/' . trim( $route, '/' );
diff --git a/wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php b/wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php
index d7a34f330190..117529d19cc0 100644
--- a/wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php
+++ b/wp-includes/rest-api/endpoints/class-wp-rest-comments-controller.php
@@ -63,6 +63,12 @@ public function register_routes() {
 		) );
 
 		register_rest_route( $this->namespace, '/' . $this->rest_base . '/(?P<id>[\d]+)', array(
+			'args' => array(
+				'id' => array(
+					'description' => __( 'Unique identifier for the object.' ),
+					'type'        => 'integer',
+				),
+			),
 			array(
 				'methods'  => WP_REST_Server::READABLE,
 				'callback' => array( $this, 'get_item' ),
@@ -299,6 +305,36 @@ public function get_items( $request ) {
 		return $response;
 	}
 
+	/**
+	 * Get the comment, if the ID is valid.
+	 *
+	 * @since 4.7.2
+	 *
+	 * @param int $id Supplied ID.
+	 * @return WP_Comment|WP_Error Comment object if ID is valid, WP_Error otherwise.
+	 */
+	protected function get_comment( $id ) {
+		$error = new WP_Error( 'rest_comment_invalid_id', __( 'Invalid comment ID.' ), array( 'status' => 404 ) );
+		if ( (int) $id <= 0 ) {
+			return $error;
+		}
+
+		$id = (int) $id;
+		$comment = get_comment( $id );
+		if ( empty( $comment ) ) {
+			return $error;
+		}
+
+		if ( ! empty( $comment->comment_post_ID ) ) {
+			$post = get_post( (int) $comment->comment_post_ID );
+			if ( empty( $post ) ) {
+				return new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );
+			}
+		}
+
+		return $comment;
+	}
+
 	/**
 	 * Checks if a given request has access to read the comment.
 	 *
@@ -309,12 +345,9 @@ public function get_items( $request ) {
 	 * @return WP_Error|bool True if the request has read access for the item, error object otherwise.
 	 */
 	public function get_item_permissions_check( $request ) {
-		$id = (int) $request['id'];
-
-		$comment = get_comment( $id );
-
-		if ( ! $comment ) {
-			return true;
+		$comment = $this->get_comment( $request['id'] );
+		if ( is_wp_error( $comment ) ) {
+			return $comment;
 		}
 
 		if ( ! empty( $request['context'] ) && 'edit' === $request['context'] && ! current_user_can( 'moderate_comments' ) ) {
@@ -344,18 +377,9 @@ public function get_item_permissions_check( $request ) {
 	 * @return WP_Error|WP_REST_Response Response object on success, or error object on failure.
 	 */
 	public function get_item( $request ) {
-		$id = (int) $request['id'];
-
-		$comment = get_comment( $id );
-		if ( empty( $comment ) ) {
-			return new WP_Error( 'rest_comment_invalid_id', __( 'Invalid comment ID.' ), array( 'status' => 404 ) );
-		}
-
-		if ( ! empty( $comment->comment_post_ID ) ) {
-			$post = get_post( $comment->comment_post_ID );
-			if ( empty( $post ) ) {
-				return new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );
-			}
+		$comment = $this->get_comment( $request['id'] );
+		if ( is_wp_error( $comment ) ) {
+			return $comment;
 		}
 
 		$data = $this->prepare_item_for_response( $comment, $request );
@@ -630,12 +654,12 @@ public function create_item( $request ) {
 	 * @return WP_Error|bool True if the request has access to update the item, error object otherwise.
 	 */
 	public function update_item_permissions_check( $request ) {
+		$comment = $this->get_comment( $request['id'] );
+		if ( is_wp_error( $comment ) ) {
+			return $comment;
+		}
 
-		$id = (int) $request['id'];
-
-		$comment = get_comment( $id );
-
-		if ( $comment && ! $this->check_edit_permission( $comment ) ) {
+		if ( ! $this->check_edit_permission( $comment ) ) {
 			return new WP_Error( 'rest_cannot_edit', __( 'Sorry, you are not allowed to edit this comment.' ), array( 'status' => rest_authorization_required_code() ) );
 		}
 
@@ -652,14 +676,13 @@ public function update_item_permissions_check( $request ) {
 	 * @return WP_Error|WP_REST_Response Response object on success, or error object on failure.
 	 */
 	public function update_item( $request ) {
-		$id = (int) $request['id'];
-
-		$comment = get_comment( $id );
-
-		if ( empty( $comment ) ) {
-			return new WP_Error( 'rest_comment_invalid_id', __( 'Invalid comment ID.' ), array( 'status' => 404 ) );
+		$comment = $this->get_comment( $request['id'] );
+		if ( is_wp_error( $comment ) ) {
+			return $comment;
 		}
 
+		$id = $comment->comment_ID;
+
 		if ( isset( $request['type'] ) && get_comment_type( $id ) !== $request['type'] ) {
 			return new WP_Error( 'rest_comment_invalid_type', __( 'Sorry, you are not allowed to change the comment type.' ), array( 'status' => 404 ) );
 		}
@@ -750,11 +773,9 @@ public function update_item( $request ) {
 	 * @return WP_Error|bool True if the request has access to delete the item, error object otherwise.
 	 */
 	public function delete_item_permissions_check( $request ) {
-		$id      = (int) $request['id'];
-		$comment = get_comment( $id );
-
-		if ( ! $comment ) {
-			return new WP_Error( 'rest_comment_invalid_id', __( 'Invalid comment ID.' ), array( 'status' => 404 ) );
+		$comment = $this->get_comment( $request['id'] );
+		if ( is_wp_error( $comment ) ) {
+			return $comment;
 		}
 
 		if ( ! $this->check_edit_permission( $comment ) ) {
@@ -773,15 +794,13 @@ public function delete_item_permissions_check( $request ) {
 	 * @return WP_Error|WP_REST_Response Response object on success, or error object on failure.
 	 */
 	public function delete_item( $request ) {
-		$id    = (int) $request['id'];
-		$force = isset( $request['force'] ) ? (bool) $request['force'] : false;
-
-		$comment = get_comment( $id );
-
-		if ( empty( $comment ) ) {
-			return new WP_Error( 'rest_comment_invalid_id', __( 'Invalid comment ID.' ), array( 'status' => 404 ) );
+		$comment = $this->get_comment( $request['id'] );
+		if ( is_wp_error( $comment ) ) {
+			return $comment;
 		}
 
+		$force = isset( $request['force'] ) ? (bool) $request['force'] : false;
+
 		/**
 		 * Filters whether a comment can be trashed.
 		 *
diff --git a/wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php b/wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php
index 0ec4bcd1a13a..59575d566c1c 100644
--- a/wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php
+++ b/wp-includes/rest-api/endpoints/class-wp-rest-post-statuses-controller.php
@@ -48,6 +48,12 @@ public function register_routes() {
 		) );
 
 		register_rest_route( $this->namespace, '/' . $this->rest_base . '/(?P<status>[\w-]+)', array(
+			'args' => array(
+				'status' => array(
+					'description' => __( 'An alphanumeric identifier for the status.' ),
+					'type'        => 'string',
+				),
+			),
 			array(
 				'methods'             => WP_REST_Server::READABLE,
 				'callback'            => array( $this, 'get_item' ),
diff --git a/wp-includes/rest-api/endpoints/class-wp-rest-post-types-controller.php b/wp-includes/rest-api/endpoints/class-wp-rest-post-types-controller.php
index 4da4b5257869..69d221be755f 100644
--- a/wp-includes/rest-api/endpoints/class-wp-rest-post-types-controller.php
+++ b/wp-includes/rest-api/endpoints/class-wp-rest-post-types-controller.php
@@ -48,6 +48,12 @@ public function register_routes() {
 		) );
 
 		register_rest_route( $this->namespace, '/' . $this->rest_base . '/(?P<type>[\w-]+)', array(
+			'args' => array(
+				'type' => array(
+					'description' => __( 'An alphanumeric identifier for the post type.' ),
+					'type'        => 'string',
+				),
+			),
 			array(
 				'methods'  => WP_REST_Server::READABLE,
 				'callback' => array( $this, 'get_item' ),
diff --git a/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php b/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php
index ef34f626e43b..c33b8d1a70d2 100644
--- a/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php
+++ b/wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php
@@ -88,6 +88,12 @@ public function register_routes() {
 			);
 		}
 		register_rest_route( $this->namespace, '/' . $this->rest_base . '/(?P<id>[\d]+)', array(
+			'args' => array(
+				'id' => array(
+					'description' => __( 'Unique identifier for the object.' ),
+					'type'        => 'integer',
+				),
+			),
 			array(
 				'methods'             => WP_REST_Server::READABLE,
 				'callback'            => array( $this, 'get_item' ),
@@ -349,6 +355,28 @@ public function get_items( $request ) {
 		return $response;
 	}
 
+	/**
+	 * Get the post, if the ID is valid.
+	 *
+	 * @since 4.7.2
+	 *
+	 * @param int $id Supplied ID.
+	 * @return WP_Post|WP_Error Post object if ID is valid, WP_Error otherwise.
+	 */
+	protected function get_post( $id ) {
+		$error = new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );
+		if ( (int) $id <= 0 ) {
+			return $error;
+		}
+
+		$post = get_post( (int) $id );
+		if ( empty( $post ) || empty( $post->ID ) || $this->post_type !== $post->post_type ) {
+			return $error;
+		}
+
+		return $post;
+	}
+
 	/**
 	 * Checks if a given request has access to read a post.
 	 *
@@ -359,8 +387,10 @@ public function get_items( $request ) {
 	 * @return bool|WP_Error True if the request has read access for the item, WP_Error object otherwise.
 	 */
 	public function get_item_permissions_check( $request ) {
-
-		$post = get_post( (int) $request['id'] );
+		$post = $this->get_post( $request['id'] );
+		if ( is_wp_error( $post ) ) {
+			return $post;
+		}
 
 		if ( 'edit' === $request['context'] && $post && ! $this->check_update_permission( $post ) ) {
 			return new WP_Error( 'rest_forbidden_context', __( 'Sorry, you are not allowed to edit this post.' ), array( 'status' => rest_authorization_required_code() ) );
@@ -428,18 +458,16 @@ public function can_access_password_content( $post, $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function get_item( $request ) {
-		$id   = (int) $request['id'];
-		$post = get_post( $id );
-
-		if ( empty( $id ) || empty( $post->ID ) || $this->post_type !== $post->post_type ) {
-			return new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );
+		$post = $this->get_post( $request['id'] );
+		if ( is_wp_error( $post ) ) {
+			return $post;
 		}
 
 		$data     = $this->prepare_item_for_response( $post, $request );
 		$response = rest_ensure_response( $data );
 
 		if ( is_post_type_viewable( get_post_type_object( $post->post_type ) ) ) {
-			$response->link_header( 'alternate',  get_permalink( $id ), array( 'type' => 'text/html' ) );
+			$response->link_header( 'alternate',  get_permalink( $post->ID ), array( 'type' => 'text/html' ) );
 		}
 
 		return $response;
@@ -455,6 +483,9 @@ public function get_item( $request ) {
 	 * @return true|WP_Error True if the request has access to create items, WP_Error object otherwise.
 	 */
 	public function create_item_permissions_check( $request ) {
+		if ( ! empty( $request['id'] ) ) {
+			return new WP_Error( 'rest_post_exists', __( 'Cannot create existing post.' ), array( 'status' => 400 ) );
+		}
 
 		$post_type = get_post_type_object( $this->post_type );
 
@@ -591,8 +622,11 @@ public function create_item( $request ) {
 	 * @return true|WP_Error True if the request has access to update the item, WP_Error object otherwise.
 	 */
 	public function update_item_permissions_check( $request ) {
+		$post = $this->get_post( $request['id'] );
+		if ( is_wp_error( $post ) ) {
+			return $post;
+		}
 
-		$post = get_post( $request['id'] );
 		$post_type = get_post_type_object( $this->post_type );
 
 		if ( $post && ! $this->check_update_permission( $post ) ) {
@@ -624,11 +658,9 @@ public function update_item_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function update_item( $request ) {
-		$id   = (int) $request['id'];
-		$post = get_post( $id );
-
-		if ( empty( $id ) || empty( $post->ID ) || $this->post_type !== $post->post_type ) {
-			return new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );
+		$valid_check = $this->get_post( $request['id'] );
+		if ( is_wp_error( $valid_check ) ) {
+			return $valid_check;
 		}
 
 		$post = $this->prepare_item_for_database( $request );
@@ -714,8 +746,10 @@ public function update_item( $request ) {
 	 * @return true|WP_Error True if the request has access to delete the item, WP_Error object otherwise.
 	 */
 	public function delete_item_permissions_check( $request ) {
-
-		$post = get_post( $request['id'] );
+		$post = $this->get_post( $request['id'] );
+		if ( is_wp_error( $post ) ) {
+			return $post;
+		}
 
 		if ( $post && ! $this->check_delete_permission( $post ) ) {
 			return new WP_Error( 'rest_cannot_delete', __( 'Sorry, you are not allowed to delete this post.' ), array( 'status' => rest_authorization_required_code() ) );
@@ -734,15 +768,14 @@ public function delete_item_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function delete_item( $request ) {
-		$id    = (int) $request['id'];
-		$force = (bool) $request['force'];
-
-		$post = get_post( $id );
-
-		if ( empty( $id ) || empty( $post->ID ) || $this->post_type !== $post->post_type ) {
-			return new WP_Error( 'rest_post_invalid_id', __( 'Invalid post ID.' ), array( 'status' => 404 ) );
+		$post = $this->get_post( $request['id'] );
+		if ( is_wp_error( $post ) ) {
+			return $post;
 		}
 
+		$id    = $post->ID;
+		$force = (bool) $request['force'];
+
 		$supports_trash = ( EMPTY_TRASH_DAYS > 0 );
 
 		if ( 'attachment' === $post->post_type ) {
@@ -901,7 +934,12 @@ protected function prepare_item_for_database( $request ) {
 
 		// Post ID.
 		if ( isset( $request['id'] ) ) {
-			$prepared_post->ID = absint( $request['id'] );
+			$existing_post = $this->get_post( $request['id'] );
+			if ( is_wp_error( $existing_post ) ) {
+				return $existing_post;
+			}
+
+			$prepared_post->ID = $existing_post->ID;
 		}
 
 		$schema = $this->get_item_schema();
diff --git a/wp-includes/rest-api/endpoints/class-wp-rest-revisions-controller.php b/wp-includes/rest-api/endpoints/class-wp-rest-revisions-controller.php
index 39ef8fe8185e..c38bd45928e6 100644
--- a/wp-includes/rest-api/endpoints/class-wp-rest-revisions-controller.php
+++ b/wp-includes/rest-api/endpoints/class-wp-rest-revisions-controller.php
@@ -71,6 +71,12 @@ public function __construct( $parent_post_type ) {
 	public function register_routes() {
 
 		register_rest_route( $this->namespace, '/' . $this->parent_base . '/(?P<parent>[\d]+)/' . $this->rest_base, array(
+			'args' => array(
+				'parent' => array(
+					'description' => __( 'The ID for the parent of the object.' ),
+					'type'        => 'integer',
+				),
+			),
 			array(
 				'methods'             => WP_REST_Server::READABLE,
 				'callback'            => array( $this, 'get_items' ),
@@ -81,6 +87,16 @@ public function register_routes() {
 		) );
 
 		register_rest_route( $this->namespace, '/' . $this->parent_base . '/(?P<parent>[\d]+)/' . $this->rest_base . '/(?P<id>[\d]+)', array(
+			'args' => array(
+				'parent' => array(
+					'description' => __( 'The ID for the parent of the object.' ),
+					'type'        => 'integer',
+				),
+				'id' => array(
+					'description' => __( 'Unique identifier for the object.' ),
+					'type'        => 'integer',
+				),
+			),
 			array(
 				'methods'             => WP_REST_Server::READABLE,
 				'callback'            => array( $this, 'get_item' ),
@@ -106,6 +122,28 @@ public function register_routes() {
 
 	}
 
+	/**
+	 * Get the parent post, if the ID is valid.
+	 *
+	 * @since 4.7.2
+	 *
+	 * @param int $id Supplied ID.
+	 * @return WP_Post|WP_Error Post object if ID is valid, WP_Error otherwise.
+	 */
+	protected function get_parent( $parent ) {
+		$error = new WP_Error( 'rest_post_invalid_parent', __( 'Invalid post parent ID.' ), array( 'status' => 404 ) );
+		if ( (int) $parent <= 0 ) {
+			return $error;
+		}
+
+		$parent = get_post( (int) $parent );
+		if ( empty( $parent ) || empty( $parent->ID ) || $this->parent_post_type !== $parent->post_type ) {
+			return $error;
+		}
+
+		return $parent;
+	}
+
 	/**
 	 * Checks if a given request has access to get revisions.
 	 *
@@ -116,11 +154,11 @@ public function register_routes() {
 	 * @return true|WP_Error True if the request has read access, WP_Error object otherwise.
 	 */
 	public function get_items_permissions_check( $request ) {
-
-		$parent = get_post( $request['parent'] );
-		if ( ! $parent ) {
-			return true;
+		$parent = $this->get_parent( $request['parent'] );
+		if ( is_wp_error( $parent ) ) {
+			return $parent;
 		}
+
 		$parent_post_type_obj = get_post_type_object( $parent->post_type );
 		if ( ! current_user_can( $parent_post_type_obj->cap->edit_post, $parent->ID ) ) {
 			return new WP_Error( 'rest_cannot_read', __( 'Sorry, you are not allowed to view revisions of this post.' ), array( 'status' => rest_authorization_required_code() ) );
@@ -129,6 +167,28 @@ public function get_items_permissions_check( $request ) {
 		return true;
 	}
 
+	/**
+	 * Get the revision, if the ID is valid.
+	 *
+	 * @since 4.7.2
+	 *
+	 * @param int $id Supplied ID.
+	 * @return WP_Post|WP_Error Revision post object if ID is valid, WP_Error otherwise.
+	 */
+	protected function get_revision( $id ) {
+		$error = new WP_Error( 'rest_post_invalid_id', __( 'Invalid revision ID.' ), array( 'status' => 404 ) );
+		if ( (int) $id <= 0 ) {
+			return $error;
+		}
+
+		$revision = get_post( (int) $id );
+		if ( empty( $revision ) || empty( $revision->ID ) || 'revision' !== $revision->post_type ) {
+			return $error;
+		}
+
+		return $revision;
+	}
+
 	/**
 	 * Gets a collection of revisions.
 	 *
@@ -139,9 +199,9 @@ public function get_items_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function get_items( $request ) {
-		$parent = get_post( $request['parent'] );
-		if ( ! $request['parent'] || ! $parent || $this->parent_post_type !== $parent->post_type ) {
-			return new WP_Error( 'rest_post_invalid_parent', __( 'Invalid post parent ID.' ), array( 'status' => 404 ) );
+		$parent = $this->get_parent( $request['parent'] );
+		if ( is_wp_error( $parent ) ) {
+			return $parent;
 		}
 
 		$revisions = wp_get_post_revisions( $request['parent'] );
@@ -177,14 +237,14 @@ public function get_item_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function get_item( $request ) {
-		$parent = get_post( $request['parent'] );
-		if ( ! $request['parent'] || ! $parent || $this->parent_post_type !== $parent->post_type ) {
-			return new WP_Error( 'rest_post_invalid_parent', __( 'Invalid post parent ID.' ), array( 'status' => 404 ) );
+		$parent = $this->get_parent( $request['parent'] );
+		if ( is_wp_error( $parent ) ) {
+			return $parent;
 		}
 
-		$revision = get_post( $request['id'] );
-		if ( ! $revision || 'revision' !== $revision->post_type ) {
-			return new WP_Error( 'rest_post_invalid_id', __( 'Invalid revision ID.' ), array( 'status' => 404 ) );
+		$revision = $this->get_revision( $request['id'] );
+		if ( is_wp_error( $revision ) ) {
+			return $revision;
 		}
 
 		$response = $this->prepare_item_for_response( $revision, $request );
@@ -201,18 +261,23 @@ public function get_item( $request ) {
 	 * @return bool|WP_Error True if the request has access to delete the item, WP_Error object otherwise.
 	 */
 	public function delete_item_permissions_check( $request ) {
+		$parent = $this->get_parent( $request['parent'] );
+		if ( is_wp_error( $parent ) ) {
+			return $parent;
+		}
+
+		$revision = $this->get_revision( $request['id'] );
+		if ( is_wp_error( $revision ) ) {
+			return $revision;
+		}
 
 		$response = $this->get_items_permissions_check( $request );
 		if ( ! $response || is_wp_error( $response ) ) {
 			return $response;
 		}
 
-		$post = get_post( $request['id'] );
-		if ( ! $post ) {
-			return new WP_Error( 'rest_post_invalid_id', __( 'Invalid revision ID.' ), array( 'status' => 404 ) );
-		}
 		$post_type = get_post_type_object( 'revision' );
-		return current_user_can( $post_type->cap->delete_post, $post->ID );
+		return current_user_can( $post_type->cap->delete_post, $revision->ID );
 	}
 
 	/**
@@ -225,6 +290,11 @@ public function delete_item_permissions_check( $request ) {
 	 * @return true|WP_Error True on success, or WP_Error object on failure.
 	 */
 	public function delete_item( $request ) {
+		$revision = $this->get_revision( $request['id'] );
+		if ( is_wp_error( $revision ) ) {
+			return $revision;
+		}
+
 		$force = isset( $request['force'] ) ? (bool) $request['force'] : false;
 
 		// We don't support trashing for revisions.
@@ -232,7 +302,6 @@ public function delete_item( $request ) {
 			return new WP_Error( 'rest_trash_not_supported', __( 'Revisions do not support trashing. Set force=true to delete.' ), array( 'status' => 501 ) );
 		}
 
-		$revision = get_post( $request['id'] );
 		$previous = $this->prepare_item_for_response( $revision, $request );
 
 		$result = wp_delete_post( $request['id'], true );
diff --git a/wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php b/wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php
index 0fe91ee43223..b46562c9c493 100644
--- a/wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php
+++ b/wp-includes/rest-api/endpoints/class-wp-rest-taxonomies-controller.php
@@ -48,6 +48,12 @@ public function register_routes() {
 		) );
 
 		register_rest_route( $this->namespace, '/' . $this->rest_base . '/(?P<taxonomy>[\w-]+)', array(
+			'args' => array(
+				'taxonomy' => array(
+					'description'  => __( 'An alphanumeric identifier for the taxonomy.' ),
+					'type'         => 'string',
+				),
+			),
 			array(
 				'methods'         => WP_REST_Server::READABLE,
 				'callback'        => array( $this, 'get_item' ),
diff --git a/wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php b/wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php
index 16882522c588..9d33eaa47599 100644
--- a/wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php
+++ b/wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php
@@ -96,6 +96,12 @@ public function register_routes() {
 		) );
 
 		register_rest_route( $this->namespace, '/' . $this->rest_base . '/(?P<id>[\d]+)', array(
+			'args' => array(
+				'id' => array(
+					'description' => __( 'Unique identifier for the term.' ),
+					'type'        => 'integer',
+				),
+			),
 			array(
 				'methods'             => WP_REST_Server::READABLE,
 				'callback'            => array( $this, 'get_item' ),
@@ -108,7 +114,7 @@ public function register_routes() {
 				'methods'             => WP_REST_Server::EDITABLE,
 				'callback'            => array( $this, 'update_item' ),
 				'permission_callback' => array( $this, 'update_item_permissions_check' ),
-				'args'                 => $this->get_endpoint_args_for_item_schema( WP_REST_Server::EDITABLE ),
+				'args'                => $this->get_endpoint_args_for_item_schema( WP_REST_Server::EDITABLE ),
 			),
 			array(
 				'methods'             => WP_REST_Server::DELETABLE,
@@ -287,6 +293,33 @@ public function get_items( $request ) {
 		return $response;
 	}
 
+	/**
+	 * Get the term, if the ID is valid.
+	 *
+	 * @since 4.7.2
+	 *
+	 * @param int $id Supplied ID.
+	 * @return WP_Term|WP_Error Term object if ID is valid, WP_Error otherwise.
+	 */
+	protected function get_term( $id ) {
+		$error = new WP_Error( 'rest_term_invalid', __( 'Term does not exist.' ), array( 'status' => 404 ) );
+
+		if ( ! $this->check_is_taxonomy_allowed( $this->taxonomy ) ) {
+			return $error;
+		}
+
+		if ( (int) $id <= 0 ) {
+			return $error;
+		}
+
+		$term = get_term( (int) $id, $this->taxonomy );
+		if ( empty( $term ) || $term->taxonomy !== $this->taxonomy ) {
+			return $error;
+		}
+
+		return $term;
+	}
+
 	/**
 	 * Checks if a request has access to read or edit the specified term.
 	 *
@@ -297,11 +330,12 @@ public function get_items( $request ) {
 	 * @return bool|WP_Error True if the request has read access for the item, otherwise false or WP_Error object.
 	 */
 	public function get_item_permissions_check( $request ) {
-		$tax_obj = get_taxonomy( $this->taxonomy );
-		if ( ! $tax_obj || ! $this->check_is_taxonomy_allowed( $this->taxonomy ) ) {
-			return false;
+		$term = $this->get_term( $request['id'] );
+		if ( is_wp_error( $term ) ) {
+			return $term;
 		}
-		if ( 'edit' === $request['context'] && ! current_user_can( 'edit_term', (int) $request['id'] ) ) {
+
+		if ( 'edit' === $request['context'] && ! current_user_can( 'edit_term', $term->term_id ) ) {
 			return new WP_Error( 'rest_forbidden_context', __( 'Sorry, you are not allowed to edit this term.' ), array( 'status' => rest_authorization_required_code() ) );
 		}
 		return true;
@@ -317,13 +351,7 @@ public function get_item_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function get_item( $request ) {
-
-		$term = get_term( (int) $request['id'], $this->taxonomy );
-
-		if ( ! $term || $term->taxonomy !== $this->taxonomy ) {
-			return new WP_Error( 'rest_term_invalid', __( 'Term does not exist.' ), array( 'status' => 404 ) );
-		}
-
+		$term = $this->get_term( $request['id'] );
 		if ( is_wp_error( $term ) ) {
 			return $term;
 		}
@@ -445,15 +473,9 @@ public function create_item( $request ) {
 	 * @return bool|WP_Error True if the request has access to update the item, false or WP_Error object otherwise.
 	 */
 	public function update_item_permissions_check( $request ) {
-
-		if ( ! $this->check_is_taxonomy_allowed( $this->taxonomy ) ) {
-			return false;
-		}
-
-		$term = get_term( (int) $request['id'], $this->taxonomy );
-
-		if ( ! $term ) {
-			return new WP_Error( 'rest_term_invalid', __( 'Term does not exist.' ), array( 'status' => 404 ) );
+		$term = $this->get_term( $request['id'] );
+		if ( is_wp_error( $term ) ) {
+			return $term;
 		}
 
 		if ( ! current_user_can( 'edit_term', $term->term_id ) ) {
@@ -473,6 +495,11 @@ public function update_item_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function update_item( $request ) {
+		$term = $this->get_term( $request['id'] );
+		if ( is_wp_error( $term ) ) {
+			return $term;
+		}
+
 		if ( isset( $request['parent'] ) ) {
 			if ( ! is_taxonomy_hierarchical( $this->taxonomy ) ) {
 				return new WP_Error( 'rest_taxonomy_not_hierarchical', __( 'Can not set parent term, taxonomy is not hierarchical.' ), array( 'status' => 400 ) );
@@ -487,8 +514,6 @@ public function update_item( $request ) {
 
 		$prepared_term = $this->prepare_item_for_database( $request );
 
-		$term = get_term( (int) $request['id'], $this->taxonomy );
-
 		// Only update the term if we haz something to update.
 		if ( ! empty( $prepared_term ) ) {
 			$update = wp_update_term( $term->term_id, $term->taxonomy, wp_slash( (array) $prepared_term ) );
@@ -498,14 +523,14 @@ public function update_item( $request ) {
 			}
 		}
 
-		$term = get_term( (int) $request['id'], $this->taxonomy );
+		$term = get_term( $term->term_id, $this->taxonomy );
 
 		/** This action is documented in wp-includes/rest-api/endpoints/class-wp-rest-terms-controller.php */
 		do_action( ""rest_insert_{$this->taxonomy}"", $term, $request, false );
 
 		$schema = $this->get_item_schema();
 		if ( ! empty( $schema['properties']['meta'] ) && isset( $request['meta'] ) ) {
-			$meta_update = $this->meta->update_value( $request['meta'], (int) $request['id'] );
+			$meta_update = $this->meta->update_value( $request['meta'], $term->term_id );
 
 			if ( is_wp_error( $meta_update ) ) {
 				return $meta_update;
@@ -535,14 +560,9 @@ public function update_item( $request ) {
 	 * @return bool|WP_Error True if the request has access to delete the item, otherwise false or WP_Error object.
 	 */
 	public function delete_item_permissions_check( $request ) {
-		if ( ! $this->check_is_taxonomy_allowed( $this->taxonomy ) ) {
-			return false;
-		}
-
-		$term = get_term( (int) $request['id'], $this->taxonomy );
-
-		if ( ! $term ) {
-			return new WP_Error( 'rest_term_invalid', __( 'Term does not exist.' ), array( 'status' => 404 ) );
+		$term = $this->get_term( $request['id'] );
+		if ( is_wp_error( $term ) ) {
+			return $term;
 		}
 
 		if ( ! current_user_can( 'delete_term', $term->term_id ) ) {
@@ -562,6 +582,10 @@ public function delete_item_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function delete_item( $request ) {
+		$term = $this->get_term( $request['id'] );
+		if ( is_wp_error( $term ) ) {
+			return $term;
+		}
 
 		$force = isset( $request['force'] ) ? (bool) $request['force'] : false;
 
@@ -570,8 +594,6 @@ public function delete_item( $request ) {
 			return new WP_Error( 'rest_trash_not_supported', __( 'Terms do not support trashing. Set force=true to delete.' ), array( 'status' => 501 ) );
 		}
 
-		$term = get_term( (int) $request['id'], $this->taxonomy );
-
 		$request->set_param( 'context', 'view' );
 
 		$previous = $this->prepare_item_for_response( $term, $request );
diff --git a/wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php b/wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php
index 4f6c378a1173..802eb649c30a 100644
--- a/wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php
+++ b/wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php
@@ -65,6 +65,12 @@ public function register_routes() {
 		) );
 
 		register_rest_route( $this->namespace, '/' . $this->rest_base . '/(?P<id>[\d]+)', array(
+			'args' => array(
+				'id' => array(
+					'description' => __( 'Unique identifier for the user.' ),
+					'type'        => 'integer',
+				),
+			),
 			array(
 				'methods'             => WP_REST_Server::READABLE,
 				'callback'            => array( $this, 'get_item' ),
@@ -326,6 +332,28 @@ public function get_items( $request ) {
 		return $response;
 	}
 
+	/**
+	 * Get the user, if the ID is valid.
+	 *
+	 * @since 4.7.2
+	 *
+	 * @param int $id Supplied ID.
+	 * @return WP_User|WP_Error True if ID is valid, WP_Error otherwise.
+	 */
+	protected function get_user( $id ) {
+		$error = new WP_Error( 'rest_user_invalid_id', __( 'Invalid user ID.' ), array( 'status' => 404 ) );
+		if ( (int) $id <= 0 ) {
+			return $error;
+		}
+
+		$user = get_userdata( (int) $id );
+		if ( empty( $user ) || ! $user->exists() ) {
+			return $error;
+		}
+
+		return $user;
+	}
+
 	/**
 	 * Checks if a given request has access to read a user.
 	 *
@@ -336,22 +364,20 @@ public function get_items( $request ) {
 	 * @return true|WP_Error True if the request has read access for the item, otherwise WP_Error object.
 	 */
 	public function get_item_permissions_check( $request ) {
+		$user = $this->get_user( $request['id'] );
+		if ( is_wp_error( $user ) ) {
+			return $user;
+		}
 
-		$id = (int) $request['id'];
-		$user = get_userdata( $id );
 		$types = get_post_types( array( 'show_in_rest' => true ), 'names' );
 
-		if ( empty( $id ) || empty( $user->ID ) ) {
-			return new WP_Error( 'rest_user_invalid_id', __( 'Invalid user ID.' ), array( 'status' => 404 ) );
-		}
-
-		if ( get_current_user_id() === $id ) {
+		if ( get_current_user_id() === $user->ID ) {
 			return true;
 		}
 
 		if ( 'edit' === $request['context'] && ! current_user_can( 'list_users' ) ) {
 			return new WP_Error( 'rest_user_cannot_view', __( 'Sorry, you are not allowed to list users.' ), array( 'status' => rest_authorization_required_code() ) );
-		} elseif ( ! count_user_posts( $id, $types ) && ! current_user_can( 'edit_user', $id ) && ! current_user_can( 'list_users' ) ) {
+		} elseif ( ! count_user_posts( $user->ID, $types ) && ! current_user_can( 'edit_user', $user->ID ) && ! current_user_can( 'list_users' ) ) {
 			return new WP_Error( 'rest_user_cannot_view', __( 'Sorry, you are not allowed to list users.' ), array( 'status' => rest_authorization_required_code() ) );
 		}
 
@@ -368,11 +394,9 @@ public function get_item_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function get_item( $request ) {
-		$id   = (int) $request['id'];
-		$user = get_userdata( $id );
-
-		if ( empty( $id ) || empty( $user->ID ) ) {
-			return new WP_Error( 'rest_user_invalid_id', __( 'Invalid user ID.' ), array( 'status' => 404 ) );
+		$user = $this->get_user( $request['id'] );
+		if ( is_wp_error( $user ) ) {
+			return $user;
 		}
 
 		$user = $this->prepare_item_for_response( $user, $request );
@@ -542,10 +566,12 @@ public function create_item( $request ) {
 	 * @return true|WP_Error True if the request has access to update the item, WP_Error object otherwise.
 	 */
 	public function update_item_permissions_check( $request ) {
+		$user = $this->get_user( $request['id'] );
+		if ( is_wp_error( $user ) ) {
+			return $user;
+		}
 
-		$id = (int) $request['id'];
-
-		if ( ! current_user_can( 'edit_user', $id ) ) {
+		if ( ! current_user_can( 'edit_user', $user->ID ) ) {
 			return new WP_Error( 'rest_cannot_edit', __( 'Sorry, you are not allowed to edit this user.' ), array( 'status' => rest_authorization_required_code() ) );
 		}
 
@@ -566,8 +592,12 @@ public function update_item_permissions_check( $request ) {
 	 * @return WP_REST_Response|WP_Error Response object on success, or WP_Error object on failure.
 	 */
 	public function update_item( $request ) {
-		$id   = (int) $request['id'];
-		$user = get_userdata( $id );
+		$user = $this->get_user( $request['id'] );
+		if ( is_wp_error( $user ) ) {
+			return $user;
+		}
+
+		$id = $user->ID;
 
 		if ( ! $user ) {
 			return new WP_Error( 'rest_user_invalid_id', __( 'Invalid user ID.' ), array( 'status' => 404 ) );
@@ -682,10 +712,12 @@ function update_current_item( $request ) {
 	 * @return true|WP_Error True if the request has access to delete the item, WP_Error object otherwise.
 	 */
 	public function delete_item_permissions_check( $request ) {
+		$user = $this->get_user( $request['id'] );
+		if ( is_wp_error( $user ) ) {
+			return $user;
+		}
 
-		$id = (int) $request['id'];
-
-		if ( ! current_user_can( 'delete_user', $id ) ) {
+		if ( ! current_user_can( 'delete_user', $user->ID ) ) {
 			return new WP_Error( 'rest_user_cannot_delete', __( 'Sorry, you are not allowed to delete this user.' ), array( 'status' => rest_authorization_required_code() ) );
 		}
 
@@ -706,8 +738,12 @@ public function delete_item( $request ) {
 		if ( is_multisite() ) {
 			return new WP_Error( 'rest_cannot_delete', __( 'The user cannot be deleted.' ), array( 'status' => 501 ) );
 		}
+		$user = $this->get_user( $request['id'] );
+		if ( is_wp_error( $user ) ) {
+			return $user;
+		}
 
-		$id       = (int) $request['id'];
+		$id       = $user->ID;
 		$reassign = false === $request['reassign'] ? null : absint( $request['reassign'] );
 		$force    = isset( $request['force'] ) ? (bool) $request['force'] : false;
 
@@ -716,12 +752,6 @@ public function delete_item( $request ) {
 			return new WP_Error( 'rest_trash_not_supported', __( 'Users do not support trashing. Set force=true to delete.' ), array( 'status' => 501 ) );
 		}
 
-		$user = get_userdata( $id );
-
-		if ( ! $user ) {
-			return new WP_Error( 'rest_user_invalid_id', __( 'Invalid user ID.' ), array( 'status' => 404 ) );
-		}
-
 		if ( ! empty( $reassign ) ) {
 			if ( $reassign === $id || ! get_userdata( $reassign ) ) {
 				return new WP_Error( 'rest_user_invalid_reassign', __( 'Invalid user ID for reassignment.' ), array( 'status' => 400 ) );
diff --git a/wp-includes/version.php b/wp-includes/version.php
index fc69fd2007b5..c26e7a0fee7f 100644
--- a/wp-includes/version.php
+++ b/wp-includes/version.php
@@ -4,7 +4,7 @@
  *
  * @global string $wp_version
  */
-$wp_version = '4.8-alpha-39952';
+$wp_version = '4.8-alpha-39954';
 
 /**
  * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema."
CVE-2017-5207,"From 5d43fdcd215203868d440ffc42036f5f5ffc89fc Mon Sep 17 00:00:00 2001
From: netblue30 <netblue30@yahoo.com>
Date: Fri, 6 Jan 2017 22:45:11 -0500
Subject: [PATCH] security fix

---
 RELNOTES                 | 1 +
 src/firejail/bandwidth.c | 9 +--------
 2 files changed, 2 insertions(+), 8 deletions(-)

diff --git a/RELNOTES b/RELNOTES
index 969eecb2439..b9a982d776a 100644
--- a/RELNOTES
+++ b/RELNOTES
@@ -1,5 +1,6 @@
 firejail (0.9.45) baseline; urgency=low
   * development version, work in progress
+  * security: --bandwidth root shel found by Martin Carpenter
   * security: disabled --allow-debuggers when running on kernel
     versions prior to 4.8; a kernel bug in ptrace system call
     allows a full bypass of seccomp filter; problem reported by Lizzie Dixon
diff --git a/src/firejail/bandwidth.c b/src/firejail/bandwidth.c
index 5e9002f228d..84c9dc53a33 100644
--- a/src/firejail/bandwidth.c
+++ b/src/firejail/bandwidth.c
@@ -435,15 +435,8 @@ void bandwidth_pid(pid_t pid, const char *command, const char *dev, int down, in
 	if (setregid(0, 0))
 		errExit(""setregid"");
 
-	if (!cfg.shell)
-		cfg.shell = guess_shell();
-	if (!cfg.shell) {
-		fprintf(stderr, ""Error: no POSIX shell found, please use --shell command line option\n"");
-		exit(1);
-	}
-
 	char *arg[4];
-	arg[0] = cfg.shell;
+	arg[0] = ""/bin/sh"";
 	arg[1] = ""-c"";
 	arg[2] = cmd;
 	arg[3] = NULL;"
CVE-2017-7542,"From 6399f1fae4ec29fab5ec76070435555e256ca3a6 Mon Sep 17 00:00:00 2001
From: Sabrina Dubroca <sd@queasysnail.net>
Date: Wed, 19 Jul 2017 22:28:55 +0200
Subject: [PATCH] ipv6: avoid overflow of offset in ip6_find_1stfragopt

In some cases, offset can overflow and can cause an infinite loop in
ip6_find_1stfragopt(). Make it unsigned int to prevent the overflow, and
cap it at IPV6_MAXPLEN, since packets larger than that should be invalid.

This problem has been here since before the beginning of git history.

Signed-off-by: Sabrina Dubroca <sd@queasysnail.net>
Acked-by: Hannes Frederic Sowa <hannes@stressinduktion.org>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 net/ipv6/output_core.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/net/ipv6/output_core.c b/net/ipv6/output_core.c
index e9065b8d3af852..abb2c307fbe833 100644
--- a/net/ipv6/output_core.c
+++ b/net/ipv6/output_core.c
@@ -78,7 +78,7 @@ EXPORT_SYMBOL(ipv6_select_ident);
 
 int ip6_find_1stfragopt(struct sk_buff *skb, u8 **nexthdr)
 {
-	u16 offset = sizeof(struct ipv6hdr);
+	unsigned int offset = sizeof(struct ipv6hdr);
 	unsigned int packet_len = skb_tail_pointer(skb) -
 		skb_network_header(skb);
 	int found_rhdr = 0;
@@ -86,6 +86,7 @@ int ip6_find_1stfragopt(struct sk_buff *skb, u8 **nexthdr)
 
 	while (offset <= packet_len) {
 		struct ipv6_opt_hdr *exthdr;
+		unsigned int len;
 
 		switch (**nexthdr) {
 
@@ -111,7 +112,10 @@ int ip6_find_1stfragopt(struct sk_buff *skb, u8 **nexthdr)
 
 		exthdr = (struct ipv6_opt_hdr *)(skb_network_header(skb) +
 						 offset);
-		offset += ipv6_optlen(exthdr);
+		len = ipv6_optlen(exthdr);
+		if (len + offset >= IPV6_MAXPLEN)
+			return -EINVAL;
+		offset += len;
 		*nexthdr = &exthdr->nexthdr;
 	}"
OSV-2017-10,"From d9208207e458a973e481ded5f7c2cf765dd7ea4c Mon Sep 17 00:00:00 2001
From: Stefan Profanter <git@s.profanter.me>
Date: Thu, 9 Nov 2017 16:42:21 +0100
Subject: [PATCH] Fix #1331 heap use after free

Immediately send UA_Subscription_answerPublishRequestsNoSubscription
before the session is deleted
---
 src/server/ua_services_subscription.c | 7 ++-----
 1 file changed, 2 insertions(+), 5 deletions(-)

diff --git a/src/server/ua_services_subscription.c b/src/server/ua_services_subscription.c
index b4a5f63666d..ce0dea7f302 100644
--- a/src/server/ua_services_subscription.c
+++ b/src/server/ua_services_subscription.c
@@ -516,11 +516,8 @@ Service_DeleteSubscriptions(UA_Server *server, UA_Session *session,
     if(LIST_FIRST(&session->serverSubscriptions))
         return;
 
-    /* Send remaining publish responses in a delayed callback if the last
-     * subscription was removed */
-    UA_Server_delayedCallback(server, (UA_ServerCallback)
-                              UA_Subscription_answerPublishRequestsNoSubscription,
-                              session);
+    /* Send remaining publish responses if the last subscription was removed */
+    UA_Subscription_answerPublishRequestsNoSubscription(server, session);
 }
 
 static void"
CVE-2017-7448,"From 7789d99ac156adfd7bbf66e7824bd3e948a74cf7 Mon Sep 17 00:00:00 2001
From: Daniel Reiter Horn <danielrh@users.sourceforge.net>
Date: Wed, 5 Apr 2017 00:04:19 -0700
Subject: [PATCH] check divide by zero, fixing #86

---
 src/lepton/uncompressed_components.hh | 10 ++++++++--
 src/vp8/model/model.hh                |  6 ++++--
 2 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/src/lepton/uncompressed_components.hh b/src/lepton/uncompressed_components.hh
index 6fc6602c..e9341c05 100644
--- a/src/lepton/uncompressed_components.hh
+++ b/src/lepton/uncompressed_components.hh
@@ -119,9 +119,15 @@ public:
             int64_t max_cmp_bc = max_number_of_blocks;
             max_cmp_bc *= header_[cmp].info_.bcv;
             max_cmp_bc *= header_[cmp].info_.bch;
-            max_cmp_bc /= total_req_blocks;
+            if (total_req_blocks) {
+                max_cmp_bc /= total_req_blocks;
+            }
             if (bc_allocated > max_cmp_bc) {
-                bc_allocated = max_cmp_bc - (max_cmp_bc % header_[cmp].info_.bch);
+                int rem = 0;
+                if (header_[cmp].info_.bch) {
+                    rem = (max_cmp_bc % header_[cmp].info_.bch);
+                }
+                bc_allocated = max_cmp_bc - rem;
             }
             if (cmp == desired_cmp) {
                 framebuffer->init(header_[cmp].info_.bch,
diff --git a/src/vp8/model/model.hh b/src/vp8/model/model.hh
index 0f5549f2..3bc0bd17 100644
--- a/src/vp8/model/model.hh
+++ b/src/vp8/model/model.hh
@@ -254,8 +254,10 @@ public:
             1020, 854, 854, 838, 1020, 838, 1020, 838
         };
         for (int coord = 0; coord < 64; ++coord) {
-            freqmax_[(int)color][coord] = (freqmax[coord] + quantization_table_[(int)color][coord] - 1)
-                / quantization_table_[(int)color][coord];
+            freqmax_[(int)color][coord] = (freqmax[coord] + quantization_table_[(int)color][coord] - 1);
+            if (quantization_table_[(int)color][coord]) {
+                freqmax_[(int)color][coord] /= quantization_table_[(int)color][coord];
+            }
             uint8_t max_len = uint16bit_length(freqmax_[(int)color][coord]);
             bitlen_freqmax_[(int)color][coord] = max_len;
             if (max_len > (int)RESIDUAL_NOISE_FLOOR) {"
CVE-2017-17806,"From af3ff8045bbf3e32f1a448542e73abb4c8ceb6f1 Mon Sep 17 00:00:00 2001
From: Eric Biggers <ebiggers@google.com>
Date: Tue, 28 Nov 2017 18:01:38 -0800
Subject: [PATCH] crypto: hmac - require that the underlying hash algorithm is
 unkeyed

Because the HMAC template didn't check that its underlying hash
algorithm is unkeyed, trying to use ""hmac(hmac(sha3-512-generic))""
through AF_ALG or through KEYCTL_DH_COMPUTE resulted in the inner HMAC
being used without having been keyed, resulting in sha3_update() being
called without sha3_init(), causing a stack buffer overflow.

This is a very old bug, but it seems to have only started causing real
problems when SHA-3 support was added (requires CONFIG_CRYPTO_SHA3)
because the innermost hash's state is ->import()ed from a zeroed buffer,
and it just so happens that other hash algorithms are fine with that,
but SHA-3 is not.  However, there could be arch or hardware-dependent
hash algorithms also affected; I couldn't test everything.

Fix the bug by introducing a function crypto_shash_alg_has_setkey()
which tests whether a shash algorithm is keyed.  Then update the HMAC
template to require that its underlying hash algorithm is unkeyed.

Here is a reproducer:

    #include <linux/if_alg.h>
    #include <sys/socket.h>

    int main()
    {
        int algfd;
        struct sockaddr_alg addr = {
            .salg_type = ""hash"",
            .salg_name = ""hmac(hmac(sha3-512-generic))"",
        };
        char key[4096] = { 0 };

        algfd = socket(AF_ALG, SOCK_SEQPACKET, 0);
        bind(algfd, (const struct sockaddr *)&addr, sizeof(addr));
        setsockopt(algfd, SOL_ALG, ALG_SET_KEY, key, sizeof(key));
    }

Here was the KASAN report from syzbot:

    BUG: KASAN: stack-out-of-bounds in memcpy include/linux/string.h:341  [inline]
    BUG: KASAN: stack-out-of-bounds in sha3_update+0xdf/0x2e0  crypto/sha3_generic.c:161
    Write of size 4096 at addr ffff8801cca07c40 by task syzkaller076574/3044

    CPU: 1 PID: 3044 Comm: syzkaller076574 Not tainted 4.14.0-mm1+ #25
    Hardware name: Google Google Compute Engine/Google Compute Engine, BIOS  Google 01/01/2011
    Call Trace:
      __dump_stack lib/dump_stack.c:17 [inline]
      dump_stack+0x194/0x257 lib/dump_stack.c:53
      print_address_description+0x73/0x250 mm/kasan/report.c:252
      kasan_report_error mm/kasan/report.c:351 [inline]
      kasan_report+0x25b/0x340 mm/kasan/report.c:409
      check_memory_region_inline mm/kasan/kasan.c:260 [inline]
      check_memory_region+0x137/0x190 mm/kasan/kasan.c:267
      memcpy+0x37/0x50 mm/kasan/kasan.c:303
      memcpy include/linux/string.h:341 [inline]
      sha3_update+0xdf/0x2e0 crypto/sha3_generic.c:161
      crypto_shash_update+0xcb/0x220 crypto/shash.c:109
      shash_finup_unaligned+0x2a/0x60 crypto/shash.c:151
      crypto_shash_finup+0xc4/0x120 crypto/shash.c:165
      hmac_finup+0x182/0x330 crypto/hmac.c:152
      crypto_shash_finup+0xc4/0x120 crypto/shash.c:165
      shash_digest_unaligned+0x9e/0xd0 crypto/shash.c:172
      crypto_shash_digest+0xc4/0x120 crypto/shash.c:186
      hmac_setkey+0x36a/0x690 crypto/hmac.c:66
      crypto_shash_setkey+0xad/0x190 crypto/shash.c:64
      shash_async_setkey+0x47/0x60 crypto/shash.c:207
      crypto_ahash_setkey+0xaf/0x180 crypto/ahash.c:200
      hash_setkey+0x40/0x90 crypto/algif_hash.c:446
      alg_setkey crypto/af_alg.c:221 [inline]
      alg_setsockopt+0x2a1/0x350 crypto/af_alg.c:254
      SYSC_setsockopt net/socket.c:1851 [inline]
      SyS_setsockopt+0x189/0x360 net/socket.c:1830
      entry_SYSCALL_64_fastpath+0x1f/0x96

Reported-by: syzbot <syzkaller@googlegroups.com>
Cc: <stable@vger.kernel.org>
Signed-off-by: Eric Biggers <ebiggers@google.com>
Signed-off-by: Herbert Xu <herbert@gondor.apana.org.au>
---
 crypto/hmac.c                  | 6 +++++-
 crypto/shash.c                 | 5 +++--
 include/crypto/internal/hash.h | 8 ++++++++
 3 files changed, 16 insertions(+), 3 deletions(-)

diff --git a/crypto/hmac.c b/crypto/hmac.c
index 92871dc2a63ec6..e74730224f0a5f 100644
--- a/crypto/hmac.c
+++ b/crypto/hmac.c
@@ -195,11 +195,15 @@ static int hmac_create(struct crypto_template *tmpl, struct rtattr **tb)
 	salg = shash_attr_alg(tb[1], 0, 0);
 	if (IS_ERR(salg))
 		return PTR_ERR(salg);
+	alg = &salg->base;
 
+	/* The underlying hash algorithm must be unkeyed */
 	err = -EINVAL;
+	if (crypto_shash_alg_has_setkey(salg))
+		goto out_put_alg;
+
 	ds = salg->digestsize;
 	ss = salg->statesize;
-	alg = &salg->base;
 	if (ds > alg->cra_blocksize ||
 	    ss < alg->cra_blocksize)
 		goto out_put_alg;
diff --git a/crypto/shash.c b/crypto/shash.c
index 325a14da58278f..e849d3ee2e2728 100644
--- a/crypto/shash.c
+++ b/crypto/shash.c
@@ -25,11 +25,12 @@
 
 static const struct crypto_type crypto_shash_type;
 
-static int shash_no_setkey(struct crypto_shash *tfm, const u8 *key,
-			   unsigned int keylen)
+int shash_no_setkey(struct crypto_shash *tfm, const u8 *key,
+		    unsigned int keylen)
 {
 	return -ENOSYS;
 }
+EXPORT_SYMBOL_GPL(shash_no_setkey);
 
 static int shash_setkey_unaligned(struct crypto_shash *tfm, const u8 *key,
 				  unsigned int keylen)
diff --git a/include/crypto/internal/hash.h b/include/crypto/internal/hash.h
index f0b44c16e88f24..c2bae8da642cba 100644
--- a/include/crypto/internal/hash.h
+++ b/include/crypto/internal/hash.h
@@ -82,6 +82,14 @@ int ahash_register_instance(struct crypto_template *tmpl,
 			    struct ahash_instance *inst);
 void ahash_free_instance(struct crypto_instance *inst);
 
+int shash_no_setkey(struct crypto_shash *tfm, const u8 *key,
+		    unsigned int keylen);
+
+static inline bool crypto_shash_alg_has_setkey(struct shash_alg *alg)
+{
+	return alg->setkey != shash_no_setkey;
+}
+
 int crypto_init_ahash_spawn(struct crypto_ahash_spawn *spawn,
 			    struct hash_alg_common *alg,
 			    struct crypto_instance *inst);"
CVE-2017-13046,"From d10a0f980fe8f9407ab1ffbd612641433ebe175e Mon Sep 17 00:00:00 2001
From: Denis Ovsienko <denis@ovsienko.info>
Date: Thu, 3 Aug 2017 22:34:44 +0100
Subject: [PATCH] CVE-2017-13046/BGP: fix an existing bounds check for PMSI
 Tunnel

This fixes a buffer over-read discovered by Bhargava Shastry,
SecT/TU Berlin.

Add a test using the capture file supplied by the reporter(s).
---
 print-bgp.c                     |   2 +-
 tests/TESTLIST                  |   1 +
 tests/bgp_pmsi_tunnel-oobr.out  |  11 +++++++++++
 tests/bgp_pmsi_tunnel-oobr.pcap | Bin 0 -> 968 bytes
 4 files changed, 13 insertions(+), 1 deletion(-)
 create mode 100644 tests/bgp_pmsi_tunnel-oobr.out
 create mode 100644 tests/bgp_pmsi_tunnel-oobr.pcap

diff --git a/print-bgp.c b/print-bgp.c
index 04f0c3fa5..d7a336a46 100644
--- a/print-bgp.c
+++ b/print-bgp.c
@@ -2123,11 +2123,11 @@ bgp_attr_print(netdissect_options *ndo,
         {
                 uint8_t tunnel_type, flags;
 
+                ND_TCHECK2(tptr[0], 5);
                 tunnel_type = *(tptr+1);
                 flags = *tptr;
                 tlen = len;
 
-                ND_TCHECK2(tptr[0], 5);
                 ND_PRINT((ndo, ""\n\t    Tunnel-type %s (%u), Flags [%s], MPLS Label %u"",
                        tok2str(bgp_pmsi_tunnel_values, ""Unknown"", tunnel_type),
                        tunnel_type,
diff --git a/tests/TESTLIST b/tests/TESTLIST
index 687e92f37..7532e2403 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -563,6 +563,7 @@ hncp_dhcpv6data-oobr	hncp_dhcpv6data-oobr.pcap	hncp_dhcpv6data-oobr.out -v -c1
 # Same comments apply to the case below.
 hncp_dhcpv4data-oobr	hncp_dhcpv4data-oobr.pcap	hncp_dhcpv4data-oobr.out -v -c1
 vqp-oobr		vqp-oobr.pcap			vqp-oobr.out		-v -c1
+bgp_pmsi_tunnel-oobr	bgp_pmsi_tunnel-oobr.pcap	bgp_pmsi_tunnel-oobr.out -v -c1
 
 # bad packets from Katie Holly
 mlppp-oobr		mlppp-oobr.pcap			mlppp-oobr.out
diff --git a/tests/bgp_pmsi_tunnel-oobr.out b/tests/bgp_pmsi_tunnel-oobr.out
new file mode 100644
index 000000000..3b73c7a64
--- /dev/null
+++ b/tests/bgp_pmsi_tunnel-oobr.out
@@ -0,0 +1,11 @@
+IP (tos 0x0, ttl 254, id 40207, offset 0, flags [+, DF, rsvd], proto TCP (6), length 296, bad cksum 8e15 (->3eaa)!)
+    241.0.32.19.179 > 239.0.0.1.0: Flags [none], seq 2146695561:2146695813, win 56026, options [unknown-161,eol], length 252: BGP
+	Update Message (2), length: 45
+	  Withdrawn routes: 3 bytes
+	  Attribute Set (128), length: 7, Flags [OTPE+f]: 
+	    Origin AS: 4067
+	      Origin (1), length: 1EGP
+	      Unknown Attribute (19), length: 1, Flags [+1]: 
+	    no Attribute 19 decoder
+	    0x0000:  01
+	      PMSI Tunnel (22), length: 1, Flags [+1]: [|BGP]
diff --git a/tests/bgp_pmsi_tunnel-oobr.pcap b/tests/bgp_pmsi_tunnel-oobr.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..33cf660ce01808405e27a12974e51d8be673ed0d
GIT binary patch
literal 968
zcmcJNF-SsD6o&u%6q9(OU>ejS5+Q-q-q6(G7!fo&7&Hd$y*t*Tw6ug^2rUkhf#4EK
zOMB5^ix9Pj7?g;;{(DV(g((FcxQ~0!JLmrAeD~a3mQD<~foTMg$Lux$!L_y{7sBGf
z+vYw5(*v^sOQ2TG6^dT0Ld3HE2HrgBP!o~hlS(=VtXBH~LZ*|b*XQoySzbM9e>21l
zxZLo0O18uV;J=5U1-Zfk!f4tl+I;Fv-M<K!9myJ?q*1%g!wbkM)FQb;Ru%FZ8xoiq
zYWoB4i{0UkG6nd`*Xu5}9_2ZzIyXCsqrED{GP~+~O#jv<5P@w&mCKAnI5K9Im~lGD
zu$W<Y8R}xFjtjuxF7TlNsr(iLs4kO<%JLPkK^OgwsxC%W1-=)Y8d~CKjg>!W=+65Z
zl+)JYTdH1YQhkb#y@TR0qEEw<s0^>+H}u7L`s%&@o&Fdy8q9zUL3I_WPjX-X_sKnL
bf@%siSyJYvHzAswrO7)cq}-d${tLYW>e&vA

literal 0
HcmV?d00001"
CVE-2017-13725,"From c7c515ee03c285cc51376328de4ae9d549e501a5 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Wed, 15 Feb 2017 00:37:11 -0800
Subject: [PATCH] CVE-2017-13725/IPv6 R.H.: Add a capture file.

This is from Kamil Frankowicz testing an existing fix.

This is a test for the print-rt6.c fix I made after inspecting the code.
---
 tests/TESTLIST             |   1 +
 tests/hoobr_rt6_print.out  |   3 +++
 tests/hoobr_rt6_print.pcap | Bin 0 -> 732 bytes
 3 files changed, 4 insertions(+)
 create mode 100644 tests/hoobr_rt6_print.out
 create mode 100644 tests/hoobr_rt6_print.pcap

diff --git a/tests/TESTLIST b/tests/TESTLIST
index eaaeae1bd..0c4d45a11 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -457,6 +457,7 @@ hoobr_juniper3		hoobr_juniper3.pcap		hoobr_juniper3.out
 hoobr_parse_field	hoobr_parse_field.pcap		hoobr_parse_field.out
 hoobr_chdlc_print	hoobr_chdlc_print.pcap		hoobr_chdlc_print.out
 hoobr_lookup_nsap	hoobr_lookup_nsap.pcap		hoobr_lookup_nsap.out
+hoobr_rt6_print		hoobr_rt6_print.pcap		hoobr_rt6_print.out
 
 # bad packets from Wilfried Kirsch
 slip-bad-direction	slip-bad-direction.pcap		slip-bad-direction.out	-ve
diff --git a/tests/hoobr_rt6_print.out b/tests/hoobr_rt6_print.out
new file mode 100644
index 000000000..4fb3c4a82
--- /dev/null
+++ b/tests/hoobr_rt6_print.out
@@ -0,0 +1,3 @@
+unknown ip 3
+unknown ip 3
+IP6 3030:3030:3030:3030:3030:3030:3030:3030 > 3030:3030:3030:3030:3030:3030:3030:3030: [|srcrt]
diff --git a/tests/hoobr_rt6_print.pcap b/tests/hoobr_rt6_print.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..d2d9507f5f2cf432c3f2a6a2879399419bb6aedc
GIT binary patch
literal 732
zcmca|c+)~A1{MYbD9~hJV0gj+=NcF>B5`1fMrjg4U^E0t2rTSMfoT#XkpPy}#;yj7
FC;*8ki0=RZ

literal 0
HcmV?d00001"
CVE-2017-15284,"From 3bbbbf3da469f457881b5af902eb0b89b95189a2 Mon Sep 17 00:00:00 2001
From: Samuel Georges <sam@daftspunk.com>
Date: Tue, 10 Oct 2017 10:12:33 +1100
Subject: [PATCH] Remove SVG from image types

SVG files should not be treated as images - especially when coming to uploads. An SVG file can contain arbitrary HTML data as well as event handlers in native elements
Refs: https://html5sec.org/#svg
Original report by: Ishaq Mohammed
---
 src/Filesystem/Definitions.php | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)

diff --git a/src/Filesystem/Definitions.php b/src/Filesystem/Definitions.php
index baa4d9812..63660e464 100644
--- a/src/Filesystem/Definitions.php
+++ b/src/Filesystem/Definitions.php
@@ -182,8 +182,7 @@ protected function imageExtensions()
             'bmp',
             'png',
             'webp',
-            'gif',
-            'svg'
+            'gif'
         ];
     }"
CVE-2017-12858,"From 2217022b7d1142738656d891e00b3d2d9179b796 Mon Sep 17 00:00:00 2001
From: Thomas Klausner <tk@giga.or.at>
Date: Mon, 14 Aug 2017 10:55:44 +0200
Subject: [PATCH] Fix double free().

Found by Brian 'geeknik' Carpenter using AFL.
---
 THANKS           | 1 +
 lib/zip_dirent.c | 3 ---
 2 files changed, 1 insertion(+), 3 deletions(-)

diff --git a/THANKS b/THANKS
index be0cca939..a80ee1def 100644
--- a/THANKS
+++ b/THANKS
@@ -12,6 +12,7 @@ BALATON Zoltan <balaton@eik.bme.hu>
 Benjamin Gilbert <bgilbert@backtick.net>
 Boaz Stolk <bstolk@aweta.nl>
 Bogdan <bogiebog@gmail.com>
+Brian 'geeknik' Carpenter <geeknik@protonmail.ch>
 Chris Nehren <cnehren+libzip@pobox.com>
 Coverity <info@coverity.com>
 Dane Springmeyer <dane.springmeyer@gmail.com>
diff --git a/lib/zip_dirent.c b/lib/zip_dirent.c
index a369900ef..e5a7cc9df 100644
--- a/lib/zip_dirent.c
+++ b/lib/zip_dirent.c
@@ -579,9 +579,6 @@ _zip_dirent_read(zip_dirent_t *zde, zip_source_t *src, zip_buffer_t *buffer, boo
     }
 
     if (!_zip_dirent_process_winzip_aes(zde, error)) {
-	if (!from_buffer) {
-	    _zip_buffer_free(buffer);
-	}
 	return -1;
     }"
CVE-2017-15132,"From 1a29ed2f96da1be22fa5a4d96c7583aa81b8b060 Mon Sep 17 00:00:00 2001
From: Timo Sirainen <timo.sirainen@dovecot.fi>
Date: Mon, 18 Dec 2017 16:50:51 +0200
Subject: [PATCH] lib-auth: Fix memory leak in auth_client_request_abort()

This caused memory leaks when authentication was aborted. For example
with IMAP:

a AUTHENTICATE PLAIN
*

Broken by 9137c55411aa39d41c1e705ddc34d5bd26c65021
---
 src/lib-auth/auth-client-request.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/src/lib-auth/auth-client-request.c b/src/lib-auth/auth-client-request.c
index 480fb42b30..046f7c307d 100644
--- a/src/lib-auth/auth-client-request.c
+++ b/src/lib-auth/auth-client-request.c
@@ -186,6 +186,7 @@ void auth_client_request_abort(struct auth_client_request **_request)
 
 	auth_client_send_cancel(request->conn->client, request->id);
 	call_callback(request, AUTH_REQUEST_STATUS_ABORT, NULL, NULL);
+	pool_unref(&request->pool);
 }
 
 unsigned int auth_client_request_get_id(struct auth_client_request *request)"
CVE-2017-9992,"From f52fbf4f3ed02a7d872d8a102006f29b4421f360 Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Fri, 5 May 2017 20:42:11 +0200
Subject: [PATCH] avcodec/dfa: Fix off by 1 error

Fixes out of array access
Fixes: 1345/clusterfuzz-testcase-minimized-6062963045695488

Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpeg
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
---
 libavcodec/dfa.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libavcodec/dfa.c b/libavcodec/dfa.c
index f45d019a79200..5ddb647c4cba7 100644
--- a/libavcodec/dfa.c
+++ b/libavcodec/dfa.c
@@ -175,7 +175,7 @@ static int decode_dds1(GetByteContext *gb, uint8_t *frame, int width, int height
                 return AVERROR_INVALIDDATA;
             frame += v;
         } else {
-            if (frame_end - frame < width + 3)
+            if (frame_end - frame < width + 4)
                 return AVERROR_INVALIDDATA;
             frame[0] = frame[1] =
             frame[width] = frame[width + 1] =  bytestream2_get_byte(gb);"
CVE-2017-12775,"From 6013ca1c83bf232008f7be815c0e4821fb6b120a Mon Sep 17 00:00:00 2001
From: Scott <scott.vivian@gmail.com>
Date: Tue, 8 Aug 2017 16:47:32 +0100
Subject: [PATCH] Security fix in qa-install.php

---
 qa-include/qa-install.php | 29 ++++++++++++++++-------------
 1 file changed, 16 insertions(+), 13 deletions(-)

diff --git a/qa-include/qa-install.php b/qa-include/qa-install.php
index 8ada9f784..4c11d211c 100644
--- a/qa-include/qa-install.php
+++ b/qa-include/qa-install.php
@@ -65,27 +65,30 @@ function qa_install_db_fail_handler($type, $errno=null, $error=null, $query=null
 // Process user handling higher up to avoid 'headers already sent' warning
 
 if (!isset($pass_failure_type) && qa_clicked('super')) {
+	require_once QA_INCLUDE_DIR.'db/admin.php';
 	require_once QA_INCLUDE_DIR.'db/users.php';
 	require_once QA_INCLUDE_DIR.'app/users-edit.php';
 
-	$inemail = qa_post_text('email');
-	$inpassword = qa_post_text('password');
-	$inhandle = qa_post_text('handle');
+	if (qa_db_count_users() == 0) { // prevent creating multiple accounts
+		$inemail = qa_post_text('email');
+		$inpassword = qa_post_text('password');
+		$inhandle = qa_post_text('handle');
 
-	$fielderrors = array_merge(
-		qa_handle_email_filter($inhandle, $inemail),
-		qa_password_validate($inpassword)
-	);
+		$fielderrors = array_merge(
+			qa_handle_email_filter($inhandle, $inemail),
+			qa_password_validate($inpassword)
+		);
 
-	if (empty($fielderrors)) {
-		require_once QA_INCLUDE_DIR.'app/users.php';
+		if (empty($fielderrors)) {
+			require_once QA_INCLUDE_DIR.'app/users.php';
 
-		$userid = qa_create_new_user($inemail, $inpassword, $inhandle, QA_USER_LEVEL_SUPER);
-		qa_set_logged_in_user($userid, $inhandle);
+			$userid = qa_create_new_user($inemail, $inpassword, $inhandle, QA_USER_LEVEL_SUPER);
+			qa_set_logged_in_user($userid, $inhandle);
 
-		qa_set_option('feedback_email', $inemail);
+			qa_set_option('feedback_email', $inemail);
 
-		$success .= ""Congratulations - Your Question2Answer site is ready to go!\n\nYou are logged in as the super administrator and can start changing settings.\n\nThank you for installing Question2Answer."";
+			$success .= ""Congratulations - Your Question2Answer site is ready to go!\n\nYou are logged in as the super administrator and can start changing settings.\n\nThank you for installing Question2Answer."";
+		}
 	}
 }"
CVE-2017-16995,"From 95a762e2c8c942780948091f8f2a4f32fce1ac6f Mon Sep 17 00:00:00 2001
From: Jann Horn <jannh@google.com>
Date: Mon, 18 Dec 2017 20:11:54 -0800
Subject: [PATCH] bpf: fix incorrect sign extension in check_alu_op()

Distinguish between
BPF_ALU64|BPF_MOV|BPF_K (load 32-bit immediate, sign-extended to 64-bit)
and BPF_ALU|BPF_MOV|BPF_K (load 32-bit immediate, zero-padded to 64-bit);
only perform sign extension in the first case.

Starting with v4.14, this is exploitable by unprivileged users as long as
the unprivileged_bpf_disabled sysctl isn't set.

Debian assigned CVE-2017-16995 for this issue.

v3:
 - add CVE number (Ben Hutchings)

Fixes: 484611357c19 (""bpf: allow access into map value arrays"")
Signed-off-by: Jann Horn <jannh@google.com>
Acked-by: Edward Cree <ecree@solarflare.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
---
 kernel/bpf/verifier.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index 625e358ca765e1..c086010ae51ed8 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -2408,7 +2408,13 @@ static int check_alu_op(struct bpf_verifier_env *env, struct bpf_insn *insn)
 			 * remember the value we stored into this reg
 			 */
 			regs[insn->dst_reg].type = SCALAR_VALUE;
-			__mark_reg_known(regs + insn->dst_reg, insn->imm);
+			if (BPF_CLASS(insn->code) == BPF_ALU64) {
+				__mark_reg_known(regs + insn->dst_reg,
+						 insn->imm);
+			} else {
+				__mark_reg_known(regs + insn->dst_reg,
+						 (u32)insn->imm);
+			}
 		}
 
 	} else if (opcode > BPF_END) {"
CVE-2017-7583,"From ac223e9a91ffbdf07358afc4c7713d95732a9979 Mon Sep 17 00:00:00 2001
From: Alex Killing <alex.killing@gmx.de>
Date: Wed, 5 Apr 2017 16:22:13 +0200
Subject: [PATCH] fixed bug #20339, sanitize svg

---
 .../classes/class.ilMediaObjectDataSet.php    |    2 +
 .../classes/class.ilMediaSvgSanitizer.php     |   56 +
 .../classes/class.ilObjMediaObject.php        |    6 +
 .../classes/class.ilObjMediaObjectGUI.php     |   11 +-
 .../lib/svg-sanitizer-master/.gitignore       |    2 +
 .../lib/svg-sanitizer-master/.travis.yml      |   19 +
 .../lib/svg-sanitizer-master/LICENSE          |  340 ++++
 .../lib/svg-sanitizer-master/README.md        |   72 +
 .../lib/svg-sanitizer-master/composer.json    |   22 +
 .../lib/svg-sanitizer-master/composer.lock    | 1492 +++++++++++++++++
 .../lib/svg-sanitizer-master/phpunit.xml.dist |   17 +
 .../svg-sanitizer-master/src/Sanitizer.php    |  327 ++++
 .../src/data/AllowedAttributes.php            |   86 +
 .../src/data/AllowedTags.php                  |   63 +
 .../src/data/AttributeInterface.php           |   21 +
 .../src/data/TagInterface.php                 |   22 +
 16 files changed, 2557 insertions(+), 1 deletion(-)
 create mode 100644 Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/.gitignore
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/.travis.yml
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/LICENSE
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/README.md
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/composer.json
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/composer.lock
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/phpunit.xml.dist
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/src/Sanitizer.php
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedAttributes.php
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedTags.php
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/src/data/AttributeInterface.php
 create mode 100644 Services/MediaObjects/lib/svg-sanitizer-master/src/data/TagInterface.php

diff --git a/Services/MediaObjects/classes/class.ilMediaObjectDataSet.php b/Services/MediaObjects/classes/class.ilMediaObjectDataSet.php
index f73ec70d8ce2..8f95f2db29dc 100644
--- a/Services/MediaObjects/classes/class.ilMediaObjectDataSet.php
+++ b/Services/MediaObjects/classes/class.ilMediaObjectDataSet.php
@@ -371,6 +371,8 @@ function importRecord($a_entity, $a_types, $a_rec, $a_mapping, $a_schema_version
 					$target_dir = $dir = ilObjMediaObject::_getDirectory($newObj->getId());
 					ilUtil::rCopy($source_dir, $target_dir);
 					ilObjMediaObject::renameExecutables($target_dir);
+					include_once(""./Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php"");
+					ilMediaSvgSanitizer::sanitizeDir($target_dir);	// see #20339
 				}
 
 				$a_mapping->addMapping(""Services/MediaObjects"", ""mob"", $a_rec[""Id""], $newObj->getId());
diff --git a/Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php b/Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php
new file mode 100644
index 000000000000..f9adedc65372
--- /dev/null
+++ b/Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php
@@ -0,0 +1,56 @@
+<?php
+
+/* Copyright (c) 1998-2017 ILIAS open source, GPL, see docs/LICENSE */
+
+use enshrined\svgSanitize\Sanitizer;
+
+/**
+ * Small wrapper for svg sanitizer
+ *
+ * @author Alex Killing <alex.killing@gmx.de>
+ * @version $Id$
+ *
+ * @ingroup ServicesMediaObjects
+ */
+class ilMediaSvgSanitizer
+{
+	/**
+	 * Sanitize (temporary solution for sec issue 20339, ILIAS 5.0-5.2, not using composer autoloading yet)
+	 *
+	 * @param string $a_file file to be sanitized
+	 */
+	static function sanitizeFile($a_file)
+	{
+		include_once(""./Services/MediaObjects/lib/svg-sanitizer-master/src/data/AttributeInterface.php"");
+		include_once(""./Services/MediaObjects/lib/svg-sanitizer-master/src/data/TagInterface.php"");
+		include_once(""./Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedTags.php"");
+		include_once(""./Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedAttributes.php"");
+		include_once(""./Services/MediaObjects/lib/svg-sanitizer-master/src/Sanitizer.php"");
+
+		$sanitizer = new Sanitizer();
+		$dirtySVG = file_get_contents($a_file);
+		$cleanSVG = $sanitizer->sanitize($dirtySVG);
+		file_put_contents($a_file, $cleanSVG);
+	}
+
+	/**
+	 * Sanitize directory recursively
+	 *
+	 * @param $a_path
+	 */
+	static function sanitizeDir($a_path)
+	{
+		$path = realpath($a_path);
+
+		$objects = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($path), RecursiveIteratorIterator::SELF_FIRST);
+		foreach($objects as $name => $object)
+		{
+			if (strtolower(pathinfo($name, PATHINFO_EXTENSION)) == ""svg"")
+			{
+				self::sanitizeFile($name);
+			}
+		}
+	}
+}
+
+?>
\ No newline at end of file
diff --git a/Services/MediaObjects/classes/class.ilObjMediaObject.php b/Services/MediaObjects/classes/class.ilObjMediaObject.php
index 76e9ce5ea157..1214be4fe387 100755
--- a/Services/MediaObjects/classes/class.ilObjMediaObject.php
+++ b/Services/MediaObjects/classes/class.ilObjMediaObject.php
@@ -1686,6 +1686,9 @@ public static function _saveTempFileAsMediaObject($name, $tmp_name, $upload = TR
 		$media_item->setHAlign(""Left"");
 
 		self::renameExecutables($mob_dir);
+		include_once(""./Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php"");
+		ilMediaSvgSanitizer::sanitizeDir($mob_dir);	// see #20339
+
 		$media_object->update();
 
 		return $media_object;
@@ -1705,6 +1708,9 @@ function uploadAdditionalFile($a_name, $tmp_name, $a_subdir = """", $a_mode = ""mov
 		ilUtil::makeDirParents($dir);
 		ilUtil::moveUploadedFile($tmp_name, $a_name, $dir.""/"".$a_name, true, $a_mode);
 		self::renameExecutables($mob_dir);
+		include_once(""./Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php"");
+		ilMediaSvgSanitizer::sanitizeDir($mob_dir);	// see #20339
+
 	}
 	
 	/**
diff --git a/Services/MediaObjects/classes/class.ilObjMediaObjectGUI.php b/Services/MediaObjects/classes/class.ilObjMediaObjectGUI.php
index 29ae9304f028..3d995e0b22d9 100755
--- a/Services/MediaObjects/classes/class.ilObjMediaObjectGUI.php
+++ b/Services/MediaObjects/classes/class.ilObjMediaObjectGUI.php
@@ -176,6 +176,8 @@ function executeCommand()
 				ilObjMediaObject::renameExecutables(ilObjMediaObject::_getDirectory($this->object->getId()));	// see #20187
 				$ret = $this->ctrl->forwardCommand($fs_gui);
 				ilObjMediaObject::renameExecutables(ilObjMediaObject::_getDirectory($this->object->getId()));	// see #20187
+				include_once(""./Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php"");
+				ilMediaSvgSanitizer::sanitizeDir(ilObjMediaObject::_getDirectory($this->object->getId()));	// see #20339
 				break;
 
 
@@ -799,6 +801,8 @@ static function setObjectPerCreationForm($a_mob)
 		}
 	
 		ilObjMediaObject::renameExecutables($mob_dir);
+		include_once(""./Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php"");
+		ilMediaSvgSanitizer::sanitizeDir($mob_dir);	// see #20339
 		$a_mob->update();		
 	}
 	
@@ -1146,7 +1150,9 @@ function savePropertiesObject()
 			}
 
 			ilObjMediaObject::renameExecutables(ilObjMediaObject::_getDirectory($this->object->getId()));
-			
+			include_once(""./Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php"");
+			ilMediaSvgSanitizer::sanitizeDir(ilObjMediaObject::_getDirectory($this->object->getId()));	// see #20339
+
 			$this->object->update();
 			ilUtil::sendSuccess($lng->txt(""msg_obj_modified""), true);
 			$this->ctrl->redirect($this, ""edit"");
@@ -1391,6 +1397,9 @@ function uploadFileObject()
 
 		}
 		ilObjMediaObject::renameExecutables($mob_dir);
+		include_once(""./Services/MediaObjects/classes/class.ilMediaSvgSanitizer.php"");
+		ilMediaSvgSanitizer::sanitizeDir($mob_dir);	// see #20339
+
 		$this->ctrl->saveParameter($this, ""cdir"");
 		$this->ctrl->redirect($this, ""editFiles"");
 	}
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/.gitignore b/Services/MediaObjects/lib/svg-sanitizer-master/.gitignore
new file mode 100644
index 000000000000..90ab5fdeffc5
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/.gitignore
@@ -0,0 +1,2 @@
+/vendor
+/build
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/.travis.yml b/Services/MediaObjects/lib/svg-sanitizer-master/.travis.yml
new file mode 100644
index 000000000000..a2d1f41f3488
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/.travis.yml
@@ -0,0 +1,19 @@
+language: php
+php:
+  - 5.3
+  - 5.4
+  - 5.5
+  - 5.6
+  - 7.0
+  - hhvm
+
+before_script:
+  - composer install --dev
+
+addons:
+  code_climate:
+    repo_token: c051f6d29cce2d4ab0d6dfa460798b050cced025311f94ab3ba1ed50c7ceb31e
+
+after_script:
+  - CODECLIMATE_REPO_TOKEN=""c051f6d29cce2d4ab0d6dfa460798b050cced025311f94ab3ba1ed50c7ceb31e"" vendor/bin/test-reporter --stdout > build/logs/codeclimate.json
+  - ""curl --verbose -X POST -d @build/logs/codeclimate.json -H 'Content-Type: application/json' -H 'User-Agent: Code Climate (PHP Test Reporter v0.1.1)' https://codeclimate.com/test_reports""
\ No newline at end of file
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/LICENSE b/Services/MediaObjects/lib/svg-sanitizer-master/LICENSE
new file mode 100644
index 000000000000..8cdb8451d9b9
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/LICENSE
@@ -0,0 +1,340 @@
+                    GNU GENERAL PUBLIC LICENSE
+                       Version 2, June 1991
+
+ Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>
+ 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
+ Everyone is permitted to copy and distribute verbatim copies
+ of this license document, but changing it is not allowed.
+
+                            Preamble
+
+  The licenses for most software are designed to take away your
+freedom to share and change it.  By contrast, the GNU General Public
+License is intended to guarantee your freedom to share and change free
+software--to make sure the software is free for all its users.  This
+General Public License applies to most of the Free Software
+Foundation's software and to any other program whose authors commit to
+using it.  (Some other Free Software Foundation software is covered by
+the GNU Lesser General Public License instead.)  You can apply it to
+your programs, too.
+
+  When we speak of free software, we are referring to freedom, not
+price.  Our General Public Licenses are designed to make sure that you
+have the freedom to distribute copies of free software (and charge for
+this service if you wish), that you receive source code or can get it
+if you want it, that you can change the software or use pieces of it
+in new free programs; and that you know you can do these things.
+
+  To protect your rights, we need to make restrictions that forbid
+anyone to deny you these rights or to ask you to surrender the rights.
+These restrictions translate to certain responsibilities for you if you
+distribute copies of the software, or if you modify it.
+
+  For example, if you distribute copies of such a program, whether
+gratis or for a fee, you must give the recipients all the rights that
+you have.  You must make sure that they, too, receive or can get the
+source code.  And you must show them these terms so they know their
+rights.
+
+  We protect your rights with two steps: (1) copyright the software, and
+(2) offer you this license which gives you legal permission to copy,
+distribute and/or modify the software.
+
+  Also, for each author's protection and ours, we want to make certain
+that everyone understands that there is no warranty for this free
+software.  If the software is modified by someone else and passed on, we
+want its recipients to know that what they have is not the original, so
+that any problems introduced by others will not reflect on the original
+authors' reputations.
+
+  Finally, any free program is threatened constantly by software
+patents.  We wish to avoid the danger that redistributors of a free
+program will individually obtain patent licenses, in effect making the
+program proprietary.  To prevent this, we have made it clear that any
+patent must be licensed for everyone's free use or not licensed at all.
+
+  The precise terms and conditions for copying, distribution and
+modification follow.
+
+                    GNU GENERAL PUBLIC LICENSE
+   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION
+
+  0. This License applies to any program or other work which contains
+a notice placed by the copyright holder saying it may be distributed
+under the terms of this General Public License.  The ""Program"", below,
+refers to any such program or work, and a ""work based on the Program""
+means either the Program or any derivative work under copyright law:
+that is to say, a work containing the Program or a portion of it,
+either verbatim or with modifications and/or translated into another
+language.  (Hereinafter, translation is included without limitation in
+the term ""modification"".)  Each licensee is addressed as ""you"".
+
+Activities other than copying, distribution and modification are not
+covered by this License; they are outside its scope.  The act of
+running the Program is not restricted, and the output from the Program
+is covered only if its contents constitute a work based on the
+Program (independent of having been made by running the Program).
+Whether that is true depends on what the Program does.
+
+  1. You may copy and distribute verbatim copies of the Program's
+source code as you receive it, in any medium, provided that you
+conspicuously and appropriately publish on each copy an appropriate
+copyright notice and disclaimer of warranty; keep intact all the
+notices that refer to this License and to the absence of any warranty;
+and give any other recipients of the Program a copy of this License
+along with the Program.
+
+You may charge a fee for the physical act of transferring a copy, and
+you may at your option offer warranty protection in exchange for a fee.
+
+  2. You may modify your copy or copies of the Program or any portion
+of it, thus forming a work based on the Program, and copy and
+distribute such modifications or work under the terms of Section 1
+above, provided that you also meet all of these conditions:
+
+    a) You must cause the modified files to carry prominent notices
+    stating that you changed the files and the date of any change.
+
+    b) You must cause any work that you distribute or publish, that in
+    whole or in part contains or is derived from the Program or any
+    part thereof, to be licensed as a whole at no charge to all third
+    parties under the terms of this License.
+
+    c) If the modified program normally reads commands interactively
+    when run, you must cause it, when started running for such
+    interactive use in the most ordinary way, to print or display an
+    announcement including an appropriate copyright notice and a
+    notice that there is no warranty (or else, saying that you provide
+    a warranty) and that users may redistribute the program under
+    these conditions, and telling the user how to view a copy of this
+    License.  (Exception: if the Program itself is interactive but
+    does not normally print such an announcement, your work based on
+    the Program is not required to print an announcement.)
+
+These requirements apply to the modified work as a whole.  If
+identifiable sections of that work are not derived from the Program,
+and can be reasonably considered independent and separate works in
+themselves, then this License, and its terms, do not apply to those
+sections when you distribute them as separate works.  But when you
+distribute the same sections as part of a whole which is a work based
+on the Program, the distribution of the whole must be on the terms of
+this License, whose permissions for other licensees extend to the
+entire whole, and thus to each and every part regardless of who wrote it.
+
+Thus, it is not the intent of this section to claim rights or contest
+your rights to work written entirely by you; rather, the intent is to
+exercise the right to control the distribution of derivative or
+collective works based on the Program.
+
+In addition, mere aggregation of another work not based on the Program
+with the Program (or with a work based on the Program) on a volume of
+a storage or distribution medium does not bring the other work under
+the scope of this License.
+
+  3. You may copy and distribute the Program (or a work based on it,
+under Section 2) in object code or executable form under the terms of
+Sections 1 and 2 above provided that you also do one of the following:
+
+    a) Accompany it with the complete corresponding machine-readable
+    source code, which must be distributed under the terms of Sections
+    1 and 2 above on a medium customarily used for software interchange; or,
+
+    b) Accompany it with a written offer, valid for at least three
+    years, to give any third party, for a charge no more than your
+    cost of physically performing source distribution, a complete
+    machine-readable copy of the corresponding source code, to be
+    distributed under the terms of Sections 1 and 2 above on a medium
+    customarily used for software interchange; or,
+
+    c) Accompany it with the information you received as to the offer
+    to distribute corresponding source code.  (This alternative is
+    allowed only for noncommercial distribution and only if you
+    received the program in object code or executable form with such
+    an offer, in accord with Subsection b above.)
+
+The source code for a work means the preferred form of the work for
+making modifications to it.  For an executable work, complete source
+code means all the source code for all modules it contains, plus any
+associated interface definition files, plus the scripts used to
+control compilation and installation of the executable.  However, as a
+special exception, the source code distributed need not include
+anything that is normally distributed (in either source or binary
+form) with the major components (compiler, kernel, and so on) of the
+operating system on which the executable runs, unless that component
+itself accompanies the executable.
+
+If distribution of executable or object code is made by offering
+access to copy from a designated place, then offering equivalent
+access to copy the source code from the same place counts as
+distribution of the source code, even though third parties are not
+compelled to copy the source along with the object code.
+
+  4. You may not copy, modify, sublicense, or distribute the Program
+except as expressly provided under this License.  Any attempt
+otherwise to copy, modify, sublicense or distribute the Program is
+void, and will automatically terminate your rights under this License.
+However, parties who have received copies, or rights, from you under
+this License will not have their licenses terminated so long as such
+parties remain in full compliance.
+
+  5. You are not required to accept this License, since you have not
+signed it.  However, nothing else grants you permission to modify or
+distribute the Program or its derivative works.  These actions are
+prohibited by law if you do not accept this License.  Therefore, by
+modifying or distributing the Program (or any work based on the
+Program), you indicate your acceptance of this License to do so, and
+all its terms and conditions for copying, distributing or modifying
+the Program or works based on it.
+
+  6. Each time you redistribute the Program (or any work based on the
+Program), the recipient automatically receives a license from the
+original licensor to copy, distribute or modify the Program subject to
+these terms and conditions.  You may not impose any further
+restrictions on the recipients' exercise of the rights granted herein.
+You are not responsible for enforcing compliance by third parties to
+this License.
+
+  7. If, as a consequence of a court judgment or allegation of patent
+infringement or for any other reason (not limited to patent issues),
+conditions are imposed on you (whether by court order, agreement or
+otherwise) that contradict the conditions of this License, they do not
+excuse you from the conditions of this License.  If you cannot
+distribute so as to satisfy simultaneously your obligations under this
+License and any other pertinent obligations, then as a consequence you
+may not distribute the Program at all.  For example, if a patent
+license would not permit royalty-free redistribution of the Program by
+all those who receive copies directly or indirectly through you, then
+the only way you could satisfy both it and this License would be to
+refrain entirely from distribution of the Program.
+
+If any portion of this section is held invalid or unenforceable under
+any particular circumstance, the balance of the section is intended to
+apply and the section as a whole is intended to apply in other
+circumstances.
+
+It is not the purpose of this section to induce you to infringe any
+patents or other property right claims or to contest validity of any
+such claims; this section has the sole purpose of protecting the
+integrity of the free software distribution system, which is
+implemented by public license practices.  Many people have made
+generous contributions to the wide range of software distributed
+through that system in reliance on consistent application of that
+system; it is up to the author/donor to decide if he or she is willing
+to distribute software through any other system and a licensee cannot
+impose that choice.
+
+This section is intended to make thoroughly clear what is believed to
+be a consequence of the rest of this License.
+
+  8. If the distribution and/or use of the Program is restricted in
+certain countries either by patents or by copyrighted interfaces, the
+original copyright holder who places the Program under this License
+may add an explicit geographical distribution limitation excluding
+those countries, so that distribution is permitted only in or among
+countries not thus excluded.  In such case, this License incorporates
+the limitation as if written in the body of this License.
+
+  9. The Free Software Foundation may publish revised and/or new versions
+of the General Public License from time to time.  Such new versions will
+be similar in spirit to the present version, but may differ in detail to
+address new problems or concerns.
+
+Each version is given a distinguishing version number.  If the Program
+specifies a version number of this License which applies to it and ""any
+later version"", you have the option of following the terms and conditions
+either of that version or of any later version published by the Free
+Software Foundation.  If the Program does not specify a version number of
+this License, you may choose any version ever published by the Free Software
+Foundation.
+
+  10. If you wish to incorporate parts of the Program into other free
+programs whose distribution conditions are different, write to the author
+to ask for permission.  For software which is copyrighted by the Free
+Software Foundation, write to the Free Software Foundation; we sometimes
+make exceptions for this.  Our decision will be guided by the two goals
+of preserving the free status of all derivatives of our free software and
+of promoting the sharing and reuse of software generally.
+
+                            NO WARRANTY
+
+  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
+FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
+OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
+PROVIDE THE PROGRAM ""AS IS"" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
+OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
+MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
+TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
+PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
+REPAIR OR CORRECTION.
+
+  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING
+WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR
+REDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,
+INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING
+OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED
+TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY
+YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER
+PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE
+POSSIBILITY OF SUCH DAMAGES.
+
+                     END OF TERMS AND CONDITIONS
+
+            How to Apply These Terms to Your New Programs
+
+  If you develop a new program, and you want it to be of the greatest
+possible use to the public, the best way to achieve this is to make it
+free software which everyone can redistribute and change under these terms.
+
+  To do so, attach the following notices to the program.  It is safest
+to attach them to the start of each source file to most effectively
+convey the exclusion of warranty; and each file should have at least
+the ""copyright"" line and a pointer to where the full notice is found.
+
+    {description}
+    Copyright (C) {year}  {fullname}
+
+    This program is free software; you can redistribute it and/or modify
+    it under the terms of the GNU General Public License as published by
+    the Free Software Foundation; either version 2 of the License, or
+    (at your option) any later version.
+
+    This program is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+    GNU General Public License for more details.
+
+    You should have received a copy of the GNU General Public License along
+    with this program; if not, write to the Free Software Foundation, Inc.,
+    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+
+Also add information on how to contact you by electronic and paper mail.
+
+If the program is interactive, make it output a short notice like this
+when it starts in an interactive mode:
+
+    Gnomovision version 69, Copyright (C) year name of author
+    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.
+    This is free software, and you are welcome to redistribute it
+    under certain conditions; type `show c' for details.
+
+The hypothetical commands `show w' and `show c' should show the appropriate
+parts of the General Public License.  Of course, the commands you use may
+be called something other than `show w' and `show c'; they could even be
+mouse-clicks or menu items--whatever suits your program.
+
+You should also get your employer (if you work as a programmer) or your
+school, if any, to sign a ""copyright disclaimer"" for the program, if
+necessary.  Here is a sample; alter the names:
+
+  Yoyodyne, Inc., hereby disclaims all copyright interest in the program
+  `Gnomovision' (which makes passes at compilers) written by James Hacker.
+
+  {signature of Ty Coon}, 1 April 1989
+  Ty Coon, President of Vice
+
+This General Public License does not permit incorporating your program into
+proprietary programs.  If your program is a subroutine library, you may
+consider it more useful to permit linking proprietary applications with the
+library.  If this is what you want to do, use the GNU Lesser General
+Public License instead of this License.
+
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/README.md b/Services/MediaObjects/lib/svg-sanitizer-master/README.md
new file mode 100644
index 000000000000..a80c72189efd
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/README.md
@@ -0,0 +1,72 @@
+# svg-sanitizer
+
+[![Build Status](https://travis-ci.org/darylldoyle/svg-sanitizer.svg?branch=master)](https://travis-ci.org/darylldoyle/svg-sanitizer) [![Test Coverage](https://codeclimate.com/github/darylldoyle/svg-sanitizer/badges/coverage.svg)](https://codeclimate.com/github/darylldoyle/svg-sanitizer/coverage)
+
+This is my attempt at building a decent SVG sanitizer in PHP. The work is laregely borrowed from [DOMPurify](https://github.com/cure53/DOMPurify).
+
+## Installation
+
+Either require `enshrined/svg-sanitize` through composer or download the repo and include the old way!
+
+## Usage
+
+Using this is fairly easy. Create a new instance of `enshrined\svgSanitize\Sanitizer` and then call the `sanitize` whilst passing in your dirty SVG/XML
+
+**Basic Example**
+
+```php
+use enshrined\svgSanitize\Sanitizer;
+
+// Create a new sanitizer instance
+$sanitizer = new Sanitizer();
+
+// Load the dirty svg
+$dirtySVG = file_get_contents('filthy.svg');
+
+// Pass it to the sanitizer and get it back clean
+$cleanSVG = $sanitizer->sanitize($dirtySVG);
+
+// Now do what you want with your clean SVG/XML data
+
+```
+
+## Output
+
+This will either return a sanitized SVG/XML string or boolean `false` if XML parsing failed (usually due to a badly formatted file).
+
+## Options
+
+You may pass your own whitelist of tags and attributes by using the `Sanitizer::setAllowedTags` and `Sanitizer::setAllowedAttrs` methods respectively.
+
+These methods require that you implement the `enshrined\svgSanitize\data\TagInterface` or `enshrined\svgSanitize\data\AttributeInterface`.
+
+## Remove remote references 
+
+You have the option to remove attributes that reference remote files, this will stop HTTP leaks but will add an overhead to the sanitiser.
+
+This defaults to false, set to true to remove references.
+
+`$sanitizer->removeRemoteReferences(true);`
+
+## Minification
+
+You can minify the XML output by calling `$sanitiser->minify(true);`.
+
+## Demo
+There is a demo available at: [http://svg.enshrined.co.uk/](http://svg.enshrined.co.uk/)
+
+## WordPress
+
+I've just released a WordPress plugin containing this code so you can sanitize your WordPress uploads. It's available from the WordPress plugin directory: [https://wordpress.org/plugins/safe-svg/](https://wordpress.org/plugins/safe-svg/)
+
+## Drupal
+
+[Michael Potter](https://github.com/heyMP) has kindly created a Drupal module for this library which is available at: [https://www.drupal.org/project/svg_sanitizer](https://www.drupal.org/project/svg_sanitizer)
+
+## Tests
+
+You can run these by running `phpunit`
+
+## To-Do
+
+More extensive testing for the SVGs/XML would be lovely, I'll try and add these soon. If you feel like doing it for me, please do and make a PR!
\ No newline at end of file
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/composer.json b/Services/MediaObjects/lib/svg-sanitizer-master/composer.json
new file mode 100644
index 000000000000..c0d95dcd0c86
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/composer.json
@@ -0,0 +1,22 @@
+{
+    ""name"": ""enshrined/svg-sanitize"",
+    ""description"": ""An SVG sanitizer for PHP"",
+    ""license"": ""GPL-2.0+"",
+    ""authors"": [
+        {
+            ""name"": ""Daryll Doyle"",
+            ""email"": ""daryll@enshrined.co.uk""
+        }
+    ],
+    ""autoload"": {
+        ""psr-4"": {
+            ""enshrined\\svgSanitize\\"": ""src""
+        }
+    },
+    ""minimum-stability"": ""stable"",
+    ""require"": {},
+    ""require-dev"": {
+        ""phpunit/phpunit"": ""^4.7"",
+        ""codeclimate/php-test-reporter"": ""^0.1.2""
+    }
+}
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/composer.lock b/Services/MediaObjects/lib/svg-sanitizer-master/composer.lock
new file mode 100644
index 000000000000..196af8b23410
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/composer.lock
@@ -0,0 +1,1492 @@
+{
+    ""_readme"": [
+        ""This file locks the dependencies of your project to a known state"",
+        ""Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file"",
+        ""This file is @generated automatically""
+    ],
+    ""hash"": ""5de16e26bfc22a583a99a771e94688b8"",
+    ""packages"": [],
+    ""packages-dev"": [
+        {
+            ""name"": ""codeclimate/php-test-reporter"",
+            ""version"": ""v0.1.2"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/codeclimate/php-test-reporter.git"",
+                ""reference"": ""8ed24ff30f3663ecf40f1c12d6c97eb56c69e646""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/codeclimate/php-test-reporter/zipball/8ed24ff30f3663ecf40f1c12d6c97eb56c69e646"",
+                ""reference"": ""8ed24ff30f3663ecf40f1c12d6c97eb56c69e646"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""ext-curl"": ""*"",
+                ""php"": "">=5.3"",
+                ""satooshi/php-coveralls"": ""0.6.*"",
+                ""symfony/console"": "">=2.0""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""3.7.*@stable""
+            },
+            ""bin"": [
+                ""composer/bin/test-reporter""
+            ],
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""0.1.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-0"": {
+                    ""CodeClimate\\Component"": ""src/"",
+                    ""CodeClimate\\Bundle"": ""src/""
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Code Climate"",
+                    ""email"": ""hello@codeclimate.com"",
+                    ""homepage"": ""https://codeclimate.com""
+                }
+            ],
+            ""description"": ""PHP client for reporting test coverage to Code Climate"",
+            ""homepage"": ""https://github.com/codeclimate/php-test-reporter"",
+            ""keywords"": [
+                ""codeclimate"",
+                ""coverage""
+            ],
+            ""time"": ""2014-07-23 13:42:41""
+        },
+        {
+            ""name"": ""doctrine/instantiator"",
+            ""version"": ""1.0.5"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/doctrine/instantiator.git"",
+                ""reference"": ""8e884e78f9f0eb1329e445619e04456e64d8051d""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/doctrine/instantiator/zipball/8e884e78f9f0eb1329e445619e04456e64d8051d"",
+                ""reference"": ""8e884e78f9f0eb1329e445619e04456e64d8051d"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3,<8.0-DEV""
+            },
+            ""require-dev"": {
+                ""athletic/athletic"": ""~0.1.8"",
+                ""ext-pdo"": ""*"",
+                ""ext-phar"": ""*"",
+                ""phpunit/phpunit"": ""~4.0"",
+                ""squizlabs/php_codesniffer"": ""~2.0""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.0.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-4"": {
+                    ""Doctrine\\Instantiator\\"": ""src/Doctrine/Instantiator/""
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Marco Pivetta"",
+                    ""email"": ""ocramius@gmail.com"",
+                    ""homepage"": ""http://ocramius.github.com/""
+                }
+            ],
+            ""description"": ""A small, lightweight utility to instantiate objects in PHP without invoking their constructors"",
+            ""homepage"": ""https://github.com/doctrine/instantiator"",
+            ""keywords"": [
+                ""constructor"",
+                ""instantiate""
+            ],
+            ""time"": ""2015-06-14 21:17:01""
+        },
+        {
+            ""name"": ""guzzle/guzzle"",
+            ""version"": ""v3.9.3"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/guzzle/guzzle3.git"",
+                ""reference"": ""0645b70d953bc1c067bbc8d5bc53194706b628d9""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/guzzle/guzzle3/zipball/0645b70d953bc1c067bbc8d5bc53194706b628d9"",
+                ""reference"": ""0645b70d953bc1c067bbc8d5bc53194706b628d9"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""ext-curl"": ""*"",
+                ""php"": "">=5.3.3"",
+                ""symfony/event-dispatcher"": ""~2.1""
+            },
+            ""replace"": {
+                ""guzzle/batch"": ""self.version"",
+                ""guzzle/cache"": ""self.version"",
+                ""guzzle/common"": ""self.version"",
+                ""guzzle/http"": ""self.version"",
+                ""guzzle/inflection"": ""self.version"",
+                ""guzzle/iterator"": ""self.version"",
+                ""guzzle/log"": ""self.version"",
+                ""guzzle/parser"": ""self.version"",
+                ""guzzle/plugin"": ""self.version"",
+                ""guzzle/plugin-async"": ""self.version"",
+                ""guzzle/plugin-backoff"": ""self.version"",
+                ""guzzle/plugin-cache"": ""self.version"",
+                ""guzzle/plugin-cookie"": ""self.version"",
+                ""guzzle/plugin-curlauth"": ""self.version"",
+                ""guzzle/plugin-error-response"": ""self.version"",
+                ""guzzle/plugin-history"": ""self.version"",
+                ""guzzle/plugin-log"": ""self.version"",
+                ""guzzle/plugin-md5"": ""self.version"",
+                ""guzzle/plugin-mock"": ""self.version"",
+                ""guzzle/plugin-oauth"": ""self.version"",
+                ""guzzle/service"": ""self.version"",
+                ""guzzle/stream"": ""self.version""
+            },
+            ""require-dev"": {
+                ""doctrine/cache"": ""~1.3"",
+                ""monolog/monolog"": ""~1.0"",
+                ""phpunit/phpunit"": ""3.7.*"",
+                ""psr/log"": ""~1.0"",
+                ""symfony/class-loader"": ""~2.1"",
+                ""zendframework/zend-cache"": ""2.*,<2.3"",
+                ""zendframework/zend-log"": ""2.*,<2.3""
+            },
+            ""suggest"": {
+                ""guzzlehttp/guzzle"": ""Guzzle 5 has moved to a new package name. The package you have installed, Guzzle 3, is deprecated.""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""3.9-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-0"": {
+                    ""Guzzle"": ""src/"",
+                    ""Guzzle\\Tests"": ""tests/""
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Michael Dowling"",
+                    ""email"": ""mtdowling@gmail.com"",
+                    ""homepage"": ""https://github.com/mtdowling""
+                },
+                {
+                    ""name"": ""Guzzle Community"",
+                    ""homepage"": ""https://github.com/guzzle/guzzle/contributors""
+                }
+            ],
+            ""description"": ""PHP HTTP client. This library is deprecated in favor of https://packagist.org/packages/guzzlehttp/guzzle"",
+            ""homepage"": ""http://guzzlephp.org/"",
+            ""keywords"": [
+                ""client"",
+                ""curl"",
+                ""framework"",
+                ""http"",
+                ""http client"",
+                ""rest"",
+                ""web service""
+            ],
+            ""time"": ""2015-03-18 18:23:50""
+        },
+        {
+            ""name"": ""phpdocumentor/reflection-docblock"",
+            ""version"": ""2.0.4"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/phpDocumentor/ReflectionDocBlock.git"",
+                ""reference"": ""d68dbdc53dc358a816f00b300704702b2eaff7b8""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/d68dbdc53dc358a816f00b300704702b2eaff7b8"",
+                ""reference"": ""d68dbdc53dc358a816f00b300704702b2eaff7b8"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.0""
+            },
+            ""suggest"": {
+                ""dflydev/markdown"": ""~1.0"",
+                ""erusev/parsedown"": ""~1.0""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.0.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-0"": {
+                    ""phpDocumentor"": [
+                        ""src/""
+                    ]
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Mike van Riel"",
+                    ""email"": ""mike.vanriel@naenius.com""
+                }
+            ],
+            ""time"": ""2015-02-03 12:10:50""
+        },
+        {
+            ""name"": ""phpspec/prophecy"",
+            ""version"": ""v1.4.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/phpspec/prophecy.git"",
+                ""reference"": ""3132b1f44c7bf2ec4c7eb2d3cb78fdeca760d373""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/phpspec/prophecy/zipball/3132b1f44c7bf2ec4c7eb2d3cb78fdeca760d373"",
+                ""reference"": ""3132b1f44c7bf2ec4c7eb2d3cb78fdeca760d373"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""doctrine/instantiator"": ""^1.0.2"",
+                ""phpdocumentor/reflection-docblock"": ""~2.0"",
+                ""sebastian/comparator"": ""~1.1""
+            },
+            ""require-dev"": {
+                ""phpspec/phpspec"": ""~2.0""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.4.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-0"": {
+                    ""Prophecy\\"": ""src/""
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Konstantin Kudryashov"",
+                    ""email"": ""ever.zet@gmail.com"",
+                    ""homepage"": ""http://everzet.com""
+                },
+                {
+                    ""name"": ""Marcello Duarte"",
+                    ""email"": ""marcello.duarte@gmail.com""
+                }
+            ],
+            ""description"": ""Highly opinionated mocking framework for PHP 5.3+"",
+            ""homepage"": ""https://github.com/phpspec/prophecy"",
+            ""keywords"": [
+                ""Double"",
+                ""Dummy"",
+                ""fake"",
+                ""mock"",
+                ""spy"",
+                ""stub""
+            ],
+            ""time"": ""2015-04-27 22:15:08""
+        },
+        {
+            ""name"": ""phpunit/php-code-coverage"",
+            ""version"": ""2.1.5"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/php-code-coverage.git"",
+                ""reference"": ""be2286cb8c7e1773eded49d9719219e6f74f9e3e""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/be2286cb8c7e1773eded49d9719219e6f74f9e3e"",
+                ""reference"": ""be2286cb8c7e1773eded49d9719219e6f74f9e3e"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3"",
+                ""phpunit/php-file-iterator"": ""~1.3"",
+                ""phpunit/php-text-template"": ""~1.2"",
+                ""phpunit/php-token-stream"": ""~1.3"",
+                ""sebastian/environment"": ""~1.0"",
+                ""sebastian/version"": ""~1.0""
+            },
+            ""require-dev"": {
+                ""ext-xdebug"": "">=2.1.4"",
+                ""phpunit/phpunit"": ""~4""
+            },
+            ""suggest"": {
+                ""ext-dom"": ""*"",
+                ""ext-xdebug"": "">=2.2.1"",
+                ""ext-xmlwriter"": ""*""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.1.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sb@sebastian-bergmann.de"",
+                    ""role"": ""lead""
+                }
+            ],
+            ""description"": ""Library that provides collection, processing, and rendering functionality for PHP code coverage information."",
+            ""homepage"": ""https://github.com/sebastianbergmann/php-code-coverage"",
+            ""keywords"": [
+                ""coverage"",
+                ""testing"",
+                ""xunit""
+            ],
+            ""time"": ""2015-06-09 13:05:42""
+        },
+        {
+            ""name"": ""phpunit/php-file-iterator"",
+            ""version"": ""1.4.0"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/php-file-iterator.git"",
+                ""reference"": ""a923bb15680d0089e2316f7a4af8f437046e96bb""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/a923bb15680d0089e2316f7a4af8f437046e96bb"",
+                ""reference"": ""a923bb15680d0089e2316f7a4af8f437046e96bb"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.4.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sb@sebastian-bergmann.de"",
+                    ""role"": ""lead""
+                }
+            ],
+            ""description"": ""FilterIterator implementation that filters files based on a list of suffixes."",
+            ""homepage"": ""https://github.com/sebastianbergmann/php-file-iterator/"",
+            ""keywords"": [
+                ""filesystem"",
+                ""iterator""
+            ],
+            ""time"": ""2015-04-02 05:19:05""
+        },
+        {
+            ""name"": ""phpunit/php-text-template"",
+            ""version"": ""1.2.0"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/php-text-template.git"",
+                ""reference"": ""206dfefc0ffe9cebf65c413e3d0e809c82fbf00a""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/206dfefc0ffe9cebf65c413e3d0e809c82fbf00a"",
+                ""reference"": ""206dfefc0ffe9cebf65c413e3d0e809c82fbf00a"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3""
+            },
+            ""type"": ""library"",
+            ""autoload"": {
+                ""classmap"": [
+                    ""Text/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""include-path"": [
+                """"
+            ],
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sb@sebastian-bergmann.de"",
+                    ""role"": ""lead""
+                }
+            ],
+            ""description"": ""Simple template engine."",
+            ""homepage"": ""https://github.com/sebastianbergmann/php-text-template/"",
+            ""keywords"": [
+                ""template""
+            ],
+            ""time"": ""2014-01-30 17:20:04""
+        },
+        {
+            ""name"": ""phpunit/php-timer"",
+            ""version"": ""1.0.6"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/php-timer.git"",
+                ""reference"": ""83fe1bdc5d47658b727595c14da140da92b3d66d""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/php-timer/zipball/83fe1bdc5d47658b727595c14da140da92b3d66d"",
+                ""reference"": ""83fe1bdc5d47658b727595c14da140da92b3d66d"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3""
+            },
+            ""type"": ""library"",
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sb@sebastian-bergmann.de"",
+                    ""role"": ""lead""
+                }
+            ],
+            ""description"": ""Utility class for timing"",
+            ""homepage"": ""https://github.com/sebastianbergmann/php-timer/"",
+            ""keywords"": [
+                ""timer""
+            ],
+            ""time"": ""2015-06-13 07:35:30""
+        },
+        {
+            ""name"": ""phpunit/php-token-stream"",
+            ""version"": ""1.4.2"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/php-token-stream.git"",
+                ""reference"": ""db63be1159c81df649cd0260e30249a586d4129e""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/php-token-stream/zipball/db63be1159c81df649cd0260e30249a586d4129e"",
+                ""reference"": ""db63be1159c81df649cd0260e30249a586d4129e"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""ext-tokenizer"": ""*"",
+                ""php"": "">=5.3.3""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.2""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.4-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de""
+                }
+            ],
+            ""description"": ""Wrapper around PHP's tokenizer extension."",
+            ""homepage"": ""https://github.com/sebastianbergmann/php-token-stream/"",
+            ""keywords"": [
+                ""tokenizer""
+            ],
+            ""time"": ""2015-06-12 07:34:24""
+        },
+        {
+            ""name"": ""phpunit/phpunit"",
+            ""version"": ""4.7.4"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/phpunit.git"",
+                ""reference"": ""e5f851f324f7add846316f39e668e9deac97a103""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/phpunit/zipball/e5f851f324f7add846316f39e668e9deac97a103"",
+                ""reference"": ""e5f851f324f7add846316f39e668e9deac97a103"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""ext-dom"": ""*"",
+                ""ext-json"": ""*"",
+                ""ext-pcre"": ""*"",
+                ""ext-reflection"": ""*"",
+                ""ext-spl"": ""*"",
+                ""php"": "">=5.3.3"",
+                ""phpspec/prophecy"": ""~1.3,>=1.3.1"",
+                ""phpunit/php-code-coverage"": ""~2.1"",
+                ""phpunit/php-file-iterator"": ""~1.4"",
+                ""phpunit/php-text-template"": ""~1.2"",
+                ""phpunit/php-timer"": "">=1.0.6"",
+                ""phpunit/phpunit-mock-objects"": ""~2.3"",
+                ""sebastian/comparator"": ""~1.1"",
+                ""sebastian/diff"": ""~1.2"",
+                ""sebastian/environment"": ""~1.2"",
+                ""sebastian/exporter"": ""~1.2"",
+                ""sebastian/global-state"": ""~1.0"",
+                ""sebastian/version"": ""~1.0"",
+                ""symfony/yaml"": ""~2.1|~3.0""
+            },
+            ""suggest"": {
+                ""phpunit/php-invoker"": ""~1.1""
+            },
+            ""bin"": [
+                ""phpunit""
+            ],
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""4.7.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de"",
+                    ""role"": ""lead""
+                }
+            ],
+            ""description"": ""The PHP Unit Testing framework."",
+            ""homepage"": ""https://phpunit.de/"",
+            ""keywords"": [
+                ""phpunit"",
+                ""testing"",
+                ""xunit""
+            ],
+            ""time"": ""2015-06-18 13:33:26""
+        },
+        {
+            ""name"": ""phpunit/phpunit-mock-objects"",
+            ""version"": ""2.3.4"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/phpunit-mock-objects.git"",
+                ""reference"": ""92408bb1968a81b3217a6fdf6c1a198da83caa35""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/phpunit-mock-objects/zipball/92408bb1968a81b3217a6fdf6c1a198da83caa35"",
+                ""reference"": ""92408bb1968a81b3217a6fdf6c1a198da83caa35"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""doctrine/instantiator"": ""~1.0,>=1.0.2"",
+                ""php"": "">=5.3.3"",
+                ""phpunit/php-text-template"": ""~1.2""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.4""
+            },
+            ""suggest"": {
+                ""ext-soap"": ""*""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.3.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sb@sebastian-bergmann.de"",
+                    ""role"": ""lead""
+                }
+            ],
+            ""description"": ""Mock Object library for PHPUnit"",
+            ""homepage"": ""https://github.com/sebastianbergmann/phpunit-mock-objects/"",
+            ""keywords"": [
+                ""mock"",
+                ""xunit""
+            ],
+            ""time"": ""2015-06-11 15:55:48""
+        },
+        {
+            ""name"": ""psr/log"",
+            ""version"": ""1.0.0"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/php-fig/log.git"",
+                ""reference"": ""fe0936ee26643249e916849d48e3a51d5f5e278b""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/php-fig/log/zipball/fe0936ee26643249e916849d48e3a51d5f5e278b"",
+                ""reference"": ""fe0936ee26643249e916849d48e3a51d5f5e278b"",
+                ""shasum"": """"
+            },
+            ""type"": ""library"",
+            ""autoload"": {
+                ""psr-0"": {
+                    ""Psr\\Log\\"": """"
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""PHP-FIG"",
+                    ""homepage"": ""http://www.php-fig.org/""
+                }
+            ],
+            ""description"": ""Common interface for logging libraries"",
+            ""keywords"": [
+                ""log"",
+                ""psr"",
+                ""psr-3""
+            ],
+            ""time"": ""2012-12-21 11:40:51""
+        },
+        {
+            ""name"": ""satooshi/php-coveralls"",
+            ""version"": ""v0.6.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/satooshi/php-coveralls.git"",
+                ""reference"": ""dd0df95bd37a7cf5c5c50304dfe260ffe4b50760""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/satooshi/php-coveralls/zipball/dd0df95bd37a7cf5c5c50304dfe260ffe4b50760"",
+                ""reference"": ""dd0df95bd37a7cf5c5c50304dfe260ffe4b50760"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""ext-curl"": ""*"",
+                ""ext-json"": ""*"",
+                ""ext-simplexml"": ""*"",
+                ""guzzle/guzzle"": "">=3.0"",
+                ""php"": "">=5.3"",
+                ""psr/log"": ""1.0.0"",
+                ""symfony/config"": "">=2.0"",
+                ""symfony/console"": "">=2.0"",
+                ""symfony/stopwatch"": "">=2.2"",
+                ""symfony/yaml"": "">=2.0""
+            },
+            ""require-dev"": {
+                ""apigen/apigen"": ""2.8.*@stable"",
+                ""pdepend/pdepend"": ""dev-master"",
+                ""phpmd/phpmd"": ""dev-master"",
+                ""phpunit/php-invoker"": "">=1.1.0,<1.2.0"",
+                ""phpunit/phpunit"": ""3.7.*@stable"",
+                ""sebastian/finder-facade"": ""dev-master"",
+                ""sebastian/phpcpd"": ""1.4.*@stable"",
+                ""squizlabs/php_codesniffer"": ""1.4.*@stable"",
+                ""theseer/fdomdocument"": ""dev-master""
+            },
+            ""bin"": [
+                ""composer/bin/coveralls""
+            ],
+            ""type"": ""library"",
+            ""autoload"": {
+                ""psr-0"": {
+                    ""Contrib\\Component"": ""src/"",
+                    ""Contrib\\Bundle"": ""src/""
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Kitamura Satoshi"",
+                    ""email"": ""with.no.parachute@gmail.com"",
+                    ""homepage"": ""https://www.facebook.com/satooshi.jp""
+                }
+            ],
+            ""description"": ""PHP client library for Coveralls API"",
+            ""homepage"": ""https://github.com/satooshi/php-coveralls"",
+            ""keywords"": [
+                ""ci"",
+                ""coverage"",
+                ""github"",
+                ""test""
+            ],
+            ""time"": ""2013-05-04 08:07:33""
+        },
+        {
+            ""name"": ""sebastian/comparator"",
+            ""version"": ""1.1.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/comparator.git"",
+                ""reference"": ""1dd8869519a225f7f2b9eb663e225298fade819e""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/comparator/zipball/1dd8869519a225f7f2b9eb663e225298fade819e"",
+                ""reference"": ""1dd8869519a225f7f2b9eb663e225298fade819e"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3"",
+                ""sebastian/diff"": ""~1.2"",
+                ""sebastian/exporter"": ""~1.2""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.4""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.1.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Jeff Welch"",
+                    ""email"": ""whatthejeff@gmail.com""
+                },
+                {
+                    ""name"": ""Volker Dusch"",
+                    ""email"": ""github@wallbash.com""
+                },
+                {
+                    ""name"": ""Bernhard Schussek"",
+                    ""email"": ""bschussek@2bepublished.at""
+                },
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de""
+                }
+            ],
+            ""description"": ""Provides the functionality to compare PHP values for equality"",
+            ""homepage"": ""http://www.github.com/sebastianbergmann/comparator"",
+            ""keywords"": [
+                ""comparator"",
+                ""compare"",
+                ""equality""
+            ],
+            ""time"": ""2015-01-29 16:28:08""
+        },
+        {
+            ""name"": ""sebastian/diff"",
+            ""version"": ""1.3.0"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/diff.git"",
+                ""reference"": ""863df9687835c62aa423a22412d26fa2ebde3fd3""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/diff/zipball/863df9687835c62aa423a22412d26fa2ebde3fd3"",
+                ""reference"": ""863df9687835c62aa423a22412d26fa2ebde3fd3"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.2""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.3-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Kore Nordmann"",
+                    ""email"": ""mail@kore-nordmann.de""
+                },
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de""
+                }
+            ],
+            ""description"": ""Diff implementation"",
+            ""homepage"": ""http://www.github.com/sebastianbergmann/diff"",
+            ""keywords"": [
+                ""diff""
+            ],
+            ""time"": ""2015-02-22 15:13:53""
+        },
+        {
+            ""name"": ""sebastian/environment"",
+            ""version"": ""1.2.2"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/environment.git"",
+                ""reference"": ""5a8c7d31914337b69923db26c4221b81ff5a196e""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/environment/zipball/5a8c7d31914337b69923db26c4221b81ff5a196e"",
+                ""reference"": ""5a8c7d31914337b69923db26c4221b81ff5a196e"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.4""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.3.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de""
+                }
+            ],
+            ""description"": ""Provides functionality to handle HHVM/PHP environments"",
+            ""homepage"": ""http://www.github.com/sebastianbergmann/environment"",
+            ""keywords"": [
+                ""Xdebug"",
+                ""environment"",
+                ""hhvm""
+            ],
+            ""time"": ""2015-01-01 10:01:08""
+        },
+        {
+            ""name"": ""sebastian/exporter"",
+            ""version"": ""1.2.0"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/exporter.git"",
+                ""reference"": ""84839970d05254c73cde183a721c7af13aede943""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/exporter/zipball/84839970d05254c73cde183a721c7af13aede943"",
+                ""reference"": ""84839970d05254c73cde183a721c7af13aede943"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3"",
+                ""sebastian/recursion-context"": ""~1.0""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.4""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.2.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Jeff Welch"",
+                    ""email"": ""whatthejeff@gmail.com""
+                },
+                {
+                    ""name"": ""Volker Dusch"",
+                    ""email"": ""github@wallbash.com""
+                },
+                {
+                    ""name"": ""Bernhard Schussek"",
+                    ""email"": ""bschussek@2bepublished.at""
+                },
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de""
+                },
+                {
+                    ""name"": ""Adam Harvey"",
+                    ""email"": ""aharvey@php.net""
+                }
+            ],
+            ""description"": ""Provides the functionality to export PHP variables for visualization"",
+            ""homepage"": ""http://www.github.com/sebastianbergmann/exporter"",
+            ""keywords"": [
+                ""export"",
+                ""exporter""
+            ],
+            ""time"": ""2015-01-27 07:23:06""
+        },
+        {
+            ""name"": ""sebastian/global-state"",
+            ""version"": ""1.0.0"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/global-state.git"",
+                ""reference"": ""c7428acdb62ece0a45e6306f1ae85e1c05b09c01""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/global-state/zipball/c7428acdb62ece0a45e6306f1ae85e1c05b09c01"",
+                ""reference"": ""c7428acdb62ece0a45e6306f1ae85e1c05b09c01"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.2""
+            },
+            ""suggest"": {
+                ""ext-uopz"": ""*""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.0-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de""
+                }
+            ],
+            ""description"": ""Snapshotting of global state"",
+            ""homepage"": ""http://www.github.com/sebastianbergmann/global-state"",
+            ""keywords"": [
+                ""global state""
+            ],
+            ""time"": ""2014-10-06 09:23:50""
+        },
+        {
+            ""name"": ""sebastian/recursion-context"",
+            ""version"": ""1.0.0"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/recursion-context.git"",
+                ""reference"": ""3989662bbb30a29d20d9faa04a846af79b276252""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/3989662bbb30a29d20d9faa04a846af79b276252"",
+                ""reference"": ""3989662bbb30a29d20d9faa04a846af79b276252"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.3""
+            },
+            ""require-dev"": {
+                ""phpunit/phpunit"": ""~4.4""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""1.0.x-dev""
+                }
+            },
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Jeff Welch"",
+                    ""email"": ""whatthejeff@gmail.com""
+                },
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de""
+                },
+                {
+                    ""name"": ""Adam Harvey"",
+                    ""email"": ""aharvey@php.net""
+                }
+            ],
+            ""description"": ""Provides functionality to recursively process PHP variables"",
+            ""homepage"": ""http://www.github.com/sebastianbergmann/recursion-context"",
+            ""time"": ""2015-01-24 09:48:32""
+        },
+        {
+            ""name"": ""sebastian/version"",
+            ""version"": ""1.0.5"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/sebastianbergmann/version.git"",
+                ""reference"": ""ab931d46cd0d3204a91e1b9a40c4bc13032b58e4""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/sebastianbergmann/version/zipball/ab931d46cd0d3204a91e1b9a40c4bc13032b58e4"",
+                ""reference"": ""ab931d46cd0d3204a91e1b9a40c4bc13032b58e4"",
+                ""shasum"": """"
+            },
+            ""type"": ""library"",
+            ""autoload"": {
+                ""classmap"": [
+                    ""src/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""BSD-3-Clause""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Sebastian Bergmann"",
+                    ""email"": ""sebastian@phpunit.de"",
+                    ""role"": ""lead""
+                }
+            ],
+            ""description"": ""Library that helps with managing the version number of Git-hosted PHP projects"",
+            ""homepage"": ""https://github.com/sebastianbergmann/version"",
+            ""time"": ""2015-02-24 06:35:25""
+        },
+        {
+            ""name"": ""symfony/config"",
+            ""version"": ""v2.7.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/symfony/Config.git"",
+                ""reference"": ""58ded81f1f582a87c528ef3dae9a859f78b5f374""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/symfony/Config/zipball/58ded81f1f582a87c528ef3dae9a859f78b5f374"",
+                ""reference"": ""58ded81f1f582a87c528ef3dae9a859f78b5f374"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.9"",
+                ""symfony/filesystem"": ""~2.3""
+            },
+            ""require-dev"": {
+                ""symfony/phpunit-bridge"": ""~2.7""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.7-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-4"": {
+                    ""Symfony\\Component\\Config\\"": """"
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Fabien Potencier"",
+                    ""email"": ""fabien@symfony.com""
+                },
+                {
+                    ""name"": ""Symfony Community"",
+                    ""homepage"": ""https://symfony.com/contributors""
+                }
+            ],
+            ""description"": ""Symfony Config Component"",
+            ""homepage"": ""https://symfony.com"",
+            ""time"": ""2015-06-11 14:06:56""
+        },
+        {
+            ""name"": ""symfony/console"",
+            ""version"": ""v2.7.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/symfony/Console.git"",
+                ""reference"": ""564398bc1f33faf92fc2ec86859983d30eb81806""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/symfony/Console/zipball/564398bc1f33faf92fc2ec86859983d30eb81806"",
+                ""reference"": ""564398bc1f33faf92fc2ec86859983d30eb81806"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.9""
+            },
+            ""require-dev"": {
+                ""psr/log"": ""~1.0"",
+                ""symfony/event-dispatcher"": ""~2.1"",
+                ""symfony/phpunit-bridge"": ""~2.7"",
+                ""symfony/process"": ""~2.1""
+            },
+            ""suggest"": {
+                ""psr/log"": ""For using the console logger"",
+                ""symfony/event-dispatcher"": """",
+                ""symfony/process"": """"
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.7-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-4"": {
+                    ""Symfony\\Component\\Console\\"": """"
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Fabien Potencier"",
+                    ""email"": ""fabien@symfony.com""
+                },
+                {
+                    ""name"": ""Symfony Community"",
+                    ""homepage"": ""https://symfony.com/contributors""
+                }
+            ],
+            ""description"": ""Symfony Console Component"",
+            ""homepage"": ""https://symfony.com"",
+            ""time"": ""2015-06-10 15:30:22""
+        },
+        {
+            ""name"": ""symfony/event-dispatcher"",
+            ""version"": ""v2.7.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/symfony/EventDispatcher.git"",
+                ""reference"": ""be3c5ff8d503c46768aeb78ce6333051aa6f26d9""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/symfony/EventDispatcher/zipball/be3c5ff8d503c46768aeb78ce6333051aa6f26d9"",
+                ""reference"": ""be3c5ff8d503c46768aeb78ce6333051aa6f26d9"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.9""
+            },
+            ""require-dev"": {
+                ""psr/log"": ""~1.0"",
+                ""symfony/config"": ""~2.0,>=2.0.5"",
+                ""symfony/dependency-injection"": ""~2.6"",
+                ""symfony/expression-language"": ""~2.6"",
+                ""symfony/phpunit-bridge"": ""~2.7"",
+                ""symfony/stopwatch"": ""~2.3""
+            },
+            ""suggest"": {
+                ""symfony/dependency-injection"": """",
+                ""symfony/http-kernel"": """"
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.7-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-4"": {
+                    ""Symfony\\Component\\EventDispatcher\\"": """"
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Fabien Potencier"",
+                    ""email"": ""fabien@symfony.com""
+                },
+                {
+                    ""name"": ""Symfony Community"",
+                    ""homepage"": ""https://symfony.com/contributors""
+                }
+            ],
+            ""description"": ""Symfony EventDispatcher Component"",
+            ""homepage"": ""https://symfony.com"",
+            ""time"": ""2015-06-08 09:37:21""
+        },
+        {
+            ""name"": ""symfony/filesystem"",
+            ""version"": ""v2.7.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/symfony/Filesystem.git"",
+                ""reference"": ""a0d43eb3e17d4f4c6990289805a488a0482a07f3""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/symfony/Filesystem/zipball/a0d43eb3e17d4f4c6990289805a488a0482a07f3"",
+                ""reference"": ""a0d43eb3e17d4f4c6990289805a488a0482a07f3"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.9""
+            },
+            ""require-dev"": {
+                ""symfony/phpunit-bridge"": ""~2.7""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.7-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-4"": {
+                    ""Symfony\\Component\\Filesystem\\"": """"
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Fabien Potencier"",
+                    ""email"": ""fabien@symfony.com""
+                },
+                {
+                    ""name"": ""Symfony Community"",
+                    ""homepage"": ""https://symfony.com/contributors""
+                }
+            ],
+            ""description"": ""Symfony Filesystem Component"",
+            ""homepage"": ""https://symfony.com"",
+            ""time"": ""2015-06-08 09:37:21""
+        },
+        {
+            ""name"": ""symfony/stopwatch"",
+            ""version"": ""v2.7.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/symfony/Stopwatch.git"",
+                ""reference"": ""c653f1985f6c2b7dbffd04d48b9c0a96aaef814b""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/symfony/Stopwatch/zipball/c653f1985f6c2b7dbffd04d48b9c0a96aaef814b"",
+                ""reference"": ""c653f1985f6c2b7dbffd04d48b9c0a96aaef814b"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.9""
+            },
+            ""require-dev"": {
+                ""symfony/phpunit-bridge"": ""~2.7""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.7-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-4"": {
+                    ""Symfony\\Component\\Stopwatch\\"": """"
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Fabien Potencier"",
+                    ""email"": ""fabien@symfony.com""
+                },
+                {
+                    ""name"": ""Symfony Community"",
+                    ""homepage"": ""https://symfony.com/contributors""
+                }
+            ],
+            ""description"": ""Symfony Stopwatch Component"",
+            ""homepage"": ""https://symfony.com"",
+            ""time"": ""2015-06-04 20:11:48""
+        },
+        {
+            ""name"": ""symfony/yaml"",
+            ""version"": ""v2.7.1"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/symfony/Yaml.git"",
+                ""reference"": ""9808e75c609a14f6db02f70fccf4ca4aab53c160""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/symfony/Yaml/zipball/9808e75c609a14f6db02f70fccf4ca4aab53c160"",
+                ""reference"": ""9808e75c609a14f6db02f70fccf4ca4aab53c160"",
+                ""shasum"": """"
+            },
+            ""require"": {
+                ""php"": "">=5.3.9""
+            },
+            ""require-dev"": {
+                ""symfony/phpunit-bridge"": ""~2.7""
+            },
+            ""type"": ""library"",
+            ""extra"": {
+                ""branch-alias"": {
+                    ""dev-master"": ""2.7-dev""
+                }
+            },
+            ""autoload"": {
+                ""psr-4"": {
+                    ""Symfony\\Component\\Yaml\\"": """"
+                }
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""MIT""
+            ],
+            ""authors"": [
+                {
+                    ""name"": ""Fabien Potencier"",
+                    ""email"": ""fabien@symfony.com""
+                },
+                {
+                    ""name"": ""Symfony Community"",
+                    ""homepage"": ""https://symfony.com/contributors""
+                }
+            ],
+            ""description"": ""Symfony Yaml Component"",
+            ""homepage"": ""https://symfony.com"",
+            ""time"": ""2015-06-10 15:30:22""
+        }
+    ],
+    ""aliases"": [],
+    ""minimum-stability"": ""stable"",
+    ""stability-flags"": [],
+    ""prefer-stable"": false,
+    ""prefer-lowest"": false,
+    ""platform"": [],
+    ""platform-dev"": []
+}
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/phpunit.xml.dist b/Services/MediaObjects/lib/svg-sanitizer-master/phpunit.xml.dist
new file mode 100644
index 000000000000..e405ce37e214
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/phpunit.xml.dist
@@ -0,0 +1,17 @@
+<?xml version=""1.0"" encoding=""UTF-8""?>
+<phpunit bootstrap=""vendor/autoload.php""
+         colors=""true""
+         stopOnFailure=""false""
+         syntaxCheck=""false"">
+
+    <testsuites>
+        <testsuite name=""The project's test suite"">
+            <directory>./tests</directory>
+        </testsuite>
+    </testsuites>
+
+    <logging>
+        <log type=""coverage-clover"" target=""./build/logs/clover.xml""/>
+    </logging>
+
+</phpunit>
\ No newline at end of file
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/src/Sanitizer.php b/Services/MediaObjects/lib/svg-sanitizer-master/src/Sanitizer.php
new file mode 100644
index 000000000000..50dda2ce5074
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/src/Sanitizer.php
@@ -0,0 +1,327 @@
+<?php
+
+
+namespace enshrined\svgSanitize;
+
+
+use DOMDocument;
+use enshrined\svgSanitize\data\AllowedAttributes;
+use enshrined\svgSanitize\data\AllowedTags;
+use enshrined\svgSanitize\data\AttributeInterface;
+use enshrined\svgSanitize\data\TagInterface;
+
+/**
+ * Class Sanitizer
+ *
+ * @package enshrined\svgSanitize
+ */
+class Sanitizer
+{
+
+    /**
+     * Regex to catch script and data values in attributes
+     */
+    const SCRIPT_REGEX = '/(?:\w+script|data):/xi';
+
+    /**
+     * Regex to test for remote URLs in linked assets
+     */
+    const REMOTE_REFERENCE_REGEX = '/url\(([\'""]?(?:http|https):)[\'""]?([^\'""\)]*)[\'""]?\)/xi';
+
+    /**
+     * @var DOMDocument
+     */
+    protected $xmlDocument;
+
+    /**
+     * @var array
+     */
+    protected $allowedTags;
+
+    /**
+     * @var array
+     */
+    protected $allowedAttrs;
+
+    /**
+     * @var
+     */
+    protected $xmlLoaderValue;
+
+    /**
+     * @var bool
+     */
+    protected $minifyXML = false;
+
+    /**
+     * @var bool
+     */
+    protected $removeRemoteReferences = false;
+
+    /**
+     *
+     */
+    function __construct()
+    {
+        $this->resetInternal();
+
+        // Load default tags/attributes
+        $this->allowedAttrs = AllowedAttributes::getAttributes();
+        $this->allowedTags = AllowedTags::getTags();
+    }
+
+    /**
+     * Set up the DOMDocument
+     */
+    protected function resetInternal()
+    {
+        $this->xmlDocument = new DOMDocument();
+        $this->xmlDocument->preserveWhiteSpace = false;
+        $this->xmlDocument->strictErrorChecking = false;
+        $this->xmlDocument->formatOutput = true;
+
+        // Maybe don't format the output
+        if($this->minifyXML) {
+            $this->xmlDocument->formatOutput = false;
+        }
+    }
+
+    /**
+     * Get the array of allowed tags
+     *
+     * @return array
+     */
+    public function getAllowedTags()
+    {
+        return $this->allowedTags;
+    }
+
+    /**
+     * Set custom allowed tags
+     *
+     * @param TagInterface $allowedTags
+     */
+    public function setAllowedTags(TagInterface $allowedTags)
+    {
+        $this->allowedTags = $allowedTags::getTags();
+    }
+
+    /**
+     * Get the array of allowed attributes
+     *
+     * @return array
+     */
+    public function getAllowedAttrs()
+    {
+        return $this->allowedAttrs;
+    }
+
+    /**
+     * Set custom allowed attributes
+     *
+     * @param AttributeInterface $allowedAttrs
+     */
+    public function setAllowedAttrs(AttributeInterface $allowedAttrs)
+    {
+        $this->allowedAttrs = $allowedAttrs::getAttributes();
+    }
+
+    /**
+     * Should we remove references to remote files?
+     *
+     * @param bool $removeRemoteRefs
+     */
+    public function removeRemoteReferences($removeRemoteRefs = false)
+    {
+        $this->removeRemoteReferences = $removeRemoteRefs;
+    }
+
+    /**
+     * Sanitize the passed string
+     *
+     * @param string $dirty
+     * @return string
+     */
+    public function sanitize($dirty)
+    {
+        // Don't run on an empty string
+        if (empty($dirty)) {
+            return '';
+        }
+
+        // Strip php tags
+        $dirty = preg_replace('/<\?(=|php)(.+?)\?>/i', '', $dirty);
+
+        $this->setUpBefore();
+
+        $loaded = $this->xmlDocument->loadXML($dirty);
+
+        // If we couldn't parse the XML then we go no further. Reset and return false
+        if (!$loaded) {
+            $this->resetAfter();
+            return false;
+        }
+
+        $this->removeDoctype();
+
+        // Grab all the elements
+        $allElements = $this->xmlDocument->getElementsByTagName(""*"");
+
+        // Start the cleaning proccess
+        $this->startClean($allElements);
+
+        // Save cleaned XML to a variable
+        $clean = $this->xmlDocument->saveXML($this->xmlDocument->documentElement, LIBXML_NOEMPTYTAG);
+
+        $this->resetAfter();
+
+        // Remove any extra whitespaces when minifying
+        if($this->minifyXML) {
+            $clean = preg_replace('/\s+/', ' ', $clean);
+        }
+
+        // Return result
+        return $clean;
+    }
+
+    /**
+     * Set up libXML before we start
+     */
+    protected function setUpBefore()
+    {
+        // Turn off the entity loader
+        $this->xmlLoaderValue = libxml_disable_entity_loader(true);
+
+        // Suppress the errors because we don't really have to worry about formation before cleansing
+        libxml_use_internal_errors(true);
+    }
+
+    /**
+     * Reset the class after use
+     */
+    protected function resetAfter()
+    {
+        // Reset DOMDocument to a clean state in case we use it again
+        $this->resetInternal();
+
+        // Reset the entity loader3
+        libxml_disable_entity_loader($this->xmlLoaderValue);
+    }
+
+    /**
+     * Remove the XML Doctype
+     * It may be caught later on output but that seems to be buggy, so we need to make sure it's gone
+     */
+    protected function removeDoctype()
+    {
+        foreach ($this->xmlDocument->childNodes as $child) {
+            if ($child->nodeType === XML_DOCUMENT_TYPE_NODE) {
+                $child->parentNode->removeChild($child);
+            }
+        }
+    }
+
+    /**
+     * Start the cleaning with tags, then we move onto attributes and hrefs later
+     *
+     * @param \DOMNodeList $elements
+     */
+    protected function startClean(\DOMNodeList $elements)
+    {
+        // loop through all elements
+        // we do this backwards so we don't skip anything if we delete a node
+        // see comments at: http://php.net/manual/en/class.domnamednodemap.php
+        for ($i = $elements->length - 1; $i >= 0; $i--) {
+            $currentElement = $elements->item($i);
+
+            // If the tag isn't in the whitelist, remove it and continue with next iteration
+            if (!in_array(strtolower($currentElement->tagName), $this->allowedTags)) {
+                $currentElement->parentNode->removeChild($currentElement);
+                continue;
+            }
+
+            $this->cleanAttributesOnWhitelist($currentElement);
+
+            $this->cleanXlinkHrefs($currentElement);
+
+            $this->cleanHrefs($currentElement);
+        }
+    }
+
+    /**
+     * Only allow attributes that are on the whitelist
+     *
+     * @param \DOMElement $element
+     */
+    protected function cleanAttributesOnWhitelist(\DOMElement $element)
+    {
+        for ($x = $element->attributes->length - 1; $x >= 0; $x--) {
+            // get attribute name
+            $attrName = $element->attributes->item($x)->name;
+
+            // Remove attribute if not in whitelist
+            if (!in_array(strtolower($attrName), $this->allowedAttrs)) {
+                $element->removeAttribute($attrName);
+            }
+
+            // Do we want to strip remote references?
+            if($this->removeRemoteReferences) {
+                // Remove attribute if it has a remote reference
+                if (isset($element->attributes->item($x)->value) && $this->hasRemoteReference($element->attributes->item($x)->value)) {
+                    $element->removeAttribute($attrName);
+                }
+            }
+        }
+    }
+
+    /**
+     * Clean the xlink:hrefs of script and data embeds
+     *
+     * @param \DOMElement $element
+     */
+    protected function cleanXlinkHrefs(\DOMElement &$element)
+    {
+        $xlinks = $element->getAttributeNS('http://www.w3.org/1999/xlink', 'href');
+        if (preg_match(self::SCRIPT_REGEX, $xlinks) === 1) {
+            $element->removeAttributeNS('http://www.w3.org/1999/xlink', 'href');
+        }
+    }
+
+    /**
+     * Clean the hrefs of script and data embeds
+     *
+     * @param \DOMElement $element
+     */
+    protected function cleanHrefs(\DOMElement &$element)
+    {
+        $href = $element->getAttribute('href');
+        if (preg_match(self::SCRIPT_REGEX, $href) === 1) {
+            $element->removeAttribute('href');
+        }
+    }
+
+    /**
+     * Does this attribute value have a remote reference?
+     *
+     * @param $value
+     * @return bool
+     */
+    protected function hasRemoteReference($value)
+    {
+        if (preg_match(self::REMOTE_REFERENCE_REGEX, $value) === 1) {
+            return true;
+        }
+
+        return false;
+    }
+
+    /**
+     * Should we minify the output?
+     *
+     * @param bool $shouldMinify
+     */
+    public function minify($shouldMinify = false)
+    {
+        $this->minifyXML = (bool) $shouldMinify;
+    }
+}
\ No newline at end of file
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedAttributes.php b/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedAttributes.php
new file mode 100644
index 000000000000..d20e3bacb084
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedAttributes.php
@@ -0,0 +1,86 @@
+<?php
+
+
+namespace enshrined\svgSanitize\data;
+
+
+/**
+ * Class AllowedAttributes
+ *
+ * @package enshrined\svgSanitize\data
+ */
+class AllowedAttributes implements AttributeInterface
+{
+
+    /**
+     * Returns an array of attributes
+     *
+     * @return array
+     */
+    public static function getAttributes()
+    {
+        return array(
+            // HTML
+            'accept','action','align','alt','autocomplete','background','bgcolor',
+            'border','cellpadding','cellspacing','checked','cite','class','clear','color',
+            'cols','colspan','coords','datetime','default','dir','disabled',
+            'download','enctype','face','for','headers','height','hidden','high','href',
+            'hreflang','id','ismap','label','lang','list','loop', 'low','max',
+            'maxlength','media','method','min','multiple','name','noshade','novalidate',
+            'nowrap','open','optimum','pattern','placeholder','poster','preload','pubdate',
+            'radiogroup','readonly','rel','required','rev','reversed','rows',
+            'rowspan','spellcheck','scope','selected','shape','size','span',
+            'srclang','start','src','step','style','summary','tabindex','title',
+            'type','usemap','valign','value','width','xmlns',
+
+            // SVG
+            'accent-height','accumulate','additivive','alignment-baseline',
+            'ascent','azimuth','baseline-shift','bias','clip','clip-path',
+            'clip-rule','color','color-interpolation','color-interpolation-filters',
+            'color-profile','color-rendering','cx','cy','d','dy','dy','direction',
+            'display','divisor','dur','elevation','end','fill','fill-opacity',
+            'fill-rule','filter','flood-color','flood-opacity','font-family',
+            'font-size','font-size-adjust','font-stretch','font-style','font-variant',
+            'font-weight','image-rendering','in','in2','k1','k2','k3','k4','kerning',
+            'letter-spacing','lighting-color','local','marker-end','marker-mid',
+            'marker-start','max','mask','mode','min','offset','operator','opacity',
+            'order','orient','overflow','paint-order','path','points','r','rx','ry','radius',
+            'restart','scale','seed','shape-rendering','stop-color','stop-opacity',
+            'stroke-dasharray','stroke-dashoffset','stroke-linecap','stroke-linejoin',
+            'stroke-miterlimit','stroke-opacity','stroke','stroke-width','transform',
+            'text-anchor','text-decoration','text-rendering','u1','u2','viewbox',
+            'visibility','word-spacing','wrap','writing-mode','x','x1','x2','y',
+            'y1','y2','z',
+
+            // MathML
+            'accent','accentunder','bevelled','close','columnsalign','columnlines',
+            'columnspan','denomalign','depth','display','displaystyle','fence',
+            'frame','largeop','length','linethickness','lspace','lquote',
+            'mathbackground','mathcolor','mathsize','mathvariant','maxsize',
+            'minsize','movablelimits','notation','numalign','open','rowalign',
+            'rowlines','rowspacing','rowspan','rspace','rquote','scriptlevel',
+            'scriptminsize','scriptsizemultiplier','selection','separator',
+            'separators','stretchy','subscriptshift','supscriptshift','symmetric',
+            'voffset',
+
+            // XML
+            'xlink:href','xml:id','xlink:title','xml:space',
+
+
+            // Camel Case
+            ""allowreorder"", ""attributename"", ""attributetype"", ""autoreverse"", ""basefrequency"",
+            ""baseprofile"", ""calcmode"", ""clippathunits"", ""contentscripttype"", ""contentstyletype"",
+            ""diffuseconstant"", ""edgemode"", ""externalresourcesrequired"", ""filterres"",
+            ""filterunits"", ""glyphref"", ""gradienttransform"", ""gradientunits"", ""kernelmatrix"",
+            ""kernelunitlength"", ""keypoints"", ""keysplines"", ""keytimes"", ""lengthadjust"",
+            ""limitingconeangle"", ""markerheight"", ""markerunits"", ""markerwidth"", ""maskcontentunits"",
+            ""maskunits"", ""numoctaves"", ""pathlength"", ""patterncontentunits"", ""patterntransform"",
+            ""patternunits"", ""pointsatx"", ""pointsaty"", ""pointsatz"", ""preservealpha"",
+            ""preserveaspectratio"", ""primitiveunits"", ""refx"", ""refy"", ""repeatcount"",
+            ""repeatdur"", ""requiredextensions"", ""requiredfeatures"", ""specularconstant"",
+            ""specularexponent"", ""spreadmethod"", ""startoffset"", ""stddeviation"", ""stitchtiles"",
+            ""surfacescale"", ""systemlanguage"", ""tablevalues"", ""targetx"", ""targety"", ""textlength"",
+            ""viewbox"", ""viewtarget"", ""xchannelselector"", ""ychannelselector"", ""zoomandpan"",
+        );
+    }
+}
\ No newline at end of file
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedTags.php b/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedTags.php
new file mode 100644
index 000000000000..a90d19953d85
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AllowedTags.php
@@ -0,0 +1,63 @@
+<?php
+
+
+namespace enshrined\svgSanitize\data;
+
+
+/**
+ * Class AllowedTags
+ *
+ * @package enshrined\svgSanitize\data
+ */
+class AllowedTags implements TagInterface
+{
+
+    /**
+     * Returns an array of tags
+     *
+     * @return array
+     */
+    public static function getTags()
+    {
+        return array (
+            // HTML
+            'a','abbr','acronym','address','area','article','aside','audio','b',
+            'bdi','bdo','big','blink','blockquote','body','br','button','canvas',
+            'caption','center','cite','code','col','colgroup','content','data',
+            'datalist','dd','decorator','del','details','dfn','dir','div','dl','dt',
+            'element','em','fieldset','figcaption','figure','font','footer','form',
+            'h1','h2','h3','h4','h5','h6','head','header','hgroup','hr','html','i',
+            'img','input','ins','kbd','label','legend','li','main','map','mark',
+            'marquee','menu','menuitem','meter','nav','nobr','ol','optgroup',
+            'option','output','p','pre','progress','q','rp','rt','ruby','s','samp',
+            'section','select','shadow','small','source','spacer','span','strike',
+            'strong','style','sub','summary','sup','table','tbody','td','template',
+            'textarea','tfoot','th','thead','time','tr','track','tt','u','ul','var',
+            'video','wbr',
+
+            // SVG
+            'svg','altglyph','altglyphdef','altglyphitem','animatecolor',
+            'animatemotion','animatetransform','circle','clippath','defs','desc',
+            'ellipse','filter','font','g','glyph','glyphref','hkern','image','line',
+            'lineargradient','marker','mask','metadata','mpath','path','pattern',
+            'polygon','polyline','radialgradient','rect','stop','switch','symbol',
+            'text','textpath','title','tref','tspan','view','vkern',
+
+            // SVG Filters
+            'feblend','fecolormatrix','fecomponenttransfer','fecomposite',
+            'feconvolvematrix','fediffuselighting','fedisplacementmap',
+            'feflood','fefunca','fefuncb','fefuncg','fefuncr','fegaussianblur',
+            'femerge','femergenode','femorphology','feoffset',
+            'fespecularlighting','fetile','feturbulence',
+
+            //MathML
+            'math','menclose','merror','mfenced','mfrac','mglyph','mi','mlabeledtr',
+            'mmuliscripts','mn','mo','mover','mpadded','mphantom','mroot','mrow',
+            'ms','mpspace','msqrt','mystyle','msub','msup','msubsup','mtable','mtd',
+            'mtext','mtr','munder','munderover',
+
+            //text
+            '#text'
+        );
+    }
+}
\ No newline at end of file
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AttributeInterface.php b/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AttributeInterface.php
new file mode 100644
index 000000000000..d0e2082b4f0d
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/src/data/AttributeInterface.php
@@ -0,0 +1,21 @@
+<?php
+
+
+namespace enshrined\svgSanitize\data;
+
+
+/**
+ * Class AttributeInterface
+ *
+ * @package enshrined\svgSanitize\data
+ */
+interface AttributeInterface
+{
+
+    /**
+     * Returns an array of attributes
+     *
+     * @return array
+     */
+    public static function getAttributes();
+}
\ No newline at end of file
diff --git a/Services/MediaObjects/lib/svg-sanitizer-master/src/data/TagInterface.php b/Services/MediaObjects/lib/svg-sanitizer-master/src/data/TagInterface.php
new file mode 100644
index 000000000000..da926d93177a
--- /dev/null
+++ b/Services/MediaObjects/lib/svg-sanitizer-master/src/data/TagInterface.php
@@ -0,0 +1,22 @@
+<?php
+
+
+namespace enshrined\svgSanitize\data;
+
+
+/**
+ * Interface TagInterface
+ *
+ * @package enshrined\svgSanitize\tags
+ */
+interface TagInterface
+{
+
+    /**
+     * Returns an array of tags
+     *
+     * @return array
+     */
+    public static function getTags();
+
+}
\ No newline at end of file"
CVE-2017-15265,"From 71105998845fb012937332fe2e806d443c09e026 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Mon, 9 Oct 2017 11:09:20 +0200
Subject: [PATCH] ALSA: seq: Fix use-after-free at creating a port

There is a potential race window opened at creating and deleting a
port via ioctl, as spotted by fuzzing.  snd_seq_create_port() creates
a port object and returns its pointer, but it doesn't take the
refcount, thus it can be deleted immediately by another thread.
Meanwhile, snd_seq_ioctl_create_port() still calls the function
snd_seq_system_client_ev_port_start() with the created port object
that is being deleted, and this triggers use-after-free like:

 BUG: KASAN: use-after-free in snd_seq_ioctl_create_port+0x504/0x630 [snd_seq] at addr ffff8801f2241cb1
 =============================================================================
 BUG kmalloc-512 (Tainted: G    B          ): kasan: bad access detected
 -----------------------------------------------------------------------------
 INFO: Allocated in snd_seq_create_port+0x94/0x9b0 [snd_seq] age=1 cpu=3 pid=4511
 	___slab_alloc+0x425/0x460
 	__slab_alloc+0x20/0x40
  	kmem_cache_alloc_trace+0x150/0x190
	snd_seq_create_port+0x94/0x9b0 [snd_seq]
	snd_seq_ioctl_create_port+0xd1/0x630 [snd_seq]
 	snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
 	snd_seq_ioctl+0x40/0x80 [snd_seq]
 	do_vfs_ioctl+0x54b/0xda0
 	SyS_ioctl+0x79/0x90
 	entry_SYSCALL_64_fastpath+0x16/0x75
 INFO: Freed in port_delete+0x136/0x1a0 [snd_seq] age=1 cpu=2 pid=4717
 	__slab_free+0x204/0x310
 	kfree+0x15f/0x180
 	port_delete+0x136/0x1a0 [snd_seq]
 	snd_seq_delete_port+0x235/0x350 [snd_seq]
 	snd_seq_ioctl_delete_port+0xc8/0x180 [snd_seq]
 	snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
 	snd_seq_ioctl+0x40/0x80 [snd_seq]
 	do_vfs_ioctl+0x54b/0xda0
 	SyS_ioctl+0x79/0x90
 	entry_SYSCALL_64_fastpath+0x16/0x75
 Call Trace:
  [<ffffffff81b03781>] dump_stack+0x63/0x82
  [<ffffffff81531b3b>] print_trailer+0xfb/0x160
  [<ffffffff81536db4>] object_err+0x34/0x40
  [<ffffffff815392d3>] kasan_report.part.2+0x223/0x520
  [<ffffffffa07aadf4>] ? snd_seq_ioctl_create_port+0x504/0x630 [snd_seq]
  [<ffffffff815395fe>] __asan_report_load1_noabort+0x2e/0x30
  [<ffffffffa07aadf4>] snd_seq_ioctl_create_port+0x504/0x630 [snd_seq]
  [<ffffffffa07aa8f0>] ? snd_seq_ioctl_delete_port+0x180/0x180 [snd_seq]
  [<ffffffff8136be50>] ? taskstats_exit+0xbc0/0xbc0
  [<ffffffffa07abc5c>] snd_seq_do_ioctl+0x11c/0x190 [snd_seq]
  [<ffffffffa07abd10>] snd_seq_ioctl+0x40/0x80 [snd_seq]
  [<ffffffff8136d433>] ? acct_account_cputime+0x63/0x80
  [<ffffffff815b515b>] do_vfs_ioctl+0x54b/0xda0
  .....

We may fix this in a few different ways, and in this patch, it's fixed
simply by taking the refcount properly at snd_seq_create_port() and
letting the caller unref the object after use.  Also, there is another
potential use-after-free by sprintf() call in snd_seq_create_port(),
and this is moved inside the lock.

This fix covers CVE-2017-15265.

Reported-and-tested-by: Michael23 Yu <ycqzsy@gmail.com>
Suggested-by: Linus Torvalds <torvalds@linux-foundation.org>
Cc: <stable@vger.kernel.org>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 sound/core/seq/seq_clientmgr.c | 6 +++++-
 sound/core/seq/seq_ports.c     | 7 +++++--
 2 files changed, 10 insertions(+), 3 deletions(-)

diff --git a/sound/core/seq/seq_clientmgr.c b/sound/core/seq/seq_clientmgr.c
index ea2d0ae85bd367..6c9cba2166d95b 100644
--- a/sound/core/seq/seq_clientmgr.c
+++ b/sound/core/seq/seq_clientmgr.c
@@ -1259,6 +1259,7 @@ static int snd_seq_ioctl_create_port(struct snd_seq_client *client, void *arg)
 	struct snd_seq_port_info *info = arg;
 	struct snd_seq_client_port *port;
 	struct snd_seq_port_callback *callback;
+	int port_idx;
 
 	/* it is not allowed to create the port for an another client */
 	if (info->addr.client != client->number)
@@ -1269,7 +1270,9 @@ static int snd_seq_ioctl_create_port(struct snd_seq_client *client, void *arg)
 		return -ENOMEM;
 
 	if (client->type == USER_CLIENT && info->kernel) {
-		snd_seq_delete_port(client, port->addr.port);
+		port_idx = port->addr.port;
+		snd_seq_port_unlock(port);
+		snd_seq_delete_port(client, port_idx);
 		return -EINVAL;
 	}
 	if (client->type == KERNEL_CLIENT) {
@@ -1290,6 +1293,7 @@ static int snd_seq_ioctl_create_port(struct snd_seq_client *client, void *arg)
 
 	snd_seq_set_port_info(port, info);
 	snd_seq_system_client_ev_port_start(port->addr.client, port->addr.port);
+	snd_seq_port_unlock(port);
 
 	return 0;
 }
diff --git a/sound/core/seq/seq_ports.c b/sound/core/seq/seq_ports.c
index 0a7020c82bfc76..d21ece9f8d7365 100644
--- a/sound/core/seq/seq_ports.c
+++ b/sound/core/seq/seq_ports.c
@@ -122,7 +122,9 @@ static void port_subs_info_init(struct snd_seq_port_subs_info *grp)
 }
 
 
-/* create a port, port number is returned (-1 on failure) */
+/* create a port, port number is returned (-1 on failure);
+ * the caller needs to unref the port via snd_seq_port_unlock() appropriately
+ */
 struct snd_seq_client_port *snd_seq_create_port(struct snd_seq_client *client,
 						int port)
 {
@@ -151,6 +153,7 @@ struct snd_seq_client_port *snd_seq_create_port(struct snd_seq_client *client,
 	snd_use_lock_init(&new_port->use_lock);
 	port_subs_info_init(&new_port->c_src);
 	port_subs_info_init(&new_port->c_dest);
+	snd_use_lock_use(&new_port->use_lock);
 
 	num = port >= 0 ? port : 0;
 	mutex_lock(&client->ports_mutex);
@@ -165,9 +168,9 @@ struct snd_seq_client_port *snd_seq_create_port(struct snd_seq_client *client,
 	list_add_tail(&new_port->list, &p->list);
 	client->num_ports++;
 	new_port->addr.port = num;	/* store the port number in the port */
+	sprintf(new_port->name, ""port-%d"", num);
 	write_unlock_irqrestore(&client->ports_lock, flags);
 	mutex_unlock(&client->ports_mutex);
-	sprintf(new_port->name, ""port-%d"", num);
 
 	return new_port;
 }"
CVE-2017-5206,"From 6b8dba29d73257311564ee7f27b9b14758cc693e Mon Sep 17 00:00:00 2001
From: netblue30 <netblue30@yahoo.com>
Date: Fri, 6 Jan 2017 16:03:54 -0500
Subject: [PATCH] security fix

---
 RELNOTES             |  3 +++
 src/firejail/main.c  | 19 +++++++++++++++++++
 src/man/firejail.txt |  4 +++-
 3 files changed, 25 insertions(+), 1 deletion(-)

diff --git a/RELNOTES b/RELNOTES
index 6aaebefc34a..36da0100f30 100644
--- a/RELNOTES
+++ b/RELNOTES
@@ -1,5 +1,8 @@
 firejail (0.9.44.3) baseline; urgency=low
   * development version
+  * security: disabled --allow-debuggers when running on kernel
+    versions prior to 4.8; a kernel bug in ptrace system call
+    allows a full bypass of seccomp filter; problem reported by Lizzie Dixon
   * security: root exploit found by Sebastian Krahmer
  -- netblue30 <netblue30@yahoo.com>  Wed, 4 Jan 2017 11:00:00 -0500
 
diff --git a/src/firejail/main.c b/src/firejail/main.c
index e501d92e8e6..e67290911c4 100644
--- a/src/firejail/main.c
+++ b/src/firejail/main.c
@@ -35,6 +35,7 @@
 #include <signal.h>
 #include <time.h>
 #include <net/if.h>
+#include <sys/utsname.h>
 
 #if 0
 #include <sys/times.h>
@@ -802,6 +803,24 @@ static void detect_allow_debuggers(int argc, char **argv) {
 	// detect --allow-debuggers
 	for (i = 1; i < argc; i++) {
 		if (strcmp(argv[i], ""--allow-debuggers"") == 0) {
+			// check kernel version
+			struct utsname u;
+			int rv = uname(&u);
+			if (rv != 0)
+				errExit(""uname"");
+			int major;
+			int minor;
+			if (2 != sscanf(u.release, ""%d.%d"", &major, &minor)) {
+				fprintf(stderr, ""Error: cannot extract Linux kernel version: %s\n"", u.version);
+				exit(1);
+			}
+			if (major < 4 || (major == 4 && minor < 8)) {
+				fprintf(stderr, ""Error: --allow-debuggers is disabled on Linux kernels prior to 4.8. ""
+					""A bug in ptrace call allows a full bypass of the seccomp filter. ""
+					""Your current kernel version is %d.%d.\n"", major, minor);
+				exit(1);
+			}
+			
 			arg_allow_debuggers = 1;
 			break;
 		}
diff --git a/src/man/firejail.txt b/src/man/firejail.txt
index 8cc766200a5..332f510c654 100644
--- a/src/man/firejail.txt
+++ b/src/man/firejail.txt
@@ -76,7 +76,9 @@ $ firejail [OPTIONS] firefox        # starting Mozilla Firefox
 Signal the end of options and disables further option processing.
 .TP
 \fB\-\-allow-debuggers
-Allow tools such as strace and gdb inside the sandbox.
+Allow tools such as strace and gdb inside the sandbox. This option is only available
+when running on Linux kernels 4.8 or newer - a kernel bug in ptrace system call allows a full
+bypass of the seccomp filter.
 .br
 
 .br"
CVE-2017-6801,"From 3cb0f914d6427073f262e1b2b5fd973e3043cdf7 Mon Sep 17 00:00:00 2001
From: Randall Hand <randall.hand@gmail.com>
Date: Fri, 24 Feb 2017 16:08:02 -0500
Subject: [PATCH] BugFix - Potential OOB with Fields of Size 0

Thanks to @hannob for contributing a malformed TNEF stream with
a Version field of size 0.  Now such files will return an error
indicating invalid data.
---
 lib/ytnef.c                              |   4 ++++
 test-data/test.sh                        |   2 ++
 test-data/ytnef-oob-TNEFVersion-SwapWord | Bin 0 -> 17 bytes
 3 files changed, 6 insertions(+)
 create mode 100644 test-data/ytnef-oob-TNEFVersion-SwapWord

diff --git a/lib/ytnef.c b/lib/ytnef.c
index afb2efb..eea43b7 100644
--- a/lib/ytnef.c
+++ b/lib/ytnef.c
@@ -1147,6 +1147,10 @@ int TNEFParse(TNEFStruct *TNEF) {
   while (TNEFGetHeader(TNEF, &type, &size) == 0) {
     DEBUG2(TNEF->Debug, 2, ""Header says type=0x%X, size=%u"", type, size);
     DEBUG2(TNEF->Debug, 2, ""Header says type=%u, size=%u"", type, size);
+    if(size == 0) {
+      printf(""ERROR: Field with size of 0\n"");
+      return YTNEF_ERROR_READING_DATA;
+    }
     data = calloc(size, sizeof(BYTE));
     ALLOCCHECK(data);
     if (TNEFRawRead(TNEF, data, size, &header_checksum) < 0) {
diff --git a/test-data/test.sh b/test-data/test.sh
index 7e2e541..81037e4 100755
--- a/test-data/test.sh
+++ b/test-data/test.sh
@@ -21,3 +21,5 @@ diff results data
 ../ytnefprint/ytnefprint ./winmail.dat  | grep -A 1 PR_RTF_SYNC_BODY_CRC     | grep 872404792
 ../ytnefprint/ytnefprint ./winmail.dat  | grep -A 1 PR_RTF_SYNC_BODY_COUNT   | grep 90
 ../ytnefprint/ytnefprint ./winmail.dat  | grep -A 18 PR_RTF_COMPRESSED       | grep '\pard Casdasdfasdfasd\\par'
+
+../ytnefprint/ytnefprint ./ytnef-oob-TNEFVersion-SwapWord | grep 'ERROR: Field with size of 0'
diff --git a/test-data/ytnef-oob-TNEFVersion-SwapWord b/test-data/ytnef-oob-TNEFVersion-SwapWord
new file mode 100644
index 0000000000000000000000000000000000000000..4ee03bc0aa8370537d57608b1819d099d9f9d566
GIT binary patch
literal 17
Tcmb=JZ>MBnV8Awkg8>2nBf|ow

literal 0
HcmV?d00001"
OSV-2017-52,"From 55cb70a24a58fc73b7a2b9d1b2a49845668342cc Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Mon, 19 Jun 2017 18:30:25 +0000
Subject: [PATCH] Add another bounds check: OSS-FUZZ issue 2242

---
 src/softmagic.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/softmagic.c b/src/softmagic.c
index b7d6993872..b9e975374b 100644
--- a/src/softmagic.c
+++ b/src/softmagic.c
@@ -32,7 +32,7 @@
 #include ""file.h""
 
 #ifndef	lint
-FILE_RCSID(""@(#)$File: softmagic.c,v 1.248 2017/04/21 16:54:57 christos Exp $"")
+FILE_RCSID(""@(#)$File: softmagic.c,v 1.249 2017/06/19 18:30:25 christos Exp $"")
 #endif	/* lint */
 
 #include ""magic.h""
@@ -1199,7 +1199,7 @@ mcopy(struct magic_set *ms, union VALUETYPE *p, int type, int indir,
 			const char *end;
 			size_t lines, linecnt, bytecnt;
 
-			if (s == NULL) {
+			if (s == NULL || nbytes < offset) {
 				ms->search.s_len = 0;
 				ms->search.s = NULL;
 				return 0;"
CVE-2017-2647,"From c06cfb08b88dfbe13be44a69ae2fdc3a7c902d81 Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Tue, 16 Sep 2014 17:36:06 +0100
Subject: [PATCH] KEYS: Remove key_type::match in favour of overriding default
 by match_preparse

A previous patch added a ->match_preparse() method to the key type.  This is
allowed to override the function called by the iteration algorithm.
Therefore, we can just set a default that simply checks for an exact match of
the key description with the original criterion data and allow match_preparse
to override it as needed.

The key_type::match op is then redundant and can be removed, as can the
user_match() function.

Signed-off-by: David Howells <dhowells@redhat.com>
Acked-by: Vivek Goyal <vgoyal@redhat.com>
---
 crypto/asymmetric_keys/asymmetric_type.c |  6 +++---
 crypto/asymmetric_keys/pkcs7_key_type.c  |  1 -
 fs/cifs/cifs_spnego.c                    |  1 -
 fs/cifs/cifsacl.c                        |  1 -
 fs/nfs/idmap.c                           |  2 --
 include/keys/user-type.h                 |  3 ---
 include/linux/key-type.h                 |  4 ----
 net/ceph/crypto.c                        |  1 -
 net/dns_resolver/dns_key.c               | 17 +++++++++++++----
 net/rxrpc/ar-key.c                       |  2 --
 security/keys/big_key.c                  |  1 -
 security/keys/encrypted-keys/encrypted.c |  1 -
 security/keys/internal.h                 |  2 ++
 security/keys/key.c                      |  2 +-
 security/keys/keyring.c                  | 15 ++++++++++-----
 security/keys/request_key.c              |  2 +-
 security/keys/request_key_auth.c         |  2 +-
 security/keys/trusted.c                  |  1 -
 security/keys/user_defined.c             | 12 ------------
 19 files changed, 31 insertions(+), 45 deletions(-)

diff --git a/crypto/asymmetric_keys/asymmetric_type.c b/crypto/asymmetric_keys/asymmetric_type.c
index 9d78ad7754d9aa..7c04989689757d 100644
--- a/crypto/asymmetric_keys/asymmetric_type.c
+++ b/crypto/asymmetric_keys/asymmetric_type.c
@@ -59,8 +59,8 @@ EXPORT_SYMBOL_GPL(asymmetric_keyid_match);
  *	""id:<id>""	- request a key matching the ID
  *	""<subtype>:<id>"" - request a key of a subtype
  */
-static int asymmetric_key_match(const struct key *key,
-				const struct key_match_data *match_data)
+static int asymmetric_key_cmp(const struct key *key,
+			      const struct key_match_data *match_data)
 {
 	const struct asymmetric_key_subtype *subtype = asymmetric_key_subtype(key);
 	const char *description = match_data->raw_data;
@@ -110,6 +110,7 @@ static int asymmetric_key_match(const struct key *key,
 static int asymmetric_key_match_preparse(struct key_match_data *match_data)
 {
 	match_data->lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE;
+	match_data->cmp = asymmetric_key_cmp;
 	return 0;
 }
 
@@ -224,7 +225,6 @@ struct key_type key_type_asymmetric = {
 	.free_preparse	= asymmetric_key_free_preparse,
 	.instantiate	= generic_key_instantiate,
 	.match_preparse	= asymmetric_key_match_preparse,
-	.match		= asymmetric_key_match,
 	.match_free	= asymmetric_key_match_free,
 	.destroy	= asymmetric_key_destroy,
 	.describe	= asymmetric_key_describe,
diff --git a/crypto/asymmetric_keys/pkcs7_key_type.c b/crypto/asymmetric_keys/pkcs7_key_type.c
index d1faa1df1decdd..751f8fd7335db2 100644
--- a/crypto/asymmetric_keys/pkcs7_key_type.c
+++ b/crypto/asymmetric_keys/pkcs7_key_type.c
@@ -75,7 +75,6 @@ static struct key_type key_type_pkcs7 = {
 	.preparse		= pkcs7_preparse,
 	.free_preparse		= user_free_preparse,
 	.instantiate		= generic_key_instantiate,
-	.match			= user_match,
 	.revoke			= user_revoke,
 	.destroy		= user_destroy,
 	.describe		= user_describe,
diff --git a/fs/cifs/cifs_spnego.c b/fs/cifs/cifs_spnego.c
index a3e932547617ea..f4cf200b3c7671 100644
--- a/fs/cifs/cifs_spnego.c
+++ b/fs/cifs/cifs_spnego.c
@@ -62,7 +62,6 @@ cifs_spnego_key_destroy(struct key *key)
 struct key_type cifs_spnego_key_type = {
 	.name		= ""cifs.spnego"",
 	.instantiate	= cifs_spnego_key_instantiate,
-	.match		= user_match,
 	.destroy	= cifs_spnego_key_destroy,
 	.describe	= user_describe,
 };
diff --git a/fs/cifs/cifsacl.c b/fs/cifs/cifsacl.c
index 7ff866dbb89eb7..6d00c419cbae0b 100644
--- a/fs/cifs/cifsacl.c
+++ b/fs/cifs/cifsacl.c
@@ -84,7 +84,6 @@ static struct key_type cifs_idmap_key_type = {
 	.instantiate = cifs_idmap_key_instantiate,
 	.destroy     = cifs_idmap_key_destroy,
 	.describe    = user_describe,
-	.match       = user_match,
 };
 
 static char *
diff --git a/fs/nfs/idmap.c b/fs/nfs/idmap.c
index 7dd55b745c4d96..2f5db844c17253 100644
--- a/fs/nfs/idmap.c
+++ b/fs/nfs/idmap.c
@@ -177,7 +177,6 @@ static struct key_type key_type_id_resolver = {
 	.preparse	= user_preparse,
 	.free_preparse	= user_free_preparse,
 	.instantiate	= generic_key_instantiate,
-	.match		= user_match,
 	.revoke		= user_revoke,
 	.destroy	= user_destroy,
 	.describe	= user_describe,
@@ -401,7 +400,6 @@ static struct key_type key_type_id_resolver_legacy = {
 	.preparse	= user_preparse,
 	.free_preparse	= user_free_preparse,
 	.instantiate	= generic_key_instantiate,
-	.match		= user_match,
 	.revoke		= user_revoke,
 	.destroy	= user_destroy,
 	.describe	= user_describe,
diff --git a/include/keys/user-type.h b/include/keys/user-type.h
index 66d92af30e7c0e..cebefb069c44a5 100644
--- a/include/keys/user-type.h
+++ b/include/keys/user-type.h
@@ -36,13 +36,10 @@ extern struct key_type key_type_user;
 extern struct key_type key_type_logon;
 
 struct key_preparsed_payload;
-struct key_match_data;
 
 extern int user_preparse(struct key_preparsed_payload *prep);
 extern void user_free_preparse(struct key_preparsed_payload *prep);
 extern int user_update(struct key *key, struct key_preparsed_payload *prep);
-extern int user_match(const struct key *key,
-		      const struct key_match_data *match_data);
 extern void user_revoke(struct key *key);
 extern void user_destroy(struct key *key);
 extern void user_describe(const struct key *user, struct seq_file *m);
diff --git a/include/linux/key-type.h b/include/linux/key-type.h
index bf93ea60927387..c14816bd3b44f1 100644
--- a/include/linux/key-type.h
+++ b/include/linux/key-type.h
@@ -113,10 +113,6 @@ struct key_type {
 	 */
 	int (*match_preparse)(struct key_match_data *match_data);
 
-	/* match a key against a description */
-	int (*match)(const struct key *key,
-		     const struct key_match_data *match_data);
-
 	/* Free preparsed match data (optional).  This should be supplied it
 	 * ->match_preparse() is supplied. */
 	void (*match_free)(struct key_match_data *match_data);
diff --git a/net/ceph/crypto.c b/net/ceph/crypto.c
index ffeba8f9dda929..62fc5e7a9acf75 100644
--- a/net/ceph/crypto.c
+++ b/net/ceph/crypto.c
@@ -476,7 +476,6 @@ struct key_type key_type_ceph = {
 	.preparse	= ceph_key_preparse,
 	.free_preparse	= ceph_key_free_preparse,
 	.instantiate	= generic_key_instantiate,
-	.match		= user_match,
 	.destroy	= ceph_key_destroy,
 };
 
diff --git a/net/dns_resolver/dns_key.c b/net/dns_resolver/dns_key.c
index 92df6e508ae7d0..a07b9ba7e0b7bf 100644
--- a/net/dns_resolver/dns_key.c
+++ b/net/dns_resolver/dns_key.c
@@ -176,9 +176,8 @@ static void dns_resolver_free_preparse(struct key_preparsed_payload *prep)
  * The domain name may be a simple name or an absolute domain name (which
  * should end with a period).  The domain name is case-independent.
  */
-static int
-dns_resolver_match(const struct key *key,
-		   const struct key_match_data *match_data)
+static int dns_resolver_cmp(const struct key *key,
+			    const struct key_match_data *match_data)
 {
 	int slen, dlen, ret = 0;
 	const char *src = key->description, *dsp = match_data->raw_data;
@@ -209,6 +208,16 @@ dns_resolver_match(const struct key *key,
 	return ret;
 }
 
+/*
+ * Preparse the match criterion.
+ */
+static int dns_resolver_match_preparse(struct key_match_data *match_data)
+{
+	match_data->lookup_type = KEYRING_SEARCH_LOOKUP_ITERATE;
+	match_data->cmp = dns_resolver_cmp;
+	return 0;
+}
+
 /*
  * Describe a DNS key
  */
@@ -243,7 +252,7 @@ struct key_type key_type_dns_resolver = {
 	.preparse	= dns_resolver_preparse,
 	.free_preparse	= dns_resolver_free_preparse,
 	.instantiate	= generic_key_instantiate,
-	.match		= dns_resolver_match,
+	.match_preparse	= dns_resolver_match_preparse,
 	.revoke		= user_revoke,
 	.destroy	= user_destroy,
 	.describe	= dns_resolver_describe,
diff --git a/net/rxrpc/ar-key.c b/net/rxrpc/ar-key.c
index 3907add75932d9..10c6cb694b4343 100644
--- a/net/rxrpc/ar-key.c
+++ b/net/rxrpc/ar-key.c
@@ -44,7 +44,6 @@ struct key_type key_type_rxrpc = {
 	.preparse	= rxrpc_preparse,
 	.free_preparse	= rxrpc_free_preparse,
 	.instantiate	= generic_key_instantiate,
-	.match		= user_match,
 	.destroy	= rxrpc_destroy,
 	.describe	= rxrpc_describe,
 	.read		= rxrpc_read,
@@ -61,7 +60,6 @@ struct key_type key_type_rxrpc_s = {
 	.preparse	= rxrpc_preparse_s,
 	.free_preparse	= rxrpc_free_preparse_s,
 	.instantiate	= generic_key_instantiate,
-	.match		= user_match,
 	.destroy	= rxrpc_destroy_s,
 	.describe	= rxrpc_describe,
 };
diff --git a/security/keys/big_key.c b/security/keys/big_key.c
index 4045c13a761a9f..b6adb94f6d5257 100644
--- a/security/keys/big_key.c
+++ b/security/keys/big_key.c
@@ -36,7 +36,6 @@ struct key_type key_type_big_key = {
 	.preparse		= big_key_preparse,
 	.free_preparse		= big_key_free_preparse,
 	.instantiate		= generic_key_instantiate,
-	.match			= user_match,
 	.revoke			= big_key_revoke,
 	.destroy		= big_key_destroy,
 	.describe		= big_key_describe,
diff --git a/security/keys/encrypted-keys/encrypted.c b/security/keys/encrypted-keys/encrypted.c
index 5fe443d120afe8..db9675db102620 100644
--- a/security/keys/encrypted-keys/encrypted.c
+++ b/security/keys/encrypted-keys/encrypted.c
@@ -970,7 +970,6 @@ struct key_type key_type_encrypted = {
 	.name = ""encrypted"",
 	.instantiate = encrypted_instantiate,
 	.update = encrypted_update,
-	.match = user_match,
 	.destroy = encrypted_destroy,
 	.describe = user_describe,
 	.read = encrypted_read,
diff --git a/security/keys/internal.h b/security/keys/internal.h
index b47cc532be1e3b..e66a16cb63e1ca 100644
--- a/security/keys/internal.h
+++ b/security/keys/internal.h
@@ -127,6 +127,8 @@ struct keyring_search_context {
 	struct timespec		now;
 };
 
+extern int key_default_cmp(const struct key *key,
+			   const struct key_match_data *match_data);
 extern key_ref_t keyring_search_aux(key_ref_t keyring_ref,
 				    struct keyring_search_context *ctx);
 
diff --git a/security/keys/key.c b/security/keys/key.c
index b90a68c4e2c427..8c0092ca04430b 100644
--- a/security/keys/key.c
+++ b/security/keys/key.c
@@ -799,7 +799,7 @@ key_ref_t key_create_or_update(key_ref_t keyring_ref,
 	}
 
 	key_ref = ERR_PTR(-EINVAL);
-	if (!index_key.type->match || !index_key.type->instantiate ||
+	if (!index_key.type->instantiate ||
 	    (!index_key.description && !index_key.type->preparse))
 		goto error_put_type;
 
diff --git a/security/keys/keyring.c b/security/keys/keyring.c
index 10f0a5f2d3620c..253c9a0eb092e2 100644
--- a/security/keys/keyring.c
+++ b/security/keys/keyring.c
@@ -89,7 +89,6 @@ struct key_type key_type_keyring = {
 	.preparse	= keyring_preparse,
 	.free_preparse	= keyring_free_preparse,
 	.instantiate	= keyring_instantiate,
-	.match		= user_match,
 	.revoke		= keyring_revoke,
 	.destroy	= keyring_destroy,
 	.describe	= keyring_describe,
@@ -511,6 +510,15 @@ struct key *keyring_alloc(const char *description, kuid_t uid, kgid_t gid,
 }
 EXPORT_SYMBOL(keyring_alloc);
 
+/*
+ * By default, we keys found by getting an exact match on their descriptions.
+ */
+int key_default_cmp(const struct key *key,
+		    const struct key_match_data *match_data)
+{
+	return strcmp(key->description, match_data->raw_data) == 0;
+}
+
 /*
  * Iteration function to consider each key found.
  */
@@ -884,7 +892,7 @@ key_ref_t keyring_search(key_ref_t keyring,
 		.index_key.type		= type,
 		.index_key.description	= description,
 		.cred			= current_cred(),
-		.match_data.cmp		= type->match,
+		.match_data.cmp		= key_default_cmp,
 		.match_data.raw_data	= description,
 		.match_data.lookup_type	= KEYRING_SEARCH_LOOKUP_DIRECT,
 		.flags			= KEYRING_SEARCH_DO_STATE_CHECK,
@@ -892,9 +900,6 @@ key_ref_t keyring_search(key_ref_t keyring,
 	key_ref_t key;
 	int ret;
 
-	if (!ctx.match_data.cmp)
-		return ERR_PTR(-ENOKEY);
-
 	if (type->match_preparse) {
 		ret = type->match_preparse(&ctx.match_data);
 		if (ret < 0)
diff --git a/security/keys/request_key.c b/security/keys/request_key.c
index 408523e5e2e2ee..dc6ed32b7844cf 100644
--- a/security/keys/request_key.c
+++ b/security/keys/request_key.c
@@ -531,7 +531,7 @@ struct key *request_key_and_link(struct key_type *type,
 		.index_key.type		= type,
 		.index_key.description	= description,
 		.cred			= current_cred(),
-		.match_data.cmp		= type->match,
+		.match_data.cmp		= key_default_cmp,
 		.match_data.raw_data	= description,
 		.match_data.lookup_type	= KEYRING_SEARCH_LOOKUP_DIRECT,
 	};
diff --git a/security/keys/request_key_auth.c b/security/keys/request_key_auth.c
index 9ae02819cc064f..6639e2cb885322 100644
--- a/security/keys/request_key_auth.c
+++ b/security/keys/request_key_auth.c
@@ -246,7 +246,7 @@ struct key *key_get_instantiation_authkey(key_serial_t target_id)
 		.index_key.type		= &key_type_request_key_auth,
 		.index_key.description	= description,
 		.cred			= current_cred(),
-		.match_data.cmp		= user_match,
+		.match_data.cmp		= key_default_cmp,
 		.match_data.raw_data	= description,
 		.match_data.lookup_type	= KEYRING_SEARCH_LOOKUP_DIRECT,
 	};
diff --git a/security/keys/trusted.c b/security/keys/trusted.c
index 6b804aa4529a17..c0594cb07adab1 100644
--- a/security/keys/trusted.c
+++ b/security/keys/trusted.c
@@ -1096,7 +1096,6 @@ struct key_type key_type_trusted = {
 	.name = ""trusted"",
 	.instantiate = trusted_instantiate,
 	.update = trusted_update,
-	.match = user_match,
 	.destroy = trusted_destroy,
 	.describe = user_describe,
 	.read = trusted_read,
diff --git a/security/keys/user_defined.c b/security/keys/user_defined.c
index cd7e726e8646a7..36b47bbd3d8cc2 100644
--- a/security/keys/user_defined.c
+++ b/security/keys/user_defined.c
@@ -30,7 +30,6 @@ struct key_type key_type_user = {
 	.free_preparse		= user_free_preparse,
 	.instantiate		= generic_key_instantiate,
 	.update			= user_update,
-	.match			= user_match,
 	.revoke			= user_revoke,
 	.destroy		= user_destroy,
 	.describe		= user_describe,
@@ -51,7 +50,6 @@ struct key_type key_type_logon = {
 	.free_preparse		= user_free_preparse,
 	.instantiate		= generic_key_instantiate,
 	.update			= user_update,
-	.match			= user_match,
 	.revoke			= user_revoke,
 	.destroy		= user_destroy,
 	.describe		= user_describe,
@@ -136,16 +134,6 @@ int user_update(struct key *key, struct key_preparsed_payload *prep)
 
 EXPORT_SYMBOL_GPL(user_update);
 
-/*
- * match users on their name
- */
-int user_match(const struct key *key, const struct key_match_data *match_data)
-{
-	return strcmp(key->description, match_data->raw_data) == 0;
-}
-
-EXPORT_SYMBOL_GPL(user_match);
-
 /*
  * dispose of the links from a revoked keyring
  * - called with the key sem write-locked"
CVE-2017-15054,"From 9811c9d453da4bd1101ff7033250d1fbedf101fc Mon Sep 17 00:00:00 2001
From: nilsteampassnet <nils@teampass.net>
Date: Mon, 2 Oct 2017 21:27:30 +0200
Subject: [PATCH] 2.1.27

Improved security regarding uploading files
Fixed issue while restoring DB from administration page
---
 admin.settings.load.php         |  25 +++++--
 admin.settings.php              |   2 +-
 api/functions.php               | 115 +++++++++++++++++++++++-------
 changelog.md                    |   2 +
 items.import.php                |  30 +++-----
 items.load.php                  |   4 +-
 items.php                       |   4 +-
 profile.php                     |  16 ++---
 sources/admin.queries.php       |  21 +++++-
 sources/import.queries.php      |  45 +++++++++++-
 sources/items.queries.php       |   8 ++-
 sources/main.functions.php      |   7 +-
 sources/upload/upload.files.php | 121 ++++++++++++++++++++++++--------
 13 files changed, 294 insertions(+), 106 deletions(-)

diff --git a/admin.settings.load.php b/admin.settings.load.php
index 4f8d388f0..33231fe79 100644
--- a/admin.settings.load.php
+++ b/admin.settings.load.php
@@ -252,7 +252,10 @@ function LaunchAdminActions(action, option)
     if (action === ""admin_action_db_backup"") {
         option = $(""#result_admin_action_db_backup_key"").val();
     } else if (action === ""admin_action_db_restore"") {
-        $(""#restore_bck_encryption_key_dialog_error"").html("""").hide();
+        $(""#restore_bck_encryption_key_dialog_error"")
+            .html(""<span class='fa fa-cog fa-spin fa'>&nbsp;</span><?php echo addslashes($LANG['please_wait']); ?>"")
+            .attr(""class"",""ui-corner-all ui-state-focus"")
+            .show();
     } else if (action === ""admin_action_backup_decrypt"") {
         option = $(""#bck_script_decrypt_file"").val();
     } else if (action === ""admin_action_change_salt_key"") {
@@ -293,6 +296,7 @@ function LaunchAdminActions(action, option)
         // convert to json string
         option = prepareExchangedData(JSON.stringify(option) , ""encode"", ""<?php echo $_SESSION['key']; ?>"");
     }
+
     //Lauchn ajax query
     $.post(
         ""sources/admin.queries.php"",
@@ -309,7 +313,10 @@ function(data) {
                     $(""#result_admin_action_check_pf"").html(""<span class='fa fa-check mi-green'></span>"").show();
                 } else if (data[0].result == ""db_restore"") {
                     if (data[0].message !== """") {
-                        $(""#restore_bck_encryption_key_dialog_error"").html(data[0].message).show();
+                        $(""#restore_bck_encryption_key_dialog_error"")
+                            .html(data[0].message)
+                            .attr(""class"",""ui-corner-all ui-state-error"")
+                            .show();
                     } else {
                         $(""#restore_bck_encryption_key_dialog"").dialog(""close"");
                         $(""#result_admin_action_db_restore"").html(""<span class='fa fa-check mi-green'></span>"").show();
@@ -834,6 +841,7 @@ function(data) {
     });
 
     // SQL IMPORT FOR RESTORING
+    var restore_operation_id = '';
     var uploader_restoreDB = new plupload.Uploader({
         runtimes : ""gears,html5,flash,silverlight,browserplus"",
         browse_button : ""pickfiles_restoreDB"",
@@ -876,17 +884,15 @@ function(data) {
             BeforeUpload: function (up, file) {
                 $(""#import_status_ajax_loader"").show();
                 up.settings.multipart_params = {
-                    ""PHPSESSID"":""'.$_SESSION['user_id'].'"",
+                    ""PHPSESSID"":""<?php echo $_SESSION['user_id']; ?>"",
                     ""File"":file.name,
                     ""type_upload"":""restore_db"",
                     ""user_token"": $(""#user_token"").val()
                 };
             },
             UploadComplete: function(up, files) {
-                $.each(files, function(i, file) {
-                    $(""#restore_bck_fileObj"").val(file.name);
-                    $(""#restore_bck_encryption_key_dialog"").dialog(""open"");
-                });
+                $(""#restore_bck_fileObj"").val(restore_operation_id);
+                $(""#restore_bck_encryption_key_dialog"").dialog(""open"");
             }
         }
     });
@@ -905,6 +911,11 @@ function(data) {
     uploader_restoreDB.bind(""+"", function(up, file) {
         $(""#"" + file.id + "" b"").html(""100%"");
     });
+    uploader_restoreDB.bind('FileUploaded', function(upldr, file, object) {
+        var myData = prepareExchangedData(object.response, ""decode"", ""<?php echo $_SESSION['key']; ?>"");
+
+        restore_operation_id = myData.operation_id;
+    });
     // Load CSV click
     $(""#uploadfiles_restoreDB"").click(function(e) {
         uploader_restoreDB.start();
diff --git a/admin.settings.php b/admin.settings.php
index f818f1e3e..279cdc6e0 100644
--- a/admin.settings.php
+++ b/admin.settings.php
@@ -1618,6 +1618,6 @@
 <div id=""restore_bck_encryption_key_dialog"" style=""display:none; text-align:center;"">
     <input id=""restore_bck_encryption_key"" name=""restore_bck_encryption_key"" type=""text"" value="""" />
     <br>
-    <div class=ui-state-error ui-corner-all"" style=""display:none;padding:5px;display:none;margin:2px;"" id=""restore_bck_encryption_key_dialog_error""></div>
+    <div class=""ui-state-error ui-corner-all"" style=""display:none;padding:5px;display:none;margin:2px;"" id=""restore_bck_encryption_key_dialog_error""></div>
 </div>';
 include ""admin.settings.load.php"";
diff --git a/api/functions.php b/api/functions.php
index 0da1ffc76..ee5f4df55 100644
--- a/api/functions.php
+++ b/api/functions.php
@@ -188,16 +188,16 @@ function rest_delete()
                     for ($i = count($array_category); $i > 0; $i--) {
                         $slot = $i - 1;
                         if (!$slot) {
-                            $category_query .= ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".$array_category[$slot].""' AND parent_id = 0"";
+                            $category_query .= ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".filter_var($array_category[$slot], FILTER_SANITIZE_STRING).""' AND parent_id = 0"";
                         } else {
-                            $category_query .= ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".$array_category[$slot].""' AND parent_id = ("";
+                            $category_query .= ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".filter_var($array_category[$slot], FILTER_SANITIZE_STRING).""' AND parent_id = ("";
                         }
                     }
                     for ($i = 1; $i < count($array_category); $i++) {
                         $category_query .= "")"";
                     }
                 } elseif (count($array_category) == 1) {
-                    $category_query = ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".$array_category[0].""' AND parent_id = 0"";
+                    $category_query = ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".filter_var($array_category[0], FILTER_SANITIZE_STRING).""' AND parent_id = 0"";
                 } else {
                     rest_error('NO_CATEGORY');
                 }
@@ -236,22 +236,22 @@ function rest_delete()
                     for ($i = count($array_category); $i > 0; $i--) {
                         $slot = $i - 1;
                         if (!$slot) {
-                            $category_query .= ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".$array_category[$slot].""' AND parent_id = 0"";
+                            $category_query .= ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".filter_var($array_category[$slot], FILTER_SANITIZE_STRING).""' AND parent_id = 0"";
                         } else {
-                            $category_query .= ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".$array_category[$slot].""' AND parent_id = ("";
+                            $category_query .= ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".filter_var($array_category[$slot], FILTER_SANITIZE_STRING).""' AND parent_id = ("";
                         }
                     }
                     for ($i = 1; $i < count($array_category); $i++) {
                         $category_query .= "")"";
                     }
                 } elseif (count($array_category) == 1) {
-                    $category_query = ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".$array_category[0].""' AND parent_id = 0"";
+                    $category_query = ""select id from "".prefix_table(""nested_tree"")."" where title LIKE '"".filter_var($array_category[0], FILTER_SANITIZE_STRING).""' AND parent_id = 0"";
                 } else {
                     rest_error('NO_CATEGORY');
                 }
 
                 // Delete item
-                $response = DB::delete(prefix_table(""items""), ""id_tree = ("".$category_query."") and label LIKE '"".$item.""'"");
+                $response = DB::delete(prefix_table(""items""), ""id_tree = ("".$category_query."") and label LIKE '"".filter_var($item, FILTER_SANITIZE_STRING).""'"");
                 $json['type'] = 'item';
                 $json['item'] = $item;
                 $json['category'] = $GLOBALS['request'][2];
@@ -382,7 +382,12 @@ function rest_get()
                 if (strcmp($username, ""admin"") == 0) {
                     // forbid admin access
                 }
-                $response = DB::query(""SELECT fonction_id FROM "".prefix_table(""users"")."" WHERE login='"".$username.""'"");
+                $response = DB::query(
+                    ""SELECT fonction_id
+                    FROM "".prefix_table(""users"").""
+                    WHERE login = %s'"",
+                    $username
+                );
                 if (count($response) === 0) {
                     rest_error('USER_NOT_EXISTS');
                 }
@@ -392,7 +397,12 @@ function rest_get()
                 $folder_arr = array();
                 $roles = explode("";"", $role_str);
                 foreach ($roles as $role) {
-                    $response = DB::query(""SELECT folder_id FROM "".prefix_table(""roles_values"")."" WHERE role_id='"".$role.""'"");
+                    $response = DB::query(
+                        ""SELECT folder_id
+                        FROM "".prefix_table(""roles_values"").""
+                        WHERE role_id = %i"",
+                        $role
+                    );
                     foreach ($response as $data) {
                         $folder_id = $data['folder_id'];
                         if (!array_key_exists($folder_id, $folder_arr)) {
@@ -456,7 +466,12 @@ function rest_get()
                 if (strcmp($username, ""admin"") == 0) {
                     // forbid admin access
                 }
-                $response = DB::query(""SELECT fonction_id FROM "".prefix_table(""users"")."" WHERE login='"".$username.""'"");
+                $response = DB::query(
+                    ""SELECT fonction_id
+                    FROM "".prefix_table(""users"").""
+                    WHERE login = %s"",
+                    $username
+                );
                 if (count($response) === 0) {
                     rest_error('USER_NOT_EXISTS');
                 }
@@ -468,13 +483,23 @@ function rest_get()
                 $roles = explode("";"", $role_str);
                 $inc = 0;
                 foreach ($roles as $role) {
-                    $response = DB::query(""SELECT folder_id, type FROM "".prefix_table(""roles_values"")."" WHERE role_id='"".$role.""'"");
+                    $response = DB::query(
+                        ""SELECT folder_id, type
+                        FROM "".prefix_table(""roles_values"").""
+                        WHERE role_id = %i"",
+                        $role
+                    );
                     foreach ($response as $data) {
                         $folder_id = $data['folder_id'];
                         if (!array_key_exists($folder_id, $folder_arr)) {
                             array_push($folder_arr, $folder_id);
 
-                            $response2 = DB::queryFirstRow(""SELECT title, nlevel FROM "".prefix_table(""nested_tree"")."" WHERE id='"".$folder_id.""'"");
+                            $response2 = DB::queryFirstRow(
+                                ""SELECT title, nlevel
+                                FROM "".prefix_table(""nested_tree"").""
+                                WHERE id = %i"",
+                                $folder_id
+                            );
 
                             if (!empty($response2['title'])) {
                                 $json[$folder_id]['id'] = $folder_id;
@@ -667,7 +692,13 @@ function rest_get()
                     // check if element doesn't already exist
                     $item_duplicate_allowed = getSettingValue(""duplicate_item"");
                     if ($item_duplicate_allowed !== ""1"") {
-                        DB::query(""SELECT * FROM "".prefix_table(""items"")."" WHERE label = %s AND inactif = %i"", addslashes($item_label), ""0"");
+                        DB::query(
+                            ""SELECT *
+                            FROM "".prefix_table(""items"").""
+                            WHERE label = %s AND inactif = %i"",
+                            addslashes($item_label),
+                            ""0""
+                        );
                         $counter = DB::count();
                         if ($counter != 0) {
                             $itemExists = 1;
@@ -804,8 +835,9 @@ function rest_get()
                 }
                 // Check if user already exists
                 $data = DB::query(
-                    ""SELECT id, fonction_id, groupes_interdits, groupes_visibles FROM "".prefix_table(""users"").""
-            WHERE login LIKE %ss"",
+                    ""SELECT id, fonction_id, groupes_interdits, groupes_visibles
+                    FROM "".prefix_table(""users"").""
+                    WHERE login LIKE %ss"",
                     mysqli_escape_string($link, stripslashes($login))
                 );
 
@@ -821,7 +853,9 @@ function rest_get()
 
                         // get default language
                         $lang = DB::queryFirstRow(
-                            ""SELECT `valeur` FROM "".prefix_table(""misc"")."" WHERE type = %s AND intitule = %s"",
+                            ""SELECT `valeur`
+                            FROM "".prefix_table(""misc"").""
+                            WHERE type = %s AND intitule = %s"",
                             ""admin"",
                             ""default_language""
                         );
@@ -830,7 +864,9 @@ function rest_get()
                         $rolesList = """";
                         foreach (explode(',', $roles) as $role) {//echo $role.""-"";
                             $tmp = DB::queryFirstRow(
-                                ""SELECT `id` FROM "".prefix_table(""roles_title"")."" WHERE title = %s"",
+                                ""SELECT `id`
+                                FROM "".prefix_table(""roles_title"").""
+                                WHERE title = %s"",
                                 $role
                             );
                             if (empty($rolesList)) {
@@ -944,7 +980,12 @@ function rest_get()
                         );
                         // if valeur = 0 then duplicate folders not allowed
                         if ($data === 0) {
-                            DB::query(""SELECT * FROM "".prefix_table(""nested_tree"")."" WHERE title = %s"", $params[0]);
+                            DB::query(
+                                ""SELECT *
+                                FROM "".prefix_table(""nested_tree"").""
+                                WHERE title = %s"",
+                                $params[0]
+                            );
                             $counter = DB::count();
                             if ($counter != 0) {
                                 rest_error('ALREADY_EXISTS');
@@ -1035,7 +1076,12 @@ function rest_get()
                         }
 
                         // Check Folder ID
-                        DB::query(""SELECT * FROM "".prefix_table(""nested_tree"")."" WHERE id = %i"", $params[3]);
+                        DB::query(
+                            ""SELECT *
+                            FROM "".prefix_table(""nested_tree"").""
+                            WHERE id = %i"",
+                            $params[3]
+                        );
                         $counter = DB::count();
                         if ($counter == 0) {
                             rest_error('NOSUCHFOLDER');
@@ -1043,7 +1089,9 @@ function rest_get()
 
                         // check if item exists
                         DB::query(
-                            ""SELECT * FROM "".prefix_table(""items"")."" WHERE id = %i"",
+                            ""SELECT *
+                            FROM "".prefix_table(""items"").""
+                            WHERE id = %i"",
                             $GLOBALS['request'][2]
                         );
                         $counter = DB::count();
@@ -1094,7 +1142,9 @@ function rest_get()
                                     if (!empty($tag)) {
                                         // check if already exists
                                         DB::query(
-                                            ""SELECT * FROM "".prefix_table(""tags"")."" WHERE tag = %s AND item_id = %i"",
+                                            ""SELECT *
+                                            FROM "".prefix_table(""tags"").""
+                                            WHERE tag = %s AND item_id = %i"",
                                             strtolower($tag),
                                             $GLOBALS['request'][2]
                                         );
@@ -1163,7 +1213,12 @@ function rest_get()
                         }
 
                         // check if folder exists and get folder data
-                        $data_folder = DB::queryfirstrow(""SELECT * FROM "".prefix_table(""nested_tree"")."" WHERE id = %s"", $GLOBALS['request'][2]);
+                        $data_folder = DB::queryfirstrow(
+                            ""SELECT *
+                            FROM "".prefix_table(""nested_tree"").""
+                            WHERE id = %s"",
+                            $GLOBALS['request'][2]
+                        );
                         $counter = DB::count();
                         if ($counter === 0) {
                             rest_error('NO_DATA_EXIST');
@@ -1252,7 +1307,9 @@ function rest_get()
                 if (isset($GLOBALS['request'][1]) && isset($GLOBALS['request'][2])) {
                     // is user granted?
                     $userData = DB::queryFirstRow(
-                        ""SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id` FROM "".$pre.""users WHERE login = %s"",
+                        ""SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`
+                        FROM "".$pre.""users
+                        WHERE login = %s"",
                         $GLOBALS['request'][3]
                     );
 
@@ -1345,7 +1402,9 @@ function rest_get()
                     // is user granted?
                     //db::debugMode(true);
                     $userData = DB::queryFirstRow(
-                        ""SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`, `encrypted_psk` FROM "".$pre.""users WHERE login = %s"",
+                        ""SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`, `encrypted_psk`
+                        FROM "".$pre.""users
+                        WHERE login = %s"",
                         $GLOBALS['request'][2]
                     );
 
@@ -1463,7 +1522,9 @@ function rest_get()
                 if (isset($GLOBALS['request'][1]) && isset($GLOBALS['request'][2]) && isset($GLOBALS['request'][3])) {
                     // is user granted?
                     $userData = DB::queryFirstRow(
-                        ""SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id` FROM "".$pre.""users WHERE login = %s"",
+                        ""SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`
+                        FROM "".$pre.""users
+                        WHERE login = %s"",
                         $GLOBALS['request'][4]
                     );
                     if (DB::count() == 0) {
@@ -1596,7 +1657,9 @@ function rest_get()
                 if (isset($GLOBALS['request'][1])) {
                     // is user granted?
                     $userData = DB::queryFirstRow(
-                        ""SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`, `encrypted_psk` FROM "".$pre.""users WHERE login = %s"",
+                        ""SELECT `id`, `pw`, `groupes_interdits`, `groupes_visibles`, `fonction_id`, `encrypted_psk`
+                        FROM "".$pre.""users
+                        WHERE login = %s"",
                         $GLOBALS['request'][2]
                     );
                     if (DB::count() == 0) {
diff --git a/changelog.md b/changelog.md
index 51841e50d..878d2192a 100755
--- a/changelog.md
+++ b/changelog.md
@@ -7,6 +7,8 @@
  	> a user could potentially act on Items he should not have access to
  Securized script.backup.php by adding a security key
  Fixed some other security failures (credit to âsecurity at Amossys)
+ Improved security regarding uploading files
+ Fixed issue while restoring DB from administration page
  #1945 Cannot delete items
  #1944 File upload results in error
  #1941 Visualisation problems
diff --git a/items.import.php b/items.import.php
index 7b9bf3ff1..2e6cb791e 100644
--- a/items.import.php
+++ b/items.import.php
@@ -223,10 +223,8 @@ function(data) {
                     };
                 },
                 UploadComplete: function(up, files) {
-                    $.each(files, function(i, file) {
-                        ImportCSV(csv_filename);
-                        up.splice();    // clear the file queue
-                    });
+                    ImportCSV(csv_filename);
+                    up.splice();    // clear the file queue
                 }
             }
         });
@@ -248,13 +246,9 @@ function(data) {
             $(""#"" + file.id + "" b"").html(""100%"");
         });
         uploader_csv.bind('FileUploaded', function(upldr, file, object) {
-            var myData;
-            try {
-                myData = eval(object.response);
-            } catch(err) {
-                myData = eval('(' + object.response + ')');
-            }
-            csv_filename = myData.newfilename;
+            var myData = prepareExchangedData(object.response, ""decode"", ""<?php echo $_SESSION['key']; ?>"");
+
+            csv_filename = myData.operation_id;
         });
 
         // Load CSV click
@@ -337,13 +331,9 @@ function(data) {
             $(""#"" + file.id + "" b"").html(""100%"");
         });
         uploader_kp.bind('FileUploaded', function(upldr, file, object) {
-            var myData;
-            try {
-                myData = eval(object.response);
-            } catch(err) {
-                myData = eval('(' + object.response + ')');
-            }
-            kp_filename = myData.newfilename;
+            var myData = prepareExchangedData(object.response, ""decode"", ""<?php echo $_SESSION['key']; ?>"");
+
+            kp_filename = myData.operation_id;
         });
 
         // Load CSV click
@@ -483,11 +473,11 @@ function(data) {
                 $(""#kp_import_information"").html(data[0].message + ""<?php echo '<br><br><b>'.$LANG['alert_page_will_reload'].'</b>'; ?>"");
                 $(""#import_information"").show().html(""<i class='fa fa-exclamation-circle'></i>&nbsp;<?php echo $LANG['alert_message_done']; ?>"").attr(""class"",""ui-state-highlight"");
                 // Reload page
-                $(this).delay(2000).queue(function() {
+                /*$(this).delay(2000).queue(function() {
                     $(""#import_information"").effect( ""fade"", ""slow"" );
                     document.location = ""index.php?page=items"";
                     $(this).dequeue();
-                });
+                });*/
             },
             ""json""
         );
diff --git a/items.load.php b/items.load.php
index c751ff7ff..630923dcc 100755
--- a/items.load.php
+++ b/items.load.php
@@ -3361,7 +3361,7 @@ function() {
 ?>
         init: {
             BeforeUpload: function (up, file) {
-                $(""#item_upload_wait"").show();
+                $(""#item_upload_wait"").removeClass(""hidden"");
 
                 if ($(""#random_id"").val() == """") {
                     var post_id = CreateRandomString(9,""num_no_0"");
@@ -3470,7 +3470,7 @@ function(data) {
 ?>
         init: {
             BeforeUpload: function (up, file) {
-                $(""#item_edit_upload_wait"").show();
+                $(""#item_edit_upload_wait"").removeClass(""hidden"");
 
                 up.setOption('multipart_params', {
                     PHPSESSID : ""<?php echo $_SESSION['user_id']; ?>"",
diff --git a/items.php b/items.php
index 57c120a5b..d1480e8a6 100644
--- a/items.php
+++ b/items.php
@@ -549,7 +549,7 @@
         <div id=""tabs-03"">
             <div id=""item_upload"">
                 <div id=""item_upload_list""></div><br />
-                <div id=""item_upload_wait"" class=""ui-state-focus ui-corner-all"" style=""display:none;padding:2px;margin:5px 0 5px 0;"">'.$LANG['please_wait'].'...</div>
+                <div id=""item_upload_wait"" class=""ui-state-focus ui-corner-all hidden"" style=""padding:2px;margin:5px 0 5px 0;"">'.$LANG['please_wait'].'...</div>
                 <a id=""item_attach_pickfiles"" href=""#"" class=""button"">'.$LANG['select'].'</a>
                 <a id=""item_attach_uploadfiles"" href=""#"" class=""button"">'.$LANG['start_upload'].'</a>
                 <input type=""hidden"" id=""files_number"" value=""0"" />
@@ -743,7 +743,7 @@
             </div>
             <div id=""item_edit_upload"">
                 <div id=""item_edit_upload_list""></div><br />
-                <div id=""item_edit_upload_wait"" class=""ui-state-focus ui-corner-all"" style=""display:none;padding:2px;margin:5px 0 5px 0;"">'.$LANG['please_wait'].'...</div>
+                <div id=""item_edit_upload_wait"" class=""ui-state-focus ui-corner-all hidden"" style=""padding:2px;margin:5px 0 5px 0;"">'.$LANG['please_wait'].'...</div>
                 <a id=""item_edit_attach_pickfiles"" href=""#"" class=""button"">'.$LANG['select'].'</a>
                 <a id=""item_edit_attach_uploadfiles"" href=""#sd"" class=""button"">'.$LANG['start_upload'].'</a>
                 <input type=""hidden"" id=""edit_files_number"" value=""0"" />
diff --git a/profile.php b/profile.php
index ba3ecdf81..4f872eb48 100644
--- a/profile.php
+++ b/profile.php
@@ -260,6 +260,7 @@
     );
 }
 ?>
+<script type=""text/javascript"" src=""includes/js/functions.js""></script>
 <script type=""text/javascript"">
 $(function() {
     $("".tip"").tooltipster({multiple: true});
@@ -424,7 +425,6 @@ function(data) {
 
                 up.settings.multipart_params = {
                     ""PHPSESSID"":""<?php echo $_SESSION['user_id']; ?>"",
-                    ""newFileName"":""user<?php echo $_SESSION['user_id']; ?>""+tmp,
                     ""type_upload"":""upload_profile_photo"",
                     ""user_token"": $(""#profile_user_token"").val()
                 };
@@ -450,12 +450,10 @@ function(data) {
 
      // get response
     uploader_photo.bind(""FileUploaded"", function(up, file, object) {
-        var myData;
-        try {
-            myData = eval(object.response);
-        } catch(err) {
-            myData = eval('(' + object.response + ')');
-        }
+        // Decode returned data
+        var myData = prepareExchangedData(object.response, ""decode"", ""<?php echo $_SESSION['key']; ?>"");
+
+        // update form
         $(""#profile_photo"").html('<img src=""includes/avatars/'+myData.filename+'"" />');
         $(""#user_avatar_thumb"").attr('src', 'includes/avatars/'+myData.filename_thumb);
         $(""#filelist_photo"").html('').hide();
@@ -718,7 +716,5 @@ function(data){
             }
         }
     );
-
-
 }
- </script>
\ No newline at end of file
+</script>
diff --git a/sources/admin.queries.php b/sources/admin.queries.php
index 4bbf91358..1a2ac2a31 100644
--- a/sources/admin.queries.php
+++ b/sources/admin.queries.php
@@ -392,6 +392,23 @@
         $file = htmlspecialchars($dataPost[0]);
         $key = htmlspecialchars($dataPost[1]);
 
+        // Get filename from database
+        $data = DB::queryFirstRow(
+            ""SELECT valeur
+            FROM "".$pre.""misc
+            WHERE increment_id = %i"",
+            $file
+        );
+
+        $file = $data['valeur'];
+
+        // Delete operation id
+        DB::delete(
+            prefix_table('misc'),
+            ""increment_id = %i"",
+            $file
+        );
+
         // Undecrypt the file
         if (empty($key) === false) {
             // Decrypt the file
@@ -432,7 +449,7 @@
         fileDelete($file);
 
         //Show done
-        echo '[{""result"":""db_restore""}]';
+        echo '[{""result"":""db_restore"" , ""message"":""""}]';
         break;
 
     ###########################################################
@@ -483,7 +500,7 @@
         }
 
         //Show done
-        echo '[{""result"":""db_optimize""}]';
+        echo '[{""result"":""db_optimize"" , ""message"":""""}]';
         break;
 
     ###########################################################
diff --git a/sources/import.queries.php b/sources/import.queries.php
index 936b04e0e..843aa14c1 100644
--- a/sources/import.queries.php
+++ b/sources/import.queries.php
@@ -105,9 +105,26 @@ function sanitiseString($str, $crLFReplacement)
         //load full tree
         $tree->rebuild();
         $tree = $tree->getDescendants();
+       // Init post variable
+        $post_operation_id = filter_input(INPUT_POST, 'file', FILTER_SANITIZE_NUMBER_INT);
+
+        // Get filename from database
+        $data = DB::queryFirstRow(
+            ""SELECT valeur
+            FROM "".$pre.""misc
+            WHERE increment_id = %i"",
+            $post_operation_id
+        );
+
+        // Delete operation id
+        DB::delete(
+            prefix_table('misc'),
+            ""increment_id = %i"",
+            $post_operation_id
+        );
 
         // do some initializations
-        $file = $SETTINGS['path_to_files_folder'].""/"".filter_input(INPUT_POST, 'file', FILTER_SANITIZE_STRING);
+        $file = $SETTINGS['path_to_files_folder'].""/"".$data['valeur'];
         $size = 4096;
         $separator = "","";
         $enclosure = '""';
@@ -237,6 +254,7 @@ function sanitiseString($str, $crLFReplacement)
             // Show results to user.
             echo '[{""error"":""no"" , ""output"" : ""'.$display.'""}]';
         }
+
         break;
 
     //Insert into DB the items the user has selected
@@ -376,10 +394,31 @@ function sanitiseString($str, $crLFReplacement)
         $logFileName = ""/keepassImport_"".date('YmdHis')."".log"";
         $cacheLogFile = fopen($SETTINGS['path_to_files_folder'].$logFileName, 'w');
 
+        // Init post variable
+        $post_operation_id = filter_input(INPUT_POST, 'file', FILTER_SANITIZE_STRING);
+
+        // Get filename from database
+        $data = DB::queryFirstRow(
+            ""SELECT valeur
+            FROM "".$pre.""misc
+            WHERE increment_id = %i"",
+            $post_operation_id
+        );
+
+        // Delete operation id
+        DB::delete(
+            prefix_table('misc'),
+            ""increment_id = %i"",
+            $post_operation_id
+        );
+
+        // do some initializations
+        $file = $data['valeur'];
+
         //read xml file
-        if (file_exists(""'"".$SETTINGS['path_to_files_folder'].""/"".filter_input(INPUT_POST, 'file', FILTER_SANITIZE_STRING)).""'"") {
+        if (file_exists($SETTINGS['path_to_files_folder'].""/"".$file)) {
             $xml = simplexml_load_file(
-                $SETTINGS['path_to_files_folder'].""/"".filter_input(INPUT_POST, 'file', FILTER_SANITIZE_STRING)
+                $SETTINGS['path_to_files_folder'].""/"".$file
             );
         }
 
diff --git a/sources/items.queries.php b/sources/items.queries.php
index ba81c02b9..85ac3d90e 100644
--- a/sources/items.queries.php
+++ b/sources/items.queries.php
@@ -452,8 +452,10 @@
                 break;
             }
 
-            // Update CACHE table
-            updateCacheTable(""add_value"", $newID);
+            // Add item to CACHE table if new item has been created
+            if (isset($newID) === true) {
+                updateCacheTable(""add_value"", $newID);
+            }
 
             // Encrypt data to return
             echo prepareExchangedData($returnValues, ""encode"");
@@ -3387,8 +3389,10 @@
                         ""id = %i"",
                         $item_id
                     );
+
                     // log
                     logItems($item_id, $dataSource['label'], $_SESSION['user_id'], 'at_delete', $_SESSION['login']);
+
                     // Update CACHE table
                     updateCacheTable(""delete_value"", $item_id);
                 }
diff --git a/sources/main.functions.php b/sources/main.functions.php
index 7903e92c3..3b4f05b9d 100644
--- a/sources/main.functions.php
+++ b/sources/main.functions.php
@@ -1286,7 +1286,7 @@ function prepareExchangedData($data, $type)
     //load ClassLoader
     require_once $SETTINGS['cpassman_dir'].'/sources/SplClassLoader.php';
     //Load AES
-    $aes = new SplClassLoader('Encryption\Crypt', '../includes/libraries');
+    $aes = new SplClassLoader('Encryption\Crypt', $SETTINGS['cpassman_dir'].'/includes/libraries');
     $aes->register();
 
     if ($type == ""encode"") {
@@ -1372,8 +1372,11 @@ function prefix_table($table)
  */
 function GenerateCryptKey($size = """", $secure = false, $numerals = false, $capitalize = false, $ambiguous = false, $symbols = false)
 {
+    global $SETTINGS;
+    require_once $SETTINGS['cpassman_dir'].'/sources/SplClassLoader.php';
+
     // load library
-    $pwgen = new SplClassLoader('Encryption\PwGen', '../includes/libraries');
+    $pwgen = new SplClassLoader('Encryption\PwGen', $SETTINGS['cpassman_dir'].'/includes/libraries');
     $pwgen->register();
     $pwgen = new Encryption\PwGen\pwgen();
 
diff --git a/sources/upload/upload.files.php b/sources/upload/upload.files.php
index 7b7c25f80..bb188e447 100644
--- a/sources/upload/upload.files.php
+++ b/sources/upload/upload.files.php
@@ -73,7 +73,7 @@
             prefix_table('tokens'),
             array(
                 'end_timestamp' => time() + 10
-                ),
+            ),
             ""user_id = %i AND token = %s"",
             $_SESSION['user_id'],
             $post_user_token
@@ -310,31 +310,81 @@
     die();
 }
 
+// generate file name
+$newFileName = GenerateCryptKey(40, false, true, true, false, false);
+
+//Connect to mysql server
+require_once '../../includes/config/settings.php';
+require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Database/Meekrodb/db.class.php';
+$pass = defuse_return_decrypted($pass);
+DB::$host = $server;
+DB::$user = $user;
+DB::$password = $pass;
+DB::$dbName = $database;
+DB::$port = $port;
+DB::$encoding = $encoding;
+DB::$error_handler = true;
+$link = mysqli_connect($server, $user, $pass, $database, $port);
+$link->set_charset($encoding);
 
 if (null !== ($post_type_upload)
     && empty($post_type_upload) === false
     && $post_type_upload === ""import_items_from_csv""
 ) {
-    $newFileName = time().""_"".$_SESSION['user_id'];
     rename(
         $filePath,
-        $targetDir.DIRECTORY_SEPARATOR.$newFileName
+        $targetDir.DIRECTORY_SEPARATOR.$newFileName.""."".$ext
+    );
+
+    // Add in DB
+    DB::insert(
+        prefix_table(""misc""),
+        array(
+            'type' => ""temp_file"",
+            'intitule' => ""filename"",
+            'valeur' => $newFileName.""."".$ext
+        )
     );
+
+    // return info
+    echo prepareExchangedData(
+        array(
+            ""operation_id"" => DB::insertId()
+        ),
+        ""encode""
+    );
+
+    exit();
 } elseif (null !== ($post_type_upload)
     && $post_type_upload === ""import_items_from_keypass""
 ) {
-    $newFileName = time().""_"".$_SESSION['user_id'];
     rename(
         $filePath,
-        $targetDir.DIRECTORY_SEPARATOR.$newFileName
+        $targetDir.DIRECTORY_SEPARATOR.$newFileName.""."".$ext
+    );
+
+    // Add in DB
+    DB::insert(
+        prefix_table(""misc""),
+        array(
+            'type' => ""temp_file"",
+            'intitule' => ""filename"",
+            'valeur' => $newFileName.""."".$ext
+        )
     );
+
+    // return info
+    echo prepareExchangedData(
+        array(
+            ""operation_id"" => DB::insertId()
+        ),
+        ""encode""
+    );
+
+    exit();
 } elseif (null !== ($post_type_upload)
     && $post_type_upload === ""upload_profile_photo""
 ) {
-    // sanitize the new file name
-    $newFileName = preg_replace('/[^\w\._]+/', '_', htmlentities($post_newFileName, ENT_QUOTES));
-    $newFileName = preg_replace('/[^'.$valid_chars_regex.'\.]/', '', strtolower(basename($newFileName)));
-
     // get file extension
     $ext = pathinfo($filePath, PATHINFO_EXTENSION);
 
@@ -351,20 +401,6 @@
         40
     );
 
-    //Connect to mysql server
-    require_once '../../includes/config/settings.php';
-    require_once $SETTINGS['cpassman_dir'].'/includes/libraries/Database/Meekrodb/db.class.php';
-    $pass = defuse_return_decrypted($pass);
-DB::$host = $server;
-    DB::$user = $user;
-    DB::$password = $pass;
-    DB::$dbName = $database;
-    DB::$port = $port;
-    DB::$encoding = $encoding;
-    DB::$error_handler = true;
-    $link = mysqli_connect($server, $user, $pass, $database, $port);
-    $link->set_charset($encoding);
-
     // get current avatar and delete it
     $data = DB::queryFirstRow(""SELECT avatar, avatar_thumb FROM "".$pre.""users WHERE id=%i"", $_SESSION['user_id']);
     fileDelete($targetDir.DIRECTORY_SEPARATOR.$data['avatar']);
@@ -382,18 +418,45 @@
     $_SESSION['user_avatar'] = $newFileName.'.'.$ext;
     $_SESSION['user_avatar_thumb'] = $newFileName.""_thumb"".'.'.$ext;
 
-    echo '{""filename"" : ""'.htmlentities($_SESSION['user_avatar'], ENT_QUOTES).'"" , ""filename_thumb"" : ""'.htmlentities($_SESSION['user_avatar_thumb'], ENT_QUOTES).'""}';
+    // return info
+    echo prepareExchangedData(
+        array(
+            ""filename"" => htmlentities($_SESSION['user_avatar'], ENT_QUOTES),
+            ""filename_thumb"" => htmlentities($_SESSION['user_avatar_thumb'], ENT_QUOTES)
+        ),
+        ""encode""
+    );
+
     exit();
-} else {
-    $newFileName = time().""_"".$_SESSION['user_id'];
+} elseif (null !== ($post_type_upload)
+    && $post_type_upload === ""restore_db""
+) {
     rename(
         $filePath,
-        $targetDir.DIRECTORY_SEPARATOR.$newFileName
+        $targetDir.DIRECTORY_SEPARATOR.$newFileName.""."".$ext
+    );
+
+    // Add in DB
+    DB::insert(
+        prefix_table(""misc""),
+        array(
+            'type' => ""temp_file"",
+            'intitule' => ""filename"",
+            'valeur' => $newFileName.""."".$ext
+        )
     );
+
+    // return info
+    echo prepareExchangedData(
+        array(
+            ""operation_id"" => DB::insertId()
+        ),
+        ""encode""
+    );
+
+    exit();
 }
 
-// Return JSON-RPC response
-die('{""jsonrpc"" : ""2.0"", ""result"" : null, ""id"" : ""id"" , ""newfilename"" : ""'.$newFileName.'""}');
 
 
 /* Handles the error output. */"
CVE-2017-13044,"From c2f6833dddecf2d5fb89c9c898eee9981da342ed Mon Sep 17 00:00:00 2001
From: Denis Ovsienko <denis@ovsienko.info>
Date: Sat, 29 Jul 2017 21:45:35 +0100
Subject: [PATCH] CVE-2017-13044/HNCP: add DHCPv4-Data bounds checks

dhcpv4_print() in print-hncp.c had the same bug as dhcpv6_print(), apply
a fix along the same lines.

This fixes a buffer over-read discovered by Bhargava Shastry,
SecT/TU Berlin.

Add a test using the capture file supplied by the reporter(s).
---
 print-hncp.c                    |   4 ++++
 tests/TESTLIST                  |   2 ++
 tests/hncp_dhcpv4data-oobr.out  |   4 ++++
 tests/hncp_dhcpv4data-oobr.pcap | Bin 0 -> 170 bytes
 4 files changed, 10 insertions(+)
 create mode 100644 tests/hncp_dhcpv4data-oobr.out
 create mode 100644 tests/hncp_dhcpv4data-oobr.pcap

diff --git a/print-hncp.c b/print-hncp.c
index d0c9a3ea6..c0e006448 100644
--- a/print-hncp.c
+++ b/print-hncp.c
@@ -270,6 +270,8 @@ dhcpv4_print(netdissect_options *ndo,
 
     i = 0;
     while (i < length) {
+        if (i + 2 > length)
+            return -1;
         tlv = cp + i;
         type = (uint8_t)tlv[0];
         optlen = (uint8_t)tlv[1];
@@ -281,6 +283,8 @@ dhcpv4_print(netdissect_options *ndo,
 
         ND_PRINT((ndo, ""%s"", tok2str(dh4opt_str, ""Unknown"", type)));
         ND_PRINT((ndo,"" (%u)"", optlen + 2 ));
+        if (i + 2 + optlen > length)
+            return -1;
 
         switch (type) {
         case DH4OPT_DNS_SERVERS:
diff --git a/tests/TESTLIST b/tests/TESTLIST
index c72f7de6f..b42ba5b14 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -560,6 +560,8 @@ isakmpv1-attr-oobr	isakmpv1-attr-oobr.pcap		isakmpv1-attr-oobr.out	-v
 # code path and will not test the vulnerability unless modified respectively.
 # The .pcap file is truncated after the 1st packet.
 hncp_dhcpv6data-oobr	hncp_dhcpv6data-oobr.pcap	hncp_dhcpv6data-oobr.out -v -c1
+# Same comments apply to the case below.
+hncp_dhcpv4data-oobr	hncp_dhcpv4data-oobr.pcap	hncp_dhcpv4data-oobr.out -v -c1
 
 # bad packets from Katie Holly
 mlppp-oobr		mlppp-oobr.pcap			mlppp-oobr.out
diff --git a/tests/hncp_dhcpv4data-oobr.out b/tests/hncp_dhcpv4data-oobr.out
new file mode 100644
index 000000000..7d558dd9d
--- /dev/null
+++ b/tests/hncp_dhcpv4data-oobr.out
@@ -0,0 +1,4 @@
+IP truncated-ip - 260 bytes missing! (tos 0x12,ECT(0), ttl 48, id 21323, offset 0, flags [+, DF, rsvd], proto UDP (17), length 296, bad cksum 8e0f (->cd08)!)
+    1.2.7.0.1812 > 128.253.0.96.8231: hncp (268)
+	DHCPv4-Data (6)
+		DNS-server (98) (invalid)
diff --git a/tests/hncp_dhcpv4data-oobr.pcap b/tests/hncp_dhcpv4data-oobr.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..fb7c7766ad6f131f47c75e048a501de4d9cafe0a
GIT binary patch
literal 170
zcmca|c+)~A1{MZR2?mDZw!57E3=9m6KrF)`u&tOufFTRWHUf+Nkf>&0P&lw)^;`}H
zS0P4?VDASE27-P3j7;nd4SyLD*hLi7g_(g$RT-GrK)fi|0FOwyzyA+0FwAB6_Wd8j
xydnk$p!k0vV5kKulx1Le`#*u1`;lZl%U+-gCUj9oi^N|H48J%S{{LtE1^~xPFY^EZ

literal 0
HcmV?d00001"
CVE-2017-15365,"From 0b5a5258abbeaf8a0c3a18c7e753699787fdf46e Mon Sep 17 00:00:00 2001
From: sjaakola <seppo.jaakola@iki.fi>
Date: Fri, 6 Oct 2017 09:49:42 +0300
Subject: [PATCH] MW-416 DDL replication moved after acl checking

galera_events test shows a regression with the original fix for MW-416
Reason was that Events::drop_event() can be called also from inside event
execution, and there we have a speacial treatment for event, which executes
""DROP EVENT"" statement, and runs TOI replication inside the event processing body.
This resulted in executing WSREP_TO_ISOLATION two times for such DROP EVENT statement.
Fix is to call WSREP_TO_ISOLATION_BEGIN only in Events::drop_event()
---
 sql/event_data_objects.cc | 30 ++++++++++++++++++++++--------
 1 file changed, 22 insertions(+), 8 deletions(-)

diff --git a/sql/event_data_objects.cc b/sql/event_data_objects.cc
index e494b4a429bca..90e839debb549 100644
--- a/sql/event_data_objects.cc
+++ b/sql/event_data_objects.cc
@@ -1472,19 +1472,33 @@ Event_job_data::execute(THD *thd, bool drop)
       bool save_tx_read_only= thd->tx_read_only;
       thd->tx_read_only= false;
 
-      if (WSREP(thd))
-      {
+      /*
+         This code is processing event execution and does not have client
+         connection. Here, event execution will now execute a prepared
+         DROP EVENT statement, but thd->lex->sql_command is set to
+         SQLCOM_CREATE_PROCEDURE
+         DROP EVENT will be logged in binlog, and we have to
+         replicate it to make all nodes have consistent event definitions
+         Wsrep DDL replication is triggered inside Events::drop_event(),
+         and here we need to prepare the THD so that DDL replication is
+         possible, essentially it requires setting sql_command to
+         SQLCOMM_DROP_EVENT, we will switch sql_command for the duration
+         of DDL replication only.
+      */
+      const enum_sql_command sql_command_save= thd->lex->sql_command;
+      const bool sql_command_set= WSREP(thd);
+
+      if (sql_command_set)
         thd->lex->sql_command = SQLCOM_DROP_EVENT;
-        WSREP_TO_ISOLATION_BEGIN(WSREP_MYSQL_DB, NULL, NULL);
-      }
 
       ret= Events::drop_event(thd, dbname, name, FALSE);
 
-      WSREP_TO_ISOLATION_END;
+      if (sql_command_set)
+      {
+        WSREP_TO_ISOLATION_END;
+        thd->lex->sql_command = sql_command_save;
+      }
 
-#ifdef WITH_WSREP
-  error:
-#endif
       thd->tx_read_only= save_tx_read_only;
       thd->security_ctx->master_access= saved_master_access;
     }"
CVE-2017-13139,"From d072ed6aff835c174e856ce3a428163c0da9e8f4 Mon Sep 17 00:00:00 2001
From: Glenn Randers-Pehrson <glennrp@gmail.com>
Date: Sun, 9 Jul 2017 22:42:32 -0400
Subject: [PATCH] Skip MNG CLIP chunk with out-of-range object IDs

---
 coders/png.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/coders/png.c b/coders/png.c
index d6d33ee3603..ea6dce6ab5f 100644
--- a/coders/png.c
+++ b/coders/png.c
@@ -5899,6 +5899,9 @@ static Image *ReadOneMNGImage(MngInfo* mng_info, const ImageInfo *image_info,
 
                 for (i=(int) first_object; i <= (int) last_object; i++)
                 {
+                  if ((i < 0) || (i >= MNG_MAX_OBJECTS))
+                    continue;
+
                   if (mng_info->exists[i] && !mng_info->frozen[i])
                     {
                       MngBox"
CVE-2017-7215,"From 599b3638384bfe49fa527bcb060f3f608a296996 Mon Sep 17 00:00:00 2001
From: iglocska <andras.iklody@gmail.com>
Date: Fri, 10 Mar 2017 09:22:16 +0100
Subject: [PATCH] fix: Tightened sanitisation in some view elements - on the
 index filter tool - organisation landing page

as reported by Tien Phan and David Maciejak of Fortinet's FortiGuard Labs
---
 app/webroot/js/misp2.4.68.js | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/app/webroot/js/misp2.4.68.js b/app/webroot/js/misp2.4.68.js
index 211ad3017e3..c815dcd587f 100644
--- a/app/webroot/js/misp2.4.68.js
+++ b/app/webroot/js/misp2.4.68.js
@@ -1326,10 +1326,10 @@ function indexEvaluateFiltering() {
 		}
 		if (filtering.date.from != null || filtering.date.from != null) {
 			var text = """";
-			if (filtering.date.from != """") text = ""From: "" + filtering.date.from;
+			if (filtering.date.from != """") text = ""From: "" + $('<span>').text(filtering.date.from).html();
 			if (filtering.date.until != """") {
 				if (text != """") text += "" "";
-				text += ""Until: "" + filtering.date.until;
+				text += ""Until: "" + $('<span>').text(filtering.date.until).html();
 			}
 		}
 		$('#value_date').html(text);
@@ -1343,9 +1343,9 @@ function indexEvaluateFiltering() {
 				var text = """";
 				if (filtering[differentFilters[i]] == 1) text = ""Yes"";
 				else if (filtering[differentFilters[i]] == 0) text = ""No"";
-				$('#value_' + differentFilters[i]).html(text);
+				$('#value_' + differentFilters[i]).text(text);
 			} else {
-				$('#value_' + differentFilters[i]).html("""");
+				$('#value_' + differentFilters[i]).text("""");
 			}
 		}
 		for (var i = 0; i < simpleFilters.length; i++) {
@@ -1354,7 +1354,7 @@ function indexEvaluateFiltering() {
 	}
 	indexSetTableVisibility();
 	indexSetRowVisibility();
-	$('#generatedURLContent').html(indexCreateFilters());
+	$('#generatedURLContent').text(indexCreateFilters());
 }
 
 function quickFilter(passedArgs, url) {
@@ -1476,11 +1476,11 @@ function indexEvaluateSimpleFiltering(field) {
 		for (var i = 0; i < filtering[field].OR.length; i++) {
 			if (i > 0) text += '<span class=""green bold""> OR </span>';
 			if (typedFields.indexOf(field) == -1) {
-				text += filtering[field].OR[i];
+				text += $('<span>').text(filtering[field].OR[i]).html();
 			} else {
 				for (var j = 0; j < typeArray[field].length; j++) {
 					if (typeArray[field][j].id == filtering[field].OR[i]) {
-						text += typeArray[field][j].value;
+						text += $('<span>').text(typeArray[field][j].value).html();
 					}
 				}
 			}
@@ -1493,11 +1493,11 @@ function indexEvaluateSimpleFiltering(field) {
 				else text += '<span class=""red bold"">NOT </span>';
 			} else text += '<span class=""red bold""> AND NOT </span>';
 			if (typedFields.indexOf(field) == -1) {
-				text += filtering[field].NOT[i];
+				text += $('<span>').text(filtering[field].NOT[i]).html();
 			} else {
 				for (var j = 0; j < typeArray[field].length; j++) {
 					if (typeArray[field][j].id == filtering[field].NOT[i]) {
-						text += typeArray[field][j].value;
+						text += $('<span>').text(typeArray[field][j].value).html();
 					}
 				}
 			}"
CVE-2017-13010,"From 877b66b398518d9501513e0860c9f3a8acc70892 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Mon, 6 Mar 2017 20:12:33 -0800
Subject: [PATCH] CVE-2017-13010/BEEP: Do bounds checking when comparing
 strings.

This fixes a buffer over-read discovered by Brian 'geeknik' Carpenter.

Add a test using the capture file supplied by the reporter(s).
---
 print-beep.c         |  26 +++++++++++++++++---------
 tests/TESTLIST       |   1 +
 tests/beep-oobr.out  |   2 ++
 tests/beep-oobr.pcap | Bin 0 -> 218 bytes
 4 files changed, 20 insertions(+), 9 deletions(-)
 create mode 100644 tests/beep-oobr.out
 create mode 100644 tests/beep-oobr.pcap

diff --git a/print-beep.c b/print-beep.c
index ed502b96c..64a162d74 100644
--- a/print-beep.c
+++ b/print-beep.c
@@ -28,9 +28,17 @@
  */
 
 static int
-l_strnstart(const char *tstr1, u_int tl1, const char *str2, u_int l2)
+l_strnstart(netdissect_options *ndo, const char *tstr1, u_int tl1,
+    const char *str2, u_int l2)
 {
-
+	if (!ND_TTEST2(*str2, tl1)) {
+		/*
+		 * We don't have tl1 bytes worth of captured data
+		 * for the string, so we can't check for this
+		 * string.
+		 */
+		return 0;
+	}
 	if (tl1 > l2)
 		return 0;
 
@@ -41,19 +49,19 @@ void
 beep_print(netdissect_options *ndo, const u_char *bp, u_int length)
 {
 
-	if (l_strnstart(""MSG"", 4, (const char *)bp, length)) /* A REQuest */
+	if (l_strnstart(ndo, ""MSG"", 4, (const char *)bp, length)) /* A REQuest */
 		ND_PRINT((ndo, "" BEEP MSG""));
-	else if (l_strnstart(""RPY "", 4, (const char *)bp, length))
+	else if (l_strnstart(ndo, ""RPY "", 4, (const char *)bp, length))
 		ND_PRINT((ndo, "" BEEP RPY""));
-	else if (l_strnstart(""ERR "", 4, (const char *)bp, length))
+	else if (l_strnstart(ndo, ""ERR "", 4, (const char *)bp, length))
 		ND_PRINT((ndo, "" BEEP ERR""));
-	else if (l_strnstart(""ANS "", 4, (const char *)bp, length))
+	else if (l_strnstart(ndo, ""ANS "", 4, (const char *)bp, length))
 		ND_PRINT((ndo, "" BEEP ANS""));
-	else if (l_strnstart(""NUL "", 4, (const char *)bp, length))
+	else if (l_strnstart(ndo, ""NUL "", 4, (const char *)bp, length))
 		ND_PRINT((ndo, "" BEEP NUL""));
-	else if (l_strnstart(""SEQ "", 4, (const char *)bp, length))
+	else if (l_strnstart(ndo, ""SEQ "", 4, (const char *)bp, length))
 		ND_PRINT((ndo, "" BEEP SEQ""));
-	else if (l_strnstart(""END"", 4, (const char *)bp, length))
+	else if (l_strnstart(ndo, ""END"", 4, (const char *)bp, length))
 		ND_PRINT((ndo, "" BEEP END""));
 	else
 		ND_PRINT((ndo, "" BEEP (payload or undecoded)""));
diff --git a/tests/TESTLIST b/tests/TESTLIST
index 5dad008ef..080a00fbd 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -440,6 +440,7 @@ decnet-shorthdr-oobr	decnet-shorthdr-oobr.pcap	decnet-shorthdr-oobr.out
 isakmp-3948-oobr-2	isakmp-3948-oobr-2.pcap		isakmp-3948-oobr-2.out
 ieee802.11_rates_oobr	ieee802.11_rates_oobr.pcap	ieee802.11_rates_oobr.out
 ipv6-mobility-header-oobr	ipv6-mobility-header-oobr.pcap	ipv6-mobility-header-oobr.out
+beep-oobr		beep-oobr.pcap			beep-oobr.out
 
 # bad packets from Kamil Frankowicz
 snmp-heapoverflow-1	snmp-heapoverflow-1.pcap	snmp-heapoverflow-1.out
diff --git a/tests/beep-oobr.out b/tests/beep-oobr.out
new file mode 100644
index 000000000..ba46f2899
--- /dev/null
+++ b/tests/beep-oobr.out
@@ -0,0 +1,2 @@
+unknown ip 3
+IP6 3030:3030:3030:3030:3030:3030:3030:3030.10288 > 3030:3030:3030:3030:3030:3030:3030:3030.12336: Flags [.U], seq 808464432:808476740, ack 808464432, win 12336, urg 12336, options [eol], length 12308 BEEP (payload or undecoded)
diff --git a/tests/beep-oobr.pcap b/tests/beep-oobr.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..ea3853b452ad71442b60efd7c158f5dee708a00c
GIT binary patch
literal 218
ycmca|c+)~A1{MYbC~#n4V0g*^=Nbe8`7k+}&@c;fz^1biv_k_)MLm>_)r9~o2q|#@

literal 0
HcmV?d00001"
CVE-2017-9065,"From e88a48a066ab2200ce3091b131d43e2fab2460a4 Mon Sep 17 00:00:00 2001
From: Pascal Birchler <pascal.birchler@gmail.com>
Date: Tue, 16 May 2017 08:09:42 +0000
Subject: [PATCH] Whitelist post arguments in XML-RPC

Built from https://develop.svn.wordpress.org/trunk@40677


git-svn-id: http://core.svn.wordpress.org/trunk@40540 1a063a9b-81f0-0310-95a4-ce76da25c4cd
---
 wp-includes/class-wp-xmlrpc-server.php | 30 ++++++++++++++++++++------
 wp-includes/version.php                |  2 +-
 2 files changed, 25 insertions(+), 7 deletions(-)

diff --git a/wp-includes/class-wp-xmlrpc-server.php b/wp-includes/class-wp-xmlrpc-server.php
index 5084da65cb9d..7bbde05c2bd9 100644
--- a/wp-includes/class-wp-xmlrpc-server.php
+++ b/wp-includes/class-wp-xmlrpc-server.php
@@ -1295,10 +1295,31 @@ private function _toggle_sticky( $post_data, $update = false ) {
 	 * @return IXR_Error|string
 	 */
 	protected function _insert_post( $user, $content_struct ) {
-		$defaults = array( 'post_status' => 'draft', 'post_type' => 'post', 'post_author' => 0,
-			'post_password' => '', 'post_excerpt' => '', 'post_content' => '', 'post_title' => '' );
+		$defaults = array(
+			'post_status'    => 'draft',
+			'post_type'      => 'post',
+			'post_author'    => null,
+			'post_password'  => null,
+			'post_excerpt'   => null,
+			'post_content'   => null,
+			'post_title'     => null,
+			'post_date'      => null,
+			'post_date_gmt'  => null,
+			'post_format'    => null,
+			'post_name'      => null,
+			'post_thumbnail' => null,
+			'post_parent'    => null,
+			'ping_status'    => null,
+			'comment_status' => null,
+			'custom_fields'  => null,
+			'terms_names'    => null,
+			'terms'          => null,
+			'sticky'         => null,
+			'enclosure'      => null,
+			'ID'             => null,
+		);
 
-		$post_data = wp_parse_args( $content_struct, $defaults );
+		$post_data = wp_parse_args( array_intersect_key( $content_struct, $defaults ), $defaults );
 
 		$post_type = get_post_type_object( $post_data['post_type'] );
 		if ( ! $post_type )
@@ -1488,9 +1509,6 @@ protected function _insert_post( $user, $content_struct ) {
 
 			$post_data['tax_input'] = $terms;
 			unset( $post_data['terms'], $post_data['terms_names'] );
-		} else {
-			// Do not allow direct submission of 'tax_input', clients must use 'terms' and/or 'terms_names'.
-			unset( $post_data['tax_input'], $post_data['post_category'], $post_data['tags_input'] );
 		}
 
 		if ( isset( $post_data['post_format'] ) ) {
diff --git a/wp-includes/version.php b/wp-includes/version.php
index 2614f176c1e5..7cf6b4c2b073 100644
--- a/wp-includes/version.php
+++ b/wp-includes/version.php
@@ -4,7 +4,7 @@
  *
  * @global string $wp_version
  */
-$wp_version = '4.8-beta1-40676';
+$wp_version = '4.8-beta1-40677';
 
 /**
  * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema."
CVE-2017-15052,"From 8f2d51dd6c24f76e4f259d0df22cff9b275f2dd1 Mon Sep 17 00:00:00 2001
From: nilsteampassnet <nils@teampass.net>
Date: Sat, 30 Sep 2017 16:56:00 +0200
Subject: [PATCH] 2.1.27

Improved checks to perform operation on Items and Users
---
 sources/users.queries.php | 1331 ++++++++++++++++++-------------------
 users.load.php            |  165 +----
 2 files changed, 669 insertions(+), 827 deletions(-)

diff --git a/sources/users.queries.php b/sources/users.queries.php
index 874d4fe37..1bbcfb6c1 100644
--- a/sources/users.queries.php
+++ b/sources/users.queries.php
@@ -78,75 +78,6 @@
 
 if (null !== filter_input(INPUT_POST, 'type', FILTER_SANITIZE_STRING)) {
     switch (filter_input(INPUT_POST, 'type', FILTER_SANITIZE_STRING)) {
-        case ""groupes_visibles"":
-        case ""groupes_interdits"":
-            // Prepare variables
-            $post_valeur = filter_input(INPUT_POST, 'valeur', FILTER_SANITIZE_STRING);
-            $val = explode(';', $post_valeur);
-            $post_type = filter_input(INPUT_POST, 'type', FILTER_SANITIZE_STRING);
-
-            // Check if id folder is already stored
-            $data = DB::queryfirstrow(
-                ""SELECT "".$post_type.""
-                FROM "".prefix_table(""users"").""
-                WHERE id = %i"",
-                $val[0]
-            );
-            $new_groupes = $data[$post_type];
-            if (empty($data[$post_type]) === false) {
-                $groupes = explode(';', $data[$post_type]);
-                if (in_array($val[1], $groupes)) {
-                    $new_groupes = str_replace($val[1], """", $new_groupes);
-                } else {
-                    $new_groupes .= "";"".$val[1];
-                }
-            } else {
-                $new_groupes = $val[1];
-            }
-            while (substr_count($new_groupes, "";;"") > 0) {
-                $new_groupes = str_replace("";;"", "";"", $new_groupes);
-            }
-            // Store id DB
-            DB::update(
-                prefix_table(""users""),
-                array($post_type => $new_groupes),
-                ""id = %i"",
-                $val[0]
-            );
-            break;
-        /**
-         * Update a fonction
-         */
-        case ""fonction"":
-            $val = explode(';', filter_input(INPUT_POST, 'valeur', FILTER_SANITIZE_STRING));
-
-            // Check if ID exists
-            $data = DB::queryfirstrow(""SELECT fonction_id FROM "".prefix_table(""users"")."" WHERE id = %i"", $val[0]);
-            $new_fonctions = $data['fonction_id'];
-            if (!empty($data['fonction_id'])) {
-                $fonctions = explode(';', $data['fonction_id']);
-                if (in_array($val[1], $fonctions)) {
-                    $new_fonctions = str_replace($val[1], """", $new_fonctions);
-                } elseif (!empty($new_fonctions)) {
-                    $new_fonctions .= "";"".$val[1];
-                } else {
-                    $new_fonctions = "";"".$val[1];
-                }
-            } else {
-                $new_fonctions = $val[1];
-            }
-            // ensure no double ; exists
-            $new_fonctions = str_replace("";;"", "";"", $new_fonctions);
-            // Store id DB
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'fonction_id' => $new_fonctions
-                    ),
-                ""id = %i"",
-                $val[0]
-            );
-            break;
         /**
          * ADD NEW USER
          */
@@ -307,122 +238,114 @@
             // Prepare post variables
             $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
 
-            if (filter_input(INPUT_POST, 'action', FILTER_SANITIZE_STRING) == ""delete"") {
-                // delete user in database
-                DB::delete(
-                    prefix_table(""users""),
-                    ""id = %i"",
-                    $post_id
-                );
-                // delete personal folder and subfolders
-                $data = DB::queryfirstrow(
-                    ""SELECT id FROM "".prefix_table(""nested_tree"").""
-                    WHERE title = %s AND personal_folder = %i"",
-                    $post_id,
-                    ""1""
-                );
-                // Get through each subfolder
-                if (!empty($data['id'])) {
-                    $folders = $tree->getDescendants($data['id'], true);
-                    foreach ($folders as $folder) {
-                        // delete folder
-                        DB::delete(prefix_table(""nested_tree""), ""id = %i AND personal_folder = %i"", $folder->id, ""1"");
-                        // delete items & logs
-                        $items = DB::query(
-                            ""SELECT id FROM "".prefix_table(""items"").""
-                            WHERE id_tree=%i AND perso = %i"",
-                            $folder->id,
-                            ""1""
-                        );
-                        foreach ($items as $item) {
-                            // Delete item
-                            DB::delete(prefix_table(""items""), ""id = %i"", $item['id']);
-                            // log
-                            DB::delete(prefix_table(""log_items""), ""id_item = %i"", $item['id']);
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
+            );
+
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                if (filter_input(INPUT_POST, 'action', FILTER_SANITIZE_STRING) == ""delete"") {
+                    // delete user in database
+                    DB::delete(
+                        prefix_table(""users""),
+                        ""id = %i"",
+                        $post_id
+                    );
+                    // delete personal folder and subfolders
+                    $data = DB::queryfirstrow(
+                        ""SELECT id FROM "".prefix_table(""nested_tree"").""
+                        WHERE title = %s AND personal_folder = %i"",
+                        $post_id,
+                        ""1""
+                    );
+                    // Get through each subfolder
+                    if (!empty($data['id'])) {
+                        $folders = $tree->getDescendants($data['id'], true);
+                        foreach ($folders as $folder) {
+                            // delete folder
+                            DB::delete(prefix_table(""nested_tree""), ""id = %i AND personal_folder = %i"", $folder->id, ""1"");
+                            // delete items & logs
+                            $items = DB::query(
+                                ""SELECT id FROM "".prefix_table(""items"").""
+                                WHERE id_tree=%i AND perso = %i"",
+                                $folder->id,
+                                ""1""
+                            );
+                            foreach ($items as $item) {
+                                // Delete item
+                                DB::delete(prefix_table(""items""), ""id = %i"", $item['id']);
+                                // log
+                                DB::delete(prefix_table(""log_items""), ""id_item = %i"", $item['id']);
+                            }
                         }
+                        // rebuild tree
+                        $tree = new Tree\NestedTree\NestedTree($pre.'nested_tree', 'id', 'parent_id', 'title');
+                        $tree->rebuild();
                     }
-                    // rebuild tree
-                    $tree = new Tree\NestedTree\NestedTree($pre.'nested_tree', 'id', 'parent_id', 'title');
-                    $tree->rebuild();
+                    // update LOG
+                    logEvents('user_mngt', 'at_user_deleted', $_SESSION['user_id'], $_SESSION['login'], $post_id);
+                } else {
+                    // lock user in database
+                    DB::update(
+                        prefix_table(""users""),
+                        array(
+                            'disabled' => 1,
+                            'key_tempo' => """"
+                            ),
+                        ""id=%i"",
+                        $post_id
+                    );
+                    // update LOG
+                    logEvents('user_mngt', 'at_user_locked', $_SESSION['user_id'], $_SESSION['login'], $post_id);
                 }
-                // update LOG
-                logEvents('user_mngt', 'at_user_deleted', $_SESSION['user_id'], $_SESSION['login'], $post_id);
+                echo '[ { ""error"" : ""no"" } ]';
             } else {
-                // lock user in database
-                DB::update(
-                    prefix_table(""users""),
-                    array(
-                        'disabled' => 1,
-                        'key_tempo' => """"
-                        ),
-                    ""id=%i"",
-                    $post_id
-                );
-                // update LOG
-                logEvents('user_mngt', 'at_user_locked', $_SESSION['user_id'], $_SESSION['login'], $post_id);
+                echo '[ { ""error"" : ""'.addslashes($LANG['error_not_allowed_to']).'"" } ]';
             }
-            echo '[ { ""error"" : ""no"" } ]';
             break;
 
         /**
-         * UPDATE EMAIL OF USER
+         * UPDATE CAN CREATE ROOT FOLDER RIGHT
          */
-        case ""modif_mail_user"":
+        case ""can_create_root_folder"":
             // Check KEY
             if (filter_input(INPUT_POST, 'key', FILTER_SANITIZE_STRING) !== filter_var($_SESSION['key'], FILTER_SANITIZE_STRING)) {
-                // error
-                echo '[ { ""error"" : ""yes"" } ]';
+                echo prepareExchangedData(array(""error"" => ""not_allowed"", ""error_text"" => addslashes($LANG['error_not_allowed_to'])), ""encode"");
                 break;
             }
 
-            // Prepare post variables
             $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
 
-            // Get old email
-            $data = DB::queryfirstrow(
-                ""SELECT email FROM "".prefix_table(""users"").""
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole FROM "".prefix_table(""users"").""
                 WHERE id = %i"",
                 $post_id
             );
 
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'email' => filter_input(INPUT_POST, 'newemail', FILTER_SANITIZE_STRING)
-                    ),
-                ""id = %i"",
-                $post_id
-            );
-            // update LOG
-            logEvents(
-                'user_mngt',
-                'at_user_email_changed:'.$data['email'],
-                intval($_SESSION['user_id']),
-                filter_input(INPUT_POST, 'login', FILTER_SANITIZE_STRING),
-                $post_id
-            );
-            echo '[{""error"" : ""no""}]';
-            break;
-
-        /**
-         * UPDATE CAN CREATE ROOT FOLDER RIGHT
-         */
-        case ""can_create_root_folder"":
-            // Check KEY
-            if (filter_input(INPUT_POST, 'key', FILTER_SANITIZE_STRING) !== filter_var($_SESSION['key'], FILTER_SANITIZE_STRING)) {
-                echo prepareExchangedData(array(""error"" => ""not_allowed"", ""error_text"" => addslashes($LANG['error_not_allowed_to'])), ""encode"");
-                break;
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'can_create_root_folder' => filter_input(INPUT_POST, 'value', FILTER_SANITIZE_STRING)
+                        ),
+                    ""id = %i"",
+                    $post_id
+                );
+                echo prepareExchangedData(array(""error"" => """"), ""encode"");
+            } else {
+                echo prepareExchangedData(array(""error"" => ""not_allowed""), ""encode"");
             }
-
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'can_create_root_folder' => filter_input(INPUT_POST, 'value', FILTER_SANITIZE_STRING)
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
-            );
-            echo prepareExchangedData(array(""error"" => """"), ""encode"");
             break;
         /**
          * UPDATE ADMIN RIGHTS FOR USER
@@ -437,19 +360,35 @@
             }
 
             $post_value = filter_input(INPUT_POST, 'value', FILTER_SANITIZE_NUMBER_INT);
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
 
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'admin' => $post_value,
-                    'gestionnaire' => $post_value === 1 ? ""0"" : ""0"",
-                    'read_only' => $post_value === 1 ? ""0"" : ""0""
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
             );
 
-            echo prepareExchangedData(array(""error"" => """"), ""encode"");
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'admin' => $post_value,
+                        'gestionnaire' => $post_value === 1 ? ""0"" : ""0"",
+                        'read_only' => $post_value === 1 ? ""0"" : ""0""
+                        ),
+                    ""id = %i"",
+                    $post_id
+                );
+
+                echo prepareExchangedData(array(""error"" => """"), ""encode"");
+            } else {
+                echo prepareExchangedData(array(""error"" => ""not_allowed""), ""encode"");
+            }
             break;
         /**
          * UPDATE MANAGER RIGHTS FOR USER
@@ -461,30 +400,40 @@
                 break;
             }
 
-            // Get some data
-            $data = DB::queryfirstrow(
-                ""SELECT can_manage_all_users, gestionnaire FROM "".prefix_table(""users"").""
-                WHERE id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
-            );
-
             $post_value = filter_input(INPUT_POST, 'value', FILTER_SANITIZE_NUMBER_INT);
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
 
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'gestionnaire' => $post_value,
-                    'can_manage_all_users' => ($data['can_manage_all_users'] === ""0"" && $post_value === ""1"") ? ""0"" : (
-                        ($data['can_manage_all_users'] === ""0"" && $post_value === ""0"") ? ""0"" : (
-                        ($data['can_manage_all_users'] === ""1"" && $post_value === ""0"") ? ""0"" : ""1"")
-                    ),
-                    'admin' => $post_value === 1 ? ""0"" : ""0"",
-                    'read_only' => $post_value === 1 ? ""0"" : ""0""
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole, can_manage_all_users, gestionnaire
+                FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
             );
-            echo prepareExchangedData(array(""error"" => """"), ""encode"");
+
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'gestionnaire' => $post_value,
+                        'can_manage_all_users' => ($data_user['can_manage_all_users'] === ""0"" && $post_value === ""1"") ? ""0"" : (
+                            ($data_user['can_manage_all_users'] === ""0"" && $post_value === ""0"") ? ""0"" : (
+                            ($data_user['can_manage_all_users'] === ""1"" && $post_value === ""0"") ? ""0"" : ""1"")
+                        ),
+                        'admin' => $post_value === 1 ? ""0"" : ""0"",
+                        'read_only' => $post_value === 1 ? ""0"" : ""0""
+                        ),
+                    ""id = %i"",
+                    $post_id
+                );
+                echo prepareExchangedData(array(""error"" => """"), ""encode"");
+            } else {
+                echo prepareExchangedData(array(""error"" => ""not_allowed""), ""encode"");
+            }
             break;
         /**
          * UPDATE READ ONLY RIGHTS FOR USER
@@ -497,18 +446,34 @@
             }
 
             $post_value = filter_input(INPUT_POST, 'value', FILTER_SANITIZE_NUMBER_INT);
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
 
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'read_only' => $post_value,
-                    'gestionnaire' => $post_value === 1 ? ""0"" : ""0"",
-                    'admin' => $post_value === 1 ? 0 : ""0""
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
             );
-            echo prepareExchangedData(array(""error"" => """"), ""encode"");
+
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'read_only' => $post_value,
+                        'gestionnaire' => $post_value === 1 ? ""0"" : ""0"",
+                        'admin' => $post_value === 1 ? 0 : ""0""
+                        ),
+                    ""id = %i"",
+                    $post_id
+                );
+                echo prepareExchangedData(array(""error"" => """"), ""encode"");
+            } else {
+                echo prepareExchangedData(array(""error"" => ""not_allowed""), ""encode"");
+            }
             break;
         /**
          * UPDATE CAN MANAGE ALL USERS RIGHTS FOR USER
@@ -521,27 +486,37 @@
                 break;
             }
 
-            // Get some data
-            $data = DB::queryfirstrow(
-                ""SELECT admin, gestionnaire FROM "".prefix_table(""users"").""
-                WHERE id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
-            );
-
             $post_value = filter_input(INPUT_POST, 'value', FILTER_SANITIZE_NUMBER_INT);
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
 
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'can_manage_all_users' => $post_value,
-                    'gestionnaire' => ($data['gestionnaire'] === ""0"" && $post_value === 1) ? ""1"" : (($data['gestionnaire'] === ""1"" && $post_value === 1) ? ""1"" : (($data['gestionnaire'] === ""1"" && $post_value === 0) ? ""1"" : ""0"")),
-                    'admin' => $post_value === 1 ? ""1"" : ""0"",
-                    'read_only' => $post_value === 1 ? ""1"" : ""0""
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole, gestionnaire
+                FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
             );
-            echo prepareExchangedData(array(""error"" => """"), ""encode"");
+
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'can_manage_all_users' => $post_value,
+                        'gestionnaire' => ($data_user['gestionnaire'] === ""0"" && $post_value === 1) ? ""1"" : (($data_user['gestionnaire'] === ""1"" && $post_value === 1) ? ""1"" : (($data_user['gestionnaire'] === ""1"" && $post_value === 0) ? ""1"" : ""0"")),
+                        'admin' => $post_value === 1 ? ""1"" : ""0"",
+                        'read_only' => $post_value === 1 ? ""1"" : ""0""
+                        ),
+                    ""id = %i"",
+                    $post_id
+                );
+                echo prepareExchangedData(array(""error"" => """"), ""encode"");
+            } else {
+                echo prepareExchangedData(array(""error"" => ""not_allowed""), ""encode"");
+            }
             break;
         /**
          * UPDATE PERSONNAL FOLDER FOR USER
@@ -554,173 +529,33 @@
             }
 
             $post_value = filter_input(INPUT_POST, 'value', FILTER_SANITIZE_NUMBER_INT);
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
 
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'personal_folder' => $post_value === 1 ? ""1"" : ""0""
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
-            );
-            echo prepareExchangedData(array(""error"" => """"), ""encode"");
-            break;
-
-        /**
-         * CHANGE USER FUNCTIONS
-         */
-        case ""open_div_functions"":
-            $text = """";
-            // Refresh list of existing functions
+            // Get info about user to delete
             $data_user = DB::queryfirstrow(
-                ""SELECT fonction_id FROM "".prefix_table(""users"").""
+                ""SELECT admin, isAdministratedByRole, gestionnaire
+                FROM "".prefix_table(""users"").""
                 WHERE id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
+                $post_id
             );
 
-            $users_functions = explode(';', $data_user['fonction_id']);
-            // array of roles for actual user
-            $my_functions = explode(';', $_SESSION['fonction_id']);
-
-            $rows = DB::query(""SELECT id,title,creator_id FROM "".prefix_table(""roles_title""));
-            foreach ($rows as $record) {
-                if ($_SESSION['is_admin'] === 1 || ($_SESSION['user_manager'] === 1 && (in_array($record['id'], $my_functions) || $record['creator_id'] === $_SESSION['user_id']))) {
-                    $text .= '<input type=""checkbox"" id=""cb_change_function-'.$record['id'].'""';
-                    if (in_array($record['id'], $users_functions)) {
-                        $text .= ' checked';
-                    }
-                    $text .= '>&nbsp;'.$record['title'].'<br />';
-                }
-            }
-            // return data
-            $return_values = json_encode(array(""text"" => $text), JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
-            echo $return_values;
-            break;
-        /**
-         * Change user's functions
-         */
-        case ""change_user_functions"":
-            // Check KEY
-            if (filter_input(INPUT_POST, 'key', FILTER_SANITIZE_STRING) !== filter_var($_SESSION['key'], FILTER_SANITIZE_STRING)) {
-                echo prepareExchangedData(array(""error"" => ""not_allowed"", ""error_text"" => addslashes($LANG['error_not_allowed_to'])), ""encode"");
-                echo '[ { ""error"" : ""key_not_conform"" } ]';
-                break;
-            }
-            // save data
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'fonction_id' => filter_input(INPUT_POST, 'list', FILTER_SANITIZE_STRING)
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
-            );
-            // display information
-            $text = """";
-            // Check if POST is empty
-            if (empty(filter_input(INPUT_POST, 'list', FILTER_SANITIZE_STRING)) === false) {
-                $rows = DB::query(
-                    ""SELECT title FROM "".prefix_table(""roles_title"")."" WHERE id IN %ls"",
-                    explode("";"", filter_input(INPUT_POST, 'list', FILTER_SANITIZE_STRING))
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'personal_folder' => $post_value === ""1"" ? ""1"" : ""0""
+                        ),
+                    ""id = %i"",
+                    $post_id
                 );
-                foreach ($rows as $record) {
-                    $text .= '<i class=\'fa fa-angle-right\'></i>&nbsp;'.$record['title'].""<br />"";
-                }
+                echo prepareExchangedData(array(""error"" => """"), ""encode"");
             } else {
-                $text = '<span style=\""text-align:center\""><i class=\""fa fa-warning mi-red\"" ></i>&nbsp;</span>';
+                echo prepareExchangedData(array(""error"" => ""not_allowed""), ""encode"");
             }
-            // send back data
-            echo '[{""text"":""'.$text.'""}]';
-            break;
-
-        /**
-         * CHANGE AUTHORIZED GROUPS
-         */
-        case ""open_div_autgroups"":
-            $text = """";
-            // Refresh list of existing functions
-            $data_user = DB::queryfirstrow(
-                ""SELECT groupes_visibles FROM "".prefix_table(""users"").""
-                WHERE id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
-            );
-
-            $user = explode(';', $data_user['groupes_visibles']);
-
-            $tree_desc = $tree->getDescendants();
-            foreach ($tree_desc as $t) {
-                if (in_array($t->id, $_SESSION['groupes_visibles']) && !in_array($t->id, $_SESSION['personal_visible_groups'])) {
-                    $text .= '<input type=""checkbox"" id=""cb_change_autgroup-'.$t->id.'""';
-                    $ident = """";
-                    for ($y = 1; $y < $t->nlevel; $y++) {
-                        $ident .= ""&nbsp;&nbsp;"";
-                    }
-                    if (in_array($t->id, $user)) {
-                        $text .= ' checked';
-                    }
-                    $text .= '>&nbsp;'.$ident.$t->title.'<br />';
-                    $prev_level = $t->nlevel;
-                }
-            }
-            // return data
-            $return_values = json_encode(array(""text"" => $text), JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
-            echo $return_values;
-            break;
-
-        /**
-         * CHANGE ADMINISTRATED BY
-         */
-        case ""change_user_adminby"":
-            // Check KEY
-            if (filter_input(INPUT_POST, 'key', FILTER_SANITIZE_STRING) !== filter_var($_SESSION['key'], FILTER_SANITIZE_STRING)) {
-                echo '[ { ""error"" : ""key_not_conform"" } ]';
-                break;
-            }
-            // save data
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'isAdministratedByRole' => filter_input(INPUT_POST, 'isAdministratedByRole', FILTER_SANITIZE_STRING)
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'userId', FILTER_SANITIZE_NUMBER_INT)
-            );
-            echo '[{""done"":""""}]';
-            break;
-
-        /**
-         * Change authorized groups
-         */
-        case ""change_user_autgroups"":
-            // Check KEY
-            if (filter_input(INPUT_POST, 'key', FILTER_SANITIZE_STRING) !== filter_var($_SESSION['key'], FILTER_SANITIZE_STRING)) {
-                echo '[ { ""error"" : ""key_not_conform"" } ]';
-                break;
-            }
-            // save data
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'groupes_visibles' => filter_input(INPUT_POST, 'list', FILTER_SANITIZE_STRING)
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
-            );
-            // display information
-            $text = """";
-            $val = str_replace(';', ',', filter_input(INPUT_POST, 'list', FILTER_SANITIZE_STRING));
-            // Check if POST is empty
-            if (empty(filter_input(INPUT_POST, 'list', FILTER_SANITIZE_STRING)) === false) {
-                $rows = DB::query(
-                    ""SELECT title,nlevel FROM "".prefix_table(""nested_tree"")."" WHERE id IN %ls"",
-                    explode("";"", filter_input(INPUT_POST, 'list', FILTER_SANITIZE_STRING))
-                );
-                foreach ($rows as $record) {
-                    $text .= '<i class=\'fa fa-angle-right\'></i>&nbsp;'.$record['title'].""<br />"";
-                }
-            }
-            // send back data
-            echo '[{""text"":""'.$text.'""}]';
             break;
 
         /**
@@ -733,23 +568,39 @@
                 break;
             }
 
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'disabled' => 0,
-                    'no_bad_attempts' => 0
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
-            );
-            // update LOG
-            logEvents(
-                'user_mngt',
-                'at_user_unlocked',
-                $_SESSION['user_id'],
-                $_SESSION['login'],
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
+
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole, gestionnaire
+                FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
             );
+
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'disabled' => 0,
+                        'no_bad_attempts' => 0
+                        ),
+                    ""id = %i"",
+                    $post_id
+                );
+                // update LOG
+                logEvents(
+                    'user_mngt',
+                    'at_user_unlocked',
+                    $_SESSION['user_id'],
+                    $_SESSION['login'],
+                    $post_id
+                );
+            }
             break;
 
         /*
@@ -991,17 +842,34 @@
                 echo '[ { ""error"" : ""key_not_conform"" } ]';
                 break;
             }
-            // Do
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'timestamp' => """",
-                    'key_tempo' => """",
-                    'session_end' => """"
-                    ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'user_id', FILTER_SANITIZE_NUMBER_INT)
+
+            $post_user_id = filter_input(INPUT_POST, 'user_id', FILTER_SANITIZE_NUMBER_INT);
+
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole, gestionnaire
+                FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
             );
+
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                // Do
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'timestamp' => """",
+                        'key_tempo' => """",
+                        'session_end' => """"
+                        ),
+                    ""id = %i"",
+                    $post_user_id
+                );
+            }
             break;
 
         /**
@@ -1013,6 +881,7 @@
                 echo '[ { ""error"" : ""key_not_conform"" } ]';
                 break;
             }
+
             // Do
             $rows = DB::query(
                 ""SELECT id FROM "".prefix_table(""users"").""
@@ -1021,16 +890,30 @@
                 ""1""
             );
             foreach ($rows as $record) {
-                DB::update(
-                    prefix_table(""users""),
-                    array(
-                        'timestamp' => """",
-                        'key_tempo' => """",
-                        'session_end' => """"
-                        ),
-                    ""id = %i"",
-                    intval($record['id'])
+                // Get info about user to delete
+                $data_user = DB::queryfirstrow(
+                    ""SELECT admin, isAdministratedByRole, gestionnaire
+                    FROM "".prefix_table(""users"").""
+                    WHERE id = %i"",
+                    $record['id']
                 );
+
+                // Is this user allowed to do this?
+                if ($_SESSION['is_admin'] === ""1""
+                    || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                    || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+                    ) {
+                    DB::update(
+                        prefix_table(""users""),
+                        array(
+                            'timestamp' => """",
+                            'key_tempo' => """",
+                            'session_end' => """"
+                            ),
+                        ""id = %i"",
+                        intval($record['id'])
+                    );
+                }
             }
             break;
         /**
@@ -1043,175 +926,194 @@
                 break;
             }
 
-            $arrData = array();
-            $arrFunction = array();
-            $arrMngBy = array();
-            $arrFldForbidden = array();
-            $arrFldAllowed = array();
-
-            //Build tree
-            $tree = new SplClassLoader('Tree\NestedTree', $SETTINGS['cpassman_dir'].'/includes/libraries');
-            $tree->register();
-            $tree = new Tree\NestedTree\NestedTree(prefix_table(""nested_tree""), 'id', 'parent_id', 'title');
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
 
-            // get User info
-            $rowUser = DB::queryFirstRow(
-                ""SELECT login, name, lastname, email, disabled, fonction_id, groupes_interdits, groupes_visibles, isAdministratedByRole, gestionnaire, read_only, can_create_root_folder, personal_folder, can_manage_all_users, admin
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole, gestionnaire
                 FROM "".prefix_table(""users"").""
                 WHERE id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
+                $post_id
             );
 
-            // get FUNCTIONS
-            $functionsList = """";
-            $users_functions = explode(';', $rowUser['fonction_id']);
-            // array of roles for actual user
-            $my_functions = explode(';', $_SESSION['fonction_id']);
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                $arrData = array();
+                $arrFunction = array();
+                $arrMngBy = array();
+                $arrFldForbidden = array();
+                $arrFldAllowed = array();
+
+                //Build tree
+                $tree = new SplClassLoader('Tree\NestedTree', $SETTINGS['cpassman_dir'].'/includes/libraries');
+                $tree->register();
+                $tree = new Tree\NestedTree\NestedTree(prefix_table(""nested_tree""), 'id', 'parent_id', 'title');
+
+                // get User info
+                $rowUser = DB::queryFirstRow(
+                    ""SELECT login, name, lastname, email, disabled, fonction_id, groupes_interdits, groupes_visibles, isAdministratedByRole, gestionnaire, read_only, can_create_root_folder, personal_folder, can_manage_all_users, admin
+                    FROM "".prefix_table(""users"").""
+                    WHERE id = %i"",
+                    $post_id
+                );
 
-            $rows = DB::query(""SELECT id,title,creator_id FROM "".prefix_table(""roles_title""));
-            foreach ($rows as $record) {
-                if ($_SESSION['is_admin'] == 1 || ($_SESSION['user_manager'] == 1 && (in_array($record['id'], $my_functions) || $record['creator_id'] == $_SESSION['user_id']))) {
-                    if (in_array($record['id'], $users_functions)) {
-                        $tmp = ' selected=""selected""';
+                // get FUNCTIONS
+                $functionsList = """";
+                $users_functions = explode(';', $rowUser['fonction_id']);
+                // array of roles for actual user
+                $my_functions = explode(';', $_SESSION['fonction_id']);
 
-                        //
-                        array_push(
-                            $arrFunction,
-                            array(
-                                'title' => $record['title'],
-                                'id' => $record['id']
-                            )
-                        );
-                    } else {
-                        $tmp = """";
+                $rows = DB::query(""SELECT id,title,creator_id FROM "".prefix_table(""roles_title""));
+                foreach ($rows as $record) {
+                    if ($_SESSION['is_admin'] == 1 || ($_SESSION['user_manager'] == 1 && (in_array($record['id'], $my_functions) || $record['creator_id'] == $_SESSION['user_id']))) {
+                        if (in_array($record['id'], $users_functions)) {
+                            $tmp = ' selected=""selected""';
+
+                            //
+                            array_push(
+                                $arrFunction,
+                                array(
+                                    'title' => $record['title'],
+                                    'id' => $record['id']
+                                )
+                            );
+                        } else {
+                            $tmp = """";
+                        }
+                        $functionsList .= '<option value=""'.$record['id'].'"" class=""folder_rights_role""'.$tmp.'>'.$record['title'].'</option>';
                     }
-                    $functionsList .= '<option value=""'.$record['id'].'"" class=""folder_rights_role""'.$tmp.'>'.$record['title'].'</option>';
                 }
-            }
 
-            // get MANAGEDBY
-            $rolesList = array();
-            $rows = DB::query(""SELECT id,title FROM "".prefix_table(""roles_title"")."" ORDER BY title ASC"");
-            foreach ($rows as $reccord) {
-                $rolesList[$reccord['id']] = array('id' => $reccord['id'], 'title' => $reccord['title']);
-            }
-            $managedBy = '<option value=""0"">'.$LANG['administrators_only'].'</option>';
-            foreach ($rolesList as $fonction) {
-                if ($_SESSION['is_admin'] || in_array($fonction['id'], $_SESSION['user_roles'])) {
-                    if ($rowUser['isAdministratedByRole'] == $fonction['id']) {
-                        $tmp = ' selected=""selected""';
-
-                        //
-                        array_push(
-                            $arrMngBy,
-                            array(
-                                'title' => $fonction['title'],
-                                'id' => $fonction['id']
-                            )
-                        );
-                    } else {
-                        $tmp = """";
+                // get MANAGEDBY
+                $rolesList = array();
+                $rows = DB::query(""SELECT id,title FROM "".prefix_table(""roles_title"")."" ORDER BY title ASC"");
+                foreach ($rows as $reccord) {
+                    $rolesList[$reccord['id']] = array('id' => $reccord['id'], 'title' => $reccord['title']);
+                }
+                $managedBy = '<option value=""0"">'.$LANG['administrators_only'].'</option>';
+                foreach ($rolesList as $fonction) {
+                    if ($_SESSION['is_admin'] || in_array($fonction['id'], $_SESSION['user_roles'])) {
+                        if ($rowUser['isAdministratedByRole'] == $fonction['id']) {
+                            $tmp = ' selected=""selected""';
+
+                            //
+                            array_push(
+                                $arrMngBy,
+                                array(
+                                    'title' => $fonction['title'],
+                                    'id' => $fonction['id']
+                                )
+                            );
+                        } else {
+                            $tmp = """";
+                        }
+                        $managedBy .= '<option value=""'.$fonction['id'].'""'.$tmp.'>'.$LANG['managers_of'].' '.$fonction['title'].'</option>';
                     }
-                    $managedBy .= '<option value=""'.$fonction['id'].'""'.$tmp.'>'.$LANG['managers_of'].' '.$fonction['title'].'</option>';
                 }
-            }
 
-            if (count($arrMngBy) === 0) {
-                array_push(
-                    $arrMngBy,
-                    array(
-                        'title' => $LANG['administrators_only'],
-                        'id' => ""0""
-                    )
-                );
-            }
+                if (count($arrMngBy) === 0) {
+                    array_push(
+                        $arrMngBy,
+                        array(
+                            'title' => $LANG['administrators_only'],
+                            'id' => ""0""
+                        )
+                    );
+                }
 
-            // get FOLDERS FORBIDDEN
-            $forbiddenFolders = """";
-            $userForbidFolders = explode(';', $rowUser['groupes_interdits']);
-            $tree_desc = $tree->getDescendants();
-            foreach ($tree_desc as $t) {
-                if (in_array($t->id, $_SESSION['groupes_visibles']) && !in_array($t->id, $_SESSION['personal_visible_groups'])) {
-                    $tmp = """";
-                    $ident = """";
-                    for ($y = 1; $y < $t->nlevel; $y++) {
-                        $ident .= ""&nbsp;&nbsp;"";
-                    }
-                    if (in_array($t->id, $userForbidFolders)) {
-                        $tmp = ' selected=""selected""';
+                // get FOLDERS FORBIDDEN
+                $forbiddenFolders = """";
+                $userForbidFolders = explode(';', $rowUser['groupes_interdits']);
+                $tree_desc = $tree->getDescendants();
+                foreach ($tree_desc as $t) {
+                    if (in_array($t->id, $_SESSION['groupes_visibles']) && !in_array($t->id, $_SESSION['personal_visible_groups'])) {
+                        $tmp = """";
+                        $ident = """";
+                        for ($y = 1; $y < $t->nlevel; $y++) {
+                            $ident .= ""&nbsp;&nbsp;"";
+                        }
+                        if (in_array($t->id, $userForbidFolders)) {
+                            $tmp = ' selected=""selected""';
+
+                            //
+                            array_push(
+                                $arrFldForbidden,
+                                array(
+                                    'title' => htmlspecialchars($t->title, ENT_COMPAT, ""UTF-8""),
+                                    'id' => $t->id
+                                )
+                            );
+                        }
+                        $forbiddenFolders .= '<option value=""'.$t->id.'""'.$tmp.'>'.$ident.@htmlspecialchars($t->title, ENT_COMPAT, ""UTF-8"").'</option>';
 
-                        //
-                        array_push(
-                            $arrFldForbidden,
-                            array(
-                                'title' => htmlspecialchars($t->title, ENT_COMPAT, ""UTF-8""),
-                                'id' => $t->id
-                            )
-                        );
+                        $prev_level = $t->nlevel;
                     }
-                    $forbiddenFolders .= '<option value=""'.$t->id.'""'.$tmp.'>'.$ident.@htmlspecialchars($t->title, ENT_COMPAT, ""UTF-8"").'</option>';
-
-                    $prev_level = $t->nlevel;
                 }
-            }
 
-            // get FOLDERS ALLOWED
-            $allowedFolders = """";
-            $userAllowFolders = explode(';', $rowUser['groupes_visibles']);
-            $tree_desc = $tree->getDescendants();
-            foreach ($tree_desc as $t) {
-                if (in_array($t->id, $_SESSION['groupes_visibles']) && !in_array($t->id, $_SESSION['personal_visible_groups'])) {
-                    $tmp = """";
-                    $ident = """";
-                    for ($y = 1; $y < $t->nlevel; $y++) {
-                        $ident .= ""&nbsp;&nbsp;"";
-                    }
-                    if (in_array($t->id, $userAllowFolders)) {
-                        $tmp = ' selected=""selected""';
+                // get FOLDERS ALLOWED
+                $allowedFolders = """";
+                $userAllowFolders = explode(';', $rowUser['groupes_visibles']);
+                $tree_desc = $tree->getDescendants();
+                foreach ($tree_desc as $t) {
+                    if (in_array($t->id, $_SESSION['groupes_visibles']) && !in_array($t->id, $_SESSION['personal_visible_groups'])) {
+                        $tmp = """";
+                        $ident = """";
+                        for ($y = 1; $y < $t->nlevel; $y++) {
+                            $ident .= ""&nbsp;&nbsp;"";
+                        }
+                        if (in_array($t->id, $userAllowFolders)) {
+                            $tmp = ' selected=""selected""';
+
+                            //
+                            array_push(
+                                $arrFldAllowed,
+                                array(
+                                    'title' => htmlspecialchars($t->title, ENT_COMPAT, ""UTF-8""),
+                                    'id' => $t->id
+                                )
+                            );
+                        }
+                        $allowedFolders .= '<option value=""'.$t->id.'""'.$tmp.'>'.$ident.@htmlspecialchars($t->title, ENT_COMPAT, ""UTF-8"").'</option>';
 
-                        //
-                        array_push(
-                            $arrFldAllowed,
-                            array(
-                                'title' => htmlspecialchars($t->title, ENT_COMPAT, ""UTF-8""),
-                                'id' => $t->id
-                            )
-                        );
+                        $prev_level = $t->nlevel;
                     }
-                    $allowedFolders .= '<option value=""'.$t->id.'""'.$tmp.'>'.$ident.@htmlspecialchars($t->title, ENT_COMPAT, ""UTF-8"").'</option>';
+                }
 
-                    $prev_level = $t->nlevel;
+                // get USER STATUS
+                if ($rowUser['disabled'] == 1) {
+                    $arrData['info'] = $LANG['user_info_locked'].'<br /><input type=""checkbox"" value=""unlock"" name=""1"" class=""chk"">&nbsp;<label for=""1"">'.$LANG['user_info_unlock_question'].'</label><br /><input type=""checkbox""  value=""delete"" id=""account_delete"" class=""chk"" name=""2"" onclick=""confirmDeletion()"">&nbsp;<label for=""2"">'.$LANG['user_info_delete_question'].""</label>"";
+                } else {
+                    $arrData['info'] = $LANG['user_info_active'].'<br /><input type=""checkbox"" value=""lock"" class=""chk"">&nbsp;'.$LANG['user_info_lock_question'];
                 }
-            }
 
-            // get USER STATUS
-            if ($rowUser['disabled'] == 1) {
-                $arrData['info'] = $LANG['user_info_locked'].'<br /><input type=""checkbox"" value=""unlock"" name=""1"" class=""chk"">&nbsp;<label for=""1"">'.$LANG['user_info_unlock_question'].'</label><br /><input type=""checkbox""  value=""delete"" id=""account_delete"" class=""chk"" name=""2"" onclick=""confirmDeletion()"">&nbsp;<label for=""2"">'.$LANG['user_info_delete_question'].""</label>"";
+                $arrData['error'] = ""no"";
+                $arrData['log'] = $rowUser['login'];
+                $arrData['name'] = $rowUser['name'];
+                $arrData['lastname'] = $rowUser['lastname'];
+                $arrData['email'] = $rowUser['email'];
+                $arrData['function'] = $functionsList;
+                $arrData['managedby'] = $managedBy;
+                $arrData['foldersForbid'] = $forbiddenFolders;
+                $arrData['foldersAllow'] = $allowedFolders; //print_r($arrMngBy);
+                $arrData['share_function'] = json_encode($arrFunction, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
+                $arrData['share_managedby'] = json_encode($arrMngBy, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
+                $arrData['share_forbidden'] = json_encode($arrFldForbidden, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
+                $arrData['share_allowed'] = json_encode($arrFldAllowed, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
+                $arrData['gestionnaire'] = $rowUser['gestionnaire'];
+                $arrData['read_only'] = $rowUser['read_only'];
+                $arrData['can_create_root_folder'] = $rowUser['can_create_root_folder'];
+                $arrData['personal_folder'] = $rowUser['personal_folder'];
+                $arrData['can_manage_all_users'] = $rowUser['can_manage_all_users'];
+                $arrData['admin'] = $rowUser['admin'];
+
+                $return_values = json_encode($arrData, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
             } else {
-                $arrData['info'] = $LANG['user_info_active'].'<br /><input type=""checkbox"" value=""lock"" class=""chk"">&nbsp;'.$LANG['user_info_lock_question'];
+                $arrData['error'] = ""not_allowed"";
+                $return_values = json_encode($arrData, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
             }
-
-            $arrData['error'] = ""no"";
-            $arrData['log'] = $rowUser['login'];
-            $arrData['name'] = $rowUser['name'];
-            $arrData['lastname'] = $rowUser['lastname'];
-            $arrData['email'] = $rowUser['email'];
-            $arrData['function'] = $functionsList;
-            $arrData['managedby'] = $managedBy;
-            $arrData['foldersForbid'] = $forbiddenFolders;
-            $arrData['foldersAllow'] = $allowedFolders; //print_r($arrMngBy);
-            $arrData['share_function'] = json_encode($arrFunction, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
-            $arrData['share_managedby'] = json_encode($arrMngBy, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
-            $arrData['share_forbidden'] = json_encode($arrFldForbidden, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
-            $arrData['share_allowed'] = json_encode($arrFldAllowed, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
-            $arrData['gestionnaire'] = $rowUser['gestionnaire'];
-            $arrData['read_only'] = $rowUser['read_only'];
-            $arrData['can_create_root_folder'] = $rowUser['can_create_root_folder'];
-            $arrData['personal_folder'] = $rowUser['personal_folder'];
-            $arrData['can_manage_all_users'] = $rowUser['can_manage_all_users'];
-            $arrData['admin'] = $rowUser['admin'];
-
-            $return_values = json_encode($arrData, JSON_HEX_TAG | JSON_HEX_APOS | JSON_HEX_QUOT | JSON_HEX_AMP);
             echo $return_values;
 
             break;
@@ -1232,113 +1134,127 @@
                 ""decode""
             );
 
+            // Init post variables
+            $account_status_action = filter_var(htmlspecialchars_decode($dataReceived['action_on_user']), FILTER_SANITIZE_STRING);
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
+            $post_login = filter_var(htmlspecialchars_decode($dataReceived['login']), FILTER_SANITIZE_STRING);
+
             // Empty user
-            if (mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['login'])) == """") {
+            if (empty($post_login) === true) {
                 echo '[ { ""error"" : ""'.addslashes($LANG['error_empty_data']).'"" } ]';
                 break;
             }
 
-            $account_status_action = mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['action_on_user']));
-
-            // Prepare POST variables
-            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
+            );
 
-            // delete account
-            // delete user in database
-            if ($account_status_action === ""delete"") {
-                DB::delete(
-                    prefix_table(""users""),
-                    ""id = %i"",
-                    $post_id
-                );
-                // delete personal folder and subfolders
-                $data = DB::queryfirstrow(
-                    ""SELECT id FROM "".prefix_table(""nested_tree"").""
-                    WHERE title = %s AND personal_folder = %i"",
-                    $post_id,
-                    ""1""
-                );
-                // Get through each subfolder
-                if (!empty($data['id'])) {
-                    $folders = $tree->getDescendants($data['id'], true);
-                    foreach ($folders as $folder) {
-                        // delete folder
-                        DB::delete(prefix_table(""nested_tree""), ""id = %i AND personal_folder = %i"", $folder->id, ""1"");
-                        // delete items & logs
-                        $items = DB::query(
-                            ""SELECT id FROM "".prefix_table(""items"").""
-                            WHERE id_tree=%i AND perso = %i"",
-                            $folder->id,
-                            ""1""
-                        );
-                        foreach ($items as $item) {
-                            // Delete item
-                            DB::delete(prefix_table(""items""), ""id = %i"", $item['id']);
-                            // log
-                            DB::delete(prefix_table(""log_items""), ""id_item = %i"", $item['id']);
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                // delete account
+                // delete user in database
+                if ($account_status_action === ""delete"") {
+                    DB::delete(
+                        prefix_table(""users""),
+                        ""id = %i"",
+                        $post_id
+                    );
+                    // delete personal folder and subfolders
+                    $data = DB::queryfirstrow(
+                        ""SELECT id FROM "".prefix_table(""nested_tree"").""
+                        WHERE title = %s AND personal_folder = %i"",
+                        $post_id,
+                        ""1""
+                    );
+                    // Get through each subfolder
+                    if (!empty($data['id'])) {
+                        $folders = $tree->getDescendants($data['id'], true);
+                        foreach ($folders as $folder) {
+                            // delete folder
+                            DB::delete(prefix_table(""nested_tree""), ""id = %i AND personal_folder = %i"", $folder->id, ""1"");
+                            // delete items & logs
+                            $items = DB::query(
+                                ""SELECT id FROM "".prefix_table(""items"").""
+                                WHERE id_tree=%i AND perso = %i"",
+                                $folder->id,
+                                ""1""
+                            );
+                            foreach ($items as $item) {
+                                // Delete item
+                                DB::delete(prefix_table(""items""), ""id = %i"", $item['id']);
+                                // log
+                                DB::delete(prefix_table(""log_items""), ""id_item = %i"", $item['id']);
+                            }
                         }
+                        // rebuild tree
+                        $tree = new Tree\NestedTree\NestedTree($pre.'nested_tree', 'id', 'parent_id', 'title');
+                        $tree->rebuild();
                     }
-                    // rebuild tree
-                    $tree = new Tree\NestedTree\NestedTree($pre.'nested_tree', 'id', 'parent_id', 'title');
-                    $tree->rebuild();
-                }
-                // update LOG
-                logEvents('user_mngt', 'at_user_deleted', $_SESSION['user_id'], $_SESSION['login'], $post_id);
-            } else {
-                // Get old data about user
-                $oldData = DB::queryfirstrow(
-                    ""SELECT * FROM "".prefix_table(""users"").""
-                    WHERE id = %i"",
-                    $post_id
-                );
+                    // update LOG
+                    logEvents('user_mngt', 'at_user_deleted', $_SESSION['user_id'], $_SESSION['login'], $post_id);
+                } else {
+                    // Get old data about user
+                    $oldData = DB::queryfirstrow(
+                        ""SELECT * FROM "".prefix_table(""users"").""
+                        WHERE id = %i"",
+                        $post_id
+                    );
 
-                // manage account status
-                $accountDisabled = 0;
-                if ($account_status_action == ""unlock"") {
+                    // manage account status
                     $accountDisabled = 0;
-                    $logDisabledText = ""at_user_unlocked"";
-                } elseif ($account_status_action == ""lock"") {
-                    $accountDisabled = 1;
-                    $logDisabledText = ""at_user_locked"";
-                }
-
-                // update user
-                DB::update(
-                    prefix_table(""users""),
-                    array(
-                        'login' => mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['login'])),
-                        'name' => mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['name'])),
-                        'lastname' => mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['lastname'])),
-                        'email' => mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['email'])),
-                        'disabled' => $accountDisabled,
-                        'isAdministratedByRole' => $dataReceived['managedby'],
-                        'groupes_interdits' => empty($dataReceived['forbidFld']) ? '0' : rtrim($dataReceived['forbidFld'], "";""),
-                        'groupes_visibles' => empty($dataReceived['allowFld']) ? '0' : rtrim($dataReceived['allowFld'], "";""),
-                        'fonction_id' => empty($dataReceived['functions']) ? '0' : rtrim($dataReceived['functions'], "";""),
-                        ),
-                    ""id = %i"",
-                    $post_id
-                );
+                    if ($account_status_action == ""unlock"") {
+                        $accountDisabled = 0;
+                        $logDisabledText = ""at_user_unlocked"";
+                    } elseif ($account_status_action == ""lock"") {
+                        $accountDisabled = 1;
+                        $logDisabledText = ""at_user_locked"";
+                    }
 
-                // update SESSION
-                if ($_SESSION['user_id'] === $post_id) {
-                    $_SESSION['user_email'] = mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['email']));
-                    $_SESSION['name'] = mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['name']));
-                    $_SESSION['lastname'] = mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['lastname']));
-                }
+                    // update user
+                    DB::update(
+                        prefix_table(""users""),
+                        array(
+                            'login' => mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['login'])),
+                            'name' => mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['name'])),
+                            'lastname' => mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['lastname'])),
+                            'email' => mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['email'])),
+                            'disabled' => $accountDisabled,
+                            'isAdministratedByRole' => $dataReceived['managedby'],
+                            'groupes_interdits' => empty($dataReceived['forbidFld']) ? '0' : rtrim($dataReceived['forbidFld'], "";""),
+                            'groupes_visibles' => empty($dataReceived['allowFld']) ? '0' : rtrim($dataReceived['allowFld'], "";""),
+                            'fonction_id' => empty($dataReceived['functions']) ? '0' : rtrim($dataReceived['functions'], "";""),
+                            ),
+                        ""id = %i"",
+                        $post_id
+                    );
 
-                // update LOG
-                if ($oldData['email'] != mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['email']))) {
-                    logEvents('user_mngt', 'at_user_email_changed:'.$oldData['email'], intval($_SESSION['user_id']), $_SESSION['login'], $post_id);
-                }
+                    // update SESSION
+                    if ($_SESSION['user_id'] === $post_id) {
+                        $_SESSION['user_email'] = mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['email']));
+                        $_SESSION['name'] = mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['name']));
+                        $_SESSION['lastname'] = mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['lastname']));
+                    }
 
-                if ($oldData['disabled'] != $accountDisabled) {
                     // update LOG
-                    logEvents('user_mngt', $logDisabledText, $_SESSION['user_id'], $_SESSION['login'], $post_id);
+                    if ($oldData['email'] != mysqli_escape_string($link, htmlspecialchars_decode($dataReceived['email']))) {
+                        logEvents('user_mngt', 'at_user_email_changed:'.$oldData['email'], intval($_SESSION['user_id']), $_SESSION['login'], $post_id);
+                    }
+
+                    if ($oldData['disabled'] != $accountDisabled) {
+                        // update LOG
+                        logEvents('user_mngt', $logDisabledText, $_SESSION['user_id'], $_SESSION['login'], $post_id);
+                    }
                 }
+                echo '[ { ""error"" : ""no"" } ]';
+            } else {
+                echo '[ { ""error"" : ""'.addslashes($LANG['error_not_allowed_to']).'"" } ]';
             }
-
-            echo '[ { ""error"" : ""no"" } ]';
             break;
 
         /**
@@ -1351,16 +1267,31 @@
                 break;
             }
 
-            DB::update(
-                prefix_table(""users""),
-                array(
-                    'login' => filter_input(INPUT_POST, 'login', FILTER_SANITIZE_STRING),
-                    'name' => filter_input(INPUT_POST, 'name', FILTER_SANITIZE_STRING),
-                    'lastname' => filter_input(INPUT_POST, 'lastname', FILTER_SANITIZE_STRING)
-                ),
-                ""id = %i"",
-                filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT)
+            $post_id = filter_input(INPUT_POST, 'id', FILTER_SANITIZE_NUMBER_INT);
+
+            // Get info about user to delete
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_id
             );
+            
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                DB::update(
+                    prefix_table(""users""),
+                    array(
+                        'login' => filter_input(INPUT_POST, 'login', FILTER_SANITIZE_STRING),
+                        'name' => filter_input(INPUT_POST, 'name', FILTER_SANITIZE_STRING),
+                        'lastname' => filter_input(INPUT_POST, 'lastname', FILTER_SANITIZE_STRING)
+                    ),
+                    ""id = %i"",
+                    $post_id
+                );
+            }
             break;
 
         /**
@@ -1606,37 +1537,67 @@
                 break;
             }
 
+            $post_source_id = filter_input(INPUT_POST, 'source_id', FILTER_SANITIZE_NUMBER_INT);
+            $post_destination_ids = filter_input(INPUT_POST, 'destination_ids', FILTER_SANITIZE_STRING);
+            $post_user_otherrights = filter_input(INPUT_POST, 'user_otherrights', FILTER_SANITIZE_STRING);
+
             // Check send values
-            if (empty(filter_input(INPUT_POST, 'source_id', FILTER_SANITIZE_NUMBER_INT)) === true
-                || empty(filter_input(INPUT_POST, 'destination_ids', FILTER_SANITIZE_NUMBER_INT)) === true
+            if (empty($post_source_id) === true
+                || empty($post_destination_ids) === true
             ) {
                 // error
                 exit();
             }
 
-            // manage other rights
-            /* Possible values: gestionnaire;read_only;can_create_root_folder;personal_folder;can_manage_all_users;admin*/
-            $user_other_rights = explode(';', filter_input(INPUT_POST, 'user_otherrights', FILTER_SANITIZE_STRING));
+            // Get info about user
+            $data_user = DB::queryfirstrow(
+                ""SELECT admin, isAdministratedByRole FROM "".prefix_table(""users"").""
+                WHERE id = %i"",
+                $post_source_id
+            );
+            
+            // Is this user allowed to do this?
+            if ($_SESSION['is_admin'] === ""1""
+                || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+            ) {
+                // manage other rights
+                /* Possible values: gestionnaire;read_only;can_create_root_folder;personal_folder;can_manage_all_users;admin*/
+                $user_other_rights = explode(';', $post_user_otherrights);
+
+                foreach (explode(';', $post_destination_ids) as $dest_user_id) {
+                    // get info about the user to update
+                    $data_user = DB::queryfirstrow(
+                        ""SELECT admin, isAdministratedByRole FROM "".prefix_table(""users"").""
+                        WHERE id = %i"",
+                        $dest_user_id
+                    );
 
-            foreach (explode(';', filter_input(INPUT_POST, 'destination_ids', FILTER_SANITIZE_STRING)) as $dest_user_id) {
-                // update user
-                DB::update(
-                    prefix_table(""users""),
-                    array(
-                        'fonction_id' => filter_input(INPUT_POST, 'user_functions', FILTER_SANITIZE_NUMBER_INT),
-                        'isAdministratedByRole' => filter_input(INPUT_POST, 'user_managedby', FILTER_SANITIZE_STRING),
-                        'groupes_visibles' => filter_input(INPUT_POST, 'user_fldallowed', FILTER_SANITIZE_STRING),
-                        'groupes_interdits' => filter_input(INPUT_POST, 'user_fldforbid', FILTER_SANITIZE_STRING),
-                        'gestionnaire' => $user_other_rights[0],
-                        'read_only' => $user_other_rights[1],
-                        'can_create_root_folder' => $user_other_rights[2],
-                        'personal_folder' => $user_other_rights[3],
-                        'can_manage_all_users' => $user_other_rights[4],
-                        'admin' => $user_other_rights[5],
-                        ),
-                    ""id = %i"",
-                    $dest_user_id
-                );
+                    // Is this user allowed to do this?
+                    if ($_SESSION['is_admin'] === ""1""
+                        || (in_array($data_user['isAdministratedByRole'], $_SESSION['user_roles']))
+                        || ($_SESSION['user_can_manage_all_users'] === ""1"" && $data_user['admin'] !== ""1"")
+                    ) {
+                        // update user
+                        DB::update(
+                            prefix_table(""users""),
+                            array(
+                                'fonction_id' => filter_input(INPUT_POST, 'user_functions', FILTER_SANITIZE_NUMBER_INT),
+                                'isAdministratedByRole' => filter_input(INPUT_POST, 'user_managedby', FILTER_SANITIZE_STRING),
+                                'groupes_visibles' => filter_input(INPUT_POST, 'user_fldallowed', FILTER_SANITIZE_STRING),
+                                'groupes_interdits' => filter_input(INPUT_POST, 'user_fldforbid', FILTER_SANITIZE_STRING),
+                                'gestionnaire' => $user_other_rights[0],
+                                'read_only' => $user_other_rights[1],
+                                'can_create_root_folder' => $user_other_rights[2],
+                                'personal_folder' => $user_other_rights[3],
+                                'can_manage_all_users' => $user_other_rights[4],
+                                'admin' => $user_other_rights[5],
+                                ),
+                            ""id = %i"",
+                            $dest_user_id
+                        );
+                    }
+                }
             }
             break;
     }
diff --git a/users.load.php b/users.load.php
index a82420f05..61c7cb948 100644
--- a/users.load.php
+++ b/users.load.php
@@ -146,7 +146,7 @@ function(data) {
                     $(""#div_loading"").hide();
 
                     // manage not allowed
-                    if (data.error == ""not_allowed"") {
+                    if (data.error === ""not_allowed"") {
                        $(""#div_dialog_message_text"").html(data.error_text);
                        $(""#div_dialog_message"").dialog(""open"");
                        return false;
@@ -208,95 +208,6 @@ function(data) {
         }
     });
 
-    $(""#change_user_functions"").dialog({
-        bgiframe: true,
-        modal: true,
-        autoOpen: false,
-        width: 400,
-        height: 400,
-        title: ""<?php echo $LANG['change_user_functions_title']; ?>"",
-        buttons: {
-            ""<?php echo $LANG['save_button']; ?>"": function() {
-                Change_user_rights(document.getElementById(""selected_user"").value,""functions"");
-                $(this).dialog(""close"");
-            },
-            ""<?php echo $LANG['cancel_button']; ?>"": function() {
-                $(this).dialog(""close"");
-            }
-        }
-    });
-
-    $(""#change_user_autgroups"").dialog({
-        bgiframe: true,
-        modal: true,
-        autoOpen: false,
-        width: 400,
-        height: 400,
-        title: ""<?php echo $LANG['change_user_autgroups_title']; ?>"",
-        buttons: {
-            ""<?php echo $LANG['save_button']; ?>"": function() {
-                Change_user_rights(document.getElementById(""selected_user"").value,""autgroups"");
-                $(this).dialog(""close"");
-            },
-            ""<?php echo $LANG['cancel_button']; ?>"": function() {
-                $(this).dialog(""close"");
-            }
-        }
-    });
-
-    $(""#change_user_forgroups"").dialog({
-        bgiframe: true,
-        modal: true,
-        autoOpen: false,
-        width: 400,
-        height: 400,
-        title: ""<?php echo $LANG['change_user_forgroups_title']; ?>"",
-        buttons: {
-            ""<?php echo $LANG['save_button']; ?>"": function() {
-                Change_user_rights(document.getElementById(""selected_user"").value,""forgroups"");
-                $(this).dialog(""close"");
-            },
-            ""<?php echo $LANG['cancel_button']; ?>"": function() {
-                $(this).dialog(""close"");
-            }
-        }
-    });;
-
-    $(""#change_user_adminby"").dialog({
-        bgiframe: true,
-        modal: true,
-        autoOpen: false,
-        width: 400,
-        height: 200,
-        title: ""<?php echo $LANG['is_administrated_by_role']; ?>"",
-        buttons: {
-            ""<?php echo $LANG['save_button']; ?>"": function() {
-                $.post(
-                    ""sources/users.queries.php"",
-                    {
-                        type    :""change_user_adminby"",
-                        userId : $(""#selected_user"").val(),
-                        isAdministratedByRole : $(""#user_admin_by"").val(),
-                        key    : ""<?php echo $_SESSION['key']; ?>""
-                    },
-                    function(data) {
-                        if ($(""#user_admin_by"").val() == ""0"") {
-                            $(""#list_adminby_""+$(""#selected_user"").val()).
-                            html(""<?php echo $LANG['admin_small']; ?>"");
-                        } else {
-                            $(""#list_adminby_""+$(""#selected_user"").val()).
-                            html($(""#user_admin_by option:selected"").text().match(/""([^""]+)""/)[1]);
-                        }
-                        $(""#change_user_adminby"").dialog(""close"");
-                    }
-               )
-            },
-            ""<?php echo $LANG['cancel_button']; ?>"": function() {
-                $(this).dialog(""close"");
-            }
-        }
-    });
-
     $(""#add_new_user"").dialog({
         bgiframe: true,
         modal: true,
@@ -349,7 +260,7 @@ function(data) {
                         },
                         function(data) {
                             $(""#add_new_user_info"").hide().html("""");
-                            if (data[0].error == ""no"") {
+                            if (data[0].error === ""no"") {
                                 // clear form fields
                                 $(""#new_name, #new_lastname, #new_login, #new_pwd, #new_is_admin_by, #new_email, #new_domain"").val("""");
                                 $(""#new_admin, #new_manager, #new_read_only, #new_personal_folder"").prop(""checked"", false);
@@ -384,13 +295,17 @@ function(data) {
                 $.post(
                     ""sources/users.queries.php"",
                     {
-                        type    : ""delete_user"",
-                        id        : $(""#delete_user_id"").val(),
-                        action    : $(""#delete_user_action"").val(),
-                        key        : ""<?php echo $_SESSION['key']; ?>""
+                        type   : ""delete_user"",
+                        id     : $(""#delete_user_id"").val(),
+                        action : $(""#delete_user_action"").val(),
+                        key    : ""<?php echo $_SESSION['key']; ?>""
                     },
                     function(data) {
-                        window.location.href = ""index.php?page=manage_users"";
+                        if (data[0].error !== ""no"") {
+                            $(""#user_action_html"").html(data[0].error);
+                        } else {
+                            window.location.href = ""index.php?page=manage_users"";
+                        }
                     },
                     ""json""
                );
@@ -631,15 +546,16 @@ function(data) {
         open:  function() {
             $(""#user_edit_functions_list, #user_edit_managedby, #user_edit_auth, #user_edit_forbid"").empty();
             $("".ui-dialog-buttonpane button:contains('<?php echo $LANG['save_button']; ?>')"").button(""disable"");
+            $(""#user_edit_error"").html("""").hide();
             $.post(
                 ""sources/users.queries.php"",
                 {
                     type : ""get_user_info"",
-                    id   : $('#user_edit_id').val(),
+                    id   : 9,
                     key  : ""<?php echo $_SESSION['key']; ?>""
                 },
                 function(data) {
-                    if (data.error == ""no"") {
+                    if (data.error === ""no"") {
                         $("".ui-dialog-buttonpane button:contains('<?php echo $LANG['save_button']; ?>')"").button(""enable"");
 
                         $(""#user_edit_login"").val(data.log);
@@ -668,7 +584,7 @@ function(data) {
                         $(""#user_edit_wait"").hide();
                         $(""#user_edit_div"").show();
                     } else {
-                        $(""#user_edit_error"").html(""<?php echo $LANG['error_unknown']; ?>"")
+                        $(""#user_edit_error"").html(""<?php echo $LANG['error_unknown']; ?>"").show();
                         $(""#user_edit_wait"").hide();
                         $(""#user_edit_div"").show();
                     }
@@ -724,12 +640,15 @@ functions += $(this).val() + "";"";
                         key     : ""<?php echo $_SESSION['key']; ?>""
                     },
                     function(data) {
-                        if (data[0].error == ""no"") {
-
+                        if (data[0].error !==""no"") {
+                            $(""#user_edit_error"").html(data[0].error).show(1).delay(2000).fadeOut(1000);
+                            $(""#user_edit_wait"").hide();
+                            $("".chk"").attr(""checked"", false);
+                        } else {
+                            // refresh table content
+                            tableUsers.api().ajax.reload();
+                            $(""#user_management_dialog"").dialog(""close"");
                         }
-                        // refresh table content
-                        tableUsers.api().ajax.reload();
-                        $(""#user_management_dialog"").dialog(""close"");
                     },
                     ""json""
                 );
@@ -1001,44 +920,6 @@ function ChangeUSerAdminBy(id)
     $(""#change_user_adminby"").dialog(""open"");
 }
 
-function Change_user_rights(id,type)
-{
-    var list = """";
-    if (type == ""functions"") var form = document.forms.tmp_functions;
-    if (type == ""autgroups"") var form = document.forms.tmp_autgroups;
-    if (type == ""forgroups"") var form = document.forms.tmp_forgroups;
-
-    $(""#div_loading"").show();
-
-    for (i=0 ; i<= form.length-1 ; i++) {
-        if (form[i].type == ""checkbox"" && form[i].checked) {
-            function_id = form[i].id.split(""-"")
-            if (list == """") list = function_id[1];
-            else list = list + "";"" + function_id[1];
-        }
-    }
-
-    $.post(""sources/users.queries.php"",
-        {
-            type    : ""change_user_""+type,
-            id      : id,
-            list    : list,
-            key     : ""<?php echo $_SESSION['key']; ?>""
-        },
-        function(data) {
-            if (type == ""functions"") {
-                $(""#list_function_user_""+id).html(data[0].text);
-            } else if (type == ""autgroups"") {
-                $(""#list_autgroups_user_""+id).html(data[0].text);
-            } else if (type == ""forgroups"") {
-                $(""#list_forgroups_user_""+id).html(data[0].text);
-            }
-            $(""#div_loading"").hide();
-        },
-        ""json""
-   );
-}
-
 function unlock_user(id)
 {
     $.post(""sources/users.queries.php"","
CVE-2017-6818,"From 9092fd01e1f452f37c313d38b18f9fe6907541f9 Mon Sep 17 00:00:00 2001
From: John Blackbourn <johnbillion@git.wordpress.org>
Date: Mon, 6 Mar 2017 13:14:41 +0000
Subject: [PATCH] Taxonomy: Correct the formatting of HTML entities when
 generating the screen reader text for tag removal.

Props adamsilverstein

Built from https://develop.svn.wordpress.org/trunk@40181


git-svn-id: http://core.svn.wordpress.org/trunk@40120 1a063a9b-81f0-0310-95a4-ce76da25c4cd
---
 wp-admin/js/tags-box.js     | 2 +-
 wp-admin/js/tags-box.min.js | 2 +-
 wp-includes/version.php     | 2 +-
 3 files changed, 3 insertions(+), 3 deletions(-)

diff --git a/wp-admin/js/tags-box.js b/wp-admin/js/tags-box.js
index 7535fbffd046..3867c7d6f0f8 100644
--- a/wp-admin/js/tags-box.js
+++ b/wp-admin/js/tags-box.js
@@ -92,7 +92,7 @@ var tagBox, array_unique_noempty;
 					 */
 					xbutton = $( '<button type=""button"" id=""' + id + '-check-num-' + key + '"" class=""ntdelbutton"">' +
 						'<span class=""remove-tag-icon"" aria-hidden=""true""></span>' +
-						'<span class=""screen-reader-text"">' + window.tagsSuggestL10n.removeTerm + ' ' + val + '</span>' +
+						'<span class=""screen-reader-text"">' + window.tagsSuggestL10n.removeTerm + ' ' + span.html() + '</span>' +
 						'</button>' );
 
 					xbutton.on( 'click keypress', function( e ) {
diff --git a/wp-admin/js/tags-box.min.js b/wp-admin/js/tags-box.min.js
index f66ec0264a30..ea9b6ea42fe9 100644
--- a/wp-admin/js/tags-box.min.js
+++ b/wp-admin/js/tags-box.min.js
@@ -1 +1 @@
-var tagBox,array_unique_noempty;!function(a){var b=window.tagsSuggestL10n&&window.tagsSuggestL10n.tagDelimiter||"","";array_unique_noempty=function(b){var c=[];return a.each(b,function(b,d){d=a.trim(d),d&&a.inArray(d,c)===-1&&c.push(d)}),c},tagBox={clean:function(a){return"",""!==b&&(a=a.replace(new RegExp(b,""g""),"","")),a=a.replace(/\s*,\s*/g,"","").replace(/,+/g,"","").replace(/[,\s]+$/,"""").replace(/^[,\s]+/,""""),"",""!==b&&(a=a.replace(/,/g,b)),a},parseTags:function(c){var d=c.id,e=d.split(""-check-num-"")[1],f=a(c).closest("".tagsdiv""),g=f.find("".the-tags""),h=g.val().split(b),i=[];return delete h[e],a.each(h,function(b,c){c=a.trim(c),c&&i.push(c)}),g.val(this.clean(i.join(b))),this.quickClicks(f),!1},quickClicks:function(c){var d,e,f=a("".the-tags"",c),g=a("".tagchecklist"",c),h=a(c).attr(""id"");f.length&&(e=f.prop(""disabled""),d=f.val().split(b),g.empty(),a.each(d,function(b,c){var d,f;c=a.trim(c),c&&(d=a(""<span />"").text(c),e||(f=a('<button type=""button"" id=""'+h+""-check-num-""+b+'"" class=""ntdelbutton""><span class=""remove-tag-icon"" aria-hidden=""true""></span><span class=""screen-reader-text"">'+window.tagsSuggestL10n.removeTerm+"" ""+c+""</span></button>""),f.on(""click keypress"",function(b){""click""!==b.type&&13!==b.keyCode&&32!==b.keyCode||(13!==b.keyCode&&32!==b.keyCode||a(this).closest("".tagsdiv"").find(""input.newtag"").focus(),tagBox.userAction=""remove"",tagBox.parseTags(this))}),d.prepend(""&nbsp;"").prepend(f)),g.append(d))}),tagBox.screenReadersMessage())},flushTags:function(c,d,e){var f,g,h,i=a("".the-tags"",c),j=a(""input.newtag"",c);return d=d||!1,h=d?a(d).text():j.val(),""undefined""!=typeof h&&""""!==h&&(f=i.val(),g=f?f+b+h:h,g=this.clean(g),g=array_unique_noempty(g.split(b)).join(b),i.val(g),this.quickClicks(c),d||j.val(""""),""undefined""==typeof e&&j.focus(),!1)},get:function(b){var c=b.substr(b.indexOf(""-"")+1);a.post(ajaxurl,{action:""get-tagcloud"",tax:c},function(d,e){0!==d&&""success""==e&&(d=a('<p id=""tagcloud-'+c+'"" class=""the-tagcloud"">'+d+""</p>""),a(""a"",d).click(function(){return tagBox.userAction=""add"",tagBox.flushTags(a(""#""+c),this),!1}),a(""#""+b).after(d))})},userAction:"""",screenReadersMessage:function(){var a;switch(this.userAction){case""remove"":a=window.tagsSuggestL10n.termRemoved;break;case""add"":a=window.tagsSuggestL10n.termAdded;break;default:return}window.wp.a11y.speak(a,""assertive"")},init:function(){var b=a(""div.ajaxtag"");a("".tagsdiv"").each(function(){tagBox.quickClicks(this)}),a("".tagadd"",b).click(function(){tagBox.userAction=""add"",tagBox.flushTags(a(this).closest("".tagsdiv""))}),a(""input.newtag"",b).keyup(function(b){13==b.which&&(tagBox.userAction=""add"",tagBox.flushTags(a(this).closest("".tagsdiv"")),b.preventDefault(),b.stopPropagation())}).keypress(function(a){13==a.which&&(a.preventDefault(),a.stopPropagation())}).each(function(b,c){a(c).wpTagsSuggest()}),a(""#post"").submit(function(){a(""div.tagsdiv"").each(function(){tagBox.flushTags(this,!1,1)})}),a("".tagcloud-link"").click(function(){tagBox.get(a(this).attr(""id"")),a(this).attr(""aria-expanded"",""true"").unbind().click(function(){a(this).attr(""aria-expanded"",""false""===a(this).attr(""aria-expanded"")?""true"":""false"").siblings("".the-tagcloud"").toggle()})})}}}(jQuery);
\ No newline at end of file
+var tagBox,array_unique_noempty;!function(a){var b=window.tagsSuggestL10n&&window.tagsSuggestL10n.tagDelimiter||"","";array_unique_noempty=function(b){var c=[];return a.each(b,function(b,d){d=a.trim(d),d&&a.inArray(d,c)===-1&&c.push(d)}),c},tagBox={clean:function(a){return"",""!==b&&(a=a.replace(new RegExp(b,""g""),"","")),a=a.replace(/\s*,\s*/g,"","").replace(/,+/g,"","").replace(/[,\s]+$/,"""").replace(/^[,\s]+/,""""),"",""!==b&&(a=a.replace(/,/g,b)),a},parseTags:function(c){var d=c.id,e=d.split(""-check-num-"")[1],f=a(c).closest("".tagsdiv""),g=f.find("".the-tags""),h=g.val().split(b),i=[];return delete h[e],a.each(h,function(b,c){c=a.trim(c),c&&i.push(c)}),g.val(this.clean(i.join(b))),this.quickClicks(f),!1},quickClicks:function(c){var d,e,f=a("".the-tags"",c),g=a("".tagchecklist"",c),h=a(c).attr(""id"");f.length&&(e=f.prop(""disabled""),d=f.val().split(b),g.empty(),a.each(d,function(b,c){var d,f;c=a.trim(c),c&&(d=a(""<span />"").text(c),e||(f=a('<button type=""button"" id=""'+h+""-check-num-""+b+'"" class=""ntdelbutton""><span class=""remove-tag-icon"" aria-hidden=""true""></span><span class=""screen-reader-text"">'+window.tagsSuggestL10n.removeTerm+"" ""+d.html()+""</span></button>""),f.on(""click keypress"",function(b){""click""!==b.type&&13!==b.keyCode&&32!==b.keyCode||(13!==b.keyCode&&32!==b.keyCode||a(this).closest("".tagsdiv"").find(""input.newtag"").focus(),tagBox.userAction=""remove"",tagBox.parseTags(this))}),d.prepend(""&nbsp;"").prepend(f)),g.append(d))}),tagBox.screenReadersMessage())},flushTags:function(c,d,e){var f,g,h,i=a("".the-tags"",c),j=a(""input.newtag"",c);return d=d||!1,h=d?a(d).text():j.val(),""undefined""!=typeof h&&""""!==h&&(f=i.val(),g=f?f+b+h:h,g=this.clean(g),g=array_unique_noempty(g.split(b)).join(b),i.val(g),this.quickClicks(c),d||j.val(""""),""undefined""==typeof e&&j.focus(),!1)},get:function(b){var c=b.substr(b.indexOf(""-"")+1);a.post(ajaxurl,{action:""get-tagcloud"",tax:c},function(d,e){0!==d&&""success""==e&&(d=a('<p id=""tagcloud-'+c+'"" class=""the-tagcloud"">'+d+""</p>""),a(""a"",d).click(function(){return tagBox.userAction=""add"",tagBox.flushTags(a(""#""+c),this),!1}),a(""#""+b).after(d))})},userAction:"""",screenReadersMessage:function(){var a;switch(this.userAction){case""remove"":a=window.tagsSuggestL10n.termRemoved;break;case""add"":a=window.tagsSuggestL10n.termAdded;break;default:return}window.wp.a11y.speak(a,""assertive"")},init:function(){var b=a(""div.ajaxtag"");a("".tagsdiv"").each(function(){tagBox.quickClicks(this)}),a("".tagadd"",b).click(function(){tagBox.userAction=""add"",tagBox.flushTags(a(this).closest("".tagsdiv""))}),a(""input.newtag"",b).keyup(function(b){13==b.which&&(tagBox.userAction=""add"",tagBox.flushTags(a(this).closest("".tagsdiv"")),b.preventDefault(),b.stopPropagation())}).keypress(function(a){13==a.which&&(a.preventDefault(),a.stopPropagation())}).each(function(b,c){a(c).wpTagsSuggest()}),a(""#post"").submit(function(){a(""div.tagsdiv"").each(function(){tagBox.flushTags(this,!1,1)})}),a("".tagcloud-link"").click(function(){tagBox.get(a(this).attr(""id"")),a(this).attr(""aria-expanded"",""true"").unbind().click(function(){a(this).attr(""aria-expanded"",""false""===a(this).attr(""aria-expanded"")?""true"":""false"").siblings("".the-tagcloud"").toggle()})})}}}(jQuery);
\ No newline at end of file
diff --git a/wp-includes/version.php b/wp-includes/version.php
index 9f9a17f942bb..56086c2a266e 100644
--- a/wp-includes/version.php
+++ b/wp-includes/version.php
@@ -4,7 +4,7 @@
  *
  * @global string $wp_version
  */
-$wp_version = '4.8-alpha-40169';
+$wp_version = '4.8-alpha-40181';
 
 /**
  * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema."
CVE-2017-13033,"From ae83295915d08a854de27a88efac5dd7353e6d3f Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Thu, 23 Mar 2017 13:30:56 -0700
Subject: [PATCH] CVE-2017-13033/VTP: Add more bound and length checks.

This fixes a buffer over-read discovered by Bhargava Shastry.

Add a test using the capture file supplied by the reporter(s), modified
so the capture file won't be rejected as an invalid capture.

Update another VTP test's .out file for this change.

Don't treate a TLV type or length of 0 as invalid; a type of 0 should
just be reported as illegal if that type isn't used, and the length is
the length of the *value*, not the length of the entire TLV, so if it's
zero there won't be an infinite loop.  (It's still not *legal*, as the
values of all the TLVs we handle are 1 16-bit word long; we added a
check for that.)

Update some comments while we're at it, to give a new URL for one Cisco
page and a non-Cisco URL for another former Cisco page (Cisco's UniverCD
pages don't seem to be available any more, and Cisco's robots.txt file
didn't allow the Wayback Machine to archive it).
---
 print-vtp.c           | 142 ++++++++++++++++++++++++------------------
 tests/TESTLIST        |   1 +
 tests/vtp_asan-2.out  |   3 +-
 tests/vtp_asan-3.out  |   2 +
 tests/vtp_asan-3.pcap | Bin 0 -> 185 bytes
 5 files changed, 84 insertions(+), 64 deletions(-)
 create mode 100644 tests/vtp_asan-3.out
 create mode 100644 tests/vtp_asan-3.pcap

diff --git a/print-vtp.c b/print-vtp.c
index 18c1356ef..d153cc19a 100644
--- a/print-vtp.c
+++ b/print-vtp.c
@@ -13,9 +13,8 @@
  * FOR A PARTICULAR PURPOSE.
  *
  * Reference documentation:
- *  http://www.cisco.com/en/US/tech/tk389/tk689/technologies_tech_note09186a0080094c52.shtml
- *  http://www.cisco.com/warp/public/473/21.html
- *  http://www.cisco.com/univercd/cc/td/doc/product/lan/trsrb/frames.htm
+ *  http://www.cisco.com/c/en/us/support/docs/lan-switching/vtp/10558-21.html
+ *  http://docstore.mik.ua/univercd/cc/td/doc/product/lan/trsrb/frames.htm
  *
  * Original code ode by Carles Kishimoto <carles.kishimoto@gmail.com>
  */
@@ -36,7 +35,7 @@
 #define	VTP_DOMAIN_NAME_LEN		32
 #define	VTP_MD5_DIGEST_LEN		16
 #define VTP_UPDATE_TIMESTAMP_LEN	12
-#define VTP_VLAN_INFO_OFFSET		12
+#define VTP_VLAN_INFO_FIXED_PART_LEN	12	/* length of VLAN info before VLAN name */
 
 #define VTP_SUMMARY_ADV			0x01
 #define VTP_SUBSET_ADV			0x02
@@ -252,6 +251,8 @@ vtp_print (netdissect_options *ndo,
 	    ND_TCHECK2(*tptr, len);
 
 	    vtp_vlan = (const struct vtp_vlan_*)tptr;
+	    if (len < VTP_VLAN_INFO_FIXED_PART_LEN)
+		goto trunc;
 	    ND_TCHECK(*vtp_vlan);
 	    ND_PRINT((ndo, ""\n\tVLAN info status %s, type %s, VLAN-id %u, MTU %u, SAID 0x%08x, Name "",
 		   tok2str(vtp_vlan_status,""Unknown"",vtp_vlan->status),
@@ -259,22 +260,33 @@ vtp_print (netdissect_options *ndo,
 		   EXTRACT_16BITS(&vtp_vlan->vlanid),
 		   EXTRACT_16BITS(&vtp_vlan->mtu),
 		   EXTRACT_32BITS(&vtp_vlan->index)));
-	    fn_printzp(ndo, tptr + VTP_VLAN_INFO_OFFSET, vtp_vlan->name_len, NULL);
-
-            /*
-             * Vlan names are aligned to 32-bit boundaries.
-             */
-            len  -= VTP_VLAN_INFO_OFFSET + 4*((vtp_vlan->name_len + 3)/4);
-            tptr += VTP_VLAN_INFO_OFFSET + 4*((vtp_vlan->name_len + 3)/4);
+	    len  -= VTP_VLAN_INFO_FIXED_PART_LEN;
+	    tptr += VTP_VLAN_INFO_FIXED_PART_LEN;
+	    if (len < 4*((vtp_vlan->name_len + 3)/4))
+		goto trunc;
+	    ND_TCHECK2(*tptr, vtp_vlan->name_len);
+	    fn_printzp(ndo, tptr, vtp_vlan->name_len, NULL);
+
+	    /*
+	     * Vlan names are aligned to 32-bit boundaries.
+	     */
+	    len  -= 4*((vtp_vlan->name_len + 3)/4);
+	    tptr += 4*((vtp_vlan->name_len + 3)/4);
 
             /* TLV information follows */
 
             while (len > 0) {
 
                 /*
-                 * Cisco specs says 2 bytes for type + 2 bytes for length, take only 1
-                 * See: http://www.cisco.com/univercd/cc/td/doc/product/lan/trsrb/frames.htm
+                 * Cisco specs say 2 bytes for type + 2 bytes for length;
+                 * see http://docstore.mik.ua/univercd/cc/td/doc/product/lan/trsrb/frames.htm
+                 * However, actual packets on the wire appear to use 1
+                 * byte for the type and 1 byte for the length, so that's
+                 * what we do.
                  */
+                if (len < 2)
+                    goto trunc;
+                ND_TCHECK2(*tptr, 2);
                 type = *tptr;
                 tlv_len = *(tptr+1);
 
@@ -282,59 +294,65 @@ vtp_print (netdissect_options *ndo,
                        tok2str(vtp_vlan_tlv_values, ""Unknown"", type),
                        type));
 
-                /*
-                 * infinite loop check
-                 */
-                if (type == 0 || tlv_len == 0) {
+                if (len < tlv_len * 2 + 2) {
+                    ND_PRINT((ndo, "" (TLV goes past the end of the packet)""));
                     return;
                 }
-
                 ND_TCHECK2(*tptr, tlv_len * 2 +2);
 
-                tlv_value = EXTRACT_16BITS(tptr+2);
-
-                switch (type) {
-                case VTP_VLAN_STE_HOP_COUNT:
-                    ND_PRINT((ndo, "", %u"", tlv_value));
-                    break;
-
-                case VTP_VLAN_PRUNING:
-                    ND_PRINT((ndo, "", %s (%u)"",
-                           tlv_value == 1 ? ""Enabled"" : ""Disabled"",
-                           tlv_value));
-                    break;
-
-                case VTP_VLAN_STP_TYPE:
-                    ND_PRINT((ndo, "", %s (%u)"",
-                           tok2str(vtp_stp_type_values, ""Unknown"", tlv_value),
-                           tlv_value));
-                    break;
-
-                case VTP_VLAN_BRIDGE_TYPE:
-                    ND_PRINT((ndo, "", %s (%u)"",
-                           tlv_value == 1 ? ""SRB"" : ""SRT"",
-                           tlv_value));
-                    break;
-
-                case VTP_VLAN_BACKUP_CRF_MODE:
-                    ND_PRINT((ndo, "", %s (%u)"",
-                           tlv_value == 1 ? ""Backup"" : ""Not backup"",
-                           tlv_value));
-                    break;
-
-                    /*
-                     * FIXME those are the defined TLVs that lack a decoder
-                     * you are welcome to contribute code ;-)
-                     */
-
-                case VTP_VLAN_SOURCE_ROUTING_RING_NUMBER:
-                case VTP_VLAN_SOURCE_ROUTING_BRIDGE_NUMBER:
-                case VTP_VLAN_PARENT_VLAN:
-                case VTP_VLAN_TRANS_BRIDGED_VLAN:
-                case VTP_VLAN_ARP_HOP_COUNT:
-                default:
-		    print_unknown_data(ndo, tptr, ""\n\t\t  "", 2 + tlv_len*2);
-                    break;
+                /*
+                 * We assume the value is a 2-byte integer; the length is
+                 * in units of 16-bit words.
+                 */
+                if (tlv_len != 1) {
+                    ND_PRINT((ndo, "" (invalid TLV length %u != 1)"", tlv_len));
+                    return;
+                } else {
+                    tlv_value = EXTRACT_16BITS(tptr+2);
+
+                    switch (type) {
+                    case VTP_VLAN_STE_HOP_COUNT:
+                        ND_PRINT((ndo, "", %u"", tlv_value));
+                        break;
+
+                    case VTP_VLAN_PRUNING:
+                        ND_PRINT((ndo, "", %s (%u)"",
+                               tlv_value == 1 ? ""Enabled"" : ""Disabled"",
+                               tlv_value));
+                        break;
+
+                    case VTP_VLAN_STP_TYPE:
+                        ND_PRINT((ndo, "", %s (%u)"",
+                               tok2str(vtp_stp_type_values, ""Unknown"", tlv_value),
+                               tlv_value));
+                        break;
+
+                    case VTP_VLAN_BRIDGE_TYPE:
+                        ND_PRINT((ndo, "", %s (%u)"",
+                               tlv_value == 1 ? ""SRB"" : ""SRT"",
+                               tlv_value));
+                        break;
+
+                    case VTP_VLAN_BACKUP_CRF_MODE:
+                        ND_PRINT((ndo, "", %s (%u)"",
+                               tlv_value == 1 ? ""Backup"" : ""Not backup"",
+                               tlv_value));
+                        break;
+
+                        /*
+                         * FIXME those are the defined TLVs that lack a decoder
+                         * you are welcome to contribute code ;-)
+                         */
+
+                    case VTP_VLAN_SOURCE_ROUTING_RING_NUMBER:
+                    case VTP_VLAN_SOURCE_ROUTING_BRIDGE_NUMBER:
+                    case VTP_VLAN_PARENT_VLAN:
+                    case VTP_VLAN_TRANS_BRIDGED_VLAN:
+                    case VTP_VLAN_ARP_HOP_COUNT:
+                    default:
+                        print_unknown_data(ndo, tptr, ""\n\t\t  "", 2 + tlv_len*2);
+                        break;
+                    }
                 }
                 len -= 2 + tlv_len*2;
                 tptr += 2 + tlv_len*2;
diff --git a/tests/TESTLIST b/tests/TESTLIST
index a2cb1f81f..f1fd6ae12 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -524,6 +524,7 @@ pgm_opts_asan_2		pgm_opts_asan_2.pcap		pgm_opts_asan_2.out	-v
 pgm_opts_asan_3		pgm_opts_asan_3.pcap		pgm_opts_asan_3.out	-v
 vtp_asan		vtp_asan.pcap			vtp_asan.out	-v
 vtp_asan-2		vtp_asan-2.pcap			vtp_asan-2.out	-v
+vtp_asan-3		vtp_asan-3.pcap			vtp_asan-3.out	-v
 icmp6_mobileprefix_asan	icmp6_mobileprefix_asan.pcap	icmp6_mobileprefix_asan.out	-v
 ip_printroute_asan	ip_printroute_asan.pcap		ip_printroute_asan.out	-v
 mobility_opt_asan	mobility_opt_asan.pcap		mobility_opt_asan.out	-v
diff --git a/tests/vtp_asan-2.out b/tests/vtp_asan-2.out
index 32c319da7..0a83b0983 100644
--- a/tests/vtp_asan-2.out
+++ b/tests/vtp_asan-2.out
@@ -1,3 +1,2 @@
 FRF.16 Frag, seq 193, Flags [Begin, End], UI 08! VTPv69, Message Subset advertisement (0x02), length 2126400013
-	Domain name: , Seq number: 0, Config Rev fb499603
-	VLAN info status Unknown, type TrCRF, VLAN-id 256, MTU 771, SAID 0x03030303, Name ^C^I^C[|vtp]
+	Domain name: , Seq number: 0, Config Rev fb499603[|vtp]
diff --git a/tests/vtp_asan-3.out b/tests/vtp_asan-3.out
new file mode 100644
index 000000000..695a9e90f
--- /dev/null
+++ b/tests/vtp_asan-3.out
@@ -0,0 +1,2 @@
+FRF.16 Frag, seq 193, Flags [Begin, End], UI 08! VTPv69, Message Subset advertisement (0x02), length 2126400013
+	Domain name: , Seq number: 0, Config Rev 4040404[|vtp]
diff --git a/tests/vtp_asan-3.pcap b/tests/vtp_asan-3.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..98ad48bd6b81fbe27ebc624c4f4a1c870549dbfe
GIT binary patch
literal 185
zcmca|c+)~A1{MYe2L>>ZVPs&~24tnoiAZH;5NMbPWJ`JNt2=P;Kwn!tM*{-`j{>tR
n6N3c9T>b}d*9Zay7{aE_Sab6L3mt&0=d`%{2M;WmJ%<ATB~Kgo

literal 0
HcmV?d00001"
CVE-2017-13695,"From 37f2c716f2c6ab14c3ba557a539c3ee3224931b5 Mon Sep 17 00:00:00 2001
From: Seunghun Han <kkamagui@gmail.com>
Date: Wed, 19 Jul 2017 17:04:44 +0900
Subject: [PATCH] acpi: acpica: fix acpi operand cache leak in nseval.c

I found an ACPI cache leak in ACPI early termination and boot continuing case.

When early termination occurs due to malicious ACPI table, Linux kernel
terminates ACPI function and continues to boot process. While kernel terminates
ACPI function, kmem_cache_destroy() reports Acpi-Operand cache leak.

Boot log of ACPI operand cache leak is as follows:
>[    0.464168] ACPI: Added _OSI(Module Device)
>[    0.467022] ACPI: Added _OSI(Processor Device)
>[    0.469376] ACPI: Added _OSI(3.0 _SCP Extensions)
>[    0.471647] ACPI: Added _OSI(Processor Aggregator Device)
>[    0.477997] ACPI Error: Null stack entry at ffff880215c0aad8 (20170303/exresop-174)
>[    0.482706] ACPI Exception: AE_AML_INTERNAL, While resolving operands for [OpcodeName unavailable] (20170303/dswexec-461)
>[    0.487503] ACPI Error: Method parse/execution failed [\DBG] (Node ffff88021710ab40), AE_AML_INTERNAL (20170303/psparse-543)
>[    0.492136] ACPI Error: Method parse/execution failed [\_SB._INI] (Node ffff88021710a618), AE_AML_INTERNAL (20170303/psparse-543)
>[    0.497683] ACPI: Interpreter enabled
>[    0.499385] ACPI: (supports S0)
>[    0.501151] ACPI: Using IOAPIC for interrupt routing
>[    0.503342] ACPI Error: Null stack entry at ffff880215c0aad8 (20170303/exresop-174)
>[    0.506522] ACPI Exception: AE_AML_INTERNAL, While resolving operands for [OpcodeName unavailable] (20170303/dswexec-461)
>[    0.510463] ACPI Error: Method parse/execution failed [\DBG] (Node ffff88021710ab40), AE_AML_INTERNAL (20170303/psparse-543)
>[    0.514477] ACPI Error: Method parse/execution failed [\_PIC] (Node ffff88021710ab18), AE_AML_INTERNAL (20170303/psparse-543)
>[    0.518867] ACPI Exception: AE_AML_INTERNAL, Evaluating _PIC (20170303/bus-991)
>[    0.522384] kmem_cache_destroy Acpi-Operand: Slab cache still has objects
>[    0.524597] CPU: 1 PID: 1 Comm: swapper/0 Not tainted 4.12.0-rc5 #26
>[    0.526795] Hardware name: innotek GmbH VirtualBox/VirtualBox, BIOS VirtualBox 12/01/2006
>[    0.529668] Call Trace:
>[    0.530811]  ? dump_stack+0x5c/0x81
>[    0.532240]  ? kmem_cache_destroy+0x1aa/0x1c0
>[    0.533905]  ? acpi_os_delete_cache+0xa/0x10
>[    0.535497]  ? acpi_ut_delete_caches+0x3f/0x7b
>[    0.537237]  ? acpi_terminate+0xa/0x14
>[    0.538701]  ? acpi_init+0x2af/0x34f
>[    0.540008]  ? acpi_sleep_proc_init+0x27/0x27
>[    0.541593]  ? do_one_initcall+0x4e/0x1a0
>[    0.543008]  ? kernel_init_freeable+0x19e/0x21f
>[    0.546202]  ? rest_init+0x80/0x80
>[    0.547513]  ? kernel_init+0xa/0x100
>[    0.548817]  ? ret_from_fork+0x25/0x30
>[    0.550587] vgaarb: loaded
>[    0.551716] EDAC MC: Ver: 3.0.0
>[    0.553744] PCI: Probing PCI hardware
>[    0.555038] PCI host bridge to bus 0000:00
> ... Continue to boot and log is omitted ...

I analyzed this memory leak in detail and found AcpiNsEvaluate() function
only removes Info->ReturnObject in AE_CTRL_RETURN_VALUE case. But, when errors
occur, the status value is not AE_CTRL_RETURN_VALUE, and Info->ReturnObject is
also not null. Therefore, this causes acpi operand memory leak.

This cache leak causes a security threat because an old kernel (<= 4.9) shows
memory locations of kernel functions in stack dump. Some malicious users
could use this information to neutralize kernel ASLR.

I made a patch to fix ACPI operand cache leak.

Signed-off-by: Seunghun Han <kkamagui@gmail.com>
---
 source/components/namespace/nseval.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/source/components/namespace/nseval.c b/source/components/namespace/nseval.c
index 97423e8179..f9913398e5 100644
--- a/source/components/namespace/nseval.c
+++ b/source/components/namespace/nseval.c
@@ -428,6 +428,16 @@ AcpiNsEvaluate (
 
         Status = AE_OK;
     }
+    else if (ACPI_FAILURE(Status)) 
+    {
+        /* If ReturnObject exists, delete it */
+
+        if (Info->ReturnObject) 
+        {
+            AcpiUtRemoveReference (Info->ReturnObject);
+            Info->ReturnObject = NULL;
+        }
+    }
 
     ACPI_DEBUG_PRINT ((ACPI_DB_NAMES,
         ""*** Completed evaluation of object %s ***\n"","
CVE-2017-14619,"From 30b0025e19bd95ba28f4eff4d259671e7bb6bb86 Mon Sep 17 00:00:00 2001
From: Thorsten Rinne <thorsten@phpmyfaq.de>
Date: Thu, 14 Sep 2017 21:10:24 +0200
Subject: [PATCH] Added some more protection against possible XSS attacks

---
 phpmyfaq/admin/configuration.php | 9 +++++++--
 phpmyfaq/inc/PMF/Faq.php         | 2 +-
 phpmyfaq/index.php               | 6 +++---
 phpmyfaq/main.php                | 2 +-
 4 files changed, 12 insertions(+), 7 deletions(-)

diff --git a/phpmyfaq/admin/configuration.php b/phpmyfaq/admin/configuration.php
index 68e94a9bda..e376a8002f 100644
--- a/phpmyfaq/admin/configuration.php
+++ b/phpmyfaq/admin/configuration.php
@@ -46,7 +46,12 @@
         // Set the new values
         $forbiddenValues = ['{', '}', '$'];
         $newConfigValues = [];
-        $escapeValues = ['main.contactInformations', 'main.customPdfHeader', 'main.customPdfFooter'];
+        $escapeValues = [
+            'main.contactInformations',
+            'main.customPdfHeader',
+            'main.customPdfFooter',
+            'main.titleFAQ'
+        ];
 
         // Special checks
         if (isset($editData['edit']['main.enableMarkdownEditor'])) {
@@ -58,7 +63,7 @@
             $newConfigValues[$key] = str_replace($forbiddenValues, '', $value);
             // Escape some values
             if (isset($escapeValues[$key])) {
-                $newConfigValues[$key] = PMF_String::htmlspecialchars($value, ENT_HTML5);
+                $newConfigValues[$key] = PMF_String::htmlspecialchars($value, ENT_QUOTES);
             }
             $keyArray = array_values(explode('.', $key));
             $newConfigClass = array_shift($keyArray);
diff --git a/phpmyfaq/inc/PMF/Faq.php b/phpmyfaq/inc/PMF/Faq.php
index e2e7d3b019..5a29f3cd2c 100755
--- a/phpmyfaq/inc/PMF/Faq.php
+++ b/phpmyfaq/inc/PMF/Faq.php
@@ -1602,7 +1602,7 @@ public function getRecordTitle($id)
 
         if ($this->_config->getDb()->numRows($result) > 0) {
             while ($row = $this->_config->getDb()->fetchObject($result)) {
-                $question = $row->question;
+                $question = PMF_String::htmlspecialchars($row->question);
             }
         } else {
             $question = $this->pmf_lang['no_cats'];
diff --git a/phpmyfaq/index.php b/phpmyfaq/index.php
index 411f97212e..5aa75d71cb 100755
--- a/phpmyfaq/index.php
+++ b/phpmyfaq/index.php
@@ -479,11 +479,11 @@
 
 $tplMainPage = array(
     'msgLoginUser' => $user->isLoggedIn() ? $user->getUserData('display_name') : $PMF_LANG['msgLoginUser'],
-    'title' => $faqConfig->get('main.titleFAQ').$title,
+    'title' => PMF_String::htmlspecialchars($faqConfig->get('main.titleFAQ').$title),
     'baseHref' => $faqSystem->getSystemUri($faqConfig),
     'version' => $faqConfig->get('main.currentVersion'),
-    'header' => str_replace('""', '', $faqConfig->get('main.titleFAQ')),
-    'metaTitle' => str_replace('""', '', $faqConfig->get('main.titleFAQ').$title),
+    'header' => PMF_String::htmlspecialchars(str_replace('""', '', $faqConfig->get('main.titleFAQ'))),
+    'metaTitle' => PMF_String::htmlspecialchars(str_replace('""', '', $faqConfig->get('main.titleFAQ').$title)),
     'metaDescription' => $metaDescription,
     'metaKeywords' => $keywords,
     'metaPublisher' => $faqConfig->get('main.metaPublisher'),
diff --git a/phpmyfaq/main.php b/phpmyfaq/main.php
index 302e2ff224..baf66c5b73 100755
--- a/phpmyfaq/main.php
+++ b/phpmyfaq/main.php
@@ -77,6 +77,6 @@
     'index',
     'breadcrumb',
     [
-        'breadcrumbHeadline' => $faqConfig->get('main.titleFAQ')
+        'breadcrumbHeadline' => PMF_String::htmlspecialchars($faqConfig->get('main.titleFAQ'))
     ]
 );
\ No newline at end of file"
CVE-2017-9203,"From a4f247707f08e322f0b41e82c3e06e224240a654 Mon Sep 17 00:00:00 2001
From: Jason Summers <jason1@pobox.com>
Date: Thu, 11 May 2017 12:04:40 -0400
Subject: [PATCH] Fixed a bug that could cause invalid memory to be accessed

The bug could happen when transparency is removed from an image.
Also fixed a semi-related BMP error handling logic bug.
Fixes issue #21
---
 src/imagew-bmp.c  |  2 ++
 src/imagew-main.c | 18 +++++++++++++++---
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/src/imagew-bmp.c b/src/imagew-bmp.c
index 9e51106..811da1d 100644
--- a/src/imagew-bmp.c
+++ b/src/imagew-bmp.c
@@ -847,11 +847,13 @@ static int bmpr_read_rle(struct iwbmprcontext *rctx)
 		!(rctx->compression==IWBMP_BI_RLE4 && rctx->bitcount==4))
 	{
 		iw_set_error(rctx->ctx,""Compression type incompatible with image type"");
+		goto done;
 	}
 
 	if(rctx->topdown) {
 		// The documentation says that top-down images may not be compressed.
 		iw_set_error(rctx->ctx,""Compression not allowed with top-down images"");
+		goto done;
 	}
 
 	// RLE-compressed BMP images don't have to assign a color to every pixel,
diff --git a/src/imagew-main.c b/src/imagew-main.c
index 2fcf9e5..5a59c05 100644
--- a/src/imagew-main.c
+++ b/src/imagew-main.c
@@ -922,8 +922,6 @@ static int iw_process_cols_to_intermediate(struct iw_context *ctx, int channel,
 	return retval;
 }
 
-// 'handle_alpha_flag' must be set if an alpha channel exists and this is not
-// the alpha channel.
 static int iw_process_rows_intermediate_to_final(struct iw_context *ctx, int intermed_channel,
 	const struct iw_csdescr *out_csdescr)
 {
@@ -951,13 +949,27 @@ static int iw_process_rows_intermediate_to_final(struct iw_context *ctx, int int
 	iw_tmpsample *out_pix = NULL;
 	int num_in_pix;
 	int num_out_pix;
+	struct iw_channelinfo_out default_ci_out;
 
 	num_in_pix = ctx->intermed_canvas_width;
 	num_out_pix = ctx->img2.width;
 
 	int_ci = &ctx->intermed_ci[intermed_channel];
 	output_channel = int_ci->corresponding_output_channel;
-	out_ci = &ctx->img2_ci[output_channel];
+	if(output_channel>=0) {
+		out_ci = &ctx->img2_ci[output_channel];
+	}
+	else {
+		// If there is no output channelinfo struct, create a temporary one to
+		// use.
+		// TODO: This is admittedly ugly, but we use these settings for a few
+		// things even when there is no corresponding output channel, and I
+		// don't remember exactly why.
+		iw_zeromem(&default_ci_out, sizeof(struct iw_channelinfo_out));
+		default_ci_out.channeltype = IW_CHANNELTYPE_NONALPHA;
+		out_ci = &default_ci_out;
+	}
+
 	is_alpha_channel = (int_ci->channeltype==IW_CHANNELTYPE_ALPHA);
 	bkgd_has_transparency = iw_bkgd_has_transparency(ctx);"
CVE-2017-5601,"From 98dcbbf0bf4854bf987557e55e55fff7abbf3ea9 Mon Sep 17 00:00:00 2001
From: Martin Matuska <martin@matuska.org>
Date: Thu, 19 Jan 2017 22:00:18 +0100
Subject: [PATCH] Fail with negative lha->compsize in lha_read_file_header_1()
 Fixes a heap buffer overflow reported in Secunia SA74169

---
 libarchive/archive_read_support_format_lha.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/libarchive/archive_read_support_format_lha.c b/libarchive/archive_read_support_format_lha.c
index 52a5531b0f..d77a7c2e47 100644
--- a/libarchive/archive_read_support_format_lha.c
+++ b/libarchive/archive_read_support_format_lha.c
@@ -924,6 +924,9 @@ lha_read_file_header_1(struct archive_read *a, struct lha *lha)
 	/* Get a real compressed file size. */
 	lha->compsize -= extdsize - 2;
 
+	if (lha->compsize < 0)
+		goto invalid;	/* Invalid compressed file size */
+
 	if (sum_calculated != headersum) {
 		archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
 		    ""LHa header sum error"");"
CVE-2017-6059,"From 612e309bfffd6f9b8ad7cdccda3019fc0865f3b4 Mon Sep 17 00:00:00 2001
From: Hans Zandbelt <hzandbelt@pingidentity.com>
Date: Thu, 19 Jan 2017 00:03:37 +0100
Subject: [PATCH] don't echo query params on invalid requests to redirect URI;
 closes #212

thanks @LukasReschke; I'm sure there's some OWASP guideline that warns
against this
---
 ChangeLog              | 3 +++
 src/mod_auth_openidc.c | 4 ++--
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 4010fb39..b046b8d5 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,6 @@
+01/18/2017
+- don't echo the query parameters on the error page when an invalid request is made to the Redirect URI; closes #212; thanks @LukasReschke
+
 01/14/2017
 - use dynamic memory buffer for writing HTTP call responses; solves curl/mpm-event interference; see #207
 - bump to 2.1.4rc1
diff --git a/src/mod_auth_openidc.c b/src/mod_auth_openidc.c
index fea57754..1a2fc55f 100644
--- a/src/mod_auth_openidc.c
+++ b/src/mod_auth_openidc.c
@@ -2845,8 +2845,8 @@ int oidc_handle_redirect_uri_request(request_rec *r, oidc_cfg *c,
 	/* something went wrong */
 	return oidc_util_html_send_error(r, c->error_template, ""Invalid Request"",
 			apr_psprintf(r->pool,
-					""The OpenID Connect callback URL received an invalid request: %s"",
-					r->args), HTTP_INTERNAL_SERVER_ERROR);
+					""The OpenID Connect callback URL received an invalid request""),
+					HTTP_INTERNAL_SERVER_ERROR);
 }
 
 /*"
CVE-2017-5494,"From 261dbd5b294e707af766691e65a177a290314a6e Mon Sep 17 00:00:00 2001
From: ""Erwin Rommel H. Satingin"" <winskie@gmail.com>
Date: Sun, 15 Jan 2017 15:17:52 +0800
Subject: [PATCH] Updated file types table to only allow admins to upload files
 with SWF extension

---
 conf/_application.php             | 2 +-
 install/_functions_create.php     | 2 +-
 install/_functions_evoupgrade.php | 8 ++++++++
 3 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/conf/_application.php b/conf/_application.php
index 9e34c30c125..fc5f12fe77b 100644
--- a/conf/_application.php
+++ b/conf/_application.php
@@ -36,7 +36,7 @@
  *
  * {@internal Before changing this in CVS, it should be discussed! }}
  */
-$new_db_version = 11810;
+$new_db_version = 11815;
 
 /**
  * Minimum PHP version required for b2evolution to function properly. It will contain each module own minimum PHP version as well.
diff --git a/install/_functions_create.php b/install/_functions_create.php
index 0e5b45ecbfe..93038ac894d 100644
--- a/install/_functions_create.php
+++ b/install/_functions_create.php
@@ -448,7 +448,7 @@ function create_default_data()
 			(17, 'mov', 'Quicktime video', 'video/quicktime', 'file_video', 'browser', 'registered'),
 			(18, 'm4v', 'MPEG video file', 'video/x-m4v', 'file_video', 'browser', 'registered'),
 			(19, 'flv', 'Flash video file', 'video/x-flv', 'file_video', 'browser', 'registered'),
-			(20, 'swf', 'Flash video file', 'application/x-shockwave-flash', 'file_video', 'browser', 'registered'),
+			(20, 'swf', 'Flash video file', 'application/x-shockwave-flash', 'file_video', 'browser', 'admin'),
 			(21, 'webm', 'WebM video file', 'video/webm', 'file_video', 'browser', 'registered'),
 			(22, 'ogv', 'Ogg video file', 'video/ogg', 'file_video', 'browser', 'registered'),
 			(23, 'm3u8', 'M3U8 video file', 'application/x-mpegurl', 'file_video', 'browser', 'registered'),
diff --git a/install/_functions_evoupgrade.php b/install/_functions_evoupgrade.php
index 3435fca6d40..18c05201987 100644
--- a/install/_functions_evoupgrade.php
+++ b/install/_functions_evoupgrade.php
@@ -7592,6 +7592,14 @@ function add_basic_widget_11670( $blog_ID, $container_name, $code, $type, $order
 		upg_task_end();
 	}
 
+	if( upg_task_start( 11815, 'Updating file types table...' ) )
+	{ // part of 6.7.10-stable
+		$DB->query( 'UPDATE T_filetypes
+				SET ftyp_allowed = ""admin""
+			WHERE ftyp_extensions REGEXP ""[[:<:]]swf[[:>:]]""' );
+		upg_task_end();
+	}
+
 	/*
 	 * ADD UPGRADES __ABOVE__ IN A NEW UPGRADE BLOCK.
 	 *"
CVE-2017-0375,"From 79b59a2dfcb68897ee89d98587d09e55f07e68d7 Mon Sep 17 00:00:00 2001
From: David Goulet <dgoulet@torproject.org>
Date: Mon, 5 Jun 2017 09:35:03 -0400
Subject: [PATCH] TROVE-2017-004: Fix assertion failure in
 relay_send_end_cell_from_edge_

This fixes an assertion failure in relay_send_end_cell_from_edge_() when an
origin circuit and a cpath_layer = NULL were passed.

A service rendezvous circuit could do such a thing when a malformed BEGIN cell
is received but shouldn't in the first place because the service needs to send
an END cell on the circuit for which it can not do without a cpath_layer.

Fixes #22493

Reported-by: Roger Dingledine <arma@torproject.org>
Signed-off-by: David Goulet <dgoulet@torproject.org>
---
 changes/trove-2017-004   |  5 +++++
 src/or/connection_edge.c | 21 ++++++++++++++-------
 2 files changed, 19 insertions(+), 7 deletions(-)
 create mode 100644 changes/trove-2017-004

diff --git a/changes/trove-2017-004 b/changes/trove-2017-004
new file mode 100644
index 00000000000..106d3afcb5e
--- /dev/null
+++ b/changes/trove-2017-004
@@ -0,0 +1,5 @@
+  o Major bugfixes (hidden service, relay):
+    - Fix an assertion failure when an hidden service handles a malformed
+      BEGIN cell. This bug resulted in the service crashing triggered by a
+      tor_assert(). Part of TROVE-2017-004. Fixes bug 22493; bugfix on
+      tor-0.3.0.1-alpha. Found by armadev.
diff --git a/src/or/connection_edge.c b/src/or/connection_edge.c
index dac0c01012f..d9d9e736436 100644
--- a/src/or/connection_edge.c
+++ b/src/or/connection_edge.c
@@ -3091,14 +3091,21 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)
   char *address = NULL;
   uint16_t port = 0;
   or_circuit_t *or_circ = NULL;
+  origin_circuit_t *origin_circ = NULL;
+  crypt_path_t *layer_hint = NULL;
   const or_options_t *options = get_options();
   begin_cell_t bcell;
   int rv;
   uint8_t end_reason=0;
 
   assert_circuit_ok(circ);
-  if (!CIRCUIT_IS_ORIGIN(circ))
+  if (!CIRCUIT_IS_ORIGIN(circ)) {
     or_circ = TO_OR_CIRCUIT(circ);
+  } else {
+    tor_assert(circ->purpose == CIRCUIT_PURPOSE_S_REND_JOINED);
+    origin_circ = TO_ORIGIN_CIRCUIT(circ);
+    layer_hint = origin_circ->cpath->prev;
+  }
 
   relay_header_unpack(&rh, cell->payload);
   if (rh.length > RELAY_PAYLOAD_SIZE)
@@ -3123,7 +3130,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)
     return -END_CIRC_REASON_TORPROTOCOL;
   } else if (rv == -1) {
     tor_free(bcell.address);
-    relay_send_end_cell_from_edge(rh.stream_id, circ, end_reason, NULL);
+    relay_send_end_cell_from_edge(rh.stream_id, circ, end_reason, layer_hint);
     return 0;
   }
 
@@ -3160,7 +3167,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)
     if (!directory_permits_begindir_requests(options) ||
         circ->purpose != CIRCUIT_PURPOSE_OR) {
       relay_send_end_cell_from_edge(rh.stream_id, circ,
-                                    END_STREAM_REASON_NOTDIRECTORY, NULL);
+                                  END_STREAM_REASON_NOTDIRECTORY, layer_hint);
       return 0;
     }
     /* Make sure to get the 'real' address of the previous hop: the
@@ -3177,7 +3184,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)
   } else {
     log_warn(LD_BUG, ""Got an unexpected command %d"", (int)rh.command);
     relay_send_end_cell_from_edge(rh.stream_id, circ,
-                                  END_STREAM_REASON_INTERNAL, NULL);
+                                  END_STREAM_REASON_INTERNAL, layer_hint);
     return 0;
   }
 
@@ -3188,7 +3195,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)
     if (bcell.flags & BEGIN_FLAG_IPV4_NOT_OK) {
       tor_free(address);
       relay_send_end_cell_from_edge(rh.stream_id, circ,
-                                    END_STREAM_REASON_EXITPOLICY, NULL);
+                                    END_STREAM_REASON_EXITPOLICY, layer_hint);
       return 0;
     }
   }
@@ -3211,7 +3218,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)
   n_stream->deliver_window = STREAMWINDOW_START;
 
   if (circ->purpose == CIRCUIT_PURPOSE_S_REND_JOINED) {
-    origin_circuit_t *origin_circ = TO_ORIGIN_CIRCUIT(circ);
+    tor_assert(origin_circ);
     log_info(LD_REND,""begin is for rendezvous. configuring stream."");
     n_stream->base_.address = tor_strdup(""(rendezvous)"");
     n_stream->base_.state = EXIT_CONN_STATE_CONNECTING;
@@ -3231,7 +3238,7 @@ connection_exit_begin_conn(cell_t *cell, circuit_t *circ)
        * the hidden service. */
       relay_send_end_cell_from_edge(rh.stream_id, circ,
                                     END_STREAM_REASON_DONE,
-                                    origin_circ->cpath->prev);
+                                    layer_hint);
       connection_free(TO_CONN(n_stream));
       tor_free(address);"
CVE-2017-7184,"From 677e806da4d916052585301785d847c3b3e6186a Mon Sep 17 00:00:00 2001
From: Andy Whitcroft <apw@canonical.com>
Date: Wed, 22 Mar 2017 07:29:31 +0000
Subject: [PATCH] xfrm_user: validate XFRM_MSG_NEWAE XFRMA_REPLAY_ESN_VAL
 replay_window

When a new xfrm state is created during an XFRM_MSG_NEWSA call we
validate the user supplied replay_esn to ensure that the size is valid
and to ensure that the replay_window size is within the allocated
buffer.  However later it is possible to update this replay_esn via a
XFRM_MSG_NEWAE call.  There we again validate the size of the supplied
buffer matches the existing state and if so inject the contents.  We do
not at this point check that the replay_window is within the allocated
memory.  This leads to out-of-bounds reads and writes triggered by
netlink packets.  This leads to memory corruption and the potential for
priviledge escalation.

We already attempt to validate the incoming replay information in
xfrm_new_ae() via xfrm_replay_verify_len().  This confirms that the user
is not trying to change the size of the replay state buffer which
includes the replay_esn.  It however does not check the replay_window
remains within that buffer.  Add validation of the contained
replay_window.

CVE-2017-7184
Signed-off-by: Andy Whitcroft <apw@canonical.com>
Acked-by: Steffen Klassert <steffen.klassert@secunet.com>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---
 net/xfrm/xfrm_user.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/net/xfrm/xfrm_user.c b/net/xfrm/xfrm_user.c
index 9705c279494b24..cdf887fa61d574 100644
--- a/net/xfrm/xfrm_user.c
+++ b/net/xfrm/xfrm_user.c
@@ -415,6 +415,9 @@ static inline int xfrm_replay_verify_len(struct xfrm_replay_state_esn *replay_es
 	if (nla_len(rp) < ulen || xfrm_replay_state_esn_len(replay_esn) != ulen)
 		return -EINVAL;
 
+	if (up->replay_window > up->bmp_len * sizeof(__u32) * 8)
+		return -EINVAL;
+
 	return 0;
 }"
PYSEC-2017-36,"From 80d90307b07b3703428ecbb7c8bb468e28a9ae6d Mon Sep 17 00:00:00 2001
From: Erik Johnson <palehose@gmail.com>
Date: Wed, 23 Aug 2017 10:20:50 -0500
Subject: [PATCH] Don't allow path separators in minion ID

---
 salt/utils/verify.py            | 15 ++++-----------
 tests/unit/utils/test_verify.py | 10 ++++++++++
 2 files changed, 14 insertions(+), 11 deletions(-)

diff --git a/salt/utils/verify.py b/salt/utils/verify.py
index 6e69283f073c..24b2a1d962e0 100644
--- a/salt/utils/verify.py
+++ b/salt/utils/verify.py
@@ -480,22 +480,15 @@ def clean_path(root, path, subdir=False):
     return ''
 
 
-def clean_id(id_):
-    '''
-    Returns if the passed id is clean.
-    '''
-    if re.search(r'\.\.\{sep}'.format(sep=os.sep), id_):
-        return False
-    return True
-
-
 def valid_id(opts, id_):
     '''
     Returns if the passed id is valid
     '''
     try:
-        return bool(clean_path(opts['pki_dir'], id_)) and clean_id(id_)
-    except (AttributeError, KeyError, TypeError) as e:
+        if any(x in id_ for x in ('/', '\\', '\0')):
+            return False
+        return bool(clean_path(opts['pki_dir'], id_))
+    except (AttributeError, KeyError, TypeError):
         return False
 
 
diff --git a/tests/unit/utils/test_verify.py b/tests/unit/utils/test_verify.py
index 795298877dd0..fa091f6cb393 100644
--- a/tests/unit/utils/test_verify.py
+++ b/tests/unit/utils/test_verify.py
@@ -58,6 +58,16 @@ def test_valid_id_exception_handler(self):
         opts = {'pki_dir': '/tmp/whatever'}
         self.assertFalse(valid_id(opts, None))
 
+    def test_valid_id_pathsep(self):
+        '''
+        Path separators in id should make it invalid
+        '''
+        opts = {'pki_dir': '/tmp/whatever'}
+        # We have to test both path separators because os.path.normpath will
+        # convert forward slashes to backslashes on Windows.
+        for pathsep in ('/', '\\'):
+            self.assertFalse(valid_id(opts, pathsep.join(('..', 'foobar'))))
+
     def test_zmq_verify(self):
         self.assertTrue(zmq_version())"
CVE-2017-9995,"From 2171dfae8c065878a2e130390eb78cf2947a5b69 Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Sat, 13 May 2017 15:39:32 +0200
Subject: [PATCH] avcodec/scpr: Fix multiple runtime error: index 256 out of
 bounds for type 'unsigned int [256]'

Fixes: 1519/clusterfuzz-testcase-minimized-5286680976162816

Found-by: continuous fuzzing process https://github.com/google/oss-fuzz/tree/master/targets/ffmpeg
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
---
 libavcodec/scpr.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/libavcodec/scpr.c b/libavcodec/scpr.c
index b87c047ab6591..46f072c757a76 100644
--- a/libavcodec/scpr.c
+++ b/libavcodec/scpr.c
@@ -261,6 +261,9 @@ static int decode_unit(SCPRContext *s, PixelModel *pixel, unsigned step, unsigne
             break;
         c++;
     }
+    if (x >= 16 || c >= 256) {
+        return AVERROR_INVALIDDATA;
+    }
 
     if ((ret = s->decode(gb, rc, cumfr, cnt_c, totfr)) < 0)
         return ret;"
CVE-2017-6889,"From 194f592e205990ea8fce72b6c571c14350aca716 Mon Sep 17 00:00:00 2001
From: Alex Tutubalin <lexa@lexa.ru>
Date: Sat, 4 Mar 2017 19:55:24 +0300
Subject: [PATCH] Fixed possible foveon buffer overrun (Secunia SA750000)

---
 dcraw_foveon.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/dcraw_foveon.c b/dcraw_foveon.c
index d8b7005..bdde89d 100644
--- a/dcraw_foveon.c
+++ b/dcraw_foveon.c
@@ -319,7 +319,7 @@ void CLASS foveon_huff (ushort *huff)
 void CLASS foveon_dp_load_raw()
 {
   unsigned c, roff[4], row, col, diff;
-  ushort huff[512], vpred[2][2], hpred[2];
+  ushort huff[1024], vpred[2][2], hpred[2];
 
   fseek (ifp, 8, SEEK_CUR);
   foveon_huff (huff);
@@ -346,12 +346,16 @@ void CLASS foveon_dp_load_raw()
 void CLASS foveon_load_camf()
 {
   unsigned type, wide, high, i, j, row, col, diff;
-  ushort huff[258], vpred[2][2] = {{512,512},{512,512}}, hpred[2];
+  ushort huff[1024], vpred[2][2] = {{512,512},{512,512}}, hpred[2];
 
   fseek (ifp, meta_offset, SEEK_SET);
   type = get4();  get4();  get4();
   wide = get4();
   high = get4();
+#ifdef LIBRAW_LIBRARY_BUILD
+  if(wide>32767 || high > 32767 || wide*high > 20000000)
+     throw LIBRAW_EXCEPTION_IO_CORRUPT;
+#endif
   if (type == 2) {
     fread (meta_data, 1, meta_length, ifp);
     for (i=0; i < meta_length; i++) {"
CVE-2017-11691,"From 104090aeead4aa433bf1f18cd6d52dcfeb71236c Mon Sep 17 00:00:00 2001
From: cigamit <jimmy@sqmail.org>
Date: Thu, 20 Jul 2017 19:02:07 -0500
Subject: [PATCH] Resolving Issue #867

Cross-site scripting (XSS) vulnerability in auth_profile.php
---
 auth_profile.php | 6 +++---
 docs/CHANGELOG   | 1 +
 2 files changed, 4 insertions(+), 3 deletions(-)

diff --git a/auth_profile.php b/auth_profile.php
index 25b8eee023..8c4db3ed9c 100644
--- a/auth_profile.php
+++ b/auth_profile.php
@@ -147,7 +147,7 @@ function settings() {
 
 	form_start('auth_profile.php');
 
-	html_start_box( __('User Account Details'), '100%', true, '3', 'center', '');
+	html_start_box(__('User Account Details'), '100%', true, '3', 'center', '');
 
 	$current_user = db_fetch_row_prepared('SELECT * FROM user_auth WHERE id = ?', array($_SESSION['sess_user_id']));
 
@@ -418,7 +418,7 @@ function langChange() {
 		});
 
 		$('input[value=""<?php print __esc('Return');?>""]').unbind().click(function(event) {
-			document.location = '<?php print $_SESSION['profile_referer'];?>';
+			document.location = '<?php print htmlspecialchars($_SESSION['profile_referer']);?>';
 		});
 	});
 
@@ -427,7 +427,7 @@ function langChange() {
 
 	form_hidden_box('save_component_graph_config','1','');
 
-	form_save_buttons(array(array('id' => 'return', 'value' => 'Return'), array('id' => 'save', 'value' => 'Save')));
+	form_save_buttons(array(array('id' => 'return', 'value' => __esc('Return')), array('id' => 'save', 'value' => __esc('Save'))));
 
 	form_end();
 }
diff --git a/docs/CHANGELOG b/docs/CHANGELOG
index dde6f5f271..0ca6fb4b75 100644
--- a/docs/CHANGELOG
+++ b/docs/CHANGELOG
@@ -6,6 +6,7 @@ Cacti CHANGELOG
 -issue#861: The search filter does not support Cyrillic
 -issue#862: Automation - When editing Graph Rules, unable to Change Data Query
 -issue#863: Typo error in auth_login.php for LDAP authentication
+-issue#867: Cross-site scripting (XSS) vulnerability in auth_profile.php
 -issue: Link's not showing in Automation Graph and Tree rules on Sunshine theme
 -feature: Resize Graphs on Graph page to be responsive"
CVE-2017-9144,"From f6240ee77847787f6d7618b669d3a2040a2d6d40 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Fri, 12 May 2017 07:12:29 -0400
Subject: [PATCH] Check for EOF conditions for RLE image format

---
 ChangeLog    |  1 +
 coders/rle.c | 89 +++++++++++++++++++++++++++++++++++++---------------
 2 files changed, 64 insertions(+), 26 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 8435448406e..3d934d28e2f 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -11,6 +11,7 @@
     https://www.imagemagick.org/discourse-server/viewtopic.php?f=3&t=31862).
   * Ensure backwards compatibility for the -combine option (reference
     https://www.imagemagick.org/discourse-server/viewtopic.php?f=3&t=31855).
+  * Check for EOF conditions for RLE image format.
 
 2017-04-24  7.0.5-5 Cristy  <quetzlzacatenango@image...>
   * Release ImageMagick version 7.0.5-5, GIT revision 19915:12eec43:20170424.
diff --git a/coders/rle.c b/coders/rle.c
index cfb20f556f0..e2d68ead36b 100644
--- a/coders/rle.c
+++ b/coders/rle.c
@@ -132,6 +132,14 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
 #define ByteDataOp  0x05
 #define RunDataOp  0x06
 #define EOFOp  0x07
+#define ThrowRLEException(exception,message) \
+{ \
+  if (colormap != (unsigned char *) NULL) \
+    colormap=(unsigned char *) RelinquishMagickMemory(colormap); \
+  if (pixel_info != (MemoryInfo *) NULL) \
+    pixel_info=RelinquishVirtualMemory(pixel_info); \
+  ThrowReaderException((exception),(message)); \
+}
 
   char
     magick[12];
@@ -206,6 +214,8 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
   /*
     Determine if this a RLE file.
   */
+  colormap=(unsigned char *) NULL;
+  pixel_info=(MemoryInfo *) NULL;
   count=ReadBlob(image,2,(unsigned char *) magick);
   if ((count != 2) || (memcmp(magick,""\122\314"",2) != 0))
     ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
@@ -214,8 +224,8 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
     /*
       Read image header.
     */
-    image->page.x=ReadBlobLSBShort(image);
-    image->page.y=ReadBlobLSBShort(image);
+    image->page.x=(ssize_t) ReadBlobLSBShort(image);
+    image->page.y=(ssize_t) ReadBlobLSBShort(image);
     image->columns=ReadBlobLSBShort(image);
     image->rows=ReadBlobLSBShort(image);
     flags=(MagickStatusType) ReadBlobByte(image);
@@ -226,6 +236,8 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
     map_length=(unsigned char) ReadBlobByte(image);
     if (map_length >= 22)
       ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
+    if (EOFBlob(image) != MagickFalse)
+      ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
     one=1;
     map_length=one << map_length;
     if ((number_planes == 0) || (number_planes == 2) ||
@@ -253,12 +265,7 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
     if ((number_planes & 0x01) == 0)
       (void) ReadBlobByte(image);
     if (EOFBlob(image) != MagickFalse)
-      {
-        ThrowFileException(exception,CorruptImageError,""UnexpectedEndOfFile"",
-          image->filename);
-        break;
-      }
-    colormap=(unsigned char *) NULL;
+      ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
     if (number_colormaps != 0)
       {
         /*
@@ -271,8 +278,12 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         p=colormap;
         for (i=0; i < (ssize_t) number_colormaps; i++)
           for (x=0; x < (ssize_t) map_length; x++)
+	  {
             *p++=(unsigned char) ScaleQuantumToChar(ScaleShortToQuantum(
               ReadBlobLSBShort(image)));
+            if (EOFBlob(image) != MagickFalse)
+              ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
+	  }
       }
     if ((flags & 0x08) != 0)
       {
@@ -300,11 +311,7 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
           }
       }
     if (EOFBlob(image) != MagickFalse)
-      {
-        ThrowFileException(exception,CorruptImageError,""UnexpectedEndOfFile"",
-          image->filename);
-        break;
-      }
+      ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
     if ((image_info->ping != MagickFalse) && (image_info->number_scenes != 0))
       if (image->scene >= (image_info->scene+image_info->number_scenes-1))
         break;
@@ -359,6 +366,8 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
     x=0;
     y=0;
     opcode=ReadBlobByte(image);
+    if (opcode == EOF)
+      ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
     do
     {
       switch (opcode & 0x3f)
@@ -366,8 +375,14 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case SkipLinesOp:
         {
           operand=ReadBlobByte(image);
+          if (opcode == EOF)
+            ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
           if (opcode & 0x40)
-            operand=ReadBlobLSBSignedShort(image);
+            {
+              operand=ReadBlobLSBSignedShort(image);
+              if (opcode == EOF)
+                ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
+	    }
           x=0;
           y+=operand;
           break;
@@ -375,6 +390,8 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case SetColorOp:
         {
           operand=ReadBlobByte(image);
+          if (opcode == EOF)
+            ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
           plane=(unsigned char) operand;
           if (plane == 255)
             plane=(unsigned char) (number_planes-1);
@@ -384,21 +401,33 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case SkipPixelsOp:
         {
           operand=ReadBlobByte(image);
+          if (opcode == EOF)
+            ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
           if (opcode & 0x40)
-            operand=ReadBlobLSBSignedShort(image);
+            {
+              operand=ReadBlobLSBSignedShort(image);
+              if (opcode == EOF)
+                ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
+            }
           x+=operand;
           break;
         }
         case ByteDataOp:
         {
           operand=ReadBlobByte(image);
+          if (opcode == EOF)
+            ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
           if (opcode & 0x40)
-            operand=ReadBlobLSBSignedShort(image);
-          offset=((image->rows-y-1)*image->columns*number_planes)+x*
-            number_planes+plane;
+            {
+              operand=ReadBlobLSBSignedShort(image);
+              if (opcode == EOF)
+                ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
+            }
+          offset=(ssize_t) (((image->rows-y-1)*image->columns*number_planes)+x*
+            number_planes+plane);
           operand++;
           if ((offset < 0) ||
-              (offset+((size_t) operand*number_planes) > pixel_info_length))
+              ((offset+operand*number_planes) > (ssize_t) pixel_info_length))
             {
               if (number_colormaps != 0)
                 colormap=(unsigned char *) RelinquishMagickMemory(colormap);
@@ -422,15 +451,21 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         case RunDataOp:
         {
           operand=ReadBlobByte(image);
+          if (opcode == EOF)
+            ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
           if (opcode & 0x40)
-            operand=ReadBlobLSBSignedShort(image);
+            {
+              operand=ReadBlobLSBSignedShort(image);
+              if (opcode == EOF)
+                ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
+            }
           pixel=(unsigned char) ReadBlobByte(image);
           (void) ReadBlobByte(image);
-          offset=((image->rows-y-1)*image->columns*number_planes)+x*
-            number_planes+plane;
+          offset=(ssize_t) (((image->rows-y-1)*image->columns*number_planes)+x*
+            number_planes+plane);
           operand++;
           if ((offset < 0) ||
-              (offset+((size_t) operand*number_planes) > pixel_info_length))
+              ((offset+operand*number_planes) > (ssize_t) pixel_info_length))
             {
               if (number_colormaps != 0)
                 colormap=(unsigned char *) RelinquishMagickMemory(colormap);
@@ -452,6 +487,8 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
           break;
       }
       opcode=ReadBlobByte(image);
+      if (opcode == EOF)
+        ThrowRLEException(CorruptImageError,""UnexpectedEndOfFile"");
     } while (((opcode & 0x3f) != EOFOp) && (opcode != EOF));
     if (number_colormaps != 0)
       {
@@ -467,7 +504,7 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
         if (number_colormaps == 1)
           for (i=0; i < (ssize_t) number_pixels; i++)
           {
-            ValidateColormapValue(image,*p & mask,&index,exception);
+            ValidateColormapValue(image,(ssize_t) (*p & mask),&index,exception);
             *p=colormap[(ssize_t) index];
             p++;
           }
@@ -476,7 +513,7 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
             for (i=0; i < (ssize_t) number_pixels; i++)
               for (x=0; x < (ssize_t) number_planes; x++)
               {
-                ValidateColormapValue(image,(size_t) (x*map_length+
+                ValidateColormapValue(image,(ssize_t) (x*map_length+
                   (*p & mask)),&index,exception);
                 *p=colormap[(ssize_t) index];
                 p++;
@@ -570,7 +607,7 @@ static Image *ReadRLEImage(const ImageInfo *image_info,ExceptionInfo *exception)
                 break;
               for (x=0; x < (ssize_t) image->columns; x++)
               {
-                SetPixelIndex(image,*p++,q);
+                SetPixelIndex(image,(Quantum) *p++,q);
                 q+=GetPixelChannels(image);
               }
               if (SyncAuthenticPixels(image,exception) == MagickFalse)"
CVE-2017-13000,"From 9be4e0b5938b705e7e36cfcb110a740c6ff0cb97 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Fri, 17 Feb 2017 17:43:10 -0800
Subject: [PATCH] CVE-2017-13000/IEEE 802.15.4: Add more bounds checks.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

While we're at it, add a bunch of macros for the frame control field's
subfields, have the reserved frame types show the frame type value, use
the same code path for processing source and destination addresses
regardless of whether -v was specified (just leave out the addresses in
non-verbose mode), and return the header length in all cases.

This fixes a buffer over-read discovered by Forcepoint's security
researchers Otto Airamo & Antti LevomÃ¤ki.

Add tests using the capture files supplied by the reporter(s).
---
 print-802_15_4.c           | 242 ++++++++++++++++++++++---------------
 tests/802_15_4-oobr-1.out  |   1 +
 tests/802_15_4-oobr-1.pcap | Bin 0 -> 79 bytes
 tests/802_15_4-oobr-2.out  |   1 +
 tests/802_15_4-oobr-2.pcap | Bin 0 -> 78 bytes
 tests/TESTLIST             |   2 +
 6 files changed, 146 insertions(+), 100 deletions(-)
 create mode 100644 tests/802_15_4-oobr-1.out
 create mode 100644 tests/802_15_4-oobr-1.pcap
 create mode 100644 tests/802_15_4-oobr-2.out
 create mode 100644 tests/802_15_4-oobr-2.pcap

diff --git a/print-802_15_4.c b/print-802_15_4.c
index 6fe6d35b2..a43d0333c 100644
--- a/print-802_15_4.c
+++ b/print-802_15_4.c
@@ -38,144 +38,186 @@ static const char *ftypes[] = {
 	""Data"",				/* 1 */
 	""ACK"",				/* 2 */
 	""Command"",			/* 3 */
-	""Reserved"",			/* 4 */
-	""Reserved"",			/* 5 */
-	""Reserved"",			/* 6 */
-	""Reserved"",			/* 7 */
+	""Reserved (0x4)"",		/* 4 */
+	""Reserved (0x5)"",		/* 5 */
+	""Reserved (0x6)"",		/* 6 */
+	""Reserved (0x7)"",		/* 7 */
 };
 
-static int
-extract_header_length(uint16_t fc)
-{
-	int len = 0;
-
-	switch ((fc >> 10) & 0x3) {
-	case 0x00:
-		if (fc & (1 << 6)) /* intra-PAN with none dest addr */
-			return -1;
-		break;
-	case 0x01:
-		return -1;
-	case 0x02:
-		len += 4;
-		break;
-	case 0x03:
-		len += 10;
-		break;
-	}
-
-	switch ((fc >> 14) & 0x3) {
-	case 0x00:
-		break;
-	case 0x01:
-		return -1;
-	case 0x02:
-		len += 4;
-		break;
-	case 0x03:
-		len += 10;
-		break;
-	}
-
-	if (fc & (1 << 6)) {
-		if (len < 2)
-			return -1;
-		len -= 2;
-	}
-
-	return len;
-}
-
+/*
+ * Frame Control subfields.
+ */
+#define FC_FRAME_TYPE(fc)		((fc) & 0x7)
+#define FC_SECURITY_ENABLED		0x0008
+#define FC_FRAME_PENDING		0x0010
+#define FC_ACK_REQUEST			0x0020
+#define FC_PAN_ID_COMPRESSION		0x0040
+#define FC_DEST_ADDRESSING_MODE(fc)	(((fc) >> 10) & 0x3)
+#define FC_FRAME_VERSION(fc)		(((fc) >> 12) & 0x3)
+#define FC_SRC_ADDRESSING_MODE(fc)	(((fc) >> 14) & 0x3)
+
+#define FC_ADDRESSING_MODE_NONE		0x00
+#define FC_ADDRESSING_MODE_RESERVED	0x01
+#define FC_ADDRESSING_MODE_SHORT	0x02
+#define FC_ADDRESSING_MODE_LONG		0x03
 
 u_int
 ieee802_15_4_if_print(netdissect_options *ndo,
                       const struct pcap_pkthdr *h, const u_char *p)
 {
 	u_int caplen = h->caplen;
-	int hdrlen;
+	u_int hdrlen;
 	uint16_t fc;
 	uint8_t seq;
+	uint16_t panid = 0;
 
 	if (caplen < 3) {
-		ND_PRINT((ndo, ""[|802.15.4] %x"", caplen));
+		ND_PRINT((ndo, ""[|802.15.4]""));
 		return caplen;
 	}
+	hdrlen = 3;
 
 	fc = EXTRACT_LE_16BITS(p);
-	hdrlen = extract_header_length(fc);
-
 	seq = EXTRACT_LE_8BITS(p + 2);
 
 	p += 3;
 	caplen -= 3;
 
-	ND_PRINT((ndo,""IEEE 802.15.4 %s packet "", ftypes[fc & 0x7]));
+	ND_PRINT((ndo,""IEEE 802.15.4 %s packet "", ftypes[FC_FRAME_TYPE(fc)]));
 	if (ndo->ndo_vflag)
 		ND_PRINT((ndo,""seq %02x "", seq));
-	if (hdrlen == -1) {
-		ND_PRINT((ndo,""invalid! ""));
-		return caplen;
-	}
-
-
-	if (!ndo->ndo_vflag) {
-		p+= hdrlen;
-		caplen -= hdrlen;
-	} else {
-		uint16_t panid = 0;
 
-		switch ((fc >> 10) & 0x3) {
-		case 0x00:
+	/*
+	 * Destination address and PAN ID, if present.
+	 */
+	switch (FC_DEST_ADDRESSING_MODE(fc)) {
+	case FC_ADDRESSING_MODE_NONE:
+		if (fc & FC_PAN_ID_COMPRESSION) {
+			/*
+			 * PAN ID compression; this requires that both
+			 * the source and destination addresses be present,
+			 * but the destination address is missing.
+			 */
+			ND_PRINT((ndo, ""[|802.15.4]""));
+			return hdrlen;
+		}
+		if (ndo->ndo_vflag)
 			ND_PRINT((ndo,""none ""));
-			break;
-		case 0x01:
+		break;
+	case FC_ADDRESSING_MODE_RESERVED:
+		if (ndo->ndo_vflag)
 			ND_PRINT((ndo,""reserved destination addressing mode""));
-			return 0;
-		case 0x02:
-			panid = EXTRACT_LE_16BITS(p);
-			p += 2;
-			ND_PRINT((ndo,""%04x:%04x "", panid, EXTRACT_LE_16BITS(p)));
-			p += 2;
-			break;
-		case 0x03:
-			panid = EXTRACT_LE_16BITS(p);
-			p += 2;
-			ND_PRINT((ndo,""%04x:%s "", panid, le64addr_string(ndo, p)));
-			p += 8;
-			break;
+		return hdrlen;
+	case FC_ADDRESSING_MODE_SHORT:
+		if (caplen < 2) {
+			ND_PRINT((ndo, ""[|802.15.4]""));
+			return hdrlen;
+		}
+		panid = EXTRACT_LE_16BITS(p);
+		p += 2;
+		caplen -= 2;
+		hdrlen += 2;
+		if (caplen < 2) {
+			ND_PRINT((ndo, ""[|802.15.4]""));
+			return hdrlen;
 		}
+		if (ndo->ndo_vflag)
+			ND_PRINT((ndo,""%04x:%04x "", panid, EXTRACT_LE_16BITS(p + 2)));
+		p += 2;
+		caplen -= 2;
+		hdrlen += 2;
+		break;
+	case FC_ADDRESSING_MODE_LONG:
+		if (caplen < 2) {
+			ND_PRINT((ndo, ""[|802.15.4]""));
+			return hdrlen;
+		}
+		panid = EXTRACT_LE_16BITS(p);
+		p += 2;
+		caplen -= 2;
+		hdrlen += 2;
+		if (caplen < 8) {
+			ND_PRINT((ndo, ""[|802.15.4]""));
+			return hdrlen;
+		}
+		if (ndo->ndo_vflag)
+			ND_PRINT((ndo,""%04x:%s "", panid, le64addr_string(ndo, p + 2)));
+		p += 8;
+		caplen -= 8;
+		hdrlen += 8;
+		break;
+	}
+	if (ndo->ndo_vflag)
 		ND_PRINT((ndo,""< ""));
 
-		switch ((fc >> 14) & 0x3) {
-		case 0x00:
+	/*
+	 * Source address and PAN ID, if present.
+	 */
+	switch (FC_SRC_ADDRESSING_MODE(fc)) {
+	case FC_ADDRESSING_MODE_NONE:
+		if (ndo->ndo_vflag)
 			ND_PRINT((ndo,""none ""));
-			break;
-		case 0x01:
+		break;
+	case FC_ADDRESSING_MODE_RESERVED:
+		if (ndo->ndo_vflag)
 			ND_PRINT((ndo,""reserved source addressing mode""));
-			return 0;
-		case 0x02:
-			if (!(fc & (1 << 6))) {
-				panid = EXTRACT_LE_16BITS(p);
-				p += 2;
+		return 0;
+	case FC_ADDRESSING_MODE_SHORT:
+		if (!(fc & FC_PAN_ID_COMPRESSION)) {
+			/*
+			 * The source PAN ID is not compressed out, so
+			 * fetch it.  (Otherwise, we'll use the destination
+			 * PAN ID, fetched above.)
+			 */
+			if (caplen < 2) {
+				ND_PRINT((ndo, ""[|802.15.4]""));
+				return hdrlen;
 			}
-			ND_PRINT((ndo,""%04x:%04x "", panid, EXTRACT_LE_16BITS(p)));
+			panid = EXTRACT_LE_16BITS(p);
 			p += 2;
-			break;
-		case 0x03:
-			if (!(fc & (1 << 6))) {
-				panid = EXTRACT_LE_16BITS(p);
-				p += 2;
+			caplen -= 2;
+			hdrlen += 2;
+		}
+		if (caplen < 2) {
+			ND_PRINT((ndo, ""[|802.15.4]""));
+			return hdrlen;
+		}
+		if (ndo->ndo_vflag)
+			ND_PRINT((ndo,""%04x:%04x "", panid, EXTRACT_LE_16BITS(p)));
+		p += 2;
+		caplen -= 2;
+		hdrlen += 2;
+		break;
+	case FC_ADDRESSING_MODE_LONG:
+		if (!(fc & FC_PAN_ID_COMPRESSION)) {
+			/*
+			 * The source PAN ID is not compressed out, so
+			 * fetch it.  (Otherwise, we'll use the destination
+			 * PAN ID, fetched above.)
+			 */
+			if (caplen < 2) {
+				ND_PRINT((ndo, ""[|802.15.4]""));
+				return hdrlen;
 			}
-                        ND_PRINT((ndo,""%04x:%s "", panid, le64addr_string(ndo, p)));
-			p += 8;
-			break;
+			panid = EXTRACT_LE_16BITS(p);
+			p += 2;
+			caplen -= 2;
+			hdrlen += 2;
 		}
-
-		caplen -= hdrlen;
+		if (caplen < 8) {
+			ND_PRINT((ndo, ""[|802.15.4]""));
+			return hdrlen;
+		}
+		if (ndo->ndo_vflag)
+			ND_PRINT((ndo,""%04x:%s "", panid, le64addr_string(ndo, p)));
+		p += 8;
+		caplen -= 8;
+		hdrlen += 8;
+		break;
 	}
 
 	if (!ndo->ndo_suppress_default_print)
 		ND_DEFAULTPRINT(p, caplen);
 
-	return 0;
+	return hdrlen;
 }
diff --git a/tests/802_15_4-oobr-1.out b/tests/802_15_4-oobr-1.out
new file mode 100644
index 000000000..76fb153c2
--- /dev/null
+++ b/tests/802_15_4-oobr-1.out
@@ -0,0 +1 @@
+IEEE 802.15.4 Beacon packet seq cd [|802.15.4]
diff --git a/tests/802_15_4-oobr-1.pcap b/tests/802_15_4-oobr-1.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..b2a0182f7d8036e3e6a14e5958e88cdf307ae5ca
GIT binary patch
literal 79
zcmZ3u>F^Z>CI%J;AW#4i3}E)*2w}7L4D9z_0Qu@*{QB(b|NqafW(28V;5n#ZFWA8*
T#Rldv$}ljVU|^JHs5%Y+&Z`lN

literal 0
HcmV?d00001

diff --git a/tests/802_15_4-oobr-2.out b/tests/802_15_4-oobr-2.out
new file mode 100644
index 000000000..bc3b866c3
--- /dev/null
+++ b/tests/802_15_4-oobr-2.out
@@ -0,0 +1 @@
+IEEE 802.15.4 Data packet seq 01 [|802.15.4]
diff --git a/tests/802_15_4-oobr-2.pcap b/tests/802_15_4-oobr-2.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..7542fc1ae60b2b2a1edba5c334ddc5ec0db273b5
GIT binary patch
literal 78
zcmca|c+)~A1{MYeB?d46vKS5n@zWH~0D&e>1~niXgcaW~`mSbVU}R`yU=&~yU~*t$
YU}C5<{=mYhF3|rlBQ+-{pFwsT06rcM$p8QV

literal 0
HcmV?d00001

diff --git a/tests/TESTLIST b/tests/TESTLIST
index 0c4d45a11..491af396e 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -486,6 +486,8 @@ pimv2-oobr-1		pimv2-oobr-1.pcap		pimv2-oobr-1.out		-vvv -e
 pimv2-oobr-2		pimv2-oobr-2.pcap		pimv2-oobr-2.out		-vvv -e
 pimv2-oobr-3		pimv2-oobr-3.pcap		pimv2-oobr-3.out		-vvv -e
 pimv2-oobr-4		pimv2-oobr-4.pcap		pimv2-oobr-4.out		-vvv -e
+802_15_4-oobr-1		802_15_4-oobr-1.pcap		802_15_4-oobr-1.out	-vvv -e
+802_15_4-oobr-2		802_15_4-oobr-2.pcap		802_15_4-oobr-2.out	-vvv -e
 
 # RTP tests
 # fuzzed pcap"
CVE-2017-13020,"From d692d67332bcc90540088ad8e725eb3279e39863 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Wed, 22 Mar 2017 16:02:48 -0700
Subject: [PATCH] CVE-2017-13020/VTP: Add another test.

A capture file supplied by Bhargava Shastry, modified so the capture
file won't be rejected as an invalid capture.
---
 tests/TESTLIST        |   1 +
 tests/vtp_asan-2.out  |   3 +++
 tests/vtp_asan-2.pcap | Bin 0 -> 108 bytes
 3 files changed, 4 insertions(+)
 create mode 100644 tests/vtp_asan-2.out
 create mode 100644 tests/vtp_asan-2.pcap

diff --git a/tests/TESTLIST b/tests/TESTLIST
index fdcd593c6..388dcfe8a 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -523,6 +523,7 @@ pgm_opts_asan		pgm_opts_asan.pcap		pgm_opts_asan.out	-v
 pgm_opts_asan_2		pgm_opts_asan_2.pcap		pgm_opts_asan_2.out	-v
 pgm_opts_asan_3		pgm_opts_asan_3.pcap		pgm_opts_asan_3.out	-v
 vtp_asan		vtp_asan.pcap			vtp_asan.out	-v
+vtp_asan-2		vtp_asan-2.pcap			vtp_asan-2.out	-v
 icmp6_mobileprefix_asan	icmp6_mobileprefix_asan.pcap	icmp6_mobileprefix_asan.out	-v
 ip_printroute_asan	ip_printroute_asan.pcap		ip_printroute_asan.out	-v
 mobility_opt_asan	mobility_opt_asan.pcap		mobility_opt_asan.out	-v
diff --git a/tests/vtp_asan-2.out b/tests/vtp_asan-2.out
new file mode 100644
index 000000000..32c319da7
--- /dev/null
+++ b/tests/vtp_asan-2.out
@@ -0,0 +1,3 @@
+FRF.16 Frag, seq 193, Flags [Begin, End], UI 08! VTPv69, Message Subset advertisement (0x02), length 2126400013
+	Domain name: , Seq number: 0, Config Rev fb499603
+	VLAN info status Unknown, type TrCRF, VLAN-id 256, MTU 771, SAID 0x03030303, Name ^C^I^C[|vtp]
diff --git a/tests/vtp_asan-2.pcap b/tests/vtp_asan-2.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..31a9f5e1a262d612e6c433e801260ac09743d9e5
GIT binary patch
literal 108
zcmca|c+)~A1{Q{GDZ&34fWQTaw*hg=oQPCr27v|;U&?D=-GPG#`r6_-8W<RO6qsF^
z7$g|x@;_i$D+m-|2%C1`^?zyc|Ete3F*5O8|Ihrt{y+C`&uPpcz{mimn3*}50pF}1
A-2eap

literal 0
HcmV?d00001"
CVE-2017-8891,"From 82167c144a322cc956da45407f6dce8d4303d346 Mon Sep 17 00:00:00 2001
From: Daniel Reiter Horn <danielrh@users.sourceforge.net>
Date: Tue, 4 Apr 2017 23:58:01 -0700
Subject: [PATCH] fix #87 : always check that threads_required set up the
 appropriate number of threads---fire off nop functions on unused threads for
 consistency

---
 src/lepton/bitops.cc          |  3 ++-
 src/lepton/bitops.hh          |  8 ++++----
 src/lepton/lepton_codec.cc    |  1 +
 src/lepton/vp8_decoder.cc     | 22 ++++++++++++++--------
 src/vp8/decoder/boolreader.hh |  4 +++-
 5 files changed, 24 insertions(+), 14 deletions(-)

diff --git a/src/lepton/bitops.cc b/src/lepton/bitops.cc
index 3032fb10..517bdced 100644
--- a/src/lepton/bitops.cc
+++ b/src/lepton/bitops.cc
@@ -356,6 +356,7 @@ bounded_iostream::bounded_iostream(Sirikata::DecoderWriter *w,
     this->size_callback = size_callback;
     buffer_position = 0;
     byte_position = 0;
+    byte_bound = 0x7FFFFFFF;
     num_bytes_attempted_to_write = 0;
     set_bound(0);
 }
@@ -384,7 +385,7 @@ void bounded_iostream::close() {
     parent->Close();
 }
 
-unsigned int bounded_iostream::write_no_buffer(const void *from, size_t bytes_to_write) {
+uint32_t bounded_iostream::write_no_buffer(const void *from, size_t bytes_to_write) {
     //return iostream::write(from,tpsize,dtsize);
     std::pair<unsigned int, Sirikata::JpegError> retval;
     if (byte_bound != 0 && byte_position + bytes_to_write > byte_bound) {
diff --git a/src/lepton/bitops.hh b/src/lepton/bitops.hh
index 2aa36e98..9cb959c7 100644
--- a/src/lepton/bitops.hh
+++ b/src/lepton/bitops.hh
@@ -467,12 +467,12 @@ class bounded_iostream
     uint8_t buffer[buffer_size];
     uint32_t buffer_position;
     Sirikata::DecoderWriter *parent;
-    unsigned int byte_bound;
-    unsigned int byte_position;
-    unsigned int num_bytes_attempted_to_write;
+    uint32_t byte_bound;
+    uint32_t byte_position;
+    uint32_t num_bytes_attempted_to_write;
     Sirikata::JpegError err;
     std::function<void(Sirikata::DecoderWriter*, size_t)> size_callback;
-    unsigned int write_no_buffer( const void* from, size_t bytes_to_write );
+    uint32_t write_no_buffer( const void* from, size_t bytes_to_write );
 public:
 	bounded_iostream( Sirikata::DecoderWriter * parent,
                       const std::function<void(Sirikata::DecoderWriter*, size_t)> &size_callback,
diff --git a/src/lepton/lepton_codec.cc b/src/lepton/lepton_codec.cc
index cbdf10f6..5442b23e 100644
--- a/src/lepton/lepton_codec.cc
+++ b/src/lepton/lepton_codec.cc
@@ -275,6 +275,7 @@ CodingReturnValue LeptonCodec::ThreadState::vp8_decode_thread(unsigned int threa
     /* deserialize each block in planar order */
 
     dev_assert(luma_splits_.size() == 2); // not ready to do multiple work items on a thread yet
+    always_assert(luma_splits_.size() >= 2);
     int min_y = luma_splits_[0];
     int max_y = luma_splits_[1];
     while(true) {
diff --git a/src/lepton/vp8_decoder.cc b/src/lepton/vp8_decoder.cc
index 412632e8..8a0cacec 100644
--- a/src/lepton/vp8_decoder.cc
+++ b/src/lepton/vp8_decoder.cc
@@ -417,6 +417,7 @@ std::vector<ThreadHandoff> VP8ComponentDecoder::initialize_decoder_state(const U
 void VP8ComponentDecoder::flush() {
         mux_splicer.drain(mux_reader_);
 }
+namespace{void nop(){}}
 CodingReturnValue VP8ComponentDecoder::decode_chunk(UncompressedComponents * const colldata)
 {
     mux_splicer.init(spin_workers_);
@@ -455,14 +456,19 @@ CodingReturnValue VP8ComponentDecoder::decode_chunk(UncompressedComponents * con
     if (do_threading_) {
         for (unsigned int thread_id = 0; thread_id < NUM_THREADS; ++thread_id) {
             unsigned int cur_spin_worker = thread_id;
-            spin_workers_[cur_spin_worker].work
-                = std::bind(worker_thread,
-                            thread_state_[thread_id],
-                            thread_id,
-                            colldata,
-                            mux_splicer.thread_target,
-                            getWorker(cur_spin_worker),
-                            &send_to_actual_thread_state);
+            if (!thread_state_[thread_id]) {
+                spin_workers_[cur_spin_worker].work
+                    = &nop;
+            } else {
+                spin_workers_[cur_spin_worker].work
+                    = std::bind(worker_thread,
+                                thread_state_[thread_id],
+                                thread_id,
+                                colldata,
+                                mux_splicer.thread_target,
+                                getWorker(cur_spin_worker),
+                                &send_to_actual_thread_state);
+            }
             spin_workers_[cur_spin_worker].activate_work();
         }
         flush();
diff --git a/src/vp8/decoder/boolreader.hh b/src/vp8/decoder/boolreader.hh
index 0d0d3313..17a9ed6a 100644
--- a/src/vp8/decoder/boolreader.hh
+++ b/src/vp8/decoder/boolreader.hh
@@ -119,7 +119,9 @@ public:
             return;
         }
         size_t del = rope[0].second-rope[0].first;
-        memcpy(dest, rope[0].first, del);
+        if (del) {
+            memcpy(dest, rope[0].first, del);
+        }
         dest += del;
         size -=del;
         if (size) {"
OSV-2017-79,"From ab6eb2ec0744074004980d0f98677e52b215941f Mon Sep 17 00:00:00 2001
From: Daniel Stenberg <daniel@haxx.se>
Date: Wed, 13 Jan 2021 11:53:41 +0100
Subject: [PATCH] http_chunks: remove Curl_ prefix from static functions

---
 lib/http_chunks.c | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git a/lib/http_chunks.c b/lib/http_chunks.c
index 498481475c53..a267ad8f44a9 100644
--- a/lib/http_chunks.c
+++ b/lib/http_chunks.c
@@ -5,7 +5,7 @@
  *                            | (__| |_| |  _ <| |___
  *                             \___|\___/|_| \_\_____|
  *
- * Copyright (C) 1998 - 2020, Daniel Stenberg, <daniel@haxx.se>, et al.
+ * Copyright (C) 1998 - 2021, Daniel Stenberg, <daniel@haxx.se>, et al.
  *
  * This software is licensed as described in the file COPYING, which
  * you should have received as part of this distribution. The terms
@@ -77,14 +77,14 @@
 #ifdef CURL_DOES_CONVERSIONS
 /* Check for an ASCII hex digit.
    We avoid the use of ISXDIGIT to accommodate non-ASCII hosts. */
-static bool Curl_isxdigit_ascii(char digit)
+static bool isxdigit_ascii(char digit)
 {
   return (digit >= 0x30 && digit <= 0x39) /* 0-9 */
-        || (digit >= 0x41 && digit <= 0x46) /* A-F */
-        || (digit >= 0x61 && digit <= 0x66); /* a-f */
+    || (digit >= 0x41 && digit <= 0x46) /* A-F */
+    || (digit >= 0x61 && digit <= 0x66); /* a-f */
 }
 #else
-#define Curl_isxdigit_ascii(x) Curl_isxdigit(x)
+#define isxdigit_ascii(x) Curl_isxdigit(x)
 #endif
 
 void Curl_httpchunk_init(struct connectdata *conn)
@@ -136,7 +136,7 @@ CHUNKcode Curl_httpchunk_read(struct connectdata *conn,
   while(length) {
     switch(ch->state) {
     case CHUNK_HEX:
-      if(Curl_isxdigit_ascii(*datap)) {
+      if(isxdigit_ascii(*datap)) {
         if(ch->hexindex < MAXNUM_SIZE) {
           ch->hexbuffer[ch->hexindex] = *datap;
           datap++;"
OSV-2017-73,"From f1806ea3d0abd164e38da2fafe3d3479feb1d3e8 Mon Sep 17 00:00:00 2001
From: Roman Lebedev <lebedev.ri@gmail.com>
Date: Mon, 7 Aug 2017 00:15:02 +0300
Subject: [PATCH] FujiDecompressor::FujiHeader::operator bool(): dedup
 block_size check

---
 src/librawspeed/decompressors/FujiDecompressor.cpp | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/src/librawspeed/decompressors/FujiDecompressor.cpp b/src/librawspeed/decompressors/FujiDecompressor.cpp
index bd82d82ae..8dcd007c3 100644
--- a/src/librawspeed/decompressors/FujiDecompressor.cpp
+++ b/src/librawspeed/decompressors/FujiDecompressor.cpp
@@ -779,12 +779,12 @@ FujiDecompressor::FujiHeader::operator bool() const {
        raw_height < FujiStrip::lineHeight() ||
        raw_height % FujiStrip::lineHeight() || raw_width > 0x3000 ||
        raw_width < 0x300 || raw_width % 24 || raw_rounded_width > 0x3000 ||
-       block_size < 1 || raw_rounded_width < block_size ||
+       block_size != 0x300 || raw_rounded_width < block_size ||
        raw_rounded_width % block_size ||
-       raw_rounded_width - raw_width >= block_size || block_size != 0x300 ||
-       blocks_in_row > 0x10 || blocks_in_row == 0 ||
-       blocks_in_row != raw_rounded_width / block_size || total_lines > 0x800 ||
-       total_lines == 0 || total_lines != raw_height / FujiStrip::lineHeight() ||
+       raw_rounded_width - raw_width >= block_size || blocks_in_row > 0x10 ||
+       blocks_in_row == 0 || blocks_in_row != raw_rounded_width / block_size ||
+       total_lines > 0x800 || total_lines == 0 ||
+       total_lines != raw_height / FujiStrip::lineHeight() ||
        (raw_bits != 12 && raw_bits != 14) || (raw_type != 16 && raw_type != 0));
 
   return !invalid;"
PYSEC-2017-102,"From 059ba8dec1f22ccbeab837e288b3833a099cee2d Mon Sep 17 00:00:00 2001
From: Guillaume Ayoub <guillaume.ayoub@kozea.fr>
Date: Wed, 19 Apr 2017 13:48:30 +0200
Subject: [PATCH] Random timer to avoid timing oracles and simple bruteforce
 attacks

Important note: this is a security fix.
---
 radicale/auth.py | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/radicale/auth.py b/radicale/auth.py
index 2fa2807ee..8ae493a7c 100644
--- a/radicale/auth.py
+++ b/radicale/auth.py
@@ -57,6 +57,8 @@
 import functools
 import hashlib
 import os
+import random
+import time
 from importlib import import_module
 
 
@@ -192,6 +194,8 @@ def is_authenticated(self, user, password):
                 line = line.strip()
                 if line:
                     login, hash_value = line.split("":"")
-                    if login == user:
-                        return self.verify(hash_value, password)
+                    if login == user and self.verify(hash_value, password):
+                        return True
+        # Random timer to avoid timing oracles and simple bruteforce attacks
+        time.sleep(1 + random.random())
         return False"
CVE-2017-15537,"From 814fb7bb7db5433757d76f4c4502c96fc53b0b5e Mon Sep 17 00:00:00 2001
From: Eric Biggers <ebiggers@google.com>
Date: Sat, 23 Sep 2017 15:00:07 +0200
Subject: [PATCH] x86/fpu: Don't let userspace set bogus xcomp_bv

On x86, userspace can use the ptrace() or rt_sigreturn() system calls to
set a task's extended state (xstate) or ""FPU"" registers.  ptrace() can
set them for another task using the PTRACE_SETREGSET request with
NT_X86_XSTATE, while rt_sigreturn() can set them for the current task.
In either case, registers can be set to any value, but the kernel
assumes that the XSAVE area itself remains valid in the sense that the
CPU can restore it.

However, in the case where the kernel is using the uncompacted xstate
format (which it does whenever the XSAVES instruction is unavailable),
it was possible for userspace to set the xcomp_bv field in the
xstate_header to an arbitrary value.  However, all bits in that field
are reserved in the uncompacted case, so when switching to a task with
nonzero xcomp_bv, the XRSTOR instruction failed with a #GP fault.  This
caused the WARN_ON_FPU(err) in copy_kernel_to_xregs() to be hit.  In
addition, since the error is otherwise ignored, the FPU registers from
the task previously executing on the CPU were leaked.

Fix the bug by checking that the user-supplied value of xcomp_bv is 0 in
the uncompacted case, and returning an error otherwise.

The reason for validating xcomp_bv rather than simply overwriting it
with 0 is that we want userspace to see an error if it (incorrectly)
provides an XSAVE area in compacted format rather than in uncompacted
format.

Note that as before, in case of error we clear the task's FPU state.
This is perhaps non-ideal, especially for PTRACE_SETREGSET; it might be
better to return an error before changing anything.  But it seems the
""clear on error"" behavior is fine for now, and it's a little tricky to
do otherwise because it would mean we couldn't simply copy the full
userspace state into kernel memory in one __copy_from_user().

This bug was found by syzkaller, which hit the above-mentioned
WARN_ON_FPU():

    WARNING: CPU: 1 PID: 0 at ./arch/x86/include/asm/fpu/internal.h:373 __switch_to+0x5b5/0x5d0
    CPU: 1 PID: 0 Comm: swapper/1 Not tainted 4.13.0 #453
    Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
    task: ffff9ba2bc8e42c0 task.stack: ffffa78cc036c000
    RIP: 0010:__switch_to+0x5b5/0x5d0
    RSP: 0000:ffffa78cc08bbb88 EFLAGS: 00010082
    RAX: 00000000fffffffe RBX: ffff9ba2b8bf2180 RCX: 00000000c0000100
    RDX: 00000000ffffffff RSI: 000000005cb10700 RDI: ffff9ba2b8bf36c0
    RBP: ffffa78cc08bbbd0 R08: 00000000929fdf46 R09: 0000000000000001
    R10: 0000000000000000 R11: 0000000000000000 R12: ffff9ba2bc8e42c0
    R13: 0000000000000000 R14: ffff9ba2b8bf3680 R15: ffff9ba2bf5d7b40
    FS:  00007f7e5cb10700(0000) GS:ffff9ba2bf400000(0000) knlGS:0000000000000000
    CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
    CR2: 00000000004005cc CR3: 0000000079fd5000 CR4: 00000000001406e0
    Call Trace:
    Code: 84 00 00 00 00 00 e9 11 fd ff ff 0f ff 66 0f 1f 84 00 00 00 00 00 e9 e7 fa ff ff 0f ff 66 0f 1f 84 00 00 00 00 00 e9 c2 fa ff ff <0f> ff 66 0f 1f 84 00 00 00 00 00 e9 d4 fc ff ff 66 66 2e 0f 1f

Here is a C reproducer.  The expected behavior is that the program spin
forever with no output.  However, on a buggy kernel running on a
processor with the ""xsave"" feature but without the ""xsaves"" feature
(e.g. Sandy Bridge through Broadwell for Intel), within a second or two
the program reports that the xmm registers were corrupted, i.e. were not
restored correctly.  With CONFIG_X86_DEBUG_FPU=y it also hits the above
kernel warning.

    #define _GNU_SOURCE
    #include <stdbool.h>
    #include <inttypes.h>
    #include <linux/elf.h>
    #include <stdio.h>
    #include <sys/ptrace.h>
    #include <sys/uio.h>
    #include <sys/wait.h>
    #include <unistd.h>

    int main(void)
    {
        int pid = fork();
        uint64_t xstate[512];
        struct iovec iov = { .iov_base = xstate, .iov_len = sizeof(xstate) };

        if (pid == 0) {
            bool tracee = true;
            for (int i = 0; i < sysconf(_SC_NPROCESSORS_ONLN) && tracee; i++)
                tracee = (fork() != 0);
            uint32_t xmm0[4] = { [0 ... 3] = tracee ? 0x00000000 : 0xDEADBEEF };
            asm volatile(""   movdqu %0, %%xmm0\n""
                         ""   mov %0, %%rbx\n""
                         ""1: movdqu %%xmm0, %0\n""
                         ""   mov %0, %%rax\n""
                         ""   cmp %%rax, %%rbx\n""
                         ""   je 1b\n""
                         : ""+m"" (xmm0) : : ""rax"", ""rbx"", ""xmm0"");
            printf(""BUG: xmm registers corrupted!  tracee=%d, xmm0=%08X%08X%08X%08X\n"",
                   tracee, xmm0[0], xmm0[1], xmm0[2], xmm0[3]);
        } else {
            usleep(100000);
            ptrace(PTRACE_ATTACH, pid, 0, 0);
            wait(NULL);
            ptrace(PTRACE_GETREGSET, pid, NT_X86_XSTATE, &iov);
            xstate[65] = -1;
            ptrace(PTRACE_SETREGSET, pid, NT_X86_XSTATE, &iov);
            ptrace(PTRACE_CONT, pid, 0, 0);
            wait(NULL);
        }
        return 1;
    }

Note: the program only tests for the bug using the ptrace() system call.
The bug can also be reproduced using the rt_sigreturn() system call, but
only when called from a 32-bit program, since for 64-bit programs the
kernel restores the FPU state from the signal frame by doing XRSTOR
directly from userspace memory (with proper error checking).

Reported-by: Dmitry Vyukov <dvyukov@google.com>
Signed-off-by: Eric Biggers <ebiggers@google.com>
Reviewed-by: Kees Cook <keescook@chromium.org>
Reviewed-by: Rik van Riel <riel@redhat.com>
Acked-by: Dave Hansen <dave.hansen@linux.intel.com>
Cc: <stable@vger.kernel.org> [v3.17+]
Cc: Andrew Morton <akpm@linux-foundation.org>
Cc: Andy Lutomirski <luto@amacapital.net>
Cc: Andy Lutomirski <luto@kernel.org>
Cc: Borislav Petkov <bp@alien8.de>
Cc: Eric Biggers <ebiggers3@gmail.com>
Cc: Fenghua Yu <fenghua.yu@intel.com>
Cc: Kevin Hao <haokexin@gmail.com>
Cc: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Michael Halcrow <mhalcrow@google.com>
Cc: Oleg Nesterov <oleg@redhat.com>
Cc: Peter Zijlstra <peterz@infradead.org>
Cc: Thomas Gleixner <tglx@linutronix.de>
Cc: Wanpeng Li <wanpeng.li@hotmail.com>
Cc: Yu-cheng Yu <yu-cheng.yu@intel.com>
Cc: kernel-hardening@lists.openwall.com
Fixes: 0b29643a5843 (""x86/xsaves: Change compacted format xsave area header"")
Link: http://lkml.kernel.org/r/20170922174156.16780-2-ebiggers3@gmail.com
Link: http://lkml.kernel.org/r/20170923130016.21448-25-mingo@kernel.org
Signed-off-by: Ingo Molnar <mingo@kernel.org>
---
 arch/x86/kernel/fpu/regset.c | 4 ++++
 arch/x86/kernel/fpu/signal.c | 9 +++++++--
 2 files changed, 11 insertions(+), 2 deletions(-)

diff --git a/arch/x86/kernel/fpu/regset.c b/arch/x86/kernel/fpu/regset.c
index 19a7385a912cce..c764f74053223d 100644
--- a/arch/x86/kernel/fpu/regset.c
+++ b/arch/x86/kernel/fpu/regset.c
@@ -141,6 +141,10 @@ int xstateregs_set(struct task_struct *target, const struct user_regset *regset,
 			ret = copy_user_to_xstate(xsave, ubuf);
 	} else {
 		ret = user_regset_copyin(&pos, &count, &kbuf, &ubuf, xsave, 0, -1);
+
+		/* xcomp_bv must be 0 when using uncompacted format */
+		if (!ret && xsave->header.xcomp_bv)
+			ret = -EINVAL;
 	}
 
 	/*
diff --git a/arch/x86/kernel/fpu/signal.c b/arch/x86/kernel/fpu/signal.c
index 629106e51a2977..da68ea1c3a4420 100644
--- a/arch/x86/kernel/fpu/signal.c
+++ b/arch/x86/kernel/fpu/signal.c
@@ -324,11 +324,16 @@ static int __fpu__restore_sig(void __user *buf, void __user *buf_fx, int size)
 		 */
 		fpu__drop(fpu);
 
-		if (using_compacted_format())
+		if (using_compacted_format()) {
 			err = copy_user_to_xstate(&fpu->state.xsave, buf_fx);
-		else
+		} else {
 			err = __copy_from_user(&fpu->state.xsave, buf_fx, state_size);
 
+			/* xcomp_bv must be 0 when using uncompacted format */
+			if (!err && state_size > offsetof(struct xregs_state, header) && fpu->state.xsave.header.xcomp_bv)
+				err = -EINVAL;
+		}
+
 		if (err || __copy_from_user(&env, buf, sizeof(env))) {
 			fpstate_init(&fpu->state);
 			trace_x86_fpu_init_state(fpu);"
CVE-2017-5924,"From 7f02eca670f29c00a1d2c305e96febae6ce5d37b Mon Sep 17 00:00:00 2001
From: plusvic <plusvic@gmail.com>
Date: Mon, 9 Jan 2017 13:17:39 +0100
Subject: [PATCH] Make sure that loop depth is greater than 0 before
 decrementing it.

---
 libyara/grammar.y | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)

diff --git a/libyara/grammar.y b/libyara/grammar.y
index 446d37410e..bf3c88b4d2 100644
--- a/libyara/grammar.y
+++ b/libyara/grammar.y
@@ -1017,8 +1017,11 @@ expression
       }
     | _FOR_ for_expression error
       {
-        compiler->loop_depth--;
-        compiler->loop_identifier[compiler->loop_depth] = NULL;
+        if (compiler->loop_depth > 0)
+        {
+          compiler->loop_depth--;
+          compiler->loop_identifier[compiler->loop_depth] = NULL;
+        }
       }
     | _FOR_ for_expression _IDENTIFIER_ _IN_
       {"
CVE-2017-5577,"From 6b8ac63847bc2f958dd93c09edc941a0118992d9 Mon Sep 17 00:00:00 2001
From: Eric Anholt <eric@anholt.net>
Date: Tue, 17 Jan 2017 21:58:06 +1100
Subject: [PATCH] drm/vc4: Return -EINVAL on the overflow checks failing.

By failing to set the errno, we'd continue on to trying to set up the
RCL, and then oops on trying to dereference the tile_bo that binning
validation should have set up.

Reported-by: Ingo Molnar <mingo@kernel.org>
Signed-off-by: Eric Anholt <eric@anholt.net>
Fixes: d5b1a78a772f (""drm/vc4: Add support for drawing 3D frames."")
---
 drivers/gpu/drm/vc4/vc4_gem.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/drivers/gpu/drm/vc4/vc4_gem.c b/drivers/gpu/drm/vc4/vc4_gem.c
index c5fe3554858e51..ab3016982466c3 100644
--- a/drivers/gpu/drm/vc4/vc4_gem.c
+++ b/drivers/gpu/drm/vc4/vc4_gem.c
@@ -601,6 +601,7 @@ vc4_get_bcl(struct drm_device *dev, struct vc4_exec_info *exec)
 					  sizeof(struct vc4_shader_state)) ||
 	    temp_size < exec_size) {
 		DRM_ERROR(""overflow in exec arguments\n"");
+		ret = -EINVAL;
 		goto fail;
 	}"
CVE-2017-5511,"From c8c6a0f123d5e35c173125365c97e2c0fc7eca42 Mon Sep 17 00:00:00 2001
From: Dirk Lemstra <dirk@git.imagemagick.org>
Date: Sat, 7 Jan 2017 16:56:49 +0100
Subject: [PATCH] Fix improper cast that could cause an overflow as
 demonstrated in #347.

---
 coders/psd.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/coders/psd.c b/coders/psd.c
index 9249e2e9658..75ebd1d4835 100644
--- a/coders/psd.c
+++ b/coders/psd.c
@@ -1691,7 +1691,7 @@ ModuleExport MagickBooleanType ReadPSDLayers(Image *image,
             /*
               Layer name.
             */
-            length=(MagickSizeType) ReadBlobByte(image);
+            length=(MagickSizeType) (unsigned char) ReadBlobByte(image);
             combined_length+=length+1;
             if (length > 0)
               (void) ReadBlob(image,(size_t) length++,layer_info[i].name);"
CVE-2017-12640,"From 307fa45d512641fcd105f0d57ca50c1437cd1b81 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Thu, 6 Jul 2017 19:20:57 -0400
Subject: [PATCH] https://github.com/ImageMagick/ImageMagick/issues/542

---
 coders/png.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/coders/png.c b/coders/png.c
index dfe6843ac1c..860d28ec41c 100644
--- a/coders/png.c
+++ b/coders/png.c
@@ -5968,6 +5968,8 @@ static Image *ReadOneMNGImage(MngInfo* mng_info, const ImageInfo *image_info,
 
               for (i=(ssize_t) first_object; i <= (ssize_t) last_object; i++)
               {
+                if ((i < 0) || (i >= MNG_MAX_OBJECTS))
+                  continue;
                 if (mng_info->exists[i] && !mng_info->frozen[i] &&
                     (p-chunk) < (ssize_t) (length-8))
                   {"
CVE-2017-14032,"From d15795acd5074e0b44e71f7ede8bdfe1b48591fc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Manuel=20P=C3=A9gouri=C3=A9-Gonnard?=
 <manuel.pegourie-gonnard@arm.com>
Date: Thu, 22 Jun 2017 12:19:27 +0200
Subject: [PATCH] Improve behaviour on fatal errors

If we didn't walk the whole chain, then there may be any kind of errors in the
part of the chain we didn't check, so setting all flags looks like the safe
thing to do.
---
 ChangeLog                              |  7 +++++++
 library/x509_crt.c                     | 22 ++++++++++++++++------
 tests/suites/test_suite_x509parse.data |  2 +-
 3 files changed, 24 insertions(+), 7 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 2f0116bcfc4b..9bf6a1719d7b 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,5 +1,12 @@
 mbed TLS ChangeLog (Sorted per branch, date)
 
+= mbed TLS 2.y.z released YYYY-MM-DD
+
+Changes
+   * Certificate verification functions now set flags to -1 in case the full
+     chain was not verified due to an internal error (including in the verify
+     callback) or chain length limitations.
+
 = mbed TLS 2.5.1 released 2017-06-21
 
 Security
diff --git a/library/x509_crt.c b/library/x509_crt.c
index d86857de80be..ee5f27e465b9 100644
--- a/library/x509_crt.c
+++ b/library/x509_crt.c
@@ -2202,11 +2202,14 @@ int mbedtls_x509_crt_verify_with_profile( mbedtls_x509_crt *crt,
     mbedtls_x509_sequence *cur = NULL;
     mbedtls_pk_type_t pk_type;
 
-    if( profile == NULL )
-        return( MBEDTLS_ERR_X509_BAD_INPUT_DATA );
-
     *flags = 0;
 
+    if( profile == NULL )
+    {
+        ret = MBEDTLS_ERR_X509_BAD_INPUT_DATA;
+        goto exit;
+    }
+
     if( cn != NULL )
     {
         name = &crt->subject;
@@ -2280,7 +2283,7 @@ int mbedtls_x509_crt_verify_with_profile( mbedtls_x509_crt *crt,
         ret = x509_crt_verify_top( crt, parent, ca_crl, profile,
                                    pathlen, selfsigned, flags, f_vrfy, p_vrfy );
         if( ret != 0 )
-            return( ret );
+            goto exit;
     }
     else
     {
@@ -2295,17 +2298,24 @@ int mbedtls_x509_crt_verify_with_profile( mbedtls_x509_crt *crt,
             ret = x509_crt_verify_child( crt, parent, trust_ca, ca_crl, profile,
                                          pathlen, selfsigned, flags, f_vrfy, p_vrfy );
             if( ret != 0 )
-                return( ret );
+                goto exit;
         }
         else
         {
             ret = x509_crt_verify_top( crt, trust_ca, ca_crl, profile,
                                        pathlen, selfsigned, flags, f_vrfy, p_vrfy );
             if( ret != 0 )
-                return( ret );
+                goto exit;
         }
     }
 
+exit:
+    if( ret != 0 )
+    {
+        *flags = (uint32_t) -1;
+        return( ret );
+    }
+
     if( *flags != 0 )
         return( MBEDTLS_ERR_X509_CERT_VERIFY_FAILED );
 
diff --git a/tests/suites/test_suite_x509parse.data b/tests/suites/test_suite_x509parse.data
index 9d3108aba876..6df52987505d 100644
--- a/tests/suites/test_suite_x509parse.data
+++ b/tests/suites/test_suite_x509parse.data
@@ -1204,7 +1204,7 @@ mbedtls_x509_crt_verify_max:""data_files/test-ca2.crt"":""data_files/dir-maxpath"":M
 
 X509 CRT verify long chain (max intermediate CA + 1)
 depends_on:MBEDTLS_SHA256_C:MBEDTLS_ECDSA_C:MBEDTLS_ECP_DP_SECP256R1_ENABLED
-mbedtls_x509_crt_verify_max:""data_files/dir-maxpath/00.crt"":""data_files/dir-maxpath"":MBEDTLS_X509_MAX_INTERMEDIATE_CA+1:MBEDTLS_ERR_X509_CERT_VERIFY_FAILED:0
+mbedtls_x509_crt_verify_max:""data_files/dir-maxpath/00.crt"":""data_files/dir-maxpath"":MBEDTLS_X509_MAX_INTERMEDIATE_CA+1:MBEDTLS_ERR_X509_CERT_VERIFY_FAILED:-1
 
 X509 CRT verify chain #1 (zero pathlen intermediate)
 depends_on:MBEDTLS_SHA256_C:MBEDTLS_RSA_C"
CVE-2017-6349,"From 3eb1637b1bba19519885dd6d377bd5596e91d22c Mon Sep 17 00:00:00 2001
From: Bram Moolenaar <Bram@vim.org>
Date: Sun, 26 Feb 2017 18:11:36 +0100
Subject: [PATCH] patch 8.0.0377: possible overflow when reading corrupted undo
 file

Problem:    Possible overflow when reading corrupted undo file.
Solution:   Check if allocated size is not too big. (King)
---
 src/undo.c    | 5 +++--
 src/version.c | 2 ++
 2 files changed, 5 insertions(+), 2 deletions(-)

diff --git a/src/undo.c b/src/undo.c
index b69f3187235c4..ba7c0b83c7bfe 100644
--- a/src/undo.c
+++ b/src/undo.c
@@ -1787,7 +1787,7 @@ u_read_undo(char_u *name, char_u *hash, char_u *orig_name)
     linenr_T	line_lnum;
     colnr_T	line_colnr;
     linenr_T	line_count;
-    int		num_head = 0;
+    long	num_head = 0;
     long	old_header_seq, new_header_seq, cur_header_seq;
     long	seq_last, seq_cur;
     long	last_save_nr = 0;
@@ -1974,7 +1974,8 @@ u_read_undo(char_u *name, char_u *hash, char_u *orig_name)
      * When there are no headers uhp_table is NULL. */
     if (num_head > 0)
     {
-	uhp_table = (u_header_T **)U_ALLOC_LINE(
+	if (num_head < LONG_MAX / (long)sizeof(u_header_T *))
+	    uhp_table = (u_header_T **)U_ALLOC_LINE(
 					     num_head * sizeof(u_header_T *));
 	if (uhp_table == NULL)
 	    goto error;
diff --git a/src/version.c b/src/version.c
index 8d1454197d06e..c79020b211133 100644
--- a/src/version.c
+++ b/src/version.c
@@ -764,6 +764,8 @@ static char *(features[]) =
 
 static int included_patches[] =
 {   /* Add new patch number below this line */
+/**/
+    377,
 /**/
     376,
 /**/"
CVE-2017-17823,"From 91ef7909a5c51203f330cbecf986472900b60983 Mon Sep 17 00:00:00 2001
From: plegall <plg@piwigo.org>
Date: Mon, 18 Dec 2017 17:09:56 +0100
Subject: [PATCH] (cp 9671454) fixes #826, check input parameter order_by in
 configuration

---
 admin/configuration.php | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/admin/configuration.php b/admin/configuration.php
index 9e8cc52687..caed2a1bc6 100644
--- a/admin/configuration.php
+++ b/admin/configuration.php
@@ -161,6 +161,8 @@
       {
         if ( !empty($_POST['order_by']) )
         {
+          check_input_parameter('order_by', $_POST, true, '/^('.implode('|', array_keys($sort_fields)).')$/');
+
           $used = array();
           foreach ($_POST['order_by'] as $i => $val)
           {"
CVE-2017-14173,"From 50f54462076648ac2e36c3f58f4dadd4babbf1c9 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Fri, 1 Sep 2017 09:22:37 -0400
Subject: [PATCH] https://github.com/ImageMagick/ImageMagick/issues/713

---
 coders/txt.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/coders/txt.c b/coders/txt.c
index 16e7ac2e94c..051f6bef2b2 100644
--- a/coders/txt.c
+++ b/coders/txt.c
@@ -446,7 +446,9 @@ static Image *ReadTXTImage(const ImageInfo *image_info,ExceptionInfo *exception)
       ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
     image->columns=width;
     image->rows=height;
-    for (depth=1; (GetQuantumRange(depth)+1) < max_value; depth++) ;
+    for (depth=1; (GetQuantumRange(depth)+1) < max_value; depth++)
+      if (depth >= 64)
+        break;
     image->depth=depth;
     status=SetImageExtent(image,image->columns,image->rows,exception);
     if (status == MagickFalse)"
CVE-2017-0376,"From 56a7c5bc15e0447203a491c1ee37de9939ad1dcd Mon Sep 17 00:00:00 2001
From: David Goulet <dgoulet@torproject.org>
Date: Mon, 5 Jun 2017 11:11:42 -0400
Subject: [PATCH] TROVE-2017-005: Fix assertion failure in
 connection_edge_process_relay_cell

On an hidden service rendezvous circuit, a BEGIN_DIR could be sent
(maliciously) which would trigger a tor_assert() because
connection_edge_process_relay_cell() thought that the circuit is an
or_circuit_t but is an origin circuit in reality.

Fixes #22494

Reported-by: Roger Dingledine <arma@torproject.org>
Signed-off-by: David Goulet <dgoulet@torproject.org>
---
 changes/trove-2017-005 | 7 +++++++
 src/or/relay.c         | 3 ++-
 2 files changed, 9 insertions(+), 1 deletion(-)
 create mode 100644 changes/trove-2017-005

diff --git a/changes/trove-2017-005 b/changes/trove-2017-005
new file mode 100644
index 00000000000..cebb013f865
--- /dev/null
+++ b/changes/trove-2017-005
@@ -0,0 +1,7 @@
+  o Major bugfixes (hidden service, relay, security):
+    - Fix an assertion failure caused by receiving a BEGIN_DIR cell on
+      a hidden service rendezvous circuit. Fixes bug 22494, tracked as
+      TROVE-2017-005 and CVE-2017-0376; bugfix on 0.2.2.1-alpha. Found
+      by armadev.
+
+
diff --git a/src/or/relay.c b/src/or/relay.c
index 7f06c6e1459..59b79f95c97 100644
--- a/src/or/relay.c
+++ b/src/or/relay.c
@@ -1297,7 +1297,8 @@ connection_edge_process_relay_cell(cell_t *cell, circuit_t *circ,
                ""Begin cell for known stream. Dropping."");
         return 0;
       }
-      if (rh.command == RELAY_COMMAND_BEGIN_DIR) {
+      if (rh.command == RELAY_COMMAND_BEGIN_DIR &&
+          circ->purpose != CIRCUIT_PURPOSE_S_REND_JOINED) {
         /* Assign this circuit and its app-ward OR connection a unique ID,
          * so that we can measure download times. The local edge and dir
          * connection will be assigned the same ID when they are created"
CVE-2017-11449,"From b007dd3a048097d8f58949297f5b434612e1e1a3 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Thu, 6 Jul 2017 06:41:49 -0400
Subject: [PATCH] ...

---
 coders/mpc.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/coders/mpc.c b/coders/mpc.c
index fc489552a1b..092367a78fd 100644
--- a/coders/mpc.c
+++ b/coders/mpc.c
@@ -1008,6 +1008,7 @@ ModuleExport size_t RegisterMPCImage(void)
   entry=SetMagickInfo(""CACHE"");
   entry->description=ConstantString(""Magick Persistent Cache image format"");
   entry->module=ConstantString(""MPC"");
+  entry->seekable_stream=MagickTrue;
   entry->stealth=MagickTrue;
   (void) RegisterMagickInfo(entry);
   entry=SetMagickInfo(""MPC"");
@@ -1015,6 +1016,7 @@ ModuleExport size_t RegisterMPCImage(void)
   entry->encoder=(EncodeImageHandler *) WriteMPCImage;
   entry->magick=(IsImageFormatHandler *) IsMPC;
   entry->description=ConstantString(""Magick Persistent Cache image format"");
+  entry->seekable_stream=MagickTrue;
   entry->module=ConstantString(""MPC"");
   (void) RegisterMagickInfo(entry);
   return(MagickImageCoderSignature);"
CVE-2017-8928,"From 3c937f75ba5853ada175542d5c4849fb95eb64cd Mon Sep 17 00:00:00 2001
From: andryyy <andre.peters@debinux.de>
Date: Sun, 7 May 2017 13:38:31 +0200
Subject: [PATCH] Add OWASP CSRF Protector, add more secure session handling

---
 data/web/inc/lib/composer.json                |  3 +-
 data/web/inc/lib/composer.lock                | 42 +++++++++++++-
 .../lib/vendor/composer/autoload_classmap.php |  8 +++
 .../lib/vendor/composer/autoload_static.php   |  8 +++
 .../inc/lib/vendor/composer/installed.json    | 38 ++++++++++++
 .../inc/lib/vendor/owasp/csrf-protector-php   |  1 +
 data/web/inc/prerequisites.inc.php            | 35 ++++++-----
 data/web/inc/sessions.inc.php                 | 58 +++++++++++++++++++
 data/web/inc/vars.inc.php                     |  2 +
 9 files changed, 174 insertions(+), 21 deletions(-)
 create mode 160000 data/web/inc/lib/vendor/owasp/csrf-protector-php
 create mode 100644 data/web/inc/sessions.inc.php

diff --git a/data/web/inc/lib/composer.json b/data/web/inc/lib/composer.json
index d811958b53..7adb5ca098 100644
--- a/data/web/inc/lib/composer.json
+++ b/data/web/inc/lib/composer.json
@@ -1,6 +1,7 @@
 {
     ""require"": {
         ""robthree/twofactorauth"": ""^1.6"",
-        ""yubico/u2flib-server"": ""^1.0""
+        ""yubico/u2flib-server"": ""^1.0"",
+        ""owasp/csrf-protector-php"": ""dev-master""
     }
 }
diff --git a/data/web/inc/lib/composer.lock b/data/web/inc/lib/composer.lock
index 692521d2cb..d0f94fc4a8 100644
--- a/data/web/inc/lib/composer.lock
+++ b/data/web/inc/lib/composer.lock
@@ -4,8 +4,44 @@
         ""Read more about it at https://getcomposer.org/doc/01-basic-usage.md#composer-lock-the-lock-file"",
         ""This file is @generated automatically""
     ],
-    ""content-hash"": ""5652a086b6d277d72d7ae0341e517b1e"",
+    ""content-hash"": ""413fc63dc6c7815f0a175217bccb490a"",
     ""packages"": [
+        {
+            ""name"": ""owasp/csrf-protector-php"",
+            ""version"": ""dev-master"",
+            ""source"": {
+                ""type"": ""git"",
+                ""url"": ""https://github.com/mebjas/CSRF-Protector-PHP.git"",
+                ""reference"": ""aec0d6966992363a7192b2ae9fb0a9643e8fa26b""
+            },
+            ""dist"": {
+                ""type"": ""zip"",
+                ""url"": ""https://api.github.com/repos/mebjas/CSRF-Protector-PHP/zipball/aec0d6966992363a7192b2ae9fb0a9643e8fa26b"",
+                ""reference"": ""aec0d6966992363a7192b2ae9fb0a9643e8fa26b"",
+                ""shasum"": """"
+            },
+            ""require-dev"": {
+                ""satooshi/php-coveralls"": ""~1.0""
+            },
+            ""type"": ""library"",
+            ""autoload"": {
+                ""classmap"": [
+                    ""libs/csrf/""
+                ]
+            },
+            ""notification-url"": ""https://packagist.org/downloads/"",
+            ""license"": [
+                ""APACHE""
+            ],
+            ""description"": ""CSRF protector php, a standalone php library for csrf mitigation in web applications. Easy to integrate in any php web app."",
+            ""homepage"": ""https://github.com/mebjas/CSRF-Protector-PHP"",
+            ""keywords"": [
+                ""csrf"",
+                ""owasp"",
+                ""security""
+            ],
+            ""time"": ""2017-04-12 05:47:07""
+        },
         {
             ""name"": ""robthree/twofactorauth"",
             ""version"": ""1.6"",
@@ -92,7 +128,9 @@
     ""packages-dev"": [],
     ""aliases"": [],
     ""minimum-stability"": ""stable"",
-    ""stability-flags"": [],
+    ""stability-flags"": {
+        ""owasp/csrf-protector-php"": 20
+    },
     ""prefer-stable"": false,
     ""prefer-lowest"": false,
     ""platform"": [],
diff --git a/data/web/inc/lib/vendor/composer/autoload_classmap.php b/data/web/inc/lib/vendor/composer/autoload_classmap.php
index 44393069fe..b62afd4e21 100644
--- a/data/web/inc/lib/vendor/composer/autoload_classmap.php
+++ b/data/web/inc/lib/vendor/composer/autoload_classmap.php
@@ -6,6 +6,14 @@
 $baseDir = dirname($vendorDir);
 
 return array(
+    'alreadyInitializedException' => $vendorDir . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+    'baseJSFileNotFoundExceptio' => $vendorDir . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+    'configFileNotFoundException' => $vendorDir . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+    'csrfProtector' => $vendorDir . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+    'incompleteConfigurationException' => $vendorDir . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+    'jsFileNotFoundException' => $vendorDir . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+    'logDirectoryNotFoundException' => $vendorDir . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+    'logFileWriteError' => $vendorDir . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
     'u2flib_server\\Error' => $vendorDir . '/yubico/u2flib-server/src/u2flib_server/U2F.php',
     'u2flib_server\\RegisterRequest' => $vendorDir . '/yubico/u2flib-server/src/u2flib_server/U2F.php',
     'u2flib_server\\Registration' => $vendorDir . '/yubico/u2flib-server/src/u2flib_server/U2F.php',
diff --git a/data/web/inc/lib/vendor/composer/autoload_static.php b/data/web/inc/lib/vendor/composer/autoload_static.php
index 5e2dabab16..d6d6268543 100644
--- a/data/web/inc/lib/vendor/composer/autoload_static.php
+++ b/data/web/inc/lib/vendor/composer/autoload_static.php
@@ -21,6 +21,14 @@ class ComposerStaticInit873464e4bd965a3168f133248b1b218b
     );
 
     public static $classMap = array (
+        'alreadyInitializedException' => __DIR__ . '/..' . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+        'baseJSFileNotFoundExceptio' => __DIR__ . '/..' . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+        'configFileNotFoundException' => __DIR__ . '/..' . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+        'csrfProtector' => __DIR__ . '/..' . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+        'incompleteConfigurationException' => __DIR__ . '/..' . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+        'jsFileNotFoundException' => __DIR__ . '/..' . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+        'logDirectoryNotFoundException' => __DIR__ . '/..' . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
+        'logFileWriteError' => __DIR__ . '/..' . '/owasp/csrf-protector-php/libs/csrf/csrfprotector.php',
         'u2flib_server\\Error' => __DIR__ . '/..' . '/yubico/u2flib-server/src/u2flib_server/U2F.php',
         'u2flib_server\\RegisterRequest' => __DIR__ . '/..' . '/yubico/u2flib-server/src/u2flib_server/U2F.php',
         'u2flib_server\\Registration' => __DIR__ . '/..' . '/yubico/u2flib-server/src/u2flib_server/U2F.php',
diff --git a/data/web/inc/lib/vendor/composer/installed.json b/data/web/inc/lib/vendor/composer/installed.json
index bbe76d824f..fa07bcd470 100644
--- a/data/web/inc/lib/vendor/composer/installed.json
+++ b/data/web/inc/lib/vendor/composer/installed.json
@@ -84,5 +84,43 @@
         ],
         ""description"": ""Library for U2F implementation"",
         ""homepage"": ""https://developers.yubico.com/php-u2flib-server""
+    },
+    {
+        ""name"": ""owasp/csrf-protector-php"",
+        ""version"": ""dev-master"",
+        ""version_normalized"": ""9999999-dev"",
+        ""source"": {
+            ""type"": ""git"",
+            ""url"": ""https://github.com/mebjas/CSRF-Protector-PHP.git"",
+            ""reference"": ""aec0d6966992363a7192b2ae9fb0a9643e8fa26b""
+        },
+        ""dist"": {
+            ""type"": ""zip"",
+            ""url"": ""https://api.github.com/repos/mebjas/CSRF-Protector-PHP/zipball/aec0d6966992363a7192b2ae9fb0a9643e8fa26b"",
+            ""reference"": ""aec0d6966992363a7192b2ae9fb0a9643e8fa26b"",
+            ""shasum"": """"
+        },
+        ""require-dev"": {
+            ""satooshi/php-coveralls"": ""~1.0""
+        },
+        ""time"": ""2017-04-12T05:47:07+00:00"",
+        ""type"": ""library"",
+        ""installation-source"": ""source"",
+        ""autoload"": {
+            ""classmap"": [
+                ""libs/csrf/""
+            ]
+        },
+        ""notification-url"": ""https://packagist.org/downloads/"",
+        ""license"": [
+            ""APACHE""
+        ],
+        ""description"": ""CSRF protector php, a standalone php library for csrf mitigation in web applications. Easy to integrate in any php web app."",
+        ""homepage"": ""https://github.com/mebjas/CSRF-Protector-PHP"",
+        ""keywords"": [
+            ""csrf"",
+            ""owasp"",
+            ""security""
+        ]
     }
 ]
diff --git a/data/web/inc/lib/vendor/owasp/csrf-protector-php b/data/web/inc/lib/vendor/owasp/csrf-protector-php
new file mode 160000
index 0000000000..aec0d69669
--- /dev/null
+++ b/data/web/inc/lib/vendor/owasp/csrf-protector-php
@@ -0,0 +1 @@
+Subproject commit aec0d6966992363a7192b2ae9fb0a9643e8fa26b
diff --git a/data/web/inc/prerequisites.inc.php b/data/web/inc/prerequisites.inc.php
index 76ed81eef2..902b46aff0 100644
--- a/data/web/inc/prerequisites.inc.php
+++ b/data/web/inc/prerequisites.inc.php
@@ -1,20 +1,5 @@
 <?php
-//ini_set(""session.cookie_secure"", 1);
-//ini_set(""session.cookie_httponly"", 1);
-session_start();
-if (isset($_POST[""logout""])) {
-  if (isset($_SESSION[""dual-login""])) {
-    $_SESSION[""mailcow_cc_username""] = $_SESSION[""dual-login""][""username""];
-    $_SESSION[""mailcow_cc_role""] = $_SESSION[""dual-login""][""role""];
-    unset($_SESSION[""dual-login""]);
-  }
-  else {
-    session_unset();
-    session_destroy();
-    session_write_close();
-    setcookie(session_name(),'',0,'/');
-  }
-}
+require_once 'inc/sessions.inc.php';
 
 require_once 'inc/vars.inc.php';
 if (file_exists('./inc/vars.local.inc.php')) {
@@ -24,11 +9,25 @@
 // Yubi OTP API
 require_once 'inc/lib/Yubico.php';
 
-// U2F API + T/HOTP API
+// Autoload composer
 require_once 'inc/lib/vendor/autoload.php';
-$u2f = new u2flib_server\U2F('https://' . $_SERVER['SERVER_NAME']);
+
+// U2F API + T/HOTP API
+$u2f = new u2flib_server\U2F('https://' . $_SERVER['HTTP_HOST']);
 $tfa = new RobThree\Auth\TwoFactorAuth('mailcow UI');
 
+// OWASP CSRF Protector
+$csrfProtector = new csrfProtector;
+class mailcowCsrfProtector extends csrfprotector {
+  public static function logCSRFattack() {
+    $_SESSION['return'] = array(
+      'type' => 'danger',
+      'msg' => 'CSRF violation'
+    );
+  }
+}
+mailcowCsrfProtector::init();
+
 // Redis
 $redis = new Redis();
 $redis->connect('redis-mailcow', 6379);
diff --git a/data/web/inc/sessions.inc.php b/data/web/inc/sessions.inc.php
new file mode 100644
index 0000000000..e6beb4853b
--- /dev/null
+++ b/data/web/inc/sessions.inc.php
@@ -0,0 +1,58 @@
+<?php
+// Start session
+ini_set(""session.cookie_httponly"", 1);
+if (isset($_SERVER['HTTP_X_FORWARDED_PROTO']) && 
+  strtolower($_SERVER['HTTP_X_FORWARDED_PROTO']) == ""https"") {
+  ini_set(""session.cookie_secure"", 1);
+  $IS_HTTPS = true;
+}
+elseif (isset($_SERVER['HTTPS'])) {
+  ini_set(""session.cookie_secure"", 1);
+  $IS_HTTPS = true;
+}
+else {
+  $IS_HTTPS = false;
+}
+session_set_cookie_params($GLOBALS['SESSION_LIFETIME'], '/', $_SERVER['SERVER_NAME'], $IS_HTTPS, true);
+session_start();
+
+// Handle logouts
+if (isset($_POST[""logout""])) {
+  if (isset($_SESSION[""dual-login""])) {
+    $_SESSION[""mailcow_cc_username""] = $_SESSION[""dual-login""][""username""];
+    $_SESSION[""mailcow_cc_role""] = $_SESSION[""dual-login""][""role""];
+    unset($_SESSION[""dual-login""]);
+  }
+  else {
+    session_regenerate_id(true);
+    session_unset();
+    session_destroy();
+    session_write_close();
+    header(""Location: /"");
+  }
+}
+
+// Set session IP and UA
+if (!isset($_SESSION['SESS_REMOTE_IP'])) {
+  $_SESSION['SESS_REMOTE_IP'] = $_SERVER['REMOTE_ADDR'];
+}
+if (!isset($_SESSION['SESS_REMOTE_UA'])) {
+  $_SESSION['SESS_REMOTE_UA'] = $_SERVER['HTTP_USER_AGENT'];
+}
+
+// Check session
+function session_check() {
+  if (!isset($_SESSION['SESS_REMOTE_IP']) || !isset($_SESSION['SESS_REMOTE_UA'])) {
+    return false;
+  }
+  if ($_SESSION['SESS_REMOTE_IP'] != $_SERVER['REMOTE_ADDR']) {
+    return false;
+  }
+  if ($_SESSION['SESS_REMOTE_UA'] != $_SERVER['HTTP_USER_AGENT']) {
+    return false;
+  }
+  return true;
+}
+if (isset($_SESSION['mailcow_cc_role']) && session_check() === false) {
+  exit(""Invalid session"");
+}
diff --git a/data/web/inc/vars.inc.php b/data/web/inc/vars.inc.php
index 6666d58c86..faef565d75 100644
--- a/data/web/inc/vars.inc.php
+++ b/data/web/inc/vars.inc.php
@@ -53,5 +53,7 @@
 // Rows until pagination begins
 $PAGINATION_SIZE = 10;
 
+// Session lifetime in seconds
+$SESSION_LIFETIME = 3600;
 
 ?>"
CVE-2017-6308,"From c5044689e50039635e7700fe2472fd632ac77176 Mon Sep 17 00:00:00 2001
From: Eric Sesterhenn <eric.sesterhenn@x41-dsec.de>
Date: Fri, 17 Feb 2017 09:43:21 +0100
Subject: [PATCH] Fix integer overflows and harden memory allocator.

---
 src/alloc.c | 55 +++++++++++++++++++++++++++++++++++++----------------
 src/alloc.h | 10 +++++-----
 2 files changed, 44 insertions(+), 21 deletions(-)

diff --git a/src/alloc.c b/src/alloc.c
index 47d192f..c23909c 100644
--- a/src/alloc.c
+++ b/src/alloc.c
@@ -40,14 +40,23 @@ get_alloc_limit()
     return alloc_limit;
 }
 
+size_t
+check_mul_overflow(size_t a, size_t b, size_t* res)
+{
+    size_t tmp = a * b;
+    if (a != 0 && tmp / a != b) return 1;
+    *res = tmp;
+    return 0;
+}
+
 static void
 alloc_limit_failure (char *fn_name, size_t size)
 {
-    fprintf (stderr, 
+    fprintf (stderr,
              ""%s: Maximum allocation size exceeded ""
              ""(maxsize = %lu; size = %lu).\n"",
              fn_name,
-             (unsigned long)alloc_limit, 
+             (unsigned long)alloc_limit,
              (unsigned long)size);
 }
 
@@ -56,17 +65,21 @@ alloc_limit_assert (char *fn_name, size_t size)
 {
     if (alloc_limit && size > alloc_limit)
     {
-	alloc_limit_failure (fn_name, size);
-	exit (-1);
+        alloc_limit_failure (fn_name, size);
+        exit (-1);
     }
 }
 
 /* attempts to malloc memory, if fails print error and call abort */
 void*
-xmalloc (size_t size)
+xmalloc (size_t num, size_t size)
 {
-    void *ptr = malloc (size);
-    if (!ptr 
+    size_t res;
+    if (check_mul_overflow(num, size, &res))
+        abort();
+
+    void *ptr = malloc (res);
+    if (!ptr
         && (size != 0))         /* some libc don't like size == 0 */
     {
         perror (""xmalloc: Memory allocation failure"");
@@ -77,20 +90,29 @@ xmalloc (size_t size)
 
 /* Allocates memory but only up to a limit */
 void*
-checked_xmalloc (size_t size)
+checked_xmalloc (size_t num, size_t size)
 {
-    alloc_limit_assert (""checked_xmalloc"", size);
-    return xmalloc (size);
+    size_t res;
+    if (check_mul_overflow(num, size, &res))
+        abort();
+
+    alloc_limit_assert (""checked_xmalloc"", res);
+    return xmalloc (num, size);
 }
 
 /* xmallocs memory and clears it out */
 void*
 xcalloc (size_t num, size_t size)
 {
-    void *ptr = malloc(num * size);
+    size_t res;
+    if (check_mul_overflow(num, size, &res))
+        abort();
+
+    void *ptr;
+    ptr = malloc(res);
     if (ptr)
     {
-        memset (ptr, '\0', (num * size));
+        memset (ptr, '\0', (res));
     }
     return ptr;
 }
@@ -99,9 +121,10 @@ xcalloc (size_t num, size_t size)
 void*
 checked_xcalloc (size_t num, size_t size)
 {
-    alloc_limit_assert (""checked_xcalloc"", (num *size));
+    size_t res;
+    if (check_mul_overflow(num, size, &res))
+        abort();
+
+    alloc_limit_assert (""checked_xcalloc"", (res));
     return xcalloc (num, size);
 }
-
-
-
diff --git a/src/alloc.h b/src/alloc.h
index d63f6a3..8fbd6bf 100644
--- a/src/alloc.h
+++ b/src/alloc.h
@@ -35,20 +35,20 @@ extern void free (void*);
 extern void set_alloc_limit (size_t size);
 extern size_t get_alloc_limit();
 extern void alloc_limit_assert (char *fn_name, size_t size);
-extern void* checked_xmalloc (size_t size);
-extern void* xmalloc (size_t size);
+extern void* checked_xmalloc (size_t num, size_t size);
+extern void* xmalloc (size_t num, size_t size);
 extern void* checked_xcalloc (size_t num, size_t size);
 extern void* xcalloc (size_t num, size_t size);
 
 #define XMALLOC(_type,_num)			                \
-        ((_type*)xmalloc((_num)*sizeof(_type)))
+        ((_type*)xmalloc((_num), sizeof(_type)))
 #define XCALLOC(_type,_num) 				        \
         ((_type*)xcalloc((_num), sizeof (_type)))
 #define CHECKED_XMALLOC(_type,_num) 			        \
-        ((_type*)checked_xmalloc((_num)*sizeof(_type)))
+        ((_type*)checked_xmalloc((_num),sizeof(_type)))
 #define CHECKED_XCALLOC(_type,_num) 			        \
         ((_type*)checked_xcalloc((_num),sizeof(_type)))
 #define XFREE(_ptr)						\
-	do { if (_ptr) { free (_ptr); _ptr = 0; } } while (0)
+        do { if (_ptr) { free (_ptr); _ptr = 0; } } while (0)
 
 #endif /* ALLOC_H */"
CVE-2017-14638,"From be7185faf7f52674028977dcf501c6039ff03aa5 Mon Sep 17 00:00:00 2001
From: Gilles Boccon-Gibod <bok@bok.net>
Date: Sat, 9 Sep 2017 10:36:28 -0700
Subject: [PATCH] fix for #182

---
 Source/C++/Core/Ap4AtomFactory.cpp | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/Source/C++/Core/Ap4AtomFactory.cpp b/Source/C++/Core/Ap4AtomFactory.cpp
index 687aab551..f5bd06969 100644
--- a/Source/C++/Core/Ap4AtomFactory.cpp
+++ b/Source/C++/Core/Ap4AtomFactory.cpp
@@ -490,13 +490,17 @@ AP4_AtomFactory::CreateAtomFromStream(AP4_ByteStream& stream,
           case AP4_ATOM_TYPE_HVCE:
             if (atom_is_large) return AP4_ERROR_INVALID_FORMAT;
             atom = AP4_HvccAtom::Create(size_32, stream);
-            atom->SetType(AP4_ATOM_TYPE_HVCE);
+            if (atom) {
+                atom->SetType(AP4_ATOM_TYPE_HVCE);
+            }
             break;
 
           case AP4_ATOM_TYPE_AVCE:
             if (atom_is_large) return AP4_ERROR_INVALID_FORMAT;
             atom = AP4_AvccAtom::Create(size_32, stream);
-            atom->SetType(AP4_ATOM_TYPE_AVCE);
+            if (atom) {
+                atom->SetType(AP4_ATOM_TYPE_AVCE);
+            }
             break;
 
     #if !defined(AP4_CONFIG_MINI_BUILD)"
CVE-2017-18261,"From adb4f11e0a8f4e29900adb2b7af28b6bbd5c1fa4 Mon Sep 17 00:00:00 2001
From: Ding Tianhong <dingtianhong@huawei.com>
Date: Thu, 10 Aug 2017 10:52:45 +0800
Subject: [PATCH] clocksource/drivers/arm_arch_timer: Avoid infinite recursion
 when ftrace is enabled

On platforms with an arch timer erratum workaround, it's possible for
arch_timer_reg_read_stable() to recurse into itself when certain
tracing options are enabled, leading to stack overflows and related
problems.

For example, when PREEMPT_TRACER and FUNCTION_GRAPH_TRACER are
selected, it's possible to trigger this with:

$ mount -t debugfs nodev /sys/kernel/debug/
$ echo function_graph > /sys/kernel/debug/tracing/current_tracer

The problem is that in such cases, preempt_disable() instrumentation
attempts to acquire a timestamp via trace_clock(), resulting in a call
back to arch_timer_reg_read_stable(), and hence recursion.

This patch changes arch_timer_reg_read_stable() to use
preempt_{disable,enable}_notrace(), which avoids this.

This problem is similar to the fixed by upstream commit 96b3d28bf4
(""sched/clock: Prevent tracing recursion in sched_clock_cpu()"").

Fixes: 6acc71ccac71 (""arm64: arch_timer: Allows a CPU-specific erratum to only affect a subset of CPUs"")
Signed-off-by: Ding Tianhong <dingtianhong@huawei.com>
Acked-by: Mark Rutland <mark.rutland@arm.com>
Acked-by: Marc Zyngier <marc.zyngier@arm.com>
Signed-off-by: Daniel Lezcano <daniel.lezcano@linaro.org>
---
 arch/arm64/include/asm/arch_timer.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/arch/arm64/include/asm/arch_timer.h b/arch/arm64/include/asm/arch_timer.h
index 74d08e44a651b9..a652ce0a5cb2c3 100644
--- a/arch/arm64/include/asm/arch_timer.h
+++ b/arch/arm64/include/asm/arch_timer.h
@@ -65,13 +65,13 @@ DECLARE_PER_CPU(const struct arch_timer_erratum_workaround *,
 	u64 _val;							\
 	if (needs_unstable_timer_counter_workaround()) {		\
 		const struct arch_timer_erratum_workaround *wa;		\
-		preempt_disable();					\
+		preempt_disable_notrace();				\
 		wa = __this_cpu_read(timer_unstable_counter_workaround); \
 		if (wa && wa->read_##reg)				\
 			_val = wa->read_##reg();			\
 		else							\
 			_val = read_sysreg(reg);			\
-		preempt_enable();					\
+		preempt_enable_notrace();				\
 	} else {							\
 		_val = read_sysreg(reg);				\
 	}								\"
CVE-2017-14341,"From 7d63315a64267c565d1f34b9cb523a14616fed24 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Mon, 7 Aug 2017 14:59:43 -0400
Subject: [PATCH] https://github.com/ImageMagick/ImageMagick/issues/654

---
 coders/wpg.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/coders/wpg.c b/coders/wpg.c
index ae43f9cc364..4756dba3f4c 100644
--- a/coders/wpg.c
+++ b/coders/wpg.c
@@ -1035,6 +1035,8 @@ static Image *ReadWPGImage(const ImageInfo *image_info,
           if(i==EOF)
             break;
           Rd_WP_DWORD(image,&Rec.RecordLength);
+          if (Rec.RecordLength > GetBlobSize(image))
+            ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
           if(EOFBlob(image))
             break;"
CVE-2017-16533,"From f043bfc98c193c284e2cd768fefabe18ac2fed9b Mon Sep 17 00:00:00 2001
From: Jaejoong Kim <climbbb.kim@gmail.com>
Date: Thu, 28 Sep 2017 19:16:30 +0900
Subject: [PATCH] HID: usbhid: fix out-of-bounds bug

The hid descriptor identifies the length and type of subordinate
descriptors for a device. If the received hid descriptor is smaller than
the size of the struct hid_descriptor, it is possible to cause
out-of-bounds.

In addition, if bNumDescriptors of the hid descriptor have an incorrect
value, this can also cause out-of-bounds while approaching hdesc->desc[n].

So check the size of hid descriptor and bNumDescriptors.

	BUG: KASAN: slab-out-of-bounds in usbhid_parse+0x9b1/0xa20
	Read of size 1 at addr ffff88006c5f8edf by task kworker/1:2/1261

	CPU: 1 PID: 1261 Comm: kworker/1:2 Not tainted
	4.14.0-rc1-42251-gebb2c2437d80 #169
	Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS Bochs 01/01/2011
	Workqueue: usb_hub_wq hub_event
	Call Trace:
	__dump_stack lib/dump_stack.c:16
	dump_stack+0x292/0x395 lib/dump_stack.c:52
	print_address_description+0x78/0x280 mm/kasan/report.c:252
	kasan_report_error mm/kasan/report.c:351
	kasan_report+0x22f/0x340 mm/kasan/report.c:409
	__asan_report_load1_noabort+0x19/0x20 mm/kasan/report.c:427
	usbhid_parse+0x9b1/0xa20 drivers/hid/usbhid/hid-core.c:1004
	hid_add_device+0x16b/0xb30 drivers/hid/hid-core.c:2944
	usbhid_probe+0xc28/0x1100 drivers/hid/usbhid/hid-core.c:1369
	usb_probe_interface+0x35d/0x8e0 drivers/usb/core/driver.c:361
	really_probe drivers/base/dd.c:413
	driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
	__device_attach_driver+0x230/0x290 drivers/base/dd.c:653
	bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
	__device_attach+0x26e/0x3d0 drivers/base/dd.c:710
	device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
	bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
	device_add+0xd0b/0x1660 drivers/base/core.c:1835
	usb_set_configuration+0x104e/0x1870 drivers/usb/core/message.c:1932
	generic_probe+0x73/0xe0 drivers/usb/core/generic.c:174
	usb_probe_device+0xaf/0xe0 drivers/usb/core/driver.c:266
	really_probe drivers/base/dd.c:413
	driver_probe_device+0x610/0xa00 drivers/base/dd.c:557
	__device_attach_driver+0x230/0x290 drivers/base/dd.c:653
	bus_for_each_drv+0x161/0x210 drivers/base/bus.c:463
	__device_attach+0x26e/0x3d0 drivers/base/dd.c:710
	device_initial_probe+0x1f/0x30 drivers/base/dd.c:757
	bus_probe_device+0x1eb/0x290 drivers/base/bus.c:523
	device_add+0xd0b/0x1660 drivers/base/core.c:1835
	usb_new_device+0x7b8/0x1020 drivers/usb/core/hub.c:2457
	hub_port_connect drivers/usb/core/hub.c:4903
	hub_port_connect_change drivers/usb/core/hub.c:5009
	port_event drivers/usb/core/hub.c:5115
	hub_event+0x194d/0x3740 drivers/usb/core/hub.c:5195
	process_one_work+0xc7f/0x1db0 kernel/workqueue.c:2119
	worker_thread+0x221/0x1850 kernel/workqueue.c:2253
	kthread+0x3a1/0x470 kernel/kthread.c:231
	ret_from_fork+0x2a/0x40 arch/x86/entry/entry_64.S:431

Cc: stable@vger.kernel.org
Reported-by: Andrey Konovalov <andreyknvl@google.com>
Signed-off-by: Jaejoong Kim <climbbb.kim@gmail.com>
Tested-by: Andrey Konovalov <andreyknvl@google.com>
Acked-by: Alan Stern <stern@rowland.harvard.edu>
Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 drivers/hid/usbhid/hid-core.c | 12 +++++++++++-
 1 file changed, 11 insertions(+), 1 deletion(-)

diff --git a/drivers/hid/usbhid/hid-core.c b/drivers/hid/usbhid/hid-core.c
index 089bad8a9a21d6..045b5da9b99287 100644
--- a/drivers/hid/usbhid/hid-core.c
+++ b/drivers/hid/usbhid/hid-core.c
@@ -975,6 +975,8 @@ static int usbhid_parse(struct hid_device *hid)
 	unsigned int rsize = 0;
 	char *rdesc;
 	int ret, n;
+	int num_descriptors;
+	size_t offset = offsetof(struct hid_descriptor, desc);
 
 	quirks = usbhid_lookup_quirk(le16_to_cpu(dev->descriptor.idVendor),
 			le16_to_cpu(dev->descriptor.idProduct));
@@ -997,10 +999,18 @@ static int usbhid_parse(struct hid_device *hid)
 		return -ENODEV;
 	}
 
+	if (hdesc->bLength < sizeof(struct hid_descriptor)) {
+		dbg_hid(""hid descriptor is too short\n"");
+		return -EINVAL;
+	}
+
 	hid->version = le16_to_cpu(hdesc->bcdHID);
 	hid->country = hdesc->bCountryCode;
 
-	for (n = 0; n < hdesc->bNumDescriptors; n++)
+	num_descriptors = min_t(int, hdesc->bNumDescriptors,
+	       (hdesc->bLength - offset) / sizeof(struct hid_class_descriptor));
+
+	for (n = 0; n < num_descriptors; n++)
 		if (hdesc->desc[n].bDescriptorType == HID_DT_REPORT)
 			rsize = le16_to_cpu(hdesc->desc[n].wDescriptorLength);"
CVE-2017-17856,"From a5ec6ae161d72f01411169a938fa5f8baea16e8f Mon Sep 17 00:00:00 2001
From: Jann Horn <jannh@google.com>
Date: Mon, 18 Dec 2017 20:11:58 -0800
Subject: [PATCH] bpf: force strict alignment checks for stack pointers

Force strict alignment checks for stack pointers because the tracking of
stack spills relies on it; unaligned stack accesses can lead to corruption
of spilled registers, which is exploitable.

Fixes: f1174f77b50c (""bpf/verifier: rework value tracking"")
Signed-off-by: Jann Horn <jannh@google.com>
Signed-off-by: Alexei Starovoitov <ast@kernel.org>
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
---
 kernel/bpf/verifier.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index 77e4b5223867a2..102c519836f61c 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -1059,6 +1059,11 @@ static int check_ptr_alignment(struct bpf_verifier_env *env,
 		break;
 	case PTR_TO_STACK:
 		pointer_desc = ""stack "";
+		/* The stack spill tracking logic in check_stack_write()
+		 * and check_stack_read() relies on stack accesses being
+		 * aligned.
+		 */
+		strict = true;
 		break;
 	default:
 		break;"
CVE-2017-5473,"From f91fbe3d94c8346884271838ae3406ae633f6f15 Mon Sep 17 00:00:00 2001
From: Luca <deri@ntop.org>
Date: Thu, 12 Jan 2017 06:45:41 -0800
Subject: [PATCH] Check for presence of crsf in admin scripts

---
 src/Lua.cpp | 16 +++++++++++++---
 1 file changed, 13 insertions(+), 3 deletions(-)

diff --git a/src/Lua.cpp b/src/Lua.cpp
index 1160a38e248f..ec001f767c4f 100644
--- a/src/Lua.cpp
+++ b/src/Lua.cpp
@@ -5680,7 +5680,8 @@ int Lua::handle_script_request(struct mg_connection *conn,
   char *_cookies, user[64] = { '\0' }, outbuf[FILENAME_MAX];
   AddressTree ptree;
   int rc;
-
+  bool csrf_found = false;
+  
   if(!L) return(-1);
 
   luaL_openlibs(L); /* Load base libraries */
@@ -5693,11 +5694,11 @@ int Lua::handle_script_request(struct mg_connection *conn,
   lua_newtable(L);
   if(request_info->query_string != NULL) {
     char *query_string = strdup(request_info->query_string);
-
+    
     if(query_string) {
       char *where;
       char *tok;
-
+      
       // ntop->getTrace()->traceEvent(TRACE_WARNING, ""[HTTP] %s"", query_string);
 
       tok = strtok_r(query_string, ""&"", &where);
@@ -5759,6 +5760,8 @@ int Lua::handle_script_request(struct mg_connection *conn,
 				    msg, PAGE_ERROR, query_string, msg));
 		} else
 		  ntop->getRedis()->delKey(decoded_buf);
+
+		csrf_found = true;
 	      }
 
 	      lua_push_str_table_entry(L, tok, decoded_buf);
@@ -5777,6 +5780,13 @@ int Lua::handle_script_request(struct mg_connection *conn,
     } else
       ntop->getTrace()->traceEvent(TRACE_WARNING, ""Not enough memory"");
   }
+
+  if(strstr(request_info->uri, ""/admin/"") && (!csrf_found)) {
+    const char *msg = ""Missing CSRF parameter"";
+    
+    return(send_error(conn, 500 /* Internal server error */, msg, PAGE_ERROR, request_info->uri, msg));
+  }
+  
   lua_setglobal(L, ""_GET""); /* Like in php */
 
   /* _SERVER */"
CVE-2017-15732,"From ec8b3cc37d05b6625e24916b8f7253f830015b5f Mon Sep 17 00:00:00 2001
From: Thorsten Rinne <thorsten@phpmyfaq.de>
Date: Tue, 3 Oct 2017 12:30:39 +0200
Subject: [PATCH] Added missing CSRF check

---
 phpmyfaq/admin/news.php | 74 ++++++++++++++++++-----------------------
 1 file changed, 33 insertions(+), 41 deletions(-)

diff --git a/phpmyfaq/admin/news.php b/phpmyfaq/admin/news.php
index c204df0f00..1bf0657e71 100644
--- a/phpmyfaq/admin/news.php
+++ b/phpmyfaq/admin/news.php
@@ -29,12 +29,18 @@
 
 $news = new PMF_News($faqConfig);
 
+$csrfToken = PMF_Filter::filterInput(INPUT_POST, 'csrf', FILTER_SANITIZE_STRING);
+if (!isset($_SESSION['phpmyfaq_csrf_token']) || $_SESSION['phpmyfaq_csrf_token'] !== $csrfToken) {
+    $csrfCheck = false;
+} else {
+    $csrfCheck = true;
+}
+
 if ('addnews' == $action && $user->perm->checkRight($user->getUserId(), 'addnews')) {
     ?>
         <header class=""row"">
             <div class=""col-lg-12"">
-                <h2 class=""page-header""><i aria-hidden=""true"" class=""fa fa-pencil""></i> <?php echo $PMF_LANG['ad_news_add'];
-    ?></h2>
+                <h2 class=""page-header""><i aria-hidden=""true"" class=""fa fa-pencil""></i> <?php echo $PMF_LANG['ad_news_add'] ?></h2>
             </div>
         </header>
 
@@ -44,8 +50,7 @@
 
                     <div class=""form-group"">
                         <label class=""col-lg-2 control-label"" for=""newsheader"">
-                            <?php echo $PMF_LANG['ad_news_header'];
-    ?>
+                            <?php echo $PMF_LANG['ad_news_header'] ?>
                         </label>
                         <div class=""col-lg-4"">
                             <input class=""form-control"" type=""text"" name=""newsheader"">
@@ -53,8 +58,7 @@
                     </div>
 
                     <div class=""form-group"">
-                        <label class=""col-lg-2 control-label"" for=""news""><?php echo $PMF_LANG['ad_news_text'];
-    ?>:</label>
+                        <label class=""col-lg-2 control-label"" for=""news""><?php echo $PMF_LANG['ad_news_text'] ?>:</label>
                         <div class=""col-lg-4"">
                             <noscript>Please enable JavaScript to use the WYSIWYG editor!</noscript>
                             <textarea name=""news"" rows=""5"" class=""form-control""></textarea>
@@ -62,70 +66,59 @@
                     </div>
 
                     <div class=""form-group"">
-                        <label class=""col-lg-2 control-label"" for=""authorName""><?php echo $PMF_LANG['ad_news_author_name'];
-    ?></label>
+                        <label class=""col-lg-2 control-label"" for=""authorName""><?php echo $PMF_LANG['ad_news_author_name'] ?></label>
                         <div class=""col-lg-4"">
                             <input class=""form-control"" type=""text"" name=""authorName"" id=""authorName""
-                                   value=""<?php echo $user->getUserData('display_name');
-    ?>""/>
+                                   value=""<?php echo $user->getUserData('display_name') ?>"">
                         </div>
                     </div>
 
                     <div class=""form-group"">
-                        <label class=""col-lg-2 control-label"" for=""authorEmail""><?php echo $PMF_LANG['ad_news_author_email'];
-    ?></label>
+                        <label class=""col-lg-2 control-label"" for=""authorEmail""><?php echo $PMF_LANG['ad_news_author_email'] ?></label>
                         <div class=""col-lg-4"">
                             <input class=""form-control"" type=""email"" name=""authorEmail"" id=""authorEmail""
-                                   value=""<?php echo $user->getUserData('email');
-    ?>""/>
+                                   value=""<?php echo $user->getUserData('email') ?>"">
                         </div>
                     </div>
 
                     <div class=""form-group"">
                         <label class=""col-lg-2 control-label"" for=""active"">
-                            <?php echo $PMF_LANG['ad_news_set_active'];
-    ?>:
+                            <?php echo $PMF_LANG['ad_news_set_active'] ?>:
                         </label>
                         <div class=""col-lg-4 checkbox"">
                             <label>
                                 <input type=""checkbox"" name=""active"" id=""active"" value=""y"">
-                                <?php echo $PMF_LANG['ad_gen_yes'];
-    ?>
+                                <?php echo $PMF_LANG['ad_gen_yes'] ?>
                             </label>
                         </div>
                     </div>
 
                     <div class=""form-group"">
-                        <label class=""col-lg-2 control-label"" for=""comment""><?php echo $PMF_LANG['ad_news_allowComments'];
-    ?></label>
+                        <label class=""col-lg-2 control-label"" for=""comment""><?php echo $PMF_LANG['ad_news_allowComments'] ?></label>
                         <div class=""col-lg-4 checkbox"">
                             <label>
                                 <input type=""checkbox"" name=""comment"" id=""comment"" value=""y"">
-                                <?php echo $PMF_LANG['ad_gen_yes'];
-    ?>
+                                <?php echo $PMF_LANG['ad_gen_yes'] ?>
                             </label>
                         </div>
                     </div>
 
                     <div class=""form-group"">
-                        <label class=""col-lg-2 control-label"" for=""link""><?php echo $PMF_LANG['ad_news_link_url'];
-    ?></label>
+                        <label class=""col-lg-2 control-label"" for=""link""><?php echo $PMF_LANG['ad_news_link_url'] ?></label>
                         <div class=""col-lg-4"">
                             <input class=""form-control"" type=""url"" name=""link"" id=""link"" placeholder=""http://www.example.com/"">
                         </div>
                     </div>
 
                     <div class=""form-group"">
-                        <label class=""col-lg-2 control-label"" for=""linkTitle""><?php echo $PMF_LANG['ad_news_link_title'];
-    ?></label>
+                        <label class=""col-lg-2 control-label"" for=""linkTitle""><?php echo $PMF_LANG['ad_news_link_title'] ?></label>
                         <div class=""col-lg-4"">
                             <input type=""text"" name=""linkTitle"" id=""linkTitle"" class=""form-control"">
                         </div>
                     </div>
 
                     <div class=""form-group"">
-                        <label class=""col-lg-2 control-label"" ><?php echo $PMF_LANG['ad_news_link_target'];
-    ?></label>
+                        <label class=""col-lg-2 control-label"" ><?php echo $PMF_LANG['ad_news_link_target'] ?></label>
                         <div class=""col-lg-4 radio"">
                             <label>
                                 <input type=""radio"" name=""target"" value=""blank"">
@@ -140,16 +133,13 @@
                         </div>
                     </div>
                     <div class=""form-group"">
-                        <label class=""col-lg-2 control-label"" for=""langTo""><?php echo $PMF_LANG['ad_entry_locale'];
-    ?>:</label>
+                        <label class=""col-lg-2 control-label"" for=""langTo""><?php echo $PMF_LANG['ad_entry_locale'] ?>:</label>
                         <div class=""col-lg-4"">
-                            <?php echo PMF_Language::selectLanguages($LANGCODE, false, [], 'langTo');
-    ?>
+                            <?php echo PMF_Language::selectLanguages($LANGCODE, false, [], 'langTo') ?>
                         </div>
                     </div>
 
-                    <legend><?php echo $PMF_LANG['ad_news_expiration_window'];
-    ?></legend>
+                    <legend><?php echo $PMF_LANG['ad_news_expiration_window'] ?></legend>
                     <div class=""form-group"">
                         <label class=""col-lg-2 control-label"" for=""dateStart""><?php echo $PMF_LANG['ad_news_from'];
     ?></label>
@@ -594,7 +584,7 @@
             <div class=""col-lg-12"">
 <?php
     $precheck = PMF_Filter::filterInput(INPUT_POST, 'really', FILTER_SANITIZE_STRING, 'no');
-    $delete_id = PMF_Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);
+    $deleteId = PMF_Filter::filterInput(INPUT_GET, 'id', FILTER_VALIDATE_INT);
 
     if ('no' == $precheck) {
         ?>
@@ -602,8 +592,8 @@
         ?></div>
     <div class=""text-center"">
     <form action=""?action=deletenews"" method=""post"" accept-charset=""utf-8"">
-    <input type=""hidden"" name=""id"" value=""<?php echo $delete_id;
-        ?>"">
+    <input type=""hidden"" name=""id"" value=""<?php echo $deleteId ?>"">
+    <input type=""hidden"" name=""csrf"" value=""<?php echo $user->getCsrfTokenFromSession() ?>"">
     <input type=""hidden"" name=""really"" value=""yes"">
         <button class=""btn btn-warning"" type=""submit"" name=""submit"">
             <?php echo $PMF_LANG['ad_news_yesdelete'];
@@ -626,10 +616,12 @@
 <?php
 
     } else {
-        $delete_id = PMF_Filter::filterInput(INPUT_POST, 'id', FILTER_VALIDATE_INT);
-        $news->deleteNews($delete_id);
-        printf('<p class=""alert alert-success"">%s</p>', $PMF_LANG['ad_news_delsuc']);
-        printf('<div class=""form-group"">&rarr; <a href=""?action=news"">%s</a></p>', $PMF_LANG['msgNews']);
+        if ($csrfCheck) {
+            $deleteId = PMF_Filter::filterInput(INPUT_POST, 'id', FILTER_VALIDATE_INT);
+            $news->deleteNews($deleteId);
+            printf('<p class=""alert alert-success"">%s</p>', $PMF_LANG['ad_news_delsuc']);
+            printf('<div class=""form-group"">&rarr; <a href=""?action=news"">%s</a></p>', $PMF_LANG['msgNews']);
+        }
     }
 } else {
     echo $PMF_LANG['err_NotAuth'];"
CVE-2017-7991,"From 67a9c2f0229de120431f3eecb0f5017075517105 Mon Sep 17 00:00:00 2001
From: dleffler <dleffler@hughes.net>
Date: Mon, 27 Apr 2020 16:34:18 -0400
Subject: [PATCH] fix sql injection issue

---
 framework/modules/eaas/controllers/eaasController.php | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/framework/modules/eaas/controllers/eaasController.php b/framework/modules/eaas/controllers/eaasController.php
index b836ff0560..1512a55ad2 100644
--- a/framework/modules/eaas/controllers/eaasController.php
+++ b/framework/modules/eaas/controllers/eaasController.php
@@ -80,6 +80,8 @@ public function api() {
             $ar->send();  //FIXME this doesn't seem to work correctly in this scenario
         } else {
             $key = expUnserialize(base64_decode(urldecode($this->params['apikey'])));
+            preg_match('/[^a-zA-Z_][^a-zA-Z0-9_]*/', $key, $matches);
+            $key = $matches[0];
             $cfg = new expConfig($key);
             $this->config = $cfg->config;
             if(empty($cfg->id)) {"
CVE-2017-7418,"From 349addc3be4fcdad9bd4ec01ad1ccd916c898ed8 Mon Sep 17 00:00:00 2001
From: TJ Saunders <tj@castaglia.org>
Date: Sun, 5 Mar 2017 16:20:57 -0800
Subject: [PATCH] Walk the entire DefaultRoot path, checking for symlinks of
 any component, when AllowChrootSymlinks is disabled.

---
 modules/mod_auth.c                            | 73 ++++++++++++++----
 tests/t/lib/ProFTPD/TestSuite/Utils.pm        | 23 +++---
 .../t/lib/ProFTPD/Tests/Config/DefaultRoot.pm | 76 +++++--------------
 3 files changed, 93 insertions(+), 79 deletions(-)

diff --git a/modules/mod_auth.c b/modules/mod_auth.c
index 7e9f8da80a..6e535bbb7a 100644
--- a/modules/mod_auth.c
+++ b/modules/mod_auth.c
@@ -804,6 +804,59 @@ static const char *get_default_chdir(pool *p, xaset_t *conf) {
   return dir;
 }
 
+static int is_symlink_path(pool *p, const char *path, size_t pathlen) {
+  int res, xerrno = 0;
+  struct stat st;
+  char *ptr;
+
+  if (pathlen == 0) {
+    return 0;
+  }
+
+  pr_fs_clear_cache2(path);
+  res = pr_fsio_lstat(path, &st);
+  if (res < 0) {
+    xerrno = errno;
+
+    pr_log_pri(PR_LOG_WARNING, ""error: unable to check %s: %s"", path,
+      strerror(xerrno));
+
+    errno = xerrno;
+    return -1;
+  }
+
+  if (S_ISLNK(st.st_mode)) {
+    errno = EPERM;
+    return -1;
+  }
+
+  /* To handle the case where a component further up the path might be a
+   * symlink (which lstat(2) will NOT handle), we walk the path backwards,
+   * calling ourselves recursively.
+   */
+
+  ptr = strrchr(path, '/');
+  if (ptr != NULL) {
+    char *new_path;
+    size_t new_pathlen;
+
+    pr_signals_handle();
+
+    new_pathlen = ptr - path;
+    new_path = pstrndup(p, path, new_pathlen);
+
+    pr_log_debug(DEBUG10,
+      ""AllowChrootSymlink: path '%s' not a symlink, checking '%s'"", path,
+      new_path);
+    res = is_symlink_path(p, new_path, new_pathlen);
+    if (res < 0) {
+      return -1;
+    }
+  }
+
+  return 0;
+}
+
 /* Determine if the user (non-anon) needs a default root dir other than /. */
 static int get_default_root(pool *p, int allow_symlinks, const char **root) {
   config_rec *c = NULL;
@@ -847,7 +900,6 @@ static int get_default_root(pool *p, int allow_symlinks, const char **root) {
 
       if (allow_symlinks == FALSE) {
         char *path, target_path[PR_TUNABLE_PATH_MAX + 1];
-        struct stat st;
         size_t pathlen;
 
         /* First, deal with any possible interpolation.  dir_realpath() will
@@ -878,22 +930,13 @@ static int get_default_root(pool *p, int allow_symlinks, const char **root) {
           path[pathlen-1] = '\0';
         }
 
-        pr_fs_clear_cache2(path);
-        res = pr_fsio_lstat(path, &st);
+        res = is_symlink_path(p, path, pathlen);
         if (res < 0) {
-          xerrno = errno;
-
-          pr_log_pri(PR_LOG_WARNING, ""error: unable to check %s: %s"", path,
-            strerror(xerrno));
-
-          errno = xerrno;
-          return -1;
-        }
+          if (errno == EPERM) {
+            pr_log_pri(PR_LOG_WARNING, ""error: DefaultRoot %s is a symlink ""
+              ""(denied by AllowChrootSymlinks config)"", path);
+          }
 
-        if (S_ISLNK(st.st_mode)) {
-          pr_log_pri(PR_LOG_WARNING,
-            ""error: DefaultRoot %s is a symlink (denied by AllowChrootSymlinks ""
-            ""config)"", path);
           errno = EPERM;
           return -1;
         }
diff --git a/tests/t/lib/ProFTPD/TestSuite/Utils.pm b/tests/t/lib/ProFTPD/TestSuite/Utils.pm
index 0d8b76fab1..8872231db1 100644
--- a/tests/t/lib/ProFTPD/TestSuite/Utils.pm
+++ b/tests/t/lib/ProFTPD/TestSuite/Utils.pm
@@ -1198,6 +1198,7 @@ sub test_setup {
   $uid = 500 unless defined($uid);
   my $gid = shift;
   $gid = 500 unless defined($gid);
+  my $home_dir = shift;
 
   my $config_file = ""$tmpdir/$name.conf"";
   my $pid_file = File::Spec->rel2abs(""$tmpdir/$name.pid"");
@@ -1206,17 +1207,21 @@ sub test_setup {
   my $auth_user_file = File::Spec->rel2abs(""$tmpdir/$name.passwd"");
   my $auth_group_file = File::Spec->rel2abs(""$tmpdir/$name.group"");
 
-  my $home_dir = File::Spec->rel2abs($tmpdir);
+  # If the caller provides the home directory, it is ASSUMED that they will
+  # have created it.
+  unless (defined($home_dir)) {
+    $home_dir = File::Spec->rel2abs($tmpdir);
 
-  # Make sure that, if we're running as root, that the home directory has
-  # permissions/privs set for the account we create
-  if ($< == 0) {
-    unless (chmod(0755, $home_dir)) {
-      croak(""Can't set perms on $home_dir to 0755: $!"");
-    }
+    # Make sure that, if we're running as root, that the home directory has
+    # permissions/privs set for the account we create
+    if ($< == 0) {
+      unless (chmod(0755, $home_dir)) {
+        croak(""Can't set perms on $home_dir to 0755: $!"");
+      }
 
-    unless (chown($uid, $gid, $home_dir)) {
-      croak(""Can't set owner of $home_dir to $uid/$gid: $!"");
+      unless (chown($uid, $gid, $home_dir)) {
+        croak(""Can't set owner of $home_dir to $uid/$gid: $!"");
+      }
     }
   }
 
diff --git a/tests/t/lib/ProFTPD/Tests/Config/DefaultRoot.pm b/tests/t/lib/ProFTPD/Tests/Config/DefaultRoot.pm
index 3863c1441d..88486c3a77 100644
--- a/tests/t/lib/ProFTPD/Tests/Config/DefaultRoot.pm
+++ b/tests/t/lib/ProFTPD/Tests/Config/DefaultRoot.pm
@@ -621,65 +621,39 @@ sub defaultroot_allowchrootsymlinks_bug3852 {
   my $self = shift;
   my $tmpdir = $self->{tmpdir};
 
-  my $config_file = ""$tmpdir/config.conf"";
-  my $pid_file = File::Spec->rel2abs(""$tmpdir/config.pid"");
-  my $scoreboard_file = File::Spec->rel2abs(""$tmpdir/config.scoreboard"");
-
-  my $log_file = test_get_logfile();
-
-  my $auth_user_file = File::Spec->rel2abs(""$tmpdir/config.passwd"");
-  my $auth_group_file = File::Spec->rel2abs(""$tmpdir/config.group"");
-
   my $user = 'proftpd';
-  my $passwd = 'test';
-  my $group = 'ftpd';
   my $home_dir = File::Spec->rel2abs(""$tmpdir/home.d/symlinks/$user"");
   my $uid = 500;
   my $gid = 500;
 
-  my $intermed_dir = File::Spec->rel2abs(""$tmpdir/home.d/symlinks"");
-  mkpath($intermed_dir);
-
-  my $symlink_dst = File::Spec->rel2abs(""$tmpdir/real/$user"");
-  mkpath($symlink_dst);
+  my $symlink_dst = File::Spec->rel2abs(""$tmpdir/real"");
 
   my $cwd = getcwd();
 
-  unless (chdir($intermed_dir)) {
-    die(""Can't chdir to $intermed_dir: $!"");
+  unless (chdir($tmpdir)) {
+    die(""Can't chdir to $tmpdir: $!"");
   }
 
-  unless (symlink(""../../real/$user"", ""./$user"")) {
-    die(""Can't symlink '../../real/$user' to './$user': $!"");
+  unless (symlink(""./real"", ""./home.d"")) {
+    die(""Can't symlink './real' to './home.d': $!"");
   }
 
   unless (chdir($cwd)) {
     die(""Can't chdir to $cwd: $!"");
   }
 
-  # Make sure that, if we're running as root, that the home directory has
-  # permissions/privs set for the account we create
-  if ($< == 0) {
-    unless (chmod(0755, $symlink_dst)) {
-      die(""Can't set perms on $symlink_dst to 0755: $!"");
-    }
+  mkpath(File::Spec->rel2abs(""$tmpdir/real/symlinks/$user""));
 
-    unless (chown($uid, $gid, $symlink_dst)) {
-      die(""Can't set owner of $symlink_dst to $uid/$gid: $!"");
-    }
-  }
-
-  auth_user_write($auth_user_file, $user, $passwd, $uid, $gid, $home_dir,
-    '/bin/bash');
-  auth_group_write($auth_group_file, $group, $gid, $user);
+  my $setup = test_setup($tmpdir, 'config', $user, undef, undef, $uid, $gid,
+    $home_dir);
 
   my $config = {
-    PidFile => $pid_file,
-    ScoreboardFile => $scoreboard_file,
-    SystemLog => $log_file,
+    PidFile => $setup->{pid_file},
+    ScoreboardFile => $setup->{scoreboard_file},
+    SystemLog => $setup->{log_file},
 
-    AuthUserFile => $auth_user_file,
-    AuthGroupFile => $auth_group_file,
+    AuthUserFile => $setup->{auth_user_file},
+    AuthGroupFile => $setup->{auth_group_file},
 
     AllowChrootSymlinks => 'off',
     DefaultRoot => '~',
@@ -691,7 +665,8 @@ sub defaultroot_allowchrootsymlinks_bug3852 {
     },
   };
 
-  my ($port, $config_user, $config_group) = config_write($config_file, $config);
+  my ($port, $config_user, $config_group) = config_write($setup->{config_file},
+    $config);
 
   # Open pipes, for use between the parent and child processes.  Specifically,
   # the child will indicate when it's done with its test by writing a message
@@ -709,7 +684,7 @@ sub defaultroot_allowchrootsymlinks_bug3852 {
   if ($pid) {
     eval {
       my $client = ProFTPD::TestSuite::FTP->new('127.0.0.1', $port);
-      eval { $client->login($user, $passwd) };
+      eval { $client->login($user, $setup->{passwd}) };
       unless ($@) {
         die(""Login succeeded unexpectedly"");
       }
@@ -721,13 +696,12 @@ sub defaultroot_allowchrootsymlinks_bug3852 {
 
       $expected = 530;
       $self->assert($expected == $resp_code,
-        test_msg(""Expected response code $expected, got $resp_code""));
+        ""Expected response code $expected, got $resp_code"");
 
       $expected = ""Login incorrect."";
       $self->assert($expected eq $resp_msg,
-        test_msg(""Expected response message '$expected', got '$resp_msg'""));
+        ""Expected response message '$expected', got '$resp_msg'"");
     };
-
     if ($@) {
       $ex = $@;
     }
@@ -736,7 +710,7 @@ sub defaultroot_allowchrootsymlinks_bug3852 {
     $wfh->flush();
 
   } else {
-    eval { server_wait($config_file, $rfh) };
+    eval { server_wait($setup->{config_file}, $rfh) };
     if ($@) {
       warn($@);
       exit 1;
@@ -746,18 +720,10 @@ sub defaultroot_allowchrootsymlinks_bug3852 {
   }
 
   # Stop server
-  server_stop($pid_file);
-
+  server_stop($setup->{pid_file});
   $self->assert_child_ok($pid);
 
-  if ($ex) {
-    test_append_logfile($log_file, $ex);
-    unlink($log_file);
-
-    die($ex);
-  }
-
-  unlink($log_file);
+  test_cleanup($setup->{log_file}, $ex);
 }
 
 1;"
CVE-2017-9783,"From 6c3710430be26feb5371cb0377e5355d6f9a27ca Mon Sep 17 00:00:00 2001
From: JackWhite20 <phil.westf@web.de>
Date: Fri, 4 Aug 2017 20:12:39 +0200
Subject: [PATCH] Fix CVE-2017-9783 and CVE-2017-9786 XSS vulnerabilities.

---
 header-unlogged.php             |  4 ++--
 header.php                      |  4 ++--
 includes/functions.php          | 14 +++++++-------
 templates/gallery/template.php  |  2 +-
 templates/pinboxes/template.php |  2 +-
 5 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/header-unlogged.php b/header-unlogged.php
index 2c6ba3c76..e3653bbec 100644
--- a/header-unlogged.php
+++ b/header-unlogged.php
@@ -32,8 +32,8 @@
 	 */
 	$header_vars = array(
 						'html_lang'		=> SITE_LANG,
-						'title'			=> $page_title . ' &raquo; ' . THIS_INSTALL_SET_TITLE,
-						'header_title'	=> THIS_INSTALL_SET_TITLE,
+						'title'			=> $page_title . ' &raquo; ' . html_output(THIS_INSTALL_SET_TITLE),
+						'header_title'	=> html_output(THIS_INSTALL_SET_TITLE),
 					);
 
 	if ( !is_projectsend_installed() ) {
diff --git a/header.php b/header.php
index d9fef5c83..3ed703a8f 100644
--- a/header.php
+++ b/header.php
@@ -58,7 +58,7 @@
 	<meta http-equiv=""X-UA-Compatible"" content=""IE=edge"">
 	<meta name=""viewport"" content=""width=device-width, initial-scale=1"">
 
-	<title><?php echo html_output( $page_title . ' &raquo; ' . THIS_INSTALL_SET_TITLE ); ?></title>
+	<title><?php echo html_output( $page_title . ' &raquo; ' . htmlspecialchars(THIS_INSTALL_SET_TITLE, ENT_QUOTES, 'UTF-8') ); ?></title>
 	<?php meta_favicon(); ?>
 	<script type=""text/javascript"" src=""<?php echo BASE_URI; ?>includes/js/jquery.1.12.4.min.js""></script>
 
@@ -84,7 +84,7 @@
 			</ul>
 
 			<div class=""navbar-header"">
-				<span class=""navbar-brand""><a href=""<?php echo SYSTEM_URI; ?>"" target=""_blank""><?php include('img/ps-icon.svg'); ?></a> <?php echo THIS_INSTALL_SET_TITLE; ?></span>
+				<span class=""navbar-brand""><a href=""<?php echo SYSTEM_URI; ?>"" target=""_blank""><?php include('img/ps-icon.svg'); ?></a> <?php echo html_output(THIS_INSTALL_SET_TITLE); ?></span>
 			</div>
 
 			<ul class=""nav pull-right nav_account"">
diff --git a/includes/functions.php b/includes/functions.php
index 480f8a86f..f71fe99e5 100644
--- a/includes/functions.php
+++ b/includes/functions.php
@@ -295,7 +295,7 @@ function get_client_by_id($client)
 	while ( $row = $statement->fetch() ) {
 		$information = array(
 							'id'				=> $row['id'],
-							'name'				=> $row['name'],
+							'name'				=> html_output($row['name']),
 							'username'			=> $row['user'],
 							'address'			=> $row['address'],
 							'phone'				=> $row['phone'],
@@ -334,7 +334,7 @@ function get_client_by_username($client)
 	while ( $row = $statement->fetch() ) {
 		$information = array(
 							'id'				=> $row['id'],
-							'name'				=> $row['name'],
+							'name'				=> html_output($row['name']),
 							'username'			=> $row['user'],
 							'address'			=> $row['address'],
 							'phone'				=> $row['phone'],
@@ -431,7 +431,7 @@ function get_user_by_username($user)
 			$information = array(
 								'id'				=> $row['id'],
 								'username'			=> $row['user'],
-								'name'				=> $row['name'],
+								'name'				=> html_output($row['name']),
 								'email'				=> $row['email'],
 								'level'				=> $row['level'],
 								'active'			=> $row['active'],
@@ -465,7 +465,7 @@ function get_user_by_id($id)
 		$information = array(
 							'id'				=> $row['id'],
 							'username'			=> $row['user'],
-							'name'				=> $row['name'],
+							'name'				=> html_output($row['name']),
 							'email'				=> $row['email'],
 							'level'				=> $row['level'],
 							'max_file_size'		=> $row['max_file_size'],
@@ -932,7 +932,7 @@ function generate_branding_layout()
 
 	$layout = '<div class=""row"">
 					<div class=""col-xs-12 branding_unlogged"">
-						<img src=""' . $branding_image . '"" alt=""' . THIS_INSTALL_SET_TITLE . '"" />
+						<img src=""' . $branding_image . '"" alt=""' . html_output(THIS_INSTALL_SET_TITLE) . '"" />
 					</div>
 				</div>';
 
@@ -1103,11 +1103,11 @@ function render_log_action($params)
 	$action = $params['action'];
 	$timestamp = $params['timestamp'];
 	$owner_id = $params['owner_id'];
-	$owner_user = $params['owner_user'];
+	$owner_user = html_output($params['owner_user']);
 	$affected_file = $params['affected_file'];
 	$affected_file_name = $params['affected_file_name'];
 	$affected_account = $params['affected_account'];
-	$affected_account_name = $params['affected_account_name'];
+	$affected_account_name = html_output($params['affected_account_name']);
 	
 	switch ($action) {
 		case 0:
diff --git a/templates/gallery/template.php b/templates/gallery/template.php
index bfc5776f1..0707acd14 100644
--- a/templates/gallery/template.php
+++ b/templates/gallery/template.php
@@ -101,7 +101,7 @@
 		<header>
 			<?php if ($logo_file_info['exists'] === true) { ?>
 				<div id=""logo"">
-					<img src=""<?php echo TIMTHUMB_URL; ?>?src=<?php echo $logo_file_info['url']; ?>&amp;w=<?php echo LOGO_MAX_WIDTH; ?>"" alt=""<?php echo THIS_INSTALL_SET_TITLE; ?>"" />
+					<img src=""<?php echo TIMTHUMB_URL; ?>?src=<?php echo $logo_file_info['url']; ?>&amp;w=<?php echo LOGO_MAX_WIDTH; ?>"" alt=""<?php echo html_output(THIS_INSTALL_SET_TITLE); ?>"" />
 				</div>
 			<?php } ?>
 		</header>
diff --git a/templates/pinboxes/template.php b/templates/pinboxes/template.php
index e8572237a..af23131cc 100644
--- a/templates/pinboxes/template.php
+++ b/templates/pinboxes/template.php
@@ -83,7 +83,7 @@ function close_menu() {
 		<div id=""header"">
 			<?php if ($logo_file_info['exists'] === true) { ?>
 				<div id=""branding"">
-					<img src=""<?php echo TIMTHUMB_URL; ?>?src=<?php echo $logo_file_info['url']; ?>&amp;w=300"" alt=""<?php echo THIS_INSTALL_SET_TITLE; ?>"" />
+					<img src=""<?php echo TIMTHUMB_URL; ?>?src=<?php echo $logo_file_info['url']; ?>&amp;w=300"" alt=""<?php echo html_output(THIS_INSTALL_SET_TITLE); ?>"" />
 				</div>
 			<?php } ?>
 		</div>"
CVE-2017-13000,"From a7e5f58f402e6919ec444a57946bade7dfd6b184 Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Tue, 21 Feb 2017 13:40:19 -0800
Subject: [PATCH] CVE-2017-13000/IEEE 802.15.4: Fix bug introduced by previous
 fix.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

We've already advanced the pointer past the PAN ID, if present; it now
points to the address, so don't add 2 to it.

This fixes a buffer over-read discovered by Forcepoint's security
researchers Otto Airamo & Antti LevomÃ¤ki.

Add a test using the capture file supplied by the reporter(s).
---
 print-802_15_4.c         |   2 +-
 tests/802_15_4-data.out  |   1 +
 tests/802_15_4-data.pcap | Bin 0 -> 78 bytes
 tests/TESTLIST           |   1 +
 4 files changed, 3 insertions(+), 1 deletion(-)
 create mode 100644 tests/802_15_4-data.out
 create mode 100644 tests/802_15_4-data.pcap

diff --git a/print-802_15_4.c b/print-802_15_4.c
index a43d0333c..a7817eb5a 100644
--- a/print-802_15_4.c
+++ b/print-802_15_4.c
@@ -141,7 +141,7 @@ ieee802_15_4_if_print(netdissect_options *ndo,
 			return hdrlen;
 		}
 		if (ndo->ndo_vflag)
-			ND_PRINT((ndo,""%04x:%s "", panid, le64addr_string(ndo, p + 2)));
+			ND_PRINT((ndo,""%04x:%s "", panid, le64addr_string(ndo, p)));
 		p += 8;
 		caplen -= 8;
 		hdrlen += 8;
diff --git a/tests/802_15_4-data.out b/tests/802_15_4-data.out
new file mode 100644
index 000000000..0e646751c
--- /dev/null
+++ b/tests/802_15_4-data.out
@@ -0,0 +1 @@
+IEEE 802.15.4 Data packet seq 01 ab4d:10:05:00:81:00:01:00:01 < [|802.15.4]
diff --git a/tests/802_15_4-data.pcap b/tests/802_15_4-data.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..4a32784e2bc65303e567f19299cde46bce8fff87
GIT binary patch
literal 78
zcmca|c+)~A1{MYeCI&Fz1(Jt>_-Tn}fIt%`gBp;n#=*d#_=eGUH6sHfLn8yL0FwZd
a0~1h3o$&@1Ms<Pyj~S(Ja`G8uw*de=@DMHl

literal 0
HcmV?d00001

diff --git a/tests/TESTLIST b/tests/TESTLIST
index 491af396e..be914a4a9 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -488,6 +488,7 @@ pimv2-oobr-3		pimv2-oobr-3.pcap		pimv2-oobr-3.out		-vvv -e
 pimv2-oobr-4		pimv2-oobr-4.pcap		pimv2-oobr-4.out		-vvv -e
 802_15_4-oobr-1		802_15_4-oobr-1.pcap		802_15_4-oobr-1.out	-vvv -e
 802_15_4-oobr-2		802_15_4-oobr-2.pcap		802_15_4-oobr-2.out	-vvv -e
+802_15_4-data		802_15_4-data.pcap		802_15_4-data.out	-vvv -e
 
 # RTP tests
 # fuzzed pcap"
CVE-2017-11450,"From 948356eec65aea91995d4b7cc487d197d2c5f602 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Sun, 2 Jul 2017 20:38:07 -0400
Subject: [PATCH] ...

---
 coders/jpeg.c | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/coders/jpeg.c b/coders/jpeg.c
index 74006a49c4e..9b94e7252cd 100644
--- a/coders/jpeg.c
+++ b/coders/jpeg.c
@@ -1030,6 +1030,11 @@ static Image *ReadJPEGImage(const ImageInfo *image_info,
       image=DestroyImageList(image);
       return((Image *) NULL);
     }
+  /*
+    Verify that file size large enough to contain a JPEG datastream.
+  */
+  if (GetBlobSize(image) < 107)
+    ThrowReaderException(CorruptImageError,""InsufficientImageDataInFile"");
   /*
     Initialize JPEG parameters.
   */
@@ -1504,6 +1509,7 @@ ModuleExport size_t RegisterJPEGImage(void)
 #endif
   entry->magick=(IsImageFormatHandler *) IsJPEG;
   entry->adjoin=MagickFalse;
+  entry->seekable_stream=MagickTrue;
   entry->description=ConstantString(description);
   if (*version != '\0')
     entry->version=ConstantString(version);
@@ -1520,6 +1526,7 @@ ModuleExport size_t RegisterJPEGImage(void)
 #endif
   entry->magick=(IsImageFormatHandler *) IsJPEG;
   entry->adjoin=MagickFalse;
+  entry->seekable_stream=MagickTrue;
   entry->description=ConstantString(description);
   if (*version != '\0')
     entry->version=ConstantString(version);
@@ -1535,6 +1542,7 @@ ModuleExport size_t RegisterJPEGImage(void)
   entry->encoder=(EncodeImageHandler *) WriteJPEGImage;
 #endif
   entry->adjoin=MagickFalse;
+  entry->seekable_stream=MagickTrue;
   entry->description=ConstantString(description);
   if (*version != '\0')
     entry->version=ConstantString(version);
@@ -1550,6 +1558,7 @@ ModuleExport size_t RegisterJPEGImage(void)
   entry->encoder=(EncodeImageHandler *) WriteJPEGImage;
 #endif
   entry->adjoin=MagickFalse;
+  entry->seekable_stream=MagickTrue;
   entry->description=ConstantString(description);
   if (*version != '\0')
     entry->version=ConstantString(version);
@@ -1565,6 +1574,7 @@ ModuleExport size_t RegisterJPEGImage(void)
   entry->encoder=(EncodeImageHandler *) WriteJPEGImage;
 #endif
   entry->adjoin=MagickFalse;
+  entry->seekable_stream=MagickTrue;
   entry->description=ConstantString(description);
   if (*version != '\0')
     entry->version=ConstantString(version);"
CVE-2017-17091,"From eaf1cfdc1fe0bdffabd8d879c591b864d833326c Mon Sep 17 00:00:00 2001
From: John Blackbourn <johnbillion@git.wordpress.org>
Date: Wed, 29 Nov 2017 15:52:50 +0000
Subject: [PATCH] Hardening: Use a properly generated hash for the
 `newbloguser` key instead of a determinate substring.

Built from https://develop.svn.wordpress.org/trunk@42258


git-svn-id: http://core.svn.wordpress.org/trunk@42087 1a063a9b-81f0-0310-95a4-ce76da25c4cd
---
 wp-admin/user-new.php   | 2 +-
 wp-includes/version.php | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/wp-admin/user-new.php b/wp-admin/user-new.php
index ebcd2a7dca6d..641fd822fd3c 100644
--- a/wp-admin/user-new.php
+++ b/wp-admin/user-new.php
@@ -75,7 +75,7 @@
 				$redirect = add_query_arg( array( 'update' => 'could_not_add' ), 'user-new.php' );
 			}
 		} else {
-			$newuser_key = substr( md5( $user_id ), 0, 5 );
+			$newuser_key = wp_generate_password( 20, false );
 			add_option( 'new_user_' . $newuser_key, array( 'user_id' => $user_id, 'email' => $user_details->user_email, 'role' => $_REQUEST[ 'role' ] ) );
 
 			$roles = get_editable_roles();
diff --git a/wp-includes/version.php b/wp-includes/version.php
index 05180f59f490..f5f8415d416b 100644
--- a/wp-includes/version.php
+++ b/wp-includes/version.php
@@ -4,7 +4,7 @@
  *
  * @global string $wp_version
  */
-$wp_version = '5.0-alpha-42257';
+$wp_version = '5.0-alpha-42258';
 
 /**
  * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema."
CVE-2017-8932,"From 9294fa2749ffee7edbbb817a0ef9fe633136fa9c Mon Sep 17 00:00:00 2001
From: Adam Langley <agl@golang.org>
Date: Wed, 19 Apr 2017 10:00:32 -0700
Subject: [PATCH] crypto/elliptic: fix carry bug in x86-64 P-256
 implementation.

Patch from Vlad Krasnov and confirmed to be under CLA.

Fixes #20040.

Change-Id: Ieb8436c4dcb6669a1620f1e0d257efd047b1b87c
Reviewed-on: https://go-review.googlesource.com/41070
Run-TryBot: Adam Langley <agl@golang.org>
TryBot-Result: Gobot Gobot <gobot@golang.org>
Reviewed-by: Brad Fitzpatrick <bradfitz@golang.org>
---
 src/crypto/elliptic/elliptic_test.go | 36 ++++++++++++++++++++++++++++
 src/crypto/elliptic/p256_asm_amd64.s | 10 ++++----
 2 files changed, 41 insertions(+), 5 deletions(-)

diff --git a/src/crypto/elliptic/elliptic_test.go b/src/crypto/elliptic/elliptic_test.go
index 902c414383753c..c3e4c17d2509d9 100644
--- a/src/crypto/elliptic/elliptic_test.go
+++ b/src/crypto/elliptic/elliptic_test.go
@@ -300,6 +300,29 @@ var p224BaseMultTests = []baseMultTest{
 	},
 }
 
+type scalarMultTest struct {
+	k          string
+	xIn, yIn   string
+	xOut, yOut string
+}
+
+var p256MultTests = []scalarMultTest{
+	{
+		""2a265f8bcbdcaf94d58519141e578124cb40d64a501fba9c11847b28965bc737"",
+		""023819813ac969847059028ea88a1f30dfbcde03fc791d3a252c6b41211882ea"",
+		""f93e4ae433cc12cf2a43fc0ef26400c0e125508224cdb649380f25479148a4ad"",
+		""4d4de80f1534850d261075997e3049321a0864082d24a917863366c0724f5ae3"",
+		""a22d2b7f7818a3563e0f7a76c9bf0921ac55e06e2e4d11795b233824b1db8cc0"",
+	},
+	{
+		""313f72ff9fe811bf573176231b286a3bdb6f1b14e05c40146590727a71c3bccd"",
+		""cc11887b2d66cbae8f4d306627192522932146b42f01d3c6f92bd5c8ba739b06"",
+		""a2f08a029cd06b46183085bae9248b0ed15b70280c7ef13a457f5af382426031"",
+		""831c3f6b5f762d2f461901577af41354ac5f228c2591f84f8a6e51e2e3f17991"",
+		""93f90934cd0ef2c698cc471c60a93524e87ab31ca2412252337f364513e43684"",
+	},
+}
+
 func TestBaseMult(t *testing.T) {
 	p224 := P224()
 	for i, e := range p224BaseMultTests {
@@ -379,6 +402,19 @@ func TestP256Mult(t *testing.T) {
 			break
 		}
 	}
+
+	for i, e := range p256MultTests {
+		x, _ := new(big.Int).SetString(e.xIn, 16)
+		y, _ := new(big.Int).SetString(e.yIn, 16)
+		k, _ := new(big.Int).SetString(e.k, 16)
+		expectedX, _ := new(big.Int).SetString(e.xOut, 16)
+		expectedY, _ := new(big.Int).SetString(e.yOut, 16)
+
+		xx, yy := p256.ScalarMult(x, y, k.Bytes())
+		if xx.Cmp(expectedX) != 0 || yy.Cmp(expectedY) != 0 {
+			t.Errorf(""#%d: got (%x, %x), want (%x, %x)"", i, xx, yy, expectedX, expectedY)
+		}
+	}
 }
 
 func TestInfinity(t *testing.T) {
diff --git a/src/crypto/elliptic/p256_asm_amd64.s b/src/crypto/elliptic/p256_asm_amd64.s
index 6c7bde16e5ef1b..ea4a6fab9a6100 100644
--- a/src/crypto/elliptic/p256_asm_amd64.s
+++ b/src/crypto/elliptic/p256_asm_amd64.s
@@ -1314,12 +1314,12 @@ TEXT p256SubInternal(SB),NOSPLIT,$0
 	ADCQ p256const0<>(SB), acc5
 	ADCQ $0, acc6
 	ADCQ p256const1<>(SB), acc7
-	ADCQ $0, mul0
+	ANDQ $1, mul0
 
-	CMOVQNE acc0, acc4
-	CMOVQNE acc1, acc5
-	CMOVQNE acc2, acc6
-	CMOVQNE acc3, acc7
+	CMOVQEQ acc0, acc4
+	CMOVQEQ acc1, acc5
+	CMOVQEQ acc2, acc6
+	CMOVQEQ acc3, acc7
 
 	RET
 /* ---------------------------------------*/"
CVE-2017-5491,"From 061e8788814ac87706d8b95688df276fe3c8596a Mon Sep 17 00:00:00 2001
From: Jeremy Felt <jeremy.felt@gmail.com>
Date: Wed, 11 Jan 2017 05:13:43 +0000
Subject: [PATCH] Mail: Disable wp-mail.php when `mailserver_url` is
 mail.example.com.

Built from https://develop.svn.wordpress.org/trunk@39772


git-svn-id: http://core.svn.wordpress.org/trunk@39710 1a063a9b-81f0-0310-95a4-ce76da25c4cd
---
 wp-includes/version.php | 2 +-
 wp-mail.php             | 6 ++++++
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/wp-includes/version.php b/wp-includes/version.php
index 25e7cf5e328a..58890b89743a 100644
--- a/wp-includes/version.php
+++ b/wp-includes/version.php
@@ -4,7 +4,7 @@
  *
  * @global string $wp_version
  */
-$wp_version = '4.8-alpha-39760';
+$wp_version = '4.8-alpha-39772';
 
 /**
  * Holds the WordPress DB revision, increments when changes are made to the WordPress DB schema.
diff --git a/wp-mail.php b/wp-mail.php
index e62bbf12158d..35fb24aed264 100644
--- a/wp-mail.php
+++ b/wp-mail.php
@@ -14,6 +14,12 @@
 if ( ! apply_filters( 'enable_post_by_email_configuration', true ) )
 	wp_die( __( 'This action has been disabled by the administrator.' ), 403 );
 
+$mailserver_url = get_option( 'mailserver_url' );
+
+if ( 'mail.example.com' === $mailserver_url || empty( $mailserver_url ) ) {
+	wp_die( __( 'This action has been disabled by the administrator.' ), 403 );
+}
+
 /**
  * Fires to allow a plugin to do a complete takeover of Post by Email.
  *"
CVE-2017-18026,"From 9d797400eaec5f9fa7ba9507c82d9c18cb91d02e Mon Sep 17 00:00:00 2001
From: Toshi MARUYAMA <marutosijp2@yahoo.co.jp>
Date: Thu, 7 Dec 2017 11:38:47 +0000
Subject: [PATCH] mercurial: work around faulty parsing of early command
 options (#27516)

Use -sVALUE and --long=VALUE instead of ""-s VALUE"" and ""--long VALUE""
respectively.

Contributed by Yuya Nishihara.

git-svn-id: http://svn.redmine.org/redmine/trunk@17062 e93f8b46-1217-0410-a6f0-8f06a7374b81
---
 lib/redmine/scm/adapters/mercurial_adapter.rb | 27 ++++++++++---------
 .../scm/adapters/mercurial_adapter_test.rb    | 12 ++++-----
 2 files changed, 20 insertions(+), 19 deletions(-)

diff --git a/lib/redmine/scm/adapters/mercurial_adapter.rb b/lib/redmine/scm/adapters/mercurial_adapter.rb
index 0e7f766d472..599c3a42fae 100644
--- a/lib/redmine/scm/adapters/mercurial_adapter.rb
+++ b/lib/redmine/scm/adapters/mercurial_adapter.rb
@@ -140,7 +140,7 @@ def summary
 
         def entries(path=nil, identifier=nil, options={})
           p1 = scm_iconv(@path_encoding, 'UTF-8', path)
-          manifest = hg('rhmanifest', '-r', CGI.escape(hgrev(identifier)),
+          manifest = hg('rhmanifest', ""-r#{CGI.escape(hgrev(identifier))}"",
                         '--', CGI.escape(without_leading_slash(p1.to_s))) do |io|
             output = io.read.force_encoding('UTF-8')
             begin
@@ -181,9 +181,9 @@ def revisions(path=nil, identifier_from=nil, identifier_to=nil, options={})
         # Iterates the revisions by using a template file that
         # makes Mercurial produce a xml output.
         def each_revision(path=nil, identifier_from=nil, identifier_to=nil, options={})
-          hg_args = ['log', '--debug', '-C', '--style', self.class.template_path]
-          hg_args << '-r' << ""#{hgrev(identifier_from)}:#{hgrev(identifier_to)}""
-          hg_args << '--limit' << options[:limit] if options[:limit]
+          hg_args = ['log', '--debug', '-C', ""--style=#{self.class.template_path}""]
+          hg_args << ""-r#{hgrev(identifier_from)}:#{hgrev(identifier_to)}""
+          hg_args << ""--limit=#{options[:limit]}"" if options[:limit]
           hg_args << '--' << hgtarget(path) unless path.blank?
           log = hg(*hg_args) do |io|
             output = io.read.force_encoding('UTF-8')
@@ -224,19 +224,19 @@ def each_revision(path=nil, identifier_from=nil, identifier_to=nil, options={})
 
         # Returns list of nodes in the specified branch
         def nodes_in_branch(branch, options={})
-          hg_args = ['rhlog', '--template', '{node}\n', '--rhbranch', CGI.escape(branch)]
-          hg_args << '--from' << CGI.escape(branch)
-          hg_args << '--to'   << '0'
-          hg_args << '--limit' << options[:limit] if options[:limit]
+          hg_args = ['rhlog', '--template={node}\n', ""--rhbranch=#{CGI.escape(branch)}""]
+          hg_args << ""--from=#{CGI.escape(branch)}""
+          hg_args << '--to=0'
+          hg_args << ""--limit=#{options[:limit]}"" if options[:limit]
           hg(*hg_args) { |io| io.readlines.map { |e| e.chomp } }
         end
 
         def diff(path, identifier_from, identifier_to=nil)
           hg_args = %w|rhdiff|
           if identifier_to
-            hg_args << '-r' << hgrev(identifier_to) << '-r' << hgrev(identifier_from)
+            hg_args << ""-r#{hgrev(identifier_to)}"" << ""-r#{hgrev(identifier_from)}""
           else
-            hg_args << '-c' << hgrev(identifier_from)
+            hg_args << ""-c#{hgrev(identifier_from)}""
           end
           unless path.blank?
             p = scm_iconv(@path_encoding, 'UTF-8', path)
@@ -255,7 +255,7 @@ def diff(path, identifier_from, identifier_to=nil)
 
         def cat(path, identifier=nil)
           p = CGI.escape(scm_iconv(@path_encoding, 'UTF-8', path))
-          hg 'rhcat', '-r', CGI.escape(hgrev(identifier)), '--', hgtarget(p) do |io|
+          hg 'rhcat', ""-r#{CGI.escape(hgrev(identifier))}"", '--', hgtarget(p) do |io|
             io.binmode
             io.read
           end
@@ -266,7 +266,7 @@ def cat(path, identifier=nil)
         def annotate(path, identifier=nil)
           p = CGI.escape(scm_iconv(@path_encoding, 'UTF-8', path))
           blame = Annotate.new
-          hg 'rhannotate', '-ncu', '-r', CGI.escape(hgrev(identifier)), '--', hgtarget(p) do |io|
+          hg 'rhannotate', '-ncu', ""-r#{CGI.escape(hgrev(identifier))}"", '--', hgtarget(p) do |io|
             io.each_line do |line|
               line.force_encoding('ASCII-8BIT')
               next unless line =~ %r{^([^:]+)\s(\d+)\s([0-9a-f]+):\s(.*)$}
@@ -304,7 +304,8 @@ def hg(*args, &block)
           end
 
           repo_path = root_url || url
-          full_args = ['-R', repo_path, '--encoding', 'utf-8']
+          full_args = [""-R#{repo_path}"", '--encoding=utf-8']
+          # don't use ""--config=<value>"" form for compatibility with ancient Mercurial
           full_args << '--config' << ""extensions.redminehelper=#{HG_HELPER_EXT}""
           full_args << '--config' << 'diff.git=false'
           full_args += args
diff --git a/test/unit/lib/redmine/scm/adapters/mercurial_adapter_test.rb b/test/unit/lib/redmine/scm/adapters/mercurial_adapter_test.rb
index e0458ce55a5..4f891602a3b 100644
--- a/test/unit/lib/redmine/scm/adapters/mercurial_adapter_test.rb
+++ b/test/unit/lib/redmine/scm/adapters/mercurial_adapter_test.rb
@@ -21,6 +21,7 @@ class MercurialAdapterTest < ActiveSupport::TestCase
   HELPERS_DIR        = Redmine::Scm::Adapters::MercurialAdapter::HELPERS_DIR
   TEMPLATE_NAME      = Redmine::Scm::Adapters::MercurialAdapter::TEMPLATE_NAME
   TEMPLATE_EXTENSION = Redmine::Scm::Adapters::MercurialAdapter::TEMPLATE_EXTENSION
+  HgCommandAborted   = Redmine::Scm::Adapters::MercurialAdapter::HgCommandAborted
   HgCommandArgumentError = Redmine::Scm::Adapters::MercurialAdapter::HgCommandArgumentError
 
   REPOSITORY_PATH = repository_path('mercurial')
@@ -445,19 +446,18 @@ def test_path_encoding_default_utf8
     end
 
     def test_bad_early_options
-      assert_raise HgCommandArgumentError do
-        @adapter.diff('sources/welcome_controller.rb', '--config=alias.rhdiff=!xterm')
-      end
+      assert_nil @adapter.diff('sources/welcome_controller.rb',
+                               '--config=alias.rhdiff=!xterm')
       assert_raise HgCommandArgumentError do
         @adapter.entries('--debugger')
       end
-      assert_raise HgCommandArgumentError do
+      assert_raise HgCommandAborted do
         @adapter.revisions(nil, nil, nil, limit: '--repo=otherrepo')
       end
-      assert_raise HgCommandArgumentError do
+      assert_raise HgCommandAborted do
         @adapter.nodes_in_branch('default', limit: '--repository=otherrepo')
       end
-      assert_raise HgCommandArgumentError do
+      assert_raise HgCommandAborted do
         @adapter.nodes_in_branch('-Rotherrepo')
       end
     end"
CVE-2017-12146,"From 6265539776a0810b7ce6398c27866ddb9c6bd154 Mon Sep 17 00:00:00 2001
From: Adrian Salido <salidoa@google.com>
Date: Tue, 25 Apr 2017 16:55:26 -0700
Subject: [PATCH] driver core: platform: fix race condition with
 driver_override

The driver_override implementation is susceptible to race condition when
different threads are reading vs storing a different driver override.
Add locking to avoid race condition.

Fixes: 3d713e0e382e (""driver core: platform: add device binding path 'driver_override'"")
Cc: stable@vger.kernel.org
Signed-off-by: Adrian Salido <salidoa@google.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/base/platform.c | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/drivers/base/platform.c b/drivers/base/platform.c
index a102152301c832..97332d094fe23a 100644
--- a/drivers/base/platform.c
+++ b/drivers/base/platform.c
@@ -866,7 +866,7 @@ static ssize_t driver_override_store(struct device *dev,
 				     const char *buf, size_t count)
 {
 	struct platform_device *pdev = to_platform_device(dev);
-	char *driver_override, *old = pdev->driver_override, *cp;
+	char *driver_override, *old, *cp;
 
 	if (count > PATH_MAX)
 		return -EINVAL;
@@ -879,12 +879,15 @@ static ssize_t driver_override_store(struct device *dev,
 	if (cp)
 		*cp = '\0';
 
+	device_lock(dev);
+	old = pdev->driver_override;
 	if (strlen(driver_override)) {
 		pdev->driver_override = driver_override;
 	} else {
 		kfree(driver_override);
 		pdev->driver_override = NULL;
 	}
+	device_unlock(dev);
 
 	kfree(old);
 
@@ -895,8 +898,12 @@ static ssize_t driver_override_show(struct device *dev,
 				    struct device_attribute *attr, char *buf)
 {
 	struct platform_device *pdev = to_platform_device(dev);
+	ssize_t len;
 
-	return sprintf(buf, ""%s\n"", pdev->driver_override);
+	device_lock(dev);
+	len = sprintf(buf, ""%s\n"", pdev->driver_override);
+	device_unlock(dev);
+	return len;
 }
 static DEVICE_ATTR_RW(driver_override);"
CVE-2017-2671,"From 43a6684519ab0a6c52024b5e25322476cabad893 Mon Sep 17 00:00:00 2001
From: Eric Dumazet <edumazet@google.com>
Date: Fri, 24 Mar 2017 19:36:13 -0700
Subject: [PATCH] ping: implement proper locking

We got a report of yet another bug in ping

http://www.openwall.com/lists/oss-security/2017/03/24/6

->disconnect() is not called with socket lock held.

Fix this by acquiring ping rwlock earlier.

Thanks to Daniel, Alexander and Andrey for letting us know this problem.

Fixes: c319b4d76b9e (""net: ipv4: add IPPROTO_ICMP socket kind"")
Signed-off-by: Eric Dumazet <edumazet@google.com>
Reported-by: Daniel Jiang <danieljiang0415@gmail.com>
Reported-by: Solar Designer <solar@openwall.com>
Reported-by: Andrey Konovalov <andreyknvl@google.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 net/ipv4/ping.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/net/ipv4/ping.c b/net/ipv4/ping.c
index 2af6244b83e27a..ccfbce13a6333a 100644
--- a/net/ipv4/ping.c
+++ b/net/ipv4/ping.c
@@ -156,17 +156,18 @@ int ping_hash(struct sock *sk)
 void ping_unhash(struct sock *sk)
 {
 	struct inet_sock *isk = inet_sk(sk);
+
 	pr_debug(""ping_unhash(isk=%p,isk->num=%u)\n"", isk, isk->inet_num);
+	write_lock_bh(&ping_table.lock);
 	if (sk_hashed(sk)) {
-		write_lock_bh(&ping_table.lock);
 		hlist_nulls_del(&sk->sk_nulls_node);
 		sk_nulls_node_init(&sk->sk_nulls_node);
 		sock_put(sk);
 		isk->inet_num = 0;
 		isk->inet_sport = 0;
 		sock_prot_inuse_add(sock_net(sk), sk->sk_prot, -1);
-		write_unlock_bh(&ping_table.lock);
 	}
+	write_unlock_bh(&ping_table.lock);
 }
 EXPORT_SYMBOL_GPL(ping_unhash);"
CVE-2017-9432,"From 2d6253c7a692a3d92785dd990fce7256ea05e794 Mon Sep 17 00:00:00 2001
From: David Tardon <dtardon@redhat.com>
Date: Fri, 7 Apr 2017 19:28:55 +0200
Subject: [PATCH] ofz#1029 use correct loop index

To be honest, I think this would be clearer as two separate reads to two
separate vars...
---
 src/lib/StarWriterStruct.cxx | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/src/lib/StarWriterStruct.cxx b/src/lib/StarWriterStruct.cxx
index 5893302..d1ad366 100644
--- a/src/lib/StarWriterStruct.cxx
+++ b/src/lib/StarWriterStruct.cxx
@@ -327,7 +327,7 @@ bool DatabaseName::read(StarZone &zone)
         }
         data.m_name=libstoff::getString(text);
         int positions[2];
-        for (int j=0; j<2; ++j) positions[i]=int(input->readULong(4));
+        for (int j=0; j<2; ++j) positions[j]=int(input->readULong(4));
         data.m_selection=STOFFVec2i(positions[0],positions[1]);
         m_dataList.push_back(data);
       }"
OSV-2017-113,"From db8eea2de60a98e8de6bef1c89346471f5aa6f4f Mon Sep 17 00:00:00 2001
From: Varun Khaneja <ca.aawc@yahoo.com>
Date: Fri, 26 Apr 2019 14:49:56 -0700
Subject: [PATCH] v5.7.4: Integrate unrar version 5.7.4

---
 cmdfilter.cpp  | 12 +++++++++---
 dll.rc         |  8 ++++----
 extract.cpp    | 19 ++++++++++++++-----
 list.cpp       |  1 +
 loclang.hpp    |  2 +-
 threadmisc.cpp | 32 ++++++++++++++------------------
 version.hpp    |  8 ++++----
 7 files changed, 47 insertions(+), 35 deletions(-)

diff --git a/cmdfilter.cpp b/cmdfilter.cpp
index 20660cb..39d5e66 100644
--- a/cmdfilter.cpp
+++ b/cmdfilter.cpp
@@ -128,16 +128,22 @@ void CommandData::SetTimeFilters(const wchar *Mod,bool Before,bool Age)
 {
   bool ModeOR=false,TimeMods=false;
   const wchar *S=Mod;
-  for (;wcschr(L""MCAOmcao"",*S)!=NULL;S++)
+  // Check if any 'mca' modifiers are present, set OR mode if 'o' is present,
+  // skip modifiers and set S to beginning of time string. Be sure to check
+  // *S!=0, because termination 0 is a part of string for wcschr.
+  for (;*S!=0 && wcschr(L""MCAOmcao"",*S)!=NULL;S++)
     if (*S=='o' || *S=='O')
       ModeOR=true;
     else
       TimeMods=true;
 
-  if (!TimeMods)
+  if (!TimeMods) // Assume 'm' if no modifiers are specified.
     Mod=L""m"";
 
-  for (;wcschr(L""MCAOmcao"",*Mod)!=NULL;Mod++)
+  // Set the specified time for every modifier. Be sure to check *Mod!=0,
+  // because termination 0 is a part of string for wcschr. This check is
+  // important when we set Mod to ""m"" above.
+  for (;*Mod!=0 && wcschr(L""MCAOmcao"",*Mod)!=NULL;Mod++)
     switch(toupperw(*Mod))
     {
       case 'M': 
diff --git a/dll.rc b/dll.rc
index 4564d92..aac17f8 100644
--- a/dll.rc
+++ b/dll.rc
@@ -2,8 +2,8 @@
 #include <commctrl.h>
 
 VS_VERSION_INFO VERSIONINFO
-FILEVERSION 5, 70, 100, 2983
-PRODUCTVERSION 5, 70, 100, 2983
+FILEVERSION 5, 71, 1, 3019
+PRODUCTVERSION 5, 71, 1, 3019
 FILEOS VOS__WINDOWS32
 FILETYPE VFT_APP
 {
@@ -14,8 +14,8 @@ FILETYPE VFT_APP
       VALUE ""CompanyName"", ""Alexander Roshal\0""
       VALUE ""ProductName"", ""RAR decompression library\0""
       VALUE ""FileDescription"", ""RAR decompression library\0""
-      VALUE ""FileVersion"", ""5.70.0\0""
-      VALUE ""ProductVersion"", ""5.70.0\0""
+      VALUE ""FileVersion"", ""5.71.1\0""
+      VALUE ""ProductVersion"", ""5.71.1\0""
       VALUE ""LegalCopyright"", ""Copyright Â© Alexander Roshal 1993-2019\0""
       VALUE ""OriginalFilename"", ""Unrar.dll\0""
     }
diff --git a/extract.cpp b/extract.cpp
index fe11d7f..41fd031 100644
--- a/extract.cpp
+++ b/extract.cpp
@@ -614,10 +614,14 @@ bool CmdExtract::ExtractCurrentFile(Archive &Arc,size_t HeaderSize,bool &Repeat)
       }
 #endif
 
-      if (!TestMode && !Arc.BrokenHeader &&
-          (Arc.FileHead.PackSize<<11)>Arc.FileHead.UnpSize &&
+      uint64 Preallocated=0;
+      if (!TestMode && !Arc.BrokenHeader && Arc.FileHead.UnpSize>1000000 &&
+          Arc.FileHead.PackSize*1024>Arc.FileHead.UnpSize &&
           (Arc.FileHead.UnpSize<100000000 || Arc.FileLength()>Arc.FileHead.PackSize))
+      {
         CurFile.Prealloc(Arc.FileHead.UnpSize);
+        Preallocated=Arc.FileHead.UnpSize;
+      }
 
       CurFile.SetAllowDelete(!Cmd->KeepBroken);
 
@@ -734,8 +738,9 @@ bool CmdExtract::ExtractCurrentFile(Archive &Arc,size_t HeaderSize,bool &Repeat)
           (!LinkEntry || Arc.FileHead.RedirType==FSREDIR_FILECOPY && LinkSuccess) && 
           (!BrokenFile || Cmd->KeepBroken))
       {
-        // We could preallocate more space that really written to broken file.
-        if (BrokenFile)
+        // We could preallocate more space that really written to broken file
+        // or file with crafted header.
+        if (Preallocated>0 && (BrokenFile || DataIO.CurUnpWrite!=Preallocated))
           CurFile.Truncate();
 
 #if defined(_WIN_ALL) || defined(_EMX)
@@ -969,7 +974,11 @@ bool CmdExtract::ExtrGetPassword(Archive &Arc,const wchar *ArcFileName)
     if (!uiGetPassword(UIPASSWORD_FILE,ArcFileName,&Cmd->Password)/* || !Cmd->Password.IsSet()*/)
     {
       // Suppress ""test is ok"" message if user cancelled the password prompt.
-      uiMsg(UIERROR_INCERRCOUNT);
+// 2019.03.23: If some archives are tested ok and prompt is cancelled for others,
+// do we really need to suppress ""test is ok""? Also if we set an empty password
+// and ""Use for all archives"" in WinRAR Ctrl+P and skip some encrypted archives.
+// We commented out this UIERROR_INCERRCOUNT for now.
+//      uiMsg(UIERROR_INCERRCOUNT);
       return false;
     }
     Cmd->ManualPassword=true;
diff --git a/list.cpp b/list.cpp
index 11c404e..d558ffa 100644
--- a/list.cpp
+++ b/list.cpp
@@ -71,6 +71,7 @@ void ListArchive(CommandData *Cmd)
         *VolNumText=0;
         while(Arc.ReadHeader()>0)
         {
+          Wait(); // Allow quit listing with Ctrl+C.
           HEADER_TYPE HeaderType=Arc.GetHeaderType();
           if (HeaderType==HEAD_ENDARC)
           {
diff --git a/loclang.hpp b/loclang.hpp
index 181fcb4..6d264be 100644
--- a/loclang.hpp
+++ b/loclang.hpp
@@ -85,7 +85,7 @@
 #define   MCHelpSwILOG       L""\n  ilog[name]    Log errors to file""
 #define   MCHelpSwINUL       L""\n  inul          Disable all messages""
 #define   MCHelpSwIOFF       L""\n  ioff[n]       Turn PC off after completing an operation""
-#define   MCHelpSwISND       L""\n  isnd          Control notification sounds""
+#define   MCHelpSwISND       L""\n  isnd[-]       Control notification sounds""
 #define   MCHelpSwIVER       L""\n  iver          Display the version number""
 #define   MCHelpSwK          L""\n  k             Lock archive""
 #define   MCHelpSwKB         L""\n  kb            Keep broken extracted files""
diff --git a/threadmisc.cpp b/threadmisc.cpp
index 4ad5af2..4020711 100644
--- a/threadmisc.cpp
+++ b/threadmisc.cpp
@@ -53,25 +53,22 @@ static struct GlobalPoolCreateSync
 
 ThreadPool* CreateThreadPool()
 {
+#ifdef RARDLL
+  // We use a simple thread pool, which does not allow to add tasks from
+  // different functions and threads in the same time. It is ok for RAR,
+  // but UnRAR.dll can be used in multithreaded environment. So we return
+  // a new pool for UnRAR.dll every time.
+  return new ThreadPool(MaxPoolThreads);
+#else
+  // Reuse the existing pool for RAR.
   CriticalSectionStart(&PoolCreateSync.CritSection); 
-
+  
   if (GlobalPoolUseCount++ == 0)
     GlobalPool=new ThreadPool(MaxPoolThreads);
 
-  // We use a simple thread pool, which does not allow to add tasks from
-  // different functions and threads in the same time. It is ok for RAR,
-  // but UnRAR.dll can be used in multithreaded environment. So if one of
-  // threads requests a copy of global pool and another copy is already
-  // in use, we create and return a new pool instead of existing global.
-  if (GlobalPoolUseCount > 1)
-  {
-    ThreadPool *Pool = new ThreadPool(MaxPoolThreads);
-    CriticalSectionEnd(&PoolCreateSync.CritSection); 
-    return Pool;
-  }
-
   CriticalSectionEnd(&PoolCreateSync.CritSection); 
   return GlobalPool;
+#endif
 }
 
 
@@ -79,17 +76,16 @@ void DestroyThreadPool(ThreadPool *Pool)
 {
   if (Pool!=NULL)
   {
+#ifdef RARDLL
+    delete Pool;
+#else
     CriticalSectionStart(&PoolCreateSync.CritSection); 
 
     if (Pool==GlobalPool && GlobalPoolUseCount > 0 && --GlobalPoolUseCount == 0)
       delete GlobalPool;
 
-    // To correctly work in multithreaded environment UnRAR.dll creates
-    // new pools if global pool is already in use. We delete such pools here.
-    if (Pool!=GlobalPool)
-      delete Pool;
-
     CriticalSectionEnd(&PoolCreateSync.CritSection); 
+#endif
   }
 }
 
diff --git a/version.hpp b/version.hpp
index de774ff..f9a2ae0 100644
--- a/version.hpp
+++ b/version.hpp
@@ -1,6 +1,6 @@
 #define RARVER_MAJOR     5
-#define RARVER_MINOR    70
-#define RARVER_BETA      0
-#define RARVER_DAY      25
-#define RARVER_MONTH     2
+#define RARVER_MINOR    71
+#define RARVER_BETA      1
+#define RARVER_DAY       2
+#define RARVER_MONTH     4
 #define RARVER_YEAR   2019"
CVE-2017-16357,"From 0b973e28166636e0ff1fad80baa0385c9c09c53a Mon Sep 17 00:00:00 2001
From: Khairul Kasmiran <kazarmy@gmail.com>
Date: Sat, 28 Oct 2017 11:56:30 +0800
Subject: [PATCH] Fixed crash in elf.c with 32bit r2 when shdr->sh_size > max
 size_t

---
 libr/bin/format/elf/elf.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/libr/bin/format/elf/elf.c b/libr/bin/format/elf/elf.c
index 2248731b38a2c..b466c312cba49 100644
--- a/libr/bin/format/elf/elf.c
+++ b/libr/bin/format/elf/elf.c
@@ -705,7 +705,7 @@ static Sdb *store_versioninfo_gnu_verdef(ELFOBJ *bin, Elf_(Shdr) *shdr, int sz)
 		return false;
 	}
 	link_shdr = &bin->shdr[shdr->sh_link];
-	if (shdr->sh_size < 1) {
+	if (shdr->sh_size < 1 || shdr->sh_size > SIZE_MAX) {
 		return false;
 	}
 	Elf_(Verdef) *defs = calloc (shdr->sh_size, sizeof (char));
@@ -837,7 +837,7 @@ static Sdb *store_versioninfo_gnu_verneed(ELFOBJ *bin, Elf_(Shdr) *shdr, int sz)
 	if (shdr->sh_link > bin->ehdr.e_shnum) {
 		return NULL;
 	}
-	if (shdr->sh_size < 1) {
+	if (shdr->sh_size < 1 || shdr->sh_size > SIZE_MAX) {
 		return NULL;
 	}
 	sdb = sdb_new0 ();"
CVE-2017-12897,"From 1dcd10aceabbc03bf571ea32b892c522cbe923de Mon Sep 17 00:00:00 2001
From: Guy Harris <guy@alum.mit.edu>
Date: Fri, 3 Feb 2017 12:24:14 -0800
Subject: [PATCH] CVE-2017-12897/ISO CLNS: Use ND_TTEST() for the bounds checks
 in isoclns_print().

This fixes a buffer over-read discovered by Kamil Frankowicz.

Don't pass the remaining caplen - that's too hard to get right, and we
were getting it wrong in at least one case; just use ND_TTEST().

Add a test using the capture file supplied by the reporter(s).
---
 netdissect.h            |   2 +-
 print-atm.c             |   2 +-
 print-chdlc.c           |   4 ++--
 print-ether.c           |   2 +-
 print-fr.c              |   2 +-
 print-gre.c             |   2 +-
 print-isoclns.c         |  13 ++++++-------
 print-juniper.c         |  16 ++++++++--------
 print-llc.c             |   2 +-
 print-mpls.c            |   2 +-
 print-null.c            |   2 +-
 print-ppp.c             |   2 +-
 tests/TESTLIST          |   1 +
 tests/isoclns-oobr.out  |   1 +
 tests/isoclns-oobr.pcap | Bin 0 -> 88 bytes
 15 files changed, 27 insertions(+), 26 deletions(-)
 create mode 100644 tests/isoclns-oobr.out
 create mode 100644 tests/isoclns-oobr.pcap

diff --git a/netdissect.h b/netdissect.h
index 26d6d47b3..9060d1500 100644
--- a/netdissect.h
+++ b/netdissect.h
@@ -512,7 +512,7 @@ extern void ipx_netbios_print(netdissect_options *, const u_char *, u_int);
 extern void ipx_print(netdissect_options *, const u_char *, u_int);
 extern void isakmp_print(netdissect_options *, const u_char *, u_int, const u_char *);
 extern void isakmp_rfc3948_print(netdissect_options *, const u_char *, u_int, const u_char *);
-extern void isoclns_print(netdissect_options *, const u_char *, u_int, u_int);
+extern void isoclns_print(netdissect_options *, const u_char *, u_int);
 extern void krb_print(netdissect_options *, const u_char *);
 extern void l2tp_print(netdissect_options *, const u_char *, u_int);
 extern void lane_print(netdissect_options *, const u_char *, u_int, u_int);
diff --git a/print-atm.c b/print-atm.c
index 7c12262c9..12ada49df 100644
--- a/print-atm.c
+++ b/print-atm.c
@@ -262,7 +262,7 @@ atm_if_print(netdissect_options *ndo,
         if (*p == LLC_UI) {
             if (ndo->ndo_eflag)
                 ND_PRINT((ndo, ""CNLPID ""));
-            isoclns_print(ndo, p + 1, length - 1, caplen - 1);
+            isoclns_print(ndo, p + 1, length - 1);
             return hdrlen;
         }
 
diff --git a/print-chdlc.c b/print-chdlc.c
index ca96cc506..24acfbd2e 100644
--- a/print-chdlc.c
+++ b/print-chdlc.c
@@ -97,9 +97,9 @@ chdlc_print(netdissect_options *ndo, register const u_char *p, u_int length)
                 if (*(p+1) == 0x81 ||
                     *(p+1) == 0x82 ||
                     *(p+1) == 0x83)
-                    isoclns_print(ndo, p + 1, length - 1, ndo->ndo_snapend - p - 1);
+                    isoclns_print(ndo, p + 1, length - 1);
                 else
-                    isoclns_print(ndo, p, length, ndo->ndo_snapend - p);
+                    isoclns_print(ndo, p, length);
                 break;
 	default:
                 if (!ndo->ndo_eflag)
diff --git a/print-ether.c b/print-ether.c
index 57c07ce93..33a135e0c 100644
--- a/print-ether.c
+++ b/print-ether.c
@@ -367,7 +367,7 @@ ethertype_print(netdissect_options *ndo,
 			ND_PRINT((ndo, "" [|osi]""));
 			return (1);
 		}
-		isoclns_print(ndo, p + 1, length - 1, caplen - 1);
+		isoclns_print(ndo, p + 1, length - 1);
 		return(1);
 
 	case ETHERTYPE_PPPOED:
diff --git a/print-fr.c b/print-fr.c
index dad8173c7..f1a8b21e5 100644
--- a/print-fr.c
+++ b/print-fr.c
@@ -329,7 +329,7 @@ fr_print(netdissect_options *ndo,
 	case NLPID_CLNP:
 	case NLPID_ESIS:
 	case NLPID_ISIS:
-		isoclns_print(ndo, p - 1, length + 1, ndo->ndo_snapend - p + 1); /* OSI printers need the NLPID field */
+		isoclns_print(ndo, p - 1, length + 1); /* OSI printers need the NLPID field */
 		break;
 
 	case NLPID_SNAP:
diff --git a/print-gre.c b/print-gre.c
index 4664bd3f1..47a000cf5 100644
--- a/print-gre.c
+++ b/print-gre.c
@@ -227,7 +227,7 @@ gre_print_0(netdissect_options *ndo, const u_char *bp, u_int length)
 		atalk_print(ndo, bp, len);
 		break;
 	case ETHERTYPE_GRE_ISO:
-		isoclns_print(ndo, bp, len, ndo->ndo_snapend - bp);
+		isoclns_print(ndo, bp, len);
 		break;
 	case ETHERTYPE_TEB:
 		ether_print(ndo, bp, len, ndo->ndo_snapend - bp, NULL, NULL);
diff --git a/print-isoclns.c b/print-isoclns.c
index a3583e77b..95339a0ad 100644
--- a/print-isoclns.c
+++ b/print-isoclns.c
@@ -670,10 +670,9 @@ struct isis_tlv_lsp {
 #define ISIS_PSNP_HEADER_SIZE (sizeof(struct isis_psnp_header))
 
 void
-isoclns_print(netdissect_options *ndo,
-              const uint8_t *p, u_int length, u_int caplen)
+isoclns_print(netdissect_options *ndo, const uint8_t *p, u_int length)
 {
-	if (caplen <= 1) { /* enough bytes on the wire ? */
+	if (!ND_TTEST(*p)) { /* enough bytes on the wire ? */
 		ND_PRINT((ndo, ""|OSI""));
 		return;
 	}
@@ -685,7 +684,7 @@ isoclns_print(netdissect_options *ndo,
 
 	case NLPID_CLNP:
 		if (!clnp_print(ndo, p, length))
-			print_unknown_data(ndo, p, ""\n\t"", caplen);
+			print_unknown_data(ndo, p, ""\n\t"", length);
 		break;
 
 	case NLPID_ESIS:
@@ -694,7 +693,7 @@ isoclns_print(netdissect_options *ndo,
 
 	case NLPID_ISIS:
 		if (!isis_print(ndo, p, length))
-			print_unknown_data(ndo, p, ""\n\t"", caplen);
+			print_unknown_data(ndo, p, ""\n\t"", length);
 		break;
 
 	case NLPID_NULLNS:
@@ -721,8 +720,8 @@ isoclns_print(netdissect_options *ndo,
 		if (!ndo->ndo_eflag)
 			ND_PRINT((ndo, ""OSI NLPID 0x%02x unknown"", *p));
 		ND_PRINT((ndo, ""%slength: %u"", ndo->ndo_eflag ? """" : "", "", length));
-		if (caplen > 1)
-			print_unknown_data(ndo, p, ""\n\t"", caplen);
+		if (length > 1)
+			print_unknown_data(ndo, p, ""\n\t"", length);
 		break;
 	}
 }
diff --git a/print-juniper.c b/print-juniper.c
index e4ee11c0b..9a258d9ae 100644
--- a/print-juniper.c
+++ b/print-juniper.c
@@ -793,7 +793,7 @@ juniper_mlppp_print(netdissect_options *ndo,
             mpls_print(ndo, p, l2info.length);
             return l2info.header_len;
         case JUNIPER_LSQ_L3_PROTO_ISO:
-            isoclns_print(ndo, p, l2info.length, l2info.caplen);
+            isoclns_print(ndo, p, l2info.length);
             return l2info.header_len;
         default:
             break;
@@ -848,7 +848,7 @@ juniper_mfr_print(netdissect_options *ndo,
                 mpls_print(ndo, p, l2info.length);
                 return l2info.header_len;
             case JUNIPER_LSQ_L3_PROTO_ISO:
-                isoclns_print(ndo, p, l2info.length, l2info.caplen);
+                isoclns_print(ndo, p, l2info.length);
                 return l2info.header_len;
             default:
                 break;
@@ -861,13 +861,13 @@ juniper_mfr_print(netdissect_options *ndo,
             ND_PRINT((ndo, ""Bundle-ID %u, "", l2info.bundle));
         switch (l2info.proto) {
         case (LLCSAP_ISONS<<8 | LLCSAP_ISONS):
-            isoclns_print(ndo, p + 1, l2info.length - 1, l2info.caplen - 1);
+            isoclns_print(ndo, p + 1, l2info.length - 1);
             break;
         case (LLC_UI<<8 | NLPID_Q933):
         case (LLC_UI<<8 | NLPID_IP):
         case (LLC_UI<<8 | NLPID_IP6):
             /* pass IP{4,6} to the OSI layer for proper link-layer printing */
-            isoclns_print(ndo, p - 1, l2info.length + 1, l2info.caplen + 1);
+            isoclns_print(ndo, p - 1, l2info.length + 1);
             break;
         default:
             ND_PRINT((ndo, ""unknown protocol 0x%04x, length %u"", l2info.proto, l2info.length));
@@ -896,13 +896,13 @@ juniper_mlfr_print(netdissect_options *ndo,
         switch (l2info.proto) {
         case (LLC_UI):
         case (LLC_UI<<8):
-            isoclns_print(ndo, p, l2info.length, l2info.caplen);
+            isoclns_print(ndo, p, l2info.length);
             break;
         case (LLC_UI<<8 | NLPID_Q933):
         case (LLC_UI<<8 | NLPID_IP):
         case (LLC_UI<<8 | NLPID_IP6):
             /* pass IP{4,6} to the OSI layer for proper link-layer printing */
-            isoclns_print(ndo, p - 1, l2info.length + 1, l2info.caplen + 1);
+            isoclns_print(ndo, p - 1, l2info.length + 1);
             break;
         default:
             ND_PRINT((ndo, ""unknown protocol 0x%04x, length %u"", l2info.proto, l2info.length));
@@ -949,7 +949,7 @@ juniper_atm1_print(netdissect_options *ndo,
         }
 
         if (p[0] == 0x03) { /* Cisco style NLPID encaps ? */
-            isoclns_print(ndo, p + 1, l2info.length - 1, l2info.caplen - 1);
+            isoclns_print(ndo, p + 1, l2info.length - 1);
             /* FIXME check if frame was recognized */
             return l2info.header_len;
         }
@@ -1004,7 +1004,7 @@ juniper_atm2_print(netdissect_options *ndo,
         }
 
         if (p[0] == 0x03) { /* Cisco style NLPID encaps ? */
-            isoclns_print(ndo, p + 1, l2info.length - 1, l2info.caplen - 1);
+            isoclns_print(ndo, p + 1, l2info.length - 1);
             /* FIXME check if frame was recognized */
             return l2info.header_len;
         }
diff --git a/print-llc.c b/print-llc.c
index 6bdf59984..be8886abd 100644
--- a/print-llc.c
+++ b/print-llc.c
@@ -324,7 +324,7 @@ llc_print(netdissect_options *ndo, const u_char *p, u_int length, u_int caplen,
 #endif
 	if (ssap == LLCSAP_ISONS && dsap == LLCSAP_ISONS
 	    && control == LLC_UI) {
-		isoclns_print(ndo, p, length, caplen);
+		isoclns_print(ndo, p, length);
 		return (hdrlen);
 	}
 
diff --git a/print-mpls.c b/print-mpls.c
index ba4223346..5c26e4f9b 100644
--- a/print-mpls.c
+++ b/print-mpls.c
@@ -201,7 +201,7 @@ mpls_print(netdissect_options *ndo, const u_char *bp, u_int length)
 		break;
 
 	case PT_OSI:
-		isoclns_print(ndo, p, length, length);
+		isoclns_print(ndo, p, length);
 		break;
 
 	default:
diff --git a/print-null.c b/print-null.c
index 14df5fd15..59b691cc6 100644
--- a/print-null.c
+++ b/print-null.c
@@ -117,7 +117,7 @@ null_if_print(netdissect_options *ndo, const struct pcap_pkthdr *h, const u_char
 		break;
 
 	case BSD_AFNUM_ISO:
-		isoclns_print(ndo, p, length, caplen);
+		isoclns_print(ndo, p, length);
 		break;
 
 	case BSD_AFNUM_APPLETALK:
diff --git a/print-ppp.c b/print-ppp.c
index b30f224c8..134389209 100644
--- a/print-ppp.c
+++ b/print-ppp.c
@@ -1484,7 +1484,7 @@ handle_ppp(netdissect_options *ndo,
 		ipx_print(ndo, p, length);
 		break;
 	case PPP_OSI:
-		isoclns_print(ndo, p, length, length);
+		isoclns_print(ndo, p, length);
 		break;
 	case PPP_MPLS_UCAST:
 	case PPP_MPLS_MCAST:
diff --git a/tests/TESTLIST b/tests/TESTLIST
index ee6fb46ea..986c18fe8 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -442,6 +442,7 @@ stp-v4-length-sigsegv	stp-v4-length-sigsegv.pcap	stp-v4-length-sigsegv.out
 hoobr_pimv1		hoobr_pimv1.pcap		hoobr_pimv1.out
 hoobr_safeputs		hoobr_safeputs.pcap		hoobr_safeputs.out
 isakmp-rfc3948-oobr	isakmp-rfc3948-oobr.pcap	isakmp-rfc3948-oobr.out
+isoclns-oobr		isoclns-oobr.pcap		isoclns-oobr.out
 
 # bad packets from Wilfried Kirsch
 slip-bad-direction	slip-bad-direction.pcap		slip-bad-direction.out	-ve
diff --git a/tests/isoclns-oobr.out b/tests/isoclns-oobr.out
new file mode 100644
index 000000000..c2cfdfb23
--- /dev/null
+++ b/tests/isoclns-oobr.out
@@ -0,0 +1 @@
+|OSI
diff --git a/tests/isoclns-oobr.pcap b/tests/isoclns-oobr.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..276b8a9211fe67c6444cee6ef00f97ddc4a3a031
GIT binary patch
literal 88
scmca|c+)~A1{MYbC=g~~U|?i`a}5lDe3%@J{`b$|{C{R;7#AxI085V&^#A|>

literal 0
HcmV?d00001"
CVE-2017-13146,"From 79e5dbcdd1fc2f714f9bae548bc55d5073f3ed20 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Thu, 27 Apr 2017 07:45:09 -0400
Subject: [PATCH] ...

---
 coders/mat.c | 8 ++++++--
 1 file changed, 6 insertions(+), 2 deletions(-)

diff --git a/coders/mat.c b/coders/mat.c
index 1ff235448de..48cde36e27d 100644
--- a/coders/mat.c
+++ b/coders/mat.c
@@ -627,6 +627,7 @@ static Image *ReadMATImageV4(const ImageInfo *image_info,Image *image,
     depth;
 
 
+  quantum_info=(QuantumInfo *) NULL;
   (void) SeekBlob(image,0,SEEK_SET);
   while (EOFBlob(image) != MagickFalse)
   {
@@ -772,7 +773,8 @@ static Image *ReadMATImageV4(const ImageInfo *image_info,Image *image,
         else
           InsertComplexFloatRow(image,(float *) pixels,y,0,0,exception);
       }
-    quantum_info=DestroyQuantumInfo(quantum_info);
+    if (quantum_info != (QuantumInfo *) NULL)
+      quantum_info=DestroyQuantumInfo(quantum_info);
     rotate_image=RotateImage(image,90.0,exception);
     if (rotate_image != (Image *) NULL)
       {
@@ -890,6 +892,7 @@ static Image *ReadMATImage(const ImageInfo *image_info,ExceptionInfo *exception)
   /*
      Read MATLAB image.
    */
+  quantum_info=(QuantumInfo *) NULL;
   clone_info=CloneImageInfo(image_info);
   if (ReadBlob(image,124,(unsigned char *) &MATLAB_HDR.identific) != 124)
     ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
@@ -1290,7 +1293,8 @@ RestoreMSCWarning
   }
 
   RelinquishMagickMemory(BImgBuff);
-  quantum_info=DestroyQuantumInfo(quantum_info);
+  if (quantum_info != (QuantumInfo *) NULL)
+    quantum_info=DestroyQuantumInfo(quantum_info);
 END_OF_READING:
   clone_info=DestroyImageInfo(clone_info);
   CloseBlob(image);"
CVE-2017-5548,"From 05a974efa4bdf6e2a150e3f27dc6fcf0a9ad5655 Mon Sep 17 00:00:00 2001
From: Stefan Schmidt <stefan@osg.samsung.com>
Date: Thu, 15 Dec 2016 18:40:14 +0100
Subject: [PATCH] ieee802154: atusb: do not use the stack for buffers to make
 them DMA able

From 4.9 we should really avoid using the stack here as this will not be DMA
able on various platforms. This changes the buffers already being present in
time of 4.9 being released. This should go into stable as well.

Reported-by: Dan Carpenter <dan.carpenter@oracle.com>
Cc: stable@vger.kernel.org
Signed-off-by: Stefan Schmidt <stefan@osg.samsung.com>
Signed-off-by: Marcel Holtmann <marcel@holtmann.org>
---
 drivers/net/ieee802154/atusb.c | 31 +++++++++++++++++++++++++++----
 1 file changed, 27 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ieee802154/atusb.c b/drivers/net/ieee802154/atusb.c
index 1253f864737ae3..fa3e8c34b26c95 100644
--- a/drivers/net/ieee802154/atusb.c
+++ b/drivers/net/ieee802154/atusb.c
@@ -117,13 +117,26 @@ static int atusb_read_reg(struct atusb *atusb, uint8_t reg)
 {
 	struct usb_device *usb_dev = atusb->usb_dev;
 	int ret;
+	uint8_t *buffer;
 	uint8_t value;
 
+	buffer = kmalloc(1, GFP_KERNEL);
+	if (!buffer)
+		return -ENOMEM;
+
 	dev_dbg(&usb_dev->dev, ""atusb: reg = 0x%x\n"", reg);
 	ret = atusb_control_msg(atusb, usb_rcvctrlpipe(usb_dev, 0),
 				ATUSB_REG_READ, ATUSB_REQ_FROM_DEV,
-				0, reg, &value, 1, 1000);
-	return ret >= 0 ? value : ret;
+				0, reg, buffer, 1, 1000);
+
+	if (ret >= 0) {
+		value = buffer[0];
+		kfree(buffer);
+		return value;
+	} else {
+		kfree(buffer);
+		return ret;
+	}
 }
 
 static int atusb_write_subreg(struct atusb *atusb, uint8_t reg, uint8_t mask,
@@ -608,9 +621,13 @@ static const struct ieee802154_ops atusb_ops = {
 static int atusb_get_and_show_revision(struct atusb *atusb)
 {
 	struct usb_device *usb_dev = atusb->usb_dev;
-	unsigned char buffer[3];
+	unsigned char *buffer;
 	int ret;
 
+	buffer = kmalloc(3, GFP_KERNEL);
+	if (!buffer)
+		return -ENOMEM;
+
 	/* Get a couple of the ATMega Firmware values */
 	ret = atusb_control_msg(atusb, usb_rcvctrlpipe(usb_dev, 0),
 				ATUSB_ID, ATUSB_REQ_FROM_DEV, 0, 0,
@@ -631,15 +648,20 @@ static int atusb_get_and_show_revision(struct atusb *atusb)
 		dev_info(&usb_dev->dev, ""Please update to version 0.2 or newer"");
 	}
 
+	kfree(buffer);
 	return ret;
 }
 
 static int atusb_get_and_show_build(struct atusb *atusb)
 {
 	struct usb_device *usb_dev = atusb->usb_dev;
-	char build[ATUSB_BUILD_SIZE + 1];
+	char *build;
 	int ret;
 
+	build = kmalloc(ATUSB_BUILD_SIZE + 1, GFP_KERNEL);
+	if (!build)
+		return -ENOMEM;
+
 	ret = atusb_control_msg(atusb, usb_rcvctrlpipe(usb_dev, 0),
 				ATUSB_BUILD, ATUSB_REQ_FROM_DEV, 0, 0,
 				build, ATUSB_BUILD_SIZE, 1000);
@@ -648,6 +670,7 @@ static int atusb_get_and_show_build(struct atusb *atusb)
 		dev_info(&usb_dev->dev, ""Firmware: build %s\n"", build);
 	}
 
+	kfree(build);
 	return ret;
 }"
CVE-2017-5188,"From ba27c91351878bc297ec4baba0bd488a2f3b568d Mon Sep 17 00:00:00 2001
From: Michael Schroeder <mls@suse.de>
Date: Fri, 17 Mar 2017 10:57:58 +0100
Subject: [PATCH] [backend] only allow plain files in cpio_sender

No devices, sockets, directories, symlinks please...
---
 src/backend/BSHTTP.pm | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

diff --git a/src/backend/BSHTTP.pm b/src/backend/BSHTTP.pm
index d91de76b0a0..928b88a9922 100644
--- a/src/backend/BSHTTP.pm
+++ b/src/backend/BSHTTP.pm
@@ -448,13 +448,24 @@ sub cpio_sender {
       my $filename = $file->{'filename'};
       if (ref($filename)) {
 	*F = $filename;
-      } elsif (!open(F, '<', $filename)) {
-	$errors->{'data'} .= ""$file->{'name'}: $filename: $!\n"";
-	next;
+      } else {
+	@s = lstat($filename);
+	if (!@s) {
+	  $errors->{'data'} .= ""$file->{'name'}: $filename: $!\n"";
+	  next;
+	}
+	if (-l _ || ! -f _) {
+	  $errors->{'data'} .= ""$file->{'name'}: $filename: not a plain file\n"";
+	  next;
+	}
+	if (!open(F, '<', $filename)) {
+	  $errors->{'data'} .= ""$file->{'name'}: $filename: $!\n"";
+	  next;
+	}
       }
       @s = stat(F);
       if (!@s) {
-	$errors->{'data'} .= ""$file->{'name'}: stat: $!\n"";
+	$errors->{'data'} .= ""$file->{'name'}: fstat: $!\n"";
 	close F unless ref $filename;
 	next;
       }"
CVE-2017-13042,"From 39582c04cc5e34054b2936b423072fb9df2ff6ef Mon Sep 17 00:00:00 2001
From: Denis Ovsienko <denis@ovsienko.info>
Date: Sat, 29 Jul 2017 18:52:38 +0100
Subject: [PATCH] CVE-2017-13042/HNCP: add DHCPv6-Data bounds checks

hncp_print_rec() validates each HNCP TLV to be within the declared as
well as the on-the-wire packet space. However, dhcpv6_print() in the same
file didn't do the same for the DHCPv6 options within the HNCP
DHCPv6-Data TLV value, which could cause an out-of-bounds read when
decoding an invalid packet. Add missing checks to dhcpv6_print().

This fixes a buffer over-read discovered by Bhargava Shastry,
SecT/TU Berlin.

Add a test using the capture file supplied by the reporter(s).
---
 print-hncp.c                    |   4 ++++
 tests/TESTLIST                  |   6 ++++++
 tests/hncp_dhcpv6data-oobr.out  |   7 +++++++
 tests/hncp_dhcpv6data-oobr.pcap | Bin 0 -> 148 bytes
 4 files changed, 17 insertions(+)
 create mode 100644 tests/hncp_dhcpv6data-oobr.out
 create mode 100644 tests/hncp_dhcpv6data-oobr.pcap

diff --git a/print-hncp.c b/print-hncp.c
index 32adafa9c..d0c9a3ea6 100644
--- a/print-hncp.c
+++ b/print-hncp.c
@@ -318,6 +318,8 @@ dhcpv6_print(netdissect_options *ndo,
 
     i = 0;
     while (i < length) {
+        if (i + 4 > length)
+            return -1;
         tlv = cp + i;
         type = EXTRACT_16BITS(tlv);
         optlen = EXTRACT_16BITS(tlv + 2);
@@ -329,6 +331,8 @@ dhcpv6_print(netdissect_options *ndo,
 
         ND_PRINT((ndo, ""%s"", tok2str(dh6opt_str, ""Unknown"", type)));
         ND_PRINT((ndo,"" (%u)"", optlen + 4 ));
+        if (i + 4 + optlen > length)
+            return -1;
 
         switch (type) {
             case DH6OPT_DNS_SERVERS:
diff --git a/tests/TESTLIST b/tests/TESTLIST
index a8811bc69..c72f7de6f 100644
--- a/tests/TESTLIST
+++ b/tests/TESTLIST
@@ -554,6 +554,12 @@ radius_attr_asan	radius_attr_asan.pcap		radius_attr_asan.out	-v
 ospf6_decode_v3_asan	ospf6_decode_v3_asan.pcap	ospf6_decode_v3_asan.out -v
 ip_ts_opts_asan		ip_ts_opts_asan.pcap		ip_ts_opts_asan.out	-v
 isakmpv1-attr-oobr	isakmpv1-attr-oobr.pcap		isakmpv1-attr-oobr.out	-v
+# The case below depends on the bug in print-hncp.c, which at the time of
+# discovery had codepoints for DHCPv6-Data and DHCPv4-Data swapped around.
+# After the bugfix the output will be different because of the different
+# code path and will not test the vulnerability unless modified respectively.
+# The .pcap file is truncated after the 1st packet.
+hncp_dhcpv6data-oobr	hncp_dhcpv6data-oobr.pcap	hncp_dhcpv6data-oobr.out -v -c1
 
 # bad packets from Katie Holly
 mlppp-oobr		mlppp-oobr.pcap			mlppp-oobr.out
diff --git a/tests/hncp_dhcpv6data-oobr.out b/tests/hncp_dhcpv6data-oobr.out
new file mode 100644
index 000000000..376502d90
--- /dev/null
+++ b/tests/hncp_dhcpv6data-oobr.out
@@ -0,0 +1,7 @@
+IP6 (flowlabel 0x01cc3, hlim 234, next-header UDP (17) payload length: 11025) 400::e4ff:ffff:adf9:8900:0.1646 > 62:9de3:ff47:ebec:8206:ff00:ad:ff00.8231: hncp (11017)
+	Future use: type=16384 (5)
+	DHCPv6-Data (25)
+		Unknown (4)
+		Unknown (4)
+		SNTP-servers (61956)  (invalid)
+	[|hncp]
diff --git a/tests/hncp_dhcpv6data-oobr.pcap b/tests/hncp_dhcpv6data-oobr.pcap
new file mode 100644
index 0000000000000000000000000000000000000000..3430e9a8587613a3a7849bbb18dc29993332ef42
GIT binary patch
literal 148
zcmca|c+)~A1{MYo_z%K-3=E7wns-Tt01E>XLpG4@_fLS~z#f+c;tULjH9e;>wB1c$
zkU6X^DEJDZ@5%rF|JVNP1gd06n)~>_`|CGNY(TTt{%2szQ&2x_C-B4pWT>EsCxaS;
msK_IbLLiX;#IXM0frHcP4m>%qVEbGS23P(!TjugVU;qG&z%SbX

literal 0
HcmV?d00001"
