vuln_id,code_diff
CVE-2016-6198,"From 9409e22acdfc9153f88d9b1ed2bd2a5b34d2d3ca Mon Sep 17 00:00:00 2001
From: Miklos Szeredi <mszeredi@redhat.com>
Date: Wed, 11 May 2016 01:16:37 +0200
Subject: [PATCH] vfs: rename: check backing inode being equal

If a file is renamed to a hardlink of itself POSIX specifies that rename(2)
should do nothing and return success.

This condition is checked in vfs_rename().  However it won't detect hard
links on overlayfs where these are given separate inodes on the overlayfs
layer.

Overlayfs itself detects this condition and returns success without doing
anything, but then vfs_rename() will proceed as if this was a successful
rename (detach_mounts(), d_move()).

The correct thing to do is to detect this condition before even calling
into overlayfs.  This patch does this by calling vfs_select_inode() to get
the underlying inodes.

Signed-off-by: Miklos Szeredi <mszeredi@redhat.com>
Cc: <stable@vger.kernel.org> # v4.2+
---
 fs/namei.c | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/fs/namei.c b/fs/namei.c
index 1d9ca2d5dff68e..3ef87d673bbea6 100644
--- a/fs/namei.c
+++ b/fs/namei.c
@@ -4213,7 +4213,11 @@ int vfs_rename(struct inode *old_dir, struct dentry *old_dentry,
 	bool new_is_dir = false;
 	unsigned max_links = new_dir->i_sb->s_max_links;
 
-	if (source == target)
+	/*
+	 * Check source == target.
+	 * On overlayfs need to look at underlying inodes.
+	 */
+	if (vfs_select_inode(old_dentry, 0) == vfs_select_inode(new_dentry, 0))
 		return 0;
 
 	error = may_delete(old_dir, old_dentry, is_dir);"
CVE-2016-10064,"From 63302366a63602acbaad5c8223a105811b2adddd Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Wed, 6 Jul 2016 08:18:50 -0400
Subject: [PATCH] Improve buffer overflow sanity check

---
 coders/tiff.c | 15 +++++++--------
 1 file changed, 7 insertions(+), 8 deletions(-)

diff --git a/coders/tiff.c b/coders/tiff.c
index 8acce45d04e..969de709380 100644
--- a/coders/tiff.c
+++ b/coders/tiff.c
@@ -65,6 +65,7 @@
 #include ""MagickCore/log.h""
 #include ""MagickCore/magick.h""
 #include ""MagickCore/memory_.h""
+#include ""MagickCore/memory-private.h""
 #include ""MagickCore/module.h""
 #include ""MagickCore/monitor.h""
 #include ""MagickCore/monitor-private.h""
@@ -1902,14 +1903,13 @@ RestoreMSCWarning
           }
         (void) SetImageStorageClass(image,DirectClass,exception);
         number_pixels=(MagickSizeType) columns*rows;
-        if ((number_pixels*sizeof(uint32)) != (MagickSizeType) ((size_t)
-            (number_pixels*sizeof(uint32))))
+        if (HeapOverflowSanityCheck(rows,sizeof(*tile_pixels)) != MagickFalse)
           {
             TIFFClose(tiff);
             ThrowReaderException(ResourceLimitError,""MemoryAllocationFailed"");
           }
-        tile_pixels=(uint32 *) AcquireQuantumMemory(columns,
-          rows*sizeof(*tile_pixels));
+        tile_pixels=(uint32 *) AcquireQuantumMemory(columns,rows*
+          sizeof(*tile_pixels));
         if (tile_pixels == (uint32 *) NULL)
           {
             TIFFClose(tiff);
@@ -2010,8 +2010,7 @@ RestoreMSCWarning
           Convert TIFF image to DirectClass MIFF image.
         */
         number_pixels=(MagickSizeType) image->columns*image->rows;
-        if ((number_pixels*sizeof(uint32)) != (MagickSizeType) ((size_t)
-            (number_pixels*sizeof(uint32))))
+        if (HeapOverflowSanityCheck(image->rows,sizeof(*pixels)) != MagickFalse)
           {
             TIFFClose(tiff);
             ThrowReaderException(ResourceLimitError,""MemoryAllocationFailed"");
@@ -2024,8 +2023,8 @@ RestoreMSCWarning
             ThrowReaderException(ResourceLimitError,""MemoryAllocationFailed"");
           }
         pixels=(uint32 *) GetVirtualMemoryBlob(pixel_info);
-        (void) TIFFReadRGBAImage(tiff,(uint32) image->columns,
-          (uint32) image->rows,(uint32 *) pixels,0);
+        (void) TIFFReadRGBAImage(tiff,(uint32) image->columns,(uint32)
+          image->rows,(uint32 *) pixels,0);
         /*
           Convert image to DirectClass pixel packets.
         */"
CVE-2016-5739,"From 2f4950828ec241e8cbdcf13090c2582a6fa620cb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Mon, 20 Jun 2016 10:46:51 +0200
Subject: [PATCH] Update referrer <meta> to match current standards
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 libraries/Header.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libraries/Header.php b/libraries/Header.php
index c20dfeb35ce6..93d05ca4bf83 100644
--- a/libraries/Header.php
+++ b/libraries/Header.php
@@ -639,7 +639,7 @@ private function _getHtmlStart()
     private function _getMetaTags()
     {
         $retval  = '<meta charset=""utf-8"" />';
-        $retval .= '<meta name=""referrer"" content=""none"" />';
+        $retval .= '<meta name=""referrer"" content=""no-referrer"" />';
         $retval .= '<meta name=""robots"" content=""noindex,nofollow"" />';
         $retval .= '<meta http-equiv=""X-UA-Compatible"" content=""IE=Edge"">';
         if (! $GLOBALS['cfg']['AllowThirdPartyFraming']) {"
CVE-2016-5843,"From 3700f75c67f6ed1d39bc213445c6d12a458e1af9 Mon Sep 17 00:00:00 2001
From: Carlos Rodriguez <carlos.rodriguez@otrs.com>
Date: Mon, 27 Jun 2016 16:28:09 -0500
Subject: [PATCH] Fixed issue with not correctly quoted search parameters.

---
 CHANGES-FAQ.md                          |  1 +
 FAQ.sopm                                |  1 +
 Kernel/System/FAQSearch.pm              | 73 +++++++++++++++++-----
 doc/en/FAQ.xml                          |  2 +-
 scripts/test/FAQSearch.t                | 59 ++++++++++++++++--
 scripts/test/FAQSearch/InConditionGet.t | 80 +++++++++++++++++++++++++
 6 files changed, 194 insertions(+), 22 deletions(-)
 create mode 100644 scripts/test/FAQSearch/InConditionGet.t

diff --git a/CHANGES-FAQ.md b/CHANGES-FAQ.md
index 2bb621b5e..ce7ae0142 100644
--- a/CHANGES-FAQ.md
+++ b/CHANGES-FAQ.md
@@ -1,4 +1,5 @@
 #4.0.4 - 2015-??-??
+- 2016-06-27 Fixed issue with not correctly quoted search parameters.
 
 #4.0.3 - 2015-12-01
  - 2015-11-24 Fixed bug#[11687](http://bugs.otrs.org/show_bug.cgi?id=11687) - XSS injection vulnerability in modules AgentFAQSearch and AgentFAQSearchSmall on parameter profile.
diff --git a/FAQ.sopm b/FAQ.sopm
index 58d48d8a0..bb81c0cd5 100644
--- a/FAQ.sopm
+++ b/FAQ.sopm
@@ -117,6 +117,7 @@
         <File Permission=""644"" Location=""Kernel/System/FAQSearch.pm""/>
         <File Permission=""644"" Location=""Kernel/System/LinkObject/FAQ.pm""/>
         <File Permission=""644"" Location=""Kernel/System/Stats/Static/FAQAccess.pm""/>
+        <File Permission=""644"" Location=""scripts/test/FAQSearch/InConditionGet.t""/>
         <File Permission=""644"" Location=""scripts/test/FAQ.t""/>
         <File Permission=""644"" Location=""scripts/test/FAQSearch.t""/>
         <File Permission=""644"" Location=""scripts/test/sample/FAQ-Test1.doc""/>
diff --git a/Kernel/System/FAQSearch.pm b/Kernel/System/FAQSearch.pm
index 8317e1f09..3f1f314e6 100644
--- a/Kernel/System/FAQSearch.pm
+++ b/Kernel/System/FAQSearch.pm
@@ -218,6 +218,43 @@ sub FAQSearch {
         Result => 'vrate',
     );
 
+    # check types of given arguments
+    ARGUMENT:
+    for my $Key (qw(LanguageIDs CategoryIDs ValidIDs CreatedUserIDs LastChangedUserIDs)) {
+
+        next ARGUMENT if !$Param{$Key};
+        next ARGUMENT if ref $Param{$Key} eq 'ARRAY' && @{ $Param{$Key} };
+
+        # log error
+        $Kernel::OM->Get('Kernel::System::Log')->Log(
+            Priority => 'error',
+            Message  => ""The given param '$Key' is invalid or an empty array reference!"",
+        );
+        return;
+    }
+
+    # get database object
+    my $DBObject = $Kernel::OM->Get('Kernel::System::DB');
+
+    # quote id array elements
+    ARGUMENT:
+    for my $Key (qw(LanguageIDs CategoryIDs ValidIDs CreatedUserIDs LastChangedUserIDs)) {
+        next ARGUMENT if !$Param{$Key};
+
+        # quote elements
+        for my $Element ( @{ $Param{$Key} } ) {
+            if ( !defined $DBObject->Quote( $Element, 'Integer' ) ) {
+
+                # log error
+                $Kernel::OM->Get('Kernel::System::Log')->Log(
+                    Priority => 'error',
+                    Message  => ""The given param '$Element' in '$Key' is invalid!"",
+                );
+                return;
+            }
+        }
+    }
+
     my $FAQDynamicFields = [];
     my %ValidDynamicFieldParams;
     my %FAQDynamicFieldName2Config;
@@ -298,7 +335,6 @@ sub FAQSearch {
     my $Ext = '';
 
     # get needed objects
-    my $DBObject     = $Kernel::OM->Get('Kernel::System::DB');
     my $ConfigObject = $Kernel::OM->Get('Kernel::Config');
 
     # full-text search
@@ -442,7 +478,9 @@ sub FAQSearch {
     # search for states
     if ( $Param{States} && ref $Param{States} eq 'HASH' && %{ $Param{States} } ) {
 
-        my @States = map {$_} keys %{ $Param{States} };
+        my @States = map { $DBObject->Quote( $_, 'Integer' ) } keys %{ $Param{States} };
+
+        return if scalar @States != keys $Param{States};
 
         my $InString = $Self->_InConditionGet(
             TableColumn => 's.type_id',
@@ -1019,16 +1057,20 @@ condition string from an array.
 sub _InConditionGet {
     my ( $Self, %Param ) = @_;
 
-    # check needed stuff
-    for my $Key (qw(TableColumn IDRef)) {
-        if ( !$Param{$Key} ) {
-            $Kernel::OM->Get('Kernel::System::Log')->Log(
-                Priority => 'error',
-                Message  => ""Need $Key!"",
-            );
+    if ( !$Param{TableColumn} ) {
+        $Kernel::OM->Get('Kernel::System::Log')->Log(
+            Priority => 'error',
+            Message  => ""Need TableColumn!"",
+        );
+        return;
+    }
 
-            return;
-        }
+    if ( !$Param{IDRef} || ref $Param{IDRef} ne 'ARRAY' || !@{ $Param{IDRef} } ) {
+        $Kernel::OM->Get('Kernel::System::Log')->Log(
+            Priority => 'error',
+            Message  => ""Need IDRef!"",
+        );
+        return;
     }
 
     # sort ids to cache the SQL query
@@ -1037,10 +1079,9 @@ sub _InConditionGet {
     # get database object
     my $DBObject = $Kernel::OM->Get('Kernel::System::DB');
 
-    # quote values
-    for my $Value (@SortedIDs) {
-        $DBObject->Quote( $Value, 'Integer' );
-    }
+    # Error out if some values were not integers.
+    @SortedIDs = map { $Kernel::OM->Get('Kernel::System::DB')->Quote( $_, 'Integer' ) } @SortedIDs;
+    return if scalar @SortedIDs != scalar @{ $Param{IDRef} };
 
     # split IN statement with more than 900 elements in more statements combined with OR
     # because Oracle doesn't support more than 1000 elements in one IN statement.
@@ -1050,7 +1091,7 @@ sub _InConditionGet {
 
         my @SortedIDsPart = splice @SortedIDs, 0, 900;
 
-        my $IDString = join ',', @SortedIDsPart;
+        my $IDString = join ', ', @SortedIDsPart;
 
         push @SQLStrings, "" $Param{TableColumn} IN ($IDString) "";
     }
diff --git a/doc/en/FAQ.xml b/doc/en/FAQ.xml
index a818a6b9e..aad39a963 100644
--- a/doc/en/FAQ.xml
+++ b/doc/en/FAQ.xml
@@ -1561,7 +1561,7 @@ shell> bin/otrs.PackageManager.pl -a install -p /path/to/$Name-$Version.opm
             command on the command line:
         </para>
         <screen>
-shell> perl bin/otrs.UnitTest.pl -n FAQ:FAQSearch:GenericInterface/FAQConnector
+shell> perl bin/otrs.UnitTest.pl -n FAQ:FAQSearch:FAQSearch/InConditionGet:GenericInterface/FAQConnector
         </screen>
         <para>Run all available unit tests</para>
         <para>
diff --git a/scripts/test/FAQSearch.t b/scripts/test/FAQSearch.t
index e64f52d8a..bc1b1a90f 100644
--- a/scripts/test/FAQSearch.t
+++ b/scripts/test/FAQSearch.t
@@ -479,6 +479,58 @@ for my $Test (@Tests) {
     );
 }
 
+# other tests
+@Tests = (
+    {
+        Name   => 'States Hash Correct IDs',
+        Config => {
+            %SearchConfigTemplate,
+            States => {
+                1 => 'Internal',
+                2 => 'External',
+                3 => 'Public',
+            },
+        },
+        ExpectedResults => [ $AddedFAQs[0], $AddedFAQs[1] ],
+    },
+    {
+        Name   => 'States Hash Incorrect IDs (Float)',
+        Config => {
+            %SearchConfigTemplate,
+            States => {
+                1.1 => 'Internal',
+                2.2 => 'External',
+                3.3 => 'Public',
+            },
+        },
+        ExpectedResults => [],
+    },
+    {
+        Name   => 'States Hash Incorrect IDs (String)',
+        Config => {
+            %SearchConfigTemplate,
+            States => {
+                'Internal' => 'Internal',
+                'External' => 'External',
+                'Public'   => 'Public',
+            },
+        },
+        ExpectedResults => [],
+    },
+
+);
+
+# execute the tests
+for my $Test (@Tests) {
+    my @FAQIDs = $FAQObject->FAQSearch( %{ $Test->{Config} } );
+
+    $Self->IsDeeply(
+        \@FAQIDs,
+        $Test->{ExpectedResults},
+        ""$Test->{Name} FAQSearch()"",
+    );
+}
+
 # time based tests
 
 # update FAQs
@@ -749,12 +801,9 @@ for my $Test (@Tests) {
         Name   => 'Wrong LastChangedUserIDs Format',
         Config => {
             %SearchConfigTemplate,
-            CreatedUserIDs => $AddedUsers[2],
+            LastChangedUserIDs => $AddedUsers[2],
         },
-        ExpectedResults => [
-            $AddedFAQs[0],
-            $AddedFAQs[1],
-        ],
+        ExpectedResults => [],
     },
 );
 
diff --git a/scripts/test/FAQSearch/InConditionGet.t b/scripts/test/FAQSearch/InConditionGet.t
new file mode 100644
index 000000000..cd791f405
--- /dev/null
+++ b/scripts/test/FAQSearch/InConditionGet.t
@@ -0,0 +1,80 @@
+# --
+# Copyright (C) 2001-2016 OTRS AG, http://otrs.com/
+# --
+# This software comes with ABSOLUTELY NO WARRANTY. For details, see
+# the enclosed file COPYING for license information (AGPL). If you
+# did not receive this file, see http://www.gnu.org/licenses/agpl.txt.
+# --
+
+## no critic (Modules::RequireExplicitPackage)
+use strict;
+use warnings;
+use utf8;
+
+use vars (qw($Self));
+
+# get helper object
+$Kernel::OM->ObjectParamAdd(
+    'Kernel::System::UnitTest::Helper' => {
+        RestoreDatabase => 1,
+    },
+);
+my $Helper = $Kernel::OM->Get('Kernel::System::UnitTest::Helper');
+
+my @Tests = (
+    {
+        Name   => 'No array',
+        Params => {
+            TableColumn => 'test.table',
+            IDRef       => 1,
+        },
+        Result => undef,
+    },
+    {
+        Name   => 'Single Integer',
+        Params => {
+            TableColumn => 'test.table',
+            IDRef       => [1],
+        },
+        Result => ' (  test.table IN (1)  ) ',
+    },
+    {
+        Name   => 'Sorted values',
+        Params => {
+            TableColumn => 'test.table',
+            IDRef       => [ 2, 1, -1, 0 ],
+        },
+        Result => ' (  test.table IN (-1, 0, 1, 2)  ) ',
+    },
+    {
+        Name   => 'Invalid value',
+        Params => {
+            TableColumn => 'test.table',
+            IDRef       => [1.1],
+        },
+        Result => undef,
+    },
+    {
+        Name   => 'Mix of valid and invalid values',
+        Params => {
+            TableColumn => 'test.table',
+            IDRef       => [ 1, 1.1 ],
+        },
+        Result => undef,
+    },
+);
+
+# get FAQ object
+my $FAQObject = $Kernel::OM->Get('Kernel::System::FAQ');
+
+for my $Test (@Tests) {
+    $Self->Is(
+        scalar $FAQObject->_InConditionGet( %{ $Test->{Params} } ),
+        $Test->{Result},
+        ""$Test->{Name} _InConditionGet()""
+    );
+}
+
+# cleanup is done by RestoreDatabase.
+
+1;"
CVE-2016-4309,"From b329a14adc40868965076a77210452e396243dcd Mon Sep 17 00:00:00 2001
From: nitriques <nico@nitriques.com>
Date: Mon, 23 May 2016 14:09:34 -0400
Subject: [PATCH] Better php.ini overrides for insecure setups

This change is to protect our users against a poorly setup server. PHP
can allow pretty scary things security-wise, so it's best to make sure
things that can only have one valid setting should be enforced.

Thanks to @hyp3rlinx for this.
---
 symphony/lib/core/class.session.php | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/symphony/lib/core/class.session.php b/symphony/lib/core/class.session.php
index c0075a166..dedb526fa 100644
--- a/symphony/lib/core/class.session.php
+++ b/symphony/lib/core/class.session.php
@@ -58,6 +58,9 @@ public static function start($lifetime = 0, $path = '/', $domain = null, $httpOn
 
             if (session_id() == '') {
                 ini_set('session.save_handler', 'user');
+                ini_set('session.use_trans_sid', '0');
+                ini_set('session.use_strict_mode', '1');
+                ini_set('session.use_only_cookies', '1');
                 ini_set('session.gc_maxlifetime', $lifetime);
                 ini_set('session.gc_probability', '1');
                 ini_set('session.gc_divisor', Symphony::Configuration()->get('session_gc_divisor', 'symphony'));"
CVE-2016-10071,"From f3b483e8b054c50149912523b4773687e18afe25 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Sun, 14 Feb 2016 09:24:32 -0500
Subject: [PATCH] https://github.com/ImageMagick/ImageMagick/issues/131

---
 coders/mat.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/coders/mat.c b/coders/mat.c
index b451c40d77d..b81dc6880e5 100644
--- a/coders/mat.c
+++ b/coders/mat.c
@@ -875,7 +875,7 @@ RestoreMSCWarning
       }
 
   /* ----- Load raster data ----- */
-    BImgBuff = (unsigned char *) AcquireQuantumMemory((size_t) (ldblk),sizeof(unsigned char));    /* Ldblk was set in the check phase */
+    BImgBuff = (unsigned char *) AcquireQuantumMemory((size_t) (ldblk),sizeof(double));    /* Ldblk was set in the check phase */
     if (BImgBuff == NULL)
       ThrowReaderException(ResourceLimitError,""MemoryAllocationFailed"");"
CVE-2016-6491,"From dd84447b63a71fa8c3f47071b09454efc667767b Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Sun, 24 Jul 2016 20:07:03 -0400
Subject: [PATCH] Prevent buffer overflow (bug report from Ibrahim el-sayed)

---
 MagickCore/property.c | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/MagickCore/property.c b/MagickCore/property.c
index 772f3d59fe1..0b4b75c4941 100644
--- a/MagickCore/property.c
+++ b/MagickCore/property.c
@@ -665,6 +665,11 @@ static MagickBooleanType Get8BIMProperty(const Image *image,const char *key,
     if ((count & 0x01) == 0)
       (void) ReadPropertyByte(&info,&length);
     count=(ssize_t) ReadPropertyMSBLong(&info,&length);
+    if ((count < 0) || ((size_t) count > length))
+      {
+        length=0; 
+        continue;
+      }
     if ((*name != '\0') && (*name != '#'))
       if ((resource == (char *) NULL) || (LocaleCompare(name,resource) != 0))
         {"
CVE-2016-10192,"From a5d25faa3f4b18dac737fdb35d0dd68eb0dc2156 Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Mon, 5 Dec 2016 17:27:45 +0100
Subject: [PATCH] ffserver: Check chunk size

Fixes out of array access

Fixes: poc_ffserver.py
Found-by: Paul Cher <paulcher@icloud.com>
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
---
 ffserver.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/ffserver.c b/ffserver.c
index 3ff761f68f453..02a583464b378 100644
--- a/ffserver.c
+++ b/ffserver.c
@@ -2738,8 +2738,10 @@ static int http_receive_data(HTTPContext *c)
         } else if (c->buffer_ptr - c->buffer >= 2 &&
                    !memcmp(c->buffer_ptr - 1, ""\r\n"", 2)) {
             c->chunk_size = strtol(c->buffer, 0, 16);
-            if (c->chunk_size == 0) // end of stream
+            if (c->chunk_size <= 0) { // end of stream or invalid chunk size
+                c->chunk_size = 0;
                 goto fail;
+            }
             c->buffer_ptr = c->buffer;
             break;
         } else if (++loop_run > 10)
@@ -2761,6 +2763,7 @@ static int http_receive_data(HTTPContext *c)
             /* end of connection : close it */
             goto fail;
         else {
+            av_assert0(len <= c->chunk_size);
             c->chunk_size -= len;
             c->buffer_ptr += len;
             c->data_count += len;"
CVE-2016-3078,"From 3b8d4de300854b3517c7acb239b84f7726c1353c Mon Sep 17 00:00:00 2001
From: Stanislav Malyshev <stas@php.net>
Date: Tue, 19 Apr 2016 23:49:22 -0700
Subject: [PATCH] Fix bug #71923 - integer overflow in ZipArchive::getFrom*

---
 ext/zip/php_zip.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/ext/zip/php_zip.c b/ext/zip/php_zip.c
index db201af6347f6..7c9adf4af780a 100644
--- a/ext/zip/php_zip.c
+++ b/ext/zip/php_zip.c
@@ -1281,7 +1281,7 @@ static PHP_NAMED_FUNCTION(zif_zip_entry_read)
 	}
 
 	if (zr_rsrc->zf) {
-		buffer = zend_string_alloc(len, 0);
+		buffer = zend_string_safe_alloc(1, len, 0, 0);
 		n = zip_fread(zr_rsrc->zf, ZSTR_VAL(buffer), ZSTR_LEN(buffer));
 		if (n > 0) {
 			ZSTR_VAL(buffer)[n] = '\0';
@@ -2728,7 +2728,7 @@ static void php_zip_get_from(INTERNAL_FUNCTION_PARAMETERS, int type) /* {{{ */
 		RETURN_FALSE;
 	}
 
-	buffer = zend_string_alloc(len, 0);
+	buffer = zend_string_safe_alloc(1, len, 0, 0);
 	n = zip_fread(zf, ZSTR_VAL(buffer), ZSTR_LEN(buffer));
 	if (n < 1) {
 		zend_string_free(buffer);"
CVE-2016-2383,"From a1b14d27ed0965838350f1377ff97c93ee383492 Mon Sep 17 00:00:00 2001
From: Daniel Borkmann <daniel@iogearbox.net>
Date: Wed, 10 Feb 2016 16:47:11 +0100
Subject: [PATCH] bpf: fix branch offset adjustment on backjumps after patching
 ctx expansion

When ctx access is used, the kernel often needs to expand/rewrite
instructions, so after that patching, branch offsets have to be
adjusted for both forward and backward jumps in the new eBPF program,
but for backward jumps it fails to account the delta. Meaning, for
example, if the expansion happens exactly on the insn that sits at
the jump target, it doesn't fix up the back jump offset.

Analysis on what the check in adjust_branches() is currently doing:

  /* adjust offset of jmps if necessary */
  if (i < pos && i + insn->off + 1 > pos)
    insn->off += delta;
  else if (i > pos && i + insn->off + 1 < pos)
    insn->off -= delta;

First condition (forward jumps):

  Before:                         After:

  insns[0]                        insns[0]
  insns[1] <--- i/insn            insns[1] <--- i/insn
  insns[2] <--- pos               insns[P] <--- pos
  insns[3]                        insns[P]  `------| delta
  insns[4] <--- target_X          insns[P]   `-----|
  insns[5]                        insns[3]
                                  insns[4] <--- target_X
                                  insns[5]

First case is if we cross pos-boundary and the jump instruction was
before pos. This is handeled correctly. I.e. if i == pos, then this
would mean our jump that we currently check was the patchlet itself
that we just injected. Since such patchlets are self-contained and
have no awareness of any insns before or after the patched one, the
delta is correctly not adjusted. Also, for the second condition in
case of i + insn->off + 1 == pos, means we jump to that newly patched
instruction, so no offset adjustment are needed. That part is correct.

Second condition (backward jumps):

  Before:                         After:

  insns[0]                        insns[0]
  insns[1] <--- target_X          insns[1] <--- target_X
  insns[2] <--- pos <-- target_Y  insns[P] <--- pos <-- target_Y
  insns[3]                        insns[P]  `------| delta
  insns[4] <--- i/insn            insns[P]   `-----|
  insns[5]                        insns[3]
                                  insns[4] <--- i/insn
                                  insns[5]

Second interesting case is where we cross pos-boundary and the jump
instruction was after pos. Backward jump with i == pos would be
impossible and pose a bug somewhere in the patchlet, so the first
condition checking i > pos is okay only by itself. However, i +
insn->off + 1 < pos does not always work as intended to trigger the
adjustment. It works when jump targets would be far off where the
delta wouldn't matter. But, for example, where the fixed insn->off
before pointed to pos (target_Y), it now points to pos + delta, so
that additional room needs to be taken into account for the check.
This means that i) both tests here need to be adjusted into pos + delta,
and ii) for the second condition, the test needs to be <= as pos
itself can be a target in the backjump, too.

Fixes: 9bac3d6d548e (""bpf: allow extended BPF programs access skb fields"")
Signed-off-by: Daniel Borkmann <daniel@iogearbox.net>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 kernel/bpf/verifier.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index d1d3e8f57de907..2e7f7ab739e41c 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -2082,7 +2082,7 @@ static void adjust_branches(struct bpf_prog *prog, int pos, int delta)
 		/* adjust offset of jmps if necessary */
 		if (i < pos && i + insn->off + 1 > pos)
 			insn->off += delta;
-		else if (i > pos && i + insn->off + 1 < pos)
+		else if (i > pos + delta && i + insn->off + 1 <= pos + delta)
 			insn->off -= delta;
 	}
 }"
CVE-2016-7124,"From 20ce2fe8e3c211a42fee05a461a5881be9a8790e Mon Sep 17 00:00:00 2001
From: Stanislav Malyshev <stas@php.net>
Date: Tue, 2 Aug 2016 01:08:42 -0700
Subject: [PATCH] Fix bug #72663 - destroy broken object when unserializing

(cherry picked from commit 448c9be157f4147e121f1a2a524536c75c9c6059)
---
 ext/standard/tests/strings/bug72663.phpt   | 26 +++++++++++++++++++
 ext/standard/tests/strings/bug72663_2.phpt | 17 +++++++++++++
 ext/standard/var_unserializer.c            | 29 +++++++++++-----------
 3 files changed, 58 insertions(+), 14 deletions(-)
 create mode 100644 ext/standard/tests/strings/bug72663.phpt
 create mode 100644 ext/standard/tests/strings/bug72663_2.phpt

diff --git a/ext/standard/tests/strings/bug72663.phpt b/ext/standard/tests/strings/bug72663.phpt
new file mode 100644
index 0000000000000..e61f939d4dbef
--- /dev/null
+++ b/ext/standard/tests/strings/bug72663.phpt
@@ -0,0 +1,26 @@
+--TEST--
+Bug #72663: Create an Unexpected Object and Don't Invoke __wakeup() in Deserialization
+--FILE--
+<?php
+class obj implements Serializable {
+    var $data;
+    function serialize() {
+        return serialize($this->data);
+    }
+    function unserialize($data) {
+        $this->data = unserialize($data);
+    }
+}
+
+$inner = 'a:1:{i:0;O:9:""Exception"":2:{s:7:""'.""\0"".'*'.""\0"".'file"";R:4;}';
+$exploit = 'a:2:{i:0;C:3:""obj"":'.strlen($inner).':{'.$inner.'}i:1;R:4;}';
+
+$data = unserialize($exploit);
+echo $data[1];
+?>
+DONE
+--EXPECTF--
+Notice: unserialize(): Unexpected end of serialized data in %sbug72663.php on line %d
+
+Notice: unserialize(): Error at offset 46 of 47 bytes in %sbug72663.php on line %d
+DONE
\ No newline at end of file
diff --git a/ext/standard/tests/strings/bug72663_2.phpt b/ext/standard/tests/strings/bug72663_2.phpt
new file mode 100644
index 0000000000000..ac605e9fd2647
--- /dev/null
+++ b/ext/standard/tests/strings/bug72663_2.phpt
@@ -0,0 +1,17 @@
+--TEST--
+Bug #72663: Create an Unexpected Object and Don't Invoke __wakeup() in Deserialization
+--FILE--
+<?php
+
+ini_set('session.serialize_handler', 'php_serialize');
+session_start();
+$sess = 'O:9:""Exception"":2:{s:7:""'.""\0"".'*'.""\0"".'file"";R:1;}';
+session_decode($sess);
+var_dump($_SESSION);
+?>
+DONE
+--EXPECTF--
+Notice: session_decode(): Unexpected end of serialized data in %sbug72663_2.php on line %d
+array(0) {
+}
+DONE
\ No newline at end of file
diff --git a/ext/standard/var_unserializer.c b/ext/standard/var_unserializer.c
index 4f2a1fd40383c..6b33d84bd2eed 100644
--- a/ext/standard/var_unserializer.c
+++ b/ext/standard/var_unserializer.c
@@ -1,4 +1,4 @@
-/* Generated by re2c 0.13.5 */
+/* Generated by re2c 0.13.7.5 */
 #line 1 ""ext/standard/var_unserializer.re""
 /*
   +----------------------------------------------------------------------+
@@ -687,7 +687,8 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 	if (yybm[0+yych] & 128) {
 		goto yy20;
 	}
-	if (yych != ':') goto yy18;
+	if (yych <= '/') goto yy18;
+	if (yych >= ';') goto yy18;
 	yych = *++YYCURSOR;
 	if (yych != '""') goto yy18;
 	++YYCURSOR;
@@ -836,7 +837,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 
 	return object_common2(UNSERIALIZE_PASSTHRU, elements);
 }
-#line 804 ""ext/standard/var_unserializer.c""
+#line 805 ""ext/standard/var_unserializer.c""
 yy25:
 	yych = *++YYCURSOR;
 	if (yych <= ',') {
@@ -868,7 +869,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 	return object_common2(UNSERIALIZE_PASSTHRU,
 			object_common1(UNSERIALIZE_PASSTHRU, ZEND_STANDARD_CLASS_DEF_PTR));
 }
-#line 836 ""ext/standard/var_unserializer.c""
+#line 837 ""ext/standard/var_unserializer.c""
 yy32:
 	yych = *++YYCURSOR;
 	if (yych == '+') goto yy33;
@@ -913,7 +914,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 
 	return finish_nested_data(UNSERIALIZE_PASSTHRU);
 }
-#line 881 ""ext/standard/var_unserializer.c""
+#line 882 ""ext/standard/var_unserializer.c""
 yy39:
 	yych = *++YYCURSOR;
 	if (yych == '+') goto yy40;
@@ -968,7 +969,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 	ZVAL_STR(rval, str);
 	return 1;
 }
-#line 936 ""ext/standard/var_unserializer.c""
+#line 937 ""ext/standard/var_unserializer.c""
 yy46:
 	yych = *++YYCURSOR;
 	if (yych == '+') goto yy47;
@@ -1021,7 +1022,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 	ZVAL_STRINGL(rval, str, len);
 	return 1;
 }
-#line 989 ""ext/standard/var_unserializer.c""
+#line 990 ""ext/standard/var_unserializer.c""
 yy53:
 	yych = *++YYCURSOR;
 	if (yych <= '/') {
@@ -1118,7 +1119,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 	ZVAL_DOUBLE(rval, zend_strtod((const char *)start + 2, NULL));
 	return 1;
 }
-#line 1086 ""ext/standard/var_unserializer.c""
+#line 1087 ""ext/standard/var_unserializer.c""
 yy65:
 	yych = *++YYCURSOR;
 	if (yych <= ',') {
@@ -1193,7 +1194,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 
 	return 1;
 }
-#line 1161 ""ext/standard/var_unserializer.c""
+#line 1162 ""ext/standard/var_unserializer.c""
 yy76:
 	yych = *++YYCURSOR;
 	if (yych == 'N') goto yy73;
@@ -1246,7 +1247,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 	ZVAL_LONG(rval, parse_iv(start + 2));
 	return 1;
 }
-#line 1214 ""ext/standard/var_unserializer.c""
+#line 1215 ""ext/standard/var_unserializer.c""
 yy83:
 	yych = *++YYCURSOR;
 	if (yych <= '/') goto yy18;
@@ -1260,7 +1261,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 	ZVAL_BOOL(rval, parse_iv(start + 2));
 	return 1;
 }
-#line 1228 ""ext/standard/var_unserializer.c""
+#line 1229 ""ext/standard/var_unserializer.c""
 yy87:
 	++YYCURSOR;
 #line 573 ""ext/standard/var_unserializer.re""
@@ -1269,7 +1270,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 	ZVAL_NULL(rval);
 	return 1;
 }
-#line 1237 ""ext/standard/var_unserializer.c""
+#line 1238 ""ext/standard/var_unserializer.c""
 yy89:
 	yych = *++YYCURSOR;
 	if (yych <= ',') {
@@ -1317,7 +1318,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 
 	return 1;
 }
-#line 1285 ""ext/standard/var_unserializer.c""
+#line 1286 ""ext/standard/var_unserializer.c""
 yy95:
 	yych = *++YYCURSOR;
 	if (yych <= ',') {
@@ -1366,7 +1367,7 @@ static int php_var_unserialize_internal(UNSERIALIZE_PARAMETER)
 
 	return 1;
 }
-#line 1334 ""ext/standard/var_unserializer.c""
+#line 1335 ""ext/standard/var_unserializer.c""
 }
 #line 886 ""ext/standard/var_unserializer.re"""
CVE-2016-7913,"From 8dfbcc4351a0b6d2f2d77f367552f48ffefafe18 Mon Sep 17 00:00:00 2001
From: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
Date: Thu, 28 Jan 2016 09:22:44 -0200
Subject: [PATCH] [media] xc2028: avoid use after free

If struct xc2028_config is passed without a firmware name,
the following trouble may happen:

[11009.907205] xc2028 5-0061: type set to XCeive xc2028/xc3028 tuner
[11009.907491] ==================================================================
[11009.907750] BUG: KASAN: use-after-free in strcmp+0x96/0xb0 at addr ffff8803bd78ab40
[11009.907992] Read of size 1 by task modprobe/28992
[11009.907994] =============================================================================
[11009.907997] BUG kmalloc-16 (Tainted: G        W      ): kasan: bad access detected
[11009.907999] -----------------------------------------------------------------------------

[11009.908008] INFO: Allocated in xhci_urb_enqueue+0x214/0x14c0 [xhci_hcd] age=0 cpu=3 pid=28992
[11009.908012] 	___slab_alloc+0x581/0x5b0
[11009.908014] 	__slab_alloc+0x51/0x90
[11009.908017] 	__kmalloc+0x27b/0x350
[11009.908022] 	xhci_urb_enqueue+0x214/0x14c0 [xhci_hcd]
[11009.908026] 	usb_hcd_submit_urb+0x1e8/0x1c60
[11009.908029] 	usb_submit_urb+0xb0e/0x1200
[11009.908032] 	usb_serial_generic_write_start+0xb6/0x4c0
[11009.908035] 	usb_serial_generic_write+0x92/0xc0
[11009.908039] 	usb_console_write+0x38a/0x560
[11009.908045] 	call_console_drivers.constprop.14+0x1ee/0x2c0
[11009.908051] 	console_unlock+0x40d/0x900
[11009.908056] 	vprintk_emit+0x4b4/0x830
[11009.908061] 	vprintk_default+0x1f/0x30
[11009.908064] 	printk+0x99/0xb5
[11009.908067] 	kasan_report_error+0x10a/0x550
[11009.908070] 	__asan_report_load1_noabort+0x43/0x50
[11009.908074] INFO: Freed in xc2028_set_config+0x90/0x630 [tuner_xc2028] age=1 cpu=3 pid=28992
[11009.908077] 	__slab_free+0x2ec/0x460
[11009.908080] 	kfree+0x266/0x280
[11009.908083] 	xc2028_set_config+0x90/0x630 [tuner_xc2028]
[11009.908086] 	xc2028_attach+0x310/0x8a0 [tuner_xc2028]
[11009.908090] 	em28xx_attach_xc3028.constprop.7+0x1f9/0x30d [em28xx_dvb]
[11009.908094] 	em28xx_dvb_init.part.3+0x8e4/0x5cf4 [em28xx_dvb]
[11009.908098] 	em28xx_dvb_init+0x81/0x8a [em28xx_dvb]
[11009.908101] 	em28xx_register_extension+0xd9/0x190 [em28xx]
[11009.908105] 	em28xx_dvb_register+0x10/0x1000 [em28xx_dvb]
[11009.908108] 	do_one_initcall+0x141/0x300
[11009.908111] 	do_init_module+0x1d0/0x5ad
[11009.908114] 	load_module+0x6666/0x9ba0
[11009.908117] 	SyS_finit_module+0x108/0x130
[11009.908120] 	entry_SYSCALL_64_fastpath+0x16/0x76
[11009.908123] INFO: Slab 0xffffea000ef5e280 objects=25 used=25 fp=0x          (null) flags=0x2ffff8000004080
[11009.908126] INFO: Object 0xffff8803bd78ab40 @offset=2880 fp=0x0000000000000001

[11009.908130] Bytes b4 ffff8803bd78ab30: 01 00 00 00 2a 07 00 00 9d 28 00 00 01 00 00 00  ....*....(......
[11009.908133] Object ffff8803bd78ab40: 01 00 00 00 00 00 00 00 b0 1d c3 6a 00 88 ff ff  ...........j....
[11009.908137] CPU: 3 PID: 28992 Comm: modprobe Tainted: G    B   W       4.5.0-rc1+ #43
[11009.908140] Hardware name:                  /NUC5i7RYB, BIOS RYBDWi35.86A.0350.2015.0812.1722 08/12/2015
[11009.908142]  ffff8803bd78a000 ffff8802c273f1b8 ffffffff81932007 ffff8803c6407a80
[11009.908148]  ffff8802c273f1e8 ffffffff81556759 ffff8803c6407a80 ffffea000ef5e280
[11009.908153]  ffff8803bd78ab40 dffffc0000000000 ffff8802c273f210 ffffffff8155ccb4
[11009.908158] Call Trace:
[11009.908162]  [<ffffffff81932007>] dump_stack+0x4b/0x64
[11009.908165]  [<ffffffff81556759>] print_trailer+0xf9/0x150
[11009.908168]  [<ffffffff8155ccb4>] object_err+0x34/0x40
[11009.908171]  [<ffffffff8155f260>] kasan_report_error+0x230/0x550
[11009.908175]  [<ffffffff81237d71>] ? trace_hardirqs_off_caller+0x21/0x290
[11009.908179]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50
[11009.908182]  [<ffffffff8155f5c3>] __asan_report_load1_noabort+0x43/0x50
[11009.908185]  [<ffffffff8155ea00>] ? __asan_register_globals+0x50/0xa0
[11009.908189]  [<ffffffff8194cea6>] ? strcmp+0x96/0xb0
[11009.908192]  [<ffffffff8194cea6>] strcmp+0x96/0xb0
[11009.908196]  [<ffffffffa13ba4ac>] xc2028_set_config+0x15c/0x630 [tuner_xc2028]
[11009.908200]  [<ffffffffa13bac90>] xc2028_attach+0x310/0x8a0 [tuner_xc2028]
[11009.908203]  [<ffffffff8155ea78>] ? memset+0x28/0x30
[11009.908206]  [<ffffffffa13ba980>] ? xc2028_set_config+0x630/0x630 [tuner_xc2028]
[11009.908211]  [<ffffffffa157a59a>] em28xx_attach_xc3028.constprop.7+0x1f9/0x30d [em28xx_dvb]
[11009.908215]  [<ffffffffa157aa2a>] ? em28xx_dvb_init.part.3+0x37c/0x5cf4 [em28xx_dvb]
[11009.908219]  [<ffffffffa157a3a1>] ? hauppauge_hvr930c_init+0x487/0x487 [em28xx_dvb]
[11009.908222]  [<ffffffffa01795ac>] ? lgdt330x_attach+0x1cc/0x370 [lgdt330x]
[11009.908226]  [<ffffffffa01793e0>] ? i2c_read_demod_bytes.isra.2+0x210/0x210 [lgdt330x]
[11009.908230]  [<ffffffff812e87d0>] ? ref_module.part.15+0x10/0x10
[11009.908233]  [<ffffffff812e56e0>] ? module_assert_mutex_or_preempt+0x80/0x80
[11009.908238]  [<ffffffffa157af92>] em28xx_dvb_init.part.3+0x8e4/0x5cf4 [em28xx_dvb]
[11009.908242]  [<ffffffffa157a6ae>] ? em28xx_attach_xc3028.constprop.7+0x30d/0x30d [em28xx_dvb]
[11009.908245]  [<ffffffff8195222d>] ? string+0x14d/0x1f0
[11009.908249]  [<ffffffff8195381f>] ? symbol_string+0xff/0x1a0
[11009.908253]  [<ffffffff81953720>] ? uuid_string+0x6f0/0x6f0
[11009.908257]  [<ffffffff811a775e>] ? __kernel_text_address+0x7e/0xa0
[11009.908260]  [<ffffffff8104b02f>] ? print_context_stack+0x7f/0xf0
[11009.908264]  [<ffffffff812e9846>] ? __module_address+0xb6/0x360
[11009.908268]  [<ffffffff8137fdc9>] ? is_ftrace_trampoline+0x99/0xe0
[11009.908271]  [<ffffffff811a775e>] ? __kernel_text_address+0x7e/0xa0
[11009.908275]  [<ffffffff81240a70>] ? debug_check_no_locks_freed+0x290/0x290
[11009.908278]  [<ffffffff8104a24b>] ? dump_trace+0x11b/0x300
[11009.908282]  [<ffffffffa13e8143>] ? em28xx_register_extension+0x23/0x190 [em28xx]
[11009.908285]  [<ffffffff81237d71>] ? trace_hardirqs_off_caller+0x21/0x290
[11009.908289]  [<ffffffff8123ff56>] ? trace_hardirqs_on_caller+0x16/0x590
[11009.908292]  [<ffffffff812404dd>] ? trace_hardirqs_on+0xd/0x10
[11009.908296]  [<ffffffffa13e8143>] ? em28xx_register_extension+0x23/0x190 [em28xx]
[11009.908299]  [<ffffffff822dcbb0>] ? mutex_trylock+0x400/0x400
[11009.908302]  [<ffffffff810021a1>] ? do_one_initcall+0x131/0x300
[11009.908306]  [<ffffffff81296dc7>] ? call_rcu_sched+0x17/0x20
[11009.908309]  [<ffffffff8159e708>] ? put_object+0x48/0x70
[11009.908314]  [<ffffffffa1579f11>] em28xx_dvb_init+0x81/0x8a [em28xx_dvb]
[11009.908317]  [<ffffffffa13e81f9>] em28xx_register_extension+0xd9/0x190 [em28xx]
[11009.908320]  [<ffffffffa0150000>] ? 0xffffffffa0150000
[11009.908324]  [<ffffffffa0150010>] em28xx_dvb_register+0x10/0x1000 [em28xx_dvb]
[11009.908327]  [<ffffffff810021b1>] do_one_initcall+0x141/0x300
[11009.908330]  [<ffffffff81002070>] ? try_to_run_init_process+0x40/0x40
[11009.908333]  [<ffffffff8123ff56>] ? trace_hardirqs_on_caller+0x16/0x590
[11009.908337]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50
[11009.908340]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50
[11009.908343]  [<ffffffff8155e926>] ? kasan_unpoison_shadow+0x36/0x50
[11009.908346]  [<ffffffff8155ea37>] ? __asan_register_globals+0x87/0xa0
[11009.908350]  [<ffffffff8144da7b>] do_init_module+0x1d0/0x5ad
[11009.908353]  [<ffffffff812f2626>] load_module+0x6666/0x9ba0
[11009.908356]  [<ffffffff812e9c90>] ? symbol_put_addr+0x50/0x50
[11009.908361]  [<ffffffffa1580037>] ? em28xx_dvb_init.part.3+0x5989/0x5cf4 [em28xx_dvb]
[11009.908366]  [<ffffffff812ebfc0>] ? module_frob_arch_sections+0x20/0x20
[11009.908369]  [<ffffffff815bc940>] ? open_exec+0x50/0x50
[11009.908374]  [<ffffffff811671bb>] ? ns_capable+0x5b/0xd0
[11009.908377]  [<ffffffff812f5e58>] SyS_finit_module+0x108/0x130
[11009.908379]  [<ffffffff812f5d50>] ? SyS_init_module+0x1f0/0x1f0
[11009.908383]  [<ffffffff81004044>] ? lockdep_sys_exit_thunk+0x12/0x14
[11009.908394]  [<ffffffff822e6936>] entry_SYSCALL_64_fastpath+0x16/0x76
[11009.908396] Memory state around the buggy address:
[11009.908398]  ffff8803bd78aa00: 00 00 fc fc fc fc fc fc fc fc fc fc fc fc fc fc
[11009.908401]  ffff8803bd78aa80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
[11009.908403] >ffff8803bd78ab00: fc fc fc fc fc fc fc fc 00 00 fc fc fc fc fc fc
[11009.908405]                                            ^
[11009.908407]  ffff8803bd78ab80: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
[11009.908409]  ffff8803bd78ac00: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
[11009.908411] ==================================================================

In order to avoid it, let's set the cached value of the firmware
name to NULL after freeing it. While here, return an error if
the memory allocation fails.

Signed-off-by: Mauro Carvalho Chehab <mchehab@osg.samsung.com>
---
 drivers/media/tuners/tuner-xc2028.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/drivers/media/tuners/tuner-xc2028.c b/drivers/media/tuners/tuner-xc2028.c
index 4e941f00b6008f..082ff5608455c2 100644
--- a/drivers/media/tuners/tuner-xc2028.c
+++ b/drivers/media/tuners/tuner-xc2028.c
@@ -1403,11 +1403,12 @@ static int xc2028_set_config(struct dvb_frontend *fe, void *priv_cfg)
 	 * in order to avoid troubles during device release.
 	 */
 	kfree(priv->ctrl.fname);
+	priv->ctrl.fname = NULL;
 	memcpy(&priv->ctrl, p, sizeof(priv->ctrl));
 	if (p->fname) {
 		priv->ctrl.fname = kstrdup(p->fname, GFP_KERNEL);
 		if (priv->ctrl.fname == NULL)
-			rc = -ENOMEM;
+			return -ENOMEM;
 	}
 
 	/*"
CVE-2016-10507,"From 893143c8e13e491d0e884eb757580ec9575bbc8f Mon Sep 17 00:00:00 2001
From: trylab <trylab@users.noreply.github.com>
Date: Tue, 13 Sep 2016 17:43:30 +0800
Subject: [PATCH] Fix issue 833.

Add some overflow check operations.
---
 src/bin/jp2/convertbmp.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

diff --git a/src/bin/jp2/convertbmp.c b/src/bin/jp2/convertbmp.c
index d264823f0..ae83077ca 100644
--- a/src/bin/jp2/convertbmp.c
+++ b/src/bin/jp2/convertbmp.c
@@ -675,10 +675,28 @@ opj_image_t* bmptoimage(const char *filename, opj_cparameters_t *parameters)
 		}
 	}
 	
+	if (Info_h.biWidth == 0 || Info_h.biHeight == 0) {
+		fclose(IN);
+		return NULL;
+	}
+	
+	if (Info_h.biBitCount > (((OPJ_UINT32)-1) - 31) / Info_h.biWidth) {
+		fclose(IN);
+		return NULL;
+	}
 	stride = ((Info_h.biWidth * Info_h.biBitCount + 31U) / 32U) * 4U; /* rows are aligned on 32bits */
 	if (Info_h.biBitCount == 4 && Info_h.biCompression == 2) { /* RLE 4 gets decoded as 8 bits data for now... */
+		if (8 > (((OPJ_UINT32)-1) - 31) / Info_h.biWidth) {
+			fclose(IN);
+			return NULL;
+		}
 		stride = ((Info_h.biWidth * 8U + 31U) / 32U) * 4U;
 	}
+	
+	if (stride > ((OPJ_UINT32)-1) / sizeof(OPJ_UINT8) / Info_h.biHeight) {
+		fclose(IN);
+		return NULL;
+	}
 	pData = (OPJ_UINT8 *) calloc(1, stride * Info_h.biHeight * sizeof(OPJ_UINT8));
 	if (pData == NULL) {
 		fclose(IN);"
CVE-2016-3140,"From 5a07975ad0a36708c6b0a5b9fea1ff811d0b0c1f Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Thu, 31 Mar 2016 12:04:26 -0400
Subject: [PATCH] USB: digi_acceleport: do sanity checking for the number of
 ports

The driver can be crashed with devices that expose crafted descriptors
with too few endpoints.

See: http://seclists.org/bugtraq/2016/Mar/61

Signed-off-by: Oliver Neukum <ONeukum@suse.com>
[johan: fix OOB endpoint check and add error messages ]
Cc: stable <stable@vger.kernel.org>
Signed-off-by: Johan Hovold <johan@kernel.org>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/usb/serial/digi_acceleport.c | 19 +++++++++++++++++++
 1 file changed, 19 insertions(+)

diff --git a/drivers/usb/serial/digi_acceleport.c b/drivers/usb/serial/digi_acceleport.c
index 010a42a9268895..16e8e37b3b36d5 100644
--- a/drivers/usb/serial/digi_acceleport.c
+++ b/drivers/usb/serial/digi_acceleport.c
@@ -1251,8 +1251,27 @@ static int digi_port_init(struct usb_serial_port *port, unsigned port_num)
 
 static int digi_startup(struct usb_serial *serial)
 {
+	struct device *dev = &serial->interface->dev;
 	struct digi_serial *serial_priv;
 	int ret;
+	int i;
+
+	/* check whether the device has the expected number of endpoints */
+	if (serial->num_port_pointers < serial->type->num_ports + 1) {
+		dev_err(dev, ""OOB endpoints missing\n"");
+		return -ENODEV;
+	}
+
+	for (i = 0; i < serial->type->num_ports + 1 ; i++) {
+		if (!serial->port[i]->read_urb) {
+			dev_err(dev, ""bulk-in endpoint missing\n"");
+			return -ENODEV;
+		}
+		if (!serial->port[i]->write_urb) {
+			dev_err(dev, ""bulk-out endpoint missing\n"");
+			return -ENODEV;
+		}
+	}
 
 	serial_priv = kzalloc(sizeof(*serial_priv), GFP_KERNEL);
 	if (!serial_priv)"
CVE-2016-5705,"From 0b7416c5f4439ed3f11c023785f2d4c49a1b09fc Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Wed, 22 Jun 2016 10:53:08 +0200
Subject: [PATCH] Escape user group when displaying
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 libraries/server_privileges.lib.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/libraries/server_privileges.lib.php b/libraries/server_privileges.lib.php
index e15404522b9b..6cda1f0a016b 100644
--- a/libraries/server_privileges.lib.php
+++ b/libraries/server_privileges.lib.php
@@ -3679,7 +3679,7 @@ function PMA_getHtmlTableBodyForUserRights($db_rights)
             if ($cfgRelation['menuswork']) {
                 $html_output .= '<td class=""usrGroup"">' . ""\n""
                     . (isset($group_assignment[$host['User']])
-                        ? $group_assignment[$host['User']]
+                        ? htmlspecialchars($group_assignment[$host['User']])
                         : ''
                     )
                     . '</td>' . ""\n"";"
CVE-2016-3079,"From 7b9ff9ad6caf91d789039ed106342c430223e55f Mon Sep 17 00:00:00 2001
From: Grant Gainey <ggainey@redhat.com>
Date: Tue, 29 Mar 2016 14:44:21 -0400
Subject: [PATCH] 1320444 - Bad bean-message ids and navbar-vars can lead to
 XSS issues

Fixed generally in LocalizationService and DialognavRenderer, removed
some attempts at fixing specific locations.
---
 .../localization/LocalizationService.java     | 24 +++++++++----------
 .../rhn/frontend/nav/DialognavRenderer.java   |  9 ++++---
 .../fragments/kickstart/advanced/details.jspf |  4 ++--
 .../pages/systems/sdc/history_event.jsp       |  2 +-
 4 files changed, 21 insertions(+), 18 deletions(-)

diff --git a/java/code/src/com/redhat/rhn/common/localization/LocalizationService.java b/java/code/src/com/redhat/rhn/common/localization/LocalizationService.java
index ef9fda7b1e9..dd7af417b24 100644
--- a/java/code/src/com/redhat/rhn/common/localization/LocalizationService.java
+++ b/java/code/src/com/redhat/rhn/common/localization/LocalizationService.java
@@ -14,17 +14,6 @@
  */
 package com.redhat.rhn.common.localization;
 
-import com.redhat.rhn.common.conf.Config;
-import com.redhat.rhn.common.conf.ConfigDefaults;
-import com.redhat.rhn.common.db.datasource.DataResult;
-import com.redhat.rhn.common.db.datasource.ModeFactory;
-import com.redhat.rhn.common.db.datasource.SelectMode;
-import com.redhat.rhn.common.util.StringUtil;
-import com.redhat.rhn.frontend.context.Context;
-
-import org.apache.commons.lang.StringEscapeUtils;
-import org.apache.log4j.Logger;
-
 import java.text.Collator;
 import java.text.DateFormat;
 import java.text.NumberFormat;
@@ -47,6 +36,17 @@
 import java.util.TreeMap;
 import java.util.TreeSet;
 
+import org.apache.commons.lang.StringEscapeUtils;
+import org.apache.log4j.Logger;
+
+import com.redhat.rhn.common.conf.Config;
+import com.redhat.rhn.common.conf.ConfigDefaults;
+import com.redhat.rhn.common.db.datasource.DataResult;
+import com.redhat.rhn.common.db.datasource.ModeFactory;
+import com.redhat.rhn.common.db.datasource.SelectMode;
+import com.redhat.rhn.common.util.StringUtil;
+import com.redhat.rhn.frontend.context.Context;
+
 /**
  * Localization service class to simplify the job for producing localized
  * (translated) strings within the product.
@@ -368,7 +368,7 @@ private String getMissingMessageString(String messageId) {
         if (exceptionMode) {
             throw new IllegalArgumentException(message);
         }
-        return ""**"" + messageId + ""**"";
+        return StringEscapeUtils.escapeHtml(""**"" + messageId + ""**"");
     }
 
     /**
diff --git a/java/code/src/com/redhat/rhn/frontend/nav/DialognavRenderer.java b/java/code/src/com/redhat/rhn/frontend/nav/DialognavRenderer.java
index 24a02f09754..5e0557aa539 100644
--- a/java/code/src/com/redhat/rhn/frontend/nav/DialognavRenderer.java
+++ b/java/code/src/com/redhat/rhn/frontend/nav/DialognavRenderer.java
@@ -15,11 +15,13 @@
 
 package com.redhat.rhn.frontend.nav;
 
-import com.redhat.rhn.frontend.html.HtmlTag;
-
 import java.util.Map;
 import java.util.StringTokenizer;
 
+import org.apache.commons.lang.StringEscapeUtils;
+
+import com.redhat.rhn.frontend.html.HtmlTag;
+
 /**
  * DialognavRenderer - renders a navigation bar
  *
@@ -135,7 +137,8 @@ private void renderNode(StringBuffer sb, NavNode node,
                 // if currentVar is null, values will be null too, so we can
                 // just check values.
                 if (values != null) {
-                    formVars.append(currentVar + ""="" + values[0]);
+                    formVars.append(currentVar + ""="" +
+                             StringEscapeUtils.escapeHtml(values[0]));
                 }
             }
             href += formVars.toString();
diff --git a/java/code/webapp/WEB-INF/pages/common/fragments/kickstart/advanced/details.jspf b/java/code/webapp/WEB-INF/pages/common/fragments/kickstart/advanced/details.jspf
index 822ebca2e2c..7677cfc117a 100644
--- a/java/code/webapp/WEB-INF/pages/common/fragments/kickstart/advanced/details.jspf
+++ b/java/code/webapp/WEB-INF/pages/common/fragments/kickstart/advanced/details.jspf
@@ -11,8 +11,8 @@
                    action=""${param.url}?csrf_token=${csrfToken}""
                    enctype=""multipart/form-data"">
             <rhn:csrf />
-            <h2><bean:message key=""${fn:escapeXml(param.title_key)}""/></h2>
-            <p><bean:message key=""${fn:escapeXml(param.summary_key)}""/></p>
+            <h2><bean:message key=""${param.title_key)}""/></h2>
+            <p><bean:message key=""${param.summary_key}""/></p>
             <div class=""form-group"">
                 <label class=""col-lg-3 control-label"">
                     <rhn:required-field key=""kickstart.jsp.create.wizard.kickstart.profile.label""/>:
diff --git a/java/code/webapp/WEB-INF/pages/systems/sdc/history_event.jsp b/java/code/webapp/WEB-INF/pages/systems/sdc/history_event.jsp
index 062fb1eac82..1607de9f09c 100644
--- a/java/code/webapp/WEB-INF/pages/systems/sdc/history_event.jsp
+++ b/java/code/webapp/WEB-INF/pages/systems/sdc/history_event.jsp
@@ -12,7 +12,7 @@
 <%@ include file=""/WEB-INF/pages/common/fragments/systems/system-header.jspf"" %>
 
 <rhn:toolbar base=""h2"" icon=""header-event-history"">
-  <bean:message key=""${fn:escapeXml(headerLabel)}"" />
+  <bean:message key=""${headerLabel}"" />
 </rhn:toolbar>
 
 <html:form method=""post"" action=""/systems/details/history/Event.do?sid=${system.id}&aid=${requestScope.aid}"">"
CVE-2016-2039,"From f20970d32c3dfdf82aef7b6c244da1f769043813 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Mon, 18 Jan 2016 09:42:59 +0100
Subject: [PATCH] Use phpseclib's Crypt::Random to generate CSRF token
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 libraries/session.inc.php | 6 ++++--
 1 file changed, 4 insertions(+), 2 deletions(-)

diff --git a/libraries/session.inc.php b/libraries/session.inc.php
index fcd4507094fe..4413c968f4b1 100644
--- a/libraries/session.inc.php
+++ b/libraries/session.inc.php
@@ -13,6 +13,8 @@
     exit;
 }
 
+require PHPSECLIB_INC_DIR . '/Crypt/Random.php';
+
 // verify if PHP supports session, die if it does not
 
 if (!@function_exists('session_name')) {
@@ -111,7 +113,7 @@
  * (we use ""space PMA_token space"" to prevent overwriting)
  */
 if (! isset($_SESSION[' PMA_token '])) {
-    $_SESSION[' PMA_token '] = md5(uniqid(rand(), true));
+    $_SESSION[' PMA_token '] = bin2hex(phpseclib\Crypt\Random::string(16));
 }
 
 /**
@@ -130,5 +132,5 @@ function PMA_secureSession()
     ) {
         session_regenerate_id(true);
     }
-    $_SESSION[' PMA_token '] = md5(uniqid(rand(), true));
+    $_SESSION[' PMA_token '] = bin2hex(phpseclib\Crypt\Random::string(16));
 }"
CVE-2016-7915,"From 50220dead1650609206efe91f0cc116132d59b3f Mon Sep 17 00:00:00 2001
From: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Date: Tue, 19 Jan 2016 12:34:58 +0100
Subject: [PATCH] HID: core: prevent out-of-bound readings

Plugging a Logitech DJ receiver with KASAN activated raises a bunch of
out-of-bound readings.

The fields are allocated up to MAX_USAGE, meaning that potentially, we do
not have enough fields to fit the incoming values.
Add checks and silence KASAN.

Signed-off-by: Benjamin Tissoires <benjamin.tissoires@redhat.com>
Signed-off-by: Jiri Kosina <jkosina@suse.cz>
---
 drivers/hid/hid-core.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/drivers/hid/hid-core.c b/drivers/hid/hid-core.c
index 16c2c660ab5a52..3f6ac5f2862d82 100644
--- a/drivers/hid/hid-core.c
+++ b/drivers/hid/hid-core.c
@@ -1293,6 +1293,7 @@ static void hid_input_field(struct hid_device *hid, struct hid_field *field,
 		/* Ignore report if ErrorRollOver */
 		if (!(field->flags & HID_MAIN_ITEM_VARIABLE) &&
 		    value[n] >= min && value[n] <= max &&
+		    value[n] - min < field->maxusage &&
 		    field->usage[value[n] - min].hid == HID_UP_KEYBOARD + 1)
 			goto exit;
 	}
@@ -1305,11 +1306,13 @@ static void hid_input_field(struct hid_device *hid, struct hid_field *field,
 		}
 
 		if (field->value[n] >= min && field->value[n] <= max
+			&& field->value[n] - min < field->maxusage
 			&& field->usage[field->value[n] - min].hid
 			&& search(value, field->value[n], count))
 				hid_process_event(hid, field, &field->usage[field->value[n] - min], 0, interrupt);
 
 		if (value[n] >= min && value[n] <= max
+			&& value[n] - min < field->maxusage
 			&& field->usage[value[n] - min].hid
 			&& search(field->value, value[n], count))
 				hid_process_event(hid, field, &field->usage[value[n] - min], 1, interrupt);"
CVE-2016-10195,"From 96f64a022014a208105ead6c8a7066018449d86d Mon Sep 17 00:00:00 2001
From: Azat Khuzhin <a3at.mail@gmail.com>
Date: Mon, 1 Feb 2016 17:32:09 +0300
Subject: [PATCH] evdns: name_parse(): fix remote stack overread

@asn-the-goblin-slayer:
  ""the name_parse() function in libevent's DNS code is vulnerable to a buffer overread.

   971         if (cp != name_out) {
   972             if (cp + 1 >= end) return -1;
   973             *cp++ = '.';
   974         }
   975         if (cp + label_len >= end) return -1;
   976         memcpy(cp, packet + j, label_len);
   977         cp += label_len;
   978         j += label_len;
   No check is made against length before the memcpy occurs.

   This was found through the Tor bug bounty program and the discovery should be credited to 'Guido Vranken'.""

Reproducer for gdb (https://gist.github.com/azat/e4fcf540e9b89ab86d02):
  set $PROT_NONE=0x0
  set $PROT_READ=0x1
  set $PROT_WRITE=0x2
  set $MAP_ANONYMOUS=0x20
  set $MAP_SHARED=0x01
  set $MAP_FIXED=0x10
  set $MAP_32BIT=0x40

  start

  set $length=202
  # overread
  set $length=2
  # allocate with mmap to have a seg fault on page boundary
  set $l=(1<<20)*2
  p mmap(0, $l, $PROT_READ|$PROT_WRITE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_32BIT, -1, 0)
  set $packet=(char *)$1+$l-$length
  # hack the packet
  set $packet[0]=63
  set $packet[1]='/'

  p malloc(sizeof(int))
  set $idx=(int *)$2
  set $idx[0]=0
  set $name_out_len=202

  p malloc($name_out_len)
  set $name_out=$3

  # have WRITE only mapping to fail on read
  set $end=$1+$l
  p (void *)mmap($end, 1<<12, $PROT_NONE, $MAP_ANONYMOUS|$MAP_SHARED|$MAP_FIXED|$MAP_32BIT, -1, 0)
  set $m=$4

  p name_parse($packet, $length, $idx, $name_out, $name_out_len)
  x/2s (char *)$name_out

Before this patch:
$ gdb -ex 'source gdb' dns-example
$1 = 1073741824
$2 = (void *) 0x633010
$3 = (void *) 0x633030
$4 = (void *) 0x40200000

Program received signal SIGSEGV, Segmentation fault.
__memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:33

After this patch:
$ gdb -ex 'source gdb' dns-example
$1 = 1073741824
$2 = (void *) 0x633010
$3 = (void *) 0x633030
$4 = (void *) 0x40200000
$5 = -1
0x633030:       ""/""
0x633032:       """"
(gdb) p $m
$6 = (void *) 0x40200000
(gdb) p $1
$7 = 1073741824
(gdb) p/x $1
$8 = 0x40000000
(gdb) quit

P.S. plus drop one condition duplicate.

Fixes: #317
---
 evdns.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/evdns.c b/evdns.c
index 0955a28984..c4112330a9 100644
--- a/evdns.c
+++ b/evdns.c
@@ -976,7 +976,6 @@ name_parse(u8 *packet, int length, int *idx, char *name_out, int name_out_len) {
 
 	for (;;) {
 		u8 label_len;
-		if (j >= length) return -1;
 		GET8(label_len);
 		if (!label_len) break;
 		if (label_len & 0xc0) {
@@ -997,6 +996,7 @@ name_parse(u8 *packet, int length, int *idx, char *name_out, int name_out_len) {
 			*cp++ = '.';
 		}
 		if (cp + label_len >= end) return -1;
+		if (j + label_len > length) return -1;
 		memcpy(cp, packet + j, label_len);
 		cp += label_len;
 		j += label_len;"
CVE-2016-10053,"From f983dcdf9c178e0cbc49608a78713c5669aa1bb5 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Wed, 24 Aug 2016 09:43:31 -0400
Subject: [PATCH] Fix TIFF divide by zero (bug report from Donghai Zhu)

---
 ChangeLog     | 4 ++--
 coders/tiff.c | 4 +++-
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index c7e9eec97a0..ac101348388 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -3,8 +3,8 @@
 	  pwchen&rayzhong of tencent).
   * Fix MSVG regression (reference
     https://github.com/ImageMagick/ImageMagick/issues/252).
-  * Prevent buffer overflow in SIXEL, PDB, MAP, and CALS coders (bug report
-    from Donghai Zhu).
+  * Prevent buffer overflow and other problems in SIXEL, PDB, MAP, TIFF, and
+	  CALS coders (bug report from Donghai Zhu).
 
 2016-08-14  6.9.5-7 Cristy  <quetzlzacatenango@image...>
   * Release ImageMagick version 6.9.5-7, GIT revision 10993:7d2fd25:20160814.
diff --git a/coders/tiff.c b/coders/tiff.c
index 224227ddb1c..097904441c3 100644
--- a/coders/tiff.c
+++ b/coders/tiff.c
@@ -3469,7 +3469,9 @@ static MagickBooleanType WriteTIFFImage(const ImageInfo *image_info,
       if ((image_info->interlace == PlaneInterlace) ||
           (image_info->interlace == PartitionInterlace))
         (void) TIFFSetField(tiff,TIFFTAG_PLANARCONFIG,PLANARCONFIG_SEPARATE);
-    rows_per_strip=TIFFDefaultStripSize(tiff,0);
+    rows_per_strip=1;
+    if (TIFFScanlineSize(tiff) != 0)
+      rows_per_strip=TIFFDefaultStripSize(tiff,0);
     option=GetImageOption(image_info,""tiff:rows-per-strip"");
     if (option != (const char *) NULL)
       rows_per_strip=(size_t) strtol(option,(char **) NULL,10);"
CVE-2016-9794,"From 3aa02cb664c5fb1042958c8d1aa8c35055a2ebc4 Mon Sep 17 00:00:00 2001
From: Takashi Iwai <tiwai@suse.de>
Date: Thu, 14 Apr 2016 18:02:37 +0200
Subject: [PATCH] ALSA: pcm : Call kill_fasync() in stream lock

Currently kill_fasync() is called outside the stream lock in
snd_pcm_period_elapsed().  This is potentially racy, since the stream
may get released even during the irq handler is running.  Although
snd_pcm_release_substream() calls snd_pcm_drop(), this doesn't
guarantee that the irq handler finishes, thus the kill_fasync() call
outside the stream spin lock may be invoked after the substream is
detached, as recently reported by KASAN.

As a quick workaround, move kill_fasync() call inside the stream
lock.  The fasync is rarely used interface, so this shouldn't have a
big impact from the performance POV.

Ideally, we should implement some sync mechanism for the proper finish
of stream and irq handler.  But this oneliner should suffice for most
cases, so far.

Reported-by: Baozeng Ding <sploving1@gmail.com>
Signed-off-by: Takashi Iwai <tiwai@suse.de>
---
 sound/core/pcm_lib.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/sound/core/pcm_lib.c b/sound/core/pcm_lib.c
index 3a9b66c6e09c38..0aca39762ed0ec 100644
--- a/sound/core/pcm_lib.c
+++ b/sound/core/pcm_lib.c
@@ -1886,8 +1886,8 @@ void snd_pcm_period_elapsed(struct snd_pcm_substream *substream)
 		snd_timer_interrupt(substream->timer, 1);
 #endif
  _end:
-	snd_pcm_stream_unlock_irqrestore(substream, flags);
 	kill_fasync(&runtime->fasync, SIGIO, POLL_IN);
+	snd_pcm_stream_unlock_irqrestore(substream, flags);
 }
 
 EXPORT_SYMBOL(snd_pcm_period_elapsed);"
CVE-2016-4797,"From 8f9cc62b3f9a1da9712329ddcedb9750d585505c Mon Sep 17 00:00:00 2001
From: mayeut <mayeut@users.noreply.github.com>
Date: Sun, 8 May 2016 18:40:12 +0200
Subject: [PATCH] Fix division by zero

Fix uclouvain/openjpeg#733
---
 src/lib/openjp2/tcd.c                   | 3 ++-
 tests/nonregression/test_suite.ctest.in | 2 ++
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/src/lib/openjp2/tcd.c b/src/lib/openjp2/tcd.c
index 7ecd97cfe..b8cd3072b 100644
--- a/src/lib/openjp2/tcd.c
+++ b/src/lib/openjp2/tcd.c
@@ -720,7 +720,8 @@ static INLINE OPJ_BOOL opj_tcd_init_tile(opj_tcd_t *p_tcd, OPJ_UINT32 p_tile_no,
 		
 		/* compute l_data_size with overflow check */
 		l_data_size = (OPJ_UINT32)(l_tilec->x1 - l_tilec->x0);
-		if ((((OPJ_UINT32)-1) / l_data_size) < (OPJ_UINT32)(l_tilec->y1 - l_tilec->y0)) {
+		/* issue 733, l_data_size == 0U, probably something wrong should be checked before getting here */
+		if ((l_data_size > 0U) && ((((OPJ_UINT32)-1) / l_data_size) < (OPJ_UINT32)(l_tilec->y1 - l_tilec->y0))) {
 			opj_event_msg(manager, EVT_ERROR, ""Not enough memory for tile data\n"");
 			return OPJ_FALSE;
 		}
diff --git a/tests/nonregression/test_suite.ctest.in b/tests/nonregression/test_suite.ctest.in
index f22a89f50..c48f66b29 100644
--- a/tests/nonregression/test_suite.ctest.in
+++ b/tests/nonregression/test_suite.ctest.in
@@ -557,3 +557,5 @@ opj_decompress -i @INPUT_NR_PATH@/basn6a08.jp2 -o @TEMP_PATH@/basn6a08_tif-15.ti
 !opj_decompress -i @INPUT_NR_PATH@/issue725.jp2 -o @TEMP_PATH@/issue725.png
 # issue 726
 opj_decompress -i @INPUT_NR_PATH@/issue726.j2k -o @TEMP_PATH@/issue726.png
+# issue 733
+!opj_decompress -i @INPUT_NR_PATH@/issue733.jp2 -o @TEMP_PATH@/issue733.png"
CVE-2016-2041,"From ec0e88e37ef30a66eada1c072953f4ec385a3e49 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Mon, 18 Jan 2016 09:49:15 +0100
Subject: [PATCH] Use hash_equals for comparing token
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 libraries/common.inc.php | 2 +-
 libraries/core.lib.php   | 9 +++++++++
 2 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/libraries/common.inc.php b/libraries/common.inc.php
index 97675849ccc0..2675b8998d3e 100644
--- a/libraries/common.inc.php
+++ b/libraries/common.inc.php
@@ -474,7 +474,7 @@
 $token_provided = false;
 if (PMA_isValid($_REQUEST['token'])) {
     $token_provided = true;
-    $token_mismatch = ($_SESSION[' PMA_token '] != $_REQUEST['token']);
+    $token_mismatch = ! hash_equals($_SESSION[' PMA_token '], $_REQUEST['token']);
 }
 
 if ($token_mismatch) {
diff --git a/libraries/core.lib.php b/libraries/core.lib.php
index 3877548c3456..bb8b116b498f 100644
--- a/libraries/core.lib.php
+++ b/libraries/core.lib.php
@@ -998,3 +998,12 @@ function PMA_setGlobalDbOrTable($param)
         $GLOBALS['url_params'][$param] = $GLOBALS[$param];
     }
 }
+
+/* Compatibility with PHP < 5.6 */
+if(! function_exists('hash_equals')) {
+    function hash_equals($a, $b) {
+        $ret = strlen($a) ^ strlen($b);
+        $ret |= array_sum(unpack(""C*"", $a ^ $b));
+        return ! $ret;
+    }
+}"
CVE-2016-3178,"From b238cade9a173c6f751a34acf8ccff838a62aa47 Mon Sep 17 00:00:00 2001
From: Thomas Bernard <miniupnp@free.fr>
Date: Tue, 1 Mar 2016 19:14:15 +0100
Subject: [PATCH] minissdpd: Fix broken overflow test (p+l > buf+n) thanks to
 Salva Piero

---
 minissdpd/Changelog.txt   |  5 ++++-
 minissdpd/minissdpd.c     | 10 +++++-----
 minissdpd/testminissdpd.c | 12 +++++++++++-
 3 files changed, 20 insertions(+), 7 deletions(-)

diff --git a/minissdpd/Changelog.txt b/minissdpd/Changelog.txt
index c4d5e3951..e66f05235 100644
--- a/minissdpd/Changelog.txt
+++ b/minissdpd/Changelog.txt
@@ -1,4 +1,7 @@
-$Id: Changelog.txt,v 1.43 2015/08/06 14:05:49 nanard Exp $
+$Id: Changelog.txt,v 1.45 2016/03/01 18:06:46 nanard Exp $
+
+2016/03/01:
+	Fix broken overflow test (p+l > buf+n) thanks to Salva Piero
 
 VERSION 1.5:
 
diff --git a/minissdpd/minissdpd.c b/minissdpd/minissdpd.c
index 51f82730d..df304cdc8 100644
--- a/minissdpd/minissdpd.c
+++ b/minissdpd/minissdpd.c
@@ -1,4 +1,4 @@
-/* $Id: minissdpd.c,v 1.50 2015/08/06 14:05:49 nanard Exp $ */
+/* $Id: minissdpd.c,v 1.53 2016/03/01 18:06:46 nanard Exp $ */
 /* vim: tabstop=4 shiftwidth=4 noexpandtab
  * MiniUPnP project
  * (c) 2007-2016 Thomas Bernard
@@ -847,7 +847,7 @@ void processRequest(struct reqelem * req)
 	type = buf[0];
 	p = buf + 1;
 	DECODELENGTH_CHECKLIMIT(l, p, buf + n);
-	if(p+l > buf+n) {
+	if(l > (unsigned)(buf+n-p)) {
 		syslog(LOG_WARNING, ""bad request (length encoding l=%u n=%u)"",
 		       l, (unsigned)n);
 		goto error;
@@ -969,7 +969,7 @@ void processRequest(struct reqelem * req)
 			goto error;
 		}
 		DECODELENGTH_CHECKLIMIT(l, p, buf + n);
-		if(p+l > buf+n) {
+		if(l > (unsigned)(buf+n-p)) {
 			syslog(LOG_WARNING, ""bad request (length encoding)"");
 			goto error;
 		}
@@ -987,7 +987,7 @@ void processRequest(struct reqelem * req)
 		newserv->usn[l] = '\0';
 		p += l;
 		DECODELENGTH_CHECKLIMIT(l, p, buf + n);
-		if(p+l > buf+n) {
+		if(l > (unsigned)(buf+n-p)) {
 			syslog(LOG_WARNING, ""bad request (length encoding)"");
 			goto error;
 		}
@@ -1005,7 +1005,7 @@ void processRequest(struct reqelem * req)
 		newserv->server[l] = '\0';
 		p += l;
 		DECODELENGTH_CHECKLIMIT(l, p, buf + n);
-		if(p+l > buf+n) {
+		if(l > (unsigned)(buf+n-p)) {
 			syslog(LOG_WARNING, ""bad request (length encoding)"");
 			goto error;
 		}
diff --git a/minissdpd/testminissdpd.c b/minissdpd/testminissdpd.c
index a84527297..0f9bf0aec 100644
--- a/minissdpd/testminissdpd.c
+++ b/minissdpd/testminissdpd.c
@@ -1,4 +1,4 @@
-/* $Id: testminissdpd.c,v 1.12 2015/08/06 13:16:59 nanard Exp $ */
+/* $Id: testminissdpd.c,v 1.14 2016/03/01 17:49:51 nanard Exp $ */
 /* Project : miniupnp
  * website : http://miniupnp.free.fr/ or http://miniupnp.tuxfamily.org/
  * Author : Thomas BERNARD
@@ -65,6 +65,7 @@ main(int argc, char * * argv)
 	const char bad_command[] = { 0xff, 0xff };
 	const char overflow[] = { 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff };
 	const char command5[] = { 0x05, 0x00 };
+	const char bad_command4[] = { 0x04, 0x01, 0x60, 0x8f, 0xff, 0xff, 0xff, 0x7f};
 	int s;
 	int i;
 	void * tmp;
@@ -180,6 +181,15 @@ main(int argc, char * * argv)
 	n = read(s, buf, sizeof(buf));
 	printf(""Response received %d bytes\n"", (int)n);
 	printresponse(buf, n);
+	if(n == 0) {
+		close(s);
+		s = connect_unix_socket(sockpath);
+	}
+
+	n = SENDCOMMAND(bad_command4, sizeof(bad_command4));
+	n = read(s, buf, sizeof(buf));
+	printf(""Response received %d bytes\n"", (int)n);
+	printresponse(buf, n);
 
 	close(s);
 	return 0;"
CVE-2016-6319,"From 0f35fe14acf0d0d3b55e9337bc5e2b9640ff2372 Mon Sep 17 00:00:00 2001
From: Marek Hulan <mhulan@redhat.com>
Date: Wed, 10 Aug 2016 09:45:29 +0200
Subject: [PATCH] Fixes #16024 - escape labels of form fields

---
 app/helpers/form_helper.rb | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/app/helpers/form_helper.rb b/app/helpers/form_helper.rb
index 0db9635a046..2e7d451fb2e 100644
--- a/app/helpers/form_helper.rb
+++ b/app/helpers/form_helper.rb
@@ -283,7 +283,7 @@ def add_label options, f, attr
     label = options[:label] == :none ? '' : options.delete(:label)
     label ||= ((clazz = f.object.class).respond_to?(:gettext_translation_for_attribute_name) &&
         s_(clazz.gettext_translation_for_attribute_name attr)) if f
-    label = label.present? ? label_tag(attr, ""#{label}#{required_mark}"".html_safe, :class => label_size + "" control-label"") : ''
+    label = label.present? ? label_tag(attr, ""#{label}#{required_mark}"", :class => label_size + "" control-label"") : ''
     label
   end"
CVE-2016-10191,"From 7d57ca4d9a75562fa32e40766211de150f8b3ee7 Mon Sep 17 00:00:00 2001
From: Michael Niedermayer <michael@niedermayer.cc>
Date: Mon, 5 Dec 2016 11:14:51 +0100
Subject: [PATCH] avformat/rtmppkt: Check for packet size mismatches

Fixes out of array access

Found-by: Paul Cher <paulcher@icloud.com>
Reviewed-by: Paul Cher <paulcher@icloud.com>
Signed-off-by: Michael Niedermayer <michael@niedermayer.cc>
---
 libavformat/rtmppkt.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/libavformat/rtmppkt.c b/libavformat/rtmppkt.c
index 0d693c27f7f8f..cde0da78ce144 100644
--- a/libavformat/rtmppkt.c
+++ b/libavformat/rtmppkt.c
@@ -235,6 +235,14 @@ static int rtmp_packet_read_one_chunk(URLContext *h, RTMPPacket *p,
     if (hdr != RTMP_PS_TWELVEBYTES)
         timestamp += prev_pkt[channel_id].timestamp;
 
+    if (prev_pkt[channel_id].read && size != prev_pkt[channel_id].size) {
+        av_log(NULL, AV_LOG_ERROR, ""RTMP packet size mismatch %d != %d\n"",
+                size,
+                prev_pkt[channel_id].size);
+        ff_rtmp_packet_destroy(&prev_pkt[channel_id]);
+        prev_pkt[channel_id].read = 0;
+    }
+
     if (!prev_pkt[channel_id].read) {
         if ((ret = ff_rtmp_packet_create(p, channel_id, type, timestamp,
                                          size)) < 0)"
CVE-2016-5350,"From b4d16b4495b732888e12baf5b8a7e9bf2665e22b Mon Sep 17 00:00:00 2001
From: Gerald Combs <gerald@wireshark.org>
Date: Mon, 28 Mar 2016 15:46:33 -0700
Subject: [PATCH] SPOOLSS: Try to avoid an infinite loop.

Use tvb_reported_length_remaining in dissect_spoolss_uint16uni. Make
sure our offset always increments in dissect_spoolss_keybuffer.

Change-Id: I7017c9685bb2fa27161d80a03b8fca4ef630e793
Reviewed-on: https://code.wireshark.org/review/14687
Reviewed-by: Gerald Combs <gerald@wireshark.org>
Petri-Dish: Gerald Combs <gerald@wireshark.org>
Tested-by: Petri Dish Buildbot <buildbot-no-reply@wireshark.org>
Reviewed-by: Michael Mann <mmann78@netscape.net>
---
 epan/dissectors/packet-dcerpc-spoolss.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/epan/dissectors/packet-dcerpc-spoolss.c b/epan/dissectors/packet-dcerpc-spoolss.c
index 8774e3416a8..22eef3c5ad9 100644
--- a/epan/dissectors/packet-dcerpc-spoolss.c
+++ b/epan/dissectors/packet-dcerpc-spoolss.c
@@ -1090,7 +1090,7 @@ dissect_spoolss_uint16uni(tvbuff_t *tvb, int offset, packet_info *pinfo _U_,
 
 	/* Get remaining data in buffer as a string */
 
-	remaining = tvb_captured_length_remaining(tvb, offset);
+	remaining = tvb_reported_length_remaining(tvb, offset);
 	if (remaining <= 0) {
 		if (data)
 			*data = g_strdup("""");
@@ -6198,9 +6198,10 @@ dissect_spoolss_keybuffer(tvbuff_t *tvb, int offset, packet_info *pinfo,
 		end_offset = tvb_reported_length_remaining(tvb, offset) + 1;
 	}
 
-	while (offset < end_offset)
+	while (offset > 0 && offset < end_offset) {
 		offset = dissect_spoolss_uint16uni(
 			tvb, offset, pinfo, tree, drep, NULL, hf_keybuffer);
+	}
 
 	return offset;
 }"
CVE-2016-10969,"From c08d376072f093b650c49dcb44124f43ea0177b1 Mon Sep 17 00:00:00 2001
From: Ian Dunn <ian@iandunn.name>
Date: Mon, 20 Jun 2016 16:25:37 +0000
Subject: [PATCH] Admin: Escape ticket title on Discussion screen to avoid XSS.

If `run_wptexturize` is disabled, the following subject title would allow an attacker to perform cross-site scripting:

`""><script>alert('hi');</script>`

That attack has a CVSS score of 4.7 - https://www.first.org/cvss/calculator/3.0#CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:L/I:L/A:N

The rest of the output was reformatted to improve readability and make it easier to spot missing escaping functions or other problems.

Props https://hackerone.com/whitehatter for discovering and disclosing responsibly.

Fixes https://hackerone.com/reports/145086
---
 classes/class-supportflow-admin.php | 21 +++++++++++++++++----
 1 file changed, 17 insertions(+), 4 deletions(-)

diff --git a/classes/class-supportflow-admin.php b/classes/class-supportflow-admin.php
index 9387cdd..e4ff6b4 100644
--- a/classes/class-supportflow-admin.php
+++ b/classes/class-supportflow-admin.php
@@ -899,12 +899,25 @@ public function render_meta_box_details_actions() {
 	 * A box that appears at the top
 	 */
 	public function meta_box_subject() {
+		?>
+
+		<h4><?php _e( 'Subject', 'supportflow' ); ?></h4>
 
-		$placeholder = __( 'What is your conversation about?', 'supportflow' );
-		echo '<h4>' . __( 'Subject', 'supportflow' ) . '</h4>';
-		echo '<input type=""text"" id=""subject"" name=""post_title"" class=""sf_autosave"" placeholder=""' . $placeholder . '"" value=""' . get_the_title() . '"" autocomplete=""off"" />';
-		echo '<p class=""description"">' . __( 'Please describe what this ticket is about in several words', 'supportflow' ) . '</p>';
+		<input
+			type=""text""
+			id=""subject""
+			name=""post_title""
+			class=""sf_autosave""
+			placeholder=""<?php _e( 'What is your conversation about?', 'supportflow' ); ?>""
+			value=""<?php echo esc_attr( get_the_title() ); ?>""
+			autocomplete=""off""
+		/>
 
+		<p class=""description"">
+			<?php _e( 'Please describe what this ticket is about in several words', 'supportflow' ) ?>
+		</p>
+
+		<?php
 	}
 
 	/**"
CVE-2016-3134,"From 54d83fc74aa9ec72794373cb47432c5f7fb1a309 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fw@strlen.de>
Date: Tue, 22 Mar 2016 18:02:52 +0100
Subject: [PATCH] netfilter: x_tables: fix unconditional helper

Ben Hawkes says:

 In the mark_source_chains function (net/ipv4/netfilter/ip_tables.c) it
 is possible for a user-supplied ipt_entry structure to have a large
 next_offset field. This field is not bounds checked prior to writing a
 counter value at the supplied offset.

Problem is that mark_source_chains should not have been called --
the rule doesn't have a next entry, so its supposed to return
an absolute verdict of either ACCEPT or DROP.

However, the function conditional() doesn't work as the name implies.
It only checks that the rule is using wildcard address matching.

However, an unconditional rule must also not be using any matches
(no -m args).

The underflow validator only checked the addresses, therefore
passing the 'unconditional absolute verdict' test, while
mark_source_chains also tested for presence of matches, and thus
proceeeded to the next (not-existent) rule.

Unify this so that all the callers have same idea of 'unconditional rule'.

Reported-by: Ben Hawkes <hawkes@google.com>
Signed-off-by: Florian Westphal <fw@strlen.de>
Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
---
 net/ipv4/netfilter/arp_tables.c | 18 +++++++++---------
 net/ipv4/netfilter/ip_tables.c  | 23 +++++++++++------------
 net/ipv6/netfilter/ip6_tables.c | 23 +++++++++++------------
 3 files changed, 31 insertions(+), 33 deletions(-)

diff --git a/net/ipv4/netfilter/arp_tables.c b/net/ipv4/netfilter/arp_tables.c
index 51d4fe56b807bd..a1bb5e7129a2fe 100644
--- a/net/ipv4/netfilter/arp_tables.c
+++ b/net/ipv4/netfilter/arp_tables.c
@@ -359,11 +359,12 @@ unsigned int arpt_do_table(struct sk_buff *skb,
 }
 
 /* All zeroes == unconditional rule. */
-static inline bool unconditional(const struct arpt_arp *arp)
+static inline bool unconditional(const struct arpt_entry *e)
 {
 	static const struct arpt_arp uncond;
 
-	return memcmp(arp, &uncond, sizeof(uncond)) == 0;
+	return e->target_offset == sizeof(struct arpt_entry) &&
+	       memcmp(&e->arp, &uncond, sizeof(uncond)) == 0;
 }
 
 /* Figures out from what hook each rule can be called: returns 0 if
@@ -402,11 +403,10 @@ static int mark_source_chains(const struct xt_table_info *newinfo,
 				|= ((1 << hook) | (1 << NF_ARP_NUMHOOKS));
 
 			/* Unconditional return/END. */
-			if ((e->target_offset == sizeof(struct arpt_entry) &&
+			if ((unconditional(e) &&
 			     (strcmp(t->target.u.user.name,
 				     XT_STANDARD_TARGET) == 0) &&
-			     t->verdict < 0 && unconditional(&e->arp)) ||
-			    visited) {
+			     t->verdict < 0) || visited) {
 				unsigned int oldpos, size;
 
 				if ((strcmp(t->target.u.user.name,
@@ -551,7 +551,7 @@ static bool check_underflow(const struct arpt_entry *e)
 	const struct xt_entry_target *t;
 	unsigned int verdict;
 
-	if (!unconditional(&e->arp))
+	if (!unconditional(e))
 		return false;
 	t = arpt_get_target_c(e);
 	if (strcmp(t->u.user.name, XT_STANDARD_TARGET) != 0)
@@ -598,9 +598,9 @@ static inline int check_entry_size_and_hooks(struct arpt_entry *e,
 			newinfo->hook_entry[h] = hook_entries[h];
 		if ((unsigned char *)e - base == underflows[h]) {
 			if (!check_underflow(e)) {
-				pr_err(""Underflows must be unconditional and ""
-				       ""use the STANDARD target with ""
-				       ""ACCEPT/DROP\n"");
+				pr_debug(""Underflows must be unconditional and ""
+					 ""use the STANDARD target with ""
+					 ""ACCEPT/DROP\n"");
 				return -EINVAL;
 			}
 			newinfo->underflow[h] = underflows[h];
diff --git a/net/ipv4/netfilter/ip_tables.c b/net/ipv4/netfilter/ip_tables.c
index fb7694e6663e8e..89b5d959eda314 100644
--- a/net/ipv4/netfilter/ip_tables.c
+++ b/net/ipv4/netfilter/ip_tables.c
@@ -168,11 +168,12 @@ get_entry(const void *base, unsigned int offset)
 
 /* All zeroes == unconditional rule. */
 /* Mildly perf critical (only if packet tracing is on) */
-static inline bool unconditional(const struct ipt_ip *ip)
+static inline bool unconditional(const struct ipt_entry *e)
 {
 	static const struct ipt_ip uncond;
 
-	return memcmp(ip, &uncond, sizeof(uncond)) == 0;
+	return e->target_offset == sizeof(struct ipt_entry) &&
+	       memcmp(&e->ip, &uncond, sizeof(uncond)) == 0;
 #undef FWINV
 }
 
@@ -229,11 +230,10 @@ get_chainname_rulenum(const struct ipt_entry *s, const struct ipt_entry *e,
 	} else if (s == e) {
 		(*rulenum)++;
 
-		if (s->target_offset == sizeof(struct ipt_entry) &&
+		if (unconditional(s) &&
 		    strcmp(t->target.u.kernel.target->name,
 			   XT_STANDARD_TARGET) == 0 &&
-		   t->verdict < 0 &&
-		   unconditional(&s->ip)) {
+		   t->verdict < 0) {
 			/* Tail of chains: STANDARD target (return/policy) */
 			*comment = *chainname == hookname
 				? comments[NF_IP_TRACE_COMMENT_POLICY]
@@ -476,11 +476,10 @@ mark_source_chains(const struct xt_table_info *newinfo,
 			e->comefrom |= ((1 << hook) | (1 << NF_INET_NUMHOOKS));
 
 			/* Unconditional return/END. */
-			if ((e->target_offset == sizeof(struct ipt_entry) &&
+			if ((unconditional(e) &&
 			     (strcmp(t->target.u.user.name,
 				     XT_STANDARD_TARGET) == 0) &&
-			     t->verdict < 0 && unconditional(&e->ip)) ||
-			    visited) {
+			     t->verdict < 0) || visited) {
 				unsigned int oldpos, size;
 
 				if ((strcmp(t->target.u.user.name,
@@ -715,7 +714,7 @@ static bool check_underflow(const struct ipt_entry *e)
 	const struct xt_entry_target *t;
 	unsigned int verdict;
 
-	if (!unconditional(&e->ip))
+	if (!unconditional(e))
 		return false;
 	t = ipt_get_target_c(e);
 	if (strcmp(t->u.user.name, XT_STANDARD_TARGET) != 0)
@@ -763,9 +762,9 @@ check_entry_size_and_hooks(struct ipt_entry *e,
 			newinfo->hook_entry[h] = hook_entries[h];
 		if ((unsigned char *)e - base == underflows[h]) {
 			if (!check_underflow(e)) {
-				pr_err(""Underflows must be unconditional and ""
-				       ""use the STANDARD target with ""
-				       ""ACCEPT/DROP\n"");
+				pr_debug(""Underflows must be unconditional and ""
+					 ""use the STANDARD target with ""
+					 ""ACCEPT/DROP\n"");
 				return -EINVAL;
 			}
 			newinfo->underflow[h] = underflows[h];
diff --git a/net/ipv6/netfilter/ip6_tables.c b/net/ipv6/netfilter/ip6_tables.c
index b248528f2a1728..541b59f8359527 100644
--- a/net/ipv6/netfilter/ip6_tables.c
+++ b/net/ipv6/netfilter/ip6_tables.c
@@ -198,11 +198,12 @@ get_entry(const void *base, unsigned int offset)
 
 /* All zeroes == unconditional rule. */
 /* Mildly perf critical (only if packet tracing is on) */
-static inline bool unconditional(const struct ip6t_ip6 *ipv6)
+static inline bool unconditional(const struct ip6t_entry *e)
 {
 	static const struct ip6t_ip6 uncond;
 
-	return memcmp(ipv6, &uncond, sizeof(uncond)) == 0;
+	return e->target_offset == sizeof(struct ip6t_entry) &&
+	       memcmp(&e->ipv6, &uncond, sizeof(uncond)) == 0;
 }
 
 static inline const struct xt_entry_target *
@@ -258,11 +259,10 @@ get_chainname_rulenum(const struct ip6t_entry *s, const struct ip6t_entry *e,
 	} else if (s == e) {
 		(*rulenum)++;
 
-		if (s->target_offset == sizeof(struct ip6t_entry) &&
+		if (unconditional(s) &&
 		    strcmp(t->target.u.kernel.target->name,
 			   XT_STANDARD_TARGET) == 0 &&
-		    t->verdict < 0 &&
-		    unconditional(&s->ipv6)) {
+		    t->verdict < 0) {
 			/* Tail of chains: STANDARD target (return/policy) */
 			*comment = *chainname == hookname
 				? comments[NF_IP6_TRACE_COMMENT_POLICY]
@@ -488,11 +488,10 @@ mark_source_chains(const struct xt_table_info *newinfo,
 			e->comefrom |= ((1 << hook) | (1 << NF_INET_NUMHOOKS));
 
 			/* Unconditional return/END. */
-			if ((e->target_offset == sizeof(struct ip6t_entry) &&
+			if ((unconditional(e) &&
 			     (strcmp(t->target.u.user.name,
 				     XT_STANDARD_TARGET) == 0) &&
-			     t->verdict < 0 &&
-			     unconditional(&e->ipv6)) || visited) {
+			     t->verdict < 0) || visited) {
 				unsigned int oldpos, size;
 
 				if ((strcmp(t->target.u.user.name,
@@ -727,7 +726,7 @@ static bool check_underflow(const struct ip6t_entry *e)
 	const struct xt_entry_target *t;
 	unsigned int verdict;
 
-	if (!unconditional(&e->ipv6))
+	if (!unconditional(e))
 		return false;
 	t = ip6t_get_target_c(e);
 	if (strcmp(t->u.user.name, XT_STANDARD_TARGET) != 0)
@@ -775,9 +774,9 @@ check_entry_size_and_hooks(struct ip6t_entry *e,
 			newinfo->hook_entry[h] = hook_entries[h];
 		if ((unsigned char *)e - base == underflows[h]) {
 			if (!check_underflow(e)) {
-				pr_err(""Underflows must be unconditional and ""
-				       ""use the STANDARD target with ""
-				       ""ACCEPT/DROP\n"");
+				pr_debug(""Underflows must be unconditional and ""
+					 ""use the STANDARD target with ""
+					 ""ACCEPT/DROP\n"");
 				return -EINVAL;
 			}
 			newinfo->underflow[h] = underflows[h];"
CVE-2016-3951,"From 1666984c8625b3db19a9abc298931d35ab7bc64b Mon Sep 17 00:00:00 2001
From: Oliver Neukum <oneukum@suse.com>
Date: Mon, 7 Mar 2016 11:31:10 +0100
Subject: [PATCH] usbnet: cleanup after bind() in probe()

In case bind() works, but a later error forces bailing
in probe() in error cases work and a timer may be scheduled.
They must be killed. This fixes an error case related to
the double free reported in
http://www.spinics.net/lists/netdev/msg367669.html
and needs to go on top of Linus' fix to cdc-ncm.

Signed-off-by: Oliver Neukum <ONeukum@suse.com>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 drivers/net/usb/usbnet.c | 7 +++++++
 1 file changed, 7 insertions(+)

diff --git a/drivers/net/usb/usbnet.c b/drivers/net/usb/usbnet.c
index 0b0ba7ef14e4e9..10798128c03fc6 100644
--- a/drivers/net/usb/usbnet.c
+++ b/drivers/net/usb/usbnet.c
@@ -1769,6 +1769,13 @@ usbnet_probe (struct usb_interface *udev, const struct usb_device_id *prod)
 	if (info->unbind)
 		info->unbind (dev, udev);
 out1:
+	/* subdrivers must undo all they did in bind() if they
+	 * fail it, but we may fail later and a deferred kevent
+	 * may trigger an error resubmitting itself and, worse,
+	 * schedule a timer. So we kill it all just in case.
+	 */
+	cancel_work_sync(&dev->kevent);
+	del_timer_sync(&dev->delay);
 	free_netdev(net);
 out:
 	return status;"
CVE-2016-10058,"From 4ec444f4eab88cf4bec664fafcf9cab50bc5ff6a Mon Sep 17 00:00:00 2001
From: dirk <dirk@git.imagemagick.org>
Date: Wed, 19 Oct 2016 07:29:36 +0200
Subject: [PATCH] Fixed memory leak.

---
 coders/psd.c | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/coders/psd.c b/coders/psd.c
index 2e587fed166..e936a7d669c 100644
--- a/coders/psd.c
+++ b/coders/psd.c
@@ -1719,6 +1719,8 @@ ModuleExport MagickBooleanType ReadPSDLayers(Image *image,
             if (image->debug != MagickFalse)
               (void) LogMagickEvent(CoderEvent,GetMagickModule(),
                 ""      layer data is empty"");
+            if (layer_info[i].info != (StringInfo *) NULL)
+              layer_info[i].info=DestroyStringInfo(layer_info[i].info);
             continue;
           }"
CVE-2016-9842,"From e54e1299404101a5a9d0cf5e45512b543967f958 Mon Sep 17 00:00:00 2001
From: Mark Adler <madler@alumni.caltech.edu>
Date: Sat, 5 Sep 2015 17:45:55 -0700
Subject: [PATCH] Avoid shifts of negative values inflateMark().

The C standard says that bit shifts of negative integers is
undefined.  This casts to unsigned values to assure a known
result.
---
 inflate.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/inflate.c b/inflate.c
index 2889e3a07..a71841670 100644
--- a/inflate.c
+++ b/inflate.c
@@ -1506,9 +1506,10 @@ z_streamp strm;
 {
     struct inflate_state FAR *state;
 
-    if (strm == Z_NULL || strm->state == Z_NULL) return -1L << 16;
+    if (strm == Z_NULL || strm->state == Z_NULL)
+        return (long)(((unsigned long)0 - 1) << 16);
     state = (struct inflate_state FAR *)strm->state;
-    return ((long)(state->back) << 16) +
+    return (long)(((unsigned long)((long)state->back)) << 16) +
         (state->mode == COPY ? state->length :
             (state->mode == MATCH ? state->was - state->length : 0));
 }"
CVE-2016-10321,"From 944d8bd8f3c5cf8ae296fc03d149056c65358426 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Leonel=20C=C3=A2mara?= <leonelcamara@gmail.com>
Date: Wed, 4 May 2016 19:02:53 +0100
Subject: [PATCH] Check if host is denied before verifying password

---
 applications/admin/controllers/default.py | 3 +++
 applications/admin/models/access.py       | 8 ++++++--
 2 files changed, 9 insertions(+), 2 deletions(-)

diff --git a/applications/admin/controllers/default.py b/applications/admin/controllers/default.py
index 9eaf90d15..bed4e8633 100644
--- a/applications/admin/controllers/default.py
+++ b/applications/admin/controllers/default.py
@@ -121,6 +121,9 @@ def index():
         send = URL('site')
     if session.authorized:
         redirect(send)
+    elif failed_login_count() >= allowed_number_of_attempts:
+        time.sleep(2 ** allowed_number_of_attempts)
+        raise HTTP(403)
     elif request.vars.password:
         if verify_password(request.vars.password[:1024]):
             session.authorized = True
diff --git a/applications/admin/models/access.py b/applications/admin/models/access.py
index fa1ee01cb..b94ce8d08 100644
--- a/applications/admin/models/access.py
+++ b/applications/admin/models/access.py
@@ -104,13 +104,12 @@ def write_hosts_deny(denied_hosts):
     portalocker.unlock(f)
     f.close()
 
-
 def login_record(success=True):
     denied_hosts = read_hosts_deny()
     val = (0, 0)
     if success and request.client in denied_hosts:
         del denied_hosts[request.client]
-    elif not success and not request.is_local:
+    elif not success:
         val = denied_hosts.get(request.client, (0, 0))
         if time.time() - val[1] < expiration_failed_logins \
             and val[0] >= allowed_number_of_attempts:
@@ -121,6 +120,11 @@ def login_record(success=True):
     write_hosts_deny(denied_hosts)
     return val[0]
 
+def failed_login_count():
+    denied_hosts = read_hosts_deny()
+    val = denied_hosts.get(request.client, (0, 0))
+    return val[0]
+
 
 # ###########################################################
 # ## session expiration"
OSV-2016-2,"From 8c16c9e3c9a82f859c3ed47c34c14eea6a3d7b18 Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Tue, 20 Dec 2016 13:29:20 +0000
Subject: [PATCH] use CCAST, instead of __UNCONST

---
 src/softmagic.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/softmagic.c b/src/softmagic.c
index 4caa864090..6a0375d3a5 100644
--- a/src/softmagic.c
+++ b/src/softmagic.c
@@ -32,7 +32,7 @@
 #include ""file.h""
 
 #ifndef	lint
-FILE_RCSID(""@(#)$File: softmagic.c,v 1.239 2016/12/20 03:15:16 christos Exp $"")
+FILE_RCSID(""@(#)$File: softmagic.c,v 1.240 2016/12/20 12:19:25 christos Exp $"")
 #endif	/* lint */
 
 #include ""magic.h""
@@ -1888,7 +1888,7 @@ magiccheck(struct magic_set *ms, struct magic *m)
 			    copy[--slen] = '\0';
 			    search = copy;
 			} else {
-			    search = __UNCONST("""");
+			    search = CCAST(char *, """");
 			    copy = NULL;
 			}
 			rc = file_regexec(&rx, (const char *)search,"
CVE-2016-10513,"From 9a93d1f44b06605af84520509e7a0e8b64ab0c05 Mon Sep 17 00:00:00 2001
From: plegall <plg@piwigo.org>
Date: Thu, 17 Nov 2016 14:10:27 +0100
Subject: [PATCH] fixes #548, escape HTML chars from search expression

before sending them to HTML comment on frontend
---
 include/functions_search.inc.php | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/include/functions_search.inc.php b/include/functions_search.inc.php
index d8df4eea89..59fc97caca 100644
--- a/include/functions_search.inc.php
+++ b/include/functions_search.inc.php
@@ -1284,13 +1284,13 @@ function get_quick_search_results_no_cache($q, $options)
 
   $ids = qsearch_eval($expression, $qsr, $tmp, $search_results['qs']['unmatched_terms']);
 
-  $debug[] = ""<!--\nparsed: "".$expression;
+  $debug[] = ""<!--\nparsed: "".htmlspecialchars($expression);
   $debug[] = count($expression->stokens).' tokens';
   for ($i=0; $i<count($expression->stokens); $i++)
   {
-    $debug[] = $expression->stokens[$i].': '.count($qsr->tag_ids[$i]).' tags, '.count($qsr->tag_iids[$i]).' tiids, '.count($qsr->images_iids[$i]).' iiids, '.count($qsr->iids[$i]).' iids'
+    $debug[] = htmlspecialchars($expression->stokens[$i]).': '.count($qsr->tag_ids[$i]).' tags, '.count($qsr->tag_iids[$i]).' tiids, '.count($qsr->images_iids[$i]).' iiids, '.count($qsr->iids[$i]).' iids'
       .' modifier:'.dechex($expression->stoken_modifiers[$i])
-      .( !empty($expression->stokens[$i]->variants) ? ' variants: '.implode(', ',$expression->stokens[$i]->variants): '');
+      .( !empty($expression->stokens[$i]->variants) ? ' variants: '.htmlspecialchars(implode(', ',$expression->stokens[$i]->variants)): '');
   }
   $debug[] = 'before perms '.count($ids);"
CVE-2016-2040,"From aca42efa01917cc0fe8cfdb2927a6399ca1742f2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Mon, 25 Jan 2016 12:21:48 +0100
Subject: [PATCH] Escape javascript variable content
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 templates/header_location.phtml | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/templates/header_location.phtml b/templates/header_location.phtml
index 6e8246569d99..e1dabdfa565b 100644
--- a/templates/header_location.phtml
+++ b/templates/header_location.phtml
@@ -25,8 +25,8 @@ $uri = isset($uri) ? $uri : null;
 <body>
 <script type=""text/javascript"">
     //<![CDATA[
-    document.write('<p><a href=""<?php echo htmlspecialchars($uri) ?>""><?php echo __('Go') ?></a></p>');
+    document.write('<p><a href=""<?php echo PMA_escapeJsString(htmlspecialchars($uri)) ?>""><?php echo __('Go') ?></a></p>');
     //]]>
 </script>
 </body>
-</html>
\ No newline at end of file
+</html>"
CVE-2016-7514,"From e14fd0a2801f73bdc123baf4fbab97dec55919eb Mon Sep 17 00:00:00 2001
From: dirk <dirk@git.imagemagick.org>
Date: Fri, 15 Jan 2016 01:27:31 +0100
Subject: [PATCH] Added missing call to ConstrainColormapIndex.

---
 coders/psd.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/coders/psd.c b/coders/psd.c
index 5f5fba6c62d..5a5c6338071 100644
--- a/coders/psd.c
+++ b/coders/psd.c
@@ -835,7 +835,8 @@ static MagickBooleanType ReadPSDChannelPixels(Image *image,
                   SetPixelIndex(image,(((unsigned char) pixel) &
                     (0x01 << (7-bit))) != 0 ? 0 : 255,q);
                   SetPixelViaPixelInfo(image,image->colormap+(ssize_t)
-                    GetPixelIndex(image,q),q);
+                    ConstrainColormapIndex(image,GetPixelIndex(image,q),
+                      exception),q);
                   q+=GetPixelChannels(image);
                   x++;
                 }"
CVE-2016-2539,"From bfc6c80c6c217c5515172f3cc949e13dfa1a92ac Mon Sep 17 00:00:00 2001
From: Greg Gay <gregrgay@gmail.com>
Date: Sat, 5 Mar 2016 14:12:46 -0500
Subject: [PATCH] 5632,5644 removed array_multisort to fix module install
 issues, and added csrftoken to fix postential CSRF attack

---
 mods/_core/modules/install_modules.php        | 30 ++++++++++++++-----
 .../admin/modules/install_modules.tmpl.php    | 17 ++++++++++-
 2 files changed, 39 insertions(+), 8 deletions(-)

diff --git a/mods/_core/modules/install_modules.php b/mods/_core/modules/install_modules.php
index 3ad709f56..69fcd5a79 100644
--- a/mods/_core/modules/install_modules.php
+++ b/mods/_core/modules/install_modules.php
@@ -18,6 +18,8 @@
 require(AT_INCLUDE_PATH.'../mods/_core/modules/classes/ModuleListParser.class.php');
 require_once(AT_INCLUDE_PATH.'../mods/_core/file_manager/filemanager.inc.php');
 // delete all folders and files in $dir
+
+
 function clear_dir($dir)
 {
 	if ($dh = opendir($dir)) 
@@ -154,8 +156,15 @@ function clear_dir($dir)
 
 			if (!$msg->containsErrors())
 			{
-				header('Location: module_install_step_1.php?mod='.urlencode($module_folder).SEP.'new=1');
-				exit;
+			        if($_POST['csrftoken'] != $_SESSION['token']){
+                        $msg->addError('ACCESS_DENIED');
+                    } else {
+                    
+                        header('Location: module_install_step_1.php?mod='.urlencode($module_folder).SEP.'new=1');                        
+                        exit;
+                    }
+				//header('Location: module_install_step_1.php?mod='.urlencode($module_folder).SEP.'new=1');
+				//exit;
 			}
 		}
 		
@@ -181,8 +190,13 @@ function clear_dir($dir)
 	$dir_name = str_replace(array('.','..'), '', $_POST['mod']);
 
 	if (isset($_POST['install_manually'])) {
-		header('Location: '.AT_BASE_HREF.'mods/_core/modules/module_install_step_2.php?mod='.urlencode($dir_name).SEP.'new=1'.SEP.'mod_in=1');
-		exit;
+	// Check for potential  CSRF
+        if($_POST['csrftoken'] != $_SESSION['token']){
+                $msg->addError('ACCESS_DENIED');
+        } else {
+            header('Location: '.AT_BASE_HREF.'mods/_core/modules/module_install_step_2.php?mod='.urlencode($dir_name).SEP.'new=1'.SEP.'mod_in=1');
+            exit;
+        }
 	}
 
 } else if (isset($_POST['install_manually'])) {
@@ -255,16 +269,18 @@ function validate_filename() {
 
     // Add $module_list_array as the last parameter, to sort by the common key
     // Sorts by original $module_list_array by reference, then returns true|false
-    $sort_by_version = array_multisort($version, SORT_DESC, $module_list_array);
+    //$sort_by_version = array_multisort($version, SORT_DESC, $module_list_array);
 
 // Create menu for filter ATutor versions
-function select_atversion(){ 
+function select_atversion($v=0){ 
     global $sort_versions;
     $menu = '<form action=""'.$_SERVER['PHP_SELF'].'"" method=""post"">'; 
     $menu.= '<select name=""atversions"">';
     $menu.= '<option value=""0"">'._AT(""all"").'</option>';
     foreach($sort_versions as $version){
-        if($version == VERSION){
+        if($version == $v){
+            $menu .= '<option value=""'.$version.'"" selected=""selected"">'.$version.'</option>';
+        }else if($version == VERSION){
             $menu .= '<option value=""'.$version.'"" selected=""selected"">'.$version.'</option>';
         }else{
             $menu .= '<option value=""'.$version.'"" >'.$version.'</option>';
diff --git a/themes/default/admin/modules/install_modules.tmpl.php b/themes/default/admin/modules/install_modules.tmpl.php
index f181d7039..562e0f4f2 100644
--- a/themes/default/admin/modules/install_modules.tmpl.php
+++ b/themes/default/admin/modules/install_modules.tmpl.php
@@ -8,6 +8,7 @@
 
 		<div class=""row"">
 			<input type=""hidden"" name=""MAX_FILE_SIZE"" value=""52428800"" />
+			<input type=""hidden"" name=""csrftoken""  value=""<?php echo $_SESSION['token'];?>"" />
 			<input type=""file"" name=""modulefile""  size=""50"" />
 		</div>
 		
@@ -26,6 +27,7 @@
 {
 ?>
 <form action=""<?php echo $_SERVER['PHP_SELF']; ?>"" method=""post"" name=""installform"">
+<input type=""hidden"" name=""csrftoken""  value=""<?php echo $_SESSION['token'];?>"" />
 <table class=""data"" summary="""">
 <thead>
 <tr>
@@ -82,10 +84,23 @@
     <div class=""row"">
     <?php echo _AT('old_module_notes'); ?>
     </div>
-<?php echo select_atversion(); ?>
+<?php 
+
+if(isset($_POST['atversions'])){
+    $v = htmlspecialchars($_POST['atversions']);
+    $_SESSION['atversion'] = $_POST['atversions'];
+} elseif(isset($_SESSION['atversion'] )){
+    $v = substr($_SESSION['atversion'], 0, 3);
+} else {
+    $v = substr(VERSION, 0, 3);
+}
+echo select_atversion($v); 
+
+?>
 </div>
 </fieldset>
 <form action=""<?php echo $_SERVER['PHP_SELF']; ?>"" method=""post"" name=""form"">
+<input type=""hidden"" name=""csrftoken""  value=""<?php echo $_SESSION['token'];?>"" />
 <table class=""data"" summary="""">
 <thead>
 	<tr>"
CVE-2016-2228,"From ab07a1b447de34e13983b4d7ceb18b58c3a358d8 Mon Sep 17 00:00:00 2001
From: Jan Schneider <jan@horde.org>
Date: Wed, 6 Jan 2016 11:46:35 +0100
Subject: [PATCH] [jan] SECURITY: Fix XSS vulnerability in menu bar exposed by
 only a few applications (Bug #14213).

---
 horde/docs/CHANGES                       | 2 ++
 horde/package.xml                        | 4 ++--
 horde/templates/topbar/_menubar.html.php | 2 +-
 3 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/horde/docs/CHANGES b/horde/docs/CHANGES
index c014c41d6aa..a9fd86522e2 100644
--- a/horde/docs/CHANGES
+++ b/horde/docs/CHANGES
@@ -2,6 +2,8 @@
 v5.2.9-git
 ----------
 
+[jan] SECURITY: Fix XSS vulnerability in menu bar exposed by only a few
+      applications (Bug #14213).
 
 
 ------
diff --git a/horde/package.xml b/horde/package.xml
index 5aecf15cbf0..17b9e11ddaf 100644
--- a/horde/package.xml
+++ b/horde/package.xml
@@ -39,7 +39,7 @@
  </stability>
  <license uri=""http://www.horde.org/licenses/lgpl"">LGPL-2</license>
  <notes>
-* 
+* [jan] SECURITY: Fix XSS vulnerability in menu bar exposed by only a few applications (Bug #14213).
  </notes>
  <contents>
   <dir baseinstalldir=""/"" name=""/"">
@@ -4074,7 +4074,7 @@
    <date>2015-10-20</date>
    <license uri=""http://www.horde.org/licenses/lgpl"">LGPL-2</license>
    <notes>
-* 
+* [jan] SECURITY: Fix XSS vulnerability in menu bar exposed by only a few applications (Bug #14213).
    </notes>
   </release>
  </changelog>
diff --git a/horde/templates/topbar/_menubar.html.php b/horde/templates/topbar/_menubar.html.php
index acb416cf2e9..df75623e51c 100644
--- a/horde/templates/topbar/_menubar.html.php
+++ b/horde/templates/topbar/_menubar.html.php
@@ -23,7 +23,7 @@
         <input autocomplete=""off"" id=""horde-search-input"" type=""text"" />
       </div>
 <?php else: ?>
-      <input type=""text"" id=""horde-search-input"" name=""searchfield"" class=""formGhost"" title=""<?php echo $this->searchLabel ?>"" />
+      <input type=""text"" id=""horde-search-input"" name=""searchfield"" class=""formGhost"" title=""<?php echo $this->h($this->searchLabel) ?>"" />
 <?php endif ?>
       <input type=""image"" id=""horde-search-icon"" src=""<?php echo $this->searchIcon ?>"" />
     </form>"
CVE-2016-7972,"From aa54e0b59200a994d50a346b5d7ac818ebcf2d4b Mon Sep 17 00:00:00 2001
From: Grigori Goronzy <greg@chown.ath.cx>
Date: Tue, 4 Oct 2016 02:35:26 +0200
Subject: [PATCH] shaper: fix reallocation

Update the variable that tracks the allocated size. This potentially
improves performance and avoid some side effects, which lead to
undefined behavior in some cases.

Fixes fuzzer test case id:000051,sig:11,sync:fuzzer3,src:004221.
---
 libass/ass_shaper.c | 1 +
 1 file changed, 1 insertion(+)

diff --git a/libass/ass_shaper.c b/libass/ass_shaper.c
index 2707b2362..5f24c5a95 100644
--- a/libass/ass_shaper.c
+++ b/libass/ass_shaper.c
@@ -100,6 +100,7 @@ static bool check_allocations(ASS_Shaper *shaper, size_t new_size)
             !ASS_REALLOC_ARRAY(shaper->emblevels, new_size) ||
             !ASS_REALLOC_ARRAY(shaper->cmap, new_size))
             return false;
+        shaper->n_glyphs = new_size;
     }
     return true;
 }"
PYSEC-2016-2,"From f68e5a99164867ab0e071a936470958ed867479d Mon Sep 17 00:00:00 2001
From: Tim Graham <timograham@gmail.com>
Date: Wed, 6 Jul 2016 15:41:06 -0400
Subject: [PATCH] [1.8.x] Fixed XSS in admin's add/change related popup.

This is a security fix.
---
 .../admin/js/admin/RelatedObjectLookups.js    |  2 +-
 django/views/debug.py                         |  4 +-
 docs/releases/1.8.14.txt                      | 15 +++++++-
 tests/admin_views/admin.py                    |  3 +-
 tests/admin_views/models.py                   |  4 ++
 tests/admin_views/tests.py                    | 38 +++++++++++++++++++
 6 files changed, 60 insertions(+), 6 deletions(-)

diff --git a/django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js b/django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js
index d358b208f462..17ff10ff2644 100644
--- a/django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js
+++ b/django/contrib/admin/static/admin/js/admin/RelatedObjectLookups.js
@@ -105,7 +105,7 @@ function dismissChangeRelatedObjectPopup(win, objId, newRepr, newId) {
     var selects = django.jQuery(selectsSelector);
     selects.find('option').each(function() {
         if (this.value == objId) {
-            this.innerHTML = newRepr;
+            this.textContent = newRepr;
             this.value = newId;
         }
     });
diff --git a/django/views/debug.py b/django/views/debug.py
index f352196d3d67..9984f3891d45 100644
--- a/django/views/debug.py
+++ b/django/views/debug.py
@@ -704,13 +704,13 @@ def default_urlconf(request):
       var s = link.getElementsByTagName('span')[0];
       var uarr = String.fromCharCode(0x25b6);
       var darr = String.fromCharCode(0x25bc);
-      s.innerHTML = s.innerHTML == uarr ? darr : uarr;
+      s.textContent = s.textContent == uarr ? darr : uarr;
       return false;
     }
     function switchPastebinFriendly(link) {
       s1 = ""Switch to copy-and-paste view"";
       s2 = ""Switch back to interactive view"";
-      link.innerHTML = link.innerHTML.trim() == s1 ? s2: s1;
+      link.textContent = link.textContent.trim() == s1 ? s2: s1;
       toggle('browserTraceback', 'pastebinTraceback');
       return false;
     }
diff --git a/docs/releases/1.8.14.txt b/docs/releases/1.8.14.txt
index 6311172abcf9..31a304f7c060 100644
--- a/docs/releases/1.8.14.txt
+++ b/docs/releases/1.8.14.txt
@@ -2,9 +2,20 @@
 Django 1.8.14 release notes
 ===========================
 
-*Under development*
+*July 18, 2016*
 
-Django 1.8.14 fixes several bugs in 1.8.13.
+Django 1.8.14 fixes a security issue and a bug in 1.8.13.
+
+XSS in admin's add/change related popup
+=======================================
+
+Unsafe usage of JavaScript's ``Element.innerHTML`` could result in XSS in the
+admin's add/change related popup. ``Element.textContent`` is now used to
+prevent execution of the data.
+
+The debug view also used ``innerHTML``. Although a security issue wasn't
+identified there, out of an abundance of caution it's also updated to use
+``textContent``.
 
 Bugfixes
 ========
diff --git a/tests/admin_views/admin.py b/tests/admin_views/admin.py
index 8a980f45d587..a5e33a13bb7c 100644
--- a/tests/admin_views/admin.py
+++ b/tests/admin_views/admin.py
@@ -88,7 +88,8 @@ class ChapterXtra1Admin(admin.ModelAdmin):
 
 class ArticleAdmin(admin.ModelAdmin):
     list_display = ('content', 'date', callable_year, 'model_year',
-                    'modeladmin_year', 'model_year_reversed')
+                    'modeladmin_year', 'model_year_reversed', 'section')
+    list_editable = ('section',)
     list_filter = ('date', 'section')
     view_on_site = False
     fieldsets = (
diff --git a/tests/admin_views/models.py b/tests/admin_views/models.py
index e5f6cc99f233..6fe69662ef87 100644
--- a/tests/admin_views/models.py
+++ b/tests/admin_views/models.py
@@ -16,6 +16,7 @@
 from django.utils.encoding import python_2_unicode_compatible
 
 
+@python_2_unicode_compatible
 class Section(models.Model):
     """"""
     A simple section that links to articles, to test linking to related items
@@ -23,6 +24,9 @@ class Section(models.Model):
     """"""
     name = models.CharField(max_length=100)
 
+    def __str__(self):
+        return self.name
+
     @property
     def name_property(self):
         """"""
diff --git a/tests/admin_views/tests.py b/tests/admin_views/tests.py
index 5b60368042c3..11b23d03ba61 100644
--- a/tests/admin_views/tests.py
+++ b/tests/admin_views/tests.py
@@ -4056,6 +4056,44 @@ def test_cancel_delete_related_confirmation(self):
         self.assertEqual(Pizza.objects.count(), 1)
         self.assertEqual(Topping.objects.count(), 2)
 
+    def test_list_editable_popups(self):
+        """"""
+        list_editable foreign keys have add/change popups.
+        """"""
+        from selenium.webdriver.support.ui import Select
+        s1 = Section.objects.create(name='Test section')
+        Article.objects.create(
+            title='foo',
+            content='<p>Middle content</p>',
+            date=datetime.datetime(2008, 3, 18, 11, 54, 58),
+            section=s1,
+        )
+        self.admin_login(username='super', password='secret', login_url=reverse('admin:index'))
+        self.selenium.get(self.live_server_url + reverse('admin:admin_views_article_changelist'))
+        # Change popup
+        self.selenium.find_element_by_id('change_id_form-0-section').click()
+        self.wait_for_popup()
+        self.selenium.switch_to.window(self.selenium.window_handles[-1])
+        self.wait_for_text('#content h1', 'Change section')
+        name_input = self.selenium.find_element_by_id('id_name')
+        name_input.clear()
+        name_input.send_keys('<i>edited section</i>')
+        self.selenium.find_element_by_xpath('//input[@value=""Save""]').click()
+        self.selenium.switch_to.window(self.selenium.window_handles[0])
+        select = Select(self.selenium.find_element_by_id('id_form-0-section'))
+        self.assertEqual(select.first_selected_option.text, '<i>edited section</i>')
+
+        # Add popup
+        self.selenium.find_element_by_id('add_id_form-0-section').click()
+        self.wait_for_popup()
+        self.selenium.switch_to.window(self.selenium.window_handles[-1])
+        self.wait_for_text('#content h1', 'Add section')
+        self.selenium.find_element_by_id('id_name').send_keys('new section')
+        self.selenium.find_element_by_xpath('//input[@value=""Save""]').click()
+        self.selenium.switch_to.window(self.selenium.window_handles[0])
+        select = Select(self.selenium.find_element_by_id('id_form-0-section'))
+        self.assertEqual(select.first_selected_option.text, 'new section')
+
     def test_list_editable_raw_id_fields(self):
         parent = ParentWithUUIDPK.objects.create(title='test')
         parent2 = ParentWithUUIDPK.objects.create(title='test2')"
CVE-2016-5731,"From 418aeea3d83b0b6021bac311d849570acfc6e48c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Fri, 17 Jun 2016 14:33:33 +0200
Subject: [PATCH] Add error handling to constructing openid message
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 examples/openid.php | 28 +++++++++++++++++-----------
 1 file changed, 17 insertions(+), 11 deletions(-)

diff --git a/examples/openid.php b/examples/openid.php
index a15189b37af9..8ef34e9ee34d 100644
--- a/examples/openid.php
+++ b/examples/openid.php
@@ -63,6 +63,16 @@ function Show_page($contents)
     <?php
 }
 
+function Die_error($e)
+{
+    $contents = ""<div class='relyingparty_results'>\n"";
+    $contents .= ""<pre>"" . htmlspecialchars($e->getMessage()) . ""</pre>\n"";
+    $contents .= ""</div class='relyingparty_results'>"";
+    Show_page($contents);
+    exit;
+}
+
+
 /* Need to have cookie visible from parent directory */
 session_set_cookie_params(0, '/', '', false);
 /* Create signon session */
@@ -110,11 +120,7 @@ function Show_page($contents)
 try {
     $o = new OpenID_RelyingParty($returnTo, $realm, $identifier);
 } catch (Exception $e) {
-    $contents = ""<div class='relyingparty_results'>\n"";
-    $contents .= ""<pre>"" . htmlspecialchars($e->getMessage()) . ""</pre>\n"";
-    $contents .= ""</div class='relyingparty_results'>"";
-    Show_page($contents);
-    exit;
+    Die_error($e);
 }
 
 /* Redirect to OpenID provider */
@@ -122,11 +128,7 @@ function Show_page($contents)
     try {
         $authRequest = $o->prepare();
     } catch (Exception $e) {
-        $contents = ""<div class='relyingparty_results'>\n"";
-        $contents .= ""<pre>"" . htmlspecialchars($e->getMessage()) . ""</pre>\n"";
-        $contents .= ""</div class='relyingparty_results'>"";
-        Show_page($contents);
-        exit;
+        Die_error($e);
     }
 
     $url = $authRequest->getAuthorizeURL();
@@ -143,7 +145,11 @@ function Show_page($contents)
     }
 
     /* Check reply */
-    $message = new OpenID_Message($queryString, OpenID_Message::FORMAT_HTTP);
+    try {
+        $message = new OpenID_Message($queryString, OpenID_Message::FORMAT_HTTP);
+    } catch (Exception $e) {
+        Die_error($e);
+    }
 
     $id = $message->get('openid.claimed_id');"
CVE-2016-7425,"From 7bc2b55a5c030685b399bb65b6baa9ccc3d1f167 Mon Sep 17 00:00:00 2001
From: Dan Carpenter <dan.carpenter@oracle.com>
Date: Thu, 15 Sep 2016 16:44:56 +0300
Subject: [PATCH] scsi: arcmsr: Buffer overflow in arcmsr_iop_message_xfer()

We need to put an upper bound on ""user_len"" so the memcpy() doesn't
overflow.

Cc: <stable@vger.kernel.org>
Reported-by: Marco Grassi <marco.gra@gmail.com>
Signed-off-by: Dan Carpenter <dan.carpenter@oracle.com>
Reviewed-by: Tomas Henzl <thenzl@redhat.com>
Signed-off-by: Martin K. Petersen <martin.petersen@oracle.com>
---
 drivers/scsi/arcmsr/arcmsr_hba.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/scsi/arcmsr/arcmsr_hba.c b/drivers/scsi/arcmsr/arcmsr_hba.c
index 7640498964a5bb..110eca9eaca05c 100644
--- a/drivers/scsi/arcmsr/arcmsr_hba.c
+++ b/drivers/scsi/arcmsr/arcmsr_hba.c
@@ -2388,7 +2388,8 @@ static int arcmsr_iop_message_xfer(struct AdapterControlBlock *acb,
 	}
 	case ARCMSR_MESSAGE_WRITE_WQBUFFER: {
 		unsigned char *ver_addr;
-		int32_t user_len, cnt2end;
+		uint32_t user_len;
+		int32_t cnt2end;
 		uint8_t *pQbuffer, *ptmpuserbuffer;
 		ver_addr = kmalloc(ARCMSR_API_DATA_BUFLEN, GFP_ATOMIC);
 		if (!ver_addr) {
@@ -2397,6 +2398,11 @@ static int arcmsr_iop_message_xfer(struct AdapterControlBlock *acb,
 		}
 		ptmpuserbuffer = ver_addr;
 		user_len = pcmdmessagefld->cmdmessage.Length;
+		if (user_len > ARCMSR_API_DATA_BUFLEN) {
+			retvalue = ARCMSR_MESSAGE_FAIL;
+			kfree(ver_addr);
+			goto message_out;
+		}
 		memcpy(ptmpuserbuffer,
 			pcmdmessagefld->messagedatabuffer, user_len);
 		spin_lock_irqsave(&acb->wqbuffer_lock, flags);"
OSV-2016-1,"From a317154a5acbdcc82db79063742481ce83abafe7 Mon Sep 17 00:00:00 2001
From: Christos Zoulas <christos@zoulas.com>
Date: Tue, 20 Dec 2016 22:44:32 +0000
Subject: [PATCH] compute the search match length correctly (found by
 oss-fuzzer)

---
 src/softmagic.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/softmagic.c b/src/softmagic.c
index 6a0375d3a5..f2ba7dfa35 100644
--- a/src/softmagic.c
+++ b/src/softmagic.c
@@ -32,7 +32,7 @@
 #include ""file.h""
 
 #ifndef	lint
-FILE_RCSID(""@(#)$File: softmagic.c,v 1.240 2016/12/20 12:19:25 christos Exp $"")
+FILE_RCSID(""@(#)$File: softmagic.c,v 1.241 2016/12/20 13:29:20 christos Exp $"")
 #endif	/* lint */
 
 #include ""magic.h""
@@ -1843,14 +1843,14 @@ magiccheck(struct magic_set *ms, struct magic *m)
 		v = 0;
 
 		for (idx = 0; m->str_range == 0 || idx < m->str_range; idx++) {
-			if (slen + idx > ms->search.s_len)
+			if (slen + idx >= ms->search.s_len)
 				break;
 
 			v = file_strncmp(m->value.s, ms->search.s + idx, slen,
 			    m->str_flags);
 			if (v == 0) {	/* found match */
 				ms->search.offset += idx;
-				ms->search.rm_len = m->str_range - idx;
+				ms->search.rm_len = ms->search.s_len - idx;
 				break;
 			}
 		}"
CVE-2016-5704,"From 72213573182896bd6a6e5af5ba1881dd87c4a20b Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Wed, 15 Jun 2016 12:40:44 +0200
Subject: [PATCH] Fix XSS on table structure
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 templates/table/structure/display_table_stats.phtml | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/templates/table/structure/display_table_stats.phtml b/templates/table/structure/display_table_stats.phtml
index c483e95ebf7c..04839f6f178c 100644
--- a/templates/table/structure/display_table_stats.phtml
+++ b/templates/table/structure/display_table_stats.phtml
@@ -3,7 +3,7 @@
     <fieldset>
         <legend><?= __('Information'); ?></legend>
         <p> <strong> <?= __('Table comments: ') ?> </strong>
-            <?= isset($showtable['TABLE_COMMENT']) ? $showtable['TABLE_COMMENT'] : '';?>
+            <?= isset($showtable['TABLE_COMMENT']) ? htmlspecialchars($showtable['TABLE_COMMENT']) : '';?>
         </p>
         <a id=""showusage""></a>"
CVE-2016-3135,"From d157bd761585605b7882935ffb86286919f62ea1 Mon Sep 17 00:00:00 2001
From: Florian Westphal <fw@strlen.de>
Date: Thu, 10 Mar 2016 01:56:23 +0100
Subject: [PATCH] netfilter: x_tables: check for size overflow

Ben Hawkes says:
 integer overflow in xt_alloc_table_info, which on 32-bit systems can
 lead to small structure allocation and a copy_from_user based heap
 corruption.

Reported-by: Ben Hawkes <hawkes@google.com>
Signed-off-by: Florian Westphal <fw@strlen.de>
Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
---
 net/netfilter/x_tables.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/net/netfilter/x_tables.c b/net/netfilter/x_tables.c
index d0cd2b9bf84463..582c9cfd6567ce 100644
--- a/net/netfilter/x_tables.c
+++ b/net/netfilter/x_tables.c
@@ -659,6 +659,9 @@ struct xt_table_info *xt_alloc_table_info(unsigned int size)
 	struct xt_table_info *info = NULL;
 	size_t sz = sizeof(*info) + size;
 
+	if (sz < sizeof(*info))
+		return NULL;
+
 	/* Pedantry: prevent them from hitting BUG() in vmalloc.c --RR */
 	if ((SMP_ALIGN(size) >> PAGE_SHIFT) + 2 > totalram_pages)
 		return NULL;"
CVE-2016-7521,"From 30eec879c8b446b0ea9a3bb0da1a441cc8482bc4 Mon Sep 17 00:00:00 2001
From: dirk <dirk@git.imagemagick.org>
Date: Tue, 2 Feb 2016 21:03:24 +0100
Subject: [PATCH] Moved check for
 https://github.com/ImageMagick/ImageMagick/issues/92.

---
 coders/psd.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/coders/psd.c b/coders/psd.c
index 11d26ea8526..9f69d8a7123 100644
--- a/coders/psd.c
+++ b/coders/psd.c
@@ -487,6 +487,7 @@ static ssize_t DecodePSDPixels(const size_t number_compact_pixels,
     length++;
     for (j=0; j < (ssize_t) length; j++)
     {
+      CheckNumberCompactPixels;
       switch (depth)
       {
         case 1:
@@ -525,7 +526,6 @@ static ssize_t DecodePSDPixels(const size_t number_compact_pixels,
           break;
         }
       }
-      CheckNumberCompactPixels;
       compact_pixels++;
     }
   }"
CVE-2016-7101,"From 8f8959033e4e59418d6506b345829af1f7a71127 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Thu, 18 Aug 2016 19:40:03 -0400
Subject: [PATCH] ...

---
 coders/sgi.c | 11 ++++++-----
 1 file changed, 6 insertions(+), 5 deletions(-)

diff --git a/coders/sgi.c b/coders/sgi.c
index 1fe65e604f3..0ccd9c03134 100644
--- a/coders/sgi.c
+++ b/coders/sgi.c
@@ -340,8 +340,10 @@ static Image *ReadSGIImage(const ImageInfo *image_info,ExceptionInfo *exception)
     iris_info.minimum_value=ReadBlobMSBLong(image);
     iris_info.maximum_value=ReadBlobMSBLong(image);
     iris_info.sans=ReadBlobMSBLong(image);
-    (void) ReadBlob(image,sizeof(iris_info.name),(unsigned char *)
+    count=ReadBlob(image,sizeof(iris_info.name),(unsigned char *)
       iris_info.name);
+    if (count != sizeof(iris_info.name))
+      ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
     iris_info.name[sizeof(iris_info.name)-1]='\0';
     if (*iris_info.name != '\0')
       (void) SetImageProperty(image,""label"",iris_info.name,exception);
@@ -349,7 +351,8 @@ static Image *ReadSGIImage(const ImageInfo *image_info,ExceptionInfo *exception)
     if (iris_info.pixel_format != 0)
       ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
     count=ReadBlob(image,sizeof(iris_info.filler),iris_info.filler);
-    (void) count;
+    if (count != sizeof(iris_info.filler))
+      ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
     image->columns=iris_info.columns;
     image->rows=iris_info.rows;
     image->depth=(size_t) MagickMin(iris_info.depth,MAGICKCORE_QUANTUM_DEPTH);
@@ -361,9 +364,7 @@ static Image *ReadSGIImage(const ImageInfo *image_info,ExceptionInfo *exception)
         image->storage_class=PseudoClass;
         image->colors=iris_info.bytes_per_pixel > 1 ? 65535 : 256;
       }
-    if (EOFBlob(image) != MagickFalse)
-      ThrowReaderException(CorruptImageError,""ImproperImageHeader"");
-    if ((image_info->ping != MagickFalse)  && (image_info->number_scenes != 0))
+    if ((image_info->ping != MagickFalse) && (image_info->number_scenes != 0))
       if (image->scene >= (image_info->scene+image_info->number_scenes-1))
         break;
     status=SetImageExtent(image,image->columns,image->rows,exception);"
CVE-2016-1583,"From f0fe970df3838c202ef6c07a4c2b36838ef0a88b Mon Sep 17 00:00:00 2001
From: Jeff Mahoney <jeffm@suse.com>
Date: Tue, 5 Jul 2016 17:32:30 -0400
Subject: [PATCH] ecryptfs: don't allow mmap when the lower fs doesn't support
 it

There are legitimate reasons to disallow mmap on certain files, notably
in sysfs or procfs.  We shouldn't emulate mmap support on file systems
that don't offer support natively.

CVE-2016-1583

Signed-off-by: Jeff Mahoney <jeffm@suse.com>
Cc: stable@vger.kernel.org
[tyhicks: clean up f_op check by using ecryptfs_file_to_lower()]
Signed-off-by: Tyler Hicks <tyhicks@canonical.com>
---
 fs/ecryptfs/file.c | 15 ++++++++++++++-
 1 file changed, 14 insertions(+), 1 deletion(-)

diff --git a/fs/ecryptfs/file.c b/fs/ecryptfs/file.c
index 53d0141b9c20c8..ca4e83750214ad 100644
--- a/fs/ecryptfs/file.c
+++ b/fs/ecryptfs/file.c
@@ -169,6 +169,19 @@ static int read_or_initialize_metadata(struct dentry *dentry)
 	return rc;
 }
 
+static int ecryptfs_mmap(struct file *file, struct vm_area_struct *vma)
+{
+	struct file *lower_file = ecryptfs_file_to_lower(file);
+	/*
+	 * Don't allow mmap on top of file systems that don't support it
+	 * natively.  If FILESYSTEM_MAX_STACK_DEPTH > 2 or ecryptfs
+	 * allows recursive mounting, this will need to be extended.
+	 */
+	if (!lower_file->f_op->mmap)
+		return -ENODEV;
+	return generic_file_mmap(file, vma);
+}
+
 /**
  * ecryptfs_open
  * @inode: inode specifying file to open
@@ -403,7 +416,7 @@ const struct file_operations ecryptfs_main_fops = {
 #ifdef CONFIG_COMPAT
 	.compat_ioctl = ecryptfs_compat_ioctl,
 #endif
-	.mmap = generic_file_mmap,
+	.mmap = ecryptfs_mmap,
 	.open = ecryptfs_open,
 	.flush = ecryptfs_flush,
 	.release = ecryptfs_release,"
CVE-2016-7130,"From 698a691724c0a949295991e5df091ce16f899e02 Mon Sep 17 00:00:00 2001
From: Stanislav Malyshev <stas@php.net>
Date: Sun, 7 Aug 2016 16:26:52 -0700
Subject: [PATCH] Fix bug #72750: wddx_deserialize null dereference

---
 ext/wddx/tests/bug72750.phpt | 34 ++++++++++++++++++++++++++++++++++
 ext/wddx/wddx.c              |  8 ++++++--
 2 files changed, 40 insertions(+), 2 deletions(-)
 create mode 100644 ext/wddx/tests/bug72750.phpt

diff --git a/ext/wddx/tests/bug72750.phpt b/ext/wddx/tests/bug72750.phpt
new file mode 100644
index 0000000000000..3a6794df2803f
--- /dev/null
+++ b/ext/wddx/tests/bug72750.phpt
@@ -0,0 +1,34 @@
+--TEST--
+Bug #72750: wddx_deserialize null dereference
+--SKIPIF--
+<?php
+if (!extension_loaded('wddx')) {
+    die('skip. wddx not available');
+}
+?>
+--FILE--
+<?php
+
+$xml = <<< XML
+<?xml version='1.0'?>
+<!DOCTYPE wddxPacket SYSTEM 'wddx_0100.dtd'>
+<wddxPacket version='1.0'>
+<header/>
+        <data>
+                <struct>
+                     <var name='aBinary'>
+                         <binary length='11'>\\tYmluYXJRhdGE=</binary>
+                     </var>
+                 </struct>
+        </data>
+</wddxPacket>
+XML;
+
+$array = wddx_deserialize($xml);
+var_dump($array);
+?>
+--EXPECT--
+array(1) {
+  [""aBinary""]=>
+  string(0) """"
+}
diff --git a/ext/wddx/wddx.c b/ext/wddx/wddx.c
index faadbfe1dfe3d..1b2d103af18e3 100644
--- a/ext/wddx/wddx.c
+++ b/ext/wddx/wddx.c
@@ -959,8 +959,12 @@ static void php_wddx_pop_element(void *user_data, const XML_Char *name)
 
 			new_str = php_base64_decode(Z_STRVAL_P(ent1->data), Z_STRLEN_P(ent1->data), &new_len);
 			STR_FREE(Z_STRVAL_P(ent1->data));
-			Z_STRVAL_P(ent1->data) = new_str;
-			Z_STRLEN_P(ent1->data) = new_len;
+			if (new_str) {
+				Z_STRVAL_P(ent1->data) = new_str;
+				Z_STRLEN_P(ent1->data) = new_len;
+			} else {
+				ZVAL_EMPTY_STRING(ent1->data);
+			}
 		}
 
 		/* Call __wakeup() method on the object. */"
CVE-2016-9388,"From 411a4068f8c464e883358bf403a3e25158863823 Mon Sep 17 00:00:00 2001
From: Michael Adams <mdadams@ece.uvic.ca>
Date: Mon, 24 Oct 2016 06:56:08 -0700
Subject: [PATCH] Fixed a few bugs in the RAS encoder and decoder where errors
 were tested with assertions instead of being gracefully handled.

---
 src/libjasper/ras/ras_dec.c | 30 ++++++++++++++++++++++++------
 src/libjasper/ras/ras_enc.c | 29 +++++++++++++++++++++++------
 2 files changed, 47 insertions(+), 12 deletions(-)

diff --git a/src/libjasper/ras/ras_dec.c b/src/libjasper/ras/ras_dec.c
index 7e2e22ef..ec85aac4 100644
--- a/src/libjasper/ras/ras_dec.c
+++ b/src/libjasper/ras/ras_dec.c
@@ -260,9 +260,16 @@ static int ras_getdatastd(jas_stream_t *in, ras_hdr_t *hdr, ras_cmap_t *cmap,
 	/* Avoid compiler warnings about unused parameters. */
 	cmap = 0;
 
+	assert(jas_image_numcmpts(image) <= 3);
+
+	for (i = 0; i < 3; ++i) {
+		data[i] = 0;
+	}
+
 	for (i = 0; i < jas_image_numcmpts(image); ++i) {
-		data[i] = jas_matrix_create(1, jas_image_width(image));
-		assert(data[i]);
+		if (!(data[i] = jas_matrix_create(1, jas_image_width(image)))) {
+			goto error;
+		}
 	}
 
 	pad = RAS_ROWSIZE(hdr) - (hdr->width * hdr->depth + 7) / 8;
@@ -273,7 +280,7 @@ static int ras_getdatastd(jas_stream_t *in, ras_hdr_t *hdr, ras_cmap_t *cmap,
 		for (x = 0; x < hdr->width; x++) {
 			while (nz < hdr->depth) {
 				if ((c = jas_stream_getc(in)) == EOF) {
-					return -1;
+					goto error;
 				}
 				z = (z << 8) | c;
 				nz += 8;
@@ -293,22 +300,31 @@ static int ras_getdatastd(jas_stream_t *in, ras_hdr_t *hdr, ras_cmap_t *cmap,
 		}
 		if (pad) {
 			if ((c = jas_stream_getc(in)) == EOF) {
-				return -1;
+				goto error;
 			}
 		}
 		for (i = 0; i < jas_image_numcmpts(image); ++i) {
 			if (jas_image_writecmpt(image, i, 0, y, hdr->width, 1,
 			  data[i])) {
-				return -1;
+				goto error;
 			}
 		}
 	}
 
 	for (i = 0; i < jas_image_numcmpts(image); ++i) {
 		jas_matrix_destroy(data[i]);
+		data[i] = 0;
 	}
 
 	return 0;
+
+error:
+	for (i = 0; i < 3; ++i) {
+		if (data[i]) {
+			jas_matrix_destroy(data[i]);
+		}
+	}
+	return -1;
 }
 
 static int ras_getcmap(jas_stream_t *in, ras_hdr_t *hdr, ras_cmap_t *cmap)
@@ -327,7 +343,9 @@ static int ras_getcmap(jas_stream_t *in, ras_hdr_t *hdr, ras_cmap_t *cmap)
 		{
 		jas_eprintf(""warning: palettized images not fully supported\n"");
 		numcolors = 1 << hdr->depth;
-		assert(numcolors <= RAS_CMAP_MAXSIZ);
+		if (numcolors > RAS_CMAP_MAXSIZ) {
+			return -1;
+		}
 		actualnumcolors = hdr->maplength / 3;
 		for (i = 0; i < numcolors; i++) {
 			cmap->data[i] = 0;
diff --git a/src/libjasper/ras/ras_enc.c b/src/libjasper/ras/ras_enc.c
index 075bc0b6..c7366a90 100644
--- a/src/libjasper/ras/ras_enc.c
+++ b/src/libjasper/ras/ras_enc.c
@@ -230,9 +230,17 @@ static int ras_putdatastd(jas_stream_t *out, ras_hdr_t *hdr, jas_image_t *image,
 	jas_matrix_t *data[3];
 	int i;
 
+	assert(numcmpts <= 3);
+
+	for (i = 0; i < 3; ++i) {
+		data[i] = 0;
+	}
+
 	for (i = 0; i < numcmpts; ++i) {
-		data[i] = jas_matrix_create(jas_image_height(image), jas_image_width(image));
-		assert(data[i]);
+		if (!(data[i] = jas_matrix_create(jas_image_height(image),
+		  jas_image_width(image)))) {
+			goto error;
+		}
 	}
 
 	rowsize = RAS_ROWSIZE(hdr);
@@ -244,7 +252,7 @@ static int ras_putdatastd(jas_stream_t *out, ras_hdr_t *hdr, jas_image_t *image,
 		for (i = 0; i < numcmpts; ++i) {
 			if (jas_image_readcmpt(image, cmpts[i], 0, y,
 					jas_image_width(image), 1, data[i])) {
-				return -1;
+				goto error;
 			}
 		}
 		z = 0;
@@ -263,7 +271,7 @@ static int ras_putdatastd(jas_stream_t *out, ras_hdr_t *hdr, jas_image_t *image,
 			while (nz >= 8) {
 				c = (z >> (nz - 8)) & 0xff;
 				if (jas_stream_putc(out, c) == EOF) {
-					return -1;
+					goto error;
 				}
 				nz -= 8;
 				z &= RAS_ONES(nz);
@@ -272,21 +280,30 @@ static int ras_putdatastd(jas_stream_t *out, ras_hdr_t *hdr, jas_image_t *image,
 		if (nz > 0) {
 			c = (z >> (8 - nz)) & RAS_ONES(nz);
 			if (jas_stream_putc(out, c) == EOF) {
-				return -1;
+				goto error;
 			}
 		}
 		if (pad % 2) {
 			if (jas_stream_putc(out, 0) == EOF) {
-				return -1;
+				goto error;
 			}
 		}
 	}
 
 	for (i = 0; i < numcmpts; ++i) {
 		jas_matrix_destroy(data[i]);
+		data[i] = 0;
 	}
 
 	return 0;
+
+error:
+	for (i = 0; i < numcmpts; ++i) {
+		if (data[i]) {
+			jas_matrix_destroy(data[i]);
+		}
+	}
+	return -1;
 }
 
 static int ras_puthdr(jas_stream_t *out, ras_hdr_t *hdr)"
CVE-2016-9455,"From 65a9c8119b4bc7493fd957e1a8d6f6f731298b45 Mon Sep 17 00:00:00 2001
From: Matteo Beccati <matteo@beccati.com>
Date: Fri, 20 Nov 2015 08:06:52 +0100
Subject: [PATCH] Fix h1 report 97123

Cross-Site Request Forgery (CSRF)
---------------------------------

The HackerOne user @decidedlygray has reported a number of scripts in Revive
Adserver's user interface that were vulnerable to CSRF attacks:

- www/admin/banner-acl.php
- www/admin/banner-activate.php
- www/admin/banner-advanced.php
- www/admin/banner-modify.php
- www/admin/banner-swf.php
- www/admin/banner-zone.php
- www/admin/tracker-modify.php

A CVE-ID has been requested, but not assigned yet.

CWE: CWE-352
CVSSv2: 5 (AV:N/AC:L/Au:N/C:N/I:N/A:P)
---
 www/admin/banner-acl.php      |  2 ++
 www/admin/banner-activate.php |  2 ++
 www/admin/banner-advanced.php | 35 +++++++++++++++++++----------------
 www/admin/banner-modify.php   |  1 +
 www/admin/banner-swf.php      |  2 ++
 www/admin/banner-zone.php     |  2 ++
 www/admin/tracker-modify.php  |  2 ++
 7 files changed, 30 insertions(+), 16 deletions(-)

diff --git a/www/admin/banner-acl.php b/www/admin/banner-acl.php
index 24b4888e63..0e08588642 100644
--- a/www/admin/banner-acl.php
+++ b/www/admin/banner-acl.php
@@ -48,6 +48,8 @@
 if (!empty($action)) {
     $acl = MAX_AclAdjust($acl, $action);
 } elseif (!empty($submit)) {
+    OA_Permission::checkSessionToken();
+
     $acl = (isset($acl)) ? $acl : array();
 
     // Only save when inputs are valid
diff --git a/www/admin/banner-activate.php b/www/admin/banner-activate.php
index 25b46965b5..917079799e 100644
--- a/www/admin/banner-activate.php
+++ b/www/admin/banner-activate.php
@@ -36,6 +36,8 @@
 OA_Permission::enforceAccessToObject('campaigns', $campaignid);
 OA_Permission::enforceAccessToObject('banners',   $bannerid, true);
 
+OA_Permission::checkSessionToken();
+
 if (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {
     if ($value == OA_ENTITY_STATUS_RUNNING) {
         OA_Permission::enforceAllowed(OA_PERM_BANNER_ACTIVATE);
diff --git a/www/admin/banner-advanced.php b/www/admin/banner-advanced.php
index 15c1e32e24..6845be78e9 100644
--- a/www/admin/banner-advanced.php
+++ b/www/admin/banner-advanced.php
@@ -39,23 +39,26 @@
 /*-------------------------------------------------------*/
 
 if (isset($submitbutton)) {
-    if (isset($bannerid) && $bannerid != '') {
-        // Update banner
-        $doBanners = OA_Dal::factoryDO('banners');
-        $doBanners->get($bannerid);
-        $doBanners->prepend = $prepend;
-        $doBanners->append  = $append;
-        $doBanners->update();
-
-        // Queue confirmation message
-        $translation = new OX_Translation();
-        $translated_message = $translation->translate($GLOBALS['strBannerAdvancedHasBeenUpdated'], array(
-            MAX::constructURL(MAX_URL_ADMIN, 'banner-edit.php?clientid=' .  $clientid . '&campaignid=' . $campaignid . '&bannerid=' . $bannerid),
-            htmlspecialchars($doBanners->description)
-        ));
-        OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);
-    }
+    OA_Permission::checkSessionToken();
+
+    // Update banner
+    $doBanners = OA_Dal::factoryDO('banners');
+    $doBanners->get($bannerid);
+    $doBanners->prepend = $prepend;
+    $doBanners->append  = $append;
+    $doBanners->update();
+
+    // Queue confirmation message
+    $translation = new OX_Translation();
+    $translated_message = $translation->translate($GLOBALS['strBannerAdvancedHasBeenUpdated'], array(
+        MAX::constructURL(MAX_URL_ADMIN, 'banner-edit.php?clientid=' .  $clientid . '&campaignid=' . $campaignid . '&bannerid=' . $bannerid),
+        htmlspecialchars($doBanners->description)
+    ));
+
+    OA_Admin_UI::queueMessage($translated_message, 'local', 'confirm', 0);
+
     header (""Location: banner-advanced.php?clientid="".$clientid.""&campaignid="".$campaignid.""&bannerid="".$bannerid);
+    exit;
 }
 
 /*-------------------------------------------------------*/
diff --git a/www/admin/banner-modify.php b/www/admin/banner-modify.php
index f71b237a24..421d79282c 100644
--- a/www/admin/banner-modify.php
+++ b/www/admin/banner-modify.php
@@ -31,6 +31,7 @@
 // Security check
 OA_Permission::enforceAccount(OA_ACCOUNT_MANAGER);
 
+OA_Permission::checkSessionToken();
 
 /*-------------------------------------------------------*/
 /* Main code                                             */
diff --git a/www/admin/banner-swf.php b/www/admin/banner-swf.php
index 0f6a101f66..7e671a5d21 100644
--- a/www/admin/banner-swf.php
+++ b/www/admin/banner-swf.php
@@ -35,6 +35,8 @@
 OA_Permission::enforceAccessToObject('campaigns', $campaignid);
 OA_Permission::enforceAccessToObject('banners',   $bannerid);
 
+    OA_Permission::checkSessionToken();
+
 if (OA_Permission::isAccount(OA_ACCOUNT_ADVERTISER)) {
     OA_Permission::enforceAllowed(OA_PERM_BANNER_EDIT);
 }
diff --git a/www/admin/banner-zone.php b/www/admin/banner-zone.php
index 8ab74c2f90..6fc97ec4eb 100644
--- a/www/admin/banner-zone.php
+++ b/www/admin/banner-zone.php
@@ -31,6 +31,8 @@
 OA_Permission::enforceAccessToObject('campaigns', $campaignid);
 OA_Permission::enforceAccessToObject('banners',   $bannerid);
 
+OA_Permission::checkSessionToken();
+
 /*-------------------------------------------------------*/
 /* Store preferences									 */
 /*-------------------------------------------------------*/
diff --git a/www/admin/tracker-modify.php b/www/admin/tracker-modify.php
index faa4834e86..41e10c9fd8 100644
--- a/www/admin/tracker-modify.php
+++ b/www/admin/tracker-modify.php
@@ -38,6 +38,8 @@
 
 if (!empty($trackerid))
 {
+    OA_Permission::checkSessionToken();
+    
     if (!empty($moveto))
     {
         // Delete any campaign-tracker links"
CVE-2016-10196,"From 329acc18a0768c21ba22522f01a5c7f46cacc4d5 Mon Sep 17 00:00:00 2001
From: Azat Khuzhin <a3at.mail@gmail.com>
Date: Sun, 31 Jan 2016 00:57:16 +0300
Subject: [PATCH] evutil_parse_sockaddr_port(): fix buffer overflow

@asn-the-goblin-slayer:
  ""Length between '[' and ']' is cast to signed 32 bit integer on line 1815. Is
   the length is more than 2<<31 (INT_MAX), len will hold a negative value.
   Consequently, it will pass the check at line 1816. Segfault happens at line
   1819.

   Generate a resolv.conf with generate-resolv.conf, then compile and run
   poc.c. See entry-functions.txt for functions in tor that might be
   vulnerable.

   Please credit 'Guido Vranken' for this discovery through the Tor bug bounty
   program.""

Reproducer for gdb (https://gist.github.com/azat/be2b0d5e9417ba0dfe2c):
  start
  p (1ULL<<31)+1ULL
  # $1 = 2147483649
  p malloc(sizeof(struct sockaddr))
  # $2 = (void *) 0x646010
  p malloc(sizeof(int))
  # $3 = (void *) 0x646030
  p malloc($1)
  # $4 = (void *) 0x7fff76a2a010
  p memset($4, 1, $1)
  # $5 = 1990369296
  p (char *)$4
  # $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...
  set $6[0]='['
  set $6[$1]=']'
  p evutil_parse_sockaddr_port($4, $2, $3)
  # $7 = -1

Before:
  $ gdb bin/http-connect < gdb
  (gdb) $1 = 2147483649
  (gdb) (gdb) $2 = (void *) 0x646010
  (gdb) (gdb) $3 = (void *) 0x646030
  (gdb) (gdb) $4 = (void *) 0x7fff76a2a010
  (gdb) (gdb) $5 = 1990369296
  (gdb) (gdb) $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...
  (gdb) (gdb) (gdb) (gdb)
  Program received signal SIGSEGV, Segmentation fault.
  __memcpy_sse2_unaligned () at memcpy-sse2-unaligned.S:36

After:
  $ gdb bin/http-connect < gdb
  (gdb) $1 = 2147483649
  (gdb) (gdb) $2 = (void *) 0x646010
  (gdb) (gdb) $3 = (void *) 0x646030
  (gdb) (gdb) $4 = (void *) 0x7fff76a2a010
  (gdb) (gdb) $5 = 1990369296
  (gdb) (gdb) $6 = 0x7fff76a2a010 '\001' <repeats 200 times>...
  (gdb) (gdb) (gdb) (gdb) $7 = -1
  (gdb) (gdb) quit

Fixes: #318
---
 evutil.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/evutil.c b/evutil.c
index 79d825d94a..495bfcc029 100644
--- a/evutil.c
+++ b/evutil.c
@@ -2058,12 +2058,12 @@ evutil_parse_sockaddr_port(const char *ip_as_string, struct sockaddr *out, int *
 
 	cp = strchr(ip_as_string, ':');
 	if (*ip_as_string == '[') {
-		int len;
+		size_t len;
 		if (!(cp = strchr(ip_as_string, ']'))) {
 			return -1;
 		}
-		len = (int) ( cp-(ip_as_string + 1) );
-		if (len > (int)sizeof(buf)-1) {
+		len = ( cp-(ip_as_string + 1) );
+		if (len > sizeof(buf)-1) {
 			return -1;
 		}
 		memcpy(buf, ip_as_string+1, len);"
CVE-2016-7522,"From 4b1b9c0522628887195bad3a6723f7000b0c9a58 Mon Sep 17 00:00:00 2001
From: dirk <dirk@git.imagemagick.org>
Date: Tue, 2 Feb 2016 21:15:13 +0100
Subject: [PATCH] Added extra check to fix
 https://github.com/ImageMagick/ImageMagick/issues/93

---
 coders/psd.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/coders/psd.c b/coders/psd.c
index 9f69d8a7123..47c6bcf735c 100644
--- a/coders/psd.c
+++ b/coders/psd.c
@@ -1936,7 +1936,7 @@ static Image *ReadPSDImage(const ImageInfo *image_info,ExceptionInfo *exception)
       if (blocks == (unsigned char *) NULL)
         ThrowReaderException(ResourceLimitError,""MemoryAllocationFailed"");
       count=ReadBlob(image,(size_t) length,blocks);
-      if ((count != (ssize_t) length) ||
+      if ((count != (ssize_t) length) || (length < 4) ||
           (LocaleNCompare((char *) blocks,""8BIM"",4) != 0))
         {
           blocks=(unsigned char *) RelinquishMagickMemory(blocks);"
CVE-2016-5705,"From 57ae483bad33059a885366d5445b7e1f6f29860a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Wed, 22 Jun 2016 11:14:57 +0200
Subject: [PATCH] Escape database name when showing dialog
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 js/functions.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/js/functions.js b/js/functions.js
index fc5c8abe3570..3e36249f0809 100644
--- a/js/functions.js
+++ b/js/functions.js
@@ -3534,7 +3534,7 @@ AJAX.registerOnload('functions.js', function () {
         var result_pointer = i;
         var search_in = '<input type=""text"" class=""filter_rows"" placeholder=""' + PMA_messages.searchList + '"">';
         if (fields === '') {
-            fields = PMA_sprintf(PMA_messages.strEmptyCentralList, ""'"" + db + ""'"");
+            fields = PMA_sprintf(PMA_messages.strEmptyCentralList, ""'"" + escapeHtml(db) + ""'"");
             search_in = '';
         }
         var seeMore = '';"
CVE-2016-8666,"From fac8e0f579695a3ecbc4d3cac369139d7f819971 Mon Sep 17 00:00:00 2001
From: Jesse Gross <jesse@kernel.org>
Date: Sat, 19 Mar 2016 09:32:01 -0700
Subject: [PATCH] tunnels: Don't apply GRO to multiple layers of encapsulation.

When drivers express support for TSO of encapsulated packets, they
only mean that they can do it for one layer of encapsulation.
Supporting additional levels would mean updating, at a minimum,
more IP length fields and they are unaware of this.

No encapsulation device expresses support for handling offloaded
encapsulated packets, so we won't generate these types of frames
in the transmit path. However, GRO doesn't have a check for
multiple levels of encapsulation and will attempt to build them.

UDP tunnel GRO actually does prevent this situation but it only
handles multiple UDP tunnels stacked on top of each other. This
generalizes that solution to prevent any kind of tunnel stacking
that would cause problems.

Fixes: bf5a755f (""net-gre-gro: Add GRE support to the GRO stack"")
Signed-off-by: Jesse Gross <jesse@kernel.org>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 include/linux/netdevice.h |  4 ++--
 net/core/dev.c            |  2 +-
 net/ipv4/af_inet.c        | 15 ++++++++++++++-
 net/ipv4/gre_offload.c    |  5 +++++
 net/ipv4/udp_offload.c    |  6 +++---
 net/ipv6/ip6_offload.c    | 15 ++++++++++++++-
 6 files changed, 39 insertions(+), 8 deletions(-)

diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index be693b34662f9c..f9eebd518545f2 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2096,8 +2096,8 @@ struct napi_gro_cb {
 	/* This is non-zero if the packet may be of the same flow. */
 	u8	same_flow:1;
 
-	/* Used in udp_gro_receive */
-	u8	udp_mark:1;
+	/* Used in tunnel GRO receive */
+	u8	encap_mark:1;
 
 	/* GRO checksum is valid */
 	u8	csum_valid:1;
diff --git a/net/core/dev.c b/net/core/dev.c
index edb7179bc0517a..43c74cad25bc2f 100644
--- a/net/core/dev.c
+++ b/net/core/dev.c
@@ -4438,7 +4438,7 @@ static enum gro_result dev_gro_receive(struct napi_struct *napi, struct sk_buff
 		NAPI_GRO_CB(skb)->same_flow = 0;
 		NAPI_GRO_CB(skb)->flush = 0;
 		NAPI_GRO_CB(skb)->free = 0;
-		NAPI_GRO_CB(skb)->udp_mark = 0;
+		NAPI_GRO_CB(skb)->encap_mark = 0;
 		NAPI_GRO_CB(skb)->gro_remcsum_start = 0;
 
 		/* Setup for GRO checksum validation */
diff --git a/net/ipv4/af_inet.c b/net/ipv4/af_inet.c
index 96592332553521..0fefba64ee7942 100644
--- a/net/ipv4/af_inet.c
+++ b/net/ipv4/af_inet.c
@@ -1380,6 +1380,19 @@ static struct sk_buff **inet_gro_receive(struct sk_buff **head,
 	return pp;
 }
 
+static struct sk_buff **ipip_gro_receive(struct sk_buff **head,
+					 struct sk_buff *skb)
+{
+	if (NAPI_GRO_CB(skb)->encap_mark) {
+		NAPI_GRO_CB(skb)->flush = 1;
+		return NULL;
+	}
+
+	NAPI_GRO_CB(skb)->encap_mark = 1;
+
+	return inet_gro_receive(head, skb);
+}
+
 #define SECONDS_PER_DAY	86400
 
 /* inet_current_timestamp - Return IP network timestamp
@@ -1682,7 +1695,7 @@ static struct packet_offload ip_packet_offload __read_mostly = {
 static const struct net_offload ipip_offload = {
 	.callbacks = {
 		.gso_segment	= inet_gso_segment,
-		.gro_receive	= inet_gro_receive,
+		.gro_receive	= ipip_gro_receive,
 		.gro_complete	= ipip_gro_complete,
 	},
 };
diff --git a/net/ipv4/gre_offload.c b/net/ipv4/gre_offload.c
index 540866dbd27d66..dd031617160ae8 100644
--- a/net/ipv4/gre_offload.c
+++ b/net/ipv4/gre_offload.c
@@ -126,6 +126,11 @@ static struct sk_buff **gre_gro_receive(struct sk_buff **head,
 	struct packet_offload *ptype;
 	__be16 type;
 
+	if (NAPI_GRO_CB(skb)->encap_mark)
+		goto out;
+
+	NAPI_GRO_CB(skb)->encap_mark = 1;
+
 	off = skb_gro_offset(skb);
 	hlen = off + sizeof(*greh);
 	greh = skb_gro_header_fast(skb, off);
diff --git a/net/ipv4/udp_offload.c b/net/ipv4/udp_offload.c
index 8a3405a8026092..8007f73b8981be 100644
--- a/net/ipv4/udp_offload.c
+++ b/net/ipv4/udp_offload.c
@@ -311,14 +311,14 @@ struct sk_buff **udp_gro_receive(struct sk_buff **head, struct sk_buff *skb,
 	unsigned int off = skb_gro_offset(skb);
 	int flush = 1;
 
-	if (NAPI_GRO_CB(skb)->udp_mark ||
+	if (NAPI_GRO_CB(skb)->encap_mark ||
 	    (skb->ip_summed != CHECKSUM_PARTIAL &&
 	     NAPI_GRO_CB(skb)->csum_cnt == 0 &&
 	     !NAPI_GRO_CB(skb)->csum_valid))
 		goto out;
 
-	/* mark that this skb passed once through the udp gro layer */
-	NAPI_GRO_CB(skb)->udp_mark = 1;
+	/* mark that this skb passed once through the tunnel gro layer */
+	NAPI_GRO_CB(skb)->encap_mark = 1;
 
 	rcu_read_lock();
 	uo_priv = rcu_dereference(udp_offload_base);
diff --git a/net/ipv6/ip6_offload.c b/net/ipv6/ip6_offload.c
index eeca943f12dc08..82e9f30760283a 100644
--- a/net/ipv6/ip6_offload.c
+++ b/net/ipv6/ip6_offload.c
@@ -258,6 +258,19 @@ static struct sk_buff **ipv6_gro_receive(struct sk_buff **head,
 	return pp;
 }
 
+static struct sk_buff **sit_gro_receive(struct sk_buff **head,
+					struct sk_buff *skb)
+{
+	if (NAPI_GRO_CB(skb)->encap_mark) {
+		NAPI_GRO_CB(skb)->flush = 1;
+		return NULL;
+	}
+
+	NAPI_GRO_CB(skb)->encap_mark = 1;
+
+	return ipv6_gro_receive(head, skb);
+}
+
 static int ipv6_gro_complete(struct sk_buff *skb, int nhoff)
 {
 	const struct net_offload *ops;
@@ -302,7 +315,7 @@ static struct packet_offload ipv6_packet_offload __read_mostly = {
 static const struct net_offload sit_offload = {
 	.callbacks = {
 		.gso_segment	= ipv6_gso_segment,
-		.gro_receive    = ipv6_gro_receive,
+		.gro_receive    = sit_gro_receive,
 		.gro_complete   = sit_gro_complete,
 	},
 };"
CVE-2016-9472,"From 14ff73f07783fbbb9c40b77add75e68bc5f10ec6 Mon Sep 17 00:00:00 2001
From: Matteo Beccati <matteo@beccati.com>
Date: Tue, 27 Sep 2016 11:22:18 +0200
Subject: [PATCH] Fix h1 report 170156

Reflected XSS
-------------

The HackerOne user pavanw3b has reported that the Revive Adserver web
installer scripts were vulnerable to a reflected XSS attack via the dbHost,
dbUser and possibly other parameters. It has to be noted that the window
for such attack vectors to be possible is extremely narrow and it is very
unlikely that such an attack could be actually effective.

CWE: CWE-79
CVSSv2: 4 (AV:N/AC:H/Au:N/C:P/I:P/A:N)

CVSSv3 Vector: CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:N/E:U/RL:O/RC:C
CVSSv3 Base Score: 4.2
CVSSv3 Temporal Score: 3.7
---
 lib/templates/wizard/install/messages.html | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/lib/templates/wizard/install/messages.html b/lib/templates/wizard/install/messages.html
index bf099539dc..9b0dbf8395 100644
--- a/lib/templates/wizard/install/messages.html
+++ b/lib/templates/wizard/install/messages.html
@@ -6,7 +6,7 @@
           <div class=""body"">
 			<span id='errorMessages'>
             {foreach from=$aMessages.error item=error name=messagesLoop}
-              {$error} {if !$smarty.foreach.messagesLoop.last}<br/>{/if}
+              {$error|escape} {if !$smarty.foreach.messagesLoop.last}<br/>{/if}
             {/foreach}
             </span>
           </div>"
CVE-2016-7163,"From c16bc057ba3f125051c9966cf1f5b68a05681de4 Mon Sep 17 00:00:00 2001
From: trylab <trylab@users.noreply.github.com>
Date: Tue, 6 Sep 2016 13:55:49 +0800
Subject: [PATCH] Fix an integer overflow issue (#809)

Prevent an integer overflow issue in function opj_pi_create_decode of
pi.c.
---
 src/lib/openjp2/pi.c | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/lib/openjp2/pi.c b/src/lib/openjp2/pi.c
index cffad6684..36e2ff0cf 100644
--- a/src/lib/openjp2/pi.c
+++ b/src/lib/openjp2/pi.c
@@ -1237,7 +1237,13 @@ opj_pi_iterator_t *opj_pi_create_decode(opj_image_t *p_image,
 	l_current_pi = l_pi;
 
 	/* memory allocation for include */
-	l_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));
+	/* prevent an integer overflow issue */
+	l_current_pi->include = 00;
+	if (l_step_l <= (SIZE_MAX / (l_tcp->numlayers + 1U)))
+	{
+		l_current_pi->include = (OPJ_INT16*) opj_calloc((l_tcp->numlayers +1) * l_step_l, sizeof(OPJ_INT16));
+	}
+
 	if
 		(!l_current_pi->include)
 	{"
CVE-2016-7097,"From 073931017b49d9458aa351605b43a7e34598caef Mon Sep 17 00:00:00 2001
From: Jan Kara <jack@suse.cz>
Date: Mon, 19 Sep 2016 17:39:09 +0200
Subject: [PATCH] posix_acl: Clear SGID bit when setting file permissions

When file permissions are modified via chmod(2) and the user is not in
the owning group or capable of CAP_FSETID, the setgid bit is cleared in
inode_change_ok().  Setting a POSIX ACL via setxattr(2) sets the file
permissions as well as the new ACL, but doesn't clear the setgid bit in
a similar way; this allows to bypass the check in chmod(2).  Fix that.

References: CVE-2016-7097
Reviewed-by: Christoph Hellwig <hch@lst.de>
Reviewed-by: Jeff Layton <jlayton@redhat.com>
Signed-off-by: Jan Kara <jack@suse.cz>
Signed-off-by: Andreas Gruenbacher <agruenba@redhat.com>
---
 fs/9p/acl.c               | 40 +++++++++++++++++----------------------
 fs/btrfs/acl.c            |  6 ++----
 fs/ceph/acl.c             |  6 ++----
 fs/ext2/acl.c             | 12 ++++--------
 fs/ext4/acl.c             | 12 ++++--------
 fs/f2fs/acl.c             |  6 ++----
 fs/gfs2/acl.c             | 12 +++---------
 fs/hfsplus/posix_acl.c    |  4 ++--
 fs/jffs2/acl.c            |  9 ++++-----
 fs/jfs/acl.c              |  6 ++----
 fs/ocfs2/acl.c            | 10 ++++------
 fs/orangefs/acl.c         | 15 +++++----------
 fs/posix_acl.c            | 31 ++++++++++++++++++++++++++++++
 fs/reiserfs/xattr_acl.c   |  8 ++------
 fs/xfs/xfs_acl.c          | 13 ++++---------
 include/linux/posix_acl.h |  1 +
 16 files changed, 89 insertions(+), 102 deletions(-)

diff --git a/fs/9p/acl.c b/fs/9p/acl.c
index 5b6a1743ea17bd..b3c2cc79c20d25 100644
--- a/fs/9p/acl.c
+++ b/fs/9p/acl.c
@@ -276,32 +276,26 @@ static int v9fs_xattr_set_acl(const struct xattr_handler *handler,
 	switch (handler->flags) {
 	case ACL_TYPE_ACCESS:
 		if (acl) {
-			umode_t mode = inode->i_mode;
-			retval = posix_acl_equiv_mode(acl, &mode);
-			if (retval < 0)
+			struct iattr iattr;
+
+			retval = posix_acl_update_mode(inode, &iattr.ia_mode, &acl);
+			if (retval)
 				goto err_out;
-			else {
-				struct iattr iattr;
-				if (retval == 0) {
-					/*
-					 * ACL can be represented
-					 * by the mode bits. So don't
-					 * update ACL.
-					 */
-					acl = NULL;
-					value = NULL;
-					size = 0;
-				}
-				/* Updte the mode bits */
-				iattr.ia_mode = ((mode & S_IALLUGO) |
-						 (inode->i_mode & ~S_IALLUGO));
-				iattr.ia_valid = ATTR_MODE;
-				/* FIXME should we update ctime ?
-				 * What is the following setxattr update the
-				 * mode ?
+			if (!acl) {
+				/*
+				 * ACL can be represented
+				 * by the mode bits. So don't
+				 * update ACL.
 				 */
-				v9fs_vfs_setattr_dotl(dentry, &iattr);
+				value = NULL;
+				size = 0;
 			}
+			iattr.ia_valid = ATTR_MODE;
+			/* FIXME should we update ctime ?
+			 * What is the following setxattr update the
+			 * mode ?
+			 */
+			v9fs_vfs_setattr_dotl(dentry, &iattr);
 		}
 		break;
 	case ACL_TYPE_DEFAULT:
diff --git a/fs/btrfs/acl.c b/fs/btrfs/acl.c
index 53bb7af4e5f06c..247b8dfaf6e5e5 100644
--- a/fs/btrfs/acl.c
+++ b/fs/btrfs/acl.c
@@ -79,11 +79,9 @@ static int __btrfs_set_acl(struct btrfs_trans_handle *trans,
 	case ACL_TYPE_ACCESS:
 		name = XATTR_NAME_POSIX_ACL_ACCESS;
 		if (acl) {
-			ret = posix_acl_equiv_mode(acl, &inode->i_mode);
-			if (ret < 0)
+			ret = posix_acl_update_mode(inode, &inode->i_mode, &acl);
+			if (ret)
 				return ret;
-			if (ret == 0)
-				acl = NULL;
 		}
 		ret = 0;
 		break;
diff --git a/fs/ceph/acl.c b/fs/ceph/acl.c
index 4f67227f69a5aa..d0b6b342dff982 100644
--- a/fs/ceph/acl.c
+++ b/fs/ceph/acl.c
@@ -95,11 +95,9 @@ int ceph_set_acl(struct inode *inode, struct posix_acl *acl, int type)
 	case ACL_TYPE_ACCESS:
 		name = XATTR_NAME_POSIX_ACL_ACCESS;
 		if (acl) {
-			ret = posix_acl_equiv_mode(acl, &new_mode);
-			if (ret < 0)
+			ret = posix_acl_update_mode(inode, &new_mode, &acl);
+			if (ret)
 				goto out;
-			if (ret == 0)
-				acl = NULL;
 		}
 		break;
 	case ACL_TYPE_DEFAULT:
diff --git a/fs/ext2/acl.c b/fs/ext2/acl.c
index 42f1d1814083c5..e725aa0890e00e 100644
--- a/fs/ext2/acl.c
+++ b/fs/ext2/acl.c
@@ -190,15 +190,11 @@ ext2_set_acl(struct inode *inode, struct posix_acl *acl, int type)
 		case ACL_TYPE_ACCESS:
 			name_index = EXT2_XATTR_INDEX_POSIX_ACL_ACCESS;
 			if (acl) {
-				error = posix_acl_equiv_mode(acl, &inode->i_mode);
-				if (error < 0)
+				error = posix_acl_update_mode(inode, &inode->i_mode, &acl);
+				if (error)
 					return error;
-				else {
-					inode->i_ctime = CURRENT_TIME_SEC;
-					mark_inode_dirty(inode);
-					if (error == 0)
-						acl = NULL;
-				}
+				inode->i_ctime = CURRENT_TIME_SEC;
+				mark_inode_dirty(inode);
 			}
 			break;
 
diff --git a/fs/ext4/acl.c b/fs/ext4/acl.c
index c6601a476c021f..dfa519979038b9 100644
--- a/fs/ext4/acl.c
+++ b/fs/ext4/acl.c
@@ -193,15 +193,11 @@ __ext4_set_acl(handle_t *handle, struct inode *inode, int type,
 	case ACL_TYPE_ACCESS:
 		name_index = EXT4_XATTR_INDEX_POSIX_ACL_ACCESS;
 		if (acl) {
-			error = posix_acl_equiv_mode(acl, &inode->i_mode);
-			if (error < 0)
+			error = posix_acl_update_mode(inode, &inode->i_mode, &acl);
+			if (error)
 				return error;
-			else {
-				inode->i_ctime = ext4_current_time(inode);
-				ext4_mark_inode_dirty(handle, inode);
-				if (error == 0)
-					acl = NULL;
-			}
+			inode->i_ctime = ext4_current_time(inode);
+			ext4_mark_inode_dirty(handle, inode);
 		}
 		break;
 
diff --git a/fs/f2fs/acl.c b/fs/f2fs/acl.c
index 4dcc9e28dc5c73..31344247ce891b 100644
--- a/fs/f2fs/acl.c
+++ b/fs/f2fs/acl.c
@@ -210,12 +210,10 @@ static int __f2fs_set_acl(struct inode *inode, int type,
 	case ACL_TYPE_ACCESS:
 		name_index = F2FS_XATTR_INDEX_POSIX_ACL_ACCESS;
 		if (acl) {
-			error = posix_acl_equiv_mode(acl, &inode->i_mode);
-			if (error < 0)
+			error = posix_acl_update_mode(inode, &inode->i_mode, &acl);
+			if (error)
 				return error;
 			set_acl_inode(inode, inode->i_mode);
-			if (error == 0)
-				acl = NULL;
 		}
 		break;
 
diff --git a/fs/gfs2/acl.c b/fs/gfs2/acl.c
index 363ba9e9d8d0ab..2524807ee07036 100644
--- a/fs/gfs2/acl.c
+++ b/fs/gfs2/acl.c
@@ -92,17 +92,11 @@ int __gfs2_set_acl(struct inode *inode, struct posix_acl *acl, int type)
 	if (type == ACL_TYPE_ACCESS) {
 		umode_t mode = inode->i_mode;
 
-		error = posix_acl_equiv_mode(acl, &mode);
-		if (error < 0)
+		error = posix_acl_update_mode(inode, &inode->i_mode, &acl);
+		if (error)
 			return error;
-
-		if (error == 0)
-			acl = NULL;
-
-		if (mode != inode->i_mode) {
-			inode->i_mode = mode;
+		if (mode != inode->i_mode)
 			mark_inode_dirty(inode);
-		}
 	}
 
 	if (acl) {
diff --git a/fs/hfsplus/posix_acl.c b/fs/hfsplus/posix_acl.c
index ab7ea2506b4def..9b92058a12409d 100644
--- a/fs/hfsplus/posix_acl.c
+++ b/fs/hfsplus/posix_acl.c
@@ -65,8 +65,8 @@ int hfsplus_set_posix_acl(struct inode *inode, struct posix_acl *acl,
 	case ACL_TYPE_ACCESS:
 		xattr_name = XATTR_NAME_POSIX_ACL_ACCESS;
 		if (acl) {
-			err = posix_acl_equiv_mode(acl, &inode->i_mode);
-			if (err < 0)
+			err = posix_acl_update_mode(inode, &inode->i_mode, &acl);
+			if (err)
 				return err;
 		}
 		err = 0;
diff --git a/fs/jffs2/acl.c b/fs/jffs2/acl.c
index bc2693d562987a..2a0f2a1044c160 100644
--- a/fs/jffs2/acl.c
+++ b/fs/jffs2/acl.c
@@ -233,9 +233,10 @@ int jffs2_set_acl(struct inode *inode, struct posix_acl *acl, int type)
 	case ACL_TYPE_ACCESS:
 		xprefix = JFFS2_XPREFIX_ACL_ACCESS;
 		if (acl) {
-			umode_t mode = inode->i_mode;
-			rc = posix_acl_equiv_mode(acl, &mode);
-			if (rc < 0)
+			umode_t mode;
+
+			rc = posix_acl_update_mode(inode, &mode, &acl);
+			if (rc)
 				return rc;
 			if (inode->i_mode != mode) {
 				struct iattr attr;
@@ -247,8 +248,6 @@ int jffs2_set_acl(struct inode *inode, struct posix_acl *acl, int type)
 				if (rc < 0)
 					return rc;
 			}
-			if (rc == 0)
-				acl = NULL;
 		}
 		break;
 	case ACL_TYPE_DEFAULT:
diff --git a/fs/jfs/acl.c b/fs/jfs/acl.c
index 21fa92ba2c1916..3a1e1554a4e359 100644
--- a/fs/jfs/acl.c
+++ b/fs/jfs/acl.c
@@ -78,13 +78,11 @@ static int __jfs_set_acl(tid_t tid, struct inode *inode, int type,
 	case ACL_TYPE_ACCESS:
 		ea_name = XATTR_NAME_POSIX_ACL_ACCESS;
 		if (acl) {
-			rc = posix_acl_equiv_mode(acl, &inode->i_mode);
-			if (rc < 0)
+			rc = posix_acl_update_mode(inode, &inode->i_mode, &acl);
+			if (rc)
 				return rc;
 			inode->i_ctime = CURRENT_TIME;
 			mark_inode_dirty(inode);
-			if (rc == 0)
-				acl = NULL;
 		}
 		break;
 	case ACL_TYPE_DEFAULT:
diff --git a/fs/ocfs2/acl.c b/fs/ocfs2/acl.c
index 2162434728c022..164307b994052c 100644
--- a/fs/ocfs2/acl.c
+++ b/fs/ocfs2/acl.c
@@ -241,13 +241,11 @@ int ocfs2_set_acl(handle_t *handle,
 	case ACL_TYPE_ACCESS:
 		name_index = OCFS2_XATTR_INDEX_POSIX_ACL_ACCESS;
 		if (acl) {
-			umode_t mode = inode->i_mode;
-			ret = posix_acl_equiv_mode(acl, &mode);
-			if (ret < 0)
-				return ret;
+			umode_t mode;
 
-			if (ret == 0)
-				acl = NULL;
+			ret = posix_acl_update_mode(inode, &mode, &acl);
+			if (ret)
+				return ret;
 
 			ret = ocfs2_acl_set_mode(inode, di_bh,
 						 handle, mode);
diff --git a/fs/orangefs/acl.c b/fs/orangefs/acl.c
index 28f2195cd7986e..7a3754488312c6 100644
--- a/fs/orangefs/acl.c
+++ b/fs/orangefs/acl.c
@@ -73,14 +73,11 @@ int orangefs_set_acl(struct inode *inode, struct posix_acl *acl, int type)
 	case ACL_TYPE_ACCESS:
 		name = XATTR_NAME_POSIX_ACL_ACCESS;
 		if (acl) {
-			umode_t mode = inode->i_mode;
-			/*
-			 * can we represent this with the traditional file
-			 * mode permission bits?
-			 */
-			error = posix_acl_equiv_mode(acl, &mode);
-			if (error < 0) {
-				gossip_err(""%s: posix_acl_equiv_mode err: %d\n"",
+			umode_t mode;
+
+			error = posix_acl_update_mode(inode, &mode, &acl);
+			if (error) {
+				gossip_err(""%s: posix_acl_update_mode err: %d\n"",
 					   __func__,
 					   error);
 				return error;
@@ -90,8 +87,6 @@ int orangefs_set_acl(struct inode *inode, struct posix_acl *acl, int type)
 				SetModeFlag(orangefs_inode);
 			inode->i_mode = mode;
 			mark_inode_dirty_sync(inode);
-			if (error == 0)
-				acl = NULL;
 		}
 		break;
 	case ACL_TYPE_DEFAULT:
diff --git a/fs/posix_acl.c b/fs/posix_acl.c
index 59d47ab0791af5..bfc3ec38832282 100644
--- a/fs/posix_acl.c
+++ b/fs/posix_acl.c
@@ -626,6 +626,37 @@ posix_acl_create(struct inode *dir, umode_t *mode,
 }
 EXPORT_SYMBOL_GPL(posix_acl_create);
 
+/**
+ * posix_acl_update_mode  -  update mode in set_acl
+ *
+ * Update the file mode when setting an ACL: compute the new file permission
+ * bits based on the ACL.  In addition, if the ACL is equivalent to the new
+ * file mode, set *acl to NULL to indicate that no ACL should be set.
+ *
+ * As with chmod, clear the setgit bit if the caller is not in the owning group
+ * or capable of CAP_FSETID (see inode_change_ok).
+ *
+ * Called from set_acl inode operations.
+ */
+int posix_acl_update_mode(struct inode *inode, umode_t *mode_p,
+			  struct posix_acl **acl)
+{
+	umode_t mode = inode->i_mode;
+	int error;
+
+	error = posix_acl_equiv_mode(*acl, &mode);
+	if (error < 0)
+		return error;
+	if (error == 0)
+		*acl = NULL;
+	if (!in_group_p(inode->i_gid) &&
+	    !capable_wrt_inode_uidgid(inode, CAP_FSETID))
+		mode &= ~S_ISGID;
+	*mode_p = mode;
+	return 0;
+}
+EXPORT_SYMBOL(posix_acl_update_mode);
+
 /*
  * Fix up the uids and gids in posix acl extended attributes in place.
  */
diff --git a/fs/reiserfs/xattr_acl.c b/fs/reiserfs/xattr_acl.c
index dbed42f755e01f..27376681c6405f 100644
--- a/fs/reiserfs/xattr_acl.c
+++ b/fs/reiserfs/xattr_acl.c
@@ -242,13 +242,9 @@ __reiserfs_set_acl(struct reiserfs_transaction_handle *th, struct inode *inode,
 	case ACL_TYPE_ACCESS:
 		name = XATTR_NAME_POSIX_ACL_ACCESS;
 		if (acl) {
-			error = posix_acl_equiv_mode(acl, &inode->i_mode);
-			if (error < 0)
+			error = posix_acl_update_mode(inode, &inode->i_mode, &acl);
+			if (error)
 				return error;
-			else {
-				if (error == 0)
-					acl = NULL;
-			}
 		}
 		break;
 	case ACL_TYPE_DEFAULT:
diff --git a/fs/xfs/xfs_acl.c b/fs/xfs/xfs_acl.c
index b6e527b8eccb6d..8a0dec89ca5606 100644
--- a/fs/xfs/xfs_acl.c
+++ b/fs/xfs/xfs_acl.c
@@ -257,16 +257,11 @@ xfs_set_acl(struct inode *inode, struct posix_acl *acl, int type)
 		return error;
 
 	if (type == ACL_TYPE_ACCESS) {
-		umode_t mode = inode->i_mode;
-		error = posix_acl_equiv_mode(acl, &mode);
-
-		if (error <= 0) {
-			acl = NULL;
-
-			if (error < 0)
-				return error;
-		}
+		umode_t mode;
 
+		error = posix_acl_update_mode(inode, &mode, &acl);
+		if (error)
+			return error;
 		error = xfs_set_mode(inode, mode);
 		if (error)
 			return error;
diff --git a/include/linux/posix_acl.h b/include/linux/posix_acl.h
index d5d3d741f02866..bf1046d0397bbb 100644
--- a/include/linux/posix_acl.h
+++ b/include/linux/posix_acl.h
@@ -93,6 +93,7 @@ extern int set_posix_acl(struct inode *, int, struct posix_acl *);
 extern int posix_acl_chmod(struct inode *, umode_t);
 extern int posix_acl_create(struct inode *, umode_t *, struct posix_acl **,
 		struct posix_acl **);
+extern int posix_acl_update_mode(struct inode *, umode_t *, struct posix_acl **);
 
 extern int simple_set_acl(struct inode *, struct posix_acl *, int);
 extern int simple_acl_create(struct inode *, struct inode *);"
CVE-2016-4557,"From 8358b02bf67d3a5d8a825070e1aa73f25fb2e4c7 Mon Sep 17 00:00:00 2001
From: Jann Horn <jannh@google.com>
Date: Tue, 26 Apr 2016 22:26:26 +0200
Subject: [PATCH] bpf: fix double-fdput in replace_map_fd_with_map_ptr()

When bpf(BPF_PROG_LOAD, ...) was invoked with a BPF program whose bytecode
references a non-map file descriptor as a map file descriptor, the error
handling code called fdput() twice instead of once (in __bpf_map_get() and
in replace_map_fd_with_map_ptr()). If the file descriptor table of the
current task is shared, this causes f_count to be decremented too much,
allowing the struct file to be freed while it is still in use
(use-after-free). This can be exploited to gain root privileges by an
unprivileged user.

This bug was introduced in
commit 0246e64d9a5f (""bpf: handle pseudo BPF_LD_IMM64 insn""), but is only
exploitable since
commit 1be7f75d1668 (""bpf: enable non-root eBPF programs"") because
previously, CAP_SYS_ADMIN was required to reach the vulnerable code.

(posted publicly according to request by maintainer)

Signed-off-by: Jann Horn <jannh@google.com>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
Acked-by: Alexei Starovoitov <ast@kernel.org>
Acked-by: Daniel Borkmann <daniel@iogearbox.net>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 kernel/bpf/verifier.c | 1 -
 1 file changed, 1 deletion(-)

diff --git a/kernel/bpf/verifier.c b/kernel/bpf/verifier.c
index 618ef77c302ab6..db2574e7b8b008 100644
--- a/kernel/bpf/verifier.c
+++ b/kernel/bpf/verifier.c
@@ -2030,7 +2030,6 @@ static int replace_map_fd_with_map_ptr(struct verifier_env *env)
 			if (IS_ERR(map)) {
 				verbose(""fd %d is not pointing to valid bpf_map\n"",
 					insn->imm);
-				fdput(f);
 				return PTR_ERR(map);
 			}"
CVE-2016-2042,"From 5a3de108f26e4b0dddadddbe8ccdb1dd5526771f Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Wed, 27 Jan 2016 09:00:22 +0100
Subject: [PATCH] Avoid execution outside phpMyAdmin
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This is hacky, but avoids path disclossure on direct access to the
scripts.

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 libraries/phpseclib/Crypt/AES.php      | 3 +++
 libraries/phpseclib/Crypt/Rijndael.php | 3 +++
 2 files changed, 6 insertions(+)

diff --git a/libraries/phpseclib/Crypt/AES.php b/libraries/phpseclib/Crypt/AES.php
index 2bb4d5e8f8a9..4f15c80d3f5a 100644
--- a/libraries/phpseclib/Crypt/AES.php
+++ b/libraries/phpseclib/Crypt/AES.php
@@ -46,6 +46,9 @@
  * @license   http://www.opensource.org/licenses/mit-license.html  MIT License
  * @link      http://phpseclib.sourceforge.net
  */
+if (! defined('PHPMYADMIN')) {
+    exit;
+}
 
 namespace phpseclib\Crypt;
 
diff --git a/libraries/phpseclib/Crypt/Rijndael.php b/libraries/phpseclib/Crypt/Rijndael.php
index e97239321c43..109d5d6cc909 100644
--- a/libraries/phpseclib/Crypt/Rijndael.php
+++ b/libraries/phpseclib/Crypt/Rijndael.php
@@ -51,6 +51,9 @@
  * @license   http://www.opensource.org/licenses/mit-license.html  MIT License
  * @link      http://phpseclib.sourceforge.net
  */
+if (! defined('PHPMYADMIN')) {
+    exit;
+}
 
 namespace phpseclib\Crypt;"
CVE-2016-5705,"From 364732e309cccb3fb56c938ed8d8bc0e04a3ca98 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Mon, 20 Jun 2016 10:10:31 +0200
Subject: [PATCH] Escape error message from server
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 js/console.js | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/js/console.js b/js/console.js
index 802e8e1f4c99..79aedb448eb3 100644
--- a/js/console.js
+++ b/js/console.js
@@ -201,7 +201,7 @@ var PMA_console = {
                 } catch (e) {
                     console.log(""Invalid JSON!"" + e.message);
                     if (AJAX.xhr && AJAX.xhr.status === 0 && AJAX.xhr.statusText !== 'abort') {
-                        PMA_ajaxShowMessage($('<div />',{'class':'error','html':PMA_messages.strRequestFailed+' ( '+AJAX.xhr.statusText+' )'}));
+                        PMA_ajaxShowMessage($('<div />',{'class':'error','html':PMA_messages.strRequestFailed+' ( '+escapeHtml(AJAX.xhr.statusText)+' )'}));
                         AJAX.active = false;
                         AJAX.xhr = null;
                     }"
CVE-2016-7532,"From 4f2c04ea6673863b87ac7f186cbb0d911f74085c Mon Sep 17 00:00:00 2001
From: dirk <dirk@git.imagemagick.org>
Date: Tue, 2 Feb 2016 21:35:45 +0100
Subject: [PATCH] Added check for out of bounds read
 (https://github.com/ImageMagick/ImageMagick/issues/108).

---
 coders/psd.c | 19 ++++++++++++-------
 1 file changed, 12 insertions(+), 7 deletions(-)

diff --git a/coders/psd.c b/coders/psd.c
index 47c6bcf735c..ba9bbba660e 100644
--- a/coders/psd.c
+++ b/coders/psd.c
@@ -2605,18 +2605,23 @@ static void RemoveResolutionFromResourceBlock(StringInfo *bim_profile)
     register unsigned char
       *q;
 
+    ssize_t
+      cnt;
+
     q=(unsigned char *) p;
     if (LocaleNCompare((const char *) p,""8BIM"",4) != 0)
-      break;
+      return;
     p=PushLongPixel(MSBEndian,p,&long_sans);
     p=PushShortPixel(MSBEndian,p,&id);
     p=PushShortPixel(MSBEndian,p,&short_sans);
     p=PushLongPixel(MSBEndian,p,&count);
-    if ((id == 0x000003ed) && (PSDQuantum(count) < (ssize_t) (length-12)))
+    cnt=PSDQuantum(count);
+    if (cnt < 0)
+      return;
+    if ((id == 0x000003ed) && (cnt < (ssize_t) (length-12)))
       {
-        (void) CopyMagickMemory(q,q+PSDQuantum(count)+12,length-
-          (PSDQuantum(count)+12)-(q-datum));
-        SetStringInfoLength(bim_profile,length-(PSDQuantum(count)+12));
+        (void) CopyMagickMemory(q,q+cnt+12,length-(cnt+12)-(q-datum));
+        SetStringInfoLength(bim_profile,length-(cnt+12));
         break;
       }
     p+=count;
@@ -2625,8 +2630,8 @@ static void RemoveResolutionFromResourceBlock(StringInfo *bim_profile)
   }
 }
 
-static MagickBooleanType WritePSDImage(const ImageInfo *image_info,Image *image,
-  ExceptionInfo *exception)
+static MagickBooleanType WritePSDImage(const ImageInfo *image_info,
+  Image *image,ExceptionInfo *exception)
 {
   const char
     *property;"
CVE-2016-6837,"From 7086c2d8b4b20ac14013b36761ac04f0abf21a4e Mon Sep 17 00:00:00 2001
From: Damien Regad <dregad@mantisbt.org>
Date: Tue, 16 Aug 2016 23:22:40 +0200
Subject: [PATCH] Fix XSS in view_all_bug_page.php

The value of the view_type parameter on the view_all_bug_page.php page
was not encoded before being displayed.

This vulnerability was discovered by Will Dollman of Netcraft Ltd.

Initial patch modified to use strict comparison per Will's suggestion.

Fixes #21611
---
 core/filter_api.php | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/core/filter_api.php b/core/filter_api.php
index b1e2d89612..72ac90f1c3 100644
--- a/core/filter_api.php
+++ b/core/filter_api.php
@@ -489,9 +489,15 @@ function filter_ensure_valid_filter( array $p_filter_arr ) {
 		# if the version is old, update it
 		$p_filter_arr['_version'] = FILTER_VERSION;
 	}
+
+	# Filter view type - ensure it's either 'simple' or 'advanced' (prevent XSS)
 	if( !isset( $p_filter_arr['_view_type'] ) ) {
 		$p_filter_arr['_view_type'] = gpc_get_string( 'view_type', 'simple' );
 	}
+	if( $p_filter_arr['_view_type'] !== 'advanced' ) {
+		$p_filter_arr['_view_type'] = 'simple';
+	}
+
 	if( !isset( $p_filter_arr[FILTER_PROPERTY_ISSUES_PER_PAGE] ) ) {
 		$p_filter_arr[FILTER_PROPERTY_ISSUES_PER_PAGE] = gpc_get_int( FILTER_PROPERTY_ISSUES_PER_PAGE, config_get( 'default_limit_view' ) );
 	}"
CVE-2016-5688,"From fc43974d34318c834fbf78570ca1a3764ed8c7d7 Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Mon, 16 May 2016 14:00:14 -0400
Subject: [PATCH] Ensure image extent does not exceed maximum

---
 coders/wpg.c | 9 ++++++---
 1 file changed, 6 insertions(+), 3 deletions(-)

diff --git a/coders/wpg.c b/coders/wpg.c
index b6ba8d79fe3..0dfdc47f0b3 100644
--- a/coders/wpg.c
+++ b/coders/wpg.c
@@ -1112,6 +1112,9 @@ static Image *ReadWPGImage(const ImageInfo *image_info,
               bpp=BitmapHeader2.Depth;
 
             UnpackRaster:      
+              status=SetImageExtent(image,image->columns,image->rows,exception);
+              if (status == MagickFalse)
+                break;
               if ((image->colors == 0) && (bpp != 24))
                 {
                   image->colors=one << bpp;
@@ -1305,6 +1308,9 @@ static Image *ReadWPGImage(const ImageInfo *image_info,
                 }
               image->columns=Bitmap2Header1.Width;
               image->rows=Bitmap2Header1.Height;
+              status=SetImageExtent(image,image->columns,image->rows,exception);
+              if (status == MagickFalse)
+                break;
 
               if ((image->colors == 0) && (bpp != 24))
                 {
@@ -1423,9 +1429,6 @@ static Image *ReadWPGImage(const ImageInfo *image_info,
          ThrowReaderException(CoderError,""DataEncodingSchemeIsNotSupported"");
       }
    }
-  status=SetImageExtent(image,image->columns,image->rows,exception);
-  if (status == MagickFalse)
-    return(DestroyImageList(image));
 
  Finish:
   (void) CloseBlob(image);"
CVE-2016-9471,"From 05b1eceb39d241e26ee3b4e41df7ca04edfdba89 Mon Sep 17 00:00:00 2001
From: Matteo Beccati <matteo@beccati.com>
Date: Mon, 26 Sep 2016 15:25:55 +0200
Subject: [PATCH] Fix h1 report 128181

Special Element Injection
-------------------------

Joel Noguera has reported via HackerOne that usernames weren't properly
sanitised when creating users on a Revive Adserver instance. Especially,
control characters were not filtered, allowing apparently identical
usernames to co-exist in the system, due to the fact that such characters
are normally ignored when an HTML page is displayed in a browser.
The issue could have therefore been exploited for user spoofing, although
elevated privileges are required to create users within Revive Adserver.

CWE: CWE-75
CVSSv2: 2.1 (AV:N/AC:H/Au:S/C:N/I:P/A:N)

CVSSv3 Vector: CVSS:3.0/AV:N/AC:H/PR:H/UI:R/S:U/C:L/I:L/A:N/E:U/RL:O/RC:C
CVSSv3 Base Score: 3.1
CVSSv3 Temporal Score: 2.7
---
 lib/OA/Admin/UI/UserAccess.php | 6 +++++-
 1 file changed, 5 insertions(+), 1 deletion(-)

diff --git a/lib/OA/Admin/UI/UserAccess.php b/lib/OA/Admin/UI/UserAccess.php
index fcc31515bc..951f1a9549 100644
--- a/lib/OA/Admin/UI/UserAccess.php
+++ b/lib/OA/Admin/UI/UserAccess.php
@@ -81,7 +81,11 @@ function setNavigationFooterCallback($callback)
     function process()
     {
         if (!empty($this->request['submit'])) {
-            $this->aErrors = $this->oPlugin->validateUsersData($this->request);
+            if (preg_match('#[\x00-\x1F\x7F]#', $this->request['login'])) {
+                $this->aErrors = array($GLOBALS['strInvalidUsername']);
+            } else {
+                $this->aErrors = $this->oPlugin->validateUsersData($this->request);
+            }
             if (empty($this->aErrors)) {
                 $this->userid = $this->oPlugin->saveUser(
                     $this->userid, $this->request['login'], $this->request['passwd'],"
CVE-2016-10169,"From 4bc05fc490b66ef2d45b1de26abf1455b486b0dc Mon Sep 17 00:00:00 2001
From: David Bryant <david@wavpack.com>
Date: Wed, 21 Dec 2016 22:18:36 -0800
Subject: [PATCH] fixes for 4 fuzz failures posted to SourceForge mailing list

---
 src/open_utils.c | 6 +++++-
 src/read_words.c | 4 ++++
 2 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/src/open_utils.c b/src/open_utils.c
index 7519f999..a8440463 100644
--- a/src/open_utils.c
+++ b/src/open_utils.c
@@ -560,7 +560,7 @@ static int read_new_config_info (WavpackContext *wpc, WavpackMetadata *wpmd)
 
     // if there's any data, the first two bytes are file_format and qmode flags
 
-    if (bytecnt) {
+    if (bytecnt >= 2) {
         wpc->file_format = *byteptr++;
         wpc->config.qmode = (wpc->config.qmode & ~0xff) | *byteptr++;
         bytecnt -= 2;
@@ -593,6 +593,10 @@ static int read_new_config_info (WavpackContext *wpc, WavpackMetadata *wpmd)
                         for (i = 0; i < nchans; ++i)
                             if (bytecnt) {
                                 wpc->channel_reordering [i] = *byteptr++;
+
+                                if (wpc->channel_reordering [i] >= nchans)  // make sure index is in range
+                                    wpc->channel_reordering [i] = 0;
+
                                 bytecnt--;
                             }
                             else
diff --git a/src/read_words.c b/src/read_words.c
index 62acac32..a537bfaa 100644
--- a/src/read_words.c
+++ b/src/read_words.c
@@ -288,6 +288,10 @@ int32_t FASTCALL get_word (WavpackStream *wps, int chan, int32_t *correction)
 
     low &= 0x7fffffff;
     high &= 0x7fffffff;
+
+    if (low > high)         // make sure high and low make sense
+        high = low;
+
     mid = (high + low + 1) >> 1;
 
     if (!c->error_limit)"
CVE-2016-5243,"From 5d2be1422e02ccd697ccfcd45c85b4a26e6178e2 Mon Sep 17 00:00:00 2001
From: Kangjie Lu <kangjielu@gmail.com>
Date: Thu, 2 Jun 2016 04:04:56 -0400
Subject: [PATCH] tipc: fix an infoleak in tipc_nl_compat_link_dump

link_info.str is a char array of size 60. Memory after the NULL
byte is not initialized. Sending the whole object out can cause
a leak.

Signed-off-by: Kangjie Lu <kjlu@gatech.edu>
Signed-off-by: David S. Miller <davem@davemloft.net>
---
 net/tipc/netlink_compat.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/net/tipc/netlink_compat.c b/net/tipc/netlink_compat.c
index f795b1dd0ccdf3..3ad9fab1985f1c 100644
--- a/net/tipc/netlink_compat.c
+++ b/net/tipc/netlink_compat.c
@@ -604,7 +604,8 @@ static int tipc_nl_compat_link_dump(struct tipc_nl_compat_msg *msg,
 
 	link_info.dest = nla_get_flag(link[TIPC_NLA_LINK_DEST]);
 	link_info.up = htonl(nla_get_flag(link[TIPC_NLA_LINK_UP]));
-	strcpy(link_info.str, nla_data(link[TIPC_NLA_LINK_NAME]));
+	nla_strlcpy(link_info.str, nla_data(link[TIPC_NLA_LINK_NAME]),
+		    TIPC_MAX_LINK_NAME);
 
 	return tipc_add_tlv(msg->rep, TIPC_TLV_LINK_INFO,
 			    &link_info, sizeof(link_info));"
CVE-2016-2053,"From 0d62e9dd6da45bbf0f33a8617afc5fe774c8f45f Mon Sep 17 00:00:00 2001
From: David Howells <dhowells@redhat.com>
Date: Wed, 5 Aug 2015 12:54:46 +0100
Subject: [PATCH] ASN.1: Fix non-match detection failure on data overrun

If the ASN.1 decoder is asked to parse a sequence of objects, non-optional
matches get skipped if there's no more data to be had rather than a
data-overrun error being reported.

This is due to the code segment that decides whether to skip optional
matches (ie. matches that could get ignored because an element is marked
OPTIONAL in the grammar) due to a lack of data also skips non-optional
elements if the data pointer has reached the end of the buffer.

This can be tested with the data decoder for the new RSA akcipher algorithm
that takes three non-optional integers.  Currently, it skips the last
integer if there is insufficient data.

Without the fix, #defining DEBUG in asn1_decoder.c will show something
like:

	next_op: pc=0/13 dp=0/270 C=0 J=0
	- match? 30 30 00
	- TAG: 30 266 CONS
	next_op: pc=2/13 dp=4/270 C=1 J=0
	- match? 02 02 00
	- TAG: 02 257
	- LEAF: 257
	next_op: pc=5/13 dp=265/270 C=1 J=0
	- match? 02 02 00
	- TAG: 02 3
	- LEAF: 3
	next_op: pc=8/13 dp=270/270 C=1 J=0
	next_op: pc=11/13 dp=270/270 C=1 J=0
	- end cons t=4 dp=270 l=270/270

The next_op line for pc=8/13 should be followed by a match line.

This is not exploitable for X.509 certificates by means of shortening the
message and fixing up the ASN.1 CONS tags because:

 (1) The relevant records being built up are cleared before use.

 (2) If the message is shortened sufficiently to remove the public key, the
     ASN.1 parse of the RSA key will fail quickly due to a lack of data.

 (3) Extracted signature data is either turned into MPIs (which cope with a
     0 length) or is simpler integers specifying algoritms and suchlike
     (which can validly be 0); and

 (4) The AKID and SKID extensions are optional and their removal is handled
     without risking passing a NULL to asymmetric_key_generate_id().

 (5) If the certificate is truncated sufficiently to remove the subject,
     issuer or serialNumber then the ASN.1 decoder will fail with a 'Cons
     stack underflow' return.

This is not exploitable for PKCS#7 messages by means of removal of elements
from such a message from the tail end of a sequence:

 (1) Any shortened X.509 certs embedded in the PKCS#7 message are survivable
     as detailed above.

 (2) The message digest content isn't used if it shows a NULL pointer,
     similarly, the authattrs aren't used if that shows a NULL pointer.

 (3) A missing signature results in a NULL MPI - which the MPI routines deal
     with.

 (4) If data is NULL, it is expected that the message has detached content and
     that is handled appropriately.

 (5) If the serialNumber is excised, the unconditional action associated
     with it will pick up the containing SEQUENCE instead, so no NULL
     pointer will be seen here.

     If both the issuer and the serialNumber are excised, the ASN.1 decode
     will fail with an 'Unexpected tag' return.

     In either case, there's no way to get to asymmetric_key_generate_id()
     with a NULL pointer.

 (6) Other fields are decoded to simple integers.  Shortening the message
     to omit an algorithm ID field will cause checks on this to fail early
     in the verification process.


This can also be tested by snipping objects off of the end of the ASN.1 stream
such that mandatory tags are removed - or even from the end of internal
SEQUENCEs.  If any mandatory tag is missing, the error EBADMSG *should* be
produced.  Without this patch ERANGE or ENOPKG might be produced or the parse
may apparently succeed, perhaps with ENOKEY or EKEYREJECTED being produced
later, depending on what gets snipped.

Just snipping off the final BIT_STRING or OCTET_STRING from either sample
should be a start since both are mandatory and neither will cause an EBADMSG
without the patches

Reported-by: Marcel Holtmann <marcel@holtmann.org>
Signed-off-by: David Howells <dhowells@redhat.com>
Tested-by: Marcel Holtmann <marcel@holtmann.org>
Reviewed-by: David Woodhouse <David.Woodhouse@intel.com>
---
 lib/asn1_decoder.c | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)

diff --git a/lib/asn1_decoder.c b/lib/asn1_decoder.c
index 55980d7e1ac00b..3f74dd3e29107f 100644
--- a/lib/asn1_decoder.c
+++ b/lib/asn1_decoder.c
@@ -210,9 +210,8 @@ int asn1_ber_decoder(const struct asn1_decoder *decoder,
 		unsigned char tmp;
 
 		/* Skip conditional matches if possible */
-		if ((op & ASN1_OP_MATCH__COND &&
-		     flags & FLAG_MATCHED) ||
-		    dp == datalen) {
+		if ((op & ASN1_OP_MATCH__COND && flags & FLAG_MATCHED) ||
+		    (op & ASN1_OP_MATCH__SKIP && dp == datalen)) {
 			flags &= ~FLAG_LAST_MATCHED;
 			pc += asn1_op_lengths[op];
 			goto next_op;"
CVE-2016-5431,"From 1cce55e27adf0274193eb1cd74b927a398a3df4b Mon Sep 17 00:00:00 2001
From: nov <nobukazu.matake@optim.co.jp>
Date: Tue, 30 Aug 2016 10:37:36 +0900
Subject: [PATCH] explicit alg check & secure hash comparison

---
 src/JOSE/JWS.php | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/src/JOSE/JWS.php b/src/JOSE/JWS.php
index 950d6b4..60c1cbb 100644
--- a/src/JOSE/JWS.php
+++ b/src/JOSE/JWS.php
@@ -122,14 +122,20 @@ private function _verify($public_key_or_secret, $expected_alg = null) {
         $segments = explode('.', $this->raw);
         $signature_base_string = implode('.', array($segments[0], $segments[1]));
         if (!$expected_alg) {
-            # NOTE: might better to warn here
             $expected_alg = $this->header['alg'];
+            $using_autodetected_alg = true;
         }
         switch ($expected_alg) {
             case 'HS256':
             case 'HS384':
             case 'HS512':
-                return $this->signature === hash_hmac($this->digest(), $signature_base_string, $public_key_or_secret, true);
+                if ($using_autodetected_alg) {
+                    throw new JOSE_Exception_UnexpectedAlgorithm(
+                        'HMAC algs MUST be explicitly specified as $expected_alg'
+                    );
+                }
+                $hmac_hash = hash_hmac($this->digest(), $signature_base_string, $public_key_or_secret, true);
+                return hash_equals($this->signature, $hmac_hash);
             case 'RS256':
             case 'RS384':
             case 'RS512':"
CVE-2016-10140,"From 6361f143878ce00659f64ce42593951d773e4e63 Mon Sep 17 00:00:00 2001
From: Isaac Connor <iconnor@pseudo.connortechnology.com>
Date: Tue, 8 Nov 2016 09:30:24 -0500
Subject: [PATCH 1/2] Rremove Index from options to prevent directory listings

---
 distros/debian/apache.conf                        |  2 +-
 distros/ubuntu1204/conf/apache2/zoneminder.conf   |  2 +-
 .../ubuntu1504_cmake_split_packages/apache.conf   | 15 +++++++++++++--
 distros/ubuntu1604/conf/apache2/zoneminder.conf   |  2 +-
 misc/apache.conf.in                               |  2 +-
 5 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/distros/debian/apache.conf b/distros/debian/apache.conf
index 6f2f30fd9e..9a32388074 100644
--- a/distros/debian/apache.conf
+++ b/distros/debian/apache.conf
@@ -1,7 +1,7 @@
 Alias /zm /usr/share/zoneminder/www
 
 <Directory /usr/share/zoneminder/www>
-  Options Indexes FollowSymLinks
+  Options -Indexes +FollowSymLinks
   <IfModule mod_dir.c>
     DirectoryIndex index.php
   </IfModule>
diff --git a/distros/ubuntu1204/conf/apache2/zoneminder.conf b/distros/ubuntu1204/conf/apache2/zoneminder.conf
index fa596d5abe..0dc3127690 100644
--- a/distros/ubuntu1204/conf/apache2/zoneminder.conf
+++ b/distros/ubuntu1204/conf/apache2/zoneminder.conf
@@ -9,7 +9,7 @@ ScriptAlias /zm/cgi-bin ""/usr/lib/zoneminder/cgi-bin""
 Alias /zm /usr/share/zoneminder/www
 <Directory /usr/share/zoneminder/www>
   php_flag register_globals off
-  Options Indexes FollowSymLinks
+  Options -Indexes +FollowSymLinks
   <IfModule mod_dir.c>
     DirectoryIndex index.php
   </IfModule>
diff --git a/distros/ubuntu1504_cmake_split_packages/apache.conf b/distros/ubuntu1504_cmake_split_packages/apache.conf
index 6f2f30fd9e..292581e780 100644
--- a/distros/ubuntu1504_cmake_split_packages/apache.conf
+++ b/distros/ubuntu1504_cmake_split_packages/apache.conf
@@ -1,8 +1,19 @@
-Alias /zm /usr/share/zoneminder/www
+# Remember to enable cgi mod (i.e. ""a2enmod cgi"").
+ScriptAlias /zm/cgi-bin ""/usr/lib/zoneminder/cgi-bin""
+<Directory ""/usr/lib/zoneminder/cgi-bin"">
+    Options +ExecCGI -MultiViews +SymLinksIfOwnerMatch
+    AllowOverride All
+    Require all granted
+</Directory>
 
+Alias /zm /usr/share/zoneminder/www
 <Directory /usr/share/zoneminder/www>
-  Options Indexes FollowSymLinks
+  Options -Indexes +ollowSymLinks
   <IfModule mod_dir.c>
     DirectoryIndex index.php
   </IfModule>
 </Directory>
+
+<Directory /usr/share/zoneminder/www/api>
+    AllowOverride All
+</Directory>
diff --git a/distros/ubuntu1604/conf/apache2/zoneminder.conf b/distros/ubuntu1604/conf/apache2/zoneminder.conf
index 40fbf4d7c6..292581e780 100644
--- a/distros/ubuntu1604/conf/apache2/zoneminder.conf
+++ b/distros/ubuntu1604/conf/apache2/zoneminder.conf
@@ -8,7 +8,7 @@ ScriptAlias /zm/cgi-bin ""/usr/lib/zoneminder/cgi-bin""
 
 Alias /zm /usr/share/zoneminder/www
 <Directory /usr/share/zoneminder/www>
-  Options Indexes FollowSymLinks
+  Options -Indexes +ollowSymLinks
   <IfModule mod_dir.c>
     DirectoryIndex index.php
   </IfModule>
diff --git a/misc/apache.conf.in b/misc/apache.conf.in
index 1ea6ed7c18..5ad45338b1 100644
--- a/misc/apache.conf.in
+++ b/misc/apache.conf.in
@@ -10,7 +10,7 @@
 
     DocumentRoot ""@WEB_PREFIX@""
     <Directory ""@WEB_PREFIX@"">
-        Options FollowSymLinks
+        Options -Indexes +FollowSymLinks
         AllowOverride All
     </Directory>
 

From aa0a4d1f5ad2c493f2bed175991e92c466ac3dc4 Mon Sep 17 00:00:00 2001
From: Isaac Connor <iconnor@pseudo.connortechnology.com>
Date: Tue, 22 Nov 2016 13:13:09 -0500
Subject: [PATCH 2/2] put back mizzing F

---
 distros/ubuntu1604/conf/apache2/zoneminder.conf | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/distros/ubuntu1604/conf/apache2/zoneminder.conf b/distros/ubuntu1604/conf/apache2/zoneminder.conf
index 292581e780..59efc62484 100644
--- a/distros/ubuntu1604/conf/apache2/zoneminder.conf
+++ b/distros/ubuntu1604/conf/apache2/zoneminder.conf
@@ -8,7 +8,7 @@ ScriptAlias /zm/cgi-bin ""/usr/lib/zoneminder/cgi-bin""
 
 Alias /zm /usr/share/zoneminder/www
 <Directory /usr/share/zoneminder/www>
-  Options -Indexes +ollowSymLinks
+  Options -Indexes +FollowSymLinks
   <IfModule mod_dir.c>
     DirectoryIndex index.php
   </IfModule>"
CVE-2016-7917,"From c58d6c93680f28ac58984af61d0a7ebf4319c241 Mon Sep 17 00:00:00 2001
From: Phil Turnbull <phil.turnbull@oracle.com>
Date: Tue, 2 Feb 2016 13:36:45 -0500
Subject: [PATCH] netfilter: nfnetlink: correctly validate length of batch
 messages

If nlh->nlmsg_len is zero then an infinite loop is triggered because
'skb_pull(skb, msglen);' pulls zero bytes.

The calculation in nlmsg_len() underflows if 'nlh->nlmsg_len <
NLMSG_HDRLEN' which bypasses the length validation and will later
trigger an out-of-bound read.

If the length validation does fail then the malformed batch message is
copied back to userspace. However, we cannot do this because the
nlh->nlmsg_len can be invalid. This leads to an out-of-bounds read in
netlink_ack:

    [   41.455421] ==================================================================
    [   41.456431] BUG: KASAN: slab-out-of-bounds in memcpy+0x1d/0x40 at addr ffff880119e79340
    [   41.456431] Read of size 4294967280 by task a.out/987
    [   41.456431] =============================================================================
    [   41.456431] BUG kmalloc-512 (Not tainted): kasan: bad access detected
    [   41.456431] -----------------------------------------------------------------------------
    ...
    [   41.456431] Bytes b4 ffff880119e79310: 00 00 00 00 d5 03 00 00 b0 fb fe ff 00 00 00 00  ................
    [   41.456431] Object ffff880119e79320: 20 00 00 00 10 00 05 00 00 00 00 00 00 00 00 00   ...............
    [   41.456431] Object ffff880119e79330: 14 00 0a 00 01 03 fc 40 45 56 11 22 33 10 00 05  .......@EV.""3...
    [   41.456431] Object ffff880119e79340: f0 ff ff ff 88 99 aa bb 00 14 00 0a 00 06 fe fb  ................
                                            ^^ start of batch nlmsg with
                                               nlmsg_len=4294967280
    ...
    [   41.456431] Memory state around the buggy address:
    [   41.456431]  ffff880119e79400: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   41.456431]  ffff880119e79480: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
    [   41.456431] >ffff880119e79500: 00 00 00 00 fc fc fc fc fc fc fc fc fc fc fc fc
    [   41.456431]                                ^
    [   41.456431]  ffff880119e79580: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
    [   41.456431]  ffff880119e79600: fc fc fc fc fc fc fc fc fc fc fb fb fb fb fb fb
    [   41.456431] ==================================================================

Fix this with better validation of nlh->nlmsg_len and by setting
NFNL_BATCH_FAILURE if any batch message fails length validation.

CAP_NET_ADMIN is required to trigger the bugs.

Fixes: 9ea2aa8b7dba (""netfilter: nfnetlink: validate nfnetlink header from batch"")
Signed-off-by: Phil Turnbull <phil.turnbull@oracle.com>
Signed-off-by: Pablo Neira Ayuso <pablo@netfilter.org>
---
 net/netfilter/nfnetlink.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/net/netfilter/nfnetlink.c b/net/netfilter/nfnetlink.c
index 62e92af2384a17..857ae89633aff8 100644
--- a/net/netfilter/nfnetlink.c
+++ b/net/netfilter/nfnetlink.c
@@ -328,10 +328,12 @@ static void nfnetlink_rcv_batch(struct sk_buff *skb, struct nlmsghdr *nlh,
 		nlh = nlmsg_hdr(skb);
 		err = 0;
 
-		if (nlmsg_len(nlh) < sizeof(struct nfgenmsg) ||
-		    skb->len < nlh->nlmsg_len) {
-			err = -EINVAL;
-			goto ack;
+		if (nlh->nlmsg_len < NLMSG_HDRLEN ||
+		    skb->len < nlh->nlmsg_len ||
+		    nlmsg_len(nlh) < sizeof(struct nfgenmsg)) {
+			nfnl_err_reset(&err_list);
+			status |= NFNL_BATCH_FAILURE;
+			goto done;
 		}
 
 		/* Only requests are handled by the kernel */"
CVE-2016-7914,"From 8d4a2ec1e0b41b0cf9a0c5cd4511da7f8e4f3de2 Mon Sep 17 00:00:00 2001
From: Jerome Marchand <jmarchan@redhat.com>
Date: Wed, 6 Apr 2016 14:06:48 +0100
Subject: [PATCH] assoc_array: don't call compare_object() on a node

Changes since V1: fixed the description and added KASan warning.

In assoc_array_insert_into_terminal_node(), we call the
compare_object() method on all non-empty slots, even when they're
not leaves, passing a pointer to an unexpected structure to
compare_object(). Currently it causes an out-of-bound read access
in keyring_compare_object detected by KASan (see below). The issue
is easily reproduced with keyutils testsuite.
Only call compare_object() when the slot is a leave.

KASan warning:
==================================================================
BUG: KASAN: slab-out-of-bounds in keyring_compare_object+0x213/0x240 at addr ffff880060a6f838
Read of size 8 by task keyctl/1655
=============================================================================
BUG kmalloc-192 (Not tainted): kasan: bad access detected
-----------------------------------------------------------------------------

Disabling lock debugging due to kernel taint
INFO: Allocated in assoc_array_insert+0xfd0/0x3a60 age=69 cpu=1 pid=1647
	___slab_alloc+0x563/0x5c0
	__slab_alloc+0x51/0x90
	kmem_cache_alloc_trace+0x263/0x300
	assoc_array_insert+0xfd0/0x3a60
	__key_link_begin+0xfc/0x270
	key_create_or_update+0x459/0xaf0
	SyS_add_key+0x1ba/0x350
	entry_SYSCALL_64_fastpath+0x12/0x76
INFO: Slab 0xffffea0001829b80 objects=16 used=8 fp=0xffff880060a6f550 flags=0x3fff8000004080
INFO: Object 0xffff880060a6f740 @offset=5952 fp=0xffff880060a6e5d1

Bytes b4 ffff880060a6f730: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f740: d1 e5 a6 60 00 88 ff ff 0e 00 00 00 00 00 00 00  ...`............
Object ffff880060a6f750: 02 cf 8e 60 00 88 ff ff 02 c0 8e 60 00 88 ff ff  ...`.......`....
Object ffff880060a6f760: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f770: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f780: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f790: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f7a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f7b0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f7c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f7d0: 02 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f7e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
Object ffff880060a6f7f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................
CPU: 0 PID: 1655 Comm: keyctl Tainted: G    B           4.5.0-rc4-kasan+ #291
Hardware name: Bochs Bochs, BIOS Bochs 01/01/2011
 0000000000000000 000000001b2800b4 ffff880060a179e0 ffffffff81b60491
 ffff88006c802900 ffff880060a6f740 ffff880060a17a10 ffffffff815e2969
 ffff88006c802900 ffffea0001829b80 ffff880060a6f740 ffff880060a6e650
Call Trace:
 [<ffffffff81b60491>] dump_stack+0x85/0xc4
 [<ffffffff815e2969>] print_trailer+0xf9/0x150
 [<ffffffff815e9454>] object_err+0x34/0x40
 [<ffffffff815ebe50>] kasan_report_error+0x230/0x550
 [<ffffffff819949be>] ? keyring_get_key_chunk+0x13e/0x210
 [<ffffffff815ec62d>] __asan_report_load_n_noabort+0x5d/0x70
 [<ffffffff81994cc3>] ? keyring_compare_object+0x213/0x240
 [<ffffffff81994cc3>] keyring_compare_object+0x213/0x240
 [<ffffffff81bc238c>] assoc_array_insert+0x86c/0x3a60
 [<ffffffff81bc1b20>] ? assoc_array_cancel_edit+0x70/0x70
 [<ffffffff8199797d>] ? __key_link_begin+0x20d/0x270
 [<ffffffff8199786c>] __key_link_begin+0xfc/0x270
 [<ffffffff81993389>] key_create_or_update+0x459/0xaf0
 [<ffffffff8128ce0d>] ? trace_hardirqs_on+0xd/0x10
 [<ffffffff81992f30>] ? key_type_lookup+0xc0/0xc0
 [<ffffffff8199e19d>] ? lookup_user_key+0x13d/0xcd0
 [<ffffffff81534763>] ? memdup_user+0x53/0x80
 [<ffffffff819983ea>] SyS_add_key+0x1ba/0x350
 [<ffffffff81998230>] ? key_get_type_from_user.constprop.6+0xa0/0xa0
 [<ffffffff828bcf4e>] ? retint_user+0x18/0x23
 [<ffffffff8128cc7e>] ? trace_hardirqs_on_caller+0x3fe/0x580
 [<ffffffff81004017>] ? trace_hardirqs_on_thunk+0x17/0x19
 [<ffffffff828bc432>] entry_SYSCALL_64_fastpath+0x12/0x76
Memory state around the buggy address:
 ffff880060a6f700: fc fc fc fc fc fc fc fc 00 00 00 00 00 00 00 00
 ffff880060a6f780: 00 00 00 00 00 00 00 00 00 00 00 fc fc fc fc fc
>ffff880060a6f800: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
                                        ^
 ffff880060a6f880: fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc fc
 ffff880060a6f900: fc fc fc fc fc fc 00 00 00 00 00 00 00 00 00 00
==================================================================

Signed-off-by: Jerome Marchand <jmarchan@redhat.com>
Signed-off-by: David Howells <dhowells@redhat.com>
cc: stable@vger.kernel.org
---
 lib/assoc_array.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)

diff --git a/lib/assoc_array.c b/lib/assoc_array.c
index 03dd576e67730f..59fd7c0b119cbc 100644
--- a/lib/assoc_array.c
+++ b/lib/assoc_array.c
@@ -524,7 +524,9 @@ static bool assoc_array_insert_into_terminal_node(struct assoc_array_edit *edit,
 			free_slot = i;
 			continue;
 		}
-		if (ops->compare_object(assoc_array_ptr_to_leaf(ptr), index_key)) {
+		if (assoc_array_ptr_is_leaf(ptr) &&
+		    ops->compare_object(assoc_array_ptr_to_leaf(ptr),
+					index_key)) {
 			pr_devel(""replace in slot %d\n"", i);
 			edit->leaf_p = &node->slots[i];
 			edit->dead_leaf = node->slots[i];"
CVE-2016-9392,"From f7038068550fba0e41e1d0c355787f1dcd5bf330 Mon Sep 17 00:00:00 2001
From: Michael Adams <mdadams@ece.uvic.ca>
Date: Thu, 27 Oct 2016 20:11:57 -0700
Subject: [PATCH] Added some missing sanity checks on the data in a SIZ marker
 segment.

---
 src/libjasper/jpc/jpc_cs.c | 57 +++++++++++++++++++++++++++-----------
 1 file changed, 41 insertions(+), 16 deletions(-)

diff --git a/src/libjasper/jpc/jpc_cs.c b/src/libjasper/jpc/jpc_cs.c
index cf7199e5..37cfa983 100644
--- a/src/libjasper/jpc/jpc_cs.c
+++ b/src/libjasper/jpc/jpc_cs.c
@@ -489,6 +489,8 @@ static int jpc_siz_getparms(jpc_ms_t *ms, jpc_cstate_t *cstate,
 	unsigned int i;
 	uint_fast8_t tmp;
 
+	siz->comps = 0;
+
 	/* Eliminate compiler warning about unused variables. */
 	cstate = 0;
 
@@ -502,44 +504,67 @@ static int jpc_siz_getparms(jpc_ms_t *ms, jpc_cstate_t *cstate,
 	  jpc_getuint32(in, &siz->tilexoff) ||
 	  jpc_getuint32(in, &siz->tileyoff) ||
 	  jpc_getuint16(in, &siz->numcomps)) {
-		return -1;
+		goto error;
 	}
-	if (!siz->width || !siz->height || !siz->tilewidth ||
-	  !siz->tileheight || !siz->numcomps || siz->numcomps > 16384) {
-		return -1;
+	if (!siz->width || !siz->height) {
+		jas_eprintf(""reference grid cannot have zero area\n"");
+		goto error;
 	}
-	if (siz->tilexoff >= siz->width || siz->tileyoff >= siz->height) {
-		jas_eprintf(""all tiles are outside the image area\n"");
-		return -1;
+	if (!siz->tilewidth || !siz->tileheight) {
+		jas_eprintf(""tile cannot have zero area\n"");
+		goto error;
+	}
+	if (!siz->numcomps || siz->numcomps > 16384) {
+		jas_eprintf(""number of components not in permissible range\n"");
+		goto error;
 	}
+	if (siz->xoff >= siz->width) {
+		jas_eprintf(""XOsiz not in permissible range\n"");
+		goto error;
+	}
+	if (siz->yoff >= siz->height) {
+		jas_eprintf(""YOsiz not in permissible range\n"");
+		goto error;
+	}
+	if (siz->tilexoff > siz->xoff || siz->tilexoff + siz->tilewidth <= siz->xoff) {
+		jas_eprintf(""XTOsiz not in permissible range\n"");
+		goto error;
+	}
+	if (siz->tileyoff > siz->yoff || siz->tileyoff + siz->tileheight <= siz->yoff) {
+		jas_eprintf(""YTOsiz not in permissible range\n"");
+		goto error;
+	}
+
 	if (!(siz->comps = jas_alloc2(siz->numcomps, sizeof(jpc_sizcomp_t)))) {
-		return -1;
+		goto error;
 	}
 	for (i = 0; i < siz->numcomps; ++i) {
 		if (jpc_getuint8(in, &tmp) ||
 		  jpc_getuint8(in, &siz->comps[i].hsamp) ||
 		  jpc_getuint8(in, &siz->comps[i].vsamp)) {
-			jas_free(siz->comps);
-			return -1;
+			goto error;
 		}
 		if (siz->comps[i].hsamp == 0 || siz->comps[i].hsamp > 255) {
 			jas_eprintf(""invalid XRsiz value %d\n"", siz->comps[i].hsamp);
-			jas_free(siz->comps);
-			return -1;
+			goto error;
 		}
 		if (siz->comps[i].vsamp == 0 || siz->comps[i].vsamp > 255) {
 			jas_eprintf(""invalid YRsiz value %d\n"", siz->comps[i].vsamp);
-			jas_free(siz->comps);
-			return -1;
+			goto error;
 		}
 		siz->comps[i].sgnd = (tmp >> 7) & 1;
 		siz->comps[i].prec = (tmp & 0x7f) + 1;
 	}
 	if (jas_stream_eof(in)) {
-		jas_free(siz->comps);
-		return -1;
+		goto error;
 	}
 	return 0;
+
+error:
+	if (siz->comps) {
+		jas_free(siz->comps);
+	}
+	return -1;
 }
 
 static int jpc_siz_putparms(jpc_ms_t *ms, jpc_cstate_t *cstate, jas_stream_t *out)"
CVE-2016-2038,"From 447c88f4884fe30a25d38c331c31d820a19f8c93 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>
Date: Tue, 26 Jan 2016 14:30:08 +0100
Subject: [PATCH] Can not use PMA_fatalError when including fails
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: Michal Čihař <michal@cihar.com>
---
 setup/lib/common.inc.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/setup/lib/common.inc.php b/setup/lib/common.inc.php
index 8f64f1136bd9..b2bde37e0f8f 100644
--- a/setup/lib/common.inc.php
+++ b/setup/lib/common.inc.php
@@ -15,7 +15,7 @@
 chdir('..');
 
 if (!file_exists('./libraries/common.inc.php')) {
-    PMA_fatalError('Bad invocation!');
+    die('Bad invocation!');
 }
 
 require_once './libraries/common.inc.php';"
CVE-2016-9120,"From 9590232bb4f4cc824f3425a6e1349afbe6d6d2b7 Mon Sep 17 00:00:00 2001
From: EunTaik Lee <eun.taik.lee@samsung.com>
Date: Wed, 24 Feb 2016 04:38:06 +0000
Subject: [PATCH] staging/android/ion : fix a race condition in the ion driver

There is a use-after-free problem in the ion driver.
This is caused by a race condition in the ion_ioctl()
function.

A handle has ref count of 1 and two tasks on different
cpus calls ION_IOC_FREE simultaneously.

cpu 0                                   cpu 1
-------------------------------------------------------
ion_handle_get_by_id()
(ref == 2)
                            ion_handle_get_by_id()
                            (ref == 3)

ion_free()
(ref == 2)

ion_handle_put()
(ref == 1)

                            ion_free()
                            (ref == 0 so ion_handle_destroy() is
                            called
                            and the handle is freed.)

                            ion_handle_put() is called and it
                            decreases the slub's next free pointer

The problem is detected as an unaligned access in the
spin lock functions since it uses load exclusive
 instruction. In some cases it corrupts the slub's
free pointer which causes a mis-aligned access to the
next free pointer.(kmalloc returns a pointer like
ffffc0745b4580aa). And it causes lots of other
hard-to-debug problems.

This symptom is caused since the first member in the
ion_handle structure is the reference count and the
ion driver decrements the reference after it has been
freed.

To fix this problem client->lock mutex is extended
to protect all the codes that uses the handle.

Signed-off-by: Eun Taik Lee <eun.taik.lee@samsung.com>
Reviewed-by: Laura Abbott <labbott@redhat.com>
Signed-off-by: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
---
 drivers/staging/android/ion/ion.c | 55 +++++++++++++++++++++++--------
 1 file changed, 42 insertions(+), 13 deletions(-)
 mode change 100644 => 100755 drivers/staging/android/ion/ion.c

diff --git a/drivers/staging/android/ion/ion.c b/drivers/staging/android/ion/ion.c
old mode 100644
new mode 100755
index 7ff2a7ec871f98..33b390e7ea3117
--- a/drivers/staging/android/ion/ion.c
+++ b/drivers/staging/android/ion/ion.c
@@ -387,13 +387,22 @@ static void ion_handle_get(struct ion_handle *handle)
 	kref_get(&handle->ref);
 }
 
-static int ion_handle_put(struct ion_handle *handle)
+static int ion_handle_put_nolock(struct ion_handle *handle)
+{
+	int ret;
+
+	ret = kref_put(&handle->ref, ion_handle_destroy);
+
+	return ret;
+}
+
+int ion_handle_put(struct ion_handle *handle)
 {
 	struct ion_client *client = handle->client;
 	int ret;
 
 	mutex_lock(&client->lock);
-	ret = kref_put(&handle->ref, ion_handle_destroy);
+	ret = ion_handle_put_nolock(handle);
 	mutex_unlock(&client->lock);
 
 	return ret;
@@ -417,20 +426,30 @@ static struct ion_handle *ion_handle_lookup(struct ion_client *client,
 	return ERR_PTR(-EINVAL);
 }
 
-static struct ion_handle *ion_handle_get_by_id(struct ion_client *client,
+static struct ion_handle *ion_handle_get_by_id_nolock(struct ion_client *client,
 						int id)
 {
 	struct ion_handle *handle;
 
-	mutex_lock(&client->lock);
 	handle = idr_find(&client->idr, id);
 	if (handle)
 		ion_handle_get(handle);
-	mutex_unlock(&client->lock);
 
 	return handle ? handle : ERR_PTR(-EINVAL);
 }
 
+struct ion_handle *ion_handle_get_by_id(struct ion_client *client,
+						int id)
+{
+	struct ion_handle *handle;
+
+	mutex_lock(&client->lock);
+	handle = ion_handle_get_by_id_nolock(client, id);
+	mutex_unlock(&client->lock);
+
+	return handle;
+}
+
 static bool ion_handle_validate(struct ion_client *client,
 				struct ion_handle *handle)
 {
@@ -532,22 +551,28 @@ struct ion_handle *ion_alloc(struct ion_client *client, size_t len,
 }
 EXPORT_SYMBOL(ion_alloc);
 
-void ion_free(struct ion_client *client, struct ion_handle *handle)
+static void ion_free_nolock(struct ion_client *client, struct ion_handle *handle)
 {
 	bool valid_handle;
 
 	BUG_ON(client != handle->client);
 
-	mutex_lock(&client->lock);
 	valid_handle = ion_handle_validate(client, handle);
 
 	if (!valid_handle) {
 		WARN(1, ""%s: invalid handle passed to free.\n"", __func__);
-		mutex_unlock(&client->lock);
 		return;
 	}
+	ion_handle_put_nolock(handle);
+}
+
+void ion_free(struct ion_client *client, struct ion_handle *handle)
+{
+	BUG_ON(client != handle->client);
+
+	mutex_lock(&client->lock);
+	ion_free_nolock(client, handle);
 	mutex_unlock(&client->lock);
-	ion_handle_put(handle);
 }
 EXPORT_SYMBOL(ion_free);
 
@@ -1332,11 +1357,15 @@ static long ion_ioctl(struct file *filp, unsigned int cmd, unsigned long arg)
 	{
 		struct ion_handle *handle;
 
-		handle = ion_handle_get_by_id(client, data.handle.handle);
-		if (IS_ERR(handle))
+		mutex_lock(&client->lock);
+		handle = ion_handle_get_by_id_nolock(client, data.handle.handle);
+		if (IS_ERR(handle)) {
+			mutex_unlock(&client->lock);
 			return PTR_ERR(handle);
-		ion_free(client, handle);
-		ion_handle_put(handle);
+		}
+		ion_free_nolock(client, handle);
+		ion_handle_put_nolock(handle);
+		mutex_unlock(&client->lock);
 		break;
 	}
 	case ION_IOC_SHARE:"
CVE-2016-0721,"From acdbbe8307e6f4a36b2c7754765e732e43fe8d17 Mon Sep 17 00:00:00 2001
From: Tomas Jelinek <tojeline@redhat.com>
Date: Mon, 8 Feb 2016 17:13:19 +0100
Subject: [PATCH] web UI auth: add js/ajax login dialog

---
 pcsd/pcsd.rb                  |  26 ++--
 pcsd/public/js/nodes-ember.js |  10 +-
 pcsd/public/js/pcsd.js        | 221 +++++++++++++++++++++++++++-------
 pcsd/views/_dialogs.erb       |  19 +++
 pcsd/views/permissions.erb    |   1 +
 5 files changed, 220 insertions(+), 57 deletions(-)

diff --git a/pcsd/pcsd.rb b/pcsd/pcsd.rb
index 7a00a8bab..e5eb3d030 100644
--- a/pcsd/pcsd.rb
+++ b/pcsd/pcsd.rb
@@ -145,6 +145,10 @@ def generate_cookie_secret
 }
 
 helpers do
+  def is_ajax?
+    return request.env['HTTP_X_REQUESTED_WITH'] == 'XMLHttpRequest'
+  end
+
   def protected!
     gui_request = ( # these are URLs for web pages
       request.path == '/' or
@@ -158,9 +162,7 @@ def protected!
         halt [401, '{""notauthorized"":""true""}']
       end
     else #/managec/* /manage/* /permissions
-      if !gui_request and
-        request.env['HTTP_X_REQUESTED_WITH'] != 'XMLHttpRequest'
-      then
+      if !gui_request and !is_ajax? then
         # Accept non GUI requests only with header
         # ""X_REQUESTED_WITH: XMLHttpRequest"". (check if they are send via AJAX).
         # This prevents CSRF attack.
@@ -361,9 +363,9 @@ def getParamList(params)
 if not DISABLE_GUI
   get('/login'){ erb :login, :layout => :main }
 
-  get '/logout' do 
+  get '/logout' do
     session.destroy
-    erb :login, :layout => :main
+    redirect '/login'
   end
 
   post '/login' do
@@ -383,11 +385,19 @@ def getParamList(params)
       #      end
       #      redirect plp
       #    else
-      redirect '/manage'
+      if is_ajax?
+        halt [200, ""OK""]
+      else
+        redirect '/manage'
+      end
       #    end
     else
-      session[""bad_login_name""] = params['username']
-      redirect '/login?badlogin=1'
+      if is_ajax?
+        halt [401, '{""notauthorized"":""true""}']
+      else
+        session[""bad_login_name""] = params['username']
+        redirect '/login?badlogin=1'
+      end
     end
   end
 
diff --git a/pcsd/public/js/nodes-ember.js b/pcsd/public/js/nodes-ember.js
index d49feb8f8..237d7cea9 100644
--- a/pcsd/public/js/nodes-ember.js
+++ b/pcsd/public/js/nodes-ember.js
@@ -69,7 +69,7 @@ Pcs = Ember.Application.createWithMixins({
         return;
       }
       Ember.debug(""Empty Cluster Name"");
-      $.ajax({
+      ajax_wrapper({
         url: ""/clusters_overview"",
         dataType: ""json"",
         timeout: 20000,
@@ -102,7 +102,7 @@ Pcs = Ember.Application.createWithMixins({
       });
       return;
     }
-    $.ajax({
+    ajax_wrapper({
       url: ""cluster_status"",
       dataType: ""json"",
       success: function(data) {
@@ -502,7 +502,7 @@ Pcs.resourcesContainer = Ember.Object.create({
       value: value
     };
 
-    $.ajax({
+    ajax_wrapper({
       type: 'POST',
       url: get_cluster_remote_url() + 'add_meta_attr_remote',
       data: data,
@@ -523,7 +523,7 @@ Pcs.resourcesContainer = Ember.Object.create({
     if (resource_id == null) {
       return;
     }
-    $.ajax({
+    ajax_wrapper({
       type: 'POST',
       url: get_cluster_remote_url() + 'resource_start',
       data: {resource: resource_id},
@@ -549,7 +549,7 @@ Pcs.resourcesContainer = Ember.Object.create({
     if (resource_id == null) {
       return;
     }
-    $.ajax({
+    ajax_wrapper({
       type: 'POST',
       url: get_cluster_remote_url() + 'resource_stop',
       data: {resource: resource_id},
diff --git a/pcsd/public/js/pcsd.js b/pcsd/public/js/pcsd.js
index b7bc712e1..25cc1ac0c 100644
--- a/pcsd/public/js/pcsd.js
+++ b/pcsd/public/js/pcsd.js
@@ -1,4 +1,6 @@
 var pcs_timeout = 30000;
+var login_dialog_opened = false;
+var ajax_queue = Array();
 
 function curResource() {
   var obj = Pcs.resourcesContainer.get('cur_resource');
@@ -120,7 +122,7 @@ function create_group() {
       ""Create Group"": function() {
         var data = $('#add_group > form').serialize();
         var url = get_cluster_remote_url() + ""add_group"";
-        $.ajax({
+        ajax_wrapper({
           type: ""POST"",
           url: url,
           data: data,
@@ -187,7 +189,7 @@ function checkAddingNode(){
     return false;
   }
 
-  $.ajax({
+  ajax_wrapper({
     type: 'GET',
     url: '/manage/check_pcsd_status',
     data: {""nodes"": nodeName},
@@ -213,7 +215,7 @@ function checkAddingNode(){
 
 function create_node(form) {
   var dataString = $(form).serialize();
-  $.ajax({
+  ajax_wrapper({
     type: ""POST"",
     url: get_cluster_remote_url() + ""add_node_to_cluster"",
     data: dataString,
@@ -242,7 +244,7 @@ function create_resource(form, update, stonith) {
   else
     name = ""resource""
 
-  $.ajax({
+  ajax_wrapper({
     type: ""POST"",
     url: url,
     data: dataString,
@@ -482,7 +484,7 @@ function fade_in_out(id) {
 function node_link_action(link_selector, url, label) {
   var node = $.trim($(""#node_info_header_title_name"").text());
   fade_in_out(link_selector);
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: url,
     data: {""name"": node},
@@ -501,7 +503,7 @@ function setup_node_links() {
   Ember.debug(""Setup node links"");
   $(""#node_start"").click(function() {
     node_link_action(
-      ""#node_start"", get_cluster_remote_url() +""cluster_start"", ""start""
+      ""#node_start"", get_cluster_remote_url() + ""cluster_start"", ""start""
     );
   });
   $(""#node_stop"").click(function() {
@@ -534,7 +536,7 @@ function node_stop(node, force) {
   if (force) {
     data[""force""] = force;
   }
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'cluster_stop',
     data: data,
@@ -552,7 +554,7 @@ function node_stop(node, force) {
         */
         return;
       }
-      var message = ""Unable to stop node '"" + node + "" "" + ajax_simple_error(
+      var message = ""Unable to stop node '"" + node + ""' "" + ajax_simple_error(
         xhr, status, error
       );
       if (message.indexOf('--force') == -1) {
@@ -584,7 +586,7 @@ function cleanup_resource() {
     return;
   }
   fade_in_out(""#resource_cleanup_link"");
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'resource_cleanup',
     data: {""resource"": resource},
@@ -605,7 +607,7 @@ function cleanup_stonith() {
     return;
   }
   fade_in_out(""#stonith_cleanup_link"");
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'resource_cleanup',
     data: {""resource"": resource},
@@ -626,7 +628,7 @@ function checkExistingNode() {
     node = e.value;
   });
 
-  $.ajax({
+  ajax_wrapper({
     type: 'GET',
     url: '/manage/check_pcsd_status',
     data: {""nodes"": node},
@@ -650,14 +652,14 @@ function checkClusterNodes() {
     }
   });
 
-  $.ajax({
+  ajax_wrapper({
     type: 'GET',
     url: '/manage/check_pcsd_status',
     data: {""nodes"": nodes.join("","")},
     timeout: pcs_timeout,
     success: function (data) {
       mydata = jQuery.parseJSON(data);
-      $.ajax({
+      ajax_wrapper({
         type: 'GET',
         url: '/manage/get_nodes_sw_versions',
         data: {""nodes"": nodes.join("","")},
@@ -679,7 +681,7 @@ function checkClusterNodes() {
 
 function auth_nodes(dialog) {
   $(""#auth_failed_error_msg"").hide();
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: '/manage/auth_gui_against_nodes',
     data: dialog.find(""#auth_nodes_form"").serialize(),
@@ -852,7 +854,7 @@ function add_existing_dialog() {
 function update_existing_cluster_dialog(data) {
   for (var i in data) {
     if (data[i] == ""Online"") {
-      $.ajax({
+      ajax_wrapper({
         type: ""POST"",
         url: ""/manage/existingcluster"",
         timeout: pcs_timeout,
@@ -1043,7 +1045,7 @@ function update_create_cluster_dialog(nodes, version_info) {
   }
 
   if (good_nodes != 0 && cant_connect_nodes == 0 && cant_auth_nodes.length == 0 && cluster_name != """" && addr1_match == 1 && versions_check_ok == 1) {
-    $.ajax({
+    ajax_wrapper({
       type: ""POST"",
       url: ""/manage/newcluster"",
       timeout: pcs_timeout,
@@ -1201,7 +1203,7 @@ function load_agent_form(resource_id, stonith) {
 
   var data = {resource: resource_id};
 
-  $.ajax({
+  ajax_wrapper({
     type: 'GET',
     url: url,
     data: data,
@@ -1241,7 +1243,7 @@ function remove_cluster(ids) {
   $.each(ids, function(_, cluster) {
     data[ ""clusterid-"" + cluster] = true;
   });
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: '/manage/removecluster',
     data: data,
@@ -1266,7 +1268,7 @@ function remove_nodes(ids, force) {
     data[""force""] = force;
   }
 
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'remove_nodes',
     data: data,
@@ -1321,7 +1323,7 @@ function remove_resource(ids, force) {
     }
   });
 
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'remove_resource',
     data: data,
@@ -1362,7 +1364,7 @@ function add_remove_fence_level(parent_id,remove) {
     data[""node""] = Pcs.nodesController.cur_node.name;
   }
   fade_in_out(parent_id.parent());
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'add_fence_level_remote',
     data: data,
@@ -1403,7 +1405,7 @@ function remove_node_attr(parent_id) {
   data[""value""] = """"; // empty value will remove attribute
   fade_in_out(parent_id.parent());
 
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'add_node_attr_remote',
     data: data,
@@ -1428,7 +1430,7 @@ function add_node_attr(parent_id) {
   data[""value""] = $(parent_id + "" input[name='new_node_attr_value']"").val();
   fade_in_out($(parent_id));
 
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'add_node_attr_remote',
     data: data,
@@ -1453,7 +1455,7 @@ function node_maintenance(node) {
     key: ""maintenance"",
     value: ""on""
   };
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'add_node_attr_remote',
     data: data,
@@ -1476,7 +1478,7 @@ function node_unmaintenance(node) {
     key: ""maintenance"",
     value: """"
   };
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'add_node_attr_remote',
     data: data,
@@ -1533,7 +1535,7 @@ function add_constraint(parent_id, c_type, force) {
   }
   fade_in_out($(parent_id));
 
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + (
       data['node_id'] && (data['node_id'].trim().indexOf(' ') != -1)
@@ -1592,7 +1594,7 @@ function add_constraint_set(parent_id, c_type, force) {
   }
   fade_in_out($(parent_id))
 
-  $.ajax({
+  ajax_wrapper({
     type: ""POST"",
     url: get_cluster_remote_url() + ""add_constraint_set_remote"",
     data: data,
@@ -1641,7 +1643,7 @@ function reset_constraint_set_form(parent_id) {
 
 function remove_constraint(id) {
   fade_in_out($(""[constraint_id='""+id+""']"").parent());
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'remove_constraint_remote',
     data: {""constraint_id"": id},
@@ -1660,7 +1662,7 @@ function remove_constraint(id) {
 
 function remove_constraint_rule(id) {
   fade_in_out($(""[rule_id='""+id+""']"").parent());
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'remove_constraint_rule_remote',
     data: {""rule_id"": id},
@@ -1681,7 +1683,7 @@ function add_acl_role(form) {
   var data = {}
   data[""name""] = $(form).find(""input[name='name']"").val().trim();
   data[""description""] = $(form).find(""input[name='description']"").val().trim();
-  $.ajax({
+  ajax_wrapper({
     type: ""POST"",
     url: get_cluster_remote_url() + ""add_acl_role"",
     data: data,
@@ -1704,7 +1706,7 @@ function remove_acl_roles(ids) {
   for (var i = 0; i < ids.length; i++) {
     data[""role-"" + i] = ids[i];
   }
-  $.ajax({
+  ajax_wrapper({
     type: ""POST"",
     url: get_cluster_remote_url() + ""remove_acl_roles"",
     data: data,
@@ -1747,7 +1749,7 @@ function add_acl_item(parent_id, item_type) {
       break;
   }
   fade_in_out($(parent_id));
-  $.ajax({
+  ajax_wrapper({
     type: ""POST"",
     url: get_cluster_remote_url() + 'add_acl',
     data: data,
@@ -1783,7 +1785,7 @@ function remove_acl_item(id,item) {
       break;
   }
 
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'remove_acl',
     data: data,
@@ -1809,7 +1811,7 @@ function update_cluster_settings() {
     data[prop.get(""form_name"")] = prop.get(""cur_val"");
   });
   show_loading_screen();
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'update_cluster_settings',
     data: data,
@@ -1831,7 +1833,7 @@ function update_cluster_settings() {
 function refresh_cluster_properties() {
   Pcs.settingsController.set(""filter"", """");
   $(""#cluster_properties button"").prop(""disabled"", true);
-  $.ajax({
+  ajax_wrapper({
     url: get_cluster_remote_url() + ""cluster_properties"",
     timeout: pcs_timeout,
     dataType: ""json"",
@@ -2032,7 +2034,7 @@ function htmlEncode(s)
 function fix_auth_of_cluster() {
   show_loading_screen();
   var clustername = Pcs.clusterController.cur_cluster.name;
-  $.ajax({
+  ajax_wrapper({
     url: get_cluster_remote_url(clustername) + ""fix_auth_of_cluster"",
     type: ""POST"",
     success: function(data) {
@@ -2129,7 +2131,7 @@ function resource_master(resource_id) {
     return;
   }
   show_loading_screen();
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'resource_master',
     data: {resource_id: resource_id},
@@ -2151,7 +2153,7 @@ function resource_clone(resource_id) {
     return;
   }
   show_loading_screen();
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'resource_clone',
     data: {resource_id: resource_id},
@@ -2177,7 +2179,7 @@ function resource_unclone(resource_id) {
   if (resource_obj.get('class_type') == 'clone') {
     resource_id = resource_obj.get('member').get('id');
   }
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'resource_unclone',
     data: {resource_id: resource_id},
@@ -2199,7 +2201,7 @@ function resource_ungroup(group_id) {
     return;
   }
   show_loading_screen();
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'resource_ungroup',
     data: {group_id: group_id},
@@ -2236,7 +2238,7 @@ function resource_change_group(resource_id, group_id) {
     }
   }
 
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: get_cluster_remote_url() + 'resource_change_group',
     data: data,
@@ -2265,6 +2267,137 @@ function ajax_simple_error(xhr, status, error) {
   return message;
 }
 
+function ajax_wrapper(options) {
+  // get original callback functions
+  var error_original = function(xhr, status, error) {};
+  if (options.error) {
+    error_original = options.error;
+  }
+  var complete_original = function(xhr, status) {};
+  if (options.complete) {
+    complete_original = options.complete;
+  }
+
+  // prepare new callback functions
+  var options_new = $.extend(true, {}, options);
+  // display login dialog on error
+  options_new.error = function(xhr, status, error) {
+    if (xhr.status == 401) {
+      ajax_queue.push(options);
+      if (!login_dialog_opened) {
+        login_dialog(function() {
+          var item;
+          while (ajax_queue.length > 0) {
+            item = ajax_queue.shift();
+            ajax_wrapper(item);
+          }
+        });
+      }
+    }
+    else {
+      error_original(xhr, status, error);
+    }
+  }
+  // Do not run complete function if login dialog is open.
+  // Once user is logged in again, the original complete function will be run
+  // in repeated ajax call run by login dialog on success.
+  options_new.complete = function(xhr, status) {
+    if (xhr.status == 401) {
+      return;
+    }
+    else {
+      complete_original(xhr, status);
+    }
+  }
+
+  // run ajax request or put it into a queue
+  if (login_dialog_opened) {
+    ajax_queue.push(options);
+  }
+  else {
+    $.ajax(options_new);
+  }
+}
+
+function login_dialog(on_success) {
+  var ok_button_id = ""login_form_ok"";
+  var ok_button_selector = ""#"" + ok_button_id;
+  var buttons = [
+    {
+      text: ""Log In"",
+      id: ok_button_id,
+      click: function() {
+        var me = $(this);
+        var my_dialog = $(this).dialog()
+        my_dialog.find(""#login_form_denied"").hide();
+        $(ok_button_selector).button(""option"", ""disabled"", true);
+        $.ajax({
+          type: ""POST"",
+          url: ""/login"",
+          data: my_dialog.find(""#login_form"").serialize(),
+          complete: function() {
+            $(ok_button_selector).button(""option"", ""disabled"", false);
+          },
+          success: function() {
+            my_dialog.find(""#login_form_username"").val("""");
+            my_dialog.find(""#login_form_password"").val("""");
+            me.dialog(""destroy"");
+            login_dialog_opened = false;
+            on_success();
+          },
+          error: function(xhr, status, error) {
+            if (xhr.status == 401) {
+              my_dialog.find(""#login_form_denied"").show();
+              my_dialog.find(""#login_form_password"").val("""");
+            }
+            else {
+              alert(""Login error "" + ajax_simple_error(xhr, status, error));
+            }
+          },
+        });
+      },
+    },
+    {
+      text: ""Cancel"",
+      id: ""login_form_cancel"",
+      // cancel will close the dialog the same way as X button does
+      click: function() {
+        $(this).dialog(""close"");
+      },
+    },
+  ];
+  var dialog_obj = $(""#dialog_login"").dialog({
+    title: ""Log In"",
+    modal: true,
+    resizable: true,
+    width: 400,
+    buttons: buttons,
+    open: function(event, ui) {
+      login_dialog_opened = true;
+    },
+    create: function(event, ui) {
+      login_dialog_opened = true;
+    },
+    // make sure to logout the user on dialog close
+    close: function(event, ui) {
+      login_dialog_opened = false;
+      location = ""/logout"";
+    },
+  });
+  dialog_obj.find(""#login_form_denied"").hide();
+  // submit on enter
+  dialog_obj.keypress(function(e) {
+    if (
+      e.keyCode == $.ui.keyCode.ENTER
+      &&
+      !dialog_obj.parent().find(ok_button_selector).button(""option"", ""disabled"")
+    ) {
+      dialog_obj.parent().find(ok_button_selector).trigger(""click"");
+      return false;
+    }
+  });
+}
+
 var permissions_current_cluster;
 
 function permissions_load_all() {
@@ -2303,7 +2436,7 @@ function permissions_load_all() {
 
 function permissions_load_cluster(cluster_name, callback) {
   var element_id = ""permissions_cluster_"" + cluster_name;
-  $.ajax({
+  ajax_wrapper({
     type: ""GET"",
     url: ""/permissions_cluster_form/"" + cluster_name,
     timeout: pcs_timeout,
@@ -2349,7 +2482,7 @@ function permissions_show_cluster(cluster_name, list_row) {
 function permissions_save_cluster(form) {
   var dataString = $(form).serialize();
   var cluster_name = permissions_get_clustername(form);
-  $.ajax({
+  ajax_wrapper({
     type: ""POST"",
     url: get_cluster_remote_url(cluster_name) + ""permissions_save"",
     timeout: pcs_timeout,
@@ -2562,7 +2695,7 @@ function set_utilization(type, entity_id, name, value) {
   } else return false;
   var url = get_cluster_remote_url() + ""set_"" + type + ""_utilization"";
 
-  $.ajax({
+  ajax_wrapper({
     type: 'POST',
     url: url,
     data: data,
diff --git a/pcsd/views/_dialogs.erb b/pcsd/views/_dialogs.erb
index 40daaf2ab..8bfa5c697 100644
--- a/pcsd/views/_dialogs.erb
+++ b/pcsd/views/_dialogs.erb
@@ -1,3 +1,22 @@
+<div id=""dialog_login"" style=""display:none;"">
+  <form id=""login_form"">
+    <div>Your session has expired. Log in again, please.</div>
+    <div id=""login_form_denied"" style=""color:red; display:none;"">
+      Bad username or password
+    </div>
+    <table>
+      <tr>
+        <td><label for=""login_form_username"">Username:</label></td>
+        <td><input type=""text"" id=""login_form_username"" name=""username""></td>
+      </tr>
+      <tr>
+        <td><label for=""login_form_password"">Password:</label></td>
+        <td><input type=""password"" id=""login_form_password"" name=""password""></td>
+      </tr>
+    </table>
+  </form>
+</div>
+
 <div id=""auth_nodes"" style=""display:none;"">
   <form id=""auth_nodes_form"">
     Enter password for user 'hacluster' to authenticate nodes.<br>
diff --git a/pcsd/views/permissions.erb b/pcsd/views/permissions.erb
index 1e38d7eb8..bfa5638fc 100644
--- a/pcsd/views/permissions.erb
+++ b/pcsd/views/permissions.erb
@@ -52,3 +52,4 @@
     </td>
   </tr>
 </table>
+<%= erb :_dialogs %>"
CVE-2016-10167,"From fe9ed49dafa993e3af96b6a5a589efeea9bfb36f Mon Sep 17 00:00:00 2001
From: ""Christoph M. Becker"" <cmbecker69@gmx.de>
Date: Tue, 16 Aug 2016 18:23:36 +0200
Subject: [PATCH] Fix DOS vulnerability in gdImageCreateFromGd2Ctx()

We must not pretend that there are image data if there are none. Instead
we fail reading the image file gracefully.
---
 src/gd_gd2.c                     |  14 ++++++--------
 tests/gd2/.gitignore             |   1 +
 tests/gd2/CMakeLists.txt         |   1 +
 tests/gd2/Makemodule.am          |   7 +++++--
 tests/gd2/too_few_image_data.c   |  22 ++++++++++++++++++++++
 tests/gd2/too_few_image_data.gd2 | Bin 0 -> 1050 bytes
 6 files changed, 35 insertions(+), 10 deletions(-)
 create mode 100644 tests/gd2/too_few_image_data.c
 create mode 100644 tests/gd2/too_few_image_data.gd2

diff --git a/src/gd_gd2.c b/src/gd_gd2.c
index 3c7168260..d07828c78 100644
--- a/src/gd_gd2.c
+++ b/src/gd_gd2.c
@@ -503,18 +503,16 @@ BGD_DECLARE(gdImagePtr) gdImageCreateFromGd2Ctx (gdIOCtxPtr in)
 
 						if (im->trueColor) {
 							if (!gdGetInt (&im->tpixels[y][x], in)) {
-								/*printf(""EOF while reading\n""); */
-								/*gdImageDestroy(im); */
-								/*return 0; */
-								im->tpixels[y][x] = 0;
+								gd_error(""gd2: EOF while reading\n"");
+								gdImageDestroy(im);
+								return NULL;
 							}
 						} else {
 							int ch;
 							if (!gdGetByte (&ch, in)) {
-								/*printf(""EOF while reading\n""); */
-								/*gdImageDestroy(im); */
-								/*return 0; */
-								ch = 0;
+								gd_error(""gd2: EOF while reading\n"");
+								gdImageDestroy(im);
+								return NULL;
 							}
 							im->pixels[y][x] = ch;
 						}
diff --git a/tests/gd2/.gitignore b/tests/gd2/.gitignore
index 136a2d50f..39d8bf4eb 100644
--- a/tests/gd2/.gitignore
+++ b/tests/gd2/.gitignore
@@ -6,3 +6,4 @@
 /gd2_read
 /gd2_read_corrupt
 /php_bug_72339
+/too_few_image_data
diff --git a/tests/gd2/CMakeLists.txt b/tests/gd2/CMakeLists.txt
index 8fcc90652..5a61d113a 100644
--- a/tests/gd2/CMakeLists.txt
+++ b/tests/gd2/CMakeLists.txt
@@ -7,6 +7,7 @@ LIST(APPEND TESTS_FILES
 	php_bug_72339
 	gd2_read
 	gd2_read_corrupt
+	too_few_image_data
 )
 
 ADD_GD_TESTS()
diff --git a/tests/gd2/Makemodule.am b/tests/gd2/Makemodule.am
index d69aee024..c1fbf440a 100644
--- a/tests/gd2/Makemodule.am
+++ b/tests/gd2/Makemodule.am
@@ -3,7 +3,8 @@ libgd_test_programs += \
 	gd2/bug00309 \
 	gd2/gd2_empty_file \
 	gd2/php_bug_72339 \
-	gd2/gd2_read_corrupt
+	gd2/gd2_read_corrupt \
+	gd2/too_few_image_data
 
 if HAVE_LIBZ
 libgd_test_programs += \
@@ -23,4 +24,6 @@ EXTRA_DIST += \
 	gd2/conv_test_exp.png \
 	gd2/empty.gd2 \
 	gd2/invalid_header.gd2 \
-	gd2/invalid_neg_size.gd2
+	gd2/invalid_neg_size.gd2 \
+	gd2/php_bug_72339_exp.gd2 \
+	gd2/too_few_image_data.gd2
diff --git a/tests/gd2/too_few_image_data.c b/tests/gd2/too_few_image_data.c
new file mode 100644
index 000000000..3153a0800
--- /dev/null
+++ b/tests/gd2/too_few_image_data.c
@@ -0,0 +1,22 @@
+/*
+too_few_image_data.gd2 claims to have a size of 12336x48 pixels, but doesn't
+provide as much image data. We test that gdImageCreateFromGd2Ctx() returns NULL
+in this case.
+*/
+
+#include ""gd.h""
+#include ""gdtest.h""
+
+int main()
+{
+    gdImagePtr im;
+    FILE *fp;
+
+    fp = gdTestFileOpen2(""gd2"", ""too_few_image_data.gd2"");
+    gdTestAssert(fp != NULL);
+    im = gdImageCreateFromGd2(fp);
+    gdTestAssert(im == NULL);
+    fclose(fp);
+
+    return gdNumFailures();
+}
diff --git a/tests/gd2/too_few_image_data.gd2 b/tests/gd2/too_few_image_data.gd2
new file mode 100644
index 0000000000000000000000000000000000000000..1c797d1acfae114be5505962f9f3201f01bca420
GIT binary patch
literal 1050
kcmYdKF=Aj~GB98;U@~A}1kqrw!6+CFfzc2c!6Cp30J@*U8UO$Q

literal 0
HcmV?d00001"
CVE-2016-7536,"From 478cce544fdf1de882d78381768458f397964453 Mon Sep 17 00:00:00 2001
From: dirk <dirk@git.imagemagick.org>
Date: Sun, 14 Feb 2016 08:40:26 +0100
Subject: [PATCH] Fixed SEGV reported in
 https://github.com/ImageMagick/ImageMagick/issues/130

---
 magick/profile.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/magick/profile.c b/magick/profile.c
index 76d2ec4baa6..35cdd32ed43 100644
--- a/magick/profile.c
+++ b/magick/profile.c
@@ -1444,7 +1444,8 @@ static void WriteTo8BimProfile(Image *image,const char *name,
     count=(ssize_t) value;
     if ((count & 0x01) != 0)
       count++;
-    if ((p > (datum+length-count)) || (count > (ssize_t) length))
+    if ((count < 0) || (p > (datum+length-count)) ||
+        (count > (ssize_t) length))
       break;
     if (id != profile_id)
       p+=count;"
CVE-2016-10044,"From 22f6b4d34fcf039c63a94e7670e0da24f8575a5a Mon Sep 17 00:00:00 2001
From: Jann Horn <jann@thejh.net>
Date: Fri, 16 Sep 2016 00:31:22 +0200
Subject: [PATCH] aio: mark AIO pseudo-fs noexec

This ensures that do_mmap() won't implicitly make AIO memory mappings
executable if the READ_IMPLIES_EXEC personality flag is set.  Such
behavior is problematic because the security_mmap_file LSM hook doesn't
catch this case, potentially permitting an attacker to bypass a W^X
policy enforced by SELinux.

I have tested the patch on my machine.

To test the behavior, compile and run this:

    #define _GNU_SOURCE
    #include <unistd.h>
    #include <sys/personality.h>
    #include <linux/aio_abi.h>
    #include <err.h>
    #include <stdlib.h>
    #include <stdio.h>
    #include <sys/syscall.h>

    int main(void) {
        personality(READ_IMPLIES_EXEC);
        aio_context_t ctx = 0;
        if (syscall(__NR_io_setup, 1, &ctx))
            err(1, ""io_setup"");

        char cmd[1000];
        sprintf(cmd, ""cat /proc/%d/maps | grep -F '/[aio]'"",
            (int)getpid());
        system(cmd);
        return 0;
    }

In the output, ""rw-s"" is good, ""rwxs"" is bad.

Signed-off-by: Jann Horn <jann@thejh.net>
Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>
---
 fs/aio.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/fs/aio.c b/fs/aio.c
index fb8e45b88cd4ec..4fe81d1c60f962 100644
--- a/fs/aio.c
+++ b/fs/aio.c
@@ -239,7 +239,12 @@ static struct dentry *aio_mount(struct file_system_type *fs_type,
 	static const struct dentry_operations ops = {
 		.d_dname	= simple_dname,
 	};
-	return mount_pseudo(fs_type, ""aio:"", NULL, &ops, AIO_RING_MAGIC);
+	struct dentry *root = mount_pseudo(fs_type, ""aio:"", NULL, &ops,
+					   AIO_RING_MAGIC);
+
+	if (!IS_ERR(root))
+		root->d_sb->s_iflags |= SB_I_NOEXEC;
+	return root;
 }
 
 /* aio_setup"
CVE-2016-7533,"From bef1e4f637d8f665bc133a9c6d30df08d983bc3a Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Fri, 5 Feb 2016 21:20:42 -0500
Subject: [PATCH] https://github.com/ImageMagick/ImageMagick/issues/120

---
 coders/wpg.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/coders/wpg.c b/coders/wpg.c
index 964530533ea..b01dcf9cc63 100644
--- a/coders/wpg.c
+++ b/coders/wpg.c
@@ -1331,7 +1331,7 @@ static Image *ReadWPGImage(const ImageInfo *image_info,
                   {
                     ldblk=(ssize_t) ((bpp*image->columns+7)/8);
                     BImgBuff=(unsigned char *) AcquireQuantumMemory((size_t)
-                      ldblk,sizeof(*BImgBuff));
+                      ldblk+1,sizeof(*BImgBuff));
                     if (BImgBuff == (unsigned char *) NULL)
                       goto NoMemory;"
CVE-2016-10158,"From 1cda0d7c2ffb62d8331c64e703131d9cabdc03ea Mon Sep 17 00:00:00 2001
From: Stanislav Malyshev <stas@php.net>
Date: Sat, 31 Dec 2016 19:31:49 -0800
Subject: [PATCH] Fix bug #73737 FPE when parsing a tag format

---
 ext/exif/exif.c              |   2 +-
 ext/exif/tests/bug73737.phpt |  12 ++++++++++++
 ext/exif/tests/bug73737.tiff | Bin 0 -> 48 bytes
 3 files changed, 13 insertions(+), 1 deletion(-)
 create mode 100644 ext/exif/tests/bug73737.phpt
 create mode 100644 ext/exif/tests/bug73737.tiff

diff --git a/ext/exif/exif.c b/ext/exif/exif.c
index 8b0e34c10dc8a..83daee6f54f5d 100644
--- a/ext/exif/exif.c
+++ b/ext/exif/exif.c
@@ -1303,7 +1303,7 @@ static size_t exif_convert_any_to_int(void *value, int format, int motorola_inte
 			if (s_den == 0) {
 				return 0;
 			} else {
-				return php_ifd_get32s(value, motorola_intel) / s_den;
+				return (size_t)((double)php_ifd_get32s(value, motorola_intel) / s_den);
 			}
 
 		case TAG_FMT_SSHORT:    return php_ifd_get16u(value, motorola_intel);
diff --git a/ext/exif/tests/bug73737.phpt b/ext/exif/tests/bug73737.phpt
new file mode 100644
index 0000000000000..21eaf80585bc5
--- /dev/null
+++ b/ext/exif/tests/bug73737.phpt
@@ -0,0 +1,12 @@
+--TEST--
+Bug #73737 (Crash when parsing a tag format)
+--SKIPIF--
+<?php if (!extension_loaded('exif')) print 'skip exif extension not available';?>
+--FILE--
+<?php
+	$exif = exif_thumbnail(__DIR__ . '/bug73737.tiff');
+	var_dump($exif);
+?>
+--EXPECTF--
+Warning: exif_thumbnail(bug73737.tiff): Error in TIFF: filesize(x0030) less than start of IFD dir(x10102) in %s line %d
+bool(false)
diff --git a/ext/exif/tests/bug73737.tiff b/ext/exif/tests/bug73737.tiff
new file mode 100644
index 0000000000000000000000000000000000000000..2cb036fc4730502a3e8041ab24ab12a2ad0b0327
GIT binary patch
literal 48
ocmebEWzb?^VBlb2Wb|TS2C_gv49H_(-~urlfcQTUfY=}a0A>IMx&QzG

literal 0
HcmV?d00001"
CVE-2016-7534,"From 430403b0029b37decf216d57f810899cab2317dd Mon Sep 17 00:00:00 2001
From: Cristy <urban-warrior@imagemagick.org>
Date: Sun, 7 Feb 2016 15:13:08 -0500
Subject: [PATCH] https://github.com/ImageMagick/ImageMagick/issues/126

---
 MagickCore/quantum-import.c | 2 +-
 MagickCore/quantum.c        | 4 +++-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/MagickCore/quantum-import.c b/MagickCore/quantum-import.c
index b04c82e7245..a0085f3b734 100644
--- a/MagickCore/quantum-import.c
+++ b/MagickCore/quantum-import.c
@@ -1421,7 +1421,7 @@ static void ImportCbYCrYQuantum(const Image *image,QuantumInfo *quantum_info,
 
           n=0;
           quantum=0;
-          for (x=0; x < (ssize_t) number_pixels; x+=2)
+          for (x=0; x < (ssize_t) number_pixels; x+=4)
           {
             for (i=0; i < 4; i++)
             {
diff --git a/MagickCore/quantum.c b/MagickCore/quantum.c
index 9d8190a9030..a594bb6fc25 100644
--- a/MagickCore/quantum.c
+++ b/MagickCore/quantum.c
@@ -321,6 +321,9 @@ MagickExport size_t GetQuantumExtent(const Image *image,
     case BGRAQuantum: packet_size=4; break;
     case CMYKQuantum: packet_size=4; break;
     case CMYKAQuantum: packet_size=5; break;
+    case CbYCrAQuantum: packet_size=4; break;
+    case CbYCrQuantum: packet_size=3; break;
+    case CbYCrYQuantum: packet_size=4; break;
     default: break;
   }
   extent=MagickMax(image->columns,image->rows);
@@ -872,7 +875,6 @@ MagickExport void SetQuantumPack(QuantumInfo *quantum_info,
   quantum_info->pack=pack;
 }
 
-
 /*
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 %                                                                             %"
CVE-2016-2385,"From f50c9c853e7809810099c970780c30b0765b0643 Mon Sep 17 00:00:00 2001
From: Daniel-Constantin Mierla <miconda@gmail.com>
Date: Fri, 12 Feb 2016 18:04:19 +0100
Subject: [PATCH] seas: safety check for target buffer size before copying
 message in encode_msg()

- avoid buffer overflow for large SIP messages
- reported by Stelios Tsampas
---
 modules/seas/encode_msg.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/modules/seas/encode_msg.c b/modules/seas/encode_msg.c
index 06d31a32e7d..e56b5fba893 100644
--- a/modules/seas/encode_msg.c
+++ b/modules/seas/encode_msg.c
@@ -158,6 +158,7 @@ int encode_msg(struct sip_msg *msg,char *payload,int len)
 
    if(len < MAX_ENCODED_MSG + MAX_MESSAGE_LEN)
       return -1;
+
    if(parse_headers(msg,HDR_EOH_F,0)<0){
       myerror=""in parse_headers"";
       goto error;
@@ -266,6 +267,11 @@ int encode_msg(struct sip_msg *msg,char *payload,int len)
    /*j+=k;*/
    /*pkg_free(payload2);*/
    /*now we copy the actual message after the headers-meta-section*/
+
+	if(len < j + msg->len + 1) {
+   	   LM_ERR(""not enough space to encode sip message\n"");
+   	   return -1;
+	}
    memcpy(&payload[j],msg->buf,msg->len);
    LM_DBG(""msglen = %d,msg starts at %d\n"",msg->len,j);
    j=htons(j);"
CVE-2016-6903,"From e72dfcd1f258193f9aaea3591ecbdaed207661a0 Mon Sep 17 00:00:00 2001
From: Ignace Mouzannar <ignace@redhat.com>
Date: Sun, 21 Aug 2016 22:01:52 -0400
Subject: [PATCH] [security] MAJOR issue: catch ctrl escapes (Closes #149)

The was a major security issue with lshell that allows any user to
escape from lshell into bash (or any other available shell. This
was done by typing <CTRL-V><CTRL-J>bash after any allowed command.
For example:
~$ echo<CTRL-V><CTRL-J>bash

Thanks Vladislav Yarmak (@Snawoot) for reporting this major issue!
---
 lshell/sec.py           |  2 +-
 test/test_functional.py | 17 +++++++++++++++++
 2 files changed, 18 insertions(+), 1 deletion(-)

diff --git a/lshell/sec.py b/lshell/sec.py
index a6c317f..ea3561f 100644
--- a/lshell/sec.py
+++ b/lshell/sec.py
@@ -156,7 +156,7 @@ def check_secure(line, conf, strict=None, ssh=None):
     oline = line
 
     # strip all spaces/tabs
-    line = "" "".join(line.split())
+    line = line.strip()
 
     # init return code
     returncode = 0
diff --git a/test/test_functional.py b/test/test_functional.py
index f1135e1..d139e7e 100644
--- a/test/test_functional.py
+++ b/test/test_functional.py
@@ -384,6 +384,23 @@ def test_27_checksecure_awk(self):
 
         self.assertEqual(expected, result)
 
+    def test_28_catch_lnext_terminal_ctrl(self):
+        """""" F25 | test ctrl-v ctrl-j then command, forbidden/security """"""
+        self.child = pexpect.spawn('%s/bin/lshell '
+                                   '--config %s/etc/lshell.conf '
+                                   % (TOPDIR, TOPDIR))
+        self.child.expect('%s:~\$' % self.user)
+
+        expected = u'*** forbidden syntax: echo\r'
+        self.child.send('echo')
+        self.child.sendcontrol('v')
+        self.child.sendcontrol('j')
+        self.child.sendline('bash')
+        self.child.expect('%s:~\$' % self.user)
+
+        result = self.child.before.decode('utf8').split('\n')
+
+        self.assertIn(expected, result)
 
 if __name__ == '__main__':
     unittest.main()"
CVE-2016-9130,"From f6880330a8e11e804663f132867e9eb9b1f94e83 Mon Sep 17 00:00:00 2001
From: Matteo Beccati <matteo@beccati.com>
Date: Fri, 15 Jan 2016 08:08:41 +0100
Subject: [PATCH] Fix h1 reports 107550 and 107634

Persistent XSS
--------------
Johan Caluwe has reported via HackerOne two vectors for persistent XSS
Revive Adserver user interface, both requiring a trusted (non-admin) account:

1. the website name wasn't properly escaped when displayed in the
   campaign-zone.php script;
2. the banner image url for external banners wasn't properly escaped when
   displayed in most of the banner related pages.

A CVE-ID has been requested, but not assigned yet.

CWE: CWE-79
CVSSv2: 3.5 (AV:N/AC:M/Au:S/C:N/I:P/A:N)
---
 lib/max/Delivery/adRender.php                | 8 ++++----
 lib/templates/admin/campaign-zone-zones.html | 4 ++--
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/lib/max/Delivery/adRender.php b/lib/max/Delivery/adRender.php
index bf1f32251b..3c8402ada6 100644
--- a/lib/max/Delivery/adRender.php
+++ b/lib/max/Delivery/adRender.php
@@ -210,7 +210,7 @@ function MAX_adRenderImageBeacon($logUrl, $beaconId = 'beacon', $userAgent = nul
         $style = "" style='width: 0px; height: 0px;'"";
         $divEnd = '</div>';
     }
-        $beacon = ""$div<img src='"".htmlspecialchars($logUrl).""' width='0' height='0' alt=''{$style} />{$divEnd}"";
+        $beacon = ""$div<img src='"".htmlspecialchars($logUrl, ENT_QUOTES).""' width='0' height='0' alt=''{$style} />{$divEnd}"";
         return $beacon;
 }
 
@@ -249,7 +249,7 @@ function _adRenderImage(&$aBanner, $zoneId=0, $source='', $ct0='', $withText=fal
     if (!empty($clickUrl)) {  // There is a link
         $status = _adRenderBuildStatusCode($aBanner);
         //$target = !empty($aBanner['target']) ? $aBanner['target'] : '_blank';
-        $clickTag = ""<a href='$clickUrl' target='{target}'$status>"";
+        $clickTag = ""<a href='"".htmlspecialchars($clickUrl, ENT_QUOTES).""' target='{target}'$status>"";
         $clickTagEnd = '</a>';
     } else {
         $clickTag = '';
@@ -261,7 +261,7 @@ function _adRenderImage(&$aBanner, $zoneId=0, $source='', $ct0='', $withText=fal
         $width = !empty($aBanner['width']) ? $aBanner['width'] : 0;
         $height = !empty($aBanner['height']) ? $aBanner['height'] : 0;
         $alt = !empty($aBanner['alt']) ? htmlspecialchars($aBanner['alt'], ENT_QUOTES) : '';
-        $imageTag = ""$clickTag<img src='$imageUrl' width='$width' height='$height' alt='$alt' title='$alt' border='0'$imgStatus />$clickTagEnd"";
+        $imageTag = ""$clickTag<img src='"".htmlspecialchars($imageUrl, ENT_QUOTES).""' width='$width' height='$height' alt='$alt' title='$alt' border='0'$imgStatus />$clickTagEnd"";
     } else {
         $imageTag = '';
     }
@@ -324,7 +324,7 @@ function _adRenderFlash(&$aBanner, $zoneId=0, $source='', $ct0='', $withText=fal
         $status = _adRenderBuildStatusCode($aBanner);
         $target = !empty($aBanner['target']) ? $aBanner['target'] : '_blank';
         $swfParams = array('clickTARGET' => $target, 'clickTAG' => $clickUrl);
-        $clickTag = ""<a href='$clickUrl' target='$target'$status>"";
+        $clickTag = ""<a href='"".htmlspecialchars($clickUrl, ENT_QUOTES).""' target='$target'$status>"";
         $clickTagEnd = '</a>';
     } else {
         $swfParams = array();
diff --git a/lib/templates/admin/campaign-zone-zones.html b/lib/templates/admin/campaign-zone-zones.html
index 126f443da0..d1836118ce 100644
--- a/lib/templates/admin/campaign-zone-zones.html
+++ b/lib/templates/admin/campaign-zone-zones.html
@@ -63,7 +63,7 @@
         </label>
       </td>
       <td class=""link"">
-          <a title=""{t str=EditWebsite} {$website.name}"" class=""website-icon"" href=""affiliate-edit.php?affiliateid={$websiteid}"">&nbsp;</a>
+          <a title=""{t str=EditWebsite} {$website.name|escape}"" class=""website-icon"" href=""affiliate-edit.php?affiliateid={$websiteid}"">&nbsp;</a>
       </td>
       {if !empty($showStats)}
           <td></td>
@@ -82,7 +82,7 @@
         </label>
         </td>
         <td class=""link"">
-            <a title=""{t str=EditZone} {$website.name}"" class=""zone-icon"" href=""zone-edit.php?affiliateid={$websiteid}&zoneid={$zoneid}"">&nbsp;</a>
+            <a title=""{t str=EditZone} {$website.name|escape}"" class=""zone-icon"" href=""zone-edit.php?affiliateid={$websiteid}&zoneid={$zoneid}"">&nbsp;</a>
         </td>
         {if !empty($showStats)}
             {assign var=""ctr"" value=""`$zone.ctr*100`""}"
CVE-2016-6188,"From 32bb1456e23a32c7f45079c3985bf732dd0d276d Mon Sep 17 00:00:00 2001
From: Ludovic Marcotte <lmarcotte@inverse.ca>
Date: Tue, 16 Feb 2016 16:28:11 -0500
Subject: [PATCH] (feat) attachment size upload using WOMaxUploadSize (fixes
 #3510 and #3135)

---
 NEWS                        | 4 ++++
 UI/MailerUI/UIxMailEditor.m | 6 ++++++
 2 files changed, 10 insertions(+)

diff --git a/NEWS b/NEWS
index e8bedbf2aa..a508400bea 100644
--- a/NEWS
+++ b/NEWS
@@ -1,6 +1,10 @@
 2.3.9 (2016-XX-XX)
 ------------------
 
+New features
+ - you can now limit the file upload size using the WOMaxUploadSize
+   configuration parameter (integer value in kilobytes) (#3510, #3135)
+
 Enhancements
  - allow resources to prevent invitations (#3410)
  - now support EAS MIME truncation
diff --git a/UI/MailerUI/UIxMailEditor.m b/UI/MailerUI/UIxMailEditor.m
index fcc0285ee3..661bc1ecff 100644
--- a/UI/MailerUI/UIxMailEditor.m
+++ b/UI/MailerUI/UIxMailEditor.m
@@ -593,6 +593,12 @@ - (NSException *) _saveAttachments
   if ([[mimeType type] isEqualToString: @""multipart""])
     {
       httpBody = [[request httpRequest] body];
+
+      // We got an exception from SOPE - most likely due to
+      // WOMaxUploadSize being reached.
+      if ([httpBody isKindOfClass: [NSException class]])
+        return httpBody;
+
       filenames = [self _scanAttachmentFilenamesInRequest: httpBody];
 
       co = [self clientObject];"
CVE-2016-2138,"From e6587ec598902763110b70c8bd0a72f7951b4997 Mon Sep 17 00:00:00 2001
From: ikoniaris <ikoniaris@gmail.com>
Date: Thu, 18 Jun 2015 02:15:27 +0100
Subject: [PATCH] Block XSS in wget commands (file links)

---
 class/KippoInput.class.php | 2 +-
 include/play.php           | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/class/KippoInput.class.php b/class/KippoInput.class.php
index 36eef7c..34f3279 100644
--- a/class/KippoInput.class.php
+++ b/class/KippoInput.class.php
@@ -444,7 +444,7 @@ public function printWgetCommands()
                 echo '<td>' . $counter . '</td>';
                 echo '<td>' . $row['timestamp'] . '</td>';
                 echo '<td>' . xss_clean($row['input']) . '</td>';
-                $file_link = explode("" "", trim($row['file']))[0];
+                $file_link = explode("" "", trim(xss_clean($row['file'])))[0];
                 // If the link has no ""http://"" in front, then add it
                 if (substr(strtolower($file_link), 0, 4) !== 'http') {
                     $file_link = 'http://' . $file_link;
diff --git a/include/play.php b/include/play.php
index 1f5ad5e..0da4223 100644
--- a/include/play.php
+++ b/include/play.php
@@ -123,7 +123,7 @@
                     echo '<td>' . $counter . '</td>';
                     echo '<td>' . $row['timestamp'] . '</td>';
                     echo '<td>' . xss_clean($row['input']) . '</td>';
-                    $file_link = trim($row['file']);
+                    $file_link = explode("" "", trim(xss_clean($row['file'])))[0];
                     // If the link has no ""http://"" in front, then add it
                     if (substr(strtolower($file_link), 0, 4) !== 'http') {
                         $file_link = 'http://' . $file_link;"
CVE-2016-6560,"From 5aaab1a49679c26dbcb6fb6dc25799950d70cc71 Mon Sep 17 00:00:00 2001
From: Robert Mustacchi <rm@joyent.com>
Date: Thu, 20 Oct 2016 23:50:58 +0000
Subject: [PATCH] 7488 bcopy and bzero should mind signed bits Reviewed by:
 Jerry Jelinek <jerry.jelinek@joyent.com> Reviewed by: Patrick Mooney
 <patrick.mooney@joyent.com> Approved by: Richard Lowe <richlowe@richlowe.net>

---
 usr/src/uts/intel/ia32/ml/copy.s | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/usr/src/uts/intel/ia32/ml/copy.s b/usr/src/uts/intel/ia32/ml/copy.s
index 35414743a91..7593de374e4 100644
--- a/usr/src/uts/intel/ia32/ml/copy.s
+++ b/usr/src/uts/intel/ia32/ml/copy.s
@@ -36,7 +36,7 @@
 /*         All Rights Reserved						*/
 
 /*
- * Copyright 2015 Joyent, Inc.
+ * Copyright 2016 Joyent, Inc.
  */
 
 #include <sys/errno.h>
@@ -470,7 +470,7 @@ bcopy(const void *from, void *to, size_t count)
 do_copy:
 #define	L(s) .bcopy/**/s
 	cmpq	$0x50, %rdx		/* 80 */
-	jge	bcopy_ck_size
+	jae	bcopy_ck_size
 
 	/*
 	 * Performance data shows many caller's copy small buffers. So for
@@ -869,7 +869,7 @@ bcopy_patch_end:
 	.globl bcopy_ck_size
 bcopy_ck_size:
 	cmpq	$BCOPY_DFLT_REP, %rdx
-	jge	L(use_rep)
+	jae	L(use_rep)
 
 	/*
 	 * Align to a 8-byte boundary. Avoids penalties from unaligned stores
@@ -927,7 +927,7 @@ L(aligned_loop):
 	mov	%r8, 0x30(%rsi)
 	mov	%r10, 0x38(%rsi)
 	lea	0x40(%rsi), %rsi
-	jge	L(aligned_loop)
+	jae	L(aligned_loop)
 
 	/*
 	 * Copy remaining bytes (0-63)
@@ -1158,7 +1158,7 @@ do_zero:
 	xorl	%eax, %eax
 
 	cmpq	$0x50, %rsi		/* 80 */
-	jge	L(ck_align)
+	jae	L(ck_align)
 
 	/*
 	 * Performance data shows many caller's are zeroing small buffers. So
@@ -1412,7 +1412,7 @@ L(ck_align):
 	 */
 L(aligned_now):
 	cmp	$BZERO_USE_REP, %rsi
-	jg	L(use_rep)
+	ja	L(use_rep)
 
 	/*
 	 * zero 64-bytes per loop
@@ -1430,7 +1430,7 @@ L(bzero_loop):
 	movq	%rax, 0x30(%rdi) 
 	movq	%rax, 0x38(%rdi) 
 	leaq	0x40(%rdi), %rdi
-	jge	L(bzero_loop)
+	jae	L(bzero_loop)
 
 	/*
 	 * Clear any remaining bytes.."
