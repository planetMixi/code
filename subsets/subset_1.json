{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":1098,
            "vuln_id":"GHSA-7x2h-3v2v-24p9",
            "cwe_id":"{'CWE-352'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/63447b369973724f0d352a006f25af6ff71ae292'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery in microweber microweber version 1.2.10 and prior is vulnerable to cross-site request forgery.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/63447b369973724f0d352a006f25af6ff71ae292",
            "commit_sha":"63447b369973724f0d352a006f25af6ff71ae292",
            "patch":"SINGLE",
            "chain_ord":"['63447b369973724f0d352a006f25af6ff71ae292']",
            "before_first_fix_commit":"{'d61ad9db07ef09652a3deb24c26274da2ded1493'}",
            "last_fix_commit":"63447b369973724f0d352a006f25af6ff71ae292",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/02\/2022, 11:06:34",
            "message":"Update api.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/MicroweberPackages\/Content\/routes\/api.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/63447b369973724f0d352a006f25af6ff71ae292\/src%2FMicroweberPackages%2FContent%2Froutes%2Fapi.php', 'patch': \"@@ -75,7 +75,7 @@\\n \\n         Route::post('content\/delete', function (\\\\Illuminate\\\\Http\\\\Request $request) {\\n             return mw()->content_manager->helpers->delete($request->all());\\n-        });\\n+        }); \\n \\n         Route::get('content\/get_link_admin', function (\\\\Illuminate\\\\Http\\\\Request $request) {\"}}",
            "message_norm":"update api.php",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Content\/routes\/api.php'])",
            "num_files":1.0
        },
        {
            "index":754,
            "vuln_id":"GHSA-65f3-3278-7m65",
            "cwe_id":"{'CWE-285', 'CWE-863'}",
            "score":8.2,
            "chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/64102be2c90e1b47dbdd379873ba76c80d4b0e78'}",
            "dataset":"osv",
            "summary":"Improper Authorization in Gogs ### Impact\n\nExpired PAM accounts and accounts with expired passwords are continued to be seen as valid. Installations use PAM as authentication sources are affected.\n\n### Patches\n\nExpired PAM accounts and accounts with expired passwords are no longer being seen as valid. Users should upgrade to 0.12.5 or the latest 0.13.0+dev.\n\n### Workarounds\n\nIn addition to marking PAM accounts as expired, also disable\/lock them. Running `usermod -L <username>` will add an exclamation mark to the password hash and would result in wrong passwords responses when trying to login. \n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/ea82cfc9-b55c-41fe-ae58-0d0e0bd7ab62\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https:\/\/github.com\/gogs\/gogs\/issues\/6810.",
            "published_date":"2022-03-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/gogs\/gogs",
            "commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/64102be2c90e1b47dbdd379873ba76c80d4b0e78",
            "commit_sha":"64102be2c90e1b47dbdd379873ba76c80d4b0e78",
            "patch":"SINGLE",
            "chain_ord":"['64102be2c90e1b47dbdd379873ba76c80d4b0e78']",
            "before_first_fix_commit":"{'91f2cde5e95f146bfe4765e837e7282df6c7cabb'}",
            "last_fix_commit":"64102be2c90e1b47dbdd379873ba76c80d4b0e78",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/08\/2022, 12:02:01",
            "message":"security: fix improper PAM authorization handling (#6819)\n\nCo-authored-by: Joe Chen <jc@unknwon.io>\n# Conflicts:\n#\tCHANGELOG.md\n#\tinternal\/auth\/pam\/pam.go",
            "author":"ysf",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'internal\/auth\/pam\/pam.go': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/64102be2c90e1b47dbdd379873ba76c80d4b0e78\/internal%2Fauth%2Fpam%2Fpam.go', 'patch': '@@ -27,9 +27,9 @@ func PAMAuth(serviceName, userName, passwd string) error {\\n \\t\\treturn err\\n \\t}\\n \\n-\\tif err = t.Authenticate(0); err != nil {\\n+\\terr = t.Authenticate(0)\\n+\\tif err != nil {\\n \\t\\treturn err\\n \\t}\\n-\\n-\\treturn nil\\n+\\treturn t.AcctMgmt(0)\\n }'}}",
            "message_norm":"security: fix improper pam authorization handling (#6819)\n\nco-authored-by: joe chen <jc@unknwon.io>\n# conflicts:\n#\tchangelog.md\n#\tinternal\/auth\/pam\/pam.go",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('fix', 'ACTION', ''), ('#6819', 'ISSUE', ''), ('jc@unknwon.io', 'EMAIL', ''), ('auth', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['internal\/auth\/pam\/pam.go'])",
            "num_files":1.0
        },
        {
            "index":3281,
            "vuln_id":"GHSA-whr9-vfh2-7hm6",
            "cwe_id":"{'CWE-787'}",
            "score":4.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/79865b542f9ffdc9caeb255631f7c56f1d4b6517'}",
            "dataset":"osv",
            "summary":"Memory corruption in `DrawBoundingBoxesV2` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGradWithArgmax` can cause reads outside of bounds of heap allocated data if attacker supplies specially crafted inputs:\n\n```python\nimport tensorflow as tf\n\nimages = tf.fill([10, 96, 0, 1], 0.)\nboxes = tf.fill([10, 53, 0], 0.)\ncolors = tf.fill([0, 1], 0.)\n\ntf.raw_ops.DrawBoundingBoxesV2(images=images, boxes=boxes, colors=colors)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/31bd5026304677faa8a0b77602c6154171b9aec1\/tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc#L116-L130) assumes that the last element of `boxes` input is 4, as required by [the op](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/DrawBoundingBoxesV2). Since this is not checked attackers passing values less than 4 can write outside of bounds of heap allocated objects and cause memory corruption:\n\n```cc \nconst auto tboxes = boxes.tensor<T, 3>();\nfor (int64 bb = 0; bb < num_boxes; ++bb) {\n  ...\n  const int64 min_box_row = static_cast<float>(tboxes(b, bb, 0)) * (height - 1);\n  const int64 max_box_row = static_cast<float>(tboxes(b, bb, 2)) * (height - 1);\n  const int64 min_box_col = static_cast<float>(tboxes(b, bb, 1)) * (width - 1);\n  const int64 max_box_col = static_cast<float>(tboxes(b, bb, 3)) * (width - 1);\n  ...\n}\n``` \n\nIf the last dimension in `boxes` is less than 4, accesses similar to `tboxes(b, bb, 3)` will access data outside of bounds. Further during code execution there are also writes to these indices.\n\n### Patches\nWe have patched the issue in GitHub commit [79865b542f9ffdc9caeb255631f7c56f1d4b6517](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/79865b542f9ffdc9caeb255631f7c56f1d4b6517).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/79865b542f9ffdc9caeb255631f7c56f1d4b6517",
            "commit_sha":"79865b542f9ffdc9caeb255631f7c56f1d4b6517",
            "patch":"SINGLE",
            "chain_ord":"['79865b542f9ffdc9caeb255631f7c56f1d4b6517']",
            "before_first_fix_commit":"{'31bd5026304677faa8a0b77602c6154171b9aec1'}",
            "last_fix_commit":"79865b542f9ffdc9caeb255631f7c56f1d4b6517",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 01:05:46",
            "message":"Fix memory corruption issue with `tf.raw_ops.DrawBoundingBoxesV2`.\n\nPiperOrigin-RevId: 372033910\nChange-Id: I8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/79865b542f9ffdc9caeb255631f7c56f1d4b6517\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fdraw_bounding_box_op.cc', 'patch': '@@ -73,6 +73,12 @@ class DrawBoundingBoxesOp : public OpKernel {\\n         errors::InvalidArgument(\"Channel depth should be either 1 (GRY), \"\\n                                 \"3 (RGB), or 4 (RGBA)\"));\\n \\n+    OP_REQUIRES(\\n+        context, boxes.dim_size(2) == 4,\\n+        errors::InvalidArgument(\\n+            \"The size of the third dimension of the box must be 4. Received: \",\\n+            boxes.dim_size(2)));\\n+\\n     const int64 batch_size = images.dim_size(0);\\n     const int64 height = images.dim_size(1);\\n     const int64 width = images.dim_size(2);'}}",
            "message_norm":"fix memory corruption issue with `tf.raw_ops.drawboundingboxesv2`.\n\npiperorigin-revid: 372033910\nchange-id: i8a9f4efc1c8ddaacbc26ec1fbe4bfdd6791c226d",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('memory corruption', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372033910', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1334,
            "vuln_id":"GHSA-97gv-3p2c-xw7j",
            "cwe_id":"{'CWE-74', 'CWE-400'}",
            "score":8.2,
            "chain":"{'https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/commit\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8'}",
            "dataset":"osv",
            "summary":"Denial of Service and Content Injection in i18n-node-angular Versions of `i18n-node-angular` prior to 1.4.0 are affected by denial of service and cross-site scripting vulnerabilities. The vulnerabilities exist in a REST endpoint that was created for development purposes, but was not disabled in production in affected versions.\n\n\n## Recommendation\n\nUpdate to version 1.4.0 or later.",
            "published_date":"2019-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/oliversalzburg\/i18n-node-angular",
            "commit_href":"https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/commit\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
            "commit_sha":"877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
            "patch":"SINGLE",
            "chain_ord":"['877720d2d9bb90dc8233706e81ffa03f99fc9dc8']",
            "before_first_fix_commit":"{'85ba51ac9dc47a3e232a19926791219ef9de20ee'}",
            "last_fix_commit":"877720d2d9bb90dc8233706e81ffa03f99fc9dc8",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/07\/2016, 08:40:02",
            "message":"[FIX] Only register translate route during development",
            "author":"Oliver Salzburg",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'i18n-node-routes.js': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/oliversalzburg\/i18n-node-angular\/raw\/877720d2d9bb90dc8233706e81ffa03f99fc9dc8\/i18n-node-routes.js', 'patch': '@@ -49,7 +49,10 @@ var configure = function( app, configObject ) {\\n \\n \\t\/\/ Register routes\\n \\tapp.get( \"\/i18n\/:locale\", i18nRoutes.i18n );\\n-\\tapp.get( \"\/i18n\/:locale\/:phrase\", i18nRoutes.translate );\\n+\\n+\\tif( process.env.NODE_ENV === \"development\" ) {\\n+\\t\\tapp.get( \"\/i18n\/:locale\/:phrase\", i18nRoutes.translate );\\n+\\t}\\n };\\n \\n \/**'}}",
            "message_norm":"[fix] only register translate route during development",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['i18n-node-routes.js'])",
            "num_files":1.0
        },
        {
            "index":2472,
            "vuln_id":"GHSA-mvqp-q37c-wf9j",
            "cwe_id":"{'CWE-74'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/ratpack\/ratpack\/commit\/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae', 'https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects io.ratpack:ratpack-core ## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')\n\nVersions of Ratpack 0.9.1 through and including 1.7.4 are vulnerable to [HTTP Response Splitting](https:\/\/www.owasp.org\/index.php\/HTTP_Response_Splitting), \nif untrusted and unsanitized data is used to populate the headers of an HTTP response.\nAn attacker can utilize this vulnerability to have the server issue any HTTP response they specify.\n\nIf your application uses arbitrary user input as the value of a response header it is vulnerable.\nIf your application does not use arbitrary values as response header values, it is not vulnerable.\n\nPreviously, Ratpack did not validate response header values.\nNow, adding a header value that contains the header value termination characters (CRLF) produces a runtime exception.\nSince there is no mechanism for escaping or encoding the termination characters in a String, a runtime exception is necessary.\n\nAs potentially dangerous values now cause runtime exceptions, it is a good idea to continue to validate and sanitize any user-supplied values being used as response headers.\n\nWe would like to thank [Jonathan Leitschuh](https:\/\/github.com\/JLLeitschuh) for reporting this vulnerability.\n\n### Vulnerable Example\n\nThe following example server uses a query parameter value as a response header, without validating or sanitizing it.\n```java\nRatpackServer startedServer =  RatpackServer.start(server -> {\n    server.handlers(chain -> chain.all(ctx -> {\n        \/\/ User supplied query parameter\n        String header = ctx.getRequest().getQueryParams().get(\"header\");\n        \/\/ User supplied data used to populate a header value.\n        ctx.header(\"the-header\", header)\n            .render(\"OK!\");\n    }));\n});\n```\n\nSending a request to the server with the following value for the `header` query param would allow the execution of arbitrary Javascript.\n\n```\nContent-Type: text\/html\nX-XSS-Protection: 0\n\n<script>alert(document.domain)<\/script>\n```\n\n### Impact\n\n- Cross-User Defacement\n- Cache Poisoning\n- Cross-Site Scripting\n- Page Hijacking\n\n### Patches\n\nThis vulnerability has been patched in Ratpack version 1.7.5.\n\n### Root Cause\n\nThe root cause was due to using the netty `DefaultHttpHeaders` object with verification disabled.\n\nhttps:\/\/github.com\/ratpack\/ratpack\/blob\/af1e8c8590f164d7dd84d4212886fad4ead99080\/ratpack-core\/src\/main\/java\/ratpack\/server\/internal\/NettyHandlerAdapter.java#L159\n\nThis vulnerability is now more clearly documented in the Netty documentation: https:\/\/github.com\/netty\/netty\/pull\/9646\n\n### Workarounds\n\nThe workaround for this vulnerability is to either not use arbitrary input as response header values or validate such values before being used to ensure they don't contain a carriage return and\/or line feed characters.\n\n### References\n\n - [CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https:\/\/cwe.mitre.org\/data\/definitions\/113.html)\n - Fix commit: https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d\n \n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [ratpack\/ratpack](https:\/\/github.com\/ratpack\/ratpack\/issues)\n* Ask in our [Slack channel](https:\/\/slack-signup.ratpack.io\/)",
            "published_date":"2019-10-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/ratpack\/ratpack",
            "commit_href":"https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d",
            "commit_sha":"efb910d38a96494256f36675ef0e5061097dd77d",
            "patch":"MULTI",
            "chain_ord":"['efb910d38a96494256f36675ef0e5061097dd77d', 'c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae']",
            "before_first_fix_commit":"{'efb910d38a96494256f36675ef0e5061097dd77d'}",
            "last_fix_commit":"c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/08\/2019, 23:24:24",
            "message":"Enable HTTP header validation",
            "author":"Luke Daley",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'ratpack-core\/src\/main\/java\/ratpack\/server\/internal\/NettyHandlerAdapter.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ratpack\/ratpack\/raw\/efb910d38a96494256f36675ef0e5061097dd77d\/ratpack-core%2Fsrc%2Fmain%2Fjava%2Fratpack%2Fserver%2Finternal%2FNettyHandlerAdapter.java', 'patch': '@@ -156,7 +156,7 @@ private void newRequest(ChannelHandlerContext ctx, HttpRequest nettyRequest) thr\\n       channel.attr(CLIENT_CERT_KEY).get()\\n     );\\n \\n-    HttpHeaders nettyHeaders = new DefaultHttpHeaders(false);\\n+    HttpHeaders nettyHeaders = new DefaultHttpHeaders();\\n     MutableHeaders responseHeaders = new NettyHeadersBackedMutableHeaders(nettyHeaders);\\n     AtomicBoolean transmitted = new AtomicBoolean(false);'}}",
            "message_norm":"enable http header validation",
            "language":"nl",
            "entities":"[('header validation', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ratpack-core\/src\/main\/java\/ratpack\/server\/internal\/NettyHandlerAdapter.java'])",
            "num_files":1.0
        },
        {
            "index":2129,
            "vuln_id":"GHSA-hv96-xxx2-5v7w",
            "cwe_id":"{'CWE-311'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/nwjs\/npm-installer\/commit\/adb4df1e012d38a3872578d484291b9af07aad5b'}",
            "dataset":"osv",
            "summary":"Downloads Resources over HTTP in nw Affected versions of `nw` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `nw`.\n\n\n## Recommendation\n\nUpdate to version 0.23.6-1 or later.",
            "published_date":"2019-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/nwjs\/npm-installer",
            "commit_href":"https:\/\/github.com\/nwjs\/npm-installer\/commit\/adb4df1e012d38a3872578d484291b9af07aad5b",
            "commit_sha":"adb4df1e012d38a3872578d484291b9af07aad5b",
            "patch":"SINGLE",
            "chain_ord":"['adb4df1e012d38a3872578d484291b9af07aad5b']",
            "before_first_fix_commit":"{'0fe9b728586885f7ab185dc27e60e696381d1b6f'}",
            "last_fix_commit":"adb4df1e012d38a3872578d484291b9af07aad5b",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/12\/2017, 16:57:53",
            "message":"fix nwjs\/npm-installer#2 (start\u00a0using HTTPS: it\u00a0improves security)",
            "author":"Mithgol the Webmaster",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'scripts\/install.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nwjs\/npm-installer\/raw\/adb4df1e012d38a3872578d484291b9af07aad5b\/scripts%2Finstall.js', 'patch': \"@@ -33,7 +33,7 @@ if ( version.slice(-4) === '-sdk' ){\\n }\\n \\n var url = false;\\n-var urlBase = process.env.npm_config_nwjs_urlbase || process.env.NWJS_URLBASE ||  'http:\/\/dl.nwjs.io\/v';\\n+var urlBase = process.env.npm_config_nwjs_urlbase || process.env.NWJS_URLBASE ||  'https:\/\/dl.nwjs.io\/v';\\n var buildTypeSuffix = buildType === 'normal' ? '' : ('-' + buildType);\\n \\n \/\/ Determine download url\"}}",
            "message_norm":"fix nwjs\/npm-installer#2 (start\u00a0using https: it\u00a0improves security)",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('improves', 'ACTION', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['scripts\/install.js'])",
            "num_files":1.0
        },
        {
            "index":836,
            "vuln_id":"GHSA-6gmv-pjp9-p8w8",
            "cwe_id":"{'CWE-125'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995'}",
            "dataset":"osv",
            "summary":"Out of bounds read in Tensorflow ### Impact \nThe [implementation of shape inference for `ReverseSequence`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/ops\/array_ops.cc#L1636-L1671) does not fully validate the value of `batch_dim` and can result in a heap OOB read:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  y = tf.raw_ops.ReverseSequence(\n    input = ['aaa','bbb'],\n    seq_lengths = [1,1,1],\n    seq_dim = -10,\n    batch_dim = -10 )\n  return y\n    \ntest()\n```\n\nThere is a check to make sure the value of `batch_dim` does not go over the rank of the input, but there is no check for negative values:\n\n```cc\n  const int32_t input_rank = c->Rank(input);\n  if (batch_dim >= input_rank) {\n    return errors::InvalidArgument( \n        \"batch_dim must be < input rank: \", batch_dim, \" vs. \", input_rank);\n  }\n  \/\/ ...\n  \n  DimensionHandle batch_dim_dim = c->Dim(input, batch_dim);\n``` \n    \nNegative dimensions are allowed in some cases to mimic Python's negative indexing (i.e., indexing from the end of the array), however if the value is too negative then [the implementation of `Dim`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/framework\/shape_inference.h#L415-L428) would access elements before the start of an array:\n\n```cc\n  DimensionHandle Dim(ShapeHandle s, int64_t idx) {\n    if (!s.Handle() || s->rank_ == kUnknownRank) {\n      return UnknownDim();\n    }\n    return DimKnownRank(s, idx);\n  } \n\u00b7\n  static DimensionHandle DimKnownRank(ShapeHandle s, int64_t idx) {\n    CHECK_NE(s->rank_, kUnknownRank);\n    if (idx < 0) {\n      return s->dims_[s->dims_.size() + idx];\n    }\n    return s->dims_[idx];\n  }\n```\n\n### Patches\nWe have patched the issue in GitHub commit [37c01fb5e25c3d80213060460196406c43d31995](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995",
            "commit_sha":"37c01fb5e25c3d80213060460196406c43d31995",
            "patch":"SINGLE",
            "chain_ord":"['37c01fb5e25c3d80213060460196406c43d31995']",
            "before_first_fix_commit":"{'3218043d6d3a019756607643cf65574fbfef5d7a'}",
            "last_fix_commit":"37c01fb5e25c3d80213060460196406c43d31995",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/23\/2021, 22:27:30",
            "message":"Fix out of bound error in ReverseSequence Op shape function\n\nPiperOrigin-RevId: 411896080\nChange-Id: I7e59a38e2f960886edf2b6c54ed5a84e86a9b193",
            "author":"Isha Arkatkar",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/37c01fb5e25c3d80213060460196406c43d31995\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -1653,11 +1653,21 @@ REGISTER_OP(\"ReverseSequence\")\\n         return errors::InvalidArgument(\\n             \"batch_dim must be < input rank: \", batch_dim, \" vs. \", input_rank);\\n       }\\n+\\n       if (seq_dim >= input_rank) {\\n         return errors::InvalidArgument(\\n             \"seq_dim must be < input rank: \", seq_dim, \" vs. \", input_rank);\\n       }\\n \\n+      \/\/ To prevent out of bound access when calling c->Dim(input, batch_dim),\\n+      \/\/ batch_dim range [-1 * input rank, input rank) is allowed. However,\\n+      \/\/ the op implementation has a stricter bound for batch_dim requiring >= 0\\n+      \/\/ value. Thus, perform strict check here.\\n+      if (batch_dim < 0) {\\n+        return errors::InvalidArgument(\"batch_dim must be >=0, got \",\\n+                                       batch_dim);\\n+      }\\n+\\n       DimensionHandle batch_dim_dim = c->Dim(input, batch_dim);\\n       TF_RETURN_IF_ERROR(\\n           c->Merge(batch_dim_dim, c->Dim(seq_lens_shape, 0), &batch_dim_dim));'}}",
            "message_norm":"fix out of bound error in reversesequence op shape function\n\npiperorigin-revid: 411896080\nchange-id: i7e59a38e2f960886edf2b6c54ed5a84e86a9b193",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('out of bound', 'SECWORD', ''), ('error', 'FLAW', ''), ('411896080', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":804,
            "vuln_id":"GHSA-69c3-5xxf-58q2",
            "cwe_id":"{'CWE-89'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/a0f47c8bc4d6f5971025de7d63f22475701d2f86'}",
            "dataset":"osv",
            "summary":"SQL injection in moodle A flaw was found in moodle where an SQL injection risk was identified in Badges code relating to configuring criteria.",
            "published_date":"2022-05-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/moodle\/moodle",
            "commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/a0f47c8bc4d6f5971025de7d63f22475701d2f86",
            "commit_sha":"a0f47c8bc4d6f5971025de7d63f22475701d2f86",
            "patch":"SINGLE",
            "chain_ord":"['a0f47c8bc4d6f5971025de7d63f22475701d2f86']",
            "before_first_fix_commit":"{'9478dc6b07b162f63b823480aecd4e2fb4e3c59f'}",
            "last_fix_commit":"a0f47c8bc4d6f5971025de7d63f22475701d2f86",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/31\/2022, 10:17:31",
            "message":"MDL-74333 badges: Check profile criteria valid when reviewing",
            "author":"Michael Hawkins",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'badges\/criteria\/award_criteria_profile.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/a0f47c8bc4d6f5971025de7d63f22475701d2f86\/badges%2Fcriteria%2Faward_criteria_profile.php', 'patch': '@@ -202,8 +202,8 @@ public function review($userid, $filtered = false) {\\n                 $join .= \" LEFT JOIN {user_info_data} uid{$idx} ON uid{$idx}.userid = u.id AND uid{$idx}.fieldid = :fieldid{$idx} \";\\n                 $sqlparams[\"fieldid{$idx}\"] = $param[\\'field\\'];\\n                 $whereparts[] = \"uid{$idx}.id IS NOT NULL\";\\n-            } else {\\n-                \/\/ This is a field from {user} table.\\n+            } else if (in_array($param[\\'field\\'], $this->allowed_default_fields)) {\\n+                \/\/ This is a valid field from {user} table.\\n                 if ($param[\\'field\\'] == \\'picture\\') {\\n                     \/\/ The picture field is numeric and requires special handling.\\n                     $whereparts[] = \"u.{$param[\\'field\\']} != 0\";'}}",
            "message_norm":"mdl-74333 badges: check profile criteria valid when reviewing",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['badges\/criteria\/award_criteria_profile.php'])",
            "num_files":1.0
        },
        {
            "index":1356,
            "vuln_id":"GHSA-9c8h-2mv3-49ww",
            "cwe_id":"{'CWE-369'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4'}",
            "dataset":"osv",
            "summary":"Division by 0 in most convolution operators ### Impact\nMost implementations of convolution operators in TensorFlow are affected by a division by 0 vulnerability where an attacker can trigger a denial of service via a crash:\n\n```python\nimport tensorflow as tf\n\ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.Conv2D(\n  input = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32),\n  filter = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32),\n  strides = [1, 1, 1, 1],\n  padding = \"SAME\")\n```\n\nThe shape inference [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/framework\/common_shape_fns.cc#L577) is missing several validations before doing divisions and modulo operations.\n\n### Patches\nWe have patched the issue in GitHub commit [8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4",
            "commit_sha":"8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4",
            "patch":"SINGLE",
            "chain_ord":"['8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4']",
            "before_first_fix_commit":"{'1071f554dbd09f7e101324d366eec5f4fe5a3ece'}",
            "last_fix_commit":"8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/30\/2021, 01:23:45",
            "message":"Prevent division by 0 in common shape functions.\n\nPiperOrigin-RevId: 387712197\nChange-Id: Id25c7460e35b68aeeeac23b9a88e455b443ee149",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 0, 'total': 11}",
            "files":"{'tensorflow\/core\/framework\/common_shape_fns.cc': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4\/tensorflow%2Fcore%2Fframework%2Fcommon_shape_fns.cc', 'patch': '@@ -672,6 +672,8 @@ Status Conv2DShapeImpl(shape_inference::InferenceContext* c,\\n   if (c->ValueKnown(input_depth_dim) && c->ValueKnown(filter_input_depth_dim)) {\\n     int64_t input_depth_value = c->Value(input_depth_dim),\\n             filter_input_depth_value = c->Value(filter_input_depth_dim);\\n+    if (filter_input_depth_value == 0)\\n+      return errors::InvalidArgument(\"Depth of filter must not be 0\");\\n     if (input_depth_value % filter_input_depth_value != 0)\\n       return errors::InvalidArgument(\\n           \"Depth of input (\", input_depth_value,\\n@@ -681,6 +683,8 @@ Status Conv2DShapeImpl(shape_inference::InferenceContext* c,\\n       int64_t num_groups = input_depth_value \/ filter_input_depth_value;\\n       if (c->ValueKnown(output_depth_dim)) {\\n         int64_t output_depth_value = c->Value(output_depth_dim);\\n+        if (num_groups == 0)\\n+          return errors::InvalidArgument(\"Number of groups must not be 0\");\\n         if (output_depth_value % num_groups != 0)\\n           return errors::InvalidArgument(\\n               \"Depth of output (\", output_depth_value,\\n@@ -816,6 +820,8 @@ Status Conv3DShape(shape_inference::InferenceContext* c) {\\n   if (c->ValueKnown(input_depth_dim) && c->ValueKnown(filter_input_depth_dim)) {\\n     int64_t input_depth_value = c->Value(input_depth_dim),\\n             filter_input_depth_value = c->Value(filter_input_depth_dim);\\n+    if (filter_input_depth_value == 0)\\n+      return errors::InvalidArgument(\"Depth of filter must not be 0\");\\n     if (input_depth_value % filter_input_depth_value != 0)\\n       return errors::InvalidArgument(\\n           \"Depth of input (\", input_depth_value,\\n@@ -825,6 +831,8 @@ Status Conv3DShape(shape_inference::InferenceContext* c) {\\n       int64_t num_groups = input_depth_value \/ filter_input_depth_value;\\n       if (c->ValueKnown(output_depth_dim)) {\\n         int64_t output_depth_value = c->Value(output_depth_dim);\\n+        if (num_groups == 0)\\n+          return errors::InvalidArgument(\"Number of groups must not be 0\");\\n         if (output_depth_value % num_groups != 0)\\n           return errors::InvalidArgument(\\n               \"Depth of output (\", output_depth_value,\\n@@ -2456,6 +2464,9 @@ Status SparseReduceShapeFn(InferenceContext* c) {\\n \\n     int64_t ndims = shape_vec.size();\\n     absl::flat_hash_set<int64> axes;\\n+    if (ndims == 0)\\n+      return errors::InvalidArgument(\\n+          \"Number of dims in shape tensor must not be 0\");\\n     for (int i = 0; i < axes_vec.size(); i++) {\\n       axes.insert((axes_vec(i) + ndims) % ndims);\\n     }'}}",
            "message_norm":"prevent division by 0 in common shape functions.\n\npiperorigin-revid: 387712197\nchange-id: id25c7460e35b68aeeeac23b9a88e455b443ee149",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('387712197', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/common_shape_fns.cc'])",
            "num_files":1.0
        },
        {
            "index":590,
            "vuln_id":"GHSA-58jx-f5rf-qgqf",
            "cwe_id":"{'CWE-22', 'CWE-502'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/apache\/hadoop\/commit\/ba041fe6d34215f075e0a7b2078d7273147e14b7', 'https:\/\/github.com\/apache\/hadoop\/commit\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb', 'https:\/\/github.com\/apache\/hadoop\/commit\/45801fba8b00257ab32c02a7d1a05948ba687a49'}",
            "dataset":"osv",
            "summary":"User account escalation in Apache Hadoop In Apache Hadoop 2.2.0 to 2.10.1, 3.0.0-alpha1 to 3.1.4, 3.2.0 to 3.2.2, and 3.3.0 to 3.3.1, a user who can escalate to yarn user can possibly run arbitrary commands as root user. Users should upgrade to Apache Hadoop 2.10.2, 3.2.3, 3.3.2 or higher.",
            "published_date":"2022-06-16",
            "chain_len":3,
            "project":"https:\/\/github.com\/apache\/hadoop",
            "commit_href":"https:\/\/github.com\/apache\/hadoop\/commit\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
            "commit_sha":"227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
            "patch":"MULTI",
            "chain_ord":"['ba041fe6d34215f075e0a7b2078d7273147e14b7', '45801fba8b00257ab32c02a7d1a05948ba687a49', '227d64ab59e8aa6477769b2542ad0cd7a6d855cb']",
            "before_first_fix_commit":"{'ba041fe6d34215f075e0a7b2078d7273147e14b7'}",
            "last_fix_commit":"227d64ab59e8aa6477769b2542ad0cd7a6d855cb",
            "chain_ord_pos":3.0,
            "commit_datetime":"05\/24\/2022, 05:07:19",
            "message":"YARN-11162. Set the zk acl for nodes created by ZKConfigurationStore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nConflicts:\n\thadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)",
            "author":"Owen O'Malley",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/hadoop\/raw\/227d64ab59e8aa6477769b2542ad0cd7a6d855cb\/hadoop-yarn-project%2Fhadoop-yarn%2Fhadoop-yarn-server%2Fhadoop-yarn-server-resourcemanager%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fhadoop%2Fyarn%2Fserver%2Fresourcemanager%2Fscheduler%2Fcapacity%2Fconf%2FZKConfigurationStore.java', 'patch': '@@ -97,13 +97,13 @@ public void initialize(Configuration config, Configuration schedConf,\\n     zkManager.delete(fencingNodePath);\\n \\n     if (!zkManager.exists(logsPath)) {\\n-      zkManager.create(logsPath);\\n+      zkManager.create(logsPath, zkAcl);\\n       zkManager.setData(logsPath,\\n           serializeObject(new LinkedList<LogMutation>()), -1);\\n     }\\n \\n     if (!zkManager.exists(confStorePath)) {\\n-      zkManager.create(confStorePath);\\n+      zkManager.create(confStorePath, zkAcl);\\n       HashMap<String, String> mapSchedConf = new HashMap<>();\\n       for (Map.Entry<String, String> entry : schedConf) {\\n         mapSchedConf.put(entry.getKey(), entry.getValue());'}}",
            "message_norm":"yarn-11162. set the zk acl for nodes created by zkconfigurationstore. (#4350)\n\n(cherry picked from commit f390edaec44cfa91b2b09549091f033f1749d8ac)\n\nconflicts:\n\thadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/zkconfigurationstore.java\n\n(cherry picked from commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5)",
            "language":"en",
            "entities":"[('#4350', 'ISSUE', ''), ('commit f390edaec44cfa91b2b09549091f033f1749d8ac', 'SHA', 'prefix_sha'), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('commit 88a8752fa2ba0c70b0df94a78eb9fd86b965acd5', 'SHA', 'prefix_colon_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['hadoop-yarn-project\/hadoop-yarn\/hadoop-yarn-server\/hadoop-yarn-server-resourcemanager\/src\/main\/java\/org\/apache\/hadoop\/yarn\/server\/resourcemanager\/scheduler\/capacity\/conf\/ZKConfigurationStore.java'])",
            "num_files":1.0
        },
        {
            "index":3318,
            "vuln_id":"GHSA-wrwf-pmmj-w989",
            "cwe_id":"{'CWE-203'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/bcgit\/bc-java\/commit\/a00b684465b38d722ca9a3543b8af8568e6bad5c'}",
            "dataset":"osv",
            "summary":"Observable Discrepancy in BouncyCastle BouncyCastle TLS prior to version 1.0.3, when configured to use the JCE (Java Cryptography Extension) for cryptographic functions, provides a weak Bleichenbacher oracle when any TLS cipher suite using RSA key exchange is negotiated. An attacker can recover the private key from a vulnerable application. This vulnerability is referred to as \"ROBOT.\"",
            "published_date":"2022-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/bcgit\/bc-java",
            "commit_href":"https:\/\/github.com\/bcgit\/bc-java\/commit\/a00b684465b38d722ca9a3543b8af8568e6bad5c",
            "commit_sha":"a00b684465b38d722ca9a3543b8af8568e6bad5c",
            "patch":"SINGLE",
            "chain_ord":"['a00b684465b38d722ca9a3543b8af8568e6bad5c']",
            "before_first_fix_commit":"{'199be1bdc892dcb3360af1b5a887a7e133d2cdac'}",
            "last_fix_commit":"a00b684465b38d722ca9a3543b8af8568e6bad5c",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/12\/2017, 01:41:43",
            "message":"Confirm size of decrypted PMS before using",
            "author":"Peter Dettman",
            "comments":"{'com_1': {'author': 'carnil', 'datetime': '12\/12\/2017, 20:44:47', 'body': 'CVE-2017-13098'}, 'com_2': {'author': 'bcgit', 'datetime': '12\/12\/2017, 23:34:09', 'body': 'This is also available in the current beta in https:\/\/www.bouncycastle.org\/betas 159b09 or later.'}, 'com_3': {'author': 'zenithravi', 'datetime': '12\/14\/2017, 09:12:16', 'body': 'Any plan ? When fix for CVE-2017-13098 (159b09) will be released ?'}, 'com_4': {'author': 'bcgit', 'datetime': '12\/14\/2017, 11:05:34', 'body': \"We're hoping to have 1.59 out in the next week or so.\"}}",
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'tls\/src\/main\/java\/org\/bouncycastle\/tls\/crypto\/impl\/jcajce\/JceDefaultTlsCredentialedDecryptor.java': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bcgit\/bc-java\/raw\/a00b684465b38d722ca9a3543b8af8568e6bad5c\/tls%2Fsrc%2Fmain%2Fjava%2Forg%2Fbouncycastle%2Ftls%2Fcrypto%2Fimpl%2Fjcajce%2FJceDefaultTlsCredentialedDecryptor.java', 'patch': '@@ -97,7 +97,11 @@ protected TlsSecret safeDecryptPreMasterSecret(TlsCryptoParameters cryptoParams,\\n         {\\n             Cipher c = crypto.createRSAEncryptionCipher();\\n             c.init(Cipher.DECRYPT_MODE, rsaServerPrivateKey);\\n-            M = c.doFinal(encryptedPreMasterSecret);\\n+            byte[] m = c.doFinal(encryptedPreMasterSecret);\\n+            if (m != null && m.length == 48)\\n+            {\\n+                M = m;\\n+            }\\n         }\\n         catch (Exception e)\\n         {'}}",
            "message_norm":"confirm size of decrypted pms before using",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tls\/src\/main\/java\/org\/bouncycastle\/tls\/crypto\/impl\/jcajce\/JceDefaultTlsCredentialedDecryptor.java'])",
            "num_files":1.0
        },
        {
            "index":3041,
            "vuln_id":"GHSA-v3mr-gp7j-pw5w",
            "cwe_id":"{'CWE-89'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/commit\/a5e723a28f110b7df8ffc4175cef9b061d3cc717'}",
            "dataset":"osv",
            "summary":"Possible SQL injection in tablelookupwizard Contao Extension ### Impact\nThe currently selected widget values were not correctly sanitized before passing it to the database, leading to an SQL injection possibility.\n\n### Patches\nThe issue has been patched in `tablelookupwizard` version 3.3.5 and version 4.0.0.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https:\/\/github.com\/terminal42\/contao-tablelookupwizard\n* Email us at [info@terminal42.ch](mailto:info@terminal42.ch)",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/terminal42\/contao-tablelookupwizard",
            "commit_href":"https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/commit\/a5e723a28f110b7df8ffc4175cef9b061d3cc717",
            "commit_sha":"a5e723a28f110b7df8ffc4175cef9b061d3cc717",
            "patch":"SINGLE",
            "chain_ord":"['a5e723a28f110b7df8ffc4175cef9b061d3cc717']",
            "before_first_fix_commit":"{'ae6c82f10b0f1e87226079ebaa78ac630b05279a'}",
            "last_fix_commit":"a5e723a28f110b7df8ffc4175cef9b061d3cc717",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/04\/2022, 07:13:15",
            "message":"Fixed SQL query for current field value",
            "author":"Andreas Schempp",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'TableLookupWizard.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/terminal42\/contao-tablelookupwizard\/raw\/a5e723a28f110b7df8ffc4175cef9b061d3cc717\/TableLookupWizard.php', 'patch': '@@ -407,9 +407,9 @@ protected function prepareWhere()\\n \\n         \/\/ Filter those that have already been chosen\\n         if (\\'checkbox\\' === $this->fieldType && \\\\is_array($varData) && !empty($varData)) {\\n-            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id NOT IN (\\'.implode(\\',\\', $varData).\\')\\';\\n+            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id NOT IN (\\'.implode(\\',\\', array_map(\\'intval\\', $varData)).\\')\\';\\n         } elseif (\\'radio\\' === $this->fieldType && \\'\\' !== $varData) {\\n-            $this->arrWhereProcedure[] = \"{$this->foreignTable}.id!=\\'$varData\\'\";\\n+            $this->arrWhereProcedure[] = $this->foreignTable.\\'.id!=\\'.(int) $varData;\\n         }\\n \\n         \/\/ If custom WHERE is set, add it to the statement'}}",
            "message_norm":"fixed sql query for current field value",
            "language":"ca",
            "entities":"[('fixed', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['TableLookupWizard.php'])",
            "num_files":1.0
        },
        {
            "index":2750,
            "vuln_id":"GHSA-qgmg-gppg-76g5",
            "cwe_id":"{'CWE-1333'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/validatorjs\/validator.js\/commit\/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1'}",
            "dataset":"osv",
            "summary":"Inefficient Regular Expression Complexity in validator.js validator.js prior to 13.7.0 is vulnerable to Inefficient Regular Expression Complexity",
            "published_date":"2021-11-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/validatorjs\/validator.js",
            "commit_href":"https:\/\/github.com\/validatorjs\/validator.js\/commit\/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1",
            "commit_sha":"496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1",
            "patch":"SINGLE",
            "chain_ord":"['496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1']",
            "before_first_fix_commit":"{'45901ec4f1276d192da6d0eb10a60b64722356c1'}",
            "last_fix_commit":"496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/01\/2021, 20:30:39",
            "message":"fix(rtrim): remove regex to prevent ReDOS attack (#1738)",
            "author":"Sarhan Aissi",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 3, 'total': 15}",
            "files":"{'src\/lib\/rtrim.js': {'additions': 12, 'deletions': 3, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/validatorjs\/validator.js\/raw\/496fc8b2a7f5997acaaec33cc44d0b8dba5fb5e1\/src%2Flib%2Frtrim.js', 'patch': \"@@ -2,7 +2,16 @@ import assertString from '.\/util\/assertString';\\n \\n export default function rtrim(str, chars) {\\n   assertString(str);\\n-  \/\/ https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Guide\/Regular_Expressions#Escaping\\n-  const pattern = chars ? new RegExp(`[${chars.replace(\/[.*+?^${}()|[\\\\]\\\\\\\\]\/g, '\\\\\\\\$&')}]+$`, 'g') : \/(\\\\s)+$\/g;\\n-  return str.replace(pattern, '');\\n+  if (chars) {\\n+    \/\/ https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/JavaScript\/Guide\/Regular_Expressions#Escaping\\n+    const pattern = new RegExp(`[${chars.replace(\/[.*+?^${}()|[\\\\]\\\\\\\\]\/g, '\\\\\\\\$&')}]+$`, 'g');\\n+    return str.replace(pattern, '');\\n+  }\\n+  \/\/ Use a faster and more safe than regex trim method https:\/\/blog.stevenlevithan.com\/archives\/faster-trim-javascript\\n+  let strIndex = str.length - 1;\\n+  while (\/\\\\s\/.test(str.charAt(strIndex))) {\\n+    strIndex -= 1;\\n+  }\\n+\\n+  return str.slice(0, strIndex + 1);\\n }\"}}",
            "message_norm":"fix(rtrim): remove regex to prevent redos attack (#1738)",
            "language":"en",
            "entities":"[('fix(rtrim', 'ACTION', ''), ('remove', 'ACTION', ''), ('prevent', 'ACTION', ''), ('redos', 'SECWORD', ''), ('attack', 'FLAW', ''), ('#1738', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/rtrim.js'])",
            "num_files":1.0
        },
        {
            "index":1486,
            "vuln_id":"GHSA-c558-5gfm-p2r8",
            "cwe_id":"{'CWE-79'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}",
            "dataset":"osv",
            "summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org",
            "published_date":"2022-08-06",
            "chain_len":4,
            "project":"https:\/\/github.com\/DSpace\/DSpace",
            "commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7",
            "commit_sha":"35030a23e48b5946f5853332c797e1c4adea7bb7",
            "patch":"MULTI",
            "chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']",
            "before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}",
            "last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/08\/2020, 01:19:14",
            "message":"[DS-4453] Fix XSS handling in JSPUI discovery autocomplete",
            "author":"Kim Shepherd",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/35030a23e48b5946f5853332c797e1c4adea7bb7\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -147,7 +147,7 @@\\n \\t\\t\\t\\t\\t\\t\\t\\t\\ttmp_val = item.displayedValue;\\n \\t\\t\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\t\\t\\treturn {\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: item.displayedValue + \" (\" + item.count + \")\",\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: escapeHtml(item.displayedValue) + \" (\" + item.count + \")\",\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: tmp_val\\n \\t\\t\\t\\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t\\t\\t\\t}))\\t\\t\\t\\n@@ -159,6 +159,11 @@\\n \\tfunction validateFilters() {\\n \\t\\treturn document.getElementById(\"filterquery\").value.length > 0;\\n \\t}\\n+\\t\/\/ Generic HTML escape utility\\n+\\tvar escapeHtml = s => (s + \\'\\').replace(\/[&<>\"\\']\/g, m => ({\\n+\\t\\t\\'&\\': \\'&amp;\\', \\'<\\': \\'&lt;\\', \\'>\\': \\'&gt;\\',\\n+\\t\\t\\'\"\\': \\'&quot;\\', \"\\'\": \\'&#39;\\'\\n+\\t})[m]);\\n <\/script>\\t\\t\\n <\/c:set>'}}",
            "message_norm":"[ds-4453] fix xss handling in jspui discovery autocomplete",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])",
            "num_files":1.0
        },
        {
            "index":246,
            "vuln_id":"GHSA-3ff2-r28g-w7h9",
            "cwe_id":"{'CWE-787', 'CWE-120'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `Transpose` ### Impact\nThe [shape inference function for `Transpose`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/ops\/array_ops.cc#L121-L185) is vulnerable to a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n@tf.function\ndef test():\n  y = tf.raw_ops.Transpose(x=[1,2,3,4],perm=[-10])\n  return y\n\ntest()\n```\n\nThis occurs whenever `perm` contains negative elements. The shape inference function does not validate that the indices in `perm` are all valid:\n        \n```cc\nfor (int32_t i = 0; i < rank; ++i) {\n  int64_t in_idx = data[i];\n  if (in_idx >= rank) {\n    return errors::InvalidArgument(\"perm dim \", in_idx,\n                                   \" is out of range of input rank \", rank);\n  }\n  dims[i] = c->Dim(input, in_idx);\n}\n```\n\nwhere `Dim(tensor, index)` accepts either a positive index less than the rank of the tensor or the special value `-1` for unknown dimensions.\n\n### Patches\nWe have patched the issue in GitHub commit [c79ba87153ee343401dbe9d1954d7f79e521eb14](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c79ba87153ee343401dbe9d1954d7f79e521eb14",
            "commit_sha":"c79ba87153ee343401dbe9d1954d7f79e521eb14",
            "patch":"SINGLE",
            "chain_ord":"['c79ba87153ee343401dbe9d1954d7f79e521eb14']",
            "before_first_fix_commit":"{'042dc3be4c54a51c2608ad53dabaeb34afa3e63c'}",
            "last_fix_commit":"c79ba87153ee343401dbe9d1954d7f79e521eb14",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/15\/2021, 02:39:00",
            "message":"Make Transpose's shape inference function validate that negative `perm` values are within the tensor's rank.\n\nPiperOrigin-RevId: 403252853\nChange-Id: Ia6b31b45b237312668bb31c2c3b3c7bbce2d2610",
            "author":"Penporn Koanantakool",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c79ba87153ee343401dbe9d1954d7f79e521eb14\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -168,7 +168,7 @@ Status TransposeShapeFn(InferenceContext* c) {\\n \\n     for (int32_t i = 0; i < rank; ++i) {\\n       int64_t in_idx = data[i];\\n-      if (in_idx >= rank) {\\n+      if (in_idx >= rank || in_idx <= -rank) {\\n         return errors::InvalidArgument(\"perm dim \", in_idx,\\n                                        \" is out of range of input rank \", rank);\\n       }'}}",
            "message_norm":"make transpose's shape inference function validate that negative `perm` values are within the tensor's rank.\n\npiperorigin-revid: 403252853\nchange-id: ia6b31b45b237312668bb31c2c3b3c7bbce2d2610",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('403252853', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":2364,
            "vuln_id":"GHSA-m648-33qf-v3gp",
            "cwe_id":"{'CWE-20'}",
            "score":4.4,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14755416e364f17fb1870882fa778c7fec7f16e3'}",
            "dataset":"osv",
            "summary":"CHECK-fail in LSTM with zero-length input in TensorFlow ### Impact\nRunning an LSTM\/GRU model where the LSTM\/GRU layer receives an input with zero-length results in a `CHECK` failure when using the CUDA backend.\n\nThis can result in a query-of-death vulnerability, via denial of service, if users can control the input to the layer.\n\n### Patches\nWe have patched the issue in GitHub commit [14755416e364f17fb1870882fa778c7fec7f16e3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14755416e364f17fb1870882fa778c7fec7f16e3) and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\nSince this issue also impacts TF versions before 2.4, we will patch all releases between 1.15 and 2.3 inclusive.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2020-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14755416e364f17fb1870882fa778c7fec7f16e3",
            "commit_sha":"14755416e364f17fb1870882fa778c7fec7f16e3",
            "patch":"SINGLE",
            "chain_ord":"['14755416e364f17fb1870882fa778c7fec7f16e3']",
            "before_first_fix_commit":"{'042a6923d7f9ff05e7514bf6011e4ca30be70113'}",
            "last_fix_commit":"14755416e364f17fb1870882fa778c7fec7f16e3",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/08\/2020, 04:31:31",
            "message":"Prevent CHECK-fail in LSTM\/GRU with zero-length input.\n\nPiperOrigin-RevId: 346239181\nChange-Id: I5f233dbc076aab7bb4e31ba24f5abd4eaf99ea4f",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 2, 'total': 8}",
            "files":"{'tensorflow\/stream_executor\/cuda\/cuda_dnn.cc': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/14755416e364f17fb1870882fa778c7fec7f16e3\/tensorflow%2Fstream_executor%2Fcuda%2Fcuda_dnn.cc', 'patch': '@@ -1468,7 +1468,9 @@ class CudnnRnnSequenceTensorDescriptor\\n   static port::StatusOr<CudnnRnnSequenceTensorDescriptor> Create(\\n       GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,\\n       cudnnDataType_t data_type) {\\n-    CHECK_GT(max_seq_length, 0);\\n+    if (max_seq_length <= 0) {\\n+      return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");\\n+    }\\n     int dims[] = {batch_size, data_size, 1};\\n     int strides[] = {dims[1] * dims[2], dims[2], 1};\\n     TensorDescriptor tensor_desc = CreateTensorDescriptor();\\n@@ -1486,7 +1488,9 @@ class CudnnRnnSequenceTensorDescriptor\\n       GpuExecutor* parent, int max_seq_length, int batch_size, int data_size,\\n       const absl::Span<const int>& seq_lengths, bool time_major,\\n       cudnnDataType_t data_type) {\\n-    CHECK_GT(max_seq_length, 0);\\n+    if (max_seq_length <= 0) {\\n+      return port::Status(port::error::INVALID_ARGUMENT, \"max_seq_length <= 0\");\\n+    }\\n     int dims[] = {batch_size, data_size, 1};\\n     int strides[] = {dims[1] * dims[2], dims[2], 1};\\n     TensorDescriptor tensor_desc = CreateTensorDescriptor();'}}",
            "message_norm":"prevent check-fail in lstm\/gru with zero-length input.\n\npiperorigin-revid: 346239181\nchange-id: i5f233dbc076aab7bb4e31ba24f5abd4eaf99ea4f",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('346239181', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/stream_executor\/cuda\/cuda_dnn.cc'])",
            "num_files":1.0
        },
        {
            "index":3350,
            "vuln_id":"GHSA-x2p8-rgfm-qw3v",
            "cwe_id":"{'CWE-863'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/stanfordnlp\/CoreNLP\/commit\/5ee097dbede547023e88f60ed3f430ff09398b87'}",
            "dataset":"osv",
            "summary":"Access Control vulnerability within CoreNLP An Incorrect Access Control vulnerability exists in CoreNLP 4.3.2 via the classifier in NERServlet.java (lines 158 and 159).",
            "published_date":"2022-02-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/stanfordnlp\/CoreNLP",
            "commit_href":"https:\/\/github.com\/stanfordnlp\/CoreNLP\/commit\/5ee097dbede547023e88f60ed3f430ff09398b87",
            "commit_sha":"5ee097dbede547023e88f60ed3f430ff09398b87",
            "patch":"SINGLE",
            "chain_ord":"['5ee097dbede547023e88f60ed3f430ff09398b87']",
            "before_first_fix_commit":"{'85e305bf63b3954e6266801175579a8b81769709'}",
            "last_fix_commit":"5ee097dbede547023e88f60ed3f430ff09398b87",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/26\/2021, 22:07:33",
            "message":"Address issue #1222: verify that classifier and outputFormat are valid values before returning them in headers.  Should sanitize malicious output",
            "author":"John Bauer",
            "comments":null,
            "stats":"{'additions': 15, 'deletions': 7, 'total': 22}",
            "files":"{'src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java': {'additions': 15, 'deletions': 7, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/stanfordnlp\/CoreNLP\/raw\/5ee097dbede547023e88f60ed3f430ff09398b87\/src%2Fedu%2Fstanford%2Fnlp%2Fie%2Fner%2Fwebapp%2FNERServlet.java', 'patch': '@@ -63,9 +63,9 @@ public void init() throws ServletException {\\n       log(classifier);\\n     }\\n \\n-    ners = Generics.newHashMap();\\n+    ners = new HashMap<>();\\n     for (String classifier : classifiers) {\\n-      CRFClassifier model = null;\\n+      CRFClassifier<CoreMap> model = null;\\n       String filename = \"\/WEB-INF\/data\/models\/\" + classifier;\\n       InputStream is = getServletConfig().getServletContext().getResourceAsStream(filename);\\n \\n@@ -154,15 +154,23 @@ private void addResults(HttpServletRequest request,\\n       classifier = this.defaultClassifier;\\n     }\\n \\n-    response.addHeader(\"classifier\", classifier);\\n-    response.addHeader(\"outputFormat\", outputFormat);\\n-    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\\n+    CRFClassifier<CoreMap> nerModel = ners.get(classifier);\\n+    \/\/ check that we weren\\'t asked for a classifier that doesn\\'t exist\\n+    if (nerModel == null) {\\n+      out.print(StringEscapeUtils.escapeHtml4(\"Unknown model \" + classifier));\\n+      return;\\n+    }\\n \\n     if (outputFormat.equals(\"highlighted\")) {\\n-      outputHighlighting(out, ners.get(classifier), input);\\n+      outputHighlighting(out, nerModel, input);\\n     } else {\\n-      out.print(StringEscapeUtils.escapeHtml4(ners.get(classifier).classifyToString(input, outputFormat, preserveSpacing)));\\n+      out.print(StringEscapeUtils.escapeHtml4(nerModel.classifyToString(input, outputFormat, preserveSpacing)));\\n     }\\n+\\n+    response.addHeader(\"classifier\", classifier);\\n+    \/\/ a non-existent outputFormat would have just thrown an exception\\n+    response.addHeader(\"outputFormat\", outputFormat);\\n+    response.addHeader(\"preserveSpacing\", String.valueOf(preserveSpacing));\\n   }\\n \\n   private static void outputHighlighting(PrintWriter out,'}}",
            "message_norm":"address issue #1222: verify that classifier and outputformat are valid values before returning them in headers.  should sanitize malicious output",
            "language":"en",
            "entities":"[('issue', 'FLAW', ''), ('#1222', 'ISSUE', ''), ('verify', 'ACTION', ''), ('sanitize', 'SECWORD', ''), ('malicious', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/edu\/stanford\/nlp\/ie\/ner\/webapp\/NERServlet.java'])",
            "num_files":1.0
        },
        {
            "index":3344,
            "vuln_id":"GHSA-x28w-hvwc-mp75",
            "cwe_id":"{'CWE-94', 'CWE-96'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/b2baab6e582b2efe63788d367a2bb61a2fa26470'}",
            "dataset":"osv",
            "summary":"Static Code Injection in Microweber Microweber is a new generation CMS with drag and drop. Prior to version 1.3, Microweber is vulnerable to static code injection.",
            "published_date":"2022-03-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/b2baab6e582b2efe63788d367a2bb61a2fa26470",
            "commit_sha":"b2baab6e582b2efe63788d367a2bb61a2fa26470",
            "patch":"SINGLE",
            "chain_ord":"['b2baab6e582b2efe63788d367a2bb61a2fa26470']",
            "before_first_fix_commit":"{'a15da374af81c3cd312ee1639e4c6f56c4839f7e'}",
            "last_fix_commit":"b2baab6e582b2efe63788d367a2bb61a2fa26470",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/09\/2022, 11:13:43",
            "message":"Update ContactInformationTrait.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 4, 'total': 13}",
            "files":"{'src\/MicroweberPackages\/Checkout\/Http\/Controllers\/Traits\/ContactInformationTrait.php': {'additions': 9, 'deletions': 4, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/b2baab6e582b2efe63788d367a2bb61a2fa26470\/src%2FMicroweberPackages%2FCheckout%2FHttp%2FControllers%2FTraits%2FContactInformationTrait.php', 'patch': \"@@ -36,11 +36,16 @@ public function contactInformation() {\\n \\n     public function contactInformationSave(Request $request) {\\n \\n+        $firstName = strip_tags($request->get('first_name'));\\n+        $lastName = strip_tags($request->get('last_name'));\\n+        $email = strip_tags($request->get('email'));\\n+        $phone = strip_tags($request->get('phone'));\\n+\\n         session_append_array('checkout_v2', [\\n-            'first_name'=> $request->get('first_name'),\\n-            'last_name'=> $request->get('last_name'),\\n-            'email'=> $request->get('email'),\\n-            'phone'=> $request->get('phone')\\n+            'first_name'=> $firstName,\\n+            'last_name'=> $lastName,\\n+            'email'=> $email,\\n+            'phone'=> $phone\\n         ]);\\n \\n         $validate = $this->_validateContactInformation($request->all());\"}}",
            "message_norm":"update contactinformationtrait.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Checkout\/Http\/Controllers\/Traits\/ContactInformationTrait.php'])",
            "num_files":1.0
        },
        {
            "index":1009,
            "vuln_id":"GHSA-7c82-mp33-r854",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767'}",
            "dataset":"osv",
            "summary":"Cross-site scripting in bootstrap-select bootstrap-select before 1.13.6 allows Cross-Site Scripting (XSS). It does not escape title values in OPTION elements. This may allow attackers to execute arbitrary JavaScript in a victim's browser.",
            "published_date":"2021-05-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/snapappointments\/bootstrap-select",
            "commit_href":"https:\/\/github.com\/snapappointments\/bootstrap-select\/commit\/ab6e068748040cf3cda5859f6349b382402b8767",
            "commit_sha":"ab6e068748040cf3cda5859f6349b382402b8767",
            "patch":"SINGLE",
            "chain_ord":"['ab6e068748040cf3cda5859f6349b382402b8767']",
            "before_first_fix_commit":"{'bbd306de22fbcede9016cf7e335fd8ce34d6629d'}",
            "last_fix_commit":"ab6e068748040cf3cda5859f6349b382402b8767",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/07\/2019, 23:05:50",
            "message":"add sanitize option for data-content (#2199)",
            "author":"Casey Holzer",
            "comments":null,
            "stats":"{'additions': 167, 'deletions': 6, 'total': 173}",
            "files":"{'js\/bootstrap-select.js': {'additions': 167, 'deletions': 6, 'changes': 173, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snapappointments\/bootstrap-select\/raw\/ab6e068748040cf3cda5859f6349b382402b8767\/js%2Fbootstrap-select.js', 'patch': \"@@ -1,6 +1,128 @@\\n (function ($) {\\n   'use strict';\\n \\n+  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\\n+\\n+  var uriAttrs = [\\n+    'background',\\n+    'cite',\\n+    'href',\\n+    'itemtype',\\n+    'longdesc',\\n+    'poster',\\n+    'src',\\n+    'xlink:href'\\n+  ];\\n+\\n+  var ARIA_ATTRIBUTE_PATTERN = \/^aria-[\\\\w-]*$\/i;\\n+\\n+  var DefaultWhitelist = {\\n+    \/\/ Global attributes allowed on any supplied element below.\\n+    '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],\\n+    a: ['target', 'href', 'title', 'rel'],\\n+    area: [],\\n+    b: [],\\n+    br: [],\\n+    col: [],\\n+    code: [],\\n+    div: [],\\n+    em: [],\\n+    hr: [],\\n+    h1: [],\\n+    h2: [],\\n+    h3: [],\\n+    h4: [],\\n+    h5: [],\\n+    h6: [],\\n+    i: [],\\n+    img: ['src', 'alt', 'title', 'width', 'height'],\\n+    li: [],\\n+    ol: [],\\n+    p: [],\\n+    pre: [],\\n+    s: [],\\n+    small: [],\\n+    span: [],\\n+    sub: [],\\n+    sup: [],\\n+    strong: [],\\n+    u: [],\\n+    ul: []\\n+  }\\n+\\n+  \/**\\n+   * A pattern that recognizes a commonly useful subset of URLs that are safe.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var SAFE_URL_PATTERN = \/^(?:(?:https?|mailto|ftp|tel|file):|[^&:\/?#]*(?:[\/?#]|$))\/gi;\\n+\\n+  \/**\\n+   * A pattern that matches safe data URLs. Only matches image, video and audio types.\\n+   *\\n+   * Shoutout to Angular 7 https:\/\/github.com\/angular\/angular\/blob\/7.2.4\/packages\/core\/src\/sanitization\/url_sanitizer.ts\\n+   *\/\\n+  var DATA_URL_PATTERN = \/^data:(?:image\\\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\\\/(?:mpeg|mp4|ogg|webm)|audio\\\\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\/]+=*$\/i;\\n+\\n+  function allowedAttribute (attr, allowedAttributeList) {\\n+    var attrName = attr.nodeName.toLowerCase()\\n+\\n+    if ($.inArray(attrName, allowedAttributeList) !== -1) {\\n+      if ($.inArray(attrName, uriAttrs) !== -1) {\\n+        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN))\\n+      }\\n+\\n+      return true\\n+    }\\n+\\n+    var regExp = $(allowedAttributeList).filter(function (index, value) {\\n+      return value instanceof RegExp\\n+    })\\n+\\n+    \/\/ Check if a regular expression validates the attribute.\\n+    for (var i = 0, l = regExp.length; i < l; i++) {\\n+      if (attrName.match(regExp[i])) {\\n+        return true\\n+      }\\n+    }\\n+\\n+    return false\\n+  }\\n+\\n+  function sanitizeHtml (unsafeElements, whiteList, sanitizeFn) {\\n+    if (sanitizeFn && typeof sanitizeFn === 'function') {\\n+      return sanitizeFn(unsafeElements);\\n+    }\\n+\\n+    var whitelistKeys = Object.keys(whiteList);\\n+\\n+    for (var i = 0, len = unsafeElements.length; i < len; i++) {\\n+      var elements = unsafeElements[i].querySelectorAll('*');\\n+\\n+      for (var j = 0, len2 = elements.length; j < len2; j++) {\\n+        var el = elements[j];\\n+        var elName = el.nodeName.toLowerCase();\\n+\\n+        if (whitelistKeys.indexOf(elName) === -1) {\\n+          el.parentNode.removeChild(el);\\n+\\n+          continue;\\n+        }\\n+\\n+        var attributeList = [].slice.call(el.attributes);\\n+        var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\\n+\\n+        for (var k = 0, len3 = attributeList.length; k < len3; k++) {\\n+          var attr = attributeList[k];\\n+\\n+          if (!allowedAttribute(attr, whitelistedAttributes)) {\\n+            el.removeAttribute(attr.nodeName);\\n+          }\\n+        }\\n+      }\\n+    }\\n+  }\\n+\\n   \/\/ Polyfill for browsers with no classList support\\n   \/\/ Remove in v2\\n   if (!('classList' in document.createElement('_'))) {\\n@@ -745,7 +867,10 @@\\n     dropdownAlignRight: false,\\n     windowPadding: 0,\\n     virtualScroll: 600,\\n-    display: false\\n+    display: false,\\n+    sanitize: true,\\n+    sanitizeFn: null,\\n+    whiteList: DefaultWhitelist\\n   };\\n \\n   if (version.major === '4') {\\n@@ -1100,13 +1225,35 @@\\n                 emptyMenu = menuInner.firstChild.cloneNode(false),\\n                 marginTop,\\n                 marginBottom,\\n-                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements;\\n+                elements = isVirtual === true ? that.selectpicker.view.visibleElements : that.selectpicker.current.elements,\\n+                toSanitize = [];\\n \\n             \/\/ replace the existing UL with an empty one - this is faster than $.empty()\\n             menuInner.replaceChild(emptyMenu, menuInner.firstChild);\\n \\n             for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {\\n-              menuFragment.appendChild(elements[i]);\\n+              var element = elements[i],\\n+                  elText,\\n+                  elementData;\\n+\\n+              if (that.options.sanitize) {\\n+                elText = element.lastChild;\\n+\\n+                if (elText) {\\n+                  elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0].data;\\n+\\n+                  if (elementData && elementData.content && !elementData.sanitized) {\\n+                    toSanitize.push(elText);\\n+                    elementData.sanitized = true;\\n+                  }\\n+                }\\n+              }\\n+\\n+              menuFragment.appendChild(element);\\n+            }\\n+\\n+            if (that.options.sanitize && toSanitize.length) {\\n+              sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);\\n             }\\n \\n             if (isVirtual === true) {\\n@@ -1469,7 +1616,8 @@\\n           multipleSeparator = document.createTextNode(this.options.multipleSeparator),\\n           titleFragment = elementTemplates.fragment.cloneNode(false),\\n           showCount,\\n-          countMax;\\n+          countMax,\\n+          hasContent = false;\\n \\n       this.togglePlaceholder();\\n \\n@@ -1506,6 +1654,7 @@\\n                 titleOptions.text = option.title;\\n               } else if (thisData.content && that.options.showContent) {\\n                 titleOptions.optionContent = thisData.content.toString();\\n+                hasContent = true;\\n               } else {\\n                 if (that.options.showIcon) {\\n                   titleOptions.optionIcon = thisData.icon;\\n@@ -1554,6 +1703,10 @@\\n       \/\/ strip all HTML tags and trim the result, then unescape any escaped tags\\n       this.$button[0].title = titleFragment.textContent.replace(\/<[^>]*>?\/g, '').trim();\\n \\n+      if (this.options.sanitize && hasContent) {\\n+        sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);\\n+      }\\n+\\n       buttonInner.innerHTML = '';\\n       buttonInner.appendChild(titleFragment);\\n \\n@@ -2833,8 +2986,16 @@\\n             options = typeof _option == 'object' && _option;\\n \\n         if (!data) {\\n-          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, $this.data(), options);\\n-          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), $this.data().template, options.template);\\n+          var dataAttributes = $this.data();\\n+\\n+          for (var dataAttr in dataAttributes) {\\n+            if (dataAttributes.hasOwnProperty(dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {\\n+              delete dataAttributes[dataAttr];\\n+            }\\n+          }\\n+\\n+          var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);\\n+          config.template = $.extend({}, Selectpicker.DEFAULTS.template, ($.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}), dataAttributes.template, options.template);\\n           $this.data('selectpicker', (data = new Selectpicker(this, config)));\\n         } else if (options) {\\n           for (var i in options) {\"}}",
            "message_norm":"add sanitize option for data-content (#2199)",
            "language":"it",
            "entities":"[('add', 'ACTION', ''), ('sanitize', 'SECWORD', ''), ('#2199', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['js\/bootstrap-select.js'])",
            "num_files":1.0
        },
        {
            "index":593,
            "vuln_id":"GHSA-58v3-j75h-xr49",
            "cwe_id":"{'CWE-284'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/seccomp\/libseccomp-golang\/commit\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in libseccomp-golang libseccomp-golang 0.9.0 and earlier incorrectly generates BPFs that OR multiple arguments rather than ANDing them. A process running under a restrictive seccomp filter that specified multiple syscall arguments could bypass intended access restrictions by specifying a single matching argument.",
            "published_date":"2021-05-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/seccomp\/libseccomp-golang",
            "commit_href":"https:\/\/github.com\/seccomp\/libseccomp-golang\/commit\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e",
            "commit_sha":"06e7a29f36a34b8cf419aeb87b979ee508e58f9e",
            "patch":"SINGLE",
            "chain_ord":"['06e7a29f36a34b8cf419aeb87b979ee508e58f9e']",
            "before_first_fix_commit":"{'fc0298087f328ac97a1fa781392de96b2ebb8aac'}",
            "last_fix_commit":"06e7a29f36a34b8cf419aeb87b979ee508e58f9e",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2017, 20:28:29",
            "message":"golang: Resolve bug with handling of multiple argument rules\n\nIn the upstream library, when added with a single API call,\nmultiple syscall argument rules should be matched with AND\nlogic - if all of them match, the rule matches.\n\nAt present, the Golang bindings apply OR logic to this case.\nThis commit resolves this and reverts to the behavior of the\nmain library.\n\nSigned-off-by: Matthew Heon <matthew.heon@gmail.com>",
            "author":"Matthew Heon",
            "comments":null,
            "stats":"{'additions': 37, 'deletions': 27, 'total': 64}",
            "files":"{'seccomp_internal.go': {'additions': 37, 'deletions': 27, 'changes': 64, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/seccomp\/libseccomp-golang\/raw\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e\/seccomp_internal.go', 'patch': '@@ -120,23 +120,27 @@ unsigned int get_micro_version()\\n \\n typedef struct scmp_arg_cmp* scmp_cast_t;\\n \\n-\/\/ Wrapper to create an scmp_arg_cmp struct\\n-void*\\n-make_struct_arg_cmp(\\n-                    unsigned int arg,\\n-                    int compare,\\n-                    uint64_t a,\\n-                    uint64_t b\\n-                   )\\n+void* make_arg_cmp_array(unsigned int length)\\n {\\n-\\tstruct scmp_arg_cmp *s = malloc(sizeof(struct scmp_arg_cmp));\\n+        return calloc(length, sizeof(struct scmp_arg_cmp));\\n+}\\n \\n-\\ts->arg = arg;\\n-\\ts->op = compare;\\n-\\ts->datum_a = a;\\n-\\ts->datum_b = b;\\n+\/\/ Wrapper to add an scmp_arg_cmp struct to an existing arg_cmp array\\n+void add_struct_arg_cmp(\\n+                        struct scmp_arg_cmp* arr,\\n+                        unsigned int pos,\\n+                        unsigned int arg,\\n+                        int compare,\\n+                        uint64_t a,\\n+                        uint64_t b\\n+                       )\\n+{\\n+        arr[pos].arg = arg;\\n+        arr[pos].op = compare;\\n+        arr[pos].datum_a = a;\\n+        arr[pos].datum_b = b;\\n \\n-\\treturn s;\\n+        return;\\n }\\n *\/\\n import \"C\"\\n@@ -239,12 +243,9 @@ func (f *ScmpFilter) setFilterAttr(attr scmpFilterAttr, value C.uint32_t) error\\n \/\/ DOES NOT LOCK OR CHECK VALIDITY\\n \/\/ Assumes caller has already done this\\n \/\/ Wrapper for seccomp_rule_add_... functions\\n-func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, cond C.scmp_cast_t) error {\\n-\\tvar length C.uint\\n-\\tif cond != nil {\\n-\\t\\tlength = 1\\n-\\t} else {\\n-\\t\\tlength = 0\\n+func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, length C.uint, cond C.scmp_cast_t) error {\\n+\\tif length != 0 && cond == nil {\\n+\\t\\treturn fmt.Errorf(\"null conditions list, but length is nonzero\")\\n \\t}\\n \\n \\tvar retCode C.int\\n@@ -258,6 +259,8 @@ func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact b\\n \\t\\treturn fmt.Errorf(\"unrecognized syscall\")\\n \\t} else if syscall.Errno(-1*retCode) == syscall.EPERM {\\n \\t\\treturn fmt.Errorf(\"requested action matches default action of filter\")\\n+\\t} else if syscall.Errno(-1*retCode) == syscall.EINVAL {\\n+\\t\\treturn fmt.Errorf(\"two checks on same syscall argument\")\\n \\t} else if retCode != 0 {\\n \\t\\treturn syscall.Errno(-1 * retCode)\\n \\t}\\n@@ -275,7 +278,7 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\\n \\t}\\n \\n \\tif len(conds) == 0 {\\n-\\t\\tif err := f.addRuleWrapper(call, action, exact, nil); err != nil {\\n+\\t\\tif err := f.addRuleWrapper(call, action, exact, 0, nil); err != nil {\\n \\t\\t\\treturn err\\n \\t\\t}\\n \\t} else {\\n@@ -287,13 +290,20 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\\n \\t\\t\\t}\\n \\t\\t}\\n \\n-\\t\\tfor _, cond := range conds {\\n-\\t\\t\\tcmpStruct := C.make_struct_arg_cmp(C.uint(cond.Argument), cond.Op.toNative(), C.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\\n-\\t\\t\\tdefer C.free(cmpStruct)\\n+\\t\\targsArr := C.make_arg_cmp_array(C.uint(len(conds)))\\n+\\t\\tif argsArr == nil {\\n+\\t\\t\\treturn fmt.Errorf(\"error allocating memory for conditions\")\\n+\\t\\t}\\n+\\t\\tdefer C.free(argsArr)\\n+\\n+\\t\\tfor i, cond := range conds {\\n+\\t\\t\\tC.add_struct_arg_cmp(C.scmp_cast_t(argsArr), C.uint(i),\\n+\\t\\t\\t\\tC.uint(cond.Argument), cond.Op.toNative(),\\n+\\t\\t\\t\\tC.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\\n+\\t\\t}\\n \\n-\\t\\t\\tif err := f.addRuleWrapper(call, action, exact, C.scmp_cast_t(cmpStruct)); err != nil {\\n-\\t\\t\\t\\treturn err\\n-\\t\\t\\t}\\n+\\t\\tif err := f.addRuleWrapper(call, action, exact, C.uint(len(conds)), C.scmp_cast_t(argsArr)); err != nil {\\n+\\t\\t\\treturn err\\n \\t\\t}\\n \\t}'}}",
            "message_norm":"golang: resolve bug with handling of multiple argument rules\n\nin the upstream library, when added with a single api call,\nmultiple syscall argument rules should be matched with and\nlogic - if all of them match, the rule matches.\n\nat present, the golang bindings apply or logic to this case.\nthis commit resolves this and reverts to the behavior of the\nmain library.\n\nsigned-off-by: matthew heon <matthew.heon@gmail.com>",
            "language":"en",
            "entities":"[('bug', 'FLAW', ''), ('added', 'ACTION', ''), ('matthew.heon@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['seccomp_internal.go'])",
            "num_files":1.0
        },
        {
            "index":1680,
            "vuln_id":"GHSA-f78g-q7r4-9wcv",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/548b5eaf23685d86f722233d8fbc21d0a4aecb96'}",
            "dataset":"osv",
            "summary":"Division by 0 in `FractionalAvgPool` ### Impact\nAn attacker can cause a runtime division by zero error and denial of service in `tf.raw_ops.FractionalAvgPool`:\n\n```python\nimport tensorflow as tf\n\nvalue = tf.constant([60], shape=[1, 1, 1, 1], dtype=tf.int32)\npooling_ratio = [1.0, 1.0000014345305555, 1.0, 1.0]\npseudo_random = False\noverlapping = False\ndeterministic = False\nseed = 0\nseed2 = 0\n\ntf.raw_ops.FractionalAvgPool(\n  value=value, pooling_ratio=pooling_ratio, pseudo_random=pseudo_random,\n  overlapping=overlapping, deterministic=deterministic, seed=seed, seed2=seed2)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/acc8ee69f5f46f92a3f1f11230f49c6ac266f10c\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L85-L89) computes a divisor quantity by dividing two user controlled values:\n\n```cc                     \nfor (int i = 0; i < tensor_in_and_out_dims; ++i) {\n  output_size[i] = static_cast<int>(std::floor(input_size[i] \/ pooling_ratio_[i]));\n  DCHECK_GT(output_size[i], 0); \n} \n``` \n    \nThe user controls the values of `input_size[i]` and `pooling_ratio_[i]` (via the `value.shape()` and `pooling_ratio` arguments). If the value in `input_size[i]` is smaller than the `pooling_ratio_[i]`, then the floor operation results in `output_size[i]` being 0. The `DCHECK_GT` line is a no-op outside of debug mode, so in released versions of TF this does not trigger.\n\nLater, these computed values [are used as arguments](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/acc8ee69f5f46f92a3f1f11230f49c6ac266f10c\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L96-L99) to [`GeneratePoolingSequence`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/acc8ee69f5f46f92a3f1f11230f49c6ac266f10c\/tensorflow\/core\/kernels\/fractional_pool_common.cc#L100-L108). There, the first computation is a division in a modulo operation:\n\n```cc\nstd::vector<int64> GeneratePoolingSequence(int input_length, int output_length,\n                                           GuardedPhiloxRandom* generator,\n                                           bool pseudo_random) {\n  ...\n  if (input_length % output_length == 0) {\n    diff = std::vector<int64>(output_length, input_length \/ output_length);\n  }\n  ...\n}\n```\n\nSince `output_length` can be 0, this results in runtime crashing.\n\n### Patches\nWe have patched the issue in GitHub commit [548b5eaf23685d86f722233d8fbc21d0a4aecb96](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/548b5eaf23685d86f722233d8fbc21d0a4aecb96).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/548b5eaf23685d86f722233d8fbc21d0a4aecb96",
            "commit_sha":"548b5eaf23685d86f722233d8fbc21d0a4aecb96",
            "patch":"SINGLE",
            "chain_ord":"['548b5eaf23685d86f722233d8fbc21d0a4aecb96']",
            "before_first_fix_commit":"{'acc8ee69f5f46f92a3f1f11230f49c6ac266f10c'}",
            "last_fix_commit":"548b5eaf23685d86f722233d8fbc21d0a4aecb96",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2021, 15:38:16",
            "message":"Fix divide by zero error in `fractional_pool_common.cc`.\n\nPiperOrigin-RevId: 371126221\nChange-Id: Iea4b2f363aaeb116ab460e3bc592c687484af344",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/fractional_avg_pool_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/548b5eaf23685d86f722233d8fbc21d0a4aecb96\/tensorflow%2Fcore%2Fkernels%2Ffractional_avg_pool_op.cc', 'patch': '@@ -80,6 +80,10 @@ class FractionalAvgPoolOp : public OpKernel {\\n     std::vector<int> output_size(tensor_in_and_out_dims);\\n     for (int i = 0; i < tensor_in_and_out_dims; ++i) {\\n       input_size[i] = tensor_in.dim_size(i);\\n+      OP_REQUIRES(\\n+          context, pooling_ratio_[i] <= input_size[i],\\n+          errors::InvalidArgument(\\n+              \"Pooling ratio cannot be bigger than input tensor dim size.\"));\\n     }\\n     \/\/ Output size.\\n     for (int i = 0; i < tensor_in_and_out_dims; ++i) {'}}",
            "message_norm":"fix divide by zero error in `fractional_pool_common.cc`.\n\npiperorigin-revid: 371126221\nchange-id: iea4b2f363aaeb116ab460e3bc592c687484af344",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('divide by zero', 'SECWORD', ''), ('error', 'FLAW', ''), ('371126221', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_avg_pool_op.cc'])",
            "num_files":1.0
        },
        {
            "index":196,
            "vuln_id":"GHSA-34hv-f45p-4qfq",
            "cwe_id":"{'CWE-601'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/WWBN\/AVideo\/commit\/77e9aa6411ff4b97571eb82e587139ec05ff894c'}",
            "dataset":"osv",
            "summary":"Open redirect in wwbn\/avideo Open redirect vulnerability in objects\/login.json.php in WWBN AVideo through 11.6, allows attackers to arbitrarily redirect users from a crafted url to the login page. A patch is available on the `master` branch of the repository.",
            "published_date":"2022-04-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/WWBN\/AVideo",
            "commit_href":"https:\/\/github.com\/WWBN\/AVideo\/commit\/77e9aa6411ff4b97571eb82e587139ec05ff894c",
            "commit_sha":"77e9aa6411ff4b97571eb82e587139ec05ff894c",
            "patch":"SINGLE",
            "chain_ord":"['77e9aa6411ff4b97571eb82e587139ec05ff894c']",
            "before_first_fix_commit":"{'24a25e4f415be8146c89f04df32ba4acce1b0e80'}",
            "last_fix_commit":"77e9aa6411ff4b97571eb82e587139ec05ff894c",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 17:54:12",
            "message":"Open Redirect fix, thanks Max Boll",
            "author":"Daniel",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'objects\/login.json.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WWBN\/AVideo\/raw\/77e9aa6411ff4b97571eb82e587139ec05ff894c\/objects%2Flogin.json.php', 'patch': '@@ -30,7 +30,7 @@\\n Category::clearCacheCount();\\n TimeLogEnd($timeLog, __LINE__);\\n \\n-if (!preg_match(\"|^\" . $global[\\'webSiteRootURL\\'] . \"|\", $_POST[\\'redirectUri\\'])) {\\n+if(!isSameDomain($global[\\'webSiteRootURL\\'], $_POST[\\'redirectUri\\'])){\\n     $_POST[\\'redirectUri\\'] = $global[\\'webSiteRootURL\\'];\\n }\\n _error_log(\"Start Login Request redirectUri=\" . $_POST[\\'redirectUri\\']);'}}",
            "message_norm":"open redirect fix, thanks max boll",
            "language":"en",
            "entities":"[('open redirect', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['objects\/login.json.php'])",
            "num_files":1.0
        },
        {
            "index":1918,
            "vuln_id":"GHSA-gq77-3r6x-383w",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/818d7fe731f452acccacf731ce47ec27ad68049c'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc version 2.10.3 and prior is vulnerable to stored cross-site scripting. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/818d7fe731f452acccacf731ce47ec27ad68049c",
            "commit_sha":"818d7fe731f452acccacf731ce47ec27ad68049c",
            "patch":"SINGLE",
            "chain_ord":"['818d7fe731f452acccacf731ce47ec27ad68049c']",
            "before_first_fix_commit":"{'85af5ab5a375ce16f991e2acb15466be4b3ba44b'}",
            "last_fix_commit":"818d7fe731f452acccacf731ce47ec27ad68049c",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/08\/2022, 03:48:44",
            "message":"file upload bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/818d7fe731f452acccacf731ce47ec27ad68049c\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -301,6 +301,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".svg\")\\n \\t\\t\\t|| $isDangerStr($filename , \".htm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
            "message_norm":"file upload bug",
            "language":"ro",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":1562,
            "vuln_id":"GHSA-cjg2-2fjg-fph4",
            "cwe_id":"{'CWE-191'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/paritytech\/frontier\/commit\/8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664'}",
            "dataset":"osv",
            "summary":"Integer underflow in Frontier ### Impact\n\nA bug in Frontier's MODEXP precompile implementation can cause an integer underflow in certain conditions. This will cause a node crash for debug builds. For release builds (and production WebAssembly binaries), the impact is limited as it can only cause a normal EVM out-of-gas. It is recommended that you apply the patch as soon as possible.\n\nIf you do not use MODEXP precompile in your runtime, then you are not impacted.\n\n### Patches\n\nPatches are applied in PR #549.\n\n### Workarounds\n\nNone.\n\n### References\n\nPatch PR: #549\n\n### Credits\n\nThanks to SR-Labs for discovering the security vulnerability, and thanks to PureStake team for the patches.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in the [Frontier repo](https:\/\/github.com\/paritytech\/frontier)",
            "published_date":"2022-01-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/paritytech\/frontier",
            "commit_href":"https:\/\/github.com\/paritytech\/frontier\/commit\/8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664",
            "commit_sha":"8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664",
            "patch":"SINGLE",
            "chain_ord":"['8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664']",
            "before_first_fix_commit":"{'6dd07a4d581a4c00bb2a2238a81997fc75bc2127'}",
            "last_fix_commit":"8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2022, 16:23:07",
            "message":"Handle 0 exponent with fudged length correctly in ModExp (#549)\n\n* Handle 0 exponent with fudged length correctly in ModExp\r\n\r\n* cargo fmt\r\n\r\n* Revert to following EIP-2565 strictly, subtract after adding terms to prevent underflow\r\n\r\n* Update frame\/evm\/precompile\/modexp\/src\/lib.rs\r\n\r\nClean up test case\r\n\r\nCo-authored-by: Wei Tang <accounts@that.world>\r\n\r\n* More revert\r\n\r\n* cargo fmt\r\n\r\n* Prefer expect to match\r\n\r\nCo-authored-by: Wei Tang <accounts@that.world>",
            "author":"Stephen Shelton",
            "comments":null,
            "stats":"{'additions': 51, 'deletions': 5, 'total': 56}",
            "files":"{'frame\/evm\/precompile\/modexp\/src\/lib.rs': {'additions': 51, 'deletions': 5, 'changes': 56, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/paritytech\/frontier\/raw\/8a93fdc6c9f4eb1d2f2a11b7ff1d12d70bf5a664\/frame%2Fevm%2Fprecompile%2Fmodexp%2Fsrc%2Flib.rs', 'patch': '@@ -47,7 +47,10 @@ fn calculate_gas_cost(\\n \\t\\t\\twords += 1;\\n \\t\\t}\\n \\n-\\t\\t\/\/ TODO: prevent\/handle overflow\\n+\\t\\t\/\/ Note: can\\'t overflow because we take words to be some u64 value \/ 8, which is\\n+\\t\\t\/\/ necessarily less than sqrt(u64::MAX).\\n+\\t\\t\/\/ Additionally, both base_length and mod_length are bounded to 1024, so this has\\n+\\t\\t\/\/ an upper bound of roughly (1024 \/ 8) squared\\n \\t\\twords * words\\n \\t}\\n \\n@@ -63,8 +66,17 @@ fn calculate_gas_cost(\\n \\t\\t\\tlet bytes: [u8; 32] = [0xFF; 32];\\n \\t\\t\\tlet max_256_bit_uint = BigUint::from_bytes_be(&bytes);\\n \\n+\\t\\t\\t\/\/ from the EIP spec:\\n+\\t\\t\\t\/\/ (8 * (exp_length - 32)) + ((exponent & (2**256 - 1)).bit_length() - 1)\\n+\\t\\t\\t\/\/\\n+\\t\\t\\t\/\/ Notes:\\n+\\t\\t\\t\/\/ * exp_length is bounded to 1024 and is > 32\\n+\\t\\t\\t\/\/ * exponent can be zero, so we subtract 1 after adding the other terms (whose sum\\n+\\t\\t\\t\/\/   must be > 0)\\n+\\t\\t\\t\/\/ * the addition can\\'t overflow because the terms are both capped at roughly\\n+\\t\\t\\t\/\/   8 * max size of exp_length (1024)\\n \\t\\t\\titeration_count =\\n-\\t\\t\\t\\t(8 * (exp_length - 32)) + ((exponent.bitand(max_256_bit_uint)).bits() - 1);\\n+\\t\\t\\t\\t(8 * (exp_length - 32)) + exponent.bitand(max_256_bit_uint).bits() - 1;\\n \\t\\t}\\n \\n \\t\\tmax(iteration_count, 1)\\n@@ -89,7 +101,7 @@ fn calculate_gas_cost(\\n \/\/ 6) modulus, size as described above\\n \/\/\\n \/\/\\n-\/\/ NOTE: input sizes are arbitrarily large (up to 256 bits), with the expectation\\n+\/\/ NOTE: input sizes are bound to 1024 bytes, with the expectation\\n \/\/       that gas limits would be applied before actual computation.\\n \/\/\\n \/\/       maximum stack size will also prevent abuse.\\n@@ -133,7 +145,7 @@ impl Precompile for Modexp {\\n \\t\\tlet mod_len_big = BigUint::from_bytes_be(&buf);\\n \\t\\tif mod_len_big > max_size_big {\\n \\t\\t\\treturn Err(PrecompileFailure::Error {\\n-\\t\\t\\t\\texit_status: ExitError::Other(\"unreasonably large exponent length\".into()),\\n+\\t\\t\\t\\texit_status: ExitError::Other(\"unreasonably large modulus length\".into()),\\n \\t\\t\\t});\\n \\t\\t}\\n \\n@@ -162,7 +174,6 @@ impl Precompile for Modexp {\\n \\t\\t\\tlet exponent = BigUint::from_bytes_be(&input[exp_start..exp_start + exp_len]);\\n \\n \\t\\t\\t\/\/ do our gas accounting\\n-\\t\\t\\t\/\/ TODO: we could technically avoid reading base first...\\n \\t\\t\\tlet gas_cost =\\n \\t\\t\\t\\tcalculate_gas_cost(base_len as u64, exp_len as u64, mod_len as u64, &exponent);\\n \\t\\t\\tif let Some(gas_left) = target_gas {\\n@@ -423,4 +434,39 @@ mod tests {\\n \\t\\t\\t}\\n \\t\\t}\\n \\t}\\n+\\n+\\t#[test]\\n+\\tfn test_zero_exp_with_33_length() {\\n+\\t\\t\/\/ This is a regression test which ensures that the \\'iteration_count\\' calculation\\n+\\t\\t\/\/ in \\'calculate_iteration_count\\' cannot underflow.\\n+\\t\\t\/\/\\n+\\t\\t\/\/ In debug mode, this underflow could cause a panic. Otherwise, it causes N**0 to\\n+\\t\\t\/\/ be calculated at more-than-normal expense.\\n+\\t\\t\/\/\\n+\\t\\t\/\/ TODO: cite security advisory\\n+\\n+\\t\\tlet input = vec![\\n+\\t\\t\\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\\n+\\t\\t\\t0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\\n+\\t\\t\\t0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\\n+\\t\\t\\t0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\\n+\\t\\t\\t0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\\n+\\t\\t];\\n+\\n+\\t\\tlet cost: u64 = 100000;\\n+\\n+\\t\\tlet context: Context = Context {\\n+\\t\\t\\taddress: Default::default(),\\n+\\t\\t\\tcaller: Default::default(),\\n+\\t\\t\\tapparent_value: From::from(0),\\n+\\t\\t};\\n+\\n+\\t\\tlet precompile_result = Modexp::execute(&input, Some(cost), &context, false)\\n+\\t\\t\\t.expect(\"Modexp::execute() returned error\");\\n+\\n+\\t\\tassert_eq!(precompile_result.output.len(), 1); \/\/ should be same length as mod\\n+\\t\\tlet result = BigUint::from_bytes_be(&precompile_result.output[..]);\\n+\\t\\tlet expected = BigUint::parse_bytes(b\"0\", 10).unwrap();\\n+\\t\\tassert_eq!(result, expected);\\n+\\t}\\n }'}}",
            "message_norm":"handle 0 exponent with fudged length correctly in modexp (#549)\n\n* handle 0 exponent with fudged length correctly in modexp\r\n\r\n* cargo fmt\r\n\r\n* revert to following eip-2565 strictly, subtract after adding terms to prevent underflow\r\n\r\n* update frame\/evm\/precompile\/modexp\/src\/lib.rs\r\n\r\nclean up test case\r\n\r\nco-authored-by: wei tang <accounts@that.world>\r\n\r\n* more revert\r\n\r\n* cargo fmt\r\n\r\n* prefer expect to match\r\n\r\nco-authored-by: wei tang <accounts@that.world>",
            "language":"en",
            "entities":"[('#549', 'ISSUE', ''), ('adding', 'ACTION', ''), ('prevent', 'ACTION', ''), ('underflow', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['frame\/evm\/precompile\/modexp\/src\/lib.rs'])",
            "num_files":1.0
        },
        {
            "index":974,
            "vuln_id":"GHSA-763j-q7wv-vf3m",
            "cwe_id":"{'CWE-601'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de'}",
            "dataset":"osv",
            "summary":"JSPUI's controlled vocabulary feature vulnerable to Open Redirect before v6.4 and v5.11 ### Impact\nThe JSPUI controlled vocabulary servlet is vulnerable to an open redirect attack, where an attacker can craft a malicious URL that looks like a legitimate DSpace\/repository URL.  When that URL is clicked by the target, it redirects them to a site of the attacker's choice.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.x via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9\n* 6.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9.patch (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n\n_DSpace 5.x:_\n* Fixed in 5.x via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de\n* 5.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/5f72424a478f59061dcc516b866dcc687bc3f9de.patch (may be applied manually if an immediate upgrade to 5.11 or 6,4 or above is not possible)\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered and reported by Johannes Moritz of Ripstech.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org",
            "published_date":"2022-08-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/DSpace\/DSpace",
            "commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/f7758457b7ec3489d525e39aa753cc70809d9ad9",
            "commit_sha":"f7758457b7ec3489d525e39aa753cc70809d9ad9",
            "patch":"MULTI",
            "chain_ord":"['f7758457b7ec3489d525e39aa753cc70809d9ad9', '5f72424a478f59061dcc516b866dcc687bc3f9de']",
            "before_first_fix_commit":"{'3b0cdee734d0ee3f2c2cbdcc07c1135c1c048be8'}",
            "last_fix_commit":"5f72424a478f59061dcc516b866dcc687bc3f9de",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/08\/2020, 00:48:56",
            "message":"[DS-4133] Improve URL handling in Controlled Vocab JSPUI servlet",
            "author":"Kim Shepherd",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 2, 'total': 12}",
            "files":"{'dspace-jspui\/src\/main\/java\/org\/dspace\/app\/webui\/servlet\/ControlledVocabularyServlet.java': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/f7758457b7ec3489d525e39aa753cc70809d9ad9\/dspace-jspui%2Fsrc%2Fmain%2Fjava%2Forg%2Fdspace%2Fapp%2Fwebui%2Fservlet%2FControlledVocabularyServlet.java', 'patch': '@@ -14,6 +14,7 @@\\n import javax.servlet.http.HttpServletRequest;\\n import javax.servlet.http.HttpServletResponse;\\n \\n+import org.apache.log4j.Logger;\\n import org.dspace.authorize.AuthorizeException;\\n import org.dspace.core.Context;\\n \\n@@ -25,8 +26,8 @@\\n  *\/\\n public class ControlledVocabularyServlet extends DSpaceServlet\\n {\\n-    \/\/ private static Logger log =\\n-    \/\/ Logger.getLogger(ControlledVocabularyServlet.class);\\n+    private static Logger log =\\n+    Logger.getLogger(ControlledVocabularyServlet.class);\\n \\n     protected void doDSGet(Context context, HttpServletRequest request,\\n             HttpServletResponse response) throws ServletException, IOException,\\n@@ -37,6 +38,13 @@ protected void doDSGet(Context context, HttpServletRequest request,\\n         String filter = \"\";\\n         String callerUrl = request.getParameter(\"callerUrl\");\\n \\n+        \/\/ callerUrl must starts with URL outside DSpace request context path\\n+        if(!callerUrl.startsWith(request.getContextPath())) {\\n+            log.error(\"Controlled vocabulary caller URL would result in redirect outside DSpace web app: \" + callerUrl + \". Rejecting request with 400 Bad Request.\");\\n+            response.sendError(400, \"The caller URL must be within the DSpace base URL of \" + request.getContextPath());\\n+            return;\\n+        }\\n+\\n         if (request.getParameter(\"ID\") != null)\\n         {\\n             ID = request.getParameter(\"ID\");'}}",
            "message_norm":"[ds-4133] improve url handling in controlled vocab jspui servlet",
            "language":"en",
            "entities":"[('improve', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['dspace-jspui\/src\/main\/java\/org\/dspace\/app\/webui\/servlet\/ControlledVocabularyServlet.java'])",
            "num_files":1.0
        },
        {
            "index":3397,
            "vuln_id":"GHSA-x8h6-xgqx-jqgp",
            "cwe_id":"{'CWE-908'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925'}",
            "dataset":"osv",
            "summary":"Undefined behavior and `CHECK`-fail in `FractionalMaxPoolGrad` ### Impact\nThe implementation of `tf.raw_ops.FractionalMaxPoolGrad` triggers an undefined behavior if one of the input tensors is empty:\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([2, 3], shape=[1, 1, 1, 2], dtype=tf.int64)\norig_output = tf.constant([], dtype=tf.int64) \nout_backprop = tf.zeros([2, 3, 6, 6], dtype=tf.int64)\nrow_pooling_sequence = tf.constant([0], shape=[1], dtype=tf.int64)\ncol_pooling_sequence = tf.constant([0], shape=[1], dtype=tf.int64)\n\ntf.raw_ops.FractionalMaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, out_backprop=out_backprop,\n  row_pooling_sequence=row_pooling_sequence,\n  col_pooling_sequence=col_pooling_sequence, overlapping=False)\n```\n\nThe code is also vulnerable to a denial of service attack as a `CHECK` condition becomes false and aborts the process\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([1], shape=[1], dtype=tf.int64)\norig_output = tf.constant([1], shape=[1], dtype=tf.int64)\nout_backprop = tf.constant([1, 1], shape=[2, 1, 1, 1], dtype=tf.int64)\nrow_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64) \ncol_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64)\n\ntf.raw_ops.FractionalMaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, out_backprop=out_backprop,\n  row_pooling_sequence=row_pooling_sequence,\n  col_pooling_sequence=col_pooling_sequence, overlapping=False)\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/169054888d50ce488dfde9ca55d91d6325efbd5b\/tensorflow\/core\/kernels\/fractional_max_pool_op.cc#L215) fails to validate that input and output tensors are not empty and are of the same rank. Each of these unchecked assumptions is responsible for the above issues.\n\n### Patches\nWe have patched the issue in GitHub commit [32fdcbff9d06d010d908fcc4bd4b36eb3ce15925](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
            "commit_sha":"32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
            "patch":"SINGLE",
            "chain_ord":"['32fdcbff9d06d010d908fcc4bd4b36eb3ce15925']",
            "before_first_fix_commit":"{'169054888d50ce488dfde9ca55d91d6325efbd5b'}",
            "last_fix_commit":"32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 05:39:29",
            "message":"Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 0, 'total': 14}",
            "files":"{'tensorflow\/core\/kernels\/fractional_max_pool_op.cc': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925\/tensorflow%2Fcore%2Fkernels%2Ffractional_max_pool_op.cc', 'patch': '@@ -235,6 +235,20 @@ class FractionalMaxPoolGradOp : public OpKernel {\\n \\n     \/\/ Just to make it similar to FractionalMaxPoolOp.\\n     constexpr int tensor_in_and_out_dims = 4;\\n+    OP_REQUIRES(\\n+        context, tensor_in.dims() == tensor_in_and_out_dims,\\n+        errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",\\n+                                tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_in.NumElements() > 0,\\n+                errors::InvalidArgument(\"orig_input must not be empty, got \",\\n+                                        tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,\\n+                errors::InvalidArgument(\\n+                    \"orig_output should be a tensor of rank 4, got \",\\n+                    tensor_out.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.NumElements() > 0,\\n+                errors::InvalidArgument(\"orig_output must not be empty, got \",\\n+                                        tensor_out.DebugString()));\\n     std::vector<int64> input_size(tensor_in_and_out_dims);\\n     std::vector<int64> output_size(tensor_in_and_out_dims);\\n     for (int i = 0; i < tensor_in_and_out_dims; ++i) {'}}",
            "message_norm":"validate arguments of `fractionalmaxpoolgrad`\n\npiperorigin-revid: 372274982\nchange-id: if46b0c442efa4eaef635ce6a476717060420122c",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('372274982', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_max_pool_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3144,
            "vuln_id":"GHSA-vmhh-xh3g-j992",
            "cwe_id":"{'CWE-80', 'CWE-79', 'CWE-116'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in the Flamingo theme manager ### Impact\nWe found a possible XSS vector in the `FlamingoThemesCode.WebHomeSheet` wiki page related to the \"newThemeName\" form field.\n\n### Patches\n\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `FlamingoThemesCode.WebHomeSheet` (with wiki editor) and change the line\n\n```\n<input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/>\n```\n\ninto\n\n```\n<input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/>\n```\n\n### References\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-19294\n  * https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)",
            "published_date":"2022-05-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/bd935320bee3c27cf7548351b1d0f935f116d437",
            "commit_sha":"bd935320bee3c27cf7548351b1d0f935f116d437",
            "patch":"SINGLE",
            "chain_ord":"['bd935320bee3c27cf7548351b1d0f935f116d437']",
            "before_first_fix_commit":"{'21906acb5ee2304552f56f9bbdbf8e7d368f7f3a'}",
            "last_fix_commit":"bd935320bee3c27cf7548351b1d0f935f116d437",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/04\/2022, 10:34:49",
            "message":"XWIKI-19294: Fix bad escaping",
            "author":"Thomas Mortagne",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/bd935320bee3c27cf7548351b1d0f935f116d437\/xwiki-platform-core%2Fxwiki-platform-flamingo%2Fxwiki-platform-flamingo-theme%2Fxwiki-platform-flamingo-theme-ui%2Fsrc%2Fmain%2Fresources%2FFlamingoThemesCode%2FWebHomeSheet.xml', 'patch': '@@ -287,7 +287,7 @@\\n       &lt;form action=\"$doc.getURL()\" method=\"post\"&gt;\\n         &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.token\" \/&gt;\\n         &lt;input type=\"hidden\" name=\"action\" value=\"create\"\/&gt;\\n-        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$request.newThemeName\" \/&gt;\\n+        &lt;input type=\"hidden\" name=\"newThemeName\" id=\"newThemeName\" value=\"$escapetool.xml($request.newThemeName)\" \/&gt;\\n         &lt;input type=\"submit\" value=\"$services.localization.render(\\'platform.flamingo.themes.home.create.confirm\\')\" class=\"button\"\/&gt;\\n       &lt;\/form&gt;\\n     {{\/html}}'}}",
            "message_norm":"xwiki-19294: fix bad escaping",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-flamingo\/xwiki-platform-flamingo-theme\/xwiki-platform-flamingo-theme-ui\/src\/main\/resources\/FlamingoThemesCode\/WebHomeSheet.xml'])",
            "num_files":1.0
        },
        {
            "index":675,
            "vuln_id":"GHSA-5q5w-mqp6-g2gh",
            "cwe_id":"{'CWE-434', 'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/jsdecena\/laracom\/commit\/256026193ce994dc4c1365e02f414d8a0cd77ae8'}",
            "dataset":"osv",
            "summary":"Unrestricted Upload of File with Dangerous Type in jsdecena\/laracom jsdecena\/laracom prior to version 2.0.9 is vulnerable to Unrestricted Upload of File with Dangerous Type.",
            "published_date":"2022-02-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/jsdecena\/laracom",
            "commit_href":"https:\/\/github.com\/jsdecena\/laracom\/commit\/256026193ce994dc4c1365e02f414d8a0cd77ae8",
            "commit_sha":"256026193ce994dc4c1365e02f414d8a0cd77ae8",
            "patch":"SINGLE",
            "chain_ord":"['256026193ce994dc4c1365e02f414d8a0cd77ae8']",
            "before_first_fix_commit":"{'8ef50622cb9c696d79a7a6b37e9b43266da6545d'}",
            "last_fix_commit":"256026193ce994dc4c1365e02f414d8a0cd77ae8",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/01\/2022, 22:16:55",
            "message":"Fix vulnerability report from hunter.dev",
            "author":"Roland Jeffrey Decena",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jsdecena\/laracom\/raw\/256026193ce994dc4c1365e02f414d8a0cd77ae8\/project%2Fapp%2FShop%2FProducts%2FRequests%2FUpdateProductRequest.php', 'patch': \"@@ -20,7 +20,9 @@ public function rules()\\n             'quantity' => ['required', 'integer', 'min:0'],\\n             'price' => ['required', 'numeric', 'min:0'],\\n             'sale_price' => ['nullable', 'numeric'],\\n-            'weight' => ['nullable', 'numeric', 'min:0']\\n+            'weight' => ['nullable', 'numeric', 'min:0'],\\n+            'image' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\\n+            'cover' => 'image|mimes:jpeg,png,jpg,gif,svg|max:2048',\\n         ];\\n     }\\n }\"}}",
            "message_norm":"fix vulnerability report from hunter.dev",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['project\/app\/Shop\/Products\/Requests\/UpdateProductRequest.php'])",
            "num_files":1.0
        },
        {
            "index":343,
            "vuln_id":"GHSA-43f8-2h32-f4cj",
            "cwe_id":"{'CWE-400'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/npm\/hosted-git-info\/commit\/bede0dc38e1785e732bf0a48ba6f81a4a908eba3', 'https:\/\/github.com\/npm\/hosted-git-info\/commit\/8d4b3697d79bcd89cdb36d1db165e3696c783a01', 'https:\/\/github.com\/npm\/hosted-git-info\/commit\/29adfe5ef789784c861b2cdeb15051ec2ba651a7'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in hosted-git-info The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity",
            "published_date":"2021-05-06",
            "chain_len":3,
            "project":"https:\/\/github.com\/npm\/hosted-git-info",
            "commit_href":"https:\/\/github.com\/npm\/hosted-git-info\/commit\/bede0dc38e1785e732bf0a48ba6f81a4a908eba3",
            "commit_sha":"bede0dc38e1785e732bf0a48ba6f81a4a908eba3",
            "patch":"MULTI",
            "chain_ord":"['bede0dc38e1785e732bf0a48ba6f81a4a908eba3', '29adfe5ef789784c861b2cdeb15051ec2ba651a7', '8d4b3697d79bcd89cdb36d1db165e3696c783a01']",
            "before_first_fix_commit":"{'29adfe5ef789784c861b2cdeb15051ec2ba651a7'}",
            "last_fix_commit":"8d4b3697d79bcd89cdb36d1db165e3696c783a01",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/28\/2021, 17:22:16",
            "message":"fix: simplify the regular expression for shortcut matching\n\nPR-URL: https:\/\/github.com\/npm\/hosted-git-info\/pull\/76\nCredit: @nlf\nClose: #76\nReviewed-by: @isaacs",
            "author":"nlf",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'index.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/hosted-git-info\/raw\/bede0dc38e1785e732bf0a48ba6f81a4a908eba3\/index.js', 'patch': \"@@ -41,7 +41,7 @@ function fromUrl (giturl, opts) {\\n     isGitHubShorthand(giturl) ? 'github:' + giturl : giturl\\n   )\\n   var parsed = parseGitUrl(url)\\n-  var shortcutMatch = url.match(new RegExp('^([^:]+):(?:(?:[^@:]+(?:[^@]+)?@)?([^\/]*))[\/](.+?)(?:[.]git)?($|#)'))\\n+  var shortcutMatch = url.match(\/^([^:]+):(?:[^@]+@)?(?:([^\/]*)\\\\\/)?([^#]+)\/)\\n   var matches = Object.keys(gitHosts).map(function (gitHostName) {\\n     try {\\n       var gitHostInfo = gitHosts[gitHostName]\\n@@ -55,7 +55,7 @@ function fromUrl (giturl, opts) {\\n       var defaultRepresentation = null\\n       if (shortcutMatch && shortcutMatch[1] === gitHostName) {\\n         user = shortcutMatch[2] && decodeURIComponent(shortcutMatch[2])\\n-        project = decodeURIComponent(shortcutMatch[3])\\n+        project = decodeURIComponent(shortcutMatch[3].replace(\/\\\\.git$\/, ''))\\n         defaultRepresentation = 'shortcut'\\n       } else {\\n         if (parsed.host && parsed.host !== gitHostInfo.domain && parsed.host.replace(\/^www[.]\/, '') !== gitHostInfo.domain) return\"}}",
            "message_norm":"fix: simplify the regular expression for shortcut matching\n\npr-url: https:\/\/github.com\/npm\/hosted-git-info\/pull\/76\ncredit: @nlf\nclose: #76\nreviewed-by: @isaacs",
            "language":"en",
            "entities":"[('https:\/\/github.com\/npm\/hosted-git-info\/pull\/76', 'URL', ''), ('#76', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":1271,
            "vuln_id":"GHSA-8w3x-r6x7-c5r5",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/3c2a14e676a57e5d77a16255965988eef48f9065'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in pimcore pimcore is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "published_date":"2021-12-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/3c2a14e676a57e5d77a16255965988eef48f9065",
            "commit_sha":"3c2a14e676a57e5d77a16255965988eef48f9065",
            "patch":"SINGLE",
            "chain_ord":"['3c2a14e676a57e5d77a16255965988eef48f9065']",
            "before_first_fix_commit":"{'a5e13bea6315b7bee8fb44f83a38029d065f97a3'}",
            "last_fix_commit":"3c2a14e676a57e5d77a16255965988eef48f9065",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/09\/2021, 11:53:00",
            "message":"[Admin UI] DataObject Class - escape general settings input values (#10991)\n\n* [Admin UI] DataObject Class - escape general settings input values\r\n\r\n* Update bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/object\/classes\/class.js\r\n\r\n* [Admin UI] DataObject Class - escape general settings input values\r\n\r\n* [Admin UI] DataObject Class - escape general settings input values",
            "author":"Divesh Pahuja",
            "comments":null,
            "stats":"{'additions': 20, 'deletions': 1, 'total': 21}",
            "files":"{'bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/object\/classes\/class.js': {'additions': 20, 'deletions': 1, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/3c2a14e676a57e5d77a16255965988eef48f9065\/bundles%2FAdminBundle%2FResources%2Fpublic%2Fjs%2Fpimcore%2Fobject%2Fclasses%2Fclass.js', 'patch': '@@ -607,7 +607,12 @@ pimcore.object.classes.klass = Class.create({\\n                 for (var i = 0; i < items.length; i++) {\\n                     var item = items[i];\\n                     if (typeof item.getValue == \"function\") {\\n-                        this.data[item.name] = item.getValue();\\n+                        let value = item.getValue();\\n+                        if (typeof item.config.xtype !== \\'undefined\\' && item.config.xtype === \\'textfield\\') {\\n+                            value = Ext.util.Format.htmlEncode(value);\\n+                        }\\n+\\n+                        this.data[item.name] = value;\\n                     }\\n                 }\\n \\n@@ -705,6 +710,7 @@ pimcore.object.classes.klass = Class.create({\\n             id: \"iconfield-\" + this.getId(),\\n             name: \"icon\",\\n             width: 396,\\n+            renderer: Ext.util.Format.htmlEncode,\\n             value: this.data.icon,\\n             listeners: {\\n                 \"afterrender\": function (el) {\\n@@ -752,6 +758,7 @@ pimcore.object.classes.klass = Class.create({\\n                     width: 500,\\n                     enableKeyEvents: true,\\n                     value: this.data.name,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     listeners: {\\n                         keyup: function (el) {\\n                             this.rootPanel.getComponent(\"phpClassName\").setValue(getPhpClassName(el.getValue()))\\n@@ -763,12 +770,14 @@ pimcore.object.classes.klass = Class.create({\\n                     fieldLabel: t(\"description\"),\\n                     name: \"description\",\\n                     width: 500,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.description\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"unique_identifier\"),\\n                     disabled: true,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.id,\\n                     width: 500\\n                 },\\n@@ -779,62 +788,71 @@ pimcore.object.classes.klass = Class.create({\\n                     itemId: \"phpClassName\",\\n                     width: 500,\\n                     disabled: true,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: getPhpClassName(this.data.name)\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"parent_php_class\"),\\n                     name: \"parentClass\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.parentClass\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     width: 600,\\n                     name: \"implementsInterfaces\",\\n                     fieldLabel: t(\"implements_interfaces\"),\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.implementsInterfaces\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"use_traits\"),\\n                     name: \"useTraits\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.useTraits\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"listing_parent_php_class\"),\\n                     name: \"listingParentClass\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.listingParentClass\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"listing_use_traits\"),\\n                     name: \"listingUseTraits\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.listingUseTraits\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"link_generator_reference\"),\\n                     name: \"linkGeneratorReference\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.linkGeneratorReference\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"preview_generator_reference\"),\\n                     name: \"previewGeneratorReference\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.previewGeneratorReference\\n                 },\\n                 {\\n                     xtype: \"textfield\",\\n                     fieldLabel: t(\"preview_url\"),\\n                     name: \"previewUrl\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.previewUrl\\n                 },\\n                 {\\n@@ -885,6 +903,7 @@ pimcore.object.classes.klass = Class.create({\\n                     fieldLabel: t(\"group\"),\\n                     name: \"group\",\\n                     width: 600,\\n+                    renderer: Ext.util.Format.htmlEncode,\\n                     value: this.data.group\\n                 },\\n                 this.allowInheritance,'}}",
            "message_norm":"[admin ui] dataobject class - escape general settings input values (#10991)\n\n* [admin ui] dataobject class - escape general settings input values\r\n\r\n* update bundles\/adminbundle\/resources\/public\/js\/pimcore\/object\/classes\/class.js\r\n\r\n* [admin ui] dataobject class - escape general settings input values\r\n\r\n* [admin ui] dataobject class - escape general settings input values",
            "language":"ca",
            "entities":"[('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('#10991', 'ISSUE', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('update', 'ACTION', ''), ('adminbundle', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Resources\/public\/js\/pimcore\/object\/classes\/class.js'])",
            "num_files":1.0
        },
        {
            "index":1894,
            "vuln_id":"GHSA-gjqc-q9g6-q2j3",
            "cwe_id":"{'CWE-617'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9'}",
            "dataset":"osv",
            "summary":"`CHECK`-failures in binary ops in Tensorflow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [any binary op](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/kernels\/cwise_ops_common.h#L88-L137) would trigger `CHECK` failures. This occurs when the protobuf part corresponding to the tensor arguments is modified such that the `dtype` no longer matches the `dtype` expected by the op. In that case, calling the templated binary operator for the binary op would receive corrupted data, due to the type confusion involved:\n\n```cc\nfunctor::BinaryFunctor<Device, Functor, 1>()(\n    eigen_device, out->template flat<Tout>(),\n    input_0.template flat<Tin>(), input_1.template flat<Tin>(),\n    error_ptr);\n```\nIf `Tin` and `Tout` don't match the type of data in `out` and `input_*` tensors then `flat<*>` would interpret it wrongly. In most cases, this would be a silent failure, but we have noticed scenarios where this results in a `CHECK` crash, hence a denial of service.\n\n### Patches\nWe have patched the issue in GitHub commit [a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9).\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9",
            "commit_sha":"a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9",
            "patch":"SINGLE",
            "chain_ord":"['a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9']",
            "before_first_fix_commit":"{'c7db81b86b6746b494e5359433aa8e2dd7df25f6'}",
            "last_fix_commit":"a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/12\/2021, 08:24:39",
            "message":"Validate real and expected type of arguments to cwise ops.\n\nWithout this validation, it is possible to trigger a `CHECK`-fail denial of service.\n\nThis is a rollforward of a previous commit which was rolled back as it was relying on RTTI. This time we don't use RTTI, we replace `typeid(Tin).name()` with a double function call, `DataTypeString(DataTypeToEnum<Tin>::v())`.\n\nPiperOrigin-RevId: 409340416\nChange-Id: I96080b2796729a3a9b65e7c68307ac276070f2f0",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'tensorflow\/core\/kernels\/cwise_ops_common.h': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9\/tensorflow%2Fcore%2Fkernels%2Fcwise_ops_common.h', 'patch': '@@ -87,7 +87,17 @@ class BinaryOp : public BinaryOpShared {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& input_0 = ctx->input(0);\\n+    OP_REQUIRES(ctx, input_0.dtype() == DataTypeToEnum<Tin>::v(),\\n+                errors::InvalidArgument(\\n+                    \"Expected tensor of type \",\\n+                    DataTypeString(DataTypeToEnum<Tin>::v()), \" but got type \",\\n+                    DataTypeString(input_0.dtype())));\\n     const Tensor& input_1 = ctx->input(1);\\n+    OP_REQUIRES(ctx, input_1.dtype() == DataTypeToEnum<Tin>::v(),\\n+                errors::InvalidArgument(\\n+                    \"Expected tensor of type \",\\n+                    DataTypeString(DataTypeToEnum<Tin>::v()), \" but got type \",\\n+                    DataTypeString(input_1.dtype())));\\n     const Device& eigen_device = ctx->eigen_device<Device>();\\n     bool error = false;\\n     bool* const error_ptr = Functor::has_errors ? &error : nullptr;'}}",
            "message_norm":"validate real and expected type of arguments to cwise ops.\n\nwithout this validation, it is possible to trigger a `check`-fail denial of service.\n\nthis is a rollforward of a previous commit which was rolled back as it was relying on rtti. this time we don't use rtti, we replace `typeid(tin).name()` with a double function call, `datatypestring(datatypetoenum<tin>::v())`.\n\npiperorigin-revid: 409340416\nchange-id: i96080b2796729a3a9b65e7c68307ac276070f2f0",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('denial of service', 'SECWORD', ''), ('409340416', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/cwise_ops_common.h'])",
            "num_files":1.0
        },
        {
            "index":998,
            "vuln_id":"GHSA-786j-5qwq-r36x",
            "cwe_id":"{'CWE-824'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659'}",
            "dataset":"osv",
            "summary":"Segfault while copying constant resource tensor ### Impact\nDuring TensorFlow's Grappler optimizer phase, constant folding might attempt to deep copy a resource tensor. This results in a segfault, as these tensors are supposed to not change.\n\n### Patches\nWe have patched the issue in GitHub commit [7731e8dfbe4a56773be5dc94d631611211156659](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659",
            "commit_sha":"7731e8dfbe4a56773be5dc94d631611211156659",
            "patch":"SINGLE",
            "chain_ord":"['7731e8dfbe4a56773be5dc94d631611211156659']",
            "before_first_fix_commit":"{'a813a3f1631e9c0e0e0cc3032349a03a6041526c'}",
            "last_fix_commit":"7731e8dfbe4a56773be5dc94d631611211156659",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/19\/2021, 18:25:32",
            "message":"Don't constant-fold DT_RESOURCE constants.\n\nPiperOrigin-RevId: 391803952\nChange-Id: I0ea3ec31d3e7dfda0f03b4027a237f08d00a3091",
            "author":"A. Unique TensorFlower",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'tensorflow\/core\/common_runtime\/constant_folding.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7731e8dfbe4a56773be5dc94d631611211156659\/tensorflow%2Fcore%2Fcommon_runtime%2Fconstant_folding.cc', 'patch': '@@ -30,6 +30,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/log_memory.h\"\\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\\n #include \"tensorflow\/core\/graph\/algorithm.h\"\\n #include \"tensorflow\/core\/graph\/node_builder.h\"\\n #include \"tensorflow\/core\/graph\/subgraph.h\"\\n@@ -223,7 +224,8 @@ bool IsConstantFoldable(\\n     std::unordered_map<const Node*, std::vector<Tensor>>*\\n         shape_replacement_map) {\\n   if (n->IsConstant()) {\\n-    return true;\\n+    \/\/ Skip constant folding resources as they cannot be deep copied.\\n+    return n->output_type(0) != DT_RESOURCE;\\n   }\\n   if (MaybeReplaceShapeOp(n, shape_map, shape_replacement_map)) {\\n     return true;'}}",
            "message_norm":"don't constant-fold dt_resource constants.\n\npiperorigin-revid: 391803952\nchange-id: i0ea3ec31d3e7dfda0f03b4027a237f08d00a3091",
            "language":"ca",
            "entities":"[('391803952', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/common_runtime\/constant_folding.cc'])",
            "num_files":1.0
        },
        {
            "index":713,
            "vuln_id":"GHSA-5wpj-c6f7-24x8",
            "cwe_id":"{'CWE-475', 'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dbdd98c37bc25249e8f288bd30d01e118a7b4498'}",
            "dataset":"osv",
            "summary":"Undefined behavior when users supply invalid resource handles ### Impact\nMultiple TensorFlow operations misbehave in eager mode when the resource handle provided to them is invalid:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QueueIsClosedV2(handle=[])\n```\n\n```python\nimport tensorflow as tf\n\ntf.summary.flush(writer=())\n```\n  \nIn graph mode, it would have been impossible to perform these API calls, but migration to TF 2.x eager mode opened up this vulnerability. If the resource handle is empty, then a reference is bound to a null pointer inside TensorFlow codebase (various codepaths). This is undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [a5b89cd68c02329d793356bda85d079e9e69b4e7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7) and GitHub commit [dbdd98c37bc25249e8f288bd30d01e118a7b4498](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dbdd98c37bc25249e8f288bd30d01e118a7b4498).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Hong Jin from Singapore Management University.",
            "published_date":"2022-05-24",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7",
            "commit_sha":"a5b89cd68c02329d793356bda85d079e9e69b4e7",
            "patch":"MULTI",
            "chain_ord":"['dbdd98c37bc25249e8f288bd30d01e118a7b4498', 'a5b89cd68c02329d793356bda85d079e9e69b4e7']",
            "before_first_fix_commit":"{'c2ce4c72fdc9658e23dd9d42cb9ed30bdd60c2a6'}",
            "last_fix_commit":"a5b89cd68c02329d793356bda85d079e9e69b4e7",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/30\/2022, 04:07:06",
            "message":"Fix empty resource handle vulnerability.\n\nSome ops that attempt to extract a resource handle from user input\ncan lead to nullptr dereferences.  This returns an error in such\na case.\n\nPiperOrigin-RevId: 445571938",
            "author":"Antonio Sanchez",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/common_runtime\/eager\/execute.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a5b89cd68c02329d793356bda85d079e9e69b4e7\/tensorflow%2Fcore%2Fcommon_runtime%2Feager%2Fexecute.cc', 'patch': '@@ -304,6 +304,9 @@ Status GetDeviceForInput(const EagerOperation& op, const EagerContext& ctx,\\n     const Tensor* tensor;\\n     \/\/ TODO(fishx): Avoid blocking here.\\n     TF_RETURN_IF_ERROR(tensor_handle->Tensor(&tensor));\\n+    if (tensor->NumElements() == 0) {\\n+      return errors::InvalidArgument(\"Empty resource handle\");\\n+    }\\n     const ResourceHandle& handle = tensor->flat<ResourceHandle>()(0);\\n     device_name = handle.device();'}}",
            "message_norm":"fix empty resource handle vulnerability.\n\nsome ops that attempt to extract a resource handle from user input\ncan lead to nullptr dereferences.  this returns an error in such\na case.\n\npiperorigin-revid: 445571938",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('error', 'FLAW', ''), ('445571938', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/common_runtime\/eager\/execute.cc'])",
            "num_files":1.0
        },
        {
            "index":1006,
            "vuln_id":"GHSA-79mg-4w23-4fqc",
            "cwe_id":"{'CWE-89', 'CWE-287'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/fiveai\/Cachet\/commit\/27bca8280419966ba80c6fa283d985ddffa84bb6'}",
            "dataset":"osv",
            "summary":"Unauthenticated SQL Injection in Cachet ### Impact\nIn Cachet versions through 2.3.18, there is a SQL injection which is in the `SearchableTrait#scopeSearch()`. Attackers without authentication can utilize this vulnerability to exfiltrate sensitive data from the database such as administrator's password and session.\n\n### Patches\n\nThe original repository of [https:\/\/github.com\/CachetHQ\/Cachet](https:\/\/github.com\/CachetHQ\/Cachet) is not active, the stable version 2.3.18 and it's developing 2.4 branch is affected. \n\nUpdate to version 2.5 or later in the [https:\/\/github.com\/fiveai\/Cachet fork](https:\/\/github.com\/fiveai\/Cachet) to fix this vulnerability.",
            "published_date":"2021-08-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/fiveai\/Cachet",
            "commit_href":"https:\/\/github.com\/fiveai\/Cachet\/commit\/27bca8280419966ba80c6fa283d985ddffa84bb6",
            "commit_sha":"27bca8280419966ba80c6fa283d985ddffa84bb6",
            "patch":"SINGLE",
            "chain_ord":"['27bca8280419966ba80c6fa283d985ddffa84bb6']",
            "before_first_fix_commit":"{'8c1a2c27d4a46777a78bceefa7f3fee297ebe7be'}",
            "last_fix_commit":"27bca8280419966ba80c6fa283d985ddffa84bb6",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/15\/2021, 14:17:35",
            "message":"Ensure only allowed searchable columns are used in DB Query",
            "author":"Seb Dangerfield",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 2, 'total': 5}",
            "files":"{'app\/Models\/Traits\/SearchableTrait.php': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fiveai\/Cachet\/raw\/27bca8280419966ba80c6fa283d985ddffa84bb6\/app%2FModels%2FTraits%2FSearchableTrait.php', 'patch': '@@ -34,10 +34,11 @@ public function scopeSearch(Builder $query, array $search = [])\\n             return $query;\\n         }\\n \\n-        if (!array_intersect(array_keys($search), $this->searchable)) {\\n+        $allowed_search = array_intersect_key($search, array_flip($this->searchable));\\n+        if (! $allowed_search) {\\n             return $query;\\n         }\\n \\n-        return $query->where($search);\\n+        return $query->where($allowed_search);\\n     }\\n }'}}",
            "message_norm":"ensure only allowed searchable columns are used in db query",
            "language":"en",
            "entities":"[('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Models\/Traits\/SearchableTrait.php'])",
            "num_files":1.0
        },
        {
            "index":1439,
            "vuln_id":"GHSA-9w2p-5mgw-p94c",
            "cwe_id":"{'CWE-681'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/96f364a1ca3009f98980021c4b32be5fdcca33a1'}",
            "dataset":"osv",
            "summary":"Integer overflow due to conversion to unsigned ### Impact\nThe implementation of `tf.raw_ops.QuantizeAndDequantizeV4Grad` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value.\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeAndDequantizeV4Grad(\n  gradients=[1.0,2.0],\n  input=[1.0,1.0],\n  input_min=[0.0],\n  input_max=[10.0],\n  axis=-100)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc#L126) uses the `axis` value as the size argument to `absl::InlinedVector` constructor. But, the constructor uses an unsigned type for the argument, so the implicit conversion transforms the negative value to a large integer.\n\n### Patches\nWe have patched the issue in GitHub commit [96f364a1ca3009f98980021c4b32be5fdcca33a1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/96f364a1ca3009f98980021c4b32be5fdcca33a1).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, and TensorFlow 2.4.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/96f364a1ca3009f98980021c4b32be5fdcca33a1",
            "commit_sha":"96f364a1ca3009f98980021c4b32be5fdcca33a1",
            "patch":"SINGLE",
            "chain_ord":"['96f364a1ca3009f98980021c4b32be5fdcca33a1']",
            "before_first_fix_commit":"{'10fe168385e67aca66427910ba6942eb14d31c5a'}",
            "last_fix_commit":"96f364a1ca3009f98980021c4b32be5fdcca33a1",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2021, 20:27:01",
            "message":"Validate axis input in tf.raw_ops.QuantizeAndDequantizeV4Grad\n\nPiperOrigin-RevId: 388291385\nChange-Id: I3bab68dc61d935afa96c0da021a7b722c6dc8dc8",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/96f364a1ca3009f98980021c4b32be5fdcca33a1\/tensorflow%2Fcore%2Fkernels%2Fquantize_and_dequantize_op.cc', 'patch': '@@ -158,6 +158,13 @@ class QuantizeAndDequantizeV4GradientOp : public OpKernel {\\n     Tensor* input_backprop = nullptr;\\n     OP_REQUIRES_OK(ctx,\\n                    ctx->allocate_output(0, input.shape(), &input_backprop));\\n+    OP_REQUIRES(\\n+        ctx, axis_ >= -1,\\n+        errors::InvalidArgument(\"Axis must be at least -1. Found \", axis_));\\n+    OP_REQUIRES(ctx, (axis_ == -1 || axis_ < input.shape().dims()),\\n+                errors::InvalidArgument(\\n+                    \"Axis should be -1 or 0 or a positive value less than \",\\n+                    input.shape().dims(), \"but given axis value was \", axis_));\\n \\n     OP_REQUIRES(\\n         ctx, input.IsSameSize(gradient),'}}",
            "message_norm":"validate axis input in tf.raw_ops.quantizeanddequantizev4grad\n\npiperorigin-revid: 388291385\nchange-id: i3bab68dc61d935afa96c0da021a7b722c6dc8dc8",
            "language":"ca",
            "entities":"[('validate', 'ACTION', ''), ('388291385', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3489,
            "vuln_id":"GHSA-xrp2-fhq4-4q3w",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5'}",
            "dataset":"osv",
            "summary":"Segfault if `tf.histogram_fixed_width` is called with NaN values in TensorFlow ### Impact\nThe implementation of [`tf.histogram_fixed_width`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/histogram_op.cc) is vulnerable to a crash when the values array contain `NaN` elements:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.histogram_fixed_width(values=np.nan, value_range=[1,2])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/histogram_op.cc#L35-L74) assumes that all floating point operations are defined and then converts a floating point result to an integer index:\n\n```cc\nindex_to_bin.device(d) =\n    ((values.cwiseMax(value_range(0)) - values.constant(value_range(0)))\n         .template cast<double>() \/\n     step)\n        .cwiseMin(nbins_minus_1)\n        .template cast<int32>();\n```\n\nIf `values` contains `NaN` then the result of the division is still `NaN` and the cast to `int32` would result in a crash.\n\nThis only occurs on the CPU implementation.\n\n### Patches\nWe have patched the issue in GitHub commit [e57fd691c7b0fd00ea3bfe43444f30c1969748b5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/45770).",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "commit_sha":"e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "patch":"SINGLE",
            "chain_ord":"['e57fd691c7b0fd00ea3bfe43444f30c1969748b5']",
            "before_first_fix_commit":"{'484b5e8836454dbc93380176ae5eeeab02cc63c0'}",
            "last_fix_commit":"e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/20\/2022, 18:35:47",
            "message":"Prevent crash when histogram is called with NaN values.\n\nFixes #45770\n\nPiperOrigin-RevId: 443149951",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 2, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/histogram_op.cc': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5\/tensorflow%2Fcore%2Fkernels%2Fhistogram_op.cc', 'patch': '@@ -50,6 +50,15 @@ struct HistogramFixedWidthFunctor<CPUDevice, T, Tout> {\\n                         static_cast<double>(nbins);\\n     const double nbins_minus_1 = static_cast<double>(nbins - 1);\\n \\n+    \/\/ We cannot handle NANs in the algorithm below (due to the case to int32)\\n+    const Eigen::Tensor<int32, 1, 1> nans_tensor =\\n+        values.isnan().template cast<int32>();\\n+    const Eigen::Tensor<int32, 0, 1> reduced_tensor = nans_tensor.sum();\\n+    const int num_nans = reduced_tensor(0);\\n+    if (num_nans > 0) {\\n+      return errors::InvalidArgument(\"Histogram values must not contain NaN\");\\n+    }\\n+\\n     \/\/ The calculation is done by finding the slot of each value in `values`.\\n     \/\/ With [a, b]:\\n     \/\/   step = (b - a) \/ nbins\\n@@ -98,12 +107,12 @@ class HistogramFixedWidthOp : public OpKernel {\\n     const auto nbins = nbins_tensor.scalar<int32>()();\\n \\n     OP_REQUIRES(\\n-        ctx, (value_range(0) < value_range(1)),\\n+        ctx, value_range(0) < value_range(1),\\n         errors::InvalidArgument(\"value_range should satisfy value_range[0] < \"\\n                                 \"value_range[1], but got \\'[\",\\n                                 value_range(0), \", \", value_range(1), \"]\\'\"));\\n     OP_REQUIRES(\\n-        ctx, (nbins > 0),\\n+        ctx, nbins > 0,\\n         errors::InvalidArgument(\"nbins should be a positive number, but got \\'\",\\n                                 nbins, \"\\'\"));'}}",
            "message_norm":"prevent crash when histogram is called with nan values.\n\nfixes #45770\n\npiperorigin-revid: 443149951",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#45770', 'ISSUE', ''), ('443149951', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/histogram_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2561,
            "vuln_id":"GHSA-pfj3-56hm-jwq5",
            "cwe_id":"{'CWE-74'}",
            "score":7.9,
            "chain":"{'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/4cf373f7352f5d95f0bf6512af8af326b31c835e'}",
            "dataset":"osv",
            "summary":"Template injection in cron-utils ### Impact\nA Template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected.\n\n### Patches\nThe issue was patched and a new version released. Please upgrade to version 9.1.3.\n\n### Workarounds\nThere are no known workarounds up to this moment.\n\n### References\nA description of the issue is provided in [issue 461](https:\/\/github.com\/jmrozanec\/cron-utils\/issues\/461)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cron-utils Github repository](https:\/\/github.com\/jmrozanec\/cron-utils)",
            "published_date":"2020-11-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/jmrozanec\/cron-utils",
            "commit_href":"https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "commit_sha":"4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "patch":"SINGLE",
            "chain_ord":"['4cf373f7352f5d95f0bf6512af8af326b31c835e']",
            "before_first_fix_commit":"{'864f9f09af58bd48133a1492a09fb7fbc1c5858b'}",
            "last_fix_commit":"4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/17\/2020, 13:53:58",
            "message":"Update dependencies to fix security vulnerability.",
            "author":"Joze Rozanec",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 3, 'total': 7}",
            "files":"{'pom.xml': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jmrozanec\/cron-utils\/raw\/4cf373f7352f5d95f0bf6512af8af326b31c835e\/pom.xml', 'patch': '@@ -121,11 +121,12 @@\\n             <scope>test<\/scope>\\n         <\/dependency>\\n         <dependency>\\n-            <groupId>org.hibernate<\/groupId>\\n-            <artifactId>hibernate-validator<\/artifactId>\\n+            <groupId>org.apache.bval<\/groupId>\\n+            <artifactId>bval-jsr<\/artifactId>\\n+            <version>1.1.2<\/version>\\n+            <!--The Hibernate dependency is no longer used, due to security vulnerabilities -->\\n             <!-- https:\/\/stackoverflow.com\/questions\/48323244\/java-lang-nosuchmethoderror-javax-validation-bootstrapconfiguration-getclockproExecutionTimeQuartzIntegrationTest -->\\n             <!-- https:\/\/stackoverflow.com\/questions\/24386771\/javax-validation-validationexception-hv000183-unable-to-load-javax-el-express -->\\n-            <version>5.3.6.Final<\/version>\\n             <scope>test<\/scope>\\n         <\/dependency>\\n         <dependency>'}}",
            "message_norm":"update dependencies to fix security vulnerability.",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['pom.xml'])",
            "num_files":1.0
        },
        {
            "index":85,
            "vuln_id":"GHSA-2cqg-q7jm-j35c",
            "cwe_id":"{'CWE-79'}",
            "score":3.9,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/9ed1442bd124710f4178992cc4eca5236c7396b9'}",
            "dataset":"osv",
            "summary":"snipe-it is vulnerable to Cross-site Scripting snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').",
            "published_date":"2021-11-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/9ed1442bd124710f4178992cc4eca5236c7396b9",
            "commit_sha":"9ed1442bd124710f4178992cc4eca5236c7396b9",
            "patch":"SINGLE",
            "chain_ord":"['9ed1442bd124710f4178992cc4eca5236c7396b9']",
            "before_first_fix_commit":"{'edf98cb7951a922cdef7505e1efd115f92d1afd9', '3ea209a507fbcc992e0a9152e2074709e8459b47'}",
            "last_fix_commit":"9ed1442bd124710f4178992cc4eca5236c7396b9",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/09\/2021, 04:32:02",
            "message":"Merge pull request #10286 from uberbrady\/fix_bulk_audit_xss\n\nEscape asset_tag attribute at controller level for bulk checkout",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'app\/Http\/Controllers\/Api\/AssetsController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/9ed1442bd124710f4178992cc4eca5236c7396b9\/app%2FHttp%2FControllers%2FApi%2FAssetsController.php', 'patch': \"@@ -910,7 +910,7 @@ public function audit(Request $request) {\\n             }\\n         }\\n \\n-        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.$request->input('asset_tag').' not found'));\\n+        return response()->json(Helper::formatStandardApiResponse('error', ['asset_tag'=> e($request->input('asset_tag'))], 'Asset with tag '.e($request->input('asset_tag')).' not found'));\"}}",
            "message_norm":"merge pull request #10286 from uberbrady\/fix_bulk_audit_xss\n\nescape asset_tag attribute at controller level for bulk checkout",
            "language":"en",
            "entities":"[('#10286', 'ISSUE', ''), ('fix_bulk_audit_xss', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/Api\/AssetsController.php'])",
            "num_files":1.0
        },
        {
            "index":2696,
            "vuln_id":"GHSA-q4qf-3fc6-8x34",
            "cwe_id":"{'CWE-787', 'CWE-119'}",
            "score":8.7,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2d88f470dea2671b430884260f3626b1fe99830a'}",
            "dataset":"osv",
            "summary":"Segfault and data corruption in tensorflow-lite ### Impact\nTo mimic Python's indexing with negative values, TFLite uses `ResolveAxis` to convert negative values to positive indices. However, the only check that the converted index is now valid is only present in debug builds:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/internal\/reference\/reduce.h#L68-L72\n\nIf the `DCHECK` does not trigger, then code execution moves ahead with a negative index. This, in turn, results in accessing data out of bounds which results in segfaults and\/or data corruption.\n### Patches\nWe have patched the issue in 2d88f470dea2671b430884260f3626b1fe99830a and will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2020-09-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2d88f470dea2671b430884260f3626b1fe99830a",
            "commit_sha":"2d88f470dea2671b430884260f3626b1fe99830a",
            "patch":"SINGLE",
            "chain_ord":"['2d88f470dea2671b430884260f3626b1fe99830a']",
            "before_first_fix_commit":"{'d487b8c4ca7d77d650fb8dca94b073aad8ff4b5e'}",
            "last_fix_commit":"2d88f470dea2671b430884260f3626b1fe99830a",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/18\/2020, 21:43:00",
            "message":"[tflite] Ensure `ResolveAxis` properly handles negative inputs.\n\nIn Python, a list `l` of length `n` allows indexing with negative indices, `l[i]`. The only constraint is that `n + i` becomes positive. Code in `ResolveAxis` assumes the constraints and only checks it using a `DCHECK`. But the macro is a no-op in non-debug builds and that can result in reading from negative offsets (buffer underflows).\n\nPiperOrigin-RevId: 332530683\nChange-Id: I464e073fee618054ae3719a3679739007bb3f3bc",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/lite\/kernels\/internal\/reference\/reduce.h': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2d88f470dea2671b430884260f3626b1fe99830a\/tensorflow%2Flite%2Fkernels%2Finternal%2Freference%2Freduce.h', 'patch': '@@ -70,6 +70,9 @@ inline bool ResolveAxis(const int num_dims, const int* axis,\\n     \/\/ eg: For num_dims=3, [0, 1, 2] is the same as [-3, -2, -1]  *\/\\n     int current = axis[idx] < 0 ? (axis[idx] + num_dims) : axis[idx];\\n     TFLITE_DCHECK(current >= 0 && current < num_dims);\\n+    if (current < 0 || current >= num_dims) {\\n+      return false;\\n+    }\\n     bool is_dup = false;\\n     for (int j = 0; j < *out_num_axis; ++j) {\\n       if (out_axis[j] == current) {'}}",
            "message_norm":"[tflite] ensure `resolveaxis` properly handles negative inputs.\n\nin python, a list `l` of length `n` allows indexing with negative indices, `l[i]`. the only constraint is that `n + i` becomes positive. code in `resolveaxis` assumes the constraints and only checks it using a `dcheck`. but the macro is a no-op in non-debug builds and that can result in reading from negative offsets (buffer underflows).\n\npiperorigin-revid: 332530683\nchange-id: i464e073fee618054ae3719a3679739007bb3f3bc",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('buffer underflows', 'SECWORD', ''), ('332530683', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/reference\/reduce.h'])",
            "num_files":1.0
        },
        {
            "index":1768,
            "vuln_id":"GHSA-fqq2-xp7m-xvm8",
            "cwe_id":"{'CWE-362', 'CWE-119'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/RusPiRo\/ruspiro-singleton\/commit\/b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e'}",
            "dataset":"osv",
            "summary":"Data race in ruspiro-singleton `Singleton<T>` is meant to be a static object that can be initialized lazily. In\norder to satisfy the requirement that `static` items must implement `Sync`,\n`Singleton` implemented both `Sync` and `Send` unconditionally.\n\nThis allows for a bug where non-`Sync` types such as `Cell` can be used in\nsingletons and cause data races in concurrent programs.\n\nThe flaw was corrected in commit `b0d2bd20e` by adding trait bounds, requiring\nthe contaiend type to implement `Sync`.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/RusPiRo\/ruspiro-singleton",
            "commit_href":"https:\/\/github.com\/RusPiRo\/ruspiro-singleton\/commit\/b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e",
            "commit_sha":"b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e",
            "patch":"SINGLE",
            "chain_ord":"['b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e']",
            "before_first_fix_commit":"{'0565f8ef459bd336eda8a6a63d1d50cdb581c2b3'}",
            "last_fix_commit":"b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/16\/2020, 20:32:29",
            "message":"fix soundness",
            "author":"2ndTaleStudio",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 2, 'total': 6}",
            "files":"{'src\/lib.rs': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/RusPiRo\/ruspiro-singleton\/raw\/b0d2bd20eb40b9cbc2958b981ba2dcd9e6f9396e\/src%2Flib.rs', 'patch': \"@@ -81,8 +81,10 @@ pub struct Singleton<T: 'static> {\\n \\n \/\/ The Singleton need to implement Send & Sync to ensure cross core compile check mechanics\\n \/\/ this is safe as the inner RWLock ensures cross core safety\\n-unsafe impl<T> Sync for Singleton<T> {}\\n-unsafe impl<T> Send for Singleton<T> {}\\n+\/\/ but we need to be conditional on the inner type to prevent interior mutable types beeing used\\n+\/\/ inside a singleton\\n+unsafe impl<T> Sync for Singleton<T> where T: Sync {}\\n+unsafe impl<T> Send for Singleton<T> where T: Send {}\\n \\n impl<T: 'static> Singleton<T> {\\n     \/\/\/ Create a new [Singleton] instance to be used in a static variable. Only ``const fn`` constructors are allowed\"}}",
            "message_norm":"fix soundness",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0
        },
        {
            "index":3283,
            "vuln_id":"GHSA-whv6-rj84-2vh2",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections\/commit\/8ec1fca214f003538cec4137792ede928f25f583'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in nextcloud-vue-collections Versions of `nextcloud-vue-collections` prior to 0.4.2 are vulnerable to Cross-Site Scripting (XSS).  The `v-tooltip` component has an insecure `defaultHTML` configuration that allows arbitrary JavaScript to be injected in the tooltip of a collection item. This allows attackers to execute arbitrary code in a victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 0.4.2 or later.",
            "published_date":"2020-09-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections",
            "commit_href":"https:\/\/github.com\/juliushaertl\/nextcloud-vue-collections\/commit\/8ec1fca214f003538cec4137792ede928f25f583",
            "commit_sha":"8ec1fca214f003538cec4137792ede928f25f583",
            "patch":"SINGLE",
            "chain_ord":"['8ec1fca214f003538cec4137792ede928f25f583']",
            "before_first_fix_commit":"{'1d55cc3b462bc344de6cfbe45d590d0c2f99fc1a'}",
            "last_fix_commit":"8ec1fca214f003538cec4137792ede928f25f583",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/29\/2019, 13:41:42",
            "message":"Force defaultHtml setting of v-tooltip to be disabled\n\nSigned-off-by: Julius H\u00e4rtl <jus@bitgrid.net>",
            "author":"Julius H\u00e4rtl",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/components\/CollectionListItem.vue': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nextcloud\/nextcloud-vue-collections\/raw\/8ec1fca214f003538cec4137792ede928f25f583\/src%2Fcomponents%2FCollectionListItem.vue', 'patch': \"@@ -60,6 +60,9 @@ import Action from 'nextcloud-vue\/dist\/Components\/Action'\\n import Avatar from 'nextcloud-vue\/dist\/Components\/Avatar'\\n import Tooltip from 'nextcloud-vue\/dist\/Directives\/Tooltip'\\n \\n+Tooltip.options.defaultHtml = false\\n+\\n+\\n export default {\\n \\tname: 'CollectionListItem',\\n \\tcomponents: {\"}}",
            "message_norm":"force defaulthtml setting of v-tooltip to be disabled\n\nsigned-off-by: julius h\u00e4rtl <jus@bitgrid.net>",
            "language":"en",
            "entities":"[('jus@bitgrid.net', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/components\/CollectionListItem.vue'])",
            "num_files":1.0
        },
        {
            "index":3258,
            "vuln_id":"GHSA-wc69-rhjr-hc9g",
            "cwe_id":"{'CWE-400', 'CWE-1333'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/moment\/moment\/commit\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3'}",
            "dataset":"osv",
            "summary":"Inefficient Regular Expression Complexity in moment ### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https:\/\/github.com\/moment\/moment\/pull\/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.",
            "published_date":"2022-07-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/moment\/moment",
            "commit_href":"https:\/\/github.com\/moment\/moment\/commit\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3",
            "commit_sha":"9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3",
            "patch":"SINGLE",
            "chain_ord":"['9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3']",
            "before_first_fix_commit":"{'6374fd860aeff75e6c9d9d11540c6b22bc7ef175'}",
            "last_fix_commit":"9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/06\/2022, 15:28:25",
            "message":"[bugfix] Fix redos in preprocessRFC2822 regex (#6015)\n\n* fix ReDoS in preprocessRFC2822 regex\r\n\r\nFixes: [#2936](https:\/\/github.com\/moment\/moment\/issues\/6012)\r\n\r\nDisallow nested rfc2822 comments to prevent quadratic regex execution time (i.e each open bracket is considered at most twice).",
            "author":"Khang Vo (doublevkay)",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/lib\/create\/from-string.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moment\/moment\/raw\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3\/src%2Flib%2Fcreate%2Ffrom-string.js', 'patch': \"@@ -151,7 +151,7 @@ function untruncateYear(yearStr) {\\n function preprocessRFC2822(s) {\\n     \/\/ Remove comments and folding whitespace and replace multiple-spaces with a single space\\n     return s\\n-        .replace(\/\\\\([^)]*\\\\)|[\\\\n\\\\t]\/g, ' ')\\n+        .replace(\/\\\\([^()]*\\\\)|[\\\\n\\\\t]\/g, ' ')\\n         .replace(\/(\\\\s\\\\s+)\/g, ' ')\\n         .replace(\/^\\\\s\\\\s*\/, '')\\n         .replace(\/\\\\s\\\\s*$\/, '');\"}}",
            "message_norm":"[bugfix] fix redos in preprocessrfc2822 regex (#6015)\n\n* fix redos in preprocessrfc2822 regex\r\n\r\nfixes: [#2936](https:\/\/github.com\/moment\/moment\/issues\/6012)\r\n\r\ndisallow nested rfc2822 comments to prevent quadratic regex execution time (i.e each open bracket is considered at most twice).",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('preprocessrfc2822', 'SECWORD', ''), ('#6015', 'ISSUE', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('preprocessrfc2822', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#2936](https:\/\/github.com', 'ISSUE', ''), ('issues\/6012', 'FLAW', ''), ('prevent', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/create\/from-string.js'])",
            "num_files":1.0
        },
        {
            "index":2946,
            "vuln_id":"GHSA-rgvq-pcvf-hx75",
            "cwe_id":"{'CWE-131'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e'}",
            "dataset":"osv",
            "summary":"Heap OOB and null pointer dereference in `RaggedTensorToTensor` ### Impact\nDue to lack of validation in `tf.raw_ops.RaggedTensorToTensor`, an attacker can exploit an undefined behavior if input arguments are empty:\n\n```python\nimport tensorflow as tf\n\nshape = tf.constant([-1, -1], shape=[2], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = tf.constant(404, dtype=tf.int64)\nrow = tf.constant([269, 404, 0, 0, 0, 0, 0], shape=[7], dtype=tf.int64)\nrows = [row]\ntypes = ['ROW_SPLITS']\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=shape, values=values, default_value=default_value, \n  row_partition_tensors=rows, row_partition_types=types)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L356-L360) only checks that one of the tensors is not empty, but does not check for the other ones.\n\nThere are multiple `DCHECK` validations to prevent heap OOB, but these are no-op in release builds, hence they don't prevent anything.\n\n### Patches\nWe have patched the issue in GitHub commit [b761c9b652af2107cfbc33efd19be0ce41daa33e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e) followed by GitHub commit [f94ef358bb3e91d517446454edff6535bcfe8e4a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a) and GitHub commit [c4d7afb6a5986b04505aca4466ae1951686c80f6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":3,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e",
            "commit_sha":"b761c9b652af2107cfbc33efd19be0ce41daa33e",
            "patch":"MULTI",
            "chain_ord":"['f94ef358bb3e91d517446454edff6535bcfe8e4a', 'b761c9b652af2107cfbc33efd19be0ce41daa33e', 'c4d7afb6a5986b04505aca4466ae1951686c80f6']",
            "before_first_fix_commit":"{'50034ad2d55b10eb9d4593374546710b12f134e1'}",
            "last_fix_commit":"c4d7afb6a5986b04505aca4466ae1951686c80f6",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/15\/2021, 20:28:49",
            "message":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK.\n\nPiperOrigin-RevId: 368706628\nChange-Id: I5c9ea4833f38835ee183ca50d63251dc89c9f3bc",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 9, 'total': 20}",
            "files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 11, 'deletions': 9, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b761c9b652af2107cfbc33efd19be0ce41daa33e\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -208,7 +208,7 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n   }\\n \\n   void CalculateOutputIndexRowSplit(\\n-      const RowPartitionTensor& row_split,\\n+      OpKernelContext* context, const RowPartitionTensor& row_split,\\n       const vector<INDEX_TYPE>& parent_output_index,\\n       INDEX_TYPE output_index_multiplier, INDEX_TYPE output_size,\\n       vector<INDEX_TYPE>* result) {\\n@@ -233,7 +233,8 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n       }\\n     }\\n     if (row_split_size > 0) {\\n-      DCHECK_EQ(result->size(), row_split(row_split_size - 1));\\n+      OP_REQUIRES(context, result->size() == row_split(row_split_size - 1),\\n+                  errors::InvalidArgument(\"Invalid row split size.\"));\\n     }\\n   }\\n \\n@@ -259,7 +260,7 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n   \/\/ result[7] = -1 because parent_output_index[value_rowids[6]] == -1\\n   \/\/ result[8] = parent_output_index[value_rowids[7]]\\n   void CalculateOutputIndexValueRowID(\\n-      const RowPartitionTensor& value_rowids,\\n+      OpKernelContext* context, const RowPartitionTensor& value_rowids,\\n       const vector<INDEX_TYPE>& parent_output_index,\\n       INDEX_TYPE output_index_multiplier, INDEX_TYPE output_size,\\n       vector<INDEX_TYPE>* result) {\\n@@ -293,7 +294,8 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n       }\\n       result->push_back(current_output_index);\\n     }\\n-    DCHECK_EQ(result->size(), value_rowids.size());\\n+    OP_REQUIRES(context, result->size() == value_rowids.size(),\\n+                errors::InvalidArgument(\"Invalid row ids.\"));\\n   }\\n \\n   Status CalculateOutputIndex(OpKernelContext* context, int dimension,\\n@@ -307,13 +309,13 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n     switch (partition_type) {\\n       case RowPartitionType::VALUE_ROWIDS:\\n         CalculateOutputIndexValueRowID(\\n-            row_partition_tensor, parent_output_index, output_index_multiplier,\\n-            output_size, result);\\n+            context, row_partition_tensor, parent_output_index,\\n+            output_index_multiplier, output_size, result);\\n         return tensorflow::Status::OK();\\n       case RowPartitionType::ROW_SPLITS:\\n-        CalculateOutputIndexRowSplit(row_partition_tensor, parent_output_index,\\n-                                     output_index_multiplier, output_size,\\n-                                     result);\\n+        CalculateOutputIndexRowSplit(\\n+            context, row_partition_tensor, parent_output_index,\\n+            output_index_multiplier, output_size, result);\\n         return tensorflow::Status::OK();\\n       default:\\n         return errors::InvalidArgument('}}",
            "message_norm":"fix `tf.raw_ops.raggedtensortotensor` failing check.\n\npiperorigin-revid: 368706628\nchange-id: i5c9ea4833f38835ee183ca50d63251dc89c9f3bc",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('368706628', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])",
            "num_files":1.0
        },
        {
            "index":229,
            "vuln_id":"GHSA-394c-5j6w-4xmx",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/faisalman\/ua-parser-js\/commit\/6d1f26df051ba681463ef109d36c9cf0f7e32b18'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDoS) in ua-parser-js The package ua-parser-js before 0.7.23 are vulnerable to Regular Expression Denial of Service (ReDoS) in multiple regexes (see linked commit for more info).",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/faisalman\/ua-parser-js",
            "commit_href":"https:\/\/github.com\/faisalman\/ua-parser-js\/commit\/6d1f26df051ba681463ef109d36c9cf0f7e32b18",
            "commit_sha":"6d1f26df051ba681463ef109d36c9cf0f7e32b18",
            "patch":"SINGLE",
            "chain_ord":"['6d1f26df051ba681463ef109d36c9cf0f7e32b18']",
            "before_first_fix_commit":"{'86471ad7e24724757e6147cd449cc2af4fab6280'}",
            "last_fix_commit":"6d1f26df051ba681463ef109d36c9cf0f7e32b18",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/30\/2020, 17:50:19",
            "message":"Fix ReDoS vulnerabilities reported by Snyk",
            "author":"Faisal Salman",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 14, 'total': 28}",
            "files":"{'src\/ua-parser.js': {'additions': 14, 'deletions': 14, 'changes': 28, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/faisalman\/ua-parser-js\/raw\/6d1f26df051ba681463ef109d36c9cf0f7e32b18\/src%2Fua-parser.js', 'patch': \"@@ -222,7 +222,7 @@\\n \\n             \/\/ Presto based\\n             \/(opera\\\\smini)\\\\\/([\\\\w\\\\.-]+)\/i,                                       \/\/ Opera Mini\\n-            \/(opera\\\\s[mobiletab]+).+version\\\\\/([\\\\w\\\\.-]+)\/i,                      \/\/ Opera Mobi\/Tablet\\n+            \/(opera\\\\s[mobiletab]{3,6}).+version\\\\\/([\\\\w\\\\.-]+)\/i,                  \/\/ Opera Mobi\/Tablet\\n             \/(opera).+version\\\\\/([\\\\w\\\\.]+)\/i,                                     \/\/ Opera > 9.80\\n             \/(opera)[\\\\\/\\\\s]+([\\\\w\\\\.]+)\/i                                          \/\/ Opera < 9.80\\n             ], [NAME, VERSION], [\\n@@ -252,7 +252,7 @@\\n             \/(konqueror)\\\\\/([\\\\w\\\\.]+)\/i                                           \/\/ Konqueror\\n             ], [[NAME, 'Konqueror'], VERSION], [\\n \\n-            \/(trident).+rv[:\\\\s]([\\\\w\\\\.]+).+like\\\\sgecko\/i                         \/\/ IE11\\n+            \/(trident).+rv[:\\\\s]([\\\\w\\\\.]{1,9}).+like\\\\sgecko\/i                     \/\/ IE11\\n             ], [[NAME, 'IE'], VERSION], [\\n \\n             \/(edge|edgios|edga|edg)\\\\\/((\\\\d+)?[\\\\w\\\\.]+)\/i                          \/\/ Microsoft Edge\\n@@ -362,13 +362,13 @@\\n             \/fxios\\\\\/([\\\\w\\\\.-]+)\/i                                                \/\/ Firefox for iOS\\n             ], [VERSION, [NAME, 'Firefox']], [\\n \\n-            \/version\\\\\/([\\\\w\\\\.]+).+?mobile\\\\\/\\\\w+\\\\s(safari)\/i                       \/\/ Mobile Safari\\n+            \/version\\\\\/([\\\\w\\\\.]+)\\\\s.*mobile\\\\\/\\\\w+\\\\s(safari)\/i                      \/\/ Mobile Safari\\n             ], [VERSION, [NAME, 'Mobile Safari']], [\\n \\n-            \/version\\\\\/([\\\\w\\\\.]+).+?(mobile\\\\s?safari|safari)\/i                    \/\/ Safari & Safari Mobile\\n+            \/version\\\\\/([\\\\w\\\\.]+)\\\\s.*(mobile\\\\s?safari|safari)\/i                   \/\/ Safari & Safari Mobile\\n             ], [VERSION, NAME], [\\n \\n-            \/webkit.+?(gsa)\\\\\/([\\\\w\\\\.]+).+?(mobile\\\\s?safari|safari)(\\\\\/[\\\\w\\\\.]+)\/i  \/\/ Google Search Appliance on iOS\\n+            \/webkit.+?(gsa)\\\\\/([\\\\w\\\\.]+)\\\\s.*(mobile\\\\s?safari|safari)(\\\\\/[\\\\w\\\\.]+)\/i \/\/ Google Search Appliance on iOS\\n             ], [[NAME, 'GSA'], VERSION], [\\n \\n             \/webkit.+?(mobile\\\\s?safari|safari)(\\\\\/[\\\\w\\\\.]+)\/i                     \/\/ Safari < 3.0\\n@@ -387,7 +387,7 @@\\n \\n                                                                                 \/\/ Firefox\/SeaMonkey\/K-Meleon\/IceCat\/IceApe\/Firebird\/Phoenix\\n             \/(firefox)\\\\\/([\\\\w\\\\.]+)\\\\s[\\\\w\\\\s\\\\-]+\\\\\/[\\\\w\\\\.]+$\/i,                       \/\/ Other Firefox-based\\n-            \/(mozilla)\\\\\/([\\\\w\\\\.]+).+rv\\\\:.+gecko\\\\\/\\\\d+\/i,                          \/\/ Mozilla\\n+            \/(mozilla)\\\\\/([\\\\w\\\\.]+)\\\\s.+rv\\\\:.+gecko\\\\\/\\\\d+\/i,                        \/\/ Mozilla\\n \\n             \/\/ Other\\n             \/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\\\\/\\\\s]?([\\\\w\\\\.]+)\/i,\\n@@ -487,7 +487,7 @@\\n             \/(sprint\\\\s(\\\\w+))\/i                                                  \/\/ Sprint Phones\\n             ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [\\n \\n-            \/(htc)[;_\\\\s-]+([\\\\w\\\\s]+(?=\\\\)|\\\\sbuild)|\\\\w+)\/i,                        \/\/ HTC\\n+            \/(htc)[;_\\\\s-]{1,2}([\\\\w\\\\s]+(?=\\\\)|\\\\sbuild)|\\\\w+)\/i,                    \/\/ HTC\\n             \/(zte)-(\\\\w*)\/i,                                                     \/\/ ZTE\\n             \/(alcatel|geeksphone|nexian|panasonic|(?=;\\\\s)sony)[_\\\\s-]?([\\\\w-]*)\/i\\n                                                                                 \/\/ Alcatel\/GeeksPhone\/Nexian\/Panasonic\/Sony\\n@@ -591,13 +591,13 @@\\n             ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [\\n \\n             \/android.+;\\\\s(\\\\w+)\\\\s+build\\\\\/hm\\\\1\/i,                                 \/\/ Xiaomi Hongmi 'numeric' models\\n-            \/android.+(hm[\\\\s\\\\-_]*note?[\\\\s_]*(?:\\\\d\\\\w)?)\\\\s+build\/i,               \/\/ Xiaomi Hongmi\\n-            \/android.+(redmi[\\\\s\\\\-_]*(?:note|k)?(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\s+build|\\\\))\/i,      \\n+            \/android.+(hm[\\\\s\\\\-_]?note?[\\\\s_]?(?:\\\\d\\\\w)?)\\\\sbuild\/i,                \/\/ Xiaomi Hongmi\\n+            \/android.+(redmi[\\\\s\\\\-_]?(?:note|k)?(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\sbuild|\\\\))\/i,      \\n                                                                                 \/\/ Xiaomi Redmi\\n-            \/android.+(mi[\\\\s\\\\-_]*(?:a\\\\d|one|one[\\\\s_]plus|note lte)?[\\\\s_]?(?:\\\\d?\\\\w?)[\\\\s_]*(?:plus)?)\\\\s+build\/i    \\n+            \/android.+(mi[\\\\s\\\\-_]?(?:a\\\\d|one|one[\\\\s_]plus|note lte)?[\\\\s_]?(?:\\\\d?\\\\w?)[\\\\s_]?(?:plus)?)\\\\sbuild\/i    \\n                                                                                 \/\/ Xiaomi Mi\\n             ], [[MODEL, \/_\/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\\n-            \/android.+(mi[\\\\s\\\\-_]*(?:pad)(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\s+build|\\\\))\/i     \/\/ Mi Pad tablets\\n+            \/android.+(mi[\\\\s\\\\-_]?(?:pad)(?:[\\\\s_]?[\\\\w\\\\s]+))(?:\\\\sbuild|\\\\))\/i     \/\/ Mi Pad tablets\\n             ],[[MODEL, \/_\/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\\n             \/android.+;\\\\s(m[1-5]\\\\snote)\\\\sbuild\/i                                \/\/ Meizu\\n             ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\\n@@ -611,7 +611,7 @@\\n             \/android.+[;\\\\\/]\\\\s*(RCT[\\\\d\\\\w]+)\\\\s+build\/i                            \/\/ RCA Tablets\\n             ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\\n \\n-            \/android.+[;\\\\\/\\\\s]+(Venue[\\\\d\\\\s]{2,7})\\\\s+build\/i                      \/\/ Dell Venue Tablets\\n+            \/android.+[;\\\\\/\\\\s](Venue[\\\\d\\\\s]{2,7})\\\\s+build\/i                       \/\/ Dell Venue Tablets\\n             ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\\n \\n             \/android.+[;\\\\\/]\\\\s*(Q[T|M][\\\\d\\\\w]+)\\\\s+build\/i                         \/\/ Verizon Tablet\\n@@ -669,8 +669,8 @@\\n             \/android.+[;\\\\\/]\\\\s*TU_(1491)\\\\s+build\/i                               \/\/ Rotor Tablets\\n             ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\\n \\n-            \/android.+(KS(.+))\\\\s+build\/i                                        \/\/ Amazon Kindle Tablets\\n-            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\\n+            \/\/android.+(KS(.+))\\\\s+build\/i                                        \/\/ Amazon Kindle Tablets\\n+            \/\/], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\\n \\n             \/android.+(Gigaset)[\\\\s\\\\-]+(Q\\\\w{1,9})\\\\s+build\/i                      \/\/ Gigaset Tablets\\n             ], [VENDOR, MODEL, [TYPE, TABLET]], [\"}}",
            "message_norm":"fix redos vulnerabilities reported by snyk",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/ua-parser.js'])",
            "num_files":1.0
        },
        {
            "index":2918,
            "vuln_id":"GHSA-rcj2-vvjx-87pm",
            "cwe_id":"{'CWE-311'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/arrow-kt\/arrow\/commit\/74198dab522393487d5344f194dc21208ab71ae8'}",
            "dataset":"osv",
            "summary":"Missing Encryption of Sensitive Data in arrow-kt Arrow arrow-kt Arrow before 0.9.0 resolved Gradle build artifacts (for compiling and building the published JARs) over HTTP instead of HTTPS. Any of these dependent artifacts could have been maliciously compromised by an MITM attack.",
            "published_date":"2019-04-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/arrow-kt\/arrow",
            "commit_href":"https:\/\/github.com\/arrow-kt\/arrow\/commit\/74198dab522393487d5344f194dc21208ab71ae8",
            "commit_sha":"74198dab522393487d5344f194dc21208ab71ae8",
            "patch":"SINGLE",
            "chain_ord":"['74198dab522393487d5344f194dc21208ab71ae8']",
            "before_first_fix_commit":"{'b78924304193c4301b1c0a6cc0c253f105ed0a15'}",
            "last_fix_commit":"74198dab522393487d5344f194dc21208ab71ae8",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/19\/2019, 17:11:32",
            "message":"Fix some http vulnerabilities",
            "author":"Paco",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'build.gradle': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/arrow-kt\/arrow\/raw\/74198dab522393487d5344f194dc21208ab71ae8\/build.gradle', 'patch': '@@ -39,7 +39,7 @@ buildscript {\\n             url \"https:\/\/plugins.gradle.org\/m2\/\"\\n         }\\n         jcenter()\\n-        maven { url \"http:\/\/dl.bintray.com\/kotlin\/kotlin-dev\" }\\n+        maven { url \"https:\/\/dl.bintray.com\/kotlin\/kotlin-dev\" }\\n         maven { url \"https:\/\/dl.bintray.com\/jetbrains\/markdown\/\" }\\n         maven { url \"https:\/\/dl.bintray.com\/arrow-kt\/arrow-kt\/\" }\\n     }\\n@@ -69,8 +69,8 @@ allprojects {\\n     repositories {\\n         jcenter()\\n         maven { url \\'https:\/\/kotlin.bintray.com\/kotlinx\\' }\\n-        maven { url \"http:\/\/dl.bintray.com\/kotlin\/kotlin-dev\" }\\n-        maven { url \"http:\/\/dl.bintray.com\/arrow-kt\/arrow-kt\" }\\n+        maven { url \"https:\/\/dl.bintray.com\/kotlin\/kotlin-dev\" }\\n+        maven { url \"https:\/\/dl.bintray.com\/arrow-kt\/arrow-kt\" }\\n         maven { url \"https:\/\/dl.bintray.com\/jetbrains\/markdown\/\" }\\n     }\\n }\\n@@ -252,4 +252,4 @@ dependencyUpdates {\\n \\n task checkDependenciesVersion {\\n     dependsOn dependencyUpdates\\n-}\\n\\\\ No newline at end of file\\n+}'}}",
            "message_norm":"fix some http vulnerabilities",
            "language":"sv",
            "entities":"[('fix', 'ACTION', ''), ('vulnerabilities', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['build.gradle'])",
            "num_files":1.0
        },
        {
            "index":243,
            "vuln_id":"GHSA-3f8r-4qwm-r7jf",
            "cwe_id":"{'CWE-287'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/apache\/trafficcontrol\/commit\/f780aff77a52d52a37b4d1cc3e8e801c0b557356'}",
            "dataset":"osv",
            "summary":"Improper Authentication in Apache Traffic Control Improper authentication is possible in Apache Traffic Control versions 3.0.0 and 3.0.1 if LDAP is enabled for login in the Traffic Ops API component. Given a username for a user that can be authenticated via LDAP, it is possible to improperly authenticate as that user without that user's correct password.",
            "published_date":"2021-05-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/trafficcontrol",
            "commit_href":"https:\/\/github.com\/apache\/trafficcontrol\/commit\/f780aff77a52d52a37b4d1cc3e8e801c0b557356",
            "commit_sha":"f780aff77a52d52a37b4d1cc3e8e801c0b557356",
            "patch":"SINGLE",
            "chain_ord":"['f780aff77a52d52a37b4d1cc3e8e801c0b557356']",
            "before_first_fix_commit":"{'85596a08bb12835370895ba20455e5ce998278d1'}",
            "last_fix_commit":"f780aff77a52d52a37b4d1cc3e8e801c0b557356",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/30\/2019, 20:40:48",
            "message":"Improve ldap error handling",
            "author":"Rawlin Peters",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'traffic_ops\/traffic_ops_golang\/login\/login.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/trafficcontrol\/raw\/f780aff77a52d52a37b4d1cc3e8e801c0b557356\/traffic_ops%2Ftraffic_ops_golang%2Flogin%2Flogin.go', 'patch': '@@ -51,6 +51,10 @@ func LoginHandler(db *sqlx.DB, cfg config.Config) http.HandlerFunc {\\n \\t\\t\\thandleErrs(http.StatusBadRequest, err)\\n \\t\\t\\treturn\\n \\t\\t}\\n+\\t\\tif form.Username == \"\" || form.Password == \"\" {\\n+\\t\\t\\tapi.HandleErr(w, r, nil, http.StatusBadRequest, errors.New(\"username and password are required\"), nil)\\n+\\t\\t\\treturn\\n+\\t\\t}\\n \\t\\tresp := struct {\\n \\t\\t\\ttc.Alerts\\n \\t\\t}{}'}}",
            "message_norm":"improve ldap error handling",
            "language":"da",
            "entities":"[('improve', 'ACTION', ''), ('ldap', 'SECWORD', ''), ('error handling', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['traffic_ops\/traffic_ops_golang\/login\/login.go'])",
            "num_files":1.0
        },
        {
            "index":1348,
            "vuln_id":"GHSA-9959-6p3m-wxpc",
            "cwe_id":"{'CWE-119'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/netty\/netty\/commit\/2fa9400a59d0563a66908aba55c41e7285a04994'}",
            "dataset":"osv",
            "summary":"Denial of service in Netty The SslHandler in Netty before 3.9.2 allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted SSLv2Hello message.",
            "published_date":"2020-06-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/netty\/netty",
            "commit_href":"https:\/\/github.com\/netty\/netty\/commit\/2fa9400a59d0563a66908aba55c41e7285a04994",
            "commit_sha":"2fa9400a59d0563a66908aba55c41e7285a04994",
            "patch":"SINGLE",
            "chain_ord":"['2fa9400a59d0563a66908aba55c41e7285a04994']",
            "before_first_fix_commit":"{'129c17aaa4ac5c611519ef480c35a12e8282b807'}",
            "last_fix_commit":"2fa9400a59d0563a66908aba55c41e7285a04994",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/10\/2014, 08:55:19",
            "message":"Fix a bug where SslHandler does not handle SSLv2Hello correctly\n\nMotivation:\n\nWhen a SSLv2Hello message is received, SSLEngine expects the application buffer size to be more than 30KB which is larger than what SslBufferPool can provide.  SSLEngine will always return with BUFFER_OVERFLOW status, blocking the SSL session from continuing the handshake.\n\nModifications:\n\nWhen SSLEngine.getSession().getApplicationBufferSize() returns a value larger than what SslBufferPool provides, allocate a temporary heap buffer.\n\nResult:\n\nSSLv2Hello is handled correctly.",
            "author":"Trustin Lee",
            "comments":"{'com_1': {'author': 'normanmaurer', 'datetime': '06\/10\/2014, 10:12:19', 'body': \"shouldn't this check against remaining() ?\"}, 'com_2': {'author': 'trustin', 'datetime': '06\/10\/2014, 11:07:26', 'body': 'Not really because we always clear the buffer at the finally block below.'}}",
            "stats":"{'additions': 15, 'deletions': 5, 'total': 20}",
            "files":"{'src\/main\/java\/org\/jboss\/netty\/handler\/ssl\/SslHandler.java': {'additions': 15, 'deletions': 5, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/netty\/netty\/raw\/2fa9400a59d0563a66908aba55c41e7285a04994\/src%2Fmain%2Fjava%2Forg%2Fjboss%2Fnetty%2Fhandler%2Fssl%2FSslHandler.java', 'patch': '@@ -1268,8 +1268,18 @@ private ChannelBuffer unwrap(\\n                     \/\/ always contain at least one record in decode().  Therefore, if SSLEngine.unwrap() returns\\n                     \/\/ BUFFER_OVERFLOW, it is always resolved by retrying after emptying the application buffer.\\n                     for (;;) {\\n+                        final int outAppBufSize = engine.getSession().getApplicationBufferSize();\\n+                        final ByteBuffer outAppBuf;\\n+                        if (nioOutAppBuf.capacity() < outAppBufSize) {\\n+                            \/\/ SSLEngine wants a buffer larger than what the pool can provide.\\n+                            \/\/ Allocate a temporary heap buffer.\\n+                            outAppBuf = ByteBuffer.allocate(outAppBufSize);\\n+                        } else {\\n+                            outAppBuf = nioOutAppBuf;\\n+                        }\\n+\\n                         try {\\n-                            result = engine.unwrap(nioInNetBuf, nioOutAppBuf);\\n+                            result = engine.unwrap(nioInNetBuf, outAppBuf);\\n                             switch (result.getStatus()) {\\n                                 case CLOSED:\\n                                     \/\/ notify about the CLOSED state of the SSLEngine. See #137\\n@@ -1283,21 +1293,21 @@ private ChannelBuffer unwrap(\\n \\n                             break;\\n                         } finally {\\n-                            nioOutAppBuf.flip();\\n+                            outAppBuf.flip();\\n \\n                             \/\/ Sync the offset of the inbound buffer.\\n                             nettyInNetBuf.readerIndex(\\n                                     nettyInNetBufStartOffset + nioInNetBuf.position() - nioInNetBufStartOffset);\\n \\n                             \/\/ Copy the unwrapped data into a smaller buffer.\\n-                            if (nioOutAppBuf.hasRemaining()) {\\n+                            if (outAppBuf.hasRemaining()) {\\n                                 if (nettyOutAppBuf == null) {\\n                                     ChannelBufferFactory factory = ctx.getChannel().getConfig().getBufferFactory();\\n                                     nettyOutAppBuf = factory.getBuffer(initialNettyOutAppBufCapacity);\\n                                 }\\n-                                nettyOutAppBuf.writeBytes(nioOutAppBuf);\\n+                                nettyOutAppBuf.writeBytes(outAppBuf);\\n                             }\\n-                            nioOutAppBuf.clear();\\n+                            outAppBuf.clear();\\n                         }\\n                     }'}}",
            "message_norm":"fix a bug where sslhandler does not handle sslv2hello correctly\n\nmotivation:\n\nwhen a sslv2hello message is received, sslengine expects the application buffer size to be more than 30kb which is larger than what sslbufferpool can provide.  sslengine will always return with buffer_overflow status, blocking the ssl session from continuing the handshake.\n\nmodifications:\n\nwhen sslengine.getsession().getapplicationbuffersize() returns a value larger than what sslbufferpool provides, allocate a temporary heap buffer.\n\nresult:\n\nsslv2hello is handled correctly.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('bug', 'FLAW', ''), ('buffer_overflow', 'SECWORD', ''), ('ssl', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/jboss\/netty\/handler\/ssl\/SslHandler.java'])",
            "num_files":1.0
        },
        {
            "index":132,
            "vuln_id":"GHSA-2r8p-fg3c-wcj4",
            "cwe_id":"{'CWE-125'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d'}",
            "dataset":"osv",
            "summary":"Heap OOB and CHECK fail in `ResourceGather` ### Impact\nAn attacker can trigger a crash via a `CHECK`-fail in debug builds of TensorFlow using `tf.raw_ops.ResourceGather` or a read from outside the bounds of heap allocated data in the same API in a release build:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant(value=[[1,2],[3,4],[5,6]],shape=(3,2),dtype=tf.uint32)\nv = tf.Variable(tensor)\ntf.raw_ops.ResourceGather(\n  resource=v.handle,\n  indices=[0],\n  dtype=tf.uint32,\n  batch_dims=10,\n  validate_indices=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/resource_variable_ops.cc#L660-L668) does not check that the `batch_dims` value that the user supplies is less than the rank of the input tensor.\n\nSince the implementation uses several for loops over the dimensions of `tensor`, this results in reading data from outside the bounds of heap allocated buffer backing the tensor:\n\n```cc\n    \/\/ batch_dims_ = > params.dims() (10 > 2)\n    for (int i = 0; i < batch_dims_; ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n    for (int i = batch_dims_; i < indices.dims(); ++i) {\n      result_shape.AddDim(indices.dim_size(i));\n    }\n    for (int i = batch_dims_ + 1; i < params.dims(); ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n```\n\nIn debug mode, `.dim_size(i)` validates that the argument is less than `.dims()` using a `DCHECK`. But the `DCHECK` is a no-op in release builds.\n\n### Patches\nWe have patched the issue in GitHub commit [bc9c546ce7015c57c2f15c168b3d9201de679a1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d",
            "commit_sha":"bc9c546ce7015c57c2f15c168b3d9201de679a1d",
            "patch":"SINGLE",
            "chain_ord":"['bc9c546ce7015c57c2f15c168b3d9201de679a1d']",
            "before_first_fix_commit":"{'d5f28c9b17220a9c7b3a4c93fc6c3fea6949cadd'}",
            "last_fix_commit":"bc9c546ce7015c57c2f15c168b3d9201de679a1d",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 04:37:59",
            "message":"Prevent heap oob access in `resource_variable_ops.cc`\n\nPiperOrigin-RevId: 387936433\nChange-Id: I9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/resource_variable_ops.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/bc9c546ce7015c57c2f15c168b3d9201de679a1d\/tensorflow%2Fcore%2Fkernels%2Fresource_variable_ops.cc', 'patch': '@@ -660,6 +660,11 @@ class ResourceGatherOp : public OpKernel {\\n     OP_REQUIRES(\\n         c, TensorShapeUtils::IsVectorOrHigher(params.shape()),\\n         errors::InvalidArgument(\"params must be at least 1 dimensional\"));\\n+    OP_REQUIRES(\\n+        c, params.shape().dims() >= batch_dims_,\\n+        errors::InvalidArgument(\"params must have at least \", batch_dims_,\\n+                                \" (batch_dims) dimensions but it has shape \",\\n+                                params.shape().DebugString()));\\n \\n     \/\/ Check that we have enough index space\\n     const int64_t N = indices.NumElements();'}}",
            "message_norm":"prevent heap oob access in `resource_variable_ops.cc`\n\npiperorigin-revid: 387936433\nchange-id: i9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('387936433', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/resource_variable_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":2630,
            "vuln_id":"GHSA-pr38-qpxm-g88x",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/apache\/activemq-artemis\/pull\/3871\/commits\/153d2e9a979aead8dff95fbc91d659ecc7d0fb82', 'https:\/\/github.com\/apache\/activemq-artemis\/pull\/3862\/commits\/1f92368240229b8f5db92a92a72c703faf83e9b7'}",
            "dataset":"osv",
            "summary":"Uncontrolled Resource Consumption in Apache ActiveMQ Artemis In Apache ActiveMQ Artemis prior to 2.20.0 or 2.19.1, an attacker could partially disrupt availability (DoS) through uncontrolled resource consumption of memory.",
            "published_date":"2022-02-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/apache\/activemq-artemis",
            "commit_href":"https:\/\/github.com\/apache\/activemq-artemis\/pull\/3862\/commits\/1f92368240229b8f5db92a92a72c703faf83e9b7",
            "commit_sha":"1f92368240229b8f5db92a92a72c703faf83e9b7",
            "patch":"MULTI",
            "chain_ord":"['1f92368240229b8f5db92a92a72c703faf83e9b7', '153d2e9a979aead8dff95fbc91d659ecc7d0fb82']",
            "before_first_fix_commit":"{'4196faf7ce56cb3676d46acb3b0684b5cdf804d7'}",
            "last_fix_commit":"153d2e9a979aead8dff95fbc91d659ecc7d0fb82",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/19\/2021, 12:02:45",
            "message":"Be defensive when reading data from `ActiveMQBuffer` and allocating memory.\n\nOr else, an adversary may handcraft the packet causing OOM situation for a running a JVM.",
            "author":"Viktor Kolomeyko",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 4, 'total': 20}",
            "files":"{'artemis-core-client\/src\/main\/java\/org\/apache\/activemq\/artemis\/utils\/XidCodecSupport.java': {'additions': 16, 'deletions': 4, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/activemq-artemis\/raw\/1f92368240229b8f5db92a92a72c703faf83e9b7\/artemis-core-client%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2Fartemis%2Futils%2FXidCodecSupport.java', 'patch': '@@ -32,12 +32,24 @@ public static void encodeXid(final Xid xid, final ActiveMQBuffer out) {\\n       out.writeBytes(xid.getGlobalTransactionId());\\n    }\\n \\n+   private static byte[] safeReadBytes(final ActiveMQBuffer in) {\\n+      int claimedSize = in.readInt();\\n+      int bufferCapacity = in.capacity();\\n+      \/\/ We have to be defensive here and not try to allocate byte buffer straight from information available in the\\n+      \/\/ stream. Or else, an adversary may handcraft the packet causing OOM situation for a running JVM.\\n+      if (claimedSize > bufferCapacity) {\\n+         throw new IllegalStateException(\"Buffer size: \" + claimedSize +\\n+                 \" exceeds overall buffer size of: \" + bufferCapacity);\\n+      }\\n+      byte[] byteBuffer = new byte[claimedSize];\\n+      in.readBytes(byteBuffer);\\n+      return byteBuffer;\\n+   }\\n+\\n    public static Xid decodeXid(final ActiveMQBuffer in) {\\n       int formatID = in.readInt();\\n-      byte[] bq = new byte[in.readInt()];\\n-      in.readBytes(bq);\\n-      byte[] gtxid = new byte[in.readInt()];\\n-      in.readBytes(gtxid);\\n+      byte[] bq = safeReadBytes(in);\\n+      byte[] gtxid = safeReadBytes(in);\\n       return new XidImpl(bq, formatID, gtxid);\\n    }'}}",
            "message_norm":"be defensive when reading data from `activemqbuffer` and allocating memory.\n\nor else, an adversary may handcraft the packet causing oom situation for a running a jvm.",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['artemis-core-client\/src\/main\/java\/org\/apache\/activemq\/artemis\/utils\/XidCodecSupport.java'])",
            "num_files":1.0
        },
        {
            "index":1887,
            "vuln_id":"GHSA-ghww-cv4v-hmxx",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/756096da1260f29ff6f4532234d93d8e41dd5aa8'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery microweber microweber prior to version 1.2.11 is vulnerable to Cross-Site Request Forgery (CSRF).",
            "published_date":"2022-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "commit_sha":"756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "patch":"SINGLE",
            "chain_ord":"['756096da1260f29ff6f4532234d93d8e41dd5aa8']",
            "before_first_fix_commit":"{'037744b21342f771f6a3de65ed0be936d47c3737'}",
            "last_fix_commit":"756096da1260f29ff6f4532234d93d8e41dd5aa8",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/16\/2022, 16:19:52",
            "message":"Update UserLogoutController.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/756096da1260f29ff6f4532234d93d8e41dd5aa8\/src%2FMicroweberPackages%2FUser%2FHttp%2FControllers%2FUserLogoutController.php', 'patch': '@@ -5,6 +5,7 @@\\n use App\\\\Http\\\\Resources\\\\User\\\\UserResource;\\n use Illuminate\\\\Http\\\\Request;\\n use Illuminate\\\\Routing\\\\Controller;\\n+use Illuminate\\\\Support\\\\Facades\\\\Auth;\\n use MicroweberPackages\\\\App\\\\Http\\\\Middleware\\\\SameSiteRefererMiddleware;\\n \\n class UserLogoutController extends Controller\\n@@ -42,7 +43,11 @@ public function index(Request $request)\\n \\n     public function submit(Request $request)\\n     {\\n-        return logout();\\n+        Auth::logout();\\n+\\n+        $url = site_url();\\n+\\n+        return app()->url_manager->redirect($url);\\n     }\\n \\n }'}}",
            "message_norm":"update userlogoutcontroller.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/User\/Http\/Controllers\/UserLogoutController.php'])",
            "num_files":1.0
        },
        {
            "index":1041,
            "vuln_id":"GHSA-7jh9-6cpf-h4m7",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/MrSwitch\/hello.js\/commit\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669'}",
            "dataset":"osv",
            "summary":"XSS in hello.js This affects the package hello.js before 1.18.6. The code get the param oauth_redirect from url and pass it to location.assign without any check and sanitisation. So we can simply pass some XSS payloads into the url param oauth_redirect, such as javascript:alert(1).",
            "published_date":"2021-01-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/MrSwitch\/hello.js",
            "commit_href":"https:\/\/github.com\/MrSwitch\/hello.js\/commit\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669",
            "commit_sha":"d6f5137f30de6e0ef7048191ee6ae575fdc2f669",
            "patch":"SINGLE",
            "chain_ord":"['d6f5137f30de6e0ef7048191ee6ae575fdc2f669']",
            "before_first_fix_commit":"{'3b79ec93781b3d7b9c0b56f598e060301d1f3e73'}",
            "last_fix_commit":"d6f5137f30de6e0ef7048191ee6ae575fdc2f669",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/06\/2020, 11:20:56",
            "message":"fix(xss): oauth_redirect should be a valid url",
            "author":"Andrew Dodson",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'src\/hello.js': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/MrSwitch\/hello.js\/raw\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669\/src%2Fhello.js', 'patch': \"@@ -1388,8 +1388,12 @@ hello.utils.extend(hello.utils, {\\n \\t\\t\/\/ (URI Fragments within 302 Location URI are lost over HTTPS)\\n \\t\\t\/\/ Loading the redirect.html before triggering the OAuth Flow seems to fix it.\\n \\t\\telse if ('oauth_redirect' in p) {\\n+\\t\\t\\tvar url = decodeURIComponent(p.oauth_redirect);\\n+\\n+\\t\\t\\tif (isValidUrl(url)) {\\n+\\t\\t\\t\\tlocation.assign(url);\\n+\\t\\t\\t}\\n \\n-\\t\\t\\tlocation.assign(decodeURIComponent(p.oauth_redirect));\\n \\t\\t\\treturn;\\n \\t\\t}\"}}",
            "message_norm":"fix(xss): oauth_redirect should be a valid url",
            "language":"en",
            "entities":"[('fix(xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/hello.js'])",
            "num_files":1.0
        },
        {
            "index":390,
            "vuln_id":"GHSA-49j7-qghp-5wj8",
            "cwe_id":"{'CWE-94'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/fusesource\/hawtjni\/commit\/92c266170ce98edc200c656bd034a237098b8aa5'}",
            "dataset":"osv",
            "summary":"Improper Control of Generation of Code in HawtJNI Race condition in hawtjni-runtime\/src\/main\/java\/org\/fusesource\/hawtjni\/runtime\/Library.java in HawtJNI before 1.8, when a custom library path is not specified, allows local users to execute arbitrary Java code by overwriting a temporary JAR file with a predictable name in \/tmp.",
            "published_date":"2022-05-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/fusesource\/hawtjni",
            "commit_href":"https:\/\/github.com\/fusesource\/hawtjni\/commit\/92c266170ce98edc200c656bd034a237098b8aa5",
            "commit_sha":"92c266170ce98edc200c656bd034a237098b8aa5",
            "patch":"SINGLE",
            "chain_ord":"['92c266170ce98edc200c656bd034a237098b8aa5']",
            "before_first_fix_commit":"{'357bb279b0c8c67b7d357c1363efe86870ad9a81'}",
            "last_fix_commit":"92c266170ce98edc200c656bd034a237098b8aa5",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2013, 13:49:55",
            "message":"Simplify shared lib extraction.",
            "author":"Hiram Chirino",
            "comments":null,
            "stats":"{'additions': 29, 'deletions': 50, 'total': 79}",
            "files":"{'hawtjni-runtime\/src\/main\/java\/org\/fusesource\/hawtjni\/runtime\/Library.java': {'additions': 29, 'deletions': 50, 'changes': 79, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fusesource\/hawtjni\/raw\/92c266170ce98edc200c656bd034a237098b8aa5\/hawtjni-runtime%2Fsrc%2Fmain%2Fjava%2Forg%2Ffusesource%2Fhawtjni%2Fruntime%2FLibrary.java', 'patch': '@@ -9,13 +9,11 @@\\n  *******************************************************************************\/\\n package org.fusesource.hawtjni.runtime;\\n \\n-import java.io.File;\\n-import java.io.FileOutputStream;\\n-import java.io.IOException;\\n-import java.io.InputStream;\\n+import java.io.*;\\n import java.net.MalformedURLException;\\n import java.net.URL;\\n import java.util.ArrayList;\\n+import java.util.Random;\\n import java.util.regex.Pattern;\\n \\n \/**\\n@@ -206,16 +204,19 @@ final public String getLibraryFileName() {\\n     private boolean exractAndLoad(ArrayList<String> errors, String version, String customPath, String resourcePath) {\\n         URL resource = classLoader.getResource(resourcePath);\\n         if( resource !=null ) {\\n-            \\n+\\n             String libName = name + \"-\" + getBitModel();\\n             if( version !=null) {\\n                 libName += \"-\" + version;\\n             }\\n-            \\n+            String []libNameParts = map(libName).split(\"\\\\\\\\.\");\\n+            String prefix = libNameParts[0]+\"-\";\\n+            String suffix = \".\"+libNameParts[1];\\n+\\n             if( customPath!=null ) {\\n                 \/\/ Try to extract it to the custom path...\\n-                File target = file(customPath, map(libName));\\n-                if( extract(errors, resource, target) ) {\\n+                File target = extract(errors, resource, prefix, suffix, file(customPath));\\n+                if( target!=null ) {\\n                     if( load(errors, target) ) {\\n                         return true;\\n                     }\\n@@ -224,8 +225,8 @@ private boolean exractAndLoad(ArrayList<String> errors, String version, String c\\n             \\n             \/\/ Fall back to extracting to the tmp dir\\n             customPath = System.getProperty(\"java.io.tmpdir\");\\n-            File target = file(customPath, map(libName));\\n-            if( extract(errors, resource, target) ) {\\n+            File target = extract(errors, resource, prefix, suffix, file(customPath));\\n+            if( target!=null ) {\\n                 if( load(errors, target) ) {\\n                     return true;\\n                 }\\n@@ -259,67 +260,45 @@ private String map(String libName) {\\n         return libName;\\n     }\\n \\n-    private boolean extract(ArrayList<String> errors, URL source, File target) {\\n-        FileOutputStream os = null;\\n-        InputStream is = null;\\n-        boolean extracting = false;\\n+    private File extract(ArrayList<String> errors, URL source, String prefix, String suffix, File directory) {\\n+        File target = null;\\n         try {\\n-            if (!target.exists() || isStale(source, target) ) {\\n+            FileOutputStream os = null;\\n+            InputStream is = null;\\n+            try {\\n+                target = File.createTempFile(prefix, suffix, directory);\\n                 is = source.openStream();\\n                 if (is != null) {\\n                     byte[] buffer = new byte[4096];\\n                     os = new FileOutputStream(target);\\n-                    extracting = true;\\n                     int read;\\n                     while ((read = is.read(buffer)) != -1) {\\n                         os.write(buffer, 0, read);\\n                     }\\n-                    os.close();\\n-                    is.close();\\n                     chmod(\"755\", target);\\n                 }\\n+                target.deleteOnExit();\\n+                return target;\\n+            } finally {\\n+                close(os);\\n+                close(is);\\n             }\\n         } catch (Throwable e) {\\n-            try {\\n-                if (os != null)\\n-                    os.close();\\n-            } catch (IOException e1) {\\n-            }\\n-            try {\\n-                if (is != null)\\n-                    is.close();\\n-            } catch (IOException e1) {\\n-            }\\n-            if (extracting && target.exists())\\n+            if( target!=null ) {\\n                 target.delete();\\n+            }\\n             errors.add(e.getMessage());\\n-            return false;\\n         }\\n-        return true;\\n+        return null;\\n     }\\n \\n-    private boolean isStale(URL source, File target) {\\n-        \\n-        if( source.getProtocol().equals(\"jar\") ) {\\n-            \/\/ unwrap the jar protocol...\\n+    static private void close(Closeable file) {\\n+        if(file!=null) {\\n             try {\\n-                String parts[] = source.getFile().split(Pattern.quote(\"!\"));\\n-                source = new URL(parts[0]);\\n-            } catch (MalformedURLException e) {\\n-                return false;\\n-            }\\n-        }\\n-        \\n-        File sourceFile=null;\\n-        if( source.getProtocol().equals(\"file\") ) {\\n-            sourceFile = new File(source.getFile());\\n-        }\\n-        if( sourceFile!=null && sourceFile.exists() ) {\\n-            if( sourceFile.lastModified() > target.lastModified() ) {\\n-                return true;\\n+                file.close();\\n+            } catch (Exception ignore) {\\n             }\\n         }\\n-        return false;\\n     }\\n \\n     private void chmod(String permision, File path) {'}}",
            "message_norm":"simplify shared lib extraction.",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['hawtjni-runtime\/src\/main\/java\/org\/fusesource\/hawtjni\/runtime\/Library.java'])",
            "num_files":1.0
        },
        {
            "index":2996,
            "vuln_id":"GHSA-rr8m-29g8-8cgc",
            "cwe_id":"{'CWE-89'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/6aca30e10b4181534f73f96d6e2ebeb45ec15069'}",
            "dataset":"osv",
            "summary":"SQL Injection in Fork CMS Fork CMS is vulnerable to SQL injection through marking blog comments on bulk as spam in versions prior to 5.11.1.",
            "published_date":"2022-03-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/forkcms\/forkcms",
            "commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/6aca30e10b4181534f73f96d6e2ebeb45ec15069",
            "commit_sha":"6aca30e10b4181534f73f96d6e2ebeb45ec15069",
            "patch":"SINGLE",
            "chain_ord":"['6aca30e10b4181534f73f96d6e2ebeb45ec15069']",
            "before_first_fix_commit":"{'1b38e33a98992793e998a937b717355212346993'}",
            "last_fix_commit":"6aca30e10b4181534f73f96d6e2ebeb45ec15069",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/23\/2022, 12:21:47",
            "message":"Prevent sql injection through the ids of the blog comments",
            "author":"Jelmer Prins",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/Backend\/Modules\/Blog\/Engine\/Model.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/6aca30e10b4181534f73f96d6e2ebeb45ec15069\/src%2FBackend%2FModules%2FBlog%2FEngine%2FModel.php', 'patch': \"@@ -501,7 +501,7 @@ public static function getComments(array $ids): array\\n             'SELECT *\\n              FROM blog_comments AS i\\n              WHERE i.id IN (' . implode(', ', array_fill(0, count($ids), '?')) . ')',\\n-            $ids\\n+            array_map('intval', $ids)\\n         );\\n     }\"}}",
            "message_norm":"prevent sql injection through the ids of the blog comments",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('sql injection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Backend\/Modules\/Blog\/Engine\/Model.php'])",
            "num_files":1.0
        },
        {
            "index":1357,
            "vuln_id":"GHSA-9c8h-vvrj-w2p8",
            "cwe_id":"{'CWE-125'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373'}",
            "dataset":"osv",
            "summary":"Heap OOB in `RaggedGather` ### Impact\nIf the arguments to `tf.raw_ops.RaggedGather` don't determine a valid ragged tensor code can trigger a read from outside of bounds of heap allocated buffers.\n                                                                                                                                                                                                                                                                                          \n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedGather(\n  params_nested_splits = [0,0,0],\n  params_dense_values = [1,1],\n  indices = [0,0,9,0,0],\n  OUTPUT_RAGGED_RANK=0)\n```\n\nIn debug mode, the same code triggers a `CHECK` failure.\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/ragged_gather_op.cc#L70) directly reads the first dimension of a tensor shape before checking that said tensor has rank of at least 1 (i.e., it is not a scalar). Furthermore, the implementation does not check that the list given by `params_nested_splits` is not an empty list of tensors.\n\n### Patches\nWe have patched the issue in GitHub commit [a2b743f6017d7b97af1fe49087ae15f0ac634373](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373",
            "commit_sha":"a2b743f6017d7b97af1fe49087ae15f0ac634373",
            "patch":"SINGLE",
            "chain_ord":"['a2b743f6017d7b97af1fe49087ae15f0ac634373']",
            "before_first_fix_commit":"{'4979e3b104cede96958ea88be5ce5fc584949340'}",
            "last_fix_commit":"a2b743f6017d7b97af1fe49087ae15f0ac634373",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/03\/2021, 02:05:27",
            "message":"Fix heap OOB in `tf.raw_ops.RaggedGather`\n\nPiperOrigin-RevId: 388355464\nChange-Id: If14d96231d1cd7aad7c4d1c22c1bab1576b75717",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 1, 'total': 8}",
            "files":"{'tensorflow\/core\/kernels\/ragged_gather_op.cc': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a2b743f6017d7b97af1fe49087ae15f0ac634373\/tensorflow%2Fcore%2Fkernels%2Fragged_gather_op.cc', 'patch': '@@ -58,15 +58,21 @@ class RaggedGatherOpBase : public OpKernel {\\n \\n   void Compute(OpKernelContext* context) override {\\n     \/\/ Get the input Tensors.\\n+\\n     OpInputList params_nested_splits_in;\\n     OP_REQUIRES_OK(context, context->input_list(\"params_nested_splits\",\\n                                                 &params_nested_splits_in));\\n+    OP_REQUIRES(\\n+        context, params_nested_splits_in.size() > 0,\\n+        errors::InvalidArgument(\"params_nested_splits must be non empty\"));\\n+\\n     const Tensor& params_dense_values_in =\\n         context->input(params_nested_splits_in.size());\\n     const Tensor& indices_in =\\n         context->input(params_nested_splits_in.size() + 1);\\n \\n-    DCHECK_GT(params_nested_splits_in.size(), 0);  \/\/ Enforced by REGISTER_OP.\\n+    OP_REQUIRES(context, params_nested_splits_in[0].dims() > 0,\\n+                errors::InvalidArgument(\"Split tensors must not be scalars\"));\\n     SPLITS_TYPE num_params = params_nested_splits_in[0].dim_size(0) - 1;\\n     OP_REQUIRES_OK(context, ValidateIndices(indices_in, num_params));'}}",
            "message_norm":"fix heap oob in `tf.raw_ops.raggedgather`\n\npiperorigin-revid: 388355464\nchange-id: if14d96231d1cd7aad7c4d1c22c1bab1576b75717",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('388355464', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_gather_op.cc'])",
            "num_files":1.0
        },
        {
            "index":351,
            "vuln_id":"GHSA-4449-hg37-77v8",
            "cwe_id":"{'CWE-78'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/totaljs\/framework\/commit\/6192491ab2631e7c1d317c221f18ea613e2c18a5'}",
            "dataset":"osv",
            "summary":"Command injection in total.js There is a command injection vulnerability that affects the package total.js before version 3.4.7. The issue occurs in the image.pipe and image.stream functions. The type parameter is used to build the command that is then executed using child_process.spawn. The issue occurs because child_process.spawn is called with the option shell set to true and because the type parameter is not properly sanitized.",
            "published_date":"2021-02-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/totaljs\/framework",
            "commit_href":"https:\/\/github.com\/totaljs\/framework\/commit\/6192491ab2631e7c1d317c221f18ea613e2c18a5",
            "commit_sha":"6192491ab2631e7c1d317c221f18ea613e2c18a5",
            "patch":"SINGLE",
            "chain_ord":"['6192491ab2631e7c1d317c221f18ea613e2c18a5']",
            "before_first_fix_commit":"{'79e84ada0a4455a2fe2383bed6436f231290276a'}",
            "last_fix_commit":"6192491ab2631e7c1d317c221f18ea613e2c18a5",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/27\/2020, 16:36:16",
            "message":"Fixed \"Command Injection\" in `image.stream()` - thank to Sam Sanoop.",
            "author":"Peter Sirka",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'image.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/totaljs\/framework\/raw\/6192491ab2631e7c1d317c221f18ea613e2c18a5\/image.js', 'patch': '@@ -38,6 +38,7 @@ const SPAWN_OPT = { shell: true };\\n const D = require(\\'os\\').platform().substring(0, 3).toLowerCase() === \\'win\\' ? \\'\"\\' : \\'\\\\\\'\\';\\n const CMD_CONVERT = { gm: \\'gm\\', im: \\'convert\\', magick: \\'magick\\' };\\n const CMD_CONVERT2 = { gm: \\'gm convert\\', im: \\'convert\\', magick: \\'magick\\' };\\n+const SUPPORTEDIMAGES = { jpg: 1, png: 1, gif: 1, apng: 1, jpeg: 1, heif: 1, heic: 1, webp: 1, ico: 1 };\\n \\n var CACHE = {};\\n var middlewares = {};\\n@@ -322,7 +323,7 @@ ImageProto.stream = function(type, writer) {\\n \\n \\t!self.builder.length && self.minify();\\n \\n-\\tif (!type)\\n+\\tif (!type || !SUPPORTEDIMAGES[type])\\n \\t\\ttype = self.outputType;\\n \\n \\tF.stats.performance.open++;'}}",
            "message_norm":"fixed \"command injection\" in `image.stream()` - thank to sam sanoop.",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('command injection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['image.js'])",
            "num_files":1.0
        },
        {
            "index":2479,
            "vuln_id":"GHSA-mw7r-3g6w-85qg",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/6b1250b6ffea7006226dd937e52cf5b353fcfc15', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/242c59ea40c0428e1ced7366bf2c28bfbdda1999'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1139, CVE-2019-1140, CVE-2019-1141, CVE-2019-1195, CVE-2019-1196, CVE-2019-1197.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/242c59ea40c0428e1ced7366bf2c28bfbdda1999",
            "commit_sha":"242c59ea40c0428e1ced7366bf2c28bfbdda1999",
            "patch":"MULTI",
            "chain_ord":"['242c59ea40c0428e1ced7366bf2c28bfbdda1999', '6b1250b6ffea7006226dd937e52cf5b353fcfc15']",
            "before_first_fix_commit":"{'75162b7f2d8ac2b37d17564e9c979ba1bae707e8', '450a349fda1b153d758a9e01698b977e60870e4c'}",
            "last_fix_commit":"6b1250b6ffea7006226dd937e52cf5b353fcfc15",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/02\/2019, 20:12:05",
            "message":"[CVE-2019-1131] Chakra Type confusion",
            "author":"Taylor Woll",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 4, 'total': 5}",
            "files":"{'lib\/Parser\/Parse.cpp': {'additions': 1, 'deletions': 4, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/242c59ea40c0428e1ced7366bf2c28bfbdda1999\/lib%2FParser%2FParse.cpp', 'patch': '@@ -4664,10 +4664,7 @@ ParseNodePtr Parser::ParseMemberList(LPCOLESTR pNameHint, uint32* pNameHintLengt\\n                     }\\n                 }\\n \\n-                if (buildAST)\\n-                {\\n-                    CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\\n-                }\\n+                CheckArgumentsUse(pidHint, GetCurrentFunctionNode());\\n \\n                 bool couldBeObjectPattern = !isObjectPattern && m_token.tk == tkAsg;\\n                 \/\/ Saving the current state as we may change the isObjectPattern down below.'}}",
            "message_norm":"[cve-2019-1131] chakra type confusion",
            "language":"en",
            "entities":"[('cve-2019-1131', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Parser\/Parse.cpp'])",
            "num_files":1.0
        },
        {
            "index":696,
            "vuln_id":"GHSA-5rwj-j5m3-3chj",
            "cwe_id":"{'CWE-401'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/sonicdoe\/detect-character-encoding\/commit\/d44356927b92e3b13e178071bf6d7c671766f588'}",
            "dataset":"osv",
            "summary":"Missing Release of Memory after Effective Lifetime in detect-character-encoding ### Impact\n\nIn detect-character-encoding v0.3.0 and earlier, allocated memory is not released.\n\n### Patches\n\nThe problem has been patched in [detect-character-encoding v0.3.1](https:\/\/github.com\/sonicdoe\/detect-character-encoding\/releases\/tag\/v0.3.1).\n\n### CVSS score\n\n[CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H\/RL:O\/RC:C](https:\/\/www.first.org\/cvss\/calculator\/3.1#CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:N\/A:H\/RL:O\/RC:C)\n\nBase Score: 7.5 (High)\nTemporal Score: 7.2 (High)\n\nSince detect-character-encoding is a library, the scoring is based on the \u201c[reasonable worst-case implementation scenario](https:\/\/www.first.org\/cvss\/v3.1\/user-guide#3-7-Scoring-Vulnerabilities-in-Software-Libraries-and-Similar)\u201d, namely, using detect-character-encoding in a program accessible over the internet which becomes unavailable when running out of memory. Depending on your specific implementation, the vulnerability\u2019s severity in your program may be different.\n\n### Proof of concept\n\n```js\nconst express = require(\"express\");\nconst detectCharacterEncoding = require(\"detect-character-encoding\");\n\nconst app = express();\n\napp.get(\"\/\", (req, res) => {\n  detectCharacterEncoding(Buffer.from(\"foo\"));\n\n  res.end();\n});\n\napp.listen(3000);\n```\n\n`hey -n 1000000 http:\/\/localhost:3000` ([`hey`](https:\/\/github.com\/rakyll\/hey)) causes the Node.js process to consume more and more memory.\n\n### References\n\n- https:\/\/github.com\/sonicdoe\/detect-character-encoding\/commit\/d44356927b92e3b13e178071bf6d7c671766f588\n- https:\/\/github.com\/sonicdoe\/detect-character-encoding\/pull\/6",
            "published_date":"2021-09-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/sonicdoe\/detect-character-encoding",
            "commit_href":"https:\/\/github.com\/sonicdoe\/detect-character-encoding\/commit\/d44356927b92e3b13e178071bf6d7c671766f588",
            "commit_sha":"d44356927b92e3b13e178071bf6d7c671766f588",
            "patch":"SINGLE",
            "chain_ord":"['d44356927b92e3b13e178071bf6d7c671766f588']",
            "before_first_fix_commit":"{'2e3aa333a573960edf2d782bca3b25a01e49678b'}",
            "last_fix_commit":"d44356927b92e3b13e178071bf6d7c671766f588",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/09\/2017, 18:19:58",
            "message":"Fix memory leak by properly closing `charsetDetector`",
            "author":"Michael Hertsch",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'icuWrapper.cpp': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sonicdoe\/detect-character-encoding\/raw\/d44356927b92e3b13e178071bf6d7c671766f588\/icuWrapper.cpp', 'patch': '@@ -28,27 +28,31 @@ NAN_METHOD(DetectCharacterEncoding) {\\n \\n \\tif(U_FAILURE(errorCode)) {\\n \\t\\tNan::ThrowError(\"Failed to set ICU charset detector\u2019s text.\");\\n+\\t\\tucsdet_close(charsetDetector);\\n \\t\\treturn;\\n \\t}\\n \\n \\tcharsetMatch = ucsdet_detect(charsetDetector, &errorCode);\\n \\n \\tif(U_FAILURE(errorCode)) {\\n \\t\\tNan::ThrowError(\"Failed to detect charset.\");\\n+\\t\\tucsdet_close(charsetDetector);\\n \\t\\treturn;\\n \\t}\\n \\n \\tconst char *charsetName = ucsdet_getName(charsetMatch, &errorCode);\\n \\n \\tif(U_FAILURE(errorCode)) {\\n \\t\\tNan::ThrowError(\"Failed to get name from charset match.\");\\n+\\t\\tucsdet_close(charsetDetector);\\n \\t\\treturn;\\n \\t}\\n \\n \\tint32_t confidence = ucsdet_getConfidence(charsetMatch, &errorCode);\\n \\n \\tif(U_FAILURE(errorCode)) {\\n \\t\\tNan::ThrowError(\"Failed to get confidence from charset match.\");\\n+\\t\\tucsdet_close(charsetDetector);\\n \\t\\treturn;\\n \\t}\\n \\n@@ -57,6 +61,7 @@ NAN_METHOD(DetectCharacterEncoding) {\\n \\tobj->Set(Nan::New<v8::String>(\"confidence\").ToLocalChecked(), Nan::New<v8::Number>(confidence));\\n \\n \\tinfo.GetReturnValue().Set(obj);\\n+\\tucsdet_close(charsetDetector);\\n }\\n \\n void Init(v8::Local<v8::Object> exports) {'}}",
            "message_norm":"fix memory leak by properly closing `charsetdetector`",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('memory leak', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['icuWrapper.cpp'])",
            "num_files":1.0
        },
        {
            "index":3447,
            "vuln_id":"GHSA-xjfw-5vv5-vjq2",
            "cwe_id":"{'CWE-79', 'CWE-116'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Filter Stream Converter Application in XWiki Platform ### Impact\nWe found a possible XSS vector in the `Filter.FilterStreamDescriptorForm` wiki page related to pretty much all the form fields printed in the home page of the application.\n\n### Patches\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `Filter.FilterStreamDescriptorForm` (with wiki editor) and change the lines\n\n```\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/>\n        #else\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/>\n```\n\ninto\n\n```\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/>\n        #else\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/>\n```",
            "published_date":"2022-06-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "commit_sha":"21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "patch":"SINGLE",
            "chain_ord":"['21906acb5ee2304552f56f9bbdbf8e7d368f7f3a']",
            "before_first_fix_commit":"{'eed842a0ea9e263548805b908ebbd362213ce0ea'}",
            "last_fix_commit":"21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/04\/2022, 10:33:53",
            "message":"XWIKI-19293: Fix bad escaping",
            "author":"Thomas Mortagne",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a\/xwiki-platform-core%2Fxwiki-platform-filter%2Fxwiki-platform-filter-ui%2Fsrc%2Fmain%2Fresources%2FFilter%2FFilterStreamDescriptorForm.xml', 'patch': '@@ -58,9 +58,9 @@\\n       &lt;dd&gt;\\n         ## TODO: design a real framework to generate form by type\\n         #if (($descriptor.defaultValue || \"$!descriptor.defaultValue\" != \\'\\') &amp;&amp; ($descriptor.type.getName() == \\'boolean\\' || $descriptor.type.getName() == \\'int\\' || $descriptor.type.getName() == \\'java.lang.String\\'))\\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/&gt;\\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/&gt;\\n         #else\\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/&gt;\\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/&gt;\\n         #end\\n       &lt;\/dd&gt;\\n     #end'}}",
            "message_norm":"xwiki-19293: fix bad escaping",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml'])",
            "num_files":1.0
        },
        {
            "index":1031,
            "vuln_id":"GHSA-7gfg-6934-mqq2",
            "cwe_id":"{'CWE-287'}",
            "score":5.6,
            "chain":"{'https:\/\/github.com\/pion\/dtls\/commit\/fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0'}",
            "dataset":"osv",
            "summary":"Improper Authenication in Pion DTLS handleIncomingPacket in conn.go in Pion DTLS before 1.5.2 lacks a check for application data with epoch 0, which allows remote attackers to inject arbitrary unencrypted data after handshake completion.",
            "published_date":"2021-06-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/pion\/dtls",
            "commit_href":"https:\/\/github.com\/pion\/dtls\/commit\/fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0",
            "commit_sha":"fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0",
            "patch":"SINGLE",
            "chain_ord":"['fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0']",
            "before_first_fix_commit":"{'82948855ecb86a9e0b86c8dd43d010cbc545dc94'}",
            "last_fix_commit":"fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/11\/2019, 09:12:16",
            "message":"Assert that ApplicationData has epoch != 0\n\nOtherwise we may accept unencrypted\/unauthenticated ApplicationData\nfrom a remote",
            "author":"Sean DuBois",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'conn.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pion\/dtls\/raw\/fd73a5df2ff0e1fb6ae6a51e2777d7a16cc4f4e0\/conn.go', 'patch': '@@ -559,6 +559,10 @@ func (c *Conn) handleIncomingPacket(buf []byte) (*alert, error) {\\n \\t\\tc.log.Trace(\"<- ChangeCipherSpec\")\\n \\t\\tc.setRemoteEpoch(c.getRemoteEpoch() + 1)\\n \\tcase *applicationData:\\n+\\t\\tif h.epoch == 0 {\\n+\\t\\t\\treturn &alert{alertLevelFatal, alertUnexpectedMessage}, fmt.Errorf(\"ApplicationData with epoch of 0\")\\n+\\t\\t}\\n+\\n \\t\\tc.decrypted <- content.data\\n \\tdefault:\\n \\t\\treturn &alert{alertLevelFatal, alertUnexpectedMessage}, fmt.Errorf(\"unhandled contentType %d\", content.contentType())'}}",
            "message_norm":"assert that applicationdata has epoch != 0\n\notherwise we may accept unencrypted\/unauthenticated applicationdata\nfrom a remote",
            "language":"en",
            "entities":"[('unencrypted', 'SECWORD', ''), ('unauthenticated', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['conn.go'])",
            "num_files":1.0
        },
        {
            "index":2613,
            "vuln_id":"GHSA-ppc3-fpvh-7396",
            "cwe_id":"{'CWE-362'}",
            "score":7.0,
            "chain":"{'https:\/\/github.com\/apache\/netbeans-html4j\/commit\/fa70e507e5555e1adb4f6518479fc408a7abd0e6'}",
            "dataset":"osv",
            "summary":"Improper synchronization in Apache Netbeans HTML\/Java API There exists a race condition between the deletion of the temporary file and the creation of the temporary directory in `webkit` subproject of HTML\/Java API version 1.7. A similar vulnerability has recently been disclosed in other Java projects and the fix in HTML\/Java API version 1.7.1 follows theirs: To avoid local privilege escalation version 1.7.1 creates the temporary directory atomically without dealing with the temporary file.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/netbeans-html4j",
            "commit_href":"https:\/\/github.com\/apache\/netbeans-html4j\/commit\/fa70e507e5555e1adb4f6518479fc408a7abd0e6",
            "commit_sha":"fa70e507e5555e1adb4f6518479fc408a7abd0e6",
            "patch":"SINGLE",
            "chain_ord":"['fa70e507e5555e1adb4f6518479fc408a7abd0e6']",
            "before_first_fix_commit":"{'d1dcd9c0542ac46d7764256a81057dfbe2d8805a'}",
            "last_fix_commit":"fa70e507e5555e1adb4f6518479fc408a7abd0e6",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/15\/2020, 08:56:27",
            "message":"createTempDirectory atomically",
            "author":"Jaroslav Tulach",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 3, 'total': 4}",
            "files":"{'webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java': {'additions': 1, 'deletions': 3, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/netbeans-html4j\/raw\/fa70e507e5555e1adb4f6518479fc408a7abd0e6\/webkit%2Fsrc%2Fmain%2Fjava%2Forg%2Fnetbeans%2Fhtml%2Fpresenters%2Fwebkit%2FUnJarResources.java', 'patch': '@@ -39,9 +39,7 @@ static URL extract(URL url) throws IOException {\\n         if (jar == null) {\\n             return url;\\n         }\\n-        File dir = File.createTempFile(jar.getName(), \".dir\");\\n-        dir.delete();\\n-        dir.mkdirs();\\n+        File dir = Files.createTempDirectory(jar.getName() + \".dir\").toFile();\\n \\n         Enumeration<JarEntry> en = jar.entries();\\n         while (en.hasMoreElements()) {'}}",
            "message_norm":"createtempdirectory atomically",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java'])",
            "num_files":1.0
        },
        {
            "index":2730,
            "vuln_id":"GHSA-q9qc-pp5x-mc8c",
            "cwe_id":"{'CWE-94', 'CWE-1336'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Special Elements Used in a Template Engine in microweber Improper Neutralization of Special Elements Used in a Template Engine in GitHub repository microweber\/microweber prior to 1.3.",
            "published_date":"2022-03-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "commit_sha":"e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "patch":"SINGLE",
            "chain_ord":"['e0224462b3dd6b1f7c6ec1197413afc6019bc3b5']",
            "before_first_fix_commit":"{'b2baab6e582b2efe63788d367a2bb61a2fa26470'}",
            "last_fix_commit":"e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/09\/2022, 11:17:21",
            "message":"Update AdminCommentController.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 10, 'total': 13}",
            "files":"{'src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php': {'additions': 3, 'deletions': 10, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5\/src%2FMicroweberPackages%2FComment%2FHttp%2FControllers%2FAdmin%2FAdminCommentController.php', 'patch': \"@@ -18,18 +18,16 @@\\n use MicroweberPackages\\\\Comment\\\\Models\\\\Comment;\\n use MicroweberPackages\\\\Comment\\\\Events\\\\NewComment;\\n use MicroweberPackages\\\\Comment\\\\Notifications\\\\NewCommentNotification;\\n+use MicroweberPackages\\\\Helper\\\\HTMLClean;\\n use MicroweberPackages\\\\User\\\\Models\\\\User;\\n use MicroweberPackages\\\\Utils\\\\Mail\\\\MailSender;\\n \\n-\\n class AdminCommentController extends AdminController\\n {\\n     public function index(Request $request)\\n     {\\n-\\n         $contents = $this->getComments($request);\\n \\n-\\n         return $this->view('comment::admin.comments.index', ['contents' => $contents]);\\n     }\\n \\n@@ -42,7 +40,6 @@ public function getComments(Request $request)\\n             $contents = $contents->filter($filter);\\n         }\\n \\n-\\n         $contents = $contents->paginate($request->get('limit', 30))\\n             ->appends($request->except('page'));\\n \\n@@ -148,12 +145,8 @@ public function saveCommentEdit(Request $request)\\n \\n         $comment_body = $data['comment_body'];\\n \\n-        \/\/ Claer HTML\\n-        $comment_body = $this->app->format->clean_html($comment_body);\\n-\\n-        \/\/ Clear XSS\\n-        $evil = ['(?<!\\\\w)on\\\\w*', 'xmlns', 'formaction', 'xlink:href', 'FSCommand', 'seekSegmentTime'];\\n-        $comment_body = $this->app->format->clean_xss($comment_body, true, $evil, 'removeEvilAttributes');\\n+        $cleanHtml = new HTMLClean();\\n+        $comment_body = $cleanHtml->onlyTags($comment_body);\\n \\n         if (!empty($comment_body) and !empty($data['format']) and $data['format'] == 'markdown') {\\n             $comment_body = Markdown::convertToHtml($comment_body);\"}}",
            "message_norm":"update admincommentcontroller.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', ''), ('admincommentcontroller.php', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php'])",
            "num_files":1.0
        },
        {
            "index":873,
            "vuln_id":"GHSA-6p5r-g9mq-ggh2",
            "cwe_id":"{'CWE-824'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in `MatrixSetDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixSetDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixSetDiagV3(\n  input=[1,2,3],\n  diagonal=[1,1],\n  k=[],\n  align='RIGHT_LEFT')\n```\n  \nThe  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong: \n\n```cc \n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [ff8894044dfae5568ecbf2ed514c1a37dc394f1b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
            "commit_sha":"ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
            "patch":"SINGLE",
            "chain_ord":"['ff8894044dfae5568ecbf2ed514c1a37dc394f1b']",
            "before_first_fix_commit":"{'59077ac39cc64139f889863081bdb3d0f88d39b6'}",
            "last_fix_commit":"ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 01:58:29",
            "message":"Add one missing valdiation to `matrix_set_diag_op.cc`\n\nPiperOrigin-RevId: 387923408\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_set_diag_op.cc', 'patch': '@@ -70,6 +70,9 @@ class MatrixSetDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(\\n+          context, diag_index.NumElements() > 0,\\n+          errors::InvalidArgument(\"diag_index must have at least one element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}",
            "message_norm":"add one missing valdiation to `matrix_set_diag_op.cc`\n\npiperorigin-revid: 387923408\nchange-id: if6a97b9098c13879400f56c22f91555cdf0ce5d7",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('387923408', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc'])",
            "num_files":1.0
        },
        {
            "index":227,
            "vuln_id":"GHSA-393f-2jr3-cp69",
            "cwe_id":"{'CWE-754'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b432a38fe0e1b4b904a6c222cbce794c39703e87'}",
            "dataset":"osv",
            "summary":"CHECK-fail in DrawBoundingBoxes ### Impact\nAn attacker can trigger a denial of service via a `CHECK` failure by passing an empty image to `tf.raw_ops.DrawBoundingBoxes`:\n\n```python\nimport tensorflow as tf\n\nimages = tf.fill([53, 0, 48, 1], 0.)\nboxes = tf.fill([53, 31, 4], 0.)\nboxes = tf.Variable(boxes)\nboxes[0, 0, 0].assign(3.90621)\ntf.raw_ops.DrawBoundingBoxes(images=images, boxes=boxes)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ea34a18dc3f5c8d80a40ccca1404f343b5d55f91\/tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc#L148-L165) uses `CHECK_*` assertions instead of `OP_REQUIRES` to validate user controlled inputs. Whereas `OP_REQUIRES` allows returning an error condition back to the user, the `CHECK_*` macros result in a crash if the condition is false, similar to `assert`.\n\n```cc\nconst int64 max_box_row_clamp = std::min<int64>(max_box_row, height - 1);\n... \nCHECK_GE(max_box_row_clamp, 0);\n``` \n    \nIn this case, `height` is 0 from the `images` input. This results in `max_box_row_clamp` being negative and the assertion being falsified, followed by aborting program execution.\n    \n### Patches\nWe have patched the issue in GitHub commit [b432a38fe0e1b4b904a6c222cbce794c39703e87](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b432a38fe0e1b4b904a6c222cbce794c39703e87).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b432a38fe0e1b4b904a6c222cbce794c39703e87",
            "commit_sha":"b432a38fe0e1b4b904a6c222cbce794c39703e87",
            "patch":"SINGLE",
            "chain_ord":"['b432a38fe0e1b4b904a6c222cbce794c39703e87']",
            "before_first_fix_commit":"{'ea34a18dc3f5c8d80a40ccca1404f343b5d55f91'}",
            "last_fix_commit":"b432a38fe0e1b4b904a6c222cbce794c39703e87",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/21\/2021, 22:57:36",
            "message":"Fix overflow CHECK issue with `tf.raw_ops.DrawBoundingBoxes`.\n\nPiperOrigin-RevId: 369753591\nChange-Id: I3b45fc98ee0d28a3c20b7e9c995aa647c976ec40",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 36, 'deletions': 12, 'total': 48}",
            "files":"{'tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc': {'additions': 36, 'deletions': 12, 'changes': 48, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b432a38fe0e1b4b904a6c222cbce794c39703e87\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fdraw_bounding_box_op.cc', 'patch': '@@ -147,22 +147,46 @@ class DrawBoundingBoxesOp : public OpKernel {\\n \\n         \/\/ At this point, {min,max}_box_{row,col}_clamp are inside the\\n         \/\/ image.\\n-        CHECK_GE(min_box_row_clamp, 0);\\n-        CHECK_GE(max_box_row_clamp, 0);\\n-        CHECK_LT(min_box_row_clamp, height);\\n-        CHECK_LT(max_box_row_clamp, height);\\n-        CHECK_GE(min_box_col_clamp, 0);\\n-        CHECK_GE(max_box_col_clamp, 0);\\n-        CHECK_LT(min_box_col_clamp, width);\\n-        CHECK_LT(max_box_col_clamp, width);\\n+        OP_REQUIRES(\\n+            context, min_box_row_clamp >= 0,\\n+            errors::InvalidArgument(\"Min box row clamp is less than 0.\"));\\n+        OP_REQUIRES(\\n+            context, max_box_row_clamp >= 0,\\n+            errors::InvalidArgument(\"Max box row clamp is less than 0.\"));\\n+        OP_REQUIRES(context, min_box_row_clamp <= height,\\n+                    errors::InvalidArgument(\\n+                        \"Min box row clamp is greater than height.\"));\\n+        OP_REQUIRES(context, max_box_row_clamp <= height,\\n+                    errors::InvalidArgument(\\n+                        \"Max box row clamp is greater than height.\"));\\n+\\n+        OP_REQUIRES(\\n+            context, min_box_col_clamp >= 0,\\n+            errors::InvalidArgument(\"Min box col clamp is less than 0.\"));\\n+        OP_REQUIRES(\\n+            context, max_box_col_clamp >= 0,\\n+            errors::InvalidArgument(\"Max box col clamp is less than 0.\"));\\n+        OP_REQUIRES(context, min_box_col_clamp <= width,\\n+                    errors::InvalidArgument(\\n+                        \"Min box col clamp is greater than width.\"));\\n+        OP_REQUIRES(context, max_box_col_clamp <= width,\\n+                    errors::InvalidArgument(\\n+                        \"Max box col clamp is greater than width.\"));\\n \\n         \/\/ At this point, the min_box_row and min_box_col are either\\n         \/\/ in the image or above\/left of it, and max_box_row and\\n         \/\/ max_box_col are either in the image or below\/right or it.\\n-        CHECK_LT(min_box_row, height);\\n-        CHECK_GE(max_box_row, 0);\\n-        CHECK_LT(min_box_col, width);\\n-        CHECK_GE(max_box_col, 0);\\n+\\n+        OP_REQUIRES(\\n+            context, min_box_row <= height,\\n+            errors::InvalidArgument(\"Min box row is greater than height.\"));\\n+        OP_REQUIRES(context, max_box_row >= 0,\\n+                    errors::InvalidArgument(\"Max box row is less than 0.\"));\\n+        OP_REQUIRES(\\n+            context, min_box_col <= width,\\n+            errors::InvalidArgument(\"Min box col is greater than width.\"));\\n+        OP_REQUIRES(context, max_box_col >= 0,\\n+                    errors::InvalidArgument(\"Max box col is less than 0.\"));\\n \\n         \/\/ Draw top line.\\n         if (min_box_row >= 0) {'}}",
            "message_norm":"fix overflow check issue with `tf.raw_ops.drawboundingboxes`.\n\npiperorigin-revid: 369753591\nchange-id: i3b45fc98ee0d28a3c20b7e9c995aa647c976ec40",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('369753591', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/draw_bounding_box_op.cc'])",
            "num_files":1.0
        },
        {
            "index":427,
            "vuln_id":"GHSA-4h44-w6fm-548g",
            "cwe_id":"{'CWE-325', 'CWE-200', 'CWE-502', 'CWE-20'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/FriendsOfTYPO3\/mediace\/commit\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75'}",
            "dataset":"osv",
            "summary":"Potential Remote Code Execution in TYPO3 with mediace extension > ### Meta\n> * CVSS: `CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (9.1)\n> * CWE-325, CWE-20, CWE-200, CWE-502\n\n### Problem\nIt has been discovered that an internal verification mechanism can be used to generate arbitrary checksums. This allows to inject arbitrary data having a valid cryptographic message authentication code (HMAC-SHA1) and can lead to various attack chains as described below.\n\n* [TYPO3-CORE-SA-2020-007](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2020-007), [CVE-2020-15099](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2020-15099): Potential Privilege Escalation\n  + the database server used for a TYPO3 installation must be accessible for an attacker (either via internet or shared hosting network)\n  + `CVSS:3.1\/AV:N\/AC:H\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (7.5, high)\n* [TYPO3-CORE-SA-2016-013](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2016-013), [CVE-2016-5091](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2016-5091): Insecure Deserialization & Remote Code Execution\n  + an attacker must have access to at least one Extbase plugin or module action in a TYPO3 installation\n  + `CVSS:3.1\/AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H\/E:F\/RL:O\/RC:C` (9.1, critical)\n\nThe overall severity of this vulnerability is critical (9.1) based on mentioned attack chains and the fact it does not require any privileges.\n\n### Solution\nIn case the extension is not used and required at all, it is suggested to uninstall and remove it from the system completely. Otherwise, an updated version 7.6.5 is available from the TYPO3 extension manager, Packagist and the TYPO3 extension repository:\n\n* https:\/\/extensions.typo3.org\/extension\/download\/mediace\/7.6.5\/zip\/\n* https:\/\/packagist.org\/packages\/friendsoftypo3\/mediace#7.6.5\n\nAs a precautionary measure it is advised to change `encryptionKey` and database credentials in `typo3conf\/LocalConfiguration.php`.\n\n### Credits\nThanks to TYPO3 security team member Oliver Hader who reported and fixed the issue.\n\n### References\n* [TYPO3-EXT-SA-2020-014](https:\/\/typo3.org\/security\/advisory\/typo3-ext-sa-2020-014)",
            "published_date":"2020-07-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/FriendsOfTYPO3\/mediace",
            "commit_href":"https:\/\/github.com\/FriendsOfTYPO3\/mediace\/commit\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75",
            "commit_sha":"fa29ffd3e8b275782a8600d2406e1b1e5e16ae75",
            "patch":"SINGLE",
            "chain_ord":"['fa29ffd3e8b275782a8600d2406e1b1e5e16ae75']",
            "before_first_fix_commit":"{'a06c3fdf310ea4d53e193f21a23e630a3cd9f608'}",
            "last_fix_commit":"fa29ffd3e8b275782a8600d2406e1b1e5e16ae75",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/29\/2020, 13:39:55",
            "message":"[SECURITY] Restrict file validation hash generation\n\nSecurity-References: CVE-2020-15086",
            "author":"Oliver Hader",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 2, 'total': 9}",
            "files":"{'Resources\/PHP\/ValidateHashEID.php': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FriendsOfTYPO3\/mediace\/raw\/fa29ffd3e8b275782a8600d2406e1b1e5e16ae75\/Resources%2FPHP%2FValidateHashEID.php', 'patch': \"@@ -14,10 +14,15 @@\\n \\n call_user_func(function() {\\n     $value = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('value');\\n-    $addition = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('addition');\\n     $scope = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::_GET('scope');\\n \\n-    $content = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::hmac($value, $addition);\\n+    if (!is_string($value) || empty($value)) {\\n+        \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\HttpUtility::setResponseCodeAndExit(\\n+            \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\HttpUtility::HTTP_STATUS_400\\n+        );\\n+    }\\n+\\n+    $content = \\\\TYPO3\\\\CMS\\\\Core\\\\Utility\\\\GeneralUtility::hmac($value, 'flashvars');\\n \\n     if ($scope === 'flashvars') {\\n         header('Content-type: application\/x-www-form-urlencoded');\"}}",
            "message_norm":"[security] restrict file validation hash generation\n\nsecurity-references: cve-2020-15086",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('hash', 'SECWORD', ''), ('security', 'SECWORD', ''), ('cve-2020-15086', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['Resources\/PHP\/ValidateHashEID.php'])",
            "num_files":1.0
        },
        {
            "index":1519,
            "vuln_id":"GHSA-c968-pq7h-7fxv",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa'}",
            "dataset":"osv",
            "summary":"Division by 0 in `Conv3DBackprop*` ### Impact\nThe `tf.raw_ops.Conv3DBackprop*` operations fail to validate that the input tensors are not empty. In turn, this would result in a division by 0:\n\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([0, 0, 0, 0, 0], shape=[5], dtype=tf.int32)\nfilter_tensor = tf.constant([], shape=[0, 0, 0, 1, 0], dtype=tf.float32)\nout_backprop = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\n                            \ntf.raw_ops.Conv3DBackpropInputV2(input_sizes=input_sizes, filter=filter_tensor, out_backprop=out_backprop, strides=[1, 1, 1, 1, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([1], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\nfilter_tensor = tf.constant([0, 0, 0, 1, 0], shape=[5], dtype=tf.int32)\nout_backprop = tf.constant([], shape=[1, 1, 1, 1, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv3DBackpropFilterV2(input=input_sizes, filter_sizes=filter_tensor, out_backprop=out_backprop, strides=[1, 1, 1, 1, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a91bb59769f19146d5a0c20060244378e878f140\/tensorflow\/core\/kernels\/conv_grad_ops_3d.cc#L430-L450) does not check that the divisor used in computing the shard size is not zero:\n\n```cc\n  const int64 size_A = output_image_size * dims.out_depth;\n  const int64 size_B = filter_total_size * dims.out_depth;\n  const int64 size_C = output_image_size * filter_total_size;\n  const int64 work_unit_size = size_A + size_B + size_C;\n  ...\n  const size_t shard_size =\n      use_parallel_contraction\n        ? 1\n        : (target_working_set_size + work_unit_size - 1) \/ work_unit_size;\n```\n\nThus, if attacker controls the input sizes, they can trigger a denial of service via a division by zero error.\n\n### Patches\nWe have patched the issue in GitHub commit [311403edbc9816df80274bd1ea8b3c0c0f22c3fa](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa",
            "commit_sha":"311403edbc9816df80274bd1ea8b3c0c0f22c3fa",
            "patch":"SINGLE",
            "chain_ord":"['311403edbc9816df80274bd1ea8b3c0c0f22c3fa']",
            "before_first_fix_commit":"{'a91bb59769f19146d5a0c20060244378e878f140'}",
            "last_fix_commit":"311403edbc9816df80274bd1ea8b3c0c0f22c3fa",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2021, 23:00:40",
            "message":"Eliminate a division by 0 in 3D convolutions.\n\nAlso prevent a CHECK failed introduced in the most recent change.\n\nPiperOrigin-RevId: 369322073\nChange-Id: I4f609c028f89565fb2b49c3fdd20b63496582bae",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 42, 'deletions': 0, 'total': 42}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_ops_3d.cc': {'additions': 42, 'deletions': 0, 'changes': 42, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/311403edbc9816df80274bd1ea8b3c0c0f22c3fa\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_ops_3d.cc', 'patch': '@@ -239,6 +239,14 @@ class Conv3DBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -360,6 +368,14 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -444,6 +460,11 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n     \/\/ contraction compared to sharding and matmuls.\\n     const bool use_parallel_contraction = dims.batch_size == 1;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         use_parallel_contraction\\n             ? 1\\n@@ -724,6 +745,14 @@ class Conv3DBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -850,6 +879,14 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(context, input_shape.dims() == 5,\\n+                errors::InvalidArgument(\"input tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, filter_shape.dims() == 5,\\n+        errors::InvalidArgument(\"filter_sizes tensor must have 5 dimensions\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dims() == 5,\\n+        errors::InvalidArgument(\"out_backprop tensor must have 5 dimensions\"));\\n     OP_REQUIRES(\\n         context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n         errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n@@ -936,6 +973,11 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n \\n     const int64 work_unit_size = size_A + size_B + size_C;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         (target_working_set_size + work_unit_size - 1) \/ work_unit_size;'}}",
            "message_norm":"eliminate a division by 0 in 3d convolutions.\n\nalso prevent a check failed introduced in the most recent change.\n\npiperorigin-revid: 369322073\nchange-id: i4f609c028f89565fb2b49c3fdd20b63496582bae",
            "language":"en",
            "entities":"[('division by 0', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('369322073', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_ops_3d.cc'])",
            "num_files":1.0
        },
        {
            "index":2449,
            "vuln_id":"GHSA-mq35-wqvf-r23c",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/sinatra\/sinatra\/commit\/12786867d6faaceaec62c7c2cb5b0e2dc074d71a'}",
            "dataset":"osv",
            "summary":"Sinatra has XSS via 400 Bad Request page via params parser exception Sinatra before 2.0.2 has XSS via the 400 Bad Request page that occurs upon a params parser exception.",
            "published_date":"2018-06-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/sinatra\/sinatra",
            "commit_href":"https:\/\/github.com\/sinatra\/sinatra\/commit\/12786867d6faaceaec62c7c2cb5b0e2dc074d71a",
            "commit_sha":"12786867d6faaceaec62c7c2cb5b0e2dc074d71a",
            "patch":"SINGLE",
            "chain_ord":"['12786867d6faaceaec62c7c2cb5b0e2dc074d71a']",
            "before_first_fix_commit":"{'5149dc9e0b0e281231b91223c6a414c905ad3a96'}",
            "last_fix_commit":"12786867d6faaceaec62c7c2cb5b0e2dc074d71a",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/30\/2018, 16:05:27",
            "message":"escape invalid query params, fixes #1428",
            "author":"Kunpei Sakai",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/sinatra\/base.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sinatra\/sinatra\/raw\/12786867d6faaceaec62c7c2cb5b0e2dc074d71a\/lib%2Fsinatra%2Fbase.rb', 'patch': '@@ -78,7 +78,7 @@ def unlink?\\n     def params\\n       super\\n     rescue Rack::Utils::ParameterTypeError, Rack::Utils::InvalidParameterError => e\\n-      raise BadRequest, \"Invalid query parameters: #{e.message}\"\\n+      raise BadRequest, \"Invalid query parameters: #{Rack::Utils.escape_html(e.message)}\"\\n     end\\n \\n     private'}}",
            "message_norm":"escape invalid query params, fixes #1428",
            "language":"ca",
            "entities":"[('escape', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#1428', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/sinatra\/base.rb'])",
            "num_files":1.0
        },
        {
            "index":676,
            "vuln_id":"GHSA-5q6m-3h65-w53x",
            "cwe_id":"{'CWE-78'}",
            "score":5.6,
            "chain":"{'https:\/\/github.com\/facebook\/create-react-app\/commit\/f5e415f3a5b66f07dcc60aba1b445fa7cda97268'}",
            "dataset":"osv",
            "summary":"react-dev-utils OS Command Injection in function `getProcessForPort` react-dev-utils prior to v11.0.4 exposes a function, `getProcessForPort`, where an input argument is concatenated into a command string to be executed. This function is typically used from react-scripts (in Create React App projects), where the usage is safe. Only when this function is manually invoked with user-provided values (ie: by custom code) is there the potential for command injection. If you're consuming it from react-scripts then this issue does not affect you.",
            "published_date":"2021-03-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/facebook\/create-react-app",
            "commit_href":"https:\/\/github.com\/facebook\/create-react-app\/commit\/f5e415f3a5b66f07dcc60aba1b445fa7cda97268",
            "commit_sha":"f5e415f3a5b66f07dcc60aba1b445fa7cda97268",
            "patch":"SINGLE",
            "chain_ord":"['f5e415f3a5b66f07dcc60aba1b445fa7cda97268']",
            "before_first_fix_commit":"{'22f46a8d5dfc46fe0f613cd7efbc82344823f461'}",
            "last_fix_commit":"f5e415f3a5b66f07dcc60aba1b445fa7cda97268",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/08\/2021, 19:03:16",
            "message":"Security Fix for Command Injection - huntr.dev (#10644)\n\n* Update getProcessForPort.js\r\n\r\n* Update getProcessForPort.js\r\n\r\nCo-authored-by: Zhou Peng <zpbrent@gmail.com>\r\nCo-authored-by: Dan Abramov <dan.abramov@gmail.com>",
            "author":"huntr.dev | the place to protect open source",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'packages\/react-dev-utils\/getProcessForPort.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebook\/create-react-app\/raw\/f5e415f3a5b66f07dcc60aba1b445fa7cda97268\/packages%2Freact-dev-utils%2FgetProcessForPort.js', 'patch': \"@@ -9,6 +9,7 @@\\n \\n var chalk = require('chalk');\\n var execSync = require('child_process').execSync;\\n+var execFileSync = require('child_process').execFileSync;\\n var path = require('path');\\n \\n var execOptions = {\\n@@ -25,7 +26,7 @@ function isProcessAReactApp(processCommand) {\\n }\\n \\n function getProcessIdOnPort(port) {\\n-  return execSync('lsof -i:' + port + ' -P -t -sTCP:LISTEN', execOptions)\\n+  return execFileSync('lsof', ['-i:' + port, '-P', '-t', '-sTCP:LISTEN'], execOptions)\\n     .split('\\\\n')[0]\\n     .trim();\\n }\"}}",
            "message_norm":"security fix for command injection - huntr.dev (#10644)\n\n* update getprocessforport.js\r\n\r\n* update getprocessforport.js\r\n\r\nco-authored-by: zhou peng <zpbrent@gmail.com>\r\nco-authored-by: dan abramov <dan.abramov@gmail.com>",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('command injection', 'SECWORD', ''), ('#10644', 'ISSUE', ''), ('zpbrent@gmail.com', 'EMAIL', ''), ('dan.abramov@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/react-dev-utils\/getProcessForPort.js'])",
            "num_files":1.0
        },
        {
            "index":486,
            "vuln_id":"GHSA-4rmr-c2jx-vx27",
            "cwe_id":"{'CWE-1336'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/bobthecow\/mustache.php\/commit\/579ffa5c96e1d292c060b3dd62811ff01ad8c24e'}",
            "dataset":"osv",
            "summary":"Mustache remote code injection vulnerability In Mustache.php v2.0.0 through v2.14.0, Sections tag can lead to arbitrary php code execution even if strict_callables is true when section value is controllable.",
            "published_date":"2022-01-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/bobthecow\/mustache.php",
            "commit_href":"https:\/\/github.com\/bobthecow\/mustache.php\/commit\/579ffa5c96e1d292c060b3dd62811ff01ad8c24e",
            "commit_sha":"579ffa5c96e1d292c060b3dd62811ff01ad8c24e",
            "patch":"SINGLE",
            "chain_ord":"['579ffa5c96e1d292c060b3dd62811ff01ad8c24e']",
            "before_first_fix_commit":"{'076209772dda21cbfdbf5ef99d202a0937da4826'}",
            "last_fix_commit":"579ffa5c96e1d292c060b3dd62811ff01ad8c24e",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/21\/2022, 06:08:36",
            "message":"Fix CVE-2022-0323 (improper neutralization of section names) \n\n- Fixes possible RCE when rendering untrusted user templates.\n- Remove unnecessary comments in generated source.",
            "author":"Justin Hileman",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 4, 'total': 6}",
            "files":"{'src\/Mustache\/Compiler.php': {'additions': 2, 'deletions': 4, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bobthecow\/mustache.php\/raw\/579ffa5c96e1d292c060b3dd62811ff01ad8c24e\/src%2FMustache%2FCompiler.php', 'patch': \"@@ -320,7 +320,6 @@ private function block($nodes)\\n     }\\n \\n     const SECTION_CALL = '\\n-        \/\/ %s section\\n         $value = $context->%s(%s);%s\\n         $buffer .= $this->section%s($context, $indent, $value);\\n     ';\\n@@ -391,11 +390,10 @@ private function section($nodes, $id, $filters, $start, $end, $otag, $ctag, $lev\\n         $id      = var_export($id, true);\\n         $filters = $this->getFilters($filters, $level);\\n \\n-        return sprintf($this->prepare(self::SECTION_CALL, $level), $id, $method, $id, $filters, $key);\\n+        return sprintf($this->prepare(self::SECTION_CALL, $level), $method, $id, $filters, $key);\\n     }\\n \\n     const INVERTED_SECTION = '\\n-        \/\/ %s inverted section\\n         $value = $context->%s(%s);%s\\n         if (empty($value)) {\\n             %s\\n@@ -418,7 +416,7 @@ private function invertedSection($nodes, $id, $filters, $level)\\n         $id      = var_export($id, true);\\n         $filters = $this->getFilters($filters, $level);\\n \\n-        return sprintf($this->prepare(self::INVERTED_SECTION, $level), $id, $method, $id, $filters, $this->walk($nodes, $level));\\n+        return sprintf($this->prepare(self::INVERTED_SECTION, $level), $method, $id, $filters, $this->walk($nodes, $level));\\n     }\\n \\n     const PARTIAL_INDENT = ', $indent . %s';\"}}",
            "message_norm":"fix cve-2022-0323 (improper neutralization of section names) \n\n- fixes possible rce when rendering untrusted user templates.\n- remove unnecessary comments in generated source.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('cve-2022-0323', 'VULNID', 'CVE'), ('improper neutralization', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('remove', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Mustache\/Compiler.php'])",
            "num_files":1.0
        },
        {
            "index":1706,
            "vuln_id":"GHSA-f98m-q3hr-p5wq",
            "cwe_id":"{'CWE-915', 'CWE-20'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/locutusjs\/locutus\/commit\/0eb16d8541838e80f3c2340a9ef93ded7c97290f'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in locutus All versions of package locutus prior to version 2.0.12 are vulnerable to Prototype Pollution via the php.strings.parse_str function.",
            "published_date":"2021-05-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/locutusjs\/locutus",
            "commit_href":"https:\/\/github.com\/locutusjs\/locutus\/commit\/0eb16d8541838e80f3c2340a9ef93ded7c97290f",
            "commit_sha":"0eb16d8541838e80f3c2340a9ef93ded7c97290f",
            "patch":"SINGLE",
            "chain_ord":"['0eb16d8541838e80f3c2340a9ef93ded7c97290f']",
            "before_first_fix_commit":"{'3f14dc5d142f5dcbdf36b4271c21a850a4a259da'}",
            "last_fix_commit":"0eb16d8541838e80f3c2340a9ef93ded7c97290f",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/25\/2020, 14:48:03",
            "message":"fixed prototype pollution",
            "author":"Asjid Kalam",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'src\/php\/strings\/parse_str.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/locutusjs\/locutus\/raw\/0eb16d8541838e80f3c2340a9ef93ded7c97290f\/src%2Fphp%2Fstrings%2Fparse_str.js', 'patch': \"@@ -74,6 +74,10 @@ module.exports = function parse_str (str, array) { \/\/ eslint-disable-line camelc\\n     key = _fixStr(tmp[0])\\n     value = (tmp.length < 2) ? '' : _fixStr(tmp[1])\\n \\n+    if (key.includes('__proto__') || key.includes('constructor') || key.includes('prototype')) {\\n+      break;\\n+    }\\n+\\n     while (key.charAt(0) === ' ') {\\n       key = key.slice(1)\\n     }\"}}",
            "message_norm":"fixed prototype pollution",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('prototype pollution', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/php\/strings\/parse_str.js'])",
            "num_files":1.0
        },
        {
            "index":7,
            "vuln_id":"GHSA-23c7-6444-399m",
            "cwe_id":"{'CWE-284', 'CWE-20'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/643388365f28c5cc682254ab913c401f0e53260a', 'https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/7c96d400358221e59135f0a0be0744f3fad73856'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in sopel-plugins.channelmgnt ### Impact\nOn some IRC servers, restrictions around the removal of the bot using the kick\/kickban command could be bypassed when kicking multiple users at once.\nWe also believe it may have been possible to remove users from other channels but due to the wonder that is IRC and following RfCs, We have no POC for that.\n\nFreenode is not affected.\n\n### Patches\nUpgrade to 2.0.1 or higher\n\n### Workarounds\nDo not use this plugin on networks where TARGMAX > 1.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue on [phab](https:\/\/phab.mirahezebots.org\/maniphest\/task\/edit\/form\/1\/).\n* Email us at [staff(at)mirahezebots(dot)org](mailto:staff@mirahezebots.org)",
            "published_date":"2021-04-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt",
            "commit_href":"https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/643388365f28c5cc682254ab913c401f0e53260a",
            "commit_sha":"643388365f28c5cc682254ab913c401f0e53260a",
            "patch":"MULTI",
            "chain_ord":"['643388365f28c5cc682254ab913c401f0e53260a', '7c96d400358221e59135f0a0be0744f3fad73856']",
            "before_first_fix_commit":"{'2f191af1a14fd5fbea7cba6b4ff078af253d3a05'}",
            "last_fix_commit":"7c96d400358221e59135f0a0be0744f3fad73856",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/08\/2021, 17:08:28",
            "message":"Merge pull request from GHSA-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* Update __init__.py",
            "author":"RhinosF1",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'sopel_channelmgnt\/channelmgnt\/__init__.py': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FOSSBots\/sopel-channelmgnt\/raw\/643388365f28c5cc682254ab913c401f0e53260a\/sopel_channelmgnt%2Fchannelmgnt%2F__init__.py', 'patch': '@@ -216,6 +216,10 @@ def kick(bot, trigger):\\n             return\\n         nick = Identifier(text[1])\\n         reason = \\' \\'.join(text[2:])\\n+        if \\',\\' in str(nick):\\n+            return bot.reply(\\'Unable to kick. Kicking multiple users is not allowed.\\') \\n+        if \\'#\\' in str(nick):\\n+            return bot.reply(\\'Unable to kick. Use of # when kicking is not expected.\\')\\n         if nick != bot.config.core.nick and trigger.account in chanops:\\n             bot.write([\\'KICK\\', trigger.sender, nick, \\':\\' + reason])\\n             if dodeop:\\n@@ -263,6 +267,10 @@ def parse_host_mask(text):\\n @example(\\'.ban nick\\')\\n def ban(bot, trigger):\\n     \"\"\"Ban a user from the channel. The bot must be a channel operator for this command to work.\"\"\"\\n+    if \\',\\' in str(nick):\\n+        return bot.reply(\\'Unable to ban. Banning multiple users is not allowed.\\') \\n+    if \\'#\\' in str(nick):\\n+        return bot.reply(\\'Unable to ban. Use of # when banning is not expected.\\')\\n     makemodechange(bot, trigger, \\'+b\\', isbqmode=True)\\n \\n \\n@@ -312,6 +320,10 @@ def kickban(bot, trigger):\\n                 deopbot(trigger.sender, bot)\\n             return\\n         nick = Identifier(text[1])\\n+        if \\',\\' in str(nick):\\n+            return bot.reply(\\'Unable to kickban. Kickbanning multiple users is not allowed.\\') \\n+        if \\'#\\' in str(nick):\\n+            return bot.reply(\\'Unable to kickban. Use of # when kickbanning is not expected.\\')\\n         mask = text[2] if any(s in text[2] for s in \\'!@*\\') else \\'\\'\\n         reasonidx = 3 if mask != \\'\\' else 2\\n         reason = \\' \\'.join(text[reasonidx:])'}}",
            "message_norm":"merge pull request from ghsa-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* update __init__.py",
            "language":"en",
            "entities":"[('ghsa-23c7-6444-399m', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['sopel_channelmgnt\/channelmgnt\/__init__.py'])",
            "num_files":1.0
        },
        {
            "index":468,
            "vuln_id":"GHSA-4r65-35qq-ch8j",
            "cwe_id":"{'CWE-209'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/ansible\/ansible\/commit\/fe28767970c8ec62aabe493c46b53a5de1e5fac0'}",
            "dataset":"osv",
            "summary":"Ansible discloses sensitive information in traceback error message Ansible is an IT automation system that handles configuration management, application deployment, cloud provisioning, ad-hoc task execution, network automation, and multi-node orchestration. A flaw was found in Ansible Engine's ansible-connection module where sensitive information, such as the Ansible user credentials, is disclosed by default in the traceback error message when Ansible receives an unexpected response from `set_options`. The highest threat from this vulnerability is confidentiality.",
            "published_date":"2022-03-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/ansible\/ansible",
            "commit_href":"https:\/\/github.com\/ansible\/ansible\/commit\/fe28767970c8ec62aabe493c46b53a5de1e5fac0",
            "commit_sha":"fe28767970c8ec62aabe493c46b53a5de1e5fac0",
            "patch":"SINGLE",
            "chain_ord":"['fe28767970c8ec62aabe493c46b53a5de1e5fac0']",
            "before_first_fix_commit":"{'6d2398db280f145eed70a6618282c9db630a380a'}",
            "last_fix_commit":"fe28767970c8ec62aabe493c46b53a5de1e5fac0",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/07\/2021, 20:43:11",
            "message":"Fixed exposed credentials in exception\n\nUnder certain conditions, sensitive connection parameters are shown in tracebacks when Ansible receives an unexpected response (in my case `None`) from `set_options` in ansible-connection. This patch creates a list of sensitive connection parameter names from `ansible.constants`, pulls a list of those values in the `params` that are about to be dumped to the screen and log file, and sends the `params` and list of `sensitive_values` to the `module_utils.common.parameters.remove_values` function for processing to hide them before being exposed.",
            "author":"dalrrard",
            "comments":null,
            "stats":"{'additions': 18, 'deletions': 1, 'total': 19}",
            "files":"{'lib\/ansible\/module_utils\/connection.py': {'additions': 18, 'deletions': 1, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ansible\/ansible\/raw\/fe28767970c8ec62aabe493c46b53a5de1e5fac0\/lib%2Fansible%2Fmodule_utils%2Fconnection.py', 'patch': '@@ -38,10 +38,13 @@\\n import uuid\\n \\n from functools import partial\\n+from ansible import constants as C\\n from ansible.module_utils._text import to_bytes, to_text\\n from ansible.module_utils.common.json import AnsibleJSONEncoder\\n+from ansible.module_utils.common.parameters import remove_values\\n from ansible.module_utils.six import iteritems\\n from ansible.module_utils.six.moves import cPickle\\n+from ansible.utils.helpers import deduplicate_list\\n \\n \\n def write_to_file_descriptor(fd, obj):\\n@@ -163,12 +166,26 @@ def _exec_jsonrpc(self, name, *args, **kwargs):\\n         try:\\n             response = json.loads(out)\\n         except ValueError:\\n-            params = [repr(arg) for arg in args] + [\\'{0}={1!r}\\'.format(k, v) for k, v in iteritems(kwargs)]\\n+            sensitive_keys = list(\\n+                    C.MAGIC_VARIABLE_MAPPING[\"password\"]\\n+                    + C.MAGIC_VARIABLE_MAPPING[\"private_key_file\"]\\n+                    + C.MAGIC_VARIABLE_MAPPING[\"become_pass\"]\\n+            )\\n+            sensitive_values = [\\n+                v2 \\n+                for k, v in iteritems(kwargs) \\n+                for k2, v2 in iteritems(v) \\n+                if k2 in sensitive_keys\\n+            ]\\n+            params = [repr(remove_values(arg, sensitive_values)) for arg in args] + [\\n+                \"{0}={1!r}\".format(k, remove_values(v, sensitive_values)) \\n+                for k, v in iteritems(kwargs)]\\n             params = \\', \\'.join(params)\\n             raise ConnectionError(\\n                 \"Unable to decode JSON from response to {0}({1}). Received \\'{2}\\'.\".format(name, params, out)\\n             )\\n \\n+\\n         if response[\\'id\\'] != reqid:\\n             raise ConnectionError(\\'invalid json-rpc id received\\')\\n         if \"result_type\" in response:'}}",
            "message_norm":"fixed exposed credentials in exception\n\nunder certain conditions, sensitive connection parameters are shown in tracebacks when ansible receives an unexpected response (in my case `none`) from `set_options` in ansible-connection. this patch creates a list of sensitive connection parameter names from `ansible.constants`, pulls a list of those values in the `params` that are about to be dumped to the screen and log file, and sends the `params` and list of `sensitive_values` to the `module_utils.common.parameters.remove_values` function for processing to hide them before being exposed.",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('sensitive', 'SECWORD', ''), ('sensitive', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/ansible\/module_utils\/connection.py'])",
            "num_files":1.0
        },
        {
            "index":2117,
            "vuln_id":"GHSA-hr84-fqvp-48mm",
            "cwe_id":"{'CWE-131'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5'}",
            "dataset":"osv",
            "summary":"Segfault in SparseCountSparseOutput ### Impact\nSpecifying a negative dense shape in `tf.raw_ops.SparseCountSparseOutput` results in a segmentation fault being thrown out from the standard library as `std::vector` invariants are broken.\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[0, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0, 0], dtype=tf.int64)\ndense_shape = tf.constant([-100, -100, -100], shape=[3], dtype=tf.int64)\nweights = tf.constant([], shape=[0, 0], dtype=tf.int64)\n\ntf.raw_ops.SparseCountSparseOutput(indices=indices, values=values, dense_shape=dense_shape, weights=weights, minlength=79, maxlength=96, binary_output=False)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624\/tensorflow\/core\/kernels\/count_ops.cc#L199-L213) assumes the first element of the dense shape is always positive and uses it to initialize a `BatchedMap<T>` (i.e., [`std::vector<absl::flat_hash_map<int64,T>>`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624\/tensorflow\/core\/kernels\/count_ops.cc#L27)) data structure.\n\n```cc\n  bool is_1d = shape.NumElements() == 1;\n  int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\n  ...\n  auto per_batch_counts = BatchedMap<W>(num_batches); \n```\n\nIf the `shape` tensor has more than one element, `num_batches` is the first value in `shape`.\n                       \nEnsuring that the `dense_shape` argument is a valid tensor shape (that is, all elements are non-negative) solves this issue.\n\n### Patches\nWe have patched the issue in GitHub commit [c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 and TensorFlow 2.3.3.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
            "commit_sha":"c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
            "patch":"SINGLE",
            "chain_ord":"['c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5']",
            "before_first_fix_commit":"{'8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624'}",
            "last_fix_commit":"c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2021, 18:33:50",
            "message":"Fix the segfault in `tf.raw_ops.SparseCountSparseOutput`.\n\nPiperOrigin-RevId: 369264941\nChange-Id: I23a96a15b8370c01ee21ba3841e1c7dcbf55e93d",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 1, 'total': 10}",
            "files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -197,9 +197,17 @@ class SparseCount : public OpKernel {\\n                     \"The shape argument requires at least one element.\"));\\n \\n     bool is_1d = shape.NumElements() == 1;\\n-    int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\\n+    auto shape_vector = shape.flat<int64>();\\n+    int num_batches = is_1d ? 1 : shape_vector(0);\\n     int num_values = values.NumElements();\\n \\n+    for (int b = 0; b < shape_vector.size(); b++) {\\n+      OP_REQUIRES(context, shape_vector(b) >= 0,\\n+                  errors::InvalidArgument(\\n+                      \"Elements in dense_shape must be >= 0. Instead got:\",\\n+                      shape.DebugString()));\\n+    }\\n+\\n     OP_REQUIRES(context, num_values == indices.shape().dim_size(0),\\n                 errors::InvalidArgument(\\n                     \"Number of values must match first dimension of indices.\",'}}",
            "message_norm":"fix the segfault in `tf.raw_ops.sparsecountsparseoutput`.\n\npiperorigin-revid: 369264941\nchange-id: i23a96a15b8370c01ee21ba3841e1c7dcbf55e93d",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('369264941', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":1158,
            "vuln_id":"GHSA-86wf-436m-h424",
            "cwe_id":"{'CWE-665'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/TooTallNate\/node-http-proxy-agent\/commit\/b7b7cc793c3226aa83f820ce5c277e81862d32eb'}",
            "dataset":"osv",
            "summary":"Resource Exhaustion Denial of Service in http-proxy-agent  A flaw was found in http-proxy-agent, prior to version 2.1.0. It was discovered http-proxy-agent passes an auth option to the Buffer constructor without proper sanitization. This could result in a Denial of Service through the usage of all available CPU resources and data exposure through an uninitialized memory leak in setups where an attacker could submit typed input to the auth parameter.",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/TooTallNate\/node-http-proxy-agent",
            "commit_href":"https:\/\/github.com\/TooTallNate\/node-http-proxy-agent\/commit\/b7b7cc793c3226aa83f820ce5c277e81862d32eb",
            "commit_sha":"b7b7cc793c3226aa83f820ce5c277e81862d32eb",
            "patch":"SINGLE",
            "chain_ord":"['b7b7cc793c3226aa83f820ce5c277e81862d32eb']",
            "before_first_fix_commit":"{'687da671c075cde76be2d3e907d5384c970efadc'}",
            "last_fix_commit":"b7b7cc793c3226aa83f820ce5c277e81862d32eb",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/03\/2018, 23:47:26",
            "message":"Use `Buffer.from()`\n\n`new Buffer()` is deprecated and unsafe.",
            "author":"Nathan Rajlich",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 3, 'total': 8}",
            "files":"{'index.js': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TooTallNate\/node-http-proxy-agent\/raw\/b7b7cc793c3226aa83f820ce5c277e81862d32eb\/index.js', 'patch': \"@@ -75,9 +75,11 @@ HttpProxyAgent.prototype.callback = function connect (req, opts, fn) {\\n   req.path = absolute;\\n \\n   \/\/ inject the `Proxy-Authorization` header if necessary\\n-  var auth = proxy.auth;\\n-  if (auth) {\\n-    req.setHeader('Proxy-Authorization', 'Basic ' + new Buffer(auth).toString('base64'));\\n+  if (proxy.auth) {\\n+    req.setHeader(\\n+      'Proxy-Authorization',\\n+      'Basic ' + Buffer.from(proxy.auth).toString('base64')\\n+    );\\n   }\\n \\n   \/\/ create a socket connection to the proxy server\"}}",
            "message_norm":"use `buffer.from()`\n\n`new buffer()` is deprecated and unsafe.",
            "language":"en",
            "entities":"[('unsafe', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":2717,
            "vuln_id":"GHSA-q85f-69q7-55h2",
            "cwe_id":"{'CWE-908'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef1d027be116f25e25bb94a60da491c2cf55bd0b'}",
            "dataset":"osv",
            "summary":"Uninitialized variable access in Tensorflow ### Impact\nThe [implementation of `AssignOp`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/kernels\/assign_op.h#L30-L143) can result in copying unitialized data to a new tensor. This later results in undefined behavior.\n\nThe implementation has a check that the left hand side of the assignment is initialized (to minimize number of allocations), but does not check that the right hand side is also initialized.\n  \n### Patches\nWe have patched the issue in GitHub commit [ef1d027be116f25e25bb94a60da491c2cf55bd0b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef1d027be116f25e25bb94a60da491c2cf55bd0b).\n    \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ef1d027be116f25e25bb94a60da491c2cf55bd0b",
            "commit_sha":"ef1d027be116f25e25bb94a60da491c2cf55bd0b",
            "patch":"SINGLE",
            "chain_ord":"['ef1d027be116f25e25bb94a60da491c2cf55bd0b']",
            "before_first_fix_commit":"{'eeb5e2168a5b3a701656b7366e3bc60d5234471e'}",
            "last_fix_commit":"ef1d027be116f25e25bb94a60da491c2cf55bd0b",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/09\/2021, 19:04:04",
            "message":"Prevent copying uninitialized data in `AssignOp`.\n\nThis prevents harder to debug undefined behaviors that cannot be traced back to the original tensor after assignments occur earlier in the graph execution. Several of these undefined behaviors are just reference bindings to null pointers, which are caught when running under ubsan\/asan.\n\nPiperOrigin-RevId: 408654780\nChange-Id: Iad2ec40d43f5fd7ea016c20283356c12d5ddeab1",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/assign_op.h': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ef1d027be116f25e25bb94a60da491c2cf55bd0b\/tensorflow%2Fcore%2Fkernels%2Fassign_op.h', 'patch': '@@ -50,6 +50,12 @@ class AssignOp : public OpKernel {\\n     \/\/ We always return the input ref.\\n     context->forward_ref_input_to_ref_output(0, 0);\\n \\n+    \/\/ Prevent copying uninitialized data, to solve harder to debug undefined\\n+    \/\/ behaviors that cannot be traced back to the original tensor.\\n+    OP_REQUIRES(\\n+        context, rhs.IsInitialized(),\\n+        errors::Internal(\"Right hand side of AssignOp is not initialized\"));\\n+\\n     \/\/ We can\\'t always know how this value will be used downstream, so make\\n     \/\/ conservative assumptions in specifying constraints on the memory\\n     \/\/ allocation attributes, unless the Grappler graph analysis determined that'}}",
            "message_norm":"prevent copying uninitialized data in `assignop`.\n\nthis prevents harder to debug undefined behaviors that cannot be traced back to the original tensor after assignments occur earlier in the graph execution. several of these undefined behaviors are just reference bindings to null pointers, which are caught when running under ubsan\/asan.\n\npiperorigin-revid: 408654780\nchange-id: iad2ec40d43f5fd7ea016c20283356c12d5ddeab1",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('uninitialized', 'SECWORD', ''), ('prevents', 'ACTION', ''), ('408654780', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/assign_op.h'])",
            "num_files":1.0
        },
        {
            "index":1048,
            "vuln_id":"GHSA-7ph6-5cmq-xgjq",
            "cwe_id":"{'CWE-22'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/ab778254fb8f71c774e1c1239368c44fe3b6bba5'}",
            "dataset":"osv",
            "summary":"Path traversal in xwiki-platform-skin-skinx XWiki Platform is a generic wiki platform offering runtime services for applications built on top of it. AbstractSxExportURLFactoryActionHandler#processSx does not escape anything from SSX document reference when serializing it on filesystem, so it's easy to mess up the HTML export process with reference elements containing filesystem syntax like \"..\/\", \".\/\". or \"\/\" in general (the last two not causing any security threat, but can cause conflicts with others serialized files). Patch can be found in 13.6-rc-1. Giving script or subwiki admin right only to trusted people and disabling HTML\/PDF export can be done as workaround.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/ab778254fb8f71c774e1c1239368c44fe3b6bba5",
            "commit_sha":"ab778254fb8f71c774e1c1239368c44fe3b6bba5",
            "patch":"SINGLE",
            "chain_ord":"['ab778254fb8f71c774e1c1239368c44fe3b6bba5']",
            "before_first_fix_commit":"{'9e4d40d03960b20233f6887bc142fe4474f620c4'}",
            "last_fix_commit":"ab778254fb8f71c774e1c1239368c44fe3b6bba5",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/07\/2021, 14:02:50",
            "message":"XWIKI-18819: It's possible to save pretty much anything anywhere by creating and using an SSX\/JSX containing \"..\/\" in its reference",
            "author":"Thomas Mortagne",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 11, 'total': 18}",
            "files":"{'xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java': {'additions': 7, 'deletions': 11, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/ab778254fb8f71c774e1c1239368c44fe3b6bba5\/xwiki-platform-core%2Fxwiki-platform-skin%2Fxwiki-platform-skin-skinx%2Fsrc%2Fmain%2Fjava%2Forg%2Fxwiki%2Fskinx%2Finternal%2FAbstractSxExportURLFactoryActionHandler.java', 'patch': '@@ -100,13 +100,13 @@ public URL createURL(String spaces, String name, String queryString, String anch\\n         XWikiDocument.backupContext(backup, context);\\n         try {\\n             sxDocument.setAsContextDoc(context);\\n-            return processSx(spaceNames, name, queryString, context, exportContext);\\n+            return processSx(sxDocument.getId(), queryString, context, exportContext);\\n         } finally {\\n             XWikiDocument.restoreContext(backup, context);\\n         }\\n     }\\n \\n-    private URL processSx(List<String> spaceNames, String name, String queryString, XWikiContext context,\\n+    private URL processSx(long id, String queryString, XWikiContext context,\\n         FilesystemExportContext exportContext) throws Exception\\n     {\\n         SxSource sxSource = null;\\n@@ -128,7 +128,7 @@ private URL processSx(List<String> spaceNames, String name, String queryString,\\n \\n         \/\/ Write the content to file\\n         \/\/ We need a unique name for that SSX content\\n-        String targetPath = String.format(\"%s\/%s\/%s\", getSxPrefix(), StringUtils.join(spaceNames, \\'\/\\'), name);\\n+        String targetPath = String.format(\"%s\/%s\", getSxPrefix(), id);\\n         File targetDirectory = new File(exportContext.getExportDir(), targetPath);\\n         if (!targetDirectory.exists()) {\\n             targetDirectory.mkdirs();\\n@@ -146,11 +146,7 @@ private URL processSx(List<String> spaceNames, String name, String queryString,\\n \\n         path.append(getSxPrefix());\\n         path.append(URL_PATH_SEPARATOR);\\n-        for (String spaceName : spaceNames) {\\n-            path.append(encodeURLPart(spaceName));\\n-            path.append(URL_PATH_SEPARATOR);\\n-        }\\n-        path.append(encodeURLPart(name));\\n+        path.append(id);\\n         path.append(URL_PATH_SEPARATOR);\\n         path.append(encodeURLPart(targetLocation.getName()));\\n \\n@@ -161,14 +157,14 @@ protected String getContent(SxSource sxSource, FilesystemExportContext exportCon\\n     {\\n         String content;\\n \\n-        \/\/ We know we\\'re inside a SX file located at \"<S|J>sx\/<Space>\/<Page>\/<s|j>sx<NNN>.<css|js>\". Inside this CSS\\n+        \/\/ We know we\\'re inside a SX file located at \"<S|J>sx\/<id>\/<s|j>sx<NNN>.<css|js>\". Inside this CSS\\n         \/\/ there can be URLs and we need to ensure that the prefix for these URLs lead to the root of the path, i.e.\\n-        \/\/ 3 levels up (\"..\/..\/..\/\").\\n+        \/\/ 3 levels up (\"..\/..\/\").\\n         \/\/ To make this happen we reuse the Doc Parent Level from FileSystemExportContext to a fixed value of 3.\\n         \/\/ We also make sure to put back the original value\\n         int originalDocParentLevel = exportContext.getDocParentLevel();\\n         try {\\n-            exportContext.setDocParentLevels(3);\\n+            exportContext.setDocParentLevels(2);\\n             content = sxSource.getContent();\\n         } finally {\\n             exportContext.setDocParentLevels(originalDocParentLevel);'}}",
            "message_norm":"xwiki-18819: it's possible to save pretty much anything anywhere by creating and using an ssx\/jsx containing \"..\/\" in its reference",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-skin\/xwiki-platform-skin-skinx\/src\/main\/java\/org\/xwiki\/skinx\/internal\/AbstractSxExportURLFactoryActionHandler.java'])",
            "num_files":1.0
        },
        {
            "index":1370,
            "vuln_id":"GHSA-9g9w-hmvj-5h57",
            "cwe_id":"{'CWE-471'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jonschlinkert\/merge-deep\/commit\/2c33634da7129a5aefcc262d2fec2e72224404e5'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in merge-deep Versions of `merge-deep` before 3.0.1 are vulnerable to prototype pollution via merging functions.\n\n\n## Recommendation\n\nUpdate to version 3.0.1 or later.",
            "published_date":"2018-07-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/jonschlinkert\/merge-deep",
            "commit_href":"https:\/\/github.com\/jonschlinkert\/merge-deep\/commit\/2c33634da7129a5aefcc262d2fec2e72224404e5",
            "commit_sha":"2c33634da7129a5aefcc262d2fec2e72224404e5",
            "patch":"SINGLE",
            "chain_ord":"['2c33634da7129a5aefcc262d2fec2e72224404e5']",
            "before_first_fix_commit":"{'7be7e50163dc4ef467ace5371186a77028a66cc9'}",
            "last_fix_commit":"2c33634da7129a5aefcc262d2fec2e72224404e5",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2018, 16:43:20",
            "message":"exclude __proto__",
            "author":"doowb",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/merge-deep\/raw\/2c33634da7129a5aefcc262d2fec2e72224404e5\/index.js', 'patch': \"@@ -30,7 +30,7 @@ module.exports = function mergeDeep(orig, objects) {\\n \\n function merge(target, obj) {\\n   for (var key in obj) {\\n-    if (!hasOwn(obj, key)) {\\n+    if (key === '__proto__' || !hasOwn(obj, key)) {\\n       continue;\\n     }\"}}",
            "message_norm":"exclude __proto__",
            "language":"pt",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":848,
            "vuln_id":"GHSA-6hjc-m38h-7jhh",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/4e46b792ce973ac0c652fb330055f41aca1981c8', 'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in SEOmatic plugin A cross-site scripting (XSS) vulnerability in the SEOmatic plugin 3.4.10 for Craft CMS 3 allows remote attackers to inject arbitrary web script via a GET to \/index.php?action=seomatic\/file\/seo-file-link with url parameter containing the base64 encoded URL of a malicious web page \/ file and fileName parameter containing an arbitrary filename with the intended content-type to be rendered in the user's browser as the extension.",
            "published_date":"2022-06-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/nystudio107\/craft-seomatic",
            "commit_href":"https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/4e46b792ce973ac0c652fb330055f41aca1981c8",
            "commit_sha":"4e46b792ce973ac0c652fb330055f41aca1981c8",
            "patch":"MULTI",
            "chain_ord":"['5f2cdc7c39e0a4bfb60d2f84131508f0a87b2873', '4e46b792ce973ac0c652fb330055f41aca1981c8']",
            "before_first_fix_commit":"{'8c0dc48d026fd076cd0a8fae917bdadc8d67cfa6'}",
            "last_fix_commit":"4e46b792ce973ac0c652fb330055f41aca1981c8",
            "chain_ord_pos":2.0,
            "commit_datetime":"09\/24\/2021, 15:01:54",
            "message":"Disallow SVGs",
            "author":"Andrew Welch",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/controllers\/FileController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nystudio107\/craft-seomatic\/raw\/4e46b792ce973ac0c652fb330055f41aca1981c8\/src%2Fcontrollers%2FFileController.php', 'patch': \"@@ -96,7 +96,7 @@ public function actionSeoFileLink($url, $robots = '', $canonical = '', $inline =\\n             if (($ext = pathinfo($fileName, PATHINFO_EXTENSION)) !== '') {\\n                 $ext = strtolower($ext);\\n             }\\n-            if ($ext === '' || !in_array($ext, $allowedExtensions, true)) {\\n+            if ($ext === '' || $ext === 'svg' || !in_array($ext, $allowedExtensions, true)) {\\n                 throw new ServerErrorHttpException(Craft::t('seomatic', 'File format not allowed.'));\\n             }\\n             \/\/ Send the file as a stream, so it can exist anywhere\"}}",
            "message_norm":"disallow svgs",
            "language":"it",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/controllers\/FileController.php'])",
            "num_files":1.0
        },
        {
            "index":2292,
            "vuln_id":"GHSA-jq4v-f5q6-mjqq",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270', 'https:\/\/github.com\/lxml\/lxml\/commit\/a5f9cb52079dc57477c460dbe6ba0f775e14a999', 'https:\/\/github.com\/lxml\/lxml\/commit\/2d01a1ba8984e0483ce6619b972832377f208a0d'}",
            "dataset":"osv",
            "summary":"lxml before 4.6.3 vulnerable to Cross-Site Scripting  An XSS vulnerability was discovered in the python `lxml` clean module versions before 4.6.3. When disabling `the safe_attrs_only` and `forms` arguments, the `Cleaner` class does not remove the `formaction` attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in `lxml` 4.6.3.",
            "published_date":"2021-03-22",
            "chain_len":3,
            "project":"https:\/\/github.com\/lxml\/lxml",
            "commit_href":"https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270",
            "commit_sha":"10ec1b4e9f93713513a3264ed6158af22492f270",
            "patch":"MULTI",
            "chain_ord":"['10ec1b4e9f93713513a3264ed6158af22492f270', '2d01a1ba8984e0483ce6619b972832377f208a0d', 'a5f9cb52079dc57477c460dbe6ba0f775e14a999']",
            "before_first_fix_commit":"{'2d01a1ba8984e0483ce6619b972832377f208a0d'}",
            "last_fix_commit":"a5f9cb52079dc57477c460dbe6ba0f775e14a999",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/20\/2021, 06:49:25",
            "message":"Add formaction attribute to defs.link_attrs",
            "author":"Kevin Chung",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'src\/lxml\/html\/defs.py': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lxml\/lxml\/raw\/10ec1b4e9f93713513a3264ed6158af22492f270\/src%2Flxml%2Fhtml%2Fdefs.py', 'patch': \"@@ -23,6 +23,8 @@\\n     'usemap',\\n     # Not standard:\\n     'dynsrc', 'lowsrc',\\n+    # HTML5 formaction\\n+    'formaction'\\n     ])\\n \\n # Not in the HTML 4 spec:\"}}",
            "message_norm":"add formaction attribute to defs.link_attrs",
            "language":"en",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lxml\/html\/defs.py'])",
            "num_files":1.0
        },
        {
            "index":2151,
            "vuln_id":"GHSA-hwr7-8gxx-fj5p",
            "cwe_id":"{'CWE-476'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `RaggedTensorToTensor` ### Impact\nSending invalid argument for `row_partition_types` of `tf.raw_ops.RaggedTensorToTensor` API results in a null pointer dereference and undefined behavior:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=1,\n  values=10,\n  default_value=21,\n  row_partition_tensors=tf.constant([0,0,0,0]),\n  row_partition_types=[])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/47a06f40411a69c99f381495f490536972152ac0\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L328) accesses the first element of a user supplied list of values without validating that the provided list is not empty.\n\n### Patches\nWe have patched the issue in GitHub commit [301ae88b331d37a2a16159b65b255f4f9eb39314](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314",
            "commit_sha":"301ae88b331d37a2a16159b65b255f4f9eb39314",
            "patch":"SINGLE",
            "chain_ord":"['301ae88b331d37a2a16159b65b255f4f9eb39314']",
            "before_first_fix_commit":"{'e787d206757e3e87b04ab7bafa8b1e4130a9f774'}",
            "last_fix_commit":"301ae88b331d37a2a16159b65b255f4f9eb39314",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/12\/2021, 16:59:54",
            "message":"Fix null ptr deref in tf.raw_ops.RaggedTensorToTensor\n\nPiperOrigin-RevId: 384257511\nChange-Id: I0484ad285039d132d6c41b284a7fcdd2b774a38e",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/301ae88b331d37a2a16159b65b255f4f9eb39314\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -348,6 +348,9 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n   Status GetFirstDimensionSize(OpKernelContext* context, INDEX_TYPE* result) {\\n     const Tensor first_partition_tensor =\\n         context->input(kFirstPartitionInputIndex);\\n+    if (row_partition_types_.empty()) {\\n+      return errors::InvalidArgument(\"No row_partition_types given.\");\\n+    }\\n     const RowPartitionType first_partition_type = row_partition_types_[0];\\n     switch (first_partition_type) {\\n       case RowPartitionType::FIRST_DIM_SIZE:'}}",
            "message_norm":"fix null ptr deref in tf.raw_ops.raggedtensortotensor\n\npiperorigin-revid: 384257511\nchange-id: i0484ad285039d132d6c41b284a7fcdd2b774a38e",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('384257511', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1778,
            "vuln_id":"GHSA-fv25-wrff-wf86",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281'}",
            "dataset":"osv",
            "summary":"Missing validation causes denial of service via `GetSessionTensor` ### Impact\nThe implementation of [`tf.raw_ops.GetSessionTensor`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/session_ops.cc#L94-L112) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\nhandle = tf.constant(\"[]\", shape=[0], dtype=tf.string)\ntf.raw_ops.GetSessionTensor(handle=handle)\n```\n  \nThe code assumes `handle` is a scalar but there is no validation for this:\n  \n```cc\n    const Tensor& handle = ctx->input(0);\n    const string& name = handle.scalar<tstring>()();\n```\n\n### Patches\nWe have patched the issue in GitHub commit [48305e8ffe5246d67570b64096a96f8e315a7281](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281",
            "commit_sha":"48305e8ffe5246d67570b64096a96f8e315a7281",
            "patch":"SINGLE",
            "chain_ord":"['48305e8ffe5246d67570b64096a96f8e315a7281']",
            "before_first_fix_commit":"{'13d38a07ce9143e044aa737cfd7bb759d0e9b400'}",
            "last_fix_commit":"48305e8ffe5246d67570b64096a96f8e315a7281",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 19:25:03",
            "message":"Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445218701",
            "author":"Alan Liu",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/48305e8ffe5246d67570b64096a96f8e315a7281\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -98,6 +98,8 @@ class GetSessionTensorOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\\n+                errors::InvalidArgument(\"handle must be scalar\"));\\n     const string& name = handle.scalar<tstring>()();\\n     Tensor val;\\n     auto session_state = ctx->session_state();'}}",
            "message_norm":"fix tf.raw_ops.getsessiontensor vulnerability with invalid handle.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445218701",
            "language":"en",
            "entities":"[('vulnerability', 'SECWORD', ''), ('445218701', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":2550,
            "vuln_id":"GHSA-pc58-wgmc-hfjr",
            "cwe_id":"{'CWE-1321'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mout\/mout\/commit\/3fecf1333e6d71ae72edf48c71dc665e40df7605'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in mout This affects all versions of package mout. The deepFillIn function can be used to 'fill missing properties recursively', while the deepMixIn 'mixes objects into the target object, recursively mixing existing child objects as well'. In both cases, the key used to access the target object recursively is not checked, leading to a Prototype Pollution.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/mout\/mout",
            "commit_href":"https:\/\/github.com\/mout\/mout\/commit\/3fecf1333e6d71ae72edf48c71dc665e40df7605",
            "commit_sha":"3fecf1333e6d71ae72edf48c71dc665e40df7605",
            "patch":"SINGLE",
            "chain_ord":"['3fecf1333e6d71ae72edf48c71dc665e40df7605']",
            "before_first_fix_commit":"{'397fa131ec8090e305397d2db2d607c04440c2f3', '2189378ed476d34b3cd39ba7f1199dbf12b8e51b'}",
            "last_fix_commit":"3fecf1333e6d71ae72edf48c71dc665e40df7605",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/15\/2021, 18:58:13",
            "message":"Merge pull request #270 from 418sec\/1-npm-mout\n\nSecurity Fix for Prototype Pollution - huntr.dev",
            "author":"Mathias Paumgarten",
            "comments":"{'com_1': {'author': 'andrew-itscript', 'datetime': '08\/31\/2021, 08:47:19', 'body': '@roboshoes when do you plan to publish these changes to npm?'}, 'com_2': {'author': 'roboshoes', 'datetime': '09\/01\/2021, 17:49:50', 'body': 'Sorry for the delay. Has been released under [`v1.2.3`](https:\/\/www.npmjs.com\/package\/mout\/v\/1.2.3)'}}",
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'src\/object\/set.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mout\/mout\/raw\/3fecf1333e6d71ae72edf48c71dc665e40df7605\/src%2Fobject%2Fset.js', 'patch': '@@ -4,6 +4,10 @@ define([\\'.\/namespace\\'], function (namespace) {\\n      * set \"nested\" object property\\n      *\/\\n     function set(obj, prop, val){\\n+        \/\/ prototype pollution mitigation\\n+        if(prop.includes(\\'__proto__\\') || prop.includes(\\'prototype\\') || prop.includes(\\'constructor\\')) {\\n+            return false;\\n+        }\\n         var parts = (\/^(.+)\\\\.(.+)$\/).exec(prop);\\n         if (parts){\\n             namespace(obj, parts[1])[parts[2]] = val;'}}",
            "message_norm":"merge pull request #270 from 418sec\/1-npm-mout\n\nsecurity fix for prototype pollution - huntr.dev",
            "language":"en",
            "entities":"[('#270', 'ISSUE', ''), ('security', 'SECWORD', ''), ('prototype pollution', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/object\/set.js'])",
            "num_files":1.0
        },
        {
            "index":2404,
            "vuln_id":"GHSA-mc7w-4cjf-c973",
            "cwe_id":"{'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/peterbraden\/node-opencv\/commit\/aaece6921d7368577511f06c94c99dd4e9653563', 'https:\/\/github.com\/peterbraden\/node-opencv\/commit\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b'}",
            "dataset":"osv",
            "summary":"OS Command Injection in node-opencv utils\/find-opencv.js in node-opencv (aka OpenCV bindings for Node.js) prior to 6.1.0 is vulnerable to Command Injection. It does not validate user input allowing attackers to execute arbitrary commands.",
            "published_date":"2021-10-12",
            "chain_len":2,
            "project":"https:\/\/github.com\/peterbraden\/node-opencv",
            "commit_href":"https:\/\/github.com\/peterbraden\/node-opencv\/commit\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b",
            "commit_sha":"81a4b8620188e89f7e4fc985f3c89b58d4bcc86b",
            "patch":"MULTI",
            "chain_ord":"['81a4b8620188e89f7e4fc985f3c89b58d4bcc86b', 'aaece6921d7368577511f06c94c99dd4e9653563']",
            "before_first_fix_commit":"{'58f248af12cbdbccfe88f79637402d4796de3d39'}",
            "last_fix_commit":"aaece6921d7368577511f06c94c99dd4e9653563",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/20\/2019, 08:45:23",
            "message":"Remove untrusted input to exec",
            "author":"Peter Braden",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'utils\/find-opencv.js': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/peterbraden\/node-opencv\/raw\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b\/utils%2Ffind-opencv.js', 'patch': '@@ -2,13 +2,13 @@\\n \\n var exec = require(\"child_process\").exec;\\n var fs = require(\"fs\");\\n-var flag = process.argv[2] || \"--exists\";\\n+var flag = \"--exists\";\\n \\n \/\/ Normally |pkg-config opencv ...| could report either OpenCV 2.x or OpenCV 3.y\\n \/\/ depending on what is installed.  To enable both 2.x and 3.y to co-exist on\\n \/\/ the same machine, the opencv.pc for 3.y can be installed as opencv3.pc and\\n \/\/ then selected by |export PKG_CONFIG_OPENCV3=1| before building node-opencv.\\n-var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : \\'\"opencv >= 2.3.1\"\\';\\n+var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : \\' \"opencv >= 2.3.1\"\\';\\n \\n function main(){\\n     \/\/Try using pkg-config, but if it fails and it is on Windows, try the fallback\\n@@ -18,7 +18,7 @@ function main(){\\n                 fallback();\\n             }\\n             else{\\n-                throw new Error(\"ERROR: failed to run: pkg-config\", opencv, flag);\\n+              throw new Error(\"ERROR: failed to run: pkg-config\" + opencv + \" \" + flag + \" - Is OpenCV installed?\");\\n             }\\n         }\\n         else{'}}",
            "message_norm":"remove untrusted input to exec",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('untrusted', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['utils\/find-opencv.js'])",
            "num_files":1.0
        },
        {
            "index":46,
            "vuln_id":"GHSA-26rr-v2j2-25fh",
            "cwe_id":"{'CWE-91'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/OpenMage\/magento-lts\/commit\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7'}",
            "dataset":"osv",
            "summary":"Layout XML Arbitrary Code Fix  ### Impact\nLayout XML enabled admin users to execute arbitrary commands via block methods.",
            "published_date":"2021-08-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/OpenMage\/magento-lts",
            "commit_href":"https:\/\/github.com\/OpenMage\/magento-lts\/commit\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
            "commit_sha":"b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
            "patch":"SINGLE",
            "chain_ord":"['b99307d00b59c4a226a1e3e4083f02cf2fc8fce7']",
            "before_first_fix_commit":"{'02a14e8893a1af9d8445bb5657b80272a09767ee'}",
            "last_fix_commit":"b99307d00b59c4a226a1e3e4083f02cf2fc8fce7",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/26\/2021, 01:01:15",
            "message":"Merge pull request from GHSA-26rr-v2j2-25fh\n\nCo-authored-by: Mark Lewis <markwlewis@Marks-MacBook-Pro.local>",
            "author":"Mark Lewis",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'app\/code\/core\/Mage\/Core\/Helper\/Security.php': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OpenMage\/magento-lts\/raw\/b99307d00b59c4a226a1e3e4083f02cf2fc8fce7\/app%2Fcode%2Fcore%2FMage%2FCore%2FHelper%2FSecurity.php', 'patch': \"@@ -21,7 +21,10 @@ class Mage_Core_Helper_Security\\n     public function validateAgainstBlockMethodBlacklist(Mage_Core_Block_Abstract $block, $method, array $args)\\n     {\\n         foreach ($this->invalidBlockActions as $action) {\\n-            if ($block instanceof $action['block'] && strtolower($action['method']) === strtolower($method)) {\\n+            $calledMethod = strtolower($method);\\n+            if (($block instanceof $action['block'] && strtolower($action['method']) === $calledMethod)\\n+                || ($block instanceof $action['block']\\n+                    && strtolower($action['block'] . '::' . $action['method']) === $calledMethod)) {\\n                 Mage::throwException(\\n                     sprintf('Action with combination block %s and method %s is forbidden.', get_class($block), $method)\\n                 );\"}}",
            "message_norm":"merge pull request from ghsa-26rr-v2j2-25fh\n\nco-authored-by: mark lewis <markwlewis@marks-macbook-pro.local>",
            "language":"en",
            "entities":"[('ghsa-26rr-v2j2-25fh', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/code\/core\/Mage\/Core\/Helper\/Security.php'])",
            "num_files":1.0
        },
        {
            "index":943,
            "vuln_id":"GHSA-73qw-ww62-m54x",
            "cwe_id":"{'CWE-77'}",
            "score":10.0,
            "chain":"{'https:\/\/github.com\/quadule\/colorscore\/commit\/570b5e854cecddd44d2047c44126aed951b61718'}",
            "dataset":"osv",
            "summary":"Critical severity vulnerability that affects colorscore The initialize method in the Histogram class in lib\/colorscore\/histogram.rb in the colorscore gem before 0.0.5 for Ruby allows context-dependent attackers to execute arbitrary code via shell metacharacters in the (1) image_path, (2) colors, or (3) depth variable.",
            "published_date":"2017-10-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/quadule\/colorscore",
            "commit_href":"https:\/\/github.com\/quadule\/colorscore\/commit\/570b5e854cecddd44d2047c44126aed951b61718",
            "commit_sha":"570b5e854cecddd44d2047c44126aed951b61718",
            "patch":"SINGLE",
            "chain_ord":"['570b5e854cecddd44d2047c44126aed951b61718']",
            "before_first_fix_commit":"{'d589ce05be678c87174adae013ca5ac79f567828'}",
            "last_fix_commit":"570b5e854cecddd44d2047c44126aed951b61718",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/05\/2016, 10:53:22",
            "message":"Fix CVE-2015-7541\n\nAvoid passsing possible user input directly into the shell. Instead\nquote the `image_path` value before calling the `convert` command.\n\nSee here http:\/\/rubysec.com\/advisories\/CVE-2015-7541\/ for more\ninformation.",
            "author":"Florian Frank",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'lib\/colorscore\/histogram.rb': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/quadule\/colorscore\/raw\/570b5e854cecddd44d2047c44126aed951b61718\/lib%2Fcolorscore%2Fhistogram.rb', 'patch': '@@ -1,7 +1,9 @@\\n+require \"shellwords\"\\n+\\n module Colorscore\\n   class Histogram\\n     def initialize(image_path, colors=16, depth=8)\\n-      output = `convert #{image_path} -resize 400x400 -format %c -dither None -quantize YIQ -colors #{colors} -depth #{depth} histogram:info:-`\\n+      output = `convert #{image_path.shellescape} -resize 400x400 -format %c -dither None -quantize YIQ -colors #{colors.to_i} -depth #{depth.to_i} histogram:info:-`\\n       @lines = output.lines.sort.reverse.map(&:strip).reject(&:empty?)\\n     end'}}",
            "message_norm":"fix cve-2015-7541\n\navoid passsing possible user input directly into the shell. instead\nquote the `image_path` value before calling the `convert` command.\n\nsee here http:\/\/rubysec.com\/advisories\/cve-2015-7541\/ for more\ninformation.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('cve-2015-7541', 'VULNID', 'CVE'), ('http:\/\/rubysec.com\/advisories\/cve-2015-7541\/', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/colorscore\/histogram.rb'])",
            "num_files":1.0
        },
        {
            "index":852,
            "vuln_id":"GHSA-6j89-jhpr-849f",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/3fe5e24694729966a157dc613f5586a6c75f1e9b', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1308, CVE-2019-1335, CVE-2019-1366.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/3fe5e24694729966a157dc613f5586a6c75f1e9b",
            "commit_sha":"3fe5e24694729966a157dc613f5586a6c75f1e9b",
            "patch":"MULTI",
            "chain_ord":"['3fe5e24694729966a157dc613f5586a6c75f1e9b', 'cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d']",
            "before_first_fix_commit":"{'7e9a2ee60baa95ceb4f48f522f823c812ca90c80', '5989c6e038d80f92dcd8e10d725cdf45396201bb'}",
            "last_fix_commit":"cc871514deeaeaedb5b757c2ca8cd4ab9abccb5d",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/03\/2019, 19:26:32",
            "message":"CVE-2019-1307",
            "author":"Paul Leathers",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'lib\/Backend\/GlobOpt.h': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/3fe5e24694729966a157dc613f5586a6c75f1e9b\/lib%2FBackend%2FGlobOpt.h', 'patch': '@@ -370,6 +370,7 @@ class JsArrayKills\\n             (valueType.IsArrayOrObjectWithArray() &&\\n              (\\n               (killsArraysWithNoMissingValues && valueType.HasNoMissingValues()) ||\\n+              (killsObjectArraysWithNoMissingValues && !valueType.IsArray() && valueType.HasNoMissingValues()) ||\\n               (killsNativeArrays && !valueType.HasVarElements())\\n              )\\n             );'}}",
            "message_norm":"cve-2019-1307",
            "language":"ro",
            "entities":"[('cve-2019-1307', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Backend\/GlobOpt.h'])",
            "num_files":1.0
        },
        {
            "index":1298,
            "vuln_id":"GHSA-92vm-wfm5-mxvv",
            "cwe_id":"{'CWE-362'}",
            "score":4.4,
            "chain":"{'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/39791081692e9e14aa62855369e1c7f80fbfd50e', 'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/2c4df6b6cee540f30876198cd0b5bebf28528c07', 'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590'}",
            "dataset":"osv",
            "summary":"cookie-signature Timing Attack Affected versions of `cookie-signature` are vulnerable to timing attacks as a result of using a fail-early comparison instead of a constant-time comparison. \n\nTiming attacks remove the exponential increase in entropy gained from increased secret length, by providing per-character feedback on the correctness of a guess via miniscule timing differences.\n\nUnder favorable network conditions, an attacker can exploit this to guess the secret in no more than `charset*length` guesses, instead of `charset^length` guesses required were the timing attack not present. \n\n\n\n## Recommendation\n\nUpdate to 1.0.4 or later.",
            "published_date":"2020-01-06",
            "chain_len":3,
            "project":"https:\/\/github.com\/tj\/node-cookie-signature",
            "commit_href":"https:\/\/github.com\/tj\/node-cookie-signature\/commit\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590",
            "commit_sha":"4cc5e21e7f59a4ea0b51cd5e9634772d48fab590",
            "patch":"MULTI",
            "chain_ord":"['4cc5e21e7f59a4ea0b51cd5e9634772d48fab590', '39791081692e9e14aa62855369e1c7f80fbfd50e', '2c4df6b6cee540f30876198cd0b5bebf28528c07']",
            "before_first_fix_commit":"{'39791081692e9e14aa62855369e1c7f80fbfd50e'}",
            "last_fix_commit":"2c4df6b6cee540f30876198cd0b5bebf28528c07",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/25\/2014, 22:09:31",
            "message":"Merge pull request #17 from tenbits\/patch-1\n\nFix #15: use sha1 hashes for double signing",
            "author":"Nathan Vander Wilt",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 1, 'total': 10}",
            "files":"{'index.js': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tj\/node-cookie-signature\/raw\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590\/index.js', 'patch': \"@@ -39,5 +39,13 @@ exports.unsign = function(val, secret){\\n   var str = val.slice(0, val.lastIndexOf('.'))\\n     , mac = exports.sign(str, secret);\\n   \\n-  return exports.sign(mac, secret) == exports.sign(val, secret) ? str : false;\\n+  return sha1(mac) == sha1(val) ? str : false;\\n };\\n+\\n+\/**\\n+ * Private\\n+ *\/\\n+\\n+function sha1(str){\\n+  return crypto.createHash('sha1').update(str).digest('hex');\\n+}\"}}",
            "message_norm":"merge pull request #17 from tenbits\/patch-1\n\nfix #15: use sha1 hashes for double signing",
            "language":"en",
            "entities":"[('#17', 'ISSUE', ''), ('fix', 'ACTION', ''), ('#15', 'ISSUE', ''), ('signing', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":1159,
            "vuln_id":"GHSA-874w-m2v2-mj64",
            "cwe_id":"{'CWE-415'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/adplug\/adplug\/commit\/1a282a486a8e33fef3e15998bf6408d3515dc07e', 'https:\/\/github.com\/miller-alex\/adplug\/commit\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633'}",
            "dataset":"osv",
            "summary":"Double Free in Adplug AdPlug 2.3.1 has a double free in the Cu6mPlayer class in u6m.h.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/adplug\/adplug",
            "commit_href":"https:\/\/github.com\/adplug\/adplug\/commit\/1a282a486a8e33fef3e15998bf6408d3515dc07e",
            "commit_sha":"1a282a486a8e33fef3e15998bf6408d3515dc07e",
            "patch":"MULTI",
            "chain_ord":"['8abb9328bf27dcbdafc67ade3e75af0ffd8f7633', '1a282a486a8e33fef3e15998bf6408d3515dc07e']",
            "before_first_fix_commit":"{'a8903d884e2c900e77af5c70ef440e72626646ad'}",
            "last_fix_commit":"1a282a486a8e33fef3e15998bf6408d3515dc07e",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/11\/2020, 11:48:45",
            "message":"Update NEWS with a list of CVEs now fixed",
            "author":"Adam Nielsen",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'NEWS': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/adplug\/adplug\/raw\/1a282a486a8e33fef3e15998bf6408d3515dc07e\/NEWS', 'patch': '@@ -2,6 +2,16 @@ This is a brief overview of user-visible changes in AdPlug.\\n \\n Changes for version 2.3.3:\\n --------------------------\\n+- Bug fixes: (huge thanks to Alexander Miller for these)\\n+  - CVE-2019-14690 - buffer overflow in .bmf\\n+  - CVE-2019-14691 - buffer overflow in .dtm\\n+  - CVE-2019-14692 - buffer overflow in .mkj\\n+  - CVE-2019-14732 - buffer overflow in .a2m\\n+  - CVE-2019-14733 - buffer overflow in .rad\\n+  - CVE-2019-14734 - buffer overflow in .mtk\\n+  - CVE-2019-15151 - double free and OOB reads in .u6m\\n+  - OOB reads in .xad\\n+  - OOB reads in .rix\\n \\n Changes for version 2.3.2:\\n --------------------------'}}",
            "message_norm":"update news with a list of cves now fixed",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('fixed', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['NEWS'])",
            "num_files":1.0
        },
        {
            "index":925,
            "vuln_id":"GHSA-72p5-2r6g-fm6v",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/totaljs\/cms\/commit\/75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad', 'https:\/\/github.com\/totaljs\/cms\/commit\/8b9d7dada998c08d172481d9f0fc0397c4b3c78d'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects total.js Total.js CMS 12.0.0 has XSS related to themes\/admin\/views\/index.html (item.message) and themes\/admin\/public\/ui.js (column.format).",
            "published_date":"2019-04-02",
            "chain_len":2,
            "project":"https:\/\/github.com\/totaljs\/cms",
            "commit_href":"https:\/\/github.com\/totaljs\/cms\/commit\/75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad",
            "commit_sha":"75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad",
            "patch":"MULTI",
            "chain_ord":"['75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad', '8b9d7dada998c08d172481d9f0fc0397c4b3c78d']",
            "before_first_fix_commit":"{'75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad'}",
            "last_fix_commit":"8b9d7dada998c08d172481d9f0fc0397c4b3c78d",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/13\/2019, 19:29:24",
            "message":"Fixed XSS.",
            "author":"Peter S\u030cirka",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'themes\/admin\/public\/ui.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/totaljs\/cms\/raw\/75205f93009db3cf8c0b0f4f1fc8ab82d70da8ad\/themes%2Fadmin%2Fpublic%2Fui.js', 'patch': \"@@ -559,7 +559,7 @@ COMPONENT('grid', 'filter:true;external:false;fillcount:50;filterlabel:Filtering\\n \\t\\t\\tfor (var j = 0, jl = columns.length; j < jl; j++) {\\n \\t\\t\\t\\tvar column = columns[j];\\n \\t\\t\\t\\tvar val = items[i][column.name];\\n-\\t\\t\\t\\tm.value = column.template ? column.template(items[i], column) : column.render ? column.render(val, column, items[i]) : val == null ? '' : (column.format ? val.format(column.format) : val);\\n+\\t\\t\\t\\tm.value = column.template ? column.template(items[i], column) : column.render ? column.render(val, column, items[i]) : val == null ? '' : Thelpers.encode((column.format ? val.format(column.format) : val));\\n \\t\\t\\t\\tm.index = j;\\n \\t\\t\\t\\tm.align = column.align;\\n \\t\\t\\t\\tm.background = column.background;\"}}",
            "message_norm":"fixed xss.",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['themes\/admin\/public\/ui.js'])",
            "num_files":1.0
        },
        {
            "index":2109,
            "vuln_id":"GHSA-hpv4-7p9c-mvfr",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `FractionalAvgPoolGrad` ### Impact\nThe implementation for `tf.raw_ops.FractionalAvgPoolGrad` can be tricked into accessing data outside of bounds of heap allocated buffers:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.FractionalAvgPoolGrad(\n  orig_input_tensor_shape=[0,1,2,3],\n  out_backprop = np.array([[[[541],[541]],[[541],[541]]]]),\n  row_pooling_sequence=[0, 0, 0, 0, 0],\n  col_pooling_sequence=[-2, 0, 0, 2, 0],\n  overlapping=True)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L205) does not validate that the input tensor is non-empty. Thus, code constructs an empty `EigenDoubleMatrixMap` and then accesses this buffer with indices that are outside of the empty area.\n\n### Patches\nWe have patched the issue in GitHub commit [0f931751fb20f565c4e94aa6df58d54a003cdb30](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "commit_sha":"0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "patch":"SINGLE",
            "chain_ord":"['0f931751fb20f565c4e94aa6df58d54a003cdb30']",
            "before_first_fix_commit":"{'55e763ffe2b348a61ab1c2fcfedc7bdf05c91990'}",
            "last_fix_commit":"0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2021, 20:03:44",
            "message":"Validate dimensions of input tensor in `FractionalAvgPoolGrad`\n\nPiperOrigin-RevId: 388286227\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'tensorflow\/core\/kernels\/fractional_avg_pool_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0f931751fb20f565c4e94aa6df58d54a003cdb30\/tensorflow%2Fcore%2Fkernels%2Ffractional_avg_pool_op.cc', 'patch': '@@ -271,6 +271,18 @@ class FractionalAvgPoolGradOp : public OpKernel {\\n     const int64_t in_rows = orig_input_tensor_shape_flat(1);\\n     const int64_t in_cols = orig_input_tensor_shape_flat(2);\\n     const int64_t in_depth = orig_input_tensor_shape_flat(3);\\n+    OP_REQUIRES(\\n+        context, in_batch != 0,\\n+        errors::InvalidArgument(\"Batch dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_rows != 0,\\n+        errors::InvalidArgument(\"Rows dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_cols != 0,\\n+        errors::InvalidArgument(\"Columns dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_depth != 0,\\n+        errors::InvalidArgument(\"Depth dimension of input must not be 0\"));\\n \\n     constexpr int tensor_in_and_out_dims = 4;\\n     \/\/ Transform orig_input_tensor_shape into TensorShape'}}",
            "message_norm":"validate dimensions of input tensor in `fractionalavgpoolgrad`\n\npiperorigin-revid: 388286227\nchange-id: ieb7566155e92acc8993a2212c76deacadc0edc8a",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('388286227', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_avg_pool_op.cc'])",
            "num_files":1.0
        },
        {
            "index":322,
            "vuln_id":"GHSA-3wwj-wh2w-g4xp",
            "cwe_id":"{'CWE-93'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128'}",
            "dataset":"osv",
            "summary":"CRLF Injection in microweber CRLF Injection leads to Stack Trace Exposure due to lack of filtering at https:\/\/demo.microweber.org\/ in Packagist microweber\/microweber prior to 1.2.11.",
            "published_date":"2022-02-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128",
            "commit_sha":"f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128",
            "patch":"SINGLE",
            "chain_ord":"['f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128']",
            "before_first_fix_commit":"{'7bdd97ec1ff4740ac8fa898b74ef9bce56bcf193'}",
            "last_fix_commit":"f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/17\/2022, 14:49:46",
            "message":"Update UrlManager.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 3, 'total': 5}",
            "files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/f0e338f1b7dc5ec9d99231f4ed3fa6245a5eb128\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': '@@ -111,9 +111,8 @@ public function redirect($url)\\n             }\\n         }\\n \\n-        if (!filter_var($redirectUrl, FILTER_VALIDATE_URL)) {\\n-            $redirectUrl = site_url();\\n-        }\\n+        $redirectUrl = str_replace(\"\\\\r\", \"\", $redirectUrl);\\n+        $redirectUrl = str_replace(\"\\\\n\", \"\", $redirectUrl);\\n \\n         if (headers_sent()) {\\n             echo \\'<meta http-equiv=\"refresh\" content=\"0;url=\\' . $redirectUrl . \\'\">\\';'}}",
            "message_norm":"update urlmanager.php",
            "language":"sv",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"SUBMIT_CENTERED",
            "list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])",
            "num_files":1.0
        },
        {
            "index":565,
            "vuln_id":"GHSA-56cx-wf47-hx7w",
            "cwe_id":"{'CWE-307'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8'}",
            "dataset":"osv",
            "summary":" Improper Restriction of Excessive Authentication Attempts firefly-iii is vulnerable to Improper Restriction of Excessive Authentication Attempts",
            "published_date":"2021-08-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/firefly-iii\/firefly-iii",
            "commit_href":"https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8",
            "commit_sha":"afc9f4b7ebc8a240c85864a6e1abda62bfeefae8",
            "patch":"SINGLE",
            "chain_ord":"['afc9f4b7ebc8a240c85864a6e1abda62bfeefae8']",
            "before_first_fix_commit":"{'cb759e5c21118cf18b29cb4619d7a2a540a9c76f'}",
            "last_fix_commit":"afc9f4b7ebc8a240c85864a6e1abda62bfeefae8",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/23\/2021, 04:26:42",
            "message":"Add missing rate limiter.",
            "author":"James Cole",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'app\/Http\/Controllers\/Auth\/LoginController.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/firefly-iii\/firefly-iii\/raw\/afc9f4b7ebc8a240c85864a6e1abda62bfeefae8\/app%2FHttp%2FControllers%2FAuth%2FLoginController.php', 'patch': '@@ -29,6 +29,7 @@\\n use FireflyIII\\\\Providers\\\\RouteServiceProvider;\\n use Illuminate\\\\Contracts\\\\View\\\\Factory;\\n use Illuminate\\\\Foundation\\\\Auth\\\\AuthenticatesUsers;\\n+use Illuminate\\\\Foundation\\\\Auth\\\\ThrottlesLogins;\\n use Illuminate\\\\Http\\\\JsonResponse;\\n use Illuminate\\\\Http\\\\RedirectResponse;\\n use Illuminate\\\\Http\\\\Request;\\n@@ -47,7 +48,7 @@\\n  *\/\\n class LoginController extends Controller\\n {\\n-    use AuthenticatesUsers;\\n+    use AuthenticatesUsers, ThrottlesLogins;\\n \\n     \/**\\n      * Where to redirect users after login.'}}",
            "message_norm":"add missing rate limiter.",
            "language":"et",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/Auth\/LoginController.php'])",
            "num_files":1.0
        },
        {
            "index":412,
            "vuln_id":"GHSA-4fc4-4p5g-6w89",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/ckeditor\/ckeditor4\/commit\/d158413449692d920a778503502dcb22881bc949'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in CKEditor4 ### Affected packages\nThe vulnerability has been discovered in the core HTML processing module and may affect all plugins used by CKEditor 4.\n\n### Impact\nA potential vulnerability has been discovered in CKEditor 4 HTML processing core module. The vulnerability allowed to inject malformed HTML bypassing content sanitization, which could result in executing JavaScript code. It affects all users using the CKEditor 4 at version < 4.18.0.\n\n### Patches\nThe problem has been recognized and patched. The fix will be available in version 4.18.0.\n\n### For more information\nEmail us at security@cksource.com if you have any questions or comments about this advisory.\n\n### Acknowledgements\nThe CKEditor 4 team would like to thank GHSL team member Kevin Backhouse ([@kevinbackhouse](https:\/\/github.com\/kevinbackhouse)) for recognizing and reporting this vulnerability.",
            "published_date":"2022-03-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/ckeditor\/ckeditor4",
            "commit_href":"https:\/\/github.com\/ckeditor\/ckeditor4\/commit\/d158413449692d920a778503502dcb22881bc949",
            "commit_sha":"d158413449692d920a778503502dcb22881bc949",
            "patch":"SINGLE",
            "chain_ord":"['d158413449692d920a778503502dcb22881bc949']",
            "before_first_fix_commit":"{'8cff1e5aee3d766068792a374ba6b54a5cb92e2d'}",
            "last_fix_commit":"d158413449692d920a778503502dcb22881bc949",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/08\/2022, 16:35:34",
            "message":"Code refactoring.",
            "author":"Tomasz Jakut",
            "comments":null,
            "stats":"{'additions': 26, 'deletions': 14, 'total': 40}",
            "files":"{'core\/htmldataprocessor.js': {'additions': 26, 'deletions': 14, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ckeditor\/ckeditor4\/raw\/d158413449692d920a778503502dcb22881bc949\/core%2Fhtmldataprocessor.js', 'patch': '@@ -50,17 +50,18 @@\\n \\t\\thtmlFilter.addRules( createBogusAndFillerRules( editor, \\'html\\' ), { applyToAll: true } );\\n \\n \\t\\teditor.on( \\'toHtml\\', function( evt ) {\\n-\\t\\t\\tvar evtData = evt.data,\\n+\\t\\t\\tvar randomNumber = generateRandomNumber(),\\n+\\t\\t\\t\\tevtData = evt.data,\\n \\t\\t\\t\\tdata = evtData.dataValue,\\n \\t\\t\\t\\tfixBodyTag;\\n \\n \\t\\t\\t\/\/ Before we start protecting markup, make sure there are no externally injected\\n \\t\\t\\t\/\/ protection keywords.\\n-\\t\\t\\tdata = removeReservedKeywords( data );\\n+\\t\\t\\tdata = removeReservedKeywords( data, randomNumber );\\n \\n \\t\\t\\t\/\/ The source data is already HTML, but we need to clean\\n \\t\\t\\t\/\/ it up and apply the filter.\\n-\\t\\t\\tdata = protectSource( data, editor );\\n+\\t\\t\\tdata = protectSource( data, editor, randomNumber );\\n \\n \\t\\t\\t\/\/ Protect content of textareas. (https:\/\/dev.ckeditor.com\/ticket\/9995)\\n \\t\\t\\t\/\/ Do this before protecting attributes to avoid breaking:\\n@@ -70,7 +71,7 @@\\n \\t\\t\\t\/\/ Before anything, we must protect the URL attributes as the\\n \\t\\t\\t\/\/ browser may changing them when setting the innerHTML later in\\n \\t\\t\\t\/\/ the code.\\n-\\t\\t\\tdata = protectAttributes( data );\\n+\\t\\t\\tdata = protectAttributes( data, randomNumber );\\n \\n \\t\\t\\t\/\/ Protect elements than can\\'t be set inside a DIV. E.g. IE removes\\n \\t\\t\\t\/\/ style tags from innerHTML. (https:\/\/dev.ckeditor.com\/ticket\/3710)\\n@@ -90,7 +91,7 @@\\n \\n \\t\\t\\t\/\/ There are attributes which may execute JavaScript code inside fixBin.\\n \\t\\t\\t\/\/ Encode them greedily. They will be unprotected right after getting HTML from fixBin. (https:\/\/dev.ckeditor.com\/ticket\/10)\\n-\\t\\t\\tdata = protectInsecureAttributes( data );\\n+\\t\\t\\tdata = protectInsecureAttributes( data, randomNumber );\\n \\n \\t\\t\\tvar fixBin = evtData.context || editor.editable().getName(),\\n \\t\\t\\t\\tisPre;\\n@@ -110,7 +111,7 @@\\n \\t\\t\\tdata = el.getHtml().substr( 1 );\\n \\n \\t\\t\\t\/\/ Restore shortly protected attribute names.\\n-\\t\\t\\tdata = data.replace( new RegExp( \\'data-cke-\\' + CKEDITOR.rnd + \\'-\\', \\'ig\\' ), \\'\\' );\\n+\\t\\t\\tdata = data.replace( new RegExp( \\'data-cke-\\' + randomNumber + \\'-\\', \\'ig\\' ), \\'\\' );\\n \\n \\t\\t\\tisPre && ( data = data.replace( \/^<pre>|<\\\\\/pre>$\/gi, \\'\\' ) );\\n \\n@@ -838,13 +839,13 @@\\n \\n \\tvar protectSelfClosingRegex = \/<cke:(param|embed)([^>]*?)\\\\\/?>(?!\\\\s*<\\\\\/cke:\\\\1)\/gi;\\n \\n-\\tfunction protectAttributes( html ) {\\n+\\tfunction protectAttributes( html, randomNumber ) {\\n \\t\\treturn html.replace( protectElementRegex, function( element, tag, attributes ) {\\n \\t\\t\\treturn \\'<\\' + tag + attributes.replace( protectAttributeRegex, function( fullAttr, attrName ) {\\n \\t\\t\\t\\t\/\/ Avoid corrupting the inline event attributes (https:\/\/dev.ckeditor.com\/ticket\/7243).\\n \\t\\t\\t\\t\/\/ We should not rewrite the existed protected attributes, e.g. clipboard content from editor. (https:\/\/dev.ckeditor.com\/ticket\/5218)\\n \\t\\t\\t\\tif ( protectAttributeNameRegex.test( attrName ) && attributes.indexOf( \\'data-cke-saved-\\' + attrName ) == -1 )\\n-\\t\\t\\t\\t\\treturn \\' data-cke-saved-\\' + fullAttr + \\' data-cke-\\' + CKEDITOR.rnd + \\'-\\' + fullAttr;\\n+\\t\\t\\t\\t\\treturn \\' data-cke-saved-\\' + fullAttr + \\' data-cke-\\' + randomNumber + \\'-\\' + fullAttr;\\n \\n \\t\\t\\t\\treturn fullAttr;\\n \\t\\t\\t} ) + \\'>\\';\\n@@ -897,8 +898,8 @@\\n \\t\/\/ * opening tags - e.g. `<onfoo`,\\n \\t\/\/ * closing tags - e.g. <\/onfoo> (tested in \"false positive 1\"),\\n \\t\/\/ * part of other attribute - e.g. `data-onfoo` or `fonfoo`.\\n-\\tfunction protectInsecureAttributes( html ) {\\n-\\t\\treturn html.replace( \/([^a-z0-9<\\\\-])(on\\\\w{3,})(?!>)\/gi, \\'$1data-cke-\\' + CKEDITOR.rnd + \\'-$2\\' );\\n+\\tfunction protectInsecureAttributes( html, randomNumber ) {\\n+\\t\\treturn html.replace( \/([^a-z0-9<\\\\-])(on\\\\w{3,})(?!>)\/gi, \\'$1data-cke-\\' + randomNumber + \\'-$2\\' );\\n \\t}\\n \\n \\tfunction unprotectRealComments( html ) {\\n@@ -917,11 +918,11 @@\\n \\t\\t} );\\n \\t}\\n \\n-\\tfunction protectSource( data, editor ) {\\n+\\tfunction protectSource( data, editor, randomNumber ) {\\n \\t\\tvar protectedHtml = [],\\n \\t\\t\\tprotectRegexes = editor.config.protectedSource,\\n \\t\\t\\tstore = editor._.dataStore || ( editor._.dataStore = { id: 1 } ),\\n-\\t\\t\\ttempRegex = \/<\\\\!--\\\\{cke_temp(comment)?\\\\}(\\\\d*?)-->\/g;\\n+\\t\\t\\ttempRegex = new RegExp(\\'<\\\\\\\\!--\\\\\\\\{cke_temp_\\' + randomNumber + \\'(comment)?\\\\\\\\}(\\\\\\\\d*?)-->\\', \\'g\\' );\\n \\n \\t\\tvar regexes = [\\n \\t\\t\\t\/\/ Script tags will also be forced to be protected, otherwise\\n@@ -940,7 +941,7 @@\\n \\t\\t\/\/ Note that we use a different tag for comments, as we need to\\n \\t\\t\/\/ transform them when applying filters.\\n \\t\\tdata = data.replace( ( \/<!--[\\\\s\\\\S]*?-->\/g ), function( match ) {\\n-\\t\\t\\treturn \\'<!--{cke_tempcomment}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n+\\t\\t\\treturn \\'<!--{cke_temp_\\' + randomNumber + \\'comment}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n \\t\\t} );\\n \\n \\t\\tfor ( var i = 0; i < regexes.length; i++ ) {\\n@@ -951,7 +952,8 @@\\n \\t\\t\\t\\t} );\\n \\n \\t\\t\\t\\t\/\/ Avoid protecting over protected, e.g. \/\\\\{.*?\\\\}\/\\n-\\t\\t\\t\\treturn ( \/cke_temp(comment)?\/ ).test( match ) ? match : \\'<!--{cke_temp}\\' + ( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n+\\t\\t\\t\\treturn ( tempRegex ).test( match ) ? match : \\'<!--{cke_temp_\\' + randomNumber + \\'}\\' +\\n+\\t\\t\\t\\t\\t( protectedHtml.push( match ) - 1 ) + \\'-->\\';\\n \\t\\t\\t} );\\n \\t\\t}\\n \\t\\tdata = data.replace( tempRegex, function( $, isComment, id ) {\\n@@ -1107,6 +1109,16 @@\\n \\t\\t\\t};\\n \\t\\t}\\n \\t} )();\\n+\\n+\\tfunction generateRandomNumber() {\\n+\\t\\tvar cryptoApi = window.crypto || window.msCrypto;\\n+\\n+\\t\\tif ( cryptoApi ) {\\n+\\t\\t\\treturn cryptoApi.getRandomValues( new Uint32Array( 1 ) )[ 0 ];\\n+\\t\\t}\\n+\\n+\\t\\treturn Math.floor( Math.random() *  9000000000 + 1000000000 );\\n+\\t}\\n } )();\\n \\n \/**'}}",
            "message_norm":"code refactoring.",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/htmldataprocessor.js'])",
            "num_files":1.0
        },
        {
            "index":2388,
            "vuln_id":"GHSA-m8rp-q82r-c5mf",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/b64ef574b82dbf89a908e1569d790c7012d1ccd7'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber Cross-site Scripting (XSS) - Stored in Packagist microweber\/microweber prior to 1.2.11.",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/b64ef574b82dbf89a908e1569d790c7012d1ccd7",
            "commit_sha":"b64ef574b82dbf89a908e1569d790c7012d1ccd7",
            "patch":"SINGLE",
            "chain_ord":"['b64ef574b82dbf89a908e1569d790c7012d1ccd7']",
            "before_first_fix_commit":"{'e17f3e94289b2dac7187e8039e1a3429779e273c'}",
            "last_fix_commit":"b64ef574b82dbf89a908e1569d790c7012d1ccd7",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2022, 09:56:21",
            "message":"xss on contact form fix",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 3, 'total': 5}",
            "files":"{'userfiles\/modules\/admin\/notifications\/notif_form_entry.php': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/b64ef574b82dbf89a908e1569d790c7012d1ccd7\/userfiles%2Fmodules%2Fadmin%2Fnotifications%2Fnotif_form_entry.php', 'patch': '@@ -91,7 +91,6 @@\\n             <hr class=\"thin\" \/>\\n             <div class=\"row\">\\n \\n-\\n                 <?php\\n                 $iformVr=0;\\n                 foreach ($form_values_formated as $form_values_row) {\\n@@ -106,12 +105,12 @@\\n                             <?php if (!is_array($val1)){ ?>\\n                                 <div>\\n                                     <small class=\"text-muted\"><?php echo str_replace(\\'_\\', \\' \\', $key); ?>:<\/small>\\n-                                    <p><?php print $val1; ?><\/p>\\n+                                    <p><?php print htmlentities($val1); ?><\/p>\\n                                 <\/div>\\n                             <?php } else { ?>\\n                                 <small class=\"text-muted\"><?php echo str_replace(\\'_\\', \\' \\', $key); ?>:<\/small>\\n                                 <?php foreach ($val1 as $val1_1){ ?>\\n-                                    <p><?php print $val1_1 . \\'<br \/>\\'; ?><\/p>\\n+                                    <p><?php print htmlentities($val1_1) . \\'<br \/>\\'; ?><\/p>\\n                                 <?php }?>\\n                             <?php } ?>\\n                         <?php } ?>'}}",
            "message_norm":"xss on contact form fix",
            "language":"en",
            "entities":"[('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['userfiles\/modules\/admin\/notifications\/notif_form_entry.php'])",
            "num_files":1.0
        },
        {
            "index":319,
            "vuln_id":"GHSA-3wcq-x3mq-6r9p",
            "cwe_id":"{'CWE-908', 'CWE-200'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/mafintosh\/dns-packet\/commit\/0d0d593f8df4e2712c43957a6c62e95047f12b2d', 'https:\/\/github.com\/mafintosh\/dns-packet\/commit\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56'}",
            "dataset":"osv",
            "summary":"Potential memory exposure in dns-packet This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.",
            "published_date":"2021-05-24",
            "chain_len":2,
            "project":"https:\/\/github.com\/mafintosh\/dns-packet",
            "commit_href":"https:\/\/github.com\/mafintosh\/dns-packet\/commit\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56",
            "commit_sha":"25f15dd0fedc53688b25fd053ebbdffe3d5c1c56",
            "patch":"MULTI",
            "chain_ord":"['25f15dd0fedc53688b25fd053ebbdffe3d5c1c56', '0d0d593f8df4e2712c43957a6c62e95047f12b2d']",
            "before_first_fix_commit":"{'7f35bac5b4680d7bfbb34fbc475ecfdbf9d25092'}",
            "last_fix_commit":"0d0d593f8df4e2712c43957a6c62e95047f12b2d",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/19\/2021, 17:59:39",
            "message":"do trim on encodingLength as well",
            "author":"Mathias Buus",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mafintosh\/dns-packet\/raw\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56\/index.js', 'patch': \"@@ -78,7 +78,7 @@ name.decode.bytes = 0\\n \\n name.encodingLength = function (n) {\\n   if (n === '.') return 1\\n-  return Buffer.byteLength(n) + 2\\n+  return Buffer.byteLength(n.replace(\/^\\\\.|\\\\.$\/gm, '')) + 2\\n }\\n \\n const string = {}\"}}",
            "message_norm":"do trim on encodinglength as well",
            "language":"en",
            "entities":"[('encodinglength', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":1226,
            "vuln_id":"GHSA-8jxq-75rw-fhj9",
            "cwe_id":"{'CWE-94'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/pyeve\/eve\/commit\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98'}",
            "dataset":"osv",
            "summary":"Eve allows execution of arbitrary code via Code Injection in the where parameter io\/mongo\/parser.py in Eve (aka pyeve) before 0.7.5 allows remote attackers to execute arbitrary code via Code Injection in the where parameter.",
            "published_date":"2018-07-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/pyeve\/eve",
            "commit_href":"https:\/\/github.com\/pyeve\/eve\/commit\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98",
            "commit_sha":"f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98",
            "patch":"SINGLE",
            "chain_ord":"['f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98']",
            "before_first_fix_commit":"{'6d1526bf8ad93a3d259b1fd357f0c40e4ed9dbf5'}",
            "last_fix_commit":"f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/14\/2018, 16:51:26",
            "message":"fix mongo visitor parser",
            "author":"Nicola Iarocci",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 6, 'total': 15}",
            "files":"{'eve\/io\/mongo\/parser.py': {'additions': 9, 'deletions': 6, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pyeve\/eve\/raw\/f8f7019ffdf9b4e05faf95e1f04e204aa4c91f98\/eve%2Fio%2Fmongo%2Fparser.py', 'patch': '@@ -122,16 +122,19 @@ def visit_Call(self, node):\\n         datetime().\\n         \"\"\"\\n         if isinstance(node.func, ast.Name):\\n-            expr = None\\n             if node.func.id == \\'ObjectId\\':\\n-                expr = \"(\\'\" + node.args[0].s + \"\\')\"\\n+                try:\\n+                    self.current_value = ObjectId(node.args[0].s)\\n+                except:\\n+                    pass\\n             elif node.func.id == \\'datetime\\':\\n                 values = []\\n                 for arg in node.args:\\n-                    values.append(str(arg.n))\\n-                expr = \"(\" + \", \".join(values) + \")\"\\n-            if expr:\\n-                self.current_value = eval(node.func.id + expr)\\n+                    values.append(arg.n)\\n+                try:\\n+                    self.current_value = datetime(*values)\\n+                except:\\n+                    pass\\n \\n     def visit_Attribute(self, node):\\n         \"\"\" Attribute handler (\\'Contact.Id\\').'}}",
            "message_norm":"fix mongo visitor parser",
            "language":"it",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['eve\/io\/mongo\/parser.py'])",
            "num_files":1.0
        },
        {
            "index":1669,
            "vuln_id":"GHSA-f5cx-5wr3-5qrc",
            "cwe_id":"{'CWE-824'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/429f009d2b2c09028647dd4bb7b3f6f414bbaad7'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in boosted trees ### Impact\nAn attacker can generate undefined behavior via a reference binding to nullptr in `BoostedTreesCalculateBestGainsPerFeature`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.BoostedTreesCalculateBestGainsPerFeature(\n  node_id_range=[],\n  stats_summary_list=[[1,2,3]],\n  l1=[1.0],\n  l2=[1.0],\n  tree_complexity =[1.0],\n  min_node_weight =[1.17],\n  max_splits=5)\n```\n\nA similar attack can occur in `BoostedTreesCalculateBestFeatureSplitV2`:\n\n```python\nimport tensorflow as tf\n                                                                                                                                                                                                                                                                                          \ntf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2(\n  node_id_range=[],\n  stats_summaries_list=[[1,2,3]],\n  split_types=[''],\n  candidate_feature_ids=[1,2,3,4],\n  l1=[1],     \n  l2=[1],\n  tree_complexity=[1.0],\n  min_node_weight=[1.17],\n  logits_dimension=5)\n```     \n    \nThe  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc) does not validate the input values.\n\n### Patches\nWe have patched the issue in GitHub commit [9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad) and in commit. [429f009d2b2c09028647dd4bb7b3f6f414bbaad7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/429f009d2b2c09028647dd4bb7b3f6f414bbaad7).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad",
            "commit_sha":"9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad",
            "patch":"MULTI",
            "chain_ord":"['9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad', '429f009d2b2c09028647dd4bb7b3f6f414bbaad7']",
            "before_first_fix_commit":"{'4f8db85aa9ab71a71e95d5acce7de52a0b195661'}",
            "last_fix_commit":"429f009d2b2c09028647dd4bb7b3f6f414bbaad7",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/27\/2021, 19:11:33",
            "message":"Disallow empty node_id_range in tf.raw_ops.BoostedTreesCalculateBestFeatureSplitV2 and tf.raw_ops.BoostedTreesCalculateBestGainsPerFeature\n\nPiperOrigin-RevId: 387165936\nChange-Id: I2f70341af96236b2776c2a592c917d549c1fc1e2",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 20, 'deletions': 0, 'total': 20}",
            "files":"{'tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc': {'additions': 20, 'deletions': 0, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad\/tensorflow%2Fcore%2Fkernels%2Fboosted_trees%2Fstats_ops.cc', 'patch': '@@ -51,6 +51,16 @@ class BoostedTreesCalculateBestGainsPerFeatureOp : public OpKernel {\\n     \/\/ node_id_range\\n     const Tensor* node_id_range_t;\\n     OP_REQUIRES_OK(context, context->input(\"node_id_range\", &node_id_range_t));\\n+    OP_REQUIRES(\\n+        context, node_id_range_t->dims() == 1,\\n+        errors::InvalidArgument(\"node_id_range must be a rank 1 tensor, but \"\\n+                                \"given node_id_range has dims of \",\\n+                                node_id_range_t->dims()));\\n+    OP_REQUIRES(context, node_id_range_t->dim_size(0) == 2,\\n+                errors::InvalidArgument(\\n+                    \"node_id_range must be a rank 1 tensor with shape=[2], but \"\\n+                    \"given node_id_range has shape \",\\n+                    node_id_range_t->dim_size(0), \" on its first dim\"));\\n     const auto node_id_range = node_id_range_t->vec<int32>();\\n     const int32_t node_id_first = node_id_range(0);  \/\/ inclusive\\n     const int32_t node_id_last = node_id_range(1);   \/\/ exclusive\\n@@ -570,6 +580,16 @@ class BoostedTreesCalculateBestFeatureSplitV2 : public OpKernel {\\n     const Tensor* node_id_range_t;\\n     OP_REQUIRES_OK(context, context->input(\"node_id_range\", &node_id_range_t));\\n     const auto node_id_range = node_id_range_t->vec<int32>();\\n+    OP_REQUIRES(\\n+        context, node_id_range_t->dims() == 1,\\n+        errors::InvalidArgument(\"node_id_range must be a rank 1 tensor, but \"\\n+                                \"given node_id_range has dims of \",\\n+                                node_id_range_t->dims()));\\n+    OP_REQUIRES(context, node_id_range_t->dim_size(0) == 2,\\n+                errors::InvalidArgument(\\n+                    \"node_id_range must be a rank 1 tensor with shape=[2], but \"\\n+                    \"given node_id_range has shape \",\\n+                    node_id_range_t->dim_size(0), \" on its first dim\"));\\n     const int32_t node_id_first = node_id_range(0);  \/\/ Inclusive.\\n     const int32_t node_id_last = node_id_range(1);   \/\/ Exclusive.'}}",
            "message_norm":"disallow empty node_id_range in tf.raw_ops.boostedtreescalculatebestfeaturesplitv2 and tf.raw_ops.boostedtreescalculatebestgainsperfeature\n\npiperorigin-revid: 387165936\nchange-id: i2f70341af96236b2776c2a592c917d549c1fc1e2",
            "language":"en",
            "entities":"[('387165936', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/boosted_trees\/stats_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":2714,
            "vuln_id":"GHSA-q7q9-w24q-cpgh",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/apache\/ambari\/pull\/3040\/commits\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting (XSS) in Apache Ambari Views A cross-site scripting issue was found in Apache Ambari Views. This was addressed in Apache Ambari 2.7.4.",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/ambari",
            "commit_href":"https:\/\/github.com\/apache\/ambari\/pull\/3040\/commits\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
            "commit_sha":"a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
            "patch":"SINGLE",
            "chain_ord":"['a9cfdb9dcce63a3494c07c81ebb2cf8da218a210']",
            "before_first_fix_commit":"{'9e9ddf752f36aa9340d6dfdc23ecccfcd646fc53'}",
            "last_fix_commit":"a9cfdb9dcce63a3494c07c81ebb2cf8da218a210",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/01\/2019, 11:43:05",
            "message":"AMBARI-25329. Ambari breadcrumbs xss vulnerability",
            "author":"Alex Antonenko",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 2, 'total': 14}",
            "files":"{'ambari-web\/app\/views\/common\/breadcrumbs_view.js': {'additions': 12, 'deletions': 2, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/ambari\/raw\/a9cfdb9dcce63a3494c07c81ebb2cf8da218a210\/ambari-web%2Fapp%2Fviews%2Fcommon%2Fbreadcrumbs_view.js', 'patch': \"@@ -149,8 +149,16 @@ App.BreadcrumbItem = Em.Object.extend({\\n   createLabel() {\\n     let label = this.get('label');\\n     let labelBindingPath = this.get('labelBindingPath');\\n+    let formattedLabel;\\n+\\n+    if (labelBindingPath) {\\n+      formattedLabel = Ember.Handlebars.Utils.escapeExpression(App.get(_getLabelPathWithoutApp(labelBindingPath)));\\n+    } else{\\n+      formattedLabel = label;\\n+    }\\n+\\n+\\n \\n-    let formattedLabel = labelBindingPath ? App.get(_getLabelPathWithoutApp(labelBindingPath)) : label;\\n     this.set('formattedLabel', this.labelPostFormat(formattedLabel));\\n   },\\n \\n@@ -216,7 +224,9 @@ App.BreadcrumbsView = Em.View.extend({\\n       }\\n       currentState = currentState.get('parentState');\\n     }\\n-    items = items.reverse().map(item => App.BreadcrumbItem.extend(item).create());\\n+    items.reverse();\\n+    items.slice(1).forEach(item => item.label = Ember.Handlebars.Utils.escapeExpression(item.label));\\n+    items = items.map(item => App.BreadcrumbItem.extend(item).create());\\n     if (items.length) {\\n       items.get('lastObject').setProperties({\\n         disabled: true,\"}}",
            "message_norm":"ambari-25329. ambari breadcrumbs xss vulnerability",
            "language":"ca",
            "entities":"[('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ambari-web\/app\/views\/common\/breadcrumbs_view.js'])",
            "num_files":1.0
        },
        {
            "index":1720,
            "vuln_id":"GHSA-ff28-f46g-r9g8",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/bc77440b301ac8780698be91dff1ac33b7cee850'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Gogs ### Impact\n\nThe malicious user is able to upload a crafted SVG file as the issue attachment to archive XSS. All installations [allow uploading SVG (`text\/xml`) files as issue attachments (non-default)](https:\/\/github.com\/gogs\/gogs\/blob\/e51e01683408e10b3dcd2ace65e259ca7f0fd61b\/conf\/app.ini#L283-L284) are affected.\n\n### Patches\n\nCorrectly setting the Content Security Policy for the serving endpoint. Users should upgrade to 0.12.7 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable uploading SVG files (`text\/xml`) as issue attachments](https:\/\/github.com\/gogs\/gogs\/blob\/e51e01683408e10b3dcd2ace65e259ca7f0fd61b\/conf\/app.ini#L283-L284).\n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/34a12146-3a5d-4efc-a0f8-7a3ae04b198d\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https:\/\/github.com\/gogs\/gogs\/issues\/6919.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/gogs\/gogs",
            "commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/bc77440b301ac8780698be91dff1ac33b7cee850",
            "commit_sha":"bc77440b301ac8780698be91dff1ac33b7cee850",
            "patch":"SINGLE",
            "chain_ord":"['bc77440b301ac8780698be91dff1ac33b7cee850']",
            "before_first_fix_commit":"{'2a8f561c6413ed7683a3844a8ae6b68d30c0dd08'}",
            "last_fix_commit":"bc77440b301ac8780698be91dff1ac33b7cee850",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/03\/2022, 09:51:28",
            "message":"attachment: set CSP header in the serving endpoint (#6926)",
            "author":"Joe Chen",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'internal\/cmd\/web.go': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/bc77440b301ac8780698be91dff1ac33b7cee850\/internal%2Fcmd%2Fweb.go', 'patch': '@@ -314,6 +314,7 @@ func runWeb(c *cli.Context) error {\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tdefer fr.Close()\\n \\n+\\t\\t\\t\\tc.Header().Set(\"Content-Security-Policy\", \"default-src \\'none\\'; style-src \\'unsafe-inline\\'; sandbox\")\\n \\t\\t\\t\\tc.Header().Set(\"Cache-Control\", \"public,max-age=86400\")\\n \\t\\t\\t\\tc.Header().Set(\"Content-Disposition\", fmt.Sprintf(`inline; filename=\"%s\"`, attach.Name))'}}",
            "message_norm":"attachment: set csp header in the serving endpoint (#6926)",
            "language":"en",
            "entities":"[('csp header', 'SECWORD', ''), ('#6926', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['internal\/cmd\/web.go'])",
            "num_files":1.0
        },
        {
            "index":1813,
            "vuln_id":"GHSA-g4h2-gqm3-c9wq",
            "cwe_id":"{'CWE-681'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f663d4b8f0bec1b48da6fa091a7d29609980fa4'}",
            "dataset":"osv",
            "summary":"Segfault in tf.raw_ops.ImmutableConst ### Impact\nCalling [`tf.raw_ops.ImmutableConst`](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/ImmutableConst) with a `dtype` of `tf.resource` or `tf.variant` results in a segfault in the implementation as code assumes that the tensor contents are pure scalars.\n\n```python\n>>> import tensorflow as tf\n>>> tf.raw_ops.ImmutableConst(dtype=tf.resource, shape=[], memory_region_name=\"\/tmp\/test.txt\")\n...\nSegmentation fault\n```\n\n### Patches\nWe have patched the issue in 4f663d4b8f0bec1b48da6fa091a7d29609980fa4 and will release TensorFlow 2.5.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\n### Workarounds\nIf using `tf.raw_ops.ImmutableConst` in code, you can prevent the segfault by inserting a filter for the `dtype` argument.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f663d4b8f0bec1b48da6fa091a7d29609980fa4",
            "commit_sha":"4f663d4b8f0bec1b48da6fa091a7d29609980fa4",
            "patch":"SINGLE",
            "chain_ord":"['4f663d4b8f0bec1b48da6fa091a7d29609980fa4']",
            "before_first_fix_commit":"{'f0e867da82025a97524a233eaedfccfcf6295d5c'}",
            "last_fix_commit":"4f663d4b8f0bec1b48da6fa091a7d29609980fa4",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/08\/2021, 20:29:30",
            "message":"Allowlist certain data types to avoid a seg fault.\n\nPiperOrigin-RevId: 356326671\nChange-Id: I23b65b52e93798cb5a6744632d31b0f88c6b6b31",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/immutable_constant_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4f663d4b8f0bec1b48da6fa091a7d29609980fa4\/tensorflow%2Fcore%2Fkernels%2Fimmutable_constant_op.cc', 'patch': '@@ -17,6 +17,8 @@ limitations under the License.\\n \\n #include <unordered_set>\\n \\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\\n+\\n namespace tensorflow {\\n \\n namespace {\\n@@ -86,6 +88,9 @@ ImmutableConstantOp::ImmutableConstantOp(OpKernelConstruction* context)\\n   OP_REQUIRES_OK(context,\\n                  context->GetAttr(kMemoryRegionNameAttr, &region_name_));\\n   OP_REQUIRES_OK(context, context->GetAttr(kDTypeAttr, &dtype_));\\n+  OP_REQUIRES(context, dtype_ != DT_RESOURCE && dtype_ != DT_VARIANT,\\n+              errors::InvalidArgument(\\n+                  \"Resource and variant dtypes are invalid for this op.\"));\\n   OP_REQUIRES_OK(context, context->GetAttr(kShapeAttr, &shape_));\\n }'}}",
            "message_norm":"allowlist certain data types to avoid a seg fault.\n\npiperorigin-revid: 356326671\nchange-id: i23b65b52e93798cb5a6744632d31b0f88c6b6b31",
            "language":"en",
            "entities":"[('fault', 'FLAW', ''), ('356326671', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/immutable_constant_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2087,
            "vuln_id":"GHSA-hjp8-2cm3-cc45",
            "cwe_id":"{'CWE-200'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/fgribreau\/node-request-retry\/commit\/0979c6001d9d57c2aac3157c11b007397158922a'}",
            "dataset":"osv",
            "summary":"Cookie exposure in requestretry Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository fgribreau\/node-request-retry prior to 7.0.0 via cookies being leaked to external sites.",
            "published_date":"2022-02-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/fgribreau\/node-request-retry",
            "commit_href":"https:\/\/github.com\/fgribreau\/node-request-retry\/commit\/0979c6001d9d57c2aac3157c11b007397158922a",
            "commit_sha":"0979c6001d9d57c2aac3157c11b007397158922a",
            "patch":"SINGLE",
            "chain_ord":"['0979c6001d9d57c2aac3157c11b007397158922a']",
            "before_first_fix_commit":"{'5e1a63c13c9b65ed927e8eb797d8cc7da0dae243'}",
            "last_fix_commit":"0979c6001d9d57c2aac3157c11b007397158922a",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/15\/2022, 20:20:12",
            "message":"Prevent Cookie & Authorization Headers from being forwarded when the URL redirects to another domain (information leak) #137",
            "author":"Timothee Desurmont",
            "comments":null,
            "stats":"{'additions': 39, 'deletions': 1, 'total': 40}",
            "files":"{'index.js': {'additions': 39, 'deletions': 1, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FGRibreau\/node-request-retry\/raw\/0979c6001d9d57c2aac3157c11b007397158922a\/index.js', 'patch': '@@ -11,6 +11,8 @@ var extend = require(\\'extend\\');\\n var request = require(\\'request\\');\\n var RetryStrategies = require(\\'.\/strategies\\');\\n var _ = require(\\'lodash\\');\\n+var url = require(\\'url\\');\\n+var querystring = require(\"querystring\");\\n \\n var DEFAULTS = {\\n   maxAttempts: 5, \/\/ try 5 times\\n@@ -24,6 +26,42 @@ function defaultPromiseFactory(resolver) {\\n   return new Promise(resolver);\\n }\\n \\n+\/\/ Prevent Cookie & Authorization Headers from being forwarded \\n+\/\/ when the URL redirects to another domain (information leak) #137 \\n+function sanitizeHeaders(options) {\\n+  \\n+  const HEADERS_TO_IGNORE = [\"cookie\", \"authorization\"];\\n+\\n+  const urlObject = url.parse(options.url)\\n+  const queryObject = querystring.parse(urlObject.query);\\n+  \\n+  const hasExternalLink = Object.keys(queryObject).reduce(function(acc, cur) {\\n+    \\n+    let qUrl = url.parse(queryObject[cur]);\\n+\\n+    \/\/ external link if protocol || host || port is different\\n+    if(!!qUrl.host && (qUrl.protocol !== urlObject.protocol || qUrl.host !== urlObject.host || qUrl.port !== urlObject.port) ) {\\n+      acc = true;\\n+    }\\n+    \\n+    return acc;\\n+\\n+  }, false);\\n+\\n+  if (hasExternalLink && options.hasOwnProperty(\"headers\") && typeof(options.headers) === \"object\") {\\n+    \\n+    \/\/ if External Link: remove Cookie and Authorization from Headers\\n+    Object.keys(options.headers).filter(function(key) {\\n+      return HEADERS_TO_IGNORE.includes(key.toLowerCase())\\n+    }).map(function(key) {\\n+      return delete options.headers[key]\\n+    });\\n+\\n+  }\\n+\\n+  return options;\\n+}\\n+\\n function _cloneOptions(options) {\\n   const cloned = {};\\n   for (let key in options) {\\n@@ -85,7 +123,7 @@ function Request(url, options, f, retryConfig) {\\n    * Option object\\n    * @type {Object}\\n    *\/\\n-  this.options = options;\\n+  this.options = sanitizeHeaders(options);\\n \\n   \/**\\n    * Return true if the request should be retried'}}",
            "message_norm":"prevent cookie & authorization headers from being forwarded when the url redirects to another domain (information leak) #137",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('cookie', 'SECWORD', ''), ('information leak', 'SECWORD', ''), ('#137', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        }
    ]
}