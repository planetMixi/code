{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":1954,
            "vuln_id":"GHSA-gxg6-rc6c-v673",
            "cwe_id":"{'CWE-20'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/beanshell\/beanshell\/commit\/7c68fde2d6fc65e362f20863d868c112a90a9b49', 'https:\/\/github.com\/beanshell\/beanshell\/commit\/1ccc66bb693d4e46a34a904db8eeff07808d2ced'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in BeanShell BeanShell (bsh) before 2.0b6, when included on the classpath by an application that uses Java serialization or XStream, allows remote attackers to execute arbitrary code via crafted serialized data, related to XThis.Handler.",
            "published_date":"2022-05-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/beanshell\/beanshell",
            "commit_href":"https:\/\/github.com\/beanshell\/beanshell\/commit\/7c68fde2d6fc65e362f20863d868c112a90a9b49",
            "commit_sha":"7c68fde2d6fc65e362f20863d868c112a90a9b49",
            "patch":"MULTI",
            "chain_ord":"['1ccc66bb693d4e46a34a904db8eeff07808d2ced', '7c68fde2d6fc65e362f20863d868c112a90a9b49']",
            "before_first_fix_commit":"{'1ccc66bb693d4e46a34a904db8eeff07808d2ced'}",
            "last_fix_commit":"7c68fde2d6fc65e362f20863d868c112a90a9b49",
            "chain_ord_pos":2.0,
            "commit_datetime":"02\/03\/2016, 01:03:20",
            "message":"Prevent deserialization of Handler",
            "author":"Stian Soiland-Reyes",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'src\/bsh\/XThis.java': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/beanshell\/beanshell\/raw\/7c68fde2d6fc65e362f20863d868c112a90a9b49\/src%2Fbsh%2FXThis.java', 'patch': '@@ -118,6 +118,10 @@ interface from JDK1.2 VM...\\n \\t*\/\\n \\tclass Handler implements InvocationHandler\\n \\t{\\n+\\t\\tprivate Object readResolve() throws ObjectStreamException {\\n+\\t\\t\\tthrow new NotSerializableException();\\n+\\t\\t}\\n+\\n \\t\\tpublic Object invoke( Object proxy, Method method, Object[] args )\\n \\t\\t\\tthrows Throwable\\n \\t\\t{'}}",
            "message_norm":"prevent deserialization of handler",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('deserialization', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/bsh\/XThis.java'])",
            "num_files":1.0
        },
        {
            "index":2292,
            "vuln_id":"GHSA-jq4v-f5q6-mjqq",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270', 'https:\/\/github.com\/lxml\/lxml\/commit\/a5f9cb52079dc57477c460dbe6ba0f775e14a999', 'https:\/\/github.com\/lxml\/lxml\/commit\/2d01a1ba8984e0483ce6619b972832377f208a0d'}",
            "dataset":"osv",
            "summary":"lxml before 4.6.3 vulnerable to Cross-Site Scripting  An XSS vulnerability was discovered in the python `lxml` clean module versions before 4.6.3. When disabling `the safe_attrs_only` and `forms` arguments, the `Cleaner` class does not remove the `formaction` attribute allowing for JS to bypass the sanitizer. A remote attacker could exploit this flaw to run arbitrary JS code on users who interact with incorrectly sanitized HTML. This issue is patched in `lxml` 4.6.3.",
            "published_date":"2021-03-22",
            "chain_len":3,
            "project":"https:\/\/github.com\/lxml\/lxml",
            "commit_href":"https:\/\/github.com\/lxml\/lxml\/pull\/316\/commits\/10ec1b4e9f93713513a3264ed6158af22492f270",
            "commit_sha":"10ec1b4e9f93713513a3264ed6158af22492f270",
            "patch":"MULTI",
            "chain_ord":"['10ec1b4e9f93713513a3264ed6158af22492f270', '2d01a1ba8984e0483ce6619b972832377f208a0d', 'a5f9cb52079dc57477c460dbe6ba0f775e14a999']",
            "before_first_fix_commit":"{'2d01a1ba8984e0483ce6619b972832377f208a0d'}",
            "last_fix_commit":"a5f9cb52079dc57477c460dbe6ba0f775e14a999",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/20\/2021, 06:49:25",
            "message":"Add formaction attribute to defs.link_attrs",
            "author":"Kevin Chung",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'src\/lxml\/html\/defs.py': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lxml\/lxml\/raw\/10ec1b4e9f93713513a3264ed6158af22492f270\/src%2Flxml%2Fhtml%2Fdefs.py', 'patch': \"@@ -23,6 +23,8 @@\\n     'usemap',\\n     # Not standard:\\n     'dynsrc', 'lowsrc',\\n+    # HTML5 formaction\\n+    'formaction'\\n     ])\\n \\n # Not in the HTML 4 spec:\"}}",
            "message_norm":"add formaction attribute to defs.link_attrs",
            "language":"en",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lxml\/html\/defs.py'])",
            "num_files":1.0
        },
        {
            "index":585,
            "vuln_id":"GHSA-5875-p652-2ppm",
            "cwe_id":"{'CWE-668'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/76361264d9fdfff38a1af79c63141455cc4d36e3'}",
            "dataset":"osv",
            "summary":"Exposure of Resource to Wrong Sphere in microweber Exposure of Resource to Wrong Sphere in microweber prior to 1.3 allows users to add deleted products to a cart and buy it.",
            "published_date":"2022-02-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/76361264d9fdfff38a1af79c63141455cc4d36e3",
            "commit_sha":"76361264d9fdfff38a1af79c63141455cc4d36e3",
            "patch":"SINGLE",
            "chain_ord":"['76361264d9fdfff38a1af79c63141455cc4d36e3']",
            "before_first_fix_commit":"{'cc5947c83f05f5490c9190d4a68dc199461b34e3'}",
            "last_fix_commit":"76361264d9fdfff38a1af79c63141455cc4d36e3",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/25\/2022, 09:43:45",
            "message":"check product is deleted before add to cart",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 0, 'total': 14}",
            "files":"{'src\/MicroweberPackages\/Cart\/CartManager.php': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/76361264d9fdfff38a1af79c63141455cc4d36e3\/src%2FMicroweberPackages%2FCart%2FCartManager.php', 'patch': \"@@ -565,7 +565,21 @@ public function update_cart($data)\\n         }\\n \\n         if ($data['for'] == 'content') {\\n+\\n             $cont = $this->app->content_manager->get_by_id($for_id);\\n+\\n+            if (isset($cont['is_active'])) {\\n+                if ($cont['is_active'] != 1) {\\n+                    $cont = false;\\n+                }\\n+            }\\n+\\n+            if (isset($cont['is_deleted'])) {\\n+                if ($cont['is_deleted'] > 0) {\\n+                    $cont = false;\\n+                }\\n+            }\\n+\\n             $cont_data = $this->app->content_manager->data($for_id);\\n             if ($cont == false) {\\n                 return array('error' => 'Invalid product?');\"}}",
            "message_norm":"check product is deleted before add to cart",
            "language":"en",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"REDUNDANT_MESSAGE",
            "list_files":"dict_keys(['src\/MicroweberPackages\/Cart\/CartManager.php'])",
            "num_files":1.0
        },
        {
            "index":2388,
            "vuln_id":"GHSA-m8rp-q82r-c5mf",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/b64ef574b82dbf89a908e1569d790c7012d1ccd7'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber Cross-site Scripting (XSS) - Stored in Packagist microweber\/microweber prior to 1.2.11.",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/b64ef574b82dbf89a908e1569d790c7012d1ccd7",
            "commit_sha":"b64ef574b82dbf89a908e1569d790c7012d1ccd7",
            "patch":"SINGLE",
            "chain_ord":"['b64ef574b82dbf89a908e1569d790c7012d1ccd7']",
            "before_first_fix_commit":"{'e17f3e94289b2dac7187e8039e1a3429779e273c'}",
            "last_fix_commit":"b64ef574b82dbf89a908e1569d790c7012d1ccd7",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2022, 09:56:21",
            "message":"xss on contact form fix",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 3, 'total': 5}",
            "files":"{'userfiles\/modules\/admin\/notifications\/notif_form_entry.php': {'additions': 2, 'deletions': 3, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/b64ef574b82dbf89a908e1569d790c7012d1ccd7\/userfiles%2Fmodules%2Fadmin%2Fnotifications%2Fnotif_form_entry.php', 'patch': '@@ -91,7 +91,6 @@\\n             <hr class=\"thin\" \/>\\n             <div class=\"row\">\\n \\n-\\n                 <?php\\n                 $iformVr=0;\\n                 foreach ($form_values_formated as $form_values_row) {\\n@@ -106,12 +105,12 @@\\n                             <?php if (!is_array($val1)){ ?>\\n                                 <div>\\n                                     <small class=\"text-muted\"><?php echo str_replace(\\'_\\', \\' \\', $key); ?>:<\/small>\\n-                                    <p><?php print $val1; ?><\/p>\\n+                                    <p><?php print htmlentities($val1); ?><\/p>\\n                                 <\/div>\\n                             <?php } else { ?>\\n                                 <small class=\"text-muted\"><?php echo str_replace(\\'_\\', \\' \\', $key); ?>:<\/small>\\n                                 <?php foreach ($val1 as $val1_1){ ?>\\n-                                    <p><?php print $val1_1 . \\'<br \/>\\'; ?><\/p>\\n+                                    <p><?php print htmlentities($val1_1) . \\'<br \/>\\'; ?><\/p>\\n                                 <?php }?>\\n                             <?php } ?>\\n                         <?php } ?>'}}",
            "message_norm":"xss on contact form fix",
            "language":"en",
            "entities":"[('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['userfiles\/modules\/admin\/notifications\/notif_form_entry.php'])",
            "num_files":1.0
        },
        {
            "index":878,
            "vuln_id":"GHSA-6pqm-xvfc-w7p4",
            "cwe_id":"{'CWE-352'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/654e871a3923e79076818a9a03533fe88222c871'}",
            "dataset":"osv",
            "summary":"showdoc is vulnerable to Cross-Site Request Forgery (CSRF) showdoc is vulnerable to Cross-Site Request Forgery (CSRF).",
            "published_date":"2021-12-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/654e871a3923e79076818a9a03533fe88222c871",
            "commit_sha":"654e871a3923e79076818a9a03533fe88222c871",
            "patch":"SINGLE",
            "chain_ord":"['654e871a3923e79076818a9a03533fe88222c871']",
            "before_first_fix_commit":"{'a9886f26c08225e0adca75c67dfca3f7c42b87d0'}",
            "last_fix_commit":"654e871a3923e79076818a9a03533fe88222c871",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/22\/2021, 12:22:29",
            "message":"Cookie security \/Cookie \u5b89\u5168",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'server\/index.php': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/654e871a3923e79076818a9a03533fe88222c871\/server%2Findex.php', 'patch': \"@@ -8,6 +8,18 @@\\n     require '.\/vendor\/autoload.php';\\n }\\n \\n+\/\/ cookie\u5b89\u5168\uff0c\u7ed9PHPSESSID\u52a0\u4e0aStrict\\n+if (PHP_VERSION_ID >= 70300) {\\n+    session_set_cookie_params([\\n+        'samesite' => 'Strict'\\n+    ]);\\n+} else { \\n+    session_set_cookie_params(\\n+        NULL,\\n+        '\/; samesite=Strict',\\n+    );\\n+}\\n+\\n \/\/ \u5f00\u542f\u8c03\u8bd5\u6a21\u5f0f \u5efa\u8bae\u5f00\u53d1\u9636\u6bb5\u5f00\u542f \u90e8\u7f72\u9636\u6bb5\u6ce8\u91ca\u6216\u8005\u8bbe\u4e3afalse\\n define('APP_DEBUG',True);\"}}",
            "message_norm":"cookie security \/cookie \u5b89\u5168",
            "language":"en",
            "entities":"[('cookie', 'SECWORD', ''), ('security', 'SECWORD', ''), ('\/cookie', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/index.php'])",
            "num_files":1.0
        },
        {
            "index":2551,
            "vuln_id":"GHSA-pc5p-h8pf-mvwp",
            "cwe_id":"{'CWE-300'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/36d8cf509f877fa44f4404fce57ebaf9410fe51b'}",
            "dataset":"osv",
            "summary":"Machine-In-The-Middle in https-proxy-agent Versions of `https-proxy-agent` prior to 2.2.3 are vulnerable to Machine-In-The-Middle. The package fails to enforce TLS on the socket if the proxy server responds the to the request with a HTTP status different than 200. This allows an attacker with access to the proxy server to intercept unencrypted communications, which may include sensitive information such as credentials.\n\n\n## Recommendation\n\nUpgrade to version 3.0.0 or 2.2.3.",
            "published_date":"2020-04-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent",
            "commit_href":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "commit_sha":"36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "patch":"SINGLE",
            "chain_ord":"['36d8cf509f877fa44f4404fce57ebaf9410fe51b']",
            "before_first_fix_commit":"{'5252bb9355ad12802d7e0846e5e7cf4ced54fc63'}",
            "last_fix_commit":"36d8cf509f877fa44f4404fce57ebaf9410fe51b",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/07\/2019, 19:53:24",
            "message":"Use an `EventEmitter` to replay failed proxy connect HTTP requests (#77)\n\n* Use an `EventEmitter` to replay failed proxy connect HTTP requests\r\n\r\nThis is a fix for https:\/\/hackerone.com\/reports\/541502.\r\n\r\nAborts the upstream proxy connection and instead uses a vanilla\r\n`EventEmitter` instance to replay the \"data\" events on to. This way,\r\nthe node core `http` Client doesn't attempt to write the HTTP request\r\nthat is intended to go to the destination server to the proxy server.\r\n\r\nCloses #76.\r\n\r\n* Adjust comment",
            "author":"Nathan Rajlich",
            "comments":"{'com_1': {'author': 'jaimeborjas', 'datetime': '04\/17\/2020, 01:17:19', 'body': 'Security fixes'}, 'com_2': {'author': 'donurukiran', 'datetime': '04\/17\/2020, 13:18:32', 'body': 'done with few security issues'}}",
            "stats":"{'additions': 15, 'deletions': 3, 'total': 18}",
            "files":"{'index.js': {'additions': 15, 'deletions': 3, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/raw\/36d8cf509f877fa44f4404fce57ebaf9410fe51b\/index.js', 'patch': '@@ -5,6 +5,7 @@\\n var net = require(\\'net\\');\\n var tls = require(\\'tls\\');\\n var url = require(\\'url\\');\\n+var events = require(\\'events\\');\\n var Agent = require(\\'agent-base\\');\\n var inherits = require(\\'util\\').inherits;\\n var debug = require(\\'debug\\')(\\'https-proxy-agent\\');\\n@@ -154,20 +155,32 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\\n       fn(null, sock);\\n     } else {\\n       \/\/ some other status code that\\'s not 200... need to re-play the HTTP header\\n-      \/\/ \"data\" events onto the socket once the HTTP machinery is attached so that\\n-      \/\/ the user can parse and handle the error status code\\n+      \/\/ \"data\" events onto the socket once the HTTP machinery is attached so\\n+      \/\/ that the node core `http` can parse and handle the error status code\\n       cleanup();\\n \\n+      \/\/ the original socket is closed, and a \"fake socket\" EventEmitter is\\n+      \/\/ returned instead, so that the proxy doesn\\'t get the HTTP request\\n+      \/\/ written to it (which may contain `Authorization` headers or other\\n+      \/\/ sensitive data).\\n+      \/\/\\n+      \/\/ See: https:\/\/hackerone.com\/reports\/541502\\n+      socket.destroy();\\n+      socket = new events.EventEmitter();\\n+\\n       \/\/ save a reference to the concat\\'d Buffer for the `onsocket` callback\\n       buffers = buffered;\\n \\n       \/\/ need to wait for the \"socket\" event to re-play the \"data\" events\\n       req.once(\\'socket\\', onsocket);\\n+\\n       fn(null, socket);\\n     }\\n   }\\n \\n   function onsocket(socket) {\\n+    debug(\\'replaying proxy buffer for failed request\\');\\n+\\n     \/\/ replay the \"buffers\" Buffer onto the `socket`, since at this point\\n     \/\/ the HTTP module machinery has been hooked up for the user\\n     if (socket.listenerCount(\\'data\\') > 0) {\\n@@ -177,7 +190,6 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\\n       throw new Error(\\'should not happen...\\');\\n     }\\n \\n-    socket.resume();\\n     \/\/ nullify the cached Buffer instance\\n     buffers = null;\\n   }'}}",
            "message_norm":"use an `eventemitter` to replay failed proxy connect http requests (#77)\n\n* use an `eventemitter` to replay failed proxy connect http requests\r\n\r\nthis is a fix for https:\/\/hackerone.com\/reports\/541502.\r\n\r\naborts the upstream proxy connection and instead uses a vanilla\r\n`eventemitter` instance to replay the \"data\" events on to. this way,\r\nthe node core `http` client doesn't attempt to write the http request\r\nthat is intended to go to the destination server to the proxy server.\r\n\r\ncloses #76.\r\n\r\n* adjust comment",
            "language":"en",
            "entities":"[('#77', 'ISSUE', ''), ('https:\/\/hackerone.com\/reports\/541502', 'URL', ''), ('server', 'SECWORD', ''), ('server', 'SECWORD', ''), ('#76', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":1369,
            "vuln_id":"GHSA-9g8h-pjm4-q92p",
            "cwe_id":"{'CWE-787'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/10566\/commits\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa'}",
            "dataset":"osv",
            "summary":"Out-of-bounds Write in OpenCV. In OpenCV 3.3.1 (corresponding with OpenCV-Python 3.3.1.11), a heap-based buffer overflow happens in cv::Jpeg2KDecoder::readComponent8u in modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp when parsing a crafted image file.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencv\/opencv",
            "commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/10566\/commits\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa",
            "commit_sha":"435a3e337bd9d4e11af61cf8b8afca067bf1a8aa",
            "patch":"SINGLE",
            "chain_ord":"['435a3e337bd9d4e11af61cf8b8afca067bf1a8aa']",
            "before_first_fix_commit":"{'f34a0a874a029a6201df0acbf46eeeaab8686e4d'}",
            "last_fix_commit":"435a3e337bd9d4e11af61cf8b8afca067bf1a8aa",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/09\/2018, 14:36:57",
            "message":"imgcodecs: add more Jasper checks for supported and tested cases",
            "author":"Alexander Alekhin",
            "comments":null,
            "stats":"{'additions': 39, 'deletions': 7, 'total': 46}",
            "files":"{'modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp': {'additions': 39, 'deletions': 7, 'changes': 46, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/435a3e337bd9d4e11af61cf8b8afca067bf1a8aa\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_jpeg2000.cpp', 'patch': '@@ -77,7 +77,8 @@ static JasperInitializer initialize_jasper;\\n \\n Jpeg2KDecoder::Jpeg2KDecoder()\\n {\\n-    m_signature = \\'\\\\0\\' + String() + \\'\\\\0\\' + String() + \\'\\\\0\\' + String(\"\\\\x0cjP  \\\\r\\\\n\\\\x87\\\\n\");\\n+    static const unsigned char signature_[12] = { 0, 0, 0, 0x0c, \\'j\\', \\'P\\', \\' \\', \\' \\', 13, 10, 0x87, 10};\\n+    m_signature = String((const char*)signature_, (const char*)signature_ + sizeof(signature_));\\n     m_stream = 0;\\n     m_image = 0;\\n }\\n@@ -121,6 +122,8 @@ bool  Jpeg2KDecoder::readHeader()\\n         jas_image_t* image = jas_image_decode( stream, -1, 0 );\\n         m_image = image;\\n         if( image ) {\\n+            CV_Assert(0 == (jas_image_tlx(image)) && \"not supported\");\\n+            CV_Assert(0 == (jas_image_tly(image)) && \"not supported\");\\n             m_width = jas_image_width( image );\\n             m_height = jas_image_height( image );\\n \\n@@ -130,14 +133,31 @@ bool  Jpeg2KDecoder::readHeader()\\n             for( int i = 0; i < numcmpts; i++ )\\n             {\\n                 int depth_i = jas_image_cmptprec( image, i );\\n+                CV_Assert(depth == 0 || depth == depth_i); \/\/ component data type mismatch\\n                 depth = MAX(depth, depth_i);\\n                 if( jas_image_cmpttype( image, i ) > 2 )\\n                     continue;\\n+                int sgnd = jas_image_cmptsgnd(image, i);\\n+                int xstart = jas_image_cmpttlx(image, i);\\n+                int xend = jas_image_cmptbrx(image, i);\\n+                int xstep = jas_image_cmpthstep(image, i);\\n+                int ystart = jas_image_cmpttly(image, i);\\n+                int yend = jas_image_cmptbry(image, i);\\n+                int ystep = jas_image_cmptvstep(image, i);\\n+                CV_Assert(sgnd == 0 && \"not supported\");\\n+                CV_Assert(xstart == 0 && \"not supported\");\\n+                CV_Assert(ystart == 0 && \"not supported\");\\n+                CV_Assert(xstep == 1 && \"not supported\");\\n+                CV_Assert(ystep == 1 && \"not supported\");\\n+                CV_Assert(xend == m_width);\\n+                CV_Assert(yend == m_height);\\n                 cntcmpts++;\\n             }\\n \\n             if( cntcmpts )\\n             {\\n+                CV_Assert(depth == 8 || depth == 16);\\n+                CV_Assert(cntcmpts == 1 || cntcmpts == 3);\\n                 m_type = CV_MAKETYPE(depth <= 8 ? CV_8U : CV_16U, cntcmpts > 1 ? 3 : 1);\\n                 result = true;\\n             }\\n@@ -150,9 +170,14 @@ bool  Jpeg2KDecoder::readHeader()\\n     return result;\\n }\\n \\n+static void Jpeg2KDecoder_close(Jpeg2KDecoder* ptr)\\n+{\\n+    ptr->close();\\n+}\\n \\n bool  Jpeg2KDecoder::readData( Mat& img )\\n {\\n+    Ptr<Jpeg2KDecoder> close_this(this, Jpeg2KDecoder_close);\\n     bool result = false;\\n     int color = img.channels() > 1;\\n     uchar* data = img.ptr();\\n@@ -204,11 +229,16 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n                     result = true;\\n                 }\\n                 else\\n-                    fprintf(stderr, \"JPEG 2000 LOADER ERROR: cannot convert colorspace\\\\n\");\\n+                {\\n+                    jas_cmprof_destroy(clrprof);\\n+                    CV_Error(Error::StsError, \"JPEG 2000 LOADER ERROR: cannot convert colorspace\");\\n+                }\\n                 jas_cmprof_destroy( clrprof );\\n             }\\n             else\\n-                fprintf(stderr, \"JPEG 2000 LOADER ERROR: unable to create colorspace\\\\n\");\\n+            {\\n+                CV_Error(Error::StsError, \"JPEG 2000 LOADER ERROR: unable to create colorspace\");\\n+            }\\n         }\\n         else\\n             result = true;\\n@@ -257,8 +287,8 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n                                 result = readComponent16u( ((unsigned short *)data) + i, buffer, validateToInt(step \/ 2), cmptlut[i], maxval, offset, ncmpts );\\n                             if( !result )\\n                             {\\n-                                i = ncmpts;\\n-                                result = false;\\n+                                jas_matrix_destroy( buffer );\\n+                                CV_Error(Error::StsError, \"JPEG2000 LOADER ERROR: failed to read component\");\\n                             }\\n                         }\\n                         jas_matrix_destroy( buffer );\\n@@ -267,10 +297,12 @@ bool  Jpeg2KDecoder::readData( Mat& img )\\n             }\\n         }\\n         else\\n-            fprintf(stderr, \"JPEG2000 LOADER ERROR: colorspace conversion failed\\\\n\" );\\n+        {\\n+            CV_Error(Error::StsError, \"JPEG2000 LOADER ERROR: colorspace conversion failed\");\\n+        }\\n     }\\n \\n-    close();\\n+    CV_Assert(result == true);\\n \\n #ifndef _WIN32\\n     if (!clr.empty())'}}",
            "message_norm":"imgcodecs: add more jasper checks for supported and tested cases",
            "language":"en",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_jpeg2000.cpp'])",
            "num_files":1.0
        },
        {
            "index":3489,
            "vuln_id":"GHSA-xrp2-fhq4-4q3w",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5'}",
            "dataset":"osv",
            "summary":"Segfault if `tf.histogram_fixed_width` is called with NaN values in TensorFlow ### Impact\nThe implementation of [`tf.histogram_fixed_width`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/histogram_op.cc) is vulnerable to a crash when the values array contain `NaN` elements:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.histogram_fixed_width(values=np.nan, value_range=[1,2])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/histogram_op.cc#L35-L74) assumes that all floating point operations are defined and then converts a floating point result to an integer index:\n\n```cc\nindex_to_bin.device(d) =\n    ((values.cwiseMax(value_range(0)) - values.constant(value_range(0)))\n         .template cast<double>() \/\n     step)\n        .cwiseMin(nbins_minus_1)\n        .template cast<int32>();\n```\n\nIf `values` contains `NaN` then the result of the division is still `NaN` and the cast to `int32` would result in a crash.\n\nThis only occurs on the CPU implementation.\n\n### Patches\nWe have patched the issue in GitHub commit [e57fd691c7b0fd00ea3bfe43444f30c1969748b5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/45770).",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "commit_sha":"e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "patch":"SINGLE",
            "chain_ord":"['e57fd691c7b0fd00ea3bfe43444f30c1969748b5']",
            "before_first_fix_commit":"{'484b5e8836454dbc93380176ae5eeeab02cc63c0'}",
            "last_fix_commit":"e57fd691c7b0fd00ea3bfe43444f30c1969748b5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/20\/2022, 18:35:47",
            "message":"Prevent crash when histogram is called with NaN values.\n\nFixes #45770\n\nPiperOrigin-RevId: 443149951",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 2, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/histogram_op.cc': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e57fd691c7b0fd00ea3bfe43444f30c1969748b5\/tensorflow%2Fcore%2Fkernels%2Fhistogram_op.cc', 'patch': '@@ -50,6 +50,15 @@ struct HistogramFixedWidthFunctor<CPUDevice, T, Tout> {\\n                         static_cast<double>(nbins);\\n     const double nbins_minus_1 = static_cast<double>(nbins - 1);\\n \\n+    \/\/ We cannot handle NANs in the algorithm below (due to the case to int32)\\n+    const Eigen::Tensor<int32, 1, 1> nans_tensor =\\n+        values.isnan().template cast<int32>();\\n+    const Eigen::Tensor<int32, 0, 1> reduced_tensor = nans_tensor.sum();\\n+    const int num_nans = reduced_tensor(0);\\n+    if (num_nans > 0) {\\n+      return errors::InvalidArgument(\"Histogram values must not contain NaN\");\\n+    }\\n+\\n     \/\/ The calculation is done by finding the slot of each value in `values`.\\n     \/\/ With [a, b]:\\n     \/\/   step = (b - a) \/ nbins\\n@@ -98,12 +107,12 @@ class HistogramFixedWidthOp : public OpKernel {\\n     const auto nbins = nbins_tensor.scalar<int32>()();\\n \\n     OP_REQUIRES(\\n-        ctx, (value_range(0) < value_range(1)),\\n+        ctx, value_range(0) < value_range(1),\\n         errors::InvalidArgument(\"value_range should satisfy value_range[0] < \"\\n                                 \"value_range[1], but got \\'[\",\\n                                 value_range(0), \", \", value_range(1), \"]\\'\"));\\n     OP_REQUIRES(\\n-        ctx, (nbins > 0),\\n+        ctx, nbins > 0,\\n         errors::InvalidArgument(\"nbins should be a positive number, but got \\'\",\\n                                 nbins, \"\\'\"));'}}",
            "message_norm":"prevent crash when histogram is called with nan values.\n\nfixes #45770\n\npiperorigin-revid: 443149951",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#45770', 'ISSUE', ''), ('443149951', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/histogram_op.cc'])",
            "num_files":1.0
        },
        {
            "index":208,
            "vuln_id":"GHSA-374m-jm66-3vj8",
            "cwe_id":"{'CWE-125'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f410212e373eb2aec4c9e60bf3702eba99a38aba'}",
            "dataset":"osv",
            "summary":"Heap OOB in `SparseBinCount` ### Impact\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e71b86d47f8bc1816bf54d7bddc4170e47670b97\/tensorflow\/core\/kernels\/bincount_op.cc#L353-L417) of `SparseBinCount` is vulnerable to a heap OOB:\n\n```python\nimport tensorflow as tf\n  \n  \ntf.raw_ops.SparseBincount(\n  indices=[[0],[1],[2]]\n  values=[0,-10000000]\n  dense_shape=[1,1]\n  size=[1]\n  weights=[3,2,1]\n  binary_output=False)\n```\n\nThis is because of missing validation between the elements of the `values` argument and the shape of the sparse output:\n\n\n```cc\nfor (int64_t i = 0; i < indices_mat.dimension(0); ++i) {\n  const int64_t batch = indices_mat(i, 0);\n  const Tidx bin = values(i);\n  ...\n  out(batch, bin) = ...;\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f410212e373eb2aec4c9e60bf3702eba99a38aba](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f410212e373eb2aec4c9e60bf3702eba99a38aba).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f410212e373eb2aec4c9e60bf3702eba99a38aba",
            "commit_sha":"f410212e373eb2aec4c9e60bf3702eba99a38aba",
            "patch":"SINGLE",
            "chain_ord":"['f410212e373eb2aec4c9e60bf3702eba99a38aba']",
            "before_first_fix_commit":"{'4656caa7d74420454da967288af143ec73fb4c9b'}",
            "last_fix_commit":"f410212e373eb2aec4c9e60bf3702eba99a38aba",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/30\/2021, 13:36:55",
            "message":"Prevent out-of-bound accesses in SparseBincount.\n\nPiperOrigin-RevId: 399918616\nChange-Id: I11d154f4444d3fde1f09c5c40628b8671791a30d",
            "author":"Penporn Koanantakool",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'tensorflow\/core\/kernels\/bincount_op.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f410212e373eb2aec4c9e60bf3702eba99a38aba\/tensorflow%2Fcore%2Fkernels%2Fbincount_op.cc', 'patch': '@@ -405,6 +405,16 @@ class SparseBincountOp : public OpKernel {\\n       for (int64_t i = 0; i < indices_mat.dimension(0); ++i) {\\n         const int64_t batch = indices_mat(i, 0);\\n         const Tidx bin = values(i);\\n+        OP_REQUIRES(\\n+            ctx, batch < out.dimension(0),\\n+            errors::InvalidArgument(\"Index out of bound. `batch` (\", batch,\\n+                                    \") must be less than the dimension size (\",\\n+                                    out.dimension(0), \").\"));\\n+        OP_REQUIRES(\\n+            ctx, bin < out.dimension(1),\\n+            errors::InvalidArgument(\"Index out ouf bound. `bin` (\", bin,\\n+                                    \") must be less then the dimension size (\",\\n+                                    out.dimension(1), \").\"));\\n         if (bin < size) {\\n           if (binary_output_) {\\n             out(batch, bin) = T(1);'}}",
            "message_norm":"prevent out-of-bound accesses in sparsebincount.\n\npiperorigin-revid: 399918616\nchange-id: i11d154f4444d3fde1f09c5c40628b8671791a30d",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('out-of-bound', 'SECWORD', ''), ('399918616', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/bincount_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2137,
            "vuln_id":"GHSA-hvr8-466p-75rh",
            "cwe_id":"{'CWE-119'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/python-pillow\/Pillow\/commit\/4e0d9b0b9740d258ade40cce248c93777362ac1e'}",
            "dataset":"osv",
            "summary":"Integer overflow discovered in Pillow  Integer overflow in the ImagingResampleHorizontal function in libImaging\/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.",
            "published_date":"2018-07-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/python-pillow\/Pillow",
            "commit_href":"https:\/\/github.com\/python-pillow\/Pillow\/commit\/4e0d9b0b9740d258ade40cce248c93777362ac1e",
            "commit_sha":"4e0d9b0b9740d258ade40cce248c93777362ac1e",
            "patch":"SINGLE",
            "chain_ord":"['4e0d9b0b9740d258ade40cce248c93777362ac1e']",
            "before_first_fix_commit":"{'bdd86b72ae38874b6bdaf27458a5ed00df0cd3d5'}",
            "last_fix_commit":"4e0d9b0b9740d258ade40cce248c93777362ac1e",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/04\/2016, 06:54:12",
            "message":"fix integer overflow in Resample.c",
            "author":"Ned Williamson",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'libImaging\/Resample.c': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/python-pillow\/Pillow\/raw\/4e0d9b0b9740d258ade40cce248c93777362ac1e\/libImaging%2FResample.c', 'patch': '@@ -138,11 +138,23 @@ ImagingResampleHorizontal(Imaging imIn, int xsize, int filter)\\n     \/* maximum number of coofs *\/\\n     kmax = (int) ceil(support) * 2 + 1;\\n \\n+    \/\/ check for overflow\\n+    if (kmax > 0 && xsize > SIZE_MAX \/ kmax)\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n+    \/\/ sizeof(float) should be greater than 0\\n+    if (xsize * kmax > SIZE_MAX \/ sizeof(float))\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n     \/* coefficient buffer *\/\\n     kk = malloc(xsize * kmax * sizeof(float));\\n     if ( ! kk)\\n         return (Imaging) ImagingError_MemoryError();\\n \\n+    \/\/ sizeof(int) should be greater than 0 as well\\n+    if (xsize > SIZE_MAX \/ (2 * sizeof(int)))\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n     xbounds = malloc(xsize * 2 * sizeof(int));\\n     if ( ! xbounds) {\\n         free(kk);'}}",
            "message_norm":"fix integer overflow in resample.c",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('integer overflow', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['libImaging\/Resample.c'])",
            "num_files":1.0
        },
        {
            "index":2227,
            "vuln_id":"GHSA-jc83-cpf9-q7c6",
            "cwe_id":"{'CWE-697'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754'}",
            "dataset":"osv",
            "summary":"False-negative validation results in MINT transactions with invalid baton ### Impact\nUsers could experience false-negative validation outcomes for [MINT](https:\/\/github.com\/simpleledger\/slp-specifications\/blob\/master\/slp-token-type-1.md#mint---extended-minting-transaction) transaction operations.  A poorly implemented SLP wallet could allow spending of the affected tokens which would result in the destruction of a user's minting baton.\n\n### Patches\nnpm package [slpjs](https:\/\/www.npmjs.com\/package\/slpjs) has been patched and published as version 0.27.2.\n\n\n### Workarounds\nUpgrade to slpjs 0.27.2.\n\n### References\n* slpjs [commit](https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [slp-validate](https:\/\/github.com\/simpleledger\/slp-validate\/issues) or [slpjs](https:\/\/github.com\/simpleledger\/slpjs\/issues)",
            "published_date":"2020-05-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/simpleledger\/slpjs",
            "commit_href":"https:\/\/github.com\/simpleledger\/slpjs\/commit\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754",
            "commit_sha":"3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754",
            "patch":"SINGLE",
            "chain_ord":"['3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754']",
            "before_first_fix_commit":"{'2653647c7b9ceb7a9c863f9f8b70a5d638634bf5'}",
            "last_fix_commit":"3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2020, 16:48:21",
            "message":"fix false negative case for MINT transactions\n\nSee the newly added unit test case for this issue.\nCurrently there are 151 unit tests.",
            "author":"James Cramer",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 6, 'total': 16}",
            "files":"{'lib\/localvalidator.ts': {'additions': 10, 'deletions': 6, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simpleledger\/slpjs\/raw\/3671be2ffb6d4cfa94c00c6dc8649d1ba1d75754\/lib%2Flocalvalidator.ts', 'patch': '@@ -282,10 +282,10 @@ export class LocalValidator implements SlpValidator {\\n                     }\\n                 } catch (_) {}\\n             }\\n-            if (this.cachedValidations[txid].parents.length !== 1) {\\n+            if (this.cachedValidations[txid].parents.length < 1) {\\n                 this.cachedValidations[txid].validity = false;\\n                 this.cachedValidations[txid].waiting = false;\\n-                this.cachedValidations[txid].invalidReason = \"MINT transaction must have 1 valid baton parent.\";\\n+                this.cachedValidations[txid].invalidReason = \"MINT transaction must have at least 1 candidate baton parent input.\";\\n                 return this.cachedValidations[txid].validity!;\\n             }\\n         }\\n@@ -342,10 +342,14 @@ export class LocalValidator implements SlpValidator {\\n         \/\/ Set validity validation-cache for parents, and handle MINT condition with no valid input\\n         \/\/ we don\\'t need to check proper token id since we only added parents with same ID in above steps.\\n         const parentTxids = [...new Set(this.cachedValidations[txid].parents.map(p => p.txid))];\\n-        for (let i = 0; i < parentTxids.length; i++) {\\n-            const valid = await this.isValidSlpTxid(parentTxids[i]);\\n-            this.cachedValidations[txid].parents.filter(p => p.txid === parentTxids[i]).map(p => p.valid = valid);\\n-            if (this.cachedValidations[txid].details!.transactionType === SlpTransactionType.MINT && !valid) {\\n+        for (const id of parentTxids) {\\n+            const valid = await this.isValidSlpTxid(id);\\n+            this.cachedValidations[txid].parents.filter(p => p.txid === id).map(p => p.valid = valid);\\n+        }\\n+\\n+        \/\/ Check MINT for exactly 1 valid MINT baton\\n+        if (this.cachedValidations[txid].details!.transactionType === SlpTransactionType.MINT) {\\n+            if (this.cachedValidations[txid].parents.filter(p => p.valid && p.inputQty === null).length !== 1) {\\n                 this.cachedValidations[txid].validity = false;\\n                 this.cachedValidations[txid].waiting = false;\\n                 this.cachedValidations[txid].invalidReason = \"MINT transaction with invalid baton parent.\";'}}",
            "message_norm":"fix false negative case for mint transactions\n\nsee the newly added unit test case for this issue.\ncurrently there are 151 unit tests.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('added', 'ACTION', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/localvalidator.ts'])",
            "num_files":1.0
        },
        {
            "index":2252,
            "vuln_id":"GHSA-jgrx-mgxx-jf9v",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/daaku\/nodejs-tmpl\/commit\/4c654e4d1542f329ed561fd95ccd80f30c6872d6'}",
            "dataset":"osv",
            "summary":"tmpl vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion nodejs-tmpl is simple string formatting. tmpl is vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion.",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/daaku\/nodejs-tmpl",
            "commit_href":"https:\/\/github.com\/daaku\/nodejs-tmpl\/commit\/4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "commit_sha":"4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "patch":"SINGLE",
            "chain_ord":"['4c654e4d1542f329ed561fd95ccd80f30c6872d6']",
            "before_first_fix_commit":"{'1dbd350783f04743bd759cc5ae1e1e3633d550ff'}",
            "last_fix_commit":"4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/07\/2021, 06:41:06",
            "message":"fix potential dos in regex",
            "author":"Naitik Shah",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/tmpl.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/daaku\/nodejs-tmpl\/raw\/4c654e4d1542f329ed561fd95ccd80f30c6872d6\/lib%2Ftmpl.js', 'patch': \"@@ -1,4 +1,4 @@\\n-var INTERPOLATE = \/{([\\\\s\\\\S]+?)}\/g\\n+var INTERPOLATE = \/{([^{]+?)}\/g\\n \\n module.exports = function(str, data) {\\n   var tmpl = 'var __p=[],print=function(){__p.push.apply(__p,arguments);};' +\"}}",
            "message_norm":"fix potential dos in regex",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('dos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/tmpl.js'])",
            "num_files":1.0
        },
        {
            "index":2173,
            "vuln_id":"GHSA-j383-35pm-c5h4",
            "cwe_id":"{'CWE-22'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/gruntjs\/grunt\/commit\/aad3d4521c3098fb255fb2db8f2e1d691a033665', 'https:\/\/github.com\/gruntjs\/grunt\/commit\/b0ec6e12426fc8d5720dee1702f6a67455c5986c'}",
            "dataset":"osv",
            "summary":"Path Traversal in Grunt Grunt prior to version 1.5.2 is vulnerable to path traversal.",
            "published_date":"2022-04-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/gruntjs\/grunt",
            "commit_href":"https:\/\/github.com\/gruntjs\/grunt\/commit\/b0ec6e12426fc8d5720dee1702f6a67455c5986c",
            "commit_sha":"b0ec6e12426fc8d5720dee1702f6a67455c5986c",
            "patch":"MULTI",
            "chain_ord":"['aad3d4521c3098fb255fb2db8f2e1d691a033665', 'b0ec6e12426fc8d5720dee1702f6a67455c5986c']",
            "before_first_fix_commit":"{'433f91b78df99d83daa6f56a5505ead743627c30', 'd5969eccf2493c2c579c55a617c70cab48dc12d3'}",
            "last_fix_commit":"b0ec6e12426fc8d5720dee1702f6a67455c5986c",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/12\/2022, 11:51:53",
            "message":"Merge pull request #1743 from gruntjs\/cleanup-link\n\nClean up link handling",
            "author":"Vlad Filippov",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 6, 'total': 12}",
            "files":"{'lib\/grunt\/file.js': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gruntjs\/grunt\/raw\/b0ec6e12426fc8d5720dee1702f6a67455c5986c\/lib%2Fgrunt%2Ffile.js', 'patch': \"@@ -294,7 +294,12 @@ file.write = function(filepath, contents, options) {\\n \/\/ processing content, writing output.\\n \/\/ Handles symlinks by coping them as files or directories.\\n file.copy = function copy(srcpath, destpath, options) {\\n-  if (file._isSymbolicLink(srcpath)) {\\n+  if (file.isLink(destpath)) {\\n+    \/\/ in case destpath is a symlink, avoid following the symlink, instead overwrite it later\\n+    fs.unlinkSync(destpath);\\n+  }\\n+\\n+  if (file.isLink(srcpath)) {\\n     file._copySymbolicLink(srcpath, destpath);\\n   } else if (file.isDir(srcpath)) {\\n     \/\/ Copy a directory, recursively.\\n@@ -452,11 +457,6 @@ file.isPathCwd = function() {\\n   }\\n };\\n \\n-file._isSymbolicLink = function() {\\n-  var filepath = path.join.apply(path, arguments);\\n-  return fs.lstatSync(filepath).isSymbolicLink();\\n-};\\n-\\n file._copySymbolicLink = function(srcpath, destpath) {\\n   var destdir = path.join(destpath, '..');\\n   \/\/ Use the correct relative path for the symlink\"}}",
            "message_norm":"merge pull request #1743 from gruntjs\/cleanup-link\n\nclean up link handling",
            "language":"en",
            "entities":"[('#1743', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/grunt\/file.js'])",
            "num_files":1.0
        },
        {
            "index":41,
            "vuln_id":"GHSA-269q-hmxg-m83q",
            "cwe_id":"{'CWE-379', 'CWE-378', 'CWE-668'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/netty\/netty\/commit\/185f8b2756a36aaa4f973f1a2a025e7d981823f1'}",
            "dataset":"osv",
            "summary":"Local Information Disclosure Vulnerability in io.netty:netty-codec-http ### Description ###\n[GHSA-5mcr-gq6c-3hq2](https:\/\/github.com\/netty\/netty\/security\/advisories\/GHSA-5mcr-gq6c-3hq2) (CVE-2021-21290) contains an insufficient fix for the vulnerability identified.\n\n### Impact ###\n\nWhen netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled.\n\nThis only impacts applications running on Java version 6 and lower. Additionally, this vulnerability impacts code running on Unix-like systems, and very old versions of Mac OSX and Windows as they all share the system temporary directory between all users.\n\n### Vulnerability Details ###\n\nTo fix the vulnerability the code was changed to the following:\n\n```java\n    @SuppressJava6Requirement(reason = \"Guarded by version check\")\n    public static File createTempFile(String prefix, String suffix, File directory) throws IOException {\n        if (javaVersion() >= 7) {\n            if (directory == null) {\n                return Files.createTempFile(prefix, suffix).toFile();\n            }\n            return Files.createTempFile(directory.toPath(), prefix, suffix).toFile();\n        }\n        if (directory == null) {\n            return File.createTempFile(prefix, suffix);\n        }\n        File file = File.createTempFile(prefix, suffix, directory);\n        \/\/ Try to adjust the perms, if this fails there is not much else we can do...\n        file.setReadable(false, false);\n        file.setReadable(true, true);\n        return file;\n    }\n```\n\nUnfortunately, this logic path was left vulnerable:\n\n```java\n        if (directory == null) {\n            return File.createTempFile(prefix, suffix);\n        }\n```\n\nThis file is still readable by all local users.\n\n### Patches ###\n\nUpdate to 4.1.77.Final\n\n### Workarounds ###\n\nSpecify your own `java.io.tmpdir` when you start the JVM or use `DefaultHttpDataFactory.setBaseDir(...)` to set the directory to something that is only readable by the current user or update to Java 7 or above.\n\n### References ###\n\n - [CWE-378: Creation of Temporary File With Insecure Permissions](https:\/\/cwe.mitre.org\/data\/definitions\/378.html)\n - [CWE-379: Creation of Temporary File in Directory with Insecure Permissions](https:\/\/cwe.mitre.org\/data\/definitions\/379.html)\n\n\n### For more information ###\n\nIf you have any questions or comments about this advisory:\n\nOpen an issue in [netty](https:\/\/github.com\/netty\/netty)",
            "published_date":"2022-05-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/netty\/netty",
            "commit_href":"https:\/\/github.com\/netty\/netty\/commit\/185f8b2756a36aaa4f973f1a2a025e7d981823f1",
            "commit_sha":"185f8b2756a36aaa4f973f1a2a025e7d981823f1",
            "patch":"SINGLE",
            "chain_ord":"['185f8b2756a36aaa4f973f1a2a025e7d981823f1']",
            "before_first_fix_commit":"{'7dbca6aedc8cf5971e2a26d8fc2b7f265f2b4bf1'}",
            "last_fix_commit":"185f8b2756a36aaa4f973f1a2a025e7d981823f1",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2022, 06:57:43",
            "message":"Merge pull request from GHSA-269q-hmxg-m83q\n\n* Correctly modify permission for temporary files when using Java 6 in all cases\n\nMotivation:\n\n[GHSA-5mcr-gq6c-3hq2](https:\/\/github.com\/netty\/netty\/security\/advisories\/GHSA-5mcr-gq6c-3hq2) did not correctly fix all cases for temprory files when running on java 6.\n\nModifications:\n\n- Add correctly adjust perms in all cases\n- Add logging if adjusting of permissions fails\n\nResult:\n\nFixes https:\/\/github.com\/netty\/netty\/security\/advisories\/GHSA-269q-hmxg-m83q\n\n* Throw on failure",
            "author":"Norman Maurer",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 4, 'total': 15}",
            "files":"{'common\/src\/main\/java\/io\/netty\/util\/internal\/PlatformDependent.java': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/netty\/netty\/raw\/185f8b2756a36aaa4f973f1a2a025e7d981823f1\/common%2Fsrc%2Fmain%2Fjava%2Fio%2Fnetty%2Futil%2Finternal%2FPlatformDependent.java', 'patch': '@@ -1447,13 +1447,20 @@ public static File createTempFile(String prefix, String suffix, File directory)\\n             }\\n             return Files.createTempFile(directory.toPath(), prefix, suffix).toFile();\\n         }\\n+        final File file;\\n         if (directory == null) {\\n-            return File.createTempFile(prefix, suffix);\\n+            file = File.createTempFile(prefix, suffix);\\n+        } else {\\n+            file = File.createTempFile(prefix, suffix, directory);\\n         }\\n-        File file = File.createTempFile(prefix, suffix, directory);\\n+\\n         \/\/ Try to adjust the perms, if this fails there is not much else we can do...\\n-        file.setReadable(false, false);\\n-        file.setReadable(true, true);\\n+        if (!file.setReadable(false, false)) {\\n+            throw new IOException(\"Failed to set permissions on temporary file \" + file);\\n+        }\\n+        if (!file.setReadable(true, true)) {\\n+            throw new IOException(\"Failed to set permissions on temporary file \" + file);\\n+        }\\n         return file;\\n     }'}}",
            "message_norm":"merge pull request from ghsa-269q-hmxg-m83q\n\n* correctly modify permission for temporary files when using java 6 in all cases\n\nmotivation:\n\n[ghsa-5mcr-gq6c-3hq2](https:\/\/github.com\/netty\/netty\/security\/advisories\/ghsa-5mcr-gq6c-3hq2) did not correctly fix all cases for temprory files when running on java 6.\n\nmodifications:\n\n- add correctly adjust perms in all cases\n- add logging if adjusting of permissions fails\n\nresult:\n\nfixes https:\/\/github.com\/netty\/netty\/security\/advisories\/ghsa-269q-hmxg-m83q\n\n* throw on failure",
            "language":"en",
            "entities":"[('ghsa-269q-hmxg-m83q', 'VULNID', 'GHSA'), ('permission', 'SECWORD', ''), ('ghsa-5mcr-gq6c-3hq2](https:\/\/github.com\/netty\/netty', 'VULNID', 'GHSA'), ('security', 'SECWORD', ''), ('ghsa-5mcr-gq6c-3hq2) did not', 'VULNID', 'GHSA'), ('fix', 'ACTION', ''), ('add', 'ACTION', ''), ('add', 'ACTION', ''), ('permissions', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('https:\/\/github.com\/netty\/netty\/security\/advisories\/ghsa-269q-hmxg-m83q', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['common\/src\/main\/java\/io\/netty\/util\/internal\/PlatformDependent.java'])",
            "num_files":1.0
        },
        {
            "index":2233,
            "vuln_id":"GHSA-jcxv-2j3h-mg59",
            "cwe_id":"{'CWE-119'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/10369\/commits\/7bbe1a53cfc097b82b1589f7915a2120de39274c'}",
            "dataset":"osv",
            "summary":"Improper Restriction of Operations within the Bounds of a Memory Buffer in OpenCV OpenCV 3.3.1 (corresponding with opencv-python and opencv-contrib-python 3.3.1.11) has a Buffer Overflow in the cv::PxMDecoder::readData function in grfmt_pxm.cpp, because an incorrect size value is used.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencv\/opencv",
            "commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/10369\/commits\/7bbe1a53cfc097b82b1589f7915a2120de39274c",
            "commit_sha":"7bbe1a53cfc097b82b1589f7915a2120de39274c",
            "patch":"SINGLE",
            "chain_ord":"['7bbe1a53cfc097b82b1589f7915a2120de39274c']",
            "before_first_fix_commit":"{'eecb64a97313bcc0221db20c9cd0636f1c27a6d8'}",
            "last_fix_commit":"7bbe1a53cfc097b82b1589f7915a2120de39274c",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/21\/2017, 01:10:24",
            "message":"imgcodecs(pxm): fix memcpy size",
            "author":"Alexander Alekhin",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'modules\/imgcodecs\/src\/grfmt_pxm.cpp': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/7bbe1a53cfc097b82b1589f7915a2120de39274c\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_pxm.cpp', 'patch': '@@ -333,7 +333,7 @@ bool PxMDecoder::readData( Mat& img )\\n                         }\\n                     }\\n                     else\\n-                        memcpy( data, src, CV_ELEM_SIZE1(m_type)*m_width);\\n+                        memcpy(data, src, img.elemSize1()*m_width);\\n                 }\\n                 else\\n                 {'}}",
            "message_norm":"imgcodecs(pxm): fix memcpy size",
            "language":"ca",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_pxm.cpp'])",
            "num_files":1.0
        },
        {
            "index":188,
            "vuln_id":"GHSA-338v-3958-8v8r",
            "cwe_id":"{'CWE-362'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/weld\/core\/commit\/6808b11cd6d97c71a2eed754ed4f955acd789086', 'https:\/\/github.com\/weld\/core\/commit\/29fd1107fd30579ad9bb23fae4dc3ba464205745', 'https:\/\/github.com\/weld\/core\/commit\/8e413202fa1af08c09c580f444e4fd16874f9c65'}",
            "dataset":"osv",
            "summary":"Information disclosure in JBoss Weld Race condition in JBoss Weld before 2.2.8 and 3.x before 3.0.0 Alpha3 allows remote attackers to obtain information from a previous conversation via vectors related to a stale thread state.",
            "published_date":"2020-06-10",
            "chain_len":3,
            "project":"https:\/\/github.com\/weld\/core",
            "commit_href":"https:\/\/github.com\/weld\/core\/commit\/6808b11cd6d97c71a2eed754ed4f955acd789086",
            "commit_sha":"6808b11cd6d97c71a2eed754ed4f955acd789086",
            "patch":"MULTI",
            "chain_ord":"['29fd1107fd30579ad9bb23fae4dc3ba464205745', '6808b11cd6d97c71a2eed754ed4f955acd789086', '8e413202fa1af08c09c580f444e4fd16874f9c65']",
            "before_first_fix_commit":"{'6808b11cd6d97c71a2eed754ed4f955acd789086'}",
            "last_fix_commit":"8e413202fa1af08c09c580f444e4fd16874f9c65",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/01\/2014, 16:48:56",
            "message":"WELD-1802 RequestScopedCache - Make sure each request is ended before a new one is started",
            "author":"Jozef Hartinger",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'impl\/src\/main\/java\/org\/jboss\/weld\/context\/cache\/RequestScopedCache.java': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/weld\/core\/raw\/6808b11cd6d97c71a2eed754ed4f955acd789086\/impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fjboss%2Fweld%2Fcontext%2Fcache%2FRequestScopedCache.java', 'patch': '@@ -71,6 +71,8 @@ public void invalidate() {\\n     }\\n \\n     public static void beginRequest() {\\n+        \/\/ if the previous request was not ended properly for some reason, make sure it is ended now\\n+        endRequest();\\n         CACHE.set(new LinkedList<RequestScopedItem>());\\n     }\\n \\n@@ -80,8 +82,8 @@ public static void beginRequest() {\\n      *\/\\n     public static void endRequest() {\\n         final List<RequestScopedItem> result = CACHE.get();\\n-        CACHE.remove();\\n         if (result != null) {\\n+            CACHE.remove();\\n             for (final RequestScopedItem item : result) {\\n                 item.invalidate();\\n             }'}}",
            "message_norm":"weld-1802 requestscopedcache - make sure each request is ended before a new one is started",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['impl\/src\/main\/java\/org\/jboss\/weld\/context\/cache\/RequestScopedCache.java'])",
            "num_files":1.0
        },
        {
            "index":952,
            "vuln_id":"GHSA-74cr-77xc-8g6r",
            "cwe_id":"{'CWE-400', 'CWE-1321'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/apollographql\/apollo-server\/commit\/cea7397582a293af6a5f60947da34b95e669c6c1'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in @apollo\/gateway Versions of `@apollo\/gateway` prior to 0.6.2 are vulnerable to Prototype Pollution. The package uses deepMerge() to merge objects, which may allow attackers to alter the Object prototype through queries with GraphQL aliases. Carefully constructed payloads can override properties of all objects in the application. This may lead to Denial of Service or may be chained with other vulnerabilities leading to Remote Code Execution.\n\n\n## Recommendation\n\nUpgrade to version 0.6.2 or later.",
            "published_date":"2019-06-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/apollographql\/apollo-server",
            "commit_href":"https:\/\/github.com\/apollographql\/apollo-server\/commit\/cea7397582a293af6a5f60947da34b95e669c6c1",
            "commit_sha":"cea7397582a293af6a5f60947da34b95e669c6c1",
            "patch":"SINGLE",
            "chain_ord":"['cea7397582a293af6a5f60947da34b95e669c6c1']",
            "before_first_fix_commit":"{'116e1b46ae8a58d5b77038d66588f208eb9b6e2a'}",
            "last_fix_commit":"cea7397582a293af6a5f60947da34b95e669c6c1",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/04\/2019, 22:58:07",
            "message":"Ignore __proto__ fields in deepMerge",
            "author":"Trevor Scheer",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'packages\/apollo-gateway\/src\/utilities\/deepMerge.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apollographql\/apollo-server\/raw\/cea7397582a293af6a5f60947da34b95e669c6c1\/packages%2Fapollo-gateway%2Fsrc%2Futilities%2FdeepMerge.ts', 'patch': \"@@ -4,7 +4,7 @@ export function deepMerge(target: any, source: any): any {\\n   if (source === undefined || source === null) return target;\\n \\n   for (const key of Object.keys(source)) {\\n-    if (source[key] === undefined) continue;\\n+    if (source[key] === undefined || key === '__proto__') continue;\\n \\n     if (target[key] && isObject(source[key])) {\\n       deepMerge(target[key], source[key]);\"}}",
            "message_norm":"ignore __proto__ fields in deepmerge",
            "language":"nl",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/apollo-gateway\/src\/utilities\/deepMerge.ts'])",
            "num_files":1.0
        },
        {
            "index":2297,
            "vuln_id":"GHSA-jr37-66pj-36v7",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/Bottelet\/DaybydayCRM\/commit\/002dc75f400cf307bd00b71a5a93f1e26e52cee2'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in DayByDay CRM In Daybyday CRM, version 2.2.0 is vulnerable to Stored Cross-Site Scripting (XSS) vulnerability that allows low privileged application users to store malicious scripts in the title field of new tasks. These scripts are executed in a victim\u2019s browser when they open the \u201c\/tasks\u201d page to view all the tasks.",
            "published_date":"2022-01-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/Bottelet\/DaybydayCRM",
            "commit_href":"https:\/\/github.com\/Bottelet\/DaybydayCRM\/commit\/002dc75f400cf307bd00b71a5a93f1e26e52cee2",
            "commit_sha":"002dc75f400cf307bd00b71a5a93f1e26e52cee2",
            "patch":"SINGLE",
            "chain_ord":"['002dc75f400cf307bd00b71a5a93f1e26e52cee2']",
            "before_first_fix_commit":"{'fe842ea5ede237443f1f45a99aeb839133115d8b'}",
            "last_fix_commit":"002dc75f400cf307bd00b71a5a93f1e26e52cee2",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/25\/2021, 19:53:06",
            "message":"fix xss for tasks index",
            "author":"Casper Bottelet",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'app\/Http\/Controllers\/TasksController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Bottelet\/DaybydayCRM\/raw\/002dc75f400cf307bd00b71a5a93f1e26e52cee2\/app%2FHttp%2FControllers%2FTasksController.php', 'patch': '@@ -82,7 +82,7 @@ public function anyData()\\n             })\\n             ->addColumn(\\'view\\', function ($tasks) {\\n                 return \\'<a href=\"\\' . route(\"tasks.show\", $tasks->external_id) . \\'\" class=\"btn btn-link\">\\' . __(\\'View\\') .\\'<\/a>\\'\\n-                . \\'<a data-toggle=\"modal\" data-id=\"\\'. route(\\'tasks.destroy\\',$tasks->external_id) . \\'\" data-title=\"\\'. $tasks->title . \\'\" data-target=\"#deletion\" class=\"btn btn-link\">\\' . __(\\'Delete\\') .\\'<\/a>\\'\\n+                . \\'<a data-toggle=\"modal\" data-id=\"\\'. route(\\'tasks.destroy\\',$tasks->external_id) . \\'\" data-target=\"#deletion\" class=\"btn btn-link\">\\' . __(\\'Delete\\') .\\'<\/a>\\'\\n                 ;\\n             })\\n             ->rawColumns([\\'titlelink\\',\\'view\\', \\'status_id\\'])'}}",
            "message_norm":"fix xss for tasks index",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/TasksController.php'])",
            "num_files":1.0
        },
        {
            "index":2405,
            "vuln_id":"GHSA-mc8v-mgrf-8f4m",
            "cwe_id":"{'CWE-843'}",
            "score":3.0,
            "chain":"{'https:\/\/github.com\/opencontainers\/distribution-spec\/commit\/ac28cac0557bcd3084714ab09f9f2356fe504923'}",
            "dataset":"osv",
            "summary":"Clarify Content-Type handling ### Impact\nIn the OCI Distribution Specification version 1.0.0 and prior, the Content-Type header alone was used to determine the type of document during push and pull operations. Documents that contain both \u201cmanifests\u201d and \u201clayers\u201d fields could be interpreted as either a manifest or an index in the absence of an accompanying Content-Type header. If a Content-Type header changed between two pulls of the same digest, a client may interpret the resulting content differently.\n\n### Patches\nThe OCI Distribution Specification will be updated to require that a `mediaType` value present in a manifest or index match the Content-Type header used during the push and pull operations.\n\n### Workarounds\nClients pulling from a registry may distrust the Content-Type header and reject an ambiguous document that contains both \u201cmanifests\u201d and \u201clayers\u201d fields or \u201cmanifests\u201d and \u201cconfig\u201d fields.\n\n### References\nhttps:\/\/github.com\/opencontainers\/image-spec\/security\/advisories\/GHSA-77vh-xpmg-72qh\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in https:\/\/github.com\/opencontainers\/distribution-spec\/\n* Email us at security@opencontainers.org",
            "published_date":"2021-11-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencontainers\/distribution-spec",
            "commit_href":"https:\/\/github.com\/opencontainers\/distribution-spec\/commit\/ac28cac0557bcd3084714ab09f9f2356fe504923",
            "commit_sha":"ac28cac0557bcd3084714ab09f9f2356fe504923",
            "patch":"SINGLE",
            "chain_ord":"['ac28cac0557bcd3084714ab09f9f2356fe504923']",
            "before_first_fix_commit":"{'13bd0834858f16049a4f7cb3f7ee0675f34beac4'}",
            "last_fix_commit":"ac28cac0557bcd3084714ab09f9f2356fe504923",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/27\/2021, 20:01:43",
            "message":"spec: clarify handling regarding Content-type header\n\nSigned-off-by: Vincent Batts <vbatts@hashbangbash.com>",
            "author":"Vincent Batts",
            "comments":"{'com_1': {'author': 'Daoh1', 'datetime': '01\/31\/2022, 22:47:39', 'body': 'ACADD22323435 acdbdbat2t2'}}",
            "stats":"{'additions': 13, 'deletions': 2, 'total': 15}",
            "files":"{'spec.md': {'additions': 13, 'deletions': 2, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencontainers\/distribution-spec\/raw\/ac28cac0557bcd3084714ab09f9f2356fe504923\/spec.md', 'patch': '@@ -142,7 +142,9 @@ The `<reference>` MUST NOT be in any other format. Throughout this document, `<n\\n \\n The client SHOULD include an `Accept` header indicating which manifest content types it supports.\\n In a successful response, the `Content-Type` header will indicate the type of the returned manifest.\\n-For more information on the use of `Accept` headers and content negotiation, please see [Content Negotiation](.\/content-negotiation.md)\\n+The `Content-Type` header SHOULD match what the client [pushed as the manifest\\'s `Content-Type`](#pushing-manifests).\\n+If the manifest has a `mediaType` field, clients SHOULD reject unless the `mediaType` field\\'s value matches the type specified by the `Content-Type` header.\\n+For more information on the use of `Accept` headers and content negotiation, please see [Content Negotiation](.\/content-negotiation.md).\\n \\n A GET request to an existing manifest URL MUST provide the expected manifest, with a response code that MUST be `200 OK`.\\n A successful response SHOULD contain the digest of the uploaded blob in the header `Docker-Content-Digest`.\\n@@ -380,11 +382,20 @@ it SHOULD return a `202`. This indicates that the upload session has begun and t\\n To push a manifest, perform a `PUT` request to a path in the following format, and with the following headers\\n and body:\\n `\/v2\/<name>\/manifests\/<reference>` <sup>[end-7](#endpoints)<\/sup>\\n+\\n+Clients SHOULD set the `Content-Type` header to the type of the manifest being pushed.\\n+All manifests SHOULD include a `mediaType` field declaring the type of the manifest being pushed.\\n+If a manifest includes a `mediaType` field, clients MUST set the `Content-Type` header to the value specified by the `mediaType` field.\\n+\\n ```\\n Content-Type: application\/vnd.oci.image.manifest.v1+json\\n ```\\n+Manifest byte stream:\\n ```\\n-<manifest byte stream>\\n+{\\n+  \"mediaType\": \"application\/vnd.oci.image.manifest.v1+json\",\\n+  ...\\n+}\\n ```\\n \\n `<name>` is the namespace of the repository, and the `<reference>` MUST be either a) a digest or b) a tag.'}}",
            "message_norm":"spec: clarify handling regarding content-type header\n\nsigned-off-by: vincent batts <vbatts@hashbangbash.com>",
            "language":"en",
            "entities":"[('vbatts@hashbangbash.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['spec.md'])",
            "num_files":1.0
        },
        {
            "index":2090,
            "vuln_id":"GHSA-hm37-9xh2-q499",
            "cwe_id":"{'CWE-209'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/d5b53b4b7e76c5b666fc657019dbf864fb04076c', 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/26e0a471e9fdb23e635bc3014cf4cbd2323a08d3', 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/274447f91b4037b7050ae634879b657554523b39'}",
            "dataset":"osv",
            "summary":"Possible leak of key's raw field if declared length is incorrect ### Impact\nIf a field of a key is shorter than it is declared to be, the parser raises an error with a message containing the raw field value. An attacker able to modify the declared length of a key's sensitive field can thus expose the raw value of that field.\n\n### Patches\nUpgrade to version 0.0.6, which no longer includes the raw field value in the error message.\n\n### Workarounds\nN\/A\n\n### References\nN\/A\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [openssh_key_parser](https:\/\/github.com\/scottcwang\/openssh_key_parser)",
            "published_date":"2022-07-06",
            "chain_len":3,
            "project":"https:\/\/github.com\/scottcwang\/openssh_key_parser",
            "commit_href":"https:\/\/github.com\/scottcwang\/openssh_key_parser\/commit\/26e0a471e9fdb23e635bc3014cf4cbd2323a08d3",
            "commit_sha":"26e0a471e9fdb23e635bc3014cf4cbd2323a08d3",
            "patch":"MULTI",
            "chain_ord":"['26e0a471e9fdb23e635bc3014cf4cbd2323a08d3', 'd5b53b4b7e76c5b666fc657019dbf864fb04076c', '274447f91b4037b7050ae634879b657554523b39']",
            "before_first_fix_commit":"{'ae4d131d1cd8fe06325bfd6b749305aca60873bf', '69fe5b7addc21d3f39626ae93c6961811aea9d4c'}",
            "last_fix_commit":"274447f91b4037b7050ae634879b657554523b39",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/22\/2022, 14:49:37",
            "message":"Changed an exception message to prevent possible disclosures of keying material.",
            "author":"Michael Doyle",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'openssh_key\/pascal_style_byte_stream.py': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/scottcwang\/openssh_key_parser\/raw\/26e0a471e9fdb23e635bc3014cf4cbd2323a08d3\/openssh_key%2Fpascal_style_byte_stream.py', 'patch': '@@ -236,7 +236,8 @@ def read_fixed_bytes(self, num_bytes: int) -> bytes:\\n         \"\"\"\\n         read_bytes = self.read(num_bytes)\\n         if len(read_bytes) < num_bytes:\\n-            raise EOFError(read_bytes)\\n+            raise EOFError(\"Fewer than \\'num_bytes\\' bytes remaining in the \"\\n+                    \"underlying bytestream\")\\n         return read_bytes\\n \\n     def read_pascal_bytes(self, string_length_size: int) -> bytes:'}}",
            "message_norm":"changed an exception message to prevent possible disclosures of keying material.",
            "language":"en",
            "entities":"[('changed', 'ACTION', ''), ('prevent', 'ACTION', ''), ('keying', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['openssh_key\/pascal_style_byte_stream.py'])",
            "num_files":1.0
        },
        {
            "index":1948,
            "vuln_id":"GHSA-gwrj-88fp-5m36",
            "cwe_id":"{'CWE-94'}",
            "score":8.5,
            "chain":"{'https:\/\/github.com\/whiteleaf7\/narou\/commit\/d07720e855293182563b749431dfbf6c2d1cdb42'}",
            "dataset":"osv",
            "summary":"Code injection in Narou Narou (aka Narou.rb) before 3.8.0 allows Ruby Code Injection via the title name or author name of a novel.",
            "published_date":"2021-07-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/whiteleaf7\/narou",
            "commit_href":"https:\/\/github.com\/whiteleaf7\/narou\/commit\/d07720e855293182563b749431dfbf6c2d1cdb42",
            "commit_sha":"d07720e855293182563b749431dfbf6c2d1cdb42",
            "patch":"SINGLE",
            "chain_ord":"['d07720e855293182563b749431dfbf6c2d1cdb42']",
            "before_first_fix_commit":"{'21f8d1b4cbfa42a80eae09d74bb5124fd6cde3f2'}",
            "last_fix_commit":"d07720e855293182563b749431dfbf6c2d1cdb42",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/27\/2021, 13:49:19",
            "message":"prohibit embedding of novel information",
            "author":"whiteleaf7",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 8, 'total': 9}",
            "files":"{'template\/converter.rb.erb': {'additions': 1, 'deletions': 8, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/whiteleaf7\/narou\/raw\/d07720e855293182563b749431dfbf6c2d1cdb42\/template%2Fconverter.rb.erb', 'patch': '@@ -1,14 +1,7 @@\\n # -*- coding: utf-8 -*-\\n <% Template.target_binary_version(1.0) -%>\\n \\n-=begin\\n-\u5bfe\u8c61\u5c0f\u8aac\u60c5\u5831\\n-\u30bf\u30a4\u30c8\u30eb: <%= @setting[\"title\"] %>\\n-\u4f5c\u8005: <%= @setting[\"author\"] %>\\n-URL: <%= @setting[\"toc_url\"] %>\\n-\\n-\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f http:\/\/bit.ly\/1vTEH04 \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\\n-=end\\n+# \u8a73\u7d30\u306b\u3064\u3044\u3066\u306f http:\/\/bit.ly\/1vTEH04 \u3092\u53c2\u7167\u3057\u3066\u4e0b\u3055\u3044\\n converter do\\n   # \u5404\u7a2e\u5909\u63db\u51e6\u7406\u304c\u3055\u308c\u308b\u300c\u524d\u300d\u306e\u751f\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u3066\u306e\u5909\u63db\u51e6\u7406\u3092\u8a18\u8ff0\\n   def before(io, text_type)'}}",
            "message_norm":"prohibit embedding of novel information",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['template\/converter.rb.erb'])",
            "num_files":1.0
        },
        {
            "index":202,
            "vuln_id":"GHSA-35m5-8cvj-8783",
            "cwe_id":"{'CWE-916', 'CWE-327', 'CWE-328'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/commit\/e652d56ac60eadfc26489ab83927af13a9b9d8ce'}",
            "dataset":"osv",
            "summary":"Improper hashing in enrocrypt ### Impact\nThe vulnerability is we used MD5 hashing Algorithm In our hashing file. If anyone who is a beginner(and doesn't know about hashes)  can face problems as MD5 is considered a Insecure Hashing Algorithm. \n\n### Patches\nThe vulnerability is patched in v1.1.4 of the product, the users can upgrade to version 1.1.4.\n\n### Workarounds\nIf u specifically want a version and don't want to upgrade, you can remove the `MD5` hashing function from the file `hashing.py` and this vulnerability will be gone\n\n### References\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/916\/\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/327\/\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/328\/\nhttps:\/\/www.section.io\/engineering-education\/what-is-md5\/\nhttps:\/\/www.johndcook.com\/blog\/2019\/01\/24\/reversing-an-md5-hash\/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [**Enrocrypt's Official Repo**](http:\/\/www.github.com\/Morgan-Phoenix\/EnroCrypt)\n* Create a Discussion in  [**Enrocrypt's Official Repo**](http:\/\/www.github.com\/Morgan-Phoenix\/EnroCrypt)",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt",
            "commit_href":"https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/commit\/e652d56ac60eadfc26489ab83927af13a9b9d8ce",
            "commit_sha":"e652d56ac60eadfc26489ab83927af13a9b9d8ce",
            "patch":"SINGLE",
            "chain_ord":"['e652d56ac60eadfc26489ab83927af13a9b9d8ce']",
            "before_first_fix_commit":"{'d02050267cecbe4f2877a07ca8a930129528ac05'}",
            "last_fix_commit":"e652d56ac60eadfc26489ab83927af13a9b9d8ce",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/06\/2021, 14:04:45",
            "message":"Fixed GHSA-35m5-8cvj-8783",
            "author":"Morgan-Phoenix",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 5, 'total': 5}",
            "files":"{'enrocrypt\/hashing.py': {'additions': 0, 'deletions': 5, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/raw\/e652d56ac60eadfc26489ab83927af13a9b9d8ce\/enrocrypt%2Fhashing.py', 'patch': '@@ -66,11 +66,6 @@ def SHA244(self,data:str):\\n         hash = str(sha.digest())\\n         return self.__Salt(hash,salt=self.salt)\\n \\n-    def MD5(self,data:str):\\n-        sha = hashlib.md5(bytes(data.encode()))\\n-        hash = str(sha.digest())\\n-        return self.__Salt(hash,salt=self.salt)\\n-\\n     def SHA384(self,data:str):\\n         sha = hashlib.sha384(bytes(data.encode()))\\n         hash = str(sha.digest())'}}",
            "message_norm":"fixed ghsa-35m5-8cvj-8783",
            "language":"ca",
            "entities":"[('fixed', 'ACTION', ''), ('ghsa-35m5-8cvj-8783', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['enrocrypt\/hashing.py'])",
            "num_files":1.0
        },
        {
            "index":1897,
            "vuln_id":"GHSA-gm9x-q798-hmr4",
            "cwe_id":"{'CWE-78'}",
            "score":7.2,
            "chain":"{'https:\/\/github.com\/sh0ji\/git-tags-remote\/commit\/a20488960cbd2c98455386108253094897ebfc1c'}",
            "dataset":"osv",
            "summary":"Command Injection in git-tags-remote All versions of `git-tags-remote ` are vulnerable to Command Injection. The package fails to sanitize the repository input and passes it directly to an `exec` call on the `get` function . This may allow attackers to execute arbitrary code in the system if the `repo` value passed to the function is user-controlled.  \n\nThe following proof-of-concept creates a file in `\/tmp`:  \n```\nconst gitTagsRemote = require('git-tags-remote');\n\ngitTagsRemote.get('https:\/\/github.com\/sh0ji\/git-tags-remote.git; echo \"Injection Success\" > \/tmp\/command-injection.test')\n.then(tags => console.log(tags));\n```",
            "published_date":"2020-07-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/sh0ji\/git-tags-remote",
            "commit_href":"https:\/\/github.com\/sh0ji\/git-tags-remote\/commit\/a20488960cbd2c98455386108253094897ebfc1c",
            "commit_sha":"a20488960cbd2c98455386108253094897ebfc1c",
            "patch":"SINGLE",
            "chain_ord":"['a20488960cbd2c98455386108253094897ebfc1c']",
            "before_first_fix_commit":"{'c43558b77312a13f69ca25ed965cf4792c239458'}",
            "last_fix_commit":"a20488960cbd2c98455386108253094897ebfc1c",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/21\/2021, 20:02:24",
            "message":"fix: use spawn for more secure input\n\nresolves #58",
            "author":"Evan Yamanishi",
            "comments":null,
            "stats":"{'additions': 23, 'deletions': 10, 'total': 33}",
            "files":"{'src\/index.ts': {'additions': 23, 'deletions': 10, 'changes': 33, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sh0ji\/git-tags-remote\/raw\/a20488960cbd2c98455386108253094897ebfc1c\/src%2Findex.ts', 'patch': \"@@ -1,17 +1,30 @@\\n import { valid, compare } from 'semver';\\n-import { exec } from 'child_process';\\n+import { spawn } from 'child_process';\\n \\n-const lsRemoteTags = (repo: string): Promise<string> => new Promise(\\n-\\t(resolve, reject) => {\\n-\\t\\texec(`git ls-remote --tags ${repo}`, (_, stdout, stderr) => {\\n-\\t\\t\\tif (stderr) reject(new Error(stderr));\\n-\\t\\t\\tresolve(stdout.toString().trim());\\n-\\t\\t});\\n-\\t},\\n-);\\n+const lsRemoteTags = (repoPath: string): Promise<string> => new Promise((resolve, reject) => {\\n+\\tlet stderr = '';\\n+\\tlet stdout = '';\\n+\\n+\\tconst child = spawn('git', ['ls-remote', '--tags', repoPath]);\\n+\\n+\\tchild.stdout.on('data', (data) => {\\n+\\t\\tstdout += data;\\n+\\t});\\n+\\n+\\tchild.stderr.on('data', (data) => {\\n+\\t\\tstderr += data;\\n+\\t});\\n+\\n+\\tchild.on('error', reject);\\n+\\n+\\tchild.on('close', (exitCode) => {\\n+\\t\\tif (exitCode !== 0 || stderr.length) reject(new Error(stderr));\\n+\\t\\tresolve(stdout.toString().trim());\\n+\\t});\\n+});\\n \\n const parseTags = (tags: string): Map<string, string> => {\\n-\\tconst tagMap = new Map();\\n+\\tconst tagMap = new Map<string, string>();\\n \\ttags.split('\\\\n')\\n \\t\\t.forEach((str) => {\\n \\t\\t\\tconst ref = str.split(\/\\\\t\/);\"}}",
            "message_norm":"fix: use spawn for more secure input\n\nresolves #58",
            "language":"en",
            "entities":"[('secure', 'SECWORD', ''), ('#58', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/index.ts'])",
            "num_files":1.0
        },
        {
            "index":1013,
            "vuln_id":"GHSA-7cqx-92hp-x6wh",
            "cwe_id":"{'CWE-787', 'CWE-119'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `MaxPool3DGradGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPool3DGradGrad` is vulnerable to a heap buffer overflow: \n\n```python\nimport tensorflow as tf\n\nvalues = [0.01] * 11\norig_input = tf.constant(values, shape=[11, 1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.01], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([0.01], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\nksize = [1, 1, 1, 1, 1]\nstrides = [1, 1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPool3DGradGrad(\n    orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n    strides=strides, padding=padding)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/596c05a159b6fbb9e39ca10b3f7753b7244fa1e9\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L694-L696) does not check that the initialization of `Pool3dParameters` completes successfully:\n\n```cc\nPool3dParameters params{context,  ksize_,       stride_,\n                        padding_, data_format_, tensor_in.shape()};\n```\n\nSince [the constructor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/596c05a159b6fbb9e39ca10b3f7753b7244fa1e9\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L48-L88) uses `OP_REQUIRES` to validate conditions, the first assertion that fails interrupts the initialization of `params`, making it contain invalid data. In turn, this might cause a heap buffer overflow, depending on default initialized values.\n\n### Patches\nWe have patched the issue in GitHub commit [63c6a29d0f2d692b247f7bf81f8732d6442fad09](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09",
            "commit_sha":"63c6a29d0f2d692b247f7bf81f8732d6442fad09",
            "patch":"SINGLE",
            "chain_ord":"['63c6a29d0f2d692b247f7bf81f8732d6442fad09']",
            "before_first_fix_commit":"{'596c05a159b6fbb9e39ca10b3f7753b7244fa1e9'}",
            "last_fix_commit":"63c6a29d0f2d692b247f7bf81f8732d6442fad09",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 01:07:02",
            "message":"Add missing validation, prevent heap OOB\n\nPiperOrigin-RevId: 372246723\nChange-Id: I1a454a643810e77d7d14821b342098c56a09fbbf",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'tensorflow\/core\/kernels\/pooling_ops_3d.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/63c6a29d0f2d692b247f7bf81f8732d6442fad09\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_3d.cc', 'patch': '@@ -693,6 +693,7 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n \\n     Pool3dParameters params{context,  ksize_,       stride_,\\n                             padding_, data_format_, tensor_in.shape()};\\n+    if (!context->status().ok()) return;  \/\/ params is invalid\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n@@ -710,6 +711,17 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n         context, out_grad_backprop.NumElements() > 0,\\n         errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\\n                                 out_grad_backprop.DebugString()));\\n+    OP_REQUIRES(context,\\n+                tensor_in.NumElements() == out_grad_backprop.NumElements(),\\n+                errors::InvalidArgument(\"tensor_in and out_grad_backprop must \"\\n+                                        \"have same number of elements, got <\",\\n+                                        tensor_in.DebugString(), \"> and <\",\\n+                                        out_grad_backprop.DebugString(), \">\"));\\n+    OP_REQUIRES(\\n+        context, tensor_out.NumElements() == output->NumElements(),\\n+        errors::InvalidArgument(\\n+            \"tensor_out and output must have same number of elements, got <\",\\n+            tensor_out.DebugString(), \"> and <\", output->DebugString(), \">\"));\\n \\n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);'}}",
            "message_norm":"add missing validation, prevent heap oob\n\npiperorigin-revid: 372246723\nchange-id: i1a454a643810e77d7d14821b342098c56a09fbbf",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('372246723', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_3d.cc'])",
            "num_files":1.0
        },
        {
            "index":1409,
            "vuln_id":"GHSA-9p47-w5xp-f4xr",
            "cwe_id":"{'CWE-311'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/felixrieseberg\/windows-build-tools\/commit\/9835d33e68f2cb5e4d148e954bb3ed0221d98e90'}",
            "dataset":"osv",
            "summary":"Downloads Resources over HTTP in windows-build-tools Affected versions of `windows-build-tools` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `windows-build-tools`.\n\n\n## Recommendation\n\nUpdate to version 1.0.0 or later.",
            "published_date":"2018-11-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/felixrieseberg\/windows-build-tools",
            "commit_href":"https:\/\/github.com\/felixrieseberg\/windows-build-tools\/commit\/9835d33e68f2cb5e4d148e954bb3ed0221d98e90",
            "commit_sha":"9835d33e68f2cb5e4d148e954bb3ed0221d98e90",
            "patch":"SINGLE",
            "chain_ord":"['9835d33e68f2cb5e4d148e954bb3ed0221d98e90']",
            "before_first_fix_commit":"{'3a97ea156d07aaccca101ed8f0a1606eea8dfc2d'}",
            "last_fix_commit":"9835d33e68f2cb5e4d148e954bb3ed0221d98e90",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/22\/2016, 17:19:25",
            "message":":wrench: Use HTTPS - Thanks to @grander",
            "author":"Felix Rieseberg",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/constants.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/felixrieseberg\/windows-build-tools\/raw\/9835d33e68f2cb5e4d148e954bb3ed0221d98e90\/src%2Fconstants.js', 'patch': \"@@ -2,7 +2,7 @@ var pythonMirror = process.env.npm_config_python_mirror || process.env.PYTHON_MI\\n \\n var buildTools = {\\n   installerName: 'BuildTools_Full.exe',\\n-  installerUrl: 'http:\/\/download.microsoft.com\/download\/5\/f\/7\/5f7acaeb-8363-451f-9425-68a90f98b238\/visualcppbuildtools_full.exe',\\n+  installerUrl: 'https:\/\/download.microsoft.com\/download\/5\/f\/7\/5f7acaeb-8363-451f-9425-68a90f98b238\/visualcppbuildtools_full.exe',\\n   logName: 'build-tools-log.txt'\\n }\"}}",
            "message_norm":":wrench: use https - thanks to @grander",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/constants.js'])",
            "num_files":1.0
        },
        {
            "index":1718,
            "vuln_id":"GHSA-fcwc-p4fc-c5cc",
            "cwe_id":"{'CWE-476'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/482da92095c4d48f8784b1f00dda4f81c28d2988'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `MatrixDiagPartOp` ### Impact\nIf a user does not provide a valid padding value to `tf.raw_ops.MatrixDiagPartOp`, then the code triggers a null pointer dereference (if input is empty) or produces invalid behavior, ignoring all values after the first:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagPartV2(\n  input=tf.ones(2,dtype=tf.int32),\n  k=tf.ones(2,dtype=tf.int32),\n  padding_value=[])\n```\n\nAlthough this example is given for `MatrixDiagPartV2`, all versions of the operation are affected.\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc#L89) reads the first value from a tensor buffer without first checking that the tensor has values to read from.\n\n### Patches\nWe have patched the issue in GitHub commit [482da92095c4d48f8784b1f00dda4f81c28d2988](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/482da92095c4d48f8784b1f00dda4f81c28d2988).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/482da92095c4d48f8784b1f00dda4f81c28d2988",
            "commit_sha":"482da92095c4d48f8784b1f00dda4f81c28d2988",
            "patch":"SINGLE",
            "chain_ord":"['482da92095c4d48f8784b1f00dda4f81c28d2988']",
            "before_first_fix_commit":"{'3b4351cc2d8ebf31d28dd78fb2730069d6716ad4'}",
            "last_fix_commit":"482da92095c4d48f8784b1f00dda4f81c28d2988",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2021, 22:07:31",
            "message":"Ensure non-empty padding_value input to tf.raw_ops.MatrixDiagPartV2, if a padding_value is input\n\nPiperOrigin-RevId: 388314614\nChange-Id: If0b51ad58d5d8543a6be6ce8f42ae4755c80d55f",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/482da92095c4d48f8784b1f00dda4f81c28d2988\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_diag_op.cc', 'patch': '@@ -89,7 +89,10 @@ class MatrixDiagPartOp : public OpKernel {\\n           upper_diag_index = diag_index.flat<int32>()(1);\\n         }\\n       }\\n-      padding_value = context->input(2).flat<T>()(0);\\n+      const Tensor& padding_in = context->input(2);\\n+      OP_REQUIRES(context, padding_in.NumElements() == 1,\\n+                  errors::InvalidArgument(\"Padding must be scalar.\"));\\n+      padding_value = padding_in.flat<T>()(0);\\n     }\\n     const TensorShape& input_shape = input.shape();'}}",
            "message_norm":"ensure non-empty padding_value input to tf.raw_ops.matrixdiagpartv2, if a padding_value is input\n\npiperorigin-revid: 388314614\nchange-id: if0b51ad58d5d8543a6be6ce8f42ae4755c80d55f",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('388314614', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2087,
            "vuln_id":"GHSA-hjp8-2cm3-cc45",
            "cwe_id":"{'CWE-200'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/fgribreau\/node-request-retry\/commit\/0979c6001d9d57c2aac3157c11b007397158922a'}",
            "dataset":"osv",
            "summary":"Cookie exposure in requestretry Exposure of Sensitive Information to an Unauthorized Actor in GitHub repository fgribreau\/node-request-retry prior to 7.0.0 via cookies being leaked to external sites.",
            "published_date":"2022-02-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/fgribreau\/node-request-retry",
            "commit_href":"https:\/\/github.com\/fgribreau\/node-request-retry\/commit\/0979c6001d9d57c2aac3157c11b007397158922a",
            "commit_sha":"0979c6001d9d57c2aac3157c11b007397158922a",
            "patch":"SINGLE",
            "chain_ord":"['0979c6001d9d57c2aac3157c11b007397158922a']",
            "before_first_fix_commit":"{'5e1a63c13c9b65ed927e8eb797d8cc7da0dae243'}",
            "last_fix_commit":"0979c6001d9d57c2aac3157c11b007397158922a",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/15\/2022, 20:20:12",
            "message":"Prevent Cookie & Authorization Headers from being forwarded when the URL redirects to another domain (information leak) #137",
            "author":"Timothee Desurmont",
            "comments":null,
            "stats":"{'additions': 39, 'deletions': 1, 'total': 40}",
            "files":"{'index.js': {'additions': 39, 'deletions': 1, 'changes': 40, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FGRibreau\/node-request-retry\/raw\/0979c6001d9d57c2aac3157c11b007397158922a\/index.js', 'patch': '@@ -11,6 +11,8 @@ var extend = require(\\'extend\\');\\n var request = require(\\'request\\');\\n var RetryStrategies = require(\\'.\/strategies\\');\\n var _ = require(\\'lodash\\');\\n+var url = require(\\'url\\');\\n+var querystring = require(\"querystring\");\\n \\n var DEFAULTS = {\\n   maxAttempts: 5, \/\/ try 5 times\\n@@ -24,6 +26,42 @@ function defaultPromiseFactory(resolver) {\\n   return new Promise(resolver);\\n }\\n \\n+\/\/ Prevent Cookie & Authorization Headers from being forwarded \\n+\/\/ when the URL redirects to another domain (information leak) #137 \\n+function sanitizeHeaders(options) {\\n+  \\n+  const HEADERS_TO_IGNORE = [\"cookie\", \"authorization\"];\\n+\\n+  const urlObject = url.parse(options.url)\\n+  const queryObject = querystring.parse(urlObject.query);\\n+  \\n+  const hasExternalLink = Object.keys(queryObject).reduce(function(acc, cur) {\\n+    \\n+    let qUrl = url.parse(queryObject[cur]);\\n+\\n+    \/\/ external link if protocol || host || port is different\\n+    if(!!qUrl.host && (qUrl.protocol !== urlObject.protocol || qUrl.host !== urlObject.host || qUrl.port !== urlObject.port) ) {\\n+      acc = true;\\n+    }\\n+    \\n+    return acc;\\n+\\n+  }, false);\\n+\\n+  if (hasExternalLink && options.hasOwnProperty(\"headers\") && typeof(options.headers) === \"object\") {\\n+    \\n+    \/\/ if External Link: remove Cookie and Authorization from Headers\\n+    Object.keys(options.headers).filter(function(key) {\\n+      return HEADERS_TO_IGNORE.includes(key.toLowerCase())\\n+    }).map(function(key) {\\n+      return delete options.headers[key]\\n+    });\\n+\\n+  }\\n+\\n+  return options;\\n+}\\n+\\n function _cloneOptions(options) {\\n   const cloned = {};\\n   for (let key in options) {\\n@@ -85,7 +123,7 @@ function Request(url, options, f, retryConfig) {\\n    * Option object\\n    * @type {Object}\\n    *\/\\n-  this.options = options;\\n+  this.options = sanitizeHeaders(options);\\n \\n   \/**\\n    * Return true if the request should be retried'}}",
            "message_norm":"prevent cookie & authorization headers from being forwarded when the url redirects to another domain (information leak) #137",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('cookie', 'SECWORD', ''), ('information leak', 'SECWORD', ''), ('#137', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":2746,
            "vuln_id":"GHSA-qfpc-5pjr-mh26",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764'}",
            "dataset":"osv",
            "summary":"Missing validation in shape inference for `Dequantize` ### Impact\nThe shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments:\n\n```python\nimport tensorflow as tf\n\ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.Dequantize(\n  input_tensor = tf.constant(-10.0, dtype=tf.float32),\n  input_tensor = tf.cast(input_tensor, dtype=tf.quint8),\n  min_range = tf.constant([], shape=[0], dtype=tf.float32),\n  max_range = tf.constant([], shape=[0], dtype=tf.float32),\n  mode  = 'MIN_COMBINED',\n  narrow_range=False,\n  axis=-10,\n  dtype=tf.dtypes.float32)\n```\n\nThe shape inference [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/ops\/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values.\n\n### Patches\nWe have patched the issue in GitHub commit [da857cfa0fde8f79ad0afdbc94e88b5d4bbec764](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
            "commit_sha":"da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
            "patch":"SINGLE",
            "chain_ord":"['da857cfa0fde8f79ad0afdbc94e88b5d4bbec764']",
            "before_first_fix_commit":"{'8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4'}",
            "last_fix_commit":"da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/30\/2021, 01:24:18",
            "message":"Fix a shape inference issue leading to nullptr deref.\n\nPiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -2990,6 +2990,10 @@ REGISTER_OP(\"Dequantize\")\\n       if (!s.ok() && s.code() != error::NOT_FOUND) {\\n         return s;\\n       }\\n+      if (axis < -1) {\\n+        return errors::InvalidArgument(\"axis should be at least -1, got \",\\n+                                       axis);\\n+      }\\n       const int minmax_rank = (axis == -1) ? 0 : 1;\\n       TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));\\n       ShapeHandle minmax;'}}",
            "message_norm":"fix a shape inference issue leading to nullptr deref.\n\npiperorigin-revid: 387712259\nchange-id: i7e670772b259c068a501a187cd89f18773bb95a1",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('nullptr', 'SECWORD', ''), ('387712259', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":3428,
            "vuln_id":"GHSA-xggc-qprg-x6mw",
            "cwe_id":"{'CWE-532', 'CWE-209', 'CWE-538', 'CWE-200'}",
            "score":9.0,
            "chain":"{'https:\/\/github.com\/weaveworks\/weave-gitops\/commit\/567356f471353fb5c676c77f5abc2a04631d50ca'}",
            "dataset":"osv",
            "summary":"Weave GitOps leaked cluster credentials into logs on connection errors ### Impact\nA vulnerability in the logging of Weave GitOps could allow an authenticated remote attacker to view sensitive cluster configurations, aka KubeConfg, of registered Kubernetes clusters, including the service account tokens in plain text from Weave GitOps's pod logs on the management cluster. An unauthorized remote attacker can also view these sensitive configurations from external log storage if enabled by the management cluster.\n\nThis vulnerability is due to the client factory dumping cluster configurations and their service account tokens when the cluster manager tries to connect to an API server of a registered cluster, and a connection error occurs. An attacker could exploit this vulnerability by either accessing logs of a pod of Weave GitOps, or from external log storage and obtaining all cluster configurations of registered clusters.\n\nA successful exploit could allow the attacker to use those cluster configurations to manage the registered Kubernetes clusters.\n\n### Patches\nThis vulnerability has been fixed by commit 567356f471353fb5c676c77f5abc2a04631d50ca. Users should upgrade to Weave GitOps core version >= v0.8.1-rc.6 released on 31\/05\/2022.\n\n### Workarounds\nThere is no workaround for this vulnerability.\n\n### References\nDisclosed by Stefan Prodan, Principal Engineer, Weaveworks.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Weave GitOps repository](https:\/\/github.com\/weaveworks\/weave-gitops)\n* Email us at [support@weave.works](mailto:support@weave.works)",
            "published_date":"2022-06-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/weaveworks\/weave-gitops",
            "commit_href":"https:\/\/github.com\/weaveworks\/weave-gitops\/commit\/567356f471353fb5c676c77f5abc2a04631d50ca",
            "commit_sha":"567356f471353fb5c676c77f5abc2a04631d50ca",
            "patch":"SINGLE",
            "chain_ord":"['567356f471353fb5c676c77f5abc2a04631d50ca']",
            "before_first_fix_commit":"{'a80bb361901d2e0e8f0e675303dfc3cbfcc9ab92'}",
            "last_fix_commit":"567356f471353fb5c676c77f5abc2a04631d50ca",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/28\/2022, 12:43:50",
            "message":"Fix logging on cluster connection error\nRemove the client config from the error log since the wrapped error already contains the cluster name for which the connection couldn't be established.\n\nSigned-off-by: Stefan Prodan <stefan.prodan@gmail.com>",
            "author":"Stefan Prodan",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'core\/clustersmngr\/factory.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/weaveworks\/weave-gitops\/raw\/567356f471353fb5c676c77f5abc2a04631d50ca\/core%2Fclustersmngr%2Ffactory.go', 'patch': '@@ -131,7 +131,7 @@ func (cf *clientsFactory) watchNamespaces(ctx context.Context) {\\n func (cf *clientsFactory) UpdateNamespaces(ctx context.Context) error {\\n \\tclients, err := clientsForClusters(cf.clusters.Get())\\n \\tif err != nil {\\n-\\t\\tcf.log.Error(err, \"failed to create clients for\", \"clusters\", cf.clusters.Get())\\n+\\t\\tcf.log.Error(err, \"failed to create client\")\\n \\t\\treturn err\\n \\t}'}}",
            "message_norm":"fix logging on cluster connection error\nremove the client config from the error log since the wrapped error already contains the cluster name for which the connection couldn't be established.\n\nsigned-off-by: stefan prodan <stefan.prodan@gmail.com>",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('error', 'FLAW', ''), ('remove', 'ACTION', ''), ('error', 'FLAW', ''), ('error', 'FLAW', ''), ('stefan.prodan@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/clustersmngr\/factory.go'])",
            "num_files":1.0
        },
        {
            "index":1536,
            "vuln_id":"GHSA-cf66-xwfp-gvc4",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/webpack\/webpack-dev-server\/commit\/f18e5adf123221a1015be63e1ca2491ca45b8d10'}",
            "dataset":"osv",
            "summary":"Missing Origin Validation in webpack-dev-server Versions of `webpack-dev-server` before 3.1.10 are missing origin validation on the websocket server. This vulnerability allows a remote attacker to steal a developer's source code because the origin of requests to the websocket server that is used for Hot Module Replacement (HMR) are not validated.\n\n\n## Recommendation\nFor `webpack-dev-server` update to version 3.1.11 or later.",
            "published_date":"2019-01-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/webpack\/webpack-dev-server",
            "commit_href":"https:\/\/github.com\/webpack\/webpack-dev-server\/commit\/f18e5adf123221a1015be63e1ca2491ca45b8d10",
            "commit_sha":"f18e5adf123221a1015be63e1ca2491ca45b8d10",
            "patch":"SINGLE",
            "chain_ord":"['f18e5adf123221a1015be63e1ca2491ca45b8d10']",
            "before_first_fix_commit":"{'e1bd264b9ce5fb0a05a62754883f6c8a36fbc51b'}",
            "last_fix_commit":"f18e5adf123221a1015be63e1ca2491ca45b8d10",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/24\/2018, 16:57:43",
            "message":"check origin header for websocket connection",
            "author":"Tobias Koppers",
            "comments":"{'com_1': {'author': 'hackel', 'datetime': '11\/09\/2018, 05:45:42', 'body': 'Any chance this security fix could be backported to 2.x?\\r\\nJust noticed this.  https:\/\/nodesecurity.io\/advisories\/725'}, 'com_2': {'author': 'alexander-akait', 'datetime': '11\/09\/2018, 10:14:03', 'body': 'No, please update to `3` version, `2` is deprecated'}, 'com_3': {'author': 'aeegvk', 'datetime': '01\/02\/2019, 08:33:02', 'body': 'Updated to suggested version 3.1.11 and latest version 3.1.14 but still getting a vulnerability report. How come?'}, 'com_4': {'author': 'oles', 'datetime': '01\/02\/2019, 10:54:04', 'body': 'Experiencing the same as @aeegvk.\\r\\n\\r\\nSeems like the error is in https:\/\/www.npmjs.com\/advisories\/725 though.'}, 'com_5': {'author': 'charlesfaustin', 'datetime': '01\/02\/2019, 13:35:57', 'body': '> Updated to suggested version 3.1.11 and latest version 3.1.14 but still getting a vulnerability report. How come?\\r\\n\\r\\nthere appears to be a typo in the npm vulnerability database\\r\\nhttps:\/\/npm.community\/t\/npm-audit-sweems-to-get-semver-wrong\/4352\/4'}}",
            "stats":"{'additions': 9, 'deletions': 2, 'total': 11}",
            "files":"{'lib\/Server.js': {'additions': 9, 'deletions': 2, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/webpack\/webpack-dev-server\/raw\/f18e5adf123221a1015be63e1ca2491ca45b8d10\/lib%2FServer.js', 'patch': '@@ -513,13 +513,15 @@ Server.prototype.setContentHeaders = function (req, res, next) {\\n   next();\\n };\\n \\n-Server.prototype.checkHost = function (headers) {\\n+Server.prototype.checkHost = function (headers, headerToCheck) {\\n   \/\/ allow user to opt-out this security check, at own risk\\n   if (this.disableHostCheck) return true;\\n \\n+  if (!headerToCheck) headerToCheck = \"host\";\\n+\\n   \/\/ get the Host header and extract hostname\\n   \/\/ we don\\'t care about port not matching\\n-  const hostHeader = headers.host;\\n+  const hostHeader = headers[headerToCheck];\\n   if (!hostHeader) return false;\\n \\n   \/\/ use the node url-parser to retrieve the hostname from the host-header.\\n@@ -589,6 +591,11 @@ Server.prototype.listen = function (port, hostname, fn) {\\n         conn.close();\\n         return;\\n       }\\n+      if (!this.checkHost(conn.headers, \"origin\")) {\\n+        this.sockWrite([conn], \\'error\\', \\'Invalid Origin header\\');\\n+        conn.close();\\n+        return;\\n+      }\\n       this.sockets.push(conn);\\n \\n       conn.on(\\'close\\', () => {'}}",
            "message_norm":"check origin header for websocket connection",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Server.js'])",
            "num_files":1.0
        },
        {
            "index":3014,
            "vuln_id":"GHSA-rv6r-3f5q-9rgx",
            "cwe_id":"{'CWE-120'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/twisted\/twisted\/commit\/98387b39e9f0b21462f6abc7a1325dc370fcdeb1', 'https:\/\/github.com\/twisted\/twisted\/commit\/89c395ee794e85a9657b112c4351417850330ef9'}",
            "dataset":"osv",
            "summary":"Twisted SSH client and server deny of service during SSH handshake. ### Impact\n\nThe Twisted SSH client and server implementation naively accepted an infinite amount of data for the  peer's SSH version identifier.\n\nA malicious peer can trivially craft a request that uses all available memory and crash the server, resulting in denial of service. The attack is as simple as `nc -rv localhost 22 < \/dev\/zero`.\n\n### Patches\n\nThe issue was fix in GitHub commit https:\/\/github.com\/twisted\/twisted\/commit\/98387b39e9f0b21462f6abc7a1325dc370fcdeb1\n\nA fix is available in Twisted 22.2.0.\n\n### Workarounds\n\n* Limit access to the SSH server only to trusted source IP addresses.\n* Connect over SSH only to trusted destination IP addresses.\n\n### References\n\nReported at https:\/\/twistedmatrix.com\/trac\/ticket\/10284\nDiscussions at https:\/\/github.com\/twisted\/twisted\/security\/advisories\/GHSA-rv6r-3f5q-9rgx\n\n### For more information\n\nFound by vin01",
            "published_date":"2022-03-03",
            "chain_len":2,
            "project":"https:\/\/github.com\/twisted\/twisted",
            "commit_href":"https:\/\/github.com\/twisted\/twisted\/commit\/89c395ee794e85a9657b112c4351417850330ef9",
            "commit_sha":"89c395ee794e85a9657b112c4351417850330ef9",
            "patch":"MULTI",
            "chain_ord":"['98387b39e9f0b21462f6abc7a1325dc370fcdeb1', '89c395ee794e85a9657b112c4351417850330ef9']",
            "before_first_fix_commit":"{'2b2af4d66e878d66572babcbcbd2d3dc7d6a09f2'}",
            "last_fix_commit":"89c395ee794e85a9657b112c4351417850330ef9",
            "chain_ord_pos":2.0,
            "commit_datetime":"03\/01\/2022, 10:39:34",
            "message":"Update the release date.",
            "author":"Adi Roiban",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'NEWS.rst': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/twisted\/twisted\/raw\/89c395ee794e85a9657b112c4351417850330ef9\/NEWS.rst', 'patch': '@@ -3,8 +3,8 @@ http:\/\/twistedmatrix.com\/trac\/ticket\/<number>\\n \\n .. towncrier release notes start\\n \\n-Twisted 22.2.0.rc1 (2022-02-08)\\n-===============================\\n+Twisted 22.2.0 (2022-03-01)\\n+===========================\\n \\n Bugfixes\\n --------'}}",
            "message_norm":"update the release date.",
            "language":"en",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['NEWS.rst'])",
            "num_files":1.0
        },
        {
            "index":1362,
            "vuln_id":"GHSA-9cx9-x2gp-9qvh",
            "cwe_id":"{'CWE-74', 'CWE-93'}",
            "score":4.2,
            "chain":"{'https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f'}",
            "dataset":"osv",
            "summary":"CRLF vulnerability in Fiber ### Impact\nThe filename that is given in [c.Attachment()](https:\/\/docs.gofiber.io\/ctx#attachment) is not escaped, and therefore vulnerable for a CRLF injection attack. I.e. an attacker could upload a custom filename and then give the link to the victim. With this filename, the attacker can change the name of the downloaded file, redirect to another site, change the authorization header, etc.\n\n### Steps to reproduce\n```go\npackage main\n\nimport \"github.com\/gofiber\/fiber\"\n\nconst badFileName = \"another secret document.pdf\\\"\\r\\nLocation: google.com\\r\\nAuthorization: \\\"example_of_session_fixation\"\n\nfunc splitTheResponse(c *fiber.Ctx) {\n\tc.Attachment(badFileName)\n}\n\nfunc main() {\n\tapp := fiber.New()\n\tapp.Get(\"\/attack\", splitTheResponse)\n\tapp.Listen(\"127.0.0.1:8080\")\n}\n```\n```\nHTTP\/1.1 200 OK\nDate: Fri, 10 Jul 2020 19:47:04 GMT\nContent-Type: application\/octet-stream\nContent-Length: 0\nContent-Disposition: attachment; filename=\"another secret document.pdf\"\nLocation: google.com\nAuthorization: \"example_of_session_fixation\"\n```\n\n### Patches\nThis issue has been patched in `v1.12.6` with commit [579](https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f) escaping the filename by default.\n\n### Workarounds\nYou could of course serialize the input yourself before passing it to `ctx.Attachment()`, this is actually a good practice by default. But in case you forget, we got you covered \ud83d\udc4d \n\n### References\nA CRLF injection attack is one of several types of injection attacks. It can be used to escalate to more malicious attacks such as Cross-site Scripting (XSS), page injection, web cache poisoning, cache-based defacement, and more. A CRLF injection vulnerability exists if an attacker can inject the CRLF characters into a web application, for example using a user input form or an HTTP request, [see acunetix](https:\/\/www.acunetix.com\/websitesecurity\/crlf-injection\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [gofiber\/fiber](https:\/\/github.com\/gofiber\/fiber)\n* Join us on [Discord](https:\/\/gofiber.io\/discord)",
            "published_date":"2021-06-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/gofiber\/fiber",
            "commit_href":"https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "commit_sha":"f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "patch":"SINGLE",
            "chain_ord":"['f698b5d5066cfe594102ae252cd58a1fe57cf56f']",
            "before_first_fix_commit":"{'fc5d2d7e6690ba74ad01ba0cd80e853ad451d153'}",
            "last_fix_commit":"f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2020, 20:25:10",
            "message":"\ud83d\udc1b Escape fname",
            "author":"Fenny",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'ctx.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gofiber\/fiber\/raw\/f698b5d5066cfe594102ae252cd58a1fe57cf56f\/ctx.go', 'patch': '@@ -196,7 +196,7 @@ func (ctx *Ctx) Attachment(filename ...string) {\\n \\tif len(filename) > 0 {\\n \\t\\tfname := filepath.Base(filename[0])\\n \\t\\tctx.Type(filepath.Ext(fname))\\n-\\t\\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+fname+`\"`)\\n+\\t\\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+url.QueryEscape(fname)+`\"`)\\n \\t\\treturn\\n \\t}\\n \\tctx.Set(HeaderContentDisposition, \"attachment\")'}}",
            "message_norm":"\ud83d\udc1b escape fname",
            "language":"es",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ctx.go'])",
            "num_files":1.0
        },
        {
            "index":2471,
            "vuln_id":"GHSA-mvqp-q37c-wf9j",
            "cwe_id":"{'CWE-74'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/ratpack\/ratpack\/commit\/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae', 'https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects io.ratpack:ratpack-core ## CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')\n\nVersions of Ratpack 0.9.1 through and including 1.7.4 are vulnerable to [HTTP Response Splitting](https:\/\/www.owasp.org\/index.php\/HTTP_Response_Splitting), \nif untrusted and unsanitized data is used to populate the headers of an HTTP response.\nAn attacker can utilize this vulnerability to have the server issue any HTTP response they specify.\n\nIf your application uses arbitrary user input as the value of a response header it is vulnerable.\nIf your application does not use arbitrary values as response header values, it is not vulnerable.\n\nPreviously, Ratpack did not validate response header values.\nNow, adding a header value that contains the header value termination characters (CRLF) produces a runtime exception.\nSince there is no mechanism for escaping or encoding the termination characters in a String, a runtime exception is necessary.\n\nAs potentially dangerous values now cause runtime exceptions, it is a good idea to continue to validate and sanitize any user-supplied values being used as response headers.\n\nWe would like to thank [Jonathan Leitschuh](https:\/\/github.com\/JLLeitschuh) for reporting this vulnerability.\n\n### Vulnerable Example\n\nThe following example server uses a query parameter value as a response header, without validating or sanitizing it.\n```java\nRatpackServer startedServer =  RatpackServer.start(server -> {\n    server.handlers(chain -> chain.all(ctx -> {\n        \/\/ User supplied query parameter\n        String header = ctx.getRequest().getQueryParams().get(\"header\");\n        \/\/ User supplied data used to populate a header value.\n        ctx.header(\"the-header\", header)\n            .render(\"OK!\");\n    }));\n});\n```\n\nSending a request to the server with the following value for the `header` query param would allow the execution of arbitrary Javascript.\n\n```\nContent-Type: text\/html\nX-XSS-Protection: 0\n\n<script>alert(document.domain)<\/script>\n```\n\n### Impact\n\n- Cross-User Defacement\n- Cache Poisoning\n- Cross-Site Scripting\n- Page Hijacking\n\n### Patches\n\nThis vulnerability has been patched in Ratpack version 1.7.5.\n\n### Root Cause\n\nThe root cause was due to using the netty `DefaultHttpHeaders` object with verification disabled.\n\nhttps:\/\/github.com\/ratpack\/ratpack\/blob\/af1e8c8590f164d7dd84d4212886fad4ead99080\/ratpack-core\/src\/main\/java\/ratpack\/server\/internal\/NettyHandlerAdapter.java#L159\n\nThis vulnerability is now more clearly documented in the Netty documentation: https:\/\/github.com\/netty\/netty\/pull\/9646\n\n### Workarounds\n\nThe workaround for this vulnerability is to either not use arbitrary input as response header values or validate such values before being used to ensure they don't contain a carriage return and\/or line feed characters.\n\n### References\n\n - [CWE-113: Improper Neutralization of CRLF Sequences in HTTP Headers ('HTTP Response Splitting')](https:\/\/cwe.mitre.org\/data\/definitions\/113.html)\n - Fix commit: https:\/\/github.com\/ratpack\/ratpack\/commit\/efb910d38a96494256f36675ef0e5061097dd77d\n \n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in [ratpack\/ratpack](https:\/\/github.com\/ratpack\/ratpack\/issues)\n* Ask in our [Slack channel](https:\/\/slack-signup.ratpack.io\/)",
            "published_date":"2019-10-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/ratpack\/ratpack",
            "commit_href":"https:\/\/github.com\/ratpack\/ratpack\/commit\/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae",
            "commit_sha":"c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae",
            "patch":"MULTI",
            "chain_ord":"['efb910d38a96494256f36675ef0e5061097dd77d', 'c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae']",
            "before_first_fix_commit":"{'efb910d38a96494256f36675ef0e5061097dd77d'}",
            "last_fix_commit":"c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae",
            "chain_ord_pos":2.0,
            "commit_datetime":"10\/08\/2019, 23:43:23",
            "message":"Add test for response header validation",
            "author":"Luke Daley",
            "comments":null,
            "stats":"{'additions': 42, 'deletions': 0, 'total': 42}",
            "files":"{'ratpack-core\/src\/test\/groovy\/ratpack\/http\/ResponseHeaderValidationSpec.groovy': {'additions': 42, 'deletions': 0, 'changes': 42, 'status': 'added', 'raw_url': 'https:\/\/github.com\/ratpack\/ratpack\/raw\/c560a8d10cb8bdd7a526c1ca2e67c8f224ca23ae\/ratpack-core%2Fsrc%2Ftest%2Fgroovy%2Fratpack%2Fhttp%2FResponseHeaderValidationSpec.groovy', 'patch': '@@ -0,0 +1,42 @@\\n+\/*\\n+ * Copyright 2019 the original author or authors.\\n+ *\\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\\n+ * you may not use this file except in compliance with the License.\\n+ * You may obtain a copy of the License at\\n+ *\\n+ *    http:\/\/www.apache.org\/licenses\/LICENSE-2.0\\n+ *\\n+ * Unless required by applicable law or agreed to in writing, software\\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n+ * See the License for the specific language governing permissions and\\n+ * limitations under the License.\\n+ *\/\\n+\\n+package ratpack.http\\n+\\n+import ratpack.test.internal.RatpackGroovyDslSpec\\n+\\n+class ResponseHeaderValidationSpec extends RatpackGroovyDslSpec {\\n+\\n+  def \"invalid header values yield exception\"() {\\n+    when:\\n+    handlers {\\n+      all {\\n+        try {\\n+          header(\"Test\", \"value\\\\r\\\\nAnotherHeader: another value\")\\n+          render \"ok\"\\n+        } catch (e) {\\n+          render e.toString()\\n+        }\\n+      }\\n+    }\\n+\\n+    then:\\n+    def response = get()\\n+    response.headers.names == [\\'content-type\\', \\'content-length\\'].toSet()\\n+    response.body.text == \"java.lang.IllegalArgumentException: only \\' \\' and \\'\\\\\\\\t\\' are allowed after \\'\\\\\\\\n\\': value\\\\r\\\\nAnotherHeader: another value\"\\n+  }\\n+\\n+}'}}",
            "message_norm":"add test for response header validation",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('header validation', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ratpack-core\/src\/test\/groovy\/ratpack\/http\/ResponseHeaderValidationSpec.groovy'])",
            "num_files":1.0
        },
        {
            "index":863,
            "vuln_id":"GHSA-6jv7-28mv-qp9c",
            "cwe_id":"{'CWE-862'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/commit\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc'}",
            "dataset":"osv",
            "summary":"Missing permission check in Jenkins autonomiq Plugin A missing permission check in Jenkins autonomiq Plugin 1.15 and earlier allows attackers with Overall\/Read permission to connect to an attacker-specified URL using attacker-specified credentials.",
            "published_date":"2022-02-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/jenkinsci\/autonomiq-plugin",
            "commit_href":"https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/commit\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
            "commit_sha":"e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
            "patch":"SINGLE",
            "chain_ord":"['e06b1ff67664a90819c9561bbc12f4c6e593d1dc']",
            "before_first_fix_commit":"{'abfbe8a84d54ec7708c8ef073d56b128baffb1f5'}",
            "last_fix_commit":"e06b1ff67664a90819c9561bbc12f4c6e593d1dc",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/09\/2022, 07:16:27",
            "message":"added permission and csrf protection",
            "author":"jameeluddin",
            "comments":null,
            "stats":"{'additions': 17, 'deletions': 0, 'total': 17}",
            "files":"{'src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java': {'additions': 17, 'deletions': 0, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/autonomiq-plugin\/raw\/e06b1ff67664a90819c9561bbc12f4c6e593d1dc\/src%2Fmain%2Fjava%2Fio%2Fjenkins%2Fplugins%2Fautonomiq%2FAutonomiqBuilder.java', 'patch': '@@ -653,6 +653,7 @@ public String getDisplayName() {\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n                                                @QueryParameter String login,\\n                                                @QueryParameter Secret password,\\n@@ -661,6 +662,8 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n                                                @QueryParameter String proxyUser,\\n                                                @QueryParameter Secret proxyPassword,\\n                                                @QueryParameter Boolean httpProxy) {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             \/\/ make sure other fields have been filled in\\n             if (aiqUrl.length() > 0 && login.length() > 0 && Secret.toString(password).length() > 0) {\\n@@ -681,7 +684,10 @@ public ListBoxModel doFillProjectItems(@QueryParameter String aiqUrl,\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillPlatformTestCasesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\\n \\n@@ -690,7 +696,10 @@ public ListBoxModel doFillPlatformTestCasesItems() {\\n             return new ListBoxModel(options);\\n         }\\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillPlatformTestSuitesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Linux\"};  \/\/, \"Windows\"};\\n \\n@@ -701,7 +710,10 @@ public ListBoxModel doFillPlatformTestSuitesItems() {\\n \\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillBrowserTestCasesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"Chrome\", \"Firefox\"};\\n \\n@@ -710,7 +722,9 @@ public ListBoxModel doFillBrowserTestCasesItems() {\\n             return new ListBoxModel(options);\\n         }\\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillBrowserTestSuitesItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n \\n             String[] values = {\"Chrome\", \"Firefox\"};\\n \\n@@ -720,7 +734,10 @@ public ListBoxModel doFillBrowserTestSuitesItems() {\\n         }\\n \\n         @SuppressWarnings(\"unused\")\\n+        @POST\\n         public ListBoxModel doFillExecutionModeItems() {\\n+        \\tJenkins.get().checkPermission(Jenkins.ADMINISTER);\\n+\\n \\n             String[] values = {\"serial\", \"parallel\"};'}}",
            "message_norm":"added permission and csrf protection",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('permission', 'SECWORD', ''), ('csrf', 'SECWORD', ''), ('protection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/io\/jenkins\/plugins\/autonomiq\/AutonomiqBuilder.java'])",
            "num_files":1.0
        },
        {
            "index":1865,
            "vuln_id":"GHSA-gf2j-f278-xh4v",
            "cwe_id":"{'CWE-369'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite ### Impact \nAn attacker can craft a TFLite model that would trigger a division by zero in [`BiasAndClamp` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/lite\/kernels\/internal\/common.h#L75):\n\n```cc\ninline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,\n                         const float* bias_data, int array_size,\n                         float* array_data) {\n  \/\/ ...\n  TFLITE_DCHECK_EQ((array_size % bias_size), 0);\n  \/\/ ...\n} \n```\n  \nThere is no check that the `bias_size` is non zero.\n  \n### Patches\nWe have patched the issue in GitHub commit [8c6f391a2282684a25cbfec7687bd5d35261a209](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8c6f391a2282684a25cbfec7687bd5d35261a209",
            "commit_sha":"8c6f391a2282684a25cbfec7687bd5d35261a209",
            "patch":"SINGLE",
            "chain_ord":"['8c6f391a2282684a25cbfec7687bd5d35261a209']",
            "before_first_fix_commit":"{'c8dafc9f9ae6658d922e443e59e0f553167c990b'}",
            "last_fix_commit":"8c6f391a2282684a25cbfec7687bd5d35261a209",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/14\/2021, 21:40:56",
            "message":"[lite] Add check for bias_size is zero to avoid division by zero. This shouldn't happen for properly converted models. Just safety check\n\nPiperOrigin-RevId: 416383645\nChange-Id: If8e508bf696ae8ecfb927e69c139a8ccf7fe60cb",
            "author":"Karim Nosir",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/internal\/common.h': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8c6f391a2282684a25cbfec7687bd5d35261a209\/tensorflow%2Flite%2Fkernels%2Finternal%2Fcommon.h', 'patch': '@@ -75,6 +75,7 @@ float ActivationFunction(float x) {\\n inline void BiasAndClamp(float clamp_min, float clamp_max, int bias_size,\\n                          const float* bias_data, int array_size,\\n                          float* array_data) {\\n+  if (bias_size == 0) return;\\n   \/\/ Note: see b\/132215220: in May 2019 we thought it would be OK to replace\\n   \/\/ this with the Eigen one-liner:\\n   \/\/   return (array.colwise() + bias).cwiseMin(clamp_max).cwiseMin(clamp_max).'}}",
            "message_norm":"[lite] add check for bias_size is zero to avoid division by zero. this shouldn't happen for properly converted models. just safety check\n\npiperorigin-revid: 416383645\nchange-id: if8e508bf696ae8ecfb927e69c139a8ccf7fe60cb",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('safety check', 'SECWORD', ''), ('416383645', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/common.h'])",
            "num_files":1.0
        },
        {
            "index":2229,
            "vuln_id":"GHSA-jc8m-cxhj-668x",
            "cwe_id":"{'CWE-307'}",
            "score":8.3,
            "chain":"{'https:\/\/github.com\/Sorcery\/sorcery\/commit\/0f116d223826895a73b12492f17486e5d54ab7a7'}",
            "dataset":"osv",
            "summary":"Improper Restriction of Excessive Authentication Attempts in Sorcery ### Impact\nBrute force vulnerability when using password authentication via Sorcery. The brute force protection submodule will prevent a brute force attack for the defined lockout period, but once expired protection will not be re-enabled until a user or malicious actor logs in successfully. This does not affect users that do not use the built-in brute force protection submodule, nor users that use permanent account lockout.\n\n### Patches\nPatched as of version `0.15.0`.\n\n### Workarounds\nCurrently no workarounds, other than monkey patching the authenticate method provided by Sorcery or upgrading to version `0.15.0`.",
            "published_date":"2020-05-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/Sorcery\/sorcery",
            "commit_href":"https:\/\/github.com\/Sorcery\/sorcery\/commit\/0f116d223826895a73b12492f17486e5d54ab7a7",
            "commit_sha":"0f116d223826895a73b12492f17486e5d54ab7a7",
            "patch":"SINGLE",
            "chain_ord":"['0f116d223826895a73b12492f17486e5d54ab7a7']",
            "before_first_fix_commit":"{'6b72ca36cf389804963e2553ccbb3da000518e51'}",
            "last_fix_commit":"0f116d223826895a73b12492f17486e5d54ab7a7",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/02\/2020, 20:56:58",
            "message":"Fix brute force vuln due to callbacks not being ran (#235)\n\nThe authenticate method previously would return before callbacks executed if an\r\ninvalid password was provided, which causes the brute force protection to only\r\nwork for the first lockout period, and only resets after a successful login.\r\n\r\nFixes #231",
            "author":"Josh Buker",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'lib\/sorcery\/model.rb': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Sorcery\/sorcery\/raw\/0f116d223826895a73b12492f17486e5d54ab7a7\/lib%2Fsorcery%2Fmodel.rb', 'patch': '@@ -102,10 +102,6 @@ def authenticate(*credentials, &block)\\n \\n         set_encryption_attributes\\n \\n-        unless user.valid_password?(credentials[1])\\n-          return authentication_response(user: user, failure: :invalid_password, &block)\\n-        end\\n-\\n         if user.respond_to?(:active_for_authentication?) && !user.active_for_authentication?\\n           return authentication_response(user: user, failure: :inactive, &block)\\n         end\\n@@ -118,6 +114,10 @@ def authenticate(*credentials, &block)\\n           end\\n         end\\n \\n+        unless user.valid_password?(credentials[1])\\n+          return authentication_response(user: user, failure: :invalid_password, &block)\\n+        end\\n+\\n         authentication_response(user: user, return_value: user, &block)\\n       end'}}",
            "message_norm":"fix brute force vuln due to callbacks not being ran (#235)\n\nthe authenticate method previously would return before callbacks executed if an\r\ninvalid password was provided, which causes the brute force protection to only\r\nwork for the first lockout period, and only resets after a successful login.\r\n\r\nfixes #231",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#235', 'ISSUE', ''), ('password', 'SECWORD', ''), ('protection', 'SECWORD', ''), ('login', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#231', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/sorcery\/model.rb'])",
            "num_files":1.0
        },
        {
            "index":2341,
            "vuln_id":"GHSA-m3xv-x3ph-mq22",
            "cwe_id":"{'CWE-94'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/0c5c0c0e0cb61000d12ec55ebf174745a5bf6469'}",
            "dataset":"osv",
            "summary":"Server-side Template Injection in nystudio107\/craft-seomatic A Server-side Template Injection (SSTI) vulnerability exists in Nystudio107 Seomatic prior to 3.4.12 in src\/helpers\/UrlHelper.php via the host header.",
            "published_date":"2022-03-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/nystudio107\/craft-seomatic",
            "commit_href":"https:\/\/github.com\/nystudio107\/craft-seomatic\/commit\/0c5c0c0e0cb61000d12ec55ebf174745a5bf6469",
            "commit_sha":"0c5c0c0e0cb61000d12ec55ebf174745a5bf6469",
            "patch":"SINGLE",
            "chain_ord":"['0c5c0c0e0cb61000d12ec55ebf174745a5bf6469']",
            "before_first_fix_commit":"{'1a47702db9d2df3fa3e12b1c4be09b55d2b6166f'}",
            "last_fix_commit":"0c5c0c0e0cb61000d12ec55ebf174745a5bf6469",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/25\/2021, 04:44:33",
            "message":"Sanitize all URLs\n\nSigned-off-by: Andrew Welch <andrew@nystudio107.com>",
            "author":"Andrew Welch",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/helpers\/UrlHelper.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nystudio107\/craft-seomatic\/raw\/0c5c0c0e0cb61000d12ec55ebf174745a5bf6469\/src%2Fhelpers%2FUrlHelper.php', 'patch': \"@@ -56,7 +56,7 @@ public static function siteUrl(string $path = '', $params = null, string $scheme\\n             return $url;\\n         }\\n \\n-        return parent::siteUrl($path, $params, $scheme, $siteId);\\n+        return DynamicMeta::sanitizeUrl(parent::siteUrl($path, $params, $scheme, $siteId));\\n     }\\n \\n     \/**\\n@@ -130,7 +130,7 @@ public static function absoluteUrlWithProtocol($url): string\\n             $url = rtrim($url, '\/');\\n         }\\n \\n-        return $url;\\n+        return DynamicMeta::sanitizeUrl($url);\\n     }\\n \\n     \/**\"}}",
            "message_norm":"sanitize all urls\n\nsigned-off-by: andrew welch <andrew@nystudio107.com>",
            "language":"en",
            "entities":"[('sanitize', 'SECWORD', ''), ('andrew@nystudio107.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/helpers\/UrlHelper.php'])",
            "num_files":1.0
        },
        {
            "index":1649,
            "vuln_id":"GHSA-f2rp-4rv7-fc95",
            "cwe_id":"{'CWE-200'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/theforeman\/foreman_fog_proxmox\/pull\/184\/commits\/b7e910bf61563f5d447c71b1b41e2a373a794d7b'}",
            "dataset":"osv",
            "summary":"Exposure of Sensitive Information to an Unauthorized Actor in foreman_fog_proxmox A flaw was found in the Foreman project. The Proxmox compute resource exposes the password through the API to an authenticated local attacker with view_hosts permission. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability. Versions before foreman_fog_proxmox 0.13.1 are affected",
            "published_date":"2021-06-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/theforeman\/foreman_fog_proxmox",
            "commit_href":"https:\/\/github.com\/theforeman\/foreman_fog_proxmox\/pull\/184\/commits\/b7e910bf61563f5d447c71b1b41e2a373a794d7b",
            "commit_sha":"b7e910bf61563f5d447c71b1b41e2a373a794d7b",
            "patch":"SINGLE",
            "chain_ord":"['b7e910bf61563f5d447c71b1b41e2a373a794d7b']",
            "before_first_fix_commit":"{'f131382d265944cda85bb5765a6dc5b0b2715f61'}",
            "last_fix_commit":"b7e910bf61563f5d447c71b1b41e2a373a794d7b",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/23\/2021, 21:00:19",
            "message":"Fix clean API result",
            "author":"Markus Bucher",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'app\/views\/api\/v2\/compute_resources\/proxmox.json.rabl': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/theforeman\/foreman_fog_proxmox\/raw\/b7e910bf61563f5d447c71b1b41e2a373a794d7b\/app%2Fviews%2Fapi%2Fv2%2Fcompute_resources%2Fproxmox.json.rabl', 'patch': '@@ -1,3 +1,3 @@\\n # frozen_string_literal: true\\n \\n-attributes :url, :user, :password, :ssl_verify_peer, :ssl_certs, :renew\\n+attributes :url, :user, :ssl_verify_peer, :ssl_certs, :renew'}}",
            "message_norm":"fix clean api result",
            "language":"ro",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/views\/api\/v2\/compute_resources\/proxmox.json.rabl'])",
            "num_files":1.0
        },
        {
            "index":1755,
            "vuln_id":"GHSA-fphq-gw9m-ghrv",
            "cwe_id":"{'CWE-617'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ea3b43e98c32c97b35d52b4c66f9107452ca8fb2'}",
            "dataset":"osv",
            "summary":"CHECK-fail in `CTCGreedyDecoder` ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.CTCGreedyDecoder`:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[18, 2, 0], dtype=tf.float32)\nsequence_length = tf.constant([-100, 17], shape=[2], dtype=tf.int32)\nmerge_repeated = False\n\ntf.raw_ops.CTCGreedyDecoder(inputs=inputs, sequence_length=sequence_length, merge_repeated=merge_repeated)\n```\n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/1615440b17b364b875eb06f43d087381f1460a65\/tensorflow\/core\/kernels\/ctc_decoder_ops.cc#L37-L50) has a `CHECK_LT` inserted to validate some invariants. When this condition is false, the program aborts, instead of returning a valid error to the user. This abnormal termination can be weaponized in denial of service attacks.\n\n### Patches \nWe have patched the issue in GitHub commit [ea3b43e98c32c97b35d52b4c66f9107452ca8fb2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ea3b43e98c32c97b35d52b4c66f9107452ca8fb2).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n                      \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.        \n                      \n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ea3b43e98c32c97b35d52b4c66f9107452ca8fb2",
            "commit_sha":"ea3b43e98c32c97b35d52b4c66f9107452ca8fb2",
            "patch":"SINGLE",
            "chain_ord":"['ea3b43e98c32c97b35d52b4c66f9107452ca8fb2']",
            "before_first_fix_commit":"{'1615440b17b364b875eb06f43d087381f1460a65'}",
            "last_fix_commit":"ea3b43e98c32c97b35d52b4c66f9107452ca8fb2",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/22\/2021, 22:11:05",
            "message":"Fix `tf.raw_ops.CTCGreedyDecoder` CHECK failure.\n\nPiperOrigin-RevId: 369960465\nChange-Id: If0b8b3264d5a47a24ac0970ed7b81ce6b4921fae",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/ctc_decoder_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ea3b43e98c32c97b35d52b4c66f9107452ca8fb2\/tensorflow%2Fcore%2Fkernels%2Fctc_decoder_ops.cc', 'patch': '@@ -232,6 +232,8 @@ class CTCGreedyDecoderOp : public OpKernel {\\n         int prev_indices = -1;\\n         for (int t = 0; t < seq_len_t(b); ++t) {\\n           int max_class_indices;\\n+          OP_REQUIRES(ctx, input_list_t[t].dimension(1) > 0,\\n+                      errors::InvalidArgument(\"Invalid input dimensions.\"));\\n           log_prob_t(b, 0) +=\\n               -RowMax<T>(input_list_t[t], b, &max_class_indices);\\n           if (max_class_indices != blank_index &&'}}",
            "message_norm":"fix `tf.raw_ops.ctcgreedydecoder` check failure.\n\npiperorigin-revid: 369960465\nchange-id: if0b8b3264d5a47a24ac0970ed7b81ce6b4921fae",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('tf.raw_ops.ctcgreedydecoder', 'SECWORD', ''), ('369960465', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ctc_decoder_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":296,
            "vuln_id":"GHSA-3pxp-6963-46r9",
            "cwe_id":"{'CWE-77'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/commit\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd'}",
            "dataset":"osv",
            "summary":"Command Injection in pdfinfojs Versions of `pdfinfojs` before 0.4.1 are vulnerable to command injection. This is exploitable if an attacker can control the filename parameter that is passed into the `pdfinfojs` constructor.\n\n\n## Recommendation\n\nUpdate to version 0.4.1 or later.",
            "published_date":"2018-06-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/fagbokforlaget\/pdfinfojs",
            "commit_href":"https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/commit\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd",
            "commit_sha":"5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd",
            "patch":"SINGLE",
            "chain_ord":"['5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd']",
            "before_first_fix_commit":"{'379c0e14db8298b465269653b9ac308d83eb6d4e'}",
            "last_fix_commit":"5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/13\/2018, 11:36:11",
            "message":"fix: command injection vulnerability",
            "author":"Deepak Thukral",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'lib\/pdfinfo.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/raw\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd\/lib%2Fpdfinfo.js', 'patch': '@@ -1,9 +1,9 @@\\n-const { exec, execSync } = require(\\'child_process\\');\\n+const { execFile, execFileSync } = require(\\'child_process\\');\\n const utils = require(\\'.\/utils\\');\\n \\n function pdfinfo (filename, options) {\\n   this.options = options || {};\\n-  this.options.additional = [\\'\"\\' + filename + \\'\"\\'];\\n+  this.options.additional = [filename];\\n \\n   pdfinfo.prototype.add_options = function(optionArray) {\\n     if (typeof optionArray.length !== undefined) {\\n@@ -23,7 +23,7 @@ function pdfinfo (filename, options) {\\n   pdfinfo.prototype.getInfoSync = function() {\\n     const self = this;\\n     try {\\n-    \\tlet data = execSync(\\'pdfinfo \\' + self.options.additional.join(\\' \\')).toString(\\'utf8\\');\\n+    \\tlet data = execFileSync(\\'pdfinfo\\', self.options.additional).toString(\\'utf8\\');\\n         return utils.parse(data);\\n     } catch(err) {\\n         throw new Error(\"pdfinfo error: \"+ err.msg);\\n@@ -33,7 +33,7 @@ function pdfinfo (filename, options) {\\n \\n   pdfinfo.prototype.getInfo = function(cb) {\\n     let self = this;\\n-    let child = exec(\\'pdfinfo \\' + self.options.additional.join(\\' \\'), function(error, stdout, stderr) {\\n+    let child = execFile(\\'pdfinfo\\', self.options.additional, (error, stdout, stderr) => {\\n       if (!error) {\\n         let data = utils.parse(stdout);\\n         if (cb && typeof cb === \"function\") {'}}",
            "message_norm":"fix: command injection vulnerability",
            "language":"en",
            "entities":"[('command injection', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/pdfinfo.js'])",
            "num_files":1.0
        },
        {
            "index":1964,
            "vuln_id":"GHSA-h2fw-93qx-vrcq",
            "cwe_id":"{'CWE-89'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1'}",
            "dataset":"osv",
            "summary":"SQL Injection in Moodle An SQL injection risk was identified in Badges code relating to configuring criteria. Access to the relevant capability was limited to teachers and managers by default.",
            "published_date":"2022-03-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/moodle\/moodle",
            "commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1",
            "commit_sha":"c2794752ea3cdda2d64a0651da08b2cdf730d9f1",
            "patch":"SINGLE",
            "chain_ord":"['c2794752ea3cdda2d64a0651da08b2cdf730d9f1']",
            "before_first_fix_commit":"{'addd4f894d8173ec8ff0ae2212d51a1977e7bcad'}",
            "last_fix_commit":"c2794752ea3cdda2d64a0651da08b2cdf730d9f1",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/03\/2022, 18:02:15",
            "message":"MDL-74074 badges: Ensure profile criteria exists before completion check",
            "author":"Michael Hawkins",
            "comments":null,
            "stats":"{'additions': 23, 'deletions': 6, 'total': 29}",
            "files":"{'badges\/criteria\/award_criteria_profile.php': {'additions': 23, 'deletions': 6, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1\/badges%2Fcriteria%2Faward_criteria_profile.php', 'patch': '@@ -39,6 +39,26 @@ class award_criteria_profile extends award_criteria {\\n     public $required_param = \\'field\\';\\n     public $optional_params = array();\\n \\n+    \/* @var array The default profile fields allowed to be used as award criteria.\\n+     *\\n+     * Note: This is used instead of user_get_default_fields(), because it is not possible to\\n+     * determine which fields the user can modify.\\n+     *\/\\n+    protected $allowed_default_fields = [\\n+        \\'firstname\\',\\n+        \\'lastname\\',\\n+        \\'email\\',\\n+        \\'address\\',\\n+        \\'phone1\\',\\n+        \\'phone2\\',\\n+        \\'department\\',\\n+        \\'institution\\',\\n+        \\'description\\',\\n+        \\'picture\\',\\n+        \\'city\\',\\n+        \\'country\\',\\n+    ];\\n+\\n     \/**\\n      * Add appropriate new criteria options to the form\\n      *\\n@@ -50,10 +70,7 @@ public function get_options(&$mform) {\\n         $none = true;\\n         $existing = array();\\n         $missing = array();\\n-\\n-        \/\/ Note: cannot use user_get_default_fields() here because it is not possible to decide which fields user can modify.\\n-        $dfields = array(\\'firstname\\', \\'lastname\\', \\'email\\', \\'address\\', \\'phone1\\', \\'phone2\\',\\n-                         \\'department\\', \\'institution\\', \\'description\\', \\'picture\\', \\'city\\', \\'country\\');\\n+        $dfields = $this->allowed_default_fields;\\n \\n         \/\/ Get custom fields.\\n         $cfields = array_filter(profile_get_custom_fields(), function($field) {\\n@@ -230,8 +247,8 @@ public function get_completed_criteria_sql() {\\n                 $join .= \" LEFT JOIN {user_info_data} uid{$idx} ON uid{$idx}.userid = u.id AND uid{$idx}.fieldid = :fieldid{$idx} \";\\n                 $params[\"fieldid{$idx}\"] = $param[\\'field\\'];\\n                 $whereparts[] = \"uid{$idx}.id IS NOT NULL\";\\n-            } else {\\n-                \/\/ This is a field from {user} table.\\n+            } else if (in_array($param[\\'field\\'], $this->allowed_default_fields)) {\\n+                \/\/ This is a valid field from {user} table.\\n                 if ($param[\\'field\\'] == \\'picture\\') {\\n                     \/\/ The picture field is numeric and requires special handling.\\n                     $whereparts[] = \"u.{$param[\\'field\\']} != 0\";'}}",
            "message_norm":"mdl-74074 badges: ensure profile criteria exists before completion check",
            "language":"en",
            "entities":"[('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['badges\/criteria\/award_criteria_profile.php'])",
            "num_files":1.0
        },
        {
            "index":2981,
            "vuln_id":"GHSA-rphc-h572-2x9f",
            "cwe_id":"{'CWE-434', 'CWE-79'}",
            "score":9.0,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in showdoc\/showdoc ShowDoc is a tool greatly applicable for an IT team to share documents online. showdoc\/showdoc allows .properties files to upload which lead to stored XSS in versions prior to 2.10.4. This allows attackers to execute malicious scripts in the user's browser. This issue was patched in version 2.10.4. There is currently no known workaround.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
            "commit_sha":"92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
            "patch":"SINGLE",
            "chain_ord":"['92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f']",
            "before_first_fix_commit":"{'cd258a0de6fad53a5f41beaf2645f3f6f092f216'}",
            "last_fix_commit":"92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 14:36:28",
            "message":"file upload bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -324,13 +324,13 @@ public function isDangerFilename($filename){\\n \\tpublic function isAllowedFilename($filename){\\n \\t\\t$allow_array = array(\\n \\t\\t\\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\\n-\\t\\t\\t'.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',\\n+\\t\\t\\t'.mp3','.wav','.mp4',\\n \\t\\t\\t'.mov','.webmv','.flac','.mkv',\\n-\\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\\n+\\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso',\\n \\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n-\\t\\t\\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps',\\n+\\t\\t\\t'.doc','.docx','.wps',\\n \\t\\t\\t'.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',\\n-\\t\\t\\t'.cer','.ppt','.pub','.properties','.json','.css',\\n+\\t\\t\\t'.cer','.ppt','.pub','.json','.css',\\n \\t\\t\\t) ;\\n \\n \\t\\t$ext = strtolower(substr($filename,strripos($filename,'.')) ); \/\/\u83b7\u53d6\u6587\u4ef6\u6269\u5c55\u540d\uff08\u8f6c\u4e3a\u5c0f\u5199\u540e\uff09\"}}",
            "message_norm":"file upload bug",
            "language":"ro",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":452,
            "vuln_id":"GHSA-4p4p-www8-8fv9",
            "cwe_id":"{'CWE-824'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8'}",
            "dataset":"osv",
            "summary":"Reference binding to null in `ParameterizedTruncatedNormal` ### Impact\nAn attacker can trigger undefined behavior by binding to null pointer in `tf.raw_ops.ParameterizedTruncatedNormal`:\n\n```python\nimport tensorflow as tf\n    \nshape = tf.constant([], shape=[0], dtype=tf.int32)\nmeans = tf.constant((1), dtype=tf.float32)\nstdevs = tf.constant((1), dtype=tf.float32)\nminvals = tf.constant((1), dtype=tf.float32)\nmaxvals = tf.constant((1), dtype=tf.float32)\n  \ntf.raw_ops.ParameterizedTruncatedNormal(\n  shape=shape, means=means, stdevs=stdevs, minvals=minvals, maxvals=maxvals)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/3f6fe4dfef6f57e768260b48166c27d148f3015f\/tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc#L630) does not validate input arguments before accessing the first element of `shape`:\n\n```cc\nint32 num_batches = shape_tensor.flat<int32>()(0);\n``` \n\nIf `shape` argument is empty, then `shape_tensor.flat<T>()` is an empty array.\n\n### Patches\nWe have patched the issue in GitHub commit [5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8",
            "commit_sha":"5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8",
            "patch":"SINGLE",
            "chain_ord":"['5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8']",
            "before_first_fix_commit":"{'3f6fe4dfef6f57e768260b48166c27d148f3015f'}",
            "last_fix_commit":"5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 02:14:24",
            "message":"Fix breakage in parameterized_truncated_normal_op.cc\n\nPiperOrigin-RevId: 372041718\nChange-Id: Iff79e77a2bb27032423eefcb84211627b27dfe81",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5e52ef5a461570cfb68f3bdbbebfe972cb4e0fd8\/tensorflow%2Fcore%2Fkernels%2Fparameterized_truncated_normal_op.cc', 'patch': '@@ -627,6 +627,9 @@ class ParameterizedTruncatedNormalOp : public OpKernel {\\n         ctx, TensorShapeUtils::IsVector(shape_tensor.shape()),\\n         errors::InvalidArgument(\"Input shape should be a vector, got shape: \",\\n                                 shape_tensor.shape().DebugString()));\\n+    OP_REQUIRES(ctx, shape_tensor.NumElements() > 0,\\n+                errors::InvalidArgument(\"Shape tensor must not be empty, got \",\\n+                                        shape_tensor.DebugString()));\\n     int32 num_batches = shape_tensor.flat<int32>()(0);\\n \\n     int32 samples_per_batch = 1;'}}",
            "message_norm":"fix breakage in parameterized_truncated_normal_op.cc\n\npiperorigin-revid: 372041718\nchange-id: iff79e77a2bb27032423eefcb84211627b27dfe81",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('372041718', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/parameterized_truncated_normal_op.cc'])",
            "num_files":1.0
        },
        {
            "index":564,
            "vuln_id":"GHSA-566m-qj78-rww5",
            "cwe_id":"{'CWE-400'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/postcss\/postcss\/commit\/2b1d04c867995e55124e0a165b7c6622c1735956'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in postcss The package postcss versions before 7.0.36 or between 8.0.0 and 8.2.13 are vulnerable to Regular Expression Denial of Service (ReDoS) via getAnnotationURL() and loadAnnotation() in lib\/previous-map.js. The vulnerable regexes are caused mainly by the sub-pattern \\\/\\*\\s* sourceMappingURL=(.*).",
            "published_date":"2022-01-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/postcss\/postcss",
            "commit_href":"https:\/\/github.com\/postcss\/postcss\/commit\/2b1d04c867995e55124e0a165b7c6622c1735956",
            "commit_sha":"2b1d04c867995e55124e0a165b7c6622c1735956",
            "patch":"SINGLE",
            "chain_ord":"['2b1d04c867995e55124e0a165b7c6622c1735956']",
            "before_first_fix_commit":"{'dc6cff1d7f9e0d6cba440d1b4f797a0f57b13595', '2ad1ca9b965dde32223bee28dc259c339cbaaa05'}",
            "last_fix_commit":"2b1d04c867995e55124e0a165b7c6622c1735956",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/26\/2021, 12:08:17",
            "message":"Merge pull request #1567 from yetingli\/main\n\nFix ReDoS in previous-map",
            "author":"Andrey Sitnik",
            "comments":"{'com_1': {'author': 'abergmann', 'datetime': '04\/27\/2021, 06:37:03', 'body': '[CVE-2021-23382](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-23382) was assigned to this commit.'}}",
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'lib\/previous-map.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/postcss\/postcss\/raw\/2b1d04c867995e55124e0a165b7c6622c1735956\/lib%2Fprevious-map.js', 'patch': '@@ -48,11 +48,11 @@ class PreviousMap {\\n   }\\n \\n   getAnnotationURL(sourceMapString) {\\n-    return sourceMapString.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\*\\\\\/\/)[1].trim()\\n+    return sourceMapString.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\\\*\\\\\/\/)[1].trim()\\n   }\\n \\n   loadAnnotation(css) {\\n-    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=.*\\\\*\\\\\/\/gm)\\n+    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\\\*\\\\\/\/gm)\\n \\n     if (annotations && annotations.length > 0) {\\n       \/\/ Locate the last sourceMappingURL to avoid picking up'}}",
            "message_norm":"merge pull request #1567 from yetingli\/main\n\nfix redos in previous-map",
            "language":"en",
            "entities":"[('#1567', 'ISSUE', ''), ('redos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/previous-map.js'])",
            "num_files":1.0
        },
        {
            "index":2239,
            "vuln_id":"GHSA-jff2-qjw8-5476",
            "cwe_id":"{'CWE-77', 'CWE-78'}",
            "score":8.9,
            "chain":"{'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/01ef56cd5824ed6da1c11b37013a027fdef67524', 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/0be6fcd575c05687d1076d5cd6d75af2ebae5a46', 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/7922366d707de7f20995fc8e30ac3153636bf35f'}",
            "dataset":"osv",
            "summary":"Command Injection Vulnerability in systeminformation ### Impact\ncommand injection vulnerability\n\n### Patches\nProblem was fixed with a parameter check. Please upgrade to version >= 5.6.4\n\n### Workarounds\nIf you cannot upgrade, be sure to check or sanitize service parameters that are passed to si.inetLatency(), si.inetChecksite(), si.services(), si.processLoad() ... do only allow strings, reject any arrays. String sanitation works as expected.",
            "published_date":"2021-04-06",
            "chain_len":3,
            "project":"https:\/\/github.com\/sebhildebrandt\/systeminformation",
            "commit_href":"https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/01ef56cd5824ed6da1c11b37013a027fdef67524",
            "commit_sha":"01ef56cd5824ed6da1c11b37013a027fdef67524",
            "patch":"MULTI",
            "chain_ord":"['7922366d707de7f20995fc8e30ac3153636bf35f', '0be6fcd575c05687d1076d5cd6d75af2ebae5a46', '01ef56cd5824ed6da1c11b37013a027fdef67524']",
            "before_first_fix_commit":"{'0be6fcd575c05687d1076d5cd6d75af2ebae5a46'}",
            "last_fix_commit":"01ef56cd5824ed6da1c11b37013a027fdef67524",
            "chain_ord_pos":3.0,
            "commit_datetime":"03\/15\/2021, 10:51:30",
            "message":"sanitizeShellString() and other security improvements",
            "author":"Sebastian Hildebrandt",
            "comments":"{'com_1': {'author': 'Aaisui', 'datetime': '06\/24\/2021, 03:57:58', 'body': \"In fact,I think the previous version is also safe,i try to do something bad but can't bypass  sanitizeShellString !! :( @sebhildebrandt\"}, 'com_2': {'author': 'Aaisui', 'datetime': '06\/24\/2021, 04:01:11', 'body': \"> In fact, I think the previous version is also safe, I try to do something bad but can't bypass sanitizeShellString !! :( @sebhildebrandt\\r\\n\\r\\nI hope you can give some trick for me XDDDD\"}}",
            "stats":"{'additions': 3, 'deletions': 4, 'total': 7}",
            "files":"{'lib\/internet.js': {'additions': 3, 'deletions': 4, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/raw\/01ef56cd5824ed6da1c11b37013a027fdef67524\/lib%2Finternet.js', 'patch': \"@@ -14,7 +14,6 @@\\n \/\/ ----------------------------------------------------------------------------------\\n \\n \/\/ const exec = require('child_process').exec;\\n-const execFile = require('child_process').execFile;\\n const util = require('.\/util');\\n \\n let _platform = process.platform;\\n@@ -213,9 +212,9 @@ function inetLatency(host, callback) {\\n         let result = null;\\n         try {\\n           const params = hostSanitized + ' -n 1';\\n-          execFile('ping', params.split(' '), util.execOptsWin, function (error, stdout) {\\n-            if (!error) {\\n-              let lines = stdout.toString().split('\\\\r\\\\n');\\n+          util.execSave('ping', params.split(' '), util.execOptsWin).then((stdout) => {\\n+            if (stdout) {\\n+              let lines = stdout.split('\\\\r\\\\n');\\n               lines.shift();\\n               lines.forEach(function (line) {\\n                 if ((line.toLowerCase().match(\/ms\/g) || []).length === 3) {\"}}",
            "message_norm":"sanitizeshellstring() and other security improvements",
            "language":"en",
            "entities":"[('sanitizeshellstring', 'SECWORD', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/internet.js'])",
            "num_files":1.0
        },
        {
            "index":1495,
            "vuln_id":"GHSA-c65v-p733-9796",
            "cwe_id":"{'CWE-79'}",
            "score":8.0,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in snipe\/snipe-it snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "published_date":"2021-11-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e",
            "commit_sha":"7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e",
            "patch":"SINGLE",
            "chain_ord":"['7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e']",
            "before_first_fix_commit":"{'e75a5f13ecb77a53d93d67c23e9f1b3580fe8092', 'f7b483358ff114b56c753ee9c2964059a55a3bd2'}",
            "last_fix_commit":"7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/16\/2021, 04:33:51",
            "message":"Merge pull request #10315 from snipe\/fixes\/escape_custom_fields_in_api_response\n\nEscape custom field values in API response",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
            "files":"{'app\/Http\/Transformers\/AssetsTransformer.php': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/7ce5993f5ae9d713a0955c2fd8e2dff7a7ce886e\/app%2FHttp%2FTransformers%2FAssetsTransformer.php', 'patch': \"@@ -93,15 +93,15 @@ public function transformAsset(Asset $asset)\\n                     $value = (Gate::allows('superadmin')) ? $decrypted : strtoupper(trans('admin\/custom_fields\/general.encrypted'));\\n \\n                     $fields_array[$field->name] = [\\n-                            'field' => $field->convertUnicodeDbSlug(),\\n-                            'value' => $value,\\n+                            'field' => e($field->convertUnicodeDbSlug()),\\n+                            'value' => e($value),\\n                             'field_format' => $field->format,\\n                         ];\\n \\n                 } else {\\n                     $fields_array[$field->name] = [\\n-                        'field' => $field->convertUnicodeDbSlug(),\\n-                        'value' => $asset->{$field->convertUnicodeDbSlug()},\\n+                        'field' => e($field->convertUnicodeDbSlug()),\\n+                        'value' => e($asset->{$field->convertUnicodeDbSlug()}),\\n                         'field_format' => $field->format,\\n                     ];\\n \\n@@ -134,7 +134,7 @@ public function transformAsset(Asset $asset)\\n                         \\n                             'id' => $component->id,\\n                             'pivot_id' => $component->pivot->id,\\n-                            'name' => $component->name,\\n+                            'name' => e($component->name),\\n                             'qty' => $component->pivot->assigned_qty,\\n                             'price_cost' => $component->purchase_cost,\\n                             'purchase_total' => $component->purchase_cost * $component->pivot->assigned_qty,\"}}",
            "message_norm":"merge pull request #10315 from snipe\/fixes\/escape_custom_fields_in_api_response\n\nescape custom field values in api response",
            "language":"ca",
            "entities":"[('#10315', 'ISSUE', ''), ('escape_custom_fields_in_api_response', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Transformers\/AssetsTransformer.php'])",
            "num_files":1.0
        },
        {
            "index":3382,
            "vuln_id":"GHSA-x67x-vg9m-65c3",
            "cwe_id":"{'CWE-119'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/alicemaz\/rust-base64\/commit\/24ead980daf11ba563e4fb2516187a56a71ad319'}",
            "dataset":"osv",
            "summary":"Integer overflow in base64 Affected versions of this crate suffered from an integer overflow bug when\ncalculating the size of a buffer to use when encoding base64 using the\n`encode_config_buf` and `encode_config` functions.  If the input string\nwas large, this would cause a buffer to be allocated that was too small.\nSince this function writes to the buffer using unsafe code, it would\nallow an attacker to write beyond the buffer, causing memory corruption\nand possibly the execution of arbitrary code.\n\nThis flaw was corrected by using checked arithmetic to calculate\nthe size of the buffer.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/alicemaz\/rust-base64",
            "commit_href":"https:\/\/github.com\/alicemaz\/rust-base64\/commit\/24ead980daf11ba563e4fb2516187a56a71ad319",
            "commit_sha":"24ead980daf11ba563e4fb2516187a56a71ad319",
            "patch":"SINGLE",
            "chain_ord":"['24ead980daf11ba563e4fb2516187a56a71ad319']",
            "before_first_fix_commit":"{'21a9389cf340f1e36e48856859d5713b97744383'}",
            "last_fix_commit":"24ead980daf11ba563e4fb2516187a56a71ad319",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/03\/2017, 05:26:40",
            "message":"Use checked arithmetic in encoded_size\n\npreviously encoded_size could silently overflow usize, resulting in\nwrite past the bounds of the buffer allocated by reserve. this changes\nencoded_size to return an option, with none if overflow occurs.\npresently callers simply panic on this case, but it could conceivably be\nrendered as an error in the future\n\ncredit to Andrew Ayer for reporting this vulnerability",
            "author":"Alice Maz",
            "comments":null,
            "stats":"{'additions': 75, 'deletions': 61, 'total': 136}",
            "files":"{'src\/lib.rs': {'additions': 75, 'deletions': 61, 'changes': 136, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/marshallpierce\/rust-base64\/raw\/24ead980daf11ba563e4fb2516187a56a71ad319\/src%2Flib.rs', 'patch': '@@ -171,31 +171,36 @@ pub fn decode<T: ?Sized + AsRef<[u8]>>(input: &T) -> Result<Vec<u8>, DecodeError\\n \/\/\/}\\n \/\/\/```\\n pub fn encode_config<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config) -> String {\\n-    let mut buf = String::with_capacity(encoded_size(input.as_ref().len(), config));\\n+    let mut buf = match encoded_size(input.as_ref().len(), config) {\\n+        Some(n) => String::with_capacity(n),\\n+        None => panic!(\"integer overflow when calculating buffer size\")\\n+    };\\n \\n     encode_config_buf(input, config, &mut buf);\\n \\n     buf\\n }\\n \\n \/\/\/ calculate the base64 encoded string size, including padding\\n-fn encoded_size(bytes_len: usize, config: Config) -> usize {\\n-    let rem = bytes_len % 3;\\n-\\n-    let complete_input_chunks = bytes_len \/ 3;\\n-    let complete_output_chars = complete_input_chunks * 4;\\n-    let printing_output_chars = if rem == 0 {\\n-        complete_output_chars\\n-    } else {\\n-        complete_output_chars + 4\\n-    };\\n+fn encoded_size(bytes_len: usize, config: Config) -> Option<usize> {\\n+    let printing_output_chars = bytes_len\\n+        .checked_add(2)\\n+        .map(|x| x \/ 3)\\n+        .and_then(|x| x.checked_mul(4));\\n+\\n+    \/\/TODO this is subtly wrong but in a not dangerous way\\n+    \/\/pushing patch with identical to previous behavior, then fixing\\n     let line_ending_output_chars = match config.line_wrap {\\n-        LineWrap::NoWrap => 0,\\n-        LineWrap::Wrap(n, LineEnding::CRLF) => printing_output_chars \/ n * 2,\\n-        LineWrap::Wrap(n, LineEnding::LF) => printing_output_chars \/ n,\\n+        LineWrap::NoWrap => Some(0),\\n+        LineWrap::Wrap(n, LineEnding::CRLF) =>\\n+            printing_output_chars.map(|y| y \/ n).and_then(|y| y.checked_mul(2)),\\n+        LineWrap::Wrap(n, LineEnding::LF) =>\\n+            printing_output_chars.map(|y| y \/ n),\\n     };\\n \\n-    return printing_output_chars + line_ending_output_chars;\\n+    printing_output_chars.and_then(|x|\\n+        line_ending_output_chars.and_then(|y| x.checked_add(y))\\n+    )\\n }\\n \\n \/\/\/Encode arbitrary octets as base64.\\n@@ -224,7 +229,11 @@ pub fn encode_config_buf<T: ?Sized + AsRef<[u8]>>(input: &T, config: Config, buf\\n     };\\n \\n     \/\/ reserve to make sure the memory we\\'ll be writing to with unsafe is allocated\\n-    buf.reserve(encoded_size(input_bytes.len(), config));\\n+    let resv_size = match encoded_size(input_bytes.len(), config) {\\n+        Some(n) => n,\\n+        None => panic!(\"integer overflow when calculating buffer size\"),\\n+    };\\n+    buf.reserve(resv_size);\\n \\n     let orig_buf_len = buf.len();\\n     let mut fast_loop_output_buf_len = orig_buf_len;\\n@@ -579,52 +588,52 @@ mod tests {\\n \\n     #[test]\\n     fn encoded_size_correct() {\\n-        assert_eq!(0, encoded_size(0, STANDARD));\\n+        assert_eq!(Some(0), encoded_size(0, STANDARD));\\n \\n-        assert_eq!(4, encoded_size(1, STANDARD));\\n-        assert_eq!(4, encoded_size(2, STANDARD));\\n-        assert_eq!(4, encoded_size(3, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(1, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(2, STANDARD));\\n+        assert_eq!(Some(4), encoded_size(3, STANDARD));\\n \\n-        assert_eq!(8, encoded_size(4, STANDARD));\\n-        assert_eq!(8, encoded_size(5, STANDARD));\\n-        assert_eq!(8, encoded_size(6, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(4, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(5, STANDARD));\\n+        assert_eq!(Some(8), encoded_size(6, STANDARD));\\n \\n-        assert_eq!(12, encoded_size(7, STANDARD));\\n-        assert_eq!(12, encoded_size(8, STANDARD));\\n-        assert_eq!(12, encoded_size(9, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(7, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(8, STANDARD));\\n+        assert_eq!(Some(12), encoded_size(9, STANDARD));\\n \\n-        assert_eq!(72, encoded_size(54, STANDARD));\\n+        assert_eq!(Some(72), encoded_size(54, STANDARD));\\n \\n-        assert_eq!(76, encoded_size(55, STANDARD));\\n-        assert_eq!(76, encoded_size(56, STANDARD));\\n-        assert_eq!(76, encoded_size(57, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(55, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(56, STANDARD));\\n+        assert_eq!(Some(76), encoded_size(57, STANDARD));\\n \\n-        assert_eq!(80, encoded_size(58, STANDARD));\\n+        assert_eq!(Some(80), encoded_size(58, STANDARD));\\n     }\\n \\n     #[test]\\n     fn encoded_size_correct_mime() {\\n-        assert_eq!(0, encoded_size(0, MIME));\\n+        assert_eq!(Some(0), encoded_size(0, MIME));\\n \\n-        assert_eq!(4, encoded_size(1, MIME));\\n-        assert_eq!(4, encoded_size(2, MIME));\\n-        assert_eq!(4, encoded_size(3, MIME));\\n+        assert_eq!(Some(4), encoded_size(1, MIME));\\n+        assert_eq!(Some(4), encoded_size(2, MIME));\\n+        assert_eq!(Some(4), encoded_size(3, MIME));\\n \\n-        assert_eq!(8, encoded_size(4, MIME));\\n-        assert_eq!(8, encoded_size(5, MIME));\\n-        assert_eq!(8, encoded_size(6, MIME));\\n+        assert_eq!(Some(8), encoded_size(4, MIME));\\n+        assert_eq!(Some(8), encoded_size(5, MIME));\\n+        assert_eq!(Some(8), encoded_size(6, MIME));\\n \\n-        assert_eq!(12, encoded_size(7, MIME));\\n-        assert_eq!(12, encoded_size(8, MIME));\\n-        assert_eq!(12, encoded_size(9, MIME));\\n+        assert_eq!(Some(12), encoded_size(7, MIME));\\n+        assert_eq!(Some(12), encoded_size(8, MIME));\\n+        assert_eq!(Some(12), encoded_size(9, MIME));\\n \\n-        assert_eq!(72, encoded_size(54, MIME));\\n+        assert_eq!(Some(72), encoded_size(54, MIME));\\n \\n-        assert_eq!(78, encoded_size(55, MIME));\\n-        assert_eq!(78, encoded_size(56, MIME));\\n-        assert_eq!(78, encoded_size(57, MIME));\\n+        assert_eq!(Some(78), encoded_size(55, MIME));\\n+        assert_eq!(Some(78), encoded_size(56, MIME));\\n+        assert_eq!(Some(78), encoded_size(57, MIME));\\n \\n-        assert_eq!(82, encoded_size(58, MIME));\\n+        assert_eq!(Some(82), encoded_size(58, MIME));\\n     }\\n \\n     #[test]\\n@@ -636,26 +645,31 @@ mod tests {\\n             LineWrap::Wrap(76, LineEnding::LF)\\n         );\\n \\n-        assert_eq!(0, encoded_size(0, config));\\n+        assert_eq!(Some(0), encoded_size(0, config));\\n+\\n+        assert_eq!(Some(4), encoded_size(1, config));\\n+        assert_eq!(Some(4), encoded_size(2, config));\\n+        assert_eq!(Some(4), encoded_size(3, config));\\n \\n-        assert_eq!(4, encoded_size(1, config));\\n-        assert_eq!(4, encoded_size(2, config));\\n-        assert_eq!(4, encoded_size(3, config));\\n+        assert_eq!(Some(8), encoded_size(4, config));\\n+        assert_eq!(Some(8), encoded_size(5, config));\\n+        assert_eq!(Some(8), encoded_size(6, config));\\n \\n-        assert_eq!(8, encoded_size(4, config));\\n-        assert_eq!(8, encoded_size(5, config));\\n-        assert_eq!(8, encoded_size(6, config));\\n+        assert_eq!(Some(12), encoded_size(7, config));\\n+        assert_eq!(Some(12), encoded_size(8, config));\\n+        assert_eq!(Some(12), encoded_size(9, config));\\n \\n-        assert_eq!(12, encoded_size(7, config));\\n-        assert_eq!(12, encoded_size(8, config));\\n-        assert_eq!(12, encoded_size(9, config));\\n+        assert_eq!(Some(72), encoded_size(54, config));\\n \\n-        assert_eq!(72, encoded_size(54, config));\\n+        assert_eq!(Some(77), encoded_size(55, config));\\n+        assert_eq!(Some(77), encoded_size(56, config));\\n+        assert_eq!(Some(77), encoded_size(57, config));\\n \\n-        assert_eq!(77, encoded_size(55, config));\\n-        assert_eq!(77, encoded_size(56, config));\\n-        assert_eq!(77, encoded_size(57, config));\\n+        assert_eq!(Some(81), encoded_size(58, config));\\n+    }\\n \\n-        assert_eq!(81, encoded_size(58, config));\\n+    #[test]\\n+    fn encoded_size_overflow() {\\n+        assert_eq!(None, encoded_size(std::usize::MAX, STANDARD));\\n     }\\n }'}}",
            "message_norm":"use checked arithmetic in encoded_size\n\npreviously encoded_size could silently overflow usize, resulting in\nwrite past the bounds of the buffer allocated by reserve. this changes\nencoded_size to return an option, with none if overflow occurs.\npresently callers simply panic on this case, but it could conceivably be\nrendered as an error in the future\n\ncredit to andrew ayer for reporting this vulnerability",
            "language":"en",
            "entities":"[('encoded_size', 'SECWORD', ''), ('encoded_size', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('encoded_size', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('error', 'FLAW', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0
        },
        {
            "index":2628,
            "vuln_id":"GHSA-pqrv-8r2f-7278",
            "cwe_id":"{'CWE-754'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439'}",
            "dataset":"osv",
            "summary":"Crash due to erroneous `StatusOr` in TensorFlow ### Impact\nA `GraphDef` from a TensorFlow `SavedModel` can be maliciously altered to cause a TensorFlow process to crash due to encountering [a `StatusOr` value that is an error and forcibly extracting the value from it](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/274df9b02330b790aa8de1cee164b70f72b9b244\/tensorflow\/core\/graph\/graph.cc#L560-L567):\n\n```cc\n  if (op_reg_data->type_ctor != nullptr) {\n    VLOG(3) << \"AddNode: found type constructor for \" << node_def.name();\n    const auto ctor_type =\n        full_type::SpecializeType(AttrSlice(node_def), op_reg_data->op_def);\n    const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();\n    if (ctor_typedef.type_id() != TFT_UNSET) {\n      *(node_def.mutable_experimental_type()) = ctor_typedef;\n    }\n  }\n```   \n      \nIf `ctor_type` is an error status, `ValueOrDie` results in a crash.\n        \n### Patches\nWe have patched the issue in GitHub commit [955059813cc325dc1db5e2daa6221271406d4439](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439).\n  \nWe have patched the issue in multiple GitHub commits and these will be included in TensorFlow 2.8.0 and TensorFlow 2.7.1, as both are affected.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439",
            "commit_sha":"955059813cc325dc1db5e2daa6221271406d4439",
            "patch":"SINGLE",
            "chain_ord":"['955059813cc325dc1db5e2daa6221271406d4439']",
            "before_first_fix_commit":"{'3d89911481ba6ebe8c88c1c0b595412121e6c645'}",
            "last_fix_commit":"955059813cc325dc1db5e2daa6221271406d4439",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/12\/2021, 16:17:57",
            "message":"Check for type inference error on node construction.\n\nPiperOrigin-RevId: 409415804\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a",
            "author":"Dan Moldovan",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/graph\/graph.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/955059813cc325dc1db5e2daa6221271406d4439\/tensorflow%2Fcore%2Fgraph%2Fgraph.cc', 'patch': '@@ -561,6 +561,11 @@ Node* Graph::AddNode(NodeDef node_def, Status* status) {\\n     VLOG(3) << \"AddNode: found type constructor for \" << node_def.name();\\n     const auto ctor_type =\\n         full_type::SpecializeType(AttrSlice(node_def), op_reg_data->op_def);\\n+    if (!ctor_type.ok()) {\\n+      *status = errors::InvalidArgument(\"type error: \",\\n+                                        ctor_type.status().ToString());\\n+      return nullptr;\\n+    }\\n     const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();\\n     if (ctor_typedef.type_id() != TFT_UNSET) {\\n       *(node_def.mutable_experimental_type()) = ctor_typedef;'}}",
            "message_norm":"check for type inference error on node construction.\n\npiperorigin-revid: 409415804\nchange-id: ieb6e020906b96f522bf8e2fa103715ddbbdc434a",
            "language":"en",
            "entities":"[('error', 'FLAW', ''), ('409415804', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/graph\/graph.cc'])",
            "num_files":1.0
        },
        {
            "index":2961,
            "vuln_id":"GHSA-rjmf-p882-645m",
            "cwe_id":"{'CWE-295'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/mongodb\/libmongocrypt\/commit\/76365515ff8754b9f705e56428dd0d7efa7f541b'}",
            "dataset":"osv",
            "summary":"Improper Certificate Validation A specific version of the Node.js mongodb-client-encryption module does not perform correct validation of the KMS server\u2019s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Node.js driver and the KMS service rendering client-side field level encryption (CSFLE) ineffective. This issue was discovered during internal testing and affects mongodb-client-encryption module version 1.2.0, which was available from 2021-Jan-29 and deprecated in the NPM Registry on 2021-Feb-04. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services from applications residing inside the AWS, GCP, and Azure nework fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don\u2019t use Field Level Encryption.",
            "published_date":"2021-04-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/mongodb\/libmongocrypt",
            "commit_href":"https:\/\/github.com\/mongodb\/libmongocrypt\/commit\/76365515ff8754b9f705e56428dd0d7efa7f541b",
            "commit_sha":"76365515ff8754b9f705e56428dd0d7efa7f541b",
            "patch":"SINGLE",
            "chain_ord":"['76365515ff8754b9f705e56428dd0d7efa7f541b']",
            "before_first_fix_commit":"{'30d8adc205bffcc9764e4e556a25146687183751'}",
            "last_fix_commit":"76365515ff8754b9f705e56428dd0d7efa7f541b",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/05\/2021, 23:37:36",
            "message":"fix: always authorize TLS endpoints, use servername for SNI (#159)\n\nTLS endpoints should always be authorized. \r\nIn order to properly communicate with GCP's KMS servers\r\nwe need to provide a `servername`, so the endpoint can serve the\r\ncorrect TLS certificate.",
            "author":"Matt Broadstone",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bindings\/node\/lib\/stateMachine.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongodb\/libmongocrypt\/raw\/76365515ff8754b9f705e56428dd0d7efa7f541b\/bindings%2Fnode%2Flib%2FstateMachine.js', 'patch': \"@@ -217,7 +217,7 @@ module.exports = function(modules) {\\n     kmsRequest(request) {\\n       const parsedUrl = request.endpoint.split(':');\\n       const port = parsedUrl[1] != null ? Number.parseInt(parsedUrl[1], 10) : HTTPS_PORT;\\n-      const options = { host: parsedUrl[0], port, rejectUnauthorized: false };\\n+      const options = { host: parsedUrl[0], servername: parsedUrl[0], port };\\n       const message = request.message;\\n \\n       return new Promise((resolve, reject) => {\"}}",
            "message_norm":"fix: always authorize tls endpoints, use servername for sni (#159)\n\ntls endpoints should always be authorized. \r\nin order to properly communicate with gcp's kms servers\r\nwe need to provide a `servername`, so the endpoint can serve the\r\ncorrect tls certificate.",
            "language":"en",
            "entities":"[('tls', 'SECWORD', ''), ('servername', 'SECWORD', ''), ('#159', 'ISSUE', ''), ('tls', 'SECWORD', ''), ('servers', 'SECWORD', ''), ('servername', 'SECWORD', ''), ('tls', 'SECWORD', ''), ('certificate', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bindings\/node\/lib\/stateMachine.js'])",
            "num_files":1.0
        },
        {
            "index":3008,
            "vuln_id":"GHSA-rrx2-r989-2c43",
            "cwe_id":"{'CWE-190'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510'}",
            "dataset":"osv",
            "summary":"Integer overflows in Tensorflow ### Impact \nThe [implementations of `Sparse*Cwise*` ops](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc) are vulnerable to integer overflows. These can be used to trigger large allocations (so, OOM based denial of service) or `CHECK`-fails when building new `TensorShape` objects (so, assert failures based denial of service):\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv(\n    sp_indices=np.array([[9]]),\n    sp_values=np.array([5]),\n    sp_shape=np.array([92233720368., 92233720368]),\n    dense=np.array([4]))\n```\n\nWe are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The latter is an instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197) and is easily fixed by replacing a call to `TensorShape` constructor with a call to `BuildTensorShape` static helper factory.\n\n### Patches\nWe have patched the issue in GitHub commits [1b54cadd19391b60b6fcccd8d076426f7221d5e8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8) and [e952a89b7026b98fe8cbe626514a93ed68b7c510](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510",
            "commit_sha":"e952a89b7026b98fe8cbe626514a93ed68b7c510",
            "patch":"MULTI",
            "chain_ord":"['1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'e952a89b7026b98fe8cbe626514a93ed68b7c510']",
            "before_first_fix_commit":"{'1b54cadd19391b60b6fcccd8d076426f7221d5e8'}",
            "last_fix_commit":"e952a89b7026b98fe8cbe626514a93ed68b7c510",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/10\/2021, 17:46:48",
            "message":"Prevent overflow in sparse dense cwise ops.\n\nPiperOrigin-RevId: 415543171\nChange-Id: I22dab7c41be2121ab5efe5403ca0e2f9b7cb24b8",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e952a89b7026b98fe8cbe626514a93ed68b7c510\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -99,7 +99,9 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n \\n     const auto indices_mat = indices_t->matrix<int64_t>();\\n     const auto shape_vec = shape_t->vec<int64_t>();\\n-    const auto lhs_dims = BCast::FromShape(TensorShape(shape_vec));\\n+    TensorShape lhs_shape;\\n+    OP_REQUIRES_OK(ctx, TensorShape::BuildTensorShape(shape_vec, &lhs_shape));\\n+    const auto lhs_dims = BCast::FromShape(lhs_shape);\\n     const auto rhs_dims = BCast::FromShape(dense_t->shape());\\n     BCast b(lhs_dims, rhs_dims, false);  \/\/ false for keeping the same num dims.'}}",
            "message_norm":"prevent overflow in sparse dense cwise ops.\n\npiperorigin-revid: 415543171\nchange-id: i22dab7c41be2121ab5efe5403ca0e2f9b7cb24b8",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('415543171', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])",
            "num_files":1.0
        },
        {
            "index":782,
            "vuln_id":"GHSA-686h-j8r8-wmfm",
            "cwe_id":"{'CWE-362', 'CWE-77'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/Xudong-Huang\/rcu_cell\/pull\/4\/commits\/1faf18eee11f14969b77ae0f76dcd9ebd437d0c2'}",
            "dataset":"osv",
            "summary":"Data races in rcu_cell Affected versions of this crate unconditionally implement Send\/Sync for `RcuCell<T>`.\nThis allows users to send `T: !Send` to other threads (while `T` enclosed within `RcuCell<T>`), and allows users to concurrently access `T: !Sync` by using the APIs of `RcuCell<T>` that provide access to `&T`.\n\nThis can result in memory corruption caused by data races.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/Xudong-Huang\/rcu_cell",
            "commit_href":"https:\/\/github.com\/Xudong-Huang\/rcu_cell\/pull\/4\/commits\/1faf18eee11f14969b77ae0f76dcd9ebd437d0c2",
            "commit_sha":"1faf18eee11f14969b77ae0f76dcd9ebd437d0c2",
            "patch":"SINGLE",
            "chain_ord":"['1faf18eee11f14969b77ae0f76dcd9ebd437d0c2']",
            "before_first_fix_commit":"{'0e4dc8cd07002a583462994ab4bcfecdf3338fae'}",
            "last_fix_commit":"1faf18eee11f14969b77ae0f76dcd9ebd437d0c2",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/20\/2021, 03:33:02",
            "message":"Fix Send\/Sync impl of RcuCell<T>",
            "author":"JOE1994",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Xudong-Huang\/rcu_cell\/raw\/1faf18eee11f14969b77ae0f76dcd9ebd437d0c2\/src%2Flib.rs', 'patch': '@@ -372,8 +372,8 @@ pub struct RcuCell<T> {\\n     link: LinkWrapper<T>,\\n }\\n \\n-unsafe impl<T> Send for RcuCell<T> {}\\n-unsafe impl<T> Sync for RcuCell<T> {}\\n+unsafe impl<T: Send> Send for RcuCell<T> {}\\n+unsafe impl<T: Sync> Sync for RcuCell<T> {}\\n \\n impl<T> Default for RcuCell<T> {\\n     fn default() -> Self {'}}",
            "message_norm":"fix send\/sync impl of rcucell<t>",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0
        },
        {
            "index":942,
            "vuln_id":"GHSA-73q9-7pwj-gm46",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/icecoder\/icecoder\/commit\/51cf24b2a39138e6a7b5739ef59eb38cd7c39763'}",
            "dataset":"osv",
            "summary":"icecoder is vulnerable to Cross-site Scripting icecoder is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/icecoder\/icecoder",
            "commit_href":"https:\/\/github.com\/icecoder\/icecoder\/commit\/51cf24b2a39138e6a7b5739ef59eb38cd7c39763",
            "commit_sha":"51cf24b2a39138e6a7b5739ef59eb38cd7c39763",
            "patch":"SINGLE",
            "chain_ord":"['51cf24b2a39138e6a7b5739ef59eb38cd7c39763']",
            "before_first_fix_commit":"{'cd964f816f31828011593405e024ee3b4c0f6ed3'}",
            "last_fix_commit":"51cf24b2a39138e6a7b5739ef59eb38cd7c39763",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/17\/2022, 12:38:29",
            "message":"rXSS cleaned username in editor info display",
            "author":"Matt Pass",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'editor.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/icecoder\/ICEcoder\/raw\/51cf24b2a39138e6a7b5739ef59eb38cd7c39763\/editor.php', 'patch': '@@ -150,7 +150,7 @@\\n             ?>\\n             <h2><?php echo $t[\\'multi-user\\']; ?><\/h2>\\n             <span class=\"heading\"><?php echo $t[\\'Username\\']; ?><\/span><br>\\n-            <?php echo $_SESSION[\\'username\\'];?><br><br>\\n+            <?php echo xssClean($_SESSION[\\'username\\'], \"html\");?><br><br>\\n             <?php\\n         }\\n         ?>'}}",
            "message_norm":"rxss cleaned username in editor info display",
            "language":"en",
            "entities":"[('rxss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['editor.php'])",
            "num_files":1.0
        },
        {
            "index":1778,
            "vuln_id":"GHSA-fv25-wrff-wf86",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281'}",
            "dataset":"osv",
            "summary":"Missing validation causes denial of service via `GetSessionTensor` ### Impact\nThe implementation of [`tf.raw_ops.GetSessionTensor`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/session_ops.cc#L94-L112) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\nhandle = tf.constant(\"[]\", shape=[0], dtype=tf.string)\ntf.raw_ops.GetSessionTensor(handle=handle)\n```\n  \nThe code assumes `handle` is a scalar but there is no validation for this:\n  \n```cc\n    const Tensor& handle = ctx->input(0);\n    const string& name = handle.scalar<tstring>()();\n```\n\n### Patches\nWe have patched the issue in GitHub commit [48305e8ffe5246d67570b64096a96f8e315a7281](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281",
            "commit_sha":"48305e8ffe5246d67570b64096a96f8e315a7281",
            "patch":"SINGLE",
            "chain_ord":"['48305e8ffe5246d67570b64096a96f8e315a7281']",
            "before_first_fix_commit":"{'13d38a07ce9143e044aa737cfd7bb759d0e9b400'}",
            "last_fix_commit":"48305e8ffe5246d67570b64096a96f8e315a7281",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 19:25:03",
            "message":"Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445218701",
            "author":"Alan Liu",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/48305e8ffe5246d67570b64096a96f8e315a7281\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -98,6 +98,8 @@ class GetSessionTensorOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\\n+                errors::InvalidArgument(\"handle must be scalar\"));\\n     const string& name = handle.scalar<tstring>()();\\n     Tensor val;\\n     auto session_state = ctx->session_state();'}}",
            "message_norm":"fix tf.raw_ops.getsessiontensor vulnerability with invalid handle.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445218701",
            "language":"en",
            "entities":"[('vulnerability', 'SECWORD', ''), ('445218701', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":1852,
            "vuln_id":"GHSA-g954-5hwp-pp24",
            "cwe_id":"{'CWE-1321'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/protobufjs\/protobuf.js\/commit\/b5f1391dff5515894830a6570e6d73f5511b2e8f'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in protobufjs The package protobufjs before 6.11.3 and 6.10.3 is vulnerable to Prototype Pollution, which can allow an attacker to add\/modify properties of the Object.prototype.\n\nThis vulnerability can occur in multiple ways:\n1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions\n2. by parsing\/loading .proto files",
            "published_date":"2022-05-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/protobufjs\/protobuf.js",
            "commit_href":"https:\/\/github.com\/protobufjs\/protobuf.js\/commit\/b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "commit_sha":"b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "patch":"SINGLE",
            "chain_ord":"['b5f1391dff5515894830a6570e6d73f5511b2e8f']",
            "before_first_fix_commit":"{'7afd0a39f41d6df5fda6fa10c319cdf829027d3e'}",
            "last_fix_commit":"b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/20\/2022, 18:08:37",
            "message":"fix: do not let setProperty change the prototype (#1731)",
            "author":"Alexander Fenster",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/util.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/protobufjs\/protobuf.js\/raw\/b5f1391dff5515894830a6570e6d73f5511b2e8f\/src%2Futil.js', 'patch': '@@ -176,6 +176,9 @@ util.decorateEnum = function decorateEnum(object) {\\n util.setProperty = function setProperty(dst, path, value) {\\n     function setProp(dst, path, value) {\\n         var part = path.shift();\\n+        if (part === \"__proto__\") {\\n+          return dst;\\n+        }\\n         if (path.length > 0) {\\n             dst[part] = setProp(dst[part] || {}, path, value);\\n         } else {'}}",
            "message_norm":"fix: do not let setproperty change the prototype (#1731)",
            "language":"en",
            "entities":"[('change', 'ACTION', ''), ('#1731', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/util.js'])",
            "num_files":1.0
        },
        {
            "index":1916,
            "vuln_id":"GHSA-gq67-pp9w-43gp",
            "cwe_id":"{'CWE-330', 'CWE-352'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/apache\/myfaces\/commit\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2'}",
            "dataset":"osv",
            "summary":"Cryptographically weak CSRF tokens in Apache MyFaces In the default configuration, Apache MyFaces Core versions 2.2.0 to 2.2.13, 2.3.0 to 2.3.7, 2.3-next-M1 to 2.3-next-M4, and 3.0.0-RC1 use cryptographically weak implicit and explicit cross-site request forgery (CSRF) tokens. Due to that limitation, it is possible (although difficult) for an attacker to calculate a future CSRF token value and to use that value to trick a user into executing unwanted actions on an application.\n\n\nMitigation:\nExisting web.xml configuration parameters can be used to direct\nMyFaces to use SecureRandom for CSRF token generation:\n\norg.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN=secureRandom\norg.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN=secureRandom\norg.apache.myfaces.RANDOM_KEY_IN_WEBSOCKET_SESSION_TOKEN=secureRandom",
            "published_date":"2021-06-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/myfaces",
            "commit_href":"https:\/\/github.com\/apache\/myfaces\/commit\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "commit_sha":"cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "patch":"SINGLE",
            "chain_ord":"['cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2']",
            "before_first_fix_commit":"{'2683d7ec7008eb2a728423ad6e574fa83137b65c', '413d25bfc0ba3a49a06484e17d603a25ce4af436'}",
            "last_fix_commit":"cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2021, 19:51:15",
            "message":"Merge pull request #132 from wtlucy\/secureRandom_master\n\nMYFACES-4373: prefer SecureRandom for token generation",
            "author":"Thomas Andraschko",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 7, 'total': 14}",
            "files":"{'impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java': {'additions': 7, 'deletions': 7, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/myfaces\/raw\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2\/impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fmyfaces%2Fconfig%2FMyfacesConfig.java', 'patch': '@@ -459,12 +459,12 @@\\n      * Adds a random key to the generated view state session token.\\n      *\/\\n     @JSFWebConfigParam(since=\"2.1.9, 2.0.15\", expectedValues=\"secureRandom, random\", \\n-            defaultValue=\"random\", group=\"state\")\\n+            defaultValue=\"secureRandom\", group=\"state\")\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\";\\n-    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = \"random\";\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_RANDOM = \"random\";\\n+    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM;\\n     \\n     \/**\\n      * Set the default length of the random key added to the view state session token.\\n@@ -499,16 +499,16 @@\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM\";\\n     private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM_DEFAULT = \"SHA1PRNG\";\\n     \\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\\n+    \\n     \/**\\n      * Defines how to generate the csrf session token.\\n      *\/\\n-    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"none\", group=\"state\")\\n+    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"secureRandom\", group=\"state\")\\n     public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN\";\\n-    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = \"random\";\\n-    \\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\\n+    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM;\\n     \\n     \/**\\n      * Indicates that the serialized state will be compressed before it is written to the session. By default true.'}}",
            "message_norm":"merge pull request #132 from wtlucy\/securerandom_master\n\nmyfaces-4373: prefer securerandom for token generation",
            "language":"en",
            "entities":"[('#132', 'ISSUE', ''), ('securerandom_master', 'SECWORD', ''), ('securerandom', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java'])",
            "num_files":1.0
        },
        {
            "index":998,
            "vuln_id":"GHSA-786j-5qwq-r36x",
            "cwe_id":"{'CWE-824'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659'}",
            "dataset":"osv",
            "summary":"Segfault while copying constant resource tensor ### Impact\nDuring TensorFlow's Grappler optimizer phase, constant folding might attempt to deep copy a resource tensor. This results in a segfault, as these tensors are supposed to not change.\n\n### Patches\nWe have patched the issue in GitHub commit [7731e8dfbe4a56773be5dc94d631611211156659](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659",
            "commit_sha":"7731e8dfbe4a56773be5dc94d631611211156659",
            "patch":"SINGLE",
            "chain_ord":"['7731e8dfbe4a56773be5dc94d631611211156659']",
            "before_first_fix_commit":"{'a813a3f1631e9c0e0e0cc3032349a03a6041526c'}",
            "last_fix_commit":"7731e8dfbe4a56773be5dc94d631611211156659",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/19\/2021, 18:25:32",
            "message":"Don't constant-fold DT_RESOURCE constants.\n\nPiperOrigin-RevId: 391803952\nChange-Id: I0ea3ec31d3e7dfda0f03b4027a237f08d00a3091",
            "author":"A. Unique TensorFlower",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'tensorflow\/core\/common_runtime\/constant_folding.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7731e8dfbe4a56773be5dc94d631611211156659\/tensorflow%2Fcore%2Fcommon_runtime%2Fconstant_folding.cc', 'patch': '@@ -30,6 +30,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/log_memory.h\"\\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\\n #include \"tensorflow\/core\/graph\/algorithm.h\"\\n #include \"tensorflow\/core\/graph\/node_builder.h\"\\n #include \"tensorflow\/core\/graph\/subgraph.h\"\\n@@ -223,7 +224,8 @@ bool IsConstantFoldable(\\n     std::unordered_map<const Node*, std::vector<Tensor>>*\\n         shape_replacement_map) {\\n   if (n->IsConstant()) {\\n-    return true;\\n+    \/\/ Skip constant folding resources as they cannot be deep copied.\\n+    return n->output_type(0) != DT_RESOURCE;\\n   }\\n   if (MaybeReplaceShapeOp(n, shape_map, shape_replacement_map)) {\\n     return true;'}}",
            "message_norm":"don't constant-fold dt_resource constants.\n\npiperorigin-revid: 391803952\nchange-id: i0ea3ec31d3e7dfda0f03b4027a237f08d00a3091",
            "language":"ca",
            "entities":"[('391803952', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/common_runtime\/constant_folding.cc'])",
            "num_files":1.0
        },
        {
            "index":305,
            "vuln_id":"GHSA-3qxp-qjq7-w4hf",
            "cwe_id":"{'CWE-754'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/26eb323554ffccd173e8a79a8c05c15b685ae4d1'}",
            "dataset":"osv",
            "summary":"CHECK-fail in tf.raw_ops.EncodePng ### Impact\nAn attacker can trigger a `CHECK` fail in PNG encoding by providing an empty input tensor as the pixel data:\n\n```python\nimport tensorflow as tf\n\nimage = tf.zeros([0, 0, 3])\nimage = tf.cast(image, dtype=tf.uint8) \ntf.raw_ops.EncodePng(image=image) \n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e312e0791ce486a80c9d23110841525c6f7c3289\/tensorflow\/core\/kernels\/image\/encode_png_op.cc#L57-L60) only validates that the total number of pixels in the image does not overflow. Thus, an attacker can send an empty matrix for encoding. However, if the tensor is empty, then the associated buffer is `nullptr`. Hence, when [calling `png::WriteImageToBuffer`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e312e0791ce486a80c9d23110841525c6f7c3289\/tensorflow\/core\/kernels\/image\/encode_png_op.cc#L79-L93), the first argument (i.e., `image.flat<T>().data()`) is `NULL`. This then triggers the `CHECK_NOTNULL` in the [first line of `png::WriteImageToBuffer`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e312e0791ce486a80c9d23110841525c6f7c3289\/tensorflow\/core\/lib\/png\/png_io.cc#L345-L349).\n\n```cc\ntemplate <typename T>\nbool WriteImageToBuffer(\n    const void* image, int width, int height, int row_bytes, int num_channels,\n    int channel_bits, int compression, T* png_string,\n    const std::vector<std::pair<std::string, std::string> >* metadata) {\n  CHECK_NOTNULL(image);\n  ...\n}\n```\n\nSince `image` is null, this results in `abort` being called after printing the stacktrace. Effectively, this allows an attacker to mount a denial of service attack.\n\n### Patches\nWe have patched the issue in GitHub commit [26eb323554ffccd173e8a79a8c05c15b685ae4d1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/26eb323554ffccd173e8a79a8c05c15b685ae4d1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/26eb323554ffccd173e8a79a8c05c15b685ae4d1",
            "commit_sha":"26eb323554ffccd173e8a79a8c05c15b685ae4d1",
            "patch":"SINGLE",
            "chain_ord":"['26eb323554ffccd173e8a79a8c05c15b685ae4d1']",
            "before_first_fix_commit":"{'e312e0791ce486a80c9d23110841525c6f7c3289'}",
            "last_fix_commit":"26eb323554ffccd173e8a79a8c05c15b685ae4d1",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/21\/2021, 20:03:47",
            "message":"Fix null CHECK issue with `tf.raw_ops.EncodePng`.\n\nPiperOrigin-RevId: 369717714\nChange-Id: I24136cd99c20b8466671f4f93b670ef6f6dd1250",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/image\/encode_png_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/26eb323554ffccd173e8a79a8c05c15b685ae4d1\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fencode_png_op.cc', 'patch': '@@ -54,6 +54,8 @@ class EncodePngOp : public OpKernel {\\n     OP_REQUIRES(context, image.dims() == 3,\\n                 errors::InvalidArgument(\"image must be 3-dimensional\",\\n                                         image.shape().DebugString()));\\n+    OP_REQUIRES(context, image.NumElements() > 0,\\n+                errors::Internal(\"Invalid image provided.\"));\\n     OP_REQUIRES(\\n         context,\\n         FastBoundsCheck(image.NumElements(), std::numeric_limits<int32>::max()),'}}",
            "message_norm":"fix null check issue with `tf.raw_ops.encodepng`.\n\npiperorigin-revid: 369717714\nchange-id: i24136cd99c20b8466671f4f93b670ef6f6dd1250",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('tf.raw_ops.encodepng', 'SECWORD', ''), ('369717714', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/encode_png_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1244,
            "vuln_id":"GHSA-8r7q-r9mx-35rh",
            "cwe_id":"{'CWE-134'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/rusqlite\/rusqlite\/commit\/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0'}",
            "dataset":"osv",
            "summary":"Mishandling of format strings in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated because rusqlite::trace::log mishandles format strings.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/rusqlite\/rusqlite",
            "commit_href":"https:\/\/github.com\/rusqlite\/rusqlite\/commit\/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0",
            "commit_sha":"2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0",
            "patch":"SINGLE",
            "chain_ord":"['2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0']",
            "before_first_fix_commit":"{'abbab7216a8b47108a0e1b7a26e429d6a990d7a6'}",
            "last_fix_commit":"2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/14\/2020, 19:08:26",
            "message":"Fix format string error in rusqlite::trace::log",
            "author":"Thom Chiovoloni",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/trace.rs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rusqlite\/rusqlite\/raw\/2327d3b774927fdf48903c0bdc1ca7ec93c7c8d0\/src%2Ftrace.rs', 'patch': '@@ -61,7 +61,7 @@ pub unsafe fn config_log(callback: Option<fn(c_int, &str)>) -> Result<()> {\\n pub fn log(err_code: c_int, msg: &str) {\\n     let msg = CString::new(msg).expect(\"SQLite log messages cannot contain embedded zeroes\");\\n     unsafe {\\n-        ffi::sqlite3_log(err_code, msg.as_ptr());\\n+        ffi::sqlite3_log(err_code, b\"%s\\\\0\" as *const _ as *const c_char, msg.as_ptr());\\n     }\\n }'}}",
            "message_norm":"fix format string error in rusqlite::trace::log",
            "language":"en",
            "entities":"[('error', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/trace.rs'])",
            "num_files":1.0
        },
        {
            "index":2648,
            "vuln_id":"GHSA-pvrc-hg3f-58r6",
            "cwe_id":"{'CWE-787'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f'}",
            "dataset":"osv",
            "summary":"Heap OOB access in `Dilation2DBackpropInput` ### Impact\nAn attacker can write outside the bounds of heap allocated arrays by passing invalid arguments to `tf.raw_ops.Dilation2DBackpropInput`:\n\n```python\nimport tensorflow as tf\n    \ninput_tensor = tf.constant([1.1] * 81, shape=[3, 3, 3, 3], dtype=tf.float32)\nfilter = tf.constant([], shape=[0, 0, 3], dtype=tf.float32)\nout_backprop = tf.constant([1.1] * 1062, shape=[3, 2, 59, 3], dtype=tf.float32)\n\ntf.raw_ops.Dilation2DBackpropInput(\n  input=input_tensor, filter=filter, out_backprop=out_backprop, \n  strides=[1, 40, 1, 1], rates=[1, 56, 56, 1], padding='VALID')\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/afd954e65f15aea4d438d0a219136fc4a63a573d\/tensorflow\/core\/kernels\/dilation_ops.cc#L321-L322) does not validate before writing to the output array.\n  \n```cc               \nin_backprop(b, h_in_max, w_in_max, d) += out_backprop(b, h_out, w_out, d);\n```                 \n    \nThe values for `h_out` and `w_out` are guaranteed to be in range for `out_backprop` (as they are loop indices bounded by the size of the array). However, there are no similar guarantees relating `h_in_max`\/`w_in_max` and `in_backprop`.\n\n### Patches\nWe have patched the issue in GitHub commit [3f6fe4dfef6f57e768260b48166c27d148f3015f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f",
            "commit_sha":"3f6fe4dfef6f57e768260b48166c27d148f3015f",
            "patch":"SINGLE",
            "chain_ord":"['3f6fe4dfef6f57e768260b48166c27d148f3015f']",
            "before_first_fix_commit":"{'afd954e65f15aea4d438d0a219136fc4a63a573d'}",
            "last_fix_commit":"3f6fe4dfef6f57e768260b48166c27d148f3015f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 01:33:28",
            "message":"Add missing validations in dillation ops.\n\nPiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 4, 'total': 15}",
            "files":"{'tensorflow\/core\/kernels\/dilation_ops.cc': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/3f6fe4dfef6f57e768260b48166c27d148f3015f\/tensorflow%2Fcore%2Fkernels%2Fdilation_ops.cc', 'patch': '@@ -130,6 +130,7 @@ class DilationOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Output tensor is of the following dimensions:\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -229,6 +230,7 @@ class DilationBackpropInputOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Verify that the incoming gradient tensor has the expected size\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -318,8 +320,10 @@ struct DilationBackpropInput<CPUDevice, T> {\\n                 }\\n               }\\n             }\\n-            in_backprop(b, h_in_max, w_in_max, d) +=\\n-                out_backprop(b, h_out, w_out, d);\\n+            if (h_in_max < input_rows && w_in_max < input_cols) {\\n+              in_backprop(b, h_in_max, w_in_max, d) +=\\n+                  out_backprop(b, h_out, w_out, d);\\n+            }\\n           }\\n         }\\n       }\\n@@ -349,6 +353,7 @@ class DilationBackpropFilterOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Verify that the incoming gradient tensor has the expected size\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -438,8 +443,10 @@ struct DilationBackpropFilter<CPUDevice, T> {\\n                 }\\n               }\\n             }\\n-            filter_backprop(h_max, w_max, d) +=\\n-                out_backprop(b, h_out, w_out, d);\\n+            if (h_max < filter_rows && w_max < filter_cols) {\\n+              filter_backprop(h_max, w_max, d) +=\\n+                  out_backprop(b, h_out, w_out, d);\\n+            }\\n           }\\n         }\\n       }'}}",
            "message_norm":"add missing validations in dillation ops.\n\npiperorigin-revid: 372037158\nchange-id: i4ee304c84a02550c030288a6534000b934fc1599",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validations', 'SECWORD', ''), ('372037158', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/dilation_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":2730,
            "vuln_id":"GHSA-q9qc-pp5x-mc8c",
            "cwe_id":"{'CWE-94', 'CWE-1336'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Special Elements Used in a Template Engine in microweber Improper Neutralization of Special Elements Used in a Template Engine in GitHub repository microweber\/microweber prior to 1.3.",
            "published_date":"2022-03-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "commit_sha":"e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "patch":"SINGLE",
            "chain_ord":"['e0224462b3dd6b1f7c6ec1197413afc6019bc3b5']",
            "before_first_fix_commit":"{'b2baab6e582b2efe63788d367a2bb61a2fa26470'}",
            "last_fix_commit":"e0224462b3dd6b1f7c6ec1197413afc6019bc3b5",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/09\/2022, 11:17:21",
            "message":"Update AdminCommentController.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 10, 'total': 13}",
            "files":"{'src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php': {'additions': 3, 'deletions': 10, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/e0224462b3dd6b1f7c6ec1197413afc6019bc3b5\/src%2FMicroweberPackages%2FComment%2FHttp%2FControllers%2FAdmin%2FAdminCommentController.php', 'patch': \"@@ -18,18 +18,16 @@\\n use MicroweberPackages\\\\Comment\\\\Models\\\\Comment;\\n use MicroweberPackages\\\\Comment\\\\Events\\\\NewComment;\\n use MicroweberPackages\\\\Comment\\\\Notifications\\\\NewCommentNotification;\\n+use MicroweberPackages\\\\Helper\\\\HTMLClean;\\n use MicroweberPackages\\\\User\\\\Models\\\\User;\\n use MicroweberPackages\\\\Utils\\\\Mail\\\\MailSender;\\n \\n-\\n class AdminCommentController extends AdminController\\n {\\n     public function index(Request $request)\\n     {\\n-\\n         $contents = $this->getComments($request);\\n \\n-\\n         return $this->view('comment::admin.comments.index', ['contents' => $contents]);\\n     }\\n \\n@@ -42,7 +40,6 @@ public function getComments(Request $request)\\n             $contents = $contents->filter($filter);\\n         }\\n \\n-\\n         $contents = $contents->paginate($request->get('limit', 30))\\n             ->appends($request->except('page'));\\n \\n@@ -148,12 +145,8 @@ public function saveCommentEdit(Request $request)\\n \\n         $comment_body = $data['comment_body'];\\n \\n-        \/\/ Claer HTML\\n-        $comment_body = $this->app->format->clean_html($comment_body);\\n-\\n-        \/\/ Clear XSS\\n-        $evil = ['(?<!\\\\w)on\\\\w*', 'xmlns', 'formaction', 'xlink:href', 'FSCommand', 'seekSegmentTime'];\\n-        $comment_body = $this->app->format->clean_xss($comment_body, true, $evil, 'removeEvilAttributes');\\n+        $cleanHtml = new HTMLClean();\\n+        $comment_body = $cleanHtml->onlyTags($comment_body);\\n \\n         if (!empty($comment_body) and !empty($data['format']) and $data['format'] == 'markdown') {\\n             $comment_body = Markdown::convertToHtml($comment_body);\"}}",
            "message_norm":"update admincommentcontroller.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', ''), ('admincommentcontroller.php', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Comment\/Http\/Controllers\/Admin\/AdminCommentController.php'])",
            "num_files":1.0
        },
        {
            "index":1112,
            "vuln_id":"GHSA-82j4-vr25-x394",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/78522520892d4e29cc94148c6ec84a204a607b73'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/78522520892d4e29cc94148c6ec84a204a607b73",
            "commit_sha":"78522520892d4e29cc94148c6ec84a204a607b73",
            "patch":"SINGLE",
            "chain_ord":"['78522520892d4e29cc94148c6ec84a204a607b73']",
            "before_first_fix_commit":"{'52d1d902084387bec22a64e6027f100e939733c8', '830c89a4c2c5fd0dd491422bf8e97b4eb5713f55'}",
            "last_fix_commit":"78522520892d4e29cc94148c6ec84a204a607b73",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 10:39:59",
            "message":"Merge pull request #1629 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/78522520892d4e29cc94148c6ec84a204a607b73\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -304,6 +304,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".aspx\")\\t\\t\\t\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
            "message_norm":"merge pull request #1629 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
            "language":"en",
            "entities":"[('#1629', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":694,
            "vuln_id":"GHSA-5rqg-jm4f-cqx7",
            "cwe_id":"{'CWE-835'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75', 'https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd', 'https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26'}",
            "dataset":"osv",
            "summary":"Infinite loop causing Denial of Service in colors colors is a library for including colored text in node.js consoles. Between 07 and 09 January 2022, colors versions 1.4.1, 1.4.2, and 1.4.44-liberty-2 were published including malicious code that caused a Denial of Service due to an infinite loop. Software dependent on these versions experienced the printing of randomized characters to console and an infinite loop resulting in unbound system resource consumption.\n\nUsers of colors relying on these specific versions should downgrade to version 1.4.0.",
            "published_date":"2022-01-10",
            "chain_len":3,
            "project":"https:\/\/github.com\/Marak\/colors.js",
            "commit_href":"https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd",
            "commit_sha":"137c6dae3339e97f4bbc838c221803c363b0a9fd",
            "patch":"MULTI",
            "chain_ord":"['137c6dae3339e97f4bbc838c221803c363b0a9fd', '5d2d242f656103ac38086d6b26433a09f1c38c75', '6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26']",
            "before_first_fix_commit":"{'5d2d242f656103ac38086d6b26433a09f1c38c75'}",
            "last_fix_commit":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/08\/2022, 04:19:44",
            "message":"Bump to `v1.4.44-liberty`",
            "author":"Marak",
            "comments":"{'com_1': {'author': 'LeviPesin', 'datetime': '01\/12\/2022, 06:18:26', 'body': 'No one have commented on this commit yet :-)'}, 'com_2': {'author': 'hello-smile6', 'datetime': '01\/14\/2022, 04:57:47', 'body': '> No one have commented on this commit yet :-)\\r\\n\\r\\nMake that 2 people'}, 'com_3': {'author': 'hello-smile6', 'datetime': '01\/14\/2022, 04:57:52', 'body': '@LeviPesin'}, 'com_4': {'author': 'TechStudent10', 'datetime': '01\/20\/2022, 14:09:20', 'body': '`liberty-1`'}, 'com_5': {'author': 'Fabrisdev', 'datetime': '01\/23\/2022, 22:51:03', 'body': 'now 5'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Marak\/colors.js\/raw\/137c6dae3339e97f4bbc838c221803c363b0a9fd\/package.json', 'patch': '@@ -1,7 +1,7 @@\\n {\\n     \"name\": \"colors\",\\n     \"description\": \"get colors in your node.js console\",\\n-    \"version\": \"1.4.0\",\\n+    \"version\": \"1.4.44-liberty\",\\n     \"author\": \"Marak Squires\",\\n     \"contributors\": [\\n         {'}}",
            "message_norm":"bump to `v1.4.44-liberty`",
            "language":"en",
            "entities":"[('v1.4.44', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['package.json'])",
            "num_files":1.0
        },
        {
            "index":992,
            "vuln_id":"GHSA-77gp-3h4r-6428",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042'}",
            "dataset":"osv",
            "summary":"Out of bounds read and write in Tensorflow ### Impact\nThere is a typo in TensorFlow's [`SpecializeType`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/full_type_util.cc#L81-L102) which results in heap OOB read\/write:\n\n```cc\nfor (int i = 0; i < op_def.output_arg_size(); i++) {\n  \/\/ ...\n  for (int j = 0; j < t->args_size(); j++) {\n    auto* arg = t->mutable_args(i);\n    \/\/ ...\n  }\n} \n```\n\nDue to a typo, `arg` is initialized to the `i`th mutable argument in a loop where the loop index is `j`. Hence it is possible to assign to `arg` from outside the vector of arguments. Since this is a mutable proto value, it allows both read and write to outside of bounds data.\n\n### Patches\nWe have patched the issue in GitHub commit [0657c83d08845cc434175934c642299de2c0f042](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, and TensorFlow 2.6.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0657c83d08845cc434175934c642299de2c0f042",
            "commit_sha":"0657c83d08845cc434175934c642299de2c0f042",
            "patch":"SINGLE",
            "chain_ord":"['0657c83d08845cc434175934c642299de2c0f042']",
            "before_first_fix_commit":"{'6e65b0b4ad12fdaa223e87b4ae6d8cb762fcae2b'}",
            "last_fix_commit":"0657c83d08845cc434175934c642299de2c0f042",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/09\/2021, 12:44:43",
            "message":"Fix heap OOB read\/write due to incorrect indexing.\n\nPiperOrigin-RevId: 408578046\nChange-Id: Ifc9ffea49e5890f55fcb2c27568611052c3ddcfa",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'tensorflow\/core\/framework\/full_type_util.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0657c83d08845cc434175934c642299de2c0f042\/tensorflow%2Fcore%2Fframework%2Ffull_type_util.cc', 'patch': '@@ -100,7 +100,7 @@ StatusOr<FullTypeDef> SpecializeType(const AttrSlice& attrs,\\n     \/\/ verifications are needed, they should be done by separately, and in a\\n     \/\/ way that can be reused for type inference.\\n     for (int j = 0; j < t->args_size(); j++) {\\n-      auto* arg = t->mutable_args(i);\\n+      auto* arg = t->mutable_args(j);\\n       if (arg->type_id() == TFT_VAR) {\\n         const auto* attr = attrs.Find(arg->s());\\n         if (attr == nullptr) {'}}",
            "message_norm":"fix heap oob read\/write due to incorrect indexing.\n\npiperorigin-revid: 408578046\nchange-id: ifc9ffea49e5890f55fcb2c27568611052c3ddcfa",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('408578046', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/full_type_util.cc'])",
            "num_files":1.0
        },
        {
            "index":263,
            "vuln_id":"GHSA-3j58-p785-f27x",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/fc7e1a026735b93f0e0047700d08c44954fce9ce'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber There is a reflected cross sitem scripting attack in microweber via url parameters.",
            "published_date":"2022-01-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/fc7e1a026735b93f0e0047700d08c44954fce9ce",
            "commit_sha":"fc7e1a026735b93f0e0047700d08c44954fce9ce",
            "patch":"SINGLE",
            "chain_ord":"['fc7e1a026735b93f0e0047700d08c44954fce9ce']",
            "before_first_fix_commit":"{'6e9fcaa043b4211ef21a494f9892dd19ba8a572c'}",
            "last_fix_commit":"fc7e1a026735b93f0e0047700d08c44954fce9ce",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2022, 10:33:18",
            "message":"fix xss on module api call in value parameters",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/fc7e1a026735b93f0e0047700d08c44954fce9ce\/src%2FMicroweberPackages%2FApp%2FHttp%2FControllers%2FApiController.php', 'patch': \"@@ -17,9 +17,6 @@\\n class ApiController  extends FrontendController\\n {\\n \\n-\\n-\\n-\\n     public function api_html()\\n     {\\n         if (!defined('MW_API_HTML_OUTPUT')) {\\n@@ -609,12 +606,14 @@ public function module()\\n \\n         $request_data = array_merge($_GET, $_POST);\\n \\n-\\n         \/\/ sanitize attributes\\n         if($request_data){\\n             $request_data_new = [];\\n             $antixss = new AntiXSS();\\n             foreach ($request_data as $k=>$v){\\n+\\n+                $v = $antixss->xss_clean($v);\\n+\\n                 if(is_string($k)){\\n                     $k = $antixss->xss_clean($k);\\n                     if($k){\\n@@ -623,6 +622,7 @@ public function module()\\n                 } else {\\n                     $request_data_new[$k] = $v;\\n                 }\\n+                \\n             }\\n             $request_data = $request_data_new;\\n         }\"}}",
            "message_norm":"fix xss on module api call in value parameters",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php'])",
            "num_files":1.0
        },
        {
            "index":203,
            "vuln_id":"GHSA-35q2-47q7-3pc3",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/NodeRedis\/node-redis\/commit\/2d11b6dc9b9774464a91fb4b448bad8bf699629e'}",
            "dataset":"osv",
            "summary":"Node-Redis potential exponential regex in monitor mode ### Impact\nWhen a client is in monitoring mode, the regex begin used to detected monitor messages could cause exponential backtracking on some strings. This issue could lead to a denial of service.\n\n### Patches\nThe problem was fixed in commit [`2d11b6d`](https:\/\/github.com\/NodeRedis\/node-redis\/commit\/2d11b6dc9b9774464a91fb4b448bad8bf699629e) and was released in version `3.1.1`.\n\n### References\n#1569 (GHSL-2021-026)",
            "published_date":"2021-04-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/NodeRedis\/node-redis",
            "commit_href":"https:\/\/github.com\/NodeRedis\/node-redis\/commit\/2d11b6dc9b9774464a91fb4b448bad8bf699629e",
            "commit_sha":"2d11b6dc9b9774464a91fb4b448bad8bf699629e",
            "patch":"SINGLE",
            "chain_ord":"['2d11b6dc9b9774464a91fb4b448bad8bf699629e']",
            "before_first_fix_commit":"{'7e77de84bc80b0742321939c59612dc27559bbff'}",
            "last_fix_commit":"2d11b6dc9b9774464a91fb4b448bad8bf699629e",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/08\/2021, 22:04:34",
            "message":"fix #1569 - improve monitor_regex (#1595)\n\nCo-authored-by: Guy Korland <gkorland@gmail.com>",
            "author":"Leibale Eidelman",
            "comments":"{'com_1': {'author': 'Plavit', 'datetime': '04\/27\/2021, 21:27:30', 'body': 'lemme check compatibility'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/utils.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/redis\/node-redis\/raw\/2d11b6dc9b9774464a91fb4b448bad8bf699629e\/lib%2Futils.js', 'patch': '@@ -127,7 +127,7 @@ module.exports = {\\n     reply_to_object: replyToObject,\\n     print: print,\\n     err_code: \/^([A-Z]+)\\\\s+(.+)$\/,\\n-    monitor_regex: \/^[0-9]{10,11}\\\\.[0-9]+ \\\\[[0-9]+ .+\\\\]( \".+?\")+$\/,\\n+    monitor_regex: \/^[0-9]{10,11}\\\\.[0-9]+ \\\\[[0-9]+ .+\\\\].*\"$\/,\\n     clone: convenienceClone,\\n     callback_or_emit: callbackOrEmit,\\n     reply_in_order: replyInOrder'}}",
            "message_norm":"fix #1569 - improve monitor_regex (#1595)\n\nco-authored-by: guy korland <gkorland@gmail.com>",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#1569', 'ISSUE', ''), ('improve', 'ACTION', ''), ('#1595', 'ISSUE', ''), ('gkorland@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/utils.js'])",
            "num_files":1.0
        },
        {
            "index":308,
            "vuln_id":"GHSA-3r8j-pmch-5j2h",
            "cwe_id":"{'CWE-209'}",
            "score":3.5,
            "chain":"{'https:\/\/github.com\/Sylius\/Sylius\/commit\/be245302dfc594d8690fe50dd47631d186aa945f'}",
            "dataset":"osv",
            "summary":"Internal exception message exposure for login action in Sylius ## Internal exception message exposure for login action\n\n### Impact\nException messages from internal exceptions (like database exception) are wrapped by `\\Symfony\\Component\\Security\\Core\\Exception\\AuthenticationServiceException` and propagated through the system to UI. Therefore, some internal system information may leak and be visible to the customer. \n\nA validation message with the exception details will be presented to the user when one will try to log into the shop. \n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\n### Workarounds\nThe `src\/Sylius\/Bundle\/UiBundle\/Resources\/views\/Security\/_login.html.twig` file should be overridden and lines https:\/\/github.com\/Sylius\/Sylius\/blob\/1.4\/src\/Sylius\/Bundle\/UiBundle\/Resources\/views\/Security\/_login.html.twig#L13-L17 should be replaced with\n```twig\n        {% if last_error %}\n            <div class=\"ui left aligned basic segment\">\n                {{ messages.error(last_error.messageKey) }}\n            <\/div>\n        {% endif %}\n``` \n\nThe `messageKey` field should be used instead of the `message`.",
            "published_date":"2019-12-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/Sylius\/Sylius",
            "commit_href":"https:\/\/github.com\/Sylius\/Sylius\/commit\/be245302dfc594d8690fe50dd47631d186aa945f",
            "commit_sha":"be245302dfc594d8690fe50dd47631d186aa945f",
            "patch":"SINGLE",
            "chain_ord":"['be245302dfc594d8690fe50dd47631d186aa945f']",
            "before_first_fix_commit":"{'19b2fe4a6cdb2186489221ea8b5e5628c8223286'}",
            "last_fix_commit":"be245302dfc594d8690fe50dd47631d186aa945f",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/04\/2019, 12:59:26",
            "message":"Generate changelog for v1.3.14",
            "author":"Kamil Kokot",
            "comments":null,
            "stats":"{'additions': 17, 'deletions': 0, 'total': 17}",
            "files":"{'CHANGELOG-1.3.md': {'additions': 17, 'deletions': 0, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Sylius\/Sylius\/raw\/be245302dfc594d8690fe50dd47631d186aa945f\/CHANGELOG-1.3.md', 'patch': '@@ -1,5 +1,22 @@\\n # CHANGELOG FOR `1.3.X`\\n \\n+## v1.3.14 (2019-12-03)\\n+\\n+### CVE-2019-16768: Internal exception message exposure in login action.\\n+\\n+#### Details\\n+\\n+Exception messages from internal exceptions (like database exception) are wrapped by \\n+`\\\\Symfony\\\\Component\\\\Security\\\\Core\\\\Exception\\\\AuthenticationServiceException` and propagated through the system to UI. \\n+Therefore, some internal system information may leak and be visible to the customer.\\n+\\n+A validation message with the exception details will be presented to the user when one will try to log into the shop.\\n+\\n+#### Workaround\\n+\\n+This release patches the reported vulnerability. The `src\/Sylius\/Bundle\/UiBundle\/Resources\/views\/Security\/_login.html.twig` \\n+file from Sylius should be overridden and `{{ messages.error(last_error.message) }}` changed to `{{ messages.error(last_error.messageKey) }}`.\\n+\\n ## v1.3.13 (2019-05-29)\\n \\n #### Details'}}",
            "message_norm":"generate changelog for v1.3.14",
            "language":"da",
            "entities":"[('v1.3.14', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['CHANGELOG-1.3.md'])",
            "num_files":1.0
        },
        {
            "index":2561,
            "vuln_id":"GHSA-pfj3-56hm-jwq5",
            "cwe_id":"{'CWE-74'}",
            "score":7.9,
            "chain":"{'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/4cf373f7352f5d95f0bf6512af8af326b31c835e'}",
            "dataset":"osv",
            "summary":"Template injection in cron-utils ### Impact\nA Template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected.\n\n### Patches\nThe issue was patched and a new version released. Please upgrade to version 9.1.3.\n\n### Workarounds\nThere are no known workarounds up to this moment.\n\n### References\nA description of the issue is provided in [issue 461](https:\/\/github.com\/jmrozanec\/cron-utils\/issues\/461)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [cron-utils Github repository](https:\/\/github.com\/jmrozanec\/cron-utils)",
            "published_date":"2020-11-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/jmrozanec\/cron-utils",
            "commit_href":"https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "commit_sha":"4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "patch":"SINGLE",
            "chain_ord":"['4cf373f7352f5d95f0bf6512af8af326b31c835e']",
            "before_first_fix_commit":"{'864f9f09af58bd48133a1492a09fb7fbc1c5858b'}",
            "last_fix_commit":"4cf373f7352f5d95f0bf6512af8af326b31c835e",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/17\/2020, 13:53:58",
            "message":"Update dependencies to fix security vulnerability.",
            "author":"Joze Rozanec",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 3, 'total': 7}",
            "files":"{'pom.xml': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jmrozanec\/cron-utils\/raw\/4cf373f7352f5d95f0bf6512af8af326b31c835e\/pom.xml', 'patch': '@@ -121,11 +121,12 @@\\n             <scope>test<\/scope>\\n         <\/dependency>\\n         <dependency>\\n-            <groupId>org.hibernate<\/groupId>\\n-            <artifactId>hibernate-validator<\/artifactId>\\n+            <groupId>org.apache.bval<\/groupId>\\n+            <artifactId>bval-jsr<\/artifactId>\\n+            <version>1.1.2<\/version>\\n+            <!--The Hibernate dependency is no longer used, due to security vulnerabilities -->\\n             <!-- https:\/\/stackoverflow.com\/questions\/48323244\/java-lang-nosuchmethoderror-javax-validation-bootstrapconfiguration-getclockproExecutionTimeQuartzIntegrationTest -->\\n             <!-- https:\/\/stackoverflow.com\/questions\/24386771\/javax-validation-validationexception-hv000183-unable-to-load-javax-el-express -->\\n-            <version>5.3.6.Final<\/version>\\n             <scope>test<\/scope>\\n         <\/dependency>\\n         <dependency>'}}",
            "message_norm":"update dependencies to fix security vulnerability.",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['pom.xml'])",
            "num_files":1.0
        },
        {
            "index":855,
            "vuln_id":"GHSA-6jmh-9gqm-5xrx",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/f59ffb02984c0ce2fbb19ac39365066507de9370'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery (CSRF) in livehelperchat A CSRF issue is found in the audit configuration under settings. It was found that no CSRF token validation is getting done on the server-side. If we remove the CSRF token and keep the CSRF token field empty, the action is getting performed.",
            "published_date":"2022-01-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/livehelperchat\/livehelperchat",
            "commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/f59ffb02984c0ce2fbb19ac39365066507de9370",
            "commit_sha":"f59ffb02984c0ce2fbb19ac39365066507de9370",
            "patch":"SINGLE",
            "chain_ord":"['f59ffb02984c0ce2fbb19ac39365066507de9370']",
            "before_first_fix_commit":"{'58df43e89c5b2c11be4994a71e84c93d469dc7bd'}",
            "last_fix_commit":"f59ffb02984c0ce2fbb19ac39365066507de9370",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2022, 19:04:29",
            "message":"Missing csfr check",
            "author":"Remigijus Kiminas",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'lhc_web\/modules\/lhaudit\/configuration.php': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/f59ffb02984c0ce2fbb19ac39365066507de9370\/lhc_web%2Fmodules%2Flhaudit%2Fconfiguration.php', 'patch': \"@@ -7,6 +7,11 @@\\n \\n if ( isset($_POST['StoreOptions']) ) {\\n \\n+    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\\n+        erLhcoreClassModule::redirect();\\n+        exit;\\n+    }\\n+    \\n     $definition = array(\\n         'days_log' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int'),\\n         'log_js' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\"}}",
            "message_norm":"missing csfr check",
            "language":"de",
            "entities":"[('csfr', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lhc_web\/modules\/lhaudit\/configuration.php'])",
            "num_files":1.0
        },
        {
            "index":1400,
            "vuln_id":"GHSA-9jjr-qqfp-ppwx",
            "cwe_id":"{'CWE-94'}",
            "score":9.6,
            "chain":"{'https:\/\/github.com\/jupyterhub\/binderhub\/commit\/195caac172690456dcdc8cc7a6ca50e05abf8182'}",
            "dataset":"osv",
            "summary":"remote code execution via git repo provider ### Impact\n\nA remote code execution vulnerability has been identified in BinderHub, where providing BinderHub with maliciously crafted input could execute code in the BinderHub context, with the potential to egress credentials of the BinderHub deployment, including JupyterHub API tokens, kubernetes service accounts, and docker registry credentials. This may provide the ability to manipulate images and other user created pods in the deployment, with the potential to escalate to the host depending on the underlying kubernetes configuration.\n\n### Patches\n\nPatch below, or [on GitHub](https:\/\/github.com\/jupyterhub\/binderhub\/commit\/195caac172690456dcdc8cc7a6ca50e05abf8182.patch)\n\n```diff\nFrom 9f4043d9dddc1174920e687773f27b7933f48ab6 Mon Sep 17 00:00:00 2001\nFrom: Riccardo Castellotti <rcastell@cern.ch>\nDate: Thu, 19 Aug 2021 15:49:43 +0200\nSubject: [PATCH] Explicitly separate git-ls-remote options from positional\n arguments\n\n---\n binderhub\/repoproviders.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/binderhub\/repoproviders.py b\/binderhub\/repoproviders.py\nindex f33347b..5d4b87c 100755\n--- a\/binderhub\/repoproviders.py\n+++ b\/binderhub\/repoproviders.py\n@@ -484,7 +484,7 @@ class GitRepoProvider(RepoProvider):\n             self.sha1_validate(self.unresolved_ref)\n         except ValueError:\n             # The ref is a head\/tag and we resolve it using `git ls-remote`\n-            command = [\"git\", \"ls-remote\", self.repo, self.unresolved_ref]\n+            command = [\"git\", \"ls-remote\", \"--\", self.repo, self.unresolved_ref]\n             result = subprocess.run(command, universal_newlines=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n             if result.returncode:\n                 raise RuntimeError(\"Unable to run git ls-remote to get the `resolved_ref`: {}\".format(result.stderr))\n-- \n2.25.1\n\n```\n\n### Workarounds\n\nDisable the git repo provider by specifying the `BinderHub.repo_providers` config, e.g.:\n\n```python\nfrom binderhub.repoproviders import (GitHubRepoProvider,\n                            GitLabRepoProvider, GistRepoProvider,\n                            ZenodoProvider, FigshareProvider, HydroshareProvider,\n                            DataverseProvider)\n\nc.BinderHub.repo_providers =  {\n            'gh': GitHubRepoProvider,\n            'gist': GistRepoProvider,\n            'gl': GitLabRepoProvider,\n            'zenodo': ZenodoProvider,\n            'figshare': FigshareProvider,\n            'hydroshare': HydroshareProvider,\n            'dataverse': DataverseProvider,\n        }\n```\n\n### References\n\nCredit: Jose Carlos Luna Duran (CERN) and Riccardo Castellotti (CERN).\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Email us at [security@ipython.org](mailto:security@ipython.org)",
            "published_date":"2021-08-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/jupyterhub\/binderhub",
            "commit_href":"https:\/\/github.com\/jupyterhub\/binderhub\/commit\/195caac172690456dcdc8cc7a6ca50e05abf8182",
            "commit_sha":"195caac172690456dcdc8cc7a6ca50e05abf8182",
            "patch":"SINGLE",
            "chain_ord":"['195caac172690456dcdc8cc7a6ca50e05abf8182']",
            "before_first_fix_commit":"{'034430adc8ed379135f3ef46ee6ca650781ef67c'}",
            "last_fix_commit":"195caac172690456dcdc8cc7a6ca50e05abf8182",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/19\/2021, 13:49:43",
            "message":"Explicitly separate git-ls-remote options from positional arguments",
            "author":"Riccardo Castellotti",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'binderhub\/repoproviders.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/binderhub\/raw\/195caac172690456dcdc8cc7a6ca50e05abf8182\/binderhub%2Frepoproviders.py', 'patch': '@@ -484,7 +484,7 @@ async def get_resolved_ref(self):\\n             self.sha1_validate(self.unresolved_ref)\\n         except ValueError:\\n             # The ref is a head\/tag and we resolve it using `git ls-remote`\\n-            command = [\"git\", \"ls-remote\", self.repo, self.unresolved_ref]\\n+            command = [\"git\", \"ls-remote\", \"--\", self.repo, self.unresolved_ref]\\n             result = subprocess.run(command, universal_newlines=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)\\n             if result.returncode:\\n                 raise RuntimeError(\"Unable to run git ls-remote to get the `resolved_ref`: {}\".format(result.stderr))'}}",
            "message_norm":"explicitly separate git-ls-remote options from positional arguments",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['binderhub\/repoproviders.py'])",
            "num_files":1.0
        },
        {
            "index":3272,
            "vuln_id":"GHSA-wg4r-q74r-p7c8",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting due to unrestricted file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
            "commit_sha":"4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
            "patch":"SINGLE",
            "chain_ord":"['4b6e6603c714aab1de346c5f5cb0bbb4c871be1f']",
            "before_first_fix_commit":"{'d4363f73fb50193c9701982b59642696edf834a1', '61a23da1925119454d8477e9cf884b6cba93364c'}",
            "last_fix_commit":"4b6e6603c714aab1de346c5f5cb0bbb4c871be1f",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 12:16:25",
            "message":"Merge pull request #1630 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/4b6e6603c714aab1de346c5f5cb0bbb4c871be1f\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -305,6 +305,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".asp\")\\t\\t\\t\\n+\\t\\t\\t|| $isDangerStr($filename , \".xsl\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
            "message_norm":"merge pull request #1630 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
            "language":"en",
            "entities":"[('#1630', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":725,
            "vuln_id":"GHSA-5xwc-mrhx-5g3m",
            "cwe_id":"{'CWE-824'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in `MatrixDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagV3(\n  diagonal=[1,0],\n  k=[],\n  num_rows=[1,2,3],\n  num_cols=[4,5],\n  padding_value=[],\n  align='RIGHT_RIGHT')\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong:\n\n```cc\n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f2a673bd34f0d64b8e40a551ac78989d16daad09](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "commit_sha":"f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "patch":"SINGLE",
            "chain_ord":"['f2a673bd34f0d64b8e40a551ac78989d16daad09']",
            "before_first_fix_commit":"{'ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}",
            "last_fix_commit":"f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 02:00:00",
            "message":"Add missing validation to `matrix_diag_op.cc`\n\nPiperOrigin-RevId: 387923533\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f2a673bd34f0d64b8e40a551ac78989d16daad09\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_diag_op.cc', 'patch': '@@ -73,6 +73,9 @@ class MatrixDiagPartOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {\\n@@ -179,6 +182,9 @@ class MatrixDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}",
            "message_norm":"add missing validation to `matrix_diag_op.cc`\n\npiperorigin-revid: 387923533\nchange-id: idfffeb328d5f9c6748d992d28a56d6e9e45103a0",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('387923533', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc'])",
            "num_files":1.0
        },
        {
            "index":164,
            "vuln_id":"GHSA-2xgj-xhgf-ggjv",
            "cwe_id":"{'CWE-120'}",
            "score":3.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `BandedTriangularSolve` ### Impact\nAn attacker can trigger a heap buffer overflow in Eigen implementation of `tf.raw_ops.BandedTriangularSolve`:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n  \nmatrix_array = np.array([])\nmatrix_tensor = tf.convert_to_tensor(np.reshape(matrix_array,(0,1)),dtype=tf.float32)\nrhs_array = np.array([1,1])\nrhs_tensor = tf.convert_to_tensor(np.reshape(rhs_array,(1,2)),dtype=tf.float32)\ntf.raw_ops.BandedTriangularSolve(matrix=matrix_tensor,rhs=rhs_tensor)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc#L269-L278) calls `ValidateInputTensors` for input validation but fails to validate that the two tensors are not empty:\n  \n```cc\nvoid ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0, const Tensor& in1) {\n  OP_REQUIRES(\n      ctx, in0.dims() >= 2, \n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n\n  OP_REQUIRES(\n      ctx, in1.dims() >= 2,\n      errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1.dims()));\n}\n``` \n\nFurthermore, since `OP_REQUIRES` macro only stops execution of current function after setting `ctx->status()` to a non-OK value, callers of helper functions that use `OP_REQUIRES` must check value of `ctx->status()` before continuing. This doesn't happen [in this op's implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eccb7ec454e6617738554a255d77f08e60ee0808\/tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc#L219), hence the validation that is present is also not effective.\n\n### Patches\nWe have patched the issue in GitHub commit [ba6822bd7b7324ba201a28b2f278c29a98edbef2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ba6822bd7b7324ba201a28b2f278c29a98edbef2) followed by GitHub commit [0ab290774f91a23bebe30a358fde4e53ab4876a0](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ye Zhang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0ab290774f91a23bebe30a358fde4e53ab4876a0",
            "commit_sha":"0ab290774f91a23bebe30a358fde4e53ab4876a0",
            "patch":"MULTI",
            "chain_ord":"['ba6822bd7b7324ba201a28b2f278c29a98edbef2', '0ab290774f91a23bebe30a358fde4e53ab4876a0']",
            "before_first_fix_commit":"{'327ef310be67923824814e85e13007e9699f4e0d'}",
            "last_fix_commit":"0ab290774f91a23bebe30a358fde4e53ab4876a0",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/12\/2021, 01:36:43",
            "message":"Ensure validation sticks in banded_triangular_solve_op\n\nPiperOrigin-RevId: 373275480\nChange-Id: Id7717cf275b2d6fdb9441fbbe166d555182d2e79",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0ab290774f91a23bebe30a358fde4e53ab4876a0\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fbanded_triangular_solve_op.cc', 'patch': '@@ -217,6 +217,7 @@ class BandedTriangularSolveOpCpu : public OpKernel {\\n     const Tensor& in1 = ctx->input(1);\\n \\n     ValidateInputTensors(ctx, in0, in1);\\n+    if (!ctx->status().ok()) return;\\n \\n     MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\\n     OP_REQUIRES('}}",
            "message_norm":"ensure validation sticks in banded_triangular_solve_op\n\npiperorigin-revid: 373275480\nchange-id: id7717cf275b2d6fdb9441fbbe166d555182d2e79",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('373275480', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/banded_triangular_solve_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1554,
            "vuln_id":"GHSA-cgrj-xjm7-9q27",
            "cwe_id":"{'CWE-601'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/web2py\/web2py\/commit\/a181b855a43cb8b479d276b082cfcde385768451'}",
            "dataset":"osv",
            "summary":"Open redirect in web2py Open redirect vulnerability in web2py versions prior to 2.22.5 allows a remote attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having a user to access a specially crafted URL.",
            "published_date":"2022-06-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/web2py\/web2py",
            "commit_href":"https:\/\/github.com\/web2py\/web2py\/commit\/a181b855a43cb8b479d276b082cfcde385768451",
            "commit_sha":"a181b855a43cb8b479d276b082cfcde385768451",
            "patch":"SINGLE",
            "chain_ord":"['a181b855a43cb8b479d276b082cfcde385768451']",
            "before_first_fix_commit":"{'842994def40ca565aa954a13aa065d2da1090948'}",
            "last_fix_commit":"a181b855a43cb8b479d276b082cfcde385768451",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/04\/2022, 17:57:08",
            "message":"added validation of send attribute in admin",
            "author":"Massimo Di Pierro",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'applications\/admin\/controllers\/default.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/web2py\/web2py\/raw\/a181b855a43cb8b479d276b082cfcde385768451\/applications%2Fadmin%2Fcontrollers%2Fdefault.py', 'patch': '@@ -12,7 +12,7 @@\\n from gluon.admin import *\\n from gluon.fileutils import abspath, read_file, write_file\\n from gluon.utils import web2py_uuid\\n-from gluon.tools import Config\\n+from gluon.tools import Config, prevent_open_redirect\\n from gluon.compileapp import find_exposed_functions\\n from glob import glob\\n from gluon._compat import iteritems, PY2, pickle, xrange, urlopen, to_bytes, StringIO, to_native, reload\\n@@ -118,7 +118,7 @@ def get_app(name=None):\\n def index():\\n     \"\"\" Index handler \"\"\"\\n \\n-    send = request.vars.send\\n+    send = prevent_open_redirect(request.vars.send)\\n     if DEMO_MODE:\\n         session.authorized = True\\n         session.last_time = t0'}}",
            "message_norm":"added validation of send attribute in admin",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('admin', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['applications\/admin\/controllers\/default.py'])",
            "num_files":1.0
        },
        {
            "index":2733,
            "vuln_id":"GHSA-qc36-q22q-cjw3",
            "cwe_id":"{'CWE-147'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2', 'https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce'}",
            "dataset":"osv",
            "summary":"SMTP command injection in lettre ### Impact\n\nAffected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.\n\n### Fix\n\nThe flaw is fixed by correctly handling consecutive CRLF sequences.\n\n### References\n\n* [RUSTSEC-2021-0069](https:\/\/rustsec.org\/advisories\/RUSTSEC-2021-0069.html)",
            "published_date":"2021-07-12",
            "chain_len":2,
            "project":"https:\/\/github.com\/lettre\/lettre",
            "commit_href":"https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2",
            "commit_sha":"93458d01fed0ec81c0e7b4e98e6f35961356fae2",
            "patch":"MULTI",
            "chain_ord":"['93458d01fed0ec81c0e7b4e98e6f35961356fae2', '8bfc20506cc5e098fe6eb3d1cafe3bea791215ce']",
            "before_first_fix_commit":"{'d930c42d5069e344a9dfa84ebe4b60bf3b11ac64'}",
            "last_fix_commit":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/22\/2021, 17:31:36",
            "message":"fix(transport-smtp): Fix transparency codec\n\nIt fails to add transparency when a period is preceded by two\nsuccessive CRLF.",
            "author":"Paolo Barbolini",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 2, 'total': 13}",
            "files":"{'src\/transport\/smtp\/client\/mod.rs': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lettre\/lettre\/raw\/93458d01fed0ec81c0e7b4e98e6f35961356fae2\/src%2Ftransport%2Fsmtp%2Fclient%2Fmod.rs', 'patch': '@@ -78,7 +78,15 @@ impl ClientCodec {\\n                     match self.escape_count {\\n                         0 => self.escape_count = if *byte == b\\'\\\\r\\' { 1 } else { 0 },\\n                         1 => self.escape_count = if *byte == b\\'\\\\n\\' { 2 } else { 0 },\\n-                        2 => self.escape_count = if *byte == b\\'.\\' { 3 } else { 0 },\\n+                        2 => {\\n+                            self.escape_count = if *byte == b\\'.\\' {\\n+                                3\\n+                            } else if *byte == b\\'\\\\r\\' {\\n+                                1\\n+                            } else {\\n+                                0\\n+                            }\\n+                        }\\n                         _ => unreachable!(),\\n                     }\\n                     if self.escape_count == 3 {\\n@@ -111,6 +119,7 @@ mod test {\\n         let mut buf: Vec<u8> = vec![];\\n \\n         codec.encode(b\"test\\\\r\\\\n\", &mut buf);\\n+        codec.encode(b\"test\\\\r\\\\n\\\\r\\\\n\", &mut buf);\\n         codec.encode(b\".\\\\r\\\\n\", &mut buf);\\n         codec.encode(b\"\\\\r\\\\ntest\", &mut buf);\\n         codec.encode(b\"te\\\\r\\\\n.\\\\r\\\\nst\", &mut buf);\\n@@ -121,7 +130,7 @@ mod test {\\n         codec.encode(b\"test\", &mut buf);\\n         assert_eq!(\\n             String::from_utf8(buf).unwrap(),\\n-            \"test\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n+            \"test\\\\r\\\\ntest\\\\r\\\\n\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n         );\\n     }'}}",
            "message_norm":"fix(transport-smtp): fix transparency codec\n\nit fails to add transparency when a period is preceded by two\nsuccessive crlf.",
            "language":"en",
            "entities":"[('fix(transport', 'ACTION', ''), ('fix', 'ACTION', ''), ('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/transport\/smtp\/client\/mod.rs'])",
            "num_files":1.0
        },
        {
            "index":3158,
            "vuln_id":"GHSA-vq2r-5xvm-3hc3",
            "cwe_id":"{'CWE-908'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1b323042264740c398140da32e93fb9c2c9f33e'}",
            "dataset":"osv",
            "summary":"Segfault in `CTCBeamSearchDecoder` ### Impact\nDue to lack of validation in `tf.raw_ops.CTCBeamSearchDecoder`, an attacker can trigger denial of service via segmentation faults:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[18, 8, 0], dtype=tf.float32)\nsequence_length = tf.constant([11, -43, -92, 11, -89, -83, -35, -100],\nshape=[8], dtype=tf.int32)\nbeam_width = 10\ntop_paths = 3\nmerge_repeated = True\n\ntf.raw_ops.CTCBeamSearchDecoder(\n  inputs=inputs, sequence_length=sequence_length, beam_width=beam_width,\n  top_paths=top_paths, merge_repeated=merge_repeated)\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7\/tensorflow\/core\/kernels\/ctc_decoder_ops.cc#L68-L79) fails to detect cases when the input tensor is empty and proceeds to read data from a null buffer.\n  \n### Patches\nWe have patched the issue in GitHub commit [b1b323042264740c398140da32e93fb9c2c9f33e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1b323042264740c398140da32e93fb9c2c9f33e).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b1b323042264740c398140da32e93fb9c2c9f33e",
            "commit_sha":"b1b323042264740c398140da32e93fb9c2c9f33e",
            "patch":"SINGLE",
            "chain_ord":"['b1b323042264740c398140da32e93fb9c2c9f33e']",
            "before_first_fix_commit":"{'a74768f8e4efbda4def9f16ee7e13cf3922ac5f7'}",
            "last_fix_commit":"b1b323042264740c398140da32e93fb9c2c9f33e",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 21:51:41",
            "message":"Fix SEGV in CTC ops\n\nPiperOrigin-RevId: 372430279\nChange-Id: I7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/ctc_decoder_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b1b323042264740c398140da32e93fb9c2c9f33e\/tensorflow%2Fcore%2Fkernels%2Fctc_decoder_ops.cc', 'patch': '@@ -70,6 +70,9 @@ class CTCDecodeHelper {\\n     if (inputs_shape.dims() != 3) {\\n       return errors::InvalidArgument(\"inputs is not a 3-Tensor\");\\n     }\\n+    if (inputs_shape.num_elements() == 0) {\\n+      return errors::InvalidArgument(\"inputs must not be empty\");\\n+    }\\n \\n     const int64 max_time = inputs_shape.dim_size(0);\\n     const int64 batch_size = inputs_shape.dim_size(1);'}}",
            "message_norm":"fix segv in ctc ops\n\npiperorigin-revid: 372430279\nchange-id: i7ec2ad9d6f4d0980c33de45d27c6b17df5c6e26f",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('372430279', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ctc_decoder_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":389,
            "vuln_id":"GHSA-4952-p58q-6crx",
            "cwe_id":"{'CWE-87', 'CWE-79', 'CWE-75'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/jupyterlab\/jupyterlab\/commit\/504825938c0abfa2fb8ff8d529308830a5ae42ed'}",
            "dataset":"osv",
            "summary":"JupyterLab: XSS due to lack of sanitization of the action attribute of an html <form> ### Impact\n\nUntrusted notebook can execute code on load. This is a remote code execution, but requires user action to open a notebook.\n\n### Patches\n\nPatched in the following versions: 3.1.4, 3.0.17, 2.3.2, 2.2.10, 1.2.21.\n\n### References\n\n[OWASP Page on Restricting Form Submissions](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/Content_Security_Policy_Cheat_Sheet.html)\n\n### For more information\n\nIf you have any questions or comments about this advisory, or vulnerabilities to report, please email our security list security@ipython.org.\n\nCredit: Guillaume Jeanne from Google",
            "published_date":"2021-08-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/jupyterlab\/jupyterlab",
            "commit_href":"https:\/\/github.com\/jupyterlab\/jupyterlab\/commit\/504825938c0abfa2fb8ff8d529308830a5ae42ed",
            "commit_sha":"504825938c0abfa2fb8ff8d529308830a5ae42ed",
            "patch":"SINGLE",
            "chain_ord":"['504825938c0abfa2fb8ff8d529308830a5ae42ed']",
            "before_first_fix_commit":"{'ccb65656e3ed9c47d3e6fedbcff2405885d0bcaa'}",
            "last_fix_commit":"504825938c0abfa2fb8ff8d529308830a5ae42ed",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/05\/2021, 16:42:03",
            "message":"Merge pull request from GHSA-4952-p58q-6crx\n\nRemove `form` tags' `action` attribute during sanitizing.\n\nCo-authored-by: Afshin Taylor Darian <git@darian.af>",
            "author":"Steven Silvester",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 1, 'total': 1}",
            "files":"{'packages\/apputils\/src\/sanitizer.ts': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterlab\/jupyterlab\/raw\/504825938c0abfa2fb8ff8d529308830a5ae42ed\/packages%2Fapputils%2Fsrc%2Fsanitizer.ts', 'patch': \"@@ -624,7 +624,6 @@ export class Sanitizer implements ISanitizer {\\n       font: ['color', 'face', 'size'],\\n       form: [\\n         'accept',\\n-        'action',\\n         'autocomplete',\\n         'enctype',\\n         'method',\"}}",
            "message_norm":"merge pull request from ghsa-4952-p58q-6crx\n\nremove `form` tags' `action` attribute during sanitizing.\n\nco-authored-by: afshin taylor darian <git@darian.af>",
            "language":"en",
            "entities":"[('ghsa-4952-p58q-6crx', 'VULNID', 'GHSA'), ('remove', 'ACTION', ''), ('sanitizing', 'SECWORD', ''), ('git@darian.af', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/apputils\/src\/sanitizer.ts'])",
            "num_files":1.0
        },
        {
            "index":3262,
            "vuln_id":"GHSA-wcm2-9c89-wmfm",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jquery\/jquery-ui\/commit\/7e9060c109b928769a664dbcc2c17bd21231b6f3'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in jquery-ui Cross-site scripting (XSS) vulnerability in jquery.ui.dialog.js in the Dialog widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title option.",
            "published_date":"2017-10-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/jquery\/jquery-ui",
            "commit_href":"https:\/\/github.com\/jquery\/jquery-ui\/commit\/7e9060c109b928769a664dbcc2c17bd21231b6f3",
            "commit_sha":"7e9060c109b928769a664dbcc2c17bd21231b6f3",
            "patch":"SINGLE",
            "chain_ord":"['7e9060c109b928769a664dbcc2c17bd21231b6f3']",
            "before_first_fix_commit":"{'60486ac632a0a1bbbb0c7449fe17bccfae11af80'}",
            "last_fix_commit":"7e9060c109b928769a664dbcc2c17bd21231b6f3",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/26\/2012, 09:14:36",
            "message":"Dialog: Extract setting the title into a _title method, use .text() to prevent XSS. Fixes #6016 - Dialog: Title XSS Vulnerability.",
            "author":"J\u00f6rn Zaefferer",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 4, 'total': 13}",
            "files":"{'ui\/jquery.ui.dialog.js': {'additions': 9, 'deletions': 4, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery\/jquery-ui\/raw\/7e9060c109b928769a664dbcc2c17bd21231b6f3\/ui%2Fjquery.ui.dialog.js', 'patch': '@@ -352,14 +352,21 @@ $.widget(\"ui.dialog\", {\\n \\t\\tuiDialogTitle = $( \"<span>\" )\\n \\t\\t\\t.uniqueId()\\n \\t\\t\\t.addClass( \"ui-dialog-title\" )\\n-\\t\\t\\t.html( this.options.title || \"&#160;\" )\\n \\t\\t\\t.prependTo( this.uiDialogTitlebar );\\n+\\t\\tthis._title( uiDialogTitle );\\n \\n \\t\\tthis.uiDialog.attr({\\n \\t\\t\\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\\n \\t\\t});\\n \\t},\\n \\n+\\t_title: function( title ) {\\n+\\t\\tif ( !this.options.title ) {\\n+\\t\\t\\ttitle.html( \"&#160;\" );\\n+\\t\\t}\\n+\\t\\ttitle.text( this.options.title );\\n+\\t},\\n+\\n \\t_createButtonPane: function() {\\n \\t\\tvar uiDialogButtonPane = ( this.uiDialogButtonPane = $( \"<div>\" ) )\\n \\t\\t\\t.addClass( \"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\" );\\n@@ -600,9 +607,7 @@ $.widget(\"ui.dialog\", {\\n \\t\\t}\\n \\n \\t\\tif ( key === \"title\" ) {\\n-\\t\\t\\t\/\/ convert whatever was passed in to a string, for html() to not throw up\\n-\\t\\t\\t$( \".ui-dialog-title\", this.uiDialogTitlebar )\\n-\\t\\t\\t\\t.html( \"\" + ( value || \"&#160;\" ) );\\n+\\t\\t\\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\\n \\t\\t}\\n \\t},'}}",
            "message_norm":"dialog: extract setting the title into a _title method, use .text() to prevent xss. fixes #6016 - dialog: title xss vulnerability.",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('xss', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#6016', 'ISSUE', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ui\/jquery.ui.dialog.js'])",
            "num_files":1.0
        },
        {
            "index":567,
            "vuln_id":"GHSA-56wv-2wr9-3h9r",
            "cwe_id":"{'CWE-347'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/e592f106edd5acf6dacedfab2ad16fe6c735c9d1', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/7b64e3efaa806b4daaf73bb5172af3581812f8de', 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/4a16daeaf139be20654ef58a9fe4c79dc030458c'}",
            "dataset":"osv",
            "summary":"Improper Verification of Cryptographic Signature in fastecdsa An issue was discovered in fastecdsa before 2.1.2. When using the NIST P-256 curve in the ECDSA implementation, the point at infinity is mishandled. This means that for an extreme value in k and s^-1, the signature verification fails even if the signature is correct. This behavior is not solely a usability problem. There are some threat models where an attacker can benefit by successfully guessing users for whom signature verification will fail.",
            "published_date":"2021-10-12",
            "chain_len":3,
            "project":"https:\/\/github.com\/AntonKueltz\/fastecdsa",
            "commit_href":"https:\/\/github.com\/AntonKueltz\/fastecdsa\/commit\/7b64e3efaa806b4daaf73bb5172af3581812f8de",
            "commit_sha":"7b64e3efaa806b4daaf73bb5172af3581812f8de",
            "patch":"MULTI",
            "chain_ord":"['e592f106edd5acf6dacedfab2ad16fe6c735c9d1', '7b64e3efaa806b4daaf73bb5172af3581812f8de', '4a16daeaf139be20654ef58a9fe4c79dc030458c']",
            "before_first_fix_commit":"{'7b64e3efaa806b4daaf73bb5172af3581812f8de'}",
            "last_fix_commit":"4a16daeaf139be20654ef58a9fe4c79dc030458c",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/14\/2020, 09:45:48",
            "message":"Update docs to v2.1.2",
            "author":"AntonKueltz",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'docs\/conf.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/AntonKueltz\/fastecdsa\/raw\/7b64e3efaa806b4daaf73bb5172af3581812f8de\/docs%2Fconf.py', 'patch': \"@@ -64,7 +64,7 @@\\n # The short X.Y version.\\n version = '2.1'\\n # The full version, including alpha\/beta\/rc tags.\\n-release = '2.1.1'\\n+release = '2.1.2'\\n \\n # The language for content autogenerated by Sphinx. Refer to documentation\\n # for a list of supported languages.\"}}",
            "message_norm":"update docs to v2.1.2",
            "language":"sl",
            "entities":"[('v2.1.2', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['docs\/conf.py'])",
            "num_files":1.0
        },
        {
            "index":1300,
            "vuln_id":"GHSA-934w-hvj4-7fr6",
            "cwe_id":"{'CWE-22'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/commit\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2'}",
            "dataset":"osv",
            "summary":"Path Traversal in jsreport-chrome-pdf This affects the package jsreport-chrome-pdf before 1.10.0.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/jsreport\/jsreport-chrome-pdf",
            "commit_href":"https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/commit\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2",
            "commit_sha":"6750b2f77d05cb843aefc1c4a98097a3bd33a6a2",
            "patch":"SINGLE",
            "chain_ord":"['6750b2f77d05cb843aefc1c4a98097a3bd33a6a2']",
            "before_first_fix_commit":"{'ba51764dae68403893f9f0e0ce7d060b78ee26c4'}",
            "last_fix_commit":"6750b2f77d05cb843aefc1c4a98097a3bd33a6a2",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/30\/2020, 16:09:42",
            "message":"block file requests",
            "author":"BJR Matos",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 0, 'total': 19}",
            "files":"{'lib\/conversion.js': {'additions': 19, 'deletions': 0, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/raw\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2\/lib%2Fconversion.js', 'patch': \"@@ -38,6 +38,12 @@ module.exports = async ({ reporter, getBrowser, htmlUrl, strategy, timeout, req,\\n       return\\n     }\\n \\n+    await page.setRequestInterception(true)\\n+\\n+    if (executionInfo.error) {\\n+      return\\n+    }\\n+\\n     page.on('pageerror', (err) => {\\n       pageLog('warn', `Page error: ${err.message}${err.stack ? ` , stack: ${err.stack}` : ''}`)\\n     })\\n@@ -64,6 +70,19 @@ module.exports = async ({ reporter, getBrowser, htmlUrl, strategy, timeout, req,\\n       }\\n \\n       pageLog('debug', `Page request: ${r.method()} (${r.resourceType()}) ${trimUrl(r.url())}${detail}`)\\n+\\n+      const isRelativeToHtmlUrl = r.url().lastIndexOf(htmlUrl, 0) === 0\\n+\\n+      if (\\n+        !isRelativeToHtmlUrl &&\\n+        \/\/ potentially dangerous request to local file\\n+        r.url().lastIndexOf('file:\/\/\/', 0) === 0\\n+      ) {\\n+        r.abort('accessdenied')\\n+        return\\n+      }\\n+\\n+      r.continue()\\n     })\\n \\n     page.on('requestfinished', (r) => {\"}}",
            "message_norm":"block file requests",
            "language":"fr",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/conversion.js'])",
            "num_files":1.0
        },
        {
            "index":2855,
            "vuln_id":"GHSA-r4pj-74mg-8868",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a'}",
            "dataset":"osv",
            "summary":"Division by 0 in `Conv2DBackpropFilter` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.Conv2DBackpropFilter`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 1, 0], dtype=tf.float32)\nfilter_sizes = tf.constant([1, 1, 1, 1], shape=[4], dtype=tf.int32)\nout_backprop = tf.constant([], shape=[0, 0, 1, 1], dtype=tf.float32)\n\ntf.raw_ops.Conv2DBackpropFilter(input=input_tensor, filter_sizes=filter_sizes,\n                                out_backprop=out_backprop,\n                                strides=[1, 66, 18, 1], use_cudnn_on_gpu=True,\n                                padding='SAME', explicit_paddings=[],\n                                data_format='NHWC', dilations=[1, 1, 1, 1])\n```                 \n                    \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/496c2630e51c1a478f095b084329acedb253db6b\/tensorflow\/core\/kernels\/conv_grad_shape_utils.cc#L130) does a modulus operation where the divisor is controlled by the caller:\n\n```cc \n  if (dims->in_depth % filter_shape.dim_size(num_dims - 2)) { ... }\n```\n    \n### Patches\nWe have patched the issue in GitHub commit [fca9874a9b42a2134f907d2fb46ab774a831404a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a",
            "commit_sha":"fca9874a9b42a2134f907d2fb46ab774a831404a",
            "patch":"SINGLE",
            "chain_ord":"['fca9874a9b42a2134f907d2fb46ab774a831404a']",
            "before_first_fix_commit":"{'496c2630e51c1a478f095b084329acedb253db6b'}",
            "last_fix_commit":"fca9874a9b42a2134f907d2fb46ab774a831404a",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/20\/2021, 00:33:11",
            "message":"Prevent another division by zero.\n\nPiperOrigin-RevId: 369338598\nChange-Id: I55471d363e401fdcf8d259670ad4eef672b731e2",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_shape_utils.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/fca9874a9b42a2134f907d2fb46ab774a831404a\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_shape_utils.cc', 'patch': '@@ -127,6 +127,10 @@ Status ConvBackpropComputeDimensionsV2(\\n   \/\/ dimensions of the filter Tensor.\\n   VLOG(2) << \"input vs filter_in depth \" << dims->in_depth << \" \"\\n           << filter_shape.dim_size(num_dims - 2);\\n+  if (filter_shape.dim_size(num_dims - 2) <= 0) {\\n+    return errors ::InvalidArgument(\\n+        label, \": filter depth must be strictly greated than zero\");\\n+  }\\n   if (dims->in_depth % filter_shape.dim_size(num_dims - 2)) {\\n     return errors::InvalidArgument(\\n         label, \": input depth must be evenly divisible by filter depth\");'}}",
            "message_norm":"prevent another division by zero.\n\npiperorigin-revid: 369338598\nchange-id: i55471d363e401fdcf8d259670ad4eef672b731e2",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('369338598', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_shape_utils.cc'])",
            "num_files":1.0
        },
        {
            "index":1339,
            "vuln_id":"GHSA-98gj-wwxm-cj3h",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/lepture\/mistune\/commit\/5f06d724bc05580e7f203db2d4a4905fc1127f98'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects mistune Cross-site scripting (XSS) vulnerability in the _keyify function in mistune.py in Mistune before 0.8.1 allows remote attackers to inject arbitrary web script or HTML by leveraging failure to escape the \"key\" argument.",
            "published_date":"2019-01-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/lepture\/mistune",
            "commit_href":"https:\/\/github.com\/lepture\/mistune\/commit\/5f06d724bc05580e7f203db2d4a4905fc1127f98",
            "commit_sha":"5f06d724bc05580e7f203db2d4a4905fc1127f98",
            "patch":"SINGLE",
            "chain_ord":"['5f06d724bc05580e7f203db2d4a4905fc1127f98']",
            "before_first_fix_commit":"{'7f7f106a717e6cf58012304e56b41d6fb2b98e5f'}",
            "last_fix_commit":"5f06d724bc05580e7f203db2d4a4905fc1127f98",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/20\/2017, 15:15:09",
            "message":"Fix CVE-2017-16876",
            "author":"Hsiaoming Yang",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 3, 'total': 8}",
            "files":"{'mistune.py': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lepture\/mistune\/raw\/5f06d724bc05580e7f203db2d4a4905fc1127f98\/mistune.py', 'patch': \"@@ -11,7 +11,7 @@\\n import re\\n import inspect\\n \\n-__version__ = '0.8'\\n+__version__ = '0.8.1'\\n __author__ = 'Hsiaoming Yang <me@lepture.com>'\\n __all__ = [\\n     'BlockGrammar', 'BlockLexer',\\n@@ -48,7 +48,8 @@ def _pure_pattern(regex):\\n \\n \\n def _keyify(key):\\n-    return _key_pattern.sub(' ', key.lower())\\n+    key = escape(key.lower(), quote=True)\\n+    return _key_pattern.sub(' ', key)\\n \\n \\n def escape(text, quote=False, smart_amp=True):\\n@@ -445,7 +446,8 @@ class InlineGrammar(object):\\n     inline_html = re.compile(\\n         r'^(?:%s|%s|%s)' % (\\n             r'<!--[\\\\s\\\\S]*?-->',\\n-            r'<(\\\\w+%s)((?:%s)*?)\\\\s*>([\\\\s\\\\S]*?)<\\\\\/\\\\1>' % (_valid_end, _valid_attr),\\n+            r'<(\\\\w+%s)((?:%s)*?)\\\\s*>([\\\\s\\\\S]*?)<\\\\\/\\\\1>' % (\\n+                _valid_end, _valid_attr),\\n             r'<\\\\w+%s(?:%s)*?\\\\s*\\\\\/?>' % (_valid_end, _valid_attr),\\n         )\\n     )\"}}",
            "message_norm":"fix cve-2017-16876",
            "language":"fr",
            "entities":"[('fix', 'ACTION', ''), ('cve-2017-16876', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['mistune.py'])",
            "num_files":1.0
        },
        {
            "index":2476,
            "vuln_id":"GHSA-mw6v-crh8-8533",
            "cwe_id":"{'CWE-190'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d107fee1e4a9a4462f01564798d345802acc2aef'}",
            "dataset":"osv",
            "summary":"Integer Overflow or Wraparound in Google TensorFlow Google TensorFlow 1.7.x and earlier is affected by a Buffer Overflow vulnerability. The type of exploitation is context-dependent.",
            "published_date":"2019-04-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d107fee1e4a9a4462f01564798d345802acc2aef",
            "commit_sha":"d107fee1e4a9a4462f01564798d345802acc2aef",
            "patch":"SINGLE",
            "chain_ord":"['d107fee1e4a9a4462f01564798d345802acc2aef']",
            "before_first_fix_commit":"{'f8acfb01792886274778d9ad7a9d990cbef14141'}",
            "last_fix_commit":"d107fee1e4a9a4462f01564798d345802acc2aef",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/04\/2018, 23:26:25",
            "message":"Check that n + kBlockTrailerSize does not overflow before reading a block\n\nPiperOrigin-RevId: 191666300",
            "author":"Frank Chen",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'tensorflow\/core\/lib\/io\/format.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d107fee1e4a9a4462f01564798d345802acc2aef\/tensorflow%2Fcore%2Flib%2Fio%2Fformat.cc', 'patch': '@@ -13,6 +13,8 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*\/\\n \\n+#include <limits>\\n+\\n #include \"tensorflow\/core\/lib\/io\/format.h\"\\n \\n #include \"tensorflow\/core\/lib\/core\/coding.h\"\\n@@ -84,6 +86,11 @@ Status ReadBlock(RandomAccessFile* file, const BlockHandle& handle,\\n   \/\/ Read the block contents as well as the type\/crc footer.\\n   \/\/ See table_builder.cc for the code that built this structure.\\n   size_t n = static_cast<size_t>(handle.size());\\n+\\n+  if (kBlockTrailerSize > std::numeric_limits<size_t>::max() - n) {\\n+    return errors::DataLoss(\"handle.size() too big\");\\n+  }\\n+\\n   char* buf = new char[n + kBlockTrailerSize];\\n   StringPiece contents;\\n   Status s = file->Read(handle.offset(), n + kBlockTrailerSize, &contents, buf);'}}",
            "message_norm":"check that n + kblocktrailersize does not overflow before reading a block\n\npiperorigin-revid: 191666300",
            "language":"en",
            "entities":"[('overflow', 'SECWORD', ''), ('191666300', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/lib\/io\/format.cc'])",
            "num_files":1.0
        },
        {
            "index":299,
            "vuln_id":"GHSA-3q55-66g3-p8xq",
            "cwe_id":"{'CWE-79'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber File upload filter bypass leading to stored XSS in GitHub repository microweber\/microweber prior to 1.2.12.",
            "published_date":"2022-03-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
            "commit_sha":"89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
            "patch":"SINGLE",
            "chain_ord":"['89200cfcc2cfefe5554721e7fa3cf52f6a2a9120']",
            "before_first_fix_commit":"{'077b1e2d5dda0c6611b65bce849a18a5620c5c98'}",
            "last_fix_commit":"89200cfcc2cfefe5554721e7fa3cf52f6a2a9120",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/11\/2022, 10:04:52",
            "message":"Update Files.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 254, 'deletions': 2, 'total': 256}",
            "files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 254, 'deletions': 2, 'changes': 256, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/89200cfcc2cfefe5554721e7fa3cf52f6a2a9120\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -834,10 +834,262 @@ function get_dangerous_files_extentions()\\n             'xqt',        \/\/    SuperCalc Macro File',\\n             'xys',        \/\/    XYplorer Script File',\\n             'zl9',        \/\/    ZoneAlarm Quarantined EXE File\\n-\\n-\\n             'swf',        \/\/    Flash File\\n \\n+            'key',\\n+            'asax',\\n+            'btapp',\\n+            'xd',\\n+            'fwtemplate',\\n+            'crdownload',\\n+            'whtt',\\n+            'ssp',\\n+            'fmp',\\n+            'jspa',\\n+            'obml16',\\n+            'a5w',\\n+            'crt',\\n+            'vrt',\\n+            'website',\\n+            'p7c',\\n+            'dll',\\n+            'php',\\n+            'mjs',\\n+            'dhtml',\\n+            'xul',\\n+            'bml',\\n+            'download',\\n+            'cshtml',\\n+            'vsdisco',\\n+            'codasite',\\n+            'webbookmark',\\n+            'rjs',\\n+            'wsdl',\\n+            'dml',\\n+            'aro',\\n+            'dcr',\\n+            'shtml',\\n+            'dochtml',\\n+            'dwt',\\n+            'spc',\\n+            'a4p',\\n+            'htaccess',\\n+            'ascx',\\n+            'pac',\\n+            'p7b',\\n+            'xhtm',\\n+            'oam',\\n+            'site',\\n+            'kit',\\n+            'aspx',\\n+            'zul',\\n+            'tpl',\\n+            'htm',\\n+            'seam',\\n+            'svr',\\n+            'pem',\\n+            'url',\\n+            'dap',\\n+            'appcache',\\n+            'chm',\\n+            'wbs',\\n+            'htc',\\n+            'ewp',\\n+            'gsp',\\n+            'asr',\\n+            'der',\\n+            'master',\\n+            'stc',\\n+            'ap',\\n+            'html',\\n+            'p12',\\n+            'xpd',\\n+            'fwp',\\n+            'epibrw',\\n+            'strm',\\n+            'xss',\\n+            'node',\\n+            'disco',\\n+            'gsp',\\n+            'pro',\\n+            'rss',\\n+            'gne',\\n+            'sdb',\\n+            'compressed',\\n+            'asp',\\n+            'browser',\\n+            'php2',\\n+            'sites2',\\n+            'dothtml',\\n+            'bok',\\n+            'axd',\\n+            'nzb',\\n+            'vdw',\\n+            'obml',\\n+            'mhtml',\\n+            'ashx',\\n+            'con',\\n+            'rhtml',\\n+            'alx',\\n+            'opml',\\n+            'web',\\n+            'chat',\\n+            'csr',\\n+            'do',\\n+            'sht',\\n+            'asa',\\n+            'cha',\\n+            'h5p',\\n+            'qf',\\n+            'olp',\\n+            'hyperesources',\\n+            'sparkle',\\n+            'razor',\\n+            'php4',\\n+            'cms',\\n+            'mml',\\n+            'jnlp',\\n+            'har',\\n+            'br',\\n+            'webloc',\\n+            'srf',\\n+            'cer',\\n+            'uhtml',\\n+            'pptmhtml',\\n+            'phtml',\\n+            'xbel',\\n+            'cfm',\\n+            'fwtemplateb',\\n+            'jspx',\\n+            'jsp',\\n+            'xfdl',\\n+            'zhtml',\\n+            'stml',\\n+            'jsonl',\\n+            'maff',\\n+            'dbm',\\n+            'aex',\\n+            'crl',\\n+            'mht',\\n+            'wml',\\n+            'sass',\\n+            'xht',\\n+            'awm',\\n+            'page',\\n+            'hdml',\\n+            'webmanifest',\\n+            'itms',\\n+            'sitemap',\\n+            'shtm',\\n+            'wpp',\\n+            'jss',\\n+            'oth',\\n+            'ucf',\\n+            'prf',\\n+            'freeway',\\n+            'edge',\\n+            'iqy',\\n+            'vrml',\\n+            'mvc',\\n+            'wdgt',\\n+            'discomap',\\n+            'psp',\\n+            'hxs',\\n+            'adr',\\n+            'hype',\\n+            'csp',\\n+            'xhtml',\\n+            'webarchive',\\n+            'qbo',\\n+            'jhtml',\\n+            'svc',\\n+            'phtm',\\n+            'rw3',\\n+            'tpl',\\n+            'stl',\\n+            'wbxml',\\n+            'p7',\\n+            'ndjson',\\n+            'ognc',\\n+            'fwtb',\\n+            'muse',\\n+            'vbd',\\n+            'sites',\\n+            'rt',\\n+            'esproj',\\n+            'private',\\n+            'srl',\\n+            'zhtml',\\n+            'vbhtml', \\n+            'hypetemplate',\\n+            'obml15',\\n+            'hypesymbol',\\n+            'pub',\\n+            'ece',\\n+            'mspx',\\n+            'docmhtml',\\n+            'xws',\\n+            'wgp',\\n+            'tvpi',\\n+            'woa',\\n+            'asmx',\\n+            'xbl',\\n+            'webhistory',\\n+            'idc',\\n+            'jws',\\n+            'lbc',\\n+            'att',\\n+            'tvvi',\\n+            'zvz',\\n+            'php3',\\n+            'webarchivexml',\\n+            'widget',\\n+            'swz',\\n+            'qrm',\\n+            'bwp',\\n+            'atom',\\n+            'cdf',\\n+            'map',\\n+            'hdm',\\n+            'php5',\\n+            'rwsw',\\n+            'wgt',\\n+            'nod',\\n+            'rflw',\\n+            'htx',\\n+            'mvr',\\n+            'an',\\n+            'rwp',\\n+            'lasso',\\n+            'vlp',\\n+            'stp',\\n+            'nxg',\\n+            'faces',\\n+            'kcmsf',\\n+            'ptw',\\n+            'less',\\n+            'saveddeck',\\n+            'ccbjs',\\n+            'wn',\\n+            'ppthtml',\\n+            'jcz',\\n+            'jvs',\\n+            'rwtheme',\\n+            'jst',\\n+            'mapx',\\n+            'cpg',\\n+            'wpx',\\n+            'qbx',\\n+            'suck',\\n+            'iwdgt',\\n+            'public',\\n+            'cphd',\\n+            'moz',\\n+            'zfo',\\n+            'stm',\\n+            'fcgi',\\n+            'itpc',\\n+            'cfml'\\n         );\"}}",
            "message_norm":"update files.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])",
            "num_files":1.0
        },
        {
            "index":3293,
            "vuln_id":"GHSA-wm7h-9275-46v2",
            "cwe_id":"{'CWE-248'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mscdex\/dicer\/pull\/22\/commits\/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac'}",
            "dataset":"osv",
            "summary":"Crash in HeaderParser in dicer This affects all versions of package dicer. A malicious attacker can send a modified form to server, and crash the nodejs service. A complete denial of service can be achived by sending the malicious form in a loop.",
            "published_date":"2022-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/mscdex\/dicer",
            "commit_href":"https:\/\/github.com\/mscdex\/dicer\/pull\/22\/commits\/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac",
            "commit_sha":"b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac",
            "patch":"SINGLE",
            "chain_ord":"['b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac']",
            "before_first_fix_commit":"{'524254c4af4e8f2ed070facac8f6d91538b41eef'}",
            "last_fix_commit":"b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/10\/2021, 09:41:48",
            "message":"removed bug caused by uninitialized variable h in function HeaderParser.prototype._parseHeader",
            "author":"Roland Heinze",
            "comments":null,
            "stats":"{'additions': 20, 'deletions': 18, 'total': 38}",
            "files":"{'lib\/HeaderParser.js': {'additions': 20, 'deletions': 18, 'changes': 38, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mscdex\/dicer\/raw\/b7fca2e93e8e9d4439d8acc5c02f5e54a0112dac\/lib%2FHeaderParser.js', 'patch': \"@@ -82,26 +82,28 @@ HeaderParser.prototype._parseHeader = function() {\\n       \/\/ folded header content\\n       \/\/ RFC2822 says to just remove the CRLF and not the whitespace following\\n       \/\/ it, so we follow the RFC and include the leading whitespace ...\\n-      this.header[h][this.header[h].length - 1] += lines[i];\\n-    } else {\\n-      m = RE_HDR.exec(lines[i]);\\n-      if (m) {\\n-        h = m[1].toLowerCase();\\n-        if (m[2]) {\\n-          if (this.header[h] === undefined)\\n-            this.header[h] = [m[2]];\\n-          else\\n-            this.header[h].push(m[2]);\\n-        } else\\n-          this.header[h] = [''];\\n-        if (++this.npairs === this.maxHeaderPairs)\\n-          break;\\n-      } else {\\n-        this.buffer = lines[i];\\n-        modded = true;\\n-        break;\\n+      if (h) {\\n+        this.header[h][this.header[h].length - 1] += lines[i];\\n+        continue;\\n       }\\n     }\\n+    m = RE_HDR.exec(lines[i]);\\n+    if (m) {\\n+      h = m[1].toLowerCase();\\n+      if (m[2]) {\\n+        if (this.header[h] === undefined)\\n+          this.header[h] = [m[2]];\\n+        else\\n+          this.header[h].push(m[2]);\\n+      } else\\n+        this.header[h] = [''];\\n+      if (++this.npairs === this.maxHeaderPairs)\\n+        break;\\n+    } else {\\n+      this.buffer = lines[i];\\n+      modded = true;\\n+      break;\\n+    }\\n   }\\n   if (!modded)\\n     this.buffer = '';\"}}",
            "message_norm":"removed bug caused by uninitialized variable h in function headerparser.prototype._parseheader",
            "language":"en",
            "entities":"[('removed', 'ACTION', ''), ('bug', 'FLAW', ''), ('uninitialized', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/HeaderParser.js'])",
            "num_files":1.0
        },
        {
            "index":3171,
            "vuln_id":"GHSA-vvg4-vgrv-xfr7",
            "cwe_id":"{'CWE-665'}",
            "score":6.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c'}",
            "dataset":"osv",
            "summary":"Incomplete validation in `tf.raw_ops.CTCLoss` ### Impact \nIncomplete validation in `tf.raw_ops.CTCLoss` allows an attacker to trigger an OOB read from heap:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[10, 16, 0], dtype=tf.float32)\nlabels_indices = tf.constant([], shape=[8, 0], dtype=tf.int64)\nlabels_values = tf.constant([-100] * 8, shape=[8], dtype=tf.int32)\nsequence_length = tf.constant([-100] * 16, shape=[16], dtype=tf.int32)\n  \ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=True, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=True)\n```   \n      \nAn attacker can also trigger a heap buffer overflow:\n\n```python\nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[7, 2, 0], dtype=tf.float32)\nlabels_indices = tf.constant([-100, -100], shape=[2, 1], dtype=tf.int64)\nlabels_values = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\nsequence_length = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\n\ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=False, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=False)\n```\n\nFinally, an attacker can trigger a null pointer dereference:\n\n```python \nimport tensorflow as tf\n\ninputs = tf.constant([], shape=[0, 2, 11], dtype=tf.float32)\nlabels_indices = tf.constant([], shape=[0, 2], dtype=tf.int64)\nlabels_values = tf.constant([], shape=[0], dtype=tf.int32)\nsequence_length = tf.constant([-100, -100], shape=[2], dtype=tf.int32)\n\ntf.raw_ops.CTCLoss(inputs=inputs, labels_indices=labels_indices,\n                   labels_values=labels_values, sequence_length=sequence_length,\n                   preprocess_collapse_repeated=False, ctc_merge_repeated=False,\n                   ignore_longer_outputs_than_inputs=False)\n```\n\n### Patches\nWe have patched the issue in GitHub commit[14607c0707040d775e06b6817325640cb4b5864c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/14607c0707040d775e06b6817325640cb4b5864c) followed by GitHub commit [4504a081af71514bb1828048363e6540f797005b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4504a081af71514bb1828048363e6540f797005b",
            "commit_sha":"4504a081af71514bb1828048363e6540f797005b",
            "patch":"MULTI",
            "chain_ord":"['4504a081af71514bb1828048363e6540f797005b', '14607c0707040d775e06b6817325640cb4b5864c']",
            "before_first_fix_commit":"{'8410ce671b48e96965a1e4a97017f8a5bbd03d3a'}",
            "last_fix_commit":"14607c0707040d775e06b6817325640cb4b5864c",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 00:33:47",
            "message":"Fix OOB read issue with `tf.raw_ops.CTCLoss`.\n\nPiperOrigin-RevId: 372242187\nChange-Id: I347228ed8c04e1d2eb9d2479ae52f51d1b512c6e",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/ctc_loss_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4504a081af71514bb1828048363e6540f797005b\/tensorflow%2Fcore%2Fkernels%2Fctc_loss_op.cc', 'patch': '@@ -100,6 +100,10 @@ class CTCLossOp : public OpKernel {\\n                 errors::InvalidArgument(\"sequence_length is not a vector\"));\\n     OP_REQUIRES(ctx, TensorShapeUtils::IsMatrix(labels_indices->shape()),\\n                 errors::InvalidArgument(\"labels_indices is not a matrix\"));\\n+    OP_REQUIRES(ctx, labels_indices->dim_size(1) > 1,\\n+                errors::InvalidArgument(\\n+                    \"labels_indices second dimension must be >= 1. Received \",\\n+                    labels_indices->dim_size(1)));\\n     OP_REQUIRES(ctx, TensorShapeUtils::IsVector(labels_values->shape()),\\n                 errors::InvalidArgument(\"labels_values is not a vector\"));'}}",
            "message_norm":"fix oob read issue with `tf.raw_ops.ctcloss`.\n\npiperorigin-revid: 372242187\nchange-id: i347228ed8c04e1d2eb9d2479ae52f51d1b512c6e",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('oob', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372242187', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ctc_loss_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3027,
            "vuln_id":"GHSA-rxch-gp62-574w",
            "cwe_id":"{'CWE-79'}",
            "score":6.4,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2'}",
            "dataset":"osv",
            "summary":"snipe-it is vulnerable to Cross-site Scripting snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').",
            "published_date":"2021-12-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2",
            "commit_sha":"9d5d1a9f9aae2c8baee48551185da5de0cdb62c2",
            "patch":"SINGLE",
            "chain_ord":"['9d5d1a9f9aae2c8baee48551185da5de0cdb62c2']",
            "before_first_fix_commit":"{'3a7cef15bd7578f93104011137222512d4c95f4e'}",
            "last_fix_commit":"9d5d1a9f9aae2c8baee48551185da5de0cdb62c2",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/13\/2021, 20:03:03",
            "message":"Added escape to assigned_to API response\n\nSigned-off-by: snipe <snipe@snipe.net>",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'app\/Http\/Transformers\/AssetsTransformer.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2\/app%2FHttp%2FTransformers%2FAssetsTransformer.php', 'patch': \"@@ -170,7 +170,7 @@ public function transformAssignedTo($asset)\\n         }\\n         return $asset->assigned ? [\\n             'id' => $asset->assigned->id,\\n-            'name' => $asset->assigned->display_name,\\n+            'name' => e($asset->assigned->display_name),\\n             'type' => $asset->assignedType()\\n         ] : null;\\n     }\"}}",
            "message_norm":"added escape to assigned_to api response\n\nsigned-off-by: snipe <snipe@snipe.net>",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('escape', 'SECWORD', ''), ('snipe@snipe.net', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Transformers\/AssetsTransformer.php'])",
            "num_files":1.0
        },
        {
            "index":1974,
            "vuln_id":"GHSA-h3gg-7wx2-cq3h",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/flarum\/sticky\/commit\/7ebd30462bd405c4c0570b93a6d48710e6c3db19'}",
            "dataset":"osv",
            "summary":"XSS in Flarum Sticky extension ### Impact\nA change in release beta 14 of the Sticky extension caused the plain text content of the first post of a pinned discussion to be injected as HTML on the discussion list. The issue was discovered following an internal audit.\n\nAny HTML would be injected through Mithril's `m.trust()` helper. This resulted in an HTML injection where `<script>` tags would not be executed. However it was possible to run javascript from other HTML attributes, enabling a cross-site scripting (XSS) attack to be performed.\n\nSince the exploit only happens with the first post of a pinned discussion, an attacker would need the ability to pin their own discussion, or be able to edit a discussion that was previously pinned.\n\nOn forums where all pinned posts are authored by your staff, you can be relatively certain the vulnerability has not been exploited.\n\nForums where some user-created discussions were pinned can look at the first post edit date to find whether the vulnerability might have been exploited. Because Flarum doesn't store the post content history, you cannot be certain if a malicious edit was reverted.\n\n### Patches\nThe fix will be available in version v0.1.0-beta.16 with Flarum beta 16. The fix has already been back-ported to Flarum beta 15 as version v0.1.0-beta.15.1 of the Sticky extension.\n\n### Workarounds\nForum administrators can disable the Sticky extension until they are able to apply the update. The vulnerability cannot be exploited while the extension is disabled.\n\n### References\n\n- [Release announcement](https:\/\/discuss.flarum.org\/d\/26042-security-update-to-flarum-sticky-010-beta151)\n- [Pull Request](https:\/\/github.com\/flarum\/sticky\/pull\/24)\n\n### For more information\nIf you have any questions or comments about this advisory, please start a new discussion on our [support forum](https:\/\/discuss.flarum.org\/t\/support).\n\nIf you discover a security vulnerability within Flarum, please send an e-mail to [security@flarum.org](mailto:security@flarum.org). All security vulnerabilities will be promptly addressed. More details can be found in our [security policy](https:\/\/github.com\/flarum\/core\/security\/policy).",
            "published_date":"2021-01-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/flarum\/sticky",
            "commit_href":"https:\/\/github.com\/flarum\/sticky\/commit\/7ebd30462bd405c4c0570b93a6d48710e6c3db19",
            "commit_sha":"7ebd30462bd405c4c0570b93a6d48710e6c3db19",
            "patch":"SINGLE",
            "chain_ord":"['7ebd30462bd405c4c0570b93a6d48710e6c3db19']",
            "before_first_fix_commit":"{'62a74d25ab3f84f69d1c4b5920080963788a8360'}",
            "last_fix_commit":"7ebd30462bd405c4c0570b93a6d48710e6c3db19",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/22\/2021, 18:53:11",
            "message":"Fix evaluation of post content by m.trust() (#24)",
            "author":"Sami Mazouz",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'js\/src\/forum\/addStickyExcerpt.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/flarum\/sticky\/raw\/7ebd30462bd405c4c0570b93a6d48710e6c3db19\/js%2Fsrc%2Fforum%2FaddStickyExcerpt.js', 'patch': \"@@ -21,7 +21,8 @@ export default function addStickyControl() {\\n       if (firstPost) {\\n         const excerpt = truncate(firstPost.contentPlain(), 175);\\n \\n-        items.add('excerpt', m.trust(excerpt), -100);\\n+        \/\/ Wrapping in <div> because ItemList entries need to be vnodes\\n+        items.add('excerpt', <div>{excerpt}<\/div>, -100);\\n       }\\n     }\\n   });\"}}",
            "message_norm":"fix evaluation of post content by m.trust() (#24)",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#24', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['js\/src\/forum\/addStickyExcerpt.js'])",
            "num_files":1.0
        },
        {
            "index":1261,
            "vuln_id":"GHSA-8v7h-cpc2-r8jp",
            "cwe_id":"{'CWE-362'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/octobercms\/library\/commit\/fe569f3babf3f593be2b1e0a4ae0283506127a83'}",
            "dataset":"osv",
            "summary":"October CMS upload process vulnerable to RCE via Race Condition ### Impact\n\nThis advisory affects plugins that expose the `October\\Rain\\Database\\Attach\\File::fromData` as a public interface. This vulnerability does not affect vanilla installations of October CMS since this method is not exposed or used by the system internally or externally.\n\nWhen the developer allows the user to specify their own filename in the `fromData` method, an unauthenticated user can perform remote code execution (RCE) by exploiting a race condition in the temporary storage directory.\n\n### Patches\n\nThe issue has been patched in Build 476 (v1.0.476) and v1.1.12 and v2.2.15.\n\n### Workarounds\n\nApply https:\/\/github.com\/octobercms\/library\/commit\/fe569f3babf3f593be2b1e0a4ae0283506127a83 to your installation manually if unable to upgrade to Build 476 (v1.0.476) or v1.1.12 or v2.2.15.\n\n### References\n\nCredits to:\n- DucNT, HungTD and GiangVQ from RedTeam@VNG Security Response Center.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Email us at [hello@octobercms.com](mailto:hello@octobercms.com)",
            "published_date":"2022-07-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/library",
            "commit_href":"https:\/\/github.com\/octobercms\/library\/commit\/fe569f3babf3f593be2b1e0a4ae0283506127a83",
            "commit_sha":"fe569f3babf3f593be2b1e0a4ae0283506127a83",
            "patch":"SINGLE",
            "chain_ord":"['fe569f3babf3f593be2b1e0a4ae0283506127a83']",
            "before_first_fix_commit":"{'95ce496038c104571362c92418783b81889a8b9d'}",
            "last_fix_commit":"fe569f3babf3f593be2b1e0a4ae0283506127a83",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/29\/2022, 01:51:19",
            "message":"Refactor",
            "author":"Sam Georges",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 4, 'total': 9}",
            "files":"{'src\/Database\/Attach\/File.php': {'additions': 5, 'deletions': 4, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/library\/raw\/fe569f3babf3f593be2b1e0a4ae0283506127a83\/src%2FDatabase%2FAttach%2FFile.php', 'patch': \"@@ -124,14 +124,14 @@ public function fromPost($uploadedFile)\\n     \/**\\n      * fromFile creates a file object from a file on the disk\\n      *\/\\n-    public function fromFile($filePath)\\n+    public function fromFile($filePath, $filename = null)\\n     {\\n         if ($filePath === null) {\\n             return;\\n         }\\n \\n         $file = new FileObj($filePath);\\n-        $this->file_name = $file->getFilename();\\n+        $this->file_name = empty($filename) ? $file->getFilename() : $filename;\\n         $this->file_size = $file->getSize();\\n         $this->content_type = $file->getMimeType();\\n         $this->disk_name = $this->getDiskName();\\n@@ -152,10 +152,11 @@ public function fromData($data, $filename)\\n             return;\\n         }\\n \\n-        $tempPath = temp_path(basename($filename));\\n+        $tempName = str_replace('.', '', uniqid('', true)) . '.tmp';\\n+        $tempPath = temp_path($tempName);\\n         FileHelper::put($tempPath, $data);\\n \\n-        $file = $this->fromFile($tempPath);\\n+        $file = $this->fromFile($tempPath, basename($filename));\\n         FileHelper::delete($tempPath);\\n \\n         return $file;\"}}",
            "message_norm":"refactor",
            "language":"ro",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"SINGLE_WORD",
            "list_files":"dict_keys(['src\/Database\/Attach\/File.php'])",
            "num_files":1.0
        },
        {
            "index":1253,
            "vuln_id":"GHSA-8rmh-55h4-93h5",
            "cwe_id":"{'CWE-22'}",
            "score":7.2,
            "chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199'}",
            "dataset":"osv",
            "summary":"DSpace ItemImportService API Vulnerable to Path Traversal in Simple Archive Format Package Import ### Impact\nItemImportServiceImpl is vulnerable to a path traversal vulnerability. This means a malicious SAF (simple archive format) package could cause a file\/directory to be created anywhere the Tomcat\/DSpace user can write to on the server.  However, this path traversal vulnerability is only possible by a user with special privileges (either Administrators or someone with command-line access to the server).  This vulnerability impacts the XMLUI, JSPUI and command-line.\n\n_This vulnerability does NOT impact 7.x._\n\n### Patches\n\n_DSpace 6.x:_ \n* Fixed in 6.4 via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0\n* 6.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/7af52a0883a9dbc475cf3001f04ed11b24c8a4c0.patch (may be applied manually if an immediate upgrade to 6.4 or 7.x is not possible)\n\n_DSpace 5.x:_\n* Fixed in 5.11 via commit: https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199\n* 5.x patch file: https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199.patch (may be applied manually if an immediate upgrade to 5.11 or 6.4 or 7.x is not possible)\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### Workarounds\n\nAs a basic workaround, you may block all access to the following URL paths:\n* If you are using the XMLUI, block all access to `\/admin\/batchimport` path (this is the URL of the Admin Batch Import tool). Keep in mind, if your site uses the path \"\/xmlui\", then you'd need to block access to `\/xmlui\/admin\/batchimport`.\n* If you are using the JSPUI, block all access to `\/dspace-admin\/batchimport` path (this is the URL of the Admin Batch Import tool).  Keep in mind, if your site uses the path \"\/jspui\", then you'd need to block access to `\/jspui\/dspace-admin\/batchimport`.\n\nKeep in mind, only an Administrative user or a user with command-line access to the server is able to import\/upload SAF packages. Therefore, assuming those users do not blindly upload untrusted SAF packages, then it is unlikely your site could be impacted by this vulnerability.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org",
            "published_date":"2022-08-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/DSpace\/DSpace",
            "commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/56e76049185bbd87c994128a9d77735ad7af0199",
            "commit_sha":"56e76049185bbd87c994128a9d77735ad7af0199",
            "patch":"MULTI",
            "chain_ord":"['7af52a0883a9dbc475cf3001f04ed11b24c8a4c0', '56e76049185bbd87c994128a9d77735ad7af0199']",
            "before_first_fix_commit":"{'73cdff26fdc40bb022e21dcfdeefebf28057cde7'}",
            "last_fix_commit":"56e76049185bbd87c994128a9d77735ad7af0199",
            "chain_ord_pos":2.0,
            "commit_datetime":"01\/14\/2022, 00:37:25",
            "message":"[DS-4131] Better path handling in ItemImport zips",
            "author":"Kim Shepherd",
            "comments":null,
            "stats":"{'additions': 30, 'deletions': 6, 'total': 36}",
            "files":"{'dspace-api\/src\/main\/java\/org\/dspace\/app\/itemimport\/ItemImport.java': {'additions': 30, 'deletions': 6, 'changes': 36, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/56e76049185bbd87c994128a9d77735ad7af0199\/dspace-api%2Fsrc%2Fmain%2Fjava%2Forg%2Fdspace%2Fapp%2Fitemimport%2FItemImport.java', 'patch': '@@ -2003,22 +2003,30 @@ public static String unzip(File zipfile, String destDir) throws IOException {\\n         if (destinationDir == null){\\n         \\tdestinationDir = tempWorkDir;\\n         }\\n+        log.debug(\"Using directory \" + destinationDir + \" for zip extraction. (destDir arg is \" + destDir +\\n+                \", tempWorkDir is \" + tempWorkDir + \")\");\\n \\n         File tempdir = new File(destinationDir);\\n         if (!tempdir.isDirectory())\\n         {\\n-            log.error(\"\\'\" + ConfigurationManager.getProperty(\"org.dspace.app.itemexport.work.dir\") +\\n-                    \"\\' as defined by the key \\'org.dspace.app.itemexport.work.dir\\' in dspace.cfg \" +\\n+            log.error(\"\\'\" + ConfigurationManager.getProperty(\"org.dspace.app.batchitemimport.work.dir\") +\\n+                    \"\\' as defined by the key \\'org.dspace.app.batchitemimport.work.dir\\' in dspace.cfg \" +\\n                     \"is not a valid directory\");\\n         }\\n \\n         if (!tempdir.exists() && !tempdir.mkdirs())\\n         {\\n             log.error(\"Unable to create temporary directory: \" + tempdir.getAbsolutePath());\\n         }\\n-        String sourcedir = destinationDir + System.getProperty(\"file.separator\") + zipfile.getName();\\n-        String zipDir = destinationDir + System.getProperty(\"file.separator\") + zipfile.getName() + System.getProperty(\"file.separator\");\\n \\n+        if(!destinationDir.endsWith(System.getProperty(\"file.separator\"))) {\\n+            destinationDir += System.getProperty(\"file.separator\");\\n+        }\\n+\\n+        String sourcedir = destinationDir + zipfile.getName();\\n+        String zipDir = destinationDir + zipfile.getName() + System.getProperty(\"file.separator\");\\n+\\n+        log.debug(\"zip directory to use is \" + zipDir);\\n \\n         \/\/ 3\\n         String sourceDirForZip = sourcedir;\\n@@ -2028,11 +2036,26 @@ public static String unzip(File zipfile, String destDir) throws IOException {\\n         while (entries.hasMoreElements())\\n         {\\n             entry = entries.nextElement();\\n+            \/\/ Check that the true path to extract files is never outside allowed temp directories\\n+            \/\/ without creating any actual files on disk\\n+            log.debug(\"Inspecting entry name: \" + entry.getName() + \" for path traversal security\");\\n+            File potentialExtract = new File(zipDir + entry.getName());\\n+            String canonicalPath = potentialExtract.getCanonicalPath();\\n+            log.debug(\"Canonical path to potential File is \" + canonicalPath);\\n+            if(!canonicalPath.startsWith(zipDir)) {\\n+                log.error(\"Rejecting zip file: \" + zipfile.getName() + \" as it contains an entry that would be extracted \" +\\n+                        \"outside the temporary unzip directory: \" + canonicalPath);\\n+                throw new IOException(\"Error extracting \" + zipfile + \": Canonical path of zip entry: \" +\\n+                        entry.getName() + \" (\" + canonicalPath + \") does not start with permissible temp \" +\\n+                        \"unzip directory (\" + destinationDir + \")\");\\n+            }\\n             if (entry.isDirectory())\\n             {\\n-                if (!new File(zipDir + entry.getName()).mkdir())\\n-                {\\n+                \/\/ Log error and throw IOException if a directory entry could not be created\\n+                File newDir = new File(zipDir + entry.getName());\\n+                if (!newDir.mkdirs()) {\\n                     log.error(\"Unable to create contents directory: \" + zipDir + entry.getName());\\n+                    throw new IOException(\"Unable to create contents directory: \" + zipDir + entry.getName());\\n                 }\\n             }\\n             else\\n@@ -2074,6 +2097,7 @@ public static String unzip(File zipfile, String destDir) throws IOException {\\n                 byte[] buffer = new byte[1024];\\n                 int len;\\n                 InputStream in = zf.getInputStream(entry);\\n+                log.debug(\"Reading \" + zipDir + entry.getName() + \" into InputStream\");\\n                 BufferedOutputStream out = new BufferedOutputStream(\\n                         new FileOutputStream(zipDir + entry.getName()));\\n                 while((len = in.read(buffer)) >= 0)'}}",
            "message_norm":"[ds-4131] better path handling in itemimport zips",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['dspace-api\/src\/main\/java\/org\/dspace\/app\/itemimport\/ItemImport.java'])",
            "num_files":1.0
        },
        {
            "index":2845,
            "vuln_id":"GHSA-r35g-4525-29fq",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d'}",
            "dataset":"osv",
            "summary":"Division by 0 in `FusedBatchNorm` ### Impact\nAn attacker can cause a denial of service via a FPE runtime error in `tf.raw_ops.FusedBatchNorm`:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([], shape=[1, 1, 1, 0], dtype=tf.float32)\nscale = tf.constant([], shape=[0], dtype=tf.float32)\noffset = tf.constant([], shape=[0], dtype=tf.float32)\nmean = tf.constant([], shape=[0], dtype=tf.float32)\nvariance = tf.constant([], shape=[0], dtype=tf.float32)\nepsilon = 0.0\nexponential_avg_factor = 0.0\ndata_format = \"NHWC\"\nis_training = False\n\ntf.raw_ops.FusedBatchNorm(\n    x=x, scale=scale, offset=offset, mean=mean,\n    variance=variance, epsilon=epsilon,\n    exponential_avg_factor=exponential_avg_factor,\n    data_format=data_format, is_training=is_training)\n``` \n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/828f346274841fa7505f7020e88ca36c22e557ab\/tensorflow\/core\/kernels\/fused_batch_norm_op.cc#L295-L297) performs a division based on the last dimension of the `x` tensor:\n\n```cc \nconst int depth = x.dimension(3);\nconst int rest_size = size \/ depth;\n```\n\nSince this is controlled by the user, an attacker can trigger a denial of service.\n\n### Patches\nWe have patched the issue in GitHub commit [1a2a87229d1d61e23a39373777c056161eb4084d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1a2a87229d1d61e23a39373777c056161eb4084d",
            "commit_sha":"1a2a87229d1d61e23a39373777c056161eb4084d",
            "patch":"SINGLE",
            "chain_ord":"['1a2a87229d1d61e23a39373777c056161eb4084d']",
            "before_first_fix_commit":"{'828f346274841fa7505f7020e88ca36c22e557ab'}",
            "last_fix_commit":"1a2a87229d1d61e23a39373777c056161eb4084d",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 18:30:28",
            "message":"Fix FPE issue with `tf.raw_ops.FusedBatchNorm`.\n\nPiperOrigin-RevId: 370948185\nChange-Id: If0c8e0320062ed6363e94ff5fe38e6a301f69ac2",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/fused_batch_norm_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1a2a87229d1d61e23a39373777c056161eb4084d\/tensorflow%2Fcore%2Fkernels%2Ffused_batch_norm_op.cc', 'patch': '@@ -293,6 +293,9 @@ struct FusedBatchNorm<CPUDevice, T, U, \/* is_training= *\/ false> {\\n     const CPUDevice& d = context->eigen_device<CPUDevice>();\\n \\n     const int depth = x.dimension(3);\\n+    OP_REQUIRES(\\n+        context, depth != 0,\\n+        errors::Internal(\"The 4th element in the input shape cannot be 0.\"));\\n     const int size = x.size();\\n     const int rest_size = size \/ depth;\\n     Eigen::DSizes<Eigen::Index, 2> rest_by_depth(rest_size, depth);'}}",
            "message_norm":"fix fpe issue with `tf.raw_ops.fusedbatchnorm`.\n\npiperorigin-revid: 370948185\nchange-id: if0c8e0320062ed6363e94ff5fe38e6a301f69ac2",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('issue', 'FLAW', ''), ('370948185', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fused_batch_norm_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2881,
            "vuln_id":"GHSA-r6cm-wg48-rh2r",
            "cwe_id":"{'CWE-359', 'CWE-863'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466'}",
            "dataset":"osv",
            "summary":"Exposure of Private Personal Information to an Unauthorized Actor in alextselegidis\/easyappointments The software is a booking management system that has a public form to place bookings, and a private area for the calendar and management of services, users, settings, etc. There is a backend API that allows data manipulation, including listing the appointments for a specific time range. This happens on this endpoint: \/index.php\/backend_api\/ajax_get_calendar_events Unfortunately, there is no authentication \/ permissions-check on that endpoint, the only required parameters in a POST request are \"startDate\", \"endDate\" and \"csrfToken\". Because the csrfToken can be obtained by any unauthenticated user just visiting the public form (and is valid for the backend as well), any attacker can query the backend API and obtain all sorts of private information about the appointment, in JSON format.",
            "published_date":"2022-03-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/alextselegidis\/easyappointments",
            "commit_href":"https:\/\/github.com\/alextselegidis\/easyappointments\/commit\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
            "commit_sha":"44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
            "patch":"SINGLE",
            "chain_ord":"['44af526a6fc5e898bc1e0132b2af9eb3a9b2c466']",
            "before_first_fix_commit":"{'13e81c80b17dfe207b2bdddb395a1345217f2548'}",
            "last_fix_commit":"44af526a6fc5e898bc1e0132b2af9eb3a9b2c466",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/08\/2022, 17:27:15",
            "message":"Release v1.4.3",
            "author":"Alex Tselegidis",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'application\/config\/config.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alextselegidis\/easyappointments\/raw\/44af526a6fc5e898bc1e0132b2af9eb3a9b2c466\/application%2Fconfig%2Fconfig.php', 'patch': \"@@ -8,7 +8,7 @@\\n | Declare some of the global config values of Easy!Appointments.\\n |\\n *\/\\n-$config['version'] = '1.4.3-beta.1'; \/\/ This must be changed manually.\\n+$config['version'] = '1.4.3'; \/\/ This must be changed manually.\\n $config['release_label'] = ''; \/\/ Leave empty for no title or add Alpha, Beta etc ...\\n $config['debug'] = Config::DEBUG_MODE;\\n \\n@@ -314,7 +314,7 @@\\n | new release.\\n |\\n *\/\\n-$config['cache_busting_token'] = '8UC842';\\n+$config['cache_busting_token'] = '6398SW';\\n \\n \/*\\n |--------------------------------------------------------------------------\"}}",
            "message_norm":"release v1.4.3",
            "language":"sl",
            "entities":"[('v1.4.3', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['application\/config\/config.php'])",
            "num_files":1.0
        },
        {
            "index":1949,
            "vuln_id":"GHSA-gx5w-rrhp-f436",
            "cwe_id":"{'CWE-79'}",
            "score":8.2,
            "chain":"{'https:\/\/github.com\/rust-lang\/mdBook\/commit\/32abeef088e98327ca0dfccdad92e84afa9d2e9b'}",
            "dataset":"osv",
            "summary":"XSS in mdBook > This is a cross-post of [the official security advisory][ml]. The official post contains a signed version with our PGP key, as well.\n\n[ml]: https:\/\/groups.google.com\/g\/rustlang-security-announcements\/c\/3-sO6of29O0\n\nThe Rust Security Response Working Group was recently notified of a security issue affecting the search feature of mdBook, which could allow an attacker to execute arbitrary JavaScript code on the page.\n\nThe CVE for this vulnerability is [CVE-2020-26297](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2020-26297).\n\n## Overview\n\nThe search feature of mdBook (introduced in version 0.1.4) was affected by a cross site scripting vulnerability that allowed an attacker to execute arbitrary JavaScript code on an user's browser by tricking the user into typing a malicious search query, or tricking the user into clicking a link to the search page with the malicious search query prefilled.\n\nmdBook 0.4.5 fixes the vulnerability by properly escaping the search query.\n\n## Mitigations\n\nOwners of websites built with mdBook have to upgrade to mdBook 0.4.5 or greater and rebuild their website contents with it. It's possible to install mdBook 0.4.5 on the local system with:\n\n```\ncargo install mdbook --version 0.4.5 --force\n```\n\n## Acknowledgements\n\nThanks to Kamil Vavra for responsibly disclosing the vulnerability to us according to [our security policy](https:\/\/www.rust-lang.org\/policies\/security).\n\n## Timeline of events\n\nAll times are listed in UTC.\n\n- 2020-12-30 20:14 - The issue is reported to the Rust Security Response WG\n- 2020-12-30 20:32 - The issue is acknowledged and the investigation began\n- 2020-12-30 21:21 - Found the cause of the vulnerability and prepared the patch\n- 2021-01-04 15:00 - Patched version released and vulnerability disclosed",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/rust-lang\/mdBook",
            "commit_href":"https:\/\/github.com\/rust-lang\/mdBook\/commit\/32abeef088e98327ca0dfccdad92e84afa9d2e9b",
            "commit_sha":"32abeef088e98327ca0dfccdad92e84afa9d2e9b",
            "patch":"SINGLE",
            "chain_ord":"['32abeef088e98327ca0dfccdad92e84afa9d2e9b']",
            "before_first_fix_commit":"{'5de9b6841ed03c8149eeec3c8a5fcd40b5d4dbe0'}",
            "last_fix_commit":"32abeef088e98327ca0dfccdad92e84afa9d2e9b",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/30\/2020, 21:13:15",
            "message":"fix xss in the search page\n\nThanks to Kamil Vavra for responsibly disclosing the vulnerability\naccording to Rust's Security Policy.",
            "author":"Pietro Albini",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'src\/theme\/searcher\/searcher.js': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rust-lang\/mdBook\/raw\/32abeef088e98327ca0dfccdad92e84afa9d2e9b\/src%2Ftheme%2Fsearcher%2Fsearcher.js', 'patch': '@@ -145,6 +145,11 @@ window.search = window.search || {};\\n             url.push(\"\");\\n         }\\n \\n+        \/\/ encodeURIComponent escapes all chars that could allow an XSS except\\n+        \/\/ for \\'. Due to that we also manually replace \\' with its url-encoded\\n+        \/\/ representation (%27).\\n+        var searchterms = encodeURIComponent(searchterms.join(\" \")).replace(\/\\\\\\'\/g, \"%27\");\\n+\\n         return \\'<a href=\"\\' + path_to_root + url[0] + \\'?\\' + URL_MARK_PARAM + \\'=\\' + searchterms + \\'#\\' + url[1]\\n             + \\'\" aria-details=\"teaser_\\' + teaser_count + \\'\">\\' + result.doc.breadcrumbs + \\'<\/a>\\'\\n             + \\'<span class=\"teaser\" id=\"teaser_\\' + teaser_count + \\'\" aria-label=\"Search Result Teaser\">\\''}}",
            "message_norm":"fix xss in the search page\n\nthanks to kamil vavra for responsibly disclosing the vulnerability\naccording to rust's security policy.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/theme\/searcher\/searcher.js'])",
            "num_files":1.0
        },
        {
            "index":1126,
            "vuln_id":"GHSA-8462-q7x7-g2x4",
            "cwe_id":"{'CWE-400', 'CWE-185'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mongodb\/js-bson\/commit\/bd61c45157c53a1698ff23770160cf4783e9ea4a'}",
            "dataset":"osv",
            "summary":"High severity vulnerability that affects bson The MongoDB bson JavaScript module (also known as js-bson) versions 0.5.0 to 1.0.x before 1.0.5 is vulnerable to a Regular Expression Denial of Service (ReDoS) in lib\/bson\/decimal128.js. The flaw is triggered when the Decimal128.fromString() function is called to parse a long untrusted string.",
            "published_date":"2018-09-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/mongodb\/js-bson",
            "commit_href":"https:\/\/github.com\/mongodb\/js-bson\/commit\/bd61c45157c53a1698ff23770160cf4783e9ea4a",
            "commit_sha":"bd61c45157c53a1698ff23770160cf4783e9ea4a",
            "patch":"SINGLE",
            "chain_ord":"['bd61c45157c53a1698ff23770160cf4783e9ea4a']",
            "before_first_fix_commit":"{'e403bd94faadee80cd82bae888e28b8b4d6d1e8d'}",
            "last_fix_commit":"bd61c45157c53a1698ff23770160cf4783e9ea4a",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/26\/2018, 20:09:27",
            "message":"fix(decimal128): add basic guard against REDOS attacks\n\nThis is a naive approach to reducing the efficacy of a REDOS attack\nagainst this module. A refactor of the regular expression or a\ncustom parser substitute would be ideal, however this solution\nsuffices as a stopgap until such work is completed.\n\nMany thanks to James Davis who graciously alterted us to the\nattack",
            "author":"Matt Broadstone",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'lib\/bson\/decimal128.js': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongodb\/js-bson\/raw\/bd61c45157c53a1698ff23770160cf4783e9ea4a\/lib%2Fbson%2Fdecimal128.js', 'patch': \"@@ -235,6 +235,13 @@ Decimal128.fromString = function(string) {\\n   \/\/ Trim the string\\n   string = string.trim();\\n \\n+  \/\/ Naively prevent against REDOS attacks.\\n+  \/\/ TODO: implementing a custom parsing for this, or refactoring the regex would yield\\n+  \/\/       further gains.\\n+  if (string.length >= 7000) {\\n+    throw new Error('' + string + ' not a valid Decimal128 string');\\n+  }\\n+\\n   \/\/ Results\\n   var stringMatch = string.match(PARSE_STRING_REGEXP);\\n   var infMatch = string.match(PARSE_INF_REGEXP);\"}}",
            "message_norm":"fix(decimal128): add basic guard against redos attacks\n\nthis is a naive approach to reducing the efficacy of a redos attack\nagainst this module. a refactor of the regular expression or a\ncustom parser substitute would be ideal, however this solution\nsuffices as a stopgap until such work is completed.\n\nmany thanks to james davis who graciously alterted us to the\nattack",
            "language":"en",
            "entities":"[('fix(decimal128', 'ACTION', ''), ('add', 'ACTION', ''), ('redos', 'SECWORD', ''), ('attacks', 'FLAW', ''), ('redos', 'SECWORD', ''), ('attack', 'FLAW', ''), ('attack', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/bson\/decimal128.js'])",
            "num_files":1.0
        },
        {
            "index":3407,
            "vuln_id":"GHSA-xc47-3rch-cv57",
            "cwe_id":"{'CWE-284'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0'}",
            "dataset":"osv",
            "summary":"Improper Access Control in snipe-it Users with no system permissions are able to see and create personal access tokens",
            "published_date":"2022-01-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0",
            "commit_sha":"0e5ef53c352754de2778ffa20c85da15fd6f7ae0",
            "patch":"SINGLE",
            "chain_ord":"['0e5ef53c352754de2778ffa20c85da15fd6f7ae0']",
            "before_first_fix_commit":"{'512dbfee7acfcafa1524c8b2fb4cc4ef96958d0b', 'eb8f23a888ccb2dc53a11c6dd240cbe8373500aa'}",
            "last_fix_commit":"0e5ef53c352754de2778ffa20c85da15fd6f7ae0",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2022, 09:36:52",
            "message":"Merge pull request #10504 from snipe\/fixes\/auth_controls_on_api_key_creation\n\nFixes auth controls on api key creation",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'app\/Http\/Controllers\/ProfileController.php': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0\/app%2FHttp%2FControllers%2FProfileController.php', 'patch': \"@@ -113,6 +113,12 @@ public function postIndex(ImageUploadRequest $request)\\n      *\/\\n     public function api()\\n     {\\n+\\n+        \/\/ Make sure the self.api permission has been granted\\n+        if (!Gate::allows('self.api')) {\\n+            abort(403);\\n+        }\\n+\\n         return view('account\/api');\\n     }\"}}",
            "message_norm":"merge pull request #10504 from snipe\/fixes\/auth_controls_on_api_key_creation\n\nfixes auth controls on api key creation",
            "language":"en",
            "entities":"[('#10504', 'ISSUE', ''), ('auth_controls_on_api_key_creation', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('auth', 'SECWORD', ''), ('key', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/ProfileController.php'])",
            "num_files":1.0
        },
        {
            "index":1212,
            "vuln_id":"GHSA-8gvg-8vhf-h26g",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/d797e3f00e34c12c8c0ae52f56344325439dccd7', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/7827e117753052d479fabe19a25cfece88059bca'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0912, CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0922, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0927, CVE-2019-0933.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/7827e117753052d479fabe19a25cfece88059bca",
            "commit_sha":"7827e117753052d479fabe19a25cfece88059bca",
            "patch":"MULTI",
            "chain_ord":"['7827e117753052d479fabe19a25cfece88059bca', 'd797e3f00e34c12c8c0ae52f56344325439dccd7']",
            "before_first_fix_commit":"{'ea0491305137183603bf43844b5584d4cc972e28', '4594e340bc9ca9f857010a68e8b562d65b46eed6'}",
            "last_fix_commit":"d797e3f00e34c12c8c0ae52f56344325439dccd7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/17\/2019, 22:42:35",
            "message":"[CVE-2019-0937]",
            "author":"Paul Leathers",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'lib\/Runtime\/ByteCode\/ByteCodeEmitter.cpp': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/7827e117753052d479fabe19a25cfece88059bca\/lib%2FRuntime%2FByteCode%2FByteCodeEmitter.cpp', 'patch': '@@ -4006,6 +4006,11 @@ void ByteCodeGenerator::StartEmitCatch(ParseNodeCatch *pnodeCatch)\\n                 sym->SetIsGlobalCatch(true);\\n             }\\n \\n+            if (sym->NeedsScopeObject())\\n+            {\\n+                scope->SetIsObject();\\n+            }\\n+\\n             Assert(sym->GetScopeSlot() == Js::Constants::NoProperty);\\n             if (sym->NeedsSlotAlloc(this, funcInfo))\\n             {\\n@@ -4029,6 +4034,11 @@ void ByteCodeGenerator::StartEmitCatch(ParseNodeCatch *pnodeCatch)\\n             sym->SetIsGlobalCatch(true);\\n         }\\n \\n+        if (sym->NeedsScopeObject())\\n+        {\\n+            scope->SetIsObject();\\n+        }\\n+\\n         if (scope->GetMustInstantiate())\\n         {\\n             if (sym->IsInSlot(this, funcInfo))'}}",
            "message_norm":"[cve-2019-0937]",
            "language":"ro",
            "entities":"[('cve-2019-0937', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Runtime\/ByteCode\/ByteCodeEmitter.cpp'])",
            "num_files":1.0
        },
        {
            "index":3067,
            "vuln_id":"GHSA-v6wr-fch2-vm5w",
            "cwe_id":"{'CWE-200'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/orientechnologies\/orientdb\/commit\/668ece96be210e742a4e2820a3085b215cf55104'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects com.orientechnologies:orientdb-studio server\/network\/protocol\/http\/OHttpSessionManager.java in the Studio component in OrientDB Server Community Edition before 2.0.15 and 2.1.x before 2.1.1 improperly relies on the java.util.Random class for generation of random Session ID values, which makes it easier for remote attackers to predict a value by determining the internal state of the PRNG in this class.",
            "published_date":"2018-10-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/orientechnologies\/orientdb",
            "commit_href":"https:\/\/github.com\/orientechnologies\/orientdb\/commit\/668ece96be210e742a4e2820a3085b215cf55104",
            "commit_sha":"668ece96be210e742a4e2820a3085b215cf55104",
            "patch":"SINGLE",
            "chain_ord":"['668ece96be210e742a4e2820a3085b215cf55104']",
            "before_first_fix_commit":"{'41fd20ab022e22bce32d62372dbe279693322086'}",
            "last_fix_commit":"668ece96be210e742a4e2820a3085b215cf55104",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/04\/2015, 14:45:12",
            "message":"Adopted SecureRandom to avoid predicable random numbers in session",
            "author":"lvca",
            "comments":null,
            "stats":"{'additions': 136, 'deletions': 135, 'total': 271}",
            "files":"{'server\/src\/main\/java\/com\/orientechnologies\/orient\/server\/network\/protocol\/http\/OHttpSessionManager.java': {'additions': 136, 'deletions': 135, 'changes': 271, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/orientechnologies\/orientdb\/raw\/668ece96be210e742a4e2820a3085b215cf55104\/server%2Fsrc%2Fmain%2Fjava%2Fcom%2Forientechnologies%2Forient%2Fserver%2Fnetwork%2Fprotocol%2Fhttp%2FOHttpSessionManager.java', 'patch': '@@ -1,141 +1,142 @@\\n \/*\\r\\n-    *\\r\\n-    *  *  Copyright 2014 Orient Technologies LTD (info(at)orientechnologies.com)\\r\\n-    *  *\\r\\n-    *  *  Licensed under the Apache License, Version 2.0 (the \"License\");\\r\\n-    *  *  you may not use this file except in compliance with the License.\\r\\n-    *  *  You may obtain a copy of the License at\\r\\n-    *  *\\r\\n-    *  *       http:\/\/www.apache.org\/licenses\/LICENSE-2.0\\r\\n-    *  *\\r\\n-    *  *  Unless required by applicable law or agreed to in writing, software\\r\\n-    *  *  distributed under the License is distributed on an \"AS IS\" BASIS,\\r\\n-    *  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n-    *  *  See the License for the specific language governing permissions and\\r\\n-    *  *  limitations under the License.\\r\\n-    *  *\\r\\n-    *  * For more information: http:\/\/www.orientechnologies.com\\r\\n-    *\\r\\n-    *\/\\r\\n+ *\\r\\n+ *  *  Copyright 2014 Orient Technologies LTD (info(at)orientechnologies.com)\\r\\n+ *  *\\r\\n+ *  *  Licensed under the Apache License, Version 2.0 (the \"License\");\\r\\n+ *  *  you may not use this file except in compliance with the License.\\r\\n+ *  *  You may obtain a copy of the License at\\r\\n+ *  *\\r\\n+ *  *       http:\/\/www.apache.org\/licenses\/LICENSE-2.0\\r\\n+ *  *\\r\\n+ *  *  Unless required by applicable law or agreed to in writing, software\\r\\n+ *  *  distributed under the License is distributed on an \"AS IS\" BASIS,\\r\\n+ *  *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\r\\n+ *  *  See the License for the specific language governing permissions and\\r\\n+ *  *  limitations under the License.\\r\\n+ *  *\\r\\n+ *  * For more information: http:\/\/www.orientechnologies.com\\r\\n+ *\\r\\n+ *\/\\r\\n package com.orientechnologies.orient.server.network.protocol.http;\\r\\n \\r\\n import com.orientechnologies.common.concur.resource.OSharedResourceAbstract;\\r\\n- import com.orientechnologies.common.log.OLogManager;\\r\\n- import com.orientechnologies.orient.core.Orient;\\r\\n- import com.orientechnologies.orient.core.config.OGlobalConfiguration;\\r\\n-\\r\\n- import java.util.HashMap;\\r\\n- import java.util.Iterator;\\r\\n- import java.util.Map;\\r\\n- import java.util.Map.Entry;\\r\\n- import java.util.Random;\\r\\n- import java.util.TimerTask;\\r\\n+import com.orientechnologies.common.log.OLogManager;\\r\\n+import com.orientechnologies.orient.core.Orient;\\r\\n+import com.orientechnologies.orient.core.config.OGlobalConfiguration;\\r\\n+\\r\\n+import java.security.SecureRandom;\\r\\n+import java.util.HashMap;\\r\\n+import java.util.Iterator;\\r\\n+import java.util.Map;\\r\\n+import java.util.Map.Entry;\\r\\n+import java.util.Random;\\r\\n+import java.util.TimerTask;\\r\\n \\r\\n \/**\\r\\n-  * Handles the HTTP sessions such as a real HTTP Server.\\r\\n-  *\\r\\n-  * @author Luca Garulli\\r\\n-  *\/\\r\\n- public class OHttpSessionManager extends OSharedResourceAbstract {\\r\\n-   private static final OHttpSessionManager instance = new OHttpSessionManager();\\r\\n-   private Map<String, OHttpSession>        sessions = new HashMap<String, OHttpSession>();\\r\\n-   private int                              expirationTime;\\r\\n-   private Random                           random   = new Random();\\r\\n-\\r\\n-   protected OHttpSessionManager() {\\r\\n-     expirationTime = OGlobalConfiguration.NETWORK_HTTP_SESSION_EXPIRE_TIMEOUT.getValueAsInteger() * 1000;\\r\\n-\\r\\n-     Orient.instance().scheduleTask(new TimerTask() {\\r\\n-       @Override\\r\\n-       public void run() {\\r\\n-         final int expired = checkSessionsValidity();\\r\\n-         if (expired > 0)\\r\\n-           OLogManager.instance().debug(this, \"Removed %d session because expired\", expired);\\r\\n-       }\\r\\n-     }, expirationTime, expirationTime);\\r\\n-   }\\r\\n-\\r\\n-   public int checkSessionsValidity() {\\r\\n-     int expired = 0;\\r\\n-\\r\\n-     acquireExclusiveLock();\\r\\n-     try {\\r\\n-       final long now = System.currentTimeMillis();\\r\\n-\\r\\n-       Entry<String, OHttpSession> s;\\r\\n-       for (Iterator<Map.Entry<String, OHttpSession>> it = sessions.entrySet().iterator(); it.hasNext();) {\\r\\n-         s = it.next();\\r\\n-\\r\\n-         if (now - s.getValue().getUpdatedOn() > expirationTime) {\\r\\n-           \/\/ REMOVE THE SESSION\\r\\n-           it.remove();\\r\\n-           expired++;\\r\\n-         }\\r\\n-       }\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseExclusiveLock();\\r\\n-     }\\r\\n-\\r\\n-     return expired;\\r\\n-   }\\r\\n-\\r\\n-   public OHttpSession[] getSessions() {\\r\\n-     acquireSharedLock();\\r\\n-     try {\\r\\n-\\r\\n-       return (OHttpSession[]) sessions.values().toArray(new OHttpSession[sessions.size()]);\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseSharedLock();\\r\\n-     }\\r\\n-   }\\r\\n-\\r\\n-   public OHttpSession getSession(final String iId) {\\r\\n-     acquireSharedLock();\\r\\n-     try {\\r\\n-\\r\\n-       final OHttpSession sess = sessions.get(iId);\\r\\n-       if (sess != null)\\r\\n-         sess.updateLastUpdatedOn();\\r\\n-       return sess;\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseSharedLock();\\r\\n-     }\\r\\n-   }\\r\\n-\\r\\n-   public String createSession(final String iDatabaseName, final String iUserName, final String iUserPassword) {\\r\\n-     acquireExclusiveLock();\\r\\n-     try {\\r\\n-       final String id = \"OS\" + System.currentTimeMillis() + random.nextLong();\\r\\n-       sessions.put(id, new OHttpSession(id, iDatabaseName, iUserName, iUserPassword));\\r\\n-       return id;\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseExclusiveLock();\\r\\n-     }\\r\\n-   }\\r\\n-\\r\\n-   public OHttpSession removeSession(final String iSessionId) {\\r\\n-     acquireExclusiveLock();\\r\\n-     try {\\r\\n-       return sessions.remove(iSessionId);\\r\\n-\\r\\n-     } finally {\\r\\n-       releaseExclusiveLock();\\r\\n-     }\\r\\n-   }\\r\\n-\\r\\n-   public int getExpirationTime() {\\r\\n-     return expirationTime;\\r\\n-   }\\r\\n-\\r\\n-   public void setExpirationTime(int expirationTime) {\\r\\n-     this.expirationTime = expirationTime;\\r\\n-   }\\r\\n-\\r\\n-   public static OHttpSessionManager getInstance() {\\r\\n-     return instance;\\r\\n-   }\\r\\n- }\\r\\n+ * Handles the HTTP sessions such as a real HTTP Server.\\r\\n+ *\\r\\n+ * @author Luca Garulli\\r\\n+ *\/\\r\\n+public class OHttpSessionManager extends OSharedResourceAbstract {\\r\\n+  private static final OHttpSessionManager instance = new OHttpSessionManager();\\r\\n+  private Map<String, OHttpSession>        sessions = new HashMap<String, OHttpSession>();\\r\\n+  private int                              expirationTime;\\r\\n+  private Random                           random   = new SecureRandom();\\r\\n+\\r\\n+  protected OHttpSessionManager() {\\r\\n+    expirationTime = OGlobalConfiguration.NETWORK_HTTP_SESSION_EXPIRE_TIMEOUT.getValueAsInteger() * 1000;\\r\\n+\\r\\n+    Orient.instance().scheduleTask(new TimerTask() {\\r\\n+      @Override\\r\\n+      public void run() {\\r\\n+        final int expired = checkSessionsValidity();\\r\\n+        if (expired > 0)\\r\\n+          OLogManager.instance().debug(this, \"Removed %d session because expired\", expired);\\r\\n+      }\\r\\n+    }, expirationTime, expirationTime);\\r\\n+  }\\r\\n+\\r\\n+  public int checkSessionsValidity() {\\r\\n+    int expired = 0;\\r\\n+\\r\\n+    acquireExclusiveLock();\\r\\n+    try {\\r\\n+      final long now = System.currentTimeMillis();\\r\\n+\\r\\n+      Entry<String, OHttpSession> s;\\r\\n+      for (Iterator<Map.Entry<String, OHttpSession>> it = sessions.entrySet().iterator(); it.hasNext();) {\\r\\n+        s = it.next();\\r\\n+\\r\\n+        if (now - s.getValue().getUpdatedOn() > expirationTime) {\\r\\n+          \/\/ REMOVE THE SESSION\\r\\n+          it.remove();\\r\\n+          expired++;\\r\\n+        }\\r\\n+      }\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseExclusiveLock();\\r\\n+    }\\r\\n+\\r\\n+    return expired;\\r\\n+  }\\r\\n+\\r\\n+  public OHttpSession[] getSessions() {\\r\\n+    acquireSharedLock();\\r\\n+    try {\\r\\n+\\r\\n+      return (OHttpSession[]) sessions.values().toArray(new OHttpSession[sessions.size()]);\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseSharedLock();\\r\\n+    }\\r\\n+  }\\r\\n+\\r\\n+  public OHttpSession getSession(final String iId) {\\r\\n+    acquireSharedLock();\\r\\n+    try {\\r\\n+\\r\\n+      final OHttpSession sess = sessions.get(iId);\\r\\n+      if (sess != null)\\r\\n+        sess.updateLastUpdatedOn();\\r\\n+      return sess;\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseSharedLock();\\r\\n+    }\\r\\n+  }\\r\\n+\\r\\n+  public String createSession(final String iDatabaseName, final String iUserName, final String iUserPassword) {\\r\\n+    acquireExclusiveLock();\\r\\n+    try {\\r\\n+      final String id = \"OS\" + System.currentTimeMillis() + random.nextLong();\\r\\n+      sessions.put(id, new OHttpSession(id, iDatabaseName, iUserName, iUserPassword));\\r\\n+      return id;\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseExclusiveLock();\\r\\n+    }\\r\\n+  }\\r\\n+\\r\\n+  public OHttpSession removeSession(final String iSessionId) {\\r\\n+    acquireExclusiveLock();\\r\\n+    try {\\r\\n+      return sessions.remove(iSessionId);\\r\\n+\\r\\n+    } finally {\\r\\n+      releaseExclusiveLock();\\r\\n+    }\\r\\n+  }\\r\\n+\\r\\n+  public int getExpirationTime() {\\r\\n+    return expirationTime;\\r\\n+  }\\r\\n+\\r\\n+  public void setExpirationTime(int expirationTime) {\\r\\n+    this.expirationTime = expirationTime;\\r\\n+  }\\r\\n+\\r\\n+  public static OHttpSessionManager getInstance() {\\r\\n+    return instance;\\r\\n+  }\\r\\n+}'}}",
            "message_norm":"adopted securerandom to avoid predicable random numbers in session",
            "language":"en",
            "entities":"[('securerandom', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/src\/main\/java\/com\/orientechnologies\/orient\/server\/network\/protocol\/http\/OHttpSessionManager.java'])",
            "num_files":1.0
        },
        {
            "index":3007,
            "vuln_id":"GHSA-rrx2-r989-2c43",
            "cwe_id":"{'CWE-190'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510'}",
            "dataset":"osv",
            "summary":"Integer overflows in Tensorflow ### Impact \nThe [implementations of `Sparse*Cwise*` ops](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc) are vulnerable to integer overflows. These can be used to trigger large allocations (so, OOM based denial of service) or `CHECK`-fails when building new `TensorShape` objects (so, assert failures based denial of service):\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv(\n    sp_indices=np.array([[9]]),\n    sp_values=np.array([5]),\n    sp_shape=np.array([92233720368., 92233720368]),\n    dense=np.array([4]))\n```\n\nWe are missing some validation on the shapes of the input tensors as well as directly constructing a large `TensorShape` with user-provided dimensions. The latter is an instance of [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md) (CVE-2021-41197) and is easily fixed by replacing a call to `TensorShape` constructor with a call to `BuildTensorShape` static helper factory.\n\n### Patches\nWe have patched the issue in GitHub commits [1b54cadd19391b60b6fcccd8d076426f7221d5e8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8) and [e952a89b7026b98fe8cbe626514a93ed68b7c510](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e952a89b7026b98fe8cbe626514a93ed68b7c510).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1b54cadd19391b60b6fcccd8d076426f7221d5e8",
            "commit_sha":"1b54cadd19391b60b6fcccd8d076426f7221d5e8",
            "patch":"MULTI",
            "chain_ord":"['1b54cadd19391b60b6fcccd8d076426f7221d5e8', 'e952a89b7026b98fe8cbe626514a93ed68b7c510']",
            "before_first_fix_commit":"{'1b54cadd19391b60b6fcccd8d076426f7221d5e8'}",
            "last_fix_commit":"e952a89b7026b98fe8cbe626514a93ed68b7c510",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/10\/2021, 17:46:39",
            "message":"Add missing validation to sparse dense cwise ops.\n\nPiperOrigin-RevId: 415543133\nChange-Id: I5baf3284e919338afb96178c468ad3d3cb0d956c",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1b54cadd19391b60b6fcccd8d076426f7221d5e8\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -78,11 +78,24 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n                     \"but received shapes: \",\\n                     values_t->shape().DebugString(), \" and \",\\n                     shape_t->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        ctx, TensorShapeUtils::IsVector(shape_t->shape()),\\n+        errors::InvalidArgument(\"Input sp_shape must be a vector. Got: \",\\n+                                shape_t->shape().DebugString()));\\n     OP_REQUIRES(\\n         ctx, values_t->dim_size(0) == indices_t->dim_size(0),\\n         errors::InvalidArgument(\\n             \"The first dimension of values and indices should match. (\",\\n             values_t->dim_size(0), \" vs. \", indices_t->dim_size(0), \")\"));\\n+    OP_REQUIRES(\\n+        ctx, shape_t->shape().dim_size(0) == indices_t->shape().dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Number of dimensions must match second dimension of indices. \",\\n+            \"Got \", shape_t->shape().dim_size(0),\\n+            \" dimensions, indices shape: \", indices_t->shape().DebugString()));\\n+    OP_REQUIRES(ctx, shape_t->NumElements() > 0,\\n+                errors::InvalidArgument(\\n+                    \"The shape argument requires at least one element.\"));\\n \\n     const auto indices_mat = indices_t->matrix<int64_t>();\\n     const auto shape_vec = shape_t->vec<int64_t>();'}}",
            "message_norm":"add missing validation to sparse dense cwise ops.\n\npiperorigin-revid: 415543133\nchange-id: i5baf3284e919338afb96178c468ad3d3cb0d956c",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('415543133', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])",
            "num_files":1.0
        },
        {
            "index":32,
            "vuln_id":"GHSA-25fx-mxc2-76g7",
            "cwe_id":"{'CWE-200'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/Sylius\/PayPalPlugin\/commit\/814923c2e9d97fe6279dcee866c34ced3d2fb7a7', 'https:\/\/github.com\/Sylius\/PayPalPlugin\/commit\/2adc46be2764ccee22b4247139b8056fb8d1afff'}",
            "dataset":"osv",
            "summary":"Unauthorized access to Credit card form exposing payer name and not requiring 3DS ### Impact\nURL to the payment page done after checkout was created with autoincremented payment id (`\/pay-with-paypal\/{id}`) and therefore it was easy to access for anyone, not even the order's customer. The problem was, the Credit card form has prefilled \"credit card holder\" field with the Customer's first and last name.\nAdditionally, the mentioned form did not require a 3D Secure authentication, as well as did not checked the result of the 3D Secure authentication.\n\n### Patches\nThe problem has been patched in Sylius\/PayPalPlugin **1.2.4** and **1.3.1**\n\n### Workarounds\nOne can override a `sylius_paypal_plugin_pay_with_paypal_form` route and change its URL parameters to (for example) `{orderToken}\/{paymentId}`, then override the `Sylius\\PayPalPlugin\\Controller\\PayWithPayPalFormAction` service, to operate on the payment taken from the repository by these 2 values. It would also require usage of custom repository method.\nAdditionally, one could override the `@SyliusPayPalPlugin\/payWithPaypal.html.twig` template, to add `contingencies: ['SCA_ALWAYS']` line in `hostedFields.submit(...)` function call (line 421). It would then have to be handled in the function callback.\n\n### For more information\nIf you have any questions or comments about this advisory:\n- Open an issue in Sylius\/PayPalPlugin issues\n- Email us at security at sylius dot com",
            "published_date":"2021-10-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/Sylius\/PayPalPlugin",
            "commit_href":"https:\/\/github.com\/Sylius\/PayPalPlugin\/commit\/2adc46be2764ccee22b4247139b8056fb8d1afff",
            "commit_sha":"2adc46be2764ccee22b4247139b8056fb8d1afff",
            "patch":"MULTI",
            "chain_ord":"['2adc46be2764ccee22b4247139b8056fb8d1afff', '814923c2e9d97fe6279dcee866c34ced3d2fb7a7']",
            "before_first_fix_commit":"{'2adc46be2764ccee22b4247139b8056fb8d1afff', 'a375013be7a740bef132927d74a1e03fd78a60ef'}",
            "last_fix_commit":"814923c2e9d97fe6279dcee866c34ced3d2fb7a7",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/04\/2021, 13:57:45",
            "message":"Require 3D Secure and process its response correctly",
            "author":"Mateusz Zalewski",
            "comments":"{'com_1': {'author': 'Maseeullahz', 'datetime': '01\/29\/2022, 00:49:58', 'body': 'IKSDKN'}}",
            "stats":"{'additions': 33, 'deletions': 13, 'total': 46}",
            "files":"{'src\/Resources\/views\/payWithPaypal.html.twig': {'additions': 33, 'deletions': 13, 'changes': 46, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Sylius\/PayPalPlugin\/raw\/2adc46be2764ccee22b4247139b8056fb8d1afff\/src%2FResources%2Fviews%2FpayWithPaypal.html.twig', 'patch': \"@@ -329,6 +329,8 @@\\n         });\\n \\n         if (paypal.HostedFields.isEligible() === true) {\\n+            let processingOrderId;\\n+\\n             paypal.HostedFields.render({\\n                 createOrder: function(data, actions) {\\n                     document.querySelector('#paypal-payment-container').classList.add('loading');\\n@@ -339,6 +341,8 @@\\n                     }).then(function(res) {\\n                         return res.json();\\n                     }).then(function(data) {\\n+                        processingOrderId = data.orderID;\\n+\\n                         return data.orderID;\\n                     });\\n                 },\\n@@ -419,6 +423,7 @@\\n \\n                     if (formValid) {\\n                         hostedFields.submit({\\n+                            contingencies: ['SCA_ALWAYS'],\\n                             cardholderName: document.getElementById('card-holder-name').value,\\n                             billingAddress: {\\n                                 streetAddress: document.getElementById('card-billing-address-street').value,\\n@@ -428,20 +433,35 @@\\n                                 countryCodeAlpha2: document.getElementById('card-billing-address-country').value\\n                             }\\n                         }).then(payload => {\\n-                            return fetch(completePayPalOrderUrl, {\\n-                                method: 'post'\\n-                            }).then(function(res) {\\n-                                return res.json();\\n+                            if (payload.authenticationReason == 'SUCCESSFUL' && payload.authenticationStatus == 'YES') {\\n+                                return fetch(completePayPalOrderUrl, {\\n+                                    method: 'post'\\n+                                }).then(function(res) {\\n+                                    return res.json();\\n+                                }).then(function(data) {\\n+                                    if (data.status == 'processing') {\\n+                                        return fetch(cancelPayPalPaymentUrl, {\\n+                                            method: 'post',\\n+                                            headers: { 'content-type': 'application\/json' },\\n+                                            body: JSON.stringify({ payPalOrderId: data.orderID })\\n+                                        }).then(window.location.reload());\\n+                                    }\\n+\\n+                                    window.location.href = data.return_url;\\n+                                });\\n+                            }\\n+\\n+\\n+                            return fetch(errorPayPalPaymentUrl, {\\n+                                method: 'post',\\n+                                headers: { 'content-type': 'application\/json' },\\n+                                body: JSON.stringify('Invalid 3D Secure authentication.')\\n                             }).then(function(data) {\\n-                                if (data.status == 'processing') {\\n-                                    return fetch(cancelPayPalPaymentUrl, {\\n-                                        method: 'post',\\n-                                        headers: { 'content-type': 'application\/json' },\\n-                                        body: JSON.stringify({ payPalOrderId: data.orderID })\\n-                                    }).then(window.location.reload());\\n-                                }\\n-\\n-                                window.location.href = data.return_url;\\n+                                return fetch(cancelPayPalPaymentUrl, {\\n+                                    method: 'post',\\n+                                    headers: { 'content-type': 'application\/json' },\\n+                                    body: JSON.stringify({ payPalOrderId: processingOrderId })\\n+                                }).then(window.location.reload());\\n                             });\\n                         });\\n                     } else {\"}}",
            "message_norm":"require 3d secure and process its response correctly",
            "language":"en",
            "entities":"[('secure', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Resources\/views\/payWithPaypal.html.twig'])",
            "num_files":1.0
        },
        {
            "index":2483,
            "vuln_id":"GHSA-mxh3-2699-98g9",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/b5a9ad65e5a4dde1916f02019f8686ad835681ce'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting pimcore pimcore version 10.3.0 and prior is vulnerable to cross-site scripting.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/b5a9ad65e5a4dde1916f02019f8686ad835681ce",
            "commit_sha":"b5a9ad65e5a4dde1916f02019f8686ad835681ce",
            "patch":"SINGLE",
            "chain_ord":"['b5a9ad65e5a4dde1916f02019f8686ad835681ce']",
            "before_first_fix_commit":"{'6ccb5c12fc1be065ebce9c89c4677ee939b88597'}",
            "last_fix_commit":"b5a9ad65e5a4dde1916f02019f8686ad835681ce",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2022, 14:23:39",
            "message":"[Admin] DataObject - Escape class definitions group properly",
            "author":"dpahuja",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/b5a9ad65e5a4dde1916f02019f8686ad835681ce\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassController.php', 'patch': \"@@ -861,7 +861,7 @@ public function fieldcollectionTreeAction(Request $request, EventDispatcherInter\\n                 if (!isset($groups[$item->getGroup()])) {\\n                     $groups[$item->getGroup()] = [\\n                         'id' => 'group_' . $item->getKey(),\\n-                        'text' => $item->getGroup(),\\n+                        'text' => htmlspecialchars($item->getGroup()),\\n                         'expandable' => true,\\n                         'leaf' => false,\\n                         'allowChildren' => true,\\n@@ -1266,7 +1266,7 @@ public function objectbrickTreeAction(Request $request, EventDispatcherInterface\\n                 if (!isset($groups[$item->getGroup()])) {\\n                     $groups[$item->getGroup()] = [\\n                         'id' => 'group_' . $item->getKey(),\\n-                        'text' => $item->getGroup(),\\n+                        'text' => htmlspecialchars($item->getGroup()),\\n                         'expandable' => true,\\n                         'leaf' => false,\\n                         'allowChildren' => true,\"}}",
            "message_norm":"[admin] dataobject - escape class definitions group properly",
            "language":"fr",
            "entities":"[('admin', 'SECWORD', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php'])",
            "num_files":1.0
        },
        {
            "index":5,
            "vuln_id":"GHSA-2363-cqg2-863c",
            "cwe_id":"{'CWE-611'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/hunterhacker\/jdom\/commit\/dd4f3c2fc7893edd914954c73eb577f925a7d361'}",
            "dataset":"osv",
            "summary":"XML External Entity (XXE) Injection in JDOM An XXE issue in SAXBuilder in JDOM through 2.0.6 allows attackers to cause a denial of service via a crafted HTTP request.  At this time there is not released fixed version of JDOM.  As a workaround, to avoid external entities being expanded, one can call `builder.setExpandEntities(false)` and they won't be expanded.",
            "published_date":"2021-07-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/hunterhacker\/jdom",
            "commit_href":"https:\/\/github.com\/hunterhacker\/jdom\/commit\/dd4f3c2fc7893edd914954c73eb577f925a7d361",
            "commit_sha":"dd4f3c2fc7893edd914954c73eb577f925a7d361",
            "patch":"SINGLE",
            "chain_ord":"['dd4f3c2fc7893edd914954c73eb577f925a7d361']",
            "before_first_fix_commit":"{'1f81562b5cc813bfbacb7e2842b5be17eb34896b'}",
            "last_fix_commit":"dd4f3c2fc7893edd914954c73eb577f925a7d361",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/02\/2021, 03:42:05",
            "message":"Addresses #189 - synchronizes external entity expansion setting",
            "author":"Rolf Lear",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'core\/src\/java\/org\/jdom2\/input\/SAXBuilder.java': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/hunterhacker\/jdom\/raw\/dd4f3c2fc7893edd914954c73eb577f925a7d361\/core%2Fsrc%2Fjava%2Forg%2Fjdom2%2Finput%2FSAXBuilder.java', 'patch': '@@ -82,6 +82,7 @@ OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\\n import org.jdom2.DocType;\\n import org.jdom2.Document;\\n import org.jdom2.EntityRef;\\n+import org.jdom2.JDOMConstants;\\n import org.jdom2.JDOMException;\\n import org.jdom2.JDOMFactory;\\n import org.jdom2.Verifier;\\n@@ -797,6 +798,11 @@ public void setFastReconfigure(final boolean fastReconfigure) {\\n \\tpublic void setFeature(final String name, final boolean value) {\\n \\t\\t\/\/ Save the specified feature for later.\\n \\t\\tfeatures.put(name, value ? Boolean.TRUE : Boolean.FALSE);\\n+\\t\\tif (JDOMConstants.SAX_FEATURE_EXTERNAL_ENT.equals(name)) {\\n+\\t\\t\\t\/\/ See issue https:\/\/github.com\/hunterhacker\/jdom\/issues\/189\\n+\\t\\t\\t\/\/ And PR https:\/\/github.com\/hunterhacker\/jdom\/pull\/188\\n+\\t\\t\\tsetExpandEntities(value);\\n+\\t\\t}\\n \\t\\tengine = null;\\n \\t}'}}",
            "message_norm":"addresses #189 - synchronizes external entity expansion setting",
            "language":"en",
            "entities":"[('#189', 'ISSUE', ''), ('external entity', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/src\/java\/org\/jdom2\/input\/SAXBuilder.java'])",
            "num_files":1.0
        }
    ]
}