{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":1441,
            "vuln_id":"GHSA-9w7h-3wwh-6m5q",
            "cwe_id":"{'CWE-79'}",
            "score":6.3,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/ad3928f67b2cd4443f4323d858b666d35a919ba8'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Microweber Microweber prior to 1.2.15 is vulnerable to reflected cross-site scripting on demo.microweber.org\/demo\/module\/. This allows the execution of arbitrary JavaScript as the attacked user.",
            "published_date":"2022-04-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/ad3928f67b2cd4443f4323d858b666d35a919ba8",
            "commit_sha":"ad3928f67b2cd4443f4323d858b666d35a919ba8",
            "patch":"SINGLE",
            "chain_ord":"['ad3928f67b2cd4443f4323d858b666d35a919ba8']",
            "before_first_fix_commit":"{'3e47c4f1933aa3ffd0975e24e34b7af35de947b4'}",
            "last_fix_commit":"ad3928f67b2cd4443f4323d858b666d35a919ba8",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/22\/2022, 16:26:41",
            "message":"update",
            "author":"Peter Ivanov",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 2, 'total': 9}",
            "files":"{'src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/ad3928f67b2cd4443f4323d858b666d35a919ba8\/src%2FMicroweberPackages%2FApp%2FHttp%2FControllers%2FApiController.php', 'patch': \"@@ -611,18 +611,23 @@ public function module()\\n             $request_data_new = [];\\n             $antixss = new AntiXSS();\\n             foreach ($request_data as $k=>$v){\\n-\\n+                if(is_string($v)) {\\n+                    $v = str_replace('<', '-', $v);\\n+                    $v = str_replace('>', '-', $v);\\n+                }\\n                 $v = $antixss->xss_clean($v);\\n \\n                 if(is_string($k)){\\n+                    $k = str_replace('<', '-', $k);\\n+                    $k = str_replace('>', '-', $k);\\n                     $k = $antixss->xss_clean($k);\\n                     if($k){\\n                         $request_data_new[$k] = $v;\\n                     }\\n                 } else {\\n                     $request_data_new[$k] = $v;\\n                 }\\n-                \\n+\\n             }\\n             $request_data = $request_data_new;\\n         }\"}}",
            "message_norm":"update",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php'])",
            "num_files":1.0
        },
        {
            "index":2373,
            "vuln_id":"GHSA-m7fm-4jfh-jrg6",
            "cwe_id":"{'CWE-416'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab'}",
            "dataset":"osv",
            "summary":"Use after free in boosted trees creation ### Impact\nThe implementation for `tf.raw_ops.BoostedTreesCreateEnsemble` can result in a use after free error if an attacker supplies specially crafted arguments:\n\n```python\nimport tensorflow as tf\n\nv= tf.Variable([0.0])\ntf.raw_ops.BoostedTreesCreateEnsemble(\n  tree_ensemble_handle=v.handle,\n  stamp_token=[0],\n  tree_ensemble_serialized=['0']) \n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc#L55) uses a reference counted resource and decrements the refcount if the initialization fails, as it should. However, when the code was written, the  resource was represented as a naked pointer but later refactoring has changed it to be a smart pointer. Thus, when the pointer leaves the scope, a subsequent `free`-ing of the resource occurs, but this fails to take into account that the refcount has already reached 0, thus the resource has been already freed. During this double-free process, members of the resource object are accessed for cleanup but they are invalid as the entire resource has been freed.\n\n### Patches\nWe have patched the issue in GitHub commit [5ecec9c6fbdbc6be03295685190a45e7eee726ab](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5ecec9c6fbdbc6be03295685190a45e7eee726ab",
            "commit_sha":"5ecec9c6fbdbc6be03295685190a45e7eee726ab",
            "patch":"SINGLE",
            "chain_ord":"['5ecec9c6fbdbc6be03295685190a45e7eee726ab']",
            "before_first_fix_commit":"{'d8a39f2dc1cba935ba153092a09e7d4bb2ce5ee2'}",
            "last_fix_commit":"5ecec9c6fbdbc6be03295685190a45e7eee726ab",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 02:13:19",
            "message":"Prevent use after free.\n\nA very old version of the code used `result` as a simple pointer to a resource. Two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `Unref`. Three years after that, we finally uncover the UAF.\n\nPiperOrigin-RevId: 387924872\nChange-Id: I70fb6f199164de49fac20c168132a07b84903f9b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5ecec9c6fbdbc6be03295685190a45e7eee726ab\/tensorflow%2Fcore%2Fkernels%2Fboosted_trees%2Fresource_ops.cc', 'patch': '@@ -53,6 +53,7 @@ class BoostedTreesCreateEnsembleOp : public OpKernel {\\n     if (!result->InitFromSerialized(\\n             tree_ensemble_serialized_t->scalar<tstring>()(), stamp_token)) {\\n       result->Unref();\\n+      result.release();  \/\/ Needed due to the `->Unref` above, to prevent UAF\\n       OP_REQUIRES(\\n           context, false,\\n           errors::InvalidArgument(\"Unable to parse tree ensemble proto.\"));'}}",
            "message_norm":"prevent use after free.\n\na very old version of the code used `result` as a simple pointer to a resource. two years later, the pointer got changed to a `unique_ptr` but author forgot to remove the call to `unref`. three years after that, we finally uncover the uaf.\n\npiperorigin-revid: 387924872\nchange-id: i70fb6f199164de49fac20c168132a07b84903f9b",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('use after free', 'SECWORD', ''), ('changed', 'ACTION', ''), ('remove', 'ACTION', ''), ('387924872', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/boosted_trees\/resource_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":78,
            "vuln_id":"GHSA-2ccx-2gf3-8xvv",
            "cwe_id":"{'CWE-346'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/getkirby-v2\/panel\/commit\/7f9ac1876bacb89fd8f142f5e561a02ebb725baa'}",
            "dataset":"osv",
            "summary":"Kirby .dev domains and some reverse proxy setups were treated as local ### Impact\n\n#### About our registration block\n\nIn order to protect new installations on public servers that don't have an admin account for the Panel yet, we block account registration there by default. This is a security feature, which we implemented years ago in Kirby 2. It helps to avoid that you forget registering your first admin account on a public server. \n\nIn this case \u2013 without our security block \u2013 someone else might theoretically be able to find your site, find out it's running on Kirby, find the Panel and then register the account first. It's an unlikely situation, but it's still a certain risk.\n\nTo be able to register the first Panel account on a public server, you have to enforce the installer via a config setting. This helps to push all users to the best practice of registering your first Panel account on your local machine and upload it together with the rest of the site. \n\n#### The issue\n\nAs noted by [Jukka Rautanen](https:\/\/github.com\/jukra), this installation block implementation in Kirby versions before 3.3.6 still assumed that .dev domains are local domains, which is no longer true. In the meantime, those domains became publicly available. This means that our installation block is no longer working as expected if you use a .dev domain for your Kirby site.\n\nIn fixing this issue, we've also found out that the local installation check may also fail if your site is behind a reverse proxy. \n\n#### Am I affected?\n\nYou are only affected if:\n\n1. you use a .dev domain or your site is behind a reverse proxy &\n2. you have not yet registered your first Panel account on the public server & \n3. someone finds your site and tries to login at `yourdomain.dev\/panel` before you register your first account.\n\nYou are not affected if you have already created one or multiple Panel accounts (no matter if on a .dev domain or behind a reverse proxy).\n\n### Patches\n\nThe problem has been patched in [Kirby 2.5.14](https:\/\/github.com\/getkirby-v2\/panel\/releases\/tag\/2.5.14) and [Kirby 3.3.6](https:\/\/github.com\/getkirby\/kirby\/releases\/tag\/3.3.6). Please update to one of these or a [later version](https:\/\/github.com\/getkirby\/kirby\/releases) to fix the vulnerability.\n\n**Note:** Kirby 2 reaches end of life on December 31, 2020. We therefore recommend to upgrade your Kirby 2 sites to Kirby 3. If you cannot upgrade, we still recommend to update to Kirby 2.5.14.\n\n### Workarounds\n\nKirby 2 sites on older releases can also be patched by applying the [changes from this commit](https:\/\/github.com\/getkirby-v2\/panel\/commit\/7f9ac1876bacb89fd8f142f5e561a02ebb725baa).",
            "published_date":"2021-01-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/getkirby-v2\/panel",
            "commit_href":"https:\/\/github.com\/getkirby-v2\/panel\/commit\/7f9ac1876bacb89fd8f142f5e561a02ebb725baa",
            "commit_sha":"7f9ac1876bacb89fd8f142f5e561a02ebb725baa",
            "patch":"SINGLE",
            "chain_ord":"['7f9ac1876bacb89fd8f142f5e561a02ebb725baa']",
            "before_first_fix_commit":"{'5a569d4e3ddaea2b6628d7ec1472a3e8bc410881'}",
            "last_fix_commit":"7f9ac1876bacb89fd8f142f5e561a02ebb725baa",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/01\/2020, 10:11:11",
            "message":"Better check for local environments",
            "author":"Bastian Allgeier",
            "comments":null,
            "stats":"{'additions': 41, 'deletions': 7, 'total': 48}",
            "files":"{'app\/src\/panel.php': {'additions': 41, 'deletions': 7, 'changes': 48, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/getkirby-v2\/panel\/raw\/7f9ac1876bacb89fd8f142f5e561a02ebb725baa\/app%2Fsrc%2Fpanel.php', 'patch': \"@@ -493,13 +493,47 @@ public function license() {\\n   }\\n \\n   public function isLocal() {\\n-    $localhosts = array('::1', '127.0.0.1', '0.0.0.0');\\n-    return (\\n-      in_array(server::get('SERVER_ADDR'), $localhosts) ||\\n-      server::get('SERVER_NAME') == 'localhost' ||\\n-      str::endsWith(server::get('SERVER_NAME'), '.localhost') ||\\n-      str::endsWith(server::get('SERVER_NAME'), '.test')\\n-    );\\n+\\n+    $host = server::get('SERVER_NAME');\\n+    $ip   = server::get('SERVER_ADDR');\\n+\\n+    if ($host === 'localhost') {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.localhost') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.local') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (str::endsWith($host, '.test') === true) {\\n+      return true;\\n+    }\\n+\\n+    if (in_array($ip, ['::1', '127.0.0.1']) === true) {\\n+\\n+      if (\\n+        isset($_SERVER['HTTP_X_FORWARDED_FOR']) === true &&\\n+        in_array($_SERVER['HTTP_X_FORWARDED_FOR'], ['::1', '127.0.0.1']) === false\\n+      ) {\\n+        return false;\\n+      }\\n+\\n+      if (\\n+        isset($_SERVER['HTTP_CLIENT_IP']) === true &&\\n+        in_array($_SERVER['HTTP_CLIENT_IP'], ['::1', '127.0.0.1']) === false\\n+      ) {\\n+        return false;\\n+      }\\n+\\n+      \/\/ no reverse proxy or the real client also comes from localhost\\n+      return true;\\n+    }\\n+\\n+    return false;\\n   }\\n \\n   public function notify($text) {\"}}",
            "message_norm":"better check for local environments",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/src\/panel.php'])",
            "num_files":1.0
        },
        {
            "index":1949,
            "vuln_id":"GHSA-gx5w-rrhp-f436",
            "cwe_id":"{'CWE-79'}",
            "score":8.2,
            "chain":"{'https:\/\/github.com\/rust-lang\/mdBook\/commit\/32abeef088e98327ca0dfccdad92e84afa9d2e9b'}",
            "dataset":"osv",
            "summary":"XSS in mdBook > This is a cross-post of [the official security advisory][ml]. The official post contains a signed version with our PGP key, as well.\n\n[ml]: https:\/\/groups.google.com\/g\/rustlang-security-announcements\/c\/3-sO6of29O0\n\nThe Rust Security Response Working Group was recently notified of a security issue affecting the search feature of mdBook, which could allow an attacker to execute arbitrary JavaScript code on the page.\n\nThe CVE for this vulnerability is [CVE-2020-26297](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2020-26297).\n\n## Overview\n\nThe search feature of mdBook (introduced in version 0.1.4) was affected by a cross site scripting vulnerability that allowed an attacker to execute arbitrary JavaScript code on an user's browser by tricking the user into typing a malicious search query, or tricking the user into clicking a link to the search page with the malicious search query prefilled.\n\nmdBook 0.4.5 fixes the vulnerability by properly escaping the search query.\n\n## Mitigations\n\nOwners of websites built with mdBook have to upgrade to mdBook 0.4.5 or greater and rebuild their website contents with it. It's possible to install mdBook 0.4.5 on the local system with:\n\n```\ncargo install mdbook --version 0.4.5 --force\n```\n\n## Acknowledgements\n\nThanks to Kamil Vavra for responsibly disclosing the vulnerability to us according to [our security policy](https:\/\/www.rust-lang.org\/policies\/security).\n\n## Timeline of events\n\nAll times are listed in UTC.\n\n- 2020-12-30 20:14 - The issue is reported to the Rust Security Response WG\n- 2020-12-30 20:32 - The issue is acknowledged and the investigation began\n- 2020-12-30 21:21 - Found the cause of the vulnerability and prepared the patch\n- 2021-01-04 15:00 - Patched version released and vulnerability disclosed",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/rust-lang\/mdBook",
            "commit_href":"https:\/\/github.com\/rust-lang\/mdBook\/commit\/32abeef088e98327ca0dfccdad92e84afa9d2e9b",
            "commit_sha":"32abeef088e98327ca0dfccdad92e84afa9d2e9b",
            "patch":"SINGLE",
            "chain_ord":"['32abeef088e98327ca0dfccdad92e84afa9d2e9b']",
            "before_first_fix_commit":"{'5de9b6841ed03c8149eeec3c8a5fcd40b5d4dbe0'}",
            "last_fix_commit":"32abeef088e98327ca0dfccdad92e84afa9d2e9b",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/30\/2020, 21:13:15",
            "message":"fix xss in the search page\n\nThanks to Kamil Vavra for responsibly disclosing the vulnerability\naccording to Rust's Security Policy.",
            "author":"Pietro Albini",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'src\/theme\/searcher\/searcher.js': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rust-lang\/mdBook\/raw\/32abeef088e98327ca0dfccdad92e84afa9d2e9b\/src%2Ftheme%2Fsearcher%2Fsearcher.js', 'patch': '@@ -145,6 +145,11 @@ window.search = window.search || {};\\n             url.push(\"\");\\n         }\\n \\n+        \/\/ encodeURIComponent escapes all chars that could allow an XSS except\\n+        \/\/ for \\'. Due to that we also manually replace \\' with its url-encoded\\n+        \/\/ representation (%27).\\n+        var searchterms = encodeURIComponent(searchterms.join(\" \")).replace(\/\\\\\\'\/g, \"%27\");\\n+\\n         return \\'<a href=\"\\' + path_to_root + url[0] + \\'?\\' + URL_MARK_PARAM + \\'=\\' + searchterms + \\'#\\' + url[1]\\n             + \\'\" aria-details=\"teaser_\\' + teaser_count + \\'\">\\' + result.doc.breadcrumbs + \\'<\/a>\\'\\n             + \\'<span class=\"teaser\" id=\"teaser_\\' + teaser_count + \\'\" aria-label=\"Search Result Teaser\">\\''}}",
            "message_norm":"fix xss in the search page\n\nthanks to kamil vavra for responsibly disclosing the vulnerability\naccording to rust's security policy.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/theme\/searcher\/searcher.js'])",
            "num_files":1.0
        },
        {
            "index":2476,
            "vuln_id":"GHSA-mw6v-crh8-8533",
            "cwe_id":"{'CWE-190'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d107fee1e4a9a4462f01564798d345802acc2aef'}",
            "dataset":"osv",
            "summary":"Integer Overflow or Wraparound in Google TensorFlow Google TensorFlow 1.7.x and earlier is affected by a Buffer Overflow vulnerability. The type of exploitation is context-dependent.",
            "published_date":"2019-04-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d107fee1e4a9a4462f01564798d345802acc2aef",
            "commit_sha":"d107fee1e4a9a4462f01564798d345802acc2aef",
            "patch":"SINGLE",
            "chain_ord":"['d107fee1e4a9a4462f01564798d345802acc2aef']",
            "before_first_fix_commit":"{'f8acfb01792886274778d9ad7a9d990cbef14141'}",
            "last_fix_commit":"d107fee1e4a9a4462f01564798d345802acc2aef",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/04\/2018, 23:26:25",
            "message":"Check that n + kBlockTrailerSize does not overflow before reading a block\n\nPiperOrigin-RevId: 191666300",
            "author":"Frank Chen",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'tensorflow\/core\/lib\/io\/format.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d107fee1e4a9a4462f01564798d345802acc2aef\/tensorflow%2Fcore%2Flib%2Fio%2Fformat.cc', 'patch': '@@ -13,6 +13,8 @@ See the License for the specific language governing permissions and\\n limitations under the License.\\n ==============================================================================*\/\\n \\n+#include <limits>\\n+\\n #include \"tensorflow\/core\/lib\/io\/format.h\"\\n \\n #include \"tensorflow\/core\/lib\/core\/coding.h\"\\n@@ -84,6 +86,11 @@ Status ReadBlock(RandomAccessFile* file, const BlockHandle& handle,\\n   \/\/ Read the block contents as well as the type\/crc footer.\\n   \/\/ See table_builder.cc for the code that built this structure.\\n   size_t n = static_cast<size_t>(handle.size());\\n+\\n+  if (kBlockTrailerSize > std::numeric_limits<size_t>::max() - n) {\\n+    return errors::DataLoss(\"handle.size() too big\");\\n+  }\\n+\\n   char* buf = new char[n + kBlockTrailerSize];\\n   StringPiece contents;\\n   Status s = file->Read(handle.offset(), n + kBlockTrailerSize, &contents, buf);'}}",
            "message_norm":"check that n + kblocktrailersize does not overflow before reading a block\n\npiperorigin-revid: 191666300",
            "language":"en",
            "entities":"[('overflow', 'SECWORD', ''), ('191666300', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/lib\/io\/format.cc'])",
            "num_files":1.0
        },
        {
            "index":2885,
            "vuln_id":"GHSA-r6pg-pjwc-j585",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `SparseFillEmptyRows` ### Impact\nAn attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.SparseFillEmptyRows`:\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[0, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndense_shape = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = 0\n    \ntf.raw_ops.SparseFillEmptyRows(\n    indices=indices, values=values, dense_shape=dense_shape,\n    default_value=default_value)\n```\n\nThis is because of missing [validation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/fdc82089d206e281c628a93771336bf87863d5e8\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc#L230-L231) that was covered under a `TODO`. If the `dense_shape` tensor is empty, then `dense_shape_t.vec<>()` would cause a null pointer dereference in the implementation of the op:\n\n```cc\ntemplate <typename T, typename Tindex>\nstruct SparseFillEmptyRows<CPUDevice, T, Tindex> {\n  Status operator()(OpKernelContext* context, const Tensor& default_value_t,\n                    const Tensor& indices_t, const Tensor& values_t,\n                    const Tensor& dense_shape_t,\n                    typename AsyncOpKernel::DoneCallback done) {\n    ...\n    const auto dense_shape = dense_shape_t.vec<Tindex>();\n    ... \n  }\n}\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [faa76f39014ed3b5e2c158593b1335522e573c7f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f",
            "commit_sha":"faa76f39014ed3b5e2c158593b1335522e573c7f",
            "patch":"SINGLE",
            "chain_ord":"['faa76f39014ed3b5e2c158593b1335522e573c7f']",
            "before_first_fix_commit":"{'fdc82089d206e281c628a93771336bf87863d5e8'}",
            "last_fix_commit":"faa76f39014ed3b5e2c158593b1335522e573c7f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/04\/2021, 22:35:39",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseFillEmptyRows`.\n\nPiperOrigin-RevId: 372009178\nChange-Id: Ia1a9e9691ecaa072f32fb39a0887b2aabd399210",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/faa76f39014ed3b5e2c158593b1335522e573c7f\/tensorflow%2Fcore%2Fkernels%2Fsparse_fill_empty_rows_op.cc', 'patch': '@@ -228,7 +228,10 @@ void SparseFillEmptyRowsOpImpl(OpKernelContext* context,\\n                               default_value_t.shape().DebugString()),\\n       done);\\n   \/\/ TODO(ebrevdo): add shape checks between values, indices,\\n-  \/\/ dense_shape.  Also add check that dense rank > 0.\\n+  \/\/ Also add check that dense rank > 0.\\n+  OP_REQUIRES_ASYNC(context, dense_shape_t.NumElements() != 0,\\n+                    errors::InvalidArgument(\"Dense shape cannot be empty.\"),\\n+                    done);\\n \\n   using FunctorType = functor::SparseFillEmptyRows<Device, T, Tindex>;\\n   OP_REQUIRES_OK_ASYNC(context,'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsefillemptyrows`.\n\npiperorigin-revid: 372009178\nchange-id: ia1a9e9691ecaa072f32fb39a0887b2aabd399210",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372009178', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1753,
            "vuln_id":"GHSA-fp76-f299-v3hj",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/neorazorx\/facturascripts\/commit\/1d1edb40b40016d7fd2893b410b98569d7facca1'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in FacturaScripts Cross-site Scripting (XSS) - Stored in GitHub repository neorazorx\/facturascripts prior to 2022.06.",
            "published_date":"2022-06-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/neorazorx\/facturascripts",
            "commit_href":"https:\/\/github.com\/neorazorx\/facturascripts\/commit\/1d1edb40b40016d7fd2893b410b98569d7facca1",
            "commit_sha":"1d1edb40b40016d7fd2893b410b98569d7facca1",
            "patch":"SINGLE",
            "chain_ord":"['1d1edb40b40016d7fd2893b410b98569d7facca1']",
            "before_first_fix_commit":"{'73a6595ca85984d65f656c6356fabb23d1936c54'}",
            "last_fix_commit":"1d1edb40b40016d7fd2893b410b98569d7facca1",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 09:55:32",
            "message":"Force to download SVG files to prevent security problems.\n------\nForzamos a descargar los archivos SVG para evitar problemas de seguridad.",
            "author":"Carlos Garcia Gomez",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 10, 'total': 29}",
            "files":"{'Core\/App\/AppRouter.php': {'additions': 19, 'deletions': 10, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NeoRazorX\/facturascripts\/raw\/1d1edb40b40016d7fd2893b410b98569d7facca1\/Core%2FApp%2FAppRouter.php', 'patch': '@@ -127,8 +127,7 @@ public function getFile(): bool\\n         $allowedFolders = [\\'node_modules\\', \\'vendor\\', \\'Dinamic\\', \\'Core\\', \\'Plugins\\', \\'MyFiles\/Public\\'];\\n         foreach ($allowedFolders as $folder) {\\n             if (\\'\/\\' . $folder === substr($uri, 0, 1 + strlen($folder))) {\\n-                header(\\'Content-Type: \\' . $this->getMime($filePath));\\n-                readfile($filePath);\\n+                $this->download($filePath);\\n                 return true;\\n             }\\n         }\\n@@ -137,14 +136,7 @@ public function getFile(): bool\\n         $token = filter_input(INPUT_GET, \\'myft\\');\\n         $fixedFilePath = substr(urldecode($uri), 1);\\n         if (\\'\/MyFiles\/\\' === substr($uri, 0, 9) && $token && MyFilesToken::validate($fixedFilePath, $token)) {\\n-            header(\\'Content-Type: \\' . $this->getMime($filePath));\\n-\\n-            \/\/ disable the buffer if enabled\\n-            if (ob_get_contents()) {\\n-                ob_end_flush();\\n-            }\\n-\\n-            readfile($filePath);\\n+            $this->download($filePath);\\n             return true;\\n         }\\n \\n@@ -205,6 +197,23 @@ private function deploy()\\n         }\\n     }\\n \\n+    private function download(string $filePath)\\n+    {\\n+        header(\\'Content-Type: \\' . $this->getMime($filePath));\\n+\\n+        \/\/ disable the buffer if enabled\\n+        if (ob_get_contents()) {\\n+            ob_end_flush();\\n+        }\\n+\\n+        \/\/ force to download svg files to prevent XSS attacks\\n+        if (strpos($filePath, \\'.svg\\') !== false) {\\n+            header(\\'Content-Disposition: attachment; filename=\"\\' . basename($filePath) . \\'\"\\');\\n+        }\\n+\\n+        readfile($filePath);\\n+    }\\n+\\n     \/**\\n      * Return the mime type from given file.\\n      *'}}",
            "message_norm":"force to download svg files to prevent security problems.\n------\nforzamos a descargar los archivos svg para evitar problemas de seguridad.",
            "language":"es",
            "entities":"[('prevent', 'ACTION', ''), ('security', 'SECWORD', ''), ('problems', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['Core\/App\/AppRouter.php'])",
            "num_files":1.0
        },
        {
            "index":2146,
            "vuln_id":"GHSA-hwj9-h5mp-3pm3",
            "cwe_id":"{'CWE-400'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/postcss\/postcss\/commit\/54cbf3c4847eb0fb1501b9d2337465439e849734', 'https:\/\/github.com\/postcss\/postcss\/commit\/b6f3e4d5a8d7504d553267f80384373af3a3dec5', 'https:\/\/github.com\/postcss\/postcss\/commit\/8682b1e4e328432ba692bed52326e84439cec9e4'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in postcss The npm package `postcss` from 7.0.0 and before versions 7.0.36 and 8.2.10 is vulnerable to Regular Expression Denial of Service (ReDoS) during source map parsing.",
            "published_date":"2021-05-10",
            "chain_len":3,
            "project":"https:\/\/github.com\/postcss\/postcss",
            "commit_href":"https:\/\/github.com\/postcss\/postcss\/commit\/54cbf3c4847eb0fb1501b9d2337465439e849734",
            "commit_sha":"54cbf3c4847eb0fb1501b9d2337465439e849734",
            "patch":"MULTI",
            "chain_ord":"['8682b1e4e328432ba692bed52326e84439cec9e4', 'b6f3e4d5a8d7504d553267f80384373af3a3dec5', '54cbf3c4847eb0fb1501b9d2337465439e849734']",
            "before_first_fix_commit":"{'12832f3d203474bd273bd06bd3b2407567bfe09e'}",
            "last_fix_commit":"54cbf3c4847eb0fb1501b9d2337465439e849734",
            "chain_ord_pos":3.0,
            "commit_datetime":"06\/11\/2021, 02:38:48",
            "message":"Backport ReDoS vulnerabilities from PostCSS 8",
            "author":"Andrey Sitnik",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 2, 'total': 6}",
            "files":"{'lib\/previous-map.es6': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/postcss\/postcss\/raw\/54cbf3c4847eb0fb1501b9d2337465439e849734\/lib%2Fprevious-map.es6', 'patch': '@@ -73,12 +73,14 @@ class PreviousMap {\\n \\n   getAnnotationURL (sourceMapString) {\\n     return sourceMapString\\n-      .match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\s*\\\\*\\\\\/\/)[1]\\n+      .match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=((?:(?!sourceMappingURL=).)*)\\\\*\\\\\/\/)[1]\\n       .trim()\\n   }\\n \\n   loadAnnotation (css) {\\n-    let annotations = css.match(\/\\\\\/\\\\*\\\\s*# sourceMappingURL=(.*)\\\\s*\\\\*\\\\\/\/mg)\\n+    let annotations = css.match(\\n+      \/\\\\\/\\\\*\\\\s*# sourceMappingURL=(?:(?!sourceMappingURL=).)*\\\\*\\\\\/\/gm\\n+    )\\n \\n     if (annotations && annotations.length > 0) {\\n       \/\/ Locate the last sourceMappingURL to avoid picking up'}}",
            "message_norm":"backport redos vulnerabilities from postcss 8",
            "language":"en",
            "entities":"[('redos', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/previous-map.es6'])",
            "num_files":1.0
        },
        {
            "index":1489,
            "vuln_id":"GHSA-c582-c96p-r5cq",
            "cwe_id":"{'CWE-400', 'CWE-770'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e'}",
            "dataset":"osv",
            "summary":"Memory exhaustion in Tensorflow ### Impact \nThe [implementation of `ThreadPoolHandle`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc#L79-L135) can be used to trigger a denial of service attack by allocating too much memory:\n\n```python\nimport tensorflow as tf\ny = tf.raw_ops.ThreadPoolHandle(num_threads=0x60000000,display_name='tf')\n```\n\nThis is because the `num_threads` argument is only checked to not be negative, but there is no upper bound on its value.\n    \n### Patches\nWe have patched the issue in GitHub commit [e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "commit_sha":"e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "patch":"SINGLE",
            "chain_ord":"['e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e']",
            "before_first_fix_commit":"{'dc94fe9983e3deca817b7a081fa43c4e3b1ddec8'}",
            "last_fix_commit":"e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/19\/2021, 00:10:34",
            "message":"[tf.data] Set limit on number of threads used in threadpool_dataset.\n\nPiperOrigin-RevId: 410922677\nChange-Id: Ib25814a99043ab10805b5d2d7088ae0e0b7b04fd",
            "author":"Andrew Audibert",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 7, 'total': 26}",
            "files":"{'tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e\/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fthreadpool_dataset_op.cc', 'patch': '@@ -39,6 +39,22 @@ namespace experimental {\\n     PrivateThreadPoolDatasetOp::kDatasetType;\\n \/* static *\/ constexpr const char* const PrivateThreadPoolDatasetOp::kDatasetOp;\\n \\n+namespace {\\n+\/\/ To prevent integer overflow issues when allocating threadpool memory for an\\n+\/\/ unreasonable number of threads.\\n+constexpr int kThreadLimit = 65536;\\n+\\n+Status ValidateNumThreads(int32_t num_threads) {\\n+  if (num_threads < 0) {\\n+    return errors::InvalidArgument(\"`num_threads` must be >= 0\");\\n+  }\\n+  if (num_threads >= kThreadLimit) {\\n+    return errors::InvalidArgument(\"`num_threads` must be < \", kThreadLimit);\\n+  }\\n+  return Status::OK();\\n+}\\n+}  \/\/ namespace\\n+\\n class ThreadPoolResource : public ResourceBase {\\n  public:\\n   ThreadPoolResource(Env* env, const ThreadOptions& thread_options,\\n@@ -83,9 +99,7 @@ class ThreadPoolHandleOp : public OpKernel {\\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));\\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",\\n                                      &max_intra_op_parallelism_));\\n-    OP_REQUIRES(\\n-        ctx, num_threads_ > 0,\\n-        errors::InvalidArgument(\"`num_threads` must be greater than zero.\"));\\n+    OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));\\n   }\\n \\n   \/\/ The resource is deleted from the resource manager only when it is private\\n@@ -531,8 +545,7 @@ void PrivateThreadPoolDatasetOp::MakeDatasetFromOptions(OpKernelContext* ctx,\\n                                                         DatasetBase* input,\\n                                                         int32_t num_threads,\\n                                                         DatasetBase** output) {\\n-  OP_REQUIRES(ctx, num_threads >= 0,\\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\\n   *output = new Dataset(ctx,\\n                         DatasetContext(DatasetContext::Params(\\n                             {PrivateThreadPoolDatasetOp::kDatasetType,\\n@@ -546,8 +559,7 @@ void PrivateThreadPoolDatasetOp::MakeDataset(OpKernelContext* ctx,\\n   int64_t num_threads = 0;\\n   OP_REQUIRES_OK(\\n       ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));\\n-  OP_REQUIRES(ctx, num_threads >= 0,\\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\\n   *output = new Dataset(ctx, input, num_threads);\\n }'}}",
            "message_norm":"[tf.data] set limit on number of threads used in threadpool_dataset.\n\npiperorigin-revid: 410922677\nchange-id: ib25814a99043ab10805b5d2d7088ae0e0b7b04fd",
            "language":"en",
            "entities":"[('410922677', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc'])",
            "num_files":1.0
        },
        {
            "index":63,
            "vuln_id":"GHSA-2877-693q-pj33",
            "cwe_id":"{'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/genieacs\/genieacs\/commit\/7f295beeecc1c1f14308a93c82413bb334045af6'}",
            "dataset":"osv",
            "summary":"OS Command Injection in GenieACS In GenieACS 1.2.x before 1.2.8, the UI interface API is vulnerable to unauthenticated OS command injection via the ping host argument (lib\/ui\/api.ts and lib\/ping.ts). The vulnerability arises from insufficient input validation combined with a missing authorization check.",
            "published_date":"2022-03-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/genieacs\/genieacs",
            "commit_href":"https:\/\/github.com\/genieacs\/genieacs\/commit\/7f295beeecc1c1f14308a93c82413bb334045af6",
            "commit_sha":"7f295beeecc1c1f14308a93c82413bb334045af6",
            "patch":"SINGLE",
            "chain_ord":"['7f295beeecc1c1f14308a93c82413bb334045af6']",
            "before_first_fix_commit":"{'2ac536bf8f2dd03c24b2eff35b69578b4efae94e'}",
            "last_fix_commit":"7f295beeecc1c1f14308a93c82413bb334045af6",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/14\/2021, 07:33:35",
            "message":"Validate host arg passed to ping\n\nFixes remote code execution vulnerability reported by Alex Hordijk.",
            "author":"Zaid Abdulla",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'lib\/ping.ts': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/genieacs\/genieacs\/raw\/7f295beeecc1c1f14308a93c82413bb334045af6\/lib%2Fping.ts', 'patch': '@@ -19,6 +19,7 @@\\n \\n import { platform } from \"os\";\\n import { exec } from \"child_process\";\\n+import { domainToASCII } from \"url\";\\n \\n export interface PingResult {\\n   packetsTransmitted: number;\\n@@ -30,11 +31,23 @@ export interface PingResult {\\n   mdev: number;\\n }\\n \\n+function isValidHost(host: string): boolean {\\n+  \/\/ Valid chars in IPv4, IPv6, domain names\\n+  if (\/^[a-zA-Z0-9\\\\-.:[\\\\]-]+$\/.test(host)) return true;\\n+\\n+  \/\/ Check if input is an IDN convert to Punycode\\n+  \/\/ Can\\'t merge with above because domainToASCII doesn\\'t accept IP addresses\\n+  return \/^[a-zA-Z0-9\\\\-.:[\\\\]-]+$\/.test(domainToASCII(host));\\n+}\\n+\\n export function ping(\\n   host: string,\\n   callback: (err: Error, res?: PingResult, stdout?: string) => void\\n ): void {\\n   let cmd: string, parseRegExp1: RegExp, parseRegExp2: RegExp;\\n+  \/\/ Validate input to prevent possible remote code execution\\n+  \/\/ Credit to Alex Hordijk for reporting this vulnerability\\n+  if (!isValidHost(host)) return callback(new Error(\"Invalid host\"));\\n   host = host.replace(\"[\", \"\").replace(\"]\", \"\");\\n   switch (platform()) {\\n     case \"linux\":'}}",
            "message_norm":"validate host arg passed to ping\n\nfixes remote code execution vulnerability reported by alex hordijk.",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('fixes', 'ACTION', ''), ('remote code execution', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/ping.ts'])",
            "num_files":1.0
        },
        {
            "index":2314,
            "vuln_id":"GHSA-jwf9-w5xm-f437",
            "cwe_id":"{'CWE-125'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f'}",
            "dataset":"osv",
            "summary":"Heap OOB in TFLite's `Gather*` implementations ### Impact\nTFLite's [`GatherNd` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/gather_nd.cc#L124) does not support negative indices but there are no checks for this situation.\n\nHence, an attacker can read arbitrary data from the heap by carefully crafting a model with negative values in `indices`.\n\nSimilar issue exists in [`Gather` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/gather.cc).\n\n```python\nimport tensorflow as tf\nimport numpy as np\ntf.compat.v1.disable_v2_behavior()\n\nparams = tf.compat.v1.placeholder(name=\"params\", dtype=tf.int64, shape=(1,))\nindices = tf.compat.v1.placeholder(name=\"indices\", dtype=tf.int64, shape=())\n\nout = tf.gather(params, indices, name='out')\n\nwith tf.compat.v1.Session() as sess:\n   converter = tf.compat.v1.lite.TFLiteConverter.from_session(sess, [params, indices], [out])\n   tflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninput_details = interpreter.get_input_details()\noutput_details = interpreter.get_output_details()\n\nparams_data = np.reshape(np.array([1], dtype=np.int64), newshape=(1,))\nindices_data = np.reshape(np.array(-10, dtype=np.int64), newshape=())\ninterpreter.set_tensor(input_details[0]['index'], params_data)\ninterpreter.set_tensor(input_details[1]['index'], indices_data)\n\ninterpreter.invoke()\n```\n\n### Patches\nWe have patched the issue in GitHub commits [bb6a0383ed553c286f87ca88c207f6774d5c4a8f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f) and [eb921122119a6b6e470ee98b89e65d721663179d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/eb921122119a6b6e470ee98b89e65d721663179d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f",
            "commit_sha":"bb6a0383ed553c286f87ca88c207f6774d5c4a8f",
            "patch":"MULTI",
            "chain_ord":"['bb6a0383ed553c286f87ca88c207f6774d5c4a8f', 'eb921122119a6b6e470ee98b89e65d721663179d']",
            "before_first_fix_commit":"{'ac72971cc6fbbfe4df7e67a8347ef1b6ab63b5fd'}",
            "last_fix_commit":"eb921122119a6b6e470ee98b89e65d721663179d",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/27\/2021, 22:20:26",
            "message":"Prevent heap OOB read in TFLite's `gather_nd.cc`.\n\nPassing negative indices is illegal but there was a missing check so that resulted in OOB accesses.\n\nPiperOrigin-RevId: 387208551\nChange-Id: I6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 0, 'total': 11}",
            "files":"{'tensorflow\/lite\/kernels\/gather_nd.cc': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/bb6a0383ed553c286f87ca88c207f6774d5c4a8f\/tensorflow%2Flite%2Fkernels%2Fgather_nd.cc', 'patch': '@@ -123,6 +123,17 @@ TfLiteStatus GatherNdString(const TfLiteTensor* params,\\n template <typename IndicesT>\\n TfLiteStatus EvalGatherNd(TfLiteContext* context, const TfLiteTensor* params,\\n                           const TfLiteTensor* indices, TfLiteTensor* output) {\\n+  bool indices_has_only_positive_elements = true;\\n+  const auto* indices_values = GetTensorData<IndicesT>(indices);\\n+  const size_t num_indices = indices->bytes \/ sizeof(IndicesT);\\n+  for (size_t i = 0; i < num_indices; i++) {\\n+    if (indices_values[i] < 0) {\\n+      indices_has_only_positive_elements = false;\\n+      break;\\n+    }\\n+  }\\n+  TF_LITE_ENSURE(context, indices_has_only_positive_elements);\\n+\\n   switch (params->type) {\\n     case kTfLiteFloat32:\\n       return GatherNd<float, IndicesT>(params, indices, output);'}}",
            "message_norm":"prevent heap oob read in tflite's `gather_nd.cc`.\n\npassing negative indices is illegal but there was a missing check so that resulted in oob accesses.\n\npiperorigin-revid: 387208551\nchange-id: i6b7a8a62d3e7c13a16d81619e5bc23ae2cdbc7fd",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('missing check', 'SECWORD', ''), ('oob', 'SECWORD', ''), ('387208551', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/gather_nd.cc'])",
            "num_files":1.0
        },
        {
            "index":2178,
            "vuln_id":"GHSA-j3mj-fhpq-qqjj",
            "cwe_id":"{'CWE-617'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5b491cd5e41ad63735161cec9c2a568172c8b6a3'}",
            "dataset":"osv",
            "summary":"Reachable Assertion in Tensorflow ### Impact\nWhen decoding a tensor from protobuf, a TensorFlow process can encounter cases where a `CHECK` assertion is invalidated based on user controlled arguments, if the tensors have an invalid `dtype` and 0 elements or an invalid shape. This allows attackers to cause denial of services in TensorFlow processes.\n\n### Patches\nWe have patched the issue in GitHub commit [5b491cd5e41ad63735161cec9c2a568172c8b6a3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5b491cd5e41ad63735161cec9c2a568172c8b6a3).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range. \n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5b491cd5e41ad63735161cec9c2a568172c8b6a3",
            "commit_sha":"5b491cd5e41ad63735161cec9c2a568172c8b6a3",
            "patch":"SINGLE",
            "chain_ord":"['5b491cd5e41ad63735161cec9c2a568172c8b6a3']",
            "before_first_fix_commit":"{'9f3eb61a8033efa4ef45b1f291ef67d5beef8b0e'}",
            "last_fix_commit":"5b491cd5e41ad63735161cec9c2a568172c8b6a3",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/08\/2021, 17:51:28",
            "message":"Validate `proto.dtype()` before calling `set_dtype()`.\n\nThis prevents a `DCHECK`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\n\nPiperOrigin-RevId: 408369083\nChange-Id: Ia21a3e3d62a90d642a4561f08f3b543e5ad00c46",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 0, 'total': 9}",
            "files":"{'tensorflow\/core\/framework\/tensor.cc': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5b491cd5e41ad63735161cec9c2a568172c8b6a3\/tensorflow%2Fcore%2Fframework%2Ftensor.cc', 'patch': '@@ -983,6 +983,15 @@ bool Tensor::FromProto(Allocator* a, const TensorProto& proto) {\\n                          dtype_error = true, dtype_error = true);\\n     }\\n     if (dtype_error || p == nullptr) return false;\\n+  } else {\\n+    \/\/ Handle the case of empty tensors (N = 0) or tensors with incomplete shape\\n+    \/\/ (N = -1). All other values of `shape.num_elements()` should be invalid by\\n+    \/\/ construction.\\n+    \/\/ Here, we just need to validate that the `proto.dtype()` value is valid.\\n+    bool dtype_error = false;\\n+    CASES_WITH_DEFAULT(proto.dtype(), break, dtype_error = true,\\n+                       dtype_error = true);\\n+    if (dtype_error) return false;\\n   }\\n   shape_ = shape;\\n   set_dtype(proto.dtype());'}}",
            "message_norm":"validate `proto.dtype()` before calling `set_dtype()`.\n\nthis prevents a `dcheck`-fail when the proto contains an invalid dtype for a tensor shape with 0 elements or for an incomplete tensor shape.\n\npiperorigin-revid: 408369083\nchange-id: ia21a3e3d62a90d642a4561f08f3b543e5ad00c46",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('prevents', 'ACTION', ''), ('408369083', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/tensor.cc'])",
            "num_files":1.0
        },
        {
            "index":2477,
            "vuln_id":"GHSA-mw75-qvfr-hpmr",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting through file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "commit_sha":"830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "patch":"SINGLE",
            "chain_ord":"['830c89a4c2c5fd0dd491422bf8e97b4eb5713f55']",
            "before_first_fix_commit":"{'da56d1d68702a7a80506245c251e58eaf84cff27', '42c0d9813df3035728b36116a6ce9116e6fa8ed3'}",
            "last_fix_commit":"830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 08:03:16",
            "message":"Merge pull request #1628 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -303,6 +303,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".shtm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}\\n@@ -312,4 +313,4 @@ public function isDangerFilename($filename){\\n \\n \\n \\n-}\\n\\\\ No newline at end of file\\n+}'}}",
            "message_norm":"merge pull request #1628 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
            "language":"en",
            "entities":"[('#1628', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":1551,
            "vuln_id":"GHSA-cgfm-62j4-v4rf",
            "cwe_id":"{'CWE-125'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/87158f43f05f2720a374f3e6d22a7aaa3a33f750'}",
            "dataset":"osv",
            "summary":"Heap out of bounds access in sparse reduction operations ### Impact\nThe implementation of sparse reduction operations in TensorFlow can trigger accesses outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\nx = tf.SparseTensor(\n      indices=[[773, 773, 773], [773, 773, 773]],\n      values=[1, 1],\n      dense_shape=[337, 337, 337])\ntf.sparse.reduce_sum(x, 1)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1bc56203f21a5a4995311825ffaba7a670d7747\/tensorflow\/core\/kernels\/sparse_reduce_op.cc#L217-L228) fails to validate that each reduction group does not overflow and that each corresponding index does not point to outside the bounds of the input tensor.\n\n### Patches\nWe have patched the issue in GitHub commit [87158f43f05f2720a374f3e6d22a7aaa3a33f750](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/87158f43f05f2720a374f3e6d22a7aaa3a33f750). \n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/87158f43f05f2720a374f3e6d22a7aaa3a33f750",
            "commit_sha":"87158f43f05f2720a374f3e6d22a7aaa3a33f750",
            "patch":"SINGLE",
            "chain_ord":"['87158f43f05f2720a374f3e6d22a7aaa3a33f750']",
            "before_first_fix_commit":"{'9c7f40e5f1b5b74156ad4d7bc20b8d69bdedbe29'}",
            "last_fix_commit":"87158f43f05f2720a374f3e6d22a7aaa3a33f750",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 04:11:18",
            "message":"Prevent heap OOB in sparse reduction ops.\n\nPiperOrigin-RevId: 387934524\nChange-Id: I894aa30f1e454f09b471d565b4a325da49322c1a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/sparse_reduce_op.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/87158f43f05f2720a374f3e6d22a7aaa3a33f750\/tensorflow%2Fcore%2Fkernels%2Fsparse_reduce_op.cc', 'patch': '@@ -219,7 +219,20 @@ class SparseReduceOp : public OpKernel {\\n     sp.Reorder<T>(reduction.reorder_dims);\\n     for (const auto &g : sp.group(reduction.group_by_dims)) {\\n       Op::template Run<T>(ctx, reduced_val, g.template values<T>());\\n+      OP_REQUIRES(ctx,\\n+                  output_strides.empty() ||\\n+                  (g.group().size() == output_strides.size()),\\n+                  errors::Internal(\\n+                      \"Expected group size and output_strides size to match\",\\n+                      \", but got \", g.group().size(), \" and \",\\n+                      output_strides.size()));\\n       const int64_t idx = CoordinatesToFlatIndex(g.group(), output_strides);\\n+      OP_REQUIRES(ctx,\\n+                  idx >= 0 && idx < out_flat.size(),\\n+                  errors::Internal(\\n+                      \"Obtained a write index of \", idx,\\n+                      \" which is outside of bounds of [0, \",\\n+                      out_flat.size(), \")\"));\\n       out_flat(idx) = reduced_val();\\n       VLOG(2) << \"coords: \" << absl::StrJoin(g.group(), \",\")\\n               << \"; idx: \" << idx << \"; group \" << Op::Name() << \": \"'}}",
            "message_norm":"prevent heap oob in sparse reduction ops.\n\npiperorigin-revid: 387934524\nchange-id: i894aa30f1e454f09b471d565b4a325da49322c1a",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('387934524', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_reduce_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1336,
            "vuln_id":"GHSA-97wf-p777-86jq",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of Split ### Impact\nThe implementation of the `Split` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e2752089ef7ce9bcf3db0ec618ebd23ea119d0c7\/tensorflow\/lite\/kernels\/split.cc#L63-L65):\n\n```cc\nTF_LITE_ENSURE_MSG(context, input_size % num_splits == 0, \"Not an even split\");\nconst int slice_size = input_size \/ num_splits;\n```\n\nAn attacker can craft a model such that `num_splits` would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "commit_sha":"b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "patch":"SINGLE",
            "chain_ord":"['b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d']",
            "before_first_fix_commit":"{'e2752089ef7ce9bcf3db0ec618ebd23ea119d0c7'}",
            "last_fix_commit":"b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 22:31:26",
            "message":"Prevent division by 0\n\nPiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/split.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d\/tensorflow%2Flite%2Fkernels%2Fsplit.cc', 'patch': '@@ -60,6 +60,7 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\\n   TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\\n \\n   const int input_size = SizeOfDimension(input, axis_value);\\n+  TF_LITE_ENSURE(context, num_splits != 0);\\n   TF_LITE_ENSURE_MSG(context, input_size % num_splits == 0,\\n                      \"Not an even split\");\\n   const int slice_size = input_size \/ num_splits;'}}",
            "message_norm":"prevent division by 0\n\npiperorigin-revid: 370998952\nchange-id: i6b1d49079624ee1447d2d9b53a8976fb356cc8f5",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370998952', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/split.cc'])",
            "num_files":1.0
        },
        {
            "index":3264,
            "vuln_id":"GHSA-wcv5-qrj6-9pfm",
            "cwe_id":"{'CWE-787', 'CWE-120'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `Conv3DBackprop*` ### Impact\nMissing validation between arguments to `tf.raw_ops.Conv3DBackprop*` operations can result in heap buffer overflows:\n\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([1, 1, 1, 1, 2], shape=[5], dtype=tf.int32)\nfilter_tensor = tf.constant([734.6274508233133, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0,\n                            -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0,\n                            -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0], shape=[4, 1, 6, 1, 1], dtype=tf.float32)\nout_backprop = tf.constant([-10.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\n\ntf.raw_ops.Conv3DBackpropInputV2(input_sizes=input_sizes, filter=filter_tensor, out_backprop=out_backprop, strides=[1, 89, 29, 89, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n```python\nimport tensorflow as tf\n\ninput_values = [-10.0] * (7 * 7 * 7 * 7 * 7)\ninput_values[0] = 429.6491056791816\ninput_sizes = tf.constant(input_values, shape=[7, 7, 7, 7, 7], dtype=tf.float32)\nfilter_tensor = tf.constant([7, 7, 7, 1, 1], shape=[5], dtype=tf.int32)\nout_backprop = tf.constant([-10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0], shape=[7, 1, 1, 1, 1], dtype=tf.float32)\n  \ntf.raw_ops.Conv3DBackpropFilterV2(input=input_sizes, filter_sizes=filter_tensor, out_backprop=out_backprop, strides=[1, 37, 65, 93, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/4814fafb0ca6b5ab58a09411523b2193fed23fed\/tensorflow\/core\/kernels\/conv_grad_shape_utils.cc#L94-L153) assumes that the `input`, `filter_sizes` and `out_backprop` tensors have the same shape, as they are accessed in parallel.\n\n### Patches\nWe have patched the issue in GitHub commit [8f37b52e1320d8d72a9529b2468277791a261197](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our securityguide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197",
            "commit_sha":"8f37b52e1320d8d72a9529b2468277791a261197",
            "patch":"SINGLE",
            "chain_ord":"['8f37b52e1320d8d72a9529b2468277791a261197']",
            "before_first_fix_commit":"{'4814fafb0ca6b5ab58a09411523b2193fed23fed'}",
            "last_fix_commit":"8f37b52e1320d8d72a9529b2468277791a261197",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2021, 20:46:32",
            "message":"Validate some shape requirements for `Conv3DBackpropFilter*` and `Conv3DBackpropInput*` ops.\n\nOlder versions of Eigen might otherwise crash \/ produce OOB read on specially crafted inputs.\n\nPiperOrigin-RevId: 369293977\nChange-Id: I58f51445a93936d7cf8e616f75de17677df36718",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 56, 'deletions': 0, 'total': 56}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_ops_3d.cc': {'additions': 56, 'deletions': 0, 'changes': 56, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8f37b52e1320d8d72a9529b2468277791a261197\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_ops_3d.cc', 'patch': '@@ -239,6 +239,20 @@ class Conv3DBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context, ConvBackpropComputeDimensions(\\n                                 \"Conv3DBackpropInputOp\", \/*num_spatial_dims=*\/3,\\n@@ -346,6 +360,20 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context, ConvBackpropComputeDimensions(\\n                                 \"Conv3DBackpropInputOp\", \/*num_spatial_dims=*\/3,\\n@@ -696,6 +724,20 @@ class Conv3DBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context,\\n                    ConvBackpropComputeDimensions(\\n@@ -808,6 +850,20 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context,\\n                    ConvBackpropComputeDimensions('}}",
            "message_norm":"validate some shape requirements for `conv3dbackpropfilter*` and `conv3dbackpropinput*` ops.\n\nolder versions of eigen might otherwise crash \/ produce oob read on specially crafted inputs.\n\npiperorigin-revid: 369293977\nchange-id: i58f51445a93936d7cf8e616f75de17677df36718",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('oob', 'SECWORD', ''), ('369293977', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_ops_3d.cc'])",
            "num_files":1.0
        },
        {
            "index":3055,
            "vuln_id":"GHSA-v5rv-hpxg-8x49",
            "cwe_id":"{'CWE-347'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/540d4060e877a03ae95343c1a8560a26768585ee'}",
            "dataset":"osv",
            "summary":"Signature validation bypass in ServiceStack ServiceStack before 5.9.2 mishandles JWT signature verification unless an application has a custom ValidateToken function that establishes a valid minimum length for a signature.",
            "published_date":"2021-01-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/ServiceStack\/ServiceStack",
            "commit_href":"https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/540d4060e877a03ae95343c1a8560a26768585ee",
            "commit_sha":"540d4060e877a03ae95343c1a8560a26768585ee",
            "patch":"SINGLE",
            "chain_ord":"['540d4060e877a03ae95343c1a8560a26768585ee']",
            "before_first_fix_commit":"{'794f1363f51f81fbead1dc8eb4dbc5076b2236a3'}",
            "last_fix_commit":"540d4060e877a03ae95343c1a8560a26768585ee",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/04\/2020, 06:16:17",
            "message":"Update EquivalentTo to test length & null for equality as well",
            "author":"Demis Bellot",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'src\/ServiceStack.Common\/EnumerableExtensions.cs': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ServiceStack\/ServiceStack\/raw\/540d4060e877a03ae95343c1a8560a26768585ee\/src%2FServiceStack.Common%2FEnumerableExtensions.cs', 'patch': '@@ -234,6 +234,12 @@ public static T FirstNonDefault<T>(this IEnumerable<T> values)\\n         [MethodImpl(MethodImplOptions.AggressiveInlining)]\\n         public static bool EquivalentTo(this byte[] bytes, byte[] other)\\n         {\\n+            if (bytes == null || other == null)\\n+                return bytes == other;\\n+\\n+            if (bytes.Length != other.Length)\\n+                return false;\\n+\\n             var compare = 0;\\n             for (var i = 0; i < other.Length; i++)\\n                 compare |= other[i] ^ bytes[i];'}}",
            "message_norm":"update equivalentto to test length & null for equality as well",
            "language":"en",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/ServiceStack.Common\/EnumerableExtensions.cs'])",
            "num_files":1.0
        },
        {
            "index":2096,
            "vuln_id":"GHSA-hmg3-c7xj-6qwm",
            "cwe_id":"{'CWE-131'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e922ccdf6bf46a3a52641f99fd47d54c1decd13'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `SparseTensorToCSRSparseMatrix` ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in converting sparse tensors to CSR Sparse matrices:\n\n```python\nimport tensorflow as tf\nimport numpy as np\nfrom tensorflow.python.ops.linalg.sparse import sparse_csr_matrix_ops\n\nindices_array = np.array([[0, 0]])\nvalue_array = np.array([0.0], dtype=np.float32)\ndense_shape = [0, 0]\n\nst = tf.SparseTensor(indices_array, value_array, dense_shape)\n\nvalues_tensor = sparse_csr_matrix_ops.sparse_tensor_to_csr_sparse_matrix(\n       st.indices, st.values, st.dense_shape)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/800346f2c03a27e182dd4fba48295f65e7790739\/tensorflow\/core\/kernels\/sparse\/kernels.cc#L66) does a double redirection to access an element of an array allocated on the heap:\n\n```cc\ncsr_row_ptr(indices(i, 0) + 1) += 1;\n```\n                      \nIf the value at `indices(i, 0)` is such that `indices(i, 0) + 1` is outside the bounds of `csr_row_ptr`, this results in writing outside of bounds of heap allocated data.\n\n### Patches\nWe have patched the issue in GitHub commit [1e922ccdf6bf46a3a52641f99fd47d54c1decd13](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e922ccdf6bf46a3a52641f99fd47d54c1decd13).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1e922ccdf6bf46a3a52641f99fd47d54c1decd13",
            "commit_sha":"1e922ccdf6bf46a3a52641f99fd47d54c1decd13",
            "patch":"SINGLE",
            "chain_ord":"['1e922ccdf6bf46a3a52641f99fd47d54c1decd13']",
            "before_first_fix_commit":"{'800346f2c03a27e182dd4fba48295f65e7790739'}",
            "last_fix_commit":"1e922ccdf6bf46a3a52641f99fd47d54c1decd13",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/23\/2021, 17:41:12",
            "message":"Fix crash in `SparseTensorToCSRSparseMatrixCPUFunctor`\n\nPiperOrigin-RevId: 370110290\nChange-Id: I4451e92661a55c2180f80d38b67a9b50bf5edec5",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/sparse\/kernels.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1e922ccdf6bf46a3a52641f99fd47d54c1decd13\/tensorflow%2Fcore%2Fkernels%2Fsparse%2Fkernels.cc', 'patch': '@@ -22,6 +22,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/tensor_types.h\"\\n #include \"tensorflow\/core\/lib\/core\/errors.h\"\\n #include \"tensorflow\/core\/lib\/core\/status.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n \\n namespace tensorflow {\\n namespace functor {\\n@@ -63,6 +64,11 @@ Status SparseTensorToCSRSparseMatrixCPUFunctor::operator()(\\n \\n     for (int64 i = 0; i < total_nnz; ++i) {\\n       \/\/ For now, the rows pointers store the corresponding row counts.\\n+      int64 ix = indices(i, 0) + 1;\\n+      if (ix >= csr_row_ptr.size()) {\\n+        return errors::InvalidArgument(\"Got an index \", ix,\\n+                                       \" that is outside of csr_row_ptr\");\\n+      }\\n       csr_row_ptr(indices(i, 0) + 1) += 1;\\n       csr_col_ind(i) = indices(i, 1);\\n     }'}}",
            "message_norm":"fix crash in `sparsetensortocsrsparsematrixcpufunctor`\n\npiperorigin-revid: 370110290\nchange-id: i4451e92661a55c2180f80d38b67a9b50bf5edec5",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('370110290', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse\/kernels.cc'])",
            "num_files":1.0
        },
        {
            "index":2972,
            "vuln_id":"GHSA-rp34-85x3-3764",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/135717a9a05c5bf8921f1389cbb469dcbf300bfd'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in librenms Cross-site Scripting (XSS) - Generic in Packagist librenms\/librenms prior to 22.1.0.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/librenms\/librenms",
            "commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/135717a9a05c5bf8921f1389cbb469dcbf300bfd",
            "commit_sha":"135717a9a05c5bf8921f1389cbb469dcbf300bfd",
            "patch":"SINGLE",
            "chain_ord":"['135717a9a05c5bf8921f1389cbb469dcbf300bfd']",
            "before_first_fix_commit":"{'c7b63b574f31efdeaa376d1a1cc0e7da681cba9f'}",
            "last_fix_commit":"135717a9a05c5bf8921f1389cbb469dcbf300bfd",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/13\/2022, 10:00:56",
            "message":"security - XSS Fix 01\n\nfixing https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/ (#13775)",
            "author":"PipoCanaja",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'includes\/html\/forms\/alert-transports.inc.php': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/135717a9a05c5bf8921f1389cbb469dcbf300bfd\/includes%2Fhtml%2Fforms%2Falert-transports.inc.php', 'patch': \"@@ -34,10 +34,10 @@\\n $status = 'ok';\\n $message = '';\\n \\n-$transport_id = $vars['transport_id'];\\n-$name = $vars['name'];\\n+$transport_id = strip_tags($vars['transport_id']);\\n+$name = strip_tags($vars['name']);\\n $is_default = (int) (isset($vars['is_default']) && $vars['is_default'] == 'on');\\n-$transport_type = $vars['transport-type'];\\n+$transport_type = strip_tags($vars['transport-type']);\\n \\n if (empty($name)) {\\n     $status = 'error';\"}}",
            "message_norm":"security - xss fix 01\n\nfixing https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/ (#13775)",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('fix', 'ACTION', ''), ('fixing', 'ACTION', ''), ('https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/', 'URL', ''), ('#13775', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['includes\/html\/forms\/alert-transports.inc.php'])",
            "num_files":1.0
        },
        {
            "index":1742,
            "vuln_id":"GHSA-fj93-7wm4-8x2g",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jquery\/jquery-mobile\/commit\/b0d9cc758a48f13321750d7409fb7655dcdf2b50'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in jquery-mobile All version of `jquery-mobile` are vulnerable to Cross-Site Scripting. The package checks for content in `location.hash` and if a URL is found it does an XmlHttpRequest (XHR) to the URL and renders the response with `innerHTML`. It fails to validate the `Content-Type` of the response, allowing attackers to include malicious payloads as part of query parameters that are reflected back to the user. A response such as `{\"q\":\"<iframe\/src='javascript:alert(1)'><\/iframe>\",\"results\":[]}` would be parsed as HTML and the JavaScript payload executed.\n\n\n## Recommendation\n\nNo fix is currently available. Consider using an alternative package until a fix is made available.",
            "published_date":"2020-09-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/jquery\/jquery-mobile",
            "commit_href":"https:\/\/github.com\/jquery\/jquery-mobile\/commit\/b0d9cc758a48f13321750d7409fb7655dcdf2b50",
            "commit_sha":"b0d9cc758a48f13321750d7409fb7655dcdf2b50",
            "patch":"SINGLE",
            "chain_ord":"['b0d9cc758a48f13321750d7409fb7655dcdf2b50']",
            "before_first_fix_commit":"{'1f0cec9bcb9d75998e733d580d6f1144c963326e'}",
            "last_fix_commit":"b0d9cc758a48f13321750d7409fb7655dcdf2b50",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/13\/2019, 17:42:26",
            "message":"Check Content-Type header before parsing AJAX response as HTML (#8649)\n\nFix for issue #8640 (possible XSS vulnerability)",
            "author":"Denis Ryabov",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 0, 'total': 9}",
            "files":"{'js\/widgets\/pagecontainer.js': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery-archive\/jquery-mobile\/raw\/b0d9cc758a48f13321750d7409fb7655dcdf2b50\/js%2Fwidgets%2Fpagecontainer.js', 'patch': '@@ -564,6 +564,15 @@ $.widget( \"mobile.pagecontainer\", {\\n \\n \\t\\treturn $.proxy( function( html, textStatus, xhr ) {\\n \\n+\\t\\t\\t\/\/ Check that Content-Type is \"text\/html\" (https:\/\/github.com\/jquery\/jquery-mobile\/issues\/8640)\\n+\\t\\t\\tif ( !\/^text\\\\\/html\\\\b\/.test( xhr.getResponseHeader(\\'Content-Type\\') ) ) {\\n+\\t\\t\\t\\t\/\/ Display error message for unsupported content type\\n+\\t\\t\\t\\tif ( settings.showLoadMsg ) {\\n+\\t\\t\\t\\t\\tthis._showError();\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\treturn;\\n+\\t\\t\\t}\\n+\\n \\t\\t\\t\/\/ Pre-parse html to check for a data-url, use it as the new fileUrl, base path, etc\\n \\t\\t\\tvar content,'}}",
            "message_norm":"check content-type header before parsing ajax response as html (#8649)\n\nfix for issue #8640 (possible xss vulnerability)",
            "language":"en",
            "entities":"[('#8649', 'ISSUE', ''), ('issue', 'FLAW', ''), ('#8640', 'ISSUE', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['js\/widgets\/pagecontainer.js'])",
            "num_files":1.0
        },
        {
            "index":97,
            "vuln_id":"GHSA-2hjr-fg6c-v2h6",
            "cwe_id":"{'CWE-200'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/HubSpot\/jinjava\/pull\/435\/commits\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165', 'https:\/\/github.com\/HubSpot\/jinjava\/pull\/426\/commits\/5dfa5b87318744a4d020b66d5f7747acc36b213b'}",
            "dataset":"osv",
            "summary":"Unauthorized access to Class instance in Jinjava Jinjava before 2.5.4 allow access to arbitrary classes by calling Java methods on objects passed into a Jinjava context. This could allow for abuse of the application class loader, including Arbitrary File Disclosure.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/HubSpot\/jinjava",
            "commit_href":"https:\/\/github.com\/HubSpot\/jinjava\/pull\/435\/commits\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165",
            "commit_sha":"1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165",
            "patch":"MULTI",
            "chain_ord":"['5dfa5b87318744a4d020b66d5f7747acc36b213b', '1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165']",
            "before_first_fix_commit":"{'bfc6ecde3a98db02a00c87a3b905a0af907188f0'}",
            "last_fix_commit":"1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/28\/2020, 18:20:50",
            "message":"Add interpreter to blacklist",
            "author":"Matt Coley",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'src\/main\/java\/com\/hubspot\/jinjava\/el\/ext\/JinjavaBeanELResolver.java': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/HubSpot\/jinjava\/raw\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165\/src%2Fmain%2Fjava%2Fcom%2Fhubspot%2Fjinjava%2Fel%2Fext%2FJinjavaBeanELResolver.java', 'patch': '@@ -2,6 +2,7 @@\\n \\n import com.google.common.base.CaseFormat;\\n import com.google.common.collect.ImmutableSet;\\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\\n import java.lang.reflect.Constructor;\\n import java.lang.reflect.Field;\\n import java.lang.reflect.Method;\\n@@ -136,7 +137,8 @@ protected boolean isRestrictedClass(Object o) {\\n       o instanceof Thread ||\\n       o instanceof Method ||\\n       o instanceof Field ||\\n-      o instanceof Constructor\\n+      o instanceof Constructor ||\\n+      o instanceof JinjavaInterpreter\\n     );\\n   }\\n }'}}",
            "message_norm":"add interpreter to blacklist",
            "language":"sv",
            "entities":"[('add', 'ACTION', ''), ('blacklist', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/hubspot\/jinjava\/el\/ext\/JinjavaBeanELResolver.java'])",
            "num_files":1.0
        },
        {
            "index":2463,
            "vuln_id":"GHSA-mrvj-7q4f-5p42",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/ezsystems\/ezpublish-kernel\/commit\/29fecd2afe86f763510f10c02f14962d028f311b'}",
            "dataset":"osv",
            "summary":"Cross-site scripting in eZ Platform Kernel ### Impact\nIn file upload it is possible by certain means to upload files like .html and .js. These may contain XSS exploits which will be run when links to them are accessed by victims.\n\n### Patches\nThe fix consists simply of adding common types of scriptable file types to the configuration of the already existing filetype blacklist feature. See \"Patched versions\". As such, this can also be done manually, without installing the patched versions. This may be relevant if you are currently running a considerably older version of the kernel package and don't want to upgrade it at this time. Please see the settting \"ezsettings.default.io.file_storage.file_type_blacklist\" at:\nhttps:\/\/github.com\/ezsystems\/ezplatform-kernel\/blob\/master\/eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml#L109\n\n### Important note\nYou should adapt this setting to your needs. Do not add file types to the blacklist that you actually need to be able to upload. For instance, if you need your editors to be able to upload SVG files, then don't blacklist that. Instead, you could e.g. use an approval workflow for such content.",
            "published_date":"2021-03-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/ezsystems\/ezpublish-kernel",
            "commit_href":"https:\/\/github.com\/ezsystems\/ezpublish-kernel\/commit\/29fecd2afe86f763510f10c02f14962d028f311b",
            "commit_sha":"29fecd2afe86f763510f10c02f14962d028f311b",
            "patch":"SINGLE",
            "chain_ord":"['29fecd2afe86f763510f10c02f14962d028f311b']",
            "before_first_fix_commit":"{'4a538dbfd28fecd404f11fa0816b69a5a9e93a16'}",
            "last_fix_commit":"29fecd2afe86f763510f10c02f14962d028f311b",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/17\/2021, 15:03:30",
            "message":"Merge pull request from GHSA-mrvj-7q4f-5p42\n\nCo-authored-by: Gunnstein Lye <gunnstein.lye@ibexa.co>",
            "author":"Gunnstein Lye",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ezsystems\/ezpublish-kernel\/raw\/29fecd2afe86f763510f10c02f14962d028f311b\/eZ%2FBundle%2FEzPublishCoreBundle%2FResources%2Fconfig%2Fdefault_settings.yml', 'patch': '@@ -89,6 +89,16 @@ parameters:\\n         - pht\\n         - phtml\\n         - pgif\\n+        - hta\\n+        - htm\\n+        - html\\n+        - xhtm\\n+        - xhtml\\n+        - jar\\n+        - js\\n+        - jse\\n+        - svg\\n+        - swf\\n \\n     # Content settings\\n     ezsettings.default.content.view_cache: true         # Whether to use content view cache or not (Etag\/Last-Modified based)'}}",
            "message_norm":"merge pull request from ghsa-mrvj-7q4f-5p42\n\nco-authored-by: gunnstein lye <gunnstein.lye@ibexa.co>",
            "language":"en",
            "entities":"[('ghsa-mrvj-7q4f-5p42', 'VULNID', 'GHSA'), ('gunnstein.lye@ibexa.co', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['eZ\/Bundle\/EzPublishCoreBundle\/Resources\/config\/default_settings.yml'])",
            "num_files":1.0
        },
        {
            "index":1003,
            "vuln_id":"GHSA-79fv-9865-4qcv",
            "cwe_id":"{'CWE-787', 'CWE-119'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `MaxPoolGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGrad` is vulnerable to a heap buffer overflow:\n  \n```python\nimport tensorflow as tf\n\norig_input = tf.constant([0.0], shape=[1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.0], shape=[1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\nksize = [1, 1, 1, 1] \nstrides = [1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n  strides=strides, padding=padding, explicit_paddings=[])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ab1e644b48c82cb71493f4362b4dd38f4577a1cf\/tensorflow\/core\/kernels\/maxpooling_op.cc#L194-L203) fails to validate that indices used to access elements of input\/output arrays are valid:\n\n```cc\nfor (int index = out_start; index < out_end; ++index) {\n  int input_backprop_index = out_arg_max_flat(index);\n  FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);\n  input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\n}\n```\n\nWhereas accesses to `input_backprop_flat` are guarded by `FastBoundsCheck`, the indexing in `out_backprop_flat` can result in OOB access.\n\n### Patches\nWe have patched the issue in GitHub commit [a74768f8e4efbda4def9f16ee7e13cf3922ac5f7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7",
            "commit_sha":"a74768f8e4efbda4def9f16ee7e13cf3922ac5f7",
            "patch":"SINGLE",
            "chain_ord":"['a74768f8e4efbda4def9f16ee7e13cf3922ac5f7']",
            "before_first_fix_commit":"{'ab1e644b48c82cb71493f4362b4dd38f4577a1cf'}",
            "last_fix_commit":"a74768f8e4efbda4def9f16ee7e13cf3922ac5f7",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 21:24:09",
            "message":"Prevent heap OOB error in `MaxPoolGrad`\n\nPiperOrigin-RevId: 372424854\nChange-Id: Idac0f23867ad8b0601cafbaaa52d5e64269e63a7",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/maxpooling_op.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a74768f8e4efbda4def9f16ee7e13cf3922ac5f7\/tensorflow%2Fcore%2Fkernels%2Fmaxpooling_op.cc', 'patch': '@@ -199,7 +199,9 @@ static void SpatialMaxPoolWithArgMaxHelper(\\n         \/\/ CHECK(input_backprop_index >= in_start && input_backprop_index <\\n         \/\/ in_end)\\n         FastBoundsCheck(input_backprop_index - in_start, in_end - in_start);\\n-        input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\\n+        if (index < out_backprop.NumElements()) {\\n+          input_backprop_flat(input_backprop_index) += out_backprop_flat(index);\\n+        }\\n       }\\n     }\\n   };'}}",
            "message_norm":"prevent heap oob error in `maxpoolgrad`\n\npiperorigin-revid: 372424854\nchange-id: idac0f23867ad8b0601cafbaaa52d5e64269e63a7",
            "language":"nl",
            "entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('error', 'FLAW', ''), ('372424854', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/maxpooling_op.cc'])",
            "num_files":1.0
        },
        {
            "index":950,
            "vuln_id":"GHSA-7488-6x3r-23w5",
            "cwe_id":"{'CWE-22'}",
            "score":9.3,
            "chain":"{'https:\/\/github.com\/ganga-devs\/ganga\/commit\/730e7aba192407d35eb37dd7938d49071124be8c'}",
            "dataset":"osv",
            "summary":"ganga before 8.5.10 allows absolute path traversal because the Flask send_file function is used unsafely The ganga-devs\/ganga repository before 8.5.10 on GitHub allows absolute path traversal because the Flask send_file function is used unsafely.",
            "published_date":"2022-07-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/ganga-devs\/ganga",
            "commit_href":"https:\/\/github.com\/ganga-devs\/ganga\/commit\/730e7aba192407d35eb37dd7938d49071124be8c",
            "commit_sha":"730e7aba192407d35eb37dd7938d49071124be8c",
            "patch":"SINGLE",
            "chain_ord":"['730e7aba192407d35eb37dd7938d49071124be8c']",
            "before_first_fix_commit":"{'0c0f9e33b36ee7ead0855f1464f8d4efad26bdbc'}",
            "last_fix_commit":"730e7aba192407d35eb37dd7938d49071124be8c",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/09\/2022, 23:19:28",
            "message":"# Absolute Path Traversal due to incorrect use of `send_file` call (#2025)\n\nA path traversal attack (also known as directory traversal) aims to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with \u201cdot-dot-slash (..\/)\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. This attack is also known as \u201cdot-dot-slash\u201d, \u201cdirectory traversal\u201d, \u201cdirectory climbing\u201d and \u201cbacktracking\u201d.\r\n\r\n## Common Weakness Enumeration category\r\nCWE - 36\r\n\r\n## Root Cause Analysis\r\n\r\nThe `os.path.join` call is unsafe for use with untrusted input. When the `os.path.join` call encounters an absolute path, it ignores all the parameters it has encountered till that point and starts working with the new absolute path.  Please see the example below.\r\n```\r\n>>> import os.path\r\n>>> static = \"path\/to\/mySafeStaticDir\"\r\n>>> malicious = \"\/..\/..\/..\/..\/..\/etc\/passwd\"\r\n>>> os.path.join(t,malicious)\r\n'\/..\/..\/..\/..\/..\/etc\/passwd'\r\n```\r\nSince the \"malicious\" parameter represents an absolute path, the result of `os.path.join` ignores the static directory completely. Hence, untrusted input is passed via the `os.path.join` call to `flask.send_file` can lead to path traversal attacks.\r\n\r\nIn this case, the problems occurs due to the following code :\r\nhttps:\/\/github.com\/ganga-devs\/ganga\/blob\/0c0f9e33b36ee7ead0855f1464f8d4efad26bdbc\/ganga\/GangaGUI\/gui\/routes.py#L671\r\n\r\nHere, the `path` parameter is attacker controlled. This parameter passes through the unsafe `os.path.join` call making the effective directory and filename passed to the `send_file` call attacker controlled. This leads to a path traversal attack.\r\n\r\n## Proof of Concept\r\n\r\nThe bug can be verified using a proof of concept similar to the one shown below.\r\n\r\n```\r\ncurl --path-as-is 'http:\/\/<domain>\/job\/<int:job_id>\/browse\/\/\/..\/..\/..\/..\/etc\/passwd\"'\r\n```\r\n## Remediation\r\n\r\nThis can be fixed by preventing flow of untrusted data to the vulnerable `send_file` function. In case the application logic necessiates this behaviour, one can either use the `werkzeug.utils.safe_join` to join untrusted paths or replace `flask.send_file` calls with `flask.send_from_directory` calls.\r\n\r\n## Common Vulnerability Scoring System Vector\r\n\r\nThe attack can be carried over the network. A complex non-standard configuration or a specialized condition is not required for the attack to be successfully conducted. There is no user interaction required for successful execution. The attack can affect components outside the scope of the target module. The attack can be used to gain access to confidential files like passwords, login credentials and other secrets. It cannot be directly used to affect a change on a system resource. Hence has limited to no impact on integrity. Using this attack vector a attacker may make multiple requests for accessing huge files such as a database. This can lead to a partial system denial service. However, the impact on availability is quite low in this case. Taking this account an appropriate CVSS v3.1 vector would be\r\n\r\n(AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:N\/A:L)[https:\/\/nvd.nist.gov\/vuln-metrics\/cvss\/v3-calculator?vector=AV:N\/AC:L\/PR:N\/UI:N\/S:C\/C:H\/I:N\/A:L&version=3.1]\r\n\r\nThis gives it a base score of 9.3\/10 and a severity rating of critical.\r\n\r\n## References\r\n* [OWASP Path Traversal](https:\/\/owasp.org\/www-community\/attacks\/Path_Traversal)\r\n* github\/securitylab#669\r\n\r\n### This bug was found using *[CodeQL by Github](https:\/\/codeql.github.com\/)*\r\n\r\nCo-authored-by: Porcupiney Hairs <porucpiney.hairs@protonmail.com>",
            "author":"porcupineyhairs",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'ganga\/GangaGUI\/gui\/routes.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ganga-devs\/ganga\/raw\/730e7aba192407d35eb37dd7938d49071124be8c\/ganga%2FGangaGUI%2Fgui%2Froutes.py', 'patch': '@@ -12,7 +12,7 @@\\n import sys\\n import datetime\\n from functools import wraps\\n-from werkzeug.utils import secure_filename\\n+from werkzeug.utils import secure_filename, safe_join\\n from werkzeug.security import generate_password_hash, check_password_hash\\n from flask import Flask, request, jsonify, render_template, flash, redirect, url_for, session, send_file, make_response\\n from flask_login import login_user, login_required, logout_user, current_user, UserMixin\\n@@ -656,7 +656,7 @@ def job_browse(job_id: int, path):\\n         return redirect(url_for(\"job_page\", job_id=job_id))\\n \\n     # Join the base and the requested path\\n-    abs_path = os.path.join(job_base_dir, path)\\n+    abs_path = safe_join(job_base_dir, path)\\n \\n     # URL path variable for going back\\n     back_path = os.path.dirname(abs_path).replace(job_base_dir, \"\")'}}",
            "message_norm":"# absolute path traversal due to incorrect use of `send_file` call (#2025)\n\na path traversal attack (also known as directory traversal) aims to access files and directories that are stored outside the web root folder. by manipulating variables that reference files with \u201cdot-dot-slash (..\/)\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files. this attack is also known as \u201cdot-dot-slash\u201d, \u201cdirectory traversal\u201d, \u201cdirectory climbing\u201d and \u201cbacktracking\u201d.\r\n\r\n## common weakness enumeration category\r\ncwe - 36\r\n\r\n## root cause analysis\r\n\r\nthe `os.path.join` call is unsafe for use with untrusted input. when the `os.path.join` call encounters an absolute path, it ignores all the parameters it has encountered till that point and starts working with the new absolute path.  please see the example below.\r\n```\r\n>>> import os.path\r\n>>> static = \"path\/to\/mysafestaticdir\"\r\n>>> malicious = \"\/..\/..\/..\/..\/..\/etc\/passwd\"\r\n>>> os.path.join(t,malicious)\r\n'\/..\/..\/..\/..\/..\/etc\/passwd'\r\n```\r\nsince the \"malicious\" parameter represents an absolute path, the result of `os.path.join` ignores the static directory completely. hence, untrusted input is passed via the `os.path.join` call to `flask.send_file` can lead to path traversal attacks.\r\n\r\nin this case, the problems occurs due to the following code :\r\nhttps:\/\/github.com\/ganga-devs\/ganga\/blob\/0c0f9e33b36ee7ead0855f1464f8d4efad26bdbc\/ganga\/gangagui\/gui\/routes.py#l671\r\n\r\nhere, the `path` parameter is attacker controlled. this parameter passes through the unsafe `os.path.join` call making the effective directory and filename passed to the `send_file` call attacker controlled. this leads to a path traversal attack.\r\n\r\n## proof of concept\r\n\r\nthe bug can be verified using a proof of concept similar to the one shown below.\r\n\r\n```\r\ncurl --path-as-is 'http:\/\/<domain>\/job\/<int:job_id>\/browse\/\/\/..\/..\/..\/..\/etc\/passwd\"'\r\n```\r\n## remediation\r\n\r\nthis can be fixed by preventing flow of untrusted data to the vulnerable `send_file` function. in case the application logic necessiates this behaviour, one can either use the `werkzeug.utils.safe_join` to join untrusted paths or replace `flask.send_file` calls with `flask.send_from_directory` calls.\r\n\r\n## common vulnerability scoring system vector\r\n\r\nthe attack can be carried over the network. a complex non-standard configuration or a specialized condition is not required for the attack to be successfully conducted. there is no user interaction required for successful execution. the attack can affect components outside the scope of the target module. the attack can be used to gain access to confidential files like passwords, login credentials and other secrets. it cannot be directly used to affect a change on a system resource. hence has limited to no impact on integrity. using this attack vector a attacker may make multiple requests for accessing huge files such as a database. this can lead to a partial system denial service. however, the impact on availability is quite low in this case. taking this account an appropriate cvss v3.1 vector would be\r\n\r\n(av:n\/ac:l\/pr:n\/ui:n\/s:c\/c:h\/i:n\/a:l)[https:\/\/nvd.nist.gov\/vuln-metrics\/cvss\/v3-calculator?vector=av:n\/ac:l\/pr:n\/ui:n\/s:c\/c:h\/i:n\/a:l&version=3.1]\r\n\r\nthis gives it a base score of 9.3\/10 and a severity rating of critical.\r\n\r\n## references\r\n* [owasp path traversal](https:\/\/owasp.org\/www-community\/attacks\/path_traversal)\r\n* github\/securitylab#669\r\n\r\n### this bug was found using *[codeql by github](https:\/\/codeql.github.com\/)*\r\n\r\nco-authored-by: porcupiney hairs <porucpiney.hairs@protonmail.com>",
            "language":"en",
            "entities":"[('absolute path traversal', 'SECWORD', ''), ('incorrect use', 'SECWORD', ''), ('#2025', 'ISSUE', ''), ('path traversal', 'SECWORD', ''), ('attack', 'SECWORD', ''), ('directory traversal', 'SECWORD', ''), ('manipulating', 'ACTION', ''), ('critical', 'SEVERITY', ''), ('attack', 'SECWORD', ''), ('directory traversal', 'SECWORD', ''), ('common weakness enumeration', 'SECWORD', ''), ('cwe - 36', 'CWEID', 'CWE_flexible'), ('unsafe', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('malicious', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('path traversal', 'SECWORD', ''), ('attacks', 'FLAW', ''), ('problems', 'FLAW', ''), ('https:\/\/github.com\/ganga-devs\/ganga\/blob\/0c0f9e33b36ee7ead0855f1464f8d4efad26bdbc\/ganga\/gangagui\/gui\/routes.py#l671', 'URL', ''), ('attacker', 'SECWORD', ''), ('unsafe', 'SECWORD', ''), ('attacker', 'SECWORD', ''), ('path traversal', 'SECWORD', ''), ('attack', 'FLAW', ''), ('bug', 'FLAW', ''), ('verified', 'ACTION', ''), ('http:\/\/<domain>\/job\/<int', 'URL', ''), ('fixed', 'ACTION', ''), ('preventing', 'ACTION', ''), ('untrusted data', 'SECWORD', ''), ('vulnerable', 'SECWORD', ''), ('untrusted', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('attack', 'SECWORD', ''), ('attack', 'SECWORD', ''), ('attack', 'SECWORD', ''), ('attack', 'FLAW', ''), ('confidential', 'SECWORD', ''), ('passwords', 'SECWORD', ''), ('login', 'SECWORD', ''), ('integrity', 'SECWORD', ''), ('attack vector', 'SECWORD', ''), ('attacker', 'FLAW', ''), ('availability', 'SECWORD', ''), ('low', 'SEVERITY', ''), ('v3.1', 'VERSION', ''), ('l)[https:\/\/nvd.nist.gov', 'URL', ''), ('critical', 'SEVERITY', ''), ('owasp', 'SECWORD', ''), ('path traversal](https:\/\/owasp.org', 'SECWORD', ''), ('attacks', 'SECWORD', ''), ('securitylab#669', 'SECWORD', ''), ('bug', 'FLAW', ''), ('found', 'ACTION', ''), ('codeql', 'DETECTION', ''), ('github](https:\/\/codeql.github.com\/', 'URL', ''), ('porucpiney.hairs@protonmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ganga\/GangaGUI\/gui\/routes.py'])",
            "num_files":1.0
        },
        {
            "index":2467,
            "vuln_id":"GHSA-mv78-g7wq-mhp4",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/49847ae69a4e1a97ae7f2db5e217c77721e37948'}",
            "dataset":"osv",
            "summary":"Division by zero in padding computation in TFLite ### Impact\nThe TFLite computation for size of output after padding, [`ComputeOutSize`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0c9692ae7b1671c983569e5d3de5565843d500cf\/tensorflow\/lite\/kernels\/padding.h#L43-L55), does not check that the `stride` argument is not 0 before doing the division.\n\n```cc\ninline int ComputeOutSize(TfLitePadding padding, int image_size,\n                          int filter_size, int stride, int dilation_rate = 1) {\n  int effective_filter_size = (filter_size - 1) * dilation_rate + 1;\n  switch (padding) {\n    case kTfLitePaddingSame:\n      return (image_size + stride - 1) \/ stride;\n    case kTfLitePaddingValid:\n      return (image_size + stride - effective_filter_size) \/ stride;\n    default:\n      return 0;\n  }\n}\n```\n  \nUsers can craft special models such that `ComputeOutSize` is called with `stride` set to 0.\n\n### Patches\nWe have patched the issue in GitHub commit [49847ae69a4e1a97ae7f2db5e217c77721e37948](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/49847ae69a4e1a97ae7f2db5e217c77721e37948).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/49847ae69a4e1a97ae7f2db5e217c77721e37948",
            "commit_sha":"49847ae69a4e1a97ae7f2db5e217c77721e37948",
            "patch":"SINGLE",
            "chain_ord":"['49847ae69a4e1a97ae7f2db5e217c77721e37948']",
            "before_first_fix_commit":"{'b0e85b5b3859d060a42364c79fe664b07299a0e9'}",
            "last_fix_commit":"49847ae69a4e1a97ae7f2db5e217c77721e37948",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/27\/2021, 22:37:08",
            "message":"Fix division by zero in TFLite padding.\n\nPiperOrigin-RevId: 370777494\nChange-Id: Ic1331e4a1603b9e4c8aa183012a6c8237410aa0f",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/lite\/kernels\/padding.h': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/49847ae69a4e1a97ae7f2db5e217c77721e37948\/tensorflow%2Flite%2Fkernels%2Fpadding.h', 'patch': '@@ -44,6 +44,11 @@ inline int ComputePaddingWithOffset(int stride, int dilation_rate, int in_size,\\n inline int ComputeOutSize(TfLitePadding padding, int image_size,\\n                           int filter_size, int stride, int dilation_rate = 1) {\\n   int effective_filter_size = (filter_size - 1) * dilation_rate + 1;\\n+\\n+  \/\/ TODO(b\/186448822): This uses 0 since the function has no other way to\\n+  \/\/ report error case\\n+  if (stride == 0) return 0;\\n+\\n   switch (padding) {\\n     case kTfLitePaddingSame:\\n       return (image_size + stride - 1) \/ stride;'}}",
            "message_norm":"fix division by zero in tflite padding.\n\npiperorigin-revid: 370777494\nchange-id: ic1331e4a1603b9e4c8aa183012a6c8237410aa0f",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('370777494', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/padding.h'])",
            "num_files":1.0
        },
        {
            "index":729,
            "vuln_id":"GHSA-6296-mvgp-27hp",
            "cwe_id":"{'CWE-611'}",
            "score":4.2,
            "chain":"{'https:\/\/github.com\/eclipse\/lyo\/commit\/a8b15b7f49ca15e55f6699749c39705d21367c6e'}",
            "dataset":"osv",
            "summary":"XML External Entity Reference in Eclipse Lyo In Eclipse Lyo versions 1.0.0 to 4.1.0, a TransformerFactory is initialized with the defaults that do not restrict DTD loading when working with RDF\/XML. This allows an attacker to cause an external DTD to be retrieved.",
            "published_date":"2022-07-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/eclipse\/lyo",
            "commit_href":"https:\/\/github.com\/eclipse\/lyo\/commit\/a8b15b7f49ca15e55f6699749c39705d21367c6e",
            "commit_sha":"a8b15b7f49ca15e55f6699749c39705d21367c6e",
            "patch":"SINGLE",
            "chain_ord":"['a8b15b7f49ca15e55f6699749c39705d21367c6e']",
            "before_first_fix_commit":"{'5c07867c6fb4076f0177a28abc48cb83598197de'}",
            "last_fix_commit":"a8b15b7f49ca15e55f6699749c39705d21367c6e",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2022, 12:03:44",
            "message":"Improve Transformer init\n\nSigned-off-by: Andrew Berezovskyi <andriib@kth.se>",
            "author":"Andrew Berezovskyi",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 14, 'total': 24}",
            "files":"{'core\/oslc4j-jena-provider\/src\/main\/java\/org\/eclipse\/lyo\/oslc4j\/provider\/jena\/JenaModelHelper.java': {'additions': 10, 'deletions': 14, 'changes': 24, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/eclipse\/lyo\/raw\/a8b15b7f49ca15e55f6699749c39705d21367c6e\/core%2Foslc4j-jena-provider%2Fsrc%2Fmain%2Fjava%2Forg%2Feclipse%2Flyo%2Foslc4j%2Fprovider%2Fjena%2FJenaModelHelper.java', 'patch': '@@ -52,6 +52,7 @@\\n import org.slf4j.LoggerFactory;\\n import org.w3c.dom.Element;\\n \\n+import javax.xml.XMLConstants;\\n import javax.xml.datatype.DatatypeConfigurationException;\\n import javax.xml.datatype.DatatypeFactory;\\n import javax.xml.namespace.QName;\\n@@ -119,7 +120,7 @@ static Model createJenaModel(final String descriptionAbout, final String respons\\n             final ResponseInfo<?> responseInfo, final Object[] objects, final Map<String, Object> properties)\\n             throws DatatypeConfigurationException, IllegalAccessException, IllegalArgumentException,\\n             InvocationTargetException, OslcCoreApplicationException {\\n-        \\n+\\n         Instant start = Instant.now();\\n \\n         final Model model = ModelFactory.createDefaultModel();\\n@@ -402,7 +403,7 @@ public static Object[] fromJenaModel(final Model model, final Class<?> beanClass\\n             IllegalArgumentException,\\n             InstantiationException, InvocationTargetException, OslcCoreApplicationException,\\n             URISyntaxException, SecurityException, NoSuchMethodException {\\n-        \\n+\\n         Instant start = Instant.now();\\n \\n         final List<Object> results = new ArrayList<>();\\n@@ -664,10 +665,7 @@ else if (!(bean instanceof AbstractResource))\\n                 {\\n                     if (extendedProperties == null)\\n                     {\\n-                        logger.debug(\"Set method not found for object type:\\t\" +\\n-                                beanClass.getName() +\\n-                                \", uri:\\t\" +\\n-                                uri);\\n+                        logger.debug(\"Set method not found for object type: {}, uri: {}\", beanClass.getName(), uri);\\n                     }\\n                     else\\n                     {\\n@@ -2270,20 +2268,18 @@ private static String getVisitedResourceName(Resource resource)\\n         return visitedResourceName;\\n     }\\n \\n-    private static Transformer createTransformer()\\n-    {\\n-        try\\n-        {\\n-            Transformer transformer = TransformerFactory.newInstance().newTransformer();\\n+    private static Transformer createTransformer() {\\n+        try {\\n+            TransformerFactory factory = TransformerFactory.newInstance();\\n+            factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_DTD, \"\");\\n+            factory.setAttribute(XMLConstants.ACCESS_EXTERNAL_STYLESHEET, \"\");\\n \\n+            Transformer transformer = factory.newTransformer();\\n             transformer.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, \"yes\");\\n \\n             return transformer;\\n-\\n         } catch (TransformerException e) {\\n-\\n             throw new RuntimeException(e);\\n-\\n         }\\n     }'}}",
            "message_norm":"improve transformer init\n\nsigned-off-by: andrew berezovskyi <andriib@kth.se>",
            "language":"en",
            "entities":"[('improve', 'ACTION', ''), ('andriib@kth.se', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/oslc4j-jena-provider\/src\/main\/java\/org\/eclipse\/lyo\/oslc4j\/provider\/jena\/JenaModelHelper.java'])",
            "num_files":1.0
        },
        {
            "index":2299,
            "vuln_id":"GHSA-jr9c-h74f-2v28",
            "cwe_id":"{'CWE-285', 'CWE-863'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/go-gitea\/gitea\/commit\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2'}",
            "dataset":"osv",
            "summary":"Improper Authorization in Gitea Gitea 1.16.3 and prior is vulnerable to improper authorization. A patch is available and is anticipated to be part of the 1.16.4 release.",
            "published_date":"2022-03-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/go-gitea\/gitea",
            "commit_href":"https:\/\/github.com\/go-gitea\/gitea\/commit\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "commit_sha":"1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "patch":"SINGLE",
            "chain_ord":"['1314f38b59748397b3429fb9bc9f9d6bac85d2f2']",
            "before_first_fix_commit":"{'7443213707bde01ee8343d49b26824dc50e1ac18'}",
            "last_fix_commit":"1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/10\/2022, 02:00:05",
            "message":"fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\r\n\r\nCo-authored-by: ysf <34326+ysf@users.noreply.github.com>",
            "author":"zeripath",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'modules\/auth\/pam\/pam.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/go-gitea\/gitea\/raw\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2\/modules%2Fauth%2Fpam%2Fpam.go', 'patch': '@@ -34,6 +34,10 @@ func Auth(serviceName, userName, passwd string) (string, error) {\\n \\tif err = t.Authenticate(0); err != nil {\\n \\t\\treturn \"\", err\\n \\t}\\n+\\t\\n+\\tif err = t.AcctMgmt(0); err != nil {\\n+\\t  return \"\", err\\n+  }\\n \\n \\t\/\/ PAM login names might suffer transformations in the PAM stack.\\n \\t\/\/ We should take whatever the PAM stack returns for it.'}}",
            "message_norm":"fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\r\n\r\nco-authored-by: ysf <34326+ysf@users.noreply.github.com>",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#19040', 'ISSUE', ''), ('https:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/auth\/pam\/pam.go'])",
            "num_files":1.0
        },
        {
            "index":1537,
            "vuln_id":"GHSA-cf6r-3wgc-h863",
            "cwe_id":"{'CWE-502'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/41b7f9b90149e9d44a65a8261a8deedc7186f6af', 'https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b'}",
            "dataset":"osv",
            "summary":"Polymorphic deserialization of malicious object in jackson-databind A flaw was discovered in jackson-databind in versions before 2.9.10, 2.8.11.5 and 2.6.7.3, where it would permit polymorphic deserialization of a malicious object using commons-configuration 1 and 2 JNDI classes. An attacker could use this flaw to execute arbitrary code.",
            "published_date":"2020-05-15",
            "chain_len":2,
            "project":"https:\/\/github.com\/FasterXML\/jackson-databind",
            "commit_href":"https:\/\/github.com\/FasterXML\/jackson-databind\/commit\/41b7f9b90149e9d44a65a8261a8deedc7186f6af",
            "commit_sha":"41b7f9b90149e9d44a65a8261a8deedc7186f6af",
            "patch":"MULTI",
            "chain_ord":"['41b7f9b90149e9d44a65a8261a8deedc7186f6af', '819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b']",
            "before_first_fix_commit":"{'41b7f9b90149e9d44a65a8261a8deedc7186f6af', 'f4f4a4e035ada20a532a5400e5f093a5a575a0ed'}",
            "last_fix_commit":"819cdbcab51c6da9fb896380f2d46e9b7d4fdc3b",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/20\/2019, 05:57:18",
            "message":"Actual #2462 fix (prev commit only updates release notes)",
            "author":"Tatu Saloranta",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FasterXML\/jackson-databind\/raw\/41b7f9b90149e9d44a65a8261a8deedc7186f6af\/src%2Fmain%2Fjava%2Fcom%2Ffasterxml%2Fjackson%2Fdatabind%2Fjsontype%2Fimpl%2FSubTypeValidator.java', 'patch': '@@ -106,7 +106,11 @@\\n \\n         \/\/ [databind#2420]: CXF\/JAX-RS provider\/XSLT\\n         s.add(\"org.apache.cxf.jaxrs.provider.XSLTJaxbProvider\");\\n-        \\n+\\n+        \/\/ [databind#2462]: commons-configuration \/ -2\\n+        s.add(\"org.apache.commons.configuration.JNDIConfiguration\");\\n+        s.add(\"org.apache.commons.configuration2.JNDIConfiguration\");\\n+\\n         DEFAULT_NO_DESER_CLASS_NAMES = Collections.unmodifiableSet(s);\\n     }'}}",
            "message_norm":"actual #2462 fix (prev commit only updates release notes)",
            "language":"en",
            "entities":"[('#2462', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/fasterxml\/jackson\/databind\/jsontype\/impl\/SubTypeValidator.java'])",
            "num_files":1.0
        },
        {
            "index":2598,
            "vuln_id":"GHSA-pjxv-w3qj-j8m3",
            "cwe_id":"{'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mguinness\/elFinder.AspNet\/commit\/675049b39284a9e84f0915c71d688da8ebc7d720'}",
            "dataset":"osv",
            "summary":"Directory Traversal in elFinder.AspNet This affects the package elFinder.AspNet before 1.1.1.\n The user-controlled file name is not properly sanitized before it is used to create a file system path.",
            "published_date":"2021-08-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/mguinness\/elFinder.AspNet",
            "commit_href":"https:\/\/github.com\/mguinness\/elFinder.AspNet\/commit\/675049b39284a9e84f0915c71d688da8ebc7d720",
            "commit_sha":"675049b39284a9e84f0915c71d688da8ebc7d720",
            "patch":"SINGLE",
            "chain_ord":"['675049b39284a9e84f0915c71d688da8ebc7d720']",
            "before_first_fix_commit":"{'8f2690712bd6cf417d897d70f734d6e972cf0071'}",
            "last_fix_commit":"675049b39284a9e84f0915c71d688da8ebc7d720",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2021, 01:28:34",
            "message":"Directory traversal fixes",
            "author":"mguinness",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 0, 'total': 16}",
            "files":"{'elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs': {'additions': 16, 'deletions': 0, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mguinness\/elFinder.AspNet\/raw\/675049b39284a9e84f0915c71d688da8ebc7d720\/elFinder.AspNet%2FDrivers%2FFileSystem%2FFileSystemDriver.cs', 'patch': '@@ -229,6 +229,12 @@ public async Task<ConnectorResult> ExtractAsync(FullPath fullPath, bool newFolde\\n                         string file = Path.Combine(rootPath, entry.FullName)\\n                              .Replace(\"\/\", separator).Replace(\"\\\\\\\\\", separator);\\n \\n+                        string destPath = Path.GetFullPath(file);\\n+                        if (!destPath.StartsWith(rootPath, StringComparison.OrdinalIgnoreCase))\\n+                        {\\n+                            throw new NotSupportedException($\"Entry \\'{entry.FullName}\\' is outside of the destination directory.\");\\n+                        }\\n+\\n                         if (file.EndsWith(separator)) \/\/directory\\n                         {\\n                             var dir = new FileSystemDirectory(file);\\n@@ -636,12 +642,22 @@ public async Task<ConnectorResult> RenameAsync(FullPath path, string name)\\n             if (path.IsDirectory)\\n             {\\n                 var newPath = new FileSystemDirectory(Path.Combine(path.Directory.Parent.FullName, name));\\n+                string destPath = Path.GetFullPath(newPath.FullName);\\n+                if (!destPath.StartsWith(path.RootVolume.RootDirectory, StringComparison.OrdinalIgnoreCase))\\n+                {\\n+                    throw new NotSupportedException($\"Entry \\'{name}\\' is outside of the home directory.\");\\n+                }\\n                 Directory.Move(path.Directory.FullName, newPath.FullName);\\n                 response.Added.Add(await BaseModel.CreateAsync(newPath, path.RootVolume));\\n             }\\n             else\\n             {\\n                 var newPath = new FileSystemFile(Path.Combine(path.File.DirectoryName, name));\\n+                string destPath = Path.GetFullPath(newPath.FullName);\\n+                if (!destPath.StartsWith(path.RootVolume.RootDirectory, StringComparison.OrdinalIgnoreCase))\\n+                {\\n+                    throw new NotSupportedException($\"Entry \\'{name}\\' is outside of the home directory.\");\\n+                }\\n                 File.Move(path.File.FullName, newPath.FullName);\\n                 response.Added.Add(await BaseModel.CreateAsync(newPath, path.RootVolume));\\n             }'}}",
            "message_norm":"directory traversal fixes",
            "language":"ca",
            "entities":"[('directory traversal', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['elFinder.AspNet\/Drivers\/FileSystem\/FileSystemDriver.cs'])",
            "num_files":1.0
        },
        {
            "index":3392,
            "vuln_id":"GHSA-x7jg-6pwg-fx5h",
            "cwe_id":"{'CWE-444'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/puma\/puma\/commit\/f24d5521295a2152c286abb0a45a1e1e2bd275bd'}",
            "dataset":"osv",
            "summary":"HTTP Smuggling via Transfer-Encoding Header in Puma ### Impact\n\nBy using an invalid transfer-encoding header, an attacker could [smuggle an HTTP response.](https:\/\/portswigger.net\/web-security\/request-smuggling)\n\nOriginally reported by @ZeddYu, who has our thanks for the detailed report.\n\n### Patches\n\nThe problem has been fixed in Puma 3.12.5 and Puma 4.3.4.\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [Puma](https:\/\/github.com\/puma\/puma)\n* See our [security policy](https:\/\/github.com\/puma\/puma\/security\/policy)",
            "published_date":"2020-05-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/puma\/puma",
            "commit_href":"https:\/\/github.com\/puma\/puma\/commit\/f24d5521295a2152c286abb0a45a1e1e2bd275bd",
            "commit_sha":"f24d5521295a2152c286abb0a45a1e1e2bd275bd",
            "patch":"SINGLE",
            "chain_ord":"['f24d5521295a2152c286abb0a45a1e1e2bd275bd']",
            "before_first_fix_commit":"{'7a6593760d667dff95953e15c2327892e2da673c'}",
            "last_fix_commit":"f24d5521295a2152c286abb0a45a1e1e2bd275bd",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/18\/2020, 23:01:53",
            "message":"Better handle client input",
            "author":"Evan Phoenix",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 2, 'total': 12}",
            "files":"{'lib\/puma\/client.rb': {'additions': 10, 'deletions': 2, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/puma\/puma\/raw\/f24d5521295a2152c286abb0a45a1e1e2bd275bd\/lib%2Fpuma%2Fclient.rb', 'patch': '@@ -285,8 +285,16 @@ def setup_body\\n \\n       te = @env[TRANSFER_ENCODING2]\\n \\n-      if te && CHUNKED.casecmp(te) == 0\\n-        return setup_chunked_body(body)\\n+      if te\\n+        if te.include?(\",\")\\n+          te.split(\",\").each do |part|\\n+            if CHUNKED.casecmp(part.strip) == 0\\n+              return setup_chunked_body(body)\\n+            end\\n+          end\\n+        elsif CHUNKED.casecmp(te) == 0\\n+          return setup_chunked_body(body)\\n+        end\\n       end\\n \\n       @chunked_body = false'}}",
            "message_norm":"better handle client input",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/puma\/client.rb'])",
            "num_files":1.0
        },
        {
            "index":884,
            "vuln_id":"GHSA-6qgm-fv6v-rfpv",
            "cwe_id":"{'CWE-120', 'CWE-119'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23'}",
            "dataset":"osv",
            "summary":"Overflow\/denial of service in `tf.raw_ops.ReverseSequence` ### Impact\nThe implementation of `tf.raw_ops.ReverseSequence` allows for stack overflow and\/or `CHECK`-fail based denial of service.\n\n```python\nimport tensorflow as tf\n\ninput = tf.zeros([1, 1, 1], dtype=tf.int32)\nseq_lengths = tf.constant([0], shape=[1], dtype=tf.int32)\n\ntf.raw_ops.ReverseSequence(\n    input=input, seq_lengths=seq_lengths, seq_dim=-2, batch_dim=0)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5b3b071975e01f0d250c928b2a8f901cd53b90a7\/tensorflow\/core\/kernels\/reverse_sequence_op.cc#L114-L118) fails to validate that `seq_dim` and `batch_dim` arguments are valid.\n  \nNegative values for `seq_dim` can result in stack overflow or `CHECK`-failure, depending on the version of Eigen code used to implement the operation. Similar behavior can be exhibited by invalid values of `batch_dim`.\n  \n### Patches\nWe have patched the issue in GitHub commit [ecf768cbe50cedc0a45ce1ee223146a3d3d26d23](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23",
            "commit_sha":"ecf768cbe50cedc0a45ce1ee223146a3d3d26d23",
            "patch":"SINGLE",
            "chain_ord":"['ecf768cbe50cedc0a45ce1ee223146a3d3d26d23']",
            "before_first_fix_commit":"{'5b3b071975e01f0d250c928b2a8f901cd53b90a7'}",
            "last_fix_commit":"ecf768cbe50cedc0a45ce1ee223146a3d3d26d23",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 19:07:57",
            "message":"Add missing validations to reverse_sequence_op\n\nPiperOrigin-RevId: 372178683\nChange-Id: Iac97ebab5b342f1262c77a7d9bcb4267b305ce5b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/reverse_sequence_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23\/tensorflow%2Fcore%2Fkernels%2Freverse_sequence_op.cc', 'patch': '@@ -115,6 +115,10 @@ class ReverseSequenceOp : public OpKernel {\\n       : OpKernel(context) {\\n     OP_REQUIRES_OK(context, context->GetAttr(\"batch_dim\", &batch_dim_));\\n     OP_REQUIRES_OK(context, context->GetAttr(\"seq_dim\", &seq_dim_));\\n+    OP_REQUIRES(context, batch_dim_ >= 0,\\n+                errors::InvalidArgument(\"Invalid batch_dim \", batch_dim_));\\n+    OP_REQUIRES(context, seq_dim_ >= 0,\\n+                errors::InvalidArgument(\"Invalid seq_dim \", seq_dim_));\\n   }\\n \\n   void Compute(OpKernelContext* context) override {'}}",
            "message_norm":"add missing validations to reverse_sequence_op\n\npiperorigin-revid: 372178683\nchange-id: iac97ebab5b342f1262c77a7d9bcb4267b305ce5b",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validations', 'SECWORD', ''), ('372178683', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/reverse_sequence_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2027,
            "vuln_id":"GHSA-h8pj-cxx2-jfg2",
            "cwe_id":"{'CWE-20'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/encode\/httpx\/pull\/2185\/commits\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in httpx Encode OSS httpx <=1.0.0.beta0 is affected by improper input validation in `httpx.URL`, `httpx.Client` and some functions using `httpx.URL.copy_with`.",
            "published_date":"2022-04-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/encode\/httpx",
            "commit_href":"https:\/\/github.com\/encode\/httpx\/pull\/2185\/commits\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1",
            "commit_sha":"e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1",
            "patch":"SINGLE",
            "chain_ord":"['e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1']",
            "before_first_fix_commit":"{'b07fe7b0745e62be5ef9bce1bee9e7d7a8878552'}",
            "last_fix_commit":"e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/21\/2022, 06:22:38",
            "message":"Patch `copy_with`",
            "author":"lebr0nli",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'httpx\/_urls.py': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/encode\/httpx\/raw\/e3c495a32c63d8aa7f1bcf3b7b27ee1a0ff428e1\/httpx%2F_urls.py', 'patch': '@@ -484,7 +484,11 @@ def copy_with(self, **kwargs: typing.Any) -> \"URL\":\\n         #  \\\\_\/   \\\\______________\/\\\\_________\/ \\\\_________\/ \\\\__\/\\n         #   |           |            |            |        |\\n         # scheme     authority       path        query   fragment\\n-        return URL(self._uri_reference.copy_with(**kwargs).unsplit())\\n+        new_url = URL(self)\\n+        new_url._uri_reference = self._uri_reference.copy_with(**kwargs)\\n+        if new_url.is_absolute_url:\\n+            new_url._uri_reference = new_url._uri_reference.normalize()\\n+        return URL(new_url)\\n \\n     def copy_set_param(self, key: str, value: typing.Any = None) -> \"URL\":\\n         return self.copy_with(params=self.params.set(key, value))'}}",
            "message_norm":"patch `copy_with`",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['httpx\/_urls.py'])",
            "num_files":1.0
        },
        {
            "index":3261,
            "vuln_id":"GHSA-wc9w-wvq2-ffm9",
            "cwe_id":"{'CWE-918'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/ba953be95f0302c2ea80d23f1e5f2c1847365192'}",
            "dataset":"osv",
            "summary":"Server Side Request Forgery in Grafana The avatar feature in Grafana 3.0.1 through 7.0.1 has an SSRF Incorrect Access Control issue that allows remote code execution. This vulnerability allows any unauthenticated user\/client to make Grafana send HTTP requests to any URL and return its result to the user\/client. This can be used to gain information about the network that Grafana is running on.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/grafana\/grafana",
            "commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/ba953be95f0302c2ea80d23f1e5f2c1847365192",
            "commit_sha":"ba953be95f0302c2ea80d23f1e5f2c1847365192",
            "patch":"SINGLE",
            "chain_ord":"['ba953be95f0302c2ea80d23f1e5f2c1847365192']",
            "before_first_fix_commit":"{'e5414f44aa2728cce0dbbc7698fddb514fa8193a'}",
            "last_fix_commit":"ba953be95f0302c2ea80d23f1e5f2c1847365192",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/03\/2020, 13:56:13",
            "message":"Only allow 32 hexadecimal digits for the avatar hash (#25322)\n\n(cherry picked from commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509)",
            "author":"Marcus Efraimsson",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 5, 'total': 16}",
            "files":"{'pkg\/api\/avatar\/avatar.go': {'additions': 11, 'deletions': 5, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/ba953be95f0302c2ea80d23f1e5f2c1847365192\/pkg%2Fapi%2Favatar%2Favatar.go', 'patch': '@@ -15,14 +15,14 @@ import (\\n \\t\"net\/http\"\\n \\t\"net\/url\"\\n \\t\"path\/filepath\"\\n+\\t\"regexp\"\\n \\t\"strconv\"\\n-\\t\"strings\"\\n \\t\"sync\"\\n \\t\"time\"\\n \\n \\t\"github.com\/grafana\/grafana\/pkg\/infra\/log\"\\n+\\t\"github.com\/grafana\/grafana\/pkg\/models\"\\n \\t\"github.com\/grafana\/grafana\/pkg\/setting\"\\n-\\t\"gopkg.in\/macaron.v1\"\\n \\n \\tgocache \"github.com\/patrickmn\/go-cache\"\\n )\\n@@ -73,9 +73,15 @@ type CacheServer struct {\\n \\tcache    *gocache.Cache\\n }\\n \\n-func (this *CacheServer) Handler(ctx *macaron.Context) {\\n-\\turlPath := ctx.Req.URL.Path\\n-\\thash := urlPath[strings.LastIndex(urlPath, \"\/\")+1:]\\n+var validMD5 = regexp.MustCompile(\"^[a-fA-F0-9]{32}$\")\\n+\\n+func (this *CacheServer) Handler(ctx *models.ReqContext) {\\n+\\thash := ctx.Params(\"hash\")\\n+\\n+\\tif len(hash) != 32 || !validMD5.MatchString(hash) {\\n+\\t\\tctx.JsonApiErr(404, \"Avatar not found\", nil)\\n+\\t\\treturn\\n+\\t}\\n \\n \\tvar avatar *Avatar\\n \\tobj, exists := this.cache.Get(hash)'}}",
            "message_norm":"only allow 32 hexadecimal digits for the avatar hash (#25322)\n\n(cherry picked from commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509)",
            "language":"en",
            "entities":"[('hash', 'SECWORD', ''), ('#25322', 'ISSUE', ''), ('commit 7a9c0e31eca4958f5fba053cfea9e64a2ea58509', 'SHA', 'prefix_colon_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['pkg\/api\/avatar\/avatar.go'])",
            "num_files":1.0
        },
        {
            "index":2460,
            "vuln_id":"GHSA-mr6r-82x4-f4jj",
            "cwe_id":"{'CWE-203'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/simplito\/elliptic-php\/commit\/15652609aa55968d56685c2a9120535ccdc00fd9'}",
            "dataset":"osv",
            "summary":"Timing attacks might allow practical recovery of the long-term private key In elliptic-php versions priot to 1.0.6, Timing attacks might be possible which can result in practical recovery of the long-term private key generated by the library under certain conditions. Leakage of a bit-length of the scalar during scalar multiplication is possible on an elliptic curve which might allow practical recovery of the long-term private key.",
            "published_date":"2019-11-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/simplito\/elliptic-php",
            "commit_href":"https:\/\/github.com\/simplito\/elliptic-php\/commit\/15652609aa55968d56685c2a9120535ccdc00fd9",
            "commit_sha":"15652609aa55968d56685c2a9120535ccdc00fd9",
            "patch":"SINGLE",
            "chain_ord":"['15652609aa55968d56685c2a9120535ccdc00fd9']",
            "before_first_fix_commit":"{'03a8dbc6514a1c8e6b00b967bca388d36ab73169'}",
            "last_fix_commit":"15652609aa55968d56685c2a9120535ccdc00fd9",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/14\/2019, 13:43:07",
            "message":"ecdsa: Apply nonce bit-length mitigation to stop timing leakage.\n\nPorted from elliptic-js: https:\/\/github.com\/indutny\/elliptic\/pull\/203",
            "author":"Sebastian Smyczy\u0144ski",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 1, 'total': 12}",
            "files":"{'lib\/EC.php': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simplito\/elliptic-php\/raw\/15652609aa55968d56685c2a9120535ccdc00fd9\/lib%2FEC.php', 'patch': \"@@ -136,7 +136,17 @@ public function sign($msg, $key, $enc = null, $options = null)\\n             if( $k->cmpn(1) <= 0 || $k->cmp($ns1) >= 0 )\\n                 continue;\\n \\n-            $kp = $this->g->mul($k);\\n+            \/\/ Fix the bit-length of the random nonce,\\n+            \/\/ so that it doesn't leak via timing.\\n+            \/\/ This does not change that ks = k mod k\\n+            $ks = $k->add($this->n);\\n+            $kt = $ks->add($this->n);\\n+            if ($ks->bitLength() === $this->n->bitLength()) {\\n+                $kp = $this->g->mul($kt);\\n+            } else {\\n+                $kp = $this->g->mul($ks);\\n+            }\\n+\\n             if( $kp->isInfinity() )\\n                 continue;\"}}",
            "message_norm":"ecdsa: apply nonce bit-length mitigation to stop timing leakage.\n\nported from elliptic-js: https:\/\/github.com\/indutny\/elliptic\/pull\/203",
            "language":"en",
            "entities":"[('ecdsa', 'SECWORD', ''), ('nonce', 'SECWORD', ''), ('timing leakage', 'SECWORD', ''), ('https:\/\/github.com\/indutny\/elliptic\/pull\/203', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/EC.php'])",
            "num_files":1.0
        },
        {
            "index":2073,
            "vuln_id":"GHSA-hhr9-7xvh-8xgc",
            "cwe_id":"{'CWE-918'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/abc9599ee7aded466ca216741dcaea533c908111'}",
            "dataset":"osv",
            "summary":"Server side request forgery in LiveHelperChat SSRF filter bypass port 80, 433 in LiveHelperChat prior to v3.67. An attacker could make the application perform arbitrary requests, bypass CVE-2022-1191",
            "published_date":"2022-04-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/livehelperchat\/livehelperchat",
            "commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/abc9599ee7aded466ca216741dcaea533c908111",
            "commit_sha":"abc9599ee7aded466ca216741dcaea533c908111",
            "patch":"SINGLE",
            "chain_ord":"['abc9599ee7aded466ca216741dcaea533c908111']",
            "before_first_fix_commit":"{'a583f4c60a98779938766e242991e637c0d938f0'}",
            "last_fix_commit":"abc9599ee7aded466ca216741dcaea533c908111",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/03\/2022, 19:37:19",
            "message":"fix #1752",
            "author":"Remigijus Kiminas",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 2, 'total': 10}",
            "files":"{'lhc_web\/modules\/lhcobrowse\/proxycss.php': {'additions': 8, 'deletions': 2, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/abc9599ee7aded466ca216741dcaea533c908111\/lhc_web%2Fmodules%2Flhcobrowse%2Fproxycss.php', 'patch': \"@@ -15,7 +15,13 @@\\n     $browse = erLhcoreClassCoBrowse::getBrowseInstance($chat);\\r\\n }\\r\\n \\r\\n-$url = parse_url($_GET['base']);\\r\\n+$base = trim($_GET['base']);\\r\\n+\\r\\n+if (!filter_var($base, FILTER_VALIDATE_URL)) {\\r\\n+    exit;\\r\\n+}\\r\\n+\\r\\n+$url = parse_url($base);\\r\\n \\r\\n \/\/ Only http\/https supported\\r\\n if (!in_array($url['scheme'],['http','https']) || (isset($url['port']) && !in_array($url['port'],[80,443]))) {\\r\\n@@ -42,7 +48,7 @@\\n         }\\r\\n     } else {\\r\\n \\r\\n-        if (!in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\\r\\n+        if (!filter_var($_GET['css'], FILTER_VALIDATE_URL) || !in_array($urlCSS['scheme'],['http','https']) || (isset($urlCSS['port']) && !in_array($urlCSS['port'],[80,443]))) {\\r\\n             exit;\\r\\n         }\"}}",
            "message_norm":"fix #1752",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('#1752', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lhc_web\/modules\/lhcobrowse\/proxycss.php'])",
            "num_files":1.0
        },
        {
            "index":1966,
            "vuln_id":"GHSA-h2wq-prv9-2f56",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/098e7762d909bac47ce1dbabe6dfd06294cb9d58'}",
            "dataset":"osv",
            "summary":"Missing validation crashes `QuantizeAndDequantizeV4Grad` ### Impact\nThe implementation of [`tf.raw_ops.QuantizeAndDequantizeV4Grad`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc#L148-L226) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QuantizeAndDequantizeV4Grad(\n  gradients=tf.constant(1, shape=[2,2], dtype=tf.float64),\n  input=tf.constant(1, shape=[2,2], dtype=tf.float64),\n  input_min=tf.constant([], shape=[0], dtype=tf.float64),\n  input_max=tf.constant(-10, shape=[], dtype=tf.float64),\n  axis=-1)\n```\n\nThe code assumes `input_min` and `input_max` are scalars but there is no validation for this.\n\n### Patches\nWe have patched the issue in GitHub commit [098e7762d909bac47ce1dbabe6dfd06294cb9d58](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/098e7762d909bac47ce1dbabe6dfd06294cb9d58).\n    \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/098e7762d909bac47ce1dbabe6dfd06294cb9d58",
            "commit_sha":"098e7762d909bac47ce1dbabe6dfd06294cb9d58",
            "patch":"SINGLE",
            "chain_ord":"['098e7762d909bac47ce1dbabe6dfd06294cb9d58']",
            "before_first_fix_commit":"{'e505acc64062d9250ad4452ce57529bed8fd2160'}",
            "last_fix_commit":"098e7762d909bac47ce1dbabe6dfd06294cb9d58",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 18:06:02",
            "message":"Fix tf.raw_ops.QuantizeAndDequantizeV4Grad vulnerability with invalid input_min or input_max.\n\nCheck that argument is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445198280",
            "author":"Alan Liu",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 2, 'total': 10}",
            "files":"{'tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc': {'additions': 8, 'deletions': 2, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/098e7762d909bac47ce1dbabe6dfd06294cb9d58\/tensorflow%2Fcore%2Fkernels%2Fquantize_and_dequantize_op.cc', 'patch': '@@ -174,13 +174,13 @@ class QuantizeAndDequantizeV4GradientOp : public OpKernel {\\n     OP_REQUIRES(ctx,\\n                 input_min_tensor.dims() == 0 || input_min_tensor.dims() == 1,\\n                 errors::InvalidArgument(\\n-                    \"Input min tensor must have dimension 1. Recieved \",\\n+                    \"Input min tensor must have dimension 0 or 1. Received \",\\n                     input_min_tensor.dims(), \".\"));\\n     const Tensor& input_max_tensor = ctx->input(3);\\n     OP_REQUIRES(ctx,\\n                 input_max_tensor.dims() == 0 || input_max_tensor.dims() == 1,\\n                 errors::InvalidArgument(\\n-                    \"Input max tensor must have dimension 1. Recieved \",\\n+                    \"Input max tensor must have dimension 0 or 1. Received \",\\n                     input_max_tensor.dims(), \".\"));\\n     if (axis_ != -1) {\\n       OP_REQUIRES(\\n@@ -203,6 +203,12 @@ class QuantizeAndDequantizeV4GradientOp : public OpKernel {\\n                    ctx->allocate_output(2, min_max_shape, &input_max_backprop));\\n \\n     if (axis_ == -1) {\\n+      OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(input_min_tensor.shape()),\\n+                  errors::InvalidArgument(\\n+                      \"input_min must be a scalar if axis is unspecified\"));\\n+      OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(input_max_tensor.shape()),\\n+                  errors::InvalidArgument(\\n+                      \"input_max must be a scalar if axis is unspecified\"));\\n       functor::QuantizeAndDequantizeOneScaleGradientFunctor<Device, T> f;\\n       f(ctx->eigen_device<Device>(), gradient.template flat<T>(),\\n         input.template flat<T>(), input_min_tensor.scalar<T>(),'}}",
            "message_norm":"fix tf.raw_ops.quantizeanddequantizev4grad vulnerability with invalid input_min or input_max.\n\ncheck that argument is actually a scalar before treating it as such.\n\npiperorigin-revid: 445198280",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('445198280', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantize_and_dequantize_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2286,
            "vuln_id":"GHSA-jp6r-xcjj-5h7r",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/gchq\/CyberChef\/commit\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in cyberchef Versions of `cyberchef` prior to 8.31.3 are vulnerable to Cross-Site Scripting. In `Text Encoding Brute Force` the table rows are created by concatenating the `value` variable unsanitized in the HTML code. If this variable is controlled by user input it allows attackers to execute arbitrary JavaScript in a victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 8.31.3 or later.",
            "published_date":"2019-08-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/gchq\/CyberChef",
            "commit_href":"https:\/\/github.com\/gchq\/CyberChef\/commit\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf",
            "commit_sha":"01f0625d6a177f9c5df9281f12a27c814c2d8bcf",
            "patch":"SINGLE",
            "chain_ord":"['01f0625d6a177f9c5df9281f12a27c814c2d8bcf']",
            "before_first_fix_commit":"{'38ff7ec89f595dbe5971c3577fa29a142b4b2416'}",
            "last_fix_commit":"01f0625d6a177f9c5df9281f12a27c814c2d8bcf",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/14\/2019, 21:00:17",
            "message":"Fixed XSS in 'Text Encoding Brute Force. Closes #539",
            "author":"n1474335",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/core\/operations\/TextEncodingBruteForce.mjs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gchq\/CyberChef\/raw\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf\/src%2Fcore%2Foperations%2FTextEncodingBruteForce.mjs', 'patch': '@@ -79,7 +79,7 @@ class TextEncodingBruteForce extends Operation {\\n         let table = \"<table class=\\'table table-hover table-sm table-bordered table-nonfluid\\'><tr><th>Encoding<\/th><th>Value<\/th><\/tr>\";\\n \\n         for (const enc in encodings) {\\n-            const value = Utils.printable(encodings[enc], true);\\n+            const value = Utils.escapeHtml(Utils.printable(encodings[enc], true));\\n             table += `<tr><td>${enc}<\/td><td>${value}<\/td><\/tr>`;\\n         }'}}",
            "message_norm":"fixed xss in 'text encoding brute force. closes #539",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('xss', 'SECWORD', ''), ('encoding', 'SECWORD', ''), ('#539', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/core\/operations\/TextEncodingBruteForce.mjs'])",
            "num_files":1.0
        },
        {
            "index":3274,
            "vuln_id":"GHSA-wg8p-w946-c482",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/56e450c3adf75c707500d7231a78c9fc894c7f13'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc prior to 2.10.4 is vulnerable to stored cross-site scripting via file upload.",
            "published_date":"2022-03-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/56e450c3adf75c707500d7231a78c9fc894c7f13",
            "commit_sha":"56e450c3adf75c707500d7231a78c9fc894c7f13",
            "patch":"SINGLE",
            "chain_ord":"['56e450c3adf75c707500d7231a78c9fc894c7f13']",
            "before_first_fix_commit":"{'237ac6d43bf3728bf3587c486a23b4a48ea7acb3'}",
            "last_fix_commit":"56e450c3adf75c707500d7231a78c9fc894c7f13",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 12:15:13",
            "message":"file upload bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/56e450c3adf75c707500d7231a78c9fc894c7f13\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -329,7 +329,7 @@ public function isAllowedFilename($filename){\\n \\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\\n \\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n \\t\\t\\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',\\n-\\t\\t\\t'.ppt','.pptx','.xls','.xlsx','.txt','.md','.psd','.csv',\\n+\\t\\t\\t'.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',\\n \\t\\t\\t'.cer','.ppt','.pub','.properties','.json','.css',\\n \\t\\t\\t) ;\"}}",
            "message_norm":"file upload bug",
            "language":"ro",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":2095,
            "vuln_id":"GHSA-hm45-mgqm-gjm4",
            "cwe_id":"{'CWE-79'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91', 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/99d88b840674674166ce005b784ae8e31e955ab1'}",
            "dataset":"osv",
            "summary":"Remote Code Execution (RCE) Exploit on Cross Site Scripting (XSS) Vulnerability ### Impact\nA RCE exploit has been discovered in the Red Discord Bot - Dashboard Webserver: this exploit allows Discord users with specially crafted Server names and Usernames\/Nicknames to inject code into the webserver front-end code.  By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis high severity exploit has been fixed on version `0.1.7a`.\n\n### Workarounds\nThere are no workarounds, bot owners must upgrade their relevant packages (Dashboard module and Dashboard webserver) in order to patch this issue\n\n### References\n- 99d88b8\n- a6b9785\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-Dashboard](https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/issues\/new\/choose)\n* Over on the official [Red Server](https:\/\/discord.gg\/red) or at the Third Party Server [Toxic Layer](https:\/\/discord.gg\/vQZTdB9)",
            "published_date":"2020-12-08",
            "chain_len":2,
            "project":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard",
            "commit_href":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/99d88b840674674166ce005b784ae8e31e955ab1",
            "commit_sha":"99d88b840674674166ce005b784ae8e31e955ab1",
            "patch":"MULTI",
            "chain_ord":"['99d88b840674674166ce005b784ae8e31e955ab1', 'a6b9785338003ec87fb75305e7d1cc2d40c7ab91']",
            "before_first_fix_commit":"{'261f00f52bbfee4db67f624fd7409bf08124a6c4'}",
            "last_fix_commit":"a6b9785338003ec87fb75305e7d1cc2d40c7ab91",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/30\/2020, 11:49:18",
            "message":"Fix unformatted HTML",
            "author":"NeuroAssassin",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 2, 'total': 8}",
            "files":"{'reddash\/app\/home\/templates\/dashboard.html': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/raw\/99d88b840674674166ce005b784ae8e31e955ab1\/reddash%2Fapp%2Fhome%2Ftemplates%2Fdashboard.html', 'patch': '@@ -72,6 +72,7 @@ <h1>{{ _(\\'Loading servers...\\') }}<\/h1>\\n                 } else {\\r\\n                     var base_guild_url = \"{{ url_for(\\'home_blueprint.guild\\', guild=\\'123456789123456789\\') }}\"\\r\\n                     $(\"#serverrow\").html(\"\")\\r\\n+                    let counter = 0\\r\\n                     for (let g of json.data) {\\r\\n                         var current_guild_url = base_guild_url.replace(\"123456789123456789\", g.id)\\r\\n                         $(\"#serverrow\").append(`\\r\\n@@ -80,13 +81,16 @@ <h1>{{ _(\\'Loading servers...\\') }}<\/h1>\\n                                     <div class=\"card h-100\" onmouseover=\"playGif(this)\" onmouseout=\"stopGif(this)\">\\r\\n                                         <img class=\"card-img-top\" src=\"${g.icon}png\" alt=\"Card image cap\" data-src-url=\"${g.icon}\" data-is-animated=${g.animated}>\\r\\n                                         <div class=\"card-body\">\\r\\n-                                            <h5 class=\"card-title\">${g.name}<\/h5>\\r\\n-                                            <p class=\"card-text\">Owner: ${g.owner}<\/p>\\r\\n+                                            <h5 class=\"card-title\" id=\"guild-counter-${counter}\">Loading...<\/h5>\\r\\n+                                            <p class=\"card-text\" id=\"owner-counter-${counter}\">Owner: Loading...<\/p>\\r\\n                                         <\/div>\\r\\n                                     <\/div>\\r\\n                                 <\/a>\\r\\n                             <\/div>\\r\\n                         `)\\r\\n+                        $(`#guild-counter-${counter}`).text(g.name)\\r\\n+                        $(`#owner-counter-${counter}`).text(g.owner)\\r\\n+                        counter += 1\\r\\n                     }\\r\\n                 }\\r\\n             }'}}",
            "message_norm":"fix unformatted html",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['reddash\/app\/home\/templates\/dashboard.html'])",
            "num_files":1.0
        },
        {
            "index":2322,
            "vuln_id":"GHSA-jxvf-m3x5-mxwq",
            "cwe_id":"{'CWE-1321'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/steveukx\/properties\/commit\/0877cc871db9865f58dd9389ce99e61be05380a5', 'https:\/\/github.com\/steveukx\/properties\/commit\/4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab'}",
            "dataset":"osv",
            "summary":"Properties-Reader before v2.2.0 vulnerable to prototype pollution Properties-Reader prior to version 2.2.0 is vulnerable to prototype pollution. Version 2.2.0 contains a patch for this issue.",
            "published_date":"2022-07-19",
            "chain_len":2,
            "project":"https:\/\/github.com\/steveukx\/properties",
            "commit_href":"https:\/\/github.com\/steveukx\/properties\/commit\/4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab",
            "commit_sha":"4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab",
            "patch":"MULTI",
            "chain_ord":"['0877cc871db9865f58dd9389ce99e61be05380a5', '4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab']",
            "before_first_fix_commit":"{'0877cc871db9865f58dd9389ce99e61be05380a5'}",
            "last_fix_commit":"4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/30\/2020, 06:58:22",
            "message":"Allow for relying on Object prototype in steps of the expanded properties",
            "author":"Steve King",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/properties-reader.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/steveukx\/properties\/raw\/4e4bc392ecfd0a128f48c1d69f64a0d7194fcaab\/src%2Fproperties-reader.js', 'patch': '@@ -217,7 +217,7 @@ PropertiesReader.prototype.set = function (key, value) {\\n       }\\n \\n       if (!has(source, step)) {\\n-         Object.defineProperty(source, step, { value: Object.create(null) });\\n+         Object.defineProperty(source, step, { value: {} });\\n       }\\n \\n       source = source[step]'}}",
            "message_norm":"allow for relying on object prototype in steps of the expanded properties",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/properties-reader.js'])",
            "num_files":1.0
        },
        {
            "index":1916,
            "vuln_id":"GHSA-gq67-pp9w-43gp",
            "cwe_id":"{'CWE-330', 'CWE-352'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/apache\/myfaces\/commit\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2'}",
            "dataset":"osv",
            "summary":"Cryptographically weak CSRF tokens in Apache MyFaces In the default configuration, Apache MyFaces Core versions 2.2.0 to 2.2.13, 2.3.0 to 2.3.7, 2.3-next-M1 to 2.3-next-M4, and 3.0.0-RC1 use cryptographically weak implicit and explicit cross-site request forgery (CSRF) tokens. Due to that limitation, it is possible (although difficult) for an attacker to calculate a future CSRF token value and to use that value to trick a user into executing unwanted actions on an application.\n\n\nMitigation:\nExisting web.xml configuration parameters can be used to direct\nMyFaces to use SecureRandom for CSRF token generation:\n\norg.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN=secureRandom\norg.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN=secureRandom\norg.apache.myfaces.RANDOM_KEY_IN_WEBSOCKET_SESSION_TOKEN=secureRandom",
            "published_date":"2021-06-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/myfaces",
            "commit_href":"https:\/\/github.com\/apache\/myfaces\/commit\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "commit_sha":"cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "patch":"SINGLE",
            "chain_ord":"['cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2']",
            "before_first_fix_commit":"{'2683d7ec7008eb2a728423ad6e574fa83137b65c', '413d25bfc0ba3a49a06484e17d603a25ce4af436'}",
            "last_fix_commit":"cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2021, 19:51:15",
            "message":"Merge pull request #132 from wtlucy\/secureRandom_master\n\nMYFACES-4373: prefer SecureRandom for token generation",
            "author":"Thomas Andraschko",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 7, 'total': 14}",
            "files":"{'impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java': {'additions': 7, 'deletions': 7, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/myfaces\/raw\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2\/impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fmyfaces%2Fconfig%2FMyfacesConfig.java', 'patch': '@@ -459,12 +459,12 @@\\n      * Adds a random key to the generated view state session token.\\n      *\/\\n     @JSFWebConfigParam(since=\"2.1.9, 2.0.15\", expectedValues=\"secureRandom, random\", \\n-            defaultValue=\"random\", group=\"state\")\\n+            defaultValue=\"secureRandom\", group=\"state\")\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\";\\n-    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = \"random\";\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_RANDOM = \"random\";\\n+    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM;\\n     \\n     \/**\\n      * Set the default length of the random key added to the view state session token.\\n@@ -499,16 +499,16 @@\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM\";\\n     private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM_DEFAULT = \"SHA1PRNG\";\\n     \\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\\n+    \\n     \/**\\n      * Defines how to generate the csrf session token.\\n      *\/\\n-    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"none\", group=\"state\")\\n+    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"secureRandom\", group=\"state\")\\n     public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN\";\\n-    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = \"random\";\\n-    \\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\\n+    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM;\\n     \\n     \/**\\n      * Indicates that the serialized state will be compressed before it is written to the session. By default true.'}}",
            "message_norm":"merge pull request #132 from wtlucy\/securerandom_master\n\nmyfaces-4373: prefer securerandom for token generation",
            "language":"en",
            "entities":"[('#132', 'ISSUE', ''), ('securerandom_master', 'SECWORD', ''), ('securerandom', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java'])",
            "num_files":1.0
        },
        {
            "index":487,
            "vuln_id":"GHSA-4rq4-32rv-6wp6",
            "cwe_id":"{'CWE-269'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/shelljs\/shelljs\/commit\/d919d22dd6de385edaa9d90313075a77f74b338c'}",
            "dataset":"osv",
            "summary":"Improper Privilege Management in shelljs shelljs is vulnerable to Improper Privilege Management",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/shelljs\/shelljs",
            "commit_href":"https:\/\/github.com\/shelljs\/shelljs\/commit\/d919d22dd6de385edaa9d90313075a77f74b338c",
            "commit_sha":"d919d22dd6de385edaa9d90313075a77f74b338c",
            "patch":"SINGLE",
            "chain_ord":"['d919d22dd6de385edaa9d90313075a77f74b338c']",
            "before_first_fix_commit":"{'fcf1651be9a3bb8e20ba1fd24b8a91f369829c53'}",
            "last_fix_commit":"d919d22dd6de385edaa9d90313075a77f74b338c",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/07\/2022, 05:14:23",
            "message":"fix(exec): lockdown file permissions (#1060)\n\nThis locks down file permissions used by the internal implementation of\r\n`shell.exec()`.\r\n\r\nIssue #1058\r\nTested manually using the documented scenarios",
            "author":"Nate Fischer",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 1, 'total': 20}",
            "files":"{'src\/exec.js': {'additions': 19, 'deletions': 1, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/shelljs\/shelljs\/raw\/d919d22dd6de385edaa9d90313075a77f74b338c\/src%2Fexec.js', 'patch': \"@@ -48,7 +48,24 @@ function execSync(cmd, opts, pipe) {\\n     stderrFile: stderrFile,\\n   };\\n \\n-  fs.writeFileSync(paramsFile, JSON.stringify(paramsToSerialize), 'utf8');\\n+  \/\/ Create the files and ensure these are locked down (for read and write) to\\n+  \/\/ the current user. The main concerns here are:\\n+  \/\/\\n+  \/\/ * If we execute a command which prints sensitive output, then\\n+  \/\/   stdoutFile\/stderrFile must not be readable by other users.\\n+  \/\/ * paramsFile must not be readable by other users, or else they can read it\\n+  \/\/   to figure out the path for stdoutFile\/stderrFile and create these first\\n+  \/\/   (locked down to their own access), which will crash exec() when it tries\\n+  \/\/   to write to the files.\\n+  function writeFileLockedDown(filePath, data) {\\n+    fs.writeFileSync(filePath, data, {\\n+      encoding: 'utf8',\\n+      mode: parseInt('600', 8),\\n+    });\\n+  }\\n+  writeFileLockedDown(stdoutFile, '');\\n+  writeFileLockedDown(stderrFile, '');\\n+  writeFileLockedDown(paramsFile, JSON.stringify(paramsToSerialize));\\n \\n   var execArgs = [\\n     path.join(__dirname, 'exec-child.js'),\\n@@ -91,6 +108,7 @@ function execSync(cmd, opts, pipe) {\\n   }\\n \\n   \/\/ No biggie if we can't erase the files now -- they're in a temp dir anyway\\n+  \/\/ and we locked down permissions (see the note above).\\n   try { common.unlinkSync(paramsFile); } catch (e) {}\\n   try { common.unlinkSync(stderrFile); } catch (e) {}\\n   try { common.unlinkSync(stdoutFile); } catch (e) {}\"}}",
            "message_norm":"fix(exec): lockdown file permissions (#1060)\n\nthis locks down file permissions used by the internal implementation of\r\n`shell.exec()`.\r\n\r\nissue #1058\r\ntested manually using the documented scenarios",
            "language":"en",
            "entities":"[('fix(exec', 'ACTION', ''), ('file permissions', 'SECWORD', ''), ('#1060', 'ISSUE', ''), ('file permissions', 'SECWORD', ''), ('#1058', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/exec.js'])",
            "num_files":1.0
        },
        {
            "index":2252,
            "vuln_id":"GHSA-jgrx-mgxx-jf9v",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/daaku\/nodejs-tmpl\/commit\/4c654e4d1542f329ed561fd95ccd80f30c6872d6'}",
            "dataset":"osv",
            "summary":"tmpl vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion nodejs-tmpl is simple string formatting. tmpl is vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion.",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/daaku\/nodejs-tmpl",
            "commit_href":"https:\/\/github.com\/daaku\/nodejs-tmpl\/commit\/4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "commit_sha":"4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "patch":"SINGLE",
            "chain_ord":"['4c654e4d1542f329ed561fd95ccd80f30c6872d6']",
            "before_first_fix_commit":"{'1dbd350783f04743bd759cc5ae1e1e3633d550ff'}",
            "last_fix_commit":"4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/07\/2021, 06:41:06",
            "message":"fix potential dos in regex",
            "author":"Naitik Shah",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/tmpl.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/daaku\/nodejs-tmpl\/raw\/4c654e4d1542f329ed561fd95ccd80f30c6872d6\/lib%2Ftmpl.js', 'patch': \"@@ -1,4 +1,4 @@\\n-var INTERPOLATE = \/{([\\\\s\\\\S]+?)}\/g\\n+var INTERPOLATE = \/{([^{]+?)}\/g\\n \\n module.exports = function(str, data) {\\n   var tmpl = 'var __p=[],print=function(){__p.push.apply(__p,arguments);};' +\"}}",
            "message_norm":"fix potential dos in regex",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('dos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/tmpl.js'])",
            "num_files":1.0
        },
        {
            "index":2746,
            "vuln_id":"GHSA-qfpc-5pjr-mh26",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764'}",
            "dataset":"osv",
            "summary":"Missing validation in shape inference for `Dequantize` ### Impact\nThe shape inference code for `tf.raw_ops.Dequantize` has a vulnerability that could trigger a denial of service via a segfault if an attacker provides invalid arguments:\n\n```python\nimport tensorflow as tf\n\ntf.compat.v1.disable_v2_behavior()\ntf.raw_ops.Dequantize(\n  input_tensor = tf.constant(-10.0, dtype=tf.float32),\n  input_tensor = tf.cast(input_tensor, dtype=tf.quint8),\n  min_range = tf.constant([], shape=[0], dtype=tf.float32),\n  max_range = tf.constant([], shape=[0], dtype=tf.float32),\n  mode  = 'MIN_COMBINED',\n  narrow_range=False,\n  axis=-10,\n  dtype=tf.dtypes.float32)\n```\n\nThe shape inference [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/ops\/array_ops.cc#L2999-L3014) uses `axis` to select between two different values for `minmax_rank` which is then used to retrieve tensor dimensions. However, code assumes that `axis` can be either `-1` or a value greater than `-1`, with no validation for the other values.\n\n### Patches\nWe have patched the issue in GitHub commit [da857cfa0fde8f79ad0afdbc94e88b5d4bbec764](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
            "commit_sha":"da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
            "patch":"SINGLE",
            "chain_ord":"['da857cfa0fde8f79ad0afdbc94e88b5d4bbec764']",
            "before_first_fix_commit":"{'8a793b5d7f59e37ac7f3cd0954a750a2fe76bad4'}",
            "last_fix_commit":"da857cfa0fde8f79ad0afdbc94e88b5d4bbec764",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/30\/2021, 01:24:18",
            "message":"Fix a shape inference issue leading to nullptr deref.\n\nPiperOrigin-RevId: 387712259\nChange-Id: I7e670772b259c068a501a187cd89f18773bb95a1",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/da857cfa0fde8f79ad0afdbc94e88b5d4bbec764\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -2990,6 +2990,10 @@ REGISTER_OP(\"Dequantize\")\\n       if (!s.ok() && s.code() != error::NOT_FOUND) {\\n         return s;\\n       }\\n+      if (axis < -1) {\\n+        return errors::InvalidArgument(\"axis should be at least -1, got \",\\n+                                       axis);\\n+      }\\n       const int minmax_rank = (axis == -1) ? 0 : 1;\\n       TF_RETURN_IF_ERROR(shape_inference::UnchangedShape(c));\\n       ShapeHandle minmax;'}}",
            "message_norm":"fix a shape inference issue leading to nullptr deref.\n\npiperorigin-revid: 387712259\nchange-id: i7e670772b259c068a501a187cd89f18773bb95a1",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('nullptr', 'SECWORD', ''), ('387712259', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":1536,
            "vuln_id":"GHSA-cf66-xwfp-gvc4",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/webpack\/webpack-dev-server\/commit\/f18e5adf123221a1015be63e1ca2491ca45b8d10'}",
            "dataset":"osv",
            "summary":"Missing Origin Validation in webpack-dev-server Versions of `webpack-dev-server` before 3.1.10 are missing origin validation on the websocket server. This vulnerability allows a remote attacker to steal a developer's source code because the origin of requests to the websocket server that is used for Hot Module Replacement (HMR) are not validated.\n\n\n## Recommendation\nFor `webpack-dev-server` update to version 3.1.11 or later.",
            "published_date":"2019-01-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/webpack\/webpack-dev-server",
            "commit_href":"https:\/\/github.com\/webpack\/webpack-dev-server\/commit\/f18e5adf123221a1015be63e1ca2491ca45b8d10",
            "commit_sha":"f18e5adf123221a1015be63e1ca2491ca45b8d10",
            "patch":"SINGLE",
            "chain_ord":"['f18e5adf123221a1015be63e1ca2491ca45b8d10']",
            "before_first_fix_commit":"{'e1bd264b9ce5fb0a05a62754883f6c8a36fbc51b'}",
            "last_fix_commit":"f18e5adf123221a1015be63e1ca2491ca45b8d10",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/24\/2018, 16:57:43",
            "message":"check origin header for websocket connection",
            "author":"Tobias Koppers",
            "comments":"{'com_1': {'author': 'hackel', 'datetime': '11\/09\/2018, 05:45:42', 'body': 'Any chance this security fix could be backported to 2.x?\\r\\nJust noticed this.  https:\/\/nodesecurity.io\/advisories\/725'}, 'com_2': {'author': 'alexander-akait', 'datetime': '11\/09\/2018, 10:14:03', 'body': 'No, please update to `3` version, `2` is deprecated'}, 'com_3': {'author': 'aeegvk', 'datetime': '01\/02\/2019, 08:33:02', 'body': 'Updated to suggested version 3.1.11 and latest version 3.1.14 but still getting a vulnerability report. How come?'}, 'com_4': {'author': 'oles', 'datetime': '01\/02\/2019, 10:54:04', 'body': 'Experiencing the same as @aeegvk.\\r\\n\\r\\nSeems like the error is in https:\/\/www.npmjs.com\/advisories\/725 though.'}, 'com_5': {'author': 'charlesfaustin', 'datetime': '01\/02\/2019, 13:35:57', 'body': '> Updated to suggested version 3.1.11 and latest version 3.1.14 but still getting a vulnerability report. How come?\\r\\n\\r\\nthere appears to be a typo in the npm vulnerability database\\r\\nhttps:\/\/npm.community\/t\/npm-audit-sweems-to-get-semver-wrong\/4352\/4'}}",
            "stats":"{'additions': 9, 'deletions': 2, 'total': 11}",
            "files":"{'lib\/Server.js': {'additions': 9, 'deletions': 2, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/webpack\/webpack-dev-server\/raw\/f18e5adf123221a1015be63e1ca2491ca45b8d10\/lib%2FServer.js', 'patch': '@@ -513,13 +513,15 @@ Server.prototype.setContentHeaders = function (req, res, next) {\\n   next();\\n };\\n \\n-Server.prototype.checkHost = function (headers) {\\n+Server.prototype.checkHost = function (headers, headerToCheck) {\\n   \/\/ allow user to opt-out this security check, at own risk\\n   if (this.disableHostCheck) return true;\\n \\n+  if (!headerToCheck) headerToCheck = \"host\";\\n+\\n   \/\/ get the Host header and extract hostname\\n   \/\/ we don\\'t care about port not matching\\n-  const hostHeader = headers.host;\\n+  const hostHeader = headers[headerToCheck];\\n   if (!hostHeader) return false;\\n \\n   \/\/ use the node url-parser to retrieve the hostname from the host-header.\\n@@ -589,6 +591,11 @@ Server.prototype.listen = function (port, hostname, fn) {\\n         conn.close();\\n         return;\\n       }\\n+      if (!this.checkHost(conn.headers, \"origin\")) {\\n+        this.sockWrite([conn], \\'error\\', \\'Invalid Origin header\\');\\n+        conn.close();\\n+        return;\\n+      }\\n       this.sockets.push(conn);\\n \\n       conn.on(\\'close\\', () => {'}}",
            "message_norm":"check origin header for websocket connection",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Server.js'])",
            "num_files":1.0
        },
        {
            "index":1144,
            "vuln_id":"GHSA-85wq-pqhp-hmq6",
            "cwe_id":"{'CWE-352'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/3c5e5ca63d9a1ac1c4087682dc0d426625eafed8', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/e69c28e44dae41322112471e1c80f840bde314d4', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/23f4809e6c10a221e9d67f2e841536845387b42d'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery in Jenkins Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to an issue in the Jenkins user database authentication realm: create an account if signup is enabled; or create an account if the victim is an administrator, possibly deleting the existing default admin user in the process and allowing a wide variety of impacts.",
            "published_date":"2022-05-14",
            "chain_len":3,
            "project":"https:\/\/github.com\/jenkinsci\/jenkins",
            "commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/23f4809e6c10a221e9d67f2e841536845387b42d",
            "commit_sha":"23f4809e6c10a221e9d67f2e841536845387b42d",
            "patch":"MULTI",
            "chain_ord":"['3c5e5ca63d9a1ac1c4087682dc0d426625eafed8', 'e69c28e44dae41322112471e1c80f840bde314d4', '23f4809e6c10a221e9d67f2e841536845387b42d']",
            "before_first_fix_commit":"{'eeb699ed8c2ce937f2b836692b36a98da7bb5622'}",
            "last_fix_commit":"23f4809e6c10a221e9d67f2e841536845387b42d",
            "chain_ord_pos":3.0,
            "commit_datetime":"04\/13\/2017, 13:01:32",
            "message":"[SECURITY-412] Simplify implementation as suggested by jglick",
            "author":"Daniel Beck",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 16, 'total': 20}",
            "files":"{'core\/src\/main\/java\/jenkins\/model\/Jenkins.java': {'additions': 4, 'deletions': 16, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/23f4809e6c10a221e9d67f2e841536845387b42d\/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2FJenkins.java', 'patch': '@@ -3369,53 +3369,41 @@ public DirectoryBrowserSupport doUserContent() {\\n      *\\n      * This first replaces \"app\" to {@link HudsonIsRestarting}\\n      *\/\\n+    @CLIMethod(name=\"restart\")\\n     public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, RestartNotSupportedException {\\n         checkPermission(ADMINISTER);\\n         if (req != null && req.getMethod().equals(\"GET\")) {\\n             req.getView(this,\"_restart.jelly\").forward(req,rsp);\\n             return;\\n         }\\n \\n-        if (req != null && req.getMethod().equals(\"POST\")) {\\n+        if (req == null || req.getMethod().equals(\"POST\")) {\\n             restart();\\n         }\\n \\n         rsp.sendRedirect2(\".\");\\n     }\\n \\n-    @CLIMethod(name=\"restart\")\\n-    @Restricted(NoExternalUse.class)\\n-    public void cliRestart() throws RestartNotSupportedException {\\n-        checkPermission(ADMINISTER);\\n-        restart();\\n-    }\\n-\\n     \/**\\n      * Queues up a restart of Jenkins for when there are no builds running, if we can.\\n      *\\n      * This first replaces \"app\" to {@link HudsonIsRestarting}\\n      *\\n      * @since 1.332\\n      *\/\\n+    @CLIMethod(name=\"safe-restart\")\\n     public HttpResponse doSafeRestart(StaplerRequest req) throws IOException, ServletException, RestartNotSupportedException {\\n         checkPermission(ADMINISTER);\\n         if (req != null && req.getMethod().equals(\"GET\"))\\n             return HttpResponses.forwardToView(this,\"_safeRestart.jelly\");\\n \\n-        if (req != null && req.getMethod().equals(\"POST\")) {\\n+        if (req == null || req.getMethod().equals(\"POST\")) {\\n             safeRestart();\\n         }\\n \\n         return HttpResponses.redirectToDot();\\n     }\\n \\n-    @CLIMethod(name=\"safe-restart\")\\n-    @Restricted(NoExternalUse.class)\\n-    public void cliSafeRestart() throws RestartNotSupportedException {\\n-        checkPermission(ADMINISTER);\\n-        safeRestart();\\n-    }\\n-\\n     \/**\\n      * Performs a restart.\\n      *\/'}}",
            "message_norm":"[security-412] simplify implementation as suggested by jglick",
            "language":"en",
            "entities":"[('security-412', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/src\/main\/java\/jenkins\/model\/Jenkins.java'])",
            "num_files":1.0
        },
        {
            "index":3131,
            "vuln_id":"GHSA-vj9x-w7ch-f46p",
            "cwe_id":"{'CWE-89'}",
            "score":8.3,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/66281c12479dc01a06258d8533eaddfb1770d5bd'}",
            "dataset":"osv",
            "summary":"pimcore is vulnerable to SQL Injection pimcore is vulnerable to Improper Neutralization of Special Elements used in an SQL Command",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/66281c12479dc01a06258d8533eaddfb1770d5bd",
            "commit_sha":"66281c12479dc01a06258d8533eaddfb1770d5bd",
            "patch":"SINGLE",
            "chain_ord":"['66281c12479dc01a06258d8533eaddfb1770d5bd']",
            "before_first_fix_commit":"{'d8377fc752dc3a42ca72cb49650481191f14ec63'}",
            "last_fix_commit":"66281c12479dc01a06258d8533eaddfb1770d5bd",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/17\/2022, 14:39:43",
            "message":"[Data Object] Classification Store quote filtering",
            "author":"Bernhard Rusch",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/66281c12479dc01a06258d8533eaddfb1770d5bd\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassificationstoreController.php', 'patch': \"@@ -1242,7 +1242,7 @@ public function propertiesGetAction(Request $request)\\n         }\\n \\n         if ($storeId) {\\n-            $conditionParts[] = '(storeId = ' . $storeId . ')';\\n+            $conditionParts[] = '(storeId = '. $db->quote($storeId) . ')';\\n         }\\n \\n         if ($request->get('filter')) {\"}}",
            "message_norm":"[data object] classification store quote filtering",
            "language":"it",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassificationstoreController.php'])",
            "num_files":1.0
        },
        {
            "index":334,
            "vuln_id":"GHSA-4284-jfhc-f854",
            "cwe_id":"{'CWE-732'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/phusion\/passenger\/commit\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8'}",
            "dataset":"osv",
            "summary":"Phusion Passenger incorrect permission assignment An issue was discovered in switchGroup() in agent\/ExecHelper\/ExecHelperMain.cpp in Phusion Passenger before 5.3.2. The set of groups (gidset) is not set correctly, leaving it up to randomness (i.e., uninitialized memory) which supplementary groups are actually being set while lowering privileges.",
            "published_date":"2022-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/phusion\/passenger",
            "commit_href":"https:\/\/github.com\/phusion\/passenger\/commit\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8",
            "commit_sha":"4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8",
            "patch":"SINGLE",
            "chain_ord":"['4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8']",
            "before_first_fix_commit":"{'6120509d3dca78b959135529262047febe884498'}",
            "last_fix_commit":"4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/29\/2018, 13:33:50",
            "message":"ExecHelperMain: fix privilege lowering code",
            "author":"Hongli Lai (Phusion)",
            "comments":"{'com_1': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:31:00', 'body': 'CVE-2018-12615 has been assigned to this.'}, 'com_2': {'author': 'CamJN', 'datetime': '06\/21\/2018, 14:33:35', 'body': \"Where was this reported? Mitre isn't showing a listing for CVE-2018-12615.\"}, 'com_3': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:37:46', 'body': \"It was reported through MITRE and will be displayed in the usual places, once it is synced, which usually takes a couple of hours. I've just added the comment as a reference, in case someone will be looking for it in the future.\"}, 'com_4': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:39:14', 'body': 'By the way: While looking at the code we also realized that there might be other issues with the privilege drop, e.g. #2096'}}",
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/agent\/ExecHelper\/ExecHelperMain.cpp': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/phusion\/passenger\/raw\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8\/src%2Fagent%2FExecHelper%2FExecHelperMain.cpp', 'patch': '@@ -201,6 +201,9 @@ switchGroup(uid_t uid, const struct passwd *userInfo, gid_t gid) {\\n \\t\\t\\tif (ngroups <= NGROUPS_MAX) {\\n \\t\\t\\t\\tsetgroupsCalled = true;\\n \\t\\t\\t\\tgidset.reset(new gid_t[ngroups]);\\n+\\t\\t\\t\\tfor (int i = 0; i < ngroups; i++) {\\n+\\t\\t\\t\\t\\tgidset[i] = groups[i];\\n+\\t\\t\\t\\t}\\n \\t\\t\\t\\tif (setgroups(ngroups, gidset.get()) == -1) {\\n \\t\\t\\t\\t\\tint e = errno;\\n \\t\\t\\t\\t\\tfprintf(stderr, \"ERROR: setgroups(%d, ...) failed: %s (errno=%d)\\\\n\",'}}",
            "message_norm":"exechelpermain: fix privilege lowering code",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('privilege', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/agent\/ExecHelper\/ExecHelperMain.cpp'])",
            "num_files":1.0
        },
        {
            "index":449,
            "vuln_id":"GHSA-4mv4-gmmf-q382",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/ccf86dc5982bd8e16d11a0815c940f5b256874c9', 'https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/9780a3693572757d87bf70e48bd7555faf974f28'}",
            "dataset":"osv",
            "summary":"DataTable Vulnerable to Cross-Site Scripting Cross-site scripting (XSS) vulnerability in the DataTables plugin 1.10.8 and earlier for jQuery allows remote attackers to inject arbitrary web script or HTML via the scripts parameter to media\/unit_testing\/templates\/6776.php.\n\n\n## Recommendation\n\nUpdate to a version greater than 1.10.8. A [fix](https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/ccf86dc5982bd8e16d) appears in [version 1.10.10](https:\/\/github.com\/DataTables\/DataTablesSrc\/commits\/1.10.10?after=9780a3693572757d87bf70e48bd7555faf974f28+34&branch=1.10.10&qualified_name=refs%2Ftags%2F1.10.10).",
            "published_date":"2020-08-31",
            "chain_len":2,
            "project":"https:\/\/github.com\/DataTables\/DataTablesSrc",
            "commit_href":"https:\/\/github.com\/DataTables\/DataTablesSrc\/commit\/9780a3693572757d87bf70e48bd7555faf974f28",
            "commit_sha":"9780a3693572757d87bf70e48bd7555faf974f28",
            "patch":"MULTI",
            "chain_ord":"['ccf86dc5982bd8e16d11a0815c940f5b256874c9', '9780a3693572757d87bf70e48bd7555faf974f28']",
            "before_first_fix_commit":"{'51fa58e1c6baf456fe83fbfc7bfa4082be850365'}",
            "last_fix_commit":"9780a3693572757d87bf70e48bd7555faf974f28",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/06\/2015, 15:33:43",
            "message":"Version - 1.10.10 ready",
            "author":"Allan Jardine",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'js\/DataTables.js': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DataTables\/DataTablesSrc\/raw\/9780a3693572757d87bf70e48bd7555faf974f28\/js%2FDataTables.js', 'patch': '@@ -1,11 +1,11 @@\\n-\/*! DataTables 1.10.10-dev\\n+\/*! DataTables 1.10.10\\n  * \u00a92008-2015 SpryMedia Ltd - datatables.net\/license\\n  *\/\\n \\n \/**\\n  * @summary     DataTables\\n  * @description Paginate, search and order HTML tables\\n- * @version     1.10.10-dev\\n+ * @version     1.10.10\\n  * @file        jquery.dataTables.js\\n  * @author      SpryMedia Ltd (www.sprymedia.co.uk)\\n  * @contact     www.sprymedia.co.uk\/contact\\n@@ -170,7 +170,7 @@\\n \\t *  @type string\\n \\t *  @default Version number\\n \\t *\/\\n-\\tDataTable.version = \"1.10.10-dev\";\\n+\\tDataTable.version = \"1.10.10\";\\n \\n \\t\/**\\n \\t * Private data store, containing all of the settings objects that are'}}",
            "message_norm":"version - 1.10.10 ready",
            "language":"en",
            "entities":"[('1.10.10', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['js\/DataTables.js'])",
            "num_files":1.0
        },
        {
            "index":1004,
            "vuln_id":"GHSA-79jw-2f46-wv22",
            "cwe_id":"{'CWE-74'}",
            "score":7.2,
            "chain":"{'https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe'}",
            "dataset":"osv",
            "summary":"Authenticated remote code execution in October CMS ### Impact\n\nAn authenticated user with the permissions to create, modify and delete website pages can exploit this vulnerability to bypass  `cms.safe_mode` \/ `cms.enableSafeMode` in order to execute arbitrary code.\n\n- This issue only affects admin panels that rely on safe mode and restricted permissions.\n- To exploit this vulnerability, an attacker must first have access to the backend area.\n\n### Patches\n\nThe issue has been patched in Build 474 (v1.0.474) and v1.1.10.\n\n### Workarounds\n\nApply https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe to your installation manually if unable to upgrade to Build 474 or v1.1.10.\n\n### References\n\nCredits to:\n- David Miller\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Email us at [hello@octobercms.com](mailto:hello@octobercms.com)",
            "published_date":"2022-02-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/library",
            "commit_href":"https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
            "commit_sha":"c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
            "patch":"SINGLE",
            "chain_ord":"['c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe']",
            "before_first_fix_commit":"{'8f06437ab772b48dd7ea7079c293f436438f867d'}",
            "last_fix_commit":"c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/20\/2022, 00:25:32",
            "message":"Backport fix from 2.0",
            "author":"Samuel Georges",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'src\/Halcyon\/Processors\/SectionParser.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/library\/raw\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe\/src%2FHalcyon%2FProcessors%2FSectionParser.php', 'patch': \"@@ -72,7 +72,8 @@ public static function render($data, $options = [])\\n             }\\n         }\\n \\n-        $content[] = $markup;\\n+        $sections = preg_split('\/^'.preg_quote(self::SECTION_SEPARATOR).'\\\\s*$\/m', $markup, -1);\\n+        $content[] = end($sections);\\n \\n         $content = trim(implode(PHP_EOL.self::SECTION_SEPARATOR.PHP_EOL, $content));\"}}",
            "message_norm":"backport fix from 2.0",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Halcyon\/Processors\/SectionParser.php'])",
            "num_files":1.0
        },
        {
            "index":2331,
            "vuln_id":"GHSA-m2q3-53fq-7h66",
            "cwe_id":"{'CWE-200'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/gollum\/gollum\/commit\/ce68a88293ce3b18c261312392ad33a88bb69ea1'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects gollum The Precious module in gollum before 4.0.1 allows remote attackers to read arbitrary files by leveraging the lack of a certain temporary-file check.",
            "published_date":"2018-08-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/gollum\/gollum",
            "commit_href":"https:\/\/github.com\/gollum\/gollum\/commit\/ce68a88293ce3b18c261312392ad33a88bb69ea1",
            "commit_sha":"ce68a88293ce3b18c261312392ad33a88bb69ea1",
            "patch":"SINGLE",
            "chain_ord":"['ce68a88293ce3b18c261312392ad33a88bb69ea1']",
            "before_first_fix_commit":"{'288f75929d57bff1753b47aa860066ce674d5229'}",
            "last_fix_commit":"ce68a88293ce3b18c261312392ad33a88bb69ea1",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/20\/2015, 11:53:02",
            "message":"Added security check.",
            "author":"Bart Kamphorst",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'lib\/gollum\/app.rb': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gollum\/gollum\/raw\/ce68a88293ce3b18c261312392ad33a88bb69ea1\/lib%2Fgollum%2Fapp.rb', 'patch': \"@@ -176,6 +176,7 @@ def wiki_new\\n         fullname = params[:file][:filename]\\n         tempfile = params[:file][:tempfile]\\n       end\\n+      halt 500 unless tempfile.is_a? Tempfile\\n \\n       # Remove page file dir prefix from upload path if necessary -- committer handles this itself\\n       dir      = wiki.per_page_uploads ? params[:upload_dest].match(\/^(#{wiki.page_file_dir}\\\\\/+)?(.*)\/)[2] : 'uploads'\"}}",
            "message_norm":"added security check.",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/gollum\/app.rb'])",
            "num_files":1.0
        },
        {
            "index":72,
            "vuln_id":"GHSA-29mw-wpgm-hmr9",
            "cwe_id":"{'CWE-400'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/lodash\/lodash\/pull\/5065\/commits\/02906b8191d3c100c193fe6f7b27d1c40f200bb7'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDoS) in lodash All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/lodash\/lodash",
            "commit_href":"https:\/\/github.com\/lodash\/lodash\/pull\/5065\/commits\/02906b8191d3c100c193fe6f7b27d1c40f200bb7",
            "commit_sha":"02906b8191d3c100c193fe6f7b27d1c40f200bb7",
            "patch":"SINGLE",
            "chain_ord":"['02906b8191d3c100c193fe6f7b27d1c40f200bb7']",
            "before_first_fix_commit":"{'ded9bc66583ed0b4e3b7dc906206d40757b4a90a'}",
            "last_fix_commit":"02906b8191d3c100c193fe6f7b27d1c40f200bb7",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2021, 22:17:05",
            "message":"perf: improve performance of `toNumber`, `trim` and `trimEnd` on large input strings",
            "author":"Micha\u0142 Lipi\u0144ski",
            "comments":null,
            "stats":"{'additions': 36, 'deletions': 7, 'total': 43}",
            "files":"{'lodash.js': {'additions': 36, 'deletions': 7, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lodash\/lodash\/raw\/02906b8191d3c100c193fe6f7b27d1c40f200bb7\/lodash.js', 'patch': \"@@ -152,10 +152,11 @@\\n   var reRegExpChar = \/[\\\\\\\\^$.*+?()[\\\\]{}|]\/g,\\n       reHasRegExpChar = RegExp(reRegExpChar.source);\\n \\n-  \/** Used to match leading and trailing whitespace. *\/\\n-  var reTrim = \/^\\\\s+|\\\\s+$\/g,\\n-      reTrimStart = \/^\\\\s+\/,\\n-      reTrimEnd = \/\\\\s+$\/;\\n+  \/** Used to match leading whitespace. *\/\\n+  var reTrimStart = \/^\\\\s+\/;\\n+\\n+  \/** Used to match a single whitespace character. *\/\\n+  var reWhitespace = \/\\\\s\/;\\n \\n   \/** Used to match wrap detail comments. *\/\\n   var reWrapComment = \/\\\\{(?:\\\\n\\\\\/\\\\* \\\\[wrapped with .+\\\\] \\\\*\\\\\/)?\\\\n?\/,\\n@@ -993,6 +994,19 @@\\n     });\\n   }\\n \\n+  \/**\\n+   * The base implementation of `_.trim`.\\n+   *\\n+   * @private\\n+   * @param {string} string The string to trim.\\n+   * @returns {string} Returns the trimmed string.\\n+   *\/\\n+  function baseTrim(string) {\\n+    return string\\n+      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\\n+      : string;\\n+  }\\n+\\n   \/**\\n    * The base implementation of `_.unary` without support for storing metadata.\\n    *\\n@@ -1326,6 +1340,21 @@\\n       : asciiToArray(string);\\n   }\\n \\n+  \/**\\n+   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\\n+   * character of `string`.\\n+   *\\n+   * @private\\n+   * @param {string} string The string to inspect.\\n+   * @returns {number} Returns the index of the last non-whitespace character.\\n+   *\/\\n+  function trimmedEndIndex(string) {\\n+    var index = string.length;\\n+\\n+    while (index-- && reWhitespace.test(string.charAt(index))) {}\\n+    return index;\\n+  }\\n+\\n   \/**\\n    * Used by `_.unescape` to convert HTML entities to characters.\\n    *\\n@@ -12494,7 +12523,7 @@\\n       if (typeof value != 'string') {\\n         return value === 0 ? value : +value;\\n       }\\n-      value = value.replace(reTrim, '');\\n+      value = baseTrim(value);\\n       var isBinary = reIsBinary.test(value);\\n       return (isBinary || reIsOctal.test(value))\\n         ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\\n@@ -14979,7 +15008,7 @@\\n     function trim(string, chars, guard) {\\n       string = toString(string);\\n       if (string && (guard || chars === undefined)) {\\n-        return string.replace(reTrim, '');\\n+        return baseTrim(string);\\n       }\\n       if (!string || !(chars = baseToString(chars))) {\\n         return string;\\n@@ -15014,7 +15043,7 @@\\n     function trimEnd(string, chars, guard) {\\n       string = toString(string);\\n       if (string && (guard || chars === undefined)) {\\n-        return string.replace(reTrimEnd, '');\\n+        return string.slice(0, trimmedEndIndex(string) + 1);\\n       }\\n       if (!string || !(chars = baseToString(chars))) {\\n         return string;\"}}",
            "message_norm":"perf: improve performance of `tonumber`, `trim` and `trimend` on large input strings",
            "language":"en",
            "entities":"[('improve', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lodash.js'])",
            "num_files":1.0
        },
        {
            "index":2682,
            "vuln_id":"GHSA-q3g3-h9r4-prrc",
            "cwe_id":"{'CWE-125'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/93f428fd1768df147171ed674fee1fc5ab8309ec'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr and heap OOB in binary cwise ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all binary cwise operations that don't require broadcasting (e.g., gradients of binary cwise operations):\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SqrtGrad(y=[4, 16],dy=[])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/cwise_ops_common.h#L264) assumes that the two inputs have exactly the same number of elements but does not check that. Hence, when the eigen functor executes it triggers heap OOB reads and undefined behavior due to binding to nullptr.\n\n### Patches\nWe have patched the issue in GitHub commit [93f428fd1768df147171ed674fee1fc5ab8309ec](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/93f428fd1768df147171ed674fee1fc5ab8309ec).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo  360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/93f428fd1768df147171ed674fee1fc5ab8309ec",
            "commit_sha":"93f428fd1768df147171ed674fee1fc5ab8309ec",
            "patch":"SINGLE",
            "chain_ord":"['93f428fd1768df147171ed674fee1fc5ab8309ec']",
            "before_first_fix_commit":"{'bc9c546ce7015c57c2f15c168b3d9201de679a1d'}",
            "last_fix_commit":"93f428fd1768df147171ed674fee1fc5ab8309ec",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 04:42:36",
            "message":"Fix nullptr deref and heap OOB access in binary cwise ops.\n\nPiperOrigin-RevId: 387936777\nChange-Id: I608b8074cec36a982cca622b7144cb2c43e6e19f",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/cwise_ops_common.h': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/93f428fd1768df147171ed674fee1fc5ab8309ec\/tensorflow%2Fcore%2Fkernels%2Fcwise_ops_common.h', 'patch': '@@ -265,6 +265,11 @@ class SimpleBinaryOp : public OpKernel {\\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& in0 = ctx->input(0);\\n     const Tensor& in1 = ctx->input(1);\\n+    OP_REQUIRES(\\n+        ctx, in0.NumElements() == in1.NumElements(),\\n+        errors::InvalidArgument(\"The two arguments to a cwise op must have \"\\n+                                \"same number of elements, got \",\\n+                                in0.NumElements(), \" and \", in1.NumElements()));\\n     auto in0_flat = in0.flat<Tin>();\\n     auto in1_flat = in1.flat<Tin>();\\n     const Device& eigen_device = ctx->eigen_device<Device>();'}}",
            "message_norm":"fix nullptr deref and heap oob access in binary cwise ops.\n\npiperorigin-revid: 387936777\nchange-id: i608b8074cec36a982cca622b7144cb2c43e6e19f",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('heap oob', 'SECWORD', ''), ('387936777', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/cwise_ops_common.h'])",
            "num_files":1.0
        },
        {
            "index":2674,
            "vuln_id":"GHSA-q26w-wjj2-22vv",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/laurent22\/joplin\/commit\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13'}",
            "dataset":"osv",
            "summary":"Cross-site scripting in Joplin Joplin allows XSS via a LINK element in a note.",
            "published_date":"2021-05-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/laurent22\/joplin",
            "commit_href":"https:\/\/github.com\/laurent22\/joplin\/commit\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13",
            "commit_sha":"fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13",
            "patch":"SINGLE",
            "chain_ord":"['fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13']",
            "before_first_fix_commit":"{'4a184721e4e4aa00a39d508cdc1a3ae660d3610e'}",
            "last_fix_commit":"fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/29\/2020, 16:19:56",
            "message":"All: Security: Remove \"link\" and \"meta\" tags from notes to prevent XSS",
            "author":"Laurent Cozic",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 5, 'total': 15}",
            "files":"{'ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js': {'additions': 10, 'deletions': 5, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/laurent22\/joplin\/raw\/fd90a490c0e5cacd17bfe0ffc422be1d2a9b1c13\/ReactNativeClient%2Flib%2Fjoplin-renderer%2FhtmlUtils.js', 'patch': '@@ -87,11 +87,16 @@ class HtmlUtils {\\n \\t\\t\\treturn tagStack[tagStack.length - 1];\\n \\t\\t};\\n \\n-\\t\\t\/\/ The BASE tag allows changing the base URL from which files are loaded, and\\n-\\t\\t\/\/ that can break several plugins, such as Katex (which needs to load CSS\\n-\\t\\t\/\/ files using a relative URL). For that reason it is disabled.\\n-\\t\\t\/\/ More info: https:\/\/github.com\/laurent22\/joplin\/issues\/3021\\n-\\t\\tconst disallowedTags = [\\'script\\', \\'iframe\\', \\'frameset\\', \\'frame\\', \\'object\\', \\'base\\', \\'embed\\'];\\n+\\t\\t\/\/ The BASE tag allows changing the base URL from which files are\\n+\\t\\t\/\/ loaded, and that can break several plugins, such as Katex (which\\n+\\t\\t\/\/ needs to load CSS files using a relative URL). For that reason\\n+\\t\\t\/\/ it is disabled. More info:\\n+\\t\\t\/\/ https:\/\/github.com\/laurent22\/joplin\/issues\/3021\\n+\\t\\t\/\/\\n+\\t\\t\/\/ \"link\" can be used to escape the parser and inject JavaScript.\\n+\\t\\t\/\/ Adding \"meta\" too for the same reason as it shouldn\\'t be used in\\n+\\t\\t\/\/ notes anyway.\\n+\\t\\tconst disallowedTags = [\\'script\\', \\'iframe\\', \\'frameset\\', \\'frame\\', \\'object\\', \\'base\\', \\'embed\\', \\'link\\', \\'meta\\'];\\n \\n \\t\\tconst parser = new htmlparser2.Parser({'}}",
            "message_norm":"all: security: remove \"link\" and \"meta\" tags from notes to prevent xss",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('remove', 'ACTION', ''), ('prevent', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ReactNativeClient\/lib\/joplin-renderer\/htmlUtils.js'])",
            "num_files":1.0
        },
        {
            "index":1359,
            "vuln_id":"GHSA-9cq5-xgg4-x477",
            "cwe_id":"{'CWE-89'}",
            "score":6.7,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/2b34e267e4186125f99bfa420140634ad45801fb'}",
            "dataset":"osv",
            "summary":"SQL Injection in showdoc Showdoc verions 2.10.2 and prior is vulnerable to SQL injection. A patch is available in the `master` branch of the repository.",
            "published_date":"2022-01-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/2b34e267e4186125f99bfa420140634ad45801fb",
            "commit_sha":"2b34e267e4186125f99bfa420140634ad45801fb",
            "patch":"SINGLE",
            "chain_ord":"['2b34e267e4186125f99bfa420140634ad45801fb']",
            "before_first_fix_commit":"{'409c8a1208bbb847046a9496303192980f2e6219'}",
            "last_fix_commit":"2b34e267e4186125f99bfa420140634ad45801fb",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/25\/2022, 12:34:52",
            "message":"bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'server\/Application\/Api\/Controller\/AdminUserController.class.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/2b34e267e4186125f99bfa420140634ad45801fb\/server%2FApplication%2FApi%2FController%2FAdminUserController.class.php', 'patch': '@@ -76,7 +76,7 @@ public function addUser(){\\n         $this->checkAdmin();\\n         $username = I(\"post.username\");\\n         $password = I(\"post.password\");\\n-        $uid = I(\"post.uid\");\\n+        $uid = I(\"post.uid\/d\");\\n         $name = I(\"post.name\");\\n         if(!$username){\\n             $this->sendError(10101,\\'\u7528\u6237\u540d\u4e0d\u5141\u8bb8\u4e3a\u7a7a\\');'}}",
            "message_norm":"bug",
            "language":"id",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Controller\/AdminUserController.class.php'])",
            "num_files":1.0
        },
        {
            "index":1745,
            "vuln_id":"GHSA-fjqr-fx3f-g4rv",
            "cwe_id":"{'CWE-78'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/electron\/electron\/commit\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7'}",
            "dataset":"osv",
            "summary":"Electron protocol handler browser vulnerable to Command Injection Github Electron version Electron 1.8.2-beta.4 and earlier contains a Command Injection vulnerability in Protocol Handler that can result in command execute. This attack appear to be exploitable via the victim opening an electron protocol handler in their browser. This vulnerability appears to have been fixed in Electron 1.8.2-beta.5. This issue is due to an incomplete fix for CVE-2018-1000006, specifically the black list used was not case insensitive allowing an attacker to potentially bypass it.",
            "published_date":"2018-03-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/electron\/electron",
            "commit_href":"https:\/\/github.com\/electron\/electron\/commit\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
            "commit_sha":"ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
            "patch":"SINGLE",
            "chain_ord":"['ce361a12e355f9e1e99c989f1ea056c9e502dbe7']",
            "before_first_fix_commit":"{'278c58055ed36f6f22cea05a9cd85a5ab4fb3010'}",
            "last_fix_commit":"ce361a12e355f9e1e99c989f1ea056c9e502dbe7",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/01\/2018, 00:35:09",
            "message":"Use case-insensitive switch comparisons",
            "author":"Samuel Attard",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'atom\/app\/command_line_args.cc': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/electron\/electron\/raw\/ce361a12e355f9e1e99c989f1ea056c9e502dbe7\/atom%2Fapp%2Fcommand_line_args.cc', 'patch': '@@ -1390,7 +1390,8 @@ bool IsBlacklistedArg(const base::CommandLine::CharType* arg) {\\n \\n   if (prefix_length > 0) {\\n     a += prefix_length;\\n-    std::string switch_name(a, strcspn(a, \"=\"));\\n+    std::string switch_name =\\n+        base::ToLowerASCII(base::StringPiece(a, strcspn(a, \"=\")));\\n     auto* iter = std::lower_bound(std::begin(kBlacklist), std::end(kBlacklist),\\n                                   switch_name);\\n     if (iter != std::end(kBlacklist) && switch_name == *iter) {'}}",
            "message_norm":"use case-insensitive switch comparisons",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['atom\/app\/command_line_args.cc'])",
            "num_files":1.0
        },
        {
            "index":1852,
            "vuln_id":"GHSA-g954-5hwp-pp24",
            "cwe_id":"{'CWE-1321'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/protobufjs\/protobuf.js\/commit\/b5f1391dff5515894830a6570e6d73f5511b2e8f'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in protobufjs The package protobufjs before 6.11.3 and 6.10.3 is vulnerable to Prototype Pollution, which can allow an attacker to add\/modify properties of the Object.prototype.\n\nThis vulnerability can occur in multiple ways:\n1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions\n2. by parsing\/loading .proto files",
            "published_date":"2022-05-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/protobufjs\/protobuf.js",
            "commit_href":"https:\/\/github.com\/protobufjs\/protobuf.js\/commit\/b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "commit_sha":"b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "patch":"SINGLE",
            "chain_ord":"['b5f1391dff5515894830a6570e6d73f5511b2e8f']",
            "before_first_fix_commit":"{'7afd0a39f41d6df5fda6fa10c319cdf829027d3e'}",
            "last_fix_commit":"b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/20\/2022, 18:08:37",
            "message":"fix: do not let setProperty change the prototype (#1731)",
            "author":"Alexander Fenster",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/util.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/protobufjs\/protobuf.js\/raw\/b5f1391dff5515894830a6570e6d73f5511b2e8f\/src%2Futil.js', 'patch': '@@ -176,6 +176,9 @@ util.decorateEnum = function decorateEnum(object) {\\n util.setProperty = function setProperty(dst, path, value) {\\n     function setProp(dst, path, value) {\\n         var part = path.shift();\\n+        if (part === \"__proto__\") {\\n+          return dst;\\n+        }\\n         if (path.length > 0) {\\n             dst[part] = setProp(dst[part] || {}, path, value);\\n         } else {'}}",
            "message_norm":"fix: do not let setproperty change the prototype (#1731)",
            "language":"en",
            "entities":"[('change', 'ACTION', ''), ('#1731', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/util.js'])",
            "num_files":1.0
        },
        {
            "index":2734,
            "vuln_id":"GHSA-qc36-q22q-cjw3",
            "cwe_id":"{'CWE-147'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2', 'https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce'}",
            "dataset":"osv",
            "summary":"SMTP command injection in lettre ### Impact\n\nAffected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.\n\n### Fix\n\nThe flaw is fixed by correctly handling consecutive CRLF sequences.\n\n### References\n\n* [RUSTSEC-2021-0069](https:\/\/rustsec.org\/advisories\/RUSTSEC-2021-0069.html)",
            "published_date":"2021-07-12",
            "chain_len":2,
            "project":"https:\/\/github.com\/lettre\/lettre",
            "commit_href":"https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
            "commit_sha":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
            "patch":"MULTI",
            "chain_ord":"['93458d01fed0ec81c0e7b4e98e6f35961356fae2', '8bfc20506cc5e098fe6eb3d1cafe3bea791215ce']",
            "before_first_fix_commit":"{'d930c42d5069e344a9dfa84ebe4b60bf3b11ac64'}",
            "last_fix_commit":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/22\/2021, 17:58:27",
            "message":"fix(transport-smtp): Fix transparency codec - 0.9.x (#628)\n\nCo-authored-by: Paolo Barbolini <paolo@paolo565.org>",
            "author":"Alexis Mousset",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 2, 'total': 13}",
            "files":"{'lettre\/src\/smtp\/client\/mod.rs': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lettre\/lettre\/raw\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce\/lettre%2Fsrc%2Fsmtp%2Fclient%2Fmod.rs', 'patch': '@@ -51,7 +51,15 @@ impl ClientCodec {\\n                     match self.escape_count {\\n                         0 => self.escape_count = if *byte == b\\'\\\\r\\' { 1 } else { 0 },\\n                         1 => self.escape_count = if *byte == b\\'\\\\n\\' { 2 } else { 0 },\\n-                        2 => self.escape_count = if *byte == b\\'.\\' { 3 } else { 0 },\\n+                        2 => {\\n+                            self.escape_count = if *byte == b\\'.\\' {\\n+                                3\\n+                            } else if *byte == b\\'\\\\r\\' {\\n+                                1\\n+                            } else {\\n+                                0\\n+                            }\\n+                        }\\n                         _ => unreachable!(),\\n                     }\\n                     if self.escape_count == 3 {\\n@@ -286,6 +294,7 @@ mod test {\\n         let mut buf: Vec<u8> = vec![];\\n \\n         assert!(codec.encode(b\"test\\\\r\\\\n\", &mut buf).is_ok());\\n+        assert!(codec.encode(b\"test\\\\r\\\\n\\\\r\\\\n\", &mut buf).is_ok());\\n         assert!(codec.encode(b\".\\\\r\\\\n\", &mut buf).is_ok());\\n         assert!(codec.encode(b\"\\\\r\\\\ntest\", &mut buf).is_ok());\\n         assert!(codec.encode(b\"te\\\\r\\\\n.\\\\r\\\\nst\", &mut buf).is_ok());\\n@@ -296,7 +305,7 @@ mod test {\\n         assert!(codec.encode(b\"test\", &mut buf).is_ok());\\n         assert_eq!(\\n             String::from_utf8(buf).unwrap(),\\n-            \"test\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n+            \"test\\\\r\\\\ntest\\\\r\\\\n\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n         );\\n     }'}}",
            "message_norm":"fix(transport-smtp): fix transparency codec - 0.9.x (#628)\n\nco-authored-by: paolo barbolini <paolo@paolo565.org>",
            "language":"en",
            "entities":"[('fix(transport', 'ACTION', ''), ('fix', 'ACTION', ''), ('#628', 'ISSUE', ''), ('paolo@paolo565.org', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lettre\/src\/smtp\/client\/mod.rs'])",
            "num_files":1.0
        },
        {
            "index":2605,
            "vuln_id":"GHSA-pmpr-55fj-r229",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `SVDF` ### Impact\nThe implementation of the `SVDF` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/7f283ff806b2031f407db64c4d3edcda8fb9f9f5\/tensorflow\/lite\/kernels\/svdf.cc#L99-L102):\n\n```cc\nconst int rank = params->rank;\n...\nTF_LITE_ENSURE_EQ(context, num_filters % rank, 0);\n```\n\nAn attacker can craft a model such that `params->rank` would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [6841e522a3e7d48706a02e8819836e809f738682](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682",
            "commit_sha":"6841e522a3e7d48706a02e8819836e809f738682",
            "patch":"SINGLE",
            "chain_ord":"['6841e522a3e7d48706a02e8819836e809f738682']",
            "before_first_fix_commit":"{'7f283ff806b2031f407db64c4d3edcda8fb9f9f5'}",
            "last_fix_commit":"6841e522a3e7d48706a02e8819836e809f738682",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 22:13:03",
            "message":"Prevent division by 0\n\nPiperOrigin-RevId: 370995582\nChange-Id: I670ffaf52d1ff8823ec31ea5f438f9125b402223",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/svdf.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6841e522a3e7d48706a02e8819836e809f738682\/tensorflow%2Flite%2Fkernels%2Fsvdf.cc', 'patch': '@@ -99,6 +99,7 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   const int rank = params->rank;\\n   const int batch_size = input->dims->data[0];\\n   const int num_filters = weights_feature->dims->data[0];\\n+  TF_LITE_ENSURE(context, rank != 0);\\n   TF_LITE_ENSURE_EQ(context, num_filters % rank, 0);\\n   const int num_units = num_filters \/ rank;\\n   const int memory_size = weights_time->dims->data[1];'}}",
            "message_norm":"prevent division by 0\n\npiperorigin-revid: 370995582\nchange-id: i670ffaf52d1ff8823ec31ea5f438f9125b402223",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370995582', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/svdf.cc'])",
            "num_files":1.0
        },
        {
            "index":2764,
            "vuln_id":"GHSA-qhx9-7hx7-cp4r",
            "cwe_id":"{'CWE-444'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/bottlepy\/bottle\/commit\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b'}",
            "dataset":"osv",
            "summary":"HTTP Request smuggling in bottle The package bottle before 0.12.19 are vulnerable to Web Cache Poisoning by using a vector called parameter cloaking. When the attacker can separate query parameters using a semicolon (;), they can cause a difference in the interpretation of the request between the proxy (running with default configuration) and the server. This can result in malicious requests being cached as completely safe ones, as the proxy would usually not see the semicolon as a separator, and therefore would not include it in a cache key of an unkeyed parameter.",
            "published_date":"2021-04-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/bottlepy\/bottle",
            "commit_href":"https:\/\/github.com\/bottlepy\/bottle\/commit\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b",
            "commit_sha":"57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b",
            "patch":"SINGLE",
            "chain_ord":"['57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b']",
            "before_first_fix_commit":"{'2d6acef676d35611dc58ca9c3bac51789adbcce8'}",
            "last_fix_commit":"57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/11\/2020, 18:24:29",
            "message":"Do not split query strings on `;` anymore.\n\nUsing `;` as a separator instead of `&` was allowed a long time ago,\nbut is now obsolete and actually invalid according to the 2014 W3C\nrecommendations. Even if this change is technically backwards-incompatible,\nno real-world application should depend on broken behavior. If you REALLY\nneed this functionality, monkey-patch the _parse_qsl() function.",
            "author":"Marcel Hellkamp",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bottle.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bottlepy\/bottle\/raw\/57a2f22e0c1d2b328c4f54bf75741d74f47f1a6b\/bottle.py', 'patch': \"@@ -2585,7 +2585,7 @@ def parse_range_header(header, maxlen=0):\\n \\n def _parse_qsl(qs):\\n     r = []\\n-    for pair in qs.replace(';','&').split('&'):\\n+    for pair in qs.split('&'):\\n         if not pair: continue\\n         nv = pair.split('=', 1)\\n         if len(nv) != 2: nv.append('')\"}}",
            "message_norm":"do not split query strings on `;` anymore.\n\nusing `;` as a separator instead of `&` was allowed a long time ago,\nbut is now obsolete and actually invalid according to the 2014 w3c\nrecommendations. even if this change is technically backwards-incompatible,\nno real-world application should depend on broken behavior. if you really\nneed this functionality, monkey-patch the _parse_qsl() function.",
            "language":"en",
            "entities":"[('monkey', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bottle.py'])",
            "num_files":1.0
        },
        {
            "index":1110,
            "vuln_id":"GHSA-828x-qc2p-wprq",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4'}",
            "dataset":"osv",
            "summary":"Undefined behavior in `MaxPool3DGradGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPool3DGradGrad` exhibits undefined behavior by dereferencing null pointers backing attacker-supplied empty tensors:\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([0.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\nksize = [1, 1, 1, 1, 1]\nstrides = [1, 1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPool3DGradGrad(\n    orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n    strides=strides, padding=padding)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/72fe792967e7fd25234342068806707bbc116618\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L679-L703) fails to validate that the 3 tensor inputs are not empty. If any of them is empty, then accessing the elements in the tensor results in dereferencing a null pointer.\n\n### Patches\nWe have patched the issue in GitHub commit [a3d9f9be9ac2296615644061b40cefcee341dcc4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "commit_sha":"a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "patch":"SINGLE",
            "chain_ord":"['a3d9f9be9ac2296615644061b40cefcee341dcc4']",
            "before_first_fix_commit":"{'72fe792967e7fd25234342068806707bbc116618'}",
            "last_fix_commit":"a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 22:20:14",
            "message":"Add missing validation to pooling_ops_3d\n\nPiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/pooling_ops_3d.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a3d9f9be9ac2296615644061b40cefcee341dcc4\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_3d.cc', 'patch': '@@ -698,6 +698,19 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n                                 {2}, 0, tensor_out.shape(), &output));\\n \\n+    \/\/ Given access patterns in LaunchMaxPooling3dGradGradOp, these tensors must\\n+    \/\/ have elements.\\n+    OP_REQUIRES(context, tensor_in.NumElements() > 0,\\n+                errors::InvalidArgument(\"received empty tensor tensor_in: \",\\n+                                        tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.NumElements() > 0,\\n+                errors::InvalidArgument(\"received empty tensor tensor_out: \",\\n+                                        tensor_out.DebugString()));\\n+    OP_REQUIRES(\\n+        context, out_grad_backprop.NumElements() > 0,\\n+        errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\\n+                                out_grad_backprop.DebugString()));\\n+\\n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);\\n   }'}}",
            "message_norm":"add missing validation to pooling_ops_3d\n\npiperorigin-revid: 372218727\nchange-id: i6b9ed4266aa7286c02f1f230d7bea922c1be547e",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('372218727', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_3d.cc'])",
            "num_files":1.0
        },
        {
            "index":13,
            "vuln_id":"GHSA-23hm-7w47-xw72",
            "cwe_id":"{'CWE-125'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/23968a8bf65b009120c43b5ebcceaf52dbc9e943'}",
            "dataset":"osv",
            "summary":"Out of bounds read in Tensorflow ### Impact \nThe [implementation of `Dequantize`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/dequantize_op.cc#L92-L153) does not fully validate the value of `axis` and can result in heap OOB accesses:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  y = tf.raw_ops.Dequantize(\n    input=tf.constant([1,1],dtype=tf.qint32),\n    min_range=[1.0],\n    max_range=[10.0],\n    mode='MIN_COMBINED',\n    narrow_range=False,\n    axis=2**31-1,\n    dtype=tf.bfloat16)\n  return y\n\ntest()\n```\n\nThe `axis` argument can be `-1` (the default value for the optional argument) or any other positive value at most the number of dimensions of the input. Unfortunately, the upper bound is not checked and this results in reading past the end of the array containing the dimensions of the input tensor:\n    \n```cc   \n  if (axis_ > -1) {\n    num_slices = input.dim_size(axis_);\n  }\n  \/\/ ...\n  int64_t pre_dim = 1, post_dim = 1;\n  for (int i = 0; i < axis_; ++i) {\n    pre_dim *= float_output.dim_size(i);\n  }\n  for (int i = axis_ + 1; i < float_output.dims(); ++i) {\n    post_dim *= float_output.dim_size(i);\n  }\n``` \n      \n### Patches\nWe have patched the issue in GitHub commit [23968a8bf65b009120c43b5ebcceaf52dbc9e943](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/23968a8bf65b009120c43b5ebcceaf52dbc9e943).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n      \n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/23968a8bf65b009120c43b5ebcceaf52dbc9e943",
            "commit_sha":"23968a8bf65b009120c43b5ebcceaf52dbc9e943",
            "patch":"SINGLE",
            "chain_ord":"['23968a8bf65b009120c43b5ebcceaf52dbc9e943']",
            "before_first_fix_commit":"{'566576746f47ebf42c38ebe01cca6dbb8832a9ef'}",
            "last_fix_commit":"23968a8bf65b009120c43b5ebcceaf52dbc9e943",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/20\/2021, 07:16:11",
            "message":"Fix out of bound access in DequantizeOp by adding check for axis < input dimension\n\nPiperOrigin-RevId: 411214268\nChange-Id: I3249d2a69ddc82f182c589a3a5bbfb71543f4b29",
            "author":"Isha Arkatkar",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/dequantize_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/23968a8bf65b009120c43b5ebcceaf52dbc9e943\/tensorflow%2Fcore%2Fkernels%2Fdequantize_op.cc', 'patch': '@@ -94,6 +94,11 @@ class DequantizeOp : public OpKernel {\\n     const Tensor& input_min_tensor = ctx->input(1);\\n     const Tensor& input_max_tensor = ctx->input(2);\\n \\n+    OP_REQUIRES(\\n+        ctx, axis_ < input.dims(),\\n+        errors::InvalidArgument(\"Axis must be less than input dimension(\",\\n+                                input.dims(), \"), got \", axis_));\\n+\\n     int num_slices = 1;\\n     if (axis_ > -1) {\\n       num_slices = input.dim_size(axis_);'}}",
            "message_norm":"fix out of bound access in dequantizeop by adding check for axis < input dimension\n\npiperorigin-revid: 411214268\nchange-id: i3249d2a69ddc82f182c589a3a5bbfb71543f4b29",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('out of bound access', 'SECWORD', ''), ('adding', 'ACTION', ''), ('411214268', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/dequantize_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1150,
            "vuln_id":"GHSA-8687-vv9j-hgph",
            "cwe_id":"{'CWE-20'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/Automattic\/mongoose\/commit\/f3eca5b94d822225c04e96cbeed9f095afb3c31c'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in Automattic Mongoose Automattic Mongoose through 5.7.4 allows attackers to bypass access control (in some applications) because any query object with a _bsontype attribute is ignored. For example, adding \"_bsontype\":\"a\" can sometimes interfere with a query filter. NOTE: this CVE is about Mongoose's failure to work around this _bsontype special case that exists in older versions of the bson parser (aka the mongodb\/js-bson project).",
            "published_date":"2019-10-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/Automattic\/mongoose",
            "commit_href":"https:\/\/github.com\/Automattic\/mongoose\/commit\/f3eca5b94d822225c04e96cbeed9f095afb3c31c",
            "commit_sha":"f3eca5b94d822225c04e96cbeed9f095afb3c31c",
            "patch":"SINGLE",
            "chain_ord":"['f3eca5b94d822225c04e96cbeed9f095afb3c31c']",
            "before_first_fix_commit":"{'cc10e0dc441f469330c1af2822d171fcd6fa8f89'}",
            "last_fix_commit":"f3eca5b94d822225c04e96cbeed9f095afb3c31c",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/09\/2019, 22:41:25",
            "message":"fix(query): delete top-level `_bsontype` property in queries to prevent silent empty queries\n\nFix #8222",
            "author":"Valeri Karpov",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'lib\/cast.js': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Automattic\/mongoose\/raw\/f3eca5b94d822225c04e96cbeed9f095afb3c31c\/lib%2Fcast.js', 'patch': \"@@ -27,6 +27,12 @@ module.exports = function cast(schema, obj, options, context) {\\n     throw new Error('Query filter must be an object, got an array ', util.inspect(obj));\\n   }\\n \\n+  \/\/ bson 1.x has the unfortunate tendency to remove filters that have a top-level\\n+  \/\/ `_bsontype` property. Should remove this when we upgrade to bson 4.x. See gh-8222\\n+  if (obj.hasOwnProperty('_bsontype')) {\\n+    delete obj._bsontype;\\n+  }\\n+\\n   const paths = Object.keys(obj);\\n   let i = paths.length;\\n   let _keys;\"}}",
            "message_norm":"fix(query): delete top-level `_bsontype` property in queries to prevent silent empty queries\n\nfix #8222",
            "language":"fr",
            "entities":"[('fix(query', 'ACTION', ''), ('prevent', 'ACTION', ''), ('fix', 'ACTION', ''), ('#8222', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/cast.js'])",
            "num_files":1.0
        },
        {
            "index":2718,
            "vuln_id":"GHSA-q863-cchm-c6c6",
            "cwe_id":"{'CWE-89'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/forkcms\/forkcms\/commit\/7a12046a67ae5d8cf04face3ee75e55f03a1a608'}",
            "dataset":"osv",
            "summary":"SQL Injection in Fork CMS Fork CMS contains a SQL injection vulnerability in versions prior to version 5.11.1. When deleting submissions which belong to a formular (made with module `FormBuilder`), the parameter `id[]` is vulnerable to SQL injection.",
            "published_date":"2022-03-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/forkcms\/forkcms",
            "commit_href":"https:\/\/github.com\/forkcms\/forkcms\/commit\/7a12046a67ae5d8cf04face3ee75e55f03a1a608",
            "commit_sha":"7a12046a67ae5d8cf04face3ee75e55f03a1a608",
            "patch":"SINGLE",
            "chain_ord":"['7a12046a67ae5d8cf04face3ee75e55f03a1a608']",
            "before_first_fix_commit":"{'1b38e33a98992793e998a937b717355212346993'}",
            "last_fix_commit":"7a12046a67ae5d8cf04face3ee75e55f03a1a608",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/23\/2022, 12:16:53",
            "message":"Prevent sql injection through the ids of the action",
            "author":"Jelmer Prins",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'src\/Backend\/Modules\/FormBuilder\/Engine\/Model.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/forkcms\/forkcms\/raw\/7a12046a67ae5d8cf04face3ee75e55f03a1a608\/src%2FBackend%2FModules%2FFormBuilder%2FEngine%2FModel.php', 'patch': \"@@ -152,6 +152,7 @@ public static function delete(int $id): void\\n     public static function deleteData(array $ids): void\\n     {\\n         $database = BackendModel::getContainer()->get('database');\\n+        $ids = array_map('intval', $ids);\\n \\n         $database->delete('forms_data', 'id IN(' . implode(',', $ids) . ')');\\n         $database->delete('forms_data_fields', 'data_id IN(' . implode(',', $ids) . ')');\"}}",
            "message_norm":"prevent sql injection through the ids of the action",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('sql injection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Backend\/Modules\/FormBuilder\/Engine\/Model.php'])",
            "num_files":1.0
        },
        {
            "index":144,
            "vuln_id":"GHSA-2v7p-f4qm-r5pc",
            "cwe_id":"{'CWE-89'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/523a735ab94f004459b84ffdfd3db784586bbd82'}",
            "dataset":"osv",
            "summary":"SQL Injection found in Pimcore Pimcore is an open source data & experience management platform. A SQL injection was discovered in GridHelperService.php in GitHub repository pimcore\/pimcore prior to 10.3.6.",
            "published_date":"2022-04-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/523a735ab94f004459b84ffdfd3db784586bbd82",
            "commit_sha":"523a735ab94f004459b84ffdfd3db784586bbd82",
            "patch":"SINGLE",
            "chain_ord":"['523a735ab94f004459b84ffdfd3db784586bbd82']",
            "before_first_fix_commit":"{'f29d3b2f305865c6e9884c460fb35bcf21bcf29f'}",
            "last_fix_commit":"523a735ab94f004459b84ffdfd3db784586bbd82",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/22\/2022, 09:05:32",
            "message":"Fixed column quoting in GridHelperService",
            "author":"Bernhard Rusch",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 2, 'total': 7}",
            "files":"{'bundles\/AdminBundle\/Helper\/GridHelperService.php': {'additions': 5, 'deletions': 2, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/523a735ab94f004459b84ffdfd3db784586bbd82\/bundles%2FAdminBundle%2FHelper%2FGridHelperService.php', 'patch': \"@@ -332,12 +332,13 @@ public function getFilterCondition($filterJson, ClassDefinition $class, $tablePr\\n                         } elseif ($filterField == 'id') {\\n                             $conditionPartsFilters[] = 'oo_id ' . $operator . ' ' . $db->quote($filter['value']);\\n                         } else {\\n+                            $filterField = $db->quoteIdentifier('o_' . $filterField);\\n                             if ($filter['type'] == 'date' && $operator == '=') {\\n                                 \/\/if the equal operator is chosen with the date type, condition has to be changed\\n                                 $maxTime = $filter['value'] + (86400 - 1); \/\/specifies the top point of the range used in the condition\\n-                                $conditionPartsFilters[] = '`o_' . $filterField . '` BETWEEN ' . $db->quote($filter['value']) . ' AND ' . $db->quote($maxTime);\\n+                                $conditionPartsFilters[] = $filterField . ' BETWEEN ' . $db->quote($filter['value']) . ' AND ' . $db->quote($maxTime);\\n                             } else {\\n-                                $conditionPartsFilters[] = '`o_' . $filterField . '` ' . $operator . ' ' . $db->quote($filter['value']);\\n+                                $conditionPartsFilters[] = $filterField . ' ' . $operator . ' ' . $db->quote($filter['value']);\\n                             }\\n                         }\\n                     }\\n@@ -780,6 +781,8 @@ public function prepareAssetListingForGrid($allParams, $adminUser)\\n \\n                 if ($filterField == 'fullpath') {\\n                     $filterField = 'CONCAT(path,filename)';\\n+                }else {\\n+                    $filterField = $db->quoteIdentifier($filterField);\\n                 }\\n \\n                 if (isset($filterDef[1]) && $filterDef[1] == 'system') {\"}}",
            "message_norm":"fixed column quoting in gridhelperservice",
            "language":"en",
            "entities":"[('fixed', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Helper\/GridHelperService.php'])",
            "num_files":1.0
        },
        {
            "index":2431,
            "vuln_id":"GHSA-mj63-64x7-57xf",
            "cwe_id":"{'CWE-22'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/49c643bf66620646884ed141c94e5fdd85bcdd2f', 'https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/99bd29e3995c254e2d6f6c2e3454e4271665955a'}",
            "dataset":"osv",
            "summary":"Path traversal in impacket Multiple path traversal vulnerabilities exist in smbserver.py in Impacket before 0.9.23. An attacker that connects to a running smbserver instance can list and write to arbitrary files via ..\/ directory traversal. This could potentially be abused to achieve arbitrary code execution by replacing \/etc\/shadow or an SSH authorized key.",
            "published_date":"2021-06-18",
            "chain_len":2,
            "project":"https:\/\/github.com\/SecureAuthCorp\/impacket",
            "commit_href":"https:\/\/github.com\/SecureAuthCorp\/impacket\/commit\/49c643bf66620646884ed141c94e5fdd85bcdd2f",
            "commit_sha":"49c643bf66620646884ed141c94e5fdd85bcdd2f",
            "patch":"MULTI",
            "chain_ord":"['99bd29e3995c254e2d6f6c2e3454e4271665955a', '49c643bf66620646884ed141c94e5fdd85bcdd2f']",
            "before_first_fix_commit":"{'6688da5d97592269aae72b3a00dc1ab186c0b33d', '91902eafb68fea932cf2350cab329f15afa554e5'}",
            "last_fix_commit":"49c643bf66620646884ed141c94e5fdd85bcdd2f",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/03\/2021, 15:43:02",
            "message":"Merge pull request #1066 from omriinbar\/master\n\nFix Path Traversal vulnerabilities by checking path prefix against in\u2026",
            "author":"0xdeaddood",
            "comments":null,
            "stats":"{'additions': 2012, 'deletions': 1937, 'total': 3949}",
            "files":"{'impacket\/smbserver.py': {'additions': 2012, 'deletions': 1937, 'changes': 3949, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SecureAuthCorp\/impacket\/raw\/49c643bf66620646884ed141c94e5fdd85bcdd2f\/impacket%2Fsmbserver.py', 'patch': None}}",
            "message_norm":"merge pull request #1066 from omriinbar\/master\n\nfix path traversal vulnerabilities by checking path prefix against in\u2026",
            "language":"en",
            "entities":"[('#1066', 'ISSUE', ''), ('path traversal', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['impacket\/smbserver.py'])",
            "num_files":1.0
        },
        {
            "index":1294,
            "vuln_id":"GHSA-92v9-xh2q-fq9f",
            "cwe_id":"{'CWE-1321', 'CWE-915'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/tony-tsx\/cookiex-deep\/commit\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in @cookiex\/deep The npm @cookiex\/deep package before version 0.0.7 has a prototype pollution vulnerability. The global proto object can be polluted using the __proto__ object.",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/tony-tsx\/cookiex-deep",
            "commit_href":"https:\/\/github.com\/tony-tsx\/cookiex-deep\/commit\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88",
            "commit_sha":"b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88",
            "patch":"SINGLE",
            "chain_ord":"['b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88']",
            "before_first_fix_commit":"{'ed91f5d004e8a1e3f269bb48c3b2ac294f8580ef'}",
            "last_fix_commit":"b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/13\/2021, 18:04:49",
            "message":"fix: prototype pollution fix #1",
            "author":"Tony",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/assigner.ts': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tony-tsx\/cookiex-deep\/raw\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88\/src%2Fassigner.ts', 'patch': \"@@ -1,12 +1,12 @@\\n const untracker = [ undefined, null ]\\n-\\n+const invalids = [ '__proto__', 'constructor', 'prototype' ]\\n const Assigner = function( delegate: ( a: any, b: any ) => any, useuntrack: boolean = true ): ( ...args: any[] ) => any {\\n   const assigner = ( ...args: any[] ) => {\\n-    console.log( { args } )\\n     return args.reduce( ( a, b ) => {\\n       if ( untracker.includes( a ) ) throw new TypeError( `can't convert ${a} to object` )\\n       if ( useuntrack && untracker.includes( b ) ) return a\\n       Object.keys( b ).forEach( key => {\\n+        if ( invalids.includes( key ) ) return void 0\\n         if ( untracker.includes( a[key] ) ) a[key] = b[key]\\n         else a[key] = delegate.call( this, a[key], b[key] )\\n       } )\"}}",
            "message_norm":"fix: prototype pollution fix #1",
            "language":"fr",
            "entities":"[('prototype pollution', 'SECWORD', ''), ('#1', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/assigner.ts'])",
            "num_files":1.0
        },
        {
            "index":2209,
            "vuln_id":"GHSA-j7rm-8ww4-xx2g",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `SpaceToDepth` ### Impact\nThe `Prepare` step of the `SpaceToDepth` TFLite operator [does not check for 0 before division](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5f7975d09eac0f10ed8a17dbb6f5964977725adc\/tensorflow\/lite\/kernels\/space_to_depth.cc#L63-L67).\n\n```cc \nconst int block_size = params->block_size;\nconst int input_height = input->dims->data[1];\nconst int input_width = input->dims->data[2];\nint output_height = input_height \/ block_size;\nint output_width = input_width \/ block_size;\n```   \n\nAn attacker can craft a model such that `params->block_size` would be zero.\n\n### Patches\nWe have patched the issue in GitHub commit [0d45ea1ca641b21b73bcf9c00e0179cda284e7e7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7",
            "commit_sha":"0d45ea1ca641b21b73bcf9c00e0179cda284e7e7",
            "patch":"SINGLE",
            "chain_ord":"['0d45ea1ca641b21b73bcf9c00e0179cda284e7e7']",
            "before_first_fix_commit":"{'5f7975d09eac0f10ed8a17dbb6f5964977725adc'}",
            "last_fix_commit":"0d45ea1ca641b21b73bcf9c00e0179cda284e7e7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 00:45:57",
            "message":"Prevent one more div by 0 in TFLite\n\nPiperOrigin-RevId: 370800114\nChange-Id: I6b956aeb8c458cc6f514408d2e89ffacfe249e57",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/space_to_depth.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0d45ea1ca641b21b73bcf9c00e0179cda284e7e7\/tensorflow%2Flite%2Fkernels%2Fspace_to_depth.cc', 'patch': '@@ -61,6 +61,7 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_TYPES_EQ(context, input->type, output->type);\\n \\n   const int block_size = params->block_size;\\n+  TF_LITE_ENSURE(context, block_size > 0);\\n   const int input_height = input->dims->data[1];\\n   const int input_width = input->dims->data[2];\\n   int output_height = input_height \/ block_size;'}}",
            "message_norm":"prevent one more div by 0 in tflite\n\npiperorigin-revid: 370800114\nchange-id: i6b956aeb8c458cc6f514408d2e89ffacfe249e57",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('div by 0', 'SECWORD', ''), ('370800114', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/space_to_depth.cc'])",
            "num_files":1.0
        },
        {
            "index":2085,
            "vuln_id":"GHSA-hjhp-hwfj-hwf3",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/03a1601bf343181df9f405dd2109aec483cb7053'}",
            "dataset":"osv",
            "summary":"Cross Site Request Forgery in firefly-iii  firefly-iii is vulnerable to a Cross-Site Request Forgery (CSRF) attack which can disable two factor authentication for the target user.",
            "published_date":"2021-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/firefly-iii\/firefly-iii",
            "commit_href":"https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/03a1601bf343181df9f405dd2109aec483cb7053",
            "commit_sha":"03a1601bf343181df9f405dd2109aec483cb7053",
            "patch":"SINGLE",
            "chain_ord":"['03a1601bf343181df9f405dd2109aec483cb7053']",
            "before_first_fix_commit":"{'edfff4ec57133bc78bbe6bdc4e1939b75bf9d845'}",
            "last_fix_commit":"03a1601bf343181df9f405dd2109aec483cb7053",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/24\/2021, 19:04:39",
            "message":"Fix.",
            "author":"James Cole",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 4, 'total': 9}",
            "files":"{'resources\/views\/v1\/profile\/index.twig': {'additions': 5, 'deletions': 4, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/firefly-iii\/firefly-iii\/raw\/03a1601bf343181df9f405dd2109aec483cb7053\/resources%2Fviews%2Fv1%2Fprofile%2Findex.twig', 'patch': '@@ -107,7 +107,7 @@\\n                     <div class=\"box box-default\">\\n                         <div class=\"box-body\">\\n                             <p class=\"text-info\">{{ \\'pref_two_factor_auth_help\\'|_ }}<\/p>\\n-                            {% if enabled2FA == false %}\\n+                            {% if enabled2FA == true %}\\n                                 <p class=\"text-info\">\\n                                     {{ trans_choice(\\'firefly.pref_two_factor_backup_code_count\\', mfaBackupCount) }}\\n                                 <\/p>\\n@@ -116,10 +116,11 @@\\n                                     <a class=\"btn btn-info\" href=\"{{ route(\\'profile.code\\') }}\">\\n                                         <span class=\"fa fa-recycle\"><\/span>\\n                                         {{ \\'pref_two_factor_auth_reset_code\\'|_ }}<\/a>\\n-                                    <a class=\"btn btn-danger\" href=\"{{ route(\\'profile.delete-code\\') }}\">\\n-                                        <span class=\"fa fa-trash\"><\/span>\\n-                                        {{ \\'pref_two_factor_auth_disable_2fa\\'|_ }}<\/a>\\n                                 <\/div>\\n+                                <form method=\"post\" action=\"{{ route(\\'profile.delete-code\\') }}\">\\n+                                    <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\\n+                                    <input class=\"btn btn-danger\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ \\'pref_two_factor_auth_disable_2fa\\'|_ }}\" \/>\\n+                                <\/form>\\n                                 <form method=\"post\" action=\"{{ route(\\'profile.new-backup-codes\\') }}\">\\n                                     <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\\n                                     <input class=\"btn btn-default\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ \\'pref_two_factor_new_backup_codes\\'|_ }}\" \/>'}}",
            "message_norm":"fix.",
            "language":"ca",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"SINGLE_WORD",
            "list_files":"dict_keys(['resources\/views\/v1\/profile\/index.twig'])",
            "num_files":1.0
        },
        {
            "index":357,
            "vuln_id":"GHSA-44qp-9wwf-734r",
            "cwe_id":"{'CWE-787', 'CWE-120'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3'}",
            "dataset":"osv",
            "summary":"Heap overflow in Tensorflow ### Impact \nThe [implementation of `SparseCountSparseOutput`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/count_ops.cc#L168-L273) is vulnerable to a heap overflow:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseCountSparseOutput(\n  indices=[[-1,-1]],\n  values=[2],\n  dense_shape=[1, 1],\n  weights=[1],\n  binary_output=True,\n  minlength=-1,\n  maxlength=-1,\n  name=None)\n```\n\n### Patches\nWe have patched the issue in GitHub commits [2b7100d6cdff36aa21010a82269bc05a6d1cc74a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a) and [adbbabdb0d3abb3cdeac69e38a96de1d678b24b3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a",
            "commit_sha":"2b7100d6cdff36aa21010a82269bc05a6d1cc74a",
            "patch":"MULTI",
            "chain_ord":"['2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'adbbabdb0d3abb3cdeac69e38a96de1d678b24b3']",
            "before_first_fix_commit":"{'2b7100d6cdff36aa21010a82269bc05a6d1cc74a'}",
            "last_fix_commit":"adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/08\/2021, 03:36:18",
            "message":"Cleanup and remove duplicate validation in `SparseCount`.\n\nWe have valdiation that is duplicated, checking different conditions, in different formats and failing to capture all cases. This should fix all the previous bugs.\n\nPiperOrigin-RevId: 414886981\nChange-Id: Ibf0bba0beb057b76d505324bb9487565daf95f01",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 21, 'deletions': 27, 'total': 48}",
            "files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 21, 'deletions': 27, 'changes': 48, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -185,6 +185,27 @@ class SparseCount : public OpKernel {\\n                 errors::InvalidArgument(\\n                     \"Input indices must be a 2-dimensional tensor. Got: \",\\n                     indices.shape().DebugString()));\\n+    OP_REQUIRES(context, TensorShapeUtils::IsVector(values.shape()),\\n+                errors::InvalidArgument(\"Input values must be a vector. Got: \",\\n+                                        values.shape().DebugString()));\\n+    OP_REQUIRES(context, TensorShapeUtils::IsVector(shape.shape()),\\n+                errors::InvalidArgument(\"Input shape must be a vector. Got: \",\\n+                                        shape.shape().DebugString()));\\n+    OP_REQUIRES(context,\\n+                values.shape().dim_size(0) == indices.shape().dim_size(0),\\n+                errors::InvalidArgument(\\n+                    \"Number of values must match first dimension of indices.\",\\n+                    \"Got \", values.shape().dim_size(0),\\n+                    \" values, indices shape: \", indices.shape().DebugString()));\\n+    OP_REQUIRES(\\n+        context, shape.shape().dim_size(0) == indices.shape().dim_size(1),\\n+        errors::InvalidArgument(\\n+            \"Number of dimensions must match second dimension of indices.\",\\n+            \"Got \", shape.shape().dim_size(0),\\n+            \" dimensions, indices shape: \", indices.shape().DebugString()));\\n+    OP_REQUIRES(context, shape.NumElements() > 0,\\n+                errors::InvalidArgument(\\n+                    \"The shape argument requires at least one element.\"));\\n \\n     if (use_weights) {\\n       OP_REQUIRES(\\n@@ -195,28 +216,11 @@ class SparseCount : public OpKernel {\\n               \"; values shape: \", values.shape().DebugString()));\\n     }\\n \\n-    OP_REQUIRES(context, shape.NumElements() != 0,\\n-                errors::InvalidArgument(\\n-                    \"The shape argument requires at least one element.\"));\\n-\\n     bool is_1d = shape.NumElements() == 1;\\n     auto shape_vector = shape.flat<int64_t>();\\n     int num_batches = is_1d ? 1 : shape_vector(0);\\n     int num_values = values.NumElements();\\n \\n-    for (int b = 0; b < shape_vector.size(); b++) {\\n-      OP_REQUIRES(context, shape_vector(b) >= 0,\\n-                  errors::InvalidArgument(\\n-                      \"Elements in dense_shape must be >= 0. Instead got:\",\\n-                      shape.DebugString()));\\n-    }\\n-\\n-    OP_REQUIRES(context, num_values == indices.shape().dim_size(0),\\n-                errors::InvalidArgument(\\n-                    \"Number of values must match first dimension of indices.\",\\n-                    \"Got \", num_values,\\n-                    \" values, indices shape: \", indices.shape().DebugString()));\\n-\\n     const auto indices_values = indices.matrix<int64_t>();\\n     const auto values_values = values.flat<T>();\\n     const auto weight_values = weights.flat<W>();\\n@@ -225,16 +229,6 @@ class SparseCount : public OpKernel {\\n \\n     T max_value = 0;\\n \\n-    OP_REQUIRES(context, num_values <= indices.shape().dim_size(0),\\n-                errors::InvalidArgument(\\n-                    \"The first dimension of indices must be equal to or \"\\n-                    \"greather than number of values. ( \",\\n-                    indices.shape().dim_size(0), \" vs. \", num_values, \" )\"));\\n-    OP_REQUIRES(context, indices.shape().dim_size(1) > 0,\\n-                errors::InvalidArgument(\"The second dimension of indices must \"\\n-                                        \"be greater than 0. Received: \",\\n-                                        indices.shape().dim_size(1)));\\n-\\n     for (int idx = 0; idx < num_values; ++idx) {\\n       int batch = is_1d ? 0 : indices_values(idx, 0);\\n       if (batch >= num_batches) {'}}",
            "message_norm":"cleanup and remove duplicate validation in `sparsecount`.\n\nwe have valdiation that is duplicated, checking different conditions, in different formats and failing to capture all cases. this should fix all the previous bugs.\n\npiperorigin-revid: 414886981\nchange-id: ibf0bba0beb057b76d505324bb9487565daf95f01",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('duplicate validation', 'SECWORD', ''), ('fix', 'ACTION', ''), ('bugs', 'FLAW', ''), ('414886981', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":2669,
            "vuln_id":"GHSA-pxcf-v868-m492",
            "cwe_id":"{'CWE-74', 'CWE-79'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/jperelli\/osm-static-maps\/commit\/97355d29e08753d1cfe99b1281dbaa06f4e651b0'}",
            "dataset":"osv",
            "summary":"Injection and Cross-site Scripting in osm-static-maps This affects all versions of package osm-static-maps under 3.9.0. User input given to the package is passed directly to a template without escaping ({{{ ... }}}). As such, it is possible for an attacker to inject arbitrary HTML\/JS code and depending on the context. It will be outputted as an HTML on the page which gives opportunity for XSS or rendered on the server (puppeteer) which also gives opportunity for SSRF and Local File Read.",
            "published_date":"2021-05-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/jperelli\/osm-static-maps",
            "commit_href":"https:\/\/github.com\/jperelli\/osm-static-maps\/commit\/97355d29e08753d1cfe99b1281dbaa06f4e651b0",
            "commit_sha":"97355d29e08753d1cfe99b1281dbaa06f4e651b0",
            "patch":"SINGLE",
            "chain_ord":"['97355d29e08753d1cfe99b1281dbaa06f4e651b0']",
            "before_first_fix_commit":"{'6bce2e2a8dd4cbbbbe083820e494ba858be74b16'}",
            "last_fix_commit":"97355d29e08753d1cfe99b1281dbaa06f4e651b0",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/11\/2020, 23:25:42",
            "message":"fix: escape special characters before insertion to template",
            "author":"snoopysecurity",
            "comments":null,
            "stats":"{'additions': 25, 'deletions': 6, 'total': 31}",
            "files":"{'src\/server.js': {'additions': 25, 'deletions': 6, 'changes': 31, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jperelli\/osm-static-maps\/raw\/97355d29e08753d1cfe99b1281dbaa06f4e651b0\/src%2Fserver.js', 'patch': '@@ -19,6 +19,23 @@ app.use((req, res, next) => {\\n   next();\\n });\\n \\n+\\n+function htmlEscape(text) {\\n+  return text.replace(\/&\/g, \\'&amp;\\').\\n+  replace(\/<\/g, \\'&lt;\\').\\n+  replace(\/\"\/g, \\'&quot;\\').\\n+  replace(\/\\'\/g, \\'&#039;\\');\\n+}\\n+\\n+\\n+function sanitize(params) {\\n+  result = {}\\n+  for (let [key, value] of Object.entries(params)) {\\n+      result[key] = htmlEscape(value)\\n+  }\\n+  return result;\\n+}\\n+\\n app.get(\"\/health\", (req, res) => res.sendStatus(200));\\n \\n const handler = (res, params) => {\\n@@ -40,12 +57,14 @@ const handler = (res, params) => {\\n app.get(\"\/\", (req, res) => handler(res, req.query));\\n app.post(\"\/\", (req, res) => handler(res, req.body));\\n \\n-app.get(\"\/dynamic\", (req, res) =>\\n-  handler(res, { ...req.query, renderToHtml: true })\\n-);\\n+app.get(\"\/dynamic\", (req, res) => {\\n+  var sanitized = sanitize(req.query)\\n+  handler(res, { ...sanitized, renderToHtml: true })\\n+})\\n \\n-app.post(\"\/dynamic\", (req, res) =>\\n-  handler(res, { ...req.body, renderToHtml: true })\\n-);\\n+app.post(\"\/dynamic\", (req, res) => {\\n+  var sanitized = sanitize(req.body)\\n+  handler(res, { ...sanitized, renderToHtml: true })\\n+})\\n \\n module.exports = http.createServer(app);'}}",
            "message_norm":"fix: escape special characters before insertion to template",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/server.js'])",
            "num_files":1.0
        },
        {
            "index":381,
            "vuln_id":"GHSA-484f-743f-6jx2",
            "cwe_id":"{'CWE-94'}",
            "score":4.4,
            "chain":"{'https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/commit\/c4527205cb7a402b595790c74310791f5b04a1a4'}",
            "dataset":"osv",
            "summary":"Object injection in cookie driver in phpfastcache ### Impact\nAn possible object injection has been discovered in cookie driver prior 5.0.13 versions (of 5.x releases).\n\n### Patches\nThe issue has been addressed by enforcing JSON conversion when deserializing\n\n### Workarounds\nIf you can't fix it, use another driver such as \"Files\" (Filesystem)\n\n### References\nFixing release: https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/releases\/tag\/5.0.13\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [the issue tracker](https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/issues)\n* Email us at [security@geolim4.com](mailto:security@geolim4.com)",
            "published_date":"2019-12-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/PHPSocialNetwork\/phpfastcache",
            "commit_href":"https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/commit\/c4527205cb7a402b595790c74310791f5b04a1a4",
            "commit_sha":"c4527205cb7a402b595790c74310791f5b04a1a4",
            "patch":"SINGLE",
            "chain_ord":"['c4527205cb7a402b595790c74310791f5b04a1a4']",
            "before_first_fix_commit":"{'afb1d158aee1eaa07857909d43f6ce3570b82a30'}",
            "last_fix_commit":"c4527205cb7a402b595790c74310791f5b04a1a4",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/30\/2016, 08:40:00",
            "message":"Fixed critical vulnerability on cookie driver",
            "author":"Geolim4",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/phpFastCache\/Drivers\/Cookie\/Driver.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PHPSocialNetwork\/phpfastcache\/raw\/c4527205cb7a402b595790c74310791f5b04a1a4\/src%2FphpFastCache%2FDrivers%2FCookie%2FDriver.php', 'patch': '@@ -99,7 +99,7 @@ protected function driverRead(CacheItemInterface $item)\\n         \/\/ return null if no caching\\n         \/\/ return value if in caching\\n         $keyword = self::PREFIX . $item->getKey();\\n-        $x = isset($_COOKIE[ $keyword ]) ? $this->decode(json_decode($_COOKIE[ $keyword ], true)) : false;\\n+        $x = isset($_COOKIE[ $keyword ]) ? json_decode($_COOKIE[ $keyword ], true) : false;\\n \\n         if ($x == false) {\\n             return null;'}}",
            "message_norm":"fixed critical vulnerability on cookie driver",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('critical', 'SEVERITY', ''), ('vulnerability', 'SECWORD', ''), ('cookie', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/phpFastCache\/Drivers\/Cookie\/Driver.php'])",
            "num_files":1.0
        },
        {
            "index":1183,
            "vuln_id":"GHSA-8c76-mxv5-w4g8",
            "cwe_id":"{'CWE-79'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/955471c27e671c49e4b012e3b120b004082ac3f7'}",
            "dataset":"osv",
            "summary":"Stored Cross-site Scripting in Microweber Microweber 1.2.11 and prior contains multiple stored cross-site scripting vulnerabilities in Shop's Other Settings, Shop's Autorespond E-mail Settings and Shops' Payments Methods.",
            "published_date":"2022-03-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/955471c27e671c49e4b012e3b120b004082ac3f7",
            "commit_sha":"955471c27e671c49e4b012e3b120b004082ac3f7",
            "patch":"SINGLE",
            "chain_ord":"['955471c27e671c49e4b012e3b120b004082ac3f7']",
            "before_first_fix_commit":"{'46e100a1b3e613f3e27b82942b00bdb0e69df4fa'}",
            "last_fix_commit":"955471c27e671c49e4b012e3b120b004082ac3f7",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 10:14:14",
            "message":"Update SaveOptionApiController.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 7, 'total': 26}",
            "files":"{'src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/955471c27e671c49e4b012e3b120b004082ac3f7\/src%2FMicroweberPackages%2FOption%2FHttp%2FControllers%2FApi%2FSaveOptionApiController.php', 'patch': \"@@ -6,18 +6,30 @@\\n \\n class SaveOptionApiController\\n {\\n-    public function saveOption(Request $request) {\\n+    public $whitelistedGroupKeys = [\\n+        'website' => [\\n+            'website_head',\\n+            'website_footer'\\n+        ]\\n+    ];\\n+\\n+    public function saveOption(Request $request)\\n+    {\\n \\n         $cleanFromXss = true;\\n         $option = $request->all();\\n \\n-        \/\/ Allow for this keys\\n+        \/\/ Allow for this keys and groups\\n         if (isset($option['option_key'])) {\\n-            if ($option['option_key'] == 'website_head') {\\n-                $cleanFromXss = false;\\n-            }\\n-            if ($option['option_key'] == 'website_footer') {\\n-                $cleanFromXss = false;\\n+            foreach ($this->whitelistedGroupKeys as $group => $keys) {\\n+                if ($option['option_group'] == $group) {\\n+                    foreach ($keys as $key) {\\n+                        if ($option['option_key'] == $key) {\\n+                            $cleanFromXss = false;\\n+                            break;\\n+                        }\\n+                    }\\n+                }\\n             }\\n         }\"}}",
            "message_norm":"update saveoptionapicontroller.php",
            "language":"it",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"SUBMIT_CENTERED",
            "list_files":"dict_keys(['src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php'])",
            "num_files":1.0
        },
        {
            "index":3097,
            "vuln_id":"GHSA-vcjj-9vg7-vf68",
            "cwe_id":"{'CWE-476'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/15691e456c7dc9bd6be203b09765b063bf4a380c'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in TFLite ### Impact\nAn attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:\n\n```python\nimport tensorflow as tf\n\nmodel = tf.keras.models.Sequential()\nmodel.add(tf.keras.Input(shape=(1, 2, 3)))\nmodel.add(tf.keras.layers.Dense(0, activation='relu'))\n\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\ntflite_model = converter.convert()\n\ninterpreter = tf.lite.Interpreter(model_content=tflite_model)\ninterpreter.allocate_tensors()\n\ninterpreter.invoke()\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/internal\/optimized\/optimized_ops.h#L268-L285) unconditionally dereferences a pointer.\n\n```cc\n  if (y4 > 1) {\n    \/\/ ...\n  } else {\n    for (int i0 = 0; i0 < y0; ++i0) {\n      const T* input2_data_ptr = nullptr;\n      for (int i1 = 0; i1 < y1; ++i1) {\n        input2_data_ptr = input2_data_reset;\n        for (int i2 = 0; i2 < y2; ++i2) {\n          scalar_broadcast_f(y3, params, *input1_data_ptr, input2_data_ptr,\n                             output_data_ptr);\n        }\n      }\n    }\n  }\n```\n\n### Patches\nWe have patched the issue in GitHub commit [15691e456c7dc9bd6be203b09765b063bf4a380c](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/15691e456c7dc9bd6be203b09765b063bf4a380c).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/15691e456c7dc9bd6be203b09765b063bf4a380c",
            "commit_sha":"15691e456c7dc9bd6be203b09765b063bf4a380c",
            "patch":"SINGLE",
            "chain_ord":"['15691e456c7dc9bd6be203b09765b063bf4a380c']",
            "before_first_fix_commit":"{'c107c1a6cee9afe5f718a48b70ffaa44bece42a2'}",
            "last_fix_commit":"15691e456c7dc9bd6be203b09765b063bf4a380c",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/28\/2021, 01:40:39",
            "message":"Prevent dereferencing of null pointers in TFLite's `add.cc`.\n\nPiperOrigin-RevId: 387244946\nChange-Id: I56094233327fbd8439b92e1dbb1262176e00eeb9",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'tensorflow\/lite\/kernels\/internal\/optimized\/optimized_ops.h': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/15691e456c7dc9bd6be203b09765b063bf4a380c\/tensorflow%2Flite%2Fkernels%2Finternal%2Foptimized%2Foptimized_ops.h', 'patch': '@@ -265,7 +265,7 @@ inline void BinaryBroadcastFiveFold(const ArithmeticParams& unswitched_params,\\n       \/\/ We have broadcast y2*y3*y4 of input2 data y1 times, and now move on.\\n       input2_data_reset = input2_data_ptr;\\n     }\\n-  } else {\\n+  } else if (input1_data_ptr != nullptr) {\\n     \/\/ Special case of y4 == 1, in which the innermost loop is a single\\n     \/\/ element and can be combined with the next (y3) as an inner broadcast.\\n     \/\/'}}",
            "message_norm":"prevent dereferencing of null pointers in tflite's `add.cc`.\n\npiperorigin-revid: 387244946\nchange-id: i56094233327fbd8439b92e1dbb1262176e00eeb9",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('387244946', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/internal\/optimized\/optimized_ops.h'])",
            "num_files":1.0
        },
        {
            "index":732,
            "vuln_id":"GHSA-62gx-355r-9fhg",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba'}",
            "dataset":"osv",
            "summary":"Session operations in eager mode lead to null pointer dereferences ### Impact\nIn eager mode (default in TF 2.0 and later), session operations are invalid. However, users could still call the raw ops associated with them and trigger a null pointer dereference:\n\n```python\nimport tensorflow as tf\ntf.raw_ops.GetSessionTensor(handle=['\\x12\\x1a\\x07'],dtype=4)\n```\n```python\nimport tensorflow as tf\ntf.raw_ops.DeleteSessionTensor(handle=['\\x12\\x1a\\x07'])\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/eebb96c2830d48597d055d247c0e9aebaea94cd5\/tensorflow\/core\/kernels\/session_ops.cc#L104) dereferences the session state pointer without checking if it is valid:\n  \n```cc\n  OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));\n```\n\nThus, in eager mode, `ctx->session_state()` is nullptr and the call of the member function is undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [ff70c47a396ef1e3cb73c90513da4f5cb71bebba](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba",
            "commit_sha":"ff70c47a396ef1e3cb73c90513da4f5cb71bebba",
            "patch":"SINGLE",
            "chain_ord":"['ff70c47a396ef1e3cb73c90513da4f5cb71bebba']",
            "before_first_fix_commit":"{'eebb96c2830d48597d055d247c0e9aebaea94cd5'}",
            "last_fix_commit":"ff70c47a396ef1e3cb73c90513da4f5cb71bebba",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/13\/2021, 21:24:00",
            "message":"Fix `tf.raw_ops.GetSessionTensor` and `tf.raw_ops.DeleteSessionTensor` null pointer dereferences.\n\nPiperOrigin-RevId: 368294154\nChange-Id: Ie10f07a0a9a1c2b685e08153d48a0ca4b93f9fc9",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 4, 'total': 14}",
            "files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 10, 'deletions': 4, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ff70c47a396ef1e3cb73c90513da4f5cb71bebba\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -91,7 +91,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\\n REGISTER_GPU_KERNEL(bool);\\n #undef REGISTER_GPU_KERNEL\\n \\n-\\n class GetSessionTensorOp : public OpKernel {\\n  public:\\n   explicit GetSessionTensorOp(OpKernelConstruction* context)\\n@@ -101,7 +100,11 @@ class GetSessionTensorOp : public OpKernel {\\n     const Tensor& handle = ctx->input(0);\\n     const string& name = handle.scalar<tstring>()();\\n     Tensor val;\\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->GetTensor(name, &val));\\n+    auto session_state = ctx->session_state();\\n+    OP_REQUIRES(ctx, session_state != nullptr,\\n+                errors::FailedPrecondition(\\n+                    \"GetSessionTensor called on null session state\"));\\n+    OP_REQUIRES_OK(ctx, session_state->GetTensor(name, &val));\\n     ctx->set_output(0, val);\\n   }\\n \\n@@ -122,7 +125,6 @@ TF_CALL_NUMBER_TYPES(REGISTER_GPU_KERNEL);\\n REGISTER_GPU_KERNEL(bool);\\n #undef REGISTER_GPU_KERNEL\\n \\n-\\n class DeleteSessionTensorOp : public OpKernel {\\n  public:\\n   explicit DeleteSessionTensorOp(OpKernelConstruction* context)\\n@@ -131,7 +133,11 @@ class DeleteSessionTensorOp : public OpKernel {\\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n     const string& name = handle.scalar<tstring>()();\\n-    OP_REQUIRES_OK(ctx, ctx->session_state()->DeleteTensor(name));\\n+    auto session_state = ctx->session_state();\\n+    OP_REQUIRES(ctx, session_state != nullptr,\\n+                errors::FailedPrecondition(\\n+                    \"DeleteSessionTensor called on null session state\"));\\n+    OP_REQUIRES_OK(ctx, session_state->DeleteTensor(name));\\n   }\\n \\n   TF_DISALLOW_COPY_AND_ASSIGN(DeleteSessionTensorOp);'}}",
            "message_norm":"fix `tf.raw_ops.getsessiontensor` and `tf.raw_ops.deletesessiontensor` null pointer dereferences.\n\npiperorigin-revid: 368294154\nchange-id: ie10f07a0a9a1c2b685e08153d48a0ca4b93f9fc9",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('null pointer dereferences', 'SECWORD', ''), ('368294154', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":1374,
            "vuln_id":"GHSA-9gwx-9cwp-5c2m",
            "cwe_id":"{'CWE-776'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/8ae27da5a6f658011a5741b3210e715b0dc6213e', 'https:\/\/github.com\/opencast\/opencast\/commit\/16b0d641713fe31b8518fcf14fc5e4e815d81206'}",
            "dataset":"osv",
            "summary":"Billion laughs attack (XML bomb) ### Impact\n\nOpencast is vulnerable to the [Billion laughs attack](https:\/\/en.wikipedia.org\/wiki\/Billion_laughs_attack)  which allows an attacker to easily execute a (seemingly permanent) denial of service attack, essentially taking down Opencast using a single HTTP request.\n\nConsider an XML file (`createMediaPackage.xml`) like this:\n\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<!DOCTYPE lolz [\n <!ENTITY lol \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum. \">\n <!ELEMENT title (#PCDATA)>\n <!ENTITY lol1 \"&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;\">\n <!ENTITY lol2 \"&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;&lol1;\">\n <!ENTITY lol3 \"&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;\">\n <!ENTITY lol4 \"&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;\">\n <!ENTITY lol5 \"&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;\">\n]>\n<mediapackage xmlns=\"http:\/\/mediapackage.opencastproject.org\" id=\"d162d5b2-b54f-4400-a268-ee6565b0e6e7\" start=\"2020-01-23T23:08:37Z\">\n  <title>&lol5;<\/title>\n  <media\/>\n  <metadata\/>\n  <attachments\/>\n  <publications\/>\n<\/mediapackage>\n```\n\nThrowing this at Opencast will cause Opencast to parse the XML and expand the Lorem Ipsum about 100\u00a0000 times, instantly consuming a huge amount of memory:\n\n```sh\ncurl -i -u admin:opencast https:\/\/develop.opencast.org\/ingestdownload\/ingestdownload \\\n  -F 'mediapackage=<createMediaPackage.xml' \\\n  -F sourceFlavors=\"\" \\\n  -F sourceTags=\"\" \\\n  -F deleteExternal=\"\" \\\n  -F tagsAndFlavor='' \\\n  -o out.xml\n```\n\nAdditional notes:\n\n- You can likely use other endpoints accepting XML (this was just the first one I tried) and depending on how much memory you want to consume, you might want to enlarge the lorem ipsum text.\n- Opencast's XML parser does limit the expansion to 100\u00a0000 times, already limiting the attack. Nevertheless, this can already harm the system. \n- To exploit this, users need to have ingest privileges, limiting the group of potential attackers\n\n### Patches\n\nThe problem has been fixed in Opencast 9.6. Older versions of Opencast are not patched sue to the extent of this patch.\n\n### Workarounds\n\nThere is no known workaround for this issue.\n\n### References\n\n- [Billion laughs attack explained](https:\/\/en.wikipedia.org\/wiki\/Billion_laughs_attack)\n- For technical details, take a look at the patch fixing the issue: https:\/\/github.com\/opencast\/opencast\/commit\/_________\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n\n- Open an issue in [our issue tracker](https:\/\/github.com\/opencast\/opencast\/issues)\n- Email us at [security@opencast.org](mailto:security@opencast.org)",
            "published_date":"2021-06-17",
            "chain_len":2,
            "project":"https:\/\/github.com\/opencast\/opencast",
            "commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/8ae27da5a6f658011a5741b3210e715b0dc6213e",
            "commit_sha":"8ae27da5a6f658011a5741b3210e715b0dc6213e",
            "patch":"MULTI",
            "chain_ord":"['16b0d641713fe31b8518fcf14fc5e4e815d81206', '8ae27da5a6f658011a5741b3210e715b0dc6213e']",
            "before_first_fix_commit":"{'27f401f37e92564d5a89ef71ab6a5aa6c59ee6fc'}",
            "last_fix_commit":"8ae27da5a6f658011a5741b3210e715b0dc6213e",
            "chain_ord_pos":2.0,
            "commit_datetime":"06\/15\/2021, 10:36:31",
            "message":"Clarifies debug options in setenv file (#2735)\n\nCo-authored-by: Lars Kiesow <lkiesow@uos.de>",
            "author":"Maximiliano Lira Del Canto",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'assemblies\/resources\/bin\/setenv': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/8ae27da5a6f658011a5741b3210e715b0dc6213e\/assemblies%2Fresources%2Fbin%2Fsetenv', 'patch': '@@ -31,8 +31,12 @@\\n # export KARAF_BASE        # Karaf base folder\\n # export KARAF_ETC         # Karaf etc  folder\\n # export KARAF_OPTS        # Additional Karaf options\\n-# export KARAF_DEBUG       # Enable debug mode\\n # export KARAF_REDIRECT    # Enable\/set the std\/err redirection when using bin\/start\\n+#\\n+# Debug options\\n+# export KARAF_DEBUG       # Enable debug mode\\n+# export JAVA_DEBUG_PORT   # Set debug port (defaults to 5005)\\n+\\n \\n export EXTRA_JAVA_OPTS=\"${EXTRA_JAVA_OPTS} -Dorg.eclipse.jetty.server.Request.maxFormContentSize=1500000 -Dfile.encoding=UTF-8\"\\n export JAVA_MAX_MEM=\"${JAVA_MAX_MEM:-1G}\"'}}",
            "message_norm":"clarifies debug options in setenv file (#2735)\n\nco-authored-by: lars kiesow <lkiesow@uos.de>",
            "language":"en",
            "entities":"[('#2735', 'ISSUE', ''), ('lkiesow@uos.de', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['assemblies\/resources\/bin\/setenv'])",
            "num_files":1.0
        },
        {
            "index":855,
            "vuln_id":"GHSA-6jmh-9gqm-5xrx",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/f59ffb02984c0ce2fbb19ac39365066507de9370'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery (CSRF) in livehelperchat A CSRF issue is found in the audit configuration under settings. It was found that no CSRF token validation is getting done on the server-side. If we remove the CSRF token and keep the CSRF token field empty, the action is getting performed.",
            "published_date":"2022-01-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/livehelperchat\/livehelperchat",
            "commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/f59ffb02984c0ce2fbb19ac39365066507de9370",
            "commit_sha":"f59ffb02984c0ce2fbb19ac39365066507de9370",
            "patch":"SINGLE",
            "chain_ord":"['f59ffb02984c0ce2fbb19ac39365066507de9370']",
            "before_first_fix_commit":"{'58df43e89c5b2c11be4994a71e84c93d469dc7bd'}",
            "last_fix_commit":"f59ffb02984c0ce2fbb19ac39365066507de9370",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2022, 19:04:29",
            "message":"Missing csfr check",
            "author":"Remigijus Kiminas",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'lhc_web\/modules\/lhaudit\/configuration.php': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/f59ffb02984c0ce2fbb19ac39365066507de9370\/lhc_web%2Fmodules%2Flhaudit%2Fconfiguration.php', 'patch': \"@@ -7,6 +7,11 @@\\n \\n if ( isset($_POST['StoreOptions']) ) {\\n \\n+    if (!isset($_POST['csfr_token']) || !$currentUser->validateCSFRToken($_POST['csfr_token'])) {\\n+        erLhcoreClassModule::redirect();\\n+        exit;\\n+    }\\n+    \\n     $definition = array(\\n         'days_log' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'int'),\\n         'log_js' => new ezcInputFormDefinitionElement(ezcInputFormDefinitionElement::OPTIONAL, 'boolean'),\"}}",
            "message_norm":"missing csfr check",
            "language":"de",
            "entities":"[('csfr', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lhc_web\/modules\/lhaudit\/configuration.php'])",
            "num_files":1.0
        },
        {
            "index":872,
            "vuln_id":"GHSA-6p56-wp2h-9hxr",
            "cwe_id":"{'CWE-120'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/numpy\/numpy\/commit\/ae317fd9ff3e79c0eac357d723bfc29cbd625f2e'}",
            "dataset":"osv",
            "summary":"NumPy Buffer Overflow (Disputed) A Buffer Overflow vulnerability exists in NumPy 1.9.x in the PyArray_NewFromDescr_int function of ctors.c when specifying arrays of large dimensions (over 32) from Python code, which could let a malicious user cause a Denial of Service.\n\nNOTE: The vendor does not agree this is a vulneraility; In (very limited) circumstances a user may be able provoke the buffer overflow, the user is most likely already privileged to at least provoke denial of service by exhausting memory. Triggering this further requires the use of uncommon API (complicated structured dtypes), which is very unlikely to be available to an unprivileged user.",
            "published_date":"2022-01-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/numpy\/numpy",
            "commit_href":"https:\/\/github.com\/numpy\/numpy\/commit\/ae317fd9ff3e79c0eac357d723bfc29cbd625f2e",
            "commit_sha":"ae317fd9ff3e79c0eac357d723bfc29cbd625f2e",
            "patch":"SINGLE",
            "chain_ord":"['ae317fd9ff3e79c0eac357d723bfc29cbd625f2e']",
            "before_first_fix_commit":"{'938fe1f871e22b8f5556b946135fa700e5ebcce1', '16f7824b4d935b6aee98298ca4123d57174a6f2e'}",
            "last_fix_commit":"ae317fd9ff3e79c0eac357d723bfc29cbd625f2e",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/11\/2021, 19:39:32",
            "message":"Merge pull request #18989 from yetanothercheer\/gh-18939-potential_buffer_overflow\n\nBUG: fix potential buffer overflow(#18939)",
            "author":"Charles Harris",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 8, 'total': 16}",
            "files":"{'numpy\/core\/src\/multiarray\/ctors.c': {'additions': 8, 'deletions': 8, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/numpy\/numpy\/raw\/ae317fd9ff3e79c0eac357d723bfc29cbd625f2e\/numpy%2Fcore%2Fsrc%2Fmultiarray%2Fctors.c', 'patch': '@@ -668,6 +668,14 @@ PyArray_NewFromDescr_int(\\n     int i;\\n     npy_intp nbytes;\\n \\n+    if ((unsigned int)nd > (unsigned int)NPY_MAXDIMS) {\\n+        PyErr_Format(PyExc_ValueError,\\n+                     \"number of dimensions must be within [0, %d]\",\\n+                     NPY_MAXDIMS);\\n+        Py_DECREF(descr);\\n+        return NULL;\\n+    }\\n+\\n     if (descr->subarray) {\\n         PyObject *ret;\\n         npy_intp newdims[2*NPY_MAXDIMS];\\n@@ -687,14 +695,6 @@ PyArray_NewFromDescr_int(\\n         return ret;\\n     }\\n \\n-    if ((unsigned int)nd > (unsigned int)NPY_MAXDIMS) {\\n-        PyErr_Format(PyExc_ValueError,\\n-                     \"number of dimensions must be within [0, %d]\",\\n-                     NPY_MAXDIMS);\\n-        Py_DECREF(descr);\\n-        return NULL;\\n-    }\\n-\\n     \/* Check datatype element size *\/\\n     nbytes = descr->elsize;\\n     if (PyDataType_ISUNSIZED(descr)) {'}}",
            "message_norm":"merge pull request #18989 from yetanothercheer\/gh-18939-potential_buffer_overflow\n\nbug: fix potential buffer overflow(#18939)",
            "language":"en",
            "entities":"[('#18989', 'ISSUE', ''), ('potential_buffer_overflow', 'SECWORD', ''), ('bug', 'FLAW', ''), ('fix', 'ACTION', ''), ('buffer overflow(#18939', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['numpy\/core\/src\/multiarray\/ctors.c'])",
            "num_files":1.0
        },
        {
            "index":262,
            "vuln_id":"GHSA-3hxh-8cp2-g4hg",
            "cwe_id":"{'CWE-416'}",
            "score":6.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ee119d4a498979525046fba1c3dd3f13a039fbb1'}",
            "dataset":"osv",
            "summary":"Use after free and segfault in shape inference functions ### Impact\nWhen running shape functions, some functions (such as `MutableHashTableShape`) produce extra output information in the form of a `ShapeAndType` struct. The shapes embedded in this struct are owned by an inference context that is cleaned up almost immediately; if the upstream code attempts to access this shape information, it can trigger a segfault.\n\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them (and thus putting the newly created shape under ownership of an inference context that will not die), but we were not doing the same for shapes and types. This commit fixes that by doing similar logic on output shapes and types.\n\n### Patches\nWe have patched the issue in GitHub commit [ee119d4a498979525046fba1c3dd3f13a039fbb1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ee119d4a498979525046fba1c3dd3f13a039fbb1).                                                                                                          \n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ee119d4a498979525046fba1c3dd3f13a039fbb1",
            "commit_sha":"ee119d4a498979525046fba1c3dd3f13a039fbb1",
            "patch":"SINGLE",
            "chain_ord":"['ee119d4a498979525046fba1c3dd3f13a039fbb1']",
            "before_first_fix_commit":"{'f118ff1538ac7aa8a628bba03fe66dc6811cc7fc'}",
            "last_fix_commit":"ee119d4a498979525046fba1c3dd3f13a039fbb1",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/14\/2021, 19:43:17",
            "message":"Fix segmentation fault in shape inference logic.\n\nWhen running shape functions, some functions (such as `MutableHashTableShape`)\nproduce extra output information in the form of a `ShapeAndType` struct.  The\nshapes embedded in this struct are owned by an inference context that is\ncleaned up almost immediately; if the upstream code attempts to access this\nshape information, it can trigger a segfault.\n\n`ShapeRefiner` is mitigating this for normal output shapes by cloning them\n(and thus putting the newly created shape under ownership of an inference\ncontext that will not die), but we were not doing the same for shapes and\ntypes.  This commit fixes that by doing similar logic on output shapes and\ntypes.\n\nPiperOrigin-RevId: 384761124\nChange-Id: I07c0c42d29dfbb55bfa13ec1f09ef825fb0a1a1d",
            "author":"Daniel Ellis",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 2, 'total': 21}",
            "files":"{'tensorflow\/core\/common_runtime\/shape_refiner.cc': {'additions': 19, 'deletions': 2, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ee119d4a498979525046fba1c3dd3f13a039fbb1\/tensorflow%2Fcore%2Fcommon_runtime%2Fshape_refiner.cc', 'patch': '@@ -120,9 +120,26 @@ Status ShapeRefiner::InferShapesForFunctionSubNode(\\n     TF_RETURN_IF_ERROR(outer_context->MakeShapeFromShapeProto(proto, &handle));\\n     outer_context->set_output(index, handle);\\n \\n-    auto* resource = node_context->input_handle_shapes_and_types(0);\\n+    const std::vector<ShapeAndType>* resource =\\n+        node_context->input_handle_shapes_and_types(0);\\n     if (resource) {\\n-      outer_context->set_output_handle_shapes_and_types(index, *resource);\\n+      \/\/ `ShapesAndType`s contain `ShapeHandle`s.  These `ShapeHandle`s point\\n+      \/\/ to `Shape`s that are owned by a different inference context too.  We\\n+      \/\/ need to copy them to the outer context to prevent them from being\\n+      \/\/ destroyed before they are used.\\n+      std::vector<ShapeAndType> copied_shapes_and_types;\\n+      for (auto& shape_and_type : *resource) {\\n+        ShapeHandle handle;\\n+        TensorShapeProto proto;\\n+        node_context->ShapeHandleToProto(shape_and_type.shape, &proto);\\n+        TF_RETURN_IF_ERROR(\\n+            outer_context->MakeShapeFromShapeProto(proto, &handle));\\n+        copied_shapes_and_types.push_back(\\n+            ShapeAndType(handle, shape_and_type.dtype, shape_and_type.type));\\n+      }\\n+\\n+      outer_context->set_output_handle_shapes_and_types(\\n+          index, copied_shapes_and_types);\\n     }\\n   }'}}",
            "message_norm":"fix segmentation fault in shape inference logic.\n\nwhen running shape functions, some functions (such as `mutablehashtableshape`)\nproduce extra output information in the form of a `shapeandtype` struct.  the\nshapes embedded in this struct are owned by an inference context that is\ncleaned up almost immediately; if the upstream code attempts to access this\nshape information, it can trigger a segfault.\n\n`shaperefiner` is mitigating this for normal output shapes by cloning them\n(and thus putting the newly created shape under ownership of an inference\ncontext that will not die), but we were not doing the same for shapes and\ntypes.  this commit fixes that by doing similar logic on output shapes and\ntypes.\n\npiperorigin-revid: 384761124\nchange-id: i07c0c42d29dfbb55bfa13ec1f09ef825fb0a1a1d",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('segmentation fault', 'SECWORD', ''), ('segfault', 'SECWORD', ''), ('mitigating', 'ACTION', ''), ('fixes', 'ACTION', ''), ('384761124', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/common_runtime\/shape_refiner.cc'])",
            "num_files":1.0
        },
        {
            "index":2602,
            "vuln_id":"GHSA-pm77-c4q7-3fwj",
            "cwe_id":"{'CWE-295'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/globalpayments\/php-sdk\/pull\/8\/commits\/c86e18f28c5eba0d6ede7d557756d978ea83d3c9'}",
            "dataset":"osv",
            "summary":"Improper Certificate Validation in Heartland & Global Payments PHP SDK Gateways\/Gateway.php in Heartland & Global Payments PHP SDK before 2.0.0 does not enforce SSL certificate validations.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/globalpayments\/php-sdk",
            "commit_href":"https:\/\/github.com\/globalpayments\/php-sdk\/pull\/8\/commits\/c86e18f28c5eba0d6ede7d557756d978ea83d3c9",
            "commit_sha":"c86e18f28c5eba0d6ede7d557756d978ea83d3c9",
            "patch":"SINGLE",
            "chain_ord":"['c86e18f28c5eba0d6ede7d557756d978ea83d3c9']",
            "before_first_fix_commit":"{'b860aca9b7ed1aeb5a13b5ef52120f5d15efd2f7'}",
            "last_fix_commit":"c86e18f28c5eba0d6ede7d557756d978ea83d3c9",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/26\/2019, 23:32:57",
            "message":"Remove unsecure CURLOPT_SSL_VERIFY* options\n\nVerification of peer certificate against trusted CAs and hostname verification should never be turned off otherwise MITM attacks are possible.",
            "author":"oldpec",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 2, 'total': 2}",
            "files":"{'src\/Gateways\/Gateway.php': {'additions': 0, 'deletions': 2, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/globalpayments\/php-sdk\/raw\/c86e18f28c5eba0d6ede7d557756d978ea83d3c9\/src%2FGateways%2FGateway.php', 'patch': '@@ -77,8 +77,6 @@ protected function sendRequest(\\n             curl_setopt($request, CURLOPT_CONNECTTIMEOUT, $this->timeout);\\n             curl_setopt($request, CURLOPT_TIMEOUT, $this->timeout);\\n             curl_setopt($request, CURLOPT_RETURNTRANSFER, true);\\n-            curl_setopt($request, CURLOPT_SSL_VERIFYPEER, false); \/\/true,);\\n-            curl_setopt($request, CURLOPT_SSL_VERIFYHOST, false); \/\/2,);\\n             curl_setopt($request, CURLOPT_CUSTOMREQUEST, strtoupper($verb));\\n             curl_setopt($request, CURLOPT_POSTFIELDS, $data);\\n             curl_setopt($request, CURLOPT_HTTPHEADER, $headers);'}}",
            "message_norm":"remove unsecure curlopt_ssl_verify* options\n\nverification of peer certificate against trusted cas and hostname verification should never be turned off otherwise mitm attacks are possible.",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('unsecure', 'SECWORD', ''), ('certificate', 'SECWORD', ''), ('hostname', 'SECWORD', ''), ('mitm', 'SECWORD', ''), ('attacks', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Gateways\/Gateway.php'])",
            "num_files":1.0
        },
        {
            "index":2543,
            "vuln_id":"GHSA-p9m8-27x8-rg87",
            "cwe_id":"{'CWE-94'}",
            "score":10.0,
            "chain":"{'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/cfd2880f80e62ea74b92fa83474c2aabdb9899da', 'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/d6707503ec2f20947f79e38f861dba93b39df9da'}",
            "dataset":"osv",
            "summary":"Critical vulnerability found in cron-utils ### Impact\nA Template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected.\n\n### Patches\nThe issue was patched and a new version was released. Please upgrade to version 9.1.6.\n\n### Workarounds\nThere are no known workarounds up to this moment.\n\n### References\nA description of the issue is provided in [issue 461](https:\/\/github.com\/jmrozanec\/cron-utils\/issues\/461)\n\n### For more information\nIf you have any questions or comments about this advisory:\n\nOpen an issue in the [cron-utils Github repository](https:\/\/github.com\/jmrozanec\/cron-utils)",
            "published_date":"2021-11-15",
            "chain_len":2,
            "project":"https:\/\/github.com\/jmrozanec\/cron-utils",
            "commit_href":"https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/d6707503ec2f20947f79e38f861dba93b39df9da",
            "commit_sha":"d6707503ec2f20947f79e38f861dba93b39df9da",
            "patch":"MULTI",
            "chain_ord":"['d6707503ec2f20947f79e38f861dba93b39df9da', 'cfd2880f80e62ea74b92fa83474c2aabdb9899da']",
            "before_first_fix_commit":"{'9c93c17b8107e58073443a045e22274467b88aae', 'd6707503ec2f20947f79e38f861dba93b39df9da'}",
            "last_fix_commit":"cfd2880f80e62ea74b92fa83474c2aabdb9899da",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/30\/2021, 13:11:58",
            "message":"Merge pull request #493 from pwntester\/patch-1\n\nPrevent arbitrary EL expression evaluation",
            "author":"jmrozanec",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/main\/java\/com\/cronutils\/validation\/CronValidator.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jmrozanec\/cron-utils\/raw\/d6707503ec2f20947f79e38f861dba93b39df9da\/src%2Fmain%2Fjava%2Fcom%2Fcronutils%2Fvalidation%2FCronValidator.java', 'patch': '@@ -30,7 +30,7 @@ public boolean isValid(String value, ConstraintValidatorContext context) {\\n             return true;\\n         } catch (IllegalArgumentException e) {\\n             context.disableDefaultConstraintViolation();\\n-            context.buildConstraintViolationWithTemplate(e.getMessage()).addConstraintViolation();\\n+            context.buildConstraintViolationWithTemplate(\"Error parsing the Cron expression\").addConstraintViolation();\\n             return false;\\n         }\\n     }'}}",
            "message_norm":"merge pull request #493 from pwntester\/patch-1\n\nprevent arbitrary el expression evaluation",
            "language":"en",
            "entities":"[('#493', 'ISSUE', ''), ('prevent', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/cronutils\/validation\/CronValidator.java'])",
            "num_files":1.0
        },
        {
            "index":2440,
            "vuln_id":"GHSA-mmhj-4w6j-76h7",
            "cwe_id":"{'CWE-913'}",
            "score":8.0,
            "chain":"{'https:\/\/github.com\/laverdet\/isolated-vm\/commit\/2646e6c1558bac66285daeab54c7d490ed332b15', 'https:\/\/github.com\/laverdet\/isolated-vm\/commit\/27151bfecc260e96714443613880e3b2e6596704'}",
            "dataset":"osv",
            "summary":"Misuse of `Reference` and other transferable APIs may lead to access to nodejs isolate Versions of `isolated-vm` before v4.0.0, and especially before v3.0.0, have API pitfalls which may make it easy for implementers to expose supposed secure isolates to the permissions of the main nodejs isolate.\n\n`Reference` objects allow access to the underlying reference's full prototype chain. In an environment where the implementer has exposed a `Reference` instance to an attacker they would be able to use it to acquire a `Reference` to the nodejs context's `Function` object.\n\nSimilar application-specific attacks could be possible by modifying the local prototype of other API objects.\n\nAccess to `NativeModule` objects could allow an attacker to load and run native code from anywhere on the filesystem. If combined with, for example, a file upload API this would allow for arbitrary code execution.\n\nTo address these issues the following changes were made in v4.0.0:\n- Documentation was updated with more explicit guidelines on building secure applications.\n- `Reference` instances will no longer follow prototype chains by default, nor will they invoke accessors or proxies.\n- All `isolated-vm` API prototypes are now immutable.\n- `NativeModule` constructor may only be invoked from a nodejs isolate.",
            "published_date":"2021-04-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/laverdet\/isolated-vm",
            "commit_href":"https:\/\/github.com\/laverdet\/isolated-vm\/commit\/27151bfecc260e96714443613880e3b2e6596704",
            "commit_sha":"27151bfecc260e96714443613880e3b2e6596704",
            "patch":"MULTI",
            "chain_ord":"['27151bfecc260e96714443613880e3b2e6596704', '2646e6c1558bac66285daeab54c7d490ed332b15']",
            "before_first_fix_commit":"{'3a2408a2b42ac51c64a6c10f9388a6f7cc311156'}",
            "last_fix_commit":"2646e6c1558bac66285daeab54c7d490ed332b15",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/18\/2021, 20:20:24",
            "message":"Disallow NativeModule creation unless main isolate",
            "author":"Marcel Laverdet",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/module\/native_module_handle.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/laverdet\/isolated-vm\/raw\/27151bfecc260e96714443613880e3b2e6596704\/src%2Fmodule%2Fnative_module_handle.cc', 'patch': '@@ -15,6 +15,9 @@ namespace ivm {\\n  * RAII wrapper around libuv dlopen\\n  *\/\\n NativeModule::NativeModule(const std::string& filename) : init(nullptr) {\\n+\\tif (!IsolateEnvironment::GetCurrent()->IsDefault()) {\\n+\\t\\tthrow RuntimeGenericError(\"NativeModule may only be instantiated from default nodejs isolate\");\\n+\\t}\\n \\tif (uv_dlopen(filename.c_str(), &lib) != 0) {\\n \\t\\tthrow RuntimeGenericError(\"Failed to load module\");\\n \\t}'}}",
            "message_norm":"disallow nativemodule creation unless main isolate",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/module\/native_module_handle.cc'])",
            "num_files":1.0
        },
        {
            "index":1386,
            "vuln_id":"GHSA-9hx2-hgq2-2g4f",
            "cwe_id":"{'CWE-400'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/python-pillow\/Pillow\/commit\/6207b44ab1ff4a91d8ddc7579619876d0bb191a4', 'https:\/\/github.com\/python-pillow\/Pillow\/commit\/3bce145966374dd39ce58a6fc0083f8d1890719c'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDoS) in Pillow An issue was discovered in Pillow before 8.1.1. The PDF parser allows a regular expression DoS (ReDoS) attack via a crafted PDF file because of a catastrophic backtracking regex.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/python-pillow\/Pillow",
            "commit_href":"https:\/\/github.com\/python-pillow\/Pillow\/commit\/3bce145966374dd39ce58a6fc0083f8d1890719c",
            "commit_sha":"3bce145966374dd39ce58a6fc0083f8d1890719c",
            "patch":"MULTI",
            "chain_ord":"['6207b44ab1ff4a91d8ddc7579619876d0bb191a4', '3bce145966374dd39ce58a6fc0083f8d1890719c']",
            "before_first_fix_commit":"{'cbdce6c5d054fccaf4af34b47f212355c64ace7a'}",
            "last_fix_commit":"3bce145966374dd39ce58a6fc0083f8d1890719c",
            "chain_ord_pos":2.0,
            "commit_datetime":"01\/09\/2021, 13:53:09",
            "message":"Use more specific regex chars to prevent ReDoS\n\n* CVE-2021-25292",
            "author":"Hugo van Kemenade",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'src\/PIL\/PdfParser.py': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/python-pillow\/Pillow\/raw\/3bce145966374dd39ce58a6fc0083f8d1890719c\/src%2FPIL%2FPdfParser.py', 'patch': '@@ -580,8 +580,9 @@ def next_object_id(self, offset=None):\\n     whitespace_or_hex = br\"[\\\\000\\\\011\\\\012\\\\014\\\\015\\\\0400-9a-fA-F]\"\\n     whitespace_optional = whitespace + b\"*\"\\n     whitespace_mandatory = whitespace + b\"+\"\\n+    whitespace_optional_no_nl = br\"[\\\\000\\\\011\\\\014\\\\015\\\\040]*\"  # no \"\\\\012\" aka \"\\\\n\"\\n     newline_only = br\"[\\\\r\\\\n]+\"\\n-    newline = whitespace_optional + newline_only + whitespace_optional\\n+    newline = whitespace_optional_no_nl + newline_only + whitespace_optional_no_nl\\n     re_trailer_end = re.compile(\\n         whitespace_mandatory\\n         + br\"trailer\"'}}",
            "message_norm":"use more specific regex chars to prevent redos\n\n* cve-2021-25292",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('redos', 'SECWORD', ''), ('cve-2021-25292', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/PIL\/PdfParser.py'])",
            "num_files":1.0
        },
        {
            "index":3080,
            "vuln_id":"GHSA-v89p-5hr2-4rh4",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/6b1250b6ffea7006226dd937e52cf5b353fcfc15', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-1131, CVE-2019-1139, CVE-2019-1140, CVE-2019-1141, CVE-2019-1195, CVE-2019-1196.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb",
            "commit_sha":"bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb",
            "patch":"MULTI",
            "chain_ord":"['bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb', '6b1250b6ffea7006226dd937e52cf5b353fcfc15']",
            "before_first_fix_commit":"{'75162b7f2d8ac2b37d17564e9c979ba1bae707e8', '450a349fda1b153d758a9e01698b977e60870e4c'}",
            "last_fix_commit":"6b1250b6ffea7006226dd937e52cf5b353fcfc15",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/02\/2019, 19:08:32",
            "message":"[CVE-2019-1197] Chakra JIT Type Confusion",
            "author":"Michael Holman",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 4, 'total': 15}",
            "files":"{'lib\/Backend\/GlobOptIntBounds.cpp': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/bf52b6cfa96d6395046d0aaf87396cd7ca13f6cb\/lib%2FBackend%2FGlobOptIntBounds.cpp', 'patch': '@@ -1278,13 +1278,20 @@ GlobOpt::InvalidateInductionVariables(IR::Instr * instr)\\n     }\\n \\n     \/\/ If this is an induction variable, then treat it the way the prepass would have if it had seen\\n-    \/\/ the assignment and the resulting change to the value number, and mark it as indeterminate.\\n+    \/\/ the assignment and the resulting change to the value number, and mark induction variables\\n+    \/\/ for the loop as indeterminate.\\n+    \/\/ We need to invalidate all induction variables for the loop, because we might have used the\\n+    \/\/ invalidated induction variable to calculate the loopCount, and this now invalid loopCount\\n+    \/\/ also impacts bound checks for secondary induction variables\\n     for (Loop * loop = this->currentBlock->loop; loop; loop = loop->parent)\\n     {\\n-        InductionVariable *iv = nullptr;\\n-        if (loop->inductionVariables && loop->inductionVariables->TryGetReference(dstSym->m_id, &iv))\\n+        if (loop->inductionVariables && loop->inductionVariables->ContainsKey(dstSym->m_id))\\n         {\\n-            iv->SetChangeIsIndeterminate();\\n+            for (auto it = loop->inductionVariables->GetIterator(); it.IsValid(); it.MoveNext())\\n+            {\\n+                InductionVariable& inductionVariable = it.CurrentValueReference();\\n+                inductionVariable.SetChangeIsIndeterminate();\\n+            }\\n         }\\n     }\\n }'}}",
            "message_norm":"[cve-2019-1197] chakra jit type confusion",
            "language":"en",
            "entities":"[('cve-2019-1197', 'VULNID', 'CVE'), ('type confusion', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Backend\/GlobOptIntBounds.cpp'])",
            "num_files":1.0
        },
        {
            "index":1285,
            "vuln_id":"GHSA-8xqr-4cpm-wx7g",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/tanem\/react-svg\/pull\/57\/commits\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in react-svg Versions of `react-svg` before 2.2.18 are vulnerable to cross-site scripting (xss). This is due to the fact that scripts found in SVG files are run by default.\n\n\n## Recommendation\n\nUpdate to version 2.2.18 or later.",
            "published_date":"2019-05-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/tanem\/react-svg",
            "commit_href":"https:\/\/github.com\/tanem\/react-svg\/pull\/57\/commits\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb",
            "commit_sha":"ec7de5d678f53a085cee1348cb1aa069c9fc42fb",
            "patch":"SINGLE",
            "chain_ord":"['ec7de5d678f53a085cee1348cb1aa069c9fc42fb']",
            "before_first_fix_commit":"{'9fa13da92cc4c44a10b6e2aced023d3199e8c6bb'}",
            "last_fix_commit":"ec7de5d678f53a085cee1348cb1aa069c9fc42fb",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/21\/2018, 18:37:51",
            "message":"Changed default evalScripts prop to match documentation.",
            "author":"Ron Perris",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tanem\/react-svg\/raw\/ec7de5d678f53a085cee1348cb1aa069c9fc42fb\/src%2Findex.js', 'patch': \"@@ -10,7 +10,7 @@ export default class ReactSVG extends React.Component {\\n   static defaultProps = {\\n     callback: () => {},\\n     className: null,\\n-    evalScripts: 'once',\\n+    evalScripts: 'never',\\n     style: {},\\n     wrapperClassName: null\\n   }\"}}",
            "message_norm":"changed default evalscripts prop to match documentation.",
            "language":"en",
            "entities":"[('changed', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/index.js'])",
            "num_files":1.0
        },
        {
            "index":1746,
            "vuln_id":"GHSA-fm67-cv37-96ff",
            "cwe_id":"{'CWE-415'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/ultrajson\/ultrajson\/commit\/9c20de0f77b391093967e25d01fb48671104b15b'}",
            "dataset":"osv",
            "summary":"Potential double free of buffer during string decoding ### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nWhen an error occurs while reallocating the buffer for string decoding, the buffer gets freed twice.\n\nDue to how UltraJSON uses the internal decoder, this double free is impossible to trigger from Python.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nUsers should upgrade to UltraJSON 5.4.0.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nThere is no workaround.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [UltraJSON](http:\/\/github.com\/ultrajson\/ultrajson\/issues)",
            "published_date":"2022-07-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/ultrajson\/ultrajson",
            "commit_href":"https:\/\/github.com\/ultrajson\/ultrajson\/commit\/9c20de0f77b391093967e25d01fb48671104b15b",
            "commit_sha":"9c20de0f77b391093967e25d01fb48671104b15b",
            "patch":"SINGLE",
            "chain_ord":"['9c20de0f77b391093967e25d01fb48671104b15b']",
            "before_first_fix_commit":"{'b21da40ead640b6153783dad506e68b4024056ef', '67ec07183342589d602e0fcf7bb1ff3e19272687'}",
            "last_fix_commit":"9c20de0f77b391093967e25d01fb48671104b15b",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/02\/2022, 05:11:59",
            "message":"Merge pull request from GHSA-fm67-cv37-96ff\n\nFix double free on string decoding if realloc fails",
            "author":"Hugo van Kemenade",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/ultrajsondec.c': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ultrajson\/ultrajson\/raw\/9c20de0f77b391093967e25d01fb48671104b15b\/lib%2Fultrajsondec.c', 'patch': '@@ -384,7 +384,7 @@ static FASTCALL_ATTR JSOBJ FASTCALL_MSVC decode_string ( struct DecoderState *ds\\n       escStart = (JSUINT32 *)ds->dec->realloc(ds->escStart, newSize * sizeof(JSUINT32));\\n       if (!escStart)\\n       {\\n-        ds->dec->free(ds->escStart);\\n+        \/\/ Don\\'t free ds->escStart here; it gets handled in JSON_DecodeObject.\\n         return SetError(ds, -1, \"Could not reserve memory block\");\\n       }\\n       ds->escStart = escStart;'}}",
            "message_norm":"merge pull request from ghsa-fm67-cv37-96ff\n\nfix double free on string decoding if realloc fails",
            "language":"en",
            "entities":"[('ghsa-fm67-cv37-96ff', 'VULNID', 'GHSA'), ('double free', 'SECWORD', ''), ('decoding', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/ultrajsondec.c'])",
            "num_files":1.0
        },
        {
            "index":1429,
            "vuln_id":"GHSA-9rpc-5v9q-5r7f",
            "cwe_id":"{'CWE-665', 'CWE-20'}",
            "score":3.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6'}",
            "dataset":"osv",
            "summary":"Incomplete validation in `SparseReshape` ### Impact\nIncomplete validation in `SparseReshape` results in a denial of service based on a `CHECK`-failure.\n\n```python\nimport tensorflow as tf\n\ninput_indices = tf.constant(41, shape=[1, 1], dtype=tf.int64)\ninput_shape = tf.zeros([11], dtype=tf.int64)\nnew_shape = tf.zeros([1], dtype=tf.int64)\n\ntf.raw_ops.SparseReshape(input_indices=input_indices,\n    input_shape=input_shape,\n    new_shape=new_shape)\n``` \n    \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e87b51ce05c3eb172065a6ea5f48415854223285\/tensorflow\/core\/kernels\/sparse_reshape_op.cc#L40) has no validation that the input arguments specify a valid sparse tensor.\n\n### Patches \nWe have patched the issue in GitHub commit [1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 and TensorFlow 2.3.3, as these are the only affected versions.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6",
            "commit_sha":"1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6",
            "patch":"SINGLE",
            "chain_ord":"['1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6']",
            "before_first_fix_commit":"{'8d78df9997a8537a2f389adc2cfdc36e71da0665'}",
            "last_fix_commit":"1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2021, 22:30:30",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseReshape`.\n\nPiperOrigin-RevId: 371218558\nChange-Id: I6a6dc5bf15b50a1d05bdd95e9ba347cb39f40f45",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'tensorflow\/core\/kernels\/sparse_reshape_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1d04d7d93f4ed3854abf75d6b712d72c3f70d6b6\/tensorflow%2Fcore%2Fkernels%2Fsparse_reshape_op.cc', 'patch': '@@ -26,6 +26,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/types.h\"\\n #include \"tensorflow\/core\/kernels\/reshape_util.h\"\\n #include \"tensorflow\/core\/lib\/gtl\/inlined_vector.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n \\n namespace tensorflow {\\n \\n@@ -38,6 +39,17 @@ class SparseReshapeOp : public OpKernel {\\n   explicit SparseReshapeOp(OpKernelConstruction* context) : OpKernel(context) {}\\n \\n   void Compute(OpKernelContext* context) override {\\n+    const Tensor& input_indices_in = context->input(0);\\n+    const Tensor& input_shape_in = context->input(1);\\n+\\n+    OP_REQUIRES(context, TensorShapeUtils::IsMatrix(input_indices_in.shape()),\\n+                errors::InvalidArgument(\"Input must be a matrix.\"));\\n+    OP_REQUIRES(context, TensorShapeUtils::IsVector(input_shape_in.shape()),\\n+                errors::InvalidArgument(\"Input shape must be a vector.\"));\\n+    OP_REQUIRES(context,\\n+                input_indices_in.dim_size(1) == input_shape_in.dim_size(0),\\n+                errors::InvalidArgument(\\n+                    \"Input tensor rank must match input shape length.\"));\\n     ReshapeSparseTensor<Device>(context, context->input(0), context->input(1),\\n                                 context->input(2), 0 \/* output indices index *\/,\\n                                 1 \/* output shape index *\/);'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsereshape`.\n\npiperorigin-revid: 371218558\nchange-id: i6a6dc5bf15b50a1d05bdd95e9ba347cb39f40f45",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371218558', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_reshape_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1362,
            "vuln_id":"GHSA-9cx9-x2gp-9qvh",
            "cwe_id":"{'CWE-74', 'CWE-93'}",
            "score":4.2,
            "chain":"{'https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f'}",
            "dataset":"osv",
            "summary":"CRLF vulnerability in Fiber ### Impact\nThe filename that is given in [c.Attachment()](https:\/\/docs.gofiber.io\/ctx#attachment) is not escaped, and therefore vulnerable for a CRLF injection attack. I.e. an attacker could upload a custom filename and then give the link to the victim. With this filename, the attacker can change the name of the downloaded file, redirect to another site, change the authorization header, etc.\n\n### Steps to reproduce\n```go\npackage main\n\nimport \"github.com\/gofiber\/fiber\"\n\nconst badFileName = \"another secret document.pdf\\\"\\r\\nLocation: google.com\\r\\nAuthorization: \\\"example_of_session_fixation\"\n\nfunc splitTheResponse(c *fiber.Ctx) {\n\tc.Attachment(badFileName)\n}\n\nfunc main() {\n\tapp := fiber.New()\n\tapp.Get(\"\/attack\", splitTheResponse)\n\tapp.Listen(\"127.0.0.1:8080\")\n}\n```\n```\nHTTP\/1.1 200 OK\nDate: Fri, 10 Jul 2020 19:47:04 GMT\nContent-Type: application\/octet-stream\nContent-Length: 0\nContent-Disposition: attachment; filename=\"another secret document.pdf\"\nLocation: google.com\nAuthorization: \"example_of_session_fixation\"\n```\n\n### Patches\nThis issue has been patched in `v1.12.6` with commit [579](https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f) escaping the filename by default.\n\n### Workarounds\nYou could of course serialize the input yourself before passing it to `ctx.Attachment()`, this is actually a good practice by default. But in case you forget, we got you covered \ud83d\udc4d \n\n### References\nA CRLF injection attack is one of several types of injection attacks. It can be used to escalate to more malicious attacks such as Cross-site Scripting (XSS), page injection, web cache poisoning, cache-based defacement, and more. A CRLF injection vulnerability exists if an attacker can inject the CRLF characters into a web application, for example using a user input form or an HTTP request, [see acunetix](https:\/\/www.acunetix.com\/websitesecurity\/crlf-injection\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [gofiber\/fiber](https:\/\/github.com\/gofiber\/fiber)\n* Join us on [Discord](https:\/\/gofiber.io\/discord)",
            "published_date":"2021-06-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/gofiber\/fiber",
            "commit_href":"https:\/\/github.com\/gofiber\/fiber\/pull\/579\/commits\/f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "commit_sha":"f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "patch":"SINGLE",
            "chain_ord":"['f698b5d5066cfe594102ae252cd58a1fe57cf56f']",
            "before_first_fix_commit":"{'fc5d2d7e6690ba74ad01ba0cd80e853ad451d153'}",
            "last_fix_commit":"f698b5d5066cfe594102ae252cd58a1fe57cf56f",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2020, 20:25:10",
            "message":"\ud83d\udc1b Escape fname",
            "author":"Fenny",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'ctx.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gofiber\/fiber\/raw\/f698b5d5066cfe594102ae252cd58a1fe57cf56f\/ctx.go', 'patch': '@@ -196,7 +196,7 @@ func (ctx *Ctx) Attachment(filename ...string) {\\n \\tif len(filename) > 0 {\\n \\t\\tfname := filepath.Base(filename[0])\\n \\t\\tctx.Type(filepath.Ext(fname))\\n-\\t\\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+fname+`\"`)\\n+\\t\\tctx.Set(HeaderContentDisposition, `attachment; filename=\"`+url.QueryEscape(fname)+`\"`)\\n \\t\\treturn\\n \\t}\\n \\tctx.Set(HeaderContentDisposition, \"attachment\")'}}",
            "message_norm":"\ud83d\udc1b escape fname",
            "language":"es",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ctx.go'])",
            "num_files":1.0
        },
        {
            "index":1547,
            "vuln_id":"GHSA-cfx7-2xpc-8w4h",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2c74674348a4708ced58ad6eb1b23354df8ee044'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `BatchToSpaceNd` ### Impact\nThe implementation of the `BatchToSpaceNd` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/b5ed552fe55895aee8bd8b191f744a069957d18d\/tensorflow\/lite\/kernels\/batch_to_space_nd.cc#L81-L82):\n\n```cc\nTF_LITE_ENSURE_EQ(context, output_batch_size % block_shape[dim], 0);\noutput_batch_size = output_batch_size \/ block_shape[dim];\n```\n\nAn attacker can craft a model such that one dimension of the `block` input is 0. Hence, the corresponding value in `block_shape` is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [2c74674348a4708ced58ad6eb1b23354df8ee044](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2c74674348a4708ced58ad6eb1b23354df8ee044).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2c74674348a4708ced58ad6eb1b23354df8ee044",
            "commit_sha":"2c74674348a4708ced58ad6eb1b23354df8ee044",
            "patch":"SINGLE",
            "chain_ord":"['2c74674348a4708ced58ad6eb1b23354df8ee044']",
            "before_first_fix_commit":"{'b5ed552fe55895aee8bd8b191f744a069957d18d'}",
            "last_fix_commit":"2c74674348a4708ced58ad6eb1b23354df8ee044",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 20:57:37",
            "message":"Prevent division by 0\n\nPiperOrigin-RevId: 370979352\nChange-Id: Ic79191c316d986fc6072ecaebfec9d5f2b924d00",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/batch_to_space_nd.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2c74674348a4708ced58ad6eb1b23354df8ee044\/tensorflow%2Flite%2Fkernels%2Fbatch_to_space_nd.cc', 'patch': '@@ -78,6 +78,7 @@ TfLiteStatus ResizeOutputTensor(TfLiteContext* context,\\n   int output_batch_size = input_size->data[0];\\n   for (int dim = 0; dim < spatial_dims_num; ++dim) {\\n     \/\/ Number of batch must be multiple of (block_shape[dim]).\\n+    TF_LITE_ENSURE(context, block_shape[dim] != 0);\\n     TF_LITE_ENSURE_EQ(context, output_batch_size % block_shape[dim], 0);\\n     output_batch_size = output_batch_size \/ block_shape[dim];\\n     output_size->data[dim + 1] = input_size->data[dim + 1] * block_shape[dim] -'}}",
            "message_norm":"prevent division by 0\n\npiperorigin-revid: 370979352\nchange-id: ic79191c316d986fc6072ecaebfec9d5f2b924d00",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370979352', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/batch_to_space_nd.cc'])",
            "num_files":1.0
        },
        {
            "index":2214,
            "vuln_id":"GHSA-j86v-p27c-73fm",
            "cwe_id":"{'CWE-824'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6'}",
            "dataset":"osv",
            "summary":"Unitialized access in `EinsumHelper::ParseEquation` ### Impact\nDuring execution, [`EinsumHelper::ParseEquation()`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e0b6e58c328059829c3eb968136f17aa72b6c876\/tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h#L126-L181) is supposed to set the flags in `input_has_ellipsis` vector and `*output_has_ellipsis` boolean to indicate whether there is ellipsis in the corresponding inputs and output.\n\nHowever, the code only changes these flags to `true` and never assigns `false`.\n\n```cc\nfor (int i = 0; i < num_inputs; ++i) {\n  input_label_counts->at(i).resize(num_labels);\n  for (const int label : input_labels->at(i)) {\n    if (label != kEllipsisLabel)\n      input_label_counts->at(i)[label] += 1;\n    else\n      input_has_ellipsis->at(i) = true;\n  }\n}\noutput_label_counts->resize(num_labels);\nfor (const int label : *output_labels) {\n  if (label != kEllipsisLabel)\n    output_label_counts->at(label) += 1;\n  else\n    *output_has_ellipsis = true;\n}\n```\n\nThis results in unitialized variable access if callers assume that `EinsumHelper::ParseEquation()` always sets these flags.\n\n\n### Patches\nWe have patched the issue in GitHub commit [f09caa532b6e1ac8d2aa61b7832c78c5b79300c6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
            "commit_sha":"f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
            "patch":"SINGLE",
            "chain_ord":"['f09caa532b6e1ac8d2aa61b7832c78c5b79300c6']",
            "before_first_fix_commit":"{'a81f78d35ecabae6ba61c1a65279bcb5ff9c7d95'}",
            "last_fix_commit":"f09caa532b6e1ac8d2aa61b7832c78c5b79300c6",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/19\/2021, 16:05:04",
            "message":"Fix EinsumHelper::ParseEquation to avoid uninitialized accesses.\n\nEinsumHelper::ParseEquation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. Previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. This\nchange initializes the two variables with false to fix the problem.\nPiperOrigin-RevId: 391772004\nChange-Id: I17b6c88aadef4131470378e48cced054bf252e86",
            "author":"Bixia Zheng",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f09caa532b6e1ac8d2aa61b7832c78c5b79300c6\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Feinsum_op_impl.h', 'patch': '@@ -153,6 +153,7 @@ struct EinsumHelper {\\n     input_has_ellipsis->resize(num_inputs);\\n     for (int i = 0; i < num_inputs; ++i) {\\n       input_label_counts->at(i).resize(num_labels);\\n+      input_has_ellipsis->at(i) = false;\\n       for (const int label : input_labels->at(i)) {\\n         if (label != kEllipsisLabel)\\n           input_label_counts->at(i)[label] += 1;\\n@@ -161,6 +162,7 @@ struct EinsumHelper {\\n       }\\n     }\\n     output_label_counts->resize(num_labels);\\n+    *output_has_ellipsis = false;\\n     for (const int label : *output_labels) {\\n       if (label != kEllipsisLabel)\\n         output_label_counts->at(label) += 1;'}}",
            "message_norm":"fix einsumhelper::parseequation to avoid uninitialized accesses.\n\neinsumhelper::parseequation is supposed to return true or false in\ninput_has_ellipsis and output_has_ellipsis to indicate whether there is\nellipsis in the inputs and output. previously, when there is no ellipsis in the\ninputs or output, the routine doesn't assign false to the variables. this\nchange initializes the two variables with false to fix the problem.\npiperorigin-revid: 391772004\nchange-id: i17b6c88aadef4131470378e48cced054bf252e86",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('uninitialized', 'SECWORD', ''), ('initializes', 'SECWORD', ''), ('fix', 'ACTION', ''), ('problem', 'FLAW', ''), ('391772004', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/einsum_op_impl.h'])",
            "num_files":1.0
        },
        {
            "index":30,
            "vuln_id":"GHSA-2598-2f59-rmhq",
            "cwe_id":"{'CWE-89'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/sequelize\/sequelize\/commit\/ee4017379db0059566ecb5424274ad4e2d66bc68'}",
            "dataset":"osv",
            "summary":"SQL Injection in sequelize Versions of `sequelize` prior to 3.35.1 are vulnerable to SQL Injection. The package fails to sanitize JSON path keys in the Postgres dialect,  which may allow attackers to inject SQL statements and execute arbitrary SQL queries.\n\n\n## Recommendation\n\nUpgrade to version 3.35.1 or later.",
            "published_date":"2019-11-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/sequelize\/sequelize",
            "commit_href":"https:\/\/github.com\/sequelize\/sequelize\/commit\/ee4017379db0059566ecb5424274ad4e2d66bc68",
            "commit_sha":"ee4017379db0059566ecb5424274ad4e2d66bc68",
            "patch":"SINGLE",
            "chain_ord":"['ee4017379db0059566ecb5424274ad4e2d66bc68']",
            "before_first_fix_commit":"{'75c1fdbc676d73a28a5e0bca49b2a6d4a9f8708c'}",
            "last_fix_commit":"ee4017379db0059566ecb5424274ad4e2d66bc68",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/20\/2019, 05:26:22",
            "message":"fix(postgres): json path key quoting (#11088)",
            "author":"Sushant",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'lib\/dialects\/abstract\/query-generator.js': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sequelize\/sequelize\/raw\/ee4017379db0059566ecb5424274ad4e2d66bc68\/lib%2Fdialects%2Fabstract%2Fquery-generator.js', 'patch': \"@@ -2198,7 +2198,8 @@ var QueryGenerator = {\\n             path[path.length - 1] = $tmp[0];\\n           }\\n \\n-          $baseKey = self.quoteIdentifier(key)+'#>>\\\\'{'+path.join(', ')+'}\\\\'';\\n+          var pathKey = self.escape('{' + path.join(', ') + '}');\\n+          $baseKey = self.quoteIdentifier(key)+'#>>'+pathKey;\\n \\n           if (options.prefix) {\\n             if (options.prefix instanceof Utils.literal) {\"}}",
            "message_norm":"fix(postgres): json path key quoting (#11088)",
            "language":"en",
            "entities":"[('fix(postgres', 'ACTION', ''), ('key', 'SECWORD', ''), ('#11088', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/dialects\/abstract\/query-generator.js'])",
            "num_files":1.0
        },
        {
            "index":3452,
            "vuln_id":"GHSA-xjrf-8x4f-43h4",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/9982b4c01a8c7be0961e58b58ed83731c40449ff', 'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/7a7df6637478607bef0277bf52a4e0a03e20a248', 'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/f5c9fe69a444607af667911bd4c5074b5b073e7b'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Input During Web Page Generation in Spring Framework The JavaScriptUtils.javaScriptEscape method in web\/util\/JavaScriptUtils.java in Spring MVC in Spring Framework before 3.2.2 does not properly escape certain characters, which allows remote attackers to conduct cross-site scripting (XSS) attacks via a (1) line separator or (2) paragraph separator Unicode character or (3) left or (4) right angle bracket.",
            "published_date":"2022-05-05",
            "chain_len":3,
            "project":"https:\/\/github.com\/spring-projects\/spring-framework",
            "commit_href":"https:\/\/github.com\/spring-projects\/spring-framework\/commit\/9982b4c01a8c7be0961e58b58ed83731c40449ff",
            "commit_sha":"9982b4c01a8c7be0961e58b58ed83731c40449ff",
            "patch":"MULTI",
            "chain_ord":"['9982b4c01a8c7be0961e58b58ed83731c40449ff', 'f5c9fe69a444607af667911bd4c5074b5b073e7b', '7a7df6637478607bef0277bf52a4e0a03e20a248']",
            "before_first_fix_commit":"{'63bff1f068f0c749f938abacba1d38b7d0ca3cf9'}",
            "last_fix_commit":"7a7df6637478607bef0277bf52a4e0a03e20a248",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/23\/2013, 18:35:14",
            "message":"Add BS and VT char escape sequences to JavaScriptUtils\n\nIssue: SPR-9983",
            "author":"Rossen Stoyanchev",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 7, 'total': 21}",
            "files":"{'spring-web\/src\/main\/java\/org\/springframework\/web\/util\/JavaScriptUtils.java': {'additions': 14, 'deletions': 7, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spring-projects\/spring-framework\/raw\/9982b4c01a8c7be0961e58b58ed83731c40449ff\/spring-web%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fweb%2Futil%2FJavaScriptUtils.java', 'patch': '@@ -1,5 +1,5 @@\\n \/*\\n- * Copyright 2002-2008 the original author or authors.\\n+ * Copyright 2002-2013 the original author or authors.\\n  *\\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\\n  * you may not use this file except in compliance with the License.\\n@@ -21,21 +21,21 @@\\n  * Escapes based on the JavaScript 1.5 recommendation.\\n  *\\n  * <p>Reference:\\n- * <a href=\"http:\/\/developer.mozilla.org\/en\/docs\/Core_JavaScript_1.5_Guide:Literals#String_Literals\">\\n- * Core JavaScript 1.5 Guide\\n- * <\/a>\\n+ * <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/JavaScript\/Guide\/Values,_variables,_and_literals#String_literals\">\\n+ * JavaScript Guide<\/a> on Mozilla Developer Network.\\n  *\\n  * @author Juergen Hoeller\\n  * @author Rob Harrop\\n+ * @author Rossen Stoyanchev\\n  * @since 1.1.1\\n  *\/\\n public class JavaScriptUtils {\\n \\n \\t\/**\\n-\\t * Turn special characters into escaped characters conforming to JavaScript.\\n-\\t * Handles complete character set defined in HTML 4.01 recommendation.\\n+\\t * Turn JavaScript special characters into escaped characters.\\n+\\t *\\n \\t * @param input the input string\\n-\\t * @return the escaped string\\n+\\t * @return the string with escaped characters\\n \\t *\/\\n \\tpublic static String javaScriptEscape(String input) {\\n \\t\\tif (input == null) {\\n@@ -73,6 +73,13 @@ else if (c == \\'\\\\r\\') {\\n \\t\\t\\telse if (c == \\'\\\\f\\') {\\n \\t\\t\\t\\tfiltered.append(\"\\\\\\\\f\");\\n \\t\\t\\t}\\n+\\t\\t\\telse if (c == \\'\\\\b\\') {\\n+\\t\\t\\t\\tfiltered.append(\"\\\\\\\\b\");\\n+\\t\\t\\t}\\n+\\t\\t\\t\/\/ No \\'\\\\v\\' in Java, use octal value for VT ascii char\\n+\\t\\t\\telse if (c == \\'\\\\013\\') {\\n+\\t\\t\\t\\tfiltered.append(\"\\\\\\\\v\");\\n+\\t\\t\\t}\\n \\t\\t\\telse {\\n \\t\\t\\t\\tfiltered.append(c);\\n \\t\\t\\t}'}}",
            "message_norm":"add bs and vt char escape sequences to javascriptutils\n\nissue: spr-9983",
            "language":"ca",
            "entities":"[('add', 'ACTION', ''), ('escape', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['spring-web\/src\/main\/java\/org\/springframework\/web\/util\/JavaScriptUtils.java'])",
            "num_files":1.0
        },
        {
            "index":952,
            "vuln_id":"GHSA-74cr-77xc-8g6r",
            "cwe_id":"{'CWE-400', 'CWE-1321'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/apollographql\/apollo-server\/commit\/cea7397582a293af6a5f60947da34b95e669c6c1'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in @apollo\/gateway Versions of `@apollo\/gateway` prior to 0.6.2 are vulnerable to Prototype Pollution. The package uses deepMerge() to merge objects, which may allow attackers to alter the Object prototype through queries with GraphQL aliases. Carefully constructed payloads can override properties of all objects in the application. This may lead to Denial of Service or may be chained with other vulnerabilities leading to Remote Code Execution.\n\n\n## Recommendation\n\nUpgrade to version 0.6.2 or later.",
            "published_date":"2019-06-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/apollographql\/apollo-server",
            "commit_href":"https:\/\/github.com\/apollographql\/apollo-server\/commit\/cea7397582a293af6a5f60947da34b95e669c6c1",
            "commit_sha":"cea7397582a293af6a5f60947da34b95e669c6c1",
            "patch":"SINGLE",
            "chain_ord":"['cea7397582a293af6a5f60947da34b95e669c6c1']",
            "before_first_fix_commit":"{'116e1b46ae8a58d5b77038d66588f208eb9b6e2a'}",
            "last_fix_commit":"cea7397582a293af6a5f60947da34b95e669c6c1",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/04\/2019, 22:58:07",
            "message":"Ignore __proto__ fields in deepMerge",
            "author":"Trevor Scheer",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'packages\/apollo-gateway\/src\/utilities\/deepMerge.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apollographql\/apollo-server\/raw\/cea7397582a293af6a5f60947da34b95e669c6c1\/packages%2Fapollo-gateway%2Fsrc%2Futilities%2FdeepMerge.ts', 'patch': \"@@ -4,7 +4,7 @@ export function deepMerge(target: any, source: any): any {\\n   if (source === undefined || source === null) return target;\\n \\n   for (const key of Object.keys(source)) {\\n-    if (source[key] === undefined) continue;\\n+    if (source[key] === undefined || key === '__proto__') continue;\\n \\n     if (target[key] && isObject(source[key])) {\\n       deepMerge(target[key], source[key]);\"}}",
            "message_norm":"ignore __proto__ fields in deepmerge",
            "language":"nl",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/apollo-gateway\/src\/utilities\/deepMerge.ts'])",
            "num_files":1.0
        },
        {
            "index":2795,
            "vuln_id":"GHSA-qpv2-jxc7-3638",
            "cwe_id":"{'CWE-200'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/05c0819776b07425b2831cd31a8a0f4e7ac30c09'}",
            "dataset":"osv",
            "summary":"Exposure of Sensitive Information in snipe\/snipe-it Snipe-IT prior to v5.3.10 is vulnerable to Exposure of Sensitive Information to an Unauthorized Actor.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/05c0819776b07425b2831cd31a8a0f4e7ac30c09",
            "commit_sha":"05c0819776b07425b2831cd31a8a0f4e7ac30c09",
            "patch":"SINGLE",
            "chain_ord":"['05c0819776b07425b2831cd31a8a0f4e7ac30c09']",
            "before_first_fix_commit":"{'16f963fa3d7c4875e9bccf6926629efe3530d00e'}",
            "last_fix_commit":"05c0819776b07425b2831cd31a8a0f4e7ac30c09",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/11\/2022, 23:55:42",
            "message":"Updated language string\n\nSigned-off-by: snipe <snipe@snipe.net>",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'resources\/lang\/en\/passwords.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/05c0819776b07425b2831cd31a8a0f4e7ac30c09\/resources%2Flang%2Fen%2Fpasswords.php', 'patch': \"@@ -1,6 +1,6 @@\\n <?php\\n \\n return [\\n-    'sent'\\t        => 'Your password link has been sent!',\\n+    'sent'\\t        => 'Success: If that email address exists in our system, a password recovery email has been sent.',\\n     'user'\\t\\t\\t=> 'No matching active user found with that email.',\\n ];\"}}",
            "message_norm":"updated language string\n\nsigned-off-by: snipe <snipe@snipe.net>",
            "language":"en",
            "entities":"[('updated', 'ACTION', ''), ('snipe@snipe.net', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['resources\/lang\/en\/passwords.php'])",
            "num_files":1.0
        },
        {
            "index":3497,
            "vuln_id":"GHSA-xvjm-fvxx-q3hv",
            "cwe_id":"{'CWE-190'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60'}",
            "dataset":"osv",
            "summary":"CHECK-fail due to integer overflow ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in  caused by an integer overflow in constructing a new tensor shape:\n\n```python\nimport tensorflow as tf\n\ninput_layer = 2**60-1\nsparse_data = tf.raw_ops.SparseSplit(\n    split_dim=1, \n    indices=[(0, 0), (0, 1), (0, 2), \n    (4, 3), (5, 0), (5, 1)],\n    values=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0],\n    shape=(input_layer, input_layer),\n    num_split=2,\n    name=None\n    )\n```\n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0908c2f2397c099338b901b067f6495a5b96760b\/tensorflow\/core\/kernels\/sparse_split_op.cc#L66-L70) builds a dense shape without checking that the dimensions would not result in overflow:\n\n```cc\nsparse::SparseTensor sparse_tensor;\nOP_REQUIRES_OK(context,\n               sparse::SparseTensor::Create(\n                 input_indices, input_values,\n                 TensorShape(input_shape.vec<int64>()), &sparse_tensor));\n```\n\nThe [`TensorShape` constructor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/framework\/tensor_shape.cc#L183-L188) uses a `CHECK` operation which triggers when [`InitDims`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/framework\/tensor_shape.cc#L212-L296) returns a non-OK status.\n                    \n```cc               \ntemplate <class Shape>\nTensorShapeBase<Shape>::TensorShapeBase(gtl::ArraySlice<int64> dim_sizes) {\n  set_tag(REP16);\n  set_data_type(DT_INVALID);\n  TF_CHECK_OK(InitDims(dim_sizes));\n}\n```\n\nIn our scenario, this occurs when adding a dimension from the argument results in overflow:\n\n```cc\ntemplate <class Shape>\nStatus TensorShapeBase<Shape>::InitDims(gtl::ArraySlice<int64> dim_sizes) {\n  ...\n  Status status = Status::OK();\n  for (int64 s : dim_sizes) {\n    status.Update(AddDimWithStatus(internal::SubtleMustCopy(s)));\n    if (!status.ok()) {\n      return status;\n    }\n  }\n}\n\ntemplate <class Shape>\nStatus TensorShapeBase<Shape>::AddDimWithStatus(int64 size) {\n  ...\n  int64 new_num_elements;\n  if (kIsPartial && (num_elements() < 0 || size < 0)) {\n    new_num_elements = -1;\n  } else {\n    new_num_elements = MultiplyWithoutOverflow(num_elements(), size);\n    if (TF_PREDICT_FALSE(new_num_elements < 0)) {\n        return errors::Internal(\"Encountered overflow when multiplying \",\n                                num_elements(), \" with \", size,\n                                \", result: \", new_num_elements);\n      }\n  }\n  ...\n}\n```\n\nThis is a legacy implementation of the constructor and operations should use `BuildTensorShapeBase` or `AddDimWithStatus` to prevent `CHECK`-failures in the presence of overflows.\n\n### Patches\nWe have patched the issue in GitHub commit [4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by researchers from University of Virginia and University of California, Santa Barbara.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
            "commit_sha":"4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
            "patch":"SINGLE",
            "chain_ord":"['4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60']",
            "before_first_fix_commit":"{'0908c2f2397c099338b901b067f6495a5b96760b'}",
            "last_fix_commit":"4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 22:55:00",
            "message":"Prevent overflow in sparse op\n\nPiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 3, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/sparse_split_op.cc': {'additions': 10, 'deletions': 3, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60\/tensorflow%2Fcore%2Fkernels%2Fsparse_split_op.cc', 'patch': '@@ -63,11 +63,18 @@ class SparseSplitOp : public OpKernel {\\n                                         input_shape.vec<int64>()(axis),\\n                                         \"), got \", num_split_));\\n \\n+    \/\/ Prevent overflow by constructing the dense shape separately\\n+    TensorShape dense_shape;\\n+    const auto input_shape_flat = input_shape.flat<int64>();\\n+    for (int i = 0; i < input_shape.NumElements(); i++) {\\n+      OP_REQUIRES_OK(context,\\n+                     dense_shape.AddDimWithStatus(input_shape_flat(i)));\\n+    }\\n+\\n     sparse::SparseTensor sparse_tensor;\\n     OP_REQUIRES_OK(context,\\n-                   sparse::SparseTensor::Create(\\n-                       input_indices, input_values,\\n-                       TensorShape(input_shape.vec<int64>()), &sparse_tensor));\\n+                   sparse::SparseTensor::Create(input_indices, input_values,\\n+                                                dense_shape, &sparse_tensor));\\n \\n     std::vector<sparse::SparseTensor> outputs;\\n     OP_REQUIRES_OK(context, sparse::SparseTensor::Split<T>('}}",
            "message_norm":"prevent overflow in sparse op\n\npiperorigin-revid: 372442006\nchange-id: i60fe31cd7e56fb3501e97c63500caf902ddeee96",
            "language":"nl",
            "entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('372442006', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_split_op.cc'])",
            "num_files":1.0
        },
        {
            "index":341,
            "vuln_id":"GHSA-437j-5qc3-c589",
            "cwe_id":"{'CWE-601'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/187e949daf7dea6f10b80da70988f0f86444eeff'}",
            "dataset":"osv",
            "summary":"Open Redirect in microweber Open Redirect in GitHub repository microweber\/microweber prior to 1.2.19.",
            "published_date":"2022-06-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/187e949daf7dea6f10b80da70988f0f86444eeff",
            "commit_sha":"187e949daf7dea6f10b80da70988f0f86444eeff",
            "patch":"SINGLE",
            "chain_ord":"['187e949daf7dea6f10b80da70988f0f86444eeff']",
            "before_first_fix_commit":"{'e6361e9fdcaaf2b27fb664beaa2fb33d46e3542e'}",
            "last_fix_commit":"187e949daf7dea6f10b80da70988f0f86444eeff",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/29\/2022, 15:14:26",
            "message":"update",
            "author":"Peter Ivanov",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'src\/MicroweberPackages\/Helper\/UrlManager.php': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/187e949daf7dea6f10b80da70988f0f86444eeff\/src%2FMicroweberPackages%2FHelper%2FUrlManager.php', 'patch': \"@@ -105,7 +105,15 @@ public function redirect($url)\\n \\n         $redirectUrl = site_url();\\n         $parseUrl = parse_url($url);\\n+\\n         if (isset($parseUrl['host'])) {\\n+            if(isset($parseUrl['user']) and $parseUrl['user']){\\n+                return \\\\Redirect::to(site_url());\\n+            }\\n+\\n+            if(isset($parseUrl['pass']) and $parseUrl['pass']){\\n+                return \\\\Redirect::to(site_url());\\n+            }\\n             if ($parseUrl['host'] == site_hostname()) {\\n                 $redirectUrl = $url;\\n             }\"}}",
            "message_norm":"update",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Helper\/UrlManager.php'])",
            "num_files":1.0
        },
        {
            "index":1229,
            "vuln_id":"GHSA-8m5h-hrqm-pxm2",
            "cwe_id":"{'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/ESAPI\/esapi-java-legacy\/commit\/a0d67b75593878b1b6e39e2acc1773b3effedb2a'}",
            "dataset":"osv",
            "summary":"Path traversal in the OWASP Enterprise Security API ### Impact\nThe default implementation of `Validator.getValidDirectoryPath(String, String, File, boolean)` may incorrectly treat the tested input string as a child of the specified parent directory. This potentially could allow control-flow bypass checks to be defeated if an attack can specify the entire string representing the 'input' path.\n\n### Patches\nThis vulnerability is patched in release 2.3.0.0 of ESAPI. See https:\/\/github.com\/ESAPI\/esapi-java-legacy\/releases\/tag\/esapi-2.3.0.0 for details.\n\n### Workarounds\nYes; in theory, one _could_ write the own implementation of the Validator interface. This would most easily be done by sub-classing a version of the affected `DefaultValidator` class and then overriding the affected `getValidDirectoryPath()` to correct the issue. However, this is not recommended.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email one of the project co-leaders. See email addresses listed on  the [OWASP ESAPI wiki](https:\/\/owasp.org\/www-project-enterprise-security-api\/) page, under \"Leaders\".\n* Send email to one of the two ESAPI related Google Groups listed under [Where to Find More Information on ESAPI](https:\/\/github.com\/ESAPI\/esapi-java-legacy#where-to-find-more-information-on-esapi) on our [README.md](https:\/\/github.com\/ESAPI\/esapi-java-legacy#readme) page.",
            "published_date":"2022-04-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/ESAPI\/esapi-java-legacy",
            "commit_href":"https:\/\/github.com\/ESAPI\/esapi-java-legacy\/commit\/a0d67b75593878b1b6e39e2acc1773b3effedb2a",
            "commit_sha":"a0d67b75593878b1b6e39e2acc1773b3effedb2a",
            "patch":"SINGLE",
            "chain_ord":"['a0d67b75593878b1b6e39e2acc1773b3effedb2a']",
            "before_first_fix_commit":"{'657c2a751c0b8dbd70b8da1bba246d86f7ad3b20'}",
            "last_fix_commit":"a0d67b75593878b1b6e39e2acc1773b3effedb2a",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/17\/2022, 04:32:15",
            "message":"Fix for GHSL-2022-008 vulnerability.",
            "author":"kwwall",
            "comments":"{'com_1': {'author': 'JLLeitschuh', 'datetime': '04\/29\/2022, 00:50:01', 'body': 'For back tracking this is related to CVE-2022-23457\\r\\n\\r\\nhttps:\/\/github.com\/ESAPI\/esapi-java-legacy\/security\/advisories\/GHSA-8m5h-hrqm-pxm2'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ESAPI\/esapi-java-legacy\/raw\/a0d67b75593878b1b6e39e2acc1773b3effedb2a\/src%2Fmain%2Fjava%2Forg%2Fowasp%2Fesapi%2Freference%2FDefaultValidator.java', 'patch': '@@ -466,7 +466,7 @@ public String getValidDirectoryPath(String context, String input, File parent, b\\n \\t\\t\\tif ( !parent.isDirectory() ) {\\n \\t\\t\\t\\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, specified parent is not a directory: context=\" + context + \", input=\" + input + \", parent=\" + parent );\\n \\t\\t\\t}\\n-\\t\\t\\tif ( !dir.getCanonicalPath().startsWith(parent.getCanonicalPath() ) ) {\\n+\\t\\t\\tif ( !dir.getCanonicalFile().toPath().startsWith( parent.getCanonicalFile().toPath() ) ) { \/\/ Fixes GHSL-2022-008\\n \\t\\t\\t\\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, not inside specified parent: context=\" + context + \", input=\" + input + \", parent=\" + parent );\\n \\t\\t\\t}'}}",
            "message_norm":"fix for ghsl-2022-008 vulnerability.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java'])",
            "num_files":1.0
        },
        {
            "index":2919,
            "vuln_id":"GHSA-rcjj-h6gh-jf3r",
            "cwe_id":"{'CWE-379'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/apache\/groovy\/commit\/bcbe5c4c76db83736166530647c024ac1e47ef28'}",
            "dataset":"osv",
            "summary":"Information Disclosure in Apache Groovy Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.",
            "published_date":"2020-12-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/groovy",
            "commit_href":"https:\/\/github.com\/apache\/groovy\/commit\/bcbe5c4c76db83736166530647c024ac1e47ef28",
            "commit_sha":"bcbe5c4c76db83736166530647c024ac1e47ef28",
            "patch":"SINGLE",
            "chain_ord":"['bcbe5c4c76db83736166530647c024ac1e47ef28']",
            "before_first_fix_commit":"{'e5aabb3a88974a6176a0fe76356c6a0415b5d183'}",
            "last_fix_commit":"bcbe5c4c76db83736166530647c024ac1e47ef28",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/18\/2020, 13:08:16",
            "message":"GROOVY-9824: replace some old api usage with newer available variants (closes #1425)",
            "author":"Paul King",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 33, 'total': 47}",
            "files":"{'src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java': {'additions': 14, 'deletions': 33, 'changes': 47, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/groovy\/raw\/bcbe5c4c76db83736166530647c024ac1e47ef28\/src%2Fmain%2Fjava%2Forg%2Fcodehaus%2Fgroovy%2Fruntime%2FDefaultGroovyStaticMethods.java', 'patch': '@@ -27,6 +27,8 @@\\n import java.lang.management.ManagementFactory;\\n import java.lang.management.ThreadInfo;\\n import java.lang.management.ThreadMXBean;\\n+import java.nio.file.Files;\\n+import java.nio.file.Path;\\n import java.util.Arrays;\\n import java.util.Locale;\\n import java.util.ResourceBundle;\\n@@ -211,42 +213,21 @@ public static ResourceBundle getBundle(ResourceBundle self, String bundleName, L\\n     }\\n \\n     public static File createTempDir(File self) throws IOException {\\n-        return createTempDir(self, \"groovy-generated-\", \"-tmpdir\");\\n+        return createTempDir(self, \"groovy-generated-\", \"tmpdir-\");\\n+    }\\n+\\n+    public static File createTempDir(File self, final String prefix) throws IOException {\\n+        return createTempDirNio(prefix);\\n     }\\n \\n     public static File createTempDir(File self, final String prefix, final String suffix) throws IOException {\\n-        final int MAXTRIES = 3;\\n-        int accessDeniedCounter = 0;\\n-        File tempFile=null;\\n-        for (int i=0; i<MAXTRIES; i++) {\\n-            try {\\n-                tempFile = File.createTempFile(prefix, suffix);\\n-                tempFile.delete();\\n-                tempFile.mkdirs();\\n-                break;\\n-            } catch (IOException ioe) {\\n-                if (ioe.getMessage().startsWith(\"Access is denied\")) {\\n-                    accessDeniedCounter++;\\n-                    try {\\n-                        Thread.sleep(100);\\n-                    } catch (InterruptedException ignore) {\\n-                    }\\n-                }\\n-                if (i == MAXTRIES - 1) {\\n-                    if (accessDeniedCounter == MAXTRIES) {\\n-                        String msg = \"Access is denied.\\\\nWe tried \" + accessDeniedCounter +\\n-                                \" times to create a temporary directory and failed each time.\" +\\n-                                \" If you are on Windows, you are possibly victim to\" +\\n-                                \" http:\/\/bugs.sun.com\/bugdatabase\/view_bug.do?bug_id=6325169.\" +\\n-                                \" This is not a bug in Groovy.\";\\n-                        throw new IOException(msg);\\n-                    } else {\\n-                        throw ioe;\\n-                    }\\n-                }\\n-            }\\n-        }\\n-        return tempFile;\\n+        \/\/ more secure Files api doesn\\'t support suffix, so just append it to the prefix\\n+        return createTempDirNio(prefix + suffix);\\n+    }\\n+\\n+    private static File createTempDirNio(String prefix) throws IOException {\\n+        Path tempPath = Files.createTempDirectory(prefix);\\n+        return tempPath.toFile();\\n     }\\n \\n     \/**'}}",
            "message_norm":"groovy-9824: replace some old api usage with newer available variants (closes #1425)",
            "language":"en",
            "entities":"[('#1425', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/codehaus\/groovy\/runtime\/DefaultGroovyStaticMethods.java'])",
            "num_files":1.0
        },
        {
            "index":3360,
            "vuln_id":"GHSA-x44x-r84w-8v67",
            "cwe_id":"{'CWE-287'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/commit\/136aa83ed431462fa42ce17b7f9b24e056de06be'}",
            "dataset":"osv",
            "summary":"Lack of URL normalization may lead to authorization bypass when URL access rules are used ### Impact\nWhen access rules are used inside a protected host, some URL encodings may bypass filtering system.\n\n### Patches\nVersion 0.5.2 includes a patch that fixes the vulnerability\n\n### Workarounds\nNo way for users to fix or remediate the vulnerability without upgrading\n\n### References\nhttps:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repository](https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/issues) or [LemonLDAP::NG GitLab](https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues)\n* Email us at [lemonldap-ng-users@ow2.org](mailto:lemonldap-ng-users@ow2.org)",
            "published_date":"2020-09-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler",
            "commit_href":"https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/commit\/136aa83ed431462fa42ce17b7f9b24e056de06be",
            "commit_sha":"136aa83ed431462fa42ce17b7f9b24e056de06be",
            "patch":"SINGLE",
            "chain_ord":"['136aa83ed431462fa42ce17b7f9b24e056de06be']",
            "before_first_fix_commit":"{'d6fac9350024d9eef1c180f4e3a6a0ce65f199a8'}",
            "last_fix_commit":"136aa83ed431462fa42ce17b7f9b24e056de06be",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/09\/2020, 08:04:46",
            "message":"Normalize URL (related to https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and CVE-2020-24660)",
            "author":"Xavier Guimard",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 3, 'total': 7}",
            "files":"{'src\/lib\/index.coffee': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/raw\/136aa83ed431462fa42ce17b7f9b24e056de06be\/src%2Flib%2Findex.coffee', 'patch': '@@ -4,6 +4,7 @@\\n # See README.md for license and copyright\\n ###\\n conf = null\\n+normalizeUrl = require \\'normalize-url\\'\\n \\n class Handler\\n \\tconstructor: (args) ->\\n@@ -15,7 +16,7 @@ class Handler\\n \\trun: (req, res, next) ->\\n \\t\\tself = @\\n \\t\\tvhost = req.headers.host\\n-\\t\\turi = decodeURI req.url\\n+\\t\\turi = normalizeUrl req.url\\n \\t\\tif @conf.tsv.maintenance[vhost]\\n \\t\\t\\tself.logger.info \"Go to portal with maintenance error code #{vhost}\"\\n \\t\\t\\treturn @setError res, \\'\/\\', 503, \\'Service Temporarily Unavailable\\'\\n@@ -184,7 +185,7 @@ class Handler\\n \\t\\t\\treturn res\\n \\t\\turlc = @conf.tsv.portal()\\n \\t\\tif uri\\n-\\t\\t\\turlc += \\'?url=\\' + new Buffer(encodeURI(uri)).toString(\\'base64\\')\\n+\\t\\t\\turlc += \\'?url=\\' + new Buffer.from(encodeURI(uri)).toString(\\'base64\\')\\n \\t\\tif args\\n \\t\\t\\turlc += if uri then \\'&\\' else \\'?\\'\\n \\t\\t\\turlc += args\\n@@ -203,7 +204,7 @@ class Handler\\n \\n \\tsetError: (res, uri, code, txt) ->\\n \\t\\tif @conf.tsv.useRedirectOnError\\n-\\t\\t\\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer(encodeURI(uri)).toString(\\'base64\\')\\n+\\t\\t\\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer.from(encodeURI(uri)).toString(\\'base64\\')\\n \\t\\t\\t@logger.debug \"Redirecting to #{u}\"\\n \\t\\t\\tif res.redirect?\\n \\t\\t\\t\\tres.redirect u'}}",
            "message_norm":"normalize url (related to https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and cve-2020-24660)",
            "language":"en",
            "entities":"[('https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290', 'URL', ''), ('cve-2020-24660', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/index.coffee'])",
            "num_files":1.0
        },
        {
            "index":2826,
            "vuln_id":"GHSA-qwpp-fgrj-h78q",
            "cwe_id":"{'CWE-209', 'CWE-200'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/shopware\/shopware\/commit\/dcb24eb5ec757c991b5a4e2ddced379e5820744d'}",
            "dataset":"osv",
            "summary":"Exposure of Sensitive Information to an Unauthorized Actor Shopware is an open source eCommerce platform. Versions prior to 5.6.10 are vulnerable to system information leakage in error handling. Users are recommend to update to version 5.6.10. You can get the update to 5.6.10 regularly via the Auto-Updater or directly via the download overview.",
            "published_date":"2021-09-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/shopware\/shopware",
            "commit_href":"https:\/\/github.com\/shopware\/shopware\/commit\/dcb24eb5ec757c991b5a4e2ddced379e5820744d",
            "commit_sha":"dcb24eb5ec757c991b5a4e2ddced379e5820744d",
            "patch":"SINGLE",
            "chain_ord":"['dcb24eb5ec757c991b5a4e2ddced379e5820744d']",
            "before_first_fix_commit":"{'a0d02194b3c255bc28661daa090656aecacf8608'}",
            "last_fix_commit":"dcb24eb5ec757c991b5a4e2ddced379e5820744d",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/15\/2021, 13:25:37",
            "message":"SW-26001 - Adjust error controller",
            "author":"Philip Gatzka",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 4, 'total': 5}",
            "files":"{'engine\/Shopware\/Controllers\/Frontend\/Error.php': {'additions': 1, 'deletions': 4, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/shopware\/shopware\/raw\/dcb24eb5ec757c991b5a4e2ddced379e5820744d\/engine%2FShopware%2FControllers%2FFrontend%2FError.php', 'patch': \"@@ -50,10 +50,7 @@ public function preDispatch()\\n             $this->enableBackendTheme();\\n         }\\n \\n-        if (strpos($this->Request()->getHeader('Content-Type'), 'application\/json') === 0) {\\n-            $this->Front()->Plugins()->Json()->setRenderer();\\n-            $this->View()->assign('success', false);\\n-        } elseif ($this->Request()->isXmlHttpRequest() || !Shopware()->Container()->initialized('db')) {\\n+        if ($this->Request()->isXmlHttpRequest() || !Shopware()->Container()->initialized('db')) {\\n             $this->View()->loadTemplate($templateModule . '\/error\/exception.tpl');\\n         } elseif (isset($_ENV['SHELL']) || PHP_SAPI === 'cli') {\\n             $this->View()->loadTemplate($templateModule . '\/error\/cli.tpl');\"}}",
            "message_norm":"sw-26001 - adjust error controller",
            "language":"fr",
            "entities":"[('error', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['engine\/Shopware\/Controllers\/Frontend\/Error.php'])",
            "num_files":1.0
        }
    ]
}