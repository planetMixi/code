{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            },
            {
                "name":"patch_content",
                "type":"string"
            },
            {
                "name":"code_diff",
                "type":"string"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":792,
            "vuln_id":"GHSA-46c5-pfj8-fv65",
            "cwe_id":"{'CWE-704'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/pmmp\/PocketMine-MP\/commit\/c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1'}",
            "dataset":"osv",
            "summary":"Improperly checked metadata on tools\/armour itemstacks received from the client ### Impact\nDue to a workaround applied in 1.13, an attacker may send a negative damage\/meta value in a tool or armour item's NBT, which `TypeConverter` then blindly uses as if it was valid without being checked.\n\nWhen this invalid metadata value reaches `Durable->setDamage()`, an exception is thrown because the metadata is not within the expected range for damage values.\n\nThis can be reproduced with either a too-large damage value, or a negative one.\n\n### Patches\nc8e1cfcbee4945fd4b63d2a7e96025c59744d4f1\n\n### Workarounds\nIn theory this can be checked by plugins using a custom `TypeConverter`, but this is likely to be very cumbersome.\n\n### For more information\n* Email us at [team@pmmp.io](mailto:team@pmmp.io)",
            "published_date":"2022-03-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/pmmp\/PocketMine-MP",
            "commit_href":"https:\/\/github.com\/pmmp\/PocketMine-MP\/commit\/c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1",
            "commit_sha":"c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1",
            "patch":"SINGLE",
            "chain_ord":"['c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1']",
            "before_first_fix_commit":"{'869dda9a45a12028243cae590552458ce970ec18'}",
            "last_fix_commit":"c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/15\/2022, 23:44:41",
            "message":"TypeConverter: account for possible out-of-range meta in items",
            "author":"Dylan K. Taylor",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/network\/mcpe\/convert\/TypeConverter.php': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pmmp\/PocketMine-MP\/raw\/c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1\/src%2Fnetwork%2Fmcpe%2Fconvert%2FTypeConverter.php', 'patch': '@@ -232,6 +232,9 @@ public function netItemStackToCore(ItemStack $itemStack) : Item{\\n \\t\\t\\t\\t$compound = null;\\n \\t\\t\\t}\\n \\t\\t}\\n+\\t\\tif($meta < 0 || $meta >= 0x7fff){ \/\/this meta value may have been restored from the NBT\\n+\\t\\t\\tthrow new TypeConversionException(\"Item meta must be in range 0 ... \" . 0x7fff . \" (received $meta)\");\\n+\\t\\t}\\n \\n \\t\\ttry{\\n \\t\\t\\treturn ItemFactory::getInstance()->get('}}",
            "message_norm":"typeconverter: account for possible out-of-range meta in items",
            "language":"en",
            "entities":"[('out-of-range', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/network\/mcpe\/convert\/TypeConverter.php'])",
            "num_files":1.0,
            "patch_content":"From c8e1cfcbee4945fd4b63d2a7e96025c59744d4f1 Mon Sep 17 00:00:00 2001\nFrom: \"Dylan K. Taylor\" <dktapps@pmmp.io>\nDate: Tue, 15 Mar 2022 23:44:41 +0000\nSubject: [PATCH] TypeConverter: account for possible out-of-range meta in\n items\n\n---\n src\/network\/mcpe\/convert\/TypeConverter.php | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/src\/network\/mcpe\/convert\/TypeConverter.php b\/src\/network\/mcpe\/convert\/TypeConverter.php\nindex d03918efd5c..de17acdb0eb 100644\n--- a\/src\/network\/mcpe\/convert\/TypeConverter.php\n+++ b\/src\/network\/mcpe\/convert\/TypeConverter.php\n@@ -232,6 +232,9 @@ public function netItemStackToCore(ItemStack $itemStack) : Item{\n \t\t\t\t$compound = null;\n \t\t\t}\n \t\t}\n+\t\tif($meta < 0 || $meta >= 0x7fff){ \/\/this meta value may have been restored from the NBT\n+\t\t\tthrow new TypeConversionException(\"Item meta must be in range 0 ... \" . 0x7fff . \" (received $meta)\");\n+\t\t}\n \n \t\ttry{\n \t\t\treturn ItemFactory::getInstance()->get(",
            "code_diff":"@@ -232,6 +232,9 @@ public function netItemStackToCore(ItemStack $itemStack) : Item{\n \t\t\t\t$compound = null;\n \t\t\t}\n \t\t}\n+\t\tif($meta < 0 || $meta >= 0x7fff){ \/\/this meta value may have been restored from the NBT\n+\t\t\tthrow new TypeConversionException(\"Item meta must be in range 0 ... \" . 0x7fff . \" (received $meta)\");\n+\t\t}\n \n \t\ttry{\n \t\t\treturn ItemFactory::getInstance()->get("
        },
        {
            "index":627,
            "vuln_id":"GHSA-6346-5r4h-ff5x",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/724e2d186a33c0c27273107dc4f160a09384877f'}",
            "dataset":"osv",
            "summary":"Microweber vulnerable to cross-site scripting (XSS) Microweber is a drag and drop website builder and a powerful next generation CMS. Microweber versions 1.2.15 and prior are vulnerable to cross-site scripting. This could lead to injection of arbitrary JaveScript code, defacement of a page, or stealing cookies. A patch is available on the `master` branch of Microweber's GitHub repository.",
            "published_date":"2022-05-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/724e2d186a33c0c27273107dc4f160a09384877f",
            "commit_sha":"724e2d186a33c0c27273107dc4f160a09384877f",
            "patch":"SINGLE",
            "chain_ord":"['724e2d186a33c0c27273107dc4f160a09384877f']",
            "before_first_fix_commit":"{'5eb846301d61b22eda84a997026d050a14a518f4'}",
            "last_fix_commit":"724e2d186a33c0c27273107dc4f160a09384877f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/03\/2022, 08:41:32",
            "message":"Update order_filtering.blade.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/MicroweberPackages\/Order\/resources\/views\/admin\/orders\/partials\/order_filtering.blade.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/724e2d186a33c0c27273107dc4f160a09384877f\/src%2FMicroweberPackages%2FOrder%2Fresources%2Fviews%2Fadmin%2Forders%2Fpartials%2Forder_filtering.blade.php', 'patch': '@@ -158,7 +158,7 @@ class=\"btn btn-link btn-sm <?php if (isset($abandoned)): ?>font-weight-bold text\\n             $(document).ready(function () {\\n                 var searchOrdersByProduct = new mw.autoComplete({\\n                     element: \"#js-orders-search-by-products\",\\n-                    placeholder: \"<?php if ($productKeyword) { echo $productKeyword; } else { _e(\"Search by products...\"); }?>\",\\n+                    placeholder: \"<?php if ($productKeyword) { echo xss_clean($productKeyword); } else { _e(\"Search by products...\"); }?>\",\\n                     autoComplete:true,\\n                     ajaxConfig: {\\n                         method: \\'get\\','}}",
            "message_norm":"update order_filtering.blade.php",
            "language":"da",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Order\/resources\/views\/admin\/orders\/partials\/order_filtering.blade.php'])",
            "num_files":1.0,
            "patch_content":"From 724e2d186a33c0c27273107dc4f160a09384877f Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Tue, 3 May 2022 11:41:32 +0300\nSubject: [PATCH] Update order_filtering.blade.php\n\n---\n ...\/views\/admin\/orders\/partials\/order_filtering.blade.php       | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/MicroweberPackages\/Order\/resources\/views\/admin\/orders\/partials\/order_filtering.blade.php b\/src\/MicroweberPackages\/Order\/resources\/views\/admin\/orders\/partials\/order_filtering.blade.php\nindex 418a4429a5b..ce243b216bd 100644\n--- a\/src\/MicroweberPackages\/Order\/resources\/views\/admin\/orders\/partials\/order_filtering.blade.php\n+++ b\/src\/MicroweberPackages\/Order\/resources\/views\/admin\/orders\/partials\/order_filtering.blade.php\n@@ -158,7 +158,7 @@ class=\"btn btn-link btn-sm <?php if (isset($abandoned)): ?>font-weight-bold text\n             $(document).ready(function () {\n                 var searchOrdersByProduct = new mw.autoComplete({\n                     element: \"#js-orders-search-by-products\",\n-                    placeholder: \"<?php if ($productKeyword) { echo $productKeyword; } else { _e(\"Search by products...\"); }?>\",\n+                    placeholder: \"<?php if ($productKeyword) { echo xss_clean($productKeyword); } else { _e(\"Search by products...\"); }?>\",\n                     autoComplete:true,\n                     ajaxConfig: {\n                         method: 'get',",
            "code_diff":"@@ -158,7 +158,7 @@ class=\"btn btn-link btn-sm <?php if (isset($abandoned)): ?>font-weight-bold text\n             $(document).ready(function () {\n                 var searchOrdersByProduct = new mw.autoComplete({\n                     element: \"#js-orders-search-by-products\",\n-                    placeholder: \"<?php if ($productKeyword) { echo $productKeyword; } else { _e(\"Search by products...\"); }?>\",\n+                    placeholder: \"<?php if ($productKeyword) { echo xss_clean($productKeyword); } else { _e(\"Search by products...\"); }?>\",\n                     autoComplete:true,\n                     ajaxConfig: {\n                         method: 'get',"
        },
        {
            "index":867,
            "vuln_id":"GHSA-6gm7-j668-w6h9",
            "cwe_id":"{'CWE-89'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/a697830359df06246acca502ee2455614de68017'}",
            "dataset":"osv",
            "summary":"SQL Injection in Pimcore Pimcore prior to version 10.3.5 is vulnerable SQL injection in RecyclebinController.php. This vulnerability affects data confidentiality.",
            "published_date":"2022-04-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/a697830359df06246acca502ee2455614de68017",
            "commit_sha":"a697830359df06246acca502ee2455614de68017",
            "patch":"SINGLE",
            "chain_ord":"['a697830359df06246acca502ee2455614de68017']",
            "before_first_fix_commit":"{'e649598b4d2892c0bef9dea24cdf8f7006dc1ef1'}",
            "last_fix_commit":"a697830359df06246acca502ee2455614de68017",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/04\/2022, 08:59:41",
            "message":"[Recyclebin] Quote condition filter",
            "author":"dpahuja",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/a697830359df06246acca502ee2455614de68017\/bundles%2FAdminBundle%2FController%2FAdmin%2FRecyclebinController.php', 'patch': '@@ -119,7 +119,7 @@ public function listAction(Request $request)\\n                         $condition = $field . \\' BETWEEN \\' . $db->quote($value) . \\' AND \\' . $db->quote($maxTime);\\n                         $conditionFilters[] = $condition;\\n                     } else {\\n-                        $conditionFilters[] = $field . $operator . \" \\'\" . $value . \"\\' \";\\n+                        $conditionFilters[] = $field . $operator . \\' \\' . $db->quote($value);\\n                     }\\n                 }\\n             }'}}",
            "message_norm":"[recyclebin] quote condition filter",
            "language":"it",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php'])",
            "num_files":1.0,
            "patch_content":"From a697830359df06246acca502ee2455614de68017 Mon Sep 17 00:00:00 2001\nFrom: dpahuja <divesh.pahuja@gmail.com>\nDate: Mon, 4 Apr 2022 10:59:41 +0200\nSubject: [PATCH] [Recyclebin] Quote condition filter\n\n---\n bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php b\/bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php\nindex 550a34bdc49..d5d273aefb9 100644\n--- a\/bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php\n+++ b\/bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php\n@@ -119,7 +119,7 @@ public function listAction(Request $request)\n                         $condition = $field . ' BETWEEN ' . $db->quote($value) . ' AND ' . $db->quote($maxTime);\n                         $conditionFilters[] = $condition;\n                     } else {\n-                        $conditionFilters[] = $field . $operator . \" '\" . $value . \"' \";\n+                        $conditionFilters[] = $field . $operator . ' ' . $db->quote($value);\n                     }\n                 }\n             }",
            "code_diff":"@@ -119,7 +119,7 @@ public function listAction(Request $request)\n                         $condition = $field . ' BETWEEN ' . $db->quote($value) . ' AND ' . $db->quote($maxTime);\n                         $conditionFilters[] = $condition;\n                     } else {\n-                        $conditionFilters[] = $field . $operator . \" '\" . $value . \"' \";\n+                        $conditionFilters[] = $field . $operator . ' ' . $db->quote($value);\n                     }\n                 }\n             }"
        },
        {
            "index":540,
            "vuln_id":"GHSA-wp3c-xw9g-gpcg",
            "cwe_id":"{'CWE-617'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7ae2af34087fb4b5c8915279efd03da3b81028bc'}",
            "dataset":"osv",
            "summary":"Lack of validation in `SparseDenseCwiseMul` ### Impact\nDue to lack of validation in `tf.raw_ops.SparseDenseCwiseMul`, an attacker can trigger denial of service via `CHECK`-fails or accesses to outside the bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[10, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\nshape = tf.constant([0, 0], shape=[2], dtype=tf.int64)\ndense = tf.constant([], shape=[0], dtype=tf.int64)\n  \ntf.raw_ops.SparseDenseCwiseMul(\n    sp_indices=indices, sp_values=values, sp_shape=shape, dense=dense)\n```\n\nSince the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/38178a2f7a681a7835bb0912702a134bfe3b4d84\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc#L68-L80) only validates the rank of the input arguments but no [constraints between dimensions](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/SparseDenseCwiseMul), an attacker can abuse them to trigger internal `CHECK` assertions (and cause program termination, denial of service) or to write to memory outside of bounds of heap allocated tensor buffers.\n\n### Patches\nWe have patched the issue in GitHub commit [7ae2af34087fb4b5c8915279efd03da3b81028bc](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7ae2af34087fb4b5c8915279efd03da3b81028bc).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7ae2af34087fb4b5c8915279efd03da3b81028bc",
            "commit_sha":"7ae2af34087fb4b5c8915279efd03da3b81028bc",
            "patch":"SINGLE",
            "chain_ord":"['7ae2af34087fb4b5c8915279efd03da3b81028bc']",
            "before_first_fix_commit":"{'38178a2f7a681a7835bb0912702a134bfe3b4d84'}",
            "last_fix_commit":"7ae2af34087fb4b5c8915279efd03da3b81028bc",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 04:30:50",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseDenseCwiseMul`.\n\nPiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7ae2af34087fb4b5c8915279efd03da3b81028bc\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -78,6 +78,11 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n                     \"but received shapes: \",\\n                     values_t->shape().DebugString(), \" and \",\\n                     shape_t->shape().DebugString()));\\n+    OP_REQUIRES(\\n+        ctx, values_t->dim_size(0) == indices_t->dim_size(0),\\n+        errors::InvalidArgument(\\n+            \"The first dimension of values and indices should match. (\",\\n+            values_t->dim_size(0), \" vs. \", indices_t->dim_size(0), \")\"));\\n \\n     const auto indices_mat = indices_t->matrix<int64>();\\n     const auto shape_vec = shape_t->vec<int64>();'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsedensecwisemul`.\n\npiperorigin-revid: 372054410\nchange-id: ifcce0491e2e3816838c87e73be30a1e61b65174d",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372054410', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])",
            "num_files":1.0,
            "patch_content":"From 7ae2af34087fb4b5c8915279efd03da3b81028bc Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Tue, 4 May 2021 21:30:50 -0700\nSubject: [PATCH] Fix heap-buffer-overflow issue with\n `tf.raw_ops.SparseDenseCwiseMul`.\n\nPiperOrigin-RevId: 372054410\nChange-Id: Ifcce0491e2e3816838c87e73be30a1e61b65174d\n---\n tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc b\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\nindex 3a5e66a0e73ea6..dac4a3d3e6bfcd 100644\n--- a\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\n+++ b\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc\n@@ -78,6 +78,11 @@ class SparseDenseBinaryOpShared : public OpKernel {\n                     \"but received shapes: \",\n                     values_t->shape().DebugString(), \" and \",\n                     shape_t->shape().DebugString()));\n+    OP_REQUIRES(\n+        ctx, values_t->dim_size(0) == indices_t->dim_size(0),\n+        errors::InvalidArgument(\n+            \"The first dimension of values and indices should match. (\",\n+            values_t->dim_size(0), \" vs. \", indices_t->dim_size(0), \")\"));\n \n     const auto indices_mat = indices_t->matrix<int64>();\n     const auto shape_vec = shape_t->vec<int64>();",
            "code_diff":"@@ -78,6 +78,11 @@ class SparseDenseBinaryOpShared : public OpKernel {\n                     \"but received shapes: \",\n                     values_t->shape().DebugString(), \" and \",\n                     shape_t->shape().DebugString()));\n+    OP_REQUIRES(\n+        ctx, values_t->dim_size(0) == indices_t->dim_size(0),\n+        errors::InvalidArgument(\n+            \"The first dimension of values and indices should match. (\",\n+            values_t->dim_size(0), \" vs. \", indices_t->dim_size(0), \")\"));\n \n     const auto indices_mat = indices_t->matrix<int64>();\n     const auto shape_vec = shape_t->vec<int64>();"
        },
        {
            "index":580,
            "vuln_id":"GHSA-4vrf-ff7v-hpgr",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f61c57bd425878be108ec787f4d96390579fb83e'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `EmbeddingLookup` The implementation of the `EmbeddingLookup` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e4b29809543b250bc9b19678ec4776299dd569ba\/tensorflow\/lite\/kernels\/embedding_lookup.cc#L73-L74):\n\n```cc\nconst int row_size = SizeOfDimension(value, 0);\nconst int row_bytes = value->bytes \/ row_size;\n```\n\nAn attacker can craft a model such that the first dimension of the `value` input is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [f61c57bd425878be108ec787f4d96390579fb83e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f61c57bd425878be108ec787f4d96390579fb83e).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f61c57bd425878be108ec787f4d96390579fb83e",
            "commit_sha":"f61c57bd425878be108ec787f4d96390579fb83e",
            "patch":"SINGLE",
            "chain_ord":"['f61c57bd425878be108ec787f4d96390579fb83e']",
            "before_first_fix_commit":"{'e4b29809543b250bc9b19678ec4776299dd569ba'}",
            "last_fix_commit":"f61c57bd425878be108ec787f4d96390579fb83e",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 19:57:00",
            "message":"Prevent division by 0\n\nPiperOrigin-RevId: 370966645\nChange-Id: I831bfd96c7eb77b02d7ebb744335f59f6e5728cb",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/lite\/kernels\/embedding_lookup.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f61c57bd425878be108ec787f4d96390579fb83e\/tensorflow%2Flite%2Fkernels%2Fembedding_lookup.cc', 'patch': '@@ -71,6 +71,10 @@ TfLiteStatus EvalSimple(TfLiteContext* context, TfLiteNode* node,\\n                         const TfLiteTensor* lookup, const TfLiteTensor* value,\\n                         TfLiteTensor* output) {\\n   const int row_size = SizeOfDimension(value, 0);\\n+  if (row_size == 0) {\\n+    \/\/ Propagate empty tensor if input is empty\\n+    return kTfLiteOk;\\n+  }\\n   const int row_bytes = value->bytes \/ row_size;\\n \\n   char* output_raw = GetTensorData<char>(output);'}}",
            "message_norm":"prevent division by 0\n\npiperorigin-revid: 370966645\nchange-id: i831bfd96c7eb77b02d7ebb744335f59f6e5728cb",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370966645', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/embedding_lookup.cc'])",
            "num_files":1.0,
            "patch_content":"From f61c57bd425878be108ec787f4d96390579fb83e Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 28 Apr 2021 12:57:00 -0700\nSubject: [PATCH] Prevent division by 0\n\nPiperOrigin-RevId: 370966645\nChange-Id: I831bfd96c7eb77b02d7ebb744335f59f6e5728cb\n---\n tensorflow\/lite\/kernels\/embedding_lookup.cc | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/embedding_lookup.cc b\/tensorflow\/lite\/kernels\/embedding_lookup.cc\nindex d865f69eb9bd3c..092868d5a6a745 100644\n--- a\/tensorflow\/lite\/kernels\/embedding_lookup.cc\n+++ b\/tensorflow\/lite\/kernels\/embedding_lookup.cc\n@@ -71,6 +71,10 @@ TfLiteStatus EvalSimple(TfLiteContext* context, TfLiteNode* node,\n                         const TfLiteTensor* lookup, const TfLiteTensor* value,\n                         TfLiteTensor* output) {\n   const int row_size = SizeOfDimension(value, 0);\n+  if (row_size == 0) {\n+    \/\/ Propagate empty tensor if input is empty\n+    return kTfLiteOk;\n+  }\n   const int row_bytes = value->bytes \/ row_size;\n \n   char* output_raw = GetTensorData<char>(output);",
            "code_diff":"@@ -71,6 +71,10 @@ TfLiteStatus EvalSimple(TfLiteContext* context, TfLiteNode* node,\n                         const TfLiteTensor* lookup, const TfLiteTensor* value,\n                         TfLiteTensor* output) {\n   const int row_size = SizeOfDimension(value, 0);\n+  if (row_size == 0) {\n+    \/\/ Propagate empty tensor if input is empty\n+    return kTfLiteOk;\n+  }\n   const int row_bytes = value->bytes \/ row_size;\n \n   char* output_raw = GetTensorData<char>(output);"
        },
        {
            "index":222,
            "vuln_id":"GHSA-3qgw-p4fm-x7gf",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff489d95a9006be080ad14feb378f2b4dac35552'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's convolution code ### Impact\nTFLite's [convolution code](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/09c73bca7d648e961dd05898292d91a8322a9d45\/tensorflow\/lite\/kernels\/conv.cc) has multiple division where the divisor is controlled by the user and not checked to be non-zero. For example:\n\n```cc \nconst int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [ff489d95a9006be080ad14feb378f2b4dac35552](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff489d95a9006be080ad14feb378f2b4dac35552).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff489d95a9006be080ad14feb378f2b4dac35552",
            "commit_sha":"ff489d95a9006be080ad14feb378f2b4dac35552",
            "patch":"SINGLE",
            "chain_ord":"['ff489d95a9006be080ad14feb378f2b4dac35552']",
            "before_first_fix_commit":"{'09c73bca7d648e961dd05898292d91a8322a9d45'}",
            "last_fix_commit":"ff489d95a9006be080ad14feb378f2b4dac35552",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 19:37:35",
            "message":"Prevent division by 0.\n\nPiperOrigin-RevId: 370962554\nChange-Id: I0b9b62f4d8e1046dd88f9433f8dfeaf61a901680",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 2, 'total': 8}",
            "files":"{'tensorflow\/lite\/kernels\/conv.cc': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ff489d95a9006be080ad14feb378f2b4dac35552\/tensorflow%2Flite%2Fkernels%2Fconv.cc', 'patch': '@@ -545,6 +545,7 @@ TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,\\n     \/\/ Only one scale factor per batch is typically necessary. See optimized\\n     \/\/ implementation for why we need to allocate for the height of the inputs\\n     \/\/ flattened to 2D.\\n+    TF_LITE_ENSURE(context, channels_in != 0);\\n     const int height = NumElements(input) \/ channels_in;\\n     int scaling_dims[1] = {height};\\n     if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {\\n@@ -587,6 +588,7 @@ TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,\\n       input_offsets->type = kTfLiteInt32;\\n       input_offsets->allocation_type = kTfLiteArenaRw;\\n       \/\/ See above comment for the need to allocate for height of inputs.\\n+      TF_LITE_ENSURE(context, channels_in != 0);\\n       const int height = NumElements(input) \/ channels_in;\\n       const int input_offset_dims[1] = {height};\\n       if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1,\\n@@ -886,8 +888,9 @@ TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,\\n   CalculateActivationRange(params->activation, &output_activation_min,\\n                            &output_activation_max);\\n \\n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\\n   const int batch_size = SizeOfDimension(input, 0);\\n+  TF_LITE_ENSURE(context, batch_size != 0);\\n+  const int input_size = NumElements(input) \/ batch_size;\\n   TfLiteTensor* quantized_input_tensor;\\n   TF_LITE_ENSURE_OK(context,\\n                     GetTemporarySafe(context, node, data->input_quantized_index,\\n@@ -989,8 +992,9 @@ TfLiteStatus EvalHybrid(TfLiteContext* context, TfLiteNode* node,\\n   CalculateActivationRange(params->activation, &output_activation_min,\\n                            &output_activation_max);\\n \\n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\\n   const int batch_size = SizeOfDimension(input, 0);\\n+  TF_LITE_ENSURE(context, batch_size != 0);\\n+  const int input_size = NumElements(input) \/ batch_size;\\n \\n   const float* input_ptr = GetTensorData<float>(input);\\n   TfLiteTensor* quantized_input_tensor;'}}",
            "message_norm":"prevent division by 0.\n\npiperorigin-revid: 370962554\nchange-id: i0b9b62f4d8e1046dd88f9433f8dfeaf61a901680",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370962554', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/conv.cc'])",
            "num_files":1.0,
            "patch_content":"From ff489d95a9006be080ad14feb378f2b4dac35552 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 28 Apr 2021 12:37:35 -0700\nSubject: [PATCH] Prevent division by 0.\n\nPiperOrigin-RevId: 370962554\nChange-Id: I0b9b62f4d8e1046dd88f9433f8dfeaf61a901680\n---\n tensorflow\/lite\/kernels\/conv.cc | 8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ndiff --git a\/tensorflow\/lite\/kernels\/conv.cc b\/tensorflow\/lite\/kernels\/conv.cc\nindex 0b594d1b153dc2..6bc1adce8a04b4 100644\n--- a\/tensorflow\/lite\/kernels\/conv.cc\n+++ b\/tensorflow\/lite\/kernels\/conv.cc\n@@ -545,6 +545,7 @@ TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,\n     \/\/ Only one scale factor per batch is typically necessary. See optimized\n     \/\/ implementation for why we need to allocate for the height of the inputs\n     \/\/ flattened to 2D.\n+    TF_LITE_ENSURE(context, channels_in != 0);\n     const int height = NumElements(input) \/ channels_in;\n     int scaling_dims[1] = {height};\n     if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {\n@@ -587,6 +588,7 @@ TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,\n       input_offsets->type = kTfLiteInt32;\n       input_offsets->allocation_type = kTfLiteArenaRw;\n       \/\/ See above comment for the need to allocate for height of inputs.\n+      TF_LITE_ENSURE(context, channels_in != 0);\n       const int height = NumElements(input) \/ channels_in;\n       const int input_offset_dims[1] = {height};\n       if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1,\n@@ -886,8 +888,9 @@ TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,\n   CalculateActivationRange(params->activation, &output_activation_min,\n                            &output_activation_max);\n \n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\n   const int batch_size = SizeOfDimension(input, 0);\n+  TF_LITE_ENSURE(context, batch_size != 0);\n+  const int input_size = NumElements(input) \/ batch_size;\n   TfLiteTensor* quantized_input_tensor;\n   TF_LITE_ENSURE_OK(context,\n                     GetTemporarySafe(context, node, data->input_quantized_index,\n@@ -989,8 +992,9 @@ TfLiteStatus EvalHybrid(TfLiteContext* context, TfLiteNode* node,\n   CalculateActivationRange(params->activation, &output_activation_min,\n                            &output_activation_max);\n \n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\n   const int batch_size = SizeOfDimension(input, 0);\n+  TF_LITE_ENSURE(context, batch_size != 0);\n+  const int input_size = NumElements(input) \/ batch_size;\n \n   const float* input_ptr = GetTensorData<float>(input);\n   TfLiteTensor* quantized_input_tensor;",
            "code_diff":"@@ -545,6 +545,7 @@ TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,\n     \/\/ Only one scale factor per batch is typically necessary. See optimized\n     \/\/ implementation for why we need to allocate for the height of the inputs\n     \/\/ flattened to 2D.\n+    TF_LITE_ENSURE(context, channels_in != 0);\n     const int height = NumElements(input) \/ channels_in;\n     int scaling_dims[1] = {height};\n     if (!TfLiteIntArrayEqualsArray(scaling_factors->dims, 1, scaling_dims)) {\n@@ -587,6 +588,7 @@ TfLiteStatus Prepare(KernelType kernel_type, TfLiteContext* context,\n       input_offsets->type = kTfLiteInt32;\n       input_offsets->allocation_type = kTfLiteArenaRw;\n       \/\/ See above comment for the need to allocate for height of inputs.\n+      TF_LITE_ENSURE(context, channels_in != 0);\n       const int height = NumElements(input) \/ channels_in;\n       const int input_offset_dims[1] = {height};\n       if (!TfLiteIntArrayEqualsArray(input_offsets->dims, 1,\n@@ -886,8 +888,9 @@ TfLiteStatus EvalHybridPerChannel(TfLiteContext* context, TfLiteNode* node,\n   CalculateActivationRange(params->activation, &output_activation_min,\n                            &output_activation_max);\n \n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\n   const int batch_size = SizeOfDimension(input, 0);\n+  TF_LITE_ENSURE(context, batch_size != 0);\n+  const int input_size = NumElements(input) \/ batch_size;\n   TfLiteTensor* quantized_input_tensor;\n   TF_LITE_ENSURE_OK(context,\n                     GetTemporarySafe(context, node, data->input_quantized_index,\n@@ -989,8 +992,9 @@ TfLiteStatus EvalHybrid(TfLiteContext* context, TfLiteNode* node,\n   CalculateActivationRange(params->activation, &output_activation_min,\n                            &output_activation_max);\n \n-  const int input_size = NumElements(input) \/ SizeOfDimension(input, 0);\n   const int batch_size = SizeOfDimension(input, 0);\n+  TF_LITE_ENSURE(context, batch_size != 0);\n+  const int input_size = NumElements(input) \/ batch_size;\n \n   const float* input_ptr = GetTensorData<float>(input);\n   TfLiteTensor* quantized_input_tensor;"
        },
        {
            "index":147,
            "vuln_id":"GHSA-4284-jfhc-f854",
            "cwe_id":"{'CWE-732'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/phusion\/passenger\/commit\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8'}",
            "dataset":"osv",
            "summary":"Phusion Passenger incorrect permission assignment An issue was discovered in switchGroup() in agent\/ExecHelper\/ExecHelperMain.cpp in Phusion Passenger before 5.3.2. The set of groups (gidset) is not set correctly, leaving it up to randomness (i.e., uninitialized memory) which supplementary groups are actually being set while lowering privileges.",
            "published_date":"2022-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/phusion\/passenger",
            "commit_href":"https:\/\/github.com\/phusion\/passenger\/commit\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8",
            "commit_sha":"4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8",
            "patch":"SINGLE",
            "chain_ord":"['4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8']",
            "before_first_fix_commit":"{'6120509d3dca78b959135529262047febe884498'}",
            "last_fix_commit":"4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/29\/2018, 13:33:50",
            "message":"ExecHelperMain: fix privilege lowering code",
            "author":"Hongli Lai (Phusion)",
            "comments":"{'com_1': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:31:00', 'body': 'CVE-2018-12615 has been assigned to this.'}, 'com_2': {'author': 'CamJN', 'datetime': '06\/21\/2018, 14:33:35', 'body': \"Where was this reported? Mitre isn't showing a listing for CVE-2018-12615.\"}, 'com_3': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:37:46', 'body': \"It was reported through MITRE and will be displayed in the usual places, once it is synced, which usually takes a couple of hours. I've just added the comment as a reference, in case someone will be looking for it in the future.\"}, 'com_4': {'author': 'kbabioch', 'datetime': '06\/21\/2018, 14:39:14', 'body': 'By the way: While looking at the code we also realized that there might be other issues with the privilege drop, e.g. #2096'}}",
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/agent\/ExecHelper\/ExecHelperMain.cpp': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/phusion\/passenger\/raw\/4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8\/src%2Fagent%2FExecHelper%2FExecHelperMain.cpp', 'patch': '@@ -201,6 +201,9 @@ switchGroup(uid_t uid, const struct passwd *userInfo, gid_t gid) {\\n \\t\\t\\tif (ngroups <= NGROUPS_MAX) {\\n \\t\\t\\t\\tsetgroupsCalled = true;\\n \\t\\t\\t\\tgidset.reset(new gid_t[ngroups]);\\n+\\t\\t\\t\\tfor (int i = 0; i < ngroups; i++) {\\n+\\t\\t\\t\\t\\tgidset[i] = groups[i];\\n+\\t\\t\\t\\t}\\n \\t\\t\\t\\tif (setgroups(ngroups, gidset.get()) == -1) {\\n \\t\\t\\t\\t\\tint e = errno;\\n \\t\\t\\t\\t\\tfprintf(stderr, \"ERROR: setgroups(%d, ...) failed: %s (errno=%d)\\\\n\",'}}",
            "message_norm":"exechelpermain: fix privilege lowering code",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('privilege', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/agent\/ExecHelper\/ExecHelperMain.cpp'])",
            "num_files":1.0,
            "patch_content":"From 4e97fdb86d0a0141ec9a052c6e691fcd07bb45c8 Mon Sep 17 00:00:00 2001\nFrom: \"Hongli Lai (Phusion)\" <hongli@phusion.nl>\nDate: Tue, 29 May 2018 15:33:50 +0200\nSubject: [PATCH] ExecHelperMain: fix privilege lowering code\n\n---\n src\/agent\/ExecHelper\/ExecHelperMain.cpp | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/src\/agent\/ExecHelper\/ExecHelperMain.cpp b\/src\/agent\/ExecHelper\/ExecHelperMain.cpp\nindex 1e5ae58e2a..1700a52032 100644\n--- a\/src\/agent\/ExecHelper\/ExecHelperMain.cpp\n+++ b\/src\/agent\/ExecHelper\/ExecHelperMain.cpp\n@@ -201,6 +201,9 @@ switchGroup(uid_t uid, const struct passwd *userInfo, gid_t gid) {\n \t\t\tif (ngroups <= NGROUPS_MAX) {\n \t\t\t\tsetgroupsCalled = true;\n \t\t\t\tgidset.reset(new gid_t[ngroups]);\n+\t\t\t\tfor (int i = 0; i < ngroups; i++) {\n+\t\t\t\t\tgidset[i] = groups[i];\n+\t\t\t\t}\n \t\t\t\tif (setgroups(ngroups, gidset.get()) == -1) {\n \t\t\t\t\tint e = errno;\n \t\t\t\t\tfprintf(stderr, \"ERROR: setgroups(%d, ...) failed: %s (errno=%d)\\n\",",
            "code_diff":"@@ -201,6 +201,9 @@ switchGroup(uid_t uid, const struct passwd *userInfo, gid_t gid) {\n \t\t\tif (ngroups <= NGROUPS_MAX) {\n \t\t\t\tsetgroupsCalled = true;\n \t\t\t\tgidset.reset(new gid_t[ngroups]);\n+\t\t\t\tfor (int i = 0; i < ngroups; i++) {\n+\t\t\t\t\tgidset[i] = groups[i];\n+\t\t\t\t}\n \t\t\t\tif (setgroups(ngroups, gidset.get()) == -1) {\n \t\t\t\t\tint e = errno;\n \t\t\t\t\tfprintf(stderr, \"ERROR: setgroups(%d, ...) failed: %s (errno=%d)\\n\","
        },
        {
            "index":379,
            "vuln_id":"GHSA-7r8m-45gc-m2c8",
            "cwe_id":"{'CWE-311'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/Janpot\/mongodb-instance\/commit\/c8fea750f8020ace8410c442b2684b33a9fddd3b'}",
            "dataset":"osv",
            "summary":"Downloads Resources over HTTP in mongodb-instance Affected versions of `mongodb-instance` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `mongodb-instance`.\n\n\n## Recommendation\n\nUpdate to version 0.0.3 or later.",
            "published_date":"2019-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/Janpot\/mongodb-instance",
            "commit_href":"https:\/\/github.com\/Janpot\/mongodb-instance\/commit\/c8fea750f8020ace8410c442b2684b33a9fddd3b",
            "commit_sha":"c8fea750f8020ace8410c442b2684b33a9fddd3b",
            "patch":"SINGLE",
            "chain_ord":"['c8fea750f8020ace8410c442b2684b33a9fddd3b']",
            "before_first_fix_commit":"{'02ce5a3c48d7ac1f6c33819b0c79afecbacace70'}",
            "last_fix_commit":"c8fea750f8020ace8410c442b2684b33a9fddd3b",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/02\/2016, 14:19:21",
            "message":"use https",
            "author":"Jan Potoms",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'install.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Janpot\/mongodb-instance\/raw\/c8fea750f8020ace8410c442b2684b33a9fddd3b\/install.js', 'patch': \"@@ -37,7 +37,7 @@ if (process.platform === 'linux' && process.arch === 'x64') {\\n \\n \\n var downloadUrl = util.format(\\n-  'http:\/\/downloads.mongodb.org\/osx\/mongodb-%s-%s.%s',\\n+  'https:\/\/fastdl.mongodb.org\/osx\/mongodb-%s-%s.%s',\\n   platformPart,\\n   versionPart,\\n   extension\"}}",
            "message_norm":"use https",
            "language":"et",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['install.js'])",
            "num_files":1.0,
            "patch_content":"From c8fea750f8020ace8410c442b2684b33a9fddd3b Mon Sep 17 00:00:00 2001\nFrom: Jan Potoms <potoms.jan@gmail.com>\nDate: Wed, 2 Nov 2016 15:19:21 +0100\nSubject: [PATCH] use https\n\n---\n install.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/install.js b\/install.js\nindex d70aed1..7a46b74 100644\n--- a\/install.js\n+++ b\/install.js\n@@ -37,7 +37,7 @@ if (process.platform === 'linux' && process.arch === 'x64') {\n \n \n var downloadUrl = util.format(\n-  'http:\/\/downloads.mongodb.org\/osx\/mongodb-%s-%s.%s',\n+  'https:\/\/fastdl.mongodb.org\/osx\/mongodb-%s-%s.%s',\n   platformPart,\n   versionPart,\n   extension",
            "code_diff":"@@ -37,7 +37,7 @@ if (process.platform === 'linux' && process.arch === 'x64') {\n \n \n var downloadUrl = util.format(\n-  'http:\/\/downloads.mongodb.org\/osx\/mongodb-%s-%s.%s',\n+  'https:\/\/fastdl.mongodb.org\/osx\/mongodb-%s-%s.%s',\n   platformPart,\n   versionPart,\n   extension"
        },
        {
            "index":61,
            "vuln_id":"GHSA-6p5r-g9mq-ggh2",
            "cwe_id":"{'CWE-824'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in `MatrixSetDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixSetDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixSetDiagV3(\n  input=[1,2,3],\n  diagonal=[1,1],\n  k=[],\n  align='RIGHT_LEFT')\n```\n  \nThe  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong: \n\n```cc \n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n  \n### Patches\nWe have patched the issue in GitHub commit [ff8894044dfae5568ecbf2ed514c1a37dc394f1b](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
            "commit_sha":"ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
            "patch":"SINGLE",
            "chain_ord":"['ff8894044dfae5568ecbf2ed514c1a37dc394f1b']",
            "before_first_fix_commit":"{'59077ac39cc64139f889863081bdb3d0f88d39b6'}",
            "last_fix_commit":"ff8894044dfae5568ecbf2ed514c1a37dc394f1b",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 01:58:29",
            "message":"Add one missing valdiation to `matrix_set_diag_op.cc`\n\nPiperOrigin-RevId: 387923408\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ff8894044dfae5568ecbf2ed514c1a37dc394f1b\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_set_diag_op.cc', 'patch': '@@ -70,6 +70,9 @@ class MatrixSetDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(\\n+          context, diag_index.NumElements() > 0,\\n+          errors::InvalidArgument(\"diag_index must have at least one element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}",
            "message_norm":"add one missing valdiation to `matrix_set_diag_op.cc`\n\npiperorigin-revid: 387923408\nchange-id: if6a97b9098c13879400f56c22f91555cdf0ce5d7",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('387923408', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc'])",
            "num_files":1.0,
            "patch_content":"From ff8894044dfae5568ecbf2ed514c1a37dc394f1b Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 30 Jul 2021 18:58:29 -0700\nSubject: [PATCH] Add one missing valdiation to `matrix_set_diag_op.cc`\n\nPiperOrigin-RevId: 387923408\nChange-Id: If6a97b9098c13879400f56c22f91555cdf0ce5d7\n---\n tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc b\/tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc\nindex 07b6e69de67dc4..4e89433718b463 100644\n--- a\/tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc\n+++ b\/tensorflow\/core\/kernels\/linalg\/matrix_set_diag_op.cc\n@@ -70,6 +70,9 @@ class MatrixSetDiagOp : public OpKernel {\n                   errors::InvalidArgument(\n                       \"diag_index must be a scalar or vector, received shape: \",\n                       diag_index.shape().DebugString()));\n+      OP_REQUIRES(\n+          context, diag_index.NumElements() > 0,\n+          errors::InvalidArgument(\"diag_index must have at least one element\"));\n       lower_diag_index = diag_index.flat<int32>()(0);\n       upper_diag_index = lower_diag_index;\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {",
            "code_diff":"@@ -70,6 +70,9 @@ class MatrixSetDiagOp : public OpKernel {\n                   errors::InvalidArgument(\n                       \"diag_index must be a scalar or vector, received shape: \",\n                       diag_index.shape().DebugString()));\n+      OP_REQUIRES(\n+          context, diag_index.NumElements() > 0,\n+          errors::InvalidArgument(\"diag_index must have at least one element\"));\n       lower_diag_index = diag_index.flat<int32>()(0);\n       upper_diag_index = lower_diag_index;\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {"
        },
        {
            "index":81,
            "vuln_id":"GHSA-mc7w-4cjf-c973",
            "cwe_id":"{'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/peterbraden\/node-opencv\/commit\/aaece6921d7368577511f06c94c99dd4e9653563', 'https:\/\/github.com\/peterbraden\/node-opencv\/commit\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b'}",
            "dataset":"osv",
            "summary":"OS Command Injection in node-opencv utils\/find-opencv.js in node-opencv (aka OpenCV bindings for Node.js) prior to 6.1.0 is vulnerable to Command Injection. It does not validate user input allowing attackers to execute arbitrary commands.",
            "published_date":"2021-10-12",
            "chain_len":2,
            "project":"https:\/\/github.com\/peterbraden\/node-opencv",
            "commit_href":"https:\/\/github.com\/peterbraden\/node-opencv\/commit\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b",
            "commit_sha":"81a4b8620188e89f7e4fc985f3c89b58d4bcc86b",
            "patch":"MULTI",
            "chain_ord":"['81a4b8620188e89f7e4fc985f3c89b58d4bcc86b', 'aaece6921d7368577511f06c94c99dd4e9653563']",
            "before_first_fix_commit":"{'58f248af12cbdbccfe88f79637402d4796de3d39'}",
            "last_fix_commit":"aaece6921d7368577511f06c94c99dd4e9653563",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/20\/2019, 08:45:23",
            "message":"Remove untrusted input to exec",
            "author":"Peter Braden",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'utils\/find-opencv.js': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/peterbraden\/node-opencv\/raw\/81a4b8620188e89f7e4fc985f3c89b58d4bcc86b\/utils%2Ffind-opencv.js', 'patch': '@@ -2,13 +2,13 @@\\n \\n var exec = require(\"child_process\").exec;\\n var fs = require(\"fs\");\\n-var flag = process.argv[2] || \"--exists\";\\n+var flag = \"--exists\";\\n \\n \/\/ Normally |pkg-config opencv ...| could report either OpenCV 2.x or OpenCV 3.y\\n \/\/ depending on what is installed.  To enable both 2.x and 3.y to co-exist on\\n \/\/ the same machine, the opencv.pc for 3.y can be installed as opencv3.pc and\\n \/\/ then selected by |export PKG_CONFIG_OPENCV3=1| before building node-opencv.\\n-var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : \\'\"opencv >= 2.3.1\"\\';\\n+var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : \\' \"opencv >= 2.3.1\"\\';\\n \\n function main(){\\n     \/\/Try using pkg-config, but if it fails and it is on Windows, try the fallback\\n@@ -18,7 +18,7 @@ function main(){\\n                 fallback();\\n             }\\n             else{\\n-                throw new Error(\"ERROR: failed to run: pkg-config\", opencv, flag);\\n+              throw new Error(\"ERROR: failed to run: pkg-config\" + opencv + \" \" + flag + \" - Is OpenCV installed?\");\\n             }\\n         }\\n         else{'}}",
            "message_norm":"remove untrusted input to exec",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('untrusted', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['utils\/find-opencv.js'])",
            "num_files":1.0,
            "patch_content":"From 81a4b8620188e89f7e4fc985f3c89b58d4bcc86b Mon Sep 17 00:00:00 2001\nFrom: Peter Braden <peterbraden@peterbraden.co.uk>\nDate: Wed, 20 Mar 2019 08:45:23 +0000\nSubject: [PATCH] Remove untrusted input to exec\n\n---\n utils\/find-opencv.js | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a\/utils\/find-opencv.js b\/utils\/find-opencv.js\nindex c3731add..ece7a669 100644\n--- a\/utils\/find-opencv.js\n+++ b\/utils\/find-opencv.js\n@@ -2,13 +2,13 @@\n \n var exec = require(\"child_process\").exec;\n var fs = require(\"fs\");\n-var flag = process.argv[2] || \"--exists\";\n+var flag = \"--exists\";\n \n \/\/ Normally |pkg-config opencv ...| could report either OpenCV 2.x or OpenCV 3.y\n \/\/ depending on what is installed.  To enable both 2.x and 3.y to co-exist on\n \/\/ the same machine, the opencv.pc for 3.y can be installed as opencv3.pc and\n \/\/ then selected by |export PKG_CONFIG_OPENCV3=1| before building node-opencv.\n-var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : '\"opencv >= 2.3.1\"';\n+var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : ' \"opencv >= 2.3.1\"';\n \n function main(){\n     \/\/Try using pkg-config, but if it fails and it is on Windows, try the fallback\n@@ -18,7 +18,7 @@ function main(){\n                 fallback();\n             }\n             else{\n-                throw new Error(\"ERROR: failed to run: pkg-config\", opencv, flag);\n+              throw new Error(\"ERROR: failed to run: pkg-config\" + opencv + \" \" + flag + \" - Is OpenCV installed?\");\n             }\n         }\n         else{",
            "code_diff":"@@ -2,13 +2,13 @@\n \n var exec = require(\"child_process\").exec;\n var fs = require(\"fs\");\n-var flag = process.argv[2] || \"--exists\";\n+var flag = \"--exists\";\n \n \/\/ Normally |pkg-config opencv ...| could report either OpenCV 2.x or OpenCV 3.y\n \/\/ depending on what is installed.  To enable both 2.x and 3.y to co-exist on\n \/\/ the same machine, the opencv.pc for 3.y can be installed as opencv3.pc and\n \/\/ then selected by |export PKG_CONFIG_OPENCV3=1| before building node-opencv.\n-var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : '\"opencv >= 2.3.1\"';\n+var opencv = process.env.PKG_CONFIG_OPENCV3 === \"1\" ? \"opencv3\" : ' \"opencv >= 2.3.1\"';\n \n function main(){\n     \/\/Try using pkg-config, but if it fails and it is on Windows, try the fallback\n@@ -18,7 +18,7 @@ function main(){\n                 fallback();\n             }\n             else{\n-                throw new Error(\"ERROR: failed to run: pkg-config\", opencv, flag);\n+              throw new Error(\"ERROR: failed to run: pkg-config\" + opencv + \" \" + flag + \" - Is OpenCV installed?\");\n             }\n         }\n         else{"
        },
        {
            "index":683,
            "vuln_id":"GHSA-6jp6-9rf9-gc66",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/9e19a8414337692cc90da2a91c9af5420f2952f1', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/f6753a1a1c63fade6ad418fbda827c6750ab0bda', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/22d577b1f1e88665a88b4569380148030e0f8389'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Weblate ### Impact\nDue to improper neutralization, it was possible to perform cross-site scripting via crafted user and language names.\n\n### Patches\n\nThe issues were fixed in the 4.11 release. The following commits are addressing it:\n\n* f6753a1a1c63fade6ad418fbda827c6750ab0bda\n* 9e19a8414337692cc90da2a91c9af5420f2952f1\n* 22d577b1f1e88665a88b4569380148030e0f8389\n\n### Workarounds\n\nYou can look for crafted user and language names to see if you were affected.\n\n### References\n* https:\/\/hackerone.com\/reports\/1486674\n* https:\/\/hackerone.com\/reports\/1486718\n* https:\/\/hackerone.com\/reports\/1485226\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)",
            "published_date":"2022-02-25",
            "chain_len":3,
            "project":"https:\/\/github.com\/WeblateOrg\/weblate",
            "commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/f6753a1a1c63fade6ad418fbda827c6750ab0bda",
            "commit_sha":"f6753a1a1c63fade6ad418fbda827c6750ab0bda",
            "patch":"MULTI",
            "chain_ord":"['22d577b1f1e88665a88b4569380148030e0f8389', '9e19a8414337692cc90da2a91c9af5420f2952f1', 'f6753a1a1c63fade6ad418fbda827c6750ab0bda']",
            "before_first_fix_commit":"{'572628cef60e9d839b79b2087960b606a5cca4d8'}",
            "last_fix_commit":"f6753a1a1c63fade6ad418fbda827c6750ab0bda",
            "chain_ord_pos":3.0,
            "commit_datetime":"02\/22\/2022, 20:10:41",
            "message":"translate: Add missing escaping to language name\n\nFixes https:\/\/hackerone.com\/reports\/1486674",
            "author":"Michal \u010ciha\u0159",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'weblate\/trans\/forms.py': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/f6753a1a1c63fade6ad418fbda827c6750ab0bda\/weblate%2Ftrans%2Fforms.py', 'patch': '@@ -37,6 +37,7 @@\\n from django.template.loader import render_to_string\\n from django.urls import reverse\\n from django.utils import timezone\\n+from django.utils.html import escape\\n from django.utils.http import urlencode\\n from django.utils.safestring import mark_safe\\n from django.utils.translation import gettext\\n@@ -318,7 +319,7 @@ def render(self, name, value, attrs=None, renderer=None, **kwargs):\\n             # Render textare\\n             textarea = super().render(fieldname, val, attrs, renderer, **kwargs)\\n             # Label for plural\\n-            label = str(unit.translation.language)\\n+            label = escape(unit.translation.language)\\n             if len(values) != 1:\\n                 label = f\"{label}, {plural.get_plural_label(idx)}\"\\n             ret.append('}}",
            "message_norm":"translate: add missing escaping to language name\n\nfixes https:\/\/hackerone.com\/reports\/1486674",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('escaping', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('https:\/\/hackerone.com\/reports\/1486674', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['weblate\/trans\/forms.py'])",
            "num_files":1.0,
            "patch_content":"From f6753a1a1c63fade6ad418fbda827c6750ab0bda Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Michal=20=C4=8Ciha=C5=99?= <michal@cihar.com>\nDate: Tue, 22 Feb 2022 21:10:41 +0100\nSubject: [PATCH] translate: Add missing escaping to language name\n\nFixes https:\/\/hackerone.com\/reports\/1486674\n---\n weblate\/trans\/forms.py | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/weblate\/trans\/forms.py b\/weblate\/trans\/forms.py\nindex 242ca7f62b60..c9f02a8f6dd6 100644\n--- a\/weblate\/trans\/forms.py\n+++ b\/weblate\/trans\/forms.py\n@@ -37,6 +37,7 @@\n from django.template.loader import render_to_string\n from django.urls import reverse\n from django.utils import timezone\n+from django.utils.html import escape\n from django.utils.http import urlencode\n from django.utils.safestring import mark_safe\n from django.utils.translation import gettext\n@@ -318,7 +319,7 @@ def render(self, name, value, attrs=None, renderer=None, **kwargs):\n             # Render textare\n             textarea = super().render(fieldname, val, attrs, renderer, **kwargs)\n             # Label for plural\n-            label = str(unit.translation.language)\n+            label = escape(unit.translation.language)\n             if len(values) != 1:\n                 label = f\"{label}, {plural.get_plural_label(idx)}\"\n             ret.append(",
            "code_diff":"@@ -37,6 +37,7 @@\n from django.template.loader import render_to_string\n from django.urls import reverse\n from django.utils import timezone\n+from django.utils.html import escape\n from django.utils.http import urlencode\n from django.utils.safestring import mark_safe\n from django.utils.translation import gettext\n@@ -318,7 +319,7 @@ def render(self, name, value, attrs=None, renderer=None, **kwargs):\n             # Render textare\n             textarea = super().render(fieldname, val, attrs, renderer, **kwargs)\n             # Label for plural\n-            label = str(unit.translation.language)\n+            label = escape(unit.translation.language)\n             if len(values) != 1:\n                 label = f\"{label}, {plural.get_plural_label(idx)}\"\n             ret.append("
        },
        {
            "index":280,
            "vuln_id":"GHSA-72wf-hwcq-65h9",
            "cwe_id":"{'CWE-352'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/filebrowser\/filebrowser\/commit\/74b7cd8e81840537a8206317344f118093153e8d'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery in Filebrowser A Cross-Site Request Forgery (CSRF) vulnerability exists in Filebrowser < 2.18.0 that allows attackers to create a backdoor user with admin privilege and get access to the filesystem via a malicious HTML webpage that is sent to the victim.",
            "published_date":"2022-02-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/filebrowser\/filebrowser",
            "commit_href":"https:\/\/github.com\/filebrowser\/filebrowser\/commit\/74b7cd8e81840537a8206317344f118093153e8d",
            "commit_sha":"74b7cd8e81840537a8206317344f118093153e8d",
            "patch":"SINGLE",
            "chain_ord":"['74b7cd8e81840537a8206317344f118093153e8d']",
            "before_first_fix_commit":"{'6cb51b4eb4751b49e7d3458c4a23589ccf16790b'}",
            "last_fix_commit":"74b7cd8e81840537a8206317344f118093153e8d",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/31\/2021, 16:13:16",
            "message":"fix: security issue in command runner (closes #1621)",
            "author":"Oleg Lobanov",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 6, 'total': 12}",
            "files":"{'http\/commands.go': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/filebrowser\/filebrowser\/raw\/74b7cd8e81840537a8206317344f118093153e8d\/http%2Fcommands.go', 'patch': '@@ -59,19 +59,19 @@ var commandsHandler = withUser(func(w http.ResponseWriter, r *http.Request, d *d\\n \\t\\t}\\n \\t}\\n \\n-\\tif !d.server.EnableExec || !d.user.CanExecute(strings.Split(raw, \" \")[0]) {\\n-\\t\\tif err := conn.WriteMessage(websocket.TextMessage, cmdNotAllowed); err != nil { \/\/nolint:govet\\n+\\tcommand, err := runner.ParseCommand(d.settings, raw)\\n+\\tif err != nil {\\n+\\t\\tif err := conn.WriteMessage(websocket.TextMessage, []byte(err.Error())); err != nil { \/\/nolint:govet\\n \\t\\t\\twsErr(conn, r, http.StatusInternalServerError, err)\\n \\t\\t}\\n-\\n \\t\\treturn 0, nil\\n \\t}\\n \\n-\\tcommand, err := runner.ParseCommand(d.settings, raw)\\n-\\tif err != nil {\\n-\\t\\tif err := conn.WriteMessage(websocket.TextMessage, []byte(err.Error())); err != nil { \/\/nolint:govet\\n+\\tif !d.server.EnableExec || !d.user.CanExecute(command[0]) {\\n+\\t\\tif err := conn.WriteMessage(websocket.TextMessage, cmdNotAllowed); err != nil { \/\/nolint:govet\\n \\t\\t\\twsErr(conn, r, http.StatusInternalServerError, err)\\n \\t\\t}\\n+\\n \\t\\treturn 0, nil\\n \\t}'}}",
            "message_norm":"fix: security issue in command runner (closes #1621)",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('#1621', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['http\/commands.go'])",
            "num_files":1.0,
            "patch_content":"From 74b7cd8e81840537a8206317344f118093153e8d Mon Sep 17 00:00:00 2001\nFrom: Oleg Lobanov <oleg@lobanov.me>\nDate: Sun, 31 Oct 2021 17:13:16 +0100\nSubject: [PATCH] fix: security issue in command runner (closes #1621)\n\n---\n http\/commands.go | 12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ndiff --git a\/http\/commands.go b\/http\/commands.go\nindex 173e57a916..48c7f29788 100644\n--- a\/http\/commands.go\n+++ b\/http\/commands.go\n@@ -59,19 +59,19 @@ var commandsHandler = withUser(func(w http.ResponseWriter, r *http.Request, d *d\n \t\t}\n \t}\n \n-\tif !d.server.EnableExec || !d.user.CanExecute(strings.Split(raw, \" \")[0]) {\n-\t\tif err := conn.WriteMessage(websocket.TextMessage, cmdNotAllowed); err != nil { \/\/nolint:govet\n+\tcommand, err := runner.ParseCommand(d.settings, raw)\n+\tif err != nil {\n+\t\tif err := conn.WriteMessage(websocket.TextMessage, []byte(err.Error())); err != nil { \/\/nolint:govet\n \t\t\twsErr(conn, r, http.StatusInternalServerError, err)\n \t\t}\n-\n \t\treturn 0, nil\n \t}\n \n-\tcommand, err := runner.ParseCommand(d.settings, raw)\n-\tif err != nil {\n-\t\tif err := conn.WriteMessage(websocket.TextMessage, []byte(err.Error())); err != nil { \/\/nolint:govet\n+\tif !d.server.EnableExec || !d.user.CanExecute(command[0]) {\n+\t\tif err := conn.WriteMessage(websocket.TextMessage, cmdNotAllowed); err != nil { \/\/nolint:govet\n \t\t\twsErr(conn, r, http.StatusInternalServerError, err)\n \t\t}\n+\n \t\treturn 0, nil\n \t}",
            "code_diff":"@@ -59,19 +59,19 @@ var commandsHandler = withUser(func(w http.ResponseWriter, r *http.Request, d *d\n \t\t}\n \t}\n \n-\tif !d.server.EnableExec || !d.user.CanExecute(strings.Split(raw, \" \")[0]) {\n-\t\tif err := conn.WriteMessage(websocket.TextMessage, cmdNotAllowed); err != nil { \/\/nolint:govet\n+\tcommand, err := runner.ParseCommand(d.settings, raw)\n+\tif err != nil {\n+\t\tif err := conn.WriteMessage(websocket.TextMessage, []byte(err.Error())); err != nil { \/\/nolint:govet\n \t\t\twsErr(conn, r, http.StatusInternalServerError, err)\n \t\t}\n-\n \t\treturn 0, nil\n \t}\n \n-\tcommand, err := runner.ParseCommand(d.settings, raw)\n-\tif err != nil {\n-\t\tif err := conn.WriteMessage(websocket.TextMessage, []byte(err.Error())); err != nil { \/\/nolint:govet\n+\tif !d.server.EnableExec || !d.user.CanExecute(command[0]) {\n+\t\tif err := conn.WriteMessage(websocket.TextMessage, cmdNotAllowed); err != nil { \/\/nolint:govet\n \t\t\twsErr(conn, r, http.StatusInternalServerError, err)\n \t\t}\n+\n \t\treturn 0, nil\n \t}"
        },
        {
            "index":285,
            "vuln_id":"GHSA-m43c-649m-pm48",
            "cwe_id":"{'CWE-190'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/9726\/commits\/c58152d94ba878b2d7d76bcac59146312199b9eb'}",
            "dataset":"osv",
            "summary":"Integer Overflow or Wraparound in OpenCV. In opencv\/modules\/imgcodecs\/src\/utils.cpp, functions FillUniColor and FillUniGray do not check the input length, which can lead to integer overflow. If the image is from remote, may lead to remote code execution or denial of service. This affects Opencv 3.3 (corresponding with OpenCV-Python 3.3.0.9) and earlier.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencv\/opencv",
            "commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/9726\/commits\/c58152d94ba878b2d7d76bcac59146312199b9eb",
            "commit_sha":"c58152d94ba878b2d7d76bcac59146312199b9eb",
            "patch":"SINGLE",
            "chain_ord":"['c58152d94ba878b2d7d76bcac59146312199b9eb']",
            "before_first_fix_commit":"{'7475d23fec4bb7c7e2b662a0fa022d706dd2b520'}",
            "last_fix_commit":"c58152d94ba878b2d7d76bcac59146312199b9eb",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/27\/2017, 06:04:01",
            "message":"Fix out of bounds write",
            "author":"blendin",
            "comments":"{'com_1': {'author': 'tyomitch', 'datetime': '04\/29\/2019, 11:17:11', 'body': 'CVE-2017-1000450'}}",
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'modules\/imgcodecs\/src\/grfmt_bmp.cpp': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/c58152d94ba878b2d7d76bcac59146312199b9eb\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_bmp.cpp', 'patch': '@@ -375,6 +375,9 @@ decode_rle4_bad: ;\\n                                                 gray_palette[code] );\\n \\n                         line_end_flag = y - prev_y;\\n+\\n+                        if( y >= m_height )\\n+                            break;\\n                     }\\n                     else if( code > 2 ) \/\/ absolute mode\\n                     {'}}",
            "message_norm":"fix out of bounds write",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('out of bounds write', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_bmp.cpp'])",
            "num_files":1.0,
            "patch_content":"From c58152d94ba878b2d7d76bcac59146312199b9eb Mon Sep 17 00:00:00 2001\nFrom: blendin <btiszka@gmail.com>\nDate: Tue, 26 Sep 2017 23:04:01 -0700\nSubject: [PATCH] Fix out of bounds write\n\n---\n modules\/imgcodecs\/src\/grfmt_bmp.cpp | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/modules\/imgcodecs\/src\/grfmt_bmp.cpp b\/modules\/imgcodecs\/src\/grfmt_bmp.cpp\nindex 3c7edf0f9811..45e02ceae6fc 100644\n--- a\/modules\/imgcodecs\/src\/grfmt_bmp.cpp\n+++ b\/modules\/imgcodecs\/src\/grfmt_bmp.cpp\n@@ -375,6 +375,9 @@ decode_rle4_bad: ;\n                                                 gray_palette[code] );\n \n                         line_end_flag = y - prev_y;\n+\n+                        if( y >= m_height )\n+                            break;\n                     }\n                     else if( code > 2 ) \/\/ absolute mode\n                     {",
            "code_diff":"@@ -375,6 +375,9 @@ decode_rle4_bad: ;\n                                                 gray_palette[code] );\n \n                         line_end_flag = y - prev_y;\n+\n+                        if( y >= m_height )\n+                            break;\n                     }\n                     else if( code > 2 ) \/\/ absolute mode\n                     {"
        },
        {
            "index":206,
            "vuln_id":"GHSA-vhfp-9wvj-gwvg",
            "cwe_id":"{'CWE-611'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/modxcms\/revolution\/pull\/15238\/commits\/1b7ffe02df30f05dbf67dd15e4d8101687c1585a'}",
            "dataset":"osv",
            "summary":"XML External Entity vulnerability in MODX CMS A XML External Entity (XXE) vulnerability was discovered in the modRestServiceRequest component in MODX CMS 2.7.3 which can lead to an information disclosure or denial of service (DOS).",
            "published_date":"2021-11-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/modxcms\/revolution",
            "commit_href":"https:\/\/github.com\/modxcms\/revolution\/pull\/15238\/commits\/1b7ffe02df30f05dbf67dd15e4d8101687c1585a",
            "commit_sha":"1b7ffe02df30f05dbf67dd15e4d8101687c1585a",
            "patch":"SINGLE",
            "chain_ord":"['1b7ffe02df30f05dbf67dd15e4d8101687c1585a']",
            "before_first_fix_commit":"{'97b4e469500d54cf55a889b18f466a9cc6573983'}",
            "last_fix_commit":"1b7ffe02df30f05dbf67dd15e4d8101687c1585a",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/18\/2020, 09:14:28",
            "message":"Prevent potential XXE vulnerability in modRestService by disabling the libxml entity loader [#15237]\n\nThe libxml_disable_entity_loader function is deprecated in PHP8, and the entity loader is automatically enabled on v2.9.0+ of libxml which may have been used pre-PHP8 as well. PHP8 comes with at least v2.9.0+ of libxml bundled, so this conditional covers both scenarios.\n\nRef: https:\/\/github.com\/php\/php-src\/pull\/5867",
            "author":"Mark Hamstra",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 1, 'total': 10}",
            "files":"{'core\/model\/modx\/rest\/modrestservice.class.php': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/modxcms\/revolution\/raw\/1b7ffe02df30f05dbf67dd15e4d8101687c1585a\/core%2Fmodel%2Fmodx%2Frest%2Fmodrestservice.class.php', 'patch': \"@@ -59,6 +59,7 @@ public function __construct(modX &$modx,array $config = array()) {\\n             'responseSuccessKey' => 'success',\\n             'trimParameters' => false,\\n             'xmlRootNode' => 'response',\\n+            'xmlDisableEntityLoader' => true,\\n \\t\\t),$config);\\n \\t\\t$this->modx->getService('lexicon','modLexicon');\\n         if ($this->modx->lexicon) {\\n@@ -397,7 +398,14 @@ protected function _collectRequestParameters() {\\n             case 'text\/xml':\\n                 $data = stream_get_contents($filehandle);\\n                 fclose($filehandle);\\n-                $xml = simplexml_load_string($data);\\n+                if (LIBXML_VERSION < 20900 && $this->service->getOption('xmlDisableEntityLoader')) {\\n+                    $disableEntities = libxml_disable_entity_loader(true);\\n+                    $xml = simplexml_load_string($data);\\n+                    libxml_disable_entity_loader($disableEntities);\\n+                }\\n+                else {\\n+                    $xml = simplexml_load_string($data);\\n+                }\\n                 $params = $this->_xml2array($xml);\\n                 break;\\n             case 'application\/json':\"}}",
            "message_norm":"prevent potential xxe vulnerability in modrestservice by disabling the libxml entity loader [#15237]\n\nthe libxml_disable_entity_loader function is deprecated in php8, and the entity loader is automatically enabled on v2.9.0+ of libxml which may have been used pre-php8 as well. php8 comes with at least v2.9.0+ of libxml bundled, so this conditional covers both scenarios.\n\nref: https:\/\/github.com\/php\/php-src\/pull\/5867",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('xxe', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('#15237', 'ISSUE', ''), ('v2.9.0', 'VERSION', ''), ('v2.9.0', 'VERSION', ''), ('https:\/\/github.com\/php\/php-src\/pull\/5867', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/model\/modx\/rest\/modrestservice.class.php'])",
            "num_files":1.0,
            "patch_content":"From 1b7ffe02df30f05dbf67dd15e4d8101687c1585a Mon Sep 17 00:00:00 2001\nFrom: Mark Hamstra <hello@markhamstra.com>\nDate: Fri, 18 Sep 2020 11:14:28 +0200\nSubject: [PATCH] Prevent potential XXE vulnerability in modRestService by\n disabling the libxml entity loader [#15237]\n\nThe libxml_disable_entity_loader function is deprecated in PHP8, and the entity loader is automatically enabled on v2.9.0+ of libxml which may have been used pre-PHP8 as well. PHP8 comes with at least v2.9.0+ of libxml bundled, so this conditional covers both scenarios.\n\nRef: https:\/\/github.com\/php\/php-src\/pull\/5867\n---\n core\/model\/modx\/rest\/modrestservice.class.php | 10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ndiff --git a\/core\/model\/modx\/rest\/modrestservice.class.php b\/core\/model\/modx\/rest\/modrestservice.class.php\nindex 92513c86702..82b12484133 100644\n--- a\/core\/model\/modx\/rest\/modrestservice.class.php\n+++ b\/core\/model\/modx\/rest\/modrestservice.class.php\n@@ -59,6 +59,7 @@ public function __construct(modX &$modx,array $config = array()) {\n             'responseSuccessKey' => 'success',\n             'trimParameters' => false,\n             'xmlRootNode' => 'response',\n+            'xmlDisableEntityLoader' => true,\n \t\t),$config);\n \t\t$this->modx->getService('lexicon','modLexicon');\n         if ($this->modx->lexicon) {\n@@ -397,7 +398,14 @@ protected function _collectRequestParameters() {\n             case 'text\/xml':\n                 $data = stream_get_contents($filehandle);\n                 fclose($filehandle);\n-                $xml = simplexml_load_string($data);\n+                if (LIBXML_VERSION < 20900 && $this->service->getOption('xmlDisableEntityLoader')) {\n+                    $disableEntities = libxml_disable_entity_loader(true);\n+                    $xml = simplexml_load_string($data);\n+                    libxml_disable_entity_loader($disableEntities);\n+                }\n+                else {\n+                    $xml = simplexml_load_string($data);\n+                }\n                 $params = $this->_xml2array($xml);\n                 break;\n             case 'application\/json':",
            "code_diff":"@@ -59,6 +59,7 @@ public function __construct(modX &$modx,array $config = array()) {\n             'responseSuccessKey' => 'success',\n             'trimParameters' => false,\n             'xmlRootNode' => 'response',\n+            'xmlDisableEntityLoader' => true,\n \t\t),$config);\n \t\t$this->modx->getService('lexicon','modLexicon');\n         if ($this->modx->lexicon) {\n@@ -397,7 +398,14 @@ protected function _collectRequestParameters() {\n             case 'text\/xml':\n                 $data = stream_get_contents($filehandle);\n                 fclose($filehandle);\n-                $xml = simplexml_load_string($data);\n+                if (LIBXML_VERSION < 20900 && $this->service->getOption('xmlDisableEntityLoader')) {\n+                    $disableEntities = libxml_disable_entity_loader(true);\n+                    $xml = simplexml_load_string($data);\n+                    libxml_disable_entity_loader($disableEntities);\n+                }\n+                else {\n+                    $xml = simplexml_load_string($data);\n+                }\n                 $params = $this->_xml2array($xml);\n                 break;\n             case 'application\/json':"
        },
        {
            "index":618,
            "vuln_id":"GHSA-hvr8-466p-75rh",
            "cwe_id":"{'CWE-119'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/python-pillow\/Pillow\/commit\/4e0d9b0b9740d258ade40cce248c93777362ac1e'}",
            "dataset":"osv",
            "summary":"Integer overflow discovered in Pillow  Integer overflow in the ImagingResampleHorizontal function in libImaging\/Resample.c in Pillow before 3.1.1 allows remote attackers to have unspecified impact via negative values of the new size, which triggers a heap-based buffer overflow.",
            "published_date":"2018-07-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/python-pillow\/Pillow",
            "commit_href":"https:\/\/github.com\/python-pillow\/Pillow\/commit\/4e0d9b0b9740d258ade40cce248c93777362ac1e",
            "commit_sha":"4e0d9b0b9740d258ade40cce248c93777362ac1e",
            "patch":"SINGLE",
            "chain_ord":"['4e0d9b0b9740d258ade40cce248c93777362ac1e']",
            "before_first_fix_commit":"{'bdd86b72ae38874b6bdaf27458a5ed00df0cd3d5'}",
            "last_fix_commit":"4e0d9b0b9740d258ade40cce248c93777362ac1e",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/04\/2016, 06:54:12",
            "message":"fix integer overflow in Resample.c",
            "author":"Ned Williamson",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'libImaging\/Resample.c': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/python-pillow\/Pillow\/raw\/4e0d9b0b9740d258ade40cce248c93777362ac1e\/libImaging%2FResample.c', 'patch': '@@ -138,11 +138,23 @@ ImagingResampleHorizontal(Imaging imIn, int xsize, int filter)\\n     \/* maximum number of coofs *\/\\n     kmax = (int) ceil(support) * 2 + 1;\\n \\n+    \/\/ check for overflow\\n+    if (kmax > 0 && xsize > SIZE_MAX \/ kmax)\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n+    \/\/ sizeof(float) should be greater than 0\\n+    if (xsize * kmax > SIZE_MAX \/ sizeof(float))\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n     \/* coefficient buffer *\/\\n     kk = malloc(xsize * kmax * sizeof(float));\\n     if ( ! kk)\\n         return (Imaging) ImagingError_MemoryError();\\n \\n+    \/\/ sizeof(int) should be greater than 0 as well\\n+    if (xsize > SIZE_MAX \/ (2 * sizeof(int)))\\n+        return (Imaging) ImagingError_MemoryError();\\n+\\n     xbounds = malloc(xsize * 2 * sizeof(int));\\n     if ( ! xbounds) {\\n         free(kk);'}}",
            "message_norm":"fix integer overflow in resample.c",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('integer overflow', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['libImaging\/Resample.c'])",
            "num_files":1.0,
            "patch_content":"From 4e0d9b0b9740d258ade40cce248c93777362ac1e Mon Sep 17 00:00:00 2001\nFrom: Ned Williamson <nedwilliamson@gmail.com>\nDate: Thu, 4 Feb 2016 01:54:12 -0500\nSubject: [PATCH] fix integer overflow in Resample.c\n\n---\n libImaging\/Resample.c | 12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ndiff --git a\/libImaging\/Resample.c b\/libImaging\/Resample.c\nindex 103e07e4b9d..0d401c1df99 100644\n--- a\/libImaging\/Resample.c\n+++ b\/libImaging\/Resample.c\n@@ -138,11 +138,23 @@ ImagingResampleHorizontal(Imaging imIn, int xsize, int filter)\n     \/* maximum number of coofs *\/\n     kmax = (int) ceil(support) * 2 + 1;\n \n+    \/\/ check for overflow\n+    if (kmax > 0 && xsize > SIZE_MAX \/ kmax)\n+        return (Imaging) ImagingError_MemoryError();\n+\n+    \/\/ sizeof(float) should be greater than 0\n+    if (xsize * kmax > SIZE_MAX \/ sizeof(float))\n+        return (Imaging) ImagingError_MemoryError();\n+\n     \/* coefficient buffer *\/\n     kk = malloc(xsize * kmax * sizeof(float));\n     if ( ! kk)\n         return (Imaging) ImagingError_MemoryError();\n \n+    \/\/ sizeof(int) should be greater than 0 as well\n+    if (xsize > SIZE_MAX \/ (2 * sizeof(int)))\n+        return (Imaging) ImagingError_MemoryError();\n+\n     xbounds = malloc(xsize * 2 * sizeof(int));\n     if ( ! xbounds) {\n         free(kk);",
            "code_diff":"@@ -138,11 +138,23 @@ ImagingResampleHorizontal(Imaging imIn, int xsize, int filter)\n     \/* maximum number of coofs *\/\n     kmax = (int) ceil(support) * 2 + 1;\n \n+    \/\/ check for overflow\n+    if (kmax > 0 && xsize > SIZE_MAX \/ kmax)\n+        return (Imaging) ImagingError_MemoryError();\n+\n+    \/\/ sizeof(float) should be greater than 0\n+    if (xsize * kmax > SIZE_MAX \/ sizeof(float))\n+        return (Imaging) ImagingError_MemoryError();\n+\n     \/* coefficient buffer *\/\n     kk = malloc(xsize * kmax * sizeof(float));\n     if ( ! kk)\n         return (Imaging) ImagingError_MemoryError();\n \n+    \/\/ sizeof(int) should be greater than 0 as well\n+    if (xsize > SIZE_MAX \/ (2 * sizeof(int)))\n+        return (Imaging) ImagingError_MemoryError();\n+\n     xbounds = malloc(xsize * 2 * sizeof(int));\n     if ( ! xbounds) {\n         free(kk);"
        },
        {
            "index":922,
            "vuln_id":"GHSA-j7c4-2xj8-wm7r",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/latchset\/kdcproxy\/commit\/f274aa6787cb8b3ec1cc12c440a56665b7231882'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects kdcproxy python-kdcproxy before 0.3.2 allows remote attackers to cause a denial of service via a large POST request.",
            "published_date":"2018-11-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/latchset\/kdcproxy",
            "commit_href":"https:\/\/github.com\/latchset\/kdcproxy\/commit\/f274aa6787cb8b3ec1cc12c440a56665b7231882",
            "commit_sha":"f274aa6787cb8b3ec1cc12c440a56665b7231882",
            "patch":"SINGLE",
            "chain_ord":"['f274aa6787cb8b3ec1cc12c440a56665b7231882']",
            "before_first_fix_commit":"{'e4a71193099cd395578bcf32f4eb8beaa7da3e43'}",
            "last_fix_commit":"f274aa6787cb8b3ec1cc12c440a56665b7231882",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/03\/2015, 18:38:49",
            "message":"Enforce a maximum packet length\n\nPermanently fixes CVE-2015-5159 for all applications.",
            "author":"Nathaniel McCallum",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'kdcproxy\/__init__.py': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/latchset\/kdcproxy\/raw\/f274aa6787cb8b3ec1cc12c440a56665b7231882\/kdcproxy%2F__init__.py', 'patch': '@@ -61,6 +61,7 @@ def __str__(self):\\n \\n \\n class Application:\\n+    MAX_LENGTH = 128 * 1024\\n     SOCKTYPES = {\\n         \"tcp\": socket.SOCK_STREAM,\\n         \"udp\": socket.SOCK_DGRAM,\\n@@ -180,7 +181,11 @@ def __call__(self, env, start_response):\\n             try:\\n                 length = int(env[\"CONTENT_LENGTH\"])\\n             except AttributeError:\\n-                length = -1\\n+                raise HTTPException(411, \"Length required.\")\\n+            if length < 0:\\n+                raise HTTPException(411, \"Length required.\")\\n+            if length > self.MAX_LENGTH:\\n+                raise HTTPException(413, \"Request entity too large.\")\\n             try:\\n                 pr = codec.decode(env[\"wsgi.input\"].read(length))\\n             except codec.ParsingError as e:'}}",
            "message_norm":"enforce a maximum packet length\n\npermanently fixes cve-2015-5159 for all applications.",
            "language":"en",
            "entities":"[('fixes', 'ACTION', ''), ('cve-2015-5159', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['kdcproxy\/__init__.py'])",
            "num_files":1.0,
            "patch_content":"From f274aa6787cb8b3ec1cc12c440a56665b7231882 Mon Sep 17 00:00:00 2001\nFrom: Nathaniel McCallum <npmccallum@redhat.com>\nDate: Mon, 3 Aug 2015 14:38:49 -0400\nSubject: [PATCH] Enforce a maximum packet length\n\nPermanently fixes CVE-2015-5159 for all applications.\n---\n kdcproxy\/__init__.py | 7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ndiff --git a\/kdcproxy\/__init__.py b\/kdcproxy\/__init__.py\nindex 865abac..9fc1418 100644\n--- a\/kdcproxy\/__init__.py\n+++ b\/kdcproxy\/__init__.py\n@@ -61,6 +61,7 @@ def __str__(self):\n \n \n class Application:\n+    MAX_LENGTH = 128 * 1024\n     SOCKTYPES = {\n         \"tcp\": socket.SOCK_STREAM,\n         \"udp\": socket.SOCK_DGRAM,\n@@ -180,7 +181,11 @@ def __call__(self, env, start_response):\n             try:\n                 length = int(env[\"CONTENT_LENGTH\"])\n             except AttributeError:\n-                length = -1\n+                raise HTTPException(411, \"Length required.\")\n+            if length < 0:\n+                raise HTTPException(411, \"Length required.\")\n+            if length > self.MAX_LENGTH:\n+                raise HTTPException(413, \"Request entity too large.\")\n             try:\n                 pr = codec.decode(env[\"wsgi.input\"].read(length))\n             except codec.ParsingError as e:",
            "code_diff":"@@ -61,6 +61,7 @@ def __str__(self):\n \n \n class Application:\n+    MAX_LENGTH = 128 * 1024\n     SOCKTYPES = {\n         \"tcp\": socket.SOCK_STREAM,\n         \"udp\": socket.SOCK_DGRAM,\n@@ -180,7 +181,11 @@ def __call__(self, env, start_response):\n             try:\n                 length = int(env[\"CONTENT_LENGTH\"])\n             except AttributeError:\n-                length = -1\n+                raise HTTPException(411, \"Length required.\")\n+            if length < 0:\n+                raise HTTPException(411, \"Length required.\")\n+            if length > self.MAX_LENGTH:\n+                raise HTTPException(413, \"Request entity too large.\")\n             try:\n                 pr = codec.decode(env[\"wsgi.input\"].read(length))\n             except codec.ParsingError as e:"
        },
        {
            "index":41,
            "vuln_id":"GHSA-wc69-rhjr-hc9g",
            "cwe_id":"{'CWE-400', 'CWE-1333'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/moment\/moment\/commit\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3'}",
            "dataset":"osv",
            "summary":"Inefficient Regular Expression Complexity in moment ### Impact\n\n* using string-to-date parsing in moment (more specifically rfc2822 parsing, which is tried by default) has quadratic (N^2) complexity on specific inputs\n* noticeable slowdown is observed with inputs above 10k characters\n* users who pass user-provided strings without sanity length checks to moment constructor are vulnerable to (Re)DoS attacks\n\n### Patches\nThe problem is patched in 2.29.4, the patch can be applied to all affected versions with minimal tweaking.\n\n### Workarounds\nIn general, given the proliferation of ReDoS attacks, it makes sense to limit the length of the user input to something sane, like 200 characters or less. I haven't seen legitimate cases of date-time strings longer than that, so all moment users who do pass a user-originating string to constructor are encouraged to apply such a rudimentary filter, that would help with this but also most future ReDoS vulnerabilities.\n\n### References\nThere is an excellent writeup of the issue here: https:\/\/github.com\/moment\/moment\/pull\/6015#issuecomment-1152961973=\n\n### Details\nThe issue is rooted in the code that removes legacy comments (stuff inside parenthesis) from strings during rfc2822 parsing. `moment(\"(\".repeat(500000))` will take a few minutes to process, which is unacceptable.",
            "published_date":"2022-07-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/moment\/moment",
            "commit_href":"https:\/\/github.com\/moment\/moment\/commit\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3",
            "commit_sha":"9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3",
            "patch":"SINGLE",
            "chain_ord":"['9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3']",
            "before_first_fix_commit":"{'6374fd860aeff75e6c9d9d11540c6b22bc7ef175'}",
            "last_fix_commit":"9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/06\/2022, 15:28:25",
            "message":"[bugfix] Fix redos in preprocessRFC2822 regex (#6015)\n\n* fix ReDoS in preprocessRFC2822 regex\r\n\r\nFixes: [#2936](https:\/\/github.com\/moment\/moment\/issues\/6012)\r\n\r\nDisallow nested rfc2822 comments to prevent quadratic regex execution time (i.e each open bracket is considered at most twice).",
            "author":"Khang Vo (doublevkay)",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/lib\/create\/from-string.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moment\/moment\/raw\/9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3\/src%2Flib%2Fcreate%2Ffrom-string.js', 'patch': \"@@ -151,7 +151,7 @@ function untruncateYear(yearStr) {\\n function preprocessRFC2822(s) {\\n     \/\/ Remove comments and folding whitespace and replace multiple-spaces with a single space\\n     return s\\n-        .replace(\/\\\\([^)]*\\\\)|[\\\\n\\\\t]\/g, ' ')\\n+        .replace(\/\\\\([^()]*\\\\)|[\\\\n\\\\t]\/g, ' ')\\n         .replace(\/(\\\\s\\\\s+)\/g, ' ')\\n         .replace(\/^\\\\s\\\\s*\/, '')\\n         .replace(\/\\\\s\\\\s*$\/, '');\"}}",
            "message_norm":"[bugfix] fix redos in preprocessrfc2822 regex (#6015)\n\n* fix redos in preprocessrfc2822 regex\r\n\r\nfixes: [#2936](https:\/\/github.com\/moment\/moment\/issues\/6012)\r\n\r\ndisallow nested rfc2822 comments to prevent quadratic regex execution time (i.e each open bracket is considered at most twice).",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('preprocessrfc2822', 'SECWORD', ''), ('#6015', 'ISSUE', ''), ('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('preprocessrfc2822', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#2936](https:\/\/github.com', 'ISSUE', ''), ('issues\/6012', 'FLAW', ''), ('prevent', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/create\/from-string.js'])",
            "num_files":1.0,
            "patch_content":"From 9a3b5894f3d5d602948ac8a02e4ee528a49ca3a3 Mon Sep 17 00:00:00 2001\nFrom: \"Khang Vo (doublevkay)\" <45411113+vovikhangcdv@users.noreply.github.com>\nDate: Wed, 6 Jul 2022 22:28:25 +0700\nSubject: [PATCH] [bugfix] Fix redos in preprocessRFC2822 regex (#6015)\n\n* fix ReDoS in preprocessRFC2822 regex\n\nFixes: [#2936](https:\/\/github.com\/moment\/moment\/issues\/6012)\n\nDisallow nested rfc2822 comments to prevent quadratic regex execution time (i.e each open bracket is considered at most twice).\n---\n src\/lib\/create\/from-string.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/lib\/create\/from-string.js b\/src\/lib\/create\/from-string.js\nindex 5c4d11f740..58739b9d7c 100644\n--- a\/src\/lib\/create\/from-string.js\n+++ b\/src\/lib\/create\/from-string.js\n@@ -151,7 +151,7 @@ function untruncateYear(yearStr) {\n function preprocessRFC2822(s) {\n     \/\/ Remove comments and folding whitespace and replace multiple-spaces with a single space\n     return s\n-        .replace(\/\\([^)]*\\)|[\\n\\t]\/g, ' ')\n+        .replace(\/\\([^()]*\\)|[\\n\\t]\/g, ' ')\n         .replace(\/(\\s\\s+)\/g, ' ')\n         .replace(\/^\\s\\s*\/, '')\n         .replace(\/\\s\\s*$\/, '');",
            "code_diff":"@@ -151,7 +151,7 @@ function untruncateYear(yearStr) {\n function preprocessRFC2822(s) {\n     \/\/ Remove comments and folding whitespace and replace multiple-spaces with a single space\n     return s\n-        .replace(\/\\([^)]*\\)|[\\n\\t]\/g, ' ')\n+        .replace(\/\\([^()]*\\)|[\\n\\t]\/g, ' ')\n         .replace(\/(\\s\\s+)\/g, ' ')\n         .replace(\/^\\s\\s*\/, '')\n         .replace(\/\\s\\s*$\/, '');"
        },
        {
            "index":643,
            "vuln_id":"GHSA-3x96-m42v-hvh5",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/c51285f791e48e536111cd57a9544ccbf7f33961'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Microweber Cross-site Scripting (XSS) - Reflected in GitHub repository microweber\/microweber prior to 1.2.18.",
            "published_date":"2022-06-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/c51285f791e48e536111cd57a9544ccbf7f33961",
            "commit_sha":"c51285f791e48e536111cd57a9544ccbf7f33961",
            "patch":"SINGLE",
            "chain_ord":"['c51285f791e48e536111cd57a9544ccbf7f33961']",
            "before_first_fix_commit":"{'10550ec85018bb0f581edd0ac2aed0d7bc9fe6b1'}",
            "last_fix_commit":"c51285f791e48e536111cd57a9544ccbf7f33961",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/22\/2022, 11:56:16",
            "message":"update",
            "author":"Peter Ivanov",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 3, 'total': 12}",
            "files":"{'userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php': {'additions': 9, 'deletions': 3, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/c51285f791e48e536111cd57a9544ccbf7f33961\/userfiles%2Fmodules%2Fmicroweber%2Ftoolbar%2Feditor_tools%2Fmodule_settings%2Findex.php', 'patch': '@@ -87,11 +87,13 @@\\n     if (isset($_GET[\\'autosize\\'])) {\\n         $autoSize = $_GET[\\'autosize\\'];\\n     }\\n+    $autoSize = xss_clean($autoSize);\\n \\n     $type = \\'\\';\\n     if (isset($_GET[\\'type\\'])) {\\n         $type = $_GET[\\'type\\'];\\n     }\\n+    $type = xss_clean($type);\\n \\n     $mod_id = $mod_orig_id = false;\\n     $is_linked_mod = false;\\n@@ -403,7 +405,9 @@\\n                 if (mw.notification) {\\n                     mw.notification.success(\\'<?php _ejs(\\'Settings are saved\\') ?>\\');\\n                 }\\n+                <?php if (isset($params[\\'id\\'])) : ?>\\n                 mw.reload_module_parent(\\'#<?php print $params[\\'id\\']  ?>\\')\\n+                <?php endif; ?>\\n \\n             });\\n \\n@@ -440,9 +444,11 @@\\n <body class=\"mw-external-loading loading\">\\n <div id=\"settings-main\">\\n     <div id=\"settings-container\">\\n-        <div class=\"mw-module-live-edit-settings <?php print $params[\\'id\\'] ?>\"\\n-             id=\"module-id-<?php print $params[\\'id\\'] ?>\">{content}\\n-        <\/div>\\n+        <?php if (isset($params[\\'id\\'])) : ?>\\n+            <div class=\"mw-module-live-edit-settings <?php print $params[\\'id\\'] ?>\"\\n+                 id=\"module-id-<?php print $params[\\'id\\'] ?>\">{content}\\n+            <\/div>\\n+        <?php endif; ?>\\n     <\/div>\\n <\/div>'}}",
            "message_norm":"update",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php'])",
            "num_files":1.0,
            "patch_content":"From c51285f791e48e536111cd57a9544ccbf7f33961 Mon Sep 17 00:00:00 2001\nFrom: Peter Ivanov <peter@microweber.com>\nDate: Wed, 22 Jun 2022 14:56:16 +0300\nSubject: [PATCH] update\n\n---\n ...\/toolbar\/editor_tools\/module_settings\/index.php   | 12 +++++++++---\n 1 file changed, 9 insertions(+), 3 deletions(-)\n\ndiff --git a\/userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php b\/userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php\nindex 1380f7a3120..a6bc6821ccd 100644\n--- a\/userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php\n+++ b\/userfiles\/modules\/microweber\/toolbar\/editor_tools\/module_settings\/index.php\n@@ -87,11 +87,13 @@\n     if (isset($_GET['autosize'])) {\n         $autoSize = $_GET['autosize'];\n     }\n+    $autoSize = xss_clean($autoSize);\n \n     $type = '';\n     if (isset($_GET['type'])) {\n         $type = $_GET['type'];\n     }\n+    $type = xss_clean($type);\n \n     $mod_id = $mod_orig_id = false;\n     $is_linked_mod = false;\n@@ -403,7 +405,9 @@\n                 if (mw.notification) {\n                     mw.notification.success('<?php _ejs('Settings are saved') ?>');\n                 }\n+                <?php if (isset($params['id'])) : ?>\n                 mw.reload_module_parent('#<?php print $params['id']  ?>')\n+                <?php endif; ?>\n \n             });\n \n@@ -440,9 +444,11 @@\n <body class=\"mw-external-loading loading\">\n <div id=\"settings-main\">\n     <div id=\"settings-container\">\n-        <div class=\"mw-module-live-edit-settings <?php print $params['id'] ?>\"\n-             id=\"module-id-<?php print $params['id'] ?>\">{content}\n-        <\/div>\n+        <?php if (isset($params['id'])) : ?>\n+            <div class=\"mw-module-live-edit-settings <?php print $params['id'] ?>\"\n+                 id=\"module-id-<?php print $params['id'] ?>\">{content}\n+            <\/div>\n+        <?php endif; ?>\n     <\/div>\n <\/div>",
            "code_diff":"@@ -87,11 +87,13 @@\n     if (isset($_GET['autosize'])) {\n         $autoSize = $_GET['autosize'];\n     }\n+    $autoSize = xss_clean($autoSize);\n \n     $type = '';\n     if (isset($_GET['type'])) {\n         $type = $_GET['type'];\n     }\n+    $type = xss_clean($type);\n \n     $mod_id = $mod_orig_id = false;\n     $is_linked_mod = false;\n@@ -403,7 +405,9 @@\n                 if (mw.notification) {\n                     mw.notification.success('<?php _ejs('Settings are saved') ?>');\n                 }\n+                <?php if (isset($params['id'])) : ?>\n                 mw.reload_module_parent('#<?php print $params['id']  ?>')\n+                <?php endif; ?>\n \n             });\n \n@@ -440,9 +444,11 @@\n <body class=\"mw-external-loading loading\">\n <div id=\"settings-main\">\n     <div id=\"settings-container\">\n-        <div class=\"mw-module-live-edit-settings <?php print $params['id'] ?>\"\n-             id=\"module-id-<?php print $params['id'] ?>\">{content}\n-        <\/div>\n+        <?php if (isset($params['id'])) : ?>\n+            <div class=\"mw-module-live-edit-settings <?php print $params['id'] ?>\"\n+                 id=\"module-id-<?php print $params['id'] ?>\">{content}\n+            <\/div>\n+        <?php endif; ?>\n     <\/div>\n <\/div>"
        },
        {
            "index":503,
            "vuln_id":"GHSA-3f99-hvg4-qjwj",
            "cwe_id":"{'CWE-335'}",
            "score":8.7,
            "chain":"{'https:\/\/github.com\/juliangruber\/keypair\/commit\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18'}",
            "dataset":"osv",
            "summary":"Insecure random number generation in keypair ## Description and Impact\n\nA bug in the pseudo-random number generator used by [keypair](https:\/\/github.com\/juliangruber\/keypair) versions up to and including 1.0.3 could allow for weak RSA key generation. This could enable an attacker to decrypt confidential messages or gain authorized access to an account belonging to the victim. We recommend replacing any RSA keys that were generated using keypair version 1.0.3 or earlier.\n\n## Fix\n\n* The [bug](https:\/\/github.com\/juliangruber\/keypair\/blob\/87c62f255baa12c1ec4f98a91600f82af80be6db\/index.js#L1008) in the pseudo-random number generator is fixed in commit [`9596418`](https:\/\/github.com\/juliangruber\/keypair\/commit\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18).\n* If the crypto module is available, it is used instead of the pseudo-random number generator. Also fixed in [`9596418`](https:\/\/github.com\/juliangruber\/keypair\/commit\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18)\n\n## Additional Details\n\nThe specific [line](https:\/\/github.com\/juliangruber\/keypair\/blob\/87c62f255baa12c1ec4f98a91600f82af80be6db\/index.js#L1008) with the flaw is:\n\n```javascript\nb.putByte(String.fromCharCode(next & 0xFF))\n```\n\nThe [definition](https:\/\/github.com\/juliangruber\/keypair\/blob\/87c62f255baa12c1ec4f98a91600f82af80be6db\/index.js#L350-L352) of `putByte` is \n\n```javascript\nutil.ByteBuffer.prototype.putByte = function(b) {\n  this.data += String.fromCharCode(b);\n};\n```\n\nSimplified, this is `String.fromCharCode(String.fromCharCode(next & 0xFF))`. This results in most of the buffer containing zeros. An example generated buffer:\n\n(Note: truncated for brevity)\n\n```\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\\x00\\x00\\x00\\x00\\x04\\x00\\x00\\x00....\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\n```\n\nSince it is masking with 0xFF, approximately 97% of the bytes are converted to zeros. The impact is that each byte in the RNG seed has a 97% chance of being 0 due to incorrect conversion.\n\n## Credit\n\nThis issue was reported to GitHub Security Lab by Ross Wheeler of Axosoft. It was discovered by Axosoft engineer Dan Suceava, who noticed that [keypair](https:\/\/github.com\/juliangruber\/keypair) was regularly generating duplicate RSA keys. GitHub security engineer [@vcsjones (Kevin Jones)](https:\/\/github.com\/vcsjones) independently investigated the problem and identified the cause and source code location of the bug.",
            "published_date":"2021-10-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/juliangruber\/keypair",
            "commit_href":"https:\/\/github.com\/juliangruber\/keypair\/commit\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18",
            "commit_sha":"9596418d3363d3e757676c0b6a8f2d35a9d1cb18",
            "patch":"SINGLE",
            "chain_ord":"['9596418d3363d3e757676c0b6a8f2d35a9d1cb18']",
            "before_first_fix_commit":"{'87c62f255baa12c1ec4f98a91600f82af80be6db'}",
            "last_fix_commit":"9596418d3363d3e757676c0b6a8f2d35a9d1cb18",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/11\/2021, 17:01:56",
            "message":"Merge pull request from GHSA-3f99-hvg4-qjwj\n\n* fix double String.fromCharCode\n\n* use crypto module if available\n\nCo-authored-by: Julian Gruber <julian@juliangruber.com>",
            "author":"Kevin Backhouse",
            "comments":"{'com_1': {'author': 'ChALkeR', 'datetime': '10\/12\/2021, 16:44:04', 'body': \"How is this a fix?\\r\\n\\r\\nThis looks like it still falls back to xorshift128+ for the purpose of ssh keys generation?\\r\\n\\r\\nThat... doesn't look like a good idea perhaps.\\r\\n\\r\\nWhy is `Math.random` based code even present there?\\r\\n\\r\\nThe environments where there is no way to generate the key in a secure way should fail, and not fall back to a predictable pseudo-random generator.\\r\\n\\r\\n_Note: not considering this confidential, as this is all over Twitter now afaik._\"}, 'com_2': {'author': 'juliangruber', 'datetime': '10\/13\/2021, 08:21:54', 'body': \"I'm not a security researcher myself so I'm preferring to relay judgement of this issue to those who are, which has happened in this advisory.\\r\\n\\r\\nAt this point I'm not going to perform any major changes to this library myself. If you want to contribute, would you consider making a docs PR with your concerns, adding a disclaimer to the README?\"}, 'com_3': {'author': 'normanr', 'datetime': '10\/13\/2021, 16:04:03', 'body': 'Thank you for responding promptly to the security researchers and taking the time to merge this security fix. A good example of how to handle security related bug reports.'}}",
            "stats":"{'additions': 6, 'deletions': 2, 'total': 8}",
            "files":"{'index.js': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/juliangruber\/keypair\/raw\/9596418d3363d3e757676c0b6a8f2d35a9d1cb18\/index.js', 'patch': \"@@ -756,7 +756,11 @@ util.createBuffer = function(input, encoding) {\\n  *\/\\n \\n var prng = forge.prng = {};\\n-var crypto = null;\\n+\\n+var crypto;\\n+try {\\n+  crypto = require('crypto');\\n+} catch (_) {}\\n \\n prng.create = function(plugin) {\\n   var ctx = {\\n@@ -1005,7 +1009,7 @@ prng.create = function(plugin) {\\n           \/\/ throw in more pseudo random\\n           next = seed >>> (i << 3);\\n           next ^= Math.floor(Math.random() * 0xFF);\\n-          b.putByte(String.fromCharCode(next & 0xFF));\\n+          b.putByte(next & 0xFF);\\n         }\\n       }\\n     }\"}}",
            "message_norm":"merge pull request from ghsa-3f99-hvg4-qjwj\n\n* fix double string.fromcharcode\n\n* use crypto module if available\n\nco-authored-by: julian gruber <julian@juliangruber.com>",
            "language":"en",
            "entities":"[('ghsa-3f99-hvg4-qjwj', 'VULNID', 'GHSA'), ('fix', 'ACTION', ''), ('crypto', 'SECWORD', ''), ('julian@juliangruber.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 9596418d3363d3e757676c0b6a8f2d35a9d1cb18 Mon Sep 17 00:00:00 2001\nFrom: Kevin Backhouse <kevinbackhouse@github.com>\nDate: Mon, 11 Oct 2021 18:01:56 +0100\nSubject: [PATCH] Merge pull request from GHSA-3f99-hvg4-qjwj\n\n* fix double String.fromCharCode\n\n* use crypto module if available\n\nCo-authored-by: Julian Gruber <julian@juliangruber.com>\n---\n index.js | 8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ndiff --git a\/index.js b\/index.js\nindex 6be61c9..d0557e3 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -756,7 +756,11 @@ util.createBuffer = function(input, encoding) {\n  *\/\n \n var prng = forge.prng = {};\n-var crypto = null;\n+\n+var crypto;\n+try {\n+  crypto = require('crypto');\n+} catch (_) {}\n \n prng.create = function(plugin) {\n   var ctx = {\n@@ -1005,7 +1009,7 @@ prng.create = function(plugin) {\n           \/\/ throw in more pseudo random\n           next = seed >>> (i << 3);\n           next ^= Math.floor(Math.random() * 0xFF);\n-          b.putByte(String.fromCharCode(next & 0xFF));\n+          b.putByte(next & 0xFF);\n         }\n       }\n     }",
            "code_diff":"@@ -756,7 +756,11 @@ util.createBuffer = function(input, encoding) {\n  *\/\n \n var prng = forge.prng = {};\n-var crypto = null;\n+\n+var crypto;\n+try {\n+  crypto = require('crypto');\n+} catch (_) {}\n \n prng.create = function(plugin) {\n   var ctx = {\n@@ -1005,7 +1009,7 @@ prng.create = function(plugin) {\n           \/\/ throw in more pseudo random\n           next = seed >>> (i << 3);\n           next ^= Math.floor(Math.random() * 0xFF);\n-          b.putByte(String.fromCharCode(next & 0xFF));\n+          b.putByte(next & 0xFF);\n         }\n       }\n     }"
        },
        {
            "index":635,
            "vuln_id":"GHSA-cqhr-jqvc-qw9p",
            "cwe_id":"{'CWE-79'}",
            "score":10.0,
            "chain":"{'https:\/\/github.com\/javamelody\/javamelody\/commit\/e0497c1980acebd257d3da78dfde29ae9bdffdf6'}",
            "dataset":"osv",
            "summary":"Java Melody vulnerable to cross-site scripting JavaMelody is a monitoring tool for JavaEE applications. Versions prior to 1.61.0 are vulnerable to a cross-site scripting (XSS) attack. This issue was patched in version 1.61.0, and users are recommended to upgrade to the latest version. There are no known workarounds.",
            "published_date":"2022-07-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/javamelody\/javamelody",
            "commit_href":"https:\/\/github.com\/javamelody\/javamelody\/commit\/e0497c1980acebd257d3da78dfde29ae9bdffdf6",
            "commit_sha":"e0497c1980acebd257d3da78dfde29ae9bdffdf6",
            "patch":"SINGLE",
            "chain_ord":"['e0497c1980acebd257d3da78dfde29ae9bdffdf6']",
            "before_first_fix_commit":"{'7f9460e61bc2d942af3fee19041deda6c8f85816'}",
            "last_fix_commit":"e0497c1980acebd257d3da78dfde29ae9bdffdf6",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/24\/2016, 15:15:22",
            "message":"fix XSS",
            "author":"evernat",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/javamelody\/javamelody\/raw\/e0497c1980acebd257d3da78dfde29ae9bdffdf6\/javamelody-core%2Fsrc%2Fmain%2Fjava%2Fnet%2Fbull%2Fjavamelody%2FHtmlCoreReport.java', 'patch': '@@ -365,7 +365,7 @@ void writeMessageIfNotNull(String message, String partToRedirectTo,\\n \\t\\tif (message != null) {\\r\\n \\t\\t\\twriteln(SCRIPT_BEGIN);\\r\\n \\t\\t\\t\/\/ writeDirectly pour ne pas g\u00e9rer de traductions si le message contient \\'#\\'\\r\\n-\\t\\t\\twriteDirectly(\"alert(\\\\\"\" + javascriptEncode(message) + \"\\\\\");\");\\r\\n+\\t\\t\\twriteDirectly(\"alert(\\\\\"\" + htmlEncodeButNotSpace(javascriptEncode(message)) + \"\\\\\");\");\\r\\n \\t\\t\\twriteln(\"\");\\r\\n \\t\\t\\t\/\/ redirect vers une url \u00e9vitant que F5 du navigateur ne refasse l\\'action au lieu de faire un refresh\\r\\n \\t\\t\\tif (partToRedirectTo == null) {'}}",
            "message_norm":"fix xss",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java'])",
            "num_files":1.0,
            "patch_content":"From e0497c1980acebd257d3da78dfde29ae9bdffdf6 Mon Sep 17 00:00:00 2001\nFrom: evernat <evernat@free.fr>\nDate: Wed, 24 Aug 2016 17:15:22 +0200\nSubject: [PATCH] fix XSS\n\n---\n ...\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java       | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java b\/javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java\nindex 7571b0dec..d02aa6af9 100644\n--- a\/javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java\n+++ b\/javamelody-core\/src\/main\/java\/net\/bull\/javamelody\/HtmlCoreReport.java\n@@ -365,7 +365,7 @@ void writeMessageIfNotNull(String message, String partToRedirectTo,\n \t\tif (message != null) {\r\n \t\t\twriteln(SCRIPT_BEGIN);\r\n \t\t\t\/\/ writeDirectly pour ne pas g\u00e9rer de traductions si le message contient '#'\r\n-\t\t\twriteDirectly(\"alert(\\\"\" + javascriptEncode(message) + \"\\\");\");\r\n+\t\t\twriteDirectly(\"alert(\\\"\" + htmlEncodeButNotSpace(javascriptEncode(message)) + \"\\\");\");\r\n \t\t\twriteln(\"\");\r\n \t\t\t\/\/ redirect vers une url \u00e9vitant que F5 du navigateur ne refasse l'action au lieu de faire un refresh\r\n \t\t\tif (partToRedirectTo == null) {",
            "code_diff":"@@ -365,7 +365,7 @@ void writeMessageIfNotNull(String message, String partToRedirectTo,\n \t\tif (message != null) {\n \t\t\twriteln(SCRIPT_BEGIN);\n \t\t\t\/\/ writeDirectly pour ne pas g\u00e9rer de traductions si le message contient '#'\n-\t\t\twriteDirectly(\"alert(\\\"\" + javascriptEncode(message) + \"\\\");\");\n+\t\t\twriteDirectly(\"alert(\\\"\" + htmlEncodeButNotSpace(javascriptEncode(message)) + \"\\\");\");\n \t\t\twriteln(\"\");\n \t\t\t\/\/ redirect vers une url \u00e9vitant que F5 du navigateur ne refasse l'action au lieu de faire un refresh\n \t\t\tif (partToRedirectTo == null) {"
        },
        {
            "index":168,
            "vuln_id":"GHSA-hjhp-hwfj-hwf3",
            "cwe_id":"{'CWE-352'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/03a1601bf343181df9f405dd2109aec483cb7053'}",
            "dataset":"osv",
            "summary":"Cross Site Request Forgery in firefly-iii  firefly-iii is vulnerable to a Cross-Site Request Forgery (CSRF) attack which can disable two factor authentication for the target user.",
            "published_date":"2021-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/firefly-iii\/firefly-iii",
            "commit_href":"https:\/\/github.com\/firefly-iii\/firefly-iii\/commit\/03a1601bf343181df9f405dd2109aec483cb7053",
            "commit_sha":"03a1601bf343181df9f405dd2109aec483cb7053",
            "patch":"SINGLE",
            "chain_ord":"['03a1601bf343181df9f405dd2109aec483cb7053']",
            "before_first_fix_commit":"{'edfff4ec57133bc78bbe6bdc4e1939b75bf9d845'}",
            "last_fix_commit":"03a1601bf343181df9f405dd2109aec483cb7053",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/24\/2021, 19:04:39",
            "message":"Fix.",
            "author":"James Cole",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 4, 'total': 9}",
            "files":"{'resources\/views\/v1\/profile\/index.twig': {'additions': 5, 'deletions': 4, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/firefly-iii\/firefly-iii\/raw\/03a1601bf343181df9f405dd2109aec483cb7053\/resources%2Fviews%2Fv1%2Fprofile%2Findex.twig', 'patch': '@@ -107,7 +107,7 @@\\n                     <div class=\"box box-default\">\\n                         <div class=\"box-body\">\\n                             <p class=\"text-info\">{{ \\'pref_two_factor_auth_help\\'|_ }}<\/p>\\n-                            {% if enabled2FA == false %}\\n+                            {% if enabled2FA == true %}\\n                                 <p class=\"text-info\">\\n                                     {{ trans_choice(\\'firefly.pref_two_factor_backup_code_count\\', mfaBackupCount) }}\\n                                 <\/p>\\n@@ -116,10 +116,11 @@\\n                                     <a class=\"btn btn-info\" href=\"{{ route(\\'profile.code\\') }}\">\\n                                         <span class=\"fa fa-recycle\"><\/span>\\n                                         {{ \\'pref_two_factor_auth_reset_code\\'|_ }}<\/a>\\n-                                    <a class=\"btn btn-danger\" href=\"{{ route(\\'profile.delete-code\\') }}\">\\n-                                        <span class=\"fa fa-trash\"><\/span>\\n-                                        {{ \\'pref_two_factor_auth_disable_2fa\\'|_ }}<\/a>\\n                                 <\/div>\\n+                                <form method=\"post\" action=\"{{ route(\\'profile.delete-code\\') }}\">\\n+                                    <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\\n+                                    <input class=\"btn btn-danger\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ \\'pref_two_factor_auth_disable_2fa\\'|_ }}\" \/>\\n+                                <\/form>\\n                                 <form method=\"post\" action=\"{{ route(\\'profile.new-backup-codes\\') }}\">\\n                                     <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\\n                                     <input class=\"btn btn-default\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ \\'pref_two_factor_new_backup_codes\\'|_ }}\" \/>'}}",
            "message_norm":"fix.",
            "language":"ca",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"SINGLE_WORD",
            "list_files":"dict_keys(['resources\/views\/v1\/profile\/index.twig'])",
            "num_files":1.0,
            "patch_content":"From 03a1601bf343181df9f405dd2109aec483cb7053 Mon Sep 17 00:00:00 2001\nFrom: James Cole <james@firefly-iii.org>\nDate: Wed, 24 Nov 2021 20:04:39 +0100\nSubject: [PATCH] Fix.\n\n---\n resources\/views\/v1\/profile\/index.twig | 9 +++++----\n 1 file changed, 5 insertions(+), 4 deletions(-)\n\ndiff --git a\/resources\/views\/v1\/profile\/index.twig b\/resources\/views\/v1\/profile\/index.twig\nindex 566cf5dcf4e..bf01b5411be 100644\n--- a\/resources\/views\/v1\/profile\/index.twig\n+++ b\/resources\/views\/v1\/profile\/index.twig\n@@ -107,7 +107,7 @@\n                     <div class=\"box box-default\">\n                         <div class=\"box-body\">\n                             <p class=\"text-info\">{{ 'pref_two_factor_auth_help'|_ }}<\/p>\n-                            {% if enabled2FA == false %}\n+                            {% if enabled2FA == true %}\n                                 <p class=\"text-info\">\n                                     {{ trans_choice('firefly.pref_two_factor_backup_code_count', mfaBackupCount) }}\n                                 <\/p>\n@@ -116,10 +116,11 @@\n                                     <a class=\"btn btn-info\" href=\"{{ route('profile.code') }}\">\n                                         <span class=\"fa fa-recycle\"><\/span>\n                                         {{ 'pref_two_factor_auth_reset_code'|_ }}<\/a>\n-                                    <a class=\"btn btn-danger\" href=\"{{ route('profile.delete-code') }}\">\n-                                        <span class=\"fa fa-trash\"><\/span>\n-                                        {{ 'pref_two_factor_auth_disable_2fa'|_ }}<\/a>\n                                 <\/div>\n+                                <form method=\"post\" action=\"{{ route('profile.delete-code') }}\">\n+                                    <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\n+                                    <input class=\"btn btn-danger\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ 'pref_two_factor_auth_disable_2fa'|_ }}\" \/>\n+                                <\/form>\n                                 <form method=\"post\" action=\"{{ route('profile.new-backup-codes') }}\">\n                                     <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\n                                     <input class=\"btn btn-default\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ 'pref_two_factor_new_backup_codes'|_ }}\" \/>",
            "code_diff":"@@ -107,7 +107,7 @@\n                     <div class=\"box box-default\">\n                         <div class=\"box-body\">\n                             <p class=\"text-info\">{{ 'pref_two_factor_auth_help'|_ }}<\/p>\n-                            {% if enabled2FA == false %}\n+                            {% if enabled2FA == true %}\n                                 <p class=\"text-info\">\n                                     {{ trans_choice('firefly.pref_two_factor_backup_code_count', mfaBackupCount) }}\n                                 <\/p>\n@@ -116,10 +116,11 @@\n                                     <a class=\"btn btn-info\" href=\"{{ route('profile.code') }}\">\n                                         <span class=\"fa fa-recycle\"><\/span>\n                                         {{ 'pref_two_factor_auth_reset_code'|_ }}<\/a>\n-                                    <a class=\"btn btn-danger\" href=\"{{ route('profile.delete-code') }}\">\n-                                        <span class=\"fa fa-trash\"><\/span>\n-                                        {{ 'pref_two_factor_auth_disable_2fa'|_ }}<\/a>\n                                 <\/div>\n+                                <form method=\"post\" action=\"{{ route('profile.delete-code') }}\">\n+                                    <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\n+                                    <input class=\"btn btn-danger\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ 'pref_two_factor_auth_disable_2fa'|_ }}\" \/>\n+                                <\/form>\n                                 <form method=\"post\" action=\"{{ route('profile.new-backup-codes') }}\">\n                                     <input type=\"hidden\" name=\"_token\" value=\"{{ csrf_token() }}\" \/>\n                                     <input class=\"btn btn-default\" style=\"margin-top:20px;\" type=\"submit\" name=\"submit\" value=\"{{ 'pref_two_factor_new_backup_codes'|_ }}\" \/>"
        },
        {
            "index":886,
            "vuln_id":"GHSA-hq37-853p-g5cf",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/Kozea\/CairoSVG\/commit\/cfc9175e590531d90384aa88845052de53d94bf3'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in CairoSVG # Doyensec Vulnerability Advisory \n\n* Regular Expression Denial of Service (REDoS) in cairosvg\n* Affected Product: CairoSVG v2.0.0+\n* Vendor: https:\/\/github.com\/Kozea\n* Severity: Medium\n* Vulnerability Class: Denial of Service\n* Author(s): Ben Caller ([Doyensec](https:\/\/doyensec.com))\n\n## Summary\n\nWhen processing SVG files, the python package CairoSVG uses two regular expressions which are vulnerable to Regular Expression Denial of Service (REDoS).\nIf an attacker provides a malicious SVG, it can make cairosvg get stuck processing the file for a very long time.\n\n## Technical description\n\nThe vulnerable regular expressions are\n\nhttps:\/\/github.com\/Kozea\/CairoSVG\/blob\/9c4a982b9a021280ad90e89707eacc1d114e4ac4\/cairosvg\/colors.py#L190-L191\n\nThe section between 'rgb(' and the final ')' contains multiple overlapping groups.\n\nSince all three infinitely repeating groups accept spaces, a long string of spaces causes catastrophic backtracking when it is not followed by a closing parenthesis.\n\nThe complexity is cubic, so doubling the length of the malicious string of spaces makes processing take 8 times as long.\n\n## Reproduction steps\n\nCreate a malicious SVG of the form:\n\n    <svg width=\"1\" height=\"1\"><rect fill=\"rgb(                     ;\"\/><\/svg>\n\nwith the following code:\n\n    '<svg width=\"1\" height=\"1\"><rect fill=\"rgb(' + (' ' * 3456) + ';\"\/><\/svg>'\n\nNote that there is no closing parenthesis before the semi-colon.\n\nRun cairosvg e.g.:\n\n    cairosvg cairo-redos.svg -o x.png\n\nand notice that it hangs at 100% CPU. Increasing the number of spaces increases the processing time with cubic complexity.\n\n## Remediation\n\nFix the regexes to avoid overlapping parts. Perhaps remove the [ \\n\\r\\t]* groups from the regex, and use .strip() on the returned capture group.\n\n## Disclosure timeline\n\n- 2020-12-30: Vulnerability disclosed via email to CourtBouillon",
            "published_date":"2021-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/Kozea\/CairoSVG",
            "commit_href":"https:\/\/github.com\/Kozea\/CairoSVG\/commit\/cfc9175e590531d90384aa88845052de53d94bf3",
            "commit_sha":"cfc9175e590531d90384aa88845052de53d94bf3",
            "patch":"SINGLE",
            "chain_ord":"['cfc9175e590531d90384aa88845052de53d94bf3']",
            "before_first_fix_commit":"{'9c4a982b9a021280ad90e89707eacc1d114e4ac4', '063185b60588a41d4df661ad70f9f7b699901abc'}",
            "last_fix_commit":"cfc9175e590531d90384aa88845052de53d94bf3",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/06\/2021, 14:43:14",
            "message":"Merge pull request from GHSA-hq37-853p-g5cf\n\nDon\u2019t use overlapping groups for regular expressions",
            "author":"Guillaume Ayoub",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'cairosvg\/colors.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Kozea\/CairoSVG\/raw\/cfc9175e590531d90384aa88845052de53d94bf3\/cairosvg%2Fcolors.py', 'patch': \"@@ -187,8 +187,8 @@\\n     'transparent': (0, 0, 0, 0),\\n }\\n \\n-RGBA = re.compile(r'rgba\\\\([ \\\\n\\\\r\\\\t]*(.+?)[ \\\\n\\\\r\\\\t]*\\\\)')\\n-RGB = re.compile(r'rgb\\\\([ \\\\n\\\\r\\\\t]*(.+?)[ \\\\n\\\\r\\\\t]*\\\\)')\\n+RGBA = re.compile(r'rgba\\\\((.+?)\\\\)')\\n+RGB = re.compile(r'rgb\\\\((.+?)\\\\)')\\n HEX_RRGGBB = re.compile('#[0-9a-f]{6}')\\n HEX_RGB = re.compile('#[0-9a-f]{3}')\\n \\n@@ -212,14 +212,14 @@ def color(string, opacity=1):\\n     if match:\\n         r, g, b, a = tuple(\\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\\n-            for i in match.group(1).split(','))\\n+            for i in match.group(1).strip().split(','))\\n         return (r, g, b, a * 255 * opacity)\\n \\n     match = RGB.search(string)\\n     if match:\\n         r, g, b = tuple(\\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\\n-            for i in match.group(1).split(','))\\n+            for i in match.group(1).strip().split(','))\\n         return (r, g, b, opacity)\\n \\n     match = HEX_RRGGBB.search(string)\"}}",
            "message_norm":"merge pull request from ghsa-hq37-853p-g5cf\n\ndon\u2019t use overlapping groups for regular expressions",
            "language":"en",
            "entities":"[('ghsa-hq37-853p-g5cf', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['cairosvg\/colors.py'])",
            "num_files":1.0,
            "patch_content":"From 063185b60588a41d4df661ad70f9f7b699901abc Mon Sep 17 00:00:00 2001\nFrom: Guillaume Ayoub <guillaume@courtbouillon.org>\nDate: Fri, 1 Jan 2021 00:05:55 +0100\nSubject: [PATCH] =?UTF-8?q?Don=E2=80=99t=20use=20overlapping=20groups=20fo?=\n =?UTF-8?q?r=20regular=20expressions?=\nMIME-Version: 1.0\nContent-Type: text\/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\nThe section between 'rgb(' and the final ')' contains multiple overlapping\ngroups.\n\nSince all three infinitely repeating groups accept spaces, a long string of\nspaces causes catastrophic backtracking when it is not followed by a closing\nparenthesis.\n\nThe complexity is cubic, so doubling the length of the malicious string of\nspaces makes processing take 8 times as long.\n---\n cairosvg\/colors.py | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/cairosvg\/colors.py b\/cairosvg\/colors.py\nindex 96d94e1a..68eed88d 100644\n--- a\/cairosvg\/colors.py\n+++ b\/cairosvg\/colors.py\n@@ -187,8 +187,8 @@\n     'transparent': (0, 0, 0, 0),\n }\n \n-RGBA = re.compile(r'rgba\\([ \\n\\r\\t]*(.+?)[ \\n\\r\\t]*\\)')\n-RGB = re.compile(r'rgb\\([ \\n\\r\\t]*(.+?)[ \\n\\r\\t]*\\)')\n+RGBA = re.compile(r'rgba\\((.+?)\\)')\n+RGB = re.compile(r'rgb\\((.+?)\\)')\n HEX_RRGGBB = re.compile('#[0-9a-f]{6}')\n HEX_RGB = re.compile('#[0-9a-f]{3}')\n \n@@ -212,14 +212,14 @@ def color(string, opacity=1):\n     if match:\n         r, g, b, a = tuple(\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\n-            for i in match.group(1).split(','))\n+            for i in match.group(1).strip().split(','))\n         return (r, g, b, a * 255 * opacity)\n \n     match = RGB.search(string)\n     if match:\n         r, g, b = tuple(\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\n-            for i in match.group(1).split(','))\n+            for i in match.group(1).strip().split(','))\n         return (r, g, b, opacity)\n \n     match = HEX_RRGGBB.search(string)",
            "code_diff":"@@ -187,8 +187,8 @@\n     'transparent': (0, 0, 0, 0),\n }\n \n-RGBA = re.compile(r'rgba\\([ \\n\\r\\t]*(.+?)[ \\n\\r\\t]*\\)')\n-RGB = re.compile(r'rgb\\([ \\n\\r\\t]*(.+?)[ \\n\\r\\t]*\\)')\n+RGBA = re.compile(r'rgba\\((.+?)\\)')\n+RGB = re.compile(r'rgb\\((.+?)\\)')\n HEX_RRGGBB = re.compile('#[0-9a-f]{6}')\n HEX_RGB = re.compile('#[0-9a-f]{3}')\n \n@@ -212,14 +212,14 @@ def color(string, opacity=1):\n     if match:\n         r, g, b, a = tuple(\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\n-            for i in match.group(1).split(','))\n+            for i in match.group(1).strip().split(','))\n         return (r, g, b, a * 255 * opacity)\n \n     match = RGB.search(string)\n     if match:\n         r, g, b = tuple(\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\n-            for i in match.group(1).split(','))\n+            for i in match.group(1).strip().split(','))\n         return (r, g, b, opacity)\n \n     match = HEX_RRGGBB.search(string)"
        },
        {
            "index":381,
            "vuln_id":"GHSA-27qf-jwm8-g7f3",
            "cwe_id":"{'CWE-369'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9'}",
            "dataset":"osv",
            "summary":"FPE in LSH in TFLite ### Impact\nAn attacker can craft a TFLite model that would trigger a division by zero error in LSH  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/lsh_projection.cc#L118).\n\n```cc\nint RunningSignBit(const TfLiteTensor* input, const TfLiteTensor* weight,\n                   float seed) {\n  int input_item_bytes = input->bytes \/ SizeOfDimension(input, 0);\n  \/\/ ...\n}\n```\n          \nThere is no check that the first dimension of the input is non zero.\n      \n### Patches\nWe have patched the issue in GitHub commit [0575b640091680cfb70f4dd93e70658de43b94f9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick thiscommit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for  more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9",
            "commit_sha":"0575b640091680cfb70f4dd93e70658de43b94f9",
            "patch":"SINGLE",
            "chain_ord":"['0575b640091680cfb70f4dd93e70658de43b94f9']",
            "before_first_fix_commit":"{'13aec9e4558d83fedac084ad66e32daf8bbcde0f'}",
            "last_fix_commit":"0575b640091680cfb70f4dd93e70658de43b94f9",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/27\/2021, 23:45:20",
            "message":"Prevent division by 0 in LSH projection.\n\nPiperOrigin-RevId: 387225857\nChange-Id: Iaeb572a763618c64f503e0026f6dd9fd769bf50c",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'tensorflow\/lite\/kernels\/lsh_projection.cc': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0575b640091680cfb70f4dd93e70658de43b94f9\/tensorflow%2Flite%2Fkernels%2Flsh_projection.cc', 'patch': '@@ -28,7 +28,7 @@ limitations under the License.\\n \/\/\\n \/\/ Input:\\n \/\/   Tensor[0]: Hash functions. Dim.size == 2, DataType: Float.\\n-\/\/              Tensor[0].Dim[0]: Num of hash functions.\\n+\/\/              Tensor[0].Dim[0]: Num of hash functions. Must be at least 1.\\n \/\/              Tensor[0].Dim[1]: Num of projected output bits generated by\\n \/\/                                each hash function.\\n \/\/   In sparse case, Tensor[0].Dim[1] + ceil( log2(Tensor[0].Dim[0] )) <= 32.\\n@@ -82,6 +82,7 @@ TfLiteStatus Resize(TfLiteContext* context, TfLiteNode* node) {\\n   const TfLiteTensor* input;\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &input));\\n   TF_LITE_ENSURE(context, NumDimensions(input) >= 1);\\n+  TF_LITE_ENSURE(context, SizeOfDimension(input, 0) >= 1);\\n \\n   if (NumInputs(node) == 3) {\\n     const TfLiteTensor* weight;'}}",
            "message_norm":"prevent division by 0 in lsh projection.\n\npiperorigin-revid: 387225857\nchange-id: iaeb572a763618c64f503e0026f6dd9fd769bf50c",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('387225857', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/lsh_projection.cc'])",
            "num_files":1.0,
            "patch_content":"From 0575b640091680cfb70f4dd93e70658de43b94f9 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 27 Jul 2021 16:45:20 -0700\nSubject: [PATCH] Prevent division by 0 in LSH projection.\n\nPiperOrigin-RevId: 387225857\nChange-Id: Iaeb572a763618c64f503e0026f6dd9fd769bf50c\n---\n tensorflow\/lite\/kernels\/lsh_projection.cc | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/lite\/kernels\/lsh_projection.cc b\/tensorflow\/lite\/kernels\/lsh_projection.cc\nindex 81f97ecf9a9ce7..92a5ee556f724c 100644\n--- a\/tensorflow\/lite\/kernels\/lsh_projection.cc\n+++ b\/tensorflow\/lite\/kernels\/lsh_projection.cc\n@@ -28,7 +28,7 @@ limitations under the License.\n \/\/\n \/\/ Input:\n \/\/   Tensor[0]: Hash functions. Dim.size == 2, DataType: Float.\n-\/\/              Tensor[0].Dim[0]: Num of hash functions.\n+\/\/              Tensor[0].Dim[0]: Num of hash functions. Must be at least 1.\n \/\/              Tensor[0].Dim[1]: Num of projected output bits generated by\n \/\/                                each hash function.\n \/\/   In sparse case, Tensor[0].Dim[1] + ceil( log2(Tensor[0].Dim[0] )) <= 32.\n@@ -82,6 +82,7 @@ TfLiteStatus Resize(TfLiteContext* context, TfLiteNode* node) {\n   const TfLiteTensor* input;\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &input));\n   TF_LITE_ENSURE(context, NumDimensions(input) >= 1);\n+  TF_LITE_ENSURE(context, SizeOfDimension(input, 0) >= 1);\n \n   if (NumInputs(node) == 3) {\n     const TfLiteTensor* weight;",
            "code_diff":"@@ -28,7 +28,7 @@ limitations under the License.\n \/\/\n \/\/ Input:\n \/\/   Tensor[0]: Hash functions. Dim.size == 2, DataType: Float.\n-\/\/              Tensor[0].Dim[0]: Num of hash functions.\n+\/\/              Tensor[0].Dim[0]: Num of hash functions. Must be at least 1.\n \/\/              Tensor[0].Dim[1]: Num of projected output bits generated by\n \/\/                                each hash function.\n \/\/   In sparse case, Tensor[0].Dim[1] + ceil( log2(Tensor[0].Dim[0] )) <= 32.\n@@ -82,6 +82,7 @@ TfLiteStatus Resize(TfLiteContext* context, TfLiteNode* node) {\n   const TfLiteTensor* input;\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &input));\n   TF_LITE_ENSURE(context, NumDimensions(input) >= 1);\n+  TF_LITE_ENSURE(context, SizeOfDimension(input, 0) >= 1);\n \n   if (NumInputs(node) == 3) {\n     const TfLiteTensor* weight;"
        },
        {
            "index":71,
            "vuln_id":"GHSA-hr84-fqvp-48mm",
            "cwe_id":"{'CWE-131'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5'}",
            "dataset":"osv",
            "summary":"Segfault in SparseCountSparseOutput ### Impact\nSpecifying a negative dense shape in `tf.raw_ops.SparseCountSparseOutput` results in a segmentation fault being thrown out from the standard library as `std::vector` invariants are broken.\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[0, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0, 0], dtype=tf.int64)\ndense_shape = tf.constant([-100, -100, -100], shape=[3], dtype=tf.int64)\nweights = tf.constant([], shape=[0, 0], dtype=tf.int64)\n\ntf.raw_ops.SparseCountSparseOutput(indices=indices, values=values, dense_shape=dense_shape, weights=weights, minlength=79, maxlength=96, binary_output=False)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624\/tensorflow\/core\/kernels\/count_ops.cc#L199-L213) assumes the first element of the dense shape is always positive and uses it to initialize a `BatchedMap<T>` (i.e., [`std::vector<absl::flat_hash_map<int64,T>>`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624\/tensorflow\/core\/kernels\/count_ops.cc#L27)) data structure.\n\n```cc\n  bool is_1d = shape.NumElements() == 1;\n  int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\n  ...\n  auto per_batch_counts = BatchedMap<W>(num_batches); \n```\n\nIf the `shape` tensor has more than one element, `num_batches` is the first value in `shape`.\n                       \nEnsuring that the `dense_shape` argument is a valid tensor shape (that is, all elements are non-negative) solves this issue.\n\n### Patches\nWe have patched the issue in GitHub commit [c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2 and TensorFlow 2.3.3.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
            "commit_sha":"c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
            "patch":"SINGLE",
            "chain_ord":"['c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5']",
            "before_first_fix_commit":"{'8f7b60ee8c0206a2c99802e3a4d1bb55d2bc0624'}",
            "last_fix_commit":"c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2021, 18:33:50",
            "message":"Fix the segfault in `tf.raw_ops.SparseCountSparseOutput`.\n\nPiperOrigin-RevId: 369264941\nChange-Id: I23a96a15b8370c01ee21ba3841e1c7dcbf55e93d",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 1, 'total': 10}",
            "files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -197,9 +197,17 @@ class SparseCount : public OpKernel {\\n                     \"The shape argument requires at least one element.\"));\\n \\n     bool is_1d = shape.NumElements() == 1;\\n-    int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\\n+    auto shape_vector = shape.flat<int64>();\\n+    int num_batches = is_1d ? 1 : shape_vector(0);\\n     int num_values = values.NumElements();\\n \\n+    for (int b = 0; b < shape_vector.size(); b++) {\\n+      OP_REQUIRES(context, shape_vector(b) >= 0,\\n+                  errors::InvalidArgument(\\n+                      \"Elements in dense_shape must be >= 0. Instead got:\",\\n+                      shape.DebugString()));\\n+    }\\n+\\n     OP_REQUIRES(context, num_values == indices.shape().dim_size(0),\\n                 errors::InvalidArgument(\\n                     \"Number of values must match first dimension of indices.\",'}}",
            "message_norm":"fix the segfault in `tf.raw_ops.sparsecountsparseoutput`.\n\npiperorigin-revid: 369264941\nchange-id: i23a96a15b8370c01ee21ba3841e1c7dcbf55e93d",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('369264941', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From c57c0b9f3a4f8684f3489dd9a9ec627ad8b599f5 Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Mon, 19 Apr 2021 11:33:50 -0700\nSubject: [PATCH] Fix the segfault in `tf.raw_ops.SparseCountSparseOutput`.\n\nPiperOrigin-RevId: 369264941\nChange-Id: I23a96a15b8370c01ee21ba3841e1c7dcbf55e93d\n---\n tensorflow\/core\/kernels\/count_ops.cc | 10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/count_ops.cc b\/tensorflow\/core\/kernels\/count_ops.cc\nindex d6ab68c2c70bd3..eeb0b853c7aad2 100644\n--- a\/tensorflow\/core\/kernels\/count_ops.cc\n+++ b\/tensorflow\/core\/kernels\/count_ops.cc\n@@ -197,9 +197,17 @@ class SparseCount : public OpKernel {\n                     \"The shape argument requires at least one element.\"));\n \n     bool is_1d = shape.NumElements() == 1;\n-    int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\n+    auto shape_vector = shape.flat<int64>();\n+    int num_batches = is_1d ? 1 : shape_vector(0);\n     int num_values = values.NumElements();\n \n+    for (int b = 0; b < shape_vector.size(); b++) {\n+      OP_REQUIRES(context, shape_vector(b) >= 0,\n+                  errors::InvalidArgument(\n+                      \"Elements in dense_shape must be >= 0. Instead got:\",\n+                      shape.DebugString()));\n+    }\n+\n     OP_REQUIRES(context, num_values == indices.shape().dim_size(0),\n                 errors::InvalidArgument(\n                     \"Number of values must match first dimension of indices.\",",
            "code_diff":"@@ -197,9 +197,17 @@ class SparseCount : public OpKernel {\n                     \"The shape argument requires at least one element.\"));\n \n     bool is_1d = shape.NumElements() == 1;\n-    int num_batches = is_1d ? 1 : shape.flat<int64>()(0);\n+    auto shape_vector = shape.flat<int64>();\n+    int num_batches = is_1d ? 1 : shape_vector(0);\n     int num_values = values.NumElements();\n \n+    for (int b = 0; b < shape_vector.size(); b++) {\n+      OP_REQUIRES(context, shape_vector(b) >= 0,\n+                  errors::InvalidArgument(\n+                      \"Elements in dense_shape must be >= 0. Instead got:\",\n+                      shape.DebugString()));\n+    }\n+\n     OP_REQUIRES(context, num_values == indices.shape().dim_size(0),\n                 errors::InvalidArgument(\n                     \"Number of values must match first dimension of indices.\","
        },
        {
            "index":85,
            "vuln_id":"GHSA-92vm-wfm5-mxvv",
            "cwe_id":"{'CWE-362'}",
            "score":4.4,
            "chain":"{'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/39791081692e9e14aa62855369e1c7f80fbfd50e', 'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/2c4df6b6cee540f30876198cd0b5bebf28528c07', 'https:\/\/github.com\/tj\/node-cookie-signature\/commit\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590'}",
            "dataset":"osv",
            "summary":"cookie-signature Timing Attack Affected versions of `cookie-signature` are vulnerable to timing attacks as a result of using a fail-early comparison instead of a constant-time comparison. \n\nTiming attacks remove the exponential increase in entropy gained from increased secret length, by providing per-character feedback on the correctness of a guess via miniscule timing differences.\n\nUnder favorable network conditions, an attacker can exploit this to guess the secret in no more than `charset*length` guesses, instead of `charset^length` guesses required were the timing attack not present. \n\n\n\n## Recommendation\n\nUpdate to 1.0.4 or later.",
            "published_date":"2020-01-06",
            "chain_len":3,
            "project":"https:\/\/github.com\/tj\/node-cookie-signature",
            "commit_href":"https:\/\/github.com\/tj\/node-cookie-signature\/commit\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590",
            "commit_sha":"4cc5e21e7f59a4ea0b51cd5e9634772d48fab590",
            "patch":"MULTI",
            "chain_ord":"['4cc5e21e7f59a4ea0b51cd5e9634772d48fab590', '39791081692e9e14aa62855369e1c7f80fbfd50e', '2c4df6b6cee540f30876198cd0b5bebf28528c07']",
            "before_first_fix_commit":"{'39791081692e9e14aa62855369e1c7f80fbfd50e'}",
            "last_fix_commit":"2c4df6b6cee540f30876198cd0b5bebf28528c07",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/25\/2014, 22:09:31",
            "message":"Merge pull request #17 from tenbits\/patch-1\n\nFix #15: use sha1 hashes for double signing",
            "author":"Nathan Vander Wilt",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 1, 'total': 10}",
            "files":"{'index.js': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tj\/node-cookie-signature\/raw\/4cc5e21e7f59a4ea0b51cd5e9634772d48fab590\/index.js', 'patch': \"@@ -39,5 +39,13 @@ exports.unsign = function(val, secret){\\n   var str = val.slice(0, val.lastIndexOf('.'))\\n     , mac = exports.sign(str, secret);\\n   \\n-  return exports.sign(mac, secret) == exports.sign(val, secret) ? str : false;\\n+  return sha1(mac) == sha1(val) ? str : false;\\n };\\n+\\n+\/**\\n+ * Private\\n+ *\/\\n+\\n+function sha1(str){\\n+  return crypto.createHash('sha1').update(str).digest('hex');\\n+}\"}}",
            "message_norm":"merge pull request #17 from tenbits\/patch-1\n\nfix #15: use sha1 hashes for double signing",
            "language":"en",
            "entities":"[('#17', 'ISSUE', ''), ('fix', 'ACTION', ''), ('#15', 'ISSUE', ''), ('signing', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 0aa4ec2fffa29753efe7661ef9fe7f8e5f0f4843 Mon Sep 17 00:00:00 2001\nFrom: Alex Kit <alex.kit@atmajs.com>\nDate: Wed, 25 Jun 2014 03:06:57 +0200\nSubject: [PATCH] Fix #15: use sha1 hashes for double signing\n\n---\n index.js | 10 +++++++++-\n 1 file changed, 9 insertions(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex 32419fe..b63bf84 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -39,5 +39,13 @@ exports.unsign = function(val, secret){\n   var str = val.slice(0, val.lastIndexOf('.'))\n     , mac = exports.sign(str, secret);\n   \n-  return exports.sign(mac, secret) == exports.sign(val, secret) ? str : false;\n+  return sha1(mac) == sha1(val) ? str : false;\n };\n+\n+\/**\n+ * Private\n+ *\/\n+\n+function sha1(str){\n+  return crypto.createHash('sha1').update(str).digest('hex');\n+}",
            "code_diff":"@@ -39,5 +39,13 @@ exports.unsign = function(val, secret){\n   var str = val.slice(0, val.lastIndexOf('.'))\n     , mac = exports.sign(str, secret);\n   \n-  return exports.sign(mac, secret) == exports.sign(val, secret) ? str : false;\n+  return sha1(mac) == sha1(val) ? str : false;\n };\n+\n+\/**\n+ * Private\n+ *\/\n+\n+function sha1(str){\n+  return crypto.createHash('sha1').update(str).digest('hex');\n+}"
        },
        {
            "index":937,
            "vuln_id":"GHSA-jmqm-f2gx-4fjv",
            "cwe_id":"{'CWE-352'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/npm\/npm-registry-fetch\/commit\/18bf9b97fb1deecdba01ffb05580370846255c88'}",
            "dataset":"osv",
            "summary":"Sensitive information exposure through logs in npm-registry-fetch Affected versions of `npm-registry-fetch` are vulnerable to an information exposure vulnerability through log files. The cli supports URLs like `<protocol>:\/\/[<user>[:<password>]@]<hostname>[:<port>][:][\/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.",
            "published_date":"2020-07-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/npm\/npm-registry-fetch",
            "commit_href":"https:\/\/github.com\/npm\/npm-registry-fetch\/commit\/18bf9b97fb1deecdba01ffb05580370846255c88",
            "commit_sha":"18bf9b97fb1deecdba01ffb05580370846255c88",
            "patch":"SINGLE",
            "chain_ord":"['18bf9b97fb1deecdba01ffb05580370846255c88']",
            "before_first_fix_commit":"{'09e540b09a951ded299ee028e7f1bd21cef5a6da'}",
            "last_fix_commit":"18bf9b97fb1deecdba01ffb05580370846255c88",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/30\/2020, 16:32:16",
            "message":"chore: remove auth data from logs (#29)",
            "author":"Claudia Hern\u00e1ndez",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 1, 'total': 11}",
            "files":"{'check-response.js': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/npm-registry-fetch\/raw\/18bf9b97fb1deecdba01ffb05580370846255c88\/check-response.js', 'patch': \"@@ -30,9 +30,18 @@ function logRequest (method, res, startTime, opts) {\\n   const attempt = res.headers.get('x-fetch-attempts')\\n   const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\\n   const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : ''\\n+\\n+  let urlStr\\n+  try {\\n+    const url = new URL(res.url)\\n+    urlStr = res.url.replace(url.password, '***')\\n+  } catch {\\n+    urlStr = res.url\\n+  }\\n+\\n   opts.log.http(\\n     'fetch',\\n-    `${method.toUpperCase()} ${res.status} ${res.url} ${elapsedTime}ms${attemptStr}${cacheStr}`\\n+    `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`\\n   )\\n }\"}}",
            "message_norm":"chore: remove auth data from logs (#29)",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('auth', 'SECWORD', ''), ('#29', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['check-response.js'])",
            "num_files":1.0,
            "patch_content":"From 18bf9b97fb1deecdba01ffb05580370846255c88 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Claudia=20Hern=C3=A1ndez?= <claudiahdz@github.com>\nDate: Tue, 30 Jun 2020 11:32:16 -0500\nSubject: [PATCH] chore: remove auth data from logs (#29)\n\n---\n check-response.js | 11 ++++++++++-\n 1 file changed, 10 insertions(+), 1 deletion(-)\n\ndiff --git a\/check-response.js b\/check-response.js\nindex 933c8f7c..3291d4e7 100644\n--- a\/check-response.js\n+++ b\/check-response.js\n@@ -30,9 +30,18 @@ function logRequest (method, res, startTime, opts) {\n   const attempt = res.headers.get('x-fetch-attempts')\n   const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\n   const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : ''\n+\n+  let urlStr\n+  try {\n+    const url = new URL(res.url)\n+    urlStr = res.url.replace(url.password, '***')\n+  } catch {\n+    urlStr = res.url\n+  }\n+\n   opts.log.http(\n     'fetch',\n-    `${method.toUpperCase()} ${res.status} ${res.url} ${elapsedTime}ms${attemptStr}${cacheStr}`\n+    `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`\n   )\n }",
            "code_diff":"@@ -30,9 +30,18 @@ function logRequest (method, res, startTime, opts) {\n   const attempt = res.headers.get('x-fetch-attempts')\n   const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\n   const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : ''\n+\n+  let urlStr\n+  try {\n+    const url = new URL(res.url)\n+    urlStr = res.url.replace(url.password, '***')\n+  } catch {\n+    urlStr = res.url\n+  }\n+\n   opts.log.http(\n     'fetch',\n-    `${method.toUpperCase()} ${res.status} ${res.url} ${elapsedTime}ms${attemptStr}${cacheStr}`\n+    `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`\n   )\n }"
        },
        {
            "index":432,
            "vuln_id":"GHSA-3r95-23jp-mhvg",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/TYPO3\/typo3\/commit\/6f2554dc4ea0b670fd5599c54fd788d4db96c4a0'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in TYPO3's Form Framework > ### Meta\n> * CVSS: `CVSS:3.1\/AV:N\/AC:L\/PR:L\/UI:R\/S:C\/C:L\/I:L\/A:N\/E:F\/RL:O\/RC:C` (4.9)\n\n### Problem\nIt has been discovered that the Form Designer backend module of the Form Framework is vulnerable to cross-site scripting. A valid backend user account with access to the form module is needed to exploit this vulnerability.\n\n### Solution\nUpdate to TYPO3 versions 8.7.47 ELTS, 9.5.35 ELTS, 10.4.29, 11.5.11 that fix the problem described above.\n\n### Credits\nThanks to Gabe Troyan who reported and fixed the issue.\n\n### References\n* [TYPO3-CORE-SA-2022-003](https:\/\/typo3.org\/security\/advisory\/typo3-core-sa-2022-003)",
            "published_date":"2022-06-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/TYPO3\/typo3",
            "commit_href":"https:\/\/github.com\/TYPO3\/typo3\/commit\/6f2554dc4ea0b670fd5599c54fd788d4db96c4a0",
            "commit_sha":"6f2554dc4ea0b670fd5599c54fd788d4db96c4a0",
            "patch":"SINGLE",
            "chain_ord":"['6f2554dc4ea0b670fd5599c54fd788d4db96c4a0']",
            "before_first_fix_commit":"{'c93ea692e7dfef03b7c50fe5437487545bee4d6a'}",
            "last_fix_commit":"6f2554dc4ea0b670fd5599c54fd788d4db96c4a0",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/14\/2022, 07:17:30",
            "message":"[SECURITY] Ensure text preview of multivalue items in form editor\n\nMultivalue items in the form editor user interface were previewed\nas HTML, but should be treated as scalar text only.\n\nResolves: #96743\nReleases: main, 11.5, 10.4\nChange-Id: I5e8dab26119490ecf19ac5d48c2bc7a5a00daaad\nSecurity-Bulletin: TYPO3-CORE-SA-2022-003\nSecurity-References: CVE-2022-31048\nReviewed-on: https:\/\/review.typo3.org\/c\/Packages\/TYPO3.CMS\/+\/73297\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>",
            "author":"Gabe Troyan",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 6, 'total': 12}",
            "files":"{'typo3\/sysext\/form\/Resources\/Public\/JavaScript\/backend\/form-editor\/stage-component.js': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TYPO3\/typo3\/raw\/6f2554dc4ea0b670fd5599c54fd788d4db96c4a0\/typo3%2Fsysext%2Fform%2FResources%2FPublic%2FJavaScript%2Fbackend%2Fform-editor%2Fstage-component.js', 'patch': \"@@ -513,10 +513,10 @@ function factory($, Helper, Icons) {\\n      *\/\\n     function setStageHeadline(title) {\\n       if (getUtility().isUndefinedOrNull(title)) {\\n-        title = buildTitleByFormElement();\\n+        title = buildTitleByFormElement().text();\\n       }\\n \\n-      $(getHelper().getDomElementDataIdentifierSelector('stageHeadline')).html(title);\\n+      $(getHelper().getDomElementDataIdentifierSelector('stageHeadline')).text(title);\\n     };\\n \\n     \/**\\n@@ -981,10 +981,10 @@ function factory($, Helper, Icons) {\\n \\n       getHelper()\\n         .getTemplatePropertyDomElement('_type', template)\\n-        .append(getFormElementDefinition(formElement, 'label'));\\n+        .append(document.createTextNode(getFormElementDefinition(formElement, 'label')));\\n       getHelper()\\n         .getTemplatePropertyDomElement('_identifier', template)\\n-        .append(formElement.get('identifier'));\\n+        .append(document.createTextNode(formElement.get('identifier')));\\n     };\\n \\n     \/**\\n@@ -1029,7 +1029,7 @@ function factory($, Helper, Icons) {\\n \\n             getHelper()\\n               .getTemplatePropertyDomElement('_label', rowTemplate)\\n-              .append(collectionElementConfiguration['label']);\\n+              .append(document.createTextNode(collectionElementConfiguration['label']));\\n             $(getHelper().getDomElementDataIdentifierSelector('validatorsContainer'), $(template))\\n               .append(rowTemplate.html());\\n           }\\n@@ -1089,7 +1089,7 @@ function factory($, Helper, Icons) {\\n           }\\n         }\\n \\n-        getHelper().getTemplatePropertyDomElement('_label', rowTemplate).append(label);\\n+        getHelper().getTemplatePropertyDomElement('_label', rowTemplate).append(document.createTextNode(label));\\n \\n         if (isPreselected) {\\n           getHelper().getTemplatePropertyDomElement('_label', rowTemplate).addClass(\"}}",
            "message_norm":"[security] ensure text preview of multivalue items in form editor\n\nmultivalue items in the form editor user interface were previewed\nas html, but should be treated as scalar text only.\n\nresolves: #96743\nreleases: main, 11.5, 10.4\nchange-id: i5e8dab26119490ecf19ac5d48c2bc7a5a00daaad\nsecurity-bulletin: typo3-core-sa-2022-003\nsecurity-references: cve-2022-31048\nreviewed-on: https:\/\/review.typo3.org\/c\/packages\/typo3.cms\/+\/73297\ntested-by: oliver hader <oliver.hader@typo3.org>\nreviewed-by: oliver hader <oliver.hader@typo3.org>",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('ensure', 'ACTION', ''), ('#96743', 'ISSUE', ''), ('security', 'SECWORD', ''), ('security', 'SECWORD', ''), ('cve-2022-31048', 'VULNID', 'CVE'), ('https:\/\/review.typo3.org\/c\/packages\/typo3.cms\/+\/73297', 'URL', ''), ('oliver.hader@typo3.org', 'EMAIL', ''), ('oliver.hader@typo3.org', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['typo3\/sysext\/form\/Resources\/Public\/JavaScript\/backend\/form-editor\/stage-component.js'])",
            "num_files":1.0,
            "patch_content":"From 6f2554dc4ea0b670fd5599c54fd788d4db96c4a0 Mon Sep 17 00:00:00 2001\nFrom: Gabe Troyan <gabe+typo3org@ecopixel.com>\nDate: Tue, 14 Jun 2022 09:17:30 +0200\nSubject: [PATCH] [SECURITY] Ensure text preview of multivalue items in form\n editor\n\nMultivalue items in the form editor user interface were previewed\nas HTML, but should be treated as scalar text only.\n\nResolves: #96743\nReleases: main, 11.5, 10.4\nChange-Id: I5e8dab26119490ecf19ac5d48c2bc7a5a00daaad\nSecurity-Bulletin: TYPO3-CORE-SA-2022-003\nSecurity-References: CVE-2022-31048\nReviewed-on: https:\/\/review.typo3.org\/c\/Packages\/TYPO3.CMS\/+\/73297\nTested-by: Oliver Hader <oliver.hader@typo3.org>\nReviewed-by: Oliver Hader <oliver.hader@typo3.org>\n---\n ...\/backend\/form-editor\/stage-component.js           | 12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ndiff --git a\/typo3\/sysext\/form\/Resources\/Public\/JavaScript\/backend\/form-editor\/stage-component.js b\/typo3\/sysext\/form\/Resources\/Public\/JavaScript\/backend\/form-editor\/stage-component.js\nindex 4cac39607c94..a78147841290 100644\n--- a\/typo3\/sysext\/form\/Resources\/Public\/JavaScript\/backend\/form-editor\/stage-component.js\n+++ b\/typo3\/sysext\/form\/Resources\/Public\/JavaScript\/backend\/form-editor\/stage-component.js\n@@ -513,10 +513,10 @@ function factory($, Helper, Icons) {\n      *\/\n     function setStageHeadline(title) {\n       if (getUtility().isUndefinedOrNull(title)) {\n-        title = buildTitleByFormElement();\n+        title = buildTitleByFormElement().text();\n       }\n \n-      $(getHelper().getDomElementDataIdentifierSelector('stageHeadline')).html(title);\n+      $(getHelper().getDomElementDataIdentifierSelector('stageHeadline')).text(title);\n     };\n \n     \/**\n@@ -981,10 +981,10 @@ function factory($, Helper, Icons) {\n \n       getHelper()\n         .getTemplatePropertyDomElement('_type', template)\n-        .append(getFormElementDefinition(formElement, 'label'));\n+        .append(document.createTextNode(getFormElementDefinition(formElement, 'label')));\n       getHelper()\n         .getTemplatePropertyDomElement('_identifier', template)\n-        .append(formElement.get('identifier'));\n+        .append(document.createTextNode(formElement.get('identifier')));\n     };\n \n     \/**\n@@ -1029,7 +1029,7 @@ function factory($, Helper, Icons) {\n \n             getHelper()\n               .getTemplatePropertyDomElement('_label', rowTemplate)\n-              .append(collectionElementConfiguration['label']);\n+              .append(document.createTextNode(collectionElementConfiguration['label']));\n             $(getHelper().getDomElementDataIdentifierSelector('validatorsContainer'), $(template))\n               .append(rowTemplate.html());\n           }\n@@ -1089,7 +1089,7 @@ function factory($, Helper, Icons) {\n           }\n         }\n \n-        getHelper().getTemplatePropertyDomElement('_label', rowTemplate).append(label);\n+        getHelper().getTemplatePropertyDomElement('_label', rowTemplate).append(document.createTextNode(label));\n \n         if (isPreselected) {\n           getHelper().getTemplatePropertyDomElement('_label', rowTemplate).addClass(",
            "code_diff":"@@ -513,10 +513,10 @@ function factory($, Helper, Icons) {\n      *\/\n     function setStageHeadline(title) {\n       if (getUtility().isUndefinedOrNull(title)) {\n-        title = buildTitleByFormElement();\n+        title = buildTitleByFormElement().text();\n       }\n \n-      $(getHelper().getDomElementDataIdentifierSelector('stageHeadline')).html(title);\n+      $(getHelper().getDomElementDataIdentifierSelector('stageHeadline')).text(title);\n     };\n \n     \/**\n@@ -981,10 +981,10 @@ function factory($, Helper, Icons) {\n \n       getHelper()\n         .getTemplatePropertyDomElement('_type', template)\n-        .append(getFormElementDefinition(formElement, 'label'));\n+        .append(document.createTextNode(getFormElementDefinition(formElement, 'label')));\n       getHelper()\n         .getTemplatePropertyDomElement('_identifier', template)\n-        .append(formElement.get('identifier'));\n+        .append(document.createTextNode(formElement.get('identifier')));\n     };\n \n     \/**\n@@ -1029,7 +1029,7 @@ function factory($, Helper, Icons) {\n \n             getHelper()\n               .getTemplatePropertyDomElement('_label', rowTemplate)\n-              .append(collectionElementConfiguration['label']);\n+              .append(document.createTextNode(collectionElementConfiguration['label']));\n             $(getHelper().getDomElementDataIdentifierSelector('validatorsContainer'), $(template))\n               .append(rowTemplate.html());\n           }\n@@ -1089,7 +1089,7 @@ function factory($, Helper, Icons) {\n           }\n         }\n \n-        getHelper().getTemplatePropertyDomElement('_label', rowTemplate).append(label);\n+        getHelper().getTemplatePropertyDomElement('_label', rowTemplate).append(document.createTextNode(label));\n \n         if (isPreselected) {\n           getHelper().getTemplatePropertyDomElement('_label', rowTemplate).addClass("
        },
        {
            "index":136,
            "vuln_id":"GHSA-jp6r-xcjj-5h7r",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/gchq\/CyberChef\/commit\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in cyberchef Versions of `cyberchef` prior to 8.31.3 are vulnerable to Cross-Site Scripting. In `Text Encoding Brute Force` the table rows are created by concatenating the `value` variable unsanitized in the HTML code. If this variable is controlled by user input it allows attackers to execute arbitrary JavaScript in a victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 8.31.3 or later.",
            "published_date":"2019-08-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/gchq\/CyberChef",
            "commit_href":"https:\/\/github.com\/gchq\/CyberChef\/commit\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf",
            "commit_sha":"01f0625d6a177f9c5df9281f12a27c814c2d8bcf",
            "patch":"SINGLE",
            "chain_ord":"['01f0625d6a177f9c5df9281f12a27c814c2d8bcf']",
            "before_first_fix_commit":"{'38ff7ec89f595dbe5971c3577fa29a142b4b2416'}",
            "last_fix_commit":"01f0625d6a177f9c5df9281f12a27c814c2d8bcf",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/14\/2019, 21:00:17",
            "message":"Fixed XSS in 'Text Encoding Brute Force. Closes #539",
            "author":"n1474335",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/core\/operations\/TextEncodingBruteForce.mjs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gchq\/CyberChef\/raw\/01f0625d6a177f9c5df9281f12a27c814c2d8bcf\/src%2Fcore%2Foperations%2FTextEncodingBruteForce.mjs', 'patch': '@@ -79,7 +79,7 @@ class TextEncodingBruteForce extends Operation {\\n         let table = \"<table class=\\'table table-hover table-sm table-bordered table-nonfluid\\'><tr><th>Encoding<\/th><th>Value<\/th><\/tr>\";\\n \\n         for (const enc in encodings) {\\n-            const value = Utils.printable(encodings[enc], true);\\n+            const value = Utils.escapeHtml(Utils.printable(encodings[enc], true));\\n             table += `<tr><td>${enc}<\/td><td>${value}<\/td><\/tr>`;\\n         }'}}",
            "message_norm":"fixed xss in 'text encoding brute force. closes #539",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('xss', 'SECWORD', ''), ('encoding', 'SECWORD', ''), ('#539', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/core\/operations\/TextEncodingBruteForce.mjs'])",
            "num_files":1.0,
            "patch_content":"From 01f0625d6a177f9c5df9281f12a27c814c2d8bcf Mon Sep 17 00:00:00 2001\nFrom: n1474335 <n1474335@gmail.com>\nDate: Sun, 14 Apr 2019 22:00:17 +0100\nSubject: [PATCH] Fixed XSS in 'Text Encoding Brute Force. Closes #539\n\n---\n src\/core\/operations\/TextEncodingBruteForce.mjs | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/core\/operations\/TextEncodingBruteForce.mjs b\/src\/core\/operations\/TextEncodingBruteForce.mjs\nindex ee5f70d311..169e6ad7b6 100644\n--- a\/src\/core\/operations\/TextEncodingBruteForce.mjs\n+++ b\/src\/core\/operations\/TextEncodingBruteForce.mjs\n@@ -79,7 +79,7 @@ class TextEncodingBruteForce extends Operation {\n         let table = \"<table class='table table-hover table-sm table-bordered table-nonfluid'><tr><th>Encoding<\/th><th>Value<\/th><\/tr>\";\n \n         for (const enc in encodings) {\n-            const value = Utils.printable(encodings[enc], true);\n+            const value = Utils.escapeHtml(Utils.printable(encodings[enc], true));\n             table += `<tr><td>${enc}<\/td><td>${value}<\/td><\/tr>`;\n         }",
            "code_diff":"@@ -79,7 +79,7 @@ class TextEncodingBruteForce extends Operation {\n         let table = \"<table class='table table-hover table-sm table-bordered table-nonfluid'><tr><th>Encoding<\/th><th>Value<\/th><\/tr>\";\n \n         for (const enc in encodings) {\n-            const value = Utils.printable(encodings[enc], true);\n+            const value = Utils.escapeHtml(Utils.printable(encodings[enc], true));\n             table += `<tr><td>${enc}<\/td><td>${value}<\/td><\/tr>`;\n         }"
        },
        {
            "index":400,
            "vuln_id":"GHSA-rxch-gp62-574w",
            "cwe_id":"{'CWE-79'}",
            "score":6.4,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2'}",
            "dataset":"osv",
            "summary":"snipe-it is vulnerable to Cross-site Scripting snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting').",
            "published_date":"2021-12-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2",
            "commit_sha":"9d5d1a9f9aae2c8baee48551185da5de0cdb62c2",
            "patch":"SINGLE",
            "chain_ord":"['9d5d1a9f9aae2c8baee48551185da5de0cdb62c2']",
            "before_first_fix_commit":"{'3a7cef15bd7578f93104011137222512d4c95f4e'}",
            "last_fix_commit":"9d5d1a9f9aae2c8baee48551185da5de0cdb62c2",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/13\/2021, 20:03:03",
            "message":"Added escape to assigned_to API response\n\nSigned-off-by: snipe <snipe@snipe.net>",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'app\/Http\/Transformers\/AssetsTransformer.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/9d5d1a9f9aae2c8baee48551185da5de0cdb62c2\/app%2FHttp%2FTransformers%2FAssetsTransformer.php', 'patch': \"@@ -170,7 +170,7 @@ public function transformAssignedTo($asset)\\n         }\\n         return $asset->assigned ? [\\n             'id' => $asset->assigned->id,\\n-            'name' => $asset->assigned->display_name,\\n+            'name' => e($asset->assigned->display_name),\\n             'type' => $asset->assignedType()\\n         ] : null;\\n     }\"}}",
            "message_norm":"added escape to assigned_to api response\n\nsigned-off-by: snipe <snipe@snipe.net>",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('escape', 'SECWORD', ''), ('snipe@snipe.net', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Transformers\/AssetsTransformer.php'])",
            "num_files":1.0,
            "patch_content":"From 9d5d1a9f9aae2c8baee48551185da5de0cdb62c2 Mon Sep 17 00:00:00 2001\nFrom: snipe <snipe@snipe.net>\nDate: Mon, 13 Dec 2021 12:03:03 -0800\nSubject: [PATCH] Added escape to assigned_to API response\n\nSigned-off-by: snipe <snipe@snipe.net>\n---\n app\/Http\/Transformers\/AssetsTransformer.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/app\/Http\/Transformers\/AssetsTransformer.php b\/app\/Http\/Transformers\/AssetsTransformer.php\nindex 0da314002f54..e9abca65e13d 100644\n--- a\/app\/Http\/Transformers\/AssetsTransformer.php\n+++ b\/app\/Http\/Transformers\/AssetsTransformer.php\n@@ -170,7 +170,7 @@ public function transformAssignedTo($asset)\n         }\n         return $asset->assigned ? [\n             'id' => $asset->assigned->id,\n-            'name' => $asset->assigned->display_name,\n+            'name' => e($asset->assigned->display_name),\n             'type' => $asset->assignedType()\n         ] : null;\n     }",
            "code_diff":"@@ -170,7 +170,7 @@ public function transformAssignedTo($asset)\n         }\n         return $asset->assigned ? [\n             'id' => $asset->assigned->id,\n-            'name' => $asset->assigned->display_name,\n+            'name' => e($asset->assigned->display_name),\n             'type' => $asset->assignedType()\n         ] : null;\n     }"
        },
        {
            "index":267,
            "vuln_id":"GHSA-mm4f-47ch-f7hx",
            "cwe_id":"{'CWE-77'}",
            "score":6.3,
            "chain":"{'https:\/\/github.com\/GuyMograbi\/kill-by-port\/commit\/ea5b1f377e196a4492e05ff070eba8b30b7372c4'}",
            "dataset":"osv",
            "summary":"Arbitrary code execution in kill-by-port This affects the package kill-by-port before 0.0.2. If (attacker-controlled) user input is given to the killByPort function, it is possible for an attacker to execute arbitrary commands. This is due to use of the child_process exec function without input sanitization.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/GuyMograbi\/kill-by-port",
            "commit_href":"https:\/\/github.com\/GuyMograbi\/kill-by-port\/commit\/ea5b1f377e196a4492e05ff070eba8b30b7372c4",
            "commit_sha":"ea5b1f377e196a4492e05ff070eba8b30b7372c4",
            "patch":"SINGLE",
            "chain_ord":"['ea5b1f377e196a4492e05ff070eba8b30b7372c4']",
            "before_first_fix_commit":"{'16dcbe264b6b4a5ecf409661b42836dd286fd43f'}",
            "last_fix_commit":"ea5b1f377e196a4492e05ff070eba8b30b7372c4",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/24\/2021, 14:00:50",
            "message":"fix kill by port",
            "author":"Guy Mograbi",
            "comments":"{'com_1': {'author': 'abergmann', 'datetime': '03\/31\/2021, 08:07:34', 'body': '[CVE-2021-23363](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-23363) was assigned to this commit.'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/GuyMograbi\/kill-by-port\/raw\/ea5b1f377e196a4492e05ff070eba8b30b7372c4\/index.js', 'patch': \"@@ -5,7 +5,7 @@ const exec = require('child_process').execSync\\n exports.killByPort = function (port) {\\n   var processId = null\\n   try {\\n-    processId = exec(`lsof -t -i:${port}`)\\n+    processId = exec(`lsof -t -i:${parseInt(port, 10)}`)\\n   } catch (e) {\\n \\n   }\"}}",
            "message_norm":"fix kill by port",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From ea5b1f377e196a4492e05ff070eba8b30b7372c4 Mon Sep 17 00:00:00 2001\nFrom: Guy Mograbi <guy.mograbi@gmail.com>\nDate: Wed, 24 Mar 2021 07:00:50 -0700\nSubject: [PATCH] fix kill by port\n\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex a827f37..e19507a 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -5,7 +5,7 @@ const exec = require('child_process').execSync\n exports.killByPort = function (port) {\n   var processId = null\n   try {\n-    processId = exec(`lsof -t -i:${port}`)\n+    processId = exec(`lsof -t -i:${parseInt(port, 10)}`)\n   } catch (e) {\n \n   }",
            "code_diff":"@@ -5,7 +5,7 @@ const exec = require('child_process').execSync\n exports.killByPort = function (port) {\n   var processId = null\n   try {\n-    processId = exec(`lsof -t -i:${port}`)\n+    processId = exec(`lsof -t -i:${parseInt(port, 10)}`)\n   } catch (e) {\n \n   }"
        },
        {
            "index":301,
            "vuln_id":"GHSA-6465-r752-2h8v",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/neorazorx\/facturascripts\/commit\/8e31d8434014a6d1e8791a489d84268fd74b0c9a'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in facturascripts Reflected cross-site scripting using url based payload in GitHub repository neorazorx\/facturascripts prior to 2022.08. This can lead to theft of a user's cookies, which in turn could lead to account takeover or do other malicious activities in a victim's browser.",
            "published_date":"2022-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/neorazorx\/facturascripts",
            "commit_href":"https:\/\/github.com\/neorazorx\/facturascripts\/commit\/8e31d8434014a6d1e8791a489d84268fd74b0c9a",
            "commit_sha":"8e31d8434014a6d1e8791a489d84268fd74b0c9a",
            "patch":"SINGLE",
            "chain_ord":"['8e31d8434014a6d1e8791a489d84268fd74b0c9a']",
            "before_first_fix_commit":"{'ec88bc72ff2f6eb79a27112c777a7d601e946ed5'}",
            "last_fix_commit":"8e31d8434014a6d1e8791a489d84268fd74b0c9a",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/09\/2022, 22:12:41",
            "message":"We check the url parameter of the link to ensure that it is a valid controller.\n------\nComprobamos el par\u00e1metro url del enlace para asegurar que sea un controlador v\u00e1lido.",
            "author":"Carlos Garcia Gomez",
            "comments":null,
            "stats":"{'additions': 18, 'deletions': 1, 'total': 19}",
            "files":"{'Core\/Controller\/EditPageOption.php': {'additions': 18, 'deletions': 1, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NeoRazorX\/facturascripts\/raw\/8e31d8434014a6d1e8791a489d84268fd74b0c9a\/Core%2FController%2FEditPageOption.php', 'patch': \"@@ -24,6 +24,7 @@\\n use FacturaScripts\\\\Core\\\\Base\\\\DataBase\\\\DataBaseWhere;\\n use FacturaScripts\\\\Core\\\\Lib\\\\Widget\\\\VisualItemLoadEngine;\\n use FacturaScripts\\\\Dinamic\\\\Model\\\\CodeModel;\\n+use FacturaScripts\\\\Dinamic\\\\Model\\\\Page;\\n use FacturaScripts\\\\Dinamic\\\\Model\\\\PageOption;\\n use FacturaScripts\\\\Dinamic\\\\Model\\\\User;\\n use Symfony\\\\Component\\\\HttpFoundation\\\\Response;\\n@@ -121,7 +122,7 @@ public function privateCore(&$response, $user, $permissions)\\n         parent::privateCore($response, $user, $permissions);\\n         $this->model = new PageOption();\\n         $this->loadSelectedViewName();\\n-        $this->backPage = $this->request->get('url') ?: $this->selectedViewName;\\n+        $this->setBackPage();\\n         $this->selectedUser = $this->user->admin ? $this->request->get('nick') : $this->user->nick;\\n         $this->loadPageOptions();\\n \\n@@ -275,6 +276,22 @@ private function loadPageOptionsForUser(): bool\\n         return true;\\n     }\\n \\n+    private function setBackPage()\\n+    {\\n+        \/\/ check if the url is a real controller name\\n+        $url = $this->request->get('url', '');\\n+        $pageModel = new Page();\\n+        foreach ($pageModel->all([], [], 0, 0) as $page) {\\n+            if (substr($url, 0, strlen($page->name)) === $page->name) {\\n+                $this->backPage = $url;\\n+                return;\\n+            }\\n+        }\\n+\\n+        \/\/ set the default back page\\n+        $this->backPage = $this->selectedViewName;\\n+    }\\n+\\n     \/**\\n      * @param array $column\\n      * @param string $name\"}}",
            "message_norm":"we check the url parameter of the link to ensure that it is a valid controller.\n------\ncomprobamos el par\u00e1metro url del enlace para asegurar que sea un controlador v\u00e1lido.",
            "language":"es",
            "entities":"[('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['Core\/Controller\/EditPageOption.php'])",
            "num_files":1.0,
            "patch_content":"From 8e31d8434014a6d1e8791a489d84268fd74b0c9a Mon Sep 17 00:00:00 2001\nFrom: Carlos Garcia Gomez <neorazorx@gmail.com>\nDate: Tue, 10 May 2022 00:12:41 +0200\nSubject: [PATCH] =?UTF-8?q?We=20check=20the=20url=20parameter=20of=20the?=\n =?UTF-8?q?=20link=20to=20ensure=20that=20it=20is=20a=20valid=20controller?=\n =?UTF-8?q?.=20------=20Comprobamos=20el=20par=C3=A1metro=20url=20del=20en?=\n =?UTF-8?q?lace=20para=20asegurar=20que=20sea=20un=20controlador=20v=C3=A1?=\n =?UTF-8?q?lido.?=\nMIME-Version: 1.0\nContent-Type: text\/plain; charset=UTF-8\nContent-Transfer-Encoding: 8bit\n\n---\n Core\/Controller\/EditPageOption.php | 19 ++++++++++++++++++-\n 1 file changed, 18 insertions(+), 1 deletion(-)\n\ndiff --git a\/Core\/Controller\/EditPageOption.php b\/Core\/Controller\/EditPageOption.php\nindex a9b620f8d3..b8cb64a839 100644\n--- a\/Core\/Controller\/EditPageOption.php\n+++ b\/Core\/Controller\/EditPageOption.php\n@@ -24,6 +24,7 @@\n use FacturaScripts\\Core\\Base\\DataBase\\DataBaseWhere;\n use FacturaScripts\\Core\\Lib\\Widget\\VisualItemLoadEngine;\n use FacturaScripts\\Dinamic\\Model\\CodeModel;\n+use FacturaScripts\\Dinamic\\Model\\Page;\n use FacturaScripts\\Dinamic\\Model\\PageOption;\n use FacturaScripts\\Dinamic\\Model\\User;\n use Symfony\\Component\\HttpFoundation\\Response;\n@@ -121,7 +122,7 @@ public function privateCore(&$response, $user, $permissions)\n         parent::privateCore($response, $user, $permissions);\n         $this->model = new PageOption();\n         $this->loadSelectedViewName();\n-        $this->backPage = $this->request->get('url') ?: $this->selectedViewName;\n+        $this->setBackPage();\n         $this->selectedUser = $this->user->admin ? $this->request->get('nick') : $this->user->nick;\n         $this->loadPageOptions();\n \n@@ -275,6 +276,22 @@ private function loadPageOptionsForUser(): bool\n         return true;\n     }\n \n+    private function setBackPage()\n+    {\n+        \/\/ check if the url is a real controller name\n+        $url = $this->request->get('url', '');\n+        $pageModel = new Page();\n+        foreach ($pageModel->all([], [], 0, 0) as $page) {\n+            if (substr($url, 0, strlen($page->name)) === $page->name) {\n+                $this->backPage = $url;\n+                return;\n+            }\n+        }\n+\n+        \/\/ set the default back page\n+        $this->backPage = $this->selectedViewName;\n+    }\n+\n     \/**\n      * @param array $column\n      * @param string $name",
            "code_diff":"@@ -24,6 +24,7 @@\n use FacturaScripts\\Core\\Base\\DataBase\\DataBaseWhere;\n use FacturaScripts\\Core\\Lib\\Widget\\VisualItemLoadEngine;\n use FacturaScripts\\Dinamic\\Model\\CodeModel;\n+use FacturaScripts\\Dinamic\\Model\\Page;\n use FacturaScripts\\Dinamic\\Model\\PageOption;\n use FacturaScripts\\Dinamic\\Model\\User;\n use Symfony\\Component\\HttpFoundation\\Response;\n@@ -121,7 +122,7 @@ public function privateCore(&$response, $user, $permissions)\n         parent::privateCore($response, $user, $permissions);\n         $this->model = new PageOption();\n         $this->loadSelectedViewName();\n-        $this->backPage = $this->request->get('url') ?: $this->selectedViewName;\n+        $this->setBackPage();\n         $this->selectedUser = $this->user->admin ? $this->request->get('nick') : $this->user->nick;\n         $this->loadPageOptions();\n \n@@ -275,6 +276,22 @@ private function loadPageOptionsForUser(): bool\n         return true;\n     }\n \n+    private function setBackPage()\n+    {\n+        \/\/ check if the url is a real controller name\n+        $url = $this->request->get('url', '');\n+        $pageModel = new Page();\n+        foreach ($pageModel->all([], [], 0, 0) as $page) {\n+            if (substr($url, 0, strlen($page->name)) === $page->name) {\n+                $this->backPage = $url;\n+                return;\n+            }\n+        }\n+\n+        \/\/ set the default back page\n+        $this->backPage = $this->selectedViewName;\n+    }\n+\n     \/**\n      * @param array $column\n      * @param string $name"
        },
        {
            "index":945,
            "vuln_id":"GHSA-4c4g-crqm-xrxw",
            "cwe_id":"{'CWE-908'}",
            "score":4.4,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887'}",
            "dataset":"osv",
            "summary":"Use of unitialized value in TFLite ### Impact\nAll TFLite operations that use quantization can be made to use unitialized values. [For example](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/lite\/kernels\/depthwise_conv.cc#L198-L200):\n\n```cc\n    const auto* affine_quantization =\n        reinterpret_cast<TfLiteAffineQuantization*>(\n            filter->quantization.params);\n```\n\nThe issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code.\n\n### Patches\nWe have patched the issue in GitHub commits [537bc7c723439b9194a358f64d871dd326c18887](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887),\n[4a91f2069f7145aab6ba2d8cfe41be8a110c18a5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5) and [8933b8a21280696ab119b63263babdb54c298538](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":3,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887",
            "commit_sha":"537bc7c723439b9194a358f64d871dd326c18887",
            "patch":"MULTI",
            "chain_ord":"['537bc7c723439b9194a358f64d871dd326c18887', '4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', '8933b8a21280696ab119b63263babdb54c298538']",
            "before_first_fix_commit":"{'e35be978351a8578549d30b6f483825d36dc0f8b'}",
            "last_fix_commit":"8933b8a21280696ab119b63263babdb54c298538",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/16\/2021, 16:35:48",
            "message":"Fix a null pointer exception caused by branching on uninitialized data.\n\nThis is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385163909\nChange-Id: I2beb8d50649b6542db224c163033fbcbaa49314f",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'tensorflow\/lite\/kernels\/svdf.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/537bc7c723439b9194a358f64d871dd326c18887\/tensorflow%2Flite%2Fkernels%2Fsvdf.cc', 'patch': '@@ -256,14 +256,21 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n                                                      output_temp_size_array));\\n \\n     \/\/ Calculate effective scales.\\n+    TF_LITE_ENSURE(context, input->quantization.type != kTfLiteNoQuantization);\\n     auto* input_params =\\n         reinterpret_cast<TfLiteAffineQuantization*>(input->quantization.params);\\n+    TF_LITE_ENSURE(context,\\n+                   weights_feature->quantization.type != kTfLiteNoQuantization);\\n     auto* weights_feature_params = reinterpret_cast<TfLiteAffineQuantization*>(\\n         weights_feature->quantization.params);\\n+    TF_LITE_ENSURE(context, state->quantization.type != kTfLiteNoQuantization);\\n     auto* state_params =\\n         reinterpret_cast<TfLiteAffineQuantization*>(state->quantization.params);\\n+    TF_LITE_ENSURE(context,\\n+                   weights_time->quantization.type != kTfLiteNoQuantization);\\n     auto* weight_time_params = reinterpret_cast<TfLiteAffineQuantization*>(\\n         weights_time->quantization.params);\\n+    TF_LITE_ENSURE(context, output->quantization.type != kTfLiteNoQuantization);\\n     auto* output_params = reinterpret_cast<TfLiteAffineQuantization*>(\\n         output->quantization.params);\\n     const double effective_scale_1 = input_params->scale->data[0] *'}}",
            "message_norm":"fix a null pointer exception caused by branching on uninitialized data.\n\nthis is due to not checking that the params for the quantization exists. if there is no quantization, we should not access the `.params` field.\n\npiperorigin-revid: 385163909\nchange-id: i2beb8d50649b6542db224c163033fbcbaa49314f",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('null pointer exception', 'SECWORD', ''), ('uninitialized', 'SECWORD', ''), ('385163909', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/svdf.cc'])",
            "num_files":1.0,
            "patch_content":"From 537bc7c723439b9194a358f64d871dd326c18887 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 16 Jul 2021 09:35:48 -0700\nSubject: [PATCH] Fix a null pointer exception caused by branching on\n uninitialized data.\n\nThis is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385163909\nChange-Id: I2beb8d50649b6542db224c163033fbcbaa49314f\n---\n tensorflow\/lite\/kernels\/svdf.cc | 7 +++++++\n 1 file changed, 7 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/svdf.cc b\/tensorflow\/lite\/kernels\/svdf.cc\nindex 6c02508e26b1da..41a71c54a8c922 100644\n--- a\/tensorflow\/lite\/kernels\/svdf.cc\n+++ b\/tensorflow\/lite\/kernels\/svdf.cc\n@@ -256,14 +256,21 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n                                                      output_temp_size_array));\n \n     \/\/ Calculate effective scales.\n+    TF_LITE_ENSURE(context, input->quantization.type != kTfLiteNoQuantization);\n     auto* input_params =\n         reinterpret_cast<TfLiteAffineQuantization*>(input->quantization.params);\n+    TF_LITE_ENSURE(context,\n+                   weights_feature->quantization.type != kTfLiteNoQuantization);\n     auto* weights_feature_params = reinterpret_cast<TfLiteAffineQuantization*>(\n         weights_feature->quantization.params);\n+    TF_LITE_ENSURE(context, state->quantization.type != kTfLiteNoQuantization);\n     auto* state_params =\n         reinterpret_cast<TfLiteAffineQuantization*>(state->quantization.params);\n+    TF_LITE_ENSURE(context,\n+                   weights_time->quantization.type != kTfLiteNoQuantization);\n     auto* weight_time_params = reinterpret_cast<TfLiteAffineQuantization*>(\n         weights_time->quantization.params);\n+    TF_LITE_ENSURE(context, output->quantization.type != kTfLiteNoQuantization);\n     auto* output_params = reinterpret_cast<TfLiteAffineQuantization*>(\n         output->quantization.params);\n     const double effective_scale_1 = input_params->scale->data[0] *",
            "code_diff":"@@ -256,14 +256,21 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n                                                      output_temp_size_array));\n \n     \/\/ Calculate effective scales.\n+    TF_LITE_ENSURE(context, input->quantization.type != kTfLiteNoQuantization);\n     auto* input_params =\n         reinterpret_cast<TfLiteAffineQuantization*>(input->quantization.params);\n+    TF_LITE_ENSURE(context,\n+                   weights_feature->quantization.type != kTfLiteNoQuantization);\n     auto* weights_feature_params = reinterpret_cast<TfLiteAffineQuantization*>(\n         weights_feature->quantization.params);\n+    TF_LITE_ENSURE(context, state->quantization.type != kTfLiteNoQuantization);\n     auto* state_params =\n         reinterpret_cast<TfLiteAffineQuantization*>(state->quantization.params);\n+    TF_LITE_ENSURE(context,\n+                   weights_time->quantization.type != kTfLiteNoQuantization);\n     auto* weight_time_params = reinterpret_cast<TfLiteAffineQuantization*>(\n         weights_time->quantization.params);\n+    TF_LITE_ENSURE(context, output->quantization.type != kTfLiteNoQuantization);\n     auto* output_params = reinterpret_cast<TfLiteAffineQuantization*>(\n         output->quantization.params);\n     const double effective_scale_1 = input_params->scale->data[0] *"
        },
        {
            "index":586,
            "vuln_id":"GHSA-8wf2-3ggj-78q9",
            "cwe_id":"{'CWE-287'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/phpmyadmin\/phpmyadmin\/commit\/ca54f1db050859eb8555875c6aa5d7796fdf4b32'}",
            "dataset":"osv",
            "summary":"Improper Authentication in phpmyadmin An issue was discovered in phpMyAdmin 4.9 before 4.9.8 and 5.1 before 5.1.2. A valid user who is already authenticated to phpMyAdmin can manipulate their account to bypass two-factor authentication for future login instances.",
            "published_date":"2022-01-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/phpmyadmin\/phpmyadmin",
            "commit_href":"https:\/\/github.com\/phpmyadmin\/phpmyadmin\/commit\/ca54f1db050859eb8555875c6aa5d7796fdf4b32",
            "commit_sha":"ca54f1db050859eb8555875c6aa5d7796fdf4b32",
            "patch":"SINGLE",
            "chain_ord":"['ca54f1db050859eb8555875c6aa5d7796fdf4b32']",
            "before_first_fix_commit":"{'ae11d5260b4bde42100c8696218a2bfd11a2d740'}",
            "last_fix_commit":"ca54f1db050859eb8555875c6aa5d7796fdf4b32",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2022, 01:59:41",
            "message":"security - Fix - 2FA\/U2F can be disabled without any code change\n\nSigned-off-by: William Desportes <williamdes@wdes.fr>",
            "author":"William Desportes",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 11, 'total': 27}",
            "files":"{'libraries\/classes\/DatabaseInterface.php': {'additions': 16, 'deletions': 11, 'changes': 27, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/phpmyadmin\/phpmyadmin\/raw\/ca54f1db050859eb8555875c6aa5d7796fdf4b32\/libraries%2Fclasses%2FDatabaseInterface.php', 'patch': '@@ -1563,17 +1563,22 @@ public function setCollation($collation)\\n      *\/\\n     public function initRelationParamsCache()\\n     {\\n-        if (strlen($GLOBALS[\\'db\\'])) {\\n-            $cfgRelation = $this->relation->getRelationsParam();\\n-            if (empty($cfgRelation[\\'db\\'])) {\\n-                $this->relation->fixPmaTables($GLOBALS[\\'db\\'], false);\\n-            }\\n-        }\\n-        $cfgRelation = $this->relation->getRelationsParam();\\n-        if (empty($cfgRelation[\\'db\\']) && isset($GLOBALS[\\'dblist\\'])) {\\n-            if ($GLOBALS[\\'dblist\\']->databases->exists(\\'phpmyadmin\\')) {\\n-                $this->relation->fixPmaTables(\\'phpmyadmin\\', false);\\n-            }\\n+        $storageDbName = $GLOBALS[\\'cfg\\'][\\'Server\\'][\\'pmadb\\'] ?? \\'\\';\\n+        \/\/ Use \"phpmyadmin\" as a default database name to check to keep the behavior consistent\\n+        $storageDbName = $storageDbName !== null\\n+                            && is_string($storageDbName)\\n+                            && $storageDbName !== \\'\\' ? $storageDbName : \\'phpmyadmin\\';\\n+\\n+        \/\/ This will make users not having explicitly listed databases\\n+        \/\/ have config values filled by the default phpMyAdmin storage table name values\\n+        $this->relation->fixPmaTables($storageDbName, false);\\n+\\n+        \/\/ This global will be changed if fixPmaTables did find one valid table\\n+        $storageDbName = $GLOBALS[\\'cfg\\'][\\'Server\\'][\\'pmadb\\'] ?? \\'\\';\\n+\\n+        \/\/ Empty means that until now no pmadb was found eligible\\n+        if (empty($storageDbName)) {\\n+            $this->relation->fixPmaTables($GLOBALS[\\'db\\'], false);\\n         }\\n     }'}}",
            "message_norm":"security - fix - 2fa\/u2f can be disabled without any code change\n\nsigned-off-by: william desportes <williamdes@wdes.fr>",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('williamdes@wdes.fr', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['libraries\/classes\/DatabaseInterface.php'])",
            "num_files":1.0,
            "patch_content":"From ca54f1db050859eb8555875c6aa5d7796fdf4b32 Mon Sep 17 00:00:00 2001\nFrom: William Desportes <williamdes@wdes.fr>\nDate: Thu, 13 Jan 2022 02:59:41 +0100\nSubject: [PATCH] security - Fix - 2FA\/U2F can be disabled without any code\n change\n\nSigned-off-by: William Desportes <williamdes@wdes.fr>\n---\n libraries\/classes\/DatabaseInterface.php | 27 +++++++++++++++----------\n 1 file changed, 16 insertions(+), 11 deletions(-)\n\ndiff --git a\/libraries\/classes\/DatabaseInterface.php b\/libraries\/classes\/DatabaseInterface.php\nindex 47e1946c89e7..7ab5d754fb0a 100644\n--- a\/libraries\/classes\/DatabaseInterface.php\n+++ b\/libraries\/classes\/DatabaseInterface.php\n@@ -1563,17 +1563,22 @@ public function setCollation($collation)\n      *\/\n     public function initRelationParamsCache()\n     {\n-        if (strlen($GLOBALS['db'])) {\n-            $cfgRelation = $this->relation->getRelationsParam();\n-            if (empty($cfgRelation['db'])) {\n-                $this->relation->fixPmaTables($GLOBALS['db'], false);\n-            }\n-        }\n-        $cfgRelation = $this->relation->getRelationsParam();\n-        if (empty($cfgRelation['db']) && isset($GLOBALS['dblist'])) {\n-            if ($GLOBALS['dblist']->databases->exists('phpmyadmin')) {\n-                $this->relation->fixPmaTables('phpmyadmin', false);\n-            }\n+        $storageDbName = $GLOBALS['cfg']['Server']['pmadb'] ?? '';\n+        \/\/ Use \"phpmyadmin\" as a default database name to check to keep the behavior consistent\n+        $storageDbName = $storageDbName !== null\n+                            && is_string($storageDbName)\n+                            && $storageDbName !== '' ? $storageDbName : 'phpmyadmin';\n+\n+        \/\/ This will make users not having explicitly listed databases\n+        \/\/ have config values filled by the default phpMyAdmin storage table name values\n+        $this->relation->fixPmaTables($storageDbName, false);\n+\n+        \/\/ This global will be changed if fixPmaTables did find one valid table\n+        $storageDbName = $GLOBALS['cfg']['Server']['pmadb'] ?? '';\n+\n+        \/\/ Empty means that until now no pmadb was found eligible\n+        if (empty($storageDbName)) {\n+            $this->relation->fixPmaTables($GLOBALS['db'], false);\n         }\n     }",
            "code_diff":"@@ -1563,17 +1563,22 @@ public function setCollation($collation)\n      *\/\n     public function initRelationParamsCache()\n     {\n-        if (strlen($GLOBALS['db'])) {\n-            $cfgRelation = $this->relation->getRelationsParam();\n-            if (empty($cfgRelation['db'])) {\n-                $this->relation->fixPmaTables($GLOBALS['db'], false);\n-            }\n-        }\n-        $cfgRelation = $this->relation->getRelationsParam();\n-        if (empty($cfgRelation['db']) && isset($GLOBALS['dblist'])) {\n-            if ($GLOBALS['dblist']->databases->exists('phpmyadmin')) {\n-                $this->relation->fixPmaTables('phpmyadmin', false);\n-            }\n+        $storageDbName = $GLOBALS['cfg']['Server']['pmadb'] ?? '';\n+        \/\/ Use \"phpmyadmin\" as a default database name to check to keep the behavior consistent\n+        $storageDbName = $storageDbName !== null\n+                            && is_string($storageDbName)\n+                            && $storageDbName !== '' ? $storageDbName : 'phpmyadmin';\n+\n+        \/\/ This will make users not having explicitly listed databases\n+        \/\/ have config values filled by the default phpMyAdmin storage table name values\n+        $this->relation->fixPmaTables($storageDbName, false);\n+\n+        \/\/ This global will be changed if fixPmaTables did find one valid table\n+        $storageDbName = $GLOBALS['cfg']['Server']['pmadb'] ?? '';\n+\n+        \/\/ Empty means that until now no pmadb was found eligible\n+        if (empty($storageDbName)) {\n+            $this->relation->fixPmaTables($GLOBALS['db'], false);\n         }\n     }"
        },
        {
            "index":776,
            "vuln_id":"GHSA-wp77-4gmm-7cq8",
            "cwe_id":"{'CWE-476'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9728c60e136912a12d99ca56e106b7cce7af5986'}",
            "dataset":"osv",
            "summary":"Incorrect validation of `SaveV2` inputs ### Impact\nThe code for `tf.raw_ops.SaveV2` does not properly validate the inputs and an attacker can trigger a null pointer dereference:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SaveV2(\n  prefix=['tensorflow'],\n  tensor_name=['v'],\n  shape_and_slices=[],\n  tensors=[1,2,3])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/save_restore_v2_ops.cc) uses `ValidateInputs` to  check that the input arguments are valid. This validation would have caught the illegal state represented by the reproducer  above.\n\nHowever, the validation uses `OP_REQUIRES` which translates to setting the `Status` object of the current `OpKernelContext` to an error status, followed by an empty `return` statement which just terminates the execution of the function it is present in. However, this does not mean that the kernel execution is finalized: instead, execution continues from the next line in `Compute` that follows the call to `ValidateInputs`. This is equivalent to lacking the validation.\n      \n### Patches\nWe have patched the issue in GitHub commit [9728c60e136912a12d99ca56e106b7cce7af5986](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9728c60e136912a12d99ca56e106b7cce7af5986).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.                                                                                                                                                                                                                                               \n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9728c60e136912a12d99ca56e106b7cce7af5986",
            "commit_sha":"9728c60e136912a12d99ca56e106b7cce7af5986",
            "patch":"SINGLE",
            "chain_ord":"['9728c60e136912a12d99ca56e106b7cce7af5986']",
            "before_first_fix_commit":"{'f2a673bd34f0d64b8e40a551ac78989d16daad09'}",
            "last_fix_commit":"9728c60e136912a12d99ca56e106b7cce7af5986",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 02:05:41",
            "message":"Ensure validation sticks in `save_restore_v2_ops.cc`\n\nPiperOrigin-RevId: 387924206\nChange-Id: I6156842eb3230076b5812c0815f3e66bd5241454",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/save_restore_v2_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9728c60e136912a12d99ca56e106b7cce7af5986\/tensorflow%2Fcore%2Fkernels%2Fsave_restore_v2_ops.cc', 'patch': '@@ -98,6 +98,7 @@ class SaveV2 : public OpKernel {\\n     const Tensor& shape_and_slices = context->input(2);\\n     ValidateInputs(true \/* is save op *\/, context, prefix, tensor_names,\\n                    shape_and_slices);\\n+    if (!context->status().ok()) return;\\n \\n     const int kFixedInputs = 3;  \/\/ Prefix, tensor names, shape_and_slices.\\n     const int num_tensors = static_cast<int>(tensor_names.NumElements());\\n@@ -177,6 +178,7 @@ class RestoreV2 : public OpKernel {\\n                                         \" expected dtypes.\"));\\n     ValidateInputs(false \/* not save op *\/, context, prefix, tensor_names,\\n                    shape_and_slices);\\n+    if (!context->status().ok()) return;\\n \\n     const string& prefix_string = prefix.scalar<tstring>()();'}}",
            "message_norm":"ensure validation sticks in `save_restore_v2_ops.cc`\n\npiperorigin-revid: 387924206\nchange-id: i6156842eb3230076b5812c0815f3e66bd5241454",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('387924206', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/save_restore_v2_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From 9728c60e136912a12d99ca56e106b7cce7af5986 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 30 Jul 2021 19:05:41 -0700\nSubject: [PATCH] Ensure validation sticks in `save_restore_v2_ops.cc`\n\nPiperOrigin-RevId: 387924206\nChange-Id: I6156842eb3230076b5812c0815f3e66bd5241454\n---\n tensorflow\/core\/kernels\/save_restore_v2_ops.cc | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/save_restore_v2_ops.cc b\/tensorflow\/core\/kernels\/save_restore_v2_ops.cc\nindex 44738d0f0cca3c..809a26030b850e 100644\n--- a\/tensorflow\/core\/kernels\/save_restore_v2_ops.cc\n+++ b\/tensorflow\/core\/kernels\/save_restore_v2_ops.cc\n@@ -98,6 +98,7 @@ class SaveV2 : public OpKernel {\n     const Tensor& shape_and_slices = context->input(2);\n     ValidateInputs(true \/* is save op *\/, context, prefix, tensor_names,\n                    shape_and_slices);\n+    if (!context->status().ok()) return;\n \n     const int kFixedInputs = 3;  \/\/ Prefix, tensor names, shape_and_slices.\n     const int num_tensors = static_cast<int>(tensor_names.NumElements());\n@@ -177,6 +178,7 @@ class RestoreV2 : public OpKernel {\n                                         \" expected dtypes.\"));\n     ValidateInputs(false \/* not save op *\/, context, prefix, tensor_names,\n                    shape_and_slices);\n+    if (!context->status().ok()) return;\n \n     const string& prefix_string = prefix.scalar<tstring>()();",
            "code_diff":"@@ -98,6 +98,7 @@ class SaveV2 : public OpKernel {\n     const Tensor& shape_and_slices = context->input(2);\n     ValidateInputs(true \/* is save op *\/, context, prefix, tensor_names,\n                    shape_and_slices);\n+    if (!context->status().ok()) return;\n \n     const int kFixedInputs = 3;  \/\/ Prefix, tensor names, shape_and_slices.\n     const int num_tensors = static_cast<int>(tensor_names.NumElements());\n@@ -177,6 +178,7 @@ class RestoreV2 : public OpKernel {\n                                         \" expected dtypes.\"));\n     ValidateInputs(false \/* not save op *\/, context, prefix, tensor_names,\n                    shape_and_slices);\n+    if (!context->status().ok()) return;\n \n     const string& prefix_string = prefix.scalar<tstring>()();"
        },
        {
            "index":21,
            "vuln_id":"GHSA-34hv-f45p-4qfq",
            "cwe_id":"{'CWE-601'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/WWBN\/AVideo\/commit\/77e9aa6411ff4b97571eb82e587139ec05ff894c'}",
            "dataset":"osv",
            "summary":"Open redirect in wwbn\/avideo Open redirect vulnerability in objects\/login.json.php in WWBN AVideo through 11.6, allows attackers to arbitrarily redirect users from a crafted url to the login page. A patch is available on the `master` branch of the repository.",
            "published_date":"2022-04-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/WWBN\/AVideo",
            "commit_href":"https:\/\/github.com\/WWBN\/AVideo\/commit\/77e9aa6411ff4b97571eb82e587139ec05ff894c",
            "commit_sha":"77e9aa6411ff4b97571eb82e587139ec05ff894c",
            "patch":"SINGLE",
            "chain_ord":"['77e9aa6411ff4b97571eb82e587139ec05ff894c']",
            "before_first_fix_commit":"{'24a25e4f415be8146c89f04df32ba4acce1b0e80'}",
            "last_fix_commit":"77e9aa6411ff4b97571eb82e587139ec05ff894c",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 17:54:12",
            "message":"Open Redirect fix, thanks Max Boll",
            "author":"Daniel",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'objects\/login.json.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WWBN\/AVideo\/raw\/77e9aa6411ff4b97571eb82e587139ec05ff894c\/objects%2Flogin.json.php', 'patch': '@@ -30,7 +30,7 @@\\n Category::clearCacheCount();\\n TimeLogEnd($timeLog, __LINE__);\\n \\n-if (!preg_match(\"|^\" . $global[\\'webSiteRootURL\\'] . \"|\", $_POST[\\'redirectUri\\'])) {\\n+if(!isSameDomain($global[\\'webSiteRootURL\\'], $_POST[\\'redirectUri\\'])){\\n     $_POST[\\'redirectUri\\'] = $global[\\'webSiteRootURL\\'];\\n }\\n _error_log(\"Start Login Request redirectUri=\" . $_POST[\\'redirectUri\\']);'}}",
            "message_norm":"open redirect fix, thanks max boll",
            "language":"en",
            "entities":"[('open redirect', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['objects\/login.json.php'])",
            "num_files":1.0,
            "patch_content":"From 77e9aa6411ff4b97571eb82e587139ec05ff894c Mon Sep 17 00:00:00 2001\nFrom: Daniel <danielneto.com@gmail.com>\nDate: Mon, 14 Mar 2022 14:54:12 -0300\nSubject: [PATCH] Open Redirect fix, thanks Max Boll\n\n---\n objects\/login.json.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/objects\/login.json.php b\/objects\/login.json.php\nindex 25461f09a8c0..e184cd8ad49f 100644\n--- a\/objects\/login.json.php\n+++ b\/objects\/login.json.php\n@@ -30,7 +30,7 @@\n Category::clearCacheCount();\n TimeLogEnd($timeLog, __LINE__);\n \n-if (!preg_match(\"|^\" . $global['webSiteRootURL'] . \"|\", $_POST['redirectUri'])) {\n+if(!isSameDomain($global['webSiteRootURL'], $_POST['redirectUri'])){\n     $_POST['redirectUri'] = $global['webSiteRootURL'];\n }\n _error_log(\"Start Login Request redirectUri=\" . $_POST['redirectUri']);",
            "code_diff":"@@ -30,7 +30,7 @@\n Category::clearCacheCount();\n TimeLogEnd($timeLog, __LINE__);\n \n-if (!preg_match(\"|^\" . $global['webSiteRootURL'] . \"|\", $_POST['redirectUri'])) {\n+if(!isSameDomain($global['webSiteRootURL'], $_POST['redirectUri'])){\n     $_POST['redirectUri'] = $global['webSiteRootURL'];\n }\n _error_log(\"Start Login Request redirectUri=\" . $_POST['redirectUri']);"
        },
        {
            "index":759,
            "vuln_id":"GHSA-37q6-576q-vgr7",
            "cwe_id":"{'CWE-200'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/parcel-bundler\/parcel\/commit\/066e0bf6bd26b15c78bd47df023452e4b20073e4'}",
            "dataset":"osv",
            "summary":"Missing Origin Validation in parcel-bundler Versions of `parcel-bundler` before 1.10.0 are missing origin validation on the websocket server. This vulnerability allows a remote attacker to steal a developer's source code because the origin of requests to the websocket server that is used for Hot Module Replacement (HMR) are not validated.\n\n\n## Recommendation\n\nUpdate to version 1.10.0 or later.",
            "published_date":"2018-10-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/parcel-bundler\/parcel",
            "commit_href":"https:\/\/github.com\/parcel-bundler\/parcel\/commit\/066e0bf6bd26b15c78bd47df023452e4b20073e4",
            "commit_sha":"066e0bf6bd26b15c78bd47df023452e4b20073e4",
            "patch":"SINGLE",
            "chain_ord":"['066e0bf6bd26b15c78bd47df023452e4b20073e4']",
            "before_first_fix_commit":"{'948159b99adbc74857b380576e1e104a9097f259'}",
            "last_fix_commit":"066e0bf6bd26b15c78bd47df023452e4b20073e4",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/25\/2018, 03:49:56",
            "message":"fix security vuln (#1794)",
            "author":"Jasper De Moor",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 1, 'total': 12}",
            "files":"{'packages\/core\/parcel-bundler\/src\/HMRServer.js': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/parcel-bundler\/parcel\/raw\/066e0bf6bd26b15c78bd47df023452e4b20073e4\/packages%2Fcore%2Fparcel-bundler%2Fsrc%2FHMRServer.js', 'patch': \"@@ -17,7 +17,17 @@ class HMRServer {\\n         this.server = https.createServer(await getCertificate(options.https));\\n       }\\n \\n-      this.wss = new WebSocket.Server({server: this.server});\\n+      let websocketOptions = {\\n+        server: this.server\\n+      };\\n+\\n+      if (options.hmrHostname) {\\n+        websocketOptions.origin = `${options.https ? 'https' : 'http'}:\/\/${\\n+          options.hmrHostname\\n+        }`;\\n+      }\\n+\\n+      this.wss = new WebSocket.Server(websocketOptions);\\n       this.server.listen(options.hmrPort, resolve);\\n     });\"}}",
            "message_norm":"fix security vuln (#1794)",
            "language":"ro",
            "entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('#1794', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/core\/parcel-bundler\/src\/HMRServer.js'])",
            "num_files":1.0,
            "patch_content":"From 066e0bf6bd26b15c78bd47df023452e4b20073e4 Mon Sep 17 00:00:00 2001\nFrom: Jasper De Moor <jasperdemoor@gmail.com>\nDate: Mon, 24 Sep 2018 20:49:56 -0700\nSubject: [PATCH] fix security vuln (#1794)\n\n---\n packages\/core\/parcel-bundler\/src\/HMRServer.js | 12 +++++++++++-\n 1 file changed, 11 insertions(+), 1 deletion(-)\n\ndiff --git a\/packages\/core\/parcel-bundler\/src\/HMRServer.js b\/packages\/core\/parcel-bundler\/src\/HMRServer.js\nindex 45176385e90..286d7bb5014 100644\n--- a\/packages\/core\/parcel-bundler\/src\/HMRServer.js\n+++ b\/packages\/core\/parcel-bundler\/src\/HMRServer.js\n@@ -17,7 +17,17 @@ class HMRServer {\n         this.server = https.createServer(await getCertificate(options.https));\n       }\n \n-      this.wss = new WebSocket.Server({server: this.server});\n+      let websocketOptions = {\n+        server: this.server\n+      };\n+\n+      if (options.hmrHostname) {\n+        websocketOptions.origin = `${options.https ? 'https' : 'http'}:\/\/${\n+          options.hmrHostname\n+        }`;\n+      }\n+\n+      this.wss = new WebSocket.Server(websocketOptions);\n       this.server.listen(options.hmrPort, resolve);\n     });",
            "code_diff":"@@ -17,7 +17,17 @@ class HMRServer {\n         this.server = https.createServer(await getCertificate(options.https));\n       }\n \n-      this.wss = new WebSocket.Server({server: this.server});\n+      let websocketOptions = {\n+        server: this.server\n+      };\n+\n+      if (options.hmrHostname) {\n+        websocketOptions.origin = `${options.https ? 'https' : 'http'}:\/\/${\n+          options.hmrHostname\n+        }`;\n+      }\n+\n+      this.wss = new WebSocket.Server(websocketOptions);\n       this.server.listen(options.hmrPort, resolve);\n     });"
        },
        {
            "index":209,
            "vuln_id":"GHSA-2gqg-2rg7-gh33",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/cc6112b8fb36039b862b42d86eb79ef7ee89d31b'}",
            "dataset":"osv",
            "summary":"Cross site scripting in librenms LibreNMS v22.3.0 was discovered to contain a cross-site scripting (XSS) vulnerability via the component \/Table\/GraylogController.php.",
            "published_date":"2022-06-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/librenms\/librenms",
            "commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/cc6112b8fb36039b862b42d86eb79ef7ee89d31b",
            "commit_sha":"cc6112b8fb36039b862b42d86eb79ef7ee89d31b",
            "patch":"SINGLE",
            "chain_ord":"['cc6112b8fb36039b862b42d86eb79ef7ee89d31b']",
            "before_first_fix_commit":"{'9c126572a2aebd43838aab9bf6abc09719ce983e'}",
            "last_fix_commit":"cc6112b8fb36039b862b42d86eb79ef7ee89d31b",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2022, 23:10:02",
            "message":"fix graylog xss (#13931)",
            "author":"Tony Murray",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'app\/Http\/Controllers\/Table\/GraylogController.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/cc6112b8fb36039b862b42d86eb79ef7ee89d31b\/app%2FHttp%2FControllers%2FTable%2FGraylogController.php', 'patch': '@@ -118,8 +118,8 @@ private function formatMessage($message)\\n         return [\\n             \\'severity\\'  => $this->severityLabel($level),\\n             \\'timestamp\\' => $displayTime,\\n-            \\'source\\'    => $device ? Url::deviceLink($device) : $message[\\'message\\'][\\'source\\'],\\n-            \\'message\\'   => $message[\\'message\\'][\\'message\\'] ?? \\'\\',\\n+            \\'source\\'    => $device ? Url::deviceLink($device) : htmlspecialchars($message[\\'message\\'][\\'source\\']),\\n+            \\'message\\'   => htmlspecialchars($message[\\'message\\'][\\'message\\'] ?? \\'\\'),\\n             \\'facility\\'  => is_numeric($facility) ? \"($facility) \" . __(\"syslog.facility.$facility\") : $facility,\\n             \\'level\\'     => (is_numeric($level) && $level >= 0) ? \"($level) \" . __(\"syslog.severity.$level\") : $level,\\n         ];'}}",
            "message_norm":"fix graylog xss (#13931)",
            "language":"no",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', ''), ('#13931', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/Table\/GraylogController.php'])",
            "num_files":1.0,
            "patch_content":"From cc6112b8fb36039b862b42d86eb79ef7ee89d31b Mon Sep 17 00:00:00 2001\nFrom: Tony Murray <murraytony@gmail.com>\nDate: Tue, 19 Apr 2022 18:10:02 -0500\nSubject: [PATCH] fix graylog xss (#13931)\n\n---\n app\/Http\/Controllers\/Table\/GraylogController.php | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/app\/Http\/Controllers\/Table\/GraylogController.php b\/app\/Http\/Controllers\/Table\/GraylogController.php\nindex bc0d9f418c6e..ec911c790af1 100644\n--- a\/app\/Http\/Controllers\/Table\/GraylogController.php\n+++ b\/app\/Http\/Controllers\/Table\/GraylogController.php\n@@ -118,8 +118,8 @@ private function formatMessage($message)\n         return [\n             'severity'  => $this->severityLabel($level),\n             'timestamp' => $displayTime,\n-            'source'    => $device ? Url::deviceLink($device) : $message['message']['source'],\n-            'message'   => $message['message']['message'] ?? '',\n+            'source'    => $device ? Url::deviceLink($device) : htmlspecialchars($message['message']['source']),\n+            'message'   => htmlspecialchars($message['message']['message'] ?? ''),\n             'facility'  => is_numeric($facility) ? \"($facility) \" . __(\"syslog.facility.$facility\") : $facility,\n             'level'     => (is_numeric($level) && $level >= 0) ? \"($level) \" . __(\"syslog.severity.$level\") : $level,\n         ];",
            "code_diff":"@@ -118,8 +118,8 @@ private function formatMessage($message)\n         return [\n             'severity'  => $this->severityLabel($level),\n             'timestamp' => $displayTime,\n-            'source'    => $device ? Url::deviceLink($device) : $message['message']['source'],\n-            'message'   => $message['message']['message'] ?? '',\n+            'source'    => $device ? Url::deviceLink($device) : htmlspecialchars($message['message']['source']),\n+            'message'   => htmlspecialchars($message['message']['message'] ?? ''),\n             'facility'  => is_numeric($facility) ? \"($facility) \" . __(\"syslog.facility.$facility\") : $facility,\n             'level'     => (is_numeric($level) && $level >= 0) ? \"($level) \" . __(\"syslog.severity.$level\") : $level,\n         ];"
        },
        {
            "index":915,
            "vuln_id":"GHSA-8jj7-5vxc-pg2q",
            "cwe_id":"{'CWE-190'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0aaaae6eca5a7175a193696383f582f53adab23f'}",
            "dataset":"osv",
            "summary":"Integer overflow in TensorFlow ### Impact\nUnder certain scenarios, Grappler component of TensorFlow is vulnerable to an integer overflow during [cost estimation for crop and resize](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc#L2621-L2689). Since the cropping parameters are user controlled, a malicious person can trigger undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [0aaaae6eca5a7175a193696383f582f53adab23f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0aaaae6eca5a7175a193696383f582f53adab23f).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0aaaae6eca5a7175a193696383f582f53adab23f",
            "commit_sha":"0aaaae6eca5a7175a193696383f582f53adab23f",
            "patch":"SINGLE",
            "chain_ord":"['0aaaae6eca5a7175a193696383f582f53adab23f']",
            "before_first_fix_commit":"{'6b5adc0877de832b2a7c189532dbbbc64622eeb6'}",
            "last_fix_commit":"0aaaae6eca5a7175a193696383f582f53adab23f",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/13\/2021, 16:19:05",
            "message":"Prevent overflow in grappler cost estimation of crop&resize op.\n\nThe crop parameters are user controlled, so we should make sure a user can not trigger an overflow maliciously.\n\nPiperOrigin-RevId: 409670234\nChange-Id: I7994734a98b037c5642e051240329d16f959aae4",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 22, 'deletions': 7, 'total': 29}",
            "files":"{'tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc': {'additions': 22, 'deletions': 7, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0aaaae6eca5a7175a193696383f582f53adab23f\/tensorflow%2Fcore%2Fgrappler%2Fcosts%2Fop_level_cost_estimator.cc', 'patch': '@@ -2681,27 +2681,42 @@ Status OpLevelCostEstimator::PredictCropAndResize(const OpContext& op_context,\\n   \/\/ calculation differs from rough estimate in implementation, as it separates\\n   \/\/ out cost per box from cost per pixel and cost per element.\\n \\n+  \/\/ Since crop arguments are user controlled, check for overflow.\\n+  int64_t crop_area = MultiplyWithoutOverflow(crop_height, crop_width);\\n+  if (crop_area < 0)\\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\\n+                                   crop_height, \" with \", crop_width,\\n+                                   \" would overflow\");\\n+  int64_t crop_volume = MultiplyWithoutOverflow(crop_area, num_boxes);\\n+  if (crop_volume < 0)\\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\\n+                                   crop_area, \" with \", num_boxes,\\n+                                   \" would overflow\");\\n+  int64_t crop_depth = MultiplyWithoutOverflow(crop_height, num_boxes);\\n+  if (crop_depth < 0)\\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\\n+                                   crop_height, \" with \", num_boxes,\\n+                                   \" would overflow\");\\n+\\n   \/\/ Ops for variables height_scale and width_scale.\\n   int64_t ops = (sub_cost * 6 + mul_cost * 2 + div_cost * 2) * num_boxes;\\n   \/\/ Ops for variable in_y.\\n-  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * num_boxes;\\n+  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_depth;\\n   \/\/ Ops for variable in_x (same computation across both branches).\\n-  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * crop_width *\\n-         num_boxes;\\n+  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_volume;\\n   \/\/ Specify op_cost based on the method.\\n   if (use_bilinear_interp) {\\n     \/\/ Ops for variables top_y_index, bottom_y_index, y_lerp.\\n-    ops += (floor_cost + ceil_cost + sub_cost) * crop_height * num_boxes;\\n+    ops += (floor_cost + ceil_cost + sub_cost) * crop_depth;\\n     \/\/ Ops for variables left_x, right_x, x_lerp;\\n-    ops += (floor_cost + ceil_cost + sub_cost) * crop_height * crop_width *\\n-           num_boxes;\\n+    ops += (floor_cost + ceil_cost + sub_cost) * crop_volume;\\n     \/\/ Ops for innermost loop across depth.\\n     ops +=\\n         (cast_to_float_cost * 4 + add_cost * 3 + sub_cost * 3 + mul_cost * 3) *\\n         output_elements;\\n   } else \/* method == \"nearest\" *\/ {\\n     \/\/ Ops for variables closest_x_index and closest_y_index.\\n-    ops += round_cost * 2 * crop_height * crop_width * num_boxes;\\n+    ops += round_cost * 2 * crop_volume;\\n     \/\/ Ops for innermost loop across depth.\\n     ops += cast_to_float_cost * output_elements;\\n   }'}}",
            "message_norm":"prevent overflow in grappler cost estimation of crop&resize op.\n\nthe crop parameters are user controlled, so we should make sure a user can not trigger an overflow maliciously.\n\npiperorigin-revid: 409670234\nchange-id: i7994734a98b037c5642e051240329d16f959aae4",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('maliciously', 'SECWORD', ''), ('409670234', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc'])",
            "num_files":1.0,
            "patch_content":"From 0aaaae6eca5a7175a193696383f582f53adab23f Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Sat, 13 Nov 2021 08:19:05 -0800\nSubject: [PATCH] Prevent overflow in grappler cost estimation of crop&resize\n op.\n\nThe crop parameters are user controlled, so we should make sure a user can not trigger an overflow maliciously.\n\nPiperOrigin-RevId: 409670234\nChange-Id: I7994734a98b037c5642e051240329d16f959aae4\n---\n ...\/grappler\/costs\/op_level_cost_estimator.cc | 29 ++++++++++++++-----\n 1 file changed, 22 insertions(+), 7 deletions(-)\n\ndiff --git a\/tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc b\/tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc\nindex 640a530bf08ea1..6e516e2a686120 100644\n--- a\/tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc\n+++ b\/tensorflow\/core\/grappler\/costs\/op_level_cost_estimator.cc\n@@ -2681,27 +2681,42 @@ Status OpLevelCostEstimator::PredictCropAndResize(const OpContext& op_context,\n   \/\/ calculation differs from rough estimate in implementation, as it separates\n   \/\/ out cost per box from cost per pixel and cost per element.\n \n+  \/\/ Since crop arguments are user controlled, check for overflow.\n+  int64_t crop_area = MultiplyWithoutOverflow(crop_height, crop_width);\n+  if (crop_area < 0)\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\n+                                   crop_height, \" with \", crop_width,\n+                                   \" would overflow\");\n+  int64_t crop_volume = MultiplyWithoutOverflow(crop_area, num_boxes);\n+  if (crop_volume < 0)\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\n+                                   crop_area, \" with \", num_boxes,\n+                                   \" would overflow\");\n+  int64_t crop_depth = MultiplyWithoutOverflow(crop_height, num_boxes);\n+  if (crop_depth < 0)\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\n+                                   crop_height, \" with \", num_boxes,\n+                                   \" would overflow\");\n+\n   \/\/ Ops for variables height_scale and width_scale.\n   int64_t ops = (sub_cost * 6 + mul_cost * 2 + div_cost * 2) * num_boxes;\n   \/\/ Ops for variable in_y.\n-  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * num_boxes;\n+  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_depth;\n   \/\/ Ops for variable in_x (same computation across both branches).\n-  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * crop_width *\n-         num_boxes;\n+  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_volume;\n   \/\/ Specify op_cost based on the method.\n   if (use_bilinear_interp) {\n     \/\/ Ops for variables top_y_index, bottom_y_index, y_lerp.\n-    ops += (floor_cost + ceil_cost + sub_cost) * crop_height * num_boxes;\n+    ops += (floor_cost + ceil_cost + sub_cost) * crop_depth;\n     \/\/ Ops for variables left_x, right_x, x_lerp;\n-    ops += (floor_cost + ceil_cost + sub_cost) * crop_height * crop_width *\n-           num_boxes;\n+    ops += (floor_cost + ceil_cost + sub_cost) * crop_volume;\n     \/\/ Ops for innermost loop across depth.\n     ops +=\n         (cast_to_float_cost * 4 + add_cost * 3 + sub_cost * 3 + mul_cost * 3) *\n         output_elements;\n   } else \/* method == \"nearest\" *\/ {\n     \/\/ Ops for variables closest_x_index and closest_y_index.\n-    ops += round_cost * 2 * crop_height * crop_width * num_boxes;\n+    ops += round_cost * 2 * crop_volume;\n     \/\/ Ops for innermost loop across depth.\n     ops += cast_to_float_cost * output_elements;\n   }",
            "code_diff":"@@ -2681,27 +2681,42 @@ Status OpLevelCostEstimator::PredictCropAndResize(const OpContext& op_context,\n   \/\/ calculation differs from rough estimate in implementation, as it separates\n   \/\/ out cost per box from cost per pixel and cost per element.\n \n+  \/\/ Since crop arguments are user controlled, check for overflow.\n+  int64_t crop_area = MultiplyWithoutOverflow(crop_height, crop_width);\n+  if (crop_area < 0)\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\n+                                   crop_height, \" with \", crop_width,\n+                                   \" would overflow\");\n+  int64_t crop_volume = MultiplyWithoutOverflow(crop_area, num_boxes);\n+  if (crop_volume < 0)\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\n+                                   crop_area, \" with \", num_boxes,\n+                                   \" would overflow\");\n+  int64_t crop_depth = MultiplyWithoutOverflow(crop_height, num_boxes);\n+  if (crop_depth < 0)\n+    return errors::InvalidArgument(\"Cannot estimate cost, multiplying \",\n+                                   crop_height, \" with \", num_boxes,\n+                                   \" would overflow\");\n+\n   \/\/ Ops for variables height_scale and width_scale.\n   int64_t ops = (sub_cost * 6 + mul_cost * 2 + div_cost * 2) * num_boxes;\n   \/\/ Ops for variable in_y.\n-  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * num_boxes;\n+  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_depth;\n   \/\/ Ops for variable in_x (same computation across both branches).\n-  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_height * crop_width *\n-         num_boxes;\n+  ops += (mul_cost * 2 + sub_cost + add_cost) * crop_volume;\n   \/\/ Specify op_cost based on the method.\n   if (use_bilinear_interp) {\n     \/\/ Ops for variables top_y_index, bottom_y_index, y_lerp.\n-    ops += (floor_cost + ceil_cost + sub_cost) * crop_height * num_boxes;\n+    ops += (floor_cost + ceil_cost + sub_cost) * crop_depth;\n     \/\/ Ops for variables left_x, right_x, x_lerp;\n-    ops += (floor_cost + ceil_cost + sub_cost) * crop_height * crop_width *\n-           num_boxes;\n+    ops += (floor_cost + ceil_cost + sub_cost) * crop_volume;\n     \/\/ Ops for innermost loop across depth.\n     ops +=\n         (cast_to_float_cost * 4 + add_cost * 3 + sub_cost * 3 + mul_cost * 3) *\n         output_elements;\n   } else \/* method == \"nearest\" *\/ {\n     \/\/ Ops for variables closest_x_index and closest_y_index.\n-    ops += round_cost * 2 * crop_height * crop_width * num_boxes;\n+    ops += round_cost * 2 * crop_volume;\n     \/\/ Ops for innermost loop across depth.\n     ops += cast_to_float_cost * output_elements;\n   }"
        },
        {
            "index":114,
            "vuln_id":"GHSA-97wf-p777-86jq",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of Split ### Impact\nThe implementation of the `Split` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e2752089ef7ce9bcf3db0ec618ebd23ea119d0c7\/tensorflow\/lite\/kernels\/split.cc#L63-L65):\n\n```cc\nTF_LITE_ENSURE_MSG(context, input_size % num_splits == 0, \"Not an even split\");\nconst int slice_size = input_size \/ num_splits;\n```\n\nAn attacker can craft a model such that `num_splits` would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "commit_sha":"b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "patch":"SINGLE",
            "chain_ord":"['b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d']",
            "before_first_fix_commit":"{'e2752089ef7ce9bcf3db0ec618ebd23ea119d0c7'}",
            "last_fix_commit":"b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 22:31:26",
            "message":"Prevent division by 0\n\nPiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/split.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d\/tensorflow%2Flite%2Fkernels%2Fsplit.cc', 'patch': '@@ -60,6 +60,7 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\\n   TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\\n \\n   const int input_size = SizeOfDimension(input, axis_value);\\n+  TF_LITE_ENSURE(context, num_splits != 0);\\n   TF_LITE_ENSURE_MSG(context, input_size % num_splits == 0,\\n                      \"Not an even split\");\\n   const int slice_size = input_size \/ num_splits;'}}",
            "message_norm":"prevent division by 0\n\npiperorigin-revid: 370998952\nchange-id: i6b1d49079624ee1447d2d9b53a8976fb356cc8f5",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370998952', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/split.cc'])",
            "num_files":1.0,
            "patch_content":"From b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 28 Apr 2021 15:31:26 -0700\nSubject: [PATCH] Prevent division by 0\n\nPiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5\n---\n tensorflow\/lite\/kernels\/split.cc | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/split.cc b\/tensorflow\/lite\/kernels\/split.cc\nindex be7425cc0b5e2c..cf778b0b951242 100644\n--- a\/tensorflow\/lite\/kernels\/split.cc\n+++ b\/tensorflow\/lite\/kernels\/split.cc\n@@ -60,6 +60,7 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\n   TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\n \n   const int input_size = SizeOfDimension(input, axis_value);\n+  TF_LITE_ENSURE(context, num_splits != 0);\n   TF_LITE_ENSURE_MSG(context, input_size % num_splits == 0,\n                      \"Not an even split\");\n   const int slice_size = input_size \/ num_splits;",
            "code_diff":"@@ -60,6 +60,7 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\n   TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\n \n   const int input_size = SizeOfDimension(input, axis_value);\n+  TF_LITE_ENSURE(context, num_splits != 0);\n   TF_LITE_ENSURE_MSG(context, input_size % num_splits == 0,\n                      \"Not an even split\");\n   const int slice_size = input_size \/ num_splits;"
        },
        {
            "index":172,
            "vuln_id":"GHSA-8c76-mxv5-w4g8",
            "cwe_id":"{'CWE-79'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/955471c27e671c49e4b012e3b120b004082ac3f7'}",
            "dataset":"osv",
            "summary":"Stored Cross-site Scripting in Microweber Microweber 1.2.11 and prior contains multiple stored cross-site scripting vulnerabilities in Shop's Other Settings, Shop's Autorespond E-mail Settings and Shops' Payments Methods.",
            "published_date":"2022-03-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/955471c27e671c49e4b012e3b120b004082ac3f7",
            "commit_sha":"955471c27e671c49e4b012e3b120b004082ac3f7",
            "patch":"SINGLE",
            "chain_ord":"['955471c27e671c49e4b012e3b120b004082ac3f7']",
            "before_first_fix_commit":"{'46e100a1b3e613f3e27b82942b00bdb0e69df4fa'}",
            "last_fix_commit":"955471c27e671c49e4b012e3b120b004082ac3f7",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 10:14:14",
            "message":"Update SaveOptionApiController.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 7, 'total': 26}",
            "files":"{'src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/955471c27e671c49e4b012e3b120b004082ac3f7\/src%2FMicroweberPackages%2FOption%2FHttp%2FControllers%2FApi%2FSaveOptionApiController.php', 'patch': \"@@ -6,18 +6,30 @@\\n \\n class SaveOptionApiController\\n {\\n-    public function saveOption(Request $request) {\\n+    public $whitelistedGroupKeys = [\\n+        'website' => [\\n+            'website_head',\\n+            'website_footer'\\n+        ]\\n+    ];\\n+\\n+    public function saveOption(Request $request)\\n+    {\\n \\n         $cleanFromXss = true;\\n         $option = $request->all();\\n \\n-        \/\/ Allow for this keys\\n+        \/\/ Allow for this keys and groups\\n         if (isset($option['option_key'])) {\\n-            if ($option['option_key'] == 'website_head') {\\n-                $cleanFromXss = false;\\n-            }\\n-            if ($option['option_key'] == 'website_footer') {\\n-                $cleanFromXss = false;\\n+            foreach ($this->whitelistedGroupKeys as $group => $keys) {\\n+                if ($option['option_group'] == $group) {\\n+                    foreach ($keys as $key) {\\n+                        if ($option['option_key'] == $key) {\\n+                            $cleanFromXss = false;\\n+                            break;\\n+                        }\\n+                    }\\n+                }\\n             }\\n         }\"}}",
            "message_norm":"update saveoptionapicontroller.php",
            "language":"it",
            "entities":null,
            "classification_level_1":"POORLY_DOCUMENTED",
            "classification_level_2":"SUBMIT_CENTERED",
            "list_files":"dict_keys(['src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php'])",
            "num_files":1.0,
            "patch_content":"From 955471c27e671c49e4b012e3b120b004082ac3f7 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Mon, 14 Mar 2022 12:14:14 +0200\nSubject: [PATCH] Update SaveOptionApiController.php\n\n---\n ...\/Api\/SaveOptionApiController.php           | 26 ++++++++++++++-----\n 1 file changed, 19 insertions(+), 7 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php b\/src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php\nindex 33c8fa4c5b2..e40d5b03a83 100644\n--- a\/src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php\n+++ b\/src\/MicroweberPackages\/Option\/Http\/Controllers\/Api\/SaveOptionApiController.php\n@@ -6,18 +6,30 @@\n \n class SaveOptionApiController\n {\n-    public function saveOption(Request $request) {\n+    public $whitelistedGroupKeys = [\n+        'website' => [\n+            'website_head',\n+            'website_footer'\n+        ]\n+    ];\n+\n+    public function saveOption(Request $request)\n+    {\n \n         $cleanFromXss = true;\n         $option = $request->all();\n \n-        \/\/ Allow for this keys\n+        \/\/ Allow for this keys and groups\n         if (isset($option['option_key'])) {\n-            if ($option['option_key'] == 'website_head') {\n-                $cleanFromXss = false;\n-            }\n-            if ($option['option_key'] == 'website_footer') {\n-                $cleanFromXss = false;\n+            foreach ($this->whitelistedGroupKeys as $group => $keys) {\n+                if ($option['option_group'] == $group) {\n+                    foreach ($keys as $key) {\n+                        if ($option['option_key'] == $key) {\n+                            $cleanFromXss = false;\n+                            break;\n+                        }\n+                    }\n+                }\n             }\n         }",
            "code_diff":"@@ -6,18 +6,30 @@\n \n class SaveOptionApiController\n {\n-    public function saveOption(Request $request) {\n+    public $whitelistedGroupKeys = [\n+        'website' => [\n+            'website_head',\n+            'website_footer'\n+        ]\n+    ];\n+\n+    public function saveOption(Request $request)\n+    {\n \n         $cleanFromXss = true;\n         $option = $request->all();\n \n-        \/\/ Allow for this keys\n+        \/\/ Allow for this keys and groups\n         if (isset($option['option_key'])) {\n-            if ($option['option_key'] == 'website_head') {\n-                $cleanFromXss = false;\n-            }\n-            if ($option['option_key'] == 'website_footer') {\n-                $cleanFromXss = false;\n+            foreach ($this->whitelistedGroupKeys as $group => $keys) {\n+                if ($option['option_group'] == $group) {\n+                    foreach ($keys as $key) {\n+                        if ($option['option_key'] == $key) {\n+                            $cleanFromXss = false;\n+                            break;\n+                        }\n+                    }\n+                }\n             }\n         }"
        },
        {
            "index":558,
            "vuln_id":"GHSA-hf79-8hjp-rrvq",
            "cwe_id":"{'CWE-416'}",
            "score":8.5,
            "chain":"{'https:\/\/github.com\/bytecodealliance\/lucet\/commit\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8'}",
            "dataset":"osv",
            "summary":"Use After Free in lucet ### Impact\nThere is a bug in the main branch of Lucet's `lucet-runtime` that allows a use-after-free in an `Instance` object that could result in memory corruption, data race, or other related issues.  This bug was introduced early in the development of Lucet and is present in all releases.  As a result of this bug, and dependent on the memory backing for the `Instance` objects, it is possible to trigger a use-after-free when the `Instance` is dropped.\n\n### Patches\nUsers should upgrade to the `main` branch of the Lucet repository. Lucet does not provide versioned releases on crates.io.\n\n### Workarounds\nThere is no way to remediate this vulnerability without upgrading.\n\n### Description\nLucet uses a \"pool\" allocator for new WebAssembly instances that are created. This pool allocator manages everything from the linear memory of the wasm instance, the runtime stack for async switching, as well as the memory behind the Instance itself. `Instances` are referred to via an `InstanceHandle` type which will, on drop, release the memory backing the Instance back to the pool.\n\nWhen an Instance is dropped, the fields of the `Instance` are destructed top-to-bottom, however when the `alloc: Alloc` field is destructed, the memory backing the `Instance` is released back to the pool before the destructors of the remaining fields are run. If another thread allocates the same memory from the pool while these destructors are still running, a race condition occurs that can lead to use-after-free errors.\n\nThe bug was corrected by changing how the `InstanceHandle` destructor operates to ensure that the memory backing an Instance is only returned to the pool once the `Instance` has been completely destroyed.\n\nThis security advisory has been assigned CVE-2021-43790.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [lucet repository](https:\/\/github.com\/bytecodealliance\/lucet)\n* Email [the lucet team](mailto:lucet@fastly.com)\n* See the [Bytecode Alliance security policy](https:\/\/bytecodealliance.org\/security)",
            "published_date":"2021-11-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/bytecodealliance\/lucet",
            "commit_href":"https:\/\/github.com\/bytecodealliance\/lucet\/commit\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8",
            "commit_sha":"7c7757c772fb709c61b1442bcc1e1fbee97bf4a8",
            "patch":"SINGLE",
            "chain_ord":"['7c7757c772fb709c61b1442bcc1e1fbee97bf4a8']",
            "before_first_fix_commit":"{'8fb1fece339927e178f6cfef4eb67328b500237d'}",
            "last_fix_commit":"7c7757c772fb709c61b1442bcc1e1fbee97bf4a8",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/29\/2021, 23:00:02",
            "message":"Merge pull request from GHSA-hf79-8hjp-rrvq\n\n* Use manual drop\n\n* Add some comments to `ManuallyDrop` usage\n\n* rustfmt\n\nCo-authored-by: Aaron Turon <aturon@fastly.com>\nCo-authored-by: Alex Crichton <alex@alexcrichton.com>",
            "author":"Pat Hickey",
            "comments":null,
            "stats":"{'additions': 26, 'deletions': 13, 'total': 39}",
            "files":"{'lucet-runtime\/lucet-runtime-internals\/src\/instance.rs': {'additions': 26, 'deletions': 13, 'changes': 39, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bytecodealliance\/lucet\/raw\/7c7757c772fb709c61b1442bcc1e1fbee97bf4a8\/lucet-runtime%2Flucet-runtime-internals%2Fsrc%2Finstance.rs', 'patch': '@@ -14,7 +14,6 @@ use crate::error::Error;\\n #[cfg(feature = \"concurrent_testpoints\")]\\n use crate::lock_testpoints::LockTestpoints;\\n use crate::module::{self, FunctionHandle, Global, GlobalValue, Module, TrapCode};\\n-use crate::region::RegionInternal;\\n use crate::sysdeps::HOST_PAGE_SIZE_EXPECTED;\\n use crate::val::{UntypedRetVal, Val};\\n use crate::vmctx::Vmctx;\\n@@ -27,6 +26,7 @@ use std::cell::{BorrowError, BorrowMutError, Ref, RefCell, RefMut, UnsafeCell};\\n use std::convert::TryFrom;\\n use std::marker::PhantomData;\\n use std::mem;\\n+use std::mem::ManuallyDrop;\\n use std::ops::{Deref, DerefMut};\\n use std::ptr::{self, NonNull};\\n use std::sync::Arc;\\n@@ -147,20 +147,29 @@ impl Drop for InstanceHandle {\\n             unsafe {\\n                 let inst = self.inst.as_mut();\\n \\n-                \/\/ Grab a handle to the region to ensure it outlives `inst`.\\n+                \/\/ The `inst.alloc` field manages the memory of the instance\\n+                \/\/ itself. Note, though, that this field is in a `ManuallyDrop`\\n+                \/\/ so it won\\'t get dropped automatically in `drop_in_place`.\\n+                \/\/ This is the point where we take over that precise drop.\\n                 \/\/\\n-                \/\/ This ensures that the region won\\'t be dropped by `inst` being\\n-                \/\/ dropped, which could result in `inst` being unmapped by the\\n-                \/\/ Region *during* drop of the Instance\\'s fields.\\n-                let region: Arc<dyn RegionInternal> = inst.alloc().region.clone();\\n+                \/\/ By using `take` here we\\'re basically calling `ptr::read`\\n+                \/\/ which \"duplicates\" the `alloc` since the `alloc` local\\n+                \/\/ variable here is the exact same as `inst.alloc`. All we do\\n+                \/\/ with `inst`, though, is call `drop_in_place`, which\\n+                \/\/ invalidates every other field in `inst`.\\n+                let alloc: Alloc = ManuallyDrop::take(&mut inst.alloc);\\n \\n                 \/\/ drop the actual instance\\n                 std::ptr::drop_in_place(inst);\\n \\n-                \/\/ and now we can drop what may be the last Arc<Region>. If it is\\n-                \/\/ it can safely do what it needs with memory; we\\'re not running\\n-                \/\/ destructors on it anymore.\\n-                mem::drop(region);\\n+                \/\/ Now that we\\'re 100% done with the instance, destructors and\\n+                \/\/ all, we can release the memory of the instance back to the\\n+                \/\/ original allocator from whence it came (be it mmap or uffd\\n+                \/\/ based). This will run the \"official\" destructor for `Alloc`\\n+                \/\/ which internally does the release. Note that after this\\n+                \/\/ operation the `inst` pointer is invalid and can no longer be\\n+                \/\/ used.\\n+                drop(alloc);\\n             }\\n         }\\n     }\\n@@ -233,8 +242,12 @@ pub struct Instance {\\n     \/\/\/ Conditionally-present helpers to force permutations of possible races in testing.\\n     pub lock_testpoints: Arc<LockTestpoints>,\\n \\n-    \/\/\/ The memory allocated for this instance\\n-    alloc: Alloc,\\n+    \/\/\/ The memory allocated for this instance.\\n+    \/\/\/\\n+    \/\/\/ Note that this is in a `ManuallyDrop` because this manages the memory of\\n+    \/\/\/ this `Instance` itself. To have precise control over this memory we\\n+    \/\/\/ handle this in `Drop for InstanceHandle`.\\n+    alloc: ManuallyDrop<Alloc>,\\n \\n     \/\/\/ Handler run for signals that do not arise from a known WebAssembly trap, or that involve\\n     \/\/\/ memory outside of the current instance.\\n@@ -1055,7 +1068,7 @@ impl Instance {\\n             kill_state,\\n             #[cfg(feature = \"concurrent_testpoints\")]\\n             lock_testpoints,\\n-            alloc,\\n+            alloc: ManuallyDrop::new(alloc),\\n             fatal_handler: default_fatal_handler,\\n             c_fatal_handler: None,\\n             signal_handler: Box::new(signal_handler_none) as Box<SignalHandler>,'}}",
            "message_norm":"merge pull request from ghsa-hf79-8hjp-rrvq\n\n* use manual drop\n\n* add some comments to `manuallydrop` usage\n\n* rustfmt\n\nco-authored-by: aaron turon <aturon@fastly.com>\nco-authored-by: alex crichton <alex@alexcrichton.com>",
            "language":"en",
            "entities":"[('ghsa-hf79-8hjp-rrvq', 'VULNID', 'GHSA'), ('add', 'ACTION', ''), ('aturon@fastly.com', 'EMAIL', ''), ('alex@alexcrichton.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lucet-runtime\/lucet-runtime-internals\/src\/instance.rs'])",
            "num_files":1.0,
            "patch_content":"From 7c7757c772fb709c61b1442bcc1e1fbee97bf4a8 Mon Sep 17 00:00:00 2001\nFrom: Pat Hickey <phickey@fastly.com>\nDate: Mon, 29 Nov 2021 15:00:02 -0800\nSubject: [PATCH] Merge pull request from GHSA-hf79-8hjp-rrvq\n\n* Use manual drop\n\n* Add some comments to `ManuallyDrop` usage\n\n* rustfmt\n\nCo-authored-by: Aaron Turon <aturon@fastly.com>\nCo-authored-by: Alex Crichton <alex@alexcrichton.com>\n---\n ...\/lucet-runtime-internals\/src\/instance.rs   | 39 ++++++++++++-------\n 1 file changed, 26 insertions(+), 13 deletions(-)\n\ndiff --git a\/lucet-runtime\/lucet-runtime-internals\/src\/instance.rs b\/lucet-runtime\/lucet-runtime-internals\/src\/instance.rs\nindex b45e6265..1252a426 100644\n--- a\/lucet-runtime\/lucet-runtime-internals\/src\/instance.rs\n+++ b\/lucet-runtime\/lucet-runtime-internals\/src\/instance.rs\n@@ -14,7 +14,6 @@ use crate::error::Error;\n #[cfg(feature = \"concurrent_testpoints\")]\n use crate::lock_testpoints::LockTestpoints;\n use crate::module::{self, FunctionHandle, Global, GlobalValue, Module, TrapCode};\n-use crate::region::RegionInternal;\n use crate::sysdeps::HOST_PAGE_SIZE_EXPECTED;\n use crate::val::{UntypedRetVal, Val};\n use crate::vmctx::Vmctx;\n@@ -27,6 +26,7 @@ use std::cell::{BorrowError, BorrowMutError, Ref, RefCell, RefMut, UnsafeCell};\n use std::convert::TryFrom;\n use std::marker::PhantomData;\n use std::mem;\n+use std::mem::ManuallyDrop;\n use std::ops::{Deref, DerefMut};\n use std::ptr::{self, NonNull};\n use std::sync::Arc;\n@@ -147,20 +147,29 @@ impl Drop for InstanceHandle {\n             unsafe {\n                 let inst = self.inst.as_mut();\n \n-                \/\/ Grab a handle to the region to ensure it outlives `inst`.\n+                \/\/ The `inst.alloc` field manages the memory of the instance\n+                \/\/ itself. Note, though, that this field is in a `ManuallyDrop`\n+                \/\/ so it won't get dropped automatically in `drop_in_place`.\n+                \/\/ This is the point where we take over that precise drop.\n                 \/\/\n-                \/\/ This ensures that the region won't be dropped by `inst` being\n-                \/\/ dropped, which could result in `inst` being unmapped by the\n-                \/\/ Region *during* drop of the Instance's fields.\n-                let region: Arc<dyn RegionInternal> = inst.alloc().region.clone();\n+                \/\/ By using `take` here we're basically calling `ptr::read`\n+                \/\/ which \"duplicates\" the `alloc` since the `alloc` local\n+                \/\/ variable here is the exact same as `inst.alloc`. All we do\n+                \/\/ with `inst`, though, is call `drop_in_place`, which\n+                \/\/ invalidates every other field in `inst`.\n+                let alloc: Alloc = ManuallyDrop::take(&mut inst.alloc);\n \n                 \/\/ drop the actual instance\n                 std::ptr::drop_in_place(inst);\n \n-                \/\/ and now we can drop what may be the last Arc<Region>. If it is\n-                \/\/ it can safely do what it needs with memory; we're not running\n-                \/\/ destructors on it anymore.\n-                mem::drop(region);\n+                \/\/ Now that we're 100% done with the instance, destructors and\n+                \/\/ all, we can release the memory of the instance back to the\n+                \/\/ original allocator from whence it came (be it mmap or uffd\n+                \/\/ based). This will run the \"official\" destructor for `Alloc`\n+                \/\/ which internally does the release. Note that after this\n+                \/\/ operation the `inst` pointer is invalid and can no longer be\n+                \/\/ used.\n+                drop(alloc);\n             }\n         }\n     }\n@@ -233,8 +242,12 @@ pub struct Instance {\n     \/\/\/ Conditionally-present helpers to force permutations of possible races in testing.\n     pub lock_testpoints: Arc<LockTestpoints>,\n \n-    \/\/\/ The memory allocated for this instance\n-    alloc: Alloc,\n+    \/\/\/ The memory allocated for this instance.\n+    \/\/\/\n+    \/\/\/ Note that this is in a `ManuallyDrop` because this manages the memory of\n+    \/\/\/ this `Instance` itself. To have precise control over this memory we\n+    \/\/\/ handle this in `Drop for InstanceHandle`.\n+    alloc: ManuallyDrop<Alloc>,\n \n     \/\/\/ Handler run for signals that do not arise from a known WebAssembly trap, or that involve\n     \/\/\/ memory outside of the current instance.\n@@ -1055,7 +1068,7 @@ impl Instance {\n             kill_state,\n             #[cfg(feature = \"concurrent_testpoints\")]\n             lock_testpoints,\n-            alloc,\n+            alloc: ManuallyDrop::new(alloc),\n             fatal_handler: default_fatal_handler,\n             c_fatal_handler: None,\n             signal_handler: Box::new(signal_handler_none) as Box<SignalHandler>,",
            "code_diff":"@@ -14,7 +14,6 @@ use crate::error::Error;\n #[cfg(feature = \"concurrent_testpoints\")]\n use crate::lock_testpoints::LockTestpoints;\n use crate::module::{self, FunctionHandle, Global, GlobalValue, Module, TrapCode};\n-use crate::region::RegionInternal;\n use crate::sysdeps::HOST_PAGE_SIZE_EXPECTED;\n use crate::val::{UntypedRetVal, Val};\n use crate::vmctx::Vmctx;\n@@ -27,6 +26,7 @@ use std::cell::{BorrowError, BorrowMutError, Ref, RefCell, RefMut, UnsafeCell};\n use std::convert::TryFrom;\n use std::marker::PhantomData;\n use std::mem;\n+use std::mem::ManuallyDrop;\n use std::ops::{Deref, DerefMut};\n use std::ptr::{self, NonNull};\n use std::sync::Arc;\n@@ -147,20 +147,29 @@ impl Drop for InstanceHandle {\n             unsafe {\n                 let inst = self.inst.as_mut();\n \n-                \/\/ Grab a handle to the region to ensure it outlives `inst`.\n+                \/\/ The `inst.alloc` field manages the memory of the instance\n+                \/\/ itself. Note, though, that this field is in a `ManuallyDrop`\n+                \/\/ so it won't get dropped automatically in `drop_in_place`.\n+                \/\/ This is the point where we take over that precise drop.\n                 \/\/\n-                \/\/ This ensures that the region won't be dropped by `inst` being\n-                \/\/ dropped, which could result in `inst` being unmapped by the\n-                \/\/ Region *during* drop of the Instance's fields.\n-                let region: Arc<dyn RegionInternal> = inst.alloc().region.clone();\n+                \/\/ By using `take` here we're basically calling `ptr::read`\n+                \/\/ which \"duplicates\" the `alloc` since the `alloc` local\n+                \/\/ variable here is the exact same as `inst.alloc`. All we do\n+                \/\/ with `inst`, though, is call `drop_in_place`, which\n+                \/\/ invalidates every other field in `inst`.\n+                let alloc: Alloc = ManuallyDrop::take(&mut inst.alloc);\n \n                 \/\/ drop the actual instance\n                 std::ptr::drop_in_place(inst);\n \n-                \/\/ and now we can drop what may be the last Arc<Region>. If it is\n-                \/\/ it can safely do what it needs with memory; we're not running\n-                \/\/ destructors on it anymore.\n-                mem::drop(region);\n+                \/\/ Now that we're 100% done with the instance, destructors and\n+                \/\/ all, we can release the memory of the instance back to the\n+                \/\/ original allocator from whence it came (be it mmap or uffd\n+                \/\/ based). This will run the \"official\" destructor for `Alloc`\n+                \/\/ which internally does the release. Note that after this\n+                \/\/ operation the `inst` pointer is invalid and can no longer be\n+                \/\/ used.\n+                drop(alloc);\n             }\n         }\n     }\n@@ -233,8 +242,12 @@ pub struct Instance {\n     \/\/\/ Conditionally-present helpers to force permutations of possible races in testing.\n     pub lock_testpoints: Arc<LockTestpoints>,\n \n-    \/\/\/ The memory allocated for this instance\n-    alloc: Alloc,\n+    \/\/\/ The memory allocated for this instance.\n+    \/\/\/\n+    \/\/\/ Note that this is in a `ManuallyDrop` because this manages the memory of\n+    \/\/\/ this `Instance` itself. To have precise control over this memory we\n+    \/\/\/ handle this in `Drop for InstanceHandle`.\n+    alloc: ManuallyDrop<Alloc>,\n \n     \/\/\/ Handler run for signals that do not arise from a known WebAssembly trap, or that involve\n     \/\/\/ memory outside of the current instance.\n@@ -1055,7 +1068,7 @@ impl Instance {\n             kill_state,\n             #[cfg(feature = \"concurrent_testpoints\")]\n             lock_testpoints,\n-            alloc,\n+            alloc: ManuallyDrop::new(alloc),\n             fatal_handler: default_fatal_handler,\n             c_fatal_handler: None,\n             signal_handler: Box::new(signal_handler_none) as Box<SignalHandler>,"
        },
        {
            "index":328,
            "vuln_id":"GHSA-jv6v-fvvx-4932",
            "cwe_id":"{'CWE-610', 'CWE-73'}",
            "score":6.2,
            "chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc'}",
            "dataset":"osv",
            "summary":"Arbitrary File Deletion vulnerability in OctoberCMS ### Impact\nAn attacker can exploit this vulnerability to delete arbitrary local files of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https:\/\/stazot.com\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1241\" alt=\"Screen Shot 2020-03-31 at 12 16 53 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/78060872-89354d00-7349-11ea-8c2b-5881b0a50736.png\">",
            "published_date":"2020-06-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/october",
            "commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc",
            "commit_sha":"2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc",
            "patch":"SINGLE",
            "chain_ord":"['2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc']",
            "before_first_fix_commit":"{'a9b4a5b2c77afe5ad974455bec69da620b443a5d'}",
            "last_fix_commit":"2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/31\/2020, 09:37:31",
            "message":"Improve asset file path handling",
            "author":"Luke Towers",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 1, 'total': 9}",
            "files":"{'modules\/cms\/classes\/Asset.php': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc\/modules%2Fcms%2Fclasses%2FAsset.php', 'patch': \"@@ -285,7 +285,14 @@ public function getFilePath($fileName = null)\\n             $fileName = $this->fileName;\\n         }\\n \\n-        return $this->theme->getPath().'\/'.$this->dirName.'\/'.$fileName;\\n+        \/\/ Limit paths to those under the assets directory\\n+        $directory = $this->theme->getPath() . '\/' . $this->dirName . '\/';\\n+        $path = realpath($directory . $fileName);\\n+        if (!starts_with($path, $directory)) {\\n+            return false;\\n+        }\\n+\\n+        return $path;\\n     }\\n \\n     \/**\"}}",
            "message_norm":"improve asset file path handling",
            "language":"en",
            "entities":"[('improve', 'ACTION', ''), ('asset', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/cms\/classes\/Asset.php'])",
            "num_files":1.0,
            "patch_content":"From 2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc Mon Sep 17 00:00:00 2001\nFrom: Luke Towers <github@luketowers.ca>\nDate: Tue, 31 Mar 2020 03:37:31 -0600\nSubject: [PATCH] Improve asset file path handling\n\n---\n modules\/cms\/classes\/Asset.php | 9 ++++++++-\n 1 file changed, 8 insertions(+), 1 deletion(-)\n\ndiff --git a\/modules\/cms\/classes\/Asset.php b\/modules\/cms\/classes\/Asset.php\nindex c0920752ff..1073f8ed8c 100644\n--- a\/modules\/cms\/classes\/Asset.php\n+++ b\/modules\/cms\/classes\/Asset.php\n@@ -285,7 +285,14 @@ public function getFilePath($fileName = null)\n             $fileName = $this->fileName;\n         }\n \n-        return $this->theme->getPath().'\/'.$this->dirName.'\/'.$fileName;\n+        \/\/ Limit paths to those under the assets directory\n+        $directory = $this->theme->getPath() . '\/' . $this->dirName . '\/';\n+        $path = realpath($directory . $fileName);\n+        if (!starts_with($path, $directory)) {\n+            return false;\n+        }\n+\n+        return $path;\n     }\n \n     \/**",
            "code_diff":"@@ -285,7 +285,14 @@ public function getFilePath($fileName = null)\n             $fileName = $this->fileName;\n         }\n \n-        return $this->theme->getPath().'\/'.$this->dirName.'\/'.$fileName;\n+        \/\/ Limit paths to those under the assets directory\n+        $directory = $this->theme->getPath() . '\/' . $this->dirName . '\/';\n+        $path = realpath($directory . $fileName);\n+        if (!starts_with($path, $directory)) {\n+            return false;\n+        }\n+\n+        return $path;\n     }\n \n     \/**"
        },
        {
            "index":242,
            "vuln_id":"GHSA-rwv8-jvff-jq28",
            "cwe_id":"{'CWE-22'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/tnantoka\/public\/commit\/eae8ad8017b260f8667ded5e12801bd72b877af2'}",
            "dataset":"osv",
            "summary":"Path Traversal in public Versions of `public` before 0.1.3 are vulnerable to path traversal. This is due to lack of file path sanitization which could lead to any file the parent process has access to on the server to be read by malicious user.\n\n\n## Recommendation\n\nUpdate to version 0.1.3 or later.",
            "published_date":"2018-07-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/tnantoka\/public",
            "commit_href":"https:\/\/github.com\/tnantoka\/public\/commit\/eae8ad8017b260f8667ded5e12801bd72b877af2",
            "commit_sha":"eae8ad8017b260f8667ded5e12801bd72b877af2",
            "patch":"SINGLE",
            "chain_ord":"['eae8ad8017b260f8667ded5e12801bd72b877af2']",
            "before_first_fix_commit":"{'c5c14107c00eb37c677eabcc5566938a0dee685c'}",
            "last_fix_commit":"eae8ad8017b260f8667ded5e12801bd72b877af2",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/15\/2018, 05:13:37",
            "message":"Fix path traversal",
            "author":"tnantoka",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'bin\/public': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tnantoka\/public\/raw\/eae8ad8017b260f8667ded5e12801bd72b877af2\/bin%2Fpublic', 'patch': \"@@ -67,6 +67,7 @@ switch (args[0]) {\\n       }\\n     }\\n }\\n+var root = path.resolve(dir);\\n \\n if (path) {\\n   http.createServer(function(req, res) {\\n@@ -75,6 +76,13 @@ if (path) {\\n     var base = filePath.replace(dir, ''); \/\/ Base path for browser link\\n     var abs = path.resolve(filePath); \\n     console.log(new Date().toString(), abs);\\n+\\n+    if (abs.indexOf(root) !== 0) {\\n+      res.writeHead(403, { 'Content-Type': 'text\/plain' });\\n+      res.end('Forbidden\\\\n');\\n+      return;\\n+    }\\n+\\n     fs.readFile(filePath, function(err, data) {\\n       if (err) {\\n         res.writeHead(200, { 'Content-Type': 'text\/html' });\"}}",
            "message_norm":"fix path traversal",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('path traversal', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bin\/public'])",
            "num_files":1.0,
            "patch_content":"From eae8ad8017b260f8667ded5e12801bd72b877af2 Mon Sep 17 00:00:00 2001\nFrom: tnantoka <tnantoka@bornneet.com>\nDate: Thu, 15 Feb 2018 14:13:37 +0900\nSubject: [PATCH] Fix path traversal\n\n---\n bin\/public | 8 ++++++++\n 1 file changed, 8 insertions(+)\n\ndiff --git a\/bin\/public b\/bin\/public\nindex 8fcdabf..8e281ed 100755\n--- a\/bin\/public\n+++ b\/bin\/public\n@@ -67,6 +67,7 @@ switch (args[0]) {\n       }\n     }\n }\n+var root = path.resolve(dir);\n \n if (path) {\n   http.createServer(function(req, res) {\n@@ -75,6 +76,13 @@ if (path) {\n     var base = filePath.replace(dir, ''); \/\/ Base path for browser link\n     var abs = path.resolve(filePath); \n     console.log(new Date().toString(), abs);\n+\n+    if (abs.indexOf(root) !== 0) {\n+      res.writeHead(403, { 'Content-Type': 'text\/plain' });\n+      res.end('Forbidden\\n');\n+      return;\n+    }\n+\n     fs.readFile(filePath, function(err, data) {\n       if (err) {\n         res.writeHead(200, { 'Content-Type': 'text\/html' });",
            "code_diff":"@@ -67,6 +67,7 @@ switch (args[0]) {\n       }\n     }\n }\n+var root = path.resolve(dir);\n \n if (path) {\n   http.createServer(function(req, res) {\n@@ -75,6 +76,13 @@ if (path) {\n     var base = filePath.replace(dir, ''); \/\/ Base path for browser link\n     var abs = path.resolve(filePath); \n     console.log(new Date().toString(), abs);\n+\n+    if (abs.indexOf(root) !== 0) {\n+      res.writeHead(403, { 'Content-Type': 'text\/plain' });\n+      res.end('Forbidden\\n');\n+      return;\n+    }\n+\n     fs.readFile(filePath, function(err, data) {\n       if (err) {\n         res.writeHead(200, { 'Content-Type': 'text\/html' });"
        },
        {
            "index":194,
            "vuln_id":"GHSA-xvjm-fvxx-q3hv",
            "cwe_id":"{'CWE-190'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60'}",
            "dataset":"osv",
            "summary":"CHECK-fail due to integer overflow ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in  caused by an integer overflow in constructing a new tensor shape:\n\n```python\nimport tensorflow as tf\n\ninput_layer = 2**60-1\nsparse_data = tf.raw_ops.SparseSplit(\n    split_dim=1, \n    indices=[(0, 0), (0, 1), (0, 2), \n    (4, 3), (5, 0), (5, 1)],\n    values=[1.0, 1.0, 1.0, 1.0, 1.0, 1.0],\n    shape=(input_layer, input_layer),\n    num_split=2,\n    name=None\n    )\n```\n  \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0908c2f2397c099338b901b067f6495a5b96760b\/tensorflow\/core\/kernels\/sparse_split_op.cc#L66-L70) builds a dense shape without checking that the dimensions would not result in overflow:\n\n```cc\nsparse::SparseTensor sparse_tensor;\nOP_REQUIRES_OK(context,\n               sparse::SparseTensor::Create(\n                 input_indices, input_values,\n                 TensorShape(input_shape.vec<int64>()), &sparse_tensor));\n```\n\nThe [`TensorShape` constructor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/framework\/tensor_shape.cc#L183-L188) uses a `CHECK` operation which triggers when [`InitDims`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f9896890c4c703ae0a0845394086e2e1e523299\/tensorflow\/core\/framework\/tensor_shape.cc#L212-L296) returns a non-OK status.\n                    \n```cc               \ntemplate <class Shape>\nTensorShapeBase<Shape>::TensorShapeBase(gtl::ArraySlice<int64> dim_sizes) {\n  set_tag(REP16);\n  set_data_type(DT_INVALID);\n  TF_CHECK_OK(InitDims(dim_sizes));\n}\n```\n\nIn our scenario, this occurs when adding a dimension from the argument results in overflow:\n\n```cc\ntemplate <class Shape>\nStatus TensorShapeBase<Shape>::InitDims(gtl::ArraySlice<int64> dim_sizes) {\n  ...\n  Status status = Status::OK();\n  for (int64 s : dim_sizes) {\n    status.Update(AddDimWithStatus(internal::SubtleMustCopy(s)));\n    if (!status.ok()) {\n      return status;\n    }\n  }\n}\n\ntemplate <class Shape>\nStatus TensorShapeBase<Shape>::AddDimWithStatus(int64 size) {\n  ...\n  int64 new_num_elements;\n  if (kIsPartial && (num_elements() < 0 || size < 0)) {\n    new_num_elements = -1;\n  } else {\n    new_num_elements = MultiplyWithoutOverflow(num_elements(), size);\n    if (TF_PREDICT_FALSE(new_num_elements < 0)) {\n        return errors::Internal(\"Encountered overflow when multiplying \",\n                                num_elements(), \" with \", size,\n                                \", result: \", new_num_elements);\n      }\n  }\n  ...\n}\n```\n\nThis is a legacy implementation of the constructor and operations should use `BuildTensorShapeBase` or `AddDimWithStatus` to prevent `CHECK`-failures in the presence of overflows.\n\n### Patches\nWe have patched the issue in GitHub commit [4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by researchers from University of Virginia and University of California, Santa Barbara.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
            "commit_sha":"4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
            "patch":"SINGLE",
            "chain_ord":"['4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60']",
            "before_first_fix_commit":"{'0908c2f2397c099338b901b067f6495a5b96760b'}",
            "last_fix_commit":"4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 22:55:00",
            "message":"Prevent overflow in sparse op\n\nPiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 3, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/sparse_split_op.cc': {'additions': 10, 'deletions': 3, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60\/tensorflow%2Fcore%2Fkernels%2Fsparse_split_op.cc', 'patch': '@@ -63,11 +63,18 @@ class SparseSplitOp : public OpKernel {\\n                                         input_shape.vec<int64>()(axis),\\n                                         \"), got \", num_split_));\\n \\n+    \/\/ Prevent overflow by constructing the dense shape separately\\n+    TensorShape dense_shape;\\n+    const auto input_shape_flat = input_shape.flat<int64>();\\n+    for (int i = 0; i < input_shape.NumElements(); i++) {\\n+      OP_REQUIRES_OK(context,\\n+                     dense_shape.AddDimWithStatus(input_shape_flat(i)));\\n+    }\\n+\\n     sparse::SparseTensor sparse_tensor;\\n     OP_REQUIRES_OK(context,\\n-                   sparse::SparseTensor::Create(\\n-                       input_indices, input_values,\\n-                       TensorShape(input_shape.vec<int64>()), &sparse_tensor));\\n+                   sparse::SparseTensor::Create(input_indices, input_values,\\n+                                                dense_shape, &sparse_tensor));\\n \\n     std::vector<sparse::SparseTensor> outputs;\\n     OP_REQUIRES_OK(context, sparse::SparseTensor::Split<T>('}}",
            "message_norm":"prevent overflow in sparse op\n\npiperorigin-revid: 372442006\nchange-id: i60fe31cd7e56fb3501e97c63500caf902ddeee96",
            "language":"nl",
            "entities":"[('prevent', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('372442006', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_split_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 4c0ee937c0f61c4fc5f5d32d9bb4c67428012a60 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Thu, 6 May 2021 15:55:00 -0700\nSubject: [PATCH] Prevent overflow in sparse op\n\nPiperOrigin-RevId: 372442006\nChange-Id: I60fe31cd7e56fb3501e97c63500caf902ddeee96\n---\n tensorflow\/core\/kernels\/sparse_split_op.cc | 13 ++++++++++---\n 1 file changed, 10 insertions(+), 3 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/sparse_split_op.cc b\/tensorflow\/core\/kernels\/sparse_split_op.cc\nindex 5c0457aa956c85..3b88a8ca2bf6ee 100644\n--- a\/tensorflow\/core\/kernels\/sparse_split_op.cc\n+++ b\/tensorflow\/core\/kernels\/sparse_split_op.cc\n@@ -63,11 +63,18 @@ class SparseSplitOp : public OpKernel {\n                                         input_shape.vec<int64>()(axis),\n                                         \"), got \", num_split_));\n \n+    \/\/ Prevent overflow by constructing the dense shape separately\n+    TensorShape dense_shape;\n+    const auto input_shape_flat = input_shape.flat<int64>();\n+    for (int i = 0; i < input_shape.NumElements(); i++) {\n+      OP_REQUIRES_OK(context,\n+                     dense_shape.AddDimWithStatus(input_shape_flat(i)));\n+    }\n+\n     sparse::SparseTensor sparse_tensor;\n     OP_REQUIRES_OK(context,\n-                   sparse::SparseTensor::Create(\n-                       input_indices, input_values,\n-                       TensorShape(input_shape.vec<int64>()), &sparse_tensor));\n+                   sparse::SparseTensor::Create(input_indices, input_values,\n+                                                dense_shape, &sparse_tensor));\n \n     std::vector<sparse::SparseTensor> outputs;\n     OP_REQUIRES_OK(context, sparse::SparseTensor::Split<T>(",
            "code_diff":"@@ -63,11 +63,18 @@ class SparseSplitOp : public OpKernel {\n                                         input_shape.vec<int64>()(axis),\n                                         \"), got \", num_split_));\n \n+    \/\/ Prevent overflow by constructing the dense shape separately\n+    TensorShape dense_shape;\n+    const auto input_shape_flat = input_shape.flat<int64>();\n+    for (int i = 0; i < input_shape.NumElements(); i++) {\n+      OP_REQUIRES_OK(context,\n+                     dense_shape.AddDimWithStatus(input_shape_flat(i)));\n+    }\n+\n     sparse::SparseTensor sparse_tensor;\n     OP_REQUIRES_OK(context,\n-                   sparse::SparseTensor::Create(\n-                       input_indices, input_values,\n-                       TensorShape(input_shape.vec<int64>()), &sparse_tensor));\n+                   sparse::SparseTensor::Create(input_indices, input_values,\n+                                                dense_shape, &sparse_tensor));\n \n     std::vector<sparse::SparseTensor> outputs;\n     OP_REQUIRES_OK(context, sparse::SparseTensor::Split<T>("
        },
        {
            "index":881,
            "vuln_id":"GHSA-cwfw-4gq5-mrqx",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/micromatch\/braces\/commit\/abdafb0cae1e0c00f184abbadc692f4eaa98f451'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDoS) in braces A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/micromatch\/braces",
            "commit_href":"https:\/\/github.com\/micromatch\/braces\/commit\/abdafb0cae1e0c00f184abbadc692f4eaa98f451",
            "commit_sha":"abdafb0cae1e0c00f184abbadc692f4eaa98f451",
            "patch":"SINGLE",
            "chain_ord":"['abdafb0cae1e0c00f184abbadc692f4eaa98f451']",
            "before_first_fix_commit":"{'37934142c1aeea48b6fb03edbdcf90e45b5cb4a1'}",
            "last_fix_commit":"abdafb0cae1e0c00f184abbadc692f4eaa98f451",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/16\/2018, 21:09:36",
            "message":"optimize regex",
            "author":"jonschlinkert",
            "comments":"{'com_1': {'author': 'sathish-spidie', 'datetime': '04\/18\/2019, 03:42:11', 'body': \"can you explain, how to achieve this? I'm a low-level developer and didn't understand why this code stands for and what to do with it! sorry if I waste your time by making you read this comment, in case you find this comment useless.\\r\\n\\r\\nmy error is\\r\\n\\r\\n` Low             Regular Expression Denial of Service                          \\r\\n                                                                                \\r\\n  Package         braces                                                        \\r\\n                                                                                \\r\\n  Patched in      >=2.3.1                                                       \\r\\n                                                                                \\r\\n  Dependency of   browser-sync [dev]                                            \\r\\n                                                                                \\r\\n  Path            browser-sync > micromatch > braces                            \\r\\n                                                                                \\r\\n  More info       https:\/\/npmjs.com\/advisories\/786         `\"}, 'com_2': {'author': 'kousu', 'datetime': '04\/18\/2019, 18:24:04', 'body': '@sathish-spidie , you can find out the solution on the link there: https:\/\/npmjs.com\/advisories\/786:\\r\\n\\r\\n> Remediation\\r\\n> \\r\\n> Upgrade to version 2.3.1 or higher.\\r\\n\\r\\nWhat this means is that in your package.json you should make sure the line for \"braces\" under \"dependencies\"  says\\r\\n\\r\\n```\\r\\n\"braces\": \"^2.3.1\",\\r\\n```\\r\\n\\r\\nand then delete your cached npm packages by \\r\\n\\r\\n```\\r\\nrm -r node_modules\/ package-lock.json\\r\\n```\\r\\n\\r\\nand then\\r\\n\\r\\n```\\r\\nnpm install\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\nIf you don\\'t directly depend on \"braces\", which is the situation I am in, you can use\\r\\n\\r\\n```\\r\\nnpm list\\r\\n```\\r\\n\\r\\nto figure out which of your packages is depending on \"braces\", and then go make sure to update each of those packages in the same way: version bump them, make sure to prefix the versions of everything with \"^\", and then delete your packages and regenerate package-lock.json by redoing `npm install`; that will get the latest, hopefully bugfixed, versions of all your packages; but if any of your packages have not yet updated to use `\"braces\": \"^2.3.1\"` then you will have to go to their github projects and file an issue. \\r\\n\\r\\n---\\r\\n\\r\\nA comment on a commit inside the braces project isn\\'t really a proper general support forum for npm. For that, and for future questions, you will probably have good luck asking at https:\/\/npm.community\/c\/support.  I hope the above helps and lets you extend your developer skills.'}, 'com_3': {'author': 'jonschlinkert', 'datetime': '04\/18\/2019, 20:01:13', 'body': \"@kousu that was a fantastic description, and a really good summary of the steps that need to be taken. Thank you!\\r\\n\\r\\n> you will probably have good luck asking at https:\/\/npm.community\/c\/support. I hope the above helps and lets you extend your developer skills.\\r\\n\\r\\nOnly one thing I'd like to point out. Generally, https:\/\/npm.community\/c\/support is for **NPM** support, not for packages like this one. Meaning, if you need something directly related to the package manager itself, that's the place to go. But ideally, when a user has an issue or support question like this, the best place to get answers is to:\\r\\n\\r\\n1. read through previous issues first - @sathish-spidie would have seen that this question has been answered a couple of dozen times already on this project and other projects that depend on this one\\r\\n1. StackOverflow - people get reputation points for helping others\\r\\n1. if it seems like no one has addressed the issue already, and you have genuinely stumbled across a previously undiscovered bug, then create a new issue on the GitHub repository of the code project.\"}, 'com_4': {'author': 'KevinGrant12', 'datetime': '05\/08\/2019, 23:49:41', 'body': \"Hello, I have the same exact issue that stems from babel.\\r\\nI was unable to run this line rm -r node_modules\/ package-lock.json and it makes sense because the packag-lock is not inside the node_modules directory.\\r\\nWhen I run npm list I can see that instances of 'braces' are at 2.3.2.\\r\\n\\r\\nAny thoughts on how to fix?\\r\\nThanks!\"}, 'com_5': {'author': 'biggianteye', 'datetime': '06\/07\/2019, 12:57:09', 'body': \"> I was unable to run this line rm -r node_modules\/ package-lock.json and it makes sense because the packag-lock is not inside the node_modules directory.\\r\\n\\r\\nThere is a space between `node_modules` and `package-lock.json`. The lock file is not inside the node_modules folder. It's at the same level.\"}, 'com_6': {'author': 'robpl1', 'datetime': '07\/14\/2019, 08:57:18', 'body': 'The problem I have here is that the braces package itself is showing \\r\\n{  \"_from\": \"braces@^1.8.2\",\\r\\n  \"_id\": \"braces@1.8.5\",\\r\\n\\r\\nSo how to update that would help.'}, 'com_7': {'author': 'martynawilkonska', 'datetime': '07\/16\/2019, 08:45:50', 'body': 'I have the same problem. I am unable to update braces, after reinstall they are still 1.8.5.'}, 'com_8': {'author': 'janzenz', 'datetime': '10\/08\/2019, 02:02:12', 'body': \"@martynawilkonska have you removed your `node_modules` cache and `package-lock.json` file? If not, try that and `npm install` again. If it still does that, my next hunch is that you're `braces` is a transitive dependency in your package. Try `npm ls braces` and see which package requires it and maybe you can try and upgrade that parent package which potentially will fix your problem.\"}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/parsers.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/micromatch\/braces\/raw\/abdafb0cae1e0c00f184abbadc692f4eaa98f451\/lib%2Fparsers.js', 'patch': \"@@ -127,7 +127,7 @@ module.exports = function(braces, options) {\\n     .set('multiplier', function() {\\n       var isInside = this.isInside('brace');\\n       var pos = this.position();\\n-      var m = this.match(\/^\\\\{(,+(?:(\\\\{,+\\\\})*),*|,*(?:(\\\\{,+\\\\})*),+)\\\\}\/);\\n+      var m = this.match(\/^\\\\{((?:,|\\\\{,+\\\\})+)\\\\}\/);\\n       if (!m) return;\\n \\n       this.multiplier = true;\"}}",
            "message_norm":"optimize regex",
            "language":"ro",
            "entities":"[('optimize', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/parsers.js'])",
            "num_files":1.0,
            "patch_content":"From abdafb0cae1e0c00f184abbadc692f4eaa98f451 Mon Sep 17 00:00:00 2001\nFrom: jonschlinkert <jon.schlinkert@sellside.com>\nDate: Fri, 16 Feb 2018 16:09:36 -0500\nSubject: [PATCH] optimize regex\n\n---\n lib\/parsers.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lib\/parsers.js b\/lib\/parsers.js\nindex 42730fe..b14bc83 100644\n--- a\/lib\/parsers.js\n+++ b\/lib\/parsers.js\n@@ -127,7 +127,7 @@ module.exports = function(braces, options) {\n     .set('multiplier', function() {\n       var isInside = this.isInside('brace');\n       var pos = this.position();\n-      var m = this.match(\/^\\{(,+(?:(\\{,+\\})*),*|,*(?:(\\{,+\\})*),+)\\}\/);\n+      var m = this.match(\/^\\{((?:,|\\{,+\\})+)\\}\/);\n       if (!m) return;\n \n       this.multiplier = true;",
            "code_diff":"@@ -127,7 +127,7 @@ module.exports = function(braces, options) {\n     .set('multiplier', function() {\n       var isInside = this.isInside('brace');\n       var pos = this.position();\n-      var m = this.match(\/^\\{(,+(?:(\\{,+\\})*),*|,*(?:(\\{,+\\})*),+)\\}\/);\n+      var m = this.match(\/^\\{((?:,|\\{,+\\})+)\\}\/);\n       if (!m) return;\n \n       this.multiplier = true;"
        },
        {
            "index":717,
            "vuln_id":"GHSA-w74j-v8xh-3w5h",
            "cwe_id":"{'CWE-824'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2e0ee46f1a47675152d3d865797a18358881d7a6'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in unicode encoding ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in `tf.raw_ops.UnicodeEncode`:\n\n```python\nimport tensorflow as tf\nfrom tensorflow.python.ops import gen_string_ops\n\ngen_string_ops.unicode_encode(\n  input_values=[],\n  input_splits=[],\n  output_encoding='UTF-8',\n  errors='ignore',\n  replacement_char='a')\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/unicode_ops.cc#L533-L539) reads the first dimension of the `input_splits` tensor before validating that this tensor is not empty: \n\n```cc\n  const Tensor& input_splits = context->input(1);\n  const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\n  TensorShape output_shape({input_splits.dim_size(0) - 1});\n```\n\n### Patches\nWe have patched the issue in GitHub commit [2e0ee46f1a47675152d3d865797a18358881d7a6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2e0ee46f1a47675152d3d865797a18358881d7a6).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2e0ee46f1a47675152d3d865797a18358881d7a6",
            "commit_sha":"2e0ee46f1a47675152d3d865797a18358881d7a6",
            "patch":"SINGLE",
            "chain_ord":"['2e0ee46f1a47675152d3d865797a18358881d7a6']",
            "before_first_fix_commit":"{'9c87c32c710d0b5b53dc6fd3bfde4046e1f7a5ad'}",
            "last_fix_commit":"2e0ee46f1a47675152d3d865797a18358881d7a6",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/27\/2021, 19:30:33",
            "message":"Ensure non-empty input_splits in tf.raw_ops.UnicodeEncode\n\nPiperOrigin-RevId: 387170080\nChange-Id: I3b489acc51c5cb4124c535b9df7cc6e62ef21766",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/unicode_ops.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2e0ee46f1a47675152d3d865797a18358881d7a6\/tensorflow%2Fcore%2Fkernels%2Funicode_ops.cc', 'patch': '@@ -533,6 +533,10 @@ class UnicodeEncodeOp : public OpKernel {\\n     const Tensor& input_splits = context->input(1);\\n     const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\\n \\n+    OP_REQUIRES(\\n+        context, input_splits.NumElements() > 0,\\n+        errors::InvalidArgument(\"Input_splits should contain elements, but \"\\n+                                \"given input_values has 0 elements\"));\\n     \/\/ Operation will treat first argument in input_splits as if it were zero\\n     \/\/ regardless of its actual value since splits should begin with zero and\\n     \/\/ end with the length of the input values vector.'}}",
            "message_norm":"ensure non-empty input_splits in tf.raw_ops.unicodeencode\n\npiperorigin-revid: 387170080\nchange-id: i3b489acc51c5cb4124c535b9df7cc6e62ef21766",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('tf.raw_ops.unicodeencode', 'SECWORD', ''), ('387170080', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/unicode_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From 2e0ee46f1a47675152d3d865797a18358881d7a6 Mon Sep 17 00:00:00 2001\nFrom: Laura Pak <lpak@google.com>\nDate: Tue, 27 Jul 2021 12:30:33 -0700\nSubject: [PATCH] Ensure non-empty input_splits in tf.raw_ops.UnicodeEncode\n\nPiperOrigin-RevId: 387170080\nChange-Id: I3b489acc51c5cb4124c535b9df7cc6e62ef21766\n---\n tensorflow\/core\/kernels\/unicode_ops.cc | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/unicode_ops.cc b\/tensorflow\/core\/kernels\/unicode_ops.cc\nindex 301cdf932ba608..d4153e04e4f94f 100644\n--- a\/tensorflow\/core\/kernels\/unicode_ops.cc\n+++ b\/tensorflow\/core\/kernels\/unicode_ops.cc\n@@ -533,6 +533,10 @@ class UnicodeEncodeOp : public OpKernel {\n     const Tensor& input_splits = context->input(1);\n     const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\n \n+    OP_REQUIRES(\n+        context, input_splits.NumElements() > 0,\n+        errors::InvalidArgument(\"Input_splits should contain elements, but \"\n+                                \"given input_values has 0 elements\"));\n     \/\/ Operation will treat first argument in input_splits as if it were zero\n     \/\/ regardless of its actual value since splits should begin with zero and\n     \/\/ end with the length of the input values vector.",
            "code_diff":"@@ -533,6 +533,10 @@ class UnicodeEncodeOp : public OpKernel {\n     const Tensor& input_splits = context->input(1);\n     const auto input_splits_flat = input_splits.flat<SPLITS_TYPE>();\n \n+    OP_REQUIRES(\n+        context, input_splits.NumElements() > 0,\n+        errors::InvalidArgument(\"Input_splits should contain elements, but \"\n+                                \"given input_values has 0 elements\"));\n     \/\/ Operation will treat first argument in input_splits as if it were zero\n     \/\/ regardless of its actual value since splits should begin with zero and\n     \/\/ end with the length of the input values vector."
        },
        {
            "index":803,
            "vuln_id":"GHSA-rh9j-f5f8-rvgc",
            "cwe_id":"{'CWE-295', 'CWE-287'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/parse-community\/parse-server\/commit\/ba2b0a9cb9a568817a114b132a4c2e0911d76df1', 'https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/0cc299f82e367518f2fe7a53b99f3f801a338cf4', 'https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/2084b7c569697a5230e42511799eeac9219db5a9'}",
            "dataset":"osv",
            "summary":"Authentication bypass vulnerability in Apple Game Center auth adapter  ### Impact\nThe certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.\n\n### Patches\nTo prevent this, a new `rootCertificateUrl` property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the `rootCertificateUrl` property defaults to the URL of the [current root certificate](https:\/\/developer.apple.com\/news\/?id=stttq465) as of May 27, 2022.\n\nKeep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.\n\n### Workarounds\nNone.\n\n### References\n- https:\/\/github.com\/parse-community\/parse-server\/security\/advisories\/GHSA-rh9j-f5f8-rvgc\n- https:\/\/developer.apple.com\/news\/?id=stttq465\n- https:\/\/github.com\/parse-community\/parse-server\n\n### More information\n* For questions or comments about this vulnerability visit our [community forum](http:\/\/community.parseplatform.org) or [community chat](http:\/\/chat.parseplatform.org)\n* Report other vulnerabilities at [report.parseplatform.org](https:\/\/report.parseplatform.org)",
            "published_date":"2022-06-17",
            "chain_len":3,
            "project":"https:\/\/github.com\/parse-community\/parse-server",
            "commit_href":"https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/0cc299f82e367518f2fe7a53b99f3f801a338cf4",
            "commit_sha":"0cc299f82e367518f2fe7a53b99f3f801a338cf4",
            "patch":"MULTI",
            "chain_ord":"['2084b7c569697a5230e42511799eeac9219db5a9', '0cc299f82e367518f2fe7a53b99f3f801a338cf4', 'ba2b0a9cb9a568817a114b132a4c2e0911d76df1']",
            "before_first_fix_commit":"{'a8aef820afa2c8d87683668c2961e523016bad9b'}",
            "last_fix_commit":"ba2b0a9cb9a568817a114b132a4c2e0911d76df1",
            "chain_ord_pos":2.0,
            "commit_datetime":"06\/17\/2022, 15:30:54",
            "message":"Update gcenter.js",
            "author":"Manuel Trezza",
            "comments":null,
            "stats":"{'additions': 17, 'deletions': 9, 'total': 26}",
            "files":"{'src\/Adapters\/Auth\/gcenter.js': {'additions': 17, 'deletions': 9, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/parse-community\/parse-server\/raw\/0cc299f82e367518f2fe7a53b99f3f801a338cf4\/src%2FAdapters%2FAuth%2Fgcenter.js', 'patch': \"@@ -56,8 +56,9 @@ async function getAppleCertificate(publicKeyUrl) {\\n   const cert_headers = await new Promise((resolve, reject) =>\\n     https.get(headOptions, res => resolve(res.headers)).on('error', reject)\\n   );\\n+  const validContentTypes = ['application\/x-x509-ca-cert', 'application\/pkix-cert'];\\n   if (\\n-    cert_headers['content-type'] !== 'application\/pkix-cert' ||\\n+    !validContentTypes.includes(cert_headers['content-type']) ||\\n     cert_headers['content-length'] == null ||\\n     cert_headers['content-length'] > 10000\\n   ) {\\n@@ -66,7 +67,7 @@ async function getAppleCertificate(publicKeyUrl) {\\n       `Apple Game Center - invalid publicKeyUrl: ${publicKeyUrl}`\\n     );\\n   }\\n-  const {certificate, headers} = await getCertificate(publicKeyUrl);\\n+  const { certificate, headers } = await getCertificate(publicKeyUrl);\\n   if (headers['cache-control']) {\\n     const expire = headers['cache-control'].match(\/max-age=([0-9]+)\/);\\n     if (expire) {\\n@@ -90,15 +91,15 @@ function getCertificate(url, buffer) {\\n         });\\n         res.on('end', () => {\\n           if (buffer) {\\n-            resolve({certificate: Buffer.concat(data), headers: res.headers});\\n+            resolve({ certificate: Buffer.concat(data), headers: res.headers });\\n             return;\\n           }\\n           let cert = '';\\n           for (const chunk of data) {\\n             cert += chunk.toString('base64');\\n           }\\n           const certificate = convertX509CertToPEM(cert);\\n-          resolve({certificate, headers: res.headers});\\n+          resolve({ certificate, headers: res.headers });\\n         });\\n       })\\n       .on('error', reject);\\n@@ -132,7 +133,10 @@ function verifySignature(publicKey, authData) {\\n function verifyPublicKeyIssuer(cert, publicKeyUrl) {\\n   const publicKeyCert = pki.certificateFromPem(cert);\\n   if (!ca.cert) {\\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\\n+    throw new Parse.Error(\\n+      Parse.Error.OBJECT_NOT_FOUND,\\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\\n+    );\\n   }\\n   try {\\n     if (!ca.cert.verify(publicKeyCert)) {\\n@@ -163,21 +167,25 @@ async function validateAuthData(authData) {\\n \/\/ Returns a promise that fulfills if this app id is valid.\\n async function validateAppId(appIds, authData, options = {}) {\\n   if (!options.rootCertificateUrl) {\\n-    options.rootCertificateUrl = 'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem'\\n+    options.rootCertificateUrl =\\n+      'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem';\\n   }\\n   if (ca.url === options.rootCertificateUrl) {\\n     return;\\n   }\\n-  const {certificate, headers} = await getCertificate(options.rootCertificateUrl, true);\\n+  const { certificate, headers } = await getCertificate(options.rootCertificateUrl, true);\\n   if (\\n     headers['content-type'] !== 'application\/x-pem-file' ||\\n     headers['content-length'] == null ||\\n     headers['content-length'] > 10000\\n   ) {\\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\\n+    throw new Parse.Error(\\n+      Parse.Error.OBJECT_NOT_FOUND,\\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\\n+    );\\n   }\\n   ca.cert = pki.certificateFromPem(certificate);\\n-  ca.url = options.rootCertificateUrl\\n+  ca.url = options.rootCertificateUrl;\\n }\\n \\n module.exports = {\"}}",
            "message_norm":"update gcenter.js",
            "language":"nl",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Adapters\/Auth\/gcenter.js'])",
            "num_files":1.0,
            "patch_content":"From 0cc299f82e367518f2fe7a53b99f3f801a338cf4 Mon Sep 17 00:00:00 2001\nFrom: Manuel Trezza <5673677+mtrezza@users.noreply.github.com>\nDate: Fri, 17 Jun 2022 17:30:54 +0200\nSubject: [PATCH] Update gcenter.js\n\n---\n src\/Adapters\/Auth\/gcenter.js | 26 +++++++++++++++++---------\n 1 file changed, 17 insertions(+), 9 deletions(-)\n\ndiff --git a\/src\/Adapters\/Auth\/gcenter.js b\/src\/Adapters\/Auth\/gcenter.js\nindex dde5bd6625..f70c254188 100644\n--- a\/src\/Adapters\/Auth\/gcenter.js\n+++ b\/src\/Adapters\/Auth\/gcenter.js\n@@ -56,8 +56,9 @@ async function getAppleCertificate(publicKeyUrl) {\n   const cert_headers = await new Promise((resolve, reject) =>\n     https.get(headOptions, res => resolve(res.headers)).on('error', reject)\n   );\n+  const validContentTypes = ['application\/x-x509-ca-cert', 'application\/pkix-cert'];\n   if (\n-    cert_headers['content-type'] !== 'application\/pkix-cert' ||\n+    !validContentTypes.includes(cert_headers['content-type']) ||\n     cert_headers['content-length'] == null ||\n     cert_headers['content-length'] > 10000\n   ) {\n@@ -66,7 +67,7 @@ async function getAppleCertificate(publicKeyUrl) {\n       `Apple Game Center - invalid publicKeyUrl: ${publicKeyUrl}`\n     );\n   }\n-  const {certificate, headers} = await getCertificate(publicKeyUrl);\n+  const { certificate, headers } = await getCertificate(publicKeyUrl);\n   if (headers['cache-control']) {\n     const expire = headers['cache-control'].match(\/max-age=([0-9]+)\/);\n     if (expire) {\n@@ -90,7 +91,7 @@ function getCertificate(url, buffer) {\n         });\n         res.on('end', () => {\n           if (buffer) {\n-            resolve({certificate: Buffer.concat(data), headers: res.headers});\n+            resolve({ certificate: Buffer.concat(data), headers: res.headers });\n             return;\n           }\n           let cert = '';\n@@ -98,7 +99,7 @@ function getCertificate(url, buffer) {\n             cert += chunk.toString('base64');\n           }\n           const certificate = convertX509CertToPEM(cert);\n-          resolve({certificate, headers: res.headers});\n+          resolve({ certificate, headers: res.headers });\n         });\n       })\n       .on('error', reject);\n@@ -132,7 +133,10 @@ function verifySignature(publicKey, authData) {\n function verifyPublicKeyIssuer(cert, publicKeyUrl) {\n   const publicKeyCert = pki.certificateFromPem(cert);\n   if (!ca.cert) {\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\n+    throw new Parse.Error(\n+      Parse.Error.OBJECT_NOT_FOUND,\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\n+    );\n   }\n   try {\n     if (!ca.cert.verify(publicKeyCert)) {\n@@ -163,21 +167,25 @@ async function validateAuthData(authData) {\n \/\/ Returns a promise that fulfills if this app id is valid.\n async function validateAppId(appIds, authData, options = {}) {\n   if (!options.rootCertificateUrl) {\n-    options.rootCertificateUrl = 'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem'\n+    options.rootCertificateUrl =\n+      'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem';\n   }\n   if (ca.url === options.rootCertificateUrl) {\n     return;\n   }\n-  const {certificate, headers} = await getCertificate(options.rootCertificateUrl, true);\n+  const { certificate, headers } = await getCertificate(options.rootCertificateUrl, true);\n   if (\n     headers['content-type'] !== 'application\/x-pem-file' ||\n     headers['content-length'] == null ||\n     headers['content-length'] > 10000\n   ) {\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\n+    throw new Parse.Error(\n+      Parse.Error.OBJECT_NOT_FOUND,\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\n+    );\n   }\n   ca.cert = pki.certificateFromPem(certificate);\n-  ca.url = options.rootCertificateUrl\n+  ca.url = options.rootCertificateUrl;\n }\n \n module.exports = {",
            "code_diff":"@@ -56,8 +56,9 @@ async function getAppleCertificate(publicKeyUrl) {\n   const cert_headers = await new Promise((resolve, reject) =>\n     https.get(headOptions, res => resolve(res.headers)).on('error', reject)\n   );\n+  const validContentTypes = ['application\/x-x509-ca-cert', 'application\/pkix-cert'];\n   if (\n-    cert_headers['content-type'] !== 'application\/pkix-cert' ||\n+    !validContentTypes.includes(cert_headers['content-type']) ||\n     cert_headers['content-length'] == null ||\n     cert_headers['content-length'] > 10000\n   ) {\n@@ -66,7 +67,7 @@ async function getAppleCertificate(publicKeyUrl) {\n       `Apple Game Center - invalid publicKeyUrl: ${publicKeyUrl}`\n     );\n   }\n-  const {certificate, headers} = await getCertificate(publicKeyUrl);\n+  const { certificate, headers } = await getCertificate(publicKeyUrl);\n   if (headers['cache-control']) {\n     const expire = headers['cache-control'].match(\/max-age=([0-9]+)\/);\n     if (expire) {\n@@ -90,7 +91,7 @@ function getCertificate(url, buffer) {\n         });\n         res.on('end', () => {\n           if (buffer) {\n-            resolve({certificate: Buffer.concat(data), headers: res.headers});\n+            resolve({ certificate: Buffer.concat(data), headers: res.headers });\n             return;\n           }\n           let cert = '';\n@@ -98,7 +99,7 @@ function getCertificate(url, buffer) {\n             cert += chunk.toString('base64');\n           }\n           const certificate = convertX509CertToPEM(cert);\n-          resolve({certificate, headers: res.headers});\n+          resolve({ certificate, headers: res.headers });\n         });\n       })\n       .on('error', reject);\n@@ -132,7 +133,10 @@ function verifySignature(publicKey, authData) {\n function verifyPublicKeyIssuer(cert, publicKeyUrl) {\n   const publicKeyCert = pki.certificateFromPem(cert);\n   if (!ca.cert) {\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\n+    throw new Parse.Error(\n+      Parse.Error.OBJECT_NOT_FOUND,\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\n+    );\n   }\n   try {\n     if (!ca.cert.verify(publicKeyCert)) {\n@@ -163,21 +167,25 @@ async function validateAuthData(authData) {\n \/\/ Returns a promise that fulfills if this app id is valid.\n async function validateAppId(appIds, authData, options = {}) {\n   if (!options.rootCertificateUrl) {\n-    options.rootCertificateUrl = 'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem'\n+    options.rootCertificateUrl =\n+      'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem';\n   }\n   if (ca.url === options.rootCertificateUrl) {\n     return;\n   }\n-  const {certificate, headers} = await getCertificate(options.rootCertificateUrl, true);\n+  const { certificate, headers } = await getCertificate(options.rootCertificateUrl, true);\n   if (\n     headers['content-type'] !== 'application\/x-pem-file' ||\n     headers['content-length'] == null ||\n     headers['content-length'] > 10000\n   ) {\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\n+    throw new Parse.Error(\n+      Parse.Error.OBJECT_NOT_FOUND,\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\n+    );\n   }\n   ca.cert = pki.certificateFromPem(certificate);\n-  ca.url = options.rootCertificateUrl\n+  ca.url = options.rootCertificateUrl;\n }\n \n module.exports = {"
        },
        {
            "index":118,
            "vuln_id":"GHSA-rp34-85x3-3764",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/135717a9a05c5bf8921f1389cbb469dcbf300bfd'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in librenms Cross-site Scripting (XSS) - Generic in Packagist librenms\/librenms prior to 22.1.0.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/librenms\/librenms",
            "commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/135717a9a05c5bf8921f1389cbb469dcbf300bfd",
            "commit_sha":"135717a9a05c5bf8921f1389cbb469dcbf300bfd",
            "patch":"SINGLE",
            "chain_ord":"['135717a9a05c5bf8921f1389cbb469dcbf300bfd']",
            "before_first_fix_commit":"{'c7b63b574f31efdeaa376d1a1cc0e7da681cba9f'}",
            "last_fix_commit":"135717a9a05c5bf8921f1389cbb469dcbf300bfd",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/13\/2022, 10:00:56",
            "message":"security - XSS Fix 01\n\nfixing https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/ (#13775)",
            "author":"PipoCanaja",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'includes\/html\/forms\/alert-transports.inc.php': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/135717a9a05c5bf8921f1389cbb469dcbf300bfd\/includes%2Fhtml%2Fforms%2Falert-transports.inc.php', 'patch': \"@@ -34,10 +34,10 @@\\n $status = 'ok';\\n $message = '';\\n \\n-$transport_id = $vars['transport_id'];\\n-$name = $vars['name'];\\n+$transport_id = strip_tags($vars['transport_id']);\\n+$name = strip_tags($vars['name']);\\n $is_default = (int) (isset($vars['is_default']) && $vars['is_default'] == 'on');\\n-$transport_type = $vars['transport-type'];\\n+$transport_type = strip_tags($vars['transport-type']);\\n \\n if (empty($name)) {\\n     $status = 'error';\"}}",
            "message_norm":"security - xss fix 01\n\nfixing https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/ (#13775)",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('fix', 'ACTION', ''), ('fixing', 'ACTION', ''), ('https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/', 'URL', ''), ('#13775', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['includes\/html\/forms\/alert-transports.inc.php'])",
            "num_files":1.0,
            "patch_content":"From 135717a9a05c5bf8921f1389cbb469dcbf300bfd Mon Sep 17 00:00:00 2001\nFrom: PipoCanaja <38363551+PipoCanaja@users.noreply.github.com>\nDate: Sun, 13 Feb 2022 11:00:56 +0100\nSubject: [PATCH] security - XSS Fix 01\n\nfixing https:\/\/huntr.dev\/bounties\/114ba055-a2f0-4db9-aafb-95df944ba177\/ (#13775)\n---\n includes\/html\/forms\/alert-transports.inc.php | 6 +++---\n 1 file changed, 3 insertions(+), 3 deletions(-)\n\ndiff --git a\/includes\/html\/forms\/alert-transports.inc.php b\/includes\/html\/forms\/alert-transports.inc.php\nindex 9675e9fc4cf2..21190036f3b0 100644\n--- a\/includes\/html\/forms\/alert-transports.inc.php\n+++ b\/includes\/html\/forms\/alert-transports.inc.php\n@@ -34,10 +34,10 @@\n $status = 'ok';\n $message = '';\n \n-$transport_id = $vars['transport_id'];\n-$name = $vars['name'];\n+$transport_id = strip_tags($vars['transport_id']);\n+$name = strip_tags($vars['name']);\n $is_default = (int) (isset($vars['is_default']) && $vars['is_default'] == 'on');\n-$transport_type = $vars['transport-type'];\n+$transport_type = strip_tags($vars['transport-type']);\n \n if (empty($name)) {\n     $status = 'error';",
            "code_diff":"@@ -34,10 +34,10 @@\n $status = 'ok';\n $message = '';\n \n-$transport_id = $vars['transport_id'];\n-$name = $vars['name'];\n+$transport_id = strip_tags($vars['transport_id']);\n+$name = strip_tags($vars['name']);\n $is_default = (int) (isset($vars['is_default']) && $vars['is_default'] == 'on');\n-$transport_type = $vars['transport-type'];\n+$transport_type = strip_tags($vars['transport-type']);\n \n if (empty($name)) {\n     $status = 'error';"
        },
        {
            "index":57,
            "vuln_id":"GHSA-xjfw-5vv5-vjq2",
            "cwe_id":"{'CWE-79', 'CWE-116'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Filter Stream Converter Application in XWiki Platform ### Impact\nWe found a possible XSS vector in the `Filter.FilterStreamDescriptorForm` wiki page related to pretty much all the form fields printed in the home page of the application.\n\n### Patches\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\nThe easiest workaround is to edit the wiki page `Filter.FilterStreamDescriptorForm` (with wiki editor) and change the lines\n\n```\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/>\n        #else\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/>\n```\n\ninto\n\n```\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/>\n        #else\n          <input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/>\n```",
            "published_date":"2022-06-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "commit_sha":"21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "patch":"SINGLE",
            "chain_ord":"['21906acb5ee2304552f56f9bbdbf8e7d368f7f3a']",
            "before_first_fix_commit":"{'eed842a0ea9e263548805b908ebbd362213ce0ea'}",
            "last_fix_commit":"21906acb5ee2304552f56f9bbdbf8e7d368f7f3a",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/04\/2022, 10:33:53",
            "message":"XWIKI-19293: Fix bad escaping",
            "author":"Thomas Mortagne",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/21906acb5ee2304552f56f9bbdbf8e7d368f7f3a\/xwiki-platform-core%2Fxwiki-platform-filter%2Fxwiki-platform-filter-ui%2Fsrc%2Fmain%2Fresources%2FFilter%2FFilterStreamDescriptorForm.xml', 'patch': '@@ -58,9 +58,9 @@\\n       &lt;dd&gt;\\n         ## TODO: design a real framework to generate form by type\\n         #if (($descriptor.defaultValue || \"$!descriptor.defaultValue\" != \\'\\') &amp;&amp; ($descriptor.type.getName() == \\'boolean\\' || $descriptor.type.getName() == \\'int\\' || $descriptor.type.getName() == \\'java.lang.String\\'))\\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/&gt;\\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/&gt;\\n         #else\\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/&gt;\\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/&gt;\\n         #end\\n       &lt;\/dd&gt;\\n     #end'}}",
            "message_norm":"xwiki-19293: fix bad escaping",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('escaping', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml'])",
            "num_files":1.0,
            "patch_content":"From 21906acb5ee2304552f56f9bbdbf8e7d368f7f3a Mon Sep 17 00:00:00 2001\nFrom: Thomas Mortagne <thomas.mortagne@gmail.com>\nDate: Tue, 4 Jan 2022 11:33:53 +0100\nSubject: [PATCH] XWIKI-19293: Fix bad escaping\n\n---\n ...\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml  | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml b\/xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml\nindex d1ab451ee5da..1a38e1e6cc01 100644\n--- a\/xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml\n+++ b\/xwiki-platform-core\/xwiki-platform-filter\/xwiki-platform-filter-ui\/src\/main\/resources\/Filter\/FilterStreamDescriptorForm.xml\n@@ -58,9 +58,9 @@\n       &lt;dd&gt;\n         ## TODO: design a real framework to generate form by type\n         #if (($descriptor.defaultValue || \"$!descriptor.defaultValue\" != '') &amp;&amp; ($descriptor.type.getName() == 'boolean' || $descriptor.type.getName() == 'int' || $descriptor.type.getName() == 'java.lang.String'))\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/&gt;\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/&gt;\n         #else\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/&gt;\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/&gt;\n         #end\n       &lt;\/dd&gt;\n     #end",
            "code_diff":"@@ -58,9 +58,9 @@\n       &lt;dd&gt;\n         ## TODO: design a real framework to generate form by type\n         #if (($descriptor.defaultValue || \"$!descriptor.defaultValue\" != '') &amp;&amp; ($descriptor.type.getName() == 'boolean' || $descriptor.type.getName() == 'int' || $descriptor.type.getName() == 'java.lang.String'))\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$request.get($descriptorId)#else$descriptor.defaultValue#end\"\/&gt;\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\" value=\"#if($request.get($descriptorId))$escapetool.xml($request.get($descriptorId))#else$descriptor.defaultValue#end\"\/&gt;\n         #else\n-          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$request.get($descriptorId)\"#end\/&gt;\n+          &lt;input type=\"text\" id=\"$descriptorId\" name=\"$descriptorId\"#if($request.get($descriptorId))value=\"$escapetool.xml($request.get($descriptorId))\"#end\/&gt;\n         #end\n       &lt;\/dd&gt;\n     #end"
        },
        {
            "index":636,
            "vuln_id":"GHSA-mrq4-7ch7-2465",
            "cwe_id":"{'CWE-94'}",
            "score":9.0,
            "chain":"{'https:\/\/github.com\/PrestaShop\/PrestaShop\/commit\/d02b469ec365822e6a9f017e57f588966248bf21'}",
            "dataset":"osv",
            "summary":"Server Side Twig Template Injection PrestaShop is an Open Source e-commerce platform. Starting with version 1.7.0.0 and ending with version 1.7.8.3, an attacker is able to inject twig code inside the back office when using the legacy layout. The problem is fixed in version 1.7.8.3. There are no known workarounds.",
            "published_date":"2022-01-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/PrestaShop\/PrestaShop",
            "commit_href":"https:\/\/github.com\/PrestaShop\/PrestaShop\/commit\/d02b469ec365822e6a9f017e57f588966248bf21",
            "commit_sha":"d02b469ec365822e6a9f017e57f588966248bf21",
            "patch":"SINGLE",
            "chain_ord":"['d02b469ec365822e6a9f017e57f588966248bf21']",
            "before_first_fix_commit":"{'ed8eb7ce8242e91d7acf85d7157277aad6bcac21', 'd2807b0560d5ca2835c6a4774e183c182d903f1a'}",
            "last_fix_commit":"d02b469ec365822e6a9f017e57f588966248bf21",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2022, 09:20:05",
            "message":"Merge pull request from GHSA-mrq4-7ch7-2465\n\nProperly escape smarty output for twig",
            "author":"GoT",
            "comments":null,
            "stats":"{'additions': 18, 'deletions': 19, 'total': 37}",
            "files":"{'src\/PrestaShopBundle\/Twig\/LayoutExtension.php': {'additions': 18, 'deletions': 19, 'changes': 37, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/PrestaShop\/PrestaShop\/raw\/d02b469ec365822e6a9f017e57f588966248bf21\/src%2FPrestaShopBundle%2FTwig%2FLayoutExtension.php', 'patch': \"@@ -218,26 +218,25 @@ public function getLegacyLayout(\\n             throw new Exception('PrestaShopBundle\\\\Twig\\\\LayoutExtension cannot find the {$content} string in legacy layout template', 1);\\n         }\\n \\n-        $content = str_replace(\\n-            [\\n-                '{$content}',\\n-                'var currentIndex = \\\\'index.php\\\\';',\\n-                '<\/head>',\\n-                '<\/body>',\\n-            ],\\n-            [\\n-                '{% block content_header %}{% endblock %}\\n-                 {% block content %}{% endblock %}\\n-                 {% block content_footer %}{% endblock %}\\n-                 {% block sidebar_right %}{% endblock %}',\\n-                'var currentIndex = \\\\'' . $this->context->getAdminLink($controllerName) . '\\\\';',\\n-                '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>',\\n-                '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>',\\n-            ],\\n-            $layout\\n-        );\\n+        $explodedLayout = explode('{$content}', $layout);\\n+        $header = explode('<\/head>', $explodedLayout[0]);\\n+        $footer = explode('<\/body>', $explodedLayout[1]);\\n+\\n+        return $this->escapeSmarty(str_replace('var currentIndex = \\\\'index.php\\\\';', 'var currentIndex = \\\\'' . $this->context->getAdminLink($controllerName) . '\\\\';', $header[0]))\\n+            . '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>'\\n+            . $this->escapeSmarty($header[1])\\n+            . '{% block content_header %}{% endblock %}'\\n+            . '{% block content %}{% endblock %}'\\n+            . '{% block content_footer %}{% endblock %}'\\n+            . '{% block sidebar_right %}{% endblock %}'\\n+            . $this->escapeSmarty($footer[0])\\n+            . '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>'\\n+            . $this->escapeSmarty($footer[1]);\\n+    }\\n \\n-        return $content;\\n+    private function escapeSmarty(string $template): string\\n+    {\\n+        return '{{ \\\\'' . addslashes($template) . '\\\\' | raw }}';\\n     }\\n \\n     \/**\"}}",
            "message_norm":"merge pull request from ghsa-mrq4-7ch7-2465\n\nproperly escape smarty output for twig",
            "language":"en",
            "entities":"[('ghsa-mrq4-7ch7-2465', 'VULNID', 'GHSA'), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/PrestaShopBundle\/Twig\/LayoutExtension.php'])",
            "num_files":1.0,
            "patch_content":"From d2807b0560d5ca2835c6a4774e183c182d903f1a Mon Sep 17 00:00:00 2001\nFrom: Pierre RAMBAUD <pierre.rambaud@prestashop.com>\nDate: Fri, 14 Jan 2022 11:12:38 +0100\nSubject: [PATCH] Properly escape smarty output for twig\n\n---\n src\/PrestaShopBundle\/Twig\/LayoutExtension.php | 37 +++++++++----------\n 1 file changed, 18 insertions(+), 19 deletions(-)\n\ndiff --git a\/src\/PrestaShopBundle\/Twig\/LayoutExtension.php b\/src\/PrestaShopBundle\/Twig\/LayoutExtension.php\nindex 366c8cb93f16f..e44735c83adc5 100644\n--- a\/src\/PrestaShopBundle\/Twig\/LayoutExtension.php\n+++ b\/src\/PrestaShopBundle\/Twig\/LayoutExtension.php\n@@ -218,26 +218,25 @@ public function getLegacyLayout(\n             throw new Exception('PrestaShopBundle\\Twig\\LayoutExtension cannot find the {$content} string in legacy layout template', 1);\n         }\n \n-        $content = str_replace(\n-            [\n-                '{$content}',\n-                'var currentIndex = \\'index.php\\';',\n-                '<\/head>',\n-                '<\/body>',\n-            ],\n-            [\n-                '{% block content_header %}{% endblock %}\n-                 {% block content %}{% endblock %}\n-                 {% block content_footer %}{% endblock %}\n-                 {% block sidebar_right %}{% endblock %}',\n-                'var currentIndex = \\'' . $this->context->getAdminLink($controllerName) . '\\';',\n-                '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>',\n-                '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>',\n-            ],\n-            $layout\n-        );\n+        $explodedLayout = explode('{$content}', $layout);\n+        $header = explode('<\/head>', $explodedLayout[0]);\n+        $footer = explode('<\/body>', $explodedLayout[1]);\n+\n+        return $this->escapeSmarty(str_replace('var currentIndex = \\'index.php\\';', 'var currentIndex = \\'' . $this->context->getAdminLink($controllerName) . '\\';', $header[0]))\n+            . '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>'\n+            . $this->escapeSmarty($header[1])\n+            . '{% block content_header %}{% endblock %}'\n+            . '{% block content %}{% endblock %}'\n+            . '{% block content_footer %}{% endblock %}'\n+            . '{% block sidebar_right %}{% endblock %}'\n+            . $this->escapeSmarty($footer[0])\n+            . '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>'\n+            . $this->escapeSmarty($footer[1]);\n+    }\n \n-        return $content;\n+    private function escapeSmarty(string $template): string\n+    {\n+        return '{{ \\'' . addslashes($template) . '\\' | raw }}';\n     }\n \n     \/**",
            "code_diff":"@@ -218,26 +218,25 @@ public function getLegacyLayout(\n             throw new Exception('PrestaShopBundle\\Twig\\LayoutExtension cannot find the {$content} string in legacy layout template', 1);\n         }\n \n-        $content = str_replace(\n-            [\n-                '{$content}',\n-                'var currentIndex = \\'index.php\\';',\n-                '<\/head>',\n-                '<\/body>',\n-            ],\n-            [\n-                '{% block content_header %}{% endblock %}\n-                 {% block content %}{% endblock %}\n-                 {% block content_footer %}{% endblock %}\n-                 {% block sidebar_right %}{% endblock %}',\n-                'var currentIndex = \\'' . $this->context->getAdminLink($controllerName) . '\\';',\n-                '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>',\n-                '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>',\n-            ],\n-            $layout\n-        );\n+        $explodedLayout = explode('{$content}', $layout);\n+        $header = explode('<\/head>', $explodedLayout[0]);\n+        $footer = explode('<\/body>', $explodedLayout[1]);\n+\n+        return $this->escapeSmarty(str_replace('var currentIndex = \\'index.php\\';', 'var currentIndex = \\'' . $this->context->getAdminLink($controllerName) . '\\';', $header[0]))\n+            . '{% block stylesheets %}{% endblock %}{% block extra_stylesheets %}{% endblock %}<\/head>'\n+            . $this->escapeSmarty($header[1])\n+            . '{% block content_header %}{% endblock %}'\n+            . '{% block content %}{% endblock %}'\n+            . '{% block content_footer %}{% endblock %}'\n+            . '{% block sidebar_right %}{% endblock %}'\n+            . $this->escapeSmarty($footer[0])\n+            . '{% block javascripts %}{% endblock %}{% block extra_javascripts %}{% endblock %}{% block translate_javascripts %}{% endblock %}<\/body>'\n+            . $this->escapeSmarty($footer[1]);\n+    }\n \n-        return $content;\n+    private function escapeSmarty(string $template): string\n+    {\n+        return '{{ \\'' . addslashes($template) . '\\' | raw }}';\n     }\n \n     \/**"
        },
        {
            "index":360,
            "vuln_id":"GHSA-qq74-vgcf-54c3",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/e5d575928b1371a7e07b09b6592822298335062a'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting via viva cshtm file upload in in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/e5d575928b1371a7e07b09b6592822298335062a",
            "commit_sha":"e5d575928b1371a7e07b09b6592822298335062a",
            "patch":"SINGLE",
            "chain_ord":"['e5d575928b1371a7e07b09b6592822298335062a']",
            "before_first_fix_commit":"{'ba45d19e1d77a7eea866dab30eff5da552694891'}",
            "last_fix_commit":"e5d575928b1371a7e07b09b6592822298335062a",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 05:07:40",
            "message":"bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/e5d575928b1371a7e07b09b6592822298335062a\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -311,6 +311,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".asa\")\\n \\t\\t\\t|| $isDangerStr($filename , \".cshtml\")\\n \\t\\t\\t|| $isDangerStr($filename , \".axd\")\\n+\\t\\t\\t|| $isDangerStr($filename , \"htm\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}'}}",
            "message_norm":"bug",
            "language":"id",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0,
            "patch_content":"From e5d575928b1371a7e07b09b6592822298335062a Mon Sep 17 00:00:00 2001\nFrom: star7th <xing7th@gmail.com>\nDate: Mon, 14 Mar 2022 13:07:40 +0800\nSubject: [PATCH] bug\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex b518b9b57..f7781533d 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -311,6 +311,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".asa\")\n \t\t\t|| $isDangerStr($filename , \".cshtml\")\n \t\t\t|| $isDangerStr($filename , \".axd\")\n+\t\t\t|| $isDangerStr($filename , \"htm\")\n \t\t) {\n \t\t\treturn true;\n \t\t}",
            "code_diff":"@@ -311,6 +311,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".asa\")\n \t\t\t|| $isDangerStr($filename , \".cshtml\")\n \t\t\t|| $isDangerStr($filename , \".axd\")\n+\t\t\t|| $isDangerStr($filename , \"htm\")\n \t\t) {\n \t\t\treturn true;\n \t\t}"
        },
        {
            "index":467,
            "vuln_id":"GHSA-8m9g-647g-5pxw",
            "cwe_id":"{'CWE-835'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/Yubico\/yubihsm-connector\/commit\/82bdf202c53460bac9106cc9b4b34a0a16cae0ed'}",
            "dataset":"osv",
            "summary":"Infinite loop in Yubico yubihsm-connector An issue was discovered in the \/api\/connector endpoint handler in Yubico yubihsm-connector before 3.0.1 (in YubiHSM SDK before 2021.04). The handler did not validate the length of the request, which can lead to a state where yubihsm-connector becomes stuck in a loop waiting for the YubiHSM to send it data, preventing any further operations until the yubihsm-connector is restarted. An attacker can send 0, 1, or 2 bytes to trigger this.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/Yubico\/yubihsm-connector",
            "commit_href":"https:\/\/github.com\/Yubico\/yubihsm-connector\/commit\/82bdf202c53460bac9106cc9b4b34a0a16cae0ed",
            "commit_sha":"82bdf202c53460bac9106cc9b4b34a0a16cae0ed",
            "patch":"SINGLE",
            "chain_ord":"['82bdf202c53460bac9106cc9b4b34a0a16cae0ed']",
            "before_first_fix_commit":"{'33e94e9034ffc52e29639386a191abd9b455d84b'}",
            "last_fix_commit":"82bdf202c53460bac9106cc9b4b34a0a16cae0ed",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/15\/2021, 13:00:39",
            "message":"Check content-length to avoid denial-of-service",
            "author":"Per Nilsson",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 6, 'total': 12}",
            "files":"{'api.go': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Yubico\/yubihsm-connector\/raw\/82bdf202c53460bac9106cc9b4b34a0a16cae0ed\/api.go', 'patch': '@@ -177,19 +177,19 @@ func apiHandler(w http.ResponseWriter, r *http.Request, timeout time.Duration, s\\n \\t\\treturn\\n \\t}\\n \\n+\\tif r.ContentLength < 3 || r.ContentLength > 2048 {\\n+\\t\\thttp.Error(w, http.StatusText(http.StatusBadRequest),\\n+\\t\\t\\thttp.StatusBadRequest)\\n+\\t\\treturn\\n+\\t}\\n+\\n \\tif buf, err = ioutil.ReadAll(r.Body); err != nil {\\n \\t\\tclog.WithError(err).Error(\"failed reading incoming request\")\\n \\t\\thttp.Error(w, http.StatusText(http.StatusInternalServerError),\\n \\t\\t\\thttp.StatusInternalServerError)\\n \\t\\treturn\\n \\t}\\n \\n-\\tif len(buf) < 3 || len(buf) > 2048 {\\n-\\t\\thttp.Error(w, http.StatusText(http.StatusBadRequest),\\n-\\t\\t\\thttp.StatusBadRequest)\\n-\\t\\treturn\\n-\\t}\\n-\\n \\tif buf, err = usbProxy(buf, cid, timeout, serial); err != nil {\\n \\t\\tclog.WithError(err).Error(\"failed usb proxy\")\\n \\t\\thttp.Error(w, http.StatusText(http.StatusInternalServerError),'}}",
            "message_norm":"check content-length to avoid denial-of-service",
            "language":"en",
            "entities":"[('denial-of-service', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['api.go'])",
            "num_files":1.0,
            "patch_content":"From 82bdf202c53460bac9106cc9b4b34a0a16cae0ed Mon Sep 17 00:00:00 2001\nFrom: Per Nilsson <per.nilsson@yubico.com>\nDate: Mon, 15 Mar 2021 14:00:39 +0100\nSubject: [PATCH] Check content-length to avoid denial-of-service\n\n---\n api.go | 12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ndiff --git a\/api.go b\/api.go\nindex 3b961f0..a28babf 100644\n--- a\/api.go\n+++ b\/api.go\n@@ -177,6 +177,12 @@ func apiHandler(w http.ResponseWriter, r *http.Request, timeout time.Duration, s\n \t\treturn\n \t}\n \n+\tif r.ContentLength < 3 || r.ContentLength > 2048 {\n+\t\thttp.Error(w, http.StatusText(http.StatusBadRequest),\n+\t\t\thttp.StatusBadRequest)\n+\t\treturn\n+\t}\n+\n \tif buf, err = ioutil.ReadAll(r.Body); err != nil {\n \t\tclog.WithError(err).Error(\"failed reading incoming request\")\n \t\thttp.Error(w, http.StatusText(http.StatusInternalServerError),\n@@ -184,12 +190,6 @@ func apiHandler(w http.ResponseWriter, r *http.Request, timeout time.Duration, s\n \t\treturn\n \t}\n \n-\tif len(buf) < 3 || len(buf) > 2048 {\n-\t\thttp.Error(w, http.StatusText(http.StatusBadRequest),\n-\t\t\thttp.StatusBadRequest)\n-\t\treturn\n-\t}\n-\n \tif buf, err = usbProxy(buf, cid, timeout, serial); err != nil {\n \t\tclog.WithError(err).Error(\"failed usb proxy\")\n \t\thttp.Error(w, http.StatusText(http.StatusInternalServerError),",
            "code_diff":"@@ -177,6 +177,12 @@ func apiHandler(w http.ResponseWriter, r *http.Request, timeout time.Duration, s\n \t\treturn\n \t}\n \n+\tif r.ContentLength < 3 || r.ContentLength > 2048 {\n+\t\thttp.Error(w, http.StatusText(http.StatusBadRequest),\n+\t\t\thttp.StatusBadRequest)\n+\t\treturn\n+\t}\n+\n \tif buf, err = ioutil.ReadAll(r.Body); err != nil {\n \t\tclog.WithError(err).Error(\"failed reading incoming request\")\n \t\thttp.Error(w, http.StatusText(http.StatusInternalServerError),\n@@ -184,12 +190,6 @@ func apiHandler(w http.ResponseWriter, r *http.Request, timeout time.Duration, s\n \t\treturn\n \t}\n \n-\tif len(buf) < 3 || len(buf) > 2048 {\n-\t\thttp.Error(w, http.StatusText(http.StatusBadRequest),\n-\t\t\thttp.StatusBadRequest)\n-\t\treturn\n-\t}\n-\n \tif buf, err = usbProxy(buf, cid, timeout, serial); err != nil {\n \t\tclog.WithError(err).Error(\"failed usb proxy\")\n \t\thttp.Error(w, http.StatusText(http.StatusInternalServerError),"
        },
        {
            "index":639,
            "vuln_id":"GHSA-38rv-5jqc-m2cv",
            "cwe_id":"{'CWE-918'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/recurly\/recurly-client-python\/commit\/049c74699ce93cf126feff06d632ea63fba36742'}",
            "dataset":"osv",
            "summary":"High severity vulnerability that affects recurly The Recurly Client Python Library before 2.0.5, 2.1.16, 2.2.22, 2.3.1, 2.4.5, 2.5.1, 2.6.2 is vulnerable to a Server-Side Request Forgery vulnerability in the \"Resource.get\" method that could result in compromise of API keys or other critical resources.",
            "published_date":"2019-01-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/recurly\/recurly-client-python",
            "commit_href":"https:\/\/github.com\/recurly\/recurly-client-python\/commit\/049c74699ce93cf126feff06d632ea63fba36742",
            "commit_sha":"049c74699ce93cf126feff06d632ea63fba36742",
            "patch":"SINGLE",
            "chain_ord":"['049c74699ce93cf126feff06d632ea63fba36742']",
            "before_first_fix_commit":"{'9db2d1a0268201571a567d73481d0d16c6fbc5e1'}",
            "last_fix_commit":"049c74699ce93cf126feff06d632ea63fba36742",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/09\/2017, 00:45:28",
            "message":"Fix SSRF: do not use urljoin, quote uuids",
            "author":"Benjamin Eckel",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 6, 'total': 12}",
            "files":"{'recurly\/resource.py': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/recurly\/recurly-client-python\/raw\/049c74699ce93cf126feff06d632ea63fba36742\/recurly%2Fresource.py', 'patch': '@@ -12,8 +12,7 @@\\n import recurly.errors\\n from recurly.link_header import parse_link_value\\n from six.moves import http_client\\n-from six.moves.urllib.parse import urlencode, urljoin, urlsplit\\n-\\n+from six.moves.urllib.parse import urlencode, urlsplit, quote\\n \\n class Money(object):\\n \\n@@ -338,7 +337,8 @@ def get(cls, uuid):\\n         can be directly requested with this method.\\n \\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.member_path % (uuid,))\\n+        uuid = quote(str(uuid))\\n+        url = recurly.base_uri() + (cls.member_path % (uuid,))\\n         resp, elem = cls.element_for_url(url)\\n         return cls.from_element(elem)\\n \\n@@ -606,7 +606,7 @@ def all(cls, **kwargs):\\n         parameters.\\n \\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\\n+        url = recurly.base_uri() + cls.collection_path\\n         if kwargs:\\n             url = \\'%s?%s\\' % (url, urlencode(kwargs))\\n         return Page.page_for_url(url)\\n@@ -616,7 +616,7 @@ def count(cls, **kwargs):\\n         \"\"\"Return a count of server side resources given\\n         filtering arguments in kwargs.\\n         \"\"\"\\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\\n+        url = recurly.base_uri() + cls.collection_path\\n         if kwargs:\\n             url = \\'%s?%s\\' % (url, urlencode(kwargs))\\n         return Page.count_for_url(url)\\n@@ -638,7 +638,7 @@ def _update(self):\\n         return self.put(self._url)\\n \\n     def _create(self):\\n-        url = urljoin(recurly.base_uri(), self.collection_path)\\n+        url = recurly.base_uri() + self.collection_path\\n         return self.post(url)\\n \\n     def put(self, url):'}}",
            "message_norm":"fix ssrf: do not use urljoin, quote uuids",
            "language":"fr",
            "entities":"[('fix', 'ACTION', ''), ('ssrf', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['recurly\/resource.py'])",
            "num_files":1.0,
            "patch_content":"From 049c74699ce93cf126feff06d632ea63fba36742 Mon Sep 17 00:00:00 2001\nFrom: Benjamin Eckel <bhelx@simst.im>\nDate: Wed, 8 Nov 2017 18:45:28 -0600\nSubject: [PATCH] Fix SSRF: do not use urljoin, quote uuids\n\n---\n recurly\/resource.py | 12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ndiff --git a\/recurly\/resource.py b\/recurly\/resource.py\nindex 51fbf961..b0d214ae 100644\n--- a\/recurly\/resource.py\n+++ b\/recurly\/resource.py\n@@ -12,8 +12,7 @@\n import recurly.errors\n from recurly.link_header import parse_link_value\n from six.moves import http_client\n-from six.moves.urllib.parse import urlencode, urljoin, urlsplit\n-\n+from six.moves.urllib.parse import urlencode, urlsplit, quote\n \n class Money(object):\n \n@@ -338,7 +337,8 @@ def get(cls, uuid):\n         can be directly requested with this method.\n \n         \"\"\"\n-        url = urljoin(recurly.base_uri(), cls.member_path % (uuid,))\n+        uuid = quote(str(uuid))\n+        url = recurly.base_uri() + (cls.member_path % (uuid,))\n         resp, elem = cls.element_for_url(url)\n         return cls.from_element(elem)\n \n@@ -606,7 +606,7 @@ def all(cls, **kwargs):\n         parameters.\n \n         \"\"\"\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\n+        url = recurly.base_uri() + cls.collection_path\n         if kwargs:\n             url = '%s?%s' % (url, urlencode(kwargs))\n         return Page.page_for_url(url)\n@@ -616,7 +616,7 @@ def count(cls, **kwargs):\n         \"\"\"Return a count of server side resources given\n         filtering arguments in kwargs.\n         \"\"\"\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\n+        url = recurly.base_uri() + cls.collection_path\n         if kwargs:\n             url = '%s?%s' % (url, urlencode(kwargs))\n         return Page.count_for_url(url)\n@@ -638,7 +638,7 @@ def _update(self):\n         return self.put(self._url)\n \n     def _create(self):\n-        url = urljoin(recurly.base_uri(), self.collection_path)\n+        url = recurly.base_uri() + self.collection_path\n         return self.post(url)\n \n     def put(self, url):",
            "code_diff":"@@ -12,8 +12,7 @@\n import recurly.errors\n from recurly.link_header import parse_link_value\n from six.moves import http_client\n-from six.moves.urllib.parse import urlencode, urljoin, urlsplit\n-\n+from six.moves.urllib.parse import urlencode, urlsplit, quote\n \n class Money(object):\n \n@@ -338,7 +337,8 @@ def get(cls, uuid):\n         can be directly requested with this method.\n \n         \"\"\"\n-        url = urljoin(recurly.base_uri(), cls.member_path % (uuid,))\n+        uuid = quote(str(uuid))\n+        url = recurly.base_uri() + (cls.member_path % (uuid,))\n         resp, elem = cls.element_for_url(url)\n         return cls.from_element(elem)\n \n@@ -606,7 +606,7 @@ def all(cls, **kwargs):\n         parameters.\n \n         \"\"\"\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\n+        url = recurly.base_uri() + cls.collection_path\n         if kwargs:\n             url = '%s?%s' % (url, urlencode(kwargs))\n         return Page.page_for_url(url)\n@@ -616,7 +616,7 @@ def count(cls, **kwargs):\n         \"\"\"Return a count of server side resources given\n         filtering arguments in kwargs.\n         \"\"\"\n-        url = urljoin(recurly.base_uri(), cls.collection_path)\n+        url = recurly.base_uri() + cls.collection_path\n         if kwargs:\n             url = '%s?%s' % (url, urlencode(kwargs))\n         return Page.count_for_url(url)\n@@ -638,7 +638,7 @@ def _update(self):\n         return self.put(self._url)\n \n     def _create(self):\n-        url = urljoin(recurly.base_uri(), self.collection_path)\n+        url = recurly.base_uri() + self.collection_path\n         return self.post(url)\n \n     def put(self, url):"
        },
        {
            "index":47,
            "vuln_id":"GHSA-2r8p-fg3c-wcj4",
            "cwe_id":"{'CWE-125'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d'}",
            "dataset":"osv",
            "summary":"Heap OOB and CHECK fail in `ResourceGather` ### Impact\nAn attacker can trigger a crash via a `CHECK`-fail in debug builds of TensorFlow using `tf.raw_ops.ResourceGather` or a read from outside the bounds of heap allocated data in the same API in a release build:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant(value=[[1,2],[3,4],[5,6]],shape=(3,2),dtype=tf.uint32)\nv = tf.Variable(tensor)\ntf.raw_ops.ResourceGather(\n  resource=v.handle,\n  indices=[0],\n  dtype=tf.uint32,\n  batch_dims=10,\n  validate_indices=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/resource_variable_ops.cc#L660-L668) does not check that the `batch_dims` value that the user supplies is less than the rank of the input tensor.\n\nSince the implementation uses several for loops over the dimensions of `tensor`, this results in reading data from outside the bounds of heap allocated buffer backing the tensor:\n\n```cc\n    \/\/ batch_dims_ = > params.dims() (10 > 2)\n    for (int i = 0; i < batch_dims_; ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n    for (int i = batch_dims_; i < indices.dims(); ++i) {\n      result_shape.AddDim(indices.dim_size(i));\n    }\n    for (int i = batch_dims_ + 1; i < params.dims(); ++i) {\n      result_shape.AddDim(params.dim_size(i));\n    }\n```\n\nIn debug mode, `.dim_size(i)` validates that the argument is less than `.dims()` using a `DCHECK`. But the `DCHECK` is a no-op in release builds.\n\n### Patches\nWe have patched the issue in GitHub commit [bc9c546ce7015c57c2f15c168b3d9201de679a1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/bc9c546ce7015c57c2f15c168b3d9201de679a1d",
            "commit_sha":"bc9c546ce7015c57c2f15c168b3d9201de679a1d",
            "patch":"SINGLE",
            "chain_ord":"['bc9c546ce7015c57c2f15c168b3d9201de679a1d']",
            "before_first_fix_commit":"{'d5f28c9b17220a9c7b3a4c93fc6c3fea6949cadd'}",
            "last_fix_commit":"bc9c546ce7015c57c2f15c168b3d9201de679a1d",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 04:37:59",
            "message":"Prevent heap oob access in `resource_variable_ops.cc`\n\nPiperOrigin-RevId: 387936433\nChange-Id: I9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/resource_variable_ops.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/bc9c546ce7015c57c2f15c168b3d9201de679a1d\/tensorflow%2Fcore%2Fkernels%2Fresource_variable_ops.cc', 'patch': '@@ -660,6 +660,11 @@ class ResourceGatherOp : public OpKernel {\\n     OP_REQUIRES(\\n         c, TensorShapeUtils::IsVectorOrHigher(params.shape()),\\n         errors::InvalidArgument(\"params must be at least 1 dimensional\"));\\n+    OP_REQUIRES(\\n+        c, params.shape().dims() >= batch_dims_,\\n+        errors::InvalidArgument(\"params must have at least \", batch_dims_,\\n+                                \" (batch_dims) dimensions but it has shape \",\\n+                                params.shape().DebugString()));\\n \\n     \/\/ Check that we have enough index space\\n     const int64_t N = indices.NumElements();'}}",
            "message_norm":"prevent heap oob access in `resource_variable_ops.cc`\n\npiperorigin-revid: 387936433\nchange-id: i9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('387936433', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/resource_variable_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From bc9c546ce7015c57c2f15c168b3d9201de679a1d Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 30 Jul 2021 21:37:59 -0700\nSubject: [PATCH] Prevent heap oob access in `resource_variable_ops.cc`\n\nPiperOrigin-RevId: 387936433\nChange-Id: I9e71ddaa8dbd51ec6afbf163a6b3b591f193b4f6\n---\n tensorflow\/core\/kernels\/resource_variable_ops.cc | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/resource_variable_ops.cc b\/tensorflow\/core\/kernels\/resource_variable_ops.cc\nindex 71aead55690d65..32a0a43364deae 100644\n--- a\/tensorflow\/core\/kernels\/resource_variable_ops.cc\n+++ b\/tensorflow\/core\/kernels\/resource_variable_ops.cc\n@@ -660,6 +660,11 @@ class ResourceGatherOp : public OpKernel {\n     OP_REQUIRES(\n         c, TensorShapeUtils::IsVectorOrHigher(params.shape()),\n         errors::InvalidArgument(\"params must be at least 1 dimensional\"));\n+    OP_REQUIRES(\n+        c, params.shape().dims() >= batch_dims_,\n+        errors::InvalidArgument(\"params must have at least \", batch_dims_,\n+                                \" (batch_dims) dimensions but it has shape \",\n+                                params.shape().DebugString()));\n \n     \/\/ Check that we have enough index space\n     const int64_t N = indices.NumElements();",
            "code_diff":"@@ -660,6 +660,11 @@ class ResourceGatherOp : public OpKernel {\n     OP_REQUIRES(\n         c, TensorShapeUtils::IsVectorOrHigher(params.shape()),\n         errors::InvalidArgument(\"params must be at least 1 dimensional\"));\n+    OP_REQUIRES(\n+        c, params.shape().dims() >= batch_dims_,\n+        errors::InvalidArgument(\"params must have at least \", batch_dims_,\n+                                \" (batch_dims) dimensions but it has shape \",\n+                                params.shape().DebugString()));\n \n     \/\/ Check that we have enough index space\n     const int64_t N = indices.NumElements();"
        },
        {
            "index":783,
            "vuln_id":"GHSA-85wq-pqhp-hmq6",
            "cwe_id":"{'CWE-352'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/3c5e5ca63d9a1ac1c4087682dc0d426625eafed8', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/e69c28e44dae41322112471e1c80f840bde314d4', 'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/23f4809e6c10a221e9d67f2e841536845387b42d'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery in Jenkins Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to an issue in the Jenkins user database authentication realm: create an account if signup is enabled; or create an account if the victim is an administrator, possibly deleting the existing default admin user in the process and allowing a wide variety of impacts.",
            "published_date":"2022-05-14",
            "chain_len":3,
            "project":"https:\/\/github.com\/jenkinsci\/jenkins",
            "commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/e69c28e44dae41322112471e1c80f840bde314d4",
            "commit_sha":"e69c28e44dae41322112471e1c80f840bde314d4",
            "patch":"MULTI",
            "chain_ord":"['3c5e5ca63d9a1ac1c4087682dc0d426625eafed8', 'e69c28e44dae41322112471e1c80f840bde314d4', '23f4809e6c10a221e9d67f2e841536845387b42d']",
            "before_first_fix_commit":"{'eeb699ed8c2ce937f2b836692b36a98da7bb5622'}",
            "last_fix_commit":"23f4809e6c10a221e9d67f2e841536845387b42d",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/01\/2017, 17:41:02",
            "message":"[SECURITY-412] Fix handling of restart\/safeRestart URLs",
            "author":"Daniel Beck",
            "comments":null,
            "stats":"{'additions': 21, 'deletions': 8, 'total': 29}",
            "files":"{'core\/src\/main\/java\/jenkins\/model\/Jenkins.java': {'additions': 21, 'deletions': 8, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/e69c28e44dae41322112471e1c80f840bde314d4\/core%2Fsrc%2Fmain%2Fjava%2Fjenkins%2Fmodel%2FJenkins.java', 'patch': '@@ -3367,19 +3367,25 @@ public DirectoryBrowserSupport doUserContent() {\\n      *\\n      * This first replaces \"app\" to {@link HudsonIsRestarting}\\n      *\/\\n-    @CLIMethod(name=\"restart\")\\n-    @RequirePOST\\n     public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, RestartNotSupportedException {\\n         checkPermission(ADMINISTER);\\n         if (req != null && req.getMethod().equals(\"GET\")) {\\n             req.getView(this,\"_restart.jelly\").forward(req,rsp);\\n             return;\\n         }\\n \\n-        restart();\\n+        if (req != null && req.getMethod().equals(\"POST\")) {\\n+            restart();\\n+        }\\n \\n-        if (rsp != null) \/\/ null for CLI\\n-            rsp.sendRedirect2(\".\");\\n+        rsp.sendRedirect2(\".\");\\n+    }\\n+\\n+    @CLIMethod(name=\"restart\")\\n+    @Restricted(NoExternalUse.class)\\n+    public void cliRestart() throws RestartNotSupportedException {\\n+        checkPermission(ADMINISTER);\\n+        restart();\\n     }\\n \\n     \/**\\n@@ -3389,18 +3395,25 @@ public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOExceptio\\n      *\\n      * @since 1.332\\n      *\/\\n-    @CLIMethod(name=\"safe-restart\")\\n-    @RequirePOST\\n     public HttpResponse doSafeRestart(StaplerRequest req) throws IOException, ServletException, RestartNotSupportedException {\\n         checkPermission(ADMINISTER);\\n         if (req != null && req.getMethod().equals(\"GET\"))\\n             return HttpResponses.forwardToView(this,\"_safeRestart.jelly\");\\n \\n-        safeRestart();\\n+        if (req != null && req.getMethod().equals(\"POST\")) {\\n+            safeRestart();\\n+        }\\n \\n         return HttpResponses.redirectToDot();\\n     }\\n \\n+    @CLIMethod(name=\"safe-restart\")\\n+    @Restricted(NoExternalUse.class)\\n+    public void cliSafeRestart() throws RestartNotSupportedException {\\n+        checkPermission(ADMINISTER);\\n+        safeRestart();\\n+    }\\n+\\n     \/**\\n      * Performs a restart.\\n      *\/'}}",
            "message_norm":"[security-412] fix handling of restart\/saferestart urls",
            "language":"en",
            "entities":"[('security-412', 'SECWORD', ''), ('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/src\/main\/java\/jenkins\/model\/Jenkins.java'])",
            "num_files":1.0,
            "patch_content":"From e69c28e44dae41322112471e1c80f840bde314d4 Mon Sep 17 00:00:00 2001\nFrom: Daniel Beck <daniel-beck@users.noreply.github.com>\nDate: Sat, 1 Apr 2017 19:41:02 +0200\nSubject: [PATCH] [SECURITY-412] Fix handling of restart\/safeRestart URLs\n\n---\n core\/src\/main\/java\/jenkins\/model\/Jenkins.java | 29 ++++++++++++++-----\n 1 file changed, 21 insertions(+), 8 deletions(-)\n\ndiff --git a\/core\/src\/main\/java\/jenkins\/model\/Jenkins.java b\/core\/src\/main\/java\/jenkins\/model\/Jenkins.java\nindex ded6579c9f98..2798d622cf27 100644\n--- a\/core\/src\/main\/java\/jenkins\/model\/Jenkins.java\n+++ b\/core\/src\/main\/java\/jenkins\/model\/Jenkins.java\n@@ -3367,8 +3367,6 @@ public DirectoryBrowserSupport doUserContent() {\n      *\n      * This first replaces \"app\" to {@link HudsonIsRestarting}\n      *\/\n-    @CLIMethod(name=\"restart\")\n-    @RequirePOST\n     public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, RestartNotSupportedException {\n         checkPermission(ADMINISTER);\n         if (req != null && req.getMethod().equals(\"GET\")) {\n@@ -3376,10 +3374,18 @@ public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOExceptio\n             return;\n         }\n \n-        restart();\n+        if (req != null && req.getMethod().equals(\"POST\")) {\n+            restart();\n+        }\n \n-        if (rsp != null) \/\/ null for CLI\n-            rsp.sendRedirect2(\".\");\n+        rsp.sendRedirect2(\".\");\n+    }\n+\n+    @CLIMethod(name=\"restart\")\n+    @Restricted(NoExternalUse.class)\n+    public void cliRestart() throws RestartNotSupportedException {\n+        checkPermission(ADMINISTER);\n+        restart();\n     }\n \n     \/**\n@@ -3389,18 +3395,25 @@ public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOExceptio\n      *\n      * @since 1.332\n      *\/\n-    @CLIMethod(name=\"safe-restart\")\n-    @RequirePOST\n     public HttpResponse doSafeRestart(StaplerRequest req) throws IOException, ServletException, RestartNotSupportedException {\n         checkPermission(ADMINISTER);\n         if (req != null && req.getMethod().equals(\"GET\"))\n             return HttpResponses.forwardToView(this,\"_safeRestart.jelly\");\n \n-        safeRestart();\n+        if (req != null && req.getMethod().equals(\"POST\")) {\n+            safeRestart();\n+        }\n \n         return HttpResponses.redirectToDot();\n     }\n \n+    @CLIMethod(name=\"safe-restart\")\n+    @Restricted(NoExternalUse.class)\n+    public void cliSafeRestart() throws RestartNotSupportedException {\n+        checkPermission(ADMINISTER);\n+        safeRestart();\n+    }\n+\n     \/**\n      * Performs a restart.\n      *\/",
            "code_diff":"@@ -3367,8 +3367,6 @@ public DirectoryBrowserSupport doUserContent() {\n      *\n      * This first replaces \"app\" to {@link HudsonIsRestarting}\n      *\/\n-    @CLIMethod(name=\"restart\")\n-    @RequirePOST\n     public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOException, ServletException, RestartNotSupportedException {\n         checkPermission(ADMINISTER);\n         if (req != null && req.getMethod().equals(\"GET\")) {\n@@ -3376,10 +3374,18 @@ public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOExceptio\n             return;\n         }\n \n-        restart();\n+        if (req != null && req.getMethod().equals(\"POST\")) {\n+            restart();\n+        }\n \n-        if (rsp != null) \/\/ null for CLI\n-            rsp.sendRedirect2(\".\");\n+        rsp.sendRedirect2(\".\");\n+    }\n+\n+    @CLIMethod(name=\"restart\")\n+    @Restricted(NoExternalUse.class)\n+    public void cliRestart() throws RestartNotSupportedException {\n+        checkPermission(ADMINISTER);\n+        restart();\n     }\n \n     \/**\n@@ -3389,18 +3395,25 @@ public void doRestart(StaplerRequest req, StaplerResponse rsp) throws IOExceptio\n      *\n      * @since 1.332\n      *\/\n-    @CLIMethod(name=\"safe-restart\")\n-    @RequirePOST\n     public HttpResponse doSafeRestart(StaplerRequest req) throws IOException, ServletException, RestartNotSupportedException {\n         checkPermission(ADMINISTER);\n         if (req != null && req.getMethod().equals(\"GET\"))\n             return HttpResponses.forwardToView(this,\"_safeRestart.jelly\");\n \n-        safeRestart();\n+        if (req != null && req.getMethod().equals(\"POST\")) {\n+            safeRestart();\n+        }\n \n         return HttpResponses.redirectToDot();\n     }\n \n+    @CLIMethod(name=\"safe-restart\")\n+    @Restricted(NoExternalUse.class)\n+    public void cliSafeRestart() throws RestartNotSupportedException {\n+        checkPermission(ADMINISTER);\n+        safeRestart();\n+    }\n+\n     \/**\n      * Performs a restart.\n      *\/"
        },
        {
            "index":535,
            "vuln_id":"GHSA-gx6h-936c-vrrr",
            "cwe_id":"{'CWE-79'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/053d957d53f2a543d158f3ab651e390d2728e0b9'}",
            "dataset":"osv",
            "summary":"Cross site scripting in registration template in xwiki-platform ### Impact\n\nWe found a possible XSS vector in the `registerinline.vm` template related to the `xredirect` hidden field. \nThis template is only used in the following conditions:\n  - the wiki must be open to registration for anyone\n  - the wiki must be closed to view for Guest users (more specifically the XWiki.Registration page must be forbidden in View for guest user)\n\nA way to obtain the second condition is when administrators checked the \"Prevent unregistered users from viewing pages, regardless of the page rights\" box in the administration rights.\n\n### Patches\n\nThe issue is patched in versions 12.10.11, 14.0-rc-1, 13.4.7, 13.10.3.\n\n### Workarounds\n\nThere are two main ways for protecting against this vulnerability, the easiest and the best one is by applying a patch in the `registerinline.vm` template, the patch consists in checking the value of the xredirect field to ensure it matches the following:\n```\n<input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" \/>\n```\n\nIf for some reason it's not possible to patch this file, another workaround is to ensure \"Prevent unregistered users from viewing pages, regardless of the page rights\" is not checked in the rights and apply a better right scheme using groups and rights on spaces. \n\n### References\n\nhttps:\/\/jira.xwiki.org\/browse\/XWIKI-19291\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security mailing list](mailto:security@xwiki.org)",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/053d957d53f2a543d158f3ab651e390d2728e0b9",
            "commit_sha":"053d957d53f2a543d158f3ab651e390d2728e0b9",
            "patch":"SINGLE",
            "chain_ord":"['053d957d53f2a543d158f3ab651e390d2728e0b9']",
            "before_first_fix_commit":"{'9ae3703c535e34d328fd60758f85a8ee358224ca'}",
            "last_fix_commit":"053d957d53f2a543d158f3ab651e390d2728e0b9",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/04\/2022, 10:09:57",
            "message":"XWIKI-19291: redirect parameter is badly handled in register page\n\n  * Fix the typo",
            "author":"Simon Urli",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/053d957d53f2a543d158f3ab651e390d2728e0b9\/xwiki-platform-core%2Fxwiki-platform-web%2Fxwiki-platform-web-templates%2Fsrc%2Fmain%2Fresources%2Ftemplates%2Fregisterinline.vm', 'patch': '@@ -45,7 +45,7 @@\\n       <div>\\n         <input type=\"hidden\" name=\"form_token\" value=\"$!services.csrf.token\" \/>\\n         <input type=\"hidden\" name=\"register\" value=\"1\" \/>\\n-        <input type=\"hidden\" name=\"xredirect\" value=\"$!request.xredirect\" \/>\\n+        <input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" \/>\\n         #set ($class = $xwiki.getClass(\\'XWiki.XWikiUsers\\'))\\n         #set ($obj = $class.newObject())\\n         #set ($serverobj = $class.newObject())'}}",
            "message_norm":"xwiki-19291: redirect parameter is badly handled in register page\n\n  * fix the typo",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm'])",
            "num_files":1.0,
            "patch_content":"From 053d957d53f2a543d158f3ab651e390d2728e0b9 Mon Sep 17 00:00:00 2001\nFrom: Simon Urli <simon.urli@xwiki.com>\nDate: Tue, 4 Jan 2022 11:09:57 +0100\nSubject: [PATCH] XWIKI-19291: redirect parameter is badly handled in register\n page\n\n  * Fix the typo\n---\n ...\/src\/main\/resources\/templates\/registerinline.vm              | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm b\/xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm\nindex 2657b2cddf5a..b25f72f1e166 100644\n--- a\/xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm\n+++ b\/xwiki-platform-core\/xwiki-platform-web\/xwiki-platform-web-templates\/src\/main\/resources\/templates\/registerinline.vm\n@@ -45,7 +45,7 @@\n       <div>\n         <input type=\"hidden\" name=\"form_token\" value=\"$!services.csrf.token\" \/>\n         <input type=\"hidden\" name=\"register\" value=\"1\" \/>\n-        <input type=\"hidden\" name=\"xredirect\" value=\"$!request.xredirect\" \/>\n+        <input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" \/>\n         #set ($class = $xwiki.getClass('XWiki.XWikiUsers'))\n         #set ($obj = $class.newObject())\n         #set ($serverobj = $class.newObject())",
            "code_diff":"@@ -45,7 +45,7 @@\n       <div>\n         <input type=\"hidden\" name=\"form_token\" value=\"$!services.csrf.token\" \/>\n         <input type=\"hidden\" name=\"register\" value=\"1\" \/>\n-        <input type=\"hidden\" name=\"xredirect\" value=\"$!request.xredirect\" \/>\n+        <input type=\"hidden\" name=\"xredirect\" value=\"$escapetool.xml($!request.xredirect)\" \/>\n         #set ($class = $xwiki.getClass('XWiki.XWikiUsers'))\n         #set ($obj = $class.newObject())\n         #set ($serverobj = $class.newObject())"
        },
        {
            "index":436,
            "vuln_id":"GHSA-qhmp-h54x-38qr",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/caronc\/apprise\/commit\/e20fce630d55e4ca9b0a1e325a5fea6997489831'}",
            "dataset":"osv",
            "summary":"CWE-730 Regex injection with IFTTT Plugin ### Impact\r\nAnyone _publicly_ hosting the Apprise library and granting them access to the IFTTT notification service.\r\n\r\n### Patches\r\nUpdate to Apprise v0.9.5.1\r\n   ```bash\r\n   # Install Apprise v0.9.5.1 from PyPI\r\n   pip install apprise==0.9.5.1\r\n   ```\r\n\r\nThe patch to the problem was performed [here](https:\/\/github.com\/caronc\/apprise\/pull\/436\/files).\r\n\r\n### Workarounds\r\nAlternatively, if upgrading is not an option, you can safely remove the following file:\r\n- `apprise\/plugins\/NotifyIFTTT.py` \r\n\r\nThe above will eliminate the ability to use IFTTT, but everything else will work smoothly.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Open an issue in [Apprise](https:\/\/github.com\/caronc\/apprise\/issues)\r\n* Email me at [lead2gold@gmail.com](mailto:lead2gold@gmail.com)\r\n\r\n### Additional Credit\r\nGithub would not allow me to additionally credit **Rasmus Petersen**, but I would like to put that here at the very least - thank you for finding and reporting this issue along with those already credited\r\n\r\n## Additional Notes:\r\n- Github would not allow me to add\/tag the 2 CWE's this issue is applicable to (only CWE-400).  The other is: CWE-730 (placed in the title)",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/caronc\/apprise",
            "commit_href":"https:\/\/github.com\/caronc\/apprise\/commit\/e20fce630d55e4ca9b0a1e325a5fea6997489831",
            "commit_sha":"e20fce630d55e4ca9b0a1e325a5fea6997489831",
            "patch":"SINGLE",
            "chain_ord":"['e20fce630d55e4ca9b0a1e325a5fea6997489831']",
            "before_first_fix_commit":"{'81d1ea72bcee4441278a809a95fc0f91dc916402'}",
            "last_fix_commit":"e20fce630d55e4ca9b0a1e325a5fea6997489831",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/06\/2021, 17:51:32",
            "message":"Slight bulletproofing to IFTTT regex handling (#436)",
            "author":"Chris Caron",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'apprise\/plugins\/NotifyIFTTT.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/caronc\/apprise\/raw\/e20fce630d55e4ca9b0a1e325a5fea6997489831\/apprise%2Fplugins%2FNotifyIFTTT.py', 'patch': \"@@ -355,7 +355,7 @@ def parse_native_url(url):\\n         result = re.match(\\n             r'^https?:\/\/maker\\\\.ifttt\\\\.com\/use\/'\\n             r'(?P<webhook_id>[A-Z0-9_-]+)'\\n-            r'\/?(?P<events>([A-Z0-9_-]+\/?)+)?'\\n+            r'((?P<events>(\/[A-Z0-9_-]+)+))?'\\n             r'\/?(?P<params>\\\\?.+)?$', url, re.I)\\n \\n         if result:\"}}",
            "message_norm":"slight bulletproofing to ifttt regex handling (#436)",
            "language":"no",
            "entities":"[('#436', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['apprise\/plugins\/NotifyIFTTT.py'])",
            "num_files":1.0,
            "patch_content":"From e20fce630d55e4ca9b0a1e325a5fea6997489831 Mon Sep 17 00:00:00 2001\nFrom: Chris Caron <lead2gold@gmail.com>\nDate: Mon, 6 Sep 2021 13:51:32 -0400\nSubject: [PATCH] Slight bulletproofing to IFTTT regex handling (#436)\n\n---\n apprise\/plugins\/NotifyIFTTT.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/apprise\/plugins\/NotifyIFTTT.py b\/apprise\/plugins\/NotifyIFTTT.py\nindex c038a9e7e..b735a4d07 100644\n--- a\/apprise\/plugins\/NotifyIFTTT.py\n+++ b\/apprise\/plugins\/NotifyIFTTT.py\n@@ -355,7 +355,7 @@ def parse_native_url(url):\n         result = re.match(\n             r'^https?:\/\/maker\\.ifttt\\.com\/use\/'\n             r'(?P<webhook_id>[A-Z0-9_-]+)'\n-            r'\/?(?P<events>([A-Z0-9_-]+\/?)+)?'\n+            r'((?P<events>(\/[A-Z0-9_-]+)+))?'\n             r'\/?(?P<params>\\?.+)?$', url, re.I)\n \n         if result:",
            "code_diff":"@@ -355,7 +355,7 @@ def parse_native_url(url):\n         result = re.match(\n             r'^https?:\/\/maker\\.ifttt\\.com\/use\/'\n             r'(?P<webhook_id>[A-Z0-9_-]+)'\n-            r'\/?(?P<events>([A-Z0-9_-]+\/?)+)?'\n+            r'((?P<events>(\/[A-Z0-9_-]+)+))?'\n             r'\/?(?P<params>\\?.+)?$', url, re.I)\n \n         if result:"
        },
        {
            "index":19,
            "vuln_id":"GHSA-58v3-j75h-xr49",
            "cwe_id":"{'CWE-284'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/seccomp\/libseccomp-golang\/commit\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in libseccomp-golang libseccomp-golang 0.9.0 and earlier incorrectly generates BPFs that OR multiple arguments rather than ANDing them. A process running under a restrictive seccomp filter that specified multiple syscall arguments could bypass intended access restrictions by specifying a single matching argument.",
            "published_date":"2021-05-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/seccomp\/libseccomp-golang",
            "commit_href":"https:\/\/github.com\/seccomp\/libseccomp-golang\/commit\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e",
            "commit_sha":"06e7a29f36a34b8cf419aeb87b979ee508e58f9e",
            "patch":"SINGLE",
            "chain_ord":"['06e7a29f36a34b8cf419aeb87b979ee508e58f9e']",
            "before_first_fix_commit":"{'fc0298087f328ac97a1fa781392de96b2ebb8aac'}",
            "last_fix_commit":"06e7a29f36a34b8cf419aeb87b979ee508e58f9e",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2017, 20:28:29",
            "message":"golang: Resolve bug with handling of multiple argument rules\n\nIn the upstream library, when added with a single API call,\nmultiple syscall argument rules should be matched with AND\nlogic - if all of them match, the rule matches.\n\nAt present, the Golang bindings apply OR logic to this case.\nThis commit resolves this and reverts to the behavior of the\nmain library.\n\nSigned-off-by: Matthew Heon <matthew.heon@gmail.com>",
            "author":"Matthew Heon",
            "comments":null,
            "stats":"{'additions': 37, 'deletions': 27, 'total': 64}",
            "files":"{'seccomp_internal.go': {'additions': 37, 'deletions': 27, 'changes': 64, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/seccomp\/libseccomp-golang\/raw\/06e7a29f36a34b8cf419aeb87b979ee508e58f9e\/seccomp_internal.go', 'patch': '@@ -120,23 +120,27 @@ unsigned int get_micro_version()\\n \\n typedef struct scmp_arg_cmp* scmp_cast_t;\\n \\n-\/\/ Wrapper to create an scmp_arg_cmp struct\\n-void*\\n-make_struct_arg_cmp(\\n-                    unsigned int arg,\\n-                    int compare,\\n-                    uint64_t a,\\n-                    uint64_t b\\n-                   )\\n+void* make_arg_cmp_array(unsigned int length)\\n {\\n-\\tstruct scmp_arg_cmp *s = malloc(sizeof(struct scmp_arg_cmp));\\n+        return calloc(length, sizeof(struct scmp_arg_cmp));\\n+}\\n \\n-\\ts->arg = arg;\\n-\\ts->op = compare;\\n-\\ts->datum_a = a;\\n-\\ts->datum_b = b;\\n+\/\/ Wrapper to add an scmp_arg_cmp struct to an existing arg_cmp array\\n+void add_struct_arg_cmp(\\n+                        struct scmp_arg_cmp* arr,\\n+                        unsigned int pos,\\n+                        unsigned int arg,\\n+                        int compare,\\n+                        uint64_t a,\\n+                        uint64_t b\\n+                       )\\n+{\\n+        arr[pos].arg = arg;\\n+        arr[pos].op = compare;\\n+        arr[pos].datum_a = a;\\n+        arr[pos].datum_b = b;\\n \\n-\\treturn s;\\n+        return;\\n }\\n *\/\\n import \"C\"\\n@@ -239,12 +243,9 @@ func (f *ScmpFilter) setFilterAttr(attr scmpFilterAttr, value C.uint32_t) error\\n \/\/ DOES NOT LOCK OR CHECK VALIDITY\\n \/\/ Assumes caller has already done this\\n \/\/ Wrapper for seccomp_rule_add_... functions\\n-func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, cond C.scmp_cast_t) error {\\n-\\tvar length C.uint\\n-\\tif cond != nil {\\n-\\t\\tlength = 1\\n-\\t} else {\\n-\\t\\tlength = 0\\n+func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, length C.uint, cond C.scmp_cast_t) error {\\n+\\tif length != 0 && cond == nil {\\n+\\t\\treturn fmt.Errorf(\"null conditions list, but length is nonzero\")\\n \\t}\\n \\n \\tvar retCode C.int\\n@@ -258,6 +259,8 @@ func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact b\\n \\t\\treturn fmt.Errorf(\"unrecognized syscall\")\\n \\t} else if syscall.Errno(-1*retCode) == syscall.EPERM {\\n \\t\\treturn fmt.Errorf(\"requested action matches default action of filter\")\\n+\\t} else if syscall.Errno(-1*retCode) == syscall.EINVAL {\\n+\\t\\treturn fmt.Errorf(\"two checks on same syscall argument\")\\n \\t} else if retCode != 0 {\\n \\t\\treturn syscall.Errno(-1 * retCode)\\n \\t}\\n@@ -275,7 +278,7 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\\n \\t}\\n \\n \\tif len(conds) == 0 {\\n-\\t\\tif err := f.addRuleWrapper(call, action, exact, nil); err != nil {\\n+\\t\\tif err := f.addRuleWrapper(call, action, exact, 0, nil); err != nil {\\n \\t\\t\\treturn err\\n \\t\\t}\\n \\t} else {\\n@@ -287,13 +290,20 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\\n \\t\\t\\t}\\n \\t\\t}\\n \\n-\\t\\tfor _, cond := range conds {\\n-\\t\\t\\tcmpStruct := C.make_struct_arg_cmp(C.uint(cond.Argument), cond.Op.toNative(), C.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\\n-\\t\\t\\tdefer C.free(cmpStruct)\\n+\\t\\targsArr := C.make_arg_cmp_array(C.uint(len(conds)))\\n+\\t\\tif argsArr == nil {\\n+\\t\\t\\treturn fmt.Errorf(\"error allocating memory for conditions\")\\n+\\t\\t}\\n+\\t\\tdefer C.free(argsArr)\\n+\\n+\\t\\tfor i, cond := range conds {\\n+\\t\\t\\tC.add_struct_arg_cmp(C.scmp_cast_t(argsArr), C.uint(i),\\n+\\t\\t\\t\\tC.uint(cond.Argument), cond.Op.toNative(),\\n+\\t\\t\\t\\tC.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\\n+\\t\\t}\\n \\n-\\t\\t\\tif err := f.addRuleWrapper(call, action, exact, C.scmp_cast_t(cmpStruct)); err != nil {\\n-\\t\\t\\t\\treturn err\\n-\\t\\t\\t}\\n+\\t\\tif err := f.addRuleWrapper(call, action, exact, C.uint(len(conds)), C.scmp_cast_t(argsArr)); err != nil {\\n+\\t\\t\\treturn err\\n \\t\\t}\\n \\t}'}}",
            "message_norm":"golang: resolve bug with handling of multiple argument rules\n\nin the upstream library, when added with a single api call,\nmultiple syscall argument rules should be matched with and\nlogic - if all of them match, the rule matches.\n\nat present, the golang bindings apply or logic to this case.\nthis commit resolves this and reverts to the behavior of the\nmain library.\n\nsigned-off-by: matthew heon <matthew.heon@gmail.com>",
            "language":"en",
            "entities":"[('bug', 'FLAW', ''), ('added', 'ACTION', ''), ('matthew.heon@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['seccomp_internal.go'])",
            "num_files":1.0,
            "patch_content":"From 06e7a29f36a34b8cf419aeb87b979ee508e58f9e Mon Sep 17 00:00:00 2001\nFrom: Matthew Heon <matthew.heon@gmail.com>\nDate: Wed, 19 Apr 2017 16:28:29 -0400\nSubject: [PATCH] golang: Resolve bug with handling of multiple argument rules\n\nIn the upstream library, when added with a single API call,\nmultiple syscall argument rules should be matched with AND\nlogic - if all of them match, the rule matches.\n\nAt present, the Golang bindings apply OR logic to this case.\nThis commit resolves this and reverts to the behavior of the\nmain library.\n\nSigned-off-by: Matthew Heon <matthew.heon@gmail.com>\n---\n seccomp_internal.go | 64 ++++++++++++++++++++++++++-------------------\n 1 file changed, 37 insertions(+), 27 deletions(-)\n\ndiff --git a\/seccomp_internal.go b\/seccomp_internal.go\nindex c9fd616..369f194 100644\n--- a\/seccomp_internal.go\n+++ b\/seccomp_internal.go\n@@ -120,23 +120,27 @@ unsigned int get_micro_version()\n \n typedef struct scmp_arg_cmp* scmp_cast_t;\n \n-\/\/ Wrapper to create an scmp_arg_cmp struct\n-void*\n-make_struct_arg_cmp(\n-                    unsigned int arg,\n-                    int compare,\n-                    uint64_t a,\n-                    uint64_t b\n-                   )\n+void* make_arg_cmp_array(unsigned int length)\n {\n-\tstruct scmp_arg_cmp *s = malloc(sizeof(struct scmp_arg_cmp));\n+        return calloc(length, sizeof(struct scmp_arg_cmp));\n+}\n \n-\ts->arg = arg;\n-\ts->op = compare;\n-\ts->datum_a = a;\n-\ts->datum_b = b;\n+\/\/ Wrapper to add an scmp_arg_cmp struct to an existing arg_cmp array\n+void add_struct_arg_cmp(\n+                        struct scmp_arg_cmp* arr,\n+                        unsigned int pos,\n+                        unsigned int arg,\n+                        int compare,\n+                        uint64_t a,\n+                        uint64_t b\n+                       )\n+{\n+        arr[pos].arg = arg;\n+        arr[pos].op = compare;\n+        arr[pos].datum_a = a;\n+        arr[pos].datum_b = b;\n \n-\treturn s;\n+        return;\n }\n *\/\n import \"C\"\n@@ -239,12 +243,9 @@ func (f *ScmpFilter) setFilterAttr(attr scmpFilterAttr, value C.uint32_t) error\n \/\/ DOES NOT LOCK OR CHECK VALIDITY\n \/\/ Assumes caller has already done this\n \/\/ Wrapper for seccomp_rule_add_... functions\n-func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, cond C.scmp_cast_t) error {\n-\tvar length C.uint\n-\tif cond != nil {\n-\t\tlength = 1\n-\t} else {\n-\t\tlength = 0\n+func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, length C.uint, cond C.scmp_cast_t) error {\n+\tif length != 0 && cond == nil {\n+\t\treturn fmt.Errorf(\"null conditions list, but length is nonzero\")\n \t}\n \n \tvar retCode C.int\n@@ -258,6 +259,8 @@ func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact b\n \t\treturn fmt.Errorf(\"unrecognized syscall\")\n \t} else if syscall.Errno(-1*retCode) == syscall.EPERM {\n \t\treturn fmt.Errorf(\"requested action matches default action of filter\")\n+\t} else if syscall.Errno(-1*retCode) == syscall.EINVAL {\n+\t\treturn fmt.Errorf(\"two checks on same syscall argument\")\n \t} else if retCode != 0 {\n \t\treturn syscall.Errno(-1 * retCode)\n \t}\n@@ -275,7 +278,7 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\n \t}\n \n \tif len(conds) == 0 {\n-\t\tif err := f.addRuleWrapper(call, action, exact, nil); err != nil {\n+\t\tif err := f.addRuleWrapper(call, action, exact, 0, nil); err != nil {\n \t\t\treturn err\n \t\t}\n \t} else {\n@@ -287,13 +290,20 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\n \t\t\t}\n \t\t}\n \n-\t\tfor _, cond := range conds {\n-\t\t\tcmpStruct := C.make_struct_arg_cmp(C.uint(cond.Argument), cond.Op.toNative(), C.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\n-\t\t\tdefer C.free(cmpStruct)\n+\t\targsArr := C.make_arg_cmp_array(C.uint(len(conds)))\n+\t\tif argsArr == nil {\n+\t\t\treturn fmt.Errorf(\"error allocating memory for conditions\")\n+\t\t}\n+\t\tdefer C.free(argsArr)\n+\n+\t\tfor i, cond := range conds {\n+\t\t\tC.add_struct_arg_cmp(C.scmp_cast_t(argsArr), C.uint(i),\n+\t\t\t\tC.uint(cond.Argument), cond.Op.toNative(),\n+\t\t\t\tC.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\n+\t\t}\n \n-\t\t\tif err := f.addRuleWrapper(call, action, exact, C.scmp_cast_t(cmpStruct)); err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n+\t\tif err := f.addRuleWrapper(call, action, exact, C.uint(len(conds)), C.scmp_cast_t(argsArr)); err != nil {\n+\t\t\treturn err\n \t\t}\n \t}",
            "code_diff":"@@ -120,23 +120,27 @@ unsigned int get_micro_version()\n \n typedef struct scmp_arg_cmp* scmp_cast_t;\n \n-\/\/ Wrapper to create an scmp_arg_cmp struct\n-void*\n-make_struct_arg_cmp(\n-                    unsigned int arg,\n-                    int compare,\n-                    uint64_t a,\n-                    uint64_t b\n-                   )\n+void* make_arg_cmp_array(unsigned int length)\n {\n-\tstruct scmp_arg_cmp *s = malloc(sizeof(struct scmp_arg_cmp));\n+        return calloc(length, sizeof(struct scmp_arg_cmp));\n+}\n \n-\ts->arg = arg;\n-\ts->op = compare;\n-\ts->datum_a = a;\n-\ts->datum_b = b;\n+\/\/ Wrapper to add an scmp_arg_cmp struct to an existing arg_cmp array\n+void add_struct_arg_cmp(\n+                        struct scmp_arg_cmp* arr,\n+                        unsigned int pos,\n+                        unsigned int arg,\n+                        int compare,\n+                        uint64_t a,\n+                        uint64_t b\n+                       )\n+{\n+        arr[pos].arg = arg;\n+        arr[pos].op = compare;\n+        arr[pos].datum_a = a;\n+        arr[pos].datum_b = b;\n \n-\treturn s;\n+        return;\n }\n *\/\n import \"C\"\n@@ -239,12 +243,9 @@ func (f *ScmpFilter) setFilterAttr(attr scmpFilterAttr, value C.uint32_t) error\n \/\/ DOES NOT LOCK OR CHECK VALIDITY\n \/\/ Assumes caller has already done this\n \/\/ Wrapper for seccomp_rule_add_... functions\n-func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, cond C.scmp_cast_t) error {\n-\tvar length C.uint\n-\tif cond != nil {\n-\t\tlength = 1\n-\t} else {\n-\t\tlength = 0\n+func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact bool, length C.uint, cond C.scmp_cast_t) error {\n+\tif length != 0 && cond == nil {\n+\t\treturn fmt.Errorf(\"null conditions list, but length is nonzero\")\n \t}\n \n \tvar retCode C.int\n@@ -258,6 +259,8 @@ func (f *ScmpFilter) addRuleWrapper(call ScmpSyscall, action ScmpAction, exact b\n \t\treturn fmt.Errorf(\"unrecognized syscall\")\n \t} else if syscall.Errno(-1*retCode) == syscall.EPERM {\n \t\treturn fmt.Errorf(\"requested action matches default action of filter\")\n+\t} else if syscall.Errno(-1*retCode) == syscall.EINVAL {\n+\t\treturn fmt.Errorf(\"two checks on same syscall argument\")\n \t} else if retCode != 0 {\n \t\treturn syscall.Errno(-1 * retCode)\n \t}\n@@ -275,7 +278,7 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\n \t}\n \n \tif len(conds) == 0 {\n-\t\tif err := f.addRuleWrapper(call, action, exact, nil); err != nil {\n+\t\tif err := f.addRuleWrapper(call, action, exact, 0, nil); err != nil {\n \t\t\treturn err\n \t\t}\n \t} else {\n@@ -287,13 +290,20 @@ func (f *ScmpFilter) addRuleGeneric(call ScmpSyscall, action ScmpAction, exact b\n \t\t\t}\n \t\t}\n \n-\t\tfor _, cond := range conds {\n-\t\t\tcmpStruct := C.make_struct_arg_cmp(C.uint(cond.Argument), cond.Op.toNative(), C.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\n-\t\t\tdefer C.free(cmpStruct)\n+\t\targsArr := C.make_arg_cmp_array(C.uint(len(conds)))\n+\t\tif argsArr == nil {\n+\t\t\treturn fmt.Errorf(\"error allocating memory for conditions\")\n+\t\t}\n+\t\tdefer C.free(argsArr)\n+\n+\t\tfor i, cond := range conds {\n+\t\t\tC.add_struct_arg_cmp(C.scmp_cast_t(argsArr), C.uint(i),\n+\t\t\t\tC.uint(cond.Argument), cond.Op.toNative(),\n+\t\t\t\tC.uint64_t(cond.Operand1), C.uint64_t(cond.Operand2))\n+\t\t}\n \n-\t\t\tif err := f.addRuleWrapper(call, action, exact, C.scmp_cast_t(cmpStruct)); err != nil {\n-\t\t\t\treturn err\n-\t\t\t}\n+\t\tif err := f.addRuleWrapper(call, action, exact, C.uint(len(conds)), C.scmp_cast_t(argsArr)); err != nil {\n+\t\t\treturn err\n \t\t}\n \t}"
        },
        {
            "index":331,
            "vuln_id":"GHSA-fc42-h7q4-qp8h",
            "cwe_id":"{'CWE-77'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/ssnau\/killport\/commit\/bec8e371f170a12e11cd222ffc7a6e1ae9942638'}",
            "dataset":"osv",
            "summary":"Command Injection in killport This affects the package killport before 1.0.2. If (attacker-controlled) user input is given, it is possible for an attacker to execute arbitrary commands. This is due to use of the child_process exec function without input sanitization. Running this PoC will cause the command touch success to be executed, leading to the creation of a file called success.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/ssnau\/killport",
            "commit_href":"https:\/\/github.com\/ssnau\/killport\/commit\/bec8e371f170a12e11cd222ffc7a6e1ae9942638",
            "commit_sha":"bec8e371f170a12e11cd222ffc7a6e1ae9942638",
            "patch":"SINGLE",
            "chain_ord":"['bec8e371f170a12e11cd222ffc7a6e1ae9942638']",
            "before_first_fix_commit":"{'5268f23ea8f152e47182b263d8f7ef20c12a9f28'}",
            "last_fix_commit":"bec8e371f170a12e11cd222ffc7a6e1ae9942638",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/17\/2021, 17:26:35",
            "message":"fix a vulnerability issue if a provided port is not a number",
            "author":"ssnau",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'index.js': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ssnau\/killport\/raw\/bec8e371f170a12e11cd222ffc7a6e1ae9942638\/index.js', 'patch': \"@@ -5,6 +5,7 @@ var notEmpty = function(x) {return x};\\n \\n module.exports = function killport(port) {\\n   return (new Promise(function(resolve, reject) {\\n+    if (!\/^\\\\d+$\/.test(port)) throw new Error('port must be a number.');\\n     var cmd = 'lsof -i:' + port; \\n     cp.exec(cmd, function(err, stdout, stderr){\\n       \/\/ do not check `err`, if no process found\"}}",
            "message_norm":"fix a vulnerability issue if a provided port is not a number",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From bec8e371f170a12e11cd222ffc7a6e1ae9942638 Mon Sep 17 00:00:00 2001\nFrom: ssnau <korige@gmail.com>\nDate: Thu, 18 Mar 2021 01:26:35 +0800\nSubject: [PATCH] fix a vulnerability issue if a provided port is not a number\n\n---\n index.js | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/index.js b\/index.js\nindex e5f2d6d..8043f1f 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -5,6 +5,7 @@ var notEmpty = function(x) {return x};\n \n module.exports = function killport(port) {\n   return (new Promise(function(resolve, reject) {\n+    if (!\/^\\d+$\/.test(port)) throw new Error('port must be a number.');\n     var cmd = 'lsof -i:' + port; \n     cp.exec(cmd, function(err, stdout, stderr){\n       \/\/ do not check `err`, if no process found",
            "code_diff":"@@ -5,6 +5,7 @@ var notEmpty = function(x) {return x};\n \n module.exports = function killport(port) {\n   return (new Promise(function(resolve, reject) {\n+    if (!\/^\\d+$\/.test(port)) throw new Error('port must be a number.');\n     var cmd = 'lsof -i:' + port; \n     cp.exec(cmd, function(err, stdout, stderr){\n       \/\/ do not check `err`, if no process found"
        },
        {
            "index":745,
            "vuln_id":"GHSA-44cw-p2hm-gpf6",
            "cwe_id":"{'CWE-297'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/opencast\/opencast\/commit\/4225bf90af74557deaf8fb6b80b0705c9621acfc'}",
            "dataset":"osv",
            "summary":"Disabled Hostname Verification in Opencast Opencast before version 8.9 and 7.9 disables HTTPS hostname verification of its HTTP client used for a large portion of Opencast's HTTP requests.\n\nHostname verification is an important part when using HTTPS to ensure that the presented certificate is valid for the host. Disabling it can allow for man-in-the-middle attacks.\n\n### Patches\n\nThis problem is fixed in Opencast 7.9 and Opencast 8.9\n\n### Self-Signed Certificates\n\nPlease be aware that fixing the problem means that Opencast will not simply accept any self-signed certificates any longer without properly importing them. If you need those, please make sure to import them into the Java key store. Better yet, get a valid certificate e.g. from [Let's Encrypt](https:\/\/letsencrypt.org).",
            "published_date":"2020-12-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencast\/opencast",
            "commit_href":"https:\/\/github.com\/opencast\/opencast\/commit\/4225bf90af74557deaf8fb6b80b0705c9621acfc",
            "commit_sha":"4225bf90af74557deaf8fb6b80b0705c9621acfc",
            "patch":"SINGLE",
            "chain_ord":"['4225bf90af74557deaf8fb6b80b0705c9621acfc']",
            "before_first_fix_commit":"{'4b905437e90bd19700a6a6688f227f9efb20e153'}",
            "last_fix_commit":"4225bf90af74557deaf8fb6b80b0705c9621acfc",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/17\/2020, 17:03:36",
            "message":"Re-Enable Hostname Verification\n\nThis patch is a minimal change to re-enable HTTPS hostname verification\nof Opencast's HTTP client used for a large portion its HTTP requests.\n\nHostname verification is an important part when using HTTPS to ensure\nthat the presented certificate is valid for the host. Disabling it can\nallow for man-in-the-middle attacks.",
            "author":"Lars Kiesow",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 136, 'total': 137}",
            "files":"{'modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/http\/impl\/HttpClientImpl.java': {'additions': 1, 'deletions': 136, 'changes': 137, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencast\/opencast\/raw\/4225bf90af74557deaf8fb6b80b0705c9621acfc\/modules%2Fkernel%2Fsrc%2Fmain%2Fjava%2Forg%2Fopencastproject%2Fkernel%2Fhttp%2Fimpl%2FHttpClientImpl.java', 'patch': '@@ -27,28 +27,12 @@\\n import org.apache.http.client.CredentialsProvider;\\n import org.apache.http.client.methods.HttpUriRequest;\\n import org.apache.http.conn.ClientConnectionManager;\\n-import org.apache.http.conn.scheme.Scheme;\\n-import org.apache.http.conn.scheme.SchemeRegistry;\\n-import org.apache.http.conn.ssl.SSLSocketFactory;\\n-import org.apache.http.conn.ssl.X509HostnameVerifier;\\n import org.apache.http.impl.client.DefaultHttpClient;\\n import org.apache.http.params.HttpParams;\\n import org.slf4j.Logger;\\n import org.slf4j.LoggerFactory;\\n \\n import java.io.IOException;\\n-import java.security.KeyManagementException;\\n-import java.security.NoSuchAlgorithmException;\\n-import java.security.SecureRandom;\\n-import java.security.cert.CertificateException;\\n-import java.security.cert.X509Certificate;\\n-\\n-import javax.net.ssl.SSLContext;\\n-import javax.net.ssl.SSLException;\\n-import javax.net.ssl.SSLSession;\\n-import javax.net.ssl.SSLSocket;\\n-import javax.net.ssl.TrustManager;\\n-import javax.net.ssl.X509TrustManager;\\n \\n \/** Implementation of HttpClient that makes http requests. *\/\\n public class HttpClientImpl implements HttpClient {\\n@@ -57,7 +41,7 @@ public class HttpClientImpl implements HttpClient {\\n   private static final Logger logger = LoggerFactory.getLogger(HttpClientImpl.class);\\n \\n   \/** client used for all http requests. *\/\\n-  private DefaultHttpClient defaultHttpClient = makeHttpClient();\\n+  private DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\\n \\n   \/** See org.opencastproject.kernel.http.api.HttpClient *\/\\n   @Override\\n@@ -83,123 +67,4 @@ public ClientConnectionManager getConnectionManager() {\\n     return defaultHttpClient.getConnectionManager();\\n   }\\n \\n-  \/**\\n-   * Creates a new client that can deal with all kinds of oddities with regards to http\/https connections.\\n-   *\\n-   * @return the client\\n-   *\/\\n-  private DefaultHttpClient makeHttpClient() {\\n-\\n-    DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\\n-    try {\\n-      logger.debug(\"Installing forgiving hostname verifier and trust managers\");\\n-      X509TrustManager trustManager = createTrustManager();\\n-      X509HostnameVerifier hostNameVerifier = createHostNameVerifier();\\n-      SSLContext sslContext = SSLContext.getInstance(\"TLS\");\\n-      sslContext.init(null, new TrustManager[] { trustManager }, new SecureRandom());\\n-      SSLSocketFactory ssf = new SSLSocketFactory(sslContext, hostNameVerifier);\\n-      ClientConnectionManager ccm = defaultHttpClient.getConnectionManager();\\n-      SchemeRegistry sr = ccm.getSchemeRegistry();\\n-      sr.register(new Scheme(\"https\", 443, ssf));\\n-    } catch (NoSuchAlgorithmException e) {\\n-      logger.error(\"Error creating context to handle TLS connections: {}\", e.getMessage());\\n-    } catch (KeyManagementException e) {\\n-      logger.error(\"Error creating context to handle TLS connections: {}\", e.getMessage());\\n-    }\\n-\\n-    return defaultHttpClient;\\n-  }\\n-\\n-  \/**\\n-   * Returns a new trust manager which will be in charge of checking the SSL certificates that are being presented by\\n-   * SSL enabled hosts.\\n-   *\\n-   * @return the trust manager\\n-   *\/\\n-  private X509TrustManager createTrustManager() {\\n-    X509TrustManager trustManager = new X509TrustManager() {\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see javax.net.ssl.X509TrustManager#checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)\\n-       *\/\\n-      public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException {\\n-        logger.trace(\"Skipping trust check on client certificate {}\", string);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see javax.net.ssl.X509TrustManager#checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)\\n-       *\/\\n-      public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException {\\n-        logger.trace(\"Skipping trust check on server certificate {}\", string);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see javax.net.ssl.X509TrustManager#getAcceptedIssuers()\\n-       *\/\\n-      public X509Certificate[] getAcceptedIssuers() {\\n-        logger.trace(\"Returning empty list of accepted issuers\");\\n-        return null;\\n-      }\\n-\\n-    };\\n-\\n-    return trustManager;\\n-  }\\n-\\n-  \/**\\n-   * Creates a host name verifier that will make sure the SSL host\\'s name matches the name in the SSL certificate.\\n-   *\\n-   * @return the host name verifier\\n-   *\/\\n-  private X509HostnameVerifier createHostNameVerifier() {\\n-    X509HostnameVerifier verifier = new X509HostnameVerifier() {\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSocket)\\n-       *\/\\n-      public void verify(String host, SSLSocket ssl) throws IOException {\\n-        logger.trace(\"Skipping SSL host name check on {}\", host);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, java.security.cert.X509Certificate)\\n-       *\/\\n-      public void verify(String host, X509Certificate xc) throws SSLException {\\n-        logger.trace(\"Skipping X509 certificate host name check on {}\", host);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, java.lang.String[],\\n-       *      java.lang.String[])\\n-       *\/\\n-      public void verify(String host, String[] cns, String[] subjectAlts) throws SSLException {\\n-        logger.trace(\"Skipping DNS host name check on {}\", host);\\n-      }\\n-\\n-      \/**\\n-       * {@InheritDoc}\\n-       *\\n-       * @see javax.net.ssl.HostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSession)\\n-       *\/\\n-      public boolean verify(String host, SSLSession ssl) {\\n-        logger.trace(\"Skipping SSL session host name check on {}\", host);\\n-        return true;\\n-      }\\n-    };\\n-\\n-    return verifier;\\n-  }\\n-\\n }'}}",
            "message_norm":"re-enable hostname verification\n\nthis patch is a minimal change to re-enable https hostname verification\nof opencast's http client used for a large portion its http requests.\n\nhostname verification is an important part when using https to ensure\nthat the presented certificate is valid for the host. disabling it can\nallow for man-in-the-middle attacks.",
            "language":"en",
            "entities":"[('hostname', 'SECWORD', ''), ('hostname', 'SECWORD', ''), ('hostname', 'SECWORD', ''), ('ensure', 'ACTION', ''), ('certificate', 'SECWORD', ''), ('man-in-the-middle', 'SECWORD', ''), ('attacks', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/http\/impl\/HttpClientImpl.java'])",
            "num_files":1.0,
            "patch_content":"From 4225bf90af74557deaf8fb6b80b0705c9621acfc Mon Sep 17 00:00:00 2001\nFrom: Lars Kiesow <lkiesow@uos.de>\nDate: Tue, 17 Nov 2020 18:03:36 +0100\nSubject: [PATCH] Re-Enable Hostname Verification\n\nThis patch is a minimal change to re-enable HTTPS hostname verification\nof Opencast's HTTP client used for a large portion its HTTP requests.\n\nHostname verification is an important part when using HTTPS to ensure\nthat the presented certificate is valid for the host. Disabling it can\nallow for man-in-the-middle attacks.\n---\n ...\/kernel\/http\/impl\/HttpClientImpl.java      | 137 +-----------------\n 1 file changed, 1 insertion(+), 136 deletions(-)\n\ndiff --git a\/modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/http\/impl\/HttpClientImpl.java b\/modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/http\/impl\/HttpClientImpl.java\nindex 213ead25023..9e48ba99553 100644\n--- a\/modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/http\/impl\/HttpClientImpl.java\n+++ b\/modules\/kernel\/src\/main\/java\/org\/opencastproject\/kernel\/http\/impl\/HttpClientImpl.java\n@@ -27,28 +27,12 @@\n import org.apache.http.client.CredentialsProvider;\n import org.apache.http.client.methods.HttpUriRequest;\n import org.apache.http.conn.ClientConnectionManager;\n-import org.apache.http.conn.scheme.Scheme;\n-import org.apache.http.conn.scheme.SchemeRegistry;\n-import org.apache.http.conn.ssl.SSLSocketFactory;\n-import org.apache.http.conn.ssl.X509HostnameVerifier;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.http.params.HttpParams;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n-import java.security.KeyManagementException;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.SecureRandom;\n-import java.security.cert.CertificateException;\n-import java.security.cert.X509Certificate;\n-\n-import javax.net.ssl.SSLContext;\n-import javax.net.ssl.SSLException;\n-import javax.net.ssl.SSLSession;\n-import javax.net.ssl.SSLSocket;\n-import javax.net.ssl.TrustManager;\n-import javax.net.ssl.X509TrustManager;\n \n \/** Implementation of HttpClient that makes http requests. *\/\n public class HttpClientImpl implements HttpClient {\n@@ -57,7 +41,7 @@ public class HttpClientImpl implements HttpClient {\n   private static final Logger logger = LoggerFactory.getLogger(HttpClientImpl.class);\n \n   \/** client used for all http requests. *\/\n-  private DefaultHttpClient defaultHttpClient = makeHttpClient();\n+  private DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\n \n   \/** See org.opencastproject.kernel.http.api.HttpClient *\/\n   @Override\n@@ -83,123 +67,4 @@ public ClientConnectionManager getConnectionManager() {\n     return defaultHttpClient.getConnectionManager();\n   }\n \n-  \/**\n-   * Creates a new client that can deal with all kinds of oddities with regards to http\/https connections.\n-   *\n-   * @return the client\n-   *\/\n-  private DefaultHttpClient makeHttpClient() {\n-\n-    DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\n-    try {\n-      logger.debug(\"Installing forgiving hostname verifier and trust managers\");\n-      X509TrustManager trustManager = createTrustManager();\n-      X509HostnameVerifier hostNameVerifier = createHostNameVerifier();\n-      SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n-      sslContext.init(null, new TrustManager[] { trustManager }, new SecureRandom());\n-      SSLSocketFactory ssf = new SSLSocketFactory(sslContext, hostNameVerifier);\n-      ClientConnectionManager ccm = defaultHttpClient.getConnectionManager();\n-      SchemeRegistry sr = ccm.getSchemeRegistry();\n-      sr.register(new Scheme(\"https\", 443, ssf));\n-    } catch (NoSuchAlgorithmException e) {\n-      logger.error(\"Error creating context to handle TLS connections: {}\", e.getMessage());\n-    } catch (KeyManagementException e) {\n-      logger.error(\"Error creating context to handle TLS connections: {}\", e.getMessage());\n-    }\n-\n-    return defaultHttpClient;\n-  }\n-\n-  \/**\n-   * Returns a new trust manager which will be in charge of checking the SSL certificates that are being presented by\n-   * SSL enabled hosts.\n-   *\n-   * @return the trust manager\n-   *\/\n-  private X509TrustManager createTrustManager() {\n-    X509TrustManager trustManager = new X509TrustManager() {\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see javax.net.ssl.X509TrustManager#checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)\n-       *\/\n-      public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException {\n-        logger.trace(\"Skipping trust check on client certificate {}\", string);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see javax.net.ssl.X509TrustManager#checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)\n-       *\/\n-      public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException {\n-        logger.trace(\"Skipping trust check on server certificate {}\", string);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see javax.net.ssl.X509TrustManager#getAcceptedIssuers()\n-       *\/\n-      public X509Certificate[] getAcceptedIssuers() {\n-        logger.trace(\"Returning empty list of accepted issuers\");\n-        return null;\n-      }\n-\n-    };\n-\n-    return trustManager;\n-  }\n-\n-  \/**\n-   * Creates a host name verifier that will make sure the SSL host's name matches the name in the SSL certificate.\n-   *\n-   * @return the host name verifier\n-   *\/\n-  private X509HostnameVerifier createHostNameVerifier() {\n-    X509HostnameVerifier verifier = new X509HostnameVerifier() {\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSocket)\n-       *\/\n-      public void verify(String host, SSLSocket ssl) throws IOException {\n-        logger.trace(\"Skipping SSL host name check on {}\", host);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, java.security.cert.X509Certificate)\n-       *\/\n-      public void verify(String host, X509Certificate xc) throws SSLException {\n-        logger.trace(\"Skipping X509 certificate host name check on {}\", host);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, java.lang.String[],\n-       *      java.lang.String[])\n-       *\/\n-      public void verify(String host, String[] cns, String[] subjectAlts) throws SSLException {\n-        logger.trace(\"Skipping DNS host name check on {}\", host);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see javax.net.ssl.HostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSession)\n-       *\/\n-      public boolean verify(String host, SSLSession ssl) {\n-        logger.trace(\"Skipping SSL session host name check on {}\", host);\n-        return true;\n-      }\n-    };\n-\n-    return verifier;\n-  }\n-\n }",
            "code_diff":"@@ -27,28 +27,12 @@\n import org.apache.http.client.CredentialsProvider;\n import org.apache.http.client.methods.HttpUriRequest;\n import org.apache.http.conn.ClientConnectionManager;\n-import org.apache.http.conn.scheme.Scheme;\n-import org.apache.http.conn.scheme.SchemeRegistry;\n-import org.apache.http.conn.ssl.SSLSocketFactory;\n-import org.apache.http.conn.ssl.X509HostnameVerifier;\n import org.apache.http.impl.client.DefaultHttpClient;\n import org.apache.http.params.HttpParams;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import java.io.IOException;\n-import java.security.KeyManagementException;\n-import java.security.NoSuchAlgorithmException;\n-import java.security.SecureRandom;\n-import java.security.cert.CertificateException;\n-import java.security.cert.X509Certificate;\n-\n-import javax.net.ssl.SSLContext;\n-import javax.net.ssl.SSLException;\n-import javax.net.ssl.SSLSession;\n-import javax.net.ssl.SSLSocket;\n-import javax.net.ssl.TrustManager;\n-import javax.net.ssl.X509TrustManager;\n \n \/** Implementation of HttpClient that makes http requests. *\/\n public class HttpClientImpl implements HttpClient {\n@@ -57,7 +41,7 @@ public class HttpClientImpl implements HttpClient {\n   private static final Logger logger = LoggerFactory.getLogger(HttpClientImpl.class);\n \n   \/** client used for all http requests. *\/\n-  private DefaultHttpClient defaultHttpClient = makeHttpClient();\n+  private DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\n \n   \/** See org.opencastproject.kernel.http.api.HttpClient *\/\n   @Override\n@@ -83,123 +67,4 @@ public ClientConnectionManager getConnectionManager() {\n     return defaultHttpClient.getConnectionManager();\n   }\n \n-  \/**\n-   * Creates a new client that can deal with all kinds of oddities with regards to http\/https connections.\n-   *\n-   * @return the client\n-   *\/\n-  private DefaultHttpClient makeHttpClient() {\n-\n-    DefaultHttpClient defaultHttpClient = new DefaultHttpClient();\n-    try {\n-      logger.debug(\"Installing forgiving hostname verifier and trust managers\");\n-      X509TrustManager trustManager = createTrustManager();\n-      X509HostnameVerifier hostNameVerifier = createHostNameVerifier();\n-      SSLContext sslContext = SSLContext.getInstance(\"TLS\");\n-      sslContext.init(null, new TrustManager[] { trustManager }, new SecureRandom());\n-      SSLSocketFactory ssf = new SSLSocketFactory(sslContext, hostNameVerifier);\n-      ClientConnectionManager ccm = defaultHttpClient.getConnectionManager();\n-      SchemeRegistry sr = ccm.getSchemeRegistry();\n-      sr.register(new Scheme(\"https\", 443, ssf));\n-    } catch (NoSuchAlgorithmException e) {\n-      logger.error(\"Error creating context to handle TLS connections: {}\", e.getMessage());\n-    } catch (KeyManagementException e) {\n-      logger.error(\"Error creating context to handle TLS connections: {}\", e.getMessage());\n-    }\n-\n-    return defaultHttpClient;\n-  }\n-\n-  \/**\n-   * Returns a new trust manager which will be in charge of checking the SSL certificates that are being presented by\n-   * SSL enabled hosts.\n-   *\n-   * @return the trust manager\n-   *\/\n-  private X509TrustManager createTrustManager() {\n-    X509TrustManager trustManager = new X509TrustManager() {\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see javax.net.ssl.X509TrustManager#checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)\n-       *\/\n-      public void checkClientTrusted(X509Certificate[] xcs, String string) throws CertificateException {\n-        logger.trace(\"Skipping trust check on client certificate {}\", string);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see javax.net.ssl.X509TrustManager#checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)\n-       *\/\n-      public void checkServerTrusted(X509Certificate[] xcs, String string) throws CertificateException {\n-        logger.trace(\"Skipping trust check on server certificate {}\", string);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see javax.net.ssl.X509TrustManager#getAcceptedIssuers()\n-       *\/\n-      public X509Certificate[] getAcceptedIssuers() {\n-        logger.trace(\"Returning empty list of accepted issuers\");\n-        return null;\n-      }\n-\n-    };\n-\n-    return trustManager;\n-  }\n-\n-  \/**\n-   * Creates a host name verifier that will make sure the SSL host's name matches the name in the SSL certificate.\n-   *\n-   * @return the host name verifier\n-   *\/\n-  private X509HostnameVerifier createHostNameVerifier() {\n-    X509HostnameVerifier verifier = new X509HostnameVerifier() {\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSocket)\n-       *\/\n-      public void verify(String host, SSLSocket ssl) throws IOException {\n-        logger.trace(\"Skipping SSL host name check on {}\", host);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, java.security.cert.X509Certificate)\n-       *\/\n-      public void verify(String host, X509Certificate xc) throws SSLException {\n-        logger.trace(\"Skipping X509 certificate host name check on {}\", host);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see org.apache.http.conn.ssl.X509HostnameVerifier#verify(java.lang.String, java.lang.String[],\n-       *      java.lang.String[])\n-       *\/\n-      public void verify(String host, String[] cns, String[] subjectAlts) throws SSLException {\n-        logger.trace(\"Skipping DNS host name check on {}\", host);\n-      }\n-\n-      \/**\n-       * {@InheritDoc}\n-       *\n-       * @see javax.net.ssl.HostnameVerifier#verify(java.lang.String, javax.net.ssl.SSLSession)\n-       *\/\n-      public boolean verify(String host, SSLSession ssl) {\n-        logger.trace(\"Skipping SSL session host name check on {}\", host);\n-        return true;\n-      }\n-    };\n-\n-    return verifier;\n-  }\n-\n }"
        },
        {
            "index":525,
            "vuln_id":"GHSA-v3jv-wrf4-5845",
            "cwe_id":"{'CWE-59'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/npm\/npm\/commit\/f4d31693e73a963574a88000580db1a716fe66f1'}",
            "dataset":"osv",
            "summary":"Local Privilege Escalation in npm Affected versions of `npm` use predictable temporary file names during archive unpacking. If an attacker can create a symbolic link at the location of one of these temporary file names, the attacker can arbitrarily write to any file that the user which owns the `npm` process has permission to write to, potentially resulting in local privilege escalation.\n\n\n\n## Recommendation\n\nUpdate to version 1.3.3 or later.",
            "published_date":"2020-09-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/npm\/npm",
            "commit_href":"https:\/\/github.com\/npm\/npm\/commit\/f4d31693e73a963574a88000580db1a716fe66f1",
            "commit_sha":"f4d31693e73a963574a88000580db1a716fe66f1",
            "patch":"SINGLE",
            "chain_ord":"['f4d31693e73a963574a88000580db1a716fe66f1']",
            "before_first_fix_commit":"{'e3007309aa93e94b69b5094fa1b11070b2ef993c'}",
            "last_fix_commit":"f4d31693e73a963574a88000580db1a716fe66f1",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2013, 15:59:28",
            "message":"Put 6 bytes of random in tmp folder name\n\nCloses #3635",
            "author":"isaacs",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 1, 'total': 7}",
            "files":"{'lib\/npm.js': {'additions': 6, 'deletions': 1, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/npm\/raw\/f4d31693e73a963574a88000580db1a716fe66f1\/lib%2Fnpm.js', 'patch': '@@ -477,9 +477,14 @@ Object.defineProperty(npm, \"cache\",\\n   })\\n \\n var tmpFolder\\n+var crypto = require(\"crypto\")\\n+var rand = crypto.randomBytes(6)\\n+                 .toString(\"base64\")\\n+                 .replace(\/\\\\\/\/g, \\'_\\')\\n+                 .replace(\/\\\\+\/, \\'-\\')\\n Object.defineProperty(npm, \"tmp\",\\n   { get : function () {\\n-      if (!tmpFolder) tmpFolder = \"npm-\" + process.pid\\n+      if (!tmpFolder) tmpFolder = \"npm-\" + process.pid + \"-\" + rand\\n       return path.resolve(npm.config.get(\"tmp\"), tmpFolder)\\n     }\\n   , enumerable : true'}}",
            "message_norm":"put 6 bytes of random in tmp folder name\n\ncloses #3635",
            "language":"en",
            "entities":"[('#3635', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/npm.js'])",
            "num_files":1.0,
            "patch_content":"From f4d31693e73a963574a88000580db1a716fe66f1 Mon Sep 17 00:00:00 2001\nFrom: isaacs <i@izs.me>\nDate: Wed, 10 Jul 2013 08:59:28 -0700\nSubject: [PATCH] Put 6 bytes of random in tmp folder name\n\nCloses #3635\n---\n lib\/npm.js | 7 ++++++-\n 1 file changed, 6 insertions(+), 1 deletion(-)\n\ndiff --git a\/lib\/npm.js b\/lib\/npm.js\nindex dffe35625b8..ea9759265d1 100644\n--- a\/lib\/npm.js\n+++ b\/lib\/npm.js\n@@ -477,9 +477,14 @@ Object.defineProperty(npm, \"cache\",\n   })\n \n var tmpFolder\n+var crypto = require(\"crypto\")\n+var rand = crypto.randomBytes(6)\n+                 .toString(\"base64\")\n+                 .replace(\/\\\/\/g, '_')\n+                 .replace(\/\\+\/, '-')\n Object.defineProperty(npm, \"tmp\",\n   { get : function () {\n-      if (!tmpFolder) tmpFolder = \"npm-\" + process.pid\n+      if (!tmpFolder) tmpFolder = \"npm-\" + process.pid + \"-\" + rand\n       return path.resolve(npm.config.get(\"tmp\"), tmpFolder)\n     }\n   , enumerable : true",
            "code_diff":"@@ -477,9 +477,14 @@ Object.defineProperty(npm, \"cache\",\n   })\n \n var tmpFolder\n+var crypto = require(\"crypto\")\n+var rand = crypto.randomBytes(6)\n+                 .toString(\"base64\")\n+                 .replace(\/\\\/\/g, '_')\n+                 .replace(\/\\+\/, '-')\n Object.defineProperty(npm, \"tmp\",\n   { get : function () {\n-      if (!tmpFolder) tmpFolder = \"npm-\" + process.pid\n+      if (!tmpFolder) tmpFolder = \"npm-\" + process.pid + \"-\" + rand\n       return path.resolve(npm.config.get(\"tmp\"), tmpFolder)\n     }\n   , enumerable : true"
        },
        {
            "index":401,
            "vuln_id":"GHSA-vh5c-jqfg-mhrh",
            "cwe_id":"{'CWE-352'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/69548c0320cbd772540cf4668743e69f879812cf', 'https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/f0440dfcbba705e03f7565cd88893dde57ca3fa8'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery in xwiki-platform ### Impact\nIt's possible to know if a user has or not an account in a wiki related to an email address, and which username(s) is actually tight to that email by forging a request to the Forgot username page. Note that since this page does not have a CSRF check it's quite easy to perform a lot of those requests.\n\n### Patches\nThis issue has been patched in XWiki 12.10.5 and 13.2RC1. Two different patches are provided:\n  - a first one to fix the CSRF problem\n  - a more complex one that now relies on sending an email for the Forgot username process.\n\n### Workarounds\nIt's possible to fix the problem without uprading by editing the ForgotUsername page in version below 13.x, to use the following code: https:\/\/github.com\/xwiki\/xwiki-platform\/blob\/69548c0320cbd772540cf4668743e69f879812cf\/xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml#L39-L123\n\nIn version after 13.x it's also possible to edit manually the forgotusername.vm file, but it's really encouraged to upgrade the version here.\n\n### References\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-18384\n  * https:\/\/jira.xwiki.org\/browse\/XWIKI-18408\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Jira XWiki](https:\/\/jira.xwiki.org)\n* Email us at [security ML](mailto:security@xwiki.org)",
            "published_date":"2022-02-10",
            "chain_len":2,
            "project":"https:\/\/github.com\/xwiki\/xwiki-platform",
            "commit_href":"https:\/\/github.com\/xwiki\/xwiki-platform\/commit\/69548c0320cbd772540cf4668743e69f879812cf",
            "commit_sha":"69548c0320cbd772540cf4668743e69f879812cf",
            "patch":"MULTI",
            "chain_ord":"['f0440dfcbba705e03f7565cd88893dde57ca3fa8', '69548c0320cbd772540cf4668743e69f879812cf']",
            "before_first_fix_commit":"{'dfa1479abcdbc3a3b906fdab62841c22f5c13e38'}",
            "last_fix_commit":"69548c0320cbd772540cf4668743e69f879812cf",
            "chain_ord_pos":2.0,
            "commit_datetime":"03\/09\/2021, 12:23:38",
            "message":"XWIKI-18408: Wrong check in forgot username",
            "author":"Simon Urli",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 2, 'total': 11}",
            "files":"{'xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml': {'additions': 9, 'deletions': 2, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/xwiki\/xwiki-platform\/raw\/69548c0320cbd772540cf4668743e69f879812cf\/xwiki-platform-core%2Fxwiki-platform-administration%2Fxwiki-platform-administration-ui%2Fsrc%2Fmain%2Fresources%2FXWiki%2FForgotUsername.xml', 'patch': '@@ -38,12 +38,19 @@\\n   <hidden>true<\/hidden>\\n   <content>{{velocity}}\\n #set($email = \"$!request.get(\\'e\\')\")\\n-#if($email == \\'\\')\\n+#if($email == \\'\\' || !$services.csrf.isTokenValid($request.form_token))\\n {{translation key=\"xe.admin.forgotUsername.instructions\"\/}}\\n \\n {{html}}\\n   &lt;form method=\"post\" action=\"$doc.getURL()\" class=\"xformInline\"&gt;\\n-    &lt;div&gt;&lt;label for=\"e\"&gt;$services.localization.render(\\'xe.admin.forgotUsername.email.label\\')&lt;\/label&gt; &lt;input type=\"text\" id=\"e\" name=\"e\"\/&gt; &lt;span class=\"buttonwrapper\"&gt;&lt;input type=\"submit\" value=\"$services.localization.render(\\'xe.admin.forgotUsername.submit\\')\" class=\"button\"\/&gt;&lt;\/span&gt;&lt;\/div&gt;\\n+    &lt;div&gt;\\n+      &lt;label for=\"e\"&gt;$services.localization.render(\\'xe.admin.forgotUsername.email.label\\')&lt;\/label&gt;\\n+      &lt;input type=\"text\" id=\"e\" name=\"e\"\/&gt;\\n+      &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.getToken()\"\/&gt;\\n+      &lt;span class=\"buttonwrapper\"&gt;\\n+        &lt;input type=\"submit\" value=\"$services.localization.render(\\'xe.admin.forgotUsername.submit\\')\" class=\"button\"\/&gt;\\n+      &lt;\/span&gt;\\n+    &lt;\/div&gt;\\n   &lt;\/form&gt;\\n {{\/html}}'}}",
            "message_norm":"xwiki-18408: wrong check in forgot username",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml'])",
            "num_files":1.0,
            "patch_content":"From 69548c0320cbd772540cf4668743e69f879812cf Mon Sep 17 00:00:00 2001\nFrom: Simon Urli <simon.urli@xwiki.com>\nDate: Tue, 9 Mar 2021 13:23:38 +0100\nSubject: [PATCH] XWIKI-18408: Wrong check in forgot username\n\n---\n ...\/src\/main\/resources\/XWiki\/ForgotUsername.xml       | 11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ndiff --git a\/xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml b\/xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml\nindex 91d3d6d91a1c..c4e15a20678a 100644\n--- a\/xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml\n+++ b\/xwiki-platform-core\/xwiki-platform-administration\/xwiki-platform-administration-ui\/src\/main\/resources\/XWiki\/ForgotUsername.xml\n@@ -38,12 +38,19 @@\n   <hidden>true<\/hidden>\n   <content>{{velocity}}\n #set($email = \"$!request.get('e')\")\n-#if($email == '')\n+#if($email == '' || !$services.csrf.isTokenValid($request.form_token))\n {{translation key=\"xe.admin.forgotUsername.instructions\"\/}}\n \n {{html}}\n   &lt;form method=\"post\" action=\"$doc.getURL()\" class=\"xformInline\"&gt;\n-    &lt;div&gt;&lt;label for=\"e\"&gt;$services.localization.render('xe.admin.forgotUsername.email.label')&lt;\/label&gt; &lt;input type=\"text\" id=\"e\" name=\"e\"\/&gt; &lt;span class=\"buttonwrapper\"&gt;&lt;input type=\"submit\" value=\"$services.localization.render('xe.admin.forgotUsername.submit')\" class=\"button\"\/&gt;&lt;\/span&gt;&lt;\/div&gt;\n+    &lt;div&gt;\n+      &lt;label for=\"e\"&gt;$services.localization.render('xe.admin.forgotUsername.email.label')&lt;\/label&gt;\n+      &lt;input type=\"text\" id=\"e\" name=\"e\"\/&gt;\n+      &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.getToken()\"\/&gt;\n+      &lt;span class=\"buttonwrapper\"&gt;\n+        &lt;input type=\"submit\" value=\"$services.localization.render('xe.admin.forgotUsername.submit')\" class=\"button\"\/&gt;\n+      &lt;\/span&gt;\n+    &lt;\/div&gt;\n   &lt;\/form&gt;\n {{\/html}}",
            "code_diff":"@@ -38,12 +38,19 @@\n   <hidden>true<\/hidden>\n   <content>{{velocity}}\n #set($email = \"$!request.get('e')\")\n-#if($email == '')\n+#if($email == '' || !$services.csrf.isTokenValid($request.form_token))\n {{translation key=\"xe.admin.forgotUsername.instructions\"\/}}\n \n {{html}}\n   &lt;form method=\"post\" action=\"$doc.getURL()\" class=\"xformInline\"&gt;\n-    &lt;div&gt;&lt;label for=\"e\"&gt;$services.localization.render('xe.admin.forgotUsername.email.label')&lt;\/label&gt; &lt;input type=\"text\" id=\"e\" name=\"e\"\/&gt; &lt;span class=\"buttonwrapper\"&gt;&lt;input type=\"submit\" value=\"$services.localization.render('xe.admin.forgotUsername.submit')\" class=\"button\"\/&gt;&lt;\/span&gt;&lt;\/div&gt;\n+    &lt;div&gt;\n+      &lt;label for=\"e\"&gt;$services.localization.render('xe.admin.forgotUsername.email.label')&lt;\/label&gt;\n+      &lt;input type=\"text\" id=\"e\" name=\"e\"\/&gt;\n+      &lt;input type=\"hidden\" name=\"form_token\" value=\"$services.csrf.getToken()\"\/&gt;\n+      &lt;span class=\"buttonwrapper\"&gt;\n+        &lt;input type=\"submit\" value=\"$services.localization.render('xe.admin.forgotUsername.submit')\" class=\"button\"\/&gt;\n+      &lt;\/span&gt;\n+    &lt;\/div&gt;\n   &lt;\/form&gt;\n {{\/html}}"
        },
        {
            "index":752,
            "vuln_id":"GHSA-9689-rx4v-cqgc",
            "cwe_id":"{'CWE-601'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/concourse\/concourse\/pull\/5350\/commits\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb'}",
            "dataset":"osv",
            "summary":"Open Redirect Pivotal Concourse Release, versions 4.x prior to 4.2.2, login flow allows redirects to untrusted websites. A remote unauthenticated attacker could convince a user to click on a link using the oAuth redirect link with an untrusted website and gain access to that user's access token in Concourse.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/concourse\/concourse",
            "commit_href":"https:\/\/github.com\/concourse\/concourse\/pull\/5350\/commits\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb",
            "commit_sha":"38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb",
            "patch":"SINGLE",
            "chain_ord":"['38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb']",
            "before_first_fix_commit":"{'091671e19b3779e439f5ad4a6b4b89aa20a33778'}",
            "last_fix_commit":"38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/20\/2020, 16:32:09",
            "message":"skymarshal: use escaped path for redirect URI\n\nSigned-off-by: Rui Yang <ryang@pivotal.io>",
            "author":"Rui Yang",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'skymarshal\/skyserver\/skyserver.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/concourse\/concourse\/raw\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb\/skymarshal%2Fskyserver%2Fskyserver.go', 'patch': '@@ -257,7 +257,7 @@ func (s *SkyServer) Redirect(w http.ResponseWriter, r *http.Request, token *oaut\\n \\tparams := redirectURL.Query()\\n \\tparams.Set(\"csrf_token\", csrfToken)\\n \\n-\\thttp.Redirect(w, r, redirectURL.Path+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\\n+\\thttp.Redirect(w, r, redirectURL.EscapedPath()+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\\n }\\n \\n func (s *SkyServer) Token(w http.ResponseWriter, r *http.Request) {'}}",
            "message_norm":"skymarshal: use escaped path for redirect uri\n\nsigned-off-by: rui yang <ryang@pivotal.io>",
            "language":"en",
            "entities":"[('escaped', 'SECWORD', ''), ('ryang@pivotal.io', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['skymarshal\/skyserver\/skyserver.go'])",
            "num_files":1.0,
            "patch_content":"From 38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb Mon Sep 17 00:00:00 2001\nFrom: Rui Yang <ryang@pivotal.io>\nDate: Fri, 20 Mar 2020 12:32:09 -0400\nSubject: [PATCH] skymarshal: use escaped path for redirect URI\n\nSigned-off-by: Rui Yang <ryang@pivotal.io>\n---\n skymarshal\/skyserver\/skyserver.go | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/skymarshal\/skyserver\/skyserver.go b\/skymarshal\/skyserver\/skyserver.go\nindex fd82783db63..b39e76231f6 100644\n--- a\/skymarshal\/skyserver\/skyserver.go\n+++ b\/skymarshal\/skyserver\/skyserver.go\n@@ -257,7 +257,7 @@ func (s *SkyServer) Redirect(w http.ResponseWriter, r *http.Request, token *oaut\n \tparams := redirectURL.Query()\n \tparams.Set(\"csrf_token\", csrfToken)\n \n-\thttp.Redirect(w, r, redirectURL.Path+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\n+\thttp.Redirect(w, r, redirectURL.EscapedPath()+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\n }\n \n func (s *SkyServer) Token(w http.ResponseWriter, r *http.Request) {",
            "code_diff":"@@ -257,7 +257,7 @@ func (s *SkyServer) Redirect(w http.ResponseWriter, r *http.Request, token *oaut\n \tparams := redirectURL.Query()\n \tparams.Set(\"csrf_token\", csrfToken)\n \n-\thttp.Redirect(w, r, redirectURL.Path+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\n+\thttp.Redirect(w, r, redirectURL.EscapedPath()+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\n }\n \n func (s *SkyServer) Token(w http.ResponseWriter, r *http.Request) {"
        },
        {
            "index":200,
            "vuln_id":"GHSA-c9g6-9335-x697",
            "cwe_id":"{'CWE-20'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/sockjs\/sockjs-node\/commit\/dd7e642cd69ee74385825816d30642c43e051d16'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in SocksJS-Node Incorrect handling of Upgrade header with the value websocket leads in crashing of containers hosting sockjs apps. This affects the package sockjs before 0.3.20.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/sockjs\/sockjs-node",
            "commit_href":"https:\/\/github.com\/sockjs\/sockjs-node\/commit\/dd7e642cd69ee74385825816d30642c43e051d16",
            "commit_sha":"dd7e642cd69ee74385825816d30642c43e051d16",
            "patch":"SINGLE",
            "chain_ord":"['dd7e642cd69ee74385825816d30642c43e051d16']",
            "before_first_fix_commit":"{'3e975c69cce21092c2ac9aa7a2f9dc40446f5ccd', '68e8fd7a92e0e73cac6894a282b6d84f33e879b3'}",
            "last_fix_commit":"dd7e642cd69ee74385825816d30642c43e051d16",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/09\/2020, 01:36:12",
            "message":"Merge pull request #266 from cakoose\/backport-writeHead-fix\n\nwriteHead: Don't end() response",
            "author":"Bryce Kahle",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 3, 'total': 3}",
            "files":"{'src\/webjs.coffee': {'additions': 0, 'deletions': 3, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sockjs\/sockjs-node\/raw\/dd7e642cd69ee74385825816d30642c43e051d16\/src%2Fwebjs.coffee', 'patch': \"@@ -45,9 +45,6 @@ fake_response = (req, res) ->\\n             try\\n                 res.write(r.join('\\\\r\\\\n'))\\n             catch x\\n-            try\\n-                res.end()\\n-            catch x\\n         res.setHeader = (k, v) -> headers[k] = v\"}}",
            "message_norm":"merge pull request #266 from cakoose\/backport-writehead-fix\n\nwritehead: don't end() response",
            "language":"en",
            "entities":"[('#266', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/webjs.coffee'])",
            "num_files":1.0,
            "patch_content":"From 3e975c69cce21092c2ac9aa7a2f9dc40446f5ccd Mon Sep 17 00:00:00 2001\nFrom: Kannan Goundan <kannan@cakoose.com>\nDate: Tue, 3 Dec 2019 20:28:40 -0800\nSubject: [PATCH] writeHead: Don't end() response\n\nBackport of #265\n---\n src\/webjs.coffee | 3 ---\n 1 file changed, 3 deletions(-)\n\ndiff --git a\/src\/webjs.coffee b\/src\/webjs.coffee\nindex 42361c52..41cc5c87 100644\n--- a\/src\/webjs.coffee\n+++ b\/src\/webjs.coffee\n@@ -45,9 +45,6 @@ fake_response = (req, res) ->\n             try\n                 res.write(r.join('\\r\\n'))\n             catch x\n-            try\n-                res.end()\n-            catch x\n         res.setHeader = (k, v) -> headers[k] = v",
            "code_diff":"@@ -45,9 +45,6 @@ fake_response = (req, res) ->\n             try\n                 res.write(r.join('\\r\\n'))\n             catch x\n-            try\n-                res.end()\n-            catch x\n         res.setHeader = (k, v) -> headers[k] = v"
        },
        {
            "index":626,
            "vuln_id":"GHSA-xc47-3rch-cv57",
            "cwe_id":"{'CWE-284'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0'}",
            "dataset":"osv",
            "summary":"Improper Access Control in snipe-it Users with no system permissions are able to see and create personal access tokens",
            "published_date":"2022-01-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0",
            "commit_sha":"0e5ef53c352754de2778ffa20c85da15fd6f7ae0",
            "patch":"SINGLE",
            "chain_ord":"['0e5ef53c352754de2778ffa20c85da15fd6f7ae0']",
            "before_first_fix_commit":"{'512dbfee7acfcafa1524c8b2fb4cc4ef96958d0b', 'eb8f23a888ccb2dc53a11c6dd240cbe8373500aa'}",
            "last_fix_commit":"0e5ef53c352754de2778ffa20c85da15fd6f7ae0",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2022, 09:36:52",
            "message":"Merge pull request #10504 from snipe\/fixes\/auth_controls_on_api_key_creation\n\nFixes auth controls on api key creation",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'app\/Http\/Controllers\/ProfileController.php': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/0e5ef53c352754de2778ffa20c85da15fd6f7ae0\/app%2FHttp%2FControllers%2FProfileController.php', 'patch': \"@@ -113,6 +113,12 @@ public function postIndex(ImageUploadRequest $request)\\n      *\/\\n     public function api()\\n     {\\n+\\n+        \/\/ Make sure the self.api permission has been granted\\n+        if (!Gate::allows('self.api')) {\\n+            abort(403);\\n+        }\\n+\\n         return view('account\/api');\\n     }\"}}",
            "message_norm":"merge pull request #10504 from snipe\/fixes\/auth_controls_on_api_key_creation\n\nfixes auth controls on api key creation",
            "language":"en",
            "entities":"[('#10504', 'ISSUE', ''), ('auth_controls_on_api_key_creation', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('auth', 'SECWORD', ''), ('key', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/ProfileController.php'])",
            "num_files":1.0,
            "patch_content":"From 512dbfee7acfcafa1524c8b2fb4cc4ef96958d0b Mon Sep 17 00:00:00 2001\nFrom: snipe <snipe@snipe.net>\nDate: Thu, 13 Jan 2022 01:33:27 -0800\nSubject: [PATCH] Added gate to check that the user is allowed to view API keys\n\nSigned-off-by: snipe <snipe@snipe.net>\n---\n app\/Http\/Controllers\/ProfileController.php | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/app\/Http\/Controllers\/ProfileController.php b\/app\/Http\/Controllers\/ProfileController.php\nindex ef6c00a54aad..e55dbe0709bb 100755\n--- a\/app\/Http\/Controllers\/ProfileController.php\n+++ b\/app\/Http\/Controllers\/ProfileController.php\n@@ -113,6 +113,12 @@ public function postIndex(ImageUploadRequest $request)\n      *\/\n     public function api()\n     {\n+\n+        \/\/ Make sure the self.api permission has been granted\n+        if (!Gate::allows('self.api')) {\n+            abort(403);\n+        }\n+\n         return view('account\/api');\n     }",
            "code_diff":"@@ -113,6 +113,12 @@ public function postIndex(ImageUploadRequest $request)\n      *\/\n     public function api()\n     {\n+\n+        \/\/ Make sure the self.api permission has been granted\n+        if (!Gate::allows('self.api')) {\n+            abort(403);\n+        }\n+\n         return view('account\/api');\n     }"
        },
        {
            "index":97,
            "vuln_id":"GHSA-ff28-f46g-r9g8",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/bc77440b301ac8780698be91dff1ac33b7cee850'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Gogs ### Impact\n\nThe malicious user is able to upload a crafted SVG file as the issue attachment to archive XSS. All installations [allow uploading SVG (`text\/xml`) files as issue attachments (non-default)](https:\/\/github.com\/gogs\/gogs\/blob\/e51e01683408e10b3dcd2ace65e259ca7f0fd61b\/conf\/app.ini#L283-L284) are affected.\n\n### Patches\n\nCorrectly setting the Content Security Policy for the serving endpoint. Users should upgrade to 0.12.7 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable uploading SVG files (`text\/xml`) as issue attachments](https:\/\/github.com\/gogs\/gogs\/blob\/e51e01683408e10b3dcd2ace65e259ca7f0fd61b\/conf\/app.ini#L283-L284).\n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/34a12146-3a5d-4efc-a0f8-7a3ae04b198d\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https:\/\/github.com\/gogs\/gogs\/issues\/6919.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/gogs\/gogs",
            "commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/bc77440b301ac8780698be91dff1ac33b7cee850",
            "commit_sha":"bc77440b301ac8780698be91dff1ac33b7cee850",
            "patch":"SINGLE",
            "chain_ord":"['bc77440b301ac8780698be91dff1ac33b7cee850']",
            "before_first_fix_commit":"{'2a8f561c6413ed7683a3844a8ae6b68d30c0dd08'}",
            "last_fix_commit":"bc77440b301ac8780698be91dff1ac33b7cee850",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/03\/2022, 09:51:28",
            "message":"attachment: set CSP header in the serving endpoint (#6926)",
            "author":"Joe Chen",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'internal\/cmd\/web.go': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/bc77440b301ac8780698be91dff1ac33b7cee850\/internal%2Fcmd%2Fweb.go', 'patch': '@@ -314,6 +314,7 @@ func runWeb(c *cli.Context) error {\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tdefer fr.Close()\\n \\n+\\t\\t\\t\\tc.Header().Set(\"Content-Security-Policy\", \"default-src \\'none\\'; style-src \\'unsafe-inline\\'; sandbox\")\\n \\t\\t\\t\\tc.Header().Set(\"Cache-Control\", \"public,max-age=86400\")\\n \\t\\t\\t\\tc.Header().Set(\"Content-Disposition\", fmt.Sprintf(`inline; filename=\"%s\"`, attach.Name))'}}",
            "message_norm":"attachment: set csp header in the serving endpoint (#6926)",
            "language":"en",
            "entities":"[('csp header', 'SECWORD', ''), ('#6926', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['internal\/cmd\/web.go'])",
            "num_files":1.0,
            "patch_content":"From bc77440b301ac8780698be91dff1ac33b7cee850 Mon Sep 17 00:00:00 2001\nFrom: Joe Chen <jc@unknwon.io>\nDate: Tue, 3 May 2022 17:51:28 +0800\nSubject: [PATCH] attachment: set CSP header in the serving endpoint (#6926)\n\n---\n internal\/cmd\/web.go | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/internal\/cmd\/web.go b\/internal\/cmd\/web.go\nindex 09c173f40cd..6a64f26ba21 100644\n--- a\/internal\/cmd\/web.go\n+++ b\/internal\/cmd\/web.go\n@@ -314,6 +314,7 @@ func runWeb(c *cli.Context) error {\n \t\t\t\t}\n \t\t\t\tdefer fr.Close()\n \n+\t\t\t\tc.Header().Set(\"Content-Security-Policy\", \"default-src 'none'; style-src 'unsafe-inline'; sandbox\")\n \t\t\t\tc.Header().Set(\"Cache-Control\", \"public,max-age=86400\")\n \t\t\t\tc.Header().Set(\"Content-Disposition\", fmt.Sprintf(`inline; filename=\"%s\"`, attach.Name))",
            "code_diff":"@@ -314,6 +314,7 @@ func runWeb(c *cli.Context) error {\n \t\t\t\t}\n \t\t\t\tdefer fr.Close()\n \n+\t\t\t\tc.Header().Set(\"Content-Security-Policy\", \"default-src 'none'; style-src 'unsafe-inline'; sandbox\")\n \t\t\t\tc.Header().Set(\"Cache-Control\", \"public,max-age=86400\")\n \t\t\t\tc.Header().Set(\"Content-Disposition\", fmt.Sprintf(`inline; filename=\"%s\"`, attach.Name))"
        },
        {
            "index":257,
            "vuln_id":"GHSA-h4pc-gx2w-f2xv",
            "cwe_id":"{'CWE-125'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412'}",
            "dataset":"osv",
            "summary":"Heap OOB read in TFLite ### Impact\nA specially crafted TFLite model could trigger an OOB read on heap in the TFLite implementation of [`Split_V`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/c59c37e7b2d563967da813fa50fe20b21f4da683\/tensorflow\/lite\/kernels\/split_v.cc#L99):\n\n```cc\nconst int input_size = SizeOfDimension(input, axis_value);\n``` \n\nIf `axis_value` is not a value between 0 and `NumDimensions(input)`, then the [`SizeOfDimension` function](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/102b211d892f3abc14f845a72047809b39cc65ab\/tensorflow\/lite\/kernels\/kernel_util.h#L148-L150) will access data outside the bounds of the tensor shape array:\n\n```cc\ninline int SizeOfDimension(const TfLiteTensor* t, int dim) {\n  return t->dims->data[dim];\n}\n```\n  \n### Patches \nWe have patched the issue in GitHub commit [ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412",
            "commit_sha":"ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412",
            "patch":"SINGLE",
            "chain_ord":"['ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412']",
            "before_first_fix_commit":"{'c59c37e7b2d563967da813fa50fe20b21f4da683'}",
            "last_fix_commit":"ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2021, 01:12:15",
            "message":"Prevent array OOB read\/write\n\nPiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/lite\/kernels\/split_v.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412\/tensorflow%2Flite%2Fkernels%2Fsplit_v.cc', 'patch': '@@ -96,6 +96,8 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\\n     }\\n   }\\n \\n+  TF_LITE_ENSURE(context, axis_value >= 0);\\n+  TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\\n   const int input_size = SizeOfDimension(input, axis_value);\\n \\n   if (minus_one_index != -1) {'}}",
            "message_norm":"prevent array oob read\/write\n\npiperorigin-revid: 371026165\nchange-id: i26ac6372c87246e03c7eb8c94e84c84d86054b36",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('oob', 'SECWORD', ''), ('371026165', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/split_v.cc'])",
            "num_files":1.0,
            "patch_content":"From ae2daeb45abfe2c6dda539cf8d0d6f653d3ef412 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 28 Apr 2021 18:12:15 -0700\nSubject: [PATCH] Prevent array OOB read\/write\n\nPiperOrigin-RevId: 371026165\nChange-Id: I26ac6372c87246e03c7eb8c94e84c84d86054b36\n---\n tensorflow\/lite\/kernels\/split_v.cc | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/split_v.cc b\/tensorflow\/lite\/kernels\/split_v.cc\nindex 054e00572f5a60..ed8a4851c1e97e 100644\n--- a\/tensorflow\/lite\/kernels\/split_v.cc\n+++ b\/tensorflow\/lite\/kernels\/split_v.cc\n@@ -96,6 +96,8 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\n     }\n   }\n \n+  TF_LITE_ENSURE(context, axis_value >= 0);\n+  TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\n   const int input_size = SizeOfDimension(input, axis_value);\n \n   if (minus_one_index != -1) {",
            "code_diff":"@@ -96,6 +96,8 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\n     }\n   }\n \n+  TF_LITE_ENSURE(context, axis_value >= 0);\n+  TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\n   const int input_size = SizeOfDimension(input, axis_value);\n \n   if (minus_one_index != -1) {"
        },
        {
            "index":486,
            "vuln_id":"GHSA-3q6g-vf58-7m4g",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/python-restx\/flask-restx\/commit\/bab31e085f355dd73858fd3715f7ed71849656da'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in flask-restx Flask RESTX contains a regular expression that is vulnerable to [ReDoS](https:\/\/owasp.org\/www-community\/attacks\/Regular_expression_Denial_of_Service_-_ReDoS) (Regular Expression Denial of Service) in `email_regex`.",
            "published_date":"2021-09-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/python-restx\/flask-restx",
            "commit_href":"https:\/\/github.com\/python-restx\/flask-restx\/commit\/bab31e085f355dd73858fd3715f7ed71849656da",
            "commit_sha":"bab31e085f355dd73858fd3715f7ed71849656da",
            "patch":"SINGLE",
            "chain_ord":"['bab31e085f355dd73858fd3715f7ed71849656da']",
            "before_first_fix_commit":"{'e1ab7e34a47fa8c2fd025402b9c65afbe24d5e98'}",
            "last_fix_commit":"bab31e085f355dd73858fd3715f7ed71849656da",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/01\/2021, 19:53:02",
            "message":"optimize email regex (credits: @kevinbackhouse, fix: #372)",
            "author":"ziirish",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'flask_restx\/inputs.py': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/python-restx\/flask-restx\/raw\/bab31e085f355dd73858fd3715f7ed71849656da\/flask_restx%2Finputs.py', 'patch': '@@ -48,7 +48,7 @@ def my_type(value):\\n \\n \\n email_regex = re.compile(\\n-    r\"^\" \"(?P<local>[^@]*[^@.])\" r\"@\" r\"(?P<server>[^@]+(?:\\\\.[^@]+)*)\" r\"$\",\\n+    r\"^\" \"(?P<local>[^@]*[^@.])\" r\"@\" r\"(?P<server>[^@\\\\.]+(?:\\\\.[^@\\\\.]+)*)\" r\"$\",\\n     re.IGNORECASE,\\n )'}}",
            "message_norm":"optimize email regex (credits: @kevinbackhouse, fix: #372)",
            "language":"en",
            "entities":"[('optimize', 'ACTION', ''), ('#372', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['flask_restx\/inputs.py'])",
            "num_files":1.0,
            "patch_content":"From bab31e085f355dd73858fd3715f7ed71849656da Mon Sep 17 00:00:00 2001\nFrom: ziirish <ziirish@ziirish.info>\nDate: Wed, 1 Sep 2021 21:53:02 +0200\nSubject: [PATCH] optimize email regex (credits: @kevinbackhouse, fix: #372)\n\n---\n flask_restx\/inputs.py | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/flask_restx\/inputs.py b\/flask_restx\/inputs.py\nindex b05532f3..9c76d8a0 100644\n--- a\/flask_restx\/inputs.py\n+++ b\/flask_restx\/inputs.py\n@@ -48,7 +48,7 @@ def my_type(value):\n \n \n email_regex = re.compile(\n-    r\"^\" \"(?P<local>[^@]*[^@.])\" r\"@\" r\"(?P<server>[^@]+(?:\\.[^@]+)*)\" r\"$\",\n+    r\"^\" \"(?P<local>[^@]*[^@.])\" r\"@\" r\"(?P<server>[^@\\.]+(?:\\.[^@\\.]+)*)\" r\"$\",\n     re.IGNORECASE,\n )",
            "code_diff":"@@ -48,7 +48,7 @@ def my_type(value):\n \n \n email_regex = re.compile(\n-    r\"^\" \"(?P<local>[^@]*[^@.])\" r\"@\" r\"(?P<server>[^@]+(?:\\.[^@]+)*)\" r\"$\",\n+    r\"^\" \"(?P<local>[^@]*[^@.])\" r\"@\" r\"(?P<server>[^@\\.]+(?:\\.[^@\\.]+)*)\" r\"$\",\n     re.IGNORECASE,\n )"
        },
        {
            "index":216,
            "vuln_id":"GHSA-74qp-233x-p5j8",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/apache\/incubator-livy\/commit\/4d8a912699683b973eee76d4e91447d769a0cb0d'}",
            "dataset":"osv",
            "summary":"Cross-site scripting (XSS) in Apache Livy Livy server version 0.7.0-incubating (only) is vulnerable to a cross site scripting issue in the session name. A malicious user could use this flaw to access logs and results of other users' sessions and run jobs with their privileges. This issue is fixed in Livy 0.7.1-incubating.",
            "published_date":"2021-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/incubator-livy",
            "commit_href":"https:\/\/github.com\/apache\/incubator-livy\/commit\/4d8a912699683b973eee76d4e91447d769a0cb0d",
            "commit_sha":"4d8a912699683b973eee76d4e91447d769a0cb0d",
            "patch":"SINGLE",
            "chain_ord":"['4d8a912699683b973eee76d4e91447d769a0cb0d']",
            "before_first_fix_commit":"{'97cf2f75929ef6c152afc468adbead269bd0758f'}",
            "last_fix_commit":"4d8a912699683b973eee76d4e91447d769a0cb0d",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/15\/2020, 00:25:54",
            "message":"Add html escape to session name\n\n## What changes were proposed in this pull request?\n\nThe PR adds HTML escaping to session names.\n\n## How was this patch tested?\n\nManual test.\n\nAuthor: Marco Gaido <mgaido@apache.org>\n\nCloses #302 from mgaido91\/escape_html.",
            "author":"Marco Gaido",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 3, 'total': 10}",
            "files":"{'server\/src\/main\/resources\/org\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js': {'additions': 7, 'deletions': 3, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/incubator-livy\/raw\/4d8a912699683b973eee76d4e91447d769a0cb0d\/server%2Fsrc%2Fmain%2Fresources%2Forg%2Fapache%2Flivy%2Fserver%2Fui%2Fstatic%2Fjs%2Fall-sessions.js', 'patch': '@@ -15,13 +15,17 @@\\n  * limitations under the License.\\n  *\/\\n \\n+function escapeHtml(unescapedText) {\\n+  return $(\"<div>\").text(unescapedText).html()\\n+}\\n+\\n function loadSessionsTable(sessions) {\\n   $.each(sessions, function(index, session) {\\n     $(\"#interactive-sessions .sessions-table-body\").append(\\n       \"<tr>\" +\\n         tdWrap(uiLink(\"session\/\" + session.id, session.id)) +\\n         tdWrap(appIdLink(session)) +\\n-        tdWrap(session.name) +\\n+        tdWrap(escapeHtml(session.name)) +\\n         tdWrap(session.owner) +\\n         tdWrap(session.proxyUser) +\\n         tdWrap(session.kind) +\\n@@ -38,7 +42,7 @@ function loadBatchesTable(sessions) {\\n       \"<tr>\" +\\n         tdWrap(session.id) +\\n         tdWrap(appIdLink(session)) +\\n-        tdWrap(session.name) +\\n+        tdWrap(escapeHtml(session.name)) +\\n         tdWrap(session.owner) +\\n         tdWrap(session.proxyUser) +\\n         tdWrap(session.state) +\\n@@ -79,4 +83,4 @@ $(document).ready(function () {\\n       $(\"#all-sessions\").append(\\'<h4>No Sessions or Batches have been created yet.<\/h4>\\');\\n     }\\n   });\\n-});\\n\\\\ No newline at end of file\\n+});'}}",
            "message_norm":"add html escape to session name\n\n## what changes were proposed in this pull request?\n\nthe pr adds html escaping to session names.\n\n## how was this patch tested?\n\nmanual test.\n\nauthor: marco gaido <mgaido@apache.org>\n\ncloses #302 from mgaido91\/escape_html.",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('escape', 'SECWORD', ''), ('adds', 'ACTION', ''), ('escaping', 'SECWORD', ''), ('mgaido@apache.org', 'EMAIL', ''), ('#302', 'ISSUE', ''), ('escape_html', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/src\/main\/resources\/org\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js'])",
            "num_files":1.0,
            "patch_content":"From 4d8a912699683b973eee76d4e91447d769a0cb0d Mon Sep 17 00:00:00 2001\nFrom: Marco Gaido <mgaido@apache.org>\nDate: Fri, 14 Aug 2020 17:25:54 -0700\nSubject: [PATCH] Add html escape to session name\n\n## What changes were proposed in this pull request?\n\nThe PR adds HTML escaping to session names.\n\n## How was this patch tested?\n\nManual test.\n\nAuthor: Marco Gaido <mgaido@apache.org>\n\nCloses #302 from mgaido91\/escape_html.\n---\n ...\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js    | 10 +++++++---\n 1 file changed, 7 insertions(+), 3 deletions(-)\n\ndiff --git a\/server\/src\/main\/resources\/org\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js b\/server\/src\/main\/resources\/org\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js\nindex 6e3570204..d8a84a761 100644\n--- a\/server\/src\/main\/resources\/org\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js\n+++ b\/server\/src\/main\/resources\/org\/apache\/livy\/server\/ui\/static\/js\/all-sessions.js\n@@ -15,13 +15,17 @@\n  * limitations under the License.\n  *\/\n \n+function escapeHtml(unescapedText) {\n+  return $(\"<div>\").text(unescapedText).html()\n+}\n+\n function loadSessionsTable(sessions) {\n   $.each(sessions, function(index, session) {\n     $(\"#interactive-sessions .sessions-table-body\").append(\n       \"<tr>\" +\n         tdWrap(uiLink(\"session\/\" + session.id, session.id)) +\n         tdWrap(appIdLink(session)) +\n-        tdWrap(session.name) +\n+        tdWrap(escapeHtml(session.name)) +\n         tdWrap(session.owner) +\n         tdWrap(session.proxyUser) +\n         tdWrap(session.kind) +\n@@ -38,7 +42,7 @@ function loadBatchesTable(sessions) {\n       \"<tr>\" +\n         tdWrap(session.id) +\n         tdWrap(appIdLink(session)) +\n-        tdWrap(session.name) +\n+        tdWrap(escapeHtml(session.name)) +\n         tdWrap(session.owner) +\n         tdWrap(session.proxyUser) +\n         tdWrap(session.state) +\n@@ -79,4 +83,4 @@ $(document).ready(function () {\n       $(\"#all-sessions\").append('<h4>No Sessions or Batches have been created yet.<\/h4>');\n     }\n   });\n-});\n\\ No newline at end of file\n+});",
            "code_diff":"@@ -15,13 +15,17 @@\n  * limitations under the License.\n  *\/\n \n+function escapeHtml(unescapedText) {\n+  return $(\"<div>\").text(unescapedText).html()\n+}\n+\n function loadSessionsTable(sessions) {\n   $.each(sessions, function(index, session) {\n     $(\"#interactive-sessions .sessions-table-body\").append(\n       \"<tr>\" +\n         tdWrap(uiLink(\"session\/\" + session.id, session.id)) +\n         tdWrap(appIdLink(session)) +\n-        tdWrap(session.name) +\n+        tdWrap(escapeHtml(session.name)) +\n         tdWrap(session.owner) +\n         tdWrap(session.proxyUser) +\n         tdWrap(session.kind) +\n@@ -38,7 +42,7 @@ function loadBatchesTable(sessions) {\n       \"<tr>\" +\n         tdWrap(session.id) +\n         tdWrap(appIdLink(session)) +\n-        tdWrap(session.name) +\n+        tdWrap(escapeHtml(session.name)) +\n         tdWrap(session.owner) +\n         tdWrap(session.proxyUser) +\n         tdWrap(session.state) +\n@@ -79,4 +83,4 @@ $(document).ready(function () {\n       $(\"#all-sessions\").append('<h4>No Sessions or Batches have been created yet.<\/h4>');\n     }\n   });\n-});\n\\ No newline at end of file\n+});"
        },
        {
            "index":695,
            "vuln_id":"GHSA-c7pp-g2v2-2766",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/KartikTalwar\/gmail.js\/commit\/a83436f499f9c01b04280af945a5a81137b6baf1'}",
            "dataset":"osv",
            "summary":"DOM-based XSS in gmail-js Affected versions of `gmail-js` are vulnerable to cross-site scripting in the `tools.parse_response`, `helper.get.visible_emails_post`, and `helper.get.email_data_post` functions, which pass user input directly into the Function constructor.\n\n\n\n## Recommendation\n\nUpdate to version 0.6.5 or later.",
            "published_date":"2020-09-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/KartikTalwar\/gmail.js",
            "commit_href":"https:\/\/github.com\/KartikTalwar\/gmail.js\/commit\/a83436f499f9c01b04280af945a5a81137b6baf1",
            "commit_sha":"a83436f499f9c01b04280af945a5a81137b6baf1",
            "patch":"SINGLE",
            "chain_ord":"['a83436f499f9c01b04280af945a5a81137b6baf1']",
            "before_first_fix_commit":"{'0e4732cb6c6c447d7f0487580ad7ada33184be92'}",
            "last_fix_commit":"a83436f499f9c01b04280af945a5a81137b6baf1",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/29\/2016, 08:36:02",
            "message":"Replace new Function() with JSON.parse()",
            "author":"Jostein Kj\u00f8nigsen",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 15, 'total': 23}",
            "files":"{'src\/gmail.js': {'additions': 8, 'deletions': 15, 'changes': 23, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/KartikTalwar\/gmail.js\/raw\/a83436f499f9c01b04280af945a5a81137b6baf1\/src%2Fgmail.js', 'patch': '@@ -891,10 +891,8 @@ var Gmail_ = function(localJQuery) {\\n                 endIndex = (parseInt(dataLength, 10) - 2) + response.indexOf(\"[\");\\n                 data = response.substring(response.indexOf(\"[\"), endIndex);\\n \\n-                var get_data = new Function(\"\\\\\"use strict\\\\\"; return \" + data);\\n-                realData = get_data();\\n-\\n-                parsedResponse.push(realData);\\n+                var json = JSON.parse(data);\\n+                parsedResponse.push(json);\\n \\n                 \/\/ prepare response for next loop\\n                 response = response.substring(response.indexOf(\"[\"), response.length);\\n@@ -1684,11 +1682,9 @@ var Gmail_ = function(localJQuery) {\\n             return emails;\\n         }\\n \\n-        get_data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\\n-        get_data = \"\\\\\"use strict\\\\\"; return \" + get_data;\\n-        get_data = new Function(get_data);\\n-\\n-        api.tracker.view_data = get_data();\\n+        var data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\\n+        var json = JSON.parse(data);\\n+        api.tracker.view_data = json;\\n \\n         for(var i in api.tracker.view_data) {\\n             if (typeof(api.tracker.view_data[i]) === \"function\") {\\n@@ -1934,13 +1930,10 @@ var Gmail_ = function(localJQuery) {\\n         if (!get_data) {\\n             return {};\\n         }\\n-        get_data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\\n-        get_data = \"\\\\\"use strict\\\\\"; return \" + get_data;\\n-        get_data = new Function(get_data);\\n-\\n-        var cdata = get_data();\\n+        var data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\\n+        var json = JSON.parse(data);\\n \\n-        api.tracker.email_data = cdata[0];\\n+        api.tracker.email_data = json[0];\\n         return api.tools.parse_email_data(api.tracker.email_data);\\n     };'}}",
            "message_norm":"replace new function() with json.parse()",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/gmail.js'])",
            "num_files":1.0,
            "patch_content":"From a83436f499f9c01b04280af945a5a81137b6baf1 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Jostein=20Kj=C3=B8nigsen?= <jostein@kjonigsen.net>\nDate: Tue, 29 Nov 2016 09:36:02 +0100\nSubject: [PATCH] Replace new Function() with JSON.parse()\n\n---\n src\/gmail.js | 23 ++++++++---------------\n 1 file changed, 8 insertions(+), 15 deletions(-)\n\ndiff --git a\/src\/gmail.js b\/src\/gmail.js\nindex 125ef4e2..3a09364f 100755\n--- a\/src\/gmail.js\n+++ b\/src\/gmail.js\n@@ -891,10 +891,8 @@ var Gmail_ = function(localJQuery) {\n                 endIndex = (parseInt(dataLength, 10) - 2) + response.indexOf(\"[\");\n                 data = response.substring(response.indexOf(\"[\"), endIndex);\n \n-                var get_data = new Function(\"\\\"use strict\\\"; return \" + data);\n-                realData = get_data();\n-\n-                parsedResponse.push(realData);\n+                var json = JSON.parse(data);\n+                parsedResponse.push(json);\n \n                 \/\/ prepare response for next loop\n                 response = response.substring(response.indexOf(\"[\"), response.length);\n@@ -1684,11 +1682,9 @@ var Gmail_ = function(localJQuery) {\n             return emails;\n         }\n \n-        get_data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\n-        get_data = \"\\\"use strict\\\"; return \" + get_data;\n-        get_data = new Function(get_data);\n-\n-        api.tracker.view_data = get_data();\n+        var data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\n+        var json = JSON.parse(data);\n+        api.tracker.view_data = json;\n \n         for(var i in api.tracker.view_data) {\n             if (typeof(api.tracker.view_data[i]) === \"function\") {\n@@ -1934,13 +1930,10 @@ var Gmail_ = function(localJQuery) {\n         if (!get_data) {\n             return {};\n         }\n-        get_data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\n-        get_data = \"\\\"use strict\\\"; return \" + get_data;\n-        get_data = new Function(get_data);\n-\n-        var cdata = get_data();\n+        var data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\n+        var json = JSON.parse(data);\n \n-        api.tracker.email_data = cdata[0];\n+        api.tracker.email_data = json[0];\n         return api.tools.parse_email_data(api.tracker.email_data);\n     };",
            "code_diff":"@@ -891,10 +891,8 @@ var Gmail_ = function(localJQuery) {\n                 endIndex = (parseInt(dataLength, 10) - 2) + response.indexOf(\"[\");\n                 data = response.substring(response.indexOf(\"[\"), endIndex);\n \n-                var get_data = new Function(\"\\\"use strict\\\"; return \" + data);\n-                realData = get_data();\n-\n-                parsedResponse.push(realData);\n+                var json = JSON.parse(data);\n+                parsedResponse.push(json);\n \n                 \/\/ prepare response for next loop\n                 response = response.substring(response.indexOf(\"[\"), response.length);\n@@ -1684,11 +1682,9 @@ var Gmail_ = function(localJQuery) {\n             return emails;\n         }\n \n-        get_data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\n-        get_data = \"\\\"use strict\\\"; return \" + get_data;\n-        get_data = new Function(get_data);\n-\n-        api.tracker.view_data = get_data();\n+        var data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\n+        var json = JSON.parse(data);\n+        api.tracker.view_data = json;\n \n         for(var i in api.tracker.view_data) {\n             if (typeof(api.tracker.view_data[i]) === \"function\") {\n@@ -1934,13 +1930,10 @@ var Gmail_ = function(localJQuery) {\n         if (!get_data) {\n             return {};\n         }\n-        get_data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\n-        get_data = \"\\\"use strict\\\"; return \" + get_data;\n-        get_data = new Function(get_data);\n-\n-        var cdata = get_data();\n+        var data = get_data.substring(get_data.indexOf(\"[\"), get_data.length);\n+        var json = JSON.parse(data);\n \n-        api.tracker.email_data = cdata[0];\n+        api.tracker.email_data = json[0];\n         return api.tools.parse_email_data(api.tracker.email_data);\n     };"
        },
        {
            "index":149,
            "vuln_id":"GHSA-79jw-2f46-wv22",
            "cwe_id":"{'CWE-74'}",
            "score":7.2,
            "chain":"{'https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe'}",
            "dataset":"osv",
            "summary":"Authenticated remote code execution in October CMS ### Impact\n\nAn authenticated user with the permissions to create, modify and delete website pages can exploit this vulnerability to bypass  `cms.safe_mode` \/ `cms.enableSafeMode` in order to execute arbitrary code.\n\n- This issue only affects admin panels that rely on safe mode and restricted permissions.\n- To exploit this vulnerability, an attacker must first have access to the backend area.\n\n### Patches\n\nThe issue has been patched in Build 474 (v1.0.474) and v1.1.10.\n\n### Workarounds\n\nApply https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe to your installation manually if unable to upgrade to Build 474 or v1.1.10.\n\n### References\n\nCredits to:\n- David Miller\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n- Email us at [hello@octobercms.com](mailto:hello@octobercms.com)",
            "published_date":"2022-02-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/library",
            "commit_href":"https:\/\/github.com\/octobercms\/library\/commit\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
            "commit_sha":"c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
            "patch":"SINGLE",
            "chain_ord":"['c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe']",
            "before_first_fix_commit":"{'8f06437ab772b48dd7ea7079c293f436438f867d'}",
            "last_fix_commit":"c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/20\/2022, 00:25:32",
            "message":"Backport fix from 2.0",
            "author":"Samuel Georges",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'src\/Halcyon\/Processors\/SectionParser.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/library\/raw\/c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe\/src%2FHalcyon%2FProcessors%2FSectionParser.php', 'patch': \"@@ -72,7 +72,8 @@ public static function render($data, $options = [])\\n             }\\n         }\\n \\n-        $content[] = $markup;\\n+        $sections = preg_split('\/^'.preg_quote(self::SECTION_SEPARATOR).'\\\\s*$\/m', $markup, -1);\\n+        $content[] = end($sections);\\n \\n         $content = trim(implode(PHP_EOL.self::SECTION_SEPARATOR.PHP_EOL, $content));\"}}",
            "message_norm":"backport fix from 2.0",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Halcyon\/Processors\/SectionParser.php'])",
            "num_files":1.0,
            "patch_content":"From c393c5ce9ca2c5acc3ed6c9bb0dab5ffd61965fe Mon Sep 17 00:00:00 2001\nFrom: Samuel Georges <sam@daftspunk.com>\nDate: Thu, 20 Jan 2022 11:25:32 +1100\nSubject: [PATCH] Backport fix from 2.0\n\n---\n src\/Halcyon\/Processors\/SectionParser.php | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/src\/Halcyon\/Processors\/SectionParser.php b\/src\/Halcyon\/Processors\/SectionParser.php\nindex c07ac4239..ab1c9f53b 100644\n--- a\/src\/Halcyon\/Processors\/SectionParser.php\n+++ b\/src\/Halcyon\/Processors\/SectionParser.php\n@@ -72,7 +72,8 @@ public static function render($data, $options = [])\n             }\n         }\n \n-        $content[] = $markup;\n+        $sections = preg_split('\/^'.preg_quote(self::SECTION_SEPARATOR).'\\s*$\/m', $markup, -1);\n+        $content[] = end($sections);\n \n         $content = trim(implode(PHP_EOL.self::SECTION_SEPARATOR.PHP_EOL, $content));",
            "code_diff":"@@ -72,7 +72,8 @@ public static function render($data, $options = [])\n             }\n         }\n \n-        $content[] = $markup;\n+        $sections = preg_split('\/^'.preg_quote(self::SECTION_SEPARATOR).'\\s*$\/m', $markup, -1);\n+        $content[] = end($sections);\n \n         $content = trim(implode(PHP_EOL.self::SECTION_SEPARATOR.PHP_EOL, $content));"
        },
        {
            "index":207,
            "vuln_id":"GHSA-vqw6-72r7-fgw7",
            "cwe_id":"{'CWE-125'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68'}",
            "dataset":"osv",
            "summary":"OOB read in `MatrixTriangularSolve` ### Impact\nThe implementation of [`MatrixTriangularSolve`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8cae746d8449c7dda5298327353d68613f16e798\/tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h#L160-L240) fails to terminate kernel execution if one validation condition fails:\n\n```cc\nvoid ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0,\n                            const Tensor& in1) override {\n  OP_REQUIRES(\n      ctx, in0.dims() >= 2,\n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n\n  OP_REQUIRES(\n      ctx, in1.dims() >= 2,\n      errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in1.dims()));\n}\n  \nvoid Compute(OpKernelContext* ctx) override {\n  const Tensor& in0 = ctx->input(0);\n  const Tensor& in1 = ctx->input(1);\n\n  ValidateInputTensors(ctx, in0, in1);\n\n  MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\n  ...\n}\n```\n  \nSince `OP_REQUIRES` only sets `ctx->status()` to a non-OK value and calls `return`, this allows malicious attackers to trigger an out of bounds read:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\nmatrix_array = np.array([])\nmatrix_tensor = tf.convert_to_tensor(np.reshape(matrix_array,(1,0)),dtype=tf.float32)\nrhs_array = np.array([])\nrhs_tensor = tf.convert_to_tensor(np.reshape(rhs_array,(0,1)),dtype=tf.float32)\n\ntf.raw_ops.MatrixTriangularSolve(matrix=matrix_tensor,rhs=rhs_tensor,lower=False,adjoint=False)\n```\n\nAs the two input tensors are empty, the `OP_REQUIRES` in `ValidateInputTensors` should fire and interrupt execution. However, given the implementation of `OP_REQUIRES`, after the `in0.dims() >= 2` fails, execution moves to the initialization of the `bcast` object. This initialization is done with invalid data and results in heap OOB read.\n\n### Patches\nWe have patched the issue in GitHub commit [480641e3599775a8895254ffbc0fc45621334f68](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ye Zhang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/480641e3599775a8895254ffbc0fc45621334f68",
            "commit_sha":"480641e3599775a8895254ffbc0fc45621334f68",
            "patch":"SINGLE",
            "chain_ord":"['480641e3599775a8895254ffbc0fc45621334f68']",
            "before_first_fix_commit":"{'8cae746d8449c7dda5298327353d68613f16e798'}",
            "last_fix_commit":"480641e3599775a8895254ffbc0fc45621334f68",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/24\/2021, 23:47:25",
            "message":"Validate (and ensure validation sticks) inputs for `MatrixTriangularSolve`.\n\nPiperOrigin-RevId: 370282444\nChange-Id: Iaed61a0b0727cc42c830658b72eb69f785f48dc5",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 4, 'total': 20}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h': {'additions': 16, 'deletions': 4, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/480641e3599775a8895254ffbc0fc45621334f68\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_triangular_solve_op_impl.h', 'patch': '@@ -162,6 +162,9 @@ class BaseMatrixTriangularSolveOp : public OpKernel {\\n     const Tensor& in1 = ctx->input(1);\\n \\n     ValidateInputTensors(ctx, in0, in1);\\n+    if (!ctx->status().ok()) {\\n+      return;\\n+    }\\n \\n     MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\\n     OP_REQUIRES(\\n@@ -230,13 +233,22 @@ class MatrixTriangularSolveOp\\n  private:\\n   void ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0,\\n                             const Tensor& in1) override {\\n+    const auto in0_num_dims = in0.dims();\\n     OP_REQUIRES(\\n-        ctx, in0.dims() >= 2,\\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\\n+        ctx, in0_num_dims >= 2,\\n+        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0_num_dims));\\n \\n+    const auto in1_num_dims = in1.dims();\\n     OP_REQUIRES(\\n-        ctx, in1.dims() >= 2,\\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in1.dims()));\\n+        ctx, in1_num_dims >= 2,\\n+        errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1_num_dims));\\n+\\n+    const auto in0_last_dim = in0.dim_size(in0_num_dims - 1);\\n+    const auto in0_prev_dim = in0.dim_size(in0_num_dims - 2);\\n+    OP_REQUIRES(ctx, in0_last_dim == in0_prev_dim,\\n+                errors::InvalidArgument(\\n+                    \"In[0] matrices in the last dimensions must be square (\",\\n+                    in0_last_dim, \" =\/= \", in0_prev_dim, \")\"));\\n   }\\n };'}}",
            "message_norm":"validate (and ensure validation sticks) inputs for `matrixtriangularsolve`.\n\npiperorigin-revid: 370282444\nchange-id: iaed61a0b0727cc42c830658b72eb69f785f48dc5",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('370282444', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h'])",
            "num_files":1.0,
            "patch_content":"From 480641e3599775a8895254ffbc0fc45621334f68 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Sat, 24 Apr 2021 16:47:25 -0700\nSubject: [PATCH] Validate (and ensure validation sticks) inputs for\n `MatrixTriangularSolve`.\n\nPiperOrigin-RevId: 370282444\nChange-Id: Iaed61a0b0727cc42c830658b72eb69f785f48dc5\n---\n ...\/linalg\/matrix_triangular_solve_op_impl.h  | 20 +++++++++++++++----\n 1 file changed, 16 insertions(+), 4 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h b\/tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h\nindex 99249f792b6ed8..ce5392e62b9fa6 100644\n--- a\/tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h\n+++ b\/tensorflow\/core\/kernels\/linalg\/matrix_triangular_solve_op_impl.h\n@@ -162,6 +162,9 @@ class BaseMatrixTriangularSolveOp : public OpKernel {\n     const Tensor& in1 = ctx->input(1);\n \n     ValidateInputTensors(ctx, in0, in1);\n+    if (!ctx->status().ok()) {\n+      return;\n+    }\n \n     MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\n     OP_REQUIRES(\n@@ -230,13 +233,22 @@ class MatrixTriangularSolveOp\n  private:\n   void ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0,\n                             const Tensor& in1) override {\n+    const auto in0_num_dims = in0.dims();\n     OP_REQUIRES(\n-        ctx, in0.dims() >= 2,\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n+        ctx, in0_num_dims >= 2,\n+        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0_num_dims));\n \n+    const auto in1_num_dims = in1.dims();\n     OP_REQUIRES(\n-        ctx, in1.dims() >= 2,\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in1.dims()));\n+        ctx, in1_num_dims >= 2,\n+        errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1_num_dims));\n+\n+    const auto in0_last_dim = in0.dim_size(in0_num_dims - 1);\n+    const auto in0_prev_dim = in0.dim_size(in0_num_dims - 2);\n+    OP_REQUIRES(ctx, in0_last_dim == in0_prev_dim,\n+                errors::InvalidArgument(\n+                    \"In[0] matrices in the last dimensions must be square (\",\n+                    in0_last_dim, \" =\/= \", in0_prev_dim, \")\"));\n   }\n };",
            "code_diff":"@@ -162,6 +162,9 @@ class BaseMatrixTriangularSolveOp : public OpKernel {\n     const Tensor& in1 = ctx->input(1);\n \n     ValidateInputTensors(ctx, in0, in1);\n+    if (!ctx->status().ok()) {\n+      return;\n+    }\n \n     MatMulBCast bcast(in0.shape().dim_sizes(), in1.shape().dim_sizes());\n     OP_REQUIRES(\n@@ -230,13 +233,22 @@ class MatrixTriangularSolveOp\n  private:\n   void ValidateInputTensors(OpKernelContext* ctx, const Tensor& in0,\n                             const Tensor& in1) override {\n+    const auto in0_num_dims = in0.dims();\n     OP_REQUIRES(\n-        ctx, in0.dims() >= 2,\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0.dims()));\n+        ctx, in0_num_dims >= 2,\n+        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in0_num_dims));\n \n+    const auto in1_num_dims = in1.dims();\n     OP_REQUIRES(\n-        ctx, in1.dims() >= 2,\n-        errors::InvalidArgument(\"In[0] ndims must be >= 2: \", in1.dims()));\n+        ctx, in1_num_dims >= 2,\n+        errors::InvalidArgument(\"In[1] ndims must be >= 2: \", in1_num_dims));\n+\n+    const auto in0_last_dim = in0.dim_size(in0_num_dims - 1);\n+    const auto in0_prev_dim = in0.dim_size(in0_num_dims - 2);\n+    OP_REQUIRES(ctx, in0_last_dim == in0_prev_dim,\n+                errors::InvalidArgument(\n+                    \"In[0] matrices in the last dimensions must be square (\",\n+                    in0_last_dim, \" =\/= \", in0_prev_dim, \")\"));\n   }\n };"
        },
        {
            "index":79,
            "vuln_id":"GHSA-fv25-wrff-wf86",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281'}",
            "dataset":"osv",
            "summary":"Missing validation causes denial of service via `GetSessionTensor` ### Impact\nThe implementation of [`tf.raw_ops.GetSessionTensor`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/session_ops.cc#L94-L112) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\nhandle = tf.constant(\"[]\", shape=[0], dtype=tf.string)\ntf.raw_ops.GetSessionTensor(handle=handle)\n```\n  \nThe code assumes `handle` is a scalar but there is no validation for this:\n  \n```cc\n    const Tensor& handle = ctx->input(0);\n    const string& name = handle.scalar<tstring>()();\n```\n\n### Patches\nWe have patched the issue in GitHub commit [48305e8ffe5246d67570b64096a96f8e315a7281](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Neophytos Christou from Secure Systems Lab at Brown University.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/48305e8ffe5246d67570b64096a96f8e315a7281",
            "commit_sha":"48305e8ffe5246d67570b64096a96f8e315a7281",
            "patch":"SINGLE",
            "chain_ord":"['48305e8ffe5246d67570b64096a96f8e315a7281']",
            "before_first_fix_commit":"{'13d38a07ce9143e044aa737cfd7bb759d0e9b400'}",
            "last_fix_commit":"48305e8ffe5246d67570b64096a96f8e315a7281",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 19:25:03",
            "message":"Fix tf.raw_ops.GetSessionTensor vulnerability with invalid handle.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445218701",
            "author":"Alan Liu",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/session_ops.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/48305e8ffe5246d67570b64096a96f8e315a7281\/tensorflow%2Fcore%2Fkernels%2Fsession_ops.cc', 'patch': '@@ -98,6 +98,8 @@ class GetSessionTensorOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* ctx) override {\\n     const Tensor& handle = ctx->input(0);\\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\\n+                errors::InvalidArgument(\"handle must be scalar\"));\\n     const string& name = handle.scalar<tstring>()();\\n     Tensor val;\\n     auto session_state = ctx->session_state();'}}",
            "message_norm":"fix tf.raw_ops.getsessiontensor vulnerability with invalid handle.\n\ncheck that input is actually a scalar before treating it as such.\n\npiperorigin-revid: 445218701",
            "language":"en",
            "entities":"[('vulnerability', 'SECWORD', ''), ('445218701', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/session_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From 48305e8ffe5246d67570b64096a96f8e315a7281 Mon Sep 17 00:00:00 2001\nFrom: Alan Liu <liualan@google.com>\nDate: Thu, 28 Apr 2022 12:25:03 -0700\nSubject: [PATCH] Fix tf.raw_ops.GetSessionTensor vulnerability with invalid\n handle.\n\nCheck that input is actually a scalar before treating it as such.\n\nPiperOrigin-RevId: 445218701\n---\n tensorflow\/core\/kernels\/session_ops.cc | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/session_ops.cc b\/tensorflow\/core\/kernels\/session_ops.cc\nindex 11f991e1ba34fe..bb47288b1575ad 100644\n--- a\/tensorflow\/core\/kernels\/session_ops.cc\n+++ b\/tensorflow\/core\/kernels\/session_ops.cc\n@@ -98,6 +98,8 @@ class GetSessionTensorOp : public OpKernel {\n \n   void Compute(OpKernelContext* ctx) override {\n     const Tensor& handle = ctx->input(0);\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\n+                errors::InvalidArgument(\"handle must be scalar\"));\n     const string& name = handle.scalar<tstring>()();\n     Tensor val;\n     auto session_state = ctx->session_state();",
            "code_diff":"@@ -98,6 +98,8 @@ class GetSessionTensorOp : public OpKernel {\n \n   void Compute(OpKernelContext* ctx) override {\n     const Tensor& handle = ctx->input(0);\n+    OP_REQUIRES(ctx, TensorShapeUtils::IsScalar(handle.shape()),\n+                errors::InvalidArgument(\"handle must be scalar\"));\n     const string& name = handle.scalar<tstring>()();\n     Tensor val;\n     auto session_state = ctx->session_state();"
        },
        {
            "index":829,
            "vuln_id":"GHSA-8g7p-74h8-hg48",
            "cwe_id":"{'CWE-400', 'CWE-125'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/1c24219df87524e6ed973127e81f30801d658f07'}",
            "dataset":"osv",
            "summary":"Denial of Service in https-proxy-agent Versions of `https-proxy-agent` before 2.2.0 are vulnerable to denial of service. This is due to unsanitized options (proxy.auth) being passed to `Buffer()`.\n\n\n## Recommendation\n\nUpdate to version 2.2.0 or later.",
            "published_date":"2018-07-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent",
            "commit_href":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/1c24219df87524e6ed973127e81f30801d658f07",
            "commit_sha":"1c24219df87524e6ed973127e81f30801d658f07",
            "patch":"SINGLE",
            "chain_ord":"['1c24219df87524e6ed973127e81f30801d658f07']",
            "before_first_fix_commit":"{'c58d365dd153104d1147967a0a6b4e1dd1698e50'}",
            "last_fix_commit":"1c24219df87524e6ed973127e81f30801d658f07",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/03\/2018, 19:31:04",
            "message":"Use `Buffer.from()`\n\n`new Buffer()` is deprecated and unsafe.",
            "author":"Nathan Rajlich",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/raw\/1c24219df87524e6ed973127e81f30801d658f07\/index.js', 'patch': \"@@ -204,7 +204,7 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\\n   var headers = Object.assign({}, proxy.headers);\\n   if (proxy.auth) {\\n     headers['Proxy-Authorization'] =\\n-      'Basic ' + new Buffer(proxy.auth).toString('base64');\\n+      'Basic ' + Buffer.from(proxy.auth).toString('base64');\\n   }\\n \\n   \/\/ the Host header should only include the port\"}}",
            "message_norm":"use `buffer.from()`\n\n`new buffer()` is deprecated and unsafe.",
            "language":"en",
            "entities":"[('unsafe', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 1c24219df87524e6ed973127e81f30801d658f07 Mon Sep 17 00:00:00 2001\nFrom: Nathan Rajlich <nathan@tootallnate.net>\nDate: Sat, 3 Mar 2018 11:31:04 -0800\nSubject: [PATCH] Use `Buffer.from()`\n\n`new Buffer()` is deprecated and unsafe.\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex 69985780..4e007128 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -204,7 +204,7 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\n   var headers = Object.assign({}, proxy.headers);\n   if (proxy.auth) {\n     headers['Proxy-Authorization'] =\n-      'Basic ' + new Buffer(proxy.auth).toString('base64');\n+      'Basic ' + Buffer.from(proxy.auth).toString('base64');\n   }\n \n   \/\/ the Host header should only include the port",
            "code_diff":"@@ -204,7 +204,7 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\n   var headers = Object.assign({}, proxy.headers);\n   if (proxy.auth) {\n     headers['Proxy-Authorization'] =\n-      'Basic ' + new Buffer(proxy.auth).toString('base64');\n+      'Basic ' + Buffer.from(proxy.auth).toString('base64');\n   }\n \n   \/\/ the Host header should only include the port"
        },
        {
            "index":559,
            "vuln_id":"GHSA-c558-5gfm-p2r8",
            "cwe_id":"{'CWE-79'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}",
            "dataset":"osv",
            "summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org",
            "published_date":"2022-08-06",
            "chain_len":4,
            "project":"https:\/\/github.com\/DSpace\/DSpace",
            "commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5",
            "commit_sha":"6f75bb084ab1937d094208c55cd84340040bcbb5",
            "patch":"MULTI",
            "chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']",
            "before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}",
            "last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5",
            "chain_ord_pos":4.0,
            "commit_datetime":"07\/26\/2022, 21:12:22",
            "message":"[DS-4453] Discovery autocomplete HTML escaping (JSPUI)",
            "author":"Kim Shepherd",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 2, 'total': 9}",
            "files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/6f75bb084ab1937d094208c55cd84340040bcbb5\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -141,7 +141,7 @@\\n \\t\\t\\t\\t\\t\\t\\t\\t\\ttmp_val = item.displayedValue;\\n \\t\\t\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\t\\t\\treturn {\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: item.displayedValue + \" (\" + item.count + \")\",\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel: escapeHtml(item.displayedValue) + \" (\" + item.count + \")\",\\n \\t\\t\\t\\t\\t\\t\\t\\t\\tvalue: tmp_val\\n \\t\\t\\t\\t\\t\\t\\t\\t};\\n \\t\\t\\t\\t\\t\\t\\t}))\\t\\t\\t\\n@@ -153,7 +153,12 @@\\n \\tfunction validateFilters() {\\n \\t\\treturn document.getElementById(\"filterquery\").value.length > 0;\\n \\t}\\n-<\/script>\\t\\t\\n+\\t\/\/ Generic HTML escape utility\\n+\\tvar escapeHtml = s => (s + \\'\\').replace(\/[&<>\"\\']\/g, m => ({\\n+\\t\\t\\'&\\': \\'&amp;\\', \\'<\\': \\'&lt;\\', \\'>\\': \\'&gt;\\',\\n+\\t\\t\\'\"\\': \\'&quot;\\', \"\\'\": \\'&#39;\\'\\n+\\t})[m]);\\n+<\/script>\\n <\/c:set>\\n \\n <dspace:layout titlekey=\"jsp.search.title\">'}}",
            "message_norm":"[ds-4453] discovery autocomplete html escaping (jspui)",
            "language":"it",
            "entities":"[('escaping', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])",
            "num_files":1.0,
            "patch_content":"From 6f75bb084ab1937d094208c55cd84340040bcbb5 Mon Sep 17 00:00:00 2001\nFrom: Kim Shepherd <kim@shepherd.nz>\nDate: Wed, 27 Jul 2022 09:12:22 +1200\nSubject: [PATCH] [DS-4453] Discovery autocomplete HTML escaping (JSPUI)\n\n---\n dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp | 9 +++++++--\n 1 file changed, 7 insertions(+), 2 deletions(-)\n\ndiff --git a\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp b\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\nindex ec97afb90fc7..154e014add85 100644\n--- a\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\n+++ b\/dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp\n@@ -141,7 +141,7 @@\n \t\t\t\t\t\t\t\t\ttmp_val = item.displayedValue;\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\treturn {\n-\t\t\t\t\t\t\t\t\tlabel: item.displayedValue + \" (\" + item.count + \")\",\n+\t\t\t\t\t\t\t\t\tlabel: escapeHtml(item.displayedValue) + \" (\" + item.count + \")\",\n \t\t\t\t\t\t\t\t\tvalue: tmp_val\n \t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t}))\t\t\t\n@@ -153,7 +153,12 @@\n \tfunction validateFilters() {\n \t\treturn document.getElementById(\"filterquery\").value.length > 0;\n \t}\n-<\/script>\t\t\n+\t\/\/ Generic HTML escape utility\n+\tvar escapeHtml = s => (s + '').replace(\/[&<>\"']\/g, m => ({\n+\t\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n+\t\t'\"': '&quot;', \"'\": '&#39;'\n+\t})[m]);\n+<\/script>\n <\/c:set>\n \n <dspace:layout titlekey=\"jsp.search.title\">",
            "code_diff":"@@ -141,7 +141,7 @@\n \t\t\t\t\t\t\t\t\ttmp_val = item.displayedValue;\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t\treturn {\n-\t\t\t\t\t\t\t\t\tlabel: item.displayedValue + \" (\" + item.count + \")\",\n+\t\t\t\t\t\t\t\t\tlabel: escapeHtml(item.displayedValue) + \" (\" + item.count + \")\",\n \t\t\t\t\t\t\t\t\tvalue: tmp_val\n \t\t\t\t\t\t\t\t};\n \t\t\t\t\t\t\t}))\t\t\t\n@@ -153,7 +153,12 @@\n \tfunction validateFilters() {\n \t\treturn document.getElementById(\"filterquery\").value.length > 0;\n \t}\n-<\/script>\t\t\n+\t\/\/ Generic HTML escape utility\n+\tvar escapeHtml = s => (s + '').replace(\/[&<>\"']\/g, m => ({\n+\t\t'&': '&amp;', '<': '&lt;', '>': '&gt;',\n+\t\t'\"': '&quot;', \"'\": '&#39;'\n+\t})[m]);\n+<\/script>\n <\/c:set>\n \n <dspace:layout titlekey=\"jsp.search.title\">"
        },
        {
            "index":88,
            "vuln_id":"GHSA-hpv4-7p9c-mvfr",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `FractionalAvgPoolGrad` ### Impact\nThe implementation for `tf.raw_ops.FractionalAvgPoolGrad` can be tricked into accessing data outside of bounds of heap allocated buffers:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.FractionalAvgPoolGrad(\n  orig_input_tensor_shape=[0,1,2,3],\n  out_backprop = np.array([[[[541],[541]],[[541],[541]]]]),\n  row_pooling_sequence=[0, 0, 0, 0, 0],\n  col_pooling_sequence=[-2, 0, 0, 2, 0],\n  overlapping=True)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L205) does not validate that the input tensor is non-empty. Thus, code constructs an empty `EigenDoubleMatrixMap` and then accesses this buffer with indices that are outside of the empty area.\n\n### Patches\nWe have patched the issue in GitHub commit [0f931751fb20f565c4e94aa6df58d54a003cdb30](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "commit_sha":"0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "patch":"SINGLE",
            "chain_ord":"['0f931751fb20f565c4e94aa6df58d54a003cdb30']",
            "before_first_fix_commit":"{'55e763ffe2b348a61ab1c2fcfedc7bdf05c91990'}",
            "last_fix_commit":"0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2021, 20:03:44",
            "message":"Validate dimensions of input tensor in `FractionalAvgPoolGrad`\n\nPiperOrigin-RevId: 388286227\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'tensorflow\/core\/kernels\/fractional_avg_pool_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0f931751fb20f565c4e94aa6df58d54a003cdb30\/tensorflow%2Fcore%2Fkernels%2Ffractional_avg_pool_op.cc', 'patch': '@@ -271,6 +271,18 @@ class FractionalAvgPoolGradOp : public OpKernel {\\n     const int64_t in_rows = orig_input_tensor_shape_flat(1);\\n     const int64_t in_cols = orig_input_tensor_shape_flat(2);\\n     const int64_t in_depth = orig_input_tensor_shape_flat(3);\\n+    OP_REQUIRES(\\n+        context, in_batch != 0,\\n+        errors::InvalidArgument(\"Batch dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_rows != 0,\\n+        errors::InvalidArgument(\"Rows dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_cols != 0,\\n+        errors::InvalidArgument(\"Columns dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_depth != 0,\\n+        errors::InvalidArgument(\"Depth dimension of input must not be 0\"));\\n \\n     constexpr int tensor_in_and_out_dims = 4;\\n     \/\/ Transform orig_input_tensor_shape into TensorShape'}}",
            "message_norm":"validate dimensions of input tensor in `fractionalavgpoolgrad`\n\npiperorigin-revid: 388286227\nchange-id: ieb7566155e92acc8993a2212c76deacadc0edc8a",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('388286227', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_avg_pool_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 0f931751fb20f565c4e94aa6df58d54a003cdb30 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Mon, 2 Aug 2021 13:03:44 -0700\nSubject: [PATCH] Validate dimensions of input tensor in\n `FractionalAvgPoolGrad`\n\nPiperOrigin-RevId: 388286227\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a\n---\n tensorflow\/core\/kernels\/fractional_avg_pool_op.cc | 12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc b\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc\nindex 3c80e87bcf76dc..63f8d67d93cc47 100644\n--- a\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc\n+++ b\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc\n@@ -271,6 +271,18 @@ class FractionalAvgPoolGradOp : public OpKernel {\n     const int64_t in_rows = orig_input_tensor_shape_flat(1);\n     const int64_t in_cols = orig_input_tensor_shape_flat(2);\n     const int64_t in_depth = orig_input_tensor_shape_flat(3);\n+    OP_REQUIRES(\n+        context, in_batch != 0,\n+        errors::InvalidArgument(\"Batch dimension of input must not be 0\"));\n+    OP_REQUIRES(\n+        context, in_rows != 0,\n+        errors::InvalidArgument(\"Rows dimension of input must not be 0\"));\n+    OP_REQUIRES(\n+        context, in_cols != 0,\n+        errors::InvalidArgument(\"Columns dimension of input must not be 0\"));\n+    OP_REQUIRES(\n+        context, in_depth != 0,\n+        errors::InvalidArgument(\"Depth dimension of input must not be 0\"));\n \n     constexpr int tensor_in_and_out_dims = 4;\n     \/\/ Transform orig_input_tensor_shape into TensorShape",
            "code_diff":"@@ -271,6 +271,18 @@ class FractionalAvgPoolGradOp : public OpKernel {\n     const int64_t in_rows = orig_input_tensor_shape_flat(1);\n     const int64_t in_cols = orig_input_tensor_shape_flat(2);\n     const int64_t in_depth = orig_input_tensor_shape_flat(3);\n+    OP_REQUIRES(\n+        context, in_batch != 0,\n+        errors::InvalidArgument(\"Batch dimension of input must not be 0\"));\n+    OP_REQUIRES(\n+        context, in_rows != 0,\n+        errors::InvalidArgument(\"Rows dimension of input must not be 0\"));\n+    OP_REQUIRES(\n+        context, in_cols != 0,\n+        errors::InvalidArgument(\"Columns dimension of input must not be 0\"));\n+    OP_REQUIRES(\n+        context, in_depth != 0,\n+        errors::InvalidArgument(\"Depth dimension of input must not be 0\"));\n \n     constexpr int tensor_in_and_out_dims = 4;\n     \/\/ Transform orig_input_tensor_shape into TensorShape"
        },
        {
            "index":284,
            "vuln_id":"GHSA-3x62-x456-q2vm",
            "cwe_id":"{'CWE-77', 'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/feross\/git-pull-or-clone\/commit\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3'}",
            "dataset":"osv",
            "summary":"OS Command Injection in git-pull-or-clone The package git-pull-or-clone before 2.0.2 is vulnerable to Command Injection due to the use of the --upload-pack feature of git which is also supported for git clone. The source includes the use of the secure child process API spawn(). However, the outpath parameter passed to it may be a command-line argument to the git clone command and result in arbitrary command injection.",
            "published_date":"2022-05-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/feross\/git-pull-or-clone",
            "commit_href":"https:\/\/github.com\/feross\/git-pull-or-clone\/commit\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3",
            "commit_sha":"f9ce092be13cc32e685dfa26e7705e9c6e3108a3",
            "patch":"SINGLE",
            "chain_ord":"['f9ce092be13cc32e685dfa26e7705e9c6e3108a3']",
            "before_first_fix_commit":"{'4f8b9baf295e6d2e5dd987abca820987afb7643c'}",
            "last_fix_commit":"f9ce092be13cc32e685dfa26e7705e9c6e3108a3",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/06\/2022, 10:13:53",
            "message":"fix: fix command injection vector",
            "author":"Liran Tal",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/feross\/git-pull-or-clone\/raw\/f9ce092be13cc32e685dfa26e7705e9c6e3108a3\/index.js', 'patch': \"@@ -28,7 +28,7 @@ function gitPullOrClone (url, outPath, opts, cb) {\\n   function gitClone () {\\n     \/\/ --depth implies --single-branch\\n     const flag = depth < Infinity ? '--depth=' + depth : '--single-branch'\\n-    const args = ['clone', flag, url, outPath]\\n+    const args = ['clone', flag, '--', url, outPath]\\n     debug('git ' + args.join(' '))\\n     spawn('git', args, {}, function (err) {\\n       if (err) err.message += ' (git clone) (' + url + ')'\"}}",
            "message_norm":"fix: fix command injection vector",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('command injection', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From f9ce092be13cc32e685dfa26e7705e9c6e3108a3 Mon Sep 17 00:00:00 2001\nFrom: Liran Tal <liran.tal@gmail.com>\nDate: Wed, 6 Apr 2022 13:13:53 +0300\nSubject: [PATCH] fix: fix command injection vector\n\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex c38c84d..aa40114 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -28,7 +28,7 @@ function gitPullOrClone (url, outPath, opts, cb) {\n   function gitClone () {\n     \/\/ --depth implies --single-branch\n     const flag = depth < Infinity ? '--depth=' + depth : '--single-branch'\n-    const args = ['clone', flag, url, outPath]\n+    const args = ['clone', flag, '--', url, outPath]\n     debug('git ' + args.join(' '))\n     spawn('git', args, {}, function (err) {\n       if (err) err.message += ' (git clone) (' + url + ')'",
            "code_diff":"@@ -28,7 +28,7 @@ function gitPullOrClone (url, outPath, opts, cb) {\n   function gitClone () {\n     \/\/ --depth implies --single-branch\n     const flag = depth < Infinity ? '--depth=' + depth : '--single-branch'\n-    const args = ['clone', flag, url, outPath]\n+    const args = ['clone', flag, '--', url, outPath]\n     debug('git ' + args.join(' '))\n     spawn('git', args, {}, function (err) {\n       if (err) err.message += ' (git clone) (' + url + ')'"
        },
        {
            "index":799,
            "vuln_id":"GHSA-3cgf-9m6x-pwwr",
            "cwe_id":"{'CWE-362'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/rusqlite\/rusqlite\/commit\/45fd77ee43c38eea4d6f4e2e56c1667a55ec654f'}",
            "dataset":"osv",
            "summary":"Data races in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via UnlockNotification.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/rusqlite\/rusqlite",
            "commit_href":"https:\/\/github.com\/rusqlite\/rusqlite\/commit\/45fd77ee43c38eea4d6f4e2e56c1667a55ec654f",
            "commit_sha":"45fd77ee43c38eea4d6f4e2e56c1667a55ec654f",
            "patch":"SINGLE",
            "chain_ord":"['45fd77ee43c38eea4d6f4e2e56c1667a55ec654f']",
            "before_first_fix_commit":"{'c9ef5bd63cad5c0c123344c072b490a1a9bcbe1f'}",
            "last_fix_commit":"45fd77ee43c38eea4d6f4e2e56c1667a55ec654f",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/15\/2020, 19:05:31",
            "message":"UnlockNotification should hold mutex when calling condvar",
            "author":"Thom Chiovoloni",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 11, 'total': 20}",
            "files":"{'src\/unlock_notify.rs': {'additions': 9, 'deletions': 11, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rusqlite\/rusqlite\/raw\/45fd77ee43c38eea4d6f4e2e56c1667a55ec654f\/src%2Funlock_notify.rs', 'patch': '@@ -26,12 +26,13 @@ impl UnlockNotification {\\n         }\\n     }\\n \\n-    fn fired(&mut self) {\\n-        *self.mutex.lock().unwrap() = true;\\n+    fn fired(&self) {\\n+        let mut flag = self.mutex.lock().unwrap();\\n+        *flag = true;\\n         self.cond.notify_one();\\n     }\\n \\n-    fn wait(&mut self) {\\n+    fn wait(&self) {\\n         let mut fired = self.mutex.lock().unwrap();\\n         while !*fired {\\n             fired = self.cond.wait(fired).unwrap();\\n@@ -43,12 +44,9 @@ impl UnlockNotification {\\n #[cfg(feature = \"unlock_notify\")]\\n unsafe extern \"C\" fn unlock_notify_cb(ap_arg: *mut *mut c_void, n_arg: c_int) {\\n     use std::slice::from_raw_parts;\\n-    let args = from_raw_parts(ap_arg, n_arg as usize);\\n-    for arg in args {\\n-        let _ = catch_unwind(|| {\\n-            let un: &mut UnlockNotification = &mut *(*arg as *mut UnlockNotification);\\n-            un.fired()\\n-        });\\n+    let args = from_raw_parts(ap_arg as *const &UnlockNotification, n_arg as usize);\\n+    for un in args {\\n+        let _ = catch_unwind(std::panic::AssertUnwindSafe(|| un.fired()));\\n     }\\n }\\n \\n@@ -73,12 +71,12 @@ pub unsafe fn is_locked(db: *mut ffi::sqlite3, rc: c_int) -> bool {\\n \/\/\/ back the current transaction (if any).\\n #[cfg(feature = \"unlock_notify\")]\\n pub unsafe fn wait_for_unlock_notify(db: *mut ffi::sqlite3) -> c_int {\\n-    let mut un = UnlockNotification::new();\\n+    let un = UnlockNotification::new();\\n     \/* Register for an unlock-notify callback. *\/\\n     let rc = ffi::sqlite3_unlock_notify(\\n         db,\\n         Some(unlock_notify_cb),\\n-        &mut un as *mut UnlockNotification as *mut c_void,\\n+        &un as *const UnlockNotification as *mut c_void,\\n     );\\n     debug_assert!(\\n         rc == ffi::SQLITE_LOCKED || rc == ffi::SQLITE_LOCKED_SHAREDCACHE || rc == ffi::SQLITE_OK'}}",
            "message_norm":"unlocknotification should hold mutex when calling condvar",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/unlock_notify.rs'])",
            "num_files":1.0,
            "patch_content":"From 45fd77ee43c38eea4d6f4e2e56c1667a55ec654f Mon Sep 17 00:00:00 2001\nFrom: Thom Chiovoloni <tchiovoloni@mozilla.com>\nDate: Wed, 15 Apr 2020 12:05:31 -0700\nSubject: [PATCH] UnlockNotification should hold mutex when calling condvar\n\n---\n src\/unlock_notify.rs | 20 +++++++++-----------\n 1 file changed, 9 insertions(+), 11 deletions(-)\n\ndiff --git a\/src\/unlock_notify.rs b\/src\/unlock_notify.rs\nindex 6f82ae269..af2a06c60 100644\n--- a\/src\/unlock_notify.rs\n+++ b\/src\/unlock_notify.rs\n@@ -26,12 +26,13 @@ impl UnlockNotification {\n         }\n     }\n \n-    fn fired(&mut self) {\n-        *self.mutex.lock().unwrap() = true;\n+    fn fired(&self) {\n+        let mut flag = self.mutex.lock().unwrap();\n+        *flag = true;\n         self.cond.notify_one();\n     }\n \n-    fn wait(&mut self) {\n+    fn wait(&self) {\n         let mut fired = self.mutex.lock().unwrap();\n         while !*fired {\n             fired = self.cond.wait(fired).unwrap();\n@@ -43,12 +44,9 @@ impl UnlockNotification {\n #[cfg(feature = \"unlock_notify\")]\n unsafe extern \"C\" fn unlock_notify_cb(ap_arg: *mut *mut c_void, n_arg: c_int) {\n     use std::slice::from_raw_parts;\n-    let args = from_raw_parts(ap_arg, n_arg as usize);\n-    for arg in args {\n-        let _ = catch_unwind(|| {\n-            let un: &mut UnlockNotification = &mut *(*arg as *mut UnlockNotification);\n-            un.fired()\n-        });\n+    let args = from_raw_parts(ap_arg as *const &UnlockNotification, n_arg as usize);\n+    for un in args {\n+        let _ = catch_unwind(std::panic::AssertUnwindSafe(|| un.fired()));\n     }\n }\n \n@@ -73,12 +71,12 @@ pub unsafe fn is_locked(db: *mut ffi::sqlite3, rc: c_int) -> bool {\n \/\/\/ back the current transaction (if any).\n #[cfg(feature = \"unlock_notify\")]\n pub unsafe fn wait_for_unlock_notify(db: *mut ffi::sqlite3) -> c_int {\n-    let mut un = UnlockNotification::new();\n+    let un = UnlockNotification::new();\n     \/* Register for an unlock-notify callback. *\/\n     let rc = ffi::sqlite3_unlock_notify(\n         db,\n         Some(unlock_notify_cb),\n-        &mut un as *mut UnlockNotification as *mut c_void,\n+        &un as *const UnlockNotification as *mut c_void,\n     );\n     debug_assert!(\n         rc == ffi::SQLITE_LOCKED || rc == ffi::SQLITE_LOCKED_SHAREDCACHE || rc == ffi::SQLITE_OK",
            "code_diff":"@@ -26,12 +26,13 @@ impl UnlockNotification {\n         }\n     }\n \n-    fn fired(&mut self) {\n-        *self.mutex.lock().unwrap() = true;\n+    fn fired(&self) {\n+        let mut flag = self.mutex.lock().unwrap();\n+        *flag = true;\n         self.cond.notify_one();\n     }\n \n-    fn wait(&mut self) {\n+    fn wait(&self) {\n         let mut fired = self.mutex.lock().unwrap();\n         while !*fired {\n             fired = self.cond.wait(fired).unwrap();\n@@ -43,12 +44,9 @@ impl UnlockNotification {\n #[cfg(feature = \"unlock_notify\")]\n unsafe extern \"C\" fn unlock_notify_cb(ap_arg: *mut *mut c_void, n_arg: c_int) {\n     use std::slice::from_raw_parts;\n-    let args = from_raw_parts(ap_arg, n_arg as usize);\n-    for arg in args {\n-        let _ = catch_unwind(|| {\n-            let un: &mut UnlockNotification = &mut *(*arg as *mut UnlockNotification);\n-            un.fired()\n-        });\n+    let args = from_raw_parts(ap_arg as *const &UnlockNotification, n_arg as usize);\n+    for un in args {\n+        let _ = catch_unwind(std::panic::AssertUnwindSafe(|| un.fired()));\n     }\n }\n \n@@ -73,12 +71,12 @@ pub unsafe fn is_locked(db: *mut ffi::sqlite3, rc: c_int) -> bool {\n \/\/\/ back the current transaction (if any).\n #[cfg(feature = \"unlock_notify\")]\n pub unsafe fn wait_for_unlock_notify(db: *mut ffi::sqlite3) -> c_int {\n-    let mut un = UnlockNotification::new();\n+    let un = UnlockNotification::new();\n     \/* Register for an unlock-notify callback. *\/\n     let rc = ffi::sqlite3_unlock_notify(\n         db,\n         Some(unlock_notify_cb),\n-        &mut un as *mut UnlockNotification as *mut c_void,\n+        &un as *const UnlockNotification as *mut c_void,\n     );\n     debug_assert!(\n         rc == ffi::SQLITE_LOCKED || rc == ffi::SQLITE_LOCKED_SHAREDCACHE || rc == ffi::SQLITE_OK"
        },
        {
            "index":624,
            "vuln_id":"GHSA-gj85-pvp5-mvf9",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/ptrofimov\/beanstalk_console\/commit\/e351c8260ec1d3718d9e475ee57c7e12c47f19da'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Beanstalk console Beanstalk console prior to version 1.7.12 is vulnerable to cross-site scripting.",
            "published_date":"2022-02-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/ptrofimov\/beanstalk_console",
            "commit_href":"https:\/\/github.com\/ptrofimov\/beanstalk_console\/commit\/e351c8260ec1d3718d9e475ee57c7e12c47f19da",
            "commit_sha":"e351c8260ec1d3718d9e475ee57c7e12c47f19da",
            "patch":"SINGLE",
            "chain_ord":"['e351c8260ec1d3718d9e475ee57c7e12c47f19da']",
            "before_first_fix_commit":"{'95d5808836034835fc33500c6a82276277fabdf9'}",
            "last_fix_commit":"e351c8260ec1d3718d9e475ee57c7e12c47f19da",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/01\/2022, 15:43:02",
            "message":"Sanitize input",
            "author":"Nav-Prak",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/include.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ptrofimov\/beanstalk_console\/raw\/e351c8260ec1d3718d9e475ee57c7e12c47f19da\/lib%2Finclude.php', 'patch': \"@@ -19,7 +19,7 @@ function autoload_class($class) {\\n require_once dirname(__FILE__) . '\/..\/config.php';\\r\\n require_once dirname(__FILE__) . '\/..\/src\/Storage.php';\\r\\n \\r\\n-$GLOBALS['server'] = !empty($_GET['server']) ? $_GET['server'] : '';\\r\\n+$GLOBALS['server'] = !empty($_GET['server']) ? htmlspecialchars($_GET['server']) : '';\\r\\n $GLOBALS['action'] = !empty($_GET['action']) ? $_GET['action'] : '';\\r\\n $GLOBALS['state'] = !empty($_GET['state']) ? $_GET['state'] : '';\\r\\n $GLOBALS['count'] = !empty($_GET['count']) ? $_GET['count'] : '';\"}}",
            "message_norm":"sanitize input",
            "language":"ro",
            "entities":"[('sanitize', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/include.php'])",
            "num_files":1.0,
            "patch_content":"From e351c8260ec1d3718d9e475ee57c7e12c47f19da Mon Sep 17 00:00:00 2001\nFrom: Nav-Prak <54226343+Nav-Prak@users.noreply.github.com>\nDate: Tue, 1 Feb 2022 21:13:02 +0530\nSubject: [PATCH] Sanitize input\n\n---\n lib\/include.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lib\/include.php b\/lib\/include.php\nindex 97b5aea..2e0ba6a 100644\n--- a\/lib\/include.php\n+++ b\/lib\/include.php\n@@ -19,7 +19,7 @@ function autoload_class($class) {\n require_once dirname(__FILE__) . '\/..\/config.php';\r\n require_once dirname(__FILE__) . '\/..\/src\/Storage.php';\r\n \r\n-$GLOBALS['server'] = !empty($_GET['server']) ? $_GET['server'] : '';\r\n+$GLOBALS['server'] = !empty($_GET['server']) ? htmlspecialchars($_GET['server']) : '';\r\n $GLOBALS['action'] = !empty($_GET['action']) ? $_GET['action'] : '';\r\n $GLOBALS['state'] = !empty($_GET['state']) ? $_GET['state'] : '';\r\n $GLOBALS['count'] = !empty($_GET['count']) ? $_GET['count'] : '';",
            "code_diff":"@@ -19,7 +19,7 @@ function autoload_class($class) {\n require_once dirname(__FILE__) . '\/..\/config.php';\n require_once dirname(__FILE__) . '\/..\/src\/Storage.php';\n \n-$GLOBALS['server'] = !empty($_GET['server']) ? $_GET['server'] : '';\n+$GLOBALS['server'] = !empty($_GET['server']) ? htmlspecialchars($_GET['server']) : '';\n $GLOBALS['action'] = !empty($_GET['action']) ? $_GET['action'] : '';\n $GLOBALS['state'] = !empty($_GET['state']) ? $_GET['state'] : '';\n $GLOBALS['count'] = !empty($_GET['count']) ? $_GET['count'] : '';"
        },
        {
            "index":140,
            "vuln_id":"GHSA-gq67-pp9w-43gp",
            "cwe_id":"{'CWE-330', 'CWE-352'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/apache\/myfaces\/commit\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2'}",
            "dataset":"osv",
            "summary":"Cryptographically weak CSRF tokens in Apache MyFaces In the default configuration, Apache MyFaces Core versions 2.2.0 to 2.2.13, 2.3.0 to 2.3.7, 2.3-next-M1 to 2.3-next-M4, and 3.0.0-RC1 use cryptographically weak implicit and explicit cross-site request forgery (CSRF) tokens. Due to that limitation, it is possible (although difficult) for an attacker to calculate a future CSRF token value and to use that value to trick a user into executing unwanted actions on an application.\n\n\nMitigation:\nExisting web.xml configuration parameters can be used to direct\nMyFaces to use SecureRandom for CSRF token generation:\n\norg.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN=secureRandom\norg.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN=secureRandom\norg.apache.myfaces.RANDOM_KEY_IN_WEBSOCKET_SESSION_TOKEN=secureRandom",
            "published_date":"2021-06-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/myfaces",
            "commit_href":"https:\/\/github.com\/apache\/myfaces\/commit\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "commit_sha":"cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "patch":"SINGLE",
            "chain_ord":"['cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2']",
            "before_first_fix_commit":"{'2683d7ec7008eb2a728423ad6e574fa83137b65c', '413d25bfc0ba3a49a06484e17d603a25ce4af436'}",
            "last_fix_commit":"cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/13\/2021, 19:51:15",
            "message":"Merge pull request #132 from wtlucy\/secureRandom_master\n\nMYFACES-4373: prefer SecureRandom for token generation",
            "author":"Thomas Andraschko",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 7, 'total': 14}",
            "files":"{'impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java': {'additions': 7, 'deletions': 7, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/myfaces\/raw\/cc6e1cc7b9aa17e52452f7f2657b3af9c421b2b2\/impl%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Fmyfaces%2Fconfig%2FMyfacesConfig.java', 'patch': '@@ -459,12 +459,12 @@\\n      * Adds a random key to the generated view state session token.\\n      *\/\\n     @JSFWebConfigParam(since=\"2.1.9, 2.0.15\", expectedValues=\"secureRandom, random\", \\n-            defaultValue=\"random\", group=\"state\")\\n+            defaultValue=\"secureRandom\", group=\"state\")\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\";\\n-    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = \"random\";\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_RANDOM = \"random\";\\n+    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM;\\n     \\n     \/**\\n      * Set the default length of the random key added to the view state session token.\\n@@ -499,16 +499,16 @@\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM\";\\n     private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM_DEFAULT = \"SHA1PRNG\";\\n     \\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\\n+    \\n     \/**\\n      * Defines how to generate the csrf session token.\\n      *\/\\n-    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"none\", group=\"state\")\\n+    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"secureRandom\", group=\"state\")\\n     public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN\\n             = \"org.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN\";\\n-    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = \"random\";\\n-    \\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\\n+    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM;\\n     \\n     \/**\\n      * Indicates that the serialized state will be compressed before it is written to the session. By default true.'}}",
            "message_norm":"merge pull request #132 from wtlucy\/securerandom_master\n\nmyfaces-4373: prefer securerandom for token generation",
            "language":"en",
            "entities":"[('#132', 'ISSUE', ''), ('securerandom_master', 'SECWORD', ''), ('securerandom', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java'])",
            "num_files":1.0,
            "patch_content":"From 413d25bfc0ba3a49a06484e17d603a25ce4af436 Mon Sep 17 00:00:00 2001\nFrom: Bill Lucy <wtlucy@gmail.com>\nDate: Tue, 12 Jan 2021 15:15:43 -0500\nSubject: [PATCH] MYFACES-4373: prefer SecureRandom for token generation\n\n---\n ...\/org\/apache\/myfaces\/config\/MyfacesConfig.java   | 14 +++++++-------\n 1 file changed, 7 insertions(+), 7 deletions(-)\n\ndiff --git a\/impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java b\/impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java\nindex 8d5fbd7109..2257810c88 100755\n--- a\/impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java\n+++ b\/impl\/src\/main\/java\/org\/apache\/myfaces\/config\/MyfacesConfig.java\n@@ -459,12 +459,12 @@ public class MyfacesConfig\n      * Adds a random key to the generated view state session token.\n      *\/\n     @JSFWebConfigParam(since=\"2.1.9, 2.0.15\", expectedValues=\"secureRandom, random\", \n-            defaultValue=\"random\", group=\"state\")\n+            defaultValue=\"secureRandom\", group=\"state\")\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\";\n-    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = \"random\";\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_RANDOM = \"random\";\n+    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM;\n     \n     \/**\n      * Set the default length of the random key added to the view state session token.\n@@ -499,16 +499,16 @@ public class MyfacesConfig\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM\";\n     private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM_DEFAULT = \"SHA1PRNG\";\n     \n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\n+    \n     \/**\n      * Defines how to generate the csrf session token.\n      *\/\n-    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"none\", group=\"state\")\n+    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"secureRandom\", group=\"state\")\n     public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN\n             = \"org.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN\";\n-    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = \"random\";\n-    \n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\n+    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM;\n     \n     \/**\n      * Indicates that the serialized state will be compressed before it is written to the session. By default true.",
            "code_diff":"@@ -459,12 +459,12 @@ public class MyfacesConfig\n      * Adds a random key to the generated view state session token.\n      *\/\n     @JSFWebConfigParam(since=\"2.1.9, 2.0.15\", expectedValues=\"secureRandom, random\", \n-            defaultValue=\"random\", group=\"state\")\n+            defaultValue=\"secureRandom\", group=\"state\")\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN\";\n-    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = \"random\";\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\n     public static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_RANDOM = \"random\";\n+    private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM;\n     \n     \/**\n      * Set the default length of the random key added to the view state session token.\n@@ -499,16 +499,16 @@ public class MyfacesConfig\n             = \"org.apache.myfaces.RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM\";\n     private static final String RANDOM_KEY_IN_VIEW_STATE_SESSION_TOKEN_SECURE_RANDOM_ALGORITHM_DEFAULT = \"SHA1PRNG\";\n     \n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\n+    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\n+    \n     \/**\n      * Defines how to generate the csrf session token.\n      *\/\n-    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"none\", group=\"state\")\n+    @JSFWebConfigParam(since=\"2.2.0\", expectedValues=\"secureRandom, random\", defaultValue=\"secureRandom\", group=\"state\")\n     public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN\n             = \"org.apache.myfaces.RANDOM_KEY_IN_CSRF_SESSION_TOKEN\";\n-    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = \"random\";\n-    \n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM = \"secureRandom\";\n-    public static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_RANDOM = \"random\";\n+    private static final String RANDOM_KEY_IN_CSRF_SESSION_TOKEN_DEFAULT = RANDOM_KEY_IN_CSRF_SESSION_TOKEN_SECURE_RANDOM;\n     \n     \/**\n      * Indicates that the serialized state will be compressed before it is written to the session. By default true."
        },
        {
            "index":324,
            "vuln_id":"GHSA-2gw2-8q9w-cw8p",
            "cwe_id":"{'CWE-426'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/ffi\/ffi\/commit\/e0fe486df0e117ed67b0282b6ada04b7214ca05c', 'https:\/\/github.com\/ffi\/ffi\/commit\/09e0c6076466b4383da7fa4e13f714311109945a'}",
            "dataset":"osv",
            "summary":"Ruby-ffi has a DLL loading issue  ruby-ffi version 1.9.23 and earlier has a DLL loading issue which can be hijacked on Windows OS, when a Symbol is used as DLL name instead of a String This vulnerability appears to have been fixed in v1.9.24 and later.",
            "published_date":"2018-08-31",
            "chain_len":2,
            "project":"https:\/\/github.com\/ffi\/ffi",
            "commit_href":"https:\/\/github.com\/ffi\/ffi\/commit\/09e0c6076466b4383da7fa4e13f714311109945a",
            "commit_sha":"09e0c6076466b4383da7fa4e13f714311109945a",
            "patch":"MULTI",
            "chain_ord":"['e0fe486df0e117ed67b0282b6ada04b7214ca05c', '09e0c6076466b4383da7fa4e13f714311109945a']",
            "before_first_fix_commit":"{'e0fe486df0e117ed67b0282b6ada04b7214ca05c'}",
            "last_fix_commit":"09e0c6076466b4383da7fa4e13f714311109945a",
            "chain_ord_pos":2.0,
            "commit_datetime":"06\/01\/2018, 20:31:40",
            "message":"Don't search in hardcoded paths on Windows\n\nNative Windows apps don't use \"\/usr\" path to store system dlls.\nIt's even more harm than good to search through these directories,\nsince they are used in Cygwin and it can lead to accidentaly loading\nCygwin DLLs into native Windows apps.\n\nHardcoded paths are disabled for MINGW and MSWIN environments only.\nThey are still present on Cygwin and MSYS2, because these POSIX-API\nbased environments don't use LoadLibrary() but dl_open() to load DLLs.",
            "author":"Lars Kanis",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/ffi\/library.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ffi\/ffi\/raw\/09e0c6076466b4383da7fa4e13f714311109945a\/lib%2Fffi%2Flibrary.rb', 'patch': '@@ -125,7 +125,7 @@ def ffi_lib(*names)\\n                 retry\\n               else\\n                 # TODO better library lookup logic\\n-                unless libname.start_with?(\"\/\")\\n+                unless libname.start_with?(\"\/\") || FFI::Platform.windows?\\n                   path = [\\'\/usr\/lib\/\\',\\'\/usr\/local\/lib\/\\'].find do |pth|\\n                     File.exist?(pth + libname)\\n                   end'}}",
            "message_norm":"don't search in hardcoded paths on windows\n\nnative windows apps don't use \"\/usr\" path to store system dlls.\nit's even more harm than good to search through these directories,\nsince they are used in cygwin and it can lead to accidentaly loading\ncygwin dlls into native windows apps.\n\nhardcoded paths are disabled for mingw and mswin environments only.\nthey are still present on cygwin and msys2, because these posix-api\nbased environments don't use loadlibrary() but dl_open() to load dlls.",
            "language":"en",
            "entities":"[('hardcoded', 'SECWORD', ''), ('hardcoded', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/ffi\/library.rb'])",
            "num_files":1.0,
            "patch_content":"From 09e0c6076466b4383da7fa4e13f714311109945a Mon Sep 17 00:00:00 2001\nFrom: Lars Kanis <lars@greiz-reinsdorf.de>\nDate: Fri, 1 Jun 2018 22:31:40 +0200\nSubject: [PATCH] Don't search in hardcoded paths on Windows\n\nNative Windows apps don't use \"\/usr\" path to store system dlls.\nIt's even more harm than good to search through these directories,\nsince they are used in Cygwin and it can lead to accidentaly loading\nCygwin DLLs into native Windows apps.\n\nHardcoded paths are disabled for MINGW and MSWIN environments only.\nThey are still present on Cygwin and MSYS2, because these POSIX-API\nbased environments don't use LoadLibrary() but dl_open() to load DLLs.\n---\n lib\/ffi\/library.rb | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lib\/ffi\/library.rb b\/lib\/ffi\/library.rb\nindex 200ce7a9d..f14bcad56 100644\n--- a\/lib\/ffi\/library.rb\n+++ b\/lib\/ffi\/library.rb\n@@ -125,7 +125,7 @@ def ffi_lib(*names)\n                 retry\n               else\n                 # TODO better library lookup logic\n-                unless libname.start_with?(\"\/\")\n+                unless libname.start_with?(\"\/\") || FFI::Platform.windows?\n                   path = ['\/usr\/lib\/','\/usr\/local\/lib\/'].find do |pth|\n                     File.exist?(pth + libname)\n                   end",
            "code_diff":"@@ -125,7 +125,7 @@ def ffi_lib(*names)\n                 retry\n               else\n                 # TODO better library lookup logic\n-                unless libname.start_with?(\"\/\")\n+                unless libname.start_with?(\"\/\") || FFI::Platform.windows?\n                   path = ['\/usr\/lib\/','\/usr\/local\/lib\/'].find do |pth|\n                     File.exist?(pth + libname)\n                   end"
        },
        {
            "index":367,
            "vuln_id":"GHSA-627q-g293-49q7",
            "cwe_id":"{'CWE-400'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7'}",
            "dataset":"osv",
            "summary":"Abort caused by allocating a vector that is too large in Tensorflow ### Impact\nDuring shape inference, TensorFlow can [allocate a large vector](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/shape_inference.cc#L788-L790) based on a value from a tensor controlled by the user:\n\n```cc\n  const auto num_dims = Value(shape_dim);\n  std::vector<DimensionHandle> dims;\n  dims.reserve(num_dims);\n``` \n  \n### Patches           \nWe have patched the issue in GitHub commit [1361fb7e29449629e1df94d44e0427ebec8c83c7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7",
            "commit_sha":"1361fb7e29449629e1df94d44e0427ebec8c83c7",
            "patch":"SINGLE",
            "chain_ord":"['1361fb7e29449629e1df94d44e0427ebec8c83c7']",
            "before_first_fix_commit":"{'f6e7c84316c9fe416ea32086fa3c64fee21fafab'}",
            "last_fix_commit":"1361fb7e29449629e1df94d44e0427ebec8c83c7",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/10\/2021, 23:52:57",
            "message":"Fix abort caused by allocating a too large vector.\n\nWe need to make sure that the number of dimensions in a shape is within limits.\n\nPiperOrigin-RevId: 408997911\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 15, 'deletions': 0, 'total': 15}",
            "files":"{'tensorflow\/core\/framework\/shape_inference.cc': {'additions': 15, 'deletions': 0, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1361fb7e29449629e1df94d44e0427ebec8c83c7\/tensorflow%2Fcore%2Fframework%2Fshape_inference.cc', 'patch': '@@ -14,6 +14,8 @@ limitations under the License.\\n ==============================================================================*\/\\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\\n \\n+#include <cstdint>\\n+\\n #include \"tensorflow\/core\/framework\/bounds_check.h\"\\n #include \"tensorflow\/core\/framework\/full_type_util.h\"\\n #include \"tensorflow\/core\/framework\/node_def.pb.h\"\\n@@ -789,6 +791,19 @@ Status InferenceContext::InternalMakeShapeFromTensor(\\n       return ReturnUnknownShape(out);\\n     }\\n     const auto num_dims = Value(shape_dim);\\n+    \/\/ TODO(mihaimaruseac): Should be `TensorShape::MaxDimensions()` as we are\\n+    \/\/ not able to materialize shapes with more than this number of dimensions\\n+    \/\/ but then shape inference would fail for operations such as\\n+    \/\/ `tf.range`\/`tf.ones`, etc. where the shape is not really materialized,\\n+    \/\/ only used during the inference. Hence, just prevent doing a `reserve`\\n+    \/\/ with a very large argument.\\n+    const int64_t max_dimensions = 1 << 20;\\n+    if (num_dims >= max_dimensions) {\\n+      return errors::Internal(\\n+          \"Cannot create a tensor with \", num_dims,\\n+          \" dimensions, as these would be more than maximum of \",\\n+          max_dimensions);\\n+    }\\n     std::vector<DimensionHandle> dims;\\n     dims.reserve(num_dims);\\n     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());'}}",
            "message_norm":"fix abort caused by allocating a too large vector.\n\nwe need to make sure that the number of dimensions in a shape is within limits.\n\npiperorigin-revid: 408997911\nchange-id: if59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('408997911', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/shape_inference.cc'])",
            "num_files":1.0,
            "patch_content":"From 1361fb7e29449629e1df94d44e0427ebec8c83c7 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 10 Nov 2021 15:52:57 -0800\nSubject: [PATCH] Fix abort caused by allocating a too large vector.\n\nWe need to make sure that the number of dimensions in a shape is within limits.\n\nPiperOrigin-RevId: 408997911\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb\n---\n tensorflow\/core\/framework\/shape_inference.cc | 15 +++++++++++++++\n 1 file changed, 15 insertions(+)\n\ndiff --git a\/tensorflow\/core\/framework\/shape_inference.cc b\/tensorflow\/core\/framework\/shape_inference.cc\nindex 077837721ae4fa..3316759aed5a7d 100644\n--- a\/tensorflow\/core\/framework\/shape_inference.cc\n+++ b\/tensorflow\/core\/framework\/shape_inference.cc\n@@ -14,6 +14,8 @@ limitations under the License.\n ==============================================================================*\/\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\n \n+#include <cstdint>\n+\n #include \"tensorflow\/core\/framework\/bounds_check.h\"\n #include \"tensorflow\/core\/framework\/full_type_util.h\"\n #include \"tensorflow\/core\/framework\/node_def.pb.h\"\n@@ -789,6 +791,19 @@ Status InferenceContext::InternalMakeShapeFromTensor(\n       return ReturnUnknownShape(out);\n     }\n     const auto num_dims = Value(shape_dim);\n+    \/\/ TODO(mihaimaruseac): Should be `TensorShape::MaxDimensions()` as we are\n+    \/\/ not able to materialize shapes with more than this number of dimensions\n+    \/\/ but then shape inference would fail for operations such as\n+    \/\/ `tf.range`\/`tf.ones`, etc. where the shape is not really materialized,\n+    \/\/ only used during the inference. Hence, just prevent doing a `reserve`\n+    \/\/ with a very large argument.\n+    const int64_t max_dimensions = 1 << 20;\n+    if (num_dims >= max_dimensions) {\n+      return errors::Internal(\n+          \"Cannot create a tensor with \", num_dims,\n+          \" dimensions, as these would be more than maximum of \",\n+          max_dimensions);\n+    }\n     std::vector<DimensionHandle> dims;\n     dims.reserve(num_dims);\n     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());",
            "code_diff":"@@ -14,6 +14,8 @@ limitations under the License.\n ==============================================================================*\/\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\n \n+#include <cstdint>\n+\n #include \"tensorflow\/core\/framework\/bounds_check.h\"\n #include \"tensorflow\/core\/framework\/full_type_util.h\"\n #include \"tensorflow\/core\/framework\/node_def.pb.h\"\n@@ -789,6 +791,19 @@ Status InferenceContext::InternalMakeShapeFromTensor(\n       return ReturnUnknownShape(out);\n     }\n     const auto num_dims = Value(shape_dim);\n+    \/\/ TODO(mihaimaruseac): Should be `TensorShape::MaxDimensions()` as we are\n+    \/\/ not able to materialize shapes with more than this number of dimensions\n+    \/\/ but then shape inference would fail for operations such as\n+    \/\/ `tf.range`\/`tf.ones`, etc. where the shape is not really materialized,\n+    \/\/ only used during the inference. Hence, just prevent doing a `reserve`\n+    \/\/ with a very large argument.\n+    const int64_t max_dimensions = 1 << 20;\n+    if (num_dims >= max_dimensions) {\n+      return errors::Internal(\n+          \"Cannot create a tensor with \", num_dims,\n+          \" dimensions, as these would be more than maximum of \",\n+          max_dimensions);\n+    }\n     std::vector<DimensionHandle> dims;\n     dims.reserve(num_dims);\n     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());"
        },
        {
            "index":896,
            "vuln_id":"GHSA-qpw2-xchm-655q",
            "cwe_id":"{'CWE-125'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/mhart\/StringStream\/commit\/2f4a9d496f94b0880e01a26857aa266a5a3ef274'}",
            "dataset":"osv",
            "summary":"Out-of-Bounds read in stringstream Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x).\n\n# WITHDRAWN\n\nThis is a duplicate of GHSA-mf6x-7mm4-x2g7",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/mhart\/StringStream",
            "commit_href":"https:\/\/github.com\/mhart\/StringStream\/commit\/2f4a9d496f94b0880e01a26857aa266a5a3ef274",
            "commit_sha":"2f4a9d496f94b0880e01a26857aa266a5a3ef274",
            "patch":"SINGLE",
            "chain_ord":"['2f4a9d496f94b0880e01a26857aa266a5a3ef274']",
            "before_first_fix_commit":"{'1efe3bf507bf3a1161f8473908b60e881d41422b', 'afbc7442220358419e330618e47f3a65fc265b1b'}",
            "last_fix_commit":"2f4a9d496f94b0880e01a26857aa266a5a3ef274",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/17\/2018, 10:22:09",
            "message":"Merge pull request #9 from mhart\/fix-buffer-constructor-vuln\n\nEnsure data is not a number in Buffer constructor",
            "author":"Michael Hart",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'stringstream.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mhart\/StringStream\/raw\/2f4a9d496f94b0880e01a26857aa266a5a3ef274\/stringstream.js', 'patch': \"@@ -28,7 +28,7 @@ StringStream.prototype.write = function(data) {\\n     return false\\n   }\\n   if (this.fromEncoding) {\\n-    if (Buffer.isBuffer(data)) data = data.toString()\\n+    if (Buffer.isBuffer(data) || typeof data === 'number') data = data.toString()\\n     data = new Buffer(data, this.fromEncoding)\\n   }\\n   var string = this.decoder.write(data)\"}}",
            "message_norm":"merge pull request #9 from mhart\/fix-buffer-constructor-vuln\n\nensure data is not a number in buffer constructor",
            "language":"en",
            "entities":"[('#9', 'ISSUE', ''), ('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['stringstream.js'])",
            "num_files":1.0,
            "patch_content":"From afbc7442220358419e330618e47f3a65fc265b1b Mon Sep 17 00:00:00 2001\nFrom: Michael Hart <michael.hart.au@gmail.com>\nDate: Thu, 17 May 2018 19:07:21 +1000\nSubject: [PATCH] Ensure data is not a number in Buffer constructor\n\nFixes #7\n---\n stringstream.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/stringstream.js b\/stringstream.js\nindex 4ece127..6732b9d 100644\n--- a\/stringstream.js\n+++ b\/stringstream.js\n@@ -28,7 +28,7 @@ StringStream.prototype.write = function(data) {\n     return false\n   }\n   if (this.fromEncoding) {\n-    if (Buffer.isBuffer(data)) data = data.toString()\n+    if (Buffer.isBuffer(data) || typeof data === 'number') data = data.toString()\n     data = new Buffer(data, this.fromEncoding)\n   }\n   var string = this.decoder.write(data)",
            "code_diff":"@@ -28,7 +28,7 @@ StringStream.prototype.write = function(data) {\n     return false\n   }\n   if (this.fromEncoding) {\n-    if (Buffer.isBuffer(data)) data = data.toString()\n+    if (Buffer.isBuffer(data) || typeof data === 'number') data = data.toString()\n     data = new Buffer(data, this.fromEncoding)\n   }\n   var string = this.decoder.write(data)"
        },
        {
            "index":302,
            "vuln_id":"GHSA-3j9m-hcv9-rpj8",
            "cwe_id":"{'CWE-79'}",
            "score":6.9,
            "chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88', 'https:\/\/github.com\/grafana\/grafana\/commit\/31b78d51c693d828720a5b285107a50e6024c912'}",
            "dataset":"osv",
            "summary":"XSS vulnerability allowing arbitrary JavaScript execution Today we are releasing Grafana 8.2.3. This patch release includes an important security fix for an issue that affects all Grafana versions from 8.0.0-beta1.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched and an audit did not find any usage of this attack vector. [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n## CVE-2021-41174 XSS vulnerability on unauthenticated pages\n\n### Summary\n\nCVSS Score: 6.9 Medium\nCVSS:[CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L](https:\/\/www.first.org\/cvss\/calculator\/3.0#CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L)\n\nWe received a security report to security@grafana.com on 2021-10-21 about a vulnerability in Grafana regarding the XSS vulnerability.\n\nIt was later identified as affecting Grafana versions from 8.0.0-beta1 to 8.2.2. [CVE-2021-41174](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2021-41174) has been assigned to this vulnerability.\n\n### Impact\n\nIf an attacker is able to convince a victim to visit a URL referencing a vulnerable page, arbitrary JavaScript content may be executed within the context of the victim's browser.\n\nThe user visiting the malicious link must be unauthenticated and the link must be for a page that contains the login button in the menu bar.\n\nThere are two ways an unauthenticated user can open a page in Grafana that contains the login button:\n- Anonymous authentication is enabled. This means all pages in Grafana would be open for the attack.\n- The link is to an unauthenticated page. The following pages are vulnerable:\n  - `\/dashboard-solo\/snapshot\/*`\n  - `\/dashboard\/snapshot\/*`\n  - `\/invite\/:code`\n\nThe url has to be crafted to exploit AngularJS rendering and contain the interpolation binding for AngularJS expressions. AngularJS uses double curly braces for interpolation binding: {{ }} \n\nAn example of an expression would be: `{{constructor.constructor(\u2018alert(1)\u2019)()}}`. This can be included in the link URL like this: \n\nhttps:\/\/play.grafana.org\/dashboard\/snapshot\/%7B%7Bconstructor.constructor('alert(1)')()%7D%7D?orgId=1\n\nWhen the user follows the link and the page renders, the login button will contain the original link with a query parameter to force a redirect to the login page. The URL is not validated and the AngularJS rendering engine will execute the JavaScript expression contained in the URL.\n\n### Attack audit\n\nWe can not guarantee that the below will identify all attacks, so if you find something using the audit process described below, you should consider doing a full assessment.\n\n#### Through reverse proxy\/load balancer logs\n\nTo determine if your Grafana installation has been exploited for this vulnerability, search through your reverse proxy\/load balancer access logs for instances where the path contains `{{` followed by something that would invoke JavaScript code. For example, this could be code that attempts to show a fake login page or to steal browser or session data. The [OWASP cheat sheet](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/XSS_Filter_Evasion_Cheat_Sheet.html) has several examples of XSS attacks.\n\n#### Through the Grafana Enterprise audit feature\n\nIf you enabled \u201cLog web requests\u201d in your configuration with `router_logging = true`, look for requests where `path` contains `{{` followed by something that would invoke JavaScript code.\n\n### Patched versions\n\nRelease 8.2.3:\n\n- [Download Grafana 8.2.3](https:\/\/grafana.com\/grafana\/download\/8.2.3)\n- [Release notes](https:\/\/grafana.com\/docs\/grafana\/latest\/release-notes\/release-notes-8-2-3\/)\n\n### Solutions and mitigations\n\nDownload and install the appropriate patch for your version of Grafana.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched, and [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n### Workaround\n\nIf for some reason you cannot upgrade, you can use a reverse proxy or similar to block access to block the literal string `{{` in the path.\n\nExample of an Nginx rule to block the literal string `{{`:\n\n```\nlocation ~ \\{\\{ {\n    deny all;\n}\n```\n### Timeline and postmortem\n\nHere is a detailed timeline starting from when we originally learned of the issue. All times in UTC. \n\n* 2021-10-21 23:13: Security researcher sends the initial report about an XSS vulnerability.\n* 2021-10-21 23:13: Confirmed to be reproducible in at least versions 8.0.5 and 8.2.2.\n* 2021-10-22 02:02 MEDIUM severity declared.\n* 2021-10-22 09:22: it is discovered that Grafana instances with anonymous auth turned on are vulnerable. This includes https:\/\/play.grafana.org\/ .\n* 2021-10-22 09:50: Anonymous access disabled for all instances on Grafana Cloud as a mitigation measure.\n* 2021-10-22 11:15: Workaround deployed on Grafana Cloud that blocks malicious requests.\n* 2021-10-22 12:35: Enabled anonymous access for instances on Grafana Cloud. \n* 2021-10-22 12:51: All instances protected by the workaround. From this point forward, Grafana Cloud is no longer affected.\n* 2021-10-22 14:05 Grafana Cloud instances updated with a fix.\n* 2021-10-22 19:23 :Determination that no weekend work is needed as the issue is of MEDIUM severity and the root cause has been identified.\n* 2021-10-25 14:13: Audit of Grafana Cloud concluded, no evidence of exploitation.\n* 2021-10-27 12:00: Grafana Enterprise images released to customers under embargo.\n* 2021-11-03 12:00: Public release.\n\n## Reporting security issues\n\nIf you think you have found a security vulnerability, please send a report to [security@grafana.com](mailto:security@grafana.com). This address can be used for all of\nGrafana Labs' open source and commercial products (including but not limited to Grafana, Tempo, Loki, k6, Tanka, and  Grafana Cloud, Grafana Enterprise, and grafana.com). We only accept vulnerability reports at this address. We would prefer that you encrypt your message to us using our PGP key. The key fingerprint is:\n\nF988 7BEA 027A 049F AE8E  5CAA D125 8932 BE24 C5CA\n\nThe key is available from [ keyserver.ubuntu.com]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?op=get&fingerprint=on&search=0xD1258932BE24C5CA) by searching for [security@grafana]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?search=security@grafana&fingerprint=on&op=index).\n\n## Security announcements\n\nThere is a Security [category](https:\/\/grafana.com\/tags\/security\/) on the Grafana blog where we will post a summary, remediation, and mitigation details for any patch containing security fixes and you can subscribe to updates from our [Security Announcements RSS feed](https:\/\/grafana.com\/tags\/security\/index.xml).",
            "published_date":"2021-11-08",
            "chain_len":3,
            "project":"https:\/\/github.com\/grafana\/grafana",
            "commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82",
            "commit_sha":"3cb5214fa45eb5a571fd70d6c6edf0d729983f82",
            "patch":"MULTI",
            "chain_ord":"['31b78d51c693d828720a5b285107a50e6024c912', '3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'fb85ed691290d211a5baa44d9a641ab137f0de88']",
            "before_first_fix_commit":"{'3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'a3dc30546fce2e437d858c140f1ff307a04365d6'}",
            "last_fix_commit":"fb85ed691290d211a5baa44d9a641ab137f0de88",
            "chain_ord_pos":2.0,
            "commit_datetime":"10\/25\/2021, 07:16:51",
            "message":"Merge pull request #151 from grafana\/dcech\/sanitize-replaceAll\n\nuse global replace when sanitizing urls in 8.2.3",
            "author":"Dimitris Sotirakis",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'packages\/grafana-data\/src\/text\/sanitize.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82\/packages%2Fgrafana-data%2Fsrc%2Ftext%2Fsanitize.ts', 'patch': \"@@ -40,5 +40,5 @@ export function escapeHtml(str: string): string {\\n }\\n \\n export function sanitizeAngularInterpolation(url: string): string {\\n-  return url.replace('{{', '%7B%7B').replace('}}', '%7D%7D');\\n+  return url.replace(\/\\\\{\\\\{\/g, '%7B%7B').replace(\/\\\\}\\\\}\/g, '%7D%7D');\\n }\"}}",
            "message_norm":"merge pull request #151 from grafana\/dcech\/sanitize-replaceall\n\nuse global replace when sanitizing urls in 8.2.3",
            "language":"en",
            "entities":"[('#151', 'ISSUE', ''), ('sanitize', 'SECWORD', ''), ('sanitizing', 'SECWORD', ''), ('8.2.3', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/grafana-data\/src\/text\/sanitize.ts'])",
            "num_files":1.0,
            "patch_content":"From 8081dc9ee913a1bf4b98f99e78661db88a6dc1ef Mon Sep 17 00:00:00 2001\nFrom: Dan Cech <dcech@grafana.com>\nDate: Fri, 22 Oct 2021 15:23:06 -0400\nSubject: [PATCH 1\/2] use replaceAll when sanitizing urls\n\n---\n packages\/grafana-data\/src\/text\/sanitize.ts | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/packages\/grafana-data\/src\/text\/sanitize.ts b\/packages\/grafana-data\/src\/text\/sanitize.ts\nindex 6313d0db1388..4e8fa135fa8a 100644\n--- a\/packages\/grafana-data\/src\/text\/sanitize.ts\n+++ b\/packages\/grafana-data\/src\/text\/sanitize.ts\n@@ -40,5 +40,5 @@ export function escapeHtml(str: string): string {\n }\n \n export function sanitizeAngularInterpolation(url: string): string {\n-  return url.replace('{{', '%7B%7B').replace('}}', '%7D%7D');\n+  return url.replaceAll('{{', '%7B%7B').replaceAll('}}', '%7D%7D');\n }\n\nFrom 1c7ce348ce4363c55992ed5772f96981d1a86f7e Mon Sep 17 00:00:00 2001\nFrom: Dan Cech <dcech@grafana.com>\nDate: Fri, 22 Oct 2021 16:40:45 -0400\nSubject: [PATCH 2\/2] switch to global regexp\n\n---\n packages\/grafana-data\/src\/text\/sanitize.ts | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/packages\/grafana-data\/src\/text\/sanitize.ts b\/packages\/grafana-data\/src\/text\/sanitize.ts\nindex 4e8fa135fa8a..ae14afed4223 100644\n--- a\/packages\/grafana-data\/src\/text\/sanitize.ts\n+++ b\/packages\/grafana-data\/src\/text\/sanitize.ts\n@@ -40,5 +40,5 @@ export function escapeHtml(str: string): string {\n }\n \n export function sanitizeAngularInterpolation(url: string): string {\n-  return url.replaceAll('{{', '%7B%7B').replaceAll('}}', '%7D%7D');\n+  return url.replace(\/\\{\\{\/g, '%7B%7B').replace(\/\\}\\}\/g, '%7D%7D');\n }",
            "code_diff":"@@ -40,5 +40,5 @@ export function escapeHtml(str: string): string {\n }\n \n export function sanitizeAngularInterpolation(url: string): string {\n-  return url.replace('{{', '%7B%7B').replace('}}', '%7D%7D');\n+  return url.replaceAll('{{', '%7B%7B').replaceAll('}}', '%7D%7D');\n }\n\nFrom: Dan Cech <dcech@grafana.com>\n\n packages\/grafana-data\/src\/text\/sanitize.ts | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\n@@ -40,5 +40,5 @@ export function escapeHtml(str: string): string {\n }\n \n export function sanitizeAngularInterpolation(url: string): string {\n-  return url.replaceAll('{{', '%7B%7B').replaceAll('}}', '%7D%7D');\n+  return url.replace(\/\\{\\{\/g, '%7B%7B').replace(\/\\}\\}\/g, '%7D%7D');\n }"
        },
        {
            "index":848,
            "vuln_id":"GHSA-75f6-78jr-4656",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `EditDistance` ### Impact\nAn attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.EditDistance`: \n    \n```python\nimport tensorflow as tf\n\nhypothesis_indices = tf.constant([247, 247, 247], shape=[1, 3], dtype=tf.int64)\nhypothesis_values = tf.constant([-9.9999], shape=[1], dtype=tf.float32)\nhypothesis_shape = tf.constant([0, 0, 0], shape=[3], dtype=tf.int64)\ntruth_indices = tf.constant([], shape=[0, 3], dtype=tf.int64)\ntruth_values = tf.constant([], shape=[0], dtype=tf.float32)\ntruth_shape = tf.constant([0, 0, 0], shape=[3], dtype=tf.int64)\n\ntf.raw_ops.EditDistance(\n    hypothesis_indices=hypothesis_indices, hypothesis_values=hypothesis_values,\n    hypothesis_shape=hypothesis_shape, truth_indices=truth_indices,\n    truth_values=truth_values, truth_shape=truth_shape, normalize=True)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/79865b542f9ffdc9caeb255631f7c56f1d4b6517\/tensorflow\/core\/kernels\/edit_distance_op.cc#L103-L159) has incomplete validation of the input parameters.\n\nIn the above scenario, an attacker causes an allocation of an empty tensor for the output:\n\n```cc\nOP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));\nauto output_t = output->flat<float>();\noutput_t.setZero();\n```\n\nBecause `output_shape` has 0 elements, the result of `output->flat<T>()` has an empty buffer, so calling `setZero` would result in a null dereference.\n\n### Patches\nWe have patched the issue in GitHub commit [f4c364a5d6880557f6f5b6eb5cee2c407f0186b3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
            "commit_sha":"f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
            "patch":"SINGLE",
            "chain_ord":"['f4c364a5d6880557f6f5b6eb5cee2c407f0186b3']",
            "before_first_fix_commit":"{'79865b542f9ffdc9caeb255631f7c56f1d4b6517'}",
            "last_fix_commit":"f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 01:06:03",
            "message":"Fix multiple issues in EditDistance\n\nPiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 47, 'deletions': 0, 'total': 47}",
            "files":"{'tensorflow\/core\/kernels\/edit_distance_op.cc': {'additions': 47, 'deletions': 0, 'changes': 47, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3\/tensorflow%2Fcore%2Fkernels%2Fedit_distance_op.cc', 'patch': '@@ -64,6 +64,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\\n     return errors::InvalidArgument(\\n         \"truth_shape should be a vector, but got shape: \",\\n         truth_shape.shape().DebugString());\\n+  if (hypothesis_values.NumElements() != hypothesis_indices.dim_size(0))\\n+    return errors::InvalidArgument(\\n+        \"Expected hypothesis_values.NumElements == \"\\n+        \"#rows(hypothesis_indices), their shapes are: \",\\n+        hypothesis_values.shape().DebugString(), \" and \",\\n+        hypothesis_indices.shape().DebugString());\\n   if (hypothesis_shape.NumElements() != hypothesis_indices.dim_size(1))\\n     return errors::InvalidArgument(\\n         \"Expected hypothesis_shape.NumElements == \"\\n@@ -75,6 +81,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\\n         \"Input SparseTensors must have rank at least 2, but truth_shape \"\\n         \"rank is: \",\\n         truth_shape.NumElements());\\n+  if (truth_values.NumElements() != truth_indices.dim_size(0))\\n+    return errors::InvalidArgument(\\n+        \"Expected truth_values.NumElements == \"\\n+        \"#rows(truth_indices), their shapes are: \",\\n+        truth_values.shape().DebugString(), \" and \",\\n+        truth_indices.shape().DebugString());\\n   if (truth_shape.NumElements() != truth_indices.dim_size(1))\\n     return errors::InvalidArgument(\\n         \"Expected truth_shape.NumElements == \"\\n@@ -153,6 +165,11 @@ class EditDistanceOp : public OpKernel {\\n       output_shape.AddDim(std::max(hypothesis_st_shape.dim_size(d),\\n                                    truth_st_shape.dim_size(d)));\\n     }\\n+    const auto output_elements = output_shape.num_elements();\\n+    OP_REQUIRES(\\n+        ctx, output_elements > 0,\\n+        errors::InvalidArgument(\"Got output shape \", output_shape.DebugString(),\\n+                                \" which has 0 elements\"));\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));\\n@@ -185,6 +202,12 @@ class EditDistanceOp : public OpKernel {\\n       if (g_truth == g_hypothesis) {\\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) =\\n             gtl::LevenshteinDistance<T>(truth_seq, hypothesis_seq, cmp);\\n         if (normalize_) output_t(loc) \/= truth_seq.size();\\n@@ -194,6 +217,12 @@ class EditDistanceOp : public OpKernel {\\n       } else if (g_truth > g_hypothesis) {  \/\/ zero-length truth\\n         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) = hypothesis_seq.size();\\n         if (normalize_ && output_t(loc) != 0.0f) {\\n           output_t(loc) = std::numeric_limits<float>::infinity();\\n@@ -202,6 +231,12 @@ class EditDistanceOp : public OpKernel {\\n       } else {  \/\/ zero-length hypothesis\\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\\n         ++truth_iter;\\n       }\\n@@ -212,6 +247,12 @@ class EditDistanceOp : public OpKernel {\\n       auto hypothesis_seq = hypothesis_j.values<T>();\\n       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\\n                                     output_strides.begin(), int64{0});\\n+      OP_REQUIRES(\\n+          ctx, loc < output_elements,\\n+          errors::Internal(\"Got an inner product \", loc,\\n+                           \" which would require in writing to outside of the \"\\n+                           \"buffer for the output tensor (max elements \",\\n+                           output_elements, \")\"));\\n       output_t(loc) = hypothesis_seq.size();\\n       if (normalize_ && output_t(loc) != 0.0f) {\\n         output_t(loc) = std::numeric_limits<float>::infinity();\\n@@ -224,6 +265,12 @@ class EditDistanceOp : public OpKernel {\\n       auto truth_seq = truth_i.values<T>();\\n       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                     output_strides.begin(), int64{0});\\n+      OP_REQUIRES(\\n+          ctx, loc < output_elements,\\n+          errors::Internal(\"Got an inner product \", loc,\\n+                           \" which would require in writing to outside of the \"\\n+                           \"buffer for the output tensor (max elements \",\\n+                           output_elements, \")\"));\\n       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\\n       ++truth_iter;\\n     }'}}",
            "message_norm":"fix multiple issues in editdistance\n\npiperorigin-revid: 372033948\nchange-id: ieb957c29894af05bdfeb1a0402fced808dfcfd7b",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('372033948', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/edit_distance_op.cc'])",
            "num_files":1.0,
            "patch_content":"From f4c364a5d6880557f6f5b6eb5cee2c407f0186b3 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 4 May 2021 18:06:03 -0700\nSubject: [PATCH] Fix multiple issues in EditDistance\n\nPiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b\n---\n tensorflow\/core\/kernels\/edit_distance_op.cc | 47 +++++++++++++++++++++\n 1 file changed, 47 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/edit_distance_op.cc b\/tensorflow\/core\/kernels\/edit_distance_op.cc\nindex 4aecdc9e414d36..386a1af08409f6 100644\n--- a\/tensorflow\/core\/kernels\/edit_distance_op.cc\n+++ b\/tensorflow\/core\/kernels\/edit_distance_op.cc\n@@ -64,6 +64,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\n     return errors::InvalidArgument(\n         \"truth_shape should be a vector, but got shape: \",\n         truth_shape.shape().DebugString());\n+  if (hypothesis_values.NumElements() != hypothesis_indices.dim_size(0))\n+    return errors::InvalidArgument(\n+        \"Expected hypothesis_values.NumElements == \"\n+        \"#rows(hypothesis_indices), their shapes are: \",\n+        hypothesis_values.shape().DebugString(), \" and \",\n+        hypothesis_indices.shape().DebugString());\n   if (hypothesis_shape.NumElements() != hypothesis_indices.dim_size(1))\n     return errors::InvalidArgument(\n         \"Expected hypothesis_shape.NumElements == \"\n@@ -75,6 +81,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\n         \"Input SparseTensors must have rank at least 2, but truth_shape \"\n         \"rank is: \",\n         truth_shape.NumElements());\n+  if (truth_values.NumElements() != truth_indices.dim_size(0))\n+    return errors::InvalidArgument(\n+        \"Expected truth_values.NumElements == \"\n+        \"#rows(truth_indices), their shapes are: \",\n+        truth_values.shape().DebugString(), \" and \",\n+        truth_indices.shape().DebugString());\n   if (truth_shape.NumElements() != truth_indices.dim_size(1))\n     return errors::InvalidArgument(\n         \"Expected truth_shape.NumElements == \"\n@@ -153,6 +165,11 @@ class EditDistanceOp : public OpKernel {\n       output_shape.AddDim(std::max(hypothesis_st_shape.dim_size(d),\n                                    truth_st_shape.dim_size(d)));\n     }\n+    const auto output_elements = output_shape.num_elements();\n+    OP_REQUIRES(\n+        ctx, output_elements > 0,\n+        errors::InvalidArgument(\"Got output shape \", output_shape.DebugString(),\n+                                \" which has 0 elements\"));\n \n     Tensor* output = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));\n@@ -185,6 +202,12 @@ class EditDistanceOp : public OpKernel {\n       if (g_truth == g_hypothesis) {\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\n                                       output_strides.begin(), int64{0});\n+        OP_REQUIRES(\n+            ctx, loc < output_elements,\n+            errors::Internal(\"Got an inner product \", loc,\n+                             \" which would require in writing to outside of \"\n+                             \"the buffer for the output tensor (max elements \",\n+                             output_elements, \")\"));\n         output_t(loc) =\n             gtl::LevenshteinDistance<T>(truth_seq, hypothesis_seq, cmp);\n         if (normalize_) output_t(loc) \/= truth_seq.size();\n@@ -194,6 +217,12 @@ class EditDistanceOp : public OpKernel {\n       } else if (g_truth > g_hypothesis) {  \/\/ zero-length truth\n         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\n                                       output_strides.begin(), int64{0});\n+        OP_REQUIRES(\n+            ctx, loc < output_elements,\n+            errors::Internal(\"Got an inner product \", loc,\n+                             \" which would require in writing to outside of \"\n+                             \"the buffer for the output tensor (max elements \",\n+                             output_elements, \")\"));\n         output_t(loc) = hypothesis_seq.size();\n         if (normalize_ && output_t(loc) != 0.0f) {\n           output_t(loc) = std::numeric_limits<float>::infinity();\n@@ -202,6 +231,12 @@ class EditDistanceOp : public OpKernel {\n       } else {  \/\/ zero-length hypothesis\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\n                                       output_strides.begin(), int64{0});\n+        OP_REQUIRES(\n+            ctx, loc < output_elements,\n+            errors::Internal(\"Got an inner product \", loc,\n+                             \" which would require in writing to outside of \"\n+                             \"the buffer for the output tensor (max elements \",\n+                             output_elements, \")\"));\n         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\n         ++truth_iter;\n       }\n@@ -212,6 +247,12 @@ class EditDistanceOp : public OpKernel {\n       auto hypothesis_seq = hypothesis_j.values<T>();\n       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\n                                     output_strides.begin(), int64{0});\n+      OP_REQUIRES(\n+          ctx, loc < output_elements,\n+          errors::Internal(\"Got an inner product \", loc,\n+                           \" which would require in writing to outside of the \"\n+                           \"buffer for the output tensor (max elements \",\n+                           output_elements, \")\"));\n       output_t(loc) = hypothesis_seq.size();\n       if (normalize_ && output_t(loc) != 0.0f) {\n         output_t(loc) = std::numeric_limits<float>::infinity();\n@@ -224,6 +265,12 @@ class EditDistanceOp : public OpKernel {\n       auto truth_seq = truth_i.values<T>();\n       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\n                                     output_strides.begin(), int64{0});\n+      OP_REQUIRES(\n+          ctx, loc < output_elements,\n+          errors::Internal(\"Got an inner product \", loc,\n+                           \" which would require in writing to outside of the \"\n+                           \"buffer for the output tensor (max elements \",\n+                           output_elements, \")\"));\n       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\n       ++truth_iter;\n     }",
            "code_diff":"@@ -64,6 +64,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\n     return errors::InvalidArgument(\n         \"truth_shape should be a vector, but got shape: \",\n         truth_shape.shape().DebugString());\n+  if (hypothesis_values.NumElements() != hypothesis_indices.dim_size(0))\n+    return errors::InvalidArgument(\n+        \"Expected hypothesis_values.NumElements == \"\n+        \"#rows(hypothesis_indices), their shapes are: \",\n+        hypothesis_values.shape().DebugString(), \" and \",\n+        hypothesis_indices.shape().DebugString());\n   if (hypothesis_shape.NumElements() != hypothesis_indices.dim_size(1))\n     return errors::InvalidArgument(\n         \"Expected hypothesis_shape.NumElements == \"\n@@ -75,6 +81,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\n         \"Input SparseTensors must have rank at least 2, but truth_shape \"\n         \"rank is: \",\n         truth_shape.NumElements());\n+  if (truth_values.NumElements() != truth_indices.dim_size(0))\n+    return errors::InvalidArgument(\n+        \"Expected truth_values.NumElements == \"\n+        \"#rows(truth_indices), their shapes are: \",\n+        truth_values.shape().DebugString(), \" and \",\n+        truth_indices.shape().DebugString());\n   if (truth_shape.NumElements() != truth_indices.dim_size(1))\n     return errors::InvalidArgument(\n         \"Expected truth_shape.NumElements == \"\n@@ -153,6 +165,11 @@ class EditDistanceOp : public OpKernel {\n       output_shape.AddDim(std::max(hypothesis_st_shape.dim_size(d),\n                                    truth_st_shape.dim_size(d)));\n     }\n+    const auto output_elements = output_shape.num_elements();\n+    OP_REQUIRES(\n+        ctx, output_elements > 0,\n+        errors::InvalidArgument(\"Got output shape \", output_shape.DebugString(),\n+                                \" which has 0 elements\"));\n \n     Tensor* output = nullptr;\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));\n@@ -185,6 +202,12 @@ class EditDistanceOp : public OpKernel {\n       if (g_truth == g_hypothesis) {\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\n                                       output_strides.begin(), int64{0});\n+        OP_REQUIRES(\n+            ctx, loc < output_elements,\n+            errors::Internal(\"Got an inner product \", loc,\n+                             \" which would require in writing to outside of \"\n+                             \"the buffer for the output tensor (max elements \",\n+                             output_elements, \")\"));\n         output_t(loc) =\n             gtl::LevenshteinDistance<T>(truth_seq, hypothesis_seq, cmp);\n         if (normalize_) output_t(loc) \/= truth_seq.size();\n@@ -194,6 +217,12 @@ class EditDistanceOp : public OpKernel {\n       } else if (g_truth > g_hypothesis) {  \/\/ zero-length truth\n         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\n                                       output_strides.begin(), int64{0});\n+        OP_REQUIRES(\n+            ctx, loc < output_elements,\n+            errors::Internal(\"Got an inner product \", loc,\n+                             \" which would require in writing to outside of \"\n+                             \"the buffer for the output tensor (max elements \",\n+                             output_elements, \")\"));\n         output_t(loc) = hypothesis_seq.size();\n         if (normalize_ && output_t(loc) != 0.0f) {\n           output_t(loc) = std::numeric_limits<float>::infinity();\n@@ -202,6 +231,12 @@ class EditDistanceOp : public OpKernel {\n       } else {  \/\/ zero-length hypothesis\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\n                                       output_strides.begin(), int64{0});\n+        OP_REQUIRES(\n+            ctx, loc < output_elements,\n+            errors::Internal(\"Got an inner product \", loc,\n+                             \" which would require in writing to outside of \"\n+                             \"the buffer for the output tensor (max elements \",\n+                             output_elements, \")\"));\n         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\n         ++truth_iter;\n       }\n@@ -212,6 +247,12 @@ class EditDistanceOp : public OpKernel {\n       auto hypothesis_seq = hypothesis_j.values<T>();\n       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\n                                     output_strides.begin(), int64{0});\n+      OP_REQUIRES(\n+          ctx, loc < output_elements,\n+          errors::Internal(\"Got an inner product \", loc,\n+                           \" which would require in writing to outside of the \"\n+                           \"buffer for the output tensor (max elements \",\n+                           output_elements, \")\"));\n       output_t(loc) = hypothesis_seq.size();\n       if (normalize_ && output_t(loc) != 0.0f) {\n         output_t(loc) = std::numeric_limits<float>::infinity();\n@@ -224,6 +265,12 @@ class EditDistanceOp : public OpKernel {\n       auto truth_seq = truth_i.values<T>();\n       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\n                                     output_strides.begin(), int64{0});\n+      OP_REQUIRES(\n+          ctx, loc < output_elements,\n+          errors::Internal(\"Got an inner product \", loc,\n+                           \" which would require in writing to outside of the \"\n+                           \"buffer for the output tensor (max elements \",\n+                           output_elements, \")\"));\n       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\n       ++truth_iter;\n     }"
        },
        {
            "index":566,
            "vuln_id":"GHSA-7cqx-92hp-x6wh",
            "cwe_id":"{'CWE-787', 'CWE-119'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `MaxPool3DGradGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPool3DGradGrad` is vulnerable to a heap buffer overflow: \n\n```python\nimport tensorflow as tf\n\nvalues = [0.01] * 11\norig_input = tf.constant(values, shape=[11, 1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.01], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([0.01], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\nksize = [1, 1, 1, 1, 1]\nstrides = [1, 1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPool3DGradGrad(\n    orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n    strides=strides, padding=padding)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/596c05a159b6fbb9e39ca10b3f7753b7244fa1e9\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L694-L696) does not check that the initialization of `Pool3dParameters` completes successfully:\n\n```cc\nPool3dParameters params{context,  ksize_,       stride_,\n                        padding_, data_format_, tensor_in.shape()};\n```\n\nSince [the constructor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/596c05a159b6fbb9e39ca10b3f7753b7244fa1e9\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L48-L88) uses `OP_REQUIRES` to validate conditions, the first assertion that fails interrupts the initialization of `params`, making it contain invalid data. In turn, this might cause a heap buffer overflow, depending on default initialized values.\n\n### Patches\nWe have patched the issue in GitHub commit [63c6a29d0f2d692b247f7bf81f8732d6442fad09](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/63c6a29d0f2d692b247f7bf81f8732d6442fad09",
            "commit_sha":"63c6a29d0f2d692b247f7bf81f8732d6442fad09",
            "patch":"SINGLE",
            "chain_ord":"['63c6a29d0f2d692b247f7bf81f8732d6442fad09']",
            "before_first_fix_commit":"{'596c05a159b6fbb9e39ca10b3f7753b7244fa1e9'}",
            "last_fix_commit":"63c6a29d0f2d692b247f7bf81f8732d6442fad09",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 01:07:02",
            "message":"Add missing validation, prevent heap OOB\n\nPiperOrigin-RevId: 372246723\nChange-Id: I1a454a643810e77d7d14821b342098c56a09fbbf",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'tensorflow\/core\/kernels\/pooling_ops_3d.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/63c6a29d0f2d692b247f7bf81f8732d6442fad09\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_3d.cc', 'patch': '@@ -693,6 +693,7 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n \\n     Pool3dParameters params{context,  ksize_,       stride_,\\n                             padding_, data_format_, tensor_in.shape()};\\n+    if (!context->status().ok()) return;  \/\/ params is invalid\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n@@ -710,6 +711,17 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n         context, out_grad_backprop.NumElements() > 0,\\n         errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\\n                                 out_grad_backprop.DebugString()));\\n+    OP_REQUIRES(context,\\n+                tensor_in.NumElements() == out_grad_backprop.NumElements(),\\n+                errors::InvalidArgument(\"tensor_in and out_grad_backprop must \"\\n+                                        \"have same number of elements, got <\",\\n+                                        tensor_in.DebugString(), \"> and <\",\\n+                                        out_grad_backprop.DebugString(), \">\"));\\n+    OP_REQUIRES(\\n+        context, tensor_out.NumElements() == output->NumElements(),\\n+        errors::InvalidArgument(\\n+            \"tensor_out and output must have same number of elements, got <\",\\n+            tensor_out.DebugString(), \"> and <\", output->DebugString(), \">\"));\\n \\n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);'}}",
            "message_norm":"add missing validation, prevent heap oob\n\npiperorigin-revid: 372246723\nchange-id: i1a454a643810e77d7d14821b342098c56a09fbbf",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('prevent', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('372246723', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_3d.cc'])",
            "num_files":1.0,
            "patch_content":"From 63c6a29d0f2d692b247f7bf81f8732d6442fad09 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 5 May 2021 18:07:02 -0700\nSubject: [PATCH] Add missing validation, prevent heap OOB\n\nPiperOrigin-RevId: 372246723\nChange-Id: I1a454a643810e77d7d14821b342098c56a09fbbf\n---\n tensorflow\/core\/kernels\/pooling_ops_3d.cc | 12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/pooling_ops_3d.cc b\/tensorflow\/core\/kernels\/pooling_ops_3d.cc\nindex 7d133b66a1ebdf..9da2d62b0a21d3 100644\n--- a\/tensorflow\/core\/kernels\/pooling_ops_3d.cc\n+++ b\/tensorflow\/core\/kernels\/pooling_ops_3d.cc\n@@ -693,6 +693,7 @@ class MaxPooling3dGradGradOp : public OpKernel {\n \n     Pool3dParameters params{context,  ksize_,       stride_,\n                             padding_, data_format_, tensor_in.shape()};\n+    if (!context->status().ok()) return;  \/\/ params is invalid\n \n     Tensor* output = nullptr;\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\n@@ -710,6 +711,17 @@ class MaxPooling3dGradGradOp : public OpKernel {\n         context, out_grad_backprop.NumElements() > 0,\n         errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\n                                 out_grad_backprop.DebugString()));\n+    OP_REQUIRES(context,\n+                tensor_in.NumElements() == out_grad_backprop.NumElements(),\n+                errors::InvalidArgument(\"tensor_in and out_grad_backprop must \"\n+                                        \"have same number of elements, got <\",\n+                                        tensor_in.DebugString(), \"> and <\",\n+                                        out_grad_backprop.DebugString(), \">\"));\n+    OP_REQUIRES(\n+        context, tensor_out.NumElements() == output->NumElements(),\n+        errors::InvalidArgument(\n+            \"tensor_out and output must have same number of elements, got <\",\n+            tensor_out.DebugString(), \"> and <\", output->DebugString(), \">\"));\n \n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);",
            "code_diff":"@@ -693,6 +693,7 @@ class MaxPooling3dGradGradOp : public OpKernel {\n \n     Pool3dParameters params{context,  ksize_,       stride_,\n                             padding_, data_format_, tensor_in.shape()};\n+    if (!context->status().ok()) return;  \/\/ params is invalid\n \n     Tensor* output = nullptr;\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\n@@ -710,6 +711,17 @@ class MaxPooling3dGradGradOp : public OpKernel {\n         context, out_grad_backprop.NumElements() > 0,\n         errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\n                                 out_grad_backprop.DebugString()));\n+    OP_REQUIRES(context,\n+                tensor_in.NumElements() == out_grad_backprop.NumElements(),\n+                errors::InvalidArgument(\"tensor_in and out_grad_backprop must \"\n+                                        \"have same number of elements, got <\",\n+                                        tensor_in.DebugString(), \"> and <\",\n+                                        out_grad_backprop.DebugString(), \">\"));\n+    OP_REQUIRES(\n+        context, tensor_out.NumElements() == output->NumElements(),\n+        errors::InvalidArgument(\n+            \"tensor_out and output must have same number of elements, got <\",\n+            tensor_out.DebugString(), \"> and <\", output->DebugString(), \">\"));\n \n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);"
        },
        {
            "index":423,
            "vuln_id":"GHSA-x9rg-q5fx-fx66",
            "cwe_id":"{'CWE-20'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/kohsuke\/libpam4j\/commit\/02ffdff218283629ba4a902e7fe2fd44646abc21'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in libpam4j It was found that libpam4j prior to 1.10 did not properly validate user accounts when authenticating. A user with a valid password for a disabled account would be able to bypass security restrictions and possibly access sensitive information.",
            "published_date":"2022-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/kohsuke\/libpam4j",
            "commit_href":"https:\/\/github.com\/kohsuke\/libpam4j\/commit\/02ffdff218283629ba4a902e7fe2fd44646abc21",
            "commit_sha":"02ffdff218283629ba4a902e7fe2fd44646abc21",
            "patch":"SINGLE",
            "chain_ord":"['02ffdff218283629ba4a902e7fe2fd44646abc21']",
            "before_first_fix_commit":"{'f49e2838cb195b2dce1448393d8c88174ad80652'}",
            "last_fix_commit":"02ffdff218283629ba4a902e7fe2fd44646abc21",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/29\/2018, 18:11:55",
            "message":"call pam_acct_mgmt to verify whether the user account is valid.\n\nThis fixes issue #18 and thus CVE-2017-12197",
            "author":"Kohsuke Kawaguchi",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/main\/java\/org\/jvnet\/libpam\/PAM.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kohsuke\/libpam4j\/raw\/02ffdff218283629ba4a902e7fe2fd44646abc21\/src%2Fmain%2Fjava%2Forg%2Fjvnet%2Flibpam%2FPAM.java', 'patch': '@@ -124,7 +124,7 @@ public UnixUser authenticate(String username, String password) throws PAMExcepti\\n             check(libpam.pam_authenticate(pht,0),\"pam_authenticate failed\");\\n             check(libpam.pam_setcred(pht,0),\"pam_setcred failed\");\\n             \/\/ several different error code seem to be used to represent authentication failures\\n-\/\/            check(libpam.pam_acct_mgmt(pht,0),\"pam_acct_mgmt failed\");\\n+            check(libpam.pam_acct_mgmt(pht,0),\"pam_acct_mgmt failed\");\\n \\n             PointerByReference r = new PointerByReference();\\n             check(libpam.pam_get_item(pht,PAM_USER,r),\"pam_get_item failed\");'}}",
            "message_norm":"call pam_acct_mgmt to verify whether the user account is valid.\n\nthis fixes issue #18 and thus cve-2017-12197",
            "language":"en",
            "entities":"[('verify', 'ACTION', ''), ('user account', 'SECWORD', ''), ('#18', 'ISSUE', ''), ('cve-2017-12197', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/jvnet\/libpam\/PAM.java'])",
            "num_files":1.0,
            "patch_content":"From 02ffdff218283629ba4a902e7fe2fd44646abc21 Mon Sep 17 00:00:00 2001\nFrom: Kohsuke Kawaguchi <kk@kohsuke.org>\nDate: Tue, 29 May 2018 11:11:55 -0700\nSubject: [PATCH] call pam_acct_mgmt to verify whether the user account is\n valid.\n\nThis fixes issue #18 and thus CVE-2017-12197\n---\n src\/main\/java\/org\/jvnet\/libpam\/PAM.java | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/main\/java\/org\/jvnet\/libpam\/PAM.java b\/src\/main\/java\/org\/jvnet\/libpam\/PAM.java\nindex 9367552..658b6b8 100644\n--- a\/src\/main\/java\/org\/jvnet\/libpam\/PAM.java\n+++ b\/src\/main\/java\/org\/jvnet\/libpam\/PAM.java\n@@ -124,7 +124,7 @@ public UnixUser authenticate(String username, String password) throws PAMExcepti\n             check(libpam.pam_authenticate(pht,0),\"pam_authenticate failed\");\n             check(libpam.pam_setcred(pht,0),\"pam_setcred failed\");\n             \/\/ several different error code seem to be used to represent authentication failures\n-\/\/            check(libpam.pam_acct_mgmt(pht,0),\"pam_acct_mgmt failed\");\n+            check(libpam.pam_acct_mgmt(pht,0),\"pam_acct_mgmt failed\");\n \n             PointerByReference r = new PointerByReference();\n             check(libpam.pam_get_item(pht,PAM_USER,r),\"pam_get_item failed\");",
            "code_diff":"@@ -124,7 +124,7 @@ public UnixUser authenticate(String username, String password) throws PAMExcepti\n             check(libpam.pam_authenticate(pht,0),\"pam_authenticate failed\");\n             check(libpam.pam_setcred(pht,0),\"pam_setcred failed\");\n             \/\/ several different error code seem to be used to represent authentication failures\n-\/\/            check(libpam.pam_acct_mgmt(pht,0),\"pam_acct_mgmt failed\");\n+            check(libpam.pam_acct_mgmt(pht,0),\"pam_acct_mgmt failed\");\n \n             PointerByReference r = new PointerByReference();\n             check(libpam.pam_get_item(pht,PAM_USER,r),\"pam_get_item failed\");"
        },
        {
            "index":196,
            "vuln_id":"GHSA-8m5h-hrqm-pxm2",
            "cwe_id":"{'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/ESAPI\/esapi-java-legacy\/commit\/a0d67b75593878b1b6e39e2acc1773b3effedb2a'}",
            "dataset":"osv",
            "summary":"Path traversal in the OWASP Enterprise Security API ### Impact\nThe default implementation of `Validator.getValidDirectoryPath(String, String, File, boolean)` may incorrectly treat the tested input string as a child of the specified parent directory. This potentially could allow control-flow bypass checks to be defeated if an attack can specify the entire string representing the 'input' path.\n\n### Patches\nThis vulnerability is patched in release 2.3.0.0 of ESAPI. See https:\/\/github.com\/ESAPI\/esapi-java-legacy\/releases\/tag\/esapi-2.3.0.0 for details.\n\n### Workarounds\nYes; in theory, one _could_ write the own implementation of the Validator interface. This would most easily be done by sub-classing a version of the affected `DefaultValidator` class and then overriding the affected `getValidDirectoryPath()` to correct the issue. However, this is not recommended.\n\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email one of the project co-leaders. See email addresses listed on  the [OWASP ESAPI wiki](https:\/\/owasp.org\/www-project-enterprise-security-api\/) page, under \"Leaders\".\n* Send email to one of the two ESAPI related Google Groups listed under [Where to Find More Information on ESAPI](https:\/\/github.com\/ESAPI\/esapi-java-legacy#where-to-find-more-information-on-esapi) on our [README.md](https:\/\/github.com\/ESAPI\/esapi-java-legacy#readme) page.",
            "published_date":"2022-04-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/ESAPI\/esapi-java-legacy",
            "commit_href":"https:\/\/github.com\/ESAPI\/esapi-java-legacy\/commit\/a0d67b75593878b1b6e39e2acc1773b3effedb2a",
            "commit_sha":"a0d67b75593878b1b6e39e2acc1773b3effedb2a",
            "patch":"SINGLE",
            "chain_ord":"['a0d67b75593878b1b6e39e2acc1773b3effedb2a']",
            "before_first_fix_commit":"{'657c2a751c0b8dbd70b8da1bba246d86f7ad3b20'}",
            "last_fix_commit":"a0d67b75593878b1b6e39e2acc1773b3effedb2a",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/17\/2022, 04:32:15",
            "message":"Fix for GHSL-2022-008 vulnerability.",
            "author":"kwwall",
            "comments":"{'com_1': {'author': 'JLLeitschuh', 'datetime': '04\/29\/2022, 00:50:01', 'body': 'For back tracking this is related to CVE-2022-23457\\r\\n\\r\\nhttps:\/\/github.com\/ESAPI\/esapi-java-legacy\/security\/advisories\/GHSA-8m5h-hrqm-pxm2'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ESAPI\/esapi-java-legacy\/raw\/a0d67b75593878b1b6e39e2acc1773b3effedb2a\/src%2Fmain%2Fjava%2Forg%2Fowasp%2Fesapi%2Freference%2FDefaultValidator.java', 'patch': '@@ -466,7 +466,7 @@ public String getValidDirectoryPath(String context, String input, File parent, b\\n \\t\\t\\tif ( !parent.isDirectory() ) {\\n \\t\\t\\t\\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, specified parent is not a directory: context=\" + context + \", input=\" + input + \", parent=\" + parent );\\n \\t\\t\\t}\\n-\\t\\t\\tif ( !dir.getCanonicalPath().startsWith(parent.getCanonicalPath() ) ) {\\n+\\t\\t\\tif ( !dir.getCanonicalFile().toPath().startsWith( parent.getCanonicalFile().toPath() ) ) { \/\/ Fixes GHSL-2022-008\\n \\t\\t\\t\\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, not inside specified parent: context=\" + context + \", input=\" + input + \", parent=\" + parent );\\n \\t\\t\\t}'}}",
            "message_norm":"fix for ghsl-2022-008 vulnerability.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java'])",
            "num_files":1.0,
            "patch_content":"From a0d67b75593878b1b6e39e2acc1773b3effedb2a Mon Sep 17 00:00:00 2001\nFrom: kwwall <kevin.w.wall@gmail.com>\nDate: Sun, 17 Apr 2022 00:32:15 -0400\nSubject: [PATCH] Fix for GHSL-2022-008 vulnerability.\n\n---\n src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java b\/src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java\nindex 530e2efa8..0699a5287 100644\n--- a\/src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java\n+++ b\/src\/main\/java\/org\/owasp\/esapi\/reference\/DefaultValidator.java\n@@ -466,7 +466,7 @@ public String getValidDirectoryPath(String context, String input, File parent, b\n \t\t\tif ( !parent.isDirectory() ) {\n \t\t\t\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, specified parent is not a directory: context=\" + context + \", input=\" + input + \", parent=\" + parent );\n \t\t\t}\n-\t\t\tif ( !dir.getCanonicalPath().startsWith(parent.getCanonicalPath() ) ) {\n+\t\t\tif ( !dir.getCanonicalFile().toPath().startsWith( parent.getCanonicalFile().toPath() ) ) { \/\/ Fixes GHSL-2022-008\n \t\t\t\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, not inside specified parent: context=\" + context + \", input=\" + input + \", parent=\" + parent );\n \t\t\t}",
            "code_diff":"@@ -466,7 +466,7 @@ public String getValidDirectoryPath(String context, String input, File parent, b\n \t\t\tif ( !parent.isDirectory() ) {\n \t\t\t\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, specified parent is not a directory: context=\" + context + \", input=\" + input + \", parent=\" + parent );\n \t\t\t}\n-\t\t\tif ( !dir.getCanonicalPath().startsWith(parent.getCanonicalPath() ) ) {\n+\t\t\tif ( !dir.getCanonicalFile().toPath().startsWith( parent.getCanonicalFile().toPath() ) ) { \/\/ Fixes GHSL-2022-008\n \t\t\t\tthrow new ValidationException( context + \": Invalid directory name\", \"Invalid directory, not inside specified parent: context=\" + context + \", input=\" + input + \", parent=\" + parent );\n \t\t\t}"
        },
        {
            "index":156,
            "vuln_id":"GHSA-g954-5hwp-pp24",
            "cwe_id":"{'CWE-1321'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/protobufjs\/protobuf.js\/commit\/b5f1391dff5515894830a6570e6d73f5511b2e8f'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in protobufjs The package protobufjs before 6.11.3 and 6.10.3 is vulnerable to Prototype Pollution, which can allow an attacker to add\/modify properties of the Object.prototype.\n\nThis vulnerability can occur in multiple ways:\n1. by providing untrusted user input to util.setProperty or to ReflectionObject.setParsedOption functions\n2. by parsing\/loading .proto files",
            "published_date":"2022-05-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/protobufjs\/protobuf.js",
            "commit_href":"https:\/\/github.com\/protobufjs\/protobuf.js\/commit\/b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "commit_sha":"b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "patch":"SINGLE",
            "chain_ord":"['b5f1391dff5515894830a6570e6d73f5511b2e8f']",
            "before_first_fix_commit":"{'7afd0a39f41d6df5fda6fa10c319cdf829027d3e'}",
            "last_fix_commit":"b5f1391dff5515894830a6570e6d73f5511b2e8f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/20\/2022, 18:08:37",
            "message":"fix: do not let setProperty change the prototype (#1731)",
            "author":"Alexander Fenster",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'src\/util.js': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/protobufjs\/protobuf.js\/raw\/b5f1391dff5515894830a6570e6d73f5511b2e8f\/src%2Futil.js', 'patch': '@@ -176,6 +176,9 @@ util.decorateEnum = function decorateEnum(object) {\\n util.setProperty = function setProperty(dst, path, value) {\\n     function setProp(dst, path, value) {\\n         var part = path.shift();\\n+        if (part === \"__proto__\") {\\n+          return dst;\\n+        }\\n         if (path.length > 0) {\\n             dst[part] = setProp(dst[part] || {}, path, value);\\n         } else {'}}",
            "message_norm":"fix: do not let setproperty change the prototype (#1731)",
            "language":"en",
            "entities":"[('change', 'ACTION', ''), ('#1731', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/util.js'])",
            "num_files":1.0,
            "patch_content":"From b5f1391dff5515894830a6570e6d73f5511b2e8f Mon Sep 17 00:00:00 2001\nFrom: Alexander Fenster <fenster@google.com>\nDate: Fri, 20 May 2022 11:08:37 -0700\nSubject: [PATCH] fix: do not let setProperty change the prototype (#1731)\n\n---\n src\/util.js | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/src\/util.js b\/src\/util.js\nindex 5ae88cc7f..c39d33a6a 100644\n--- a\/src\/util.js\n+++ b\/src\/util.js\n@@ -176,6 +176,9 @@ util.decorateEnum = function decorateEnum(object) {\n util.setProperty = function setProperty(dst, path, value) {\n     function setProp(dst, path, value) {\n         var part = path.shift();\n+        if (part === \"__proto__\") {\n+          return dst;\n+        }\n         if (path.length > 0) {\n             dst[part] = setProp(dst[part] || {}, path, value);\n         } else {",
            "code_diff":"@@ -176,6 +176,9 @@ util.decorateEnum = function decorateEnum(object) {\n util.setProperty = function setProperty(dst, path, value) {\n     function setProp(dst, path, value) {\n         var part = path.shift();\n+        if (part === \"__proto__\") {\n+          return dst;\n+        }\n         if (path.length > 0) {\n             dst[part] = setProp(dst[part] || {}, path, value);\n         } else {"
        },
        {
            "index":607,
            "vuln_id":"GHSA-gvm4-h8j3-rjrq",
            "cwe_id":"{'CWE-617'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/77dd114513d7796e1e2b8aece214a380af26fbf4'}",
            "dataset":"osv",
            "summary":"CHECK-fail in `LoadAndRemapMatrix` ### Impact\nAn attacker can cause a denial of service by exploiting a `CHECK`-failure coming from `tf.raw_ops.LoadAndRemapMatrix`:\n    \n```python\nimport tensorflow as tf\n\nckpt_path = tf.constant([], shape=[0], dtype=tf.string)\nold_tensor_name = tf.constant(\"\")\nrow_remapping = tf.constant([], shape=[0], dtype=tf.int64)\ncol_remapping = tf.constant([1], shape=[1], dtype=tf.int64)\ninitializing_values = tf.constant(1.0)\n\ntf.raw_ops.LoadAndRemapMatrix(\n    ckpt_path=ckpt_path, old_tensor_name=old_tensor_name,\n    row_remapping=row_remapping, col_remapping=col_remapping,\n    initializing_values=initializing_values, num_rows=0, num_cols=1)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/d94227d43aa125ad8b54115c03cece54f6a1977b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L219-L222) assumes that the `ckpt_path` is always a valid scalar.\n  \n```cc\nconst string& ckpt_path = ckpt_path_t->scalar<tstring>()();\n```\n\nHowever, an attacker can send any other tensor as the first argument of `LoadAndRemapMatrix`. This would cause the rank `CHECK` in `scalar<T>()()` to trigger and terminate the process.\n\n### Patches\nWe have patched the issue in GitHub commit [77dd114513d7796e1e2b8aece214a380af26fbf4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/77dd114513d7796e1e2b8aece214a380af26fbf4).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/77dd114513d7796e1e2b8aece214a380af26fbf4",
            "commit_sha":"77dd114513d7796e1e2b8aece214a380af26fbf4",
            "patch":"SINGLE",
            "chain_ord":"['77dd114513d7796e1e2b8aece214a380af26fbf4']",
            "before_first_fix_commit":"{'faa76f39014ed3b5e2c158593b1335522e573c7f'}",
            "last_fix_commit":"77dd114513d7796e1e2b8aece214a380af26fbf4",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/04\/2021, 22:46:30",
            "message":"Fix a check fail\n\nPiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/77dd114513d7796e1e2b8aece214a380af26fbf4\/tensorflow%2Fcore%2Fkernels%2Fload_and_remap_matrix_op.cc', 'patch': '@@ -123,6 +123,11 @@ class LoadAndRemapMatrixOp : public OpKernel {\\n     \/\/ Processes the checkpoint source and the provided Tensor name.\\n     const Tensor* ckpt_path_t;\\n     OP_REQUIRES_OK(context, context->input(\"ckpt_path\", &ckpt_path_t));\\n+    OP_REQUIRES(\\n+        context, ckpt_path_t->NumElements() == 1,\\n+        errors::InvalidArgument(\"The `ckpt_path` tensor must have exactly one \"\\n+                                \"element, got tensor of shape \",\\n+                                ckpt_path_t->shape().DebugString()));\\n     const string& ckpt_path = ckpt_path_t->scalar<tstring>()();\\n     const Tensor* old_tensor_name_t;\\n     OP_REQUIRES_OK(context,'}}",
            "message_norm":"fix a check fail\n\npiperorigin-revid: 372011072\nchange-id: i1062cfaed0aa16884e9a16312483794d188db76f",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('372011072', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 77dd114513d7796e1e2b8aece214a380af26fbf4 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 4 May 2021 15:46:30 -0700\nSubject: [PATCH] Fix a check fail\n\nPiperOrigin-RevId: 372011072\nChange-Id: I1062cfaed0aa16884e9a16312483794d188db76f\n---\n tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc b\/tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc\nindex cb0245a9b61261..5ec28c70358132 100644\n--- a\/tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc\n+++ b\/tensorflow\/core\/kernels\/load_and_remap_matrix_op.cc\n@@ -123,6 +123,11 @@ class LoadAndRemapMatrixOp : public OpKernel {\n     \/\/ Processes the checkpoint source and the provided Tensor name.\n     const Tensor* ckpt_path_t;\n     OP_REQUIRES_OK(context, context->input(\"ckpt_path\", &ckpt_path_t));\n+    OP_REQUIRES(\n+        context, ckpt_path_t->NumElements() == 1,\n+        errors::InvalidArgument(\"The `ckpt_path` tensor must have exactly one \"\n+                                \"element, got tensor of shape \",\n+                                ckpt_path_t->shape().DebugString()));\n     const string& ckpt_path = ckpt_path_t->scalar<tstring>()();\n     const Tensor* old_tensor_name_t;\n     OP_REQUIRES_OK(context,",
            "code_diff":"@@ -123,6 +123,11 @@ class LoadAndRemapMatrixOp : public OpKernel {\n     \/\/ Processes the checkpoint source and the provided Tensor name.\n     const Tensor* ckpt_path_t;\n     OP_REQUIRES_OK(context, context->input(\"ckpt_path\", &ckpt_path_t));\n+    OP_REQUIRES(\n+        context, ckpt_path_t->NumElements() == 1,\n+        errors::InvalidArgument(\"The `ckpt_path` tensor must have exactly one \"\n+                                \"element, got tensor of shape \",\n+                                ckpt_path_t->shape().DebugString()));\n     const string& ckpt_path = ckpt_path_t->scalar<tstring>()();\n     const Tensor* old_tensor_name_t;\n     OP_REQUIRES_OK(context,"
        },
        {
            "index":31,
            "vuln_id":"GHSA-786j-5qwq-r36x",
            "cwe_id":"{'CWE-824'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659'}",
            "dataset":"osv",
            "summary":"Segfault while copying constant resource tensor ### Impact\nDuring TensorFlow's Grappler optimizer phase, constant folding might attempt to deep copy a resource tensor. This results in a segfault, as these tensors are supposed to not change.\n\n### Patches\nWe have patched the issue in GitHub commit [7731e8dfbe4a56773be5dc94d631611211156659](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7731e8dfbe4a56773be5dc94d631611211156659",
            "commit_sha":"7731e8dfbe4a56773be5dc94d631611211156659",
            "patch":"SINGLE",
            "chain_ord":"['7731e8dfbe4a56773be5dc94d631611211156659']",
            "before_first_fix_commit":"{'a813a3f1631e9c0e0e0cc3032349a03a6041526c'}",
            "last_fix_commit":"7731e8dfbe4a56773be5dc94d631611211156659",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/19\/2021, 18:25:32",
            "message":"Don't constant-fold DT_RESOURCE constants.\n\nPiperOrigin-RevId: 391803952\nChange-Id: I0ea3ec31d3e7dfda0f03b4027a237f08d00a3091",
            "author":"A. Unique TensorFlower",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'tensorflow\/core\/common_runtime\/constant_folding.cc': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7731e8dfbe4a56773be5dc94d631611211156659\/tensorflow%2Fcore%2Fcommon_runtime%2Fconstant_folding.cc', 'patch': '@@ -30,6 +30,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/framework\/log_memory.h\"\\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n #include \"tensorflow\/core\/framework\/types.h\"\\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\\n #include \"tensorflow\/core\/graph\/algorithm.h\"\\n #include \"tensorflow\/core\/graph\/node_builder.h\"\\n #include \"tensorflow\/core\/graph\/subgraph.h\"\\n@@ -223,7 +224,8 @@ bool IsConstantFoldable(\\n     std::unordered_map<const Node*, std::vector<Tensor>>*\\n         shape_replacement_map) {\\n   if (n->IsConstant()) {\\n-    return true;\\n+    \/\/ Skip constant folding resources as they cannot be deep copied.\\n+    return n->output_type(0) != DT_RESOURCE;\\n   }\\n   if (MaybeReplaceShapeOp(n, shape_map, shape_replacement_map)) {\\n     return true;'}}",
            "message_norm":"don't constant-fold dt_resource constants.\n\npiperorigin-revid: 391803952\nchange-id: i0ea3ec31d3e7dfda0f03b4027a237f08d00a3091",
            "language":"ca",
            "entities":"[('391803952', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/common_runtime\/constant_folding.cc'])",
            "num_files":1.0,
            "patch_content":"From 7731e8dfbe4a56773be5dc94d631611211156659 Mon Sep 17 00:00:00 2001\nFrom: \"A. Unique TensorFlower\" <gardener@tensorflow.org>\nDate: Thu, 19 Aug 2021 11:25:32 -0700\nSubject: [PATCH] Don't constant-fold DT_RESOURCE constants.\n\nPiperOrigin-RevId: 391803952\nChange-Id: I0ea3ec31d3e7dfda0f03b4027a237f08d00a3091\n---\n tensorflow\/core\/common_runtime\/constant_folding.cc | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/common_runtime\/constant_folding.cc b\/tensorflow\/core\/common_runtime\/constant_folding.cc\nindex 8367e5ff6aff34..ca75dc9f19160a 100644\n--- a\/tensorflow\/core\/common_runtime\/constant_folding.cc\n+++ b\/tensorflow\/core\/common_runtime\/constant_folding.cc\n@@ -30,6 +30,7 @@ limitations under the License.\n #include \"tensorflow\/core\/framework\/log_memory.h\"\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\n #include \"tensorflow\/core\/framework\/types.h\"\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\n #include \"tensorflow\/core\/graph\/algorithm.h\"\n #include \"tensorflow\/core\/graph\/node_builder.h\"\n #include \"tensorflow\/core\/graph\/subgraph.h\"\n@@ -223,7 +224,8 @@ bool IsConstantFoldable(\n     std::unordered_map<const Node*, std::vector<Tensor>>*\n         shape_replacement_map) {\n   if (n->IsConstant()) {\n-    return true;\n+    \/\/ Skip constant folding resources as they cannot be deep copied.\n+    return n->output_type(0) != DT_RESOURCE;\n   }\n   if (MaybeReplaceShapeOp(n, shape_map, shape_replacement_map)) {\n     return true;",
            "code_diff":"@@ -30,6 +30,7 @@ limitations under the License.\n #include \"tensorflow\/core\/framework\/log_memory.h\"\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\n #include \"tensorflow\/core\/framework\/types.h\"\n+#include \"tensorflow\/core\/framework\/types.pb.h\"\n #include \"tensorflow\/core\/graph\/algorithm.h\"\n #include \"tensorflow\/core\/graph\/node_builder.h\"\n #include \"tensorflow\/core\/graph\/subgraph.h\"\n@@ -223,7 +224,8 @@ bool IsConstantFoldable(\n     std::unordered_map<const Node*, std::vector<Tensor>>*\n         shape_replacement_map) {\n   if (n->IsConstant()) {\n-    return true;\n+    \/\/ Skip constant folding resources as they cannot be deep copied.\n+    return n->output_type(0) != DT_RESOURCE;\n   }\n   if (MaybeReplaceShapeOp(n, shape_map, shape_replacement_map)) {\n     return true;"
        },
        {
            "index":338,
            "vuln_id":"GHSA-f7f6-xrwc-9c57",
            "cwe_id":"{'CWE-20'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/jenkinsci\/jenkins\/commit\/ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in Jenkins Jenkins 2.73.1 and earlier, 2.83 and earlier bundled a version of the commons-fileupload library with the denial-of-service vulnerability known as CVE-2016-3092. The fix for that vulnerability has been backported to the version of the library bundled with Jenkins.",
            "published_date":"2022-05-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/jenkinsci\/jenkins",
            "commit_href":"https:\/\/github.com\/jenkinsci\/jenkins\/commit\/ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b",
            "commit_sha":"ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b",
            "patch":"SINGLE",
            "chain_ord":"['ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b']",
            "before_first_fix_commit":"{'fe77d1c3dbf91ddf2a9f8e5ed882611455ab00d0'}",
            "last_fix_commit":"ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/29\/2017, 13:41:00",
            "message":"[SECURITY-490] Patch Commons File Upload 1.3.x.",
            "author":"Jesse Glick",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'core\/pom.xml': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jenkinsci\/jenkins\/raw\/ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b\/core%2Fpom.xml', 'patch': '@@ -588,7 +588,7 @@ THE SOFTWARE.\\n     <dependency>\\n       <groupId>commons-fileupload<\/groupId>\\n       <artifactId>commons-fileupload<\/artifactId>\\n-      <version>1.3.1-jenkins-1<\/version>\\n+      <version>1.3.1-jenkins-2<\/version> \\n     <\/dependency>\\n \\n     <!-- offline profiler API to put in the classpath if we need it -->'}}",
            "message_norm":"[security-490] patch commons file upload 1.3.x.",
            "language":"en",
            "entities":"[('security-490', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['core\/pom.xml'])",
            "num_files":1.0,
            "patch_content":"From ea981a029cb985b71f3a0dc0f9ce3b3e3e6c001b Mon Sep 17 00:00:00 2001\nFrom: Jesse Glick <jglick@cloudbees.com>\nDate: Fri, 29 Sep 2017 09:41:00 -0400\nSubject: [PATCH] [SECURITY-490] Patch Commons File Upload 1.3.x.\n\n---\n core\/pom.xml | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/core\/pom.xml b\/core\/pom.xml\nindex 54c7ad407818..93237c04e065 100644\n--- a\/core\/pom.xml\n+++ b\/core\/pom.xml\n@@ -588,7 +588,7 @@ THE SOFTWARE.\n     <dependency>\n       <groupId>commons-fileupload<\/groupId>\n       <artifactId>commons-fileupload<\/artifactId>\n-      <version>1.3.1-jenkins-1<\/version>\n+      <version>1.3.1-jenkins-2<\/version> \n     <\/dependency>\n \n     <!-- offline profiler API to put in the classpath if we need it -->",
            "code_diff":"@@ -588,7 +588,7 @@ THE SOFTWARE.\n     <dependency>\n       <groupId>commons-fileupload<\/groupId>\n       <artifactId>commons-fileupload<\/artifactId>\n-      <version>1.3.1-jenkins-1<\/version>\n+      <version>1.3.1-jenkins-2<\/version> \n     <\/dependency>\n \n     <!-- offline profiler API to put in the classpath if we need it -->"
        },
        {
            "index":949,
            "vuln_id":"GHSA-3pxp-6963-46r9",
            "cwe_id":"{'CWE-77'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/commit\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd'}",
            "dataset":"osv",
            "summary":"Command Injection in pdfinfojs Versions of `pdfinfojs` before 0.4.1 are vulnerable to command injection. This is exploitable if an attacker can control the filename parameter that is passed into the `pdfinfojs` constructor.\n\n\n## Recommendation\n\nUpdate to version 0.4.1 or later.",
            "published_date":"2018-06-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/fagbokforlaget\/pdfinfojs",
            "commit_href":"https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/commit\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd",
            "commit_sha":"5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd",
            "patch":"SINGLE",
            "chain_ord":"['5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd']",
            "before_first_fix_commit":"{'379c0e14db8298b465269653b9ac308d83eb6d4e'}",
            "last_fix_commit":"5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/13\/2018, 11:36:11",
            "message":"fix: command injection vulnerability",
            "author":"Deepak Thukral",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'lib\/pdfinfo.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fagbokforlaget\/pdfinfojs\/raw\/5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd\/lib%2Fpdfinfo.js', 'patch': '@@ -1,9 +1,9 @@\\n-const { exec, execSync } = require(\\'child_process\\');\\n+const { execFile, execFileSync } = require(\\'child_process\\');\\n const utils = require(\\'.\/utils\\');\\n \\n function pdfinfo (filename, options) {\\n   this.options = options || {};\\n-  this.options.additional = [\\'\"\\' + filename + \\'\"\\'];\\n+  this.options.additional = [filename];\\n \\n   pdfinfo.prototype.add_options = function(optionArray) {\\n     if (typeof optionArray.length !== undefined) {\\n@@ -23,7 +23,7 @@ function pdfinfo (filename, options) {\\n   pdfinfo.prototype.getInfoSync = function() {\\n     const self = this;\\n     try {\\n-    \\tlet data = execSync(\\'pdfinfo \\' + self.options.additional.join(\\' \\')).toString(\\'utf8\\');\\n+    \\tlet data = execFileSync(\\'pdfinfo\\', self.options.additional).toString(\\'utf8\\');\\n         return utils.parse(data);\\n     } catch(err) {\\n         throw new Error(\"pdfinfo error: \"+ err.msg);\\n@@ -33,7 +33,7 @@ function pdfinfo (filename, options) {\\n \\n   pdfinfo.prototype.getInfo = function(cb) {\\n     let self = this;\\n-    let child = exec(\\'pdfinfo \\' + self.options.additional.join(\\' \\'), function(error, stdout, stderr) {\\n+    let child = execFile(\\'pdfinfo\\', self.options.additional, (error, stdout, stderr) => {\\n       if (!error) {\\n         let data = utils.parse(stdout);\\n         if (cb && typeof cb === \"function\") {'}}",
            "message_norm":"fix: command injection vulnerability",
            "language":"en",
            "entities":"[('command injection', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/pdfinfo.js'])",
            "num_files":1.0,
            "patch_content":"From 5cc59cd8aa13ca8d16bb41da8affdfef370ad4fd Mon Sep 17 00:00:00 2001\nFrom: Deepak Thukral <deepak.thukral@fagbokforlaget.no>\nDate: Fri, 13 Apr 2018 13:36:11 +0200\nSubject: [PATCH] fix: command injection vulnerability\n\n---\n lib\/pdfinfo.js | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/lib\/pdfinfo.js b\/lib\/pdfinfo.js\nindex 2eead73..3d6defa 100644\n--- a\/lib\/pdfinfo.js\n+++ b\/lib\/pdfinfo.js\n@@ -1,9 +1,9 @@\n-const { exec, execSync } = require('child_process');\n+const { execFile, execFileSync } = require('child_process');\n const utils = require('.\/utils');\n \n function pdfinfo (filename, options) {\n   this.options = options || {};\n-  this.options.additional = ['\"' + filename + '\"'];\n+  this.options.additional = [filename];\n \n   pdfinfo.prototype.add_options = function(optionArray) {\n     if (typeof optionArray.length !== undefined) {\n@@ -23,7 +23,7 @@ function pdfinfo (filename, options) {\n   pdfinfo.prototype.getInfoSync = function() {\n     const self = this;\n     try {\n-    \tlet data = execSync('pdfinfo ' + self.options.additional.join(' ')).toString('utf8');\n+    \tlet data = execFileSync('pdfinfo', self.options.additional).toString('utf8');\n         return utils.parse(data);\n     } catch(err) {\n         throw new Error(\"pdfinfo error: \"+ err.msg);\n@@ -33,7 +33,7 @@ function pdfinfo (filename, options) {\n \n   pdfinfo.prototype.getInfo = function(cb) {\n     let self = this;\n-    let child = exec('pdfinfo ' + self.options.additional.join(' '), function(error, stdout, stderr) {\n+    let child = execFile('pdfinfo', self.options.additional, (error, stdout, stderr) => {\n       if (!error) {\n         let data = utils.parse(stdout);\n         if (cb && typeof cb === \"function\") {",
            "code_diff":"@@ -1,9 +1,9 @@\n-const { exec, execSync } = require('child_process');\n+const { execFile, execFileSync } = require('child_process');\n const utils = require('.\/utils');\n \n function pdfinfo (filename, options) {\n   this.options = options || {};\n-  this.options.additional = ['\"' + filename + '\"'];\n+  this.options.additional = [filename];\n \n   pdfinfo.prototype.add_options = function(optionArray) {\n     if (typeof optionArray.length !== undefined) {\n@@ -23,7 +23,7 @@ function pdfinfo (filename, options) {\n   pdfinfo.prototype.getInfoSync = function() {\n     const self = this;\n     try {\n-    \tlet data = execSync('pdfinfo ' + self.options.additional.join(' ')).toString('utf8');\n+    \tlet data = execFileSync('pdfinfo', self.options.additional).toString('utf8');\n         return utils.parse(data);\n     } catch(err) {\n         throw new Error(\"pdfinfo error: \"+ err.msg);\n@@ -33,7 +33,7 @@ function pdfinfo (filename, options) {\n \n   pdfinfo.prototype.getInfo = function(cb) {\n     let self = this;\n-    let child = exec('pdfinfo ' + self.options.additional.join(' '), function(error, stdout, stderr) {\n+    let child = execFile('pdfinfo', self.options.additional, (error, stdout, stderr) => {\n       if (!error) {\n         let data = utils.parse(stdout);\n         if (cb && typeof cb === \"function\") {"
        },
        {
            "index":841,
            "vuln_id":"GHSA-864j-6qpp-cmrr",
            "cwe_id":"{'CWE-89'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/alexreisner\/geocoder\/commit\/dcdc3d8675411edce3965941a2ca7c441ca48613'}",
            "dataset":"osv",
            "summary":"SQL Injection in Geocoder sql.rb in Geocoder before 1.6.1 allows Boolean-based SQL injection when within_bounding_box is used in conjunction with untrusted sw_lat, sw_lng, ne_lat, or ne_lng data.",
            "published_date":"2020-06-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/alexreisner\/geocoder",
            "commit_href":"https:\/\/github.com\/alexreisner\/geocoder\/commit\/dcdc3d8675411edce3965941a2ca7c441ca48613",
            "commit_sha":"dcdc3d8675411edce3965941a2ca7c441ca48613",
            "patch":"SINGLE",
            "chain_ord":"['dcdc3d8675411edce3965941a2ca7c441ca48613']",
            "before_first_fix_commit":"{'1ff64c47b6fc21d9c5ce30a6549d9eaa67c81a9e'}",
            "last_fix_commit":"dcdc3d8675411edce3965941a2ca7c441ca48613",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/23\/2020, 16:08:45",
            "message":"Sanitize lat\/lon for SQL query.",
            "author":"Alex Reisner",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'lib\/geocoder\/sql.rb': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alexreisner\/geocoder\/raw\/dcdc3d8675411edce3965941a2ca7c441ca48613\/lib%2Fgeocoder%2Fsql.rb', 'patch': '@@ -44,13 +44,13 @@ def approx_distance(latitude, longitude, lat_attr, lon_attr, options = {})\\n     end\\n \\n     def within_bounding_box(sw_lat, sw_lng, ne_lat, ne_lng, lat_attr, lon_attr)\\n-      spans = \"#{lat_attr} BETWEEN #{sw_lat} AND #{ne_lat} AND \"\\n+      spans = \"#{lat_attr} BETWEEN #{sw_lat.to_f} AND #{ne_lat.to_f} AND \"\\n       # handle box that spans 180 longitude\\n       if sw_lng.to_f > ne_lng.to_f\\n-        spans + \"(#{lon_attr} BETWEEN #{sw_lng} AND 180 OR \" +\\n-        \"#{lon_attr} BETWEEN -180 AND #{ne_lng})\"\\n+        spans + \"(#{lon_attr} BETWEEN #{sw_lng.to_f} AND 180 OR \" +\\n+        \"#{lon_attr} BETWEEN -180 AND #{ne_lng.to_f})\"\\n       else\\n-        spans + \"#{lon_attr} BETWEEN #{sw_lng} AND #{ne_lng}\"\\n+        spans + \"#{lon_attr} BETWEEN #{sw_lng.to_f} AND #{ne_lng.to_f}\"\\n       end\\n     end'}}",
            "message_norm":"sanitize lat\/lon for sql query.",
            "language":"fr",
            "entities":"[('sanitize', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/geocoder\/sql.rb'])",
            "num_files":1.0,
            "patch_content":"From dcdc3d8675411edce3965941a2ca7c441ca48613 Mon Sep 17 00:00:00 2001\nFrom: Alex Reisner <alex@alexreisner.com>\nDate: Thu, 23 Jan 2020 09:08:45 -0700\nSubject: [PATCH] Sanitize lat\/lon for SQL query.\n\n---\n lib\/geocoder\/sql.rb | 8 ++++----\n 1 file changed, 4 insertions(+), 4 deletions(-)\n\ndiff --git a\/lib\/geocoder\/sql.rb b\/lib\/geocoder\/sql.rb\nindex 71ea96f8a..6bca8a65a 100644\n--- a\/lib\/geocoder\/sql.rb\n+++ b\/lib\/geocoder\/sql.rb\n@@ -44,13 +44,13 @@ def approx_distance(latitude, longitude, lat_attr, lon_attr, options = {})\n     end\n \n     def within_bounding_box(sw_lat, sw_lng, ne_lat, ne_lng, lat_attr, lon_attr)\n-      spans = \"#{lat_attr} BETWEEN #{sw_lat} AND #{ne_lat} AND \"\n+      spans = \"#{lat_attr} BETWEEN #{sw_lat.to_f} AND #{ne_lat.to_f} AND \"\n       # handle box that spans 180 longitude\n       if sw_lng.to_f > ne_lng.to_f\n-        spans + \"(#{lon_attr} BETWEEN #{sw_lng} AND 180 OR \" +\n-        \"#{lon_attr} BETWEEN -180 AND #{ne_lng})\"\n+        spans + \"(#{lon_attr} BETWEEN #{sw_lng.to_f} AND 180 OR \" +\n+        \"#{lon_attr} BETWEEN -180 AND #{ne_lng.to_f})\"\n       else\n-        spans + \"#{lon_attr} BETWEEN #{sw_lng} AND #{ne_lng}\"\n+        spans + \"#{lon_attr} BETWEEN #{sw_lng.to_f} AND #{ne_lng.to_f}\"\n       end\n     end",
            "code_diff":"@@ -44,13 +44,13 @@ def approx_distance(latitude, longitude, lat_attr, lon_attr, options = {})\n     end\n \n     def within_bounding_box(sw_lat, sw_lng, ne_lat, ne_lng, lat_attr, lon_attr)\n-      spans = \"#{lat_attr} BETWEEN #{sw_lat} AND #{ne_lat} AND \"\n+      spans = \"#{lat_attr} BETWEEN #{sw_lat.to_f} AND #{ne_lat.to_f} AND \"\n       # handle box that spans 180 longitude\n       if sw_lng.to_f > ne_lng.to_f\n-        spans + \"(#{lon_attr} BETWEEN #{sw_lng} AND 180 OR \" +\n-        \"#{lon_attr} BETWEEN -180 AND #{ne_lng})\"\n+        spans + \"(#{lon_attr} BETWEEN #{sw_lng.to_f} AND 180 OR \" +\n+        \"#{lon_attr} BETWEEN -180 AND #{ne_lng.to_f})\"\n       else\n-        spans + \"#{lon_attr} BETWEEN #{sw_lng} AND #{ne_lng}\"\n+        spans + \"#{lon_attr} BETWEEN #{sw_lng.to_f} AND #{ne_lng.to_f}\"\n       end\n     end"
        },
        {
            "index":69,
            "vuln_id":"GHSA-23c7-6444-399m",
            "cwe_id":"{'CWE-284', 'CWE-20'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/643388365f28c5cc682254ab913c401f0e53260a', 'https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/7c96d400358221e59135f0a0be0744f3fad73856'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in sopel-plugins.channelmgnt ### Impact\nOn some IRC servers, restrictions around the removal of the bot using the kick\/kickban command could be bypassed when kicking multiple users at once.\nWe also believe it may have been possible to remove users from other channels but due to the wonder that is IRC and following RfCs, We have no POC for that.\n\nFreenode is not affected.\n\n### Patches\nUpgrade to 2.0.1 or higher\n\n### Workarounds\nDo not use this plugin on networks where TARGMAX > 1.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue on [phab](https:\/\/phab.mirahezebots.org\/maniphest\/task\/edit\/form\/1\/).\n* Email us at [staff(at)mirahezebots(dot)org](mailto:staff@mirahezebots.org)",
            "published_date":"2021-04-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt",
            "commit_href":"https:\/\/github.com\/MirahezeBots\/sopel-channelmgnt\/commit\/643388365f28c5cc682254ab913c401f0e53260a",
            "commit_sha":"643388365f28c5cc682254ab913c401f0e53260a",
            "patch":"MULTI",
            "chain_ord":"['643388365f28c5cc682254ab913c401f0e53260a', '7c96d400358221e59135f0a0be0744f3fad73856']",
            "before_first_fix_commit":"{'2f191af1a14fd5fbea7cba6b4ff078af253d3a05'}",
            "last_fix_commit":"7c96d400358221e59135f0a0be0744f3fad73856",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/08\/2021, 17:08:28",
            "message":"Merge pull request from GHSA-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* Update __init__.py",
            "author":"RhinosF1",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'sopel_channelmgnt\/channelmgnt\/__init__.py': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/FOSSBots\/sopel-channelmgnt\/raw\/643388365f28c5cc682254ab913c401f0e53260a\/sopel_channelmgnt%2Fchannelmgnt%2F__init__.py', 'patch': '@@ -216,6 +216,10 @@ def kick(bot, trigger):\\n             return\\n         nick = Identifier(text[1])\\n         reason = \\' \\'.join(text[2:])\\n+        if \\',\\' in str(nick):\\n+            return bot.reply(\\'Unable to kick. Kicking multiple users is not allowed.\\') \\n+        if \\'#\\' in str(nick):\\n+            return bot.reply(\\'Unable to kick. Use of # when kicking is not expected.\\')\\n         if nick != bot.config.core.nick and trigger.account in chanops:\\n             bot.write([\\'KICK\\', trigger.sender, nick, \\':\\' + reason])\\n             if dodeop:\\n@@ -263,6 +267,10 @@ def parse_host_mask(text):\\n @example(\\'.ban nick\\')\\n def ban(bot, trigger):\\n     \"\"\"Ban a user from the channel. The bot must be a channel operator for this command to work.\"\"\"\\n+    if \\',\\' in str(nick):\\n+        return bot.reply(\\'Unable to ban. Banning multiple users is not allowed.\\') \\n+    if \\'#\\' in str(nick):\\n+        return bot.reply(\\'Unable to ban. Use of # when banning is not expected.\\')\\n     makemodechange(bot, trigger, \\'+b\\', isbqmode=True)\\n \\n \\n@@ -312,6 +320,10 @@ def kickban(bot, trigger):\\n                 deopbot(trigger.sender, bot)\\n             return\\n         nick = Identifier(text[1])\\n+        if \\',\\' in str(nick):\\n+            return bot.reply(\\'Unable to kickban. Kickbanning multiple users is not allowed.\\') \\n+        if \\'#\\' in str(nick):\\n+            return bot.reply(\\'Unable to kickban. Use of # when kickbanning is not expected.\\')\\n         mask = text[2] if any(s in text[2] for s in \\'!@*\\') else \\'\\'\\n         reasonidx = 3 if mask != \\'\\' else 2\\n         reason = \\' \\'.join(text[reasonidx:])'}}",
            "message_norm":"merge pull request from ghsa-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* update __init__.py",
            "language":"en",
            "entities":"[('ghsa-23c7-6444-399m', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['sopel_channelmgnt\/channelmgnt\/__init__.py'])",
            "num_files":1.0,
            "patch_content":"From 643388365f28c5cc682254ab913c401f0e53260a Mon Sep 17 00:00:00 2001\nFrom: RhinosF1 <rhinosf1@gmail.com>\nDate: Thu, 8 Apr 2021 18:08:28 +0100\nSubject: [PATCH] Merge pull request from GHSA-23c7-6444-399m\n\n* ban use of , & # when kicking\n\n* Update __init__.py\n---\n sopel_channelmgnt\/channelmgnt\/__init__.py | 12 ++++++++++++\n 1 file changed, 12 insertions(+)\n\ndiff --git a\/sopel_channelmgnt\/channelmgnt\/__init__.py b\/sopel_channelmgnt\/channelmgnt\/__init__.py\nindex 4c8a3f0..9705bd5 100644\n--- a\/sopel_channelmgnt\/channelmgnt\/__init__.py\n+++ b\/sopel_channelmgnt\/channelmgnt\/__init__.py\n@@ -216,6 +216,10 @@ def kick(bot, trigger):\n             return\n         nick = Identifier(text[1])\n         reason = ' '.join(text[2:])\n+        if ',' in str(nick):\n+            return bot.reply('Unable to kick. Kicking multiple users is not allowed.') \n+        if '#' in str(nick):\n+            return bot.reply('Unable to kick. Use of # when kicking is not expected.')\n         if nick != bot.config.core.nick and trigger.account in chanops:\n             bot.write(['KICK', trigger.sender, nick, ':' + reason])\n             if dodeop:\n@@ -263,6 +267,10 @@ def parse_host_mask(text):\n @example('.ban nick')\n def ban(bot, trigger):\n     \"\"\"Ban a user from the channel. The bot must be a channel operator for this command to work.\"\"\"\n+    if ',' in str(nick):\n+        return bot.reply('Unable to ban. Banning multiple users is not allowed.') \n+    if '#' in str(nick):\n+        return bot.reply('Unable to ban. Use of # when banning is not expected.')\n     makemodechange(bot, trigger, '+b', isbqmode=True)\n \n \n@@ -312,6 +320,10 @@ def kickban(bot, trigger):\n                 deopbot(trigger.sender, bot)\n             return\n         nick = Identifier(text[1])\n+        if ',' in str(nick):\n+            return bot.reply('Unable to kickban. Kickbanning multiple users is not allowed.') \n+        if '#' in str(nick):\n+            return bot.reply('Unable to kickban. Use of # when kickbanning is not expected.')\n         mask = text[2] if any(s in text[2] for s in '!@*') else ''\n         reasonidx = 3 if mask != '' else 2\n         reason = ' '.join(text[reasonidx:])",
            "code_diff":"@@ -216,6 +216,10 @@ def kick(bot, trigger):\n             return\n         nick = Identifier(text[1])\n         reason = ' '.join(text[2:])\n+        if ',' in str(nick):\n+            return bot.reply('Unable to kick. Kicking multiple users is not allowed.') \n+        if '#' in str(nick):\n+            return bot.reply('Unable to kick. Use of # when kicking is not expected.')\n         if nick != bot.config.core.nick and trigger.account in chanops:\n             bot.write(['KICK', trigger.sender, nick, ':' + reason])\n             if dodeop:\n@@ -263,6 +267,10 @@ def parse_host_mask(text):\n @example('.ban nick')\n def ban(bot, trigger):\n     \"\"\"Ban a user from the channel. The bot must be a channel operator for this command to work.\"\"\"\n+    if ',' in str(nick):\n+        return bot.reply('Unable to ban. Banning multiple users is not allowed.') \n+    if '#' in str(nick):\n+        return bot.reply('Unable to ban. Use of # when banning is not expected.')\n     makemodechange(bot, trigger, '+b', isbqmode=True)\n \n \n@@ -312,6 +320,10 @@ def kickban(bot, trigger):\n                 deopbot(trigger.sender, bot)\n             return\n         nick = Identifier(text[1])\n+        if ',' in str(nick):\n+            return bot.reply('Unable to kickban. Kickbanning multiple users is not allowed.') \n+        if '#' in str(nick):\n+            return bot.reply('Unable to kickban. Use of # when kickbanning is not expected.')\n         mask = text[2] if any(s in text[2] for s in '!@*') else ''\n         reasonidx = 3 if mask != '' else 2\n         reason = ' '.join(text[reasonidx:])"
        },
        {
            "index":862,
            "vuln_id":"GHSA-w89r-qch4-8jv5",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/d797e3f00e34c12c8c0ae52f56344325439dccd7', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0922, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0927, CVE-2019-0933, CVE-2019-0937.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1",
            "commit_sha":"936a5af1c07e0fdec9aab85c05339dabe4aaeeb1",
            "patch":"MULTI",
            "chain_ord":"['936a5af1c07e0fdec9aab85c05339dabe4aaeeb1', 'd797e3f00e34c12c8c0ae52f56344325439dccd7']",
            "before_first_fix_commit":"{'ea0491305137183603bf43844b5584d4cc972e28', '4594e340bc9ca9f857010a68e8b562d65b46eed6'}",
            "last_fix_commit":"d797e3f00e34c12c8c0ae52f56344325439dccd7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/17\/2019, 17:18:03",
            "message":"[CVE-2019-0912]",
            "author":"Michael Holman",
            "comments":null,
            "stats":"{'additions': 24, 'deletions': 7, 'total': 31}",
            "files":"{'lib\/Backend\/GlobOptFields.cpp': {'additions': 24, 'deletions': 7, 'changes': 31, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1\/lib%2FBackend%2FGlobOptFields.cpp', 'patch': '@@ -415,11 +415,19 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n \\n     case Js::OpCode::InlineArrayPush:\\n     case Js::OpCode::InlineArrayPop:\\n-        KillLiveFields(this->lengthEquivBv, bv);\\n-        if (inGlobOpt)\\n+        if(instr->m_func->GetThisOrParentInlinerHasArguments())\\n         {\\n-            \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\\n-            KillAllObjectTypes(bv);\\n+            this->KillAllFields(bv);\\n+            this->SetAnyPropertyMayBeWrittenTo();\\n+        }\\n+        else\\n+        {\\n+            KillLiveFields(this->lengthEquivBv, bv);\\n+            if (inGlobOpt)\\n+            {\\n+                \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\\n+                KillAllObjectTypes(bv);\\n+            }\\n         }\\n         break;\\n \\n@@ -444,14 +452,23 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n                 \/\/ Kill length field for built-ins that can update it.\\n                 if (nullptr != this->lengthEquivBv)\\n                 {\\n-                    KillLiveFields(this->lengthEquivBv, bv);\\n+                    \/\/ If has arguments, all fields are killed in fall through\\n+                    if (!instr->m_func->GetThisOrParentInlinerHasArguments())\\n+                    {\\n+                        KillLiveFields(this->lengthEquivBv, bv);\\n+                    }\\n                 }\\n                 \/\/ fall through\\n \\n             case IR::JnHelperMethod::HelperArray_Reverse:\\n-                \/\/ Deleting an item may change object layout\\n-                if (inGlobOpt)\\n+                if (instr->m_func->GetThisOrParentInlinerHasArguments())\\n+                {\\n+                    this->KillAllFields(bv);\\n+                    this->SetAnyPropertyMayBeWrittenTo();\\n+                }\\n+                else if (inGlobOpt)\\n                 {\\n+                    \/\/ Deleting an item may change object layout\\n                     KillAllObjectTypes(bv);\\n                 }\\n                 break;'}}",
            "message_norm":"[cve-2019-0912]",
            "language":"ro",
            "entities":"[('cve-2019-0912', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Backend\/GlobOptFields.cpp'])",
            "num_files":1.0,
            "patch_content":"From 936a5af1c07e0fdec9aab85c05339dabe4aaeeb1 Mon Sep 17 00:00:00 2001\nFrom: Michael Holman <michhol@microsoft.com>\nDate: Wed, 17 Apr 2019 10:18:03 -0700\nSubject: [PATCH] [CVE-2019-0912]\n\n---\n lib\/Backend\/GlobOptFields.cpp | 31 ++++++++++++++++++++++++-------\n 1 file changed, 24 insertions(+), 7 deletions(-)\n\ndiff --git a\/lib\/Backend\/GlobOptFields.cpp b\/lib\/Backend\/GlobOptFields.cpp\nindex c355563523d..2eff8b7c61f 100644\n--- a\/lib\/Backend\/GlobOptFields.cpp\n+++ b\/lib\/Backend\/GlobOptFields.cpp\n@@ -415,11 +415,19 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\n \n     case Js::OpCode::InlineArrayPush:\n     case Js::OpCode::InlineArrayPop:\n-        KillLiveFields(this->lengthEquivBv, bv);\n-        if (inGlobOpt)\n+        if(instr->m_func->GetThisOrParentInlinerHasArguments())\n         {\n-            \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\n-            KillAllObjectTypes(bv);\n+            this->KillAllFields(bv);\n+            this->SetAnyPropertyMayBeWrittenTo();\n+        }\n+        else\n+        {\n+            KillLiveFields(this->lengthEquivBv, bv);\n+            if (inGlobOpt)\n+            {\n+                \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\n+                KillAllObjectTypes(bv);\n+            }\n         }\n         break;\n \n@@ -444,14 +452,23 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\n                 \/\/ Kill length field for built-ins that can update it.\n                 if (nullptr != this->lengthEquivBv)\n                 {\n-                    KillLiveFields(this->lengthEquivBv, bv);\n+                    \/\/ If has arguments, all fields are killed in fall through\n+                    if (!instr->m_func->GetThisOrParentInlinerHasArguments())\n+                    {\n+                        KillLiveFields(this->lengthEquivBv, bv);\n+                    }\n                 }\n                 \/\/ fall through\n \n             case IR::JnHelperMethod::HelperArray_Reverse:\n-                \/\/ Deleting an item may change object layout\n-                if (inGlobOpt)\n+                if (instr->m_func->GetThisOrParentInlinerHasArguments())\n+                {\n+                    this->KillAllFields(bv);\n+                    this->SetAnyPropertyMayBeWrittenTo();\n+                }\n+                else if (inGlobOpt)\n                 {\n+                    \/\/ Deleting an item may change object layout\n                     KillAllObjectTypes(bv);\n                 }\n                 break;",
            "code_diff":"@@ -415,11 +415,19 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\n \n     case Js::OpCode::InlineArrayPush:\n     case Js::OpCode::InlineArrayPop:\n-        KillLiveFields(this->lengthEquivBv, bv);\n-        if (inGlobOpt)\n+        if(instr->m_func->GetThisOrParentInlinerHasArguments())\n         {\n-            \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\n-            KillAllObjectTypes(bv);\n+            this->KillAllFields(bv);\n+            this->SetAnyPropertyMayBeWrittenTo();\n+        }\n+        else\n+        {\n+            KillLiveFields(this->lengthEquivBv, bv);\n+            if (inGlobOpt)\n+            {\n+                \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\n+                KillAllObjectTypes(bv);\n+            }\n         }\n         break;\n \n@@ -444,14 +452,23 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\n                 \/\/ Kill length field for built-ins that can update it.\n                 if (nullptr != this->lengthEquivBv)\n                 {\n-                    KillLiveFields(this->lengthEquivBv, bv);\n+                    \/\/ If has arguments, all fields are killed in fall through\n+                    if (!instr->m_func->GetThisOrParentInlinerHasArguments())\n+                    {\n+                        KillLiveFields(this->lengthEquivBv, bv);\n+                    }\n                 }\n                 \/\/ fall through\n \n             case IR::JnHelperMethod::HelperArray_Reverse:\n-                \/\/ Deleting an item may change object layout\n-                if (inGlobOpt)\n+                if (instr->m_func->GetThisOrParentInlinerHasArguments())\n+                {\n+                    this->KillAllFields(bv);\n+                    this->SetAnyPropertyMayBeWrittenTo();\n+                }\n+                else if (inGlobOpt)\n                 {\n+                    \/\/ Deleting an item may change object layout\n                     KillAllObjectTypes(bv);\n                 }\n                 break;"
        },
        {
            "index":382,
            "vuln_id":"GHSA-fj7c-vg2v-ccrm",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/undertow-io\/undertow\/commit\/c7e84a0b7efced38506d7d1dfea5902366973877'}",
            "dataset":"osv",
            "summary":"Undertow vulnerable to memory exhaustion due to buffer leak Buffer leak on incoming WebSocket PONG message(s) in Undertow before 2.0.40 and 2.2.10 can lead to memory exhaustion and allow a denial of service.",
            "published_date":"2022-07-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/undertow-io\/undertow",
            "commit_href":"https:\/\/github.com\/undertow-io\/undertow\/commit\/c7e84a0b7efced38506d7d1dfea5902366973877",
            "commit_sha":"c7e84a0b7efced38506d7d1dfea5902366973877",
            "patch":"SINGLE",
            "chain_ord":"['c7e84a0b7efced38506d7d1dfea5902366973877']",
            "before_first_fix_commit":"{'87f31ddaac835e3b41db339c1841760a1bac004f'}",
            "last_fix_commit":"c7e84a0b7efced38506d7d1dfea5902366973877",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/30\/2021, 21:26:57",
            "message":"[UNDERTOW-1935] - buffer leak on incoming websocket PONG message",
            "author":"Andrey Marinchuk",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'websockets-jsr\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/undertow-io\/undertow\/raw\/c7e84a0b7efced38506d7d1dfea5902366973877\/websockets-jsr%2Fsrc%2Fmain%2Fjava%2Fio%2Fundertow%2Fwebsockets%2Fjsr%2FFrameHandler.java', 'patch': '@@ -152,6 +152,8 @@ public void run() {\\n                     }\\n                 }\\n             });\\n+        } else {\\n+            bufferedBinaryMessage.getData().free();\\n         }\\n     }'}}",
            "message_norm":"[undertow-1935] - buffer leak on incoming websocket pong message",
            "language":"en",
            "entities":"[('leak', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['websockets-jsr\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java'])",
            "num_files":1.0,
            "patch_content":"From c7e84a0b7efced38506d7d1dfea5902366973877 Mon Sep 17 00:00:00 2001\nFrom: Andrey Marinchuk <radist.nt@gmail.com>\nDate: Sat, 31 Jul 2021 00:26:57 +0300\nSubject: [PATCH] [UNDERTOW-1935] - buffer leak on incoming websocket PONG\n message\n\n---\n ...\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java  | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/websockets-jsr\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java b\/websockets-jsr\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java\nindex 12ae5bb38c..a93822587d 100644\n--- a\/websockets-jsr\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java\n+++ b\/websockets-jsr\/src\/main\/java\/io\/undertow\/websockets\/jsr\/FrameHandler.java\n@@ -152,6 +152,8 @@ public void run() {\n                     }\n                 }\n             });\n+        } else {\n+            bufferedBinaryMessage.getData().free();\n         }\n     }",
            "code_diff":"@@ -152,6 +152,8 @@ public void run() {\n                     }\n                 }\n             });\n+        } else {\n+            bufferedBinaryMessage.getData().free();\n         }\n     }"
        },
        {
            "index":235,
            "vuln_id":"GHSA-h7f9-cvh5-qw7f",
            "cwe_id":"{'CWE-22'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/1786bdd4962ee51544fad537352c2b4223309442'}",
            "dataset":"osv",
            "summary":"Path traversal in pimcore\/pimcore This affects the package pimcore\/pimcore before 6.8.8. A Local FIle Inclusion vulnerability exists in the downloadCsvAction function of the CustomReportController class (bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php). An authenticated user can reach this function with a GET request at the following endpoint: \/admin\/reports\/custom-report\/download-csv?exportFile=&91;filename]. Since exportFile variable is not sanitized, an attacker can exploit a local file inclusion vulnerability.",
            "published_date":"2021-02-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/1786bdd4962ee51544fad537352c2b4223309442",
            "commit_sha":"1786bdd4962ee51544fad537352c2b4223309442",
            "patch":"SINGLE",
            "chain_ord":"['1786bdd4962ee51544fad537352c2b4223309442']",
            "before_first_fix_commit":"{'3224684a3375c35910f8544943f4c073d30c8bfa'}",
            "last_fix_commit":"1786bdd4962ee51544fad537352c2b4223309442",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/05\/2021, 09:39:02",
            "message":"Fixed LFI in custom report csv download",
            "author":"Bernhard Rusch",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/1786bdd4962ee51544fad537352c2b4223309442\/bundles%2FAdminBundle%2FController%2FReports%2FCustomReportController.php', 'patch': \"@@ -433,7 +433,7 @@ public function createCsvAction(Request $request)\\n         $progress = $progress > 1 ? 1 : $progress;\\n \\n         return new JsonResponse([\\n-            'exportFile' => $exportFile,\\n+            'exportFile' => basename($exportFile),\\n             'offset' => $offset,\\n             'progress' => $progress,\\n             'finished' => empty($result['data']) || count($result['data']) < $limit,\\n@@ -451,6 +451,7 @@ public function downloadCsvAction(Request $request)\\n     {\\n         $this->checkPermission('reports');\\n         if ($exportFile = $request->get('exportFile')) {\\n+            $exportFile = PIMCORE_SYSTEM_TEMP_DIRECTORY . '\/' . basename($exportFile);\\n             $response = new BinaryFileResponse($exportFile);\\n             $response->headers->set('Content-Type', 'text\/csv; charset=UTF-8');\\n             $response->setContentDisposition(ResponseHeaderBag::DISPOSITION_ATTACHMENT, 'export.csv');\"}}",
            "message_norm":"fixed lfi in custom report csv download",
            "language":"en",
            "entities":"[('fixed', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php'])",
            "num_files":1.0,
            "patch_content":"From 1786bdd4962ee51544fad537352c2b4223309442 Mon Sep 17 00:00:00 2001\nFrom: Bernhard Rusch <bernhard.rusch@elements.at>\nDate: Fri, 5 Feb 2021 10:39:02 +0100\nSubject: [PATCH] Fixed LFI in custom report csv download\n\n---\n ...\/AdminBundle\/Controller\/Reports\/CustomReportController.php  | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php b\/bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php\nindex 37a19734fb6..0d859cdb8ac 100644\n--- a\/bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php\n+++ b\/bundles\/AdminBundle\/Controller\/Reports\/CustomReportController.php\n@@ -433,7 +433,7 @@ public function createCsvAction(Request $request)\n         $progress = $progress > 1 ? 1 : $progress;\n \n         return new JsonResponse([\n-            'exportFile' => $exportFile,\n+            'exportFile' => basename($exportFile),\n             'offset' => $offset,\n             'progress' => $progress,\n             'finished' => empty($result['data']) || count($result['data']) < $limit,\n@@ -451,6 +451,7 @@ public function downloadCsvAction(Request $request)\n     {\n         $this->checkPermission('reports');\n         if ($exportFile = $request->get('exportFile')) {\n+            $exportFile = PIMCORE_SYSTEM_TEMP_DIRECTORY . '\/' . basename($exportFile);\n             $response = new BinaryFileResponse($exportFile);\n             $response->headers->set('Content-Type', 'text\/csv; charset=UTF-8');\n             $response->setContentDisposition(ResponseHeaderBag::DISPOSITION_ATTACHMENT, 'export.csv');",
            "code_diff":"@@ -433,7 +433,7 @@ public function createCsvAction(Request $request)\n         $progress = $progress > 1 ? 1 : $progress;\n \n         return new JsonResponse([\n-            'exportFile' => $exportFile,\n+            'exportFile' => basename($exportFile),\n             'offset' => $offset,\n             'progress' => $progress,\n             'finished' => empty($result['data']) || count($result['data']) < $limit,\n@@ -451,6 +451,7 @@ public function downloadCsvAction(Request $request)\n     {\n         $this->checkPermission('reports');\n         if ($exportFile = $request->get('exportFile')) {\n+            $exportFile = PIMCORE_SYSTEM_TEMP_DIRECTORY . '\/' . basename($exportFile);\n             $response = new BinaryFileResponse($exportFile);\n             $response->headers->set('Content-Type', 'text\/csv; charset=UTF-8');\n             $response->setContentDisposition(ResponseHeaderBag::DISPOSITION_ATTACHMENT, 'export.csv');"
        },
        {
            "index":416,
            "vuln_id":"GHSA-fxqh-cfjm-fp93",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4071d8e2f6c45c1955a811fee757ca2adbe462c1'}",
            "dataset":"osv",
            "summary":"Division by 0 in `Reverse` ### Impact\nAn attacker can cause a denial of service via a FPE runtime error in `tf.raw_ops.Reverse`:\n\n```python\nimport tensorflow as tf\n\ntensor_input = tf.constant([], shape=[0, 1, 1], dtype=tf.int32)\ndims = tf.constant([False, True, False], shape=[3], dtype=tf.bool)\n\ntf.raw_ops.Reverse(tensor=tensor_input, dims=dims)\n``` \n    \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/36229ea9e9451dac14a8b1f4711c435a1d84a594\/tensorflow\/core\/kernels\/reverse_op.cc#L75-L76) performs a division based on the first dimension of the tensor argument:\n    \n```cc\nconst int64 N = input.dim_size(0);\nconst int64 cost_per_unit = input.NumElements() \/ N;\n```\n\nSince this is controlled by the user, an attacker can trigger a denial of service.\n\n### Patches\nWe have patched the issue in GitHub commit [4071d8e2f6c45c1955a811fee757ca2adbe462c1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4071d8e2f6c45c1955a811fee757ca2adbe462c1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4071d8e2f6c45c1955a811fee757ca2adbe462c1",
            "commit_sha":"4071d8e2f6c45c1955a811fee757ca2adbe462c1",
            "patch":"SINGLE",
            "chain_ord":"['4071d8e2f6c45c1955a811fee757ca2adbe462c1']",
            "before_first_fix_commit":"{'36229ea9e9451dac14a8b1f4711c435a1d84a594'}",
            "last_fix_commit":"4071d8e2f6c45c1955a811fee757ca2adbe462c1",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2021, 19:24:18",
            "message":"Fix FPE issue with `tf.raw_ops.Reverse`.\n\nPiperOrigin-RevId: 371176973\nChange-Id: Ic6d483bfc95313ec2299c2d1c956cfe96c96626c",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/reverse_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4071d8e2f6c45c1955a811fee757ca2adbe462c1\/tensorflow%2Fcore%2Fkernels%2Freverse_op.cc', 'patch': '@@ -155,6 +155,12 @@ class ReverseOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* context) override {\\n     const Tensor& input = context->input(0);\\n+    \/\/ If input is provided, check to make sure the first dimension is valid.\\n+    if (input.dims() > 0) {\\n+      OP_REQUIRES(\\n+          context, input.dim_size(0) != 0,\\n+          errors::InvalidArgument(\"Invalid input first dimension. Found 0.\"));\\n+    }\\n     const Tensor& dims = context->input(1);\\n \\n     if (TensorShapeUtils::IsScalar(input.shape())) {'}}",
            "message_norm":"fix fpe issue with `tf.raw_ops.reverse`.\n\npiperorigin-revid: 371176973\nchange-id: ic6d483bfc95313ec2299c2d1c956cfe96c96626c",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('fpe', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371176973', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/reverse_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 4071d8e2f6c45c1955a811fee757ca2adbe462c1 Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Thu, 29 Apr 2021 12:24:18 -0700\nSubject: [PATCH] Fix FPE issue with `tf.raw_ops.Reverse`.\n\nPiperOrigin-RevId: 371176973\nChange-Id: Ic6d483bfc95313ec2299c2d1c956cfe96c96626c\n---\n tensorflow\/core\/kernels\/reverse_op.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/reverse_op.cc b\/tensorflow\/core\/kernels\/reverse_op.cc\nindex 5555a141b6c7bd..560fac71336679 100644\n--- a\/tensorflow\/core\/kernels\/reverse_op.cc\n+++ b\/tensorflow\/core\/kernels\/reverse_op.cc\n@@ -155,6 +155,12 @@ class ReverseOp : public OpKernel {\n \n   void Compute(OpKernelContext* context) override {\n     const Tensor& input = context->input(0);\n+    \/\/ If input is provided, check to make sure the first dimension is valid.\n+    if (input.dims() > 0) {\n+      OP_REQUIRES(\n+          context, input.dim_size(0) != 0,\n+          errors::InvalidArgument(\"Invalid input first dimension. Found 0.\"));\n+    }\n     const Tensor& dims = context->input(1);\n \n     if (TensorShapeUtils::IsScalar(input.shape())) {",
            "code_diff":"@@ -155,6 +155,12 @@ class ReverseOp : public OpKernel {\n \n   void Compute(OpKernelContext* context) override {\n     const Tensor& input = context->input(0);\n+    \/\/ If input is provided, check to make sure the first dimension is valid.\n+    if (input.dims() > 0) {\n+      OP_REQUIRES(\n+          context, input.dim_size(0) != 0,\n+          errors::InvalidArgument(\"Invalid input first dimension. Found 0.\"));\n+    }\n     const Tensor& dims = context->input(1);\n \n     if (TensorShapeUtils::IsScalar(input.shape())) {"
        },
        {
            "index":394,
            "vuln_id":"GHSA-cgrj-xjm7-9q27",
            "cwe_id":"{'CWE-601'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/web2py\/web2py\/commit\/a181b855a43cb8b479d276b082cfcde385768451'}",
            "dataset":"osv",
            "summary":"Open redirect in web2py Open redirect vulnerability in web2py versions prior to 2.22.5 allows a remote attacker to redirect a user to an arbitrary web site and conduct a phishing attack by having a user to access a specially crafted URL.",
            "published_date":"2022-06-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/web2py\/web2py",
            "commit_href":"https:\/\/github.com\/web2py\/web2py\/commit\/a181b855a43cb8b479d276b082cfcde385768451",
            "commit_sha":"a181b855a43cb8b479d276b082cfcde385768451",
            "patch":"SINGLE",
            "chain_ord":"['a181b855a43cb8b479d276b082cfcde385768451']",
            "before_first_fix_commit":"{'842994def40ca565aa954a13aa065d2da1090948'}",
            "last_fix_commit":"a181b855a43cb8b479d276b082cfcde385768451",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/04\/2022, 17:57:08",
            "message":"added validation of send attribute in admin",
            "author":"Massimo Di Pierro",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'applications\/admin\/controllers\/default.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/web2py\/web2py\/raw\/a181b855a43cb8b479d276b082cfcde385768451\/applications%2Fadmin%2Fcontrollers%2Fdefault.py', 'patch': '@@ -12,7 +12,7 @@\\n from gluon.admin import *\\n from gluon.fileutils import abspath, read_file, write_file\\n from gluon.utils import web2py_uuid\\n-from gluon.tools import Config\\n+from gluon.tools import Config, prevent_open_redirect\\n from gluon.compileapp import find_exposed_functions\\n from glob import glob\\n from gluon._compat import iteritems, PY2, pickle, xrange, urlopen, to_bytes, StringIO, to_native, reload\\n@@ -118,7 +118,7 @@ def get_app(name=None):\\n def index():\\n     \"\"\" Index handler \"\"\"\\n \\n-    send = request.vars.send\\n+    send = prevent_open_redirect(request.vars.send)\\n     if DEMO_MODE:\\n         session.authorized = True\\n         session.last_time = t0'}}",
            "message_norm":"added validation of send attribute in admin",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('admin', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['applications\/admin\/controllers\/default.py'])",
            "num_files":1.0,
            "patch_content":"From a181b855a43cb8b479d276b082cfcde385768451 Mon Sep 17 00:00:00 2001\nFrom: Massimo Di Pierro <massimo.dipierro@gmail.com>\nDate: Sat, 4 Jun 2022 10:57:08 -0700\nSubject: [PATCH] added validation of send attribute in admin\n\n---\n applications\/admin\/controllers\/default.py | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/applications\/admin\/controllers\/default.py b\/applications\/admin\/controllers\/default.py\nindex e5f242ea4..65994811e 100644\n--- a\/applications\/admin\/controllers\/default.py\n+++ b\/applications\/admin\/controllers\/default.py\n@@ -12,7 +12,7 @@\n from gluon.admin import *\n from gluon.fileutils import abspath, read_file, write_file\n from gluon.utils import web2py_uuid\n-from gluon.tools import Config\n+from gluon.tools import Config, prevent_open_redirect\n from gluon.compileapp import find_exposed_functions\n from glob import glob\n from gluon._compat import iteritems, PY2, pickle, xrange, urlopen, to_bytes, StringIO, to_native, reload\n@@ -118,7 +118,7 @@ def get_app(name=None):\n def index():\n     \"\"\" Index handler \"\"\"\n \n-    send = request.vars.send\n+    send = prevent_open_redirect(request.vars.send)\n     if DEMO_MODE:\n         session.authorized = True\n         session.last_time = t0",
            "code_diff":"@@ -12,7 +12,7 @@\n from gluon.admin import *\n from gluon.fileutils import abspath, read_file, write_file\n from gluon.utils import web2py_uuid\n-from gluon.tools import Config\n+from gluon.tools import Config, prevent_open_redirect\n from gluon.compileapp import find_exposed_functions\n from glob import glob\n from gluon._compat import iteritems, PY2, pickle, xrange, urlopen, to_bytes, StringIO, to_native, reload\n@@ -118,7 +118,7 @@ def get_app(name=None):\n def index():\n     \"\"\" Index handler \"\"\"\n \n-    send = request.vars.send\n+    send = prevent_open_redirect(request.vars.send)\n     if DEMO_MODE:\n         session.authorized = True\n         session.last_time = t0"
        }
    ]
}