{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":2130,
            "vuln_id":"GHSA-hv9c-qwqg-qj3v",
            "cwe_id":"{'CWE-1188'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/electron\/electron\/commit\/bab968ca776be28791e4dddfd50c86bd5fae62fa', 'https:\/\/github.com\/electron\/electron\/commit\/80221e52d93a96ea704cb6748ead669c55cff504', 'https:\/\/github.com\/electron\/electron\/commit\/519a02d8d4d28e8a467acb40fb26172a80c9454f', 'https:\/\/github.com\/electron\/electron\/commit\/ef0a6d9a1c96efc4657c6dd3a6624eba969f095b'}",
            "dataset":"osv",
            "summary":"Electron webPreferences vulnerability can be used to perform remote code execution GitHub Electron 1.7.15, 1.8.7, 2.0.7, and 3.0.0-beta.6, in certain scenarios involving IFRAME elements and \"nativeWindowOpen: true\" or \"sandbox: true\" options, is affected by a webPreferences vulnerability that can be leveraged to perform remote code execution.\n\nMore information to determine if you are impacted can be found on the [electron blog](https:\/\/electronjs.org\/blog\/web-preferences-fix).\n\n\n## Recommendation\n\nUpgrade Electron to >=3.0.0-beta.7, >=2.0.8, >=1.8.8, or >=1.7.16.",
            "published_date":"2018-08-23",
            "chain_len":4,
            "project":"https:\/\/github.com\/electron\/electron",
            "commit_href":"https:\/\/github.com\/electron\/electron\/commit\/bab968ca776be28791e4dddfd50c86bd5fae62fa",
            "commit_sha":"bab968ca776be28791e4dddfd50c86bd5fae62fa",
            "patch":"MULTI",
            "chain_ord":"['ef0a6d9a1c96efc4657c6dd3a6624eba969f095b', '80221e52d93a96ea704cb6748ead669c55cff504', '519a02d8d4d28e8a467acb40fb26172a80c9454f', 'bab968ca776be28791e4dddfd50c86bd5fae62fa']",
            "before_first_fix_commit":"{'7fa3eba9512da5bb3a8a61433bb3921c2be67459'}",
            "last_fix_commit":"bab968ca776be28791e4dddfd50c86bd5fae62fa",
            "chain_ord_pos":4.0,
            "commit_datetime":"08\/22\/2018, 17:36:02",
            "message":"fix: inheritance of webPreferences sub properties",
            "author":"Samuel Attard",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'lib\/browser\/guest-window-manager.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/electron\/electron\/raw\/bab968ca776be28791e4dddfd50c86bd5fae62fa\/lib%2Fbrowser%2Fguest-window-manager.js', 'patch': \"@@ -26,11 +26,11 @@ const mergeOptions = function (child, parent, visited) {\\n   visited.add(parent)\\n   for (const key in parent) {\\n     if (!hasProp.call(parent, key)) continue\\n-    if (key in child) continue\\n+    if (key in child && key !== 'webPreferences') continue\\n \\n     const value = parent[key]\\n     if (typeof value === 'object') {\\n-      child[key] = mergeOptions({}, value, visited)\\n+      child[key] = mergeOptions(child[key] || {}, value, visited)\\n     } else {\\n       child[key] = value\\n     }\"}}",
            "message_norm":"fix: inheritance of webpreferences sub properties",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/browser\/guest-window-manager.js'])",
            "num_files":1.0
        },
        {
            "index":361,
            "vuln_id":"GHSA-455w-gv5p-wgg3",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/665976327ad3c2c87efa2a5a64d696032c0a8109'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in pimcore pimcore is vulnerable to Stored XSS at Name field in the setting tab of the Global Targeting Rules.",
            "published_date":"2022-01-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/665976327ad3c2c87efa2a5a64d696032c0a8109",
            "commit_sha":"665976327ad3c2c87efa2a5a64d696032c0a8109",
            "patch":"SINGLE",
            "chain_ord":"['665976327ad3c2c87efa2a5a64d696032c0a8109']",
            "before_first_fix_commit":"{'7f8855719f56c42ee3eda27a84b38ab57890e144'}",
            "last_fix_commit":"665976327ad3c2c87efa2a5a64d696032c0a8109",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2022, 10:36:40",
            "message":"[Targeting] Escape\/validate names of rules properly (#11205)\n\n* [Targeting] Escape\/validate names of rules properly\r\n\r\n* Update bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php\r\n\r\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>\r\n\r\nCo-authored-by: Jacob Dreesen <j.dreesen@neusta.de>",
            "author":"Bernhard Rusch",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 4, 'total': 15}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/665976327ad3c2c87efa2a5a64d696032c0a8109\/bundles%2FAdminBundle%2FController%2FAdmin%2FTargetingController.php', 'patch': '@@ -37,6 +37,11 @@ class TargetingController extends AdminController implements KernelControllerEve\\n {\\n     \/\/ RULES\\n \\n+    private function correctName(string $name): string\\n+    {\\n+        return preg_replace(\\'\/[#?*:\\\\\\\\\\\\\\\\<>|\"%&@=;+]\/\\', \\'-\\', $name);\\n+    }\\n+\\n     \/**\\n      * @Route(\"\/rule\/list\", name=\"pimcore_admin_targeting_rulelist\", methods={\"GET\"})\\n      *\\n@@ -55,7 +60,7 @@ public function ruleListAction(Request $request)\\n         foreach ($list->load() as $target) {\\n             $targets[] = [\\n                 \\'id\\' => $target->getId(),\\n-                \\'text\\' => $target->getName(),\\n+                \\'text\\' => htmlspecialchars($target->getName()),\\n                 \\'active\\' => $target->getActive(),\\n                 \\'qtip\\' => \\'ID: \\' . $target->getId(),\\n             ];\\n@@ -74,7 +79,7 @@ public function ruleListAction(Request $request)\\n     public function ruleAddAction(Request $request)\\n     {\\n         $target = new Targeting\\\\Rule();\\n-        $target->setName($request->get(\\'name\\'));\\n+        $target->setName($this->correctName($request->get(\\'name\\')));\\n         $target->save();\\n \\n         return $this->adminJson([\\'success\\' => true, \\'id\\' => $target->getId()]);\\n@@ -129,6 +134,7 @@ public function ruleSaveAction(Request $request)\\n         \/** @var Targeting\\\\Rule|Targeting\\\\Rule\\\\Dao $target *\/\\n         $target = Targeting\\\\Rule::getById($request->get(\\'id\\'));\\n         $target->setValues($data[\\'settings\\']);\\n+        $target->setName($this->correctName($target->getName()));\\n         $target->setConditions($data[\\'conditions\\']);\\n         $target->setActions($data[\\'actions\\']);\\n         $target->save();\\n@@ -208,7 +214,7 @@ public function targetGroupListAction(Request $request)\\n         foreach ($list->load() as $targetGroup) {\\n             $targetGroups[] = [\\n                 \\'id\\' => $targetGroup->getId(),\\n-                \\'text\\' => $targetGroup->getName(),\\n+                \\'text\\' => htmlspecialchars($targetGroup->getName()),\\n                 \\'active\\' => $targetGroup->getActive(),\\n                 \\'qtip\\' => $targetGroup->getId(),\\n             ];\\n@@ -230,7 +236,7 @@ public function targetGroupAddAction(Request $request, CoreCacheHandler $cache,\\n     {\\n         \/** @var TargetGroup|TargetGroup\\\\Dao $targetGroup *\/\\n         $targetGroup = new TargetGroup();\\n-        $targetGroup->setName($request->get(\\'name\\'));\\n+        $targetGroup->setName($this->correctName($request->get(\\'name\\')));\\n         $targetGroup->save();\\n \\n         $event = new TargetGroupEvent($targetGroup);\\n@@ -300,6 +306,7 @@ public function targetGroupSaveAction(Request $request, CoreCacheHandler $cache,\\n         \/** @var TargetGroup|TargetGroup\\\\Dao $targetGroup *\/\\n         $targetGroup = TargetGroup::getById($request->get(\\'id\\'));\\n         $targetGroup->setValues($data[\\'settings\\']);\\n+        $targetGroup->setName($this->correctName($targetGroup->getName()));\\n         $targetGroup->save();\\n \\n         $event = new TargetGroupEvent($targetGroup);'}}",
            "message_norm":"[targeting] escape\/validate names of rules properly (#11205)\n\n* [targeting] escape\/validate names of rules properly\r\n\r\n* update bundles\/adminbundle\/controller\/admin\/targetingcontroller.php\r\n\r\nco-authored-by: jacob dreesen <j.dreesen@neusta.de>\r\n\r\nco-authored-by: jacob dreesen <j.dreesen@neusta.de>",
            "language":"en",
            "entities":"[('escape', 'SECWORD', ''), ('validate', 'ACTION', ''), ('#11205', 'ISSUE', ''), ('escape', 'SECWORD', ''), ('validate', 'ACTION', ''), ('update', 'ACTION', ''), ('adminbundle', 'SECWORD', ''), ('admin', 'SECWORD', ''), ('j.dreesen@neusta.de', 'EMAIL', ''), ('j.dreesen@neusta.de', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/TargetingController.php'])",
            "num_files":1.0
        },
        {
            "index":220,
            "vuln_id":"GHSA-389p-fchr-q2mg",
            "cwe_id":"{'CWE-22'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/ImpressCMS\/impresscms\/commit\/a66d7bb499faafab803e24833606028fa0ba4261'}",
            "dataset":"osv",
            "summary":"Path Traversal in ImpressCMS ImpressCMS before 1.4.2 allows unauthenticated remote code execution via .....\/\/\/ directory traversal in origName or imageName, leading to unsafe interaction with the CKEditor processImage.php script. The payload may be placed in PHP_SESSION_UPLOAD_PROGRESS when the PHP installation supports upload_progress.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/ImpressCMS\/impresscms",
            "commit_href":"https:\/\/github.com\/ImpressCMS\/impresscms\/commit\/a66d7bb499faafab803e24833606028fa0ba4261",
            "commit_sha":"a66d7bb499faafab803e24833606028fa0ba4261",
            "patch":"SINGLE",
            "chain_ord":"['a66d7bb499faafab803e24833606028fa0ba4261']",
            "before_first_fix_commit":"{'e174e84f000add55a731ffc435b8ed08b6a03d06'}",
            "last_fix_commit":"a66d7bb499faafab803e24833606028fa0ba4261",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/04\/2020, 23:48:24",
            "message":"Prevents using submitted filenames with ..\/ for controller (#812)\n\n* Prevents using submitted filenames with ..\/ for controller\r\n\r\n* Using preg replace for better parent paths replaces\r\n\r\nCo-authored-by: Raimondas Rimkevi\u010dius (aka MekDrop) <mekdrop@impresscms.org>",
            "author":"Raimondas Rimkevi\u010dius",
            "comments":null,
            "stats":"{'additions': 643, 'deletions': 642, 'total': 1285}",
            "files":"{'htdocs\/libraries\/icms\/ipf\/Controller.php': {'additions': 643, 'deletions': 642, 'changes': 1285, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ImpressCMS\/impresscms\/raw\/a66d7bb499faafab803e24833606028fa0ba4261\/htdocs%2Flibraries%2Ficms%2Fipf%2FController.php', 'patch': '@@ -1,642 +1,643 @@\\n-<?php\\r\\n-\\r\\n-\/**\\r\\n- * This class is responsible for providing operations to an object for managing the object\\'s manipulation\\r\\n- *\\r\\n- * @copyright\\tThe ImpressCMS Project http:\/\/www.impresscms.org\/\\r\\n- * @license\\t\\thttp:\/\/www.gnu.org\/licenses\/old-licenses\/gpl-2.0.html GNU General Public License (GPL)\\r\\n- * @category\\tICMS\\r\\n- * @package\\t\\tIpf\\r\\n- * @subpackage\\tController\\r\\n- * @since\\t\\t1.1\\r\\n- * @author\\t\\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A\/S <www.idg.dk>\\r\\n- * @author\\t\\tmarcan <marcan@impresscms.org>\\r\\n- * @version\\t\\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\\r\\n- * @todo\\t\\tUse language constants for messages\\r\\n- *\/\\r\\n-\\r\\n-defined(\\'ICMS_ROOT_PATH\\') or die(\"ImpressCMS root path not defined\");\\r\\n-\\r\\n-\/**\\r\\n- *\\r\\n- *\\r\\n- * @category\\tICMS\\r\\n- * @package\\t\\tIpf\\r\\n- * @subpackage\\tController\\r\\n- *\\r\\n- *\/\\r\\n-class icms_ipf_Controller {\\r\\n-\\r\\n-\\t\/** *\/\\r\\n-\\tpublic $handler;\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param $handler\\r\\n-\\t *\/\\r\\n-\\tpublic function __construct($handler) {\\r\\n-\\t\\t$this->handler=$handler;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t *\/\\r\\n-\\tpublic function postDataToObject(&$icmsObj) {\\r\\n-\\t\\tforeach (array_keys($icmsObj->vars) as $key) {\\r\\n-\\t\\t\\t\/\/ do not post data if control is a label\\r\\n-\\t\\t\\t$control = $icmsObj->getControl($key);\\r\\n-\\t\\t\\tif (is_array($control) && isset($control[\\'name\\']) && $control[\\'name\\'] == \"label\") continue;\\r\\n-\\r\\n-\\t\\t\\tswitch ($icmsObj->vars[$key][\\'data_type\\']) {\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_IMAGE:\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[\\'url_\\' . $key]) && $_POST[\\'url_\\' . $key] !=\\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[\\'delete_\\' . $key]) && $_POST[\\'delete_\\' . $key] == \\'1\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, \\'\\');\\r\\n-\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\r\\n-\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_URLLINK:\\r\\n-\\t\\t\\t\\t\\t$linkObj = $icmsObj->getUrlLinkObj($key);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'target\\', $_POST[\\'target_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t$linkObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\tif ($linkObj->getVar(\\'url\\') != \\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->storeUrlLinkObj($linkObj);\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\/\/@todo: catch errors\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $linkObj->getVar(\\'urllinkid\\'));\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_FILE:\\r\\n-\\t\\t\\t\\t\\tif (!isset($_FILES[\\'upload_\\' . $key][\\'name\\']) || $_FILES[\\'upload_\\' . $key][\\'name\\'] == \\'\\') {\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($key);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\r\\n-\\t\\t\\t\\t\\t\\tif (!($fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\')) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$res = $icmsObj->storeFileObj($fileObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\tif ($res) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $fileObj->getVar(\\'fileid\\'));\\r\\n-\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\/\/error setted, but no error message (to be improved)\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($fileObj->getErrors());\\r\\n-\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_STIME:\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_MTIME:\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_LTIME:\\r\\n-\\t\\t\\t\\t\\t\/\/ check if this field\\'s value is available in the POST array\\r\\n-\\t\\t\\t\\t\\tif (is_array($_POST[$key]) && isset($_POST[$key][\\'date\\'])) {\\r\\n-\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key][\\'date\\']) + $_POST[$key][\\'time\\'];\\r\\n-\\t\\t\\t\\t\\t\/\/ in case the field is hidden, it\\'s not formated so we can simply take the value and store it\\r\\n-\\t\\t\\t\\t\\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\\r\\n-\\t\\t\\t\\t\\t\\t$value = (int)$_POST[$key];\\r\\n-\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key]);\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $value);\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_URL:\\r\\n-\\t\\t\\t\\t\\tif (isset($_POST[$key])) {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tcase XOBJ_DTYPE_ARRAY:\\r\\n-\\t\\t\\t\\t\\tif (is_array($_POST[$key])) {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, serialize($_POST[$key]));\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\r\\n-\\t\\t\\t\\tdefault:\\r\\n-\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[$key]);\\r\\n-\\t\\t\\t\\t\\tbreak;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\tObject\\r\\n-\\t * @param\\tint\\t\\t$objectid\\r\\n-\\t * @param\\tstr\\t\\t$created_success_msg\\tMessage to display on successful creation\\r\\n-\\t * @param\\tstr\\t\\t$modified_success_msg\\tMessage to display on successful modification\\r\\n-\\t * @param\\tbool\\t$redirect_page\\t\\t\\tWhether to redirect afterwards, or not\\r\\n-\\t * @param\\tbool\\t$debug\\t\\t\\t\\t\\tWhether to display debug information, or not\\r\\n-\\t *\/\\r\\n-\\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\\r\\n-\\t\\tglobal $impresscms;\\r\\n-\\t\\t$this->postDataToObject($icmsObj);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\t$redirect_msg = $created_success_msg;\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$redirect_msg = $modified_success_msg;\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t\/\/ Check if there were uploaded files\\r\\n-\\t\\t$uploaderResult = true;\\r\\n-\\t\\tif (isset($_POST[\\'icms_upload_image\\']) || isset($_POST[\\'icms_upload_file\\'])) {\\r\\n-\\t\\t\\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\\r\\n-\\t\\t\\tforeach ( $_FILES as $name=>$file_array) {\\r\\n-\\t\\t\\t\\tif (isset ($file_array[\\'name\\']) && $file_array[\\'name\\'] != \"\" && in_array(str_replace(\\'upload_\\', \\'\\', $name), array_keys($icmsObj->vars))) {\\r\\n-\\t\\t\\t\\t\\tif ($uploaderObj->fetchMedia($name)) {\\r\\n-\\t\\t\\t\\t\\t\\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\\r\\n-\\t\\t\\t\\t\\t\\tif ($uploaderObj->upload()) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && true;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\/\/ Find the related field in the icms_ipf_Object\\r\\n-\\t\\t\\t\\t\\t\\t\\t$related_field = str_replace(\\'upload_\\', \\'\\', $name);\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploadedArray[] = $related_field;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\/\/ if it\\'s a richfile\\r\\n-\\t\\t\\t\\t\\t\\t\\tif ($icmsObj->vars[$related_field][\\'data_type\\'] == XOBJ_DTYPE_FILE) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$object_fileurl = $icmsObj->getUploadDir();\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($related_field);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $object_fileurl . $uploaderObj->getSavedFileName());\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $related_field]);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->storeFileObj($fileObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $fileObj->getVar(\\'fileid\\'));\\r\\n-\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (is_file($old_file) ) unlink($old_file);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\\r\\n-\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\r\\n-\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\r\\n-\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\r\\n-\\t\\t\\t\\t\\t}\\r\\n-\\t\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($uploaderResult) {\\r\\n-\\t\\t\\tif ($debug) {\\r\\n-\\t\\t\\t\\t$storeResult = $this->handler->insertD($icmsObj);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$storeResult = $this->handler->insert($icmsObj);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$storeResult = false;\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($storeResult) {\\r\\n-\\t\\t\\tif ($this->handler->getPermissions()) {\\r\\n-\\t\\t\\t\\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\\r\\n-\\t\\t\\t\\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\tif ($redirect_page === null) {\\r\\n-\\t\\t\\treturn $icmsObj;\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\tif (!$storeResult) {\\r\\n-\\t\\t\\t\\tredirect_header($impresscms->urls[\\'previouspage\\'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\\r\\n-\\t\\t\\t\\tredirect_header($redirect_page, 2, $redirect_msg);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Store the object in the database autmatically from a form sending POST data\\r\\n-\\t *\\r\\n-\\t * @param string $created_success_msg message to display if new object was created\\r\\n-\\t * @param string $modified_success_msg message to display if object was successfully edited\\r\\n-\\t * @param string $created_redir_page redirect page after creating the object\\r\\n-\\t * @param string $modified_redir_page redirect page after editing the object\\r\\n-\\t * @param string $redirect_page redirect page, if not set, then we backup once\\r\\n-\\t * @param bool $exit if set to TRUE then the script ends\\r\\n-\\t * @return bool\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\\r\\n-\\t\\t$objectid = ( isset($_POST[$this->handler->keyName]) )\\r\\n-\\t\\t\\t\\t? (int) $_POST[$this->handler->keyName]\\r\\n-\\t\\t\\t\\t: 0;\\r\\n-\\t\\tif ($debug) {\\r\\n-\\t\\t\\tif ($x_param) {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid);\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\tif ($x_param) {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * @todo multilanguage persistable handler is not fully implemented yet\\r\\n-\\t\\t *\/\\r\\n-\\r\\n-\\t\\t\/\/ if handler is the Multilanguage handler, we will need to treat this for multilanguage\\r\\n-\\t\\tif (is_subclass_of($this->handler, \\'icmspersistablemlobjecthandler\\')) {\\r\\n-\\r\\n-\\t\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\t\\t\/\/ This is a new object. We need to store the meta data and then the language data\\r\\n-\\t\\t\\t\\t\/\/ First, we will get rid of the multilanguage data to only store the meta data\\r\\n-\\t\\t\\t\\t$icmsObj->stripMultilanguageFields();\\r\\n-\\t\\t\\t\\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\t\\t\\t\\t\/**\\r\\n-\\t\\t\\t\\t * @todo we need to trap potential errors here\\r\\n-\\t\\t\\t\\t *\/\\r\\n-\\r\\n-\\t\\t\\t\\t\/\/ ok, the meta daa is stored. Let\\'s recreate the object and then\\r\\n-\\t\\t\\t\\t\/\/ get rid of anything not multilanguage\\r\\n-\\t\\t\\t\\tunset($icmsObj);\\r\\n-\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\t\\t\\t\\t$icmsObj->stripNonMultilanguageFields();\\r\\n-\\r\\n-\\t\\t\\t\\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\\r\\n-\\t\\t\\t\\t$this->handler->changeTableNameForML();\\r\\n-\\t\\t\\t\\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\r\\n-\\t\\t\\t\\treturn $ret;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Stores an object and shows debug information\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeicms_ipf_ObjectD() {\\r\\n-\\t\\treturn $this->storeicms_ipf_Object(true);\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tbool\\t$debug\\r\\n-\\t * @param\\tbool\\t$xparam\\r\\n-\\t * @see\\t\\tstoreFromDefaultForm\\r\\n-\\t *\/\\r\\n-\\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\\r\\n-\\t\\t$ret =& $this->storeFromDefaultForm(\\'\\', \\'\\', null, $debug, $xparam);\\r\\n-\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Handles deletion of an object which keyid is passed as a GET param\\r\\n-\\t *\\r\\n-\\t * @param string $redir_page redirect page after deleting the object\\r\\n-\\t * @return bool\\r\\n-\\t *\/\\r\\n-\\tpublic function handleObjectDeletion($confirm_msg = false, $op=\\'del\\', $userSide=false) {\\r\\n-\\t\\tglobal $impresscms;\\r\\n-\\r\\n-\\t\\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\\r\\n-\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\r\\n-\\t\\tif ($confirm) {\\r\\n-\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\r\\n-\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t\\texit;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/\/ no confirm: show deletion condition\\r\\n-\\r\\n-\\t\\t\\ticms_cp_header();\\r\\n-\\r\\n-\\t\\t\\tif (!$confirm_msg) {\\r\\n-\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\t$hiddens = array(\\r\\n-\\t\\t\\t\\t\\t\\t\\'op\\' => $op,\\r\\n-\\t\\t\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\r\\n-\\t\\t\\t\\t\\t\\t\\'confirm\\' => 1,\\r\\n-\\t\\t\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']\\r\\n-\\t\\t\\t);\\r\\n-\\t\\t\\tif ($this->handler->_moduleName == \\'system\\') {\\r\\n-\\t\\t\\t\\t$hiddens[\\'fct\\'] = isset($_GET[\\'fct\\']) ? $_GET[\\'fct\\'] : false;\\r\\n-\\t\\t\\t}\\r\\n-\\t\\t\\ticms_core_Message::confirm($hiddens, xoops_getenv(\\'SCRIPT_NAME\\'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\\r\\n-\\r\\n-\\t\\t\\ticms_cp_footer();\\r\\n-\\r\\n-\\t\\t}\\r\\n-\\t\\texit();\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tbool\\t$confirm_msg\\r\\n-\\t * @param\\tstring\\t$op\\r\\n-\\t *\/\\r\\n-\\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op=\\'del\\') {\\r\\n-\\t\\tglobal $icmsTpl, $impresscms;\\r\\n-\\r\\n-\\t\\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\\r\\n-\\t\\t$icmsObj = $this->handler->get($objectid);\\r\\n-\\r\\n-\\t\\tif ($icmsObj->isNew()) {\\r\\n-\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\r\\n-\\t\\tif ($confirm) {\\r\\n-\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\r\\n-\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\r\\n-\\t\\t\\t\\texit;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\r\\n-\\t\\t\\texit();\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/\/ no confirm: show deletion condition\\r\\n-\\t\\t\\tif (!$confirm_msg) {\\r\\n-\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\r\\n-\\t\\t\\t}\\r\\n-\\r\\n-\\t\\t\\tob_start();\\r\\n-\\t\\t\\ticms_core_Message::confirm(array(\\r\\n-\\t\\t\\t\\t\\'op\\' => $op,\\r\\n-\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\r\\n-\\t\\t\\t\\t\\'confirm\\' => 1,\\r\\n-\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']),\\r\\n-\\t\\t\\t\\txoops_getenv(\\'SCRIPT_NAME\\'),\\r\\n-\\t\\t\\t\\tsprintf($confirm_msg ,\\r\\n-\\t\\t\\t\\t$icmsObj->getVar($this->handler->identifierName)),\\r\\n-\\t\\t\\t\\t_CO_ICMS_DELETE\\r\\n-\\t\\t\\t);\\r\\n-\\t\\t\\t$icmspersistable_delete_confirm = ob_get_clean();\\r\\n-\\t\\t\\t$icmsTpl->assign(\\'icmspersistable_delete_confirm\\', $icmspersistable_delete_confirm);\\r\\n-\\t\\t}\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\\r\\n-\\t *\\r\\n-\\t * @param\\tobject\\t$icmsObj\\treference to the object from which we want the user side link\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\twhether or not to return a simple URL or a full <a> link\\r\\n-\\t * @param\\tbool\\t$withimage\\treturn a linked image instead of linked text\\r\\n-\\t * @return\\tstring\\tadmin side link to the object\\r\\n-\\t *\/\\r\\n-\\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\\r\\n-\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\r\\n-\\t\\t\\t. $this->handler->_page . \"?op=view&amp;\"\\r\\n-\\t\\t\\t. $this->handler->keyName . \"=\"\\r\\n-\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL\\r\\n-\\t\\t\\t\\t\\t. \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'  title=\\'\"\\r\\n-\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Retrieve the object user side link\\r\\n-\\t *\\r\\n-\\t * @param object $icmsObj reference to the object from which we want the user side link\\r\\n-\\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\\r\\n-\\t * @return string user side link to the object\\r\\n-\\t *\/\\r\\n-\\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * @todo URL Rewrite feature is not finished yet...\\r\\n-\\t\\t *\/\\r\\n-\\t\\t\/\/$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\\r\\n-\\t\\t\/\/$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\\r\\n-\\t\\t$seoMode = false;\\r\\n-\\t\\t$seoModuleName = $this->handler->_moduleName;\\r\\n-\\r\\n-\\t\\t\/**\\r\\n-\\t\\t * $seoIncludeId feature is not finished yet, so let\\'s put it always to true\\r\\n-\\t\\t *\/\\r\\n-\\t\\t\/\/$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\\r\\n-\\t\\t$seoIncludeId = true;\\r\\n-\\r\\n-\\t\\t\/*if ($seoMode == \\'rewrite\\') {\\r\\n-\\t\\t\\t$ret = ICMS_URL . \\'\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\r\\n-\\t\\t\\t} else if ($seoMode == \\'pathinfo\\') {\\r\\n-\\t\\t\\t$ret = SMARTOBJECT_URL . \\'seo.php\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\r\\n-\\t\\t\\t} else {\\r\\n-\\t\\t\\t*\/\\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t\/\/}\\r\\n-\\r\\n-\\t\\tif (!$onlyUrl) {\\r\\n-\\t\\t\\t$ret = \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t\\t}\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * This method returns a view link of the Object\\r\\n-\\t *\\r\\n-\\t * @param icms_ipf_Object $icmsObj\\r\\n-\\t * @param boolean $onlyUrl\\r\\n-\\t * @param boolean $withimage\\r\\n-\\t * @param boolean $userSide\\r\\n-\\t * @return string\\r\\n-\\t *\/\\r\\n-\\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . \\'admin.php?fct=\\'\\r\\n-\\t\\t\\t\\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\\r\\n-\\t\\t\\t\\t. $this->handler->keyName . \"=\"\\r\\n-\\t\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _PREVIEW . \"\\'  title=\\'\" . _PREVIEW . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobject\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t *\/\\r\\n-\\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\\r\\n-\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\r\\n-\\t\\t\\t. $this->handler->_page\\r\\n-\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\\r\\n-\\t\\t\\t. \"&amp;language=\" . $icmsObj->getVar(\\'language\\');\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/wizard.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_LANGUAGE_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_LANGUAGE_MODIFY . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t * @param\\tbool\\t$userSide\\r\\n-\\t *\/\\r\\n-\\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\r\\n-\\t\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/**\\r\\n-\\t\\t\\t * @todo: to be implemented...\\r\\n-\\t\\t\\t *\/\\r\\n-\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\r\\n-\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\r\\n-\\t\\t\\t\\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/edit.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_MODIFY . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @param\\tbool\\t$onlyUrl\\r\\n-\\t * @param\\tbool\\t$withimage\\r\\n-\\t * @param\\tbool\\t$userSide\\r\\n-\\t *\/\\r\\n-\\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\r\\n-\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\r\\n-\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\r\\n-\\t\\t\\t\\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t} else {\\r\\n-\\t\\t\\t\/**\\r\\n-\\t\\t\\t * @todo: to be implemented...\\r\\n-\\t\\t\\t *\/\\r\\n-\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\r\\n-\\t\\t\\t$admin_side = \\'\\';\\r\\n-\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\r\\n-\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\r\\n-\\t\\t\\t\\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t}\\r\\n-\\t\\tif ($onlyUrl) {\\r\\n-\\t\\t\\treturn $ret;\\r\\n-\\t\\t} elseif ($withimage) {\\r\\n-\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\r\\n-\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/editdelete.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\r\\n-\\t\\t\\t\\t. _CO_ICMS_DELETE . \"\\'  title=\\'\" . _CO_ICMS_DELETE . \"\\'\/><\/a>\";\\r\\n-\\t\\t}\\r\\n-\\r\\n-\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t *\\r\\n-\\t * @param\\tobj\\t\\t$icmsObj\\r\\n-\\t * @todo\\tNeeds to be completed\\r\\n-\\t *\/\\r\\n-\\tpublic function getPrintAndMailLink($icmsObj) {\\r\\n-\\t\\tglobal $icmsConfig, $impresscms;\\r\\n-\\r\\n-\\t\\t$ret = \\'\\';\\r\\n-\\t\\t\/*\\t\\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\r\\n-\\t\\t $js = \"javascript:openWithSelfMain(\\'\" . $printlink . \"\\', \\'smartpopup\\', 700, 519);\";\\r\\n-\\t\\t $printlink = \\'<a href=\"\\' . $js . \\'\"><img  src=\"\\' . ICMS_IMAGES_SET_URL . \\'\/actions\/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"\/><\/a>\\';\\r\\n-\\r\\n-\\t\\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\\r\\n-\\t\\t $link = $impresscms->urls[\\'full\\']();\\r\\n-\\t\\t $mid = $icmsModule->getVar(\\'mid\\');\\r\\n-\\t\\t $friendlink = \"<a href=\\\\\"javascript:openWithSelfMain(\\'\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"\\', \\',\\',\\',\\',\\',\\',\\'sendmessage\\', 674, 500);\\\\\"><img src=\\\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\\\"  alt=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" title=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" style=\\\\\"vertical-align: middle;\\\\\"\/><\/a>\";\\r\\n-\\r\\n-\\t\\t $ret = \\'<span id=\"smartobject_print_button\">\\' . $printlink . \"&nbsp;<\/span>\" . \\'<span id=\"smartobject_mail_button\">\\' . $friendlink . \\'<\/span>\\';\\r\\n-\\t\\t *\/\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-\\r\\n-\\t\/**\\r\\n-\\t * Creates a string from the object\\'s module name and item name\\r\\n-\\t *\/\\r\\n-\\tpublic function getModuleItemString() {\\r\\n-\\t\\t$ret = $this->handler->_moduleName . \\'_\\' . $this->handler->_itemname;\\r\\n-\\t\\treturn $ret;\\r\\n-\\t}\\r\\n-}\\r\\n-\\r\\n+<?php\\n+\\n+\/**\\n+ * This class is responsible for providing operations to an object for managing the object\\'s manipulation\\n+ *\\n+ * @copyright\\tThe ImpressCMS Project http:\/\/www.impresscms.org\/\\n+ * @license\\t\\thttp:\/\/www.gnu.org\/licenses\/old-licenses\/gpl-2.0.html GNU General Public License (GPL)\\n+ * @category\\tICMS\\n+ * @package\\t\\tIpf\\n+ * @subpackage\\tController\\n+ * @since\\t\\t1.1\\n+ * @author\\t\\tOriginal idea by Jan Keller Pedersen <mithrandir@xoops.org> - IDG Danmark A\/S <www.idg.dk>\\n+ * @author\\t\\tmarcan <marcan@impresscms.org>\\n+ * @version\\t\\tSVN: $Id: Controller.php 11972 2012-08-26 17:49:13Z skenow $\\n+ * @todo\\t\\tUse language constants for messages\\n+ *\/\\n+\\n+defined(\\'ICMS_ROOT_PATH\\') or die(\"ImpressCMS root path not defined\");\\n+\\n+\/**\\n+ *\\n+ *\\n+ * @category\\tICMS\\n+ * @package\\t\\tIpf\\n+ * @subpackage\\tController\\n+ *\\n+ *\/\\n+class icms_ipf_Controller {\\n+\\n+\\t\/** *\/\\n+\\tpublic $handler;\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param $handler\\n+\\t *\/\\n+\\tpublic function __construct($handler) {\\n+\\t\\t$this->handler=$handler;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t *\/\\n+\\tpublic function postDataToObject(&$icmsObj) {\\n+\\t\\tforeach (array_keys($icmsObj->vars) as $key) {\\n+\\t\\t\\t\/\/ do not post data if control is a label\\n+\\t\\t\\t$control = $icmsObj->getControl($key);\\n+\\t\\t\\tif (is_array($control) && isset($control[\\'name\\']) && $control[\\'name\\'] == \"label\") continue;\\n+\\n+\\t\\t\\tswitch ($icmsObj->vars[$key][\\'data_type\\']) {\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_IMAGE:\\n+\\t\\t\\t\\t\\tif (isset($_POST[\\'url_\\' . $key]) && $_POST[\\'url_\\' . $key] !=\\'\\') {\\n+\\t\\t\\t\\t\\t\\t$_POST[\\'url_\\' . $key] = preg_replace(\\'|[\\\\.]+\\\\\/|\\', \\'.\/\\', $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tif (isset($_POST[\\'delete_\\' . $key]) && $_POST[\\'delete_\\' . $key] == \\'1\\') {\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t$oldFile = $icmsObj->getUploadDir(true) . $icmsObj->getVar($key, \\'e\\');\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, \\'\\');\\n+\\t\\t\\t\\t\\t\\tif (is_file($oldFile) ) unlink($oldFile);\\n+\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_URLLINK:\\n+\\t\\t\\t\\t\\t$linkObj = $icmsObj->getUrlLinkObj($key);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'target\\', $_POST[\\'target_\\' . $key]);\\n+\\t\\t\\t\\t\\t$linkObj->setVar(\\'url\\', $_POST[\\'url_\\' . $key]);\\n+\\t\\t\\t\\t\\tif ($linkObj->getVar(\\'url\\') != \\'\\') {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->storeUrlLinkObj($linkObj);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\/\/@todo: catch errors\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $linkObj->getVar(\\'urllinkid\\'));\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_FILE:\\n+\\t\\t\\t\\t\\tif (!isset($_FILES[\\'upload_\\' . $key][\\'name\\']) || $_FILES[\\'upload_\\' . $key][\\'name\\'] == \\'\\') {\\n+\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($key);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $key]);\\n+\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', preg_replace(\\'|[\\\\.]+\\\\\/|\\', \\'.\/\\', $_POST[\\'url_\\' . $key]));\\n+\\t\\t\\t\\t\\t\\tif (!($fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\' && $fileObj->getVar(\\'url\\') == \\'\\')) {\\n+\\t\\t\\t\\t\\t\\t\\t$res = $icmsObj->storeFileObj($fileObj);\\n+\\t\\t\\t\\t\\t\\t\\tif ($res) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, $fileObj->getVar(\\'fileid\\'));\\n+\\t\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\/\/error setted, but no error message (to be improved)\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($fileObj->getErrors());\\n+\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_STIME:\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_MTIME:\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_LTIME:\\n+\\t\\t\\t\\t\\t\/\/ check if this field\\'s value is available in the POST array\\n+\\t\\t\\t\\t\\tif (is_array($_POST[$key]) && isset($_POST[$key][\\'date\\'])) {\\n+\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key][\\'date\\']) + $_POST[$key][\\'time\\'];\\n+\\t\\t\\t\\t\\t\/\/ in case the field is hidden, it\\'s not formated so we can simply take the value and store it\\n+\\t\\t\\t\\t\\t} elseif (filter_var($_POST[$key], FILTER_VALIDATE_INT) == $_POST[$key]) {\\n+\\t\\t\\t\\t\\t\\t$value = (int)$_POST[$key];\\n+\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t$value = strtotime($_POST[$key]);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $value);\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_URL:\\n+\\t\\t\\t\\t\\tif (isset($_POST[$key])) {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, filter_var($_POST[$key], FILTER_SANITIZE_URL));\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tcase XOBJ_DTYPE_ARRAY:\\n+\\t\\t\\t\\t\\tif (is_array($_POST[$key])) {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setVar($key, serialize($_POST[$key]));\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\tbreak;\\n+\\n+\\t\\t\\t\\tdefault:\\n+\\t\\t\\t\\t\\t$icmsObj->setVar($key, $_POST[$key]);\\n+\\t\\t\\t\\t\\tbreak;\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\tObject\\n+\\t * @param\\tint\\t\\t$objectid\\n+\\t * @param\\tstr\\t\\t$created_success_msg\\tMessage to display on successful creation\\n+\\t * @param\\tstr\\t\\t$modified_success_msg\\tMessage to display on successful modification\\n+\\t * @param\\tbool\\t$redirect_page\\t\\t\\tWhether to redirect afterwards, or not\\n+\\t * @param\\tbool\\t$debug\\t\\t\\t\\t\\tWhether to display debug information, or not\\n+\\t *\/\\n+\\tpublic function &doStoreFromDefaultForm(&$icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false) {\\n+\\t\\tglobal $impresscms;\\n+\\t\\t$this->postDataToObject($icmsObj);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\t$redirect_msg = $created_success_msg;\\n+\\t\\t} else {\\n+\\t\\t\\t$redirect_msg = $modified_success_msg;\\n+\\t\\t}\\n+\\n+\\t\\t\/\/ Check if there were uploaded files\\n+\\t\\t$uploaderResult = true;\\n+\\t\\tif (isset($_POST[\\'icms_upload_image\\']) || isset($_POST[\\'icms_upload_file\\'])) {\\n+\\t\\t\\t$uploaderObj = new icms_file_MediaUploadHandler($icmsObj->getImageDir(true), $this->handler->_allowedMimeTypes, $this->handler->_maxFileSize, $this->handler->_maxWidth, $this->handler->_maxHeight);\\n+\\t\\t\\tforeach ( $_FILES as $name=>$file_array) {\\n+\\t\\t\\t\\tif (isset ($file_array[\\'name\\']) && $file_array[\\'name\\'] != \"\" && in_array(str_replace(\\'upload_\\', \\'\\', $name), array_keys($icmsObj->vars))) {\\n+\\t\\t\\t\\t\\tif ($uploaderObj->fetchMedia($name)) {\\n+\\t\\t\\t\\t\\t\\t$uploaderObj->setTargetFileName(time() . \"_\" . $uploaderObj->getMediaName());\\n+\\t\\t\\t\\t\\t\\tif ($uploaderObj->upload()) {\\n+\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && true;\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ Find the related field in the icms_ipf_Object\\n+\\t\\t\\t\\t\\t\\t\\t$related_field = str_replace(\\'upload_\\', \\'\\', $name);\\n+\\t\\t\\t\\t\\t\\t\\t$uploadedArray[] = $related_field;\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ if it\\'s a richfile\\n+\\t\\t\\t\\t\\t\\t\\tif ($icmsObj->vars[$related_field][\\'data_type\\'] == XOBJ_DTYPE_FILE) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$object_fileurl = $icmsObj->getUploadDir();\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj = $icmsObj->getFileObj($related_field);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'url\\', $object_fileurl . $uploaderObj->getSavedFileName());\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'mid\\', $_POST[\\'mid_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'caption\\', $_POST[\\'caption_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$fileObj->setVar(\\'description\\', $_POST[\\'desc_\\' . $related_field]);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->storeFileObj($fileObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $fileObj->getVar(\\'fileid\\'));\\n+\\t\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'beforeFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the beforeFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t\\t\\t}\\n+\\n+\\t\\t\\t\\t\\t\\t\\t\\t$old_file = $icmsObj->getUploadDir(true) . $icmsObj->getVar($related_field);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (is_file($old_file) ) unlink($old_file);\\n+\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setVar($related_field, $uploaderObj->getSavedFileName());\\n+\\n+\\t\\t\\t\\t\\t\\t\\t\\t$eventResult = $this->handler->executeEvent(\\'afterFileUnlink\\', $icmsObj);\\n+\\t\\t\\t\\t\\t\\t\\t\\tif (!$eventResult) {\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors(\"An error occured during the afterFileUnlink event\");\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\n+\\t\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\t} else {\\n+\\t\\t\\t\\t\\t\\t$icmsObj->setErrors($uploaderObj->getErrors(false));\\n+\\t\\t\\t\\t\\t\\t$uploaderResult = $uploaderResult && false;\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t}\\n+\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\tif ($uploaderResult) {\\n+\\t\\t\\tif ($debug) {\\n+\\t\\t\\t\\t$storeResult = $this->handler->insertD($icmsObj);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$storeResult = $this->handler->insert($icmsObj);\\n+\\t\\t\\t}\\n+\\t\\t} else {\\n+\\t\\t\\t$storeResult = false;\\n+\\t\\t}\\n+\\n+\\t\\tif ($storeResult) {\\n+\\t\\t\\tif ($this->handler->getPermissions()) {\\n+\\t\\t\\t\\t$icmspermissions_handler = new icms_ipf_permission_Handler($this->handler);\\n+\\t\\t\\t\\t$icmspermissions_handler->storeAllPermissionsForId($icmsObj->id());\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\tif ($redirect_page === null) {\\n+\\t\\t\\treturn $icmsObj;\\n+\\t\\t} else {\\n+\\t\\t\\tif (!$storeResult) {\\n+\\t\\t\\t\\tredirect_header($impresscms->urls[\\'previouspage\\'], 3, _CO_ICMS_SAVE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$redirect_page = $redirect_page ? $redirect_page : icms_get_page_before_form();\\n+\\t\\t\\t\\tredirect_header($redirect_page, 2, $redirect_msg);\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Store the object in the database autmatically from a form sending POST data\\n+\\t *\\n+\\t * @param string $created_success_msg message to display if new object was created\\n+\\t * @param string $modified_success_msg message to display if object was successfully edited\\n+\\t * @param string $created_redir_page redirect page after creating the object\\n+\\t * @param string $modified_redir_page redirect page after editing the object\\n+\\t * @param string $redirect_page redirect page, if not set, then we backup once\\n+\\t * @param bool $exit if set to TRUE then the script ends\\n+\\t * @return bool\\n+\\t *\/\\n+\\tpublic function &storeFromDefaultForm($created_success_msg, $modified_success_msg, $redirect_page=false, $debug=false, $x_param = false) {\\n+\\t\\t$objectid = ( isset($_POST[$this->handler->keyName]) )\\n+\\t\\t\\t\\t? (int) $_POST[$this->handler->keyName]\\n+\\t\\t\\t\\t: 0;\\n+\\t\\tif ($debug) {\\n+\\t\\t\\tif ($x_param) {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid, true,  $x_param);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->getD($objectid);\\n+\\t\\t\\t}\\n+\\n+\\t\\t} else {\\n+\\t\\t\\tif ($x_param) {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid, true, false, false, $x_param);\\n+\\t\\t\\t} else {\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\t\\t\\t}\\n+\\t\\t}\\n+\\n+\\t\\t\/**\\n+\\t\\t * @todo multilanguage persistable handler is not fully implemented yet\\n+\\t\\t *\/\\n+\\n+\\t\\t\/\/ if handler is the Multilanguage handler, we will need to treat this for multilanguage\\n+\\t\\tif (is_subclass_of($this->handler, \\'icmspersistablemlobjecthandler\\')) {\\n+\\n+\\t\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\t\\t\/\/ This is a new object. We need to store the meta data and then the language data\\n+\\t\\t\\t\\t\/\/ First, we will get rid of the multilanguage data to only store the meta data\\n+\\t\\t\\t\\t$icmsObj->stripMultilanguageFields();\\n+\\t\\t\\t\\t$newObject =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\t\\t\\t\\t\/**\\n+\\t\\t\\t\\t * @todo we need to trap potential errors here\\n+\\t\\t\\t\\t *\/\\n+\\n+\\t\\t\\t\\t\/\/ ok, the meta daa is stored. Let\\'s recreate the object and then\\n+\\t\\t\\t\\t\/\/ get rid of anything not multilanguage\\n+\\t\\t\\t\\tunset($icmsObj);\\n+\\t\\t\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\t\\t\\t\\t$icmsObj->stripNonMultilanguageFields();\\n+\\n+\\t\\t\\t\\t$icmsObj->setVar($this->handler->keyName, $newObject->getVar($this->handler->keyName));\\n+\\t\\t\\t\\t$this->handler->changeTableNameForML();\\n+\\t\\t\\t\\t$ret =& $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\n+\\t\\t\\t\\treturn $ret;\\n+\\t\\t\\t}\\n+\\t\\t} else {\\n+\\t\\t\\treturn $this->doStoreFromDefaultForm($icmsObj, $objectid, $created_success_msg, $modified_success_msg, $redirect_page, $debug);\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Stores an object and shows debug information\\n+\\t *\/\\n+\\tpublic function &storeicms_ipf_ObjectD() {\\n+\\t\\treturn $this->storeicms_ipf_Object(true);\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tbool\\t$debug\\n+\\t * @param\\tbool\\t$xparam\\n+\\t * @see\\t\\tstoreFromDefaultForm\\n+\\t *\/\\n+\\tpublic function &storeicms_ipf_Object($debug=false, $xparam = false) {\\n+\\t\\t$ret =& $this->storeFromDefaultForm(\\'\\', \\'\\', null, $debug, $xparam);\\n+\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Handles deletion of an object which keyid is passed as a GET param\\n+\\t *\\n+\\t * @param string $redir_page redirect page after deleting the object\\n+\\t * @return bool\\n+\\t *\/\\n+\\tpublic function handleObjectDeletion($confirm_msg = false, $op=\\'del\\', $userSide=false) {\\n+\\t\\tglobal $impresscms;\\n+\\n+\\t\\t$objectid = (isset($_REQUEST[$this->handler->keyName])) ? (int) $_REQUEST[$this->handler->keyName] : 0;\\n+\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\n+\\t\\t\\texit();\\n+\\t\\t}\\n+\\n+\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\n+\\t\\tif ($confirm) {\\n+\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\n+\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t\\texit;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\n+\\t\\t\\texit();\\n+\\t\\t} else {\\n+\\t\\t\\t\/\/ no confirm: show deletion condition\\n+\\n+\\t\\t\\ticms_cp_header();\\n+\\n+\\t\\t\\tif (!$confirm_msg) {\\n+\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\t$hiddens = array(\\n+\\t\\t\\t\\t\\t\\t\\'op\\' => $op,\\n+\\t\\t\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\n+\\t\\t\\t\\t\\t\\t\\'confirm\\' => 1,\\n+\\t\\t\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']\\n+\\t\\t\\t);\\n+\\t\\t\\tif ($this->handler->_moduleName == \\'system\\') {\\n+\\t\\t\\t\\t$hiddens[\\'fct\\'] = isset($_GET[\\'fct\\']) ? $_GET[\\'fct\\'] : false;\\n+\\t\\t\\t}\\n+\\t\\t\\ticms_core_Message::confirm($hiddens, xoops_getenv(\\'SCRIPT_NAME\\'), sprintf($confirm_msg , $icmsObj->getVar($this->handler->identifierName)), _CO_ICMS_DELETE);\\n+\\n+\\t\\t\\ticms_cp_footer();\\n+\\n+\\t\\t}\\n+\\t\\texit();\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tbool\\t$confirm_msg\\n+\\t * @param\\tstring\\t$op\\n+\\t *\/\\n+\\tpublic function handleObjectDeletionFromUserSide($confirm_msg = false, $op=\\'del\\') {\\n+\\t\\tglobal $icmsTpl, $impresscms;\\n+\\n+\\t\\t$objectid = ( isset($_REQUEST[$this->handler->keyName]) ) ? (int) ($_REQUEST[$this->handler->keyName]) : 0;\\n+\\t\\t$icmsObj = $this->handler->get($objectid);\\n+\\n+\\t\\tif ($icmsObj->isNew()) {\\n+\\t\\t\\tredirect_header(\"javascript:history.go(-1)\", 3, _CO_ICMS_NOT_SELECTED);\\n+\\t\\t\\texit();\\n+\\t\\t}\\n+\\n+\\t\\t$confirm = ( isset($_POST[\\'confirm\\']) ) ? $_POST[\\'confirm\\'] : 0;\\n+\\t\\tif ($confirm) {\\n+\\t\\t\\tif (!$this->handler->delete($icmsObj)) {\\n+\\t\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_ERROR . $icmsObj->getHtmlErrors());\\n+\\t\\t\\t\\texit;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tredirect_header($_POST[\\'redirect_page\\'], 3, _CO_ICMS_DELETE_SUCCESS);\\n+\\t\\t\\texit();\\n+\\t\\t} else {\\n+\\t\\t\\t\/\/ no confirm: show deletion condition\\n+\\t\\t\\tif (!$confirm_msg) {\\n+\\t\\t\\t\\t$confirm_msg = _CO_ICMS_DELETE_CONFIRM;\\n+\\t\\t\\t}\\n+\\n+\\t\\t\\tob_start();\\n+\\t\\t\\ticms_core_Message::confirm(array(\\n+\\t\\t\\t\\t\\'op\\' => $op,\\n+\\t\\t\\t\\t$this->handler->keyName => $icmsObj->getVar($this->handler->keyName),\\n+\\t\\t\\t\\t\\'confirm\\' => 1,\\n+\\t\\t\\t\\t\\'redirect_page\\' => $impresscms->urls[\\'previouspage\\']),\\n+\\t\\t\\t\\txoops_getenv(\\'SCRIPT_NAME\\'),\\n+\\t\\t\\t\\tsprintf($confirm_msg ,\\n+\\t\\t\\t\\t$icmsObj->getVar($this->handler->identifierName)),\\n+\\t\\t\\t\\t_CO_ICMS_DELETE\\n+\\t\\t\\t);\\n+\\t\\t\\t$icmspersistable_delete_confirm = ob_get_clean();\\n+\\t\\t\\t$icmsTpl->assign(\\'icmspersistable_delete_confirm\\', $icmspersistable_delete_confirm);\\n+\\t\\t}\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Retrieve the object admin side link for a {@link icms_ipf_view_Single} page\\n+\\t *\\n+\\t * @param\\tobject\\t$icmsObj\\treference to the object from which we want the user side link\\n+\\t * @param\\tbool\\t$onlyUrl\\twhether or not to return a simple URL or a full <a> link\\n+\\t * @param\\tbool\\t$withimage\\treturn a linked image instead of linked text\\n+\\t * @return\\tstring\\tadmin side link to the object\\n+\\t *\/\\n+\\tpublic function getAdminViewItemLink($icmsObj, $onlyUrl=false, $withimage=false) {\\n+\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\n+\\t\\t\\t. $this->handler->_page . \"?op=view&amp;\"\\n+\\t\\t\\t. $this->handler->keyName . \"=\"\\n+\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL\\n+\\t\\t\\t\\t\\t. \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'  title=\\'\"\\n+\\t\\t\\t\\t\\t. _CO_ICMS_ADMIN_VIEW . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Retrieve the object user side link\\n+\\t *\\n+\\t * @param object $icmsObj reference to the object from which we want the user side link\\n+\\t * @param bool $onlyUrl wether or not to return a simple URL or a full <a> link\\n+\\t * @return string user side link to the object\\n+\\t *\/\\n+\\tpublic function getItemLink(&$icmsObj, $onlyUrl=false) {\\n+\\t\\t\/**\\n+\\t\\t * @todo URL Rewrite feature is not finished yet...\\n+\\t\\t *\/\\n+\\t\\t\/\/$seoMode = smart_getModuleModeSEO($this->handler->_moduleName);\\n+\\t\\t\/\/$seoModuleName = smart_getModuleNameForSEO($this->handler->_moduleName);\\n+\\t\\t$seoMode = false;\\n+\\t\\t$seoModuleName = $this->handler->_moduleName;\\n+\\n+\\t\\t\/**\\n+\\t\\t * $seoIncludeId feature is not finished yet, so let\\'s put it always to true\\n+\\t\\t *\/\\n+\\t\\t\/\/$seoIncludeId = smart_getModuleIncludeIdSEO($this->handler->_moduleName);\\n+\\t\\t$seoIncludeId = true;\\n+\\n+\\t\\t\/*if ($seoMode == \\'rewrite\\') {\\n+\\t\\t\\t$ret = ICMS_URL . \\'\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\n+\\t\\t\\t} else if ($seoMode == \\'pathinfo\\') {\\n+\\t\\t\\t$ret = SMARTOBJECT_URL . \\'seo.php\/\\' . $seoModuleName . \\'.\\' . $this->handler->_itemname . ($seoIncludeId ? \\'.\\'\\t. $icmsObj->getVar($this->handler->keyName) : \\'\\'). \\'\/\\' . $icmsObj->getVar(\\'short_url\\') . \\'.html\\';\\n+\\t\\t\\t} else {\\n+\\t\\t\\t*\/\\t$ret = $this->handler->_moduleUrl . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t\/\/}\\n+\\n+\\t\\tif (!$onlyUrl) {\\n+\\t\\t\\t$ret = \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t\\t}\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * This method returns a view link of the Object\\n+\\t *\\n+\\t * @param icms_ipf_Object $icmsObj\\n+\\t * @param boolean $onlyUrl\\n+\\t * @param boolean $withimage\\n+\\t * @param boolean $userSide\\n+\\t * @return string\\n+\\t *\/\\n+\\tpublic function getViewItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page . \"?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . \\'admin.php?fct=\\'\\n+\\t\\t\\t\\t. $this->handler->_itemname . \"&amp;op=view&amp;\"\\n+\\t\\t\\t\\t. $this->handler->keyName . \"=\"\\n+\\t\\t\\t\\t. $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/viewmag.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _PREVIEW . \"\\'  title=\\'\" . _PREVIEW . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobject\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t *\/\\n+\\tpublic function getEditLanguageLink($icmsObj, $onlyUrl=false, $withimage=true) {\\n+\\t\\t$ret = $this->handler->_moduleUrl . \"admin\/\"\\n+\\t\\t\\t. $this->handler->_page\\n+\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName)\\n+\\t\\t\\t. \"&amp;language=\" . $icmsObj->getVar(\\'language\\');\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/wizard.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_LANGUAGE_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_LANGUAGE_MODIFY . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t * @param\\tbool\\t$userSide\\n+\\t *\/\\n+\\tpublic function getEditItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\n+\\t\\t\\t\\t. \"?op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t\/**\\n+\\t\\t\\t * @todo: to be implemented...\\n+\\t\\t\\t *\/\\n+\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\n+\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\n+\\t\\t\\t\\t. \"&amp;op=mod&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/edit.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_MODIFY . \"\\'  title=\\'\" . _CO_ICMS_MODIFY . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @param\\tbool\\t$onlyUrl\\n+\\t * @param\\tbool\\t$withimage\\n+\\t * @param\\tbool\\t$userSide\\n+\\t *\/\\n+\\tpublic function getDeleteItemLink($icmsObj, $onlyUrl=false, $withimage=true, $userSide=false) {\\n+\\t\\tif ($this->handler->_moduleName != \\'system\\') {\\n+\\t\\t\\t$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side . $this->handler->_page\\n+\\t\\t\\t\\t. \"?op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t} else {\\n+\\t\\t\\t\/**\\n+\\t\\t\\t * @todo: to be implemented...\\n+\\t\\t\\t *\/\\n+\\t\\t\\t\/\/$admin_side = $userSide ? \\'\\' : \\'admin\/\\';\\n+\\t\\t\\t$admin_side = \\'\\';\\n+\\t\\t\\t$ret = $this->handler->_moduleUrl . $admin_side\\n+\\t\\t\\t\\t. \\'admin.php?fct=\\' . $this->handler->_itemname\\n+\\t\\t\\t\\t. \"&amp;op=del&amp;\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t}\\n+\\t\\tif ($onlyUrl) {\\n+\\t\\t\\treturn $ret;\\n+\\t\\t} elseif ($withimage) {\\n+\\t\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\\n+\\t\\t\\t\\t<img src=\\'\" . ICMS_IMAGES_SET_URL . \"\/actions\/editdelete.png\\' style=\\'vertical-align: middle;\\' alt=\\'\"\\n+\\t\\t\\t\\t. _CO_ICMS_DELETE . \"\\'  title=\\'\" . _CO_ICMS_DELETE . \"\\'\/><\/a>\";\\n+\\t\\t}\\n+\\n+\\t\\treturn \"<a href=\\'\" . $ret . \"\\'>\" . $icmsObj->getVar($this->handler->identifierName) . \"<\/a>\";\\n+\\t}\\n+\\n+\\t\/**\\n+\\t *\\n+\\t * @param\\tobj\\t\\t$icmsObj\\n+\\t * @todo\\tNeeds to be completed\\n+\\t *\/\\n+\\tpublic function getPrintAndMailLink($icmsObj) {\\n+\\t\\tglobal $icmsConfig, $impresscms;\\n+\\n+\\t\\t$ret = \\'\\';\\n+\\t\\t\/*\\t\\t$printlink = $this->handler->_moduleUrl . \"print.php?\" . $this->handler->keyName . \"=\" . $icmsObj->getVar($this->handler->keyName);\\n+\\t\\t $js = \"javascript:openWithSelfMain(\\'\" . $printlink . \"\\', \\'smartpopup\\', 700, 519);\";\\n+\\t\\t $printlink = \\'<a href=\"\\' . $js . \\'\"><img  src=\"\\' . ICMS_IMAGES_SET_URL . \\'\/actions\/fileprint.png\" alt=\"\" style=\"vertical-align: middle;\"\/><\/a>\\';\\n+\\n+\\t\\t $icmsModule = icms_getModuleInfo($icmsObj->handler->_moduleName);\\n+\\t\\t $link = $impresscms->urls[\\'full\\']();\\n+\\t\\t $mid = $icmsModule->getVar(\\'mid\\');\\n+\\t\\t $friendlink = \"<a href=\\\\\"javascript:openWithSelfMain(\\'\".SMARTOBJECT_URL.\"sendlink.php?link=\" . $link . \"&amp;mid=\" . $mid . \"\\', \\',\\',\\',\\',\\',\\',\\'sendmessage\\', 674, 500);\\\\\"><img src=\\\\\"\".SMARTOBJECT_IMAGES_ACTIONS_URL . \"mail_send.png\\\\\"  alt=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" title=\\\\\"\" . _CO_ICMS_EMAIL . \"\\\\\" style=\\\\\"vertical-align: middle;\\\\\"\/><\/a>\";\\n+\\n+\\t\\t $ret = \\'<span id=\"smartobject_print_button\">\\' . $printlink . \"&nbsp;<\/span>\" . \\'<span id=\"smartobject_mail_button\">\\' . $friendlink . \\'<\/span>\\';\\n+\\t\\t *\/\\n+\\t\\treturn $ret;\\n+\\t}\\n+\\n+\\t\/**\\n+\\t * Creates a string from the object\\'s module name and item name\\n+\\t *\/\\n+\\tpublic function getModuleItemString() {\\n+\\t\\t$ret = $this->handler->_moduleName . \\'_\\' . $this->handler->_itemname;\\n+\\t\\treturn $ret;\\n+\\t}\\n+}\\n+'}}",
            "message_norm":"prevents using submitted filenames with ..\/ for controller (#812)\n\n* prevents using submitted filenames with ..\/ for controller\r\n\r\n* using preg replace for better parent paths replaces\r\n\r\nco-authored-by: raimondas rimkevi\u010dius (aka mekdrop) <mekdrop@impresscms.org>",
            "language":"en",
            "entities":"[('prevents', 'ACTION', ''), ('#812', 'ISSUE', ''), ('prevents', 'ACTION', ''), ('mekdrop@impresscms.org', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['htdocs\/libraries\/icms\/ipf\/Controller.php'])",
            "num_files":1.0
        },
        {
            "index":2950,
            "vuln_id":"GHSA-rh9j-f5f8-rvgc",
            "cwe_id":"{'CWE-295', 'CWE-287'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/parse-community\/parse-server\/commit\/ba2b0a9cb9a568817a114b132a4c2e0911d76df1', 'https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/0cc299f82e367518f2fe7a53b99f3f801a338cf4', 'https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/2084b7c569697a5230e42511799eeac9219db5a9'}",
            "dataset":"osv",
            "summary":"Authentication bypass vulnerability in Apple Game Center auth adapter  ### Impact\nThe certificate in Apple Game Center auth adapter not validated. As a result, authentication could potentially be bypassed by making a fake certificate accessible via certain Apple domains and providing the URL to that certificate in an authData object.\n\n### Patches\nTo prevent this, a new `rootCertificateUrl` property is introduced to the Parse Server Apple Game Center auth adapter which takes the URL to the root certificate of Apple's Game Center authentication certificate. If no value is set, the `rootCertificateUrl` property defaults to the URL of the [current root certificate](https:\/\/developer.apple.com\/news\/?id=stttq465) as of May 27, 2022.\n\nKeep in mind that the root certificate can change at any time (expected to be announced by Apple) and that it is the developer's responsibility to keep the root certificate URL up-to-date when using the Parse Server Apple Game Center auth adapter.\n\n### Workarounds\nNone.\n\n### References\n- https:\/\/github.com\/parse-community\/parse-server\/security\/advisories\/GHSA-rh9j-f5f8-rvgc\n- https:\/\/developer.apple.com\/news\/?id=stttq465\n- https:\/\/github.com\/parse-community\/parse-server\n\n### More information\n* For questions or comments about this vulnerability visit our [community forum](http:\/\/community.parseplatform.org) or [community chat](http:\/\/chat.parseplatform.org)\n* Report other vulnerabilities at [report.parseplatform.org](https:\/\/report.parseplatform.org)",
            "published_date":"2022-06-17",
            "chain_len":3,
            "project":"https:\/\/github.com\/parse-community\/parse-server",
            "commit_href":"https:\/\/github.com\/parse-community\/parse-server\/pull\/8054\/commits\/0cc299f82e367518f2fe7a53b99f3f801a338cf4",
            "commit_sha":"0cc299f82e367518f2fe7a53b99f3f801a338cf4",
            "patch":"MULTI",
            "chain_ord":"['2084b7c569697a5230e42511799eeac9219db5a9', '0cc299f82e367518f2fe7a53b99f3f801a338cf4', 'ba2b0a9cb9a568817a114b132a4c2e0911d76df1']",
            "before_first_fix_commit":"{'a8aef820afa2c8d87683668c2961e523016bad9b'}",
            "last_fix_commit":"ba2b0a9cb9a568817a114b132a4c2e0911d76df1",
            "chain_ord_pos":2.0,
            "commit_datetime":"06\/17\/2022, 15:30:54",
            "message":"Update gcenter.js",
            "author":"Manuel Trezza",
            "comments":null,
            "stats":"{'additions': 17, 'deletions': 9, 'total': 26}",
            "files":"{'src\/Adapters\/Auth\/gcenter.js': {'additions': 17, 'deletions': 9, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/parse-community\/parse-server\/raw\/0cc299f82e367518f2fe7a53b99f3f801a338cf4\/src%2FAdapters%2FAuth%2Fgcenter.js', 'patch': \"@@ -56,8 +56,9 @@ async function getAppleCertificate(publicKeyUrl) {\\n   const cert_headers = await new Promise((resolve, reject) =>\\n     https.get(headOptions, res => resolve(res.headers)).on('error', reject)\\n   );\\n+  const validContentTypes = ['application\/x-x509-ca-cert', 'application\/pkix-cert'];\\n   if (\\n-    cert_headers['content-type'] !== 'application\/pkix-cert' ||\\n+    !validContentTypes.includes(cert_headers['content-type']) ||\\n     cert_headers['content-length'] == null ||\\n     cert_headers['content-length'] > 10000\\n   ) {\\n@@ -66,7 +67,7 @@ async function getAppleCertificate(publicKeyUrl) {\\n       `Apple Game Center - invalid publicKeyUrl: ${publicKeyUrl}`\\n     );\\n   }\\n-  const {certificate, headers} = await getCertificate(publicKeyUrl);\\n+  const { certificate, headers } = await getCertificate(publicKeyUrl);\\n   if (headers['cache-control']) {\\n     const expire = headers['cache-control'].match(\/max-age=([0-9]+)\/);\\n     if (expire) {\\n@@ -90,15 +91,15 @@ function getCertificate(url, buffer) {\\n         });\\n         res.on('end', () => {\\n           if (buffer) {\\n-            resolve({certificate: Buffer.concat(data), headers: res.headers});\\n+            resolve({ certificate: Buffer.concat(data), headers: res.headers });\\n             return;\\n           }\\n           let cert = '';\\n           for (const chunk of data) {\\n             cert += chunk.toString('base64');\\n           }\\n           const certificate = convertX509CertToPEM(cert);\\n-          resolve({certificate, headers: res.headers});\\n+          resolve({ certificate, headers: res.headers });\\n         });\\n       })\\n       .on('error', reject);\\n@@ -132,7 +133,10 @@ function verifySignature(publicKey, authData) {\\n function verifyPublicKeyIssuer(cert, publicKeyUrl) {\\n   const publicKeyCert = pki.certificateFromPem(cert);\\n   if (!ca.cert) {\\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\\n+    throw new Parse.Error(\\n+      Parse.Error.OBJECT_NOT_FOUND,\\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\\n+    );\\n   }\\n   try {\\n     if (!ca.cert.verify(publicKeyCert)) {\\n@@ -163,21 +167,25 @@ async function validateAuthData(authData) {\\n \/\/ Returns a promise that fulfills if this app id is valid.\\n async function validateAppId(appIds, authData, options = {}) {\\n   if (!options.rootCertificateUrl) {\\n-    options.rootCertificateUrl = 'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem'\\n+    options.rootCertificateUrl =\\n+      'https:\/\/cacerts.digicert.com\/DigiCertTrustedG4CodeSigningRSA4096SHA3842021CA1.crt.pem';\\n   }\\n   if (ca.url === options.rootCertificateUrl) {\\n     return;\\n   }\\n-  const {certificate, headers} = await getCertificate(options.rootCertificateUrl, true);\\n+  const { certificate, headers } = await getCertificate(options.rootCertificateUrl, true);\\n   if (\\n     headers['content-type'] !== 'application\/x-pem-file' ||\\n     headers['content-length'] == null ||\\n     headers['content-length'] > 10000\\n   ) {\\n-    throw new Parse.Error(Parse.Error.OBJECT_NOT_FOUND, 'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.');\\n+    throw new Parse.Error(\\n+      Parse.Error.OBJECT_NOT_FOUND,\\n+      'Apple Game Center auth adapter parameter `rootCertificateURL` is invalid.'\\n+    );\\n   }\\n   ca.cert = pki.certificateFromPem(certificate);\\n-  ca.url = options.rootCertificateUrl\\n+  ca.url = options.rootCertificateUrl;\\n }\\n \\n module.exports = {\"}}",
            "message_norm":"update gcenter.js",
            "language":"nl",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Adapters\/Auth\/gcenter.js'])",
            "num_files":1.0
        },
        {
            "index":2158,
            "vuln_id":"GHSA-hx9q-2mx4-m4pg",
            "cwe_id":"{'CWE-191', 'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943'}",
            "dataset":"osv",
            "summary":"Missing validation causes denial of service via `Conv3DBackpropFilterV2` ### Impact\nThe implementation of [`tf.raw_ops.UnsortedSegmentJoin`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/kernels\/unsorted_segment_join_op.cc#L83-L148) does not fully validate the input arguments. This results in a `CHECK`-failure which can be used to trigger a denial of service attack:\n\n```python\nimport tensorflow as tf\n\ntf.strings.unsorted_segment_join(\n  inputs=['123'],\n  segment_ids=[0],\n  num_segments=-1)\n```\n\nThe code assumes `num_segments` is a positive scalar but there is no validation:\n\n```cc\nconst Tensor& num_segments_tensor = context->input(2);\nauto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\n\/\/ ...\nTensor* output_tensor = nullptr;\nTensorShape output_shape =\n    GetOutputShape(input_shape, segment_id_shape, num_segments);\n```\n\nSince this value is used to allocate the output tensor, a negative value would result in a `CHECK`-failure (assertion failure), as per [TFSA-2021-198](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/tensorflow\/security\/advisory\/tfsa-2021-198.md).\n\n### Patches \nWe have patched the issue in GitHub commit [84563f265f28b3c36a15335c8b005d405260e943](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943) and GitHub commit [20cb18724b0bf6c09071a3f53434c4eec53cc147](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/20cb18724b0bf6c09071a3f53434c4eec53cc147).\n  \nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n      \n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n                       \n### Attribution \nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/55305).",
            "published_date":"2022-05-24",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/84563f265f28b3c36a15335c8b005d405260e943",
            "commit_sha":"84563f265f28b3c36a15335c8b005d405260e943",
            "patch":"MULTI",
            "chain_ord":"['84563f265f28b3c36a15335c8b005d405260e943', '20cb18724b0bf6c09071a3f53434c4eec53cc147']",
            "before_first_fix_commit":"{'3f30e4965889b1b86b1d56392e437ccc08907f65'}",
            "last_fix_commit":"20cb18724b0bf6c09071a3f53434c4eec53cc147",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/15\/2022, 17:34:16",
            "message":"Validate `num_segments > 0` in `unsorted_segment_join`\n\nFixes #55305\n\nPiperOrigin-RevId: 442047005",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/unsorted_segment_join_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/84563f265f28b3c36a15335c8b005d405260e943\/tensorflow%2Fcore%2Fkernels%2Funsorted_segment_join_op.cc', 'patch': '@@ -94,6 +94,8 @@ class UnsortedSegmentJoinOp : public OpKernel {\\n                 errors::InvalidArgument(\"Number of segments cannot be empty.\"));\\n     auto num_segments = num_segments_tensor.scalar<NUM_SEGMENTS_TYPE>()();\\n \\n+    OP_REQUIRES(context, num_segments > 0,\\n+                errors::InvalidArgument(\"Number of segments must be positive\"));\\n     OP_REQUIRES(context, segment_dims != 0,\\n                 errors::InvalidArgument(\"Segment_id cannot have rank 0\"));'}}",
            "message_norm":"validate `num_segments > 0` in `unsorted_segment_join`\n\nfixes #55305\n\npiperorigin-revid: 442047005",
            "language":"ca",
            "entities":"[('validate', 'ACTION', ''), ('fixes', 'ACTION', ''), ('#55305', 'ISSUE', ''), ('442047005', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/unsorted_segment_join_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1123,
            "vuln_id":"GHSA-8434-v7xw-8m9x",
            "cwe_id":"{'CWE-88', 'CWE-78'}",
            "score":9.3,
            "chain":"{'https:\/\/github.com\/dwisiswant0\/apkleaks\/commit\/a966e781499ff6fd4eea66876d7532301b13a382'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Argument Delimiters in a Decompiling Package Process in APKLeaks APKLeaks prior to v2.0.4 allows remote authenticated attackers to execute arbitrary OS commands via package name inside the application manifest.\n\n### Impact\n\nAn authenticated attacker could include arguments that allow unintended commands or code to be executed, allow sensitive data to be read or modified, or could cause other unintended behavior through malicious package names.\n\n\n### References\n\n- a966e781499ff6fd4eea66876d7532301b13a382\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email me at [me@dw1.io](mailto:me@dw1.io)",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/dwisiswant0\/apkleaks",
            "commit_href":"https:\/\/github.com\/dwisiswant0\/apkleaks\/commit\/a966e781499ff6fd4eea66876d7532301b13a382",
            "commit_sha":"a966e781499ff6fd4eea66876d7532301b13a382",
            "patch":"SINGLE",
            "chain_ord":"['a966e781499ff6fd4eea66876d7532301b13a382']",
            "before_first_fix_commit":"{'8577b7af6224bf0a5455b552963c46721308d2ff'}",
            "last_fix_commit":"a966e781499ff6fd4eea66876d7532301b13a382",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2021, 15:25:42",
            "message":"Escapes decompiling arguments",
            "author":"Dwi Siswanto",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 2, 'total': 6}",
            "files":"{'apkleaks\/apkleaks.py': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dwisiswant0\/apkleaks\/raw\/a966e781499ff6fd4eea66876d7532301b13a382\/apkleaks%2Fapkleaks.py', 'patch': '@@ -2,6 +2,7 @@\\n from apkleaks.colors import clr\\n from contextlib import closing\\n from distutils.spawn import find_executable\\n+from pipes import quote\\n from pyaxmlparser import APK\\n from urllib.request import urlopen\\n from zipfile import ZipFile\\n@@ -84,8 +85,9 @@ def decompile(self):\\n \\t\\t\\t\\t\\tclasses.write(zipped.read(\"classes.dex\"))\\n \\t\\t\\texcept Exception as e:\\n \\t\\t\\t\\tsys.exit(self.writeln(str(e), clr.WARNING))\\n-\\t\\tdec = \"%s %s -d %s --deobf\" % (self.jadx, dex, self.tempdir)\\n-\\t\\tos.system(dec)\\n+\\t\\targs = [self.jadx, dex, \"-d\", self.tempdir, \"--deobf\"]\\n+\\t\\tcomm = \"%s\" % (\" \".join(quote(arg) for arg in args))\\n+\\t\\tos.system(comm)\\n \\t\\treturn self.tempdir\\n \\n \\tdef unique(self, list):'}}",
            "message_norm":"escapes decompiling arguments",
            "language":"ca",
            "entities":"[('escapes', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['apkleaks\/apkleaks.py'])",
            "num_files":1.0
        },
        {
            "index":1964,
            "vuln_id":"GHSA-h2fw-93qx-vrcq",
            "cwe_id":"{'CWE-89'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1'}",
            "dataset":"osv",
            "summary":"SQL Injection in Moodle An SQL injection risk was identified in Badges code relating to configuring criteria. Access to the relevant capability was limited to teachers and managers by default.",
            "published_date":"2022-03-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/moodle\/moodle",
            "commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1",
            "commit_sha":"c2794752ea3cdda2d64a0651da08b2cdf730d9f1",
            "patch":"SINGLE",
            "chain_ord":"['c2794752ea3cdda2d64a0651da08b2cdf730d9f1']",
            "before_first_fix_commit":"{'addd4f894d8173ec8ff0ae2212d51a1977e7bcad'}",
            "last_fix_commit":"c2794752ea3cdda2d64a0651da08b2cdf730d9f1",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/03\/2022, 18:02:15",
            "message":"MDL-74074 badges: Ensure profile criteria exists before completion check",
            "author":"Michael Hawkins",
            "comments":null,
            "stats":"{'additions': 23, 'deletions': 6, 'total': 29}",
            "files":"{'badges\/criteria\/award_criteria_profile.php': {'additions': 23, 'deletions': 6, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/c2794752ea3cdda2d64a0651da08b2cdf730d9f1\/badges%2Fcriteria%2Faward_criteria_profile.php', 'patch': '@@ -39,6 +39,26 @@ class award_criteria_profile extends award_criteria {\\n     public $required_param = \\'field\\';\\n     public $optional_params = array();\\n \\n+    \/* @var array The default profile fields allowed to be used as award criteria.\\n+     *\\n+     * Note: This is used instead of user_get_default_fields(), because it is not possible to\\n+     * determine which fields the user can modify.\\n+     *\/\\n+    protected $allowed_default_fields = [\\n+        \\'firstname\\',\\n+        \\'lastname\\',\\n+        \\'email\\',\\n+        \\'address\\',\\n+        \\'phone1\\',\\n+        \\'phone2\\',\\n+        \\'department\\',\\n+        \\'institution\\',\\n+        \\'description\\',\\n+        \\'picture\\',\\n+        \\'city\\',\\n+        \\'country\\',\\n+    ];\\n+\\n     \/**\\n      * Add appropriate new criteria options to the form\\n      *\\n@@ -50,10 +70,7 @@ public function get_options(&$mform) {\\n         $none = true;\\n         $existing = array();\\n         $missing = array();\\n-\\n-        \/\/ Note: cannot use user_get_default_fields() here because it is not possible to decide which fields user can modify.\\n-        $dfields = array(\\'firstname\\', \\'lastname\\', \\'email\\', \\'address\\', \\'phone1\\', \\'phone2\\',\\n-                         \\'department\\', \\'institution\\', \\'description\\', \\'picture\\', \\'city\\', \\'country\\');\\n+        $dfields = $this->allowed_default_fields;\\n \\n         \/\/ Get custom fields.\\n         $cfields = array_filter(profile_get_custom_fields(), function($field) {\\n@@ -230,8 +247,8 @@ public function get_completed_criteria_sql() {\\n                 $join .= \" LEFT JOIN {user_info_data} uid{$idx} ON uid{$idx}.userid = u.id AND uid{$idx}.fieldid = :fieldid{$idx} \";\\n                 $params[\"fieldid{$idx}\"] = $param[\\'field\\'];\\n                 $whereparts[] = \"uid{$idx}.id IS NOT NULL\";\\n-            } else {\\n-                \/\/ This is a field from {user} table.\\n+            } else if (in_array($param[\\'field\\'], $this->allowed_default_fields)) {\\n+                \/\/ This is a valid field from {user} table.\\n                 if ($param[\\'field\\'] == \\'picture\\') {\\n                     \/\/ The picture field is numeric and requires special handling.\\n                     $whereparts[] = \"u.{$param[\\'field\\']} != 0\";'}}",
            "message_norm":"mdl-74074 badges: ensure profile criteria exists before completion check",
            "language":"en",
            "entities":"[('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['badges\/criteria\/award_criteria_profile.php'])",
            "num_files":1.0
        },
        {
            "index":634,
            "vuln_id":"GHSA-5gjh-5j4f-cpwv",
            "cwe_id":"{'CWE-434', 'CWE-20'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/0fef3c9082269e9a4e817274942a5d7c50617284'}",
            "dataset":"osv",
            "summary":"Unrestricted Upload of File with Dangerous Type in Gogs ### Impact\n\nThe malicious user is able to upload a crafted `config` file into repository's `.git` directory with to gain SSH access to the server. All installations with [repository upload enabled (default)](https:\/\/github.com\/gogs\/gogs\/blob\/f36eeedbf89328ee70cc3a2e239f6314f9021f58\/conf\/app.ini#L127-L129) are affected.\n\n### Patches\n\nRepository file uploads are prohibited to its `.git` directory. Users should upgrade to 0.12.6 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable repository files upload](https:\/\/github.com\/gogs\/gogs\/blob\/f36eeedbf89328ee70cc3a2e239f6314f9021f58\/conf\/app.ini#L128-L129).\n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/b4928cfe-4110-462f-a180-6d5673797902\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on #6833.",
            "published_date":"2022-03-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/gogs\/gogs",
            "commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/0fef3c9082269e9a4e817274942a5d7c50617284",
            "commit_sha":"0fef3c9082269e9a4e817274942a5d7c50617284",
            "patch":"SINGLE",
            "chain_ord":"['0fef3c9082269e9a4e817274942a5d7c50617284']",
            "before_first_fix_commit":"{'5aca56d2ddafad347dd670f4004ebf367c2c84ef'}",
            "last_fix_commit":"0fef3c9082269e9a4e817274942a5d7c50617284",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 14:18:56",
            "message":"repo_editor: check upload `TreePath` and file name (#6838)",
            "author":"Joe Chen",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 4, 'total': 17}",
            "files":"{'internal\/db\/repo_editor.go': {'additions': 13, 'deletions': 4, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/0fef3c9082269e9a4e817274942a5d7c50617284\/internal%2Fdb%2Frepo_editor.go', 'patch': '@@ -16,16 +16,18 @@ import (\\n \\t\"strings\"\\n \\t\"time\"\\n \\n+\\t\"github.com\/pkg\/errors\"\\n \\tgouuid \"github.com\/satori\/go.uuid\"\\n \\t\"github.com\/unknwon\/com\"\\n \\n \\t\"github.com\/gogs\/git-module\"\\n \\n \\t\"gogs.io\/gogs\/internal\/conf\"\\n \\t\"gogs.io\/gogs\/internal\/cryptoutil\"\\n-\\t\"gogs.io\/gogs\/internal\/db\/errors\"\\n+\\tdberrors \"gogs.io\/gogs\/internal\/db\/errors\"\\n \\t\"gogs.io\/gogs\/internal\/gitutil\"\\n \\t\"gogs.io\/gogs\/internal\/osutil\"\\n+\\t\"gogs.io\/gogs\/internal\/pathutil\"\\n \\t\"gogs.io\/gogs\/internal\/process\"\\n \\t\"gogs.io\/gogs\/internal\/tool\"\\n )\\n@@ -134,7 +136,7 @@ func (repo *Repository) UpdateRepoFile(doer *User, opts UpdateRepoFileOptions) (\\n \\tif opts.OldBranch != opts.NewBranch {\\n \\t\\t\/\/ Directly return error if new branch already exists in the server\\n \\t\\tif git.RepoHasBranch(repoPath, opts.NewBranch) {\\n-\\t\\t\\treturn errors.BranchAlreadyExists{Name: opts.NewBranch}\\n+\\t\\t\\treturn dberrors.BranchAlreadyExists{Name: opts.NewBranch}\\n \\t\\t}\\n \\n \\t\\t\/\/ Otherwise, delete branch from local copy in case out of sync\\n@@ -449,11 +451,16 @@ func isRepositoryGitPath(path string) bool {\\n \\treturn strings.HasSuffix(path, \".git\") || strings.Contains(path, \".git\"+string(os.PathSeparator))\\n }\\n \\n-func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) (err error) {\\n+func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions) error {\\n \\tif len(opts.Files) == 0 {\\n \\t\\treturn nil\\n \\t}\\n \\n+\\t\/\/ Prevent uploading files into the \".git\" directory\\n+\\tif isRepositoryGitPath(opts.TreePath) {\\n+\\t\\treturn errors.Errorf(\"bad tree path %q\", opts.TreePath)\\n+\\t}\\n+\\n \\tuploads, err := GetUploadsByUUIDs(opts.Files)\\n \\tif err != nil {\\n \\t\\treturn fmt.Errorf(\"get uploads by UUIDs[%v]: %v\", opts.Files, err)\\n@@ -487,7 +494,9 @@ func (repo *Repository) UploadRepoFiles(doer *User, opts UploadRepoFileOptions)\\n \\t\\t\\tcontinue\\n \\t\\t}\\n \\n-\\t\\t\/\/ Prevent copying files into .git directory, see https:\/\/gogs.io\/gogs\/issues\/5558.\\n+\\t\\tupload.Name = pathutil.Clean(upload.Name)\\n+\\n+\\t\\t\/\/ Prevent uploading files into the \".git\" directory\\n \\t\\tif isRepositoryGitPath(upload.Name) {\\n \\t\\t\\tcontinue\\n \\t\\t}'}}",
            "message_norm":"repo_editor: check upload `treepath` and file name (#6838)",
            "language":"en",
            "entities":"[('#6838', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['internal\/db\/repo_editor.go'])",
            "num_files":1.0
        },
        {
            "index":3064,
            "vuln_id":"GHSA-v6vg-pxvv-g5cq",
            "cwe_id":"{'CWE-269'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/db0c0e790892db874573d95f8ae4268b8a011ab1'}",
            "dataset":"osv",
            "summary":"Improper Privilege Management in Snipe-IT Snipe-IT prior to 5.3.9 is vulnerable to improper privilege management. A user who does not have access to the supplier module may view supplier content.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/db0c0e790892db874573d95f8ae4268b8a011ab1",
            "commit_sha":"db0c0e790892db874573d95f8ae4268b8a011ab1",
            "patch":"SINGLE",
            "chain_ord":"['db0c0e790892db874573d95f8ae4268b8a011ab1']",
            "before_first_fix_commit":"{'05c0819776b07425b2831cd31a8a0f4e7ac30c09', 'd77a47765ea1fd112a9b0731a88de1e26ed24256'}",
            "last_fix_commit":"db0c0e790892db874573d95f8ae4268b8a011ab1",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/13\/2022, 18:56:55",
            "message":"Merge pull request #10665 from snipe\/fixes\/adds_gate_to_supplier_view\n\nAdds gate to supplier",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'app\/Http\/Controllers\/SuppliersController.php': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/db0c0e790892db874573d95f8ae4268b8a011ab1\/app%2FHttp%2FControllers%2FSuppliersController.php', 'patch': \"@@ -184,6 +184,7 @@ public function destroy($supplierId)\\n      *\/\\n     public function show($supplierId = null)\\n     {\\n+        $this->authorize('view', Supplier::class);\\n         $supplier = Supplier::find($supplierId);\\n \\n         if (isset($supplier->id)) {\"}}",
            "message_norm":"merge pull request #10665 from snipe\/fixes\/adds_gate_to_supplier_view\n\nadds gate to supplier",
            "language":"en",
            "entities":"[('#10665', 'ISSUE', ''), ('adds_gate_to_supplier_view', 'ACTION', ''), ('adds', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/SuppliersController.php'])",
            "num_files":1.0
        },
        {
            "index":2648,
            "vuln_id":"GHSA-pvrc-hg3f-58r6",
            "cwe_id":"{'CWE-787'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f'}",
            "dataset":"osv",
            "summary":"Heap OOB access in `Dilation2DBackpropInput` ### Impact\nAn attacker can write outside the bounds of heap allocated arrays by passing invalid arguments to `tf.raw_ops.Dilation2DBackpropInput`:\n\n```python\nimport tensorflow as tf\n    \ninput_tensor = tf.constant([1.1] * 81, shape=[3, 3, 3, 3], dtype=tf.float32)\nfilter = tf.constant([], shape=[0, 0, 3], dtype=tf.float32)\nout_backprop = tf.constant([1.1] * 1062, shape=[3, 2, 59, 3], dtype=tf.float32)\n\ntf.raw_ops.Dilation2DBackpropInput(\n  input=input_tensor, filter=filter, out_backprop=out_backprop, \n  strides=[1, 40, 1, 1], rates=[1, 56, 56, 1], padding='VALID')\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/afd954e65f15aea4d438d0a219136fc4a63a573d\/tensorflow\/core\/kernels\/dilation_ops.cc#L321-L322) does not validate before writing to the output array.\n  \n```cc               \nin_backprop(b, h_in_max, w_in_max, d) += out_backprop(b, h_out, w_out, d);\n```                 \n    \nThe values for `h_out` and `w_out` are guaranteed to be in range for `out_backprop` (as they are loop indices bounded by the size of the array). However, there are no similar guarantees relating `h_in_max`\/`w_in_max` and `in_backprop`.\n\n### Patches\nWe have patched the issue in GitHub commit [3f6fe4dfef6f57e768260b48166c27d148f3015f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3f6fe4dfef6f57e768260b48166c27d148f3015f",
            "commit_sha":"3f6fe4dfef6f57e768260b48166c27d148f3015f",
            "patch":"SINGLE",
            "chain_ord":"['3f6fe4dfef6f57e768260b48166c27d148f3015f']",
            "before_first_fix_commit":"{'afd954e65f15aea4d438d0a219136fc4a63a573d'}",
            "last_fix_commit":"3f6fe4dfef6f57e768260b48166c27d148f3015f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 01:33:28",
            "message":"Add missing validations in dillation ops.\n\nPiperOrigin-RevId: 372037158\nChange-Id: I4ee304c84a02550c030288a6534000b934fc1599",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 4, 'total': 15}",
            "files":"{'tensorflow\/core\/kernels\/dilation_ops.cc': {'additions': 11, 'deletions': 4, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/3f6fe4dfef6f57e768260b48166c27d148f3015f\/tensorflow%2Fcore%2Fkernels%2Fdilation_ops.cc', 'patch': '@@ -130,6 +130,7 @@ class DilationOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Output tensor is of the following dimensions:\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -229,6 +230,7 @@ class DilationBackpropInputOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Verify that the incoming gradient tensor has the expected size\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -318,8 +320,10 @@ struct DilationBackpropInput<CPUDevice, T> {\\n                 }\\n               }\\n             }\\n-            in_backprop(b, h_in_max, w_in_max, d) +=\\n-                out_backprop(b, h_out, w_out, d);\\n+            if (h_in_max < input_rows && w_in_max < input_cols) {\\n+              in_backprop(b, h_in_max, w_in_max, d) +=\\n+                  out_backprop(b, h_out, w_out, d);\\n+            }\\n           }\\n         }\\n       }\\n@@ -349,6 +353,7 @@ class DilationBackpropFilterOp : public OpKernel {\\n     ParseSizes(context, strides_, rates_, padding_, &stride_rows, &stride_cols,\\n                &rate_rows, &rate_cols, &pad_top, &pad_left, &out_rows,\\n                &out_cols);\\n+    if (!context->status().ok()) return;\\n \\n     \/\/ Verify that the incoming gradient tensor has the expected size\\n     \/\/ [ batch, out_rows, out_cols, depth ]\\n@@ -438,8 +443,10 @@ struct DilationBackpropFilter<CPUDevice, T> {\\n                 }\\n               }\\n             }\\n-            filter_backprop(h_max, w_max, d) +=\\n-                out_backprop(b, h_out, w_out, d);\\n+            if (h_max < filter_rows && w_max < filter_cols) {\\n+              filter_backprop(h_max, w_max, d) +=\\n+                  out_backprop(b, h_out, w_out, d);\\n+            }\\n           }\\n         }\\n       }'}}",
            "message_norm":"add missing validations in dillation ops.\n\npiperorigin-revid: 372037158\nchange-id: i4ee304c84a02550c030288a6534000b934fc1599",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validations', 'SECWORD', ''), ('372037158', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/dilation_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":1698,
            "vuln_id":"GHSA-f8m6-h2c7-8h9x",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/nltk\/nltk\/commit\/1405aad979c6b8080dbbc8e0858f89b2e3690341'}",
            "dataset":"osv",
            "summary":"Inefficient Regular Expression Complexity in nltk (word_tokenize, sent_tokenize) ### Impact\nThe vulnerability is present in [`PunktSentenceTokenizer`](https:\/\/www.nltk.org\/api\/nltk.tokenize.punkt.html#nltk.tokenize.punkt.PunktSentenceTokenizer), [`sent_tokenize`](https:\/\/www.nltk.org\/api\/nltk.tokenize.html#nltk.tokenize.sent_tokenize)  and [`word_tokenize`](https:\/\/www.nltk.org\/api\/nltk.tokenize.html#nltk.tokenize.word_tokenize). Any users of this class, or these two functions, are vulnerable to a Regular Expression Denial of Service (ReDoS) attack. \nIn short, a specifically crafted long input to any of these vulnerable functions will cause them to take a significant amount of execution time. The effect of this vulnerability is noticeable with the following example:\n```python\nfrom nltk.tokenize import word_tokenize\n\nn = 8\nfor length in [10**i for i in range(2, n)]:\n    # Prepare a malicious input\n    text = \"a\" * length\n    start_t = time.time()\n    # Call `word_tokenize` and naively measure the execution time\n    word_tokenize(text)\n    print(f\"A length of {length:<{n}} takes {time.time() - start_t:.4f}s\")\n```\nWhich gave the following output during testing:\n```python\nA length of 100      takes 0.0060s\nA length of 1000     takes 0.0060s\nA length of 10000    takes 0.6320s\nA length of 100000   takes 56.3322s\n...\n```\nI canceled the execution of the program after running it for several hours.\n\nIf your program relies on any of the vulnerable functions for tokenizing unpredictable user input, then we would strongly recommend upgrading to a version of NLTK without the vulnerability, or applying the workaround described below.\n\n### Patches\nThe problem has been patched in NLTK 3.6.6. After the fix, running the above program gives the following result:\n```python\nA length of 100      takes 0.0070s\nA length of 1000     takes 0.0010s\nA length of 10000    takes 0.0060s\nA length of 100000   takes 0.0400s\nA length of 1000000  takes 0.3520s\nA length of 10000000 takes 3.4641s\n```\nThis output shows a linear relationship in execution time versus input length, which is desirable for regular expressions.\nWe recommend updating to NLTK 3.6.6+ if possible.\n\n### Workarounds\nThe execution time of the vulnerable functions is exponential to the length of a malicious input. With other words, the execution time can be bounded by limiting the maximum length of an input to any of the vulnerable functions. Our recommendation is to implement such a limit.\n\n### References\n* The issue showcasing the vulnerability: https:\/\/github.com\/nltk\/nltk\/issues\/2866\n* The pull request containing considerably more information on the vulnerability, and the fix: https:\/\/github.com\/nltk\/nltk\/pull\/2869\n* The commit containing the fix: 1405aad979c6b8080dbbc8e0858f89b2e3690341\n* Information on CWE-1333: Inefficient Regular Expression Complexity: https:\/\/cwe.mitre.org\/data\/definitions\/1333.html\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com\/nltk\/nltk](https:\/\/github.com\/nltk\/nltk)\n* Email us at [nltk.team@gmail.com](mailto:nltk.team@gmail.com)",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/nltk\/nltk",
            "commit_href":"https:\/\/github.com\/nltk\/nltk\/commit\/1405aad979c6b8080dbbc8e0858f89b2e3690341",
            "commit_sha":"1405aad979c6b8080dbbc8e0858f89b2e3690341",
            "patch":"SINGLE",
            "chain_ord":"['1405aad979c6b8080dbbc8e0858f89b2e3690341']",
            "before_first_fix_commit":"{'0b7b076247ec41f9b6b8a94400d48ea299e4b507'}",
            "last_fix_commit":"1405aad979c6b8080dbbc8e0858f89b2e3690341",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/26\/2021, 11:58:19",
            "message":"Resolved serious ReDoS in PunktSentenceTokenizer (#2869)\n\n* Resolved serious ReDOS in PunktSentenceTokenizer\r\n\r\n* Improve performance by relying on string split instead of re.search\r\n\r\n* Solved issue if sentence contains just one token",
            "author":"Tom Aarsen",
            "comments":null,
            "stats":"{'additions': 61, 'deletions': 5, 'total': 66}",
            "files":"{'nltk\/tokenize\/punkt.py': {'additions': 61, 'deletions': 5, 'changes': 66, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nltk\/nltk\/raw\/1405aad979c6b8080dbbc8e0858f89b2e3690341\/nltk%2Ftokenize%2Fpunkt.py', 'patch': '@@ -266,7 +266,6 @@ def word_tokenize(self, s):\\n         return self._word_tokenizer_re().findall(s)\\n \\n     _period_context_fmt = r\"\"\"\\n-        \\\\S*                          # some word material\\n         %(SentEndChars)s             # a potential sentence ending\\n         (?=(?P<after_tok>\\n             %(NonWord)s              # either other punctuation\\n@@ -1284,8 +1283,7 @@ def debug_decisions(self, text):\\n         See format_debug_decision() to help make this output readable.\\n         \"\"\"\\n \\n-        for match in self._lang_vars.period_context_re().finditer(text):\\n-            decision_text = match.group() + match.group(\"after_tok\")\\n+        for match, decision_text in self._match_potential_end_contexts(text):\\n             tokens = self._tokenize_words(decision_text)\\n             tokens = list(self._annotate_first_pass(tokens))\\n             while tokens and not tokens[0].tok.endswith(self._lang_vars.sent_end_chars):\\n@@ -1333,10 +1331,68 @@ def sentences_from_text(self, text, realign_boundaries=True):\\n         \"\"\"\\n         return [text[s:e] for s, e in self.span_tokenize(text, realign_boundaries)]\\n \\n+    def _match_potential_end_contexts(self, text):\\n+        \"\"\"\\n+        Given a text, find the matches of potential sentence breaks,\\n+        alongside the contexts surrounding these sentence breaks.\\n+\\n+        Since the fix for the ReDOS discovered in issue #2866, we no longer match\\n+        the word before a potential end of sentence token. Instead, we use a separate\\n+        regex for this. As a consequence, `finditer`\\'s desire to find non-overlapping\\n+        matches no longer aids us in finding the single longest match.\\n+        Where previously, we could use::\\n+\\n+            >>> pst = PunktSentenceTokenizer()\\n+            >>> text = \"Very bad acting!!! I promise.\"\\n+            >>> list(pst._lang_vars.period_context_re().finditer(text)) # doctest: +SKIP\\n+            [<re.Match object; span=(9, 18), match=\\'acting!!!\\'>]\\n+\\n+        Now we have to find the word before (i.e. \\'acting\\') separately, and `finditer`\\n+        returns::\\n+\\n+            >>> pst = PunktSentenceTokenizer()\\n+            >>> text = \"Very bad acting!!! I promise.\"\\n+            >>> list(pst._lang_vars.period_context_re().finditer(text)) # doctest: +NORMALIZE_WHITESPACE\\n+            [<re.Match object; span=(15, 16), match=\\'!\\'>,\\n+            <re.Match object; span=(16, 17), match=\\'!\\'>,\\n+            <re.Match object; span=(17, 18), match=\\'!\\'>]\\n+\\n+        So, we need to find the word before the match from right to left, and then manually remove\\n+        the overlaps. That is what this method does::\\n+\\n+            >>> pst = PunktSentenceTokenizer()\\n+            >>> text = \"Very bad acting!!! I promise.\"\\n+            >>> pst._match_potential_end_contexts(text)\\n+            [(<re.Match object; span=(17, 18), match=\\'!\\'>, \\'acting!!! I\\')]\\n+\\n+        :param text: String of one or more sentences\\n+        :type text: str\\n+        :return: List of match-context tuples.\\n+        :rtype: List[Tuple[re.Match, str]]\\n+        \"\"\"\\n+        before_words = {}\\n+        matches = []\\n+        for match in reversed(list(self._lang_vars.period_context_re().finditer(text))):\\n+            # Ignore matches that have already been captured by matches to the right of this match\\n+            if matches and match.end() > before_start:\\n+                continue\\n+            # Find the word before the current match\\n+            split = text[: match.start()].rsplit(maxsplit=1)\\n+            before_start = len(split[0]) if len(split) == 2 else 0\\n+            before_words[match] = split[-1]\\n+            matches.append(match)\\n+\\n+        return [\\n+            (\\n+                match,\\n+                before_words[match] + match.group() + match.group(\"after_tok\"),\\n+            )\\n+            for match in matches[::-1]\\n+        ]\\n+\\n     def _slices_from_text(self, text):\\n         last_break = 0\\n-        for match in self._lang_vars.period_context_re().finditer(text):\\n-            context = match.group() + match.group(\"after_tok\")\\n+        for match, context in self._match_potential_end_contexts(text):\\n             if self.text_contains_sentbreak(context):\\n                 yield slice(last_break, match.end())\\n                 if match.group(\"next_tok\"):'}}",
            "message_norm":"resolved serious redos in punktsentencetokenizer (#2869)\n\n* resolved serious redos in punktsentencetokenizer\r\n\r\n* improve performance by relying on string split instead of re.search\r\n\r\n* solved issue if sentence contains just one token",
            "language":"en",
            "entities":"[('redos', 'SECWORD', ''), ('#2869', 'ISSUE', ''), ('redos', 'SECWORD', ''), ('improve', 'ACTION', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['nltk\/tokenize\/punkt.py'])",
            "num_files":1.0
        },
        {
            "index":839,
            "vuln_id":"GHSA-6gv8-p3vj-pxvr",
            "cwe_id":"{'CWE-476'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `UncompressElement` ### Impact\nThe code for `tf.raw_ops.UncompressElement` can be made to trigger a null pointer dereference: \n\n```python\nimport tensorflow as tf\n\ndata = tf.data.Dataset.from_tensors([0.0])\ntf.raw_ops.UncompressElement(\n  compressed=tf.data.experimental.to_variant(data),\n  output_types=[tf.int64],\n  output_shapes=[2])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc#L50-L53) obtains a pointer to a `CompressedElement` from a `Variant` tensor and then proceeds to dereference it for decompressing. There is no check that the `Variant` tensor contained a `CompressedElement`, so the pointer is actually `nullptr`.\n\n### Patches\nWe have patched the issue in GitHub commit [7bdf50bb4f5c54a4997c379092888546c97c3ebd](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/7bdf50bb4f5c54a4997c379092888546c97c3ebd",
            "commit_sha":"7bdf50bb4f5c54a4997c379092888546c97c3ebd",
            "patch":"SINGLE",
            "chain_ord":"['7bdf50bb4f5c54a4997c379092888546c97c3ebd']",
            "before_first_fix_commit":"{'a21a1226a1dbc08e257e4344324d5881fbd95d4e'}",
            "last_fix_commit":"7bdf50bb4f5c54a4997c379092888546c97c3ebd",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2021, 00:45:15",
            "message":"Ensure non-empty compressed input in tf.raw_ops.UncompressElement\n\nPiperOrigin-RevId: 383955815\nChange-Id: I072a84fd02738dd2f51b3f42836ed80067dba4a8",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/7bdf50bb4f5c54a4997c379092888546c97c3ebd\/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fcompression_ops.cc', 'patch': '@@ -48,6 +48,11 @@ void UncompressElementOp::Compute(OpKernelContext* ctx) {\\n   Tensor tensor = ctx->input(0);\\n   const Variant& variant = tensor.scalar<Variant>()();\\n   const CompressedElement* compressed = variant.get<CompressedElement>();\\n+  OP_REQUIRES(\\n+      ctx, compressed != nullptr,\\n+      errors::InvalidArgument(\\n+          \"Input does not contain a compressed element. Instead got tensor \",\\n+          tensor.DebugString()));\\n \\n   std::vector<Tensor> components;\\n   OP_REQUIRES_OK(ctx, UncompressElement(*compressed, &components));'}}",
            "message_norm":"ensure non-empty compressed input in tf.raw_ops.uncompresselement\n\npiperorigin-revid: 383955815\nchange-id: i072a84fd02738dd2f51b3f42836ed80067dba4a8",
            "language":"en",
            "entities":"[('ensure', 'ACTION', ''), ('compressed', 'SECWORD', ''), ('tf.raw_ops.uncompresselement', 'SECWORD', ''), ('383955815', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/data\/experimental\/compression_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":368,
            "vuln_id":"GHSA-468q-v4jj-485h",
            "cwe_id":"{'CWE-1333'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/nervjs\/taro\/commit\/acadb6c826ba57f2030a626f1de4f7b4608fcdb5'}",
            "dataset":"osv",
            "summary":"Inefficient Regular Expression Complexity in taro taro is vulnerable to Inefficient Regular Expression Complexity",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/nervjs\/taro",
            "commit_href":"https:\/\/github.com\/nervjs\/taro\/commit\/acadb6c826ba57f2030a626f1de4f7b4608fcdb5",
            "commit_sha":"acadb6c826ba57f2030a626f1de4f7b4608fcdb5",
            "patch":"SINGLE",
            "chain_ord":"['acadb6c826ba57f2030a626f1de4f7b4608fcdb5']",
            "before_first_fix_commit":"{'51a672907177558f20d664e7c196fdb0bff41c75'}",
            "last_fix_commit":"acadb6c826ba57f2030a626f1de4f7b4608fcdb5",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/02\/2021, 14:08:46",
            "message":"Security fix for ReDoS\n\nFixed Regular Expression Denial of Service vulnerability in url validation",
            "author":"ready-research",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'packages\/taro-helper\/src\/constants.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NervJS\/taro\/raw\/acadb6c826ba57f2030a626f1de4f7b4608fcdb5\/packages%2Ftaro-helper%2Fsrc%2Fconstants.ts', 'patch': '@@ -104,7 +104,7 @@ export const REG_JSON = \/\\\\.json(\\\\?.*)?$\/\\n export const REG_UX = \/\\\\.ux(\\\\?.*)?$\/\\n export const REG_TEMPLATE = \/\\\\.(wxml|axml|ttml|qml|swan|jxml)(\\\\?.*)?$\/\\n export const REG_WXML_IMPORT = \/<import(.*)?src=(?:(?:\\'([^\\']*)\\')|(?:\"([^\"]*)\"))\/gi\\n-export const REG_URL = \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/i\\n+export const REG_URL = \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)+(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?))(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/i\\n export const CSS_IMPORT_REG = \/@import ([\"\\'])(.+?)\\\\1;\/g\\n \\n export const NODE_MODULES = \\'node_modules\\''}}",
            "message_norm":"security fix for redos\n\nfixed regular expression denial of service vulnerability in url validation",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('redos', 'SECWORD', ''), ('fixed', 'ACTION', ''), ('denial of service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('url validation', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/taro-helper\/src\/constants.ts'])",
            "num_files":1.0
        },
        {
            "index":2198,
            "vuln_id":"GHSA-j6p2-cx3w-6jcp",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jashkenas\/backbone\/commit\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in backbone Affected versions of `backbone` are vulnerable to cross-site scripting when users are allowed to supply input to the `Model#Escape` function, and the output is then written to the DOM. \n\nThe vulnerability occurs as a result of the regular expression used to encode metacharacters failing to take HTML Entities such as `&#60;` into account.\n\n\n## Recommendation\n\nUpdate to version 0.5.0 or later.",
            "published_date":"2019-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/jashkenas\/backbone",
            "commit_href":"https:\/\/github.com\/jashkenas\/backbone\/commit\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
            "commit_sha":"0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
            "patch":"SINGLE",
            "chain_ord":"['0cdc525961d3fa98e810ffae6bcc8e3838e36d93']",
            "before_first_fix_commit":"{'7216d993502da2e312fc53f4e8edc8b534c25042'}",
            "last_fix_commit":"0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/01\/2011, 21:12:24",
            "message":"Fixed escapeHTML function\nto skip not only &***;, but also &#***; and &x***;",
            "author":"Dmitry Baranovskiy",
            "comments":"{'com_1': {'author': 'alanhogan', 'datetime': '03\/06\/2011, 02:31:15', 'body': 'What are your thoughts on escaping single quotes?\\n\\nUsing single quotes around attribute values is less common than double quotes, but is certainly done:\\n\\n```\\n<p id=\\'foo\\'>\u2026<\/p>\\n```\\n\\nThis can lead to XSS just as unescaped double-quotes can:\\n\\n```\\nvar attack = \" \\' onmouseover=\\'alert(1);\\' foo=\\' \";\\nvar html = \"<p data-user-input=\\'\"+escapeHTML(attack)+\"\\'>Foo<\/p>\";\\ndocument.write(html);\\n```\\n\\nIMO, single quotes really ought to be escaped, as well.'}, 'com_2': {'author': 'alanhogan', 'datetime': '03\/06\/2011, 02:37:31', 'body': 'Demo of attack on jsfiddle: http:\/\/jsfiddle.net\/wEzNJ\/'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'backbone.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jashkenas\/backbone\/raw\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93\/backbone.js', 'patch': '@@ -1079,7 +1079,7 @@\\n \\n   \/\/ Helper function to escape a string for HTML rendering.\\n   var escapeHTML = function(string) {\\n-    return string.replace(\/&(?!\\\\w+;)\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n+    return string.replace(\/&(?!\\\\w+;|#\\\\d+;|#x[\\\\da-f]+;)\/gi, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n   };\\n \\n }).call(this);'}}",
            "message_norm":"fixed escapehtml function\nto skip not only &***;, but also &#***; and &x***;",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('escapehtml', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['backbone.js'])",
            "num_files":1.0
        },
        {
            "index":2873,
            "vuln_id":"GHSA-r626-fc64-3q28",
            "cwe_id":"{'CWE-362', 'CWE-119'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/SonicFrog\/abox\/commit\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d'}",
            "dataset":"osv",
            "summary":"Data race in abox An issue was discovered in the abox crate before 0.4.1 for Rust. \n\nAffected versions of this crate implements `Send`\/`Sync` for `AtomicBox<T>` without requiring `T: Send`\/`T: Sync`. This allows to create data races to `T: !Sync` and send `T: !Send` to another thread.\n\nSuch behavior breaks the compile-time thread safety guarantees of Rust, and allows users to incur undefined behavior using safe Rust (e.g. memory corruption from data race).\n\nThe flaw was corrected in commit 34c2b9e by adding trait bound `T: Send` to `Send` impl for `AtomicBox<T>` and trait bound `T: Sync` to `Sync` impl for `AtomicBox<T>`.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/SonicFrog\/abox",
            "commit_href":"https:\/\/github.com\/SonicFrog\/abox\/commit\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d",
            "commit_sha":"34c2b9e51cd7b85a3366104092ca4e5e9fab227d",
            "patch":"SINGLE",
            "chain_ord":"['34c2b9e51cd7b85a3366104092ca4e5e9fab227d']",
            "before_first_fix_commit":"{'5abe75222bc49af6b62ea37f87d7be0c56973310'}",
            "last_fix_commit":"34c2b9e51cd7b85a3366104092ca4e5e9fab227d",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/23\/2021, 02:40:32",
            "message":"send\/sync fix to prevent misuse",
            "author":"JOE1994",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SonicFrog\/abox\/raw\/34c2b9e51cd7b85a3366104092ca4e5e9fab227d\/src%2Flib.rs', 'patch': '@@ -89,8 +89,8 @@ impl<T: Sized> Drop for AtomicBox<T> {\\n     }\\n }\\n \\n-unsafe impl<T: Sized> Sync for AtomicBox<T> {}\\n-unsafe impl<T: Sized> Send for AtomicBox<T> {}\\n+unsafe impl<T: Sized + Sync> Sync for AtomicBox<T> {}\\n+unsafe impl<T: Sized + Send> Send for AtomicBox<T> {}\\n \\n #[cfg(test)]\\n mod tests {'}}",
            "message_norm":"send\/sync fix to prevent misuse",
            "language":"en",
            "entities":"[('prevent', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0
        },
        {
            "index":1762,
            "vuln_id":"GHSA-fq6p-x6j3-cmmq",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/mrdoob\/three.js\/pull\/21143\/commits\/4a582355216b620176a291ff319d740e619d583e'}",
            "dataset":"osv",
            "summary":"Denial of service in three This affects the package three before 0.125.0. This can happen when handling rgb or hsl colors. PoC: var three = require('three') function build_blank (n) { var ret = \"rgb(\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"\"; } var Color = three.Color var time = Date.now(); new Color(build_blank(50000)) var time_cost = Date.now() - time; console.log(time_cost+\" ms\")",
            "published_date":"2021-03-01",
            "chain_len":1,
            "project":"https:\/\/github.com\/mrdoob\/three.js",
            "commit_href":"https:\/\/github.com\/mrdoob\/three.js\/pull\/21143\/commits\/4a582355216b620176a291ff319d740e619d583e",
            "commit_sha":"4a582355216b620176a291ff319d740e619d583e",
            "patch":"SINGLE",
            "chain_ord":"['4a582355216b620176a291ff319d740e619d583e']",
            "before_first_fix_commit":"{'0f5de4f5da1014f81c00d309f93b1a1e709341e4'}",
            "last_fix_commit":"4a582355216b620176a291ff319d740e619d583e",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/25\/2021, 11:45:42",
            "message":"Fix ReDoS",
            "author":"Yeting Li",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'src\/math\/Color.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mrdoob\/three.js\/raw\/4a582355216b620176a291ff319d740e619d583e\/src%2Fmath%2FColor.js', 'patch': \"@@ -169,14 +169,14 @@ class Color {\\n \\n \\t\\t\\tlet color;\\n \\t\\t\\tconst name = m[ 1 ];\\n-\\t\\t\\tconst components = m[ 2 ].replace(\/^\\\\s*\/, '');\\n+\\t\\t\\tconst components = m[ 2 ];\\n \\n \\t\\t\\tswitch ( name ) {\\n \\n \\t\\t\\t\\tcase 'rgb':\\n \\t\\t\\t\\tcase 'rgba':\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ rgb(255,0,0) rgba(255,0,0,0.5)\\n \\t\\t\\t\\t\\t\\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) \/ 255;\\n@@ -189,7 +189,7 @@ class Color {\\n \\n \\t\\t\\t\\t\\t}\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\\n \\t\\t\\t\\t\\t\\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) \/ 100;\\n@@ -207,7 +207,7 @@ class Color {\\n \\t\\t\\t\\tcase 'hsl':\\n \\t\\t\\t\\tcase 'hsla':\\n \\n-\\t\\t\\t\\t\\tif ( color = \/^(\\\\d*\\\\.?\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n+\\t\\t\\t\\t\\tif ( color = \/^\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*,\\\\s*(\\\\d+)\\\\%\\\\s*(?:,\\\\s*(\\\\d*\\\\.?\\\\d+)\\\\s*)?$\/.exec( components ) ) {\\n \\n \\t\\t\\t\\t\\t\\t\/\/ hsl(120,50%,50%) hsla(120,50%,50%,0.5)\\n \\t\\t\\t\\t\\t\\tconst h = parseFloat( color[ 1 ] ) \/ 360;\"}}",
            "message_norm":"fix redos",
            "language":"pt",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/math\/Color.js'])",
            "num_files":1.0
        },
        {
            "index":1032,
            "vuln_id":"GHSA-7ggw-h8pp-r95r",
            "cwe_id":"{'CWE-613'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/octobercms\/library\/commit\/642f597489e6f644d4bd9a0c267e864cabead024'}",
            "dataset":"osv",
            "summary":"Session ID not invalidated after logout ### Impact\nWhen logging out, the session ID was not invalidated. This is not a problem while the user is logged out, but as soon as the user logs back in the old session ID would be valid again; which means that anyone that gained access to the old session cookie would be able to act as the logged in user. This is not a major concern for the majority of cases, since it requires a malicious party gaining access to the session cookie in the first place, but nevertheless has been fixed.\n\n### Patches\nIssue has been patched in Build 472 (v1.0.472) and v1.1.2.\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/library\/commit\/642f597489e6f644d4bd9a0c267e864cabead024 to your installation manually if unable to upgrade to Build 472 or v1.1.2.\n\n### References\n- Reported by Anisio (Brazilian Information Security Analyst)\n- http:\/\/cve.circl.lu\/cve\/CVE-2021-3311\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"699\" alt=\"Screen Shot 2021-02-07 at 11 50 35 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/107180881-51eaf000-699f-11eb-8828-333128faf2a6.png\">",
            "published_date":"2021-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/library",
            "commit_href":"https:\/\/github.com\/octobercms\/library\/commit\/642f597489e6f644d4bd9a0c267e864cabead024",
            "commit_sha":"642f597489e6f644d4bd9a0c267e864cabead024",
            "patch":"SINGLE",
            "chain_ord":"['642f597489e6f644d4bd9a0c267e864cabead024']",
            "before_first_fix_commit":"{'e292d79ef2090f4d67a7d913d89c9d3597b0d334'}",
            "last_fix_commit":"642f597489e6f644d4bd9a0c267e864cabead024",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/30\/2021, 00:47:39",
            "message":"Invalidate the session ID to prevent reuse\n\n1. Good logs in\n2. Bad captures Good's session cookie\n3. Good logs out\n4. Session cookie no longer works\n5. Good logs in a second time\n6. ORIGINAL session cookie works (Bad is also signed in)",
            "author":"Samuel Georges",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/Auth\/Manager.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/library\/raw\/642f597489e6f644d4bd9a0c267e864cabead024\/src%2FAuth%2FManager.php', 'patch': '@@ -686,7 +686,7 @@ public function logout()\\n \\n         $this->user = null;\\n \\n-        Session::flush();\\n+        Session::invalidate();\\n         Cookie::queue(Cookie::forget($this->sessionKey));\\n     }'}}",
            "message_norm":"invalidate the session id to prevent reuse\n\n1. good logs in\n2. bad captures good's session cookie\n3. good logs out\n4. session cookie no longer works\n5. good logs in a second time\n6. original session cookie works (bad is also signed in)",
            "language":"en",
            "entities":"[('invalidate', 'ACTION', ''), ('prevent', 'ACTION', ''), ('cookie', 'SECWORD', ''), ('cookie', 'SECWORD', ''), ('cookie', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Auth\/Manager.php'])",
            "num_files":1.0
        },
        {
            "index":3071,
            "vuln_id":"GHSA-v7m9-9497-p9gr",
            "cwe_id":"{'CWE-863'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/jupyterhub\/kubespawner\/commit\/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0'}",
            "dataset":"osv",
            "summary":"Possible pod name collisions in jupyterhub-kubespawner ### Impact\n_What kind of vulnerability is it? Who is impacted?_\n\nJupyterHub deployments using:\n\n- KubeSpawner <= 0.11.1 (e.g. zero-to-jupyterhub 0.9.0) and\n- enabled named_servers (not default), and\n- an Authenticator that allows:\n  - usernames with hyphens or other characters that require escape (e.g. `user-hyphen` or `user@email`), and\n  - usernames which may match other usernames up to but not including the escaped character (e.g. `user` in the above cases)\n\nIn this circumstance, certain usernames will be able to craft particular server names which will grant them access to the default server of other users who have matching usernames.\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nPatch will be released in kubespawner 0.12 and zero-to-jupyterhub 0.9.1\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\n#### KubeSpawner\n\nSpecify configuration:\n\nfor KubeSpawner\n```python\nfrom traitlets import default\nfrom kubespawner import KubeSpawner\n\nclass PatchedKubeSpawner(KubeSpawner):\n    @default(\"pod_name_template\")\n    def _default_pod_name_template(self):\n        if self.name:\n            return \"jupyter-{username}-{servername}\"\n        else:\n            return \"jupyter-{username}\"\n\n    @default(\"pvc_name_template\")\n    def _default_pvc_name_template(self):\n        if self.name:\n            return \"claim-{username}-{servername}\"\n        else:\n            return \"claim-{username}\"\n\nc.JupyterHub.spawner_class = PatchedKubeSpawner\n```\n\n**Note for KubeSpawner:** this configuration will behave differently before and after the upgrade, so will need to be removed when upgrading. Only apply this configuration while still using KubeSpawner \u2264 0.11.1 and remove it after upgrade to ensure consistent pod and pvc naming.\n\nChanging the name template means pvcs for named servers will have different names. This will result in orphaned PVCs for named servers across Hub upgrade! This may appear as data loss for users, depending on configuration, but the orphaned PVCs will still be around and data can be migrated manually (or new PVCs created manually to reference existing PVs) before deleting the old PVCs and\/or PVs.\n\n### References\n_Are there any links users can visit to find out more?_\n\n### For more information\nIf you have any questions or comments about this advisory:\n\n* Open an issue in [kubespawner](https:\/\/github.com\/jupyterhub\/kubespawner)\n* Email us at [security@ipython.org](mailto:security@ipython.org)\n\nCredit: Jining Huang",
            "published_date":"2020-07-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/jupyterhub\/kubespawner",
            "commit_href":"https:\/\/github.com\/jupyterhub\/kubespawner\/commit\/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0",
            "commit_sha":"3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0",
            "patch":"SINGLE",
            "chain_ord":"['3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0']",
            "before_first_fix_commit":"{'b7f55eae3d5afb6ac9f2facf76f46239e2f2a38a'}",
            "last_fix_commit":"3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/03\/2020, 07:48:42",
            "message":"move delimiter to pvc\/pod name templates\n\nand note version change",
            "author":"Min RK",
            "comments":null,
            "stats":"{'additions': 28, 'deletions': 16, 'total': 44}",
            "files":"{'kubespawner\/spawner.py': {'additions': 28, 'deletions': 16, 'changes': 44, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jupyterhub\/kubespawner\/raw\/3dfe870a7f5e98e2e398b01996ca6b8eff4bb1d0\/kubespawner%2Fspawner.py', 'patch': '@@ -307,16 +307,25 @@ def _namespace_default(self):\\n     )\\n \\n     pod_name_template = Unicode(\\n-        \\'jupyter-{username}{servername}\\',\\n+        \\'jupyter-{username}--{servername}\\',\\n         config=True,\\n         help=\"\"\"\\n         Template to use to form the name of user\\'s pods.\\n \\n-        `{username}` is expanded to the escaped, dns-label safe username.\\n+        `{username}` is expanded to the escaped, dns-label-safe username.\\n+        `{servername}` is expanded to the escaped, dns-label-safe server name, if any.\\n+\\n+        Trailing `-` characters are stripped for safe handling of empty server names (user default servers).\\n \\n         This must be unique within the namespace the pods are being spawned\\n         in, so if you are running multiple jupyterhubs spawning in the\\n         same namespace, consider setting this to be something more unique.\\n+\\n+        .. versionchanged:: 0.12\\n+            `--` delimiter added to the template,\\n+            where it was implicitly added to the `servername` field before.\\n+            Additionally, `username--servername` delimiter was `-` instead of `--`,\\n+            allowing collisions in certain circumstances.\\n         \"\"\"\\n     )\\n \\n@@ -332,16 +341,25 @@ def _namespace_default(self):\\n     )\\n \\n     pvc_name_template = Unicode(\\n-        \\'claim-{username}{servername}\\',\\n+        \\'claim-{username}--{servername}\\',\\n         config=True,\\n         help=\"\"\"\\n         Template to use to form the name of user\\'s pvc.\\n \\n         `{username}` is expanded to the escaped, dns-label safe username.\\n+        `{servername}` is expanded to the escaped, dns-label-safe server name, if any.\\n+\\n+        Trailing `-` characters are stripped for safe handling of empty server names (user default servers).\\n \\n         This must be unique within the namespace the pvc are being spawned\\n         in, so if you are running multiple jupyterhubs spawning in the\\n         same namespace, consider setting this to be something more unique.\\n+\\n+        .. versionchanged:: 0.12\\n+            `--` delimiter added to the template,\\n+            where it was implicitly added to the `servername` field before.\\n+            Additionally, `username--servername` delimiter was `-` instead of `--`,\\n+            allowing collisions in certain circumstances.\\n         \"\"\"\\n     )\\n \\n@@ -1313,28 +1331,22 @@ def _expand_user_properties(self, template):\\n         # Note: \\'-\\' is not in safe_chars, as it is being used as escape character\\n         safe_chars = set(string.ascii_lowercase + string.digits)\\n \\n-        # Set servername based on whether named-server initialised\\n-        if self.name:\\n-            # use two -- to ensure no collision possibilities\\n-            # are created by an ambiguous boundary between username and\\n-            # servername.\\n-            # -- cannot occur in a string where - is the escape char.\\n-            servername = \\'--{}\\'.format(self.name)\\n-            safe_servername = \\'--{}\\'.format(escapism.escape(self.name, safe=safe_chars, escape_char=\\'-\\').lower())\\n-        else:\\n-            servername = \\'\\'\\n-            safe_servername = \\'\\'\\n+        raw_servername = self.name or \\'\\'\\n+        safe_servername = escapism.escape(raw_servername, safe=safe_chars, escape_char=\\'-\\').lower()\\n \\n         legacy_escaped_username = \\'\\'.join([s if s in safe_chars else \\'-\\' for s in self.user.name.lower()])\\n         safe_username = escapism.escape(self.user.name, safe=safe_chars, escape_char=\\'-\\').lower()\\n-        return template.format(\\n+        rendered = template.format(\\n             userid=self.user.id,\\n             username=safe_username,\\n             unescaped_username=self.user.name,\\n             legacy_escape_username=legacy_escaped_username,\\n             servername=safe_servername,\\n-            unescaped_servername=servername,\\n+            unescaped_servername=raw_servername,\\n         )\\n+        # strip trailing - delimiter in case of empty servername.\\n+        # k8s object names cannot have trailing -\\n+        return rendered.rstrip(\"-\")\\n \\n     def _expand_all(self, src):\\n         if isinstance(src, list):'}}",
            "message_norm":"move delimiter to pvc\/pod name templates\n\nand note version change",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['kubespawner\/spawner.py'])",
            "num_files":1.0
        },
        {
            "index":513,
            "vuln_id":"GHSA-4w97-57v2-3w44",
            "cwe_id":"{'CWE-697'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7'}",
            "dataset":"osv",
            "summary":"False-negative validation results in MINT transactions with invalid baton ### Impact\nUsers could experience false-negative validation outcomes for [MINT](https:\/\/github.com\/simpleledger\/slp-specifications\/blob\/master\/slp-token-type-1.md#mint---extended-minting-transaction) transaction operations.  A poorly implemented SLP wallet could allow spending of the affected tokens which would result in the destruction of a user's minting baton.\n\n### Patches\nnpm package [slp-validate](https:\/\/www.npmjs.com\/package\/slp-validate) has been patched and published as version 1.2.1.\n\n### Workarounds\nUpgrade to slp-validate 1.2.1.\n\n### References\n* slp-validate [commit](https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [slp-validate](https:\/\/github.com\/simpleledger\/slp-validate\/issues)",
            "published_date":"2020-05-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/simpleledger\/slp-validate",
            "commit_href":"https:\/\/github.com\/simpleledger\/slp-validate\/commit\/cde95c0c6470dceb4f023cd462f904135ebd73e7",
            "commit_sha":"cde95c0c6470dceb4f023cd462f904135ebd73e7",
            "patch":"SINGLE",
            "chain_ord":"['cde95c0c6470dceb4f023cd462f904135ebd73e7']",
            "before_first_fix_commit":"{'4ca5ea8556bfacdaa6c81f0c3151a23e728cb8b6'}",
            "last_fix_commit":"cde95c0c6470dceb4f023cd462f904135ebd73e7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2020, 13:52:56",
            "message":"fix false negative case for MINT transactions\n\nSee the newly added unit test case for this issue.\nCurrently there are 151 unit tests.",
            "author":"James Cramer",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 6, 'total': 16}",
            "files":"{'lib\/validation.ts': {'additions': 10, 'deletions': 6, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/simpleledger\/slp-validate.js\/raw\/cde95c0c6470dceb4f023cd462f904135ebd73e7\/lib%2Fvalidation.ts', 'patch': '@@ -408,10 +408,10 @@ export class ValidatorType1 {\\n                     }\\n                 } catch (_) { }\\n             }\\n-            if (validation.parents.length !== 1) {\\n+            if (validation.parents.length < 1) {\\n                 validation.validity = false;\\n                 validation.waiting = false;\\n-                validation.invalidReason = \"MINT transaction must have 1 valid baton parent.\";\\n+                validation.invalidReason = \"MINT transaction must have at least 1 candidate baton parent input.\";\\n                 return validation.validity!;\\n             }\\n         } else if (slpmsg.transactionType === SlpTransactionType.SEND) {\\n@@ -468,10 +468,14 @@ export class ValidatorType1 {\\n         \/\/ Set validity validation-cache for parents, and handle MINT condition with no valid input\\n         \/\/ we don\\'t need to check proper token id since we only added parents with same ID in above steps.\\n         const parentTxids = [...new Set(validation.parents.map(p => p.txid))];\\n-        for (let i = 0; i < parentTxids.length; i++) {\\n-            const valid = await this.isValidSlpTxid({ txid: parentTxids[i] });\\n-            validation.parents.filter(p => p.txid === parentTxids[i]).map(p => p.valid = valid);\\n-            if (validation.details!.transactionType === SlpTransactionType.MINT && !valid) {\\n+        for (const id of parentTxids) {\\n+            const valid = await this.isValidSlpTxid({ txid: id });\\n+            validation.parents.filter(p => p.txid === id).map(p => p.valid = valid);\\n+        }\\n+\\n+        \/\/ Check MINT for exactly 1 valid MINT baton\\n+        if (validation.details!.transactionType === SlpTransactionType.MINT) {\\n+            if (validation.parents.filter(p => p.valid && p.inputQty === null).length !== 1) {\\n                 validation.validity = false;\\n                 validation.waiting = false;\\n                 validation.invalidReason = \"MINT transaction with invalid baton parent.\";'}}",
            "message_norm":"fix false negative case for mint transactions\n\nsee the newly added unit test case for this issue.\ncurrently there are 151 unit tests.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('added', 'ACTION', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/validation.ts'])",
            "num_files":1.0
        },
        {
            "index":1792,
            "vuln_id":"GHSA-fx7m-j728-mjw3",
            "cwe_id":"{'CWE-185'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/ua-parser\/uap-core\/commit\/010ccdc7303546cd22b9da687c29f4a996990014', 'https:\/\/github.com\/ua-parser\/uap-core\/commit\/156f7e12b215bddbaf3df4514c399d683e6cdadc'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects uap-core An issue was discovered in regex.yaml (aka regexes.yaml) in UA-Parser UAP-Core before 0.6.0. A Regular Expression Denial of Service (ReDoS) issue allows remote attackers to overload a server by setting the User-Agent header in an HTTP(S) request to a value containing a long digit string. (The UAP-Core project contains the vulnerability, propagating to all implementations.)",
            "published_date":"2019-03-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/ua-parser\/uap-core",
            "commit_href":"https:\/\/github.com\/ua-parser\/uap-core\/commit\/010ccdc7303546cd22b9da687c29f4a996990014",
            "commit_sha":"010ccdc7303546cd22b9da687c29f4a996990014",
            "patch":"MULTI",
            "chain_ord":"['156f7e12b215bddbaf3df4514c399d683e6cdadc', '010ccdc7303546cd22b9da687c29f4a996990014']",
            "before_first_fix_commit":"{'764947f552c6fc9ac80759acb5165a83ee746678'}",
            "last_fix_commit":"010ccdc7303546cd22b9da687c29f4a996990014",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/14\/2018, 07:19:47",
            "message":"0.6.0",
            "author":"commenthol",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ua-parser\/uap-core\/raw\/010ccdc7303546cd22b9da687c29f4a996990014\/package.json', 'patch': '@@ -1,7 +1,7 @@\\n {\\n   \"name\": \"uap-core\",\\n   \"description\": \"The regex file necessary to build language ports of Browserscope\\'s user agent parser.\",\\n-  \"version\": \"0.5.0\",\\n+  \"version\": \"0.6.0\",\\n   \"maintainers\": [\\n     {\\n       \"name\": \"Tobie Langel\",'}}",
            "message_norm":"0.6.0",
            "language":"",
            "entities":"[('0.6.0', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['package.json'])",
            "num_files":1.0
        },
        {
            "index":3262,
            "vuln_id":"GHSA-wcm2-9c89-wmfm",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jquery\/jquery-ui\/commit\/7e9060c109b928769a664dbcc2c17bd21231b6f3'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in jquery-ui Cross-site scripting (XSS) vulnerability in jquery.ui.dialog.js in the Dialog widget in jQuery UI before 1.10.0 allows remote attackers to inject arbitrary web script or HTML via the title option.",
            "published_date":"2017-10-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/jquery\/jquery-ui",
            "commit_href":"https:\/\/github.com\/jquery\/jquery-ui\/commit\/7e9060c109b928769a664dbcc2c17bd21231b6f3",
            "commit_sha":"7e9060c109b928769a664dbcc2c17bd21231b6f3",
            "patch":"SINGLE",
            "chain_ord":"['7e9060c109b928769a664dbcc2c17bd21231b6f3']",
            "before_first_fix_commit":"{'60486ac632a0a1bbbb0c7449fe17bccfae11af80'}",
            "last_fix_commit":"7e9060c109b928769a664dbcc2c17bd21231b6f3",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/26\/2012, 09:14:36",
            "message":"Dialog: Extract setting the title into a _title method, use .text() to prevent XSS. Fixes #6016 - Dialog: Title XSS Vulnerability.",
            "author":"J\u00f6rn Zaefferer",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 4, 'total': 13}",
            "files":"{'ui\/jquery.ui.dialog.js': {'additions': 9, 'deletions': 4, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jquery\/jquery-ui\/raw\/7e9060c109b928769a664dbcc2c17bd21231b6f3\/ui%2Fjquery.ui.dialog.js', 'patch': '@@ -352,14 +352,21 @@ $.widget(\"ui.dialog\", {\\n \\t\\tuiDialogTitle = $( \"<span>\" )\\n \\t\\t\\t.uniqueId()\\n \\t\\t\\t.addClass( \"ui-dialog-title\" )\\n-\\t\\t\\t.html( this.options.title || \"&#160;\" )\\n \\t\\t\\t.prependTo( this.uiDialogTitlebar );\\n+\\t\\tthis._title( uiDialogTitle );\\n \\n \\t\\tthis.uiDialog.attr({\\n \\t\\t\\t\"aria-labelledby\": uiDialogTitle.attr( \"id\" )\\n \\t\\t});\\n \\t},\\n \\n+\\t_title: function( title ) {\\n+\\t\\tif ( !this.options.title ) {\\n+\\t\\t\\ttitle.html( \"&#160;\" );\\n+\\t\\t}\\n+\\t\\ttitle.text( this.options.title );\\n+\\t},\\n+\\n \\t_createButtonPane: function() {\\n \\t\\tvar uiDialogButtonPane = ( this.uiDialogButtonPane = $( \"<div>\" ) )\\n \\t\\t\\t.addClass( \"ui-dialog-buttonpane ui-widget-content ui-helper-clearfix\" );\\n@@ -600,9 +607,7 @@ $.widget(\"ui.dialog\", {\\n \\t\\t}\\n \\n \\t\\tif ( key === \"title\" ) {\\n-\\t\\t\\t\/\/ convert whatever was passed in to a string, for html() to not throw up\\n-\\t\\t\\t$( \".ui-dialog-title\", this.uiDialogTitlebar )\\n-\\t\\t\\t\\t.html( \"\" + ( value || \"&#160;\" ) );\\n+\\t\\t\\tthis._title( this.uiDialogTitlebar.find( \".ui-dialog-title\" ) );\\n \\t\\t}\\n \\t},'}}",
            "message_norm":"dialog: extract setting the title into a _title method, use .text() to prevent xss. fixes #6016 - dialog: title xss vulnerability.",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('xss', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#6016', 'ISSUE', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['ui\/jquery.ui.dialog.js'])",
            "num_files":1.0
        },
        {
            "index":2539,
            "vuln_id":"GHSA-p92x-r36w-9395",
            "cwe_id":"{'CWE-843'}",
            "score":5.6,
            "chain":"{'https:\/\/github.com\/aheckmann\/mpath\/commit\/89402d2880d4ea3518480a8c9847c541f2d824fc'}",
            "dataset":"osv",
            "summary":"Type confusion in mpath This affects the package mpath before 0.8.4. A type confusion vulnerability can lead to a bypass of CVE-2018-16490. In particular, the condition ignoreProperties.indexOf(parts[i]) !== -1 returns -1 if parts[i] is ['__proto__']. This is because the method that has been called if the input is an array is Array.prototype.indexOf() and not String.prototype.indexOf(). They behave differently depending on the type of the input.",
            "published_date":"2021-09-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/aheckmann\/mpath",
            "commit_href":"https:\/\/github.com\/aheckmann\/mpath\/commit\/89402d2880d4ea3518480a8c9847c541f2d824fc",
            "commit_sha":"89402d2880d4ea3518480a8c9847c541f2d824fc",
            "patch":"SINGLE",
            "chain_ord":"['89402d2880d4ea3518480a8c9847c541f2d824fc']",
            "before_first_fix_commit":"{'03c4efef8b25425476c1e0d7b6a0fb5adc18c0f9'}",
            "last_fix_commit":"89402d2880d4ea3518480a8c9847c541f2d824fc",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/01\/2021, 15:12:24",
            "message":"fix: throw error if `parts` contains an element that isn't a string or number\n\nFix #13",
            "author":"Valeri Karpov",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'lib\/index.js': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongoosejs\/mpath\/raw\/89402d2880d4ea3518480a8c9847c541f2d824fc\/lib%2Findex.js', 'patch': \"@@ -64,6 +64,9 @@ exports.get = function(path, o, special, map) {\\n \\n   for (var i = 0; i < parts.length; ++i) {\\n     part = parts[i];\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `get()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n \\n     if (Array.isArray(obj) && !\/^\\\\d+$\/.test(part)) {\\n       \/\/ reading a property from the array items\\n@@ -112,6 +115,9 @@ exports.has = function(path, o) {\\n   var len = parts.length;\\n   var cur = o;\\n   for (var i = 0; i < len; ++i) {\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `has()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\\n       return false;\\n     }\\n@@ -143,6 +149,9 @@ exports.unset = function(path, o) {\\n     if (cur == null || typeof cur !== 'object' || !(parts[i] in cur)) {\\n       return false;\\n     }\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `unset()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     \/\/ Disallow any updates to __proto__ or special properties.\\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\\n       return false;\\n@@ -193,6 +202,9 @@ exports.set = function(path, val, o, special, map, _copying) {\\n   if (null == o) return;\\n \\n   for (var i = 0; i < parts.length; ++i) {\\n+    if (typeof parts[i] !== 'string' && typeof parts[i] !== 'number') {\\n+      throw new TypeError('Each segment of path to `set()` must be a string or number, got ' + typeof parts[i]);\\n+    }\\n     \/\/ Silently ignore any updates to `__proto__`, these are potentially\\n     \/\/ dangerous if using mpath with unsanitized data.\\n     if (ignoreProperties.indexOf(parts[i]) !== -1) {\"}}",
            "message_norm":"fix: throw error if `parts` contains an element that isn't a string or number\n\nfix #13",
            "language":"en",
            "entities":"[('error', 'FLAW', ''), ('fix', 'ACTION', ''), ('#13', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/index.js'])",
            "num_files":1.0
        },
        {
            "index":1591,
            "vuln_id":"GHSA-cqp5-m4pq-gfgp",
            "cwe_id":"{'CWE-471'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jonschlinkert\/defaults-deep\/commit\/c873f341327ad885ff4d0f23b3d3bca31b0343e5'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in defaults-deep Versions of `default-deep` before 0.2.4 are vulnerable to prototype pollution\n\n\n## Recommendation\n\nUpdate to version 0.2.4 or later.",
            "published_date":"2018-07-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/jonschlinkert\/defaults-deep",
            "commit_href":"https:\/\/github.com\/jonschlinkert\/defaults-deep\/commit\/c873f341327ad885ff4d0f23b3d3bca31b0343e5",
            "commit_sha":"c873f341327ad885ff4d0f23b3d3bca31b0343e5",
            "patch":"SINGLE",
            "chain_ord":"['c873f341327ad885ff4d0f23b3d3bca31b0343e5']",
            "before_first_fix_commit":"{'aef804bf3e56484a6e463e35f5f74599523aee69'}",
            "last_fix_commit":"c873f341327ad885ff4d0f23b3d3bca31b0343e5",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2018, 16:52:35",
            "message":"exclude __proto__",
            "author":"doowb",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'index.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/defaults-deep\/raw\/c873f341327ad885ff4d0f23b3d3bca31b0343e5\/index.js', 'patch': \"@@ -16,6 +16,10 @@ function defaultsDeep(target, objects) {\\n \\n   function copy(target, current) {\\n     lazy.forOwn(current, function (value, key) {\\n+      if (key === '__proto__') {\\n+        return;\\n+      }\\n+\\n       var val = target[key];\\n       \/\/ add the missing property, or allow a null property to be updated\\n       if (val == null) {\"}}",
            "message_norm":"exclude __proto__",
            "language":"pt",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":3267,
            "vuln_id":"GHSA-wf5p-c75w-w3wh",
            "cwe_id":"{'CWE-476'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6b57f461b39fd1aa8c1b870f1b974aac3554955'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in TFLite MLIR optimizations ### Impact\nAn attacker can craft a TFLite model that would trigger a null pointer dereference, which would result in a crash and denial of service:\n\nThis is caused by the MLIR optimization of `L2NormalizeReduceAxis` operator. The [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/compiler\/mlir\/lite\/transforms\/optimize.cc#L67-L70) unconditionally dereferences a pointer to an iterator to a vector without checking that the vector has elements:\n\n```cc\nbool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {\n  if (sq_op.getType().cast<ShapedType>().getRank() - 1 ==\n          *axis.getValues<int>().begin() ||\n      *axis.getValues<int>().begin() == -1) {\n      \/\/ ...\n  }\n  \/\/ ...\n}\n```\n\n### Patches\nWe have patched the issue in GitHub commit [d6b57f461b39fd1aa8c1b870f1b974aac3554955](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6b57f461b39fd1aa8c1b870f1b974aac3554955).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n  \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n          \n### Attribution              \nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d6b57f461b39fd1aa8c1b870f1b974aac3554955",
            "commit_sha":"d6b57f461b39fd1aa8c1b870f1b974aac3554955",
            "patch":"SINGLE",
            "chain_ord":"['d6b57f461b39fd1aa8c1b870f1b974aac3554955']",
            "before_first_fix_commit":"{'c26b15e7565e4f50ad6ea25b09127a019ad77c14'}",
            "last_fix_commit":"d6b57f461b39fd1aa8c1b870f1b974aac3554955",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/27\/2021, 23:20:45",
            "message":"Prevent nullptr dereference in MLIR TFLite dialect\/optimizer.\n\nPiperOrigin-RevId: 387220762\nChange-Id: Id136ef04bb3d36123b4685d316ae81a9ec924d6b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/compiler\/mlir\/lite\/transforms\/optimize.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d6b57f461b39fd1aa8c1b870f1b974aac3554955\/tensorflow%2Fcompiler%2Fmlir%2Flite%2Ftransforms%2Foptimize.cc', 'patch': '@@ -68,6 +68,9 @@ constexpr char kRelu6[] = \"RELU6\";\\n constexpr char kRelu1[] = \"RELU_N1_TO_1\";\\n \\n bool L2NormalizeReduceAxis(Value sq_op, DenseElementsAttr axis) {\\n+  if (axis.getNumElements() == 0) {\\n+    return false;\\n+  }\\n   if (sq_op.getType().cast<ShapedType>().getRank() - 1 ==\\n           *axis.getValues<int>().begin() ||\\n       *axis.getValues<int>().begin() == -1) {'}}",
            "message_norm":"prevent nullptr dereference in mlir tflite dialect\/optimizer.\n\npiperorigin-revid: 387220762\nchange-id: id136ef04bb3d36123b4685d316ae81a9ec924d6b",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('387220762', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/compiler\/mlir\/lite\/transforms\/optimize.cc'])",
            "num_files":1.0
        },
        {
            "index":725,
            "vuln_id":"GHSA-5xwc-mrhx-5g3m",
            "cwe_id":"{'CWE-824'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09'}",
            "dataset":"osv",
            "summary":"Reference binding to nullptr in `MatrixDiagV*` ops ### Impact\nAn attacker can cause undefined behavior via binding a reference to null pointer in all operations of type `tf.raw_ops.MatrixDiagV*`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.MatrixDiagV3(\n  diagonal=[1,0],\n  k=[],\n  num_rows=[1,2,3],\n  num_cols=[4,5],\n  padding_value=[],\n  align='RIGHT_RIGHT')\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/84d053187cb80d975ef2b9684d4b61981bca0c41\/tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc) has incomplete validation that the value of `k` is a valid tensor. We have check that this value is either a scalar or a vector, but there is no check for the number of elements. If this is an empty tensor, then code that accesses the first element of the tensor is wrong:\n\n```cc\n  auto& diag_index = context->input(1);\n  ...\n  lower_diag_index = diag_index.flat<int32>()(0);\n```\n\n### Patches\nWe have patched the issue in GitHub commit [f2a673bd34f0d64b8e40a551ac78989d16daad09](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "commit_sha":"f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "patch":"SINGLE",
            "chain_ord":"['f2a673bd34f0d64b8e40a551ac78989d16daad09']",
            "before_first_fix_commit":"{'ff8894044dfae5568ecbf2ed514c1a37dc394f1b'}",
            "last_fix_commit":"f2a673bd34f0d64b8e40a551ac78989d16daad09",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 02:00:00",
            "message":"Add missing validation to `matrix_diag_op.cc`\n\nPiperOrigin-RevId: 387923533\nChange-Id: Idfffeb328d5f9c6748d992d28a56d6e9e45103a0",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f2a673bd34f0d64b8e40a551ac78989d16daad09\/tensorflow%2Fcore%2Fkernels%2Flinalg%2Fmatrix_diag_op.cc', 'patch': '@@ -73,6 +73,9 @@ class MatrixDiagPartOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {\\n@@ -179,6 +182,9 @@ class MatrixDiagOp : public OpKernel {\\n                   errors::InvalidArgument(\\n                       \"diag_index must be a scalar or vector, received shape: \",\\n                       diag_index.shape().DebugString()));\\n+      OP_REQUIRES(context, diag_index.NumElements() > 0,\\n+                  errors::InvalidArgument(\\n+                      \"Expected diag_index to have at least 1 element\"));\\n       lower_diag_index = diag_index.flat<int32>()(0);\\n       upper_diag_index = lower_diag_index;\\n       if (TensorShapeUtils::IsVector(diag_index.shape())) {'}}",
            "message_norm":"add missing validation to `matrix_diag_op.cc`\n\npiperorigin-revid: 387923533\nchange-id: idfffeb328d5f9c6748d992d28a56d6e9e45103a0",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('387923533', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/linalg\/matrix_diag_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3075,
            "vuln_id":"GHSA-v82p-hv3v-p6qp",
            "cwe_id":"{'CWE-20'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/203214568f5bc237603dbab6e1fd389f1572f5c9', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e62869465573cb2d9b5053f1fa02a81fce21d69'}",
            "dataset":"osv",
            "summary":"Incomplete validation in MKL requantization ### Impact\nDue to incomplete validation in MKL implementation of requantization, an  attacker can trigger undefined behavior via binding a reference to a null pointer or can access data outside the bounds of heap allocated arrays:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RequantizationRangePerChannel(\n  input=[],\n  input_min=[0,0,0,0,0],\n  input_max=[1,1,1,1,1],\n  clip_value_max=1)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/mkl\/mkl_requantization_range_per_channel_op.cc) does not validate the dimensions of the `input` tensor.\n\nA similar issue occurs in `MklRequantizePerChannelOp`:\n\n```python\nimport tensorflow as tf \nfrom tensorflow.python.ops import gen_math_ops\n\ngen_math_ops.requantize_per_channel(\n  input=[],\n  input_min=[-100,-100,-100,-100,-100],\n  input_max=[-100,-100,-100],\n  requested_output_min=[-100,-100,-100,-100,-100],\n  requested_output_max=[],\n  out_type=tf.int)\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/mkl\/mkl_requantize_per_channel_op.cc) does not perform full validation for all the input arguments.\n\n### Patches\nWe have patched the issue in GitHub commit [9e62869465573cb2d9b5053f1fa02a81fce21d69](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e62869465573cb2d9b5053f1fa02a81fce21d69) and in the Github commit [203214568f5bc237603dbab6e1fd389f1572f5c9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/203214568f5bc237603dbab6e1fd389f1572f5c9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9e62869465573cb2d9b5053f1fa02a81fce21d69",
            "commit_sha":"9e62869465573cb2d9b5053f1fa02a81fce21d69",
            "patch":"MULTI",
            "chain_ord":"['9e62869465573cb2d9b5053f1fa02a81fce21d69', '203214568f5bc237603dbab6e1fd389f1572f5c9']",
            "before_first_fix_commit":"{'aff0d5b2883ea3de9b52f9e7cd996a34b299bf06'}",
            "last_fix_commit":"203214568f5bc237603dbab6e1fd389f1572f5c9",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/29\/2021, 23:29:20",
            "message":"Add more validation to `RequantizationRangePerChannel`.\n\nPiperOrigin-RevId: 387693946\nChange-Id: Ife8dcbdb021bec4787eef6a4361dd08f17c14bd6",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 0, 'total': 14}",
            "files":"{'tensorflow\/core\/kernels\/mkl\/mkl_requantization_range_per_channel_op.cc': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9e62869465573cb2d9b5053f1fa02a81fce21d69\/tensorflow%2Fcore%2Fkernels%2Fmkl%2Fmkl_requantization_range_per_channel_op.cc', 'patch': '@@ -57,6 +57,20 @@ class MklRequantizationRangePerChannelOp : public OpKernel {\\n         ctx, input_max.dim_size(0) == depth,\\n         errors::InvalidArgument(\"input_max has incorrect size, expected \",\\n                                 depth, \" was \", input_max.dim_size(0)));\\n+    OP_REQUIRES(\\n+        ctx, input_min.NumElements() == depth,\\n+        errors::InvalidArgument(\"input_min must have the same number of \"\\n+                                \"elements as input_max, got \",\\n+                                input_min.NumElements(), \" and \", depth));\\n+    OP_REQUIRES(ctx, input.NumElements() > 0,\\n+                errors::InvalidArgument(\"input must not be empty\"));\\n+    OP_REQUIRES(ctx, input.dims() == 4,\\n+                errors::InvalidArgument(\"input must be in NHWC format\"));\\n+    OP_REQUIRES(\\n+        ctx, input.dim_size(3) == depth,\\n+        errors::InvalidArgument(\\n+            \"input must have same number of channels as length of input_min: \",\\n+            input.dim_size(3), \" vs \", depth));\\n \\n     const float* input_min_data = input_min.flat<float>().data();\\n     const float* input_max_data = input_max.flat<float>().data();'}}",
            "message_norm":"add more validation to `requantizationrangeperchannel`.\n\npiperorigin-revid: 387693946\nchange-id: ife8dcbdb021bec4787eef6a4361dd08f17c14bd6",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('387693946', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/mkl\/mkl_requantization_range_per_channel_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1661,
            "vuln_id":"GHSA-f4rr-5m7v-wxcw",
            "cwe_id":"{'CWE-843'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1'}",
            "dataset":"osv",
            "summary":"Type confusion leading to `CHECK`-failure based denial of service in TensorFlow ### Impact\nThe [macros that TensorFlow uses for writing assertions (e.g., `CHECK_LT`, `CHECK_GT`, etc.)](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f3b9bf4c3c0597563b289c0512e98d4ce81f886e\/tensorflow\/core\/platform\/default\/logging.h) have an incorrect logic when comparing `size_t` and `int` values. Due to type conversion rules, several of the macros would trigger incorrectly.\n\n### Patches\nWe have patched the issue in GitHub commit [b917181c29b50cb83399ba41f4d938dc369109a1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1) (merging GitHub PR [#55730](https:\/\/github.com\/tensorflow\/tensorflow\/pull\/55730)).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported externally via a [GitHub issue](https:\/\/github.com\/tensorflow\/tensorflow\/issues\/55530).",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b917181c29b50cb83399ba41f4d938dc369109a1",
            "commit_sha":"b917181c29b50cb83399ba41f4d938dc369109a1",
            "patch":"SINGLE",
            "chain_ord":"['b917181c29b50cb83399ba41f4d938dc369109a1']",
            "before_first_fix_commit":"{'cce6f6484e967a0be4df8702c8ac36d021542455', 'd73521b7603f10e3029a2f1cd5067ca985738fc8'}",
            "last_fix_commit":"b917181c29b50cb83399ba41f4d938dc369109a1",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2022, 21:41:18",
            "message":"Merge pull request #55730 from graphcore:awf\/issue-55530\n\nPiperOrigin-RevId: 445252025",
            "author":"TensorFlower Gardener",
            "comments":null,
            "stats":"{'additions': 73, 'deletions': 28, 'total': 101}",
            "files":"{'tensorflow\/core\/platform\/default\/logging.h': {'additions': 73, 'deletions': 28, 'changes': 101, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b917181c29b50cb83399ba41f4d938dc369109a1\/tensorflow%2Fcore%2Fplatform%2Fdefault%2Flogging.h', 'patch': '@@ -85,7 +85,7 @@ class LogMessage : public std::basic_ostringstream<char> {\\n \/\/ that the ternary VLOG() implementation is balanced, type wise.\\n struct Voidifier {\\n   template <typename T>\\n-  void operator&(const T&)const {}\\n+  void operator&(const T&) const {}\\n };\\n \\n \/\/ LogMessageFatal ensures the process will exit in failure after\\n@@ -348,11 +348,13 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\\n }\\n \\n \/\/ Helper functions for CHECK_OP macro.\\n-\/\/ The (int, int) specialization works around the issue that the compiler\\n+\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\\n+\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\\n+\/\/ This happens if, for example, those are used as token names in a\\n+\/\/ yacc grammar.\\n+\/\/ The (int, int) overload works around the issue that the compiler\\n \/\/ will not instantiate the template version of the function on values of\\n \/\/ unnamed enum type - see comment below.\\n-\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\\n-\/\/ comparison errors while still being thorough with the comparison.\\n #define TF_DEFINE_CHECK_OP_IMPL(name, op)                                 \\\\\\n   template <typename T1, typename T2>                                     \\\\\\n   inline string* name##Impl(const T1& v1, const T2& v2,                   \\\\\\n@@ -364,34 +366,77 @@ string* MakeCheckOpString(const T1& v1, const T2& v2, const char* exprtext) {\\n   }                                                                       \\\\\\n   inline string* name##Impl(int v1, int v2, const char* exprtext) {       \\\\\\n     return name##Impl<int, int>(v1, v2, exprtext);                        \\\\\\n-  }                                                                       \\\\\\n-  inline string* name##Impl(const size_t v1, const int v2,                \\\\\\n-                            const char* exprtext) {                       \\\\\\n-    if (TF_PREDICT_FALSE(v2 < 0)) {                                       \\\\\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\\\\n-    }                                                                     \\\\\\n-    return name##Impl<size_t, size_t>(v1, v2, exprtext);                  \\\\\\n-  }                                                                       \\\\\\n-  inline string* name##Impl(const int v1, const size_t v2,                \\\\\\n-                            const char* exprtext) {                       \\\\\\n-    if (TF_PREDICT_FALSE(v2 >= std::numeric_limits<int>::max())) {        \\\\\\n-      return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext); \\\\\\n-    }                                                                     \\\\\\n-    const size_t uval = (size_t)((unsigned)v2);                           \\\\\\n-    return name##Impl<size_t, size_t>(v1, uval, exprtext);                \\\\\\n   }\\n \\n-\/\/ We use the full name Check_EQ, Check_NE, etc. in case the file including\\n-\/\/ base\/logging.h provides its own #defines for the simpler names EQ, NE, etc.\\n-\/\/ This happens if, for example, those are used as token names in a\\n-\/\/ yacc grammar.\\n-TF_DEFINE_CHECK_OP_IMPL(Check_EQ,\\n-                        ==)  \/\/ Compilation error with CHECK_EQ(NULL, x)?\\n-TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)  \/\/ Use CHECK(x == NULL) instead.\\n+\/\/ The (size_t, int) and (int, size_t) specialization are to handle unsigned\\n+\/\/ comparison errors while still being thorough with the comparison.\\n+\\n+TF_DEFINE_CHECK_OP_IMPL(Check_EQ, ==)\\n+\/\/ Compilation error with CHECK_EQ(NULL, x)?\\n+\/\/ Use CHECK(x == NULL) instead.\\n+\\n+inline string* Check_EQImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (TF_PREDICT_FALSE(v1 < 0))\\n+    ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+\\n+  return Check_EQImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_EQImpl(size_t v1, int v2, const char* exprtext) {\\n+  return Check_EQImpl(v2, v1, exprtext);\\n+}\\n+\\n+TF_DEFINE_CHECK_OP_IMPL(Check_NE, !=)\\n+\\n+inline string* Check_NEImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 < 0) return NULL;\\n+\\n+  return Check_NEImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_NEImpl(size_t v1, int v2, const char* exprtext) {\\n+  return Check_NEImpl(v2, v1, exprtext);\\n+}\\n+\\n TF_DEFINE_CHECK_OP_IMPL(Check_LE, <=)\\n+\\n+inline string* Check_LEImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 <= 0) return NULL;\\n+\\n+  return Check_LEImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_LEImpl(size_t v1, int v2, const char* exprtext) {\\n+  if (TF_PREDICT_FALSE(v2 < 0))\\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+  return Check_LEImpl(v1, size_t(v2), exprtext);\\n+}\\n+\\n TF_DEFINE_CHECK_OP_IMPL(Check_LT, <)\\n-TF_DEFINE_CHECK_OP_IMPL(Check_GE, >=)\\n-TF_DEFINE_CHECK_OP_IMPL(Check_GT, >)\\n+\\n+inline string* Check_LTImpl(int v1, size_t v2, const char* exprtext) {\\n+  if (v1 < 0) return NULL;\\n+\\n+  return Check_LTImpl(size_t(v1), v2, exprtext);\\n+}\\n+\\n+inline string* Check_LTImpl(size_t v1, int v2, const char* exprtext) {\\n+  if (v2 < 0)\\n+    return ::tensorflow::internal::MakeCheckOpString(v1, v2, exprtext);\\n+  return Check_LTImpl(v1, size_t(v2), exprtext);\\n+}\\n+\\n+\/\/ Implement GE,GT in terms of LE,LT\\n+template <typename T1, typename T2>\\n+inline string* Check_GEImpl(const T1& v1, const T2& v2, const char* exprtext) {\\n+  return Check_LEImpl(v2, v1, exprtext);\\n+}\\n+\\n+template <typename T1, typename T2>\\n+inline string* Check_GTImpl(const T1& v1, const T2& v2, const char* exprtext) {\\n+  return Check_LTImpl(v2, v1, exprtext);\\n+}\\n+\\n #undef TF_DEFINE_CHECK_OP_IMPL\\n \\n \/\/ In optimized mode, use CheckOpString to hint to compiler that'}}",
            "message_norm":"merge pull request #55730 from graphcore:awf\/issue-55530\n\npiperorigin-revid: 445252025",
            "language":"en",
            "entities":"[('#55730', 'ISSUE', ''), ('445252025', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/platform\/default\/logging.h'])",
            "num_files":1.0
        },
        {
            "index":1872,
            "vuln_id":"GHSA-gg6x-xx78-448c",
            "cwe_id":"{'CWE-87'}",
            "score":4.0,
            "chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c'}",
            "dataset":"osv",
            "summary":"Reflected XSS when importing CSV in OctoberCMS ### Impact\nA user with the ability to use the import functionality of the `ImportExportController` behavior could be socially engineered by an attacker to upload a maliciously crafted CSV file which could result in a reflected XSS attack on the user in question\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https:\/\/stazot.com\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1100\" alt=\"Screen Shot 2020-03-31 at 2 01 52 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/78070158-8f7ef580-7358-11ea-950c-226533f6a0a3.png\">",
            "published_date":"2020-06-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/october",
            "commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c",
            "commit_sha":"cd0b6a791f995d86071a024464c1702efc50f46c",
            "patch":"SINGLE",
            "chain_ord":"['cd0b6a791f995d86071a024464c1702efc50f46c']",
            "before_first_fix_commit":"{'6711dae8ef70caf0e94cec434498012a2ccd86b8'}",
            "last_fix_commit":"cd0b6a791f995d86071a024464c1702efc50f46c",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/31\/2020, 10:17:41",
            "message":"escape import CSV column names",
            "author":"Luke Towers",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'modules\/backend\/behaviors\/importexportcontroller\/partials\/_import_file_columns.htm': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/cd0b6a791f995d86071a024464c1702efc50f46c\/modules%2Fbackend%2Fbehaviors%2Fimportexportcontroller%2Fpartials%2F_import_file_columns.htm', 'patch': '@@ -22,7 +22,7 @@\\n                                 class=\"column-label\"\\n                                 onclick=\"$.oc.importBehavior.loadFileColumnSample(this)\"\\n                             >\\n-                                <?= $column ?>\\n+                                <?= e($column) ?>\\n                             <\/a>\\n                         <\/span>\\n                     <\/div>'}}",
            "message_norm":"escape import csv column names",
            "language":"ro",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/backend\/behaviors\/importexportcontroller\/partials\/_import_file_columns.htm'])",
            "num_files":1.0
        },
        {
            "index":1210,
            "vuln_id":"GHSA-8gv3-57p6-g35r",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `RaggedTensorToTensor` ### Impact\nAn attacker can cause a heap buffer overflow in `tf.raw_ops.RaggedTensorToTensor`:\n\n```python\nimport tensorflow as tf\n\nshape = tf.constant([10, 10], shape=[2], dtype=tf.int64)\nvalues = tf.constant(0, shape=[1], dtype=tf.int64)\ndefault_value = tf.constant(0, dtype=tf.int64)\nl = [849, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\nrow = tf.constant(l, shape=[5, 43], dtype=tf.int64)\nrows = [row]\ntypes = ['ROW_SPLITS']\n\ntf.raw_ops.RaggedTensorToTensor(\n    shape=shape, values=values, default_value=default_value,\n    row_partition_tensors=rows, row_partition_types=types) \n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/d94227d43aa125ad8b54115c03cece54f6a1977b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L219-L222) uses the same index to access two arrays in parallel:\n\n```cc\nfor (INDEX_TYPE i = 0; i < row_split_size - 1; ++i) {\n  INDEX_TYPE row_length = row_split(i + 1) - row_split(i);\n  INDEX_TYPE real_length = std::min(output_size, row_length);\n  INDEX_TYPE parent_output_index_current = parent_output_index[i];\n  ...\n}\n```\n\nSince the user controls the shape of the input arguments, an attacker could trigger a heap OOB access when `parent_output_index` is shorter than `row_split`.\n\n### Patches\nWe have patched the issue in GitHub commit [a84358aa12f0b1518e606095ab9cfddbf597c121](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a84358aa12f0b1518e606095ab9cfddbf597c121",
            "commit_sha":"a84358aa12f0b1518e606095ab9cfddbf597c121",
            "patch":"SINGLE",
            "chain_ord":"['a84358aa12f0b1518e606095ab9cfddbf597c121']",
            "before_first_fix_commit":"{'d94227d43aa125ad8b54115c03cece54f6a1977b'}",
            "last_fix_commit":"a84358aa12f0b1518e606095ab9cfddbf597c121",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/04\/2021, 20:45:57",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.RaggedTensorToTensor`.\n\nPiperOrigin-RevId: 371986929\nChange-Id: I79ab962a22c5867f36f7f45b780a1ac881b1dbdd",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a84358aa12f0b1518e606095ab9cfddbf597c121\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -313,6 +313,12 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n             output_index_multiplier, output_size, result);\\n         return tensorflow::Status::OK();\\n       case RowPartitionType::ROW_SPLITS:\\n+        if (row_partition_tensor.size() - 1 > parent_output_index.size()) {\\n+          return errors::InvalidArgument(\\n+              \"Row partition size is greater than output size: \",\\n+              row_partition_tensor.size() - 1, \" > \",\\n+              parent_output_index.size());\\n+        }\\n         CalculateOutputIndexRowSplit(\\n             context, row_partition_tensor, parent_output_index,\\n             output_index_multiplier, output_size, result);'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.raggedtensortotensor`.\n\npiperorigin-revid: 371986929\nchange-id: i79ab962a22c5867f36f7f45b780a1ac881b1dbdd",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371986929', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1207,
            "vuln_id":"GHSA-8g7p-74h8-hg48",
            "cwe_id":"{'CWE-400', 'CWE-125'}",
            "score":9.1,
            "chain":"{'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/1c24219df87524e6ed973127e81f30801d658f07'}",
            "dataset":"osv",
            "summary":"Denial of Service in https-proxy-agent Versions of `https-proxy-agent` before 2.2.0 are vulnerable to denial of service. This is due to unsanitized options (proxy.auth) being passed to `Buffer()`.\n\n\n## Recommendation\n\nUpdate to version 2.2.0 or later.",
            "published_date":"2018-07-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent",
            "commit_href":"https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/commit\/1c24219df87524e6ed973127e81f30801d658f07",
            "commit_sha":"1c24219df87524e6ed973127e81f30801d658f07",
            "patch":"SINGLE",
            "chain_ord":"['1c24219df87524e6ed973127e81f30801d658f07']",
            "before_first_fix_commit":"{'c58d365dd153104d1147967a0a6b4e1dd1698e50'}",
            "last_fix_commit":"1c24219df87524e6ed973127e81f30801d658f07",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/03\/2018, 19:31:04",
            "message":"Use `Buffer.from()`\n\n`new Buffer()` is deprecated and unsafe.",
            "author":"Nathan Rajlich",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/TooTallNate\/node-https-proxy-agent\/raw\/1c24219df87524e6ed973127e81f30801d658f07\/index.js', 'patch': \"@@ -204,7 +204,7 @@ HttpsProxyAgent.prototype.callback = function connect(req, opts, fn) {\\n   var headers = Object.assign({}, proxy.headers);\\n   if (proxy.auth) {\\n     headers['Proxy-Authorization'] =\\n-      'Basic ' + new Buffer(proxy.auth).toString('base64');\\n+      'Basic ' + Buffer.from(proxy.auth).toString('base64');\\n   }\\n \\n   \/\/ the Host header should only include the port\"}}",
            "message_norm":"use `buffer.from()`\n\n`new buffer()` is deprecated and unsafe.",
            "language":"en",
            "entities":"[('unsafe', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":73,
            "vuln_id":"GHSA-29q4-gxjq-rx5c",
            "cwe_id":"{'CWE-59', 'CWE-690', 'CWE-917', 'CWE-74', 'CWE-62', 'CWE-77'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/SAP\/scimono\/commit\/413b5d75fa94e77876af0e47be76475a23745b80'}",
            "dataset":"osv",
            "summary":"Remote Code Execution in SCIMono ### Impact\nIt is possible for attacker to inject and execute java expression and compromising the availability and integrity of the system.\n\n### Patches\nThe issue was fixed on  [0.0.19 version](https:\/\/mvnrepository.com\/artifact\/com.sap.scimono\/scimono-server\/0.0.19)",
            "published_date":"2021-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/SAP\/scimono",
            "commit_href":"https:\/\/github.com\/SAP\/scimono\/commit\/413b5d75fa94e77876af0e47be76475a23745b80",
            "commit_sha":"413b5d75fa94e77876af0e47be76475a23745b80",
            "patch":"SINGLE",
            "chain_ord":"['413b5d75fa94e77876af0e47be76475a23745b80']",
            "before_first_fix_commit":"{'8a09b8cfbb4cb797efac745c7ec3924569513844'}",
            "last_fix_commit":"413b5d75fa94e77876af0e47be76475a23745b80",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/30\/2020, 14:35:19",
            "message":"Escape Java EL in validation message before interpolation (#117)",
            "author":"Aleydin Karaimin",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 1, 'total': 9}",
            "files":"{'scimono-server\/src\/main\/java\/com\/sap\/scimono\/entity\/schema\/validation\/ValidationUtil.java': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/SAP\/scimono\/raw\/413b5d75fa94e77876af0e47be76475a23745b80\/scimono-server%2Fsrc%2Fmain%2Fjava%2Fcom%2Fsap%2Fscimono%2Fentity%2Fschema%2Fvalidation%2FValidationUtil.java', 'patch': '@@ -1,13 +1,20 @@\\n \\n package com.sap.scimono.entity.schema.validation;\\n \\n+import java.util.regex.Pattern;\\n+\\n import javax.validation.ConstraintValidatorContext;\\n \\n class ValidationUtil {\\n+  private static final Pattern EXPRESSION_LANGUAGE_CHARACTERS = Pattern.compile(\"([${}])\");\\n \\n   public static void interpolateErrorMessage(ConstraintValidatorContext context, String errorMessage) {\\n     context.disableDefaultConstraintViolation();\\n-    context.buildConstraintViolationWithTemplate(errorMessage).addConstraintViolation();\\n+    context.buildConstraintViolationWithTemplate(escapeExpressionLanguage(errorMessage)).addConstraintViolation();\\n+  }\\n+\\n+  private static String escapeExpressionLanguage(String text) {\\n+    return EXPRESSION_LANGUAGE_CHARACTERS.matcher(text).replaceAll( \"\\\\\\\\\\\\\\\\$1\" );\\n   }\\n \\n }'}}",
            "message_norm":"escape java el in validation message before interpolation (#117)",
            "language":"it",
            "entities":"[('escape', 'SECWORD', ''), ('#117', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['scimono-server\/src\/main\/java\/com\/sap\/scimono\/entity\/schema\/validation\/ValidationUtil.java'])",
            "num_files":1.0
        },
        {
            "index":973,
            "vuln_id":"GHSA-763g-fqq7-48wg",
            "cwe_id":"{'CWE-611'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/checkstyle\/checkstyle\/commit\/c46a16d177e6797895b195c288ae9a9a096254b8'}",
            "dataset":"osv",
            "summary":"XML external entity (XXE) processing ('external-parameter-entities' feature was not fully disabled)) Due to an incomplete fix for [CVE-2019-9658](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2019-9658), checkstyle was still vulnerable to XML External Entity (XXE) Processing.\n\n### Impact\n\n#### User: Build Maintainers\n\nThis vulnerability probably doesn't impact Maven\/Gradle users as, in most cases, these builds are processing files that are trusted, or pre-vetted by a pull request reviewer before being run on internal CI infrastructure.\n\n#### User: Static Analysis as a Service\n\nIf you operate a site\/service that parses \"untrusted\" Checkstyle XML configuration files, you are vulnerable to this and should patch.\n\nNote from the discoverer of the original CVE-2019-9658:\n\n> While looking at a few companies that run Checkstyle\/PMD\/ect... as a service I notice that it's a common pattern to run the static code analysis tool inside of a Docker container with the following flags:\n> ```\n> --net=none \\\n> --privileged=false \\\n> --cap-drop=ALL\n> ```\n> Running the analysis in Docker has the advantage that there should be no sensitive local file information that XXE can exfiltrate from the container. Additionally, these flags prevent vulnerabilities in static analysis tools like Checkstyle from being used to exfiltrate data via XXE or to perform SSRF.\n> \\- [Jonathan Leitschuh](https:\/\/twitter.com\/jlleitschuh)\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nPatched, will be released with version 8.29 at 26 Jan 2020.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo workaround are available\n\n### References\n\n - [CWE-611: Improper Restriction of XML External Entity Reference](https:\/\/cwe.mitre.org\/data\/definitions\/611.html)\n - GitHub Issue https:\/\/github.com\/checkstyle\/checkstyle\/issues\/7468\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in https:\/\/github.com\/checkstyle\/checkstyle\/issues",
            "published_date":"2020-01-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/checkstyle\/checkstyle",
            "commit_href":"https:\/\/github.com\/checkstyle\/checkstyle\/commit\/c46a16d177e6797895b195c288ae9a9a096254b8",
            "commit_sha":"c46a16d177e6797895b195c288ae9a9a096254b8",
            "patch":"SINGLE",
            "chain_ord":"['c46a16d177e6797895b195c288ae9a9a096254b8']",
            "before_first_fix_commit":"{'dfed7949c3714dceb0318e4381f00e7fb5d5dfe3'}",
            "last_fix_commit":"c46a16d177e6797895b195c288ae9a9a096254b8",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2020, 01:32:28",
            "message":"Issue #7468: disable 'external-parameter-entities' feature by default",
            "author":"Roman Ivanov",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'src\/main\/java\/com\/puppycrawl\/tools\/checkstyle\/XmlLoader.java': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/checkstyle\/checkstyle\/raw\/c46a16d177e6797895b195c288ae9a9a096254b8\/src%2Fmain%2Fjava%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2FXmlLoader.java', 'patch': '@@ -124,6 +124,9 @@ public static final class LoadExternalDtdFeatureProvider {\\n         \/** Feature that enables including external general entities in XML files. *\/\\n         public static final String EXTERNAL_GENERAL_ENTITIES =\\n                 \"http:\/\/xml.org\/sax\/features\/external-general-entities\";\\n+        \/** Feature that enables including external parameter entities in XML files. *\/\\n+        public static final String EXTERNAL_PARAMETER_ENTITIES =\\n+                \"http:\/\/xml.org\/sax\/features\/external-parameter-entities\";\\n \\n         \/** Stop instances being created. **\/\\n         private LoadExternalDtdFeatureProvider() {\\n@@ -146,6 +149,7 @@ public static void setFeaturesBySystemProperty(SAXParserFactory factory)\\n \\n             factory.setFeature(LOAD_EXTERNAL_DTD, enableExternalDtdLoad);\\n             factory.setFeature(EXTERNAL_GENERAL_ENTITIES, enableExternalDtdLoad);\\n+            factory.setFeature(EXTERNAL_PARAMETER_ENTITIES, enableExternalDtdLoad);\\n         }\\n \\n     }'}}",
            "message_norm":"issue #7468: disable 'external-parameter-entities' feature by default",
            "language":"fr",
            "entities":"[('#7468', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/puppycrawl\/tools\/checkstyle\/XmlLoader.java'])",
            "num_files":1.0
        },
        {
            "index":2094,
            "vuln_id":"GHSA-hm45-mgqm-gjm4",
            "cwe_id":"{'CWE-79'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91', 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/99d88b840674674166ce005b784ae8e31e955ab1'}",
            "dataset":"osv",
            "summary":"Remote Code Execution (RCE) Exploit on Cross Site Scripting (XSS) Vulnerability ### Impact\nA RCE exploit has been discovered in the Red Discord Bot - Dashboard Webserver: this exploit allows Discord users with specially crafted Server names and Usernames\/Nicknames to inject code into the webserver front-end code.  By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis high severity exploit has been fixed on version `0.1.7a`.\n\n### Workarounds\nThere are no workarounds, bot owners must upgrade their relevant packages (Dashboard module and Dashboard webserver) in order to patch this issue\n\n### References\n- 99d88b8\n- a6b9785\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-Dashboard](https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/issues\/new\/choose)\n* Over on the official [Red Server](https:\/\/discord.gg\/red) or at the Third Party Server [Toxic Layer](https:\/\/discord.gg\/vQZTdB9)",
            "published_date":"2020-12-08",
            "chain_len":2,
            "project":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard",
            "commit_href":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91",
            "commit_sha":"a6b9785338003ec87fb75305e7d1cc2d40c7ab91",
            "patch":"MULTI",
            "chain_ord":"['99d88b840674674166ce005b784ae8e31e955ab1', 'a6b9785338003ec87fb75305e7d1cc2d40c7ab91']",
            "before_first_fix_commit":"{'261f00f52bbfee4db67f624fd7409bf08124a6c4'}",
            "last_fix_commit":"a6b9785338003ec87fb75305e7d1cc2d40c7ab91",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/01\/2020, 14:15:49",
            "message":"[UI] Fix SelectPicker not rendering properly",
            "author":"NeuroAssassin",
            "comments":null,
            "stats":"{'additions': 41, 'deletions': 16, 'total': 57}",
            "files":"{'reddash\/app\/home\/templates\/guild.html': {'additions': 41, 'deletions': 16, 'changes': 57, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/raw\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91\/reddash%2Fapp%2Fhome%2Ftemplates%2Fguild.html', 'patch': '@@ -930,20 +930,20 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n             img.attr(\"src\", `${img.attr(\"data-src-url\")}png`)\\r\\n         }\\r\\n     }\\r\\n+\\r\\n+    function safe(str) {\\r\\n+        return String(str).replace(\/&\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\r\\n+    }\\r\\n <\/script>\\r\\n \\r\\n {% if data[\\'status\\'] == 1 and data[\\'data\\'][\\'status\\'] == 1 %}\\r\\n \\r\\n-{% if \\'aliascc\\' in data[\\'data\\'][\\'permslist\\'] %}\\r\\n+{% if \\'aliascc\\' in data[\\'data\\'][\\'permslist\\'] and false%}\\r\\n <script>\\r\\n     \/* ---------------------------------------------------------------------------------------------------------------------\\r\\n                                                         Aliases group\\r\\n        --------------------------------------------------------------------------------------------------------------------- *\/\\r\\n \\r\\n-    function safe(str) {\\r\\n-        return String(str).replace(\/&\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\r\\n-    }\\r\\n-\\r\\n     \/\/ Alias modal\\r\\n     $(document).on(\\'click\\', \\'.editaliasbutton\\', function () {\\r\\n         var command = $(this).parent().parent().data(\"command\")\\r\\n@@ -1186,28 +1186,35 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n             } else if (json.status === 1 && json.data.status === 0) {\\r\\n                 $(\"#targetstatus\").html(`{{ _(\\'Failed to fetch targets\\') }}: ${json.data.message}`)\\r\\n             } else {\\r\\n+                let big_ol_dict = {}\\r\\n                 select.html(\"\")\\r\\n \\r\\n                 var chopt = [`<optgroup label=\"{{ _(\\'Channels\\') }}\">`]\\r\\n                 for (let [id, name] of json.data.CHANNELS) {\\r\\n-                    chopt.push(`<option value=${id}>${name}<\/option>`)\\r\\n+                    chopt.push(`<option value=${id} class=\"selectpicker-element-${id}\">Loading...<\/option>`)\\r\\n+                    big_ol_dict[id] = name\\r\\n                 }\\r\\n                 chopt.push(\"<\/optgroup>\")\\r\\n                 select.append(chopt.join(\"\"))\\r\\n \\r\\n                 var ropt = [`<optgroup label=\"{{ _(\\'Roles\\') }}\">`]\\r\\n                 for (let [id, name] of json.data.ROLES) {\\r\\n-                    ropt.push(`<option value=${id}>${name}<\/option>`)\\r\\n+                    ropt.push(`<option value=${id} class=\"selectpicker-element-${id}\">Loading...<\/option>`)\\r\\n+                    big_ol_dict[id] = name\\r\\n                 }\\r\\n                 ropt.push(\"<\/optgroup>\")\\r\\n                 select.append(ropt.join(\"\"))\\r\\n \\r\\n                 var uopt = [`<optgroup label=\"{{ _(\\'Users\\') }}\">`]\\r\\n                 for (let [id, name] of json.data.USERS) {\\r\\n-                    uopt.push(`<option value=${id}>${name}<\/option>`)\\r\\n+                    uopt.push(`<option value=${id} class=\"selectpicker-element-${id}\">Loading...<\/option>`)\\r\\n+                    big_ol_dict[id] = name\\r\\n                 }\\r\\n                 uopt.push(\"<\/optgroup>\")\\r\\n                 select.append(uopt.join(\"\"))\\r\\n+                for (let [id, name] of Object.entries(big_ol_dict)) {\\r\\n+                    $(`.selectpicker-element-${id}`).text(name)\\r\\n+                }\\r\\n             }\\r\\n             select.selectpicker({ title: \"{{ _(\\'Choose target\\') }}\" })\\r\\n             select.removeAttr(\"disabled\")\\r\\n@@ -1299,18 +1306,24 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n                 $(\"#rulesdiv\").html(\"\")\\r\\n                 var overall = [\\'<h3 style=\"margin-bottom: 10px\">{{ _(\"Cog rules\") }}<\/h3>\\']\\r\\n                 var allcoglines = [\"<ul>\"]\\r\\n+\\r\\n+                let big_ol_dict_two = {}\\r\\n+                let cog_counter = 0\\r\\n+\\r\\n                 for (let [cog, rules] of Object.entries(json.data.COG)) {\\r\\n                     var coglines = []\\r\\n                     for (let rule of rules) {\\r\\n                         if (rule.type === \"Default\") {\\r\\n                             coglines.unshift(`<li>{{ _(\\'By default, users are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n                         } else if (rule.type === \"Role\") {\\r\\n-                            coglines.push(`<li>{{ _(\\'Users with the\\') }} <code>${rule.name}<\/code> {{ _(\\'role\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n+                            coglines.push(`<li>{{ _(\\'Users with the\\') }} <code id=\"cog-rules-${cog_counter}\">Loading...<\/code> {{ _(\\'role\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n                         } else if (rule.type === \"Channel\") {\\r\\n-                            coglines.push(`<li>{{ _(\\'Users in the\\') }} <code>${rule.name}<\/code> {{ _(\\'channel\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n+                            coglines.push(`<li>{{ _(\\'Users in the\\') }} <code id=\"cog-rules-${cog_counter}\">Loading...<\/code> {{ _(\\'channel\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n                         } else {\\r\\n-                            coglines.push(`<li>{{ _(\\'User\\') }} <code>${rule.name}<\/code> (${rule.id}) {{ _(\\'is\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n+                            coglines.push(`<li>{{ _(\\'User\\') }} <code id=\"cog-rules-${cog_counter}\">Loading...<\/code> (${rule.id}) {{ _(\\'is\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cog}<\/code> {{ _(\\'cog\\') }}.<\/li>`)\\r\\n                         }\\r\\n+                        big_ol_dict_two[`cog-rules-${cog_counter}`] = rule.name\\r\\n+                        cog_counter += 1\\r\\n                     }\\r\\n                     if (coglines) {\\r\\n                         allcoglines = allcoglines.concat(coglines)\\r\\n@@ -1324,18 +1337,23 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n \\r\\n                 overall.push(\\'<h3 style=\"margin-bottom: 10px\">{{ _(\"Command rules\") }}<\/h3>\\')\\r\\n                 var allcmdlines = [\"<ul>\"]\\r\\n+\\r\\n+                let cmd_counter = 0\\r\\n+\\r\\n                 for (let [cmd, rules] of Object.entries(json.data.COMMAND)) {\\r\\n                     var cmdlines = []\\r\\n                     for (let rule of rules) {\\r\\n                         if (rule.type === \"Default\") {\\r\\n                             cmdlines.unshift(`<li>{{ _(\\'By default, users are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n                         } else if (rule.type === \"Role\") {\\r\\n-                            cmdlines.push(`<li>{{ _(\\'Users with the\\') }} <code>${rule.name}<\/code> {{ _(\\'role\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n+                            cmdlines.push(`<li>{{ _(\\'Users with the\\') }} <code id=\"cmd-rules-${cmd_counter}\">Loading...<\/code> {{ _(\\'role\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n                         } else if (rule.type === \"Channel\") {\\r\\n-                            cmdlines.push(`<li>{{ _(\\'Users in the\\') }} <code>${rule.name}<\/code> {{ _(\\'channel\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n+                            cmdlines.push(`<li>{{ _(\\'Users in the\\') }} <code id=\"cmd-rules-${cmd_counter}\">Loading...<\/code> {{ _(\\'channel\\') }} (${rule.id}) {{ _(\\'are\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n                         } else {\\r\\n-                            cmdlines.push(`<li>{{ _(\\'User\\') }} <code>${rule.name}<\/code> (${rule.id}) {{ _(\\'is\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n+                            cmdlines.push(`<li>{{ _(\\'User\\') }} <code id=\"cmd-rules-${cmd_counter}\">Loading...<\/code> (${rule.id}) {{ _(\\'is\\') }} ${rule.permission} {{ _(\\'permission to use the\\') }} <code>${cmd}<\/code> {{ _(\\'command\\') }}.<\/li>`)\\r\\n                         }\\r\\n+                        big_ol_dict_two[`cmd-rules-${cmd_counter}`] = rule.name\\r\\n+                        cmd_counter += 1\\r\\n                     }\\r\\n                     if (cmdlines) {\\r\\n                         allcmdlines = allcmdlines.concat(cmdlines)\\r\\n@@ -1347,6 +1365,9 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n                 }\\r\\n                 overall = overall.concat(allcmdlines)\\r\\n                 $(\"#rulesdiv\").html(overall.join(\"\"))\\r\\n+                for (let [id, name] of Object.entries(big_ol_dict_two)) {\\r\\n+                    $(`#${id}`).text(name)\\r\\n+                }\\r\\n                 $(\"#fetchrulesstatus\").html(\"{{ _(\\'Refreshed rules\\') }}.\")\\r\\n             }\\r\\n         }\\r\\n@@ -1378,18 +1399,20 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n \\r\\n     $(document).on(\\'click\\', \\'.adminroleoption\\', function () {\\r\\n         var elm = $(this)\\r\\n+        let random_number = Math.floor(Math.random() * Math.floor(100000))\\r\\n         $(\"#adminrolelist\").append(`\\r\\n                 <li>\\r\\n                     <div class=\"row\">\\r\\n                         <div class=\"col-md-10 col-8\">\\r\\n-                            <input class=\"form-control adminroleinput\" value=\"${elm.text()}\" disabled=True data-id=\"${elm.attr(\"data-id\")}\">\\r\\n+                            <input class=\"form-control adminroleinput\" value=\"Loading...\" disabled=True data-id=\"${elm.attr(\"data-id\")}\" id=\"admin-role-${random_number}\">\\r\\n                         <\/div>\\r\\n                         <div class=\"col-md-1 col-1\">\\r\\n                             <span class=\"admin-role-x clickable\"><i class=\"tim-icons icon-simple-remove\" style=\"float: right; margin-top: 10px;\"><\/i><\/span>\\r\\n                         <\/div>\\r\\n                     <\/div>\\r\\n                 <\/li>\\r\\n             `)\\r\\n+        $(`#admin-role-${random_number}`).val(elm.text())\\r\\n         elm.remove()\\r\\n     })\\r\\n \\r\\n@@ -1442,18 +1465,20 @@ <h5>{{ data[\\'message\\'] }}<\/h5>\\n \\r\\n     $(document).on(\\'click\\', \\'.modroleoption\\', function () {\\r\\n         var elm = $(this)\\r\\n+        let random_number = Math.floor(Math.random() * Math.floor(100000))\\r\\n         $(\"#modrolelist\").append(`\\r\\n                 <li>\\r\\n                     <div class=\"row\">\\r\\n                         <div class=\"col-md-10 col-8\">\\r\\n-                            <input class=\"form-control modroleinput\" value=\"${elm.text()}\" disabled=True data-id=\"${elm.attr(\"data-id\")}\">\\r\\n+                            <input class=\"form-control modroleinput\" value=\"Loading...\" disabled=True data-id=\"${elm.attr(\"data-id\")}\" id=\"mod-role-${random_number}\">\\r\\n                         <\/div>\\r\\n                         <div class=\"col-md-1 col-1\">\\r\\n                             <span class=\"mod-role-x clickable\"><i class=\"tim-icons icon-simple-remove\" style=\"float: right; margin-top: 10px;\"><\/i><\/span>\\r\\n                         <\/div>\\r\\n                     <\/div>\\r\\n                 <\/li>\\r\\n             `)\\r\\n+        $(`#mod-role-${random_number}`).val(elm.text())\\r\\n         elm.remove()\\r\\n     })'}}",
            "message_norm":"[ui] fix selectpicker not rendering properly",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['reddash\/app\/home\/templates\/guild.html'])",
            "num_files":1.0
        },
        {
            "index":1322,
            "vuln_id":"GHSA-95xm-g58g-3p88",
            "cwe_id":"{'CWE-369'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4923de56ec94fff7770df259ab7f2288a74feb41'}",
            "dataset":"osv",
            "summary":"Integer division by 0 in sparse reshaping ### Impact\nThe implementation of `tf.raw_ops.SparseReshape` can be made to trigger an integral division by 0 exception:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.SparseReshape(\n  input_indices = np.ones((1,3)),\n  input_shape = np.array([1,1,0]),\n  new_shape = np.array([1,0]))\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/reshape_util.cc#L176-L181) calls the reshaping functor whenever there is at least an index in the input but does not check that shape of the input or the target shape have both a non-zero number of elements.\n\nThe [reshape functor](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/reshape_util.cc#L40-L78) blindly divides by the dimensions of the target shape. Hence, if this is not checked, code will result in a division by 0.\n  \n### Patches\nWe have patched the issue in GitHub commit [4923de56ec94fff7770df259ab7f2288a74feb41](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4923de56ec94fff7770df259ab7f2288a74feb41).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1 as this is the other affected version.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4923de56ec94fff7770df259ab7f2288a74feb41",
            "commit_sha":"4923de56ec94fff7770df259ab7f2288a74feb41",
            "patch":"SINGLE",
            "chain_ord":"['4923de56ec94fff7770df259ab7f2288a74feb41']",
            "before_first_fix_commit":"{'062534a0e7af9a49e96bc5797851be0e57cad1d6'}",
            "last_fix_commit":"4923de56ec94fff7770df259ab7f2288a74feb41",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2021, 20:52:28",
            "message":"Don't do any work when reshaping 0 elements sparse tensor.\n\nIf reshaping to 0 elements tensor, check that input has no elements.\nIf reshaping no elements input, check that output has no elements.\n\nPiperOrigin-RevId: 388296986\nChange-Id: Iadc9fe7252e14313ca987e69bf0d7042fd10232a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/reshape_util.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4923de56ec94fff7770df259ab7f2288a74feb41\/tensorflow%2Fcore%2Fkernels%2Freshape_util.cc', 'patch': '@@ -174,6 +174,12 @@ void ReshapeSparseTensor(OpKernelContext *context,\\n                                           TensorShape({nnz, output_rank}),\\n                                           &result_indices));\\n   if (nnz > 0) {\\n+    OP_REQUIRES(\\n+        context, dense_size > 0 && product > 0,\\n+        errors::InvalidArgument(\\n+            \"Input tensor has \", nnz, \" non zero elements but input shape (\",\\n+            input_shape.DebugString(), \") or output shape (\",\\n+            output_shape.DebugString(), \") is empty\"));\\n     OP_REQUIRES_OK(context, functor::ReshapeSparseTensorFunctor<Device>()(\\n                                 context, input_shape, output_shape,\\n                                 input_indices_in.matrix<int64>(),'}}",
            "message_norm":"don't do any work when reshaping 0 elements sparse tensor.\n\nif reshaping to 0 elements tensor, check that input has no elements.\nif reshaping no elements input, check that output has no elements.\n\npiperorigin-revid: 388296986\nchange-id: iadc9fe7252e14313ca987e69bf0d7042fd10232a",
            "language":"en",
            "entities":"[('388296986', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/reshape_util.cc'])",
            "num_files":1.0
        },
        {
            "index":858,
            "vuln_id":"GHSA-6jp6-9rf9-gc66",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/9e19a8414337692cc90da2a91c9af5420f2952f1', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/f6753a1a1c63fade6ad418fbda827c6750ab0bda', 'https:\/\/github.com\/WeblateOrg\/weblate\/commit\/22d577b1f1e88665a88b4569380148030e0f8389'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Weblate ### Impact\nDue to improper neutralization, it was possible to perform cross-site scripting via crafted user and language names.\n\n### Patches\n\nThe issues were fixed in the 4.11 release. The following commits are addressing it:\n\n* f6753a1a1c63fade6ad418fbda827c6750ab0bda\n* 9e19a8414337692cc90da2a91c9af5420f2952f1\n* 22d577b1f1e88665a88b4569380148030e0f8389\n\n### Workarounds\n\nYou can look for crafted user and language names to see if you were affected.\n\n### References\n* https:\/\/hackerone.com\/reports\/1486674\n* https:\/\/hackerone.com\/reports\/1486718\n* https:\/\/hackerone.com\/reports\/1485226\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open a topic in [discussions](https:\/\/github.com\/WeblateOrg\/weblate\/discussions)\n* Email us at [care@weblate.org](mailto:care@weblate.org)",
            "published_date":"2022-02-25",
            "chain_len":3,
            "project":"https:\/\/github.com\/WeblateOrg\/weblate",
            "commit_href":"https:\/\/github.com\/WeblateOrg\/weblate\/commit\/9e19a8414337692cc90da2a91c9af5420f2952f1",
            "commit_sha":"9e19a8414337692cc90da2a91c9af5420f2952f1",
            "patch":"MULTI",
            "chain_ord":"['22d577b1f1e88665a88b4569380148030e0f8389', '9e19a8414337692cc90da2a91c9af5420f2952f1', 'f6753a1a1c63fade6ad418fbda827c6750ab0bda']",
            "before_first_fix_commit":"{'572628cef60e9d839b79b2087960b606a5cca4d8'}",
            "last_fix_commit":"f6753a1a1c63fade6ad418fbda827c6750ab0bda",
            "chain_ord_pos":2.0,
            "commit_datetime":"02\/22\/2022, 20:00:41",
            "message":"js: Add missing escaping to username completion\n\nFixes https:\/\/hackerone.com\/reports\/1486674",
            "author":"Michal \u010ciha\u0159",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'weblate\/static\/loader-bootstrap.js': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/WeblateOrg\/weblate\/raw\/9e19a8414337692cc90da2a91c9af5420f2952f1\/weblate%2Fstatic%2Floader-bootstrap.js', 'patch': '@@ -1131,7 +1131,9 @@ $(function () {\\n       return \"\";\\n     },\\n     menuItemTemplate: function (item) {\\n-      return `<a>${item.string}<\/a>`;\\n+      let link = document.createElement(\"a\");\\n+      link.innerText = item.string;\\n+      return link.outerHTML;\\n     },\\n     values: (text, callback) => {\\n       $.ajax({'}}",
            "message_norm":"js: add missing escaping to username completion\n\nfixes https:\/\/hackerone.com\/reports\/1486674",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('escaping', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('https:\/\/hackerone.com\/reports\/1486674', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['weblate\/static\/loader-bootstrap.js'])",
            "num_files":1.0
        },
        {
            "index":1528,
            "vuln_id":"GHSA-cchx-mfrc-fwqr",
            "cwe_id":"{'CWE-200', 'CWE-287'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/symfony\/symfony\/commit\/a29ce2817cf43bb1850cf6af114004ac26c7a081'}",
            "dataset":"osv",
            "summary":"Improper authentication in Symfony In Symfony before 2.7.51, 2.8.x before 2.8.50, 3.x before 3.4.26, 4.x before 4.1.12, and 4.2.x before 4.2.7, a vulnerability would allow an attacker to authenticate as a privileged user on sites with user registration and remember me login functionality enabled. This is related to symfony\/security.",
            "published_date":"2020-02-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/symfony\/symfony",
            "commit_href":"https:\/\/github.com\/symfony\/symfony\/commit\/a29ce2817cf43bb1850cf6af114004ac26c7a081",
            "commit_sha":"a29ce2817cf43bb1850cf6af114004ac26c7a081",
            "patch":"SINGLE",
            "chain_ord":"['a29ce2817cf43bb1850cf6af114004ac26c7a081']",
            "before_first_fix_commit":"{'3e0b2354dbc8813a1f5ff91757e1dce40dfe31b4'}",
            "last_fix_commit":"a29ce2817cf43bb1850cf6af114004ac26c7a081",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/06\/2019, 10:40:18",
            "message":"[Security] Add a separator in the remember me cookie hash",
            "author":"Pascal Borreli",
            "comments":"{'com_1': {'author': 'simoheinonen', 'datetime': '06\/05\/2019, 12:10:12', 'body': 'This logs out all users with the old hash. \ud83d\ude10'}, 'com_2': {'author': 'stof', 'datetime': '06\/05\/2019, 12:18:28', 'body': '@simoheinonen which is better than allowing to spoof remember me cookies'}, 'com_3': {'author': 'simoheinonen', 'datetime': '06\/05\/2019, 12:24:05', 'body': 'Yeah but worth mentioning imo. Logging out thousands of users might cost a lot'}, 'com_4': {'author': 'stefanospetrakis', 'datetime': '06\/25\/2019, 16:29:42', 'body': \"One remark regarding this (a bit too late perhaps);\\r\\nI would like this a little bit shorter for readability\/redundancy\/etc., sth like that:\\r\\n`return hash_hmac('sha256', implode(self::COOKIE_DELIMITER, func_get_args()), $this->getSecret());`\\r\\n\\r\\nAny point to opening a follow-up issue for this?\"}, 'com_5': {'author': 'stof', 'datetime': '06\/25\/2019, 16:37:07', 'body': '@stefanospetrakis this code is less explicit about what gets included in the hash exactly, due to using `func_get_args` instead of the actual arguments. So to me, this actually makes it less readable.'}, 'com_6': {'author': 'stefanospetrakis', 'datetime': '06\/25\/2019, 19:53:54', 'body': '@stof Fair enough, how about the following:\\r\\n\\r\\n`implode(self::COOKIE_DELIMITER, [$class, $username, $expires, $password])`'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/Symfony\/Component\/Security\/Http\/RememberMe\/TokenBasedRememberMeServices.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/symfony\/symfony\/raw\/a29ce2817cf43bb1850cf6af114004ac26c7a081\/src%2FSymfony%2FComponent%2FSecurity%2FHttp%2FRememberMe%2FTokenBasedRememberMeServices.php', 'patch': \"@@ -120,6 +120,6 @@ protected function generateCookieValue($class, $username, $expires, $password)\\n      *\/\\n     protected function generateCookieHash($class, $username, $expires, $password)\\n     {\\n-        return hash_hmac('sha256', $class.$username.$expires.$password, $this->getSecret());\\n+        return hash_hmac('sha256', $class.self::COOKIE_DELIMITER.$username.self::COOKIE_DELIMITER.$expires.self::COOKIE_DELIMITER.$password, $this->getSecret());\\n     }\\n }\"}}",
            "message_norm":"[security] add a separator in the remember me cookie hash",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('add', 'ACTION', ''), ('cookie', 'SECWORD', ''), ('hash', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Symfony\/Component\/Security\/Http\/RememberMe\/TokenBasedRememberMeServices.php'])",
            "num_files":1.0
        },
        {
            "index":1630,
            "vuln_id":"GHSA-cwv3-863g-39vx",
            "cwe_id":"{'CWE-835', 'CWE-674'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c6173f5fe66cdbab74f4f869311fe6aae2ba35f4', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743'}",
            "dataset":"osv",
            "summary":"Stack overflow due to looping TFLite subgraph ### Impact\nTFlite graphs must not have loops between nodes. However, this condition was not checked and an attacker could craft models that would result in infinite loop during evaluation. In certain cases, the infinite loop would be replaced by stack overflow due to too many recursive calls.\n\nFor example, the [`While` implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/106d8f4fb89335a2c52d7c895b7a7485465ca8d9\/tensorflow\/lite\/kernels\/while.cc) could be tricked into a scneario where both the body and the loop subgraphs are the same. Evaluating one of the subgraphs means calling the `Eval` function for the other and this quickly exhaust all stack space.\n    \n### Patches \nWe have patched the issue in GitHub commit [9c1dc920d8ffb4893d6c9d27d1f039607b326743](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743) (for the `While` operator) and in GitHub commit [c6173f5fe66cdbab74f4f869311fe6aae2ba35f4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c6173f5fe66cdbab74f4f869311fe6aae2ba35f4) (in general).\n    \nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/9c1dc920d8ffb4893d6c9d27d1f039607b326743",
            "commit_sha":"9c1dc920d8ffb4893d6c9d27d1f039607b326743",
            "patch":"MULTI",
            "chain_ord":"['9c1dc920d8ffb4893d6c9d27d1f039607b326743', 'c6173f5fe66cdbab74f4f869311fe6aae2ba35f4']",
            "before_first_fix_commit":"{'46b80bd2a8943d5976dc83bd5c0322c0023255a7'}",
            "last_fix_commit":"c6173f5fe66cdbab74f4f869311fe6aae2ba35f4",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 00:47:46",
            "message":"Prevent infinite loop\/stack overflow in TFLite `while` op.\n\nPiperOrigin-RevId: 370800333\nChange-Id: I6a2e4ff849da339545c449db2af7e11ce6ff02c3",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/lite\/kernels\/while.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/9c1dc920d8ffb4893d6c9d27d1f039607b326743\/tensorflow%2Flite%2Fkernels%2Fwhile.cc', 'patch': '@@ -138,6 +138,8 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   auto* subgraphs = this_subgraph->GetSubgraphs();\\n   TF_LITE_ENSURE(context, op_data->cond_subgraph_index < subgraphs->size());\\n   TF_LITE_ENSURE(context, op_data->body_subgraph_index < subgraphs->size());\\n+  TF_LITE_ENSURE(context,\\n+                 op_data->cond_subgraph_index != op_data->body_subgraph_index);\\n \\n   Subgraph* cond_subgraph = (*subgraphs)[op_data->cond_subgraph_index].get();\\n   Subgraph* body_subgraph = (*subgraphs)[op_data->body_subgraph_index].get();'}}",
            "message_norm":"prevent infinite loop\/stack overflow in tflite `while` op.\n\npiperorigin-revid: 370800333\nchange-id: i6a2e4ff849da339545c449db2af7e11ce6ff02c3",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('infinite loop', 'SECWORD', ''), ('overflow', 'SECWORD', ''), ('370800333', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/while.cc'])",
            "num_files":1.0
        },
        {
            "index":1184,
            "vuln_id":"GHSA-8c89-2vwr-chcq",
            "cwe_id":"{'CWE-787', 'CWE-131'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `QuantizedResizeBilinear` ### Impact\nAn attacker can cause a heap buffer overflow in `QuantizedResizeBilinear` by passing in invalid thresholds for the quantization:\n\n```python\nimport tensorflow as tf\n\nimages = tf.constant([], shape=[0], dtype=tf.qint32)\nsize = tf.constant([], shape=[0], dtype=tf.int32) \nmin = tf.constant([], dtype=tf.float32)\nmax = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.QuantizedResizeBilinear(images=images, size=size, min=min, max=max, align_corners=False, half_pixel_centers=False)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/50711818d2e61ccce012591eeb4fdf93a8496726\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc#L705-L706) assumes that the 2 arguments are always valid scalars and tries to access the numeric value directly:\n\n```cc\nconst float in_min = context->input(2).flat<float>()(0);\nconst float in_max = context->input(3).flat<float>()(0);\n```\n\nHowever, if any of these tensors is empty, then `.flat<T>()` is an empty buffer and accessing the element at position 0 results in overflow.\n\n### Patches \nWe have patched the issue in GitHub commit [f6c40f0c6cbf00d46c7717a26419f2062f2f8694](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694",
            "commit_sha":"f6c40f0c6cbf00d46c7717a26419f2062f2f8694",
            "patch":"SINGLE",
            "chain_ord":"['f6c40f0c6cbf00d46c7717a26419f2062f2f8694']",
            "before_first_fix_commit":"{'50711818d2e61ccce012591eeb4fdf93a8496726'}",
            "last_fix_commit":"f6c40f0c6cbf00d46c7717a26419f2062f2f8694",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/22\/2021, 00:00:39",
            "message":"Validate min and max arguments to `QuantizedResizeBilinear`.\n\nPiperOrigin-RevId: 369765091\nChange-Id: I33be8b78273ab7d08b97541692fe05cb7f94963a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 2, 'total': 10}",
            "files":"{'tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc': {'additions': 8, 'deletions': 2, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694\/tensorflow%2Fcore%2Fkernels%2Fquantized_resize_bilinear_op.cc', 'patch': '@@ -702,8 +702,14 @@ class QuantizedResizeBilinearOp : public OpKernel {\\n   }\\n \\n   void Compute(OpKernelContext* context) override {\\n-    const float in_min = context->input(2).flat<float>()(0);\\n-    const float in_max = context->input(3).flat<float>()(0);\\n+    const auto& in_min_tensor = context->input(2);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),\\n+                errors::InvalidArgument(\"min must be a scalar\"));\\n+    const float in_min = in_min_tensor.flat<float>()(0);\\n+    const auto& in_max_tensor = context->input(3);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_max_tensor.shape()),\\n+                errors::InvalidArgument(\"max must be a scalar\"));\\n+    const float in_max = in_max_tensor.flat<float>()(0);\\n \\n     ImageResizerState st(align_corners_, false);\\n     st.ValidateAndCreateOutput(context);'}}",
            "message_norm":"validate min and max arguments to `quantizedresizebilinear`.\n\npiperorigin-revid: 369765091\nchange-id: i33be8b78273ab7d08b97541692fe05cb7f94963a",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('369765091', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2791,
            "vuln_id":"GHSA-qpgx-64h2-gc3c",
            "cwe_id":"{'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/argoproj\/argo-events\/commit\/d0f66dbce78bc31923ca057b20fc722aa24ca961'}",
            "dataset":"osv",
            "summary":"Insecure path traversal in Git Trigger Source can lead to arbitrary file read ### Impact\nA path traversal issue was found in the (g *GitArtifactReader).Read() API. Read() calls into (g *GitArtifactReader).readFromRepository() that opens and reads the file that contains the trigger resource definition:\n\n```go\nfunc (g *GitArtifactReader) readFromRepository(r *git.Repository, dir string)\n```\n\nNo checks are made on this file at read time, which could lead an attacker to read files anywhere on the system. This could be achieved by either using symbolic links, or putting `..\/` in the path.\n\n### Patches\nA patch for this vulnerability has been released in the following Argo Events version:\n\nv1.7.1\n\n### Credits\nDisclosed by [Ada Logics](https:\/\/adalogics.com\/) in a security audit sponsored by CNCF and facilitated by OSTIF.\n\n### For more information\nOpen an issue in the [Argo Events issue tracker](https:\/\/github.com\/argoproj\/argo-events\/issues) or [discussions](https:\/\/github.com\/argoproj\/argo-events\/discussions)\nJoin us on [Slack](https:\/\/argoproj.github.io\/community\/join-slack) in channel #argo-events",
            "published_date":"2022-06-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/argoproj\/argo-events",
            "commit_href":"https:\/\/github.com\/argoproj\/argo-events\/commit\/d0f66dbce78bc31923ca057b20fc722aa24ca961",
            "commit_sha":"d0f66dbce78bc31923ca057b20fc722aa24ca961",
            "patch":"SINGLE",
            "chain_ord":"['d0f66dbce78bc31923ca057b20fc722aa24ca961']",
            "before_first_fix_commit":"{'e80ab9f9556f7f97346fb393e312f8a689ca21f8'}",
            "last_fix_commit":"d0f66dbce78bc31923ca057b20fc722aa24ca961",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/13\/2022, 03:18:33",
            "message":"fix: git artifactory arbitrary file read issue (#1965)\n\nSigned-off-by: Derek Wang <whynowy@gmail.com>",
            "author":"Derek Wang",
            "comments":null,
            "stats":"{'additions': 34, 'deletions': 2, 'total': 36}",
            "files":"{'sensors\/artifacts\/git.go': {'additions': 34, 'deletions': 2, 'changes': 36, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/argoproj\/argo-events\/raw\/d0f66dbce78bc31923ca057b20fc722aa24ca961\/sensors%2Fartifacts%2Fgit.go', 'patch': '@@ -20,6 +20,8 @@ import (\\n \\t\"fmt\"\\n \\t\"io\/ioutil\"\\n \\t\"os\"\\n+\\t\"path\"\\n+\\t\"strings\"\\n \\n \\t\"github.com\/go-git\/go-git\/v5\"\\n \\t\"github.com\/go-git\/go-git\/v5\/config\"\\n@@ -44,6 +46,8 @@ var (\\n \\t\\t\"refs\/*:refs\/*\",\\n \\t\\t\"HEAD:refs\/heads\/HEAD\",\\n \\t}\\n+\\n+\\tnotAllowedInPath = []string{\"..\", \"~\", \"\\\\\\\\\"}\\n )\\n \\n type GitArtifactReader struct {\\n@@ -52,6 +56,15 @@ type GitArtifactReader struct {\\n \\n \/\/ NewGitReader returns a new git reader\\n func NewGitReader(gitArtifact *v1alpha1.GitArtifact) (*GitArtifactReader, error) {\\n+\\tif gitArtifact == nil {\\n+\\t\\treturn nil, fmt.Errorf(\"nil git artifact\")\\n+\\t}\\n+\\tfor _, na := range notAllowedInPath {\\n+\\t\\tif strings.Contains(gitArtifact.FilePath, na) {\\n+\\t\\t\\treturn nil, fmt.Errorf(\"%q is not allowed in the filepath\", na)\\n+\\t\\t}\\n+\\t}\\n+\\n \\treturn &GitArtifactReader{\\n \\t\\tartifact: gitArtifact,\\n \\t}, nil\\n@@ -176,8 +189,16 @@ func (g *GitArtifactReader) readFromRepository(r *git.Repository, dir string) ([\\n \\t\\t\\treturn nil, fmt.Errorf(\"failed to pull latest updates. err: %+v\", err)\\n \\t\\t}\\n \\t}\\n-\\n-\\treturn ioutil.ReadFile(fmt.Sprintf(\"%s\/%s\", dir, g.artifact.FilePath))\\n+\\tfilePath := fmt.Sprintf(\"%s\/%s\", dir, g.artifact.FilePath)\\n+\\t\/\/ symbol link is not allowed due to security concern\\n+\\tisSymbolLink, err := isSymbolLink(filePath)\\n+\\tif err != nil {\\n+\\t\\treturn nil, err\\n+\\t}\\n+\\tif isSymbolLink {\\n+\\t\\treturn nil, fmt.Errorf(\"%q is a symbol link which is not allowed\", g.artifact.FilePath)\\n+\\t}\\n+\\treturn ioutil.ReadFile(filePath)\\n }\\n \\n func (g *GitArtifactReader) getBranchOrTag() *git.CheckoutOptions {\\n@@ -241,3 +262,14 @@ func (g *GitArtifactReader) Read() ([]byte, error) {\\n \\t}\\n \\treturn g.readFromRepository(r, cloneDir)\\n }\\n+\\n+func isSymbolLink(filepath string) (bool, error) {\\n+\\tfi, err := os.Lstat(path.Clean(filepath))\\n+\\tif err != nil {\\n+\\t\\treturn false, err\\n+\\t}\\n+\\tif fi.Mode()&os.ModeSymlink != 0 {\\n+\\t\\treturn true, nil\\n+\\t}\\n+\\treturn false, nil\\n+}'}}",
            "message_norm":"fix: git artifactory arbitrary file read issue (#1965)\n\nsigned-off-by: derek wang <whynowy@gmail.com>",
            "language":"en",
            "entities":"[('issue', 'FLAW', ''), ('#1965', 'ISSUE', ''), ('whynowy@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['sensors\/artifacts\/git.go'])",
            "num_files":1.0
        },
        {
            "index":54,
            "vuln_id":"GHSA-278g-rq84-9hmg",
            "cwe_id":"{'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d'}",
            "dataset":"osv",
            "summary":"`CHECK`-fail in `MapStage` ### Impact\nAn attacker can trigger a denial of service via a `CHECK`-fail in `tf.raw_ops.MapStage`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.MapStage(\n  key=tf.constant([], shape=[0, 0, 0, 0], dtype=tf.int64),\n  indices=tf.constant((0), dtype=tf.int32),\n  values=[tf.constant((0), dtype=tf.int32)],\n  dtypes=[tf.int32,\n  tf.int64],\n  capacity=0,\n  memory_limit=0,\n  container='',\n  shared_name='')\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/core\/kernels\/map_stage_op.cc#L513) does not check that the `key` input is a valid non-empty tensor.\n  \n### Patches\nWe have patched the issue in GitHub commit [d7de67733925de196ec8863a33445b73f9562d1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security  guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d7de67733925de196ec8863a33445b73f9562d1d",
            "commit_sha":"d7de67733925de196ec8863a33445b73f9562d1d",
            "patch":"SINGLE",
            "chain_ord":"['d7de67733925de196ec8863a33445b73f9562d1d']",
            "before_first_fix_commit":"{'102cacf28ad5a9e7f00b5a195d1995ead8870006'}",
            "last_fix_commit":"d7de67733925de196ec8863a33445b73f9562d1d",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/30\/2021, 05:23:46",
            "message":"Prevent a CHECK-fail due to empty tensor input in `map_stage_op.cc`\n\nPiperOrigin-RevId: 387737906\nChange-Id: Idc52df0c71c7ed6e2dd633b651a581932f277c8a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/map_stage_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d7de67733925de196ec8863a33445b73f9562d1d\/tensorflow%2Fcore%2Fkernels%2Fmap_stage_op.cc', 'patch': '@@ -527,6 +527,8 @@ class MapStageOp : public OpKernel {\\n     OP_REQUIRES_OK(ctx, ctx->input(\"key\", &key_tensor));\\n     OP_REQUIRES_OK(ctx, ctx->input(\"indices\", &indices_tensor));\\n     OP_REQUIRES_OK(ctx, ctx->input_list(\"values\", &values_tensor));\\n+    OP_REQUIRES(ctx, key_tensor->NumElements() > 0,\\n+                errors::InvalidArgument(\"key must not be empty\"));\\n \\n     \/\/ Create copy for insertion into Staging Area\\n     Tensor key(*key_tensor);'}}",
            "message_norm":"prevent a check-fail due to empty tensor input in `map_stage_op.cc`\n\npiperorigin-revid: 387737906\nchange-id: idc52df0c71c7ed6e2dd633b651a581932f277c8a",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('387737906', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/map_stage_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1077,
            "vuln_id":"GHSA-7rg4-266c-jqw6",
            "cwe_id":"{'CWE-330', 'CWE-352'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/centreon\/centreon\/commit\/626d3fb91cef402df0ebda5a8165d8f45da67c7a', 'https:\/\/github.com\/centreon\/centreon\/commit\/0261d4b250135eb513fdb7d52ba6fdeb19c6863f'}",
            "dataset":"osv",
            "summary":"Predictable CSRF tokens in centreon\/centreon An issue was discovered in Centreon-Web in Centreon Platform 20.10.0. The anti-CSRF token generation is predictable, which might allow CSRF attacks that add an admin user.",
            "published_date":"2021-06-08",
            "chain_len":2,
            "project":"https:\/\/github.com\/centreon\/centreon",
            "commit_href":"https:\/\/github.com\/centreon\/centreon\/commit\/626d3fb91cef402df0ebda5a8165d8f45da67c7a",
            "commit_sha":"626d3fb91cef402df0ebda5a8165d8f45da67c7a",
            "patch":"MULTI",
            "chain_ord":"['0261d4b250135eb513fdb7d52ba6fdeb19c6863f', '626d3fb91cef402df0ebda5a8165d8f45da67c7a']",
            "before_first_fix_commit":"{'9a69f217db9af7820823df14a5fa737d554aa2c8'}",
            "last_fix_commit":"626d3fb91cef402df0ebda5a8165d8f45da67c7a",
            "chain_ord_pos":2.0,
            "commit_datetime":"03\/24\/2021, 13:36:03",
            "message":"fix(sec): use openssl_random_pseudo_bytes to generate csrf token (#9612)\n\nRefs: MON-6772",
            "author":"Kevin Duret",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 5, 'total': 7}",
            "files":"{'www\/lib\/HTML\/QuickForm\/HTML_QuickFormCustom.php': {'additions': 2, 'deletions': 5, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/centreon\/centreon\/raw\/626d3fb91cef402df0ebda5a8165d8f45da67c7a\/www%2Flib%2FHTML%2FQuickForm%2FHTML_QuickFormCustom.php', 'patch': \"@@ -85,12 +85,9 @@ public function &createElement($elementType)\\n      *\/\\n     public function createSecurityToken()\\n     {\\n-        $token = md5(uniqid());\\n+        $token = bin2hex(openssl_random_pseudo_bytes(16));\\n \\n-        if (false === isset($_SESSION['x-centreon-token']) &&\\n-            (isset($_SESSION['x-centreon-token']) &&\\n-                false === is_array($_SESSION['x-centreon-token']))\\n-        ) {\\n+        if (!isset($_SESSION['x-centreon-token']) || !is_array($_SESSION['x-centreon-token'])) {\\n             $_SESSION['x-centreon-token'] = array();\\n             $_SESSION['x-centreon-token-generated-at'] = array();\\n         }\"}}",
            "message_norm":"fix(sec): use openssl_random_pseudo_bytes to generate csrf token (#9612)\n\nrefs: mon-6772",
            "language":"en",
            "entities":"[('fix(sec', 'ACTION', ''), ('csrf', 'SECWORD', ''), ('#9612', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['www\/lib\/HTML\/QuickForm\/HTML_QuickFormCustom.php'])",
            "num_files":1.0
        },
        {
            "index":1149,
            "vuln_id":"GHSA-864j-6qpp-cmrr",
            "cwe_id":"{'CWE-89'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/alexreisner\/geocoder\/commit\/dcdc3d8675411edce3965941a2ca7c441ca48613'}",
            "dataset":"osv",
            "summary":"SQL Injection in Geocoder sql.rb in Geocoder before 1.6.1 allows Boolean-based SQL injection when within_bounding_box is used in conjunction with untrusted sw_lat, sw_lng, ne_lat, or ne_lng data.",
            "published_date":"2020-06-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/alexreisner\/geocoder",
            "commit_href":"https:\/\/github.com\/alexreisner\/geocoder\/commit\/dcdc3d8675411edce3965941a2ca7c441ca48613",
            "commit_sha":"dcdc3d8675411edce3965941a2ca7c441ca48613",
            "patch":"SINGLE",
            "chain_ord":"['dcdc3d8675411edce3965941a2ca7c441ca48613']",
            "before_first_fix_commit":"{'1ff64c47b6fc21d9c5ce30a6549d9eaa67c81a9e'}",
            "last_fix_commit":"dcdc3d8675411edce3965941a2ca7c441ca48613",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/23\/2020, 16:08:45",
            "message":"Sanitize lat\/lon for SQL query.",
            "author":"Alex Reisner",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'lib\/geocoder\/sql.rb': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/alexreisner\/geocoder\/raw\/dcdc3d8675411edce3965941a2ca7c441ca48613\/lib%2Fgeocoder%2Fsql.rb', 'patch': '@@ -44,13 +44,13 @@ def approx_distance(latitude, longitude, lat_attr, lon_attr, options = {})\\n     end\\n \\n     def within_bounding_box(sw_lat, sw_lng, ne_lat, ne_lng, lat_attr, lon_attr)\\n-      spans = \"#{lat_attr} BETWEEN #{sw_lat} AND #{ne_lat} AND \"\\n+      spans = \"#{lat_attr} BETWEEN #{sw_lat.to_f} AND #{ne_lat.to_f} AND \"\\n       # handle box that spans 180 longitude\\n       if sw_lng.to_f > ne_lng.to_f\\n-        spans + \"(#{lon_attr} BETWEEN #{sw_lng} AND 180 OR \" +\\n-        \"#{lon_attr} BETWEEN -180 AND #{ne_lng})\"\\n+        spans + \"(#{lon_attr} BETWEEN #{sw_lng.to_f} AND 180 OR \" +\\n+        \"#{lon_attr} BETWEEN -180 AND #{ne_lng.to_f})\"\\n       else\\n-        spans + \"#{lon_attr} BETWEEN #{sw_lng} AND #{ne_lng}\"\\n+        spans + \"#{lon_attr} BETWEEN #{sw_lng.to_f} AND #{ne_lng.to_f}\"\\n       end\\n     end'}}",
            "message_norm":"sanitize lat\/lon for sql query.",
            "language":"fr",
            "entities":"[('sanitize', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/geocoder\/sql.rb'])",
            "num_files":1.0
        },
        {
            "index":3455,
            "vuln_id":"GHSA-xm2v-8rrw-w9pm",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535'}",
            "dataset":"osv",
            "summary":"Division by 0 in `Conv2DBackpropInput` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.Conv2DBackpropInput`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([52, 1, 1, 5], shape=[4], dtype=tf.int32)\nfilter_tensor = tf.constant([], shape=[0, 1, 5, 0], dtype=tf.float32)\nout_backprop = tf.constant([], shape=[52, 1, 1, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv2DBackpropInput(input_sizes=input_tensor, filter=filter_tensor,\n                               out_backprop=out_backprop, strides=[1, 1, 1, 1],\n                               use_cudnn_on_gpu=True, padding='SAME',\n                               explicit_paddings=[], data_format='NHWC',\n                               dilations=[1, 1, 1, 1])\n```                 \n                    \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/b40060c9f697b044e3107917c797ba052f4506ab\/tensorflow\/core\/kernels\/conv_grad_input_ops.h#L625-L655) does a division by a quantity that is controlled by the caller:\n\n```cc \n  const size_t size_A = output_image_size * dims.out_depth; \n  const size_t size_B = filter_total_size * dims.out_depth;\n  const size_t size_C = output_image_size * filter_total_size;\n  const size_t work_unit_size = size_A + size_B + size_C;\n  ...\n  const size_t shard_size =\n      use_parallel_contraction ? 1 :\n      (target_working_set_size + work_unit_size - 1) \/ work_unit_size;\n```\n\n### Patches\nWe have patched the issue in GitHub commit [2be2cdf3a123e231b16f766aa0e27d56b4606535](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2be2cdf3a123e231b16f766aa0e27d56b4606535",
            "commit_sha":"2be2cdf3a123e231b16f766aa0e27d56b4606535",
            "patch":"SINGLE",
            "chain_ord":"['2be2cdf3a123e231b16f766aa0e27d56b4606535']",
            "before_first_fix_commit":"{'b40060c9f697b044e3107917c797ba052f4506ab'}",
            "last_fix_commit":"2be2cdf3a123e231b16f766aa0e27d56b4606535",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/20\/2021, 01:13:04",
            "message":"Prevent yet another division by zero\n\nPiperOrigin-RevId: 369343977\nChange-Id: I1a60da4cf512e60fd91e069c16e026544632fe7f",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_input_ops.h': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/2be2cdf3a123e231b16f766aa0e27d56b4606535\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_input_ops.h', 'patch': '@@ -649,6 +649,11 @@ class Conv2DCustomBackpropInputOp : public OpKernel {\\n         dims.batch_size == 1 ||\\n         thread_work_unit_size >= min_thread_work_unit_size;\\n \\n+    OP_REQUIRES(\\n+        context, work_unit_size > 0,\\n+        errors::InvalidArgument(\"input, filter_sizes and out_backprop tensors \"\\n+                                \"must all have at least 1 element\"));\\n+\\n     const size_t shard_size =\\n         use_parallel_contraction\\n             ? 1'}}",
            "message_norm":"prevent yet another division by zero\n\npiperorigin-revid: 369343977\nchange-id: i1a60da4cf512e60fd91e069c16e026544632fe7f",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('369343977', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_input_ops.h'])",
            "num_files":1.0
        },
        {
            "index":647,
            "vuln_id":"GHSA-5jfw-35xp-5m42",
            "cwe_id":"{'CWE-124'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/pmmp\/BedrockProtocol\/commit\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac'}",
            "dataset":"osv",
            "summary":"Buffer length underflow in LoginPacket causing unchecked exceptions to be thrown ### Impact\n`LoginPacket` uses `BinaryStream->getLInt()` to read the lengths of JSON payloads it wants to decode. Unfortunately, `BinaryStream->getLInt()` returns a signed integer, meaning that a malicious client can craft a packet with a large uint32 value for payload buffer size (which would be interpreted as a negative signed int32), causing `BinaryStream->get()` to throw an exception.\n\nIn the context of PocketMine-MP, this leads to a server crash when the vulnerability is exploited.\n\n### Patches\ne3fce7632b94e83fd6a518a87dcaf6a11681c4ac\n\n### Workarounds\nThis can be worked around by registering a custom `LoginPacket` implementation into `PacketPool` which overrides [this code](https:\/\/github.com\/pmmp\/BedrockProtocol\/blob\/47532c95ea37d5f0365b23f734d70d943ff95295\/src\/LoginPacket.php#L54) to patch it.\n\n### For more information\n* Email us at [team@pmmp.io](mailto:team@pmmp.io)",
            "published_date":"2022-04-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/pmmp\/BedrockProtocol",
            "commit_href":"https:\/\/github.com\/pmmp\/BedrockProtocol\/commit\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac",
            "commit_sha":"e3fce7632b94e83fd6a518a87dcaf6a11681c4ac",
            "patch":"SINGLE",
            "chain_ord":"['e3fce7632b94e83fd6a518a87dcaf6a11681c4ac']",
            "before_first_fix_commit":"{'a740f6095b35278c0e0dac6db84a5e4d2456b113'}",
            "last_fix_commit":"e3fce7632b94e83fd6a518a87dcaf6a11681c4ac",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/01\/2022, 21:41:00",
            "message":"LoginPacket: fixed buffer length underflow in payload decoding",
            "author":"Dylan K. Taylor",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 2, 'total': 16}",
            "files":"{'src\/LoginPacket.php': {'additions': 14, 'deletions': 2, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pmmp\/BedrockProtocol\/raw\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac\/src%2FLoginPacket.php', 'patch': '@@ -54,7 +54,13 @@ protected function decodePayload(PacketSerializer $in) : void{\\n \\tprotected function decodeConnectionRequest(string $binary) : void{\\n \\t\\t$connRequestReader = new BinaryStream($binary);\\n \\n-\\t\\t$chainDataJson = json_decode($connRequestReader->get($connRequestReader->getLInt()));\\n+\\t\\t$chainDataJsonLength = $connRequestReader->getLInt();\\n+\\t\\tif($chainDataJsonLength <= 0){\\n+\\t\\t\\t\/\/technically this is always positive; the problem results because getLInt() is implicitly signed\\n+\\t\\t\\t\/\/this is inconsistent with many other methods, but we can\\'t do anything about that for now\\n+\\t\\t\\tthrow new PacketDecodeException(\"Length of chain data JSON must be positive\");\\n+\\t\\t}\\n+\\t\\t$chainDataJson = json_decode($connRequestReader->get($chainDataJsonLength));\\n \\t\\tif(!is_object($chainDataJson)){\\n \\t\\t\\tthrow new PacketDecodeException(\"Failed decoding chain data JSON: \" . json_last_error_msg());\\n \\t\\t}\\n@@ -68,7 +74,13 @@ protected function decodeConnectionRequest(string $binary) : void{\\n \\t\\t}\\n \\n \\t\\t$this->chainDataJwt = $chainData;\\n-\\t\\t$this->clientDataJwt = $connRequestReader->get($connRequestReader->getLInt());\\n+\\t\\t$clientDataJwtLength = $connRequestReader->getLInt();\\n+\\t\\tif($clientDataJwtLength <= 0){\\n+\\t\\t\\t\/\/technically this is always positive; the problem results because getLInt() is implicitly signed\\n+\\t\\t\\t\/\/this is inconsistent with many other methods, but we can\\'t do anything about that for now\\n+\\t\\t\\tthrow new PacketDecodeException(\"Length of clientData JWT must be positive\");\\n+\\t\\t}\\n+\\t\\t$this->clientDataJwt = $connRequestReader->get($clientDataJwtLength);\\n \\t}\\n \\n \\tprotected function encodePayload(PacketSerializer $out) : void{'}}",
            "message_norm":"loginpacket: fixed buffer length underflow in payload decoding",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('underflow', 'SECWORD', ''), ('decoding', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/LoginPacket.php'])",
            "num_files":1.0
        },
        {
            "index":2961,
            "vuln_id":"GHSA-rjmf-p882-645m",
            "cwe_id":"{'CWE-295'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/mongodb\/libmongocrypt\/commit\/76365515ff8754b9f705e56428dd0d7efa7f541b'}",
            "dataset":"osv",
            "summary":"Improper Certificate Validation A specific version of the Node.js mongodb-client-encryption module does not perform correct validation of the KMS server\u2019s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Node.js driver and the KMS service rendering client-side field level encryption (CSFLE) ineffective. This issue was discovered during internal testing and affects mongodb-client-encryption module version 1.2.0, which was available from 2021-Jan-29 and deprecated in the NPM Registry on 2021-Feb-04. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services from applications residing inside the AWS, GCP, and Azure nework fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don\u2019t use Field Level Encryption.",
            "published_date":"2021-04-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/mongodb\/libmongocrypt",
            "commit_href":"https:\/\/github.com\/mongodb\/libmongocrypt\/commit\/76365515ff8754b9f705e56428dd0d7efa7f541b",
            "commit_sha":"76365515ff8754b9f705e56428dd0d7efa7f541b",
            "patch":"SINGLE",
            "chain_ord":"['76365515ff8754b9f705e56428dd0d7efa7f541b']",
            "before_first_fix_commit":"{'30d8adc205bffcc9764e4e556a25146687183751'}",
            "last_fix_commit":"76365515ff8754b9f705e56428dd0d7efa7f541b",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/05\/2021, 23:37:36",
            "message":"fix: always authorize TLS endpoints, use servername for SNI (#159)\n\nTLS endpoints should always be authorized. \r\nIn order to properly communicate with GCP's KMS servers\r\nwe need to provide a `servername`, so the endpoint can serve the\r\ncorrect TLS certificate.",
            "author":"Matt Broadstone",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bindings\/node\/lib\/stateMachine.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mongodb\/libmongocrypt\/raw\/76365515ff8754b9f705e56428dd0d7efa7f541b\/bindings%2Fnode%2Flib%2FstateMachine.js', 'patch': \"@@ -217,7 +217,7 @@ module.exports = function(modules) {\\n     kmsRequest(request) {\\n       const parsedUrl = request.endpoint.split(':');\\n       const port = parsedUrl[1] != null ? Number.parseInt(parsedUrl[1], 10) : HTTPS_PORT;\\n-      const options = { host: parsedUrl[0], port, rejectUnauthorized: false };\\n+      const options = { host: parsedUrl[0], servername: parsedUrl[0], port };\\n       const message = request.message;\\n \\n       return new Promise((resolve, reject) => {\"}}",
            "message_norm":"fix: always authorize tls endpoints, use servername for sni (#159)\n\ntls endpoints should always be authorized. \r\nin order to properly communicate with gcp's kms servers\r\nwe need to provide a `servername`, so the endpoint can serve the\r\ncorrect tls certificate.",
            "language":"en",
            "entities":"[('tls', 'SECWORD', ''), ('servername', 'SECWORD', ''), ('#159', 'ISSUE', ''), ('tls', 'SECWORD', ''), ('servers', 'SECWORD', ''), ('servername', 'SECWORD', ''), ('tls', 'SECWORD', ''), ('certificate', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bindings\/node\/lib\/stateMachine.js'])",
            "num_files":1.0
        },
        {
            "index":202,
            "vuln_id":"GHSA-35m5-8cvj-8783",
            "cwe_id":"{'CWE-916', 'CWE-327', 'CWE-328'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/commit\/e652d56ac60eadfc26489ab83927af13a9b9d8ce'}",
            "dataset":"osv",
            "summary":"Improper hashing in enrocrypt ### Impact\nThe vulnerability is we used MD5 hashing Algorithm In our hashing file. If anyone who is a beginner(and doesn't know about hashes)  can face problems as MD5 is considered a Insecure Hashing Algorithm. \n\n### Patches\nThe vulnerability is patched in v1.1.4 of the product, the users can upgrade to version 1.1.4.\n\n### Workarounds\nIf u specifically want a version and don't want to upgrade, you can remove the `MD5` hashing function from the file `hashing.py` and this vulnerability will be gone\n\n### References\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/916\/\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/327\/\nhttps:\/\/www.cybersecurity-help.cz\/vdb\/cwe\/328\/\nhttps:\/\/www.section.io\/engineering-education\/what-is-md5\/\nhttps:\/\/www.johndcook.com\/blog\/2019\/01\/24\/reversing-an-md5-hash\/\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [**Enrocrypt's Official Repo**](http:\/\/www.github.com\/Morgan-Phoenix\/EnroCrypt)\n* Create a Discussion in  [**Enrocrypt's Official Repo**](http:\/\/www.github.com\/Morgan-Phoenix\/EnroCrypt)",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt",
            "commit_href":"https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/commit\/e652d56ac60eadfc26489ab83927af13a9b9d8ce",
            "commit_sha":"e652d56ac60eadfc26489ab83927af13a9b9d8ce",
            "patch":"SINGLE",
            "chain_ord":"['e652d56ac60eadfc26489ab83927af13a9b9d8ce']",
            "before_first_fix_commit":"{'d02050267cecbe4f2877a07ca8a930129528ac05'}",
            "last_fix_commit":"e652d56ac60eadfc26489ab83927af13a9b9d8ce",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/06\/2021, 14:04:45",
            "message":"Fixed GHSA-35m5-8cvj-8783",
            "author":"Morgan-Phoenix",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 5, 'total': 5}",
            "files":"{'enrocrypt\/hashing.py': {'additions': 0, 'deletions': 5, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Morgan-Phoenix\/EnroCrypt\/raw\/e652d56ac60eadfc26489ab83927af13a9b9d8ce\/enrocrypt%2Fhashing.py', 'patch': '@@ -66,11 +66,6 @@ def SHA244(self,data:str):\\n         hash = str(sha.digest())\\n         return self.__Salt(hash,salt=self.salt)\\n \\n-    def MD5(self,data:str):\\n-        sha = hashlib.md5(bytes(data.encode()))\\n-        hash = str(sha.digest())\\n-        return self.__Salt(hash,salt=self.salt)\\n-\\n     def SHA384(self,data:str):\\n         sha = hashlib.sha384(bytes(data.encode()))\\n         hash = str(sha.digest())'}}",
            "message_norm":"fixed ghsa-35m5-8cvj-8783",
            "language":"ca",
            "entities":"[('fixed', 'ACTION', ''), ('ghsa-35m5-8cvj-8783', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['enrocrypt\/hashing.py'])",
            "num_files":1.0
        },
        {
            "index":277,
            "vuln_id":"GHSA-3mpr-hq3p-49h9",
            "cwe_id":"{'CWE-471'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jonschlinkert\/mixin-deep\/commit\/578b0bc5e74e14de9ef4975f504dc698796bdf9c'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in mixin-deep Versions of `mixin-deep` before 1.3.1 are vulnerable to prototype pollution via merging functions.\n\n\n## Recommendation\n\nUpdate to version 1.3.1 or later.",
            "published_date":"2018-07-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/jonschlinkert\/mixin-deep",
            "commit_href":"https:\/\/github.com\/jonschlinkert\/mixin-deep\/commit\/578b0bc5e74e14de9ef4975f504dc698796bdf9c",
            "commit_sha":"578b0bc5e74e14de9ef4975f504dc698796bdf9c",
            "patch":"SINGLE",
            "chain_ord":"['578b0bc5e74e14de9ef4975f504dc698796bdf9c']",
            "before_first_fix_commit":"{'7705bdf88ff0263242c07c824d20526203876668'}",
            "last_fix_commit":"578b0bc5e74e14de9ef4975f504dc698796bdf9c",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2018, 16:04:06",
            "message":"exclude __proto__",
            "author":"doowb",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'index.js': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/mixin-deep\/raw\/578b0bc5e74e14de9ef4975f504dc698796bdf9c\/index.js', 'patch': \"@@ -23,6 +23,10 @@ function mixinDeep(target, objects) {\\n  *\/\\n \\n function copy(val, key) {\\n+  if (key === '__proto__') {\\n+    return;\\n+  }\\n+\\n   var obj = this[key];\\n   if (isObject(val) && isObject(obj)) {\\n     mixinDeep(obj, val);\"}}",
            "message_norm":"exclude __proto__",
            "language":"pt",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":2689,
            "vuln_id":"GHSA-q3x2-jvp3-wj78",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/975fc1d6d3fba598ee550849ceb81af23ce72e08'}",
            "dataset":"osv",
            "summary":"Unrestricted XML files leading to cross-site scripting in Microweber Microweber prior to 1.2.12 allows unrestricted upload of XML files, which malicious actors can exploit to cause a stored cross-site scripting attack.",
            "published_date":"2022-03-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/975fc1d6d3fba598ee550849ceb81af23ce72e08",
            "commit_sha":"975fc1d6d3fba598ee550849ceb81af23ce72e08",
            "patch":"SINGLE",
            "chain_ord":"['975fc1d6d3fba598ee550849ceb81af23ce72e08']",
            "before_first_fix_commit":"{'27622f02c39d4cce67c43e5da38a6ab504202e13'}",
            "last_fix_commit":"975fc1d6d3fba598ee550849ceb81af23ce72e08",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 15:29:28",
            "message":"Update Files.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/975fc1d6d3fba598ee550849ceb81af23ce72e08\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -1154,11 +1154,11 @@ function get_allowed_files_extensions_for_upload($fileTypes = 'images', $returnA\\n                 break;\\n             case 'file':\\n             case 'files':\\n-                $are_allowed .= ',doc,docx,pdf,json,rtf,txt,zip,gzip,rar,cad,xml,psd,xlsx,csv,7z';\\n+                $are_allowed .= ',doc,docx,pdf,json,rtf,txt,zip,gzip,rar,cad,psd,xlsx,csv,7z'; \\n                 break;\\n             case 'documents':\\n             case 'doc':\\n-                $are_allowed .= ',doc,docx,pdf,log,msg,odt,pages,rtf,tex,txt,wpd,wps,pps,ppt,pptx,xml,xlr,xls,xlsx';\\n+                $are_allowed .= ',doc,docx,pdf,log,msg,odt,pages,rtf,tex,txt,wpd,wps,pps,ppt,pptx,xlr,xls,xlsx';\\n                 break;\\n             case 'archives':\\n             case 'arc':\"}}",
            "message_norm":"update files.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])",
            "num_files":1.0
        },
        {
            "index":965,
            "vuln_id":"GHSA-75f6-78jr-4656",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `EditDistance` ### Impact\nAn attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.EditDistance`: \n    \n```python\nimport tensorflow as tf\n\nhypothesis_indices = tf.constant([247, 247, 247], shape=[1, 3], dtype=tf.int64)\nhypothesis_values = tf.constant([-9.9999], shape=[1], dtype=tf.float32)\nhypothesis_shape = tf.constant([0, 0, 0], shape=[3], dtype=tf.int64)\ntruth_indices = tf.constant([], shape=[0, 3], dtype=tf.int64)\ntruth_values = tf.constant([], shape=[0], dtype=tf.float32)\ntruth_shape = tf.constant([0, 0, 0], shape=[3], dtype=tf.int64)\n\ntf.raw_ops.EditDistance(\n    hypothesis_indices=hypothesis_indices, hypothesis_values=hypothesis_values,\n    hypothesis_shape=hypothesis_shape, truth_indices=truth_indices,\n    truth_values=truth_values, truth_shape=truth_shape, normalize=True)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/79865b542f9ffdc9caeb255631f7c56f1d4b6517\/tensorflow\/core\/kernels\/edit_distance_op.cc#L103-L159) has incomplete validation of the input parameters.\n\nIn the above scenario, an attacker causes an allocation of an empty tensor for the output:\n\n```cc\nOP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));\nauto output_t = output->flat<float>();\noutput_t.setZero();\n```\n\nBecause `output_shape` has 0 elements, the result of `output->flat<T>()` has an empty buffer, so calling `setZero` would result in a null dereference.\n\n### Patches\nWe have patched the issue in GitHub commit [f4c364a5d6880557f6f5b6eb5cee2c407f0186b3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
            "commit_sha":"f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
            "patch":"SINGLE",
            "chain_ord":"['f4c364a5d6880557f6f5b6eb5cee2c407f0186b3']",
            "before_first_fix_commit":"{'79865b542f9ffdc9caeb255631f7c56f1d4b6517'}",
            "last_fix_commit":"f4c364a5d6880557f6f5b6eb5cee2c407f0186b3",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 01:06:03",
            "message":"Fix multiple issues in EditDistance\n\nPiperOrigin-RevId: 372033948\nChange-Id: Ieb957c29894af05bdfeb1a0402fced808dfcfd7b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 47, 'deletions': 0, 'total': 47}",
            "files":"{'tensorflow\/core\/kernels\/edit_distance_op.cc': {'additions': 47, 'deletions': 0, 'changes': 47, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f4c364a5d6880557f6f5b6eb5cee2c407f0186b3\/tensorflow%2Fcore%2Fkernels%2Fedit_distance_op.cc', 'patch': '@@ -64,6 +64,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\\n     return errors::InvalidArgument(\\n         \"truth_shape should be a vector, but got shape: \",\\n         truth_shape.shape().DebugString());\\n+  if (hypothesis_values.NumElements() != hypothesis_indices.dim_size(0))\\n+    return errors::InvalidArgument(\\n+        \"Expected hypothesis_values.NumElements == \"\\n+        \"#rows(hypothesis_indices), their shapes are: \",\\n+        hypothesis_values.shape().DebugString(), \" and \",\\n+        hypothesis_indices.shape().DebugString());\\n   if (hypothesis_shape.NumElements() != hypothesis_indices.dim_size(1))\\n     return errors::InvalidArgument(\\n         \"Expected hypothesis_shape.NumElements == \"\\n@@ -75,6 +81,12 @@ Status ValidateShapes(OpKernelContext* ctx, const Tensor& hypothesis_indices,\\n         \"Input SparseTensors must have rank at least 2, but truth_shape \"\\n         \"rank is: \",\\n         truth_shape.NumElements());\\n+  if (truth_values.NumElements() != truth_indices.dim_size(0))\\n+    return errors::InvalidArgument(\\n+        \"Expected truth_values.NumElements == \"\\n+        \"#rows(truth_indices), their shapes are: \",\\n+        truth_values.shape().DebugString(), \" and \",\\n+        truth_indices.shape().DebugString());\\n   if (truth_shape.NumElements() != truth_indices.dim_size(1))\\n     return errors::InvalidArgument(\\n         \"Expected truth_shape.NumElements == \"\\n@@ -153,6 +165,11 @@ class EditDistanceOp : public OpKernel {\\n       output_shape.AddDim(std::max(hypothesis_st_shape.dim_size(d),\\n                                    truth_st_shape.dim_size(d)));\\n     }\\n+    const auto output_elements = output_shape.num_elements();\\n+    OP_REQUIRES(\\n+        ctx, output_elements > 0,\\n+        errors::InvalidArgument(\"Got output shape \", output_shape.DebugString(),\\n+                                \" which has 0 elements\"));\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(\"output\", output_shape, &output));\\n@@ -185,6 +202,12 @@ class EditDistanceOp : public OpKernel {\\n       if (g_truth == g_hypothesis) {\\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) =\\n             gtl::LevenshteinDistance<T>(truth_seq, hypothesis_seq, cmp);\\n         if (normalize_) output_t(loc) \/= truth_seq.size();\\n@@ -194,6 +217,12 @@ class EditDistanceOp : public OpKernel {\\n       } else if (g_truth > g_hypothesis) {  \/\/ zero-length truth\\n         auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) = hypothesis_seq.size();\\n         if (normalize_ && output_t(loc) != 0.0f) {\\n           output_t(loc) = std::numeric_limits<float>::infinity();\\n@@ -202,6 +231,12 @@ class EditDistanceOp : public OpKernel {\\n       } else {  \/\/ zero-length hypothesis\\n         auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                       output_strides.begin(), int64{0});\\n+        OP_REQUIRES(\\n+            ctx, loc < output_elements,\\n+            errors::Internal(\"Got an inner product \", loc,\\n+                             \" which would require in writing to outside of \"\\n+                             \"the buffer for the output tensor (max elements \",\\n+                             output_elements, \")\"));\\n         output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\\n         ++truth_iter;\\n       }\\n@@ -212,6 +247,12 @@ class EditDistanceOp : public OpKernel {\\n       auto hypothesis_seq = hypothesis_j.values<T>();\\n       auto loc = std::inner_product(g_hypothesis.begin(), g_hypothesis.end(),\\n                                     output_strides.begin(), int64{0});\\n+      OP_REQUIRES(\\n+          ctx, loc < output_elements,\\n+          errors::Internal(\"Got an inner product \", loc,\\n+                           \" which would require in writing to outside of the \"\\n+                           \"buffer for the output tensor (max elements \",\\n+                           output_elements, \")\"));\\n       output_t(loc) = hypothesis_seq.size();\\n       if (normalize_ && output_t(loc) != 0.0f) {\\n         output_t(loc) = std::numeric_limits<float>::infinity();\\n@@ -224,6 +265,12 @@ class EditDistanceOp : public OpKernel {\\n       auto truth_seq = truth_i.values<T>();\\n       auto loc = std::inner_product(g_truth.begin(), g_truth.end(),\\n                                     output_strides.begin(), int64{0});\\n+      OP_REQUIRES(\\n+          ctx, loc < output_elements,\\n+          errors::Internal(\"Got an inner product \", loc,\\n+                           \" which would require in writing to outside of the \"\\n+                           \"buffer for the output tensor (max elements \",\\n+                           output_elements, \")\"));\\n       output_t(loc) = (normalize_) ? 1.0 : truth_seq.size();\\n       ++truth_iter;\\n     }'}}",
            "message_norm":"fix multiple issues in editdistance\n\npiperorigin-revid: 372033948\nchange-id: ieb957c29894af05bdfeb1a0402fced808dfcfd7b",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('372033948', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/edit_distance_op.cc'])",
            "num_files":1.0
        },
        {
            "index":478,
            "vuln_id":"GHSA-4rcq-jv2f-898j",
            "cwe_id":"{'CWE-684'}",
            "score":3.5,
            "chain":"{'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/d28ed758d077a5bf19ddac4da468f7224114df23', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/4020210b193f77cf1785b21717f6ef7c5de5f0f8', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/f5d801251aa5436aff44660c87d7013e29ac5864', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/6821c236f9ae23adf21d46ce0d56768ac8d0c467', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/a45ca9c788f648d10cccce2af41405bf25ee2948', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/021ab572a319ca3db5907a33a59774f502b3b975', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/9bd1cf585fccdfe8318fff7af793730e74a04db3', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/1b7946ed14b386a24db050f2d6dba81ba6518755', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/2281a205c3e70ec20f35ec8fafecee0d5c4f3478', 'https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/19f01bb42d02da539446a52a25bb0c1232b86327'}",
            "dataset":"osv",
            "summary":"Incorrect Provision of Specified Functionality in qutebrowser # Description\n\nAfter a certificate error was overridden by the user, qutebrowser displays the URL as yellow (`colors.statusbar.url.warn.fg`). However, when the affected website was subsequently loaded again, the URL was mistakenly displayed as green (`colors.statusbar.url.success_https`). While the user already has seen a certificate error prompt at this point (or set `content.ssl_strict` to `false` which is not recommended), this could still provide a false sense of security.\n\n# Affected versions and patches\n\nAll versions of qutebrowser are believed to be affected, though versions before v0.11.x couldn't be tested.\n\nThe issue is fixed in qutebrowser v1.11.1 (pending release) and v1.12.0 (unreleased). Backported patches for older versions are available, but no further releases are planned.\n\n# Mitigation\n\nIf you are unable to upgrade:\n\n- Treat any host with a certificate exception as insecure, ignoring the URL color\n- Or set `content.ssl_strict` to `True` (instead of `'ask'`), preventing certificate exceptions\n\n# References\n\n- qutebrowser issue: https:\/\/github.com\/qutebrowser\/qutebrowser\/issues\/5403\n- Fix (master branch): https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/021ab572a319ca3db5907a33a59774f502b3b975\n- Related issue for KDE Falkon: https:\/\/bugs.kde.org\/show_bug.cgi?id=420902\n- Related issue for eric6 Web Browser: https:\/\/tracker.die-offenbachs.homelinux.org\/eric\/issue328 (fixed in eric6 20.6)",
            "published_date":"2020-05-08",
            "chain_len":10,
            "project":"https:\/\/github.com\/qutebrowser\/qutebrowser",
            "commit_href":"https:\/\/github.com\/qutebrowser\/qutebrowser\/commit\/1b7946ed14b386a24db050f2d6dba81ba6518755",
            "commit_sha":"1b7946ed14b386a24db050f2d6dba81ba6518755",
            "patch":"MULTI",
            "chain_ord":"['d28ed758d077a5bf19ddac4da468f7224114df23', '9bd1cf585fccdfe8318fff7af793730e74a04db3', '6821c236f9ae23adf21d46ce0d56768ac8d0c467', '4020210b193f77cf1785b21717f6ef7c5de5f0f8', 'f5d801251aa5436aff44660c87d7013e29ac5864', 'a45ca9c788f648d10cccce2af41405bf25ee2948', '2281a205c3e70ec20f35ec8fafecee0d5c4f3478', '19f01bb42d02da539446a52a25bb0c1232b86327', '021ab572a319ca3db5907a33a59774f502b3b975', '1b7946ed14b386a24db050f2d6dba81ba6518755']",
            "before_first_fix_commit":"{'e15af6cd92d523b22fe9774b653a859b9e33df41'}",
            "last_fix_commit":"1b7946ed14b386a24db050f2d6dba81ba6518755",
            "chain_ord_pos":10.0,
            "commit_datetime":"05\/02\/2020, 17:03:20",
            "message":"Update changelog",
            "author":"Florian Bruhin",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 1, 'total': 11}",
            "files":"{'doc\/changelog.asciidoc': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/qutebrowser\/qutebrowser\/raw\/1b7946ed14b386a24db050f2d6dba81ba6518755\/doc%2Fchangelog.asciidoc', 'patch': '@@ -45,7 +45,16 @@ Fixed\\n v1.11.1 (unreleased)\\n --------------------\\n \\n-No changes yet.\\n+Security\\n+~~~~~~~~\\n+\\n+- After a certificate error was overridden by the user, qutebrowser displays\\n+  the URL as yellow (`colors.statusbar.url.warn.fg`). However, when the\\n+  affected website was subsequently loaded again, the URL was mistakenly\\n+  displayed as green (`colors.statusbar.url.success_https`). While the user\\n+  already has seen a certificate error prompt at this point (or set\\n+  `content.ssl_strict` to `false` which is not recommended), this could still\\n+  provide a false sense of security. This is now fixed.\\n \\n v1.11.0 (2020-04-27)\\n --------------------'}}",
            "message_norm":"update changelog",
            "language":"nl",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['doc\/changelog.asciidoc'])",
            "num_files":1.0
        },
        {
            "index":1228,
            "vuln_id":"GHSA-8m49-2xj8-67v9",
            "cwe_id":"{'CWE-59'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/waycrate\/swhkd\/commit\/0b620a09605afb815c6d8d8953bbb7a10a8c0575'}",
            "dataset":"osv",
            "summary":"Data Loss\/Denial of Service in SWHKD SWHKD 1.1.5 unsafely uses the \/tmp\/swhks.pid pathname. There can be data loss or a denial of service. A patch is available on the `1.1.0` branch of the repository.",
            "published_date":"2022-03-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/waycrate\/swhkd",
            "commit_href":"https:\/\/github.com\/waycrate\/swhkd\/commit\/0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "commit_sha":"0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "patch":"SINGLE",
            "chain_ord":"['0b620a09605afb815c6d8d8953bbb7a10a8c0575']",
            "before_first_fix_commit":"{'f70b99dd575fab79d8a942111a6980431f006818'}",
            "last_fix_commit":"0b620a09605afb815c6d8d8953bbb7a10a8c0575",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/25\/2022, 15:20:01",
            "message":"[patch] CVE-2022-27816",
            "author":"Shinyzenith",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/server.rs': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/waycrate\/swhkd\/raw\/0b620a09605afb815c6d8d8953bbb7a10a8c0575\/src%2Fserver.rs', 'patch': '@@ -12,7 +12,7 @@ fn main() -> std::io::Result<()> {\\n     env::set_var(\"RUST_LOG\", \"swhks=trace\");\\n     env_logger::init();\\n \\n-    let pid_file_path = String::from(\"\/tmp\/swhks.pid\");\\n+    let pid_file_path = String::from(format!(\"\/run\/user\/{}\/swhks.pid\", unistd::Uid::current()));\\n     let sock_file_path = String::from(format!(\"\/run\/user\/{}\/swhkd.sock\", unistd::Uid::current()));\\n \\n     if Path::new(&pid_file_path).exists() {'}}",
            "message_norm":"[patch] cve-2022-27816",
            "language":"en",
            "entities":"[('cve-2022-27816', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/server.rs'])",
            "num_files":1.0
        },
        {
            "index":3095,
            "vuln_id":"GHSA-vcfc-9wcp-j623",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/a0e0d7de20f5d1712f1793f925496def4383c610'}",
            "dataset":"osv",
            "summary":"Cross site scripting attack in ServiceStack Framework ServiceStack ServiceStack Framework 4.5.14 is affected by: Cross Site Scripting (XSS). The impact is: JavaScrpit is reflected in the server response, hence executed by the browser. The component is: the query used in the GET request is prone. The attack vector is: Since there is no server-side validation and If Browser encoding is bypassed, the victim is affected when opening a crafted URL. The fixed version is: 5.2.0.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/ServiceStack\/ServiceStack",
            "commit_href":"https:\/\/github.com\/ServiceStack\/ServiceStack\/commit\/a0e0d7de20f5d1712f1793f925496def4383c610",
            "commit_sha":"a0e0d7de20f5d1712f1793f925496def4383c610",
            "patch":"SINGLE",
            "chain_ord":"['a0e0d7de20f5d1712f1793f925496def4383c610']",
            "before_first_fix_commit":"{'2c6fbe4554014ead15b7b188bb748b655b30807c'}",
            "last_fix_commit":"a0e0d7de20f5d1712f1793f925496def4383c610",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/17\/2018, 15:05:59",
            "message":"HtmlEncode Raw URL in HtmlFormat snapshot",
            "author":"Demis Bellot",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 2, 'total': 5}",
            "files":"{'src\/ServiceStack\/Formats\/HtmlFormat.cs': {'additions': 3, 'deletions': 2, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ServiceStack\/ServiceStack\/raw\/a0e0d7de20f5d1712f1793f925496def4383c610\/src%2FServiceStack%2FFormats%2FHtmlFormat.cs', 'patch': '@@ -90,12 +90,13 @@ public async Task SerializeToStreamAsync(IRequest req, object response, Stream o\\n             {\\n                 \/\/ Serialize then escape any potential script tags to avoid XSS when displaying as HTML\\n                 var json = JsonDataContractSerializer.Instance.SerializeToString(dto) ?? \"null\";\\n-                json = json.Replace(\"<\", \"&lt;\").Replace(\">\", \"&gt;\");\\n+                json = json.HtmlEncode();\\n \\n                 var url = req.ResolveAbsoluteUrl()\\n                     .Replace(\"format=html\", \"\")\\n                     .Replace(\"format=shtm\", \"\")\\n-                    .TrimEnd(\\'?\\', \\'&\\');\\n+                    .TrimEnd(\\'?\\', \\'&\\')\\n+                    .HtmlEncode();\\n \\n                 url += url.Contains(\"?\") ? \"&\" : \"?\";'}}",
            "message_norm":"htmlencode raw url in htmlformat snapshot",
            "language":"en",
            "entities":"[('htmlencode', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/ServiceStack\/Formats\/HtmlFormat.cs'])",
            "num_files":1.0
        },
        {
            "index":2229,
            "vuln_id":"GHSA-jc8m-cxhj-668x",
            "cwe_id":"{'CWE-307'}",
            "score":8.3,
            "chain":"{'https:\/\/github.com\/Sorcery\/sorcery\/commit\/0f116d223826895a73b12492f17486e5d54ab7a7'}",
            "dataset":"osv",
            "summary":"Improper Restriction of Excessive Authentication Attempts in Sorcery ### Impact\nBrute force vulnerability when using password authentication via Sorcery. The brute force protection submodule will prevent a brute force attack for the defined lockout period, but once expired protection will not be re-enabled until a user or malicious actor logs in successfully. This does not affect users that do not use the built-in brute force protection submodule, nor users that use permanent account lockout.\n\n### Patches\nPatched as of version `0.15.0`.\n\n### Workarounds\nCurrently no workarounds, other than monkey patching the authenticate method provided by Sorcery or upgrading to version `0.15.0`.",
            "published_date":"2020-05-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/Sorcery\/sorcery",
            "commit_href":"https:\/\/github.com\/Sorcery\/sorcery\/commit\/0f116d223826895a73b12492f17486e5d54ab7a7",
            "commit_sha":"0f116d223826895a73b12492f17486e5d54ab7a7",
            "patch":"SINGLE",
            "chain_ord":"['0f116d223826895a73b12492f17486e5d54ab7a7']",
            "before_first_fix_commit":"{'6b72ca36cf389804963e2553ccbb3da000518e51'}",
            "last_fix_commit":"0f116d223826895a73b12492f17486e5d54ab7a7",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/02\/2020, 20:56:58",
            "message":"Fix brute force vuln due to callbacks not being ran (#235)\n\nThe authenticate method previously would return before callbacks executed if an\r\ninvalid password was provided, which causes the brute force protection to only\r\nwork for the first lockout period, and only resets after a successful login.\r\n\r\nFixes #231",
            "author":"Josh Buker",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'lib\/sorcery\/model.rb': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Sorcery\/sorcery\/raw\/0f116d223826895a73b12492f17486e5d54ab7a7\/lib%2Fsorcery%2Fmodel.rb', 'patch': '@@ -102,10 +102,6 @@ def authenticate(*credentials, &block)\\n \\n         set_encryption_attributes\\n \\n-        unless user.valid_password?(credentials[1])\\n-          return authentication_response(user: user, failure: :invalid_password, &block)\\n-        end\\n-\\n         if user.respond_to?(:active_for_authentication?) && !user.active_for_authentication?\\n           return authentication_response(user: user, failure: :inactive, &block)\\n         end\\n@@ -118,6 +114,10 @@ def authenticate(*credentials, &block)\\n           end\\n         end\\n \\n+        unless user.valid_password?(credentials[1])\\n+          return authentication_response(user: user, failure: :invalid_password, &block)\\n+        end\\n+\\n         authentication_response(user: user, return_value: user, &block)\\n       end'}}",
            "message_norm":"fix brute force vuln due to callbacks not being ran (#235)\n\nthe authenticate method previously would return before callbacks executed if an\r\ninvalid password was provided, which causes the brute force protection to only\r\nwork for the first lockout period, and only resets after a successful login.\r\n\r\nfixes #231",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#235', 'ISSUE', ''), ('password', 'SECWORD', ''), ('protection', 'SECWORD', ''), ('login', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#231', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/sorcery\/model.rb'])",
            "num_files":1.0
        },
        {
            "index":2628,
            "vuln_id":"GHSA-pqrv-8r2f-7278",
            "cwe_id":"{'CWE-754'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439'}",
            "dataset":"osv",
            "summary":"Crash due to erroneous `StatusOr` in TensorFlow ### Impact\nA `GraphDef` from a TensorFlow `SavedModel` can be maliciously altered to cause a TensorFlow process to crash due to encountering [a `StatusOr` value that is an error and forcibly extracting the value from it](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/274df9b02330b790aa8de1cee164b70f72b9b244\/tensorflow\/core\/graph\/graph.cc#L560-L567):\n\n```cc\n  if (op_reg_data->type_ctor != nullptr) {\n    VLOG(3) << \"AddNode: found type constructor for \" << node_def.name();\n    const auto ctor_type =\n        full_type::SpecializeType(AttrSlice(node_def), op_reg_data->op_def);\n    const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();\n    if (ctor_typedef.type_id() != TFT_UNSET) {\n      *(node_def.mutable_experimental_type()) = ctor_typedef;\n    }\n  }\n```   \n      \nIf `ctor_type` is an error status, `ValueOrDie` results in a crash.\n        \n### Patches\nWe have patched the issue in GitHub commit [955059813cc325dc1db5e2daa6221271406d4439](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439).\n  \nWe have patched the issue in multiple GitHub commits and these will be included in TensorFlow 2.8.0 and TensorFlow 2.7.1, as both are affected.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/955059813cc325dc1db5e2daa6221271406d4439",
            "commit_sha":"955059813cc325dc1db5e2daa6221271406d4439",
            "patch":"SINGLE",
            "chain_ord":"['955059813cc325dc1db5e2daa6221271406d4439']",
            "before_first_fix_commit":"{'3d89911481ba6ebe8c88c1c0b595412121e6c645'}",
            "last_fix_commit":"955059813cc325dc1db5e2daa6221271406d4439",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/12\/2021, 16:17:57",
            "message":"Check for type inference error on node construction.\n\nPiperOrigin-RevId: 409415804\nChange-Id: Ieb6e020906b96f522bf8e2fa103715ddbbdc434a",
            "author":"Dan Moldovan",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/graph\/graph.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/955059813cc325dc1db5e2daa6221271406d4439\/tensorflow%2Fcore%2Fgraph%2Fgraph.cc', 'patch': '@@ -561,6 +561,11 @@ Node* Graph::AddNode(NodeDef node_def, Status* status) {\\n     VLOG(3) << \"AddNode: found type constructor for \" << node_def.name();\\n     const auto ctor_type =\\n         full_type::SpecializeType(AttrSlice(node_def), op_reg_data->op_def);\\n+    if (!ctor_type.ok()) {\\n+      *status = errors::InvalidArgument(\"type error: \",\\n+                                        ctor_type.status().ToString());\\n+      return nullptr;\\n+    }\\n     const FullTypeDef ctor_typedef = ctor_type.ValueOrDie();\\n     if (ctor_typedef.type_id() != TFT_UNSET) {\\n       *(node_def.mutable_experimental_type()) = ctor_typedef;'}}",
            "message_norm":"check for type inference error on node construction.\n\npiperorigin-revid: 409415804\nchange-id: ieb6e020906b96f522bf8e2fa103715ddbbdc434a",
            "language":"en",
            "entities":"[('error', 'FLAW', ''), ('409415804', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/graph\/graph.cc'])",
            "num_files":1.0
        },
        {
            "index":439,
            "vuln_id":"GHSA-4j82-5ccr-4r8v",
            "cwe_id":"{'CWE-617'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2426bba00a01de6913738df8fa78e0215fcce02'}",
            "dataset":"osv",
            "summary":"`CHECK`-failures in `TensorByteSize` in Tensorflow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [`TensorByteSize`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/attr_value_util.cc#L46-L50) would trigger `CHECK` failures.\n\n```cc\nint64_t TensorByteSize(const TensorProto& t) {\n  \/\/ num_elements returns -1 if shape is not fully defined.\n  int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();\n  return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());\n}\n```\n`TensorShape` constructor throws a `CHECK`-fail if shape is partial or has a number of elements that would overflow the size of an `int`. The `PartialTensorShape` constructor instead does not cause a `CHECK`-abort if the shape is partial, which is exactly what this function needs to be able to return `-1`.\n\n### Patches\nWe have patched the issue in GitHub commit [c2426bba00a01de6913738df8fa78e0215fcce02](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2426bba00a01de6913738df8fa78e0215fcce02).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c2426bba00a01de6913738df8fa78e0215fcce02",
            "commit_sha":"c2426bba00a01de6913738df8fa78e0215fcce02",
            "patch":"SINGLE",
            "chain_ord":"['c2426bba00a01de6913738df8fa78e0215fcce02']",
            "before_first_fix_commit":"{'31d8f8035f559fc6f03516f18ca3afea652d69b0'}",
            "last_fix_commit":"c2426bba00a01de6913738df8fa78e0215fcce02",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/11\/2021, 19:50:53",
            "message":"Use `PartialTensorShape` instead of `TensorShape`.\n\n`TensorShape` constructor throws a CHECK-fail if shape is partial\/overflows which the other doesn't. We are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\nPiperOrigin-RevId: 409205384\nChange-Id: Ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'tensorflow\/core\/framework\/attr_value_util.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c2426bba00a01de6913738df8fa78e0215fcce02\/tensorflow%2Fcore%2Fframework%2Fattr_value_util.cc', 'patch': '@@ -45,7 +45,7 @@ constexpr int kMaxTensorNestDepth = 100;\\n \/\/ not fully defined return -1.\\n int64_t TensorByteSize(const TensorProto& t) {\\n   \/\/ num_elements returns -1 if shape is not fully defined.\\n-  int64_t num_elems = TensorShape(t.tensor_shape()).num_elements();\\n+  int64_t num_elems = PartialTensorShape(t.tensor_shape()).num_elements();\\n   return num_elems < 0 ? -1 : num_elems * DataTypeSize(t.dtype());\\n }'}}",
            "message_norm":"use `partialtensorshape` instead of `tensorshape`.\n\n`tensorshape` constructor throws a check-fail if shape is partial\/overflows which the other doesn't. we are only determining the number of elements in the shape and partial shape should be used as it returns negative number when needed.\n\npiperorigin-revid: 409205384\nchange-id: ia56542ff9ec758f2c9ffc7e4dcc9fa7eecd86e7b",
            "language":"en",
            "entities":"[('overflows', 'SECWORD', ''), ('409205384', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/attr_value_util.cc'])",
            "num_files":1.0
        },
        {
            "index":2457,
            "vuln_id":"GHSA-mqh2-9wrp-vx84",
            "cwe_id":"{'CWE-787'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `SparseSplit` ### Impact\nAn attacker can cause a heap buffer overflow in `tf.raw_ops.SparseSplit`:\n\n```python\nimport tensorflow as tf\n\nshape_dims = tf.constant(0, dtype=tf.int64)\nindices = tf.ones([1, 1], dtype=tf.int64)\nvalues = tf.ones([1], dtype=tf.int64)\nshape = tf.ones([1], dtype=tf.int64)\n\ntf.raw_ops.SparseSplit(\n    split_dim=shape_dims, indices=indices, values=values,\n    shape=shape, num_split=1)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/699bff5d961f0abfde8fa3f876e6d241681fbef8\/tensorflow\/core\/util\/sparse\/sparse_tensor.h#L528-L530) accesses an array element based on a user controlled offset:\n\n```cc\nconst int dim = input_tensor.indices().matrix<int64>()(i, split_dim);\nint slice_index = GetSliceIndex(dim, split_size, residual);\nnum_values[slice_index]++;\n```\n\nThis results in overriding values on the heap.\n\n### Patches\nWe have patched the issue in GitHub commit [8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31",
            "commit_sha":"8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31",
            "patch":"SINGLE",
            "chain_ord":"['8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31']",
            "before_first_fix_commit":"{'699bff5d961f0abfde8fa3f876e6d241681fbef8'}",
            "last_fix_commit":"8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/30\/2021, 00:58:08",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.\n\nPiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/util\/sparse\/sparse_tensor.h': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31\/tensorflow%2Fcore%2Futil%2Fsparse%2Fsparse_tensor.h', 'patch': '@@ -527,6 +527,10 @@ inline Status SparseTensor::Split(const SparseTensor& input_tensor,\\n   for (int i = 0; i < input_tensor.indices().dim_size(0); ++i) {\\n     const int dim = input_tensor.indices().matrix<int64>()(i, split_dim);\\n     int slice_index = GetSliceIndex(dim, split_size, residual);\\n+    if (slice_index >= num_values.size()) {\\n+      return errors::InvalidArgument(\"Slice index \", slice_index,\\n+                                     \" is larger than num_split.\");\\n+    }\\n     num_values[slice_index]++;\\n   }'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsesplit`.\n\npiperorigin-revid: 371242872\nchange-id: i482bb3d12602c7c3cc9446f97fb9f584bb98e9a4",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371242872', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/util\/sparse\/sparse_tensor.h'])",
            "num_files":1.0
        },
        {
            "index":2901,
            "vuln_id":"GHSA-r8j4-96mx-rjcc",
            "cwe_id":"{'CWE-611'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/skylot\/jadx\/commit\/d22db30166e7cb369d72be41382bb63ac8b81c52'}",
            "dataset":"osv",
            "summary":"Improper Restriction of XML External Entity Reference in skylot\/jadx skylot\/jadx prior to 1.3.2 is vulnerable to Improper Restriction of XML External Entities when a user is tricked into exporting a malicious APK file (via the -e option) containing a crafted AndroidManifest.xml \/ strings.xml to gradle, leading to possible local file disclosure.",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/skylot\/jadx",
            "commit_href":"https:\/\/github.com\/skylot\/jadx\/commit\/d22db30166e7cb369d72be41382bb63ac8b81c52",
            "commit_sha":"d22db30166e7cb369d72be41382bb63ac8b81c52",
            "patch":"SINGLE",
            "chain_ord":"['d22db30166e7cb369d72be41382bb63ac8b81c52']",
            "before_first_fix_commit":"{'6db61e7a5908db0138a3a15d42c0a46ae787c72c'}",
            "last_fix_commit":"d22db30166e7cb369d72be41382bb63ac8b81c52",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/20\/2022, 11:17:12",
            "message":"fix: use secure xml parser for process manifest",
            "author":"Skylot",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/skylot\/jadx\/raw\/d22db30166e7cb369d72be41382bb63ac8b81c52\/jadx-core%2Fsrc%2Fmain%2Fjava%2Fjadx%2Fcore%2Fexport%2FExportGradleProject.java', 'patch': '@@ -8,7 +8,6 @@\\n import java.util.Set;\\n \\n import javax.xml.parsers.DocumentBuilder;\\n-import javax.xml.parsers.DocumentBuilderFactory;\\n \\n import org.slf4j.Logger;\\n import org.slf4j.LoggerFactory;\\n@@ -24,6 +23,7 @@\\n import jadx.core.utils.exceptions.JadxRuntimeException;\\n import jadx.core.utils.files.FileUtils;\\n import jadx.core.xmlgen.ResContainer;\\n+import jadx.core.xmlgen.XmlSecurity;\\n \\n public class ExportGradleProject {\\n \\n@@ -139,7 +139,7 @@ private ApplicationParams getApplicationParams(Document androidManifest, Documen\\n \\n \\tprivate Document parseXml(String xmlContent) {\\n \\t\\ttry {\\n-\\t\\t\\tDocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\\n+\\t\\t\\tDocumentBuilder builder = XmlSecurity.getSecureDbf().newDocumentBuilder();\\n \\t\\t\\tDocument document = builder.parse(new InputSource(new StringReader(xmlContent)));\\n \\n \\t\\t\\tdocument.getDocumentElement().normalize();'}}",
            "message_norm":"fix: use secure xml parser for process manifest",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('secure', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['jadx-core\/src\/main\/java\/jadx\/core\/export\/ExportGradleProject.java'])",
            "num_files":1.0
        },
        {
            "index":441,
            "vuln_id":"GHSA-4jqc-8m5r-9rpr",
            "cwe_id":"{'CWE-1321', 'CWE-843'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/jonschlinkert\/set-value\/commit\/7cf8073bb06bf0c15e08475f9f952823b4576452'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in set-value This affects the package `set-value` before 2.0.1, and starting with 3.0.0 but prior to 4.0.1. A type confusion vulnerability can lead to a bypass of CVE-2019-10747 when the user-provided keys used in the path parameter are arrays.",
            "published_date":"2021-09-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/jonschlinkert\/set-value",
            "commit_href":"https:\/\/github.com\/jonschlinkert\/set-value\/commit\/7cf8073bb06bf0c15e08475f9f952823b4576452",
            "commit_sha":"7cf8073bb06bf0c15e08475f9f952823b4576452",
            "patch":"SINGLE",
            "chain_ord":"['7cf8073bb06bf0c15e08475f9f952823b4576452']",
            "before_first_fix_commit":"{'17ac6b7baa01f328a41987e02c73b71b5b82bc3a'}",
            "last_fix_commit":"7cf8073bb06bf0c15e08475f9f952823b4576452",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/12\/2021, 07:36:46",
            "message":"4.0.1\n\nFixes https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33 thanks to @ready-research.",
            "author":"Jon Schlinkert",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'package.json': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/set-value\/raw\/7cf8073bb06bf0c15e08475f9f952823b4576452\/package.json', 'patch': '@@ -1,6 +1,6 @@\\n {\\n   \"name\": \"set-value\",\\n-  \"version\": \"4.0.0\",\\n+  \"version\": \"4.0.1\",\\n   \"description\": \"Set nested properties on an object using dot notation.\",\\n   \"license\": \"MIT\",\\n   \"repository\": \"jonschlinkert\/set-value\",\\n@@ -122,4 +122,4 @@\\n       \"update\"\\n     ]\\n   }\\n-}\\n\\\\ No newline at end of file\\n+}'}}",
            "message_norm":"4.0.1\n\nfixes https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33 thanks to @ready-research.",
            "language":"en",
            "entities":"[('4.0.1', 'VERSION', ''), ('https:\/\/github.com\/jonschlinkert\/set-value\/pull\/33', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['package.json'])",
            "num_files":1.0
        },
        {
            "index":2167,
            "vuln_id":"GHSA-hxmr-5gv9-6p8v",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/4f86915866703e2fcd1e34b3fc1181ec2ad78e54'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in librenms Cross-site Scripting (XSS) - Stored in Packagist librenms\/librenms prior to 22.2.0.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/librenms\/librenms",
            "commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/4f86915866703e2fcd1e34b3fc1181ec2ad78e54",
            "commit_sha":"4f86915866703e2fcd1e34b3fc1181ec2ad78e54",
            "patch":"SINGLE",
            "chain_ord":"['4f86915866703e2fcd1e34b3fc1181ec2ad78e54']",
            "before_first_fix_commit":"{'3ac0de16b2767d4d4df25b89aa9439daf070b24c'}",
            "last_fix_commit":"4f86915866703e2fcd1e34b3fc1181ec2ad78e54",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/13\/2022, 18:07:37",
            "message":"XSS fix, cont. (#13776)\n\nhttps:\/\/huntr.dev\/bounties\/13951f51-deed-4a3d-8275-52306cc5a87d\/",
            "author":"PipoCanaja",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'includes\/html\/pages\/addhost.inc.php': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/4f86915866703e2fcd1e34b3fc1181ec2ad78e54\/includes%2Fhtml%2Fpages%2Faddhost.inc.php', 'patch': \"@@ -45,9 +45,9 @@\\n             $snmpver = 'v2c';\\n             $additional = [\\n                 'snmp_disable' => 1,\\n-                'os'           => $_POST['os'] ? $_POST['os_id'] : 'ping',\\n-                'hardware'     => $_POST['hardware'],\\n-                'sysName'      => $_POST['sysName'],\\n+                'os'           => $_POST['os'] ? strip_tags($_POST['os_id']) : 'ping',\\n+                'hardware'     => strip_tags($_POST['hardware']),\\n+                'sysName'      => strip_tags($_POST['sysName']),\\n             ];\\n         } elseif ($_POST['snmpver'] === 'v2c' || $_POST['snmpver'] === 'v1') {\\n             if ($_POST['community']) {\"}}",
            "message_norm":"xss fix, cont. (#13776)\n\nhttps:\/\/huntr.dev\/bounties\/13951f51-deed-4a3d-8275-52306cc5a87d\/",
            "language":"ca",
            "entities":"[('xss', 'SECWORD', ''), ('#13776', 'ISSUE', ''), ('https:\/\/huntr.dev\/bounties\/13951f51-deed-4a3d-8275-52306cc5a87d\/', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['includes\/html\/pages\/addhost.inc.php'])",
            "num_files":1.0
        },
        {
            "index":984,
            "vuln_id":"GHSA-772p-x54p-hjrv",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f'}",
            "dataset":"osv",
            "summary":"Division by zero in `Conv3D` ### Impact\nA malicious user could trigger a division by 0 in `Conv3D` implementation:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\nfilter_tensor = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\n\ntf.raw_ops.Conv3D(input=input_tensor, filter=filter_tensor, strides=[1, 56, 56, 56, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 23, 1])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/42033603003965bffac51ae171b51801565e002d\/tensorflow\/core\/kernels\/conv_ops_3d.cc#L143-L145) does a modulo operation based on user controlled input:\n\n```cc\n  const int64 out_depth = filter.dim_size(4);\n  OP_REQUIRES(context, in_depth % filter_depth == 0, ...);\n```\n\nThus, when `filter` has a 0 as the fifth element, this results in a division by 0.\n\nAdditionally, if the shape of the two tensors is not valid, an Eigen assertion can be triggered, resulting in a program crash:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[2, 2, 2, 2, 0], dtype=tf.float32)\nfilter_tensor = tf.constant([], shape=[0, 0, 2, 6, 2], dtype=tf.float32)\n\ntf.raw_ops.Conv3D(input=input_tensor, filter=filter_tensor, strides=[1, 56, 39, 34, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThe shape of the two tensors must follow the constraints specified in the [op description](https:\/\/www.tensorflow.org\/api_docs\/python\/tf\/raw_ops\/Conv3D).\n\n### Patches\nWe have patched the issue in GitHub commit [799f835a3dfa00a4d852defa29b15841eea9d64f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/799f835a3dfa00a4d852defa29b15841eea9d64f",
            "commit_sha":"799f835a3dfa00a4d852defa29b15841eea9d64f",
            "patch":"SINGLE",
            "chain_ord":"['799f835a3dfa00a4d852defa29b15841eea9d64f']",
            "before_first_fix_commit":"{'42033603003965bffac51ae171b51801565e002d'}",
            "last_fix_commit":"799f835a3dfa00a4d852defa29b15841eea9d64f",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2021, 16:56:46",
            "message":"Fix 2 issues with `Conv3D`.\n\nWe have an issue where the dimensions are not matching and this causes Eigen to crash on an assert.\n\nThen, we have an issue where we accidentally do a division by 0.\n\nPiperOrigin-RevId: 369242785\nChange-Id: Ie94067b2d41f58699af99ebb5af335ad9defd931",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 0, 'total': 7}",
            "files":"{'tensorflow\/core\/kernels\/conv_ops_3d.cc': {'additions': 7, 'deletions': 0, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/799f835a3dfa00a4d852defa29b15841eea9d64f\/tensorflow%2Fcore%2Fkernels%2Fconv_ops_3d.cc', 'patch': '@@ -69,6 +69,11 @@ struct LaunchConvOp<CPUDevice, T> {\\n                 errors::InvalidArgument(\"CPU implementation of Conv3D \"\\n                                         \"currently only supports dilated rates \"\\n                                         \"of 1.\"));\\n+    OP_REQUIRES(context, filter.dim_size(3) == input.dim_size(input.dims() - 1),\\n+                errors::InvalidArgument(\\n+                    \"Number of channels in filter (\", filter.dim_size(3),\\n+                    \") must match last dimension of input (\",\\n+                    input.dim_size(input.dims() - 1), \")\"));\\n     functor::CuboidConvolution<CPUDevice, T>()(\\n         context->eigen_device<CPUDevice>(), output->tensor<T, 5>(),\\n         input.tensor<T, 5>(), filter.tensor<T, 5>(), strides[2], strides[1],\\n@@ -142,6 +147,8 @@ class Conv3DOp : public BinaryOp<T> {\\n     const int64 filter_depth = filter.dim_size(3);\\n     const int64 out_depth = filter.dim_size(4);\\n \\n+    OP_REQUIRES(context, filter_depth != 0,\\n+                errors::InvalidArgument(\"filter_depth must be non-zero\"));\\n     OP_REQUIRES(context, in_depth % filter_depth == 0,\\n                 errors::InvalidArgument(\\n                     \"Input depth must be evenly divisible by filter depth: \",'}}",
            "message_norm":"fix 2 issues with `conv3d`.\n\nwe have an issue where the dimensions are not matching and this causes eigen to crash on an assert.\n\nthen, we have an issue where we accidentally do a division by 0.\n\npiperorigin-revid: 369242785\nchange-id: ie94067b2d41f58699af99ebb5af335ad9defd931",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issues', 'FLAW', ''), ('issue', 'FLAW', ''), ('issue', 'FLAW', ''), ('division by 0', 'SECWORD', ''), ('369242785', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_ops_3d.cc'])",
            "num_files":1.0
        },
        {
            "index":1173,
            "vuln_id":"GHSA-896r-f27r-55mw",
            "cwe_id":"{'CWE-1321', 'CWE-915'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/kriszyp\/json-schema\/commit\/b62f1da1ff5442f23443d6be6a92d00e65cba93a', 'https:\/\/github.com\/kriszyp\/json-schema\/commit\/22f146111f541d9737e832823699ad3528ca7741', 'https:\/\/github.com\/kriszyp\/json-schema\/commit\/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa'}",
            "dataset":"osv",
            "summary":"json-schema is vulnerable to Prototype Pollution json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
            "published_date":"2021-11-19",
            "chain_len":3,
            "project":"https:\/\/github.com\/kriszyp\/json-schema",
            "commit_href":"https:\/\/github.com\/kriszyp\/json-schema\/commit\/b62f1da1ff5442f23443d6be6a92d00e65cba93a",
            "commit_sha":"b62f1da1ff5442f23443d6be6a92d00e65cba93a",
            "patch":"MULTI",
            "chain_ord":"['22f146111f541d9737e832823699ad3528ca7741', 'b62f1da1ff5442f23443d6be6a92d00e65cba93a', 'f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa']",
            "before_first_fix_commit":"{'ef60987a9a14b9d9c739384460044ba53cd9b9a2'}",
            "last_fix_commit":"f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/02\/2021, 02:41:46",
            "message":"Protect against constructor modification, #84",
            "author":"Kris Zyp",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/validate.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kriszyp\/json-schema\/raw\/b62f1da1ff5442f23443d6be6a92d00e65cba93a\/lib%2Fvalidate.js', 'patch': \"@@ -207,7 +207,7 @@ var validate = exports._validate = function(\/*Any*\/instance,\/*Object*\/schema,\/*O\\n \\t\\t\\t}\\n \\t\\t\\t\\n \\t\\t\\tfor(var i in objTypeDef){ \\n-\\t\\t\\t\\tif(objTypeDef.hasOwnProperty(i) && i != '__proto__'){\\n+\\t\\t\\t\\tif(objTypeDef.hasOwnProperty(i) && i != '__proto__' && i != 'constructor'){\\n \\t\\t\\t\\t\\tvar value = instance[i];\\n \\t\\t\\t\\t\\t\/\/ skip _not_ specified properties\\n \\t\\t\\t\\t\\tif (value === undefined && options.existingOnly) continue;\"}}",
            "message_norm":"protect against constructor modification, #84",
            "language":"en",
            "entities":"[('protect', 'SECWORD', ''), ('#84', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/validate.js'])",
            "num_files":1.0
        },
        {
            "index":2981,
            "vuln_id":"GHSA-rphc-h572-2x9f",
            "cwe_id":"{'CWE-434', 'CWE-79'}",
            "score":9.0,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in showdoc\/showdoc ShowDoc is a tool greatly applicable for an IT team to share documents online. showdoc\/showdoc allows .properties files to upload which lead to stored XSS in versions prior to 2.10.4. This allows attackers to execute malicious scripts in the user's browser. This issue was patched in version 2.10.4. There is currently no known workaround.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
            "commit_sha":"92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
            "patch":"SINGLE",
            "chain_ord":"['92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f']",
            "before_first_fix_commit":"{'cd258a0de6fad53a5f41beaf2645f3f6f092f216'}",
            "last_fix_commit":"92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 14:36:28",
            "message":"file upload bug",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/92bc6a83a3a60e01a0d2effb98ab47d8d7eab28f\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -324,13 +324,13 @@ public function isDangerFilename($filename){\\n \\tpublic function isAllowedFilename($filename){\\n \\t\\t$allow_array = array(\\n \\t\\t\\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\\n-\\t\\t\\t'.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',\\n+\\t\\t\\t'.mp3','.wav','.mp4',\\n \\t\\t\\t'.mov','.webmv','.flac','.mkv',\\n-\\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\\n+\\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso',\\n \\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n-\\t\\t\\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps',\\n+\\t\\t\\t'.doc','.docx','.wps',\\n \\t\\t\\t'.ppt','.pptx','.xls','.xlsx','.txt','.psd','.csv',\\n-\\t\\t\\t'.cer','.ppt','.pub','.properties','.json','.css',\\n+\\t\\t\\t'.cer','.ppt','.pub','.json','.css',\\n \\t\\t\\t) ;\\n \\n \\t\\t$ext = strtolower(substr($filename,strripos($filename,'.')) ); \/\/\u83b7\u53d6\u6587\u4ef6\u6269\u5c55\u540d\uff08\u8f6c\u4e3a\u5c0f\u5199\u540e\uff09\"}}",
            "message_norm":"file upload bug",
            "language":"ro",
            "entities":"[('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":3247,
            "vuln_id":"GHSA-w89r-qch4-8jv5",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/d797e3f00e34c12c8c0ae52f56344325439dccd7', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0913, CVE-2019-0914, CVE-2019-0915, CVE-2019-0916, CVE-2019-0917, CVE-2019-0922, CVE-2019-0923, CVE-2019-0924, CVE-2019-0925, CVE-2019-0927, CVE-2019-0933, CVE-2019-0937.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1",
            "commit_sha":"936a5af1c07e0fdec9aab85c05339dabe4aaeeb1",
            "patch":"MULTI",
            "chain_ord":"['936a5af1c07e0fdec9aab85c05339dabe4aaeeb1', 'd797e3f00e34c12c8c0ae52f56344325439dccd7']",
            "before_first_fix_commit":"{'ea0491305137183603bf43844b5584d4cc972e28', '4594e340bc9ca9f857010a68e8b562d65b46eed6'}",
            "last_fix_commit":"d797e3f00e34c12c8c0ae52f56344325439dccd7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/17\/2019, 17:18:03",
            "message":"[CVE-2019-0912]",
            "author":"Michael Holman",
            "comments":null,
            "stats":"{'additions': 24, 'deletions': 7, 'total': 31}",
            "files":"{'lib\/Backend\/GlobOptFields.cpp': {'additions': 24, 'deletions': 7, 'changes': 31, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/936a5af1c07e0fdec9aab85c05339dabe4aaeeb1\/lib%2FBackend%2FGlobOptFields.cpp', 'patch': '@@ -415,11 +415,19 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n \\n     case Js::OpCode::InlineArrayPush:\\n     case Js::OpCode::InlineArrayPop:\\n-        KillLiveFields(this->lengthEquivBv, bv);\\n-        if (inGlobOpt)\\n+        if(instr->m_func->GetThisOrParentInlinerHasArguments())\\n         {\\n-            \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\\n-            KillAllObjectTypes(bv);\\n+            this->KillAllFields(bv);\\n+            this->SetAnyPropertyMayBeWrittenTo();\\n+        }\\n+        else\\n+        {\\n+            KillLiveFields(this->lengthEquivBv, bv);\\n+            if (inGlobOpt)\\n+            {\\n+                \/\/ Deleting an item, or pushing a property to a non-array, may change object layout\\n+                KillAllObjectTypes(bv);\\n+            }\\n         }\\n         break;\\n \\n@@ -444,14 +452,23 @@ GlobOpt::ProcessFieldKills(IR::Instr *instr, BVSparse<JitArenaAllocator> *bv, bo\\n                 \/\/ Kill length field for built-ins that can update it.\\n                 if (nullptr != this->lengthEquivBv)\\n                 {\\n-                    KillLiveFields(this->lengthEquivBv, bv);\\n+                    \/\/ If has arguments, all fields are killed in fall through\\n+                    if (!instr->m_func->GetThisOrParentInlinerHasArguments())\\n+                    {\\n+                        KillLiveFields(this->lengthEquivBv, bv);\\n+                    }\\n                 }\\n                 \/\/ fall through\\n \\n             case IR::JnHelperMethod::HelperArray_Reverse:\\n-                \/\/ Deleting an item may change object layout\\n-                if (inGlobOpt)\\n+                if (instr->m_func->GetThisOrParentInlinerHasArguments())\\n+                {\\n+                    this->KillAllFields(bv);\\n+                    this->SetAnyPropertyMayBeWrittenTo();\\n+                }\\n+                else if (inGlobOpt)\\n                 {\\n+                    \/\/ Deleting an item may change object layout\\n                     KillAllObjectTypes(bv);\\n                 }\\n                 break;'}}",
            "message_norm":"[cve-2019-0912]",
            "language":"ro",
            "entities":"[('cve-2019-0912', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Backend\/GlobOptFields.cpp'])",
            "num_files":1.0
        },
        {
            "index":2239,
            "vuln_id":"GHSA-jff2-qjw8-5476",
            "cwe_id":"{'CWE-77', 'CWE-78'}",
            "score":8.9,
            "chain":"{'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/01ef56cd5824ed6da1c11b37013a027fdef67524', 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/0be6fcd575c05687d1076d5cd6d75af2ebae5a46', 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/7922366d707de7f20995fc8e30ac3153636bf35f'}",
            "dataset":"osv",
            "summary":"Command Injection Vulnerability in systeminformation ### Impact\ncommand injection vulnerability\n\n### Patches\nProblem was fixed with a parameter check. Please upgrade to version >= 5.6.4\n\n### Workarounds\nIf you cannot upgrade, be sure to check or sanitize service parameters that are passed to si.inetLatency(), si.inetChecksite(), si.services(), si.processLoad() ... do only allow strings, reject any arrays. String sanitation works as expected.",
            "published_date":"2021-04-06",
            "chain_len":3,
            "project":"https:\/\/github.com\/sebhildebrandt\/systeminformation",
            "commit_href":"https:\/\/github.com\/sebhildebrandt\/systeminformation\/commit\/01ef56cd5824ed6da1c11b37013a027fdef67524",
            "commit_sha":"01ef56cd5824ed6da1c11b37013a027fdef67524",
            "patch":"MULTI",
            "chain_ord":"['7922366d707de7f20995fc8e30ac3153636bf35f', '0be6fcd575c05687d1076d5cd6d75af2ebae5a46', '01ef56cd5824ed6da1c11b37013a027fdef67524']",
            "before_first_fix_commit":"{'0be6fcd575c05687d1076d5cd6d75af2ebae5a46'}",
            "last_fix_commit":"01ef56cd5824ed6da1c11b37013a027fdef67524",
            "chain_ord_pos":3.0,
            "commit_datetime":"03\/15\/2021, 10:51:30",
            "message":"sanitizeShellString() and other security improvements",
            "author":"Sebastian Hildebrandt",
            "comments":"{'com_1': {'author': 'Aaisui', 'datetime': '06\/24\/2021, 03:57:58', 'body': \"In fact,I think the previous version is also safe,i try to do something bad but can't bypass  sanitizeShellString !! :( @sebhildebrandt\"}, 'com_2': {'author': 'Aaisui', 'datetime': '06\/24\/2021, 04:01:11', 'body': \"> In fact, I think the previous version is also safe, I try to do something bad but can't bypass sanitizeShellString !! :( @sebhildebrandt\\r\\n\\r\\nI hope you can give some trick for me XDDDD\"}}",
            "stats":"{'additions': 3, 'deletions': 4, 'total': 7}",
            "files":"{'lib\/internet.js': {'additions': 3, 'deletions': 4, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sebhildebrandt\/systeminformation\/raw\/01ef56cd5824ed6da1c11b37013a027fdef67524\/lib%2Finternet.js', 'patch': \"@@ -14,7 +14,6 @@\\n \/\/ ----------------------------------------------------------------------------------\\n \\n \/\/ const exec = require('child_process').exec;\\n-const execFile = require('child_process').execFile;\\n const util = require('.\/util');\\n \\n let _platform = process.platform;\\n@@ -213,9 +212,9 @@ function inetLatency(host, callback) {\\n         let result = null;\\n         try {\\n           const params = hostSanitized + ' -n 1';\\n-          execFile('ping', params.split(' '), util.execOptsWin, function (error, stdout) {\\n-            if (!error) {\\n-              let lines = stdout.toString().split('\\\\r\\\\n');\\n+          util.execSave('ping', params.split(' '), util.execOptsWin).then((stdout) => {\\n+            if (stdout) {\\n+              let lines = stdout.split('\\\\r\\\\n');\\n               lines.shift();\\n               lines.forEach(function (line) {\\n                 if ((line.toLowerCase().match(\/ms\/g) || []).length === 3) {\"}}",
            "message_norm":"sanitizeshellstring() and other security improvements",
            "language":"en",
            "entities":"[('sanitizeshellstring', 'SECWORD', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/internet.js'])",
            "num_files":1.0
        },
        {
            "index":2855,
            "vuln_id":"GHSA-r4pj-74mg-8868",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a'}",
            "dataset":"osv",
            "summary":"Division by 0 in `Conv2DBackpropFilter` ### Impact\nAn attacker can trigger a division by 0 in `tf.raw_ops.Conv2DBackpropFilter`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 1, 0], dtype=tf.float32)\nfilter_sizes = tf.constant([1, 1, 1, 1], shape=[4], dtype=tf.int32)\nout_backprop = tf.constant([], shape=[0, 0, 1, 1], dtype=tf.float32)\n\ntf.raw_ops.Conv2DBackpropFilter(input=input_tensor, filter_sizes=filter_sizes,\n                                out_backprop=out_backprop,\n                                strides=[1, 66, 18, 1], use_cudnn_on_gpu=True,\n                                padding='SAME', explicit_paddings=[],\n                                data_format='NHWC', dilations=[1, 1, 1, 1])\n```                 \n                    \nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/496c2630e51c1a478f095b084329acedb253db6b\/tensorflow\/core\/kernels\/conv_grad_shape_utils.cc#L130) does a modulus operation where the divisor is controlled by the caller:\n\n```cc \n  if (dims->in_depth % filter_shape.dim_size(num_dims - 2)) { ... }\n```\n    \n### Patches\nWe have patched the issue in GitHub commit [fca9874a9b42a2134f907d2fb46ab774a831404a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fca9874a9b42a2134f907d2fb46ab774a831404a",
            "commit_sha":"fca9874a9b42a2134f907d2fb46ab774a831404a",
            "patch":"SINGLE",
            "chain_ord":"['fca9874a9b42a2134f907d2fb46ab774a831404a']",
            "before_first_fix_commit":"{'496c2630e51c1a478f095b084329acedb253db6b'}",
            "last_fix_commit":"fca9874a9b42a2134f907d2fb46ab774a831404a",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/20\/2021, 00:33:11",
            "message":"Prevent another division by zero.\n\nPiperOrigin-RevId: 369338598\nChange-Id: I55471d363e401fdcf8d259670ad4eef672b731e2",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_shape_utils.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/fca9874a9b42a2134f907d2fb46ab774a831404a\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_shape_utils.cc', 'patch': '@@ -127,6 +127,10 @@ Status ConvBackpropComputeDimensionsV2(\\n   \/\/ dimensions of the filter Tensor.\\n   VLOG(2) << \"input vs filter_in depth \" << dims->in_depth << \" \"\\n           << filter_shape.dim_size(num_dims - 2);\\n+  if (filter_shape.dim_size(num_dims - 2) <= 0) {\\n+    return errors ::InvalidArgument(\\n+        label, \": filter depth must be strictly greated than zero\");\\n+  }\\n   if (dims->in_depth % filter_shape.dim_size(num_dims - 2)) {\\n     return errors::InvalidArgument(\\n         label, \": input depth must be evenly divisible by filter depth\");'}}",
            "message_norm":"prevent another division by zero.\n\npiperorigin-revid: 369338598\nchange-id: i55471d363e401fdcf8d259670ad4eef672b731e2",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by zero', 'SECWORD', ''), ('369338598', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_shape_utils.cc'])",
            "num_files":1.0
        },
        {
            "index":2756,
            "vuln_id":"GHSA-qh9q-34h6-hcv9",
            "cwe_id":"{'CWE-12', 'CWE-22'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/mkdocs\/mkdocs\/pull\/2604\/commits\/cddc453c9d49298e60e7d56fb71130c151cbcbe5'}",
            "dataset":"osv",
            "summary":"Directory traversal in mkdocs The mkdocs 1.2.2 built-in dev-server allows directory traversal using the port 8000, enabling remote exploitation to obtain :sensitive information.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/mkdocs\/mkdocs",
            "commit_href":"https:\/\/github.com\/mkdocs\/mkdocs\/pull\/2604\/commits\/cddc453c9d49298e60e7d56fb71130c151cbcbe5",
            "commit_sha":"cddc453c9d49298e60e7d56fb71130c151cbcbe5",
            "patch":"SINGLE",
            "chain_ord":"['cddc453c9d49298e60e7d56fb71130c151cbcbe5']",
            "before_first_fix_commit":"{'c426455878556baa34cc829c579337236d335581'}",
            "last_fix_commit":"cddc453c9d49298e60e7d56fb71130c151cbcbe5",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/10\/2021, 08:52:05",
            "message":"Prevent directory traversal in the dev server",
            "author":"Oleh Prypin",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'mkdocs\/livereload\/__init__.py': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mkdocs\/mkdocs\/raw\/cddc453c9d49298e60e7d56fb71130c151cbcbe5\/mkdocs%2Flivereload%2F__init__.py', 'patch': '@@ -4,6 +4,7 @@\\n import mimetypes\\n import os\\n import os.path\\n+import posixpath\\n import re\\n import socketserver\\n import threading\\n@@ -183,9 +184,11 @@ def condition():\\n         if path == \"\/js\/livereload.js\":\\n             file_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), \"livereload.js\")\\n         elif path.startswith(self.mount_path):\\n-            rel_file_path = path[len(self.mount_path):].lstrip(\"\/\")\\n+            rel_file_path = path[len(self.mount_path):]\\n             if path.endswith(\"\/\"):\\n                 rel_file_path += \"index.html\"\\n+            # Prevent directory traversal - normalize the path.\\n+            rel_file_path = posixpath.normpath(\"\/\" + rel_file_path).lstrip(\"\/\")\\n             file_path = os.path.join(self.root, rel_file_path)\\n         elif path == \"\/\":\\n             start_response(\"302 Found\", [(\"Location\", self.mount_path)])'}}",
            "message_norm":"prevent directory traversal in the dev server",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('directory traversal', 'SECWORD', ''), ('server', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['mkdocs\/livereload\/__init__.py'])",
            "num_files":1.0
        },
        {
            "index":205,
            "vuln_id":"GHSA-36p3-wjmg-h94x",
            "cwe_id":"{'CWE-74', 'CWE-94'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/spring-projects\/spring-framework\/commit\/002546b3e4b8d791ea6acccb81eb3168f51abb15'}",
            "dataset":"osv",
            "summary":"Remote Code Execution in Spring Framework Spring Framework prior to versions 5.2.20 and 5.3.18 contains a remote code execution vulnerability known as `Spring4Shell`. \n\n## Impact\n\nA Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.\n\nThese are the prerequisites for the exploit:\n- JDK 9 or higher\n- Apache Tomcat as the Servlet container\n- Packaged as WAR\n- `spring-webmvc` or `spring-webflux` dependency\n\n## Patches\n\n- Spring Framework [5.3.18](https:\/\/github.com\/spring-projects\/spring-framework\/releases\/tag\/v5.3.18) and [5.2.20](https:\/\/github.com\/spring-projects\/spring-framework\/releases\/tag\/v5.2.20.RELEASE)\n- Spring Boot [2.6.6](https:\/\/github.com\/spring-projects\/spring-boot\/releases\/tag\/v2.6.6) and [2.5.12](https:\/\/github.com\/spring-projects\/spring-boot\/releases\/tag\/v2.5.12)\n\n## Workarounds\n\nFor those who are unable to upgrade, leaked reports recommend setting `disallowedFields` on `WebDataBinder` through an `@ControllerAdvice`. This works generally, but as a centrally applied workaround fix, may leave some loopholes, in particular if a controller sets `disallowedFields` locally through its own `@InitBinder` method, which overrides the global setting.\n\nTo apply the workaround in a more fail-safe way, applications could extend `RequestMappingHandlerAdapter` to update the `WebDataBinder` at the end after all other initialization. In order to do that, a Spring Boot application can declare a `WebMvcRegistrations` bean (Spring MVC) or a `WebFluxRegistrations` bean (Spring WebFlux).",
            "published_date":"2022-03-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/spring-projects\/spring-framework",
            "commit_href":"https:\/\/github.com\/spring-projects\/spring-framework\/commit\/002546b3e4b8d791ea6acccb81eb3168f51abb15",
            "commit_sha":"002546b3e4b8d791ea6acccb81eb3168f51abb15",
            "patch":"SINGLE",
            "chain_ord":"['002546b3e4b8d791ea6acccb81eb3168f51abb15']",
            "before_first_fix_commit":"{'1627f57f1f77abe17dd607c75476b9e4cb22ffbb'}",
            "last_fix_commit":"002546b3e4b8d791ea6acccb81eb3168f51abb15",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/31\/2022, 07:34:51",
            "message":"Refine PropertyDescriptor filtering\n\nRestrict property paths under `Class` and properties of types\n`ClassLoader` or `ProtectionDomain`.",
            "author":"Brian Clozel",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 4, 'total': 18}",
            "files":"{'spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java': {'additions': 14, 'deletions': 4, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spring-projects\/spring-framework\/raw\/002546b3e4b8d791ea6acccb81eb3168f51abb15\/spring-beans%2Fsrc%2Fmain%2Fjava%2Forg%2Fspringframework%2Fbeans%2FCachedIntrospectionResults.java', 'patch': '@@ -1,5 +1,5 @@\\n \/*\\n- * Copyright 2002-2020 the original author or authors.\\n+ * Copyright 2002-2022 the original author or authors.\\n  *\\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\\n  * you may not use this file except in compliance with the License.\\n@@ -22,6 +22,7 @@\\n import java.beans.PropertyDescriptor;\\n import java.lang.reflect.Method;\\n import java.lang.reflect.Modifier;\\n+import java.security.ProtectionDomain;\\n import java.util.Collections;\\n import java.util.HashSet;\\n import java.util.LinkedHashMap;\\n@@ -286,9 +287,13 @@ private CachedIntrospectionResults(Class<?> beanClass) throws BeansException {\\n \\t\\t\\t\/\/ This call is slow so we do it once.\\n \\t\\t\\tPropertyDescriptor[] pds = this.beanInfo.getPropertyDescriptors();\\n \\t\\t\\tfor (PropertyDescriptor pd : pds) {\\n-\\t\\t\\t\\tif (Class.class == beanClass &&\\n-\\t\\t\\t\\t\\t\\t(\"classLoader\".equals(pd.getName()) ||  \"protectionDomain\".equals(pd.getName()))) {\\n-\\t\\t\\t\\t\\t\/\/ Ignore Class.getClassLoader() and getProtectionDomain() methods - nobody needs to bind to those\\n+\\t\\t\\t\\tif (Class.class == beanClass && (!\"name\".equals(pd.getName()) && !pd.getName().endsWith(\"Name\"))) {\\n+\\t\\t\\t\\t\\t\/\/ Only allow all name variants of Class properties\\n+\\t\\t\\t\\t\\tcontinue;\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\\n+\\t\\t\\t\\t\\t\\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\\n+\\t\\t\\t\\t\\t\/\/ Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\\n \\t\\t\\t\\t\\tcontinue;\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tif (logger.isTraceEnabled()) {\\n@@ -337,6 +342,11 @@ private void introspectInterfaces(Class<?> beanClass, Class<?> currClass, Set<St\\n \\t\\t\\t\\t\\t\\t\/\/ GenericTypeAwarePropertyDescriptor leniently resolves a set* write method\\n \\t\\t\\t\\t\\t\\t\/\/ against a declared read method, so we prefer read method descriptors here.\\n \\t\\t\\t\\t\\t\\tpd = buildGenericTypeAwarePropertyDescriptor(beanClass, pd);\\n+\\t\\t\\t\\t\\t\\tif (pd.getPropertyType() != null && (ClassLoader.class.isAssignableFrom(pd.getPropertyType())\\n+\\t\\t\\t\\t\\t\\t\\t\\t|| ProtectionDomain.class.isAssignableFrom(pd.getPropertyType()))) {\\n+\\t\\t\\t\\t\\t\\t\\t\/\/ Ignore ClassLoader and ProtectionDomain types - nobody needs to bind to those\\n+\\t\\t\\t\\t\\t\\t\\tcontinue;\\n+\\t\\t\\t\\t\\t\\t}\\n \\t\\t\\t\\t\\t\\tthis.propertyDescriptors.put(pd.getName(), pd);\\n \\t\\t\\t\\t\\t\\tMethod readMethod = pd.getReadMethod();\\n \\t\\t\\t\\t\\t\\tif (readMethod != null) {'}}",
            "message_norm":"refine propertydescriptor filtering\n\nrestrict property paths under `class` and properties of types\n`classloader` or `protectiondomain`.",
            "language":"en",
            "entities":"[('protectiondomain', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['spring-beans\/src\/main\/java\/org\/springframework\/beans\/CachedIntrospectionResults.java'])",
            "num_files":1.0
        },
        {
            "index":835,
            "vuln_id":"GHSA-6gm7-j668-w6h9",
            "cwe_id":"{'CWE-89'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/a697830359df06246acca502ee2455614de68017'}",
            "dataset":"osv",
            "summary":"SQL Injection in Pimcore Pimcore prior to version 10.3.5 is vulnerable SQL injection in RecyclebinController.php. This vulnerability affects data confidentiality.",
            "published_date":"2022-04-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/a697830359df06246acca502ee2455614de68017",
            "commit_sha":"a697830359df06246acca502ee2455614de68017",
            "patch":"SINGLE",
            "chain_ord":"['a697830359df06246acca502ee2455614de68017']",
            "before_first_fix_commit":"{'e649598b4d2892c0bef9dea24cdf8f7006dc1ef1'}",
            "last_fix_commit":"a697830359df06246acca502ee2455614de68017",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/04\/2022, 08:59:41",
            "message":"[Recyclebin] Quote condition filter",
            "author":"dpahuja",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/a697830359df06246acca502ee2455614de68017\/bundles%2FAdminBundle%2FController%2FAdmin%2FRecyclebinController.php', 'patch': '@@ -119,7 +119,7 @@ public function listAction(Request $request)\\n                         $condition = $field . \\' BETWEEN \\' . $db->quote($value) . \\' AND \\' . $db->quote($maxTime);\\n                         $conditionFilters[] = $condition;\\n                     } else {\\n-                        $conditionFilters[] = $field . $operator . \" \\'\" . $value . \"\\' \";\\n+                        $conditionFilters[] = $field . $operator . \\' \\' . $db->quote($value);\\n                     }\\n                 }\\n             }'}}",
            "message_norm":"[recyclebin] quote condition filter",
            "language":"it",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/RecyclebinController.php'])",
            "num_files":1.0
        },
        {
            "index":1300,
            "vuln_id":"GHSA-934w-hvj4-7fr6",
            "cwe_id":"{'CWE-22'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/commit\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2'}",
            "dataset":"osv",
            "summary":"Path Traversal in jsreport-chrome-pdf This affects the package jsreport-chrome-pdf before 1.10.0.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/jsreport\/jsreport-chrome-pdf",
            "commit_href":"https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/commit\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2",
            "commit_sha":"6750b2f77d05cb843aefc1c4a98097a3bd33a6a2",
            "patch":"SINGLE",
            "chain_ord":"['6750b2f77d05cb843aefc1c4a98097a3bd33a6a2']",
            "before_first_fix_commit":"{'ba51764dae68403893f9f0e0ce7d060b78ee26c4'}",
            "last_fix_commit":"6750b2f77d05cb843aefc1c4a98097a3bd33a6a2",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/30\/2020, 16:09:42",
            "message":"block file requests",
            "author":"BJR Matos",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 0, 'total': 19}",
            "files":"{'lib\/conversion.js': {'additions': 19, 'deletions': 0, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jsreport\/jsreport-chrome-pdf\/raw\/6750b2f77d05cb843aefc1c4a98097a3bd33a6a2\/lib%2Fconversion.js', 'patch': \"@@ -38,6 +38,12 @@ module.exports = async ({ reporter, getBrowser, htmlUrl, strategy, timeout, req,\\n       return\\n     }\\n \\n+    await page.setRequestInterception(true)\\n+\\n+    if (executionInfo.error) {\\n+      return\\n+    }\\n+\\n     page.on('pageerror', (err) => {\\n       pageLog('warn', `Page error: ${err.message}${err.stack ? ` , stack: ${err.stack}` : ''}`)\\n     })\\n@@ -64,6 +70,19 @@ module.exports = async ({ reporter, getBrowser, htmlUrl, strategy, timeout, req,\\n       }\\n \\n       pageLog('debug', `Page request: ${r.method()} (${r.resourceType()}) ${trimUrl(r.url())}${detail}`)\\n+\\n+      const isRelativeToHtmlUrl = r.url().lastIndexOf(htmlUrl, 0) === 0\\n+\\n+      if (\\n+        !isRelativeToHtmlUrl &&\\n+        \/\/ potentially dangerous request to local file\\n+        r.url().lastIndexOf('file:\/\/\/', 0) === 0\\n+      ) {\\n+        r.abort('accessdenied')\\n+        return\\n+      }\\n+\\n+      r.continue()\\n     })\\n \\n     page.on('requestfinished', (r) => {\"}}",
            "message_norm":"block file requests",
            "language":"fr",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/conversion.js'])",
            "num_files":1.0
        },
        {
            "index":2593,
            "vuln_id":"GHSA-pjc4-3w99-j7v4",
            "cwe_id":"{'CWE-601'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/briancappello\/flask-unchained\/commit\/2bfeedf1bc31df851cab8c66df0c432b10406aad', 'https:\/\/github.com\/briancappello\/flask-unchained\/commit\/71e36b28166f9ffbe0a991f51127f0984f7e6a40'}",
            "dataset":"osv",
            "summary":"Open redirect in Flask-Unchained This affects the package Flask-Unchained before 0.9.0. When using the the _validate_redirect_url function, it is possible to bypass URL validation and redirect a user to an arbitrary URL by providing multiple back slashes such as \\\\\\evil.com\/path. This vulnerability is only exploitable if an alternative WSGI server other than Werkzeug is used, or the default behaviour of Werkzeug is modified using 'autocorrect_location_header=False.",
            "published_date":"2021-06-15",
            "chain_len":2,
            "project":"https:\/\/github.com\/briancappello\/flask-unchained",
            "commit_href":"https:\/\/github.com\/briancappello\/flask-unchained\/commit\/2bfeedf1bc31df851cab8c66df0c432b10406aad",
            "commit_sha":"2bfeedf1bc31df851cab8c66df0c432b10406aad",
            "patch":"MULTI",
            "chain_ord":"['2bfeedf1bc31df851cab8c66df0c432b10406aad', '71e36b28166f9ffbe0a991f51127f0984f7e6a40']",
            "before_first_fix_commit":"{'2bfeedf1bc31df851cab8c66df0c432b10406aad'}",
            "last_fix_commit":"71e36b28166f9ffbe0a991f51127f0984f7e6a40",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/27\/2021, 17:47:52",
            "message":"security fixes",
            "author":"Brian Cappello",
            "comments":null,
            "stats":"{'additions': 27, 'deletions': 8, 'total': 35}",
            "files":"{'flask_unchained\/bundles\/controller\/utils.py': {'additions': 27, 'deletions': 8, 'changes': 35, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/briancappello\/flask-unchained\/raw\/2bfeedf1bc31df851cab8c66df0c432b10406aad\/flask_unchained%2Fbundles%2Fcontroller%2Futils.py', 'patch': '@@ -6,7 +6,7 @@\\n from flask_unchained._compat import is_local_proxy\\n from py_meta_utils import _missing\\n from typing import *\\n-from urllib.parse import urlsplit\\n+from urllib.parse import urlsplit, quote as urlquote\\n from werkzeug.routing import BuildError, UnicodeConverter\\n \\n from .attr_constants import CONTROLLER_ROUTES_ATTR, REMOVE_SUFFIXES_ATTR\\n@@ -183,6 +183,11 @@ def method_name_to_url(method_name) -> str:\\n     return \\'\/\\' + kebab_case(method_name).strip(\\'-\\')\\n \\n \\n+def encode_non_url_reserved_characters(url):\\n+    # safe url reserved characters: https:\/\/datatracker.ietf.org\/doc\/html\/rfc3986#section-2.2\\n+    return urlquote(url, safe=\":\/?#[]@!$&\\'()*+,;=\")\\n+\\n+\\n # modified from flask_security.utils.get_post_action_redirect\\n def redirect(where: Optional[str] = None,\\n              default: Optional[str] = None,\\n@@ -235,7 +240,7 @@ def redirect(where: Optional[str] = None,\\n \\n     for url in urls:\\n         if _validate_redirect_url(url, _external_host):\\n-            return flask_redirect(url)\\n+            return flask_redirect(encode_non_url_reserved_characters(url))\\n     return flask_redirect(\\'\/\\')\\n \\n \\n@@ -289,15 +294,29 @@ def _url_for(endpoint: str, **values) -> Union[str, None]:\\n \\n # modified from flask_security.utils.validate_redirect_url\\n def _validate_redirect_url(url, _external_host=None):\\n-    if url is None or url.strip() == \\'\\':\\n+    url = (url or \\'\\').strip().replace(\\'\\\\\\\\\\', \\'\/\\')\\n+\\n+    # reject empty urls and urls starting with 3+ slashes or a control character\\n+    if not url or url.startswith(\\'\/\/\/\\') or ord(url[0]) <= 32:\\n         return False\\n+\\n     url_next = urlsplit(url)\\n     url_base = urlsplit(request.host_url)\\n-    external_host = _external_host or current_app.config.get(\\'EXTERNAL_SERVER_NAME\\', \\'\\')\\n-    if ((url_next.netloc or url_next.scheme)\\n-            and url_next.netloc != url_base.netloc\\n-            and url_next.netloc not in external_host):\\n-        return False\\n+    if url_next.netloc or url_next.scheme:\\n+        # require both netloc and scheme\\n+        if not url_next.netloc or not url_next.scheme:\\n+            return False\\n+\\n+        # if external host, require same netloc and scheme\\n+        external_host = _external_host or current_app.config.get(\\'EXTERNAL_SERVER_NAME\\', \\'\\')\\n+        if external_host:\\n+            url_external = urlsplit(external_host)\\n+            if url_next.netloc == url_external.netloc and url_next.scheme == url_external.scheme:\\n+                return True\\n+\\n+        # require same netloc and scheme\\n+        if url_next.netloc != url_base.netloc or url_next.scheme != url_base.scheme:\\n+            return False\\n     return True'}}",
            "message_norm":"security fixes",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('fixes', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['flask_unchained\/bundles\/controller\/utils.py'])",
            "num_files":1.0
        },
        {
            "index":2144,
            "vuln_id":"GHSA-hwj3-m3p6-hj38",
            "cwe_id":"{'CWE-611'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/dom4j\/dom4j\/commit\/1707bf3d898a8ada3b213acb0e3b38f16eaae73d', 'https:\/\/github.com\/dom4j\/dom4j\/commit\/a8228522a99a02146106672a34c104adbda5c658'}",
            "dataset":"osv",
            "summary":"dom4j allows External Entities by default which might enable XXE attacks dom4j before 2.1.3 allows external DTDs and External Entities by default, which might enable XXE attacks. However, there is popular external documentation from OWASP showing how to enable the safe, non-default behavior in any application that uses dom4j.\n\nNote: This advisory applies to `dom4j:dom4j` version 1.x legacy artifacts.  To resolve this a change to the latest version of `org.dom4j:dom4j` is recommended.",
            "published_date":"2020-06-05",
            "chain_len":2,
            "project":"https:\/\/github.com\/dom4j\/dom4j",
            "commit_href":"https:\/\/github.com\/dom4j\/dom4j\/commit\/1707bf3d898a8ada3b213acb0e3b38f16eaae73d",
            "commit_sha":"1707bf3d898a8ada3b213acb0e3b38f16eaae73d",
            "patch":"MULTI",
            "chain_ord":"['a8228522a99a02146106672a34c104adbda5c658', '1707bf3d898a8ada3b213acb0e3b38f16eaae73d']",
            "before_first_fix_commit":"{'223ae0639d5d73a5a25fddec8b16c7071ee10e3d'}",
            "last_fix_commit":"1707bf3d898a8ada3b213acb0e3b38f16eaae73d",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/11\/2020, 17:27:36",
            "message":"#28 Disable downloading external resources with DocumentHelper.parseText() helper.\n\n(cherry picked from commit 8f6a7f6001d679176c1079ac65871d4e493360db)",
            "author":"Filip Jirs\u00e1k",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'src\/main\/java\/org\/dom4j\/DocumentHelper.java': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dom4j\/dom4j\/raw\/1707bf3d898a8ada3b213acb0e3b38f16eaae73d\/src%2Fmain%2Fjava%2Forg%2Fdom4j%2FDocumentHelper.java', 'patch': '@@ -270,6 +270,14 @@ public static void sort(List<Node> list, String expression, boolean distinct) {\\n      *\/\\n     public static Document parseText(String text) throws DocumentException {\\n         SAXReader reader = new SAXReader();\\n+        try {\\n+            reader.setFeature(\"http:\/\/apache.org\/xml\/features\/nonvalidating\/load-external-dtd\", false);\\n+            reader.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+            reader.setFeature(\"http:\/\/xml.org\/sax\/features\/external-parameter-entities\", false);\\n+        } catch (SAXException e) {\\n+            \/\/Parse with external resources downloading allowed.\\n+        }\\n+\\n         String encoding = getEncoding(text);\\n \\n         InputSource source = new InputSource(new StringReader(text));'}}",
            "message_norm":"#28 disable downloading external resources with documenthelper.parsetext() helper.\n\n(cherry picked from commit 8f6a7f6001d679176c1079ac65871d4e493360db)",
            "language":"en",
            "entities":"[('#28', 'ISSUE', ''), ('commit 8f6a7f6001d679176c1079ac65871d4e493360db', 'SHA', 'prefix_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/org\/dom4j\/DocumentHelper.java'])",
            "num_files":1.0
        },
        {
            "index":1761,
            "vuln_id":"GHSA-fq6p-6334-8gr4",
            "cwe_id":"{'CWE-401'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ab51e5b813573dc9f51efa335aebcf2994125ee9'}",
            "dataset":"osv",
            "summary":"Memory leak in decoding PNG images ### Impact\nWhen [decoding PNG images](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/kernels\/image\/decode_image_op.cc#L322-L416) TensorFlow can produce a memory leak if the image is invalid.\nAfter calling `png::CommonInitDecode(..., &decode)`, the `decode` value contains allocated buffers which can only be freed by calling `png::CommonFreeDecode(&decode)`. However, several error case in the function implementation invoke the `OP_REQUIRES` macro which immediately terminates the execution of the function, without allowing for the memory free to occur.\n  \n### Patches   \nWe have patched the issue in GitHub commit [ab51e5b813573dc9f51efa335aebcf2994125ee9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ab51e5b813573dc9f51efa335aebcf2994125ee9).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ab51e5b813573dc9f51efa335aebcf2994125ee9",
            "commit_sha":"ab51e5b813573dc9f51efa335aebcf2994125ee9",
            "patch":"SINGLE",
            "chain_ord":"['ab51e5b813573dc9f51efa335aebcf2994125ee9']",
            "before_first_fix_commit":"{'fb5ce99505358985ace9e811fd25a57047471d6f'}",
            "last_fix_commit":"ab51e5b813573dc9f51efa335aebcf2994125ee9",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/12\/2021, 03:24:32",
            "message":"Prevent memory leak in decoding PNG images.\n\nPiperOrigin-RevId: 409300653\nChange-Id: I6182124c545989cef80cefd439b659095920763b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'tensorflow\/core\/kernels\/image\/decode_image_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ab51e5b813573dc9f51efa335aebcf2994125ee9\/tensorflow%2Fcore%2Fkernels%2Fimage%2Fdecode_image_op.cc', 'patch': '@@ -18,6 +18,8 @@ limitations under the License.\\n #include <cstdint>\\n #include <memory>\\n \\n+#include \"tensorflow\/core\/lib\/gtl\/cleanup.h\"\\n+\\n #define EIGEN_USE_THREADS\\n \\n #include \"absl\/strings\/escaping.h\"\\n@@ -326,6 +328,16 @@ class DecodeImageV2Op : public OpKernel {\\n         context, png::CommonInitDecode(input, channels_, channel_bits, &decode),\\n         errors::InvalidArgument(\"Invalid PNG. Failed to initialize decoder.\"));\\n \\n+    \/\/ If we reach this point, then there is data in `decode` which must be\\n+    \/\/ freed by the time we end execution in this function. We cannot call\\n+    \/\/ `png::CommonFreeDecode()` before an `OP_REQUIRES` because if\\n+    \/\/ `OP_REQUIRES` constraint is satisfied then the data would be freed\\n+    \/\/ prematurely. Instead, let\\'s use a `Cleanup` object.\\n+    auto cleanup = gtl::MakeCleanup([&decode]() {\\n+      std::cerr << \"Cleanup called...\\\\n\";\\n+      png::CommonFreeDecode(&decode);\\n+    });\\n+\\n     \/\/ Verify that width and height are not too large:\\n     \/\/ - verify width and height don\\'t overflow int.\\n     \/\/ - width can later be multiplied by channels_ and sizeof(uint16), so'}}",
            "message_norm":"prevent memory leak in decoding png images.\n\npiperorigin-revid: 409300653\nchange-id: i6182124c545989cef80cefd439b659095920763b",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('memory leak', 'SECWORD', ''), ('decoding', 'SECWORD', ''), ('409300653', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/image\/decode_image_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3211,
            "vuln_id":"GHSA-w3v3-cxq5-9vr4",
            "cwe_id":"{'CWE-276', 'CWE-284'}",
            "score":6.3,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/cf14a0222c67472086cd08b2155f045edaf75f2e'}",
            "dataset":"osv",
            "summary":"Incorrect Default Permissions and Improper Access Control in snipe-it snipe-it is vulnerable to Improper Access Control\/Incorrect Default Permissions.",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/cf14a0222c67472086cd08b2155f045edaf75f2e",
            "commit_sha":"cf14a0222c67472086cd08b2155f045edaf75f2e",
            "patch":"SINGLE",
            "chain_ord":"['cf14a0222c67472086cd08b2155f045edaf75f2e']",
            "before_first_fix_commit":"{'b78e610ce3b4295fb4c56659976a5d5d26eeb6da', 'bb095641c2f421f744796d184287c46fc9303591'}",
            "last_fix_commit":"cf14a0222c67472086cd08b2155f045edaf75f2e",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/11\/2022, 03:24:31",
            "message":"Merge pull request #10498 from Haxatron\/master\n\nFix access control",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 2, 'total': 8}",
            "files":"{'app\/Http\/Controllers\/BulkAssetModelsController.php': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/cf14a0222c67472086cd08b2155f045edaf75f2e\/app%2FHttp%2FControllers%2FBulkAssetModelsController.php', 'patch': \"@@ -32,6 +32,7 @@ public function edit(Request $request)\\n \\n             \/\/ If deleting....\\n             if ($request->input('bulk_actions')=='delete') {\\n+                $this->authorize('delete', AssetModel::class);\\n                 $valid_count = 0;\\n                 foreach ($models as $model) {\\n                     if ($model->assets_count == 0) {\\n@@ -42,7 +43,7 @@ public function edit(Request $request)\\n \\n             \/\/ Otherwise display the bulk edit screen\\n             }\\n-\\n+            $this->authorize('update', AssetModel::class);\\n             $nochange = ['NC' => 'No Change'];\\n             return view('models\/bulk-edit', compact('models'))\\n                 ->with('fieldset_list', $nochange + Helper::customFieldsetList())\\n@@ -63,7 +64,8 @@ public function edit(Request $request)\\n      *\/\\n     public function update(Request $request)\\n     {\\n-\\n+        $this->authorize('update', AssetModel::class);\\n+      \\n         $models_raw_array = $request->input('ids');\\n         $update_array = array();\\n \\n@@ -103,6 +105,8 @@ public function update(Request $request)\\n      *\/\\n     public function destroy(Request $request)\\n     {\\n+        $this->authorize('delete', AssetModel::class);\\n+      \\n         $models_raw_array = $request->input('ids');\\n \\n         if ((is_array($models_raw_array)) && (count($models_raw_array) > 0)) {\"}}",
            "message_norm":"merge pull request #10498 from haxatron\/master\n\nfix access control",
            "language":"en",
            "entities":"[('#10498', 'ISSUE', ''), ('access control', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['app\/Http\/Controllers\/BulkAssetModelsController.php'])",
            "num_files":1.0
        },
        {
            "index":1959,
            "vuln_id":"GHSA-h24f-9mm4-w336",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/omphalos\/crud-file-server\/commit\/4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting (XSS) - Stored in crud-file-server Versions of `crud-file-server` before 0.8.0 are vulnerable to stored cross-site scripting (XSS). This is due to insufficient santiziation of filenames when directory index is served by `crud-file-server`.\n\n\n## Recommendation\n\nUpdate to version 0.8.0 or later.",
            "published_date":"2018-07-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/omphalos\/crud-file-server",
            "commit_href":"https:\/\/github.com\/omphalos\/crud-file-server\/commit\/4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa",
            "commit_sha":"4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa",
            "patch":"SINGLE",
            "chain_ord":"['4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa']",
            "before_first_fix_commit":"{'0c45fc64f0c0aeb23fe515c95e29f6485803de65'}",
            "last_fix_commit":"4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/14\/2018, 23:29:21",
            "message":"Fix not sanitizing file names rendered in html",
            "author":"omphalos",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'crud-file-server.js': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/omphalos\/crud-file-server\/raw\/4155bfe068bf211b49a0b3ffd06e78cbaf1b40fa\/crud-file-server.js', 'patch': '@@ -140,7 +140,9 @@ exports.handleRequest = function(vpath, path, req, res, readOnly, logHeadRequest\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar name = results[f].name;\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tvar normalized = url + \\'\/\\' + name;\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\twhile(normalized[0] == \\'\/\\') { normalized = normalized.slice(1, normalized.length); }\\r\\n-\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tres.write(\\'\\\\r\\\\n<p><a href=\"\/\\' + normalized + \\'\">\\' + name + \\'<\/a><\/p>\\');\\r\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif(normalized.indexOf(\\'\"\\') >= 0) throw new Error(\\'unsupported file name\\')\\r\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tname = name.replace(\/&\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\');\\r\\n+\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tres.write(\\'\\\\r\\\\n<p><a href=\"\/\\' + normalized + \\'\"><span>\\' + name + \\'<\/span><\/a><\/p>\\');\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tres.end(\\'\\\\r\\\\n<\/body><\/html>\\');\\r\\n \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}'}}",
            "message_norm":"fix not sanitizing file names rendered in html",
            "language":"en",
            "entities":"[('sanitizing', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['crud-file-server.js'])",
            "num_files":1.0
        },
        {
            "index":629,
            "vuln_id":"GHSA-5fxf-x22x-5q38",
            "cwe_id":"{'CWE-79'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/de6d17b52d261902653fbdd2ecefcaac82e54256'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber XSS on dynamic_text module in GitHub repository microweber\/microweber prior to 1.2.12.",
            "published_date":"2022-03-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/de6d17b52d261902653fbdd2ecefcaac82e54256",
            "commit_sha":"de6d17b52d261902653fbdd2ecefcaac82e54256",
            "patch":"SINGLE",
            "chain_ord":"['de6d17b52d261902653fbdd2ecefcaac82e54256']",
            "before_first_fix_commit":"{'095b1bcea7a4384f0d0513906100212df136a1e4'}",
            "last_fix_commit":"de6d17b52d261902653fbdd2ecefcaac82e54256",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/11\/2022, 13:38:50",
            "message":"Update build-and-upload.yml",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 1, 'total': 1}",
            "files":"{'.github\/workflows\/build-and-upload.yml': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/de6d17b52d261902653fbdd2ecefcaac82e54256\/.github%2Fworkflows%2Fbuild-and-upload.yml', 'patch': '@@ -6,7 +6,6 @@ on:\\n jobs:\\n   microweber-test-before-build:\\n     runs-on: ubuntu-latest\\n-    needs: stop-previous-runs\\n     steps:\\n       - uses: actions\/checkout@v2'}}",
            "message_norm":"update build-and-upload.yml",
            "language":"en",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['.github\/workflows\/build-and-upload.yml'])",
            "num_files":1.0
        },
        {
            "index":2001,
            "vuln_id":"GHSA-h6fg-mjxg-hqq4",
            "cwe_id":"{'CWE-197', 'CWE-754'}",
            "score":9.0,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ca8c013b5e97b1373b3bb1c97ea655e69f31a575', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/27b417360cbd671ef55915e4bb6bb06af8b8a832'}",
            "dataset":"osv",
            "summary":"Integer truncation in Shard API usage ### Impact\nThe `Shard` API in TensorFlow expects the last argument to be a function taking two `int64` (i.e., `long long`) arguments:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/util\/work_sharder.h#L59-L60\n\nHowever, there are several places in TensorFlow where a lambda taking `int` or `int32` arguments is being used:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/kernels\/random_op.cc#L204-L205\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/kernels\/random_op.cc#L317-L318\n\nIn these cases, if the amount of work to be parallelized is large enough, integer truncation occurs. Depending on how the two arguments of the lambda are used, this can result in segfaults, read\/write outside of heap allocated arrays, stack overflows, or data corruption.\n\n### Patches\nWe have patched the issue in 27b417360cbd671ef55915e4bb6bb06af8b8a832 and ca8c013b5e97b1373b3bb1c97ea655e69f31a575. We will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2020-09-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/27b417360cbd671ef55915e4bb6bb06af8b8a832",
            "commit_sha":"27b417360cbd671ef55915e4bb6bb06af8b8a832",
            "patch":"MULTI",
            "chain_ord":"['27b417360cbd671ef55915e4bb6bb06af8b8a832', 'ca8c013b5e97b1373b3bb1c97ea655e69f31a575']",
            "before_first_fix_commit":"{'b9465214656c42204d86945eca80d211f50043a1'}",
            "last_fix_commit":"ca8c013b5e97b1373b3bb1c97ea655e69f31a575",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/19\/2020, 00:21:24",
            "message":"Prevent `int64` to `int` truncation in `Shard` API usage.\n\nThe function argument in `Shard` must be a function of two `int64` arguments. However, we are passing in a function with two `int` arguments. Thus, for large workloads, these arguments get truncated from positive `int64` values to negative `int` ones, resulting in a buffer out of bounds write.\n\nPiperOrigin-RevId: 332557334\nChange-Id: I236c9a2e7f53580e520571da8ba941a3aa9fa0b5",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/random_op.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/27b417360cbd671ef55915e4bb6bb06af8b8a832\/tensorflow%2Fcore%2Fkernels%2Frandom_op.cc', 'patch': '@@ -202,7 +202,7 @@ class RandomGammaOp : public OpKernel {\\n     \/\/ avoid a couple flops which can be done on a per-alpha basis.\\n \\n     auto DoWork = [samples_per_alpha, num_alphas, &rng, samples_flat,\\n-                   alpha_flat](int start_output, int limit_output) {\\n+                   alpha_flat](int64 start_output, int64 limit_output) {\\n       using Eigen::numext::exp;\\n       using Eigen::numext::log;\\n       using Eigen::numext::log1p;'}}",
            "message_norm":"prevent `int64` to `int` truncation in `shard` api usage.\n\nthe function argument in `shard` must be a function of two `int64` arguments. however, we are passing in a function with two `int` arguments. thus, for large workloads, these arguments get truncated from positive `int64` values to negative `int` ones, resulting in a buffer out of bounds write.\n\npiperorigin-revid: 332557334\nchange-id: i236c9a2e7f53580e520571da8ba941a3aa9fa0b5",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('out of bounds write', 'SECWORD', ''), ('332557334', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/random_op.cc'])",
            "num_files":1.0
        },
        {
            "index":2765,
            "vuln_id":"GHSA-qhxx-j73r-qpm2",
            "cwe_id":"{'CWE-908'}",
            "score":4.4,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2'}",
            "dataset":"osv",
            "summary":"Uninitialized memory access in TensorFlow ### Impact\nUnder certain cases, a saved model can trigger use of uninitialized values during code execution. This is caused by having tensor buffers be filled with the default value of the type but forgetting to [default initialize the quantized floating point types in Eigen](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f70160322a579144950dff1537dcbe3c7c09d6f5\/third_party\/eigen3\/unsupported\/Eigen\/CXX11\/src\/FixedPoint\/FixedPointTypes.h#L61-L104):\n\n```cc\nstruct QUInt8 {\n  QUInt8() {}\n  \/\/ ...\n  uint8_t value;\n};\n\nstruct QInt16 {\n  QInt16() {}\n  \/\/ ...\n  int16_t value;\n};\n\nstruct QUInt16 {\n  QUInt16() {}\n  \/\/ ...\n  uint16_t value;\n};\n\nstruct QInt32 {\n  QInt32() {}\n  \/\/ ...\n  int32_t value;\n};\n```\n\n### Patches\nWe have patched the issue in GitHub commit [ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2) and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\nSince this issue also impacts TF versions before 2.4, we will patch all releases between 1.15 and 2.3 inclusive.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2020-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2",
            "commit_sha":"ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2",
            "patch":"SINGLE",
            "chain_ord":"['ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2']",
            "before_first_fix_commit":"{'f70160322a579144950dff1537dcbe3c7c09d6f5'}",
            "last_fix_commit":"ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/24\/2020, 19:40:42",
            "message":"Default initialize fixed point Eigen types.\n\nIn certain cases, tensors are filled with default values of the type. But, for these fixed point types, these values were uninitialized. Thus, we would have uninitialized memory access bugs, some of which were caught by MSAN.\n\nPiperOrigin-RevId: 344101137\nChange-Id: I14555fda74dca3b5f1582da9008901937e3f14e2",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
            "files":"{'third_party\/eigen3\/unsupported\/Eigen\/CXX11\/src\/FixedPoint\/FixedPointTypes.h': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ace0c15a22f7f054abcc1f53eabbcb0a1239a9e2\/third_party%2Feigen3%2Funsupported%2FEigen%2FCXX11%2Fsrc%2FFixedPoint%2FFixedPointTypes.h', 'patch': '@@ -49,7 +49,7 @@ struct scalar_product_traits<QInt32, double> {\\n \/\/ the compiler from silently type cast the mantissa into a bigger or a smaller\\n \/\/ representation.\\n struct QInt8 {\\n-  QInt8() {}\\n+  QInt8() : value(0) {}\\n   QInt8(const int8_t v) : value(v) {}\\n   QInt8(const QInt32 v);\\n \\n@@ -59,7 +59,7 @@ struct QInt8 {\\n };\\n \\n struct QUInt8 {\\n-  QUInt8() {}\\n+  QUInt8() : value(0) {}\\n   QUInt8(const uint8_t v) : value(v) {}\\n   QUInt8(const QInt32 v);\\n \\n@@ -69,7 +69,7 @@ struct QUInt8 {\\n };\\n \\n struct QInt16 {\\n-  QInt16() {}\\n+  QInt16() : value(0) {}\\n   QInt16(const int16_t v) : value(v) {}\\n   QInt16(const QInt32 v);\\n   operator int() const { return static_cast<int>(value); }\\n@@ -78,7 +78,7 @@ struct QInt16 {\\n };\\n \\n struct QUInt16 {\\n-  QUInt16() {}\\n+  QUInt16() : value(0) {}\\n   QUInt16(const uint16_t v) : value(v) {}\\n   QUInt16(const QInt32 v);\\n   operator int() const { return static_cast<int>(value); }\\n@@ -87,7 +87,7 @@ struct QUInt16 {\\n };\\n \\n struct QInt32 {\\n-  QInt32() {}\\n+  QInt32() : value(0) {}\\n   QInt32(const int8_t v) : value(v) {}\\n   QInt32(const int32_t v) : value(v) {}\\n   QInt32(const uint32_t v) : value(static_cast<int32_t>(v)) {}'}}",
            "message_norm":"default initialize fixed point eigen types.\n\nin certain cases, tensors are filled with default values of the type. but, for these fixed point types, these values were uninitialized. thus, we would have uninitialized memory access bugs, some of which were caught by msan.\n\npiperorigin-revid: 344101137\nchange-id: i14555fda74dca3b5f1582da9008901937e3f14e2",
            "language":"en",
            "entities":"[('initialize', 'SECWORD', ''), ('fixed', 'ACTION', ''), ('fixed', 'ACTION', ''), ('uninitialized', 'SECWORD', ''), ('uninitialized memory', 'SECWORD', ''), ('bugs', 'FLAW', ''), ('344101137', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['third_party\/eigen3\/unsupported\/Eigen\/CXX11\/src\/FixedPoint\/FixedPointTypes.h'])",
            "num_files":1.0
        },
        {
            "index":552,
            "vuln_id":"GHSA-54qq-9chj-rxhv",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in LiveHelperChat LiveHelperChat prior to version 3.93 contains a cross-site scripting vulnerability.",
            "published_date":"2022-01-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/livehelperchat\/livehelperchat",
            "commit_href":"https:\/\/github.com\/livehelperchat\/livehelperchat\/commit\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
            "commit_sha":"8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
            "patch":"SINGLE",
            "chain_ord":"['8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb']",
            "before_first_fix_commit":"{'d7b85466c217b3750eaccc8703ce54ba8785c4d3'}",
            "last_fix_commit":"8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/27\/2022, 20:08:18",
            "message":"Escape in user box",
            "author":"Remigijus Kiminas",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LiveHelperChat\/livehelperchat\/raw\/8fdb4f67ac1a095331aa0fb4630ef9dfe8e75dcb\/lhc_web%2Fdesign%2Fdefaulttheme%2Ftpl%2Fpagelayouts%2Fparts%2Fuser_box.tpl.php', 'patch': '@@ -12,7 +12,7 @@\\n \\n ?>\\n <li class=\"nav-item dropleft\">\\n-    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\"><?php echo htmlspecialchars($UserData->name),\\' \\',htmlspecialchars($UserData->surname)?><\/a>\\n+    <a href=\"#\" class=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-expanded=\"false\" ng-non-bindable><?php echo htmlspecialchars($UserData->name),\\' \\',htmlspecialchars($UserData->surname)?><\/a>\\n     <div class=\"dropdown-menu\" style=\"min-width: 25rem;\" role=\"menu\">\\n \\n         <div class=\"row\">'}}",
            "message_norm":"escape in user box",
            "language":"en",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lhc_web\/design\/defaulttheme\/tpl\/pagelayouts\/parts\/user_box.tpl.php'])",
            "num_files":1.0
        },
        {
            "index":2537,
            "vuln_id":"GHSA-p8q8-jfcv-g2h2",
            "cwe_id":"{'CWE-59'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/pear\/Archive_Tar\/commit\/7789ebb2f34f9e4adb3a4152ad0d1548930a9755', 'https:\/\/github.com\/pear\/Archive_Tar\/commit\/b5832439b1f37331fb4f87e67fe4f61ca26bf7d4'}",
            "dataset":"osv",
            "summary":"Directory Traversal in Archive_Tar In Archive_Tar before 1.4.14, symlinks can refer to targets outside of the extracted archive, a different vulnerability than CVE-2020-36193.",
            "published_date":"2021-08-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/pear\/Archive_Tar",
            "commit_href":"https:\/\/github.com\/pear\/Archive_Tar\/commit\/b5832439b1f37331fb4f87e67fe4f61ca26bf7d4",
            "commit_sha":"b5832439b1f37331fb4f87e67fe4f61ca26bf7d4",
            "patch":"MULTI",
            "chain_ord":"['b5832439b1f37331fb4f87e67fe4f61ca26bf7d4', '7789ebb2f34f9e4adb3a4152ad0d1548930a9755']",
            "before_first_fix_commit":"{'8c00f3c220655961dc3f869f37005794ab3e3500', '4d761c5334c790e45ef3245f0864b8955c562caa'}",
            "last_fix_commit":"7789ebb2f34f9e4adb3a4152ad0d1548930a9755",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/18\/2021, 15:21:58",
            "message":"Properly fix symbolic link path traversal (CVE-2021-32610)",
            "author":"Michiel Rook",
            "comments":null,
            "stats":"{'additions': 29, 'deletions': 21, 'total': 50}",
            "files":"{'Archive\/Tar.php': {'additions': 29, 'deletions': 21, 'changes': 50, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pear\/Archive_Tar\/raw\/b5832439b1f37331fb4f87e67fe4f61ca26bf7d4\/Archive%2FTar.php', 'patch': '@@ -2124,39 +2124,47 @@ public function _extractList(\\n                             }\\n                         }\\n                     } elseif ($v_header[\\'typeflag\\'] == \"2\") {\\n+                        if (!$p_symlinks) {\\n+                            $this->_warning(\\'Symbolic links are not allowed. \\'\\n+                                . \\'Unable to extract {\\'\\n+                                . $v_header[\\'filename\\'] . \\'}\\'\\n+                            );\\n+                            return false;\\n+                        }\\n+                        $absolute_link = FALSE;\\n                         $link_depth = 0;\\n-                        foreach (explode(\"\/\", $v_header[\\'filename\\']) as $dir) {\\n-                            if ($dir === \"..\") {\\n-                                $link_depth--;\\n-                            } elseif ($dir !== \"\" && $dir !== \".\" ) {\\n-                                $link_depth++;\\n-                            }\\n+                        if (strpos($v_header[\\'link\\'], \"\/\") === 0 || strpos($v_header[\\'link\\'], \\':\\') !== FALSE) {\\n+                          $absolute_link = TRUE;\\n                         }\\n-                        foreach (explode(\"\/\", $v_header[\\'link\\']) as $dir){\\n-                            if ($link_depth <= 0) {\\n-                                break;\\n+                        else {\\n+                            $s_filename = preg_replace(\\'@^\\' . preg_quote($p_path) . \\'@\\', \"\", $v_header[\\'filename\\']);\\n+                            $s_linkname = str_replace(\\'\\\\\\\\\\', \\'\/\\', $v_header[\\'link\\']);\\n+                            foreach (explode(\"\/\", $s_filename) as $dir) {\\n+                                if ($dir === \"..\") {\\n+                                    $link_depth--;\\n+                                } elseif ($dir !== \"\" && $dir !== \".\" ) {\\n+                                    $link_depth++;\\n+                                }\\n                             }\\n-                            if ($dir === \"..\") {\\n-                                $link_depth--;\\n-                            } elseif ($dir !== \"\" && $dir !== \".\") {\\n-                                $link_depth++;\\n+                            foreach (explode(\"\/\", $s_linkname) as $dir){\\n+                                if ($link_depth <= 0) {\\n+                                    break;\\n+                                }\\n+                                if ($dir === \"..\") {\\n+                                    $link_depth--;\\n+                                } elseif ($dir !== \"\" && $dir !== \".\") {\\n+                                    $link_depth++;\\n+                                }\\n                             }\\n                         }\\n-                        if (strpos($v_header[\\'link\\'], \"\/\") === 0 or $link_depth <= 0) {\\n+                        if ($absolute_link || $link_depth <= 0) {\\n                             $this->_error(\\n                                  \\'Out-of-path file extraction {\\'\\n                                  . $v_header[\\'filename\\'] . \\' --> \\' .\\n                                  $v_header[\\'link\\'] . \\'}\\'\\n                             );\\n                             return false;\\n                         }\\n-                        if (!$p_symlinks) {\\n-                            $this->_warning(\\'Symbolic links are not allowed. \\'\\n-                                . \\'Unable to extract {\\'\\n-                                . $v_header[\\'filename\\'] . \\'}\\'\\n-                            );\\n-                            return false;\\n-                        }\\n                         if (@file_exists($v_header[\\'filename\\'])) {\\n                             @unlink($v_header[\\'filename\\']);\\n                         }'}}",
            "message_norm":"properly fix symbolic link path traversal (cve-2021-32610)",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('path traversal', 'SECWORD', ''), ('cve-2021-32610', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['Archive\/Tar.php'])",
            "num_files":1.0
        },
        {
            "index":3092,
            "vuln_id":"GHSA-vc5r-xfc4-4x22",
            "cwe_id":"{'CWE-79'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/pimcore\/data-hub\/commit\/15d5b57af2466eebd3bbc531ead5dafa35d0a36e'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Pimcore Datahub Pimcore Datahub prior to 1.2.4 is vulnerable to stored cross-site scripting. An admin user accessing Datahub triggers the attack, which may result in the user's cookie being stolen.",
            "published_date":"2022-03-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/data-hub",
            "commit_href":"https:\/\/github.com\/pimcore\/data-hub\/commit\/15d5b57af2466eebd3bbc531ead5dafa35d0a36e",
            "commit_sha":"15d5b57af2466eebd3bbc531ead5dafa35d0a36e",
            "patch":"SINGLE",
            "chain_ord":"['15d5b57af2466eebd3bbc531ead5dafa35d0a36e']",
            "before_first_fix_commit":"{'1561fa5cda0d1a79139efbd2113e42a63d5602e4'}",
            "last_fix_commit":"15d5b57af2466eebd3bbc531ead5dafa35d0a36e",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/16\/2022, 13:24:41",
            "message":"follow up to https:\/\/github.com\/pimcore\/data-hub\/pull\/462",
            "author":"dpahuja",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/Controller\/ConfigController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/data-hub\/raw\/15d5b57af2466eebd3bbc531ead5dafa35d0a36e\/src%2FController%2FConfigController.php', 'patch': \"@@ -50,7 +50,7 @@ private function buildItem($configuration): array\\n \\n         return [\\n             'id' => $name,\\n-            'text' => $name,\\n+            'text' => htmlspecialchars($name),\\n             'type' => 'config',\\n             'iconCls' => 'plugin_pimcore_datahub_icon_' . $type,\\n             'expandable' => false,\"}}",
            "message_norm":"follow up to https:\/\/github.com\/pimcore\/data-hub\/pull\/462",
            "language":"en",
            "entities":"[('https:\/\/github.com\/pimcore\/data-hub\/pull\/462', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Controller\/ConfigController.php'])",
            "num_files":1.0
        },
        {
            "index":1179,
            "vuln_id":"GHSA-89px-ww3j-g2mm",
            "cwe_id":"{'CWE-304', 'CWE-290'}",
            "score":8.7,
            "chain":"{'https:\/\/github.com\/labd\/wagtail-2fa\/commit\/13b12995d35b566df08a17257a23863ab6efb0ca', 'https:\/\/github.com\/labd\/wagtail-2fa\/commit\/a6711b29711729005770ff481b22675b35ff5c81'}",
            "dataset":"osv",
            "summary":"2FA bypass in Wagtail through new device path ## 2FA bypass through new device path\n\n### Impact\nIf someone gains access to someone's Wagtail login credentials, they can log into the CMS and bypass the 2FA check by changing the URL. They can then add a new device and gain full access to the CMS.\n\n### Patches\nThis problem has been patched in version 1.3.0.\n\n### Workarounds\nThere is no workaround at the moment.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com\/labd\/wagtail-2fa](https:\/\/github.com\/labd\/wagtail-2fa)\n* Email us at [security@labdigital.nl](mailto:security@labdigital.nl)",
            "published_date":"2019-11-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/labd\/wagtail-2fa",
            "commit_href":"https:\/\/github.com\/labd\/wagtail-2fa\/commit\/13b12995d35b566df08a17257a23863ab6efb0ca",
            "commit_sha":"13b12995d35b566df08a17257a23863ab6efb0ca",
            "patch":"MULTI",
            "chain_ord":"['a6711b29711729005770ff481b22675b35ff5c81', '13b12995d35b566df08a17257a23863ab6efb0ca']",
            "before_first_fix_commit":"{'bceef354b3ab885350e3bc79a793589c491f6037'}",
            "last_fix_commit":"13b12995d35b566df08a17257a23863ab6efb0ca",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/26\/2019, 11:56:05",
            "message":"Update changelog for 1.3.0 release",
            "author":"Mike Dingjan",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'CHANGES': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/labd\/wagtail-2fa\/raw\/13b12995d35b566df08a17257a23863ab6efb0ca\/CHANGES', 'patch': '@@ -1,3 +1,11 @@\\n+1.3.0 (2019.11.26)\\n+==================\\n+ - Add OtpRequiredMixin to enforce OTP checks in views\\n+ - Resolve possible vulnerabilities:\\n+    - [CWE-290](http:\/\/cwe.mitre.org\/data\/definitions\/290.html)\\n+    - [CWE-20](http:\/\/cwe.mitre.org\/data\/definitions\/20.html)\\n+\\n+\\n 1.2.0 (2019-10-30)\\n ==================\\n  - Added missing deps for generation of the docs'}}",
            "message_norm":"update changelog for 1.3.0 release",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('1.3.0', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['CHANGES'])",
            "num_files":1.0
        },
        {
            "index":1624,
            "vuln_id":"GHSA-cwfw-4gq5-mrqx",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/micromatch\/braces\/commit\/abdafb0cae1e0c00f184abbadc692f4eaa98f451'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDoS) in braces A vulnerability was found in Braces versions prior to 2.3.1. Affected versions of this package are vulnerable to Regular Expression Denial of Service (ReDoS) attacks.",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/micromatch\/braces",
            "commit_href":"https:\/\/github.com\/micromatch\/braces\/commit\/abdafb0cae1e0c00f184abbadc692f4eaa98f451",
            "commit_sha":"abdafb0cae1e0c00f184abbadc692f4eaa98f451",
            "patch":"SINGLE",
            "chain_ord":"['abdafb0cae1e0c00f184abbadc692f4eaa98f451']",
            "before_first_fix_commit":"{'37934142c1aeea48b6fb03edbdcf90e45b5cb4a1'}",
            "last_fix_commit":"abdafb0cae1e0c00f184abbadc692f4eaa98f451",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/16\/2018, 21:09:36",
            "message":"optimize regex",
            "author":"jonschlinkert",
            "comments":"{'com_1': {'author': 'sathish-spidie', 'datetime': '04\/18\/2019, 03:42:11', 'body': \"can you explain, how to achieve this? I'm a low-level developer and didn't understand why this code stands for and what to do with it! sorry if I waste your time by making you read this comment, in case you find this comment useless.\\r\\n\\r\\nmy error is\\r\\n\\r\\n` Low             Regular Expression Denial of Service                          \\r\\n                                                                                \\r\\n  Package         braces                                                        \\r\\n                                                                                \\r\\n  Patched in      >=2.3.1                                                       \\r\\n                                                                                \\r\\n  Dependency of   browser-sync [dev]                                            \\r\\n                                                                                \\r\\n  Path            browser-sync > micromatch > braces                            \\r\\n                                                                                \\r\\n  More info       https:\/\/npmjs.com\/advisories\/786         `\"}, 'com_2': {'author': 'kousu', 'datetime': '04\/18\/2019, 18:24:04', 'body': '@sathish-spidie , you can find out the solution on the link there: https:\/\/npmjs.com\/advisories\/786:\\r\\n\\r\\n> Remediation\\r\\n> \\r\\n> Upgrade to version 2.3.1 or higher.\\r\\n\\r\\nWhat this means is that in your package.json you should make sure the line for \"braces\" under \"dependencies\"  says\\r\\n\\r\\n```\\r\\n\"braces\": \"^2.3.1\",\\r\\n```\\r\\n\\r\\nand then delete your cached npm packages by \\r\\n\\r\\n```\\r\\nrm -r node_modules\/ package-lock.json\\r\\n```\\r\\n\\r\\nand then\\r\\n\\r\\n```\\r\\nnpm install\\r\\n```\\r\\n\\r\\n---\\r\\n\\r\\nIf you don\\'t directly depend on \"braces\", which is the situation I am in, you can use\\r\\n\\r\\n```\\r\\nnpm list\\r\\n```\\r\\n\\r\\nto figure out which of your packages is depending on \"braces\", and then go make sure to update each of those packages in the same way: version bump them, make sure to prefix the versions of everything with \"^\", and then delete your packages and regenerate package-lock.json by redoing `npm install`; that will get the latest, hopefully bugfixed, versions of all your packages; but if any of your packages have not yet updated to use `\"braces\": \"^2.3.1\"` then you will have to go to their github projects and file an issue. \\r\\n\\r\\n---\\r\\n\\r\\nA comment on a commit inside the braces project isn\\'t really a proper general support forum for npm. For that, and for future questions, you will probably have good luck asking at https:\/\/npm.community\/c\/support.  I hope the above helps and lets you extend your developer skills.'}, 'com_3': {'author': 'jonschlinkert', 'datetime': '04\/18\/2019, 20:01:13', 'body': \"@kousu that was a fantastic description, and a really good summary of the steps that need to be taken. Thank you!\\r\\n\\r\\n> you will probably have good luck asking at https:\/\/npm.community\/c\/support. I hope the above helps and lets you extend your developer skills.\\r\\n\\r\\nOnly one thing I'd like to point out. Generally, https:\/\/npm.community\/c\/support is for **NPM** support, not for packages like this one. Meaning, if you need something directly related to the package manager itself, that's the place to go. But ideally, when a user has an issue or support question like this, the best place to get answers is to:\\r\\n\\r\\n1. read through previous issues first - @sathish-spidie would have seen that this question has been answered a couple of dozen times already on this project and other projects that depend on this one\\r\\n1. StackOverflow - people get reputation points for helping others\\r\\n1. if it seems like no one has addressed the issue already, and you have genuinely stumbled across a previously undiscovered bug, then create a new issue on the GitHub repository of the code project.\"}, 'com_4': {'author': 'KevinGrant12', 'datetime': '05\/08\/2019, 23:49:41', 'body': \"Hello, I have the same exact issue that stems from babel.\\r\\nI was unable to run this line rm -r node_modules\/ package-lock.json and it makes sense because the packag-lock is not inside the node_modules directory.\\r\\nWhen I run npm list I can see that instances of 'braces' are at 2.3.2.\\r\\n\\r\\nAny thoughts on how to fix?\\r\\nThanks!\"}, 'com_5': {'author': 'biggianteye', 'datetime': '06\/07\/2019, 12:57:09', 'body': \"> I was unable to run this line rm -r node_modules\/ package-lock.json and it makes sense because the packag-lock is not inside the node_modules directory.\\r\\n\\r\\nThere is a space between `node_modules` and `package-lock.json`. The lock file is not inside the node_modules folder. It's at the same level.\"}, 'com_6': {'author': 'robpl1', 'datetime': '07\/14\/2019, 08:57:18', 'body': 'The problem I have here is that the braces package itself is showing \\r\\n{  \"_from\": \"braces@^1.8.2\",\\r\\n  \"_id\": \"braces@1.8.5\",\\r\\n\\r\\nSo how to update that would help.'}, 'com_7': {'author': 'martynawilkonska', 'datetime': '07\/16\/2019, 08:45:50', 'body': 'I have the same problem. I am unable to update braces, after reinstall they are still 1.8.5.'}, 'com_8': {'author': 'janzenz', 'datetime': '10\/08\/2019, 02:02:12', 'body': \"@martynawilkonska have you removed your `node_modules` cache and `package-lock.json` file? If not, try that and `npm install` again. If it still does that, my next hunch is that you're `braces` is a transitive dependency in your package. Try `npm ls braces` and see which package requires it and maybe you can try and upgrade that parent package which potentially will fix your problem.\"}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/parsers.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/micromatch\/braces\/raw\/abdafb0cae1e0c00f184abbadc692f4eaa98f451\/lib%2Fparsers.js', 'patch': \"@@ -127,7 +127,7 @@ module.exports = function(braces, options) {\\n     .set('multiplier', function() {\\n       var isInside = this.isInside('brace');\\n       var pos = this.position();\\n-      var m = this.match(\/^\\\\{(,+(?:(\\\\{,+\\\\})*),*|,*(?:(\\\\{,+\\\\})*),+)\\\\}\/);\\n+      var m = this.match(\/^\\\\{((?:,|\\\\{,+\\\\})+)\\\\}\/);\\n       if (!m) return;\\n \\n       this.multiplier = true;\"}}",
            "message_norm":"optimize regex",
            "language":"ro",
            "entities":"[('optimize', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/parsers.js'])",
            "num_files":1.0
        },
        {
            "index":1504,
            "vuln_id":"GHSA-c7fh-chf7-jr5x",
            "cwe_id":"{'CWE-770'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/fracpete\/vfsjfilechooser2\/commit\/9c9f2c317f3de5ece60a3ae28c371e9796e3909b'}",
            "dataset":"osv",
            "summary":"ReDOS in Vfsjfilechooser2 A Regular Expression Denial of Service (ReDOS) vulnerability was discovered in Vfsjfilechooser2 which occurs when the application attempts to validate crafted URIs.",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/fracpete\/vfsjfilechooser2",
            "commit_href":"https:\/\/github.com\/fracpete\/vfsjfilechooser2\/commit\/9c9f2c317f3de5ece60a3ae28c371e9796e3909b",
            "commit_sha":"9c9f2c317f3de5ece60a3ae28c371e9796e3909b",
            "patch":"SINGLE",
            "chain_ord":"['9c9f2c317f3de5ece60a3ae28c371e9796e3909b']",
            "before_first_fix_commit":"{'5a5f3487dd44066beb2351a332751932df39973b'}",
            "last_fix_commit":"9c9f2c317f3de5ece60a3ae28c371e9796e3909b",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/06\/2020, 21:18:37",
            "message":"incorporated Yeting Li's fix for Potential Regex Denial of Service (ReDoS), see https:\/\/github.com\/fracpete\/vfsjfilechooser2\/issues\/7\npasswords can now also contain special characters (eg :), which have to be URL encoded (ie %3A)",
            "author":"Peter Reutemann",
            "comments":null,
            "stats":"{'additions': 95, 'deletions': 73, 'total': 168}",
            "files":"{'src\/main\/java\/com\/googlecode\/vfsjfilechooser2\/utils\/VFSURIValidator.java': {'additions': 95, 'deletions': 73, 'changes': 168, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/fracpete\/vfsjfilechooser2\/raw\/9c9f2c317f3de5ece60a3ae28c371e9796e3909b\/src%2Fmain%2Fjava%2Fcom%2Fgooglecode%2Fvfsjfilechooser2%2Futils%2FVFSURIValidator.java', 'patch': '@@ -2,6 +2,8 @@\\n  * VFS URIs validator\\n  *\\n  * Copyright (C) 2008 Stan Love\\n+ * Copyright (C) 2020 University of Waikato, Hamilton, NZ\\n+ * Copyright (C) 2020 Yeting Li\\n  *\\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\\n  * you may not use this file except in compliance with the License.\\n@@ -233,11 +235,11 @@ else if ((drive != null) && (file == null)) {\\n \\t\\t\/\/        \"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/(.*?:.*?@)*([^:]+)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/.*)\");\\n \\t\\t\/\/\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/(.+:.+@)*([^:]+)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/.*)\");\\n \\t\\tPattern p_ftp2 = Pattern\\n-\\t\\t\\t\\t.compile(\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/(.+:.+@)*([^:]+?\/*)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/.*)\");\\n+\\t\\t\\t\\t.compile(\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/([^:@]+:[^:@]+@)*([^:]+?\/*)([ ]*:[0-9]+)*([ ]*:)*(\/.*)\");\\n \\t\\tMatcher m_ftp2 = p_ftp2.matcher(_uri);\\n \\n \\t\\tPattern p_ftp3 = Pattern\\n-\\t\\t\\t\\t.compile(\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/(.+:.+@)*([^:]+)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/*?.*)\");\\n+\\t\\t\\t\\t.compile(\"(ftp|FTP|sftp|SFTP|http|HTTP|https|HTTPS|webdav|WEBDAV|smb|SMB):\/\/([^:@]+:[^:@]+@)*([^:]+)([ \\t]*:[0-9]+)*([ \\t]*:)*(\/*?.*)\");\\n \\t\\tMatcher m_ftp3 = p_ftp3.matcher(_uri);\\n \\n \\t\\tif (m_ftp2.matches()) {\\n@@ -344,6 +346,26 @@ else if ((drive != null) && (file == null)) {\\n \\t\\t\\tif (local_pass.startsWith(\":\")) {\\n \\t\\t\\t\\tlocal_pass = local_pass.substring(1);\\n \\t\\t\\t}\\n+\\t\\t\\t\/\/ decode specials chars (URL encoded %XY)\\n+\\t\\t\\tif (local_pass.contains(\"%\")) {\\n+\\t\\t\\t\\tString tmp_local_pass = local_pass;\\n+\\t\\t\\t\\tStringBuilder new_local_pass = new StringBuilder();\\n+\\t\\t\\t\\twhile (tmp_local_pass.contains(\"%\")) {\\n+\\t\\t\\t\\t\\tnew_local_pass.append(tmp_local_pass.substring(0, tmp_local_pass.indexOf(\\'%\\')));\\n+\\t\\t\\t\\t\\ttmp_local_pass = tmp_local_pass.substring(tmp_local_pass.indexOf(\\'%\\'));\\n+\\t\\t\\t\\t\\tif (tmp_local_pass.length() >= 3) {\\n+\\t\\t\\t\\t\\t\\tchar c = (char) Integer.parseInt(tmp_local_pass.substring(1, 3), 16);\\n+\\t\\t\\t\\t\\t\\tnew_local_pass.append(c);\\n+\\t\\t\\t\\t\\t\\ttmp_local_pass = tmp_local_pass.substring(3);\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t\\telse {\\n+\\t\\t\\t\\t\\t\\tbreak;\\n+\\t\\t\\t\\t\\t}\\n+\\t\\t\\t\\t}\\n+\\t\\t\\t\\tif (!tmp_local_pass.isEmpty())\\n+\\t\\t\\t\\t\\tnew_local_pass.append(tmp_local_pass);\\n+\\t\\t\\t\\tlocal_pass = new_local_pass.toString();\\n+\\t\\t\\t}\\n \\t\\t}\\n \\t\\tlocal_hostname = hostname;\\n \\t\\tlocal_port = port;\\n@@ -823,26 +845,26 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"ftp:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"ftp:\/\/user:pass%3Aa@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n \\t\\t}\\n \\t\\tv.assertEquals(v.getProtocol(), \"ftp\");\\n \\t\\tv.assertEquals(v.getUser(), \"user\");\\n-\\t\\tv.assertEquals(v.getPassword(), \"pass:\");\\n+\\t\\tv.assertEquals(v.getPassword(), \"pass:a\");\\n \\t\\tv.assertEquals(v.getHostname(), \"machine\");\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"ftp:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"ftp:\/\/user:pass%3A%3a@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n \\t\\t}\\n \\t\\tv.assertEquals(v.getProtocol(), \"ftp\");\\n \\t\\tv.assertEquals(v.getUser(), \"user\");\\n-\\t\\tv.assertEquals(v.getPassword(), \"pass:\");\\n+\\t\\tv.assertEquals(v.getPassword(), \"pass::\");\\n \\t\\tv.assertEquals(v.getHostname(), \"machine\");\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n@@ -992,7 +1014,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"FTP:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"FTP:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1004,7 +1026,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"FTP:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"FTP:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1161,7 +1183,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"sftp:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1173,7 +1195,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"sftp:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"sftp:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1185,7 +1207,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"sftp: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"sftp: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1197,7 +1219,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"sftp:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1209,7 +1231,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"sftp:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1221,7 +1243,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"sftp:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1233,7 +1255,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"sftp:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"sftp:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1329,7 +1351,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SFTP:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"SFTP:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1341,7 +1363,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"SFTP:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"SFTP:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1498,7 +1520,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"http:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1510,7 +1532,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"http:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"http:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1522,7 +1544,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"http: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"http: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1534,7 +1556,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"http:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1546,7 +1568,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"http:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1558,7 +1580,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"http:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1570,7 +1592,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"http:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"http:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1666,7 +1688,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"HTTP:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1678,7 +1700,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"HTTP:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"HTTP:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1690,7 +1712,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"HTTP: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"HTTP: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1702,7 +1724,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"HTTP:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1714,7 +1736,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"HTTP:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1726,7 +1748,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"HTTP:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1738,7 +1760,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTP:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"HTTP:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1835,7 +1857,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"https:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1847,7 +1869,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"https:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"https:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1859,7 +1881,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"https: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"https: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1871,7 +1893,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"https:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1883,7 +1905,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"https:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1895,7 +1917,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"https:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -1907,7 +1929,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"https:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"https:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2003,7 +2025,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"HTTPS:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2015,7 +2037,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"HTTPS:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"HTTPS:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2027,7 +2049,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"HTTPS: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"HTTPS: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2039,7 +2061,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"HTTPS:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2051,7 +2073,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"HTTPS:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2063,7 +2085,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"HTTPS:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2075,7 +2097,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"HTTPS:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"HTTPS:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2172,7 +2194,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"webdav:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2184,13 +2206,13 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"webdav:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"webdav:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n \\t\\t}\\n \\n-\\t\\ts = \"webdav: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"webdav: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2202,7 +2224,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"webdav:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2214,7 +2236,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"webdav:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2226,7 +2248,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"webdav:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2238,7 +2260,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"webdav:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"webdav:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2334,7 +2356,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"WEBDAV:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2346,7 +2368,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"WEBDAV:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"WEBDAV:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2358,7 +2380,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"WEBDAV: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"WEBDAV: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2370,7 +2392,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"WEBDAV:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2382,7 +2404,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"WEBDAV:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2394,7 +2416,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"WEBDAV:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2406,7 +2428,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"WEBDAV:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"WEBDAV:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2503,7 +2525,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"smb:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2515,7 +2537,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"smb:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"smb:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2527,7 +2549,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"smb: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"smb: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2539,7 +2561,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"smb:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2551,7 +2573,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"smb:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2563,7 +2585,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"smb:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2575,7 +2597,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"smb:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"smb:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2671,7 +2693,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/\/user:pass:@machine\/the_file\"; \/\/can \":\" be part of a password?\\n+\\t\\ts = \"SMB:\/\/user:pass%3A@machine\/the_file\"; \/\/if \":\" is part of a password, it must be encoded (: -> %3A)\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2683,7 +2705,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_file\");\\n \\n-\\t\\ts = \"SMB:\/\/user:pass:@machine\/the_dir\/\";\\n+\\t\\ts = \"SMB:\/\/user:pass%3A@machine\/the_dir\/\";\\n \\n \\t\\tif (!v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2695,7 +2717,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertEquals(v.getFile(), \"\/the_dir\/\");\\n \\n-\\t\\ts = \"SMB: \/\/user:pass:@machine\/the_file\"; \/\/failure tests\\n+\\t\\ts = \"SMB: \/\/user:pass%3A@machine\/the_file\"; \/\/failure tests\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2707,7 +2729,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/ \/user:pass:@machine\/the_file\";\\n+\\t\\ts = \"SMB:\/ \/user:pass%3A@machine\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2719,7 +2741,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/ \/user:pass:@machine\";\\n+\\t\\ts = \"SMB:\/ \/user:pass%3A@machine\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2731,7 +2753,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/\/user:pass:@:123\/a\";\\n+\\t\\ts = \"SMB:\/\/user:pass%3A@:123\/a\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);\\n@@ -2743,7 +2765,7 @@ public static void main(String[] args) {\\n \\t\\tv.assertNull(v.getPort());\\n \\t\\tv.assertNull(v.getFile());\\n \\n-\\t\\ts = \"SMB:\/\/user:pass:@machine:a\/the_file\";\\n+\\t\\ts = \"SMB:\/\/user:pass%3A@machine:a\/the_file\";\\n \\n \\t\\tif (v.isValid(s)) {\\n \\t\\t\\tv.error_msg(s);'}}",
            "message_norm":"incorporated yeting li's fix for potential regex denial of service (redos), see https:\/\/github.com\/fracpete\/vfsjfilechooser2\/issues\/7\npasswords can now also contain special characters (eg :), which have to be url encoded (ie %3a)",
            "language":"en",
            "entities":"[('denial of service', 'SECWORD', ''), ('redos', 'SECWORD', ''), ('https:\/\/github.com\/fracpete\/vfsjfilechooser2\/issues\/7', 'URL', ''), ('passwords', 'SECWORD', ''), ('encoded', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/googlecode\/vfsjfilechooser2\/utils\/VFSURIValidator.java'])",
            "num_files":1.0
        },
        {
            "index":134,
            "vuln_id":"GHSA-2rfj-2mwp-787v",
            "cwe_id":"{'CWE-787'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/3d6226cc2d1077537220361c82e34a362c6c76ee', 'https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/36644ee0d4cc2bc97a3cd49c3540e6eea193182a'}",
            "dataset":"osv",
            "summary":"Out-of-bounds write A remote code execution vulnerability exists in the way that the Chakra scripting engine handles objects in memory in Microsoft Edge, aka 'Chakra Scripting Engine Memory Corruption Vulnerability'. This CVE ID is unique from CVE-2019-0989, CVE-2019-0991, CVE-2019-0992, CVE-2019-1002, CVE-2019-1003, CVE-2019-1024, CVE-2019-1051, CVE-2019-1052.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/chakra-core\/ChakraCore",
            "commit_href":"https:\/\/github.com\/chakra-core\/ChakraCore\/commit\/36644ee0d4cc2bc97a3cd49c3540e6eea193182a",
            "commit_sha":"36644ee0d4cc2bc97a3cd49c3540e6eea193182a",
            "patch":"MULTI",
            "chain_ord":"['36644ee0d4cc2bc97a3cd49c3540e6eea193182a', '3d6226cc2d1077537220361c82e34a362c6c76ee']",
            "before_first_fix_commit":"{'d797e3f00e34c12c8c0ae52f56344325439dccd7', 'eabf77ad17010f220639e5261798da9ac14e43e3'}",
            "last_fix_commit":"3d6226cc2d1077537220361c82e34a362c6c76ee",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/15\/2019, 23:54:48",
            "message":"CVE-2019-0993",
            "author":"Paul Leathers",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'lib\/Runtime\/Language\/JavascriptOperators.cpp': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/chakra-core\/ChakraCore\/raw\/36644ee0d4cc2bc97a3cd49c3540e6eea193182a\/lib%2FRuntime%2FLanguage%2FJavascriptOperators.cpp', 'patch': \"@@ -9655,6 +9655,10 @@ using namespace Js;\\n             Var result = CALL_ENTRYPOINT(threadContext, marshalledFunction->GetEntryPoint(), function, CallInfo(flags, 1), thisVar);\\n             result = CrossSite::MarshalVar(requestContext, result);\\n \\n+            \/\/ Set implicit call flags so we bail out if we're trying to propagate the value forward, e.g., from a compare. Subsequent calls\\n+            \/\/ to the getter may produce different results.\\n+            threadContext->AddImplicitCallFlags(ImplicitCall_Accessor);\\n+\\n             return result;\\n         });\\n     }\"}}",
            "message_norm":"cve-2019-0993",
            "language":"ro",
            "entities":"[('cve-2019-0993', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/Runtime\/Language\/JavascriptOperators.cpp'])",
            "num_files":1.0
        },
        {
            "index":2733,
            "vuln_id":"GHSA-qc36-q22q-cjw3",
            "cwe_id":"{'CWE-147'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2', 'https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce'}",
            "dataset":"osv",
            "summary":"SMTP command injection in lettre ### Impact\n\nAffected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.\n\n### Fix\n\nThe flaw is fixed by correctly handling consecutive CRLF sequences.\n\n### References\n\n* [RUSTSEC-2021-0069](https:\/\/rustsec.org\/advisories\/RUSTSEC-2021-0069.html)",
            "published_date":"2021-07-12",
            "chain_len":2,
            "project":"https:\/\/github.com\/lettre\/lettre",
            "commit_href":"https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2",
            "commit_sha":"93458d01fed0ec81c0e7b4e98e6f35961356fae2",
            "patch":"MULTI",
            "chain_ord":"['93458d01fed0ec81c0e7b4e98e6f35961356fae2', '8bfc20506cc5e098fe6eb3d1cafe3bea791215ce']",
            "before_first_fix_commit":"{'d930c42d5069e344a9dfa84ebe4b60bf3b11ac64'}",
            "last_fix_commit":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/22\/2021, 17:31:36",
            "message":"fix(transport-smtp): Fix transparency codec\n\nIt fails to add transparency when a period is preceded by two\nsuccessive CRLF.",
            "author":"Paolo Barbolini",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 2, 'total': 13}",
            "files":"{'src\/transport\/smtp\/client\/mod.rs': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lettre\/lettre\/raw\/93458d01fed0ec81c0e7b4e98e6f35961356fae2\/src%2Ftransport%2Fsmtp%2Fclient%2Fmod.rs', 'patch': '@@ -78,7 +78,15 @@ impl ClientCodec {\\n                     match self.escape_count {\\n                         0 => self.escape_count = if *byte == b\\'\\\\r\\' { 1 } else { 0 },\\n                         1 => self.escape_count = if *byte == b\\'\\\\n\\' { 2 } else { 0 },\\n-                        2 => self.escape_count = if *byte == b\\'.\\' { 3 } else { 0 },\\n+                        2 => {\\n+                            self.escape_count = if *byte == b\\'.\\' {\\n+                                3\\n+                            } else if *byte == b\\'\\\\r\\' {\\n+                                1\\n+                            } else {\\n+                                0\\n+                            }\\n+                        }\\n                         _ => unreachable!(),\\n                     }\\n                     if self.escape_count == 3 {\\n@@ -111,6 +119,7 @@ mod test {\\n         let mut buf: Vec<u8> = vec![];\\n \\n         codec.encode(b\"test\\\\r\\\\n\", &mut buf);\\n+        codec.encode(b\"test\\\\r\\\\n\\\\r\\\\n\", &mut buf);\\n         codec.encode(b\".\\\\r\\\\n\", &mut buf);\\n         codec.encode(b\"\\\\r\\\\ntest\", &mut buf);\\n         codec.encode(b\"te\\\\r\\\\n.\\\\r\\\\nst\", &mut buf);\\n@@ -121,7 +130,7 @@ mod test {\\n         codec.encode(b\"test\", &mut buf);\\n         assert_eq!(\\n             String::from_utf8(buf).unwrap(),\\n-            \"test\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n+            \"test\\\\r\\\\ntest\\\\r\\\\n\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n         );\\n     }'}}",
            "message_norm":"fix(transport-smtp): fix transparency codec\n\nit fails to add transparency when a period is preceded by two\nsuccessive crlf.",
            "language":"en",
            "entities":"[('fix(transport', 'ACTION', ''), ('fix', 'ACTION', ''), ('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/transport\/smtp\/client\/mod.rs'])",
            "num_files":1.0
        },
        {
            "index":2923,
            "vuln_id":"GHSA-rcxc-3w2m-mp8h",
            "cwe_id":"{'CWE-502'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/NVIDIA\/NVFlare\/commit\/fd018eea9dff925a765079a94c2f017920fcda67'}",
            "dataset":"osv",
            "summary":"Unsafe deserialisation in the PKI implementation scheme of NVFlare ### Impact\nNVFLARE contains a vulnerability in its PKI implementation module, where The CA credentials are transported via pickle and no safe deserialization. The deserialization of Untrusted Data may allow an unprivileged network attacker to cause Remote Code Execution, Denial Of Service, and Impact to both Confidentiality and Integrity.\nAll versions before 2.1.2 are affected.\n\nCVSS Score = 9.8\n[AV:N\/AC:L\/PR:N\/UI:N\/S:U\/C:H\/I:H\/A:H](https:\/\/nam11.safelinks.protection.outlook.com\/?url=https%3A%2F%2Fnvd.nist.gov%2Fvuln-metrics%2Fcvss%2Fv3-calculator%3Fvector%3DAV%3AN%2FAC%3AL%2FPR%3AN%2FUI%3AN%2FS%3AU%2FC%3AH%2FI%3AH%2FA%3AH&data=05%7C01%7Cchesterc%40nvidia.com%7Ce9600bde16854b0b380008da4fc544f7%7C43083d15727340c1b7db39efd9ccc17a%7C0%7C0%7C637910005925574215%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000%7C%7C%7C&sdata=5kBrXEmAbqp8R31JCH%2FG95MUly72UPVihnBwiRFmvBY%3D&reserved=0)\n\n\n\n### Patches\nThe patch will be included in nvflare==2.1.2\n\n### Workarounds\nReplace pickle serialization with JSON and change the code accordingly\n\nAdditional information\nIssue Found by: Oliver Sellwood (@Nintorac)",
            "published_date":"2022-06-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/NVIDIA\/NVFlare",
            "commit_href":"https:\/\/github.com\/NVIDIA\/NVFlare\/commit\/fd018eea9dff925a765079a94c2f017920fcda67",
            "commit_sha":"fd018eea9dff925a765079a94c2f017920fcda67",
            "patch":"SINGLE",
            "chain_ord":"['fd018eea9dff925a765079a94c2f017920fcda67']",
            "before_first_fix_commit":"{'f0a005982122277a1ac22cb04f977186393d8ab2'}",
            "last_fix_commit":"fd018eea9dff925a765079a94c2f017920fcda67",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2022, 15:30:59",
            "message":"Replace pickle in state persistence in provision cert with json (#412)",
            "author":"Isaac Yang",
            "comments":null,
            "stats":"{'additions': 17, 'deletions': 13, 'total': 30}",
            "files":"{'nvflare\/lighter\/impl\/cert.py': {'additions': 17, 'deletions': 13, 'changes': 30, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/NVIDIA\/NVFlare\/raw\/fd018eea9dff925a765079a94c2f017920fcda67\/nvflare%2Flighter%2Fimpl%2Fcert.py', 'patch': '@@ -13,8 +13,8 @@\\n # limitations under the License.\\n \\n import datetime\\n+import json\\n import os\\n-import pickle\\n \\n from cryptography import x509\\n from cryptography.hazmat.backends import default_backend\\n@@ -50,13 +50,13 @@ def __init__(self):\\n \\n     def initialize(self, ctx):\\n         state_dir = self.get_state_dir(ctx)\\n-        cert_file = os.path.join(state_dir, \"cert.pkl\")\\n+        cert_file = os.path.join(state_dir, \"cert.json\")\\n         if os.path.exists(cert_file):\\n-            self.persistent_state = pickle.load(open(cert_file, \"rb\"))\\n-            self.serialized_cert = self.persistent_state[\"root_cert\"]\\n+            self.persistent_state = json.load(open(cert_file, \"rt\"))\\n+            self.serialized_cert = self.persistent_state[\"root_cert\"].encode(\"ascii\")\\n             self.root_cert = x509.load_pem_x509_certificate(self.serialized_cert, default_backend())\\n             self.pri_key = serialization.load_pem_private_key(\\n-                self.persistent_state[\"root_pri_key\"], password=None, backend=default_backend()\\n+                self.persistent_state[\"root_pri_key\"].encode(\"ascii\"), password=None, backend=default_backend()\\n             )\\n             self.pub_key = self.pri_key.public_key()\\n             self.subject = self.root_cert.subject\\n@@ -69,26 +69,30 @@ def _build_root(self, subject):\\n             self.pri_key = pri_key\\n             self.pub_key = pub_key\\n             self.serialized_cert = serialize_cert(self.root_cert)\\n-            self.persistent_state[\"root_cert\"] = self.serialized_cert\\n-            self.persistent_state[\"root_pri_key\"] = serialize_pri_key(self.pri_key)\\n+            self.persistent_state[\"root_cert\"] = self.serialized_cert.decode(\"ascii\")\\n+            self.persistent_state[\"root_pri_key\"] = serialize_pri_key(self.pri_key).decode(\"ascii\")\\n \\n     def _build_write_cert_pair(self, participant, base_name, ctx):\\n         subject = participant.subject\\n         if self.persistent_state and subject in self.persistent_state:\\n-            cert = x509.load_pem_x509_certificate(self.persistent_state[subject][\"cert\"], default_backend())\\n+            cert = x509.load_pem_x509_certificate(\\n+                self.persistent_state[subject][\"cert\"].encode(\"ascii\"), default_backend()\\n+            )\\n             pri_key = serialization.load_pem_private_key(\\n-                self.persistent_state[subject][\"pri_key\"], password=None, backend=default_backend()\\n+                self.persistent_state[subject][\"pri_key\"].encode(\"ascii\"), password=None, backend=default_backend()\\n             )\\n         else:\\n             pri_key, cert = self.get_pri_key_cert(participant)\\n-            self.persistent_state[subject] = dict(cert=serialize_cert(cert), pri_key=serialize_pri_key(pri_key))\\n+            self.persistent_state[subject] = dict(\\n+                cert=serialize_cert(cert).decode(\"ascii\"), pri_key=serialize_pri_key(pri_key).decode(\"ascii\")\\n+            )\\n         dest_dir = self.get_kit_dir(participant, ctx)\\n         with open(os.path.join(dest_dir, f\"{base_name}.crt\"), \"wb\") as f:\\n             f.write(serialize_cert(cert))\\n         with open(os.path.join(dest_dir, f\"{base_name}.key\"), \"wb\") as f:\\n             f.write(serialize_pri_key(pri_key))\\n         pkcs12 = serialization.pkcs12.serialize_key_and_certificates(\\n-            subject.encode(\"utf-8\"), pri_key, cert, None, serialization.BestAvailableEncryption(subject.encode(\"utf-8\"))\\n+            subject.encode(\"ascii\"), pri_key, cert, None, serialization.BestAvailableEncryption(subject.encode(\"ascii\"))\\n         )\\n         with open(os.path.join(dest_dir, f\"{base_name}.pfx\"), \"wb\") as f:\\n             f.write(pkcs12)\\n@@ -163,5 +167,5 @@ def _x509_name(self, cn_name, org_name=None):\\n \\n     def finalize(self, ctx):\\n         state_dir = self.get_state_dir(ctx)\\n-        cert_file = os.path.join(state_dir, \"cert.pkl\")\\n-        pickle.dump(self.persistent_state, open(cert_file, \"wb\"))\\n+        cert_file = os.path.join(state_dir, \"cert.json\")\\n+        json.dump(self.persistent_state, open(cert_file, \"wt\"))'}}",
            "message_norm":"replace pickle in state persistence in provision cert with json (#412)",
            "language":"en",
            "entities":"[('#412', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['nvflare\/lighter\/impl\/cert.py'])",
            "num_files":1.0
        },
        {
            "index":2112,
            "vuln_id":"GHSA-hq37-853p-g5cf",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/Kozea\/CairoSVG\/commit\/cfc9175e590531d90384aa88845052de53d94bf3'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in CairoSVG # Doyensec Vulnerability Advisory \n\n* Regular Expression Denial of Service (REDoS) in cairosvg\n* Affected Product: CairoSVG v2.0.0+\n* Vendor: https:\/\/github.com\/Kozea\n* Severity: Medium\n* Vulnerability Class: Denial of Service\n* Author(s): Ben Caller ([Doyensec](https:\/\/doyensec.com))\n\n## Summary\n\nWhen processing SVG files, the python package CairoSVG uses two regular expressions which are vulnerable to Regular Expression Denial of Service (REDoS).\nIf an attacker provides a malicious SVG, it can make cairosvg get stuck processing the file for a very long time.\n\n## Technical description\n\nThe vulnerable regular expressions are\n\nhttps:\/\/github.com\/Kozea\/CairoSVG\/blob\/9c4a982b9a021280ad90e89707eacc1d114e4ac4\/cairosvg\/colors.py#L190-L191\n\nThe section between 'rgb(' and the final ')' contains multiple overlapping groups.\n\nSince all three infinitely repeating groups accept spaces, a long string of spaces causes catastrophic backtracking when it is not followed by a closing parenthesis.\n\nThe complexity is cubic, so doubling the length of the malicious string of spaces makes processing take 8 times as long.\n\n## Reproduction steps\n\nCreate a malicious SVG of the form:\n\n    <svg width=\"1\" height=\"1\"><rect fill=\"rgb(                     ;\"\/><\/svg>\n\nwith the following code:\n\n    '<svg width=\"1\" height=\"1\"><rect fill=\"rgb(' + (' ' * 3456) + ';\"\/><\/svg>'\n\nNote that there is no closing parenthesis before the semi-colon.\n\nRun cairosvg e.g.:\n\n    cairosvg cairo-redos.svg -o x.png\n\nand notice that it hangs at 100% CPU. Increasing the number of spaces increases the processing time with cubic complexity.\n\n## Remediation\n\nFix the regexes to avoid overlapping parts. Perhaps remove the [ \\n\\r\\t]* groups from the regex, and use .strip() on the returned capture group.\n\n## Disclosure timeline\n\n- 2020-12-30: Vulnerability disclosed via email to CourtBouillon",
            "published_date":"2021-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/Kozea\/CairoSVG",
            "commit_href":"https:\/\/github.com\/Kozea\/CairoSVG\/commit\/cfc9175e590531d90384aa88845052de53d94bf3",
            "commit_sha":"cfc9175e590531d90384aa88845052de53d94bf3",
            "patch":"SINGLE",
            "chain_ord":"['cfc9175e590531d90384aa88845052de53d94bf3']",
            "before_first_fix_commit":"{'9c4a982b9a021280ad90e89707eacc1d114e4ac4', '063185b60588a41d4df661ad70f9f7b699901abc'}",
            "last_fix_commit":"cfc9175e590531d90384aa88845052de53d94bf3",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/06\/2021, 14:43:14",
            "message":"Merge pull request from GHSA-hq37-853p-g5cf\n\nDon\u2019t use overlapping groups for regular expressions",
            "author":"Guillaume Ayoub",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'cairosvg\/colors.py': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Kozea\/CairoSVG\/raw\/cfc9175e590531d90384aa88845052de53d94bf3\/cairosvg%2Fcolors.py', 'patch': \"@@ -187,8 +187,8 @@\\n     'transparent': (0, 0, 0, 0),\\n }\\n \\n-RGBA = re.compile(r'rgba\\\\([ \\\\n\\\\r\\\\t]*(.+?)[ \\\\n\\\\r\\\\t]*\\\\)')\\n-RGB = re.compile(r'rgb\\\\([ \\\\n\\\\r\\\\t]*(.+?)[ \\\\n\\\\r\\\\t]*\\\\)')\\n+RGBA = re.compile(r'rgba\\\\((.+?)\\\\)')\\n+RGB = re.compile(r'rgb\\\\((.+?)\\\\)')\\n HEX_RRGGBB = re.compile('#[0-9a-f]{6}')\\n HEX_RGB = re.compile('#[0-9a-f]{3}')\\n \\n@@ -212,14 +212,14 @@ def color(string, opacity=1):\\n     if match:\\n         r, g, b, a = tuple(\\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\\n-            for i in match.group(1).split(','))\\n+            for i in match.group(1).strip().split(','))\\n         return (r, g, b, a * 255 * opacity)\\n \\n     match = RGB.search(string)\\n     if match:\\n         r, g, b = tuple(\\n             float(i.strip(' %')) \/ 100 if '%' in i else float(i) \/ 255\\n-            for i in match.group(1).split(','))\\n+            for i in match.group(1).strip().split(','))\\n         return (r, g, b, opacity)\\n \\n     match = HEX_RRGGBB.search(string)\"}}",
            "message_norm":"merge pull request from ghsa-hq37-853p-g5cf\n\ndon\u2019t use overlapping groups for regular expressions",
            "language":"en",
            "entities":"[('ghsa-hq37-853p-g5cf', 'VULNID', 'GHSA')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['cairosvg\/colors.py'])",
            "num_files":1.0
        },
        {
            "index":2725,
            "vuln_id":"GHSA-q97v-764g-r2rp",
            "cwe_id":"{'CWE-284'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/gollum\/grit_adapter\/commit\/4520d973c81fecfebbeacd2ef2f1849d763951c7'}",
            "dataset":"osv",
            "summary":"High severity vulnerability that affects gollum and gollum-lib The gollum-grit_adapter Ruby gem dependency in gollum before 3.1.1 and the gollum-lib gem dependency in gollum-lib before 4.0.1 when the string \"master\" is in any of the wiki documents, allows remote authenticated users to execute arbitrary code via the -O or --open-files-in-pager flags.",
            "published_date":"2017-11-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/gollum\/grit_adapter",
            "commit_href":"https:\/\/github.com\/gollum\/grit_adapter\/commit\/4520d973c81fecfebbeacd2ef2f1849d763951c7",
            "commit_sha":"4520d973c81fecfebbeacd2ef2f1849d763951c7",
            "patch":"SINGLE",
            "chain_ord":"['4520d973c81fecfebbeacd2ef2f1849d763951c7']",
            "before_first_fix_commit":"{'1b04ba5a1e822a990d6bde99b7332eef56a9998c'}",
            "last_fix_commit":"4520d973c81fecfebbeacd2ef2f1849d763951c7",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/04\/2014, 12:45:17",
            "message":"Fix security issue with git grep -O",
            "author":"Dawa Ometto",
            "comments":"{'com_1': {'author': 'dometto', 'datetime': '12\/04\/2014, 13:53:01', 'body': 'Escape the `ls_files` query for good measure.'}}",
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'lib\/grit_adapter\/git_layer_grit.rb': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gollum\/grit_adapter\/raw\/4520d973c81fecfebbeacd2ef2f1849d763951c7\/lib%2Fgrit_adapter%2Fgit_layer_grit.rb', 'patch': '@@ -136,6 +136,8 @@ def exist?\\n       \\n       def grep(query, options={})\\n         ref = options[:ref] ? options[:ref] : \"HEAD\"\\n+        query = Shellwords.split(query).select {|q| !(q =~ \/^(-O)|(--open-files-in-pager)\/) }\\n+        query = Shellwords.join(query)\\n         args = [{}, \\'-I\\', \\'-i\\', \\'-c\\', query, ref, \\'--\\']\\n         args << options[:path] if options[:path]\\n         result = @git.grep(*args).split(\"\\\\n\")\\n@@ -165,6 +167,7 @@ def rev_list(options, *refs)\\n       \\n       def ls_files(query, options = {})\\n         options[:ref] = options[:ref] ? options[:ref] : \"HEAD\"\\n+        query = Shellwords.shellescape(query)\\n         @git.ls_files({}, \"*#{query}*\").split(\"\\\\n\")\\n       end'}}",
            "message_norm":"fix security issue with git grep -o",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/grit_adapter\/git_layer_grit.rb'])",
            "num_files":1.0
        },
        {
            "index":2978,
            "vuln_id":"GHSA-rp7r-79rm-2758",
            "cwe_id":"{'CWE-200'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/apache\/derby\/commit\/fd24a7590ff5426bac68303fbeca07dbc5067412', 'https:\/\/github.com\/apache\/derby\/commit\/09a7325f75a4f96a7735e46c9723930f88ea2613', 'https:\/\/github.com\/apache\/derby\/commit\/82d721fd53e30dbb86d6d742c085030985091968'}",
            "dataset":"osv",
            "summary":"Apache Derby exposes user and password attributes Apache Derby before 10.1.2.1 exposes the (1) user and (2) password attributes in cleartext via (a) the RDBNAM parameter of the ACCSEC command and (b) the output of the DatabaseMetaData.getURL function, which allows context-dependent attackers to obtain sensitive information.",
            "published_date":"2022-05-01",
            "chain_len":3,
            "project":"https:\/\/github.com\/apache\/derby",
            "commit_href":"https:\/\/github.com\/apache\/derby\/commit\/09a7325f75a4f96a7735e46c9723930f88ea2613",
            "commit_sha":"09a7325f75a4f96a7735e46c9723930f88ea2613",
            "patch":"MULTI",
            "chain_ord":"['09a7325f75a4f96a7735e46c9723930f88ea2613', '82d721fd53e30dbb86d6d742c085030985091968', 'fd24a7590ff5426bac68303fbeca07dbc5067412']",
            "before_first_fix_commit":"{'90f16141b17352af5c934f3cf8bdbbb90c40624e'}",
            "last_fix_commit":"fd24a7590ff5426bac68303fbeca07dbc5067412",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/09\/2005, 19:50:58",
            "message":"DERBY-561 - Embedded driver jdbcCompliant() method should return true\nTest will be checked in as part of tess for DERBY-530\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860 13f79535-47bb-0310-9956-ffa450edef68",
            "author":"Katherine Marsden",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/derby\/raw\/09a7325f75a4f96a7735e46c9723930f88ea2613\/java%2Fengine%2Forg%2Fapache%2Fderby%2Fjdbc%2FInternalDriver.java', 'patch': '@@ -209,7 +209,7 @@ public int getMinorVersion() {\\n \\t}\\r\\n \\r\\n \\tpublic boolean jdbcCompliant() {\\r\\n-\\t\\treturn false;\\r\\n+\\t\\treturn true;\\r\\n \\t}\\r\\n \\r\\n \\t\/*'}}",
            "message_norm":"derby-561 - embedded driver jdbccompliant() method should return true\ntest will be checked in as part of tess for derby-530\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860 13f79535-47bb-0310-9956-ffa450edef68",
            "language":"en",
            "entities":"[('https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860', 'URL', ''), ('13f79535', 'SHA', 'generic_sha'), ('ffa450edef68', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java'])",
            "num_files":1.0
        },
        {
            "index":264,
            "vuln_id":"GHSA-3j78-7m59-r7gv",
            "cwe_id":"{'CWE-284'}",
            "score":8.0,
            "chain":"{'https:\/\/github.com\/buddypress\/BuddyPress\/commit\/39294680369a0c992290577a9d740f4a2f2c2ca3'}",
            "dataset":"osv",
            "summary":"Private data exposure via REST API in BuddyPress In BuddyPress before 5.1.2, requests to a certain REST API endpoint can result in private user data getting exposed. Authentication is not needed.\n\nThis has been patched in version 5.1.2.",
            "published_date":"2020-02-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/buddypress\/BuddyPress",
            "commit_href":"https:\/\/github.com\/buddypress\/BuddyPress\/commit\/39294680369a0c992290577a9d740f4a2f2c2ca3",
            "commit_sha":"39294680369a0c992290577a9d740f4a2f2c2ca3",
            "patch":"SINGLE",
            "chain_ord":"['39294680369a0c992290577a9d740f4a2f2c2ca3']",
            "before_first_fix_commit":"{'98da00c5892ccc7aca5702ffd43d651cb78c0c7c'}",
            "last_fix_commit":"39294680369a0c992290577a9d740f4a2f2c2ca3",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/31\/2020, 16:32:54",
            "message":"Admin: Sanitize external links to activated BP component pages.\n\nProps imath.\nSee #8235.\n\ngit-svn-id: https:\/\/buddypress.svn.wordpress.org\/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22",
            "author":"Mercime",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/bp-core\/admin\/bp-core-admin-slugs.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/buddypress\/buddypress\/raw\/39294680369a0c992290577a9d740f4a2f2c2ca3\/src%2Fbp-core%2Fadmin%2Fbp-core-admin-slugs.php', 'patch': '@@ -145,7 +145,7 @@ function bp_core_admin_slugs_options() {\\n \\n \\t\\t\\t\\t\\t\\t\\t<?php if ( !empty( $existing_pages[$name] ) ) : ?>\\n \\n-\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"<?php echo get_permalink( $existing_pages[$name] ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( \\'View\\', \\'buddypress\\' ); ?><\/a>\\n+\\t\\t\\t\\t\\t\\t\\t\\t<a href=\"<?php echo esc_url( get_permalink( $existing_pages[$name] ) ); ?>\" class=\"button-secondary\" target=\"_bp\"><?php _e( \\'View\\', \\'buddypress\\' ); ?><\/a>\\n \\n \\t\\t\\t\\t\\t\\t\\t<?php endif; ?>'}}",
            "message_norm":"admin: sanitize external links to activated bp component pages.\n\nprops imath.\nsee #8235.\n\ngit-svn-id: https:\/\/buddypress.svn.wordpress.org\/trunk@12549 cdf35c40-ae34-48e0-9cc9-0c9da1808c22",
            "language":"en",
            "entities":"[('admin', 'SECWORD', ''), ('sanitize', 'SECWORD', ''), ('#8235', 'ISSUE', ''), ('https:\/\/buddypress.svn.wordpress.org\/trunk@12549', 'URL', ''), ('cdf35c40', 'SHA', 'generic_sha'), ('0c9da1808c22', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/bp-core\/admin\/bp-core-admin-slugs.php'])",
            "num_files":1.0
        },
        {
            "index":1986,
            "vuln_id":"GHSA-h4mc-r4f4-hcf4",
            "cwe_id":"{'CWE-311'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/spunjs\/selenium-binaries\/commit\/be37e82a3c43a4f1679d66cf9467085ec9994c47'}",
            "dataset":"osv",
            "summary":"selenium-binaries downloads resources over HTTP Versions of `selenium-binaries` prior to 0.15.0 insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `selenium-binaries`.\n\n\n## Recommendation\n\nA fix for this vulnerability is available on the `master` branch of the repository as part of version 0.15.0.\n\nAnother mitigation currently available is to use an alternate package, such as [selenium-webdriver](https:\/\/www.npmjs.com\/package\/selenium-webdriver), the official selenium bindings for node.js.",
            "published_date":"2019-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/spunjs\/selenium-binaries",
            "commit_href":"https:\/\/github.com\/spunjs\/selenium-binaries\/commit\/be37e82a3c43a4f1679d66cf9467085ec9994c47",
            "commit_sha":"be37e82a3c43a4f1679d66cf9467085ec9994c47",
            "patch":"SINGLE",
            "chain_ord":"['be37e82a3c43a4f1679d66cf9467085ec9994c47']",
            "before_first_fix_commit":"{'75b0fd18ffd6373fd09d39c48b1df632f9649c08'}",
            "last_fix_commit":"be37e82a3c43a4f1679d66cf9467085ec9994c47",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/22\/2020, 17:20:26",
            "message":"Avoid MiTM by downloading through https (#33)\n\nCo-authored-by: Alejandro Romero Herrera <alromh87@gmail.com>\r\nCo-authored-by: Raj <70631238+418raj@users.noreply.github.com>",
            "author":"huntr-helper",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 3, 'total': 6}",
            "files":"{'lib\/config.js': {'additions': 3, 'deletions': 3, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/spunjs\/selenium-binaries\/raw\/be37e82a3c43a4f1679d66cf9467085ec9994c47\/lib%2Fconfig.js', 'patch': \"@@ -35,7 +35,7 @@ module.exports = {\\n     seleniumserver: {\\n       version: SELENIUM_BINARIES_SERVER_STANDALONE_VERSION,\\n       url: util.format(\\n-        'http:\/\/selenium-release.storage.googleapis.com\/%s\/',\\n+        'https:\/\/selenium-release.storage.googleapis.com\/%s\/',\\n         getMajorMinorVersion(SELENIUM_BINARIES_SERVER_STANDALONE_VERSION)\\n       ),\\n       path: path.resolve(\\n@@ -55,7 +55,7 @@ module.exports = {\\n     chromedriver: {\\n       version: SELENIUM_BINARIES_CHROMEDRIVER_VERSION,\\n       url: util.format(\\n-        'http:\/\/chromedriver.storage.googleapis.com\/%s\/',\\n+        'https:\/\/chromedriver.storage.googleapis.com\/%s\/',\\n         SELENIUM_BINARIES_CHROMEDRIVER_VERSION\\n       ),\\n       path: path.resolve(\\n@@ -89,7 +89,7 @@ module.exports = {\\n     iedriver: {\\n       version: SELENIUM_BINARIES_IEDRIVER_VERSION,\\n       url: util.format(\\n-        'http:\/\/selenium-release.storage.googleapis.com\/%s\/',\\n+        'https:\/\/selenium-release.storage.googleapis.com\/%s\/',\\n         getMajorMinorVersion(SELENIUM_BINARIES_IEDRIVER_VERSION)\\n       ),\\n       path: path.resolve(\"}}",
            "message_norm":"avoid mitm by downloading through https (#33)\n\nco-authored-by: alejandro romero herrera <alromh87@gmail.com>\r\nco-authored-by: raj <70631238+418raj@users.noreply.github.com>",
            "language":"en",
            "entities":"[('mitm', 'SECWORD', ''), ('#33', 'ISSUE', ''), ('alromh87@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/config.js'])",
            "num_files":1.0
        },
        {
            "index":1160,
            "vuln_id":"GHSA-874w-m2v2-mj64",
            "cwe_id":"{'CWE-415'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/adplug\/adplug\/commit\/1a282a486a8e33fef3e15998bf6408d3515dc07e', 'https:\/\/github.com\/miller-alex\/adplug\/commit\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633'}",
            "dataset":"osv",
            "summary":"Double Free in Adplug AdPlug 2.3.1 has a double free in the Cu6mPlayer class in u6m.h.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/miller-alex\/adplug",
            "commit_href":"https:\/\/github.com\/miller-alex\/adplug\/commit\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633",
            "commit_sha":"8abb9328bf27dcbdafc67ade3e75af0ffd8f7633",
            "patch":"MULTI",
            "chain_ord":"['8abb9328bf27dcbdafc67ade3e75af0ffd8f7633', '1a282a486a8e33fef3e15998bf6408d3515dc07e']",
            "before_first_fix_commit":"{'a8903d884e2c900e77af5c70ef440e72626646ad'}",
            "last_fix_commit":"1a282a486a8e33fef3e15998bf6408d3515dc07e",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/24\/2020, 14:43:22",
            "message":"Fix double free in Cu6mPlayer::~Cu6mPlayer() (issue #91)\n\nLeave deallocation of song_data to destructor when\ndecompression fails, just like on success.\n\nThis fixes CVE-2019-15151.\n\nEven though load() is apparently not supposed to be called\ntwice (and bad things happen in many players if you do),\nlet's also avoid leaking song_data's memory in that case.\n\nFixes: https:\/\/github.com\/adplug\/adplug\/issues\/91",
            "author":"Alexander Miller",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 2, 'total': 3}",
            "files":"{'src\/u6m.cpp': {'additions': 1, 'deletions': 2, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/miller-alex\/adplug\/raw\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633\/src%2Fu6m.cpp', 'patch': '@@ -66,6 +66,7 @@ bool Cu6mPlayer::load(const std::string &filename, const CFileProvider &fp)\\n     }\\n \\n   \/\/ load section\\n+  delete[] song_data;\\n   song_data = new unsigned char[decompressed_filesize];\\n   unsigned char* compressed_song_data = new unsigned char[filesize-3];\\n \\n@@ -74,7 +75,6 @@ bool Cu6mPlayer::load(const std::string &filename, const CFileProvider &fp)\\n   fp.close(f);\\n \\n   \/\/ attempt to decompress the song data\\n-  \/\/ if unsuccessful, deallocate song_data[] on the spot, and return(false)\\n   data_block source, destination;\\n   source.size = filesize-4;\\n   source.data = compressed_song_data;\\n@@ -84,7 +84,6 @@ bool Cu6mPlayer::load(const std::string &filename, const CFileProvider &fp)\\n   if (!lzw_decompress(source,destination))\\n     {\\n       delete[] compressed_song_data;\\n-      delete[] song_data;\\n       return(false);\\n     }'}}",
            "message_norm":"fix double free in cu6mplayer::~cu6mplayer() (issue #91)\n\nleave deallocation of song_data to destructor when\ndecompression fails, just like on success.\n\nthis fixes cve-2019-15151.\n\neven though load() is apparently not supposed to be called\ntwice (and bad things happen in many players if you do),\nlet's also avoid leaking song_data's memory in that case.\n\nfixes: https:\/\/github.com\/adplug\/adplug\/issues\/91",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('double free', 'SECWORD', ''), ('#91', 'ISSUE', ''), ('decompression', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('cve-2019-15151', 'VULNID', 'CVE'), ('fixes', 'ACTION', ''), ('https:\/\/github.com\/adplug\/adplug\/issues\/91', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/u6m.cpp'])",
            "num_files":1.0
        },
        {
            "index":1354,
            "vuln_id":"GHSA-9c78-vcq7-7vxq",
            "cwe_id":"{'CWE-787'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6'}",
            "dataset":"osv",
            "summary":"Out of bounds write in TFLite ### Impact \nAn attacker can craft a TFLite model that would cause a write outside of bounds of an array in TFLite. In fact, the attacker can override the linked list used by the memory allocator. This can be leveraged for an arbitrary write primitive under certain conditions.\n\n### Patches\nWe have patched the issue in GitHub commit [6c0b2b70eeee588591680f5b7d5d38175fd7cdf6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n    \n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n  \n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6",
            "commit_sha":"6c0b2b70eeee588591680f5b7d5d38175fd7cdf6",
            "patch":"SINGLE",
            "chain_ord":"['6c0b2b70eeee588591680f5b7d5d38175fd7cdf6']",
            "before_first_fix_commit":"{'1de49725a5fc4e48f1a3b902ec3599ee99283043'}",
            "last_fix_commit":"6c0b2b70eeee588591680f5b7d5d38175fd7cdf6",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/21\/2021, 16:50:37",
            "message":"[lite] add validation check for sparse fully connected\n\nPiperOrigin-RevId: 417629354\nChange-Id: If96171c4bd4f5fdb01d6368d6deab19d1c9beca7",
            "author":"Karim Nosir",
            "comments":null,
            "stats":"{'additions': 48, 'deletions': 10, 'total': 58}",
            "files":"{'tensorflow\/lite\/kernels\/fully_connected.cc': {'additions': 48, 'deletions': 10, 'changes': 58, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6c0b2b70eeee588591680f5b7d5d38175fd7cdf6\/tensorflow%2Flite%2Fkernels%2Ffully_connected.cc', 'patch': '@@ -928,6 +928,36 @@ TfLiteStatus EvalShuffledQuantized(TfLiteContext* context, TfLiteNode* node,\\n   return kTfLiteOk;\\n }\\n \\n+\/\/ Verifies that sparsity values are valid given input\/weight\/output.\\n+bool VerifySparsity(const RuntimeShape& weights_shape,\\n+                    const RuntimeShape& input_shape,\\n+                    const RuntimeShape& output_shape,\\n+                    const TfLiteSparsity* sparsity) {\\n+  const int weights_dims_count = weights_shape.DimensionsCount();\\n+  const int output_dims_count = output_shape.DimensionsCount();\\n+  const int w0_size = sparsity->dim_metadata[0].dense_size;\\n+  const int accum_depth = weights_shape.Dims(weights_dims_count - 1);\\n+  const int output_elements = output_shape.FlatSize();\\n+  const int input_elements = input_shape.FlatSize();\\n+  const int batches = FlatSizeSkipDim(output_shape, output_dims_count - 1);\\n+  const int output_depth = MatchingDim(weights_shape, weights_dims_count - 2,\\n+                                       output_shape, output_dims_count - 1);\\n+  const int max_batch_index = batches - 1;\\n+  const int max_output = max_batch_index * output_depth + w0_size;\\n+  const int max_batch_depth = accum_depth * max_batch_index;\\n+\\n+  \/\/ Verify output size is enough.\\n+  if (output_elements < max_output) return false;\\n+\\n+  \/\/ Verify index from sparse in input is valid.\\n+  for (int i = 0; i < sparsity->dim_metadata[1].array_indices->size; ++i) {\\n+    if (input_elements <=\\n+        max_batch_depth + sparsity->dim_metadata[1].array_indices->data[i])\\n+      return false;\\n+  }\\n+  return true;\\n+}\\n+\\n template <KernelType kernel_type>\\n TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,\\n                        TfLiteFullyConnectedParams* params, OpData* data,\\n@@ -968,24 +998,32 @@ TfLiteStatus EvalFloat(TfLiteContext* context, TfLiteNode* node,\\n                            \"Unsupported sparse fully-connected weight format.\");\\n         return kTfLiteError;\\n       }\\n+      const auto& input_shape = GetTensorShape(input);\\n+      const auto& filter_shape = GetTensorShape(filter);\\n+      const auto& output_shape = GetTensorShape(output);\\n+      const auto& bias_shape = GetTensorShape(bias);\\n+      if (!VerifySparsity(filter_shape, input_shape, output_shape, &sparsity)) {\\n+        TF_LITE_KERNEL_LOG(context, \"Invalid sparse fully-connected format.\");\\n+        return kTfLiteError;\\n+      }\\n \\n       if (sparsity.dim_metadata_size == kDimMetadataSizeRandomSparse) {\\n         \/\/ Random sparse.\\n         optimized_ops::FullyConnectedSparseWeight(\\n-            sparsity, op_params, GetTensorShape(input),\\n-            GetTensorData<float>(input), GetTensorShape(filter),\\n-            GetTensorData<float>(filter), GetTensorShape(bias),\\n-            GetTensorData<float>(bias), GetTensorShape(output),\\n-            GetTensorData<float>(output));\\n+            sparsity, op_params,                         \/\/ Disable formatting\\n+            input_shape, GetTensorData<float>(input),    \/\/ Disable formatting\\n+            filter_shape, GetTensorData<float>(filter),  \/\/ Disable formatting\\n+            bias_shape, GetTensorData<float>(bias),      \/\/ Disable formatting\\n+            output_shape, GetTensorData<float>(output));\\n       } else if (sparsity.dim_metadata_size == kDimMetadataSizeBlockSparse &&\\n                  sparsity.dim_metadata[2].dense_size == 4) {\\n         \/\/ Block sparse with block size of 1x4.\\n         optimized_ops::FullyConnectedSparseWeight1x4(\\n-            sparsity, op_params, GetTensorShape(input),\\n-            GetTensorData<float>(input), GetTensorShape(filter),\\n-            GetTensorData<float>(filter), GetTensorShape(bias),\\n-            GetTensorData<float>(bias), GetTensorShape(output),\\n-            GetTensorData<float>(output),\\n+            sparsity, op_params,                         \/\/ Disable formatting\\n+            input_shape, GetTensorData<float>(input),    \/\/ Disable formatting\\n+            filter_shape, GetTensorData<float>(filter),  \/\/ Disable formatting\\n+            bias_shape, GetTensorData<float>(bias),      \/\/ Disable formatting\\n+            output_shape, GetTensorData<float>(output),\\n             CpuBackendContext::GetFromContext(context));\\n       } else {\\n         TF_LITE_KERNEL_LOG(context,'}}",
            "message_norm":"[lite] add validation check for sparse fully connected\n\npiperorigin-revid: 417629354\nchange-id: if96171c4bd4f5fdb01d6368d6deab19d1c9beca7",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('417629354', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/fully_connected.cc'])",
            "num_files":1.0
        },
        {
            "index":1817,
            "vuln_id":"GHSA-g4w7-3qr8-5623",
            "cwe_id":"{'CWE-351'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/rusqlite\/rusqlite\/commit\/71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0'}",
            "dataset":"osv",
            "summary":"Improper type usage in rusqlite An issue was discovered in the rusqlite crate before 0.23.0 for Rust. Memory safety can be violated via the repr(Rust) type.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/rusqlite\/rusqlite",
            "commit_href":"https:\/\/github.com\/rusqlite\/rusqlite\/commit\/71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0",
            "commit_sha":"71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0",
            "patch":"SINGLE",
            "chain_ord":"['71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0']",
            "before_first_fix_commit":"{'38aea89809ea4154975d853bffe3cb7715fe84d6'}",
            "last_fix_commit":"71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/12\/2020, 18:17:56",
            "message":"Ensure type use for auxdata is repr(C)",
            "author":"Thom Chiovoloni",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 6, 'total': 22}",
            "files":"{'src\/functions.rs': {'additions': 16, 'deletions': 6, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rusqlite\/rusqlite\/raw\/71b2f5187b0cbace3f8b6ff53432ff2ca0defcf0\/src%2Ffunctions.rs', 'patch': '@@ -67,6 +67,7 @@\\n \/\/!     Ok(())\\n \/\/! }\\n \/\/! ```\\n+use std::any::TypeId;\\n use std::os::raw::{c_int, c_void};\\n use std::panic::{catch_unwind, RefUnwindSafe, UnwindSafe};\\n use std::ptr;\\n@@ -177,13 +178,16 @@ impl Context<\\'_> {\\n     \/\/\/ https:\/\/www.sqlite.org\/c3ref\/get_auxdata.html for a discussion of\\n     \/\/\/ this feature, or the unit tests of this module for an example.\\n     pub fn set_aux<T: \\'static>(&self, arg: c_int, value: T) {\\n-        let boxed = Box::into_raw(Box::new((std::any::TypeId::of::<T>(), value)));\\n+        let boxed = Box::into_raw(Box::new(AuxData {\\n+            id: TypeId::of::<T>(),\\n+            value,\\n+        }));\\n         unsafe {\\n             ffi::sqlite3_set_auxdata(\\n                 self.ctx,\\n                 arg,\\n                 boxed as *mut c_void,\\n-                Some(free_boxed_value::<(std::any::TypeId, T)>),\\n+                Some(free_boxed_value::<AuxData<T>>),\\n             )\\n         };\\n     }\\n@@ -192,20 +196,26 @@ impl Context<\\'_> {\\n     \/\/\/ via `set_aux`. Returns `Ok(None)` if no data has been associated,\\n     \/\/\/ and .\\n     pub fn get_aux<T: \\'static>(&self, arg: c_int) -> Result<Option<&T>> {\\n-        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *mut (std::any::TypeId, T) };\\n+        let p = unsafe { ffi::sqlite3_get_auxdata(self.ctx, arg) as *const AuxData<T> };\\n         if p.is_null() {\\n             Ok(None)\\n         } else {\\n-            let id_val = unsafe { &*p };\\n-            if std::any::TypeId::of::<T>() != id_val.0 {\\n+            let id = unsafe { (*p).id };\\n+            if TypeId::of::<T>() != id {\\n                 Err(Error::GetAuxWrongType)\\n             } else {\\n-                Ok(Some(&id_val.1))\\n+                Ok(Some(unsafe { &(*p).value }))\\n             }\\n         }\\n     }\\n }\\n \\n+#[repr(C)]\\n+struct AuxData<T: \\'static> {\\n+    id: TypeId,\\n+    value: T,\\n+}\\n+\\n \/\/\/ `feature = \"functions\"` Aggregate is the callback interface for user-defined\\n \/\/\/ aggregate function.\\n \/\/\/'}}",
            "message_norm":"ensure type use for auxdata is repr(c)",
            "language":"fr",
            "entities":"[('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/functions.rs'])",
            "num_files":1.0
        },
        {
            "index":3419,
            "vuln_id":"GHSA-xfhp-gmh8-r8v2",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/adaltas\/node-printf\/commit\/a8502e7c9b0b22555696a2d8ef67722086413a68'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDoS) The package printf before 0.6.1 are vulnerable to Regular Expression Denial of Service (ReDoS) via the regex string \/\\%(?:\\(([\\w_.]+)\\)|([1-9]\\d*)\\$)?([0 +\\-\\]*)(\\*|\\d+)?(\\.)?(\\*|\\d+)?[hlL]?([\\%bscdeEfFgGioOuxX])\/g in lib\/printf.js. The vulnerable regular expression has cubic worst-case time complexity.",
            "published_date":"2021-03-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/adaltas\/node-printf",
            "commit_href":"https:\/\/github.com\/adaltas\/node-printf\/commit\/a8502e7c9b0b22555696a2d8ef67722086413a68",
            "commit_sha":"a8502e7c9b0b22555696a2d8ef67722086413a68",
            "patch":"SINGLE",
            "chain_ord":"['a8502e7c9b0b22555696a2d8ef67722086413a68']",
            "before_first_fix_commit":"{'1456b115685791329c6fa6ca4237b7965f10cf82'}",
            "last_fix_commit":"a8502e7c9b0b22555696a2d8ef67722086413a68",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/10\/2021, 13:28:56",
            "message":"Fix ReDoS",
            "author":"Yeting Li",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/printf.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/adaltas\/node-printf\/raw\/a8502e7c9b0b22555696a2d8ef67722086413a68\/lib%2Fprintf.js', 'patch': '@@ -41,7 +41,7 @@ var Formatter = function(\/*String*\/ format){\\n   this._tokens = tokenize(format, this._re, this._parseDelim, this);\\n };\\n \\n-Formatter.prototype._re = \/\\\\%(?:\\\\(([\\\\w_.]+)\\\\)|([1-9]\\\\d*)\\\\$)?([0 +\\\\-\\\\#]*)([\\\\*1-9]0*)*(?:(\\\\.)(\\\\*|\\\\d+)?)?[hlL]?([\\\\%bscdeEfFgGioOuxX])\/g;\\n+Formatter.prototype._re = \/\\\\%(?:\\\\(([\\\\w_.]+)\\\\)|([1-9]\\\\d*)\\\\$)?([0 +\\\\-\\\\#]*)(\\\\*|\\\\d+)?(?:(\\\\.)(\\\\*|\\\\d+)?)?[hlL]?([\\\\%bscdeEfFgGioOuxX])\/g;\\n Formatter.prototype._parseDelim = function(mapping, intmapping, flags, minWidth, period, precision, specifier){\\n   if(mapping){\\n     this._mapped = true;'}}",
            "message_norm":"fix redos",
            "language":"pt",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/printf.js'])",
            "num_files":1.0
        },
        {
            "index":3387,
            "vuln_id":"GHSA-x752-qjv4-c4hc",
            "cwe_id":"{'CWE-74'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/dompdf\/dompdf\/commit\/4c70e1025bcd9b7694b95dd552499bd83cd6141d'}",
            "dataset":"osv",
            "summary":"Remote code injection in dompdf\/dompdf Dompdf is an HTML to PDF converter. Dompdf before 1.2.1 allows remote code execution via a .php file in the src:url field of an @font-face Cascading Style Sheets (CSS) statement (within an HTML input file).",
            "published_date":"2022-04-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/dompdf\/dompdf",
            "commit_href":"https:\/\/github.com\/dompdf\/dompdf\/commit\/4c70e1025bcd9b7694b95dd552499bd83cd6141d",
            "commit_sha":"4c70e1025bcd9b7694b95dd552499bd83cd6141d",
            "patch":"SINGLE",
            "chain_ord":"['4c70e1025bcd9b7694b95dd552499bd83cd6141d']",
            "before_first_fix_commit":"{'0347b9a73f8a03b1b7e659312416f6fd6c7a0cee'}",
            "last_fix_commit":"4c70e1025bcd9b7694b95dd552499bd83cd6141d",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/17\/2022, 00:09:04",
            "message":"Match installed font filename extension to type\n\nfixes #2598",
            "author":"Brian Sweeney",
            "comments":"{'com_1': {'author': 'Jakess39', 'datetime': '04\/16\/2022, 09:55:58', 'body': '> #2526'}, 'com_2': {'author': 'Jakess39', 'datetime': '04\/16\/2022, 09:56:11', 'body': '> > #2526'}}",
            "stats":"{'additions': 7, 'deletions': 1, 'total': 8}",
            "files":"{'src\/FontMetrics.php': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dompdf\/dompdf\/raw\/4c70e1025bcd9b7694b95dd552499bd83cd6141d\/src%2FFontMetrics.php', 'patch': '@@ -206,7 +206,6 @@ public function registerFont($style, $remoteFile, $context = null)\\n         }\\n \\n         $cacheEntry = $localFile;\\n-        $localFile .= \".\".strtolower(pathinfo(parse_url($remoteFile, PHP_URL_PATH), PATHINFO_EXTENSION));\\n \\n         $entry[$styleString] = $cacheEntry;\\n \\n@@ -258,6 +257,13 @@ public function registerFont($style, $remoteFile, $context = null)\\n             return false;\\n         }\\n \\n+        switch ($font->getFontType()) {\\n+            case \"TrueType\":\\n+            default:\\n+                $localFile .= \".ttf\";\\n+                break;\\n+        }\\n+\\n         $font->parse();\\n         $font->saveAdobeFontMetrics(\"$cacheEntry.ufm\");\\n         $font->close();'}}",
            "message_norm":"match installed font filename extension to type\n\nfixes #2598",
            "language":"en",
            "entities":"[('#2598', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/FontMetrics.php'])",
            "num_files":1.0
        },
        {
            "index":2796,
            "vuln_id":"GHSA-qpw2-xchm-655q",
            "cwe_id":"{'CWE-125'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/mhart\/StringStream\/commit\/2f4a9d496f94b0880e01a26857aa266a5a3ef274'}",
            "dataset":"osv",
            "summary":"Out-of-Bounds read in stringstream Versions less than 0.0.6 of the Node.js stringstream module are vulnerable to an out-of-bounds read because of allocation of uninitialized buffers when a number is passed in the input stream (when using Node.js 4.x).\n\n# WITHDRAWN\n\nThis is a duplicate of GHSA-mf6x-7mm4-x2g7",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/mhart\/StringStream",
            "commit_href":"https:\/\/github.com\/mhart\/StringStream\/commit\/2f4a9d496f94b0880e01a26857aa266a5a3ef274",
            "commit_sha":"2f4a9d496f94b0880e01a26857aa266a5a3ef274",
            "patch":"SINGLE",
            "chain_ord":"['2f4a9d496f94b0880e01a26857aa266a5a3ef274']",
            "before_first_fix_commit":"{'1efe3bf507bf3a1161f8473908b60e881d41422b', 'afbc7442220358419e330618e47f3a65fc265b1b'}",
            "last_fix_commit":"2f4a9d496f94b0880e01a26857aa266a5a3ef274",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/17\/2018, 10:22:09",
            "message":"Merge pull request #9 from mhart\/fix-buffer-constructor-vuln\n\nEnsure data is not a number in Buffer constructor",
            "author":"Michael Hart",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'stringstream.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mhart\/StringStream\/raw\/2f4a9d496f94b0880e01a26857aa266a5a3ef274\/stringstream.js', 'patch': \"@@ -28,7 +28,7 @@ StringStream.prototype.write = function(data) {\\n     return false\\n   }\\n   if (this.fromEncoding) {\\n-    if (Buffer.isBuffer(data)) data = data.toString()\\n+    if (Buffer.isBuffer(data) || typeof data === 'number') data = data.toString()\\n     data = new Buffer(data, this.fromEncoding)\\n   }\\n   var string = this.decoder.write(data)\"}}",
            "message_norm":"merge pull request #9 from mhart\/fix-buffer-constructor-vuln\n\nensure data is not a number in buffer constructor",
            "language":"en",
            "entities":"[('#9', 'ISSUE', ''), ('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['stringstream.js'])",
            "num_files":1.0
        },
        {
            "index":1485,
            "vuln_id":"GHSA-c558-5gfm-p2r8",
            "cwe_id":"{'CWE-79'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7', 'https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a'}",
            "dataset":"osv",
            "summary":"JSPUI spellcheck and autocomplete tools vulnerable to Cross Site Scripting ### Impact\nThe JSPUI spellcheck \"Did you mean\" HTML escapes the data-spell attribute in the link, but not the actual displayed text.  Similarly, the JSPUI autocomplete HTML does not properly escape text passed to it. Both are vulnerable to XSS.  This vulnerability only impacts the JSPUI.\n\n_This vulnerability does NOT impact the XMLUI or 7.x._\n\n### Patches\n_DSpace 6.x:_\n* Fixed in 6.4 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7\n* 6.x patch files available (may be applied manually if an immediate upgrade to 6.4 or above is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/35030a23e48b5946f5853332c797e1c4adea7bb7.patch\n\n_DSpace 5.x:_\n* Fixed in 5.11 via two commits: \n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5\n* 5.x patch files available (may be applied manually if an immediate upgrade to 5.11 or 6.4 is not possible)\n    * Fix for spellcheck: https:\/\/github.com\/DSpace\/DSpace\/commit\/c89e493e517b424dea6175caba54e91d3847fc3a.patch\n    * Fix for autocomplete: https:\/\/github.com\/DSpace\/DSpace\/commit\/6f75bb084ab1937d094208c55cd84340040bcbb5.patch\n\n#### Apply the patch to your DSpace\nIf at all possible, we recommend upgrading your DSpace site based on the upgrade instructions. However, if you are unable to do so, you can manually apply the above patches as follows:\n1. Download the appropriate patch file to the machine where DSpace is running\n2. From the `[dspace-src]` folder, apply the patch, e.g. `git apply [name-of-file].patch`\n3. Now, update your DSpace site (based loosely on the Upgrade instructions). This generally involves three steps:\n    1. Rebuild DSpace, e.g. `mvn -U clean package`  (This will recompile all DSpace code)\n    2. Redeploy DSpace, e.g. `ant update`  (This will copy all updated WARs \/ configs to your installation directory). Depending on your setup you also may need to copy the updated WARs over to your Tomcat webapps folder.\n    3. Restart Tomcat\n\n### References\nDiscovered & reported by Hassan Bhuiyan (Brunel University London)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at security@dspace.org",
            "published_date":"2022-08-06",
            "chain_len":4,
            "project":"https:\/\/github.com\/DSpace\/DSpace",
            "commit_href":"https:\/\/github.com\/DSpace\/DSpace\/commit\/ebb83a75234d3de9be129464013e998dc929b68d",
            "commit_sha":"ebb83a75234d3de9be129464013e998dc929b68d",
            "patch":"MULTI",
            "chain_ord":"['ebb83a75234d3de9be129464013e998dc929b68d', '35030a23e48b5946f5853332c797e1c4adea7bb7', 'c89e493e517b424dea6175caba54e91d3847fc3a', '6f75bb084ab1937d094208c55cd84340040bcbb5']",
            "before_first_fix_commit":"{'d1dd7d23329ef055069759df15cfa200c8e32e54'}",
            "last_fix_commit":"6f75bb084ab1937d094208c55cd84340040bcbb5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/08\/2020, 00:55:36",
            "message":"[DS-4453] Fix XSS handling in JSPUI discovery spellcheck",
            "author":"Kim Shepherd",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/DSpace\/DSpace\/raw\/ebb83a75234d3de9be129464013e998dc929b68d\/dspace-jspui%2Fsrc%2Fmain%2Fwebapp%2Fsearch%2Fdiscovery.jsp', 'patch': '@@ -209,7 +209,7 @@\\n         <input type=\"text\" size=\"50\" id=\"query\" name=\"query\" value=\"<%= (query==null ? \"\" : Utils.addEntities(query)) %>\"\/>\\n         <input type=\"submit\" id=\"main-query-submit\" class=\"btn btn-primary\" value=\"<fmt:message key=\"jsp.general.go\"\/>\" \/>\\n <% if (StringUtils.isNotBlank(spellCheckQuery)) {%>\\n-\\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%= spellCheckQuery %><\/a><\/fmt:param><\/fmt:message><\/p>\\n+\\t<p class=\"lead\"><fmt:message key=\"jsp.search.didyoumean\"><fmt:param><a id=\"spellCheckQuery\" data-spell=\"<%= Utils.addEntities(spellCheckQuery) %>\" href=\"#\"><%= Utils.addEntities(spellCheckQuery) %><\/a><\/fmt:param><\/fmt:message><\/p>\\n <% } %>                  \\n         <input type=\"hidden\" value=\"<%= rpp %>\" name=\"rpp\" \/>\\n         <input type=\"hidden\" value=\"<%= Utils.addEntities(sortedBy) %>\" name=\"sort_by\" \/>'}}",
            "message_norm":"[ds-4453] fix xss handling in jspui discovery spellcheck",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['dspace-jspui\/src\/main\/webapp\/search\/discovery.jsp'])",
            "num_files":1.0
        },
        {
            "index":411,
            "vuln_id":"GHSA-4f99-p9c2-3j8x",
            "cwe_id":"{'CWE-125', 'CWE-824'}",
            "score":7.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae'}",
            "dataset":"osv",
            "summary":"Undefined behavior via `nullptr` reference binding in sparse matrix multiplication ### Impact\nThe [code for sparse matrix multiplication](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/sparse_matmul_op.cc#L954-L1086) is vulnerable to undefined behavior via binding a reference to `nullptr`:\n\n```python\nimport tensorflow as tf\n  \ntf.raw_ops.SparseMatMul(\n  a=[[1.0,1.0,1.0]],\n  b=[[],[],[]],\n  transpose_a=False,\n  transpose_b=False,\n  a_is_sparse=False, \n  b_is_sparse=True)\n```\n\nThis occurs whenever the dimensions of `a` or `b` are 0 or less. In the case on one of these is 0, an empty output tensor should be allocated (to conserve the invariant that output tensors are always allocated when the operation is successful) but nothing should be written to it (that is, we should return early from the kernel implementation). Otherwise, attempts to write to this empty tensor would result in heap OOB access.\n\n### Patches\nWe have patched the issue in GitHub commit [e6cf28c72ba2eb949ca950d834dd6d66bb01cfae](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae).\n\nThe fix will be included in TensorFlow 2.7.0. We will also cherrypick this commit on TensorFlow 2.6.1, TensorFlow 2.5.2, and TensorFlow 2.4.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-11-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae",
            "commit_sha":"e6cf28c72ba2eb949ca950d834dd6d66bb01cfae",
            "patch":"SINGLE",
            "chain_ord":"['e6cf28c72ba2eb949ca950d834dd6d66bb01cfae']",
            "before_first_fix_commit":"{'d4fdd7830befb1f3aed8b4d1681471531856ae77'}",
            "last_fix_commit":"e6cf28c72ba2eb949ca950d834dd6d66bb01cfae",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/06\/2021, 04:54:15",
            "message":"Validate that matrix dimension sizes in SparseMatMul are positive.\n\nPiperOrigin-RevId: 401149683\nChange-Id: Ib33eafc561a39c8741ece80b2edce6d4aae9a57d",
            "author":"Penporn Koanantakool",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'tensorflow\/core\/kernels\/sparse_matmul_op.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e6cf28c72ba2eb949ca950d834dd6d66bb01cfae\/tensorflow%2Fcore%2Fkernels%2Fsparse_matmul_op.cc', 'patch': '@@ -32,6 +32,7 @@ limitations under the License.\\n #include \"tensorflow\/core\/kernels\/fill_functor.h\"\\n #include \"tensorflow\/core\/lib\/core\/blocking_counter.h\"\\n #include \"tensorflow\/core\/lib\/core\/threadpool.h\"\\n+#include \"tensorflow\/core\/platform\/errors.h\"\\n #include \"tensorflow\/core\/platform\/logging.h\"\\n #include \"tensorflow\/core\/platform\/macros.h\"\\n #include \"tensorflow\/core\/platform\/mutex.h\"\\n@@ -980,9 +981,18 @@ class SparseMatMulOp : public OpKernel {\\n                 errors::InvalidArgument(\\n                     \"Matrix size incompatible: a: \", a.shape().DebugString(),\\n                     \", b: \", b.shape().DebugString()));\\n+    OP_REQUIRES(ctx, m >= 0 && n >= 0 && k >= 0,\\n+                errors::InvalidArgument(\\n+                    \"Matrix dimensions cannot be negative: a: \",\\n+                    a.shape().DebugString(), \", b: \", b.shape().DebugString()));\\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(ctx, ctx->allocate_output(0, TensorShape({m, n}), &output));\\n \\n+    \/\/ Return early if at least one of the output dimension size is 0.\\n+    if (m == 0 || n == 0) {\\n+      return;\\n+    }\\n+\\n     if (k == 0) {\\n       \/\/ If the inner dimension k in the matrix multiplication is zero, we fill\\n       \/\/ the output with zeros.'}}",
            "message_norm":"validate that matrix dimension sizes in sparsematmul are positive.\n\npiperorigin-revid: 401149683\nchange-id: ib33eafc561a39c8741ece80b2edce6d4aae9a57d",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('401149683', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_matmul_op.cc'])",
            "num_files":1.0
        },
        {
            "index":320,
            "vuln_id":"GHSA-3wfj-vh84-732p",
            "cwe_id":"{'CWE-78'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/apache\/activemq\/commit\/00921f22ff9a8792d7663ef8fadd4823402a6324'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Special Elements used in an OS Command in Apache ActiveMQ The processControlCommand function in broker\/TransportConnection.java in Apache ActiveMQ before 5.11.0 allows remote attackers to cause a denial of service (shutdown) via a shutdown command.",
            "published_date":"2022-05-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/activemq",
            "commit_href":"https:\/\/github.com\/apache\/activemq\/commit\/00921f22ff9a8792d7663ef8fadd4823402a6324",
            "commit_sha":"00921f22ff9a8792d7663ef8fadd4823402a6324",
            "patch":"SINGLE",
            "chain_ord":"['00921f22ff9a8792d7663ef8fadd4823402a6324']",
            "before_first_fix_commit":"{'9a6d444e0a492231ad1f4833448b3bbacd839bce'}",
            "last_fix_commit":"00921f22ff9a8792d7663ef8fadd4823402a6324",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/13\/2014, 15:15:29",
            "message":"Remove unused ConnectionControl handling.",
            "author":"Timothy Bish",
            "comments":"{'com_1': {'author': 'tritschler', 'datetime': '11\/10\/2015, 09:33:23', 'body': 'No more shutdown ?'}, 'com_2': {'author': 'Hvnt3r', 'datetime': '07\/18\/2019, 08:46:59', 'body': '> No more shutdown ?\\r\\n\\r\\nyes'}}",
            "stats":"{'additions': 0, 'deletions': 4, 'total': 4}",
            "files":"{'activemq-broker\/src\/main\/java\/org\/apache\/activemq\/broker\/TransportConnection.java': {'additions': 0, 'deletions': 4, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/activemq\/raw\/00921f22ff9a8792d7663ef8fadd4823402a6324\/activemq-broker%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2Fbroker%2FTransportConnection.java', 'patch': '@@ -1534,10 +1534,6 @@ public int getProtocolVersion() {\\n \\n     @Override\\n     public Response processControlCommand(ControlCommand command) throws Exception {\\n-        String control = command.getCommand();\\n-        if (control != null && control.equals(\"shutdown\")) {\\n-            System.exit(0);\\n-        }\\n         return null;\\n     }'}}",
            "message_norm":"remove unused connectioncontrol handling.",
            "language":"en",
            "entities":"[('remove', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['activemq-broker\/src\/main\/java\/org\/apache\/activemq\/broker\/TransportConnection.java'])",
            "num_files":1.0
        }
    ]
}