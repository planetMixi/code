{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            },
            {
                "name":"patch_content",
                "type":"string"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":492,
            "vuln_id":"GHSA-qjj8-32p7-h289",
            "cwe_id":"{'CWE-369'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11'}",
            "dataset":"osv",
            "summary":"Division by 0 in `ResourceGather` ### Impact\nAn attacker can trigger a crash via a floating point exception in `tf.raw_ops.ResourceGather`:\n\n```python\nimport tensorflow as tf\n\ntensor = tf.constant(value=[[]],shape=(0,1),dtype=tf.uint32)\nv = tf.Variable(tensor)\ntf.raw_ops.ResourceGather(\n  resource=v.handle,\n  indices=[0],\n  dtype=tf.uint32,\n  batch_dims=1,\n  validate_indices=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/resource_variable_ops.cc#L725-L731) computes the value of a value, `batch_size`, and then divides by it without checking that this value is not 0. \n\n### Patches\nWe have patched the issue in GitHub commit  [ac117ee8a8ea57b73d34665cdf00ef3303bc0b11](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11",
            "commit_sha":"ac117ee8a8ea57b73d34665cdf00ef3303bc0b11",
            "patch":"SINGLE",
            "chain_ord":"['ac117ee8a8ea57b73d34665cdf00ef3303bc0b11']",
            "before_first_fix_commit":"{'3a7362750d5c372420aa8f0caf7bf5b5c3d0f52d'}",
            "last_fix_commit":"ac117ee8a8ea57b73d34665cdf00ef3303bc0b11",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/31\/2021, 05:23:28",
            "message":"Prevent division by 0 in `resource_variable_ops.cc`\n\nPiperOrigin-RevId: 387939939\nChange-Id: Ib04902d63756633999959a70613f2eaa30c2c151",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 2, 'total': 11}",
            "files":"{'tensorflow\/core\/kernels\/resource_variable_ops.cc': {'additions': 9, 'deletions': 2, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ac117ee8a8ea57b73d34665cdf00ef3303bc0b11\/tensorflow%2Fcore%2Fkernels%2Fresource_variable_ops.cc', 'patch': '@@ -710,7 +710,8 @@ class ResourceGatherOp : public OpKernel {\\n         copy_functor(c->eigen_device<Device>(), tmp_indices.flat<Index>(),\\n                      indices.flat<Index>());\\n \\n-        AddBatchOffsets(&tmp_indices, params);\\n+        AddBatchOffsets(c, &tmp_indices, params);\\n+        if (!c->status().ok()) return;\\n         op_indices = &tmp_indices;\\n       }\\n \\n@@ -742,11 +743,17 @@ class ResourceGatherOp : public OpKernel {\\n   \/\/ Example: batch_dims = 1, indices = [[0, 1, 2], [0, 1, 2]]\\n   \/\/ If indexing into a params dimension of size 4, then the indices will become\\n   \/\/ [0, 1, 2, 4, 5, 6]\\n-  void AddBatchOffsets(Tensor* indices, const Tensor& params) {\\n+  void AddBatchOffsets(OpKernelContext* ctx, Tensor* indices,\\n+                       const Tensor& params) {\\n     int64_t batch_size = 1;  \/\/ The size of all batch dimensions.\\n     for (int idx = 0; idx < batch_dims_; ++idx) {\\n       batch_size *= params.dim_size(idx);\\n     }\\n+    OP_REQUIRES(\\n+        ctx, batch_size != 0,\\n+        errors::InvalidArgument(\\n+            \"Inner size of indices would result in batch_size of 0 and a \",\\n+            \"division by 0 in the implementation. This is illegal\"));\\n \\n     auto indices_flat = indices->flat<Index>();\\n     int64_t const index_inner_size = indices->NumElements() \/ batch_size;'}}",
            "message_norm":"prevent division by 0 in `resource_variable_ops.cc`\n\npiperorigin-revid: 387939939\nchange-id: ib04902d63756633999959a70613f2eaa30c2c151",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('387939939', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/resource_variable_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From ac117ee8a8ea57b73d34665cdf00ef3303bc0b11 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 30 Jul 2021 22:23:28 -0700\nSubject: [PATCH] Prevent division by 0 in `resource_variable_ops.cc`\n\nPiperOrigin-RevId: 387939939\nChange-Id: Ib04902d63756633999959a70613f2eaa30c2c151\n---\n tensorflow\/core\/kernels\/resource_variable_ops.cc | 11 +++++++++--\n 1 file changed, 9 insertions(+), 2 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/resource_variable_ops.cc b\/tensorflow\/core\/kernels\/resource_variable_ops.cc\nindex 32a0a43364deae..8b9610724e5826 100644\n--- a\/tensorflow\/core\/kernels\/resource_variable_ops.cc\n+++ b\/tensorflow\/core\/kernels\/resource_variable_ops.cc\n@@ -710,7 +710,8 @@ class ResourceGatherOp : public OpKernel {\n         copy_functor(c->eigen_device<Device>(), tmp_indices.flat<Index>(),\n                      indices.flat<Index>());\n \n-        AddBatchOffsets(&tmp_indices, params);\n+        AddBatchOffsets(c, &tmp_indices, params);\n+        if (!c->status().ok()) return;\n         op_indices = &tmp_indices;\n       }\n \n@@ -742,11 +743,17 @@ class ResourceGatherOp : public OpKernel {\n   \/\/ Example: batch_dims = 1, indices = [[0, 1, 2], [0, 1, 2]]\n   \/\/ If indexing into a params dimension of size 4, then the indices will become\n   \/\/ [0, 1, 2, 4, 5, 6]\n-  void AddBatchOffsets(Tensor* indices, const Tensor& params) {\n+  void AddBatchOffsets(OpKernelContext* ctx, Tensor* indices,\n+                       const Tensor& params) {\n     int64_t batch_size = 1;  \/\/ The size of all batch dimensions.\n     for (int idx = 0; idx < batch_dims_; ++idx) {\n       batch_size *= params.dim_size(idx);\n     }\n+    OP_REQUIRES(\n+        ctx, batch_size != 0,\n+        errors::InvalidArgument(\n+            \"Inner size of indices would result in batch_size of 0 and a \",\n+            \"division by 0 in the implementation. This is illegal\"));\n \n     auto indices_flat = indices->flat<Index>();\n     int64_t const index_inner_size = indices->NumElements() \/ batch_size;"
        },
        {
            "index":595,
            "vuln_id":"GHSA-x55w-vjjp-222r",
            "cwe_id":"{'CWE-1333'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/pksunkara\/inflect\/commit\/a9a0a8e9561c3487854c7cae42565d9652ec858b'}",
            "dataset":"osv",
            "summary":"inflect vulnerable to Inefficient Regular Expression Complexity inflect is customizable inflections for nodejs. inflect is vulnerable to Inefficient Regular Expression Complexity",
            "published_date":"2021-09-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/pksunkara\/inflect",
            "commit_href":"https:\/\/github.com\/pksunkara\/inflect\/commit\/a9a0a8e9561c3487854c7cae42565d9652ec858b",
            "commit_sha":"a9a0a8e9561c3487854c7cae42565d9652ec858b",
            "patch":"SINGLE",
            "chain_ord":"['a9a0a8e9561c3487854c7cae42565d9652ec858b']",
            "before_first_fix_commit":"{'c025e153df847bbb2873ae75b1a7bd77b0526745'}",
            "last_fix_commit":"a9a0a8e9561c3487854c7cae42565d9652ec858b",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/21\/2021, 10:49:42",
            "message":"Fix CVE-2021-3820",
            "author":"Pavan Kumar Sunkara",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'lib\/methods.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pksunkara\/inflect\/raw\/a9a0a8e9561c3487854c7cae42565d9652ec858b\/lib%2Fmethods.js', 'patch': '@@ -61,7 +61,7 @@ inflect.camelize = function (lower_case_and_underscored_word, first_letter_in_up\\n inflect.underscore = function (camel_cased_word) {\\n   var self;\\n   self = util.string.gsub(camel_cased_word, \/\\\\.\/, \\'\/\\');\\n-  self = util.string.gsub(self, \/([A-Z]+)([A-Z][a-z])\/, \\'$1_$2\\');\\n+  self = util.string.gsub(self, \/([A-Z])([A-Z][a-z])\/, \\'$1_$2\\');\\n   self = util.string.gsub(self, \/([a-z\\\\d])([A-Z])\/, \\'$1_$2\\');\\n   self = util.string.gsub(self, \/-\/, \\'_\\');\\n   return self.toLowerCase();\\n@@ -230,5 +230,5 @@ inflect.tableize = function (class_name) {\\n \/\/\\n \/\/     \"business\".classify()       \/\/ => \"Busines\"\\n inflect.classify = function (table_name) {\\n-  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, \/.*\\\\.\/, \\'\\')));\\n+  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, \/^.*\\\\.\/, \\'\\')));\\n };'}}",
            "message_norm":"fix cve-2021-3820",
            "language":"fr",
            "entities":"[('fix', 'ACTION', ''), ('cve-2021-3820', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/methods.js'])",
            "num_files":1.0,
            "patch_content":"From a9a0a8e9561c3487854c7cae42565d9652ec858b Mon Sep 17 00:00:00 2001\nFrom: Pavan Kumar Sunkara <pavan.sss1991@gmail.com>\nDate: Tue, 21 Sep 2021 16:19:42 +0530\nSubject: [PATCH] Fix CVE-2021-3820\n\n---\n lib\/methods.js | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/lib\/methods.js b\/lib\/methods.js\nindex 00f83ce..450e63f 100644\n--- a\/lib\/methods.js\n+++ b\/lib\/methods.js\n@@ -61,7 +61,7 @@ inflect.camelize = function (lower_case_and_underscored_word, first_letter_in_up\n inflect.underscore = function (camel_cased_word) {\n   var self;\n   self = util.string.gsub(camel_cased_word, \/\\.\/, '\/');\n-  self = util.string.gsub(self, \/([A-Z]+)([A-Z][a-z])\/, '$1_$2');\n+  self = util.string.gsub(self, \/([A-Z])([A-Z][a-z])\/, '$1_$2');\n   self = util.string.gsub(self, \/([a-z\\d])([A-Z])\/, '$1_$2');\n   self = util.string.gsub(self, \/-\/, '_');\n   return self.toLowerCase();\n@@ -230,5 +230,5 @@ inflect.tableize = function (class_name) {\n \/\/\n \/\/     \"business\".classify()       \/\/ => \"Busines\"\n inflect.classify = function (table_name) {\n-  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, \/.*\\.\/, '')));\n+  return inflect.camelize(inflect.singularize(util.string.gsub(table_name, \/^.*\\.\/, '')));\n };"
        },
        {
            "index":238,
            "vuln_id":"GHSA-686f-ch3r-xwmh",
            "cwe_id":"{'CWE-362', 'CWE-119'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/udoprog\/unicycle\/commit\/6a6c367a0c25f86f998fa315ea90c328f685b194', 'https:\/\/github.com\/udoprog\/unicycle\/commit\/92f40b4a2c671553dfa96feacff0265206c44ce5'}",
            "dataset":"osv",
            "summary":"Data races in unicycle Affected versions of this crate unconditionally implemented `Send` & `Sync` for types `PinSlab<T>` & `Unordered<T, S>`. This allows sending non-Send types to other threads and concurrently accessing non-Sync types from multiple threads.\n\nThis can result in a data race & memory corruption when types that provide internal mutability without synchronization are contained within `PinSlab<T>` or `Unordered<T, S>` and accessed concurrently from multiple threads.\n\nThe flaw was corrected in commits 92f40b4 & 6a6c367 by adding trait bound `T: Send` to `Send` impls for `PinSlab<T>` & `Unordered<T, S>` and adding `T: Sync` to `Sync` impls for `PinSlab<T>` & `Unordered<T, S>`.",
            "published_date":"2021-08-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/udoprog\/unicycle",
            "commit_href":"https:\/\/github.com\/udoprog\/unicycle\/commit\/6a6c367a0c25f86f998fa315ea90c328f685b194",
            "commit_sha":"6a6c367a0c25f86f998fa315ea90c328f685b194",
            "patch":"MULTI",
            "chain_ord":"['92f40b4a2c671553dfa96feacff0265206c44ce5', '6a6c367a0c25f86f998fa315ea90c328f685b194']",
            "before_first_fix_commit":"{'c6a1e1601e8ddfb33d2846abca3c3ddc50e0493c'}",
            "last_fix_commit":"6a6c367a0c25f86f998fa315ea90c328f685b194",
            "chain_ord_pos":2.0,
            "commit_datetime":"01\/24\/2021, 03:29:54",
            "message":"Fix trait bounds in Send\/Sync impl: Unordered<T,S>\nThis commit is a follow-up fix for the issue raised in\nhttps:\/\/github.com\/udoprog\/unicycle\/issues\/8#issuecomment-763780334 .",
            "author":"JOE1994",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/lib.rs': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/udoprog\/unicycle\/raw\/6a6c367a0c25f86f998fa315ea90c328f685b194\/src%2Flib.rs', 'patch': '@@ -377,8 +377,8 @@ where\\n     _marker: marker::PhantomData<S>,\\n }\\n \\n-unsafe impl<T, S> Send for Unordered<T, S> where S: Send + Sentinel {}\\n-unsafe impl<T, S> Sync for Unordered<T, S> where S: Sync + Sentinel {}\\n+unsafe impl<T: Send, S> Send for Unordered<T, S> where S: Sentinel {}\\n+unsafe impl<T: Sync, S> Sync for Unordered<T, S> where S: Sentinel {}\\n \\n impl<T, S> Unpin for Unordered<T, S> where S: Sentinel {}'}}",
            "message_norm":"fix trait bounds in send\/sync impl: unordered<t,s>\nthis commit is a follow-up fix for the issue raised in\nhttps:\/\/github.com\/udoprog\/unicycle\/issues\/8#issuecomment-763780334 .",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('issue', 'FLAW', ''), ('https:\/\/github.com\/udoprog\/unicycle\/issues\/8#issuecomment-763780334', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib.rs'])",
            "num_files":1.0,
            "patch_content":"From 6a6c367a0c25f86f998fa315ea90c328f685b194 Mon Sep 17 00:00:00 2001\nFrom: JOE1994 <joseph942010@gmail.com>\nDate: Sat, 23 Jan 2021 22:29:54 -0500\nSubject: [PATCH] Fix trait bounds in Send\/Sync impl: Unordered<T,S> This\n commit is a follow-up fix for the issue raised in\n https:\/\/github.com\/udoprog\/unicycle\/issues\/8#issuecomment-763780334 .\n\n---\n src\/lib.rs | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/lib.rs b\/src\/lib.rs\nindex 0037eaa..6a12303 100644\n--- a\/src\/lib.rs\n+++ b\/src\/lib.rs\n@@ -377,8 +377,8 @@ where\n     _marker: marker::PhantomData<S>,\n }\n \n-unsafe impl<T, S> Send for Unordered<T, S> where S: Send + Sentinel {}\n-unsafe impl<T, S> Sync for Unordered<T, S> where S: Sync + Sentinel {}\n+unsafe impl<T: Send, S> Send for Unordered<T, S> where S: Sentinel {}\n+unsafe impl<T: Sync, S> Sync for Unordered<T, S> where S: Sentinel {}\n \n impl<T, S> Unpin for Unordered<T, S> where S: Sentinel {}"
        },
        {
            "index":198,
            "vuln_id":"GHSA-x44x-r84w-8v67",
            "cwe_id":"{'CWE-287'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/commit\/136aa83ed431462fa42ce17b7f9b24e056de06be'}",
            "dataset":"osv",
            "summary":"Lack of URL normalization may lead to authorization bypass when URL access rules are used ### Impact\nWhen access rules are used inside a protected host, some URL encodings may bypass filtering system.\n\n### Patches\nVersion 0.5.2 includes a patch that fixes the vulnerability\n\n### Workarounds\nNo way for users to fix or remediate the vulnerability without upgrading\n\n### References\nhttps:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repository](https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/issues) or [LemonLDAP::NG GitLab](https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues)\n* Email us at [lemonldap-ng-users@ow2.org](mailto:lemonldap-ng-users@ow2.org)",
            "published_date":"2020-09-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler",
            "commit_href":"https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/commit\/136aa83ed431462fa42ce17b7f9b24e056de06be",
            "commit_sha":"136aa83ed431462fa42ce17b7f9b24e056de06be",
            "patch":"SINGLE",
            "chain_ord":"['136aa83ed431462fa42ce17b7f9b24e056de06be']",
            "before_first_fix_commit":"{'d6fac9350024d9eef1c180f4e3a6a0ce65f199a8'}",
            "last_fix_commit":"136aa83ed431462fa42ce17b7f9b24e056de06be",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/09\/2020, 08:04:46",
            "message":"Normalize URL (related to https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and CVE-2020-24660)",
            "author":"Xavier Guimard",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 3, 'total': 7}",
            "files":"{'src\/lib\/index.coffee': {'additions': 4, 'deletions': 3, 'changes': 7, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LemonLDAPNG\/node-lemonldap-ng-handler\/raw\/136aa83ed431462fa42ce17b7f9b24e056de06be\/src%2Flib%2Findex.coffee', 'patch': '@@ -4,6 +4,7 @@\\n # See README.md for license and copyright\\n ###\\n conf = null\\n+normalizeUrl = require \\'normalize-url\\'\\n \\n class Handler\\n \\tconstructor: (args) ->\\n@@ -15,7 +16,7 @@ class Handler\\n \\trun: (req, res, next) ->\\n \\t\\tself = @\\n \\t\\tvhost = req.headers.host\\n-\\t\\turi = decodeURI req.url\\n+\\t\\turi = normalizeUrl req.url\\n \\t\\tif @conf.tsv.maintenance[vhost]\\n \\t\\t\\tself.logger.info \"Go to portal with maintenance error code #{vhost}\"\\n \\t\\t\\treturn @setError res, \\'\/\\', 503, \\'Service Temporarily Unavailable\\'\\n@@ -184,7 +185,7 @@ class Handler\\n \\t\\t\\treturn res\\n \\t\\turlc = @conf.tsv.portal()\\n \\t\\tif uri\\n-\\t\\t\\turlc += \\'?url=\\' + new Buffer(encodeURI(uri)).toString(\\'base64\\')\\n+\\t\\t\\turlc += \\'?url=\\' + new Buffer.from(encodeURI(uri)).toString(\\'base64\\')\\n \\t\\tif args\\n \\t\\t\\turlc += if uri then \\'&\\' else \\'?\\'\\n \\t\\t\\turlc += args\\n@@ -203,7 +204,7 @@ class Handler\\n \\n \\tsetError: (res, uri, code, txt) ->\\n \\t\\tif @conf.tsv.useRedirectOnError\\n-\\t\\t\\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer(encodeURI(uri)).toString(\\'base64\\')\\n+\\t\\t\\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer.from(encodeURI(uri)).toString(\\'base64\\')\\n \\t\\t\\t@logger.debug \"Redirecting to #{u}\"\\n \\t\\t\\tif res.redirect?\\n \\t\\t\\t\\tres.redirect u'}}",
            "message_norm":"normalize url (related to https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and cve-2020-24660)",
            "language":"en",
            "entities":"[('https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290', 'URL', ''), ('cve-2020-24660', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/lib\/index.coffee'])",
            "num_files":1.0,
            "patch_content":"From 136aa83ed431462fa42ce17b7f9b24e056de06be Mon Sep 17 00:00:00 2001\nFrom: Xavier Guimard <yadd@debian.org>\nDate: Wed, 9 Sep 2020 10:04:46 +0200\nSubject: [PATCH] Normalize URL (related to\n https:\/\/gitlab.ow2.org\/lemonldap-ng\/lemonldap-ng\/-\/issues\/2290 and\n CVE-2020-24660)\n\n---\n src\/lib\/index.coffee | 7 ++++---\n 1 file changed, 4 insertions(+), 3 deletions(-)\n\ndiff --git a\/src\/lib\/index.coffee b\/src\/lib\/index.coffee\nindex f8b724e..fd64ce3 100644\n--- a\/src\/lib\/index.coffee\n+++ b\/src\/lib\/index.coffee\n@@ -4,6 +4,7 @@\n # See README.md for license and copyright\n ###\n conf = null\n+normalizeUrl = require 'normalize-url'\n \n class Handler\n \tconstructor: (args) ->\n@@ -15,7 +16,7 @@ class Handler\n \trun: (req, res, next) ->\n \t\tself = @\n \t\tvhost = req.headers.host\n-\t\turi = decodeURI req.url\n+\t\turi = normalizeUrl req.url\n \t\tif @conf.tsv.maintenance[vhost]\n \t\t\tself.logger.info \"Go to portal with maintenance error code #{vhost}\"\n \t\t\treturn @setError res, '\/', 503, 'Service Temporarily Unavailable'\n@@ -184,7 +185,7 @@ class Handler\n \t\t\treturn res\n \t\turlc = @conf.tsv.portal()\n \t\tif uri\n-\t\t\turlc += '?url=' + new Buffer(encodeURI(uri)).toString('base64')\n+\t\t\turlc += '?url=' + new Buffer.from(encodeURI(uri)).toString('base64')\n \t\tif args\n \t\t\turlc += if uri then '&' else '?'\n \t\t\turlc += args\n@@ -203,7 +204,7 @@ class Handler\n \n \tsetError: (res, uri, code, txt) ->\n \t\tif @conf.tsv.useRedirectOnError\n-\t\t\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer(encodeURI(uri)).toString('base64')\n+\t\t\tu = @conf.tsv.portal() + \"?lmError=#{code}&url=\" + new Buffer.from(encodeURI(uri)).toString('base64')\n \t\t\t@logger.debug \"Redirecting to #{u}\"\n \t\t\tif res.redirect?\n \t\t\t\tres.redirect u"
        },
        {
            "index":948,
            "vuln_id":"GHSA-9c84-4hx6-xmm4",
            "cwe_id":"{'CWE-190'}",
            "score":6.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4253f96a58486ffe84b61c0415bb234a4632ee73'}",
            "dataset":"osv",
            "summary":"Integer overflow in TFLite concatentation ### Impact\nThe TFLite implementation of concatenation is [vulnerable to an integer overflow issue](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/7b7352a724b690b11bfaae2cd54bc3907daf6285\/tensorflow\/lite\/kernels\/concatenation.cc#L70-L76):\n\n```cc\nfor (int d = 0; d < t0->dims->size; ++d) {\n  if (d == axis) { \n    sum_axis += t->dims->data[axis]; \n  } else {\n    TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);\n  }\n}\n```\n\nAn attacker can craft a model such that the dimensions of one of the concatenation input overflow the values of `int`. TFLite uses `int` to represent tensor dimensions, whereas TF uses `int64`. Hence, valid TF models can trigger an integer overflow when converted to TFLite format.\n\n### Patches\nWe have patched the issue in GitHub commit [4253f96a58486ffe84b61c0415bb234a4632ee73](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4253f96a58486ffe84b61c0415bb234a4632ee73).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4253f96a58486ffe84b61c0415bb234a4632ee73",
            "commit_sha":"4253f96a58486ffe84b61c0415bb234a4632ee73",
            "patch":"SINGLE",
            "chain_ord":"['4253f96a58486ffe84b61c0415bb234a4632ee73']",
            "before_first_fix_commit":"{'7b7352a724b690b11bfaae2cd54bc3907daf6285'}",
            "last_fix_commit":"4253f96a58486ffe84b61c0415bb234a4632ee73",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 23:50:55",
            "message":"Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/lite\/kernels\/concatenation.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4253f96a58486ffe84b61c0415bb234a4632ee73\/tensorflow%2Flite%2Fkernels%2Fconcatenation.cc', 'patch': '@@ -16,6 +16,8 @@ limitations under the License.\\n \\n #include <stdint.h>\\n \\n+#include <limits>\\n+\\n #include \"tensorflow\/lite\/c\/builtin_op_data.h\"\\n #include \"tensorflow\/lite\/c\/common.h\"\\n #include \"tensorflow\/lite\/kernels\/internal\/compatibility.h\"\\n@@ -69,6 +71,10 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n     TF_LITE_ENSURE_EQ(context, t->type, input_type);\\n     for (int d = 0; d < t0->dims->size; ++d) {\\n       if (d == axis) {\\n+        \/\/ Avoid integer overflow in sum_axis below\\n+        TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);\\n+        TF_LITE_ENSURE(context, t->dims->data[axis] <=\\n+                                    std::numeric_limits<int>::max() - sum_axis);\\n         sum_axis += t->dims->data[axis];\\n       } else {\\n         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);'}}",
            "message_norm":"fix integer overflow in tflite concat\n\npiperorigin-revid: 371013841\nchange-id: i6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('integer overflow', 'SECWORD', ''), ('371013841', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/concatenation.cc'])",
            "num_files":1.0,
            "patch_content":"From 4253f96a58486ffe84b61c0415bb234a4632ee73 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 28 Apr 2021 16:50:55 -0700\nSubject: [PATCH] Fix integer overflow in TFLite concat\n\nPiperOrigin-RevId: 371013841\nChange-Id: I6a4782ce7ca753e23ff31e7fb6aeb7f9d412cd29\n---\n tensorflow\/lite\/kernels\/concatenation.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/concatenation.cc b\/tensorflow\/lite\/kernels\/concatenation.cc\nindex 61596a4ff06615..75bcd9403c0ae8 100644\n--- a\/tensorflow\/lite\/kernels\/concatenation.cc\n+++ b\/tensorflow\/lite\/kernels\/concatenation.cc\n@@ -16,6 +16,8 @@ limitations under the License.\n \n #include <stdint.h>\n \n+#include <limits>\n+\n #include \"tensorflow\/lite\/c\/builtin_op_data.h\"\n #include \"tensorflow\/lite\/c\/common.h\"\n #include \"tensorflow\/lite\/kernels\/internal\/compatibility.h\"\n@@ -69,6 +71,10 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\n     TF_LITE_ENSURE_EQ(context, t->type, input_type);\n     for (int d = 0; d < t0->dims->size; ++d) {\n       if (d == axis) {\n+        \/\/ Avoid integer overflow in sum_axis below\n+        TF_LITE_ENSURE(context, t->dims->data[axis] >= 0);\n+        TF_LITE_ENSURE(context, t->dims->data[axis] <=\n+                                    std::numeric_limits<int>::max() - sum_axis);\n         sum_axis += t->dims->data[axis];\n       } else {\n         TF_LITE_ENSURE_EQ(context, t->dims->data[d], t0->dims->data[d]);"
        },
        {
            "index":837,
            "vuln_id":"GHSA-8c89-2vwr-chcq",
            "cwe_id":"{'CWE-787', 'CWE-131'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `QuantizedResizeBilinear` ### Impact\nAn attacker can cause a heap buffer overflow in `QuantizedResizeBilinear` by passing in invalid thresholds for the quantization:\n\n```python\nimport tensorflow as tf\n\nimages = tf.constant([], shape=[0], dtype=tf.qint32)\nsize = tf.constant([], shape=[0], dtype=tf.int32) \nmin = tf.constant([], dtype=tf.float32)\nmax = tf.constant([], dtype=tf.float32)\n\ntf.raw_ops.QuantizedResizeBilinear(images=images, size=size, min=min, max=max, align_corners=False, half_pixel_centers=False)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/50711818d2e61ccce012591eeb4fdf93a8496726\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc#L705-L706) assumes that the 2 arguments are always valid scalars and tries to access the numeric value directly:\n\n```cc\nconst float in_min = context->input(2).flat<float>()(0);\nconst float in_max = context->input(3).flat<float>()(0);\n```\n\nHowever, if any of these tensors is empty, then `.flat<T>()` is an empty buffer and accessing the element at position 0 results in overflow.\n\n### Patches \nWe have patched the issue in GitHub commit [f6c40f0c6cbf00d46c7717a26419f2062f2f8694](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694",
            "commit_sha":"f6c40f0c6cbf00d46c7717a26419f2062f2f8694",
            "patch":"SINGLE",
            "chain_ord":"['f6c40f0c6cbf00d46c7717a26419f2062f2f8694']",
            "before_first_fix_commit":"{'50711818d2e61ccce012591eeb4fdf93a8496726'}",
            "last_fix_commit":"f6c40f0c6cbf00d46c7717a26419f2062f2f8694",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/22\/2021, 00:00:39",
            "message":"Validate min and max arguments to `QuantizedResizeBilinear`.\n\nPiperOrigin-RevId: 369765091\nChange-Id: I33be8b78273ab7d08b97541692fe05cb7f94963a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 2, 'total': 10}",
            "files":"{'tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc': {'additions': 8, 'deletions': 2, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f6c40f0c6cbf00d46c7717a26419f2062f2f8694\/tensorflow%2Fcore%2Fkernels%2Fquantized_resize_bilinear_op.cc', 'patch': '@@ -702,8 +702,14 @@ class QuantizedResizeBilinearOp : public OpKernel {\\n   }\\n \\n   void Compute(OpKernelContext* context) override {\\n-    const float in_min = context->input(2).flat<float>()(0);\\n-    const float in_max = context->input(3).flat<float>()(0);\\n+    const auto& in_min_tensor = context->input(2);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),\\n+                errors::InvalidArgument(\"min must be a scalar\"));\\n+    const float in_min = in_min_tensor.flat<float>()(0);\\n+    const auto& in_max_tensor = context->input(3);\\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_max_tensor.shape()),\\n+                errors::InvalidArgument(\"max must be a scalar\"));\\n+    const float in_max = in_max_tensor.flat<float>()(0);\\n \\n     ImageResizerState st(align_corners_, false);\\n     st.ValidateAndCreateOutput(context);'}}",
            "message_norm":"validate min and max arguments to `quantizedresizebilinear`.\n\npiperorigin-revid: 369765091\nchange-id: i33be8b78273ab7d08b97541692fe05cb7f94963a",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('369765091', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc'])",
            "num_files":1.0,
            "patch_content":"From f6c40f0c6cbf00d46c7717a26419f2062f2f8694 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 21 Apr 2021 17:00:39 -0700\nSubject: [PATCH] Validate min and max arguments to `QuantizedResizeBilinear`.\n\nPiperOrigin-RevId: 369765091\nChange-Id: I33be8b78273ab7d08b97541692fe05cb7f94963a\n---\n ...\/core\/kernels\/quantized_resize_bilinear_op.cc       | 10 ++++++++--\n 1 file changed, 8 insertions(+), 2 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc b\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc\nindex 2fd807f6df9614..a110944dda5844 100644\n--- a\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc\n+++ b\/tensorflow\/core\/kernels\/quantized_resize_bilinear_op.cc\n@@ -702,8 +702,14 @@ class QuantizedResizeBilinearOp : public OpKernel {\n   }\n \n   void Compute(OpKernelContext* context) override {\n-    const float in_min = context->input(2).flat<float>()(0);\n-    const float in_max = context->input(3).flat<float>()(0);\n+    const auto& in_min_tensor = context->input(2);\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_min_tensor.shape()),\n+                errors::InvalidArgument(\"min must be a scalar\"));\n+    const float in_min = in_min_tensor.flat<float>()(0);\n+    const auto& in_max_tensor = context->input(3);\n+    OP_REQUIRES(context, TensorShapeUtils::IsScalar(in_max_tensor.shape()),\n+                errors::InvalidArgument(\"max must be a scalar\"));\n+    const float in_max = in_max_tensor.flat<float>()(0);\n \n     ImageResizerState st(align_corners_, false);\n     st.ValidateAndCreateOutput(context);"
        },
        {
            "index":588,
            "vuln_id":"GHSA-h3fg-h5v3-vf8m",
            "cwe_id":"{'CWE-352'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/solidusio\/solidus\/commit\/a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6', 'https:\/\/github.com\/solidusio\/solidus\/commit\/4d17cacf066d9492fc04eb3a0b16084b47376d81'}",
            "dataset":"osv",
            "summary":"CSRF forgery protection bypass in solidus_frontend ### Impact\nCSRF vulnerability that allows a malicious site to add an item to the user's cart without their knowledge.\n\nAll `solidus_frontend` versions are affected. If you're using your own storefront, please, follow along to make sure you're not affected.\n\nTo reproduce the issue:\n\n- Pick the id for a variant with available stock. From the rails console:\n\n  ```ruby\n  Spree::Variant.in_stock.pluck(:id)\n  ```\n\n  Say we pick variant id `2`.\n\n- Launch your application, for instance, on `http:\/\/localhost:3000`:\n\n  ```bash\n  bin\/rails server\n  ```\n\n- Open your browser dev tools.\n\n- Click on whatever link in your store.\n\n- Copy the value of the `Cookie` request header sent for the previous request from your browser dev tools.\n\n- Execute the following, using your previously selected variant id and the value of the `Cookie` header (notice how it doesn't contain any authentication token):\n\n  ```bash\n  curl -X POST -d \"variant_id=2&quantity=1\" -H \"Cookie: guest_token=eyJfcmFpbHMiOnsibWVzc2FnZSI6IklrWlRVMWRQWnpKMVZVdFNXRzlPVW1aaWJHTjZZa0VpIiwiZXhwIjpudWxsLCJwdXIiOiJjb29raWUuZ3Vlc3RfdG9rZW4ifX0%3D--5006ba5d346f621c760a29b6a797bf351d17d1b8; _sandbox_session=vhutu5%2FL9NmWrUpGc3DxrFA%2FFsQD1dHn1cNsD7nvE84zcjWf17Af4%2F%2F2Vab3md71b6KTb9NP6WktdXktpwH4eU01jEGIBXG5%2BMzW5nL0nb4W269qk1io4LYljvoOg8%2BZVll7oJCVkJLKKh0sSoS0Kg8j%2FCHHs%2BsShohP%2BGnA%2Bfr9Ub8H6HofpSmloSpsfHHygmX0ho03fEgzHJ4DD5wJctaNKwg7NhVikHh5kgIPPHl84OGCgv3p2oe9jR19HTxOKq7BtyvDd7XZsecWhkcfS8BPnvDDUWZG6qpAEFI5kWo81KkpSJ%2Bp6Q1HOo8%3D--n3G2vgaDG7VS%2B%2FhF--ZTjxBAkfGG3hpr4GRQ2S1Q%3D%3D; __profilin=p%3Dt\" http:\/\/localhost:3000\/orders\/populate\n  ```\n\n- Reload your browser and look at how your cart got updated.\n\n### Patches\n\nPlease, upgrade `solidus` to versions `3.1.5`, `3.0.5` or `2.11.14`.\n\nAfter upgrading, make sure you read the \"Upgrade notes\"  section below.\n\n### Upgrade notes\n\nThe patch adds CSRF token verification to the \"Add to cart\" action. Adding forgery protection to a form that missed it can have some side effects.\n\n#### `InvalidAuthenticityToken` errors\n\nIf you're using the `:exception` strategy, it's likely that after upgrading, you'll see more `ActionController::InvalidAuthenticityToken` errors popping out in your logs. Due to browser-side cache, a form can be re-rendered and sent without any attached request cookie (for instance, when re-opening a mobile browser). That will cause an authentication error, as the sent token won't match with the one in the session (none in this case). That's a known problem in the Rails community (see https:\/\/github.com\/rails\/rails\/issues\/21948), and, at this point, there's no perfect solution.\n\nAny attempt to mitigate the issue should be seen at the application level. For an excellent survey of all the available options, take a look at https:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md. The latter is a third-party link. As the information is relevant here, we're going to copy it below, but it should be clear that all the credit goes to @kemenaran:\n\n> # Protecting against request forgery using CRSF tokens\n> \n> ## Context\n> \n> Rails has CSRF protection enabled by default, to protect against POST-based CSRF attacks.\n> \n> To protect from this, Rails stores two copies of a random token (the so-named CSRF token) on each request:\n> - one copy embedded in each HTML page,\n> - another copy in the user session.\n> \n> When performing a POST request, Rails checks that the two copies match \u2013 and otherwise denies the request. This protects against an attacker that would generate a form secretly pointing to our website: the attacker can't read the token in the session, and so can't post a form with a valid token.\n> \n> The problem is that, much more often, this has false positives. There are several cases for that, including:\n> \n> 1. The web browser (often mobile) loads a page containing a form, then is closed by the user. Later, when the browser is re-opened, it restores the page from the cache. But the session cookie has expired, and so is not restored \u2013 so the copy of the CSRF token stored in the session is missing. When the user submits the form, they get an \"InvalidAuthenticityToken\" exception.\n> \n> 2. The user attempts to fill a form, and gets an error message (usually in response to a POST request). They close the browser. When the browser is re-opened, it attempts to restore the page. On Chrome this is blocked by the browser, because the browser denies retrying a (probably non-idempotent) POST request. Safari however happily retries the POST request \u2013 but without sending any cookies (in an attempt to avoid having unexpected side-effects). So the copy of the CSRF token in the session is missing (because no cookie was sent), and the user get an \"InvalidAuthenticityToken\" exception.\n> \n> ## Options considered\n> \n> ### Extend the session cookie duration\n> \n> We can configure the session cookie to be valid for a longer time (like 2 weeks).\n> \n> Pros:\n> - It solves 1., because when the browser restores the page, the session cookie is still valid.\n> \n> Cons:\n> - Users would be signed-in for a much longer time by default, which has unacceptable security implications.\n> - It doesn't solve 2. (because Safari doesn't send any cookie when restoring a page from a POST request)\n> \n> ### Change the cache parameters\n> \n> We can send a HTTP cache header stating 'Cache-Control: no-store, no-cache'. This instructs the browser to never keep any copy of the page, and to always make a request to the server to restore it.\n> \n> This solution was attempted during a year in production, and solved 1. \u2013 but also introduced another type of InvalidAuthenticityToken errors. In that scenario, the user attempts to fill a form, and gets an error message (usually in response to a POST request). They then navigate on another domain (like France Connect), then hit the \"Back\" button. Crossing back the domain boundary may cause the browser to either block the request or retry an invalid POST request.\n> \n> Pros:\n> - It solves 1., because on relaunch the browser requests a fresh page again (instead of serving it from its cache), thus retrieving a fresh session and a fresh matching CSRF token.\n> \n> Cons:\n> - It doesn't solve 2.\n> - It causes another type of InvalidAuthenticityToken errors.\n> \n> ### Using a null-session strategy\n> \n> We can change the default protect_from_forgery strategy to :null_session. This makes the current request use an empty session for the request duration.\n> \n> Pros:\n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted.\n> \n> Cons:\n> - The user is asked to sign-in only after filling and submitting the form, losing their time and data\n> - The user will not be redirected to their original page after signing-in\n> - It has potential security implications: as the (potentically malicious) request runs anyway, variables cached by a controller before the Null session is created may allow the form submission to succeed anyway (https:\/\/www.veracode.com\/blog\/managing-appsec\/when-rails-protectfromforgery-fails)\n> \n> ### Using a reset-session strategy\n> \n> We can change the default protect_from_forgery strategy to :reset_session. This clears the user session permanently, logging them out until they log in again.\n> \n> Pros: \n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted.\n> \n> Cons:\n> - A forgery error in a browser tab will disconnect the user in all its open tabs\n> - It has potential security implications: as the (potentically malicious) request runs anyway, variables cached by a controller before the Null session is created may allow the form submission to succeed anyway (https:\/\/www.veracode.com\/blog\/managing-appsec\/when-rails-protectfromforgery-fails)\n> - It allows an attacker to disconnect an user on demand, which is not only inconvenient, but also has security implication (the attacker could then log the user on it's own attacker account, pretending to be the user account)\n> \n> ### Redirect to login form\n> \n> When a forgery error occurs, we can instead redirect to the login form.\n> \n> Pros:\n> - It kind of solves 1., by redirecting to a \"Please sign-in\" page when a stale form is submitted (but the user data is lost).\n> - It kind of solves 2., by redirecting to a \"Please sign-in\" page when a previously POSTed form is reloaded.\n> \n> Cons:\n> - Not all forms require authentication \u2013 so for public forms there is no point redirecting to the login form. \n> - The user will not be redirected to their original page after signing-in (because setting the redirect path is a state-changing action, and it is dangerous to let an unauthorized request changing the state \u2013 an attacker could control the path where an user is automatically redirected to.)\n> - The implementation is finicky, and may introduce security errors. For instance, a naive implementation that catches the exception and redirect_to the sign-in page will prevent Devise from running a cleanup code \u2013 which means the user will still be logged, and the CSRF protection is bypassed. However a well-tested implementation that lets Devise code run should avoid these pittfalls.\n> \n> ### Using a long-lived cookie for CSRF tokens\n> \n> Instead of storing the CSRF token in the session cookie (which is deleted when the browser is closed), we can instead store it in a longer-lived cookie. For this we need to patch Rails.\n> \n> Pros:\n> - It solves 1., because when the user submits a stale form, even if the session cookie because stale, the long-lived CSRF cookie is still valid.\n> \n> Cons:\n> - It doesn't solve 2., because when Safari retries a POST request, it sends none of the cookies (not even long-lived ones).\n> - Patching Rails may introduce security issues (now or in the future)\n\n#### Broken behavior due to session expiration + template cache\n\nAlthough pretty unlikely, you should make sure that your current setup for cache\/session expiration is compatible. The upgrade can break the addition of products to the cart if both:\n\n- The \"Add to cart\" form is being cached (usually along with the variant information).\n\n- A user session is reset at every or every few requests.\n\nThe token validation depends on the issuing and consuming sessions being the same. If a product page is cached with the token in it, it can become stale on a subsequent rendering if the session changes.\n\nTo check that you're safe, after having upgraded locally, go through the following steps:\n\n- Enable cache on dev mode:\n\n  ```bash\n  bin\/rails dev:cache\n  ```\n\n- Visit the page for a variant with stock.\n\n- Reload that page several times.\n\n- Click on the \"Add to cart\"  button.\n\n- Remember to rerun `bin\/rails dev:cache` to turn off cache again.\n\nNo error or session reset should happen.\n\nOtherwise, you can try with:\n\n- Revisiting how your session gets expired.\n- Changing the caching strategy to exclude the token.\n\n#### Using weaker CSRF protection strategies\n\nIt's also important to understand that a complete fix will only be in place when using the `:exception` forgery protection strategy. The `solidus_frontend` engine can't do pretty much anything otherwise. Using weaker CSRF strategies should be an informed and limited decision made by the application team. After the upgrade:\n\n- An app using `:null_session` should also be safe, but there will be side effects. That strategy runs with a null object session. As such, no order and no user is found on it. A new `cart` state order is created in the database, associated with no user. Next time the user visits the site, they won't find any difference in its cart state.\n\n- An app using `:reset_session` is not entirely safe. That strategy resets the session. That means that registered users will be logged out. Next time a user visits, they'll see the cart with the items added during the CSRF attack, although it won't be associated with their account in the case of registered users.\n\n#### Reversing the update\n\nIf you still want to deploy the upgraded version before changing your application code (if the latter is needed), you can add the following workaround to your `config\/application.rb` (however, take into account that you'll keep being vulnerable):\n\n```ruby\nconfig.after_initialize do\n  Spree::OrdersController.skip_before_action :verify_authenticity_token, only: [:populate]\nend\n```\n\n### Workarounds\n\nIf an upgrade is not an option, you can work around the issue by adding the following to `config\/application.rb`:\n\n```ruby\nconfig.after_initialize do\n  Spree::OrdersController.protect_from_forgery with: ApplicationController.forgery_protection_strategy.name.demodulize.underscore.to_sym, only: [:populate]\nend\n```\n\nHowever, go through the same safety check detailed on \"Upgrade notes\" above.\n\n### References\n\n- [CSRF on the Rails guides](https:\/\/guides.rubyonrails.org\/security.html#cross-site-request-forgery-csrf)\n- [How CSRF tokens are generated and validated on Rails](https:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef)\n- [Solidus security](https:\/\/solidus.io\/security\/)\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an [issue](https:\/\/github.com\/solidusio\/solidus\/issues) or a [discussion](https:\/\/github.com\/solidusio\/solidus\/discussions) in Solidus.\n* Email us at [security@solidus.io](mailto:security@soliidus.io)\n* Contact the core team on [Slack](http:\/\/slack.solidus.io\/)",
            "published_date":"2022-01-06",
            "chain_len":2,
            "project":"https:\/\/github.com\/solidusio\/solidus",
            "commit_href":"https:\/\/github.com\/solidusio\/solidus\/commit\/4d17cacf066d9492fc04eb3a0b16084b47376d81",
            "commit_sha":"4d17cacf066d9492fc04eb3a0b16084b47376d81",
            "patch":"MULTI",
            "chain_ord":"['4d17cacf066d9492fc04eb3a0b16084b47376d81', 'a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6']",
            "before_first_fix_commit":"{'4d17cacf066d9492fc04eb3a0b16084b47376d81', 'c6b892696881f88d209efaedd8bb378e8261953f'}",
            "last_fix_commit":"a1b9bf7f24f9b8684fc4d943eacb02b1926c77c6",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/14\/2021, 09:36:44",
            "message":"Protect `Spree::OrdersController#populate` against CSRF attacks\n\nSee\nhttps:\/\/github.com\/solidusio\/solidus\/security\/advisories\/GHSA-h3fg-h5v3-vf8m\nfor all the details.\n\nSome time ago, all order actions were left out of CSRF protection (see\n95ea57058ab1c5e722b327b10747cd41e68a4deb). The reason given was that the\nauthentication token got stale after the second rendering because the\nproduct page is cached. That was limited to `#populate` in\ncb797542c6948ef33d2cc9e6076c88f4cc927fb2 (see also\nhttps:\/\/github.com\/spree\/spree\/pull\/5601).\n\nHowever, those assumptions are not correct. Although the authenticity\ntoken changes at every request, that doesn't mean that the old ones are\nno longer valid. The variation comes from a one-time pad added to a\nsession-dependant token (and meant to avoid timing attacks). However,\nbefore validation, that one-time pad is removed. That means the token\nremains valid as long as the session has not been reset. Think about\nsubmitting a form from one browser tab after opening another with the\nsame URL. Even if both tokens differ, the submission from the first tab\nwill still be valid. You can read\nhttps:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef\nfor an in-deep understanding.\n\nThe initial confusion could come because of\nhttps:\/\/github.com\/rails\/rails\/issues\/21948. Due to browser-side cache,\na form can be re-rendered and sent without any attached request cookie.\nThat will cause an authentication error, as the sent token won't match\nwith the one in the session (none in this case). There's no perfect\nsolution for that, and all partial fixes should be seen at the\napplication level. From our side, we must provide a safe default. For an\nexcellent survey of all the available options, take a look at\nhttps:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md.\nThe information given in that link is third-party but it's very\nrelevant here. For that reason we've copied it in the security advisory\n(see link above), but all the credit goes to @kemenaran.",
            "author":"Marc Busqu\u00e9",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 1, 'total': 1}",
            "files":"{'frontend\/app\/controllers\/spree\/orders_controller.rb': {'additions': 0, 'deletions': 1, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/solidusio\/solidus\/raw\/4d17cacf066d9492fc04eb3a0b16084b47376d81\/frontend%2Fapp%2Fcontrollers%2Fspree%2Forders_controller.rb', 'patch': \"@@ -10,7 +10,6 @@ class OrdersController < Spree::StoreController\\n     before_action :assign_order, only: :update\\n     # note: do not lock the #edit action because that's where we redirect when we fail to acquire a lock\\n     around_action :lock_order, only: :update\\n-    skip_before_action :verify_authenticity_token, only: [:populate]\\n \\n     def show\\n       @order = Spree::Order.find_by!(number: params[:id])\"}}",
            "message_norm":"protect `spree::orderscontroller#populate` against csrf attacks\n\nsee\nhttps:\/\/github.com\/solidusio\/solidus\/security\/advisories\/ghsa-h3fg-h5v3-vf8m\nfor all the details.\n\nsome time ago, all order actions were left out of csrf protection (see\n95ea57058ab1c5e722b327b10747cd41e68a4deb). the reason given was that the\nauthentication token got stale after the second rendering because the\nproduct page is cached. that was limited to `#populate` in\ncb797542c6948ef33d2cc9e6076c88f4cc927fb2 (see also\nhttps:\/\/github.com\/spree\/spree\/pull\/5601).\n\nhowever, those assumptions are not correct. although the authenticity\ntoken changes at every request, that doesn't mean that the old ones are\nno longer valid. the variation comes from a one-time pad added to a\nsession-dependant token (and meant to avoid timing attacks). however,\nbefore validation, that one-time pad is removed. that means the token\nremains valid as long as the session has not been reset. think about\nsubmitting a form from one browser tab after opening another with the\nsame url. even if both tokens differ, the submission from the first tab\nwill still be valid. you can read\nhttps:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef\nfor an in-deep understanding.\n\nthe initial confusion could come because of\nhttps:\/\/github.com\/rails\/rails\/issues\/21948. due to browser-side cache,\na form can be re-rendered and sent without any attached request cookie.\nthat will cause an authentication error, as the sent token won't match\nwith the one in the session (none in this case). there's no perfect\nsolution for that, and all partial fixes should be seen at the\napplication level. from our side, we must provide a safe default. for an\nexcellent survey of all the available options, take a look at\nhttps:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md.\nthe information given in that link is third-party but it's very\nrelevant here. for that reason we've copied it in the security advisory\n(see link above), but all the credit goes to @kemenaran.",
            "language":"en",
            "entities":"[('protect', 'ACTION', ''), ('csrf', 'SECWORD', ''), ('attacks', 'FLAW', ''), ('https:\/\/github.com\/solidusio\/solidus\/security\/advisories\/ghsa-h3fg-h5v3-vf8m', 'VULNID', 'GHSA'), ('csrf', 'SECWORD', ''), ('protection', 'SECWORD', ''), ('95ea57058ab1c5e722b327b10747cd41e68a4deb', 'SHA', 'generic_sha'), ('authentication', 'SECWORD', ''), ('cb797542c6948ef33d2cc9e6076c88f4cc927fb2', 'SHA', 'generic_sha'), ('https:\/\/github.com\/spree\/spree\/pull\/5601', 'URL', ''), ('added', 'ACTION', ''), ('attacks', 'SECWORD', ''), ('removed', 'ACTION', ''), ('https:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef', 'SECWORD', ''), ('https:\/\/github.com\/rails\/rails\/issues\/21948', 'URL', ''), ('cookie', 'SECWORD', ''), ('authentication', 'SECWORD', ''), ('error', 'FLAW', ''), ('safe', 'SECWORD', ''), ('https:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md', 'SECWORD', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['frontend\/app\/controllers\/spree\/orders_controller.rb'])",
            "num_files":1.0,
            "patch_content":"From 4d17cacf066d9492fc04eb3a0b16084b47376d81 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Marc=20Busqu=C3=A9?= <marc@lamarciana.com>\nDate: Tue, 14 Dec 2021 10:36:44 +0100\nSubject: [PATCH] Protect `Spree::OrdersController#populate` against CSRF\n attacks\n\nSee\nhttps:\/\/github.com\/solidusio\/solidus\/security\/advisories\/GHSA-h3fg-h5v3-vf8m\nfor all the details.\n\nSome time ago, all order actions were left out of CSRF protection (see\n95ea57058ab1c5e722b327b10747cd41e68a4deb). The reason given was that the\nauthentication token got stale after the second rendering because the\nproduct page is cached. That was limited to `#populate` in\ncb797542c6948ef33d2cc9e6076c88f4cc927fb2 (see also\nhttps:\/\/github.com\/spree\/spree\/pull\/5601).\n\nHowever, those assumptions are not correct. Although the authenticity\ntoken changes at every request, that doesn't mean that the old ones are\nno longer valid. The variation comes from a one-time pad added to a\nsession-dependant token (and meant to avoid timing attacks). However,\nbefore validation, that one-time pad is removed. That means the token\nremains valid as long as the session has not been reset. Think about\nsubmitting a form from one browser tab after opening another with the\nsame URL. Even if both tokens differ, the submission from the first tab\nwill still be valid. You can read\nhttps:\/\/medium.com\/rubyinside\/a-deep-dive-into-csrf-protection-in-rails-19fa0a42c0ef\nfor an in-deep understanding.\n\nThe initial confusion could come because of\nhttps:\/\/github.com\/rails\/rails\/issues\/21948. Due to browser-side cache,\na form can be re-rendered and sent without any attached request cookie.\nThat will cause an authentication error, as the sent token won't match\nwith the one in the session (none in this case). There's no perfect\nsolution for that, and all partial fixes should be seen at the\napplication level. From our side, we must provide a safe default. For an\nexcellent survey of all the available options, take a look at\nhttps:\/\/github.com\/betagouv\/demarches-simplifiees.fr\/blob\/5b4f7f9ae9eaf0ac94008b62f7047e4714626cf9\/doc\/adr-csrf-forgery.md.\nThe information given in that link is third-party but it's very\nrelevant here. For that reason we've copied it in the security advisory\n(see link above), but all the credit goes to @kemenaran.\n---\n frontend\/app\/controllers\/spree\/orders_controller.rb | 1 -\n 1 file changed, 1 deletion(-)\n\ndiff --git a\/frontend\/app\/controllers\/spree\/orders_controller.rb b\/frontend\/app\/controllers\/spree\/orders_controller.rb\nindex bc23c3b46a..f21e4db653 100644\n--- a\/frontend\/app\/controllers\/spree\/orders_controller.rb\n+++ b\/frontend\/app\/controllers\/spree\/orders_controller.rb\n@@ -10,7 +10,6 @@ class OrdersController < Spree::StoreController\n     before_action :assign_order, only: :update\n     # note: do not lock the #edit action because that's where we redirect when we fail to acquire a lock\n     around_action :lock_order, only: :update\n-    skip_before_action :verify_authenticity_token, only: [:populate]\n \n     def show\n       @order = Spree::Order.find_by!(number: params[:id])"
        },
        {
            "index":395,
            "vuln_id":"GHSA-jcxv-2j3h-mg59",
            "cwe_id":"{'CWE-119'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/opencv\/opencv\/pull\/10369\/commits\/7bbe1a53cfc097b82b1589f7915a2120de39274c'}",
            "dataset":"osv",
            "summary":"Improper Restriction of Operations within the Bounds of a Memory Buffer in OpenCV OpenCV 3.3.1 (corresponding with opencv-python and opencv-contrib-python 3.3.1.11) has a Buffer Overflow in the cv::PxMDecoder::readData function in grfmt_pxm.cpp, because an incorrect size value is used.",
            "published_date":"2021-10-12",
            "chain_len":1,
            "project":"https:\/\/github.com\/opencv\/opencv",
            "commit_href":"https:\/\/github.com\/opencv\/opencv\/pull\/10369\/commits\/7bbe1a53cfc097b82b1589f7915a2120de39274c",
            "commit_sha":"7bbe1a53cfc097b82b1589f7915a2120de39274c",
            "patch":"SINGLE",
            "chain_ord":"['7bbe1a53cfc097b82b1589f7915a2120de39274c']",
            "before_first_fix_commit":"{'eecb64a97313bcc0221db20c9cd0636f1c27a6d8'}",
            "last_fix_commit":"7bbe1a53cfc097b82b1589f7915a2120de39274c",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/21\/2017, 01:10:24",
            "message":"imgcodecs(pxm): fix memcpy size",
            "author":"Alexander Alekhin",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'modules\/imgcodecs\/src\/grfmt_pxm.cpp': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/opencv\/opencv\/raw\/7bbe1a53cfc097b82b1589f7915a2120de39274c\/modules%2Fimgcodecs%2Fsrc%2Fgrfmt_pxm.cpp', 'patch': '@@ -333,7 +333,7 @@ bool PxMDecoder::readData( Mat& img )\\n                         }\\n                     }\\n                     else\\n-                        memcpy( data, src, CV_ELEM_SIZE1(m_type)*m_width);\\n+                        memcpy(data, src, img.elemSize1()*m_width);\\n                 }\\n                 else\\n                 {'}}",
            "message_norm":"imgcodecs(pxm): fix memcpy size",
            "language":"ca",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/imgcodecs\/src\/grfmt_pxm.cpp'])",
            "num_files":1.0,
            "patch_content":"From 7bbe1a53cfc097b82b1589f7915a2120de39274c Mon Sep 17 00:00:00 2001\nFrom: Alexander Alekhin <alexander.a.alekhin@gmail.com>\nDate: Thu, 21 Dec 2017 01:10:24 +0000\nSubject: [PATCH] imgcodecs(pxm): fix memcpy size\n\n---\n modules\/imgcodecs\/src\/grfmt_pxm.cpp | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/modules\/imgcodecs\/src\/grfmt_pxm.cpp b\/modules\/imgcodecs\/src\/grfmt_pxm.cpp\nindex b8301489b7b8..2e20d7814f56 100644\n--- a\/modules\/imgcodecs\/src\/grfmt_pxm.cpp\n+++ b\/modules\/imgcodecs\/src\/grfmt_pxm.cpp\n@@ -333,7 +333,7 @@ bool PxMDecoder::readData( Mat& img )\n                         }\n                     }\n                     else\n-                        memcpy( data, src, CV_ELEM_SIZE1(m_type)*m_width);\n+                        memcpy(data, src, img.elemSize1()*m_width);\n                 }\n                 else\n                 {"
        },
        {
            "index":160,
            "vuln_id":"GHSA-828x-qc2p-wprq",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4'}",
            "dataset":"osv",
            "summary":"Undefined behavior in `MaxPool3DGradGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPool3DGradGrad` exhibits undefined behavior by dereferencing null pointers backing attacker-supplied empty tensors:\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([0.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\nksize = [1, 1, 1, 1, 1]\nstrides = [1, 1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPool3DGradGrad(\n    orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n    strides=strides, padding=padding)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/72fe792967e7fd25234342068806707bbc116618\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L679-L703) fails to validate that the 3 tensor inputs are not empty. If any of them is empty, then accessing the elements in the tensor results in dereferencing a null pointer.\n\n### Patches\nWe have patched the issue in GitHub commit [a3d9f9be9ac2296615644061b40cefcee341dcc4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "commit_sha":"a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "patch":"SINGLE",
            "chain_ord":"['a3d9f9be9ac2296615644061b40cefcee341dcc4']",
            "before_first_fix_commit":"{'72fe792967e7fd25234342068806707bbc116618'}",
            "last_fix_commit":"a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 22:20:14",
            "message":"Add missing validation to pooling_ops_3d\n\nPiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/pooling_ops_3d.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a3d9f9be9ac2296615644061b40cefcee341dcc4\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_3d.cc', 'patch': '@@ -698,6 +698,19 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n                                 {2}, 0, tensor_out.shape(), &output));\\n \\n+    \/\/ Given access patterns in LaunchMaxPooling3dGradGradOp, these tensors must\\n+    \/\/ have elements.\\n+    OP_REQUIRES(context, tensor_in.NumElements() > 0,\\n+                errors::InvalidArgument(\"received empty tensor tensor_in: \",\\n+                                        tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.NumElements() > 0,\\n+                errors::InvalidArgument(\"received empty tensor tensor_out: \",\\n+                                        tensor_out.DebugString()));\\n+    OP_REQUIRES(\\n+        context, out_grad_backprop.NumElements() > 0,\\n+        errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\\n+                                out_grad_backprop.DebugString()));\\n+\\n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);\\n   }'}}",
            "message_norm":"add missing validation to pooling_ops_3d\n\npiperorigin-revid: 372218727\nchange-id: i6b9ed4266aa7286c02f1f230d7bea922c1be547e",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('372218727', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_3d.cc'])",
            "num_files":1.0,
            "patch_content":"From a3d9f9be9ac2296615644061b40cefcee341dcc4 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 5 May 2021 15:20:14 -0700\nSubject: [PATCH] Add missing validation to pooling_ops_3d\n\nPiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e\n---\n tensorflow\/core\/kernels\/pooling_ops_3d.cc | 13 +++++++++++++\n 1 file changed, 13 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/pooling_ops_3d.cc b\/tensorflow\/core\/kernels\/pooling_ops_3d.cc\nindex 1114e6931ecf94..7d133b66a1ebdf 100644\n--- a\/tensorflow\/core\/kernels\/pooling_ops_3d.cc\n+++ b\/tensorflow\/core\/kernels\/pooling_ops_3d.cc\n@@ -698,6 +698,19 @@ class MaxPooling3dGradGradOp : public OpKernel {\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\n                                 {2}, 0, tensor_out.shape(), &output));\n \n+    \/\/ Given access patterns in LaunchMaxPooling3dGradGradOp, these tensors must\n+    \/\/ have elements.\n+    OP_REQUIRES(context, tensor_in.NumElements() > 0,\n+                errors::InvalidArgument(\"received empty tensor tensor_in: \",\n+                                        tensor_in.DebugString()));\n+    OP_REQUIRES(context, tensor_out.NumElements() > 0,\n+                errors::InvalidArgument(\"received empty tensor tensor_out: \",\n+                                        tensor_out.DebugString()));\n+    OP_REQUIRES(\n+        context, out_grad_backprop.NumElements() > 0,\n+        errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\n+                                out_grad_backprop.DebugString()));\n+\n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);\n   }"
        },
        {
            "index":888,
            "vuln_id":"GHSA-rp7r-79rm-2758",
            "cwe_id":"{'CWE-200'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/apache\/derby\/commit\/fd24a7590ff5426bac68303fbeca07dbc5067412', 'https:\/\/github.com\/apache\/derby\/commit\/09a7325f75a4f96a7735e46c9723930f88ea2613', 'https:\/\/github.com\/apache\/derby\/commit\/82d721fd53e30dbb86d6d742c085030985091968'}",
            "dataset":"osv",
            "summary":"Apache Derby exposes user and password attributes Apache Derby before 10.1.2.1 exposes the (1) user and (2) password attributes in cleartext via (a) the RDBNAM parameter of the ACCSEC command and (b) the output of the DatabaseMetaData.getURL function, which allows context-dependent attackers to obtain sensitive information.",
            "published_date":"2022-05-01",
            "chain_len":3,
            "project":"https:\/\/github.com\/apache\/derby",
            "commit_href":"https:\/\/github.com\/apache\/derby\/commit\/09a7325f75a4f96a7735e46c9723930f88ea2613",
            "commit_sha":"09a7325f75a4f96a7735e46c9723930f88ea2613",
            "patch":"MULTI",
            "chain_ord":"['09a7325f75a4f96a7735e46c9723930f88ea2613', '82d721fd53e30dbb86d6d742c085030985091968', 'fd24a7590ff5426bac68303fbeca07dbc5067412']",
            "before_first_fix_commit":"{'90f16141b17352af5c934f3cf8bdbbb90c40624e'}",
            "last_fix_commit":"fd24a7590ff5426bac68303fbeca07dbc5067412",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/09\/2005, 19:50:58",
            "message":"DERBY-561 - Embedded driver jdbcCompliant() method should return true\nTest will be checked in as part of tess for DERBY-530\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860 13f79535-47bb-0310-9956-ffa450edef68",
            "author":"Katherine Marsden",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/derby\/raw\/09a7325f75a4f96a7735e46c9723930f88ea2613\/java%2Fengine%2Forg%2Fapache%2Fderby%2Fjdbc%2FInternalDriver.java', 'patch': '@@ -209,7 +209,7 @@ public int getMinorVersion() {\\n \\t}\\r\\n \\r\\n \\tpublic boolean jdbcCompliant() {\\r\\n-\\t\\treturn false;\\r\\n+\\t\\treturn true;\\r\\n \\t}\\r\\n \\r\\n \\t\/*'}}",
            "message_norm":"derby-561 - embedded driver jdbccompliant() method should return true\ntest will be checked in as part of tess for derby-530\n\n\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860 13f79535-47bb-0310-9956-ffa450edef68",
            "language":"en",
            "entities":"[('https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860', 'URL', ''), ('13f79535', 'SHA', 'generic_sha'), ('ffa450edef68', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java'])",
            "num_files":1.0,
            "patch_content":"From 09a7325f75a4f96a7735e46c9723930f88ea2613 Mon Sep 17 00:00:00 2001\nFrom: Katherine Marsden <kmarsden@apache.org>\nDate: Fri, 9 Sep 2005 19:50:58 +0000\nSubject: [PATCH] DERBY-561 - Embedded driver jdbcCompliant() method should\n return true Test will be checked in as part of tess for DERBY-530\n\ngit-svn-id: https:\/\/svn.apache.org\/repos\/asf\/db\/derby\/code\/trunk@279860 13f79535-47bb-0310-9956-ffa450edef68\n---\n java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java b\/java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java\nindex c8ecf04e6c..b0e90643f4 100644\n--- a\/java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java\n+++ b\/java\/engine\/org\/apache\/derby\/jdbc\/InternalDriver.java\n@@ -209,7 +209,7 @@ public int getMinorVersion() {\n \t}\r\n \r\n \tpublic boolean jdbcCompliant() {\r\n-\t\treturn false;\r\n+\t\treturn true;\r\n \t}\r\n \r\n \t\/*"
        },
        {
            "index":544,
            "vuln_id":"GHSA-grc3-8q8m-4j7c",
            "cwe_id":"{'CWE-280', 'CWE-732'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/apache\/accumulo\/commit\/877ad502f6857e48342664e4b0ce83db74e4cda4'}",
            "dataset":"osv",
            "summary":"Improper privilege handling in Apache Accumulo Apache Accumulo versions 1.5.0 through 1.10.0 and version 2.0.0 do not properly check the return value of some policy enforcement functions before permitting an authenticated user to perform certain administrative operations. Specifically, the return values of the 'canFlush' and 'canPerformSystemActions' security functions are not checked in some instances, therefore allowing an authenticated user with insufficient permissions to perform the following actions: flushing a table, shutting down Accumulo or an individual tablet server, and setting or removing system-wide Accumulo configuration properties.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/accumulo",
            "commit_href":"https:\/\/github.com\/apache\/accumulo\/commit\/877ad502f6857e48342664e4b0ce83db74e4cda4",
            "commit_sha":"877ad502f6857e48342664e4b0ce83db74e4cda4",
            "patch":"SINGLE",
            "chain_ord":"['877ad502f6857e48342664e4b0ce83db74e4cda4']",
            "before_first_fix_commit":"{'024a72ed8b80c21470ab2eed04787e3216b7b606'}",
            "last_fix_commit":"877ad502f6857e48342664e4b0ce83db74e4cda4",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/08\/2020, 19:08:36",
            "message":"Throw exceptions when permissions checks fail (#1828)\n\n(cherry-picked for 2.0.1)\n\nAdd and throw missing exceptions when permissions checks fail. This\nprevents certain operations that the user does not have privileges to\nperform from succeeding anyway.",
            "author":"Christopher Tubbs",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 7, 'total': 21}",
            "files":"{'server\/master\/src\/main\/java\/org\/apache\/accumulo\/master\/MasterClientServiceHandler.java': {'additions': 14, 'deletions': 7, 'changes': 21, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/accumulo\/raw\/877ad502f6857e48342664e4b0ce83db74e4cda4\/server%2Fmaster%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Faccumulo%2Fmaster%2FMasterClientServiceHandler.java', 'patch': '@@ -112,7 +112,8 @@ public long initiateFlush(TInfo tinfo, TCredentials c, String tableIdStr)\\n       throws ThriftSecurityException, ThriftTableOperationException {\\n     TableId tableId = TableId.of(tableIdStr);\\n     NamespaceId namespaceId = getNamespaceIdFromTableId(TableOperation.FLUSH, tableId);\\n-    master.security.canFlush(c, tableId, namespaceId);\\n+    if (!master.security.canFlush(c, tableId, namespaceId))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     String zTablePath = Constants.ZROOT + \"\/\" + master.getInstanceID() + Constants.ZTABLES + \"\/\"\\n         + tableId + Constants.ZTABLE_FLUSH_ID;\\n@@ -145,7 +146,8 @@ public void waitForFlush(TInfo tinfo, TCredentials c, String tableIdStr, ByteBuf\\n       throws ThriftSecurityException, ThriftTableOperationException {\\n     TableId tableId = TableId.of(tableIdStr);\\n     NamespaceId namespaceId = getNamespaceIdFromTableId(TableOperation.FLUSH, tableId);\\n-    master.security.canFlush(c, tableId, namespaceId);\\n+    if (!master.security.canFlush(c, tableId, namespaceId))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     Text startRow = ByteBufferUtil.toText(startRowBB);\\n     Text endRow = ByteBufferUtil.toText(endRowBB);\\n@@ -247,7 +249,8 @@ public void setTableProperty(TInfo info, TCredentials credentials, String tableN\\n   @Override\\n   public void shutdown(TInfo info, TCredentials c, boolean stopTabletServers)\\n       throws ThriftSecurityException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n     if (stopTabletServers) {\\n       master.setMasterGoalState(MasterGoalState.CLEAN_STOP);\\n       EventCoordinator.Listener eventListener = master.nextEvent.getListener();\\n@@ -261,7 +264,8 @@ public void shutdown(TInfo info, TCredentials c, boolean stopTabletServers)\\n   @Override\\n   public void shutdownTabletServer(TInfo info, TCredentials c, String tabletServer, boolean force)\\n       throws ThriftSecurityException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     final TServerInstance doomed = master.tserverSet.find(tabletServer);\\n     if (!force) {\\n@@ -333,15 +337,17 @@ public void reportTabletStatus(TInfo info, TCredentials credentials, String serv\\n   @Override\\n   public void setMasterGoalState(TInfo info, TCredentials c, MasterGoalState state)\\n       throws ThriftSecurityException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     master.setMasterGoalState(state);\\n   }\\n \\n   @Override\\n   public void removeSystemProperty(TInfo info, TCredentials c, String property)\\n       throws ThriftSecurityException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     try {\\n       SystemPropUtil.removeSystemProperty(master.getContext(), property);\\n@@ -355,7 +361,8 @@ public void removeSystemProperty(TInfo info, TCredentials c, String property)\\n   @Override\\n   public void setSystemProperty(TInfo info, TCredentials c, String property, String value)\\n       throws ThriftSecurityException, TException {\\n-    master.security.canPerformSystemActions(c);\\n+    if (!master.security.canPerformSystemActions(c))\\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\\n \\n     try {\\n       SystemPropUtil.setSystemProperty(master.getContext(), property, value);'}}",
            "message_norm":"throw exceptions when permissions checks fail (#1828)\n\n(cherry-picked for 2.0.1)\n\nadd and throw missing exceptions when permissions checks fail. this\nprevents certain operations that the user does not have privileges to\nperform from succeeding anyway.",
            "language":"en",
            "entities":"[('permissions', 'SECWORD', ''), ('#1828', 'ISSUE', ''), ('2.0.1', 'VERSION', ''), ('add', 'ACTION', ''), ('permissions', 'SECWORD', ''), ('prevents', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/master\/src\/main\/java\/org\/apache\/accumulo\/master\/MasterClientServiceHandler.java'])",
            "num_files":1.0,
            "patch_content":"From 877ad502f6857e48342664e4b0ce83db74e4cda4 Mon Sep 17 00:00:00 2001\nFrom: Christopher Tubbs <ctubbsii@apache.org>\nDate: Tue, 8 Dec 2020 14:08:36 -0500\nSubject: [PATCH] Throw exceptions when permissions checks fail (#1828)\n\n(cherry-picked for 2.0.1)\n\nAdd and throw missing exceptions when permissions checks fail. This\nprevents certain operations that the user does not have privileges to\nperform from succeeding anyway.\n---\n ...\/master\/MasterClientServiceHandler.java    | 21 ++++++++++++-------\n 1 file changed, 14 insertions(+), 7 deletions(-)\n\ndiff --git a\/server\/master\/src\/main\/java\/org\/apache\/accumulo\/master\/MasterClientServiceHandler.java b\/server\/master\/src\/main\/java\/org\/apache\/accumulo\/master\/MasterClientServiceHandler.java\nindex 49b13032121..21ad543bac8 100644\n--- a\/server\/master\/src\/main\/java\/org\/apache\/accumulo\/master\/MasterClientServiceHandler.java\n+++ b\/server\/master\/src\/main\/java\/org\/apache\/accumulo\/master\/MasterClientServiceHandler.java\n@@ -112,7 +112,8 @@ public long initiateFlush(TInfo tinfo, TCredentials c, String tableIdStr)\n       throws ThriftSecurityException, ThriftTableOperationException {\n     TableId tableId = TableId.of(tableIdStr);\n     NamespaceId namespaceId = getNamespaceIdFromTableId(TableOperation.FLUSH, tableId);\n-    master.security.canFlush(c, tableId, namespaceId);\n+    if (!master.security.canFlush(c, tableId, namespaceId))\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\n \n     String zTablePath = Constants.ZROOT + \"\/\" + master.getInstanceID() + Constants.ZTABLES + \"\/\"\n         + tableId + Constants.ZTABLE_FLUSH_ID;\n@@ -145,7 +146,8 @@ public void waitForFlush(TInfo tinfo, TCredentials c, String tableIdStr, ByteBuf\n       throws ThriftSecurityException, ThriftTableOperationException {\n     TableId tableId = TableId.of(tableIdStr);\n     NamespaceId namespaceId = getNamespaceIdFromTableId(TableOperation.FLUSH, tableId);\n-    master.security.canFlush(c, tableId, namespaceId);\n+    if (!master.security.canFlush(c, tableId, namespaceId))\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\n \n     Text startRow = ByteBufferUtil.toText(startRowBB);\n     Text endRow = ByteBufferUtil.toText(endRowBB);\n@@ -247,7 +249,8 @@ public void setTableProperty(TInfo info, TCredentials credentials, String tableN\n   @Override\n   public void shutdown(TInfo info, TCredentials c, boolean stopTabletServers)\n       throws ThriftSecurityException {\n-    master.security.canPerformSystemActions(c);\n+    if (!master.security.canPerformSystemActions(c))\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\n     if (stopTabletServers) {\n       master.setMasterGoalState(MasterGoalState.CLEAN_STOP);\n       EventCoordinator.Listener eventListener = master.nextEvent.getListener();\n@@ -261,7 +264,8 @@ public void shutdown(TInfo info, TCredentials c, boolean stopTabletServers)\n   @Override\n   public void shutdownTabletServer(TInfo info, TCredentials c, String tabletServer, boolean force)\n       throws ThriftSecurityException {\n-    master.security.canPerformSystemActions(c);\n+    if (!master.security.canPerformSystemActions(c))\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\n \n     final TServerInstance doomed = master.tserverSet.find(tabletServer);\n     if (!force) {\n@@ -333,7 +337,8 @@ public void reportTabletStatus(TInfo info, TCredentials credentials, String serv\n   @Override\n   public void setMasterGoalState(TInfo info, TCredentials c, MasterGoalState state)\n       throws ThriftSecurityException {\n-    master.security.canPerformSystemActions(c);\n+    if (!master.security.canPerformSystemActions(c))\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\n \n     master.setMasterGoalState(state);\n   }\n@@ -341,7 +346,8 @@ public void setMasterGoalState(TInfo info, TCredentials c, MasterGoalState state\n   @Override\n   public void removeSystemProperty(TInfo info, TCredentials c, String property)\n       throws ThriftSecurityException {\n-    master.security.canPerformSystemActions(c);\n+    if (!master.security.canPerformSystemActions(c))\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\n \n     try {\n       SystemPropUtil.removeSystemProperty(master.getContext(), property);\n@@ -355,7 +361,8 @@ public void removeSystemProperty(TInfo info, TCredentials c, String property)\n   @Override\n   public void setSystemProperty(TInfo info, TCredentials c, String property, String value)\n       throws ThriftSecurityException, TException {\n-    master.security.canPerformSystemActions(c);\n+    if (!master.security.canPerformSystemActions(c))\n+      throw new ThriftSecurityException(c.getPrincipal(), SecurityErrorCode.PERMISSION_DENIED);\n \n     try {\n       SystemPropUtil.setSystemProperty(master.getContext(), property, value);"
        },
        {
            "index":138,
            "vuln_id":"GHSA-hm45-mgqm-gjm4",
            "cwe_id":"{'CWE-79'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/a6b9785338003ec87fb75305e7d1cc2d40c7ab91', 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/99d88b840674674166ce005b784ae8e31e955ab1'}",
            "dataset":"osv",
            "summary":"Remote Code Execution (RCE) Exploit on Cross Site Scripting (XSS) Vulnerability ### Impact\nA RCE exploit has been discovered in the Red Discord Bot - Dashboard Webserver: this exploit allows Discord users with specially crafted Server names and Usernames\/Nicknames to inject code into the webserver front-end code.  By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis high severity exploit has been fixed on version `0.1.7a`.\n\n### Workarounds\nThere are no workarounds, bot owners must upgrade their relevant packages (Dashboard module and Dashboard webserver) in order to patch this issue\n\n### References\n- 99d88b8\n- a6b9785\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-Dashboard](https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/issues\/new\/choose)\n* Over on the official [Red Server](https:\/\/discord.gg\/red) or at the Third Party Server [Toxic Layer](https:\/\/discord.gg\/vQZTdB9)",
            "published_date":"2020-12-08",
            "chain_len":2,
            "project":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard",
            "commit_href":"https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/commit\/99d88b840674674166ce005b784ae8e31e955ab1",
            "commit_sha":"99d88b840674674166ce005b784ae8e31e955ab1",
            "patch":"MULTI",
            "chain_ord":"['99d88b840674674166ce005b784ae8e31e955ab1', 'a6b9785338003ec87fb75305e7d1cc2d40c7ab91']",
            "before_first_fix_commit":"{'261f00f52bbfee4db67f624fd7409bf08124a6c4'}",
            "last_fix_commit":"a6b9785338003ec87fb75305e7d1cc2d40c7ab91",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/30\/2020, 11:49:18",
            "message":"Fix unformatted HTML",
            "author":"NeuroAssassin",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 2, 'total': 8}",
            "files":"{'reddash\/app\/home\/templates\/dashboard.html': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-Dashboard\/raw\/99d88b840674674166ce005b784ae8e31e955ab1\/reddash%2Fapp%2Fhome%2Ftemplates%2Fdashboard.html', 'patch': '@@ -72,6 +72,7 @@ <h1>{{ _(\\'Loading servers...\\') }}<\/h1>\\n                 } else {\\r\\n                     var base_guild_url = \"{{ url_for(\\'home_blueprint.guild\\', guild=\\'123456789123456789\\') }}\"\\r\\n                     $(\"#serverrow\").html(\"\")\\r\\n+                    let counter = 0\\r\\n                     for (let g of json.data) {\\r\\n                         var current_guild_url = base_guild_url.replace(\"123456789123456789\", g.id)\\r\\n                         $(\"#serverrow\").append(`\\r\\n@@ -80,13 +81,16 @@ <h1>{{ _(\\'Loading servers...\\') }}<\/h1>\\n                                     <div class=\"card h-100\" onmouseover=\"playGif(this)\" onmouseout=\"stopGif(this)\">\\r\\n                                         <img class=\"card-img-top\" src=\"${g.icon}png\" alt=\"Card image cap\" data-src-url=\"${g.icon}\" data-is-animated=${g.animated}>\\r\\n                                         <div class=\"card-body\">\\r\\n-                                            <h5 class=\"card-title\">${g.name}<\/h5>\\r\\n-                                            <p class=\"card-text\">Owner: ${g.owner}<\/p>\\r\\n+                                            <h5 class=\"card-title\" id=\"guild-counter-${counter}\">Loading...<\/h5>\\r\\n+                                            <p class=\"card-text\" id=\"owner-counter-${counter}\">Owner: Loading...<\/p>\\r\\n                                         <\/div>\\r\\n                                     <\/div>\\r\\n                                 <\/a>\\r\\n                             <\/div>\\r\\n                         `)\\r\\n+                        $(`#guild-counter-${counter}`).text(g.name)\\r\\n+                        $(`#owner-counter-${counter}`).text(g.owner)\\r\\n+                        counter += 1\\r\\n                     }\\r\\n                 }\\r\\n             }'}}",
            "message_norm":"fix unformatted html",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['reddash\/app\/home\/templates\/dashboard.html'])",
            "num_files":1.0,
            "patch_content":"From 99d88b840674674166ce005b784ae8e31e955ab1 Mon Sep 17 00:00:00 2001\nFrom: NeuroAssassin <42872277+NeuroAssassin@users.noreply.github.com>\nDate: Mon, 30 Nov 2020 11:49:18 +0000\nSubject: [PATCH] Fix unformatted HTML\n\n---\n reddash\/app\/home\/templates\/dashboard.html | 8 ++++++--\n 1 file changed, 6 insertions(+), 2 deletions(-)\n\ndiff --git a\/reddash\/app\/home\/templates\/dashboard.html b\/reddash\/app\/home\/templates\/dashboard.html\nindex afdfbc5..9574226 100755\n--- a\/reddash\/app\/home\/templates\/dashboard.html\n+++ b\/reddash\/app\/home\/templates\/dashboard.html\n@@ -72,6 +72,7 @@ <h1>{{ _('Loading servers...') }}<\/h1>\n                 } else {\r\n                     var base_guild_url = \"{{ url_for('home_blueprint.guild', guild='123456789123456789') }}\"\r\n                     $(\"#serverrow\").html(\"\")\r\n+                    let counter = 0\r\n                     for (let g of json.data) {\r\n                         var current_guild_url = base_guild_url.replace(\"123456789123456789\", g.id)\r\n                         $(\"#serverrow\").append(`\r\n@@ -80,13 +81,16 @@ <h1>{{ _('Loading servers...') }}<\/h1>\n                                     <div class=\"card h-100\" onmouseover=\"playGif(this)\" onmouseout=\"stopGif(this)\">\r\n                                         <img class=\"card-img-top\" src=\"${g.icon}png\" alt=\"Card image cap\" data-src-url=\"${g.icon}\" data-is-animated=${g.animated}>\r\n                                         <div class=\"card-body\">\r\n-                                            <h5 class=\"card-title\">${g.name}<\/h5>\r\n-                                            <p class=\"card-text\">Owner: ${g.owner}<\/p>\r\n+                                            <h5 class=\"card-title\" id=\"guild-counter-${counter}\">Loading...<\/h5>\r\n+                                            <p class=\"card-text\" id=\"owner-counter-${counter}\">Owner: Loading...<\/p>\r\n                                         <\/div>\r\n                                     <\/div>\r\n                                 <\/a>\r\n                             <\/div>\r\n                         `)\r\n+                        $(`#guild-counter-${counter}`).text(g.name)\r\n+                        $(`#owner-counter-${counter}`).text(g.owner)\r\n+                        counter += 1\r\n                     }\r\n                 }\r\n             }"
        },
        {
            "index":263,
            "vuln_id":"GHSA-67mm-m3wx-j7fr",
            "cwe_id":"{'CWE-77'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/domharrington\/node-gitlog\/pull\/65\/commits\/bb22ffb2c907e0284f887ab625e12b88c31f4bf4'}",
            "dataset":"osv",
            "summary":"Command injection in gitlog The gitlog function in src\/index.ts in gitlog before 4.0.4 has a command injection vulnerability.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/domharrington\/node-gitlog",
            "commit_href":"https:\/\/github.com\/domharrington\/node-gitlog\/pull\/65\/commits\/bb22ffb2c907e0284f887ab625e12b88c31f4bf4",
            "commit_sha":"bb22ffb2c907e0284f887ab625e12b88c31f4bf4",
            "patch":"SINGLE",
            "chain_ord":"['bb22ffb2c907e0284f887ab625e12b88c31f4bf4']",
            "before_first_fix_commit":"{'256a9617fcaa04bba7652ef2a20bc0aa6cc5dbe1'}",
            "last_fix_commit":"bb22ffb2c907e0284f887ab625e12b88c31f4bf4",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/17\/2020, 11:48:28",
            "message":"Use child_process.execFile instead of child_process.exec",
            "author":"Ron",
            "comments":null,
            "stats":"{'additions': 24, 'deletions': 22, 'total': 46}",
            "files":"{'src\/index.ts': {'additions': 24, 'deletions': 22, 'changes': 46, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/domharrington\/node-gitlog\/raw\/bb22ffb2c907e0284f887ab625e12b88c31f4bf4\/src%2Findex.ts', 'patch': '@@ -1,4 +1,4 @@\\n-import { exec, execSync, ExecSyncOptions, ExecException } from \"child_process\";\\n+import { execFile, execFileSync, ExecSyncOptions, ExecException } from \"child_process\";\\n import { existsSync } from \"fs\";\\n import createDebugger from \"debug\";\\n \\n@@ -126,8 +126,8 @@ const defaultOptions = {\\n };\\n \\n \/** Add optional parameter to command *\/\\n-function addOptional<Field extends string = DefaultField>(\\n-  command: string,\\n+function addOptionalArgument<Field extends string = DefaultField>(\\n+  command: string[],\\n   options: GitlogOptions<Field>\\n ) {\\n   let commandWithOptions = command;\\n@@ -140,9 +140,9 @@ function addOptional<Field extends string = DefaultField>(\\n     \"committer\",\\n   ] as const;\\n \\n-  for (let i = cmdOptional.length; i--; ) {\\n+  for (let i = cmdOptional.length; i--;) {\\n     if (options[cmdOptional[i]]) {\\n-      commandWithOptions += ` --${cmdOptional[i]}=\"${options[cmdOptional[i]]}\"`;\\n+      commandWithOptions.push(`--${cmdOptional[i]}=${options[cmdOptional[i]]}`);\\n     }\\n   }\\n \\n@@ -234,30 +234,30 @@ const parseCommits = <T extends string>(\\n };\\n \\n \/** Run \"git log\" and return the result as JSON *\/\\n-function createCommand<T extends CommitField | DefaultField = DefaultField>(\\n+function createCommandArguments<T extends CommitField | DefaultField = DefaultField>(\\n   options: GitlogOptions<T>\\n ) {\\n   \/\/ Start constructing command\\n-  let command = \"git log -l0 \";\\n+  let command: string[] = [\"log\", \"-l0\"];\\n \\n   if (options.findCopiesHarder) {\\n-    command += \"--find-copies-harder \";\\n+    command.push(\"--find-copies-harder\");\\n   }\\n \\n   if (options.all) {\\n-    command += \"--all \";\\n+    command.push(\"--all\");\\n   }\\n \\n   if (options.includeMergeCommitFiles) {\\n-    command += \"-m \";\\n+    command.push(\"-m\");\\n   }\\n \\n-  command += `-n ${options.number}`;\\n+  command.push(`-n ${options.number}`);\\n \\n-  command = addOptional(command, options);\\n+  command = addOptionalArgument(command, options);\\n \\n   \/\/ Start of custom format\\n-  command += \\' --pretty=\"@begin@\\';\\n+  let prettyArgument: string = \\'--pretty=@begin@\\';\\n \\n   \/\/ Iterating through the fields and adding them to the custom format\\n   if (options.fields) {\\n@@ -266,29 +266,31 @@ function createCommand<T extends CommitField | DefaultField = DefaultField>(\\n         throw new Error(`Unknown field: ${field}`);\\n       }\\n \\n-      command += delimiter + fieldMap[field];\\n+      prettyArgument += delimiter + fieldMap[field];\\n     });\\n   }\\n \\n   \/\/ Close custom format\\n-  command += \\'@end@\"\\';\\n+  prettyArgument += \\'@end@\\';\\n+  command.push(prettyArgument);\\n \\n   \/\/ Append branch (revision range) if specified\\n   if (options.branch) {\\n-    command += ` ${options.branch}`;\\n+    command.push(options.branch);\\n   }\\n \\n   \/\/ File and file status\\n   if (options.nameStatus && !options.fileLineRange) {\\n-    command += \" --name-status\";\\n+    command.push(\"--name-status\");\\n   }\\n \\n   if (options.fileLineRange) {\\n-    command += ` -L ${options.fileLineRange.startLine},${options.fileLineRange.endLine}:${options.fileLineRange.file}`;\\n+    command.push(`-L ${options.fileLineRange.startLine},${options.fileLineRange.endLine}:${options.fileLineRange.file}`);\\n   }\\n \\n   if (options.file) {\\n-    command += ` -- ${options.file}`;\\n+    command.push(\"--\");\\n+    command.push(options.file);\\n   }\\n \\n   debug(\"command\", options.execOptions, command);\\n@@ -342,10 +344,10 @@ function gitlog<Field extends CommitField = DefaultField>(\\n     ...userOptions,\\n   };\\n   const execOptions = { cwd: userOptions.repo, ...userOptions.execOptions };\\n-  const command = createCommand(options);\\n+  const commandArguments = createCommandArguments(options);\\n \\n   if (!cb) {\\n-    const stdout = execSync(command, execOptions).toString();\\n+    const stdout = execFileSync(\"git\", commandArguments, execOptions).toString();\\n     const commits = stdout.split(\"@begin@\");\\n \\n     if (commits[0] === \"\") {\\n@@ -356,7 +358,7 @@ function gitlog<Field extends CommitField = DefaultField>(\\n     return parseCommits(commits, options.fields, options.nameStatus);\\n   }\\n \\n-  exec(command, execOptions, (err, stdout, stderr) => {\\n+  execFile(\"git\", commandArguments, execOptions, (err, stdout, stderr) => {\\n     debug(\"stdout\", stdout);\\n     const commits = stdout.split(\"@begin@\");'}}",
            "message_norm":"use child_process.execfile instead of child_process.exec",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/index.ts'])",
            "num_files":1.0,
            "patch_content":"From bb22ffb2c907e0284f887ab625e12b88c31f4bf4 Mon Sep 17 00:00:00 2001\nFrom: Ron <67099202+ron-checkmarx@users.noreply.github.com>\nDate: Thu, 17 Dec 2020 13:48:28 +0200\nSubject: [PATCH] Use child_process.execFile instead of child_process.exec\n\n---\n src\/index.ts | 46 ++++++++++++++++++++++++----------------------\n 1 file changed, 24 insertions(+), 22 deletions(-)\n\ndiff --git a\/src\/index.ts b\/src\/index.ts\nindex 67739cb..bc9b590 100644\n--- a\/src\/index.ts\n+++ b\/src\/index.ts\n@@ -1,4 +1,4 @@\n-import { exec, execSync, ExecSyncOptions, ExecException } from \"child_process\";\n+import { execFile, execFileSync, ExecSyncOptions, ExecException } from \"child_process\";\n import { existsSync } from \"fs\";\n import createDebugger from \"debug\";\n \n@@ -126,8 +126,8 @@ const defaultOptions = {\n };\n \n \/** Add optional parameter to command *\/\n-function addOptional<Field extends string = DefaultField>(\n-  command: string,\n+function addOptionalArgument<Field extends string = DefaultField>(\n+  command: string[],\n   options: GitlogOptions<Field>\n ) {\n   let commandWithOptions = command;\n@@ -140,9 +140,9 @@ function addOptional<Field extends string = DefaultField>(\n     \"committer\",\n   ] as const;\n \n-  for (let i = cmdOptional.length; i--; ) {\n+  for (let i = cmdOptional.length; i--;) {\n     if (options[cmdOptional[i]]) {\n-      commandWithOptions += ` --${cmdOptional[i]}=\"${options[cmdOptional[i]]}\"`;\n+      commandWithOptions.push(`--${cmdOptional[i]}=${options[cmdOptional[i]]}`);\n     }\n   }\n \n@@ -234,30 +234,30 @@ const parseCommits = <T extends string>(\n };\n \n \/** Run \"git log\" and return the result as JSON *\/\n-function createCommand<T extends CommitField | DefaultField = DefaultField>(\n+function createCommandArguments<T extends CommitField | DefaultField = DefaultField>(\n   options: GitlogOptions<T>\n ) {\n   \/\/ Start constructing command\n-  let command = \"git log -l0 \";\n+  let command: string[] = [\"log\", \"-l0\"];\n \n   if (options.findCopiesHarder) {\n-    command += \"--find-copies-harder \";\n+    command.push(\"--find-copies-harder\");\n   }\n \n   if (options.all) {\n-    command += \"--all \";\n+    command.push(\"--all\");\n   }\n \n   if (options.includeMergeCommitFiles) {\n-    command += \"-m \";\n+    command.push(\"-m\");\n   }\n \n-  command += `-n ${options.number}`;\n+  command.push(`-n ${options.number}`);\n \n-  command = addOptional(command, options);\n+  command = addOptionalArgument(command, options);\n \n   \/\/ Start of custom format\n-  command += ' --pretty=\"@begin@';\n+  let prettyArgument: string = '--pretty=@begin@';\n \n   \/\/ Iterating through the fields and adding them to the custom format\n   if (options.fields) {\n@@ -266,29 +266,31 @@ function createCommand<T extends CommitField | DefaultField = DefaultField>(\n         throw new Error(`Unknown field: ${field}`);\n       }\n \n-      command += delimiter + fieldMap[field];\n+      prettyArgument += delimiter + fieldMap[field];\n     });\n   }\n \n   \/\/ Close custom format\n-  command += '@end@\"';\n+  prettyArgument += '@end@';\n+  command.push(prettyArgument);\n \n   \/\/ Append branch (revision range) if specified\n   if (options.branch) {\n-    command += ` ${options.branch}`;\n+    command.push(options.branch);\n   }\n \n   \/\/ File and file status\n   if (options.nameStatus && !options.fileLineRange) {\n-    command += \" --name-status\";\n+    command.push(\"--name-status\");\n   }\n \n   if (options.fileLineRange) {\n-    command += ` -L ${options.fileLineRange.startLine},${options.fileLineRange.endLine}:${options.fileLineRange.file}`;\n+    command.push(`-L ${options.fileLineRange.startLine},${options.fileLineRange.endLine}:${options.fileLineRange.file}`);\n   }\n \n   if (options.file) {\n-    command += ` -- ${options.file}`;\n+    command.push(\"--\");\n+    command.push(options.file);\n   }\n \n   debug(\"command\", options.execOptions, command);\n@@ -342,10 +344,10 @@ function gitlog<Field extends CommitField = DefaultField>(\n     ...userOptions,\n   };\n   const execOptions = { cwd: userOptions.repo, ...userOptions.execOptions };\n-  const command = createCommand(options);\n+  const commandArguments = createCommandArguments(options);\n \n   if (!cb) {\n-    const stdout = execSync(command, execOptions).toString();\n+    const stdout = execFileSync(\"git\", commandArguments, execOptions).toString();\n     const commits = stdout.split(\"@begin@\");\n \n     if (commits[0] === \"\") {\n@@ -356,7 +358,7 @@ function gitlog<Field extends CommitField = DefaultField>(\n     return parseCommits(commits, options.fields, options.nameStatus);\n   }\n \n-  exec(command, execOptions, (err, stdout, stderr) => {\n+  execFile(\"git\", commandArguments, execOptions, (err, stdout, stderr) => {\n     debug(\"stdout\", stdout);\n     const commits = stdout.split(\"@begin@\");"
        },
        {
            "index":75,
            "vuln_id":"GHSA-9g9w-hmvj-5h57",
            "cwe_id":"{'CWE-471'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jonschlinkert\/merge-deep\/commit\/2c33634da7129a5aefcc262d2fec2e72224404e5'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in merge-deep Versions of `merge-deep` before 3.0.1 are vulnerable to prototype pollution via merging functions.\n\n\n## Recommendation\n\nUpdate to version 3.0.1 or later.",
            "published_date":"2018-07-26",
            "chain_len":1,
            "project":"https:\/\/github.com\/jonschlinkert\/merge-deep",
            "commit_href":"https:\/\/github.com\/jonschlinkert\/merge-deep\/commit\/2c33634da7129a5aefcc262d2fec2e72224404e5",
            "commit_sha":"2c33634da7129a5aefcc262d2fec2e72224404e5",
            "patch":"SINGLE",
            "chain_ord":"['2c33634da7129a5aefcc262d2fec2e72224404e5']",
            "before_first_fix_commit":"{'7be7e50163dc4ef467ace5371186a77028a66cc9'}",
            "last_fix_commit":"2c33634da7129a5aefcc262d2fec2e72224404e5",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2018, 16:43:20",
            "message":"exclude __proto__",
            "author":"doowb",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jonschlinkert\/merge-deep\/raw\/2c33634da7129a5aefcc262d2fec2e72224404e5\/index.js', 'patch': \"@@ -30,7 +30,7 @@ module.exports = function mergeDeep(orig, objects) {\\n \\n function merge(target, obj) {\\n   for (var key in obj) {\\n-    if (!hasOwn(obj, key)) {\\n+    if (key === '__proto__' || !hasOwn(obj, key)) {\\n       continue;\\n     }\"}}",
            "message_norm":"exclude __proto__",
            "language":"pt",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 2c33634da7129a5aefcc262d2fec2e72224404e5 Mon Sep 17 00:00:00 2001\nFrom: doowb <brian.woodward@gmail.com>\nDate: Wed, 7 Feb 2018 11:43:20 -0500\nSubject: [PATCH] exclude __proto__\n\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex 11031ee..a7b8fc5 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -30,7 +30,7 @@ module.exports = function mergeDeep(orig, objects) {\n \n function merge(target, obj) {\n   for (var key in obj) {\n-    if (!hasOwn(obj, key)) {\n+    if (key === '__proto__' || !hasOwn(obj, key)) {\n       continue;\n     }"
        },
        {
            "index":543,
            "vuln_id":"GHSA-gx8x-g87m-h5q6",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/sparklemotion\/nekohtml\/commit\/a800fce3b079def130ed42a408ff1d09f89e773d'}",
            "dataset":"osv",
            "summary":"Denial of Service (DoS) in Nokogiri on JRuby ## Summary\n\nNokogiri `v1.13.4` updates the vendored `org.cyberneko.html` library to `1.9.22.noko2` which addresses [CVE-2022-24839](https:\/\/github.com\/sparklemotion\/nekohtml\/security\/advisories\/GHSA-9849-p7jc-9rmv). That CVE is rated 7.5 (High Severity).\n\nSee [GHSA-9849-p7jc-9rmv](https:\/\/github.com\/sparklemotion\/nekohtml\/security\/advisories\/GHSA-9849-p7jc-9rmv) for more information.\n\nPlease note that this advisory only applies to the **JRuby** implementation of Nokogiri `< 1.13.4`.\n\n\n## Mitigation\n\nUpgrade to Nokogiri `>= 1.13.4`.\n\n\n## Impact\n\n### [CVE-2022-24839](https:\/\/github.com\/sparklemotion\/nekohtml\/security\/advisories\/GHSA-9849-p7jc-9rmv) in nekohtml\n\n- **Severity**: High 7.5\n- **Type**: [CWE-400](https:\/\/cwe.mitre.org\/data\/definitions\/400.html) Uncontrolled Resource Consumption\n- **Description**: The fork of `org.cyberneko.html` used by Nokogiri (Rubygem) raises a `java.lang.OutOfMemoryError` exception when parsing ill-formed HTML markup.\n- **See also**: [GHSA-9849-p7jc-9rmv](https:\/\/github.com\/sparklemotion\/nekohtml\/security\/advisories\/GHSA-9849-p7jc-9rmv)",
            "published_date":"2022-04-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/sparklemotion\/nekohtml",
            "commit_href":"https:\/\/github.com\/sparklemotion\/nekohtml\/commit\/a800fce3b079def130ed42a408ff1d09f89e773d",
            "commit_sha":"a800fce3b079def130ed42a408ff1d09f89e773d",
            "patch":"SINGLE",
            "chain_ord":"['a800fce3b079def130ed42a408ff1d09f89e773d']",
            "before_first_fix_commit":"{'6fe9b53bc289d0e90d684c0f4a8e9f2b19f3460f'}",
            "last_fix_commit":"a800fce3b079def130ed42a408ff1d09f89e773d",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/03\/2022, 23:03:39",
            "message":"fix: ensure ill-formed PIs are parsed correctly",
            "author":"Mike Dalessio",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/org\/cyberneko\/html\/HTMLScanner.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sparklemotion\/nekohtml\/raw\/a800fce3b079def130ed42a408ff1d09f89e773d\/src%2Forg%2Fcyberneko%2Fhtml%2FHTMLScanner.java', 'patch': \"@@ -2588,7 +2588,7 @@ protected void scanPI() throws IOException {\\n                     if (c == '?' || c == '\/') {\\n                         char c0 = (char)c;\\n                         c = fCurrentEntity.read();\\n-                        if (c == '>') {\\n+                        if (c == '>' || c == -1) {\\n                             break;\\n                         }\\n                         fStringBuffer.append(c0);\"}}",
            "message_norm":"fix: ensure ill-formed pis are parsed correctly",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('ensure', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/org\/cyberneko\/html\/HTMLScanner.java'])",
            "num_files":1.0,
            "patch_content":"From a800fce3b079def130ed42a408ff1d09f89e773d Mon Sep 17 00:00:00 2001\nFrom: Mike Dalessio <mike.dalessio@gmail.com>\nDate: Sun, 3 Apr 2022 19:03:39 -0400\nSubject: [PATCH] fix: ensure ill-formed PIs are parsed correctly\n\n---\n src\/org\/cyberneko\/html\/HTMLScanner.java | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/org\/cyberneko\/html\/HTMLScanner.java b\/src\/org\/cyberneko\/html\/HTMLScanner.java\nindex fe414a4..0519316 100644\n--- a\/src\/org\/cyberneko\/html\/HTMLScanner.java\n+++ b\/src\/org\/cyberneko\/html\/HTMLScanner.java\n@@ -2588,7 +2588,7 @@ protected void scanPI() throws IOException {\n                     if (c == '?' || c == '\/') {\n                         char c0 = (char)c;\n                         c = fCurrentEntity.read();\n-                        if (c == '>') {\n+                        if (c == '>' || c == -1) {\n                             break;\n                         }\n                         fStringBuffer.append(c0);"
        },
        {
            "index":919,
            "vuln_id":"GHSA-wwgf-3xp7-cxj4",
            "cwe_id":"{'CWE-200'}",
            "score":5.9,
            "chain":"{'https:\/\/github.com\/FriendsOfPHP\/security-advisories\/commit\/942fd37245cb724ba8cc8d6f11f075a1bd53b338'}",
            "dataset":"osv",
            "summary":"Potentially sensitive data exposure in Symfony Web Socket Bundle ### Impact\nInside `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::onPublish()`, messages are arbitrarily broadcasted to the related Topic if `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::dispatch()` does not succeed.  The `dispatch()` method can be considered to not succeed if (depending on the version of the bundle) the callback defined on a topic route is misconfigured, a `Gos\\Bundle\\WebSocketBundle\\Topic\\TopicInterface` implementation is not found for the callback, a topic which also implements `Gos\\Bundle\\WebSocketBundle\\Topic\\SecuredTopicInterface` rejects the connection, or an Exception is unhandled.  This can result in an unintended broadcast to the websocket server potentially with data that should be considered sensitive.\n\n### Patches\nIn 1.10.4, 2.6.1, and 3.3.0, `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::onPublish()` has been changed to no longer broadcast an event's data if `Gos\\Bundle\\WebSocketBundle\\Server\\App\\Dispatcher\\TopicDispatcher::dispatch()` fails.\n\n### Workarounds\nUpgrade to 1.10.4, 2.6.1, and 3.3.0\n\nNote, the 1.x branch is considered end of support as of July 1, 2020.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [this repository](https:\/\/github.com\/GeniusesOfSymfony\/WebSocketBundle)",
            "published_date":"2020-07-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/FriendsOfPHP\/security-advisories",
            "commit_href":"https:\/\/github.com\/FriendsOfPHP\/security-advisories\/commit\/942fd37245cb724ba8cc8d6f11f075a1bd53b338",
            "commit_sha":"942fd37245cb724ba8cc8d6f11f075a1bd53b338",
            "patch":"SINGLE",
            "chain_ord":"['942fd37245cb724ba8cc8d6f11f075a1bd53b338']",
            "before_first_fix_commit":"{'c6fc7221e152c3a73fed562ad9c815ccf258a476'}",
            "last_fix_commit":"942fd37245cb724ba8cc8d6f11f075a1bd53b338",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/06\/2020, 14:36:56",
            "message":"Add gos\/web-socket-bundle advisory",
            "author":"Michael Babker",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'gos\/web-socket-bundle\/2020-07-06-1.yaml': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'added', 'raw_url': 'https:\/\/github.com\/FriendsOfPHP\/security-advisories\/raw\/942fd37245cb724ba8cc8d6f11f075a1bd53b338\/gos%2Fweb-socket-bundle%2F2020-07-06-1.yaml', 'patch': \"@@ -0,0 +1,13 @@\\n+title:     Potentially sensitive data exposure\\n+link:      https:\/\/github.com\/GeniusesOfSymfony\/WebSocketBundle\/security\/advisories\/GHSA-wwgf-3xp7-cxj4\\n+branches:\\n+    1.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['<1.10.4']\\n+    3.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['>=2.0.0', '<2.6.1']\\n+    3.x:\\n+        time:       2020-07-06 14:08:35\\n+        versions:   ['>=3.0.0', '<3.3.0']\\n+reference: composer:\/\/gos\/web-socket-bundle\"}}",
            "message_norm":"add gos\/web-socket-bundle advisory",
            "language":"en",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['gos\/web-socket-bundle\/2020-07-06-1.yaml'])",
            "num_files":1.0,
            "patch_content":"From 942fd37245cb724ba8cc8d6f11f075a1bd53b338 Mon Sep 17 00:00:00 2001\nFrom: Michael Babker <michael.babker@gmail.com>\nDate: Mon, 6 Jul 2020 09:36:56 -0500\nSubject: [PATCH] Add gos\/web-socket-bundle advisory\n\n---\n gos\/web-socket-bundle\/2020-07-06-1.yaml | 13 +++++++++++++\n 1 file changed, 13 insertions(+)\n create mode 100644 gos\/web-socket-bundle\/2020-07-06-1.yaml\n\ndiff --git a\/gos\/web-socket-bundle\/2020-07-06-1.yaml b\/gos\/web-socket-bundle\/2020-07-06-1.yaml\nnew file mode 100644\nindex 000000000..f57e29676\n--- \/dev\/null\n+++ b\/gos\/web-socket-bundle\/2020-07-06-1.yaml\n@@ -0,0 +1,13 @@\n+title:     Potentially sensitive data exposure\n+link:      https:\/\/github.com\/GeniusesOfSymfony\/WebSocketBundle\/security\/advisories\/GHSA-wwgf-3xp7-cxj4\n+branches:\n+    1.x:\n+        time:       2020-07-06 14:08:35\n+        versions:   ['<1.10.4']\n+    3.x:\n+        time:       2020-07-06 14:08:35\n+        versions:   ['>=2.0.0', '<2.6.1']\n+    3.x:\n+        time:       2020-07-06 14:08:35\n+        versions:   ['>=3.0.0', '<3.3.0']\n+reference: composer:\/\/gos\/web-socket-bundle"
        },
        {
            "index":6,
            "vuln_id":"GHSA-6gmv-pjp9-p8w8",
            "cwe_id":"{'CWE-125'}",
            "score":8.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995'}",
            "dataset":"osv",
            "summary":"Out of bounds read in Tensorflow ### Impact \nThe [implementation of shape inference for `ReverseSequence`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/ops\/array_ops.cc#L1636-L1671) does not fully validate the value of `batch_dim` and can result in a heap OOB read:\n\n```python\nimport tensorflow as tf\n\n@tf.function\ndef test():\n  y = tf.raw_ops.ReverseSequence(\n    input = ['aaa','bbb'],\n    seq_lengths = [1,1,1],\n    seq_dim = -10,\n    batch_dim = -10 )\n  return y\n    \ntest()\n```\n\nThere is a check to make sure the value of `batch_dim` does not go over the rank of the input, but there is no check for negative values:\n\n```cc\n  const int32_t input_rank = c->Rank(input);\n  if (batch_dim >= input_rank) {\n    return errors::InvalidArgument( \n        \"batch_dim must be < input rank: \", batch_dim, \" vs. \", input_rank);\n  }\n  \/\/ ...\n  \n  DimensionHandle batch_dim_dim = c->Dim(input, batch_dim);\n``` \n    \nNegative dimensions are allowed in some cases to mimic Python's negative indexing (i.e., indexing from the end of the array), however if the value is too negative then [the implementation of `Dim`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/framework\/shape_inference.h#L415-L428) would access elements before the start of an array:\n\n```cc\n  DimensionHandle Dim(ShapeHandle s, int64_t idx) {\n    if (!s.Handle() || s->rank_ == kUnknownRank) {\n      return UnknownDim();\n    }\n    return DimKnownRank(s, idx);\n  } \n\u00b7\n  static DimensionHandle DimKnownRank(ShapeHandle s, int64_t idx) {\n    CHECK_NE(s->rank_, kUnknownRank);\n    if (idx < 0) {\n      return s->dims_[s->dims_.size() + idx];\n    }\n    return s->dims_[idx];\n  }\n```\n\n### Patches\nWe have patched the issue in GitHub commit [37c01fb5e25c3d80213060460196406c43d31995](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/37c01fb5e25c3d80213060460196406c43d31995",
            "commit_sha":"37c01fb5e25c3d80213060460196406c43d31995",
            "patch":"SINGLE",
            "chain_ord":"['37c01fb5e25c3d80213060460196406c43d31995']",
            "before_first_fix_commit":"{'3218043d6d3a019756607643cf65574fbfef5d7a'}",
            "last_fix_commit":"37c01fb5e25c3d80213060460196406c43d31995",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/23\/2021, 22:27:30",
            "message":"Fix out of bound error in ReverseSequence Op shape function\n\nPiperOrigin-RevId: 411896080\nChange-Id: I7e59a38e2f960886edf2b6c54ed5a84e86a9b193",
            "author":"Isha Arkatkar",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'tensorflow\/core\/ops\/array_ops.cc': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/37c01fb5e25c3d80213060460196406c43d31995\/tensorflow%2Fcore%2Fops%2Farray_ops.cc', 'patch': '@@ -1653,11 +1653,21 @@ REGISTER_OP(\"ReverseSequence\")\\n         return errors::InvalidArgument(\\n             \"batch_dim must be < input rank: \", batch_dim, \" vs. \", input_rank);\\n       }\\n+\\n       if (seq_dim >= input_rank) {\\n         return errors::InvalidArgument(\\n             \"seq_dim must be < input rank: \", seq_dim, \" vs. \", input_rank);\\n       }\\n \\n+      \/\/ To prevent out of bound access when calling c->Dim(input, batch_dim),\\n+      \/\/ batch_dim range [-1 * input rank, input rank) is allowed. However,\\n+      \/\/ the op implementation has a stricter bound for batch_dim requiring >= 0\\n+      \/\/ value. Thus, perform strict check here.\\n+      if (batch_dim < 0) {\\n+        return errors::InvalidArgument(\"batch_dim must be >=0, got \",\\n+                                       batch_dim);\\n+      }\\n+\\n       DimensionHandle batch_dim_dim = c->Dim(input, batch_dim);\\n       TF_RETURN_IF_ERROR(\\n           c->Merge(batch_dim_dim, c->Dim(seq_lens_shape, 0), &batch_dim_dim));'}}",
            "message_norm":"fix out of bound error in reversesequence op shape function\n\npiperorigin-revid: 411896080\nchange-id: i7e59a38e2f960886edf2b6c54ed5a84e86a9b193",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('out of bound', 'SECWORD', ''), ('error', 'FLAW', ''), ('411896080', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/ops\/array_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From 37c01fb5e25c3d80213060460196406c43d31995 Mon Sep 17 00:00:00 2001\nFrom: Isha Arkatkar <ishark@google.com>\nDate: Tue, 23 Nov 2021 14:27:30 -0800\nSubject: [PATCH] Fix out of bound error in ReverseSequence Op shape function\n\nPiperOrigin-RevId: 411896080\nChange-Id: I7e59a38e2f960886edf2b6c54ed5a84e86a9b193\n---\n tensorflow\/core\/ops\/array_ops.cc | 10 ++++++++++\n 1 file changed, 10 insertions(+)\n\ndiff --git a\/tensorflow\/core\/ops\/array_ops.cc b\/tensorflow\/core\/ops\/array_ops.cc\nindex bcdc6643c89adb..1a88b16b865dd4 100644\n--- a\/tensorflow\/core\/ops\/array_ops.cc\n+++ b\/tensorflow\/core\/ops\/array_ops.cc\n@@ -1653,11 +1653,21 @@ REGISTER_OP(\"ReverseSequence\")\n         return errors::InvalidArgument(\n             \"batch_dim must be < input rank: \", batch_dim, \" vs. \", input_rank);\n       }\n+\n       if (seq_dim >= input_rank) {\n         return errors::InvalidArgument(\n             \"seq_dim must be < input rank: \", seq_dim, \" vs. \", input_rank);\n       }\n \n+      \/\/ To prevent out of bound access when calling c->Dim(input, batch_dim),\n+      \/\/ batch_dim range [-1 * input rank, input rank) is allowed. However,\n+      \/\/ the op implementation has a stricter bound for batch_dim requiring >= 0\n+      \/\/ value. Thus, perform strict check here.\n+      if (batch_dim < 0) {\n+        return errors::InvalidArgument(\"batch_dim must be >=0, got \",\n+                                       batch_dim);\n+      }\n+\n       DimensionHandle batch_dim_dim = c->Dim(input, batch_dim);\n       TF_RETURN_IF_ERROR(\n           c->Merge(batch_dim_dim, c->Dim(seq_lens_shape, 0), &batch_dim_dim));"
        },
        {
            "index":150,
            "vuln_id":"GHSA-m2q3-53fq-7h66",
            "cwe_id":"{'CWE-200'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/gollum\/gollum\/commit\/ce68a88293ce3b18c261312392ad33a88bb69ea1'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects gollum The Precious module in gollum before 4.0.1 allows remote attackers to read arbitrary files by leveraging the lack of a certain temporary-file check.",
            "published_date":"2018-08-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/gollum\/gollum",
            "commit_href":"https:\/\/github.com\/gollum\/gollum\/commit\/ce68a88293ce3b18c261312392ad33a88bb69ea1",
            "commit_sha":"ce68a88293ce3b18c261312392ad33a88bb69ea1",
            "patch":"SINGLE",
            "chain_ord":"['ce68a88293ce3b18c261312392ad33a88bb69ea1']",
            "before_first_fix_commit":"{'288f75929d57bff1753b47aa860066ce674d5229'}",
            "last_fix_commit":"ce68a88293ce3b18c261312392ad33a88bb69ea1",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/20\/2015, 11:53:02",
            "message":"Added security check.",
            "author":"Bart Kamphorst",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'lib\/gollum\/app.rb': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gollum\/gollum\/raw\/ce68a88293ce3b18c261312392ad33a88bb69ea1\/lib%2Fgollum%2Fapp.rb', 'patch': \"@@ -176,6 +176,7 @@ def wiki_new\\n         fullname = params[:file][:filename]\\n         tempfile = params[:file][:tempfile]\\n       end\\n+      halt 500 unless tempfile.is_a? Tempfile\\n \\n       # Remove page file dir prefix from upload path if necessary -- committer handles this itself\\n       dir      = wiki.per_page_uploads ? params[:upload_dest].match(\/^(#{wiki.page_file_dir}\\\\\/+)?(.*)\/)[2] : 'uploads'\"}}",
            "message_norm":"added security check.",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/gollum\/app.rb'])",
            "num_files":1.0,
            "patch_content":"From ce68a88293ce3b18c261312392ad33a88bb69ea1 Mon Sep 17 00:00:00 2001\nFrom: Bart Kamphorst <bart@kamphorst.com>\nDate: Sun, 20 Sep 2015 13:53:02 +0200\nSubject: [PATCH] Added security check.\n\n---\n lib\/gollum\/app.rb | 1 +\n 1 file changed, 1 insertion(+)\n\ndiff --git a\/lib\/gollum\/app.rb b\/lib\/gollum\/app.rb\nindex 12e47541a..3fde8bf27 100644\n--- a\/lib\/gollum\/app.rb\n+++ b\/lib\/gollum\/app.rb\n@@ -176,6 +176,7 @@ def wiki_new\n         fullname = params[:file][:filename]\n         tempfile = params[:file][:tempfile]\n       end\n+      halt 500 unless tempfile.is_a? Tempfile\n \n       # Remove page file dir prefix from upload path if necessary -- committer handles this itself\n       dir      = wiki.per_page_uploads ? params[:upload_dest].match(\/^(#{wiki.page_file_dir}\\\/+)?(.*)\/)[2] : 'uploads'"
        },
        {
            "index":655,
            "vuln_id":"GHSA-x83m-p7pv-ch8v",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/744009c9e5cc5d0447f0dc39d055f917e1fd9e16'}",
            "dataset":"osv",
            "summary":"Division by 0 in `QuantizedAdd` ### Impact\nAn attacker can cause a runtime division by zero error and denial of service in `tf.raw_ops.QuantizedAdd`:\n\n```python\nimport tensorflow as tf\n\nx = tf.constant([68, 228], shape=[2, 1], dtype=tf.quint8)\ny = tf.constant([], shape=[2, 0], dtype=tf.quint8)\n\nmin_x = tf.constant(10.723421015884028)\nmax_x = tf.constant(15.19578006631113)\nmin_y = tf.constant(-5.539003866682977)\nmax_y = tf.constant(42.18819949559947)\n\ntf.raw_ops.QuantizedAdd(x=x, y=y, min_x=min_x, max_x=max_x, min_y=min_y, max_y=max_y)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f26b3f3418201479c264f2a02000880d8df151c\/tensorflow\/core\/kernels\/quantized_add_op.cc#L289-L295) computes a modulo operation without validating that the divisor is not zero.\n\n```cc\nvoid VectorTensorAddition(const T* vector_data, float min_vector,\n                          float max_vector, int64 vector_num_elements,\n                          const T* tensor_data, float min_tensor,\n                          float max_tensor, int64 tensor_num_elements,\n                          float output_min, float output_max, Toutput* output) {\n  for (int i = 0; i < tensor_num_elements; ++i) {\n    const int64 vector_i = i % vector_num_elements;\n    ...\n  }\n}\n```\n\nSince `vector_num_elements` is [determined based on input shapes](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/6f26b3f3418201479c264f2a02000880d8df151c\/tensorflow\/core\/kernels\/quantized_add_op.cc#L522-L544), a user can trigger scenarios where this quantity is 0.\n\n### Patches\nWe have patched the issue in GitHub commit [744009c9e5cc5d0447f0dc39d055f917e1fd9e16](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/744009c9e5cc5d0447f0dc39d055f917e1fd9e16).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/744009c9e5cc5d0447f0dc39d055f917e1fd9e16",
            "commit_sha":"744009c9e5cc5d0447f0dc39d055f917e1fd9e16",
            "patch":"SINGLE",
            "chain_ord":"['744009c9e5cc5d0447f0dc39d055f917e1fd9e16']",
            "before_first_fix_commit":"{'6f26b3f3418201479c264f2a02000880d8df151c'}",
            "last_fix_commit":"744009c9e5cc5d0447f0dc39d055f917e1fd9e16",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/23\/2021, 19:00:12",
            "message":"Validate work in `QuantizedAdd`, ensure at least one element.\n\nPiperOrigin-RevId: 370127996\nChange-Id: I57c6f3e01afdeada84737820a131590137463855",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/quantized_add_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/744009c9e5cc5d0447f0dc39d055f917e1fd9e16\/tensorflow%2Fcore%2Fkernels%2Fquantized_add_op.cc', 'patch': '@@ -538,6 +538,8 @@ class QuantizedAddOp : public OpKernel {\\n         tensor_min = min_x;\\n         tensor_max = max_x;\\n       }\\n+      OP_REQUIRES(context, vector_num_elements > 0,\\n+                  errors::InvalidArgument(\"Must have some elements to add\"));\\n       VectorTensorAddition<T, Toutput>(\\n           vector_data, vector_min, vector_max, vector_num_elements, tensor_data,\\n           tensor_min, tensor_max, tensor_num_elements, min_z_value, max_z_value,'}}",
            "message_norm":"validate work in `quantizedadd`, ensure at least one element.\n\npiperorigin-revid: 370127996\nchange-id: i57c6f3e01afdeada84737820a131590137463855",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('ensure', 'ACTION', ''), ('370127996', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_add_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 744009c9e5cc5d0447f0dc39d055f917e1fd9e16 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 23 Apr 2021 12:00:12 -0700\nSubject: [PATCH] Validate work in `QuantizedAdd`, ensure at least one element.\n\nPiperOrigin-RevId: 370127996\nChange-Id: I57c6f3e01afdeada84737820a131590137463855\n---\n tensorflow\/core\/kernels\/quantized_add_op.cc | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/quantized_add_op.cc b\/tensorflow\/core\/kernels\/quantized_add_op.cc\nindex 55c69de7d3ea6c..b186f00f15c061 100644\n--- a\/tensorflow\/core\/kernels\/quantized_add_op.cc\n+++ b\/tensorflow\/core\/kernels\/quantized_add_op.cc\n@@ -538,6 +538,8 @@ class QuantizedAddOp : public OpKernel {\n         tensor_min = min_x;\n         tensor_max = max_x;\n       }\n+      OP_REQUIRES(context, vector_num_elements > 0,\n+                  errors::InvalidArgument(\"Must have some elements to add\"));\n       VectorTensorAddition<T, Toutput>(\n           vector_data, vector_min, vector_max, vector_num_elements, tensor_data,\n           tensor_min, tensor_max, tensor_num_elements, min_z_value, max_z_value,"
        },
        {
            "index":694,
            "vuln_id":"GHSA-32j9-6qqm-mq9g",
            "cwe_id":"{'CWE-241', 'CWE-703'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/Venemo\/node-lmdb\/commit\/97760104c0fd311206b88aecd91fa1f59fe2b85a'}",
            "dataset":"osv",
            "summary":"Unhandled case in node-lmdb The package node-lmdb before 0.9.7 is vulnerable to Denial of Service (DoS) when defining a non-invokable `ToString` value, which will cause a crash during type check.",
            "published_date":"2022-03-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/Venemo\/node-lmdb",
            "commit_href":"https:\/\/github.com\/Venemo\/node-lmdb\/commit\/97760104c0fd311206b88aecd91fa1f59fe2b85a",
            "commit_sha":"97760104c0fd311206b88aecd91fa1f59fe2b85a",
            "patch":"SINGLE",
            "chain_ord":"['97760104c0fd311206b88aecd91fa1f59fe2b85a']",
            "before_first_fix_commit":"{'4b659d1734e02e09b45a29ac81f425f610bd14ea'}",
            "last_fix_commit":"97760104c0fd311206b88aecd91fa1f59fe2b85a",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/12\/2022, 14:19:20",
            "message":"Perform argument check for putString",
            "author":"Kris Zyp",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'src\/txn.cpp': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Venemo\/node-lmdb\/raw\/97760104c0fd311206b88aecd91fa1f59fe2b85a\/src%2Ftxn.cpp', 'patch': '@@ -295,6 +295,8 @@ Nan::NAN_METHOD_RETURN_TYPE TxnWrap::putCommon(Nan::NAN_METHOD_ARGS_TYPE info, v\\n }\\n \\n NAN_METHOD(TxnWrap::putString) {\\n+    if (!info[2]->IsString())\\n+        return Nan::ThrowError(\"Value must be a string.\");\\n     return putCommon(info, [](Nan::NAN_METHOD_ARGS_TYPE info, MDB_val &data) -> void {\\n         CustomExternalStringResource::writeTo(Local<String>::Cast(info[2]), &data);\\n     }, [](MDB_val &data) -> void {'}}",
            "message_norm":"perform argument check for putstring",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/txn.cpp'])",
            "num_files":1.0,
            "patch_content":"From 97760104c0fd311206b88aecd91fa1f59fe2b85a Mon Sep 17 00:00:00 2001\nFrom: Kris Zyp <kriszyp@gmail.com>\nDate: Sat, 12 Mar 2022 07:19:20 -0700\nSubject: [PATCH] Perform argument check for putString\n\n---\n src\/txn.cpp | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/src\/txn.cpp b\/src\/txn.cpp\nindex 081f4d949e..59acdffdcc 100644\n--- a\/src\/txn.cpp\n+++ b\/src\/txn.cpp\n@@ -295,6 +295,8 @@ Nan::NAN_METHOD_RETURN_TYPE TxnWrap::putCommon(Nan::NAN_METHOD_ARGS_TYPE info, v\n }\n \n NAN_METHOD(TxnWrap::putString) {\n+    if (!info[2]->IsString())\n+        return Nan::ThrowError(\"Value must be a string.\");\n     return putCommon(info, [](Nan::NAN_METHOD_ARGS_TYPE info, MDB_val &data) -> void {\n         CustomExternalStringResource::writeTo(Local<String>::Cast(info[2]), &data);\n     }, [](MDB_val &data) -> void {"
        },
        {
            "index":213,
            "vuln_id":"GHSA-23fp-fmrv-f5px",
            "cwe_id":"{'CWE-400'}",
            "score":4.9,
            "chain":"{'https:\/\/github.com\/strapi\/strapi\/commit\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362'}",
            "dataset":"osv",
            "summary":"Uncontrolled Resource Consumption in strapi A denial of service exists in strapi v3.0.0-beta.18.3 and earlier that can be abused in the admin console using admin rights can lead to arbitrary restart of the application.",
            "published_date":"2021-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/strapi\/strapi",
            "commit_href":"https:\/\/github.com\/strapi\/strapi\/commit\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362",
            "commit_sha":"c0c191c08f05fe10d7a6b1bf9475c1a651a89362",
            "patch":"SINGLE",
            "chain_ord":"['c0c191c08f05fe10d7a6b1bf9475c1a651a89362']",
            "before_first_fix_commit":"{'7e3f7ee2de9eecd0bc098d7b77940b64f48b3a96'}",
            "last_fix_commit":"c0c191c08f05fe10d7a6b1bf9475c1a651a89362",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/07\/2020, 13:15:16",
            "message":"chore(admin): Improve plugin name validator in install\/uninstall plugin",
            "author":"Alexandre Bodin",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 2, 'total': 15}",
            "files":"{'packages\/strapi-admin\/controllers\/Admin.js': {'additions': 13, 'deletions': 2, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/strapi\/strapi\/raw\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362\/packages%2Fstrapi-admin%2Fcontrollers%2FAdmin.js', 'patch': '@@ -7,6 +7,17 @@ const formatError = error => [\\n   { messages: [{ id: error.id, message: error.message, field: error.field }] },\\n ];\\n \\n+const PLUGIN_NAME_REGEX = \/^[A-Za-z][A-Za-z0-9-_]+$\/;\\n+\\n+\/**\\n+ * Validates a plugin name format\\n+ *\/\\n+const isValidPluginName = plugin => {\\n+  return (\\n+    _.isString(plugin) && !_.isEmpty(plugin) && PLUGIN_NAME_REGEX.test(plugin)\\n+  );\\n+};\\n+\\n \/**\\n  * A set of functions called \"actions\" for `Admin`\\n  *\/\\n@@ -67,7 +78,7 @@ module.exports = {\\n     try {\\n       const { plugin } = ctx.request.body;\\n \\n-      if (!\/^[A-Za-z0-9_-]+$\/.test(plugin)) {\\n+      if (!isValidPluginName(plugin)) {\\n         return ctx.badRequest(\\'Invalid plugin name\\');\\n       }\\n \\n@@ -107,7 +118,7 @@ module.exports = {\\n     try {\\n       const { plugin } = ctx.params;\\n \\n-      if (!\/^[A-Za-z0-9_-]+$\/.test(plugin)) {\\n+      if (!isValidPluginName(plugin)) {\\n         return ctx.badRequest(\\'Invalid plugin name\\');\\n       }'}}",
            "message_norm":"chore(admin): improve plugin name validator in install\/uninstall plugin",
            "language":"it",
            "entities":"[('chore(admin', 'SECWORD', ''), ('improve', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/strapi-admin\/controllers\/Admin.js'])",
            "num_files":1.0,
            "patch_content":"From c0c191c08f05fe10d7a6b1bf9475c1a651a89362 Mon Sep 17 00:00:00 2001\nFrom: Alexandre Bodin <bodin.alex@gmail.com>\nDate: Tue, 7 Jan 2020 14:15:16 +0100\nSubject: [PATCH] chore(admin): Improve plugin name validator in\n install\/uninstall plugin\n\n---\n packages\/strapi-admin\/controllers\/Admin.js | 15 +++++++++++++--\n 1 file changed, 13 insertions(+), 2 deletions(-)\n\ndiff --git a\/packages\/strapi-admin\/controllers\/Admin.js b\/packages\/strapi-admin\/controllers\/Admin.js\nindex d888e95d7a3f..ea5ed8ae12b1 100644\n--- a\/packages\/strapi-admin\/controllers\/Admin.js\n+++ b\/packages\/strapi-admin\/controllers\/Admin.js\n@@ -7,6 +7,17 @@ const formatError = error => [\n   { messages: [{ id: error.id, message: error.message, field: error.field }] },\n ];\n \n+const PLUGIN_NAME_REGEX = \/^[A-Za-z][A-Za-z0-9-_]+$\/;\n+\n+\/**\n+ * Validates a plugin name format\n+ *\/\n+const isValidPluginName = plugin => {\n+  return (\n+    _.isString(plugin) && !_.isEmpty(plugin) && PLUGIN_NAME_REGEX.test(plugin)\n+  );\n+};\n+\n \/**\n  * A set of functions called \"actions\" for `Admin`\n  *\/\n@@ -67,7 +78,7 @@ module.exports = {\n     try {\n       const { plugin } = ctx.request.body;\n \n-      if (!\/^[A-Za-z0-9_-]+$\/.test(plugin)) {\n+      if (!isValidPluginName(plugin)) {\n         return ctx.badRequest('Invalid plugin name');\n       }\n \n@@ -107,7 +118,7 @@ module.exports = {\n     try {\n       const { plugin } = ctx.params;\n \n-      if (!\/^[A-Za-z0-9_-]+$\/.test(plugin)) {\n+      if (!isValidPluginName(plugin)) {\n         return ctx.badRequest('Invalid plugin name');\n       }"
        },
        {
            "index":779,
            "vuln_id":"GHSA-5rqg-jm4f-cqx7",
            "cwe_id":"{'CWE-835'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75', 'https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd', 'https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26'}",
            "dataset":"osv",
            "summary":"Infinite loop causing Denial of Service in colors colors is a library for including colored text in node.js consoles. Between 07 and 09 January 2022, colors versions 1.4.1, 1.4.2, and 1.4.44-liberty-2 were published including malicious code that caused a Denial of Service due to an infinite loop. Software dependent on these versions experienced the printing of randomized characters to console and an infinite loop resulting in unbound system resource consumption.\n\nUsers of colors relying on these specific versions should downgrade to version 1.4.0.",
            "published_date":"2022-01-10",
            "chain_len":3,
            "project":"https:\/\/github.com\/Marak\/colors.js",
            "commit_href":"https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26",
            "commit_sha":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26",
            "patch":"MULTI",
            "chain_ord":"['137c6dae3339e97f4bbc838c221803c363b0a9fd', '5d2d242f656103ac38086d6b26433a09f1c38c75', '6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26']",
            "before_first_fix_commit":"{'5d2d242f656103ac38086d6b26433a09f1c38c75'}",
            "last_fix_commit":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26",
            "chain_ord_pos":3.0,
            "commit_datetime":"01\/08\/2022, 04:22:34",
            "message":"Bump to `v1.4.44-liberty-2`",
            "author":"Marak",
            "comments":"{'com_1': {'author': 'belauzas', 'datetime': '01\/08\/2022, 09:12:51', 'body': 'What is this? Why console is trashed with all this random shit?'}, 'com_2': {'author': 'legalsec', 'datetime': '01\/08\/2022, 13:20:11', 'body': '> \\r\\n\\r\\n@belauzas .... See here: https:\/\/news.ycombinator.com\/item?id=25032105\\r\\nand here: https:\/\/github.com\/Marak\/colors.js\/commit\/074a0f8ed0c31c35d13d28632bd8a049ff136fb6\\r\\nMillions of downloads a week... not a penny to show for it.'}, 'com_3': {'author': 'atridadl', 'datetime': '01\/09\/2022, 21:53:33', 'body': 'What a child.'}, 'com_4': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 01:18:25', 'body': 'Everyone should contribute with $1 to the author. He will get the money he deserves.\\r\\nI am not using `colors.js`, but I will be happy to contribute'}, 'com_5': {'author': 'ImJustChew', 'datetime': '01\/10\/2022, 04:06:49', 'body': 'irresponsible, wasted my time.'}, 'com_6': {'author': 'add1609', 'datetime': '01\/10\/2022, 04:08:27', 'body': '@Marak you 100% deserve to get paid for your work. Please provide someway to send you money.'}, 'com_7': {'author': 'BARMPlus', 'datetime': '01\/10\/2022, 06:33:52', 'body': 'What really happened with Aaron Swartz?'}, 'com_8': {'author': 'connor-sarah', 'datetime': '01\/10\/2022, 06:35:44', 'body': 'freeloaders'}, 'com_9': {'author': 'dmitrykurmanov', 'datetime': '01\/10\/2022, 07:52:07', 'body': \"> Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n\\r\\nand let's pay to terrorists too because that is the same meaning I think\"}, 'com_10': {'author': 'ImJustChew', 'datetime': '01\/10\/2022, 08:25:47', 'body': \"Paying doesn't solve the problem. Wait till more developers expect people to pay for their open-source code forcefully and see how everything slowly reverts back to closed-source.\"}, 'com_11': {'author': 'piotrtomiak', 'datetime': '01\/10\/2022, 08:32:28', 'body': \"Just don't use MIT license, if you don't want some corporation to reuse your work and get money for it. Try some other alternatives, which will require consumer to open source their code as well, or a license without permission for commercial use. You can change license at any moment - if I recall that correctly Facebook did something like that with React. Pushing a broken version to NPM is simply wrong.\"}, 'com_12': {'author': 'Fried-Chicken', 'datetime': '01\/10\/2022, 10:03:13', 'body': 'What happened to `1.4.44-liberty-1`?'}, 'com_13': {'author': 'mirzap', 'datetime': '01\/10\/2022, 10:47:03', 'body': 'Why did you open source it if you want to get paid for it? Why did you use MIT license? Tantrum that you did does not help OSS developers. This is simply evil.'}, 'com_14': {'author': 'sergeych', 'datetime': '01\/10\/2022, 11:01:46', 'body': 'When one is publishing something as a free software the LICENSE is supplied which grants everybody a RIGHT to use your code without paying \"a penny\". Any sort of open source license does it one way or another. It protects users. This means, once something is published as free software, this version will remain free and usable to whoever have a copy even if the author changes ones mind to require a payment for it. So, any package or source repository as a _user_ of this free software retains a right to keep publishing it according to the open source license that was (if it was) supplied with original publication. That is why open source still uses licenses. We could not have free software if any author or the heirs could reclaim or make unusable the free software. What was once a gift to the society, should remain a gift. There the gift back is not fair at all, neither is requiring payment for a gift. Too bad, actually, that it is not crystal clear to anybody.'}, 'com_15': {'author': 'Nazehs', 'datetime': '01\/10\/2022, 12:29:51', 'body': \"at least he has made a name for himself at least... \ud83d\ude06 \ud83d\ude06 and some of us have used his code but we can't admit or say thanks to him... I am not advocating this but it's good we compensate ourselves sometimes to keep maintaining the source code because all of us value our time so do the authors too... $1 dollar will mean a lot to them and encourage them to work on the project... I believe once the author of Open source releases the codebase they have done all they could but if we will be expecting them to fix issues or add features while we are making our money out of it does it make sense at all? Many of us can't even open-source our code....\\r\\nShalom\"}, 'com_16': {'author': 'ddzy', 'datetime': '01\/10\/2022, 12:31:53', 'body': 'It wasted my whole day looking for the problem of garbled code'}, 'com_17': {'author': 'Nazehs', 'datetime': '01\/10\/2022, 12:52:25', 'body': '> \\r\\n\\r\\nyeah i know a lot of us will waste hours trying to figure out the issue you know'}, 'com_18': {'author': 'AAGene', 'datetime': '01\/10\/2022, 13:20:27', 'body': 'To those saying he should release under another license:\\r\\n\\r\\n![image](https:\/\/user-images.githubusercontent.com\/48164468\/148772692-0f4c911b-f277-44f4-8034-16c4b38b0e88.png)'}, 'com_19': {'author': 'ts-3156', 'datetime': '01\/10\/2022, 13:39:11', 'body': 'I just paid @Marak 100$. If you have a time to have a futile dispute, use that time to help people in need.'}, 'com_20': {'author': 'efriandika', 'datetime': '01\/10\/2022, 14:17:07', 'body': 'I am wondering if this is the same people?\\r\\nhttps:\/\/twitter.com\/marak\/status\/1320465599319990272\\r\\nhttps:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/'}, 'com_21': {'author': 'timup', 'datetime': '01\/10\/2022, 14:20:51', 'body': '> I am wondering if this is the same people? https:\/\/twitter.com\/marak\/status\/1320465599319990272 https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n\\r\\nThat is an unfortunate coincidence.'}, 'com_22': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 14:31:46', 'body': \"> > Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n> \\r\\n> and let's pay to terrorists too because that is the same meaning I think\\r\\n\\r\\nWhat are you talking about? This is incomparable. \\r\\nThis is about helping someone from the community, our side, someone who might be in need, we don't know.\\r\\nToday it is him, maybe tomorrow it will be you.\"}, 'com_23': {'author': 'justblender', 'datetime': '01\/10\/2022, 14:37:11', 'body': '> I am wondering if this is the same people?\\r\\n> https:\/\/twitter.com\/marak\/status\/1320465599319990272\\r\\n> https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n\\r\\nYes, this is him.'}, 'com_24': {'author': 'degr', 'datetime': '01\/10\/2022, 14:47:19', 'body': 'post in epic thread'}, 'com_25': {'author': 'rpv-tomsk', 'datetime': '01\/10\/2022, 15:16:04', 'body': \"> It wasted my whole day looking for the problem of garbled code\\r\\n\\r\\nIt's just a time came to pay your bill for using this library.\\r\\nBefore that, you saved your time by using it.\"}, 'com_26': {'author': 'ademidun', 'datetime': '01\/10\/2022, 15:31:42', 'body': 'Open source software is a [public good](https:\/\/en.wikipedia.org\/wiki\/Public_good_(economics)). So the paradox which everyone asks themselves is \"if everyone can benefit from it for free why should I have to pay?\".\\r\\n\\r\\nBut conversely, if people are benefitting from something you\\'ve created then it\\'s only fair for the person who created this value to get some financial compensation commensurate to the value they\\'ve created.\\r\\n\\r\\nThe author of this package has chosen a method to get some compensation for their work that has resulted in a lose-lose situation where neither the author nor the users are happy.\\r\\n\\r\\nBut it doesn\\'t have to be this way.\\r\\n\\r\\nThe [Opensource guide](https:\/\/opensource.guide\/) has some useful tips on [Getting Paid for Open Source Work](https:\/\/opensource.guide\/getting-paid\/). For people interested in web3 and crypto, [Gitcoin](https:\/\/gitcoin.co\/) is platform where you can [get paid to work on open source software](https:\/\/gitcoin.co\/grants\/).\\r\\n\\r\\nHopefully, by becoming more informed on ways to make money from open source software we can avoid situations like this in the future and create a fairer system that works for everyone.'}, 'com_27': {'author': 'Veetaha', 'datetime': '01\/10\/2022, 15:50:23', 'body': 'Yo, you should consider rewriting it in Rust =)'}, 'com_28': {'author': 'G2G2G2G', 'datetime': '01\/10\/2022, 16:47:45', 'body': 'You are a hero, anyone who uses NPM deserves worse than this but at least you make them suffer.'}, 'com_29': {'author': 'Abion47', 'datetime': '01\/10\/2022, 17:07:04', 'body': \"This package hadn't been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n\\r\\nI'm not buying the moral high road, either. Fortune 500 companies have hundreds of developers and rigorous upgrade paths before any new production build sees the light of day, and this infantile infinite loop of zalgo text would get spotted immediately and fixed. Your little maneuver isn't going to cost them a single dime. All you're doing is being a pain in the ass for smaller companies and independent developers who don't have the luxury of time and resources to be able to put up these kinds of safeguards automatically.\\r\\n\\r\\nI'm fully on board with active contributors to the open-source community getting fair compensation, but this just screams trying to snag a quick and easy buck.\"}, 'com_30': {'author': 'rcollette', 'datetime': '01\/10\/2022, 17:23:05', 'body': 'If someone wants money for their time, either start a company or work for one.   This behavior is like a childish prank of putting a dollar on the sidewalk on a fishing line and pulling it away.'}, 'com_31': {'author': 'G2G2G2G', 'datetime': '01\/10\/2022, 17:32:27', 'body': '> If someone wants money for their time, either start a company or work for one. This behavior is like a childish prank of putting a dollar on the sidewalk on a fishing line and pulling it away.\\r\\n\\r\\n@rcollette  AND YOU FELL FOR IT LMAO\\r\\n\\r\\n\\r\\n\\r\\n\u2591\u2591\u2591\u2591\u2588\u2592\u2592\u2584\u2580\u2580\u2580\u2580\u2580\u2584\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2580\u2580\u2580\u2580\u2580\u2580\u2584\\r\\n\u2591\u2591\u2584\u2580\u2592\u2592\u2592\u2584\u2588\u2588\u2588\u2588\u2588\u2584\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2584\u2588\u2588\u2588\u2588\u2588\u2584\u2592\u2588\\r\\n\u2591\u2588\u2592\u2592\u2592\u2592\u2590\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u258c\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2590\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u258c\u2592\u2588\\r\\n\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2588\u2588\u2588\u2588\u2588\u2580\u2592\u2592\u2588\u2592\u2591\u2584\u2592\u2584\u2588\u2592\u2592\u2580\u2588\u2588\u2588\u2588\u2588\u2580\u2592\u2592\u2592\u2588\\r\\n\u2592\u2592\u2590\u2592\u2592\u2592\u2591\u2591\u2591\u2591\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2591\u2592\u2592\u2580\u2592\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\\r\\n\u2592\u258c\u2592\u2592\u2592\u2591\u2591\u2591\u2592\u2592\u2592\u2592\u2592\u2584\u2580\u2592\u2591\u2592\u2584\u2588\u2584\u2588\u2584\u2592\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\\r\\n\u2592\u258c\u2592\u2592\u2592\u2592\u2591\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\u2592\u2592\u2588\u258c\u258c\u258c\u258c\u258c\u2588\u2584\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\\r\\n\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\u2592\u2592\u2580\u2588\u2588\u2588\u2580\u2592\u258c\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\\r\\n\u2580\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\\r\\n\u2580\u2584\u2592\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2584\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2580\\r\\n\u2592\u2592\u2580\u2584\u2592\u2580\u2584\u2580\u2580\u2580\u2584\u2580\u2580\u2580\u2580\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2580\\r\\n\u2592\u2592\u2592\u2592\u2580\u2584\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\\r\\n\u2591\u2584\u2584\u2584\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2584\u2584\u2591\u2584\u2584\u2591\u2591\u2591\u2584\u2584\u2584\u2591\u2591\u2591\u2584\u2584\u2584\\r\\n\u2588\u2584\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2588\u2591\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2588\u2584\u2584\u2584\u2588\u2591\u2588\u2591\u2591\u2591\u2588\\r\\n\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2588\\r\\n\u2580\u2591\u2591\u2591\u2580\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2580\u2591\u2580\u2584\u2584\u2584\u2580'}, 'com_32': {'author': 'rcollette', 'datetime': '01\/10\/2022, 17:38:12', 'body': '@G2G2G2G -Nope.  I pin package versions.\\r\\nhttps:\/\/github.com\/winstonjs\/winston\/issues\/1995#event-5867271529'}, 'com_33': {'author': 'TechStudent10', 'datetime': '01\/10\/2022, 20:12:30', 'body': '> > I am wondering if this is the same people? https:\/\/twitter.com\/marak\/status\/1320465599319990272 https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n> \\r\\n> That is an unfortunate coincidence.\\r\\n\\r\\noh crap'}, 'com_34': {'author': 'skyzyx', 'datetime': '01\/10\/2022, 20:53:51', 'body': 'Have we learned nothing from left-pad?\\r\\n\\r\\n1. Use a package cache.\\r\\n2. Pin your versions.'}, 'com_35': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 22:24:38', 'body': \"> Yo, you should consider rewriting it in Rust =)\\r\\n\\r\\nLet's do it :D https:\/\/github.com\/zmaktouf\/colors.rs\"}, 'com_36': {'author': 'barnaba', 'datetime': '01\/11\/2022, 02:07:06', 'body': \"> This package hadn't been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n\\r\\nBecause https:\/\/web.archive.org\/web\/20210628030444\/https:\/\/marak.com\/blog\/2021-04-25-monetizing-open-source-is-problematic\\r\\n\\r\\nTLDR the dev tried to monetize faker via normal means available to open source projects, but corporations don't play nice.\\r\\n\\r\\nMore important question is: This package hadn't been updated since 2019 before this. Why not pin it? Are you expecting new colors to be invented?\"}, 'com_37': {'author': 'yvesll', 'datetime': '01\/11\/2022, 05:41:43', 'body': 'Respect'}, 'com_38': {'author': 'Chew', 'datetime': '01\/11\/2022, 06:12:28', 'body': '> What happened to `1.4.44-liberty-1`?\\r\\n\\r\\nI was hungry, my bad'}, 'com_39': {'author': 'prasannamestha', 'datetime': '01\/11\/2022, 07:36:56', 'body': 'Why no sell a commercial license to this library via [privjs.com](https:\/\/privjs.com) ?'}, 'com_40': {'author': 'artsiom-aliakseichyk', 'datetime': '01\/11\/2022, 08:40:07', 'body': '> \u041c\u044b \u043f\u043e\u043d\u044f\u043b\u0438 \u043e\u0434\u043d\u043e, \u0447\u0442\u043e \u043e\u043d \u043c\u0443\u0434\u0430\u043a \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0438 \u043e\u0442\u043a\u0430\u0442\u0438\u043c \u0432\u0435\u0440\u0441\u0438\u044e \u0438\u043b\u0438 \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0443 \u043e\u0442 \u043c\u0435\u043d\u0435\u0435 \u043e\u0442\u0431\u0438\u0442\u044b\u0445 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432, \u0435\u0441\u043b\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0443 \u043d\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438 \u043b\u0430\u0439\u043a \u0438\u043b\u0438 \u043d\u0435 \u0437\u0430\u043f\u043b\u0430\u0442\u0438\u043b\u0438 \u0437\u0430 \u043b\u0438\u0431\u0443 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043e\u043d \u0432\u044b\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435, \u043d\u0430 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e\u0439 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435, \u043f\u043e\u0434 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e\u0439 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0435\u0439, \u0442\u043e \u0443 \u043d\u0435\u0433\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u0431\u0430\u0448\u043a\u043e\u0439\\r\\n\\r\\nI understand that it is hard to read licenses nowadays, so I will copypaste one of the interesting part\\r\\n\\r\\n\\'THE SOFTWARE IS PROVIDED **\"AS IS\"**, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\nTHE SOFTWARE.\\''}, 'com_41': {'author': 'kounelios13', 'datetime': '01\/11\/2022, 10:03:31', 'body': '> You are a hero, anyone who uses NPM deserves worse than this but at least you make them suffer.\\r\\n\\r\\nWhy anyone who uses NPM deserves worse than that? Care to explain ?'}, 'com_42': {'author': 'arinzejustin', 'datetime': '01\/11\/2022, 14:16:02', 'body': 'I spend through out yesterday and today looking for the issue'}, 'com_43': {'author': 'Abion47', 'datetime': '01\/11\/2022, 14:46:26', 'body': '> > This package hadn\\'t been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n> \\r\\n> Because https:\/\/web.archive.org\/web\/20210628030444\/https:\/\/marak.com\/blog\/2021-04-25-monetizing-open-source-is-problematic\\r\\n> \\r\\n> TLDR the dev tried to monetize faker via normal means available to open source projects, but corporations don\\'t play nice.\\r\\n> \\r\\n> More important question is: This package hadn\\'t been updated since 2019 before this. Why not pin it? Are you expecting new colors to be invented?\\r\\n\\r\\nThat article is referring to Faker where I was referring to Colors. Since you bring it up, however, the amount of recent work on Faker is even less - a bit of work 10-12 months ago, and before that, complete radio silence since 5 years ago. It sucks that the author\\'s attempts to sell faker cloud were met with getting ghosted, but what did he expect? He released a paid service that did little more than the existing package already did for free. He was competing against himself, and he was doing it poorly. And sure, maybe it was poor form on Retool\\'s part to copy FakerCloud using Faker, but at the same time, they were effectively paying him $500 a month which they were under no legal obligation to pay. The only thing his tantrum could\\'ve possibly accomplished was that they would continue to do exactly what they were doing but they would do it without paying him.\\r\\n\\r\\nAn interesting note on that last part, though. I don\\'t know about you, but getting two grand for work I did four years ago seems like a good deal. Not only this, but they were his _second_ biggest donors, meaning that that was less than half of the donation amount he had made from the Faker package alone as of that article\\'s publication date. And now he\\'s threatening to not do any more work when he already hasn\\'t done any work on the Colors or Faker packages in nearly a year and no significant work in nearly three, and he\\'s demanding payment for packages he released under the MIT license years ago _and which he has already received at least $4000 for_. Not to mention I can only imagine how much money he has received from proverbial white knights ever since this whole drama began. (Someone in this thread alone donated $100.)\\r\\n\\r\\nMy takeaway from that article is that Marak bit the hand that fed him. It sounds like he already burned the Retool bridge which was a poor move considering they were his second-biggest donors, and I doubt anyone else who was a repeat donor is likely to continue. He proved nothing with this little stunt - no large company will be hurt by this despite his claims, and everyone else just has to pin their versions and wait until someone else forks his code to continue development and maintenance (not that much maintenance needs to be done as the packages seem pretty stable).\\r\\n\\r\\nHe could\\'ve pinned it. He could\\'ve archived it. He could\\'ve just posted a message saying \"I can\\'t afford to maintain this anymore so it will just sit here in its current state until someone else offers to take ownership\". He could\\'ve done a lot of things. But instead, he chose the nuclear option of holding the package hostage (as ineffective as it is) while causing grief to other developers like him just trying to do their jobs. This doesn\\'t strike me as a man looking to get fair recompense for services rendered. This strikes me as a man desperate for money and looking to get it in any way he can by pulling on some heartstrings. Well, congrats, Marak. Mission accomplished. You may have tanked your career and your standing in the open-source community in the process, but I hope it was worth it in the end.'}, 'com_44': {'author': 'Awilum', 'datetime': '01\/11\/2022, 17:11:07', 'body': '> What is this? Why console is trashed with all this random shit?\\r\\n\\r\\nThis is Javascript World!'}, 'com_45': {'author': 'zunino', 'datetime': '01\/11\/2022, 22:26:40', 'body': \"If you were looking for sympathy, you've really messed up. Your attitude is not only immature, but irresponsible and very unprofessional. There are other ways one can turn an open-source project into a business, but it's not by acting out like this. You don't belong in OSS.\"}, 'com_46': {'author': 'rpv-tomsk', 'datetime': '01\/12\/2022, 04:43:33', 'body': \"@zunino \\r\\n\\r\\n> If you were looking for sympathy, you've really messed up. \\r\\n\\r\\nAgreed. \\r\\nBut:\\r\\n\\r\\n> There are other ways one can turn an open-source project into a business...\\r\\n\\r\\nYou have many OSS project already converted to business?\\r\\nCan you show your results, our you can only speak slogans and loud words?\\r\\n\\r\\nIn my view, there is two kinds of people: who can create software and who can create business. \\r\\nAnd not each developer belongs to both sets simultaneously, these are exceptions, not typical case (and we see this here).\"}, 'com_47': {'author': 'ItzSwirlz', 'datetime': '01\/12\/2022, 16:21:32', 'body': 'man cant change his license to stop it from being used'}, 'com_48': {'author': 'kctdfh', 'datetime': '01\/13\/2022, 16:33:36', 'body': \"> > You have many OSS project already converted to business?\\r\\n> \\r\\n> Not so many, but there are a few - rather big - projects that do converted and are doing well now.\\r\\n> \\r\\n> > Can you show your results,\\r\\n> \\r\\n> Discourse, GitLab, NodeBB, Docker. Just from back of my head; sure there are more.\\r\\n\\r\\nAll of the examples you mention sell convenience, not software. \\r\\n\\r\\nFor some software solutions, the user may want to have the luxuries of open-source without having to fully commit full-time resources to the management and maintenance of those people\/infrastructures. Marak could have never been RedHat because Faker\/Colors are set-it-and-forget-it libraries. For these libraries, most of the work happens prior to release and the user just plugs it into their code. There's near-zero opportunities to monetize them by offering convenience. Mattermost for instance has a paid version that's hosted and has extra features but what can Faker\/Colors do? Invent exclusive colors? Implement SSO? Generate entire movie scripts?\\r\\n\\r\\nMaybe he could have started an API for no-code tools but then again, no-code devs are used to extremely generous free-tiers on APIs so it probably won't cover the cost of running a reliable infrastructure to handle usage bursts, etc.\"}, 'com_49': {'author': 'zunino', 'datetime': '01\/13\/2022, 19:20:25', 'body': \"@kctdfh I see the distinction you are making but, really, nothing justifies the author's rogue actions. I'm sure he would be in a better position if, say, he had decided to start a new, commercial endeavour, having the success of his open-source projects under his wing. The popularity of open-source work can shine on a CV or business proposal.\"}, 'com_50': {'author': 'kctdfh', 'datetime': '01\/13\/2022, 20:05:06', 'body': '@cronlabspl ?? Have not seen a start-up call themselves \"fully-managed [insert open-source tech]\"?? MongoDB Atlas is a money machine because people like using MongoDB without having to fine-tune their own provisioning, scaling, sharding, replication, security, or correctness. Who can afford reading MongoDB documentations, risk making a rookie mistake, spend hours every week troubleshooting, and basically manage people who manage the code that manages their software? They\\'ll just pay MongoDB to abstract the boring stuff away. It\\'s buying convenience.\\r\\n\\r\\n@zunino Yeah for sure not the best way to handle it and I don\\'t agree with it but I somewhat understand it. I see it like this (conjecture):\\r\\n- Dev isn\\'t doing well and feels unappreciated \/ feels they are being wronged - maybe even for an unrelated reason.\\r\\n- NPM\\'s weekly download stats says they\\'re appreciated\/valued\/successful but that number isn\\'t amounting to anything in their day-to-day. They know that this situation isn\\'t unique to them in the FOSS community.\\r\\n- Nuking their popular packages is certainly a good way to remind people that they depend on devs they\\'ve never heard of who may not be doing well. Not an effective form of protest because it ruins their reputation with zero sustained effect but it did rejuvenate the conversation.\\r\\n\\r\\nI wish him luck and hope he\\'s doing well'}, 'com_51': {'author': 'quenbyako', 'datetime': '01\/13\/2022, 21:08:59', 'body': '@glebfeklistov \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0437\u043e\u0432\u0435\u0442 \u0430\u0432\u0442\u043e\u0440\u0430 \u0430\u0441\u0445\u043e\u043b\u043e\u043c, \u0437\u0430 \u0442\u043e, \u0447\u0442\u043e \u043d\u0430 \u0435\u0433\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u043d\u043e\u0441\u0442\u0438 \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f, \u0445\u043e\u0442\u044f \u043e\u043d \u0441\u0434\u0435\u043b\u0430\u043b \u043b\u0438\u0431\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u043d\u043e\u0434\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u043c\u044c\u044e\u043d\u0438\u0442\u0438.\\r\\n\\r\\n\u0413\u043b\u0435\u0431, \u043a\u0440\u0430\u0441\u0430\u0432\u0447\u0438\u043a, \u043b\u0443\u0447\u0448\u0438\u0439 \ud83d\udc4d\ud83d\udcaa \u0422\u0430\u043a \u0438\u0445, \u0434\u043e\u043b\u0431\u043e\u0435\u0431\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043e\u043c\u043c\u0438\u0442\u044f\u0442 \u0432 \u043e\u043f\u0435\u043d\u0441\u0443\u0440\u0441 \u0437\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0442\u0430\u043a, \u043f\u043e\u0448\u043b\u0438 \u043e\u043d\u0438, \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u043c\u0443\u0436\u0438\u043a\u0438 \u043a\u043e\u043c\u043c\u0438\u0442\u044f\u0442 \u0440\u0430\u0437 \u0432 \u043f\u043e\u043b\u0433\u043e\u0434\u0430 \u0438 \u043e\u0431\u0437\u044b\u0432\u0430\u044e\u0442 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u043c\u0443\u0434\u0430\u043a\u0430\u043c\u0438. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e! \ud83d\udc46'}, 'com_52': {'author': 'Lun3th', 'datetime': '01\/13\/2022, 23:42:40', 'body': \"So basically... he's own the code so he can do this thing. If you are a big company please support open source projects with MONEY. And also check a code change before you pull it blatantly. :D \\r\\n\\r\\nBtw. If I find his paypal I will donate him with 2-3 dollars because that was a big move :D\"}, 'com_53': {'author': 'hello-smile6', 'datetime': '01\/14\/2022, 04:25:40', 'body': \"If anyone is in charge of a large corporation's servers and wants to make a splash, just hit production servers with https:\/\/gist.github.com\/hello-smile6\/fa92b539fce2339440bdd75e087cae8b\"}, 'com_54': {'author': 'okyanusoz', 'datetime': '01\/14\/2022, 15:15:10', 'body': 'stop'}, 'com_55': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:20:45', 'body': 'What really happened with Aaron Swartz?'}, 'com_56': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:32:09', 'body': '> > What really happened with Aaron Swartz?\\r\\n> \\r\\n> No idea. [this](https:\/\/en.wikipedia.org\/wiki\/Aaron_Swartz) may help\\r\\n\\r\\ntwierdzenie Pitagorasa\\r\\nnie wierz w samob\u00f3jstwo Swartza'}, 'com_57': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:42:40', 'body': \"> > nie wierz w samob\u00f3jstwo Swartza\\r\\n> \\r\\n> Nigdzie nie napisa\u0142em \u017ce wierz\u0119 w to. Poda\u0142em tylko linka do artyku\u0142u.\\r\\n\\r\\nchill, chill, I just parafrased a one sentence from polish network, i don't judge whether you believe it or not\\r\\n\\r\\nbtw i read this article already\"}, 'com_58': {'author': 'xpswilllive', 'datetime': '01\/18\/2022, 06:17:41', 'body': 'u are fine'}, 'com_59': {'author': 'dmitrykurmanov', 'datetime': '01\/19\/2022, 10:25:52', 'body': \"> > > Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n> > \\r\\n> > \\r\\n> > and let's pay to terrorists too because that is the same meaning I think\\r\\n> \\r\\n> What are you talking about? This is incomparable. This is about helping someone from the community, our side, someone who might be in need, we don't know. Today it is him, maybe tomorrow it will be you.\\r\\n\\r\\nhelp him because he is asking for help is ok for me. I don't hate him personally or anything like that. But I think that it should be asking not demanding\/terrorizing. I wish him to be happy. I don't judge him. I judge his act and the situation. And it is a huge difference for me\"}, 'com_60': {'author': 'teror4uks', 'datetime': '01\/21\/2022, 13:40:37', 'body': '@quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.'}, 'com_61': {'author': 'okyanusoz', 'datetime': '01\/22\/2022, 06:22:30', 'body': '@cronlabspl Marak should stop this money disaster, not this discussion'}, 'com_62': {'author': 'hello-smile6', 'datetime': '01\/22\/2022, 06:24:15', 'body': '> @cronlabspl Marak should stop this money disaster, not this discussion\\r\\n\\r\\nHere!\\r\\n![img](https:\/\/assets.scratch.mit.edu\/045e55e80b60ddd40d5a1a2a1bb3403a.png)'}, 'com_63': {'author': 'WhiteNervosa', 'datetime': '01\/23\/2022, 07:38:27', 'body': \"Four months ago, Marak [dropped over $10,000 on NFTs](https:\/\/opensea.io\/Marak?search[chains][0]=ETHEREUM&search[eventTypes][0]=AUCTION_SUCCESSFUL&tab=activity). No matter your opinion of NFTs, if you have that amount of money as disposable income then you're doing alright.\\r\\n\\r\\nHe could have just archived this if it was the feeling that he was giving labor for nothing in return or even tried the [sponsor feature](https:\/\/github.com\/sponsors), earlier. Earlier because they [currently have 47 sponsors](https:\/\/github.com\/sponsors\/Marak#sponsors).\\r\\n\\r\\nThis is not about money. Worse even, what do those 47 people now think about **sponsoring to support others?**\\r\\n\\r\\nShort sighted, misguided, and harmful. _Bravo_ \ud83c\udf89\"}, 'com_64': {'author': 'G2G2G2G', 'datetime': '01\/23\/2022, 09:33:54', 'body': '@hello-smile6 what does \"syeal your data\" mean?'}, 'com_65': {'author': 'nacknime-official', 'datetime': '01\/23\/2022, 09:46:25', 'body': '@teror4uks \u0430 \u0442\u0430\u043c \u0447\u0442\u043e-\u0442\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u0440\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e? \u043f\u0443\u0441\u0442\u044c \u0434\u0435\u043b\u0430\u0435\u0442 \u0441 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u043c \u0447\u0442\u043e \u0445\u043e\u0447\u0435\u0442, \u043e\u043d \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d'}, 'com_66': {'author': 'teror4uks', 'datetime': '01\/23\/2022, 13:49:51', 'body': '@nacknime-official  \u0435\u0449\u0451 \u043a\u0430\u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e, \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043a\u0440\u0430\u0448\u0438\u0442\u0441\u044f \u0438 \u043f\u043e\u0442\u043e\u043c \u0435\u0433\u043e \u0437\u0430\u0440\u0435\u043b\u0438\u0437\u0438\u0442\u044c \u0438 \u0435\u0441\u0442\u044c \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e.'}, 'com_67': {'author': 'nacknime-official', 'datetime': '01\/23\/2022, 16:55:02', 'body': '@teror4uks \u0442\u043a\u043d\u0438 \u043d\u043e\u0441\u043e\u043c, \u0447\u0442\u043e \u0442\u0430\u043c \u0442\u0430\u043a\u043e\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e'}, 'com_68': {'author': 'hello-smile6', 'datetime': '01\/23\/2022, 18:15:10', 'body': '> @hello-smile6 what does \"syeal your data\" mean?\\r\\n\\r\\nNot my art, ask the creator.'}, 'com_69': {'author': 'teror4uks', 'datetime': '01\/23\/2022, 19:52:34', 'body': '@nacknime-official  https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75'}, 'com_70': {'author': 'nacknime-official', 'datetime': '01\/24\/2022, 05:43:12', 'body': '@teror4uks \u0438\u043c\u0435\u044e \u0432\u0432\u0438\u0434\u0443 \u0442\u043a\u043d\u0438 \u043d\u043e\u0441\u043e\u043c \u0432 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e, \u0433\u0434\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u0440\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e'}, 'com_71': {'author': 'teror4uks', 'datetime': '01\/24\/2022, 09:30:35', 'body': '@nacknime-official \u043b\u043e\u043b, \u043d\u0443 \u0441 \u0442\u043e\u0431\u043e\u0439 \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0440\u0430\u0437\u0433\u043e\u0432\u0430\u0440\u0438\u0432\u0430\u0442\u044c \u0435\u0441\u043b\u0438 \u0442\u044b \u043d\u0435 \u0432\u0438\u0434\u0438\u0448\u044c \u0442\u0443\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0440\u0430\u0434\u0443\u0435\u0442 \u0447\u0442\u043e \"\u043f\u0440\u0430\u0432\u0434\u043e\u0440\u0443\u0431\u044b\" \u0432\u0440\u043e\u0434\u0435 \u0442\u0435\u0431\u044f \u0437\u0434\u0435\u0441\u044c \u0432 \u043c\u0435\u043d\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435, \u0438 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u043b\u044e\u0434\u0438 \u043f\u043e\u043d\u0438\u043c\u0430\u044e\u0442 \u0447\u0442\u043e \u0442\u0430\u043a \u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043d\u0435 \u043f\u0440\u0438\u043b\u0438\u0447\u043d\u043e \u0432 \u0446\u0438\u0432\u0438\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0435.'}, 'com_72': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 10:04:34', 'body': '@teror4uks \u0442\u044b, \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435, \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u043e\u043d\u044f\u043b \u0441\u0443\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0439. \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f - \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0430\u0432\u0442\u043e\u0440 \u0441\u043e\u0444\u0442\u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u0441\u0432\u043e\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043b\u044e\u0434\u044c\u043c\u0438, \u0438 \u043b\u044e\u0431\u043e\u0439, \u043a\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u044d\u0442\u0443 \u0440\u0430\u0431\u043e\u0442\u0443, \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u044d\u0442\u0438\u043c\u0438 \u0441\u0430\u043c\u044b\u043c\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438. \u0410 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u044d\u0442\u0438\u0445 \u0441\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0448\u044c \u044d\u0442\u043e\u0442 \u0441\u043e\u0444\u0442, \u0430\u0432\u0442\u043e\u0440 \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0441 \u0441\u0435\u0431\u044f \u043b\u044e\u0431\u0443\u044e \u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0432\u0440\u0435\u0434, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043c\u043e\u0436\u0435\u0442 \u0442\u0435\u0431\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u0438\u0442\u044c. \u0422\u0430\u043a \u0447\u0442\u043e \u0441 \u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u043c\u0443 \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u0438 \u043c\u043e\u0436\u0435\u0442 \u043a\u043e\u043c\u0438\u0442\u0438\u0442\u044c \u0432 \u0441\u0432\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u043c\u0443 \u0437\u0430\u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u0431\u0443\u0434\u044c \u0442\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0438\u043b\u0438 \u043d\u0435 \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0442\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u0444\u0442\u0430.'}, 'com_73': {'author': 'dmitrykurmanov', 'datetime': '01\/26\/2022, 10:17:20', 'body': '> @teror4uks \u0442\u044b, \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435, \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u043e\u043d\u044f\u043b \u0441\u0443\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0439. \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f - \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0430\u0432\u0442\u043e\u0440 \u0441\u043e\u0444\u0442\u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u0441\u0432\u043e\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043b\u044e\u0434\u044c\u043c\u0438, \u0438 \u043b\u044e\u0431\u043e\u0439, \u043a\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u044d\u0442\u0443 \u0440\u0430\u0431\u043e\u0442\u0443, \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u044d\u0442\u0438\u043c\u0438 \u0441\u0430\u043c\u044b\u043c\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438. \u0410 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u044d\u0442\u0438\u0445 \u0441\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0448\u044c \u044d\u0442\u043e\u0442 \u0441\u043e\u0444\u0442, \u0430\u0432\u0442\u043e\u0440 \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0441 \u0441\u0435\u0431\u044f \u043b\u044e\u0431\u0443\u044e \u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0432\u0440\u0435\u0434, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043c\u043e\u0436\u0435\u0442 \u0442\u0435\u0431\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u0438\u0442\u044c. \u0422\u0430\u043a \u0447\u0442\u043e \u0441 \u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u043c\u0443 \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u0438 \u043c\u043e\u0436\u0435\u0442 \u043a\u043e\u043c\u0438\u0442\u0438\u0442\u044c \u0432 \u0441\u0432\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u043c\u0443 \u0437\u0430\u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u0431\u0443\u0434\u044c \u0442\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0438\u043b\u0438 \u043d\u0435 \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0442\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u0444\u0442\u0430.\\r\\n\\r\\nhttps:\/\/habr.com\/en\/news\/t\/599865\/#comment_23921173'}, 'com_74': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 10:47:40', 'body': '@dmitrykurmanov \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b \u043d\u0430 \u0432\u043f\u043e\u043b\u043d\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0435 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0448\u0435:\\r\\n\\r\\n> @quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u041d\u0430\u0441\u0447\u0435\u0442 \u044d\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u0441\u0442\u0443\u043f\u043a\u0430 \u044f \u0441\u0443\u0434\u0438\u0442\u044c \u043d\u0435 \u0431\u0435\u0440\u0443\u0441\u044c, \u043d\u043e \u0441\u0443\u0442\u0438 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044f \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430 \u043d\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430 \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0430, \u044d\u0442\u043e \u043d\u0435 \u043c\u0435\u043d\u044f\u0435\u0442.'}, 'com_75': {'author': 'G2G2G2G', 'datetime': '01\/26\/2022, 15:25:31', 'body': 'yo russians, shut the fuck up before I meet up with you in ukraine and make you'}, 'com_76': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 15:45:14', 'body': '> yo russians, shut the fuck up before I meet up with you in ukraine and make you\\r\\n\\r\\nAre you aware that almost half of Ukrainian people also use Russian as their primary language? How do you know that we are Russians and not someone else?'}, 'com_77': {'author': 'teror4uks', 'datetime': '01\/26\/2022, 15:55:16', 'body': '@wtlgo \u043d\u0443 \u044f \u043a\u0430\u043a \u0431\u044b \u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0438 \u043d\u0435 \u0443\u0442\u043e\u0447\u043d\u0438\u043b \u043a\u0430\u043a\u043e\u0435 \u043f\u0440\u0430\u0432\u043e \u043e\u043d \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0434\u0435-\u044e\u0440\u0435 \u0438\u043b\u0438 \u0434\u0435-\u0444\u0430\u043a\u0442\u043e :) \u0412 \u043e\u0431\u0449\u0435\u043c \u043f\u0443\u0441\u0442\u044c \u0438 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044f \u044d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u044f \u0441\u0447\u0438\u0442\u0430\u044e \u044d\u0442\u043e \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043d\u0435 \u044d\u0442\u0438\u0447\u043d\u043e, \u0432\u0441\u0451 \u0436\u0435 \u043c\u043e\u0440\u0430\u043b\u044c \u0438 \u044d\u0442\u0438\u043a\u0430 \u043d\u0430\u0441 \u0438 \u0434\u0435\u043b\u0430\u0435\u0442 \u043b\u044e\u0434\u044c\u043c\u0438, \u0430 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0433\u043e\u0440\u0441\u0442\u043a\u0430 \u0437\u0430\u043a\u043e\u043d\u043e\u0432.'}, 'com_78': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 10:11:45', 'body': '@teror4uks \u043e\u043f\u044f\u0442\u044c \u0442\u0430\u043a\u0438, \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b \u043f\u0440\u043e \u0442\u0432\u043e\u0439 \u0440\u0430\u0441\u0441\u043a\u0430\u0437 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \"\u0440\u0443\u0441\u0441\u043a\u0438\u0435 \u043b\u044e\u0434\u0438 \u043d\u0435 \u0443\u043c\u0435\u044e\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438\". \u042d\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u0442\u0443\u043f\u043a\u0430 \u0430\u0432\u0442\u043e\u0440\u0430 \u044f \u0441\u0443\u0434\u0438\u0442\u044c \u043d\u0435 \u0431\u0435\u0440\u0443\u0441\u044c.'}, 'com_79': {'author': 'teror4uks', 'datetime': '01\/27\/2022, 12:24:45', 'body': '@wtlgo \u0441\u0447\u0438\u0442\u0430\u044e \u0447\u0442\u043e \u0434\u0438\u0441\u043a\u0443\u0441\u0441 \u0441\u0435\u0431\u044f \u0438\u0441\u0447\u0435\u0440\u043f\u0430\u043b, \u0442\u044b \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0443 \u0444\u0440\u0430\u0437\u044b \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0443 \u0438 \u043f\u044b\u0442\u0430\u0435\u0448\u044c\u0441\u044f \u0447\u0442\u043e \u0442\u043e \u043c\u043d\u0435 \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e \u0447\u0442\u043e, \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u044f \u0438 \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u0442\u0435\u043c\u0443'}, 'com_80': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 12:40:04', 'body': '@teror4uks \u0447\u0442\u043e-\u0447\u0442\u043e \u044f \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b? \u0414\u0430\u0432\u0430\u0439 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443. \u0412\u043e\u0442 \u0432\u0441\u044f \u0446\u0438\u0442\u0430\u0442\u0430.\\r\\n\\r\\n> @quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u041d\u0443 \u0434\u0430\u0432\u0430\u0439 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u043f\u043e \u0447\u0430\u0441\u0442\u044f\u043c, \u0442\u043e\u0431\u043e\u044e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435\\r\\n\\r\\n> \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c\\r\\n\\r\\n\u0421\u043e\u043c\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0434\u043e\u0432\u043e\u0434 \u043e\u0442 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0430\u043c \u043d\u0435 \u0441\u0443\u043c\u0435\u043b \u043f\u0440\u043e\u0447\u0435\u0441\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e \u0438 \u043f\u043e\u043d\u044f\u0442\u044c, \u043e \u0447\u0435\u043c \u043e\u043d\u0430. \u041d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043c.\\r\\n\\r\\n> \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u0418\u0437 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0447\u0435\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442 \u043d\u0435 \u044d\u0442\u043e. \u0415\u0441\u043b\u0438 \u0431\u044b \u0442\u044b \u0440\u0435\u0430\u043b\u044c\u043d\u043e \u0431\u044b\u043b \u043d\u0435 \u0440\u0443\u0441\u0441\u043a\u0438\u043c \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u043e\u043c \u0438\u043b\u0438 \u0443\u043c\u0435\u043b \u0447\u0438\u0442\u0430\u0442\u044c \u043f\u043e-\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438, \u0442\u043e \u0443\u0432\u0438\u0434\u0435\u043b \u0431\u044b, \u0447\u0442\u043e \u0438\u0437 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0447\u0435\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u044d\u0442\u043e \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e, \u0447\u0442\u043e \u044d\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0438\u043c\u0435\u0435\u0442 \u043f\u0440\u0430\u0432\u043e \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439, \u0435\u0441\u043b\u0438 \u0435\u043c\u0443 \u0447\u0442\u043e-\u0442\u043e \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0438 \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0432\u0438\u043d\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u0440\u0430 \u043d\u0438 \u0432 \u0447\u0435\u043c, \u0435\u0441\u043b\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043d\u0430\u043d\u0435\u0441\u043b\u0430 \u0435\u043c\u0443 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0432\u0440\u0435\u0434. \u0410\u0432\u0442\u043e\u0440 \u0436\u0435 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430 \u0441\u043e\u0431\u043e\u0439 \u043f\u0440\u0430\u0432\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043e \u0441\u0432\u043e\u0435\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u0433\u043e \u0434\u0443\u0448\u0435 \u0432\u0437\u0434\u0443\u043c\u0430\u0435\u0442\u0441\u044f. \\r\\n\\r\\n\u0418\u0442\u0430\u043a, \u0433\u043e\u0441\u043f\u043e\u0434\u0438\u043d, \u0447\u0442\u043e \u0436\u0435 \u044f \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b \u0442\u0443\u0442 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430? \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0437\u0432\u043e\u043b\u044c \u043d\u0430 \u043c\u0435\u043d\u044f \u0442\u0443\u0442 \u043d\u0435 \u043d\u0430\u0433\u043e\u0432\u0430\u0440\u0438\u0432\u0430\u0442\u044c \u0438 \u0433\u043e\u043b\u043e\u0441\u043b\u043e\u0432\u043d\u044b\u043c\u0438 \u043e\u0431\u0432\u0438\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u043d\u0435 \u0431\u0440\u043e\u0441\u0430\u0442\u044c\u0441\u044f. \u042f \u043d\u0438\u0447\u0435\u0433\u043e \u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0435 \u0432\u044b\u0434\u0435\u0440\u0433\u0438\u0432\u0430\u044e, \u0430 \u0435\u0441\u043b\u0438 \u0443 \u0442\u0435\u0431\u044f \u043d\u0435\u0442 \u0434\u043e\u0432\u043e\u0434\u043e\u0432 \u043f\u0440\u043e\u0442\u0438\u0432 \u0441\u0432\u043e\u0435\u0439 \u043d\u0435\u043f\u0440\u0430\u0432\u043e\u0442\u044b, \u0442\u043e \u043d\u0435 \u043d\u0430\u0434\u043e \u0432\u0435\u0448\u0430\u0442\u044c \u044d\u0442\u043e \u043d\u0430 \u043c\u0435\u043d\u044f. \u042d\u0442\u0438\u043a\u0443 \u0432\u043e\u043f\u0440\u043e\u0441\u0430 \u0432 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b, \u0442\u044b \u043d\u0435 \u043f\u043e\u0434\u043d\u0438\u043c\u0430\u043b.\\r\\n\\r\\n\u0412\u043e-\u0432\u0442\u043e\u0440\u044b\u0445, \u0442\u043e, \u0447\u0442\u043e \u0442\u0430\u043c \u0447\u0430\u0441\u0442\u044c \u0444\u0440\u0430\u0437\u044b \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0443 - \u0442\u0443\u0442, \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u044e, \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u0430\u044f \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a \u0441\u0442\u0440\u0430\u0448\u043d\u043e, \u0447\u0442\u043e \u043d\u0430 \u0442\u0432\u043e\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043d\u0435 \u0434\u0430\u0439 \u0411\u043e\u0433 \u043e\u0442\u0432\u0435\u0442\u0438\u0442 \u043a\u0442\u043e-\u0442\u043e \u0435\u0449\u0435, \u0442\u043e \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u0435\u0433\u043e \u0442\u0443\u0442: \u043e\u0442\u043e\u0448\u043b\u0438 \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0443 e-mail \u0438 \u0435\u0433\u043e \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0438\u043a\u0442\u043e, \u043a\u0440\u043e\u043c\u0435 \u0442\u0432\u043e\u0435\u0433\u043e \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0430, \u043d\u0435 \u0443\u0432\u0438\u0434\u0438\u0442. \u0410 \u043f\u043e\u043a\u0430 \u043f\u0438\u0448\u0435\u0448\u044c \u0447\u0442\u043e-\u0442\u043e \u043d\u0430 \u043f\u0443\u0431\u043b\u0438\u043a\u0443, \u043d\u0435 \u0443\u0434\u0438\u0432\u043b\u044f\u0439\u0441\u044f, \u0435\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u0438\u0437 \u043f\u0443\u0431\u043b\u0438\u043a\u0438 \u0447\u0442\u043e-\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0442\u0435\u0431\u0435.'}, 'com_81': {'author': 'teror4uks', 'datetime': '01\/27\/2022, 13:26:19', 'body': '@wtlgo \u0442\u0432\u043e\u0451 \u043f\u0440\u0430\u0432\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c, \u043c\u043e\u0451 \u043f\u0440\u0430\u0432\u043e \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0442\u044c \u0442\u043e\u0442 \u0431\u0440\u0435\u0434 \u0447\u0442\u043e \u0442\u044b \u043f\u0438\u0448\u0435\u0448\u044c'}, 'com_82': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 13:28:13', 'body': '@teror4uks \u044d\u0442\u043e \u043d\u0435 \u0431\u0440\u0435\u0434. \u0411\u0440\u0435\u0434 \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0442\u0430\u043a\u0438 \u0442\u044b, \u0447\u0442\u043e \u044f \u0438 \u043f\u044b\u0442\u0430\u044e\u0441\u044c \u0442\u0435\u0431\u0435 \u0434\u043e\u043d\u0435\u0441\u0442\u0438.'}, 'com_83': {'author': 'elegantShock2258', 'datetime': '01\/28\/2022, 16:20:54', 'body': 'Speak American! Liberty babyyy \ud83c\uddfa\ud83c\uddf8\ud83c\uddfa\ud83c\uddf8\ud83c\uddfa\ud83c\uddf8'}, 'com_84': {'author': 'elegantShock2258', 'datetime': '01\/28\/2022, 16:24:07', 'body': '> I just paid @Marak 100$. If you have a time to have a futile dispute, use that time to help people in need.\\r\\n\\r\\nYes he needs proper help instead of showing his outbursts up here in the internet and ruining his good name and reputation.'}, 'com_85': {'author': 'Awilum', 'datetime': '02\/01\/2022, 12:20:19', 'body': '> https:\/\/opensea.io\/marak\\r\\n> \\r\\n> Are you sure he needs help?\\r\\n@okyanusoz \\r\\n\\r\\nbecause this story about Colors.js and Faker.js is is look like a scam. imho.'}, 'com_86': {'author': 'satouriko', 'datetime': '02\/04\/2022, 03:20:05', 'body': '> @hello-smile6 what does \"syeal your data\" mean?\\r\\n\\r\\nI guess \"steal\"'}, 'com_87': {'author': 'hello-smile6', 'datetime': '02\/08\/2022, 01:24:33', 'body': '> > @hello-smile6 what does \"syeal your data\" mean?\\r\\n> \\r\\n> I guess \"steal\"\\r\\n\\r\\nYes. Unfortunately, as I said, I didn\\'t create it, so don\\'t blame me for spelling.'}, 'com_88': {'author': 'Lin2Jing4', 'datetime': '02\/12\/2022, 16:39:10', 'body': '\"You can feel the regret. With Cuck Licenses, you get the worst of two worlds: You get no credit for your work, nor money for licensing fees like other proprietary software and your software will be used to violate your and other users\\' privacy when it is used in closed-source environments. Oh, no... copes incoming\"\\r\\n(Luke Madison Smith, 2021, \"Why I Use the GPL and Not Cuck Licenses\").'}, 'com_89': {'author': 'elegantShock2258', 'datetime': '03\/02\/2022, 15:45:11', 'body': \"> there is no american language\\r\\n\\r\\nYes that's the joke\"}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Marak\/colors.js\/raw\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26\/package.json', 'patch': '@@ -1,7 +1,7 @@\\n {\\n     \"name\": \"colors\",\\n     \"description\": \"get colors in your node.js console\",\\n-    \"version\": \"1.4.44-liberty\",\\n+    \"version\": \"1.4.44-liberty-2\",\\n     \"author\": \"Marak Squires\",\\n     \"contributors\": [\\n         {'}}",
            "message_norm":"bump to `v1.4.44-liberty-2`",
            "language":"en",
            "entities":"[('v1.4.44', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['package.json'])",
            "num_files":1.0,
            "patch_content":"From 6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26 Mon Sep 17 00:00:00 2001\nFrom: Marak <marak.squires@gmail.com>\nDate: Fri, 7 Jan 2022 23:22:34 -0500\nSubject: [PATCH] Bump to `v1.4.44-liberty-2`\n\n---\n package.json | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/package.json b\/package.json\nindex 429a7b7..6a69135 100644\n--- a\/package.json\n+++ b\/package.json\n@@ -1,7 +1,7 @@\n {\n     \"name\": \"colors\",\n     \"description\": \"get colors in your node.js console\",\n-    \"version\": \"1.4.44-liberty\",\n+    \"version\": \"1.4.44-liberty-2\",\n     \"author\": \"Marak Squires\",\n     \"contributors\": [\n         {"
        },
        {
            "index":248,
            "vuln_id":"GHSA-9vpm-rcf4-9wqw",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/376c352a37ce5a68b721406dc7e77ac4b6cf483d'}",
            "dataset":"osv",
            "summary":"Division by 0 in `MaxPoolGradWithArgmax` ### Impact\nThe implementation of `tf.raw_ops.MaxPoolGradWithArgmax` is vulnerable to a division by 0:\n\n```python\nimport tensorflow as tf\n\ninput = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.float32)\nargmax = tf.constant([], shape=[0], dtype=tf.int64)\nksize = [1, 1, 1, 1]\nstrides = [1, 1, 1, 1]\n\ntf.raw_ops.MaxPoolGradWithArgmax(\n  input=input, grad=grad, argmax=argmax, ksize=ksize, strides=strides,\n  padding='SAME', include_batch_in_index=False)\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/279bab6efa22752a2827621b7edb56a730233bd8\/tensorflow\/core\/kernels\/maxpooling_op.cc#L1033-L1034) fails to validate that the batch dimension of the tensor is non-zero, before dividing by this quantity.\n\n### Patches\nWe have patched the issue in GitHub commit [376c352a37ce5a68b721406dc7e77ac4b6cf483d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/376c352a37ce5a68b721406dc7e77ac4b6cf483d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/376c352a37ce5a68b721406dc7e77ac4b6cf483d",
            "commit_sha":"376c352a37ce5a68b721406dc7e77ac4b6cf483d",
            "patch":"SINGLE",
            "chain_ord":"['376c352a37ce5a68b721406dc7e77ac4b6cf483d']",
            "before_first_fix_commit":"{'279bab6efa22752a2827621b7edb56a730233bd8'}",
            "last_fix_commit":"376c352a37ce5a68b721406dc7e77ac4b6cf483d",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 21:34:54",
            "message":"Don't do any work if output tensor is null (prevent div by 0)\n\nPiperOrigin-RevId: 372208700\nChange-Id: Iea6b6293e887ade8538facfdb50fb931e17f511e",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/maxpooling_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/376c352a37ce5a68b721406dc7e77ac4b6cf483d\/tensorflow%2Fcore%2Fkernels%2Fmaxpooling_op.cc', 'patch': '@@ -1088,6 +1088,8 @@ class MaxPoolingGradWithArgmaxOp : public OpKernel {\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n                                 {0}, 0, out_shape, &grad_out));\\n \\n+    if (out_shape.num_elements() == 0) return;  \/\/ nothing to be done\\n+\\n     LaunchMaxPoolingGradWithArgmax<Device, T>::launch(\\n         context, params, grad_in, argmax, grad_out, include_batch_in_index_);\\n   }'}}",
            "message_norm":"don't do any work if output tensor is null (prevent div by 0)\n\npiperorigin-revid: 372208700\nchange-id: iea6b6293e887ade8538facfdb50fb931e17f511e",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('div by 0', 'SECWORD', ''), ('372208700', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/maxpooling_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 376c352a37ce5a68b721406dc7e77ac4b6cf483d Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Wed, 5 May 2021 14:34:54 -0700\nSubject: [PATCH] Don't do any work if output tensor is null (prevent div by 0)\n\nPiperOrigin-RevId: 372208700\nChange-Id: Iea6b6293e887ade8538facfdb50fb931e17f511e\n---\n tensorflow\/core\/kernels\/maxpooling_op.cc | 2 ++\n 1 file changed, 2 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/maxpooling_op.cc b\/tensorflow\/core\/kernels\/maxpooling_op.cc\nindex 003d2e94b99cd5..ceb6694ed665d8 100644\n--- a\/tensorflow\/core\/kernels\/maxpooling_op.cc\n+++ b\/tensorflow\/core\/kernels\/maxpooling_op.cc\n@@ -1088,6 +1088,8 @@ class MaxPoolingGradWithArgmaxOp : public OpKernel {\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\n                                 {0}, 0, out_shape, &grad_out));\n \n+    if (out_shape.num_elements() == 0) return;  \/\/ nothing to be done\n+\n     LaunchMaxPoolingGradWithArgmax<Device, T>::launch(\n         context, params, grad_in, argmax, grad_out, include_batch_in_index_);\n   }"
        },
        {
            "index":428,
            "vuln_id":"GHSA-c442-3278-rhrg",
            "cwe_id":"{'CWE-434'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/49b992d4c548c8c615a92b6efe8a50c8f1083abf'}",
            "dataset":"osv",
            "summary":"Unrestricted File Upload in ShowDoc v2.9.5 Unrestricted File Upload in ShowDoc v2.9.5 allows remote attackers to execute arbitrary code via the 'file_url' parameter in the component AdminUpdateController.class.php'.",
            "published_date":"2021-09-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/49b992d4c548c8c615a92b6efe8a50c8f1083abf",
            "commit_sha":"49b992d4c548c8c615a92b6efe8a50c8f1083abf",
            "patch":"SINGLE",
            "chain_ord":"['49b992d4c548c8c615a92b6efe8a50c8f1083abf']",
            "before_first_fix_commit":"{'8db2d13196df7067fdf2e37cf1e5e2d7aba3d748'}",
            "last_fix_commit":"49b992d4c548c8c615a92b6efe8a50c8f1083abf",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/24\/2021, 15:25:43",
            "message":"Fix security vulnerabilities",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'server\/Application\/Api\/Controller\/AdminUpdateController.class.php': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/49b992d4c548c8c615a92b6efe8a50c8f1083abf\/server%2FApplication%2FApi%2FController%2FAdminUpdateController.class.php', 'patch': '@@ -24,6 +24,8 @@ public function checkUpdate(){\\n \\n     \/\/ \u4e0b\u8f7d\u66f4\u65b0\u4ee3\u7801\u5305\\n     public function download(){\\n+        $this->checkLogin();\\n+        $this->checkAdmin();\\n         set_time_limit(1000);\\n         ini_set(\\'memory_limit\\',\\'500M\\');\\n         $new_version = I(\"new_version\") ;\\n@@ -78,6 +80,8 @@ public function download(){\\n \\n     \/\/ \u6267\u884c\u5347\u7ea7\u64cd\u4f5c\uff0c\u5347\u7ea7\u8986\u76d6\u6587\u4ef6\\n     public function updateFiles(){\\n+        $this->checkLogin();\\n+        $this->checkAdmin();\\n         set_time_limit(1000);\\n         ini_set(\\'memory_limit\\',\\'500M\\');'}}",
            "message_norm":"fix security vulnerabilities",
            "language":"ro",
            "entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('vulnerabilities', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Controller\/AdminUpdateController.class.php'])",
            "num_files":1.0,
            "patch_content":"From 49b992d4c548c8c615a92b6efe8a50c8f1083abf Mon Sep 17 00:00:00 2001\nFrom: star7th <xing7th@gmail.com>\nDate: Thu, 24 Jun 2021 23:25:43 +0800\nSubject: [PATCH] Fix security vulnerabilities\n\n---\n ...\/Api\/Controller\/AdminUpdateController.class.php            | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/server\/Application\/Api\/Controller\/AdminUpdateController.class.php b\/server\/Application\/Api\/Controller\/AdminUpdateController.class.php\nindex 851901a1e..63923b628 100644\n--- a\/server\/Application\/Api\/Controller\/AdminUpdateController.class.php\n+++ b\/server\/Application\/Api\/Controller\/AdminUpdateController.class.php\n@@ -24,6 +24,8 @@ public function checkUpdate(){\n \n     \/\/ \u4e0b\u8f7d\u66f4\u65b0\u4ee3\u7801\u5305\n     public function download(){\n+        $this->checkLogin();\n+        $this->checkAdmin();\n         set_time_limit(1000);\n         ini_set('memory_limit','500M');\n         $new_version = I(\"new_version\") ;\n@@ -78,6 +80,8 @@ public function download(){\n \n     \/\/ \u6267\u884c\u5347\u7ea7\u64cd\u4f5c\uff0c\u5347\u7ea7\u8986\u76d6\u6587\u4ef6\n     public function updateFiles(){\n+        $this->checkLogin();\n+        $this->checkAdmin();\n         set_time_limit(1000);\n         ini_set('memory_limit','500M');"
        },
        {
            "index":166,
            "vuln_id":"GHSA-92v9-xh2q-fq9f",
            "cwe_id":"{'CWE-1321', 'CWE-915'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/tony-tsx\/cookiex-deep\/commit\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in @cookiex\/deep The npm @cookiex\/deep package before version 0.0.7 has a prototype pollution vulnerability. The global proto object can be polluted using the __proto__ object.",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/tony-tsx\/cookiex-deep",
            "commit_href":"https:\/\/github.com\/tony-tsx\/cookiex-deep\/commit\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88",
            "commit_sha":"b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88",
            "patch":"SINGLE",
            "chain_ord":"['b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88']",
            "before_first_fix_commit":"{'ed91f5d004e8a1e3f269bb48c3b2ac294f8580ef'}",
            "last_fix_commit":"b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/13\/2021, 18:04:49",
            "message":"fix: prototype pollution fix #1",
            "author":"Tony",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/assigner.ts': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tony-tsx\/cookiex-deep\/raw\/b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88\/src%2Fassigner.ts', 'patch': \"@@ -1,12 +1,12 @@\\n const untracker = [ undefined, null ]\\n-\\n+const invalids = [ '__proto__', 'constructor', 'prototype' ]\\n const Assigner = function( delegate: ( a: any, b: any ) => any, useuntrack: boolean = true ): ( ...args: any[] ) => any {\\n   const assigner = ( ...args: any[] ) => {\\n-    console.log( { args } )\\n     return args.reduce( ( a, b ) => {\\n       if ( untracker.includes( a ) ) throw new TypeError( `can't convert ${a} to object` )\\n       if ( useuntrack && untracker.includes( b ) ) return a\\n       Object.keys( b ).forEach( key => {\\n+        if ( invalids.includes( key ) ) return void 0\\n         if ( untracker.includes( a[key] ) ) a[key] = b[key]\\n         else a[key] = delegate.call( this, a[key], b[key] )\\n       } )\"}}",
            "message_norm":"fix: prototype pollution fix #1",
            "language":"fr",
            "entities":"[('prototype pollution', 'SECWORD', ''), ('#1', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/assigner.ts'])",
            "num_files":1.0,
            "patch_content":"From b5bea2b7f34a5fa9abb4446cbd038ecdbcd09c88 Mon Sep 17 00:00:00 2001\nFrom: Tony <tony.js@zoho.eu>\nDate: Mon, 13 Sep 2021 15:04:49 -0300\nSubject: [PATCH] fix: prototype pollution fix #1\n\n---\n src\/assigner.ts | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/assigner.ts b\/src\/assigner.ts\nindex c1e2233..221b373 100644\n--- a\/src\/assigner.ts\n+++ b\/src\/assigner.ts\n@@ -1,12 +1,12 @@\n const untracker = [ undefined, null ]\n-\n+const invalids = [ '__proto__', 'constructor', 'prototype' ]\n const Assigner = function( delegate: ( a: any, b: any ) => any, useuntrack: boolean = true ): ( ...args: any[] ) => any {\n   const assigner = ( ...args: any[] ) => {\n-    console.log( { args } )\n     return args.reduce( ( a, b ) => {\n       if ( untracker.includes( a ) ) throw new TypeError( `can't convert ${a} to object` )\n       if ( useuntrack && untracker.includes( b ) ) return a\n       Object.keys( b ).forEach( key => {\n+        if ( invalids.includes( key ) ) return void 0\n         if ( untracker.includes( a[key] ) ) a[key] = b[key]\n         else a[key] = delegate.call( this, a[key], b[key] )\n       } )"
        },
        {
            "index":631,
            "vuln_id":"GHSA-c53x-wwx2-pg96",
            "cwe_id":"{'CWE-79'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/bersLucas\/liljs\/commit\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in @berslucas\/liljs Versions of  `@berslucas\/liljs` prior to 1.0.2 are vulnerable to Cross-Site Scripting (XSS). The package uses the unsafe `innerHTML` function without sanitizing input, which may allow attackers to execute arbitrary JavaScript on the victim's browser.\n\n\n## Recommendation\n\nUpgrade to version 1.0.2 or later.",
            "published_date":"2020-09-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/bersLucas\/liljs",
            "commit_href":"https:\/\/github.com\/bersLucas\/liljs\/commit\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
            "commit_sha":"779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
            "patch":"SINGLE",
            "chain_ord":"['779c0dcd8aba434a1c94db7d1d2d990a629f9a6c']",
            "before_first_fix_commit":"{'bc0919e0031e6e6aa99be9793a6a9afa8ad2e5b1'}",
            "last_fix_commit":"779c0dcd8aba434a1c94db7d1d2d990a629f9a6c",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/10\/2019, 03:29:54",
            "message":"Use textContent over innerHTML so you can bind untrusted text values\nwithout the possibility of an XSS attack.",
            "author":"Cody Mikol",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/liljs.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bersLucas\/liljs\/raw\/779c0dcd8aba434a1c94db7d1d2d990a629f9a6c\/src%2Fliljs.js', 'patch': '@@ -21,7 +21,7 @@ const liljs = (elem, data = {}) => {\\n      * @param {String} property Name of the property to render\\n      * @param {String} value (Optional) A value to use instead of a property (used in lil-list-text)\\n      *\/\\n-    const setText = (elem, property, value) => elem.innerHTML = value || state[property].value;\\n+    const setText = (elem, property, value) => elem.textContent = value || state[property].value;\\n \\n     \/** Set style helper function\\n      * @function setStyle\\n@@ -43,7 +43,7 @@ const liljs = (elem, data = {}) => {\\n      *\/\\n     const setList = (elem, property) => {\\n       \/\/TODO: Find a way to update without clearing lists\\n-      elem.innerHTML = \"\";\\n+      elem.textContent = \"\";\\n       state[property].value.forEach(value => {\\n         let clone = document.importNode(state[property].template.content, true);\\n         clone.querySelectorAll(\"[lil-list-text]\").forEach(node => {'}}",
            "message_norm":"use textcontent over innerhtml so you can bind untrusted text values\nwithout the possibility of an xss attack.",
            "language":"en",
            "entities":"[('untrusted', 'SECWORD', ''), ('xss', 'SECWORD', ''), ('attack', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/liljs.js'])",
            "num_files":1.0,
            "patch_content":"From 779c0dcd8aba434a1c94db7d1d2d990a629f9a6c Mon Sep 17 00:00:00 2001\nFrom: Cody Mikol <codymikol@gmail.com>\nDate: Sat, 9 Feb 2019 22:29:54 -0500\nSubject: [PATCH] Use textContent over innerHTML so you can bind untrusted text\n values without the possibility of an XSS attack.\n\n---\n src\/liljs.js | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/liljs.js b\/src\/liljs.js\nindex cdacf36..1fb18b8 100644\n--- a\/src\/liljs.js\n+++ b\/src\/liljs.js\n@@ -21,7 +21,7 @@ const liljs = (elem, data = {}) => {\n      * @param {String} property Name of the property to render\n      * @param {String} value (Optional) A value to use instead of a property (used in lil-list-text)\n      *\/\n-    const setText = (elem, property, value) => elem.innerHTML = value || state[property].value;\n+    const setText = (elem, property, value) => elem.textContent = value || state[property].value;\n \n     \/** Set style helper function\n      * @function setStyle\n@@ -43,7 +43,7 @@ const liljs = (elem, data = {}) => {\n      *\/\n     const setList = (elem, property) => {\n       \/\/TODO: Find a way to update without clearing lists\n-      elem.innerHTML = \"\";\n+      elem.textContent = \"\";\n       state[property].value.forEach(value => {\n         let clone = document.importNode(state[property].template.content, true);\n         clone.querySelectorAll(\"[lil-list-text]\").forEach(node => {"
        },
        {
            "index":59,
            "vuln_id":"GHSA-ppc3-fpvh-7396",
            "cwe_id":"{'CWE-362'}",
            "score":7.0,
            "chain":"{'https:\/\/github.com\/apache\/netbeans-html4j\/commit\/fa70e507e5555e1adb4f6518479fc408a7abd0e6'}",
            "dataset":"osv",
            "summary":"Improper synchronization in Apache Netbeans HTML\/Java API There exists a race condition between the deletion of the temporary file and the creation of the temporary directory in `webkit` subproject of HTML\/Java API version 1.7. A similar vulnerability has recently been disclosed in other Java projects and the fix in HTML\/Java API version 1.7.1 follows theirs: To avoid local privilege escalation version 1.7.1 creates the temporary directory atomically without dealing with the temporary file.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/netbeans-html4j",
            "commit_href":"https:\/\/github.com\/apache\/netbeans-html4j\/commit\/fa70e507e5555e1adb4f6518479fc408a7abd0e6",
            "commit_sha":"fa70e507e5555e1adb4f6518479fc408a7abd0e6",
            "patch":"SINGLE",
            "chain_ord":"['fa70e507e5555e1adb4f6518479fc408a7abd0e6']",
            "before_first_fix_commit":"{'d1dcd9c0542ac46d7764256a81057dfbe2d8805a'}",
            "last_fix_commit":"fa70e507e5555e1adb4f6518479fc408a7abd0e6",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/15\/2020, 08:56:27",
            "message":"createTempDirectory atomically",
            "author":"Jaroslav Tulach",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 3, 'total': 4}",
            "files":"{'webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java': {'additions': 1, 'deletions': 3, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/netbeans-html4j\/raw\/fa70e507e5555e1adb4f6518479fc408a7abd0e6\/webkit%2Fsrc%2Fmain%2Fjava%2Forg%2Fnetbeans%2Fhtml%2Fpresenters%2Fwebkit%2FUnJarResources.java', 'patch': '@@ -39,9 +39,7 @@ static URL extract(URL url) throws IOException {\\n         if (jar == null) {\\n             return url;\\n         }\\n-        File dir = File.createTempFile(jar.getName(), \".dir\");\\n-        dir.delete();\\n-        dir.mkdirs();\\n+        File dir = Files.createTempDirectory(jar.getName() + \".dir\").toFile();\\n \\n         Enumeration<JarEntry> en = jar.entries();\\n         while (en.hasMoreElements()) {'}}",
            "message_norm":"createtempdirectory atomically",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java'])",
            "num_files":1.0,
            "patch_content":"From fa70e507e5555e1adb4f6518479fc408a7abd0e6 Mon Sep 17 00:00:00 2001\nFrom: Jaroslav Tulach <jaroslav.tulach@apidesign.org>\nDate: Tue, 15 Dec 2020 09:56:27 +0100\nSubject: [PATCH] createTempDirectory atomically\n\n---\n ...\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java   | 4 +---\n 1 file changed, 1 insertion(+), 3 deletions(-)\n\ndiff --git a\/webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java b\/webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java\nindex fb0011396..1559a6d58 100644\n--- a\/webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java\n+++ b\/webkit\/src\/main\/java\/org\/netbeans\/html\/presenters\/webkit\/UnJarResources.java\n@@ -39,9 +39,7 @@ static URL extract(URL url) throws IOException {\n         if (jar == null) {\n             return url;\n         }\n-        File dir = File.createTempFile(jar.getName(), \".dir\");\n-        dir.delete();\n-        dir.mkdirs();\n+        File dir = Files.createTempDirectory(jar.getName() + \".dir\").toFile();\n \n         Enumeration<JarEntry> en = jar.entries();\n         while (en.hasMoreElements()) {"
        },
        {
            "index":843,
            "vuln_id":"GHSA-5jfw-35xp-5m42",
            "cwe_id":"{'CWE-124'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/pmmp\/BedrockProtocol\/commit\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac'}",
            "dataset":"osv",
            "summary":"Buffer length underflow in LoginPacket causing unchecked exceptions to be thrown ### Impact\n`LoginPacket` uses `BinaryStream->getLInt()` to read the lengths of JSON payloads it wants to decode. Unfortunately, `BinaryStream->getLInt()` returns a signed integer, meaning that a malicious client can craft a packet with a large uint32 value for payload buffer size (which would be interpreted as a negative signed int32), causing `BinaryStream->get()` to throw an exception.\n\nIn the context of PocketMine-MP, this leads to a server crash when the vulnerability is exploited.\n\n### Patches\ne3fce7632b94e83fd6a518a87dcaf6a11681c4ac\n\n### Workarounds\nThis can be worked around by registering a custom `LoginPacket` implementation into `PacketPool` which overrides [this code](https:\/\/github.com\/pmmp\/BedrockProtocol\/blob\/47532c95ea37d5f0365b23f734d70d943ff95295\/src\/LoginPacket.php#L54) to patch it.\n\n### For more information\n* Email us at [team@pmmp.io](mailto:team@pmmp.io)",
            "published_date":"2022-04-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/pmmp\/BedrockProtocol",
            "commit_href":"https:\/\/github.com\/pmmp\/BedrockProtocol\/commit\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac",
            "commit_sha":"e3fce7632b94e83fd6a518a87dcaf6a11681c4ac",
            "patch":"SINGLE",
            "chain_ord":"['e3fce7632b94e83fd6a518a87dcaf6a11681c4ac']",
            "before_first_fix_commit":"{'a740f6095b35278c0e0dac6db84a5e4d2456b113'}",
            "last_fix_commit":"e3fce7632b94e83fd6a518a87dcaf6a11681c4ac",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/01\/2022, 21:41:00",
            "message":"LoginPacket: fixed buffer length underflow in payload decoding",
            "author":"Dylan K. Taylor",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 2, 'total': 16}",
            "files":"{'src\/LoginPacket.php': {'additions': 14, 'deletions': 2, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pmmp\/BedrockProtocol\/raw\/e3fce7632b94e83fd6a518a87dcaf6a11681c4ac\/src%2FLoginPacket.php', 'patch': '@@ -54,7 +54,13 @@ protected function decodePayload(PacketSerializer $in) : void{\\n \\tprotected function decodeConnectionRequest(string $binary) : void{\\n \\t\\t$connRequestReader = new BinaryStream($binary);\\n \\n-\\t\\t$chainDataJson = json_decode($connRequestReader->get($connRequestReader->getLInt()));\\n+\\t\\t$chainDataJsonLength = $connRequestReader->getLInt();\\n+\\t\\tif($chainDataJsonLength <= 0){\\n+\\t\\t\\t\/\/technically this is always positive; the problem results because getLInt() is implicitly signed\\n+\\t\\t\\t\/\/this is inconsistent with many other methods, but we can\\'t do anything about that for now\\n+\\t\\t\\tthrow new PacketDecodeException(\"Length of chain data JSON must be positive\");\\n+\\t\\t}\\n+\\t\\t$chainDataJson = json_decode($connRequestReader->get($chainDataJsonLength));\\n \\t\\tif(!is_object($chainDataJson)){\\n \\t\\t\\tthrow new PacketDecodeException(\"Failed decoding chain data JSON: \" . json_last_error_msg());\\n \\t\\t}\\n@@ -68,7 +74,13 @@ protected function decodeConnectionRequest(string $binary) : void{\\n \\t\\t}\\n \\n \\t\\t$this->chainDataJwt = $chainData;\\n-\\t\\t$this->clientDataJwt = $connRequestReader->get($connRequestReader->getLInt());\\n+\\t\\t$clientDataJwtLength = $connRequestReader->getLInt();\\n+\\t\\tif($clientDataJwtLength <= 0){\\n+\\t\\t\\t\/\/technically this is always positive; the problem results because getLInt() is implicitly signed\\n+\\t\\t\\t\/\/this is inconsistent with many other methods, but we can\\'t do anything about that for now\\n+\\t\\t\\tthrow new PacketDecodeException(\"Length of clientData JWT must be positive\");\\n+\\t\\t}\\n+\\t\\t$this->clientDataJwt = $connRequestReader->get($clientDataJwtLength);\\n \\t}\\n \\n \\tprotected function encodePayload(PacketSerializer $out) : void{'}}",
            "message_norm":"loginpacket: fixed buffer length underflow in payload decoding",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('underflow', 'SECWORD', ''), ('decoding', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/LoginPacket.php'])",
            "num_files":1.0,
            "patch_content":"From e3fce7632b94e83fd6a518a87dcaf6a11681c4ac Mon Sep 17 00:00:00 2001\nFrom: \"Dylan K. Taylor\" <dktapps@pmmp.io>\nDate: Fri, 1 Apr 2022 22:41:00 +0100\nSubject: [PATCH] LoginPacket: fixed buffer length underflow in payload\n decoding\n\n---\n src\/LoginPacket.php | 16 ++++++++++++++--\n 1 file changed, 14 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/LoginPacket.php b\/src\/LoginPacket.php\nindex d9de285d..8d2ec943 100644\n--- a\/src\/LoginPacket.php\n+++ b\/src\/LoginPacket.php\n@@ -54,7 +54,13 @@ protected function decodePayload(PacketSerializer $in) : void{\n \tprotected function decodeConnectionRequest(string $binary) : void{\n \t\t$connRequestReader = new BinaryStream($binary);\n \n-\t\t$chainDataJson = json_decode($connRequestReader->get($connRequestReader->getLInt()));\n+\t\t$chainDataJsonLength = $connRequestReader->getLInt();\n+\t\tif($chainDataJsonLength <= 0){\n+\t\t\t\/\/technically this is always positive; the problem results because getLInt() is implicitly signed\n+\t\t\t\/\/this is inconsistent with many other methods, but we can't do anything about that for now\n+\t\t\tthrow new PacketDecodeException(\"Length of chain data JSON must be positive\");\n+\t\t}\n+\t\t$chainDataJson = json_decode($connRequestReader->get($chainDataJsonLength));\n \t\tif(!is_object($chainDataJson)){\n \t\t\tthrow new PacketDecodeException(\"Failed decoding chain data JSON: \" . json_last_error_msg());\n \t\t}\n@@ -68,7 +74,13 @@ protected function decodeConnectionRequest(string $binary) : void{\n \t\t}\n \n \t\t$this->chainDataJwt = $chainData;\n-\t\t$this->clientDataJwt = $connRequestReader->get($connRequestReader->getLInt());\n+\t\t$clientDataJwtLength = $connRequestReader->getLInt();\n+\t\tif($clientDataJwtLength <= 0){\n+\t\t\t\/\/technically this is always positive; the problem results because getLInt() is implicitly signed\n+\t\t\t\/\/this is inconsistent with many other methods, but we can't do anything about that for now\n+\t\t\tthrow new PacketDecodeException(\"Length of clientData JWT must be positive\");\n+\t\t}\n+\t\t$this->clientDataJwt = $connRequestReader->get($clientDataJwtLength);\n \t}\n \n \tprotected function encodePayload(PacketSerializer $out) : void{"
        },
        {
            "index":875,
            "vuln_id":"GHSA-h6fg-mjxg-hqq4",
            "cwe_id":"{'CWE-197', 'CWE-754'}",
            "score":9.0,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ca8c013b5e97b1373b3bb1c97ea655e69f31a575', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/27b417360cbd671ef55915e4bb6bb06af8b8a832'}",
            "dataset":"osv",
            "summary":"Integer truncation in Shard API usage ### Impact\nThe `Shard` API in TensorFlow expects the last argument to be a function taking two `int64` (i.e., `long long`) arguments:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/util\/work_sharder.h#L59-L60\n\nHowever, there are several places in TensorFlow where a lambda taking `int` or `int32` arguments is being used:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/kernels\/random_op.cc#L204-L205\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/core\/kernels\/random_op.cc#L317-L318\n\nIn these cases, if the amount of work to be parallelized is large enough, integer truncation occurs. Depending on how the two arguments of the lambda are used, this can result in segfaults, read\/write outside of heap allocated arrays, stack overflows, or data corruption.\n\n### Patches\nWe have patched the issue in 27b417360cbd671ef55915e4bb6bb06af8b8a832 and ca8c013b5e97b1373b3bb1c97ea655e69f31a575. We will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2020-09-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/27b417360cbd671ef55915e4bb6bb06af8b8a832",
            "commit_sha":"27b417360cbd671ef55915e4bb6bb06af8b8a832",
            "patch":"MULTI",
            "chain_ord":"['27b417360cbd671ef55915e4bb6bb06af8b8a832', 'ca8c013b5e97b1373b3bb1c97ea655e69f31a575']",
            "before_first_fix_commit":"{'b9465214656c42204d86945eca80d211f50043a1'}",
            "last_fix_commit":"ca8c013b5e97b1373b3bb1c97ea655e69f31a575",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/19\/2020, 00:21:24",
            "message":"Prevent `int64` to `int` truncation in `Shard` API usage.\n\nThe function argument in `Shard` must be a function of two `int64` arguments. However, we are passing in a function with two `int` arguments. Thus, for large workloads, these arguments get truncated from positive `int64` values to negative `int` ones, resulting in a buffer out of bounds write.\n\nPiperOrigin-RevId: 332557334\nChange-Id: I236c9a2e7f53580e520571da8ba941a3aa9fa0b5",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/random_op.cc': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/27b417360cbd671ef55915e4bb6bb06af8b8a832\/tensorflow%2Fcore%2Fkernels%2Frandom_op.cc', 'patch': '@@ -202,7 +202,7 @@ class RandomGammaOp : public OpKernel {\\n     \/\/ avoid a couple flops which can be done on a per-alpha basis.\\n \\n     auto DoWork = [samples_per_alpha, num_alphas, &rng, samples_flat,\\n-                   alpha_flat](int start_output, int limit_output) {\\n+                   alpha_flat](int64 start_output, int64 limit_output) {\\n       using Eigen::numext::exp;\\n       using Eigen::numext::log;\\n       using Eigen::numext::log1p;'}}",
            "message_norm":"prevent `int64` to `int` truncation in `shard` api usage.\n\nthe function argument in `shard` must be a function of two `int64` arguments. however, we are passing in a function with two `int` arguments. thus, for large workloads, these arguments get truncated from positive `int64` values to negative `int` ones, resulting in a buffer out of bounds write.\n\npiperorigin-revid: 332557334\nchange-id: i236c9a2e7f53580e520571da8ba941a3aa9fa0b5",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('out of bounds write', 'SECWORD', ''), ('332557334', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/random_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 27b417360cbd671ef55915e4bb6bb06af8b8a832 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 18 Sep 2020 17:21:24 -0700\nSubject: [PATCH] Prevent `int64` to `int` truncation in `Shard` API usage.\n\nThe function argument in `Shard` must be a function of two `int64` arguments. However, we are passing in a function with two `int` arguments. Thus, for large workloads, these arguments get truncated from positive `int64` values to negative `int` ones, resulting in a buffer out of bounds write.\n\nPiperOrigin-RevId: 332557334\nChange-Id: I236c9a2e7f53580e520571da8ba941a3aa9fa0b5\n---\n tensorflow\/core\/kernels\/random_op.cc | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/random_op.cc b\/tensorflow\/core\/kernels\/random_op.cc\nindex 7bc4d9bf4d024b..bace2362e33df0 100644\n--- a\/tensorflow\/core\/kernels\/random_op.cc\n+++ b\/tensorflow\/core\/kernels\/random_op.cc\n@@ -202,7 +202,7 @@ class RandomGammaOp : public OpKernel {\n     \/\/ avoid a couple flops which can be done on a per-alpha basis.\n \n     auto DoWork = [samples_per_alpha, num_alphas, &rng, samples_flat,\n-                   alpha_flat](int start_output, int limit_output) {\n+                   alpha_flat](int64 start_output, int64 limit_output) {\n       using Eigen::numext::exp;\n       using Eigen::numext::log;\n       using Eigen::numext::log1p;"
        },
        {
            "index":450,
            "vuln_id":"GHSA-4c4g-crqm-xrxw",
            "cwe_id":"{'CWE-908'}",
            "score":4.4,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887'}",
            "dataset":"osv",
            "summary":"Use of unitialized value in TFLite ### Impact\nAll TFLite operations that use quantization can be made to use unitialized values. [For example](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/460e000de3a83278fb00b61a16d161b1964f15f4\/tensorflow\/lite\/kernels\/depthwise_conv.cc#L198-L200):\n\n```cc\n    const auto* affine_quantization =\n        reinterpret_cast<TfLiteAffineQuantization*>(\n            filter->quantization.params);\n```\n\nThe issue stems from the fact that `quantization.params` is only valid if `quantization.type` is different that `kTfLiteNoQuantization`. However, these checks are missing in large parts of the code.\n\n### Patches\nWe have patched the issue in GitHub commits [537bc7c723439b9194a358f64d871dd326c18887](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/537bc7c723439b9194a358f64d871dd326c18887),\n[4a91f2069f7145aab6ba2d8cfe41be8a110c18a5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5) and [8933b8a21280696ab119b63263babdb54c298538](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8933b8a21280696ab119b63263babdb54c298538).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":3,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5",
            "commit_sha":"4a91f2069f7145aab6ba2d8cfe41be8a110c18a5",
            "patch":"MULTI",
            "chain_ord":"['537bc7c723439b9194a358f64d871dd326c18887', '4a91f2069f7145aab6ba2d8cfe41be8a110c18a5', '8933b8a21280696ab119b63263babdb54c298538']",
            "before_first_fix_commit":"{'e35be978351a8578549d30b6f483825d36dc0f8b'}",
            "last_fix_commit":"8933b8a21280696ab119b63263babdb54c298538",
            "chain_ord_pos":2.0,
            "commit_datetime":"07\/16\/2021, 16:59:39",
            "message":"Fix a null pointer exception caused by branching on uninitialized data.\n\nThis is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385168337\nChange-Id: I28661e4f12ba1c92cfeae23d22a3fb2df2a2c6a4",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 0, 'total': 9}",
            "files":"{'tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4a91f2069f7145aab6ba2d8cfe41be8a110c18a5\/tensorflow%2Flite%2Fkernels%2Funidirectional_sequence_lstm.cc', 'patch': '@@ -62,8 +62,12 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\\n       context,\\n       GetOutputSafe(context, node, lstm::full::kOutputTensor, &output_tensor));\\n \\n+  TF_LITE_ENSURE(context,\\n+                 cell_state->quantization.type != kTfLiteNoQuantization);\\n   auto* cell_state_params =\\n       static_cast<TfLiteAffineQuantization*>(cell_state->quantization.params);\\n+  TF_LITE_ENSURE(context,\\n+                 output_tensor->quantization.type != kTfLiteNoQuantization);\\n   auto* proj_params = static_cast<TfLiteAffineQuantization*>(\\n       output_tensor->quantization.params);\\n   if (cell_clip > 0.0) {\\n@@ -160,6 +164,8 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\\n       TfLiteTensor* intermediate;\\n       TF_LITE_ENSURE_OK(context,\\n                         GetIntermediatesSafe(context, node, i, &intermediate));\\n+      TF_LITE_ENSURE(context,\\n+                     intermediate->quantization.type != kTfLiteNoQuantization);\\n       auto* params = static_cast<TfLiteAffineQuantization*>(\\n           intermediate->quantization.params);\\n       intermediate_scale.push_back(params->scale->data[0]);\\n@@ -174,6 +180,7 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\\n   \/\/ is ignored.\\n   TfLiteTensor* hidden;\\n   TF_LITE_ENSURE_OK(context, GetIntermediatesSafe(context, node, 4, &hidden));\\n+  TF_LITE_ENSURE(context, hidden->quantization.type != kTfLiteNoQuantization);\\n   auto* hidden_params =\\n       static_cast<TfLiteAffineQuantization*>(hidden->quantization.params);\\n   intermediate_scale.push_back(hidden_params->scale->data[0]);\\n@@ -760,6 +767,8 @@ TfLiteStatus PopulatePrecomputedZPTimesWeightsWithBias(TfLiteContext* context,\\n \\n   const TfLiteTensor* intermediate =\\n       &context->tensors[node->intermediates->data[4]];\\n+  TF_LITE_ENSURE(context,\\n+                 intermediate->quantization.type != kTfLiteNoQuantization);\\n   const auto* params =\\n       static_cast<TfLiteAffineQuantization*>(intermediate->quantization.params);\\n   const int32_t hidden_zp = params->zero_point->data[0];'}}",
            "message_norm":"fix a null pointer exception caused by branching on uninitialized data.\n\nthis is due to not checking that the params for the quantization exists. if there is no quantization, we should not access the `.params` field.\n\npiperorigin-revid: 385168337\nchange-id: i28661e4f12ba1c92cfeae23d22a3fb2df2a2c6a4",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('null pointer exception', 'SECWORD', ''), ('uninitialized', 'SECWORD', ''), ('385168337', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc'])",
            "num_files":1.0,
            "patch_content":"From 4a91f2069f7145aab6ba2d8cfe41be8a110c18a5 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 16 Jul 2021 09:59:39 -0700\nSubject: [PATCH] Fix a null pointer exception caused by branching on\n uninitialized data.\n\nThis is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.\n\nPiperOrigin-RevId: 385168337\nChange-Id: I28661e4f12ba1c92cfeae23d22a3fb2df2a2c6a4\n---\n tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc | 9 +++++++++\n 1 file changed, 9 insertions(+)\n\ndiff --git a\/tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc b\/tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc\nindex 56363f489c248b..590a9e95a05a91 100644\n--- a\/tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc\n+++ b\/tensorflow\/lite\/kernels\/unidirectional_sequence_lstm.cc\n@@ -62,8 +62,12 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\n       context,\n       GetOutputSafe(context, node, lstm::full::kOutputTensor, &output_tensor));\n \n+  TF_LITE_ENSURE(context,\n+                 cell_state->quantization.type != kTfLiteNoQuantization);\n   auto* cell_state_params =\n       static_cast<TfLiteAffineQuantization*>(cell_state->quantization.params);\n+  TF_LITE_ENSURE(context,\n+                 output_tensor->quantization.type != kTfLiteNoQuantization);\n   auto* proj_params = static_cast<TfLiteAffineQuantization*>(\n       output_tensor->quantization.params);\n   if (cell_clip > 0.0) {\n@@ -160,6 +164,8 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\n       TfLiteTensor* intermediate;\n       TF_LITE_ENSURE_OK(context,\n                         GetIntermediatesSafe(context, node, i, &intermediate));\n+      TF_LITE_ENSURE(context,\n+                     intermediate->quantization.type != kTfLiteNoQuantization);\n       auto* params = static_cast<TfLiteAffineQuantization*>(\n           intermediate->quantization.params);\n       intermediate_scale.push_back(params->scale->data[0]);\n@@ -174,6 +180,7 @@ TfLiteStatus PopulateQuantizedLstmParams8x8_16(\n   \/\/ is ignored.\n   TfLiteTensor* hidden;\n   TF_LITE_ENSURE_OK(context, GetIntermediatesSafe(context, node, 4, &hidden));\n+  TF_LITE_ENSURE(context, hidden->quantization.type != kTfLiteNoQuantization);\n   auto* hidden_params =\n       static_cast<TfLiteAffineQuantization*>(hidden->quantization.params);\n   intermediate_scale.push_back(hidden_params->scale->data[0]);\n@@ -760,6 +767,8 @@ TfLiteStatus PopulatePrecomputedZPTimesWeightsWithBias(TfLiteContext* context,\n \n   const TfLiteTensor* intermediate =\n       &context->tensors[node->intermediates->data[4]];\n+  TF_LITE_ENSURE(context,\n+                 intermediate->quantization.type != kTfLiteNoQuantization);\n   const auto* params =\n       static_cast<TfLiteAffineQuantization*>(intermediate->quantization.params);\n   const int32_t hidden_zp = params->zero_point->data[0];"
        },
        {
            "index":407,
            "vuln_id":"GHSA-fpcp-9h7m-ffpx",
            "cwe_id":"{'CWE-476'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e21af685e1828f7ca65038307df5cc06de4479e8'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in TensorFlow  ### Impact\nWhen [building an XLA compilation cache](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/274df9b02330b790aa8de1cee164b70f72b9b244\/tensorflow\/compiler\/jit\/xla_platform_info.cc#L43-L104), if default settings are used, TensorFlow triggers a null pointer dereference:\n\n```cc \n  string allowed_gpus =\n      flr->config_proto()->gpu_options().visible_device_list();\n``` \n    \nIn the default scenario, all devices are allowed, so `flr->config_proto` is `nullptr`.\n    \n### Patches\nWe have patched the issue in GitHub commit [e21af685e1828f7ca65038307df5cc06de4479e8](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e21af685e1828f7ca65038307df5cc06de4479e8).\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e21af685e1828f7ca65038307df5cc06de4479e8",
            "commit_sha":"e21af685e1828f7ca65038307df5cc06de4479e8",
            "patch":"SINGLE",
            "chain_ord":"['e21af685e1828f7ca65038307df5cc06de4479e8']",
            "before_first_fix_commit":"{'30f8e5c460629a9f8dbb04dc562c7b579c07f11b'}",
            "last_fix_commit":"e21af685e1828f7ca65038307df5cc06de4479e8",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/08\/2022, 00:20:27",
            "message":"Fix Null-pointer dereference in BuildXlaCompilationCache\n\nIf ConfigProto is not used, then use the default settings which is to allow all devices.\n\nPiperOrigin-RevId: 420391800\nChange-Id: I88161ad7042990aef678e77b597a2fb2c8f815be",
            "author":"Smit Hinsu",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 5, 'total': 12}",
            "files":"{'tensorflow\/compiler\/jit\/xla_platform_info.cc': {'additions': 7, 'deletions': 5, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e21af685e1828f7ca65038307df5cc06de4479e8\/tensorflow%2Fcompiler%2Fjit%2Fxla_platform_info.cc', 'patch': '@@ -82,11 +82,13 @@ Status BuildXlaCompilationCache(DeviceBase* device, FunctionLibraryRuntime* flr,\\n   client_options.set_intra_op_parallelism_threads(\\n       device->tensorflow_cpu_worker_threads()->num_threads);\\n \\n-  string allowed_gpus =\\n-      flr->config_proto()->gpu_options().visible_device_list();\\n-  TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,\\n-                      ParseVisibleDeviceList(allowed_gpus));\\n-  client_options.set_allowed_devices(gpu_ids);\\n+  if (flr->config_proto()) {\\n+    string allowed_gpus =\\n+        flr->config_proto()->gpu_options().visible_device_list();\\n+    TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,\\n+                        ParseVisibleDeviceList(allowed_gpus));\\n+    client_options.set_allowed_devices(gpu_ids);\\n+  }\\n \\n   auto client = xla::ClientLibrary::GetOrCreateLocalClient(client_options);\\n   if (!client.ok()) {'}}",
            "message_norm":"fix null-pointer dereference in buildxlacompilationcache\n\nif configproto is not used, then use the default settings which is to allow all devices.\n\npiperorigin-revid: 420391800\nchange-id: i88161ad7042990aef678e77b597a2fb2c8f815be",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('null-pointer dereference', 'SECWORD', ''), ('420391800', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/compiler\/jit\/xla_platform_info.cc'])",
            "num_files":1.0,
            "patch_content":"From e21af685e1828f7ca65038307df5cc06de4479e8 Mon Sep 17 00:00:00 2001\nFrom: Smit Hinsu <hinsu@google.com>\nDate: Fri, 7 Jan 2022 16:20:27 -0800\nSubject: [PATCH] Fix Null-pointer dereference in BuildXlaCompilationCache\n\nIf ConfigProto is not used, then use the default settings which is to allow all devices.\n\nPiperOrigin-RevId: 420391800\nChange-Id: I88161ad7042990aef678e77b597a2fb2c8f815be\n---\n tensorflow\/compiler\/jit\/xla_platform_info.cc | 12 +++++++-----\n 1 file changed, 7 insertions(+), 5 deletions(-)\n\ndiff --git a\/tensorflow\/compiler\/jit\/xla_platform_info.cc b\/tensorflow\/compiler\/jit\/xla_platform_info.cc\nindex 8b20c9169c3e90..96d6e27d36a7ee 100644\n--- a\/tensorflow\/compiler\/jit\/xla_platform_info.cc\n+++ b\/tensorflow\/compiler\/jit\/xla_platform_info.cc\n@@ -82,11 +82,13 @@ Status BuildXlaCompilationCache(DeviceBase* device, FunctionLibraryRuntime* flr,\n   client_options.set_intra_op_parallelism_threads(\n       device->tensorflow_cpu_worker_threads()->num_threads);\n \n-  string allowed_gpus =\n-      flr->config_proto()->gpu_options().visible_device_list();\n-  TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,\n-                      ParseVisibleDeviceList(allowed_gpus));\n-  client_options.set_allowed_devices(gpu_ids);\n+  if (flr->config_proto()) {\n+    string allowed_gpus =\n+        flr->config_proto()->gpu_options().visible_device_list();\n+    TF_ASSIGN_OR_RETURN(absl::optional<std::set<int>> gpu_ids,\n+                        ParseVisibleDeviceList(allowed_gpus));\n+    client_options.set_allowed_devices(gpu_ids);\n+  }\n \n   auto client = xla::ClientLibrary::GetOrCreateLocalClient(client_options);\n   if (!client.ok()) {"
        },
        {
            "index":455,
            "vuln_id":"GHSA-vhm6-gw82-6f8j",
            "cwe_id":"{'CWE-79'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/librenms\/librenms\/commit\/703745d0ed3948623153117d761ce48514e2f281'}",
            "dataset":"osv",
            "summary":"Cross site scripting in LibreNMS LibreNMS prior to version 22.2.2 is vulnerable to cross-site scripting.",
            "published_date":"2022-02-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/librenms\/librenms",
            "commit_href":"https:\/\/github.com\/librenms\/librenms\/commit\/703745d0ed3948623153117d761ce48514e2f281",
            "commit_sha":"703745d0ed3948623153117d761ce48514e2f281",
            "patch":"SINGLE",
            "chain_ord":"['703745d0ed3948623153117d761ce48514e2f281']",
            "before_first_fix_commit":"{'09929bd6865e54034db591ea37f5548406f5e716'}",
            "last_fix_commit":"703745d0ed3948623153117d761ce48514e2f281",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/22\/2022, 14:28:31",
            "message":"Resolved XSS issue from alert rule list modal (#13805)",
            "author":"Neil Lathwood",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'includes\/html\/modal\/alert_rule_list.inc.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/librenms\/librenms\/raw\/703745d0ed3948623153117d761ce48514e2f281\/includes%2Fhtml%2Fmodal%2Falert_rule_list.inc.php', 'patch': '@@ -62,7 +62,7 @@\\n                             echo \"\\n                                 <tr>\\n                                     <td>{$rule[\\'name\\']}<\/td>\\n-                                    <td><i>\" . htmlentities($rule_display) . \"<\/i><\/td>\\n+                                    <td><i>\" . htmlentities(strip_tags($rule_display)) . \"<\/i><\/td>\\n                                     <td>{$rule[\\'severity\\']}<\/td>\\n                                     <td>{$rule[\\'id\\']}<\/td>\\n                                 <\/tr>'}}",
            "message_norm":"resolved xss issue from alert rule list modal (#13805)",
            "language":"no",
            "entities":"[('xss', 'SECWORD', ''), ('issue', 'FLAW', ''), ('#13805', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['includes\/html\/modal\/alert_rule_list.inc.php'])",
            "num_files":1.0,
            "patch_content":"From 703745d0ed3948623153117d761ce48514e2f281 Mon Sep 17 00:00:00 2001\nFrom: Neil Lathwood <gh+n@laf.io>\nDate: Tue, 22 Feb 2022 14:28:31 +0000\nSubject: [PATCH] Resolved XSS issue from alert rule list modal (#13805)\n\n---\n includes\/html\/modal\/alert_rule_list.inc.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/includes\/html\/modal\/alert_rule_list.inc.php b\/includes\/html\/modal\/alert_rule_list.inc.php\nindex ad6a50c73658..aa604c260ea4 100644\n--- a\/includes\/html\/modal\/alert_rule_list.inc.php\n+++ b\/includes\/html\/modal\/alert_rule_list.inc.php\n@@ -62,7 +62,7 @@\n                             echo \"\n                                 <tr>\n                                     <td>{$rule['name']}<\/td>\n-                                    <td><i>\" . htmlentities($rule_display) . \"<\/i><\/td>\n+                                    <td><i>\" . htmlentities(strip_tags($rule_display)) . \"<\/i><\/td>\n                                     <td>{$rule['severity']}<\/td>\n                                     <td>{$rule['id']}<\/td>\n                                 <\/tr>"
        },
        {
            "index":246,
            "vuln_id":"GHSA-h6jh-7gv5-28vg",
            "cwe_id":"{'CWE-681'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c283e542a3f422420cfdb332414543b62fc4e4a5'}",
            "dataset":"osv",
            "summary":"Bad alloc in `StringNGrams` caused by integer conversion ### Impact\nThe implementation of `tf.raw_ops.StringNGrams` is vulnerable to an integer overflow issue caused by converting a signed integer value to an unsigned one and then allocating memory based on this value.\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.StringNGrams(\n  data=['',''],\n  data_splits=[0,2],\n  separator=' '*100,\n  ngram_widths=[-80,0,0,-60],\n  left_pad=' ',\n  right_pad=' ',\n  pad_width=100,\n  preserve_short_sequences=False)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/string_ngrams_op.cc#L184) calls `reserve` on a `tstring` with a value that sometimes can be negative if user supplies negative `ngram_widths`. The `reserve` method calls `TF_TString_Reserve` which has an `unsigned long` argument for the size of the buffer. Hence, the implicit conversion transforms the negative value to a large integer.\n\n### Patches\nWe have patched the issue in GitHub commit [c283e542a3f422420cfdb332414543b62fc4e4a5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c283e542a3f422420cfdb332414543b62fc4e4a5).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c283e542a3f422420cfdb332414543b62fc4e4a5",
            "commit_sha":"c283e542a3f422420cfdb332414543b62fc4e4a5",
            "patch":"SINGLE",
            "chain_ord":"['c283e542a3f422420cfdb332414543b62fc4e4a5']",
            "before_first_fix_commit":"{'9659aea5b5e9de3b417413f69e58dab7a2907912'}",
            "last_fix_commit":"c283e542a3f422420cfdb332414543b62fc4e4a5",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/27\/2021, 17:55:35",
            "message":"Disallow negative ngram_widths values in tf.raw_ops.StringNGrams\n\nPiperOrigin-RevId: 387148179\nChange-Id: I641395a09a208be72ef9b3ceb128cf8a83a0775b",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/string_ngrams_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c283e542a3f422420cfdb332414543b62fc4e4a5\/tensorflow%2Fcore%2Fkernels%2Fstring_ngrams_op.cc', 'patch': '@@ -53,6 +53,12 @@ class StringNGramsOp : public tensorflow::OpKernel {\\n   }\\n \\n   void Compute(tensorflow::OpKernelContext* context) override {\\n+    for (int ngram_width : ngram_widths_) {\\n+      OP_REQUIRES(\\n+          context, ngram_width > 0,\\n+          errors::InvalidArgument(\"ngram_widths must contain positive values\"));\\n+    }\\n+\\n     const tensorflow::Tensor* data;\\n     OP_REQUIRES_OK(context, context->input(\"data\", &data));\\n     const auto& input_data = data->flat<tstring>().data();'}}",
            "message_norm":"disallow negative ngram_widths values in tf.raw_ops.stringngrams\n\npiperorigin-revid: 387148179\nchange-id: i641395a09a208be72ef9b3ceb128cf8a83a0775b",
            "language":"en",
            "entities":"[('387148179', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/string_ngrams_op.cc'])",
            "num_files":1.0,
            "patch_content":"From c283e542a3f422420cfdb332414543b62fc4e4a5 Mon Sep 17 00:00:00 2001\nFrom: Laura Pak <lpak@google.com>\nDate: Tue, 27 Jul 2021 10:55:35 -0700\nSubject: [PATCH] Disallow negative ngram_widths values in\n tf.raw_ops.StringNGrams\n\nPiperOrigin-RevId: 387148179\nChange-Id: I641395a09a208be72ef9b3ceb128cf8a83a0775b\n---\n tensorflow\/core\/kernels\/string_ngrams_op.cc | 6 ++++++\n 1 file changed, 6 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/string_ngrams_op.cc b\/tensorflow\/core\/kernels\/string_ngrams_op.cc\nindex 7008a1d766af25..97af9abc4454ac 100644\n--- a\/tensorflow\/core\/kernels\/string_ngrams_op.cc\n+++ b\/tensorflow\/core\/kernels\/string_ngrams_op.cc\n@@ -53,6 +53,12 @@ class StringNGramsOp : public tensorflow::OpKernel {\n   }\n \n   void Compute(tensorflow::OpKernelContext* context) override {\n+    for (int ngram_width : ngram_widths_) {\n+      OP_REQUIRES(\n+          context, ngram_width > 0,\n+          errors::InvalidArgument(\"ngram_widths must contain positive values\"));\n+    }\n+\n     const tensorflow::Tensor* data;\n     OP_REQUIRES_OK(context, context->input(\"data\", &data));\n     const auto& input_data = data->flat<tstring>().data();"
        },
        {
            "index":290,
            "vuln_id":"GHSA-44qp-9wwf-734r",
            "cwe_id":"{'CWE-787', 'CWE-120'}",
            "score":7.6,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3'}",
            "dataset":"osv",
            "summary":"Heap overflow in Tensorflow ### Impact \nThe [implementation of `SparseCountSparseOutput`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/count_ops.cc#L168-L273) is vulnerable to a heap overflow:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseCountSparseOutput(\n  indices=[[-1,-1]],\n  values=[2],\n  dense_shape=[1, 1],\n  weights=[1],\n  binary_output=True,\n  minlength=-1,\n  maxlength=-1,\n  name=None)\n```\n\n### Patches\nWe have patched the issue in GitHub commits [2b7100d6cdff36aa21010a82269bc05a6d1cc74a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/2b7100d6cdff36aa21010a82269bc05a6d1cc74a) and [adbbabdb0d3abb3cdeac69e38a96de1d678b24b3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Faysal Hossain Shezan from University of Virginia.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
            "commit_sha":"adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
            "patch":"MULTI",
            "chain_ord":"['2b7100d6cdff36aa21010a82269bc05a6d1cc74a', 'adbbabdb0d3abb3cdeac69e38a96de1d678b24b3']",
            "before_first_fix_commit":"{'2b7100d6cdff36aa21010a82269bc05a6d1cc74a'}",
            "last_fix_commit":"adbbabdb0d3abb3cdeac69e38a96de1d678b24b3",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/08\/2021, 03:44:33",
            "message":"Further validate sparse tensor for `SparseCount`: indices must be valid within dense shape.\n\nPiperOrigin-RevId: 414888122\nChange-Id: I4552bd74c135ecd4bcb5448acc0a3ce9402d8286",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 17, 'deletions': 3, 'total': 20}",
            "files":"{'tensorflow\/core\/kernels\/count_ops.cc': {'additions': 17, 'deletions': 3, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/adbbabdb0d3abb3cdeac69e38a96de1d678b24b3\/tensorflow%2Fcore%2Fkernels%2Fcount_ops.cc', 'patch': '@@ -206,6 +206,23 @@ class SparseCount : public OpKernel {\\n     OP_REQUIRES(context, shape.NumElements() > 0,\\n                 errors::InvalidArgument(\\n                     \"The shape argument requires at least one element.\"));\\n+    \/\/ Validate indices: each index must be valid for the corresponding\\n+    \/\/ dimension. This could be possibly done better.\\n+    const auto indices_values = indices.matrix<int64_t>();\\n+    const auto shape_vector = shape.vec<int64_t>();\\n+    int num_values = values.NumElements();  \/\/ same as first dim of indices\\n+    int rank = indices.shape().dim_size(1);\\n+    for (int i = 0; i < num_values; ++i) {\\n+      for (int j = 0; j < rank; ++j) {\\n+        OP_REQUIRES(\\n+            context,\\n+            indices_values(i, j) >= 0 && indices_values(i, j) < shape_vector(j),\\n+            errors::InvalidArgument(\\n+                \"Invalid index value at \", i, \": dimension \", j, \" has value \",\\n+                indices_values(i, j), \" which is not in [0, \", shape_vector(j),\\n+                \") (as given by dense shape \", shape.DebugString()));\\n+      }\\n+    }\\n \\n     if (use_weights) {\\n       OP_REQUIRES(\\n@@ -217,11 +234,8 @@ class SparseCount : public OpKernel {\\n     }\\n \\n     bool is_1d = shape.NumElements() == 1;\\n-    auto shape_vector = shape.flat<int64_t>();\\n     int num_batches = is_1d ? 1 : shape_vector(0);\\n-    int num_values = values.NumElements();\\n \\n-    const auto indices_values = indices.matrix<int64_t>();\\n     const auto values_values = values.flat<T>();\\n     const auto weight_values = weights.flat<W>();'}}",
            "message_norm":"further validate sparse tensor for `sparsecount`: indices must be valid within dense shape.\n\npiperorigin-revid: 414888122\nchange-id: i4552bd74c135ecd4bcb5448acc0a3ce9402d8286",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('414888122', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/count_ops.cc'])",
            "num_files":1.0,
            "patch_content":"From adbbabdb0d3abb3cdeac69e38a96de1d678b24b3 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Tue, 7 Dec 2021 19:44:33 -0800\nSubject: [PATCH] Further validate sparse tensor for `SparseCount`: indices\n must be valid within dense shape.\n\nPiperOrigin-RevId: 414888122\nChange-Id: I4552bd74c135ecd4bcb5448acc0a3ce9402d8286\n---\n tensorflow\/core\/kernels\/count_ops.cc | 20 +++++++++++++++++---\n 1 file changed, 17 insertions(+), 3 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/count_ops.cc b\/tensorflow\/core\/kernels\/count_ops.cc\nindex 1f99e0783e26f6..cc101b66f81403 100644\n--- a\/tensorflow\/core\/kernels\/count_ops.cc\n+++ b\/tensorflow\/core\/kernels\/count_ops.cc\n@@ -206,6 +206,23 @@ class SparseCount : public OpKernel {\n     OP_REQUIRES(context, shape.NumElements() > 0,\n                 errors::InvalidArgument(\n                     \"The shape argument requires at least one element.\"));\n+    \/\/ Validate indices: each index must be valid for the corresponding\n+    \/\/ dimension. This could be possibly done better.\n+    const auto indices_values = indices.matrix<int64_t>();\n+    const auto shape_vector = shape.vec<int64_t>();\n+    int num_values = values.NumElements();  \/\/ same as first dim of indices\n+    int rank = indices.shape().dim_size(1);\n+    for (int i = 0; i < num_values; ++i) {\n+      for (int j = 0; j < rank; ++j) {\n+        OP_REQUIRES(\n+            context,\n+            indices_values(i, j) >= 0 && indices_values(i, j) < shape_vector(j),\n+            errors::InvalidArgument(\n+                \"Invalid index value at \", i, \": dimension \", j, \" has value \",\n+                indices_values(i, j), \" which is not in [0, \", shape_vector(j),\n+                \") (as given by dense shape \", shape.DebugString()));\n+      }\n+    }\n \n     if (use_weights) {\n       OP_REQUIRES(\n@@ -217,11 +234,8 @@ class SparseCount : public OpKernel {\n     }\n \n     bool is_1d = shape.NumElements() == 1;\n-    auto shape_vector = shape.flat<int64_t>();\n     int num_batches = is_1d ? 1 : shape_vector(0);\n-    int num_values = values.NumElements();\n \n-    const auto indices_values = indices.matrix<int64_t>();\n     const auto values_values = values.flat<T>();\n     const auto weight_values = weights.flat<W>();"
        },
        {
            "index":151,
            "vuln_id":"GHSA-29mw-wpgm-hmr9",
            "cwe_id":"{'CWE-400'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/lodash\/lodash\/pull\/5065\/commits\/02906b8191d3c100c193fe6f7b27d1c40f200bb7'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDoS) in lodash All versions of package lodash prior to 4.17.21 are vulnerable to Regular Expression Denial of Service (ReDoS) via the toNumber, trim and trimEnd functions. Steps to reproduce (provided by reporter Liyuan Chen): var lo = require('lodash'); function build_blank (n) { var ret = \"1\" for (var i = 0; i < n; i++) { ret += \" \" } return ret + \"1\"; } var s = build_blank(50000) var time0 = Date.now(); lo.trim(s) var time_cost0 = Date.now() - time0; console.log(\"time_cost0: \" + time_cost0) var time1 = Date.now(); lo.toNumber(s) var time_cost1 = Date.now() - time1; console.log(\"time_cost1: \" + time_cost1) var time2 = Date.now(); lo.trimEnd(s) var time_cost2 = Date.now() - time2; console.log(\"time_cost2: \" + time_cost2)",
            "published_date":"2022-01-06",
            "chain_len":1,
            "project":"https:\/\/github.com\/lodash\/lodash",
            "commit_href":"https:\/\/github.com\/lodash\/lodash\/pull\/5065\/commits\/02906b8191d3c100c193fe6f7b27d1c40f200bb7",
            "commit_sha":"02906b8191d3c100c193fe6f7b27d1c40f200bb7",
            "patch":"SINGLE",
            "chain_ord":"['02906b8191d3c100c193fe6f7b27d1c40f200bb7']",
            "before_first_fix_commit":"{'ded9bc66583ed0b4e3b7dc906206d40757b4a90a'}",
            "last_fix_commit":"02906b8191d3c100c193fe6f7b27d1c40f200bb7",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2021, 22:17:05",
            "message":"perf: improve performance of `toNumber`, `trim` and `trimEnd` on large input strings",
            "author":"Micha\u0142 Lipi\u0144ski",
            "comments":null,
            "stats":"{'additions': 36, 'deletions': 7, 'total': 43}",
            "files":"{'lodash.js': {'additions': 36, 'deletions': 7, 'changes': 43, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lodash\/lodash\/raw\/02906b8191d3c100c193fe6f7b27d1c40f200bb7\/lodash.js', 'patch': \"@@ -152,10 +152,11 @@\\n   var reRegExpChar = \/[\\\\\\\\^$.*+?()[\\\\]{}|]\/g,\\n       reHasRegExpChar = RegExp(reRegExpChar.source);\\n \\n-  \/** Used to match leading and trailing whitespace. *\/\\n-  var reTrim = \/^\\\\s+|\\\\s+$\/g,\\n-      reTrimStart = \/^\\\\s+\/,\\n-      reTrimEnd = \/\\\\s+$\/;\\n+  \/** Used to match leading whitespace. *\/\\n+  var reTrimStart = \/^\\\\s+\/;\\n+\\n+  \/** Used to match a single whitespace character. *\/\\n+  var reWhitespace = \/\\\\s\/;\\n \\n   \/** Used to match wrap detail comments. *\/\\n   var reWrapComment = \/\\\\{(?:\\\\n\\\\\/\\\\* \\\\[wrapped with .+\\\\] \\\\*\\\\\/)?\\\\n?\/,\\n@@ -993,6 +994,19 @@\\n     });\\n   }\\n \\n+  \/**\\n+   * The base implementation of `_.trim`.\\n+   *\\n+   * @private\\n+   * @param {string} string The string to trim.\\n+   * @returns {string} Returns the trimmed string.\\n+   *\/\\n+  function baseTrim(string) {\\n+    return string\\n+      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\\n+      : string;\\n+  }\\n+\\n   \/**\\n    * The base implementation of `_.unary` without support for storing metadata.\\n    *\\n@@ -1326,6 +1340,21 @@\\n       : asciiToArray(string);\\n   }\\n \\n+  \/**\\n+   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\\n+   * character of `string`.\\n+   *\\n+   * @private\\n+   * @param {string} string The string to inspect.\\n+   * @returns {number} Returns the index of the last non-whitespace character.\\n+   *\/\\n+  function trimmedEndIndex(string) {\\n+    var index = string.length;\\n+\\n+    while (index-- && reWhitespace.test(string.charAt(index))) {}\\n+    return index;\\n+  }\\n+\\n   \/**\\n    * Used by `_.unescape` to convert HTML entities to characters.\\n    *\\n@@ -12494,7 +12523,7 @@\\n       if (typeof value != 'string') {\\n         return value === 0 ? value : +value;\\n       }\\n-      value = value.replace(reTrim, '');\\n+      value = baseTrim(value);\\n       var isBinary = reIsBinary.test(value);\\n       return (isBinary || reIsOctal.test(value))\\n         ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\\n@@ -14979,7 +15008,7 @@\\n     function trim(string, chars, guard) {\\n       string = toString(string);\\n       if (string && (guard || chars === undefined)) {\\n-        return string.replace(reTrim, '');\\n+        return baseTrim(string);\\n       }\\n       if (!string || !(chars = baseToString(chars))) {\\n         return string;\\n@@ -15014,7 +15043,7 @@\\n     function trimEnd(string, chars, guard) {\\n       string = toString(string);\\n       if (string && (guard || chars === undefined)) {\\n-        return string.replace(reTrimEnd, '');\\n+        return string.slice(0, trimmedEndIndex(string) + 1);\\n       }\\n       if (!string || !(chars = baseToString(chars))) {\\n         return string;\"}}",
            "message_norm":"perf: improve performance of `tonumber`, `trim` and `trimend` on large input strings",
            "language":"en",
            "entities":"[('improve', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lodash.js'])",
            "num_files":1.0,
            "patch_content":"From 02906b8191d3c100c193fe6f7b27d1c40f200bb7 Mon Sep 17 00:00:00 2001\nFrom: =?UTF-8?q?Micha=C5=82=20Lipi=C5=84ski?= <mylith@gmail.com>\nDate: Tue, 26 Jan 2021 23:17:05 +0100\nSubject: [PATCH] perf: improve performance of `toNumber`, `trim` and `trimEnd`\n on large input strings\n\n---\n lodash.js | 43 ++++++++++++++++++++++++++++++++++++-------\n 1 file changed, 36 insertions(+), 7 deletions(-)\n\ndiff --git a\/lodash.js b\/lodash.js\nindex 1fd7116f42..7d40df0305 100644\n--- a\/lodash.js\n+++ b\/lodash.js\n@@ -152,10 +152,11 @@\n   var reRegExpChar = \/[\\\\^$.*+?()[\\]{}|]\/g,\n       reHasRegExpChar = RegExp(reRegExpChar.source);\n \n-  \/** Used to match leading and trailing whitespace. *\/\n-  var reTrim = \/^\\s+|\\s+$\/g,\n-      reTrimStart = \/^\\s+\/,\n-      reTrimEnd = \/\\s+$\/;\n+  \/** Used to match leading whitespace. *\/\n+  var reTrimStart = \/^\\s+\/;\n+\n+  \/** Used to match a single whitespace character. *\/\n+  var reWhitespace = \/\\s\/;\n \n   \/** Used to match wrap detail comments. *\/\n   var reWrapComment = \/\\{(?:\\n\\\/\\* \\[wrapped with .+\\] \\*\\\/)?\\n?\/,\n@@ -993,6 +994,19 @@\n     });\n   }\n \n+  \/**\n+   * The base implementation of `_.trim`.\n+   *\n+   * @private\n+   * @param {string} string The string to trim.\n+   * @returns {string} Returns the trimmed string.\n+   *\/\n+  function baseTrim(string) {\n+    return string\n+      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n+      : string;\n+  }\n+\n   \/**\n    * The base implementation of `_.unary` without support for storing metadata.\n    *\n@@ -1326,6 +1340,21 @@\n       : asciiToArray(string);\n   }\n \n+  \/**\n+   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n+   * character of `string`.\n+   *\n+   * @private\n+   * @param {string} string The string to inspect.\n+   * @returns {number} Returns the index of the last non-whitespace character.\n+   *\/\n+  function trimmedEndIndex(string) {\n+    var index = string.length;\n+\n+    while (index-- && reWhitespace.test(string.charAt(index))) {}\n+    return index;\n+  }\n+\n   \/**\n    * Used by `_.unescape` to convert HTML entities to characters.\n    *\n@@ -12494,7 +12523,7 @@\n       if (typeof value != 'string') {\n         return value === 0 ? value : +value;\n       }\n-      value = value.replace(reTrim, '');\n+      value = baseTrim(value);\n       var isBinary = reIsBinary.test(value);\n       return (isBinary || reIsOctal.test(value))\n         ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n@@ -14979,7 +15008,7 @@\n     function trim(string, chars, guard) {\n       string = toString(string);\n       if (string && (guard || chars === undefined)) {\n-        return string.replace(reTrim, '');\n+        return baseTrim(string);\n       }\n       if (!string || !(chars = baseToString(chars))) {\n         return string;\n@@ -15014,7 +15043,7 @@\n     function trimEnd(string, chars, guard) {\n       string = toString(string);\n       if (string && (guard || chars === undefined)) {\n-        return string.replace(reTrimEnd, '');\n+        return string.slice(0, trimmedEndIndex(string) + 1);\n       }\n       if (!string || !(chars = baseToString(chars))) {\n         return string;"
        },
        {
            "index":855,
            "vuln_id":"GHSA-mqh2-9wrp-vx84",
            "cwe_id":"{'CWE-787'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `SparseSplit` ### Impact\nAn attacker can cause a heap buffer overflow in `tf.raw_ops.SparseSplit`:\n\n```python\nimport tensorflow as tf\n\nshape_dims = tf.constant(0, dtype=tf.int64)\nindices = tf.ones([1, 1], dtype=tf.int64)\nvalues = tf.ones([1], dtype=tf.int64)\nshape = tf.ones([1], dtype=tf.int64)\n\ntf.raw_ops.SparseSplit(\n    split_dim=shape_dims, indices=indices, values=values,\n    shape=shape, num_split=1)\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/699bff5d961f0abfde8fa3f876e6d241681fbef8\/tensorflow\/core\/util\/sparse\/sparse_tensor.h#L528-L530) accesses an array element based on a user controlled offset:\n\n```cc\nconst int dim = input_tensor.indices().matrix<int64>()(i, split_dim);\nint slice_index = GetSliceIndex(dim, split_size, residual);\nnum_values[slice_index]++;\n```\n\nThis results in overriding values on the heap.\n\n### Patches\nWe have patched the issue in GitHub commit [8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31",
            "commit_sha":"8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31",
            "patch":"SINGLE",
            "chain_ord":"['8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31']",
            "before_first_fix_commit":"{'699bff5d961f0abfde8fa3f876e6d241681fbef8'}",
            "last_fix_commit":"8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/30\/2021, 00:58:08",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.\n\nPiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/util\/sparse\/sparse_tensor.h': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31\/tensorflow%2Fcore%2Futil%2Fsparse%2Fsparse_tensor.h', 'patch': '@@ -527,6 +527,10 @@ inline Status SparseTensor::Split(const SparseTensor& input_tensor,\\n   for (int i = 0; i < input_tensor.indices().dim_size(0); ++i) {\\n     const int dim = input_tensor.indices().matrix<int64>()(i, split_dim);\\n     int slice_index = GetSliceIndex(dim, split_size, residual);\\n+    if (slice_index >= num_values.size()) {\\n+      return errors::InvalidArgument(\"Slice index \", slice_index,\\n+                                     \" is larger than num_split.\");\\n+    }\\n     num_values[slice_index]++;\\n   }'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsesplit`.\n\npiperorigin-revid: 371242872\nchange-id: i482bb3d12602c7c3cc9446f97fb9f584bb98e9a4",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('371242872', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/util\/sparse\/sparse_tensor.h'])",
            "num_files":1.0,
            "patch_content":"From 8ba6fa29cd8bf9cef9b718dc31c78c73081f5b31 Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Thu, 29 Apr 2021 17:58:08 -0700\nSubject: [PATCH] Fix heap-buffer-overflow issue with `tf.raw_ops.SparseSplit`.\n\nPiperOrigin-RevId: 371242872\nChange-Id: I482bb3d12602c7c3cc9446f97fb9f584bb98e9a4\n---\n tensorflow\/core\/util\/sparse\/sparse_tensor.h | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/tensorflow\/core\/util\/sparse\/sparse_tensor.h b\/tensorflow\/core\/util\/sparse\/sparse_tensor.h\nindex 062226d7699bc8..341290dbbc6982 100644\n--- a\/tensorflow\/core\/util\/sparse\/sparse_tensor.h\n+++ b\/tensorflow\/core\/util\/sparse\/sparse_tensor.h\n@@ -527,6 +527,10 @@ inline Status SparseTensor::Split(const SparseTensor& input_tensor,\n   for (int i = 0; i < input_tensor.indices().dim_size(0); ++i) {\n     const int dim = input_tensor.indices().matrix<int64>()(i, split_dim);\n     int slice_index = GetSliceIndex(dim, split_size, residual);\n+    if (slice_index >= num_values.size()) {\n+      return errors::InvalidArgument(\"Slice index \", slice_index,\n+                                     \" is larger than num_split.\");\n+    }\n     num_values[slice_index]++;\n   }"
        },
        {
            "index":142,
            "vuln_id":"GHSA-jgrx-mgxx-jf9v",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/daaku\/nodejs-tmpl\/commit\/4c654e4d1542f329ed561fd95ccd80f30c6872d6'}",
            "dataset":"osv",
            "summary":"tmpl vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion nodejs-tmpl is simple string formatting. tmpl is vulnerable to Inefficient Regular Expression Complexity which may lead to resource exhaustion.",
            "published_date":"2021-09-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/daaku\/nodejs-tmpl",
            "commit_href":"https:\/\/github.com\/daaku\/nodejs-tmpl\/commit\/4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "commit_sha":"4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "patch":"SINGLE",
            "chain_ord":"['4c654e4d1542f329ed561fd95ccd80f30c6872d6']",
            "before_first_fix_commit":"{'1dbd350783f04743bd759cc5ae1e1e3633d550ff'}",
            "last_fix_commit":"4c654e4d1542f329ed561fd95ccd80f30c6872d6",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/07\/2021, 06:41:06",
            "message":"fix potential dos in regex",
            "author":"Naitik Shah",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/tmpl.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/daaku\/nodejs-tmpl\/raw\/4c654e4d1542f329ed561fd95ccd80f30c6872d6\/lib%2Ftmpl.js', 'patch': \"@@ -1,4 +1,4 @@\\n-var INTERPOLATE = \/{([\\\\s\\\\S]+?)}\/g\\n+var INTERPOLATE = \/{([^{]+?)}\/g\\n \\n module.exports = function(str, data) {\\n   var tmpl = 'var __p=[],print=function(){__p.push.apply(__p,arguments);};' +\"}}",
            "message_norm":"fix potential dos in regex",
            "language":"ca",
            "entities":"[('fix', 'ACTION', ''), ('dos', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/tmpl.js'])",
            "num_files":1.0,
            "patch_content":"From 4c654e4d1542f329ed561fd95ccd80f30c6872d6 Mon Sep 17 00:00:00 2001\nFrom: Naitik Shah <n@daaku.org>\nDate: Tue, 7 Sep 2021 10:41:06 +0400\nSubject: [PATCH] fix potential dos in regex\n\n---\n lib\/tmpl.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lib\/tmpl.js b\/lib\/tmpl.js\nindex 8fed3a8..63ed9b2 100644\n--- a\/lib\/tmpl.js\n+++ b\/lib\/tmpl.js\n@@ -1,4 +1,4 @@\n-var INTERPOLATE = \/{([\\s\\S]+?)}\/g\n+var INTERPOLATE = \/{([^{]+?)}\/g\n \n module.exports = function(str, data) {\n   var tmpl = 'var __p=[],print=function(){__p.push.apply(__p,arguments);};' +"
        },
        {
            "index":93,
            "vuln_id":"GHSA-3wcq-x3mq-6r9p",
            "cwe_id":"{'CWE-908', 'CWE-200'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/mafintosh\/dns-packet\/commit\/0d0d593f8df4e2712c43957a6c62e95047f12b2d', 'https:\/\/github.com\/mafintosh\/dns-packet\/commit\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56'}",
            "dataset":"osv",
            "summary":"Potential memory exposure in dns-packet This affects the package dns-packet before versions 1.3.2 and 5.2.2. It creates buffers with allocUnsafe and does not always fill them before forming network packets. This can expose internal application memory over unencrypted network when querying crafted invalid domain names.",
            "published_date":"2021-05-24",
            "chain_len":2,
            "project":"https:\/\/github.com\/mafintosh\/dns-packet",
            "commit_href":"https:\/\/github.com\/mafintosh\/dns-packet\/commit\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56",
            "commit_sha":"25f15dd0fedc53688b25fd053ebbdffe3d5c1c56",
            "patch":"MULTI",
            "chain_ord":"['25f15dd0fedc53688b25fd053ebbdffe3d5c1c56', '0d0d593f8df4e2712c43957a6c62e95047f12b2d']",
            "before_first_fix_commit":"{'7f35bac5b4680d7bfbb34fbc475ecfdbf9d25092'}",
            "last_fix_commit":"0d0d593f8df4e2712c43957a6c62e95047f12b2d",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/19\/2021, 17:59:39",
            "message":"do trim on encodingLength as well",
            "author":"Mathias Buus",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/mafintosh\/dns-packet\/raw\/25f15dd0fedc53688b25fd053ebbdffe3d5c1c56\/index.js', 'patch': \"@@ -78,7 +78,7 @@ name.decode.bytes = 0\\n \\n name.encodingLength = function (n) {\\n   if (n === '.') return 1\\n-  return Buffer.byteLength(n) + 2\\n+  return Buffer.byteLength(n.replace(\/^\\\\.|\\\\.$\/gm, '')) + 2\\n }\\n \\n const string = {}\"}}",
            "message_norm":"do trim on encodinglength as well",
            "language":"en",
            "entities":"[('encodinglength', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0,
            "patch_content":"From 25f15dd0fedc53688b25fd053ebbdffe3d5c1c56 Mon Sep 17 00:00:00 2001\nFrom: Mathias Buus <mathiasbuus@gmail.com>\nDate: Wed, 19 May 2021 19:59:39 +0200\nSubject: [PATCH] do trim on encodingLength as well\n\n---\n index.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/index.js b\/index.js\nindex b6a52c6..9b9b4de 100644\n--- a\/index.js\n+++ b\/index.js\n@@ -78,7 +78,7 @@ name.decode.bytes = 0\n \n name.encodingLength = function (n) {\n   if (n === '.') return 1\n-  return Buffer.byteLength(n) + 2\n+  return Buffer.byteLength(n.replace(\/^\\.|\\.$\/gm, '')) + 2\n }\n \n const string = {}"
        },
        {
            "index":0,
            "vuln_id":"GHSA-7x2h-3v2v-24p9",
            "cwe_id":"{'CWE-352'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/63447b369973724f0d352a006f25af6ff71ae292'}",
            "dataset":"osv",
            "summary":"Cross-Site Request Forgery in microweber microweber version 1.2.10 and prior is vulnerable to cross-site request forgery.",
            "published_date":"2022-02-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/63447b369973724f0d352a006f25af6ff71ae292",
            "commit_sha":"63447b369973724f0d352a006f25af6ff71ae292",
            "patch":"SINGLE",
            "chain_ord":"['63447b369973724f0d352a006f25af6ff71ae292']",
            "before_first_fix_commit":"{'d61ad9db07ef09652a3deb24c26274da2ded1493'}",
            "last_fix_commit":"63447b369973724f0d352a006f25af6ff71ae292",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/02\/2022, 11:06:34",
            "message":"Update api.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/MicroweberPackages\/Content\/routes\/api.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/63447b369973724f0d352a006f25af6ff71ae292\/src%2FMicroweberPackages%2FContent%2Froutes%2Fapi.php', 'patch': \"@@ -75,7 +75,7 @@\\n \\n         Route::post('content\/delete', function (\\\\Illuminate\\\\Http\\\\Request $request) {\\n             return mw()->content_manager->helpers->delete($request->all());\\n-        });\\n+        }); \\n \\n         Route::get('content\/get_link_admin', function (\\\\Illuminate\\\\Http\\\\Request $request) {\"}}",
            "message_norm":"update api.php",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Content\/routes\/api.php'])",
            "num_files":1.0,
            "patch_content":"From 63447b369973724f0d352a006f25af6ff71ae292 Mon Sep 17 00:00:00 2001\nFrom: Bozhidar Slaveykov <bobi@microweber.com>\nDate: Wed, 2 Feb 2022 13:06:34 +0200\nSubject: [PATCH] Update api.php\n\n---\n src\/MicroweberPackages\/Content\/routes\/api.php | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/src\/MicroweberPackages\/Content\/routes\/api.php b\/src\/MicroweberPackages\/Content\/routes\/api.php\nindex 31043a02dc4..3c57ba9c149 100644\n--- a\/src\/MicroweberPackages\/Content\/routes\/api.php\n+++ b\/src\/MicroweberPackages\/Content\/routes\/api.php\n@@ -75,7 +75,7 @@\n \n         Route::post('content\/delete', function (\\Illuminate\\Http\\Request $request) {\n             return mw()->content_manager->helpers->delete($request->all());\n-        });\n+        }); \n \n         Route::get('content\/get_link_admin', function (\\Illuminate\\Http\\Request $request) {"
        },
        {
            "index":452,
            "vuln_id":"GHSA-43jf-985q-588j",
            "cwe_id":"{'CWE-617'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3d89911481ba6ebe8c88c1c0b595412121e6c645'}",
            "dataset":"osv",
            "summary":"Multiple `CHECK`-fails in `function.cc` in TensowFlow ### Impact\nA malicious user can cause a denial of service by altering a `SavedModel` such that [assertions in `function.cc`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/function.cc) would be falsified and crash the Python interpreter.\n### Patches\nWe have patched the issue in GitHub commits [dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2) and [3d89911481ba6ebe8c88c1c0b595412121e6c645](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3d89911481ba6ebe8c88c1c0b595412121e6c645).\n  \nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
            "commit_sha":"dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
            "patch":"MULTI",
            "chain_ord":"['3d89911481ba6ebe8c88c1c0b595412121e6c645', 'dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2']",
            "before_first_fix_commit":"{'955059813cc325dc1db5e2daa6221271406d4439'}",
            "last_fix_commit":"dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/12\/2021, 16:19:38",
            "message":"Eliminate debug `CHECK`-fail from `function.cc`\n\nPiperOrigin-RevId: 409416119\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'tensorflow\/core\/framework\/function.cc': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2\/tensorflow%2Fcore%2Fframework%2Ffunction.cc', 'patch': '@@ -191,7 +191,11 @@ class FunctionInstantiationHelper {\\n     for (size_t i = 0; i < dtypes.size(); ++i) {\\n       TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),\\n                                  {true, arg_index, 0, false, {dtypes[i]}}));\\n-      DCHECK_EQ(arg_index, result_.nodes.size());\\n+      if (arg_index != result_.nodes.size()) {\\n+        return errors::Internal(\\n+            \"Expected arg_index to be equal to the number of nodes in result.\",\\n+            \" Got \", arg_index, \" and \", result_.nodes.size());\\n+      }\\n       string name = arg_def.name();\\n       if (dtypes.size() > 1) {\\n         strings::StrAppend(&name, \"_\", i);'}}",
            "message_norm":"eliminate debug `check`-fail from `function.cc`\n\npiperorigin-revid: 409416119\nchange-id: i8376ee464d434e9b970ff0ad49edfdaa2a273cfe",
            "language":"en",
            "entities":"[('409416119', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/function.cc'])",
            "num_files":1.0,
            "patch_content":"From dcc21c7bc972b10b6fb95c2fb0f4ab5a59680ec2 Mon Sep 17 00:00:00 2001\nFrom: Mihai Maruseac <mihaimaruseac@google.com>\nDate: Fri, 12 Nov 2021 08:19:38 -0800\nSubject: [PATCH] Eliminate debug `CHECK`-fail from `function.cc`\n\nPiperOrigin-RevId: 409416119\nChange-Id: I8376ee464d434e9b970ff0ad49edfdaa2a273cfe\n---\n tensorflow\/core\/framework\/function.cc | 6 +++++-\n 1 file changed, 5 insertions(+), 1 deletion(-)\n\ndiff --git a\/tensorflow\/core\/framework\/function.cc b\/tensorflow\/core\/framework\/function.cc\nindex 492d9d54fe60eb..b8318ef346ae08 100644\n--- a\/tensorflow\/core\/framework\/function.cc\n+++ b\/tensorflow\/core\/framework\/function.cc\n@@ -191,7 +191,11 @@ class FunctionInstantiationHelper {\n     for (size_t i = 0; i < dtypes.size(); ++i) {\n       TF_RETURN_IF_ERROR(AddItem(strings::StrCat(arg_def.name(), \":\", i),\n                                  {true, arg_index, 0, false, {dtypes[i]}}));\n-      DCHECK_EQ(arg_index, result_.nodes.size());\n+      if (arg_index != result_.nodes.size()) {\n+        return errors::Internal(\n+            \"Expected arg_index to be equal to the number of nodes in result.\",\n+            \" Got \", arg_index, \" and \", result_.nodes.size());\n+      }\n       string name = arg_def.name();\n       if (dtypes.size() > 1) {\n         strings::StrAppend(&name, \"_\", i);"
        },
        {
            "index":78,
            "vuln_id":"GHSA-hwr7-8gxx-fj5p",
            "cwe_id":"{'CWE-476'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `RaggedTensorToTensor` ### Impact\nSending invalid argument for `row_partition_types` of `tf.raw_ops.RaggedTensorToTensor` API results in a null pointer dereference and undefined behavior:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=1,\n  values=10,\n  default_value=21,\n  row_partition_tensors=tf.constant([0,0,0,0]),\n  row_partition_types=[])\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/47a06f40411a69c99f381495f490536972152ac0\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L328) accesses the first element of a user supplied list of values without validating that the provided list is not empty.\n\n### Patches\nWe have patched the issue in GitHub commit [301ae88b331d37a2a16159b65b255f4f9eb39314](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/301ae88b331d37a2a16159b65b255f4f9eb39314",
            "commit_sha":"301ae88b331d37a2a16159b65b255f4f9eb39314",
            "patch":"SINGLE",
            "chain_ord":"['301ae88b331d37a2a16159b65b255f4f9eb39314']",
            "before_first_fix_commit":"{'e787d206757e3e87b04ab7bafa8b1e4130a9f774'}",
            "last_fix_commit":"301ae88b331d37a2a16159b65b255f4f9eb39314",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/12\/2021, 16:59:54",
            "message":"Fix null ptr deref in tf.raw_ops.RaggedTensorToTensor\n\nPiperOrigin-RevId: 384257511\nChange-Id: I0484ad285039d132d6c41b284a7fcdd2b774a38e",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/301ae88b331d37a2a16159b65b255f4f9eb39314\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -348,6 +348,9 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n   Status GetFirstDimensionSize(OpKernelContext* context, INDEX_TYPE* result) {\\n     const Tensor first_partition_tensor =\\n         context->input(kFirstPartitionInputIndex);\\n+    if (row_partition_types_.empty()) {\\n+      return errors::InvalidArgument(\"No row_partition_types given.\");\\n+    }\\n     const RowPartitionType first_partition_type = row_partition_types_[0];\\n     switch (first_partition_type) {\\n       case RowPartitionType::FIRST_DIM_SIZE:'}}",
            "message_norm":"fix null ptr deref in tf.raw_ops.raggedtensortotensor\n\npiperorigin-revid: 384257511\nchange-id: i0484ad285039d132d6c41b284a7fcdd2b774a38e",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('384257511', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])",
            "num_files":1.0,
            "patch_content":"From 301ae88b331d37a2a16159b65b255f4f9eb39314 Mon Sep 17 00:00:00 2001\nFrom: Laura Pak <lpak@google.com>\nDate: Mon, 12 Jul 2021 09:59:54 -0700\nSubject: [PATCH] Fix null ptr deref in tf.raw_ops.RaggedTensorToTensor\n\nPiperOrigin-RevId: 384257511\nChange-Id: I0484ad285039d132d6c41b284a7fcdd2b774a38e\n---\n tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc | 3 +++\n 1 file changed, 3 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\nindex b79a07e67ba913..1749a6e24784d6 100644\n--- a\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\n+++ b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\n@@ -348,6 +348,9 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\n   Status GetFirstDimensionSize(OpKernelContext* context, INDEX_TYPE* result) {\n     const Tensor first_partition_tensor =\n         context->input(kFirstPartitionInputIndex);\n+    if (row_partition_types_.empty()) {\n+      return errors::InvalidArgument(\"No row_partition_types given.\");\n+    }\n     const RowPartitionType first_partition_type = row_partition_types_[0];\n     switch (first_partition_type) {\n       case RowPartitionType::FIRST_DIM_SIZE:"
        },
        {
            "index":126,
            "vuln_id":"GHSA-jr9c-h74f-2v28",
            "cwe_id":"{'CWE-285', 'CWE-863'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/go-gitea\/gitea\/commit\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2'}",
            "dataset":"osv",
            "summary":"Improper Authorization in Gitea Gitea 1.16.3 and prior is vulnerable to improper authorization. A patch is available and is anticipated to be part of the 1.16.4 release.",
            "published_date":"2022-03-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/go-gitea\/gitea",
            "commit_href":"https:\/\/github.com\/go-gitea\/gitea\/commit\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "commit_sha":"1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "patch":"SINGLE",
            "chain_ord":"['1314f38b59748397b3429fb9bc9f9d6bac85d2f2']",
            "before_first_fix_commit":"{'7443213707bde01ee8343d49b26824dc50e1ac18'}",
            "last_fix_commit":"1314f38b59748397b3429fb9bc9f9d6bac85d2f2",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/10\/2022, 02:00:05",
            "message":"fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\r\n\r\nCo-authored-by: ysf <34326+ysf@users.noreply.github.com>",
            "author":"zeripath",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'modules\/auth\/pam\/pam.go': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/go-gitea\/gitea\/raw\/1314f38b59748397b3429fb9bc9f9d6bac85d2f2\/modules%2Fauth%2Fpam%2Fpam.go', 'patch': '@@ -34,6 +34,10 @@ func Auth(serviceName, userName, passwd string) (string, error) {\\n \\tif err = t.Authenticate(0); err != nil {\\n \\t\\treturn \"\", err\\n \\t}\\n+\\t\\n+\\tif err = t.AcctMgmt(0); err != nil {\\n+\\t  return \"\", err\\n+  }\\n \\n \\t\/\/ PAM login names might suffer transformations in the PAM stack.\\n \\t\/\/ We should take whatever the PAM stack returns for it.'}}",
            "message_norm":"fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\r\n\r\nco-authored-by: ysf <34326+ysf@users.noreply.github.com>",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('#19040', 'ISSUE', ''), ('https:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/auth\/pam\/pam.go'])",
            "num_files":1.0,
            "patch_content":"From 1314f38b59748397b3429fb9bc9f9d6bac85d2f2 Mon Sep 17 00:00:00 2001\nFrom: zeripath <art27@cantab.net>\nDate: Thu, 10 Mar 2022 02:00:05 +0000\nSubject: [PATCH] fix pam authorization (#19040)\n\nhttps:\/\/huntr.dev\/bounties\/8d221f92-b2b1-4878-bc31-66ff272e5ceb\/\n\nCo-authored-by: ysf <34326+ysf@users.noreply.github.com>\n---\n modules\/auth\/pam\/pam.go | 4 ++++\n 1 file changed, 4 insertions(+)\n\ndiff --git a\/modules\/auth\/pam\/pam.go b\/modules\/auth\/pam\/pam.go\nindex 30f13e440bb70..0a3d8e9f91a7d 100644\n--- a\/modules\/auth\/pam\/pam.go\n+++ b\/modules\/auth\/pam\/pam.go\n@@ -34,6 +34,10 @@ func Auth(serviceName, userName, passwd string) (string, error) {\n \tif err = t.Authenticate(0); err != nil {\n \t\treturn \"\", err\n \t}\n+\t\n+\tif err = t.AcctMgmt(0); err != nil {\n+\t  return \"\", err\n+  }\n \n \t\/\/ PAM login names might suffer transformations in the PAM stack.\n \t\/\/ We should take whatever the PAM stack returns for it."
        },
        {
            "index":677,
            "vuln_id":"GHSA-4q2w-rw7m-xqw6",
            "cwe_id":"{'CWE-807'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/sony\/nnabla\/commit\/e87347648ab7210529a0e60f0849680de8e9b63a'}",
            "dataset":"osv",
            "summary":"Sony Neural Network Libraries reliance on untrusted inputs prior to v1.0.10 nbla\/logger.cpp in libnnabla.a in Sony Neural Network Libraries (aka nnabla) prior to v1.0.10 relies on the HOME environment variable, which might be untrusted.",
            "published_date":"2022-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/sony\/nnabla",
            "commit_href":"https:\/\/github.com\/sony\/nnabla\/commit\/e87347648ab7210529a0e60f0849680de8e9b63a",
            "commit_sha":"e87347648ab7210529a0e60f0849680de8e9b63a",
            "patch":"SINGLE",
            "chain_ord":"['e87347648ab7210529a0e60f0849680de8e9b63a']",
            "before_first_fix_commit":"{'b164980f08f3ed7740439b51d4e5ca79db0d149e', '05cd50648786cc044d3b131239299f91f399e3b8'}",
            "last_fix_commit":"e87347648ab7210529a0e60f0849680de8e9b63a",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/15\/2018, 08:24:39",
            "message":"Merge pull request #299 from sony\/feature\/20181107-fix-getenv-usage\n\nAvoid get HOME dir with getenv.",
            "author":"Takuya Narihira",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 6, 'total': 12}",
            "files":"{'src\/nbla\/logger.cpp': {'additions': 6, 'deletions': 6, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sony\/nnabla\/raw\/e87347648ab7210529a0e60f0849680de8e9b63a\/src%2Fnbla%2Flogger.cpp', 'patch': '@@ -48,21 +48,21 @@ std::shared_ptr<spdlog::logger> get_logger(void) {\\n       logfile = logpath + \"\\\\\\\\nbla_lib.log\";\\n     }\\n #else\\n-    const char *homedir = getenv(\"HOME\");\\n+    const char *homedir = nullptr;\\n     if (homedir == nullptr) {\\n       struct passwd *pw = getpwuid(getuid());\\n       if (pw != nullptr) {\\n         homedir = pw->pw_dir;\\n+        logpath = homedir;\\n+        logpath += \"\/nnabla_data\";\\n+        mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\\n       }\\n     }\\n     if (homedir == nullptr) {\\n-      logpath = \"\/tmp_\";\\n+      logpath = \"\/tmp\/nnabla_\";\\n       logpath += getuid();\\n-    } else {\\n-      logpath = homedir;\\n+      mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\\n     }\\n-    logpath += \"\/nnabla_data\";\\n-    mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\\n     logpath += \"\/log\";\\n     mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\\n     logfile = logpath + \"\/nbla_lib.log\";'}}",
            "message_norm":"merge pull request #299 from sony\/feature\/20181107-fix-getenv-usage\n\navoid get home dir with getenv.",
            "language":"en",
            "entities":"[('#299', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/nbla\/logger.cpp'])",
            "num_files":1.0,
            "patch_content":"From 05cd50648786cc044d3b131239299f91f399e3b8 Mon Sep 17 00:00:00 2001\nFrom: Yukio Oobuchi <Yukio.Oobuchi@sony.com>\nDate: Thu, 8 Nov 2018 21:27:52 +0900\nSubject: [PATCH] Avoid get HOME dir with getenv.\n\n---\n src\/nbla\/logger.cpp | 12 ++++++------\n 1 file changed, 6 insertions(+), 6 deletions(-)\n\ndiff --git a\/src\/nbla\/logger.cpp b\/src\/nbla\/logger.cpp\nindex 758582995..6740fb25e 100644\n--- a\/src\/nbla\/logger.cpp\n+++ b\/src\/nbla\/logger.cpp\n@@ -48,21 +48,21 @@ std::shared_ptr<spdlog::logger> get_logger(void) {\n       logfile = logpath + \"\\\\nbla_lib.log\";\n     }\n #else\n-    const char *homedir = getenv(\"HOME\");\n+    const char *homedir = nullptr;\n     if (homedir == nullptr) {\n       struct passwd *pw = getpwuid(getuid());\n       if (pw != nullptr) {\n         homedir = pw->pw_dir;\n+        logpath = homedir;\n+        logpath += \"\/nnabla_data\";\n+        mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\n       }\n     }\n     if (homedir == nullptr) {\n-      logpath = \"\/tmp_\";\n+      logpath = \"\/tmp\/nnabla_\";\n       logpath += getuid();\n-    } else {\n-      logpath = homedir;\n+      mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\n     }\n-    logpath += \"\/nnabla_data\";\n-    mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\n     logpath += \"\/log\";\n     mkdir(logpath.c_str(), S_IRWXU | S_IRWXG | S_IROTH | S_IXOTH);\n     logfile = logpath + \"\/nbla_lib.log\";"
        },
        {
            "index":70,
            "vuln_id":"GHSA-4r65-35qq-ch8j",
            "cwe_id":"{'CWE-209'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/ansible\/ansible\/commit\/fe28767970c8ec62aabe493c46b53a5de1e5fac0'}",
            "dataset":"osv",
            "summary":"Ansible discloses sensitive information in traceback error message Ansible is an IT automation system that handles configuration management, application deployment, cloud provisioning, ad-hoc task execution, network automation, and multi-node orchestration. A flaw was found in Ansible Engine's ansible-connection module where sensitive information, such as the Ansible user credentials, is disclosed by default in the traceback error message when Ansible receives an unexpected response from `set_options`. The highest threat from this vulnerability is confidentiality.",
            "published_date":"2022-03-04",
            "chain_len":1,
            "project":"https:\/\/github.com\/ansible\/ansible",
            "commit_href":"https:\/\/github.com\/ansible\/ansible\/commit\/fe28767970c8ec62aabe493c46b53a5de1e5fac0",
            "commit_sha":"fe28767970c8ec62aabe493c46b53a5de1e5fac0",
            "patch":"SINGLE",
            "chain_ord":"['fe28767970c8ec62aabe493c46b53a5de1e5fac0']",
            "before_first_fix_commit":"{'6d2398db280f145eed70a6618282c9db630a380a'}",
            "last_fix_commit":"fe28767970c8ec62aabe493c46b53a5de1e5fac0",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/07\/2021, 20:43:11",
            "message":"Fixed exposed credentials in exception\n\nUnder certain conditions, sensitive connection parameters are shown in tracebacks when Ansible receives an unexpected response (in my case `None`) from `set_options` in ansible-connection. This patch creates a list of sensitive connection parameter names from `ansible.constants`, pulls a list of those values in the `params` that are about to be dumped to the screen and log file, and sends the `params` and list of `sensitive_values` to the `module_utils.common.parameters.remove_values` function for processing to hide them before being exposed.",
            "author":"dalrrard",
            "comments":null,
            "stats":"{'additions': 18, 'deletions': 1, 'total': 19}",
            "files":"{'lib\/ansible\/module_utils\/connection.py': {'additions': 18, 'deletions': 1, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ansible\/ansible\/raw\/fe28767970c8ec62aabe493c46b53a5de1e5fac0\/lib%2Fansible%2Fmodule_utils%2Fconnection.py', 'patch': '@@ -38,10 +38,13 @@\\n import uuid\\n \\n from functools import partial\\n+from ansible import constants as C\\n from ansible.module_utils._text import to_bytes, to_text\\n from ansible.module_utils.common.json import AnsibleJSONEncoder\\n+from ansible.module_utils.common.parameters import remove_values\\n from ansible.module_utils.six import iteritems\\n from ansible.module_utils.six.moves import cPickle\\n+from ansible.utils.helpers import deduplicate_list\\n \\n \\n def write_to_file_descriptor(fd, obj):\\n@@ -163,12 +166,26 @@ def _exec_jsonrpc(self, name, *args, **kwargs):\\n         try:\\n             response = json.loads(out)\\n         except ValueError:\\n-            params = [repr(arg) for arg in args] + [\\'{0}={1!r}\\'.format(k, v) for k, v in iteritems(kwargs)]\\n+            sensitive_keys = list(\\n+                    C.MAGIC_VARIABLE_MAPPING[\"password\"]\\n+                    + C.MAGIC_VARIABLE_MAPPING[\"private_key_file\"]\\n+                    + C.MAGIC_VARIABLE_MAPPING[\"become_pass\"]\\n+            )\\n+            sensitive_values = [\\n+                v2 \\n+                for k, v in iteritems(kwargs) \\n+                for k2, v2 in iteritems(v) \\n+                if k2 in sensitive_keys\\n+            ]\\n+            params = [repr(remove_values(arg, sensitive_values)) for arg in args] + [\\n+                \"{0}={1!r}\".format(k, remove_values(v, sensitive_values)) \\n+                for k, v in iteritems(kwargs)]\\n             params = \\', \\'.join(params)\\n             raise ConnectionError(\\n                 \"Unable to decode JSON from response to {0}({1}). Received \\'{2}\\'.\".format(name, params, out)\\n             )\\n \\n+\\n         if response[\\'id\\'] != reqid:\\n             raise ConnectionError(\\'invalid json-rpc id received\\')\\n         if \"result_type\" in response:'}}",
            "message_norm":"fixed exposed credentials in exception\n\nunder certain conditions, sensitive connection parameters are shown in tracebacks when ansible receives an unexpected response (in my case `none`) from `set_options` in ansible-connection. this patch creates a list of sensitive connection parameter names from `ansible.constants`, pulls a list of those values in the `params` that are about to be dumped to the screen and log file, and sends the `params` and list of `sensitive_values` to the `module_utils.common.parameters.remove_values` function for processing to hide them before being exposed.",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('sensitive', 'SECWORD', ''), ('sensitive', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/ansible\/module_utils\/connection.py'])",
            "num_files":1.0,
            "patch_content":"From fe28767970c8ec62aabe493c46b53a5de1e5fac0 Mon Sep 17 00:00:00 2001\nFrom: dalrrard <8892319+dalrrard@users.noreply.github.com>\nDate: Mon, 7 Jun 2021 15:43:11 -0500\nSubject: [PATCH] Fixed exposed credentials in exception\n\nUnder certain conditions, sensitive connection parameters are shown in tracebacks when Ansible receives an unexpected response (in my case `None`) from `set_options` in ansible-connection. This patch creates a list of sensitive connection parameter names from `ansible.constants`, pulls a list of those values in the `params` that are about to be dumped to the screen and log file, and sends the `params` and list of `sensitive_values` to the `module_utils.common.parameters.remove_values` function for processing to hide them before being exposed.\n---\n lib\/ansible\/module_utils\/connection.py | 19 ++++++++++++++++++-\n 1 file changed, 18 insertions(+), 1 deletion(-)\n\ndiff --git a\/lib\/ansible\/module_utils\/connection.py b\/lib\/ansible\/module_utils\/connection.py\nindex a76fdb6bcc3c21..f828860f963ff0 100644\n--- a\/lib\/ansible\/module_utils\/connection.py\n+++ b\/lib\/ansible\/module_utils\/connection.py\n@@ -38,10 +38,13 @@\n import uuid\n \n from functools import partial\n+from ansible import constants as C\n from ansible.module_utils._text import to_bytes, to_text\n from ansible.module_utils.common.json import AnsibleJSONEncoder\n+from ansible.module_utils.common.parameters import remove_values\n from ansible.module_utils.six import iteritems\n from ansible.module_utils.six.moves import cPickle\n+from ansible.utils.helpers import deduplicate_list\n \n \n def write_to_file_descriptor(fd, obj):\n@@ -163,12 +166,26 @@ def _exec_jsonrpc(self, name, *args, **kwargs):\n         try:\n             response = json.loads(out)\n         except ValueError:\n-            params = [repr(arg) for arg in args] + ['{0}={1!r}'.format(k, v) for k, v in iteritems(kwargs)]\n+            sensitive_keys = list(\n+                    C.MAGIC_VARIABLE_MAPPING[\"password\"]\n+                    + C.MAGIC_VARIABLE_MAPPING[\"private_key_file\"]\n+                    + C.MAGIC_VARIABLE_MAPPING[\"become_pass\"]\n+            )\n+            sensitive_values = [\n+                v2 \n+                for k, v in iteritems(kwargs) \n+                for k2, v2 in iteritems(v) \n+                if k2 in sensitive_keys\n+            ]\n+            params = [repr(remove_values(arg, sensitive_values)) for arg in args] + [\n+                \"{0}={1!r}\".format(k, remove_values(v, sensitive_values)) \n+                for k, v in iteritems(kwargs)]\n             params = ', '.join(params)\n             raise ConnectionError(\n                 \"Unable to decode JSON from response to {0}({1}). Received '{2}'.\".format(name, params, out)\n             )\n \n+\n         if response['id'] != reqid:\n             raise ConnectionError('invalid json-rpc id received')\n         if \"result_type\" in response:"
        },
        {
            "index":869,
            "vuln_id":"GHSA-pjc4-3w99-j7v4",
            "cwe_id":"{'CWE-601'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/briancappello\/flask-unchained\/commit\/2bfeedf1bc31df851cab8c66df0c432b10406aad', 'https:\/\/github.com\/briancappello\/flask-unchained\/commit\/71e36b28166f9ffbe0a991f51127f0984f7e6a40'}",
            "dataset":"osv",
            "summary":"Open redirect in Flask-Unchained This affects the package Flask-Unchained before 0.9.0. When using the the _validate_redirect_url function, it is possible to bypass URL validation and redirect a user to an arbitrary URL by providing multiple back slashes such as \\\\\\evil.com\/path. This vulnerability is only exploitable if an alternative WSGI server other than Werkzeug is used, or the default behaviour of Werkzeug is modified using 'autocorrect_location_header=False.",
            "published_date":"2021-06-15",
            "chain_len":2,
            "project":"https:\/\/github.com\/briancappello\/flask-unchained",
            "commit_href":"https:\/\/github.com\/briancappello\/flask-unchained\/commit\/2bfeedf1bc31df851cab8c66df0c432b10406aad",
            "commit_sha":"2bfeedf1bc31df851cab8c66df0c432b10406aad",
            "patch":"MULTI",
            "chain_ord":"['2bfeedf1bc31df851cab8c66df0c432b10406aad', '71e36b28166f9ffbe0a991f51127f0984f7e6a40']",
            "before_first_fix_commit":"{'2bfeedf1bc31df851cab8c66df0c432b10406aad'}",
            "last_fix_commit":"71e36b28166f9ffbe0a991f51127f0984f7e6a40",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/27\/2021, 17:47:52",
            "message":"security fixes",
            "author":"Brian Cappello",
            "comments":null,
            "stats":"{'additions': 27, 'deletions': 8, 'total': 35}",
            "files":"{'flask_unchained\/bundles\/controller\/utils.py': {'additions': 27, 'deletions': 8, 'changes': 35, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/briancappello\/flask-unchained\/raw\/2bfeedf1bc31df851cab8c66df0c432b10406aad\/flask_unchained%2Fbundles%2Fcontroller%2Futils.py', 'patch': '@@ -6,7 +6,7 @@\\n from flask_unchained._compat import is_local_proxy\\n from py_meta_utils import _missing\\n from typing import *\\n-from urllib.parse import urlsplit\\n+from urllib.parse import urlsplit, quote as urlquote\\n from werkzeug.routing import BuildError, UnicodeConverter\\n \\n from .attr_constants import CONTROLLER_ROUTES_ATTR, REMOVE_SUFFIXES_ATTR\\n@@ -183,6 +183,11 @@ def method_name_to_url(method_name) -> str:\\n     return \\'\/\\' + kebab_case(method_name).strip(\\'-\\')\\n \\n \\n+def encode_non_url_reserved_characters(url):\\n+    # safe url reserved characters: https:\/\/datatracker.ietf.org\/doc\/html\/rfc3986#section-2.2\\n+    return urlquote(url, safe=\":\/?#[]@!$&\\'()*+,;=\")\\n+\\n+\\n # modified from flask_security.utils.get_post_action_redirect\\n def redirect(where: Optional[str] = None,\\n              default: Optional[str] = None,\\n@@ -235,7 +240,7 @@ def redirect(where: Optional[str] = None,\\n \\n     for url in urls:\\n         if _validate_redirect_url(url, _external_host):\\n-            return flask_redirect(url)\\n+            return flask_redirect(encode_non_url_reserved_characters(url))\\n     return flask_redirect(\\'\/\\')\\n \\n \\n@@ -289,15 +294,29 @@ def _url_for(endpoint: str, **values) -> Union[str, None]:\\n \\n # modified from flask_security.utils.validate_redirect_url\\n def _validate_redirect_url(url, _external_host=None):\\n-    if url is None or url.strip() == \\'\\':\\n+    url = (url or \\'\\').strip().replace(\\'\\\\\\\\\\', \\'\/\\')\\n+\\n+    # reject empty urls and urls starting with 3+ slashes or a control character\\n+    if not url or url.startswith(\\'\/\/\/\\') or ord(url[0]) <= 32:\\n         return False\\n+\\n     url_next = urlsplit(url)\\n     url_base = urlsplit(request.host_url)\\n-    external_host = _external_host or current_app.config.get(\\'EXTERNAL_SERVER_NAME\\', \\'\\')\\n-    if ((url_next.netloc or url_next.scheme)\\n-            and url_next.netloc != url_base.netloc\\n-            and url_next.netloc not in external_host):\\n-        return False\\n+    if url_next.netloc or url_next.scheme:\\n+        # require both netloc and scheme\\n+        if not url_next.netloc or not url_next.scheme:\\n+            return False\\n+\\n+        # if external host, require same netloc and scheme\\n+        external_host = _external_host or current_app.config.get(\\'EXTERNAL_SERVER_NAME\\', \\'\\')\\n+        if external_host:\\n+            url_external = urlsplit(external_host)\\n+            if url_next.netloc == url_external.netloc and url_next.scheme == url_external.scheme:\\n+                return True\\n+\\n+        # require same netloc and scheme\\n+        if url_next.netloc != url_base.netloc or url_next.scheme != url_base.scheme:\\n+            return False\\n     return True'}}",
            "message_norm":"security fixes",
            "language":"en",
            "entities":"[('security', 'SECWORD', ''), ('fixes', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['flask_unchained\/bundles\/controller\/utils.py'])",
            "num_files":1.0,
            "patch_content":"From 2bfeedf1bc31df851cab8c66df0c432b10406aad Mon Sep 17 00:00:00 2001\nFrom: Brian Cappello <briancappello@gmail.com>\nDate: Thu, 27 May 2021 13:47:52 -0400\nSubject: [PATCH] security fixes\n\n---\n flask_unchained\/bundles\/controller\/utils.py | 35 ++++++++++++++++-----\n 1 file changed, 27 insertions(+), 8 deletions(-)\n\ndiff --git a\/flask_unchained\/bundles\/controller\/utils.py b\/flask_unchained\/bundles\/controller\/utils.py\nindex ae9a2db2..c9946d97 100644\n--- a\/flask_unchained\/bundles\/controller\/utils.py\n+++ b\/flask_unchained\/bundles\/controller\/utils.py\n@@ -6,7 +6,7 @@\n from flask_unchained._compat import is_local_proxy\n from py_meta_utils import _missing\n from typing import *\n-from urllib.parse import urlsplit\n+from urllib.parse import urlsplit, quote as urlquote\n from werkzeug.routing import BuildError, UnicodeConverter\n \n from .attr_constants import CONTROLLER_ROUTES_ATTR, REMOVE_SUFFIXES_ATTR\n@@ -183,6 +183,11 @@ def method_name_to_url(method_name) -> str:\n     return '\/' + kebab_case(method_name).strip('-')\n \n \n+def encode_non_url_reserved_characters(url):\n+    # safe url reserved characters: https:\/\/datatracker.ietf.org\/doc\/html\/rfc3986#section-2.2\n+    return urlquote(url, safe=\":\/?#[]@!$&'()*+,;=\")\n+\n+\n # modified from flask_security.utils.get_post_action_redirect\n def redirect(where: Optional[str] = None,\n              default: Optional[str] = None,\n@@ -235,7 +240,7 @@ def redirect(where: Optional[str] = None,\n \n     for url in urls:\n         if _validate_redirect_url(url, _external_host):\n-            return flask_redirect(url)\n+            return flask_redirect(encode_non_url_reserved_characters(url))\n     return flask_redirect('\/')\n \n \n@@ -289,15 +294,29 @@ def _url_for(endpoint: str, **values) -> Union[str, None]:\n \n # modified from flask_security.utils.validate_redirect_url\n def _validate_redirect_url(url, _external_host=None):\n-    if url is None or url.strip() == '':\n+    url = (url or '').strip().replace('\\\\', '\/')\n+\n+    # reject empty urls and urls starting with 3+ slashes or a control character\n+    if not url or url.startswith('\/\/\/') or ord(url[0]) <= 32:\n         return False\n+\n     url_next = urlsplit(url)\n     url_base = urlsplit(request.host_url)\n-    external_host = _external_host or current_app.config.get('EXTERNAL_SERVER_NAME', '')\n-    if ((url_next.netloc or url_next.scheme)\n-            and url_next.netloc != url_base.netloc\n-            and url_next.netloc not in external_host):\n-        return False\n+    if url_next.netloc or url_next.scheme:\n+        # require both netloc and scheme\n+        if not url_next.netloc or not url_next.scheme:\n+            return False\n+\n+        # if external host, require same netloc and scheme\n+        external_host = _external_host or current_app.config.get('EXTERNAL_SERVER_NAME', '')\n+        if external_host:\n+            url_external = urlsplit(external_host)\n+            if url_next.netloc == url_external.netloc and url_next.scheme == url_external.scheme:\n+                return True\n+\n+        # require same netloc and scheme\n+        if url_next.netloc != url_base.netloc or url_next.scheme != url_base.scheme:\n+            return False\n     return True"
        },
        {
            "index":590,
            "vuln_id":"GHSA-rgvq-pcvf-hx75",
            "cwe_id":"{'CWE-131'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e'}",
            "dataset":"osv",
            "summary":"Heap OOB and null pointer dereference in `RaggedTensorToTensor` ### Impact\nDue to lack of validation in `tf.raw_ops.RaggedTensorToTensor`, an attacker can exploit an undefined behavior if input arguments are empty:\n\n```python\nimport tensorflow as tf\n\nshape = tf.constant([-1, -1], shape=[2], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = tf.constant(404, dtype=tf.int64)\nrow = tf.constant([269, 404, 0, 0, 0, 0, 0], shape=[7], dtype=tf.int64)\nrows = [row]\ntypes = ['ROW_SPLITS']\n\ntf.raw_ops.RaggedTensorToTensor(\n  shape=shape, values=values, default_value=default_value, \n  row_partition_tensors=rows, row_partition_types=types)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc#L356-L360) only checks that one of the tensors is not empty, but does not check for the other ones.\n\nThere are multiple `DCHECK` validations to prevent heap OOB, but these are no-op in release builds, hence they don't prevent anything.\n\n### Patches\nWe have patched the issue in GitHub commit [b761c9b652af2107cfbc33efd19be0ce41daa33e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b761c9b652af2107cfbc33efd19be0ce41daa33e) followed by GitHub commit [f94ef358bb3e91d517446454edff6535bcfe8e4a](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a) and GitHub commit [c4d7afb6a5986b04505aca4466ae1951686c80f6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c4d7afb6a5986b04505aca4466ae1951686c80f6).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick these commits on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":3,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f94ef358bb3e91d517446454edff6535bcfe8e4a",
            "commit_sha":"f94ef358bb3e91d517446454edff6535bcfe8e4a",
            "patch":"MULTI",
            "chain_ord":"['f94ef358bb3e91d517446454edff6535bcfe8e4a', 'b761c9b652af2107cfbc33efd19be0ce41daa33e', 'c4d7afb6a5986b04505aca4466ae1951686c80f6']",
            "before_first_fix_commit":"{'50034ad2d55b10eb9d4593374546710b12f134e1'}",
            "last_fix_commit":"c4d7afb6a5986b04505aca4466ae1951686c80f6",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/13\/2021, 21:54:18",
            "message":"Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK in `tensor.cc`.\n\nPiperOrigin-RevId: 368300502\nChange-Id: I91255d23c4bfd3aa3c029aac773937c09daf3c64",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/f94ef358bb3e91d517446454edff6535bcfe8e4a\/tensorflow%2Fcore%2Fkernels%2Fragged_tensor_to_tensor_op.cc', 'patch': '@@ -345,6 +345,11 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\\n \\n   void Compute(OpKernelContext* context) override {\\n     INDEX_TYPE first_dimension;\\n+    const Tensor first_partition_tensor =\\n+        context->input(kFirstPartitionInputIndex);\\n+    OP_REQUIRES(context, first_partition_tensor.NumElements() > 0,\\n+                errors::InvalidArgument(\"Invalid first partition input. Tensor \"\\n+                                        \"requires at least one element.\"));\\n     OP_REQUIRES_OK(context, GetFirstDimensionSize(context, &first_dimension));\\n     vector<INDEX_TYPE> output_size;\\n     OP_REQUIRES_OK(context,'}}",
            "message_norm":"fix `tf.raw_ops.raggedtensortotensor` failing check in `tensor.cc`.\n\npiperorigin-revid: 368300502\nchange-id: i91255d23c4bfd3aa3c029aac773937c09daf3c64",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('368300502', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc'])",
            "num_files":1.0,
            "patch_content":"From f94ef358bb3e91d517446454edff6535bcfe8e4a Mon Sep 17 00:00:00 2001\nFrom: Amit Patankar <amitpatankar@google.com>\nDate: Tue, 13 Apr 2021 14:54:18 -0700\nSubject: [PATCH] Fix `tf.raw_ops.RaggedTensorToTensor` failing CHECK in\n `tensor.cc`.\n\nPiperOrigin-RevId: 368300502\nChange-Id: I91255d23c4bfd3aa3c029aac773937c09daf3c64\n---\n tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc | 5 +++++\n 1 file changed, 5 insertions(+)\n\ndiff --git a\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\nindex 28898c65ca7976..433d910f6090cd 100644\n--- a\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\n+++ b\/tensorflow\/core\/kernels\/ragged_tensor_to_tensor_op.cc\n@@ -345,6 +345,11 @@ class RaggedTensorToTensorBaseOp : public OpKernel {\n \n   void Compute(OpKernelContext* context) override {\n     INDEX_TYPE first_dimension;\n+    const Tensor first_partition_tensor =\n+        context->input(kFirstPartitionInputIndex);\n+    OP_REQUIRES(context, first_partition_tensor.NumElements() > 0,\n+                errors::InvalidArgument(\"Invalid first partition input. Tensor \"\n+                                        \"requires at least one element.\"));\n     OP_REQUIRES_OK(context, GetFirstDimensionSize(context, &first_dimension));\n     vector<INDEX_TYPE> output_size;\n     OP_REQUIRES_OK(context,"
        },
        {
            "index":465,
            "vuln_id":"GHSA-7257-96vg-qf6x",
            "cwe_id":"{'CWE-74', 'CWE-94'}",
            "score":8.5,
            "chain":"{'https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\/commits\/e269ea0d3bc88417163c18431b1df38a9be92bfc'}",
            "dataset":"osv",
            "summary":"Remote Code Execution in Red Discord Bot ### Impact\nA RCE exploit has been discovered in the Streams module: this exploit allows Discord users with specifically crafted \"going live\" messages to inject code into the Streams module's going live message. By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis critical exploit has been fixed on version ``3.3.12`` & ``3.4``.\n\n### Workarounds\nUnloading the Streams module with ``unload streams`` can render this exploit not accessible. We still highly recommend updating to ``3.3.12`` or ``3.4`` to completely patch this issue.\n\n### References\n* https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-DiscordBot](https:\/\/github.com\/Cog-Creators\/Red-DiscordBot)\n* Over on our [Discord server](https:\/\/discord.gg\/red)",
            "published_date":"2020-08-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/Cog-Creators\/Red-DiscordBot",
            "commit_href":"https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\/commits\/e269ea0d3bc88417163c18431b1df38a9be92bfc",
            "commit_sha":"e269ea0d3bc88417163c18431b1df38a9be92bfc",
            "patch":"SINGLE",
            "chain_ord":"['e269ea0d3bc88417163c18431b1df38a9be92bfc']",
            "before_first_fix_commit":"{'9798538438ceb37c0592aa358f6f0c5784878d71'}",
            "last_fix_commit":"e269ea0d3bc88417163c18431b1df38a9be92bfc",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/11\/2020, 22:40:06",
            "message":"Added consume all to streams.",
            "author":"Kowlin",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 9, 'total': 22}",
            "files":"{'redbot\/cogs\/streams\/streams.py': {'additions': 13, 'deletions': 9, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/raw\/e269ea0d3bc88417163c18431b1df38a9be92bfc\/redbot%2Fcogs%2Fstreams%2Fstreams.py', 'patch': '@@ -497,14 +497,13 @@ async def message(self, ctx: commands.Context):\\n \\n     @message.command(name=\"mention\")\\n     @commands.guild_only()\\n-    async def with_mention(self, ctx: commands.Context, message: str = None):\\n+    async def with_mention(self, ctx: commands.Context, *, message: str = None):\\n         \"\"\"Set stream alert message when mentions are enabled.\\n \\n         Use `{mention}` in the message to insert the selected mentions.\\n+        Use `{stream}` in the message to insert the channel or user name.\\n \\n-        Use `{stream.name}` in the message to insert the channel or user name.\\n-\\n-        For example: `[p]streamset message mention \"{mention}, {stream.name} is live!\"`\\n+        For example: `[p]streamset message mention \"{mention}, {stream} is live!\"`\\n         \"\"\"\\n         if message is not None:\\n             guild = ctx.guild\\n@@ -515,12 +514,12 @@ async def with_mention(self, ctx: commands.Context, message: str = None):\\n \\n     @message.command(name=\"nomention\")\\n     @commands.guild_only()\\n-    async def without_mention(self, ctx: commands.Context, message: str = None):\\n+    async def without_mention(self, ctx: commands.Context, *, message: str = None):\\n         \"\"\"Set stream alert message when mentions are disabled.\\n \\n-        Use `{stream.name}` in the message to insert the channel or user name.\\n+        Use `{stream}` in the message to insert the channel or user name.\\n \\n-        For example: `[p]streamset message nomention \"{stream.name} is live!\"`\\n+        For example: `[p]streamset message nomention \"{stream} is live!\"`\\n         \"\"\"\\n         if message is not None:\\n             guild = ctx.guild\\n@@ -720,7 +719,10 @@ async def check_streams(self):\\n                                 channel.guild\\n                             ).live_message_mention()\\n                             if alert_msg:\\n-                                content = alert_msg.format(mention=mention_str, stream=stream)\\n+                                content = alert_msg  # Stop bad things from happening here...\\n+                                content = content.replace(\"{stream.name}\", str(stream.name))  # Backwards compatability\\n+                                content = content.replace(\"{stream}\", str(stream.name))\\n+                                content = content.replace(\"{mention}\", mention_str)\\n                             else:\\n                                 content = _(\"{mention}, {stream} is live!\").format(\\n                                     mention=mention_str,\\n@@ -733,7 +735,9 @@ async def check_streams(self):\\n                                 channel.guild\\n                             ).live_message_nomention()\\n                             if alert_msg:\\n-                                content = alert_msg.format(stream=stream)\\n+                                content = alert_msg  # Stop bad things from happening here...\\n+                                content = content.replace(\"{stream.name}\", str(stream.name))  # Backwards compatability\\n+                                content = content.replace(\"{stream}\", str(stream.name))\\n                             else:\\n                                 content = _(\"{stream} is live!\").format(\\n                                     stream=escape('}}",
            "message_norm":"added consume all to streams.",
            "language":"en",
            "entities":"[('added', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['redbot\/cogs\/streams\/streams.py'])",
            "num_files":1.0,
            "patch_content":"From e269ea0d3bc88417163c18431b1df38a9be92bfc Mon Sep 17 00:00:00 2001\nFrom: Kowlin <boxedpp@gmail.com>\nDate: Wed, 12 Aug 2020 00:40:06 +0200\nSubject: [PATCH] Added consume all to streams.\n\n---\n redbot\/cogs\/streams\/streams.py | 22 +++++++++++++---------\n 1 file changed, 13 insertions(+), 9 deletions(-)\n\ndiff --git a\/redbot\/cogs\/streams\/streams.py b\/redbot\/cogs\/streams\/streams.py\nindex 5570afc9e53..1aa582e8675 100644\n--- a\/redbot\/cogs\/streams\/streams.py\n+++ b\/redbot\/cogs\/streams\/streams.py\n@@ -497,14 +497,13 @@ async def message(self, ctx: commands.Context):\n \n     @message.command(name=\"mention\")\n     @commands.guild_only()\n-    async def with_mention(self, ctx: commands.Context, message: str = None):\n+    async def with_mention(self, ctx: commands.Context, *, message: str = None):\n         \"\"\"Set stream alert message when mentions are enabled.\n \n         Use `{mention}` in the message to insert the selected mentions.\n+        Use `{stream}` in the message to insert the channel or user name.\n \n-        Use `{stream.name}` in the message to insert the channel or user name.\n-\n-        For example: `[p]streamset message mention \"{mention}, {stream.name} is live!\"`\n+        For example: `[p]streamset message mention \"{mention}, {stream} is live!\"`\n         \"\"\"\n         if message is not None:\n             guild = ctx.guild\n@@ -515,12 +514,12 @@ async def with_mention(self, ctx: commands.Context, message: str = None):\n \n     @message.command(name=\"nomention\")\n     @commands.guild_only()\n-    async def without_mention(self, ctx: commands.Context, message: str = None):\n+    async def without_mention(self, ctx: commands.Context, *, message: str = None):\n         \"\"\"Set stream alert message when mentions are disabled.\n \n-        Use `{stream.name}` in the message to insert the channel or user name.\n+        Use `{stream}` in the message to insert the channel or user name.\n \n-        For example: `[p]streamset message nomention \"{stream.name} is live!\"`\n+        For example: `[p]streamset message nomention \"{stream} is live!\"`\n         \"\"\"\n         if message is not None:\n             guild = ctx.guild\n@@ -720,7 +719,10 @@ async def check_streams(self):\n                                 channel.guild\n                             ).live_message_mention()\n                             if alert_msg:\n-                                content = alert_msg.format(mention=mention_str, stream=stream)\n+                                content = alert_msg  # Stop bad things from happening here...\n+                                content = content.replace(\"{stream.name}\", str(stream.name))  # Backwards compatability\n+                                content = content.replace(\"{stream}\", str(stream.name))\n+                                content = content.replace(\"{mention}\", mention_str)\n                             else:\n                                 content = _(\"{mention}, {stream} is live!\").format(\n                                     mention=mention_str,\n@@ -733,7 +735,9 @@ async def check_streams(self):\n                                 channel.guild\n                             ).live_message_nomention()\n                             if alert_msg:\n-                                content = alert_msg.format(stream=stream)\n+                                content = alert_msg  # Stop bad things from happening here...\n+                                content = content.replace(\"{stream.name}\", str(stream.name))  # Backwards compatability\n+                                content = content.replace(\"{stream}\", str(stream.name))\n                             else:\n                                 content = _(\"{stream} is live!\").format(\n                                     stream=escape("
        },
        {
            "index":112,
            "vuln_id":"GHSA-mw75-qvfr-hpmr",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc is vulnerable to stored cross-site scripting through file upload in versions 2.10.3 and prior. A patch is available and anticipated to be part of version 2.10.4.",
            "published_date":"2022-03-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "commit_sha":"830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "patch":"SINGLE",
            "chain_ord":"['830c89a4c2c5fd0dd491422bf8e97b4eb5713f55']",
            "before_first_fix_commit":"{'da56d1d68702a7a80506245c251e58eaf84cff27', '42c0d9813df3035728b36116a6ce9116e6fa8ed3'}",
            "last_fix_commit":"830c89a4c2c5fd0dd491422bf8e97b4eb5713f55",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/13\/2022, 08:03:16",
            "message":"Merge pull request #1628 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/830c89a4c2c5fd0dd491422bf8e97b4eb5713f55\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': '@@ -303,6 +303,7 @@ public function isDangerFilename($filename){\\n \\t\\t\\t|| $isDangerStr($filename , \".shtm\")\\n \\t\\t\\t|| $isDangerStr($filename , \"%\")\\n \\t\\t\\t|| $isDangerStr($filename , \".xml\")\\n+\\t\\t\\t|| $isDangerStr($filename , \".xxhtml\")\\n \\t\\t) {\\n \\t\\t\\treturn true;\\n \\t\\t}\\n@@ -312,4 +313,4 @@ public function isDangerFilename($filename){\\n \\n \\n \\n-}\\n\\\\ No newline at end of file\\n+}'}}",
            "message_norm":"merge pull request #1628 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
            "language":"en",
            "entities":"[('#1628', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0,
            "patch_content":"From da56d1d68702a7a80506245c251e58eaf84cff27 Mon Sep 17 00:00:00 2001\nFrom: Ajaysen R <40132420+ajaysenr@users.noreply.github.com>\nDate: Sun, 13 Mar 2022 07:15:43 +0000\nSubject: [PATCH] Update AttachmentModel.class.php\n\n---\n server\/Application\/Api\/Model\/AttachmentModel.class.php | 3 ++-\n 1 file changed, 2 insertions(+), 1 deletion(-)\n\ndiff --git a\/server\/Application\/Api\/Model\/AttachmentModel.class.php b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\nindex 32fb24799..3dac201f4 100644\n--- a\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n+++ b\/server\/Application\/Api\/Model\/AttachmentModel.class.php\n@@ -303,6 +303,7 @@ public function isDangerFilename($filename){\n \t\t\t|| $isDangerStr($filename , \".shtm\")\n \t\t\t|| $isDangerStr($filename , \"%\")\n \t\t\t|| $isDangerStr($filename , \".xml\")\n+\t\t\t|| $isDangerStr($filename , \".xxhtml\")\n \t\t) {\n \t\t\treturn true;\n \t\t}\n@@ -312,4 +313,4 @@ public function isDangerFilename($filename){\n \n \n \n-}\n\\ No newline at end of file\n+}"
        },
        {
            "index":204,
            "vuln_id":"GHSA-896r-f27r-55mw",
            "cwe_id":"{'CWE-1321', 'CWE-915'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/kriszyp\/json-schema\/commit\/b62f1da1ff5442f23443d6be6a92d00e65cba93a', 'https:\/\/github.com\/kriszyp\/json-schema\/commit\/22f146111f541d9737e832823699ad3528ca7741', 'https:\/\/github.com\/kriszyp\/json-schema\/commit\/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa'}",
            "dataset":"osv",
            "summary":"json-schema is vulnerable to Prototype Pollution json-schema before version 0.4.0 is vulnerable to Improperly Controlled Modification of Object Prototype Attributes ('Prototype Pollution').",
            "published_date":"2021-11-19",
            "chain_len":3,
            "project":"https:\/\/github.com\/kriszyp\/json-schema",
            "commit_href":"https:\/\/github.com\/kriszyp\/json-schema\/commit\/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa",
            "commit_sha":"f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa",
            "patch":"MULTI",
            "chain_ord":"['22f146111f541d9737e832823699ad3528ca7741', 'b62f1da1ff5442f23443d6be6a92d00e65cba93a', 'f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa']",
            "before_first_fix_commit":"{'ef60987a9a14b9d9c739384460044ba53cd9b9a2'}",
            "last_fix_commit":"f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa",
            "chain_ord_pos":3.0,
            "commit_datetime":"11\/02\/2021, 02:47:49",
            "message":"Use a little more robust method of checking instances",
            "author":"Kris Zyp",
            "comments":"{'com_1': {'author': 'JamieSlome', 'datetime': '11\/02\/2021, 10:48:47', 'body': '@kriszyp - just to confirm, does this fix the report submitted by the researcher [here](https:\/\/huntr.dev\/bounties\/bb6ccd63-f505-4e3a-b55f-cd2662c261a9\/)?'}, 'com_2': {'author': 'kriszyp', 'datetime': '11\/02\/2021, 11:20:36', 'body': '> does this fix the report submitted by the researcher here?\\r\\n\\r\\nYes, along with https:\/\/github.com\/kriszyp\/json-schema\/commit\/22f146111f541d9737e832823699ad3528ca7741, that is intended to fix that security issue.'}, 'com_3': {'author': 'JamieSlome', 'datetime': '11\/02\/2021, 12:10:20', 'body': '@kriszyp - thanks for the heads up! Are you able to confirm this on the report, and we can go ahead and publish a CVE \/ make the report public?\\r\\n\\r\\n(cc @yoshino-s)'}, 'com_4': {'author': 'kriszyp', 'datetime': '11\/09\/2021, 02:04:23', 'body': 'Yes, I have published the updated version with the fix.'}, 'com_5': {'author': 'JamieSlome', 'datetime': '11\/09\/2021, 07:55:24', 'body': '@kriszyp - could you update this on the report: https:\/\/huntr.dev\/bounties\/bb6ccd63-f505-4e3a-b55f-cd2662c261a9\/\\r\\n\\r\\nYou can also decide if you would like to keep the bounty for yourself or return it to the prize pot \ud83d\udc4c'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'lib\/validate.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/kriszyp\/json-schema\/raw\/f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa\/lib%2Fvalidate.js', 'patch': \"@@ -208,7 +208,7 @@ var validate = exports._validate = function(\/*Any*\/instance,\/*Object*\/schema,\/*O\\n \\t\\t\\t\\n \\t\\t\\tfor(var i in objTypeDef){ \\n \\t\\t\\t\\tif(objTypeDef.hasOwnProperty(i) && i != '__proto__' && i != 'constructor'){\\n-\\t\\t\\t\\t\\tvar value = instance[i];\\n+\\t\\t\\t\\t\\tvar value = instance.hasOwnProperty(i) ? instance[i] : undefined;\\n \\t\\t\\t\\t\\t\/\/ skip _not_ specified properties\\n \\t\\t\\t\\t\\tif (value === undefined && options.existingOnly) continue;\\n \\t\\t\\t\\t\\tvar propDef = objTypeDef[i];\"}}",
            "message_norm":"use a little more robust method of checking instances",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/validate.js'])",
            "num_files":1.0,
            "patch_content":"From f6f6a3b02d667aa4ba2d5d50cc19208c4462abfa Mon Sep 17 00:00:00 2001\nFrom: Kris Zyp <kriszyp@gmail.com>\nDate: Mon, 1 Nov 2021 20:47:49 -0600\nSubject: [PATCH] Use a little more robust method of checking instances\n\n---\n lib\/validate.js | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n\ndiff --git a\/lib\/validate.js b\/lib\/validate.js\nindex 8992d6d..cace89e 100644\n--- a\/lib\/validate.js\n+++ b\/lib\/validate.js\n@@ -208,7 +208,7 @@ var validate = exports._validate = function(\/*Any*\/instance,\/*Object*\/schema,\/*O\n \t\t\t\n \t\t\tfor(var i in objTypeDef){ \n \t\t\t\tif(objTypeDef.hasOwnProperty(i) && i != '__proto__' && i != 'constructor'){\n-\t\t\t\t\tvar value = instance[i];\n+\t\t\t\t\tvar value = instance.hasOwnProperty(i) ? instance[i] : undefined;\n \t\t\t\t\t\/\/ skip _not_ specified properties\n \t\t\t\t\tif (value === undefined && options.existingOnly) continue;\n \t\t\t\t\tvar propDef = objTypeDef[i];"
        },
        {
            "index":108,
            "vuln_id":"GHSA-c582-c96p-r5cq",
            "cwe_id":"{'CWE-400', 'CWE-770'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e'}",
            "dataset":"osv",
            "summary":"Memory exhaustion in Tensorflow ### Impact \nThe [implementation of `ThreadPoolHandle`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5100e359aef5c8021f2e71c7b986420b85ce7b3d\/tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc#L79-L135) can be used to trigger a denial of service attack by allocating too much memory:\n\n```python\nimport tensorflow as tf\ny = tf.raw_ops.ThreadPoolHandle(num_threads=0x60000000,display_name='tf')\n```\n\nThis is because the `num_threads` argument is only checked to not be negative, but there is no upper bound on its value.\n    \n### Patches\nWe have patched the issue in GitHub commit [e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yu Tian of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "commit_sha":"e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "patch":"SINGLE",
            "chain_ord":"['e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e']",
            "before_first_fix_commit":"{'dc94fe9983e3deca817b7a081fa43c4e3b1ddec8'}",
            "last_fix_commit":"e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/19\/2021, 00:10:34",
            "message":"[tf.data] Set limit on number of threads used in threadpool_dataset.\n\nPiperOrigin-RevId: 410922677\nChange-Id: Ib25814a99043ab10805b5d2d7088ae0e0b7b04fd",
            "author":"Andrew Audibert",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 7, 'total': 26}",
            "files":"{'tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc': {'additions': 19, 'deletions': 7, 'changes': 26, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e\/tensorflow%2Fcore%2Fkernels%2Fdata%2Fexperimental%2Fthreadpool_dataset_op.cc', 'patch': '@@ -39,6 +39,22 @@ namespace experimental {\\n     PrivateThreadPoolDatasetOp::kDatasetType;\\n \/* static *\/ constexpr const char* const PrivateThreadPoolDatasetOp::kDatasetOp;\\n \\n+namespace {\\n+\/\/ To prevent integer overflow issues when allocating threadpool memory for an\\n+\/\/ unreasonable number of threads.\\n+constexpr int kThreadLimit = 65536;\\n+\\n+Status ValidateNumThreads(int32_t num_threads) {\\n+  if (num_threads < 0) {\\n+    return errors::InvalidArgument(\"`num_threads` must be >= 0\");\\n+  }\\n+  if (num_threads >= kThreadLimit) {\\n+    return errors::InvalidArgument(\"`num_threads` must be < \", kThreadLimit);\\n+  }\\n+  return Status::OK();\\n+}\\n+}  \/\/ namespace\\n+\\n class ThreadPoolResource : public ResourceBase {\\n  public:\\n   ThreadPoolResource(Env* env, const ThreadOptions& thread_options,\\n@@ -83,9 +99,7 @@ class ThreadPoolHandleOp : public OpKernel {\\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));\\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",\\n                                      &max_intra_op_parallelism_));\\n-    OP_REQUIRES(\\n-        ctx, num_threads_ > 0,\\n-        errors::InvalidArgument(\"`num_threads` must be greater than zero.\"));\\n+    OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));\\n   }\\n \\n   \/\/ The resource is deleted from the resource manager only when it is private\\n@@ -531,8 +545,7 @@ void PrivateThreadPoolDatasetOp::MakeDatasetFromOptions(OpKernelContext* ctx,\\n                                                         DatasetBase* input,\\n                                                         int32_t num_threads,\\n                                                         DatasetBase** output) {\\n-  OP_REQUIRES(ctx, num_threads >= 0,\\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\\n   *output = new Dataset(ctx,\\n                         DatasetContext(DatasetContext::Params(\\n                             {PrivateThreadPoolDatasetOp::kDatasetType,\\n@@ -546,8 +559,7 @@ void PrivateThreadPoolDatasetOp::MakeDataset(OpKernelContext* ctx,\\n   int64_t num_threads = 0;\\n   OP_REQUIRES_OK(\\n       ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));\\n-  OP_REQUIRES(ctx, num_threads >= 0,\\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\\n   *output = new Dataset(ctx, input, num_threads);\\n }'}}",
            "message_norm":"[tf.data] set limit on number of threads used in threadpool_dataset.\n\npiperorigin-revid: 410922677\nchange-id: ib25814a99043ab10805b5d2d7088ae0e0b7b04fd",
            "language":"en",
            "entities":"[('410922677', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc'])",
            "num_files":1.0,
            "patch_content":"From e3749a6d5d1e8d11806d4a2e9cc3123d1a90b75e Mon Sep 17 00:00:00 2001\nFrom: Andrew Audibert <aaudibert@google.com>\nDate: Thu, 18 Nov 2021 16:10:34 -0800\nSubject: [PATCH] [tf.data] Set limit on number of threads used in\n threadpool_dataset.\n\nPiperOrigin-RevId: 410922677\nChange-Id: Ib25814a99043ab10805b5d2d7088ae0e0b7b04fd\n---\n ...\/experimental\/threadpool_dataset_op.cc     | 26 ++++++++++++++-----\n 1 file changed, 19 insertions(+), 7 deletions(-)\n\ndiff --git a\/tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc b\/tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc\nindex c58e5f68e6c6c6..fefaf8249b76bc 100644\n--- a\/tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc\n+++ b\/tensorflow\/core\/kernels\/data\/experimental\/threadpool_dataset_op.cc\n@@ -39,6 +39,22 @@ namespace experimental {\n     PrivateThreadPoolDatasetOp::kDatasetType;\n \/* static *\/ constexpr const char* const PrivateThreadPoolDatasetOp::kDatasetOp;\n \n+namespace {\n+\/\/ To prevent integer overflow issues when allocating threadpool memory for an\n+\/\/ unreasonable number of threads.\n+constexpr int kThreadLimit = 65536;\n+\n+Status ValidateNumThreads(int32_t num_threads) {\n+  if (num_threads < 0) {\n+    return errors::InvalidArgument(\"`num_threads` must be >= 0\");\n+  }\n+  if (num_threads >= kThreadLimit) {\n+    return errors::InvalidArgument(\"`num_threads` must be < \", kThreadLimit);\n+  }\n+  return Status::OK();\n+}\n+}  \/\/ namespace\n+\n class ThreadPoolResource : public ResourceBase {\n  public:\n   ThreadPoolResource(Env* env, const ThreadOptions& thread_options,\n@@ -83,9 +99,7 @@ class ThreadPoolHandleOp : public OpKernel {\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"num_threads\", &num_threads_));\n     OP_REQUIRES_OK(ctx, ctx->GetAttr(\"max_intra_op_parallelism\",\n                                      &max_intra_op_parallelism_));\n-    OP_REQUIRES(\n-        ctx, num_threads_ > 0,\n-        errors::InvalidArgument(\"`num_threads` must be greater than zero.\"));\n+    OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads_));\n   }\n \n   \/\/ The resource is deleted from the resource manager only when it is private\n@@ -531,8 +545,7 @@ void PrivateThreadPoolDatasetOp::MakeDatasetFromOptions(OpKernelContext* ctx,\n                                                         DatasetBase* input,\n                                                         int32_t num_threads,\n                                                         DatasetBase** output) {\n-  OP_REQUIRES(ctx, num_threads >= 0,\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\n   *output = new Dataset(ctx,\n                         DatasetContext(DatasetContext::Params(\n                             {PrivateThreadPoolDatasetOp::kDatasetType,\n@@ -546,8 +559,7 @@ void PrivateThreadPoolDatasetOp::MakeDataset(OpKernelContext* ctx,\n   int64_t num_threads = 0;\n   OP_REQUIRES_OK(\n       ctx, ParseScalarArgument<int64_t>(ctx, \"num_threads\", &num_threads));\n-  OP_REQUIRES(ctx, num_threads >= 0,\n-              errors::InvalidArgument(\"`num_threads` must be >= 0\"));\n+  OP_REQUIRES_OK(ctx, ValidateNumThreads(num_threads));\n   *output = new Dataset(ctx, input, num_threads);\n }"
        },
        {
            "index":900,
            "vuln_id":"GHSA-h3vq-wv8j-36gw",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/LLK\/scratch-svg-renderer\/commit\/7c74ec7de3254143ec3c557677f5355a90a3d07f'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Scratch-Svg-Renderer A DOM-based cross-site scripting (XSS) vulnerability in Scratch-Svg-Renderer v0.2.0 allows attackers to execute arbitrary web scripts or HTML via a crafted sb3 file.",
            "published_date":"2022-01-08",
            "chain_len":1,
            "project":"https:\/\/github.com\/LLK\/scratch-svg-renderer",
            "commit_href":"https:\/\/github.com\/LLK\/scratch-svg-renderer\/commit\/7c74ec7de3254143ec3c557677f5355a90a3d07f",
            "commit_sha":"7c74ec7de3254143ec3c557677f5355a90a3d07f",
            "patch":"SINGLE",
            "chain_ord":"['7c74ec7de3254143ec3c557677f5355a90a3d07f']",
            "before_first_fix_commit":"{'d010f2d0edc3ab87ecabb27b9160f91317aa2722'}",
            "last_fix_commit":"7c74ec7de3254143ec3c557677f5355a90a3d07f",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/09\/2020, 19:50:27",
            "message":"Remove lots of event handlers",
            "author":"Eric Rosenbaum",
            "comments":null,
            "stats":"{'additions': 15, 'deletions': 2, 'total': 17}",
            "files":"{'src\/fixup-svg-string.js': {'additions': 15, 'deletions': 2, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/LLK\/scratch-svg-renderer\/raw\/7c74ec7de3254143ec3c557677f5355a90a3d07f\/src%2Ffixup-svg-string.js', 'patch': '@@ -50,8 +50,21 @@ module.exports = function (svgString) {\\n     \/\/ Empty script tags and javascript executing\\n     svgString = svgString.replace(\/<script[\\\\s\\\\S]*>[\\\\s\\\\S]*<\\\\\/script>\/, \\'<script><\/script>\\');\\n     \\n-    \/\/ Remove error handlers\\n-    svgString = svgString.replace(\/onerror=[\\\\s\\\\S]*[\\'\"].*?[\\'\"]\/i, \\'\\');\\n+    \/\/ Remove event handlers\\n+    const eventNames = [\\n+        \\'onbegin\\', \\'onend\\', \\'onrepeat\\', \\'onabort\\', \\'onerror\\', \\'onresize\\', \\'onscroll\\', \\'onunload\\', \\'oncopy\\',\\n+        \\'oncut\\', \\'onpaste\\', \\'oncancel\\', \\'oncanplay\\', \\'oncanplaythrough\\', \\'onchange\\', \\'onclick\\', \\'onclose\\',\\n+        \\'oncuechange\\', \\'ondblclick\\', \\'ondrag\\', \\'ondragend\\', \\'ondragenter\\', \\'ondragexit\\', \\'ondragleave\\',\\n+        \\'ondragover\\', \\'ondragstart\\', \\'ondrop\\', \\'ondurationchange\\', \\'onloadeddata\\', \\'onloadedmetadata\\',\\n+        \\'onloadstart\\', \\'onmousedown\\', \\'onmouseenter\\', \\'onmouseleave\\', \\'onmousemove\\',\\n+        \\'onemptied\\', \\'onended\\', \\'onerror\\', \\'onfocus\\', \\'oninput\\', \\'oninvalid\\', \\'onkeydown\\', \\'onkeypress\\',\\n+        \\'onkeyup\\', \\'onload\\', \\'onmouseout\\', \\'onmouseover\\', \\'onmouseup\\', \\'onmousewheel\\', \\'onpause\\', \\'onplay\\',\\n+        \\'onplaying\\', \\'onprogress\\', \\'onratechange\\', \\'onreset\\', \\'onresize\\', \\'onscroll\\', \\'onseeked\\', \\'onseeking\\',\\n+        \\'onselect\\', \\'onshow\\', \\'onstalled\\', \\'onsubmit\\', \\'onsuspend\\', \\'ontimeupdate\\', \\'ontoggle\\', \\'onvolumechange\\',\\n+        \\'onwaiting\\', \\'onactivate\\', \\'onfocusin\\', \\'onfocusout\\'\\n+    ];\\n+    const eventsRegex = new RegExp(`(${eventNames.join(\\'|\\')})\\\\\\\\s*=\\\\\\\\s*[\\'\"].*[\\'\"]`, \\'i\\');\\n+    svgString = svgString.replace(eventsRegex, \\'\\');\\n \\n     return svgString;\\n };'}}",
            "message_norm":"remove lots of event handlers",
            "language":"en",
            "entities":"[('remove', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/fixup-svg-string.js'])",
            "num_files":1.0,
            "patch_content":"From 7c74ec7de3254143ec3c557677f5355a90a3d07f Mon Sep 17 00:00:00 2001\nFrom: Eric Rosenbaum <eric.rosenbaum@gmail.com>\nDate: Fri, 9 Oct 2020 15:50:27 -0400\nSubject: [PATCH] Remove lots of event handlers\n\n---\n src\/fixup-svg-string.js | 17 +++++++++++++++--\n 1 file changed, 15 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/fixup-svg-string.js b\/src\/fixup-svg-string.js\nindex 41ea393d..60e7b055 100644\n--- a\/src\/fixup-svg-string.js\n+++ b\/src\/fixup-svg-string.js\n@@ -50,8 +50,21 @@ module.exports = function (svgString) {\n     \/\/ Empty script tags and javascript executing\n     svgString = svgString.replace(\/<script[\\s\\S]*>[\\s\\S]*<\\\/script>\/, '<script><\/script>');\n     \n-    \/\/ Remove error handlers\n-    svgString = svgString.replace(\/onerror=[\\s\\S]*['\"].*?['\"]\/i, '');\n+    \/\/ Remove event handlers\n+    const eventNames = [\n+        'onbegin', 'onend', 'onrepeat', 'onabort', 'onerror', 'onresize', 'onscroll', 'onunload', 'oncopy',\n+        'oncut', 'onpaste', 'oncancel', 'oncanplay', 'oncanplaythrough', 'onchange', 'onclick', 'onclose',\n+        'oncuechange', 'ondblclick', 'ondrag', 'ondragend', 'ondragenter', 'ondragexit', 'ondragleave',\n+        'ondragover', 'ondragstart', 'ondrop', 'ondurationchange', 'onloadeddata', 'onloadedmetadata',\n+        'onloadstart', 'onmousedown', 'onmouseenter', 'onmouseleave', 'onmousemove',\n+        'onemptied', 'onended', 'onerror', 'onfocus', 'oninput', 'oninvalid', 'onkeydown', 'onkeypress',\n+        'onkeyup', 'onload', 'onmouseout', 'onmouseover', 'onmouseup', 'onmousewheel', 'onpause', 'onplay',\n+        'onplaying', 'onprogress', 'onratechange', 'onreset', 'onresize', 'onscroll', 'onseeked', 'onseeking',\n+        'onselect', 'onshow', 'onstalled', 'onsubmit', 'onsuspend', 'ontimeupdate', 'ontoggle', 'onvolumechange',\n+        'onwaiting', 'onactivate', 'onfocusin', 'onfocusout'\n+    ];\n+    const eventsRegex = new RegExp(`(${eventNames.join('|')})\\\\s*=\\\\s*['\"].*['\"]`, 'i');\n+    svgString = svgString.replace(eventsRegex, '');\n \n     return svgString;\n };"
        },
        {
            "index":663,
            "vuln_id":"GHSA-q6mp-562x-ggvv",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/70b46e231e7b2c113666745a0ab6de9a8b7ef08e'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in microweber Cross-site Scripting (XSS) - Stored in GitHub repository microweber\/microweber prior to 1.2.19.",
            "published_date":"2022-07-05",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/70b46e231e7b2c113666745a0ab6de9a8b7ef08e",
            "commit_sha":"70b46e231e7b2c113666745a0ab6de9a8b7ef08e",
            "patch":"SINGLE",
            "chain_ord":"['70b46e231e7b2c113666745a0ab6de9a8b7ef08e']",
            "before_first_fix_commit":"{'b7663f9af0f4ab777275ffe7a3b77958f98c81fb'}",
            "last_fix_commit":"70b46e231e7b2c113666745a0ab6de9a8b7ef08e",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/04\/2022, 08:02:08",
            "message":"update",
            "author":"Peter Ivanov",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/MicroweberPackages\/Utils\/System\/Files.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/70b46e231e7b2c113666745a0ab6de9a8b7ef08e\/src%2FMicroweberPackages%2FUtils%2FSystem%2FFiles.php', 'patch': \"@@ -1154,11 +1154,11 @@ function get_allowed_files_extensions_for_upload($fileTypes = 'images', $returnA\\n                 break;\\n             case 'file':\\n             case 'files':\\n-                $are_allowed .= ',css,json,zip,gzip,csv,7z';\\n+                $are_allowed .= ',css,json,zip,gzip,psd,csv,7z';\\n                 break;\\n             case 'documents':\\n             case 'doc':\\n-                $are_allowed .= ',doc,docx,pdf,odt,pages,rtf,txt,pps,ppt,pptx,xls,xlsx';\\n+                $are_allowed .= ',doc,docx,pdf,odt,rtf,txt,pps,ppt,pptx,xls,xlsx';\\n                 break;\\n             case 'archives':\\n             case 'arc':\"}}",
            "message_norm":"update",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Utils\/System\/Files.php'])",
            "num_files":1.0,
            "patch_content":"From 70b46e231e7b2c113666745a0ab6de9a8b7ef08e Mon Sep 17 00:00:00 2001\nFrom: Peter Ivanov <peter@microweber.com>\nDate: Mon, 4 Jul 2022 11:02:08 +0300\nSubject: [PATCH] update\n\n---\n src\/MicroweberPackages\/Utils\/System\/Files.php | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ndiff --git a\/src\/MicroweberPackages\/Utils\/System\/Files.php b\/src\/MicroweberPackages\/Utils\/System\/Files.php\nindex ff10123e4f3..481fc4bc8df 100644\n--- a\/src\/MicroweberPackages\/Utils\/System\/Files.php\n+++ b\/src\/MicroweberPackages\/Utils\/System\/Files.php\n@@ -1154,11 +1154,11 @@ function get_allowed_files_extensions_for_upload($fileTypes = 'images', $returnA\n                 break;\n             case 'file':\n             case 'files':\n-                $are_allowed .= ',css,json,zip,gzip,csv,7z';\n+                $are_allowed .= ',css,json,zip,gzip,psd,csv,7z';\n                 break;\n             case 'documents':\n             case 'doc':\n-                $are_allowed .= ',doc,docx,pdf,odt,pages,rtf,txt,pps,ppt,pptx,xls,xlsx';\n+                $are_allowed .= ',doc,docx,pdf,odt,rtf,txt,pps,ppt,pptx,xls,xlsx';\n                 break;\n             case 'archives':\n             case 'arc':"
        }
    ]
}