{
    "schema":{
        "fields":[
            {
                "name":"index",
                "type":"integer"
            },
            {
                "name":"vuln_id",
                "type":"string"
            },
            {
                "name":"cwe_id",
                "type":"string"
            },
            {
                "name":"score",
                "type":"number"
            },
            {
                "name":"chain",
                "type":"string"
            },
            {
                "name":"dataset",
                "type":"string"
            },
            {
                "name":"summary",
                "type":"string"
            },
            {
                "name":"published_date",
                "type":"string"
            },
            {
                "name":"chain_len",
                "type":"integer"
            },
            {
                "name":"project",
                "type":"string"
            },
            {
                "name":"commit_href",
                "type":"string"
            },
            {
                "name":"commit_sha",
                "type":"string"
            },
            {
                "name":"patch",
                "type":"string"
            },
            {
                "name":"chain_ord",
                "type":"string"
            },
            {
                "name":"before_first_fix_commit",
                "type":"string"
            },
            {
                "name":"last_fix_commit",
                "type":"string"
            },
            {
                "name":"chain_ord_pos",
                "type":"number"
            },
            {
                "name":"commit_datetime",
                "type":"string"
            },
            {
                "name":"message",
                "type":"string"
            },
            {
                "name":"author",
                "type":"string"
            },
            {
                "name":"comments",
                "type":"string"
            },
            {
                "name":"stats",
                "type":"string"
            },
            {
                "name":"files",
                "type":"string"
            },
            {
                "name":"message_norm",
                "type":"string"
            },
            {
                "name":"language",
                "type":"string"
            },
            {
                "name":"entities",
                "type":"string"
            },
            {
                "name":"classification_level_1",
                "type":"string"
            },
            {
                "name":"classification_level_2",
                "type":"string"
            },
            {
                "name":"list_files",
                "type":"string"
            },
            {
                "name":"num_files",
                "type":"number"
            }
        ],
        "primaryKey":[
            "index"
        ],
        "pandas_version":"1.4.0"
    },
    "data":[
        {
            "index":1139,
            "vuln_id":"GHSA-85r7-w5mv-c849",
            "cwe_id":"{'CWE-22'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/rack\/rack\/commit\/6f237e4c9fab649d3750482514f0fde76c56ab30'}",
            "dataset":"osv",
            "summary":"Moderate severity vulnerability that affects rack rack\/file.rb (Rack::File) in Rack 1.5.x before 1.5.2 and 1.4.x before 1.4.5 allows attackers to access arbitrary files outside the intended root directory via a crafted PATH_INFO environment variable, probably a directory traversal vulnerability that is remotely exploitable, aka \"symlink path traversals.\"",
            "published_date":"2017-10-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/rack\/rack",
            "commit_href":"https:\/\/github.com\/rack\/rack\/commit\/6f237e4c9fab649d3750482514f0fde76c56ab30",
            "commit_sha":"6f237e4c9fab649d3750482514f0fde76c56ab30",
            "patch":"SINGLE",
            "chain_ord":"['6f237e4c9fab649d3750482514f0fde76c56ab30']",
            "before_first_fix_commit":"{'0cd7e9aa397f8ebb3b8481d67dbac8b4863a7f07'}",
            "last_fix_commit":"6f237e4c9fab649d3750482514f0fde76c56ab30",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/07\/2013, 00:25:22",
            "message":"Prevent symlink path traversals\n\n * Closes CVE-2013-0262",
            "author":"James Tucker",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 11, 'total': 17}",
            "files":"{'lib\/rack\/file.rb': {'additions': 6, 'deletions': 11, 'changes': 17, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rack\/rack\/raw\/6f237e4c9fab649d3750482514f0fde76c56ab30\/lib%2Frack%2Ffile.rb', 'patch': '@@ -41,19 +41,14 @@ def _call(env)\\n       path_info = Utils.unescape(env[\"PATH_INFO\"])\\n       parts = path_info.split SEPS\\n \\n-      parts.inject(0) do |depth, part|\\n-        case part\\n-        when \\'\\', \\'.\\'\\n-          depth\\n-        when \\'..\\'\\n-          return fail(404, \"Not Found\") if depth - 1 < 0\\n-          depth - 1\\n-        else\\n-          depth + 1\\n-        end\\n+      clean = []\\n+\\n+      parts.each do |part|\\n+        next if part.empty? || part == \\'.\\'\\n+        part == \\'..\\' ? clean.pop : clean << part\\n       end\\n \\n-      @path = F.join(@root, *parts)\\n+      @path = F.join(@root, *clean)\\n \\n       available = begin\\n         F.file?(@path) && F.readable?(@path)'}}",
            "message_norm":"prevent symlink path traversals\n\n * closes cve-2013-0262",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('symlink', 'SECWORD', ''), ('path traversals', 'SECWORD', ''), ('cve-2013-0262', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/rack\/file.rb'])",
            "num_files":1.0
        },
        {
            "index":1368,
            "vuln_id":"GHSA-9g3v-j3cr-6fc6",
            "cwe_id":"{'CWE-79'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/snipe\/snipe-it\/commit\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in snipe-it snipe-it is vulnerable to Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "published_date":"2021-10-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/snipe\/snipe-it",
            "commit_href":"https:\/\/github.com\/snipe\/snipe-it\/commit\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
            "commit_sha":"bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
            "patch":"SINGLE",
            "chain_ord":"['bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c']",
            "before_first_fix_commit":"{'5d94b99035317cd23059c7af91ff5f38177f5968'}",
            "last_fix_commit":"bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/15\/2021, 16:50:52",
            "message":"Fixes possible XSS on all-file-types export\n\nSigned-off-by: snipe <snipe@snipe.net>",
            "author":"snipe",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'resources\/views\/partials\/bootstrap-table.blade.php': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/snipe\/snipe-it\/raw\/bda23bb1e66fd7ce42c75c69cf5eea4e80865c1c\/resources%2Fviews%2Fpartials%2Fbootstrap-table.blade.php', 'patch': '@@ -75,6 +75,10 @@ classes: \\'table table-responsive table-no-bordered\\',\\n                 export: \\'fa-download\\',\\n                 clearSearch: \\'fa-times\\'\\n             },\\n+            exportOptions: {\\n+                htmlContent: true,\\n+            },\\n+\\n             exportTypes: [\\'csv\\', \\'excel\\', \\'doc\\', \\'txt\\',\\'json\\', \\'xml\\', \\'pdf\\'],\\n             onLoadSuccess: function () {\\n                 $(\\'[data-toggle=\"tooltip\"]\\').tooltip(); \/\/ Needed to attach tooltips after ajax call'}}",
            "message_norm":"fixes possible xss on all-file-types export\n\nsigned-off-by: snipe <snipe@snipe.net>",
            "language":"en",
            "entities":"[('xss', 'SECWORD', ''), ('snipe@snipe.net', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['resources\/views\/partials\/bootstrap-table.blade.php'])",
            "num_files":1.0
        },
        {
            "index":97,
            "vuln_id":"GHSA-2hjr-fg6c-v2h6",
            "cwe_id":"{'CWE-200'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/HubSpot\/jinjava\/pull\/435\/commits\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165', 'https:\/\/github.com\/HubSpot\/jinjava\/pull\/426\/commits\/5dfa5b87318744a4d020b66d5f7747acc36b213b'}",
            "dataset":"osv",
            "summary":"Unauthorized access to Class instance in Jinjava Jinjava before 2.5.4 allow access to arbitrary classes by calling Java methods on objects passed into a Jinjava context. This could allow for abuse of the application class loader, including Arbitrary File Disclosure.",
            "published_date":"2022-02-09",
            "chain_len":2,
            "project":"https:\/\/github.com\/HubSpot\/jinjava",
            "commit_href":"https:\/\/github.com\/HubSpot\/jinjava\/pull\/435\/commits\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165",
            "commit_sha":"1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165",
            "patch":"MULTI",
            "chain_ord":"['5dfa5b87318744a4d020b66d5f7747acc36b213b', '1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165']",
            "before_first_fix_commit":"{'bfc6ecde3a98db02a00c87a3b905a0af907188f0'}",
            "last_fix_commit":"1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/28\/2020, 18:20:50",
            "message":"Add interpreter to blacklist",
            "author":"Matt Coley",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'src\/main\/java\/com\/hubspot\/jinjava\/el\/ext\/JinjavaBeanELResolver.java': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/HubSpot\/jinjava\/raw\/1b9aaa4b420c58b4a301cf4b7d26207f1c8d1165\/src%2Fmain%2Fjava%2Fcom%2Fhubspot%2Fjinjava%2Fel%2Fext%2FJinjavaBeanELResolver.java', 'patch': '@@ -2,6 +2,7 @@\\n \\n import com.google.common.base.CaseFormat;\\n import com.google.common.collect.ImmutableSet;\\n+import com.hubspot.jinjava.interpret.JinjavaInterpreter;\\n import java.lang.reflect.Constructor;\\n import java.lang.reflect.Field;\\n import java.lang.reflect.Method;\\n@@ -136,7 +137,8 @@ protected boolean isRestrictedClass(Object o) {\\n       o instanceof Thread ||\\n       o instanceof Method ||\\n       o instanceof Field ||\\n-      o instanceof Constructor\\n+      o instanceof Constructor ||\\n+      o instanceof JinjavaInterpreter\\n     );\\n   }\\n }'}}",
            "message_norm":"add interpreter to blacklist",
            "language":"sv",
            "entities":"[('add', 'ACTION', ''), ('blacklist', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/hubspot\/jinjava\/el\/ext\/JinjavaBeanELResolver.java'])",
            "num_files":1.0
        },
        {
            "index":2099,
            "vuln_id":"GHSA-hp4c-x6r7-6555",
            "cwe_id":"{'CWE-369'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9'}",
            "dataset":"osv",
            "summary":"Floating point exception in `SparseDenseCwiseDiv` ### Impact\nThe implementation of `tf.raw_ops.SparseDenseCwiseDiv` is vulnerable to a division by 0 error:\n\n```python\nimport tensorflow as tf\nimport numpy as np\n\ntf.raw_ops.SparseDenseCwiseDiv( \n  sp_indices=np.array([[4]]),\n  sp_values=np.array([-400]),\n  sp_shape=np.array([647.]),\n  dense=np.array([0]))\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1bc56203f21a5a4995311825ffaba7a670d7747\/tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc#L56) uses a common class for all binary operations but fails to treat the division by 0 case separately.\n\n### Patches\nWe have patched the issue in GitHub commit [d9204be9f49520cdaaeb2541d1dc5187b23f31d9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9",
            "commit_sha":"d9204be9f49520cdaaeb2541d1dc5187b23f31d9",
            "patch":"SINGLE",
            "chain_ord":"['d9204be9f49520cdaaeb2541d1dc5187b23f31d9']",
            "before_first_fix_commit":"{'a95743ddba81449601bc32f249d979a944502de6'}",
            "last_fix_commit":"d9204be9f49520cdaaeb2541d1dc5187b23f31d9",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2021, 01:27:22",
            "message":"Disallow division by zero FPE in tf.raw_ops.SparseDenseCwiseDiv\n\nPiperOrigin-RevId: 383959809\nChange-Id: Ibe88458bdf66a686c93e354b8255dec94285c560",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 1, 'total': 11}",
            "files":"{'tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/d9204be9f49520cdaaeb2541d1dc5187b23f31d9\/tensorflow%2Fcore%2Fkernels%2Fsparse_dense_binary_op_shared.cc', 'patch': '@@ -114,7 +114,10 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n     OP_REQUIRES_OK(\\n         ctx, ctx->allocate_temp(DataTypeToEnum<T>::value, TensorShape({nnz}),\\n                                 &dense_gathered));\\n-\\n+    bool op_is_div = false;\\n+    if (absl::StrContains(ctx->op_kernel().type_string_view(), \"Div\")) {\\n+      op_is_div = true;\\n+    }\\n     \/\/ Pulls relevant entries from the dense side, with reshape and broadcasting\\n     \/\/ *of the dense side* taken into account.  Use a TensorRef to avoid blowing\\n     \/\/ up memory.\\n@@ -143,6 +146,12 @@ class SparseDenseBinaryOpShared : public OpKernel {\\n           errors::InvalidArgument(\"Provided indices are out-of-bounds w.r.t. \" \\\\\\n                                   \"dense side with broadcasted shape\"));       \\\\\\n       dense_gathered_flat(i) = rhs_ref.coeff(idx);                             \\\\\\n+      if (op_is_div) {                                                         \\\\\\n+        OP_REQUIRES(ctx, dense_gathered_flat(i) != 0,                          \\\\\\n+                    errors::InvalidArgument(                                   \\\\\\n+                        \"SparseDenseCwiseDiv cannot divide by zero,\"           \\\\\\n+                        \"but input dense tensor contains zero \"));             \\\\\\n+      }                                                                        \\\\\\n     }                                                                          \\\\\\n     break;                                                                     \\\\\\n   }'}}",
            "message_norm":"disallow division by zero fpe in tf.raw_ops.sparsedensecwisediv\n\npiperorigin-revid: 383959809\nchange-id: ibe88458bdf66a686c93e354b8255dec94285c560",
            "language":"en",
            "entities":"[('division by zero', 'SECWORD', ''), ('fpe', 'SECWORD', ''), ('383959809', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_dense_binary_op_shared.cc'])",
            "num_files":1.0
        },
        {
            "index":1262,
            "vuln_id":"GHSA-8v99-48m9-c8pm",
            "cwe_id":"{'CWE-863'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/containerd\/imgcrypt\/commit\/6fdd9818a4d8142107b7ecd767d839c9707700d9'}",
            "dataset":"osv",
            "summary":"Incorrect Authorization in imgcrypt Imgcrypt implements a function `CheckAuthorization()` that is supposed to check whether a user is authorized to access an encrypted image given the keys that the user has provided on the command line that would enable decryption of the image. The check is to prevent that a user can start a container from an image that has previously been decrypted by another user on the same system and therefore a decrypted version of the image layers may be already available in the cache locally.\n\nThe failure occurs when an image with a ManifestList is used and the architecture of the local host is not the first one in the ManifestList. In the version prior to the fix, only the first architecture in the list was tested, which may not have its layers available locally (were not pulled) since it cannot be run on the host architecture. Therefore, the verdict on unavailable layers was that the image could be run anticipating that image run failure would occur later due to the layers not being available. However, this verdict to allow the image to run lead to other architectures in the ManifestList be able to run an image without providing keys if that image had previously been decrypted. The fixed version now skips over irrelevant architectures and tests the Manifest of the local architecture, if available.\n\nKnown projects that use the `CheckAuthorization()` of imgcrypt is for example the ctr-enc client tool provided by imgcrypt. In this implementation, the call to `CheckAuthorization()` is used on the client side and could therefore also be easily circumvented by a modified client tool not calling this function.\n\nIn relation to the vulnerability in ctr-enc, affected environments would have to allow different users to invoke ctr-enc indirectly using some sort of management stack that gives user indirect access to ctr-enc.\n\nThe patch has been applied to imgcrypt v1.1.4. Workarounds may include usage of different namespaces for each remote user.",
            "published_date":"2022-03-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/containerd\/imgcrypt",
            "commit_href":"https:\/\/github.com\/containerd\/imgcrypt\/commit\/6fdd9818a4d8142107b7ecd767d839c9707700d9",
            "commit_sha":"6fdd9818a4d8142107b7ecd767d839c9707700d9",
            "patch":"SINGLE",
            "chain_ord":"['6fdd9818a4d8142107b7ecd767d839c9707700d9']",
            "before_first_fix_commit":"{'f4400580b658c1fcb3cacc52dfb6104ea3c3aa82'}",
            "last_fix_commit":"6fdd9818a4d8142107b7ecd767d839c9707700d9",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/17\/2022, 19:52:56",
            "message":"images: Add list of Platforms to CheckAuthorization()\n\nTo be able to properly perform an authorization check on an image we need\nto know the platform to perform check when in cryptManifestList(). Extend\nthe logic for cryptoOp == cryptoOpUnwrapOnly to skip over manifests that\ndo not correspond to the local platform and return an error if no manifest\nwas found that matches the local platform.\n\nThe following projects seem NOT to be affect due to the change in the code\npath of CheckAuthorization() since they are not using it:\n\n- cri-o\n- nerdctl\n- skopeo\n- buildah\n- podman\n\nThe impact on imgcrypt via ctr-enc is not so clear either since\nCheckAuthorization() is not called on the server side but by the ctr-enc\nclient, thus can be modified easily.\n\nResolves: https:\/\/github.com\/containerd\/imgcrypt\/issues\/69\nSigned-off-by: Stefan Berger <stefanb@linux.ibm.com>",
            "author":"Stefan Berger",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'images\/encryption\/encryption.go': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/containerd\/imgcrypt\/raw\/6fdd9818a4d8142107b7ecd767d839c9707700d9\/images%2Fencryption%2Fencryption.go', 'patch': '@@ -50,6 +50,13 @@ const (\\n \/\/ LayerFilter allows to select Layers by certain criteria\\n type LayerFilter func(desc ocispec.Descriptor) bool\\n \\n+\/\/ isLocalPlatform determines whether the given platform matches the local one\\n+func isLocalPlatform(platform *ocispec.Platform) bool {\\n+\\tmatcher := platforms.NewMatcher(*platform)\\n+\\n+\\treturn matcher.Match(platforms.DefaultSpec())\\n+}\\n+\\n \/\/ IsEncryptedDiff returns true if mediaType is a known encrypted media type.\\n func IsEncryptedDiff(ctx context.Context, mediaType string) bool {\\n \\tswitch mediaType {\\n@@ -380,6 +387,9 @@ func cryptManifestList(ctx context.Context, cs content.Store, desc ocispec.Descr\\n \\tvar newManifests []ocispec.Descriptor\\n \\tmodified := false\\n \\tfor _, manifest := range index.Manifests {\\n+\\t\\tif cryptoOp == cryptoOpUnwrapOnly && !isLocalPlatform(manifest.Platform) {\\n+\\t\\t\\tcontinue\\n+\\t\\t}\\n \\t\\tnewManifest, m, err := cryptChildren(ctx, cs, manifest, cc, lf, cryptoOp, manifest.Platform)\\n \\t\\tif err != nil || cryptoOp == cryptoOpUnwrapOnly {\\n \\t\\t\\treturn ocispec.Descriptor{}, false, err\\n@@ -389,6 +399,9 @@ func cryptManifestList(ctx context.Context, cs content.Store, desc ocispec.Descr\\n \\t\\t}\\n \\t\\tnewManifests = append(newManifests, newManifest)\\n \\t}\\n+\\tif cryptoOp == cryptoOpUnwrapOnly {\\n+\\t\\treturn ocispec.Descriptor{}, false, fmt.Errorf(\"No manifest found for local platform\")\\n+\\t}\\n \\n \\tif modified {\\n \\t\\t\/\/ we need to update the index'}}",
            "message_norm":"images: add list of platforms to checkauthorization()\n\nto be able to properly perform an authorization check on an image we need\nto know the platform to perform check when in cryptmanifestlist(). extend\nthe logic for cryptoop == cryptoopunwraponly to skip over manifests that\ndo not correspond to the local platform and return an error if no manifest\nwas found that matches the local platform.\n\nthe following projects seem not to be affect due to the change in the code\npath of checkauthorization() since they are not using it:\n\n- cri-o\n- nerdctl\n- skopeo\n- buildah\n- podman\n\nthe impact on imgcrypt via ctr-enc is not so clear either since\ncheckauthorization() is not called on the server side but by the ctr-enc\nclient, thus can be modified easily.\n\nresolves: https:\/\/github.com\/containerd\/imgcrypt\/issues\/69\nsigned-off-by: stefan berger <stefanb@linux.ibm.com>",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('cryptoop', 'SECWORD', ''), ('cryptoopunwraponly', 'SECWORD', ''), ('error', 'FLAW', ''), ('found', 'ACTION', ''), ('server', 'SECWORD', ''), ('https:\/\/github.com\/containerd\/imgcrypt\/issues\/69', 'URL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['images\/encryption\/encryption.go'])",
            "num_files":1.0
        },
        {
            "index":2885,
            "vuln_id":"GHSA-r6pg-pjwc-j585",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `SparseFillEmptyRows` ### Impact\nAn attacker can trigger a null pointer dereference in the implementation of `tf.raw_ops.SparseFillEmptyRows`:\n\n```python\nimport tensorflow as tf\n\nindices = tf.constant([], shape=[0, 0], dtype=tf.int64)\nvalues = tf.constant([], shape=[0], dtype=tf.int64)\ndense_shape = tf.constant([], shape=[0], dtype=tf.int64)\ndefault_value = 0\n    \ntf.raw_ops.SparseFillEmptyRows(\n    indices=indices, values=values, dense_shape=dense_shape,\n    default_value=default_value)\n```\n\nThis is because of missing [validation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/fdc82089d206e281c628a93771336bf87863d5e8\/tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc#L230-L231) that was covered under a `TODO`. If the `dense_shape` tensor is empty, then `dense_shape_t.vec<>()` would cause a null pointer dereference in the implementation of the op:\n\n```cc\ntemplate <typename T, typename Tindex>\nstruct SparseFillEmptyRows<CPUDevice, T, Tindex> {\n  Status operator()(OpKernelContext* context, const Tensor& default_value_t,\n                    const Tensor& indices_t, const Tensor& values_t,\n                    const Tensor& dense_shape_t,\n                    typename AsyncOpKernel::DoneCallback done) {\n    ...\n    const auto dense_shape = dense_shape_t.vec<Tindex>();\n    ... \n  }\n}\n``` \n\n### Patches\nWe have patched the issue in GitHub commit [faa76f39014ed3b5e2c158593b1335522e573c7f](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/faa76f39014ed3b5e2c158593b1335522e573c7f",
            "commit_sha":"faa76f39014ed3b5e2c158593b1335522e573c7f",
            "patch":"SINGLE",
            "chain_ord":"['faa76f39014ed3b5e2c158593b1335522e573c7f']",
            "before_first_fix_commit":"{'fdc82089d206e281c628a93771336bf87863d5e8'}",
            "last_fix_commit":"faa76f39014ed3b5e2c158593b1335522e573c7f",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/04\/2021, 22:35:39",
            "message":"Fix heap-buffer-overflow issue with `tf.raw_ops.SparseFillEmptyRows`.\n\nPiperOrigin-RevId: 372009178\nChange-Id: Ia1a9e9691ecaa072f32fb39a0887b2aabd399210",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 1, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc': {'additions': 4, 'deletions': 1, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/faa76f39014ed3b5e2c158593b1335522e573c7f\/tensorflow%2Fcore%2Fkernels%2Fsparse_fill_empty_rows_op.cc', 'patch': '@@ -228,7 +228,10 @@ void SparseFillEmptyRowsOpImpl(OpKernelContext* context,\\n                               default_value_t.shape().DebugString()),\\n       done);\\n   \/\/ TODO(ebrevdo): add shape checks between values, indices,\\n-  \/\/ dense_shape.  Also add check that dense rank > 0.\\n+  \/\/ Also add check that dense rank > 0.\\n+  OP_REQUIRES_ASYNC(context, dense_shape_t.NumElements() != 0,\\n+                    errors::InvalidArgument(\"Dense shape cannot be empty.\"),\\n+                    done);\\n \\n   using FunctorType = functor::SparseFillEmptyRows<Device, T, Tindex>;\\n   OP_REQUIRES_OK_ASYNC(context,'}}",
            "message_norm":"fix heap-buffer-overflow issue with `tf.raw_ops.sparsefillemptyrows`.\n\npiperorigin-revid: 372009178\nchange-id: ia1a9e9691ecaa072f32fb39a0887b2aabd399210",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('overflow', 'SECWORD', ''), ('issue', 'FLAW', ''), ('372009178', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_fill_empty_rows_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1763,
            "vuln_id":"GHSA-fq86-3f29-px2c",
            "cwe_id":"{'CWE-617'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/240655511cd3e701155f944a972db71b6c0b1bb6', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1fb27733f943295d874417630edd3b38b34ce082'}",
            "dataset":"osv",
            "summary":"`CHECK`-failures during Grappler's `IsSimplifiableReshape` in Tensorflow ### Impact\nThe Grappler optimizer in TensorFlow can be used to cause a denial of service by altering a `SavedModel` such that [`IsSimplifiableReshape`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/grappler\/optimizers\/constant_folding.cc#L1687-L1742) would trigger `CHECK` failures.\n\n### Patches\nWe have patched the issue in GitHub commits [ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1), [1fb27733f943295d874417630edd3b38b34ce082](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1fb27733f943295d874417630edd3b38b34ce082), and [240655511cd3e701155f944a972db71b6c0b1bb6](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/240655511cd3e701155f944a972db71b6c0b1bb6).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-07",
            "chain_len":3,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/240655511cd3e701155f944a972db71b6c0b1bb6",
            "commit_sha":"240655511cd3e701155f944a972db71b6c0b1bb6",
            "patch":"MULTI",
            "chain_ord":"['ebc1a2ffe5a7573d905e99bd0ee3568ee07c12c1', '1fb27733f943295d874417630edd3b38b34ce082', '240655511cd3e701155f944a972db71b6c0b1bb6']",
            "before_first_fix_commit":"{'1fb27733f943295d874417630edd3b38b34ce082'}",
            "last_fix_commit":"240655511cd3e701155f944a972db71b6c0b1bb6",
            "chain_ord_pos":3.0,
            "commit_datetime":"11\/11\/2021, 17:24:31",
            "message":"Eliminate `CHECK`-fails from `IsSimplifiableReshape` via `MakeShape(<invalid shape>)`\n\nPiperOrigin-RevId: 409166738\nChange-Id: I7f0a3590b8acae3f3e3e2fe636e1f5ef285693cf",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 2, 'total': 6}",
            "files":"{'tensorflow\/core\/grappler\/optimizers\/constant_folding.cc': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/240655511cd3e701155f944a972db71b6c0b1bb6\/tensorflow%2Fcore%2Fgrappler%2Foptimizers%2Fconstant_folding.cc', 'patch': '@@ -1741,14 +1741,16 @@ Status ConstantFolding::IsSimplifiableReshape(\\n       int32_t dim = outputs[0]->flat<int32>()(i);\\n       shp.push_back(dim);\\n     }\\n-    TF_CHECK_OK(TensorShapeUtils::MakeShape(shp, &new_dims));\\n+    s = TensorShapeUtils::MakeShape(shp, &new_dims);\\n+    if (!s.ok()) return s;\\n   } else {\\n     std::vector<int64_t> shp;\\n     for (int i = 0; i < outputs[0]->NumElements(); ++i) {\\n       int64_t dim = outputs[0]->flat<int64_t>()(i);\\n       shp.push_back(dim);\\n     }\\n-    TF_CHECK_OK(TensorShapeUtils::MakeShape(shp, &new_dims));\\n+    s = TensorShapeUtils::MakeShape(shp, &new_dims);\\n+    if (!s.ok()) return s;\\n   }\\n \\n   if (!shape.IsCompatibleWith(new_dims)) {'}}",
            "message_norm":"eliminate `check`-fails from `issimplifiablereshape` via `makeshape(<invalid shape>)`\n\npiperorigin-revid: 409166738\nchange-id: i7f0a3590b8acae3f3e3e2fe636e1f5ef285693cf",
            "language":"en",
            "entities":"[('409166738', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/grappler\/optimizers\/constant_folding.cc'])",
            "num_files":1.0
        },
        {
            "index":3241,
            "vuln_id":"GHSA-w77p-8cfg-2x43",
            "cwe_id":"{'CWE-284'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/qos-ch\/slf4j\/commit\/d2b27fba88e983f921558da27fc29b5f5d269405'}",
            "dataset":"osv",
            "summary":"Improper Access Control in SLF4J org.slf4j.ext.EventData in the slf4j-ext module in QOS.CH SLF4J before `1.8.0-beta4` allows remote attackers to bypass intended access restrictions via crafted data. EventData in the slf4j-ext module in QOS.CH SLF4J, has been fixed in SLF4J version `1.7.26` and later and in the `2.0.x` series.\n\nNote that while the [fix commit](https:\/\/github.com\/qos-ch\/slf4j\/commit\/d2b27fba88e983f921558da27fc29b5f5d269405) is associated with the tag `1.8.0-beta3`, the versions in [Maven](https:\/\/mvnrepository.com\/artifact\/org.slf4j\/slf4j-ext) go directly from `1.8.0-beta2` to `1.8.0-beta4`.",
            "published_date":"2022-05-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/qos-ch\/slf4j",
            "commit_href":"https:\/\/github.com\/qos-ch\/slf4j\/commit\/d2b27fba88e983f921558da27fc29b5f5d269405",
            "commit_sha":"d2b27fba88e983f921558da27fc29b5f5d269405",
            "patch":"SINGLE",
            "chain_ord":"['d2b27fba88e983f921558da27fc29b5f5d269405']",
            "before_first_fix_commit":"{'0ec1f6aac8648e87a7dda2f5730fef6db3b4fa33'}",
            "last_fix_commit":"d2b27fba88e983f921558da27fc29b5f5d269405",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2018, 00:09:26",
            "message":"fix SLF4J-431",
            "author":"Ceki Gulcu",
            "comments":"{'com_1': {'author': 'kbabioch', 'datetime': '03\/20\/2018, 08:48:11', 'body': 'What exactly is the issue here? Unfortunately there seem to be no details available on this, and marking a class \"deprecated\" is not necessarily a real fix.'}, 'com_2': {'author': 'ceki', 'datetime': '03\/20\/2018, 08:50:32', 'body': '@kbabioch  Are you using the EventData class?'}, 'com_3': {'author': 'kbabioch', 'datetime': '03\/20\/2018, 09:10:00', 'body': \"@ceki I'm evaluating this issue, and realized that basically no details are available yet :-\/.\"}, 'com_4': {'author': 'ceki', 'datetime': '03\/20\/2018, 09:18:17', 'body': 'SLF4J-431 is a subtask of SLF4J-430. EventData is slated to be removed due to a security vulnerability.'}, 'com_5': {'author': 'adioss', 'datetime': '12\/14\/2018, 16:02:22', 'body': 'Regarding http:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2018-8088, as far as I understand, solution is to update to version to 1.8.0-beta2.\\r\\nHowever, on https:\/\/jira.qos.ch\/browse\/SLF4J-430, you can see that fix version is 1.8.0-beta3.\\r\\nSo, what could we advice in order to fix the threat?'}, 'com_6': {'author': 'ceki', 'datetime': '12\/14\/2018, 21:07:48', 'body': 'As far as I know, org.slf4j.ext.EventData is not widely used.'}, 'com_7': {'author': 'areguru', 'datetime': '12\/20\/2018, 17:28:49', 'body': \"@adioss \\r\\nI suppose you use the OWASP dependency-checker or similar and got a warning about CVE-2018-8088.\\r\\n(In that case same as us)\\r\\n\\r\\nMy understanding after analyzing this is that only the slf4j-ext module has the vulnerability, and only the EventData-class is affected. Most users of SLF4J doesn't use this. \\r\\nhttps:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2018-8088\\r\\nhttps:\/\/mvnrepository.com\/artifact\/org.slf4j\/slf4j-ext\\r\\n   groupId: org.slf4j\\r\\n   artifactId: slf4j-ext\\r\\n   version: 1.7.25\\r\\n\\r\\nSLF4J extensions are packaged within slf4j-ext.jar\\r\\nhttps:\/\/www.slf4j.org\/extensions.html\\r\\n\\r\\nIf you use maven \\r\\nmvn dependency:tree\\r\\nwill generate the dependencies tree of your maven project.\\r\\n\\r\\nFor us the flagging of slf4j-api as vulnerable was a false positive.\\r\\nhttps:\/\/mvnrepository.com\/artifact\/org.slf4j\/slf4j-api\\r\\n   groupId: org.slf4j\\r\\n   artifactId: slf4j-api\\r\\n   version: 1.7.25\\r\\n\\r\\nYou have to check if your application actually use slf4j-ext (and org.slf4j.ext.EventData)\"}, 'com_8': {'author': 'adioss', 'datetime': '12\/20\/2018, 23:42:45', 'body': '@areguru yep exactly that, you\\'ve got it: CVE is \"badly\" declared so, although only slf4j-ext is sensitive, cpe declaration is too large so slf4j-* are detected by sca tools like dependency-check.\\r\\n\\r\\nAlthough I have no dependencies on slf4j-ext on my projects, for other people that have slf4j-ext in the classpath, I was wandering if \"mark as deprecated\" was enough and if they is no other way to exploit the threat than using the constructor directly (using deserialization for example) but finally I\\'m not sure it\\'s possible.\\r\\nThanks a lot @areguru  and @ceki for feedback.'}, 'com_9': {'author': 'sepe81', 'datetime': '01\/09\/2019, 09:47:27', 'body': 'According to https:\/\/www.slf4j.org\/download.html version 1.8.0-beta2 is EXPERIMENTAL. Are there any plans to backport this to the STABLE branch 1.7.x and release a version 1.7.26?'}, 'com_10': {'author': 'cowwoc', 'datetime': '01\/09\/2019, 14:50:50', 'body': '@adioss I emailed nvd@nist.gov asking them to fix the CVE but got back this nice auto-reply: `Due to a lapse in appropriations, I will be out of the office and unable to reply to e-mail until further notice.` :)'}, 'com_11': {'author': 'cowwoc', 'datetime': '01\/09\/2019, 15:22:45', 'body': \"Looking again, it looks like I was supposed to email mitre.org instead of nist.gov. I did now and they seem to be active. I'll let you know once I hear back from them.\"}, 'com_12': {'author': 'cowwoc', 'datetime': '01\/10\/2019, 16:42:30', 'body': \"Hey guys. I've just heard back from nist.gov. They will be updating the CVE for slf4j (and 700 others) within the next 24 hours to fix this kind of error (overly-broad warnings). If you guys run across this kind of error in the future, I recommend reporting it to them. They were extremely responsive and helpful. Have a great day :)\"}, 'com_13': {'author': 'markkolich', 'datetime': '01\/25\/2019, 20:02:29', 'body': \"@ceki following up on @sepe81's comment above, according to slf4j.org [0], version `1.8.0-beta2` is marked experimental but this version has been available for almost a year [1].\\r\\n\\r\\nIf I can gently ask, what is the plan\/timeline for releasing a non-beta version of `1.8.0`?\\r\\n\\r\\n[0] https:\/\/www.slf4j.org\/download.html\\r\\n[1] https:\/\/github.com\/qos-ch\/slf4j\/releases\/tag\/v_1.8.0_beta2\"}, 'com_14': {'author': 'cowwoc', 'datetime': '01\/25\/2019, 20:42:43', 'body': 'I am hoping https:\/\/jira.qos.ch\/browse\/SLF4J-428 gets fixed before 1.8.0 is released because it will affect the Java module name.'}, 'com_15': {'author': 'Neustradamus', 'datetime': '01\/13\/2022, 20:30:30', 'body': 'Dear @kbabioch, @adioss, @areguru, @sepe81, @cowwoc, @markkolich,\\r\\n\\r\\nIn first, I wish you a Happy New Year 2022!\\r\\n\\r\\nToday, there was a progress by @ceki, and a correction about my old requests:\\r\\n- https:\/\/jira.qos.ch\/browse\/SLF4J-455\\r\\n\\r\\nIt has been solved in 1.7.26 and 1.8.0-beta4.\\r\\n\\r\\nI have requested the update of:\\r\\n- https:\/\/jira.qos.ch\/browse\/SLF4J-430\\r\\n- https:\/\/jira.qos.ch\/browse\/SLF4J-431\\r\\n\\r\\nAnd about CVE-2018-8088:\\r\\n- https:\/\/cve.mitre.org\/cgi-bin\/cvekey.cgi?keyword=slf4j+slf4j+log4j12\\r\\n- https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2018-8088\\r\\n- https:\/\/www.google.com\/search?q=CVE-2018-8088\\r\\n\\r\\nLinked to:\\r\\n- https:\/\/github.com\/qos-ch\/reload4j\/issues\/10'}}",
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'slf4j-ext\/src\/main\/java\/org\/slf4j\/ext\/EventData.java': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/qos-ch\/slf4j\/raw\/d2b27fba88e983f921558da27fc29b5f5d269405\/slf4j-ext%2Fsrc%2Fmain%2Fjava%2Forg%2Fslf4j%2Fext%2FEventData.java', 'patch': '@@ -40,6 +40,8 @@\\n  * event. Users may extend this class for each EventType they want to log.\\n  * \\n  * @author Ralph Goers\\n+ * \\n+ * @deprecated Due to a security vulnerability, this class will be removed without replacement.\\n  *\/\\n public class EventData implements Serializable {'}}",
            "message_norm":"fix slf4j-431",
            "language":"sv",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['slf4j-ext\/src\/main\/java\/org\/slf4j\/ext\/EventData.java'])",
            "num_files":1.0
        },
        {
            "index":328,
            "vuln_id":"GHSA-3xgx-r9j4-qw9w",
            "cwe_id":"{'CWE-1321'}",
            "score":7.3,
            "chain":"{'https:\/\/github.com\/dexie\/Dexie.js\/commit\/1d655a69b9f28c3af6fae10cf5c61df387dc689b'}",
            "dataset":"osv",
            "summary":"Prototype Pollution in Dexie Dexie is a minimalistic wrapper for IndexedDB. The package dexie before 3.2.2, from 4.0.0-alpha.1 and before 4.0.0-alpha.3 are vulnerable to Prototype Pollution in the Dexie.setByKeyPath(obj, keyPath, value) function which does not properly check the keys being set (like __proto__ or constructor). This can allow an attacker to add\/modify properties of the Object.prototype leading to prototype pollution vulnerability. **Note:** This vulnerability can occur in multiple ways, for example when modifying a collection with untrusted user input.",
            "published_date":"2022-05-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/dexie\/Dexie.js",
            "commit_href":"https:\/\/github.com\/dexie\/Dexie.js\/commit\/1d655a69b9f28c3af6fae10cf5c61df387dc689b",
            "commit_sha":"1d655a69b9f28c3af6fae10cf5c61df387dc689b",
            "patch":"SINGLE",
            "chain_ord":"['1d655a69b9f28c3af6fae10cf5c61df387dc689b']",
            "before_first_fix_commit":"{'b350b8cbc8a926b46c20f3a569555c4660a99ca4'}",
            "last_fix_commit":"1d655a69b9f28c3af6fae10cf5c61df387dc689b",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/27\/2022, 10:26:44",
            "message":"Prohibit prototype pollution",
            "author":"dfahlander",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/functions\/utils.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dexie\/Dexie.js\/raw\/1d655a69b9f28c3af6fae10cf5c61df387dc689b\/src%2Ffunctions%2Futils.ts', 'patch': '@@ -151,7 +151,7 @@ export function setByKeyPath(obj, keyPath, value) {\\n                 } else obj[currentKeyPath] = value;\\n             else {\\n                 var innerObj = obj[currentKeyPath];\\n-                if (!innerObj) innerObj = (obj[currentKeyPath] = {});\\n+                if (!innerObj || !hasOwn(obj, currentKeyPath)) innerObj = (obj[currentKeyPath] = {});\\n                 setByKeyPath(innerObj, remainingKeyPath, value);\\n             }\\n         } else {'}}",
            "message_norm":"prohibit prototype pollution",
            "language":"en",
            "entities":"[('prototype pollution', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/functions\/utils.ts'])",
            "num_files":1.0
        },
        {
            "index":2734,
            "vuln_id":"GHSA-qc36-q22q-cjw3",
            "cwe_id":"{'CWE-147'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/lettre\/lettre\/pull\/627\/commits\/93458d01fed0ec81c0e7b4e98e6f35961356fae2', 'https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce'}",
            "dataset":"osv",
            "summary":"SMTP command injection in lettre ### Impact\n\nAffected versions of lettre allowed SMTP command injection through an attacker's controlled message body. The module for escaping lines starting with a period wouldn't catch a period that was placed after a double CRLF sequence, allowing the attacker to end the current message and write arbitrary SMTP commands after it.\n\n### Fix\n\nThe flaw is fixed by correctly handling consecutive CRLF sequences.\n\n### References\n\n* [RUSTSEC-2021-0069](https:\/\/rustsec.org\/advisories\/RUSTSEC-2021-0069.html)",
            "published_date":"2021-07-12",
            "chain_len":2,
            "project":"https:\/\/github.com\/lettre\/lettre",
            "commit_href":"https:\/\/github.com\/lettre\/lettre\/commit\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
            "commit_sha":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
            "patch":"MULTI",
            "chain_ord":"['93458d01fed0ec81c0e7b4e98e6f35961356fae2', '8bfc20506cc5e098fe6eb3d1cafe3bea791215ce']",
            "before_first_fix_commit":"{'d930c42d5069e344a9dfa84ebe4b60bf3b11ac64'}",
            "last_fix_commit":"8bfc20506cc5e098fe6eb3d1cafe3bea791215ce",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/22\/2021, 17:58:27",
            "message":"fix(transport-smtp): Fix transparency codec - 0.9.x (#628)\n\nCo-authored-by: Paolo Barbolini <paolo@paolo565.org>",
            "author":"Alexis Mousset",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 2, 'total': 13}",
            "files":"{'lettre\/src\/smtp\/client\/mod.rs': {'additions': 11, 'deletions': 2, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/lettre\/lettre\/raw\/8bfc20506cc5e098fe6eb3d1cafe3bea791215ce\/lettre%2Fsrc%2Fsmtp%2Fclient%2Fmod.rs', 'patch': '@@ -51,7 +51,15 @@ impl ClientCodec {\\n                     match self.escape_count {\\n                         0 => self.escape_count = if *byte == b\\'\\\\r\\' { 1 } else { 0 },\\n                         1 => self.escape_count = if *byte == b\\'\\\\n\\' { 2 } else { 0 },\\n-                        2 => self.escape_count = if *byte == b\\'.\\' { 3 } else { 0 },\\n+                        2 => {\\n+                            self.escape_count = if *byte == b\\'.\\' {\\n+                                3\\n+                            } else if *byte == b\\'\\\\r\\' {\\n+                                1\\n+                            } else {\\n+                                0\\n+                            }\\n+                        }\\n                         _ => unreachable!(),\\n                     }\\n                     if self.escape_count == 3 {\\n@@ -286,6 +294,7 @@ mod test {\\n         let mut buf: Vec<u8> = vec![];\\n \\n         assert!(codec.encode(b\"test\\\\r\\\\n\", &mut buf).is_ok());\\n+        assert!(codec.encode(b\"test\\\\r\\\\n\\\\r\\\\n\", &mut buf).is_ok());\\n         assert!(codec.encode(b\".\\\\r\\\\n\", &mut buf).is_ok());\\n         assert!(codec.encode(b\"\\\\r\\\\ntest\", &mut buf).is_ok());\\n         assert!(codec.encode(b\"te\\\\r\\\\n.\\\\r\\\\nst\", &mut buf).is_ok());\\n@@ -296,7 +305,7 @@ mod test {\\n         assert!(codec.encode(b\"test\", &mut buf).is_ok());\\n         assert_eq!(\\n             String::from_utf8(buf).unwrap(),\\n-            \"test\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n+            \"test\\\\r\\\\ntest\\\\r\\\\n\\\\r\\\\n..\\\\r\\\\n\\\\r\\\\ntestte\\\\r\\\\n..\\\\r\\\\nsttesttest.test\\\\n.test\\\\ntest\"\\n         );\\n     }'}}",
            "message_norm":"fix(transport-smtp): fix transparency codec - 0.9.x (#628)\n\nco-authored-by: paolo barbolini <paolo@paolo565.org>",
            "language":"en",
            "entities":"[('fix(transport', 'ACTION', ''), ('fix', 'ACTION', ''), ('#628', 'ISSUE', ''), ('paolo@paolo565.org', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lettre\/src\/smtp\/client\/mod.rs'])",
            "num_files":1.0
        },
        {
            "index":1491,
            "vuln_id":"GHSA-c5hf-mc85-2hx4",
            "cwe_id":"{'CWE-863'}",
            "score":4.3,
            "chain":"{'https:\/\/github.com\/moodle\/moodle\/commit\/cdc78a16a5da95a17fb10bf1c66689237f5a3f7d'}",
            "dataset":"osv",
            "summary":"Missing authorization in Moodle Users with the capability to configure badge criteria (teachers and managers by default) were able to configure course badges with profile field criteria, which should only be available for site badges.",
            "published_date":"2022-04-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/moodle\/moodle",
            "commit_href":"https:\/\/github.com\/moodle\/moodle\/commit\/cdc78a16a5da95a17fb10bf1c66689237f5a3f7d",
            "commit_sha":"cdc78a16a5da95a17fb10bf1c66689237f5a3f7d",
            "patch":"SINGLE",
            "chain_ord":"['cdc78a16a5da95a17fb10bf1c66689237f5a3f7d']",
            "before_first_fix_commit":"{'4c00836de97bea26a0c5ba6068a55a8c1b16f260'}",
            "last_fix_commit":"cdc78a16a5da95a17fb10bf1c66689237f5a3f7d",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/07\/2022, 12:39:16",
            "message":"MDL-74075 core_badges: Check accepted criterias",
            "author":"Amaia Anabitarte",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'badges\/criteria_settings.php': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/moodle\/moodle\/raw\/cdc78a16a5da95a17fb10bf1c66689237f5a3f7d\/badges%2Fcriteria_settings.php', 'patch': \"@@ -55,6 +55,12 @@\\n     redirect($return);\\n }\\n \\n+\/\/ Make sure the criteria type is accepted.\\n+$accepted = $badge->get_accepted_criteria();\\n+if (!in_array($type, $accepted)) {\\n+    redirect($return);\\n+}\\n+\\n if ($badge->type == BADGE_TYPE_COURSE) {\\n     require_login($badge->courseid);\\n     $navurl = new moodle_url('\/badges\/index.php', array('type' => $badge->type, 'id' => $badge->courseid));\"}}",
            "message_norm":"mdl-74075 core_badges: check accepted criterias",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['badges\/criteria_settings.php'])",
            "num_files":1.0
        },
        {
            "index":29,
            "vuln_id":"GHSA-257v-vj4p-3w2h",
            "cwe_id":"{'CWE-770'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/Qix-\/color-string\/commit\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service (ReDOS) In the npm package `color-string`, there is a  ReDos (Regular Expression Denial of Service) vulnerability regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.",
            "published_date":"2021-06-22",
            "chain_len":1,
            "project":"https:\/\/github.com\/Qix-\/color-string",
            "commit_href":"https:\/\/github.com\/Qix-\/color-string\/commit\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3",
            "commit_sha":"0789e21284c33d89ebc4ab4ca6f759b9375ac9d3",
            "patch":"SINGLE",
            "chain_ord":"['0789e21284c33d89ebc4ab4ca6f759b9375ac9d3']",
            "before_first_fix_commit":"{'60f3f66477a298589288e3df6e895f88e6cd8e8e'}",
            "last_fix_commit":"0789e21284c33d89ebc4ab4ca6f759b9375ac9d3",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/05\/2021, 17:48:41",
            "message":"fix ReDos in hwb() parser (low-severity)\n\nDiscovered by Yeting Li, c\/o Colin Ife via Snyk.io.\n\nA ReDos (Regular Expression Denial of Service) vulnerability\nwas responsibly disclosed to me via email by Colin on\nMar 5 2021 regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nStrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nThe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nThis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.\n\nThank you Yeting Li and Colin Ife for bringing this to my\nattention in a secure, responsible and professional manner.\n\nA CVE will not be assigned for this vulnerability.",
            "author":"Josh Junon",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'index.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Qix-\/color-string\/raw\/0789e21284c33d89ebc4ab4ca6f759b9375ac9d3\/index.js', 'patch': '@@ -129,7 +129,7 @@ cs.get.hsl = function (string) {\\n \\t\\treturn null;\\n \\t}\\n \\n-\\tvar hsl = \/^hsla?\\\\(\\\\s*([+-]?(?:\\\\d*\\\\.)?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n+\\tvar hsl = \/^hsla?\\\\(\\\\s*([+-]?(?:\\\\d{0,3}\\\\.)?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n \\tvar match = string.match(hsl);\\n \\n \\tif (match) {\\n@@ -150,7 +150,7 @@ cs.get.hwb = function (string) {\\n \\t\\treturn null;\\n \\t}\\n \\n-\\tvar hwb = \/^hwb\\\\(\\\\s*([+-]?\\\\d*[\\\\.]?\\\\d+)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n+\\tvar hwb = \/^hwb\\\\(\\\\s*([+-]?\\\\d{0,3}(?:\\\\.\\\\d+)?)(?:deg)?\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*,\\\\s*([+-]?[\\\\d\\\\.]+)%\\\\s*(?:,\\\\s*([+-]?[\\\\d\\\\.]+)\\\\s*)?\\\\)$\/;\\n \\tvar match = string.match(hwb);\\n \\n \\tif (match) {'}}",
            "message_norm":"fix redos in hwb() parser (low-severity)\n\ndiscovered by yeting li, c\/o colin ife via snyk.io.\n\na redos (regular expression denial of service) vulnerability\nwas responsibly disclosed to me via email by colin on\nmar 5 2021 regarding an exponential time complexity for\nlinearly increasing input lengths for `hwb()` color strings.\n\nstrings reaching more than 5000 characters would see several\nmilliseconds of processing time; strings reaching more than\n50,000 characters began seeing 1500ms (1.5s) of processing time.\n\nthe cause was due to a the regular expression that parses\nhwb() strings - specifically, the hue value - where\nthe integer portion of the hue value used a 0-or-more quantifier\nshortly thereafter followed by a 1-or-more quantifier.\n\nthis caused excessive backtracking and a cartesian scan,\nresulting in exponential time complexity given a linear\nincrease in input length.\n\nthank you yeting li and colin ife for bringing this to my\nattention in a secure, responsible and professional manner.\n\na cve will not be assigned for this vulnerability.",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('low', 'SEVERITY', ''), ('redos', 'SECWORD', ''), ('denial of service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('secure', 'SECWORD', ''), ('cve', 'SECWORD', ''), ('vulnerability', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":2335,
            "vuln_id":"GHSA-m34j-p8rj-wjxq",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67784700869470d65d5f2ef20aeb5e97c31673cb'}",
            "dataset":"osv",
            "summary":"Division by 0 in `QuantizedBiasAdd` ### Impact\nAn attacker can trigger an integer division by zero undefined behavior in `tf.raw_ops.QuantizedBiasAdd`:\n\n```python\nimport tensorflow as tf\n\ninput_tensor = tf.constant([], shape=[0, 0, 0, 0], dtype=tf.quint8)\nbias = tf.constant([], shape=[0], dtype=tf.quint8)\nmin_input = tf.constant(-10.0, dtype=tf.float32)\nmax_input = tf.constant(-10.0, dtype=tf.float32)\nmin_bias = tf.constant(-10.0, dtype=tf.float32)\nmax_bias = tf.constant(-10.0, dtype=tf.float32)\n\ntf.raw_ops.QuantizedBiasAdd(input=input_tensor, bias=bias, min_input=min_input,\n                            max_input=max_input, min_bias=min_bias,\n                            max_bias=max_bias, out_type=tf.qint32)\n```\n\nThis is because the [implementation of the Eigen kernel](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/61bca8bd5ba8a68b2d97435ddfafcdf2b85672cd\/tensorflow\/core\/kernels\/quantization_utils.h#L812-L849) does a division by the number of elements of the smaller input (based on shape) without checking that this is not zero:\n\n```cc\ntemplate <typename T1, typename T2, typename T3>\nvoid QuantizedAddUsingEigen(const Eigen::ThreadPoolDevice& device,\n                            const Tensor& input, float input_min,\n                            float input_max, const Tensor& smaller_input,\n                            float smaller_input_min, float smaller_input_max,\n                            Tensor* output, float* output_min,\n                            float* output_max) {\n  ...\n  const int64 input_element_count = input.NumElements();\n  const int64 smaller_input_element_count = smaller_input.NumElements();\n  ...\n  bcast[0] = input_element_count \/ smaller_input_element_count;\n  ...\n}\n```\n\nThis integral division by 0 is undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [67784700869470d65d5f2ef20aeb5e97c31673cb](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67784700869470d65d5f2ef20aeb5e97c31673cb).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/67784700869470d65d5f2ef20aeb5e97c31673cb",
            "commit_sha":"67784700869470d65d5f2ef20aeb5e97c31673cb",
            "patch":"SINGLE",
            "chain_ord":"['67784700869470d65d5f2ef20aeb5e97c31673cb']",
            "before_first_fix_commit":"{'61bca8bd5ba8a68b2d97435ddfafcdf2b85672cd'}",
            "last_fix_commit":"67784700869470d65d5f2ef20aeb5e97c31673cb",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/23\/2021, 18:11:39",
            "message":"Prevent division by 0 in `QuantizedBiasAdd`.\n\nPiperOrigin-RevId: 370117454\nChange-Id: I3804e2ac8dcc6d3afcc92e27853e2325a017ca4d",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'tensorflow\/core\/kernels\/quantized_bias_add_op.cc': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/67784700869470d65d5f2ef20aeb5e97c31673cb\/tensorflow%2Fcore%2Fkernels%2Fquantized_bias_add_op.cc', 'patch': '@@ -56,6 +56,8 @@ class QuantizedBiasAddOp : public OpKernel {\\n             \"Must provide as many biases as the last dimension \"\\n             \"of the input tensor: \",\\n             bias.shape().DebugString(), \" vs. \", input.shape().DebugString()));\\n+    OP_REQUIRES(context, bias.NumElements() > 0,\\n+                errors::InvalidArgument(\"Must provide at least 1 bias\"));\\n \\n     Tensor* output = nullptr;\\n     OP_REQUIRES_OK(context,'}}",
            "message_norm":"prevent division by 0 in `quantizedbiasadd`.\n\npiperorigin-revid: 370117454\nchange-id: i3804e2ac8dcc6d3afcc92e27853e2325a017ca4d",
            "language":"it",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370117454', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/quantized_bias_add_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1197,
            "vuln_id":"GHSA-8cxv-76p7-jxwr",
            "cwe_id":"{'CWE-476'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250'}",
            "dataset":"osv",
            "summary":"Null-dereference in Tensorflow ### Impact\nThe [implementation of `GetInitOp`](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/cc\/saved_model\/loader_util.cc#L31-L61) is vulnerable to a crash caused by dereferencing a null pointer:\n\n```cc\nconst auto& init_op_sig_it =\n    meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);\nif (init_op_sig_it != sig_def_map.end()) {\n  *init_op_name = init_op_sig_it->second.outputs()\n                      .find(kSavedModelInitOpSignatureKey)\n                      ->second.name();\n  return Status::OK();\n}\n```\n\nHere, we have a nested map and we assume that if the first `.find` succeeds then so would be the search in the internal map. However, the maps are built based on the `SavedModel` protobuf format and a malicious user can alter that on disk before loading to cause the second `.find` to return `nullptr`.\n### Patches\nWe have patched the issue in GitHub commit [4f38b1ac8e42727e18a2f0bde06d3bee8e77b250](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250",
            "commit_sha":"4f38b1ac8e42727e18a2f0bde06d3bee8e77b250",
            "patch":"SINGLE",
            "chain_ord":"['4f38b1ac8e42727e18a2f0bde06d3bee8e77b250']",
            "before_first_fix_commit":"{'7b84b7c651dc2ecc1e28f2acc65bfe371a04ecfc'}",
            "last_fix_commit":"4f38b1ac8e42727e18a2f0bde06d3bee8e77b250",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/10\/2021, 00:56:28",
            "message":"Prevent null dereference read in `GetInitOp`.\n\nWe have a map of maps. We test that the key exists in the first map but then we don't have any validation that this also means the second map has the needed key. In the scenarios where this is not the case, we'll dereference a nullptr, if we don't have this check\n\nPiperOrigin-RevId: 408739325\nChange-Id: If9bb7ed759aba1f3b56a34913f209508dbaf65ce",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 3, 'total': 11}",
            "files":"{'tensorflow\/cc\/saved_model\/loader_util.cc': {'additions': 8, 'deletions': 3, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250\/tensorflow%2Fcc%2Fsaved_model%2Floader_util.cc', 'patch': '@@ -34,9 +34,14 @@ Status GetInitOp(const string& export_dir, const MetaGraphDef& meta_graph_def,\\n   const auto& init_op_sig_it =\\n       meta_graph_def.signature_def().find(kSavedModelInitOpSignatureKey);\\n   if (init_op_sig_it != sig_def_map.end()) {\\n-    *init_op_name = init_op_sig_it->second.outputs()\\n-                        .find(kSavedModelInitOpSignatureKey)\\n-                        ->second.name();\\n+    const auto& sig_def_outputs = init_op_sig_it->second.outputs();\\n+    const auto& sig_def_outputs_it =\\n+        sig_def_outputs.find(kSavedModelInitOpSignatureKey);\\n+    if (sig_def_outputs_it == sig_def_outputs.end()) {\\n+      return errors::FailedPrecondition(\"Could not find output \",\\n+                                        kSavedModelInitOpSignatureKey);\\n+    }\\n+    *init_op_name = sig_def_outputs_it->second.name();\\n     return Status::OK();\\n   }'}}",
            "message_norm":"prevent null dereference read in `getinitop`.\n\nwe have a map of maps. we test that the key exists in the first map but then we don't have any validation that this also means the second map has the needed key. in the scenarios where this is not the case, we'll dereference a nullptr, if we don't have this check\n\npiperorigin-revid: 408739325\nchange-id: if9bb7ed759aba1f3b56a34913f209508dbaf65ce",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('null dereference', 'SECWORD', ''), ('key', 'SECWORD', ''), ('key', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('408739325', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/cc\/saved_model\/loader_util.cc'])",
            "num_files":1.0
        },
        {
            "index":3397,
            "vuln_id":"GHSA-x8h6-xgqx-jqgp",
            "cwe_id":"{'CWE-908'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925'}",
            "dataset":"osv",
            "summary":"Undefined behavior and `CHECK`-fail in `FractionalMaxPoolGrad` ### Impact\nThe implementation of `tf.raw_ops.FractionalMaxPoolGrad` triggers an undefined behavior if one of the input tensors is empty:\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([2, 3], shape=[1, 1, 1, 2], dtype=tf.int64)\norig_output = tf.constant([], dtype=tf.int64) \nout_backprop = tf.zeros([2, 3, 6, 6], dtype=tf.int64)\nrow_pooling_sequence = tf.constant([0], shape=[1], dtype=tf.int64)\ncol_pooling_sequence = tf.constant([0], shape=[1], dtype=tf.int64)\n\ntf.raw_ops.FractionalMaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, out_backprop=out_backprop,\n  row_pooling_sequence=row_pooling_sequence,\n  col_pooling_sequence=col_pooling_sequence, overlapping=False)\n```\n\nThe code is also vulnerable to a denial of service attack as a `CHECK` condition becomes false and aborts the process\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([1], shape=[1], dtype=tf.int64)\norig_output = tf.constant([1], shape=[1], dtype=tf.int64)\nout_backprop = tf.constant([1, 1], shape=[2, 1, 1, 1], dtype=tf.int64)\nrow_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64) \ncol_pooling_sequence = tf.constant([1], shape=[1], dtype=tf.int64)\n\ntf.raw_ops.FractionalMaxPoolGrad(\n  orig_input=orig_input, orig_output=orig_output, out_backprop=out_backprop,\n  row_pooling_sequence=row_pooling_sequence,\n  col_pooling_sequence=col_pooling_sequence, overlapping=False)\n``` \n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/169054888d50ce488dfde9ca55d91d6325efbd5b\/tensorflow\/core\/kernels\/fractional_max_pool_op.cc#L215) fails to validate that input and output tensors are not empty and are of the same rank. Each of these unchecked assumptions is responsible for the above issues.\n\n### Patches\nWe have patched the issue in GitHub commit [32fdcbff9d06d010d908fcc4bd4b36eb3ce15925](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
            "commit_sha":"32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
            "patch":"SINGLE",
            "chain_ord":"['32fdcbff9d06d010d908fcc4bd4b36eb3ce15925']",
            "before_first_fix_commit":"{'169054888d50ce488dfde9ca55d91d6325efbd5b'}",
            "last_fix_commit":"32fdcbff9d06d010d908fcc4bd4b36eb3ce15925",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/06\/2021, 05:39:29",
            "message":"Validate arguments of `FractionalMaxPoolGrad`\n\nPiperOrigin-RevId: 372274982\nChange-Id: If46b0c442efa4eaef635ce6a476717060420122c",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 0, 'total': 14}",
            "files":"{'tensorflow\/core\/kernels\/fractional_max_pool_op.cc': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/32fdcbff9d06d010d908fcc4bd4b36eb3ce15925\/tensorflow%2Fcore%2Fkernels%2Ffractional_max_pool_op.cc', 'patch': '@@ -235,6 +235,20 @@ class FractionalMaxPoolGradOp : public OpKernel {\\n \\n     \/\/ Just to make it similar to FractionalMaxPoolOp.\\n     constexpr int tensor_in_and_out_dims = 4;\\n+    OP_REQUIRES(\\n+        context, tensor_in.dims() == tensor_in_and_out_dims,\\n+        errors::InvalidArgument(\"orig_input should be a tensor of rank 4, got \",\\n+                                tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_in.NumElements() > 0,\\n+                errors::InvalidArgument(\"orig_input must not be empty, got \",\\n+                                        tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.dims() == tensor_in_and_out_dims,\\n+                errors::InvalidArgument(\\n+                    \"orig_output should be a tensor of rank 4, got \",\\n+                    tensor_out.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.NumElements() > 0,\\n+                errors::InvalidArgument(\"orig_output must not be empty, got \",\\n+                                        tensor_out.DebugString()));\\n     std::vector<int64> input_size(tensor_in_and_out_dims);\\n     std::vector<int64> output_size(tensor_in_and_out_dims);\\n     for (int i = 0; i < tensor_in_and_out_dims; ++i) {'}}",
            "message_norm":"validate arguments of `fractionalmaxpoolgrad`\n\npiperorigin-revid: 372274982\nchange-id: if46b0c442efa4eaef635ce6a476717060420122c",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('372274982', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_max_pool_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3394,
            "vuln_id":"GHSA-x7r7-wmj8-vv5g",
            "cwe_id":"{'CWE-79'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/octoprint\/octoprint\/commit\/8087528e4a7ddd15c7d95ff662deb5ef7de90045'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in OctoPrint Cross-site Scripting (XSS) - DOM in GitHub repository octoprint\/octoprint prior to 1.8.0. The login endpoint allows for javascript injection which may lead to account takeover in a phishing scenario.",
            "published_date":"2022-05-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/octoprint\/octoprint",
            "commit_href":"https:\/\/github.com\/octoprint\/octoprint\/commit\/8087528e4a7ddd15c7d95ff662deb5ef7de90045",
            "commit_sha":"8087528e4a7ddd15c7d95ff662deb5ef7de90045",
            "patch":"SINGLE",
            "chain_ord":"['8087528e4a7ddd15c7d95ff662deb5ef7de90045']",
            "before_first_fix_commit":"{'700034d028ff3518b563a7b4ba4dacc920142d07'}",
            "last_fix_commit":"8087528e4a7ddd15c7d95ff662deb5ef7de90045",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/11\/2022, 11:02:52",
            "message":"\ud83d\udd12\ufe0f Sanitize and validate login redirect\n\nFixes an XSS and an open redirect issue.",
            "author":"Gina H\u00e4u\u00dfge",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 1, 'total': 12}",
            "files":"{'src\/octoprint\/server\/views.py': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/OctoPrint\/OctoPrint\/raw\/8087528e4a7ddd15c7d95ff662deb5ef7de90045\/src%2Foctoprint%2Fserver%2Fviews.py', 'patch': '@@ -8,6 +8,7 @@\\n import os\\n import re\\n from collections import defaultdict\\n+from urllib.parse import urlparse\\n \\n from flask import (\\n     Response,\\n@@ -170,7 +171,16 @@ def _add_additional_assets(hook):\\n def login():\\n     from flask_login import current_user\\n \\n-    redirect_url = request.args.get(\"redirect\", request.script_root + url_for(\"index\"))\\n+    default_redirect_url = request.script_root + url_for(\"index\")\\n+    redirect_url = request.args.get(\"redirect\", default_redirect_url)\\n+\\n+    parsed = urlparse(redirect_url)  # check if redirect url is valid\\n+    if parsed.scheme != \"\" or parsed.netloc != \"\":\\n+        _logger.warning(\\n+            f\"Got an invalid redirect URL with the login attempt, misconfiguration or attack attempt: {redirect_url}\"\\n+        )\\n+        redirect_url = default_redirect_url\\n+\\n     permissions = sorted(\\n         filter(\\n             lambda x: x is not None and isinstance(x, OctoPrintPermission),'}}",
            "message_norm":"\ud83d\udd12\ufe0f sanitize and validate login redirect\n\nfixes an xss and an open redirect issue.",
            "language":"en",
            "entities":"[('sanitize', 'SECWORD', ''), ('validate', 'ACTION', ''), ('login', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('xss', 'SECWORD', ''), ('open redirect', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/octoprint\/server\/views.py'])",
            "num_files":1.0
        },
        {
            "index":1110,
            "vuln_id":"GHSA-828x-qc2p-wprq",
            "cwe_id":"{'CWE-476'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4'}",
            "dataset":"osv",
            "summary":"Undefined behavior in `MaxPool3DGradGrad` ### Impact\nThe implementation of `tf.raw_ops.MaxPool3DGradGrad` exhibits undefined behavior by dereferencing null pointers backing attacker-supplied empty tensors:\n\n```python\nimport tensorflow as tf\n\norig_input = tf.constant([0.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\norig_output = tf.constant([0.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\ngrad = tf.constant([], shape=[0, 0, 0, 0, 0], dtype=tf.float32)\nksize = [1, 1, 1, 1, 1]\nstrides = [1, 1, 1, 1, 1]\npadding = \"SAME\"\n\ntf.raw_ops.MaxPool3DGradGrad(\n    orig_input=orig_input, orig_output=orig_output, grad=grad, ksize=ksize,\n    strides=strides, padding=padding)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/72fe792967e7fd25234342068806707bbc116618\/tensorflow\/core\/kernels\/pooling_ops_3d.cc#L679-L703) fails to validate that the 3 tensor inputs are not empty. If any of them is empty, then accessing the elements in the tensor results in dereferencing a null pointer.\n\n### Patches\nWe have patched the issue in GitHub commit [a3d9f9be9ac2296615644061b40cefcee341dcc4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "commit_sha":"a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "patch":"SINGLE",
            "chain_ord":"['a3d9f9be9ac2296615644061b40cefcee341dcc4']",
            "before_first_fix_commit":"{'72fe792967e7fd25234342068806707bbc116618'}",
            "last_fix_commit":"a3d9f9be9ac2296615644061b40cefcee341dcc4",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 22:20:14",
            "message":"Add missing validation to pooling_ops_3d\n\nPiperOrigin-RevId: 372218727\nChange-Id: I6b9ed4266aa7286c02f1f230d7bea922c1be547e",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 0, 'total': 13}",
            "files":"{'tensorflow\/core\/kernels\/pooling_ops_3d.cc': {'additions': 13, 'deletions': 0, 'changes': 13, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a3d9f9be9ac2296615644061b40cefcee341dcc4\/tensorflow%2Fcore%2Fkernels%2Fpooling_ops_3d.cc', 'patch': '@@ -698,6 +698,19 @@ class MaxPooling3dGradGradOp : public OpKernel {\\n     OP_REQUIRES_OK(context, context->forward_input_or_allocate_output(\\n                                 {2}, 0, tensor_out.shape(), &output));\\n \\n+    \/\/ Given access patterns in LaunchMaxPooling3dGradGradOp, these tensors must\\n+    \/\/ have elements.\\n+    OP_REQUIRES(context, tensor_in.NumElements() > 0,\\n+                errors::InvalidArgument(\"received empty tensor tensor_in: \",\\n+                                        tensor_in.DebugString()));\\n+    OP_REQUIRES(context, tensor_out.NumElements() > 0,\\n+                errors::InvalidArgument(\"received empty tensor tensor_out: \",\\n+                                        tensor_out.DebugString()));\\n+    OP_REQUIRES(\\n+        context, out_grad_backprop.NumElements() > 0,\\n+        errors::InvalidArgument(\"received empty tensor out_grad_backprop: \",\\n+                                out_grad_backprop.DebugString()));\\n+\\n     LaunchMaxPooling3dGradGradOp<Device, T>::launch(\\n         context, params, tensor_in, tensor_out, out_grad_backprop, output);\\n   }'}}",
            "message_norm":"add missing validation to pooling_ops_3d\n\npiperorigin-revid: 372218727\nchange-id: i6b9ed4266aa7286c02f1f230d7bea922c1be547e",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validation', 'SECWORD', ''), ('372218727', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/pooling_ops_3d.cc'])",
            "num_files":1.0
        },
        {
            "index":56,
            "vuln_id":"GHSA-27j5-4p9v-pp67",
            "cwe_id":"{'CWE-617'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a6e874437670045e6c7dc6154c7412b4a2135e2'}",
            "dataset":"osv",
            "summary":"`std::abort` raised from `TensorListReserve` ### Impact\nProviding a negative element to `num_elements` list argument of  `tf.raw_ops.TensorListReserve` causes the runtime to abort the process due to reallocating a `std::vector` to have a negative number of elements:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.TensorListReserve(\n  element_shape = tf.constant([1]),\n  num_elements=tf.constant([-1]),\n  element_dtype = tf.int32)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/list_kernels.cc#L312) calls `std::vector.resize()` with the new size controlled by input given by the user, without checking that this input is valid.\n\n### Patches\nWe have patched the issue in GitHub commit [8a6e874437670045e6c7dc6154c7412b4a2135e2](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a6e874437670045e6c7dc6154c7412b4a2135e2).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information \nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8a6e874437670045e6c7dc6154c7412b4a2135e2",
            "commit_sha":"8a6e874437670045e6c7dc6154c7412b4a2135e2",
            "patch":"SINGLE",
            "chain_ord":"['8a6e874437670045e6c7dc6154c7412b4a2135e2']",
            "before_first_fix_commit":"{'3e23241a7f330f62c701f5ceb10f6594cd735f70'}",
            "last_fix_commit":"8a6e874437670045e6c7dc6154c7412b4a2135e2",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/10\/2021, 00:32:55",
            "message":"Validate num_elements input in tf.raw_ops.TensorListReserve\n\nPiperOrigin-RevId: 383954564\nChange-Id: I454bd78eff85bc4f16ddb7e608596971cca47f8f",
            "author":"Laura Pak",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/list_kernels.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8a6e874437670045e6c7dc6154c7412b4a2135e2\/tensorflow%2Fcore%2Fkernels%2Flist_kernels.cc', 'patch': '@@ -302,6 +302,10 @@ class TensorListReserve : public OpKernel {\\n     PartialTensorShape element_shape;\\n     OP_REQUIRES_OK(c, TensorShapeFromTensor(c->input(0), &element_shape));\\n     int32 num_elements = c->input(1).scalar<int32>()();\\n+    OP_REQUIRES(c, num_elements >= 0,\\n+                errors::InvalidArgument(\"The num_elements to reserve must be a \"\\n+                                        \"non negative number, but got \",\\n+                                        num_elements));\\n     TensorList output;\\n     output.element_shape = element_shape;\\n     output.element_dtype = element_dtype_;'}}",
            "message_norm":"validate num_elements input in tf.raw_ops.tensorlistreserve\n\npiperorigin-revid: 383954564\nchange-id: i454bd78eff85bc4f16ddb7e608596971cca47f8f",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('383954564', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/list_kernels.cc'])",
            "num_files":1.0
        },
        {
            "index":1179,
            "vuln_id":"GHSA-89px-ww3j-g2mm",
            "cwe_id":"{'CWE-304', 'CWE-290'}",
            "score":8.7,
            "chain":"{'https:\/\/github.com\/labd\/wagtail-2fa\/commit\/13b12995d35b566df08a17257a23863ab6efb0ca', 'https:\/\/github.com\/labd\/wagtail-2fa\/commit\/a6711b29711729005770ff481b22675b35ff5c81'}",
            "dataset":"osv",
            "summary":"2FA bypass in Wagtail through new device path ## 2FA bypass through new device path\n\n### Impact\nIf someone gains access to someone's Wagtail login credentials, they can log into the CMS and bypass the 2FA check by changing the URL. They can then add a new device and gain full access to the CMS.\n\n### Patches\nThis problem has been patched in version 1.3.0.\n\n### Workarounds\nThere is no workaround at the moment.\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [github.com\/labd\/wagtail-2fa](https:\/\/github.com\/labd\/wagtail-2fa)\n* Email us at [security@labdigital.nl](mailto:security@labdigital.nl)",
            "published_date":"2019-11-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/labd\/wagtail-2fa",
            "commit_href":"https:\/\/github.com\/labd\/wagtail-2fa\/commit\/13b12995d35b566df08a17257a23863ab6efb0ca",
            "commit_sha":"13b12995d35b566df08a17257a23863ab6efb0ca",
            "patch":"MULTI",
            "chain_ord":"['a6711b29711729005770ff481b22675b35ff5c81', '13b12995d35b566df08a17257a23863ab6efb0ca']",
            "before_first_fix_commit":"{'bceef354b3ab885350e3bc79a793589c491f6037'}",
            "last_fix_commit":"13b12995d35b566df08a17257a23863ab6efb0ca",
            "chain_ord_pos":2.0,
            "commit_datetime":"11\/26\/2019, 11:56:05",
            "message":"Update changelog for 1.3.0 release",
            "author":"Mike Dingjan",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 0, 'total': 8}",
            "files":"{'CHANGES': {'additions': 8, 'deletions': 0, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/labd\/wagtail-2fa\/raw\/13b12995d35b566df08a17257a23863ab6efb0ca\/CHANGES', 'patch': '@@ -1,3 +1,11 @@\\n+1.3.0 (2019.11.26)\\n+==================\\n+ - Add OtpRequiredMixin to enforce OTP checks in views\\n+ - Resolve possible vulnerabilities:\\n+    - [CWE-290](http:\/\/cwe.mitre.org\/data\/definitions\/290.html)\\n+    - [CWE-20](http:\/\/cwe.mitre.org\/data\/definitions\/20.html)\\n+\\n+\\n 1.2.0 (2019-10-30)\\n ==================\\n  - Added missing deps for generation of the docs'}}",
            "message_norm":"update changelog for 1.3.0 release",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('1.3.0', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['CHANGES'])",
            "num_files":1.0
        },
        {
            "index":927,
            "vuln_id":"GHSA-72p8-v4hg-v45p",
            "cwe_id":"{'CWE-330', 'CWE-338'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/sshnet\/SSH.NET\/commit\/03c6d60736b8f7b42e44d6989a53f9b644a091fb', 'https:\/\/github.com\/sshnet\/SSH.NET\/commit\/f1f273cf349532b9d41c1de51d3b83a9accedc88'}",
            "dataset":"osv",
            "summary":"Weak private key generation in SSH.NET During an **X25519** key exchange, the client\u2019s private is generated with [**System.Random**](https:\/\/docs.microsoft.com\/en-us\/dotnet\/api\/system.random):\n\n```cs\nvar rnd = new Random();\n_privateKey = new byte[MontgomeryCurve25519.PrivateKeySizeInBytes];\nrnd.NextBytes(_privateKey);\n```\n\nSource: [KeyExchangeECCurve25519.cs](https:\/\/github.com\/sshnet\/SSH.NET\/blob\/bc99ada7da3f05f50d9379f2644941d91d5bf05a\/src\/Renci.SshNet\/Security\/KeyExchangeECCurve25519.cs#L51)  \nSource commit: https:\/\/github.com\/sshnet\/SSH.NET\/commit\/b58a11c0da55da1f5bad46faad2e9b71b7cb35b3\n\n[**System.Random**](https:\/\/docs.microsoft.com\/en-us\/dotnet\/api\/system.random) is not a cryptographically secure random number generator, it must therefore not be used for cryptographic purposes.\n\n### Impact\nWhen establishing an SSH connection to a remote host, during the X25519 key exchange, the private key is generated with\na weak random number generator whose seed can be bruteforced. This allows an attacker able to eavesdrop the\ncommunications to decrypt them.\n\n### Workarounds\nTo ensure you're not affected by this vulnerability, you can disable support for `curve25519-sha256` and `curve25519-sha256@libssh.org` key exchange algorithms by invoking the following method before a connection is established:\n```cs\nprivate static void RemoveUnsecureKEX(BaseClient client)\n{\n    client.ConnectionInfo.KeyExchangeAlgorithms.Remove(\"curve25519-sha256\");\n    client.ConnectionInfo.KeyExchangeAlgorithms.Remove(\"curve25519-sha256@libssh.org\");\n}\n```\n\n### Thanks\n\nThis issue was initially reported by **Siemens AG, Digital Industries**, shortly followed by @yaumn-synacktiv.",
            "published_date":"2022-06-01",
            "chain_len":2,
            "project":"https:\/\/github.com\/sshnet\/SSH.NET",
            "commit_href":"https:\/\/github.com\/sshnet\/SSH.NET\/commit\/03c6d60736b8f7b42e44d6989a53f9b644a091fb",
            "commit_sha":"03c6d60736b8f7b42e44d6989a53f9b644a091fb",
            "patch":"MULTI",
            "chain_ord":"['f1f273cf349532b9d41c1de51d3b83a9accedc88', '03c6d60736b8f7b42e44d6989a53f9b644a091fb']",
            "before_first_fix_commit":"{'cad943343b4c7ea55975a3033ef1cd0646b6b9d7'}",
            "last_fix_commit":"03c6d60736b8f7b42e44d6989a53f9b644a091fb",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/29\/2022, 14:58:07",
            "message":"Use cryptographically secure random number generator.\nFixes CVE-2022-29245.",
            "author":"drieseng",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 3, 'total': 4}",
            "files":"{'src\/Renci.SshNet\/Security\/KeyExchangeECCurve25519.cs': {'additions': 1, 'deletions': 3, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sshnet\/SSH.NET\/raw\/03c6d60736b8f7b42e44d6989a53f9b644a091fb\/src%2FRenci.SshNet%2FSecurity%2FKeyExchangeECCurve25519.cs', 'patch': '@@ -46,9 +46,7 @@ public override void Start(Session session, KeyExchangeInitMessage message)\\n             var basepoint = new byte[MontgomeryCurve25519.PublicKeySizeInBytes];\\n             basepoint[0] = 9;\\n \\n-            var rnd = new Random();\\n-            _privateKey = new byte[MontgomeryCurve25519.PrivateKeySizeInBytes];\\n-            rnd.NextBytes(_privateKey);\\n+            _privateKey = CryptoAbstraction.GenerateRandom(MontgomeryCurve25519.PrivateKeySizeInBytes);\\n \\n             _clientExchangeValue = new byte[MontgomeryCurve25519.PublicKeySizeInBytes];\\n             MontgomeryOperations.scalarmult(_clientExchangeValue, 0, _privateKey, 0, basepoint, 0);'}}",
            "message_norm":"use cryptographically secure random number generator.\nfixes cve-2022-29245.",
            "language":"en",
            "entities":"[('cryptographically', 'SECWORD', ''), ('secure', 'SECWORD', ''), ('cve-2022-29245', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/Renci.SshNet\/Security\/KeyExchangeECCurve25519.cs'])",
            "num_files":1.0
        },
        {
            "index":3264,
            "vuln_id":"GHSA-wcv5-qrj6-9pfm",
            "cwe_id":"{'CWE-787', 'CWE-120'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `Conv3DBackprop*` ### Impact\nMissing validation between arguments to `tf.raw_ops.Conv3DBackprop*` operations can result in heap buffer overflows:\n\n```python\nimport tensorflow as tf\n\ninput_sizes = tf.constant([1, 1, 1, 1, 2], shape=[5], dtype=tf.int32)\nfilter_tensor = tf.constant([734.6274508233133, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0,\n                            -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0,\n                            -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0], shape=[4, 1, 6, 1, 1], dtype=tf.float32)\nout_backprop = tf.constant([-10.0], shape=[1, 1, 1, 1, 1], dtype=tf.float32)\n\ntf.raw_ops.Conv3DBackpropInputV2(input_sizes=input_sizes, filter=filter_tensor, out_backprop=out_backprop, strides=[1, 89, 29, 89, 1], padding='SAME', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n```python\nimport tensorflow as tf\n\ninput_values = [-10.0] * (7 * 7 * 7 * 7 * 7)\ninput_values[0] = 429.6491056791816\ninput_sizes = tf.constant(input_values, shape=[7, 7, 7, 7, 7], dtype=tf.float32)\nfilter_tensor = tf.constant([7, 7, 7, 1, 1], shape=[5], dtype=tf.int32)\nout_backprop = tf.constant([-10.0, -10.0, -10.0, -10.0, -10.0, -10.0, -10.0], shape=[7, 1, 1, 1, 1], dtype=tf.float32)\n  \ntf.raw_ops.Conv3DBackpropFilterV2(input=input_sizes, filter_sizes=filter_tensor, out_backprop=out_backprop, strides=[1, 37, 65, 93, 1], padding='VALID', data_format='NDHWC', dilations=[1, 1, 1, 1, 1])\n```\n\nThis is because the [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/4814fafb0ca6b5ab58a09411523b2193fed23fed\/tensorflow\/core\/kernels\/conv_grad_shape_utils.cc#L94-L153) assumes that the `input`, `filter_sizes` and `out_backprop` tensors have the same shape, as they are accessed in parallel.\n\n### Patches\nWe have patched the issue in GitHub commit [8f37b52e1320d8d72a9529b2468277791a261197](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our securityguide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/8f37b52e1320d8d72a9529b2468277791a261197",
            "commit_sha":"8f37b52e1320d8d72a9529b2468277791a261197",
            "patch":"SINGLE",
            "chain_ord":"['8f37b52e1320d8d72a9529b2468277791a261197']",
            "before_first_fix_commit":"{'4814fafb0ca6b5ab58a09411523b2193fed23fed'}",
            "last_fix_commit":"8f37b52e1320d8d72a9529b2468277791a261197",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/19\/2021, 20:46:32",
            "message":"Validate some shape requirements for `Conv3DBackpropFilter*` and `Conv3DBackpropInput*` ops.\n\nOlder versions of Eigen might otherwise crash \/ produce OOB read on specially crafted inputs.\n\nPiperOrigin-RevId: 369293977\nChange-Id: I58f51445a93936d7cf8e616f75de17677df36718",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 56, 'deletions': 0, 'total': 56}",
            "files":"{'tensorflow\/core\/kernels\/conv_grad_ops_3d.cc': {'additions': 56, 'deletions': 0, 'changes': 56, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/8f37b52e1320d8d72a9529b2468277791a261197\/tensorflow%2Fcore%2Fkernels%2Fconv_grad_ops_3d.cc', 'patch': '@@ -239,6 +239,20 @@ class Conv3DBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context, ConvBackpropComputeDimensions(\\n                                 \"Conv3DBackpropInputOp\", \/*num_spatial_dims=*\/3,\\n@@ -346,6 +360,20 @@ class Conv3DCustomBackpropInputOp : public OpKernel {\\n       input_shape = context->input(0).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context, ConvBackpropComputeDimensions(\\n                                 \"Conv3DBackpropInputOp\", \/*num_spatial_dims=*\/3,\\n@@ -696,6 +724,20 @@ class Conv3DBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context,\\n                    ConvBackpropComputeDimensions(\\n@@ -808,6 +850,20 @@ class Conv3DCustomBackpropFilterOp : public OpKernel {\\n       filter_shape = context->input(1).shape();\\n     }\\n \\n+    OP_REQUIRES(\\n+        context, input_shape.dim_size(4) == filter_shape.dim_size(3),\\n+        errors::InvalidArgument(\"input and filter_sizes must have the same \"\\n+                                \"number of channels. Got \",\\n+                                input_shape.dim_size(4), \" for input and \",\\n+                                filter_shape.dim_size(3), \" for filter_sizes\"));\\n+    OP_REQUIRES(\\n+        context, out_backprop_shape.dim_size(4) == filter_shape.dim_size(4),\\n+        errors::InvalidArgument(\"out_backprop and filter_sizes must have the \"\\n+                                \"same number of channels. Got \",\\n+                                out_backprop_shape.dim_size(4),\\n+                                \" for out_backprop and \",\\n+                                filter_shape.dim_size(4), \" for filter_sizes\"));\\n+\\n     ConvBackpropDimensions dims;\\n     OP_REQUIRES_OK(context,\\n                    ConvBackpropComputeDimensions('}}",
            "message_norm":"validate some shape requirements for `conv3dbackpropfilter*` and `conv3dbackpropinput*` ops.\n\nolder versions of eigen might otherwise crash \/ produce oob read on specially crafted inputs.\n\npiperorigin-revid: 369293977\nchange-id: i58f51445a93936d7cf8e616f75de17677df36718",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('oob', 'SECWORD', ''), ('369293977', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/conv_grad_ops_3d.cc'])",
            "num_files":1.0
        },
        {
            "index":1357,
            "vuln_id":"GHSA-9c8h-vvrj-w2p8",
            "cwe_id":"{'CWE-125'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373'}",
            "dataset":"osv",
            "summary":"Heap OOB in `RaggedGather` ### Impact\nIf the arguments to `tf.raw_ops.RaggedGather` don't determine a valid ragged tensor code can trigger a read from outside of bounds of heap allocated buffers.\n                                                                                                                                                                                                                                                                                          \n```python\nimport tensorflow as tf\n\ntf.raw_ops.RaggedGather(\n  params_nested_splits = [0,0,0],\n  params_dense_values = [1,1],\n  indices = [0,0,9,0,0],\n  OUTPUT_RAGGED_RANK=0)\n```\n\nIn debug mode, the same code triggers a `CHECK` failure.\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/8d72537c6abf5a44103b57b9c2e22c14f5f49698\/tensorflow\/core\/kernels\/ragged_gather_op.cc#L70) directly reads the first dimension of a tensor shape before checking that said tensor has rank of at least 1 (i.e., it is not a scalar). Furthermore, the implementation does not check that the list given by `params_nested_splits` is not an empty list of tensors.\n\n### Patches\nWe have patched the issue in GitHub commit [a2b743f6017d7b97af1fe49087ae15f0ac634373](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a2b743f6017d7b97af1fe49087ae15f0ac634373",
            "commit_sha":"a2b743f6017d7b97af1fe49087ae15f0ac634373",
            "patch":"SINGLE",
            "chain_ord":"['a2b743f6017d7b97af1fe49087ae15f0ac634373']",
            "before_first_fix_commit":"{'4979e3b104cede96958ea88be5ce5fc584949340'}",
            "last_fix_commit":"a2b743f6017d7b97af1fe49087ae15f0ac634373",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/03\/2021, 02:05:27",
            "message":"Fix heap OOB in `tf.raw_ops.RaggedGather`\n\nPiperOrigin-RevId: 388355464\nChange-Id: If14d96231d1cd7aad7c4d1c22c1bab1576b75717",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 1, 'total': 8}",
            "files":"{'tensorflow\/core\/kernels\/ragged_gather_op.cc': {'additions': 7, 'deletions': 1, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a2b743f6017d7b97af1fe49087ae15f0ac634373\/tensorflow%2Fcore%2Fkernels%2Fragged_gather_op.cc', 'patch': '@@ -58,15 +58,21 @@ class RaggedGatherOpBase : public OpKernel {\\n \\n   void Compute(OpKernelContext* context) override {\\n     \/\/ Get the input Tensors.\\n+\\n     OpInputList params_nested_splits_in;\\n     OP_REQUIRES_OK(context, context->input_list(\"params_nested_splits\",\\n                                                 &params_nested_splits_in));\\n+    OP_REQUIRES(\\n+        context, params_nested_splits_in.size() > 0,\\n+        errors::InvalidArgument(\"params_nested_splits must be non empty\"));\\n+\\n     const Tensor& params_dense_values_in =\\n         context->input(params_nested_splits_in.size());\\n     const Tensor& indices_in =\\n         context->input(params_nested_splits_in.size() + 1);\\n \\n-    DCHECK_GT(params_nested_splits_in.size(), 0);  \/\/ Enforced by REGISTER_OP.\\n+    OP_REQUIRES(context, params_nested_splits_in[0].dims() > 0,\\n+                errors::InvalidArgument(\"Split tensors must not be scalars\"));\\n     SPLITS_TYPE num_params = params_nested_splits_in[0].dim_size(0) - 1;\\n     OP_REQUIRES_OK(context, ValidateIndices(indices_in, num_params));'}}",
            "message_norm":"fix heap oob in `tf.raw_ops.raggedgather`\n\npiperorigin-revid: 388355464\nchange-id: if14d96231d1cd7aad7c4d1c22c1bab1576b75717",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('heap oob', 'SECWORD', ''), ('388355464', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/ragged_gather_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1159,
            "vuln_id":"GHSA-874w-m2v2-mj64",
            "cwe_id":"{'CWE-415'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/adplug\/adplug\/commit\/1a282a486a8e33fef3e15998bf6408d3515dc07e', 'https:\/\/github.com\/miller-alex\/adplug\/commit\/8abb9328bf27dcbdafc67ade3e75af0ffd8f7633'}",
            "dataset":"osv",
            "summary":"Double Free in Adplug AdPlug 2.3.1 has a double free in the Cu6mPlayer class in u6m.h.",
            "published_date":"2021-03-29",
            "chain_len":2,
            "project":"https:\/\/github.com\/adplug\/adplug",
            "commit_href":"https:\/\/github.com\/adplug\/adplug\/commit\/1a282a486a8e33fef3e15998bf6408d3515dc07e",
            "commit_sha":"1a282a486a8e33fef3e15998bf6408d3515dc07e",
            "patch":"MULTI",
            "chain_ord":"['8abb9328bf27dcbdafc67ade3e75af0ffd8f7633', '1a282a486a8e33fef3e15998bf6408d3515dc07e']",
            "before_first_fix_commit":"{'a8903d884e2c900e77af5c70ef440e72626646ad'}",
            "last_fix_commit":"1a282a486a8e33fef3e15998bf6408d3515dc07e",
            "chain_ord_pos":2.0,
            "commit_datetime":"05\/11\/2020, 11:48:45",
            "message":"Update NEWS with a list of CVEs now fixed",
            "author":"Adam Nielsen",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 0, 'total': 10}",
            "files":"{'NEWS': {'additions': 10, 'deletions': 0, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/adplug\/adplug\/raw\/1a282a486a8e33fef3e15998bf6408d3515dc07e\/NEWS', 'patch': '@@ -2,6 +2,16 @@ This is a brief overview of user-visible changes in AdPlug.\\n \\n Changes for version 2.3.3:\\n --------------------------\\n+- Bug fixes: (huge thanks to Alexander Miller for these)\\n+  - CVE-2019-14690 - buffer overflow in .bmf\\n+  - CVE-2019-14691 - buffer overflow in .dtm\\n+  - CVE-2019-14692 - buffer overflow in .mkj\\n+  - CVE-2019-14732 - buffer overflow in .a2m\\n+  - CVE-2019-14733 - buffer overflow in .rad\\n+  - CVE-2019-14734 - buffer overflow in .mtk\\n+  - CVE-2019-15151 - double free and OOB reads in .u6m\\n+  - OOB reads in .xad\\n+  - OOB reads in .rix\\n \\n Changes for version 2.3.2:\\n --------------------------'}}",
            "message_norm":"update news with a list of cves now fixed",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('fixed', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['NEWS'])",
            "num_files":1.0
        },
        {
            "index":425,
            "vuln_id":"GHSA-4gw3-8f77-f72c",
            "cwe_id":"{'CWE-400'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/codemirror\/CodeMirror\/commit\/55d0333907117c9231ffdf555ae8824705993bbb'}",
            "dataset":"osv",
            "summary":"Regular expression denial of service in codemirror This affects the package codemirror before 5.58.2; the package org.apache.marmotta.webjars:codemirror before 5.58.2.\n The vulnerable regular expression is located in https:\/\/github.com\/codemirror\/CodeMirror\/blob\/cdb228ac736369c685865b122b736cd0d397836c\/mode\/javascript\/javascript.jsL129. The ReDOS vulnerability of the regex is mainly due to the sub-pattern (s|\/*.*?*\/)*",
            "published_date":"2021-05-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/codemirror\/CodeMirror",
            "commit_href":"https:\/\/github.com\/codemirror\/CodeMirror\/commit\/55d0333907117c9231ffdf555ae8824705993bbb",
            "commit_sha":"55d0333907117c9231ffdf555ae8824705993bbb",
            "patch":"SINGLE",
            "chain_ord":"['55d0333907117c9231ffdf555ae8824705993bbb']",
            "before_first_fix_commit":"{'cdb228ac736369c685865b122b736cd0d397836c'}",
            "last_fix_commit":"55d0333907117c9231ffdf555ae8824705993bbb",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/09\/2020, 13:38:39",
            "message":"[javascript mode] Fix potentially-exponential regexp",
            "author":"Marijn Haverbeke",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'mode\/javascript\/javascript.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/codemirror\/codemirror5\/raw\/55d0333907117c9231ffdf555ae8824705993bbb\/mode%2Fjavascript%2Fjavascript.js', 'patch': '@@ -126,7 +126,7 @@ CodeMirror.defineMode(\"javascript\", function(config, parserConfig) {\\n           var kw = keywords[word]\\n           return ret(kw.type, kw.style, word)\\n         }\\n-        if (word == \"async\" && stream.match(\/^(\\\\s|\\\\\/\\\\*.*?\\\\*\\\\\/)*[\\\\[\\\\(\\\\w]\/, false))\\n+        if (word == \"async\" && stream.match(\/^(\\\\s|\\\\\/\\\\*([^*]|\\\\*(?!\\\\\/))*?\\\\*\\\\\/)*[\\\\[\\\\(\\\\w]\/, false))\\n           return ret(\"async\", \"keyword\", word)\\n       }\\n       return ret(\"variable\", \"variable\", word)'}}",
            "message_norm":"[javascript mode] fix potentially-exponential regexp",
            "language":"ca",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['mode\/javascript\/javascript.js'])",
            "num_files":1.0
        },
        {
            "index":1741,
            "vuln_id":"GHSA-fj7f-vq84-fh43",
            "cwe_id":"{'CWE-88'}",
            "score":6.7,
            "chain":"{'https:\/\/github.com\/rubygems\/rubygems\/commit\/a4f2f8ac17e6ce81c689527a8b6f14381060d95f', 'https:\/\/github.com\/rubygems\/rubygems\/commit\/0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3'}",
            "dataset":"osv",
            "summary":"Local Code Execution through Argument Injection via dash leading git url parameter in Gemfile. In `bundler` versions before 2.2.33, when working with untrusted and apparently harmless `Gemfile`'s, it is not expected that they lead to execution of external code, unless that's explicit in the ruby code inside the `Gemfile` itself. However, if the `Gemfile` includes `gem` entries that use the `git` option with invalid, but seemingly harmless, values with a leading dash, this can be false.\n\nTo handle dependencies that come from a Git repository instead of a registry, Bundler uses various commands, such as `git clone`. These commands are being constructed using user input (e.g. the repository URL). When building the\ncommands, Bundler versions before 2.2.33 correctly avoid Command Injection vulnerabilities by passing an array of arguments instead of a command string. However, there is the possibility that a user input starts with a dash (`-`) and is therefore treated as an optional argument instead of a positional one. This can lead to Code Execution because some of the commands have options that can be leveraged to run arbitrary executables.\n\nSince this value comes from the `Gemfile` file, it can contain any character, including a leading dash.\n\n### Exploitation\n\nTo exploit this vulnerability, an attacker has to craft a directory containing a `Gemfile` file that declares a dependency that is located in a Git repository. This dependency has to have a Git URL in the form of `-u.\/payload`. This URL\nwill be used to construct a Git clone command but will be interpreted as the [upload-pack](https:\/\/git-scm.com\/docs\/git-clone#Documentation\/git-clone.txt--ultupload-packgt) argument. Then this directory needs to be shared with the victim, who then needs to run a command that evaluates the Gemfile, such as `bundle lock`, inside.\n\n### Impact\n\nThis vulnerability can lead to Arbitrary Code Execution, which could potentially lead to the takeover of the system. However, as explained above, the exploitability is very low, because it requires a lot of user interaction. It still could put developers at risk when dealing with untrusted files in a way they think is safe, because the exploit still works when the victim tries to make sure nothing can happen, e.g. by manually reviewing the `Gemfile` (although they would need the weird URL with a leading dash to not raise any flags).\n\nThis kind of attack vector [has been used in the past](https:\/\/www.cnbc.com\/2021\/01\/26\/north-korean-hackers-targeting-security-researchers-on-twitter.html) to target security researchers by sending them projects to collaborate on.\n\n### Patches\n\nBundler 2.2.33 has patched this problem by inserting `--` as an argument before any positional arguments to those Git commands that were affected by this issue.\n\n### Workarounds\n\nRegardless of whether users can upgrade or not, they should review any untrustred `Gemfile`'s before running any `bundler` commands that may read them, since they can contain arbitrary ruby code.\n\n### References\n\nhttps:\/\/cwe.mitre.org\/data\/definitions\/88.html",
            "published_date":"2021-12-08",
            "chain_len":2,
            "project":"https:\/\/github.com\/rubygems\/rubygems",
            "commit_href":"https:\/\/github.com\/rubygems\/rubygems\/commit\/0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3",
            "commit_sha":"0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3",
            "patch":"MULTI",
            "chain_ord":"['a4f2f8ac17e6ce81c689527a8b6f14381060d95f', '0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3']",
            "before_first_fix_commit":"{'6a655a698e952f897d0d014fc11bae4b608528ce'}",
            "last_fix_commit":"0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3",
            "chain_ord_pos":2.0,
            "commit_datetime":"12\/07\/2021, 14:34:48",
            "message":"Changelog for Bundler version 2.2.33",
            "author":"David Rodr\u00edguez",
            "comments":null,
            "stats":"{'additions': 29, 'deletions': 0, 'total': 29}",
            "files":"{'bundler\/CHANGELOG.md': {'additions': 29, 'deletions': 0, 'changes': 29, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rubygems\/rubygems\/raw\/0fad1ccfe9dd7a3c5b82c1496df3c2b4842870d3\/bundler%2FCHANGELOG.md', 'patch': '@@ -1,3 +1,32 @@\\n+# 2.2.33 (December 7, 2021)\\n+\\n+## Security fixes:\\n+\\n+  - Pass \"--\" to git commands to separate positional and optional args [#5142](https:\/\/github.com\/rubygems\/rubygems\/pull\/5142)\\n+\\n+## Enhancements:\\n+\\n+  - Accept pull request URLs as github source [#5126](https:\/\/github.com\/rubygems\/rubygems\/pull\/5126)\\n+  - Add `--version` parameter to `bundle info` command [#5137](https:\/\/github.com\/rubygems\/rubygems\/pull\/5137)\\n+  - Let original `Errno::EACCES` error be raised in compact index updater [#5110](https:\/\/github.com\/rubygems\/rubygems\/pull\/5110)\\n+  - Improve gemfile-lockfile source equivalence errors [#5120](https:\/\/github.com\/rubygems\/rubygems\/pull\/5120)\\n+  - Avoid float-to-string loss of characters in GitHub Actions configuration labels in new gem template [#5089](https:\/\/github.com\/rubygems\/rubygems\/pull\/5089)\\n+  - Add an initial rbs template to `bundle gem` skeleton [#5041](https:\/\/github.com\/rubygems\/rubygems\/pull\/5041)\\n+  - Avoid shared libraries not getting environment passed right after argv in memory when `bundle exec` is used [#4815](https:\/\/github.com\/rubygems\/rubygems\/pull\/4815)\\n+\\n+## Bug fixes:\\n+\\n+  - Don\\'t cleanup paths from gems already activated from `$LOAD_PATH` [#5111](https:\/\/github.com\/rubygems\/rubygems\/pull\/5111)\\n+  - Fix handling prereleases of 0 versions, like 0.0.0.dev or 0.0.0.SNAPSHOT [#5116](https:\/\/github.com\/rubygems\/rubygems\/pull\/5116)\\n+  - Fix escape of filenames in `bundle doctor` [#5102](https:\/\/github.com\/rubygems\/rubygems\/pull\/5102)\\n+  - Don\\'t unlock dependencies when running `bundle install` after changing global source [#5090](https:\/\/github.com\/rubygems\/rubygems\/pull\/5090)\\n+  - Fix missing locked specs when depended on another platform [#5092](https:\/\/github.com\/rubygems\/rubygems\/pull\/5092)\\n+  - Fix `bundle info` sometimes claiming that bundler has been deleted [#5097](https:\/\/github.com\/rubygems\/rubygems\/pull\/5097)\\n+\\n+## Documentation:\\n+\\n+  - Ignore to generate the documentation from vendored libraries [#5118](https:\/\/github.com\/rubygems\/rubygems\/pull\/5118)\\n+\\n # 2.2.32 (November 23, 2021)\\n \\n ## Enhancements:'}}",
            "message_norm":"changelog for bundler version 2.2.33",
            "language":"da",
            "entities":"[('changelog', 'ACTION', ''), ('2.2.33', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundler\/CHANGELOG.md'])",
            "num_files":1.0
        },
        {
            "index":695,
            "vuln_id":"GHSA-5rqg-jm4f-cqx7",
            "cwe_id":"{'CWE-835'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75', 'https:\/\/github.com\/Marak\/colors.js\/commit\/137c6dae3339e97f4bbc838c221803c363b0a9fd', 'https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26'}",
            "dataset":"osv",
            "summary":"Infinite loop causing Denial of Service in colors colors is a library for including colored text in node.js consoles. Between 07 and 09 January 2022, colors versions 1.4.1, 1.4.2, and 1.4.44-liberty-2 were published including malicious code that caused a Denial of Service due to an infinite loop. Software dependent on these versions experienced the printing of randomized characters to console and an infinite loop resulting in unbound system resource consumption.\n\nUsers of colors relying on these specific versions should downgrade to version 1.4.0.",
            "published_date":"2022-01-10",
            "chain_len":3,
            "project":"https:\/\/github.com\/Marak\/colors.js",
            "commit_href":"https:\/\/github.com\/Marak\/colors.js\/commit\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26",
            "commit_sha":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26",
            "patch":"MULTI",
            "chain_ord":"['137c6dae3339e97f4bbc838c221803c363b0a9fd', '5d2d242f656103ac38086d6b26433a09f1c38c75', '6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26']",
            "before_first_fix_commit":"{'5d2d242f656103ac38086d6b26433a09f1c38c75'}",
            "last_fix_commit":"6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26",
            "chain_ord_pos":3.0,
            "commit_datetime":"01\/08\/2022, 04:22:34",
            "message":"Bump to `v1.4.44-liberty-2`",
            "author":"Marak",
            "comments":"{'com_1': {'author': 'belauzas', 'datetime': '01\/08\/2022, 09:12:51', 'body': 'What is this? Why console is trashed with all this random shit?'}, 'com_2': {'author': 'legalsec', 'datetime': '01\/08\/2022, 13:20:11', 'body': '> \\r\\n\\r\\n@belauzas .... See here: https:\/\/news.ycombinator.com\/item?id=25032105\\r\\nand here: https:\/\/github.com\/Marak\/colors.js\/commit\/074a0f8ed0c31c35d13d28632bd8a049ff136fb6\\r\\nMillions of downloads a week... not a penny to show for it.'}, 'com_3': {'author': 'atridadl', 'datetime': '01\/09\/2022, 21:53:33', 'body': 'What a child.'}, 'com_4': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 01:18:25', 'body': 'Everyone should contribute with $1 to the author. He will get the money he deserves.\\r\\nI am not using `colors.js`, but I will be happy to contribute'}, 'com_5': {'author': 'ImJustChew', 'datetime': '01\/10\/2022, 04:06:49', 'body': 'irresponsible, wasted my time.'}, 'com_6': {'author': 'add1609', 'datetime': '01\/10\/2022, 04:08:27', 'body': '@Marak you 100% deserve to get paid for your work. Please provide someway to send you money.'}, 'com_7': {'author': 'BARMPlus', 'datetime': '01\/10\/2022, 06:33:52', 'body': 'What really happened with Aaron Swartz?'}, 'com_8': {'author': 'connor-sarah', 'datetime': '01\/10\/2022, 06:35:44', 'body': 'freeloaders'}, 'com_9': {'author': 'dmitrykurmanov', 'datetime': '01\/10\/2022, 07:52:07', 'body': \"> Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n\\r\\nand let's pay to terrorists too because that is the same meaning I think\"}, 'com_10': {'author': 'ImJustChew', 'datetime': '01\/10\/2022, 08:25:47', 'body': \"Paying doesn't solve the problem. Wait till more developers expect people to pay for their open-source code forcefully and see how everything slowly reverts back to closed-source.\"}, 'com_11': {'author': 'piotrtomiak', 'datetime': '01\/10\/2022, 08:32:28', 'body': \"Just don't use MIT license, if you don't want some corporation to reuse your work and get money for it. Try some other alternatives, which will require consumer to open source their code as well, or a license without permission for commercial use. You can change license at any moment - if I recall that correctly Facebook did something like that with React. Pushing a broken version to NPM is simply wrong.\"}, 'com_12': {'author': 'Fried-Chicken', 'datetime': '01\/10\/2022, 10:03:13', 'body': 'What happened to `1.4.44-liberty-1`?'}, 'com_13': {'author': 'mirzap', 'datetime': '01\/10\/2022, 10:47:03', 'body': 'Why did you open source it if you want to get paid for it? Why did you use MIT license? Tantrum that you did does not help OSS developers. This is simply evil.'}, 'com_14': {'author': 'sergeych', 'datetime': '01\/10\/2022, 11:01:46', 'body': 'When one is publishing something as a free software the LICENSE is supplied which grants everybody a RIGHT to use your code without paying \"a penny\". Any sort of open source license does it one way or another. It protects users. This means, once something is published as free software, this version will remain free and usable to whoever have a copy even if the author changes ones mind to require a payment for it. So, any package or source repository as a _user_ of this free software retains a right to keep publishing it according to the open source license that was (if it was) supplied with original publication. That is why open source still uses licenses. We could not have free software if any author or the heirs could reclaim or make unusable the free software. What was once a gift to the society, should remain a gift. There the gift back is not fair at all, neither is requiring payment for a gift. Too bad, actually, that it is not crystal clear to anybody.'}, 'com_15': {'author': 'Nazehs', 'datetime': '01\/10\/2022, 12:29:51', 'body': \"at least he has made a name for himself at least... \ud83d\ude06 \ud83d\ude06 and some of us have used his code but we can't admit or say thanks to him... I am not advocating this but it's good we compensate ourselves sometimes to keep maintaining the source code because all of us value our time so do the authors too... $1 dollar will mean a lot to them and encourage them to work on the project... I believe once the author of Open source releases the codebase they have done all they could but if we will be expecting them to fix issues or add features while we are making our money out of it does it make sense at all? Many of us can't even open-source our code....\\r\\nShalom\"}, 'com_16': {'author': 'ddzy', 'datetime': '01\/10\/2022, 12:31:53', 'body': 'It wasted my whole day looking for the problem of garbled code'}, 'com_17': {'author': 'Nazehs', 'datetime': '01\/10\/2022, 12:52:25', 'body': '> \\r\\n\\r\\nyeah i know a lot of us will waste hours trying to figure out the issue you know'}, 'com_18': {'author': 'AAGene', 'datetime': '01\/10\/2022, 13:20:27', 'body': 'To those saying he should release under another license:\\r\\n\\r\\n![image](https:\/\/user-images.githubusercontent.com\/48164468\/148772692-0f4c911b-f277-44f4-8034-16c4b38b0e88.png)'}, 'com_19': {'author': 'ts-3156', 'datetime': '01\/10\/2022, 13:39:11', 'body': 'I just paid @Marak 100$. If you have a time to have a futile dispute, use that time to help people in need.'}, 'com_20': {'author': 'efriandika', 'datetime': '01\/10\/2022, 14:17:07', 'body': 'I am wondering if this is the same people?\\r\\nhttps:\/\/twitter.com\/marak\/status\/1320465599319990272\\r\\nhttps:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/'}, 'com_21': {'author': 'timup', 'datetime': '01\/10\/2022, 14:20:51', 'body': '> I am wondering if this is the same people? https:\/\/twitter.com\/marak\/status\/1320465599319990272 https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n\\r\\nThat is an unfortunate coincidence.'}, 'com_22': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 14:31:46', 'body': \"> > Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n> \\r\\n> and let's pay to terrorists too because that is the same meaning I think\\r\\n\\r\\nWhat are you talking about? This is incomparable. \\r\\nThis is about helping someone from the community, our side, someone who might be in need, we don't know.\\r\\nToday it is him, maybe tomorrow it will be you.\"}, 'com_23': {'author': 'justblender', 'datetime': '01\/10\/2022, 14:37:11', 'body': '> I am wondering if this is the same people?\\r\\n> https:\/\/twitter.com\/marak\/status\/1320465599319990272\\r\\n> https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n\\r\\nYes, this is him.'}, 'com_24': {'author': 'degr', 'datetime': '01\/10\/2022, 14:47:19', 'body': 'post in epic thread'}, 'com_25': {'author': 'rpv-tomsk', 'datetime': '01\/10\/2022, 15:16:04', 'body': \"> It wasted my whole day looking for the problem of garbled code\\r\\n\\r\\nIt's just a time came to pay your bill for using this library.\\r\\nBefore that, you saved your time by using it.\"}, 'com_26': {'author': 'ademidun', 'datetime': '01\/10\/2022, 15:31:42', 'body': 'Open source software is a [public good](https:\/\/en.wikipedia.org\/wiki\/Public_good_(economics)). So the paradox which everyone asks themselves is \"if everyone can benefit from it for free why should I have to pay?\".\\r\\n\\r\\nBut conversely, if people are benefitting from something you\\'ve created then it\\'s only fair for the person who created this value to get some financial compensation commensurate to the value they\\'ve created.\\r\\n\\r\\nThe author of this package has chosen a method to get some compensation for their work that has resulted in a lose-lose situation where neither the author nor the users are happy.\\r\\n\\r\\nBut it doesn\\'t have to be this way.\\r\\n\\r\\nThe [Opensource guide](https:\/\/opensource.guide\/) has some useful tips on [Getting Paid for Open Source Work](https:\/\/opensource.guide\/getting-paid\/). For people interested in web3 and crypto, [Gitcoin](https:\/\/gitcoin.co\/) is platform where you can [get paid to work on open source software](https:\/\/gitcoin.co\/grants\/).\\r\\n\\r\\nHopefully, by becoming more informed on ways to make money from open source software we can avoid situations like this in the future and create a fairer system that works for everyone.'}, 'com_27': {'author': 'Veetaha', 'datetime': '01\/10\/2022, 15:50:23', 'body': 'Yo, you should consider rewriting it in Rust =)'}, 'com_28': {'author': 'G2G2G2G', 'datetime': '01\/10\/2022, 16:47:45', 'body': 'You are a hero, anyone who uses NPM deserves worse than this but at least you make them suffer.'}, 'com_29': {'author': 'Abion47', 'datetime': '01\/10\/2022, 17:07:04', 'body': \"This package hadn't been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n\\r\\nI'm not buying the moral high road, either. Fortune 500 companies have hundreds of developers and rigorous upgrade paths before any new production build sees the light of day, and this infantile infinite loop of zalgo text would get spotted immediately and fixed. Your little maneuver isn't going to cost them a single dime. All you're doing is being a pain in the ass for smaller companies and independent developers who don't have the luxury of time and resources to be able to put up these kinds of safeguards automatically.\\r\\n\\r\\nI'm fully on board with active contributors to the open-source community getting fair compensation, but this just screams trying to snag a quick and easy buck.\"}, 'com_30': {'author': 'rcollette', 'datetime': '01\/10\/2022, 17:23:05', 'body': 'If someone wants money for their time, either start a company or work for one.   This behavior is like a childish prank of putting a dollar on the sidewalk on a fishing line and pulling it away.'}, 'com_31': {'author': 'G2G2G2G', 'datetime': '01\/10\/2022, 17:32:27', 'body': '> If someone wants money for their time, either start a company or work for one. This behavior is like a childish prank of putting a dollar on the sidewalk on a fishing line and pulling it away.\\r\\n\\r\\n@rcollette  AND YOU FELL FOR IT LMAO\\r\\n\\r\\n\\r\\n\\r\\n\u2591\u2591\u2591\u2591\u2588\u2592\u2592\u2584\u2580\u2580\u2580\u2580\u2580\u2584\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2580\u2580\u2580\u2580\u2580\u2580\u2584\\r\\n\u2591\u2591\u2584\u2580\u2592\u2592\u2592\u2584\u2588\u2588\u2588\u2588\u2588\u2584\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2584\u2588\u2588\u2588\u2588\u2588\u2584\u2592\u2588\\r\\n\u2591\u2588\u2592\u2592\u2592\u2592\u2590\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u258c\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2590\u2588\u2588\u2584\u2588\u2588\u2588\u2588\u258c\u2592\u2588\\r\\n\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2588\u2588\u2588\u2588\u2588\u2580\u2592\u2592\u2588\u2592\u2591\u2584\u2592\u2584\u2588\u2592\u2592\u2580\u2588\u2588\u2588\u2588\u2588\u2580\u2592\u2592\u2592\u2588\\r\\n\u2592\u2592\u2590\u2592\u2592\u2592\u2591\u2591\u2591\u2591\u2592\u2592\u2592\u2592\u2592\u2588\u2592\u2591\u2592\u2592\u2580\u2592\u2592\u2588\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\\r\\n\u2592\u258c\u2592\u2592\u2592\u2591\u2591\u2591\u2592\u2592\u2592\u2592\u2592\u2584\u2580\u2592\u2591\u2592\u2584\u2588\u2584\u2588\u2584\u2592\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\\r\\n\u2592\u258c\u2592\u2592\u2592\u2592\u2591\u2592\u2592\u2592\u2592\u2592\u2592\u2580\u2584\u2592\u2592\u2588\u258c\u258c\u258c\u258c\u258c\u2588\u2584\u2580\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\\r\\n\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\u2592\u2592\u2580\u2588\u2588\u2588\u2580\u2592\u258c\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\\r\\n\u2580\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u258c\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2588\\r\\n\u2580\u2584\u2592\u2580\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2584\u2584\u2592\u2592\u2592\u2592\u2592\u2592\u2584\u2584\u2580\\r\\n\u2592\u2592\u2580\u2584\u2592\u2580\u2584\u2580\u2580\u2580\u2584\u2580\u2580\u2580\u2580\u2584\u2584\u2584\u2584\u2584\u2584\u2584\u2580\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2580\u2580\u2580\\r\\n\u2592\u2592\u2592\u2592\u2580\u2584\u2590\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2592\u2590\\r\\n\u2591\u2584\u2584\u2584\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2584\u2591\u2591\u2591\u2591\u2584\u2584\u2591\u2584\u2584\u2591\u2591\u2591\u2584\u2584\u2584\u2591\u2591\u2591\u2584\u2584\u2584\\r\\n\u2588\u2584\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2588\u2591\u2588\u2584\u2584\u2588\u2591\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2588\u2584\u2584\u2584\u2588\u2591\u2588\u2591\u2591\u2591\u2588\\r\\n\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2588\\r\\n\u2580\u2591\u2591\u2591\u2580\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2580\u2580\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2580\u2591\u2580\u2584\u2584\u2584\u2580'}, 'com_32': {'author': 'rcollette', 'datetime': '01\/10\/2022, 17:38:12', 'body': '@G2G2G2G -Nope.  I pin package versions.\\r\\nhttps:\/\/github.com\/winstonjs\/winston\/issues\/1995#event-5867271529'}, 'com_33': {'author': 'TechStudent10', 'datetime': '01\/10\/2022, 20:12:30', 'body': '> > I am wondering if this is the same people? https:\/\/twitter.com\/marak\/status\/1320465599319990272 https:\/\/nypost.com\/2020\/09\/16\/resident-of-nyc-home-with-suspected-bomb-making-materials-charged\/\\r\\n> \\r\\n> That is an unfortunate coincidence.\\r\\n\\r\\noh crap'}, 'com_34': {'author': 'skyzyx', 'datetime': '01\/10\/2022, 20:53:51', 'body': 'Have we learned nothing from left-pad?\\r\\n\\r\\n1. Use a package cache.\\r\\n2. Pin your versions.'}, 'com_35': {'author': 'zmaktouf', 'datetime': '01\/10\/2022, 22:24:38', 'body': \"> Yo, you should consider rewriting it in Rust =)\\r\\n\\r\\nLet's do it :D https:\/\/github.com\/zmaktouf\/colors.rs\"}, 'com_36': {'author': 'barnaba', 'datetime': '01\/11\/2022, 02:07:06', 'body': \"> This package hadn't been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n\\r\\nBecause https:\/\/web.archive.org\/web\/20210628030444\/https:\/\/marak.com\/blog\/2021-04-25-monetizing-open-source-is-problematic\\r\\n\\r\\nTLDR the dev tried to monetize faker via normal means available to open source projects, but corporations don't play nice.\\r\\n\\r\\nMore important question is: This package hadn't been updated since 2019 before this. Why not pin it? Are you expecting new colors to be invented?\"}, 'com_37': {'author': 'yvesll', 'datetime': '01\/11\/2022, 05:41:43', 'body': 'Respect'}, 'com_38': {'author': 'Chew', 'datetime': '01\/11\/2022, 06:12:28', 'body': '> What happened to `1.4.44-liberty-1`?\\r\\n\\r\\nI was hungry, my bad'}, 'com_39': {'author': 'prasannamestha', 'datetime': '01\/11\/2022, 07:36:56', 'body': 'Why no sell a commercial license to this library via [privjs.com](https:\/\/privjs.com) ?'}, 'com_40': {'author': 'artsiom-aliakseichyk', 'datetime': '01\/11\/2022, 08:40:07', 'body': '> \u041c\u044b \u043f\u043e\u043d\u044f\u043b\u0438 \u043e\u0434\u043d\u043e, \u0447\u0442\u043e \u043e\u043d \u043c\u0443\u0434\u0430\u043a \u0438 \u043f\u0440\u043e\u0441\u0442\u043e \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0438 \u043e\u0442\u043a\u0430\u0442\u0438\u043c \u0432\u0435\u0440\u0441\u0438\u044e \u0438\u043b\u0438 \u0432\u043e\u0437\u044c\u043c\u0435\u043c \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u0443 \u043e\u0442 \u043c\u0435\u043d\u0435\u0435 \u043e\u0442\u0431\u0438\u0442\u044b\u0445 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432, \u0435\u0441\u043b\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0443 \u043d\u0435 \u043f\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438 \u043b\u0430\u0439\u043a \u0438\u043b\u0438 \u043d\u0435 \u0437\u0430\u043f\u043b\u0430\u0442\u0438\u043b\u0438 \u0437\u0430 \u043b\u0438\u0431\u0443 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043e\u043d \u0432\u044b\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435, \u043d\u0430 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e\u0439 \u043f\u043b\u0430\u0442\u0444\u043e\u0440\u043c\u0435, \u043f\u043e\u0434 \u0431\u0435\u0441\u043f\u043b\u0430\u0442\u043d\u043e\u0439 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0435\u0439, \u0442\u043e \u0443 \u043d\u0435\u0433\u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u0431\u0430\u0448\u043a\u043e\u0439\\r\\n\\r\\nI understand that it is hard to read licenses nowadays, so I will copypaste one of the interesting part\\r\\n\\r\\n\\'THE SOFTWARE IS PROVIDED **\"AS IS\"**, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\r\\nTHE SOFTWARE.\\''}, 'com_41': {'author': 'kounelios13', 'datetime': '01\/11\/2022, 10:03:31', 'body': '> You are a hero, anyone who uses NPM deserves worse than this but at least you make them suffer.\\r\\n\\r\\nWhy anyone who uses NPM deserves worse than that? Care to explain ?'}, 'com_42': {'author': 'arinzejustin', 'datetime': '01\/11\/2022, 14:16:02', 'body': 'I spend through out yesterday and today looking for the issue'}, 'com_43': {'author': 'Abion47', 'datetime': '01\/11\/2022, 14:46:26', 'body': '> > This package hadn\\'t been updated since 2019 before this. You want to suddenly be paid after 2-3 years of doing no work? And why now, all of a sudden?\\r\\n> \\r\\n> Because https:\/\/web.archive.org\/web\/20210628030444\/https:\/\/marak.com\/blog\/2021-04-25-monetizing-open-source-is-problematic\\r\\n> \\r\\n> TLDR the dev tried to monetize faker via normal means available to open source projects, but corporations don\\'t play nice.\\r\\n> \\r\\n> More important question is: This package hadn\\'t been updated since 2019 before this. Why not pin it? Are you expecting new colors to be invented?\\r\\n\\r\\nThat article is referring to Faker where I was referring to Colors. Since you bring it up, however, the amount of recent work on Faker is even less - a bit of work 10-12 months ago, and before that, complete radio silence since 5 years ago. It sucks that the author\\'s attempts to sell faker cloud were met with getting ghosted, but what did he expect? He released a paid service that did little more than the existing package already did for free. He was competing against himself, and he was doing it poorly. And sure, maybe it was poor form on Retool\\'s part to copy FakerCloud using Faker, but at the same time, they were effectively paying him $500 a month which they were under no legal obligation to pay. The only thing his tantrum could\\'ve possibly accomplished was that they would continue to do exactly what they were doing but they would do it without paying him.\\r\\n\\r\\nAn interesting note on that last part, though. I don\\'t know about you, but getting two grand for work I did four years ago seems like a good deal. Not only this, but they were his _second_ biggest donors, meaning that that was less than half of the donation amount he had made from the Faker package alone as of that article\\'s publication date. And now he\\'s threatening to not do any more work when he already hasn\\'t done any work on the Colors or Faker packages in nearly a year and no significant work in nearly three, and he\\'s demanding payment for packages he released under the MIT license years ago _and which he has already received at least $4000 for_. Not to mention I can only imagine how much money he has received from proverbial white knights ever since this whole drama began. (Someone in this thread alone donated $100.)\\r\\n\\r\\nMy takeaway from that article is that Marak bit the hand that fed him. It sounds like he already burned the Retool bridge which was a poor move considering they were his second-biggest donors, and I doubt anyone else who was a repeat donor is likely to continue. He proved nothing with this little stunt - no large company will be hurt by this despite his claims, and everyone else just has to pin their versions and wait until someone else forks his code to continue development and maintenance (not that much maintenance needs to be done as the packages seem pretty stable).\\r\\n\\r\\nHe could\\'ve pinned it. He could\\'ve archived it. He could\\'ve just posted a message saying \"I can\\'t afford to maintain this anymore so it will just sit here in its current state until someone else offers to take ownership\". He could\\'ve done a lot of things. But instead, he chose the nuclear option of holding the package hostage (as ineffective as it is) while causing grief to other developers like him just trying to do their jobs. This doesn\\'t strike me as a man looking to get fair recompense for services rendered. This strikes me as a man desperate for money and looking to get it in any way he can by pulling on some heartstrings. Well, congrats, Marak. Mission accomplished. You may have tanked your career and your standing in the open-source community in the process, but I hope it was worth it in the end.'}, 'com_44': {'author': 'Awilum', 'datetime': '01\/11\/2022, 17:11:07', 'body': '> What is this? Why console is trashed with all this random shit?\\r\\n\\r\\nThis is Javascript World!'}, 'com_45': {'author': 'zunino', 'datetime': '01\/11\/2022, 22:26:40', 'body': \"If you were looking for sympathy, you've really messed up. Your attitude is not only immature, but irresponsible and very unprofessional. There are other ways one can turn an open-source project into a business, but it's not by acting out like this. You don't belong in OSS.\"}, 'com_46': {'author': 'rpv-tomsk', 'datetime': '01\/12\/2022, 04:43:33', 'body': \"@zunino \\r\\n\\r\\n> If you were looking for sympathy, you've really messed up. \\r\\n\\r\\nAgreed. \\r\\nBut:\\r\\n\\r\\n> There are other ways one can turn an open-source project into a business...\\r\\n\\r\\nYou have many OSS project already converted to business?\\r\\nCan you show your results, our you can only speak slogans and loud words?\\r\\n\\r\\nIn my view, there is two kinds of people: who can create software and who can create business. \\r\\nAnd not each developer belongs to both sets simultaneously, these are exceptions, not typical case (and we see this here).\"}, 'com_47': {'author': 'ItzSwirlz', 'datetime': '01\/12\/2022, 16:21:32', 'body': 'man cant change his license to stop it from being used'}, 'com_48': {'author': 'kctdfh', 'datetime': '01\/13\/2022, 16:33:36', 'body': \"> > You have many OSS project already converted to business?\\r\\n> \\r\\n> Not so many, but there are a few - rather big - projects that do converted and are doing well now.\\r\\n> \\r\\n> > Can you show your results,\\r\\n> \\r\\n> Discourse, GitLab, NodeBB, Docker. Just from back of my head; sure there are more.\\r\\n\\r\\nAll of the examples you mention sell convenience, not software. \\r\\n\\r\\nFor some software solutions, the user may want to have the luxuries of open-source without having to fully commit full-time resources to the management and maintenance of those people\/infrastructures. Marak could have never been RedHat because Faker\/Colors are set-it-and-forget-it libraries. For these libraries, most of the work happens prior to release and the user just plugs it into their code. There's near-zero opportunities to monetize them by offering convenience. Mattermost for instance has a paid version that's hosted and has extra features but what can Faker\/Colors do? Invent exclusive colors? Implement SSO? Generate entire movie scripts?\\r\\n\\r\\nMaybe he could have started an API for no-code tools but then again, no-code devs are used to extremely generous free-tiers on APIs so it probably won't cover the cost of running a reliable infrastructure to handle usage bursts, etc.\"}, 'com_49': {'author': 'zunino', 'datetime': '01\/13\/2022, 19:20:25', 'body': \"@kctdfh I see the distinction you are making but, really, nothing justifies the author's rogue actions. I'm sure he would be in a better position if, say, he had decided to start a new, commercial endeavour, having the success of his open-source projects under his wing. The popularity of open-source work can shine on a CV or business proposal.\"}, 'com_50': {'author': 'kctdfh', 'datetime': '01\/13\/2022, 20:05:06', 'body': '@cronlabspl ?? Have not seen a start-up call themselves \"fully-managed [insert open-source tech]\"?? MongoDB Atlas is a money machine because people like using MongoDB without having to fine-tune their own provisioning, scaling, sharding, replication, security, or correctness. Who can afford reading MongoDB documentations, risk making a rookie mistake, spend hours every week troubleshooting, and basically manage people who manage the code that manages their software? They\\'ll just pay MongoDB to abstract the boring stuff away. It\\'s buying convenience.\\r\\n\\r\\n@zunino Yeah for sure not the best way to handle it and I don\\'t agree with it but I somewhat understand it. I see it like this (conjecture):\\r\\n- Dev isn\\'t doing well and feels unappreciated \/ feels they are being wronged - maybe even for an unrelated reason.\\r\\n- NPM\\'s weekly download stats says they\\'re appreciated\/valued\/successful but that number isn\\'t amounting to anything in their day-to-day. They know that this situation isn\\'t unique to them in the FOSS community.\\r\\n- Nuking their popular packages is certainly a good way to remind people that they depend on devs they\\'ve never heard of who may not be doing well. Not an effective form of protest because it ruins their reputation with zero sustained effect but it did rejuvenate the conversation.\\r\\n\\r\\nI wish him luck and hope he\\'s doing well'}, 'com_51': {'author': 'quenbyako', 'datetime': '01\/13\/2022, 21:08:59', 'body': '@glebfeklistov \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0437\u043e\u0432\u0435\u0442 \u0430\u0432\u0442\u043e\u0440\u0430 \u0430\u0441\u0445\u043e\u043b\u043e\u043c, \u0437\u0430 \u0442\u043e, \u0447\u0442\u043e \u043d\u0430 \u0435\u0433\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u043d\u043e\u0441\u0442\u0438 \u043d\u0438\u043a\u0442\u043e \u043d\u0435 \u043e\u0431\u0440\u0430\u0449\u0430\u0435\u0442 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u044f, \u0445\u043e\u0442\u044f \u043e\u043d \u0441\u0434\u0435\u043b\u0430\u043b \u043b\u0438\u0431\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0430 \u043d\u043e\u0434\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043a\u043e\u043c\u044c\u044e\u043d\u0438\u0442\u0438.\\r\\n\\r\\n\u0413\u043b\u0435\u0431, \u043a\u0440\u0430\u0441\u0430\u0432\u0447\u0438\u043a, \u043b\u0443\u0447\u0448\u0438\u0439 \ud83d\udc4d\ud83d\udcaa \u0422\u0430\u043a \u0438\u0445, \u0434\u043e\u043b\u0431\u043e\u0435\u0431\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043a\u043e\u043c\u043c\u0438\u0442\u044f\u0442 \u0432 \u043e\u043f\u0435\u043d\u0441\u0443\u0440\u0441 \u0437\u0430 \u043f\u0440\u043e\u0441\u0442\u043e \u0442\u0430\u043a, \u043f\u043e\u0448\u043b\u0438 \u043e\u043d\u0438, \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0438\u0435 \u043c\u0443\u0436\u0438\u043a\u0438 \u043a\u043e\u043c\u043c\u0438\u0442\u044f\u0442 \u0440\u0430\u0437 \u0432 \u043f\u043e\u043b\u0433\u043e\u0434\u0430 \u0438 \u043e\u0431\u0437\u044b\u0432\u0430\u044e\u0442 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u043c\u0443\u0434\u0430\u043a\u0430\u043c\u0438. \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e! \ud83d\udc46'}, 'com_52': {'author': 'Lun3th', 'datetime': '01\/13\/2022, 23:42:40', 'body': \"So basically... he's own the code so he can do this thing. If you are a big company please support open source projects with MONEY. And also check a code change before you pull it blatantly. :D \\r\\n\\r\\nBtw. If I find his paypal I will donate him with 2-3 dollars because that was a big move :D\"}, 'com_53': {'author': 'hello-smile6', 'datetime': '01\/14\/2022, 04:25:40', 'body': \"If anyone is in charge of a large corporation's servers and wants to make a splash, just hit production servers with https:\/\/gist.github.com\/hello-smile6\/fa92b539fce2339440bdd75e087cae8b\"}, 'com_54': {'author': 'okyanusoz', 'datetime': '01\/14\/2022, 15:15:10', 'body': 'stop'}, 'com_55': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:20:45', 'body': 'What really happened with Aaron Swartz?'}, 'com_56': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:32:09', 'body': '> > What really happened with Aaron Swartz?\\r\\n> \\r\\n> No idea. [this](https:\/\/en.wikipedia.org\/wiki\/Aaron_Swartz) may help\\r\\n\\r\\ntwierdzenie Pitagorasa\\r\\nnie wierz w samob\u00f3jstwo Swartza'}, 'com_57': {'author': 'sech1p', 'datetime': '01\/15\/2022, 11:42:40', 'body': \"> > nie wierz w samob\u00f3jstwo Swartza\\r\\n> \\r\\n> Nigdzie nie napisa\u0142em \u017ce wierz\u0119 w to. Poda\u0142em tylko linka do artyku\u0142u.\\r\\n\\r\\nchill, chill, I just parafrased a one sentence from polish network, i don't judge whether you believe it or not\\r\\n\\r\\nbtw i read this article already\"}, 'com_58': {'author': 'xpswilllive', 'datetime': '01\/18\/2022, 06:17:41', 'body': 'u are fine'}, 'com_59': {'author': 'dmitrykurmanov', 'datetime': '01\/19\/2022, 10:25:52', 'body': \"> > > Everyone should contribute with $1 to the author. He will get the money he deserves. I am not using `colors.js`, but I will be happy to contribute\\r\\n> > \\r\\n> > \\r\\n> > and let's pay to terrorists too because that is the same meaning I think\\r\\n> \\r\\n> What are you talking about? This is incomparable. This is about helping someone from the community, our side, someone who might be in need, we don't know. Today it is him, maybe tomorrow it will be you.\\r\\n\\r\\nhelp him because he is asking for help is ok for me. I don't hate him personally or anything like that. But I think that it should be asking not demanding\/terrorizing. I wish him to be happy. I don't judge him. I judge his act and the situation. And it is a huge difference for me\"}, 'com_60': {'author': 'teror4uks', 'datetime': '01\/21\/2022, 13:40:37', 'body': '@quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.'}, 'com_61': {'author': 'okyanusoz', 'datetime': '01\/22\/2022, 06:22:30', 'body': '@cronlabspl Marak should stop this money disaster, not this discussion'}, 'com_62': {'author': 'hello-smile6', 'datetime': '01\/22\/2022, 06:24:15', 'body': '> @cronlabspl Marak should stop this money disaster, not this discussion\\r\\n\\r\\nHere!\\r\\n![img](https:\/\/assets.scratch.mit.edu\/045e55e80b60ddd40d5a1a2a1bb3403a.png)'}, 'com_63': {'author': 'WhiteNervosa', 'datetime': '01\/23\/2022, 07:38:27', 'body': \"Four months ago, Marak [dropped over $10,000 on NFTs](https:\/\/opensea.io\/Marak?search[chains][0]=ETHEREUM&search[eventTypes][0]=AUCTION_SUCCESSFUL&tab=activity). No matter your opinion of NFTs, if you have that amount of money as disposable income then you're doing alright.\\r\\n\\r\\nHe could have just archived this if it was the feeling that he was giving labor for nothing in return or even tried the [sponsor feature](https:\/\/github.com\/sponsors), earlier. Earlier because they [currently have 47 sponsors](https:\/\/github.com\/sponsors\/Marak#sponsors).\\r\\n\\r\\nThis is not about money. Worse even, what do those 47 people now think about **sponsoring to support others?**\\r\\n\\r\\nShort sighted, misguided, and harmful. _Bravo_ \ud83c\udf89\"}, 'com_64': {'author': 'G2G2G2G', 'datetime': '01\/23\/2022, 09:33:54', 'body': '@hello-smile6 what does \"syeal your data\" mean?'}, 'com_65': {'author': 'nacknime-official', 'datetime': '01\/23\/2022, 09:46:25', 'body': '@teror4uks \u0430 \u0442\u0430\u043c \u0447\u0442\u043e-\u0442\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u0440\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e? \u043f\u0443\u0441\u0442\u044c \u0434\u0435\u043b\u0430\u0435\u0442 \u0441 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u043c \u0447\u0442\u043e \u0445\u043e\u0447\u0435\u0442, \u043e\u043d \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d'}, 'com_66': {'author': 'teror4uks', 'datetime': '01\/23\/2022, 13:49:51', 'body': '@nacknime-official  \u0435\u0449\u0451 \u043a\u0430\u043a \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e, \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0431\u0443\u0434\u0435\u0442 \u043a\u0440\u0430\u0448\u0438\u0442\u0441\u044f \u0438 \u043f\u043e\u0442\u043e\u043c \u0435\u0433\u043e \u0437\u0430\u0440\u0435\u043b\u0438\u0437\u0438\u0442\u044c \u0438 \u0435\u0441\u0442\u044c \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e.'}, 'com_67': {'author': 'nacknime-official', 'datetime': '01\/23\/2022, 16:55:02', 'body': '@teror4uks \u0442\u043a\u043d\u0438 \u043d\u043e\u0441\u043e\u043c, \u0447\u0442\u043e \u0442\u0430\u043c \u0442\u0430\u043a\u043e\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e'}, 'com_68': {'author': 'hello-smile6', 'datetime': '01\/23\/2022, 18:15:10', 'body': '> @hello-smile6 what does \"syeal your data\" mean?\\r\\n\\r\\nNot my art, ask the creator.'}, 'com_69': {'author': 'teror4uks', 'datetime': '01\/23\/2022, 19:52:34', 'body': '@nacknime-official  https:\/\/github.com\/Marak\/colors.js\/commit\/5d2d242f656103ac38086d6b26433a09f1c38c75'}, 'com_70': {'author': 'nacknime-official', 'datetime': '01\/24\/2022, 05:43:12', 'body': '@teror4uks \u0438\u043c\u0435\u044e \u0432\u0432\u0438\u0434\u0443 \u0442\u043a\u043d\u0438 \u043d\u043e\u0441\u043e\u043c \u0432 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e, \u0433\u0434\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043e \u043f\u0440\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e'}, 'com_71': {'author': 'teror4uks', 'datetime': '01\/24\/2022, 09:30:35', 'body': '@nacknime-official \u043b\u043e\u043b, \u043d\u0443 \u0441 \u0442\u043e\u0431\u043e\u0439 \u0432 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0435 \u0431\u0435\u0441\u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0440\u0430\u0437\u0433\u043e\u0432\u0430\u0440\u0438\u0432\u0430\u0442\u044c \u0435\u0441\u043b\u0438 \u0442\u044b \u043d\u0435 \u0432\u0438\u0434\u0438\u0448\u044c \u0442\u0443\u0442 \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u0435\u0434\u0438\u043d\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0435 \u0440\u0430\u0434\u0443\u0435\u0442 \u0447\u0442\u043e \"\u043f\u0440\u0430\u0432\u0434\u043e\u0440\u0443\u0431\u044b\" \u0432\u0440\u043e\u0434\u0435 \u0442\u0435\u0431\u044f \u0437\u0434\u0435\u0441\u044c \u0432 \u043c\u0435\u043d\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435, \u0438 \u0432 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u043c \u043b\u044e\u0434\u0438 \u043f\u043e\u043d\u0438\u043c\u0430\u044e\u0442 \u0447\u0442\u043e \u0442\u0430\u043a \u0434\u0435\u043b\u0430\u0442\u044c \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043d\u0435 \u043f\u0440\u0438\u043b\u0438\u0447\u043d\u043e \u0432 \u0446\u0438\u0432\u0438\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u043e\u0431\u0449\u0435\u0441\u0442\u0432\u0435.'}, 'com_72': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 10:04:34', 'body': '@teror4uks \u0442\u044b, \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435, \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u043e\u043d\u044f\u043b \u0441\u0443\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0439. \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f - \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0430\u0432\u0442\u043e\u0440 \u0441\u043e\u0444\u0442\u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u0441\u0432\u043e\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043b\u044e\u0434\u044c\u043c\u0438, \u0438 \u043b\u044e\u0431\u043e\u0439, \u043a\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u044d\u0442\u0443 \u0440\u0430\u0431\u043e\u0442\u0443, \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u044d\u0442\u0438\u043c\u0438 \u0441\u0430\u043c\u044b\u043c\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438. \u0410 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u044d\u0442\u0438\u0445 \u0441\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0448\u044c \u044d\u0442\u043e\u0442 \u0441\u043e\u0444\u0442, \u0430\u0432\u0442\u043e\u0440 \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0441 \u0441\u0435\u0431\u044f \u043b\u044e\u0431\u0443\u044e \u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0432\u0440\u0435\u0434, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043c\u043e\u0436\u0435\u0442 \u0442\u0435\u0431\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u0438\u0442\u044c. \u0422\u0430\u043a \u0447\u0442\u043e \u0441 \u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u043c\u0443 \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u0438 \u043c\u043e\u0436\u0435\u0442 \u043a\u043e\u043c\u0438\u0442\u0438\u0442\u044c \u0432 \u0441\u0432\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u043c\u0443 \u0437\u0430\u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u0431\u0443\u0434\u044c \u0442\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0438\u043b\u0438 \u043d\u0435 \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0442\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u0444\u0442\u0430.'}, 'com_73': {'author': 'dmitrykurmanov', 'datetime': '01\/26\/2022, 10:17:20', 'body': '> @teror4uks \u0442\u044b, \u043d\u0430\u0432\u0435\u0440\u043d\u043e\u0435, \u043d\u0435 \u0441\u043e\u0432\u0441\u0435\u043c \u043f\u043e\u043d\u044f\u043b \u0441\u0443\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0439. \u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f - \u044d\u0442\u043e \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u0430\u0432\u0442\u043e\u0440 \u0441\u043e\u0444\u0442\u0430 \u0434\u0435\u043b\u0438\u0442\u0441\u044f \u0441\u0432\u043e\u0435\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 \u0441 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u043b\u044e\u0434\u044c\u043c\u0438, \u0438 \u043b\u044e\u0431\u043e\u0439, \u043a\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u044d\u0442\u0443 \u0440\u0430\u0431\u043e\u0442\u0443, \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u0441 \u044d\u0442\u0438\u043c\u0438 \u0441\u0430\u043c\u044b\u043c\u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438. \u0410 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u044d\u0442\u0438\u0445 \u0441\u043a\u0430\u0437\u0430\u043d\u043e, \u0447\u0442\u043e \u0435\u0441\u043b\u0438 \u0442\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0448\u044c \u044d\u0442\u043e\u0442 \u0441\u043e\u0444\u0442, \u0430\u0432\u0442\u043e\u0440 \u0441\u043d\u0438\u043c\u0430\u0435\u0442 \u0441 \u0441\u0435\u0431\u044f \u043b\u044e\u0431\u0443\u044e \u043e\u0442\u0432\u0435\u0442\u0441\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0437\u0430 \u043a\u0430\u043a\u043e\u0439-\u043b\u0438\u0431\u043e \u0432\u0440\u0435\u0434, \u0447\u0442\u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043c\u043e\u0436\u0435\u0442 \u0442\u0435\u0431\u0435 \u043f\u0440\u0438\u0447\u0438\u043d\u0438\u0442\u044c. \u0422\u0430\u043a \u0447\u0442\u043e \u0441 \u043b\u0435\u0433\u0430\u043b\u044c\u043d\u043e\u0439 \u0442\u043e\u0447\u043a\u0438 \u0437\u0440\u0435\u043d\u0438\u044f \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u043c\u0443 \u043d\u0438\u043a\u043e\u043c\u0443 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u0438 \u043c\u043e\u0436\u0435\u0442 \u043a\u043e\u043c\u0438\u0442\u0438\u0442\u044c \u0432 \u0441\u0432\u043e\u0439 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u043c\u0443 \u0437\u0430\u0445\u043e\u0447\u0435\u0442\u0441\u044f, \u0431\u0443\u0434\u044c \u0442\u043e \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e \u0438\u043b\u0438 \u043d\u0435 \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0442\u044b \u043f\u0440\u043e\u0441\u0442\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0441\u043e\u0444\u0442\u0430.\\r\\n\\r\\nhttps:\/\/habr.com\/en\/news\/t\/599865\/#comment_23921173'}, 'com_74': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 10:47:40', 'body': '@dmitrykurmanov \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b \u043d\u0430 \u0432\u043f\u043e\u043b\u043d\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0435 \u0443\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u044b\u0448\u0435:\\r\\n\\r\\n> @quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u041d\u0430\u0441\u0447\u0435\u0442 \u044d\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u0438 \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u043e\u0441\u0442\u0443\u043f\u043a\u0430 \u044f \u0441\u0443\u0434\u0438\u0442\u044c \u043d\u0435 \u0431\u0435\u0440\u0443\u0441\u044c, \u043d\u043e \u0441\u0443\u0442\u0438 \u0442\u043e\u0433\u043e, \u0447\u0442\u043e \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044f \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430 \u043d\u0430 \u043e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0430 \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0430, \u044d\u0442\u043e \u043d\u0435 \u043c\u0435\u043d\u044f\u0435\u0442.'}, 'com_75': {'author': 'G2G2G2G', 'datetime': '01\/26\/2022, 15:25:31', 'body': 'yo russians, shut the fuck up before I meet up with you in ukraine and make you'}, 'com_76': {'author': 'wtlgo', 'datetime': '01\/26\/2022, 15:45:14', 'body': '> yo russians, shut the fuck up before I meet up with you in ukraine and make you\\r\\n\\r\\nAre you aware that almost half of Ukrainian people also use Russian as their primary language? How do you know that we are Russians and not someone else?'}, 'com_77': {'author': 'teror4uks', 'datetime': '01\/26\/2022, 15:55:16', 'body': '@wtlgo \u043d\u0443 \u044f \u043a\u0430\u043a \u0431\u044b \u0432 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0438 \u043d\u0435 \u0443\u0442\u043e\u0447\u043d\u0438\u043b \u043a\u0430\u043a\u043e\u0435 \u043f\u0440\u0430\u0432\u043e \u043e\u043d \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u0434\u0435-\u044e\u0440\u0435 \u0438\u043b\u0438 \u0434\u0435-\u0444\u0430\u043a\u0442\u043e :) \u0412 \u043e\u0431\u0449\u0435\u043c \u043f\u0443\u0441\u0442\u044c \u0438 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044f \u044d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u044f \u0441\u0447\u0438\u0442\u0430\u044e \u044d\u0442\u043e \u043a\u0430\u043a \u043c\u0438\u043d\u0438\u043c\u0443\u043c \u043d\u0435 \u044d\u0442\u0438\u0447\u043d\u043e, \u0432\u0441\u0451 \u0436\u0435 \u043c\u043e\u0440\u0430\u043b\u044c \u0438 \u044d\u0442\u0438\u043a\u0430 \u043d\u0430\u0441 \u0438 \u0434\u0435\u043b\u0430\u0435\u0442 \u043b\u044e\u0434\u044c\u043c\u0438, \u0430 \u043d\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u0433\u043e\u0440\u0441\u0442\u043a\u0430 \u0437\u0430\u043a\u043e\u043d\u043e\u0432.'}, 'com_78': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 10:11:45', 'body': '@teror4uks \u043e\u043f\u044f\u0442\u044c \u0442\u0430\u043a\u0438, \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b \u043f\u0440\u043e \u0442\u0432\u043e\u0439 \u0440\u0430\u0441\u0441\u043a\u0430\u0437 \u043e \u0442\u043e\u043c, \u0447\u0442\u043e \"\u0440\u0443\u0441\u0441\u043a\u0438\u0435 \u043b\u044e\u0434\u0438 \u043d\u0435 \u0443\u043c\u0435\u044e\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438\". \u042d\u0442\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u043f\u043e\u0441\u0442\u0443\u043f\u043a\u0430 \u0430\u0432\u0442\u043e\u0440\u0430 \u044f \u0441\u0443\u0434\u0438\u0442\u044c \u043d\u0435 \u0431\u0435\u0440\u0443\u0441\u044c.'}, 'com_79': {'author': 'teror4uks', 'datetime': '01\/27\/2022, 12:24:45', 'body': '@wtlgo \u0441\u0447\u0438\u0442\u0430\u044e \u0447\u0442\u043e \u0434\u0438\u0441\u043a\u0443\u0441\u0441 \u0441\u0435\u0431\u044f \u0438\u0441\u0447\u0435\u0440\u043f\u0430\u043b, \u0442\u044b \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b \u043f\u043e\u043b\u043e\u0432\u0438\u043d\u0443 \u0444\u0440\u0430\u0437\u044b \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0443 \u0438 \u043f\u044b\u0442\u0430\u0435\u0448\u044c\u0441\u044f \u0447\u0442\u043e \u0442\u043e \u043c\u043d\u0435 \u0434\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e \u0447\u0442\u043e, \u043f\u0440\u0435\u0434\u043b\u0430\u0433\u0430\u044e \u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c\u0441\u044f \u0438 \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u0442\u0435\u043c\u0443'}, 'com_80': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 12:40:04', 'body': '@teror4uks \u0447\u0442\u043e-\u0447\u0442\u043e \u044f \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b? \u0414\u0430\u0432\u0430\u0439 \u043f\u043e \u043f\u043e\u0440\u044f\u0434\u043a\u0443. \u0412\u043e\u0442 \u0432\u0441\u044f \u0446\u0438\u0442\u0430\u0442\u0430.\\r\\n\\r\\n> @quenbyako \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u041d\u0443 \u0434\u0430\u0432\u0430\u0439 \u0440\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u043f\u043e \u0447\u0430\u0441\u0442\u044f\u043c, \u0442\u043e\u0431\u043e\u044e \u043d\u0430\u043f\u0438\u0441\u0430\u043d\u043d\u043e\u0435\\r\\n\\r\\n> \u0441\u0440\u0430\u0437\u0443 \u0432\u0438\u0434\u043d\u043e \u0440\u0443\u0441\u0441\u043a\u043e\u0433\u043e \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435 \u0443\u043c\u0435\u0435\u0442 \u0447\u0438\u0442\u0430\u0442\u044c \u043e\u043f\u0435\u043d\u0441\u043e\u0440\u0441\u043d\u044b\u0435 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u043d\u0430 \u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u043e\u043c\\r\\n\\r\\n\u0421\u043e\u043c\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0434\u043e\u0432\u043e\u0434 \u043e\u0442 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0441\u0430\u043c \u043d\u0435 \u0441\u0443\u043c\u0435\u043b \u043f\u0440\u043e\u0447\u0435\u0441\u0442\u044c \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u044e \u0438 \u043f\u043e\u043d\u044f\u0442\u044c, \u043e \u0447\u0435\u043c \u043e\u043d\u0430. \u041d\u043e \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u043c.\\r\\n\\r\\n> \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u044b\u0445 \u043a\u0430\u043a \u0431\u044b \u0447\u0451\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d, \u043d\u0435 \u0445\u043e\u0447\u0435\u0448\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0439, \u0432\u0440\u0435\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u043e\u043c \u043d\u0438\u043a\u0442\u043e \u0442\u0435\u0431\u0435 \u043f\u0440\u0430\u0432\u0430 \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u043d\u0435 \u0434\u0430\u0432\u0430\u043b.\\r\\n\\r\\n\u0418\u0437 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0447\u0435\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442 \u043d\u0435 \u044d\u0442\u043e. \u0415\u0441\u043b\u0438 \u0431\u044b \u0442\u044b \u0440\u0435\u0430\u043b\u044c\u043d\u043e \u0431\u044b\u043b \u043d\u0435 \u0440\u0443\u0441\u0441\u043a\u0438\u043c \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u043e\u043c \u0438\u043b\u0438 \u0443\u043c\u0435\u043b \u0447\u0438\u0442\u0430\u0442\u044c \u043f\u043e-\u0430\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438, \u0442\u043e \u0443\u0432\u0438\u0434\u0435\u043b \u0431\u044b, \u0447\u0442\u043e \u0438\u0437 \u043b\u0438\u0446\u0435\u043d\u0437\u0438\u0438 \u0447\u0435\u0442\u043a\u043e \u0432\u044b\u0442\u0435\u043a\u0430\u0435\u0442, \u0447\u0442\u043e \u044d\u0442\u043e \u0430\u0432\u0442\u043e\u0440 \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c\u0443 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e, \u0447\u0442\u043e \u044d\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0438\u043c\u0435\u0435\u0442 \u043f\u0440\u0430\u0432\u043e \u043e\u0442\u043a\u0430\u0437\u0430\u0442\u044c\u0441\u044f \u043e\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439, \u0435\u0441\u043b\u0438 \u0435\u043c\u0443 \u0447\u0442\u043e-\u0442\u043e \u043d\u0435 \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f, \u0438 \u0447\u0442\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0441\u044f \u043d\u0435 \u0432\u0438\u043d\u0438\u0442\u044c \u0430\u0432\u0442\u043e\u0440\u0430 \u043d\u0438 \u0432 \u0447\u0435\u043c, \u0435\u0441\u043b\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430 \u043d\u0430\u043d\u0435\u0441\u043b\u0430 \u0435\u043c\u0443 \u043a\u0430\u043a\u043e\u0439-\u0442\u043e \u0432\u0440\u0435\u0434. \u0410\u0432\u0442\u043e\u0440 \u0436\u0435 \u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0437\u0430 \u0441\u043e\u0431\u043e\u0439 \u043f\u0440\u0430\u0432\u043e \u0434\u0435\u043b\u0430\u0442\u044c \u0441\u043e \u0441\u0432\u043e\u0435\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u043e\u0439 \u0432\u0441\u0435, \u0447\u0442\u043e \u0435\u0433\u043e \u0434\u0443\u0448\u0435 \u0432\u0437\u0434\u0443\u043c\u0430\u0435\u0442\u0441\u044f. \\r\\n\\r\\n\u0418\u0442\u0430\u043a, \u0433\u043e\u0441\u043f\u043e\u0434\u0438\u043d, \u0447\u0442\u043e \u0436\u0435 \u044f \u0432\u044b\u0434\u0435\u0440\u043d\u0443\u043b \u0442\u0443\u0442 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430? \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u0437\u0432\u043e\u043b\u044c \u043d\u0430 \u043c\u0435\u043d\u044f \u0442\u0443\u0442 \u043d\u0435 \u043d\u0430\u0433\u043e\u0432\u0430\u0440\u0438\u0432\u0430\u0442\u044c \u0438 \u0433\u043e\u043b\u043e\u0441\u043b\u043e\u0432\u043d\u044b\u043c\u0438 \u043e\u0431\u0432\u0438\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u043d\u0435 \u0431\u0440\u043e\u0441\u0430\u0442\u044c\u0441\u044f. \u042f \u043d\u0438\u0447\u0435\u0433\u043e \u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 \u043d\u0435 \u0432\u044b\u0434\u0435\u0440\u0433\u0438\u0432\u0430\u044e, \u0430 \u0435\u0441\u043b\u0438 \u0443 \u0442\u0435\u0431\u044f \u043d\u0435\u0442 \u0434\u043e\u0432\u043e\u0434\u043e\u0432 \u043f\u0440\u043e\u0442\u0438\u0432 \u0441\u0432\u043e\u0435\u0439 \u043d\u0435\u043f\u0440\u0430\u0432\u043e\u0442\u044b, \u0442\u043e \u043d\u0435 \u043d\u0430\u0434\u043e \u0432\u0435\u0448\u0430\u0442\u044c \u044d\u0442\u043e \u043d\u0430 \u043c\u0435\u043d\u044f. \u042d\u0442\u0438\u043a\u0443 \u0432\u043e\u043f\u0440\u043e\u0441\u0430 \u0432 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u044f \u043e\u0442\u0432\u0435\u0447\u0430\u043b, \u0442\u044b \u043d\u0435 \u043f\u043e\u0434\u043d\u0438\u043c\u0430\u043b.\\r\\n\\r\\n\u0412\u043e-\u0432\u0442\u043e\u0440\u044b\u0445, \u0442\u043e, \u0447\u0442\u043e \u0442\u0430\u043c \u0447\u0430\u0441\u0442\u044c \u0444\u0440\u0430\u0437\u044b \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c \u0434\u0440\u0443\u0433\u043e\u043c\u0443 \u0447\u0435\u043b\u043e\u0432\u0435\u043a\u0443 - \u0442\u0443\u0442, \u043d\u0430\u043f\u043e\u043c\u0438\u043d\u0430\u044e, \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u0430\u044f \u0434\u0438\u0441\u043a\u0443\u0441\u0441\u0438\u044f. \u0415\u0441\u043b\u0438 \u0442\u0435\u0431\u0435 \u0442\u0430\u043a \u0441\u0442\u0440\u0430\u0448\u043d\u043e, \u0447\u0442\u043e \u043d\u0430 \u0442\u0432\u043e\u0439 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0439 \u043d\u0435 \u0434\u0430\u0439 \u0411\u043e\u0433 \u043e\u0442\u0432\u0435\u0442\u0438\u0442 \u043a\u0442\u043e-\u0442\u043e \u0435\u0449\u0435, \u0442\u043e \u043d\u0435 \u043d\u0430\u0434\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u0435\u0433\u043e \u0442\u0443\u0442: \u043e\u0442\u043e\u0448\u043b\u0438 \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0443 e-mail \u0438 \u0435\u0433\u043e \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0438\u043a\u0442\u043e, \u043a\u0440\u043e\u043c\u0435 \u0442\u0432\u043e\u0435\u0433\u043e \u0441\u043e\u0431\u0435\u0441\u0435\u0434\u043d\u0438\u043a\u0430, \u043d\u0435 \u0443\u0432\u0438\u0434\u0438\u0442. \u0410 \u043f\u043e\u043a\u0430 \u043f\u0438\u0448\u0435\u0448\u044c \u0447\u0442\u043e-\u0442\u043e \u043d\u0430 \u043f\u0443\u0431\u043b\u0438\u043a\u0443, \u043d\u0435 \u0443\u0434\u0438\u0432\u043b\u044f\u0439\u0441\u044f, \u0435\u0441\u043b\u0438 \u043a\u0442\u043e-\u0442\u043e \u0438\u0437 \u043f\u0443\u0431\u043b\u0438\u043a\u0438 \u0447\u0442\u043e-\u0442\u043e \u0432 \u0438\u0442\u043e\u0433\u0435 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0442\u0435\u0431\u0435.'}, 'com_81': {'author': 'teror4uks', 'datetime': '01\/27\/2022, 13:26:19', 'body': '@wtlgo \u0442\u0432\u043e\u0451 \u043f\u0440\u0430\u0432\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c, \u043c\u043e\u0451 \u043f\u0440\u0430\u0432\u043e \u043f\u0440\u043e\u0438\u0433\u043d\u043e\u0440\u0438\u0442\u044c \u0442\u043e\u0442 \u0431\u0440\u0435\u0434 \u0447\u0442\u043e \u0442\u044b \u043f\u0438\u0448\u0435\u0448\u044c'}, 'com_82': {'author': 'wtlgo', 'datetime': '01\/27\/2022, 13:28:13', 'body': '@teror4uks \u044d\u0442\u043e \u043d\u0435 \u0431\u0440\u0435\u0434. \u0411\u0440\u0435\u0434 \u043d\u0430\u043f\u0438\u0441\u0430\u043b \u0442\u0430\u043a\u0438 \u0442\u044b, \u0447\u0442\u043e \u044f \u0438 \u043f\u044b\u0442\u0430\u044e\u0441\u044c \u0442\u0435\u0431\u0435 \u0434\u043e\u043d\u0435\u0441\u0442\u0438.'}, 'com_83': {'author': 'elegantShock2258', 'datetime': '01\/28\/2022, 16:20:54', 'body': 'Speak American! Liberty babyyy \ud83c\uddfa\ud83c\uddf8\ud83c\uddfa\ud83c\uddf8\ud83c\uddfa\ud83c\uddf8'}, 'com_84': {'author': 'elegantShock2258', 'datetime': '01\/28\/2022, 16:24:07', 'body': '> I just paid @Marak 100$. If you have a time to have a futile dispute, use that time to help people in need.\\r\\n\\r\\nYes he needs proper help instead of showing his outbursts up here in the internet and ruining his good name and reputation.'}, 'com_85': {'author': 'Awilum', 'datetime': '02\/01\/2022, 12:20:19', 'body': '> https:\/\/opensea.io\/marak\\r\\n> \\r\\n> Are you sure he needs help?\\r\\n@okyanusoz \\r\\n\\r\\nbecause this story about Colors.js and Faker.js is is look like a scam. imho.'}, 'com_86': {'author': 'satouriko', 'datetime': '02\/04\/2022, 03:20:05', 'body': '> @hello-smile6 what does \"syeal your data\" mean?\\r\\n\\r\\nI guess \"steal\"'}, 'com_87': {'author': 'hello-smile6', 'datetime': '02\/08\/2022, 01:24:33', 'body': '> > @hello-smile6 what does \"syeal your data\" mean?\\r\\n> \\r\\n> I guess \"steal\"\\r\\n\\r\\nYes. Unfortunately, as I said, I didn\\'t create it, so don\\'t blame me for spelling.'}, 'com_88': {'author': 'Lin2Jing4', 'datetime': '02\/12\/2022, 16:39:10', 'body': '\"You can feel the regret. With Cuck Licenses, you get the worst of two worlds: You get no credit for your work, nor money for licensing fees like other proprietary software and your software will be used to violate your and other users\\' privacy when it is used in closed-source environments. Oh, no... copes incoming\"\\r\\n(Luke Madison Smith, 2021, \"Why I Use the GPL and Not Cuck Licenses\").'}, 'com_89': {'author': 'elegantShock2258', 'datetime': '03\/02\/2022, 15:45:11', 'body': \"> there is no american language\\r\\n\\r\\nYes that's the joke\"}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'package.json': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Marak\/colors.js\/raw\/6bc50e79eeaa1d87369bb3e7e608ebed18c5cf26\/package.json', 'patch': '@@ -1,7 +1,7 @@\\n {\\n     \"name\": \"colors\",\\n     \"description\": \"get colors in your node.js console\",\\n-    \"version\": \"1.4.44-liberty\",\\n+    \"version\": \"1.4.44-liberty-2\",\\n     \"author\": \"Marak Squires\",\\n     \"contributors\": [\\n         {'}}",
            "message_norm":"bump to `v1.4.44-liberty-2`",
            "language":"en",
            "entities":"[('v1.4.44', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['package.json'])",
            "num_files":1.0
        },
        {
            "index":1017,
            "vuln_id":"GHSA-7f53-fmmv-mfjv",
            "cwe_id":"{'CWE-400'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/facebook\/react-native\/commit\/ca09ae82715e33c9ac77b3fa55495cf84ba891c7'}",
            "dataset":"osv",
            "summary":"Regular expression denial of service in react-native A regular expression denial of service (ReDoS) vulnerability in the validateBaseUrl function can cause the application to use excessive resources, become unresponsive, or crash. This was introduced in react-native version 0.59.0 and fixed in version 0.64.1.",
            "published_date":"2021-07-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/facebook\/react-native",
            "commit_href":"https:\/\/github.com\/facebook\/react-native\/commit\/ca09ae82715e33c9ac77b3fa55495cf84ba891c7",
            "commit_sha":"ca09ae82715e33c9ac77b3fa55495cf84ba891c7",
            "patch":"SINGLE",
            "chain_ord":"['ca09ae82715e33c9ac77b3fa55495cf84ba891c7']",
            "before_first_fix_commit":"{'166a5ddf88aca0d0235e48c624681eec095e9ef8'}",
            "last_fix_commit":"ca09ae82715e33c9ac77b3fa55495cf84ba891c7",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/29\/2021, 21:51:29",
            "message":"Update validateBaseUrl to use latest regex\n\nSummary:\nUpdating the regex to avoid a potential regular expression denial-of-service vulnerability.\n\nChangelog: Update validateBaseUrl to use a more robust regular expression. Fixes CVE-2020-1920, GHSL-2020-293\n\nReviewed By: lunaleaps\n\nDifferential Revision: D25507604\n\nfbshipit-source-id: c36a03c456881bc655c861e1a2c5cd41a7127c9d",
            "author":"Neal Poole",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'Libraries\/Blob\/URL.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebook\/react-native\/raw\/ca09ae82715e33c9ac77b3fa55495cf84ba891c7\/Libraries%2FBlob%2FURL.js', 'patch': '@@ -107,7 +107,7 @@ export class URLSearchParams {\\n \\n function validateBaseUrl(url: string) {\\n   \/\/ from this MIT-licensed gist: https:\/\/gist.github.com\/dperini\/729294\\n-  return \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))?)(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/i.test(\\n+  return \/^(?:(?:(?:https?|ftp):)?\\\\\/\\\\\/)(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z0-9\\\\u00a1-\\\\uffff][a-z0-9\\\\u00a1-\\\\uffff_-]{0,62})?[a-z0-9\\\\u00a1-\\\\uffff]\\\\.)*(?:[a-z\\\\u00a1-\\\\uffff]{2,}\\\\.?))(?::\\\\d{2,5})?(?:[\/?#]\\\\S*)?$\/.test(\\n     url,\\n   );\\n }'}}",
            "message_norm":"update validatebaseurl to use latest regex\n\nsummary:\nupdating the regex to avoid a potential regular expression denial-of-service vulnerability.\n\nchangelog: update validatebaseurl to use a more robust regular expression. fixes cve-2020-1920, ghsl-2020-293\n\nreviewed by: lunaleaps\n\ndifferential revision: d25507604\n\nfbshipit-source-id: c36a03c456881bc655c861e1a2c5cd41a7127c9d",
            "language":"en",
            "entities":"[('update', 'ACTION', ''), ('updating', 'ACTION', ''), ('denial-of-service', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('update', 'ACTION', ''), ('cve-2020-1920', 'VULNID', 'CVE'), ('d25507604', 'SHA', 'generic_sha'), ('c36a03c456881bc655c861e1a2c5cd41a7127c9d', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['Libraries\/Blob\/URL.js'])",
            "num_files":1.0
        },
        {
            "index":2074,
            "vuln_id":"GHSA-hhrj-wp42-32v3",
            "cwe_id":"{'CWE-209'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/2417bd2eda2aa2868c1dad1abf62341f22bfc20a'}",
            "dataset":"osv",
            "summary":"Generation of Error Message Containing Sensitive Information in microweber Generation of Error Message Containing Sensitive Information in Packagist microweber\/microweber prior to 1.2.11.",
            "published_date":"2022-02-19",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/2417bd2eda2aa2868c1dad1abf62341f22bfc20a",
            "commit_sha":"2417bd2eda2aa2868c1dad1abf62341f22bfc20a",
            "patch":"SINGLE",
            "chain_ord":"['2417bd2eda2aa2868c1dad1abf62341f22bfc20a']",
            "before_first_fix_commit":"{'8adc9da7307c89d7cb7b309f69d0c2922a56aa2e'}",
            "last_fix_commit":"2417bd2eda2aa2868c1dad1abf62341f22bfc20a",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/17\/2022, 09:15:14",
            "message":"Update Comment.php",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 0, 'total': 9}",
            "files":"{'src\/MicroweberPackages\/Comment\/Models\/Comment.php': {'additions': 9, 'deletions': 0, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/2417bd2eda2aa2868c1dad1abf62341f22bfc20a\/src%2FMicroweberPackages%2FComment%2FModels%2FComment.php', 'patch': \"@@ -5,10 +5,12 @@\\n use EloquentFilter\\\\Filterable;\\n use Illuminate\\\\Database\\\\Eloquent\\\\Model;\\n use MicroweberPackages\\\\Content\\\\Models\\\\ModelFilters\\\\ContentFilter;\\n+use MicroweberPackages\\\\Core\\\\Models\\\\HasSearchableTrait;\\n \\n class Comment extends Model\\n {\\n     use Filterable;\\n+    use HasSearchableTrait;\\n \\n     public $table = 'comments';\\n \\n@@ -21,6 +23,13 @@ class Comment extends Model\\n         'comment_body',\\n     ];\\n \\n+    protected $searchable = [\\n+        'comment_name',\\n+        'comment_email',\\n+        'comment_website',\\n+        'comment_body',\\n+    ];\\n+\\n     public function modelFilter()\\n     {\\n         return $this->provideFilter(ContentFilter::class);\"}}",
            "message_norm":"update comment.php",
            "language":"fr",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/Comment\/Models\/Comment.php'])",
            "num_files":1.0
        },
        {
            "index":2222,
            "vuln_id":"GHSA-j8qh-3xrq-c825",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3ebedd7e345453d68e279cfc3e4072648e5e12e5'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `OneHot` ### Impact\nThe implementation of the `OneHot` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f61c57bd425878be108ec787f4d96390579fb83e\/tensorflow\/lite\/kernels\/one_hot.cc#L68-L72):\n\n```cc\nint prefix_dim_size = 1;\nfor (int i = 0; i < op_context.axis; ++i) {\n  prefix_dim_size *= op_context.indices->dims->data[i];\n}\nconst int suffix_dim_size = NumElements(op_context.indices) \/ prefix_dim_size;\n```\n\nAn attacker can craft a model such that at least one of the dimensions of `indices` would be 0. In turn, the `prefix_dim_size` value would become 0.\n\n### Patches\nWe have patched the issue in GitHub commit [3ebedd7e345453d68e279cfc3e4072648e5e12e5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3ebedd7e345453d68e279cfc3e4072648e5e12e5).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/3ebedd7e345453d68e279cfc3e4072648e5e12e5",
            "commit_sha":"3ebedd7e345453d68e279cfc3e4072648e5e12e5",
            "patch":"SINGLE",
            "chain_ord":"['3ebedd7e345453d68e279cfc3e4072648e5e12e5']",
            "before_first_fix_commit":"{'f61c57bd425878be108ec787f4d96390579fb83e'}",
            "last_fix_commit":"3ebedd7e345453d68e279cfc3e4072648e5e12e5",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 19:58:07",
            "message":"Prevent division by 0 in OneHot implementation\n\nIf input indices is degenerate, the implementation would do a divide by zero. See https:\/\/github.com\/tensorflow\/tensorflow\/blob\/745d57df6d5e9bc568666a2a48ed8dd629c27241\/tensorflow\/lite\/kernels\/one_hot.cc#L68-L72\n\nPiperOrigin-RevId: 370966870\nChange-Id: Ie018337811c8016b5a1d3a277d00d5f2e19a2058",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/lite\/kernels\/one_hot.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/3ebedd7e345453d68e279cfc3e4072648e5e12e5\/tensorflow%2Flite%2Fkernels%2Fone_hot.cc', 'patch': '@@ -69,6 +69,11 @@ void OneHotComputeImpl(const OneHotContext& op_context) {\\n   for (int i = 0; i < op_context.axis; ++i) {\\n     prefix_dim_size *= op_context.indices->dims->data[i];\\n   }\\n+  if (prefix_dim_size == 0) {\\n+    \/\/ If indices tensor is degenerate, return a degenerate tensor, just like\\n+    \/\/ TensorFlow does.\\n+    return;\\n+  }\\n   const int suffix_dim_size = NumElements(op_context.indices) \/ prefix_dim_size;\\n   const int depth = *op_context.depth->data.i32;'}}",
            "message_norm":"prevent division by 0 in onehot implementation\n\nif input indices is degenerate, the implementation would do a divide by zero. see https:\/\/github.com\/tensorflow\/tensorflow\/blob\/745d57df6d5e9bc568666a2a48ed8dd629c27241\/tensorflow\/lite\/kernels\/one_hot.cc#l68-l72\n\npiperorigin-revid: 370966870\nchange-id: ie018337811c8016b5a1d3a277d00d5f2e19a2058",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('divide by zero', 'SECWORD', ''), ('https:\/\/github.com\/tensorflow\/tensorflow\/blob\/745d57df6d5e9bc568666a2a48ed8dd629c27241\/tensorflow\/lite\/kernels\/one_hot.cc#l68-l72', 'URL', ''), ('370966870', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/one_hot.cc'])",
            "num_files":1.0
        },
        {
            "index":2711,
            "vuln_id":"GHSA-q73m-3q7r-fpf7",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/star7th\/showdoc\/commit\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in ShowDoc ShowDoc prior to 2.10.4 is vulnerable to stored cross-site scripting via file upload.",
            "published_date":"2022-03-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/star7th\/showdoc",
            "commit_href":"https:\/\/github.com\/star7th\/showdoc\/commit\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb",
            "commit_sha":"d1c9ed0d77ea5d56f09be0c492361dca8af745bb",
            "patch":"SINGLE",
            "chain_ord":"['d1c9ed0d77ea5d56f09be0c492361dca8af745bb']",
            "before_first_fix_commit":"{'56e450c3adf75c707500d7231a78c9fc894c7f13', 'aa41c83e0cc5079fb39e04d9f630571ffb8bbf22'}",
            "last_fix_commit":"d1c9ed0d77ea5d56f09be0c492361dca8af745bb",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2022, 12:29:34",
            "message":"Merge pull request #1632 from ajaysenr\/master\n\nUpdate AttachmentModel.class.php",
            "author":"star7th",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'server\/Application\/Api\/Model\/AttachmentModel.class.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/star7th\/showdoc\/raw\/d1c9ed0d77ea5d56f09be0c492361dca8af745bb\/server%2FApplication%2FApi%2FModel%2FAttachmentModel.class.php', 'patch': \"@@ -325,7 +325,7 @@ public function isAllowedFilename($filename){\\n \\t\\t$allow_array = array(\\n \\t\\t\\t'.jpg','.jpeg','.png','.bmp','.gif','.ico','.webp',\\n \\t\\t\\t'.mp3','.wav','.m4a','.ogg','.webma','.mp4','.flv',\\n-\\t\\t\\t'.mov','.webmv','.m3u8a','.flac','.mkv',\\n+\\t\\t\\t'.mov','.webmv','.flac','.mkv',\\n \\t\\t\\t'.zip','.tar','.gz','.tgz','.ipa','.apk','.rar','.iso','.bz2','.epub',\\n \\t\\t\\t'.pdf','.ofd','.swf','.epub','.xps',\\n \\t\\t\\t'.doc','.docx','.odt','.rtf','.docm','.dotm','.dot','.dotx','.wps','.wpt',\"}}",
            "message_norm":"merge pull request #1632 from ajaysenr\/master\n\nupdate attachmentmodel.class.php",
            "language":"en",
            "entities":"[('#1632', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['server\/Application\/Api\/Model\/AttachmentModel.class.php'])",
            "num_files":1.0
        },
        {
            "index":345,
            "vuln_id":"GHSA-43f8-2h32-f4cj",
            "cwe_id":"{'CWE-400'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/npm\/hosted-git-info\/commit\/bede0dc38e1785e732bf0a48ba6f81a4a908eba3', 'https:\/\/github.com\/npm\/hosted-git-info\/commit\/8d4b3697d79bcd89cdb36d1db165e3696c783a01', 'https:\/\/github.com\/npm\/hosted-git-info\/commit\/29adfe5ef789784c861b2cdeb15051ec2ba651a7'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in hosted-git-info The npm package `hosted-git-info` before 3.0.8 are vulnerable to Regular Expression Denial of Service (ReDoS) via regular expression shortcutMatch in the fromUrl function in index.js. The affected regular expression exhibits polynomial worst-case time complexity",
            "published_date":"2021-05-06",
            "chain_len":3,
            "project":"https:\/\/github.com\/npm\/hosted-git-info",
            "commit_href":"https:\/\/github.com\/npm\/hosted-git-info\/commit\/29adfe5ef789784c861b2cdeb15051ec2ba651a7",
            "commit_sha":"29adfe5ef789784c861b2cdeb15051ec2ba651a7",
            "patch":"MULTI",
            "chain_ord":"['bede0dc38e1785e732bf0a48ba6f81a4a908eba3', '29adfe5ef789784c861b2cdeb15051ec2ba651a7', '8d4b3697d79bcd89cdb36d1db165e3696c783a01']",
            "before_first_fix_commit":"{'29adfe5ef789784c861b2cdeb15051ec2ba651a7'}",
            "last_fix_commit":"8d4b3697d79bcd89cdb36d1db165e3696c783a01",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/07\/2021, 19:31:52",
            "message":"fix: backport regex fix from #76\n\nPR-URL: https:\/\/github.com\/npm\/hosted-git-info\/pull\/84\nCredit: @nlf\nClose: #84\nReviewed-by: @wraithgar",
            "author":"nlf",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'index.js': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/hosted-git-info\/raw\/29adfe5ef789784c861b2cdeb15051ec2ba651a7\/index.js', 'patch': \"@@ -41,7 +41,7 @@ function fromUrl (giturl, opts) {\\n     isGitHubShorthand(giturl) ? 'github:' + giturl : giturl\\n   )\\n   var parsed = parseGitUrl(url)\\n-  var shortcutMatch = url.match(new RegExp('^([^:]+):(?:(?:[^@:]+(?:[^@]+)?@)?([^\/]*))[\/](.+?)(?:[.]git)?($|#)'))\\n+  var shortcutMatch = url.match(\/^([^:]+):(?:[^@]+@)?(?:([^\/]*)\\\\\/)?([^#]+)\/)\\n   var matches = Object.keys(gitHosts).map(function (gitHostName) {\\n     try {\\n       var gitHostInfo = gitHosts[gitHostName]\\n@@ -55,7 +55,7 @@ function fromUrl (giturl, opts) {\\n       var defaultRepresentation = null\\n       if (shortcutMatch && shortcutMatch[1] === gitHostName) {\\n         user = shortcutMatch[2] && decodeURIComponent(shortcutMatch[2])\\n-        project = decodeURIComponent(shortcutMatch[3])\\n+        project = decodeURIComponent(shortcutMatch[3].replace(\/\\\\.git$\/, ''))\\n         defaultRepresentation = 'shortcut'\\n       } else {\\n         if (parsed.host && parsed.host !== gitHostInfo.domain && parsed.host.replace(\/^www[.]\/, '') !== gitHostInfo.domain) return\"}}",
            "message_norm":"fix: backport regex fix from #76\n\npr-url: https:\/\/github.com\/npm\/hosted-git-info\/pull\/84\ncredit: @nlf\nclose: #84\nreviewed-by: @wraithgar",
            "language":"en",
            "entities":"[('#76', 'ISSUE', ''), ('https:\/\/github.com\/npm\/hosted-git-info\/pull\/84', 'URL', ''), ('#84', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":1616,
            "vuln_id":"GHSA-cvpc-8phh-8f45",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":4.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/00302787b788c5ff04cb6f62aed5a74d936e86c0', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/e11f55585f614645b360563072ffeb5c3eeff162', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/46d5b0852528ddfd614ded79bccc75589f801bd9', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1970c2158b1ffa416d159d03c3370b9a462aee35', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/fff2c8326280c07733828f990548979bdc893859'}",
            "dataset":"osv",
            "summary":"Out of bounds access in tensorflow-lite ### Impact\nIn TensorFlow Lite, saved models in the flatbuffer format use a double indexing scheme: a model has a set of subgraphs, each subgraph has a set of operators and each operator has a set of input\/output tensors. The flatbuffer format uses indices for the tensors, indexing into an array of tensors that is owned by the subgraph. This results in a pattern of double array indexing when trying to get the data of each tensor:https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/kernels\/kernel_util.cc#L36\n\nHowever, some operators can have some tensors be optional. To handle this scenario, the flatbuffer model uses a negative `-1` value as index for these tensors:\nhttps:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/c\/common.h#L82\n\nThis results in special casing during validation at model loading time: https:\/\/github.com\/tensorflow\/tensorflow\/blob\/0e68f4d3295eb0281a517c3662f6698992b7b2cf\/tensorflow\/lite\/core\/subgraph.cc#L566-L580\n\nUnfortunately, this means that the `-1` index is a valid tensor index for any operator, including those that don't expect optional inputs and including for output tensors. Thus, this allows writing and reading from outside the bounds of heap allocated arrays, although only at a specific offset from the start of these arrays.\n\nThis results in both read and write gadgets, albeit very limited in scope.\n\n### Patches\nWe have patched the issue in several commits (46d5b0852, 00302787b7, e11f5558, cd31fd0ce, 1970c21, and fff2c83). We will release patch releases for all versions between 1.15 and 2.3.\n\nWe recommend users to upgrade to TensorFlow 1.15.4, 2.0.3, 2.1.2, 2.2.1, or 2.3.1.\n\n### Workarounds\nA potential workaround would be to add a custom `Verifier` to the model loading code to ensure that only operators which accept optional inputs use the `-1` special value and only for the tensors that they expect to be optional. Since this allow-list type approach is erro-prone, we advise upgrading to the patched code.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2020-09-25",
            "chain_len":6,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f",
            "commit_sha":"cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f",
            "patch":"MULTI",
            "chain_ord":"['46d5b0852528ddfd614ded79bccc75589f801bd9', '00302787b788c5ff04cb6f62aed5a74d936e86c0', 'e11f55585f614645b360563072ffeb5c3eeff162', 'cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f', 'fff2c8326280c07733828f990548979bdc893859', '1970c2158b1ffa416d159d03c3370b9a462aee35']",
            "before_first_fix_commit":"{'fff2c8326280c07733828f990548979bdc893859'}",
            "last_fix_commit":"1970c2158b1ffa416d159d03c3370b9a462aee35",
            "chain_ord_pos":4.0,
            "commit_datetime":"09\/18\/2020, 20:44:32",
            "message":"[tflite]: Insert `nullptr` checks when obtaining tensors.\n\nAs part of ongoing refactoring, `tflite::GetInput`, `tflite::GetOutput`, `tflite::GetTemporary` and `tflite::GetIntermediates` will return `nullptr` in some cases. Hence, we insert the `nullptr` checks on all usages.\n\nWe also insert `nullptr` checks on usages of `tflite::GetVariableInput` and `tflite::GetOptionalInputTensor` but only in the cases where there is no obvious check that `nullptr` is acceptable (that is, we only insert the check for the output of these two functions if the tensor is accessed as if it is always not `nullptr`).\n\nPiperOrigin-RevId: 332518902\nChange-Id: I92eb164a6101ac3cca66090061a9b56a97288236",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 7, 'total': 23}",
            "files":"{'tensorflow\/lite\/micro\/test_helpers.cc': {'additions': 16, 'deletions': 7, 'changes': 23, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/cd31fd0ce0449a9e0f83dcad08d6ed7f1d6bef3f\/tensorflow%2Flite%2Fmicro%2Ftest_helpers.cc', 'patch': '@@ -601,7 +601,8 @@ TfLiteStatus SimpleStatefulOp::Prepare(TfLiteContext* context,\\n   OpData* data = reinterpret_cast<OpData*>(node->user_data);\\n \\n   \/\/ Make sure that the input is in uint8_t with at least 1 data entry.\\n-  const TfLiteTensor* input = tflite::GetInput(context, node, kInputTensor);\\n+  const TfLiteTensor* input;\\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\\n   if (input->type != kTfLiteUInt8) return kTfLiteError;\\n   if (NumElements(input->dims) == 0) return kTfLiteError;\\n \\n@@ -622,7 +623,8 @@ TfLiteStatus SimpleStatefulOp::Invoke(TfLiteContext* context,\\n   OpData* data = reinterpret_cast<OpData*>(node->user_data);\\n   *data->invoke_count += 1;\\n \\n-  const TfLiteTensor* input = GetInput(context, node, kInputTensor);\\n+  const TfLiteTensor* input;\\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, kInputTensor, &input));\\n   const uint8_t* input_data = GetTensorData<uint8_t>(input);\\n   int size = NumElements(input->dims);\\n \\n@@ -641,9 +643,13 @@ TfLiteStatus SimpleStatefulOp::Invoke(TfLiteContext* context,\\n     }\\n   }\\n \\n-  TfLiteTensor* median = GetOutput(context, node, kMedianTensor);\\n+  TfLiteTensor* median;\\n+  TF_LITE_ENSURE_OK(context,\\n+                    GetOutputSafe(context, node, kMedianTensor, &median));\\n   uint8_t* median_data = GetTensorData<uint8_t>(median);\\n-  TfLiteTensor* invoke_count = GetOutput(context, node, kInvokeCount);\\n+  TfLiteTensor* invoke_count;\\n+  TF_LITE_ENSURE_OK(context,\\n+                    GetOutputSafe(context, node, kInvokeCount, &invoke_count));\\n   int32_t* invoke_count_data = GetTensorData<int32_t>(invoke_count);\\n \\n   median_data[0] = sorting_buffer[size \/ 2];\\n@@ -681,11 +687,14 @@ TfLiteStatus MockCustom::Prepare(TfLiteContext* context, TfLiteNode* node) {\\n }\\n \\n TfLiteStatus MockCustom::Invoke(TfLiteContext* context, TfLiteNode* node) {\\n-  const TfLiteTensor* input = tflite::GetInput(context, node, 0);\\n+  const TfLiteTensor* input;\\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 0, &input));\\n   const int32_t* input_data = input->data.i32;\\n-  const TfLiteTensor* weight = tflite::GetInput(context, node, 1);\\n+  const TfLiteTensor* weight;\\n+  TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &weight));\\n   const uint8_t* weight_data = weight->data.uint8;\\n-  TfLiteTensor* output = GetOutput(context, node, 0);\\n+  TfLiteTensor* output;\\n+  TF_LITE_ENSURE_OK(context, GetOutputSafe(context, node, 0, &output));\\n   int32_t* output_data = output->data.i32;\\n   output_data[0] =\\n       0;  \/\/ Catch output tensor sharing memory with an input tensor'}}",
            "message_norm":"[tflite]: insert `nullptr` checks when obtaining tensors.\n\nas part of ongoing refactoring, `tflite::getinput`, `tflite::getoutput`, `tflite::gettemporary` and `tflite::getintermediates` will return `nullptr` in some cases. hence, we insert the `nullptr` checks on all usages.\n\nwe also insert `nullptr` checks on usages of `tflite::getvariableinput` and `tflite::getoptionalinputtensor` but only in the cases where there is no obvious check that `nullptr` is acceptable (that is, we only insert the check for the output of these two functions if the tensor is accessed as if it is always not `nullptr`).\n\npiperorigin-revid: 332518902\nchange-id: i92eb164a6101ac3cca66090061a9b56a97288236",
            "language":"en",
            "entities":"[('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('332518902', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/micro\/test_helpers.cc'])",
            "num_files":1.0
        },
        {
            "index":727,
            "vuln_id":"GHSA-627q-g293-49q7",
            "cwe_id":"{'CWE-400'}",
            "score":6.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7'}",
            "dataset":"osv",
            "summary":"Abort caused by allocating a vector that is too large in Tensorflow ### Impact\nDuring shape inference, TensorFlow can [allocate a large vector](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/a1320ec1eac186da1d03f033109191f715b2b130\/tensorflow\/core\/framework\/shape_inference.cc#L788-L790) based on a value from a tensor controlled by the user:\n\n```cc\n  const auto num_dims = Value(shape_dim);\n  std::vector<DimensionHandle> dims;\n  dims.reserve(num_dims);\n``` \n  \n### Patches           \nWe have patched the issue in GitHub commit [1361fb7e29449629e1df94d44e0427ebec8c83c7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.",
            "published_date":"2022-02-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1361fb7e29449629e1df94d44e0427ebec8c83c7",
            "commit_sha":"1361fb7e29449629e1df94d44e0427ebec8c83c7",
            "patch":"SINGLE",
            "chain_ord":"['1361fb7e29449629e1df94d44e0427ebec8c83c7']",
            "before_first_fix_commit":"{'f6e7c84316c9fe416ea32086fa3c64fee21fafab'}",
            "last_fix_commit":"1361fb7e29449629e1df94d44e0427ebec8c83c7",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/10\/2021, 23:52:57",
            "message":"Fix abort caused by allocating a too large vector.\n\nWe need to make sure that the number of dimensions in a shape is within limits.\n\nPiperOrigin-RevId: 408997911\nChange-Id: If59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 15, 'deletions': 0, 'total': 15}",
            "files":"{'tensorflow\/core\/framework\/shape_inference.cc': {'additions': 15, 'deletions': 0, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/1361fb7e29449629e1df94d44e0427ebec8c83c7\/tensorflow%2Fcore%2Fframework%2Fshape_inference.cc', 'patch': '@@ -14,6 +14,8 @@ limitations under the License.\\n ==============================================================================*\/\\n #include \"tensorflow\/core\/framework\/shape_inference.h\"\\n \\n+#include <cstdint>\\n+\\n #include \"tensorflow\/core\/framework\/bounds_check.h\"\\n #include \"tensorflow\/core\/framework\/full_type_util.h\"\\n #include \"tensorflow\/core\/framework\/node_def.pb.h\"\\n@@ -789,6 +791,19 @@ Status InferenceContext::InternalMakeShapeFromTensor(\\n       return ReturnUnknownShape(out);\\n     }\\n     const auto num_dims = Value(shape_dim);\\n+    \/\/ TODO(mihaimaruseac): Should be `TensorShape::MaxDimensions()` as we are\\n+    \/\/ not able to materialize shapes with more than this number of dimensions\\n+    \/\/ but then shape inference would fail for operations such as\\n+    \/\/ `tf.range`\/`tf.ones`, etc. where the shape is not really materialized,\\n+    \/\/ only used during the inference. Hence, just prevent doing a `reserve`\\n+    \/\/ with a very large argument.\\n+    const int64_t max_dimensions = 1 << 20;\\n+    if (num_dims >= max_dimensions) {\\n+      return errors::Internal(\\n+          \"Cannot create a tensor with \", num_dims,\\n+          \" dimensions, as these would be more than maximum of \",\\n+          max_dimensions);\\n+    }\\n     std::vector<DimensionHandle> dims;\\n     dims.reserve(num_dims);\\n     for (int i = 0; i < num_dims; i++) dims.push_back(UnknownDim());'}}",
            "message_norm":"fix abort caused by allocating a too large vector.\n\nwe need to make sure that the number of dimensions in a shape is within limits.\n\npiperorigin-revid: 408997911\nchange-id: if59e1c23f2ec9c2d4ff4d8632fd62b2a7773a4eb",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('408997911', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/framework\/shape_inference.cc'])",
            "num_files":1.0
        },
        {
            "index":59,
            "vuln_id":"GHSA-27qf-jwm8-g7f3",
            "cwe_id":"{'CWE-369'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9'}",
            "dataset":"osv",
            "summary":"FPE in LSH in TFLite ### Impact\nAn attacker can craft a TFLite model that would trigger a division by zero error in LSH  [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/149562d49faa709ea80df1d99fc41d005b81082a\/tensorflow\/lite\/kernels\/lsh_projection.cc#L118).\n\n```cc\nint RunningSignBit(const TfLiteTensor* input, const TfLiteTensor* weight,\n                   float seed) {\n  int input_item_bytes = input->bytes \/ SizeOfDimension(input, 0);\n  \/\/ ...\n}\n```\n          \nThere is no check that the first dimension of the input is non zero.\n      \n### Patches\nWe have patched the issue in GitHub commit [0575b640091680cfb70f4dd93e70658de43b94f9](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick thiscommit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for  more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang of Baidu Security.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0575b640091680cfb70f4dd93e70658de43b94f9",
            "commit_sha":"0575b640091680cfb70f4dd93e70658de43b94f9",
            "patch":"SINGLE",
            "chain_ord":"['0575b640091680cfb70f4dd93e70658de43b94f9']",
            "before_first_fix_commit":"{'13aec9e4558d83fedac084ad66e32daf8bbcde0f'}",
            "last_fix_commit":"0575b640091680cfb70f4dd93e70658de43b94f9",
            "chain_ord_pos":1.0,
            "commit_datetime":"07\/27\/2021, 23:45:20",
            "message":"Prevent division by 0 in LSH projection.\n\nPiperOrigin-RevId: 387225857\nChange-Id: Iaeb572a763618c64f503e0026f6dd9fd769bf50c",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 1, 'total': 3}",
            "files":"{'tensorflow\/lite\/kernels\/lsh_projection.cc': {'additions': 2, 'deletions': 1, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0575b640091680cfb70f4dd93e70658de43b94f9\/tensorflow%2Flite%2Fkernels%2Flsh_projection.cc', 'patch': '@@ -28,7 +28,7 @@ limitations under the License.\\n \/\/\\n \/\/ Input:\\n \/\/   Tensor[0]: Hash functions. Dim.size == 2, DataType: Float.\\n-\/\/              Tensor[0].Dim[0]: Num of hash functions.\\n+\/\/              Tensor[0].Dim[0]: Num of hash functions. Must be at least 1.\\n \/\/              Tensor[0].Dim[1]: Num of projected output bits generated by\\n \/\/                                each hash function.\\n \/\/   In sparse case, Tensor[0].Dim[1] + ceil( log2(Tensor[0].Dim[0] )) <= 32.\\n@@ -82,6 +82,7 @@ TfLiteStatus Resize(TfLiteContext* context, TfLiteNode* node) {\\n   const TfLiteTensor* input;\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 1, &input));\\n   TF_LITE_ENSURE(context, NumDimensions(input) >= 1);\\n+  TF_LITE_ENSURE(context, SizeOfDimension(input, 0) >= 1);\\n \\n   if (NumInputs(node) == 3) {\\n     const TfLiteTensor* weight;'}}",
            "message_norm":"prevent division by 0 in lsh projection.\n\npiperorigin-revid: 387225857\nchange-id: iaeb572a763618c64f503e0026f6dd9fd769bf50c",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('387225857', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/lsh_projection.cc'])",
            "num_files":1.0
        },
        {
            "index":791,
            "vuln_id":"GHSA-68wm-pfjf-wqp6",
            "cwe_id":"{'CWE-287'}",
            "score":10.0,
            "chain":"{'https:\/\/github.com\/authelia\/authelia\/commit\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda'}",
            "dataset":"osv",
            "summary":"Authentication bypassed with malformed request URI on nginx ### Impact\nThis affects uses who are using nginx ngx_http_auth_request_module with Authelia, it allows a malicious individual who crafts a malformed HTTP request to bypass the authentication mechanism. It additionally could theoretically affect other proxy servers, but all of the ones we officially support except nginx do not allow malformed URI paths.\n\n### Patches\nThe problem is rectified entirely in v4.29.3. As this patch is relatively straightforward we can back port this to any version upon request. Alternatively we are supplying a git patch to 4.25.1 which should be relatively straightforward to apply to any version, the git patches for specific versions can be found below.\n\n<details><summary>Patch for 4.25.1:<\/summary><p>\n\n```patch\nFrom ca22f3d2c44ca7bef043ffbeeb06d6659c1d550f Mon Sep 17 00:00:00 2001\nFrom: James Elliott <james-d-elliott@users.noreply.github.com>\nDate: Wed, 19 May 2021 12:10:13 +1000\nSubject: [PATCH] fix(handlers): verify returns 200 on malformed request\n\nThis is a git patch for commit at tag v4.25.1 to address a potential method to bypass authentication in proxies that forward malformed information to Authelia in the forward auth process. Instead of returning a 200 this ensures that Authelia returns a 401 when this occurs.\n---\n internal\/handlers\/handler_verify.go | 4 +++-\n 1 file changed, 3 insertions(+), 1 deletion(-)\n\ndiff --git a\/internal\/handlers\/handler_verify.go b\/internal\/handlers\/handler_verify.go\nindex 65c064ce..4dd9702d 100644\n--- a\/internal\/handlers\/handler_verify.go\n+++ b\/internal\/handlers\/handler_verify.go\n@@ -396,7 +396,9 @@ func VerifyGet(cfg schema.AuthenticationBackendConfiguration) middlewares.Reques\n \t\ttargetURL, err := getOriginalURL(ctx)\n \n \t\tif err != nil {\n-\t\t\tctx.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err), operationFailedMessage)\n+\t\t\tctx.Logger.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err))\n+\t\t\tctx.ReplyUnauthorized()\n+\n \t\t\treturn\n \t\t}\n \n-- \n2.31.1\n```\n\n<\/p><\/details>\n\n### Workarounds\nThe most relevant workaround is upgrading. **If you need assistance with an upgrade please contact us on [Matrix](https:\/\/riot.im\/app\/#\/room\/#authelia:matrix.org) or [Discord](https:\/\/discord.authelia.com).** Please just let us know you're needing help upgrading to above 4.29.2. \n\nYou can add an block which fails requests that contains a malformed URI in the internal location block. We have crafted one that should work in most instances, it basically checks no chars that are required to be URL-encoded for either the path or the query are in the URI. Basically this regex checks that the characters between the square braces are the only characters in the $request_uri header, if they exist, it returns a HTTP 401 status code. The characters in the regex match are tested to not cause a parsing error that would result in a failure, however they are not exhaustive since query strings seem to not always conform to the RFC.\n\n<details><summary>authelia.conf:<\/summary><p>\n\n```nginx\nlocation \/authelia {\n    internal;\n    # **IMPORTANT**\n    # This block rejects requests with a 401 which contain characters that are unable to be parsed.\n    # It is necessary for security prior to v4.29.3 due to the fact we returned an invalid code in the event of a parser error.\n    # You may comment this section if you're using Authelia v4.29.3 or above. We strongly recommend upgrading.\n    # RFC3986: http:\/\/tools.ietf.org\/html\/rfc3986\n    # Commentary on RFC regarding Query Strings: https:\/\/www.456bereastreet.com\/archive\/201008\/what_characters_are_allowed_unencoded_in_query_strings\/\n    if ($request_uri ~ [^a-zA-Z0-9_+-=\\!@$%&*?~.:#'\\;\\(\\)\\[\\]]) {\n        return 401;\n    }\n\n    # Include the remainder of the block here. \n}\n````\n\n<\/p><\/details>\n\n### Discovery\n\nThis issue was discovered by:\n\nSiemens Energy\nCybersecurity Red Team\n\n- Silas Francisco\n- Ricardo Pesqueira\n\n\n### Identifying active exploitation of the vulnerability\n\nThe following regex should match log entries that are an indication of the vulnerability being exploited:\n```regex\nlevel=error msg=\"Unable to parse target URL: Unable to parse URL (extracted from X-Original-URL header)?.*?: parse.*?net\/url:.*github\\.com\/authelia\/authelia\/internal\/handlers\/handler_verify\\.go\n```\n\nExample log entry ***with*** X-Original-URL configured:\n```log\ntime=\"2021-05-21T16:31:15+10:00\" level=error msg=\"Unable to parse target URL: Unable to parse URL extracted from X-Original-URL header: parse \\\"https:\/\/example.com\/\": net\/url: invalid control character in URL\" method=GET path=\/api\/verify remote_ip=192.168.1.10 stack=\"github.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:65 (*AutheliaCtx).Error\\ngithub.com\/authelia\/authelia\/internal\/handlers\/handler_verify.go:431     VerifyGet.func1\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:50 AutheliaMiddleware.func1.1\\ngithub.com\/fasthttp\/router@v1.3.12\/router.go:414                         (*Router).Handler\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/log_request.go:14      LogRequestMiddleware.func1\\ngithub.com\/valyala\/fasthttp@v1.24.0\/server.go:2219                       (*Server).serveConn\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:223                    (*workerPool).workerFunc\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:195                    (*workerPool).getCh.func1\\nruntime\/asm_amd64.s:1371                                                 goexit\"\n```\n\nExample log entry ***without*** X-Original-URL configured:\n```log\ntime=\"2021-05-21T16:30:17+10:00\" level=error msg=\"Unable to parse target URL: Unable to parse URL https:\/\/example.com\/: parse \\\"https:\/\/example.com\/\": net\/url: invalid control character in URL\" method=GET path=\/api\/verify remote_ip=192.168.1.10 stack=\"github.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:65 (*AutheliaCtx).Error\\ngithub.com\/authelia\/authelia\/internal\/handlers\/handler_verify.go:431     VerifyGet.func1\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/authelia_context.go:50 AutheliaMiddleware.func1.1\\ngithub.com\/fasthttp\/router@v1.3.12\/router.go:414                         (*Router).Handler\\ngithub.com\/authelia\/authelia\/internal\/middlewares\/log_request.go:14      LogRequestMiddleware.func1\\ngithub.com\/valyala\/fasthttp@v1.24.0\/server.go:2219                       (*Server).serveConn\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:223                    (*workerPool).workerFunc\\ngithub.com\/valyala\/fasthttp@v1.24.0\/workerpool.go:195                    (*workerPool).getCh.func1\\nruntime\/asm_amd64.s:1371                                                 goexit\"\n```\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue at [authelia](https:\/\/github.com\/authelia\/authelia\/issues)\n* Email us at [security@authelia.com](mailto:security@authelia.com)",
            "published_date":"2021-12-20",
            "chain_len":1,
            "project":"https:\/\/github.com\/authelia\/authelia",
            "commit_href":"https:\/\/github.com\/authelia\/authelia\/commit\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda",
            "commit_sha":"c62dbd43d6e69ae81530e7c4f8763857f8ff1dda",
            "patch":"SINGLE",
            "chain_ord":"['c62dbd43d6e69ae81530e7c4f8763857f8ff1dda']",
            "before_first_fix_commit":"{'a56cffa129a0fedb830971855ab695a95cf96312'}",
            "last_fix_commit":"c62dbd43d6e69ae81530e7c4f8763857f8ff1dda",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/21\/2021, 12:03:44",
            "message":"fix(handlers): align response status codes for the verify endpoint (#2016)\n\nThis aligns all response status codes on the \/api\/verify endpoint when an error occurs, making it impossible to determine the actual reason for the failure.",
            "author":"James Elliott",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 1, 'total': 4}",
            "files":"{'internal\/handlers\/handler_verify.go': {'additions': 3, 'deletions': 1, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/authelia\/authelia\/raw\/c62dbd43d6e69ae81530e7c4f8763857f8ff1dda\/internal%2Fhandlers%2Fhandler_verify.go', 'patch': '@@ -428,7 +428,9 @@ func VerifyGet(cfg schema.AuthenticationBackendConfiguration) middlewares.Reques\\n \\t\\ttargetURL, err := ctx.GetOriginalURL()\\n \\n \\t\\tif err != nil {\\n-\\t\\t\\tctx.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err), operationFailedMessage)\\n+\\t\\t\\tctx.Logger.Error(fmt.Errorf(\"Unable to parse target URL: %s\", err))\\n+\\t\\t\\tctx.ReplyUnauthorized()\\n+\\n \\t\\t\\treturn\\n \\t\\t}'}}",
            "message_norm":"fix(handlers): align response status codes for the verify endpoint (#2016)\n\nthis aligns all response status codes on the \/api\/verify endpoint when an error occurs, making it impossible to determine the actual reason for the failure.",
            "language":"en",
            "entities":"[('fix(handlers', 'ACTION', ''), ('#2016', 'ISSUE', ''), ('verify', 'ACTION', ''), ('error', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['internal\/handlers\/handler_verify.go'])",
            "num_files":1.0
        },
        {
            "index":1325,
            "vuln_id":"GHSA-9689-rx4v-cqgc",
            "cwe_id":"{'CWE-601'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/concourse\/concourse\/pull\/5350\/commits\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb'}",
            "dataset":"osv",
            "summary":"Open Redirect Pivotal Concourse Release, versions 4.x prior to 4.2.2, login flow allows redirects to untrusted websites. A remote unauthenticated attacker could convince a user to click on a link using the oAuth redirect link with an untrusted website and gain access to that user's access token in Concourse.",
            "published_date":"2022-02-15",
            "chain_len":1,
            "project":"https:\/\/github.com\/concourse\/concourse",
            "commit_href":"https:\/\/github.com\/concourse\/concourse\/pull\/5350\/commits\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb",
            "commit_sha":"38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb",
            "patch":"SINGLE",
            "chain_ord":"['38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb']",
            "before_first_fix_commit":"{'091671e19b3779e439f5ad4a6b4b89aa20a33778'}",
            "last_fix_commit":"38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/20\/2020, 16:32:09",
            "message":"skymarshal: use escaped path for redirect URI\n\nSigned-off-by: Rui Yang <ryang@pivotal.io>",
            "author":"Rui Yang",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'skymarshal\/skyserver\/skyserver.go': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/concourse\/concourse\/raw\/38cb4cc025e5ed28764b4adc363a0bbf41f3c7cb\/skymarshal%2Fskyserver%2Fskyserver.go', 'patch': '@@ -257,7 +257,7 @@ func (s *SkyServer) Redirect(w http.ResponseWriter, r *http.Request, token *oaut\\n \\tparams := redirectURL.Query()\\n \\tparams.Set(\"csrf_token\", csrfToken)\\n \\n-\\thttp.Redirect(w, r, redirectURL.Path+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\\n+\\thttp.Redirect(w, r, redirectURL.EscapedPath()+\"?\"+params.Encode(), http.StatusTemporaryRedirect)\\n }\\n \\n func (s *SkyServer) Token(w http.ResponseWriter, r *http.Request) {'}}",
            "message_norm":"skymarshal: use escaped path for redirect uri\n\nsigned-off-by: rui yang <ryang@pivotal.io>",
            "language":"en",
            "entities":"[('escaped', 'SECWORD', ''), ('ryang@pivotal.io', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['skymarshal\/skyserver\/skyserver.go'])",
            "num_files":1.0
        },
        {
            "index":3228,
            "vuln_id":"GHSA-w5cr-frph-hw7f",
            "cwe_id":"{'CWE-908'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/djkoloski\/rkyv\/commit\/f141b560523a20557db6540576d153010bd18712', 'https:\/\/github.com\/djkoloski\/rkyv\/commit\/9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e'}",
            "dataset":"osv",
            "summary":"Use of uninitialized buffer in rkyv An issue was discovered in the rkyv crate before 0.6.0 for Rust. When an archive is created via serialization, the archive content may contain uninitialized values of certain parts of a struct.",
            "published_date":"2021-08-25",
            "chain_len":2,
            "project":"https:\/\/github.com\/djkoloski\/rkyv",
            "commit_href":"https:\/\/github.com\/djkoloski\/rkyv\/commit\/f141b560523a20557db6540576d153010bd18712",
            "commit_sha":"f141b560523a20557db6540576d153010bd18712",
            "patch":"MULTI",
            "chain_ord":"['f141b560523a20557db6540576d153010bd18712', '9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e']",
            "before_first_fix_commit":"{'f141b560523a20557db6540576d153010bd18712'}",
            "last_fix_commit":"9c65ae9c2c67dd949b5c3aba9b8eba6da802ab7e",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 14:44:41",
            "message":"Zero aligned memory before resolving",
            "author":"David Koloski",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
            "files":"{'rkyv\/src\/ser\/serializers\/std.rs': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rkyv\/rkyv\/raw\/f141b560523a20557db6540576d153010bd18712\/rkyv%2Fsrc%2Fser%2Fserializers%2Fstd.rs', 'patch': '@@ -116,11 +116,11 @@ impl<A: Borrow<AlignedVec> + BorrowMut<AlignedVec>> Serializer for AlignedSerial\\n         let additional = mem::size_of::<T::Archived>();\\n         vec.reserve(additional);\\n         vec.set_len(vec.len() + additional);\\n-        value.resolve(\\n-            pos,\\n-            resolver,\\n-            &mut *vec.as_mut_ptr().add(pos).cast::<mem::MaybeUninit<T::Archived>>()\\n-        );\\n+\\n+        let ptr = vec.as_mut_ptr().add(pos).cast::<mem::MaybeUninit<T::Archived>>();\\n+        core::ptr::write_bytes(ptr, 0, 1);\\n+\\n+        value.resolve(pos, resolver, &mut *ptr);\\n         Ok(pos)\\n     }'}}",
            "message_norm":"zero aligned memory before resolving",
            "language":"en",
            "entities":null,
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['rkyv\/src\/ser\/serializers\/std.rs'])",
            "num_files":1.0
        },
        {
            "index":2084,
            "vuln_id":"GHSA-hjgp-8ffr-hwwr",
            "cwe_id":"{'CWE-311'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/dcodeIO\/ClosureCompiler.js\/commit\/e59848f5975e5b15279c044daf9cff8ff192bae6'}",
            "dataset":"osv",
            "summary":"Downloads Resources over HTTP in closurecompiler Affected versions of `closurecompiler` insecurely download an executable over an unencrypted HTTP connection. \n\nIn scenarios where an attacker has a privileged network position, it is possible to intercept the response and replace the executable with a malicious one, resulting in code execution on the system running `closurecompiler`.\n\n\n## Recommendation\n\nUpdate to version 1.6.1 or later.",
            "published_date":"2019-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/dcodeIO\/ClosureCompiler.js",
            "commit_href":"https:\/\/github.com\/dcodeIO\/ClosureCompiler.js\/commit\/e59848f5975e5b15279c044daf9cff8ff192bae6",
            "commit_sha":"e59848f5975e5b15279c044daf9cff8ff192bae6",
            "patch":"SINGLE",
            "chain_ord":"['e59848f5975e5b15279c044daf9cff8ff192bae6']",
            "before_first_fix_commit":"{'a896952c01f25a5317b6619723fe1ebeabaeb468', '923250af8c94154bdbc48f61230af1adf2543173'}",
            "last_fix_commit":"e59848f5975e5b15279c044daf9cff8ff192bae6",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/01\/2016, 14:20:53",
            "message":"Merge pull request #51 from Greenek\/master\n\nUpdate link to bundled-openjdk-jre",
            "author":"Daniel Wirtz",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 4, 'total': 8}",
            "files":"{'scripts\/configure.js': {'additions': 4, 'deletions': 4, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dcodeIO\/ClosureCompiler.js\/raw\/e59848f5975e5b15279c044daf9cff8ff192bae6\/scripts%2Fconfigure.js', 'patch': '@@ -48,7 +48,7 @@ function platformPostfix() {\\n }\\n \\n \/\/ Bundled JRE download url\\n-var jrePrefix = \"http:\/\/bundled-openjdk-jre.googlecode.com\/files\/OpenJDK-JRE-7u6_24-\";\\n+var jrePrefix = \"https:\/\/storage.googleapis.com\/google-code-archive-downloads\/v2\/code.google.com\/bundled-openjdk-jre\/OpenJDK-JRE-7u6_24-\";\\n var jrePostfix = \".tar.gz\";\\n var jreUrl = jrePrefix+platformPostfix()+jrePostfix;\\n \\n@@ -205,13 +205,13 @@ function download(downloadUrl, filename, callback, ondata) {\\n  * @param {function(?Error)} callback\\n  * @param {function(Object)=} entryCallback\\n  *\/\\n-function unpack(filename, callback, entryCallback) {   \\n+function unpack(filename, callback, entryCallback) {\\n     var input = fs.createReadStream(filename, { flags: \\'r\\', encoding: null }),\\n         files = {},\\n         dir = path.dirname(filename),\\n         returned = false,\\n         to = null;\\n-    \\n+\\n     \/\/ Finishs the unpack if all files are done\\n     function maybeFinish() {\\n         if (to !== null) clearTimeout(to);\\n@@ -230,7 +230,7 @@ function unpack(filename, callback, entryCallback) {\\n             }\\n         }, 1000);\\n     }\\n-    \\n+\\n     input.pipe(zlib.createGunzip()).pipe(tar.Parse()).on(\"entry\", function(entry) {\\n         if (entryCallback) entryCallback(entry);\\n         if (entry[\"type\"] == \\'File\\') {'}}",
            "message_norm":"merge pull request #51 from greenek\/master\n\nupdate link to bundled-openjdk-jre",
            "language":"no",
            "entities":"[('#51', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['scripts\/configure.js'])",
            "num_files":1.0
        },
        {
            "index":920,
            "vuln_id":"GHSA-7257-96vg-qf6x",
            "cwe_id":"{'CWE-74', 'CWE-94'}",
            "score":8.5,
            "chain":"{'https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\/commits\/e269ea0d3bc88417163c18431b1df38a9be92bfc'}",
            "dataset":"osv",
            "summary":"Remote Code Execution in Red Discord Bot ### Impact\nA RCE exploit has been discovered in the Streams module: this exploit allows Discord users with specifically crafted \"going live\" messages to inject code into the Streams module's going live message. By abusing this exploit, it's possible to perform destructive actions and\/or access sensitive information.\n\n### Patches\nThis critical exploit has been fixed on version ``3.3.12`` & ``3.4``.\n\n### Workarounds\nUnloading the Streams module with ``unload streams`` can render this exploit not accessible. We still highly recommend updating to ``3.3.12`` or ``3.4`` to completely patch this issue.\n\n### References\n* https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [Cog-Creators\/Red-DiscordBot](https:\/\/github.com\/Cog-Creators\/Red-DiscordBot)\n* Over on our [Discord server](https:\/\/discord.gg\/red)",
            "published_date":"2020-08-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/Cog-Creators\/Red-DiscordBot",
            "commit_href":"https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/pull\/4183\/commits\/e269ea0d3bc88417163c18431b1df38a9be92bfc",
            "commit_sha":"e269ea0d3bc88417163c18431b1df38a9be92bfc",
            "patch":"SINGLE",
            "chain_ord":"['e269ea0d3bc88417163c18431b1df38a9be92bfc']",
            "before_first_fix_commit":"{'9798538438ceb37c0592aa358f6f0c5784878d71'}",
            "last_fix_commit":"e269ea0d3bc88417163c18431b1df38a9be92bfc",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/11\/2020, 22:40:06",
            "message":"Added consume all to streams.",
            "author":"Kowlin",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 9, 'total': 22}",
            "files":"{'redbot\/cogs\/streams\/streams.py': {'additions': 13, 'deletions': 9, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/Cog-Creators\/Red-DiscordBot\/raw\/e269ea0d3bc88417163c18431b1df38a9be92bfc\/redbot%2Fcogs%2Fstreams%2Fstreams.py', 'patch': '@@ -497,14 +497,13 @@ async def message(self, ctx: commands.Context):\\n \\n     @message.command(name=\"mention\")\\n     @commands.guild_only()\\n-    async def with_mention(self, ctx: commands.Context, message: str = None):\\n+    async def with_mention(self, ctx: commands.Context, *, message: str = None):\\n         \"\"\"Set stream alert message when mentions are enabled.\\n \\n         Use `{mention}` in the message to insert the selected mentions.\\n+        Use `{stream}` in the message to insert the channel or user name.\\n \\n-        Use `{stream.name}` in the message to insert the channel or user name.\\n-\\n-        For example: `[p]streamset message mention \"{mention}, {stream.name} is live!\"`\\n+        For example: `[p]streamset message mention \"{mention}, {stream} is live!\"`\\n         \"\"\"\\n         if message is not None:\\n             guild = ctx.guild\\n@@ -515,12 +514,12 @@ async def with_mention(self, ctx: commands.Context, message: str = None):\\n \\n     @message.command(name=\"nomention\")\\n     @commands.guild_only()\\n-    async def without_mention(self, ctx: commands.Context, message: str = None):\\n+    async def without_mention(self, ctx: commands.Context, *, message: str = None):\\n         \"\"\"Set stream alert message when mentions are disabled.\\n \\n-        Use `{stream.name}` in the message to insert the channel or user name.\\n+        Use `{stream}` in the message to insert the channel or user name.\\n \\n-        For example: `[p]streamset message nomention \"{stream.name} is live!\"`\\n+        For example: `[p]streamset message nomention \"{stream} is live!\"`\\n         \"\"\"\\n         if message is not None:\\n             guild = ctx.guild\\n@@ -720,7 +719,10 @@ async def check_streams(self):\\n                                 channel.guild\\n                             ).live_message_mention()\\n                             if alert_msg:\\n-                                content = alert_msg.format(mention=mention_str, stream=stream)\\n+                                content = alert_msg  # Stop bad things from happening here...\\n+                                content = content.replace(\"{stream.name}\", str(stream.name))  # Backwards compatability\\n+                                content = content.replace(\"{stream}\", str(stream.name))\\n+                                content = content.replace(\"{mention}\", mention_str)\\n                             else:\\n                                 content = _(\"{mention}, {stream} is live!\").format(\\n                                     mention=mention_str,\\n@@ -733,7 +735,9 @@ async def check_streams(self):\\n                                 channel.guild\\n                             ).live_message_nomention()\\n                             if alert_msg:\\n-                                content = alert_msg.format(stream=stream)\\n+                                content = alert_msg  # Stop bad things from happening here...\\n+                                content = content.replace(\"{stream.name}\", str(stream.name))  # Backwards compatability\\n+                                content = content.replace(\"{stream}\", str(stream.name))\\n                             else:\\n                                 content = _(\"{stream} is live!\").format(\\n                                     stream=escape('}}",
            "message_norm":"added consume all to streams.",
            "language":"en",
            "entities":"[('added', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['redbot\/cogs\/streams\/streams.py'])",
            "num_files":1.0
        },
        {
            "index":2543,
            "vuln_id":"GHSA-p9m8-27x8-rg87",
            "cwe_id":"{'CWE-94'}",
            "score":10.0,
            "chain":"{'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/cfd2880f80e62ea74b92fa83474c2aabdb9899da', 'https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/d6707503ec2f20947f79e38f861dba93b39df9da'}",
            "dataset":"osv",
            "summary":"Critical vulnerability found in cron-utils ### Impact\nA Template Injection was identified in cron-utils enabling attackers to inject arbitrary Java EL expressions, leading to unauthenticated Remote Code Execution (RCE) vulnerability. Versions up to 9.1.2 are susceptible to this vulnerability. Please note, that only projects using the @Cron annotation to validate untrusted Cron expressions are affected.\n\n### Patches\nThe issue was patched and a new version was released. Please upgrade to version 9.1.6.\n\n### Workarounds\nThere are no known workarounds up to this moment.\n\n### References\nA description of the issue is provided in [issue 461](https:\/\/github.com\/jmrozanec\/cron-utils\/issues\/461)\n\n### For more information\nIf you have any questions or comments about this advisory:\n\nOpen an issue in the [cron-utils Github repository](https:\/\/github.com\/jmrozanec\/cron-utils)",
            "published_date":"2021-11-15",
            "chain_len":2,
            "project":"https:\/\/github.com\/jmrozanec\/cron-utils",
            "commit_href":"https:\/\/github.com\/jmrozanec\/cron-utils\/commit\/d6707503ec2f20947f79e38f861dba93b39df9da",
            "commit_sha":"d6707503ec2f20947f79e38f861dba93b39df9da",
            "patch":"MULTI",
            "chain_ord":"['d6707503ec2f20947f79e38f861dba93b39df9da', 'cfd2880f80e62ea74b92fa83474c2aabdb9899da']",
            "before_first_fix_commit":"{'9c93c17b8107e58073443a045e22274467b88aae', 'd6707503ec2f20947f79e38f861dba93b39df9da'}",
            "last_fix_commit":"cfd2880f80e62ea74b92fa83474c2aabdb9899da",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/30\/2021, 13:11:58",
            "message":"Merge pull request #493 from pwntester\/patch-1\n\nPrevent arbitrary EL expression evaluation",
            "author":"jmrozanec",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/main\/java\/com\/cronutils\/validation\/CronValidator.java': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jmrozanec\/cron-utils\/raw\/d6707503ec2f20947f79e38f861dba93b39df9da\/src%2Fmain%2Fjava%2Fcom%2Fcronutils%2Fvalidation%2FCronValidator.java', 'patch': '@@ -30,7 +30,7 @@ public boolean isValid(String value, ConstraintValidatorContext context) {\\n             return true;\\n         } catch (IllegalArgumentException e) {\\n             context.disableDefaultConstraintViolation();\\n-            context.buildConstraintViolationWithTemplate(e.getMessage()).addConstraintViolation();\\n+            context.buildConstraintViolationWithTemplate(\"Error parsing the Cron expression\").addConstraintViolation();\\n             return false;\\n         }\\n     }'}}",
            "message_norm":"merge pull request #493 from pwntester\/patch-1\n\nprevent arbitrary el expression evaluation",
            "language":"en",
            "entities":"[('#493', 'ISSUE', ''), ('prevent', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/cronutils\/validation\/CronValidator.java'])",
            "num_files":1.0
        },
        {
            "index":1281,
            "vuln_id":"GHSA-8x44-pwr2-rgc6",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/pimcore\/pimcore\/commit\/832c34aeb9f21f213295a0c28377132df996352a'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in pimcore Pimcore settings module is vulnerable to stored cross site scripting",
            "published_date":"2022-01-28",
            "chain_len":1,
            "project":"https:\/\/github.com\/pimcore\/pimcore",
            "commit_href":"https:\/\/github.com\/pimcore\/pimcore\/commit\/832c34aeb9f21f213295a0c28377132df996352a",
            "commit_sha":"832c34aeb9f21f213295a0c28377132df996352a",
            "patch":"SINGLE",
            "chain_ord":"['832c34aeb9f21f213295a0c28377132df996352a']",
            "before_first_fix_commit":"{'e94591dd8f5006452667a04c93e4422b05234eea'}",
            "last_fix_commit":"832c34aeb9f21f213295a0c28377132df996352a",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/26\/2022, 13:08:27",
            "message":"added escape function to the icon field",
            "author":"Jia Jia Ji",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/pimcore\/pimcore\/raw\/832c34aeb9f21f213295a0c28377132df996352a\/bundles%2FAdminBundle%2FController%2FAdmin%2FDataObject%2FClassController.php', 'patch': \"@@ -119,7 +119,7 @@ public function getTreeAction(Request $request)\\n                 'id' => $class->getId(),\\n                 'text' => $text,\\n                 'leaf' => true,\\n-                'icon' => $class->getIcon() ? $class->getIcon() : $defaultIcon,\\n+                'icon' => $class->getIcon() ? htmlspecialchars($class->getIcon()) : $defaultIcon,\\n                 'cls' => 'pimcore_class_icon',\\n                 'propertyVisibility' => $class->getPropertyVisibility(),\\n                 'enableGridLocking' => $class->isEnableGridLocking(),\"}}",
            "message_norm":"added escape function to the icon field",
            "language":"en",
            "entities":"[('added', 'ACTION', ''), ('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bundles\/AdminBundle\/Controller\/Admin\/DataObject\/ClassController.php'])",
            "num_files":1.0
        },
        {
            "index":2379,
            "vuln_id":"GHSA-m87f-9fvv-2mgg",
            "cwe_id":"{'CWE-502'}",
            "score":8.4,
            "chain":"{'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879', 'https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725'}",
            "dataset":"osv",
            "summary":"Deserialization of Untrusted Data in parlai ### Impact\nDue to use of unsafe YAML deserialization logic, an attacker with the ability to modify local YAML configuration files could provide malicious input, resulting in remote code execution or similar risks.\n\n### Patches\nThe issue can be patched by upgrading to v1.1.0 or later. It can also be patched by replacing YAML deserialization with equivalent safe_load calls.\n\n### References\n\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/507d066ef432ea27d3e201da08009872a2f37725\n- https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879\n- https:\/\/anon-artist.github.io\/blogs\/blog3.html",
            "published_date":"2021-09-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/facebookresearch\/ParlAI",
            "commit_href":"https:\/\/github.com\/facebookresearch\/ParlAI\/commit\/4374fa2aba383db6526ab36e939eb1cf8ef99879",
            "commit_sha":"4374fa2aba383db6526ab36e939eb1cf8ef99879",
            "patch":"MULTI",
            "chain_ord":"['507d066ef432ea27d3e201da08009872a2f37725', '4374fa2aba383db6526ab36e939eb1cf8ef99879']",
            "before_first_fix_commit":"{'15fbf55f32e64722c452c907425e10fdb977f62e'}",
            "last_fix_commit":"4374fa2aba383db6526ab36e939eb1cf8ef99879",
            "chain_ord_pos":2.0,
            "commit_datetime":"02\/03\/2021, 17:52:21",
            "message":"Update model_chat_blueprint.py (#3429)",
            "author":"Abhiram V",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/facebookresearch\/ParlAI\/raw\/4374fa2aba383db6526ab36e939eb1cf8ef99879\/parlai%2Fcrowdsourcing%2Ftasks%2Fmodel_chat%2Fmodel_chat_blueprint.py', 'patch': '@@ -453,7 +453,7 @@ def __init__(\\n \\n     def _get_shared_models(self, args: \"DictConfig\") -> Dict[str, dict]:\\n         with open(args.blueprint.model_opt_path) as f:\\n-            all_model_opts = yaml.load(f.read())\\n+            all_model_opts = yaml.safe_load(f.read())\\n         active_model_opts = {\\n             model: opt\\n             for model, opt in all_model_opts.items()\\n@@ -557,5 +557,5 @@ def __init__(\\n \\n     def _get_shared_models(self, args: \"DictConfig\") -> Dict[str, dict]:\\n         with open(args.blueprint.model_opt_path) as f:\\n-            model_opts = yaml.load(f.read())\\n+            model_opts = yaml.safe_load(f.read())\\n         return TurkLikeAgent.get_bot_agents(args=args, model_opts=model_opts)'}}",
            "message_norm":"update model_chat_blueprint.py (#3429)",
            "language":"en",
            "entities":"[('#3429', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['parlai\/crowdsourcing\/tasks\/model_chat\/model_chat_blueprint.py'])",
            "num_files":1.0
        },
        {
            "index":12,
            "vuln_id":"GHSA-23fp-fmrv-f5px",
            "cwe_id":"{'CWE-400'}",
            "score":4.9,
            "chain":"{'https:\/\/github.com\/strapi\/strapi\/commit\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362'}",
            "dataset":"osv",
            "summary":"Uncontrolled Resource Consumption in strapi A denial of service exists in strapi v3.0.0-beta.18.3 and earlier that can be abused in the admin console using admin rights can lead to arbitrary restart of the application.",
            "published_date":"2021-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/strapi\/strapi",
            "commit_href":"https:\/\/github.com\/strapi\/strapi\/commit\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362",
            "commit_sha":"c0c191c08f05fe10d7a6b1bf9475c1a651a89362",
            "patch":"SINGLE",
            "chain_ord":"['c0c191c08f05fe10d7a6b1bf9475c1a651a89362']",
            "before_first_fix_commit":"{'7e3f7ee2de9eecd0bc098d7b77940b64f48b3a96'}",
            "last_fix_commit":"c0c191c08f05fe10d7a6b1bf9475c1a651a89362",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/07\/2020, 13:15:16",
            "message":"chore(admin): Improve plugin name validator in install\/uninstall plugin",
            "author":"Alexandre Bodin",
            "comments":null,
            "stats":"{'additions': 13, 'deletions': 2, 'total': 15}",
            "files":"{'packages\/strapi-admin\/controllers\/Admin.js': {'additions': 13, 'deletions': 2, 'changes': 15, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/strapi\/strapi\/raw\/c0c191c08f05fe10d7a6b1bf9475c1a651a89362\/packages%2Fstrapi-admin%2Fcontrollers%2FAdmin.js', 'patch': '@@ -7,6 +7,17 @@ const formatError = error => [\\n   { messages: [{ id: error.id, message: error.message, field: error.field }] },\\n ];\\n \\n+const PLUGIN_NAME_REGEX = \/^[A-Za-z][A-Za-z0-9-_]+$\/;\\n+\\n+\/**\\n+ * Validates a plugin name format\\n+ *\/\\n+const isValidPluginName = plugin => {\\n+  return (\\n+    _.isString(plugin) && !_.isEmpty(plugin) && PLUGIN_NAME_REGEX.test(plugin)\\n+  );\\n+};\\n+\\n \/**\\n  * A set of functions called \"actions\" for `Admin`\\n  *\/\\n@@ -67,7 +78,7 @@ module.exports = {\\n     try {\\n       const { plugin } = ctx.request.body;\\n \\n-      if (!\/^[A-Za-z0-9_-]+$\/.test(plugin)) {\\n+      if (!isValidPluginName(plugin)) {\\n         return ctx.badRequest(\\'Invalid plugin name\\');\\n       }\\n \\n@@ -107,7 +118,7 @@ module.exports = {\\n     try {\\n       const { plugin } = ctx.params;\\n \\n-      if (!\/^[A-Za-z0-9_-]+$\/.test(plugin)) {\\n+      if (!isValidPluginName(plugin)) {\\n         return ctx.badRequest(\\'Invalid plugin name\\');\\n       }'}}",
            "message_norm":"chore(admin): improve plugin name validator in install\/uninstall plugin",
            "language":"it",
            "entities":"[('chore(admin', 'SECWORD', ''), ('improve', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/strapi-admin\/controllers\/Admin.js'])",
            "num_files":1.0
        },
        {
            "index":3279,
            "vuln_id":"GHSA-wh98-p28r-vrc9",
            "cwe_id":"{'CWE-200'}",
            "score":7.4,
            "chain":"{'https:\/\/github.com\/rails\/rails\/commit\/f9a2ad03943d5c2ba54e1d45f155442b519c75da'}",
            "dataset":"osv",
            "summary":"Exposure of information in Action Pack ### Impact\n\nUnder certain circumstances response bodies will not be closed, for example a [bug in a webserver](https:\/\/github.com\/puma\/puma\/pull\/2812) or a bug in a Rack middleware.  In the event a response is *not* notified of a `close`, `ActionDispatch::Executor` will not know to reset thread local state for the next request.  This can lead to data being leaked to subsequent requests, especially when interacting with `ActiveSupport::CurrentAttributes`.\n\nUpgrading to the FIXED versions of Rails will ensure mitigation of this issue even in the context of a buggy webserver or middleware implementation.\n\n### Patches\n\nThis has been fixed in Rails 7.0.2.2, 6.1.4.6, 6.0.4.6, and 5.2.6.2.\n\n### Workarounds\n\nUpgrading is highly recommended, but to work around this problem the following middleware can be used:\n\n```ruby\nclass GuardedExecutor < ActionDispatch::Executor\n  def call(env)\n    ensure_completed!\n    super\n  end\n\n  private\n\n    def ensure_completed!\n      @executor.new.complete! if @executor.active?\n    end\nend\n\n# Ensure the guard is inserted before ActionDispatch::Executor\nRails.application.configure do\n  config.middleware.swap ActionDispatch::Executor, GuardedExecutor, executor\nend\n```",
            "published_date":"2022-02-11",
            "chain_len":1,
            "project":"https:\/\/github.com\/rails\/rails",
            "commit_href":"https:\/\/github.com\/rails\/rails\/commit\/f9a2ad03943d5c2ba54e1d45f155442b519c75da",
            "commit_sha":"f9a2ad03943d5c2ba54e1d45f155442b519c75da",
            "patch":"SINGLE",
            "chain_ord":"['f9a2ad03943d5c2ba54e1d45f155442b519c75da']",
            "before_first_fix_commit":"{'761a2e25520566d932c41c740b8a5c513d839de8'}",
            "last_fix_commit":"f9a2ad03943d5c2ba54e1d45f155442b519c75da",
            "chain_ord_pos":1.0,
            "commit_datetime":"02\/11\/2022, 19:23:01",
            "message":"Fix reloader to work with new Executor signature\n\nThis is a follow up to [CVE-2022-23633].",
            "author":"Aaron Patterson",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'activesupport\/lib\/active_support\/reloader.rb': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/rails\/rails\/raw\/f9a2ad03943d5c2ba54e1d45f155442b519c75da\/activesupport%2Flib%2Factive_support%2Freloader.rb', 'patch': '@@ -58,7 +58,7 @@ def self.reload!\\n       prepare!\\n     end\\n \\n-    def self.run! # :nodoc:\\n+    def self.run!(reset: false) # :nodoc:\\n       if check!\\n         super\\n       else'}}",
            "message_norm":"fix reloader to work with new executor signature\n\nthis is a follow up to [cve-2022-23633].",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('signature', 'SECWORD', ''), ('cve-2022-23633', 'VULNID', 'CVE')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['activesupport\/lib\/active_support\/reloader.rb'])",
            "num_files":1.0
        },
        {
            "index":314,
            "vuln_id":"GHSA-3v6h-hqm4-2rg6",
            "cwe_id":"{'CWE-22'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/cthackers\/adm-zip\/commit\/62f64004fefb894c523a7143e8a88ebe6c84df25'}",
            "dataset":"osv",
            "summary":"Arbitrary File Write in adm-zip Versions of `adm-zip` before 0.4.9 are vulnerable to arbitrary file write when used to extract a specifically crafted archive that contains path traversal filenames (`..\/..\/file.txt` for example).\n\n\n## Recommendation\n\nUpdate to version 0.4.9 or later.",
            "published_date":"2018-07-27",
            "chain_len":1,
            "project":"https:\/\/github.com\/cthackers\/adm-zip",
            "commit_href":"https:\/\/github.com\/cthackers\/adm-zip\/commit\/62f64004fefb894c523a7143e8a88ebe6c84df25",
            "commit_sha":"62f64004fefb894c523a7143e8a88ebe6c84df25",
            "patch":"SINGLE",
            "chain_ord":"['62f64004fefb894c523a7143e8a88ebe6c84df25']",
            "before_first_fix_commit":"{'e116bc18df51e4e50c493cede82ae7696954b511', '6f4dfeb9a2166e93207443879988f97d88a37cde'}",
            "last_fix_commit":"62f64004fefb894c523a7143e8a88ebe6c84df25",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/23\/2018, 07:20:56",
            "message":"Merge pull request #212 from aviadatsnyk\/master\n\nfix: prevent extracting archived files outside of target path.  Credit to Snyk Security Research Team for disclosure and fixing the issue.",
            "author":"The Brain",
            "comments":"{'com_1': {'author': 'Shubham-9798', 'datetime': '08\/27\/2018, 04:25:44', 'body': 'adding adm-zip'}}",
            "stats":"{'additions': 11, 'deletions': 0, 'total': 11}",
            "files":"{'adm-zip.js': {'additions': 11, 'deletions': 0, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/cthackers\/adm-zip\/raw\/62f64004fefb894c523a7143e8a88ebe6c84df25\/adm-zip.js', 'patch': '@@ -354,6 +354,9 @@ module.exports = function(\/*String*\/input) {\\n \\n \\n             var target = pth.resolve(targetPath, maintainEntryPath ? entryName : pth.basename(entryName));\\n+            if(!target.startsWith(targetPath)) {\\n+                throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;\\n+            }\\n \\n             if (item.isDirectory) {\\n                 target = pth.resolve(target, \"..\");\\n@@ -429,6 +432,10 @@ module.exports = function(\/*String*\/input) {\\n             _zip.entries.forEach(function(entry) {\\n                 entryName = entry.entryName.toString();\\n \\n+                if(!pth.resolve(targetPath, entryName).startsWith(targetPath)) {\\n+                    throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;\\n+                }\\n+\\n                 if(isWin){\\n                     entryName = escapeFileName(entryName)\\n                 }\\n@@ -471,6 +478,10 @@ module.exports = function(\/*String*\/input) {\\n                     entryName = escapeFileName(entryName)\\n                 }\\n \\n+                if(!pth.resolve(targetPath, entryName).startsWith(targetPath)) {\\n+                  throw Utils.Errors.INVALID_FILENAME + \": \" + entryName;\\n+                }\\n+\\n                 if (entry.isDirectory) {\\n                     Utils.makeDir(pth.resolve(targetPath, entryName));\\n                     if(--i == 0)'}}",
            "message_norm":"merge pull request #212 from aviadatsnyk\/master\n\nfix: prevent extracting archived files outside of target path.  credit to snyk security research team for disclosure and fixing the issue.",
            "language":"en",
            "entities":"[('#212', 'ISSUE', ''), ('prevent', 'ACTION', ''), ('security', 'SECWORD', ''), ('disclosure', 'SECWORD', ''), ('fixing', 'ACTION', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['adm-zip.js'])",
            "num_files":1.0
        },
        {
            "index":2075,
            "vuln_id":"GHSA-hhvc-g5hv-48c6",
            "cwe_id":"{'CWE-471'}",
            "score":4.4,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7'}",
            "dataset":"osv",
            "summary":"Write to immutable memory region in TensorFlow ### Impact\nThe `tf.raw_ops.ImmutableConst` operation returns a constant tensor created from a memory mapped file which is assumed immutable. However, if the type of the tensor is not an integral type, the operation crashes the Python interpreter as it tries to write to the memory area:\n\n```python\n>>> import tensorflow as tf\n>>> with open('\/tmp\/test.txt','w') as f: f.write('a'*128)\n>>> tf.raw_ops.ImmutableConst(dtype=tf.string,shape=2,\n                              memory_region_name='\/tmp\/test.txt')\n```\n\nIf the file is too small, TensorFlow properly returns an error as the memory area has fewer bytes than what is needed for the tensor it creates. However, as soon as there are enough bytes, the above snippet causes a segmentation fault.\n\nThis is because the alocator used to return the buffer data is not marked as returning an opaque handle since the [needed virtual method](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7\/tensorflow\/core\/framework\/typed_allocator.h#L78-L85) is [not overriden](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/acdf3c04fcfa767ae8d109b9e1f727ef050dba4d\/tensorflow\/core\/kernels\/immutable_constant_op.cc).\n\n### Patches\nWe have patched the issue in GitHub commit [c1e1fc899ad5f8c725dcbb6470069890b5060bc7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7) and will release TensorFlow 2.4.0 containing the patch. TensorFlow nightly packages after this commit will also have the issue resolved.\n\nSince this issue also impacts TF versions before 2.4, we will patch all releases between 1.15 and 2.3 inclusive.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2020-12-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7",
            "commit_sha":"c1e1fc899ad5f8c725dcbb6470069890b5060bc7",
            "patch":"SINGLE",
            "chain_ord":"['c1e1fc899ad5f8c725dcbb6470069890b5060bc7']",
            "before_first_fix_commit":"{'acdf3c04fcfa767ae8d109b9e1f727ef050dba4d'}",
            "last_fix_commit":"c1e1fc899ad5f8c725dcbb6470069890b5060bc7",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/05\/2020, 01:06:23",
            "message":"Mark `MemmappedTensorAllocator` as returning opaque handle.\n\nThis allocator is used for `ImmutableConstantOp` and it returns a handle to the contents of a memory mapped file which is supposed to represent a tensor.\n\nFor tensors of complex types (resources, variables and strings), allocators which are not marked as returning opaque handles will call placement new to initialize each element. This means writing to the buffer. However, in our case, the buffer is immutable and already contains the tensor data. Hence, writing to it is both destructive and causes a crash.\n\nPiperOrigin-RevId: 345786451\nChange-Id: I46369c50fa60b3431709ffe068a728d3061f49c4",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/core\/kernels\/immutable_constant_op.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/c1e1fc899ad5f8c725dcbb6470069890b5060bc7\/tensorflow%2Fcore%2Fkernels%2Fimmutable_constant_op.cc', 'patch': \"@@ -62,6 +62,12 @@ class MemmappedTensorAllocator : public Allocator {\\n \\n   void set_delete_on_deallocate() { delete_on_deallocate_ = true; }\\n \\n+  \/\/ Make sure tensors or complex types (strings, variants, resources) don't get\\n+  \/\/ their constructor called via a placement new since that would require\\n+  \/\/ writing to immutable data.\\n+  \/\/ See also: tensorflow\/core\/framework\/typed_allocator.h\\n+  bool AllocatesOpaqueHandle() const override { return true; }\\n+\\n  private:\\n   std::unique_ptr<ReadOnlyMemoryRegion> memory_region_;\\n   \/\/ If there is an error during allocation we keep it in this status.\"}}",
            "message_norm":"mark `memmappedtensorallocator` as returning opaque handle.\n\nthis allocator is used for `immutableconstantop` and it returns a handle to the contents of a memory mapped file which is supposed to represent a tensor.\n\nfor tensors of complex types (resources, variables and strings), allocators which are not marked as returning opaque handles will call placement new to initialize each element. this means writing to the buffer. however, in our case, the buffer is immutable and already contains the tensor data. hence, writing to it is both destructive and causes a crash.\n\npiperorigin-revid: 345786451\nchange-id: i46369c50fa60b3431709ffe068a728d3061f49c4",
            "language":"en",
            "entities":"[('initialize', 'SECWORD', ''), ('345786451', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/immutable_constant_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1344,
            "vuln_id":"GHSA-98p5-x8x4-c9m5",
            "cwe_id":"{'CWE-190'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f19be71717c497723ba0cea0379e84f061a75e01', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4'}",
            "dataset":"osv",
            "summary":"Integer overflow in TFLite ### Impact \nAn attacker can craft a TFLite model that would cause an integer overflow [in embedding lookup operations](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/ca6f96b62ad84207fbec580404eaa7dd7403a550\/tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc#L179-L189):\n\n```cc\n  int embedding_size = 1;\n  int lookup_size = 1;\n  for (int i = 0; i < lookup_rank - 1; i++, k++) {\n    const int dim = dense_shape->data.i32[i];\n    lookup_size *= dim;\n    output_shape->data[k] = dim;\n  }\n  for (int i = 1; i < embedding_rank; i++, k++) {\n    const int dim = SizeOfDimension(value, i);\n    embedding_size *= dim;\n    output_shape->data[k] = dim;\n  } \n```\n\nBoth `embedding_size` and `lookup_size` are products of values provided by the user. Hence, a malicious user could trigger overflows in the multiplication.\n\nIn certain scenarios, this can then result in heap OOB read\/write.\n  \n### Patches\nWe have patched the issue in GitHub commits [f19be71717c497723ba0cea0379e84f061a75e01](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/f19be71717c497723ba0cea0379e84f061a75e01), [1de49725a5fc4e48f1a3b902ec3599ee99283043](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/1de49725a5fc4e48f1a3b902ec3599ee99283043) and [a4e401da71458d253b05e41f28637b65baf64be4](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4).\n\nThe fix will be included in TensorFlow 2.8.0. We will also cherrypick this commit on TensorFlow 2.7.1, TensorFlow 2.6.3, and TensorFlow 2.5.3, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Wang Xuan of Qihoo 360 AIVul Team.",
            "published_date":"2022-02-09",
            "chain_len":3,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a4e401da71458d253b05e41f28637b65baf64be4",
            "commit_sha":"a4e401da71458d253b05e41f28637b65baf64be4",
            "patch":"MULTI",
            "chain_ord":"['f19be71717c497723ba0cea0379e84f061a75e01', '1de49725a5fc4e48f1a3b902ec3599ee99283043', 'a4e401da71458d253b05e41f28637b65baf64be4']",
            "before_first_fix_commit":"{'f435ae9dee673e83504618b77e1be8cddda73e74'}",
            "last_fix_commit":"a4e401da71458d253b05e41f28637b65baf64be4",
            "chain_ord_pos":3.0,
            "commit_datetime":"12\/21\/2021, 21:06:51",
            "message":"Prevent segfault in `embedding_lookup_sparse.cc`\n\nPrevious fixes missed one additional case.\n\nPiperOrigin-RevId: 417676944\nChange-Id: I8ab412155cf9b1e897448a6611d209eaa7ca9e66",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 0, 'total': 6}",
            "files":"{'tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc': {'additions': 6, 'deletions': 0, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a4e401da71458d253b05e41f28637b65baf64be4\/tensorflow%2Flite%2Fkernels%2Fembedding_lookup_sparse.cc', 'patch': '@@ -159,6 +159,7 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 3, &weights));\\n   const TfLiteTensor* value;\\n   TF_LITE_ENSURE_OK(context, GetInputSafe(context, node, 4, &value));\\n+  const size_t values_size = NumElements(value);\\n \\n   const int lookup_rank = SizeOfDimension(indices, 1);\\n   const int embedding_rank = NumDimensions(value);\\n@@ -253,6 +254,11 @@ TfLiteStatus Eval(TfLiteContext* context, TfLiteNode* node) {\\n     current_squares_weight += w * w;\\n     current_total_weight += w;\\n     for (int k = 0; k < embedding_size; k++) {\\n+      \/\/ only index if indices are valid\\n+      if (current_output_offset + k < 0) continue;\\n+      if (current_output_offset + k >= output_size) continue;\\n+      if (example_embedding_offset + k < 0) continue;\\n+      if (example_embedding_offset + k >= values_size) continue;\\n       output_ptr[current_output_offset + k] +=\\n           value_ptr[example_embedding_offset + k] * w;\\n     }'}}",
            "message_norm":"prevent segfault in `embedding_lookup_sparse.cc`\n\nprevious fixes missed one additional case.\n\npiperorigin-revid: 417676944\nchange-id: i8ab412155cf9b1e897448a6611d209eaa7ca9e66",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('segfault', 'SECWORD', ''), ('417676944', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/embedding_lookup_sparse.cc'])",
            "num_files":1.0
        },
        {
            "index":487,
            "vuln_id":"GHSA-4rq4-32rv-6wp6",
            "cwe_id":"{'CWE-269'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/shelljs\/shelljs\/commit\/d919d22dd6de385edaa9d90313075a77f74b338c'}",
            "dataset":"osv",
            "summary":"Improper Privilege Management in shelljs shelljs is vulnerable to Improper Privilege Management",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/shelljs\/shelljs",
            "commit_href":"https:\/\/github.com\/shelljs\/shelljs\/commit\/d919d22dd6de385edaa9d90313075a77f74b338c",
            "commit_sha":"d919d22dd6de385edaa9d90313075a77f74b338c",
            "patch":"SINGLE",
            "chain_ord":"['d919d22dd6de385edaa9d90313075a77f74b338c']",
            "before_first_fix_commit":"{'fcf1651be9a3bb8e20ba1fd24b8a91f369829c53'}",
            "last_fix_commit":"d919d22dd6de385edaa9d90313075a77f74b338c",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/07\/2022, 05:14:23",
            "message":"fix(exec): lockdown file permissions (#1060)\n\nThis locks down file permissions used by the internal implementation of\r\n`shell.exec()`.\r\n\r\nIssue #1058\r\nTested manually using the documented scenarios",
            "author":"Nate Fischer",
            "comments":null,
            "stats":"{'additions': 19, 'deletions': 1, 'total': 20}",
            "files":"{'src\/exec.js': {'additions': 19, 'deletions': 1, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/shelljs\/shelljs\/raw\/d919d22dd6de385edaa9d90313075a77f74b338c\/src%2Fexec.js', 'patch': \"@@ -48,7 +48,24 @@ function execSync(cmd, opts, pipe) {\\n     stderrFile: stderrFile,\\n   };\\n \\n-  fs.writeFileSync(paramsFile, JSON.stringify(paramsToSerialize), 'utf8');\\n+  \/\/ Create the files and ensure these are locked down (for read and write) to\\n+  \/\/ the current user. The main concerns here are:\\n+  \/\/\\n+  \/\/ * If we execute a command which prints sensitive output, then\\n+  \/\/   stdoutFile\/stderrFile must not be readable by other users.\\n+  \/\/ * paramsFile must not be readable by other users, or else they can read it\\n+  \/\/   to figure out the path for stdoutFile\/stderrFile and create these first\\n+  \/\/   (locked down to their own access), which will crash exec() when it tries\\n+  \/\/   to write to the files.\\n+  function writeFileLockedDown(filePath, data) {\\n+    fs.writeFileSync(filePath, data, {\\n+      encoding: 'utf8',\\n+      mode: parseInt('600', 8),\\n+    });\\n+  }\\n+  writeFileLockedDown(stdoutFile, '');\\n+  writeFileLockedDown(stderrFile, '');\\n+  writeFileLockedDown(paramsFile, JSON.stringify(paramsToSerialize));\\n \\n   var execArgs = [\\n     path.join(__dirname, 'exec-child.js'),\\n@@ -91,6 +108,7 @@ function execSync(cmd, opts, pipe) {\\n   }\\n \\n   \/\/ No biggie if we can't erase the files now -- they're in a temp dir anyway\\n+  \/\/ and we locked down permissions (see the note above).\\n   try { common.unlinkSync(paramsFile); } catch (e) {}\\n   try { common.unlinkSync(stderrFile); } catch (e) {}\\n   try { common.unlinkSync(stdoutFile); } catch (e) {}\"}}",
            "message_norm":"fix(exec): lockdown file permissions (#1060)\n\nthis locks down file permissions used by the internal implementation of\r\n`shell.exec()`.\r\n\r\nissue #1058\r\ntested manually using the documented scenarios",
            "language":"en",
            "entities":"[('fix(exec', 'ACTION', ''), ('file permissions', 'SECWORD', ''), ('#1060', 'ISSUE', ''), ('file permissions', 'SECWORD', ''), ('#1058', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/exec.js'])",
            "num_files":1.0
        },
        {
            "index":216,
            "vuln_id":"GHSA-37q6-576q-vgr7",
            "cwe_id":"{'CWE-200'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/parcel-bundler\/parcel\/commit\/066e0bf6bd26b15c78bd47df023452e4b20073e4'}",
            "dataset":"osv",
            "summary":"Missing Origin Validation in parcel-bundler Versions of `parcel-bundler` before 1.10.0 are missing origin validation on the websocket server. This vulnerability allows a remote attacker to steal a developer's source code because the origin of requests to the websocket server that is used for Hot Module Replacement (HMR) are not validated.\n\n\n## Recommendation\n\nUpdate to version 1.10.0 or later.",
            "published_date":"2018-10-30",
            "chain_len":1,
            "project":"https:\/\/github.com\/parcel-bundler\/parcel",
            "commit_href":"https:\/\/github.com\/parcel-bundler\/parcel\/commit\/066e0bf6bd26b15c78bd47df023452e4b20073e4",
            "commit_sha":"066e0bf6bd26b15c78bd47df023452e4b20073e4",
            "patch":"SINGLE",
            "chain_ord":"['066e0bf6bd26b15c78bd47df023452e4b20073e4']",
            "before_first_fix_commit":"{'948159b99adbc74857b380576e1e104a9097f259'}",
            "last_fix_commit":"066e0bf6bd26b15c78bd47df023452e4b20073e4",
            "chain_ord_pos":1.0,
            "commit_datetime":"09\/25\/2018, 03:49:56",
            "message":"fix security vuln (#1794)",
            "author":"Jasper De Moor",
            "comments":null,
            "stats":"{'additions': 11, 'deletions': 1, 'total': 12}",
            "files":"{'packages\/core\/parcel-bundler\/src\/HMRServer.js': {'additions': 11, 'deletions': 1, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/parcel-bundler\/parcel\/raw\/066e0bf6bd26b15c78bd47df023452e4b20073e4\/packages%2Fcore%2Fparcel-bundler%2Fsrc%2FHMRServer.js', 'patch': \"@@ -17,7 +17,17 @@ class HMRServer {\\n         this.server = https.createServer(await getCertificate(options.https));\\n       }\\n \\n-      this.wss = new WebSocket.Server({server: this.server});\\n+      let websocketOptions = {\\n+        server: this.server\\n+      };\\n+\\n+      if (options.hmrHostname) {\\n+        websocketOptions.origin = `${options.https ? 'https' : 'http'}:\/\/${\\n+          options.hmrHostname\\n+        }`;\\n+      }\\n+\\n+      this.wss = new WebSocket.Server(websocketOptions);\\n       this.server.listen(options.hmrPort, resolve);\\n     });\"}}",
            "message_norm":"fix security vuln (#1794)",
            "language":"ro",
            "entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('#1794', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/core\/parcel-bundler\/src\/HMRServer.js'])",
            "num_files":1.0
        },
        {
            "index":422,
            "vuln_id":"GHSA-4gp3-p7ph-x2jr",
            "cwe_id":"{'CWE-78'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/guybedford\/devcert\/commit\/571f4e6d077f7f21c6aed655ae380d85a7a5d3b8'}",
            "dataset":"osv",
            "summary":"OS Command Injection in devcert-sanscache devcert-sanscache before 0.4.7 allows remote attackers to execute arbitrary code or cause a Command Injection via the exec function. The variable `commonName` controlled by user input is used as part of the `exec` function without any sanitization.",
            "published_date":"2020-04-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/guybedford\/devcert",
            "commit_href":"https:\/\/github.com\/guybedford\/devcert\/commit\/571f4e6d077f7f21c6aed655ae380d85a7a5d3b8",
            "commit_sha":"571f4e6d077f7f21c6aed655ae380d85a7a5d3b8",
            "patch":"SINGLE",
            "chain_ord":"['571f4e6d077f7f21c6aed655ae380d85a7a5d3b8']",
            "before_first_fix_commit":"{'651bb8ebb97a029be13656c0476d48db85887451'}",
            "last_fix_commit":"571f4e6d077f7f21c6aed655ae380d85a7a5d3b8",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/08\/2020, 01:35:58",
            "message":"common name sanitization",
            "author":"Guy Bedford",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'src\/index.ts': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/guybedford\/devcert\/raw\/571f4e6d077f7f21c6aed655ae380d85a7a5d3b8\/src%2Findex.ts', 'patch': \"@@ -6,7 +6,7 @@ import fs = require('fs');\\n export default async function generateDevCert (commonName: string) {\\n   if (!commandExists.sync('openssl'))\\n     throw new Error('Unable to find openssl - make sure it is installed and available in your PATH');\\n-  if (!commonName.match(\/^(.|\\\\.){1,64}$\/))\\n+  if (!commonName.match(\/^(a-zA-Z0-9|\\\\.){1,64}$\/))\\n     throw new Error(`Invalid Common Name ${commonName}.`);\\n   try {\\n     const opensslConfPath = generateOpensslConf(commonName);\"}}",
            "message_norm":"common name sanitization",
            "language":"it",
            "entities":"[('sanitization', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/index.ts'])",
            "num_files":1.0
        },
        {
            "index":2279,
            "vuln_id":"GHSA-jmqm-f2gx-4fjv",
            "cwe_id":"{'CWE-352'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/npm\/npm-registry-fetch\/commit\/18bf9b97fb1deecdba01ffb05580370846255c88'}",
            "dataset":"osv",
            "summary":"Sensitive information exposure through logs in npm-registry-fetch Affected versions of `npm-registry-fetch` are vulnerable to an information exposure vulnerability through log files. The cli supports URLs like `<protocol>:\/\/[<user>[:<password>]@]<hostname>[:<port>][:][\/]<path>`. The password value is not redacted and is printed to stdout and also to any generated log files.",
            "published_date":"2020-07-07",
            "chain_len":1,
            "project":"https:\/\/github.com\/npm\/npm-registry-fetch",
            "commit_href":"https:\/\/github.com\/npm\/npm-registry-fetch\/commit\/18bf9b97fb1deecdba01ffb05580370846255c88",
            "commit_sha":"18bf9b97fb1deecdba01ffb05580370846255c88",
            "patch":"SINGLE",
            "chain_ord":"['18bf9b97fb1deecdba01ffb05580370846255c88']",
            "before_first_fix_commit":"{'09e540b09a951ded299ee028e7f1bd21cef5a6da'}",
            "last_fix_commit":"18bf9b97fb1deecdba01ffb05580370846255c88",
            "chain_ord_pos":1.0,
            "commit_datetime":"06\/30\/2020, 16:32:16",
            "message":"chore: remove auth data from logs (#29)",
            "author":"Claudia Hern\u00e1ndez",
            "comments":null,
            "stats":"{'additions': 10, 'deletions': 1, 'total': 11}",
            "files":"{'check-response.js': {'additions': 10, 'deletions': 1, 'changes': 11, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/npm\/npm-registry-fetch\/raw\/18bf9b97fb1deecdba01ffb05580370846255c88\/check-response.js', 'patch': \"@@ -30,9 +30,18 @@ function logRequest (method, res, startTime, opts) {\\n   const attempt = res.headers.get('x-fetch-attempts')\\n   const attemptStr = attempt && attempt > 1 ? ` attempt #${attempt}` : ''\\n   const cacheStr = res.headers.get('x-local-cache') ? ' (from cache)' : ''\\n+\\n+  let urlStr\\n+  try {\\n+    const url = new URL(res.url)\\n+    urlStr = res.url.replace(url.password, '***')\\n+  } catch {\\n+    urlStr = res.url\\n+  }\\n+\\n   opts.log.http(\\n     'fetch',\\n-    `${method.toUpperCase()} ${res.status} ${res.url} ${elapsedTime}ms${attemptStr}${cacheStr}`\\n+    `${method.toUpperCase()} ${res.status} ${urlStr} ${elapsedTime}ms${attemptStr}${cacheStr}`\\n   )\\n }\"}}",
            "message_norm":"chore: remove auth data from logs (#29)",
            "language":"en",
            "entities":"[('remove', 'ACTION', ''), ('auth', 'SECWORD', ''), ('#29', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['check-response.js'])",
            "num_files":1.0
        },
        {
            "index":1821,
            "vuln_id":"GHSA-g5fm-jp9v-2432",
            "cwe_id":"{'CWE-754'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/nextauthjs\/next-auth\/commit\/e498483b23273d1bfc81be68339607f88d411bd6', 'https:\/\/github.com\/nextauthjs\/next-auth\/commit\/25517b73153332d948114bacdff3b5908de91d85'}",
            "dataset":"osv",
            "summary":"Improper Handling of `callbackUrl` parameter in next-auth ### Impact\n\nAn attacker can send a request to an app using NextAuth.js with an invalid `callbackUrl` query parameter, which internally we convert to a `URL` object. The URL instantiation would fail due to a malformed URL being passed into the constructor, causing it to throw an unhandled error which led to our **API route handler timing out and logging in to fail**. This has been remedied in the following releases:\n\nnext-auth v3 users before version 3.29.5 are impacted. (We recommend upgrading to v4, as v3 is considered unmaintained. See our [migration guide](https:\/\/next-auth.js.org\/getting-started\/upgrade-v4))\n\nnext-auth v4 users before version 4.5.0 are impacted.\n\n### Patches\n\nWe've released patches for this vulnerability in:\n  \n- v3 - `3.29.5`\n- v4 - `4.5.0`\n\nYou can do:\n\n```sh\nnpm i next-auth@latest\n```\n\nor\n\n```sh\nyarn add next-auth@latest\n```\n\nor\n\n```sh\npnpm add next-auth@latest\n```\n\n(This will update to the latest v4 version, but you can change  `latest` to `3` if you want to stay on v3. This is not recommended.)\n\n### Workarounds\n\nIf for some reason you cannot upgrade, the workaround requires you to rely on [Advanced Initialization](https:\/\/next-auth.js.org\/configuration\/initialization#advanced-initialization). Here is an example:\n\n**Before:**\n\n```js\n\/\/ pages\/api\/auth\/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nexport default NextAuth(\/* your config *\/)\n```\n\n**After:**\n\n```js\n\/\/ pages\/api\/auth\/[...nextauth].js\nimport NextAuth from \"next-auth\"\n\nfunction isValidHttpUrl(url) {\n  try {\n    return \/^https?:\/.test(url).protocol\n  } catch {\n    return false;\n  }\n}\n\nexport default async function handler(req, res) {\n  if (\n    req.query.callbackUrl &&\n    !isValidHttpUrl(req.query.callbackUrl)\n  ) {\n   return res.status(500).send('');\n  }\n  \n  return await NextAuth(req, res, \/* your config *\/)\n}\n```\n\n\n### References\n\nThis vulnerability was discovered not long after https:\/\/github.com\/nextauthjs\/next-auth\/security\/advisories\/GHSA-q2mx-j4x2-2h74 was published and is very similar in nature.\n\nRelated documentation:\n\n- https:\/\/next-auth.js.org\/getting-started\/client#specifying-a-callbackurl\n- https:\/\/next-auth.js.org\/configuration\/callbacks#redirect-callback\n\nA test case has been added so this kind of issue will be checked before publishing. See: https:\/\/github.com\/nextauthjs\/next-auth\/commit\/e498483b23273d1bfc81be68339607f88d411bd6\n\n### For more information\n\nIf you have any concerns, we request responsible disclosure, outlined here: https:\/\/next-auth.js.org\/security#reporting-a-vulnerability\n\n### Timeline\n\nThe issue was reported 2022 June 10th, a response was sent out to the reporter in less than 2 hours, and a patch was published within 3 hours.",
            "published_date":"2022-06-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/nextauthjs\/next-auth",
            "commit_href":"https:\/\/github.com\/nextauthjs\/next-auth\/commit\/e498483b23273d1bfc81be68339607f88d411bd6",
            "commit_sha":"e498483b23273d1bfc81be68339607f88d411bd6",
            "patch":"MULTI",
            "chain_ord":"['25517b73153332d948114bacdff3b5908de91d85', 'e498483b23273d1bfc81be68339607f88d411bd6']",
            "before_first_fix_commit":"{'7cf49566a6327ae99a3def6d20b28c3786c7368c'}",
            "last_fix_commit":"e498483b23273d1bfc81be68339607f88d411bd6",
            "chain_ord_pos":2.0,
            "commit_datetime":"06\/20\/2022, 08:38:21",
            "message":"test: add test for invalid `callbackUrl` handling",
            "author":"Bal\u00e1zs Orb\u00e1n",
            "comments":null,
            "stats":"{'additions': 16, 'deletions': 0, 'total': 16}",
            "files":"{'packages\/next-auth\/tests\/assert.test.ts': {'additions': 16, 'deletions': 0, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/nextauthjs\/next-auth\/raw\/e498483b23273d1bfc81be68339607f88d411bd6\/packages%2Fnext-auth%2Ftests%2Fassert.test.ts', 'patch': '@@ -13,6 +13,22 @@ it(\"Show error page if secret is not defined\", async () => {\\n   expect(log.error).toBeCalledWith(\"NO_SECRET\", expect.anything())\\n })\\n \\n+it(\"Should show configuration error page on invalid `callbackUrl`\", async () => {\\n+  const { res, log } = await handler(\\n+    { providers: [] },\\n+    { prod: true, params: { callbackUrl: \"invalid-callback\" } }\\n+  )\\n+\\n+  expect(res.status).toBe(500)\\n+  expect(res.html).toMatch(\/there is a problem with the server configuration.\/i)\\n+  expect(res.html).toMatch(\/check the server logs for more information.\/i)\\n+\\n+  expect(log.error).toBeCalledWith(\\n+    \"INVALID_CALLBACK_URL_ERROR\",\\n+    expect.anything()\\n+  )\\n+})\\n+\\n it(\"Allow relative `callbackUrl`\", async () => {\\n   const { res, log } = await handler(\\n     { providers: [] },'}}",
            "message_norm":"test: add test for invalid `callbackurl` handling",
            "language":"en",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['packages\/next-auth\/tests\/assert.test.ts'])",
            "num_files":1.0
        },
        {
            "index":684,
            "vuln_id":"GHSA-5r2v-6gm6-vpvh",
            "cwe_id":"{'CWE-200'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/c3af3ff1d0484de3bd789ee6c6e47f35d590e945'}",
            "dataset":"osv",
            "summary":"Insecure Permissions in Gogs routes\/api\/v1\/api.go in Gogs 0.11.86 lacks permission checks for routes: deploy keys, collaborators, and hooks.",
            "published_date":"2021-05-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/gogs\/gogs",
            "commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/c3af3ff1d0484de3bd789ee6c6e47f35d590e945",
            "commit_sha":"c3af3ff1d0484de3bd789ee6c6e47f35d590e945",
            "patch":"SINGLE",
            "chain_ord":"['c3af3ff1d0484de3bd789ee6c6e47f35d590e945']",
            "before_first_fix_commit":"{'1592e578ed3ac7190baed6165b093002b931520c'}",
            "last_fix_commit":"c3af3ff1d0484de3bd789ee6c6e47f35d590e945",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2019, 01:36:05",
            "message":"routes\/api: fix permission checks for routes\n\nReported by @ManassehZhou #5764",
            "author":"unknwon",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 5, 'total': 19}",
            "files":"{'routes\/api\/v1\/api.go': {'additions': 14, 'deletions': 5, 'changes': 19, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/c3af3ff1d0484de3bd789ee6c6e47f35d590e945\/routes%2Fapi%2Fv1%2Fapi.go', 'patch': '@@ -112,6 +112,15 @@ func reqRepoWriter() macaron.Handler {\\n \\t}\\n }\\n \\n+func reqRepoAdmin() macaron.Handler {\\n+\\treturn func(c *context.Context) {\\n+\\t\\tif !c.Repo.IsAdmin() {\\n+\\t\\t\\tc.Error(http.StatusForbidden)\\n+\\t\\t\\treturn\\n+\\t\\t}\\n+\\t}\\n+}\\n+\\n func orgAssignment(args ...bool) macaron.Handler {\\n \\tvar (\\n \\t\\tassignOrg  bool\\n@@ -236,12 +245,12 @@ func RegisterRoutes(m *macaron.Macaron) {\\n \\t\\t\\t\\t\\t\\tPost(bind(api.CreateHookOption{}), repo.CreateHook)\\n \\t\\t\\t\\t\\tm.Combo(\"\/:id\").Patch(bind(api.EditHookOption{}), repo.EditHook).\\n \\t\\t\\t\\t\\t\\tDelete(repo.DeleteHook)\\n-\\t\\t\\t\\t}, reqAdmin())\\n+\\t\\t\\t\\t}, reqRepoAdmin())\\n \\t\\t\\t\\tm.Group(\"\/collaborators\", func() {\\n \\t\\t\\t\\t\\tm.Get(\"\", repo.ListCollaborators)\\n \\t\\t\\t\\t\\tm.Combo(\"\/:collaborator\").Get(repo.IsCollaborator).Put(bind(api.AddCollaboratorOption{}), repo.AddCollaborator).\\n \\t\\t\\t\\t\\t\\tDelete(repo.DeleteCollaborator)\\n-\\t\\t\\t\\t}, reqAdmin())\\n+\\t\\t\\t\\t}, reqRepoAdmin())\\n \\t\\t\\t\\tm.Get(\"\/raw\/*\", context.RepoRef(), repo.GetRawFile)\\n \\t\\t\\t\\tm.Get(\"\/archive\/*\", repo.GetArchive)\\n \\t\\t\\t\\tm.Get(\"\/forks\", repo.ListForks)\\n@@ -260,7 +269,7 @@ func RegisterRoutes(m *macaron.Macaron) {\\n \\t\\t\\t\\t\\t\\tPost(bind(api.CreateKeyOption{}), repo.CreateDeployKey)\\n \\t\\t\\t\\t\\tm.Combo(\"\/:id\").Get(repo.GetDeployKey).\\n \\t\\t\\t\\t\\t\\tDelete(repo.DeleteDeploykey)\\n-\\t\\t\\t\\t}, reqAdmin())\\n+\\t\\t\\t\\t}, reqRepoAdmin())\\n \\t\\t\\t\\tm.Group(\"\/issues\", func() {\\n \\t\\t\\t\\t\\tm.Combo(\"\").Get(repo.ListIssues).Post(bind(api.CreateIssueOption{}), repo.CreateIssue)\\n \\t\\t\\t\\t\\tm.Group(\"\/comments\", func() {\\n@@ -300,8 +309,8 @@ func RegisterRoutes(m *macaron.Macaron) {\\n \\t\\t\\t\\t\\t\\tDelete(reqRepoWriter(), repo.DeleteMilestone)\\n \\t\\t\\t\\t})\\n \\n-\\t\\t\\t\\tm.Patch(\"\/issue-tracker\", bind(api.EditIssueTrackerOption{}), repo.IssueTracker)\\n-\\t\\t\\t\\tm.Post(\"\/mirror-sync\", repo.MirrorSync)\\n+\\t\\t\\t\\tm.Patch(\"\/issue-tracker\", reqRepoWriter(), bind(api.EditIssueTrackerOption{}), repo.IssueTracker)\\n+\\t\\t\\t\\tm.Post(\"\/mirror-sync\", reqRepoWriter(), repo.MirrorSync)\\n \\t\\t\\t\\tm.Get(\"\/editorconfig\/:filename\", context.RepoRef(), repo.GetEditorconfig)\\n \\t\\t\\t}, repoAssignment())\\n \\t\\t}, reqToken())'}}",
            "message_norm":"routes\/api: fix permission checks for routes\n\nreported by @manassehzhou #5764",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('permission', 'SECWORD', ''), ('#5764', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['routes\/api\/v1\/api.go'])",
            "num_files":1.0
        },
        {
            "index":1774,
            "vuln_id":"GHSA-fr76-2wp8-fp92",
            "cwe_id":"{'CWE-94', 'CWE-200'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/express-handlebars\/express-handlebars\/commit\/78c47a235c4ad7bc2674bddd8ec2721567ed8c72'}",
            "dataset":"osv",
            "summary":"Insecure template handling in Express-handlebars Express-handlebars is a Handlebars view engine for Express. Express-handlebars mixes pure template data with engine configuration options through the Express render API. More specifically, the layout parameter may trigger file disclosure vulnerabilities in downstream applications. This potential vulnerability is somewhat restricted in that only files with existing extentions (i.e. file.extension) can be included, files that lack an extension will have .handlebars appended to them. For complete details refer to the referenced GHSL-2021-018 report. Notes in documentation have been added to help users avoid this potential information exposure vulnerability.\n\nA fix is discussed in https:\/\/github.com\/express-handlebars\/express-handlebars\/pull\/163",
            "published_date":"2022-02-10",
            "chain_len":1,
            "project":"https:\/\/github.com\/express-handlebars\/express-handlebars",
            "commit_href":"https:\/\/github.com\/express-handlebars\/express-handlebars\/commit\/78c47a235c4ad7bc2674bddd8ec2721567ed8c72",
            "commit_sha":"78c47a235c4ad7bc2674bddd8ec2721567ed8c72",
            "patch":"SINGLE",
            "chain_ord":"['78c47a235c4ad7bc2674bddd8ec2721567ed8c72']",
            "before_first_fix_commit":"{'2cde11e4d4b5aabf0c7bef5725eda629c51eeb92'}",
            "last_fix_commit":"78c47a235c4ad7bc2674bddd8ec2721567ed8c72",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/04\/2021, 14:04:07",
            "message":"fix: add note about security",
            "author":"Tony Brix",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'README.md': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/express-handlebars\/express-handlebars\/raw\/78c47a235c4ad7bc2674bddd8ec2721567ed8c72\/README.md', 'patch': '@@ -63,6 +63,9 @@ Install using npm:\\n $ npm install express-handlebars\\n ```\\n \\n+## Danger \ud83d\udd25\\n+ \\n+Never put objects on the `req` object straight in as the data, this can allow hackers to run XSS attacks. Always make sure you are destructuring the values on objects like `req.query` and `req.params`. See https:\/\/blog.shoebpatel.com\/2021\/01\/23\/The-Secret-Parameter-LFR-and-Potential-RCE-in-NodeJS-Apps\/ for more details.\\n \\n ## Usage'}}",
            "message_norm":"fix: add note about security",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('add', 'ACTION', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['README.md'])",
            "num_files":1.0
        },
        {
            "index":1872,
            "vuln_id":"GHSA-gg6x-xx78-448c",
            "cwe_id":"{'CWE-87'}",
            "score":4.0,
            "chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c'}",
            "dataset":"osv",
            "summary":"Reflected XSS when importing CSV in OctoberCMS ### Impact\nA user with the ability to use the import functionality of the `ImportExportController` behavior could be socially engineered by an attacker to upload a maliciously crafted CSV file which could result in a reflected XSS attack on the user in question\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https:\/\/stazot.com\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1100\" alt=\"Screen Shot 2020-03-31 at 2 01 52 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/78070158-8f7ef580-7358-11ea-950c-226533f6a0a3.png\">",
            "published_date":"2020-06-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/october",
            "commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/cd0b6a791f995d86071a024464c1702efc50f46c",
            "commit_sha":"cd0b6a791f995d86071a024464c1702efc50f46c",
            "patch":"SINGLE",
            "chain_ord":"['cd0b6a791f995d86071a024464c1702efc50f46c']",
            "before_first_fix_commit":"{'6711dae8ef70caf0e94cec434498012a2ccd86b8'}",
            "last_fix_commit":"cd0b6a791f995d86071a024464c1702efc50f46c",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/31\/2020, 10:17:41",
            "message":"escape import CSV column names",
            "author":"Luke Towers",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'modules\/backend\/behaviors\/importexportcontroller\/partials\/_import_file_columns.htm': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/cd0b6a791f995d86071a024464c1702efc50f46c\/modules%2Fbackend%2Fbehaviors%2Fimportexportcontroller%2Fpartials%2F_import_file_columns.htm', 'patch': '@@ -22,7 +22,7 @@\\n                                 class=\"column-label\"\\n                                 onclick=\"$.oc.importBehavior.loadFileColumnSample(this)\"\\n                             >\\n-                                <?= $column ?>\\n+                                <?= e($column) ?>\\n                             <\/a>\\n                         <\/span>\\n                     <\/div>'}}",
            "message_norm":"escape import csv column names",
            "language":"ro",
            "entities":"[('escape', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/backend\/behaviors\/importexportcontroller\/partials\/_import_file_columns.htm'])",
            "num_files":1.0
        },
        {
            "index":648,
            "vuln_id":"GHSA-5jgj-h9wp-53fr",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/idno\/known\/commit\/80b716a8392fb71cfce84d03aaf7c045c62f6350'}",
            "dataset":"osv",
            "summary":"Known vulnerable to code execution via SVG file in v1.3.1 An issue in the isSVG() function of Known v1.3.1 allows attackers to execute arbitrary code via a crafted SVG file.\n\nThe researcher report indicates that versions 1.3.1 and prior are vulnerable. Version 1.2.2 is the last version tagged on GitHub and in Packagist, and development related to the 1.3.x branch is currently on the `dev` branch of the idno\/known repository.",
            "published_date":"2022-07-09",
            "chain_len":1,
            "project":"https:\/\/github.com\/idno\/known",
            "commit_href":"https:\/\/github.com\/idno\/known\/commit\/80b716a8392fb71cfce84d03aaf7c045c62f6350",
            "commit_sha":"80b716a8392fb71cfce84d03aaf7c045c62f6350",
            "patch":"SINGLE",
            "chain_ord":"['80b716a8392fb71cfce84d03aaf7c045c62f6350']",
            "before_first_fix_commit":"{'e86e779cf1db93cd488ee578e92a16008132a114'}",
            "last_fix_commit":"80b716a8392fb71cfce84d03aaf7c045c62f6350",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/18\/2021, 15:44:26",
            "message":"Checking for script tags in GIFs etc (#3017)",
            "author":"Ben Werdmuller",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 0, 'total': 14}",
            "files":"{'Idno\/Entities\/File.php': {'additions': 14, 'deletions': 0, 'changes': 14, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/idno\/known\/raw\/80b716a8392fb71cfce84d03aaf7c045c62f6350\/Idno%2FEntities%2FFile.php', 'patch': \"@@ -285,6 +285,20 @@ public static function isImage($file_path)\\n             return false;\\n         }\\n \\n+        \/**\\n+         * Detects whether the file contains PHP or script tags, eg to check for embedded code in GIFs\\n+         * @param $file_path\\n+         * @return bool\\n+         *\/\\n+        public static function isFileFreeFromScriptTags($file_path)\\n+        {\\n+            if ($contents = file_get_contents($file_path)) {\\n+                if (stripos($contents, '<script') || strpos($contents, '<?')) return false;\\n+                return true;\\n+            }\\n+            return false;\\n+        }\\n+\\n         \/**\\n          * Retrieve a file by ID\\n          *\"}}",
            "message_norm":"checking for script tags in gifs etc (#3017)",
            "language":"en",
            "entities":"[('#3017', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['Idno\/Entities\/File.php'])",
            "num_files":1.0
        },
        {
            "index":1094,
            "vuln_id":"GHSA-7wv8-g97r-432h",
            "cwe_id":"{'CWE-200'}",
            "score":7.5,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/e680e134a4215c979bfd2eaf58336be34c8fc6e6'}",
            "dataset":"osv",
            "summary":"Exposure of Sensitive Information to an Unauthorized Actor in microweber Exposure of Sensitive Information to an Unauthorized Actor in Packagist microweber\/microweber prior to 1.2.11.",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/e680e134a4215c979bfd2eaf58336be34c8fc6e6",
            "commit_sha":"e680e134a4215c979bfd2eaf58336be34c8fc6e6",
            "patch":"SINGLE",
            "chain_ord":"['e680e134a4215c979bfd2eaf58336be34c8fc6e6']",
            "before_first_fix_commit":"{'62aa09ed44ff63f5fffc5addbf000423d7c38e44'}",
            "last_fix_commit":"e680e134a4215c979bfd2eaf58336be34c8fc6e6",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2022, 09:35:10",
            "message":"search_authors only admins",
            "author":"Bozhidar Slaveykov",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 2, 'total': 4}",
            "files":"{'src\/MicroweberPackages\/User\/helpers\/api_user.php': {'additions': 2, 'deletions': 2, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/e680e134a4215c979bfd2eaf58336be34c8fc6e6\/src%2FMicroweberPackages%2FUser%2Fhelpers%2Fapi_user.php', 'patch': \"@@ -63,9 +63,9 @@\\n \\n });\\n \\n-api_expose('users\/search_authors', function ($params = false) {\\n+api_expose_admin('users\/search_authors', function ($params = false) {\\n \\n-    $return = array();\\n+    $return = array(); \\n \\n     $kw = false;\\n     if (isset($params['kw'])) {\"}}",
            "message_norm":"search_authors only admins",
            "language":"en",
            "entities":"[('admins', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/User\/helpers\/api_user.php'])",
            "num_files":1.0
        },
        {
            "index":2198,
            "vuln_id":"GHSA-j6p2-cx3w-6jcp",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/jashkenas\/backbone\/commit\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93'}",
            "dataset":"osv",
            "summary":"Cross-Site Scripting in backbone Affected versions of `backbone` are vulnerable to cross-site scripting when users are allowed to supply input to the `Model#Escape` function, and the output is then written to the DOM. \n\nThe vulnerability occurs as a result of the regular expression used to encode metacharacters failing to take HTML Entities such as `&#60;` into account.\n\n\n## Recommendation\n\nUpdate to version 0.5.0 or later.",
            "published_date":"2019-02-18",
            "chain_len":1,
            "project":"https:\/\/github.com\/jashkenas\/backbone",
            "commit_href":"https:\/\/github.com\/jashkenas\/backbone\/commit\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
            "commit_sha":"0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
            "patch":"SINGLE",
            "chain_ord":"['0cdc525961d3fa98e810ffae6bcc8e3838e36d93']",
            "before_first_fix_commit":"{'7216d993502da2e312fc53f4e8edc8b534c25042'}",
            "last_fix_commit":"0cdc525961d3fa98e810ffae6bcc8e3838e36d93",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/01\/2011, 21:12:24",
            "message":"Fixed escapeHTML function\nto skip not only &***;, but also &#***; and &x***;",
            "author":"Dmitry Baranovskiy",
            "comments":"{'com_1': {'author': 'alanhogan', 'datetime': '03\/06\/2011, 02:31:15', 'body': 'What are your thoughts on escaping single quotes?\\n\\nUsing single quotes around attribute values is less common than double quotes, but is certainly done:\\n\\n```\\n<p id=\\'foo\\'>\u2026<\/p>\\n```\\n\\nThis can lead to XSS just as unescaped double-quotes can:\\n\\n```\\nvar attack = \" \\' onmouseover=\\'alert(1);\\' foo=\\' \";\\nvar html = \"<p data-user-input=\\'\"+escapeHTML(attack)+\"\\'>Foo<\/p>\";\\ndocument.write(html);\\n```\\n\\nIMO, single quotes really ought to be escaped, as well.'}, 'com_2': {'author': 'alanhogan', 'datetime': '03\/06\/2011, 02:37:31', 'body': 'Demo of attack on jsfiddle: http:\/\/jsfiddle.net\/wEzNJ\/'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'backbone.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/jashkenas\/backbone\/raw\/0cdc525961d3fa98e810ffae6bcc8e3838e36d93\/backbone.js', 'patch': '@@ -1079,7 +1079,7 @@\\n \\n   \/\/ Helper function to escape a string for HTML rendering.\\n   var escapeHTML = function(string) {\\n-    return string.replace(\/&(?!\\\\w+;)\/g, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n+    return string.replace(\/&(?!\\\\w+;|#\\\\d+;|#x[\\\\da-f]+;)\/gi, \\'&amp;\\').replace(\/<\/g, \\'&lt;\\').replace(\/>\/g, \\'&gt;\\').replace(\/\"\/g, \\'&quot;\\');\\n   };\\n \\n }).call(this);'}}",
            "message_norm":"fixed escapehtml function\nto skip not only &***;, but also &#***; and &x***;",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('escapehtml', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['backbone.js'])",
            "num_files":1.0
        },
        {
            "index":1236,
            "vuln_id":"GHSA-8phj-f9w2-cjcc",
            "cwe_id":"{'CWE-22'}",
            "score":8.6,
            "chain":"{'https:\/\/github.com\/aimhubio\/aim\/pull\/1003\/commits\/f01266a1a479ef11d7d6c539e7dd89e9d5639738'}",
            "dataset":"osv",
            "summary":"Arbitrary file reading vulnerability in Aim ### Impact\nA path traversal attack aims to access files and directories that are stored outside the web root folder. By manipulating variables that reference files with \u201cdot-dot-slash (..\/)\u201d sequences and its variations or by using absolute file paths, it may be possible to access arbitrary files and directories stored on file system including application source code or configuration and critical system files.\n\nVulnerable code: https:\/\/github.com\/aimhubio\/aim\/blob\/0b99c6ca08e0ba7e7011453a2f68033e9b1d1bce\/aim\/web\/api\/views.py#L9-L16\n\n### Patches\nThe vulnerability issue is resolved in Aim v3.1.0.\n\n### References\nhttps:\/\/owasp.org\/www-community\/attacks\/Path_Traversal",
            "published_date":"2021-11-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/aimhubio\/aim",
            "commit_href":"https:\/\/github.com\/aimhubio\/aim\/pull\/1003\/commits\/f01266a1a479ef11d7d6c539e7dd89e9d5639738",
            "commit_sha":"f01266a1a479ef11d7d6c539e7dd89e9d5639738",
            "patch":"SINGLE",
            "chain_ord":"['f01266a1a479ef11d7d6c539e7dd89e9d5639738']",
            "before_first_fix_commit":"{'0bcac8b709f9409518134b2eafee817278aca14f'}",
            "last_fix_commit":"f01266a1a479ef11d7d6c539e7dd89e9d5639738",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/12\/2021, 14:03:22",
            "message":"Fix security issue when incorrect path is given to the endpoint that serves static files which can lead to a leak of non wanted files (e.g. \/static-files\/..\/..\/..\/..\/etc\/passwd)",
            "author":"mihran113",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 1, 'total': 10}",
            "files":"{'aim\/web\/api\/views.py': {'additions': 9, 'deletions': 1, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/aimhubio\/aim\/raw\/f01266a1a479ef11d7d6c539e7dd89e9d5639738\/aim%2Fweb%2Fapi%2Fviews.py', 'patch': \"@@ -1,15 +1,23 @@\\n import os\\n+from pathlib import Path\\n \\n from aim.web.api.utils import APIRouter  # wrapper for fastapi.APIRouter\\n from fastapi.responses import FileResponse\\n+from fastapi import HTTPException\\n \\n statics_router = APIRouter()\\n \\n \\n @statics_router.get('\/static-files\/{path:path}\/')\\n async def serve_static_files(path):\\n     from aim import web\\n-    static_file_name = os.path.join(os.path.dirname(web.__file__), 'ui', 'build', path)\\n+    static_file_root = os.path.join(os.path.dirname(web.__file__), 'ui', 'build')\\n+    static_file_name = os.path.join(static_file_root, path)\\n+\\n+    # check if path is leading inside ui\/build directory\\n+    if not Path(static_file_root) in Path(static_file_name).resolve().parents:\\n+        raise HTTPException(404)\\n+\\n     compressed_file_name = '{}.gz'.format(static_file_name)\\n     if os.path.exists(compressed_file_name):\\n         return FileResponse(compressed_file_name, headers={'Content-Encoding': 'gzip'})\"}}",
            "message_norm":"fix security issue when incorrect path is given to the endpoint that serves static files which can lead to a leak of non wanted files (e.g. \/static-files\/..\/..\/..\/..\/etc\/passwd)",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', ''), ('leak', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['aim\/web\/api\/views.py'])",
            "num_files":1.0
        },
        {
            "index":269,
            "vuln_id":"GHSA-3j9m-hcv9-rpj8",
            "cwe_id":"{'CWE-79'}",
            "score":6.9,
            "chain":"{'https:\/\/github.com\/grafana\/grafana\/commit\/3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88', 'https:\/\/github.com\/grafana\/grafana\/commit\/31b78d51c693d828720a5b285107a50e6024c912'}",
            "dataset":"osv",
            "summary":"XSS vulnerability allowing arbitrary JavaScript execution Today we are releasing Grafana 8.2.3. This patch release includes an important security fix for an issue that affects all Grafana versions from 8.0.0-beta1.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched and an audit did not find any usage of this attack vector. [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n## CVE-2021-41174 XSS vulnerability on unauthenticated pages\n\n### Summary\n\nCVSS Score: 6.9 Medium\nCVSS:[CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L](https:\/\/www.first.org\/cvss\/calculator\/3.0#CVSS:3.0\/AV:N\/AC:H\/PR:N\/UI:R\/S:C\/C:L\/I:H\/A:N\/E:U\/RL:O\/RC:R\/CR:L\/MAV:N\/MAC:H\/MPR:N\/MUI:R\/MS:C\/MC:N\/MI:H\/MA:L)\n\nWe received a security report to security@grafana.com on 2021-10-21 about a vulnerability in Grafana regarding the XSS vulnerability.\n\nIt was later identified as affecting Grafana versions from 8.0.0-beta1 to 8.2.2. [CVE-2021-41174](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2021-41174) has been assigned to this vulnerability.\n\n### Impact\n\nIf an attacker is able to convince a victim to visit a URL referencing a vulnerable page, arbitrary JavaScript content may be executed within the context of the victim's browser.\n\nThe user visiting the malicious link must be unauthenticated and the link must be for a page that contains the login button in the menu bar.\n\nThere are two ways an unauthenticated user can open a page in Grafana that contains the login button:\n- Anonymous authentication is enabled. This means all pages in Grafana would be open for the attack.\n- The link is to an unauthenticated page. The following pages are vulnerable:\n  - `\/dashboard-solo\/snapshot\/*`\n  - `\/dashboard\/snapshot\/*`\n  - `\/invite\/:code`\n\nThe url has to be crafted to exploit AngularJS rendering and contain the interpolation binding for AngularJS expressions. AngularJS uses double curly braces for interpolation binding: {{ }} \n\nAn example of an expression would be: `{{constructor.constructor(\u2018alert(1)\u2019)()}}`. This can be included in the link URL like this: \n\nhttps:\/\/play.grafana.org\/dashboard\/snapshot\/%7B%7Bconstructor.constructor('alert(1)')()%7D%7D?orgId=1\n\nWhen the user follows the link and the page renders, the login button will contain the original link with a query parameter to force a redirect to the login page. The URL is not validated and the AngularJS rendering engine will execute the JavaScript expression contained in the URL.\n\n### Attack audit\n\nWe can not guarantee that the below will identify all attacks, so if you find something using the audit process described below, you should consider doing a full assessment.\n\n#### Through reverse proxy\/load balancer logs\n\nTo determine if your Grafana installation has been exploited for this vulnerability, search through your reverse proxy\/load balancer access logs for instances where the path contains `{{` followed by something that would invoke JavaScript code. For example, this could be code that attempts to show a fake login page or to steal browser or session data. The [OWASP cheat sheet](https:\/\/cheatsheetseries.owasp.org\/cheatsheets\/XSS_Filter_Evasion_Cheat_Sheet.html) has several examples of XSS attacks.\n\n#### Through the Grafana Enterprise audit feature\n\nIf you enabled \u201cLog web requests\u201d in your configuration with `router_logging = true`, look for requests where `path` contains `{{` followed by something that would invoke JavaScript code.\n\n### Patched versions\n\nRelease 8.2.3:\n\n- [Download Grafana 8.2.3](https:\/\/grafana.com\/grafana\/download\/8.2.3)\n- [Release notes](https:\/\/grafana.com\/docs\/grafana\/latest\/release-notes\/release-notes-8-2-3\/)\n\n### Solutions and mitigations\n\nDownload and install the appropriate patch for your version of Grafana.\n\n[Grafana Cloud](https:\/\/grafana.com\/cloud) instances have already been patched, and [Grafana Enterprise](https:\/\/grafana.com\/products\/enterprise) customers were provided with updated binaries under embargo.\n\n### Workaround\n\nIf for some reason you cannot upgrade, you can use a reverse proxy or similar to block access to block the literal string `{{` in the path.\n\nExample of an Nginx rule to block the literal string `{{`:\n\n```\nlocation ~ \\{\\{ {\n    deny all;\n}\n```\n### Timeline and postmortem\n\nHere is a detailed timeline starting from when we originally learned of the issue. All times in UTC. \n\n* 2021-10-21 23:13: Security researcher sends the initial report about an XSS vulnerability.\n* 2021-10-21 23:13: Confirmed to be reproducible in at least versions 8.0.5 and 8.2.2.\n* 2021-10-22 02:02 MEDIUM severity declared.\n* 2021-10-22 09:22: it is discovered that Grafana instances with anonymous auth turned on are vulnerable. This includes https:\/\/play.grafana.org\/ .\n* 2021-10-22 09:50: Anonymous access disabled for all instances on Grafana Cloud as a mitigation measure.\n* 2021-10-22 11:15: Workaround deployed on Grafana Cloud that blocks malicious requests.\n* 2021-10-22 12:35: Enabled anonymous access for instances on Grafana Cloud. \n* 2021-10-22 12:51: All instances protected by the workaround. From this point forward, Grafana Cloud is no longer affected.\n* 2021-10-22 14:05 Grafana Cloud instances updated with a fix.\n* 2021-10-22 19:23 :Determination that no weekend work is needed as the issue is of MEDIUM severity and the root cause has been identified.\n* 2021-10-25 14:13: Audit of Grafana Cloud concluded, no evidence of exploitation.\n* 2021-10-27 12:00: Grafana Enterprise images released to customers under embargo.\n* 2021-11-03 12:00: Public release.\n\n## Reporting security issues\n\nIf you think you have found a security vulnerability, please send a report to [security@grafana.com](mailto:security@grafana.com). This address can be used for all of\nGrafana Labs' open source and commercial products (including but not limited to Grafana, Tempo, Loki, k6, Tanka, and  Grafana Cloud, Grafana Enterprise, and grafana.com). We only accept vulnerability reports at this address. We would prefer that you encrypt your message to us using our PGP key. The key fingerprint is:\n\nF988 7BEA 027A 049F AE8E  5CAA D125 8932 BE24 C5CA\n\nThe key is available from [ keyserver.ubuntu.com]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?op=get&fingerprint=on&search=0xD1258932BE24C5CA) by searching for [security@grafana]( https:\/\/keyserver.ubuntu.com\/pks\/lookup?search=security@grafana&fingerprint=on&op=index).\n\n## Security announcements\n\nThere is a Security [category](https:\/\/grafana.com\/tags\/security\/) on the Grafana blog where we will post a summary, remediation, and mitigation details for any patch containing security fixes and you can subscribe to updates from our [Security Announcements RSS feed](https:\/\/grafana.com\/tags\/security\/index.xml).",
            "published_date":"2021-11-08",
            "chain_len":3,
            "project":"https:\/\/github.com\/grafana\/grafana",
            "commit_href":"https:\/\/github.com\/grafana\/grafana\/commit\/fb85ed691290d211a5baa44d9a641ab137f0de88",
            "commit_sha":"fb85ed691290d211a5baa44d9a641ab137f0de88",
            "patch":"MULTI",
            "chain_ord":"['31b78d51c693d828720a5b285107a50e6024c912', '3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'fb85ed691290d211a5baa44d9a641ab137f0de88']",
            "before_first_fix_commit":"{'3cb5214fa45eb5a571fd70d6c6edf0d729983f82', 'a3dc30546fce2e437d858c140f1ff307a04365d6'}",
            "last_fix_commit":"fb85ed691290d211a5baa44d9a641ab137f0de88",
            "chain_ord_pos":3.0,
            "commit_datetime":"10\/25\/2021, 07:45:05",
            "message":"Merge pull request #147 from grafana\/axelav\/sanitized-nav-links-8-2-3\n\nSanitized NavBar children links to remove angular interpolation v8.2.3",
            "author":"Oscar Kilhed",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 3, 'total': 8}",
            "files":"{'public\/app\/core\/components\/NavBar\/DropdownChild.tsx': {'additions': 5, 'deletions': 3, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/grafana\/grafana\/raw\/fb85ed691290d211a5baa44d9a641ab137f0de88\/public%2Fapp%2Fcore%2Fcomponents%2FNavBar%2FDropdownChild.tsx', 'patch': '@@ -1,6 +1,6 @@\\n import React from \\'react\\';\\n import { css } from \\'@emotion\/css\\';\\n-import { GrafanaTheme2 } from \\'@grafana\/data\\';\\n+import { GrafanaTheme2, textUtil } from \\'@grafana\/data\\';\\n import { Icon, IconName, Link, useTheme2 } from \\'@grafana\/ui\\';\\n \\n export interface Props {\\n@@ -29,13 +29,15 @@ const DropdownChild = ({ isDivider = false, icon, onClick, target, text, url }:\\n     <\/button>\\n   );\\n   if (url) {\\n+    const sanitizedUrl = textUtil.sanitizeAngularInterpolation(url);\\n+\\n     element =\\n       !target && url.startsWith(\\'\/\\') ? (\\n-        <Link className={styles.element} onClick={onClick} href={url}>\\n+        <Link className={styles.element} onClick={onClick} href={sanitizedUrl}>\\n           {linkContent}\\n         <\/Link>\\n       ) : (\\n-        <a className={styles.element} href={url} target={target} rel=\"noopener\" onClick={onClick}>\\n+        <a className={styles.element} href={sanitizedUrl} target={target} rel=\"noopener\" onClick={onClick}>\\n           {linkContent}\\n         <\/a>\\n       );'}}",
            "message_norm":"merge pull request #147 from grafana\/axelav\/sanitized-nav-links-8-2-3\n\nsanitized navbar children links to remove angular interpolation v8.2.3",
            "language":"en",
            "entities":"[('#147', 'ISSUE', ''), ('sanitized', 'SECWORD', ''), ('sanitized', 'SECWORD', ''), ('remove', 'ACTION', ''), ('v8.2.3', 'VERSION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['public\/app\/core\/components\/NavBar\/DropdownChild.tsx'])",
            "num_files":1.0
        },
        {
            "index":2605,
            "vuln_id":"GHSA-pmpr-55fj-r229",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of `SVDF` ### Impact\nThe implementation of the `SVDF` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/7f283ff806b2031f407db64c4d3edcda8fb9f9f5\/tensorflow\/lite\/kernels\/svdf.cc#L99-L102):\n\n```cc\nconst int rank = params->rank;\n...\nTF_LITE_ENSURE_EQ(context, num_filters % rank, 0);\n```\n\nAn attacker can craft a model such that `params->rank` would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [6841e522a3e7d48706a02e8819836e809f738682](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6841e522a3e7d48706a02e8819836e809f738682",
            "commit_sha":"6841e522a3e7d48706a02e8819836e809f738682",
            "patch":"SINGLE",
            "chain_ord":"['6841e522a3e7d48706a02e8819836e809f738682']",
            "before_first_fix_commit":"{'7f283ff806b2031f407db64c4d3edcda8fb9f9f5'}",
            "last_fix_commit":"6841e522a3e7d48706a02e8819836e809f738682",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 22:13:03",
            "message":"Prevent division by 0\n\nPiperOrigin-RevId: 370995582\nChange-Id: I670ffaf52d1ff8823ec31ea5f438f9125b402223",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/svdf.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6841e522a3e7d48706a02e8819836e809f738682\/tensorflow%2Flite%2Fkernels%2Fsvdf.cc', 'patch': '@@ -99,6 +99,7 @@ TfLiteStatus Prepare(TfLiteContext* context, TfLiteNode* node) {\\n   const int rank = params->rank;\\n   const int batch_size = input->dims->data[0];\\n   const int num_filters = weights_feature->dims->data[0];\\n+  TF_LITE_ENSURE(context, rank != 0);\\n   TF_LITE_ENSURE_EQ(context, num_filters % rank, 0);\\n   const int num_units = num_filters \/ rank;\\n   const int memory_size = weights_time->dims->data[1];'}}",
            "message_norm":"prevent division by 0\n\npiperorigin-revid: 370995582\nchange-id: i670ffaf52d1ff8823ec31ea5f438f9125b402223",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370995582', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/svdf.cc'])",
            "num_files":1.0
        },
        {
            "index":1441,
            "vuln_id":"GHSA-9w7h-3wwh-6m5q",
            "cwe_id":"{'CWE-79'}",
            "score":6.3,
            "chain":"{'https:\/\/github.com\/microweber\/microweber\/commit\/ad3928f67b2cd4443f4323d858b666d35a919ba8'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Microweber Microweber prior to 1.2.15 is vulnerable to reflected cross-site scripting on demo.microweber.org\/demo\/module\/. This allows the execution of arbitrary JavaScript as the attacked user.",
            "published_date":"2022-04-23",
            "chain_len":1,
            "project":"https:\/\/github.com\/microweber\/microweber",
            "commit_href":"https:\/\/github.com\/microweber\/microweber\/commit\/ad3928f67b2cd4443f4323d858b666d35a919ba8",
            "commit_sha":"ad3928f67b2cd4443f4323d858b666d35a919ba8",
            "patch":"SINGLE",
            "chain_ord":"['ad3928f67b2cd4443f4323d858b666d35a919ba8']",
            "before_first_fix_commit":"{'3e47c4f1933aa3ffd0975e24e34b7af35de947b4'}",
            "last_fix_commit":"ad3928f67b2cd4443f4323d858b666d35a919ba8",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/22\/2022, 16:26:41",
            "message":"update",
            "author":"Peter Ivanov",
            "comments":null,
            "stats":"{'additions': 7, 'deletions': 2, 'total': 9}",
            "files":"{'src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php': {'additions': 7, 'deletions': 2, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/microweber\/microweber\/raw\/ad3928f67b2cd4443f4323d858b666d35a919ba8\/src%2FMicroweberPackages%2FApp%2FHttp%2FControllers%2FApiController.php', 'patch': \"@@ -611,18 +611,23 @@ public function module()\\n             $request_data_new = [];\\n             $antixss = new AntiXSS();\\n             foreach ($request_data as $k=>$v){\\n-\\n+                if(is_string($v)) {\\n+                    $v = str_replace('<', '-', $v);\\n+                    $v = str_replace('>', '-', $v);\\n+                }\\n                 $v = $antixss->xss_clean($v);\\n \\n                 if(is_string($k)){\\n+                    $k = str_replace('<', '-', $k);\\n+                    $k = str_replace('>', '-', $k);\\n                     $k = $antixss->xss_clean($k);\\n                     if($k){\\n                         $request_data_new[$k] = $v;\\n                     }\\n                 } else {\\n                     $request_data_new[$k] = $v;\\n                 }\\n-                \\n+\\n             }\\n             $request_data = $request_data_new;\\n         }\"}}",
            "message_norm":"update",
            "language":"ro",
            "entities":"[('update', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/MicroweberPackages\/App\/Http\/Controllers\/ApiController.php'])",
            "num_files":1.0
        },
        {
            "index":713,
            "vuln_id":"GHSA-5wpj-c6f7-24x8",
            "cwe_id":"{'CWE-475', 'CWE-20'}",
            "score":5.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dbdd98c37bc25249e8f288bd30d01e118a7b4498'}",
            "dataset":"osv",
            "summary":"Undefined behavior when users supply invalid resource handles ### Impact\nMultiple TensorFlow operations misbehave in eager mode when the resource handle provided to them is invalid:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.QueueIsClosedV2(handle=[])\n```\n\n```python\nimport tensorflow as tf\n\ntf.summary.flush(writer=())\n```\n  \nIn graph mode, it would have been impossible to perform these API calls, but migration to TF 2.x eager mode opened up this vulnerability. If the resource handle is empty, then a reference is bound to a null pointer inside TensorFlow codebase (various codepaths). This is undefined behavior.\n\n### Patches\nWe have patched the issue in GitHub commit [a5b89cd68c02329d793356bda85d079e9e69b4e7](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7) and GitHub commit [dbdd98c37bc25249e8f288bd30d01e118a7b4498](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/dbdd98c37bc25249e8f288bd30d01e118a7b4498).\n\nThe fix will be included in TensorFlow 2.9.0. We will also cherrypick this commit on TensorFlow 2.8.1, TensorFlow 2.7.2, and TensorFlow 2.6.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Hong Jin from Singapore Management University.",
            "published_date":"2022-05-24",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/a5b89cd68c02329d793356bda85d079e9e69b4e7",
            "commit_sha":"a5b89cd68c02329d793356bda85d079e9e69b4e7",
            "patch":"MULTI",
            "chain_ord":"['dbdd98c37bc25249e8f288bd30d01e118a7b4498', 'a5b89cd68c02329d793356bda85d079e9e69b4e7']",
            "before_first_fix_commit":"{'c2ce4c72fdc9658e23dd9d42cb9ed30bdd60c2a6'}",
            "last_fix_commit":"a5b89cd68c02329d793356bda85d079e9e69b4e7",
            "chain_ord_pos":2.0,
            "commit_datetime":"04\/30\/2022, 04:07:06",
            "message":"Fix empty resource handle vulnerability.\n\nSome ops that attempt to extract a resource handle from user input\ncan lead to nullptr dereferences.  This returns an error in such\na case.\n\nPiperOrigin-RevId: 445571938",
            "author":"Antonio Sanchez",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/common_runtime\/eager\/execute.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/a5b89cd68c02329d793356bda85d079e9e69b4e7\/tensorflow%2Fcore%2Fcommon_runtime%2Feager%2Fexecute.cc', 'patch': '@@ -304,6 +304,9 @@ Status GetDeviceForInput(const EagerOperation& op, const EagerContext& ctx,\\n     const Tensor* tensor;\\n     \/\/ TODO(fishx): Avoid blocking here.\\n     TF_RETURN_IF_ERROR(tensor_handle->Tensor(&tensor));\\n+    if (tensor->NumElements() == 0) {\\n+      return errors::InvalidArgument(\"Empty resource handle\");\\n+    }\\n     const ResourceHandle& handle = tensor->flat<ResourceHandle>()(0);\\n     device_name = handle.device();'}}",
            "message_norm":"fix empty resource handle vulnerability.\n\nsome ops that attempt to extract a resource handle from user input\ncan lead to nullptr dereferences.  this returns an error in such\na case.\n\npiperorigin-revid: 445571938",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('vulnerability', 'SECWORD', ''), ('nullptr', 'SECWORD', ''), ('error', 'FLAW', ''), ('445571938', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/common_runtime\/eager\/execute.cc'])",
            "num_files":1.0
        },
        {
            "index":3034,
            "vuln_id":"GHSA-v2p6-4mp7-3r9v",
            "cwe_id":"{'CWE-400'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/epeli\/underscore.string\/commit\/f486cd684c94c12db48b45d52b1472a1b9661029'}",
            "dataset":"osv",
            "summary":"Regular Expression Denial of Service in underscore.string Versions of `underscore.string` prior to *3.3.5* are vulnerable to Regular Expression Denial of Service (ReDoS).\n\nThe function `unescapeHTML` is vulnerable to ReDoS due to an overly-broad regex. The slowdown is approximately 2s for 50,000 characters but grows exponentially with larger inputs.\n\n\n## Recommendation\n\nUpgrade to version 3.3.5 or higher.",
            "published_date":"2019-06-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/epeli\/underscore.string",
            "commit_href":"https:\/\/github.com\/epeli\/underscore.string\/commit\/f486cd684c94c12db48b45d52b1472a1b9661029",
            "commit_sha":"f486cd684c94c12db48b45d52b1472a1b9661029",
            "patch":"SINGLE",
            "chain_ord":"['f486cd684c94c12db48b45d52b1472a1b9661029']",
            "before_first_fix_commit":"{'2f78f0d6e36d553484a1bf5fe5ed1998f013dea5'}",
            "last_fix_commit":"f486cd684c94c12db48b45d52b1472a1b9661029",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/03\/2018, 21:34:42",
            "message":"Try to fix regexp redos\n\nfixes  #510",
            "author":"Esa-Matti Suuronen",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'unescapeHTML.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/esamattis\/underscore.string\/raw\/f486cd684c94c12db48b45d52b1472a1b9661029\/unescapeHTML.js', 'patch': \"@@ -2,7 +2,7 @@ var makeString = require('.\/helper\/makeString');\\n var htmlEntities = require('.\/helper\/htmlEntities');\\n \\n module.exports = function unescapeHTML(str) {\\n-  return makeString(str).replace(\/\\\\&([^;]+);\/g, function(entity, entityCode) {\\n+  return makeString(str).replace(\/\\\\&([^;]{1,10});\/g, function(entity, entityCode) {\\n     var match;\\n \\n     if (entityCode in htmlEntities) {\"}}",
            "message_norm":"try to fix regexp redos\n\nfixes  #510",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('redos', 'SECWORD', ''), ('fixes', 'ACTION', ''), ('#510', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['unescapeHTML.js'])",
            "num_files":1.0
        },
        {
            "index":1328,
            "vuln_id":"GHSA-9722-rr68-rfpg",
            "cwe_id":"{'CWE-610', 'CWE-73'}",
            "score":3.4,
            "chain":"{'https:\/\/github.com\/octobercms\/october\/commit\/6711dae8ef70caf0e94cec434498012a2ccd86b8'}",
            "dataset":"osv",
            "summary":"Upload whitelisted files to any directory in OctoberCMS ### Impact\nAn attacker can exploit this vulnerability to upload jpg, jpeg, bmp, png, webp, gif, ico, css, js, woff, woff2, svg, ttf, eot, json, md, less, sass, scss, xml files to any directory of an October CMS server. The vulnerability is only exploitable by an authenticated backend user with the `cms.manage_assets` permission.\n\n### Patches\nIssue has been patched in Build 466 (v1.0.466).\n\n### Workarounds\nApply https:\/\/github.com\/octobercms\/october\/commit\/6711dae8ef70caf0e94cec434498012a2ccd86b8 to your installation manually if unable to upgrade to Build 466.\n\n### References\nReported by [Sivanesh Ashok](https:\/\/stazot.com\/)\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Email us at [hello@octobercms.com](mailto:hello@octobercms.com)\n\n### Threat assessment:\n<img width=\"1241\" alt=\"Screen Shot 2020-03-31 at 12 21 10 PM\" src=\"https:\/\/user-images.githubusercontent.com\/7253840\/78061230-255f5400-734a-11ea-92b4-1120f6960505.png\">",
            "published_date":"2020-06-03",
            "chain_len":1,
            "project":"https:\/\/github.com\/octobercms\/october",
            "commit_href":"https:\/\/github.com\/octobercms\/october\/commit\/6711dae8ef70caf0e94cec434498012a2ccd86b8",
            "commit_sha":"6711dae8ef70caf0e94cec434498012a2ccd86b8",
            "patch":"SINGLE",
            "chain_ord":"['6711dae8ef70caf0e94cec434498012a2ccd86b8']",
            "before_first_fix_commit":"{'2b8939cc8b5b6fe81e093fe2c9f883ada4e3c8cc'}",
            "last_fix_commit":"6711dae8ef70caf0e94cec434498012a2ccd86b8",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/31\/2020, 10:09:18",
            "message":"Improve asset file path handling when moving assets",
            "author":"Luke Towers",
            "comments":null,
            "stats":"{'additions': 8, 'deletions': 1, 'total': 9}",
            "files":"{'modules\/cms\/widgets\/AssetList.php': {'additions': 8, 'deletions': 1, 'changes': 9, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/octobercms\/october\/raw\/6711dae8ef70caf0e94cec434498012a2ccd86b8\/modules%2Fcms%2Fwidgets%2FAssetList.php', 'patch': \"@@ -333,13 +333,20 @@ public function onMove()\\n \\n             $basename = basename($path);\\n             $originalFullPath = $this->getFullPath($path);\\n-            $newFullPath = rtrim($destinationFullPath, '\/').'\/'.$basename;\\n+            $newFullPath = realpath(rtrim($destinationFullPath, '\/')) . '\/' . $basename;\\n             $safeDir = $this->getAssetsPath();\\n \\n             if ($originalFullPath == $newFullPath) {\\n                 continue;\\n             }\\n \\n+            if (!starts_with($newFullPath, $safeDir)) {\\n+                throw new ApplicationException(Lang::get(\\n+                    'cms::lang.asset.error_moving_file',\\n+                    ['file' => $basename]\\n+                ));\\n+            }\\n+\\n             if (is_file($originalFullPath)) {\\n                 if (!@File::move($originalFullPath, $newFullPath)) {\\n                     throw new ApplicationException(Lang::get(\"}}",
            "message_norm":"improve asset file path handling when moving assets",
            "language":"en",
            "entities":"[('improve', 'ACTION', ''), ('asset', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['modules\/cms\/widgets\/AssetList.php'])",
            "num_files":1.0
        },
        {
            "index":1041,
            "vuln_id":"GHSA-7jh9-6cpf-h4m7",
            "cwe_id":"{'CWE-79'}",
            "score":0.0,
            "chain":"{'https:\/\/github.com\/MrSwitch\/hello.js\/commit\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669'}",
            "dataset":"osv",
            "summary":"XSS in hello.js This affects the package hello.js before 1.18.6. The code get the param oauth_redirect from url and pass it to location.assign without any check and sanitisation. So we can simply pass some XSS payloads into the url param oauth_redirect, such as javascript:alert(1).",
            "published_date":"2021-01-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/MrSwitch\/hello.js",
            "commit_href":"https:\/\/github.com\/MrSwitch\/hello.js\/commit\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669",
            "commit_sha":"d6f5137f30de6e0ef7048191ee6ae575fdc2f669",
            "patch":"SINGLE",
            "chain_ord":"['d6f5137f30de6e0ef7048191ee6ae575fdc2f669']",
            "before_first_fix_commit":"{'3b79ec93781b3d7b9c0b56f598e060301d1f3e73'}",
            "last_fix_commit":"d6f5137f30de6e0ef7048191ee6ae575fdc2f669",
            "chain_ord_pos":1.0,
            "commit_datetime":"10\/06\/2020, 11:20:56",
            "message":"fix(xss): oauth_redirect should be a valid url",
            "author":"Andrew Dodson",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 1, 'total': 6}",
            "files":"{'src\/hello.js': {'additions': 5, 'deletions': 1, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/MrSwitch\/hello.js\/raw\/d6f5137f30de6e0ef7048191ee6ae575fdc2f669\/src%2Fhello.js', 'patch': \"@@ -1388,8 +1388,12 @@ hello.utils.extend(hello.utils, {\\n \\t\\t\/\/ (URI Fragments within 302 Location URI are lost over HTTPS)\\n \\t\\t\/\/ Loading the redirect.html before triggering the OAuth Flow seems to fix it.\\n \\t\\telse if ('oauth_redirect' in p) {\\n+\\t\\t\\tvar url = decodeURIComponent(p.oauth_redirect);\\n+\\n+\\t\\t\\tif (isValidUrl(url)) {\\n+\\t\\t\\t\\tlocation.assign(url);\\n+\\t\\t\\t}\\n \\n-\\t\\t\\tlocation.assign(decodeURIComponent(p.oauth_redirect));\\n \\t\\t\\treturn;\\n \\t\\t}\"}}",
            "message_norm":"fix(xss): oauth_redirect should be a valid url",
            "language":"en",
            "entities":"[('fix(xss', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/hello.js'])",
            "num_files":1.0
        },
        {
            "index":1336,
            "vuln_id":"GHSA-97wf-p777-86jq",
            "cwe_id":"{'CWE-369'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d'}",
            "dataset":"osv",
            "summary":"Division by zero in TFLite's implementation of Split ### Impact\nThe implementation of the `Split` TFLite operator is [vulnerable to a division by zero error](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/e2752089ef7ce9bcf3db0ec618ebd23ea119d0c7\/tensorflow\/lite\/kernels\/split.cc#L63-L65):\n\n```cc\nTF_LITE_ENSURE_MSG(context, input_size % num_splits == 0, \"Not an even split\");\nconst int slice_size = input_size \/ num_splits;\n```\n\nAn attacker can craft a model such that `num_splits` would be 0.\n\n### Patches\nWe have patched the issue in GitHub commit [b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "commit_sha":"b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "patch":"SINGLE",
            "chain_ord":"['b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d']",
            "before_first_fix_commit":"{'e2752089ef7ce9bcf3db0ec618ebd23ea119d0c7'}",
            "last_fix_commit":"b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/28\/2021, 22:31:26",
            "message":"Prevent division by 0\n\nPiperOrigin-RevId: 370998952\nChange-Id: I6b1d49079624ee1447d2d9b53a8976fb356cc8f5",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'tensorflow\/lite\/kernels\/split.cc': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/b22786e7e9b7bdb6a56936ff29cc7e9968d7bc1d\/tensorflow%2Flite%2Fkernels%2Fsplit.cc', 'patch': '@@ -60,6 +60,7 @@ TfLiteStatus ResizeOutputTensors(TfLiteContext* context, TfLiteNode* node,\\n   TF_LITE_ENSURE(context, axis_value < NumDimensions(input));\\n \\n   const int input_size = SizeOfDimension(input, axis_value);\\n+  TF_LITE_ENSURE(context, num_splits != 0);\\n   TF_LITE_ENSURE_MSG(context, input_size % num_splits == 0,\\n                      \"Not an even split\");\\n   const int slice_size = input_size \/ num_splits;'}}",
            "message_norm":"prevent division by 0\n\npiperorigin-revid: 370998952\nchange-id: i6b1d49079624ee1447d2d9b53a8976fb356cc8f5",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('division by 0', 'SECWORD', ''), ('370998952', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/lite\/kernels\/split.cc'])",
            "num_files":1.0
        },
        {
            "index":2725,
            "vuln_id":"GHSA-q97v-764g-r2rp",
            "cwe_id":"{'CWE-284'}",
            "score":8.8,
            "chain":"{'https:\/\/github.com\/gollum\/grit_adapter\/commit\/4520d973c81fecfebbeacd2ef2f1849d763951c7'}",
            "dataset":"osv",
            "summary":"High severity vulnerability that affects gollum and gollum-lib The gollum-grit_adapter Ruby gem dependency in gollum before 3.1.1 and the gollum-lib gem dependency in gollum-lib before 4.0.1 when the string \"master\" is in any of the wiki documents, allows remote authenticated users to execute arbitrary code via the -O or --open-files-in-pager flags.",
            "published_date":"2017-11-16",
            "chain_len":1,
            "project":"https:\/\/github.com\/gollum\/grit_adapter",
            "commit_href":"https:\/\/github.com\/gollum\/grit_adapter\/commit\/4520d973c81fecfebbeacd2ef2f1849d763951c7",
            "commit_sha":"4520d973c81fecfebbeacd2ef2f1849d763951c7",
            "patch":"SINGLE",
            "chain_ord":"['4520d973c81fecfebbeacd2ef2f1849d763951c7']",
            "before_first_fix_commit":"{'1b04ba5a1e822a990d6bde99b7332eef56a9998c'}",
            "last_fix_commit":"4520d973c81fecfebbeacd2ef2f1849d763951c7",
            "chain_ord_pos":1.0,
            "commit_datetime":"12\/04\/2014, 12:45:17",
            "message":"Fix security issue with git grep -O",
            "author":"Dawa Ometto",
            "comments":"{'com_1': {'author': 'dometto', 'datetime': '12\/04\/2014, 13:53:01', 'body': 'Escape the `ls_files` query for good measure.'}}",
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'lib\/grit_adapter\/git_layer_grit.rb': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gollum\/grit_adapter\/raw\/4520d973c81fecfebbeacd2ef2f1849d763951c7\/lib%2Fgrit_adapter%2Fgit_layer_grit.rb', 'patch': '@@ -136,6 +136,8 @@ def exist?\\n       \\n       def grep(query, options={})\\n         ref = options[:ref] ? options[:ref] : \"HEAD\"\\n+        query = Shellwords.split(query).select {|q| !(q =~ \/^(-O)|(--open-files-in-pager)\/) }\\n+        query = Shellwords.join(query)\\n         args = [{}, \\'-I\\', \\'-i\\', \\'-c\\', query, ref, \\'--\\']\\n         args << options[:path] if options[:path]\\n         result = @git.grep(*args).split(\"\\\\n\")\\n@@ -165,6 +167,7 @@ def rev_list(options, *refs)\\n       \\n       def ls_files(query, options = {})\\n         options[:ref] = options[:ref] ? options[:ref] : \"HEAD\"\\n+        query = Shellwords.shellescape(query)\\n         @git.ls_files({}, \"*#{query}*\").split(\"\\\\n\")\\n       end'}}",
            "message_norm":"fix security issue with git grep -o",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('security', 'SECWORD', ''), ('issue', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['lib\/grit_adapter\/git_layer_grit.rb'])",
            "num_files":1.0
        },
        {
            "index":884,
            "vuln_id":"GHSA-6qgm-fv6v-rfpv",
            "cwe_id":"{'CWE-120', 'CWE-119'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23'}",
            "dataset":"osv",
            "summary":"Overflow\/denial of service in `tf.raw_ops.ReverseSequence` ### Impact\nThe implementation of `tf.raw_ops.ReverseSequence` allows for stack overflow and\/or `CHECK`-fail based denial of service.\n\n```python\nimport tensorflow as tf\n\ninput = tf.zeros([1, 1, 1], dtype=tf.int32)\nseq_lengths = tf.constant([0], shape=[1], dtype=tf.int32)\n\ntf.raw_ops.ReverseSequence(\n    input=input, seq_lengths=seq_lengths, seq_dim=-2, batch_dim=0)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/5b3b071975e01f0d250c928b2a8f901cd53b90a7\/tensorflow\/core\/kernels\/reverse_sequence_op.cc#L114-L118) fails to validate that `seq_dim` and `batch_dim` arguments are valid.\n  \nNegative values for `seq_dim` can result in stack overflow or `CHECK`-failure, depending on the version of Eigen code used to implement the operation. Similar behavior can be exhibited by invalid values of `batch_dim`.\n  \n### Patches\nWe have patched the issue in GitHub commit [ecf768cbe50cedc0a45ce1ee223146a3d3d26d23](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution \nThis vulnerability has been reported by Ying Wang and Yakun Zhang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23",
            "commit_sha":"ecf768cbe50cedc0a45ce1ee223146a3d3d26d23",
            "patch":"SINGLE",
            "chain_ord":"['ecf768cbe50cedc0a45ce1ee223146a3d3d26d23']",
            "before_first_fix_commit":"{'5b3b071975e01f0d250c928b2a8f901cd53b90a7'}",
            "last_fix_commit":"ecf768cbe50cedc0a45ce1ee223146a3d3d26d23",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 19:07:57",
            "message":"Add missing validations to reverse_sequence_op\n\nPiperOrigin-RevId: 372178683\nChange-Id: Iac97ebab5b342f1262c77a7d9bcb4267b305ce5b",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'tensorflow\/core\/kernels\/reverse_sequence_op.cc': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/ecf768cbe50cedc0a45ce1ee223146a3d3d26d23\/tensorflow%2Fcore%2Fkernels%2Freverse_sequence_op.cc', 'patch': '@@ -115,6 +115,10 @@ class ReverseSequenceOp : public OpKernel {\\n       : OpKernel(context) {\\n     OP_REQUIRES_OK(context, context->GetAttr(\"batch_dim\", &batch_dim_));\\n     OP_REQUIRES_OK(context, context->GetAttr(\"seq_dim\", &seq_dim_));\\n+    OP_REQUIRES(context, batch_dim_ >= 0,\\n+                errors::InvalidArgument(\"Invalid batch_dim \", batch_dim_));\\n+    OP_REQUIRES(context, seq_dim_ >= 0,\\n+                errors::InvalidArgument(\"Invalid seq_dim \", seq_dim_));\\n   }\\n \\n   void Compute(OpKernelContext* context) override {'}}",
            "message_norm":"add missing validations to reverse_sequence_op\n\npiperorigin-revid: 372178683\nchange-id: iac97ebab5b342f1262c77a7d9bcb4267b305ce5b",
            "language":"en",
            "entities":"[('add', 'ACTION', ''), ('missing validations', 'SECWORD', ''), ('372178683', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/reverse_sequence_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3441,
            "vuln_id":"GHSA-xhp9-4947-rq78",
            "cwe_id":"{'CWE-755'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/bottlepy\/bottle\/commit\/a2b0ee6bb4ce88895429ec4aca856616244c4c4c', 'https:\/\/github.com\/bottlepy\/bottle\/commit\/e140e1b54da721a660f2eb9d58a106b7b3ff2f00'}",
            "dataset":"osv",
            "summary":"Denial of service in bottle Bottle before 0.12.20 mishandles errors during early request binding.",
            "published_date":"2022-06-03",
            "chain_len":2,
            "project":"https:\/\/github.com\/bottlepy\/bottle",
            "commit_href":"https:\/\/github.com\/bottlepy\/bottle\/commit\/e140e1b54da721a660f2eb9d58a106b7b3ff2f00",
            "commit_sha":"e140e1b54da721a660f2eb9d58a106b7b3ff2f00",
            "patch":"MULTI",
            "chain_ord":"['e140e1b54da721a660f2eb9d58a106b7b3ff2f00', 'a2b0ee6bb4ce88895429ec4aca856616244c4c4c']",
            "before_first_fix_commit":"{'04b27f185412250f9389a6a14d1e1c516c87e13c'}",
            "last_fix_commit":"a2b0ee6bb4ce88895429ec4aca856616244c4c4c",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/26\/2022, 12:49:32",
            "message":"Gracefully handle errors during early request binding.",
            "author":"Marcel Hellkamp",
            "comments":null,
            "stats":"{'additions': 9, 'deletions': 7, 'total': 16}",
            "files":"{'bottle.py': {'additions': 9, 'deletions': 7, 'changes': 16, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/bottlepy\/bottle\/raw\/e140e1b54da721a660f2eb9d58a106b7b3ff2f00\/bottle.py', 'patch': \"@@ -848,17 +848,19 @@ def default_error_handler(self, res):\\n         return tob(template(ERROR_PAGE_TEMPLATE, e=res))\\n \\n     def _handle(self, environ):\\n-        path = environ['bottle.raw_path'] = environ['PATH_INFO']\\n-        if py3k:\\n-            try:\\n-                environ['PATH_INFO'] = path.encode('latin1').decode('utf8')\\n-            except UnicodeError:\\n-                return HTTPError(400, 'Invalid path string. Expected UTF-8')\\n-\\n         try:\\n+\\n             environ['bottle.app'] = self\\n             request.bind(environ)\\n             response.bind()\\n+\\n+            path = environ['bottle.raw_path'] = environ['PATH_INFO']\\n+            if py3k:\\n+                try:\\n+                    environ['PATH_INFO'] = path.encode('latin1').decode('utf8')\\n+                except UnicodeError:\\n+                    return HTTPError(400, 'Invalid path string. Expected UTF-8')\\n+\\n             try:\\n                 self.trigger_hook('before_request')\\n                 route, args = self.router.match(environ)\"}}",
            "message_norm":"gracefully handle errors during early request binding.",
            "language":"en",
            "entities":"[('errors', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['bottle.py'])",
            "num_files":1.0
        },
        {
            "index":2588,
            "vuln_id":"GHSA-ph87-fvjr-v33w",
            "cwe_id":"{'CWE-617'}",
            "score":2.5,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/31bd5026304677faa8a0b77602c6154171b9aec1'}",
            "dataset":"osv",
            "summary":"CHECK-fail in `tf.raw_ops.RFFT` ### Impact\nAn attacker can cause a denial of service by exploiting a `CHECK`-failure coming from the implementation of `tf.raw_ops.RFFT`:\n    \n```python\nimport tensorflow as tf\n\ninputs = tf.constant([1], shape=[1], dtype=tf.float32)\nfft_length = tf.constant([0], shape=[1], dtype=tf.int32)\n\ntf.raw_ops.RFFT(input=inputs, fft_length=fft_length)\n```\n\nThe above example causes Eigen code to operate on an empty matrix. This triggers on an assertion and causes program termination.\n    \n### Patches\nWe have patched the issue in GitHub commit [31bd5026304677faa8a0b77602c6154171b9aec1](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/31bd5026304677faa8a0b77602c6154171b9aec1).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions. \n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/31bd5026304677faa8a0b77602c6154171b9aec1",
            "commit_sha":"31bd5026304677faa8a0b77602c6154171b9aec1",
            "patch":"SINGLE",
            "chain_ord":"['31bd5026304677faa8a0b77602c6154171b9aec1']",
            "before_first_fix_commit":"{'1c56f53be0b722ca657cbc7df461ed676c8642a2'}",
            "last_fix_commit":"31bd5026304677faa8a0b77602c6154171b9aec1",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/05\/2021, 00:42:54",
            "message":"Prevent check fail in FFT\n\nPiperOrigin-RevId: 372031044\nChange-Id: I50994e3e8a5d1342d01bde80256f6bf2730ca299",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 3, 'deletions': 0, 'total': 3}",
            "files":"{'tensorflow\/core\/kernels\/fft_ops.cc': {'additions': 3, 'deletions': 0, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/31bd5026304677faa8a0b77602c6154171b9aec1\/tensorflow%2Fcore%2Fkernels%2Ffft_ops.cc', 'patch': '@@ -222,6 +222,9 @@ class FFTCPU : public FFTBase {\\n       input_slice_sizes[i] = fft_shape[i - 1];\\n       temp_shape.AddDim(fft_shape[i - 1]);\\n     }\\n+    OP_REQUIRES(ctx, temp_shape.num_elements() > 0,\\n+                errors::InvalidArgument(\"Obtained a FFT shape of 0 elements: \",\\n+                                        temp_shape.DebugString()));\\n \\n     auto output = out->flat_inner_dims<ComplexT, FFTRank + 1>();\\n     const Eigen::DSizes<Eigen::DenseIndex, FFTRank + 1> zero_start_indices;'}}",
            "message_norm":"prevent check fail in fft\n\npiperorigin-revid: 372031044\nchange-id: i50994e3e8a5d1342d01bde80256f6bf2730ca299",
            "language":"en",
            "entities":"[('prevent', 'ACTION', ''), ('372031044', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fft_ops.cc'])",
            "num_files":1.0
        },
        {
            "index":1525,
            "vuln_id":"GHSA-c9qf-r67m-p7cg",
            "cwe_id":"{'CWE-476'}",
            "score":7.7,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5dc7f6981fdaf74c8c5be41f393df705841fb7c5'}",
            "dataset":"osv",
            "summary":"Null pointer dereference in `CompressElement` ### Impact\nIt is possible to trigger a null pointer dereference in TensorFlow by passing an invalid input to `tf.raw_ops.CompressElement`:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.CompressElement(components=[[]])\n```\n  \nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/47a06f40411a69c99f381495f490536972152ac0\/tensorflow\/core\/data\/compression_utils.cc#L34) was accessing the size of a buffer obtained from the return of a separate function call before validating that said buffer is valid.\n\n### Patches\nWe have patched the issue in GitHub commit [5dc7f6981fdaf74c8c5be41f393df705841fb7c5](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5dc7f6981fdaf74c8c5be41f393df705841fb7c5).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for  more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360. Concurrently, it was resolved in `master` branch as it was also discovered internally and fixed before the report was handled.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/5dc7f6981fdaf74c8c5be41f393df705841fb7c5",
            "commit_sha":"5dc7f6981fdaf74c8c5be41f393df705841fb7c5",
            "patch":"SINGLE",
            "chain_ord":"['5dc7f6981fdaf74c8c5be41f393df705841fb7c5']",
            "before_first_fix_commit":"{'de9a4335c96bec8fa69abb89618b1daa4b2459fa'}",
            "last_fix_commit":"5dc7f6981fdaf74c8c5be41f393df705841fb7c5",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/15\/2021, 05:07:07",
            "message":"Fix accessing possible nullptr in tensorflow::data::CompressElement and UncompressElement which are used in tf.data.service.\n\nPiperOrigin-RevId: 373920841\nChange-Id: Ia88d78aee09fa19bb53a0f163fd19620d0c68743",
            "author":"A. Unique TensorFlower",
            "comments":null,
            "stats":"{'additions': 15, 'deletions': 7, 'total': 22}",
            "files":"{'tensorflow\/core\/data\/compression_utils.cc': {'additions': 15, 'deletions': 7, 'changes': 22, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/5dc7f6981fdaf74c8c5be41f393df705841fb7c5\/tensorflow%2Fcore%2Fdata%2Fcompression_utils.cc', 'patch': '@@ -29,9 +29,10 @@ Status CompressElement(const std::vector<Tensor>& element,\\n   int64 total_size = 0;\\n   for (auto& component : element) {\\n     if (DataTypeCanUseMemcpy(component.dtype())) {\\n-      \/\/ Some datatypes can be memcopied, allowing us to save two copies\\n-      \/\/ (AsProtoTensorContent and SerializeToArray).\\n-      total_size += DMAHelper::buffer(&component)->size();\\n+      const TensorBuffer* buffer = DMAHelper::buffer(&component);\\n+      if (buffer) {\\n+        total_size += buffer->size();\\n+      }\\n     } else {\\n       non_memcpy_components.emplace_back();\\n       component.AsProtoTensorContent(&non_memcpy_components.back());\\n@@ -53,8 +54,10 @@ Status CompressElement(const std::vector<Tensor>& element,\\n     component.shape().AsProto(metadata->mutable_tensor_shape());\\n     if (DataTypeCanUseMemcpy(component.dtype())) {\\n       const TensorBuffer* buffer = DMAHelper::buffer(&component);\\n-      memcpy(position, buffer->data(), buffer->size());\\n-      metadata->set_tensor_size_bytes(buffer->size());\\n+      if (buffer) {\\n+        memcpy(position, buffer->data(), buffer->size());\\n+        metadata->set_tensor_size_bytes(buffer->size());\\n+      }\\n     } else {\\n       TensorProto& proto = non_memcpy_components[non_memcpy_component_index++];\\n       proto.SerializeToArray(position, proto.ByteSizeLong());\\n@@ -94,8 +97,13 @@ Status UncompressElement(const CompressedElement& compressed,\\n     if (DataTypeCanUseMemcpy(metadata.dtype())) {\\n       out->emplace_back(metadata.dtype(), metadata.tensor_shape());\\n       TensorBuffer* buffer = DMAHelper::buffer(&out->back());\\n-      iov[i].iov_base = buffer->data();\\n-      iov[i].iov_len = buffer->size();\\n+      if (buffer) {\\n+        iov[i].iov_base = buffer->data();\\n+        iov[i].iov_len = buffer->size();\\n+      } else {\\n+        iov[i].iov_base = nullptr;\\n+        iov[i].iov_len = 0;\\n+      }\\n     } else {\\n       \/\/ Allocate an empty Tensor. We will fill it out later after\\n       \/\/ uncompressing into the tensor_proto_str.'}}",
            "message_norm":"fix accessing possible nullptr in tensorflow::data::compresselement and uncompresselement which are used in tf.data.service.\n\npiperorigin-revid: 373920841\nchange-id: ia88d78aee09fa19bb53a0f163fd19620d0c68743",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('nullptr', 'SECWORD', ''), ('tensorflow::data::compresselement', 'SECWORD', ''), ('uncompresselement', 'SECWORD', ''), ('373920841', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/data\/compression_utils.cc'])",
            "num_files":1.0
        },
        {
            "index":3053,
            "vuln_id":"GHSA-v592-xf75-856p",
            "cwe_id":"{'CWE-682'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/ethereum\/go-ethereum\/commit\/d990df909d7839640143344e79356754384dcdd0'}",
            "dataset":"osv",
            "summary":"Erroneous Proof of Work calculation in geth ### Impact\nAn ethash mining DAG generation flaw in Geth could cause miners to erroneously calculate PoW in an upcoming epoch (estimated early January, 2021). This happened on the ETC chain on 2020-11-06. This issue is relevant only for miners, non-mining nodes are unaffected.\n\n### Patches\nThis issue is also fixed as of 1.9.24. Thanks to @slavikus for bringing the issue to our attention and writing the fix. \n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [go-ethereum](https:\/\/github.com\/ethereum\/go-ethereum)\n* Email us at [security@ethereum.org](mailto:security@ethereum.org)",
            "published_date":"2021-06-29",
            "chain_len":1,
            "project":"https:\/\/github.com\/ethereum\/go-ethereum",
            "commit_href":"https:\/\/github.com\/ethereum\/go-ethereum\/commit\/d990df909d7839640143344e79356754384dcdd0",
            "commit_sha":"d990df909d7839640143344e79356754384dcdd0",
            "patch":"SINGLE",
            "chain_ord":"['d990df909d7839640143344e79356754384dcdd0']",
            "before_first_fix_commit":"{'27d93c1848846b75d0e67fcac284a0d417acd47c'}",
            "last_fix_commit":"d990df909d7839640143344e79356754384dcdd0",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/11\/2020, 20:13:12",
            "message":"consensus\/ethash: use 64bit indexes for the DAG generation (#21793)\n\n* Bit boundary fix for the DAG generation routine\r\n\r\n* Fix unnecessary conversion warnings\r\n\r\nCo-authored-by: Sergey Pavlov <spavlov@gmail.com>",
            "author":"Slava Karpenko",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 5, 'total': 10}",
            "files":"{'consensus\/ethash\/algorithm.go': {'additions': 5, 'deletions': 5, 'changes': 10, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ethereum\/go-ethereum\/raw\/d990df909d7839640143344e79356754384dcdd0\/consensus%2Fethash%2Falgorithm.go', 'patch': '@@ -304,16 +304,16 @@ func generateDataset(dest []uint32, epoch uint64, cache []uint32) {\\n \\t\\t\\tkeccak512 := makeHasher(sha3.NewLegacyKeccak512())\\n \\n \\t\\t\\t\/\/ Calculate the data segment this thread should generate\\n-\\t\\t\\tbatch := uint32((size + hashBytes*uint64(threads) - 1) \/ (hashBytes * uint64(threads)))\\n-\\t\\t\\tfirst := uint32(id) * batch\\n+\\t\\t\\tbatch := (size + hashBytes*uint64(threads) - 1) \/ (hashBytes * uint64(threads))\\n+\\t\\t\\tfirst := uint64(id) * batch\\n \\t\\t\\tlimit := first + batch\\n-\\t\\t\\tif limit > uint32(size\/hashBytes) {\\n-\\t\\t\\t\\tlimit = uint32(size \/ hashBytes)\\n+\\t\\t\\tif limit > size\/hashBytes {\\n+\\t\\t\\t\\tlimit = size \/ hashBytes\\n \\t\\t\\t}\\n \\t\\t\\t\/\/ Calculate the dataset segment\\n \\t\\t\\tpercent := size \/ hashBytes \/ 100\\n \\t\\t\\tfor index := first; index < limit; index++ {\\n-\\t\\t\\t\\titem := generateDatasetItem(cache, index, keccak512)\\n+\\t\\t\\t\\titem := generateDatasetItem(cache, uint32(index), keccak512)\\n \\t\\t\\t\\tif swapped {\\n \\t\\t\\t\\t\\tswap(item)\\n \\t\\t\\t\\t}'}}",
            "message_norm":"consensus\/ethash: use 64bit indexes for the dag generation (#21793)\n\n* bit boundary fix for the dag generation routine\r\n\r\n* fix unnecessary conversion warnings\r\n\r\nco-authored-by: sergey pavlov <spavlov@gmail.com>",
            "language":"en",
            "entities":"[('#21793', 'ISSUE', ''), ('fix', 'ACTION', ''), ('warnings', 'FLAW', ''), ('spavlov@gmail.com', 'EMAIL', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['consensus\/ethash\/algorithm.go'])",
            "num_files":1.0
        },
        {
            "index":1522,
            "vuln_id":"GHSA-c9g6-9335-x697",
            "cwe_id":"{'CWE-20'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/sockjs\/sockjs-node\/commit\/dd7e642cd69ee74385825816d30642c43e051d16'}",
            "dataset":"osv",
            "summary":"Improper Input Validation in SocksJS-Node Incorrect handling of Upgrade header with the value websocket leads in crashing of containers hosting sockjs apps. This affects the package sockjs before 0.3.20.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/sockjs\/sockjs-node",
            "commit_href":"https:\/\/github.com\/sockjs\/sockjs-node\/commit\/dd7e642cd69ee74385825816d30642c43e051d16",
            "commit_sha":"dd7e642cd69ee74385825816d30642c43e051d16",
            "patch":"SINGLE",
            "chain_ord":"['dd7e642cd69ee74385825816d30642c43e051d16']",
            "before_first_fix_commit":"{'3e975c69cce21092c2ac9aa7a2f9dc40446f5ccd', '68e8fd7a92e0e73cac6894a282b6d84f33e879b3'}",
            "last_fix_commit":"dd7e642cd69ee74385825816d30642c43e051d16",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/09\/2020, 01:36:12",
            "message":"Merge pull request #266 from cakoose\/backport-writeHead-fix\n\nwriteHead: Don't end() response",
            "author":"Bryce Kahle",
            "comments":null,
            "stats":"{'additions': 0, 'deletions': 3, 'total': 3}",
            "files":"{'src\/webjs.coffee': {'additions': 0, 'deletions': 3, 'changes': 3, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/sockjs\/sockjs-node\/raw\/dd7e642cd69ee74385825816d30642c43e051d16\/src%2Fwebjs.coffee', 'patch': \"@@ -45,9 +45,6 @@ fake_response = (req, res) ->\\n             try\\n                 res.write(r.join('\\\\r\\\\n'))\\n             catch x\\n-            try\\n-                res.end()\\n-            catch x\\n         res.setHeader = (k, v) -> headers[k] = v\"}}",
            "message_norm":"merge pull request #266 from cakoose\/backport-writehead-fix\n\nwritehead: don't end() response",
            "language":"en",
            "entities":"[('#266', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/webjs.coffee'])",
            "num_files":1.0
        },
        {
            "index":2438,
            "vuln_id":"GHSA-mm4f-47ch-f7hx",
            "cwe_id":"{'CWE-77'}",
            "score":6.3,
            "chain":"{'https:\/\/github.com\/GuyMograbi\/kill-by-port\/commit\/ea5b1f377e196a4492e05ff070eba8b30b7372c4'}",
            "dataset":"osv",
            "summary":"Arbitrary code execution in kill-by-port This affects the package kill-by-port before 0.0.2. If (attacker-controlled) user input is given to the killByPort function, it is possible for an attacker to execute arbitrary commands. This is due to use of the child_process exec function without input sanitization.",
            "published_date":"2021-04-13",
            "chain_len":1,
            "project":"https:\/\/github.com\/GuyMograbi\/kill-by-port",
            "commit_href":"https:\/\/github.com\/GuyMograbi\/kill-by-port\/commit\/ea5b1f377e196a4492e05ff070eba8b30b7372c4",
            "commit_sha":"ea5b1f377e196a4492e05ff070eba8b30b7372c4",
            "patch":"SINGLE",
            "chain_ord":"['ea5b1f377e196a4492e05ff070eba8b30b7372c4']",
            "before_first_fix_commit":"{'16dcbe264b6b4a5ecf409661b42836dd286fd43f'}",
            "last_fix_commit":"ea5b1f377e196a4492e05ff070eba8b30b7372c4",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/24\/2021, 14:00:50",
            "message":"fix kill by port",
            "author":"Guy Mograbi",
            "comments":"{'com_1': {'author': 'abergmann', 'datetime': '03\/31\/2021, 08:07:34', 'body': '[CVE-2021-23363](https:\/\/nvd.nist.gov\/vuln\/detail\/CVE-2021-23363) was assigned to this commit.'}}",
            "stats":"{'additions': 1, 'deletions': 1, 'total': 2}",
            "files":"{'index.js': {'additions': 1, 'deletions': 1, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/GuyMograbi\/kill-by-port\/raw\/ea5b1f377e196a4492e05ff070eba8b30b7372c4\/index.js', 'patch': \"@@ -5,7 +5,7 @@ const exec = require('child_process').execSync\\n exports.killByPort = function (port) {\\n   var processId = null\\n   try {\\n-    processId = exec(`lsof -t -i:${port}`)\\n+    processId = exec(`lsof -t -i:${parseInt(port, 10)}`)\\n   } catch (e) {\\n \\n   }\"}}",
            "message_norm":"fix kill by port",
            "language":"en",
            "entities":"[('fix', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['index.js'])",
            "num_files":1.0
        },
        {
            "index":1560,
            "vuln_id":"GHSA-cjc7-49v2-jp64",
            "cwe_id":"{'CWE-787', 'CWE-665'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3', 'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc'}",
            "dataset":"osv",
            "summary":"Incomplete validation in `SparseAdd` ### Impact\nIncomplete validation in `SparseAdd` results in allowing attackers to exploit undefined behavior (dereferencing null pointers) as well as write outside of bounds of heap allocated data:\n\n```python\nimport tensorflow as tf\n\na_indices = tf.zeros([10, 97], dtype=tf.int64)\na_values = tf.zeros([10], dtype=tf.int64)\na_shape = tf.zeros([0], dtype=tf.int64)\n\nb_indices = tf.zeros([0, 0], dtype=tf.int64)\nb_values = tf.zeros([0], dtype=tf.int64)\nb_shape = tf.zeros([0], dtype=tf.int64)\n  \nthresh = 0\n\ntf.raw_ops.SparseAdd(a_indices=a_indices,\n                    a_values=a_values,\n                    a_shape=a_shape,\n                    b_indices=b_indices,\n                    b_values=b_values,\n                    b_shape=b_shape,\n                    thresh=thresh)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/656e7673b14acd7835dc778867f84916c6d1cac2\/tensorflow\/core\/kernels\/sparse_add_op.cc) has a large set of validation for the two sparse tensor inputs (6 tensors in total), but does not validate that the tensors are not empty or that the second dimension of `*_indices` matches the size of corresponding `*_shape`. This allows attackers to send tensor triples that represent invalid sparse tensors to abuse code assumptions that are not protected by validation.\n\n### Patches\nWe have patched the issue in GitHub commit [6fd02f44810754ae7481838b6a67c5df7f909ca3](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3) followed by GitHub commit  [41727ff06111117bdf86b37db198217fd7a143cc](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/41727ff06111117bdf86b37db198217fd7a143cc).\n\nThe fix will be included in TensorFlow 2.5.0. We will also cherrypick this commit on TensorFlow 2.4.2, TensorFlow 2.3.3, TensorFlow 2.2.3 and TensorFlow 2.1.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by Yakun Zhang and Ying Wang of Baidu X-Team.",
            "published_date":"2021-05-21",
            "chain_len":2,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/6fd02f44810754ae7481838b6a67c5df7f909ca3",
            "commit_sha":"6fd02f44810754ae7481838b6a67c5df7f909ca3",
            "patch":"MULTI",
            "chain_ord":"['6fd02f44810754ae7481838b6a67c5df7f909ca3', '41727ff06111117bdf86b37db198217fd7a143cc']",
            "before_first_fix_commit":"{'6f432d6334edc93fd5af0070170def56b0413e8a'}",
            "last_fix_commit":"41727ff06111117bdf86b37db198217fd7a143cc",
            "chain_ord_pos":1.0,
            "commit_datetime":"04\/26\/2021, 23:40:49",
            "message":"Fix `tf.raw_ops.SparseAdd ` invalid memory access failure.\n\nPiperOrigin-RevId: 370568774\nChange-Id: I5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf",
            "author":"Amit Patankar",
            "comments":null,
            "stats":"{'additions': 5, 'deletions': 0, 'total': 5}",
            "files":"{'tensorflow\/core\/kernels\/sparse_add_op.cc': {'additions': 5, 'deletions': 0, 'changes': 5, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/6fd02f44810754ae7481838b6a67c5df7f909ca3\/tensorflow%2Fcore%2Fkernels%2Fsparse_add_op.cc', 'patch': '@@ -14,6 +14,7 @@ limitations under the License.\\n ==============================================================================*\/\\n \\n #include \"tensorflow\/core\/framework\/op_kernel.h\"\\n+#include \"tensorflow\/core\/framework\/op_requires.h\"\\n #include \"tensorflow\/core\/framework\/register_types.h\"\\n #include \"tensorflow\/core\/framework\/tensor.h\"\\n #include \"tensorflow\/core\/framework\/tensor_util.h\"\\n@@ -101,6 +102,10 @@ class SparseAddOp : public OpKernel {\\n     std::vector<T> out_values;\\n     const int num_dims = a_shape->dim_size(0);\\n \\n+    OP_REQUIRES(ctx, num_dims > 0,\\n+                errors::InvalidArgument(\"Invalid input_a shape. Received: \",\\n+                                        a_shape->DebugString()));\\n+\\n     \/\/ The input and output sparse tensors are assumed to be ordered along\\n     \/\/ increasing dimension number.\\n     int64 i = 0, j = 0;'}}",
            "message_norm":"fix `tf.raw_ops.sparseadd ` invalid memory access failure.\n\npiperorigin-revid: 370568774\nchange-id: i5f73b31c865f2948a1c8dfb7ebd22b3cfb6405bf",
            "language":"en",
            "entities":"[('fix', 'ACTION', ''), ('invalid memory access', 'SECWORD', ''), ('370568774', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/sparse_add_op.cc'])",
            "num_files":1.0
        },
        {
            "index":1932,
            "vuln_id":"GHSA-grw5-g9h2-wpg8",
            "cwe_id":"{'CWE-79'}",
            "score":6.8,
            "chain":"{'https:\/\/github.com\/wenzhixin\/bootstrap-table\/commit\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in bootstrap-table Bootstrap Tables XSS vulnerability with Table Export plug-in when exportOptions: htmlContent is true in GitHub repository wenzhixin\/bootstrap-table prior to 1.20.2. Disclosing session cookies, disclosing secure session data, exfiltrating data to third-parties.",
            "published_date":"2022-05-17",
            "chain_len":1,
            "project":"https:\/\/github.com\/wenzhixin\/bootstrap-table",
            "commit_href":"https:\/\/github.com\/wenzhixin\/bootstrap-table\/commit\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9",
            "commit_sha":"b4a1e5dd332be652e0bc376fd9256886cf4bbde9",
            "patch":"SINGLE",
            "chain_ord":"['b4a1e5dd332be652e0bc376fd9256886cf4bbde9']",
            "before_first_fix_commit":"{'55d3760df3d226ac1150d7ddcbfd0ff6bd1c53c2'}",
            "last_fix_commit":"b4a1e5dd332be652e0bc376fd9256886cf4bbde9",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/10\/2022, 02:59:07",
            "message":"Fixed XSS vulnerability bug by onCellHtmlData",
            "author":"zhixin",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 16, 'total': 20}",
            "files":"{'src\/extensions\/export\/bootstrap-table-export.js': {'additions': 4, 'deletions': 16, 'changes': 20, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/wenzhixin\/bootstrap-table\/raw\/b4a1e5dd332be652e0bc376fd9256886cf4bbde9\/src%2Fextensions%2Fexport%2Fbootstrap-table-export.js', 'patch': \"@@ -23,15 +23,7 @@ $.extend($.fn.bootstrapTable.defaults, {\\n   showExport: false,\\n   exportDataType: 'basic', \/\/ basic, all, selected\\n   exportTypes: ['json', 'xml', 'csv', 'txt', 'sql', 'excel'],\\n-  exportOptions: {\\n-    onCellHtmlData (cell, rowIndex, colIndex, htmlData) {\\n-      if (cell.is('th')) {\\n-        return cell.find('.th-inner').text()\\n-      }\\n-\\n-      return htmlData\\n-    }\\n-  },\\n+  exportOptions: {},\\n   exportFooter: false\\n })\\n \\n@@ -162,13 +154,9 @@ $.BootstrapTable = class extends $.BootstrapTable {\\n     $exportButtons.click(e => {\\n       e.preventDefault()\\n \\n-      const type = $(e.currentTarget).data('type')\\n-      const exportOptions = {\\n-        type,\\n-        escape: false\\n-      }\\n-\\n-      this.exportTable(exportOptions)\\n+      this.exportTable({\\n+        type: $(e.currentTarget).data('type')\\n+      })\\n     })\\n     this.handleToolbar()\\n   }\"}}",
            "message_norm":"fixed xss vulnerability bug by oncellhtmldata",
            "language":"en",
            "entities":"[('fixed', 'ACTION', ''), ('xss', 'SECWORD', ''), ('vulnerability', 'SECWORD', ''), ('bug', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/extensions\/export\/bootstrap-table-export.js'])",
            "num_files":1.0
        },
        {
            "index":1720,
            "vuln_id":"GHSA-ff28-f46g-r9g8",
            "cwe_id":"{'CWE-79'}",
            "score":5.4,
            "chain":"{'https:\/\/github.com\/gogs\/gogs\/commit\/bc77440b301ac8780698be91dff1ac33b7cee850'}",
            "dataset":"osv",
            "summary":"Cross-site Scripting in Gogs ### Impact\n\nThe malicious user is able to upload a crafted SVG file as the issue attachment to archive XSS. All installations [allow uploading SVG (`text\/xml`) files as issue attachments (non-default)](https:\/\/github.com\/gogs\/gogs\/blob\/e51e01683408e10b3dcd2ace65e259ca7f0fd61b\/conf\/app.ini#L283-L284) are affected.\n\n### Patches\n\nCorrectly setting the Content Security Policy for the serving endpoint. Users should upgrade to 0.12.7 or the latest 0.13.0+dev.\n\n### Workarounds\n\n[Disable uploading SVG files (`text\/xml`) as issue attachments](https:\/\/github.com\/gogs\/gogs\/blob\/e51e01683408e10b3dcd2ace65e259ca7f0fd61b\/conf\/app.ini#L283-L284).\n\n### References\n\nhttps:\/\/huntr.dev\/bounties\/34a12146-3a5d-4efc-a0f8-7a3ae04b198d\/\n\n### For more information\n\nIf you have any questions or comments about this advisory, please post on https:\/\/github.com\/gogs\/gogs\/issues\/6919.",
            "published_date":"2022-05-24",
            "chain_len":1,
            "project":"https:\/\/github.com\/gogs\/gogs",
            "commit_href":"https:\/\/github.com\/gogs\/gogs\/commit\/bc77440b301ac8780698be91dff1ac33b7cee850",
            "commit_sha":"bc77440b301ac8780698be91dff1ac33b7cee850",
            "patch":"SINGLE",
            "chain_ord":"['bc77440b301ac8780698be91dff1ac33b7cee850']",
            "before_first_fix_commit":"{'2a8f561c6413ed7683a3844a8ae6b68d30c0dd08'}",
            "last_fix_commit":"bc77440b301ac8780698be91dff1ac33b7cee850",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/03\/2022, 09:51:28",
            "message":"attachment: set CSP header in the serving endpoint (#6926)",
            "author":"Joe Chen",
            "comments":null,
            "stats":"{'additions': 1, 'deletions': 0, 'total': 1}",
            "files":"{'internal\/cmd\/web.go': {'additions': 1, 'deletions': 0, 'changes': 1, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/gogs\/gogs\/raw\/bc77440b301ac8780698be91dff1ac33b7cee850\/internal%2Fcmd%2Fweb.go', 'patch': '@@ -314,6 +314,7 @@ func runWeb(c *cli.Context) error {\\n \\t\\t\\t\\t}\\n \\t\\t\\t\\tdefer fr.Close()\\n \\n+\\t\\t\\t\\tc.Header().Set(\"Content-Security-Policy\", \"default-src \\'none\\'; style-src \\'unsafe-inline\\'; sandbox\")\\n \\t\\t\\t\\tc.Header().Set(\"Cache-Control\", \"public,max-age=86400\")\\n \\t\\t\\t\\tc.Header().Set(\"Content-Disposition\", fmt.Sprintf(`inline; filename=\"%s\"`, attach.Name))'}}",
            "message_norm":"attachment: set csp header in the serving endpoint (#6926)",
            "language":"en",
            "entities":"[('csp header', 'SECWORD', ''), ('#6926', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['internal\/cmd\/web.go'])",
            "num_files":1.0
        },
        {
            "index":2109,
            "vuln_id":"GHSA-hpv4-7p9c-mvfr",
            "cwe_id":"{'CWE-787', 'CWE-125'}",
            "score":7.1,
            "chain":"{'https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30'}",
            "dataset":"osv",
            "summary":"Heap buffer overflow in `FractionalAvgPoolGrad` ### Impact\nThe implementation for `tf.raw_ops.FractionalAvgPoolGrad` can be tricked into accessing data outside of bounds of heap allocated buffers:\n\n```python\nimport tensorflow as tf\n\ntf.raw_ops.FractionalAvgPoolGrad(\n  orig_input_tensor_shape=[0,1,2,3],\n  out_backprop = np.array([[[[541],[541]],[[541],[541]]]]),\n  row_pooling_sequence=[0, 0, 0, 0, 0],\n  col_pooling_sequence=[-2, 0, 0, 2, 0],\n  overlapping=True)\n```\n\nThe [implementation](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/f24faa153ad31a4b51578f8181d3aaab77a1ddeb\/tensorflow\/core\/kernels\/fractional_avg_pool_op.cc#L205) does not validate that the input tensor is non-empty. Thus, code constructs an empty `EigenDoubleMatrixMap` and then accesses this buffer with indices that are outside of the empty area.\n\n### Patches\nWe have patched the issue in GitHub commit [0f931751fb20f565c4e94aa6df58d54a003cdb30](https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30).\n\nThe fix will be included in TensorFlow 2.6.0. We will also cherrypick this commit on TensorFlow 2.5.1, TensorFlow 2.4.3, and TensorFlow 2.3.4, as these are also affected and still in supported range.\n\n### For more information\nPlease consult [our security guide](https:\/\/github.com\/tensorflow\/tensorflow\/blob\/master\/SECURITY.md) for more information regarding the security model and how to contact us with issues and questions.\n\n### Attribution\nThis vulnerability has been reported by members of the Aivul Team from Qihoo 360.",
            "published_date":"2021-08-25",
            "chain_len":1,
            "project":"https:\/\/github.com\/tensorflow\/tensorflow",
            "commit_href":"https:\/\/github.com\/tensorflow\/tensorflow\/commit\/0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "commit_sha":"0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "patch":"SINGLE",
            "chain_ord":"['0f931751fb20f565c4e94aa6df58d54a003cdb30']",
            "before_first_fix_commit":"{'55e763ffe2b348a61ab1c2fcfedc7bdf05c91990'}",
            "last_fix_commit":"0f931751fb20f565c4e94aa6df58d54a003cdb30",
            "chain_ord_pos":1.0,
            "commit_datetime":"08\/02\/2021, 20:03:44",
            "message":"Validate dimensions of input tensor in `FractionalAvgPoolGrad`\n\nPiperOrigin-RevId: 388286227\nChange-Id: Ieb7566155e92acc8993a2212c76deacadc0edc8a",
            "author":"Mihai Maruseac",
            "comments":null,
            "stats":"{'additions': 12, 'deletions': 0, 'total': 12}",
            "files":"{'tensorflow\/core\/kernels\/fractional_avg_pool_op.cc': {'additions': 12, 'deletions': 0, 'changes': 12, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/tensorflow\/tensorflow\/raw\/0f931751fb20f565c4e94aa6df58d54a003cdb30\/tensorflow%2Fcore%2Fkernels%2Ffractional_avg_pool_op.cc', 'patch': '@@ -271,6 +271,18 @@ class FractionalAvgPoolGradOp : public OpKernel {\\n     const int64_t in_rows = orig_input_tensor_shape_flat(1);\\n     const int64_t in_cols = orig_input_tensor_shape_flat(2);\\n     const int64_t in_depth = orig_input_tensor_shape_flat(3);\\n+    OP_REQUIRES(\\n+        context, in_batch != 0,\\n+        errors::InvalidArgument(\"Batch dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_rows != 0,\\n+        errors::InvalidArgument(\"Rows dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_cols != 0,\\n+        errors::InvalidArgument(\"Columns dimension of input must not be 0\"));\\n+    OP_REQUIRES(\\n+        context, in_depth != 0,\\n+        errors::InvalidArgument(\"Depth dimension of input must not be 0\"));\\n \\n     constexpr int tensor_in_and_out_dims = 4;\\n     \/\/ Transform orig_input_tensor_shape into TensorShape'}}",
            "message_norm":"validate dimensions of input tensor in `fractionalavgpoolgrad`\n\npiperorigin-revid: 388286227\nchange-id: ieb7566155e92acc8993a2212c76deacadc0edc8a",
            "language":"en",
            "entities":"[('validate', 'ACTION', ''), ('388286227', 'SHA', 'generic_sha')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['tensorflow\/core\/kernels\/fractional_avg_pool_op.cc'])",
            "num_files":1.0
        },
        {
            "index":3386,
            "vuln_id":"GHSA-x6rc-54xp-ccxx",
            "cwe_id":"{'CWE-611'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/apache\/activemq-artemis\/commit\/48d9951d879e0c8cbb59d4b64ab59d53ef88310d'}",
            "dataset":"osv",
            "summary":"Improper Restriction of XML External Entity Reference in Apache ActiveMQ XML external entity (XXE) vulnerability in the XPath selector component in Artemis ActiveMQ before commit 48d9951d879e0c8cbb59d4b64ab59d53ef88310d allows remote attackers to have unspecified impact via unknown vectors.",
            "published_date":"2022-05-14",
            "chain_len":1,
            "project":"https:\/\/github.com\/apache\/activemq-artemis",
            "commit_href":"https:\/\/github.com\/apache\/activemq-artemis\/commit\/48d9951d879e0c8cbb59d4b64ab59d53ef88310d",
            "commit_sha":"48d9951d879e0c8cbb59d4b64ab59d53ef88310d",
            "patch":"SINGLE",
            "chain_ord":"['48d9951d879e0c8cbb59d4b64ab59d53ef88310d']",
            "before_first_fix_commit":"{'879f4a6bb3b15dfc3d00bcde2d982194bd2dadc4'}",
            "last_fix_commit":"48d9951d879e0c8cbb59d4b64ab59d53ef88310d",
            "chain_ord_pos":1.0,
            "commit_datetime":"05\/21\/2015, 09:49:45",
            "message":"ActiveMQ6-112 Add defaults to the selector parser doc builder",
            "author":"Martyn Taylor",
            "comments":null,
            "stats":"{'additions': 14, 'deletions': 4, 'total': 18}",
            "files":"{'artemis-selector\/src\/main\/java\/org\/apache\/activemq\/artemis\/selector\/filter\/XalanXPathEvaluator.java': {'additions': 14, 'deletions': 4, 'changes': 18, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/apache\/activemq-artemis\/raw\/48d9951d879e0c8cbb59d4b64ab59d53ef88310d\/artemis-selector%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2Fartemis%2Fselector%2Ffilter%2FXalanXPathEvaluator.java', 'patch': '@@ -18,6 +18,7 @@\\n \\n import javax.xml.parsers.DocumentBuilder;\\n import javax.xml.parsers.DocumentBuilderFactory;\\n+import javax.xml.parsers.ParserConfigurationException;\\n import java.io.StringReader;\\n \\n import org.apache.xpath.CachedXPathAPI;\\n@@ -56,9 +57,7 @@ protected boolean evaluate(InputSource inputSource)\\n    {\\n       try\\n       {\\n-         DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\\n-         factory.setNamespaceAware(true);\\n-         DocumentBuilder dbuilder = factory.newDocumentBuilder();\\n+         DocumentBuilder dbuilder = createDocumentBuilder();\\n          Document doc = dbuilder.parse(inputSource);\\n \\n          \/\/An XPath expression could return a true or false value instead of a node.\\n@@ -75,11 +74,22 @@ protected boolean evaluate(InputSource inputSource)\\n             NodeIterator iterator = cachedXPathAPI.selectNodeIterator(doc, xpath);\\n             return (iterator.nextNode() != null);\\n          }\\n-\\n       }\\n       catch (Throwable e)\\n       {\\n          return false;\\n       }\\n    }\\n+\\n+   private DocumentBuilder createDocumentBuilder() throws ParserConfigurationException\\n+   {\\n+      DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();\\n+      factory.setNamespaceAware(true);\\n+\\n+      factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-general-entities\", false);\\n+      factory.setFeature(\"http:\/\/xml.org\/sax\/features\/external-parameter-entities\", false);\\n+      factory.setFeature(\"http:\/\/apache.org\/xml\/features\/disallow-doctype-decl\", true);\\n+\\n+      return factory.newDocumentBuilder();\\n+   }\\n }'}}",
            "message_norm":"activemq6-112 add defaults to the selector parser doc builder",
            "language":"en",
            "entities":"[('add', 'ACTION', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['artemis-selector\/src\/main\/java\/org\/apache\/activemq\/artemis\/selector\/filter\/XalanXPathEvaluator.java'])",
            "num_files":1.0
        },
        {
            "index":3498,
            "vuln_id":"GHSA-xvm2-9xvc-hx7f",
            "cwe_id":"{'CWE-611'}",
            "score":9.8,
            "chain":"{'https:\/\/github.com\/monitorjbl\/excel-streaming-reader\/commit\/0749c7b9709db078ccdeada16d46a34bc2910c73'}",
            "dataset":"osv",
            "summary":"Improper Restriction of XML External Entity Reference in com.monitorjbl:xlsx-streamer ### Impact\nPrior to xlsx-streamer 2.1.0, the XML parser that was used did not apply all the necessary settings to prevent XML Entity Expansion issues.\n\n### Patches\nUpgrade to version 2.1.0.\n\n### Workarounds\nNo known workaround.\n\n### References\nhttps:\/\/github.com\/monitorjbl\/excel-streaming-reader\/commit\/0749c7b9709db078ccdeada16d46a34bc2910c73\n\n### For more information\nIf you have any questions or comments about this advisory:\n* Open an issue in [monitorjbl\/excel-streaming-reader](https:\/\/github.com\/monitorjbl\/excel-streaming-reader)",
            "published_date":"2022-03-02",
            "chain_len":1,
            "project":"https:\/\/github.com\/monitorjbl\/excel-streaming-reader",
            "commit_href":"https:\/\/github.com\/monitorjbl\/excel-streaming-reader\/commit\/0749c7b9709db078ccdeada16d46a34bc2910c73",
            "commit_sha":"0749c7b9709db078ccdeada16d46a34bc2910c73",
            "patch":"SINGLE",
            "chain_ord":"['0749c7b9709db078ccdeada16d46a34bc2910c73']",
            "before_first_fix_commit":"{'62470065c35871076ad14480d2df26d9c5c3700a'}",
            "last_fix_commit":"0749c7b9709db078ccdeada16d46a34bc2910c73",
            "chain_ord_pos":1.0,
            "commit_datetime":"11\/10\/2018, 01:17:35",
            "message":"Updating readme for security release",
            "author":"Taylor Jones",
            "comments":null,
            "stats":"{'additions': 6, 'deletions': 2, 'total': 8}",
            "files":"{'README.md': {'additions': 6, 'deletions': 2, 'changes': 8, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/monitorjbl\/excel-streaming-reader\/raw\/0749c7b9709db078ccdeada16d46a34bc2910c73\/README.md', 'patch': \"@@ -1,5 +1,9 @@\\n [![Run Status](https:\/\/api.shippable.com\/projects\/55cfbb00edd7f2c052a980a5\/badge?branch=master)](https:\/\/app.shippable.com\/projects\/55cfbb00edd7f2c052a980a5)\\n \\n+# !!! Security Alert !!!\\n+\\n+Update to the latest version (2.1.0) **as soon as possible** to fix a critical vulnerability. The Xerxes XML parsing library that Excel Streaming Reader uses defaulted to allowing [entity expansion](https:\/\/www.owasp.org\/index.php\/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet), which could be exploited by an attacker to read arbitrary data from your system. The latest versions of Excel Streaming Reader do not allow this and will throw a `ParsingException` if a workbook contains an XML document with an entity declaration.\\n+\\n # Excel Streaming Reader\\n \\n If you've used [Apache POI](http:\/\/poi.apache.org) in the past to read in Excel files, you probably noticed that it's not very memory efficient. Reading in an entire workbook will cause a severe memory usage spike, which can wreak havoc on a server. \\n@@ -23,7 +27,7 @@ To use it, add this to your POM:\\n   <dependency>\\n     <groupId>com.monitorjbl<\/groupId>\\n     <artifactId>xlsx-streamer<\/artifactId>\\n-    <version>2.0.0<\/version>\\n+    <version>2.1.0<\/version>\\n   <\/dependency>\\n <\/dependencies>  \\n ```\\n@@ -106,7 +110,7 @@ This library uses SLF4j logging. This is a rare use case, but you can plug in yo\\n   <dependency>\\n     <groupId>com.monitorjbl<\/groupId>\\n     <artifactId>xlsx-streamer<\/artifactId>\\n-    <version>2.0.0<\/version>\\n+    <version>2.1.0<\/version>\\n   <\/dependency>\\n   <dependency>\\n     <groupId>org.slf4j<\/groupId>\"}}",
            "message_norm":"updating readme for security release",
            "language":"en",
            "entities":"[('updating', 'ACTION', ''), ('security', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['README.md'])",
            "num_files":1.0
        },
        {
            "index":1123,
            "vuln_id":"GHSA-8434-v7xw-8m9x",
            "cwe_id":"{'CWE-88', 'CWE-78'}",
            "score":9.3,
            "chain":"{'https:\/\/github.com\/dwisiswant0\/apkleaks\/commit\/a966e781499ff6fd4eea66876d7532301b13a382'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Argument Delimiters in a Decompiling Package Process in APKLeaks APKLeaks prior to v2.0.4 allows remote authenticated attackers to execute arbitrary OS commands via package name inside the application manifest.\n\n### Impact\n\nAn authenticated attacker could include arguments that allow unintended commands or code to be executed, allow sensitive data to be read or modified, or could cause other unintended behavior through malicious package names.\n\n\n### References\n\n- a966e781499ff6fd4eea66876d7532301b13a382\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Email me at [me@dw1.io](mailto:me@dw1.io)",
            "published_date":"2022-01-21",
            "chain_len":1,
            "project":"https:\/\/github.com\/dwisiswant0\/apkleaks",
            "commit_href":"https:\/\/github.com\/dwisiswant0\/apkleaks\/commit\/a966e781499ff6fd4eea66876d7532301b13a382",
            "commit_sha":"a966e781499ff6fd4eea66876d7532301b13a382",
            "patch":"SINGLE",
            "chain_ord":"['a966e781499ff6fd4eea66876d7532301b13a382']",
            "before_first_fix_commit":"{'8577b7af6224bf0a5455b552963c46721308d2ff'}",
            "last_fix_commit":"a966e781499ff6fd4eea66876d7532301b13a382",
            "chain_ord_pos":1.0,
            "commit_datetime":"03\/14\/2021, 15:25:42",
            "message":"Escapes decompiling arguments",
            "author":"Dwi Siswanto",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 2, 'total': 6}",
            "files":"{'apkleaks\/apkleaks.py': {'additions': 4, 'deletions': 2, 'changes': 6, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/dwisiswant0\/apkleaks\/raw\/a966e781499ff6fd4eea66876d7532301b13a382\/apkleaks%2Fapkleaks.py', 'patch': '@@ -2,6 +2,7 @@\\n from apkleaks.colors import clr\\n from contextlib import closing\\n from distutils.spawn import find_executable\\n+from pipes import quote\\n from pyaxmlparser import APK\\n from urllib.request import urlopen\\n from zipfile import ZipFile\\n@@ -84,8 +85,9 @@ def decompile(self):\\n \\t\\t\\t\\t\\tclasses.write(zipped.read(\"classes.dex\"))\\n \\t\\t\\texcept Exception as e:\\n \\t\\t\\t\\tsys.exit(self.writeln(str(e), clr.WARNING))\\n-\\t\\tdec = \"%s %s -d %s --deobf\" % (self.jadx, dex, self.tempdir)\\n-\\t\\tos.system(dec)\\n+\\t\\targs = [self.jadx, dex, \"-d\", self.tempdir, \"--deobf\"]\\n+\\t\\tcomm = \"%s\" % (\" \".join(quote(arg) for arg in args))\\n+\\t\\tos.system(comm)\\n \\t\\treturn self.tempdir\\n \\n \\tdef unique(self, list):'}}",
            "message_norm":"escapes decompiling arguments",
            "language":"ca",
            "entities":"[('escapes', 'SECWORD', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['apkleaks\/apkleaks.py'])",
            "num_files":1.0
        },
        {
            "index":973,
            "vuln_id":"GHSA-763g-fqq7-48wg",
            "cwe_id":"{'CWE-611'}",
            "score":5.3,
            "chain":"{'https:\/\/github.com\/checkstyle\/checkstyle\/commit\/c46a16d177e6797895b195c288ae9a9a096254b8'}",
            "dataset":"osv",
            "summary":"XML external entity (XXE) processing ('external-parameter-entities' feature was not fully disabled)) Due to an incomplete fix for [CVE-2019-9658](https:\/\/cve.mitre.org\/cgi-bin\/cvename.cgi?name=CVE-2019-9658), checkstyle was still vulnerable to XML External Entity (XXE) Processing.\n\n### Impact\n\n#### User: Build Maintainers\n\nThis vulnerability probably doesn't impact Maven\/Gradle users as, in most cases, these builds are processing files that are trusted, or pre-vetted by a pull request reviewer before being run on internal CI infrastructure.\n\n#### User: Static Analysis as a Service\n\nIf you operate a site\/service that parses \"untrusted\" Checkstyle XML configuration files, you are vulnerable to this and should patch.\n\nNote from the discoverer of the original CVE-2019-9658:\n\n> While looking at a few companies that run Checkstyle\/PMD\/ect... as a service I notice that it's a common pattern to run the static code analysis tool inside of a Docker container with the following flags:\n> ```\n> --net=none \\\n> --privileged=false \\\n> --cap-drop=ALL\n> ```\n> Running the analysis in Docker has the advantage that there should be no sensitive local file information that XXE can exfiltrate from the container. Additionally, these flags prevent vulnerabilities in static analysis tools like Checkstyle from being used to exfiltrate data via XXE or to perform SSRF.\n> \\- [Jonathan Leitschuh](https:\/\/twitter.com\/jlleitschuh)\n\n### Patches\n_Has the problem been patched? What versions should users upgrade to?_\n\nPatched, will be released with version 8.29 at 26 Jan 2020.\n\n### Workarounds\n_Is there a way for users to fix or remediate the vulnerability without upgrading?_\n\nNo workaround are available\n\n### References\n\n - [CWE-611: Improper Restriction of XML External Entity Reference](https:\/\/cwe.mitre.org\/data\/definitions\/611.html)\n - GitHub Issue https:\/\/github.com\/checkstyle\/checkstyle\/issues\/7468\n\n### For more information\n\nIf you have any questions or comments about this advisory:\n* Open an issue in https:\/\/github.com\/checkstyle\/checkstyle\/issues",
            "published_date":"2020-01-31",
            "chain_len":1,
            "project":"https:\/\/github.com\/checkstyle\/checkstyle",
            "commit_href":"https:\/\/github.com\/checkstyle\/checkstyle\/commit\/c46a16d177e6797895b195c288ae9a9a096254b8",
            "commit_sha":"c46a16d177e6797895b195c288ae9a9a096254b8",
            "patch":"SINGLE",
            "chain_ord":"['c46a16d177e6797895b195c288ae9a9a096254b8']",
            "before_first_fix_commit":"{'dfed7949c3714dceb0318e4381f00e7fb5d5dfe3'}",
            "last_fix_commit":"c46a16d177e6797895b195c288ae9a9a096254b8",
            "chain_ord_pos":1.0,
            "commit_datetime":"01\/19\/2020, 01:32:28",
            "message":"Issue #7468: disable 'external-parameter-entities' feature by default",
            "author":"Roman Ivanov",
            "comments":null,
            "stats":"{'additions': 4, 'deletions': 0, 'total': 4}",
            "files":"{'src\/main\/java\/com\/puppycrawl\/tools\/checkstyle\/XmlLoader.java': {'additions': 4, 'deletions': 0, 'changes': 4, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/checkstyle\/checkstyle\/raw\/c46a16d177e6797895b195c288ae9a9a096254b8\/src%2Fmain%2Fjava%2Fcom%2Fpuppycrawl%2Ftools%2Fcheckstyle%2FXmlLoader.java', 'patch': '@@ -124,6 +124,9 @@ public static final class LoadExternalDtdFeatureProvider {\\n         \/** Feature that enables including external general entities in XML files. *\/\\n         public static final String EXTERNAL_GENERAL_ENTITIES =\\n                 \"http:\/\/xml.org\/sax\/features\/external-general-entities\";\\n+        \/** Feature that enables including external parameter entities in XML files. *\/\\n+        public static final String EXTERNAL_PARAMETER_ENTITIES =\\n+                \"http:\/\/xml.org\/sax\/features\/external-parameter-entities\";\\n \\n         \/** Stop instances being created. **\/\\n         private LoadExternalDtdFeatureProvider() {\\n@@ -146,6 +149,7 @@ public static void setFeaturesBySystemProperty(SAXParserFactory factory)\\n \\n             factory.setFeature(LOAD_EXTERNAL_DTD, enableExternalDtdLoad);\\n             factory.setFeature(EXTERNAL_GENERAL_ENTITIES, enableExternalDtdLoad);\\n+            factory.setFeature(EXTERNAL_PARAMETER_ENTITIES, enableExternalDtdLoad);\\n         }\\n \\n     }'}}",
            "message_norm":"issue #7468: disable 'external-parameter-entities' feature by default",
            "language":"fr",
            "entities":"[('#7468', 'ISSUE', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['src\/main\/java\/com\/puppycrawl\/tools\/checkstyle\/XmlLoader.java'])",
            "num_files":1.0
        },
        {
            "index":763,
            "vuln_id":"GHSA-66gw-5xpf-gfp5",
            "cwe_id":"{'CWE-79'}",
            "score":6.1,
            "chain":"{'https:\/\/github.com\/ipython\/ipython\/commit\/c2078a53543ed502efd968649fee1125e0eb549c', 'https:\/\/github.com\/ipython\/ipython\/commit\/7222bd53ad089a65fd610fab4626f9d0ab47dfce'}",
            "dataset":"osv",
            "summary":"Improper Neutralization of Input During Web Page Generation in IPython Cross-site scripting (XSS) vulnerability in IPython before 3.2 allows remote attackers to inject arbitrary web script or HTML via vectors involving JSON error messages and the \/api\/notebooks path.",
            "published_date":"2022-05-13",
            "chain_len":2,
            "project":"https:\/\/github.com\/ipython\/ipython",
            "commit_href":"https:\/\/github.com\/ipython\/ipython\/commit\/c2078a53543ed502efd968649fee1125e0eb549c",
            "commit_sha":"c2078a53543ed502efd968649fee1125e0eb549c",
            "patch":"MULTI",
            "chain_ord":"['7222bd53ad089a65fd610fab4626f9d0ab47dfce', 'c2078a53543ed502efd968649fee1125e0eb549c']",
            "before_first_fix_commit":"{'64966ea2ae0d44a9c059efcb299db66cbc66ef04'}",
            "last_fix_commit":"c2078a53543ed502efd968649fee1125e0eb549c",
            "chain_ord_pos":2.0,
            "commit_datetime":"06\/22\/2015, 04:12:34",
            "message":"Set content type in json_error to application\/json",
            "author":"Kyle Kelley",
            "comments":null,
            "stats":"{'additions': 2, 'deletions': 0, 'total': 2}",
            "files":"{'IPython\/html\/base\/handlers.py': {'additions': 2, 'deletions': 0, 'changes': 2, 'status': 'modified', 'raw_url': 'https:\/\/github.com\/ipython\/ipython\/raw\/c2078a53543ed502efd968649fee1125e0eb549c\/IPython%2Fhtml%2Fbase%2Fhandlers.py', 'patch': '@@ -339,6 +339,7 @@ def wrapper(self, *args, **kwargs):\\n             message = e.log_message\\n             self.log.warn(message)\\n             self.set_status(e.status_code)\\n+            self.set_header(\\'Content-Type\\', \\'application\/json\\')\\n             self.finish(json.dumps(dict(message=message)))\\n         except Exception:\\n             self.log.error(\"Unhandled error in API request\", exc_info=True)\\n@@ -348,6 +349,7 @@ def wrapper(self, *args, **kwargs):\\n             self.set_status(status)\\n             tb_text = \\'\\'.join(traceback.format_exception(t, value, tb))\\n             reply = dict(message=message, traceback=tb_text)\\n+            self.set_header(\\'Content-Type\\', \\'application\/json\\')\\n             self.finish(json.dumps(reply))\\n         else:\\n             return result'}}",
            "message_norm":"set content type in json_error to application\/json",
            "language":"en",
            "entities":"[('json_error', 'FLAW', '')]",
            "classification_level_1":null,
            "classification_level_2":null,
            "list_files":"dict_keys(['IPython\/html\/base\/handlers.py'])",
            "num_files":1.0
        }
    ]
}